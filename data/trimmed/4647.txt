Page1一种基于平均场的无线自组织网络时钟同步方法孙建华高小杰李胆胆左颖洪亮(西北工业大学自动化学院西安710072)摘要时钟同步是无线自组织网络的一项重要支撑技术,是协议运行、节能管理、数据融合和协同工作的必要前提.文中首先给出了无线自组织网络中节点之间时钟偏差的特性分析,并设计了卡尔曼滤波器,用于精确地估计邻居节点之间的时钟偏差.然后提出了一种基于平均场的全分布式多跳时钟同步方法.该方法不维护特殊节点,基于平均场理论,通过节点之间的共同作用建立虚拟时钟基准;将节点之间的时钟偏差映射为团势能,在此基础上建立了基于伊辛模型能量函数描述的全网时钟同步平均场模型;最后,采用并行能量最小化的方法实现全网时钟分布式同步.仿真结果表明所提出的解决方案可以实现高精度的全局时钟同步,并且具有低开销、快速收敛、健壮、可扩展的特点.关键词时钟同步;卡尔曼滤波器;平均场;团势能;伊辛模型;能量最小化;物联网;车联网1引言时钟同步是无线自组织网络(例如无线传感器Page2都需要高精度的同步时钟支持才能正常开展[1-2].然而,由于无线自组织网络中没有网络基础设施,难以实现时钟基准,并且无线信道中存在不对称时延,网络节点之间的时钟偏差难以准确测量,所以无线自组织网络中的时钟同步一直是一个难题.近年来,时钟同步问题正逐渐成为无线自组织网络领域中的一个研究热点.国内外学者均提出了不少解决方案.总体来讲,现有的时钟同步方案可分为主从同步方式和互同步方式两大类.其中在主从同步方式中,将会选定一个特殊的节点作为参考时钟,并以此节点为基准将网络规划成一个生成树或簇.网络中的节点通过与其父节点交换时间戳,进行主从同步操作,逐跳达到与基准节点的同步.这种时钟同步方法的主要不足在于存在单点失效问题,算法的鲁棒性不高;而且建立和维护生成树或簇的开销比较大[3].传感器网络时钟同步协议TPSN(TimeSynchronizationProtocolforSensorNetwork)[4]和成对广播同步PBS(PairwiseBroadcastSynchronization)[5]是其中具有代表性的方案.而另一种提出较早、影响较广的RBS(ReferenceBroadcastSynchronization)[6]同步方法则是互同步方式的代表性解决方案.与主从同步不同,RBS算法虽然也有主节点,但节点不与主节点进行同步.主节点的作用是发送参考广播,接收到此参考广播包的节点记录收到广播包的时间戳,并与自己的邻居节点交换时间戳,从而实现邻居节点之间的互同步.这种同步方案也被称之为“接收者-接收者”方法,它消除了发送处理时延、信道接入时延、发射时延和传播时延,有效提高了时钟同步的精度.但也存在一些不足:首先RBS需要参考时钟节点周期性地发送参考广播,这将会产生大量冗余的广播消息;其次,无线网络中节点需要定期在唤醒状态和休眠状态之间切换以节省能量,这明显不能满足RBS在广播过程中需要所有节点保持活跃状态的要求;再次,只有一个邻居节点的悬挂节点在RBS中无法实现同步.无线自组织网络是一种无通信基础设施支持的特殊网络,不存在中心节点,而且具有动态网络拓扑结构.因此,不依赖于特殊节点的全分布式时钟同步方案显然更适合于无线自组织网络.近年来提出了许多不需要特殊节点的全分布式时钟同步方案.Simeone等人[1]对分布式无线传感器网络时钟同步给出了一个很好的综述.在此之后,许多基于平均一致性方法的时钟同步方案被相继提出.这些方案可以分为两大类,分别是异步方式[7-12]和同步方式[13-15].文献[11]给出了异步方式的分布式平均一致性时间同步协议DCTS(DistributedConsensusTimingSynchronization)的性能分析,分析结论表明DCTS同步性能并不是最优的,当存在不确定性时延时,无法达到平均一致,时钟同步性能将会恶化.最近,又提出了一些基于信念传播BP(BeliefPropagation)的分布式时钟同步方法[3,16].该方法将节点之间的时钟偏差作为边缘分布,以信念传播计算边缘分布的方法求相邻节点之间的时钟偏差,进而实现全网时钟同步.仿真结果表明该方案性能优于一致平均算法.但Leng等人[16]假设消息时延是相互独立并且同分布的高斯随机变量,而通过我们的实验测试,这种假设在很多环境下并不成立.高斯分布只适合“接收者-接收者”同步方式[6].文献[7]提出的异步平均时间同步协议ATS(AverageTimeSynch)也存在与此相同的问题.文献[9]提出一种采用平均一致思路的ATSP(AverageTimeSynchronizationProtocol)协议,其采用点到点通讯方式,每次迭代过程中只与一个一跳邻居节点进行一致性运算,同步时间较长.而且当出现节点移动或节点损失时,会造成同步过程较大的波动,系统的鲁棒性不强.此外该方法采用双向报文交换方式,通过3次握手交换6个时间戳来计算两点之间时延,同步所需迭代次数较多.文献[13]提出一种同步方式的梯队时间同步协议GTSP(GradientTimeSynchronizationProtocol),其主要思想是本地节点每次广播本地时钟,并将获得的所有邻居时钟值与本地时钟值取平均值作为本地时钟值更新.与本文时钟同步方法不同的是,其忽略报文传递过程中的传输延迟,直接利用报文中的邻居时钟值,因此每次迭代时所利用的邻居时钟并不准确.除上述解决方案外,一些基于成对“接收者-接收者”方式的时钟同步方案也被相继提出,如文献[17]提出的相对参考接收者/接收者时钟同步协议R4Syn(RelativeReferencelessReceiver/ReceiverSynchronization)仅仅估计单跳邻居间的时钟差值,并不对节点的时钟进行调整,多跳的同步也只是根据应用需要才执行,因此该方案并没有达到真正意义上的全局时钟同步.针对上述无线自组织网络中时钟同步方案存在的不足,本文提出了一种基于平均场理论的分布式时钟同步方案MFSP(MeanFieldbasedSynchroni-zationProtocol).该方案中每个节点只需与其一跳Page3邻居通信,并各自独立地进行同步计算.采用广播方式实现双向时间戳交换,基于卡尔曼滤波算法对时钟偏差进行精确估计;基于伊辛模型能量函数描述时钟同步模型,基于平均场理论确定全网虚拟时钟基准,采用并行能量最小化的方法实现全网时钟分布式同步.本文方案具有低开销、快速收敛、健壮、可扩展的特点.本文所采用的平均场方法目前在时钟同步算法中尚没有应用,与之相类似的方法是基于一致性的时钟同步算法.基于一致性的时钟同步算法与本文方法相比,具有如下区别:(1)大部分一致性同步算法中没有考虑传输时延,而传输时延的存在将极大地影响一致性同步算法的同步效果[11].文献[18]虽然考虑了时延,但认为所有时延服从高斯分布,且均值相同,这种方法在时延不均衡的网络中无法适用;(2)大部分一致性同步算法仅在一对节点之间进行一致性运算,造成收敛速度较慢;(3)一致性同步算法只是进行平均运算,当具有较大时延的节点加入网络时,会造成较大的时延波动.而本文提出的方法在此3个方面有所改善.本文第2节对无线网络中的时延特性进行分析,提出一个基于卡尔曼滤波器的时延滤波算法,用于准确估计相邻节点之间的时钟偏差;第3节给出基于平均场的时钟同步问题模型,并提出全分布式时钟同步算法;第4节通过仿真对提出的分布式时钟同步算法的性能进行评估和分析;第5节对全文进行总结.2时钟偏差估计2.1时钟同步模型在讨论全分布式全局时钟同步之前,首先我们需要分析一下两个节点之间的时钟关系.我们可以给出节点i在t时刻的本地时钟值C为其中参数θi,fi分别被称作时钟偏差和时钟频偏[2].根据式(1),网络中的节点i和j之间的时钟具有如下关系:其中θi,j和fi,j分别代表节点i和j之间的相对时钟偏差和时钟相对频偏.如果节点i和j之间的时钟达到了完全同步,则θi,j=0,fi,j=1.时钟同步的目标就是精确地估计这两个参数,使得任意两个节点之间的时钟达到完全同步.时钟频偏受诸如温度、湿度、电压、设备老化等环境因素影响,因此比较难掌控或调整.因此许多现有的同步方案只是估计时钟偏差,通过周期性的双向时间戳交换计算获得时钟偏差,并依此调整本地时钟达到时钟同步,本文也采取这种策略.2.2双向时间戳交换双向时间戳交换是估计时钟偏差的经典策略.假定节点i需要与节点j进行同步,双向时间戳交换机制如图1所示.图1节点i和j之间的双向时间戳交换过程在第k轮次的双向时间戳交换过程中,节点i在真实时刻t1,k将携带本地时钟Ci(t1,k)的消息发送给节点j.节点j在真实时刻t2,k接收到该消息,并标记自己本地时间戳Cj(t2,k).紧接着,节点j在真实时刻t3,k回复一个携带时间戳Cj(t2,k)和Cj(t3,k)的消息给节点i.最后节点i在本地时钟Ci(t4,k)接收到该回复消息.以上过程,可以描述如下:其中:θi,j表示节点i和j之间的相对时钟偏差;DelayF,k和DelayB,k分别表示在消息传输时延中从节点i到j的时延(前向时延)和从节点j到i的时延(反向时延).根据式(3)、(4),如果双向时延是对称的,即DelayF,k与DelayB,k相等,那么可以精确地计算出θi,j.但在无线网络中,双向时延是不对称且不稳定的,因此为了提高时钟同步精度,我们需要分析传输时延的组成,并寻找出一种能够减少不对称时延影响的解决方案.2.3802.11不对称时延分析时钟同步之所以存在同步误差,其根本原因是在Page4时间戳交换过程中存在传输时延.通常情况下消息传递过程中的时延可以由以下6个部分组成[19-20]:(1)发送处理时延.从应用层产生数据到在MAC层封包完成的时间,受操作系统和当前处理器负载的影响.(2)信道接入时延.MAC协议获取空闲信道的等待时间,受当前网络负载影响,并且根据CSMA/CA机制特点变化.(3)发射时延.在物理层发送数据帧的时间,受数据帧长度和物理层发送速率影响.(4)传播时延.数据帧在信道中传输所产生的时延,与通信节点间的距离有关.由于无线传感器网络节点之间的距离一般在100m以内,因此传播时延不足1μs,通常可以忽略.但当节点之间距离较远或同步精度要求非常高时,该部分时延是需要纳入计算的.(5)接收时延.在物理层完整接收数据帧所耗费的时间,这部分时延通常与发射时延重叠.(6)接收处理时延.节点处理数据帧所花费的时间,包括将MAC层的帧依次解封装,提取出应用层数据,并交给相应应用层进程的时延.其特性与发送处理时延基本相同.这些传输时延根据其统计特性可以分为确定性时延和不确定性时延两大类[2].不确定性时延是影响同步精度的主要原因,已经提出了一些统计模型用于描述不确定性时延[2].需要指出的是不确定性时延依赖各种变化因素,单一的模型无法对它进行准确的描述.目前,802.11系列协议是应用最为广泛的无线网络标准,因此本文仅对802.11系列中的不确定性时延进行分析.在802.11中产生不确定性时延的构成因素是由DCF(DistributedCoordina-tionFunction)机制造成的信道接入时延.在使用DCF的802.11无线传输过程中,有以下两条基本规则[21]:(1)如果信道空闲,并且信道空闲时间长度大于DIFS,传输将立即进行.(2)如果信道忙碌,发送站点必须监听该信道,直到信道重新恢复空闲,并且空闲时间大于DIFS,则发送节点进入二进制指数退避过程.节点必须要等待一个被称为竞争窗口CW(ContentionWindow)的随机退避时间,这个竞争窗口可以被分解为若干个时隙aSlotTime.时隙的大小由物理层决定,随机退避时间BackoffTime的大小由式(5)决定.其中,随机数Random大小限制在0~CW范围内,并且被写入退避计数器中.当每一个时隙结束时,随机退避计数器减1.当计数器减小为0时,所要发送的帧就会在下一个空闲时隙中被发送出去.每当出现发送失败时(例如存在传输冲突),CW以2的指数速度增加,重新进入退避侦听状态,直到发送成功或者超时.因此信道接入时延取决于802.11网络中当前的信道状态.文献[22]对802.11无线自组织网络中的接入时延进行了分析,给出了分析模型.时钟同步算法可以在OSI参考模型的每个层中实现,越靠近物理层,不确定性时延越小,可获得的时钟同步精度越高.如果使用基于硬件时间戳的方式,802.11中的接入时延将可以被忽略,能够获得较高精度的时钟同步.文献[23]选择了TX_RDY和MD_RDY上升沿作为时间戳的触发源,其延时抖动可以控制到200ns以内.但是目前常用的802.11芯片并不支持硬件时间戳,采用硬件时间戳必然会增加网络实施的成本.因此我们使用软件时间戳来估计两个相邻节点间的时钟偏差.2.4基于卡尔曼滤波的时延滤波算法为了实现全网的时钟同步,我们首先需要准确计算邻居节点间的时钟偏差.如前所述,不对称时延是实现高精度时钟同步的主要影响因素.因此我们设计了一种卡尔曼滤波器来获取高精度的时钟偏差.我们将时钟定义为状态变量x,以第k次同步过程为例,我们可以根据式(3)、(4)定义时钟状态方程如下:式(6)减去式(7)可以得到x(k)={[t2(k)-t1(k)]-[t4(k)-t3(k)]}/2-我们定义z(k)={[t2(k)-t1(k)]-[t4(k)-t3(k)]}/2(9)于是,我们可以得到卡尔曼滤波器的观测方程:其中d(k)表示两个邻居节点间的双向时延差值的二分之一.显然,前向时延和后向时延是独立同分布的随机变量.我们使用相同大小的广播消息来计算时延,并且传输过程中不使用RTS(RequestToSend)、CTS(ClearToSend)和ACK(Acknowledge-Page5ment)帧.在这种情况下,前向和后向的不对称时延主要是由于依赖信道忙碌状态的二进制指数后退BEB(BinaryExponentialBackoff)算法造成的接入时延.文献[24]的仿真与实验结果表明,在网络节点个数和帧长度固定的情况下,信道接入时延的均值和方差是确定的.尽管在一次往返通信中信道接入时延是不对称的,但是根据大数定律,在样本数量充分大的条件下,我们可以认为信道接入时延是对称的,因此传输时延也可以认为是对称的,这种情况下可以假设d(k)符合高斯分布N(0,σ2delay代表单向时延的方差.仿真和实验结果表明这σ2种假设是合理的.状态变量x是时钟偏差,根据时钟偏差的定义,x(k)也可以按下式计算:由于时钟晶振总会受到环境的影响而发生频率偏移,所以本地时钟会逐渐偏移真实时间.频率偏移造成的时钟抖动值通常在每秒1~100μs范围内.文献[25]进行了大量的实验,通过统计分析验证了这种时钟抖动符合均值为0的标准正态分布.时钟抖动的原因主要是晶振受到环境和器件老化的影响,其中环境温度是主要原因[26].在一般的无线自组织网络中,节点工作在大致相同的环境中,并且具有相同的结构.因此在本文中,我们可以合理地假定每个节点均采用相同的时钟晶振,工作在大致相同的环境,所以每个节点的时钟抖动是独立同分布的随机变量.因此我们可以得到Ci(k+1)=Ci(k)+T+εi(k),εi(k)~N(0,σ2)(13)Cj(k+1)=Cj(k)+T+εj(k),εj(k)~N(0,σ2)(14)式中T为采样周期.结合式(12)~(14),有式中ε(k)=εj(k)-εi(k).由于εi(k)和εj(k)是独立同分布的随机变量,因此至此,我们得到卡尔曼滤波器的状态方程和观测方程,即{x(k+1)=x(k)+ε(k),ε(k)~N(0,2σ2)z(k)=x(k)+d(k),d(k)~N(0,σ2对于卡尔曼滤波器的实现过程,已经有许多相关的文献研究,本文不再赘述.通过卡尔曼滤波器,我们可以得到邻居节点间较为精确的时钟偏差.在此基础上,我们需要寻找一种不依赖于特殊节点的全分布式多跳无线自组织网络的时钟同步解决方案.3基于平均场的分布式时钟同步无线自组织网络是一种分布式系统,不需要通信基础设施支持,没有中心节点,因此也不存在时钟基准点,难以建立全网基准时钟.现有的解决方案或者选择一个特殊节点作为时钟基准点,或者仅计算邻居节点之间的时钟偏差,同步操作由上层应用决定.为了摆脱对参考节点的依赖,本文采用平均场的方法.平均场的核心思想是,不去计算局部的、处处不同的节点之间的时钟差,而是将节点之间的时钟差的总体效果等价于一个“平均场”.在本文中,我们将这种“平均场”定义为虚拟时钟基准,该基准是节点与其所有一跳邻居的时钟差进行集体化处理,以平均时钟偏差最小为目标而设置.平均场也是一种互同步方法,仅需要与一跳邻居节点进行时钟信息交换,因此本地时钟值仅依赖于其所有一跳邻居的时钟.也就是说,本地时钟具有空间马尔可夫性.我们将基于空间马尔可夫随机场建立网络的时钟同步模型.根据马尔可夫随机场与吉布斯随机场的等价性,通过引入邻居系统和团势能,得到了基于平均场伊辛模型的时钟同步能量函数.并在此基础上给出了采用能量最小化寻优的时钟同步算法.3.1时钟同步的平均场模型无线自组织网络通常可以用一个图G=(V,E)来表示,其中V表示节点的集合,E表示节点间链路的集合.考虑到时钟的空间马尔可夫性,我们采用邻域系统对无线自组织网络进行建模.一个邻域系统N可以定义为其中Ni是节点i的邻居节点集合,其相邻关系具有如下特性[27]:(1)任意给定一点i与其自身并不构成邻居关系:iNi;(2)相邻关系是相互的:我们采用团的概念来对时钟同步中节点之间的相互作用进行建模,相对于(V,E),团C是网络中节点集的一个子集,该子集中的任意两个节点存在边连接.更进一步,我们定义单节点团C1和双邻居节点团C2:团也可以定义三邻居节点团C3,四邻居节点团Page6C4等等.但本文中只考虑C1团和C2团.更进一步,我们采用标签问题[27]对时钟同步进行描述.所谓标签就是一个节点可能发生的事件.一个标签集合可以是连续的,也可以是离散的.在时钟同步中,标签集合是连续的并且与实数域R对应.标签化是指从一个标签集合中分配一个标签给V中的每个节点,在时钟同步中就是设置节点的时钟.分配标签在随机领域术语中称作配置.在时钟同步中,所有节点具有一个相同的标签集合,配置空间是其中m代表网络中节点的个数.我们使用符号Fi=fi指示节点i获得本地时钟值fi这一事件,符号(F1=f1,F2=f2,…,Fm=fm)指示全网时钟状态.进一步简化,我们将其缩写成F=f,其中f是F的一个配置.f也是一个联合事件,联合事件f的概率可以表示为P(f).相应的,节点i分配一个标签fi,也就是节点i获得的是时钟值fi的概率,可以表示为P(fi).对于邻域系统N,F是在G上的马尔可夫随机场,因为它显然满足下面两个条件[27]:P(fi|fV-{i})=P(fi|fNi当每个节点分配相同的标签时:就可以认为达到了时钟同步.通过调整网络的配置,我们可以求出P(fi=f)的最大概率.时钟同步也就可以被定义为寻找马尔可夫随机场的最大后验概率MAP(MaximumAPosteriori)配置.就如文献[27]中所述,马尔可夫随机场等同于吉布斯随机场.因此时钟配置服从吉布斯分布,并且具有下面的形式:其中是规格化的参数.T是一个自由参数,在物理层中,它代表温度.在大多数应用中可以假定为1.U(f)是一个能量函数,定义如下:可见,U(f)就是在所有可能的团C上的团势能Vc(f)之和[27].它也可以表示为U(f)=∑{i}∈C1如上文提到的,在时钟同步这个场景下,只考虑了C1团和C2团,因此式(28)可以重写如下:U(f)=∑{i}∈V根据式(25),最小化能量函数U(f)等同于最大化P(f)的概率值.考虑平均场理论中的伊辛模型,伊辛模型系统中的总能量为[28]式中犑ij为耦合矩阵,当其不等于0时,表示格点i和j之间存在相互作用.在无线自组织网络中,耦合矩阵相当于节点之间能够进行时钟同步的邻居关系.si对应于节点i的本地时钟.比较式(29)和(30),它们具有相同的表达式.伊辛模型的目标就是使系统的总能量达到最小.而马尔可夫随机场的最大后验概率问题等价于能量函数U(f)最小化.因此,无线自组织网络中的时钟同步问题就转化为了一种平均场问题.本文的下一小节将定义一个合适的函数来测量全局时钟同步,寻找一种分布式的能量最小化算法来更快更高精度地得到全局时钟同步解决方案.3.2能量函数定义能量函数是时钟同步的目标函数,它是可以被最小化的.因此,能量函数有两个任务:定义时钟同步的最佳解决方案,通过能量最小化寻找最佳同步时钟.如式(29)中描述,能量函数是由团的势能函数构成.参考文献[27],双邻居节点团C2的势能函数可以定义如下:其中g(fi-fi)是节点i和i之间时钟偏差的惩罚函数,是一个单调减函数.二次函数是最常用的惩罚函数,同样也可以用在本文中,于是定义考虑到节点故障后的重启或者一个新的节点加入时,本地时钟与其他节点之间可能也会存在较大的时钟偏差.这将会导致在能量最小化时产生一个很大的修复因子.并且这个因子将会使时钟同步产生较大波动,难以在较短时间内回复到平衡状态,因此我们将惩罚函数修改为其中σ是一个截断变量,代表节点与其邻居节点之间时钟偏差的方差.因此g的导数也就变成如下形式:Page7g(fi-fi)=2×min{σ,(fi-fi)}(34)对单节点团C1的势能函数,它依赖节点时钟与参考时钟的偏差,具有二次方程的形式.它可以这样被描述:其中fR是参考时钟.但是前面的章节中我们提到过,在全分布式网络中,并不需要维护参考时钟.因此引入平均场方法计算虚拟参考时钟.平均场理论认为对于给定个体,所有其他个体对其的影响可以由一个平均作用近似获得[29].因此我们使用平均场理论近似计算邻域系统的参考时钟.节点i邻域系统的虚拟参考时钟可以被平均场定义为最终我们得到完整的能量函数如式(37)所示:U(f)=∑{i}∈V根据平均场理论和MAP方法,式(37)的最小值点即为时钟同步的最优点.现在需要解决的问题是,如何寻找式(37)的最小值点.因此能量函数U(f)被定义为一个全局的变量.它需要收集每个节点的团势能来计算能量函数,并找到最小化能量函数.在无线自组织网络这种多跳网络中,这种方法显然是不可行的,因为它将产生很大的网络负载,而且接收的时间戳消息经过多跳传输后可能已经过时.因此我们应该寻找一种分布式并行运行的能量函数最小化方法.3.3能量函数的并行最小化由于存在截断因子,能量函数变成了一个非线性的函数.为了简化分析,我们采用式(32)中描述的双邻居节点团势能,如下式:由于最小值处一定是一个驻点,U(f)的梯度向量必然等于0.也就是说下面的等式必然成立:U(f)fi为了求解式(39),必须获得网络中每个节点的本地时钟.这在无线自组织网络这种多跳网络中很难实现.因此我们对式(39)更新如下:我们定义也就是根据式(41),通过计算每个节点的最小化能量函数,我们可以获得全局能量函数的最小值.因此U(f)可以在网络中的每个节点上并行的更新,并且只需要邻居信息.也就是说,通过考虑每个节点局部的fi,可以计算出全局最小值.因此我们得到一个全分布式能量最小化算法.还存在一个问题,根据式(39)确定的最小值点到底是一个局部最小值点还是全局最小值点,由于式(39)的解决方案只是一个梯度为0的驻点,它可能是局部极值点而不是全局最小值点.不过,由于我们定义的能量函数是一个二次函数,它显然是一个严格凸函数.凸函数的任何一个本地最小值,也是全局的最小值.严格凸函数全局中最多只有一个全局最小值[30].因此,根据式(39)确定的最小值点就是全局最小值点.在实际应用中,能量最小化函数的算法采用下面规则进行迭代求解:k+1i=ff其中μ是一个较小的常数.由于式(43)仅涉及简单的算术运算和初等函数运算,因此本文的分布式时钟同步算法复杂度低,适用于CPU能力和功率都十分有限的无线自组织网络节点.3.4算法描述结合前文所述的时钟偏差估计算法和能量最小化寻优的时钟同步算法,最终形成本文所提出的基于平均场理论的时钟同步协议MFSP.该协议首先使用卡尔曼滤波器精确估计与邻居节点之间的时钟偏差,然后使用平均场理论进行分布式全网同步.在一个包含M个节点的无线自组织网络中,基于平均Page8场理论的时钟同步算法MFSP可描述如下.算法1.MFSP算法.1.初始化2.设置同步计时器的周期3.迭代计算直到满足同步精度收敛4.FOR第k次迭代5.节点i,i=1:M,INparallel6.将本地第k-1的发送时间戳以及第k-1次迭7.节点广播同步数据包到一跳邻居,并记录发送8.接收到一跳邻居的时钟广播报文,并记录接收9.通过卡尔曼滤波器计算获得邻居节点的时钟偏差10.同步计时器周期到,通过平均场计算虚拟参考时11.基于虚拟参考时钟计算能量函数,计算公式如U(f)=∑{i}∈V12.计算最小化能量函数,获得节点本地时钟与虚13.ENDparallel14.ENDFOR本文MFSP同步协议充分利用无线信道的广播特性来减少消息发送数量、缩短同步时间.采用一跳范围内的广播方式进行双向时间戳交互.在假定由M个节点构成的连通网络图中,在连续k次的全网时钟同步迭代次数内,采用传统单播双向交换时间戳的TPSN协议[4]需要发送2×k×(M-1)条消息量,采用平均一致时钟同步方式的ATSP协议[9]则需要发送3×k×M条消息量,而本文时钟同步协议MFSP需要发送的消息量仅为(k+1)×M.随着网络规模的增大,这种优势将更加明显.因此在完成全网同步的过程中,本文方案能有效减少信息发送量,进而缩短同步时间,降低了能量损耗.采用同步方式的GTSP协议[13]需要发送的消息量是k×M,与本文的MFSP协议在同一数量级.在本文的第4节,我们将针对GTSP协议进行性能比较和分析.本文分布式时钟同步算法仅需要存储一个迭代过程中一跳邻居节点的时间戳,对存储空间需求很小,具有很好的空间复杂度.4仿真与分析在本节中,本文时钟同步方案的性能将在Matlab和QualNet仿真平台得到验证,仿真结果将分别在4.1节和4.2节中进行分析.为了分析本文方案的时钟同步精度,我们定义了在k次同步操作后,全网中所有一跳邻居节点之间的最大时钟同步误差,也即全网一跳距离时钟误差最大值可如式(44)所示:e1-hop(k)=max其中,Ci(k)是节点i在k次同步操作后的本地时钟;Cj(k)是节点i的一跳邻居节点j在k次同步操作后的本地时钟.如果e1-hop(k)=0,就意味着每个节点一跳距离内达到了同步.我们同时还定义了全网时钟误差最大值作为另一种评判指标,如式(45)所示:其中,Ci(k)和Cj(k)分别是节点i和j在k次同步操作后的本地时钟.显然,如果全网时钟误差最大值e(k)=0,全网所有时钟必然完全同步.由于计算机硬件时钟的精度通常为1μs,所以我们以e1-hop(k)或e(k)开始持续小于10-6s,作为达到全网收敛的指标.4.1基于Matlab的仿真Matlab仿真在Matlab2009b环境下进行.仿真场景为具有标准2-D网格10×10拓扑结构的100个节点构成.我们假设节点仅与其水平或垂直方向的一跳邻居节点进行交互,即标准的4-邻居系统.在每一次同步迭代过程中,网络中的每个节点与其邻居节点交换时间戳,并同步更新各自的本地时钟.图2所示为10×10个节点在150次同步迭代内的全局时钟值收敛过程.其中图2(a)为时钟初始状态,初始时钟偏差在[0s,1s]的区间内均匀分布.图2(b)~图2(p)显示的是每隔10次迭代,从第10次迭代到第150次迭代的全网时钟的收敛过程.我们同时还进行了不同节点情况下全网时钟收敛的仿真实验.图3描述了4×4、6×6、8×8、10×10个节点在100次同步迭代内全网一跳距离、全网距离时钟同步的收敛性能.其中Y轴为对数坐标.可以看出,以全网一跳距离时钟误差最大值为对比标准的情况下,4×4个节点的场景同步迭代98次就达到微秒级的同步精度,6×6个节点的场景需要Page9图210×10个节点在150次同步迭代内的收敛过程迭代101次,8×8个节点的场景需要迭代97次,10×10个节点的场景需要迭代98次.这说明了随着网络规模的增大,全网均能快速实现收敛.4.2基于QualNet的仿真QualNet是一种被广泛应用在对无线网络尤其是无线自组织网络进行性能分析的仿真工具.文献[31]验证了QualNet对现实环境下无线网络仿真能力非常强.近年来的分布式时钟同步解决方案主要分为两类:其中占主导地位的一类是基于一致性的绝对同步方法[7-15],另一类是相对同步方法[16-17].在相对同步方法中,算法仅计算出每个节点之间的时钟差,并不对节点时钟进行调整.此类方案与本文提出的方案做法不同,所以不进行比较.在基于一致性的同步方法中,大部分的算法仅在一对节点之间计算均值,造成收敛速度较慢,而采用群组一致性的方法有GTSP协议和文献[18].在文献[18]中认为所有时延服从高斯分布且均值相同.这种方法在时延不均衡的网络中无法适用.GTSP协议是一种采用群组方式的典型平均一致时钟同步方案,本文所提出的MFSP亦是一种采用群组同步方式的分布式时钟同步协议.因此,本节中我们将GTSP协议和MFSP协议在QualNet环境下进行仿真对比,以验证MFSP的性能优势.仿真场景的配置参数如表1所示.场景大小/(km×km)在QualNet仿真环境下全网节点时钟的收敛过程与图2相似,不同节点情况下全网时钟收敛对比与图3相似,因此这里均不再展示.图4所示为MFSP协议和GTSP协议在10×10个节点下随着同步迭代次数的增加,全网时钟同步误差和全网一跳距离时钟同步误差的收敛图.其中Y轴均为对数坐标.从全网时钟误差最大值指标上来看,图4(a)中MFSP经过103次同步迭代完成了收敛,而GTSP则需要529次同步迭代.从全网一跳距离时钟误差最大值指标上来看,图4(b)中GTSP需要446次同步迭代才完成了收敛,而MFSP只需要98次.因此,本文所提出的MFSP协议比GTSP协议收敛速度更快.其他相同节点规模下的MFSP协议与Page10图34×4、6×6、8×8、10×10个节点在100次同步迭代内全网一跳距离和全网距离的时钟误差最大值对比图410×10个节点同步迭代时钟误差性能对比GTSP协议的收敛对比图,与10×10个节点情况下相似,因此不再重复说明.图5中展示了MFSP和GTSP协议随着网络节点规模的增大,达到同步所需要的迭代次数变化.从图中可见,GTSP协议达到同步所需的迭代次数与网络规模成正比,而本文所提出的MFSP协议全网收敛时间和全网一跳邻居收敛时间均保持基本稳定,虽然在较小网络规模的情况下并不如GTSP协议,但随着网络规模增大,MFSP协议的优越性逐渐体现.图5不同网络规模达到收敛所需要的迭代次数图6展示了图5中MFSP和GTSP协议达到同步所需的发送消息量变化.考虑到无线环境中存在冲突丢包的现象,本文在仿真中设定节点每广播两次同步数据包,才进行一次本地时钟同步迭代的操作.由于MFSP协议的收敛速度优于GTSP协议,因此图6中MFSP协议达到收敛所需要的发送消息量明显低于GTSP协议,与3.4节中理论分析一致.5总结本文研究了无线自组织网络下的时钟同步,提出了一种基于平均场的全分布时钟同步方案.该方案中每个节点只需要分别独立与自身一跳邻居通信.Page11图6不同网络规模达到收敛所需要的发送消息量此外,本文还提出了一种卡尔曼滤波器来获得邻居节点间高精度的时钟偏差.仿真结果表明本文所提出的方案可以达到更好的精度和更快的收敛时间.与现有的算法进行对比,本文所提出的解决方案不依赖特定的参考时钟节点,并且只和邻居节点通信,具有低负载、快速收敛、健壮、可靠的优点.在本文的后续研究中,我们将考虑建立一个实物测试验证环境,以验证本文所提出的时钟同步方案在实际工作环境下的性能,并对在动态拓扑环境情况下的算法性能进行分析和优化设计.
