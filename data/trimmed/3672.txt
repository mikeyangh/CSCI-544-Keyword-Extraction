Page1一种面向聚类的对数螺线数据扰动方法黄茂峰倪巍伟王佳俊孙福林崇志宏(东南大学计算机科学与工程学院南京211189)摘要面向挖掘应用的隐私保护数据发布要求对数据集进行隐藏的同时维持数据的挖掘可用性,数据扰动是解决该问题的有效方法.现有的面向聚类的数据扰动方法难以兼顾原始数据个体隐私和维持数据聚类可用性,对此提出了一种基于对数螺线的隐私保护数据干扰方法.通过构建面向聚类的隐私保护数据扰动模型,利用对数螺线对原始数据进行扰动隐藏,维持原始数据的k邻域关系稳定,实现数据集聚类可用性的有效维护;进一步提出多重对数螺线扰动的策略,提高隐私保护强度.理论分析和实验结果表明:文中方法能够有效地避免数据隐私泄露,同时维持数据的聚类可用性.关键词隐私保护;数据挖掘;聚类分析;对数螺线;数据干扰1引言随着人们对数据发布中的隐私安全日益重视,数据挖掘中的隐私保护问题得到了人们的持续关Page2对微数据(个体数据,区别于统计数据)隐私的保护,这种扰动容易造成数据个体差异的改变.聚类挖掘通过对个体数据的相似性和相异性的分析,将具有较低相异性和较高相异性的数据对象分别划分为同一聚簇和不同聚簇,聚类过程严重依赖于个体数据间的相异性[5-6].数据扰动与聚类挖掘在原理上存在弱化数据个体差异与依赖数据个体差异的冲突,导致面向聚类的数据隐藏变得尤为困难.在面向聚类应用的数据扰动研究方面,Oliveira等人[7-8]提出了通过平移、缩放和旋转的数据转换方法;文献[9]提出的基于数据交换的扰动方法NeNDS通过交换空间距离最近的数据点实现对原始数据的保护;文献[10]提出的CAMP_CREST方法采用最小生成树方法实现扰动.CAMP-CREST将原始数据表中的每个数据看作树中的一个节点,并根据各个节点的欧氏距离生成最小生成树,在不改变敏感属性的条件下将一个节点b条邻近记录的准标识符用均值来替换.已有的面向聚类扰动方法多数存在难以兼顾隐私保护强度和聚类可用性的不足,例如RBT方法中任意两条原始数据记录与其发布后数据值的泄露将导致所有原始数据的泄露[11];NeNDS方法[8]也存在破坏数据原有的聚类特征使得扰动后的数据聚类结果发生较大偏差的问题;CAMP_CREST方法[9]中敏感属性泄露的概率则受到记录中的敏感属性值的种类数的约束.如何协调好数据隐私保护强度和聚类可用性成为面向聚类隐私保护数据发布研究的难点[12-15].在聚类分析中,邻域关系是构成聚簇的基础,数据点间邻域关系可以用来衡量数据点的相似性.本文针对面向聚类应用的隐私保护数据发布问题,提出一种基于对数螺线的隐私保护数据扰动方法LSDP(LogarithmicSpiralbasedDataPerturbation),在保持数据点邻域关系基本不变的情况下,通过设置合适的对数螺线扰动参数,对原始数据进行扰动,实现对保护数据隐私和维持聚类可用性的兼顾.本文主要贡献如下:(1)引入对数螺线扰动的概念,构建了面向聚类的隐私保护数据扰动模型,使扰动后数据具有较好的聚类可用性和较高的隐私保护强度.(2)为了提高隐私保护的强度,提出了多重扰动策略.该策略以线性增加额外的计算为代价,使得数据隐私保护的安全性得到指数级别的提高,同时不影响聚类的可用性.本文第2节介绍相关概念及多维、多重对数螺线数据数据扰动方法;第3节介绍一种面向聚类的对数螺线数据扰动算法LSDP,重点对LSDP算法的聚类可用性、隐私保护安全性以及算法效率进行理论分析;第4节给出实验和数据分析;第5节总结全文并展望下一步的工作.2相关概念对数螺线是一根无尽的螺线,其数学表达式为r=αeεθ,其中,θ是极角;r是极径;e是自然对数的底;α和ε为常数,且α>0,ε≠0.对数螺线如图1所示.考虑将对数螺线的几何性质应用于微数据隐藏发布,借助对数螺线对数据点进行扰动,隐藏原始数据.具体思路如下:通过对数螺线的旋转和缩放使数据点落于对数螺线上,再使数据点沿螺线方向在螺线上移动,从而对原数据进行扰动保护,将这种扰动方法称之为对数螺线扰动.设原始数据点为A,对数螺线扰动函数为F,扰动后数据点为A,F×A表示为运用函数F对数据点A进行扰动,则对数螺线扰动可以表示为在二维平面上,给定一条对数螺线,对于平面上任意一点,若该点落在对数螺线上,则使该点顺着螺线的方向在螺线上移动;若该点不在螺线上,使螺线绕其螺心旋转直至使该点落于螺线上,再使该点在螺线上沿螺线方向移动,将这种扰动方法称之为二维对数螺线扰动,见图2.Page3设点A(Ai,Aj)为二维上的任意一点,设对数螺心为O(x,y),对数螺线方程为r=αeεθ,旋转扰动角度为Δθ.如图2所示,二维对数螺线扰动可分解为旋转和缩放两部分,点A先缩放至点A,再围绕螺心旋转至点A.设θA为点A相对于对数螺线的极角,缩放参数k为扰动后的点A与螺心的距离|OA|与扰动前的点A与螺心的距离|OA|的比,则k=OA其中rA、rA分别为点A、A的极径.则扰动后点A(Ai,Aj)的坐标为根据给定的参数,设二维数螺线扰动函数为F(k,Δθ,O(x,y)),则二维对数螺线扰动可以表示为A(Ai,Aj)←F(k,Δθ,O(x,y))×A(Ai,Aj).在三维空间中,给定螺心、螺轴向量和对数螺线方程,对于空间中任意一点,先根据螺心和螺轴向量确定该点所在的锥面,再根据对数螺线方程在锥面上确定该点所在的空间对数螺线,最后使该点在螺线上沿螺线方向移动,将这种扰动方法称之为三维对数螺线扰动.数据点的扰动轨迹在任意一个以螺轴向量作为法向量的平面上的垂直投影都是一条对数螺线,且该对数螺线的螺心即是空间对数螺线的螺心在平面上的垂直投影,见图3.设点A(Ai,Aj,Ar)为三维空间中任意一点,螺心为O(x,y,z),螺轴向量为V(a,b,c),对数螺线方程为r=αeεθ,旋转扰动角度为Δθ,根据所给参数确定点A所在的空间对数螺线为r.如图3所示,三维对数螺线扰动也可分解为缩放和旋转两部分,点A先缩放至点A,再围绕螺轴向量旋转扰动至点A.设点A在平面C上,且平面C垂直于螺轴向量犞,其中点O、A和对数螺线r是点O、A和空间对数螺线r在平面C上的垂直投影.设缩放参数k为扰动后的点A与螺心的距离|OA|与扰动前的点A与螺心的距离|OA|的比,则其中rA、rA分别为点A、A的极径.最后由Δθ、k以及螺线参数求出点A(Ai,Aj,Ar).根据给定的参数,设三维数螺线扰动函数为F(k,Δθ,O(x,y,z),V(a,b,c)),则三维对数螺线扰动可以表示为A(Ai,Aj,Ar)←F(k,Δθ,O(x,y,z),V(a,b,c))×将一个n(n>1)维数据集D随机划分为一组不相交的二维、三维投影子集,二维、三维投影子集数分别为i和j,其中n=2i+3j(i,j0,n>1).然后对二维投影子集进行二维对数螺线扰动,对三维投影子集进行三维对数螺线扰动,令所有扰动的缩放参数k相同,将这种扰动称之为多维对数螺线扰动.设二维投影子集为设三维投影子集为然后对各投影子集进行相应的对数螺线扰动(At1,At2,At3)…(At3j-2,At3j-1,At3j).A(Ab1,Ab2)←F(k,Δθb1,O(xb1,yb1))×A(Ab2i-1,Ab2i)←F(k,Δθbi,O(xbi,ybi))×A(At1,At2,At3)←F(k,Δθt1,O(xt1,yt1,zt1),V(atj,btj,ctj))×A(At3j-2,At3j-1,At3j).A(At3j-2,At3j-1,At3j)←F(k,Δθtj,O(xtj,ytj,ztj),在对数螺线扰动后,把扰动后的数据集替换扰动前的数据集.有时为了增加数据隐藏的安全性,会对数据集进行多次的对数螺线扰动,称之为多重对数螺线扰动.3LSDP算法在聚类分析中,邻域关系是构成聚簇的基础,如Page4果扰动前后的数据具有相似的邻域关系,那么扰动前后的数据一定能够能够具有相似的聚类可用性.本文针对面向聚类应用的隐私保护数据发布问题,提出一种基于对数螺线的隐私保护数据扰动方法LSDP,在保持数据点邻域关系基本不变的情况下,通过设置适合的对数螺线扰动参数,对原始数据集进行干扰,得到扰动后的数据集,实现对保护数据隐私和维持聚类可用性的兼顾.3.1算法描述LSDP算法流程如下:将多维数据集D中的多维属性随机划分成一组不相交的二维、三维投影子集,给定缩放参数k.对于二维投影子集,给定螺心O(x,y)和扰动角度Δθ,进行二维对数螺线扰动;对于三维投影子集,给定螺心O(x,y,z)、螺轴向量犞(a,b,c)和扰动角度Δθ,进行三维对数螺线扰动,最后将原数据集D替换为扰动后的数据集D.对数据集D进行t次这样的对数螺线扰动,最终得到t重对数螺线扰动后的数据集D(t).算法1.LSDP.输入:原始数据集D,扰动重数t,各重扰动缩放参数输出:扰动后的数据集D(t)D(0)←D/用原始数据D初始化扰动数据集D(0)/Foreachperturbation(No.ofperturbationise:1~t)doPairs←(Ai,Aj)or(Ai,Aj,Ar)inD(e-1)(1i,j,ForeachselectedpairformPairsdoA(Ai,Aj)←F(ke,Δθei,Oei(x,y))×A(Ai,Aj);EndforCombinetheperturbedpairsintoD(e);EndforReturnD(t).3.2算法分析LSDP方法通过对数螺线扰动不仅可以保护数据的隐私,同时在扰动前后较好地维持了原始数据邻域关系的稳定,保持了原有数据的聚类效果,确保了扰动后数据有较好的聚类可用性.本节对隐藏算法LSDP的聚类可用性、隐私保护安全性以及算法效率进行理论分析.定理1.对多维数据集进行对数螺线扰动,不会改变数据集的数据邻域关系.证明.设A、B为二维数据集上的两数据点,对其进行缩放参数为k和旋转角度为Δθ的对数螺线扰动,A、B为扰动后的点,见图4.因为A、B两点相对于螺心O的扰动角度相同,所以两点在扰动前后与螺心形成的夹角角度相同,即∠AOB=∠AOB,又因为|OA|=k|OA|,|OB|=k|OB|,根据相似三角形原理可推出|AB|=k|AB|,数据点A、B之间的距离缩放了k倍.由上可知,对二维数据集上的所有数据点应用参数相同的对数螺线扰动后,任意两个数据点之间的距离都缩放了k倍,所以二维数据集的数据邻域关系在扰动前后没有发生改变,数据集在扰动前后具有相似的聚类可用性.同理可知,在三维对数螺线扰动中,任意两点的距离都缩放了k倍,所以三维数据集的数据邻域关系在扰动前后也没有发生改变,数据集在扰动前后具有相似的聚类可用性.在二维和三维数据集中,对数螺线扰动都可以保证较好的聚类质量,同样也可以拓展到多维中.将一个n(n>1)维数据集D随机划分为一组不相交的二维、三维投影子集,然后对所有投影子集进行具有相同缩放参数的对数螺线扰动,二维或三维投影子集的任意两个数据点属性值之间的欧氏距离在扰动后都缩放了k倍.对所有投影子集进行对数螺线扰动后,原数据集中任意两数据点之间的欧氏距离都将缩放k倍,所以多维数据集中的数据邻域关系在对数螺线扰动前后没有发生改变,数据集在Page5扰动前后具有相似的聚类可用性.证毕.在此基础上,进一步考虑多重对数螺线扰动.定理2.对数据集进行多重对数螺线扰动,不会改变数据集的数据邻域关系.证明.设原始数据集由m条具有n维属性的记录组成,由性质1可知,数据集的数据邻域关系在对数螺线扰动前后不发生改变,即对数螺线扰动后的数据集Dm×n与原始数据集Dm×n中的数据邻域关系相同,那么对扰动后的数据集再进行对数螺线扰动得到的数据集Dm×n与数据集Dm×n中的数据邻域关系也相同,则数据Dm×n与原始数据集Dm×n中的数据邻域关系也是相同的.设对数据集Dm×n进行t重对数螺线扰动后得到数据集D(t)m×n与原始数据集Dm×n具有相同的数据邻域关D(t)系,即多重对数螺线扰动没有改变数据集的数据邻域关系.由定理2知,多重对数螺线扰动在保护数据隐私的同时还可以维持数据集的数据邻域关系.定理3.多重对数螺线扰动可以增强隐私保护的安全性.证明.假设n(n%2=0,n>1)维数据集划分的投影子集全部是二维的,且各重投影子集的划分是独立并且随机的,即第i重投影子集(Axi,Ayi)与第j重投影子集(Axj,Ayj)相互独立.每重扰动都是对n/2个二维投影子集进行对数螺线扰动,且在每重的所有扰动函数F(k,Δθ,O(x,y))中,缩放参数k相同,且扰动角度Δθ和螺心O(x,y)的取值是随机且独立的.因为各重投影子集的划分相互独立,所以各重间的扰动函数参数也是相互独立的.假设攻击者获取了部分原始数据,进行逆推猜测各重投影子集的划分和所有扰动函数的参数.由于各重划分的投影子集都是二维的,因此在每重扰动中有n/2个扰动函数F(k,Δθ,O(x,y)),所以t重扰动中的扰动函数共有tn/2个.根据排列组合理论,每重扰动的二维投影子集划分方式共有n!/2!n种,t重的二维投影子集划分方式共有(n!/2!n则在无法获知扰动重数的前提下,攻击者进行逆推猜测可能需要计算所有的扰动函数F(k,Δθ,O(x,y)),又因为每个扰动函数可以在常数时间内解出,所以逆推猜测攻击的计算复杂度为F1:F1=On=O(nt(n!)t·槡2-tn).同理,假设n(n%3=0,n>2)维数据集划分的投影子集全部是三维的,且各重投影子集的划分是独立并且随机的,则t重对数螺线扰动共有tn/3个扰动函数F(k,Δθ,O(x,y,z),V(a,b,c)),且t重投影子集划分方式共有(n!/3!n击的计算复杂度为F2:F2=On=O(nt(n!)t·3槡6-tn).现在,n(n>1)维数据集随机划分为不相交的a个二维和b个三维投影子集(a0,b0,2a+3b=n),所以每重投影子集的划分方式共有∑a0,b02!a·3!b=O(n!/2na0,b0,2a+3b=n有n/3a+bn/2,O(a+b)=O(n/2).所以逆推猜测攻击的计算复杂度为F3:2a+3b=nF3=On=O(nt(n!)t·槡2-tn).因为攻击者无法获知二维和三维的投影子集数,所以F3F1+F2.所以多重对数螺线扰动有效增强了隐私保护的安全性.由性质3知,多重扰动策略虽然使算法的计算复杂度略微增加,但是数据隐私的安全性却能获得指数级别的提高.采用LSDP方法,缩放参数k和扰动角度Δθ决定了数据集的扰动强度,而t增强了数据扰动的安全性.各重投影子集的划分相互独立,并且扰动角度Δθ、螺心和螺轴向量等参数的取值是独立且随机设定的,使得攻击者进行逆推猜测难以实行.假设k、Δθ和ε的值都被攻击者获知,由于每重扰动的二、三维投影子集是随机划分的,所以要逆推猜测可能要遍历所有的划分组合,由性质3可知,在t取值合适的情况下,这种攻击付出的代价是巨大的.与RBT[8]方法不同的是,LSDP方法可以有效扩展到多维多重,即使泄露了部分原始数据或者部分扰动参数,也无法逆推出完全的原始数据,而且在LSDP方法中,相互独立而且随机设定的扰动角度Δθ、螺心和螺轴向量等参数只影响到扰动隐藏的属性值而没有影响其原有的邻域关系.LSDP方法通过保证每重扰动时各投影子集具有相同的缩放参数,实现了对原始数据进行有效隐藏的同时能够很好地维持数据集的数据邻域关系.Page64实验与分析为了对LSDP方法的聚类可用性和执行效率进行分析,本节将通过具体的实验来加以验证和说明.实验环境为Inter(R)Core(TM)i5CPU2.30GHz,2GB内存,Windows7操作系统.所涉及代码用VisualC++(6.0)实现.实验数据均采用实际数据,来自http://www.ics.uci.edu/~mlearn.第1个数据集:BreastCancerWisconsin(Diagnostic),该数据集共有569个数据记录,每条记录有32个属性值;第2个数据集:ImageSegmentation,该数据集共有2100个数据记录,每条记录有19个属性.两数据集分别取其中的8个和9个属性,且这些属性值均为数值类型.实验前需对实验数据进行适当的预处理,针对上述两个数据集的属性值,需要对其进行规格化处理,使得所有属性值的取值范围为[0,10].对比算法的聚类可用性时,对实验数据集,分别应用LSDP、NeNDS[9]、CAMP_CREST[10]以及RBT[8]算法进行扰动,然后对原始数据集和扰动后的数据集分别用k-means[16]算法和DBSCAN[17]算法进行聚类,对比分析原始数据集和扰动后数据集的聚类质量,验证LSDP算法的聚类可用性.本文采用文献[16]介绍的F-measure方法对比扰动算法的聚类可用性,C表示扰动后数据集生成的聚簇集合,其中Ci、Cj分别表示C、C中任意聚簇,nij=|Ci∩Ci|,则有Recall(Ci,Cj)=nij|C1|,Precision(Ci,Cj)=nij|Cj|,F(Ci,Cj)=2×Recall(Ci,Cj)×Precision(Ci,Cj)F(C)=∑Ci∈CF(C)值越大,表明扰动前后数据集的聚类结果越相似,扰动算法的可用性越好;相反,则表明扰动算法的可用性越差.实验中,在第1个数据集上,LSDP算法中参数t,k,Δθ分别取7,[0.1,5],[0.01π,0.5π],NeNDS算法中参数c取6,CAMP_CREST算法中参数b取5;在第2个数据集上,LSDP算法中参数t,k,Δθ分别取4,[1,10],[0.1π,π],NeNDS算法中参数c取4,CAMP_CREST算法中参数b取9.图5,6显示了在两个实验数据集在扰动前后应用k-means算法进行聚类后得到的F-measure值与k的对应关系.图5BreastCancerWisconsin扰动前后k-means聚类质量对比图6ImageSegmentation扰动前后k-means聚类质量对比由图5、图6可知,LSDP算法与RBT算法具有相近的F-measure值,对比NeNDS和CAMP_CREST算法则具有更高的F-measure值.因此扰动后的数据聚类结果与原始数据聚类结果比较相似,具有较好的可用性.同时,表1给出了在两个原始数据集和扰动后的数据集上应用DBSCAN进行聚类后得到的F-measure值,在BreastCancerWisconsin数据集中DBSCAN算法参数epsilon=2.5,Minpts=20,在ImageSegmentation数据集中DBSCAN算法参数epsilon=1.5,Minpts=8.数据集合BreatCancerWisconsin0.919160.919160.776830.89803ImageSegmentation0.918100.894070.760800.75579由表1可知,LSDP算法与RBT算法具有相近的F-measure值,略大于NeNDS和CAMP_CREST算法对应的F-measure值.对扰动前后数据集应用k-means和DBSCAN聚类算法的结果分析表明,LSDP扰动算法较好地维持了数据的聚类可用性.对比算法的执行效率时,应用LSDP、NeNDS、CAMP_CREST以及RBT算法对3~4个不同大小的实验数据集进行扰动,对比算法执行所用的时间,验证LSDP算法的执行效率.Page7实验中,为了增强执行效率的可比性,LSDP算法采用单重扰动.实验分为两组:第1组实验对比算法在不同规模数据集上的执行效率,随机构造分别包含1000、2000、4000和8000条记录的4个10维浮点数据集;第2组实验对比算法在具有不同维度数据集上的执行效率,随机构造维度分别为10、20、40和80的浮点数据集,且数据集的记录数都设置为1000.为了增加数据的可比性,两组试验中,4种算法的实现采用了相同的数据结构和运行环境.试验中,LSDP算法参数t,k,Δθ分别取1,[0.1,10],[0.01π,0.5π],NeNDS算法参数c取6,CAMP_CREST算法参数b取8.表2、3给出了4种扰动算法在不同规模的数据集上的执行时间(单位为ms).表2算法在不同记录规模数据集上的执行时间记录数1000161532200031305140006261109800012512225018601属性数101615322031316340646312580141132249由表2、3可知,LSDP算法与RBT算法具有相近的执行效率,NeNDS算法的执行效率比LSDP算法低近似一倍,且都与数据集的记录数和属性维度保持着近似线性关系.CAMP_CREST算法的执行效率最低,且随着记录数的线性增长呈现指数级的增长,但CAMP_CREST算法的执行效率与数据集的维度呈弱相关性.实验结果表明,LSDP扰动算法具有较好的执行效率,在实际应用中具有较高的可行性.5结论与下一步工作本文介绍了面向聚类的数据隐私保护的相关问题,提出一种基于对数螺线的隐私保护数据扰动方法LSDP.LSDP方法利用对数螺线的几何性质,对数据点的属性值进行扰动,在较好地保护数据隐私的同时维持了原始数据的k邻域关系.理论分析和实验结果表明,LSDP方法能够有效兼顾数据隐私的保护和数据聚类可用性的维持.需要指出的是,LSDP方法在对低维度数据点进行扰动时,投影子集划分的选择范围较小,导致隐私保护强度不高,下一步将对提高LSDP方法的安全性进行进一步研究.
