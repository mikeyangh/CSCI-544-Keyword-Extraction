Page1对全轮3D分组密码算法的Biclique攻击陈少真1),2)刘佳1)1)(解放军信息工程大学郑州450002)2)(数学工程与先进计算国家重点实验室郑州450002)摘要3D算法是CANS2008会议上提出的一种代替-置换网络型分组密码算法.该文通过构造3D算法的Biclique结构,提出了对全轮3D算法的Biclique攻击.该攻击可以扩展为对r轮3D算法的一般化Biclique攻击(r10).结果表明,Biclique攻击数据复杂度为232个选择密文,在时间复杂度上优于穷举.关键词分组密码;Biclique攻击;3D算法;密码学;网络安全;信息安全1引言3D算法[1]是Nakahara在CANS2008会议上提出的一种新的SPN型分组密码算法,其分组和密钥长度均为512比特,建议轮数为22轮.这种分组长度不仅适合大数据量加密,也非常适合用于一些hash函数、序列密码及伪随机数生成器的组件,因为它们的安全性依赖于内部状态的长度.因此,3D算法的安全性值得重点关注.Biclique攻击是Bogdanov等人[2-5]在ASIA-CRYPT2011上提出的一种新的分析方法,目前它Page2攻击方法轮数数据时间文献Multiset529CP219.5[1]Multiset62129CP2139[1]积分攻击积分攻击积分攻击积分攻击不可能差分6236CP265.5[1]不可能差分62120.5CP2104.5[7]不可能差分72126CP252[7]不可能差分82317CP2345[7]不可能差分92445CP2473[7]不可能差分102501CP2401[8]中间相遇102128CP2331.1[9]截断差分112251CP2288[10]截断差分132469CP2308[10]Polynomial-Advantagel2512Biclique22232CC2511.5本文Bicliquer(r10)232CC2512+lg21-485Biclique10232CC2510.7本文注:Polynomial-Advantage攻击成功概率为0.63.23D算法[1]3D算法面向字节,分组长度和密钥长度均为512比特,其状态表示为3维立方体形式,如图1所示.其矩阵表示如下:S=r轮3D算法中,第i轮(0ir-2)的轮变换为最后一轮的轮变换中π由κr代替,表示为ηr-1(X)=κrθ(r-1)mod2+1γκr-1(X).κi:轮密钥与第i轮状态进行异或运算.轮密钥由密钥扩展算法得到.γ:非线性变换,将AES[12]的S盒应用于状态的每个字节.θ1,θ2:行移位变换,在轮变换中交替使用.θ1将状态S变换为S1,θ2将状态S变换为S2,其中S1,S2表示如下:S1=S2=π:列混合变换.将Anubis算法[13]中4×4的MDS对合矩阵应用于各层中的各列.该矩阵的分支数为5.π与θ1,θ2结合,构成3D算法的扩散层,用3轮实现完全扩散.设输入为(a0,a1,…,a15),输出为(b0,b1,…,b15),对一层进行π变换的例子是01x02x04x06x烄02x01x06x04x04x06x01x02x06x04x02x01烆r轮3D算法,需要r+1个轮密钥,每个轮密钥为512比特.设512比特的主密钥为K=(k0,k1,…,k63),ki(0i63)为字节.其密钥扩展算法为Page3Ki=πθimod2+1γκ(Ki-1),i1.部分字节.κ:上一个轮密钥与4×4×4的常数矩阵进行异或运算.该常数矩阵由总轮数r决定.γ:非线性变换,将AES的S盒应用于状态的S[a0]a4a8a12烄S[a1]a5a9a13S[a2]a6a10a14S[a3]a7a11a15烆a32a36S[a40]a44a33a37S[a41]a45a34a38S[a42]a46a35a39S[a43]a47θ1,θ2,π与轮变换中相同.3Biclique攻击[2]3.1Biclique结构设常数d>0,f在密钥K的作用下将中间状态S映射为密文C=fK(S).若2d个中间状态{Sj}j∈{0,1,…,2d-1}、2d个密文{Ci}i∈{0,1,…,2d-1}与22d个密钥{K[i,j]}i,j∈{0,1,…,2d-1}满足:则称{{Ci},{Sj},{K[i,j]}}i,j∈{0,1,…,2d-1}是1个d维Biclique结构.如图2所示.i,j∈{0,1,…,2d-1}:Ci=fK[i,j](Sj),3.2Independent-Biclique结构的构造构造1个d维Biclique结构的直接方法是:固定2d个中间状态和2d个密文,然后再任选22d个密钥来验证是否能构成Biclique结构.该方法至少需要22d次f运算.文献[2]提出了一种利用相关密钥差分构造Biclique结构的方法,计算量不超过2d+1次f运算.(1)基础计算:设f在密钥K[0,0]作用下将S0映射为C0:(2)利用2d个“Δi-差分”与2d个“j-差分”构造22d个“(Δi,j)-差分”.Δi-差分:该差分路径,使得输入0差分在密钥差分ΔKi作用下得到输出差分Δi.0ΔKj-差分:该差分路径,使得输入j差分在密钥j作用下得到输出0差分.差分Kj当Δi-差分与j-差分没有共用的“活动非线性部件”时,用直接“异或”的方式组合Δi-差分与j-差分构成“(Δi,j)-差分”:i,j∈{0,1,…,2d-1}:j(3)结合S0,C0,K[0,0]与(Δi,j)-差分构造Biclique结构:令若对所有的i+j>0,都有ΔKK[i,j]互不相同.这样就得到1个d维Biclique结构.这样,构造1个d维Biclique结构就简化为计算2d个Δi和2d个j,总共不超过2·2d次f运算.我们称由该方法构造的Biclique结构为Independent-Biclique结构.注:文献[2]指出,在构造Independent-Biclique结构时,必须要求Δi-差分与j-差分没有共用的“活动非线性部件”,才能以直接“异或”的方式组成“(Δi,j)-差分”.体现在差分路径上就是Δi-差分与j-差分中“活动部件”的位置完全不重合.当Δi-差分与j-差分有共用的“活动非线性部件”时,如何构造其它类型的Biclique结构并进行攻击,可以参考文献[2].3.3Independent-Biclique攻击将分组密码算法记为e=fg,主密钥为K,长度记为|K|,则其密钥空间中共有2|K|个密钥.选择参数d:由3.2节可知,构造1个d维Independent-Biclique结构,需要先固定22d个具有特定差分模式ΔKiKPage4而定,并且要使得由此构造的Δi-差分与j-差分没有共用的“活动非线性部件”.因此,根据这种差分模式,将全部2|K|个密钥划分成2|K|-2d组,划分时保证:每组中的22d个密钥符合这种给定的差分模式,任意两组之间不包含相同的密钥.(1)构造d维Independent-Biclique结构:对每个密钥组{K[i,j]},选择2d个Sj和2d个Ci,满足:i,j∈{0,1,…,2d-1}:Sj这样就构成了2|K|-2d个d维Biclique结构.(2)对于每个Biclique结构,调用Oracle使用秘密密钥Ksecret对2d个Ci解密得到相应的2d个明文Pi:(3)若K[i,j]是Ksecret,会将Sj映射到Pi.因此,若满足下式,则将K[i,j]作为候选密钥:i,j∈{0,1,…,2d-1}:Pi4对全轮3D算法的Biclique攻击本节将针对3D算法的结构特点,构造3D算法的Independent-Biclique结构,提出对全轮3D算法的Biclique攻击.4.1攻击过程准备工作:在22轮3D算法中(轮数标号为从0~21),将第0轮γ变换前状态标记为#1,π变换后状态标记为#2,第0轮的轮密钥标记为$0,依此类推,第21轮γ变换前的状态标记为#43,θ2变换后的状态标记为#44(最后1轮的π由κ22代替),第21轮的第1个轮密钥标记为$21,第2个轮密钥标记为$22.将算法分解如下:0~15轮16~19轮20~21轮第1步.划分密钥空间.由于$21与主密钥是一一对应的关系,因此划分$21的密钥空间等价于划分主密钥的密钥空间.对$21的密钥空间进行划分的方法如下:在密钥空间中任取216个满足如下条件(1)(2)的密钥{K[i,j]}i,j∈{0,1,…,216-1}:(1)“基础密钥”K[0,0]在第44、56字节固定取0,其它位置任意取值.(2)K[i,j]与K[0,0]在第44、56字节的差分分别为i和j,其它位置差分为0.2496组,每组216个密钥.根据K[0,0]的取值,全部2512个密钥被划分成第2步.对每个密钥组{K[i,j]}i,j∈{0,1,…,216-1},固定C0=0并计算S0=f-1构造相应的Independent-Biclique结构.密钥差分ΔK由于任意一个Δi-差分与任意一个j-差分在差分路径中都没有共用的活动非线性部件且ΔK因此{{Ci},{Sj},{K[i,j]}}i,j∈{0,1,…,28-1}构成了2轮8维Independent-Biclique结构.如图3所示.由于Δi-差分只影响密文4个字节,因此数据复杂度为(28)4=232个选择密文.第3步.将Biclique结构置于最后2轮,与前20轮进行匹配计算,筛选出可以将Pi映射为Sj的密钥K[i,j].这里采用中间相遇的思想筛选密钥,同时利用预计算减少中间相遇攻击的计算量.如图4和图5所示.(1)预计算.对i∈{0,1,…,28-1},由明文Pi在密钥K[i,0]作用下得到状态#32的第4字节珗vi,共28次g1运算.对j∈{0,1,…,28-1},由中间状态Sj在密钥K[0,j]作用下得到状态#32的第4字节珖vj,共28次g-12运算.存储运算时的中间数据.珖vj(2)反向计算.对i,j∈{0,1,…,28-1},由中间状态Sj在密钥K[i,j]作用下计算状态#32的第4字节珖vi,j.图4中的非空白字节反映了珖vi,j与预计算珖vjPage5于受到K[i,j]与K[0,j]之间的密钥差分ΔK响而产生的.为计算珖vi,j,需要从Sj开始反向计算与珖vi,j有关的字节.在这些字节中,部分与预计算中的值相同.但对于与预计算中的值不同的部分(图4中用阴影表示),需要重新计算.在需要重新计算的字节中,一部分由线性变换得到,另一部分需要通过计算S盒得到(图4中用加粗黑框表示).密钥扩展中需要计算13个S盒,轮变换中需要计算37个S盒,共50个.(3)正向计算.对i,j∈{0,1,…,28-1},由明文Pi在密钥K[i,j]作用下计算状态#32的第4字节珗vi,j.类似地,图5中的非空白字节反映了Pi珗vi,j与Pi受到K[i,j]和K[i,0]之间的密钥差分K而产生的.为计算珗vi,j,需要从Pi开始正向计算与珗vi,j有关在这些字节中,需要重新计算与预计算中的值的字节.不同的部分(图5中用阴影表示).在需要重新计算的字节中,一部分由线性变换得到,另一部分需要通过计算S盒得到(图5中用加粗黑框表示).在密钥扩展中,由已知的$21开始,计算$20需要1个S盒,$19需要4个S盒,$18到$0各需要16个S盒,共1+4+16·19=309个S盒;在轮变换中,从#1开始正向计算#32的第4字节,第0轮到第13轮各需要64个S盒,第14轮需要16个S盒,第15轮需要4个S盒,共64·14+16+4=916个S盒.正向计算共需计算1225个S盒.(4)若珗vi,j=珖vi,j,则将K[i,j]作为候选密钥.第4步:穷举剩余的候选密钥,得到真正的密钥1个Biclique结构中有216-8=28个候选密钥.Ksecret.4.2时间复杂度攻击共需要构造2496个Independent-Biclique结构.对每个Independent-Biclique结构,密钥筛选Page6过程由预计算和匹配计算组成.构造1个Independent-Biclique结构需要不超过2·28=29次的f运算,相当于29·2/22≈26次22轮3D加密;预计算需要28次g1运算和28次g-12运算,即28次g运算,相当于28·20/22≈28次22轮3D加密;反向与正向计算中,由于S盒的计算占主要开销,因此只需考虑需要计算的S盒的个数.反向与正向计算中共需计算216·1275个S盒,相当于216·1275/1760=215.5次22轮3D加密;匹配计算后筛选出28个候选密钥,需进一步穷因此时间复杂度为举验证.2496(26+28+215.5+28)=2511.5次22轮3D加密.5攻击的扩展在本文对全轮3D算法的Biclique攻击基础上,本节将攻击一般化,扩展到对r(r10)轮3D算法的攻击.5.1攻击过程所示.设总轮数r10且为偶数.攻击示意图如图6(1)将第4节构造的Independent-Biclique结构应用于r轮3D算法的最后2轮,如图3所示(状态标记使用括号中的标记).由第4节的分析过程知,时间复杂度由反向和正向计算中需要经过的S盒的个数决定.(2)反向计算.对i,j∈{0,1,…,28-1},由中间状态Sj在密钥K[i,j]作用下计算状态#2r-12的第4字节珖vi,j.如图4所示(状态标记使用括号中的标记).在密钥扩展中,由已知的$r-1计算$r-2,$r-3,$r-4,$r-5,$r-6,需要计算13个S盒;在轮变换中,从#2r-3开始反向计算#2r-12的第4个字节,需要计算37个S盒.反向计算共需计算50个S盒.(3)正向计算.对i,j∈{0,1,…,28-1},由明文Pi在密钥K[i,j]作用下计算状态#2r-12的第4字节珗vi,j.如图5所示(状态标记使用括号中的标记).在密钥扩展中,由已知的$r-1开始,计算$(r-2)需要1个S盒,$(r-3)需要4个S盒,$(r-4)到$0各需要16个S盒,共1+4+16(r-4+1)=16r-43个S盒;在轮变换中,从#1开始正向计算#2r-12的第4字节,第0轮到第r-9轮各需要64个,第r-8轮需要16个,第r-7轮需要4个,共64(r-9+1)+16+4=64r-492个S盒.正向计算共需计算80r-535个S盒.5.2攻击复杂度1个Biclique结构需要进行216次匹配计算,2496个密钥组构成的2496个Independent-Biclique结构,共需要进行2496·216次匹配计算.在1次匹配计算中(包括1次反向计算和1次正向计算)共需经过50+(80r-535)=80r-485个S盒.由于3D算法正常加密1轮需要计算80个SPage7盒,因此,对r轮3D算法的Independent-Biclique攻击的时间复杂度为时间复杂度为2510.7.该值随r的增加而增加,趋近但始终小于2512,因此会略优于穷举.当r=22时,时间复杂度为2511.5;当r=10时,数据复杂度由Independent-Biclique结构决定,当r为奇数时,Independent-Biclique结构及攻为232个选择密文.击过程与r为偶数时类似,结论不变.6总结本文通过构造Independent-Biclique结构,提出了对全轮3D算法的Biclique攻击,时间复杂度略优于穷举;进一步,将攻击一般化,提出对r(r10)轮3D算法的Biclique攻击,并给出时间复杂度的公式表示.这不仅将对3D算法攻击的轮数扩展到10轮以上,也将是首个对全轮3D算法的理论攻击.目前的结果只是理论上的分析,暂不会对3D算法的实际应用产生威胁.3D算法具有复杂的密钥扩展算法,这使得很难构造更多轮数的Independent-Biclique结构.因此如何构造其它类型的Biclique结构改进现有结果以及寻找更有效的方法是今后需要关注的问题.
