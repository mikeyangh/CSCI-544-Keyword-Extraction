Page1一种基于点割的电路划分算法张恩利高琳(西安电子科技大学计算机学院西安710071)摘要文中提出了一种基于IG图(IntersectionGraph)点割的电路划分算法,引入IG图模型,根据电路中信号网络间的交互关系构建IG图,直接对电路信号网络IG图进行最小点割划分,从而实现对电路单元(模块)的划分.该算法既有效地解决了电路超图与图之间转换的一致性问题,又实现了点割目标值与直接电路划分目标值的一致性,IG图点割集的大小即为真实电路划分的目标值.此外,通过给每个电路网络赋权重的方式构建带权重网络交互图,实现对电路网络划分的面积平衡进行近似控制,满足电路划分对面积平衡的特殊要求.采用MCNC提供的标准电路测试数据进行测试,实验结果表明,基于IG图点割的电路划分算法较基于网络超图HDN划分的K-DualFM算法平均有3%~7.8%的提高;同时,基于IG图点割的随机优化算法ROP比基于超图划分的FM优化算法具有更强的全局优化能力,划分结果提高18%,比基于二部图匹配的点割优化算法提高36%,对较大规模数据划分优化效果更好.关键词电路划分;IG图;点割;集成电路1引言电路划分是电路物理设计阶段的关键技术之一,是解决日益复杂的电路设计问题的一种有效途径,从设计分装、逻辑综合、布局布线到模拟测试[1],都需要使用电路划分技术把大规模电路设计问题划分成若干较小的部分逐个地进行处理.依据摩尔法则,集成电路规模每18个月就会翻一番①,目前,超百万门级的设计已经非常普遍,随着纳米工艺技术逐渐成熟,T级规模的电路已经出现,如此大规模的集成电路对当前的EDA(ElectronicDesignAutomation)设计工具提出了挑战,电路划分已经成为EDA工具急需解决的一个关键技术难题.电路划分是把整个电路划分成若干个较小的部分,要求各部分电路单元(模块)的总面积基本相同,并使各部分之间的连接信号数量最少.电路划分是一个NP完全问题[2],通常用启发式算法寻求近似解.目前,国际上对电路划分算法的研究已经有近40年的历史,已有的启发式划分算法非常多,这些算法从划分策略上大致可以分为两类.一类是基于组迁移技术的划分算法[3-8],这类算法的显著特点是通过移动和交换顶点的方式来优化目标割值.KL算法是最早被Kernighan和Lin[3]提出的基于移动策略的划分算法,该算法应用在电路划分中取得了较好的效果,之后的许多算法都是对这种算法的改进.其中,以Fiduccia和Mattheyses[4]提出的FM算法最为著名,该算法对移动策略和数据结构进行了改进,使其具有实现简单和时间复杂度低等特点,从而得到了更为广泛的应用.但FM算法的全局搜索能力仍较差,易陷入局部最小,针对其搜索能力的缺陷,之后出现的LA算法[5]、CLIP/CDIP算法[6]、LSR算法[7]、PROP算法[8-9]等均对FM算法中移动顶点的选择策略进行了相应改进并取得了一定成效.新近发展的多层电路划分算法[10-12]通过把聚类技术与FM算法相结合的方式显著地增强了算法的全局搜索能力和超大规模数据处理能力,使电路划分质量有了质的提高.另一类则是基于传统组合优化方法的划分算法.如基于遗传算法(GeneticAlgo-rithm)[13]、模拟退火算法(SimulatedAnneal)[14-18]、禁忌搜索(TabuSearch)[19-20]、蚁群算法(AntColonyAlgorithm)[21]等方法的划分算法,这类算法具有较好的全局搜索能力,可在全局范围内随机搜索最优解,在足够长的时间内可能找到全局最优解,但这类算法因为其收敛速度太慢而在实践中很少被应用.此外,也有基于网络最大流最小割算法(Maxflow-Mincut)、谱划分算法等进行电路划分的[1].电路通常采用超图来表示,超图中的顶点代表电路中的电路单元(模块),超边代表电路中的电路信号网络.在超图模式下,通常超边是与多个顶点相连接,这导致基于组迁移策略的划分算法在优化过程中很难优化骑跨在不同分区上的较大超边,致使这类算法存在易陷入局部最小的不足.为克服超边的这种不利影响,现有的许多算法直接对超边进行优化,如LSR[7]、PROP[8]、hMetis[10]等.这些算法把被割超边作为一个整体进行移动,从而增大了移除超大超边的概率,提高了划分算法跳出局部最小的能力.另一类方法则把超图转化成图,直接用图划分的方法解决超图划分问题.常用的转化方式有两种:一种是基于有权图模式的谱划分算法.该算法通过用团代替超边,并给团中每一条边赋以权值1/(|e|-1)方式把超图转化成有权图,然后采用谱划分方法对转化后的有权图进行划分.根据顶点间的边权重构建Laplace矩阵,通过第二小特征值对应的特征向量对电路进行划分,其划分目标值为最小代价边割值.谱划分算法虽具有良好的全局特性,能找到较自然的划分边界,但这种算法宜适用于比例划分,一般很难满足各部分面积平衡的要求.此外,这种用团来代替超边把超图转化成有权图的算法还存在最小代价边割目标值与超图划分的割边目标值不一致的问题[10];另一种是基于网络交互图(IntersectionGraph,IG)模式的网络划分算法[22-24].这种划分算法首先根据电路超图构建出网络IG图,然后用图划分方法对IG图中的信号网络进行划分,最后根据信号网络的划分结果导出电路单元的划分.Kahng[22]和Cong等人[23]早先提出了基于网络划分的EIG1和IG-Match电路划分算法,它们利用谱划分的方法对IG图进行划分,并根据网络划分导出划分界顶点二部图,再用最小顶点覆盖的方法确定最佳网络划分.Cong等人[24]还提出了基于网络划分的多路划分算法K-DualFM,该算法直接利用K-FM算法对混合超图HDN(HybridDualHypergraph,一种IG图与对偶网络超图DNHG的混合网络超图)进行划分,把原超图划分问题转化为另一种超图的划分问题,其划分目标是使HDN图中各部分网络之间超边割值最小,并应用MinCost-MaxFlow方法解决多路网路划分中电路单元的分配①Internationaltechnologyroadmapforsemiconductors.Page3问题(K-wayModuleContentionproblem,K-MC).这种基于网络划分的算法既有效地解决了超图与图之间转换一致性问题,又避免了超边对组迁移划分优化算法的不利影响,具有较好的应用价值.但这几种基于网络划分的电路划分算法都是基于IG图的最小边割划分,其划分的直接目标值与电路划分问题的目标值并非一致,即图划分问题中的边割集与点割集不一致问题,图的最优边割划分与最优点割划分无直接对应关系.事实上,基于网络划分的电路划分问题完全可以转化为基于IG图的最小点割划分问题(VertexSeparatorProblem,VSP),直接运用点割划分算法对电路网络进行划分,这正是本文提出直接点割算法进行电路划分的原因,同时简化了后续电路单元的分配问题.本文提出了一种基于IG图点割的电路划分算法.该算法通过划分电路中的信号网络来划分电路单元,首先根据电路中信号网络间的交互关系构建网络交互图,直接对网络IG图进行最小点割划分,并根据网络划分结果导出相应的电路单元划分.该方法通过把电路划分问题转化成IG图的点割划分问题,既有效地解决了电路超图与图之间转换的一致性问题,又实现了点割目标值与直接电路划分目标值的一致性,使IG图点割集的大小直接对应真实电路划分的目标值.但由于求解图的最小点割集问题也是一个NP-Hard问题[25],本文提出了一种基于组迁移策略的启发式点割划分算法对网络IG图进行划分.首先采用一种基于割点前移的贪婪算法对IG图进行初始划分,再运用基于组迁移策略的随机点割优化算法对点割划分进行优化,近一步提高划分质量.在优化过程中,单个网络顶点的移动相当于超图划分中一组电路单元的同时移动,从而有效地提高了算法的全局搜索能力.此外,为满足电路划分对面积平衡的特殊要求,通过给每个电路网络赋以权重的方式构建带权重网络交互图(WeightedIntersectionGraph,WIG),实现网络划分过程中对各部分电路的面积进行近似平衡控制.图1电路示例图2问题描述2.1超图模型电路网表的连接关系常用超图H=(Vh,Eh)来描述[26],其中顶点Vh表示电路中的单元或模块,超边Eh表示电路中的信号网络.在超图模型中,电路二分划分就是将超图H划分成两个不相交的部分V1和V2,V1∪V2=V,V1∩V2=.同时满足面积平衡约束条件,假定面积平衡约束的容忍因子是ε,那么,各个划分部分的面积平衡约束条件可以表示成如下形式:(1-ε)AH/2Ai(1+ε)AH/2,i=1,2(1)其中,Ai指划分中Vi顶点子集中所有顶点权重之和,即电路划分中第i部分电路单元和模块的面积之和,AH表示超图H的所有顶点的点权重之和.电路划分问题是一个约束极值问题,即在面积平衡约束的条件下,寻找单元分配的最优解,使超边割值目标函数(2)达到最小.min|{ej|ej∈E,ej∩Vi≠,j=1…n,i=1,2}|2.2IG图模型在超图模型中,电路划分问题对应着超图顶点的分配问题,在把顶点分成若干基本相等部分的同时,并使骑跨在不同部分间的超边最少,即割值最小.但从超边的分配角度来看,在超图的一个划分P中,除被割的超边外(定义为割边集C),其它超边也被分成K个互不相邻的部分Ehi(i=1,…,K,代表不同超边的集合),而划分的目标值即为割边集C的大小,这完全等同于电路的网络划分,电路的网络IG图[22]可以很好地表示出信号网络的这种划分关系.在IG图中,顶点代表着超图中的超边,边代表着超图中超边之间的交互关系,每一条边都代表着与其相连的两个顶点所对应的超边存在着交互关系,即至少有一个公共顶点.IG图的构建方法如图1所示,给定一个无向图G=(V,E),顶点集V中Page4每一个顶点对应着超图中的一条超边,边集E则对应着超边在超图中的交互关系,如果在超图中,两条超边存在交互关系,则在图G中,这两条超边所对应的顶点就有一条边相连.在IG图中,由于超边的交互关系被完整地保留,而超图中顶点的相关信息被略去,所以这种转换是不可逆的,一个超图唯一对应着一个IG图;反之,与IG图对应的超图则不唯一.在IG图模式下,IG图的一个点割划分代表着超图中超边的一个划分.同样,超图划分中的超边划分P也对应着IG图的一个顶点划分P,割边集C对应的顶点C把其余顶点分割成K个互不连接的子图Gi=(Vi,Ei),顶点子集Vi对应着超图划分中的超边集Ehi,顶点子集C即为IG图的一个点割,超图中超边的划分被转换成IG图的点割划分问题.事实上,超图的超边划分问题与IG图的点割划分问题是等价的,IG图的点割划分与超图的超边划分一一对应.通过把电路超图转化成IG图,超图的超边划分问题(即电路的信号网络划分问题)被转化为IG图的点割划分问题,因此可用直接点割划分算法对网络IG图进行划分,从而实现电路网络和单元的划分.在对IG图进行点割划分的过程中,为满足电路划分对面积平衡的特殊要求,通过给电路网络中的每一个信号赋权重的方式构建电路网络的带权交互图WIG,即对IG图中的每个顶点赋以网络平均面积权重Wi,并对WIG图点割划分的各部分顶点进行面积平衡控制,实现对电路划分的面积平衡进行近似控制,并在最终的电路单元分配中进行精确地面积计算和局部面积平衡修正.实践证实,这一近似面积平衡控制方式非常有效,只有当电路单元面积变化非常大或面积平衡要求非常高时才难以满足要求.下面给出两个与本文算法有关的定义.定义1.邻接点集定义为无向图G=(V,E)中,顶点子集Y中所有与顶点子集X中的顶点相邻的顶点所构成的集合,记为NG(X,Y).表达式为NG(X,Y)={vj|vi∈X,vj∈Y,〈vi,vj〉∈E,i,j=1,…,n}.单个顶点xi的邻接点集等于顶点集{xi}的邻接点集,记为NG(xi,Y).如果无特殊情况,对特定无向图G,则简记为N(X,Y)和N(xi,Y).定义2.带权交互图WIG中网络平均面积权重定义为顶点i所对应的实际电路信号网络上所有引脚平均占有电路单元或模块的面积之和,记为Wi.其表达式为其中,vH顶点vj的点权重(电路单元的面积),D(vH中顶点vj的度.3算法设计本文提出的基于IG图点割的电路划分算法主要有4个部分组成,其核心是基于组迁移策略的点割优化算法.首先根据电路超图构建网络IG图,需对超图中所有顶点进行一次遍历,并把与同一顶点相连接的所有超边作为一个团添加到IG图中.其次是对IG图进行初始划分,并利用点割优化算法对初始划分结果进行优化,进一步提高划分质量.最后,根据IG图的网络划分结果对电路单元进行分配.可先根据电路网络的分区把网络中的(不包括点割集中的网络)所有电路单元分配到对应分区,再将剩余的未分配的中性单元分配给面积较小的就近分区.因为这些中性电路单元只属于割边集,它们的分配不影响电路划分的割值,且通常只有非常小的一部分(对于二路划分,不足总面积的1%),分配给面积较小分区可对分区面积进行细微修正.3.1初始划分算法本文采用一种简单的贪婪算法进行初始划分,可在线性时间内完成初始划分.该贪婪算法采用最小外度顶点优先的方式,每次从当前点割中选择一个外邻接点个数最少的割点,划为内部点,把割点向前推移,使与其邻接的外部顶点成为新的割点.该算法每次移动顶点时,把不在割集中的邻接顶点添加到割集中,作为新的割点,同时更新与当前顶点相邻接的割点的度,邻接顶点的更新时间只与顶点的平均度的大小有关,与数据规模无关.在划分的过程中,为选取最佳划分点,需把割点前移至内部顶点子集达到面积允许上限为止,记录此过程中面积在允许的上、下限范围内的割值最小的划分点,并选择作为最佳划分点.该算法描述如下.算法1.基于割点前移的初始划分算法(PCVS).输入:网络交互图G和平衡容忍因子ε输出:图G的一个点割C1.初始化一个内部顶点子集S=和一个割点子集C=;2.随机从图中选取一个顶点作为种子顶点,把它加入到顶点子集S,把其邻接点集N(S,G-S)中的顶点加入到C,C就构成了图G关于S与G-S-C的一个点割;Page53.在C中选取一个外度最小的顶点vi,即邻接点集N(vi,G-S-C)最小的,把顶点vi加入到S中去,同时把vi的外邻接点N(vi,G-S-C)加入到C中去,实现割点前移;4.判断点集S中的内部顶点是否达到面积平衡要求,如果大于上限则终止循环,输出合法的最小划分结果;否则记录合法的最小划分,并继续执行步3.3.2基于IG图的点割优化算法常用的基于二部图匹配的点割优化算法(BMP)是Liu[27]提出的,这种优化算法具有很强的局部搜索能力,可以在较短的时间内找到局部最优解.设C是图G关于R和L的一个点割,该优化算法通过不断的寻找点割C中的一个顶子集Y,使|Y|>|N(Y,R)|(R与L是对等的,以下均只考虑R情况),用N(Y,R)替换Y,新产生的点割C=(C-Y)∪N(Y,R)的割值比原点割C的割值小,从而使点割得到优化.但这种基于二部图匹配的点割优化算法全局搜索能力较差,具有单调递减性,只能单调搜索点割的邻接顶点集中的可优化顶点子集,易陷入局部最小.为了克服上述算法的全局搜索能力的不足,本文提出了一种基于组迁移策略的直接点割优化算法.该算法随机选取割线附近的一个顶点子集U,如果|N(U,C)|>|N(U,R-U)|,那么,移动顶点子集U就有可能使目标值得到优化.这种方法扩大了优化算法的搜索范围,增强了算法的全局搜索能力.如图2所示,基于二部图匹配的优化算法易于找到子集Y及其邻接顶点子集X,用X替换Y使割值减1,却无法找到子集U及Y,X,但移动U,用X替代Y,割值同样减1.图3点割优化算法过程示例在优化过程中,初始随机选取的顶点通常很少会带来目标值的减少,只有当一系列关联紧密的顶点移动之后才会带来目标值的减少,称之为“爬山”效应.为避免过量无效的移动操作,需设定一个阈值对无效的顶点移动进行限制,当移动的顶点数目超过阈值还没带来目标值的减少时,提前终止本轮优对关联子集U的选择,采用局部随机搜索进行选取,并运用关联激励机制进行顶点更新.该方法对所有邻接顶点设定Score值项,每次移动顶点时对相关联顶点进行更新和加分激励,使与当前移动顶点关联紧密的顶点被赋予较高的Score值,关联最紧密的顶点具有最大的Score值,将作为下一次移动的目标,这种方法有效地激励连接比较紧密的顶点相继被移动.Score值的更新方法如下:设顶点s被选中并被移动到点割C中,s在割集中的邻接顶点集为Z=N(s,C),那么R中与Z直接相邻的顶点都需要被更新.对Z中的每一个顶点以及s点,找出其在R-{s}中的邻接顶点,这些顶点的Score值分别增加.如果顶点与Z中的顶点连接关系比较紧密,即与Z中的多个顶点相邻接,Score值相应地增加多次,就有可能成为下次移动的目标.如图3所示,开始从P中选取一个顶点进行移动,每次更新时Score值增加1,经6次移动和更新操作,U和X中的顶点相继被移动,Y被X所替代.化.通常,该阈值的大小需要根据数据规模的大小来设定,一般取顶点数量的0.5%~5%,并采用变限值的方法,扩大优化算法的搜索效率.在优化过程刚开始的时候设定较大的限值,使较大的顶点子集能够被移动,提高算法的“爬山”能力;当割值变化较小时再调整为较小的限值,限制大规模顶点的移动,增Page6强局部搜索能力.(ROP).算法2.基于组迁移策略的点割优化算法输入:网络交互图G的一个点割划分P、面积平衡容忍输出:网络交互图G优化后的点割划分P1.根据分区面积大小,选择优化时顶点移动方向,假定AR>AL,选定R;2.初始化割点集C及邻接顶点队列,把N(C,R)中的所有顶点都放入该队列,并初始化所有顶点Score值为0;3.随机在邻接顶点队列中选取一个顶点s作为种子顶点,移动顶点s,把s加入到点割C中,更新N(s,C)中的割点的状态,把N(s,R)中不在邻接顶点队列中的顶点加入到队列中,并置Score初值为0,更新N(s,C)中每一个割点和s点在R-{s}中的所有邻接顶点的Score值;4.在邻接顶点队列中选择Score值最大顶点,移动该点,更新C及邻接顶点队列,更新关联顶点Score值;5.如果割值变小,且面积满足平衡要求,无效顶点计数清零,继续执行步4;否则,如果无效移动次数超过阈值,则回退无效移动,并标记该顶点,以后不许再选作初始种子顶点;6.如果结果有提高或小于限制次数,则继续步1~5操作;否则终止,输出优化结果.4实验结果及分析为比较算法的性能,本文采用VC++编程语言实现了FM划分优化算法、基于最小度序列的划分算法(MinimumDegree,MD)[27]、割点前移的初始划分算法(PCVS)、基于二部图匹配的点割优化算法(BMP)以及本文提出的随机点割优化算法(ROP)等算法,并采用MCNCbenchmark①和ISPD98benchmark[28]标准电路测试数据对算法进行性能测试,所有测试在CPU主频为1.4GHz、内存1GB、操作系统为WindowsXP的HP台式机上完成.表1列出了MCNCbenchmark标准电路测试表1MCNCbenchmark标准电路测试数据集特征参数电路名称单元数信号线数引脚数器件面积ami33331233881156449ami494940891235445424fract125163454225504g21993779259596023primary18331266327226607000struct1888192054072850352industry12271247980254403352primary2301438171200753457000biomed641770522225313062992industry212150134194765710404768industry3150592196665610360933376数据集的相关参数,本文对实验数据进行了预处理,对电路中的PAD进行了删除,但对实验结果无影响.为了比较本文提出的基于IG图模式点割的电路划分算法的性能,将划分结果分别与基于超图模式的FM优化算法和多层电路划分算法hMetis[10]以及基于网络划分的电路划分算法K-DualFM进行了比较,表2给出了电路划分的结果.初始划分方法分别采用了MD和PCVS两种划分算法,PCVS采用30次划分,取最佳划分结果.为公平比较FM优化算法、BMP及本文的ROP优化算法的优化性能,实验均采用PCVS作为初始划分算法,取30次运行产生的最小划分为初始初分.hMetis算法的划分结果是按要求输入超图数据,参数设定为Nparts=2,Nruns=30,CType=1,RType=1,Vcycle=3,UBfactor=5,Reconst=0,选取30次运行中最佳划分结果.K-DualFM算法的参数K设为2,超图HDN的超边团化参数CF设为3~8,划分算法为多层超图划分算法hMetis,参数同上,同样选取30次运行中最佳划分.所有测试均采用真实电路单元面积,并设定面积平衡容忍因子为10%,即各分区面积应保持在45%~55%以内.比较结果显示,基于割点前移的初始划分算法PCVS的划分质量和效率都较基于最小度序列的点割划分MD算法要好,最终优化结果平均比MD算法提高了35%.从算法效率上来看,MD算法每次在删除顶点时都要对该顶点的所有邻接顶点进行更新,通过添加边使其所有邻接顶点构成一个团,团化使顶点度不断增加,后期团化时间复杂度接近O(N2),算法总的时间复杂度达到O(N3),很难用于较大规模的数据,而PCVS算法则能在近似线性时间完成划分.在优化算法的性能上,ROP算法较FM及BMP算法的搜索能力都要强,划分优化结果分别提高了18%和36%.当数据规模较小时,FM算法和ROP算法的具有同样的优化性能,但随着数据规模的不断扩大,FM算法的搜索能力明显下降,而ROP算法逐渐显示出较强的优化能力.与BMP算法相比,ROP算法具有较强的“爬山”能力,能够有效的跳出局部最小,可以在更大的范围内寻找最优解.但BMP优化算法具有更强的局部搜索能力,只①TheMCNCstandardcircuittestingbenchmark.http://Page7表2电路划分结果比较(所有单元或模块采用真实面积,面积平衡容忍因子为10%)电路名称ami33121010101010.00101010101099.9ami49995231313447.9032313133313131.0fract161211111429.1012121111121111.0g2523834344143.3036292931292828.2primary1937260608289.8072656052685462.0struct696152524756.8036333338333333.2industry1514026264460.0337202028262021.7primary2318275238238226288.70206172172182183161166.4biomed124118112110118127.40928886107858387.2industry2653422367344473594.90351188182188264174231.3industry3995554243201500621.83242189187209226188236.8Ratio3.002.001.431.351.922.381.361.021.001.071.180.961.11量有较大下降.主要有两个方面的原因:(1)初始划分算法PCVS规模处理能力较弱.虽然该算法可以在线性时间内完成初始划分任务,但随着测试数据规模的增加,初始划分的质量迅速下降,初始划分的全局性变差,导致最终划分的质量变差;(2)多层电路划分方法利用聚类粗化技术有效降低了数据规模,显著提高了优化算法的优化性能.多层电路划分算法通过聚类方式把原电路中连接比较紧密的模块合并在一起,当作一个顶点来处理,从而使原电路粗化成一序列规模更小的粗化超图.首先对顶层最小的粗化超图进行划分和优化,并作为下层粗化超图的初始划分,然后再逐层恢复优化,直到最后还原至原图.由于粗化后的超图规模较小,且粗化超图中的单个顶点的移动相当于原图中一组顶点的移动,因此,多层电路划分算法可显著提高优化算法的搜索能力.因本文的划分算法是一种单层(Flat)划分算法,属于基本划分算法,直接在IG原图上进行划分表3ISPD98benchmark标准电路测试数据集特征参数电路名称单元数信号线数引脚数器件面积ibm011275214111505664230016ibm021960119584811998458336ibm032313627401935739842880ibm0427507319701058599294944ibm0529347284461263084471520ibm0632498348261281828577791ibm07459264811717563911829856ibm08513095051320489013449888ibm09533956090222208817529312ibm10694297519629756747534336ibm11705588145428078621237408ibm12710767724031776036974848ibm13841999966635707525061568ibm1414760515277254681628727296ibm1516157018660871582336534944ibm1618348419004877882352592704ibm1718549518958186003642187712ibm1821061320192081969733686560要算法爬过“山峰”,该算法就能找到局部的最优解.从实验的结果可以看出,BMP优化算法会很早收敛于局部最小,而ROP算法则可以得到更好的全局解,这两种算法的互补结合可以使划分质量进一步提高.与基于HDN网络划分的电路划分算法K-DualFM相比,基于IG图点割的电路划分算法也具有更稳定的性能表现.虽然基于HDN网络划分的算法也能够产生部分较优的划分方案(甚至最好的方案),但由于其划分目标与原超图划分目标不完全一致,即超图HDN最优边割划分并不一定导出最优电路划分,从而导致部分划分结果质量较差.此外,在HDN图的转换上,分别测试了CF值为3~8的所有结果,测试结果表明,CF值会对网络及电路划分影响较大,但CF最优值不固定,也说明边割划分的不稳定性.与多层电路划分算法hMetis比较发现,当数据规模不是很大时,基于IG图点割的电路划分算法同样能产生较高质量的划分结果.为进一步测试算法的规模处理能力,我们采用ISPD98benchmark的大规模数据集对算法进行了测试,测试方法及参数同前,表3和表4分别列出了测试数据集的特征参数和结果比较数据.从表3可以看出,ISPD98的测试数据具有更大的规模,数据规模从12000~210000.从表4测试结果来看,随着数据规模的变大,基于IG图模式的ROP优化算法显现出较强的优化性能,如果初始划分具有较好的全局性,即使初始划分的质量较差,该算法还是能够找到较好的解;相反,FM优化算法和BMP优化算法的搜索能力随着数据规模的变大迅速下降,极易陷入局部最小.但与hMetis相比算法,本文基于IG图点割的电路划分算法的规模处理能力相对较弱.当数据规模在20000点以下时,划分结果与hMetis算法的结果相当,但随着数据规模的扩大,划分的质Page8表4电路划分结果比较(所有单元或模块采用单元面积,面积平衡容忍因子为10%)电路名称PCVS(30)ibm01240482.4202216182181274181230.7ibm02494807.6461293264264351262280.9ibm0319372692.9112514811069100510929561017.6ibm0416582518.413751321653634576537567.7ibm0529522775.82382193518821831188917261749.5ibm0614552053.1127411589699651039888985.1ibm0722663012.9153315731051984874852902.6ibm0813822096.21302127612241183119211421155.7ibm0940064563.433792682733709717628701.2ibm1027213752.32613190515241517162312691549.5ibm1150186442.2477834141225120911069621126.0ibm1253487532.12991244122472219217118912185.2ibm1346705649.722792303107510251083851940.9ibm1468558231.45072504726552490217119202025.4ibm151118413287.66115642335043436317226472911.6ibm1655749434.84081417724342383278217632222.4ibm17716412624.54728483933753319263822142308.8ibm1847166614.02826290526562549156115262001.7Ratio2.513.421.861.681.031.000.940.850.95与优化,所以这需要优化算法具有更强的全局搜索能力.该算法也可与多层划分算法相接合,可进一步提高多层划分算法的性能.从K-DualFM算法的划分结果来看,尽管采用了多层超图划分算法hMetis对HDN进行初始划分,使算法具有较好的全局性,但K-DualFM算法仍然无法产生高质量的划分结果,与hMetis算法直接基于超图划分的结果还是有较大差距,这表明随着数据规模的变大,边割与点割划分的差异更加明显.而基于IG图点割的电路划分算法在中等数据规模时依然具有较稳定的性能表现,能够产生比K-DualFM算法更好的划分结果,当数据规模非常大的时候,受初始划分质量和全局性降低的影响,算法整体性能有较大下降.5总结针对电路划分问题,本文提出了基于IG图点割的电路划分算法,通过构建网络IG图,把传统的电路划分问题转化成电路信号网络IG图的点割划分问题,并运用点割算法对网络IG进行划分.采用MCNCbenchmark和ISPD98benchmark的标准电路测试数据进行测试,实验结果表明,基于IG图点割的电路划分算法比基于超图的FM划分算法具有更强的全局搜索能力,尤其对较大规模数据优化效果更明显,其划分质量接近多层电路划分算法hMetis,体现了直接点割划分优化的优越性.本文基于点割的电路划分算法属于一种单层(Flat)的电路划分算法,虽具有较好的全局搜索能力,但规模处理能力还是相对不足.目前,多层(Multilevel,ML)电路划分算法通过把聚类技术与普通划分算法相结合,利用聚类的方法把一些连接比较紧密的单元或模块合并成一个软模块,当成一个顶点来对待,有效地降低了数据规模,提高了划分算法的全局搜索能力和划分的质量.下一步的研究工作可以进行基于IG图聚类算法研究,结合ML划分技术,降低数据规模,进一步增强该算法的规模处理能力和全局搜索能力,提高算法的整体性能,扩大算法的适用范围.
