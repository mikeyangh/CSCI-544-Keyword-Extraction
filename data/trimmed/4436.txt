Page1基于动态半马尔可夫路径搜索模型的DTN分簇路由方法王恩1)杨永健1)李莅2)1)(吉林大学计算机科学与技术学院长春130012)2)(吉林大学软件学院长春130012)摘要在容迟网络环境下,文中提出一种基于动态半马尔可夫路径搜索模型的分簇路由方法CRSMP(ClusteringRoutingmethodbasedonSemi-MarkovprocessandPath-findingstrategy),该方法既考虑了节点拥有的社会属性所导致的分簇问题,又考虑到节点间未来一段时间内的最大相遇概率以及对应的相遇时间,结合分簇结果和相遇情况生成动态路由表,完成一种单副本的路由方法.该方法首先依据节点间路径的相似程度进行分簇,然后运用半马尔可夫模型预测节点间未来某一时刻的相遇概率,依据源节点和目的节点所在的分簇确定可以应用到路由中的节点集合,最后根据路径搜索策略找到最优路径,生成与当前时刻有关的动态路由表.仿真结果表明CRSMP在缓存较小的情况下投递成功率远高于DirectDeliveryRouter、FirstContactRouter和SimBetRouter三种单副本路由方式以及SprayandWait、Epidemic和Prophet三种多副本路由协议.在10M缓存下的CRSMP有着与500M缓存下的Epidemic相近的路由性能.进一步在真实数据集上进行测试,测试结果表明CRSMP算法依然有着较好的路由性能.关键词容迟网络;半马尔可夫;分簇;动态路由表;路径相似度;路径搜索1引言容迟网络(Delay-TolerantNetwork,DTN)[1-2]是一种由于端到端缺乏稳定链路,导致传输时延较高,甚至绝大部分时间处于中断状态的一类网络环境,其早期的应用场景包括星际网络[3-4]、战地网络[5]、乡村网络[6]、野生动物监控与追踪网络[7]、PSN(PocketSwitchedNetwork)网络[8-9]等.2003年FALL在国际会议SIGCOMM03上提出这一概念,在此之后,如何在这种拓扑结构剧烈变化的网络环境下寻求高效的路由方法成为该领域研究的热点问题.近年来,随着无线通信技术日趋成熟,通信设备的体积不断缩小,一些人携带着无线通信设备形成了基于区域的无线网络环境,在这种网络环境下,节点的移动方式主要包括区域内的驻留和区域间的行走,节点所在的区域编号代表了节点所处的状态,节点进入到下一个区域代表了状态的改变,节点状态的改变并不是完全随机的,下一个状态与当前状态存在着某种关系,而校园网络正是上述网络环境的典型例子.本文的研究思路来源于以下两个现象:(1)大学校园中同学和老师的行为并不是完全随机的,他们每天在一些区域(寝室、食堂等)会驻留较长时间.(2)同学和老师每天有着几乎固定的行动路线,比如本科生每天大致遵循“寝室→食堂→教室→食堂→教室→食堂→寝室”的运动规律.出现以上两个现象的主要原因是社会性驱使了节点的运动行为,致使节点的运动存在周期性,在这种网络环境下节点间的通信不是单纯地依靠随机相遇来完成,而是与彼此的社会行为状态产生了密不可分的联系.校园网络中往往体现出经典的“小世界”现象[10],即节点间可以依据其社会属性通过一跳或几跳与其他节点产生联系,社会属性相同或者相近的节点间会有更多的通信机会,于是挖掘出网络中有相似运动规律的节点簇必然会对该网络环境下的路由问题带来帮助.传统的DTN路由算法按照网络中的消息副本数量分为单拷贝和多拷贝两种类型[11].单拷贝路由方法在网络中只保留特定消息的唯一副本,这样的路由方式往往由于网络连接中断或者路由选择策略不准确而导致传输成功率不高,然而单副本路由方式节省网络开销,能够避免拥塞等网络问题,尤其在节点数量庞大的网络环境下,相对多副本的路由协议,单副本路由方式较好应用,经典的路由方法包括DirectDelivery[12]和FirstContactRouter.多拷贝路由方式又分为基于复制和基于概率两种[13],基于复制的路由方法主要是通过增加网络中的副本数量来提高投递成功率,但是这种路由方法消耗资源较大,并且极易发生网络拥塞等问题,经典的路由方法包括SprayandWait[14]和Epidemic[15].基于概率的路由方法[16]主要是考虑节点间的上下文信息,依据以往统计的历史信息来预测未来节点的行为方式以及节点间的相遇情况,进而服务于路由决策.基于概率的路由方法有Prophet[17]和MV[18],Prophet利用节点间相遇的历史信息和传递性来决定下一跳的选择,将报文复制给传输可预测性更高的节点.MV算法则利用节点间的相遇概率来描述报文传输成功的概率,节点仅向传输概率更高的节点复制报文.基于概率的路由方法不同于Epidemic路由策略,它并非向所有相遇的节点复制报文,而是有选择性地进行复制,但由于基于概率的路由方法依然通过复制的方式进行报文感染,因此属于多副本路由策略.随着容迟网络中路由技术的不断成熟,研究人员开始关注于节点间的相互关系、彼此社会属性的相似程度等因素.文献[19]中基于“小世界”理论,提出了一种以相似性(Sim)与中介中心性(Bet)相结合的SimBet单副本路由方法,该方法用节点间的共有邻居数代表彼此的相似性,将自身对其他节点间连接的帮助程度定义为自己的中介中心性,既考虑了节点社会属性的影响,又考虑到以往的连接情况,路由性能较好.Li等人在文献[20]中提出了一种考虑节点社会自私性的容迟网络路由算法SSAR,该方法综合考虑节点间的传输意愿以及相遇可能性,Page3运用机器学习方法衡量节点的传输能力,在节点保持自私性的情况下依然能有很好的路由性能.文献[21]中,通过将移动规律相近的节点聚合成最近社交圈,提出了一种分为簇外喷射、簇间转发和簇内传染三个阶段的社交时延网络路由协议.Abdelkade等人在文献[22]中提出了一种DTN环境下的基于社交分组的路由算法SGBR,该方法通过利用节点所在的社会群体来减少报文的冗余复制,进而提高路由性能.在文献[23]中周瑞涛、曹元大等人通过对网络节点历史运动轨迹点聚类建立其热点活动区域,把热点区域重叠度较高的节点归为同一社区,在源节点和目的节点的社区中以洪泛的方式加快消息的扩散和传递速度,针对不同社区准确地选择中继节点.文献[24]中讨论了容迟网络的路由算法向社交网络接近的必然趋势,提出了依据网络拓扑图对路由协议进行分类的想法.文献[25]中于海征等人利用社会网络中节点间的权值计算方法,计算出团队间的关系强度矩阵,消息源节点的团队依据关系强度矩阵选择合适的节点作为中继向目的节点传递消息,考虑到了自私节点对传递的影响,进而提出了基于社会网络的可靠路由方法.文献[26]中张振京等人提出了一种新型的混合路由算法CS-DTN,基于节点间相遇概率的预测值进行分簇,簇内依据二分喷射的方式寻找中继节点,簇间依据节点的运动情况进行预测,通过更接近目的节点的中继节点路由报文.综上所述,容迟网络中现有的路由方法或者关注依据社会属性的节点分簇问题,或者关注于节点间相遇可能性问题,或者关注于节点下一跳的转发选择问题.本文认为已有的路由方法存在如下缺陷:(1)已有的分簇方法所依据的分簇条件(节点间相遇次数、通信时长)变动较大,导致簇成员变化频繁,维护分簇的开销较高;(2)只能预测出未来节点间的相遇可能性,而不能确定未来某一时刻节点间的相遇概率,这样就无法判断节点间最有可能在哪一时刻发生相遇,导致对未来相遇的估计不够准确;(3)节点的路由只能决定下一跳的选择,而不能指导多跳路由.本文的主要贡献是:(1)校园网络中人的身份一般不会变化,人的社会角色决定了其每天运动路径相对固定,因此提出了基于节点间路径相似度进行分簇的方法,克服了以往分簇频繁变化,维护开销大的问题;(2)借鉴Yuan等人[27]描述的节点移动模型,在其基础上进行改进,运用半马尔可夫模型预测出节点间未来任意时刻的相遇概率,进而估计出节点间最有可能发生相遇的时间点,这样更有利于报文的路由决策.例如,以往的路由策略只能确定两个节点间未来的相遇概率为0.8,而这样的相遇可能发生在很久以后,依据这个概率值进行路由会带来很大的网络时延,而本文提出的半马尔可夫预测模型很好地避免了这个问题;(3)克服了一些路由算法只能指导一跳的局限性,运用搜索策略找到一条到目的节点的投递路径,生成与时间相关的动态路由表,尽量多跳地指导报文的投递行为.实验结果表明本文提出的基于动态半马尔可夫路径搜索模型的DTN分簇路由方法CRSMP(ClusteringRoutingmethodbasedonSemi-MarkovprocessandPath-findingstrategy)显著提高了投递成功率,并且在一定程度上降低了网络平均时延和负载比率.2分簇方法2.1节点运动轨迹模型本文在仿真实验中模拟了校园的10个区域,分别为寝室、食堂、计算机学院、数学学院、自习室1、自习室2、图书馆、校外、体育馆、银行,并在图1中用曲线围成的封闭区域表示,编号依次为0~9,区域内的黑色实心圆圈表示运动的人群,箭头表示人行走的方向.本文同时在图1的基础上设计了一种尽量模拟校园中学生和老师行为的运动模型,该运动模型的具体定义如下:每个节点从图1的一个区域内诞生,诞生时节点就携带了自己的路径信息(区域编号序列),在诞生区域内随机选择一个目的地,通过最短路径行走模型移动到该地点,然后随机选择下一个目的地,重复n次这样的行为,n的取值取决于区域编号.当n次选择之后,节点选择向区域编号序列中的下一个区域行走,到达下一个区域后同样依据该区域的n值来重复区域内的行为,当这个节点走完所有指定路径上的区域时,回到诞生地循环该运动模型.在每个区域内对应的n值参见实验部分的表1.这种运动模型主要仿真校园中学生和老师的两个行为习惯:(1)校园中学生和老师每天运动的路径都很有规律,并且若无特殊事件就不会更改这种运动行为;(2)老师和学生到达每个区域后都会停留一段时间,而往往具有同一种社会属性的人群在相同的区域内停留的时间也相差不大.因此本文设计的运动模型比较符合真实的校园行为.Page42.2节点间路径相似度的计算模型定义1.节点间路径相似度.G=(V,E)为网络拓扑图,其中V为网络中的节点集合,E为定义在G上的边集.节点a和b间的路径相似度定义为边的权值大小,记为W(ea,b),W(ea,b)的计算见定义3,其中节点a,b∈V,ea,b∈E表示节点a和b之间的边.在定义1中计算节点间的边权值时需要每个节点知道网络中其他节点的运动轨迹信息,本文在热启动阶段用如下方法统计轨迹信息:每个节点本地顺序保存N个链表,其中N为网络中的节点总数,每个链表的长度不固定,第i行链表对应的是i号节点的运动轨迹,节点本地链表的更新包括两个部分:(1)当i号节点进入地图中设置的一个编号为n的可通信区域内时,则将n加入到第i行链表的末尾.(2)当两个节点在通信区域内相遇时,执行如下更新规则:依次比较彼此的N行链表,用较长的链表更新较短的链表,没有表项的链表的长度定义为0.通过以上方法,经过一定量的模拟时间,整个网络中的每个节点本地保存的N个链表能反映网络中所有节点这段时间内的运动轨迹信息,其中每个节点的第i行链表存储第i号节点的移动路径.定义2.最长公共子序列.字符串A和B的最长公共子序列L满足:对于A和B的任意公共子序列K,都有KL,其中字符串A和B分别为节点a和b的运动轨迹.在定义2中,例如A=“1327468315”,B=“1275478312”,如图2所示,最长公共子序列L=“1274831”.从图2中分析得出公共子序列都是严格有序的,但是最长公共子序列未必唯一,两个字符串可以有多个长度相同的最长公共子序列.文中采用LCS(算法1)[28]来计算最长公共子序列的长度,进而计算路径的相似程度.算法1.LCS.intLENGH_LCS(charA,charB){intC[P,Q];FOR(i=P;i>=0;i--){IF(A[i]==‘\0’B[j]==‘\0’)C[i,j]=0;}RETURNC[0,0];}LCS算法的时间复杂度为O(PQ),其中P为字符串A的长度,Q为字符串B的长度.在计算数组C[i,j]时,只用到数组C的第i行和第i+1行.因此,只要用两行的数组空间就可以计算出最长公共子序列的长度.进一步分析可将空间需求减至min(P,Q).该算法采用动态规划的思想,自底向上递归求解最优值,即最长公共子序列长度.用初值为0的C[P,Q]数组记录整个计算过程中的最优值矩阵.当P=0或Q=0时,空序列是A和B的最长公共子序列,故C[P,Q]=0.经LCS算法得到的二维数组中左上角的C[0,0]即为最长公共子序列的长度.例如,A=“1327468315”,B=“1275478312”时,经LCS计算得到的二维数组如图3,C[0,0]=7,即A和B的最长公共序列的长度为7.Page5定义3.字符串相似度.字符串A和B的相似度W定义为W=2L求得的最长公共子序列的长度,P和Q分别为A和B的字符串长度.2.3基于节点间路径相似度的分簇模型定义4.集合间的路径相似度.g1V,g2V为网络中节点集合V的两个子集,g1∩g2=,集合间的路径相似度W(g1,g2)定义为W(g1,g2)=2∑eab∈E(U)W(eab)n(n-1),其中U=g1∪g2,|U|=n,E(U)={eab|a∈U,b∈U}表示U中的所有边集.定义5.网络平均路径相似度.网络平均路径相似度W(V)定义为W(V)=基于节点间路径相似度的分簇模型首先对整个网络的带权拓扑图(图4)依据边的权值(路径相似度)进行算法2的变换,生成一棵与拓扑图相对应的树结构(图5),这棵树结构的所有非叶子节点都是集合,这些集合代表了找到的具有较高路径相似度的节点簇.算法2.分簇方法[29].1.建立初始的节点分簇Vk={gi|i=1,2,3,…,n},gi为单个节点构成的集合分簇,gi={vi|vi∈Vk}.将所有单个节点的集合gi的路径相似度Wi设置为整个网络中所有边的均权值W(V),遍历所有边集合,寻找集合间路径相似度最大的W(gm,gn),从gm和gn中随机选择一个成为算法开始的集合gk.2.如果|Vk|>1跳转到步3,否则转到步10.3.遍历Vk,如果对于Vk中任意两个集合间的路径相似度W(gi,gj)均小于W(V)则跳转到步9,否则根据定义4寻找使W(gk,gi)最大的gi.4.如果W(gk,gi)W(Vk)跳转到步5,否则跳转到步6.5.将gi与gk和并为gik,将gik的路径相似度设为W(gk,gi),更新分簇Vk=Vk∪gik\{gi,gk}.跳转到步7.6.在Vk\gk的分簇中,挑选路径相似度最大的集合gi成为gk,如果Vk中路径相似度最大的集合不止一个,则从这些集合中随机选择一个成为gk,跳到步2.7.将通过步5得到的gik集合放入初始为空的集合M中,集合M用来保存每次通过步5选取得到的分簇.8.遍历Vk,选取路径相似度最大的集合gi成为gk,如果Vk中路径相似度最大的集合不止一个,则从这些集合中随机选择一个成为gk,跳到步2.9.在Vk剩余的集合中选取集合间路径相似度最大的两个集合gi与gk和并为gik,将gik放入第7步的M中,更新Vk=Vk∪gik\{gi,gk},跳转到步2.算法结束.10.树结构生成完毕,所有的非叶子节点保存在M中,算法2的第1步中遍历所有集合,寻找集合间路径相似度最大的W(gm,gn)时,需要计算C2n对节点间的路径相似度,计算的时间复杂度为O(n2).算法最终得到的树形结构有(n-1)个非叶子节点,最外层的循环需要进行(n-1)次,同时,考虑到合并两个路径相似度最高的节点分簇后,只需要计算这个新得到的分簇和已经得到的其他分簇之间的路径相似度,循环体内的计算时间复杂度为O(n).因此算法第2~9步的计算时间复杂度为O(n2).综上所述算法2的整体时间复杂度为O(n2).通过算法2得到的集合M中存在一些内部路径相似度不高的分簇,同时一些分簇之间具有包含关系,因此需要对得到的集合进行裁剪.裁剪策略如下:将M中的所有集合的边的平均权值由大到小排序,删去后一半路径相似度较小的分簇,遍历M中剩余的集合,如果M中的某一个分簇M1被M中其他某一分簇所包含,则将M1从M中删除,如果某些Page6节点不在裁剪后的分簇中,则自己独立成簇.通过上述方法能够得到内部路径相似度较高的节点分簇,具体的裁剪算法见算法3.算法3.集合M的裁剪算法.1.MSORT(M[g0,gn])//使用快速排序算法按路径2.DELETE(M[gn/2,gn])//删除后一半相似度较小3.FOR(i=0;i++;i<n)4.FOR(j=i+1;j++;j<n)5.R=INCLUSION(gi,gj)//判断两个集合的包含6.IF(R==true)THEN7.IF(LENGTH(gi)<=LENGTH(gj))8.DELETE(gi)9.ELSE10.DELETE(gj)11.ENDIF12.ENDIF13.ENDFOR14.ENDFORINCLUSION(gi,gj)1.{SORT(gi)//对gi中的元素进行分类2.SORT(gj)3.g=LENGTH_LCS(gi,gj)//求最长公共子序列4.IF(LENGTH(g)==LENGTH(gi)‖5.RETURNtrue6.ELSE7.RETURNfalse8.ENDIF9.}2.4分簇信息的维护过程本文的实验分为两个阶段:热启动阶段和路由阶段.在热启动阶段,每个节点本地保存N个链表,依据2.2节中的统计方法记录网络中所有节点的移动路径信息,并依据节点间路径相似度的计算模型得到每对节点间的路径相似度,运用分簇方法对网络中所有节点进行分簇.在路由阶段,应用热启动阶段的分簇结果执行路由方法.由于容迟网络中节点的运动复杂多变,即使在校园网络中,由于节点身份发生变化,很可能导致其行为习惯的变化,因此不能只进行一次分簇,但毕竟校园网络中节点身份的变化并不频繁,或者说在很长的时间段内节点的身份不会发生变化,因此路由阶段可以依据具体的实验场景设置很长的周期,这也是本文提出的分簇模型维护开销小的原因.这里特殊强调,虽然每个节点都需要对网络中所有节点的运动轨迹进行路径相似度计算并执行分簇方法,但是由于固定长度的热启动时间决定了每个节点统计得到的其他节点的轨迹信息不一定完全相同,因此它们做的并不是完全重复的计算,又由于DTN中特殊的网络环境导致集中式的计算方式很难应用,因此每个节点根据本地存储的节点运动轨迹信息独立运行分簇算法是合理的.本文针对实验的两个阶段设计如下:每个热启动阶段的时间长度相同,每个路由阶段的时间长度也相同,每个路由阶段末尾的一段时间同时也是下一个热启动阶段(图6).热启动阶段和路由阶段的具体设置见6.1节.3半马尔可夫预测模型节点K的状态集合记为LK={1,2,3,…,l},用以表示节点K所处地点的标号,l表示总共的地点数,节点K的第n个状态(路径中经过的第n个区域的标号)记为LKn,节点K进入第n个状态的时刻(进入第n个区域的时刻)记为TKn.对于节点K形成了一个时间离散、状态离散的马尔可夫链LKn,即节点K的第n+1个状态LKn+1只与第n个状态LKn有关,而与之前的状态无关.同时对于节点K形成了时间连续、状态离散的半马尔可夫过程模型(LKn,TKn),该模型描述了随着时间变化节点K的状态转移过程.节点K在第n个状态的驻留时间记为WKn,WKn可由TKn+1和TKn表示,如式(1).半马尔可夫模型(LKn,TKn)的核心表达式Z如式(2).Z(i,j,t,k)表示节点K在t时间内由状态i转移到状态j的概率,从式(2)中可以看出,LKn+1的状态取决于当前状态LKn,与之前的LKn-1等状态无关.Z(i,j,t,k)=P(LKn+1=j,WKnt|LK0…LKn,TK0…TKn)根据假设,K的路径序列满足时间离散、状态离散的马尔可夫链LKn,P(i,j,k)表示节点K从状态i转移到状态j的概率,统计LKn的历史序列,依据马尔可夫链性质,得到式(3),其中numij表示LKnPage7序列中由状态i直接转移到状态j的次数,numi表示LKn序列中状态i出现的次数(例如,LKn的序列为2,1,2,3,5,则P(2,1,k)=1/2).P(i,j,k)=P(LKn+1=j|LKn=i)=numij/numi(3)节点K由状态i直接转移到状态j所用的时间小于等于t的概率记为G(i,j,t,k),表达式如式(4)(例如从i直接转移到j的统计时间分别有2,3,3,4,5,则G(i,j,3,k)=3/5).G(i,j,t,k)=P(WKnt|LKn=i,LKn+1=j)节点K的当前状态为i,t时间内转移到了其他状态的概率记为G(i,t,k),表达式如式(5).G(i,t,k)=P(WKnt|LKn=i)=∑l则依据式(2)~(4)得出Z(i,j,t,k)的具体计算公式,如式(6).Z(i,j,t,k)=P(LKn+1=j,WKnt|LK0…LKn,TK0…TKn)=P(WKnt|LKn=i,LKn+1=j)·P(LKn+1=j|LKn=i)=G(i,j,t,k)·P(i,j,k)半马尔可夫模型(LKn,TKn)的另外一个核心表达式Q如式(7).Q(i,j,t,k)表示节点K当前时刻处于i状态,t时间后处于j状态的概率,Q(i,j,t,k)不同于式(2)定义的Z(i,j,t,k),Z(i,j,t,k)表示节点K当前状态为i,下一个状态为j,并且这个转移的时间不大于t的概率,而Q(i,j,t,k)中i到j不一定是连续的状态转移,也许在t时间内节点K经历过其他状态,只要得到t时间后节点K处于j状态的概率即可.特殊强调:Q(i,j,0,k)=0(j≠i),Q(i,i,0,k)=1.Q(i,j,t,k)=烄∑lr=1∑tQ(r,j,t-u,k),j≠i烅1-G(i,t,k)+∑lQ(r,i,t-u,k),j=烆u=1对式(7)做如下解释:当式(7)中j≠i,r=j,u=t时公式变为(Z(i,j,t,k)-Z(i,j,t-1,k))·Q(j,j,0,k),由于Q(i,i,0,k)=1,故公式转化为(Z(i,j,t,k)-Z(i,j,t-1,k)),表示t-1秒之前没有发生状态转移,在最后非常极限的时间t到达j状态.另外一种可能:当j≠i,r≠j,u≠t时,式(7)表示节点K在t秒内到达过其他状态,但是最后在t秒后到达了j状态,因此当j≠i时式(7)能够正确的表示节点K当前状态为i,t时间后状态为j的概率.同理当j=i时也分为两种情况,第1种情况是节点K在t时间内没有离开i状态,第2种情况是t时间内节点K到达过其他状态,但是在t时间后回到了i状态.第1种情况对应于Q(i,i,t,k)=1-G(i,t,k),第2种情况对应于Q(i,i,t,k)=∑lZ(i,r,u-1,k))·Q(r,i,t-u,k),因此在j=i时式(7)也能正确表示该概率.式(7)运用了动态规划的思想,其中Z(i,j,t,k)可以通过式(6)得到,G(i,t,k)可以通过式(5)得到,初始值Q(i,j,0,k)=0(j≠i),Q(i,i,0,k)=1.通过动态规划方法逐层求解,即可算出Q(i,j,t,k).本文提出的半马尔可夫预测模型在以下几个方面优于文献[26]中提出的预测模型.首先文献[26]中设计了一种节点的行为方式:以(1-p)的概率停留在当前区域内,而以p/(L-1)的概率前往其他(L-1)个区域中的任意一个,但是在预测模型中却运用基于历史路径信息的马尔可夫模型求解前往其他区域的概率值pij,预测模型并不适用于设计的仿真环境.而本文节点的运动轨迹采用统计的真实信息,提出的半马尔可夫预测模型较为适用.其次文献[26]中δij表示节点由i状态直接变为j状态的概率值,这样的设计不符合真实运动行为,故本文提出的预测模型在式(7)中分为i=j和i≠j两种情况讨论,使预测模型更加准确.最后文献[26]中节点在t时间内没有走出当前区域的概率值是通过节点在t时间内到达其他区域的概率值来间接计算的,而本文通过热启动阶段统计停留时间的时间分布直接计算该概率值,减小了计算复杂度.4相遇概率求解模型通过半马尔可夫模型可以求出任意节点K所对应的Q(i,j,t,k),已知节点a在ta时刻处于状态la,节点b在tb时刻处于状态lb,tmax=max{ta,tb},则a和b在tmax之后的时刻t(t>tmax),相遇于地点i的概率记为C(a,b,t,i),如式(8).C(a,b,t,i)=Q(la,i,t-ta,a)·Q(lb,i,t-tb,b)(8)根据式(8),a和b在t(t>tmax)时刻的相遇概率(任意地点)C(a,b,t)如式(9).Page8定义6.半马尔可夫预测时间窗口.半马尔可夫预测时间窗口Qt定义为节点K的公式Q(i,j,t,k)中t所能取得的最大值,为了计算方便,网络中任意节点的Qt均相同,Qt代表了半马尔可夫模型所能预测的最大时间跨度.定义7.相遇概率预测时间窗口.相遇概率预测时间窗口Ct定义为节点a和b的公式C(a,b,t,i)中t所能取得的最大值,为了方便计算,网络中任意节点对之间的Ct均相同,Ct代表了相遇概率求解模型的最大时间跨度.每个节点K本地保存一个三元组〈k,tk,lk〉,k代表节点编号,tk代表进入一个状态的时间,lk表示对应的区域(状态)编号.每当K进入一个新的区域的时候,就用最新的三元组替换掉之前的统计三元组,每当两个节点相遇的时候,交换彼此没有的三元组,这样一段时间以后网络中所有节点会拥有整个网络的三元组信息.假设当前时间为tn,ta和tb均小于等于tn,当要预测t时刻a和b的相遇概率时,首先考察t-tn和Ct的大小关系,当t-tnCt时按照式(9)正常计算,否则超出预测能力,无法计算.当执行式(9)时,考察t-ta,t-tb与Qt的大小关系,当t-ta,t-tb均小于等于Qt时,则正常计算;当t-ta,t-tb均大于Qt时(实验场景中Qt相对于Ct比较大,这种情况几乎不能发生),将节点a和b的相遇概率暂时设置为0;当t-ta,t-tb只有一个大于Qt时,不失一般性的假设t-ta>Qt,这时易得ta<tb,需要预测在tb时刻a最有可能处于的状态lmaxa,然后用〈a,tb,lmaxa〉替换掉节点a本地保存的三元组,继续进行预测.lmaxa的计算方法如下:lmaxa=argmaxjQ(la,j,tb-ta,a).综上所述相遇概率求解模型的流程如图7.定义8.a和b在Ct时间内的相遇概率Cmax(a,b,Ct).该概率值定义为在当前时间以后的Ct时间内最大的相遇概率,如式(10),最大相遇概率所对应的相遇时刻tabmax如式(11).Cmax(a,b,Ct)=maxtC(a,b,t)(tntt+Ct)(10)tabmax=argmaxtC(a,b,t)(tntt+Ct)(11)根据式(1)~(11),本文能够计算出网络中任意两个节点间在未来一段时间内的最大相遇概率以及对应的相遇时刻,不同于以往路由方法对于节点间相遇概率的估计,基于动态半马尔可夫路径搜索模型的DTN分簇路由方法不仅能够预测未来相遇的可能性,同时能够预测出在某一时间两个节点相遇的可能性大小,这样必然会对接下来的路由方法带来巨大帮助.5动态路由表5.1路由节点集合的确定在热启动阶段结束之后,每个节点可以统计到网络中所有节点的移动轨迹信息,依据分簇算法得到所有节点的分簇结果,当源节点a要向目的节点d路由报文的时候,a首先判断a和d是否在一个分簇内,如果在一个分簇内,则将该分簇内的所有节点定义为路由该报文的节点集合.如果不在一个分簇内,则将d所在分簇的所有节点和节点a定义为路由该报文的节点集合,在该集合中运用路径搜索算法生成动态路由表.5.2路径搜索策略定义9.t时刻的路由图O=(Vt,Et,t).其中Vt为5.1节中所确定的参与路由的节点集合,Et为定义在O上的边集合,a,b∈Vt,ea,b∈Et,ea,b上需要记录a和b在Ct时间内最大的相遇概率Cmax(a,b,Ct)和最大相遇概率所对应的时刻tabmax,如图8.定义10.源到目的节点的一条可走通路径.路径a0a1a2…an(n1)为一条可走通路径,当且仅当tan+1anmax>tanan-1max(n1).定义11.路径投递概率Cpath.对于路径a0a1a2…an(n1),Cpath=∏n-1Page9定义12.源到目的节点的最优路径.其定义为源到目的节点的可走通路径中Cpath最大的路径.算法4为最优路径搜索算法,其中π表示节点的后继,H表示节点集合.C表示节点间最大相遇概率,1800s是实验中选取的预测窗口大小.算法4.路径搜索算法.FIND_PATH(a,b,t)1.best←2.FIND_NEXT(a,b,t)3.RETURNbestPATH_PROB(π)1.ppath←12.FOReach(a,p)inπ3.ppath←ppath×p4.RETURNppathFIND_NEXT(a,b,t)1.p←max{Cab(k)|kin[t,t+1800]}2.π(a)←(b,p)3.IFPATH_PROB(π)>PATH_PROB(best)4.best←π5.FOReachc∈H-{a,b}6.(p,k)←max{(Cac(k),k)|kin[t,t+1800]}7.π(a)←(c,p)8.IFPATH_PROB(π)>PATH_PROB(best)9.FIND_NEXT(c,b,k)10.π(a)←NIL5.3动态路由表的维护节点路由表的初始化:节点根据实验热启动阶段得到的信息初始化路由表,依据热启动阶段得到的任意两个节点在预测时间内的最大相遇概率和最大相遇概率对应的时刻,生成路由图,依据最优路径搜索算法得到当前时刻该节点到达目的节点的最优路径上的下一跳节点的编号,生成形如〈下一跳节点,目的节点〉的二元组,进而生成与时间相关的动态路由表.节点路由表的更新:新报文的产生驱使动态路由表的更新.每当有新到报文时,根据报文的目的节点计算最优路径上的下一跳节点,重新生成与当前时刻有关的二元组,更新路由表中原有的选路方法,完成动态路由表的更新工作.综上所述,基于动态半马尔可夫路径搜索模型的DTN分簇路由方法CRSMP首先根据节点间路径的相似程度完成节点分簇,然后依据半马尔可夫预测模型预测出节点当前时刻在状态i并且t(tQt)时间之后到达状态j的概率值,进一步计算出任意两个节点在Ct时间内的最大相遇概率以及最大相遇概率值所对应的相遇时刻,根据源节点和目的节点的分簇关系确定用来路由报文的节点集合,依据最优路径搜索算法完成动态路由表的建立和更新,按照动态路由表信息路由报文.实验结果表明该路由方法明显提高了投递成功率,减小了网络的平均时延,并且在一定程度上减小了负载比率.6性能评估6.1仿真环境设置为了测试CRSMP的路由性能,本文采用机会网络模拟器ONE仿真该实验,在ONE自带的赫尔辛基市地图上进行修改,设计了一个尽量真实的校园环境作为实验场景(图9),在图9(4500m×3400m)的仿真环境中设计了10个区域,节点间的通信只能发生在区域内,并且进入同一区域内的节点间均可以通信,节点间能够通信的充分必要条件是这两个节点同时处于同一个通信区域内,每个区域是一个半径为200m的圆,用于模拟如表2中的校园网络环境.节点采用2.1节中描述的运动轨迹模型,每个区域内对应的n值见表1.Page10本文采用调查问卷的方式,对计算机学院的老师(20人)、计算机学院的研究生(20人)、数学学院的老师(20人)和数学学院的研究生(20人)共80人统计了他们工作日内在设定的这10个区域中的运动轨迹,并将这个轨迹信息赋值给节点的区域编号序列,节点遵循调查问卷统计的轨迹进行运动,由于调研能力有限,本文只对学校80个人的运动行为作了统计,但由于调查问卷采取随机发放方式,因此每一个分组内的20个人能够代表典型的校园环境下该类身份人员的一般运动轨迹,各类人员的运动轨迹差异也较大,适合进行基于路径相似度的分簇算法.当进行实验时分别从4组人群中各抽取6、8、10、12、14个人,组成节点总数为24、32、40、48、56的实验环境.为了防止时间粒度过细而导致实验计算量过大,也为了避免时间粒度过粗致使错过了一些节点间的信息统计,导致算法精度降低,本文采用60s为一个时间单元.实验部分依据统计得到的节点运动周期将热启动阶段设置为9000s,每个节点K在该阶段统计其他节点的移动路径信息,运用分簇方法得到所有节点的分簇结果,同时统计P(i,j,k),G(i,j,t,k)和G(i,t,k).热启动阶段结束之后,进入路由阶段,应用CRSMP路由方法仿真18000s,在路由阶段的最后9000s进入第2个热启动阶段.由于本文实验条件有限,只仿真了一个热启动阶段和一个路由阶段,但已经能够说明CRSMP路由算法的性能.实验参数的详细配置如表3.仿真区域大小节点移动速度消息产生时间间隔半马尔可夫预测时间窗口Qt相遇概率预测时间窗口Ct本文从以下3方面评估CRSMP协议性能:(1)投递成功率=成功投递到目的节点的报文数量/网络中产生的报文总数;(2)平均时延=消息到达目的节点的平均时间;(3)负载比率(开销比)=(利用连接成功传递包的次数-传递到目的节点的包的个数)/传递到目的节点的包的个数.6.2仿真结果分析为了全面验证CRSMP的路由性能,本文针对投递成功率、平均时延和负载比率3个标准来评估CRSMP路由方法.前两个标准比较容易理解,负载比率又叫开销比,能反映连接的使用效率,负载比率高说明更多的连接用来传递的数据包都没能成功传递到目的节点,连接的使用效用较低,负载比率低反而说明连接的有效使用率高.本文考虑到以下几个因素最有可能影响路由算法的性能:节点总数、报文产生速率以及节点缓存大小.由于CRSMP为单副本路由方法,因此考虑与另外3种单副本路由协议(DirectDelivery,FirstContact,SimBet)以及3种多副本路由方法(SprayandWait,Epidemic,Prophet)进行比较,从而说明CRSMP的路由性能.在仿真中依据SprayandWait路由算法初始副本数的不同,又分为4、6、8这3种情况.考虑到在相对比的路由方法中DirectDelivery,FirstContact,Epidemic,SprayandWait和Prophet这5种大家都比较熟悉,因此着重对SimBet路由方法进行介绍.SimBet是一种考虑节点社会属性的单副本路由方法,将节点间的共同邻居数定义为相似性(Sim效用),将自身对其他节点间连接的帮助程度定义为中介中心性(Bet效用),依据这两个效用值计算出节点对于SimBet路由方法的效用值(SimBetUtil),依据SimBetUtil的大小进行报文的路由决策.例如节点a有消息要转发给节点d,当a与b相遇时,通过式(12)、(13)和式(14)计算a的SimBet效用值,节点b同理.SimBetUtila(d)=αSimUtila(d)+βBetUtila(14)式(14)中α和β为两个可调参数,满足α+β=1,为了确定本文实验场景中的α和β的取值,首先在默认配置下(节点总数40,报文产生速率为每25~35sPage11产生一个,缓存大小10M)测试了不同α下SimBet的投递成功率(图10).从图10中可以看出随着α的增加,投递成功率也在增加,分析其原因,主要是小缓存下(10M)SimBet路由方法依据中介中心性进行路由有可能导致一些节点(Bet效用值较高)迅速发生缓存溢出,导致投递率的下降,因此β取值越小,投递效果越好.在接下来的实验中将α值设置为0.9,β值设置为0.1.为了确定半马尔可夫预测时间窗口Qt对CRSMP的影响,在默认配置下,将相遇概率预测时间窗口Ct设置为1800s,将Qt分别设置为60、70、80、90个时间单元,测试了路由算法的投递成功率.从图11中的数据可以看出不同的Qt对路由性能影响不大,但当Qt取值小于60个时间单元的时候程序抛出数组越界的异常,说明统计G(i,j,t,k)时一些转移时间超出了预测时间窗口,这样会产生很大误差,因此在实验环境中设置Qt为60个时间单元,即3600s.为了确定相遇概率预测时间窗口Ct对CRSMP的影响,其他设置不变,将Qt设置为60个时间单元,对不同Ct下CRSMP的投递成功率进行了测试,从图12中的数据可以看出,Ct取值1800s时投递概率最高,因此仿真环境将Ct设置为1800s.在仿真环境中确定了SimBet路由算法的参数取值以及CRSMP的Qt和Ct取值后,首先测试不同的节点总数对路由算法的影响,报文产生速率设置为每25~35s产生一个,节点缓存大小设置为10M,总节点数依次为24、32、40、48、56,得到投递成功率(图13)、平均时延(图14)和负载比率(图15).从图13中的数据可以看出CRSMP在相同的实验条件下有着很高的投递概率,平均在0.82左Page12右,远高于相同条件下的其他路由方法.由于Sim-Bet路由方法一直将报文转发给相似性(Sim效用)和中介中心性(Bet效用)较高的节点,导致大量报文都流向了连接度高的节点,致使节点负载不均衡.据文献[30]统计,SimBet路由方法中10%的节点承担了54%的报文转发和85%的报文递交任务,而这10%的节点在10M的缓存下不足以承担如此庞大的报文数量,进而丢弃大量报文,导致投递成功率较低.Prophet的投递成功率低于SimBet路由方法,说明在节点具有社会属性的网络环境下,单纯依靠相遇概率来指导报文转发的路由方法并不适用.在10M缓存下Epidemic的投递成功率很低,主要是因为网络中发生了大量拥塞现象,导致报文无法成功投递,丢包率很高.在图14中CRSMP并没有取得很低的平均时延,经分析主要是因为ONE中平均时延定义为成功投递的报文所经历的平均时间,而除了CRSMP以外的路由方法中长延时的报文在缓存为10M的情况下很难投递成功,因此平均时延相对较低,在下面的实验方案中通过增加缓存大小发现,其他路由方法的平均时延急剧上升,而CRSMP由于是单副本路由协议,对缓存的变化不敏感,平均时延比较稳定.SimBet路由方法的平均时延低于其他路由方法,经分析SimBet始终选择SimBetUtil更高的节点作为报文的下一跳中继,而SimBetUtil高说明该节点与目的节点的相似性和自身的中介中心性较高,这两种性质可以加快报文递交给目的节点的速度,因此SimBet路由方法的平均时延最低.在图15中CRSMP有着与4副本的SprayandWait路由方法差不多的负载比率,明显低于其他几种路由方法.SimBet路由方法的负载比率仅仅低于Epidemic和Prophet,而高于其他路由方法,这主要是因为SimBet路由方法下报文往往需要经过多跳中继节点才能到达连接度较大的节点,然后很有可能在连接度较大的节点上被丢弃(连接度较大的节点上缓存发生溢出),而这些丢弃的报文只增加了转发数据包的次数,并不增加成功投递到目的节点的报文数,因而SimBet路由方法的负载比率较高.DirectDeliveryRouter的负载比率一直为0,是因为其路由方式决定了其利用连接成功传递包的次数等于传递到目的节点的包的个数.完成不同的节点总数下路由算法的测试后,本文仿真了不同的报文产生速率下路由算法的性能.将节点总数设置为40,节点缓存大小设置为10M,在不同的报文生成速率下,得到路由方法的投递成功率(图16)、平均时延(图17)和负载比率(图18).从图16中的数据分析得出,在不同的报文产生速率下,CRSMP保持较高的投递成功率,当报文产生速度很快时,CRSMP投递概率呈现稍许下降趋势,因为过多的报文也导致了一部分拥塞的发生,影响了CRSMP的投递成功率,但总体来说远高于其他路由方法.图17中的数据显示CRSMP的平均时延很稳定,没有大幅度波动,并且随着缓存的增加,平均时延少于另外两种单副本路由方法(Direct-Delivery,FirstContact).图18中的数据与图15中的数据非常相似,在此不再赘述.接下来本文仿真了不同的缓存大小对路由性能的影响,同样将节点总数设置为40,报文的产生速率为每25~35s产生一个,在不同的缓存大小下得到不同路由方法的投递成功率(图19)、平均时延(图20)和负载比率(图21).Page13从图19中的数据可以看出,CRSMP对缓存要求非常低,在5M的节点缓存下就已经到达0.8左右的投递概率,从某种意义上讲该路由方法节省了大量网络资源,这主要是由于其单副本特性所致.SimBet路由方法随着缓存增加投递率明显提升,验证了本文之前的论述:小缓存下连接度较大的节点负载过高,缓存发生溢出,导致投递成功率下降.在图20的数据中发现当缓存增大时CRSMP渐渐表现出了平均时延方面的优势,之前的分析得到了验证.从图21中的数据可以看出Epidemic的负载比率一直是最高的,而CRSMP的负载比率近似于4副本的SprayandWait路由协议,性能良好.Sim-Bet路由方法的负载比率随着缓存增大呈现下降趋势,进一步说明缓存的增加减少了报文的丢弃,增加了成功投递到目的节点的报文数,使负载比率降低.为了进一步验证CRSMP在平均时延方面的优势,本文设计了实验来统计大缓存下不同路由方法的3个评估标准:投递成功率(图22)、平均时延(图23)和负载比率(图24).从图22的数据看出当节点缓存近似无限大时,Epdiemic只能达到0.9的投递成功率,而CRSMP在5M的缓存下就已经达到0.8以上的投递成功率,进一步说明了CRSMP的高投递性.图23验证了本文的分析,当缓存增大到一定程度时,CRSMP在平均时延方面表现出了良好的性能.图24显示CRSMP的负载比率在大缓存下依然较低,当缓存增大到一定程度时,SimBet路由方法的负载比率与FirstContactRouter相近,仅仅高于CRSMP和其他限制报文转发次数的路由协议.6.3真实数据集上的性能评估为了进一步验证CRSMP的路由性能,本文在真实的数据集上对CRSMP在内的9种路由方法进行测试,分别测试了不同缓存大小和不同报文生成速率下这9种路由方法的投递成功率、平均时延和负载比率,真实数据集上的测试结果表明CRSMP与其他路由方法相比依然有着较高的投递成功率、Page14较小的平均时延和负载比率.本文在该实验部分采用NCSU[31]这一真实数据集,该数据集统计了著名的美国北卡罗来纳州立大学(NorthCarolinaStateUniversity)的在校学生日常行为的GPS信息,该数据集共包含35个轨迹记录,这些记录均以天为单位,这些记录的行为主体是在学校中随机选取的学生,因此这些数据比较真实,具有说服力,也符合本文的实验场景.在ONE模拟器中导入了由GPS信息处理得到的平面坐标轨迹,在模拟器中同时仿真了这35个节点的运动行为,依据这35个节点在仿真时间内的运动范围确定了15000m×10000m的地图大小,依据这些节点移动的聚集程度和热点区域,在地图中定义了9个通信区域(图25),这些通信区域均为半径300m的圆,节点间能够通信的条件是两个节点同时处于同一通信区域内,默认的节点缓存大小为30M,报文生成速率为每40~45s产生一个报文,其他参数配置与6.1节的表3相同.首先固定报文的生成速率为每40~45s产生一个报文,测试不同的缓存大小对CRSMP等9种路由方法性能的影响.将缓存大小分别设置为20M、22M、24M、26M、28M、30M,测得9种路由方法的投递成功率(图26)、平均时延(图27)和负载比率(图28).从图26中的数据可见,在不同的缓存大小下,CRSMP路由方法与其他8种路由方法相比依然有着最好的投递成功率,并且随着缓存大小的增加投递成功率逐渐上升.从图27中的数据可见CRSMP在平均时延方面并没有表现出最好的性能,在之前的仿真实验中也出现了同样的情况,在6.2节中已经解释了原因,在此不再赘述.图28中的数据显示CRSMP的负载比率依旧较低.接下来固定节点缓存大小为30M,测试不同的报文生成速率对CRSMP等9种路由方法性能的影响.将报文生成速率分别设置为[30~35],[35~40],[40~45],[45~50],[50~55],测得9种路由方法的投递成功率(图29)、平均时延(图30)和负载比率(图31).从图29中的数据可见,不同报文生成速率下,CRSMP的投递成功率高于其他路由方法,与8副本的SprayandWait相比依然高出10个百分点左右.图30与图31的数据与6.2节仿真实验中的数据相近,在此同样不再赘述.Page15综上所述,基于动态半马尔可夫路径搜索模型的DTN分簇路由方法CRSMP与其他路由方法相比,提高了投递成功率,减小了网络平均时延,并且在一定程度上减少了网络负载.7总结与展望本文在机会网络模拟器ONE上仿真了近似真实的校园网络环境,设计了一套模拟校园中学生和老师行为的运动模型,提出了基于动态半马尔可夫路径搜索模型的DTN分簇路由方法CRSMP.首先依据仿真环境中节点间的路径相似度对其进行分簇,然后运用半马尔可夫预测模型得到节点间未来某一段时间内的最大相遇概率,以及该概率所对应的相遇时刻.在路由过程中依据源节点和目的节点所在的分簇信息确定参与路由的节点集合,运用最优路径搜索策略生成与时间有关的动态路由表,依据路由表信息进行路由.实验结果表明,该路由方法与DirectDeliveryRouter,FirstContactRouter,Epidemic,SimBetRouter,Prophet以及SprayandWait(初始副本分别为4,6,8)路由协议相比,提高了投递成功率,减小了平均时延,并且在一定程度上也减小了负载比率.为了进一步验证CRSMP的路由性能,本文在真实的数据集NCSU上对CRSMP在内的9种路由方法进行了测试,实验结果同样表明CRSMP路由方法有着最好的投递成功率和较少的平均时延以及负载比率.
