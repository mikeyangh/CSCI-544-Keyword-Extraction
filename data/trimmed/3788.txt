Page1Web服务选择中偏好不确定问题的研究王红兵孙文龙王华兰(东南大学计算机科学与工程学院南京211189)摘要应用偏好进行服务选择是Web领域的重要研究方向.在偏好研究中,偏好信息的获得是一个复杂的过程,特别是获取的过程涉及到普通的非专家用户.获取的偏好经常会遇到偏好不完整、偏好冲突的问题,在实际应用中带来很多的问题.文中以条件偏好表示工具CP-net建模用户的偏好,总结了CP-net中出现的不确定性,定义了偏好不完整、偏好冲突.提出了CP-net对应的结果集合上的最优关系与弱化的最优关系.通过CP-net与对应最优关系的分析,提出了CP-net交运算.在此基础上,提出了解决CP-net中不确定问题的方法,并对这个方法进行了优化.最后的实验证明了文中所提出方法的正确性和有效性.关键词Web服务选择;条件偏好;不确定;二元关系1引言随着计算机技术的发展,Web服务如雨后春笋般出现在网络中.网络上的服务虽然能够满足用户的功能需求,但是在非功能属性方面千差万别.Web服务的非功能属性也称为服务质量(QualityofPage2法.定量的方法虽然简单有效,但是在实际或复杂的环境中,使用这种方法还有很大的困难.而定性的方法能以直观的方式捕捉用户的偏好,更加的自然、通用,有很大的灵活性.条件偏好网络(ConditionalPreferenceNetwork,CP-net)[1]是描述用户条件偏好的一个典型模型,它本身是一个对可表达性和复杂性的适当的折中[2],能以直观、简洁、结构化的方式表示用户的偏好.CP-net的性质已得到广泛的研究[1-4].表面上,CP-net与贝叶斯网络相像,CP-net以图形化结构捕捉条件偏好.实际上,两者在性质和所表示的信息上有很大的不同.CP-net使用ceterisparibus[5-6](其它的条件相同)语义反映偏好表述的独立和条件依赖,表示条件偏好简洁自然.为了能够更好地做出决策,必须能够评估和比较不同的待选事物.比较有时隐含进行,更常用的则是需要显式获取决策者的偏好信息.偏好信息的获得是一个复杂的过程,特别是获取的过程涉及到普通的非专家用户.在经典的决策理论和决策分析中,经常使用效用函数来表示用户的偏好.产生良好的效用函数需要获取一定的信息.然而,获取信息的过程耗时费力,需要部分用户坚持不懈的努力.当效用函数难以获取时,需要应用定性的偏好表示模型.采用定性的偏好模型时,获取的偏好经常会遇到偏好不完整、偏好冲突的问题.由于存在偏好不完整,最优结果包含的元素数目过多,以至于得到的候选事物过多.用户的偏好存在冲突,对同一情况下做出的决策就有可能前后不一致,甚至是矛盾的.在使用CP-net表示偏好时,CP-net定义了一个结果集合空间.存在一个待选集合到结果集合的映射:对于待选集合中的任意一个元素,必然存在一个结果集合中的元素相对应,反之则不然.CP-net表示的偏好定义了结果集合元素之间的序关系,待选集合中的事物的比较通过对应结果集合元素之间的序关系进行.比较的目的是为了获得最优的候选事物,所以在进行选择时,首先获取结果集合元素之间的序关系,通过序关系查询待选集合,选择最优的候选事物.虽然可以通过推理得到最优的结果集合元素,由于存在偏好不完整,最优结果包含的元素数目过多,以至于得到的候选事物过多.在许多典型的应用情景下,虽然最优结果对应的候选事物可以满足需求,但是用户或者附加的约束条件会限制用户获得最优的结果集合,最简单的例子就是资源的限制.这说明即使不是偏好模型中最优的结果,也有必要得到结果之间的排序.这就使得对结果集合的某些元素进行排序具有非常重要的意义.在使用偏好进行决策时,假设用户的偏好存在冲突,对同一情况下做出的决策就有可能前后不一致,甚至是矛盾的.因此,需要对偏好模型中的冲突的偏好进行检测,并采取措施解决冲突.本文使用CP-net建模用户偏好,研究了CP-net中的不确定性.本文的主要工作和贡献包括以下几点:了CP-net交运算.与弱化的最优关系.(1)定义偏好不完整和偏好冲突.(2)提出CP-net对应的结果集合上的最优关系(3)通过CP-net与对应最优关系的分析,提出(4)提出偏好效用的概念,并应用在服务选择中.(5)提出基于协同过滤的不确定问题的解决方法,并对这个方法进行改进.本文第2节介绍相关工作;第3节介绍理论知识;第4节介绍偏好不确定的定义;第5节介绍相似度分析;第6节介绍解决不确定问题的具体方法,并在这个方法上进行改进;第7节进行实验,给出相关的实验分析;最后对全文进行总结.2相关工作服务选择的目标在于帮助用户从待选服务集合中选取最优的服务.应用偏好进行服务选择通常使用定性、定量的方法,例如文献[7-8]使用效用函数进行服务选择.定量的方法简单有效,定性的方法能以直观的方式捕捉用户的偏好,更加自然、通用[9].定量的方法虽然简单有效,但是在实际或复杂的环境中,使用这种方法还有很大的困难.当效用函数不可用时,需要诉诸于定性的方式表示偏好.定性的方法能以直观的方式捕捉用户的偏好,更加的自然、通用,有很大的灵活性.定性、定量相结合的方法,最近也成为研究的热点[10-11].TCP-net[12]在CP-net使用ceterisparibus表述偏好的基础上,增加了属性的重要性关系和相对重要性关系.条件重要性表述形式为“如果A=a,对我来说优化属性B的取值比优化C的取值更加重要”.比如,“如果航班安排在晚上,预定一个好的座位比打折更加重要”.文献[13]扩展CP-net为mCP-net处理多Page3Agent中的定性和条件偏好.偏好获取过程在很多方面会产生不确定性,文献[14]介绍了在偏好获取过程中的不确定性对偏好推理和实际应用的影响.Agent存在不完整的偏好会降低服务选择的效率,文献[15]用了协同过滤的思想补充Agent不完整的偏好,对于每一个的Agent,寻找偏好相似的Agent,基于相似Agent的偏好,补充Agent缺失的偏好.文献[16]采用定性的方法解决服务选择中多Agent偏好不完整问题.3理论基础3.1CP-net在众多表示偏好的方法中,条件偏好网络作为一种表示条件偏好的自然、简洁方式,受到了极大的关注.简单地说,CP-net是一个贝叶斯网络,每一个节点关联一个表示用户偏好的表(CPT).在每一个节点上,CPT描述了在父节点不同取值下,对该节点取值的偏好.定义1.对于属性集合V={X1,…,Xn}上的CP-net,是在X1,…,Xn上的图,对于每一个结点Xi∈V关联一个条件偏好表CPT(Xi).CPT(Xi)对于Xi的父结点Pa(Xi)=U的每一个实例u关联一个全排序iu.下面举一个CP-net简单的例子.这个CP-net描述了对晚餐搭配的偏好.图1中的CP-net包含两个属性S和W,分别表示汤和酒.现在,对于鱼汤和蔬菜汤,我更加喜欢鱼汤.我对酒的偏好就取决于供应什么汤:如果供应蔬菜汤,更加偏爱红酒;如果供应鱼汤,更加偏爱白酒.图1(b)为偏好导出图,表示由CP-net推理得到在结果集合上的偏好网.在图1(b)中,从oi到oj箭头表示ojoi可以由CP-net中的CPT推理得到.例如:按照CPT的语义,Sv∧Wr优于Sv∧Ww,从图1(b)中有一条从Sv∧Ww到Sv∧Wr的边.定义2.属性集合V={X1,…,Xn},Dom(Xi)={xi1,…,xini}为Xi的取值域,对于V上的CP-netN,结果集合为Asst(V)=∏i=1,…,n连接所有属性上的取值就组成结果集合的一个元素.从定义中可以看出,结果集合大小为定义3.偏好偏序满足N当且仅当满足在其它条件不变的前提下,N中的每一个CPT描述的偏好.例如偏好排序:例如在图1所示的CP-net中,Sv∧Wr,Sv∧WwSv∧WwSv∧WrSf∧WrSf∧Ww满足如图1所示的CP-net.定义4.N表示在集合V上的一个CP-net,o,o∈Asst(V)是结果集合上的两个元素,Noo当且仅当对于满足N的所有偏好排序都成立.定义5.结果集合上的两个元素,只有在一个属性上的取值不同,其余取值都相同,则把这两个元素称为一对反转(swap).只在属性W上的取值不同,因此是一对swap.3.2协同过滤协同过滤基于一组偏好相同的用户进行推荐,具有相似意图的用户趋向于具有相同的兴趣,比较历史用户的信息来选择和当前用户具有相似特征的历史用户,然后聚集这些用户的偏好,预测当前用户的偏好.4偏好不确定既然在CP-net中已经可以推导得出结果集合上最好的元素,为什么还需要排序结果集合上不能比较的元素呢?在许多典型的情景下,用户或者附加的约束条件会限制提供用户最优的结果集合,最简单的例子就是资源的限制.还有一种情况就是使用CP-net求得的最优集合所对应的具体集合的数量为零.比如在使用CP-net进行服务选择时,最优结果集对应的服务数量为0,这时我们就需要返回次优的服务.用户并非专家,在表述偏好的时候,会存在偏好不确定的情况,用户本身也不清楚自己的偏好,使用CP-net得出的最优集合的数量非常巨大.在这些情况下,得到这些结果集合的排序就非常重要了.Page4定义6.对于属性集合V上的CP-netN,o,o∈Asst(V),存在两个偏好排序1,2满足N,使得oo满足1,oo满足2,则称N的偏好不完整.在服务选择中经常遇到偏好不完整的情况,不完整的偏好表现在对一些服务对应的结果集合上元素之间的优劣关系不确定.定义7.所谓的偏好冲突,即对于CP-netN,存在o1,o2∈Asst(V),既存在No1o2,又存在No2o1.不确定和冲突产生的原因是多方面的,比如:随机性、模糊性、不完全性、不一致性.在人工智能领域,已经有很多解决此类问题的理论和方法.5二元关系5.1CP-net与二元关系定义8.对于V={X1,…,Xn}上的CP-netN,o1,o2∈Asst(V),定义关系R={(o1,o2)|No1o2},则称R为满足N的最优关系,简称为最优关系.通过下面的算法可以构造CP-net对应的最优关系R,如图2所示.Input:CP-netNOutput:theoptimalrelationRcorrespondingtoN1.r=;2.foreachnodeXiinCP-netNdo3.foreachiuinCPT(Xi)do4.foreachxxdo5.foreachinstantiationuofV-Pa(Xi)∪{Xi}do6.r=r∪(uux,uux);7.R=r;8.returnR;R=r表示R为r的传递闭包.如图2所示的CP-net,结果集合Asst(V)={abc,abc-,a珔bc,a-bc,a珔bc-,a-bc-,a-珔bc,a-珔bc-}.关系R={(abc,abc-),(abc,a珔bc),(abc,a-bc),(abc,a珔bc-),(abc,a-bc-),(abc,a-珔bc),(abc,a-珔bc-),(abc-,a珔bc),(abc-,a-bc),(abc-,a珔bc-),(abc-,a-bc-),(abc-,a-珔bc),(abc-,a-珔bc-),(a珔bc-,a-珔bc-),(a珔bc-,a-珔bc),(a珔bc-,a珔bc),(a珔bc-,a-bc),(a珔bc-,a-bc-),(a-珔bc-,a-珔bc),(a-珔bc-,a-bc),(a-珔bc-,a-bc-),(a珔bc,a-珔bc),(a珔bc,a-bc),(a珔bc,a-bc-),(a-珔bc,a-bc),(a-珔bc,a-bc-),(a-bc,a-bc-)}.R就是图3所示CP-net对应的最优关系元关系.从最优关系的构建过程可以看出,运行的时间复杂度是指数规模,并且R的规模也可能会达到指数规模.方法并不适用.主要有以下两个方面的原因:二值型,无环CP-net决定关系判断是NP问题.在求解CP-net对应的最优关系时,现存的很多(1)结果集合中两个元素决定关系判断.对于(2)结果集合空间为指数规模.因此,在CP-net中,求解CP-net对应的最优关系非常困难.为了简化问题,在解决不确定问题时提出了一个弱化的最优关系.定义9.对于CP-netN,r为对应结果集合上的二元关系,o,o∈Asst(V),r={(o,o)|o,o为swap∧Noo},则称r为N对应的弱化最优关系,简称为弱化关系.在图2所示的最优关系算法中,得出的关系r就是CP-net对应的软化最优关系.弱化最优关系的传递闭包就是最优关系(r=R).由于求解CP-net对应最优关系的困难,在我们在实际应用中,主要使用弱化的关系r.5.2CP-net交对于CP-netN1,N2,对应最优关系记为R1,R2,则R=R1∩R2表示用户相同的偏好.由于结果集合的规模和运算复杂度的原因,使得求解CP-net对应的关系R十分困难,因而使得运算R1∩R2非常困难.因此,在求解N1,N2相同偏好时,需要寻找另外的方法解决这个问题.命题.给定CP-netN1,N2,存在一个CP-netN,对于o,o∈Asst(V),满足下面两个条件:(1)N1oo,N2oo,则有Noo.(2)Noo,则有N1oo,N2oo.上述命题是不成立的,如图4所示的两个CP-net.Page5找不出一个CP-net,满足上述命题中的两个条件.退而求其次,对于CP-netN1,N2,对应的弱化关系分别为r1,r2,构建一个CP-netN,N对应的弱化关系为r,使得定义10.对于CP-netN1,N2,对于其中每一个属性Xi∈V,Pa(Xi)={x|x∈Pa1(Xi)或x∈Pa2(Xi)},每一个属性关联CPT(Xi),对于Xi父属性集合Pa(Xi)=U每一个实例u,1为N1在实例为u(Pa1(Xi))关联的全排序,2为N2在实例为u(Pa2(Xi))关联的全排序.则N在Pa(Xi)=U为u时,关联的全排序为1∩2.CP-netN称为N1,N2的交,记为N=N1∩N2.为属性取值的全排序,所以在运算的时候,需要考虑传递性.例如iu=x1x2x3x4,iu=x3x2x1x4,iu∩iu={x3x4,x2x4,x1x4}.例如图5中的CP-net求交,运算后的CP-net如图6所示.把上图描述的求交后的CP-net转换对应的弱化关系,对应的弱化关系等价于原始CP-net弱化关系的交集.可以得到下面的定理.定理1.对于CP-netN1,N2,对应的弱化关系为r1,r2,N=N1∩N2,对应的弱化关系为r,则r=r1∩r2.证明.o,o∈Asst(V)为属性Xi上的一对swap.首先证明当o1o2∈r1,o1o2∈r2时,o1o2∈r.o1(Pa1(Xi))=o2(Pa1(Xi)),o1(Pa2(Xi))=o2(Pa2(Xi)).则有在N1中,Pa1(Xi)的实例为o1(Pa1(Xi))时,o1(Xi)o2(Xi);在N2中,Pa2(Xi)的实例为o1(Pa2(Xi))时,o1(Xi)o2(Xi).因此,在N中,Pa(Xi)的实例为o1(Pa(Xi))时,o1(Xi)o2(Xi).因此,o1o2∈r.同理,也可以推出当o1o2∈r时,o1o2∈r1,o1o2∈r2.综上所述,r=r1∩r2.5.3偏好效用在实际应用中,根据具体情况的不同,偏好满足实际需要的程度也是不同的.虽然使用CP-net表述了偏好,但是在实际的应用中,不可能每一条偏好都肯定能起到作用.例如,用户购买笔记本电脑时,有如下的偏好:对于联想、戴尔,用户更加偏爱联想.但是如果联想品牌的电脑已经销售告罄了,除非用户等待购进新的联想电脑,那么用户的这条偏好在电脑选择过程就不会起作用了.度量.定义11.偏好效用.偏好满足实际需求的在不同的应用领域可以定义不同的偏好效用.例如在服务选择领域,系统通过用户表述的CP-net进行服务选择.由于用户描述的CP-net不完整,导致经过选择后的服务数量过多,需要进行进一步筛选.采用偏好补充的方法进行筛选,对于每一条偏好,都可以去掉一些服务.如果按照偏好筛选去除服务的数量定义偏好效用,则筛选去除的数量越多,偏好效用越大.6基于协同过滤的解决方法为了解决CP-net偏好不完整和偏好冲突的问题,借鉴了协同过滤的思想,寻找与当前用户具有相似偏好的历史用户记录,运用这些偏好信息解决偏好不完整和偏好冲突.相似性计算是协同过滤算法的关键.6.1相似性计算通过前面的分析,假设N1,N2为两个CP-net,r1,r2分别为与N1,N2对应的弱化最优关系,偏好相似度可通过下式计算:假设N=N1∩N2,N对应的弱化关系为r=r1∩r2,相似度公式变为Page6假设N1,N2为两个CP-net,N=N1∩N2.N所对应偏好的数量对应N1,N2中相同偏好的数量,因此需要计算出N对应弱化最优关系包含偏好的数量.对于属性集合V上CP-netN中的属性Xi∈V,在Pa(Xi)=U每一个实例u下,关联Xi取值的全排序记为iu,V-Pa(Xi)∪{Xi}的实例记为u,则V-Pa(Xi)∪{Xi}实例的总数为假设xx∈iu,由xx引伸为uuxuux时,根据ceterisparibus语义,u可以指定为任意的合法取值,则由xx得到的偏好的数量即为式(1).由iu可以推出多个xx类型的偏好,这些取值偏好引伸得到的结果与集合上偏好的数量是相同的.假设iu可以推出类型为xx偏好的数量为Siu,Si=∑Siu表示在U的所有实例下取值偏好的总和.由u:xx引伸为uuxuux时,u可以赋予任何合法取值,那么由Xi关联的CPT(Xi)得出的在结果集合上的偏好的数量为Si×∏Xj∈V-Pa(Xi)∪{Xi}|Dom(Xj)|,Xj∈V(4)其中|Dom(Xj)|为属性Xj∈V取值的个数.因此,N在各个属性上偏好数量的总和为同理,在CP-netN1中,对于属性Xi∈V,可以得到偏好的数量为式(5)所示.因此,相似度公式变为如下式所示:Similarity=在计算相似度时,需要计算N1,N2所包含相同偏好的数量.对于属性Xi,计算出在属性Xi上包含的相同偏好的数量Si,代入式(6),即可得到N1,N2的偏好相似度.因此,在计算相似度时,如果能够计算得到CP-net在每个属性上相同偏好的数量,不需要求解N=N1∩N2.对于属性集合V={X1,…,Xn}上的CP-netN1,N2,N=N1∩N2.对于属性Xi∈V,N对应的CPT为CPT(Xi),通过CPT1(Xi),CPT2(Xi)计算CPT(Xi)包含偏好的数量.对于其中每一个属性Xi∈V,Pa(Xi)={x|x∈Pa1(Xi)或x∈Pa2(Xi)},对于Pa(Xi)=U每一个实例u,1为N1在实例为u(Pa1(Xi))关联的全排序,2为N2在实例为u(Pa2(Xi))关联的全排序.则N在Pa(Xi)的实例为u时,N在属性Xi上偏好的数量为|1∩2|.对于属性Xi∈V,通过Pa1(Xi),Pa2(Xi)的实例得出Pa(Xi)可能的实例取值,然后计算对应实例下相同偏好的数量,降低算法的时间复杂度.定义12.对于Pa1(Xi)的实例u1,Pa2(Xi)的实例u2,存在Xj∈Pa1(Xi)∩Pa2(Xi),使得u1(Xj)≠u2(Xj),则u1,u2是不兼容的.反之,称u1,u2为兼容的(Compatible).因此,当Pa1(Xi)的实例u1,Pa2(Xi)的实例u2兼容时,才有可能存在相同的偏好,才有必要计算相同偏好的数量.图7为计算N1,N2相同偏好的算法.图7所示的算法对CP-netN1,N2计算相似度.算法主要由循环组成,外层循环处理N1,N2的每个属性.内层循环对于属性Xi,在N1的CPT1(Xi),N2的CPT2(Xi)中寻找兼容的实例,并计算在兼容实例下相同偏好的数量,求和得到在属性Xi上相同偏好的数量.求得N1,N2相同偏好的数量,代入公式(6)即可求得N1,N2的相似度.算法的时间复杂度取决于CP-netN1,N2偏好的规模.如果CP-net包含m维属性,每个属性n个取值,每个属性平均有p个父属性,因此,CPT的规模最大为np.计算两个取值全排序所包含的相同偏好,时间复杂度为Θ(n2).所以算法的最差时间复杂度为Θ(m×np+2).6.2改进方法性Xi的取值集合为Dom(Xi)={xiCPT(Xi)中iu用0-1矩阵犕R=[mij]来表示,矩阵对于变量集合V={X1,…,Xn}上的CP-net,属Page7的第i行表示xi,矩阵的第j行表示xj,第i行,j行的取值:对于属性Xi,iu对应的0-1矩阵记为犕iu.犕iu1+犕iu2中第i行,j行的取值表示Pa(Xi)的实例为u1,u2时,xixj偏好数量的和.犕i=∑犕iu,u为Pa(Xi)的每一个实例则表示在Pa(Xi)的任何实例下,取值xixj偏好的总和.例如图8所示的CP-net.图8所示的CP-net的B属性,有熿犕ba1=燀则矩阵犕b在第1行、第3列的元素为2,则表示b1b2偏好的数量为2.从图8所示的CP-net中,可以看出在属性A取值为a1,a2时,都可以得到b1b2.定义13.设犃=(aij)n×n,犅=(bij)n×n,犃和犅为n阶方阵,则犃犅是n阶方阵犆=(cij)n×n,其中cij=aij×bij,i=1,2,…,n;j=1,2,…,n.定义14.设犃=(aij)n×n为n阶方阵,|犃|表示矩阵犃中所有元素的总和,则|犕b|表示在属性犅上偏好的数量.对于CP-netN1,N2,N=N1∩N2.在计算N1,N2相同偏好的数量时,在属性Xi上按照Pa1(Xi),Pa2(Xi)是否相交分为两种情况:(1)Pa1(Xi)∩Pa2(Xi)=.属性Xi在N1,N2上的父属性集合Pa1(Xi),Pa2(Xi)不相交,则对于Pa1(Xi)的任意实例u1与Pa2(Xi)的任意实例u2肯定是兼容的.则由u1,u2组合形成Pa(Xi)的一个实例u,通过iu1,iu2得到在实例u下N1,N2相同偏好的数量.假设Pa1(Xi)的实例集合为U1,Pa2(Xi)的实例集合为U2,Pa(Xi)的实例集合为U.Pa1(Xi)∩Pa2(Xi)=,所以对于u∈U,存在u1∈U1,u2∈U2,使得u=u1·u2.反之,u1∈U1,u2∈U2,u1·u2∈U.因此,可以得出结论:对于CP-netN1,N2,在属性Xi上,当Pa1(Xi)∩Pa2(Xi)=时,|犕i偏好的数量.其中犕i因此,在Pa1(Xi)∩Pa2(Xi)=时,首先计算2,再通过|犕i1,犕i犕i数量.对于属性Xi,在求解犕i时,遍历CPT(Xi),不需考虑CPT(Xi)中的条件,把每一个实例u下的iu转化为矩阵犕iu,求和即可得到犕i.(2)Pa1(Xi)∩Pa2(Xi)≠.Pa1(Xi)∩Pa2(Xi)≠时,说明在描述偏好时,Pa1(Xi)的实例u1与Pa2(Xi)的实例u2有可能不兼容.所以在计算的过程中,需要首先寻找兼容的实例.按照Pa1(Xi)∩Pa2(Xi)中属性取值组合,寻找兼容的两个实例u1,u2.将iu1转化为矩阵犕iu1,iu2转化为矩阵犕iu2.犕iu1犕iu2即是在实例u=u1·u2下相同偏好的数量.例如图9、图10所示的两个CP-net中,计算在C属性上相同的偏好.Pa(C)的实例集合为{a1b1,a1b2,a2b1,a2b2};Pa1(C)的实例集合为{b1,b2};犕Cb1=Page8Pa2(C)的实例集合为{a1b1,a1b2,a2b1,a2b2};犕Ca1b1=犕Ca2b1=所以,在Pa1(C),Pa2(C)中兼容的实例为(b1,a1b1),(b1,a2b1),(b2,a1b2),(b2,a2b2).通过矩阵计算兼容实例下的相同偏好数量,相加求和就可以得到在属性C上相同偏好的数量.在属性C上相同偏好的数量:b1犕C犕C熿犕Ca2b2=燀通过寻找Pa1(Xi),Pa2(Xi)兼容的实例,组合得到Pa(Xi)的实例,而不是遍历Pa(Xi)每一个实例,提高算法的运行效率.6.3基于聚类的协同过滤算法基于聚类的协同过滤算法,将整个用户空间分成若干个聚类,每个聚类内用户的偏好尽可能相似,不同聚类内用户的偏好尽可能不同.根据每个聚类中用户的偏好生成一个虚拟用户,虚拟用户代表了该聚类中用户的典型偏好,将所有虚拟用户的偏好看作全新的偏好空间,计算当前用户与虚拟用户空间中的最近邻居.如图11所示.Input:asetSofCP-net1.Generatekclustercenterrandomly;2.whiletruedo3.foreachCP-netNiinSdo4.foreachclustercentercjdo5.CalculatesimilaritybetweenNiandcj;6.Findtheclosestcluster,putNiinit,and7.ifclustercenterchangethen8.Exitwholeloop;通过以上聚类算法生成了k个虚拟用户,需要寻找与当前用户偏好相似的虚拟用户集合.本文采用Threshold-basedneighborhoods,算法如图12所示.Input:CP-netN,clustercenterE={N1,N2,…,Nk},Output:AsetSofsimilarCP-net1.foreachNiinEdo2.CalculatesimilaritybetweenNandNi;3.if(similarity(N,Ni)>α)4.PutNiintoS;5.returnS;通过以上算法进行搜索,得到CP-netN最近邻居集合S.根据集合S,对不确定的偏好进行投票,如果虚拟用户支持某条偏好,对应偏好的票数加1.得票最多的偏好用来对CP-net进行偏好补充或者偏好修正,解决偏好的不确定性.从算法的中可以看出,算法的主要时间耗费在计算CP-net的相似度上.计算CP-net的相似度主要取决于CPT的规模.假设CP-net有m个属性,每个属性有n个取值,对于CP-net中的单个属性,CPT的规模取决于父属性的数量.假设对于属性Xi,Pa(Xi)数量为k(k<m),CPT的规模为nk,偏好的数量为Θ(n2×nk)=Θ(nk+2).那么计算相似度的时间复杂度为Θ(m×n2k+2).为了降低时间复杂度,提出了一种改进方法.7实验本节所有的实验用C++编写代码,运行的环境为HP个人电脑,4核CPU,2.66GHz,内存4GB.7.1相似度计算的正确性在这个实验中,随机产生一个CP-net,依据这个CP-net的偏好导出图,随机抽取偏好,产生一个新的CP-net,然后计算相似度.图13中的横坐标表示的是随机抽取的偏好与初始CP-net中所有偏好的百分比(Percentage).如图13所示,相似度与百分比呈线性关系.百分比越大,从初始偏好导出图中提取的偏好就越多,与初始的CP-net就越相似.从图中可以看出,计算得到的相似度就越高.7.2方法的准确性随机生成用户偏好模拟服务选择的场景.为了模拟用户偏好,随机生成用户的CP-net.在模拟的过程中,随机生成一个偏好导出图.依据偏好导出图,随机生成1000个CP-net作为历史用户.每个CPT由随机的条件偏好填充,然后执行上文中设计Page9的相似度公式,寻找相似用户.随机产生一个不完全的CP-net作为用户初始的CP-net.运行算法对CP-net进行补充,用服务选择的效果作为衡量标准.从图14中可以看出,推荐服务的准确率取决于偏好完整程度.CP-net越完整,采用的方法越准确.7.3算法的时间复杂度第1个实验固定属性的取值个数,属性维数由3变化到15.算法的运行时间如图15所示,从图中可以看出算法的运行时间与属性维数成指数增长.第2个实验固定服务属性维数,属性的取值个数不断变化.算法的运行时间如图16所示,从图中可以看出算法的运行时间与属性的取值个数成指数增长.7.4补充的效果实验中采用两个真实数据集:Web服务数据集和AdultDataSet.Web数据集,包含2507个真实Web服务数据,每一个Web服务有11个属性:ResponseTime,Availability,Throughput,Succes-sability,Reliability,Compliance,BestPractices,Latency,Documentation.第2个数据集合采用加州大学机器学习数据库(UniversityofCaliforniaIrvineMachineLearningRepository,网址:http://archive.ics.uci.edu/ml/)的AdultDataSet作为实验数据集.这个数据集有14个属性:age,workclass,fnlwgt,education,education-num,marital-status,occupation,relation-ship,race,sex,capital-gain,capital-loss,hours-per-week,native-country.设计的实验主要来验证偏好补充在真实数据集合上的效率和时间复杂度.在实验中,固定属性的个数,随机产生10000个CP-net,作为历史用户.随机产生一个CP-net最为当前用户,对当前用户的偏好补充一条偏好(Addone),补充两条偏好(Addtwo),统计返回服务的个数.以上过程运行1000次,取返回数目的平均值.属性变化时,两个数据集合的实验结果如图17、图18所示.从图17、图18中可以看出补充偏好后的CP-net选择效果变得更加精确,更加明显.Page108总结CP-net以紧凑、直观、结构化的方式表示偏好,是表示偏好关系的强有力的工具.在实际应用中,需要解决CP-net中不确定的问题.CP-net中的不确定问题主要表现在两个方面:偏好的不确定和偏好冲突.为了解决偏好不确定性,分析了CP-net和结果集合上二元关系的联系,提出了最优关系和弱化的最优关系.在CP-net对应弱化关系的基础上,提出了解决不确定问题的方法.提出了CP-net交和补充的概念.为了提高补充的效率,提出了偏好效用的概念.在此基础上,提出了解决问题的具体方案,并提出了一种改进方法.提出了解决不确定问题的学习方法.通过在真实数据集合上的实验证明了所提出方法的有效性和正确性.
