Page1链路质量与负载敏感的无线Mesh网络路由协议邓晓衡1)刘强1)李旭1)陈志刚2)1)(中南大学信息科学与工程学院长沙410083)2)(中南大学软件学院长沙410083)摘要无线Mesh网络中,链路的动态性和链路流内、流间干扰极大影响路由协议的性能.针对此问题,文中提出路由判据EPBW,该判据充分考虑链路多速率以及负载的动态性以准确评估链路的可用状态;然后,基于EPBW,为最大化网络吞吐量,文中提出了分布式路由协议EPBWR.最后,在NS-2中实现了文中判据与协议算法,并且在多种网络环境下进行仿真,与其它协议进行对比,评估协议性能.仿真结果表明:文中路由判据EPBW能适应网络的动态性,具有较高吞吐量,并且协议性能优于AODV、DSDV与DSR等协议.关键词无线Mesh网络;链路干扰;链路负载;期望路径带宽;跨层路由1引言WMNs)能够提供高速率、低成本的大范围无线接入,并且随着IEEE802.11x系列标准以及无线移动应用的快速发展普及,WMNs网络已经得到了广无线Mesh网络(WirelessMeshNetworks,泛部署[1].在无线多跳网络中,无线链路质量与负载Page2直接影响网络的吞吐量,因此传统的路由协议无法适应无线网络特点,不能充分利用无线资源.至今,研究人员针对移动Adhoc网络(MobileAdhocNetworks,MANETs)与无线传感器网络(WirelessSensorNetworks,WSNs)已经提出了大量路由协议[2-4],但是这些协议并未应用于WMN,因为WMN与二者不同,其骨干网络节点基本静止并且节点没有能量限制.根据此特点,并结合WMNs的底层性质,研究者提出了很多WMN路由协议[5-10].虽然这些协议在不同的场景下提高了WMN的性能,但是其未充分考虑流量的动态性.本文考虑了路由节点间的负载均衡与链路自适应速率调整,主要完成了以下工作:首先,定义了一个新的路由判据EPBW(ExpectedPathBandwidth);然后,基于EPBW,提出了一个WMN分布式路由协议以求最大化网络吞吐量;最后,通过在NS-2实现该协议,在不同网络场景下运行,与其它协议对比,进行性能测试.本文第2节讨论本文的相关工作;第3节讲述本文提出判据EPBW的背景与设计方法;在第4节,本文提出基于EPBW分布式按需WMN路由协议;仿真和实验结果在第5节给出;最后是本文的总结以及下一步工作.2相关工作目前,为提高无线Mesh网络的性能,许多研究致力于提高IEEE802.11标准来优化物理层与MAC层,但路由协议仍然直接影响网络性能,因此许多研究通过设计跨层路由协议来提高网络性能,并且在不同层面上对网络的性能做出了改进.下面我们介绍并分析相关的路由判据与路由协议.ETX(ExpectedTransmissioncount)[5]是最早提出的路由判据之一,它基于前向和后向的成功传输概率.ETT(ExpectedTransmissionTime)[6]通过考虑链路的容量来拓展ETX,WCETT(WeightedCumulativeExpectedTransmissionTime)[7]将ETT拓展到多信道环境.INX(InterferingNeigh-borscount)[8]通过考虑信号干扰来提高ETX性能.LAETT(LoadAwareETT)[9]和EETT(ExclusiveExpectedTransmissionTime)[10]考虑了部分的干扰和负载.我们提出的判据EPBW通过结合链路质量与链路负载信息来指导路由选择,同时考虑了流间和流内干扰.路由判据的特性总结如表1所示.路由判据单调干扰负载均衡检测模式自适应性ETXYESNONENOActiveNOETTYESNONENOActiveNOWCETTNOINTRANOActiveNOINXNOINTERNOPassiveNOLAETTYESNONEYESPassiveNOEETTNOINTRANOPassiveNOEPBWNOINTRA/INTERYESActiveYES文献[16]是本文的前期工作,以此为基础,本文增加的工作包括改进了冲突分析,提高了路由发现设计过程,并且在实验分析部分增加更加全面的实验设计以分析协议性能.本协议下一步工作是检验协议在实际网络环境中的性能,并且提高带宽测量的准确性.3路由判据3.1EPBW在WMN中,流内干扰与流间干扰使得发现网络的最大吞吐量路径成为一个挑战性问题.在本节,我们首先说明流内干扰的问题.如图1所示,源节点S向目的节点D发送从左向右的单向流量.所有的链路共享一个无线信道并竞争信道接入机会,由此形成一个冲突域.在一个冲突域中,任何时刻都只能有一个链路发送数据,因此冲突域内的吞吐量远小于链路带宽,根据文献[11]中模型有其中,l是冲突域c内的一条链路,BWl是链路l的带宽(BWl与流间干扰有关,将在后文讨论).图1WMN网络示例,包含冲突域c1=(SA,AC,CE),c2=(AC,CE,ED),c3=(SG,GF,FD),c4=(SA,SG),c5=(ED,FD)在图1中,节点S与D之间有两条路径.以跳数作为路由判据,路径P1={S,G,F,D}有3跳,路径P2={S,A,C,E,D}有4跳,因此路径P1优于P2.在EPBW判据中,路径Pi的判据EPBWPi由路径的冲突域带宽的瓶颈值决定,即路径中BWc的最Page3小值:其中CPi为路径Pi的冲突域集合.图1对冲突域做出了示例说明.路径P1的EPBWP1是路径上两个冲突域带宽的最小值,即EPBWP1=min(BWc3)=min1对于路径P2的EPBWP2如下:EPBWP2=min(BWc1,BWc2)根据路由判据EPBW,路径P2优于P1.如本例所示,最短路径不能确保获得最大吞吐量.最后,我们定义源节点S与目的节点D之间的期望带宽EPBW为两点之间所有路径期望带宽的最大值,即其中Pi为两点之间的有效路径,其期望带宽为路径上所有冲突域带宽的瓶颈值,可通过式(2)计算得到.信道共享所形成的冲突域增加了以逐跳方式寻找最大吞吐量路径的难度,而且找出图中所有的冲突域是一个NP难问题,本文分3步处理该问题:1)计算链路带宽,其由物理信道的特征决定,如SNR;2)计算在流间干扰下的链路可用带宽;3)考虑流内干扰的影响,计算冲突域带宽,利用式(2)获得路径判据EPBW.步1)和2)将在下面的小节分析讨论,步3)是基于式(2).同时,基于EPBW,设计提出一个分布式的启发式路由协议.3.2链路带宽链路带宽是随信道质量动态改变的随机变量,计算路径EPBW的前提是先确定带宽.为充分适应无线链路的动态性,物理层提出了自适应调制与编码方案并且已被广泛使用,调整的基本思想为使用信噪比SNR衡量信道质量,从而调整链路速率[12],例如,IEEE802.11b标准通过调整发送模式可以获得1Mbps、2Mbps、5.5Mbps或者11Mbps的发送速率.当SNR确定时,链路会在保证比特错误率BER(BitErrorRate)低于阈值的前提下,选择最快的发送速率.BER与SNR之间的关系可以通过理论分析或者实验总结获得.给定BER的临界值,不同发送速率对应的SNR范围就能够确定.但需要注意,链路选择所关心的是期望SNR(或链路带宽)而不是它们的实时值,本文使用加权平均值得到的SNR评估链路质量,如式(4)所示:SNR=α×SNR+(1-α)×SNRnew(4)其中,SNRnew为最新测量得到的SNR值,α范围从0~1,通过实验分析,最后取其值为α=0.75.然后,通过查表,将得到的平均SNR映射为链路带宽.映射关系如表2,表中数据为IEEE802.11b标准限定BER为BER<10-5时,通过实验分析所获得[12].需要注意,上文所提加权平均SNR值是为了用于计算路由期望吞吐量,很有可能与实时SNR不同.而且,物理层的发送模式是根据实时链路质量调整的,不同的实现可能使用不同的链路特征调整发送模式,但这些不在本文讨论范围内.SNR临界值发送速率/Mbps发送模式8~123.3链路期望带宽为计算路径上数据流的可用带宽,除了需要估算链路带宽,还需要考虑因其它流竞争而产生的流间干扰的影响.虽然目前已经有大量工作针对单跳无线网络的吞吐量建模,而且模型也考虑了竞争接入的影响,例如Bianchi模型[13]与Dhanasekaran模型[14],但是因为多跳无线网络负载不均衡且存在流内干扰,所以这些模型难以用于分析多跳无线网络.本文中,设定每个节点监测无线链路的状态以估算链路负载与可用带宽,每个节点计算链路的空闲概率,用Tb与Ti分别表示链路的忙时间与空闲时间,节点A的信道空闲概率如下:如果只需要考虑链路发送方,则只需要计算接收方的信道空闲概率.但是实际上,发送方需要接收方返回的ACK信息.因此,实际的空闲时间应当是发送方和接收方都为空闲的时间,但是此数据难以获得计算.为了简化问题,对于相邻的接收节点与发送节点,我们取发送节点与接收节点分别监测计算得到的空闲概率最小值作为链路空闲概率,即有Pidle(lAB)=minPidle(A),Pidle(B{A与B之间的链路.然后通过式(6)就可获得链路l的期望带宽EBWl:Page44路由协议设计在本节,我们设计并提出了按需分布式路由协议EPBWR,包括路由发现、路由计算、路由维护与路由恢复等机制.4.1路由发现EPBWR协议为减少路由开销,路由发现采用按需方式.当源节点S需要向目的节点D发送数据时,触发路由发现过程,广播发送路由请求包RREQ(RoutingRequestPacket).当邻居节点接收到RREQ之后,首先计算链路SNR,根据平均SNR计算链路带宽,并根据链路空闲概率计算链路期望带宽EBW.然后检查从源节点到当前节点的路径上是否存在冲突域,进而得到路径的EPBW.最后继续转发广播RREQ,直到到达目的节点.每个RREQ都包含唯一序列号ID、从源节点到当前节点的EPBW与路径向量.路径向量每项均包含节点地址,链路空闲概率Pidle以及邻居列表.其中,邻居列表是为了辅助后面节点发现冲突域以计算路径EPBW.因此,邻居列表记录属于当前节点的邻居且属于当前路径的节点.如果节点收到序列号ID相同的RREQ,即重复包,节点会计算并比较数据包的EPBW.如果当前RREQ的EPBW小于记录的EPBW,则丢弃此RREQ,否则,根据最新RREQ更新记录信息,然后广播该数据包.重复此过程,直到RREQ到达目的节点或被丢弃.当目的节点接收到RREQ之后,首先计算SNR与最后一跳的EBW,然后比较具有相同ID的RREQ携带的EPBW,选择具有较大EP-BW的路径.等待一个常数时间T以比较更多的RREQ.最后根据具有最大EPBW的RREQ包构建路由应答数据包RREP(RoutingReplyPacket),且RREP包含路径向量与EPBW信息,然后按照反向路径将RREP发送给源节点.通过实验,我们发现合理的路由之间的延时差不会超过100ms,所以在本文中设定T为100ms.4.2分布式路由计算为发现网络中最大吞吐量路径,许多路由协议采用集中的路由方法,并且结合改进的Dijkstra算法计算,寻找最优路径,但是集中式协议不利于网络的扩展[10].因此本文所提出协议采用分布式方法,节点以分布式的方式计算,选择从源节点到自身的最佳路径.路由发现算法基本过程如算法1所示.由上节可知,路径EPBW值是由路径上的冲突域及其可用带宽决定,可以使用冲突图帮助以准确快速确定路径上的冲突域.构建冲突图Gv的方法是路径Pv上的链路都转换为图Gv中的顶点,而且如果两条链路互相干扰冲突,则二者对应的顶点有一条边相连.著名的Bron与Kerbosch算法能够在线性时间内计算出图中所有的冲突域[15],在算法1中的第4行,函数Bron_Kerbosch(Gv)即是采用此算法计算出图Gv中所有新增加的冲突域.为了能够将EPBW的计算开销分布到路径中所有节点上,每个节点只需要计算因为自身加入路径而产生的冲突域,即以该节点作为接收方的链路产生的冲突域,反应在冲突图中,即该链路在冲突图中的对应顶点所属于的冲突域.节点只需要计算与该顶点相关的新冲突域,其它与该顶点不相连的顶点都可以从冲突图中删除,即算法1中第2行的工作,过程示例如图2所示.算法1中4~7行比较到达本节点之前的路径EPBW与当前冲突域的EBW,并根据结果更新EPBW信息.最后,当前节点构造新的RREQ并发送.算法1.路由发现算法.输入:数据包RREQ(n,u),其包含EPBW与路径向量输出:从源节点s到当前节点v的最大期望带宽EPBW过程:1.NodevreceivesRREQ(n,u);2.Convertpath犘vintoaconflictgraphGv;3.deletevertexNklthatisnotconnectedtoNuvinGv;4.Cv=Bron_Kerbosch(Gv);5.EPBWnew(v)=min(Cliquebandwidth(Cv));6.EPBWnew(v)=min(EPBWnew(v),EPBW(u));7.ifEPBW(v)<EPBWnew(v)then8.EPBW(v)=EPBWnew(v);9.reconstructRREQ(n,v),broadcastRREQ(n,v);10.endif.算法2是算法1中函数Cliquebandwidth(CLij)的实现,其采用2.1节给出的方法,用来计算包含链路Lij的冲突域的期望带宽.算法中EPBW(v)和EPBWnew(v)分别表示路径犘v到达当前节点之前的期望带宽EPBW与当前节点新增冲突域的最小期望带宽EBW.RREQ(n,u)表示节点u发送的序列号为n的请求包RREQ.算法2.Cliquebandwidth(CLij).输入:冲突域CLij且包含冲突域的每条链路的期望带宽输出:冲突域CLij的期望带宽EBW过程:1.T(CLij)=0;Page52.forLij∈CLijdo3.T(CLij)=T(CLij)+(EBW(Lij))-1;4.i=j;j=succeed(j);5.endfor;6.EBW(CLij)=(T(CLij))-1;7.returnEBW(CLij).目的节点进行同样的工作,选择具有最高期望带宽EPBW的路径,并将路径返回给源节点.路由信息通过路由应答包RREP携带,其中包含序列号ID、路径向量与EPBW.同时更新了路径中的EBW与链路空闲概率信息.图2路径转换为冲突图过程(Nij代表链路Lij,(a)将有4个节点3条链路的路径转换为冲突图,其中所有的链路都在1个冲突域内;(b)增加5号节点之后图中增加了1个新冲突域;(c)增加6号节点,且其和2号节点是邻居,结果增加了3个冲突域,而且最大的冲突域包含其它2个冲突域)采用以上算法,路径中任何节点需要计算的冲突域数目不会超过路径的跳数,所以此分布式算法的复杂度较低.而且,一般情况下,经过具有较高吞吐量的路径的RREQ会较早到达,因此RREQ的广播重发数量会减少很多.此外,基于RREQ携带的路径向量,路径瓶颈带宽容易获得,从而可以决定对此请求包是转发或者丢弃.同时,每个节点需要增加的存储信息也只是基于路由表的扩展.由上可知,此协议的路由开销较低.4.3路由维护通过路由发现,节点建立有效路由,开始传输数据.但因无线网络的动态性,当前路径的吞吐量可能下降甚至路径失效,同样,网络中可能出现更好的路径.此时,网络中路径需要更新.当目的节点检测到路径吞吐量的下降时,其向源节点发送路由请求触发信息TREQ(TriggeringRequestMessage),源节点收到信息之后启动新的路由发现过程,发送路由更新包UREQ(UpdateRoutingRequestPacket).如果找到具有更高EPBW的更优路径,后面的数据传输就采用最新路由.然而,以上过程无法处理出现吞吐量不下降等更优路径的情况.针对此情况,本文采用周期路由发现机制,但此周期更新频率较低,周期大小是通过折中路由优化与路由开销获得.在以上过程中,如果不能正确计算当前目标数据流负载,可能出现路由震荡.如果数据流有两条相似的路径,当前正在传输数据的路径的空闲概率会因为传输目标数据而降低,因此在路由更新的时候,节点可能选择另一条路径.如此另一条路径就会更加繁忙,此过程不断重复,造成路由震荡.为解决震荡问题,在路由更新的过程中,正确评估目标数据流对路径EPBW造成的影响就变得非常重要.一个有效的方法是重新计算各个节点的空闲概率,将因传输目标数据流造成的忙时间记为链路的空闲时间,计算方法如式(7)所示:其中:Tt(f)为节点A传输数据流f所使用的时间;Tb(A)与Ti(A)分别为在MAC层统计的链路忙时间与空闲时间.每个节点在对数据进行路由的时候都需要提取数据包的源IP与目的IP信息,此时可以将数据包与数据流f进行匹配统计.在传输期间,数据流f发送Nf(A)个包,包k的发送速率为Rk,则Tt(f)的计算方法如下:Tt(f)=Psize·(n1·1其中nk表示包k在当前信道错误率限制下成功传输需要传输的次数.同时,我们设定所有数据包大小相同.4.4路由修复路由失效主要由两种原因造成:一是从目的节点向源节点返回的路由信息丢失;二是在传输过程中链路断开.当RREQ到达目的节点以后,目的节点会向源节点发送RREP包,且携带路径向量与EPBW信息.虽然一般情况下,WMN网络中的链路并不对称,从目的节点到源节点的反向路径吞吐量与正向路径不同,但是反向路径一般可用,能够传输数据.在数据传输过程中,如果有路径断开,传输失败的节点就会向源节点发送路由错误信息RERR(RoutingErrorPacket).源节点接收到RERR之后会重新进行路由发现过程以找到新的路径.Page65仿真与分析为验证本文跨层路由判据与路由协议方案的有效性,本文在NS2中实现了EPBWR协议并在3个网络拓扑(图3和6)上设计了5个仿真实验.与本节提到的其它协议相比,本协议增加了负载感知的开销,包括MAC层链路空闲状态统计与网络层数据包数量统计.在实现中,在MAC层链路状态改变时增加空闲时间计算,且空闲概率只有在需要的时候计算;在网络层,每个数据包都需要进行路由选择,同时统计数据包数量.因此,负载感知主要增加了计算开销,受限于网络速率,计算频率相对较低,且计算复杂度较低(主要是加减计算).仿真参数如表3所示,其余没有说明的参数均为NS-2.31中802.11b模块默认值.根据表2的规则,所有节点根据测量得到的平均SNR值在DBPSK(1M)、DQPSK(2M)、CCK55(5.5M)和CCK11(11M)这4种调制模式间动态切换.每隔20s或者路径上的吞图4实验1(拓扑1)实验结果吐量降低超过20%都会进行路由更新.为验证对比吞吐量、端到端延迟和丢包率等网络性能,在NS-2中同样实现了判据ETX和ETT.本文的分布式路由协议与文献[7,11]中的集中式路由协议不同,不需要收集全局信息并保存在数据库中.在第1个网络拓扑中,我们验证EPBW对链路状况还有端到端链路的负载情况是否敏感.该网络拓扑由8个节点构成,有固定的源节点(记为S)和目的节点(记为D).由图可知从S到D有两条路径{S,1,2,3,6,D}(记为P1)和{S,1,4,5,6,D}(记为P2),其中节点1到节点2、4还有节点6到节点3、5的距离是可变的,其余节点之间的距离固定为150m.整个仿真过程中,在S和D之间用TCP进行数据传输,流量类型为FTP.第1个拓扑中进行2个实验.实验1(图4)中我们只改变节点间的距离,考察EPBW对SNR是否敏感.仿真时间为500s,按时间均分为3个阶段.在第1阶段,即0~166s,链路{1,2}的距离比链路{1,4}小,链路{3,6}比{5,6}小,此时选择的路径是P1最优.在167s将节点2、3、4、5整体往上平移,即在第2阶段167s~333s使链路{1,2}的距离比链路{1,4}大,端到端吞吐量开始降低.在174s,吞吐量低于触发路由更新的阈值,触发路由更新进程.此时,节点1~2的SNR为8,节点1~4的SNR为13,节点3~6和节点5~6也是如此,路由更新后路径变为P2.在第3阶段334s~500s,拓扑恢复为第1阶段的状态,P2路径距离较远,SNR值较小,吞吐量开始降低.在340s,吞吐量还没有降低到阈值水平,没有触发路由更新,但是这时路由更新计时器超时,周期路由更新进程启动,节点1~2的SNR变为13,节点1~4的SNR变为7,节点3~6和节点Page75~6也是如此,路由更新后切换到P1.由此可以看出EPBW能够根据距离(SNR)的变化,自动切换到更优的路径.由图4(a)可以看出,EPBW在距离改变的情况下能够通过路由更新切换,始终保持较高的吞吐量,而ETX和ETT波动较大.由表4结果可以看到,EPBW相对于ETX和ETT,总吞吐量提高了110%,端到端丢包率降低了57%.而端到端延迟方面,由于跳数相同,它们的差别不大,从图4(b)可以看出,EPBW的延迟较平稳.路由判据吞吐量/MpbsETX0.1670ETT0.2659EPBW0.5580实验2中,节点距离固定,链路{1,2}和{3,6}的距离比链路{1,4}和{5,6}的距离小一些.实验中节点2向节点3用UDP传输数据产生干扰流量,流量类型为CBR,从而考察EPBW对干扰流量是否敏感.仿真时间同样为500s.在0~166s,没有设置干扰流量,路由选择的路径为P1最优.在167s~333s,启用干扰流量,节点2开始向节点3发送数据,速率图5实验2(拓扑1)实验结果路由判据吞吐量/MpbsETX0.234064.5ETT0.251162.7EPBW0.481269.2实验3在图6(a)的拓扑2中进行,49个节点分布在1200m×1200m的正方形网格网络中.邻居节点间的距离为150m.我们从节点4向节点46发送数据,并在节点25与26、节点25与32之间设置CBR干扰流量.仿真时间为500s,最初只有节点4向46发送为0.4Mbps,干扰流量使得端到端吞吐量降低.在176s,吞吐量降低到触发路由更新的阈值,启动路由更新进程,此时,节点2、3、4和5的空闲概率Pidle分别为3.9%、4.2%、8.0%和7.5%,路径切换为P2.由于干扰流量在路径2跳以内,还是会受到一定的影响,干扰流量使得吞吐量有一定的下降,这从图5(a)中可以看到,但由于EPBW选择了较好的路径,吞吐量还是比ETX和ETT要高许多.334s~500s,关闭干扰流量,触发更新的机制只会响应吞吐量下降的情况,而当前路径性能不变,有其它更好的路径存在时无法起作用.在340s时,路由更新计时器超时,周期路由更新进程启动,此时节点2、3、4和5的空闲概率Pidle分别为10.8%、11.2%、1.2%和1.6%,路由更新后路径切换回P1,吞吐量恢复到前166s的水平,而ETX和ETT吞吐量恢复的速度较慢,对干扰变化的反应较迟钝.由图5(a)可以看出,EPBW能较好地避开干扰流量,比ETX和ETT在干扰流量下能保持较高的吞吐量,从表5可以看到EPBW的吞吐量比ETT提高了92%左右.对于端到端丢包率,由图5(b)可以看出,EPBW对于ETX和ETT也有明显的降低,大约降低了48%.数据,EPBWR发现最佳路径{4,11,18,25,32,39,46}.在100s~200s期间,节点25向节点26发送CBR数据流产生干扰流量,速率从0.2Mbps逐渐增大到0.4Mbps.在107s,节点46测量得到的吞吐量降到阈值以下,触发路由更新并找到一条更好的路径{4,10,16,23,30,38,46}.200s到300s,关闭干扰流量,EPBWR周期性路由更新并在220s切换到之前的路径.在300s~400s,启用节点25~32之间的CBR数据传输作为干扰流量,速率从0.2Mbps增加到0.4Mbps.随着吞吐量下降,EPBWR通过路由更新进程得到路径{4,12,20,27,34,41,47,46}.Page8在400s~500s,关闭干扰流量,EPBWR切换回最初的路径.从图7的(a)和(b)中可以看到,EPBW、ETX和ETT的吞吐量都由于干扰流量的存在而降低.EPBW为了绕过拥塞区域而采用了跳数较多的路径,这导致其吞吐量下降.尽管如此,EPBW仍然比ETX和ETT有更好的性能表现.从图7(b)、(c)图6网络拓扑2和3图7实验3(拓扑2)网络性能对比和(d)中可以看到,EPBW取得了180%的吞吐量提升同时丢包率只有2.33%,ETX和ETT分别为5.76%和4.60%,其端到端延迟也降低了大约23%.从实验3我们验证了EPBW能很好地根据网络中的负载情况进行动态调整,有较好的性能表现.Page9实验4在图6(b)中拓扑3中进行,100个节点分布在1500m×1500m的拓扑中,相对于拓扑2有更多的节点并且采用随机的数据传输.如图6(b)所示,随机选取了9个节点发送数据和3个网关接收流量.节点根据协议计算选择最优的网关进行数据传输.实验重复进行10次,计算得到的平均图8实验4(拓扑3)网络性能对比实验5采用与实验3相同的网络拓扑与流量设定,对比不同路由协议的吞吐量与路由开销.吞吐量如图9(a)所示,EPBWR、DSR、AODV和DSDV吞吐量分别为0.48Mbps、0.39Mbps、0.15Mbps和0.0184Mbps.在存在干扰流量的情况下,EPBWR比其余3种路由协议获得更高更稳定的吞吐量.DSR和AODV在存在干扰流量的情况下,其吞吐量迅速下降,DSDV在该场景下性能较差,吞吐量结果说明EPBWR相对于其它3种路由协议,具有更好的负载适应能力.通过统计不同协议在整个仿真期间传输路由信性能指标如图8所示.EPBW相对于ETX和ETT提高了48%的吞吐量,同时丢包率降低了32%,端到端延迟减少了28%.本实验由于路径跳数较少,端到端延迟比前面的实验低,但由于有多条数据流共享网络资源,吞吐量并没有因为路径跳数少而提高.息包的数量,得到如图9(b)所示的路由发现和维护开销.由于AODV会周期广播Hello包,其路由开销比其它路由协议要高很多.DSR与AODV类似,但它只维护已经发现的活跃路径上的节点,此外DSR还使用路由缓存机制来减少广播,从而减少了路由开销.DSDV为主动路由协议,其路由开销会随着网络规模扩大而增大.EPBWR结合了触发更新和周期路由更新机制,其路由开销相对于AODV、DSR和DSDV分别降低了630%、81%和47.6%,这使得EPBWR在网络资源有限的情况下具有较好的性能.Page10图9实验5(拓扑2)网络性能对比6结论本文提出一种新的路由判据EPBW,它同时考虑物理信道质量、流间和流内干扰的影响,并且基于路由判据EPBW,我们还提出了一种分布式路由协议EPBWR,并在NS-2中实现.仿真实验表明,EPBW和EPBWR相对于其它路由判据(ETX、ETT)和协议(AODV、DSR、DSDV)都有显著的性能提高.未来我们将对该工作进行拓展以实现负载均衡,并把端到端延迟结合到判据中以满足用户的QoS需求.此外,如何利用冗余路径和缓存机制来提高路由鲁棒性也值得我们进行深入研究.
