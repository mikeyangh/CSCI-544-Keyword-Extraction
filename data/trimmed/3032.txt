Page1基于部分函数依赖的结构匹配方法李国徽1)杜小坤1)杜建强2)1)(华中科技大学计算机学院武汉430074)2)(江西中医学院计算学院南昌330006)摘要模式匹配是模式集成、数据仓库、电子商务以及语义查询等领域中的一个难点.它主要利用元素自身信息(如元素名、数据类型等信息)、数据实例信息(模式中的数据)和结构信息(模式元素相互关联的关系)来挖掘元素语义以获得正确的映射关系.文中介绍了一种将数据实例信息与结构信息相结合来辅助匹配的新方法.此方法首先根据模式对应的数据实例信息来计算模式元素间的部分函数依赖度(模式结构信息),然后根据部分函数依赖关系建立模式元素间的依赖图,再根据元素依赖图计算元素间的结构相似度,最后得到模式元素间的映射关系.由于利用了更多的结构信息辅助匹配,所以文中方法在性能上要优于其它仅使用完全函数依赖结构信息进行匹配的方法.实验表明此方法在查准率、查全率以及全面性等各个指标上都优于已有的其它方法.关键词模式匹配;部分函数依赖;结构匹配1引言模式匹配是模式间的一个二元操作,它以源模式和目标模式为输入,以两个模式中元素(在关系型数据库中对应于关系的属性)间的映射关系为输出.随着数据库应用的日趋广泛,模式匹配在越来越多的应用领域中发挥着重要作用,如模式集成、数据仓库、电子商务、语义WEB和P2P数据库等领域.目前的模式匹配工作大都是由操作人员手工进行,这就要求操作人员必须对数据库的模式结构以及每个模式元素的语义都很熟悉,这是一个枯燥、费时且容易出错的工作.随着数据库技术的不断发展,数据库模式逐渐增大.数据库中有数百个关系、数千个属性都是比较常见的,而且它们由不同的设计人员设计,这就使得全面了解数据库的模式结构变得愈加困难,甚至是一个不太可能完成的任务,因此需要一种自动的模式匹配方法来代替费力、费时且容易出错的手工匹配.目前,这方面的研究成果已经相当丰富[1-8],它们分别利用模式中不同类型的信息来挖掘模式元素的语义,然后进行元素匹配.目前利用的信息主要有如下3种类型:表1供应商信息表ManufaID(PK)CompanyNameA02001南京通用电器有限公司A02002深圳市新安锦辉电子厂A02003深圳市宝安区新安金海牛电子厂深圳市宝安44区4号楼0755-27837528梁鹭电子器件518101A03001慈溪市华威电子有限公司慈溪市桥头镇工业区0574-63550423毛维金电子器件315317A03002桂林市兴华探测器有限公司桂林市施家园路31-2号0773-5825656石伟安检门541004Address…从表1可以看出,关系以供应商编号(ManufaID)作为主键,因此属性ManufaID能够函数决定其它属性.除此之外,我们不能够发现其它的结构信息(元素间的关联),但通过与该关系的设计人员沟通,我们发现它的各个属性间还存在着如下一些关联关系:(1)当某供应商不与其它供应商重名时,知道供应商名称就能够知道该供应商的其它信息(事实上某公司的供应商中名字相同的非常少,所以“供应商名称决定供应商的其它信息”对绝大多数供应商来说是适用的).(2)事实上,供应商的联系电话(Telephone)对于不同的供应商来说是绝对不同的,所以知道了供应商的联系电话,就能够确定是哪个供应商以及该供应商的其它信息.(1)元素自身信息.元素自身信息(元素名、数据类型等)是模式中最基本的信息,是元素语义最直观的反映.早期对模式匹配的研究[2,6-7,9]大多是基于元素自身信息.(2)数据实例信息.数据实例信息是模式描述的对象,所以也能够准确地反映元素语义,但是从大量的数据实例中提取准确的元素语义是一个很困难的过程.文献[10]是这方面的研究成果.(3)结构信息.模式中元素间的关联关系构成了模式的结构信息,结构信息能够有效地辅助匹配,但缺点是模式中定义的结构信息不够丰富(例如在关系型数据库中只存在元素间的主、外键关系).目前这方面的研究成果主要有文献[11-12].目前模式匹配的研究中利用的结构信息主要是模式元素间的主、外键关系,它们由设计者在模式设计阶段指定.但主、外键关系并不能全面地反映出模式中元素间的关联关系,因为设计者在设计模式结构时为了满足关系数据库严格的规范化定义,会省略某些关联关系或对其进行修正.如例1所示.例1.表1是某公司进销存管理系统数据库对供应商信息进行管理的一个关系,它包括供应商编号、名称、地址、电话、联系人、备注等信息.(3)原则上每个供应商都应该有唯一的联系地址和联系人,但可能存在某些供应商提供的地址不够详细、联系人重名或者同一业务员代理多家供应商产品的情况,所以“联系人姓名决定供应商的其它信息”和“联系地址决定供应商的其它信息”并不对所有供应商都适用.这些关联关系在以往的研究中被称为部分函数依赖[13],与元素间的主、外键关系一样,这些部分函数依赖也能够有效地支持模式匹配.本文介绍的就是一种利用数据实例信息充分挖掘元素间的结构信息来辅助匹配的新方法,主要有如下创新点:(1)介绍了一条根据数据实例信息得到结构信(2)给出了一种根据元素间部分函数依赖计算息来辅助匹配的新思路.结构相似度的新方法.Page3(3)给出了一种调整结构相似度的新方法.本文第2节介绍相关的研究工作;第3节介绍部分函数依赖的概念及如何利用其表示元素间的关联关系;第4节介绍基于部分函数依赖的结构匹配方法的具体步骤;第5节对本方法进行实验评价;第6节为总结与展望.2相关工作模式匹配研究目前成果丰硕[1-8],它们分别利用了模式中不同类型的信息来进行匹配.元素自身信息是模式匹配中使用的最基本信息,早期的模式匹配方法[2,6-7,9]都重点利用了这一信息;模式中包含的数据实例信息也可以辅助匹配,文献[10]介绍的就是一种利用数据实例信息提高匹配准确度的方法;文献[11-12]则介绍了如何利用模式的结构信息来进行匹配;文献[8]中介绍了一种利用数据库查询日志中的查询语句来辅助匹配的方法.由于本文介绍的是利用结构信息(由数据实例计算得到的部分函数依赖关系)来辅助匹配的新方法,因此这里我们简要介绍几种与本文相关的利用数据实例和结构信息进行模式匹配的方法.DUMAS[10]是一种利用数据实例信息来辅助匹配的方法,它首先利用重复数据检测算法检测出源模式和目标模式中重复(相似)的数据,然后根据重复数据中相同数据对应的元素相同的原理得到互相匹配的元素对,但该方法的难点在于如何准确定位重复的数据.Cupid[12]方法利用元素自身信息和模式结构信息进行匹配.它基于层次结构的模式,将模式中内部相关联的元素互相连接构成模式树;然后利用元素名、数据类型等元素自身信息计算元素间的语义相似度,并根据得到的语义相似度对元素进行分类;再根据元素的结构信息(模式树中与该元素相连接和邻近的元素与其它元素的语义相似信息)计算元素的结构相似度;最后将每个元素对的元素相似度和结构相似度加权平均得到最终的相似度,并选取最终相似度值最高的元素作为最终的匹配结果.SF[11]方法首先利用图结构来表示源模式和目标模式,然后利用名称匹配器对两个图结构中的每一对节点计算其语义相似度并根据语义相似度选出所有的候选匹配对,再对候选匹配对的相似度进行调整(由于两个相似节点的相邻节点也相似,所以候选匹配对的相似度受相邻候选匹配对的相似度的影响)得到最终的相似度.文中还给出了几种根据相似度选取匹配结果的不同策略.但该方法的图结构中包含了过多的节点信息,所以具有很高的时间复杂度.除了文献[11-12]中利用的结构信息(主要是元素间的主、外键关系)外,本文还利用了模式元素间的部分函数依赖关系.本方法首先根据模式元素自身信息计算模式元素间的语义相似度并选取候选匹配对,根据模式的数据实例信息计算模式元素间的部分函数依赖度并选取元素的有效部分函数依赖集;然后建立函数依赖图,再计算候选匹配对的结构相似度并根据相邻节点的相似度相互影响的原理对结构相似度进行调整,最后将语义相似度和结构相似度相结合选取最终的匹配结果.由于本方法有效地利用了元素间的部分函数依赖关系,所以匹配效果明显优于其它未使用部分函数依赖关系的方法.3部分函数依赖通常人们思考问题时都会对获取的信息加以一定程度地抽象.例如:人们通常会说“鸟会飞”,没有人会对这个命题的正确性产生怀疑,因为通常所见的鸟类都是能够飞行的,当然也有一些特殊的情况:企鹅也属于鸟类,但企鹅却不会飞,但这样的特殊情况并不会导致我们对“鸟会飞”这个命题的正确性产生怀疑.这里我们把这样的一些特殊情况称为该命题的例外.数据库设计时我们也经常会碰到类似的情况,由于关系数据库严格的规范化定义,个别例外就会导致整个命题不正确,从而该命题所表示的信息就不能在关系数据库中反映出来.如例1中,对于命题“根据学生姓名就能够知道他的其它信息”,由于会存在“学生重名”这样的个别例外情况,所以关系数据库无法表示元素StuName同其它元素间的关联关系.Berzal和Cubero等对这种关系进行了研究[13],把元素间的这种关联关系称为部分函数依赖(partialfunctionaldependency),当部分函数依赖中不存在例外时即为通常意义上的函数依赖.下面我们给出部分函数依赖的几个相关定义.定义1.r为关系R中的数据实例集(记录构成的集合),X,YR为两个属性集,我们称rer为部分函数依赖XY的例外元组集合,当且仅当re满足如下条件时:(1)(r-re)中所有元组满足XY.(2)t∈re,(r-re)∪{t}中的元组不都满足Page4XY.#(re)<#(re)(#(r)表示关系r中的元组数).(3)不存在rer满足条件(1)和(2)并且我们称re中元组的数目为部分函数依赖例外数.图1中,对于数据实例集r以及部分函数依赖YearCourse,当Year=“1990”时,Course可取多个值,此时部分函数依赖YearCourse产生冲突,rae中列出了所有产生冲突的元组,为了满足条件(1),当Year=“1990”时,属性Course只能取集合{4,3,2}中的一个值;为满足条件(2),当Course选定某一值A后,re中不应包含满足条件Year=“1990”和Course=A的元组;为满足条件(3),在选择Course的取值时,应选择对应元组最多的取值.这里取Course=“4”,因为Course取值为“4”时,对应的元组有4个,而取值“3”和“2”分别对应的元组数为2个和1个.最后rae中剩余的元组即为例外元组,如图1中re所示.表2供应商信息表(犜)Company_ID(PK)A02001天长市长久电器A02002常州市新迈电子A02003杭州晶新电子A03001常熟市常新电子B01001上海双腾电子电器…4.1方法准备第3节的最后部分给出了模式S的部分函数依赖集,结合实际情况考查该集合时发现如下两个定义2.r为关系R的数据实例,X,YR为两个属性集,re为部分函数依赖XY的例外元组集合,则部分函数依赖XY的部分函数依赖度α=#(r-re)/#(r)(后面我们将部分函数依赖记为XY,Y函数依赖于X的部分函数依赖度记为w(X,Y)).据部分函数依赖度定义,图1中部分函数依赖YearCourse的部分函数依赖度α=#(r-re)/#(r)=(8-3)/8=0.625,记为Year出部分函数依赖的相关定义后,可以方便地根据关系对应的数据实例信息计算关系中任意两个元素m,n之间的部分函数依赖度w(m,n).因此,对例1中的关系S,我们计算得到其部分函数依赖集PFD(S)={CompanyNameManufaIDRemarkSupType4基于部分函数依赖的结构匹配方法的具体步骤本文第3节中给出了部分函数依赖的定义及其计算方法,并利用与模式S对应的数据实例信息计算得到了模式S的部分函数依赖集PFD(S).本节将介绍如何利用部分函数依赖集PFD(S)进行模式匹配.为了描述上的方便,表2给出了与源模式S对应的目标模式T,模式T也是对进销存数据库中供应商信息的描述,在后面的介绍中我们以模式S为源模式,模式T为目标模式.问题:(1)虽然AddressLinkMan的函数依赖度相同,但事实上属性Page5(2)SupTypeRemark与属性LinkMan之间并无任何关联关系,发生这种情况是由于计算函数依赖度时我们选取的数据实例的数量太少,从而在计算依赖度时产生了较大的随机误差,这里我们通过增加数据实例数量的方法来避免误差的产生(事实上模式匹配的应用环境中一般都存在大量的数据实例).事实上SupType和Address之间并没有任何关联关系,这样的部分函数依赖会对匹配操作产生负面影响,应该去除掉,通常我们选取依赖度大于阈值的依赖关系(从本文5.3节实验部分可以看出,阈值选取0.8左右比较合适,这里我们选取=0.8).对部分函数依赖集的以上两个问题采取相应的处理措施后可得到模式的有效部分函数依赖集(EPFD).例1中关系S的有效部分函数依赖集为EPFD(S)={CompanyNameManufaIDTelephone在根据部分函数依赖计算模式元素间的结构相似度之前,我们首先对源模式和目标模式中的元素根据其自身信息计算它们之间的相似度,称之为语义相似度[9],然后根据语义相似度对目标模式中的每个元素生成其候选匹配集.在计算结构相似度时,以候选匹配集为基础,仅计算每个元素与其候选匹配集中所有元素的结构相似度,这样可有效地降低算法的时间复杂度.候选匹配集一般有如下3种选取策略[6]:(1)MaxN:选取相似度最高的N个匹配项为(2)MaxDelta:选取与相似度最大值间差值小(3)Threshold:选取相似度大于固定阈值单一的选择标准都存在缺点,例如:MaxN和候选匹配集.于d或者最大值的α%的匹配项为候选匹配集.(Threshold)的匹配项为候选匹配集.图3模式S的部分函数依赖图MaxDelta返回的值可能相似度都很低,而Threshold返回的值可能非常少或者非常多(据Threshold的大小而定),因此,我们将多条标准结合考虑.根据算法的特点,我们的算法将MaxDelta和Threshold这两种策略相结合,为目标模式中的每个元素m生成相应的候选匹配集CAND(m).如表2中属性Company_ID,计算其与表1中各个属性间的语义相似度为{(CompanyName,0.7),(ManufaID,0.4),(Address,0.14),…},我们取MaxDelta策略的α值为50%,Threshold策略的阈值为0.3,选取属性Company_ID的候选匹配集为{ManufaID,CompanyName}.4.2依赖图的建立图结构是事物间相互关系最直观有效的表现方式,所以这里用图结构来表示元素间的关联关系,图中的节点表示元素,节点间的连线表示元素间的部分函数依赖关系,边的权重表示元素间的部分函数依赖度.根据模式S的有效部分函数依赖集EPFD(S)可生成模式S的部分函数依赖图G(V,E),其中V是节点集合,每个节点表示模式中的一个元素,E是有向边集合,每条有向边表示有效部分函数依赖集EPFD(S)中的一个部分函数依赖关系.例如,CompanyName从节点CompanyName到节点ManufaID的权重为0.98的有向边表示.图2是模式S的完全函数依赖图(仅包含完全函数依赖关系),图3是模式S的部分函数依赖图.Page6图2根据模式S的完全函数依赖集(所有完全函数依赖组成的集合)构建而成,图3则根据模式S的有效部分函数依赖集EPFD(S)构建而成.将两图对比,可明显看出部分函数依赖提供了更多的结构信息,能更有效地支持匹配操作.下面以图3为例介绍部分函数依赖图中的一些概念:图3中有一条从节点CompanyName指向节点Address的权重为0.97的有向边,据该边我们称节点CompanyName图4模式T的部分函数依赖图与一个元素关联的其它元素构成了该元素的结构信息,在部分函数依赖图中表示为该元素的依赖节点和决定节点,其对应的集合分别称为依赖元素集和决定元素集.定义如下.定义3.元素e的决定元素集为部分函数依赖图中以该元素为起点的所有有向边的终点所表示元素的集合,同时把以e为起点的有向边的权重及该边终点所表示的元素合称为e的一个决定结构信息,把所有决定结构信息组成的集合称为e的决定结构信息集.如图3,模式S中的元素CompanyName的决定元素集为{ManufaID、Address、Telephone、LinkMan、SupType、Remark},决定结构信息集为{(ManufaID,0.98),(Address,0.97),(Telephone,0.98),(LinkMan,0.96),(SupType,0.96),(Remark,0.98)}.定义4.元素e的依赖元素集为部分函数依赖图中以该元素为终点的所有有向边的起点所表示元素的集合,同时把以e为终点的有向边的权重及该边起点所表示元素合称为e的依赖结构信息,把所有依赖结构信息组成的集合称为e的依赖结构信息集.如图3,模式S中的元素CompanyName的依赖元素集为{ManufaID、Address、Telephone、为节点Address的依赖节点,节点Address为节点CompanyName的决定节点,边的权重0.97称为元素Address对元素CompanyName的部分函数依赖度.4.3结构相似度计算建立部分函数依赖图后,接下来我们根据部分函数依赖图计算元素间的结构相似度.图4为目标模式T的部分函数依赖图.LinkMan},其依赖结构信息集为{(ManufaID,1),(Address,0.90),(Telephone,1),(LinkMan,0.95)}.同理我们把元素间的结构相似度分为决定结构相似度和依赖结构相似度,分别根据决定结构信息集和依赖结构信息集来计算决定结构相似度和依赖结构相似度.由于二者的计算过程相似,下面我们以决定结构相似度的计算为例介绍它们的计算过程.在引入部分函数依赖这个概念之前,两个元素间的结构相似度一般是指与它们分别关联的所有元素组成的集合中互为候选匹配的元素占所有元素的比率[12].引入部分函数依赖这个概念之后,虽然同为候选匹配对,但由于元素间的函数依赖关系有强弱(部分函数依赖度的高低)之分,因此对结构相似度的促进作用也有差异,所以前面计算结构相似度的方法在这里已经不再适用.为了方便后面的介绍,我们定义了如下概念.定义5.模式S中存在部分函数依赖关系αC,模式T中存在部分函数依赖关系BA(A,B)和(C,D)为两个候选匹配对,则称(A,B)和(C,D)互为促进匹配对,它们之间相互促进作用的大小称为相似度促进度.下面我们通过如下3个问题来分析促进匹配对间的相似度促进度.Page7(1)(C,D)对(A,B)相似度促进度的大小与(C,D)的相似度之间有什么关系?(2)(C,D)对(A,B)相似度促进度的大小与函数依赖度α,β之间有什么关系?(3)(C,D)作为(A,B)的促进匹配对,对(A,B)的相似度促进度有多大?对问题(1),显然(C,D)的相似度越高,对(A,B)的相似度促进度越大.对问题(2),当α=β,即A、B分别以相同的函数依赖度决定C、D时,(C,D)对(A,B)的相似度促进度最大;|α-β|越大,则(C,D)对(A,B)的相似度促进度越小.例如:模式S对应的部分函数依赖图(图3)中存在部分函数依赖关系:S.ManufaIDS.CompanyName分函数依赖图(图4)中存在部分函数依赖关系:T.NameS.CompanyNameT.Address的函数依赖度相接近,即两者差值为0.01,而S.ManufaIDT.Address的函数依赖度差值为0.02,据前面分析我们得出如下结论:因为0.02>0.01,所以(S.Address,T.Address)对(S.ManufaID,T.Name)的相似度促进度比对(S.CompanyName,T.Name)的相似度促进度小.问题(1)、(2)是对相似度促进度大小与函数依赖度、促进匹配对相似度之间关系的定性分析,问题(3)则是对它们之间关系的定量分析.表3列举了描述依赖度差值d、(C,D)间相似度m与相似度促进度ε之间定量关系的几种方法.从本文第5.2节我们可以看出,与第1种线性函数和第2种抛物线函数相比,第3种以自然对数为底的指数函数能够更准确地描述三者间的定量关系.表33种相似度间差值犱与促进度ε之间的定量关系序号名称1线性函数ε=(1-d)×m×a(a为参数)2抛物线函数3指数函数ε=m×e-d×μ(μ为参数)通过对以上3个问题的分析,我们得到了促进度与函数依赖度、促进匹配对相似度之间的定性关系,并给出了有效的公式描述.下面我们利用该公式来计算结构相似度.算法如图5所示.需要说明的是:由于语义相似度的计算都采用启发式的方法,计算出的相似度数值并不具有实际意义,所以该算法中将所有候选匹配对间的语义相似度都看作1(可有效减少计算量,对结果无明显影响).CalDcssim(x,y,X,Y)输入:候选匹配对(x,y),x的决定元素集X,y的决定元素集Y输出:x和y的函数决定结构相似度dcssim(x,y)1.从X中任取元素m,令Q=Y∩CAND(m),并从X中去除m;2.若Q=,转入步4;3.在Q中选择使|w(y,n)-w(x,m)|最小的元素n,令4.若X≠,则转入步1;5.从Y任取元素p,令Q=X∩CAND(p),并从Y中去除p;6.若Q=,转入步8;7.在Q中选择使|w(x,q)-w(y,p)|最小的元素q,令8.若Y≠,则转入步5;9.返回dcssim(x,y)=dcssim(x,y)/(|X|+|Y|);dcssim(x,y)=dcssim(x,y)+m×e-|w(x,q)-w(y,p)|×μ;图5中的算法以候选匹配对(x,y)以及x,y对应的决定元素集X,Y为输入,步1~4遍历X中所有元素,对每一个元素m,求m的候选匹配集CAND(m)与集合Y的交集Q,若Q≠,则在Q中选择这样一个元素n,使得|w(y,n)-w(x,m)|最小,即相似度促进度最大,然后得出(m,n)对(x,y)的相似度促进度为e-|w(x,m)-w(y,n)|×μ,并将该值与其它促进匹配对的相似度促进度相加.处理完X中的元素后,步5~步8对Y中元素做相同处理,最后步9将所有相似度促进度之和对X,Y中元素数量求平均得到候选匹配对(x,y)的决定结构相似度dcssim(x,y).对于依赖结构相似度我们采用与决定结构相似度同样的计算方法,不同的是这里的X为元素x的依赖元素集,Y为元素y的依赖元素集,最后求得元素x和y的依赖结构相似度dpssim(x,y).4.4结构相似度传递4.3节中计算的候选匹配对的结构相似度是所有促进匹配对的语义相似度对其促进度的综合,但事实上促进匹配对的结构相似度对候选匹配对的结构相似度也具有促进作用,即互为促进匹配对的两个候选匹配对的结构相似度间也能够相互促进.据此,我们采用传递调整算法对结构相似度进行调整优化,使结构相似度能够更准确地反映元素间结构上的相似程度.在介绍传递调整算法之前,我们首先介绍决定集结构相似度和依赖集结构相似度的概念.以x的决定元素集X和y的决定元素集Y为例,根据X,Y我们定义二部图G(X,Y,E),E=〈(m,n)|m∈X∧n∈Y∧n∈CAND(m)〉,E中每条边的权值为所关联的一对候选匹配对(m,n)对候选匹配对(x,y)的相似度促进度,这里为Page8我们用该二部图的最大流通量表示这两个元素的决定集结构相似度(式(1)),对式(1)的右边采用匈牙利算法[15]计算二部图最大流通量.dcssim(X,Y)=(max∑m对于依赖集结构相似度,我们以x的依赖元素集X和y的依赖元素集Y为例,同理我们可以得到其依赖集结构相似度(式(2)),对式(2)的右边同样采用匈牙利算法[15]计算二部图最大流通量.dpssim(X,Y)=(max∑x然后根据以上定义,我们分别对候选匹配对的决定结构相似度和依赖结构相似度进行调整.首先我们对决定结构相似度进行调整,对任意一对候选匹配(x,y),x对应的决定节点集合为X,y对应的决定节点集合为Y,则x,y间的决定结构相似度可利用如式(3)进行调整.dcssim(x,y)=α×dcssim(x,y)+β×dcssim(X,Y),根据式(3)对所有候选匹配对的决定结构相似度都进行一次调整称为一个调整周期,若两个调整周期之间所有候选匹配对的决定结构相似度的变化都小于阈值λ,说明调整已充分,调整过程结束;若多次调整仍未达到要求,则在第N个调整周期后结束调整.同理,对依赖结构相似度的调整与对决定结构相似度的调整类似.经过上述调整我们可以得到比较真实反映元素间结构相似程度的决定结构相似度和依赖结构相似度,下面我们将介绍如何根据决定结构相似度、依赖结构相似度及原有的语义相似度生成模式元素间的映射.4.5映射生成映射生成是映射关系确定的过程,它是模式匹配过程中的一个重要步骤,其确定的映射关系作为模式匹配的结果直接输出.文献[11]中介绍了一种解决映射问题的方法:稳定婚姻法.其核心思想是:选择满足如下两个条件的匹配对组成的集合作为模式映射结果.(1)集合中所有匹配对的相似度之和最大.(2)其中不存在这样的两个匹配对(x,y),(m,n):x与n的相似度大于x与y的相似度,同时y与m的相似度大于y与x的相似度.本文也采用相同的方法来生成映射.前面我们得到了元素间的语义相似度、决定结构相似度和依赖结构相似度,但是在映射生成过程中,使用3种不同的相似度标准会使过程复杂、准确率降低,所以在生成映射之前我们先对这3种相似度采用加权平均法进行合并,生成候选匹配对总的相似度sim(x,y),如式(4):sim(x,y)=α×lsim(x,y)+β×dcssim(x,y)+得到候选匹配对总的相似度后,我们再根据稳定婚姻法选取最终的映射结果输出.第5节将对本方法得到结果的精确性进行实验评价.5算法实验评价5.1实验情况介绍本方法利用数据实例信息挖掘元素间的结构信息,并以之辅助匹配.为验证本方法的有效性,我们将本方法与模式匹配领域中常用的一些方法进行实验对比,并以如下3个指标来描述对比结果.果占所有匹配结果的比率;(1)查准率(Precision):匹配结果中正确匹配结(2)查全率(Recall):匹配结果中正确匹配结果占所有正确匹配的比率;(3)全面性(Overall):通过匹配方法节省的工作量占总的匹配工作量的比率.Overall=Precision2-1()Recall=T-F其中T为匹配算法返回的正确匹配结果;P为匹配算法返回的所有匹配结果;F为匹配算法返回的错误匹配结果;R为所有正确的匹配结果.查准率、查全率和全面性能够比较全面地反映匹配方法的性能,是模式匹配研究中最常用的3个评价指标[6,11-12].对测试用例的选取我们分为两个步骤,首先选取模式结构,然后生成数据实例.这里的源模式和目标模式分别取自两家销售同类产品的公司的进销存管理系统,称为DB1和DB2.表4列出了两个模式中关系和属性的基本情况.模式中的数据实例采用DTMDataGenerator①生成.测试中我们将模式及①http://www.sqledit.com/dg/download.htmlPage9其对应数据导入MySql5.0数据库中,使用ODBC连接数据库以获取各种模式信息.主机硬件采用IntelPentium42.0GHz,1GB内存;操作系统为WindowsXPSP2.模式DB1DB25.2相似度促进度与相似度及函数依赖度定量关系的实验证明4.3节中对相似度促进度与相似度及函数依赖度的关系进行了讨论,给出了3种描述它们之间关系的方法,这里我们通过实验来对这3种方法进行分析对比.取数据实例集的大小为3000,对比结果如图6所示.图63种不同的描述方法之间的指标对比图通过图6我们可以看出,当用指数函数描述函数依赖度与相似度促进度之间的关系时,在查准率、查全率和全面性3个指标上都优于其它两种描述方法,所以本方法中采用指数函数来描述函数依赖度与相似度促进度间的关系.5.3参数不同取值的匹配结果对比本文4.1节中,对所有的部分函数依赖关系,我们选取依赖度大于阈值的依赖关系作为有效部分函数依赖来辅助匹配.值的选取对匹配结果有很大程度的影响,图7是阈值在区间[0.4,1]之间变化时,查准率、查全率、全面性3个指标的变化图.由于函数依赖度低于0.4时无任何实际意义,在此我们对函数依赖度值小于0.4的依赖关系不予考虑.图7描述了算法各项性能指标随阈值变化的趋势图,如图所示,算法的查准率(Precision)从36%提高到88%再下降到70%,这说明算法的查准率随着从0.4~1的变化而先升后降,并在某一中间值达到最高,即匹配结果中正确匹配占所有匹配结果的比率达到最高.算法的查全率从38%提高到100%然后下降到71%,说明算法的查全率也随着从0.4~1的变化而先升后降,并在某一中间值达到最高,即匹配结果中包含的正确匹配数目最多.算法的全面性同样从-22.7%提高到88%然后下降到41.4%,也说明全面性随着从小到大的变化而先升后降,并在某一中间值达到最高,即匹配算法节省的工作量最多.从图中我们发现:当取值在0.8左右时,算法的各项性能指标都达到最大.所以为了使算法的性能最优,应在0.8左右取值.当取值过小时,很多依赖度很小的部分依赖关系参与匹配,依赖度数值偏小意味着这个依赖关系不具有实际意义的可能性很大,这样的依赖关系参与匹配会使算法的准确度降低;当取值过大时,有些依赖度数值较大的依赖关系被过滤,依赖度数值较大意味着该依赖关系具有实际意义的可能性很大,这样的依赖关系不参与匹配过程会使算法的准确度降低,而当=1时,几乎所有的非完全函数依赖都不参与匹配过程,算法仅仅利用了模式中的完全函数依赖关系,准确度大幅下降.5.4同类方法对比数据实例信息与结构信息是模式匹配中利用的两类重要信息,利用数据实例信息进行匹配的方法中具有代表性的是duplicates[10]方法,而cupid[12]方法和SF[11]方法则都是常用的利用结构信息来进行匹配的方法,因为本方法将这两种信息结合起来,利用数据实例信息计算得到的结构信息(部分函数依赖)辅助匹配.所以为了验证本方法的有效性,下面我们首先将本方法与利用数据实例信息进行匹配的duplicates方法进行对比,由于数据集中数据量的大小对两种方法的实验结果都有影响,所以我们分别生成了四种不同数据量大小(50,200,1000,5000)的数据集进行对比,实验结果图8所示.从图8(a)两种方法查准率的对比图中我们可以看出:随着数据集中数据量的不断增大,duplicates方法和PFD_based方法的查准率都在增大,但是相对于duplicates方法,PFD_based方法受数据量大小的影响更大.当数据量为50时,PFD_based方法的查准率低于duplicates方法,当数据量增大到Page101000时,PFD_based方法的查准率就明显高于duplicates方法,同时我们还发现当数据集的数据量从1000增加到5000时,两种方法查准率的提高幅度都比较小.据此我们得到如下结论:数据集越大,越能够提高方法的查准率,但当其增大到一定程度后再继续增大时,则对查准率的提高幅度并不大,反而会提高算法的时间复杂度.据图8(b)和图8(c)分别对查全率和全面性的对比我们也可以发现和图8(a)相同的规律.(a)两种方法针对不同数据量的数据集合的查准率对比图(b)两种方法针对不同数据量的数据集合的查全率对比图(c)两种方法针对不同数据量的数据集合的全面性对比图图8两种方法针对不同数据量的数据集合的指标对比图8中分别对查准率、查全率和全面性3个指标进行对比,我们可以得到如下结论:与duplicates方法相比,PFD_based方法对数据量的要求更高,需要大量的数据实例,但当数据实例的数量大于1000时,算法的各项指标相比duplicates方法都有较大提高,大幅度提高了模式匹配的精确度.同时考虑到算法的时间复杂度,我们一般取数据量的大小位于区间[1000,5000].接下来我们再将本方法与利用结构信息的Cupid方法和SF方法进行对比,这里取数据集的大小为3000.实验数据如图9所示.从图9中3种方法在各个指标上的对比我们可以看出:在查准率指标上,PFD_based方法高于其它两种方法,即PFD_based方法的匹配结果中正确匹配所占的比率最高;在查全率指标上,PFD_based方法高于其它两种方法,即PFD_based方法的匹配结果中包含的正确匹配最多;在全面性指标上,PFD_based方法也高于其它两种方法,即节省的工作量也比其它两种算法要多.图9Cupid、SF和PFD_based3种方法的不同指标对比通过上面的实验我们可以看出,PFD_based方法将数据实例信息和结构信息结合起来进行匹配,在各项性能指标上都明显优于单独利用数据实例信息的duplicates方法,也明显优于单独利用结构信息的SF方法和Cupid方法.6总结与展望本文提出了一种通过数据实例信息得到元素间的部分函数依赖关系,然后利用其辅助模式匹配的新方法,并从理论分析和实验结果两个方面论证了此方法能够在一定程度上提高模式匹配的精确度.目前的模式匹配方法大多以元素自身信息为主来进行匹配,其它种类的信息只起到了一些辅助的作用,然而同一描述对象由不同的模式设计者描述时,其自身信息可能有很大的差异,从而在模式匹配过程中产生误导作用,使得单独利用元素自身信息进行匹配的效果并不理想,事实也正是如此.数据实例信息能够最真实地反映元素的语义,且不会由于设计者的不同而产生差异,能够在模式匹配过程中发挥更重要的作用.未来我们可以利用数据实例信息来获取更真实的元素语义,并进行匹配,提高匹配的精确度.
