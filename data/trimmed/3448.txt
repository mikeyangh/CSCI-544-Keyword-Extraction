Page1对等网络的抖动特性研究综述付志鹏1),2)王怀民1),2)史殿习1),2)邹鹏1)1)(国防科学技术大学计算机学院长沙410073)2)(国防科学技术大学并行与分布处理国家重点实验室长沙410073)摘要对等网络应用是目前互联网上最主要的应用之一,但是它的性能受到抖动特性———节点频繁加入和退出网络的影响.文章在系统简述抖动的由来、定义及其对P2P系统性能影响的基础上,详细介绍抖动的统计特性研究,发现如节点的会话时长一般服从重尾分布等的一些动态规律;详述抖动的测量方法研究,针对被动监测,主动监测以及抽样测量等阐述各自的优缺点,并说明相应的改进方法来提高网络测量的精度;详述为减少抖动影响的应对策略研究,在邻居选择、失效恢复、副本维护、连接生命周期维护等方面说明各应对策略的功能和优缺点,并针对各个方面分别阐述自己的看法.最后对未来的研究趋势进行了总结和展望.关键词对等网络;抖动;统计特性;测量方法;应对策略1引言P2P应用是目前互联网上最主要的应用之一,遍及文件共享、实时通信、协同计算、流媒体传输等.P2P软件如BitTorrent[1]、eMule①、PPTV②等都已经有几亿的用户群体,同时上线人数达到数百万规模,占据了目前互联网流量约73.79%的带宽[2].但是P2P的性能受到网络动态性(比如抖动,churn)严重制约.从P2P网络诞生开始,churn就一直伴随其左右.2000年到2004年间,研究人员通过各种手段对Napster[3]、Gnutella[4]、Overnet③等P2P网络进行测量[5-9],发现网络中节点的平均会话时长一般都比较短,理论分析和实验验证表明,节点的频繁加入和退出对网络的拓扑一致性、维护开销、性能以及可靠性等都会产生影响.Churn的存在制约了P2P的发展及其推广应用.有越来越多的研究者关注并参与研究.在SIGCOMM、INFOCOM、ICNP、IPTPS、IEEEP2P等著名国际会议以及IEEE/ACMTransactionsonNetworking等期刊都收录了多篇关于churn的文章.这些文章从churn的统计特性、测量方法以及应对策略等方面对churn进行全方位、多角度的研究,提出了很多宝贵和富有建设性的意见.从实际应用的角度出发,针对目前唯一在现实中大量应用的结构化P2P网络———Kademlia[10]进行churn特性研究是近几年来该方面的特点,研究人员通过网络测量、理论分析、实验验证等手段对其应用软件eMule、BitTorrent进行研究,取得了丰富的研究成果.文献[11]对churn进行了部分阐述,本文致力于对其进行进一步的深化和补充.本文第2节阐述churn的定义及其对P2P网络的影响;第3节详述churn的统计特性,随后阐述churn的测量方法;第5节阐述churn的应对策略;文章最后讨论churn的研究发展方向.2Churn简介2.1Churn的由来Churn一词的产生由来已久[12].随后该词被扩展到多个领域.它表示前面的状态还未调整好,下一个活动又添加进来,系统不停地抖动,并且一直延续下去.P2P网络中的churn是指,当一个节点加入或退出网络后,网络需要调整来适应这种变化(包括与其相连的节点信息的更新,与节点相关的资源信息的更新等),而不等网络调整好,下一个节点又加入进来(或退出),又需要调整,……,使得网络处于不停的抖动状态.在P2P网络诞生的初期,人们非常渴望知道P2P网络的一些静态和动态特点,比如规模到底有多大?网络节点的活动是否有规律?等等.马萨诸塞州立大学的Chu等人[6]于2000年12月21日~2001年2月3日对Napster及2002年2月24日~3月25日对Gnutella的监测表明,有31%的节点的会话时长仅为10min左右,仅有不到20%的节点的会话时长超过2小时.华盛顿州立大学的Saroiu等人[7]同样对Napster和Gnutella进行监测,结果表明,网络中有50%的节点的会话时长少于60min.加州大学圣地亚哥分校的Bhagwan等人[5]于2003年1月14日~1月28日对Overnet网络的监测表明,50%的节点只有0.3的可用性①.在2003年11月加州大学伯克利分校的技术报告中,Rhea等人[8-9]总结了2000年~2003年间研究人员对P2P网络的监测结果,表明P2P网络中节点加入和退出非常频繁,平均在线时长由几分钟到一小时不等,并且该现象对网络的性能和可靠性产生严重影响,必须引起P2P网络研究人员的足够重视.他借鉴工业领域以及经济领域中churn的定义,首次将网络中节点频繁地加入和退出网络也定义为churn,得到学术圈同行们的广泛认同,从此,学术界统一将该现象称为churn.2.2Churn的定义虽然Rhea在文献[8]中给出了第一个定义:节点加入和退出的持续过程(thecontinuousprocessofnodearrivalanddeparture).但是随后,众多研究者对churn给出了自己的理解和定义,比较著名的有:麻省理工大学的Li等人[13]将churn定义为:成员关系的持续改变(continuouschangesinmem-berships).加州大学伯克利分校的Godfrey等人[14]将churn定义:由于加入、正常离开、失效导致的一系列参与节点的改变(changeinthesetofparticipatingnodesduetojoins,gracefulleaves,andfailures).①可用性用响应次数和探测次数的比值来计算,比如探针探Page3俄勒冈州立大学的Stutzbach等人[15]将churn定义为:成千上万的节点由于独立地加入和退出所产生的叠加效果(thecollectiveeffectcreatedbytheindependentarrivalanddepartureofthousands(ormillions)ofpeers).从这些定义可以看出,虽然它们的说法各不相同,但其内涵基本一致,churn的概念有两个关键要素:(1)churn是由于节点加入或退出引起的,没有节点的加入或退出,就不会产生churn现象.(2)churn不是描述单个节点的行为,而是描述整个网络的动态特点,它是由于单个节点的行为而产生的整体结果.单个节点的一次加入或退出并不能代表什么,并且可以通过更新路由表、邻居表等,很快调整过来.而对整个网络而言,不断地有节点加入,同时不断地有节点退出网络,并一直延续下去,直到永远.一直以来,都很难找到一个相应的中文词语来准确表达churn的意思,翻译成扰动、抖动、波动、颤动等的都有.目前来说,大多数人趋向于翻译成抖动,本文也采用大众的看法,用抖动来表达.2.3Churn对P2P网络的影响当churn产生时,就会对网络的正常运行产生影响,使其变得非常低效.总结来说,churn对P2P网络的影响主要包括如下几个方面:(1)churn对P2P网络的拓扑一致性产生影响.P2P网络的拓扑结构用数学方法描述为用点(表示网络中的一台台计算机)和边(代表计算机之间的连接)连接而成的拓扑图.当节点加入和退出网络比较频繁时,节点的邻居往往经常变化,这使得表面上存在于邻居表中的节点实际上由于失效或下线而无法连接,从而产生网络的拓扑结构和实际不一致的情况.这将导致节点的连接失效,数据不可达等问题,严重影响网络的性能.(2)churn使得P2P网络的维护代价提高.在P2P网络中,每个节点都保存有一张路由表,用于存储和自己相连的邻居信息.当节点频繁加入和退出网络时,需要定期发送消息来检查确认邻居节点是否在线,当网络规模比较庞大时,这种消息的数量是很惊人的.假设网络节点数目为N,每个节点的路由表大小为O(logN),每隔30s发出一条大小为2k的心跳信息,则整个网络每分钟产生的负载为4k×N×O(logN)的消息量,对于一个具有100万节点的网络,其数量大约为80G(事实上在Gnutella网络初期,其网络维护消息的流量占其总流量的80%左右[16]).再加上在发现邻居节点失效时,需要及时查找新的邻居来保证路由表的完整性.这些由于churn带来的维护消息加重了网络负担,提高了网络维护代价.(3)churn对P2P网络的性能产生影响.衡量P2P网络的性能指标有多个,其中包括路由效率、查找延时、数据传输率等.而churn对这些指标都有影响.在P2P网络协议的设计中,网络路由、资源查找、数据传输都以节点邻居一直保持不变这一假设为前提.但在实际网络的路由传递过程中,下一节点可能失效,导致路由不可达,而源节点可能并不知道而盲目等待,既浪费时间,又降低效率.资源查找时,由于节点的加入和退出,导致有些资源可能根本不在网络中或者需要很长时间才能找到,从而增大查找延时.在数据传输的整个过程中,并不能保证传输路径上的每个节点一直在线,当节点频繁加入和退出网络时,若保证数据传输不中断,网络需选择其它路径来进行传输,降低了数据传输的效率.(4)churn对P2P网络的可靠性产生影响.P2P网络的可靠性是指P2P网络完成任务的正确性.网络路由不可达,数据不能传输到指定的节点,传输的数据产生错误、不完整,在网络中明明标识存在的资源却找不到等等,都是不可靠的表现.在churn下,P2P网络可能产生网络分割,某些节点被孤立,使消息传递不到给该节点从而使得网络不可靠.在进行资源的查找时,有些已经发布在网络上的资源的源节点可能已经失效,从而导致资源不可靠.在数据传输过程中,由于churn,导致传输过程中的节点失效,产生数据不可达、丢包等现象,导致传输不可靠.总之,churn对P2P网络的正常运行会产生极大影响,研究churn,获得网络节点的活动规律,分析这些规律对网络的影响,并据此提出一些切实有效的应对策略来减小这些影响,对提高P2P网络的运行效率,促进P2P网络的推广使用都有重要作用.3Churn的统计特性研究研究churn统计特性的目的是为了获得P2P网络的动态规律.表现churn统计规律的一些主要参数包括节点会话时长(sessiontime)、在线时长(uptime)、剩余Page4时长(remaininguptime)、生命时长(lifetime)等.下面分别对其进行简述.3.1会话时长研究会话时长是指单个节点的一次加入—参与—退出网络的活动周期所经过的时间,它用节点离开网络的时刻减去节点加入网络的时刻来计算.从2002年开始,一系列的研究人员对不同的P2P网络进行了统计监测,其结果如表1所示.发表年份研究者网络名称会话时长分布2002Chu等人Napster、Gnutella二次对数分布[6]2003Gummadi等人KaZaA重尾分布[17]2003Bustamante等人GnutellaPareto分布[18]2005Stutzbach等人Gnutella、2006Stutzbach等人Gnutella、2009Steiner等人KadWeibull分布[20]会话时长到底服从什么分布,目前尚无定论,每种说法都有自己的道理.本文认为,由于网络的动态性,会话时长也是一个动态变化的过程,在某个时间段,它可能用a分布能够很好地拟合,但在另一个时间段(比如热点爆发),a分布不能拟合,而它却能用b分布很好拟合,热点过后可能用c分布又拟合得很好.精确描述会话时长的分布比较困难,但总结网络活动规律对于指导网络和节点的行为,却具有很重要的参考价值.目前一个普遍的共识是,节点的会话时长一般服从重尾(heavy-tail)分布,比如Pareto分布和Weibull分布.3.2在线时长研究P2P中churn的统计特性进行研究的另一个重要参数就是在线时长,它是用目前在线节点的当前时刻减去节点加入网络的时刻来计算.Sariou等人[21]对Napster、Gnutella网络进行研究后发现,节点在线时长服从Poisson分布.而Stutzbach等人[15]对Gnutella、BitTorrent、Kademlia网络进行研究后表明,在线时长服从幂律分布.3.3剩余时长研究研究会话时长和在线时长的意义在于预测剩余时长,它是指从节点当前时刻到节点将来下线所剩余的时间.即剩余时长=会话时长-在线时长.通过预测剩余时长可以为网络选择节点提供依据.Yao等人[22]通过建立一个隔离模型来研究剩余时长:对每一个加入系统的用户v都分配一个随机的会话时长L,L的分布函数已知.当加入系统时,v找到k个初始邻居,然后持续监测它们的状态.当有邻居失效时,都将随机选择系统中在线的节点替代(任何时刻,邻居只有两个状态:活着(ON)或者死亡(OFF).ON的持续时间R为邻居的剩余时长,OFF的持续时间S为查找替代节点的延迟),然后通过构造一个持续时间的Markov链来跟踪v的出度.文章通过一系列的理论推导、实验,得出结论:产生剩余时长长的策略可以确保系统具有较低的隔离频率和较高的抗churn的适应性(resilience).为此,在节点选择时,选择剩余时长长的节点可以使系统更稳定.但是节点的剩余时长是一个未来的值,实际中不可能知道.而会话时长具有重尾分布的特点告诉我们,在线时长比较长的节点,其剩余时长也往往比较长.因此,很多研究者据此对剩余时长进行预测.Stutzbach等人[15]通过测量实验指出可以对Gnutella和Kademlia的剩余时长进行较好的预测,而BitTorrent不能.Steiner等人[20]同样通过对监测数据的分析指出,一个上线达到1000min的节点,将有1500min的剩余时长,只有20%的在线时长为2h的节点将继续在线24h.3.4生命时长研究节点的生命时长是指用户第一次使用P2P软件上线到最后一次卸载终端软件离开网络所经过的时间.在一些文献中,节点生命时长是指节点的会话时长.由于节点此次下线后,不能确定下次是否会上线,在进行生命时长测量时,往往具有不确定性.同时,由于生命时长的跨度往往比较长,而一般的网络实验却不会持续太长时间.这些因素都导致节点生命时长的测量存在一定的难度.Steiner等人[20]针对KAD网络进行了6个月的监测发现,中国节点和欧洲节点的生命时长有大的不同,超过1/3的中国节点在一天之后消失,只有10%的中国节点的生命时长超过150天.而接近40%的欧洲节点的生命时长超过150天.同时,文章还研究了生命时长和会话次数之间的关系,分析表明节点的生命时长强烈地依赖节点重连系统的次数.大概30%的中国节点其生命时长只使用一次会话,而欧洲节点只有5%.3.5针对KAD网络的统计特性研究早期针对P2P网络的测量大多是基于非结构化P2P网络来进行,基于结构化P2P网络的非常少,而且结构化P2P网络大多只存在于实验室,对这些网络的测量都以模拟为主.实际使用得非常少,Page5而Kademlia网络是实际应用非常广泛的网络,在目前的BitTorrent系列软件,eMule系列软件中都使用它,拥有大量的用户群体.为此,针对基于Kademlia网络的测量具有较强的应用价值,是近年来国内外P2P网络测量研究的热点.为此本文单独拿出一小节来进行阐述,逻辑结构上可能和前面的不一致.Steiner等人[20]针对KAD网络的监测表明:节点的会话时长服从重尾分布,至少有0.1%的会话超过1周,并且被监测到的最长的会话为78天,最适合的分布函数为韦伯(WeiBull)分布.文章还对会话之间的相关性进行了分析,结果发现以前的会话和下一次会话之间的相关度只有0.15,即通过以前的会话来预测将来的会话并不准确.但是当只考虑超过一天的长时长会话时,它们的正相关达到0.85.通过监测还发现,中国的节点比欧洲节点每日花非常少的时间连接到网络上,欧洲有40%的节点的日平均上线时间为5h,20%的节点超过10h,而且大部分节点每天的可用性变化非常大,通过已有信息预测每天的可用性比较困难.在欧洲,每个节点平均拥有18个IP地址,而在中国每个节点拥有4个IP地址.80%的中国节点只有一个IP地址,这缘于它们的生命时长比其他国家的短很多.用KADID来唯一标识节点并不准确,有些节点的ID是变化的,通过监测法国ADSL客户端发现,大约20%的节点为每个新会话改变他们的KADID,有些甚至在一个会话中改变它.地理分布上,节点比例最高的大陆为欧洲,节点数量最大的国家为中国,只有少于15%的节点在美洲(美国、加拿大、南美),任何时候网络中都有接近25%的节点来自中国.Memon等人[23]针对KAD网络中的消息通信进行监测,在2008年5月到2008年8月间收集了44组高6位相同的KAD域(zone)之间的通信消息.分析数据后的结果显示,10%已发布内容ID每分钟的请求速率为0.1条以上,而0.1%已发布内容ID的请求速率每分钟超过30条.而内容发布速率与内容搜索速率的差别非常大,一些关键词的发布速率超过100条/min,而相应的,被监测到的搜索请求最高时才低于2条/min.这一部分原因在于内容发布是系统自动产生而搜索却是用户行为.15%从没发布过的文件得到搜索,而60%已发布的文件却从未被搜索.有高达95%的已发布的关键词从未被搜索,由此可以看出和文件相关的多个关键词只有很少一部分被真正使用.4Churn的抓取和测量方法的研究随着研究人员对测量的深入以及对多种数据抓取和测量方法所得到的数据统计结果的分析比较,人们发现,早期的很多数据抓取和测量方法存在偏差,由此得到的很多数据都不可靠甚至是错误的.因此,大概从2006年以后,研究人员越来越关注对数据抓取和网络测量方法进行改进的研究.对P2P网络测量方法并没有严格的分类,Stutzbach等人[15]将其分为被动监测(passivemo-nitoring)和主动监测(activemonitoring)两种.而后来他又将其进一步分为被动监测、参与(partici-pate)、爬测(crawl)、抽样(sample)和中心化(cen-tralize)等[24].本文认为主动监测和被动监测是从数据获取方式的角度去分类.参与是指每个参与其中的节点都记录本地自己的统计信息,并据此来进行分析的方法,可以认为是被动监测的一种.抽样是从数据筛选的角度来看的,在主动监测和被动监测中都可以结合使用.中心化主要是通过获取中心服务器的数据来进行分析的测量方法,在主动监测和被动监测中也都可以使用.为此,本文还是将测量方法分为主动监测和被动监测两类,并分别进行详述.抽样测量是在网络规模非常庞大时对网络进行测量分析的主流方法,经常用于对非结构化P2P网络的测量分析,为此本文也单独拿出一小节来对其进行详述.针对目前大规模使用的BitTorrent、eMule进行动态模拟和测量具有很强的应用价值,本节最后也对其进行简述.4.1被动监测被动监测是指在P2P网络中选取足够数量的节点(最好是位于骨干网络中)作为监测节点,记录所有经过该节点的消息流的相关信息.4.1.1方法评价该方法占用CPU比较少,监测过程中基本上不占用通信带宽,因此不会对P2P网络的正常运行产生较大的影响.被动监测本身的缺陷使得该方法存在较大的不足:(1)监测到的节点数目有限.它只能监测那些发送消息且消息恰好经过被监测节点的节点,对于那些存在网络中但很少甚至不发送消息的大量边缘节点是无法监测到的.同时,一些边缘节点(地理相近的园区节点、社区节点)在小范围内聚集成簇,在簇内如果没有监测节点,它们之间的通信也是无法监测到的.Page6(2)监测到的信息具有较大的误差.假设有一个源节点A在T0时刻上线,但是由于它不发送消息(比如Bittorrent中不上传下载任何数据的节点)或者在监测系统启动前已经初始化完毕,监测系统发现不了它上线,经过时间t1后,A在T1时刻向网络中发送消息,此时监测系统才发现A上线,经过t2时间后,A在T2时刻接收到最后一条消息,此后不再发送和接收任何消息.然后在T3时刻节点A下线.节点A实际存在于网络的时间为T0~T3,而监测系统发现A的上线时间却为T1~T2.对于T0~T1,T2~T3这两个时间段A是否存在于网络中,存在多长时间,监测系统是无法获知的.这肯定有较大的误差.(3)通过消息流来判定节点可能存在的误差.消息流主要通过IP地址和端口号来标识一个节点,但是研究表明很多节点的IP地址和端口号是动态变化的,对于那些使用动态IP地址的用户来说,它们可能被标识为多个节点.而有些小局域网可能采用一个IP地址和端口号上网,因此可能有多个用户被标识为同一个节点.4.1.2适用场景虽然被动监测对获取网络的节点数目以及节点上线下线时间存在误差,但是它对网络通信特点的监测却非常管用,特别是集中式和具有超级节点的分布式系统中的网络通信的监测.Sen等人[25]采用被动监测方法来对网络通信进行分析.他通过在第一级网络服务提供商(ISP)的骨干网的多个路由器上部署监测点,收集通过这些监测点的所有流信息(包括数据流和消息流),并对这些流信息在3个不同的粒度层级上进行分析:IP地址级、网络前缀(NetworkPrefix)级、自治系统AS(AutonomousSystem)级,从而获取网络中消息流的特点.文章通过对收集的2001年9月到11月间在Gnutella、FastTrack、DirectConnect网络的通信流分析发现,网络中通信最活跃的时间发生在傍晚和午夜.凌晨5点过后,网络通信量随着时间慢慢变少,到下午一二点时达到最低值.60%的IP地址,40%的网络前缀,30%的AS每天在网络中所驻的时间少于10min,超过20%的网络连接持续时间只有1min甚至更少.65%的IP地址在FastTrack网络中只驻留一次.4.1.3方法改进Memon等人[23]针对被动监测的不足进行改进,并用改进后方法对KAD网络中的消息通信进行监测.针对被动监测中插入少量监测节点不能获取足够详细和全面的通信消息,而插入过多的监测节点又会干扰DHT网络的正常运行这一问题,Memon等人提出并实现了一种高度并行的、可扩展的被动监测技术———Montra.其关键思想是让监测节点的可见度尽量小,从而减小监测节点对系统的干扰,并降低对监测节点的资源要求.它通过如下策略来进行:(1)将监测节点Pm的ID设置为目标节点Pt的ID与1的异或值,即ID(Pm)=ID(Pt)1,从而保证Pm为Pt距离最近的节点,因此根据消息应发送给距目标ID最近的多个节点的原则,发送给Pt的消息,Pt一定也会发给Pm,从而可以监测所有经过Pt的消息.(2)Montra通过最小化监测节点的可见性来尽量减小监测给网络带来的干扰,它使监测节点Pm只对目标节点Pt可见,而对其它节点均不可见,并且Pm只对Pt的消息响应,而对其它消息均忽略,同时Pm不保存任何网络内容.通过这两个步骤,使得Pm可以在网络中大规模部署而不增加网络的负担.在KAD网络上的运行显示,Montra可以同时监测32000个KAD节点上的消息通信,而丢包的概率为0.009%,它可以抓取90%的查询消息并定位90%的目标节点.4.2主动监测和被动监测不一样的是,主动监测是节点通过探测主动获取邻居节点的信息,然后通过邻居节点获得邻居的邻居节点的信息,如此循环.这一过程主要通过在网络中运行一定数目的爬虫(crawler)来主动抓取网络的快照信息获得.4.2.1方法评价该方法需要占用爬虫所在机器的大量CPU时间和存储空间以及非常高的网络带宽.同时,主动监测对P2P网络的正常运行可能存在干扰,一些正在进行业务处理或数据传输服务的节点由于CPU或网络带宽被爬虫程序占用而被迫延迟或中断.虽然如此,和被动监测相比,主动监测的优点是非常明显的.(1)监测到的信息具有较高的准确性.爬虫程序每隔一个单位时间Δ就抓取网络的快照一次,假设节点在Tk时刻的快照中没抓取到,在下一个快照Tk+1时刻抓取到了,则节点的上线时间应介于Tk~Tk+1之间,误差不会超过Δ,当Δ较小时,它的准确度是比较高的,文献[26]说明,抓取整个网络需要3min,而文献[20]说明抓取网络中高8位相同的Page7zonecrawl只需2.5s,当间隔时间Δ取这些值时,可以保证主动监测比被动监测具有更高的准确性.(2)能够比被动监测抓取到更多的节点,使网络快照更接近于真实的网络.当爬虫程序经过多次迭代后,如果发现此次迭代抓取到的节点绝大多数是已经获得的节点时,根据小世界模型理论,可以认为,我们已经抓取到网络中绝大多数的节点,此时抓取到的网络快照就比较接近真实的网络.4.2.2方法改进当然,主动监测方法也有很多地方需要改进.Steiner等人[20,27]针对以往主动监测中需要多台主机并行执行,消耗过多时间用于多台主机间的同步问题,提出了一个快速定制爬虫———Blizzard.它将爬虫程序只放在一台电脑上,该爬虫在初始运行时,就已经和数以百计的节点相连,并使用一个简单的宽度优先搜索来迭代询问邻居节点,通过这些已知节点来发现新的节点,对于每个节点应答,都确认并排除已发现的节点.相比传统的主动监测方法,由于减少了同步通信问题,该爬虫能够快速高效地抓取网络信息.但是该方法对软件、硬件以及环境都提出了更多的要求,初始时就必须和数以百计的节点相连,使节点必须处于网络的骨干位置,由于要在非常短的时间内和数以百万规模的网络节点通信,对机器的处理速度、存储空间以及网络带宽都提出了非常高的要求.通过在法国和德国分别部署该爬虫来对eDonkey中的KAD网络进行监测,从2006年9月23日到2007年3月20日进行高8位相同的zonecrawl,表明每2.5s就可以获得一次快照,具有较高的速度.从2007年3月20日到2008年5月25日进行的fullcrawl表明,获取整个网络的快照需要8min,每次crawl可获得3百万到4.3百万个节点,其中前两百万个节点只需1min,同样具有较快的速度.周模等人[28]根据KAD网络的特点,设计并实现了一个可扩展爬虫,该爬虫使用宽度优先搜索和查询迭代交互进行.在爬虫工作时,有一个已知节点集Nknow和结果节点集Nresult(初始时Nresult为空),对Nknow中的每一个节点IDknow,爬虫都通过公式IDi=IDknow2127-i(0i127)来计算出需要在IDknow中查询的节点ID,并向节点IDknow发出查询该ID的请求,节点IDknow收到请求后就会查找它的路由表第i个链表中所有离IDi最近的节点列表,并将其返回给爬虫节点.爬虫收到这些节点列表后,对每个节点首先查看它是否已在结果节点集Nknow中,如果存在就放弃该节点,否则就将其加入到Nresult中.在爬虫向IDknow发送查询请求后,可以接着向下一个节点通过上面的步骤计算出新的节点ID然后向该节点发出查询请求,当对Nknow中的节点都发送了查询路由表中第i个链表的请求后,第i次查询结束.然后,爬虫重复上述步骤对Nknow中的每个节点发出查询路由表中第i+1个链表的请求.直到i为127结束,则该轮爬虫迭代结束,然后将结果节点集Nresult作为新的已知节点集Nknow进行新一轮迭代.为获得一个高效的可扩展爬虫,文章提出3个策略来提高效率:(1)减少每次迭代的轮数;(2)增加每一轮所获得的节点数目;(3)提高请求的发送频率.文章通过对实验数据的分析,得到在一次迭代中哪几轮的查询能够获得非常多的不同节点,而哪几轮所获得的节点数目不多且与前面的重复,从而决定哪些轮非常重要,哪些可以剔除,进而减少每次迭代的轮数.而留下来的那些轮,由于具有非常多的不同节点,等价于增加了每一轮所获得的节点数目.从而据此来提高爬虫的效率.Wang等人[26]针对以往采用主动监测测量节点会话时长不准确的问题,提出自己的测量方法.以往的测量方法中,当抓取快照的时间间隔Δ比较小时,会加重网络的负担,影响P2P网络的正常运行;当Δ较大时,就会有获取节点会话时长不准确问题.对此,Wang等人提出基于剩余时长的测量方法(Residual-BasedMeasurement),它首先在T0时刻首次获取网络快照的时候抓取到数目足够多的初始节点集S0,然后从S0中随机选取ε%的节点作为跟踪节点集S1,随时跟踪S1中每个节点的状态,直到节点下线或者达到实验时间T结束.文章通过一系列的理论计算来证明其方法足够好,但是如何精确获取节点的下线时间却并未交待.同时,文章给出的跟踪节点集具有较强的时间依赖性,只能是在首次抓取时恰好上线并被抓取到,才可能成为跟踪节点集的一员,其它时刻上线的节点无法被跟踪,因此对监测短会话时长节点是不利的.文章最后采用该测量方法实现了一个针对Gnutella网络的爬虫———GnuSpider,该爬虫只需3min就能覆盖整个网络,发现近6.4百万个用户,90%的超级节点和叶节点都能在100s内发现.文章使用第一次抓取到的其中46.8万个应答超级节点为S0,取ε=21.3,即S1=S0ε%=10万进行持续的72h跟踪以获得其会话时长,其会话时长的误差控制在3min,即一次crawlPage8过程,具有较高的精度.4.3抽样测量和被动监测、主动监测不一样,抽样测量是从另一个的角度来看的一种网络测量方法,该方法可以和被动监测、主动监测结合起来使用.它是在实际网络中公平随机均匀地选择一些节点,将这些节点组成的抽样网络取代真实的网络来进行研究.由于真实的网络具有规模巨大和高度动态的特点,直接测量往往比较困难,并且代价比较高昂,抽样测量就成为一种可选的方案.4.3.1方法评价和真实的网络测量相比,抽样测量大幅度减少了网络规模,降低了网络的复杂度,减小了测量的代价.但是,它毕竟不是真实的P2P网络,因此会使得网络的某些特性不明显甚至失去网络的某些特性.因此,如何保持真实网络的特性,同时在抽样时如何选取代表节点,是抽样测量需要特别注意的两个问题.该方法在以下方面存在不足:(1)目前的抽样测量一般是基于静态图来进行的,而P2P网络是高度动态的.某时刻的抽样在下一时刻可能就会产生变化.虽然可以通过动态跟踪代表节点来解决动态性问题,但是由于节点离开,失效等行为时有发生,a时刻具有代表性的节点在b时刻可能就不具有代表性.随着时间的推移,代表节点越来越少,抽样网络越来越不能代表真实的网络.(2)代表节点的选择往往会产生偏差.在P2P网络特别是非结构化P2P网络中,处于中心位置的节点往往是那些节点度大、在线时间长、服务能力好的服务器节点,这些节点只占P2P网络中的很少一部分.绝大部分终端节点处于网络边缘,这些节点在线时间短、节点度很小.在抽样时,由于中心节点24h在线,什么时候抽样都可能被抽到,而终端节点往往上线时间短,错过了抽样时间就不可能被选中.同时,节点度大的中心节点被选中的概率也比较多,而终端节点由于节点度很小,抽样时走到该节点可能性也比较低,因此往往不容易被选中.4.3.2方法改进Stutzbach等人[29]针对非结构化P2P网络动态和异构对抽样测量带来的偏差,提出可回退受控随机走(MetropolizedRandomWalkwithBacktrack-ing,MRWB)的策略来进行抽样节点的选择.文章主要解决两个问题:如何处理网络动态性;在选择下一个节点作为抽样节点时,如何体现公平随机无偏性.对于处理动态性的问题,文中采用如下方法:(1)对网络图加入时间目录:Gt=〈Vt,Et〉(Gt为t时刻的网络图,Vt为t时刻的节点集,Et为t时刻的边集);和vi,t可以被重复选中;(2)定义时间窗口:[t0,t0+Δ];(3)该时间段出现的节点数为Vt0,t0+Δ=∪(4)节点在不同时刻具有不同的性质,因此vi,t(5)当测量窗口Δ足够小时,可以认为网络以及节点的性质改变较小.由此可以把这时间段中的网络图看成静态图来处理.通过上面的5步,就可以将动态的网络图以时间为轴切成一个个静态图来分别进行抽样处理,从而简化了问题的复杂性.在静态图中,抽样节点x在选择它的某一邻居作为下一个抽样节点时,按照下面的策略进行,首先平均随机地选择x的邻居y,询问y的节点度从而计算出p0=degree(x)/degree(y),然后生成一个概率随机数p(0p1),如果p0>p,则y被选中作为x的下一跳,否则停留在x作为下一步.当y的节点度比较大时,p0就比较小,y被选中的概率也比较小;但是,由于y的节点度比较大,当抽样走到y的任何一个邻居时,y都有可能被作为下一个抽样节点而被选中,因此,节点度大的节点可能被抽到的次数就增多,从而弥补每次抽样时被选中的概率低的问题.该策略从一定程度上抑制了以往抽样偏向节点度大的节点而导致的偏差,在一定程度上实现了公平无偏性.但是,对于时间因素带来的偏差,文章并没有考虑.文章通过从节点度抽样、会话时长抽样、查询延迟抽样等方面考虑针对不同会话时长分布(指数分布、Pareto分布、Weibull分布)的系统进行模拟实验,看在什么程度的抖动情况下该方法比较准确,在什么程度下该方法不准确.结果表明,当平均会话时长小于2min时,该方法和希望结果存在明显差异,而对会话时长服从什么分布区别不大.通过跳数为10000步的模拟表明,该策略的精确度不受多步数的影响.模拟还显示,当网络最小节点度超过3时,该抽样方法不会产生明显偏差.文章最后采用该方法实现了一个网络抽样工具———ion-sampler.并从节点度和模拟跳数方面进行观察分析,结果显示相对其他抽样方法,该方法具有较高的精确度;相对于fullcrawl,该抽样方法具有更短的抽样延时,而fullcrawl随着规模的增大其crawl延时呈线性增长,不Page9具备良好的可扩展性.Rasti等人[30]根据上面的结果更进一步提出了一种应答驱动的抽样RDS(Respondent-DrivenSampling).它主要应用于为了获取网络中具有某种性质的节点所占的百分比所做的抽样.该抽样过程按照如下的方法进行:(1)根据节点的某个属性X(假设可取m个值)(2)将节点集也进行相应的划分{V1,…,Vm},(3)用于评估组i中节点占整个节点数的比例(4)所有被访问的节点集合为T={t1,t2,…,(5)Ti=T∩Vi表示在组i中被访问的节点集;(6)pi表示评估组i中的节点的比例:则抽样值将网络划分成{R1,…,Rm};其中Vi={v∈V|X(v)∈Ri};为pi;tn};该抽样将网络按某一特性进行划分的方法为我们监测网络某种特性提供了新的思路.要想获得网络的完整全面的特征,该方法并不适合.同时,该文存在如下不足:(1)当我们观察的是网络的某一动态性质时,它会随着时间而改变,因此不好定在哪个划分中,比如要监测网络中CPU使用率为60%以上的节点数目有多少?此时每台主机的CPU使用率是动态变化的,在某个时刻可能高于60%,而在另外的时刻又可能低于60%,从而不好确定节点属于哪一类.(2)该方法中回避了抽样节点如何选择S(^I)=∑v∈Ti^pi=S(^IVi)一致的.文章随后针对此方法进行了模拟实验,结果表明在静态图情况下,RDS方法无论在网络抽样的精确度方面,还是在精确度随网络规模的线性增加方面,都比MRWB方法要好.对于动态图,当平均会话时长小于5min时,节点频繁加入和退出导致该方法产生明显偏差,但是实际网络中的平均会话时长往往大于5min;同时,该方法也受网络最小节点度的影响,当最小节点度不小于5时,该方法的抽样精确度比较高,而当最小节点度小于5时,由于churn可能产生部分网络图不可访问而产生较大偏差.文章最后也将此方法融合在ion-sampler中,并采用ion-sampler的两种不同方法对Gnutella网络进行抽样测量,结果显示这两种方法都具有很高的精确度.的问题,只是简单说明是用随机走的方法选取节点,而随机走方法中节点的选取也有很多且精确度各不相同.4.4对大规模网络的模拟测量研究由于真实P2P系统如BitTorrent、eMule等规模非常庞大、动态性强等特点,很难对其进行评估和预测,这给ISP及政府带来了许多麻烦.对这些系统模拟出尽量真实的环境,然后对其动态行为进行预测.对引导BitTorrent、eMule的行为发展具有重要的参考价值.郑纬民等人[2]为此设计并实现了一个运行于服务器集群环境中的预测P2P行为的并行模拟器AegeanSim.该模拟器的主要思想包括:模拟器的基本单元称为逻辑过程(LogicalProcess),它是可执行的数据结构而非线程或进程,用来模拟真实环境中的一个实体节点,每台模拟机器上有成千上万个逻辑过程,而模拟机器之间通过消息传送接口MPI(MessagePassingInterface)来实现模拟的并行和协同.为解决同步问题,AegeanSim定义一个带时间戳的安全窗口,并严格控制其下限和上限.同时通过分组策略和简化接口来尽量模拟真实的P2P系统及提高模拟效率.文章通过模拟真实的BitTorrent系统并和BT研究进行比较,来验证模拟器的正确性.文章最后采用该模拟器对tracker断开时间对文件共享率的影响以及限制带宽对BT的影响来进行模拟,从而为ISP控制BT提供建议.5Churn的应对策略研究从发现churn会对P2P网络的正常运行产生各方面的影响开始,研究人员就致力于提出各种应对策略来尽量减小这些影响.这是2004年以来人们对churn研究的另一个重要研究点.Churn的影响涉及到P2P网络的各个方面,应对churn的策略也多种多样,本节从邻居选择策略、失效恢复策略、副本维护策略、连接生命周期维护策略等方面分别对其进行阐述.5.1邻居选择策略邻居选择策略是解决在节点加入网络时如何选择邻居来初始化自己路由表的策略.邻居选择策略不同,应对churn的效果就不一样.如果选择的是会话时长非常长的节点,那么churn对它的影响将比较小.Rhea等人[8]针对非结构化P2P网络提出并分Page10uu析了一些邻居选择策略:(1)全局抽样:随机抽取前缀为p的节点作为节点的邻居;(2)邻居的邻居(Neighbors’Neighbors,NN):选择邻居的邻居作为自己的邻居;(3)邻居的反转邻居(Neighbors’InverseNeighbors,NIN):选择那些与自己有相同邻居的节点作为邻居;(4)递归抽样(RecursiveSampling):针对邻居的邻居和邻居的反转邻居各自采用递归.文章分别对这些策略进行实验,结果表明,全局抽样的邻居选择策略出人意料的好,NN和NIN并非想象中的那么好,只有加上递归后的NN和NIN才达到全局抽样的效果.Yao等人[22]针对非结构化P2P网络提出一种基于年龄的随机邻居选择策略.文章假设节点会话时长服从重尾分布,它将整个P2P网络看成一个加权有向图G=(V,E),对于边(u,v)∈E,N+u={v∈V:u→v}表示u的出边邻居集,N-u={v∈V:v→u}表示u的入边邻居集,Au表示u的年龄,节点u的入边权值设置为u的年龄和u的入边集元素个数的比值:ω(v,u)=Au/|N-u|,u的入度加权值为d-u=∑v∈N-ω(v,u)=Au,出度加权值为d+u=∑v∈N+∑v∈N+(Av/|N-v|),则对于基于年龄的随机选择,通过交替地走入边和出边来进行,假设当前节点为u,则第1步选择u的一个入边邻居h(h∈N-u),选中的概率为puh=ω(h,u)/d-u,第2步选择h的出边邻居v,选中的概率为phv=ω(h,v)/d+h,则节点u选择v作为它的邻居的概率为puv=∑h∈N-5.2失效恢复策略情况下,如何进行恢复的策略.5.2.1是否立即恢复根据邻居失效后是否立即恢复可以将其分为反应恢复(ReactiveRecovery)和周期恢复(PeriodicRecovery).反应恢复是指当节点发现它的邻居表中有节点失效时,立即做出反应,更新其邻居表,并将新的邻居表发给它的每一个邻居.周期恢复是指节点的邻居失效后并不立即进行更新,而是等待一个周期时间t后统一进行更新.反应恢复能够及时修复邻居表,维护邻居表的完整性,在低抖动率①时比较高效,但是当抖动率比较高时,节点就会疲于修复邻居表,从而产生较高的维护代价.而周期恢复并不立即进行恢复,而是等待一个周期t后,有多少个邻失效恢复策略主要考虑的是在邻居节点失效的居失效就同时添加多少个邻居,因此,无论在低抖动率还是高抖动率下,周期恢复的性能都比较稳定,从而降低了维护代价.但是高抖动率时,周期t的设置比较关键,如果比较长,可能导致节点所有的邻居都失效,而没有及时恢复,从而导致节点被孤立,产生网络分割.Rhea等人[8]从带宽消耗和查找延时两方面对这两种策略进行比较实验,结果表明,无论在低抖动率还是高抖动率下,周期恢复都比反应恢复要好,而且抖动越明显,周期恢复的优势就越明显.5.2.2失效后如何恢复按照节点失效后是否使用新节点来替代失效节点,可以将策略分为固定(fixed)策略和替代(replacement)策略.固定策略是指不用新节点替代失效节点的策略,替代策略是指节点失效后,立即有新节点来替代该失效节点的策略.进一步,可以将替代策略分为包括随机替代(RandomReplacement,RR)策略、被动偏好列表(PassivePreferenceList)策略以及主动偏好列表(ActivePreferenceList)策略.随机替代策略是指当有节点失效时,从可用节点列表中随机选择一个节点来替代失效的节点.被动偏好列表策略是指将所有可用的节点按照某一属性偏好排序,当邻居表中有节点失效时,从偏好列表中选择最合适的节点来替代失效节点的策略.主动偏好列表策略是指将所有可用节点按照某一属性偏好排序,当邻居表中有节点失效时,从偏好列表中选择最合适的节点来替代失效节点,并且,在使用过程中,发现有比邻居表中更合适的节点上线,则断开已有节点,并切换到该新上线的更合适节点.Godfrey等人[14]通过一系列的实验和理论分析得出,替代策略比最好的固定策略在长时间的跟踪下有1.3~5倍的churn降低,当发生节点失效时,简单的随机替代策略的性能比其它策略的性能都要好.偏好列表策略在节点失效的情况下,相比随机替代策略,可能使系统产生更多的抖动.文章最后指出,在实际运用中,适当增加一些随机选择策略可以降低churn带来的影响.5.3副本维护策略在P2P网络中,churn可能会导致数据丢失、数据访问延迟增大等问题.为了提高数据可用性,目前大多数P2P网络都采用副本技术.但是churn同样对副本维护有影响,节点加入可能会产生更好的副①抖动率是指单位时间内,网络中节点加入和退出网络的Page11本存放位置,从而引起副本迁移;节点退出,可能使副本数目减少,从而需要重新选择副本位置,复制副本并将其放到该合适位置上.副本技术针对churn的应对策略主要体现在对副本数目的维护和对副本位置的维护两方面,下面分别对其进行阐述.5.3.1对P2P副本数目的维护策略Churn对P2P副本数目的影响主要体现在节点退出可能产生副本丢失,当系统抖动率比较高时,有可能数据的所有副本都丢失而没有及时恢复,从而产生数据丢失.为了维护数据的可用性及访问的高效性,维护一定数目的副本是必须的,当产生副本丢失时,必须及时恢复.和邻居失效恢复策略相似,对于副本数目的维护一般有立即恢复和周期恢复两种策略,在低抖动率情况下,立即恢复产生的消息开销比较小,但是当抖动率比较高时,会产生较大的网络开销.而周期恢复产生的消息开销在两种情况下变化不大,但是在高抖动率情况下,如果周期恢复设定的周期比较长而副本没有及时更新,就有可能产生所有副本均丢失从而导致数据丢失的可能,而立即恢复则不会产生这种情况.5.3.2对P2P副本位置的维护策略副本位置的选择对数据副本的稳定性具有较大的影响,当副本存放在短会话时长的节点上时,由于节点退出,导致副本缺失,因此必须重新选择副本节点,如果其仍然是短时长节点,则过一段时间可能又下线了,就会频繁进行“副本缺失———选择副本位置———副本迁移”的过程,从而产生较大的通信开销以及副本维护开销.但是如果被选中的是会话时长很长的稳定节点,则可以在较长时间内维持副本的存在,降低了副本缺失的概率,减少了网络通信开销和副本维护开销.因此,一个好的副本位置选择策略对应对churn的影响会有更好的效果.目前来讲,对于非结构化P2P网络,由于组织结构比较松散,副本一般是随机分布在网络中,因此并没有特别针对churn的相关副本存放策略的研究.对于结构化P2P网络,数据资源(或资源的索引)一般放置在节点ID离数据ID最近的节点上,称为该数据的根节点(root,Chord中称为后继successor).其副本位置选择一般有两种策略:基于多关键字的选择策略和基于邻居表的选择策略.基于多关键字的选择策略是指将每个数据资源采用同一个Hash函数和不同的Hash参数(或者采用不同的Hash函数和相同的Hash参数)计算得到s个不同的ID值,每个与ID最接近的结点存储数据的一个副本节点.该策略将根节点从1个变成了s个,这s个根节点只要有一个离开系统,就需要对副本管理信息进行更新,副本也必须迁移.假设系统中每个节点离开的概率为p,则发生这种情况的概率为1-(1-p)s,当p=0.5,s=5时,其发生的概率为96.875%.当系统抖动率比较高时,就可能频繁产生副本缺失,从而产生较高的副本维护开销.在Tapestry[31]和CAN[32]中使用的就是该策略.基于邻居表选择策略是指副本节点在根节点的邻居表中选择,将副本保存在离根节点最近的s个邻居中,并由根节点负责管理和维护副本信息.而churn同样对其有影响,当这s个邻居中有节点离开网络时,就会产生副本缺失,此时需要将离根节点最近的非副本节点选择为新的副本节点,并将副本复制到该节点.当有新节点加入并且落在ID值离根节点更近的位置时,根据协议此时其成为新的副本节点,而离根节点最远的副本节点就被挤出副本集而成为非副本节点,并需要将该副本迁移到新节点上来,同样产生了副本迁移.因此,无论是新节点加入还是已有节点退出,都对副本维护产生影响.在Chord[33]和Pastry[34]中使用的是该策略.Legtchenko等人[35]在基于邻居表选择策略的基础上提出放宽DHT(RelaxDHT)的副本维护策略.该策略主要思想是针对副本必须放在离根节点最近的s个节点这一限制进行放宽,提出只要是在根节点的邻居表中的节点,都可以存放副本.而如何在邻居表的众多节点中选择副本节点呢?文章提出了随机副本选择策略,根节点在其邻居表中随机选择s个节点用来存放数据的副本.在数据维护时,新节点加入只要不将副本节点挤出根节点的邻居表,数据就不用迁移,当有副本节点离开网络导致数据副本丢失时,根节点在其邻居表中随机选择一个非副本节点用来存放新的副本.该策略对新节点加入导致副本迁移具有一定的抑制作用,但是它不能保证随机选择的节点就一定是稳定的节点,虽然经过多次选择后,最终可能会选择到稳定的节点,但是这期间副本可能需要经过多次迁移.5.4连接生命周期维护策略连接生命周期(link-lifetime)是指网络连接从形成到断开所经历的时间.它和节点会话时长不同的地方在于,连接断开并不意味着节点下线,特别在结构化P2P网络中,当有更合适的节点到来时,节点往往主动断开并连接到新节点上,此时,原连接中的两个节点均未下线.连接生命周期和节点连通性、Page12网络路由、数据传输都有影响.连接生命周期越长,则节点连通性越强,经过此连接的网络路由就越稳定,数据传输效率也越稳定.根据节点连接的特点,可以将P2P系统分为两类模型:无切换(non-switching)模型和切换(switc-hing)模型[36].无切换模型是指连接一旦建立就一直保持连通直到失效,在连接期间不切换到其它邻居,该模型主要应用于非结构化P2P网络中.切换模型是指连接建立以后,如果出现了更合适的连接节点,则主动断开连接并切换连接到新的邻居,该模型主要应用于很多结构化P2P网络中.5.4.1非结构化P2P网络连接生命周期研究对于非结构化P2P网络,Wang等人[26]针对Gnutella网络中的连接生命周期进行测量,由于大多数的Gnutella客户端用户都和超级节点相连,因此只要监测超级节点上的连接生命周期就可以获得网络绝大多数的连接情况.通过监测发现,连接生命周期的分布服从幂率(power-law)分布,通过和节点生命周期的对比发现,连接生命周期往往比节点生命周期要短,节点经常更换它们的邻居.监测显示,16.4%的连接在8min后消失.5.4.2结构化P2P网络连接生命周期研究对于结构化P2P网络,由于一般是切换模型,为了遵循网络的协议规定,旧的邻居经常被新到来的邻居替换,而新邻居又往往具有非常短的剩余时长,从而给网络带来较高的连接抖动率.Tan等人[37]提出一种在线最长邻居选择策略(Longer-LivedNeighborSelection,LNS).它首先假设网络中节点的会话时长服从Pareto分布,在此假设下,在线时长越长的节点,其剩余时长也越长.因此,选择在线时长越长的节点,其连接生命周期也越长.为此,文章提出如下的选择策略:节点V的第i个邻居应在[V+2i,V+2i+1)之间,设此区域中所有节点组成的集合为Si,当i较小时,Si中的元素非常少,当i增加时,Si可能非常大,此时从[V+2i,V+2i+1)中随机选择最多不超过K(K为某一设定值)个节点,组成集合Si.然后从Si中选择在线时长最长的节点作为节点V的第i个邻居.该方法的优点是,在线时长最长的节点往往具有较长的稳定性,因此连接比较稳定,减小了churn对DHT的影响.Yao等人[36]在其基础上提出一种小区域(min-zone)邻居选择策略.节点V的区域是指从节点V到它的后继之间的一小部分DHT空间,由V负责.和文献[37]一样,文章假设到节点V的距离为2i~2i+1之间的节点集合为Si,它首先在Si中平均随机地选择m个节点,然后将V连接到这m个节点中所负责区域最小的那个节点上.该方法的优点是:由于负责的区域较小,新加入的节点落在该区域的概率较小,降低了新加入节点对其的影响.但是小区域方法虽然可以降低新节点加入的影响,但不能降低旧节点离开的影响,有些新加入的节点切割原有区域从而使自己成为小区域节点,当连接切换到这些节点后,这些节点可能具有较短的会话时长,没过多久就离开网络,从而产生抖动.如何降低节点离开对DHT的影响,是小区域方法需要改进的地方.5.5针对具体问题的应对策略研究由于churn对P2P网络的影响涉及到各个方面,针对不同的问题,研究人员提出了有针对性的应对策略.5.5.1查询超时设置策略Rhea等人[8]针对churn对网络查询的影响进行研究.在churn下,简单设定查询应答的超时值是不明智的,如果查询超时设定太短,查询请求可能刚被应答节点接收到、或者正在处理中、或者查询应答在返回的途中.如果查询超时设定值太长,则请求节点往往无法忍受等待太长时间而离开网络.文章针对churn对超时设定的影响,提出3种超时设定的策略:(1)固定为5s;(2)TCP-style超时:根据以往的反应时间来设定现在的超时值;(3)虚拟纵轴:根据网络中两节点距离来设定超时值.并对这3种策略进行实验比较,结果表明,当抖动率比较低时,3种策略的差别不大,但是当网络中节点的平均会话时长小于23min时,TCP-style超时设定的优势比较明显.5.5.2系统稳定性维护策略Churn对P2P系统的稳定性产生重要影响,受传统分布式系统的启发,Kuhn等人[38]提出建立一个动态的P2P系统来应对churn,该系统的基本结构是一个扁平图,图中的每一个节点(node)都是由O(d2)个终端节点(peer)组成,其中d表示node的边长,在每个node内部的peer都相互连接起来,相邻的node之间也通过一些peer连接起来.在抖动情况下,一些peer可能会下线或失效,此时node中peer的数目就会不一样,文章通过一系列的算法来选择数目比较多的node中的peer转移到数目较少的node中,来确保系统中的每个node都具有大致相同数量的peer.当peer加入系统时,也通过相应的查找和定位算法,来找到peer数目较少的node,Page13并加入到该node中.当peer的总数增加或减少到一定的阈值后,系统的阶数(order,指系统中node的数量)就相应地增加或减少1.该系统的优点是,网络中node的数目受churn的影响比较小,node之间的连接能够长期保持,从而使整个系统系统保持稳定.6总结与展望P2P应用是目前互联网上最流行的应用之一,提高P2P系统的性能具有很重要的理论价值和应用价值.但是抖动特性严重影响了P2P的性能、可靠性,制约了P2P的推广应用.抖动的研究目前还是热点问题,从目前的发展趋势看,它主要朝以下几个方向进行:(1)针对实际运行的结构化P2P网络进行研究是目前的热点之一.目前,基于Kademlia网络的P2P应用软件eMule、BitTorrent等在互联网上大量流行,拥有非常庞大的用户群体.在这些软件上进行抖动特性的研究,进而根据研究结果对这些软件进行相应的改进,既有理论价值,又和实际应用相结合.目前eMule中存在以下几点值得深入挖掘和进一步研究.提高网络连接的稳定性.这体现在两个方面:①连接的节点时常被断开.在KAD网络的连接显示中,有些已经连接上的节点,过一段时间去查看时,就显示已经断开了.②数据传输速率变化非常大.在数据传输过程中,传输速率在较短的时间内从上百KB/s减小到几KB/s,然后又增加到上百KB/s,这种过山车一样的传输速率变化是网络连接不稳定的最直观体现.如何针对KAD网络的动态性进行节点的选择,使节点的连接在一个相对较长的时间内保持稳定,同时使数据传输速率能够像迅雷一样,在一个较长时间内保持相对稳定.是目前切实存在而又亟需解决的研究热点之一.及时查找出不存在网络中的节点.在KAD网络中,有些节点虽然表面显示存在网络中,但是实际连接时,却并不存在.这些表面存在而实际失效的节点,增加了网络在资源搜索、消息路由、数据传输过程中的代价,降低了系统的性能.如何及时找出这些表面存在实际却不在网络中的节点,并通知其它节点及时删除这些节点的信息,从而避免无谓的连接,提高资源搜索、消息路由等的性能.是在KAD网络中可以进一步研究的另一个研究点.(2)在移动P2P网络中的churn特性研究是目前研究的另一个热点.随着移动互联网的兴起,移动P2P网络也热起来.和传统P2P一样,移动P2P网络中自然也具有churn特性,而且比传统网络中的更严重.由于移动设备具有位置经常变化,需要节约能耗等方面的因素,节点加入和退出网络更频繁.同时,它还有不同于传统P2P网络的自身特点,传统P2P网络中,节点位置一般比较固定,该次上线时地理位置比较近的邻居节点,下次上线时,往往还是地理位置比较近的节点,因此选择这些节点,数据的上传下载效率都比较高.而移动P2P网络却不一样,由于位置的变化,该次上线时距离较近的节点,下次可能相隔就很远了,如果像上次上线时一样,选择这些节点,那么连接的稳定性、网络传输效率可能就会很低.针对这些问题探讨其可能的解决方案是churn研究的另一个发展方向.致谢衷心感谢评审专家付出的辛勤劳动和对本文提出的中肯意见.感谢课题组的老师和同学们提出的宝贵意见,特别感谢丁博、杨永志师兄,文章的多次修改都离不开他们提出的宝贵意见!
