Page1基于预采样的模块级热分析方法1)(北京师范大学信息科学与技术学院北京100875)2)(伊利诺伊理工大学计算机科学系芝加哥美国60616-3793)摘要对片上多核系统(MPSoC)进行高效结构级热分析是进行温敏布图规划与实时功耗温度管理研究的关键.由于需要预先使用HotSpot提取布图规划中功能模块之间的相关热阻参数,最新的结构级热分析算法BloTAM在温敏布图规划中的热分析效率并不理想.对于散热条件与内核尺寸确定的温敏布图规划,该文提出了一种预采样的结构级热分析算法PS-BloTAM,它先使用HotSpot为采样模块阵列建立相关热阻预采样矩阵犛(即相关热阻库),温敏布图规划产生一个方案后,PS-BloTAM可以根据方案中模块的大小与位置直接使用犛计算出模块之间的相关热阻矩阵犚,然后使用犚计算出不同工作模式下的模块温度.采用传统的设计库思想,PS-BloTAM能够快速计算出不同布图规划方案所产生的热点温度.实验数据表明:(1)与HotSpot相比,PS-BloTAM的平均误差与最大误差分别小于1.65%和6.64%,可以获得43倍的加速效果;(2)与BloTAM相比,PS-BloTAM可以获得3.4倍的加速效果;(3)在温敏布图规划的应用中,PS-BloTAM以小于1.24%误差的代价、获得了比HotSpot快近10倍的加速效果.关键词多核片上系统;结构级;热分析;建模;布图规划1引言近年来随着集成电路的快速发展,芯片制造工艺也在不断提高,为了规避高功耗与高工作温度所带来的可靠性降低和设计复杂度增高的问题①,业界大多采用多核并行架构来提高性能,降低芯片功耗、工作温度以及设计复杂度[1-3].多核并行架构被称为MPSoC,即多核片上系统,它的热点分散,运行时每一个核都会产生一个局部热点[1].鉴于存在多个的局部热点,为了保障芯片工作在安全温度阈值内,设计者必须在芯片设计和测试阶段,在模块级对芯片的功耗分布进行不断优化[2-7],需要对MPSoC进行快速准确的结构级热分析[4-7].由于电热分析的相似性,为了获得芯片温度分布的精确解,可使用有限差分方法(FDM)对芯片进行全芯片三维热分析[8];在考虑温度对芯片功耗影响的情况下,需要进一步采用迭代方法来逼近精确解[9].目前被广泛采用的模块级热分析软件HotSpot就是基于FDM对MPSoC进行结构级热分析,并采用迭代方法对受电热耦合效应影响的MPSoC进行精确热分析[9].尽管FDM方法可以得到精确解,但其算法复杂度高,在实时功耗温度管理和布图规划领域不能满足对MPSoC进行快速热分析的需求[4,10].为了对结构级MPSoC的温度分布进行快速求解,出现了多种加速算法[1-2,5-6,10-11].基于物理距离的温度求解方法[2]具有简单、直观的优点,求解速度最快,但精度最差.文献[1,5-6]忽略模块与模块之间的侧向热阻、以简化模块的温度求解,其结果是速度快但精度差.基于学习的自回归算法[11]也以降低精度的代价来提升求解速度,用以实现在线温度分析.为了提高分析精度,最新文献[10]给出了一种高效的结构级热分析求解器LightSim,它先将侧向热阻等效为一个以距离为自变量的线性函数,再采用基于FFT快速求解的格林函数算法进行快速求解,在求解过程中,该方法还采用卷积计算技术来解决温度对漏电流功耗影响的电热耦合问题,从实验结果可以看出:LightSim对瞬态热分析的加速效果好,但对于结构级热分析主流的稳态分析的加速效果一般,只能达到3.48倍加速.为了提高结构级热分析的效率,我们提出了一种模块级热分析方法BloTAM[12],对于具有N个模块的布图规划,先采用HotSpot对N个模块进行N个热阻向量的提取,以构建一个N×N的相关热阻矩阵犚,然后根据第i种工作模式所产生的热量注入向量犘、来直接求解其模块温度分布向量犜i.采用迭代逼近的方法,BloTAM可以在温度分析中考虑温度与静态功耗之间的相互影响.由于BloTAM对任一种布图规划方案,都需要采用HotSpot进行N次热阻向量的提取,而在温敏布图规划中需要尝试大量的布图规划方案,所以BloTAM无法高效地用于温敏布图规划的热分析.为了能够在布图规划中进行结构级高效热分析,本文对已有的BloTAM[12]进行了改进,提出了一种基于预采样的模块级热分析方法PS-BloTAM,它包括如下3个算法步骤:(1)使用HotSpot为采样模块阵列建立相关热阻预采样矩阵犛={ai,j},i,j∈[0,M)(即相关热阻库),M是采样模块的个数,为了保证算法精度,M>10N;(2)温敏布图规划产生一个方案后,PS-BloTAM可以根据方案中模块的大小与位置直接使用犛计算出模块之间的相关热阻矩阵犚={Rp,q},p,q∈[0,N);(3)使用犚计算出不同工作模式下的模块温度,最终统计出芯片的最高温度作为这种布图规划的温度值.本文工作的贡献主要体现如下几点:(1)在布图规划前,采用传统的设计库思想,根据散热系统和芯片内核尺寸建立一个相关热阻库犛={ai,j},i,j∈[0,M).本文采用HotSpot构建犛,在实际应用中,也可以采用更精确的全芯片三维热分析算法来构建犛,以提高结构级热分析的精度.(2)根据相关热阻的定义,本文推导了一套完整的采样热阻矩阵犛到实用热阻矩阵犚的数学映①WilsonL,MangumS.InternationalTechnologyRoadmapPage3射方法,以获取尽可能精确的相关热阻矩阵犚.(3)实验数据表明:与HotSpot相比,PS-BloTAM的平均误差与最大误差分别小于1.65%和6.64%,可以获得43倍的加速效果;与BloTAM相比,PS-BloTAM可以获得3.4倍的加速效果.在温敏布图规划的应用中,PS-BloTAM以小于1.24%误差的代价,获得了比HotSpot快近10倍的加速效果.2研究基础2.1芯片的多核架构当前集成电路设计已经从单核架构进入到多核架构时代.目前CPU基本上采用同构处理器核进行多核设计,即每个核拥有相同面积的逻辑功能模块、相同容量的独立缓存等功能模块.同时为减少芯片总体功耗,CPU中每个核均拥有相同数目的工作模式,不同工作模式产生的功耗分布也不同.除了高功耗的全速工作模式外,每个核还可以工作在多个低速的节能工作模式.对于图1所示的Alpha21264芯片物理布局[13],HotSpot求解出的模块温度分布如图2所示,可以看出功耗密度高的逻辑模块产生了一个局部高温度区域,即产生了一个热点.因此,在芯片设计阶段,鉴于功耗密度较大的逻辑功能模块产生较高的工作温度,为了降低芯片温度,设计者一般会将功耗密度较大的逻辑功能模块布放在散热性能好的芯片边沿处,而将功耗密度较小的L2缓存布放在散热性能差的芯片中央位置.2.2芯片热分析及HotSpot模块级模型为了降低MPSoC的结构级热分析复杂度,芯片温度的计算一般采用稳态热分析方法[6-7].如图3所示,根据芯片中功能模块的位置与面积可以获得芯片的热导矩阵犌,对于输入的功耗密度分布向量犘,采用如下公式计算各模块的温度分布向量犜:在多核芯片DPTM研究中[4,14],一般是先采用等效热导模型、将芯片模块等效为一个节点,通过物理建模获得热导矩阵犌[14],然后采用式(1)计算得到芯片模块的温度分布向量犜.如图3所示,HotSpot根据内核的物理布局与芯片的热封装物理结构来构建热导矩阵犌,先将芯片散热系统分为4层:内核层、扩热层、散热片层以及热对流层;再将散热层进一步细分为物理块:(1)内核层根据芯片的几何布局被分为16块(序号为1~16),导热层相应地也被分为16块(序号为17~32);(2)扩热层分为5块,包括与内核层完全对应的第33号中心块及其4块呈梯形状的环绕块(序号为34~37);(3)散热片层按照与扩热层相似的划分方法,分为第38号中心块及其两层8块呈梯形状的环绕块(序号为39~46).如图3所示,在HotSpot结构级热分析中[15],所有模块均被视为一个节点,即将模块物理中心点的温度作为该模块的节点温度,注入模块的热量被加到该模块的中心点上,作为该节点的输入激励,以获取节点热流注入向量犘;同时将相邻两个模块中心点之间的热导作为相邻节点之间的热导,以构建节点之间的热导矩阵犌.使用式(1)就可以求解出节Page4图3HotSpot热分析等效模型[5]点温度分布向量犜,一个模块的节点温度就是该模块的温度.2.3电热耦合效应:温度对漏电流功耗的影响芯片功耗由动态功耗Pdynamic与静态功耗Pleakage两部分组成.近年来随着集成电路的快速发展,芯片的主要能耗开销大部分来源于静态功耗Pleakage.如下式所示,静态功耗随温度升高而快速增加[14]:Pleakage(T)=VddI(V0,T0)AT2e其中:Vdd和T分别是供电电压和工作温度;V0和T0则是额定供电电压和设定的工作温度,I(V0,T0)是设定条件下的工作电流值,α,β,γ,δ,μ,η,A,B为经验参数,其值如表1所示.参数α取值466.4-1224.76.286.91.191.201.143E-121.013E-14进而计算出运行时的模块功耗Pmodule与温度之间的关系式:式中的第1项为动态功耗,第2项为静态功耗.对于本文4.1节测例3所定义的16核CPU,如图4所示,在考虑温度对静态功耗影响的电热耦合效应时,必须采用迭代方法逼近精确解,随着迭代的进行,静态功耗和芯片温度均有明显的增加,这表明在热分析中必须考虑温度对静态功耗影响,否则其分析结果与实际结果相比将会产生较大误差.同时,温度分析算法在考虑电热耦合情况下需要7次迭代才能得到最终的精确解,与不考虑电热耦合效应的算法相比,考虑电热耦合效应将使热分析算法的复杂度增大7倍,因此在考虑电热耦合效应的情况下,降低热分析算法的复杂度就具有重要的研究意义.图4考虑电热耦合效应的多核芯片最高温度2.4BloTAM:基于实用热阻矩阵犚的结构级热分析的解析求解算法为了有效地计算不同功耗模式下的模块温度分布犜,文献[12]提出基于等效电路的BloTAM方法,即根据式(1),可知犜=犌-1犘=犚犘,因此可以通Page5过提取实用热导矩阵犚=犌-1来解析求解犜.文献[12]先采用HotSpot对N个模块所进行的N次热阻向量提取,以构建一个相关热阻矩阵犚={Tq},q∈[0,N),对于给定位置和面积的N模块版图,单位热量注入模块p,通过HotSpot计算得到所有模块的温度升高向量犜={Tq},q∈[0,N),其中模块q的温度升高Tq=Rp,q.当注入对应于一种工作模式的功耗分布向量犘时,BloTAM通过式(4)来解析计算出各个模块相应的升高温度.如图5所示,BloTAM先使用HotSpot构建相关热阻矩阵犚,再调用如图6所示的R2T子程序,以使用迭代方法来解决电热耦合效应的非线性影响.在每次迭代中,BloTAM先使用式(4)来计算犜,然后再使用式(2)和式(3)来刷新功耗密度向量犘,累加所有模块的功耗来获得芯片功耗Pchip,当迭代后的Pchip变化低于阈值ε,就结束迭代,输出收敛后的犜和Pchip.3基于相关热阻预提取的模块级热分析方法PS-BloTAM3.1PS-BloTAM方法PS-BloTAM采用预提取方法来构建热阻矩阵犚的预采样热阻矩阵犛.如图7(a)所示,本文使用边长为h的正方形采样质元对芯片内核进行离散化,可以得到M=nx×ny个采样质元(或质点),其中nx和ny是内核离散化后在X和Y轴的质元数目.使用HotSpot对M个模块所进行的M次热阻提取,就可以获得预采样热阻矩阵犛={ai,j},i,j∈[0,M).本文将犛={ai,j},i,j∈[0,M)简称为采样热阻矩阵,是采样质元i与采样质元j之间的互阻,是采样质元i的自阻.本文工作根据相关热阻的定义来推导采样热阻矩阵犛到实用热阻矩阵犚的映射关系.为了求取模块p与模块q之间的相关热阻Rp,q,必须将单位激励加到模块p上,来计算模块q中心点的温度升高Tp,q,Tp,q就是Rp,q.为此,必须先将单位激励分配给图7(b)所示的模块p所包含的采样单元上;然后基于热阻矩阵犛={ai,j},i,j∈[0,M),使用这些受到激励的采样单元去计算模块q中心点的温度升高,如果模块q中心点不在采样单元的中心,如图7(c)所示,就需要计算模块q中心点的4个相邻采样单元的温度,再用4个相邻采样单元的温度进行插值来获得模块q中心点的温度升高Tp,q.本文3.2节重点推导了采样热阻矩阵犛到实用热阻矩阵犚的映射关系.基于求出的实用热阻矩阵犚,PS-BloTAM使用BloTAM算法来计算不同工作模式下的模块温度.设一种工作模式下的热量注入向量为犚={Tq},q∈[0,N),可以采用下式计算出模块温度向量犜={Tp},p∈[0,N)基于获得的模块温度向量犜,我们可以采用式(2)和(3)对热量注入向量犘进行更新,通过迭代计算Page6获得考虑电热耦合效应的模块温度向量精确解.3.2采样热阻矩阵犛到实用热阻矩阵犚的映射(1)模块p的单位热量均匀注入.如图7(b)所示,模块p含有内部、边、角三类采样质元,对于左下角和右上角坐标分别为(x1,p,y1,p)和(x2,p,y2,p)的模块p,采用边长为h正方形对其进行采样离散化,则其左下角与右上角坐标分别为(X1,p=x1,p/h,Y1,p=y1,p/h)和(X2,p=x2,p/h,Y2,p=y2,p/h).为了计算模块p的内部质元数目n1,p,我们定义其下/上/左/右边界分别为Y^floor(Y2,p),X^则内部采样质元数n1,p=(XY^1,p).同时为了计算模块p的边质元和角质元数目n2,p和n3,p,本文定义模块p在下/上/左/右边采样质元的实际面积占比分别为rdown=Y^^Y2,p-Y块p的边采样质元数n2,p=(Xceil(rdown)]+(Y角采样质元数n3,p=[ceil(rup)+ceil(rdown)]×[ceil(rleft)+ceil(rright)].因此,模块p涵盖的采样质元的数目np=n1,p+n2,p+n3,p.由于模块p的面积离散值为Ap=x1,p)×(y2,p-y1,p),所以模块p在采样质元上产生的平均激励值bp为bp=对于模块p所占的质元而言,其内部质元的激励值为bp,上边/下边/左边/右边采样质元的激励值分别为rupbp,rdownbp,rleftbp,rrightbp,右上角/右下角/左上角/左下角采样质元的激励值分别为ruprrightbp,rdownrrightbp,ruprleftbp,rdownrleftbp.(2)确定模块中心采样空间的投影及其对其产生影响的相邻质点.对于左下角物理坐标为(x,y)的采样质元,它的中心点物理坐标为(x+0.5h,y+0.5h).因此,模块p中心点的物理坐标为(xc,p,yc,p)(=y1,p+y2,p)2xc,p-0.5,Yc,p=h^c,p=floor(Yc,p),X^Y则对模块p中心点产生影响的左下、右下、左上以及右上邻点分别为点(X^c,p,Y^(X下面分4种情况来分析对模块中心点温度升高Tp产生影响的邻点数目及其影响系数:第1种情况.如图7(c)所示,如果Y^c,p≠X^X点到左下、右下、左上、右上邻点的距离分别为Dld=(Xc,p-XDlu=(Xc,p-XDrd=(Xc,p-X^Dru=(Xc,p-X^设Δ=上邻点对模块p中心点的影响系数分别为1/DldCld=第2种情况.如果Y块p中心点只有左右两个邻点(XYc,p).模块p中心点到左、右两个邻点的距离分别为Dlt=Xc,p-X个邻点对模块p中心点的影响系数分别为Clt=第3种情况.如果Y块p中心点有下两个邻点(Xc,p,Y^模块p中心点到上、下两个邻点的距离分别为Dup=Y^c,p-Yc,p和Ddown=Yc,p-Y对模块p中心点的影响系数分别为Cup=第4种情况.如果Y块p中心点(Xc,p,Yc,p)正好是一个采样质元的中心点,该采样质元中心点对模块p中心点的影响系数为1.(3)模块空间内模块p对模块q的相关热阻为犚p,q.对模块p,它的热量激励共覆盖np个采样质元,对于模块q中心点的影响点j,它对点j温度升高Tp,j的贡献为Page7式中:AIp(i)是模块p所包含的第i个采样质元的地址;aA块p所包含的第i个采样质元的激励值.对模块q中心点的所有邻点温度升高Tp,j进行插值,可以获得其温度升高Tp,q,即模块p对模块q之间的相关热阻为Rp,qRp,q=Tp,q=∑式中:AIq(j)为模块q中心点ncq个邻点中的第j个邻点的地址;Cq(j)为模块q中心点的第j个邻点对其的影响系数.3.3PS-BloTAM算法流程如图8所示,根据PS-BloTAM的工作原理,本文设计了它的算法流程,主要包括如下3个步骤:(1)采样热阻矩阵犛的预提取模块.输入芯片内核的设计尺寸,先使用边长为h的正方形采样质元对内核进行离散,获得M=nx×ny个采样质元(或质点),其中nx和ny是内核离散化后在X和Y轴的质元数目;再使用HotSpot对M个模块所进行的M次相关热阻向量提取,获得预采样热阻矩阵犛=图8PS-BloTAM的算法流程4实验数据及其分析4.1实验平台与测例说明为了验证PS-BloTAM方法的精度与效率,文本构建了如下的5个测例,并选用热分析软件HotSpot{ai,j},i,j∈[0,M)作为相关热阻采样空间,ai,j是采样质元i与采样质元j之间的互阻,ai,i是采样质元i的自阻.(2)根据犛求取实用热阻矩阵犚的映射模块.将采样热阻矩阵犛作为参数库输入.输入布局方案中模块的面积与位置,先根据模块的角坐标来确定每个模块所占的所有质元序号及其占比,再根据模块的中心坐标来确定影响其温度的相邻质元序号及其影响系数,然后根据犛参数库所提供的质元间相关热阻ai,j,来计算任意模块p对所有模块中心点的相邻质元所产生的温度升高Tp,j,用任意模块q中心点的相邻质元温度升高Tp,j来计算模块p在模块q中心点上产生的温度升高Tp,q,即模块p和模块q之间的相关热阻Rp,q.最后所有的Rp,q构成了实用空间犚,进行输出.(3)根据犚计算芯片温度犜chip模块.将实用空间犚作为参数库输入.输入不同工作模式所对应的热量注入向量犘序列,使用犘和犚计算模块温度Tq,并将模块温度的最高值作为芯片温度Tchip,输出Tchip序列中的最高值Tmax,来评价布图设计方案的热性能.作为验证基准来进行测试数据的对比分析.本文的硬件平台为Windows7系统的PC机,配有Intel公司4核CPU,内存为16GRAM.测例1.如图9(a)所示,本文基于图1所示的Alpha21264架构[13]生成了一个单核处理器测例,包括逻辑模块core和3个高速缓存模块L2_Right,Page8L2_Left,L2,各模块的面积与功耗赋值如表2所示.测例2.如图9(b)所示,本文基于Alpha21264架构[13]生成了一个4核处理器测例.为了使测例2与测例1具有相同的面积与芯片功耗,我们将测例2中所有模块的面积与功耗缩小为表2所示值的1/4.为了降低局部热点的温度,4核处理器的4个逻辑模块被布放在散热条件好的4个角区域,同时将功耗密度低的4个L2模块放到散热条件差的芯片中央.表2Alpha21264架构中的各功能模块的参数设置功能模块CoreL2_leftL2_right图9基于Alpha21264架构的3个测例的版图测例3.如图9(c)所示,本文基于Alpha21264架构[13]生成了一个16核处理器测例.为了使测例3与测例1具有相同的面积与芯片功耗,我们将测例3中所有模块的面积与功耗缩小为表2所示值的1/16.为了降低局部热点的温度,16个逻辑模块被分为4组,布放在散热条件好的4个角区域.测例4.采用8核IntelSandyBridge-E架构芯片①,其长/宽分别为20.9mm、20.8mm,面积为435mm2.本文结构布局是按照其实际布局精简所得,并根据其芯片结构对各模块的面积与功耗进行设定.测例5.为了对异构多核芯片进行测试,本文采用Intel公司2013年推出的第4代酷睿处理器i7-4790②,它采用面向CPU+GPU协同计算的haswell架构,包括4个CPU核、1个GPU处理器、4块2MB所构成的8MB容量L3Cache和内存控制器与PCI总线控制器模块,芯片的内核面积为177mm2,长度和宽度分别为21.8mm、8.8mm,呈长方形.本文结构布局是按照其实际布局精简所得,并根据其结构对各模块的面积与功耗进行设定.4.2本文方法的精度验证本文PS-BloTAM通过预采相关热阻矩阵犛来计算实际相关热阻矩阵犚,尽管是通过数学推导获得的结果,但由于在推导过程中进行了近似,所以必然会引入一定量的误差.为了考查犛→犚过程中引入的误差量,本文采用HotSpot提取测例1的相关热阻矩阵作为基准,以计算出PS-BloTAM计算出的相关热阻的相对偏差值,设RH出的模块p和模块q之间的相关热阻,RS用犛计算出的值,RSp,q,如表3所示,测例1中所有模块之间的相关热RH阻的相对误差均小于4.73%,这表明本文犛→犚过程中引入的误差量基本上可以接受.模块CoreL2_leftL2L2_right按照表3中的参数设定,本文产生1000个PowerMap(功耗密度分布向量),分别使用经典的HotSpot算法、文献[12]给出的BloTAM算法和本文提出的PS-BloTAM算法来求解各测例芯片的模块温度分布向量,其中这个核的局部热点温度是它的Core模块温度.设Tambient是环境温度,THotSpot是HotSpot的测值,T是BloTAM和PS-BloTAM计算出的温度值,本文使用δT=算BloTAM和PS-BloTAM算法所计算出来的模块温度的相对偏差,使用ET=|δT|来计算这两种方法的相对温度误差ET.由图10所示,对测例1各个模块而言,PS-BloTAM算法所计算出来的模块温度误差最大不超过2.8%,均在误差的允许范围内,但core模块的误图10PS-BloTAM所计算出的测例1各功能①②Page9差大于BloTAM方法的误差,这是因为core模块的功耗密度很大,其产生的电热耦合效应偏高,受电热耦合效应的影响较小,而PS-BloTAM算法是基于预提取热阻矩阵犛来解析计算出实用热阻矩阵犚,所以与BloTAM相比,PS-BloTAM的core模块偏差较大,但其精度仍满足要求.如表4所示,与BloTAM算法相比,本文PS-BloTAM算法的平均误差(1.65%)均小于对比算法(1.98%),但最大误差(<6.64%)均大于对比算法(<4.864%),这表明本文通过预采样相关热阻矩阵犛来计算实际相关热阻矩阵犚的方法具有很高的精度,体现了犛→犚的理论推导是准确的,引入了较小的误差.由于最大误差小于6.7%,对于一种结构级热分析算法而言,PS-BloTAM可以提供满意的热分析精度.分析算法测例1测例2测例3测例4测例54.3本文方法的速度测试因为PS-BloTAM算法时间复杂度很低,我们只采用结构较为复杂的测例3对PS-BloTAM算法的热分析速度进行验证.在速度方面,由于BloTAM算法要采用HotSpot对相关热阻进行提取,其中芯片共有中64个模块,所以在BloTAM算法中,HotSpot进行参数抽取时需要64次,所消耗的时间被称为建模时间RTModel,在相同系统中,测得RTModel=2.122s.通过提取出的相关热阻矩阵犚以及1000个输入向量犘,BloTAM方法采用式(2)~(3)计算芯片温度,所消耗的时间被称为热分析时间RTanalysis.总耗时RTtotal=RTModel+RTanalysis,最后得出总耗时RTtotal为2.617s.PS-BloTAM算法由于采用的是采样矩阵犛预提取方法,故只需要考虑PS-BloTAM算法热分析时间和犛→犚热阻矩阵映射时间,时间为0.277s,即RTModel=0.277s,热分析时间RTanalysis为0.492s,总耗时RTtotal=0.769s.如表5所示,可以得到:与HotSpot对比,本文所提出的PS-BloTAM算法既满足热分析中所要求的精度要求,也能提供令人满意的算法加速效果,PS-BloTAM算法耗时的加速比Xtotal最大为43倍,而BloTAM算法仅为13倍,PS-BloTAM算法效率是BloTAM算法的3.4倍;与BloTAM算法相比,PS-BloTAM建模时间加速比XModel可以达到7.66倍,很大程度上减少了建模时间.表51000次热分析的各个算法耗时Runtime(s)及其分析算法RTtotalXtotalRTModelXModelRTanalysisXanalysisHotSpot33.15BASENBBloTAM2.617132.122BASE0.495PS-BloTAM0.769430.2777.660.492如图11所示,由于BloTAM算法需要进行64次HotSpot模拟对犚进行建模,所以随着分析次数从1000次降低到100次,BloTAM算法所能提供的加速比从13倍降低到与HotSpot近似的速度.相反,由于PS-BloTAM算法将建模时间降低到0.277s,仅相当于8.4次HotSpot模拟时间,所以随着分析次数从1000次降低到100次,PS-BloTAM算法所能提供的加速比从43倍降低到10倍.这表明:在布局规划过程中,通过压缩热阻矩阵犚的建模时间,可以有效地改进热分析的效率,即使对工作模式较少的布局规划,也可以获得满意的加速效果.图11BloTAM与PS-BloTAM算法加速对比图由于都是采用相同的结构级热分析软件Hotspot5.01作为比较标准,因此可以将文献[12]提出的BloTAM、文献[10]所提供的LightSim和本文提出的PS-BloTAM算法进行加速比和最大误差比较.为此,本文将表4和表5中列出的PS-BloTAM与BloTAM的最大误差与加速倍数提出来,与文献[10]所给出的LightSim相关参数放到一起进行比较.如表6所示,对于布图规划中所用到的稳态热分析而言,本文提出的PS-BloTAM可以获得43倍的加速,明显好于BloTAM的13倍和LightSim的3.48倍加速效果,但由于在空间热阻矩阵犛向实用Page10热阻矩阵犚的映射过程中引入了少量误差,PS-BloTAM的6.64%最大误差要明显大于BloTAM的4.86%和LightSim的1.80%.但正如文献[10]所说的那样,结构级热分析算法更多地关注算法的加速效果,而对算法的精度损失不作过多的要求,本文PS-BloTAM算法的6.64%最大误差是基本上可以满足结构级热分析对精度的要求,而它提供的43X加速则很好地满足结构级热分析对速度的需求.总而言之,本文提出的PS-BloTAM算法是一种全解析的热分析算法,具有理论性强、兼容基于参数库的传统设计方法、并提供了最好的加速效果,可以说:本文提出的PS-BloTAM算法给结构级稳态热分析的研究画上了句号.LightSim[10]BloTAM[12]PS-BloTAM4.4PS-BloTAM算法在温敏布图规划中的应用为了综合验证PS-BloTAM算法在温敏布图规划的应用效果,本文采用模拟褪火算法对测例3进行温敏布图规划,具体结果如表7所示.如图9(c)所示,在实验中,对于四角的4个核,将产生最高功耗密度的逻辑模块分别固定在芯片的4角.因此,在布图规划中,需要对剩余的12个核进行模块位置的优化,如图12所示,每个核的模块位置有4种选项,由于需要对412个布局方案进行穷举才能找到全局最优的布图规划方案,所以本文采用模拟褪火算法来搜寻局部最优解,获取芯片工作温度最低值的近似解.以下是本文采用的模拟褪火算法的自然语言表述:1.输入布局信息.2.随机产生一个布局方案,采用HotSpot或PS-BloTAM算法计算模块温度,并将模块温度的最高值作为芯片温度Tchip;设改进失败次数为0,改进失败次数阈值为30.3.随机从12个核中找出一个核,试探该核的其他3种布局,采用HotSpot或PS-BloTAM算法计算Tchip,取Tchip最低的布局作为优选方案.4.如果试探该核后所获得的Tchip确有降低,则将改进失败次数置0,返回步骤3;否则将改进失败次数增1.5.如果改进失败次数小于改进失败次数阈值,返回步骤3.6.输出最佳的布图规划方案、芯片温度Tchip和优化时间.其中在模拟褪火算法的步骤2和步骤3,对于一种布局方案,需要针对100种工作模式所产生的100个功耗密度分布图(powermap),先使用HotSpot或PS-BloTAM算法计算每种工作模式的Tchip,再从100种工作模式所产生的Tchip中统计出最大值、作为这个布局方案所对应的芯片温度Tchip.如表7所示,本文进行了5次模拟褪火,用于搜寻最佳的布局结果,将芯片峰值温度Tchip降得尽可能地低.从Tchip的优化效果可以看出,与HotSpot模拟算法相比,本文的PS-BloTAM算法取得近似的优化效果,绝对误差小于0.49,相对误差小于1.24%,这表明该算法具有足够高的模拟精度.从运行时间可以看出,与HotSpot模拟算法相比,本文的PS-BloTAM算法取得了7.28~11.93倍的加速,这表明本文算法提供了近10倍的加速,加速效果令人满意.因此,PS-BloTAM算法能够满足温敏布图规划对结构级温度分析精度与速度的要求.褪火序号123455结论本文提出了一种预采样的结构级热分析算法PS-BloTAM,使用HotSpot为采样模块阵列建立相关热阻库,根据布图规划方案中模块的大小与位置完成采样空间热阻矩阵犛向实用热阻矩阵犚的映射,进而使用犚来快速计算出不同工作模式下的模块温度.与HotSpot对比,本文所提出的PS-BloTAM算法既满足热分析中所要求的精度要求,也能提供令人满意的算法加速效果,PS-BloTAM算法耗时的加速比Xtotal最大为43倍;而与BloTAM算法相比,PS-BloTAM由于是采用预提取方法,然后将根据方案中模块的大小与位置直接使用犛计算出模块之间的相关热阻矩阵犚,芯片布局变化后无需再次提取芯片模块的相关热阻,在建模时间上Page11PS-BloTAM获得7.66倍加速效果,在算法整体运行时间上PS-BloTAM可以获得3.4倍加速效果.从温敏布图规划的应用实验可以看出:在小于1.24%误差的前提下,PS-BloTAM算法可以为布图规划设计方案快速计算出模块温度,获得近10倍的加速效果.
