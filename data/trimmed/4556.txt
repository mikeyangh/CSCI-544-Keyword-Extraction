Page1无线传感器网络应用简单Reed-Solomon编码的低能耗和低时延可靠数据收集方案朱艺华徐骥田贤忠池凯凯(浙江工业大学计算机科学与技术学院杭州310023)摘要无线传感器网络的数据链路层和物理层通常采用低功率低数据率的IEEE802.15.4标准,其节点由能量极为有限的电池供电,且无线链路易丢包,而且在无线传感器网络的一些应用中,需要在给定的时间内将数据汇集到基站,因此,设计一种节能、低时延且可靠的数据收集方案对无线传感器网络的应用极为重要.文中利用Reed-Solomon(RS)编码以提高数据传递可靠性,致力于将能耗、数据收集率、数据收集时延、数据包编码方案整合为一个优化问题;给出了简单RS码字即S-RS码字集合,证明了该码字集合中任何n个码字是线性独立的;详细叙述了基于S-RS码字集合以及段内编码和段间编码的数据收集策略即S-RS数据收集策略的具体步骤;利用概率论推导出了S-RS数据收集策略的总能耗、数据收集率和时延公式,并依此建立了时延和数据收集率约束下的能耗最小化这一优化问题.该优化问题可行解空间很小,可以通过穷举法获得最优解.通过求解该优化问题,节点能够设置最优的数据包编码和重传参数,使得在时延和数据收集率约束下能耗达到最小.数值分析与仿真表明,S-RS数据收集策略能够以较低的能耗达到较高数据收集率和较低时延要求.此外,可以利用导出的总能耗、数据收集率和时延,通过优化S-RS数据收集策略的参数,最大化数据收集率,最小化时延,也可以同时对总能耗、数据收集率和时延中的两者或三者进行优化.关键词无线传感器网络;数据收集;节能;可靠性;时延;Reed-Solomon编码;物联网1引言无线传感器网络(WirelessSensorNetwork,WSN)已经被广泛地应用于环境监测、医疗保健、交通运输等领域.IEEE802.15.4标准[1]定义了低功耗低速率无线网络的介质访问层(MediumAccessControl,MAC)和物理层(Physical,PHY).当代WSN在MAC层和PHY层均采用上述标准,因而其无线链路传递数据包具有不可靠和易丢失等特点.由于低功耗无线链路的无线电覆盖范围小,数据包需要经过多跳传输才能从一个传感器节点到达sink节点,这会导致端到端的数据包传递成功率非常低.因此,需要设计提高数据包传递成功率的切实可行的方案.在WSN中,节点通常是由能量非常有限的电池供电.因此,研究如何使节点能够在保证可用性的情况下尽量降低能量消耗,对WSN长时间工作显得尤为必要.此外,在WSN的一些应用尤其是实时应用中,传感器节点捕获的数据需要在短时间内送达sink节点,因此,降低WSN中数据包收集时延也是非常重要的.在提高传递数据包可靠性方面,虽然MAC层的重传与确认机制有助于提高可靠性,但是它存在着以下弱点:(1)在MAC层设置了数据帧的最大传输次数,这会导致发送次数达到最大次数但依然发送失败的帧被MAC层丢弃;(2)已有研究表明[2],在节点移动的网络中,重传机制开销特别大,而且在能量受限的WSN中这种方法几乎无法实现数据包可靠传递.鉴于此,本文借助于编码技术来提高数据包传递可靠性,将来自网络层的数据包进行编码,并结合数据链路层的重传和确认机制,以能耗、数据收集率、时延等要求为目标来确定编码方案所采用的参数值.诚然,编码方案需要借助一些冗余数据.增大冗余数据,可以增强数据包传递可靠性,但冗余数据包的传输会带来额外的能量消耗,也会增加原数据包的传递时延.反之,如果减少冗余数据,则会削弱数据包传递可靠性.因此,在设计一个低能耗、低时延且可靠性高的数据包传输协议时,需要在能耗、时延和可靠性三者之间作出权衡.事实上,在基于IEEE802.15.4标准的WSN中,节点的处理能力、无线电覆盖范围、可以通信的数据包长度、内存空间等均为捉襟见肘.例如,IEEE802.15.4标准是针对低数据率、低功耗的无线个域网络,其物理层可以携带的来自数据链路层数据帧的最大长度只有127字节[1];当MAC层使用安全头部时,数据链路层能够携带的来自网络层数据长度只剩下81字节[3].又如,CrossBow公司生产的TelosB传感器节点,只有10kB内存,且兼容IEEE802.15.4标准的射频收发器的通信距离仅为数十米.遗憾的是,绝大多数已有研究成果未能充分考虑WSN节点的上述资源瓶颈,因而难以应用于实践.我们注意到Reed-Solomon编码[4]具有以下显著的优点:(1)接收方一旦收到固定个数的编码包,就能解码得到原始信息;(2)传输开销小,编码方式Page3简单.这些特点易于在资源极度受限的WSN上实现.虽然在编码、数据包传递可靠性、数据收集时延、能耗等研究领域已有大量成果,但这些成果存在着缺陷,未能将编码、可靠传递、时延、能耗这四者综合起来统筹优化.因此,需要一个将四者作为一个整体来统筹优化的解决方案.此乃本文的主要动机所在.本文应用Reed-Solomon码进行数据包的可靠传输,主要贡献如下:(1)详细描述了利用简单Reed-Solomon(SimpleReed-Solomon,S-RS)码以及段内编码或段间编码的“S-RS数据收集策略”;证明了S-RS码中任意n个码字(CodeWord)均为线性独立;推导了S-RS数据收集策略在一个数据收集周期内的总能耗、数据收集率和数据收集时延.(2)设计了数据收集率和数据收集时延约束下能耗最小化这一优化问题,通过优化S-RS码的冗余度、每个编码包携带的码字个数和IEEE802.15.4标准MAC层数据包的重传次数这3个参数,可以达到在事先给定的数据收集率和数据收集时延要求下,通过最优编码方案,使整个网络数据收集产生的能耗最小这一目标.(3)S-RS数据收集策略所采用的S-RS码具有属性:其前几个码字为原始信息符(OriginalInfor-mationSymbol,OIS),使接收方不用解码就能获得OIS,当接收方收到的码字不足以解码出全部OIS时仍可以得到部分数据.段内编码和段间编码策略在每个编码包中携带多个S-RS码字,以此减少编码包的发送个数,提高MAC帧的利用率,从而降低能耗.本文第2节分析相关研究成果;第3节介绍Reed-Solomon编码和S-RS码;第4节叙述S-RS码的段内编码和段间编码方案以及S-RS数据收集策略的具体步骤;第5节推导使用段间编码的S-RS数据收集策略的能耗、数据收集率和数据收集时延,给出时延、数据收集率约束下的能耗最小化这一优化问题;第6节给出在实际的传感器节点中进行实验的结果;第7节通过仿真分析S-RS数据收集策略的性能;第8节总结本文.2相关研究在提高数据包传递可靠性方面,常见的方法有:在数据链路层采用重传和确认机制[5];在网络层采用多路径路由[6-7]、机会路由[8]等.在无线网络中利用编码技术来实现数据包的可靠传递方案如雨后春笋不断涌现,所用的编码有LT码(LubyTransfer)[9]、Tornado码[10]、Reed-Solomon码[2,4]等.文献[11]研究了在使用多输入多输出(Multiple-InputMultiple-Output,MIMO)情况下如何最小化能耗的问题.文献[12]提出了RMER和RMECR两种路由,其中RMER找到一条端到端的总能耗最小的路径,而RMECR则选择满足可靠性要求下的能耗最小路径.文献[13]研究了如何在低占空比WSN中使用网络编码来降低瓶颈区域的能耗以此延长网络生存时间这一问题.按照数据相关性,传感数据的收集方案可以分类为数据可融合的收集[14-16]和数据不可融合的收集[17-18].在数据可融合的收集应用中,可以把多个节点所感知的数据采用诸如最大值、平均值等多种方法进行整合,以此降低网络中节点转发数据包的数量,进而降低带宽的开销和节点的能耗.例如,MERIG协议[14]使用数据融合技术,自适应地传输冗余数据包,使得在保证可靠性的前提下能耗得以最小化.然而,在WSN的大量应用中,传感器节点所捕获到的数据相关性甚微,甚至是不相关的,因此,这类数据是不可融合的.对于此类应用,节点不能对数据进行融合,而需要原封不动地把来自其他节点的数据转发给邻居节点.在数据不能融合的WSN节能问题研究领域,也取得了一些成果.例如,考虑到流过离sink节点越近的节点的数据量越大,这些节点会越早因能量耗竭而死亡,MITT[17]根据节点剩余能量构造一棵最小生成树使得瓶颈节点的子节点数最小,从而平衡sink附近节点的能耗,以最大化网络生存时间.文献[19]提出了能耗经济的延长网络生存时间的算法ERAPL,通过构造数据收集序列(DataGatheringSequence,DGS)让每个节点按照比例将数据发送给邻居节点,以此达到节能的目的.文献[20]提出了一种能量高效的基于线性回归的无线传感器网络分布式数据采集优化策略,以降低网络的总能耗.文献[21]将无线传感器网络的传感数据以树的形式收集到根.文献[22]提出了一种负载均衡感知的无线传感器网络容错分簇算法.考虑到当代传感器网络节点可以是采用Wi-Fi使能的传感器(Wi-Fienabledsensor)[23]节点,本文作者改进了基于定时器的电源管理策略(Timer-basedPowerManagement,TPM)[24],提出了增强的基于定时器电源管理策略E-TPM[25],使得传感器节点能够经济地消耗能量.此外,我们利用网络编码技Page4术,降低WSN的路由能耗[26];利用非前缀信源编码技术,降低纳米传感器网络发送方的能耗[27].在利用编码提高传输可靠性方面,可以应用LT码[9]、Raptor码[28]及其他随机系数的编码.但LT码[9]、Raptor码[28]以及采用随机系数的编码存在着一些不足之处,如接收方一旦接收到一个数据包,就尝试解码,而且接收方可能因接收到的数据包的系数矩阵不满秩而无法解码.目前,在应用Reed-Solomon编码于无线传感器网络可靠数据传输领域,也有一些研究成果.文献[29]提出一种应用于WSN的Reed-Solomon码解码器算法以降低能耗;在有多个sink节点的WSN应用中;文献[30]利用Reed-Solomon码将数据包分片编码并在多条路径上把编码包传递给sink节点;文献[31]提出了Reed-Solomon码的硬件实现方法;文献[32]提出了可靠数据传递方案(ReliableDataTransferScheme,RDTS),节点采用Reed-Solomon编码逐跳将数据传递到信宿;文献[33]提出了利用Reed-Solomon编码的可靠数据收集方案,给出了数据收集率约束下的能耗最小化问题.本文也采用Reed-Solomon码提高数据传递的可靠性,本文策略与之前采用Reed-Solomon码的数据收集策略的明显不同之处在于:将数据包编码方案、能耗、数据收集率、数据收集时延整合为一个优化问题,对所涉及的指标进行统筹优化.3一种简单的Reed-Solomon码Reed-Solomon码是基于符号的编码[4].用GF(q)={0,1,α,α2,…,αq-2}表示伽罗华有限域,其中q2且是整数,α是一个素数,满足αq-1=1和αi≠αj(1i<j<q-1).在有限域GF(q)中,对于给定的n个(n<q)信息符(即OIS):m0,m1,…,mn-1,构建如下n-1阶多项式[4]:利用式(1),可以得到一个q维Reed-Solomon码[4]:(f(0),f(1),f(α),f(α2),…,f(αq-2)).这个Reed-Solomon码的q个码字有一个特性:任意n个码字的信息符系数向量是线性无关的.例如,对于前n个码字f(0),f(1),f(α),f(α2),…,f(αn-2),从式(1)可知,这些码字对应的信息符m0,m1,…,mn-1的系数向量依次是:(1,0,…,0),(1,1,…,1),(1,α,α2,…,αn-1),(1,α2,α4,…,α2(n-1)),…,(1,αn-2,α2(n-2),…,α成了一个其值不为0的范德蒙行列式,因此,它们是线性无关的.Reed-Solomon码的上述性质说明:接收方一旦收到Reed-Solomon码中任意n个码字,就可以通过解一个满秩的线性方程组得到原来的n个信息符.这是因为在q维Reed-Solomon码(f(0),f(1),f(α),f(α2),…,f(αq-2))中所选取的n个码字中,原来的n个信息符m0,m1,…,mn-1的系数行列式是一个n阶范得蒙行列式,其值不为0.于是,在WSN的数据包传递过程中,我们可以选择一个合适的q,将原始n个信息符m0,m1,…,mn-1编码生成一个q维Reed-Solomon码,并将编码之后的数据包发送给下一个节点.这样,接收方只要收到其中任意n个编码包就可以恢复出原始n个信息符.与文献[33]一样,我们引入向量:狏i=(1,αi,α2i,α3i,…,α个元素的行向量犲i,它满足条件:第i个元素为1,其余n-1个元素均为0,即犲i=(0,…,烉烇烋i=1,2,…,n.显然,犲1,犲2,…,犲n构成一个n×n单位矩阵.然后,选取自然数M,使它满足n<Mq-1,并构建M×n矩阵如下[33]:犙M×n=(犲1,犲2,…,犲n,狏1,狏2,…,狏M-n)T1烄=1α1α21α3烆1α于是,在本文的数据收集策略中,针对n个信息符m0,m1,…,mn-1,利用矩阵犙M×n进行编码,生成M维向量犆M×1=(c1,c2,…,cM)T如下[33]:其中,第i个元素为ci=Page5以下称M维向量犆M×1为“S-RS码”.同时,称向量犆M×1的M个元素ci(i=1,2,…,M)为码字.根据下述定理1,接收方只要收到S-RS码的M个码字中的任意n个,就可以解码得出原来的n个信息符m0,m1,…,mn-1.定理1.在n+q-2个向量组成的集合W={犲1,犲2,…,犲n,狏1,狏2,…,狏q-2}中,任意n个向量均为线性独立[33].证明.将集合W拆分为两个集合U={犲1,犲2,…,犲n}和V={狏1,狏2,…,狏q-2}.下面分3种情况证明:(1)取自集合W的n个向量均来自集合U.这时,这些向量线性独立,因为它们组成一个满秩(即秩为n)的单位矩阵,其行列式的值不为0.(2)取自集合W的n个向量均来自集合V.这时,这些向量也是线性独立,这是因为在RS码中原来n个信息符的系数矩阵行列式构成一个范德蒙行列式,其值不为0.(3)取自集合W的n个向量分别来自集合U和V.如果U中只有一个向量犲1被选中,且V中向量狏1,狏2,…,狏n-1被选中,则这些向量组成一个满秩的矩阵,其证明过程如下所述.这些向量组成以下行列式:101αα2…αn-11α2(α2)2…(α2)n-11αn-1(αn-1)2…(αn-1)n-1α1+2+3+…+(n-1)n(n-1)=α2∏1i<jn-1因此,所选取出来的n个向量犲1,狏1,狏2,…,狏n-1线性独立.同理可证:对于U中其他一个向量犲i被选中(i=2,3,…,n)这种情况,所取出的n个向量是线性独立的.此外,在U中有多个向量被选中的情形,与推导式(5)的过程类似,可以得到,所选出的n个向量构成满秩矩阵.于是定理1获得证明.4基于S-RS编码的数据收集策略我们把利用S-RS码对源信息符OIS进行编码再把编码包发送给接收方的数据收集策略称为“S-RS数据收集策略”.S-RS数据收集策略应用于基于树的数据收集场合,树的构建可以采用诸如CTP[34-35]协议、MITT[17]等协议.在S-RS数据收集策略中,节点采用IEEE802.15.4标准的自动重传和确认机制即ARQ(AutomaticRepeatRequest)将数据包发送给父节点.树枝节点用S-RS码对数据进行编码,并采用如图1所示的流程发送编码包.图中,内存变量Num_trial存储当前数据包的发送次数(包括重传次数),Idx_word存储S-RS码中码字的序号,Num_rcv存储接收方已经收到的码字个数;σ是IEEE802.15.4标准MAC帧的最大重传次数;ωack是MAC帧超时定时器所设置的时间值.树枝节点发送数据包的主要步骤如下:(1)将自身产生的数据和所接收到的来自其子节点的数据采用段间编码或者段内编码(编码方法见后述)利用式(4)生成M个S-RS码字.(2)初始化Num_trial=0,Idx_word=1,Num_rcv=0.(3)在M个S-RS码字中取出第Idx_word个Page6码字,将之封装成一个IEEE802.15.4帧,把所组成的帧发送给父节点,并设置帧超时定时器的值为ωack.(4)如果在ωack时间间隔内未能收到来自父节点的ACK包(确认包),则重传数据包,直至发送次数达到σ+1.否则(说明父节点已经正确接收到所发送的数据包),将已经被接收的数据包个数Num_rcv加1,并判断等式“Num_rcv=n”是否成立.若成立,则说明父节点已经收到n个码字,足以解码,因而停止发送码字;否则(说明父节点因未收足n个码字而无法解码),取出下一个码字继续发送.从图1可见,在S-RS数据收集策略中,树枝节点的MAC层采用IEEE802.15.4的重传和确认机制.发送方只需收到其父节点的n个确认包就停止发送剩余的码字.从式(4)可以看出:码字c1,c2,…,cn就是源信息符m0,m1,…,mn-1.因此,接收方在接收到包含码字c1,c2,…,cn的数据包时,不需要解码.在接收到n个原始信息符号(nn)后,接收方将之代入到式(4),就可以得到包含其余n-n个信息符的n-n元满秩线性方程组,通过高斯消元法解码就可以得到未知的n-n个信息符.因此,在理想的链路状态下(如链路数据包传递率接近1),本文的S-RS数据收集策略只需要传递n个码字c1,c2,…,cn即原始信息符m0,m1,…,mn-1,不需要增加额外的编码开销.在S-RS数据收集策略中,取其中λ为正整数,称为冗余度,且令q=2r.这样,有限域GF(q)变为GF(2r),它的每个元素占r比特.我们称有限域GF(2r)的任意一个元素为一个信息单元(InformationUnit,IU).此外,设节点要发送的传感数据为X个,每个传感数据占θ个IU,因而,每个节点需要发送的传感数据量为Xθ个IU.S-RS数据收集策略采用两种编码方案:“段内编码”和“段间编码”[33].这两种方案的共同点在于:首先对要发送的X个传感数据进行分段,使得每段包含x个传感数据,共产生s=X/x段,记为D1,D2,…,Ds.显然,每个段有f=xθ个IU,用wij表示段Di的第j个IU,i=1,2,…,s,j=1,2,…,f.在X/x不是整数时,产生s+1段,如图2所示.为了减小发送的比特数,在末段所含传感数据不足x时,我们不采用末尾填补0的方式,而是将该段单独使用ARQ发送给父节点.在段内编码方案中,编码操作是逐段进行的,即在每个段内的IU之间进行,它将Di的f个信息符wi1,wi2,…,wif作为S-RS的编码输入,使用式(4)编码,生成M个S-RS码字.具体地说,对于Di,用cij表示由Di编码得到的第j个码字,则段内编码方案生成的M个S-RS码字如下:cij=其中M的值由式(6)确定,且取n=f,i=1,2,…,s.段内编码方案的编码结果如图3所示.当X个传感数据的s个段都编码完成后,式(7)产生由S-RS码字组成的矩阵(犮i,j)s×M,编码节点把这个矩阵的每个列向量封装成一个IEEE802.15.4帧发送出去.例如,第j个列向量(犮1,j,犮2,j,…,犮s,j)T封装成的MAC帧格式如图3的最后一行所示,其中MHR和FCS分别为IEEE802.15.4MAC帧头部和校验和,enc_sn为数据包序号(长度为1字节),j为编码向量的下标(长度为1字节),f为段的信息符个数(长度为1字节).在段间编码方案中,编码操作是跨段进行的,即把各段处于相同位置的IU进行S-RS编码.用hij表示由段D1,D2,…,Ds中第j个IU编码得到的S-RS码的第i个码字,那么段间编码方案所生成的码字满足:Page7hij=其中M的值由式(6)确定,且取n=s,j=1,2,…,f.段间编码方案的编码结果如图4[33]所示.当X个传感数据的s个段都编码完成后,式(8)产生由S-RS码字组成的矩阵(犺i,j)M×f,编码节点把这个矩阵的每个行向量封装成一个IEEE802.15.4MAC帧发送出去.例如,第i个行向量(犺i1,犺i2,…,犺if)T封装成的MAC帧格式如图4的最后一行所示.其中,i为编码向量下标(长度为1字节),s为段数(长度为1字节).上述两种编码方法有各自的特点.段内编码的特点是:对于给定的x,每个帧携带的码字个数为s,它随X变化而变化,但可发送的编码包的个数M不变;每个段内前f个码字是原始信息符(即OIS).由于一个传感数据包含θ个IU,并且每个帧中连续存放的码字来自不同段的数据,所以不能保证对于某个收到的段,其前f个码字是连续的.段间编码的特点是:对于给定的x,每个帧携带的码字个数是固定的,这是因为一个帧携带的码字个数为f=xθ(θ一般是一固定常数),但可发送的编码包的个数M与s有关;每个帧中的码字是连续的.5S-RS数据收集策略的能耗、时延及其优化下面以采用段间编码方式为例,推导本文提出的S-RS数据收集策略的总能耗、数据收集率、数据收集时延(在采用段内编码时,推导过程类似,此处不予赘述).考虑到在一些WSN应用中,sink节点每隔一段时间收集数据,以下称sink一次收集数据时间段为一个“数据收集周期”.我们先分析节点将自己缓存的传感数据采用上述S-RS数据收集策略发送给其父节点收发双方产生的总能耗,并由此导出整个网络的总能耗、sink节点的数据收集率、sink节点收集数据的时延.考虑到目前基于树的数据收集协议如CTP(CollectionTreeProtocol)[36]被广泛应用于无线传感器网络中,本文做如下假设:在所研究的WSN中,已经用现成的协议构建了一棵树,节点沿着这棵树将收集到的数据传递到sink节点.此外,我们假设[33]:每个节点配置了相同型号的传感器,每个传感器在每一个数据收集周期内产生的数据量相同,均为L0Γ,其中,Γ为IEEE802.15.4MAC帧的有效载荷,L0=θr,Γ和L0的单位均为比特.也就是说,每个节点在一个数据收集周期内产生的数据量可以由一个MAC帧携带.本文用H表示每个帧的MAC协议层头部(包括FCS)长度(单位:比特).5.1S-RS数据收集策略的能耗本文采用文献[37]的能耗模型,即当一个节点发送l比特数据给相距为d的另一节点时,发送方的能耗为接收方的能耗其中,γ为路径衰减指数,在2~4之间取值;ε1为发送单位比特无线电放大器的能耗;ε0为编码、调制单位比特的能耗[37].以Ω表示WSN全体节点的集合,T表示数据收集树,Ω0表示全体树叶节点的集合.对于节点k∈Ω,以pk表示它与其父节点间的无线链路传递数据包成功概率,dk表示它与其父节点的距离,Lk表示它发送的数据包长度,Xk表示它发送的传感数据个数,特殊地,当k为sink节点时,Xk表示为一个数据收集周期内到达sink的传感数据个数.此外,以CN(k)表示节点k的子节点集合,σ表示IEEE802.15.4MAC层设定的帧的最大重传次数.首先,分析节点k使用自动重传机制即ARQ将IEEE802.15.4MAC帧(以下MAC帧与数据包不加区别)发送给父节点的能耗.易知,节点k在给其父节点发送(包括重发)一个数据包时,它的发送次数及其对应的概率如表1所示.Page8发送次数σ+1σ+1由表1可知,在MAC层的最大重传次数为σ时,节点k把一个数据包成功传递给父节点的概率为根据表1以及式(9)和式(10)可以得到,节点k在发送一个长度为Lk比特的IEEE802.15.4MAC帧给它的父节点时,收发双方所产生的平均能耗为[33]EARQk(Lk)=P式中,E产生的平均能耗:(S)k(Lk)=[Etx(Lk,dk)+Erx(Lk)]∑E其中,βack表示ACK包的长度,占5字节[1],即40比特.在式(13)中,第1行是收发数据时双方产生的能耗,求和符号后面的式子表示在发送成功条件下所需要的平均发送次数;第2行是双方收发ACK包产生的能耗.此外,E包失败的条件下(此时共发送了σ+1次),所产生的能耗:E(F)k(Lk)=(σ+1)[Etx(Lk,dk)+Erx(Lk)]其次,分析采用S-RS策略时节点h发送数据包收发双方所产生的能耗.根据段间编码方式,节点h将Xh个传感数据分成s段,每段包含x个传感数据即f=xθ个IU.这样,剩余X感数据,其中,mod表示整数的求模数运算.由于采用段间编码,此时n=f,根据式(6),节点h最多可发送Mh=λf个编码包,其中前s个包中包含的码字是未经编码的源信息符(以下称之为“明文”),即第i个编码包的数据为原始第i个段的数据(is).节点h发送的编码包长度为Lh=Lphy+H+fr+24.其中,Lphy是物理层头部(包括同步前缀)长度,它依赖于所采用的物理层;数值24是编码序号enc_sn(1字节)、编码向量下标i(1字节)和段数s(1字节)所占的比特数(见图4).由于节点h将s段数据编码封装成Mh个编码包,每个编码包采用ARQ发送,使得其父节点只需成功接收到s个编码包就能够解码出原始s段数据.为了使父节点收到s个编码包以成功解码,节点h发送的编码包个数及其对应的概率如表2所示,其中,P编码包给其父节点的概率.发送编码包个数ss+1s+2…Mh-1CMhMh由于节点h所发送的Mh个编码包中有s个编码包到达其父节点的概率Gh等于随机事件“在父节点成功接收到s个编码包时,节点h恰好发送i个数据包(i=s,s+1,…,Mh)”的概率之和,由表2可得且节点h发送给父节点的编码包个数均值为Mhah=∑i=s因此,在节点h发送编码包给父节点时收发双方产生的平均能耗(数学期望)为ETh[=Gh∑其中,方括号内第1项表示在父节点成功接收到s个段这个条件下节点h发送的编码包个数(均值),第2项是在父节点未能成功接收到s个数据段条件下节点h发送的编码包个数(这时Mh个编码包都被发送).EARQ确定.在S-RS数据收集策略中,当剩余的传感数据Xh>0时,节点h使用ARQ发送这XPage9据,收发双方产生的平均能耗ET获得[33]:ETh=(1-ph)σ+1(σ+1)Lh(2ε0+ε1dγ[1-(1-ph)σ+1{]40(2ε0+ε1dγ[1-(σ+2)(1-ph)σ+1+(σ+1)(1-ph)σ+2]其中,珟Lh是X比特数之和,即珟Lh=Lphy+(Xh-sx)θr+H.对于任意一个节点z,以Ez表示在采用S-RS数据收集策略时,收集以节点z为根的子树上所有节点数据所产生的能耗.我们有下述递归式子[33]:其中,当h∈Ω0时,珟Eh由式(12)计算,即珟Eh=EARQ当h∈Ω\Ω0时,珟Eh由下式计算:它表示节点h发送Xh个传感数据,收发双方产生的能耗均值.特别地,当z为sink节点时,Esink即为一个数据收集周期内数据收集的总能耗.最后,举一个例子来说明,如何利用递归式子(19)计算以节点z为根的子树上所有节点传递数据所产生的能耗Ez.假设节点z的所有子孙节点a,b,c,a1,a2,c1,c2,c3构成的拓扑结构如图5所示.这样,z的子节点集合CN(z)={a,b,c},由式(19)得到Ez=(Ea+珟Ea)+(Eb+珟Eb)+(Ec+珟Ec),其中,珟Ea和珟Ec因a和c是树枝节点由式(20)计算,而珟Eb因b是叶子节点由式(12)计算.此外,由于CN(b)是空集,由式(19)知,Eb=0.由于节点a有两个子节点a1和a2,即CN(a)={a1,a2},利用式(19)得Ea=(Ea1+珟Ea1此,Ea1=Ea2=0,从而,Ea=珟Ea1+珟Ea2均由式(12)计算.同理,Ec=珟Ec1+珟Ec2+珟Ec3珟Ec2(珟Ea1+珟Ea2+珟Ea)+珟Eb+(珟Ec1+珟Ec2+珟Ec3+珟Ec),其中,珟Ea和珟Ec由式(20)计算,其他项均由式(12)计算.)+(Ea2+珟Ea2和珟Ec35.2S-RS策略的数据收集率我们把S-RS数据收集策略的数据收集率ρ定义为:在一个数据收集周期内,到达sink节点的数据包个数与网络中节点总数的比值,即平均每个节点传递到sink节点的数据包个数.以Ah表示节点h所发送的Xh个传感数据中到达父节点的传感数据平均个数,则数据收集率可以表示为式中,|Ω|是网络中节点个数.下面推导Ah的计算公式.显然,在S-RS数据收集策略中,分段剩余下来的尾部X在采用ARQ方式发送时发送成功的数据包平均个数为X感数据,在采用S-RS数据收集策略时,发送成功的概率为Gh,故其发送成功的平均个数为xsGh.由于在参与编码的xs个传感数据中,前s个帧中包含的码字是明文(即原来的信息符,不需要解码),因此,即使接收方未能正确收齐s个帧而导致解码失败,接收方依然可以从收到的帧中获得部分不需要解码的原信息符.由于节点h产生的编码包个数为Mh=λs,因此,接收方在未能正确收齐s个帧导致解码失败的条件下,能够正确收到明文帧的所有可能情况为:接收方成功收到i个明文帧,其他Mh-i个帧中最多被正确接收的帧数为s-i-1个(i=1,2,…,s-1).考虑到在采用段间编码时,成功接收一个明文帧意味着成功接收到x个传感数据.于是,我们得到节点h所发送的Xh个传感数据中到达父节点的传感数据平均个数[33]:Ah=x∑值得说明的是,对于任意一个节点z,它需要发送的传感数据平均个数为其中,数字1表示节点z自己产生的一个传感数据.5.3S-RS策略的数据收集时延为了支持WSN的一些实时应用,IEEE802.15.4标准提出了超帧(superframe)结构[1],使节点能够在超帧的免竞争时期(Contention-FreePeriod,CFP)Page10中使用其GTS(GuaranteedTimeSlots)发送数据.以下基于超帧结构,对S-RS的时延进行分析.本文将节点A到节点B的数据包时延定义为:从节点A开始发送该数据包到节点B的MAC层接收完该数据包这段时间.自然地,sink节点收集数据的时延定义为:网络中任一节点与sink节点的端到端时延的最大者,以τsink表示.首先,分析节点k使用ARQ发送传感数据给父节点所产生的时延.在IEEE802.15.4标准中,发送方用参数macAckWaitDuration[1]设置接收方返回ACK包的定时器值,即ωack=macAckWaitDuration.也就是说,如果发送方在ωack时间耗完后尚未收到接收方的ACK包,那么节点k就认为所发送的数据包丢失从而重传该数据包.在一个帧被正常接收时,接收方必须等待时间间隔tack才能回复ACK帧,其中,tack的取值范围为[12,32],其单位为符号时间(SymbolPeriod)[1].于是,我们获得结论:节点k在发送长度为Lk的数据包时,每失败一次,耗时Lk/R+ωack,其概率为1-pk;每成功一次,耗时Lk/R+tack+βack/R+tlifs,其概率为pk.其中,R是信道的数据率(单位:bps),βack是ACK包长度(单位:比特),tlifs是帧间间隔.因此,节点k每次发送数据包的平均耗时(数学期望)为tpktk=(1-pk)ωack+设超帧的时间长度为ω,在超帧中分配给节点k的GTS时间长度为ωk.若节点k在超帧的GTS时间内不能成功发送一个数据包,则该数据包推迟到下一个超帧的GTS时间内发送,而且,MAC层允许发送该数据包的最大次数为σ+1.因此,我们需要计算节点k发送一个数据包所需的超帧个数.由于节点k在一个超帧内的GTS时间长度为ωk,故在这段时间内节点k可以发送(包括重传)数据包的平均次数为由表1可知,节点k使用ARQ发送传感数据给父节点的平均发送次数为ETXk=∑因此节点k使用ARQ发送一个数据包所需要的GTS平均个数为其中,函数ceil(x)表示不小于x的最大整数.考虑到节点k在发送一个数据包时,若它在所分配的GTS时间内重传多次仍不能成功发送该数据包,那么,该数据包在下一个超帧的GTS时间内重传.由于在最后一个超帧内节点所分配的GTS开始时间可以在超帧的任意位置,我们取节点的GTS的开始时间为ω/2.因此,节点k使用ARQ发送一个数据包的平均时延为其次,我们分析节点z使用S-RS策略收集其子节点数据的时延.若z的子节点为树叶,树叶节点没有收集数据的时延,只有发送数据包的时延.若z的子节点h不是树叶,则节点h在完成收集其子节点数据之后,将收集到的传感数据分成s段,然后根据段间编码的方式得到S-RS码字,并组装成Mh个IEEE802.15.4MAC帧,而且MAC帧的重传次数为σ.由式(16),节点h发送数据包的总次数为ahETXh,所需要的GTS平均个数为ceil(ahETXh/nh),因此,树枝节点h把编码包发送给其父节点z产生的时延为ceil(ahETXh/nh-1)ω+ω/2+tpkt此外,在Xh不被x整除的条件下,该分段剩余下来h个尾部传感数据采用ARQ方式发送,其时延的X由式(28)计算.因而,节点h把编码包发送给其父节点z产生的时延为Th=ωceil其中,ETXh,nh,ah和tpkt式(24)计算.对于任一节点z,用τz表示在以节点z为根的子树中,将所有子孙节点的数据收集到节点z的时延.因此,τz等于节点z所有子节点收集其对应的子孙节点数据所耗的时间与该子节点发送数据给节点z的时间之和的最大者.换言之,τz满足以下递归式:其中,当u为叶节点时,τu=0,Tu由式(28)计算;当u为树枝节点时,Tu由式(29)计算.值得说明的是,由式(30)递归计算τz的方法与5.1节递归计算Ez的过程类似,请参见5.1节的例子.这样一来,利用式(30)就可以通过递推得出sink节点收集数据的时延τsink(即从sink节点开始收集数据到所有传感数据到达sink节点这个时间段).5.4数据收集率和时延约束下的能耗最小化接下来我们研究如何选择S-RS的参数使得在Page11满足事先给定的数据收集率和时延约束下数据收集的能耗最低这一问题.显然,S-RS数据收集策略的能耗、数据收集率、时延受到参数λ、x和σ的影响.在S-RS策略中,采用S-RS编码虽然可以提高数据传递的可靠性,但编码、解码以及其他相关运算均会产生额外的能耗.我们注意到,在传感器节点中,能耗主要来自于节点之间的通信[38].而且,在WSN中,给距离10m或100m的节点发送1比特的耗能是计算操作的几千倍乃至几百万倍[39].因此,本文仅考虑节点之间的通信能耗即数据收集过程产生的能耗,而忽略编码、解码及其他计算所产生的能耗.于是,我们提出如下优化问题:MinEsinkw.r.t.x,σ,λs.t.其中,Esink是关于λ,x和σ的函数;Ω表示全体节点的集合,Ω0表示全体叶节点的集合;重传次数σ的取值范围为0~7[1];λ是编码的冗余倍数,由式(6)知λ(q-1)/n,这里λ的取值范围设置为2~7;在IEEE802.15.4中MAC帧的最大长度为127字节[1],因此H+xθr+24127×8,即x(992-H)/(θr);ρ0表示一个事先给定的传感数据收集率约束;T0表示一个事先给定的时延约束.在优化问题(31)中,目标函数Esink是由式(20)递推而得的把整个网络节点的数据收集到sink节点所产生的总能耗(参见第5.1节);λ,x和σ是待优化的参数.式(31)的第1个约束条件表示,网络中图6用TelosW节点的实验场景任意一个叶子节点k发送编码包给其父节点时收发双方产生的平均能耗Ek,由式(12)计算.式(31)的第2个约束条件表示,任意一个树枝节点z从它的所有子孙节点收集数据所产生的能耗Ez,可以采用递推式(19)计算(参见第5.1节).在式(31)的最后一个约束条件中,τsink由式(30)递推计算而得.由于优化问题(31)中3个参数的可能取值个数为:λ为6个,σ为8个,x不足20个(对于表3所列的参数,x为12个).此外,式(31)约束条件中迭代计算Ez需要求和N次(N为网络中节点个数);对于判断约束条件τsink<T,用式(30)递推计算τsink时,所涉及的求最大值至多需要比较N次.因此,利用穷举法求解优化问题(31)的复杂度为O(N),在多项式时间内可以获得优化问题(31)的解.6S-RS数据收集策略的实验我们用TinyOS操作系统、NesC程序设计语言和TelosW节点[40]进行实验,以此说明本文提出的S-RS数据收集策略可以在资源受限的传感器节点上实现.TelosW节点属于Telos系列,具有内置的能量表(EnergyMeter)[41]供程序读取.根据能量表的数值可以计算出节点的能耗[42],不需要采用外接本身就耗能的设备来检测能耗.将6个TelosW节点联成如图6(a)所示的拓扑结构,其中,节点0为sink节点.sink节点连接到台式机直接由台式机供电,其实物如图6(b)所示;其余5个节点的布置如图6(c)所示.每个TelosW节点每一轮产生10个传感数据,每个传感数据长度为10字节(即θ=10).每个段所包含的传感数据个数x=4.图7是在不同重传次数下收集1000轮数据的平均值.从图7可以看出:(1)S-RS的能耗(“EnergyMeter”)远低于ARQ方案(见图7(a)).需要说明的是,EnergyMeter的数值可以转化为能量,它与能Page12图7用TelosW节点的实验结果量值存在着正比例关系:它的数值越大,对应的能量值也越大[42];(2)在重传次数(即σ)的值比较大时(如σ2)时,两者的数据收集率一致;但当σ<2时,S-RS的数据收集率优于ARQ方案(见图7(b));(3)S-RS的数据收集时延远低于ARQ(见图7(c)).7性能分析上一节我们已经在TelosW节点上对本文提出的S-RS方案进行了实验.事实上,真实环境的实验存在着困难之处,即难以对一些参数的变化进行模拟.例如,我们难以布置一对节点使它们之间链路的数据包传递成功率为一个事先给定的数值.因此,需要求助于仿真.本节,我们用C++程序设计语言编制仿真程序对S-RS数据收集策略的性能进行分析.在仿真中,在1000×1000m2区域里随机部署400个节点,sink节点放在区域中间,节点的通信范围为100m.数据收集树以sink为根节点随机生成.本节所给出的结果是随机生成500棵树,每棵树上采用S-RS数据收集策略200次的平均值.与文献[37]一样,取ε1=10pJ/(bit·m2),ε0=50nJ/bit,且取γ=2(对应于自由空间模型).在S-RS编码中,选择信息单元IU的长度为8比特.每个传感数据包含IU的个数θ=8.在IEEE802.15.4中,MAC帧头部长度H=200比特(即25字节),这样,在式(31)中x的最大值为12.另外,假设物理层使用O-QPSK(Offset-QuadraturePhaseShiftKeying)调制方案,其数据率R=250Kbps,此时一个符号时间为16μs,tlifs和tack分别为0.64ms和0.192ms,接收ACK包的定时器时间值ωack为0.704ms[1].在IEEE802.15.4中,一个超帧结构由参数amacSuperframeOrder和amacBeaconOrder描述[1],当这两个参数取值相同时,超帧为活跃时间,一个超帧由16个时隙构成,每个时隙的长度为aBaseSlot-Duration×2amacSuperframeOrder,其中aBaseSlotDuration=960μs.为了保证S-RS策略在一个时隙中可以发送一个帧,我们取amacSuperframeOrder=3.在仿真中,超帧中不设自由竞争周期(ContentionAccessPeriod,CAP)[1],即16个时隙全部用于分配GTS.为清楚起见,仿真采用的主要参数值列在表3中.amacSuperframeOrderamacBeaconOrder在进行性能分析之前,我们通过仿真来验证第5节推导的分别以式(19)、(21)和式(30)表示的总能耗Esink、数据收集率ρ和数据收集时延τsink的正确性.图8是当x=10,λ=5,σ=5时在不同链路质量下仿真和计算结果及其误差图.图中,“S-RS-Sim”和“S-RS-Cal”分别表示仿真和数值计算结果.在计算结果中,总能耗Esink、数据收集率ρ和数据收集时延τsink分别由式(19)、(21)和式(30)计算而得.在图8中,第2行分别是计算结果vc与仿真结果vs的相对误差,定义为|vc-vs|/vs.从图8可见,仿真结果与计算结果比较吻合且趋势一致,因此,在分析Page13S-RS数据收集策略的性能时,我们直接利用式(19)、(21)和式(30)进行分析.首先,分析参数x(每个编码包携带的传感数据个数)和λ(编码冗余度)的变化对S-RS策略性能的影响.固定链路传递数据包成功率pk=0.6,让x变化,得到图9;固定x=10,σ=3,让pk变化,得到图10.从图9(a)和图9(c)可见,随着x增大,能耗和时延逐渐降低,这是因为发送的编码包个数减小.从图9(b)可见,随着x增大,数据收集率逐渐降低,图8总能耗、数据收集率和数据收集时延仿真与计算结果对比图9参数x对S-RS策略性能的影响图10参数λ对S-RS策略性能的影响这是因为,在x增大之后每个编码包中包含的传感数据个数也增大,这导致在出现丢包时丢失的传感数据也增大,进而导致数据收集率下降.从图10可见,对于一个给定的pk,编码冗余度λ增大到一定值之后,继续增大λ不能带来数据收集率的增大(见图10(b)),而且也不增大能耗和时延(见图10(a)和图10(c)),这是因为在S-RS策略中,节点在收到足够解码的数据包个数之后,给发送方发送ACK,使得发送方停止继续发送编码包.Page14其次,利用仿真比较S-RS数据收集策略和IEEE802.15.4的ARQ策略.图11是在取λ=7和x=10时不同最大重传次数(即σ)下两种策略的比较结果.从图11可以看出:(1)对于一个给定的最大重传次数,S-RS数据收集策略的总能耗Esink和数据收集率ρ均优于ARQ(见图11(a)和(b));(2)在链路传递数据包成功概率pk大于0.2时,S-RS数据收集策略的时延τsink优于ARQ(见图11(c)).此外,从图11可以进一步发现两个策略的共同特点:(1)数据收集率ρ随着链路质量的提高(即链路传递数据包成功概率pk的增大)而提高,这和直观是吻合的;(2)两种策略的总能耗Esink和数据收集时延τsink随着链路质量提高,呈现先上升后下降之趋势,其理由如后所述.当链路质量比较差时,pk略微增大会导致节点的数据包经过更多的中间节点,但最终因链路质量差未能到达sink节点.也就是说,在这图11S-RS策略和IEEE802.15.4自动重传机制的性能比较图12S-RS策略和RDTS策略性能比较种情形下,pk的增大会引起网络中更多的中途夭折的数据包被发送,使得整个网络的能耗和收集数据的时延增大.然而,当链路质量比较好时,pk的增加使得更多的数据包被传递到sink节点,而且在每条链路,数据包的重传次数降低了,从而降低了整个网络的能耗和收集数据的时延.再次,利用仿真对S-RS数据收集策略和同样应用Reed-Solomon码的可靠数据传输策略RDTS[32]进行比较.在RDTS策略中,δ是一个关键参数,但文献[32]未给出具体的计算方法.因此,我们分别取δ=M/5,2M/5,3M/5,4M/5和M,并把对应的RDTS策略分别记为RDTS-1/5,RDTS-2/5,RDTS-3/5,RDTS-4/5和RDTS-1.在S-RS策略中,取λ=5,x=10.1000次仿真运算结果如图12所示.由图12左上方子图可见,在RDTS策略中,δ越大(冗余数据越多),则数据收集率越高,在这些δPage15取不同值的RDTS策略中,以RDTS-1的数据收集率最高.因此,我们选取数据收集率最高的RDTS-1策略与本文S-RS策略进行比较,比较结果显示在图12的其余3个子图中.从图12右上方子图可见,在S-RS策略中,在MAC帧重传次数σ2时,S-RS策略的数据收集率优于RDTS策略.而且,从图12左下方子图可见,在σ=3时,S-RS策略的能耗也优于RDTS策略.从图12可以进一步看出,在链路成功概率pk0.35时,只须选取σ=3,S-RS策略的数据收集率、能耗、时延均优于RDTS策略.最后,考虑求解式(31)的优化问题.固定pk=0.6,让事先给定的数据收集率取不同的值:ρ0=0.88,0.90,…,0.98时,且取时延约束T0=2900,3000,3100ms时,通过求解式(31)的优化问题,我们得到图13.图中,左上方是能耗Esink的最优值,右上方、左下方、右下方分别是优化问题最优解对应的参数x、σ、λ值.从图13可以看出:(1)在T0给定时,能耗Esink最优值随着ρ0的增大而增大,这是因为ρ0图13优化问题的解考虑到MITT[17]策略构造一棵最小生成树使得瓶颈节点的子节点数最小,从而平衡sink附近节点的能耗,以最大化网络生存时间,我们通过仿真将本文提出的S-RS策略在其参数x、λ、σ设置为优化问题(31)的最优解的条件下,与MITT策略的生存时间进行对比.此处,生存时间定义为网络自投入运行至出现第一个剩余能量为零的节点这一时间段的增大意味着可靠性的提高,从而需要一个比较大的重传次数.例如,在T0=3000ms时,随着ρ0从0.88逐渐增大到0.92,重传次数σ从1逐渐增大到3,这导致能耗增加;(2)式(31)的优化问题并非总是存在最优解.例如,在时延约束T0=3000ms时,当数据收集率约束ρ0大于0.94时,上述优化问题无解.也就是说,在实践中很难做到既要达到高数据收集率,又要数据时延足够小.其理由是,如果我们需要S-RS策略达到比较高的数据收集率,那么节点需要发送比较多的冗余编码包,这会导致能耗和时延的增加.同样,为了降低能耗和时延,节点需要减少重传次数和编码包个数,这会导致一些数据包无法到达sink节点,从而降低数据收集率;(3)在优化问题(31)存在最优解的条件下,通过求解优化问题(31)获得参数x、λ、σ的最优值,从而使S-RS策略的能耗达到最低.例如,在收集率约束ρ0=0.94和时延约束T0=3000ms时,sink节点可以选择x=12,σ=3和λ=2使得Esink≈6.4×104uJ.(以sink收集传感数据的轮数度量).仿真中,在随机构建了一颗数据收集树之后,随机分配给每个节点1.5~2焦耳的初始能量.MITT策略的MAC层重传次数取3(这是IEEE802.15.4标准的默认值).在网络节点数从100~400,T0=3100ms时,分别取ρ0=0.90和ρ0=0.95,解优化问题(31),将最优参数的S-RS策略和MITT的结果进行比较,如Page16图14所示.从图14(a)可以看出:(1)本文提出的S-RS策略在数据收集率高于MITT策略的前提下(见图14(b)),网络生存时间也大大高于MITT策略(见图14(a));(2)S-RS策略和MITT策略的网络生存时间都随着网络规模的增大而减小(见图14(a)),这是因为当网络中节点增多时,sink每轮需要图14MITT和S-RS比较顺便指出,把式(31)的优化目标函数换成数据收集时延τsink,我们可以对时延最小化;或者把式(31)的优化目标换成数据收集率ρ从而进行最大化.也可以将能耗Esink、数据收集率ρ和数据收集时延τsink中的两者或者三者同时作为优化目标,构建多目标优化问题,从而使能耗、数据收集率和数据收集时延均达到最优.有兴趣的读者可以自行对之进行研究.8结束语本文应用简单的Reed-Solomon码于可靠数据传递,提出了S-RS数据收集策略.这个策略可以让节点采用段内编码或者段间编码将要传递的传感数据进行分段和编码,通过优化每个段所包含的传感数据个数、编码冗余度、数据链路层重传次数这3个参数,使得在事先给定的数据收集率和时延约束条件下收集数据的能耗达到最低.S-RS数据收集策略适用于链路易丢包的低功耗的数据不可融合的无线传感器网络.
