Page1基于上下文感知实体排序的缺失数据修复方法陈肇强李佳俊蒋川刘海龙陈群李战怀(西北工业大学计算机学院西安710072)摘要大数据环境下,数据缺失现象十分普遍,导致许多基于数据的决策出现偏差.传统的数据库缺失值修复方法主要是利用本地数据库来修复数值型数据,这些方法并不适用于利用互联网数据来修复数值型和非数值型数据.基于互联网的缺失值修复过程一般包括生成查询、检索文档集、抽取实体、实体排序4个步骤,其中候选实体的排序决定了最终用于修复数据库的信息.现有的利用互联网数据来修复缺失数据的研究主要集中在两个方面:一是提升查询和抽取的质量,然后对抽取的候选实体按频率进行排序;另一种是分析目标实体应该具有的特征,然后对候选实体计算特征值,最后用权值叠加进行排序.这两类方法都只是考虑了实体自身的因素,而忽略了实体之间的影响.文中针对候选实体的排序建立了图模型,基于该图模型提出了上下文相关的实体排序算法CER(Context-awareEntityRanking),该算法能够把候选实体在网页中的上下文特征充分利用起来并用实体间的影响来推断新信息,从而得到更准确的排序结果.基于真实数据集的实验结果表明,相较于频率统计和权值叠加的实体排序算法,CER算法能利用互联网的海量数据对关系数据库中的缺失值进行更加有效的修复.关键词数据库缺失值修复;互联网;图;实体排序1引言数据库系统是作为商业数据计算机化管理的早期方法而产生的,当用户向数据库系统提交一个查询时,希望数据库系统能给一个完整的答案.这就要求数据集中包含足够的数据来回答各种查询和支持各种计算[1].不幸的是,现实数据库的数据经常是不完整的,存在元组或者属性值的缺失[2].对于存在缺失值的数据,可以采用的处理方法有[3]丢弃具有缺失值的记录、进行缺失值的填补、采用模型对缺失值进行预测、直接使用.在数据质量管理过程中,我们更希望的是对缺失数据进行填补,因为缺失的数据不仅仅与用户的使用和数据分析有关,它还关系到数据的一致性、精确性、时效性和实体同一性的数据质量管理与修复.幸运的是,互联网的快速发展为我们带来了巨大的资料库,与此同时,也带来了巨大的挑战,即如何从海量数据中筛选出正确的实体来修复数据库中的缺失值.利用互联网数据进行数据库缺失值修复的主要步骤有形成有效查询、利用搜索引擎检索相关网页并从中抽取实体、最后对候选实体进行排序并修复数据库.候选实体的排序是一个很具挑战的过程,其直接影响着缺失值修复效果,如:(1)如何把互联网本身所带来的噪声(不准确数据、错误数据、多样性的表达方式等)对候选实体的干扰降至最低;(2)如何准确评估候选实体与待修复元组的相关度;(3)如何判断候选实体的真实度与可信度;(4)如何充分利用网页片段所提供的信息来筛选候选实体.传统的排序算法中,简单的只利用频率[4],更精细的会考虑各种特征函数[5]来对候选实体进行评价,比如候选实体的位置、候选实体的频率、候选实体所在网页片段的网页排名、候选实体所在语句的结构信息等.它们的特点是只专注于单个网页片段,而没有考虑各个网页片段中不同实体间的关系和相互影响.我们认为,必须想办法把相关网页的信息进行综合考虑才能得到更合理的排序.在表1的例子中,要寻找RedShift的作者,两个候选实体AlanGarner和A.E.VanVogt无法通过频率或者权值叠加的方法区别开来.为了解决这个问题,我们提出一种基于图的候选实体排序算法,用类似于主题相关的PageRank[6]的思想,把候选实体的各个特征以及各网页片段中的实体间的关系都用图表达出来,然后进行迭代计算,最后得出候选答案的排序.在表1中,通过fantasynovel这个实体可以把网页片段1和网页片段2的信息综合起来,从而推断出AlanGarner是RedShift的作者的结论.我们在两个数据集上进行了实验,结果表明,相比较于频率统计和权值叠加的实体排序算法,CER算法能够提高缺失值填充的准确率.本文的主要贡献如下:(1)针对利用互联网数据进行数据库缺失值修复问题进行了详细的分析,在此基础上,用图模型对实体间的关系进行精细建模.(2)基于图模型提出了上下文相关的实体排序算法CER(Context-awareEntityRanking),该算法能够把候选实体的上下文特征充分利用起来,以此降低互联网数据的干扰并提升排序的可信度,进而提高了缺失值修复的准确率.(3)CER排序算法属于无监督的排序算法且具有较好的通用性,即不针对特定的数据集.基于真实数据集的实验证明了该算法的有效性.查询网页片段1“…RedShiftisafantasynovel…”网页片段2网页片段3“…A.E.VanVogtwas…sciencefictionauthor…”所有实体候选实体AlanGarner[频率:1]、A.E.VanVogt[频率:1]目标实体AlanGarner本文第2节回顾相关研究工作;第3节描绘基于互联网的数据库缺失值修复框架;第4节详细描述CER模型和算法;第5节通过在真实数据集上的实验证明CER的有效性;第6节对全文进行总结和展望.Page32相关工作对于关系数据库的属性缺失问题,传统的修复方法有两个特点:(1)它们的修复过程仅依赖于本地数据库的数据,比如均值填充、基于分类的方法、贝叶斯估计等现有的填充算法[7];(2)修复的对象主要是数值型数据,这种缺失值填补主要是为了防止数据分析时,由于相当部分的值空缺导致的分析偏差.对于填补的单个数据,只具有统计意义,不具有个体意义[8],如文献[9]对于传感器网络中的数值型数据提出了基于感知数据时间和空间相关性的缺失值估计算法;文献[3]的基于不完备数据聚类的缺失数据填补方法的实验数据集也是具有二态属性(值域为{0,1})和数值属性.这些传统的修复方法并不适用于利用互联网数据来修复数值型和非数值型的缺失数据.基于互联网数据的填充[4],它把整个网络上的数据看作一个更大的数据库,并试图从这个更大的数据库中寻找约束进行缺失值的填充,如文献[10]利用互联网数据来对商品数据集中的缺失属性和缺失属性值进行修复.基于互联网的数据填充一般包括生成查询、检索、抽取、排序.生成查询,简单的方法是把缺失值所在列的其他所有已知属性作为查询的关键词;较为复杂的是分析已知属性的特性并通过训练的方法得到较优的查询[11];更进一步的在自动问答系统研究领域中,对查询关键字进行同义词或时态扩展等.形成查询后利用搜索引擎检索互联网上的相关文档,典型的搜索引擎有Google、Bing、Yahoo、Indri等.它们能够返回与查询相关的网页片段,并按照一定的次序排名.这些网页片段将成为利用网络数据进行缺失值填充的依据.搜索引擎返回的数据特点不同,形式多样[12],进行文本分析十分必要,相关技术有利用信息的特征来从异构的文本数据中抽取结构化的信息[13],命名实体识别[14-15],词性标注[16].典型的实体抽取技术有命名实体识别算法(NER)和基于模式(Pattern-based)的算法.前者识别出网页片段中与查询的目标类型相匹配的命名实体作为候选实体进行排序,但由于NER受制于目标类型的可识别性及NER命名实体的训练库,如果候选实体类型无法识别或NER中没有某个候选实体的记录,则抽取失败;后者利用学习[17]或者人工指定的目标实体的模式进行实体抽取,但并不是所有目标实体都以一定模式呈现出来,对目标实体要求过于严格会使得很多候选实体无法被成功抽取.现有的实体排序算法可以分为两类,基于频率排序和基于权值叠加排序.对于基于频率排序的方法,出发点在于检索的网页片段一般都围绕着一定的主题进行阐述,尽管实体表达方式不一致,但相关统计数据表明,正确的实体很多情况下具有较高的频率[4].这种方法的关键之处在于要提高目标实体的频率和识别率,这就要求提升查询和抽取的质量,如文献[18]利用实体所在的片段来构建因子图,通过相似性的关系来提升抽取质量,然后利用候选实体的频率进行排序即可达到一定的正确率.关于查询和抽取的其他相关工作前面已述,这里不再赘述.对于基于权值叠加排序的方法,通常用到目标实体所具有的各种特征[5,19],如频率、关键词之间的距离、关键词之间的语义相关度、网页返回的排名等.文献[5]用加权的方法来综合这些不同的特征;文献[20]用支持向量机来叠加实体的特征,并引入了基于语法分析方法的语法关键路径的新特征;文献[19]则是将全部特征融入统一的概率框架来进行排序;文献[21]利用马尔可夫随机场来计算实体的特征值,然后叠加概率值来进行排序;文献[22]通过对检索的主题难易度预测来提升实体排序的有效性,这是对实体特征维度的一个扩展.此外,还有一些特征维度用于特定的应用场景和数据集,如基于用户点击日志的实体排序[23]和基于用户观点的实体排序[24].以上的实体排序算法的共同之处在于:排序过程依据的是每个候选实体各自的评估值而忽略了实体之间的相互影响.实体之间的影响的意义在于:候选实体特征的获取和计算存在不准确、不精确,而通过传导实体间的影响,以实体选举的方式可以提升实体排序的可靠性.本文针对这点提出了基于图模型的上下文相关实体排序算法.3基于互联网的数据库缺失值修复框架本节阐述了利用互联网数据来修复含有缺失值的关系数据库的框架,并通过分析修复过程得到结论:缺失值修复需要一个有效的排序算法.3.1问题描述对于一个含有缺失值的数据库D,即需要修复的目标数据库.令ti为D中某条含有部分缺失属性值的元组,假设该元组的属性值全集为Uattr=Page4{a0,a1,a2,…,ak},缺失属性集为Iattr={aj|aj=null,0jk},IattrUattr,则完整属性集为Cattr=Uattr-Iattr.我们的任务是根据Cattr和给定的文档集(在这里的场景中即是来自互联网的网页片段Snippet集),找出合适的实体来修复缺失属性集Iattr,使得修复后,对于Uattr中的每个属性值均不为空,即aj≠null,0jk.3.2缺失值修复框架基于互联网的缺失值修复工作一般包括以下5个步骤,其中前4个步骤属于主要步骤,第5个步骤在实际的修复过程中根据具体情况选择.(1)根据元组ti的完整属性集Cattr构造合适的查询Q={q0,q1,q2,…,qm}.(2)将查询Q提交到搜索引擎中,搜索引擎从互联网中检索相关文档,返回网页片段集S={s0,s1,s2,…,sn}.(3)利用信息抽取技术从S中抽取候选的实体Ce={e0,e1,e2,…,el}.(4)运用排序算法对Ce进行排序,选择合适的实体,即目标实体对缺失的属性值进行修复.(5)对修复后的数据库进行有效性的验证,通过验证后修复完成,否则修复失败,重新修复.具体的框架图如图1所示.在这个修复过程中,每一个步骤都对最终的缺失值修复有着重要的影响.对于第(1)步,如果生成的查询约束太大,那么返回的结果集数量相对较少,因目标实体不在结果集中而导致修复失败的风险也就相应增加;如果生成的查询比较宽泛,那么由于返回的结果集中包含大量无关的信息,进而导致寻找出用于修复的实体的难度增大.对于第(2)步,搜索引擎是否能返回与查询相关的文档集直接影响到后续的实体抽取.对于第(3)步,信息抽取技术决定了候选实体集,一个不好的候选实体集是不能产生出好的目标实体,这是显而易见的.正是因为前面的3步中,每一步都会产生对缺失值修复不利的影响,这就给第(4)步的实体排序带来了挑战,即实体排序并不是一个平凡的过程,它是整个修复过程的最后一道关卡,决定着最终的目标实体.因此,我们提出了一个实体排序算法CER,它能够充分利用候选实体的上下文信息来降低(1)~(3)步的不利影响,并最终给出具有说服力和权威性的目标实体,极大地提升了缺失值修复的效果,下一节我们将详细说明CER模型和算法.4CER模型和算法本节首先针对候选实体的特征与互联网数据的特性构建了图模型.图模型中的每个结点代表着一个实体,根据实体的作用分为关键字实体、中间实体和候选实体三类.结点间的边代表着实体间的关系.边的权重则表示实体间不同的影响,权重计算的因素包括实体间的距离、网页排名、关键字的影响因子.然后在图模型的基础上提出了排序算法,该算法的核心思想类似于PageRank,均用到了随机游走模型.排序的开始阶段只有关键字实体具有初值并具有表征以较大概率从关键字开始的D值.之后通过多轮随机游走过程,图中各个实体的值迭代收敛至稳定的值.最后根据结点值给出排序结果,选择合适的实体进行缺失值修复.4.1模型描述CER算法是基于图的实体排序算法,这里的图是一个无向图G(V,E),V是图的结点的集合,E是图的边集,其中E是V×V的一个子集.图中的每一个结点代表着一个实体,结点的值则代表着实体成为目标实体的程度,这里的值只具有相对意义,不具有具体的实际意义,即该值用于实体的排序.图中的边是带权无向边,边权代表着两个实体间的关联度.假设已经有根据查询Q从互联网中返回网页片段集S,利用斯坦福大学的NER①(NamedEntityRecognizer)技术从S中抽取所有的实体,构成一个集合Ue,候选实体集Ce由实体类型与缺失属性值的类型相同的实体构成.缺失属性值的类型的获得有两种方法:一是由在这个属性上值不为空的其他元组提供目标实体的样例,然后用NER判断候选实体的类型;二是人工来指定候选实体的类型.关键字实体集Ke则是从查询中抽取出来的实体,一般地,Ke为元组中的非空属性值集合的子集.中间实体集①http://nlp.stanford.edu/software/CRF-NER.shtmlPage5Ee则是由实体类型与关键字实体集中实体类型相同的实体构成,且Ee(Ue-Ke-Ce).图模型中的结点由关键字实体集Ke、中间实体集Ee和候选实体集Ce构成.图模型中每个结点都对应有一个值,记第j个结点的值为VertexScore[j].CER算法运行前,只有关键字实体结点的初值不为0,其他结点初值为0,即图中只有|Ke|个结点具有初值,详细的初值计算见4.2小节.关键字结点除了具有初值之外,每轮的随机游走过程还会加入一个D值的影响因子,表征从关键字开始的概率较大.图模型中当且仅当:(1)两个结点所代表的实体不能同时是关键字实体;(2)至少有一个网页片段sj包含有这两个结点所对应的实体;(3)在sj中,这两个实体之间不存在其他任何的Ke、Ee、Ce实体两个结点间存在边.实体之间的边是无向边,因为在网页片段中,实体的前后位置并不能表征实体的指向关系.每条边都对应有一个边权,代表了这条边所连接的两个实体之间的关联度,边权的计算为下面的式(1).EdgeWeightvivj=∑式(1)中|S|表示所有网页片段的数量,Z1表示所选取的衡量两个实体关联度的维数,rel(vi,vj)则是某个维度的关联度计算,具体的关联度特征的选取和计算参见4.4节.至此,CER算法的整个图模型已经构建起来,其示意图如图2.4.2结点初值的计算对于图模型中的结点,只有关键字实体集Ke具有初值,其他实体的初值均为0.当关键字实体及其同义词在网页片段集中出现的次数越少,则其初值越大.具体的初值计算见式(2):VertexScore[j]=loge1+|S|∑烄烅当Vertex[j]∈Ke0,当Vertex[j]K烆其中函数contain(si,Vertex[j])的定义如式(3):contain(si,Vertex[j])=1,当网页片段si包含代表顶点vertex[j]的实体0,{其他4.3入口犇值的计算图模型中入口D值表征了每轮随机游走过程从某个结点开始的概率.这里,我们希望每次都从关键字实体开始传递结点的值,因此,只有关键字实体的结点具有不为0的D值,其他结点的D值为0.D[j]=4.4边权特征的选取为了准确刻画两个实体的关系,在计算式(1)中的relz,sk个网页片段sk为例):4.4.1实体间的距离实体间的距离这个特征表示了两个实体间影响的大小,距离越小,影响越大,反之,影响越小.rel0(vi,vj)=1-min(dist(vi,vj))/length(sk)(5)式(5)中,dist(vi,vj)指的是两个实体之间包含有的实体个数,如果在网页片段sk中存在有多个vi和vj所代表的实体,则取最小的dist(vi,vj)作为实体间的距离.length(sk)指的是网页片段sk总共的实体数.在经典的计算实体间距离时,最常采用的是单词距离,而这里采用实体数来计算的优势在于:用现实的视角来对待实体,排除实体的不同单词个数所带来的影响,即与实体名字的长短无关.例如,查询“GoodbyetotheButtermilkSky”这本书的作者是谁时,返回的某个网页片段如图3.Page6把这个网页片段简化为“GoodbyetotheBut-termilkSky[DeepSouthBooks](JuliaOliver)onAmazon.com”.在计算实体vi(GoodbyetotheButtermilkSky)和实体vj(JuliaOliver)之间的距离时,如果用单词距离来计算时,如果用实体间距离的实体数且把网页片段也处理成由一个个实体组成,如图3中框所示,那么,如果网页片段变成“GoodbyetotheButtermilkSky[DeepSouth](JuliaOliver),Amazon.com”,那么用单词距离计算的值为0.455,而用实体距离计算的值为0.75,保持不变.用实体数来衡量实体间的距离不受实体的名字长度、连接词等无意义词汇的干扰,更为稳定合理.注意到,根据4.1节中边存在的条件,如果两个实体之间有其他实体,那么边就不存在了,因此实体之间的距离只能是0.在这种情况下,直接按式(5)计算的话,这个因素就不起任何作用.因此,这里的实体间距离计算我们修正为,式(5)中min(dist(vi,vj))恒等于1,其他参数不变.修正后的实体间距离这个因子的含义为,如果一个网页片段包含有大量的实体,而某两个实体紧挨着出现,那么它们的值较大;而如果网页片段包含的实体较少,那么实体紧挨的概率本身就较大,它们之间的值就小.比如,极端情况下,从某个网页片段按序仅抽取出两个实体,除去非实体的字符串,那么它们必定是紧挨着的.4.4.2网页权值网页权值表明了由网页片段sk所决定的结点vi和vj的关联度具有多大的可信度.网页排名越靠前,则由它定义的实体关系的可信度越高.式(6)中,rank(sk)表示网页片段sk在返回的所有网页片段中的名次,这个值是由搜索引擎所决定的.|S|则表示所有网页片段的个数.4.4.3关键字的影响因子关键字的影响因子表征了网页片段sk所蕴含的实体关系的权威度,网页片段含有的关键字越多,它所提供的实体间的关系越重要,实体间的边权也就越大.rel2(vi,vj)=∑式(7)中,contain(sk,Ke[l])由式(3)所定义,表示关键字实体Ke[l]是否在网页片段sk中.Ke则是所有关键字实体的个数.例如,书本“CatsatWork”的作者是“RhondaGray”,现在数据库中“CatsatWork”的作者缺失了,我们需要修复它.输入的查询关键字为“CatsatWork+1991+AbbevillePress”,分别表示书名,出版年份,出版社.现在从搜索引擎中只返回了两个名次一样的网页片段s1、s2,其中s1为“…In1991,CatsatWorkiswrittenbyRhondaGray…AbbevillePress…”,s2为“…PresidentialPetsiswrittenbyNiallKelly…AbbevillePress…”.那么,在没有加入关键字影响因子的情况下构建的图如图4,注意到,关键字“1991”与其他实体是没有边存在的,因为“1991”与其他实体间隔有一个关键字实体“CatsatWork”,根据4.1节的模型描述,“1991”与其他实体将没有边,而关键字实体间也是没有边存在的.图中线段的粗细表示了边权的大小,在这种情况下,RhondaGray和NiallKelly的实体影响是一样的,那么最终RhondaGray和NiallKelly的值将会是相等的,即无法有效筛选出RhondaGray.在加入了关键字的影响因子后,实体“written”与“RhondaGray”的边权将会增大,见图5.因为网页片段s1中包含有关键字实体“1991”,这是网页片段s2中所没有的.因此,“RhondaGray”最终的值将会比“NiallKelly”大.Page74.5算法描述CER算法的运行过程类似于PageRank,通过多轮迭代计算后获得每个结点的值,以此来获得候选实体的排名.CER算法与PageRank的不同之处在于:(1)我们指定了随机游走的入口,且从某个入口开始的概率不同,具体来说,如果某个关键字实体比较重要且有区分度,那么从它开始的概率会比较高;(2)实体之间的边为双向,而这在网页的链接关系中并不常见;(3)我们的边权的计算更为精细,使得随机游走过程更符合实体排序的需要.每个结点的值的计算见式(8).VertexScore[j]=(1-α)×D[j]+α×∑式(8)中,α为取值在0到1之间的阻尼因子,这里我们取α为0.85.D[j]则代表了从结点j为入口的概率,在CER算法图模型中,只有关键字实体的D值不为0,其余实体的D值均为0.In(j)表示与结点j相连接且指向j的所有结点的个数.Value(i→j)表示由某个指向结点j的结点i通过边〈i,j〉传递给j的值,其计算见式(9).Value(i→j)=式(9)中,Out(i)表示结点i的所有出度的结点个数.算法1.CER算法.输入:关键字实体集Ke,中间实体集Ee,候选实体集输出:目标实体集Te1.FOR(每个结点i),初始化结点的值VertexScore[i];2.FOR(每个结点i),初始化结点的入口D值D[i];3.FOR(每条有向边〈i,j〉),初始化边权EdgeWeight[i][j];4.初始化迭代次数Iteration=0;5.设定结点值的变化量λ为0,复制结点的值至数组lastRoundVertexScore;6.根据式(8)计算每个结点的值,更新数组Vertex-Score;7.计算结点值的变化量,FOR(每个结点i),λ+=|VertexScore[i]-lastRoundVertexScore[i]|;8.迭代次数Iteration++;9.如果λ的值大于指定的终止阈值并且迭代次数Iteration小于设定的最大迭代次数,返回第5步;10.根据结点值的大小获得候选实体集Ce的一个降序排序结果;11.根据实际情况需要选取前N个候选实体为最后的目标实体集Te.4.6算法的时间效率分析CER算法的运行包括两个部分,图模型的构建和利用随机游走进行排序,不妨记构建图模型的时间复杂度为T1,排序过程的时间复杂度为T2,总的时间复杂度为T=T1+T2.令输入的网页片段集的大小为|S|,关键字个数为Ke,平均每个网页片段中含有的实体数为Es,则在构建图模型中,结点初值的计算需要时间为O(|S|×Ke);关键字的D值计算为很小的常数时间,因为关键字的个数通常很少,可忽略这部分时间开销;边权的计算时间为O(|S|×Es),我们可以将计算结点初值和计算边权融合在一起,故最终T1=O(|S|×(Es+Ke)).记图中的结点数为V,随机游走过程收敛需要迭代的次数为C,则排序过程主要为矩阵运算的时间开销T2=O(C×V×V).综上,算法的总时间开销为T=O(|S|×(Es+Ke))+O(C×V×V)5实验及分析这一节描述了实验的数据集、实验的设置、对比实验和实验结果,并对实验结果进行了分析讨论.5.1实验数据集本文实验使用了两个数据集Book-Crossing①(后面简称为“书本数据集”)和Fortune1000ContactInformation②(后面简称为“公司数据集”).其中,(1)书本数据集是Cai-NicolasZiegler在Book-Crossing社区爬取的,它包含了278858名匿名用户对271379本书的1149780个评分.本文采用书本数据集中的BX-Books表进行实验,去除表中的图像信息等无法供给实验用的字段后,BX-Books的字段有ISBN号、书名、作者、出版年份和出版商;(2)公司数据集收集了《财富》杂志评选的1000强企业的相关信息,该数据集由AndyPavlo提供.公司数据集包含的属性字段有公司名、地址、所在城市、所在州名、邮编、电话、网址、通用邮箱、CEO及CEO邮箱.5.2实验设置为了充分验证CER算法进行关系数据库缺失值修复的有效性,本文实验采取了以下3个方法:①②Page8(1)随机从数据集中抽取元组进行实验;(2)随机选取元组中的某个属性字段,将该字段的属性值设置为空值,然后进行修复工作,最后评测修复的属性值与原属性值是否一致;(3)与两个算法进行比较,一个算法提供基准值,该算法以实体在网页片段中的频率作为实体排名因素;另一个算法则采用了权值叠加的方法来进行候选实体的筛选.数据库的缺失值修复过程涉及查询生成、文档集检索、实体抽取和实体排序.本文实验着重对比和分析实体排序过程,其余的技术采用最常见的方法来实现,这么做并不会引起不必要的实验噪声,因为所有的实体排序算法均在同样的前提基础上运行.实验中,我们生成查询的方式是选取除缺失属性值之外的其余所有属性值来构建查询.例如,书本数据集中的缺失元组Tuple1(ISBN,Title,Author,PublicationYear,Publisher)=(0001047663,“MatterOfHonour”,null,2000,TrafalgarSquareBooks),则构建的查询为〈“0001047663”“MatterOfHonour”“Author”“2000”“TrafalgarSquareBooks”〉.在这表2Web网页片段相关信息统计(设定网页片段个数为100个)召回率0.790.93表3排序结果(设定网页片段个数为100个)Top3元组数数据集书本数据集公司数据集数据集书本数据集公司数据集5.3实验对比本文用于评价实验结果的因素有3个:(1)TopN.代表排序结果中,目标实体出现在前N个候选实体.(2)TopN的准确率.TopN的元组数除以参与测试的所有元组的数目.由于本文的关注重点在于排序算法,为了去除查询和抽取带来的不必要影响,计算准确率的分母采用的是能够搜索到答案的元组数.(3)MRR.所有的目标实体的排名位置的倒数和除以元组数.MRR的值在0到1之间,值越接近1表示排序的效果越好.种查询生成方式下,两个数据集的查询召回率如表2所示.本文使用的文档集是从互联网上抓取的网页片段,文档集的检索采用商业搜索引擎必应Bing①.它是由微软公司推出的全新搜索引擎服务.这里设置每个查询使用的网页片段数目最大值为100个,这个数值参考了文献[4]的实验结论.更具体的网页片段数则与不同的元组有关.两个数据集的网页片段个数情况如表2所示.从网页片段集中抽取实体采用的是NER实体抽取技术.本文把符合以下两点特征的网页片段称为目标网页片段:(1)网页片段中包含有目标实体;(2)NER技术可以抽取出该网页片段的目标实体.表2列出了每个元组用到的目标网页片段数的平均值.显然,能够用的目标网页片段数越多,则越有利于目标实体的寻找,表2的数据解释了表3中公司数据集的排序效果好于书本数据集的原因.实体排序算法是本文实验的分析重点,总共采用了3种不同的算法:基于频率的排序算法、基于权值叠加的排序算法和本文提出的CER排序算法.更详细的实验信息参见下一小节的实验对比.平均每个查询返回的网页片段数目平均目标网页片段数目258269320246248271式(11)中rank(ansi)表示第i个元组的目标实体在最终的排序结果中的位置.(1)与基于频率排序算法的比较本文的算法在候选实体抽取阶段使用了NER技术,为了验证我们排序算法的有效性,我们测试了对NER抽取的候选实体只使用频率进行排序的方法.从表3可以看到,本文的算法与单纯使用频率进行排序相比更加有效,书本数据集排在第一名的提高了23.25%,MRR提高了32.51%.而在公司数据集中目标实体排第一名的提高了10.18%,MRR提高了10%.并且,若采用排名第一的候选答案进行数据库缺失值填充,本文的算法对于能够抽取出候①https://datamarket.azure.com/dataset/bing/searchPage9选答案的元组,在书本数据库中能达到62%的准确率,而公司数据集能达到85.96%的准确率.这是因为在Web中有更多与公司相关的记录.本文的算法能够比基于频率进行排序的方法好,这是很容易理解的,因为基于频率的算法只利用了目标实体在网页片段中出现次数更多的这一个特点.然而,这个特点并不具有普遍适用性,存在很多的实体,它们频率并不是最高,但却是目标实体,对于这种情况,基于频率的算法就失效了.所以,必须挖掘出与目标实体相关的更多特性,比如与关键词实体的距离,与其他各个实体间的关系等,本文的算法正是做到了这一点.比如表1中的例子,抽取出来的候选实体AlanGarner和A.E.VanVogt在给定的网页片段集的背景下,其频率均为1,那么就无法通过统计频率的方法来筛选出目标实体.(2)与权值叠加排序算法进行比较权值叠加排序算法也考虑候选实体的各种特征,比如实体间的距离,网页片段的排名等,并对这些特征值进行加权和,从而得出候选实体的排序.从实验结果表3可以看出,简单的权值叠加虽然有效,但效果并不显著.与基于频率进行排序的算法相比,书本数据集的MRR值仅提高了3.21%,公司数据集的MRR只提高了2.40%.权值叠加算法虽然能够通过挖掘目标实体的特点来提高频率低的目标实体的最终排名,但是它并没有利用各个网页片段中实体间的关系,如果一个网页片段中不包含候选实体,那么它对基于权值叠加的算法基本没有用处.然而事实上,当人为地利用这些网页片段进行判断的时候,每一个网页片段都是有用的,因为人能够把各个网页片段所提供的信息综合起来进行推断.本文的算法正是把各个网页片段通过关键词实体,中间实体和候选实体用图的方法综合起来,并且用边权表征实体间的联系,最后通过迭代计算,得到与关键词实体最相关的候选实体.例如表1中的例子,基于权值叠加的算法无法利用所提供的网页片段来排序,因为不存在关键字与候选实体同时出现的网页片段,那么权值叠加就无法进行.但是,本文的算法能够利用中间实体“fantasynovel”把网页片段1和网页片段2结合起来进行推断并排序.本文的算法充分利用网页片段所提供的候选答案的上下文环境,所以才得到了更高的准确率,相比于权值叠加排序算法,书本数据集中目标实体排在第一名的提高了21.5%,MRR值提高了28.40%;公司数据集中目标实体排在第一名的提高了7.37%,MRR值提高了7.42%.5.4分析本文用于修复关系数据库缺失值的数据源是Web中的网页片段集,前面分析了在固定(设定数量100个)网页片段集下不同排序算法针对不同目标数据库的修复效果,下面将会测试在不同数量的网页片段集下排序算法的表现.通过分析查询返回的网页片段我们发现,实际的网页片段非常复杂和混乱.主要体现在4个方面:(1)网页片段并不是完整的句子,同一个查询返回的网页片段描述的内容不同;(2)同一个意思又有不同的表述方式,比如“THISSIDEOFPARA-DISEiswrittenbyF.ScottFitzgerald”,“F.ScottFitzgeraldfinishedhisanotherbook—THISSIDEOFPARADISEin1988.”;(3)同一个名称可以有不同的写法,比如作者的名字可以写成“F.ScottFitzgerald”“F.Scott”“Scott”;(4)信息的公开程度,流行程度不同,导致网上具有的信息并不相同,比如一本流行的书,会有更多的关于它的讨论的信息,而对于一本冷门的书则只有很少的网页会提及.图6展示了在不同的网页片段数的情况下,网页片段集包含目标实体的元组个数的变化情况.随着网页片段数的增加,能够召回目标实体的元组数也呈上升趋势,但网页片段数到达一定的值后,这样的元组数达到一个稳定的值.对于书本数据集,在网页片段数达到70个以后,能召回目标实体的元组数平均增长幅度只有0.93%;对于公司数据集,在网页片段数达到50个以后,能召回目标实体的元组数增长的个数只有1到2个.这说明公司数据集所对应的网页片段集能提供较为精准和相关的信息,因为大部分(276/307)的元组在设定网页片段数为50个的情况下就能够找到目标实体.这也解释了表3中,不同的排序算法下,公司数据集的排序效果均好于书本数据集的原因.Page10本文利用网页片段提供的信息构建实体的关系图,会受到网页片段集的影响.在网页片段比较少的情况下,我们能够利用的信息相应较少,构建的候选实体的上下文关系具有一定的局限性,这是不可避免的.但是,即使在这样的情况下,本文的排序算法效果还是优于基于频率和基于权值叠加的排序算法,这是因为不管信息源的多寡,本文的算法可以综合利用网页片段所提供的信息.当然,网页片段提供的关于候选实体的信息越全面越多,我们构建的图图7书本数据集目标实体在TopN的元组个数随网页片段个数的变化图8公司数据集目标实体在TopN的元组个数随网页片段个数的变化越接近实体本身的关系图,我们的算法也就越有效.图7和图8分别展示了不同的排序算法在书本数据集和公司数据集上目标实体排名在TopN的元组数目随着网页片段数量的变化而变化的情况.从这两个图可以看出,本文的算法能够很好地把目标实体排在第一,这对于数据库缺失值修复是很重要的,因为通常人们采用排名最靠前的候选实体来修复数据库.对于需要多个目标实体来修复数据库的情况,比如,一本书有多个作者,Top3和Top5的排名则Page11具有指导作用.Top10的排名则指示了排序算法能够把目标实体返回供用户选择的能力.3个排序算法的效果随着网页片段数的增加而得到提升,本文算法的提升效果优于其余两种排序算法.注意到,3个算法在公司数据集中目标实体排在Top10的元组数的变化曲线几乎重叠,这是因为前面已经提到过的原因,即公司数据集所对应的网页片段集本身能提供较为精确的信息,但在Top1、Top3和Top5上,本文的排序算法还是具有优势,这说明了本文算法的整体的排序效果较好.6总结和展望本文针对大数据环境下,利用互联网数据修复关系数据库中缺失值的问题,提出了一个上下文相关的实体排序算法CER.该算法首先通过完整属性值构建合理的查询并抽取Web实体,然后根据实体的关联特征构建图模型,最后用指定入口的随机游走思想迭代计算,为候选实体进行排序.实验证明,相较于基于频率统计和基于权值叠加的实体排序方法,本文算法能提高缺失值修复的准确率.在图模型中,实体间的影响直接关系到最终实体的排名,如何更高效合理地细化实体间的影响有待进一步研究.
