Page1一种容三盘失效纠删码的单数据盘失效快速重建方法邱丽娜王芳李楚(华中科技大学计算机学院武汉430074)(武汉光电国家实验室武汉430074)(教育部信息存储及应用实验室武汉430074)摘要现代存储系统采用纠删码避免因磁盘故障导致的数据丢失,提高系统的可靠性和可用性.因容三盘失效纠删码,如TP编码和STAR编码,可同时容忍系统中任意3个磁盘损坏,可靠性超过RAID6编码,故而受到越来越多的关注.针对发生频率最高的单盘故障实现快速重建恢复数据服务,尚未得到有效实现.重建方案有多种,选择何种重建方案会影响重建性能甚至影响前端服务的响应时间.传统的单盘重建方法不仅耗时良久而且会造成带宽的浪费.针对单盘重建中传统方法的缺点,提出一种均分机制方法,利用处于“均分状态”的重建校验集合推理出单盘重建时所使用的数据量的最优解从而找出最佳重建方案,减少磁盘I/O时间,以加速重建过程.测试结果表明与传统方法相比,均分机制方法减少TP编码25%~30.6%和STAR编码30%~33.64%的磁盘读数据量,使重建时间显著减少;且在不同的数据块和不同的磁盘个数时,均分机制方法的重建性能均优于传统方法.关键词磁盘阵列;可靠性;磁盘损坏;重建算法1引言现代存储系统在存储数据时不仅会将数据条带化处理以提高访问性能,还往往存储冗余信息以保证系统可靠性和数据的可用性.备份和纠删码是构成冗余信息的两种方式,因备份会造成存储空间的极度浪费,纠删码成为存储冗余信息的优选,相关研究也层出不穷.长期以来,针对容两盘错的RAID6编码的研究占据了主流.但随着分布式文件系统的广泛应用和存储规模的扩大,传统RAID6方案已满足不了需求.容三盘错的纠删码,如STAR编码[1]、TripleParity[2](TP)编码和扩展的EVEVODD编码[3],可以向系统提供高于RAID6方案的可靠性,使系统即便在三个存储节点的数据同时失效时也能利用幸存节点上的数据恢复所有失效数据.由于Chen等人[4]指出磁盘失效的发生不是独立存在的,一旦出现第1个失效磁盘,其它磁盘失效的概率会大大增加,更多磁盘失效会随后发生,这极大地提高了失效磁盘的总数超出系统容错能力的概率,一旦系统中失效磁盘的个数高于它们的容错级别时,系统将不可修复,数据会永久丢失.因此,当系统中出现第1个磁盘失效时,需要尽快修复至正常状态.现阶段关于容三盘失效纠删码的研究[1-3]大多关注于创建新的编码、解码规则来降低计算复杂度和更新数据时的复杂度,很少关注单盘失效时的快速重建.另外,尽管单节点失效的快速重建已经得到充分的研究,但大部分是基于RAID6编码方法的,很少有针对容三盘失效纠删码的重建研究.例如,RDOR[5]方法是为RDP[6]的单节点失效所设计,PDRS[7]是为P-Code[8]和X-Code[9]所设计等.Wang等人[10]提出了类似的方法.Zhu等人[11]解决使用RAID6编码的异构环境下的单点故障快速重建问题.NCCloud[12]中的F-MSR(FunctionalMinimum-StorageRegeneratingCode)编码能够快速重建网络存储中的单点故障,但它的容错能力和存储性能仍是RAID6级别的.面对容三盘失效的编码在单盘出错的情况,也有一些相关方法,但这些方法均不是最佳的.采用传统方法重建时会从磁盘上反复读取已读取过的数据,数据有效利用率低,重建时间长.Khan等人[13-14]提出枚举所有重建方案以得到最佳重建方案(即从磁盘读取数据量最少的方案),但求取最佳方案的过程耗时巨大,尤其是当存储系统中节点数目较大时.单盘失效时系统需要以最快的速度重建的另一个重要原因是多数情况下,重建时,系统仍需要响应来自用户的请求.用户读/写请求会与重建进程I/O请求竞争磁盘I/O,不仅导致重建过程延长,而且用户请求相应时间也延长,降低了服务质量.因此,为了尽快向用户提供高质量的服务减少用户的不满意度,单节点失效时需要尽可能地减少重建时间,使系统尽快恢复至正常状态.容三盘失效的编码系统中有3种校验方式,传统方法只使用其中的一种校验方式进行重建计算.事实上,同时使用3种校验方式重建会找到最佳重建方案,提高数据有效利用率.最佳重建方案需要从磁盘读取的数据量(即最小数据量)不能直接求得,但可以推导出范围.基于以上发现,我们提出均分机制方法,经过数学分析和推理定位最小数据量的取值范围,依次经过启发式搜索快速返回最佳重建方案,从而TP编码在重建时从磁盘读取的数据量减少大约25%~30.6%,减少磁盘I/O时间,使系统快速重建至正常状态.该方法同样适用于STAR编码、通用EVENODD编码等常用的容三盘错的编码系统.2相关研究2.1定义本文中我们按照Plank使用的编码术语来描述[15].假设一个由n个磁盘构成的存储系统,其中k个磁盘存储原始数据,剩余的n-k个磁盘存储校验数据.每个磁盘容量相同,划分成多个由w个元素组成的条带单元,每个元素代表一定数量的数据块.在该磁盘阵列中,所有磁盘上位于相同偏移的不同Page3条带单元构成一个条带,如图1所示.在一个条带内部,数据元素根据一定的编码规则生成相应的校验元素,它们共同组成一个校验组.数据的编解码是以条带为单元进行的,不同条带间编解码相互独立.不失一般性地,在讨论最佳重建方案时我们假设磁盘阵列只包含一个条带,用一个R行n列的阵列,即R×n阵列描述此单一条带内部结构.图1TP的对角线校验和反对角线校验的编码规则2.2容三节点失效纠删码本文主要研究TP编码和STAR编码的单点失效快速重建,因为相比其它纠删码,TP和STAR的编码和解码复杂度非常低,而这是影响人们选择同一级别的纠删码的重要因素.TP编码是由RDP编码衍生出来的,它包含3种斜率的校验:行校验、对角线校验和反对角线校验.在采用TP编码的系统中,一个条带可以用(p-1)×(p+2)阵列来描述,p是大于2的素数.图1描述的是在p=5时,由7个磁盘构成的系统中单一条带的示意图,前4列代表数据盘,后3列分别代表行校验、对角线校验和反对角线校验的校验盘.为方便表述,用Di,j表示位于第i行,第j列的数据元素,其中0ip-2,0jp-2;Bi,v表示位于第i行,第(p-1+v)列的校验元素,其中0ip-2,0v2.实际上,当v=0或1时,Bi,v所在的校验组的斜率是v,Bi,v代表行校验元素或对角线校验元素;当v=2时,Bi,v所在的校验组的斜率是-1,Bi,v代表反对角线校验元素.我们将Bi,v所在的校验组称为Bi,v校验组.行校验的编码规则是由同一行的数据元素异或计算出行校验元素,如D0,0+D0,1+D0,2+D0,3求得B0,0.对角线和反对角线校验的编码规则如图1所示.STAR纠删码的编码规则与TP类似,但STAR中的条带是(p-1)×(p+3)阵列,且STAR的行校验元素不像TP编码中那样参与计算对角线/反对角线校验元素.2.3相关研究当磁盘阵列中的失效磁盘为校验盘时,校验盘上的校验信息可以按照最初计算的过程再次求解,这是唯一的方法,没有优化的空间.本文关注的是失效数据盘的单盘快速重建方法.(1)传统重建方法.传统方法读取行校验元素和同一校验组下有效的数据元素,经过异或运算,求得失效的数据元素,失效条带单元上的所有数据元素都根据此过程重建.以图1为例,假设数据盘D0失效,4个数据元素D0,0,D1,0,D2,0,D3,0的数据失效.恢复D0,0的数据,传统方法从磁盘上读取D0,1,D0,2,D0,3和B0,0进行异或运算;类似地,恢复D1,0的数据,传统方法从磁盘上读取D1,1,D1,2,D1,3和B1,0进行异或运算;恢复D2,0的数据,传统方法从磁盘上读取D2,1,D2,2,D2,3和B2,0进行异或运算;恢复D3,0的数据,传统方法从磁盘上读取D3,1,D3,2,D3,3和B3,0进行异或运算.重建整个条带,需要从磁盘读取的数据量是16个元素(包含数据元素和校验元素).传统重建方法只使用行校验一种校验方式,忽略了在容三盘出错纠删码中一个数据元素受到多个不同的校验组保护的现象,不是一种高效快速的重建方法.当采用多种校验方式来重建时,不同校验方式的校验组之间共同包含的数据元素只需读一次,可有效地减少磁盘数据读取量.(2)枚举法.枚举法基于编码的产生矩阵列出所有可能重建方案,从中取出最佳的方案.这种方法对任何级别的基于异或运算的纠删码均适用.以图2为例说明枚举法的详细步骤.图2描述了TP(p=5)通过产生矩阵生成校验的规则.产生矩阵和数据元素表示的列向量相乘求得编码向量.阴影小方格表示取值1,白色小方格表示取值0.假设磁盘D0失效,需要重建其上的4个数据元素Page4D0,0,D1,0,D2,0,D3,0.枚举法使用重建方程减少重建所需元素的数目.重建方程由一组元素组成,这些元素对应于产生矩阵中的行向量的异或值为0.例如D0,0,D0,1,D0,2,D0,3和B0,0所在的行向量的异或值为0,故它们组成一个重建方程.我们可以使用重建方程中其余幸存的元素来恢复任意一个失效元素.例如,当D0,0失效时,D0,1,D0,2,D0,3和B0,0通过异或运算可以恢复D0,0.需要注意的是,D0,0可与其它元素组成重建方程,故也可通过其它重建方程重建.当重建失效磁盘D0时,首先根据产生矩阵,枚举出所有的重建方程,然后按以下步骤恢复D0上失效元素:给出4个集合E0,E1,E2和E3,Ei是失效元素Di,0(0i3)所在的所有重建方程组成的集合;从每个Ei中选取一个重建方程ei使得所有ei组成的并集中元素数目最少.本例中,通过枚举法获得的一个最佳重建方案如下:①e0:D0,0,D0,1,D0,2,D0,3,B0,0②e1:D1,0,D1,1,D1,2,D1,3,B1,0③e2:D2,0,D1,1,D0,2,B3,0,B2,1④e3:D3,0,D2,1,D1,2,D0,3,B3,1e0,e1,e2和e3的并集除去4个失效元素D0,0,D1,0,D2,0,D3,0和4个公共元素D1,1,D0,2,D1,2,D0,3共有12个元素,使用这12个元素可以完成磁盘D0的重建.然而,枚举法需要列出每个失效元素的所有重建方程,之后通过枚举求出使得恢复各个失效元素的重建方程的并集中元素个数最小的组合.当磁盘个数增加时,重建方程的个数指数增长,耗时巨大.通常情况下,使用枚举法找最佳重建方案的问题是NP问题.3均分机制方法TP编码规则的图解如图1所示,求解校验的数学公式表述如下(〈〉代表模p运算):Bi,v=∑p-2Bi,v代表位于第i行,第(p-1+v)列的校验元素,“+”和“∑”表示异或运算.单个磁盘失效时,表现为存储在其上的条带单元上的数据不可用,重建需要恢复该条带单元上(p-1)个数据元素.每个失效的数据元素可以通过将其所在的校验组中其余幸存的元素进行异或运算而恢复.因此,我们的目标是选取(p-1)个合适的校验组,既可以将失效元素全部重建,又可以使重建成本最小,重建速度最快.传统方法选取的是(p-1)个行校验组,根据式(1)可知,(p-1)个行校验组包含的数据元素和校验元素的个数之和(除去失效元素)为N=(p-1)×(p-1),且这(p-1)个行校验组彼此不相交,彼此没有公用的数据元素.然而某些校验组之间拥有公用的数据元素,若选取合适的满足重建要求的(p-1)个校验组(不仅限于行校验组),使这些校验组之间的交点最多,则从磁盘上需要读取的元素的总数R会达到最小,数值为(N-交点总数∑).下面,我们分析影响交点个数的因素.从式(1)和式(2)得出,对所有的j=0,1,…,p-2来说,都满足如下现象:每个行校验组Bi,0包含一个数据元素Di,〈j-i〉∈Bj,1对角线校验组,每个对角线校验组Bi,1包含一个数据元素Dj,〈i-j〉∈Bj,0行校验组.因此,每个对角线校验组Bi,1(i=0,1,…,p-2)与每个行校验组Bj,0(j=0,1,…,p-2)均相交于一个数据元素,交点有且仅有一个,我们把相交的元素称为公共块.同理,每个反对角线校验组Bi,2(i=0,1,…,p-2)与每个行校验组Bj,0(j=0,1,…,p-2)也均有一个公共块.而并非每个对角线Page5校验组Bi,1与每个反对角线校验组Bj,2均相交,当i和j的关系满足公式时,两者相交于编码结构的虚拟行第p-1行,产生的交点称作虚拟公共块.由于虚拟公共块不是真实存在的,求交点总数时应减去它们的个数.同一类型的不同校验组之间彼此不相交,例如所有的对角线校验组彼此之间不存在公共块.假设我们选取的用以重建的校验集合为包含(p-1)个校验组的集合,其中有α个行校验组,β个对角线校验组,γ个反对角线校验组,且有α+β+γ=p-1.由于任意一个行校验组同任意一个对角线校验组产生一个公共块,则α个行校验组与β个对角线校验组产生α×β个公共块;由于任意一个行校验组同任意一个反对角线校验组产生一个公共块,则α个行校验组与γ个反对角线校验组产生α×γ个公共块.由于对角线校验组和反对角线校验组并不总是产生有效的公共块(即会产生虚拟公共块),产生虚拟公共块的对角线校验组和反对角线校验组的组合个数为η,且0η(p-1)校验组和γ个反对角线校验组产生的公共块总数至少为β×γ-η.值得注意的是,有些公共块是3个校验组的交点,由集合理论知应从中减去这类公共块的个数才得到正确的交点总数.因此我们得出式(4),R表示重建单条带所需的元素总数(也可称为数据量).R(p-1)×(p-1)-(αβ+αγ+βγ-η-)(p-1)2+(α+β)2-α烐烏烑β(p-1)2+3=22式(4)推算出单条带的单盘重建时,需要从磁盘上读取的元素总数R的下界.当α,β,γ的值彼此接近时,R的取值会无限逼近下界2α+β+γ=p-1,故p-1们重建策略选取3类校验组个数α、β和γ的值彼此接近的策略,我们定义同时包含3类校验组且每种类型的校验组个数彼此接近的重建校验集合为处于“均分”状态下的重建校验集合.单盘失效情况下,为使从磁盘读取的用以重建的数据量R尽可能最小,重建时采用的校验集合是B3n+v,v,其中v=0、1或2,03n+vp-2.我们选取的校验集合中,任意一个对角线校验组和任意一个反对角线校验组均不满足式(3),所以不存在虚拟公共块.接下来分析采用3类校验集合重建时,R的值是否可以确定下来.若3个校验集合B3n,0,B3m+1,1,B3l+2,2在第y列有个公共块,由式(1)和(2)得出,3n≡3m+1-y≡3l+2+y(modp).因此,2y≡6(m-n)+2≡3(m-l)-1(modp),继续推导出n-l≡m-n+1(modp).由于0m,n,l<p/3-p/3<n-l,m-n<p,则n-l=m-n+12n=m+l+1,且m+l的和必须是奇数.若m的值固定,令K=p-13.则(m,n,l)的取值有两种情况:(1)0m<nlK,(2)0l<nmK.若0m<nlK,满足2n=m+l+1的(n,l)对的个数不大于(K-m-1)/2+1;若0l<nmK,满足2n=m+l+1的(n,l)对的个数不大于(m+1)/2.因此,满足等式2n=m+l+1的(n,m,l)取值的个数为∑K由式(5)知,的取值只跟p的取值有关.且有单节点故障情况下,重建单条带需从磁盘读取的数据量R满足以下公式:R=(p-1)(p-1)-(αβ+αγ+βγ-)<(p-1)2-(K2+K2+K2)+1<1318p2+31其中(p-4)/3<K(p-1)/3.传统方法中,仅仅使用一类校验组来重建单条带中的失效的数据条带单元时,从磁盘读取的数据量是N=(p-1)2个元素;由式(4)和(6)知,若使用3类校验组且每种类型的校验组个数彼此接近时,R的取值介于Rlow=2N/3和Rhigh=13N/18之间,与传统方法相比降低了27.8%~33.3%.事实上,虽然从磁盘读取的数据量的最小值R不能直接确定,但由于m=0Rhigh相对Rlow增长了8.33%,取增长率的平均值w=4.2%来确定R的平均值Ravg,以此作为在单条带的单节点快速重建情况下,从磁盘读取的数据量的最优解.在容三盘纠删码存储系统中单盘失效的Page6情况下,同时使用行校验组,对角线校验组和反对角线校验组3类校验组进行重建,且3类校验组的个数彼此接近,这是均分机制方法的基础,也是核心.由于重建校验集合处于“均分”状态是该重建校验集合是最佳重建校验集合的必要不充分条件,因为有些均分校验集合不能完全覆盖所有失效的数据元素而不足以用来重建.在提出均分机制方法的具体算法之前,首先探讨失效的数据元素被哪几种校验组覆盖.在一个(p-1)×(p+2)的TP编码的条带中,假设第k(0kp-2)列的条带单元失效,其包含的p-1个数据元素Di,k(0ip-2)需要恢复.定义重建校验集合π={xi|0ip-2,xi=0,1or2}描述重建方案,xi表示在重建失效的条带单元所包含的第i行数据元素时,需要使用该数据元素所在的何种类型的校验组.若xi分别取值0、1和2,则分别代表需使用该数据元素所在的行校验组,对角线校验组和反对角线校验组恢复该数据元素的数据.引理1.(1)若i=p-1-k,失效的数据元素Di,k可以使用其所在的行校验组Bi,0和其所在的反对角线校验组B〈i-k〉,2恢复失效数据.(2)若i=〈k-1〉,失效的数据元素Di,k可以使用其所在的行校验组Bi,0和对角线校验组B〈i+k〉,1恢复失效数据.(3)若i≠p-1-kandi≠〈k-1〉,失效的数据元素Di,k可以使用其所在的行校验组Bi,0,对角线校验组B〈i+k〉,1和反对角线校验组B〈i-k〉,2任意一种恢复失效数据.情况(1)和情况(2)的存在是由于这些失效数据元素正好位于不参与计算校验的缺失对角线或缺失反对角线上,这些数据元素只参与计算到两种类型的校验组中,受两个校验组的保护.情况(3)是大多数情况,这些数据元素参与计算3种类型的校验组而受3种校验组的保护.对单一条带的(p-1)个数据条带单元而言,除第0列的条带单元的所有数据元素均受3个校验组保护,其余列的条带单元均会有且仅有两个数据元素分别满足情况(1)和情况(2)的情况,其余(p-3)个数据元素满足情况(3)而受到3种校验组的保护.下面依据引理1举例验证校验组的可行性.假设图1表示的存储系统中编号为k=1的磁盘因软硬件故障而失效,反映到图1为编号为D1的条带单元失效,有D0,1、D1,1、D2,1、D3,14个数据元素需要恢复.D0,1由于i=0=〈k-1〉,根据情况(2)只能通过行校验组B0,0和对角线校验组B1,1恢复,在重建方案中x0=0或x0=1;D1,1和D2,1符合情况(3),均能通过3种校验组恢复,它们分别是B1,0、B2,1、B0,2恢复D1,1和B2,0、B3,1、B1,2恢复D2,1,在重建方案中x1和x2的值均可取0、1或2中任意一个;D3,1由于i=p-1-k,根据情况(1)只能通过行校验组B3,0和反对角线校验组B2,2恢复,在重建方案中x3=0或x3=2.给出一条重建校验集合π0={2001},尽管π0处于“均分”状态,但基于引理的分析,π0是非可行的,不足以重建失效条带单元中的所有元素,因此该集合绝非最佳重建方案.若重建校验集合处于“均分”状态且可行并且依据该校验集合从磁盘读取的数据量等于Ravg,则该校验集合是最佳重建校验集合.算法1给出求解最佳重建校验集合的算法.算法1.均分机制方法(EDS).输入:素数p,失效节点的编号k输出:最佳重建校验组1.InitializeN=3p-1,sign=true2.step:3.FORi=0toN4./计算重建校验组S/5.convertiintoanintegersequenceS6./检验重建校验组S是否处于“均分”状态且可行/7.IFFilter(S,k)==falseTHEN8.GOTOstep9.ENDIF10./计算重建校验组S需要从磁盘读取的元素的个11.computeR=numberofelementreadsforS;12./检验R是否小于等于最优解Ropt/13.IFR<=RoptTHEN14.RETURNS;15.ELSE16.GOTOstep;17.ENDFOR.4性能评估本节首先实现了TP编码单盘失效重建的均分机制方法、枚举法和传统法,并对均分机制方法和枚举法在搜索到最优重建校验集合过程中所消耗的时间和各自最优重建校验集合在重建时从磁盘读取的元素数目进行对比.实验还对比了均分机制方法和Page7传统法从磁盘读取的元素数目的差异,并与理论分析的最小值进行对比.为了证明均分机制方法的有效性,即它能通过减少重建过程中元素的读取数目,减少磁盘读数据量,而减少重建过程的总时间,实验对比测试了均分机制方法和传统方法在重建相同数量的数据情况下所花费的时间.为了验证算法适用性,同时对TP编码和STAR编码进行测试,并测试在不同大小的条带单元和不同个数的磁盘数目时的重建时间.另外,为了验证均分机制方法对在线重建的适用性,实验测试了TP编码和STAR编码在不同负载下的重建时间.实验选取了来自多个国际企业数据中心的5种工作负载①:financial1(fin1),financial2(fin2),websearch1(web1),websearch2(web2),web-search3(web3).两个financial的I/Otrace来自于两个大型财务公司的在线交易处理软件,3个websearch的I/Otrace来自于一个广泛应用的搜索引擎.这些trace被广泛应用于各项研究[16-17].4.1实验设置及测试方法搜索性能评估和重建数据量评估实验在配置为IntelXeonE56202.4GHzCPU和4GBRAM的Linux服务器上进行.DiskSim[18]是卡耐基梅隆大学研发的磁盘系统模拟器,广泛应用于存储系统结构的各项研究中.本节中重建性能评估用DiskSim模拟磁盘访问,所模拟的磁盘规格为15000-RPM的SeagateCheetah,容量146GB.测试TP编码时,使用(p+2)个磁盘;测试STAR编码时,使用(p+3)个磁盘.重建过程是在离线模式下进行,即在重建过程中没有来自前端访问的请求.磁盘上的所有数据根据相应的编码规则条带化存放于各个磁盘.在衡量重建性能时,我们以重建每MB数据所消耗的时间作为标准.测试方法如下:首先将TP编码和STAR编码的均分机制方法和传统方法均实现到DiskSim环境中;重建每个条带时,内存一旦计算完毕失效条带单元的数据,便立即将它们写入备份的数据盘.为了确保实验结果的可信性,获得每个重建时间均执行4次程序,每次均在所有数据磁盘上执行一遍,即假定所有数据盘失效的概率是相等的.例如TP编码(p=7),一共有6个数据磁盘,在求取单盘失效的重建时间时,一共执行了4×6次操作,然后在24次结果上取平均作为最终结果.实验过程中,我们假定每个元素由一个数据块构成,且数据块的大小通常会较大.这是由于现代的分布式系统中往往对大数据块进行操作,例如GFS[19]使用数据块的大小是64MB.4.4节将描述数据块的大小对重建性能的影响.4.2搜索性能评估本文针对均分机制方法和枚举法返回最佳重建序列的搜索时间进行测试,结果如表1所示.枚举法无法预先锁定最佳重建校验集合所处的状态,随着p的增长,重建方程的数目爆炸式增长且枚举法需要枚举出所有重建方程的组合才能确定下来最优的组合,导致搜索时间指数攀升.均分机制方法预先将最佳重建数组锁定在处于均分状态且可行,且由于从磁盘读取的最佳数据量已确定,当符合以上条件的重建校验集合出现时立即停止搜索,作为最佳重建校验集合返回.与枚举法相比,均分机制方法的搜索时间大大减少.当p17时,枚举法的搜索时间较短;当p=19时,枚举法需要花费超过18min的时间找到最佳的重建数组;当p=23时,搜索时间接近2天3个小时.当p23时,搜索到最佳重建数组所花费的时间最多不超过5s,大部分是ms数量级.p时间(Enumeration)时间(EDS)5711131719234.3重建数据量评估首先使用仿真实验比较重建时分别使用传统方法,均分机制方法从磁盘读取数据量,并与数据量的下界对比,结果如图3所示.当p<40时,均分机制方法所需的数据量与下界十分逼近.图3TP编码单条带重建时所需从磁盘读取的元素的数目①http://traces.cs.umass.edu/index.php/Storage/StoragePage8为了验证均分机制方法的有效性,我们也评估了枚举法与传统方法相比的节省量,实验结果如图4所示.当p=5和p=11时,均分机制方法的表现和枚举法一样优,均能达到最佳重建数组.当p取其它值时,均分机制方法达到次优解,但与枚举法的最优解的差异仅在0.7%~2.8%之间.与传统方法相比时,均分机制方法节省了25%~30.6%的元素读取量;枚举法节省了25%~31.5%的元素读取量.若系统中单个节点的容量是1TB,共有13个磁盘(p=11),其中有10个数据盘.单节点失效重建时,采用传统方法从磁盘读取数据共10TB,而采用均分机制方法从磁盘读取数据只需6.9TB.目前磁盘I/O速度为100MB/s,为了不影响前台服务,重建速度配置为30MB/s时,采用均分机制方法重建可因少读取3.1TB的数据使得重建时间减少2.87h(3.1×106/(10×30×3600)),这里假设读磁盘的过程为并发多线程读,且所有磁盘读的时间相等.均分机制方法使得从磁盘读取的数据量大幅减少,加速了重建过程,大大提高了重建性能.图4TP枚举法和均分法重建时所需元素的数目使用STAR编码的存储系统在单节点失效时,也可采用均分机制方法进行最优重建校验集合的查找.我们也评估了STAR编码分别使用均分机制方法和枚举法的重建性能,并与传统法进行比较,结果如图5所示.总体来看,均分机制方法和枚举法的表现非常接近,按照两者寻找到的最佳重建数组重建时从磁盘读取的数据量(每条带)与传统法比分别节约30%~33.64%和33.33%~35.71%.如图5,p=7时,虽然均分机制方法节省的百分比相较于枚举法少5%,但事实上两者的最优重建数组所需的数据量仅仅相差1.当p越大时,均分机制方法的表现越趋于枚举法,能找到全局最优的重建校验集合.图5STAR枚举法和均分法重建时所需元素的数目4.4重建性能评估实验1.数据块的大小对性能的影响.实验时我们固定p的值,假定p取值分别为7、13和19,每个p对应一定的磁盘数目,选取不同大小的数据块,从512KB变化到8196KB,来评估数据块的大小对重建性能的影响.图6(a)和(b)分别表示使用传统方法和均分机制方法重建每MB数据所消耗的时间,实验结果表明数据块大小在512KB到8192KB间变化时,均分机制方法均优于传统方法,即重建相同的数据耗时更短.当数据块的大小增加时,每MB数据的重建时间会减少,并且减少的速率随着数据块的增加而变缓.因此我们预测当数据块的大小增加到一定数值时,每MB数据的重建时间趋于某一稳定值.如图6所示,TP和STAR的传统方法和均分机制方法均符合上述趋势.实验2.磁盘个数对重建性能的影响.我们分别测试了TP和STAR在不同p对应的磁盘个数下的重建性能.实验时我们固定数据块的大小,假定数据块大小取值分别为512KB、1024KB和2048KB,选取不同的素数p,依次为7、11、13、17和19,来评估磁盘个数对重建性能的影响,实验结果如图7所示.对TP编码和STAR编码来说,与传统方法相比,均分机制方法均减少了每MB数据的重建时间,这是由于均分机制方法能显著减少重建过程中从磁盘读取的数据量.以TP编码为例,数据块大小为512KB时,每MB数据重建时间减少6.00%~19.3%;数据块大小为1024KB时,每MB数据重建时间减少22.1%~27.3%;数据块大小为2048KB时,每MB数据重建时间减少24.5%~29.0%.图7(b)表示STAR编码的测试结果,使用均分机制方法重建时每MB数据的重建时间明显减少,说明均分机制方法对STAR编码同样适用.Page9图6数据块的大小对重建性能的影响图7磁盘个数对重建性能的影响Page104.3节显示TP编码减少25%~30.6%的读数据量,STAR编码减少30%~33.64%的读数据量,但在4.4节的实验1和实验2中,读数据量减少的百分比没有完全转化为重建时间减少的百分比,这是由于均分法改变了磁盘顺序读的特性,使得磁头在寻道和旋转上有一定的延迟.但这种影响细微,尤其数据块较大时.总之,重建性能评估实验说明对图8不同工作负载下的重建性能图8(a)表示TP编码的在线重建性能.离线重建时,重建每MB数据均分法比传统法节省了26.2%的时间;在线重建时,对所有的trace而言,重建每MB数据均分法仍比传统法的重建速度快,节省27.4%~32.0%的时间.从图8(a)看出,当采取传统法重建时,在线重建速度比离线重建速度要慢,这是由于在线重建时,重建I/O和前台应用程序的I/O共同竞争磁盘带宽,传统方法重建时从磁盘读取的数据量大,因此强烈的竞争导致重建速度明显放缓.而采取均分法重建时,虽然重建I/O和前台应用程序的I/O也会竞争,但由于均分法大大减少了重建I/O使得竞争激烈程度降低,因此在线重建的速度减缓程度较小.图8(b)表示STAR编码的测试结果,使用均分法在线重建仍能明显加速重建速度,说明均分法对STAR编码在线重建同样适用.5结论和进一步研究本文提出了一种新型的均分机制方法,旨在解决容三盘失效纠删码在单盘失效时快速重建的问题.该方法能快速地为TP编码和STAR编码等容三盘出错纠删码寻找到最佳重建校验组,从而使得重建时从磁盘上读取的数据量大大降低.由于磁盘TP和STAR而言,不同的数据块和不同的磁盘个数,在重建性能上均分法均优于传统方法.实验3.在线重建性能测试.实验时,我们选取元素大小为1024KB的TP(p=13)和STAR(p=13)做代表来测试每MB数据的重建时间,以此衡量在线重建的性能,实验结果如图8所示.读在重建过程占据大部分的时间,最优重建校验组由于大大减少磁盘读的时间,会加速重建过程.本文首先给出满足最优重建校验组的充分必要条件,即处于均分状态且可行且从磁盘读取的数据量最少;在此基础上给出均分机制方法的算法步骤.实验表明,均分机制方法能返回与枚举法相当的最佳重建校验组,并且与枚举法相比,搜寻时间大幅度减少.理论分析表明,与传统方法相比,均分机制方法在重建读磁盘时减少了27.8%~33.3%的数据量.实验表明与传统方法相比,均分机制方法在重建时间方面有明显的优势.下一步工作主要包括对均分机制方法处于实际系统时进行重建时间的评估,并把它实现到分布式存储系统中观察性能.我们计划做更多实验,以便更加全面和合理地验证均分机制方法的有效性.
