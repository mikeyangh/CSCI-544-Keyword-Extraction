Page1一种位置服务测试数据生成技术研究侯可佳黄军白晓颖周立柱(清华大学计算机科学与技术系北京100084)(清华大学信息科学与技术国家实验室北京100084)摘要随着移动互联网的高速发展,移动服务越来越成为人们生活、工作中不可或缺的一部分,绝大部分移动服务都要以用户的位置信息为基础,位置服务(Location-BasedServices,LBS)则通过调用GPS等服务在确定用户位置的基础上,向用户提供导航、服务推荐等功能.位置服务的基础性使得其正确性和完整性至关重要,同时其开放性和复杂性对测试提出了更高的要求.文中以反地理编码服务为例,探讨了位置空间测试数据的生成方法.基于模拟退火算法(SimulatedAnnealing,SA)的优化过程,提出了两种适应度函数定义方法,一种是基于有效点密集区假设,以提高位置空间覆盖率为优化目标;另一种是基于LBS故障模式假设,以提高潜在故障的检测能力为优化目标.研究引入了贝叶斯分类器,将预测值作为探索点的能量值,指导搜索过程.研究选取了实际应用的位置服务平台进行了实验验证,实验表明,与简单随机算法相比,该方法在可容忍的时间代价下,可以有效提高测试效率和错误检测能力.关键词移动平台服务;位置服务;朴素贝叶斯理论;数据生成;模拟退火算法1引言移动云计算作为一种计算模型,能够实现对移动设备计算能力透明、弹性的扩展,通过无处不在的无线网络访问云存储和计算资源[1].移动云计算为用户提供了强大的计算及数据存储能力,降低了对移动计算终端在计算能力和存储能力等方面的要求,拓展了移动终端的业务范围.由于移动计算终端的移动特性,使得位置信息成为各种移动应用正常运行的基础,移动应用能够利用用户的位置信息为用户提供路径导航、服务推荐等功能.目前,很多移动平台均提供开放的位置服务(LocationBasedService,LBS),例如在国内得到广泛应用的Baidu、Tencent和Amap等,每个服务提供商均面向Web和手机终端提供两种不同的接口服务.不同服务提供商提供的服务之间以及同一个服务提供商提供的两种不同服务版本之间,均可能存在较大差异.不同服务提供的位置查询服务在查询范围和精度上会存在差异,例如服务可以提供在某个矩形或者圆形区域的位置查询,或者提供在某个行政区域划分内的位置查询.移动应用的位置服务质量也会在正确性、完整性、时效性等方面存在较大差异[2-3].我们用1000组随机生成的位置数据对上述服务提供商所提供的位置服务进行了初步测试,通过对比发现:对于任意两个服务,其结果均存在显著差异(差异能达到10%以上).移动位置服务具有如下特性:(1)位置服务需要具备快速响应能力.当用户在移动过程中使用应用服务时,位置服务必须能够实时显示出用户的位置变化.(2)位置服务必须能够提供轻量级的数据信息.移动终端的屏幕、内存均比较小,移动通信网络带宽窄并且费用昂贵,因此位置服务提供的位置信息必须进行压缩和精简,去除不必要的信息,为用户节省费用及等待时间,提高用户使用体验.位置服务的基础性,使得其正确性和完整性至关重要,同时,平台服务的开放性和复杂性又对传统的测试技术提出了新的挑战:(1)位置服务测试工作量大.位置服务具有广阔的输入空间,即使在一个较小的区域内,仍然存在无数个不同的位置点,因此,如何定义地理区域覆盖率,如何生成和选择优质的测试数据以发现更多的软件缺陷,就成为位置服务测试的一个难题.(2)位置服务的运行结果难以评价.位置服务的运行结果依赖于服务的位置信息数据库,数据库为位置点存储与之对应的经纬度地理编码、行政地址编码等相关信息,数据库的正确性和完整性将直接影响位置服务的运行结果,测试人员无法获得完整、准确的数据库信息,因此难以对位置服务的运行结果进行评价.(3)位置服务需要持续在线测试.由于位置地理信息的不断变化,位置服务需要及时更新、升级.例如在城市中,某一地点的经营主体和内容会发生频繁变化,或者某个经营主体由于搬迁使其地址信息发生了变化,再如新建建筑也会使地址信息发生变化.针对上述问题,本文将位置服务的测试生成问题转化为优化搜索问题,分别以区域覆盖和故障检测为优化目标,生成一系列位置数据作为位置服务的输入参数,这些输入数据能够对区域达到一定的覆盖率要求,或者有较大概率能够发现服务的隐藏缺陷.本文提出的算法将建立在有效点聚集假设和缺陷密集假设的基础上,利用已生成数据推测未生成数据的概率,并指导搜索过程的推进.本文第2节介绍位置服务和模拟退火算法两方面的背景知识;第3节对位置服务测试问题进行形式化定义,并提出基于贝叶斯分类器的模拟退火搜索算法,利用该算法从有效点生成效率和故障探测效率两方面探讨算法的具体实现;第4节报告实验的开展和结果评价;第5节对相关工作进行总结和讨论;第6节是对本研究工作的总结讨论.2背景知识2.1位置服务位置服务,又称为定位服务,以GPS服务为基础,是一种典型的移动平台服务,服务被部署在移动云平台上,利用强大的云计算能力为用户提供位置查询、兴趣点查询、位置导航、地理编码及反地理编码等与位置相关的服务接口.目前几乎所有的移动应用程序都需要利用位置服务来辅助其完成功能,或者通过位置服务来拓展业务范围,提升服务质量.例如用户可以在聊天软件中调用位置服务确定自己所处的位置,然后发送给朋友,免去了手动输入地址的繁琐和可能出现的错误;再如移动应用可以在获取用户所处的位置后,为其按照距离远近推荐餐饮、娱乐等用户需要的服务.由此可见,位置服务已经渗Page3透到了我们生活的方方面面,为我们的工作和生活提供了便利.基于移动云计算的位置服务通过大量接口为用户提供服务,其工作过程如下:首先移动终端上的应用程序向云服务提供商发送请求来调用他们的接口;其次服务提供商接收请求,利用其强大的计算能力处理用户请求,并将结果返回给移动用户.位置服务的运行依赖于服务内部的编码数据库,该数据库中存储了物理位置信息,也就是位置的经纬度信息与行政位置信息,例如某个城市某条街道之间的映射关系,将行政位置信息转化为物理位置信息的服图1反地理编码服务2.2模拟退火算法模拟退火算法(SimulatedAnnealing,SA)[4-5]的基本思想是模拟固体退火过程.固体退火是将固体加热,使其温度达到充分高,随着温度的升高,固体内部的粒子逐渐变为无序状态,然后再将固体徐徐降温,在降温的过程中,固体内部的粒子逐渐趋于有序状态,在每个温度都达到平衡,直至常温,固体达到基础状态.类比优化搜索过程,在一定温度下,搜索从一个状态随机地变化到另一个状态,随着温度的不断降低,直至最低温度,搜索过程以接近1的概率停留在最优解.SA算法是对爬山算法[5]的优化改进,爬山算法在搜索过程中只接受更优的邻近解,直至搜索不到更优解为止,算法简单易实现,但是却极有可能停止在局部最优解.SA算法引入一个温度参数,当搜索到较差的邻近解时,利用温度参数和目标函数值之差共同确定一个概率参数,利用此概率参数决定是否接受较差的邻近解,概率参数P的定义为其中,δ为邻近解与当前解的目标函数之差,t为温度参数,该参数对应于固体退火过程中的温度,随着搜索过程的不断推进而不断减小,直至算法达到终务为地理编码服务,将物理位置信息转化为行政位置信息的服务为反地理编码服务.图1展示了反地理编码服务的一般工作过程,该服务将从GPS定位服务获取的物理位置信息,即经纬度坐标转化为相应的行政地址信息,例如经纬度坐标(29.919136379842868,117.05622844224358)指示的地点为“安徽省池州市东至县安庆高速公路”,经纬度坐标(28.30449900496494,113.93426589494133)指示的地点为“湖南省长沙市浏阳市官渡镇桃树坪”.该服务以经纬度为输入参数,这些输入参数可以手工直接输入,也可通过GPS服务获得.止条件.在温度下降足够慢时,算法找到全局最优解的概率接近1.3基于模拟退火的位置测试数据生成本文对位置服务的测试方法如图2所示,从图中可以看出,该方法将服务的运行结果作为输入数据生成的反馈信息,为进一步生成输入数据提供参考信息和指导作用.其中“位置服务平台”节点可能包含一个或多个位置服务,“服务结果评价”则根据不同的测试目的,从不同角度对服务的运行结果进行评价.“贝叶斯分类器”用来预测在某个区域中取到特定类型位置点的概率,服务运行结果和贝叶斯分类器共同为搜索的进一步优化提供指导.Page43.1问题定义对一个给定的地理区域D,S={s1,s2,…}是D中一系列位置点的集合,D的覆盖区域通过经纬度的范围来限定,即D.rangeLng=[Lngl,Lngh],D.rangeLat=[Latl,Lath],其中Lngl和Latl分别是经度和纬度的下限,Lngh和Lath则分别为经度和纬度的上限.si.lng为点si的经度值,si.lat为点si的纬度值,对于si∈S,则有Lnglsi.lngLngh,并且Latlsi.latLath.L={l1,l2,…}为一系列开放的位置服务,这些服务以位置点si为输入,我们将服务lj对于输入si的返回结果定义为R(lj,si).根据服务测试的不同目的需要为服务生成不同类型的测试数据,这些数据具有不同的属性特征,我们通过示性函数value(s)来评价数据的属性特征,函数的不同定义能够表示不同的数据属性,根据函数取值的不同能够实现对测试数据的划分.本研究的目标就是针对示性函数value(s)的某个特定取值v,以尽量少的代价生成尽量多的数据,使得value(s)=v.在算法执行过程中,已生成测试数据能够指导测试生成过程的执行,根据已生成数据s1,s2,…,sj的示性函数值来预测即将生成的数据sj+1是否同样能够满足value(sj+1)=v的要求,从而大幅提高特定数据的生成效率.3.2模拟退火算法生成过程测试生成算法对输入域进行划分,根据测试目的为位置点定义属性特征,基于朴素贝叶斯理论(NaveBayes)[6]对位置点进行分类,并计算位置点的类别概率,并利用此概率定义位置点的能量值函数,利用能量函数引导模拟退火算法的进行.假设被测服务的输入域是地理区域D,测试生成的过程如下:(1)将D等分为n×m个小的子区域,每个子域为Dij(0<in,0<jm),用Matrix(D,n,m)表示这样的划分.(2)按照不同的测试目的,为区域内的点s,定义示性函数value(s),利用示性函数定义位置点s的属性,value(s)=(3)利用示性函数定义贝叶斯分类器(NaveBayesClassifier,NBC),测试目的不同,则贝叶斯分类器的含义不同,具体含义将在后序章节的具体实现中介绍:P(Dij|value(s)=1)=∑s∈DijP(value(s)=1)=∑s∈DP(Dij)=|Dij|/|D|,P(value(s)=1|Dij)=P(Dij|value(s)=1)×(4)利用贝叶斯分类器确定在某个区域取到某一类位置点的概率,以每个位置点的概率值定义其能量值,采用模拟退火算法生成测试数据,以能量值函数作为搜索算法的目标函数,指导算法搜索过程的推进.对于区域Dij内已探索的q个点History={s1,s2,…,sq},搜索得到sq的邻近点sq+1,且sq+1∈Dij,则其能量值的定义为Energy(sq+1)=value(sq+1)×P(value(sq+1)=1|Dij),能量值的变化为ΔEnergy=Energy(sq+1)-Energy(sq).模拟退火算法根据能量值的变化来确定下一步搜索是继续在本区域进行还是进入新的未探索区域重新开始搜索.如果能量值增大,则继续在本区域搜索;如果能量值减小,则以一定概率继续在本区域进行搜索,否则在其余未探索子区域中选取Dij重新开始搜索,并且在所有未探索子区域中P(value(s)=1|Dij)最大.算法的具体过程如下:算法1.生成具有某特定属性的测试数据.输入:指定区域D,用经纬度范围表示输出:指定区域选取的若干点的经纬度值SelectasetofpointsHistory={s1,s2,…,sq}inDrandomlySelectaninitialtemperaturet>0REPEATPage5UNTILtreachedthethresholdorDissmallenough在算法1中包含3层循环,最内层循环表示在一个子域中的搜索过程,由能量值的变化来引导,每生成一个令value(s)=1的点将增加该区域的置信度,而生成一个value(s)=0的点则会降低该区域的图3算法执行示意图置信度.本层循环终止有3种情况:(1)不接受新生成的较差解;(2)在该子域中取到足够多的点;(3)在该划分层次的循环次数已达到最大限制.中间层循环表示对区域D的各个子域进行搜索,直到在D中取得了足够的点.最外层循环则是对子域进行迭代划分的过程,本层循环的终止条件包含两种情况:(1)温度参数减小到预设定的阈值;(2)区域划分细化到了预定程度.3.3以区域覆盖为优化目标的算法对被测服务输入域的覆盖分为两个算法来完成,首先是对有效点密集区的探索,该算法的目的是要尽可能多的找到有效点,有效点聚集区的确定是后续测试生成的基础,使测试生成能够直接在算法确定的有效点聚集区进行,大大提升了有效点的生成概率.如果在探索有效点聚集区的过程中已经生成了足够多的有效点,也可以直接利用这些数据对服务进行测试.利用有效点对多个位置服务接口进行测试,通过对比不同接口的返回结果,评价服务的正确性.图3为探索有效点密集区算法执行过程中一个Page6片段的示意图,图中(a)表示的地理范围最大,包含乌鲁木齐及其周边地区,将该地区划分为3×3个子域,包含有效点密集区和稀疏区,从图中可以看出,该算法能够在有效点密集区取得更多的点,从而保证生成参数的质量.图中的箭头表示搜索路径,说明对各个子域的搜索顺序.其中D21为有效点密集区,在该子域中得到的点最多,(b)即是对D21进一步划分得到的结果,在对此区域进一步划分后,能够看出在此区域仍然可以区分出有效点密集区和稀疏区,同样的,在有效点密集区能够取得更多的点.(c)显示了(a)中D33区域放大后的情况,从图中可以清楚的看出该区域为有效点稀疏区,因此不对该区域进行进一步的划分.其次是对有效点稀疏区的探索,有效点稀疏区域往往包含很少的有效点,因此服务也常常会在这样的区域遗留数据空白,导致服务数据信息的不完整.该算法的目的是尽可能广的覆盖有效点稀疏区,利用有效点稀疏区内取的点来检验服务信息的完备程度.算法认为在有效点密集区选取少量的点即可代表该区域,而在有效点稀疏区却需要选取大量的点对服务进行测试,以发现服务的潜在问题.该算法与探索有效点聚集区算法存在以下明显区别:(1)此算法搜索过程朝能量值减少的方向进行.当算法认为当前搜索区域为有效点聚集区时,则在剩余的子域中选取一个无效点概率最大,并且与当前搜索区域距离最远的区域进行搜索.(2)子区域探索完成的标准包括两种:①算法认为该区域为有效点聚集区;②算法认为该区域为有效点稀疏区,并且在该区域已探索足够多的点.3.3.1有效点聚集区假设在地球上存在人口稠密的人类聚集区,也存在人口稀疏区,这两类区域在经纬度定义方面是一致的,但在行政地址编码方面却存在着巨大差异:(1)人口稠密区域,例如城市,行政地址编码的区域粒度较小,距离很近的两个建筑通常都会有不同的地址信息,也就是说经纬度的较小改变也会使服务返回不同的输出结果,我们称这样的区域为有效点聚集区.(2)人口稀疏区域,例如沙漠、戈壁、海洋等,通常不存在行政地址编码信息,也就是说服务返回结果为空.由于这样的区域通常非常广阔,就导致相差巨大的两组输入参数也可能返回相同的执行结果,我们称这样的区域为有效点稀疏区,例如太平洋,纬度跨过151度,经度横跨177度,在这个区域内就可能生成大量导致输出结果为空的数据.(3)有效点稀疏区域也可能存在小范围的有效点聚集区,例如在太平洋中分布着众多岛屿,这些岛屿包括人口稀疏岛屿和人口稠密岛屿,人口稠密岛屿则必然是有效点聚集区,例如台湾岛就是太平洋中的一个人口稠密岛屿.区域覆盖算法建立在两个基本假设的基础上:(1)在某区域内发现的有效点越多,则该区域越有可能是有效点聚集区域;(2)有效点密集区附近的区域也极有可能是有效点密集区.3.3.2贝叶斯分类器设计区域覆盖算法主要关注服务对一个给定的点是否能够返回一个有效的地址信息,因此对于每个选定的点s,定义示性函数如下:其中s.addr为点s的行政地址编码,为被测服务反地理编码服务运行的输出结果.对于点s,如果返回的地址信息不为空,则示性函数value(s)的返回值为1,说明该点为有效点;否则为0,说明该点为无效点.根据某个点所处的区域,利用贝叶斯分类器能够预测该点为有效点/无效点的概率.为预测有效点概率,贝叶斯分类器的具体设计如下:(1)在区域D中随机选取q个点作为训练样本,并且对于划分Matrix(D,n,m),落在每个子域中的点的个数相同,即|D11|=|D12|=…=|Dnm|,并且|D11|+|D12|+…+|Dnm|=q,其中|Dij|表示在子域Dij中选取的点的个数;(2)计算样本中有效点落在区域Dij中的概率P(Dij|value(s)=1)=∑s∈Dij(3)计算训练样本中有效点的概率(4)计算训练样本中的点落在区域Dij中的概率P(Dij)=|Dij|/|D|;(5)根据以上计算,预测区域Dij中点s为有效点的概率P(value(s)=1|Dij)=P(Dij|value(s)=1)×P(value(s)=1)/P(Dij).由于无效点的示性函数值为0,因此定义无效点的贝叶斯分类器时需要借助有效点的数量,具体定义为P(Dij|value(s)=0)=|Dij|-∑s∈DijP(value(s)=0)=1-∑s∈DP(Dij)=|Dij|/|D|,Page7P(value(s)=0|Dij)=P(Dij|value(s)=0)×其中P(Dij|value(s)=0)为无效点落在D中的先验概率,P(value(s)=0)为训练样本中无效点的概率,P(value(s)=0|Dij)是区域Dij中的点s为无效点的后验概率.3.4以故障检测为优化目标的算法测试人员并没有关于全国甚至全球所有地理坐标及其行政地址编码信息的数据库,因此当服务对某一组输入数据返回执行结果后,测试人员也无法判断其结果是否正确,测试是否通过.为判定测试结果,本文引入投票机制,不同服务提供商提供的反地理编码服务具有功能上的等价性,在互联网上能够形成互为备份的容错体系架构,服务的运行结果具有可比性,用户可以对不同服务的结果进行对比判断,从中选取用户认为最优的结果.利用相同的输入数据调用不同的反地理编码服务,将这些服务的运行结果进行对比,如果所有服务的运行结果均相同,则认为这些结果均正确,如果存在不同的返回结果,则认为存在隐藏故障,需要进一步研究分析.本文将服务故障总结为以下3类:(1)SF1:对于同一个位置点x,服务A返回结果为空,认为其为无效点,而服务B返回结果为一个有效的行政地址,即认为该点为有效点;(2)SF2:对于同一个位置点x,被测服务的返回值均不为空,但服务A返回结果为服务B返回结果的子串,也就是说服务A的结果指示的行政区域较服务B的结果范围更大,而服务B的返回结果指示的地址更加精确;(3)SF3:对于同一个位置点x,被测服务的返回值均不为空,但服务A和服务B的返回结果不同,并且此错误类型不包含SF2的情况.3.4.1位置服务故障模型假设故障驱动算法要以尽量少的测试数据发现尽量多的服务潜在缺陷,我们称能够发现服务潜在缺陷的数据为缺陷数据.位置点的行政地址编码具有一定的区域连续性,例如“北京市海淀区清华大学南楼11号楼”和“北京市海淀区清华大学南楼12号楼”是位于清华大学校内南北相邻的两栋楼,地址编码也是相邻的,如果某位置服务为其中一个地点的返回结果是错误的,则为另一个地点的返回结果也极有可能是不正确的.由此我们可以为位置服务的故障模型提出如下假设:(1)缺陷密集假设,我们认为缺陷数据存在一定的聚集效应,也就是说如果点s为缺陷数据,则其附近的点为缺陷数据的概率也较高;(2)对于某个区域Dij,如果在其中找到的缺陷数据占比很低,则认为在该区域搜索到缺陷数据的概率也很低,应该转移到其他区域进行搜索.3.4.2贝叶斯分类器设计根据故障驱动算法的目的,将位置点s的示性函数定义为valueF(s)=该函数的含义为:对于给定点s及一组被测服务,如果这些服务的返回结果均相同,则示性函数valueF(s)的值为0;只要这些结果中存在差异,则函数值为1.当示性函数值为1时,说明不同服务对于同样的输入产生了不同结果,也就是说该输入点s能够发现服务缺陷,为缺陷数据.根据示性函数的定义,地图中的点可以分为两类:缺陷数据和非缺陷数据.根据某个点所处的区域,利用贝叶斯分类器能够预测该点为缺陷数据的概率.叶斯分类器的设计同3.3.2节类似,只是其中的示性函数定义不同,即P(Dij|valueF(s)=1)=∑s∈DijP(valueF(s)=1)=∑s∈DP(Dij)=|Dij|/|D|,P(valueF(s)=1|Dij)=P(Dij|valueF(s)=1)×P(Dij|valueF(s)=1)为从区域Dij中取到缺陷数据的先验概率,而P(valueF(s)=1|Dij)则是从区域Dij中随机选取一个点x,该点是缺陷数据的后验概率.3.5案例分析本节将具体介绍以上两种优化搜索算法的执行过程.将经纬度范围分别为[110,150]和[35,53]的矩形区域作为输入域,首先将该区域划分为2×2个子区域,分别为D1([110,130],[35,44])、D2([110,130],(44,53])、D3((130,150],[35,44])、D4((130,150],(44,53]),从每个子区域中随机选取25个点,共100个点对贝叶斯分类器进行训练,从中选取一个概率值最高的子区域进行优化搜索.(1)以区域覆盖为优化目标的算法利用训练数据集计算从D1、D2、D3、D4中取到有效点的概率,分别为0.07、0.09、0、0,可以看出从D2中能够取到有效点的概率最高,因此首先对D2进行进一步优化搜索.表1是从搜索过程中截取的一个片段,其中第1行,虽然返回值不为空,但在该子区域取到有效点的概率为0,因此其能量值为0;第2行则因为其返回结果为空,因此能量值为0.当Page8搜索得到的新解不被接受时,则转向下一个子区域进行继续搜索,直到达到算法要求的终止条件.步骤序号12345[110,120],(44,48.5][110,120],(48.5,53](120,130],(44,48.5](120,130],(44,48.5](120,130],(44,48.5](2)以故障检测为优化目标的算法利用训练数据集计算从D1、D2、D3、D4中取到缺陷数据的概率,分别为0.09、0、0、0,可以看出从D1中取到缺陷数据的概率最大,因此首先对D1进行优化搜索.表2是从搜索过程中截取的一个片段,其中第3行的新解被接受,由于此时已达到该子区域的采样上限,因此转向下一个子区域进行搜索;第4行的解虽然使能量值降低,但仍然被接受,这是由于模拟退火算法能够以一定概率接受较差的解.步骤序号12345[110,120][35,39.5][110,120][35,39.5][110,120][35,39.5](120,130],(39.5,44](120,130],(39.5,44]4实验与评估4.1实验设置本实验以高德AndroidLocationAPI、百度AndroidMapAPI、百度Web、腾讯AndroidMapSDK这4个位置服务为被测服务,以算法1生成的测试数据集分别调用这4个服务,通过对输出结果的比较,评价服务的正确性.算法中各参数具体取值的设定如下:(1)输入参数的取值范围,经度范围为[110,150],纬度范围为[35,53].(2)在输入域范围内随机选取的初始点集的规模为100个点,即参数q为100.(3)经过多次实验,将区域划分参数n和m的取值确定为n=m=2,此时算法能达到更加理想的收缩效果.(4)初始温度t设定为250,降温系数为0.98.(5)算法最内层循环的循环次数上限设定为100.(6)每个子域中采样点的数量上限设定为10,区域划分每一层采样点的数量上限设定为100.(7)算法终止条件中温度系数的阈值为0.05,区域划分的阈值为经度或者纬度跨度为0.05.以上循环次数以及采样点阈值的设定均考虑了移动终端以及无线网络的限制条件,将对API的访问次数控制在一个可以接受的范围内.4.2实验结果实验选取的输入域在地球上南北跨度大约为2000公里,东西跨度大约为3500公里,覆盖面积约为700万平方公里,其中包括人口稠密的城市、农村以及人烟稀少的森林、海洋等.下面总结了有效点聚集区探索算法和故障驱动算法的实验结果,实验结果基于算法的多次运行,对多次运行结果取平均值获得.4.2.1以区域覆盖为优化目标的算法贝叶斯分类器训练过程的训练数据集中包含100组数据,除此之外有效点密集区探索算法在确定有效点聚集区的过程中,共生成661组测试数据,其中包含有效点614个,无效点47个.测试数据可以从这661组数据中选取,或者可以从已确定的有效点聚集区中重新生成.由于在确定有效点聚集区时已生成大量有效点,因此本次实验将直接利用这661组数据进行测试,分别调用4.1节中介绍的4个位置服务,然后对比这4个服务返回结果的异同.由于商业数据的敏感性问题,本文将上述4个服务随机排序,并在进行结果对比时将服务名称隐去,以API1、API2、API3、API4来指代上述4个服务.服务执行结果分列于表3~表6中,对上述4个服务的输出结果进行比较,结果不同的测试数据的数量总结在表3中,表中数字的含义为对应行和列所表示的接口之间输出结果不同的个数,例如第1行第2列的数字142表示API1和API2的输出结果Page9中,有142组结果不同,第1行第3列则表示API1和API3的输出结果中有603组不同.表4~表6则是对3.4节定义的3种服务故障进行的统计.API1API2API3API4API1API2API3API4API1API2API3API4API1API2API3API4从以上结果对比可以得出结论如下:(1)通过对4个服务结果进行对比,发现API3与这3个服务的差异性很大,基本都达到了91.23%,仅考察结果的差异性,还很难评价服务的质量,必须将这些不同的结果进行分类,分别从SF1、SF2、SF3这3个方面进行考察.(2)SF1:对于无效点的判定,各服务之间差别很小.差别最大的是API1和API4以及API2和API4,有8个不同的结果,占全部测试数据的1.21%.差别最小的为API1和API3以及API1和API4,有2个不同的结果,占全部测试数据的0.30%.(3)SF2:API3与其他3个服务相差较大,结果不同的数据最多占到测试数据的90.17%.通过对原始数据的分析,发现API3确定的地址信息更加详细,也就是说API3定义地址信息的区域粒度更小.(4)SF3:相差最多的两个服务为API1和API3,包含140个不同的输出结果,占全部测试数据的21.18%,相差最少的两个服务为API2和API3,包含3个不同的输出结果,占全部测试数据的0.45%,此类错误说明结果不同的两个服务中至少有一个服务存储的地址信息是错误的.通过以上比较,我们发现目前市场上主流的反地理编码服务通常都能够提供正确的地址信息,但有很多服务提供的地址信息不够详细,例如API1、API2和API4,只能定位到一个比较宽泛的区域范围,这样的结果对于下一步的地址导航、服务推荐等结果的正确性均有不同程度的影响.4.2.2以故障检测为优化目标的算法故障驱动算法共生成730组数据,其中包括100组贝叶斯分类器训练数据,及630组测试数据.用生成的这630组测试数据调用被测服务,表7是对API1、API2、API3、API4这4个服务返回的不同结果的比较,从表中可以看出在任意两个服务之间均存在不同数量的结果差异,差异最大的是API1和API1以及API3和API4,结果不同的数据占总数据量的93.81%.API1API2API3API4表8、表9、表10则是分别针对SF1、SF2、SF3这3种故障类型进行的对比统计,从表中数据可以看出:(1)SF1:接口之间差异最大的有141个结果不同,占全部测试数据的22.38%,差异最小的有2个结果不同,占测试数据的0.32%.(2)SF2:API3与其他几个服务的结果相差很大,其中与API2的差异最大,包含584个不同的返回结果,占全部测试数据的92.70%.(3)SF3:相差最多的两个服务是API1和API3,包含82个不同结果,占全部数据的13.02%,相差最少的两个服务是API2和API3,包含2个不同结果,占全部数据的0.32%.API1API2API3API4Page10API1API2API3API4API1API2API3API4通过上述比较发现,两种算法生成的测试数据对服务进行测试,测试结果基本一致,测试结果能够反映算法的缺陷发现能力,说明这两种算法缺陷发现的能力相当.4.3结果评估4.3.1以区域覆盖为优化目标的算法作为比较基准,本实验利用随机算法(RandomAlgorithm,RA)在指定区域中生成了660组数据,其中包含有效点218个,无效点442个.我们用有效点占比来定义该算法测试数据的生成效率:其中,(1)S={si}为算法生成的全部测试数据,|S|为生成的测试数据的数量;(2)SValid={sj}为生成数据中的有效点集合,也就是对于sj∈SValid,sj∈S,并且value(sj)=1.|SValid|为SValid中包含的测试数据的数量.利用上述公式分别计算SA和RA的数据生成效率:EfficiencySA=EfficiencyRA=SA生成的数据数量由多种因素共同决定,RA生成的数据数量只能依靠循环次数控制,因此不一定能够生成与SA相同数量的数据.通过以上计算可以看出SA的数据生成方法能够更好地按照测试人员的意图生成符合要求的数据,并且能够在算法早期就生成足够多符合要求的数据,使算法能够提前终止搜索,节约了宝贵的测试资源.本文还通过修改每层采样上限和每个子区域采样上限两个参数值,探讨这两个参数取值对算法的影响.表11的实验结果是将每个子区域采样上限确定为10,增加每层采样上限,从表中可以看出随着每层采样上限的增加,SA算法的参数生成效率也有所提高,该参数从50增加到100、从100增加到200,生成效率分别增加了0.94和0.1个百分点.对于RA,该参数的改变也提高了参数的生成效率,从表中可以看出,参数值从50增加到100,生成效率增加了5.62个百分点,参数值从100增加到200,生成效率增加了0.35个百分点.SA-50RA-50SA-100RA-100SA-200RA-200表12的实验结果是将每层采样上限固定为200,然后增加每个子区域的采样上限值,考察该参数对SA算法的影响.从表中可以看出,随着参数值的增加,测试数据的生成效率会随之增加:参数值从5增加到10,生成效率增加了3.86个百分点,参数值从10增加到20,生成效率增加了2.41个百分点.表12增加每个子区域采样上限对算法的影响SA-5SA-10SA-204.3.2以故障检测为优化目标的算法作为基准比较,同样用RA生成630组数据,对上述4个服务进行测试,并统计返回结果不同的数据数量,如表13所示.API1API2API3API4图4(a)呈现了SA和RA生成的测试数据,探测出的任意两个接口之间结果差异的对比.图4(b)是能够探测出不同种类结果差异的测试数据的数量对比,其中nT(n=1,2,3)表示能够探测出n(n=1,2,3)种结果差异的测试数据的数量.从图中可以看出,SA生成的测试数据比RA能够探测出更多的结果差异,也就是能够发现更多的潜在服务缺陷.Page11我们将故障驱动算法测试数据的生成效率定义为其中,(1)S={si}为算法生成的全部测试数据,|S|为生成的测试数据的数量;(2)SDiff={sj}为能够探测出服务结果差异的测试数据,也就是对于sj∈SDiff,sj∈S,并且valueF(sj)=1.|SDiff|为SDiff中包含的测试数据的数量.利用上述公式计算SA和RA的数据生成效率,通过计算结果可以看出,SA的生成效率要优于RA.EfficiencySA=EfficiencyRA=针对以故障检测为优化目标的算法,同样修改了每层采样上限和每个子区域采样上限两个参数值,进行了多次实验并对比结果.表14的实验结果是将每个子区域采样上限确定为10的基础上,改变每层采样上限,从表中可以看出随着每层采样上限参数的增加,SA算法的参数生成效率有所提高,该参数从50增加到100,生成效率增加了0.19个百分点,而从100增加到200,生成效率只增加了0.09个百分点.对于RA,该参数的改变并没有对实验结果有明确的影响,从表中可以看出,参数值从50增加到100,生成效率增加了0.99个百分点,而当参数值从100增加到200,生成效率反而减少了2.69个百分点.SA-50RA-50SA-100RA-100SA-200RA-200表15的实验结果是将每层采样上限固定为200,然后增加每个子区域的采样上限值,考察该参数对SA算法的影响.从表中可以看出,随着参数值的增加,测试数据的生成效率会随之增加,参数值从5增加到10,生成效率增加了4.25个百分点,而当参数从10增加到20时,生成效率增加了2.56个百分点.表15增加每个子区域采样上限对算法的影响SA-5SA-10SA-205相关工作5.1移动应用测试移动互联网和移动终端的飞速发展,使得相应的移动应用也呈现出井喷式的增长趋势.文献[7]给出了移动应用通俗易懂的定义:专门为智能手机、平板电脑等可移动设备开发的软件应用,并且这些软件应用能够以情景信息为输入.该文献将移动应用分为两大类:运行于移动终端的应用和通过网络访问的应用.分析了移动应用测试面临的挑战,并提出解决这些问题的方法以及今后的发展趋势.目前移动应用测试研究主要分布在以下几个领域:移动应用的白盒测试和单元测试,移动应用的黑盒测试和GUI测试,移动应用的服务质量需求测试,无线网络测试,移动可用性测试以及移动测试自动化框架等.文献[8]总结了4类主流的移动测试技术:(1)基于仿真的测试,利用移动终端仿真器进行模拟,使得测试过程能够在个人计算机上进行;(2)基于设备的测试,将测试直接部署在真实的移动终端Page12上;(3)云测试,其核心是要构建移动设备云,使用户能够以按需租用的方式使用测试服务;(4)基于群智的测试技术,其核心是利用群众的智慧,通过网络利用来自世界各地的自由职业者或者签约软件测试工程师来共同完成测试任务.文献[9]对位置服务测试进行了相关研究,针对移动设备现实应用环境的复杂多变性以及测试实验开展的安全性和合法性等问题,为移动位置服务创建了一种测试环境,用来考察移动设备、设备使用者以及设备所处环境之间的交互活动,测试环境包括:(1)城市虚拟现实模型.能够按照测试目的创建街道、指示牌以及标志性建筑等,能够模拟用户在街道中穿梭等个体活动;(2)移动设备.作为信息提供源,能够模拟位置服务应用程序;(3)软件.用来记录参与者的行为及其与测试环境之间的交互活动.虚拟现实环境的创建能够保持环境的稳定,在相同环境下,对不同用户行为进行对比分析,从而给出位置服务质量的评价.5.2模拟退火算法模拟退火算法最初由Metropolis等人在1953年研究二维相变时提出,Kirkpatrick等在1983年利用该算法设计大规模集成电路,并最早将其应用于优化问题的求解中[10].另外,Cern'y独立提出了SA算法,将其用于求解TSP问题,并获得成功.1987年Szu[12]提出一种退货率与时间成反比的快速模拟退火算法FSA.1988年Aarts等人[13]出版的书籍以及Laarhoven等人[14]出版的书籍系统全面地介绍了模拟退火算法,这标志着该算法的描述和应用得到了广泛的验证.迄今为止,SA算法已经在计算机领域中,包括人工智能、网络通信等许多涉及优化问题的领域中得到广泛应用[15-16],也衍生出了各种不同的改进版本[17-19].Gallego等人[20]则提出一种模拟退火算法的并行化实现方法,该方法将模拟退火算法应用于网络传输的扩展,并将传统模拟退火算法部署在分布式处理器中,在温度参数的每一档,分别在每个处理器上利用模拟退火算法进行搜索,然后每个处理器分别将其搜索的结果发送给其中一个处理器,该处理器从这些解中选出最优解,并将此解分发给其他所有处理器,所有处理器以此解作为初始解进行新一轮的搜索过程.将模拟退火算法应用于软件工程中需要解决的两个基本问题是:(1)问题的描述;(2)目标函数的定义.通常情况下,软件工程师对于其要解决的软件工程问题都能找到合适的表达形式,在目标函数定义的确定上则有很多不同的选择,如何确定一个目标函数,使其方便度量,并能准确评价搜索结果的优劣是应用模拟退火算法的关键[21].文献[22]将模拟退火算法应用于软件的缺陷查找,将软件规约形式化地定义为前置/后置条件,并利用前置/后置条件定义搜索算法的目标函数,利用目标函数指导搜索过程的进行.该文献利用类似算法形式化定义软件运行异常的前提条件,并以此作为搜索算法的目标函数.文献[23]介绍了一种测试数据自动生成工具GADGET,该工具最初仅应用遗传算法来实现测试数据的生成,但之后该工具实现了包括模拟退火算法在内的四种优化算法,实现复杂软件程序测试数据的自动生成.文献[24]利用模拟退火算法等构建覆盖数组完成组合测试,算法的当前解即为目前已产生的测试数据集合,将参数中未被覆盖的组合数作为算法的目标函数值,搜索的方向为目标函数值降低的方向,直至目标函数值为0时算法终止.本问题中,我们将测试生成过程类比为寻优过程,基于SA算法,加入贝叶斯分类器来预测和评判较好区域的概率,从而为状态评价提供依据,为新状态选择提供方向,是对SA算法的改进和优化.SA算法的参数选择对算法效率影响较大,温度T的初始值设置过高,则搜索到全局最优解的可能性大,但将耗费大量计算时间,反之虽可节约计算时间,但全局搜索性能可能受到影响,实际使用中一般需要若干次实验调整初始温度.SA算法的优点是质量高,初始值鲁棒性强,简单通用易实现.其缺点也十分明显,由于要求较高的初始温度、较慢的降温速率、较低的终止温度以及各温度下足够多次的抽样,因此优化过程较长.由于我们并不是要寻找最优解,而是记录寻优过程,因此最终停留状态的好坏对本问题并不十分重要,我们通过引入贝叶斯分类器提高退火效率,并对抽样数据的数量加以限制,在可接受的时间代价下大大提高了原有SA算法中退火过程产生可行解的数量和概率.6总结移动服务已经成为很多人工作、生活不可获取的一部分,移动服务测试对保证移动服务的正确性、可用性等有非常重要的作用.本文以一个典型的移动位置服务为例,采用基于贝叶斯分类器的模拟退火搜索方法为服务生成测试数据,并对所选的4个Page13服务进行输出结果对比,通过结果对比判定服务的正确性和返回结果的精确性.
