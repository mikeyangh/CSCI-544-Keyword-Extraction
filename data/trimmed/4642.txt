Page1基于树到串模型强化的层次短语机器翻译解码方法(东北大学信息科学与工程学院沈阳110819)摘要文中研究了利用树到串模型对层次短语模型进行强化的统计机器翻译解码方法.其基本框架是把层次短语模型作为基础模型,而把树到串模型作为层次短语模型的补充,增加翻译推导空间大小.文中重点研究了在该框架下的统计机器翻译解码技术,并提出了多种解码策略,包括基于树的精确解码策略、基于树的模糊解码策略和基于串的解码策略.通过NIST汉英翻译任务上的实验结果显示,文中所研究的方法可以十分有效地提升基线层次短语系统的翻译性能,比如在newswire和web数据上分别提高了1.3和1.2个BLEU点.此外,文中分析了若干影响翻译性能的因素,并给出了对比实验结果.关键词统计机器翻译;层次短语模型;树到串模型;规则抽取;解码;社会媒体;社交网络;自然语言处理;机器翻译1引言基于句法的统计机器翻译模型在最近十年中取Page2以学习到数量巨大的翻译规则.为了把规则数量控制在可接受的范围内,现在广泛的做法是在SCFG规则抽取和使用阶段引入一些限制,比如:解码时SCFG规则被应用的源语言跨度①不能超过一个阈值(比如10个词);所有的非胶水规则都必须为词汇化规则;所有规则中的变量个数最多不能超过两个;所有规则的源语言端中的变量不能连续等.这些限制使得层次短语系统可以进一步走向实用化,并且也已经在很多任务中取得了不错的效果.但是,这在一定程度上也削弱了层次短语系统处理长距离依赖问题和复杂的句法成分调序问题的能力.相比基于形式句法的层次短语模型,在机器翻译中使用源语句法信息(即使用基于语言学句法的翻译模型)能在很大程度上缓解上面所提到的问题.比如,句法系统中常用的GHKM规则抽取[2-3]使用了源语(或者目标语)句法树信息来指导(树到串)翻译规则的抽取.其中句法树信息的使用使得规则抽取和翻译过程能够利用更多的语言学知识,从而使翻译系统不需要像层次短语系统那样使用各种各样的工程化的约束条件.比如,在GHKM框架下,可以去掉规则的源语言跨度约束;可以允许非词汇化规则的引入;可以在规则的源语言端使用两个以上的变量和连续的变量.此外,我们还可以使用句法信息定义新的特征来鼓励翻译推导遵循句法约束的情况.不过,GHKM框架也有一些严重的问题.比如,翻译规则的质量在很大程度上受限于自动句法分析性能的好坏;翻译规则的多样性和覆盖度很有限,许多情况下翻译系统无法找到理想的规则.针对以上问题,一种自然的解决方案就是在层次短语系统中引入更多的源语言句法信息.有两类方法:(1)在层次短语系统中引入句法特征.比如,文献[4-5]使用句法软/硬约束来增加系统对源语言句法合法性的敏感度,而文献[6-9]在SCFG规则中加入句法标记使其能够在使用规则时考虑句法标记的兼容性.不过,这些方法本质上仍然依赖于SCFG规则抽取,因此无法避免前面提到的各种限制;(2)第二类方法是利用系统融合的思想,将层次短语和树到串系统进行融合,如使用联合解码技术[10]在解码阶段同时使用层次短语规则和树到串翻译规则生成翻译推导.也可以使用文献[11]中的技术,直接在层次短语解码器中使用树到串翻译规则.本文的工作基于上面提到的第二类方法.核心内容是以文献[11]所描述的框架为基础,对多种树到串规则在层次短语系统中进行集成的解码方法进行研究.因此本文可以被看作是对文献[11]的进一步深化,但是本文的工作与文献[11]有明显的区别.相比文献[11],本文的主要贡献体现在如下两个方面:(1)本文对树到串规则在层次短语系统中集成的解码策略进行了深入研究,并对模糊规则匹配、基于串的规则匹配、基于树的规则匹配等解码问题进行深入研究,提出了相应的解码策略.此外,本文对不同解码策略进行了实验对比,最终发现使用二叉化句法树和基于串的解码这种组合可以获得最大的性能提升.(2)本文通过实验进一步对比了多种源语言信息在层次短语系统中的使用方法,包括源语言句法软约束、句法结构硬约束等.此外,本文分析了这些方法在系统性能提升方面存在的问题.进一步,本文还分析了解码中各种规则的使用比例,并研究了树到串模型训练数据规模对翻译结果的影响.以上这些分析和讨论在文献[11]及相关工作中并未涉及.本文将所提出的方法应用于NiuTrans开源统计机器翻译系统.大规模汉英机器翻译实验显示:本文的方法在NISTMT08-12newswire和web数据上能显著提高系统的翻译性能,BLEU值在两个类型数据上分别能够提升1.3和1.2个点.2层次短语模型中集成树到串模型为了方便对本文研究内容进行论述,本章对相关背景技术进行了介绍,包括层次短语翻译模型和树到串翻译模型的基本原理,以及在层次短语模型中集成树到串模型的基础方法.2.1层次短语翻译模型层次短语模型依赖同步上下文无关文法(SCFG).同步上下文无关文法可以描述含有层次结构的双语字符串的生成过程.形式上,同步上下文无关文法被表示为一个规则系统〈N,Ws,Wt,R〉,其中N表示一个非终结符号集合,Ws和Wt表示源语言和目标语言终结符号(或者词汇)集合,R表示一个产生式集合.R中的每一个产生式对应一条SCFG规则,形式为:X→〈α,β,~〉,其中产生式①本文中,跨度是指一个句子中从某个词开始到另一个词结Page3左手端的X表示一个非终结符;右手端的α表示一个源语言的终结符和非终结符序列,称作源语言端;β表示一个目标语言的终结符和非终结符序列,称作目标语言端;~表示α和β中的非终结符的一一对应关系.通常可以把~表示为非终结符的下标.概率化的同步上下文无关文法可以使用启发性信息从经过词对齐的数据中自动获取[12].比如,可以首先抽取初始翻译短语集合,之后利用这些初始短语获取层次短语的翻译规则(即含有变量的翻译图1Hiero规则抽取(右上)及树到串规则抽取(右下)示例在真实系统中,通常会引入一些约束条件来使系统的解码过程能够在可接受的时间内完成,具体包括:(1)在解码时限制一个层次短语规则可以被应用的跨度大小,即跨度限制,通常为10;(2)规则的阶数(规则允许的变量个数)的限制,通常最多不超过两个;(3)规则源语言端的变量不能连续出现(除胶水规则外);(4)规则必需为词汇化规则(除胶水规则外)等.2.2树到串翻译模型树到串翻译模型把翻译过程定义为从源语言句法树到目标语词串的转化问题[13-14].这个翻译过程可以用一系列的树到串翻译规则表示.对于一条树到串规则r,可以将其表示为一个三元组〈sr,tr,~〉,其中sr表示规则的源语言树片段,sr的叶子节点为终结符或者变量(非终结符);tr表示规则的目标语终结符和变量序列;~表示sr中的叶子变量和tr中的规则).在获取SCFG规则之后,可以利用这些SCFG规则对新句子进行解码,完成对未知句子的翻译.图1给出了从一个经过词对齐的例句中抽取得到的SCFG规则实例.其中,规则h7,h1和h3对应了一个翻译推导,能够覆盖整个双语句对.而层次短语模型的解码问题也可以被当作句法分析来处理,也就是使用SCFG的源语言端分析输入的句子,之后构建一个SCFG的推导森林(或者一个超图结构),之后利用翻译模型和语言模型计算推导得分,并在推导森林中找到最优推导并输出.变量之间的一一对应关系.比如VP(VV(提高)x1:NN)→increasesx1就表示了一种树到串翻译规则,其中“VP(VV(提高)x1:NN)”为源语言句法树片段,“increasesx1”为目标语串,两端的x1表示变量应该相互对应.树到串翻译规则的抽取通常是通过GHKM方法实现[2-3].GHKM方法的基本思想是利用词对齐信息从源语言树和目标语串中抽取最小翻译规则,之后利用这些最小翻译规则组装出更大的翻译规则.比如,图1给出了利用GHKM方法从一个词对齐的源语言句法树和目标语串中抽取得到的若干树到串翻译规则.树到串翻译模型的最大优点在于:规则(及所有变量)都遵循句法树约束,比如所有的变量都需覆盖合法且完整的句法子树单元.因此,树到串翻译的解码并不需要强制加入规则跨度的约束.此外,由于源Page4语言句法树的使用,层次短语中关于变量个数、源语言连续变量个数、规则必需词汇化等约束在树到串翻译模型中都能够被消除.比如图1中的规则r8具有很好的源语言树结构,因为这种结构可以决定NP和VP之间的调序.但是,在标准的层次短语系统中由于这样的规则包含连续的源语言变量,因此它们并不允许被使用.2.3树到串模型在层次短语模型中的集成本文遵循文献[11]所提出的框架将树到串模型集成到层次短语模型中.该方法的基本思想是:同时使用Hiero[12]和GHKM[2]方法从双语数据中抽取翻译规则,之后将GHKM方法抽取得到的(树到图2树到串模型在层次短语系统中集成的基本框架如图2所示,本文所使用的方法需要同时进行SCFG规则抽取和树到串规则抽取,这两类规则可以分别使用标准的Hiero规则抽取方法[12]和GHKM规则抽取方法[2-3]获得.但是,树到串翻译规则和SCFG规则具有不同的形式.因此,如果想在层次短语系统中使用树到串翻译规则,就需要把它们转化为SCFG规则.这样,在基于SCFG的解码器中才可以间接地使用树到串翻译模型的信息.由树到串规则到SCFG规则的转化非常直接:对于一个给定的树到串翻译规则〈sr,tr,~〉,我们将源语言端sr所对应的叶子节点序列作为生成的SCFG规则的源语言端,并保持tr和~在SCFG规则中不变.之后将规则中所有的句法标记替换为层次短语系统所使用的句法标记(如X)就得到了SCFG规则.由此可见,经过上述的转化后,每条树到串翻译规则都会对应唯一的一条SCFG规则.因此我们可以将原始的SCFG和对树到串翻译规则进行上述转化后的结果进行合并,从而得到更大的串)翻译规则加入到层次短语系统中对基线SCFG进行补充.注意,这个方法与传统的系统融合和混合翻译模型有所不同[10,15-16],它并不是简单地把不同的模型(层次短语和树到串)等同视之,再对它们进行融合,而是把层次短语模型作为基础模型,然后利用(少量)树到串规则对其进行强化.实际上,就是利用树到串模型的优点来帮助层次短语模型改进其缺点,但并不是一种对称化的系统融合方法.图2给出了这个方法的基本框架.在规则抽取阶段,该方法同时使用Hiero和GHKM方法获取规则并得到一个“更大”的SCFG,之后同时利用句子的词串和句法树信息使用这些SCFG规则对新的句子进行解码.SCFG规则.进一步,将合并得到的SCFG中的规则分为两种类型的规则:类型1规则是可以由Hiero抽取得到的规则,也就是说所有基线层次短语系统中的规则都是类型1规则.类型2规则是Hiero无法抽取的规则,但是可以由树到串翻译规则转化得到.比如在图2中的规则r8可以通过这种方式转化为如下规则由于这条规则包含连续的源语言端变量,因此它不能被Hiero方法抽取到,但是可以通过使用GHKM方法被抽取出来.3解码方法3.1基本框架本文的重点是在文献[11]工作的基础上研究不同解码策略对层次短语系统中集成树到串模型的影响.为了确保文章论述的完整性,这里首先简要描述Page5本文所使用的基本解码框架.如第2节所述,在规则抽取之后,我们可以得到一个合并后的SCFG规则集和一个树到串规则集,其中每条树到串规则与SCFG规则集中的某一条规则相对应.而解码器就是要利用这些规则完成对输入句子的翻译.层次短语解码器通常可以被看作是一种源语言的“分析”装置与目标语“生成”装置的组合,也就是说层次短语解码器会利用翻译规则的源语言端对输入的源语言句子进行匹配(对应“分析”过程),之后才生成目标语译文(对应“生成”过程).实现层次短语解码器通用的框架为:(1)首先,用SCFG规则对输入的句子进行匹配,并把可匹配的规则加入到相应的分析单元(或者跨度)的规则列表上.(2)之后,用自底向上的分析算法利用这些规则构建一种超图,其中超图的每个边对应一条规则,每一个节点对应一个分析单元(或者跨度).(3)最后在超图上计算各种模型的得分,并输出模型得分最高的一个或者多个翻译推导.图3基于词串(a)和基于树(b)的匹配实例②基于树的规则匹配.这种规则匹配方法只针对规则源语言端有树结构的翻译模型,如树到串翻译模型和树到树翻译模型.这种规则匹配方法要求解码器的输入为句法树.之后检查规则的源语言端是否与某个树片段相同,如果有可以匹配的树片段,上述过程的第(2)步和第(3)步还可以使用剪枝技术来提高系统运行的效率.实际上,对于当今的层次短语系统和基于句法的系统,解码算法都遵循上面所描述的框架.图2的下半部给出了该解码框架的示例.其中,在解码的第(2)步和第(3)步,大多数翻译系统都可以共享相同的算法,只是所使用的具体剪枝方法和模型得分计算方式有所不同.而不同系统的主要区别体现在第(1)步,即利用何种策略匹配翻译规则.一般来说有两种基本策略可以使用:①基于词串的规则匹配.这种方法只考虑了输入句子的字符串信息,将翻译规则匹配到输入句子的相应单词串上.比如图3(a)给出了一个基于词串的规则匹配实例,其中整个匹配过程只参考规则源语言端的字符串和输入词串,不考虑任何的句法结构信息.这个过程可以被广泛地用于层次短语系统,同时也可以在部分句法系统中使用.对句法翻译规则(如树到串翻译规则)进行基于词串的规则匹配,需要将翻译规则的源语言端转化为一种词串表现形式,之后的过程与图3(a)所描述的过程完全一致.则称规则命中,之后可以把规则加入到树片段的根节点所对应的分析单元(或者跨度)的规则列表中.上述两种规则匹配策略各有优缺点:基于词串的规则匹配简单直接,但是由于可能匹配的规则数量巨大,解码器的运行效率相对较低;而基于树的规Page6则匹配可以利用树结构过滤掉大量的不符合句法约束的规则匹配结果,解码器速度较快,但是由于解码空间受限,解码器的翻译效果通常不是非常理想.针对以上问题,本文设计了多种面向SCFG规则和树到串规则的规则匹配策略,下面进行详述.3.2规则匹配策略3.2.1基于词串和基于树的混合策略这种策略是最简单直接的一种规则匹配策略,在文献[11]中也有讨论.其基本思想是:用基于词串的匹配处理所有Hiero抽取能获取到的规则,即类型1规则;用基于树的匹配处理所有Hiero抽取无法获取而树到串系统能够获取得到的规则,即类型2规则.处理类型1规则时,只需要复用基线层次短语解码器的规则匹配模块即可.唯一需要注意的是,如果一条规则可以匹配一个子树片段所覆盖的字符串,那么就可以移除系统的跨度限制.也就是说,如果规则匹配符合源语言句法结构,我们就不考虑任何规则匹配的跨度限制.处理类型2规则时,首先利用每条类型2规则所对应的树到串规则对输入句法树进行基于树的规则匹配,如果匹配成功就将所对应的SCFG规则加入到相应的规则列表中.对两种类型规则匹配结束后,整个解码流程直接复用基线系统的相应模块即可.3.2.2基于词串和模糊匹配的混合策略上述规则匹配方法的优点是简单直接.它在复用基线系统的同时(处理类型1规则),可以使用十分高效的基于树的匹配方法去处理额外的树到串翻译规则.但是,基于树的匹配方法一般要求对树结构进行严格匹配,即规则的源语言必须与某个子树完全对应才表明匹配成功.由于句法结构的多样性和句法分析结果中的错误,这种“精确”匹配的方式可能会过滤掉一些可以生成很好翻译结果的规则,因此我们考虑使用一种模糊的规则匹配方法[17-19]来处理类型2规则,而仍然复用基线系统来处理类型1规则.基于树的模糊匹配思想非常简单.给定一个规则源语言端和一个树片段,我们可以忽略一些信息进行匹配.具体来说有3个层次:(1)句法标记泛化.这个方法就是把一些句法标记泛化为一个通用的类别.在本文的工作中,我们仅考虑将所有的名词短语和名词词性标记泛化为NP,同时将动词短语和动词词性标记泛化为VP.这样就可以使得更多的规则得到匹配,而不会因为仅仅在词性标记上的小区别从而导致匹配失败.(2)树结构泛化.这里我们可以直接使用文献[18]和文献[19]中的思想,在进行树片段匹配的时候忽略除边界节点以外的结构,也就是说只考虑树片段的根和叶子节点,而忽略树的内部结构.这么做的好处是可以在不改变句法分析结果的条件下使用更加多样的树片段进行规则匹配,进而增加规则的使用率.(3)句法标记和树结构同时泛化,即同时考虑上面两种泛化方法.使用以上的模糊匹配策略可以更加灵活地对规则进行匹配.比如,对于如下的树到串规则VP(PP(P(对)x1:NN)x2:VV)→x2withx1我们无法使用精确匹配的方式将其应用于图3(b)所示的实例中,但是如果使用句法标记的泛化,我们可以将规则中的NN视为NP,将VV视为VP,这样就可以采用图3(b)所示的方式进行规则匹配.3.2.3基于词串的单一匹配策略实际上3.2.1节和3.2.2节所讨论的方法的区别仅在于是否使用模糊匹配来使用类型2规则,而对于类型1规则的处理都是一样的.它们本质上都需要对输入的句法树进行规则匹配.这样类型2规则的匹配还是会受到输入句法树结构的约束,从而导致翻译推导空间的减小.正如3.1节开始所描述的,我们可以使用基于词串的匹配策略来使用树到串规则,也就是说在构建翻译推导森林的过程中,考虑所有潜在的源语言句法分析结果.这样可以得到较大的搜索空间,进而增加生成高质量翻译结果的几率.基于词串的单一匹配策略实际上就是使用同一种(基于词串的)规则匹配策略来使用类型1和类型2规则.对于源语言端包含连续变量的类型2规则,我们可以使用规则二叉化的方式将其分解,之后在解码时动态组装即可.值得注意的是:如果使用基于词串的解码方法,对于树到串规则的使用,系统的效率是很低的.这主要是由于树到串规则会引入许多非词汇化规则(对应一部分类型2规则),这会大大增加翻译推导空间的大小,进而增加系统的运行时间.对于这个问题,我们对除了胶水规则以外的非词汇化规则进行了剪枝,同时只使用了少量数据进行树到串规则抽取,这使得系统仍然可以在相对较高的翻译速度下运行.为了对比本文研究的不同规则匹配策略,图4进一步给出了每种策略的示意.Page7图4基于树的精确规则匹配3.3特征本文的基线层次短语系统使用的是NiuTrans开源工具包[20]中的NiuTrans.Hierarchy系统.本文使用了如下9个基础特征:双向翻译概率、双向词汇权重、翻译长度惩罚、规则个数惩罚、短语翻译规则个数惩罚、胶水规则个数惩罚、语言模型得分.除了以上特征之外,本文还考虑了文献[11]中的若干个额外的特征,包括:(1)树到串规则指示特征.这类特征是二值特征,用来指示SCFG规则所对应的树到串规则类型.对于解码中使用的每一条SCFG规则,树到串规则指示特征包括是否对应树到串规则、是否对应非词汇化树到串规则和是否对应在源语言端包含连续变量的树到串规则.(2)句法规则翻译概率.实际上句法系统通常包含一些独特的特征.比如,句法树生成概率等.因此我们也在树到串规则上使用了若干句法系统所使用的特征[11].此外,我们也设计了若干特征来进一步对规则中树结构的匹配进行建模,即(3)树匹配特征.这类特征是二值特征,并且仅在使用基于树的规则匹配时发挥作用.对于解码中使用的每一条SCFG规则,树匹配特征包括是否通过精确树匹配使用该规则和是否通过模糊树匹配使用该规则.在解码时,每条SCFG规则都会有上述这些特征.对于9个基础特征,我们采用了传统的方法对其进行计算[12],即对双向翻译概率使用相对频率进行计算、双向词汇权重使用词对齐进行计算、语言模型概率使用回退的方法进行计算、翻译长度及规则个数等特征进行直接计算即可.这里需要额外处理的是类型2规则.由于该类型规则在基线系统的规则表里没有出现,因此它所对应的双向翻译概率需要重新计算.本文采用了一个简单而直接的策略:单独对类型2规则采用相对频率估计方法来计算规则翻译概率.也就是说,在抽取得到基础SCFG规则和树到串规则后,我们会额外对从树到串规则转换而来的类型2规则进行翻译概率计算.对于类型2规则的其他基础特征,我们直接使用基线系统的相应模块进行计算即可,无需改动.对于树到串规则使用的特征(树到串规则指示特征、句法规则翻译概率、树匹配特征),类型1规则均使用固定的缺省值:指示型特征的缺省值为1,概率型特征的缺省值为10-6.对于以上这些特征,不同的类型2规则会有区别.比如,有如下两条树到串规则:VP(PP(P(对)x1:NN)x2:VV)→x2withx1,VP(P(对)x1:IPx2:VP)→x2withx1.它们会对应同一条类型2规则在进行解码时,如果分别使用了以上两条树到串规则(假如匹配上了源语言树结构),它们所对应的基础特征是相同的,即规则X→〈对X1X2,X2withPage8X1〉所对应的基础特征.但是,以上两条树到串规则所对应的其他特征,如句法规则翻译概率等是不同的,这样也就区分了两条规则的使用情况.也就是说,对于同一个SCFG规则,即使对应多个不同的树到串规则,解码时也会动态的选择匹配的树到串规则计算树到串规则指示特征、句法规则翻译概率、树匹配特征.解码器匹配了哪条树到串规则,就用该规则计算相应的(句法规则)特征.最终,解码器会选择模型得分最高的翻译推导,并输出相应的译文.4实验4.1实验设置本文的实验在NIST汉英翻译任务上进行.实验的训练用包括270万句对的双语数据①.首先,我们用GIZA++工具②对训练数据进行双向词对齐,之后利用“grow-diag-final-and”启发性算法对双向词对齐结果进行对称化处理.此外,我们使用了英语GIGAWORD的Xinhua部分(LDC2003T05)和双语数据的目标语部分训练了一个基线系统的5元语言模型.我们同时使用newswire和web两类数据完成系统的调优和测试.系统的开发集合(用于调优)包括newswire数据1181句和web数据483句.测试数据包括所有NISTMT08、MT12、MT08progress中的newswire和web测试数据,总计newswire数据1779句和web数据1768句.所有训练集、开发集和测试集中的中文句子都使用BerkeleyParser③编号表1不同翻译系统的BLEU值Newswire(BLEU4/%)TuneMT08MT12MT08.pAlltestexp01标准层次短语基线系统exp02exp01+句法软约束(特征)exp03exp01+去掉跨度约束exp04exp03+树到串规则exp05exp04+树到串特征exp06exp04+模糊句法标记exp07exp04+模糊树结构exp08exp04+模糊树结构&句法标记37.4733.4234.0832.7833.5732.6724.5322.5525.8024.90exp09exp04+基于词串的解码exp10源语言树约束exp11exp08在跨度>10上进行exp12exp08+左孩子优先二叉化exp13exp08+右孩子优先二叉化exp14exp08+基于森林的二叉化注:或表示测试集上相比基线exp01有显著性提高,p<0.05或0.01.4.2.1基线系统(exp01~03)为了进行有效的对比,我们选择了3种基线系统:exp01-标准的层次短语系统,即NiuTrans.Hierarchy;exp02-在exp01的基础上加入句法软约束,这里我得到句法分析结果,并以短语结构树形式输出.我们选择NiuTrans.Hierarchy作为实验的基线系统.该系统的解码器基于CKY算法,并同时使用了束剪枝和立方剪枝来对解码器进行提速.特征权重利用最小错误率训练在开发集上自动调优.所有的翻译规则都通过标准的Hiero抽取方法[12]得到.在解码和基本短语规则抽取中允许的最大跨度为10.对于树到串规则抽取,我们使用了NiuTrans提供的GHKM规则抽取模块.类似于文献[11],我们在训练数据中的一个高质量子集(50万句)上抽取了树到串翻译规则,其中每条规则最多允许5个终结符和5个变量.此外,我们利用翻译概率对树到串规则进行了剪枝,剪枝包括丢弃正向翻译概率小于0.02的词汇化规则和丢弃正向翻译概率小于0.10的非词汇化规则.4.2实验结果本文实验需要回答3方面问题:(1)在本文实验系统NiuTrans上,树到串模型强化层次短语模型是否可以有效地提高翻译性能?(2)不同的解码方法对翻译准确性影响如何?(3)在树到串模型强化层次短语模型中,还有哪些因素(如树结构、搜索空间等)可以影响翻译性能,这些因素与本文所研究的解码方法的最优组合是什么?针对以上3个问题,我们开展了实验.表1给出了不同实验的BLEU值[21].下面是对具体实验结果的说明.①②③Page9们使用了文献[5]中描述的性能较好的特征集{NP+,NP=,VP+,VP=,PP+,PP=,XP+,XP=};exp03-在exp01的解码中当源语片段符合句法结构时除去跨度限制,这种方法可以被看作是对源语言句法信息在层次短语系统中最简单的使用.从表1可以看出,加入句法软约束(exp02)在多个测试集上可以带来少量的性能提升.这个结果一方面肯定了源语言句法信息对机器翻译有帮助,另一方面也说明了简单的增加句法特征(而不引入新的规则或增大解码空间)并不能十分有效地提升层次短语系统的性能.此外,在exp03中,除去跨度限制会带来一定的BLEU提升.这个实验结果也间接地验证了文献[4]中的发现:减少跨度约束对基于句法约束的系统是有帮助的.4.2.2树到串+层次短语(exp04和exp05)进一步,我们实验证明了层次短语结合树到串翻译方法的有效性.这部分实验使用的是3.2.1节所描述的基于串和树的混合解码方法,即文献[11]中所使用的解码方法.exp04和exp05分别表示不使用或者使用3.3节所描述的新特征的实验结果.可以看出在newswire和web两类数据上,加入树到串翻译规则分别带来了0.6和0.5个BLUE值的提升(exp04vs.exp01).而新特征又带来少量的BLEU提升(exp05vs.exp04).尽管文献[11]和本文使用了不同的机器翻译系统(HiFSTvs.NiuTrans),本实验仍然得到了与文献[11]一样的发现:加入句法规则和特征可以有效地提升层次短语系统的性能.4.2.3解码方法对比(exp05~09)实验exp05~09对应了不同的解码方法的结果,其中exp05使用了3.2.1节所描述的基于词串和树的混合解码策略,因此可以作为这组对比的基线.exp06~09对应使用基于树的规则模糊匹配的结果.可以看出模糊匹配对基于树的解码非常有帮助,可以进一步提高性能.具体来说,树结构的模糊匹配更为有效,而句法标记的模糊匹配带来的性能提升较少.这可能是由于中文的结构过于复杂,因此需要更加宽松的树结构约束来帮助系统得到较大的翻译推导空间.而中文的句法标记相对稳定(而且数量不是很大),因此对句法标记进行模糊匹配并不能带来很大的翻译性能的提升.exp09给出了基于串的解码的结果,可以看出该方法取得了最好的BLEU值,这也说明了增大解码器的搜索空间非常有助于系统性能的提升.由于exp09的优异性能,在随后的实验中我们选择了基于串的解码方法作为缺省的解码方法进行研究.此外,我们测量了不同解码方法(基线系统、加入树到串规则和特征、使用基于串的解码、加入二叉化方法)的运行速度.表2给出了系统在所有数据上处理的平均速度.可以看出在引入句法规则后,系统的翻译速度只下降了10%,这和我们预期结果是一致的:引入不太多的句法规则并不会过多的增加系统负担.另一方面,在引入基于串的解码后,系统的运行速度有一半的下降.这个结果主要是由于基于串的解码要对所有跨度进行计算,系统并不能像基于树的解码那样通过句法结构来约束解码空间,因此系统的负担较重.编号exp01exp05exp09exp124.2.4搜索空间大小对翻译性能的影响(exp10~11)本文工作的基本思想是增大翻译的搜索空间使得翻译系统能够在更大范围上搜索最优解.类似于文献[11],我们对exp09的系统进行了限制,强制所有翻译推导必须遵循源语言树结构(所有使用的规则必须覆盖完整的句法树结构),不遵循句法树约束的翻译假设被移除.exp10给出了这个系统的实验结果.可以看出,限制搜索空间的大小会显著地降低系统的翻译性能,比如,exp10相比于exp09和exp01都有非常明显的BLEU下降.另一方面,本文的引言部分就描述了解码中使用跨度约束会产生的问题,特别是对于跨度很大的翻译片段,这个约束可能会造成负面影响.使用源语言句法树结构能够消除跨度约束对系统的影响.为了进一步验证这个结论,我们设计了一组新的实验,我们仅在跨度大于10时使用本文所提出的层次短语和树到串相结合的方法,而在小于等于10的跨度上仍使用基线的层次短语翻译模型.如exp11所示,仅在大于10的跨度上使用本文所提出的方法对翻译系统仍然会有帮助(exp11vs.exp01).但是相比在所有跨度上使用该方法,exp11的性能提升还是相对较小(exp11vs.exp09).这个实验现象表明该Page10方法在小的跨度上对翻译系统也很有帮助.4.2.5树二叉化对翻译性能的影响(exp12~14)树二叉化是常用且有效的改进句法系统的方法[22],因此在本文的实验中我们也尝试了使用树二叉化技术对系统进行改进.exp12~14给出了经过左孩子优先、右孩子优先及基于森林的二叉化处理后的源语言句法树对应的翻译性能.结果显示左孩子优先的二叉化方法(exp12)可以非常有效地提高翻译性能,在newswire和web数据上相比exp01它可以提高1.3和1.2个BLEU点.相比之下,右孩子优先的二叉化方法(exp13)对性能提高没有太大帮助.这个结果和相关工作的结论[11,22]是比较一致的,即机器翻译系统倾向于使用特定类型的二叉化方法.exp14的结果表明在已经二叉化的句法树中引入基于森林的二叉化方法并不能十分有效地增加可用规则的数量.这个现象也表明当系统(如exp11)已经包含了很大数量的翻译推导时,简单地增加规则数量很难进一步提高翻译系统的性能.4.3分析:规则使用率除了考察系统输出结果的BLEU值,本文也研究了在最优翻译推导中对于不同类型规则使用的情况.我们发现改进后的系统非常喜欢使用树到串规则.比如,在exp04中,最优推导中的9.3%的规则是类型2规则.当我们引入左孩子优先二叉化之后(exp08),这个比例上升至14.5%.进一步,我们又研究了最优推导中可以使用基于树的匹配方法进行匹配的规则.如表3所示,当树到串规则增多时,系图5不同树到串模型训练数据规模下不同系统的BLEU值进一步,我们研究了不同规模的模型在解码中所使用的不同类型的规则的比例,包括3类规则:类型1规则、类型2中的非词汇化规则和词汇化规则.如图6所示,随着树到串模型训练数据的增加,系统也会使用更多的类型2规则.有趣的是,非词汇化规则被使用的几率基本上没有变化,统会更加倾向于使用基于树的匹配方法来使用规则,这个结果和我们的预期结果也是相符的.规则匹配方法基于串基于树4.4分析:句法模型的规模对翻译性能的影响本文中另一个需要分析的问题是句法模型的规模对翻译性能的影响.在前面的实验中,我们只使用了整个双语数据的20%来获取树到串翻译规则,而使用了100%的双语数据训练获取层次短语模型.这样做的主要目的是减少句法模型训练的开销,同时减少解码器的负担.一个很自然的问题是增加句法模型训练数据是否可以进一步提高翻译性能?为了回答这个问题,我们研究了不同规模句法模型训练数据对最终翻译效果的影响.如图5的t2s+SCFG曲线所示,为树到串模型引入更多的训练数据能为本文的系统带来少量的性能提升,但是BLEU的增长非常有限.这也说明,在本文所研究的解码框架下,层次短语模型已经为翻译提供了很好的基础,而句法规则可以作少量的补充,但是大量的句法规则并不能带来显著的性能提升.为了进行对比,我们也给出了不同数据规模下树到串系统的性能对比结果,即图5中的t2s曲线.可以发现树到串系统对训练数据的规模更加敏感,当数据大于200万句(所有数据80%以上)时,结果才趋于稳定.而词汇化规则随着数据的增多有更加频繁的使用趋势.这个结果也反映了一个现象:翻译中使用的非词汇化规则应该是相对稳定的,它们可以从“不太大”的训练数据中学习到,而不需要像词汇化规则那样依赖很大的训练集才能取得较好的效果.Page11图6不同树到串模型训练数据规模下各种类型规则使用的比例4.5分析:句法特征vs.句法规则在前面的实验中,我们对比了源语言句法信息在层次短语系统中的不同使用方法,包括源语言句法软约束/特征(exp02)、源语言句法硬约束(exp10)、本文所使用的引入额外句法规则的方法(exp04~09、exp11~14).从实验结果中不难看出:(1)利用源语言结构信息来约束解码过程,会降低翻译质量;(2)使用句法软约束/特征在本文所使用的实验系统上并不能带来很大的性能提升.对于上面提到的第一个现象,已经在4.2.4节进行了分析.实际上,本文工作的出发点就是引入句法规则来增加优质翻译推导的数量.比如,在多种情况下(如newswire数据与web数据、原始CTB形式句法树vs.二叉句法树),该方法均带来了稳定的性能提升.相比之下,简单的引入不同形式的句法特征对系统性能的影响非常有限.这不仅体现在传统句法软约束方法上(exp01vs.exp02),同时在引入本文所描述的句法特征上也有类似现象(exp04vs.exp05).进一步分析实验结果发现句法特征对于不图7基线、句法软约束、引入句法规则方法对比此外,我们也分析了句法软约束对于不同类型句法结构的区分能力,也就是句法特征能在多大程度上指示翻译结果的好坏.这可以进一步地解释exp02相对exp01性能提升有限的原因.所谓句法同的系统(或设置)效果有着较大的差别.这里,我们设计了一组额外的实验:调整n元语言模型中n的值,对比基线系统(exp01)、源语言句法软约束系统(exp02)和引入句法规则的系统(exp04)的BLEU值.这个实验的目的是调整语言模型的强弱构造不同性能的基线系统,从而比较句法信息的不同使用方法对机器翻译性能的影响.图7给出了实验结果.比较有趣的现象是:在不同性能的基线系统性能下,增大解码空间会带来相对稳定的提升(exp04);而使用源语言句法特征对于性能较低的系统似乎更加有效,但是对于较强的系统性能提升很有限.这反映了机器翻译中特征相互作用的问题:对于一个特征,它所带来的优势可能会被其他强势特征所覆盖,所带来的性能提升可能会被淹没.这本质上也反应了统计学习中模型复杂度的观点:对于一个复杂的“强”模型/系统,需要引入更加复杂的特征和更多的训练数据才能带来一定的性能提升;相反,对于一个相对简单的“弱”模型/系统,引入同样的特征就可以增加模型的判别能力,进而带来较大的性能提升.软约束,实质上就是度量了不同类型句法结构与解码中使用的翻译规则的兼容性.比如,一个规则所覆盖的源语言跨度与某个句法结构有交叉,称作cross,这时系统应该倾向给一个惩罚;而一个规则Page12所覆盖的源语言跨度与句法结构兼容,称作match,这时系统应该倾向给一个奖励.表4给出了基线系统的1best和Oracle翻译结果/推导①所对应不同源语言句法结构的“交叉”和“兼容”的比例.这里我们给出了前15个占比最大的句法类型的结果.可以看出,对于1best结果句法交叉和兼容的情况之间并没有明显的比例差别,这个现象在Oracle结果中也类似.这也说明了简单的使用“交叉”和“兼容”两种句法特征并不能很好的区分翻译结果的好坏.比如,在我们的实验中Oracle结果比1best结果高8个BLEU点,但是二者的句法“交叉”和“兼容”比例并没有明显差别,也就说在本文的基线系统中句法软约束并没有很好的判别能力.这个现象也从某个角度解释了为什么实验exp02中句法兼容性特征并不是非常有效.句法标记(比例)NP(38.8%)VP(22.2%)IP(13.02%)ADVP(5.52%)99.6QP(4.42%)PP(3.26%)CLP(2.91%)CP(2.42%)ADJP(2.15%)DNP(1.84%)LCP(1.45%)DP(1.28%)VRD(0.17%)VCD(0.12%)相比源语句法特征的“不稳定”表现,引入句法规则来增大解码空间显示出相对稳定的性能提升能力.图7中,在不同性能的基线系统上该方法都可以带来0.6个点的BLEU提升.这个现象反映出一个事实:增大解码空间与加入更多特征是改善统计机器翻译系统的两个维度,二者可以从不同角度改进层次短语系统,它们之间并没有矛盾.简言之,引入句法规则可以相对稳定的提高系统性能,而句法特征在较低性能的系统上会有更好的表现.5相关工作近些年语言学驱动的方法在机器翻译中受到了广泛关注.特别是基于源语言句法信息的翻译模型在许多任务中都显示出巨大的潜力.比如,如树到串模型[13-14]很适合处理长距离依赖和复杂的句法结构调序问题.另一方面,层次短语翻译模型[1]本身并不依赖任何语言学句法信息,但是也可以描述句子的层次结构,并且在很多任务中表现出非常优异的性能.在机器翻译研究领域,有若干方法利用源语言句法信息对层次短语模型进行改进.比如,文献[10]描述了一种联合解码方法.这种方法来源于传统的系统融合任务.在这项工作中,层次短语模型和树到串模型在解码过程中进行融合,构建更大的翻译推导空间.这样两个模型可以在一个解码框架下实现.文献[11]使用更加简单的框架在层次短语系统中使用树到串翻译模型:比如它只需要修改翻译文法,而几乎不用修改解码器就能实现该方法,而文献[10]的方法需要对解码器进行较大的改动,此外也需要开发新的最小错误率训练模块.但是,本文的工作与文献[10]和文献[11]的工作有明显区别:(1)本文重点研究了不同的解码策略对树到串模型在层次短语系统中的集成的影响,而这些解码方法并没有在相关工作中进行研究;(2)本文利用丰富的实验结果在NiuTrans开源系统上对比了不同方法解码方法的有效性,分析了多种因素对翻译性能的影响,并找出了最优的组合方式;(3)本文分析了翻译解码中各种规则的使用情况,并研究了树到串模型训练数据规模对翻译性能的影响.其他的一些工作专注于在层次短语系统中引入句法约束作为新的特征.比如,文献[5]和文献[4]分别在层次短语系统中尝试了句法软约束和硬约束来对翻译推导与源语言树结构的兼容性进行建模.但是,我们发现(见表1),这些约束特征在本文的基线系统上没有显示出优势,这也是本文研究新的句法信息在层次短语系统中的集成方法的出发点之一.除此之外,还有一些工作在SCFG规则中引入句法标记来间接地在层次短语系统中使用句法信息[6-9].但是这些工作均使用了类似于Hiero系统的短语/层次短语抽取方法.相比之下,本文所使用的框架方法是直接使用GHKM进行规则抽取,因此不受传统短语/层次短语抽取中的各种约束的限制.更重要的是,我们的方法在解码中可以更加充分地利用源语言句法树的层次结构信息,这些在传统的基于SCFG的系统中是无法使用的.①这里1best结果是指机器翻译系统模型得分最高的翻译结Page136总结及展望本文重点研究了在层次短语系统中集成源语言句法信息的解码问题,并采用了多种解码方法来有效地增加系统的搜索空间.在NISTMT08-12汉英机器翻译测试集上该方法超过了基线系统1.2个BLEU点以上.本文分析了该框架下影响性能的主要因素,并发现基于串的解码结合树二叉化方法可以得到最大的性能提升.此外,本文还分析了解码中各种规则的使用比例,并研究了树到串模型训练数据规模对翻译结果的影响.在未来的工作中,我们拟对树到树模型在层次短语系统中的有效集成进行深入研究.致谢首先感谢《计算机学报》的编辑老师和各位评委专家对本文工作所提出的宝贵修改意见.同时感谢东北大学自然语言处理实验室的李强在本文实验系统的准备中所提供的帮助,感谢杜权在本文实验数据准备、加工方面所提供的帮助,感谢高瑜泽和杨春杰对本文文字内容的改进意见!
