Page1一种递归定义的可扩展片上网络拓扑结构朱晓静(中国科学院计算技术研究所计算机系统结构重点实验室北京100190)(北京龙芯中科技术服务中心有限公司北京100190)摘要晶体管工艺的持续发展导致片上处理器数的逐渐增多,片上系统的核间通信要求吞吐量高、延时低、可扩展性好,传统的片上总线和crossbar互连结构已无法满足片上系统的通信需求,为此研究者提出新的片上互连结构,称为片上网络.为满足片上网络的特有通信需求,提出了一种可扩展的拓扑结构Rgrid及其路由算法DR,它缩短了片上处理器间的平均距离并且比Torus结构容易实现.作者在龙芯用户级模拟器上分别实现Mesh和Rgrid结构,运行Splash2并行测试程序集比较这两种结构的性能优劣.运行程序结果表明,Splash2程序在Rgrid结构中运行得到的IPC比在Mesh结构增加了0.5%~148%,Rgrid结构的平均延时比Mesh小5%~81%.关键词拓扑结构;片上网络;可扩展;性能优化1引言由于晶体管工艺的发展和处理器主频的快速增长,片上总线的带宽和延时已满足不了片上多核通信的要求,总线的长连线延时成为片上系统性能进一步提高的瓶颈.为了更好地组织片上数目众多的处理器核,设计者需要一个模块化、扩展性好、可重用、高性能的互连结构.2001年,Dally、Sgroi等[1-2]分别提出了片上网络(NetworkonChip)互连结构,简称Page2NoC.基于Switch结构的片上网络能克服片上总线吞吐量低、连线长的缺点,在片上网络中可以有多个核同时传输多条信息,提高了通信带宽,使得片上资源利用率更高.片上网络技术可以提高系统的性能和可扩展性并降低片上系统的面积和功耗.近年来片上网络的研究包括拓扑结构的性能分析、低功耗设计、路由器结构设计、容错算法设计、测试与实现方法等等.片上网络的性能标准有吞吐量、传输延时、功耗、面积等.在设计片上网络时,除了要选择拓扑结构、路由算法,还要考虑路由switch的结构,如端口的FIFO、arbiter、MUX、虚通道等.如何在设计时选择合适的结构和算法,需要大量的性能分析.常用的网络拓扑结构有2D-mesh、Torus、Ring、Hypercube、Star、Fat-tree等.这些结构以前主要应用于大规模并行机的互联系统,近年来研究者将这些结构在片上网络中实现并对其进行性能分析[3].片上系统与大规模并行系统的设计标准差异很大,设计时要考虑功耗、面积、硬件实现难度等问题.由于片上连线更细,片上系统可以在同样面积内布置更多线,得到更高的带宽;片上系统要求通信延时跟时钟周期处于同一数量级,需要更低的通信延时,同时switch结构不能过于复杂,拓扑结构的设计要充分考虑布线的实现难度.目前在经典拓扑结构基础上进行性能分析的研究较多,有研究者提出新的网络拓扑结构[4],但很少有人专门为片上系统提出新的拓扑结构.Pavlidis等提出在片上系统中使用3-D拓扑结构[5],这样做无疑可以减小节点之间的跳数(hop),但却给物理设计带来了极大挑战.片上系统跟大规模并行系统的特征存在较大差异,设计一个适用于片上网络,能够提供低延时、高带宽、硬件实现难度不高的拓扑结构是很有意义的.本文第2节介绍相关工作;第3节给出Rgrid拓扑结构的定义、结构特征及硬件实现难度;第4节定义Rgrid的路由算法DR;第5节在龙芯用户级模拟器上分析Splash2程序在Rgrid与Mesh结构的性能优劣;最后是总结.2拓扑结构和路由算法拓扑结构和路由算法的选择对于片上网络系统性能影响很大.Switch间的联线共同组成片上网络的拓扑结构,拓扑结构的选择不仅影响延时与吞吐量,还会影响片上面积和功耗.拓扑结构可以分为二维结构和多维结构,二维结构在片上实现更容易些,但多维结构的节点间距离(以hop计数)通常小一些.在片上系统研究中最常用的拓扑结构是Mesh结构,这种结构通常采用XY路由算法,XY是一种无死锁的最短路径路由算法,实现简单,路由的硬件开销较小,本文的性能分析部分Mesh结构就采用了这种算法.研究结果表明[6],同样的网络规模下,Mesh结构的网络面积较大.Mesh结构虽然实现简单,但是节点间平均距离(hop)比较大,因此直接导致Mesh结构的通信延时比较长.Pande[3]详细分析了几种拓扑结构的性能,这些结构包括SPIN[7]、CLICH?[8]、Torus[2]、Foldedtorus、Octagon[9]和BFT[10].可扩展性是衡量片上系统性能的一个重要标准,Farahabady提出了一种金字塔形的可扩展拓扑结构,称为WK-Pyra-mid[4],这是一个可以递归定义的三维拓扑结构,该结构的优点是网络直径和节点间平均距离较小从而路由速度比较快,但三维的拓扑结构和密集的节点间连线使得物理布局布线难度增大,因而难以在片上系统实现.路由算法可以分为健忘性算法和自适应性算法两类,其中健忘性算法在路由过程中完全不考虑当前状况,只根据源节点和目标节点的位置确定所走的路径,自适应性算法又分为确定性和随机算法两类.DaehoSeo[11]为2D-mesh提出了一种新的路由算法O1TURN,并将其与DOR、VALIANT、ROMM一系列健忘性算法作比较.因此设计新的路由算法对于片上网络的性能优化有一定的帮助.3Rgrid结构的定义、结构特征、本文提出一种新的可扩展的网络拓扑结构,命硬件实现难度3.1Rgrid结构定义名为recursive-grid,简称Rgrid,如图1所示.定义1(Rgrid).Rgrid的形式化定义为Ri+1=Ri∪(4i×R1).意思即为i+1层结构Ri+1是由i层结构Ri和4i个基本块组成的.可见Rgrid是递归定义的,它的基本结构R1如图1(a)所示,由4个全相连的节点组成,这是拓扑结构定义的基本块,2层结构R2的定义如图1(b)所示,分别在R1的4个顶点上再添加4个基本块,3层结构R3的定义如图1(c)所示,在R2的所有外部顶点上共添加8个基本块.Page33.2Rgrid结构特征节点数N(n).基本结构的节点数为4=(2×1)2,2层结构的节点数为16=(2×2)2,3层结构的节点数为36=(2×3)2.因此可以归纳得出结论:对于n层结构,节点总数N(n)=(2×n)2.边数E(n).基本结构的边数为6,2层结构的边数为6×5=30,3层结构的边数为6×13=78,归纳可知,对于n层结构,边的总数为E(n)=(2n+1-3)×6.基本块数B(n).基本结构的基本块的个数为1=22-3,2层结构的基本块的个数为5=23-3,3层结构的基本块的个数为13=24-3,归纳可知,对于n层结构基本块的个数为B(n)=2n+1-3.直径D(n).基本块直径为1,2层结构的直径为3,3层结构的直径为5,归纳可知,n层结构的直径D(n)=2n-1.节点间平均距离H(n).H(n)的定义是,H(n)=∑distance(i,j)/N2,意思即为节点间平均距离是所有的节点间距离之和除以节点对的个数,其中i,j表示节点,distance(i,j)表示节点i和j之间的距离,N表示节点总数.对于1层结构,所有节点间距离都是1,因此H(1)=1;2层结构中,共有两种不同位置的节点,H(2)=((1×6+2×9)×4+(1×3+2×3+3×9)×12)/(16×16)=(96+36×12)/256=528/256=2.06;3层结构中,有5种不同位置的节点,H(3)=((1×3+2×3+3×9+4×7+5×13)×12+(1×6+2×9+3×7+4×13)×4+(1×6+2×11+3×10+4×8)×8+(1×3+2×6+3×14+4×4+5×8)×8+(1×6+2×16+3×13)×4)/(36×36)=(129×12+97×4+90×8+113×8+77×4)/(36×36)=2.98.综合上述结果,对于N×N的Mesh,节点间的平均距离Hm=2N/3[12],边数为Em=2N2-2N,直径Dm=2N-1;对于N×N的Torus,若N是偶数,那么节点间平均距离Ht=N/2[12],边数Et=2N2,直径Dt=N.2层Rgrid的节点数为(2×2)2,与4×4的Mesh/Torus规模相等,3层Rgrid的节点数为(2×3)2,与6×6的Mesh/Torus规模相等.比较这3种拓扑结构的参数,当N=4时,Mesh、Torus与2层Rgrid的节点数同为16,比较三者的平均距离:Hm=8/3,Ht=2,Hr=2.06;比较直径:Dm=6,Dt=4,Dr=3;比较边数:Em=24,Et=32,Er=30.当N=6时,Mesh、Torus、3层Rgrid的节点数同为36,比较三者的平均距离:Hm=4,Ht=3,Hr=2.98;比较直径:Dm=10,Dt=6,Dr=5;比较边数:Em=60,Et=72,Er=78.由此可见,当网络规模相同时,Rgrid的网络直径最小,节点间平均距离小于Mesh结构,略大于Torus结构,当网络规模小于等于10×10,3种结构的边数基本属于同一数量级,仅当网络规模大于5层Rgrid时,Rgrid的边数才会远远超出Mesh和Torus结构.图2对Mesh、Torus、Rgrid3种结构的理论特性作了直观比较.综合来看,Rgrid增加了结构中的连线个数从而缩短节点间距离.Rgrid的节点间平均距离和直径跟Torus相近,都比Mesh结构小.下面一小节给出说明,Rgrid的硬件实现难度比Torus低,更容易实现.3.3Rgrid硬件实现难度与开销分析3.3.1连线延时分析对于片上网络,拓扑结构的物理布线直接影响处理器间的线延时,如果互连结构的线延时太长会使得在一拍内数据无法从一个节点传输到下一个节点.文献[3]中给出图3所示几种拓扑结构,布线最方便的应该是Mesh结构,在Mesh结构中所有边的长度都相等,由于有较长的回边,Torus结构的布线变得困难,因此在互连结构中通常使用Torus结构的另外一种形式:Folded-torus.Folded-torus可以缩短最长的线长度,从而它的线延时比Torus结构小.片上系统的物理布线通常都是水平和垂直布线,因此在Rgrid结构中,斜边要经过水平和垂直两个方向,它的长度是水平或垂直边的二倍,这样长度Page4的线延时可以在一拍之内完成,如图1所示,网络规模扩大不会引起Rgrid中的边增长,而Torus结构中最长边的长度跟网络节点数的平方根成正比,Rgrid的扩展性很好.因此Rgrid的硬件实现难度跟Mesh结构相近,比Torus结构容易实现.3.3.2面积和功耗分析片上网络中,功耗面积开销较大的部分主要是buffer模块和路由器间连线.Alpha21364的路由器和连线功耗共有23W[13],其中58%是由连线电路消耗的.Rgrid增加了路由器间端口数,也增加了路由器间连线数目,从而增加了片上的功耗和面积,每个路由器的端口数目从原来的5(本地端口加上4个外部方向)增加到7(本地端口加上6个外部方向),路由器间连线数大约增加了40%,输入输出端口间的连线数目大约增加了一倍(连线数从52=25增加到72=49),因此路由器本身的连线功耗和面积大约增加了一倍.从这个方面进行分析,Rgrid比Mesh结构增加了大量的片上功耗与面积开销,但增加的开销不会超出原来的一倍.4Rgrid的路由算法DRDR(DeterministicroutingalgorithmofRgrid)算法,即Rgrid的确定性算法.其实现如图4所示,该算法不是最短路径算法,但所得路径长度最多是最短路径算法长度加1,如图3(b)所示,从源节点S(2,2)到目标节点D(3,0),路径长度为最短路径长度加1,而从源节点S(3,5)到目标节点D(5,2)走的路径则是最短路径.如图1所示,Rgrid结构的边有4个路由坐标轴,分别记为X,Y,XY(沿着这个方向x++,y++或者x--,y--),YX(沿着这个方向x++,y--或者x--,y++).在Rgrid拓扑结构中,内部节点的度数都是6,即每个节点有6个邻节点,X,Y,XY或者YX三个方向各两条边.设当前节点为C(cx,cy),目标节点为D(dx,dy),若(cx+cy)%2==0则表示当前节点有XY方向上的边,若(cx+cy)%2==1表示当前节点有YX方向的边.有一点需要注意,外围节点跟内部节点不同,它们只有3条邻边,因此当前节点或者目标节点在外围时要格外注意有些边是不存在的.举例说明,在2层Rgrid结构上,节点(1,0)和(2,0)不相邻,若要从节点(1,0)到(2,0)路由,就只能先走Y+方向,路经(1,0)->(1,1)->(2,1)->(2,0).DR算法包括两个函数.其中DR函数先处理目标节点的边缘情况,然后调用MIN函数,赋给MIN函数的参数可以保证目标节点是内部节点,这样MIN函数只需要处理当前节点位于边缘的情况,然后作出路由选择.这两个函数的伪代码如图4和图5所示.DR算法的路由过程如图6所示.Page5不动,那么先走Y方向MIN(cx,cy,dx,dy){//调用本函数之前,已经保证源节点跟目标节点绝对不相同,且目标节点是内部节点if((cy==0‖cy==mesh_width-1)((cx%2==1dx>cx)‖(cx%2==0&&dx<cx)){//若当前节点在最上面或最下面的水平线上,并且在X方向走If(dy>cy)走Y+方向;else走Y-方向;}elseif((cx==0‖cx==mesh_width-1)&&//若当前节点在最左边或者最右边的垂直线上,并且在Y方向if(dx>cx)走X+方向;else走X-方向;}elseif(cx<dxcy<dy(cx+cy)%2==0)走XY+方向;elseif(cx>dxcy>dy(cx+cy)%2==0)走XY-方向;elseif(cx<dxcy>dy(cx+cy)%2==1)走YX+方向;elseif(cx>dxcy<dy(cx+cy)%2==1)走YX-方向;elseif(abs(cx-dx)>=abs(cy-dy))走X方向;else走Y方向;}走不动,那么先走X方向elseMIN(cx,cy,mesh_width-2,1);DR(cx,cy,dx,cy){if(cx==dxcy==dy)HOME;//判断是否已到达目的elseif(abs(cx-dx)+abs(cy-dy)==1)走X或Y方向;//若与目标节点坐标距离为1,直接走X方向或者Y方向elseif(dx==0dy==0){//若目标节点是4个顶点之一if(cx==1cy==1)走XY-方向;//若与目标节点在XY方向上距离为1,走XY方向elseMIN(cx,cy,1,1);//否则调用MIN函数}elseif(dx==0dy==mesh_width-1){if(cx==1cy==mesh_width-2)走YX-方向;//若与目标节点在XY方向上距离为1,走YX方向elseMIN(cx,cy,1,mesh_width-2);}elseif(dx==mesh_width-1dy==0){if(cx==mesh_width-2cy==1)走YX+方向;}elseif(dx==mesh_width-1dy==mesh_width-1){if(cx==mesh_width-2cy==mesh_width-2)走XY+方向;elseMIN(cx,cy,mesh_width-2,mesh_width-2);}elseif(dx==0){if(dy%2==1cx-dx==1dy-cy==1)走YX-方向;elseif(dy%2==0cx-dx==1cy-dy==1)elseMIN(cx,cy,1,dy);}elseif(dx==mesh_width-1){if(dy%2==1dx-cx==1dy-cy==1)elseif(dy%2==0dx-cx==1cy-dy==1)elseMIN(cx,cy,mesh_width-2,dy);}elseif(dy==0){if(dx%2==0cx-dx==1cy-dy==1)走XY-方向;elseif(dx%2==1dx-cx==1cy-dy==1)elseMIN(cx,cy,dx,1);}elseif(dy==mesh_width-1){if(dx%2==0cx-dx==1dy-cy==1)elseif(dx%2==1dx-cx==1dy-cy==1)MIN(cx,cy,dx,mesh_width-2);}elseMIN(cx,cy,dx,dy);}走YX-方向;走XY+方向;5实验结果分析5.1模拟环境使用龙芯用户级模拟器作为本文的模拟工具[14].该模拟器采用CMP结构,访存结构为分布式共享存储,各处理器核的二级Cache分别映射到不同的访存地址空间段,增大二级Cache空间,同时也带来更多核间通信开销.该模拟器的特点还包括:L1cache和L2Cache具有包含关系;使用基于目录的Cache一致性协议,目录包含在L2Cache中;支持路由器使用多个虚通道;使用RoundRobin的仲裁策略;使用基于Credit的流控策略,可选择使用虫孔或存储转发流控机制.5.2Benchmark常用的计算机系统测试程序有MiBench、Medi-abench、DhryStone等.其中MiBench和Mediabench对应多媒体应用,DhryStone是一种综合测试程序集,没有特别针对什么应用,比较均衡.本文使用Splash2并行程序集作为测试程序,是Stanford大学开发的用于数值计算的基准测试程序,包含8个完整的应用程序和4个计算核心程序,都是科学与工程计算和计算机图形学方面的并行程序,主要用于评价SMP、CC-NUMA、DSM等共享存储类体系结构的计算机系统的性能.Splash2的程序名分别为Barnes、Cholesky、FFT、FMM、Page6LU、Ocean、Radiosity、Radix、Raytrace、Volrend、Water-Nsquared、Water-Spatial等.这些程序主要解决下列问题.Barnes:解决天体物理中的n-body问题;Fmm:模拟二维空间中物体运动;Water:水分子模拟;Cholesky:把一个稀疏矩阵分解成一个下三角矩阵与它的转置矩阵的乘积;Radix是一个迭代开r次方的数学计算程序;Fft:计算迭代开r次方根的倒数;Lu:把一个密集矩阵分解成一个下三角矩阵和一个上三角矩阵的乘积.文献[15]中给出了Splash2各程序通信量与处理器个数的关系:Radix的通信量与处理器个数基本无关,只跟输入数据集的大小有关;Barnes、Fmm、Lu、Ocean、Water-sp的核间通信量跟处理器数目的开平方成正比;Water-nsq的通信量跟处理器数目成正比;Radiosity、Raytrace、Volrend、Cholesky的通信量较难预测,跟数据的具体分布有关.5.3性能分析由于Splash2中的个别程序在多核模拟器上的运行时间较长,这里选择Splash2中的Ocean、Ocean_nc、Fft、Fmm、Lu、Lu_nc、Radix、Water_ns等运行时间较短的程序进行分析,比较Mesh结构和Rgrid的性能优劣,其中Mesh结构使用Dor算法进行路由,Rgrid使用上面提供的DR路由算法,Lu与Lu_nc的区别,以及Ocean与Ocean_nc的区别主要在于输入数据的分配方式不同.设处理器数为16,Mesh结构选用DOR算法进行路由,Rgrid结构使用DR算法路由,在模拟器上运行Splash2中的Ocean、Ocean_nc、Fft、Fmm、Radix、Lu、Lu_nc、Water_ns等几个程序.表1和图7、图8是运行结果在两种拓扑结构中关于通信数量、平均延时以及IPC三方面的比较结果.表1Mesh和Rgrid结构上关于包总数的比较OceanOcean_ncFftFmmRadixLuLu_ncWater_ns每个程序运行过程中发送的数据包总量并非确定不变,等待应答的请求方如果在规定的时间内没有收到应答,请求方会重新发包,因此不同的运行环境对应的信息量是不等的,延时较小会相应减少重复发包的次数,从而减少数据包的总数,如表1中Lu_nc程序,在Rgrid结构中的数据包总数比Mesh结构的包总数少将近50%.各程序的通信数据包总图7Mesh与Rgrid结构关于平均延时的比较数与发送的密集程度不一致,延时的减小未必与IPC的增大成正比,但IPC会随着延时的减小而增大,或随着延时的增大而减小.Radix程序在Mesh结构中性能好些,原因在于Rgrid中有4对结点间的距离大于Mesh中的距离,如图1所示,这4对节点分别是:(0,1)和(0,2),(3,1)和(3,2),(1,0)和(2,0),(1,3)和(2,3),这4对节点距离较远的劣势中和了Rgrid总体节点间距离偏小的优势.Lu_nc程序的性能提高最明显,Rgrid结构上所得IPC是在Mesh结构所得IPC的2.48倍,由此可见片间通信对于Lu_nc程序的性能影响很大.究其原因,应该是Mesh结构中Lu_nc程序的某些数据包一直没有到达目标节点,造成处理器长时间等待响应,从而导致处理器利用率降低,这样的连锁反应导致它原来的IPC非常低,提高通信效率能够大幅度减小Lu_nc程序的执行时间,从而增大IPC.将Rgrid结构与Mesh结构得到的模拟结果作比较:Ocean的IPC增加了6%,平均延时降低了约5.2%;Ocean_nc的IPC增加了8%,平均延时降低了9.5%;Fft的IPC增加了2.7%,平均延时降低了约15%;Fmm的IPC增加了约0.5,平均延时降低了25%;Radix的IPC减小了约1.2%,平均延时提高了约9%;Lu的IPC增加了约0.6%,平均延时降低了20%;Lu_nc的IPC增加了约148%,平均延Page7时降低了81%.上述各个程序中平均延时的降低跟IPC的增加比例并不一致,原因在于各程序的通信负载总量和密集程度并不相同,因此通信延时的降低对总体性能的影响也不一致,但总的来说,Rgrid结构所得IPC比Mesh结构提高了0.6%~148%,Rgrid所得平均延时比Mesh结构降低了约5%~81%.6总结Rgrid结构具有扩展性好、带宽高、节点间距小以及硬件实现难度低等优点.从模拟结果可以看出,对于Splash2中的大多数程序,Rgrid结构性能比Mesh结构的性能优越,两种结构相比较,使用Rgrid结构时程序IPC最多可以提高148%,平均延时可以降低81%.目前在C语言实现的用户级多核处理器模拟器上进行实验分析,接下来计划详细分析这种结构的面积、功耗等其它影响具体实现的相关因素,最终将Rgrid结构应用到片上网络系统中.
