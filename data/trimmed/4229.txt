Page1一种基于细粒度性能计数器建立系统实时功耗模型的方法程华1),2),3)陈左宁4)孙凝晖1),2)王明扬3)李超3)1)(中国科学院计算技术研究所北京100190)2)(中国科学院大学北京100039)3)(江南计算技术研究所江苏无锡214083)4)(国家并行计算机工程技术研究中心北京100190)摘要对计算机系统运行时功耗值的实时获取,是进行功耗动态管理的先决条件.性能计数器能够准确地反映各硬件部件的使用情况,进而反映其功耗情况.文中提出了一种基于细粒度性能计数器建立系统实时功耗模型的方法(SysPower),该方法由功耗模型设定、性能计数器选取、数据采样、模型求解、结果检验五个步骤组成,基本思路是:选取反映处理器、内存、I/O等主要部件运行状态的细粒度性能计数器作为预选特征值集合(Fpreslct),通过实验建立该集合与运行时系统总功耗的对应关系,采用多元线性回归法进行模型求解,得到各性能计数器对功耗的影响系数,从而建立系统的实时功耗模型,并得到对该系统运行时功耗产生实际影响的有效性能特征值集合(Feffect).在三个不同平台上的实验表明,该方法建立的功耗模型最大误差小于4%,针对每个平台使用三组不同的采样数据组合进行模型求解,得到的有效特征集合完全一致,证明了模型的稳定性.最后,综合三个平台的实验情况,给出了一个包含70个元素的性能计数器集合,作为该方法的缺省特征值集合(Fcommon_effect).关键词实时功耗模型;性能计数器;多元线性回归;绿色计算1引言近年来,能耗已经成为制约信息技术发展的重要因素[1-3],对计算机系统功耗值的实时获取,是动态功耗管理的前提和关键问题[4-5].采用直接在系统中添加功耗测量硬件部件的方式,代价较大,并且大部分的系统并不支持[6-7].因此,通过建立系统功耗模型,用软件的手段对系统功耗进行精确估计,具有十分现实的意义.以往的研究中,运行时系统的功耗估计模型主要采用基于指令[8-11]、基于每周期执行指令数[12]、基于主要硬件部件利用率[13-14]、基于系统主要性能参数等方法[15-20],由于选取的参数范围有限,导致估计精度不理想.计算机系统的实时功耗可分解为各硬件功能单元的功耗之和,而每个硬件功能单元的实时功耗由其固有的功耗特征和实时使用情况决定.因此,在功耗特征既定的情况下,获取到硬件单元的实时使用情况即可推算其实时功耗.硬件性能计数器监测到的活动事件的发生次数,能够准确直观地体现系统运行时的硬件部件使用情况,同时也是获得其功耗情况的最直观、最精确的途径.但是目前的研究中,对于如何选取作为特征值的性能计数器,如何建立特征值与系统功耗的关系模型,仍然不明确.实时功耗模型的方法,主要贡献是:本文提出一种基于细粒度性能计数器建立系统统实时功耗模型(简称SysPower模型);集合,作为预选特征集合(简称Fpreslct);(1)提出一种基于细粒度硬件性能计数器的系(2)提出一组反映系统运行状态的性能计数器(3)给出了该模型的求解方法,以及构建有效特征值集合(简称Feffect)的方法;(4)在三个不同系统平台上开展了实验,在基于单路4核CPU的系统、基于单路单核CPU的系统上,分别选取了211、199个性能计数器作为Fpreslct,采用本文提出的方法进行模型求解,结果显示,最大误差小于4%,证明了该模型的有效性;(5)在此基础上,对以上三个平台的Feffect集合进行了分析,得到了在三个平台上都对系统总功耗Psystem产生影响的共性特征集合(Fcommon_effect),共包含70个元素,能够反映除风扇外所有主要功能部件的资源占用情况和活动状况.本文第2节对现有的运行时功耗估计技术进行了介绍;第3节描述本文提出的SysPower模型的构建方法,包括模型设定、性能计数器选取、数据采样、模型求解、结果检验;第4节介绍使用该方法在三个系统平台上的实验,证明了该方法的有效性;第5节对本文工作进行总结.2相关工作已有的运行时系统功耗估计技术可分成以下4类.(1)基于指令.通过配置指令级功耗模拟器的参数,在进行性能模拟的同时,根据性能的输出数据获得能耗的输出.主要的研究工作有:Ye等人[8]提出并实现了基于指令周期的功耗估算工具SimplePower,用于在RTL级评估算法、体系结构和编译优化;Shivakumar等人[9]提出CACTI用于评估Cache延时、功耗等信息.Brooks等人[10]提出了体系结构级功耗评估工具Wattch,用于辅助体系结构人员在设计早期进行结构探索;Tiwari等人[11]提出指令级功耗建模方法,通过分析程序执行过程中执行的指令,并根据单Page3个指令的功耗值、不同指令间切换的功耗值,得到程序的功耗估算值,可用于评估一个特定软件的功耗.这种体系结构级、周期精确的指令级功耗模拟器,适用于现代超标量处理器的设计,但在实际使用中,由于商用处理器和模拟器之间、以及不同处理器之间的微结构已经有较大差异,难以用模拟器来准确描述实际系统,同时模拟方法速度较慢,难以用来支持计算机系统运行时功耗的实时度量.(2)基于每周期执行指令数.通过建立每周期执行指令数(InstructionPerClock,IPC)与功耗值的关系模型进行功耗估计.Li等人[12]观察到系统功耗与IPC密切相关,在实验中还发现系统调用的功耗表现出了与其性能很大的相关性.这种功耗度量方法由于仅考虑CPU的IPC,未考虑其它部件的使用情况,因此估算的准确率有限.(3)基于主要硬件部件利用率.该方法在已知系统各主要模块的最大功耗的前提下,通过建立各主要模块利用率与系统总功耗的线性关系来建立功耗模型,如Economou等人[13]提出基于系统主要硬件部件的利用率进行功耗估计,分别测定系统各主要模块在满负载时的最大功耗,通过跟踪系统运行时各模块的利用率,建立系统功耗与各主要硬件部件利用率的线性模型.这种模型建立在如下假设的基础上:各模块的功耗等于该模块的最大功耗×利用率,即实际功耗与最大功耗之间是线性关系.本文通过实际测试发现,这种线性关系对于CPU是不完全成立的,对于同一软硬件系统的不同的应用,在CPU利用率都为100%的情况下,CPU的功耗值可以相差30%以上.(4)基于系统主要性能计数器.通过建立系统主要性能参数与功耗值的关系模型进行功耗估计.Chen等人[15]提出一种在线的、支持多核多线程环境的处理器性能和功耗估算方法,该性能模型采用复用距离直方图、高速缓存访问频率、每个进程的吞吐量和缓存命中率之间的关系来预测系统的吞吐量,系统级功耗模型使用多变量线性回归推导.Singh等人[17]提出一种基于性能计数器的多程序多核心环境功率估计模型,这种功率模型的建立过程是临时性的,需要用户手动调整模型参数,此外,他们的功耗模型无法处理统一核心上进程之间的时间共享[15].Contreras等人[18-19]的模型中使用了一套功耗权重值,用以将6个硬件性能计数器的值映射到处理器和内存的功耗,功耗权重值是利用参数估计技术得到的.Bircher等人[20]提出使用回归曲线拟合,利用9个性能计数器,得到CPU、内存、芯片组、I/O、磁盘五个子系统的功耗模型,平均误差小于9%.以上模型由于只是用了少量的性能计数器,在反映计算机系统整体功耗方面有所欠缺.事实上,除了缓存失效率、内存缺页故障,逻辑IO请求的个数、设备IO操作数量等因素外,还存在其它多种因素对运行时系统的功耗产生影响,对于这些因素的忽略将会不可避免地影响功耗模型的准确度.3基于细粒度性能计数器的系统实时功耗模型3.1模型的提出计算机系统的实时功耗是由CPU、内存、磁盘、网络等所有硬件功能部件的实时功耗组成,而每个硬件功能部件的实时功耗为其所有功能单元的功耗之和.设一个计算机系统(System)由n个功能部件(Component)组成,第i个功能部件Componenti由li个功能单元(Unit)组成,系统的总功耗为Psystem,第i个功能部件的功耗为Pcomponenti,第i个功能部件的第j个功能单元的功耗为Punitij成可以表示为由此,求解系统总功耗的问题可以归结为对功能单元的功耗的求解.功能单元运行时的功耗取决于2个因素:(1)硬件固有的功耗特征;(2)运行时使用情况.因此,在功耗特征既定的情况下,获取到功能单元的使用情况即可推算其实时功耗.硬件性能计数器监测到的活动事件的发生次数,能够准确直观地体现系统运行时的硬件部件使用情况,同时也是获得其功耗情况的最直观、最精确的途径.当前的主流处理器均定义了丰富的硬件事件集合,并配置了相应的硬件性能计数器以记录这些活动事件,从而为通过性能计数器描述系统功耗提供了条件.计算机系统是一个通过分工合作共同完成既定任务的复杂系统,功能单元与性能计数器之间呈现多对多的相关性.任何功能单元都与其它部分有着紧密的相互作用,难以通过单个性能计数器完整地反映其工作情况,如:对内存的读取访问,同时也意味着系统已经对L1Cache、L2Cache、L3Cache进Page4行过访问;同样,各性能计数器所代表的活动事件之间存在复杂的相关关系,一个性能计数器的变化的同时,与之相关的性能计数器也在发生相应的变化.L3Cache的命中,同时也意味着记录L1CacheMiss、L2CacheMiss的性能计数器值增加,分支预测失败,不仅会导致BranchPredictionMiss问题,也可能会导致浮点和整数计算单元的利用率下降.由此可知,一个功能单元的使用情况一般与多个性能计数器相关,由多个相关性能计数器的线性组合估计功能单元的功耗,比只使用一个性能计数器更符合实际情况.设Fpreslct为系统提供的性能计数器全集,且Fpreslct中有m个活动事件,fk为第k个性能计数器的值,第k个性能计数器对Punitij的影响权值为wijk,βij为常量(其中包括该部件的静态功耗),则可得以下公式Punitij=βij+∑mPsystem=∑n设w0=∑n功耗与性能计数器值的关系可表示为犠的可解性和精确性是模型的关键.其中,fk为第k个性能计数器的值,wk为第k个性能计数器代表的系统行为对系统功耗的影响权值.3.2求解过程对于特定的目标系统,需要确定两组参数集合:(1)预选特征集合Fpreslct={fk,k=1,2,…,m};(2)影响权值的集合犠={wk,k=1,2,…,m},本文通过5个步骤完成模型的求解:(1)建立实验环境.该环境能够实时记录Fpreslct和Psystem;(2)建立Fpreslct集合.选取反映CPU、主存、I/O、网络等主要设备运行状态的性能计数器,建立Fpreslct集合;(3)样本提取,建立多元一次方程组.对选定的系统运行有效的测试激励,同步采样Fpreslct={fk,k=1,2,…,m}与Psystem,得到足够多的样本,设最终用于模型求解的样本数量为s,建立反映运行时Fpreslct与Psystem对应关系的多元一次方程组,设w0为常数,μt为第t个样本的估计误差,U={μt,t=1,2,…,s},则方程组为Psystem1=w0+w1×f11+w2×f21+w3×f31+…+烄wm×fm1+μ1Psystem2=w0+w1×f12+w2×f22+w3×f32+…+烅wm×fm2+μ2Psystems=w0+w1×f1s+w2×f2s+w3×f3s+…+ws×fms+μ烆的求解.模型求解,使得误差平方和∑s(5)模型有效性验证.依据多元线性回归的方法的模型检验标准,检验模型的显著性水平α、残差r、相关系数r2、概率P等参数,验证模型的有效性;①如通过了有效性验证,则得到该系统的功耗模型Psystem=w0+w1×f1+w2×f2+…+wm×fm、有效特征值集合Feffect、权值集合W={wk,k=1,2,…,m};②如未通过有效性验证,则回归到第(2)步,调(4)模型求解.通过多元线性回归的方法进行由此,权值的求解过程可推导为对以上方程组整Fpreslct和测试激励,继续实验.3.3实验环境对于Psystem实时功耗采样,本文使用安捷伦8848A功耗分析仪进行,将其探头接入电源线,获取整机的实时电流输出值.在控制端运行外部监控程序,通过标准GPIB接口实时读取功率分析仪的输出,并保存在本地文件中进行后期处理.测试时使用220V高精度稳压电源,设置系统采样频率为每5s一次,平均每个采样点为50个连续电流采样的平均值.本文的实验环境如图1所示.Page53.4建立犉preslct集合原则:的局部运行情况;况,全面反映系统各部分的性能表现;对于Fpreslct集合中元素的选择,本文给出了3点(1)有效性.可以实时获得,并有效地反映系统(2)全面性.能够有效刻画系统的实时运行情(3)独立性.元素之间不存在包含关系,例如,cpu%=usr%+sys%+iowait%+idle%,则cpu%不应该在参数集合中.为了确保Fpreslct集合能够有效反映系统的运行情况,不遗漏重要的性能计数器,首先尽可能多地将所有不存在包含关系的性能影响因素都加入Fpreslct集合中,在模型求解后,再将权值为0的性能计数器去除,从而得到一组对系统运行功耗存在有效影响的性能计数器集合,做为有效特征值集合(简称Feffect).进一步,为满足实时性的要求,也可以在实时性和精确性之间进行权衡,对模型进行精简.本文选取的Fpreslct集合如表1所示.分类内存分页监控I/O及传输速率监控块设备监控网络设备监控网络设备错误监控NFS监控统计成功的、重传的RPC调用次数等信息套接字监控统计使用的TCP、UDP、RAW、IP段以及总共的套平均负载和队列监控内存资源监控CPU资源监控内核表监控统计索引节点、文件句柄、伪终端的数量等信息3.5样本提取使用情况,样本应满足以下要求:为减少抽样误差,确保样本能够全面反映系统各水平上基本呈正态分布;足方差齐性,在各水平的样本量大致相等;(1)正态分布.样本集合在所有性能计数器的(2)方差齐性.Psystem在性能计数器各水平上满(3)样本独立性.采样点之间无相关性,本实验中,重点关注对于时序相关性和资源相关性的消除.为此,需要对典型应用中各主要部件使用情况进行概率统计,选择能够符合以上概率的典型Benchmark作为测试激励,并通过覆盖率测试,验证这些Benchmark的代表性和全面性.本文选取了体现CPU、Cache、主存、I/O、网络、总线等主要设备的典型Benchmark,包括Lmbench、Unixbench、Iozone、LTPstress、Netperf、NPB、Cachebench.在运行以上Benchmark的过程中,每隔5秒钟,同步采样性能计数器和电流的数值,计入日志文件.接下来,对日志中的采样数据进行统计和处理,进行以下3个步骤的处理,以满足样本方差齐性、正态分布和独立性的要求:(1)方差齐性.统计各性能计数器值的平均值和方差,对于方差较大的性能计数器,分析其取值分布,有针对性地进行补充测试,以减小与其它性能计数器的方差,直到各性能计数器值的方差基本相同为止;(2)正态分布.由于本文提出的方法是在假定系统输入电压恒定的前提下,通过测试系统电流来计算实时功耗,为保证样本的方差齐性.对于电流值,取0.1A为步长,统计采样样本在各电流区间的分布,减少样本密度较高的区间中的样本数,直到各区间的采样数基本相同为止;通过以上两步,得到了作为模型求解的样本集合,表2是本文在三个平台上采用的样本统计.BenchmarkLmbench178521131684Unixbench165429161883Iozone143511951335LTPstress146116421247Netperf139313091512NPBCachebench1263合计120691116912868Page6(3)样本独立性.样本独立性的强弱关系决定其均值差异检验的统计显著性高低关系,二者是完全吻合的[21],即样本间独立性越强其均值差异的显著性就越高,独立性越弱其均值差异的显著性就越低[21].由于连续2个样本之间不可避免地存在时序相关性、资源相关性,因此,本文中的样本独立性重点关注降低这二者对模型精度的影响.增大采样周期可以有效地提高样本的独立性,通过实验我们也发现,在样本数量相同的前提下,适当增大采样周期能够有效提高模型的精度.与此同时,为保证输入样本的数量,增大采样周期的同时也要求延长总的采样时间,需要相应地增加基准测试的种类及参数组合.最终选定的每隔5s的采样间隔,是在样本数量和采样间隔之间权衡的结果.3.6权值求解回归方程的求解.本文采用Matlab的regress函数进行多元线性设Q=∑s求解可归结为求犠={wk,k=1,2,…,m},使得Q达到最小.即w0=-2∑sQ烄w1=-2∑sQ烅wm=-2∑sQ烆化简可得f2t+…+wm∑s设犉=可以简写成可得最大似然估计值:使用Matlab中的regress函数进行多元线性回归,得到系统的功耗模型SysPower=犠×Fpreslct.并取Fpreslct中的非0元素组成Feffect,Feffect中的性能计数器所代表的系统事件对功耗是有影响的.3.7结果检验标准为了确认回归模型是否符合变量之间的客观规律,需要对回归模型进行检验,以确定预测结果的可设以下s组采样样本用于模型求解:(f11,f21,…,fm1,P1)…(f1s,f2s,…,fms,Ps).取珡w0,珡w1,…,珡wn.当w0=珡w0,w1=珡w1,…,wm=珡wm时,μt=Psystemt-w0-w1×f1t-w2×f2t…wm×fmt,t=1,2,…,s.fmt=∑st=1信程度.本文中,对于满足正态分布和方差齐性的样本,取前10000条进行随机的乱序重排并作为模型求解的输入,使用多元线性回归法求解功耗模型,其余样本中取1000条用于对模型的精确度评价,使用Matlab中的regress函数进行多元线性回归方程求解.其公式为其中:10000};合矩阵犠={wk,k=1,2,…,m}的积;性关系成立;[b,bint,r,rint,stats]=regress(Y,X,a),(1)Y为样本的功耗值集合{Psystemt,t=1,2,…,(2)X为Fpreslct={fk,k=1,2,…,m}与权值集(3)α表示显著性水平,一般小于0.05表示线(4)b为回归系数,即求解的参数.本文中为(5)bint表示回归系数的区间估计.本文中为Fpreslct对功耗的权值集合犠;Page7(6)r表示残差,即估计值与实际值之差;(7)rint表示回归系数b的置信区间;(8)stats表示用于检验回归模型的统计量,有3个数值:相关系数r2、F值、与F对应的概率P.该函数规定,相关系数r2越接近1,说明回归方程越显著;F越大,说明回归方程越显著;与F对应的概率P<α时,表示回归模型成立.本文认为验证SysPower功耗模型的标准如下:(1)相关系数r2>0.9,r2值越大说明模型越(2)F>150,F值越大说明模型越准确;(3)P<α,即P<0.05,P值越小说明模型越(4)在多核SMP系统中,代表每个核的相同性能计数器,例如CPU0、CPU1的内核态运行时间百分比,在模型中的权值应该相似,相差不大于5%;准确;准确;犠={wk,k=1,2,…,m}的区间估计;(5)模型的绝对估计误差<5%.4实验分析在3.5节中,针对神威D1000、DELLPC、龙芯电脑,本文分别采样了12069、11169、12868份样本.根据前期实验的经验,在采样间隔为5s、样本数量在9000~11000份时模型的精度较好.为便于对比,本文对每一个平台都取最后1000份样本进行模型精确度检验,其余样本中取10000份用于模型求解.同时,由3.5节可知适当增加采样间隔有利于减小样本间相关性,为尽量利用所有的采样样本,使模型尽可能精确,本文采取了在其余样本中随机抽取10000份样本的方式.4.1神威D1000配置参数如表3所示.神威D1000电脑采用申威四核CPU,具体系统Technology/Frequency根据神威D1000PC的结构,本文预先选定211个性能计数器作为Fpreslct,按照第3.5节的方法进行样本提取,对于最终得到的样本,取最后的1000份用于模型验证和精确度评价,其余样本中,先后3次从中随机抽取10000份样本作为模型求解的输入,使用Matlab中的regress函数分别进行模型求解.实验结果表明,三组数据所得到的功耗模型的r2分别为0.87480、0.87477、0.87479,在预先选定的211个性能计数器中,三组模型得到的有效特征集合(权值非0)Feffect完全一致,包含74个性能计数器,这表明本文提出的模型构建方法具有较好的稳定性,同时也表示这74个性能计数器所代表的系统运行情况对功耗是有贡献的,由此得到神威D1000PC的有效特征集合:Feffect_神威D1000.本文选取了r2最大的功耗模型,具体见附录.该模型的r2=0.87480(越接近于1,回归效果越显著),F=275.1558,P=0,由P<0.05,可知回归模型SysPower神威D1000成立.使用剩余数据中的1000份采样数据进行模型的精确度评价,估计值与实际值的误差如图2所示.对这1000组估计数据的误差分布情况统计如表4所示.标准差均方差最大绝0.00242.39E-063.18%88.20%11.00%0.70%0.10%以上数据显示,在99.9%的情况下,该功耗模型的误差在3%以内,因此,在基于申威四核CPU的神威D1000PC上,采用本文提出的方法所构建的功耗模型是有效的.4.2DELLOptiplex750PCCPU,其系统配置参数如表5所示.DELLOptiplex750PC采用IntelQ8200四核Page8Technology/FrequencyNumberofcores根据DELLOptiplex750PC的结构,预先选定211个性能计数器作为Fpreslct,并按照4.1节的方法进行样本采样和精确度评价.实验结果表明,三组数据所得到的功耗模型的r2分别为0.96658、0.96660、0.96656,在预先选定的211个性能计数器中,三组模型得到的有效特征集合(权值非0)Feffect完全一致,包含79个性能计数器,这表明本文提出的模型构建方法具有较好的稳定性,由此得到该平台的有效特征集合:Feffect_DELLOptiplex750.本文选取了r2最大的功耗模型,由于篇幅所限,不详细列出该模型,具体见附录.该模型的r2=0.96660,F=810.08,P=0,由P<0.05,可知回归模型SysPowerDELLOptiplex750成立.使用剩余数据中的1000份采样数据进行模型的精确度评价,估计值与实际值的误差如图3所示.对这1000组估计数据的误差分布情况统计如表6所示.标准差均方差最大绝0.01011.01E-053.73%79.30%15.20%4.60%0.90%以上数据显示,在99.1%的情况下,该功耗模型的误差在3%以内,因此,在基于IntelQ8200四核CPU的DELLOptiplex750PC上,采用本文提出的方法所构建的功耗模型是有效的.4.3龙芯2F6003置参数如表7所示.龙芯2F6003采用龙芯2F单核CPU,其系统配Technology/Frequency由于龙芯2F6003采用龙芯2F单核CPU,因此本文在之前的211个性能计数器基础上,去除反映CPU1、CPU2、CPU3负载的12个性能计数器,将剩下的199个性能计数器作为Fpreslct,并按照4.1节的方法进行样本采样和精确度评价.实验结果表明,三组数据所得到的功耗模型的r2分别为0.88473、0.88489、0.88481,在预先选定的199个性能计数器中,三组模型得到的有效特征集合(权值非0)Feffect完全一致,包含63个性能计数器,这表明本文提出的模型构建方法具有较好的稳定性,由此得到该平台的有效特征集合:Feffect_龙芯2F6003.本文选取了r2最大的功耗模型,由于篇幅所限,不详细列出该模型,具体见附录.该模型的r2=0.88489,F=810.08,P=0,由P<0.05,可知回归模型SysPower龙芯2F6003成立.使用剩余数据中的1000份采样数据进行模型的精确度评价,估计值与实际值的误差如图4所示.对这1000组估计数据的误差分布情况统计如表8所示.Page9标准差均方差最大绝0.00444.44E-063.84%64.70%19.50%11.10%4.70%以上数据显示,在95.3%的情况下,该功耗模型的误差在3%以内,因此,在基于龙芯2F单核CPU的龙芯2F6003电脑上,采用本文提出的方法所构建的功耗模型是有效的.4.4结果分析在以上工作基础上,本文对以上三个平台的Feffect集合进行了分析,由于龙芯2F为单核CPU,没有针对4核处理器的1核、2核、3核的性能计数器,但这三个核的性能计数器对系统功耗有不可忽略的影响,因此本文将针对其余三个核的性能计数器也一起考虑,得到了在三个平台上都对系统总功耗Psystem产生影响的Fcommon_effect集合:Fcommon_effect=Feffect_神威D1000∩Feffect_DELLOptiplex750∩Feffect_龙芯2F6003.该集合共包含70个性能计数器,负责对CPU资源、平均负载和队列、内存资源、内存页操作情况、索引节点/文件内核表、I/O及传输速率、块设备活动情况、网络设备活动情况的监控,如表9所示.参数CPU利用率创建任务和系统切换内核表状态平均负载和队列内存相关信息参数页相关信息I/O设备统计信息块设备相关信息网络设备相关信息由表9可知,这70个性能计数器反映了系统内所有的主要功能部件的资源占用情况和活动状况,包括CPU资源、内存资源、磁盘、I/O、网络.值得注意的是,申威处理器与龙芯处理器同属于RISC架构,但是其功耗模型却存在一定的区别.在Feffect_神威D1000∩Feffect_龙芯2F6003中包含72个性能计数器,占Feffect_神威D1000的97.30%;而Feffect_龙芯2F6003集合中因为少了12个代表其余三个核的性能计数器,只有60个性能计数器包含在内,占Feffect_龙芯2F6003的95.23%.这说明处理器的具体实现和模拟器的存在一定差异,传统的模拟器的方法可以作为趋势性研究,但在描述处理器实时功耗方面精度不足.5结论及下一步工作本文提出一种基于细粒度性能计数器集合建立系统实时功耗模型的方法,由功耗模型设定、性能计数器选取、数据采样、模型求解、结果检验五个步骤组成.在基于申威四核CPU的神威D1000PC、基于Page10龙芯2F单核CPU的福珑PC、基于IntelQ8200四核CPU的DELLOptiplex750PC上,采用该方法分别建立相应的功耗模型SysPower神威D1000、表10三个平台上的功耗模型检验数据和误差分析SysPower神威D10000.87480275.1600.00242.39E-063.18%88.20%11.00%0.70%0.10%SysPowerDellOptiplex0.96660810.0800.01011.01E-053.73%79.30%15.20%4.60%0.90%SysPower龙芯2F60030.88489168.8700.00444.44E-063.84%64.70%19.50%11.10%4.70%在此基础上,对以上三个平台的Feffect集合进行了分析,得到了在三个平台上都对系统总功耗Psystem产生影响的Fcommon_effect集合,该集合共包含70个元素,反映了系统内所有的主要功能部件(除风扇)的资源占用情况和活动状况.本文的测试工作在相对恒温(18~20)的实验室环境中进行,未考虑温度变化对功耗的影响,此外,受实验平台所限,本文的实验只考虑系统的基本配置,未考虑无线、蓝牙、音频、图形加速卡等硬件设备的性能计数器.下一步,我们计划研究针对这些部件的典型负载,提出包括这些硬件部件的功耗模型构建方法.本文方法是基于统计的回归法,在神威D1000、DELLPC、龙芯电脑中,分别进行了12069、11169、12868次采样.如何消除相关性,如何使样本更好地满足正态分布、方差齐性的要求,从而进一步提高模型的精度,是很重要、同时也更为复杂和困难的问题,需要大量的实验探索,我们将在未来的工作中展开进一步的研究.此外,如果能够在本文的基础上,对参数的确定进行理论分析或估计,将硬件功能模块的性能模型和能耗模型有机结合起来,通过精心设计的实验测试方法自动获取系统性能和能耗参数,从而方便用户根据系统特性进行参数估计,进一步提高模型的通用性,也是本文下一步研究的重点.致谢在此,谨向对本文的工作提出宝贵建议的徐志伟老师、吴东老师,对协助作者进行环境搭建、数据处理工作的夏志禹工程师、张超容工程师表示诚挚的感谢!
