Page1云外包计算中空间位置关系的保密判定陈振华1),2)李顺东3)黄琼4)丁勇5)孙?1)1)(西安科技大学计算机科学与技术学院西安710054)2)(中国科学院信息工程研究所信息安全国家重点实验室北京100093)3)(陕西师范大学计算机科学学院西安710062)4)(华南农业大学数学与信息学院广州510642)5)(桂林电子科技大学广西密码学与信息安全重点实验室广西桂林541004)摘要目前安全多方几何计算问题都是在传统模式下依靠参与方交互完成,文中首次将安全多方几何计算问题转移到云计算平台下借助不可信第三方云服务器参与完成,这为安全多方计算提供了一个新的研究方向.传统模式下空间位置关系的保密判定已存方案,大多是把原问题转化为距离问题或数据对应成比例问题,造成了用户计算成本过大,或能判断的位置关系有限,而且这些方法只能由参与方相互交互完成,因此在云计算平台下并不适用.针对这些问题,文中首先将原问题转化为夹角问题,接着设计了适用于云外包计算的内积协议,然后基于此内积协议在云平台下解决了点线、线线、点面、线面、面面五种空间位置关系的保密判定,并用模拟范例证明了协议的安全性.最后的分析和比较显示,文中不但首次设计了云计算平台下空间位置关系的保密判断协议,并且设计的方案能判断的位置关系更加广泛,也为用户节省了更多的计算成本.此外,我们设计的内积协议可以作为一种新的云计算技术的基础协议,可以被其他协议调用.关键词安全多方计算;位置关系;空间几何;内积协议;云计算1引言安全多方计算最早由Yao[1]提出,是指在不泄漏各方的输入数据(隐私性)的条件下,能正确合作完成输入数据的函数计算(正确性).现实问题中涉及到保护隐私的合作计算都可以归结到安全多方计算的研究范围.因此它在保护隐私的质量评估[2]、定位查找[3-4]、数据挖掘[5]、数据查询[6-7]、外包计算[8]等方面有着广泛的应用.安全计算几何问题属于安全多方计算中的一个分支,是指各参与者都处在几何图形中,各自拥有几何图形中的一些参量,在不泄露各参与方数据隐私的条件下,合作计算一些几何问题.无论是在理论还是实际中,安全计算几何问题是经常会碰到的问题.针对于此,Yang等人[9]研究了平面上线和圆、圆和圆的位置关系.Liu等人[10]研究了更普遍意义上的点和一般曲线的位置关系.Qin等人[11]研究了平面曲线相交问题.Liu等人[12]研究了平面上三角形面积的计算问题.He等人[13]研究了平面上线和圆、线和双曲线的位置关系.但是这些问题都集中在平面几何上,而空间几何问题很少有人涉及.由于空间几何比平面几何更能形象的刻画现实世界,因此研究立体几何,意义更加重大.例如以下的场景:A国准备向C国发射航空导弹,但C国的领空上有A国的盟国B国的一部分秘密基地(如太空站),因此A国不能伤害自己的盟国,即A国的航空导弹不能穿过B国的秘密基地.但是为了军事机密,A国不能向B国透露自己的航空导弹轨道,而B国也不能向A国透露自己太空站的具体位置.那么双方如何在不暴露自己隐私的情况下,解决这个问题呢?以上场景属于保密军事问题,转化成数学模型就是保密判定空间中一个点是否在空间一条直线上,属于立体几何中空间位置关系的安全多方计算问题.但目前关于这方面的研究文献并不多.由于现实中很多问题都可以归结为此类问题,因此研究其理论意义对现实问题有着重要的应用价值.1.1相关工作针对立体几何中点、线、面等空间位置关系的安全多方计算问题,以往的学者们提出了一些解决方案.2006年,罗永龙等人[14]利用法向量与方向向量,将原问题转化成数据对应成比例的问题,从而解决了线线、线面、面面位置关系的判定.由于该方案调用了多种基本协议:百万富翁协议、点积协议,数据对应成比例协议.其中的数据对应成比例协议的复杂性,使得方案的计算成本和通信成本极高,成为了制约效率的瓶颈(后文表4有分析).2014年,Li等人[15]利用四面体的体积,将原问题转化为距离来判定点面、线面、面面的位置关系.此方法非常简单巧妙而且效率较高,但是由于该方法要利用四面体的体积,再通过距离解决空间位置关系.而点和直线、直线和直线,无法组成四面体,因此该方法要判断点与线、线与线的位置,并不适用.即,该方法能解决的Page3问题比较局限,能判断出的位置关系也比较单一(后文表5有分析).由于以上方案都是在传统模式下解决,并且由于使用的转化方法,使得用户的计算开销过大(罗永龙等人[14]的方法),或者解决的问题比较局限、能判断出的位置关系也比较单一(Li等人[15]的方法).传统的安全多方计算中不存在可信的第三方,都是由参与方相互交互合作完成计算任务.因此计算能力仅仅依靠用户本身,这在解决复杂问题时往往效率较低.云计算是一种新的服务交付和计算模式,具有强大的计算能力,因此人们想到可以将安全多方计算中的复杂计算任务以按需付费的形式外包给云,从而为用户节省大量的计算成本.但由于云计算服务器(第三方)是不可信的,因此将传统的安全多方计算模式转移到云计算平台下时,就有较大的区别,所用到的技术手段也有不同.若把本文空间位置关系的保密判定问题转移到云计算平台下进行研究,以往的协议[14-15]由于都是依靠参与方本身交互完成,并不适用于云计算平台.那么如何在不可信第三方存在的云平台下解决空间位置关系的保密判定正是本文要解决的问题.1.2本文贡献本文首次将传统的安全计算几何问题转移到云计算平台下,并利用内积解决了空间位置关系的保密判定.具体贡献如下:(1)提供了一种新的转化方法.本文将空间位置关系的判定问题转化为夹角问题.避免了前人多次求距离或数据对应成比例的方法.使得能判断的位置关系多样化、解决的问题更加广泛.(2)提供了新技术.本文设计的适用于云计算外包的内积协议,可单独作为一种新的云计算技术.(3)提供了新的研究方向.①将传统的无可信第三方的安全多方计算转移到有不可信第三方存在的云计算平台下进行研究.②借助云计算的能力为安全多方计算中的用户节省了计算成本.2预备知识2.1安全多方计算的安全性定义由于本文所涉及的参与方和云服务器都是半诚实模型,恶意模型下的协议可以根据Goldreich等人[16-17]的通用转化方法直接由半诚实模型下的协议转化得到.因此这里只给出半诚实模型下的协议和相应的安全性模拟范例.(1)半诚实参与者安全多方计算的协议运行环境分为半诚实参与者模型和恶意参与者模型[16-17],半诚实参与者指协议方将诚实地执行协议,不会篡改输入和输出信息,但可能会保留计算的中间结果,试图推导出协议之外的信息或者他人的信息.(2)半诚实模型下的安全性定义云计算平台下的安全两方计算,由于不可信第三方(云服务器)参与了计算,因此和传统模式下安全两方计算的安全性模拟范例略有不同.设Alice拥有x,Bob拥有y,Server是云服务器,f(x,y)为概率多项式函数,π是计算f的协议.三方要在不暴露x,y的前提下,合作计算函数f(x,y)=(f1(x,y),f2(x,y)).计算的目的是为了让Alice和Bob分别得到函数f的两个分量f1(x,y),f2(x,y).在整个计算过程中,要保证Alice(Bob)没有得到对方的隐私输入;Server也没有得到Alice和Bob的隐私输入;并且即使Server和其中一方合谋,也不能得到另一方的隐私.将Alice在执行协议π的过程中得到的视图记为view1(x,y);Bob的视图记为view2(x,y);Server的视图记为view3(x,y);Sever和Alice合谋的视图记为view4(x,y)=(view1(x,y),view3(x,y));Sever和Bob合谋的视图记为view5(x,y)=(view2(x,y),view3(x,y)).E(x),E(y)分别表示Alice和Bob发送给Server的数据(即Server获得的输入),E(x,y)表示Server的最后计算结果(即Server获得的输出),c表示计算上可区分.定义1.在云计算环境下,我们说协议π保密地计算了f(x,y),如果存在概率多项式时间的模拟器S1、S2、S3、S4、S5使得表1中的5个式子同时成立.表1中的5个式子同时成立,说明了参与者视图中的信息视图中不包含额外的信息,这样就保证了在协议执行过程中,无论合谋与否,都得不到其他方的私有信息.因此,要证明一个云计算环境下两方计算协议是保密的,就必须构造使得表1中的(1)(2)(3)(4)(5)式同时成立的模拟器S1、S2、S3、S4、S5.Page4类型表1云计算平台下两方计算的安全性不合谋合谋Bob的隐私性(相对于Server和Alice合谋)S4(x,E(x),E(y),f1(x,y),E(x,y))cview4(x,y)(4)2.2双线性对G1,G为两个同为素数阶q的乘法群,e为一个线性映射,e:G1×G1→G,g为G1的一个生成元,若e满足以下性质:(1)双线性性.对于任意的a,b∈Z,有等式e(ga,gb)=e(g,g)ab;(2)非退化性.e(g,g)≠1;(3)可计算性.对于任意的P,Q∈G1,e(P,Q)可有效计算.则e为群G1,G上的双线性对.2.3Boneh的2-DNF同态加密算法[18]设E是一个加密算法,C1=E(m1,r1)是对m1的加密,C2=E(m2,r2)是对m2的加密,其中r1,r2是两个随机数.若对于某个随机数r,有C1C2=E(m1m2,r),则称E是一个乘法同态加密算法;若有C1C2=E(m1+m2,r),则称E是一个加法同态加密算法.Boneh在文献[18]中提出了一种加密方案如下(图1).系统建立:解密者选取N=pq,其中p,q为两个素数,双线加密过程:明文m<p,任取随机数r∈ZN,密文c=gmhr.解密过程:密文c<N,明文m=cq,若m=1,则明文m=0;在以下公式中,令e(g,g)=g1,e(g,h)=h1,r1+r2=r,m2r1+m1r2+αpr1r2=r.由于h=up,因此h=gαp,α为一个为未知的整数.则有下式:e(c1,c2)=e(gm1hr1,gm2hr2)即S3(E(x),E(y),E(x,y))cview3(x,y)备注1.对于式(2)中的乘法同态,由于gm1m2因此Boneh加密方案具有多次加法同态和一次乘法同态性质.modN∈G,但G1,不能再进行双线性对运算,即只能进行一次乘法同态运算.3问题的描述和转化3.1本文研究的问题问题1.安全计算空间点与空间直线的位置关系.Alice有一个秘密的空间点p0(x0,y0,z0),Bob有一条秘密的空间直线Alice和Bob想在不泄露对方信息的条件下,判定点p0和直线L的位置关系(属于或不属于).问题2.安全计算空间点与空间平面的位置关系.Alice有一个秘密的空间点p0(x0,y0,z0),Bob有一个秘密的空间平面Π:Ax+By+Cz+D=0.Alice和Bob想在不泄露对方信息的条件下,判定点p0和平面Π的位置关系(属于或不属于).Alice有一条秘密的空间直线问题3.安全计算空间两直线的位置关系.Bob有一条秘密的空间直线Alice和Bob想在不泄露对方信息的条件下,判定直线L1与直线L2的位置关系(垂直、平行、重合或相交).问题4.安全计算空间直线与空间平面的位置关系.Alice有一条秘密的空间直线Bob有一个秘密的空间平面Π:A3x+B3y+C3z+Page5D3=0.Alice和Bob想在不泄露对方信息的条件下,判定直线L与平面Π的位置关系(垂直、平行、重合或相交).问题5.安全计算空间平面与空间平面的位置关系.Alice有一个秘密的空间平面Π1:A1x+B1y+C1z+D1=0,Bob有一个秘密的空间平面Π2:A2x+B2y+C2z+D2=0.Alice和Bob想在不泄露对方信息的条件下,判定平面Π1与平面Π2的位置关系(垂直、平行、重合或相交).3.2问题的转化本文中点与线、点与面的位置关系可以转化为一个点是否为一个方程的解;而线与线、线与面、面与面的位置关系可以转化为方向向量和法向量的夹角,最后利用保密内积协议解决.例如,要解决本文的问题4:判断一条直线L和一个平面Π的位置关系(图2).等价于已知直线L的方向向量犲,平面Π的法向量犱,那么两者之间的夹角为cosθ=〈犲,犱〉3种:(1)若cosθ=0,则直线和平面平行或重合;(2)若cosθ=±1,则直线和平面垂直;(3)其他则为相交.因此要判断直线和平面的位置关系,只需保密判断cosθ是否为0、±1或其他即可,而要求夹角,可借助内积协议求出〈犲,犱〉.3.3云计算外包下的内积协议根据3.2节的转化方法,原问题转化为夹角问题后,需要借助内积协议.但目前大多内积协议多是基于同态加密的方法[19-20],不可避免的要计算多个模幂运算,若处理的内积问题很大的话,会给用户带来较大的计算开销.借助云计算的能力,将内积协议中大多数的计算任务外包给云,用户只要付出少量费用,就可以让云完成用户所需的计算.但传统模式下的内积计算并不存在第三方,都是由参与方相互交互完成.而云计算平台下的内积计算需要不可信第三方(云服务器)参与计算过程.这种情况下,不可信第三方(云服务器)可能会将用户的数据信息泄露.因此用户需要在对云服务器保持输入和输出隐私的情况下完成所需要的计算任务.综上分析,由于云计算平台下的内积计算并不同于传统模式下的内积计算,此时传统的内积协议[19-20]都已经失效.因此基于Boneh的2-DNF同态加密算法[18],本文重新设计了一种适用于云外包计算下保密计算内积的协议.在本文场景中,假设所有的参与方和云服务器都是半诚实模型,网络之间传输都是公开信道.3.3.1具体内积协议协议1.云计算外包下的内积协议.输入:Alice保密输入犡=(x1,x2,…,xn),Bob保密输输出:Alice和Bob都知道〈犡,犢〉的值,但云服务器不1.Alice选择Boneh加密方案的参数,公布公钥(犲,G1,G,n=pq,g,h),保密私钥(p,q).计算a1=E(x1),a2=E(x2),…,an=E(xn),发送给云服务器.2.Bob选择随机数r(r≠0,1),用同样的Boneh加密算法计算b1=E(y1+r),b2=E(y2+r),…,bn=E(yn+r),并发送给云服务器.3.云服务器收到Alice和Bob发来的密文后,利用Boneh加密算法的同态性计算2-DNF的多项式,计算以下两式:c=e(a1,b1)…e(an,bn)c1=E(x1)…E(xn)云服务器将c,c1发送给Bob.4.Bob收到密文c,c1后,利用Boneh加密算法的加法同态性计算下式:并计算c3=c5.Alice解密c3,得到内积〈犡,犢〉,并将结果告诉Bob.分析:在协议1中,从直觉上可以看出,Alice利用加密算法保护了持有的向量犡的隐私性.Bob利用同样的加密算法保护了持有的向量犢的隐私性.但由于云服务器可以和任何一方合谋,而Alice具有解密密钥,若云服务器收到Bob发来的密文后和Alice合谋解密,这样Bob的隐私性就得到了破坏.为了抵抗合谋,在Bob的明文中加入随机数r,使得云服务器收到的密文即使交给Alice解密,也有n+1个未知数,却只有n个方程,仍然无法获得Bob的信息,因此保护了Bob的隐私.下面给出模Page6拟范例的形式化安全性证明.3.3.2安全性证明犢的内积〈犡,犢〉.定理1.协议1保密地计算了向量犡和向量证明.根据2.1节中的表1,需要构造5个模拟器S1,S2,S3,S4,S5.由于模拟器S1,S2的构造方法类似;S4,S5的构造情况类似.为了节省篇幅,只给出模拟器S1,S3,S4的构造方法,其余的构造过程省略.因此分为以下3种情况进行证明.(1)构造模拟器S1在本协议中或者f1(犡,犢)=f2(犡,犢)≠〈犡,犢〉.假设f1(犡,犢)=f2(犡,犢)=〈犡,犢〉,构造模拟器S1.S1接受(犡,f1(犡,犢))作为输入,按如下方式工作:第1步.S1接受输入(犡,f1(犡,犢))后,先随机选取一个向量犢=(y1,y2,…,ym),使得f1(犡,犢)=f1(犡,犢).然后用(犡,犢)进行模拟.按照协议1,将向量犡=(x1,x2,…,xn)加密,得到下式,记作A.{a1=E(x1),a2=E(x2),…,an=E(xn)}.第2步.S1选取较大随机数r(r≠0,1),加密向量犢,得到下式,记作B.第3步.S1得到A和B后,计算第4步.S1得到犮后,计算E(x1+x2+…+xn),并利用Boneh加密算法的同态性计算:然后计算犮第5步.S1解密c2得到内积C.于是得到view1(犡,犢)={犡,A,E(x1+x2+…+xn),c2,C},S1(犡,f1(犡,犢))={犡,A,E(x1+x2+…+xn),c2,C}.由于C=f1(犡,犢)=〈犡,犢〉,f1(犡,犢)=f1(犡,犢),而C=f1(犡,犢)=〈犡,犢〉,因此,C=C.c1=E(〈犡,犢〉+r(x1+x2+…+xn))c2=犮c1=E(〈犡,犢〉+r(x1+x2+…+xn))而c2=c由于〈犡,犢〉=〈犡,犢〉,rcr,因此,c2cc2.所以:同理,用类似的方法可构造模拟器S2使得(2)构造模拟器S3在本协议中Server的输入为Alice和Bob发送的数据:E(犡),E(犢);Server的输出为E(犡),E(犢)的计算结果:E(犡,犢).S3接受(E(犡),E(犢),E(犡,犢))作为输入,按如下方式工作:第1步.S3接受输入(E(犡),E(犢),E(犡,犢))后,首先随机选取两个向量犡=(x1,x2,…,xm),犢=(y1,y2,…,ym),使得E(犡,犢)=E(犡,犢).然后用(犡,犢)进行模拟.按照协议1,将向量犡=(x1,x2,…,xm)加密,得到下式,记作A.{a1=E(x1),a2=E(x2),…,an=E(xn)}.第2步.S3选取较大随机数r(r≠0,1),加密向量犢,得到下式,记作B.第3步.S3得到A和B后,利用Boneh加密方案的同态性计算犮=犲(a1,b1)犲(a2,b2)…犲(an,bn)第4步.S3得到犮后,计算E(x1+x2+…+xn),并利用Boneh加密方案的加法同态性计算然后计算犮第5步.S3解密c2得到内积〈犡,犢〉.于是得到view3(E(犡),E(犢))={A,B,c},S3(E(犡),E(犢),E(犡,犢))={A,B,犮}.由于c=E(犡,犢),而E(犡,犢)=E(犡,犢),犮=E(犡,犢),因此,犮=犮.由于A=E(犡),B=E(犢),而A=E(犡),B=E(犢).因此,AcA.BcB.所以:S3(E(x),E(y),E(x,y))cview3(x,y).此过程证明了云服务器Server的视图view3(x,y)只能从自己的输入E(x),E(y)和输出的计算结果E(x,y)中得到.E(x),E(y)分别为Alice和Bob加密的数据,Server无法解密,因此得不到x,y的隐私,而Server所得到的输出计算结果E(x,y),为关于x,y的加密密文,Server仍然无法解密.因此,Server的视图view3(x,y)中不包含Alice和BobPage7的任何信息,即整个云计算过程都得不到Alice和Bob的隐私.(3)构造模拟器S4在本协议中,Server和Alice合谋,此时两者获得的输入为犡,E(犡),E(犢),获得的输出为f1(犡,犢),E(犡,犢).模拟器S3接受犡,E(犡),E(犢)和f1(犡,犢),E(犡,犢)作为输入,综合(1)、(2)情况,用类似的方法进行工作(此处省略具体构造过程),得到S4(x,E(x),E(y),f1(x,y),E(x,y))cview4(x,y).同理,用类似的方法可构造模拟器S5使得S5(y,E(x),E(y),f2(x,y),E(x,y))cview5(x,y).此过程证明了即使云服务器Server和Alice合谋,但是合谋者子集的视图view4(x,y),只能从Server和Alice的自身的输入x,E(x),E(y)和自身所获得的输出f1(x,y),E(x,y)中得到,并不包含Bob的任何信息;对于view5(x,y)也是同样的道理.因此整个过程,即使云服务器和一方合谋,也都不得另一方的隐私.3.3.3效率分析比较本文设计的云外包计算下的内积协议(协议1),将同态运算过程(Evaluation)的计算任务交付给了云服务器,而两个用户只进行了最起初的加密和唯一的一个模幂运算、模乘运算和最后解密,大大减少了传统模式下内积运算中需要用户自身操作的同态运算(Evaluation),因此可以为用户节省计算成本.为了显示我们设计的云平台下内积协议确实比传统模式下内积协议为用户节省了计算成本,将本文内积协议(协议1)和传统模式下的内积协议(文献[19-20])的计算复杂性做出对比分析.由于文献[19-20]利用的都是同态加密思路,不过利用的同态加密算法不同而已.文献[19]利用Damgrd等人[21]的同态算法,文献[20]利用Paillier[22]的同态加密算法.文献[19]只是把文献[20]的数域范围推广到负数范围内,但两者设计的方案几乎完全一致.因此这里只给出本文的内积协议(协议1)和文献[20]的内积协议比较.为了便于两个协议比较,假设两个用户各自执有的向量都为n维.将文献[20]利用的Paillier[22]的模乘运算记为MN1,模幂运算记为M犲1;本文协议1利用的Boneh[18]的模乘运算记为MN2,模幂运算记为M犲2.每个内积协议都经历3个阶段,加密阶段(Encryption),同态运算阶段(Evaluation)和解密阶段(Decryption).因此将这3个阶段的用户操作运算次数作为衡量用户计算复杂性的标准,得到表2.表2本文内积协议与现有内积协议用户的计算成本比较方案文献[20]nM犲1nM犲11MN11M犲1我们的协议12nM犲21M犲21MN21M犲2从表2可以看出,在同态运算阶段,由于文献[20]的内积协议是在传统模式下进行,这个阶段耗时最多的模幂运算都是依靠用户自身完成,因此用户需要操作n次;而我们的协议1由于在平计算平台下进行,所需要的模幂运算都由第三方(云服务器)完成,用户只需要操作1次即可,而模乘运算次数两者都是相同的,即这个阶段我们为用户减少了n-1次模幂运算.此外,虽然从表2看到我们协议1在加密阶段比文献[20]增加了n个模幂运算,但我们模幂运算的模数N2=pq,底数为g;而文献[20]模幂运算的模数N1=(N2)2=p2q2,底数为gm,由于N1N2,gm>g.即我们加密阶段增加的n个模幂运算都是低模数低指数运算,而文献[20]在同态运算阶段增加的n-1个模幂运算却是高模数高指数运算,其余阶段两者都是相同的.因此从总体上说,利用云外包技术,我们的内积协议可以极大的减少高数量级的模幂运算次数,为用户节省计算成本.此外,我们这篇论文旨在为安全多方计算几何问题提供新的研究方向,意将安全多方几何计算架构在云平台下.文献[20]是利用Paillier[22]的加法同态性质设计的内积协议,而Paillier加密方案并不具有类同态的性质,因此并不能直接改造成为云计算平台下的内积协议.3.3.4实验仿真为了进一步证实3.3.3节的理论分析结果,我们又给出了以下的仿真实验,从耗时上给读者一个更直观的观察.我们的实验平台为PC机3.0GHzPentium(IV)system,用VC6.0版本进行编译,用标准的/O2编译器优化①.分别取不同的模数N为512bits、1024bits、2048bits进行实验,得到了不同模数和不同指数尺寸下运行一个模幂运算所需要的时间(单位为ms),如表3所示.①ScottM.Multi-precisionintegerandrationalarithmeticPage8模数N的尺寸/bits指数的尺寸/bits3.0GHzPentium(IV)/ms512102420242048从表3可以看出,若固定模幂运算的指数大小不变,随着模数的增大,模幂运算需要的时间(单位为ms)也在增大,增长倍数约为3.5.在3.3.3节中,将协议1在加密阶段增加的n个模幂运算所需要的时间记为T2=nM犲2,模幂运算M犲2的模数为N2;将文献[20]在同态运算阶段增加的n-1个模幂运算所需要的时间记为T1=(n-1)M犲1,模幂运算M犲1的模数为N1=(N2)2=p2q2.假设两个模幂运算M犲1,M犲2的指数大小相同(实际上M犲2要比M犲1的指数尺寸小),得到两个阶段的耗时差:ΔT=T1-T2≈(n-1)N223.5M犲2-nM犲2.即我们的协议1比文献[20]在耗时上为用户至少节省了ΔTms.若统一取两种模幂运算中的指数大小为160bits,向量维数n=100,模数大小分别取为N=N2=512bits或1024bits或2048bits.得到不同的模数下,文献[20]中的T1和本文协议1中的T2的耗时及对应的耗时差ΔT(时间都以ms记),如图3所示.图3不同模数下T1和T2的耗时和对应的耗时差ΔT从图3可以看出,即使两个内积协议的指数大小相同,但由于两个内积的模数不同,而我们的协议1(黑色柱状)利用了云计算平台,确实比文献[20](白色柱状)为用户节省了计算时间,并且随着模数的增大,节省的时间ΔT(灰色柱状)更加明显.由于模数和处理的明文范围有关,因此我们设计的云计算平台下的内积协议为处理大数据的问题提供了有力的工具.4具体协议在第3节的基础上,本节给出云外包计算中5种空间位置关系的保密判定协议.以下协议假设所有的参与者和云服务器都是在半诚实模型下,网络之间传输都是公开信道.协议2.保密判断点与线的位置关系.输入:Alice保密输入空间点p0(x0,y0,z0),Bob保密输出:Alice和Bob都知道点p0是否在直线L上1.Alice持有向量犪=(x0,y0,z0,1),Bob持有向量犫=(A1,B1,C1,D1),犮=(A2,B2,C2,D2).2.Alice选择Boneh加密方案,公布公钥(犲,G1,G,n=pq,g,h),保密私钥(p,q),并和Bob借助云外包计算,执行两次3.3.1节的保密内积协议,可计算出向量犪与向量犫的内积、向量犪与向量犮的内积.3.若(〈犪,犫〉=0)∧(〈犪,犮〉=0),则点p0在线L上,否则点p0在线L外.4.Alice将结果告诉Bob.协议3.保密判断点与面的位置关系.输入:Alice保密输入空间点p0(x0,y0,z0),Bob保密输出:Alice和Bob都知道点p0是否在平面Π上1.Alice持有向量犪=(x0,y0,z0,1),Bob持有向量犫=(A,B,C,D).2.Alice选择Boneh加密方案,公布公钥(犲,G1,G,n=pq,g,h),保密私钥(p,q).并和Bob借助云外包计算,执行一次3.3.1节的保密内积协议,可计算出向量犪与向量犫的内积.3.若〈犪,犫〉=0,则点p0在面Π上,否则点p0在面Π外.4.Alice将结果告诉Bob.协议4.保密判断线与线的位置关系.输入:Alice保密输入空间直线输出:Alice和Bob都知道直线L1与直线L2是否平行、1.利用叉积公式,Alice可以得到直线L1的方向向量犲1=(m1,n1,l1)=Page9线L2的方向向量犲2=(m2,n2,l2)=2.Alice选择Boneh加密方案,公布公钥(犲,G1,G,n=pq,g,h),保密私钥(p,q),并和Bob借助云外包计算,调用3.3.1节的保密内积协议,求得两者内积〈犲1,犲2〉.若〈犲1,犲2〉=0根据夹角公式〈犲1,犲2〉=犲1犲2cosθ,则cosθ=0,此时两条直线垂直;否则Alice可以得到〈犲1,犲2〉Bob可以得到犲2,记该数为y.利用Hash函数判断h(x)与h(y)是否相等.若h(x)≠h(y),则x≠y,即cosθ≠±1,则两条直线相交.若h(x)=h(y),则x=y,即cosθ=±1,则直线L1与直线L2平行或重合,转入下面的步骤.3.Alice在L1上任取一点{x0,y0,z0},得到向量犪=(x0,y0,z0,1).Bob持有向量犫=(A1,B1,C1,D1),犮=(A2,B2,C2,D2).Alice和Bob调用两次3.3.1节的保密内积协议,可计算出向量犪与向量犫的内积、向量犪与向量犮的内积.若(〈犪,犫〉=0)∧(〈犪,犮〉=0),则说明两直线L1与L2重合,否则平行.4.Alice将结果告诉Bob.协议5.保密判断线与面的位置关系.输入:Alice保密输入直线输出:Alice和Bob都知道直线L与平面Π是否相交、1.利用叉积公式,Alice可以得到直线L的方向向量Bob持有平面Π的法向量犱=(A3,B3,C3).2.Alice选择Boneh加密方案,公布公钥(犲,G1,G,n=pq,g,h),保密私钥(p,q),并和Bob借助云外包计算,调用3.3.1节的保密内积协议,可求得两者内积〈犲,犱〉.根据夹角公式〈犲,犱〉=犲犱cosθ,Alice可以得到〈犲,犱〉为x.Bob可以得到犱,记该数为y.利用Hash函数判断h(x)与h(y)是否相等,若h(x)≠h(y),则x≠y,即cosθ≠±1,则直线L与平面Π相交;若h(x)=h(y),则x=y,即cosθ=±1,即直线L与平面Π垂直;若〈犲,犱〉=0,那么cosθ=0,则直线L与平面Π平行或重合;转入下面步骤.3.Alice在直线L上任取一点(x1,y1,z1),得到向量犪=(x1,y1,z1,1),Bob持有向量犫=(A3,B3,C3,D3),再次调用3.3.1节的保密内积协议,可求得内积〈犪,犫〉,若〈犪,犫〉=0,则直线L与平面Π重合,否则平行.4.Alice将结果告诉Bob.协议6.保密判断面与面的位置关系.输入:Alice保密输入平面:Π1:A1x+B1y+C1z+D1=0,输出:Alice和Bob都知道平面Π1与平面Π2是否平行、1.Alice得到平面Π1的法向量犱1=(A1,B1,C1),Bob得到平面Π2的法向量犱2=(A2,B2,C2).2.Alice选择Boneh加密方案,公布公钥(犲,G1,G,n=pq,g,h),保密私钥(p,q),并和Bob借助云外包计算,调用3.3.1节的保密内积协议求得两者内积〈犱1,犱2〉.根据夹角公式〈犱1,犱2〉=犱1犱2cosθ,Alice可得到〈犱1,犱2〉数为x.Bob可以得到犱2,记该数为y.利用Hash函数判断h(x)与h(y)是否相等,若h(x)≠h(y),则x≠y,即cosθ≠±1,平面Π1与平面Π2相交;若〈犱1,犱2〉=0,那么cosθ=0,即平面Π1与平面Π2垂直;若h(x)=h(y),则x=y,那么cosθ=±1,则平面Π1与平面Π2平行或重合;转入下面步骤.3.Alice在平面Π1上任取一点{x0,y0,z0},得到向量犪=(x0,y0,z0,1).Bob持有向量犫=(A2,B2,C2,D2),再次调用3.3.1节的保密内积协议,可求得内积〈犪,犫〉.若〈犪,犫〉=0,则平面Π1与平面Π2重合,否则平行.注意:在以上5个协议中,由于我们的协议都是通过夹角完成的.若hash值相等,那么一方会得到另一方向量的模长.但这泄露的唯一信息,不能推出向量的任何信息.关于这一点,Du等人在文献[23]中专门有论证:在设计协议时,如果在降低完美安全性的程度上,允许泄露的信息并不影响方案的有效性,那么这就是可接受性安全.而可接受性安全要根据具体问题,具体设定.5安全性分析在本节,我们应用2.1节的模拟范例给出本文5个协议的安全性证明.由于协议2、协议3的安全性依靠基本协议1,因此由定理1可以直接得到定理2、定理3的结论.定理2.协议2保密地判断了点与线的位置关系.定理3.协议3保密地判断了点与面的位置关系.由于协议4~6证明过程类似.因此为了节省篇幅,我们以证明协议4安全性为主,而对于其余协议,只给出安全性结论.定理4.协议4保密地判断了线与线的位置关系.证明.协议4的证明过程类似基本协议1,也Page10需要构造5个模拟器S1,S2,S3,S4,S5,分为3种情况进行证明.由于模拟器的构造过程类似,为了节省篇幅,只给出模拟器S1的构造过程,其余可以参照基本协议1进行构造.在本协议中或者f1(犡,犢)=f2(犡,犢)假设f1(犡,犢)=f2(犡,犢)=(L1//L2),构造模拟器S1.S1接受(犡,f1(犡,犢))作为输入,按如下方式工作:第1步.S1接受输入(犡,f1(犡,犢))=(L1,(L1//L2))后,首先随机选取一条直线L2:使得f1(L1,L2)=f1(L1,L2),然后用(L1,L2)进行模拟.按照协议4,S1分别得到直线L1、直线L2的方向向量犲1、犲2.第2步.S1调用3.3.1节的保密内积协议,得到内积〈犲1,犲2〉.第3步.S1计算〈犲1,犲2〉算犲2,记该数为y.利用Hash函数计算h(x)与h(y),比较两者的值是否相等,将结果记为H.S1在L1上任取一点{x0,y0,z0},得到向量犪=(x0,y0,z0,1).在L2上得到向量犫=(A3,B3,C3,D3),犮=(A4,B4,C4,D4),S1调用两次3.3.1节的保密内积协议,计算向量犪与向量犫的内积〈犪,犫〉、向量犪与向量犮的内积〈犪,犮〉,得到结果C.于是得到view1(犡,犢)={L1,犲1,〈犲1,犲2〉,x,h(x),S1(犡,f1(犡,犢))={L1,犲1,〈犲1,犲2〉,x,h(x),h(y),由于C=f1(L1,L2)=(L1//L2),而C=f1(L1,L2)=(L1//L2),f1(L1,L2)=f1(L1,L2),因此C=C.由于x=〈犲1,犲2〉经证明内积〈犲1,犲2〉c〈犲1,犲2〉,因此h(x)ch(x),xcx.L2为S1随机取的一条直线,而S1不知道L2的具体位置,且L2为随机分布.因此犲2和犲2计算不可区分,即得到h(y)=h(犲2),h(y)=h(犲2),因此h(y)ch(y),〈犪,犫〉c〈犪,犫〉,〈犪,犮〉c〈犪,犮〉,HcH.又因为output2(犡,犢)=f2(犡,犢)=(L1//L2),所以:用类似的构造方法(参照基本协议1)可以构造其他4个模拟器,分别得到下式:S3(E(x),E(y),E(x,y))cview3(x,y),S4(x,E(x),E(y),f1(x,y),E(x,y))cview4(x,y),S5(y,E(x),E(y),f2(x,y),E(x,y))cview5(x,y).定理5.协议5保密地判断了线与面的位置定理6.协议6保密地判断了面与面的位置定理5、定理6的证明过程类似定理4,为了节关系.关系.省篇幅,这里不再一一赘述.6效率分析与比较本节给出本文协议和引言中的相关文献[14-15]在效率以及性能方面的分析和比较.由于这些文献涉及的空间位置问题不全相同,为了便于做出比较,在效率方面,统一用本文和相关文献[14-15]中都出现的面与面位置问题保密判断协议做出对比.模乘运算记为MN2,模幂运算记为M犲2,乘法运算记为M.(1)计算复杂度以上方案利用的基础协议中,比较复杂的是内积协议,而内积协议都是通过同态加密算法得到.为了便于比较,假设所有方案中的内积协议都采用本文的Boneh[18]同态加密方案.在整个执行过程中,计算开销较大的是模幂运算、模乘运算、乘法运算.因此把各个方案中用户需要调用的内积协议总次数,以及用户需要的模幂运算、模乘运算、乘法运算总个数作为衡量计算复杂性的指标,其他忽略不计.文献[14]的面面位置关系保密判断(协议4):使用了1次内积协议和2次数据对应成比例协议.而数据对应成比例协议每调用一次,就需要循环语句调用内积协议,因此使用的内积协议总次数为6次.按照原文[14]的分析,需要34m个模幂运算、8m个模乘运算,其中,m为安全参数.因此该协议的计算开销为8mMN2+34mM犲2.文献[15]的面面位置关系保密判断(协议4):计算了3次内积,但并没有调用内积协议,用户主要Page11使用了矩阵运算.进行了3个3阶的矩阵运算,9个数乘运算,因此乘法运算总个数为36M.本文的面面位置关系保密判断(协议6):协议调用的2次内积协议被外包计算给云,用户本身并没有计算内积.用户只计算了2个幂运算、2个模乘运算、14个加密运算、2个解密运算.因此该协议总的计算开销为2MN2+18M犲2.(2)通信复杂度衡量通信复杂度的指标用协议交换信息的比特数,或者用通信轮数,在多方保密计算研究中通常用轮数(round).文献[14]的面面位置关系保密判断(协议4):使用了1次内积协议、2次数据对应成比例、1次比较协议.第1次调用数据对应成比例协议,交互轮数为6m,第2次调用数据对应成比例协议,交互轮数为8m,其中m为安全参数.总共进行了14m+4轮交互.文献[15]的面面位置关系保密判断(协议4):方案解决的问题点线点面线线线面面面点面线面面面点线点面线线线面面面表5本文方案与现有方案的性能比较判断的位置关系云计算平台从表4可以看出,文献[15]的效率是最优的,但从表5可以看出,该文献能解决的问题最少(只能解决3种),而且能判断的位置关系最单一,因此该文献虽然效率较高,但性能最差,应用比较受限.若要解决和我们的方案以及文献[14]同样多的问题,判断更多的位置关系,还需要再寻找其他的方法.从表5可以看出,文献[14]和我们的方案能解决的问题相同,但文献[14]由于利用了复杂的数据对应成比例协议,需要使用循环语句不断调用内积协议.而我们的方案由于云计算技术的使用,将内积协议外包给云,为用户节省了计算成本,因此在解决同样多的问题下,从表4可以看出我们的效率优于文献[14].此外,从表5还可以看出,虽然我们的方案和文献[14]能处理的问题相同,但能判断的位置关系却比其他已存方案都多,并且我们的方案第一次给出了云计算平台下处理空间立体几何问题的解决方法.总共进行了2轮交互.本文的面面位置关系保密判断(协议6):使用了2次内积协议和1次比较协议,内积协议每调用一次就进行了3轮交互.因此两个用户包括和云服务器,总共进行了8轮交互.(3)性能以协议判断的空间位置关系多少、解决的问题多少、是否适合云计算平台作为衡量性能的指标,其中×表示不具有此性能,√表示具有此性能.综合以上分析,本文与现有文献[14-15]在面面保密判定协议的效率对比如表4.本文与现有文献[14-15]方案的性能对比如表5.方案文献[14](协议4)2n+18mMN2+34mM犲2(14m+4)rounds文献[15](协议4)0我们的协议602MN2+18M犲28rounds文献[15]×7总结和开放问题空间位置关系的保密计算属于安全多方计算中的空间几何问题,现实中很多问题都能归结于此.已存方案由于转化方法的原因使得用户的计算复杂性较高,或者解决的问题有限、能判断的位置关系单一,并且都是在传统模式下进行的.本文首次探索了云计算平台下安全多方计算几何问题的解决方法,首先将原问题转化成夹角问题,接着设计了适用于云外包计算下的内积协议,然后基于该内积协议,解决了空间几何中5种位置关系的保密判断问题.由于问题的巧妙转化,使得我们的方案能解决的问题也更多,判断的位置关系也更加多样化.并且由于云计算技术的使用,为用户节省了大量的计算成本.本文的协议为了提高效率,以接受性安全作为牺牲代价,有一定的信息泄露(如向量的模长),虽然不影响协议的执行和有效性,但并未取得完美性安Page12全.因此,可以进一步考虑如何设计关于此问题的完美安全性下的高效协议.此外,将传统安全多方计算中的大数据问题,借助云计算的能力有效解决,是安全多方计算的一个研究新方向,但将安全多方计算问题架构在云平台下时,需要不同以往的新技术,这也将是未来研究的工作之一.致谢在此,我们向对本文的工作给予支持和建议的同行,尤其是陕西师范大学计算科学学院614实验室的老师和同学表示感谢!
