Page1一种基于优先级的迭代划分测试方法1)(苏州大学计算机科学与技术学院江苏苏州215006)2)(南京大学计算机软件新技术国家重点实验室南京210023)3)(武汉大学软件工程国家重点实验室武汉430072)摘要随机测试和划分测试是两种重要的测试方法,关于两者在失效检测能力和效率方面的比较一直是软件测试领域的研究热点之一.适应性随机测试是对随机测试的一种增强,通过实现测试用例在输入域上的均匀分布,提高了随机测试的失效检测能力.该文从划分测试出发,借鉴了均匀分布的思想,提出了一种基于优先级的迭代划分测试方法(IterativePartitionTestingbasedonPrioritySampling,IPT-PS).首先迭代划分输入域并选取划分后子域的中心点作为待执行的测试用例,随后采取优先级策略,将待执行的测试用例分为3种不同优先等级并依次执行.迭代划分和中心采样仅需要已知输入域的空间信息,优先级执行则考虑了测试用例的不同空间特性,上述3种操作均仅需要很少的时间开销并力求实现测试用例在输入域上的均匀分布,以提高失效检测能力.该文通过理论分析给出了IPT-PS检测出对应失效所需测试用例数量的上界,并通过一系列实验结果表明:IPT-PS在仅使用接近随机测试时间开销的情况下,可以获得与适应性随机测试相近甚至更好的失效检测能力,是一种高效的测试方法.关键词软件测试;划分测试;随机测试;适应性随机测试;测试用例生成;失效率;F-度量1引言软件测试是软件质量保证中的一种重要方法,受到了学术界和工业界的广泛关注.在软件测试的过程中,一项重要的工作是在程序的输入域中选择测试用例,用于执行待测程序以发现待测程序中的错误.由于对软件整个输入域进行穷尽测试往往是不现实的,因此如何选择尽可能少的测试用例来尽快发现程序错误变得尤为重要.在现有的众多测试方法中,随机测试(RandomTesting,RT)和划分测试(PartitionTesting,PT)是两种经典的方法.随机测试服从某种概率分布(通常是均匀分布),从整个输入域中逐个选择测试用例,输入域没有进行任何划分[1-2];而划分测试则首先将输入域划分为一定数量的不相交的子域,再从每个子域中选取一个或多个的测试用例[3].随机测试具有简单有效、易于理解和实现等优点,然而,由于随机测试过程中没有利用其他任何有用的信息,其失效检测能力往往不是很理想.Chen等人[4]提出了适应性随机测试方法(AdaptiveRandomTesting,ART),是一种改进的随机测试方法,通过实现测试用例在输入域上的均匀分布,来提高随机测试的失效检测能力,但该方法也相应地带来大量额外的计算开销.划分测试通常基于相同的功能或属性进行子域的划分,希望能获得理想的划分方式使得每个子域是同质的,即同一子域中的所有输入均为正确的输入或导致程序失效的输入.在获得有效划分的基础上,划分测试用于选择测试用例的开销并不大,然而,前期的子域划分却需要耗费大量额外的时间开销.因此,关于随机测试和划分测试在失效检测能力和效率方面的比较一直是软件测试领域的研究热点之一[3,5-6].本文从划分测试出发,借鉴了ART均匀分布的思想,给出了迭代划分测试方法(IterativePartitionTesting,IPT)的实现框架,并进一步提出了一种基于优先级的迭代划分测试方法(IterativePartitionTestingbasedonPrioritySampling,IPT-PS).该方法的基本思想是:通过不断地迭代划分输入域并选取划分后子域的中心点作为待执行的测试用例,随后采取优先级策略,将待执行的测试用例分为3种不同优先等级并依次执行.中心采样和迭代划分仅需要知道输入域的空间信息.优先级执行则考虑了待执行测试用例的不同空间特性,通过约束测试用例执行的先后次序使得测试用例在两轮迭代间的分布更加均匀.IPT-PS的中心采样、迭代划分和优先级执行这3种操作仅需知道输入域的空间信息,且仅耗费很少的时间开销,弥补了传统划分测试通常需要知道额外信息或往往耗费大量开销用于划分子域的不足.本文的方法力求快速实现测试用例在输入域上的均匀分布,以提高失效检测能力.本文通过理论分析指出:IPT-PS可以检测出对应失效所需测试用例数量的上界.实验结果表明,IPT-PS方法在仅使用接近RT时间开销的情况下,可以获得与ART相近甚至更好的失效检测能力.因此,我们的方法将在失效检测能力和时间开销上获得良好的平衡,是一种高效的测试方法.本文第2节将介绍随机测试以及划分测试的相关概念和研究现状;第3节提出IPT-PS的框架及算法描述,并给出对应的理论分析结果;第4节通过一系列实验验证理论结果,并对比多种划分测试以及随机测试方法的失效检测能力和时间开销,探讨IPT-PS的适用性;最后是总结和未来工作.2相关工作为便于后续讨论,首先给出一些相关术语的描述和解释.定义1.失效率(failurerate)[4].在测试过程中,假定待测程序的输入域大小为D,能够引发失效Page3的输入域大小为F,则失效率θ为失效输入域占整个输入域的比例,即θ=F/D.定义2.失效模式(failurepattern)[7].指失效输入域的几何特性及其在输入域上的分布情况.具体而言,包括失效输入域的形状、大小、方位、位置等信息.Chan等人[7]总结了3种失效模式,分别为块状模式、条状模式和点状模式.显然,给定待测程序,其失效率和失效模式是确定的,但在测试完成前通常是未知的.定义3.F-度量(F-measure)[4].指检测到第1个失效时所使用的测试用例数量的期望值.F-measure可用于表征测试用例集的失效检测能力,即测试用例集的有效性.基于上述定义,理论上当采用放回策略选择测试用例时,随机测试的F-measure将等于1/θ.2.1随机测试随机测试是一种重要的测试方法,它通常等概率地从输入域中逐个选择测试用例.随机测试不仅可以独立使用,还可以是其他众多测试方法中的重要组成部分.随机测试已在工业界得到广泛应用,特别是在规约说明和源代码不可获得或不完整的场景下,随机测试仍然可行.此外,随机测试具有重要的统计意义,可以从理论上分析其失效检测能力,受到了学术界的广泛关注.为了提高随机测试的失效检测能力,Chen等人[4]提出了ART方法.该方法的提出基于以下观察:已有众多实验研究表明引发失效的输入往往聚集在某一连续的区域内,于是,不会引发失效的输入也同样形成了一片连续的区域[8].因此,如果已执行的测试用例未能引发程序失效,那么接下来新生成的测试用例就应该与所有已执行且未能引发程序失效的测试用例的距离尽可能的远,从而使生成的测试用例尽可能均匀地分布在整个输入域,以便快速检测到失效区域.固定规模的候选测试用例集的ART算法(FixedSizedCandidateSetART,FSCS-ART)是基于距离计算的一个经典算法[4].在选择下一个测试用例时,首先随机生成固定数量的候选测试用例,对于每个候选测试用例cj,找出cj与已执行测试用例集中最靠近的测试用例,获得这两个测试用例之间的距离dj.拥有最大距离dj的候选测试用例将作为下一个待执行的测试用例.已有实验结果表明:相比RT,FSCS-ART在失效检测能力方面有显著的提高.然而,由于FSCS-ART在产生测试用例时需要逐一计算候选集中的测试用例与已执行的测试用例之间的距离,所以算法的计算开销较大.在此基础上,众多研究学者提出了一系列算法来实现测试用例在输入域上的均匀分布[9-21],同时,为降低ART算法生成测试用例的计算开销,提出了一些通用的技术,例如划分(partitioning)技术[15-17]、过滤(filtering)技术[18]、镜像(mirroring)技术[19]、聚类(clustering)技术[20]、遗忘(forgetting)技术[21]等.特别地,研究学者引入划分的思想,提出了一些基于划分的ART算法,例如基于随机划分的[15]、基于二分划分的[15]、基于迭代划分的[16]、基于格划分[17]的ART算法.众多的ART实现算法具有不同的失效检测能力、不同的计算开销和各自的适用场景[22-24].Mayer等人[24]通过一系列实验比较了现有的13种ART实现算法,并指出:基于距离计算的ART实现算法,如FSCS-ART的失效检测能力较强,基于迭代划分的ART算法(ARTthroughIterativePartitioning,IP-ART)的计算开销较小.IP-ART算法的基本思想是:以二维输入域为例,首先将输入域划分为p×p个格子,每次从可选的格子集合中随机选定一个格子,并在该格子中随机生成测试用例.可选的格子集合不包含已执行的测试用例所在的格子以及与该格子相邻的所有格子.当可选的格子集合为空时,将输入域进一步划分为(p+1)×(p+1)个格子[16].IP-ART通过划分来选定下一个测试用例的可选区域,避免了大量的距离计算开销,并保持了较高的失效检测能力.2.2划分测试划分测试首先将输入域分割成多个不相交的子域,随后在每个子域中选择测试用例.在理想的划分情况下,每个子域中的所有元素或者都能检测出失效,或者都无法检测出失效,此时对于每个子域仅需要选择其中任意一个元素进行测试即可.然而,目前没有一种方法能够确保获得这样理想的划分,除非每个子域中仅包含一个元素,然而这样的划分测试将退化为穷尽测试[25];此外,在划分测试中,对于输入域的划分往往是需要额外时间开销的,因此,需要衡量划分测试的划分代价是否可接受.众多研究学者将划分测试和随机测试相比较.Weyuker等人[26]提出了一种同等大小-同等抽样数的划分测试策略(Equal-Size-Equal-SamplingStrategy,ESESS),该策略首先将输入域划分为相等大小的子Page4域集合,随后有放回地从每个子域中随机选取相同数量的测试用例.当每个输入具有相同的失效概率,ESESS和RT选取相同数量的测试用例时,ESESS检测出至少一个失效的概率(即P-measure)将等于或高于RT的P-measure.在此基础上,Chen等人[27]提出了更为通用的比例抽样策略(ProportionalSamplingStrategy,PSS),要求从每个子域中有放回地随机选取的测试用例数应与该子域的大小成固定比例,并证明了PSS是获得不低于RT的P-measure的充分必要条件.当仅已知输入域的空间信息,难以进行其他有效划分时,PSS是一种可行的划分测试方法.Cai等人将划分测试与随机测试相结合,提出了随机划分策略(RandomPartitionTesting,RPT)[28].该策略首先服从某一概率分布地随机选择一个划分后的子域,随后从选定的子域中服从等概率分布地随机选择一个测试用例.为改进RPT的失效检测能力,Cai等人[29]提出了适应性测试(AdaptiveTesting,AT)策略,将待测对象建模为一个受控的马尔科夫链,通过在线收集测试历史信息来提高失效检测能力.然而,AT的反馈机制需要预先收集测试历史信息且需要耗费大量的计算开销用于测试用例的选择.近期,Cai等人[30]将AT与RPT相结合,力求实现失效检测能力和时间开销方面的平衡.尽管现有众多测试方法,包括PT、ART等都试图改进RT的失效检测能力,Chen等人在文献[31]中给出了一个理论证明:除非已知失效输入域的位置,否则即便已知失效输入域的形状、大小、方位等信息(事实上我们往往无法事先获知这些信息),没有一种测试策略可以保证将其F-measure降低至RTF-measure的50%.因此,50%的RTF-measure将是最优的测试用例选择策略的失效检测能力的上界.已有实验研究结果表明:ART的失效检测能力已经非常接近这个最优的上界[25].基于已有相关工作和分析,本文从划分测试出发,借鉴了ART均匀分布的思想,给出了一种迭代划分测试方法,该方法是一种基于输入域空间信息的迭代测试划分方法,较之其他基于功能、路径或风险等信息的划分测试方法,该方法所需的输入域空间信息容易获得且不需要做额外的预处理,极大地减小了划分测试在预处理方面的开销.同时,本文的方法借鉴了ART均匀分布的思想,希望能在仅使用接近RT时间开销的基础上,获得与ART相近甚至更好的失效检测能力.3迭代划分测试方法本节首先通过一个简单的例子来展示迭代划分测试方法IPT的过程,随后给出IPT的实现框架,在此基础上提出了IPT-PS方法,最后从理论上分析了IPT和IPT-PS的失效检测能力.3.1一个例子为便于理解,假定待测程序的输入域为二维矩形区域,失效域为块状模式.如图1(a)~(d)所示,IPT首先选择输入域A的中心点a作为测试用例执行,若a未能命中失效区域,则依据a将输入域划分为4个子区域B1~B4,分别选取B1~B4的中心点b1~b4作为测试用例执行;若b1~b4均未能命中失效区域,则依据b1~b4将输入域划分为16个子区域C1~C16,分别选取C1~C16的中心点c1~c16作为测试用例执行;此时,右上方子区域C4的中心点c4将命中失效区域,即检测出失效.反之,若c1~c16均未能命中失效区域,则将迭代进行下一轮划分,产生64个子区域.3.2迭代划分测试方法(IPT)由3.1节的示例可知:IPT将包含迭代划分、中心采样和测试用例执行这3个主要步骤.IPT首先通过不断地迭代划分输入域并确定性地选取划分后子域的中心点作为待执行的测试用例;随后基于执行策略,依次执行待选测试用例.当测试用例命中失效区域时,输出已执行的测试用例数量,否则将继续进入下一轮的迭代划分和中心点采样直至检测出程Page5序中的第1个失效,具体如算法1所示.算法1.IPT.输入:m维待测程序的输入域D,失效域F输出:检测到第1个失效时已执行的测试用例数量1.初始化F-count=0,划分层次数n=02.选取D的中心点a执行,F-count++IF测试用例a命中失效区域THENRETURNF-countELSEn++ENDIF3(迭代划分).根据已执行测试用例将当前输入域划分为2mn个子域4(中心采样).采样2mn个子域的中心点组成待测用例集TestSet5(用例执行).当TestSet不为空时,根据执行策略,依次不放回地选取测试用例t∈TestSet执行,F-count++6.n++,转向步3.其中在步4获得2mn个子域的中心点组成待测用例集后,步5(用例执行)可以采用多种执行策略,包括基于等概率的执行策略,如随机执行、顺序执行等;以及基于不等概率的执行策略,如基于优先级的执行等.对于给定的待测程序,在检测到第一个失效前,其失效率θ是确定不变的,但在测试过程中,θ通常是未知的.为此,IPT采用了迭代划分、中心采样的策略,通过不断执行测试用例获取关于θ的信息.在m维空间中,n次划分并执行新增的2mn个测试用例后,仍无法命中失效区域时,我们可以推断出该待测程序的失效率θ一定小于某个值.如定理1所述.定理1.假设输入域和失效域均为m维等距连续空间,失效率为θ.对于IPT有:若进行了n次划分,共计执行了∑效域,则可推断θ的取值范围为θ<证明.可用数学归纳法证明,详见附录1.由定理1可知,在m维空间中,n次划分并执行新增的2mn个测试用例仍未命中失效区域时,可以推断出θ<n2m·i个测试用例一定可以命中失效区域.∑i=03.3基于优先级的迭代划分测试方法(IPT-PS)根据IPT的实现算法和定理1,我们发现:只有待新增的2mn个测试用例全部被执行通过后,才可以推断出θ<这促使我们考虑:2mn个测试用例在执行过程中是否能获得更多关于θ的信息,不同的测试用例执行顺序是否会影响到IPT的失效检测能力.基于上述考虑,我们提出了基于优先级的迭代划分测试方法IPT-PS,通过分析新增的待执行的测试用例的不同空间特性,将测试用例分为3种不同优先等级后,依次执行,从而获取了更多关于θ的信息,可以得到当前待测程序的失效率θ的更为细致的推断.我们通过一个例子说明IPT-PS如何实现基于优先级的用例执行,如图2(a)所示:输入域和失效域均为二维等距连续空间,假定输入域的面积为1.前期已进行了1次划分,已执行的5个测试用例用符号“·”表示,2次划分所产生16个子域的中心点组成待执行的测试用例集{c1~c16}.根据这些测试用例的空间特性,IPT-PS将16个测试用例分为3种不同优先等级,对应集合为T1,T2,T3,在同一优先级的情况下,将随机执行其中任意一个测试用例.测试用例优先级取决于该测试用例的执行是否会导致当前可放入的最大失效区域面积(记为S)产生变化.如图2(a)~(d)所示,在加入2个“”的测试用例前,S=1/4;当放入2个“”的测试用例后,Page6S将变更为1试用例后,S将变更为1“○”的测试用例后,S保持不变.由此可见,在图2中,标记为“”的测试用例属于集合T1,优先级最高;标记为“△”的测试用例属于集合T2,优先级次之;标记为“○”的测试用例属于集合T3,优先级最低.可放入的最大失效区域面积S的不断缩小,意味着随着测试用例的执行通过,可以推断出的该待测程序的失效率θ的取值范围也在不断缩小,我们可以获得更加精确的关于θ可能取值的推断.为实现IPT-PS,我们首先需要知道如何将待执行测试用例分类,并分别放入T1,T2,T3集合中.如图2(b)所示,我们为每一维经过n次划分后得到的2n个子域的中心点,即2n个待执行测试用例建立索引,记为Ik={0,1,…,2n-1},其中下标k表示第k维.这样,在二维空间中,待执行的22n个测试用例可以用(i1,i2)唯一标记,其中i1∈I1,i2∈I2.观察图2可以发现,T1中的元素需同时满足以下两个条件:(1)每一维上的索引不为0或最大值(即i1≠0,2n-1且i2≠0,2n-1);(2)|i1-i2|mod2为0;T3中的元素满足:每一维上的索引为0或最大值;T2则为22n个待测用例中不属于T1和T3的测试用例构成的集合.当从二维空间推广到m维空间时,经过n次划分得到的2mn个待测用例可以用(i1,i2,…,im)唯一标记,其中ik∈Ik.此时,可以将2mn个待测用例按照如下规则分别放入T1,T2,T3.T1中的元素满足:(1)每一维上的索引不为0或最大值(即ik≠0,2n-1);(2)|ij-ij+1|mod2为0,其中j∈{1,2,…,m-1}.T3中的元素满足:每一维上的索引为0或最大值.T2为2mn个待测用例中不属于T1和T3的测试用例构成的集合.基于上述规则,可分别计算集合T1,T2,T3的大小.对于T1而言:由条件(1)可知,每一维上的索引ik∈Ik只能从{1,2,…,2n-2}中取值,因此当前待选测试用例总个数为(2n-2)m.由条件(2)可知,测试用例需要满足m-1次|ij-ij+1|mod2为0的判断,而|ij-ij+1|mod2取值为0或1的测试用例数量是相同的,因此满足条件(2)的测试用例数量只占满足条件(1)的测试用例数量的1素个数为Ik只能从{0,2n-1}中取值,因此,T3中的元素个数为2m.而T2中的元素个数则为2mn-在已知每个测试用例所从属的集合后,IPT-PS仅需在IPS的算法框架上将步5(用例执行)调整为基于优先级的用例执行,算法描述如算法2所示.算法2.IPT-PS.输入:m维待测程序的输入域D,失效域F输出:检测到第1个失效时已执行的测试用例数量步1~步4:同算法1(IPT)5(基于优先级的用例执行).根据优先级高低,将2mn个待测用例分别放入集合T1,T2,T3依次针对集合Ti(i=1,2,3)WHILE(Ti≠)随机从Ti选择测试用例tj(j=1,2,…,|Ti|)执行Ti=Ti-{tj},F-count++IF测试用例tj命中失效区域THENRETURNF-countENDIFENDWHILE6.n++,转向步3.根据IPT-PS基于优先级执行测试用例的特点,我们发现在待执行的共计2mn个测试用例中,当执行了优先级最高的T1中的测试用例无法命中失效区域时,可以推断出该待测程序的失效率θ一定小于某个值,如定理2所述.定理2.假设输入域和失效域均为m维等距连续空间,失效率为θ.对于IPT-PS有:若进行了n次划分,共计执行了∑仍无法命中失效域,则可推断θ的取值范围为θ<2m(n-1)()31证明.可用数学归纳法证明,详见附录1.由定理1和定理2可知,在m维空间中,进行n次划分后,IPT需完全执行2mn个测试用例,才可推断θ的取值范围将从θ<IPT-PS引入基于优先级执行测试用例,在执行了(2n-2)m2m-1个测试用例后,即可推断θ的取值范围将从θ<2m(n-1)缩小至θ<Page7此外,IPT-PS中T1的元素个数为为(2n-2)m2m-1<本轮待执行测试用例总量2mn的1即可获得关于θ的取值范围的更细致的推断.3.4IPT和IPT-PS的理论分析由定理1和定理2可知,当待测程序的θ=时,IPT最多需要执行∑中失效区域,而IPT-PS最多在执行完第n次划分的新增测试用例中T1,T2的测试用例后,就可以命中失效区域.当θ=需要执行∑而IPT-PS最多在执行完第n次划分的新增测试用例中T1的测试用例后,就可以命中失效区域.因此,借助θ进一步对比IPT和IPT-PS在最坏情况下的表现,有如下分析:(1)对于IPT,令Nworst执行的测试用例数量.当12m·nθ<所以Nworst(2)对于IPT-PS,令NworstPS所需执行的测试用例数量.①当13mθ,所以Nworst②当12mθ,所以Nworst令Δ为上述①和②两种情况下Nworst值,则Δ=2m-13m-3·2m=当m3时,Δ>0成立.综上可得NworstIPT-PS=由上述分析可知,已知待测程序的θ,IPT和IPT-PS均存在着检测出对应失效所需测试用例数量的上界.当m2时,NworstIPT-PS获得更紧的上界.相对于随机测试的不确定性,IPT和IPT-PS存在上界将为测试过程中测试资源的有效分配提供帮助.4实验结果与分析本节将给出一系列实验结果,并围绕以下3个研究问题展开分析和对比:问题1.IPT-PS在失效检测能力和时间开销方面的表现如何?问题2.相对于IPT,IPT-PS采用基于优先级的用例执行策略是否能有效地改进算法性能?问题3.IPT-PS在高维、多种失效模式、真实程序等场景下的适用性如何?4.1实验设置本文首先采用仿真实验进行比较分析,仿真实验将有利于帮助控制实验参数的变化,涉及的参数主要包括维度、失效率、测试方法和实验次数,逐一说明如下:(1)维度.当待测程序有m个输入参数时,该程序的输入域为m维空间.在仿真实验中,将讨论1~4维空间输入域,并假定均为各维等距的连续空间,即2维输入域为正方形,3维输入域为正方体.(2)失效率.即失效输入域占整个输入域的比例,显然失效率θ∈[0,1].同时假定,失效输入域也是各维等距的连续空间.(3)测试方法.本次实验中将对比以下6种测试方法:①RT.有放回的随机测试将作为本实验的基准方法.②FSCS.根据文献[24]的结果,FSCS-ART的失效检测能力较强,可作为基于距离计算的ARTPage8算法的代表.其中,固定候选集大小为10.③IP-ART.根据文献[24]的结果,IP-ART的计算开销较小,可作为基于划分的ART算法的代表.其中,划分参数p初始化为1.④PSS.当仅已知输入域的空间信息时,PSS仍然可用,因此选取PSS作为传统划分测试的代表.PSS要求从每个子域中有放回地随机选取的测试用例数应与该子域的大小成固定比例.本次实验中,为便于比较,我们在IPT迭代划分所产生的每个相同大小的子域中随机选取一个测试用例,而非固定地选取子域的中心点.⑤IPT.本文提出的迭代划分、中心采样的划分测试方法.⑥IPT-PS.本文提出的迭代划分、中心采样和基于优先级的用例执行的划分测试方法.(4)实验次数.重复一定的实验次数是为了有效避免随机性对实验结果的影响.在本文实验中,涉及两个方面的随机性:一是失效域位置的随机性,二是测试用例选择的随机性.这里,我们重复1000次实验来克服失效域位置的随机性.在给定失效域位置的前提下,通过重复2000次实验来克服测试用例选择的随机性.给定上述实验参数配置,实验过程如下:首先根据维度产生输入域,并根据失效率计算并产生失效域.在每一次实验中,随机放置失效域,根据测试方法逐个选择测试用例.当测试用例落入失效域中图36种测试方法的F-ratio比较则认为其检测到失效,记录当前已执行的测试用例数量F-count.当完成规定实验次数时,F-count的平均值记为F-measure,并记录实验所耗费的总时间.本文实验的度量包括有效性度量和效率度量.在有效性度量方面,我们采用将各种方法的F-measure与RT的F-measure的理论值(即1/θ)的比值记为F-ratio来衡量各种方法在失效检测能力上相对RT的改进.显然,F-ratio越小,则该方法相对RT的改进越明显.在效率度量方面,我们采用各种方法完成一次失效检测所需的平均时间,记为Runtime来比较各种方法的计算开销.4.2问题1:相关方法的分析与比较我们通过实验1来比较RT,FSCS,IP-ART,PSS,IPT和IPT-PS这6种测试方法在F-ratio和Runtime这两个度量上的表现.实验中参数维度为1~4维,失效率θ={1,0.75,0.5,0.25,0.1,0.075,0.05,0.025,0.01,0.0075,0.005,0.0025,0.001,0.00075,0.0005,0.00025,0.0001,0.000075,0.00005},维度和失效率的选取与文献[32]相同.如图3所示,图3(a)~(d)分别为1维到4维输入域下,6种测试方法的F-ratio比较,其中x轴为log0.5θ以便于数据的展示,y轴为F-ratio.类似地,如图4所示,图4(a)~(d)分别为1维到4维输入域下,6种测试方法的Runtime比较,其中x轴为log0.5θ,y轴为Runtime,单位为ms.Page9以RT为基准方法,由图3可知:(1)对于FSCS和IP-ART,两者在F-ratio方面的表现类似,在4个维度下均有:当θ较大时,F-ratio大于1,随着θ的减小,F-ratio逐渐降低、趋于稳定且小于1.在给定θ下,维度越高,对应的F-ratio越大;(2)对于PSS,IPT和IPT-PS,在4个维度下均有:F-ratio在下降至最低点后,随着θ的减小,F-ratio逐渐增大并呈周期性波动.此外,随着维度的增加,F-ratio越大且波动幅度越大,在3维和4维输入域下,PSS和IPT的部分F-ratio将大于1.3种方法的不同点在于,在给定θ的情况下,PSS的F-ratio最大,而IPT-PS图46种测试方法的Runtime比较下面我们将IPT-PS与FSCS、IP-ART、PSS、IPT逐一分析比较,并讨论相应的原因.(1)IPT-PS与ART(FSCS、IP-ART)的讨论在F-ratio方面,当θ较大时,IPT-PS仅需要通过很少次数的划分就可以检测到失效,F-ratio明显优于ART(以FSCS、IP-ART为例).当θ较小时,两者的F-ratio相近,ART的F-ratio较稳定,IPT-PS则存在着波动.在Runtime方面,当θ较大时,两者差别不大.然而,随着维度的提高和θ的减小,ART的Runtime将远远高于IPT-PS的Runtime.如表1所示,当θ为0.01时,IPT-PS的Runtime通常是ART的Runtime的1%;当θ降低至0.0001时,IPT-PS在1~4维输入域上的时间性能比ART提高了3个数量级.的F-ratio最小.以RT为基准方法,由图4可知:(1)对于FSCS和IP-ART,随着θ的减小,Runtime快速上升.较之FSCS,尽管在2~4维输入域下,IP-ART的Runtime有明显减少,但仍然远远大于RT的Runtime.此外,在1维输入域下,由于IP-ART需频繁地划分输入域,耗费了大量的计算开销,其Runtime与FSCS的Runtime很接近;(2)PSS,IPT和IPT-PS三者的Runtime与RT的Runtime相当,随着维度的增加、θ的减小,三者的Runtime将略大于RT的Runtime.失效率0.010.0001由此可见,随着θ的减小,尽管ART能够改进RT的失效检测能力,但是其时间开销远远大于RT.IPT-PS借鉴了ART均匀分布的思想,通过迭代划分、中心采样和基于优先级的用例执行这3个操作实现了输入域上的均匀分布,然而这3项操作均无需耗费过多的计算开销,其时间开销保持在与Page10RT同一数量级.此外,当θ较小时,IPT-PS存在着进一步改进的可能.在没有任何θ的先验知识的情况下,IPT-PS从第1轮划分开始逐渐增加对θ的认知,不断推断出θ的取值范围的变化.当存在θ的先验知识,特别是当可预测出θ的取值很小,例如当预测出θ<0.0001时,IPT-PS可以通过相应计算后直接进行第n次划分,从而节省了前面n-1次划分所耗费的中心点测试用例,从而改进了当θ较小时的F-ratio及Runtime.(2)IPT-PS与PSS的讨论与PSS相比,IPT-PS通过确定性的中心点采样以及基于优先级的用例执行,可以获得较优的F-ratio.这是因为,在迭代划分子域里中心点采样比子域里随机采样更能确保测试用例在输入域上的均匀分布,进而改进失效检测能力.在计算开销方面,两者Runtime相当.(3)IPT-PS与IPT的讨论与IPT相比,IPT-PS引入基于优先级的用例执行,可以获得较优的F-ratio.这是因为,IPT-PS通过指定测试用例的执行序列,进一步在两轮迭代上通过优先级采样实现了测试用例更均匀的分布.在计算开销方面,IPT-PS由于引入了优先级相关的开销,Runtime略大于IPT.为进一步验证IPT-PS能够显著改进RT的失效检测能力,获得与ART相近的失效检测能力,我们对IPT-PS与其他5个对比算法即RT,FSCS,IP-ART,PSS,IPT的F-ratio展开了T-检验,其中,显著性水平值为0.05.双边T-检验中,假设H0:A与B不存在显著差异;对应有假设H1:A与B存在显著差异.当假设H1成立时,我们将进一步开展单边T-检验,假设H0:A不显著地大于B;对应有假设H1:A显著地大于B.由于实验数据较多,这里我们仅呈现了部分假设检验的结果.以2维输入域下,等距选取实验1中θ的部分取值为例,即θ={0.05,0.0075,0.001,0.00025,0.00005},具体检验数据如表2所示:当θ=0.05时,假设H1均成立,即5种对比算法的F-ratio均显著地大于IPT-PS的F-ratio.当θ={0.0075,0.00005}时,RT,PSS,IPT对应假设H1成立,即RT,PSS,IPT的F-ratio均显著地大于IPT-PS的F-ratio;FSCS,IP-ART对应假设H0成立,即FSCS,IP-ART的F-ratio与IPT-PS的F-ratio不存在显著差异.当θ={0.001,0.00025}时,RT,PSS对应假设H1成立,即RT,PSS的F-ratio均显著地大于IPT-PS的F-ratio;FSCS,IP-ART,IPT对应假设H0成立,即FSCS,IP-ART,IPT的F-ratio与IPT-PS的F-ratio不存在显著差异.结合实验1的数据和假设检验的结果,我们可以发现:IPT-PS能够显著改进RT的失效检测能力,并获得与ART相近甚至更好的失效检测能力.表2IPT-PS与对比算法关于犉-ratio的犜-检验数据θ0.050.00750.0010.000250.00005综合上述比较分析,我们可以回答问题1:IPT-PS在仅使用接近RT时间开销的情况下,可以达到与ART相近甚至更好的失效检测能力,在有效性和效率之间实现了良好的平衡.4.3问题2:IPT和IPT-PS的分析与比较基于实验1中关于IPT与IPT-PS的初步结果,我们通过实验2来进一步分析IPT与IPT-PS的特性.在实验2中,维度为1~4维,失效率θ={1,2-1,2-2,2-3,2-4,2-5,2-6,2-7,2-8,2-9,2-10,2-11,2-12,2-13,2-14}.选取θ的值为2-n,是希望通过实验验证IPT与IPT-PS中关于执行测试用例数与可推断的θ取值范围的关系.如图5所示,图5(a)~(d)分别为1维到4维输入域下,IPT与IPT-PS的F-ratio比较,其中x轴为log0.5θ,y轴为F-ratio.这Page11图5θ=2-n时IPT与IPT-PS的F-ratio比较里,由于θ的取值为2-n,因此获得的数据点在x轴上是等距的.以RT作为基准方法,由图5除了可以获得与图3类似的结论外,还可以获得如下结论:(1)IPT和IPT-PS在4个维度下均存在F-ratio的最小值.以2维输入域为例,当θ=2-2,log0.5θ=2时,F-ratio取到最小值,为0.25.这是因为,IPT和IPT-PS均仅需要执行1条测试用例,即取到当前2维输入域的中心点时即可检测到失效.同理,在m维输入域下,当θ=2-m,log0.5θ=m时,仅执行1条测试用例即可检测到失效,此时F-ratio取到最小值,为2-m.(2)在4个维度下均有:每隔固定间隔,存在IPT和IPT-PS的F-ratio非常接近的汇集点.以2维输入域为例,当log0.5θ={2,4,6,8,10,12,14}时,两种方法的F-ratio非常接近.这是因为在2维输入域中,当θ=2-2n时,IPT在最坏情况下所需的测试用例数为1+22+…+22n个,而IPT-PS基于优先级将待测用例分为T1,T2,T3依次执行,在最坏情况下所需的测试用例数为|T1|+|T2|,即1+22+…+22n-22个.因此,当实验重复足够次数时,IPT和IPT-PS的F-ratio将非常接近.同理,在m维输入域下,当θ=2-mn,log0.5θ=mn时,IPT与IPT-PS的F-ratio非常接近.我们从实验1和实验2中均发现,相对于IPT,IPT-PS的F-ratio较小,且波动幅度较小.为了进一步分析IPT-PS采用基于优先级的用例执行策略对F-ratio的影响,我们开展了实验3.在实验3中,我们选取2~4维输入域下的特定的θ进行更为细化的IPT与IPT-PS的F-ratio比较.2维输入域下,θ={2-6,2-6×(3/4)i,2-8,2-8×(3/4)i,2-10},i=1,2,3,4,共计11个取值;3维输入域下,θ={2-6,2-6×(3/4)i,2-9,2-9×(3/4)i,2-12},i=1,2,…,6,共计15个取值;4维输入域下,θ={2-4,2-4×(3/4)i,2-8,2-8×(3/4)i,2-12},i=1,2,…,8,共计19个取值.实验结果如图6(a)~(c)所示,当θ取到某些特定值时,IPT-PS的F-ratio较之IPT有明显的下降,从而使得波动幅度变小.我们用矩形框在图6中标注出这些特殊的数据点,通过分析这些数据点的θ取值发现:2维输入域下,θ=2-6×(3/4)2,2-8×(3/4)2;3维输入域维下,θ=2-6×(3/4)3,2-9×(3/4)3;4维输入域下,θ=2-4×(3/4)4,2-8×(3/4)4.这与我们在前文讨论的理论结果一致,即当θ取值为1时,IPT-PS在最坏情况下仅需执行优先级最高的|T1|个测试用例,即可检测到失效;而IPT在最坏情况下则需执行所有新增测试用例,即|T1|+|T2|+|T3|个测试用例才可检测到失效.因此,引入了基Page12图6细化的IPT与IPT-PS的F-ratio比较于优先级的用例执行策略后,IPT-PS的F-ratio较之IPT有明显的下降.因此,我们可以回答问题2:较之IPT,IPT-PS采用基于优先级的用例执行策略能够有效改进算法的F-ratio.4.4问题3:IPT-PS的适用性分析鉴于前期的实验是面向1~4维输入域的块状失效模式下的实验,本节将初步探究IPT-PS的适用性,主要包括高维、多种失效模式、真实程序场景下IPT-PS的适用性.(1)维度的扩展针对5~8维输入域的块状失效模式,失效率θ=2-n(n=0,1,…,14),获取IPT-PS的F-ratio如图7所示.与前期实验观察一致,IPT-PS的F-ratio在下降至对应的最低点后,随着θ的减小,F-ratio逐渐增大并呈周期性波动.此外,随着维度的增加,相应的F-ratio越大且波动幅度越大.在7维和8维输入域下,存在部分F-ratio大于1.由此可见,IPT-PS在高维场景下仍然可用,当θ较大时,IPT-PS仍然保持较高的失效检测能力.当θ较小时,F-ratio存在着波动.因此,如何改进IPT-PS在高维的性能,减小IPT-PS的波动幅度,将是我们后续的一项重要工作.(2)失效模式的扩展为验证IPT-PS在多种失效模式下的适用性,我们将IPT-PS分别应用于圆形失效模式和点状失效模式[32].在圆形失效模式下,维度为1~4维,失效率θ=2-n(n=0,1,…,14),得到IPT-PS的F-ratio如图8所示.与IPT-PS在块状失效模式下的表现(参见4.3节图5)类似,F-ratio在下降至对应的最低点后,随着θ的减小,F-ratio逐渐增大并呈周期性波动.F-ratio始终小于1,说明IPT-PS在圆形失效模式下仍然适用,仍具备较强的失效检测能力.Page13文献[32]中指出,点状失效模式的核心不在于失效区域的大小,而在于失效区域的数量.因此,本文参考了文献[32]中的实验参数,选取维度为2维,失效率θ={0.005,0.001,0.0005},等大小的方形失效区域的数量n={1,4,7,10,20,30,…,90,100},获得点状失效模式下IPT-PS的F-ratio如图9所示.由图中可以获得两个结论:(1)在相同的θ取值下,随着n的增加,F-ratio将逐渐增大.这是因为,n的增加将直接导致单个失效区域对应的实际θ减小,从而使得F-ratio逐渐增大;(2)在相同的n取值下,θ的取值越小,F-ratio越大,这一观察与前期实验结果一致.上述两个实验说明,IPT-PS在圆形和点状失效模式下仍适用,且具备较强的失效检测能力.(3)真实程序的验证我们从NumericalRecipes中选择了两个C程序bessj0和select[33]来分析IPT-PS的适用性.bessj0的输入为一个浮点数(floatx),输出为一个浮点数.select的输入为两个整数和一个浮点数数组(unsignedlongk,unsignedlongn,floatarr[]),输出为一个浮点数,即n维数组中第k小的数.我们采用Csaw工具随机生成变异[34],通过选择、简化,最终bessj0共有140个有效变异,select共有8个有效变异.针对每个有效变异,重复30次实验并分别记录RT和IPT-PS为检测出该变异所需测试用例的数量.令NRT,NIPT-PS分别为30次实验下RT和IPT-PS所需测试用例数量的均值,令N-ratio为IPT-PS所需测试用例数量与RT所需测试用例数量的比值,即N-ratio=NIPT-PS/NRT.显然,当N-ratio<1时,说明IPT-PS表现优于RT;当N-ratio>1时,说明IPT-PS表现劣于RT.在bessj0的140个有效变异中,存在33个(23.5%)变异,其对应的N-ratio<1;存在107个变异,其对应的N-ratio>1.在select的8个有效变异中,存在6个(75%)变异,其对应的N-ratio<1;仅有2个变异对应的N-ratio>1.为了进一步分析当N-ratio>1(即IPT-PS劣于RT)的情况下IPT-PS与RT的性能差别,我们引入了在金融领域广泛应用的条件风险价值(ConditionalValue-at-Risk,CVaR)[35].CVaR是一种风险计量方法,衡量了当损失超过VaR时的平均损失,具体定义如下:CVaR(Pr(r<VaR))=E(r|rVaR).显然,给定风险临界值VaR,当CVaR值越小时,平均损失越小,整体风险越小.在本文实验中,VaR与N-ratio相关,当N-ratio>1时,可认为发生损失,因此VaR=1.以bessj0为例,存在23.5%的变异,其对应的N-ratio<1,于是有Pr(N-ratio<1)=0.235,CVaR(0.235)=E(N-ratio|N-ratio1)=1.7192.也就是说,存在1-Pr(N-ratio<1),即0.765的概率使得N-ratio1,所有符合N-ratio1这一条件的N-ratio的均值为1.7192.如图10所示:x轴为N-ratio,y轴为落入N-ratio对应取值范围内的变异的个数.在N-ratio>1的107个变异中有70个变异对应的N-ratio∈[1,1.5],CVaR(0.235)=1.7192,这表明尽管在107个变异中IPT-PS的表现较差,但是IPT-PS与RT的表现差距不大.通过分析所有N-ratio>1的变异代码,我们发现:这些变异导致的失效模式是一些组合的复杂失效模式,而并非特定的块状、圆形或点状失效模式,因此,IPT-PS未能获得较优的失效检测效果.尽管如此,通过上述两个真实程序及其变异版本的验证,可知IPT-PS在真实应用中是可行的,且存在着快速检测到失效的可能.此外,失效检测能力与待测程序的特性,特别是失效模式有着紧密的联系,然而在真实程序中,失效Page14模式往往是未知且复杂的,任何一种测试用例生成算法都无法保证在所有失效模式下均表现最优,因此,需要进一步探讨IPT-PS的优势应用场景.于是,我们可以回答问题3:实验结果表明IPT-PS在高维、多种失效模式、真实程序场景下仍然适用,并存在着进一步优化的可能.综合上述3个研究问题可知:IPT-PS在仅使用接近RT时间开销的情况下,可以达到与ART相近甚至更好的失效检测能力,权衡了有效性和效率之间的矛盾,是一种高效的测试方法.同时,IPT-PS在高维输入域、不同的失效模式以及真实程序中也表现良好,具有广泛的适用性.此外,实验观察证实了我们的理论分析结论,进一步验证了IPT、IPT-PS中关于执行测试用例数与可推断的θ取值范围的关系.5结论随机测试一直被认为是一种最为简便高效的测试用例生成方法,但其算法本身难以实现较好的取样均匀性.适应性随机测试、划分测试等方法的提出,从测试用例分布的角度上实现了更好的均匀性,失效检测能力在不同场景下实现了提升.然而,此类方法均需要在时间开销上有着不同程度的牺牲,例如,ART需要远高于RT的生成计算开销;传统划分测试则需要对输入域进行预处理,以获得合理的子域划分,而划分的合理性又往往是决定失效检测能力的关键因素.因此,一直缺少一种可以在失效检测能力与计算开销之间实现良好平衡的测试用例生成方法.本文提出了一种基于优先级的迭代划分测试方法IPT-PS,很好地解决了上述关键性问题.该方法通过迭代划分、中心采样和基于优先级的用例执行策略实现了测试用例的生成和执行.IPT-PS结合了上述传统方法的优势,分别解决了其所具有的局限性.较之上述传统方法,IPT-PS不需要对输入域进行预处理划分,计算开销极低,更重要的是IPT-PS可以实现测试用例的高度均匀分布,使其具有良好的失效检测能力.本文通过理论分析指出了执行测试用例数与可推断的θ取值范围的关系,给出了IPT-PS检测失效所需测试用例数量的上界,并通过仿真实验表明,IPT-PS在仅使用接近RT时间开销的情况下,可以达到与ART相近甚至更好的失效检测能力.未来的研究工作主要包括:(1)已有IPT-PS方法的改进:探讨是否有其他测试用例的选择方式,使得测试用例在两轮迭代间的分布更加均匀.同时,考虑如何提高IPT-PS在高维空间上性能的稳定性;(2)失效模式的扩展:在已有块状、圆形、点状失效模式的基础上,考虑组合的复杂失效区域、失效区域在输入域中的特定位置(如边界、角落、中心等)对算法性能的影响;(3)实验规模的扩展:本文已采用仿真实验和部分真实程序来验证方法的有效性,后续将增加更多较大规模真实程序的测试,以进一步验证IPT-PS方法的有效性.
