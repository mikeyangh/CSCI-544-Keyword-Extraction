Page1面向互动式网络场景再现的流速控制系统与方法褚伟波1)管晓宏1),2)蔡忠闽1)陶敬1)1)(西安交通大学智能网络与网络安全教育部重点实验室西安710049)2)(清华大学自动化系清华信息科学与技术国家实验室北京100084)摘要互动式网络场景再现是一种重要的真实网络流量产生方法.然而,由于流量产生过程的复杂性,基于精确的数学模型对该过程产生流速进行控制是一个较为困难的新问题.文中设计实现了一个面向互动式网络场景再现的流速控制系统,并将网络场景再现过程中的流速控制问题转化为目标跟踪控制问题进行求解.该系统采用一种基于函数近似器的流速控制方法,利用函数近似器对系统的输入输出关系进行描述,通过动态调整系统输入流量来对回放过程输出流量进行跟踪.最后,利用真实网络流量实验考察了文中系统和方法在不同丢包、传输延迟以及会话阻断环境下的实际控制效果,并从收敛时间、产生输入输出、控制误差等角度对系统的控制性能进行了分析.关键词互动式网络场景再现;流量回放;流速控制;函数近似器1引言网络场景再现[1-15]是近年来逐渐受到重视的一个新兴研究方向,其核心问题是再现符合真实网络场景的流量.网络场景再现研究对于网络安全、网络管理、网络设备测试评估等领域具有重要意义.当前网络流量再现方法主要有两种,即基于仿真的流量再现方法[1-6]和基于真实网络流量还原回放[7-15]的方法.基于仿真的流量再现方法能够通过调整模型参数来灵活产生需要的流量(如Spirient’sSmartbits①,IXIA’sTrafficGenerator②).然而,由于实际网络流量异常复杂,基于仿真方法产生的流量往往与实际流量相差较大(如数据包大小、IP地址和端口分布、应用类型等),利用仿真流量对系统进行测评得到的结果并不足以代表系统在真实网络环境下的功能和性能.在实际情况中也经常发现系统在仿真流量环境下功能和性能均表现正常而在实际网络中却出现各种问题;相反地,网络流量回放方法则是将真实网络中的流量进行捕获记录[16]并还原回放到测试网络的一种流量产生方法.由于采用了实际网络中捕获得到的流量,流量回放方法可以在数据包层面(包大小、包内容、包时序等方面)还原实际网络场景、达到直接考察被测系统在真实网络中的功能和性能的目的.根据流量回放机制的不同,流量回放方法又分为直接回放[7-11]和互动式回放[12-15]两种,分别对应直接的流量再现以及互动式流量再现.直接流量再现方法(如TCPReplay③、TCPivo[7]、Monkey[8]、Tomahawk④)简单地将捕获到的数据包注入到测试网络来对网络场景进行还原,主要用于测试IDS(入侵检测系统)、Sniffer(嗅探器)等各类被动型旁路设备;而互动式再现方法则在流量产生过程中仿真实现了TCP/IP协议栈并严格基于网络协议规范来产生数据报文,有效解决了直接流量再现方法在测试Firewall(防火墙)、IPS(入侵阻断系统)等各类串接型安全设备过程中产生大量违反协议语义数据包的问题[12,14](如采用直接再现方法在测试Firewall的过程中,SYN_ACK报文会在SYN报文被Firewall阻断的情况下仍然被回放到测试网络中,从而极大地影响到测试结果的准确性).由于在流量再现过程中考虑了数据包之间的协议语义并模拟会话两侧的行为来产生流量,因而互动式网络流量再现方法可以通过产生流量的变化反映被测设备的作用,达到考察被测设备串接在实际网络时的功能和性能的目的.当前,互动式网络流量再现方法已经成为了对IPS、Firewall等各类串接型网络设备进行测试评估的最新方法.在网络场景再现过程中,对回放产生流量的流速进行控制具有重要意义.流速控制主要有两个方面,一方面是产生尽可能大的流速的流量,另外一方面是产生满足用户设定流速的流量.产生高速流量可用于考察被测系统在高速网络环境下的功能和性能,而产生用户指定流速的流量在测试过程中同样非常重要.在实际网络管理和设备测试过程中经常发现被测系统的一些深层次故障和问题往往是在流速突然发生变化的时候或在一些特定流量水平上才体现出来.所以,流速控制在流量再现过程中便成为了一个非常重要的环节.在本文中,考虑在互动式网络场景再现过程中产生满足目标网络环境且具有指定流速的流量的问题.在直接网络场景再现过程中,由于数据包被直接注入到测试网络,在流量产生过程中对流速进行控制是一个相对较为简单的问题,而在互动式场景再现过程中对流速进行控制则较为复杂,其主要原因如下:(1)作为系统输入的网络流量的不稳定性.大量研究表明真实网络流量是一个非常复杂的非平稳过程[17-19],各种特征诸如流量大小、数据包大小,IP地址和端口分布等均是随时间动态变化的.特别是由于互动式流量回放过程是基于流来产生测试流量,流量中各种与流相关的特征诸如流的长短、流的持续时间和流的到达速率等均会影响到系统性能;(2)测试环境的作用.流量产生过程中测试环境的丢包、会话阻断和数据包传输延迟等作用会影响到回放时流的状态,进而影响到回放系统的性能;(3)回放系统自身的动态特性.互动式流量回放系统通常是由软件实现,因此操作系统中的进程调度、磁盘IO、网络IO等随机因素也会影响到流量回放过程.考虑到互动式场景再现过程的复杂性,对其建立精确的数学模型并基于模型进行流速控制便成为①②③④Page3了一个非常困难的过程.由于不知道系统的数学模型,一些传统基于模型的控制方法(如H无穷最优控制、模型参考控制等等)便无法适用.在文中,我们设计实现了一个面向互动式网络场景再现的流速控制系统,并将网络场景再现过程中的流速控制问题转化为目标跟踪控制问题进行求解.所设计的系统采用一种基于函数近似器的流速控制方法,利用函数近似器对系统的输入输出关系进行描述,通过动态调整系统输入流量来对回放过程输出流量进行跟踪,并同时通过并行扰动随机估计理论[20]对近似器中的参数进行实时估计.该系统的最大优点在于可以在并不知道系统模型的情况下仍然对复杂过程进行有效控制.我们采用真实网络流量对所提出的流量控制系统和方法在不同网络环境下的实际控制效果进行了分析与验证.实验结果表明,本文所设计实现的流速控制系统可以精确地对回放过程产生的流速进行控制,在测试网络丢包率达到10%以及会话阻断率达到30%等极端情况下,系统仍然能够达到很好的控制效果.此外,还从控制过程的收敛时间、产生输入输出以及控制误差等角度对该系统的控制性能进行了分析.本文第2节介绍相关研究工作;第3节介绍互动式网络场景再现过程流速控制问题;第4节对影响互动式网络场景再现过程产生流速的因素进行分析;第5节介绍基于函数近似器和并行扰动随机估计理论的流速控制系统和方法;第6节给出用真实网络流量对所提系统和方法实际控制效果进行实验验证与分析的结果;第7节对全文工作进行小结并对未来进行展望.2相关研究工作基于真实网络流量的场景再现研究工作始于2001年左右.最早研究人员在sourceforge上建立了TCPDump①和Libpcap②等开源项目,用于开发在网络中能够实时捕获数据报文的系统.在这之后很大一部分研究开始转向流量还原回放方面.文献[7]介绍了TCPivo———一个Linux平台下的高性能数据包回放系统,并提出了一些用于提高数据报文回放效率的系统实现方法;Monkey[8]是加州大学和Google共同开发出来用于测试服务器端性能的流量回放系统,分为Monkeysee和Monkeydo两个功能模块,Monkeysee用于在服务器端一侧捕获服务器与客户端交互的流量,并提取包括数据报文间隔、网络传输延迟、丢包率等参数信息;而Monkeydo用于模拟客户端和传输网络行为,根据接收到的服务器端发送过来的数据包来产生(回放)客户端的流量,以此考察服务器端的参数变化(如不同的缓存大小)对于网络服务性能的影响.文献[9-11]考察了大规模网络流量并行回放中的流分割和回放质量评估问题.上述研究工作主要定位于对捕获流量进行单向回放.在TCPReplay和Tomahawk中,研究人员开发出用于测试各类串接型设备的数据报文回放系统.该类系统采用了流量的双向收发机制,即利用两个测试接口来回放捕获的双向流量,每个测试接口用来回放一个方向的流量并接收来自另外一个方向的流量;被测设备串接在两个测试接口之间,回放系统通过对比接收的流量和回放的原始流量来考察串接设备对于流量施加的作用.为了解决流量直接回放方法在测试IPS、Firewall等各类串接型安全设备过程中产生大量违反协议语义数据包的问题,在2005年加州大学的Hong和Wu首次提出了互动式的网络流量场景再现方法,并开发了原型系统TCPOpera[12].在这种新型的流量回放方法中,除了采用流量的双向收发机制外,回放系统还模拟实现了TCP/IP协议栈,为每个被回放TCP流会话维护状态.在流量回放时,回放系统严格根据TCP/IP协议,采用基于状态的方法来回放TCP流量.由于在流量产生过程中考虑了数据包之间的协议语义并模拟会话两侧的行为来产生流量,互动式网络流量回放方法可以产生满足协议语义的流量,并通过产生流量的变化反映被测设备的作用,达到考察被测设备串接在实际网络时的功能和性能的目的.文献[13]对互动式流量回放测试系统的具体实现作了详细的介绍.也有学者将仿真方法和流量回放技术相结合来产生目标流量,如文献[21-22].本文作者所在研究小组自2007年开始对互动式网络场景再现方法进行了相关研究.在文献[14-15]中,作者基于TCP协议的确认机制和停等特性(在流量回放时体现为收发平衡现象),提出了一种基于收发平衡和状态判定相结合的新的TCP流量回放①②Page4方法.通过在回放TCP流量时将满足收发平衡条件的数据包优先发送出去,所提方法能够在保持TCP流量回放语义的前提下,有效减少数据包发送时的状态判定开销,从而提升回放性能.而本文的研究工作则是关注TCP流量回放过程在受到丢包、传输延迟和会话阻断等网络环境作用时的流速控制问题.因此,虽然两者的研究对象均为互动式流量回放过程,但是关注点不同.与本文研究工作最为接近的是加州大学的Vishwanash和Vahdat的工作,他们开发的Swing[23]是一个将网络模型和真实流量数据相结合的流量产生系统.具体地,Vishwanash和Vahdat认为产生真实网络流量需要一个层次化模型,从上到下分别对应用户层、会话层、链接层和网络层.他们将产生流量的模型参数分成两类,一类是流量特征参数,包括应用层协议分布、会话大小、会话时间间隔、链接数目、链接到达速率等;另外一类是网络特征参数,包括数据包丢包率、传输延迟和链路带宽.从捕获流量中提取出这些参数之后,Vishwanash和Vahdat通过搭建模拟环境(包括两端的流量产生器和中间的网络仿真器)来产生流量.具体产生流量的方法是在流量产生器中设置链接产生时间、链接大小、链接持续时间等相关流量特征参数,而在网络仿真器中设置丢包率、传输延迟等网络参数.与Swing系统相比,本文工作虽然也是通过搭建模拟环境来产生流量,但存在如下不同之处:(1)本文工作通过在模拟环境中回放捕获的真实流量来产生用户需要的流量,无需对真实流量中的特征参数进行提取.(2)本文工作通过模拟TCP/IP协议栈来回放捕获的网络流量,产生的数据是真实的网络流量(数据包内容与原始网络流量相同).而Swing系统则图1基于互动式流量回放过程产生目标流量的方法示意图是通过在流量产生器中建立真实TCP链接来传输一定大小人工仿真数据的方法来产生流量.因此,两者产生流量的机理不同.Swing系统更多地关注产生流量的特征参数符合真实网络特性,对流量中传输内容并不关注.而本文工作则关注流量内容的真实性.(3)本文主要研究回放过程在受到传输网络作用的条件下的流速控制问题,而Swing系统则主要解决产生满足网络环境特征的流量(产生流量的特征参数分布符合真实网络流量)的问题.3互动式网络场景再现流速控制3.1基于互动式场景再现的流量产生方法除了用于设备测试,互动式网络场景再现还可用来当作真实网络流量的产生机制,用于产生目标网络环境下符合协议语义的真实流量.由于实际网络流量通常是在某个特定时间特定网络环境下捕获的,而对设备进行测试时往往又需要一些具有指定网络环境的流量(比如需要一定丢包率和网络延迟环境的真实流量,用来当作背景流量对IDS等设备进行功能和性能测试,而实际这样的网络环境却不容易获得).在这种情况下,就需要对从实际网络中捕获到的真实流量进行变换(从流量捕获时的原始网络环境映射到目标网络环境),使之产生目标网络环境下满足协议语义的流量.由于网络流量的复杂性,直接基于原始流量产生目标流量的仿真方法很容易破坏产生流量的协议语义,而互动式流量回放方法具有保持流量协议语义的特性,因此可用来产生指定网络环境下的真实流量.图1是基于互动式流量回放过程产生目标流量的方法示意图.如图1(a)所示,在具体应用该方法之前,一般需要先对原始流量进行处理(比如去除重Page5传的数据包、过滤掉不需要的流量等).之后,将一台可配置丢包率、数据包传输延迟等环境参数的网络仿真设备当作中间设备串接在互动式流量回放系统中(该网络仿真设备用于模拟目标网络环境,见图1(b)),通过控制互动式流量回放过程产生指定网络条件下的符合协议语义的目标流量.3.2互动式网络场景再现过程的流速控制互动式网络场景再现的核心是流量的双向收发以及基于状态的流量产生机制.在系统实现中涉及到磁盘IO、网络IO、会话状态维护和管理等多个方面.基于流量在回放时的具体处理流程以及系统实现时的性能考虑(如磁盘IO和网络IO的并行化等),互动式流量回放过程通常包含如下5个子过程(如图2):①数据包输入子过程.该过程从磁盘文件中依序读入数据包,并至于系统的输入缓冲区中.②流量回放子过程.该过程从系统输入缓冲区中获取数据包,并根据对应会话的状态,采用基于状态判定的方法尝试发送该数据包.如果待发送数据包通过状态判定,则回放系统直接调用对应的网络测试接口将数据包发送出去并更新对应会话的状态;否则,该数据包将被缓存于系统中并等待会话状态更新后再次发送.③数据包接收子过程.该过程从回放系统的网络测试接口中提取到达的数据包,并至于系统的接收数据包缓冲区中.④会话接收更新子过程.该过程从回放系统的接收数据包缓冲区中取出到达系统的数据包,并根据数据包包含的协议状态信息更新对应会话的状态;在会话状态更新后,该过程还负责将缓存于系统中满足发送条件的数据包发送出去.⑤超时重传子过程:该过程负责将当前系统已经发送出去但尚未被系统另外一个测试接口接收到的超时的数据报文依据网络协议规范进行重传.本文考虑在互动式流量回放过程中,通过调整系统输入流量速率来控制回放过程输出流量.由于不知道具体数学模型,因此考虑基于系统输入输出信息来对系统进行控制.该问题建模成离散时间目标跟踪控制问题,具体描述如下:将互动式流量回放过程视为一个动态的含有噪声的非线性过程,其中系统数学方程并不可知,但却可以通过测量得到一系列离散时间回放过程输出流量信息.记回放控制的目标流量大小为t1,t2,…,测量得到的离散时间系统输出流量大小为y1,y2,…,相应的输入流量控制为u0,u1,….其中,当前时刻k的系统输入uk影响yk+1,yk+2,….基于到当前为止的历史流量输出信息y1,y2,…,yk以及历史控制u0,u1,…,uk-1,回放过程流速控制的目标是决定当前时刻k的输入uk,以便在该输入下回放过程产生的下一个时刻的输出yk+1满足目标值tk+1.4影响网络场景再现过程产生流速的因素分析本节将从网络环境行为以及网络流量特性两大方面对影响互动式网络场景再现过程产生流速的因素进行分析.4.1网络环境行为互动式网络场景再现过程的本质是模拟TCP/IP协议栈来对TCP流量传输过程进行再现.因此,所有影响TCP传输性能的网络行为都会影响到回放过程.以下分别从网络丢包、传输延迟、会话阻断以及报文乱序等几方面进行分析,并对这些因素影响TCP流量回放过程的机理进行说明.(1)网络丢包.网络传输过程中的数据包丢包行为会影响到TCP流量的传输性能.根据TCP/IP协议规范,丢包是网络发生拥塞的表现.TCP发送端在通过超时机制感知到丢包发生时,会减小数据发送窗口并进入拥塞避免阶段[24],同时对丢失的数据报文进行重传.由于发送窗口减小,TCP数据传输速率也随之降低.(2)传输延迟.数据包端到端传输延迟也会影响到TCP流量的传输性能.根据文献[25],TCP会话的吞吐率与网络传输延迟近似成反比关系,即网络Page6传输延迟越大,则TCP流量的传输性能也就越低.(3)会话阻断.在实际的流量传输过程中,若一个TCP会话被阻断(如接收到Firewall发送的RST报文),则该会话将会被终止,且其后续的流量将不再传输.(4)报文乱序.报文乱序对TCP传输性能的影响体现在接收端的确认行为上.当发送方传输的数据报文在网络中发生乱序时,接收方将需要缓存乱序到达的数据报文[26].对于采用累计确认的TCP协议实现,报文乱序将明显降低TCP的数据传输效率.4.2输入流量特性除了丢包、传输延迟等网络环境行为,输入流量特性同样会影响到回放过程.由于被回放流量通常是由多个TCP会话组成,因此,从单个TCP会话特性以及会话并发两个方面进行分析.(1)单个TCP会话特性:从真实网络中采集的流量包含多种应用,产生的TCP会话特性也会根据应用的不同而不同.参考文献[1],我们将TCP会话大体分成两类,一类是交互式会话,对应的应用包括Telnet、SSH、Rlogin、VoIP等;另外一类是成块数据传输会话,如FTP文件传输、文件共享等.对于交互式会话,一般来说这类会话的流速较低,数据包之间的时间间隔相对较长,因此,在相同的输出流速下需要并发的会话个数较多;而成块数据传输的会话对应的流速较高,数据包之间的时间间隔较短,通常情况下同一时刻发送窗口中会有多个数据报文进行传输.因此,在相同的输出流速下需要的并发会话个数也较少.(2)输入流量的会话并发:会话并发会显著改变流量回放过程输出速率.站在回放过程流速控制的角度来看,当网络丢包、传输延迟、会话阻断以及报文乱序等现象越严重时,单个TCP会话的传输性能也就越低.因此,为了产生相同速率的流量,回放系统需要在同一时刻回放尽可能多的并发会话,也即在系统控制时需要施加更大的流量输入速率.而当被回放流量中同一时刻并发会话数目达不到要求时(比如,输入流量中只包含少数几个会话),则无论施加多大输入流量,系统都不可能产生期望输出速率(在本文实验部分可以观察到).5基于FA和SPSA的互动式场景再现过程流速控制系统和方法由于互动式流量产生机制异常复杂,很难通过内部机理分析建立精确的数学模型,因此考虑在系统的输入和输出层面来对系统进行建模并对产生流速进行控制.以下具体介绍基于函数近似器(FunctionApproximator,FA)和并行扰动随机估计理论(SPSA)的流速控制系统和方法.5.1互动式网络场景再现过程的FA控制方法将流量回放系统当作一个黑盒(如图3),采用函数近似器来产生控制输入并对系统进行控制.函数近似器用来描述目标流量和需要施加流量之间的映射,具体数学形式可以采用多层神经网络、代数多项式、三角型序列等.根据Stone-Weierstrass理论[27],这些近似器均可对任意一个数学函数进行精确逼近.我们考虑采用结构固定的函数近似器(如多层神经网络中层数和节点数目一定、代数多项式的阶数一定),但却可以让近似器的参数随时间动态变化(比如权重可动态改变).函数近似器的输入是系统观测到的历史测量数据和历史控制信息(还可包含目标流量信息),而相应的输出则是系统当前时刻产生的控制.假设时刻k函数近似器的输入包含前M个历史测量数据和前N个历史控制信息,当函数近似器参数不变化时,近似器的输入可简单记为Ik={yk,yk-1,…,yk-M+1;uk-1,uk-2,…,uk-N}当函数近似器的参数动态更新时(由扰动机制产生,在下面小节将会介绍),上述近似器的输入信息中还将包含一部分参数动态更新时得到的数据.图3是基于函数近似器进行流速控制的互动式流量回放系统示意图.在该系统中,当前时刻k函数近似器的控制输入是目标流量信息tk+1和前一个时刻的系统观测信息Ik={yk},而近似器的输出则直接对应当前时刻产生的控制uk.图3基于函数近似器的互动式流量回放过程5.2基于SPSA方法的参数估计在基于函数近似器的控制系统和方法中,函数近似器被用来根据历史信息产生当前时刻需要的输入.然而,由于不知道近似器包含的参数,因此需要对近似器的参数θk进行实时估计.在假定函数近似Page7器结构固定的条件下,近似器的参数估计问题等同于求取使得代价函数Lk(θk)最小化的参数θk∈Rp(由于近似器结构固定,p是与k无关的一个常量,代表参数个数).代价函数Lk(θk)可采用如下二次型:Lk(θk)=E[(狔k+1-狋k+1)T犃k(狔k+1-狋k+1)+狌Tk犅k狌k]式中犃k和犅k是两个半正定矩阵,反映控制器对于输出流量和施加控制的不同权重;狔k+1,狋k+1,狌k分别是由标量yk+1,tk+1和uk组成的向量.上述函数近似器的参数估计问题等价于在时刻k求取θk,使之满足如下方程:其中,gk(θk)即为代价函数Lk(θk)对参数θk∈Rp的梯度.然而,由于系统数学模型并不可知,式(3)中Lk/狌k项便无法求得.因此,传统基于目标函数梯度信息进行求解的方法或其它一些利用gk(θk)进行参数求解的方法便不再适用.为了获取系统参数{θk},我们考虑采用随机估计的方法:其中,θ^k是k时刻近似器参数θk的估计值,{ak}是一个满足一定条件的标量序列.此处,采用并行扰动随图4并行扰动随机估计方法的算法步骤当扰动机制引入到控制过程时,函数近似器的输入将包含参数扰动后得到的系统测量值和控制输入.此时,系统的测量值变为{y0,y(+)2,y(-)2,y2,…},而对应的控制输入也将变为y(+){u0,u(+)1,u(-)生的控制均是基于前M个历史测量数据和前N个历史控制信息,对于u(+)机估计方法(SPSA)[20]进行参数估计,该方法具有如下形式:式(5)中g^k(θ^k-1)是扰动后gk(θ^k-1)的估计值.g^k(θ^k-1)的第l个成员变量(l=1,2,…,p)可以由如下式子求得:在式(6)中:(1)L^(±)进行计算得到的值.对于形如式(2)的代价函数,L^(±)k=(狔(±)(2)u(±)得到的函数近似器的控制输出,其中Δk=(Δk1,Δk2,…,Δkp)T是一个随机序列.通常情况下,{Δki}是独立同分布、有界、相对于0对称分布的随机量,并且k,i满足E(Δ-2(3)y(±)量测量值.(4){ck}是满足一定条件的正实数序列.通常情况下,根据被控系统是否稳定取ck→0或者ck=c.基于并行扰动随机估计理论进行参数估计的算法如图4所示.似器的输入就变成了集合I(+)M=N=2且当前最新系统测量值为y(+)时刻系统的控制u(-)k={y(+)集合I(-)5.3流量回放过程流速控制流程基于函数近似器的流速控制系统在采用SPSA算法进行参数估计后的具体流速控制过程如算法1.Page8放过程流速控制流程.器的输入Ik;算法1.基于函数近似器和SPSA的流量回1.读入当前时刻k的参数估计值θ^k-1和当前时刻近似2.参数右扰动θk=θ^k-1+ckΔk,函数近似器根据扰动后的参数和当前输入信息产生需要施加的流量u(+)后的参数和当前输入信息产生需要施加的流量u(-)3.测量流量回放过程的输出流量大小y(+)4.计算参数右扰动后的代价函数L^(+)5.更新当前函数近似器的输入信息;6.参数左扰动θk=θ^k-1-ckΔk,函数近似器根据扰动7.测量流量回放过程的输出流量大小y(-)8.计算参数左扰动后的代价函数L^(-)9.更新当前函数近似器的输入信息;10.根据参数左右扰动后的代价函数变化信息更新当前参数θ^k=θ^k-1-akg^k(θ^k-1);11.当前时刻k=k+1;12.返回步1,直到流量回放过程结束.采用函数近似器和SPSA方法进行系统控制的最大优点在于可以在并不知道系统模型的情况下仍然对动态系统进行精确控制.然而,引入参数扰动机制也给该方法和对应的控制系统在具体应用时在输入输出和收敛时间等方面带来了一些副作用.我们将在实验部分对此进行详细论述.6实验验证及结果分析6.1实验环境设置为考察设计的系统和方法的实际控制效果,实现了一个高性能的互动式网络流量回放测试系统,如图5所示.整个测试系统由组成测试回路的流量回放服务器、千兆交换机、FreeBSD双穴主机(当作网络仿真器)和流量监测器组成.其中,流量回放服务器由一台高性能Linux服务器充当(Redhat9.0系统,2.4.20内核),配置2×2.0GHzIntelXeon处理器,4GBRAM.由于TCP协议栈的实现在不同的操作系统平台以及不同系统的版本下存在差异,本文流量回放服务器上的TCP协议栈的模拟实现参考了TCP-Opera,具体也是基于BSD4.4-LiteRELEASE平台的TCP协议栈实现[24].目前实现的一些核心功能包括:6个TCP计时器、传输过程中的数据包超时和重传、快速重传和快速恢复、拥塞控制以及RTT动态测量等.网络仿真器的实现采用的是FreeBSD平台上的Dummynet①这一开源工具.Dummynet可用于模拟多种复杂的网络环境,对包括传输延迟、网络带宽、丢包率以及排队策略等在内的多项参数进行选择设置,是当前网络研究领域最常用的网络仿真工具.在我们的实验中,将网络仿真平台(安装FreeBSD8.1-RELEASE系统)的两块网卡设置成网桥模式进行数据包转发,同时配合Dummynet对网桥传输流量的数据包延迟和丢包率进行控制;对回放过程会话阻断功能的实现则是通过预先在输入流量中对需要阻断会话的数据包的MAC地址进行标定,而后在网络仿真平台上通过IPFirewall设置相应的规则(根据MAC地址设置)进行阻断.此外,流量回放服务器和FreeBSD双穴主机均配备Intele1000千兆网卡,整个测试回路是一个纯千兆的环境.在千兆交换机上将回放产生的流量镜像到流量监测器上进行观测.实验中采用真实网络流量对本文方法进行考察.所用流量在西安交通大学校园网出口处采集得到,共包含超过20000000个TCP数据包和300000个TCP会话.实验中对串接在测试回路中的FreeBSD双穴主机设置不同的丢包率和传输延迟,同时在输入流量中以不同的概率对阻断会话进行标识,以此来模拟不同的目标网络环境.6.2实验结果及分析考虑丢包、数据包传输延迟以及会话阻断3种不同的网络行为,实验过程中设置FreeBSD双穴主机分别以0.1%,1%,5%和10%的概率进行随机丢包,以0.1ms,1ms,10ms进行数据包传输延迟.另外,设置以10%,20%和30%的概率进行随机会话阻断.这样设置FreeBSD双穴主机的丢包率、传输①http://info.iet.unipi.it/~luigi/ip_dummynet/Page9延迟以及回放过程会话阻断率的目的在于在一个较为宽广的目标网络环境下考察所提方法的实际控制性能.实验过程中将需要产生的目标流量大小设置为100Mbps,离散采样时间取为0.5s.对每个不同设置的实验均重复进行10次,最后取平均性能进行分析.6.2.1未施加控制时的回放性能首先考察系统在不施加任何控制时的回放性能,实验结果如图6所示.在实验中观察到整个真实网络流量的互动式回放过程是一个非常不平稳的过程;受到丢包和会话阻断等网络因素的影响,系统性能发生显著变化,而且,两种因素对产生流量的影响较为复杂,难以用一个确切的数学方程进行描述.可以预见,在同时有丢包、会话阻断以及传输延迟等多种因素存在的网络环境下,系统性能的变化将变得更加复杂.图6没有施加控制的情况下回放系统产生的流量大小6.2.2采用FA和SPSA方法的回放结果(1)方法参数选取考察基于函数近似器和并行扰动随机估计理论的控制系统和方法的控制效果.实验中利用神经网络当作函数近似器,该神经网络的节点采用1/(1+e-z)的输入输出函数,每个节点的输入包括前一层节点的输出加权和再加上一个属于自身节点的偏移量.整个函数近似器的输入包括到当前时刻为止的前两个时刻回放系统产生流量值(M=2)、上一个时刻的输入控制量(N=1)和下一个时刻的目标流量大小,近似器的输出则是当前时刻需要施加的控制量.因此,作为函数近似器的神经网络具有4个输入节点,1个输出节点.假定包含两个隐层,每个隐层有5个节点,则该神经网络可记为N4,5,5,1,共包含(4×5+5)+(5×5+5)+(5×1+1)=61个参数需要同时估计.神经网络的具体结构如图7所示(实验中发现采用结构更为复杂的神经网络并没有显著提升控制性能,但却增加了计算量).在SPSA算法中,参数{Δki}取为伯努利±1分布,ak=a=0.05,ck=c=0.005,作为函数近似器的神经网络的权值初始量取为标准正态分布N(0,1);式(2)中代价函数的参数犃k=[1],犅k=[10].(2)实际控制结果与分析图8、图9以及图10分别是在不同数据包传输延迟、会话阻断和丢包情况下控制系统产生的输入流量大小和输出流量大小.从实验结果中可以得到如下结论:(1)在互动式流量回放控制过程中,系统的输入流量和输出流量之间的关系确实是非线性的.比如从图9(a)中可以看出,为了追踪目标流量,系统在10%的会话阻断率下达到稳定时需要施加的输入流量约为110Mbps,在20%的情况下为128Mbps,而在30%的情况下需要施加的输入流量上升到145Mbps.(2)在达到稳定状态时,基于FA和SPSA方法的控制系统在会话阻断、丢包和数据包传输延迟3种网络因素影响下均能够精确地对回放过程产生流速进行控制.在测试网络丢包率达到10%以及会话阻断率达到30%等极端情况下,系统仍然能够达到很好的控制效果.Page10图8基于函数近似器的控制系统在不同数据包传输延迟情况下产生输入和输出流量大小图9基于函数近似器的控制系统在不同会话阻断率的情况下产生输入和输出流量大小图10基于函数近似器的控制系统在不同数据包丢包率的情况下产生输入和输出流量大小(3)基于FA和SPSA方法的控制系统在不同网络环境因素影响下所需要的收敛时间不同.总体上来说,在随机丢包情况下系统所需要的收敛时间最少,而在会话阻断情况下需要的收敛时间最长.(4)从稳定误差上面来看,在会话阻断、丢包和数据包传输延迟3种网络影响因素中,基于FA和SPSA方法的控制系统在会话随机阻断和数据包传输延迟情况下的控制效果要好于在随机丢包情况下(见图8(b)、图9(b)和图10(b)).我们认为引起该现象的主要原因在于不同网络事件引起的回放系统行为复杂性不同.数据包传输延迟是一个相对较为简单的网络行为;当会话被阻断时(接收到RST报文),回放系统将简单地结束当前流的回放并且后续输入流量中所有属于该会话的数据包将不再被回放出去.因此,会话阻断情况下系统的行为也相对简单.而当数据包发生丢包时,回放系统将执行超时重Page11传行为.根据TCP/IP协议规范,TCP数据报文的超时重传机制是一个非常复杂的过程[28-29].因此,随机丢包情况下的系统行为是最复杂的,相应地导致系统在随机丢包情况下的控制效果要低于在会话随机阻断以及数据包传输延迟时的情况.(5)对于数据包传输延迟在10ms的情况下,发现基于FA和SPSA方法的控制系统产生的输出流量在第80个采样周期后缓慢下降而跟踪不上目标流量(见图8(b)).我们猜测引起该现象的原因在于输入流量的特性,即当数据包传输延迟在10ms时,输入流量中的并发会话个数不足以使得回放过程跟踪上目标流量.通过监测流量回放过程发现此时并发会话个数约为80.同时,在第80个时刻之后人为设置输入流量大小持续增长,同样发现系统的实际输出流量不再随着输入流量的增长而增长.因此,并发会话的个数会决定输出流量的大小,实验结果与我们的分析一致.此外,我们将基于FA和SPSA的控制方法与单输入单输出系统的一些自适应控制方法进行了比较,发现有如下性质:(1)稳定误差.基于FA和SPSA的方法产生的误差要优于一般的自适应控制方法,尤其是在大丢包率的情况下.(2)收敛时间.基于FA和SPSA的方法需要的收敛时间要比一般的自适应控制方法长.而且,一般的自适应控制方法的收敛时间比较稳定,而基于FA和SPSA的方法在丢包、会话阻断以及不同数据包传输延迟情况下则相差较大.(3)产生输入和输出.在系统稳定之前基于FA和SPSA的方法产生的输入和输出要比一般的自适应控制方法波动大.对于基于FA和SPSA的方法与一般的自适应控制方法在收敛时间和产生输入输出方面的差异,我们认为主要原因是由引入的扰动机制造成的.为了对参数进行估计,基于FA和SPSA的方法通过在参数空间随机扰动来获得代价函数对参数的变化信息.而一般的自适应方法则是直接基于系统输出反馈信息产生需要的输入.因此,随机扰动增加了产生输入和输出的波动性,同时也使得方法和系统需要更多数据量和收敛时间来跟踪上目标流量大小.下面,通过表1所示的数据对基于FA和SPSA方法的控制系统在稳定时的控制效果进行更为细致的分析和说明.从平均误差和误差方差上可以看出,总体上基于FA和SPSA方法的控制系统具有较好的稳定性.表1基于函数近似器的控制系统在不同网络丢包率/%会话阻断/%20.00.00718.33E-5数据包传输延迟/ms1.00.00291.24E-4利用其它网络流量对所提方法和系统进行了实验考察,得到的结果同上述结果基本一致,基于文章篇幅考虑此处便不再陈列.从实验结果中可以发现,本文所设计的系统与方法可以在一个较为宽广的网络环境下对回放系统产生的流量速率进行有效控制.7结论和未来展望本文对互动式网络场景再现过程的流速控制问题进行了研究,设计实现了一个基于函数近似器的流速控制系统,并采用真实网络流量对系统的实际性能进行了实验验证与分析.在未来,将重点进行如下工作:(1)定量考察网络延迟、丢包和会话阻断等不同网络行为以及流量的各种特性如会话到达速率、会话大小分布等对回放过程性能的影响.(2)在上述工作基础上,尝试对回放系统建立精确的数学模型.虽然采用无模型控制方法可以达到较为满意的控制效果,然而,精确的数学模型仍然是更好地对系统施加控制,并进行性能分析、最优化设计和稳定性分析等多项重要工作的前提.
