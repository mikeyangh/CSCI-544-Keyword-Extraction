Page1BitTorrent假块污染攻击的对抗方法研究史建焘1)张宏莉1)方滨兴1),2)1)(哈尔滨工业大学计算机网络信息安全研究中心哈尔滨150001)2)(中国科学院计算技术研究所信息安全研究中心北京100190)摘要作为当前最为流行的P2P文件共享系统,BitTorrent容易受到假块污染攻击的威胁.文中剖析了假块污染攻击的攻击原理,通过建立简化的系统随机模型得出了攻击效果所能达到的理论上限,分析了影响攻击效果的主要因素,并通过仿真实验和广域网实验进行了攻击可行性的验证,比较了在不同攻击条件下的攻击效果.最后给出了针对块污染攻击的对抗方法,通过基于双Hash值的SmartHash算法来改进BitTorrent的内容完整性校验协议,仿真实验表明该方法在对抗块污染攻击时是可行和有效的.关键词网络安全;对等网;BitTorrent;块污染;随机模型1引言P2P文件共享系统之一.其匿名性、开放性以及节点之间的松耦合性赢得了越来越多用户的青睐.然而也正是这些特性使BT面临着严峻的安全风险.网BT(BitTorrent)是当今互联网上最为流行的络中的一些恶意节点可以通过BT平台在互联网上Page2恣意篡改真实内容、滥用网络资源、破环BT系统的可用性.BT文件的共享和下载过程可以分成种子文件的搜索、节点选择、块选择以及数据传输四个阶段,各个阶段都会受到恶意攻击的威胁,本文研究的文件假块污染攻击发生在数据传输阶段.假块污染攻击的攻击者伪造大量虚假客户端加入到共享网络中,接受其它节点下载请求后会提供虚假的数据上传.这样下载节点会由于校验失败丢弃下载到的分块,并重新下载.攻击者通过提高被其它节点请求的几率来达到占用其它节点的下载带宽、减低其下载速度的目的.对BitTorrent以及其它P2P文件共享软件的设计者来说,了解系统的协议安全性漏洞和分析各种可能的攻击行为,可以更好地帮助他们采取有效的防范和应对方法,设计出更为健壮的文件共享网络.本文首先介绍相关的研究工作和背景知识,然后通过建模和仿真的方法定量地分析块污染攻击过程,分析块污染攻击损害的理论上限.在此基础上,本文提出一个能够从根本上有效遏制文件块污染攻击的SmartHash方法,并通过实验验证了该方法的有效性.2相关研究工作以及背景知识2.1相关研究工作近些年来随着基于P2P技术的文件共享系统被越来越广泛的应用,P2P文件共享系统的安全性已经受到国内外学者以及工程技术人员的重视.Wallach[1]最早给出了在P2P路由协议方式下独有的一系列安全性问题,指出了P2P对互联网的安全研究工作是一个全新的挑战.P2P系统可以作为攻击者进行大规模攻击的有效工具,Zhou等人[2]提出了P2P蠕虫的概念,指出由于本地路由表的存在,蠕虫在覆盖网拓扑上会更有效地扩散.夏春和等人[3]给出了结构化对等网中的P2P蠕虫传播模型,通过仿真验证了P2P系统下蠕虫强大的感染能力.Naoumov等人[4]指出由于P2P系统中大量活跃节点的存在,容易被攻击者利用,发起DDos攻击,并给出了索引污染和路由表污染两种制造攻击流量的方式.此外,由于P2P系统的匿名性和开放性的特点,使其服务本身同样面临着严重的安全威胁.Douceur[5]首先提出了在没有中心认证机制的P2P匿名系统中不可能完全防御女巫攻击(Sybilattacks).Liang等人[6-7]指出P2P系统中存在严重的文件污染问题,并通过测量的方法给出了Kazza网络中的文件污染程度,进行了详细的统计和分析.Urdaneta等人[8]对DHT领域的安全性研究给出了综述,内容包括Sybil攻击、Eclipse攻击[9]以及路由和存储攻击.对于当前最为流行的P2P文件共享软件中BT安全性近些年也有不少的研究工作,Defrawy等人[10]讨论了利用BT部署DDos攻击的安全隐患.Konrath等人[11]提出BT系统中存在Sybil攻击、块谎称攻击以及Eclipse攻击的可能性,但并没有给出实际测量数据.Dhungel等人先后研究了针对Leechers节点[12]和Seeds节点[13]攻击的可能方法并给出黑盒测试数据,文中也提到了块污染攻击,作者通过实际测量认为,块污染攻击只能延迟50%左右的下载时间,没有超过用户的容忍度.Liogkas等人[14]分析了块污染攻击对网络造成的危害,并在可控环境中进行了实验,但没有给出实际延迟效果.针对块污染攻击的对抗策略目前主要有黑名单方法[12],Barcellos等人[15]提出的信誉系统的方法以及Dhungel等人[16]提出的启发式识别方法,这些方法都是采用被动的防御手段,并不能从协议的角度根本性的解决块污染攻击的危险,而且方法可行性有限.本文则系统地分析了块污染攻击的原理,验证了攻击可行性,并提出了基于双Hash值的SmartHash对抗策略.2.2背景知识2.2.1BitTorrent协议BitTorrent是基于P2P架构的内容分发协议①,不同于其它的P2P协议,BitTorrent并不需要所有的节点参与并构建成一个大的网络,来提供搜索、共享和传输文件的服务,而是基于不同的共享文件,由下载该文件的节点按照BitTorrent协议组织成一个独立的覆盖网络,实现协作下载.也就是说,BitTorrent系统本身并不提供搜索功能,它的目标只是快速、高效地把文件分发给参与节点.以下是BitTorrent协议中重要的名词定义和算法介绍:(1)种子节点(Seed).Seed节点是指在一个P2P共享下载网络中,拥有完整文件拷贝的节点.这类节点只提供上传服务,而没有下载请求.(2)下载节点(Leecher).共享网络中相对于Seed节点的是Leecher节点,它只拥有部分的文件拷贝,在提供这部分拷贝的同时,还会向其它节点请求自己缺少的那部分文件.共享同一个文件的Seed和Leecher节点就构成了一个基于该文件的①CohenB.Bep3:Thebittorrentprotocolspecification[Online].http://www.bittorrent.org/beps/bep_0003.htmlPage3共享网络.(3)跟踪服务器(Tracker).Tracker是一个中心服务器,负责跟踪系统中所有的参与节点,收集和统计节点状态,帮助参与节点互相发现,维护共享网络中文件的下载.一个Tracker服务器可以同时维护和管理多个文件共享网络.(4)种子文件(Torrentfile).BitTorrent是通过一个扩展名为.torrent的种子文件进行下载部署的,它由文件最初发布者创建,发布到互联网上,供感兴趣的用户下载.种子文件记录了Tracker的地址,以及每个文件分块的校验值.(5)分块机制.BitTorrent像其它文件共享软件一样对文件进行了分块,分块是最小的文件共享单位,每个Leecher在下载完一个完整的分块后才会进行完整性校验,正确后才通知其它节点自己拥有这部分数据.为了加快文件传输的并行性,每个分块还会分成几个分片,分片是最小的文件传输单位,数据请求者每次向数据提供者请求一个分片的数据.(6)块选择机制.为了保证共享网络的健壮性,延长一个共享网络的生命周期,BitTorrent通过局部最少块优先(rarest-first)策略在节点间交换数据.下载节点根据自己周围的邻居节点拥有块的信息,选择拥有节点最少的分块优先下载,从而维护局部的数据块相对平衡.(7)节点选择机制.它是对用户行为的激励机制.服务提供节点在收到上传请求后会通过Choking/Unchoking机制决定是否对文件请求节点提供上传服务,可以拒绝服务(Choking)或者允许服务(Unchoking).该机制决定了两个相连的节点是否共享彼此的资源.Choking/Unchoking机制的核心是Tit-for-Tat①算法,上传节点会优先选择最近对网络共享大的节点提供服务,该机制的目的就是防止一些自私节点在网络中只索取而无贡献的行为.2.2.2假块污染攻击假块污染攻击(Fakeblockattack)是在文件交换过程中针对分块机制的一种攻击方式,攻击者的目的是减缓整个共享网络的下载速度.根据分块机制,在Bittorrent协议中,客户端每下载完一个分块(一般256KB),都会对这个块用SHA1算法计算其Hash值,并同种子文件中对应块的Hash值进行比对,如果两个值不相同的话,客户端会丢弃这个分块的数据,并重新下载这一分块.而客户端在请求下载的时候选择的最小传输单位又是一个分片(一般为16KB),如果在一个块中有任何一个分片是错误的,整个分块就会校验失败,由于不能校验出具体是哪一分片是错误的,下载客户端会丢弃整个分块.针对分块和校验机制的这一过程,攻击者可以伪造成合法客户端加入到要攻击的共享网络中,发布自己拥有所有分块的信息,以诱使正常的Leecher节点来请求数据.在接到上传请求后,攻击者发送伪造的分片数据给请求节点.请求节点在该分片所在的分块全部下载完成后,进行SHA1校验的结果一定会失败,请求节点会丢弃整个分块并选择新的节点重新下载,这样就减缓了用户下载的速度.由于一个分块的数据可能从不同的节点获得,这些节点既可能是真实节点也可能是伪造的恶意节点,在理想的情况下,如果用户下载完成的每一个块中都有恶意节点提供的至少一个分片,那么这个用户将永远无法下载到整个文件.3块污染攻击的随机模型为了定量地分析块污染攻击对BitTorrent下载节点以及共享网络的影响,本文通过一个对网络环境和节点行为进行抽象的随机模型展开研究.模型不考虑具体网络架构以及网络中的异构性对攻击的影响,因此我们假设网络中所有节点都具有相同的带宽和处理能力,任何两个节点之间进行通信的客观条件都相同.另外,在节点行为方面,假设节点的到达满足泊松分布,节点的离开率只和节点的下载速度有关,当一个节点完成下载后会立刻离开网络,网络中的种子节点数保持恒定.虽然这些假设从一个BitTorrent网络的整个生命周期来看并不完全准确[17],但是由于本文所研究的数学模型只针对某一特定时间区间,网络长期的动态性可以通过调整模型参数来处理.当共享网络的节点数保持稳定时,我们称共享网络处于平衡状态,本文的数学模型只研究块污染攻击对平衡状态下共享网络的影响.为了便于形式化描述,首先定义以下变量:设模型中节点规模为N,BitTorrent网络中所有节点共享给定的文件F,F被分割成M个大小为s的分块,分块是最小的文件完整性校验单位,Fi表示文件的第i个分块,F=F1∪F2∪…∪FM,Fi∩Fj=fori≠j;每个分块又被分成c个更小的分片,分片是文件传输过程中最小的传输单位.在t时刻,网络中包括种子节点和下载节点的节点总数为N(t),节①CohenB.IncentivesbuildrobustnessinBitTorrent[Online].http://www.bittorrent.org/bittorrentecon.pdfPage4点到达率满足强度为λ的泊松分布.所有节点的上传带宽为Bu,下载带宽为Bd,网络中的下载源足够每个节点达到自己的下载带宽,当一个下载节点下载完F所有的分块后会立刻离开网络.在网络达到平衡状态后,总上传带宽为Bmal的Nmal个恶意节点开始对共享网络进行块污染攻击,攻击节点声称自己拥有所有的M个分块,并接受任何节点的下载请求,假设攻击带宽足够满足节点请求.表1详细归纳了数学模型中用到的符号及其含义.块数符号F共享文件M共享文件F拥有的分Fi文件的第i个分块T攻击环境下文件F的s分块大小c分块中的分片数ncomplete(t)t时刻,瞬时节点完成数N(t)t时刻,网络中的节点珡N平衡状态下,网络中的λ节点到达率的泊松分布Bu每个节点的上传带宽bmalBd每个节点的下载带宽bpolluted节点总数总数强度平衡状态时,拥有分片i的节点数x-iBmal恶意节点的总上传带宽Popt选择到恶意节点的概率3.1攻击效果的衡量指标本文从单节点和共享网络两个角度给出了块污染攻击的评判指标.其中对于单结点的污染可以用下载延迟比来衡量.根据随机模型的假设前提,网络中所有节点具有相同的下载延迟比.对共享网络的污染采用瞬时节点完成数来衡量.定义1.下载延迟比.Rdelay=T/T,其中T表示共享网络不受攻击时,单节点完成下载所需时间;T表示相同条件下,受攻击的网络中节点完成下载所需时间.节点的下载延迟比越大则表明块污染攻击的危害越大,Rdelay趋近无穷大时则代表正常节点已经无法下载到完整的共享文件.对于整个共享网络我们通过瞬时节点完成率来评价.定义2.瞬时节点完成数.ncomplete(t),表示t时刻完成下载的节点数,N(t)为t时刻网络中的节点总数,bd(t)表示t时刻,网络中所有节点能达到的平均下载带宽.当网络达到平衡状态后,瞬时节点完成数ncomplete(t)=N(t)·(bd(t)/M·s).相同网络环境下,节点瞬时完成数越小,表示网络受攻击的影响越大.该指标实际反映了整个网络的带宽资源受污染的程度.3.2攻击效果的建模分析下面我们通过随机模型来定量计算两个评价指标,给出攻击效果的理论上限并讨论影响攻击达到最佳效果的因素,首先给出两个定义.定义3.块内并行度.如果节点下载到的每个分块都是从ω个源节点获得的,就称ω为块内并行度.定义4.污染带宽扩散系数.将每个节点从恶意节点处获得的带宽记为bmal,由于校验失败而丢弃的数据所占的下载带宽为bpolluted;则称μ=bpolluted/bmal为污染带宽扩散系数.下面是随机模型中重要的推导公式:(1)无攻击网络中节点下载时间T满足式(1),M·s表示共享文件的大小.(2)稳定状态下节点总数珡N满足式(2),由于t时刻网络中的节点数为dN(t)=λdt-bdM·s·Ndt,当网络达到稳定状态时,有dN(t)/dt=0,并由式(1)代入可得可以看出式(2)所表示的含义符合Little’slaw[18].(3)平衡状态下拥有每个分块的节点数满足这是由于稳定状态下,网络中处在不同完成度的节点数基本相等,网络中总的分块数为∑sBT的块选择策略可以使网络中各个分块都近似平均分布,从而可以得到式(3).(4)完全从恶意节点下载的块所占带宽满足式(4),下载节点每次节点选择时,选择到恶意节点的概率为pmal=Nmal点下载的概率为Pmal=(pmal)ω=Nmal全从恶意节点下载的块所占带宽为(5)完全从良性节点下载的块所占带宽满足式(5),下载节点每次节点选择时,选择到良性下载Page5点下载的概率为Popt=(popt)ω=珡N/2全从良性节点下载的块所占用的带宽为(6)污染带宽扩散系数和块内并行度之间的关系满足(7)下载延迟比满足:Rdelay=T(8)瞬时节点完成数满足ncomplete(t)=N(t)·(bopt/M·s)式(7)、式(8)得到的是攻击者能达到的攻击效果的上限,要求攻击节点的带宽满足其它节点的下载请求.由式(5)可以得到,不完全从良性节点下载的分块所占的下载带宽应为1-bmal.攻击节点总带宽分配到每个下载节点上应为Bmal/N(t).根据块校验机制,在节点选择时,负责同一个数据块请求的节点中只要有一个节点是攻击节点,攻击就能达到最佳效果,这个最小的带宽要求即(1-bmal)/ω.因此攻击达到最佳效果应满足式(9)的条件.当攻击者的带宽不能达到这一条件时,攻击的效果要低于式(7)和式(8)的结果.从上面的分析可以得到影响块污染攻击效果的因素主要有:(1)文件的热度.从式(9)可以看出节点总数N越大对攻击者的带宽要求越高.由式(2)可知珡N的值和节点到达率的泊松强度λ成正比,而λ直接反映了文件受关注的程度.因此,同等条件下越热的文件达到攻击效果上限的难度越大.(2)块内并行度.这主要和客户端的实现有关,块内并行度越大攻击者越容易达到式(9)的带宽要求,而且也越容易达到比较大的下载延迟比.(3)攻击者的带宽.攻击者的带宽越大,攻击效果越好.当攻击者的带宽达到所有Leecher节点下载带宽总和时,攻击必然能够达到攻击效果上限.(4)攻击节点数.由式(7)看出,攻击节点数越多,下载延迟比越大,攻击效果越好,但同时也越难达到式(9)的条件.攻击节点数过大时,每个节点的带宽会很低,BT客户端会尽量优先选择传输速度快的上传节点.因此当攻击者的带宽有限、块内并行度不高时,攻击节点数的选择很关键.(5)污染带宽扩散系数.污染带宽系数越高,攻击效果越好.因此,块内并行度不高时,在保证恶意节点上传带宽满足下载节点的块选择策略时,可以通过技术手段降低恶意节点在每个分块的上传量,提高污染带宽扩散系数.(6)Leecher节点的带宽.由于大多数BT客户端在处理节点请求时都采用了基于Tit-for-Tat策略的激励机制,Leecher节点发到良性节点的下载请求有可能被拒绝,Legout[19]测量结果发现每个Leecher节点更多的是从和其自身带宽能力相近的节点处获得服务.攻击节点会尽量满足所有节点的请求,因此块污染攻击对于那些和大多数节点带宽能力和物理位置差距很大的节点会更有效.从以上分析可以看出,要从协议角度对抗假块污染攻击,一种方法是降低块内并行度,让节点尽量从一个下载源下载一个完整的分块,另一种方法是消除污染带宽扩散系数.本文所采用的方法是保持高的块内并行度,通过引入一个新的Hash校验值完全消除污染带宽的扩散,从而准确识别出错误数据片的位置,消除块污染攻击的威胁.3.3仿真实验前面通过一个简化的BT网络的随机模型从理论上分析了块污染攻击的攻击能力,为了验证前面得到的结论,本节通过仿真实验模拟了BT共享网络和块污染攻击,并对得到的结果进行了分析.模拟实验是基于NS2实现的仿真平台,在平台上根据标准BT协议实现了网络模拟.并通过inet工具生成了10000个节点,包括5000个叶子节点的随机拓扑图.选择文件的大小是300MB,分成256KB的分块,每个分块又分成16KB的分片,网络中有一个Tracker服务器,5个种子节点.种子节点保持一直在线,正常节点在下载完后就会下线,攻击节点当网络中第一个节点下载完成后开始攻击.以下是多组仿真结果.实验1.参数设置为节点到达率λ=0.2,节点带宽为200Kbps,攻击节点带宽200Kbps.分别对块内并行度ω=1,ω=3和ω=16时调整攻击节点数,得到每100s的完成节点数.实验结果如图1~图3.Page6由于攻击节点带宽能够满足式(9),所以块污染攻击的效果都接近理论上限.单位时间节点完成数随攻击节点的增加而减少.ω=1的情况下,当攻击节点数和网络内节点总数相当时,攻击效果不明显;而当攻击节点数为超过网络内节点数的2倍时,单位时间节点完成数会大量减少.但是随着新的节点不断加入网络,网络内正常节点总数不断增加,攻击节点攻击能力开始下降.由实验1,块内并行度会放大攻击节点的攻击能力,如图2,当块内并行度为3时,只需要600个攻击节点就几乎可以让网络内所有节点不能完成下载.而当块内并行度为16时(如图3),300个攻击节点就可以让网络内所有节点不能完成下载.采样节点受攻击的影响,下载速度大幅度下降,实验中的文件在没有攻击时,下载时间为1500s.当攻击节点数为300,同网络内节点总数相当时,可以达到2到3倍的延迟;当攻击节点数是网络内节点数的2倍时可以达到4到5倍的延迟,当攻击节点数为1000时可以达到7倍以上的延迟.接近式(7)的理论上限.由图4中曲线斜率的变化可以看出,攻击效果会随着网络内节点的增加有所下降.实验2.节点到达率λ=0.4,ω=1,节点带宽为200Kbps,保持攻击节点总带宽为60Mbps,攻击节点数为300、600以及1000时,记录一个采样节点每50s的下载完成量.实验结果如图5.实验2是在攻击节点的带宽能力有限时测得的攻击效果,当节点数为300时,攻击者的带宽还能满足式(9)的条件,攻击效果接近理论上限.当攻击节点数为600时,只在攻击的初期能满足式(9)的条件,随着网络内节点数的增加,攻击效果开始下降.而当节点数为1000时,由于不能满足式(9)的条件,攻击效果远远没有达到理论上限,甚至在开始阶段还不如600个攻击节点达到的效果.可见当攻击者攻击带宽不充足时,过度增加攻击节点数并不能达到理想效果.通过仿真实验可以验证块污染攻击对P2P共享网络的安全有着严重的威胁,攻击效果基本符合Page7随机模型中式(7)、式(8)的结论.为了充分验证块污染攻击的可行性和有效性,我们还在广域网中进行了攻击验证实验,通过使用了24台服务器,40Mbps左右的出口带宽进行攻击验证.实验表明采用降低块内并行度方法的比特彗星的客户端文件下载延迟可以达到7倍以上,增加攻击节点数可以增加延迟时间,最多可以达到30倍左右的延迟.没有采用降低块内并行度,只采用黑名单手段识别恶意节点的比特精灵客户端,攻击效果要更为明显,客户端在2个多小时里没有下载到任何数据广域网攻击验证结果都远远大于Dhungel等人[12]在黑盒分析测试得到的50%左右延迟效果.4块污染攻击的对抗方法当前大多数客户端对抗污染攻击的方法就是降低块内并行度并使用黑名单的方法,比如在广域网攻击验证中用到的比特精灵和比特彗星.但是通过实验可以看出这些方法对抗攻击的实际效果并不好.这是因为在下载过程中由于节点的频繁上下线,很难保证只从一个节点下载到完整的块,黑名单方法也很难定位到准确的攻击者.即便能够定位,攻击者也可以通过使用IP池,策略性的更换IP绕开黑名单.而文献[15-16]提出的方法在实际应用上,可行性不强,本文从协议角度分析块污染攻击的行为特点,提出了基于改进块校验协议的对抗方法,并通过仿真实验证明该方法可以基本上消除块污染攻击的威胁.4.1基于改进块校验协议的对抗方法块污染攻击能够成功的原因在于,数据的最小下载单位(片)和最小校验单位(块)不相等,通过块校验无法定位到错误分片.本文提出的SmartHash算法在不破坏原有协议的前提下,完善了校验过程,在种子文件中采用双Hash值,在传统的块Hash校验失败时,用新增加的Hash值对错误分片进行识别,保证下载节点能够准确定位到被破坏的分片位置,并选择能提供正确分片的节点下载,避免了不必要的带宽损失.SmartHash算法要求文件发布节点计算分块中每个分片的Hash值,构成分片Hash集合:PieceHashSet={Hash(piece1),Hash(piece2),…,Hash(piecec)},然后再通过Hash函数得到整个分片Hash集合的散列值SmartHash=Hash(〈PieceHashSet〉).在发布的种子文件中每个分块除了原有的块Hash外还要加入这个新的SmartHash值.算法描述如下.算法1.SmartHash块校验算法.输入:分块i的BlockHashi,SmartHashi输出:文件分块iBlocki//如果失败Blocki=Null1.为每个分片选择不同的下载源,构建分块i的源节2.Blocki=Null;3.分别向PeerSeti中的每个节点请求一个分片的数据;4.接收到的数据构成分片集合:5.IfHash(PieceDataSeti)=BlockHashithen6.Blocki=PieceDataSeti;7.else8.初始化数据修复源节点集RepairPeerSet=;9.构造接收到的数据分片的Hash值集合10.fork=1tocdo11.向peerk请求分块i的所有分片的Hash值集合12.ifHash(PieceHashSetik)=SmartHashithen13.RepairPeerSet=RepairPeerSet+peerk;14.获得正确片Hash集合RealPieceHashSet;15.else将peerk加入黑名单;16.endif17.endfor18.比较RevPieceHashSet和RealPieceHashSet得到19.向修复节点集RepairPeerSet请求FakePieceDataSet20.获得修复数据集合RepairPieceDataSet;21.PieceDataSeti=PieceDataSeti-FakePieceDataSet+22.IfHash(PieceDataSeti)=BlockHashthen23.Blocki=PieceDataSeti;24.elsegoto1;25.endif26.endif27.returnBlockiSmartHash算法在没有恶意攻击时不会有额外的处理,在节点请求过程中尽量达到最大的块内并行度,以便块污染发生时,保证块内有来自良性节Page8点的分片,从而确保能获得正确的PieceHashSet.下面通过仿真实验验证SmartHash算法的有效性.4.2SmartHash算法的仿真实验仿真实验采用3.3节的仿真环境,因为在无攻击的情况下SmashHash算法并没有额外处理,因此实验只研究在有污染攻击的环境下,同传统的BitTorrent协议的抗攻击性对比.仿真实验中共享文件的大小为100MB,种子节点为5个,节点到达率的泊松分布强度λ=0.4,所有节点带宽都为200Kbps,两组对比协议的块内并行度ω分别为1和16,攻击节点都为500个.实验从系统处于稳定状态开始,记录一个新加入的指定节点每10秒钟的下载完成量,实验结果如图6、图7所示.实验分别验证了没有黑名单的和有辅助黑名单的SmartHash算法对抗块污染攻击的能力.由图6给出的结论,没有使用黑名单的SmartHash算法下载时间不到990s,和理论下载时间相比延迟时间不到一倍.而在SmartHash算法的基础上加入辅助黑名单时下载时间只有不到560s,仅仅比理论下载时间延迟10%左右.而基于不同具体实现的传统BT协议,则受块污染攻击的影响很大.不加入任何防御机制,块污染攻击对完全随机选择每个分片的下载源的实现(ω=16)威胁最大,在模拟实验测试时间内用户只下载完成4.4%的数据.即便是采用了从一个节点下载分块中所有分片的策略(ω=1),在1000s内用户也只下载完成25.1%的数据.通过图7得到的整个网络所有节点的下载情况,可以看出使用SmartHash算法的两组数据节点完成率都在每百秒30个以上,在用户可以接受的时间内大多数节点都能完成下载.采用块内并行度为1下载策略一组数据,每百秒只有10个左右的下载完成节点,实验结束时有接近70%的节点不能完成下载.而块内并行度为16的BT下载网络,几乎没有节点能够完成下载.可见SmartHash算法对块污染攻击的对抗效果非常明显,攻击对结合黑名单的Smart-Hash算法作用非常小,即便是攻击者采用动态IP池等策略来屏蔽黑名单,SmartHash算法也能将下载延迟时间控制在1倍以内,使用户在可容忍的时间内完成下载.在额外消耗上,由于采用了双Hash值,使得种子文件增加了接近一倍的大小,但由于种子文件本身很小,对于当前网络条件下的用户来说完全可以接受.由于要向一个块内所有节点询问片Hash列表,如果Hash值为128位,最坏16个节点的情况下额外流量消耗为16×16×128/8=32KB,仅占污染数据的1/64左右,流量代价也可以接受.此外,基于SmartHash算法的对抗方法需要所有参与的客户端软件进行升级,推出新的版本,这对于客户端版本更新频繁的P2P软件而言,也是可行的.5结束语块污染攻击是针对BT等P2P共享系统在文件传输阶段实施的攻击方式,可以导致用户下载速度严重下降,直接影响BT系统的可用性,对BT系统的安全性造成了严重的威胁.本文通过系统的建模分析和仿真实验给出了块污染攻击的威胁所能达到的理论上限,并通过广域网实验分析了攻击的危害性.最后给出了对抗块污染攻击的有效方法,并验证了其有效性和可行性.进一步的工作可以引入信任评价以及节点协作等机制提高P2P系统的安全性.
