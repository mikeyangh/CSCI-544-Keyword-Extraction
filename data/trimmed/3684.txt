Page1Multi-Radio无线传感器网络中基于缓存和信道切换的数据查询算法的研究张艳卿李金宝郭龙江朱敬华(黑龙江大学计算机科学技术学院哈尔滨150080)(黑龙江省数据库与并行计算重点实验室哈尔滨150080)摘要针对Multi-RadioMulti-Channel传感器网络中链路服务质量和信道冲突等问题,提出并证明了基于缓存和信道切换的数据查询问题是一个NP完全问题.根据数据流守恒和链路-信道等约束条件,建立线性规划方程,得到该问题的最优解模型,并提出了一个多项式时间的近似算法———贪心新覆盖数据算法.该算法采用动态规划策略最小化缓存节点将单位数据包传输到查询节点所需要的路径时延,再贪心选择其具有最小路径时延的缓存节点,收集其新覆盖数据.理论分析和实验结果表明,提出的方案能有效地减少数据收集时延,提高数据查询效率.关键词Multi-RadioMulti-Channel网络;数据缓存;数据查询;信道切换;信道冲突1引言随着计算技术、无线通信技术和网络互联技术的发展,人们能够随时随地的访问、查询和处理网络中的数据信息.因此,在无线传感器网络中,数据查询和收集协议有广泛的应用价值,例如用于防御、环境监测、救灾抢险等众多领域中.通常情况下,无线传感器网络具有通信带宽有限、电池容量受限和频繁的断接等特点.这些特点对网络中数据查询和收集带来了很多困难和挑战,例如:增大能量消耗和传输时延,降低网络吞吐量等.如何在传输时延的条件限制下,高效地完成数据查询和收集一直是无线传感器网络研究的重点问题.然而,无线通信技术和集成电路技术的飞速发展,使得每个传感器节点可以装配多个Radio,每个Radio可以工作在不同正交信道上成为现实,如芬兰坦佩雷理工大学已经研制了具有4个Radio的节点.在Multi-RadioMulti-Channel网络中利用每个节点具有多个Radio,每个Radio具有多个可用的Channel这一特性,能够有效地减少冲突,实现多对节点无冲突并行收发数据,从而降低数据传输时延,增大网络吞吐量等.因此,针对Multi-RadioMulti-Channel网络的数据查询问题不但具有重要的理论意义,而且具有较强的实用价值.在Multi-RadioMulti-Channel网络的研究和部署中,一方面要考虑带宽有限和频繁断接等链路服务质量问题增加了网络中数据处理及查询的难度和能量消耗;另一方面要考虑信道分配是一个NP难问题,对网络中节点分配信道后,进行数据查询或收集时,可能会产生通信冲突,增大数据传输时延.为了解决Multi-RadioMulti-Channel传感器网络环境中链路频繁的断接问题,可采用数据缓存技术来提高数据访问性能,减少数据转发时延和能量消耗.该技术是将部分数据缓存在中间节点中,当查询到来时,只需到中间节点处查询并收集所需的全部或部分数据,有效地节省了中间节点至数据源节点的通信量、数据传输时延及能量消耗.而对于网络通信产生的信道冲突问题,可采用信道切换方法来减少冲突,减少数据重传次数,降低数据传输时延,提高网络吞吐量.本文针对Multi-RadioMulti-Channel传感器网络的特点,提出了基于缓存和信道切换的数据查询问题,并证明了该问题是一个NP完全问题.首先利用线性规划给出该问题的最优模型,然后提出了一个多项式时间的近似算法-贪心新覆盖数据算法.理论分析和实验结果表明,提出的方案能够充分利用缓存节点的数据,较好地完成数据查询工作,并采用信道切换方法有效地减少数据传输时延,提高查询效率.本文第2节介绍相关工作;第3节给出系统模型和问题定义;第4节利用线性规划得到该问题的最优解,并提出基于数据缓存和信道切换的数据查询的近似算法;第5节阐述实验及结果;第6节给出本文的结论与展望.2相关工作近年来,在无线传感器网络中,由于带宽有限、能量有限和频繁断接等特点,数据缓存技术[1]的思想已被用来解决查询和收集等数据处理方面的问题.文献[2]针对Ad-Hoc网络中数据访问问题,提出了灵活的组合和拉推(FCPP)算法.该算法中每个缓存的副本都与一个超时值相关联,具有有效的超时值的缓存副本可以直接提供缓存查询.该算法可以自适应地调整自己,满足不同用户指定的一致性要求.此外,它还节省了网络通信成本,减少了用户查询延迟.文献[3]针对无线多跳Ad-Hoc网络中数据访问效率问题,提出了启发式缓存节点配置算法,启发式规则根据跳延迟来对总体成本进行优化.实验结果表明,就平均请求延迟、缓存管理费用和查询成功率而言,该启发式算法实现了比其他算法更好的性能.由于查询处理在网络中的重要性,对于查询处理的研究已经取得了不少研究成果.文献[4]针对分布式传感器网络,提出了一种连续查询估计方案,该方案采用一种现存的订阅系统,通过用户订阅的部署和减少冗余订阅的方法来减少网络流量,使得用户可以订阅一系列感知属性,并可以处理连接查询的服务.但该方案并没有考虑网内最优的数据处理方法.文献[5]针对Adhoc网络中传输带宽有限的问题,提出了一种基于Top-k查询的消息处理方法以减少网络中的通信量,首先每个移动节点估计数据集中前k个数据,选择其中的一部分作为标准数据,然后当移动节点转发或查询消息时,根据标准数据来减少数据的传输.文献[6]针对无线网络中能量有限问题,在Top-k查询的基础上提出了剪枝(XP)技术.该算法首先建立一棵TAG树,然后通过比较Page3同步结点的代价和数据传输代价,选择最优的方式进行数据收集,有效地减少了能量消耗,但是XP技术在数据收集的过程中需要数据同步,增加了收集的时延.文献[7]针对WSNs中只能使用一种路由协议处理各种查询的现状,提出了一个动态路由协议转换方案,该方案可以使节点根据数据查询类型和网络密度信息转换到相应的路由协议,以提高查询处理的速度.但该协议计算网络密度的方法仅适用于节点分布均匀的情况,当节点分布不均匀时该方法误差较大.关于数据收集方面的问题,也得到了研究者越来越广泛的关注.文献[8]优化了移动用户的数据收集过程,其主要思想是利用空间相关性来有效地创建和更新数据收集树.当用户移动、更改访问网络中虚拟的sink节点时,数据收集树通过局部修改即可快速更新,从而为移动用户提供实时数据,有效地减少了通信传输时延和通信开销.文献[9]针对目前的一些MWSNs的数据收集协议的信息通信量等问题,提出了适用于一个移动sink和多个移动传感器节点的网络协议.该协议随机选择节点作为收集元,普通节点将数据发送给收集元,并转发给sink节点.该协议采用Bloomfilter进行数据压缩,以减少网络的信息负载.在收集元转发完数据后,立即转换成普通节点,以保证节点能量使用均衡.文献[10]提出了一个跨层式的数据收集机制,该机制的路由部分采用多路径最短路径路由算法,数据转发部分采用TDMA和CSMA的混合机制,但该机制只考虑了CSMA在sink处的能力有限,没有考虑到CSMA可能无法侦听到相同磁力的节点之间的冲突.文献[11]提出的多路径数据收集算法显著降低了通信延迟,并且算法的时间复杂度明显低于最优的单路径收集算法.文献[12]针对无线传感器网络中连续数据收集问题,提出了一个多路径调度算法来解决Single-RadioMulti-Channel网络中的SnapShot数据收集问题,同时还提出了一个解决连续数据收集问题的管道调度算法,该算法适用于Dual-RadioMulti-Channel网络.文献[13]针对Single-RadioMulti-Channel网络的特性,提出一种基于胖树结构的多信道协议TMCP,TMCP使用较少的正交信道实现了数据的并行传输.上述对数据的查询和收集算法很少采用数据缓存技术和信道切换方法.由于缓存部分数据可以减少网络中的通信量,减少数据收集时延,而且在Multi-RadioMulti-Channel网络中信道切换可以减少通信冲突,减少数据重传次数,减少数据传输时延,提高网络吞吐量,因而,本文针对Multi-RadioMulti-Channel传感器网络,引入缓存技术和信道切换来处理数据查询问题.3系统模型及问题定义本节给出Multi-RadioMulti-Channel传感器网络模型,定义了基于数据缓存技术和信道切换方法的数据查询问题,并证明了该问题是NP完全问题.3.1系统模型本文假设在Multi-RadioMulti-Channel传感器网络中,节点均匀分布在一个二维平面区域.把由N个Multi-Radio传感器节点构成的Multi-RadioMulti-Channel传感器网络定义成一个带权的无向图G(V,E),其中V={v|v是网络节点},E={l|l是链路(u,v),v,u∈V}.假设任意节点u配备R个Radio,且所有的Radio具有相同的通信半径RT和干扰半径RI,RTRI.网络中所用的正交信道集合为C={c1,c2,…,ck},|C|=K.节点u的任意两个不同Radio不能工作在相同信道上;每一个Radio具有切换信道能力,信道切换花费时间为SD(SwitchDelay).针对Multi-RadioMulti-Channel网络,定义d(u,v)为节点u和v之间的欧氏距离;变量x(uci)为x(uci)=1,节点u的第i个Radio在信道c上工作定义1.节点v的c信道可通信的邻居节点(NeighbourCommunicationNodes,NCN).网络中任意节点u,如果满足(1)d(u,v)RT;(2)设节点u有一个Radio工作在信道c上;(3)节点v有一个Radio也工作在信道c上,则u称为节点v的c信道可通信的邻居节点.节点v的c信道可通信的邻居节点集合为NCN(v,c)={ud(u,v)RT,x(uci)=1,x(vc定义2.节点v的c信道非邻居干扰节点(Non-neighbourInterferenceNodes,NIN).网络中任意节点w,如果满足(1)RT<d(w,v)RI;(2)设节点w有一个Radio工作在信道c上;(3)节点v有一个Radio也工作在信道c上,Page4x(vc则w称为节点v的c信道非邻居干扰节点.节点v的c信道非邻居干扰节点集合为NIN(v,c)={wRT<d(w,v)RI,x(wci)=1,定义3.节点u和v的c信道干扰节点(Inter-ferenceNodes,IN).节点u和v在信道c上进行数据传输时,如果在接收节点v的干扰半径内的任意节点w∈V,即d(w,v)RI,也在信道c上进行传输,则称节点w为节点u和v的c信道干扰节点.节点u和v的c信道干扰节点集合为IN(u,v,c)={wd(w,v)RI,x(wci)=1,IN(u,v,c)=NTN(v,c)\{u}∪NIN(v,c)(4)例1.如图1所示,由9个节点组成的3×3网格网络,该网络中每个节点有2个Radio,每个Radio可工作在3个信道上,通信半径RT为1,干扰半径RI为1.5.网络中相邻节点之间的距离为1,相邻节点之间的链路上的数字表示相邻节点通过该信道进行传输,即每个节点中有一个Radio工作在该信道上.由此可得,节点5的2信道可通信的邻居节点集合NCN(5,2)={2,4,8};节点5的2信道非邻居干扰节点集合NIN(5,2)={1,7};节点2和5的2信道干扰节点集合IN(2,5,2)={1,4,7,8}.节点4的3信道可通信的邻居节点集合NCN(4,3)={3,9};节点4的3信道非邻居干扰节点集合NIN(4,3)={2};节点3和4的3信道干扰节点集合IN(3,4,3)={2,9}.当任意两个节点u,w通过相同信道向节点v进行数据传输时会发生冲突,导致数据重传,所以对平均数据重传次数进行分析.假设节点间每次传输服从概率为psuccess的几何分布,每一个节点发送数据包数服从速率为λ的泊松分布.从节点u向v通过信道c能够成功传输数据,取决于在v干扰范围内通过信道c向v传输数据的节点个数,即节点u和v的c信道干扰节点数|IN(u,v,c)|.在CSMA\CA协议中,当发送节点向接收节点发送数据时,发送一个RTS帧,等待从接收节点发送的CTS帧,以确保该信道空闲.根据CSMA\CA协议,RTS和CTS之间的时间间隔小于短帧SIFS时间间隔.从发送节点到接收节点允许的最大时延是θ,往返时延就是2θ.设RTS是传输RTS帧所需时延,SIFS是传输SIFS帧所需时延,则总时延就是RTS+SIFS+2θ.节点u和v在信道c上通信的平均重传次数(AverageRetransmissionTimes,ART)是ARTc(u,v)=1节点u和v在信道c上通信的平均传输时延(AveragetransmissionDelay,ATD)是ATDc(u,v)=ARTc(u,v)·RTS+L其中,L为一个数据包的长度;B(lc(u,v))为节点u和v通过信道c进行通信时链路lc(u,v)的带宽.对于链路lc(u,v)∈E传输单位数据包所需要的最短时延(MinimumTransmissionDelay,MTD)是MTD(lc(u,v))=min{SD+ATDc(u,v),ATDc(u,v)}SD+ATDc(u,v)表示节点u和v原来在信道c上通信,后来切换到信道c上通信所需的数据传输时延,而信道c是|IN(u,v,c)|值最小的信道,即使得u和v通信时受到的冲突最小.信道切换能够降低数据重传次数,减少链路数据传输时延,但是频繁进行信道切换也花费大量的切换时延(SD),因而本文得到的最短传输时延权衡了信道切换时延和数据重传时延两者之间的平衡.信道切换进行数据传输后仍将信道切换到原来的信道,以此避免信道切换后网络拓扑变化太大.每一条链路lc(u,v)∈E都附加一个权值为MTD.3.2问题定义图2是由31个节点构成连通的Multi-RadioMulti-Channel网络拓扑图,其中节点分为查询节点、源节点、缓存节点和普通节点4类.查询节点负责发送查询消息和收集查询结果,如节点0查找数据D{1,2,3,4,5};源节点存储查询节点所需查找的全部数据信息,如节点29存储数据D{1,2,3,4,5};缓存节点是按某种缓存策略缓存部分或是全部所要查找的数据的节点,如节点5缓存数据D{1,2,3};普通节点负责数据的收集和转发,如节点1.如图2所示,当查询节点0查找数据D,将有很多选择来查找并收集数据D.例如直接从源节点29Page5收集数据D,也可以从缓存节点5和24收集数据D等等.但是,由于MR-MC网络中信道分配后进行数据传输时,容易发生通信冲突,数据重传次数增多,进而增加数据收集时延.所以如何在最小化数据传输时延的目标下,利用节点缓存的数据设计出一个有效查询方法,以此提高网络吞吐量,是本文的重点研究问题.假设在由n个节点构成的网络中,查询节点q查找数据D;源节点Ni存储数据D,定义SN为源节点集合,SN={SN1,SN2,…,SNsn},D(SNi)=D,0<i<sn+1;缓存节点CNi缓存数据D的部分数据,令其所缓存数据集合为D(CNi),定义CN为缓存节点集合,CN={CN1,CN2,…,CNcn},定义D(CN)为缓存节点缓存的数据信息集合,D(CN)={D(CN1),D(CN2),…,D(CNcn)},其中sncnn.定义4.基于缓存和信道切换的数据查询(DataQueryBasedonCacheandChannelSwitch,DQBCCS).在Multi-RadioMulti-Channel网络中查找数据D,而源节点存储数据D,中间缓存节点缓存D的部分数据,因此,在最小化数据传输时延的条件下,查询节点从若干缓存节点查询和收集所需查找的数据,当部分数据无法从缓存节点中获取时,则从源节点中查找并收集该部分数据,直到将所有的数据都收集到查询节点.那么DQSCCS问题就是寻找满足以下条件的节点集合Q:(1)QCN∪SN;(2)D=∪N∈QD(N);(3)Q是使得收集所有查询数据所需的传输时延最小的节点集合,其中利用式(7)的信道切换方法来计算单位数据传输时延.由定义可知,DQBCCS问题是一个最优化问题,将这一问题表述成判定问题,即是否存在满足条件(1)和(2),且查询并收集所有数据所需时延至多为T的节点集合Q.定理1.DQBCCS问题是NP完全问题.证明.首先证明DQBCCS问题属于NP.假设给定DQBCCS问题的一个查询集合QCN∪SN,验证算法检查∪N∈QD(N)是否为D,并且对每一个集合N∈Q中传输数据所需的时延求和,检查是否至多为T.当然,可以在多项式时间内完成这一过程.接下来通过将集合覆盖(SetCover,SC)问题归约到DQBCCS问题来证明DQBCCS问题是NP难度的.已知集合覆盖(SetCover,SC)问题定义如下:已知有穷集U和一个U的子集族S={S1,S2,…,Sk}以及费用函数c:S→Q+,查找S的最小费用子集族S,它能覆盖U的所有数据.现利用一个实例开始说明归约算法.设U=D,U的子集族S={S1,S2,…,Ssn+cn},Si=D(CNi),1icn,Sj=D(SNj),cn+1jsn,其中在集族S中可能有相同的两个元素,但这里假定这两个元素不同.费用函数c:S→Q+.由此将构造一个图G(V,E),使得查找到S的最小费用子集族S,它能够覆盖U的所有数据,当且仅当在G中存在一个使得收集所有数据所需的传输时延最小的节点集合Q.图G(V,E)构造如下,|V|=|S|+1,其中一个Si对应一个节点i,节点i中缓存的数据信息为Si,1i|S|,还包含一个节点0,即为查询节点q.每一个节点i与查询节点0之间有一条边相连,设c(Si)为边上的权值,即为从节点i查询并收集数据所需时延.根据集合覆盖实例可在多项式时间内计算出该图.最后证明这个变换是一个归约过程:SC问题中具有覆盖U的所有数据的最小费用子集族S,当且仅当在G中存在一个使得收集所有数据所需传输时延最小的节点集合Q.在SC问题中,解集族S加入一个集合Si,代价增加c(Si),即在DQBCCS问题中节点q查询并收集节点i中的部分数据Si,所需传输时延增加c(Si),则解集合Q中加入节点i.由此可得,SC问题的解可等价为DQSCCS问题的解.所以,DQSCCS问题是NP完全问题.证毕.4基于缓存的数据查询算法在Multi-RadioMulti-Channel网络中,DQB-CCS问题是一个NP完全问题,所以利用线性规划得到该问题的最优解.而线性规划适用于较小规模的网络,对此提出一个DQBCCS问题的近似算法,Page6在查询到所有数据的同时最大限度地减少数据传输时延,提高网络吞吐量.4.1基于线性规划的最优查询策略根据DQBCCS问题的定义来研究节点和链路应该满足的约束条件.(1)数据流守恒约束∪c∈C∪w∈NTN(v,c)f(vw→)-∪c∈C∪u∈NTN(v,c)f(uv→)=∪c∈C∪w∈NTN(v,c)f(vw→)-∪c∈C∪u∈NTN(v,c)f(uv→)=d(v)∪c∈C∪v∈NTN(q,c)f(vq→)=D其中,设f(uv→)表示节点u向v传输的数据包信息.由DQBCCS问题定义的条件(1)和(2)可得,网络中的普通节点满足数据流守恒,即普通节点v发送的总数据包等于进入v的数据包信息,因而可得到式(8);缓存节点和源节点中缓存部分或全部数据信息D(v),若查询节点从这些节点中收集数据为d(v),则缓存节点或源节点v发送的总数据包信息等于进入v的数据包信息与从节点v获得的数据包信息之和,即为式(9);而查询节点从缓存节点或源节点查询并收集所有的数据信息D,即进入到查询节点q的数据包信息是D,则可得出式(10).(2)链路-信道约束对于网络内的任意两个节点S和T,如果S和T可以进行数据传输,则S和T之间至少存在一条路径path,令PATH={path1,path2,…,pathn}为S-T所有路径集合,n>0.假设一条S-T的路径pathk经过的节点序列为v0,v1,…,vk,令S=v0,T=vk,lc(vi-1,vi)是路径pathk中的一条链路,x(vci-1h)=1,x(vcij)=1,i=1,2,…,k,h,j=1,2,…,R,c∈C.MTD(xq→)=min{∑lc根据DQBCCS问题定义的条件(3)可得,缓存节点利用式(7)计算每一条链路传输单位数据所需的时延,由此可得源节点x将单位数据传输到查询节点q的每一条路径所需传输时延,进而从这些路径所需时延中取最小值,即为节点x将单位数据传输到查询节点q所需的最小时延,因而可得到式(11).(3)其它约束由DQBCCS问题的定义可得,查询节点需从缓存节点或是源节点中查询并收集到的所有数据包信息为D,即为式(12).而从缓存节点或是源节点v中收集的数据包数为非负值,即可得式(13).综合以上各约束条件,可以得到基于线性规划的数据查询策略,具体描述如下:minT=∑x∈CN∪SNs.t.∪c∈C∪w∈NTN(v,c)f(vw→)-∪c∈C∪u∈NTN(v,c)f(uv→)=∪c∈C∪w∈NTN(v,c)f(vw→)-∪c∈C∪u∈NTN(v,c)f(uv→)=d(v)∪c∈C∪v∈NTN(q,c)f(vq→)=DMTD(xq→)=min∑lcx∈CN∪SN∪v∈CN∪SNd(v)=Dd(v)0,v∈CN∪SN(式(13))4.2基于缓存和信道切换的数据查询算法在Multi-RadioMulti-Channel网络上,利用线性规划可得到DQBCCS问题的最优解,但是只适用于小规模网络.下面将提出一个基于动态规划的多项式时间的近似算法———贪心新覆盖数据算法.利用动态规划得到任意两点之间传输单位数据包所需的最小时延(Unit_dataTransmissionDelay,UTD).UTD问题定义如下:已知:所有节点V,链路lc(u,v)∈E传输单位数求解:从节点S到T的路径L且其中,UTD问题具有优化子结构和子问题重叠性.定理2证明该问题具有优化子结构.定理2.设从节点S到T的最优路径为L(S,v1,v2,…,vn,T),若从节点S到T的路径中包含链路lc(S,v1),即L(S,v1,v2,…,vn,T)=L(v2,v3,…,vn,T)∪{lc(S,v1)},则L(v2,v3,…,vn,T)是(v2,v3,…,vn,T)的优化路径.证明.用反证法,假设L(v2,v3,…,vn,T)是(v2,v3,…,vn,T)的优化路径,则Page7MTD(L(S,v1,v2,…,vn,T)=MTD(L(v2,v3,…,vn,T))+MTD(lc(S,v1))MTD(L(v2,v3,…,vn,T))+MTD(lc(S,v1)),这与L(S,v1,v2,…,vn,T)是节点S到T的最优路径相矛盾,因此L(v2,v3,…,vn,T)是(v2,v3,…,vn,T)的优化路径成立.由图1可得图3,图3表明了从节点1~9最小传输时延问题.说明了UTD问题具有子问题重叠性.UTD问题具有优化子结构,递归地定义最优解的代价.设T[i,j]为节点vi向vj传输单位数据的最小时延.T[i,j]=0,烄烅minvk∈NTN(vi,c),c∈C{MTD(lc(vi,vk))+T[k,j]},i≠烆根据上述递归方程(15),可得到从节点S到T的最优传输路径,使得该路径的传输单位数据的时延最小.其算法描述如下.算法1.路径优化算法.Optimal-Search-path(V,S,T)输入:所有节点V,链路lc(u,v)∈E传输单位数据的最短输出:S到T的最优路径L,∑lc(u,v)∈L1.fori=1ton2.T[i,i]=0;3.forl=2ton4.fori=1ton-l+15.j=i+l-1;6.T[i,j]=;7.fork=itoj-18.forf=1to|C|9.ifvk∈nin(vi,cf)10.t=T[k,j]+MTD(lcf(vi,vk));11.ift<T[i,j]thenT[i,j]=t;12.returnT.下面分析算法1的时间复杂度.第3,4和7步的3层循环,每层至多n-1步,第8步的循环最多为信道个数|C|,而|C|n,因而时间复杂度为O(n3).在Multi-RadioMulti-Channel网络中,任意两点之间都可通过算法1得到传输单位数据需要最小时延的路径,在此基础上考虑基于数据缓存和信道切换的数据查询DQBCCS问题.定义5.新覆盖数据(NewCoverDataset,NCD).某次迭代开始时已被覆盖的数据为QD,而这次迭代选择收集缓存节点CNi中缓存的数据信息,缓存节点CNi中缓存的所有数据为D(CNi),则首次被覆盖的数据称为缓存节点CNi的新覆盖数据,表示如下例2.如图1所示,所要查询的数据为{1,2,3,4,5},假设已从缓存节点5收集数据{1,2,3},即QD={1,2,3},则在这次迭代中,如果选择收集缓存节点10中缓存的数据信息{1,3,5},则缓存节点10的新覆盖数据为{5};如果选择收集缓存节点24中缓存的数据信息{4,5},则缓存节点24的新覆盖数据为{4,5}.选择贪心新覆盖数据(GreedynewcoverData,GD)算法的主要思想是:定义QD为查询节点已经收集的数据集合,首先在Multi-RadioMulti-Channel网络中查询节点下发查询信息,即查找数据D,然后利用算法Optimal-Search-path(V,CNi,q)计算出网络中每一个缓存节点CNi和源节点SNi传输单位数据到查询节点q所需的最小时延T[i,q].采用贪心策略,选择T[i,q]最小的缓存节点或是源节点,将其新覆盖数据收集到查询节点,从而保证数据传输时延最小.重复上述过程,直到QD=D.其GD算法的描述如算法2所示.算法2.贪心新覆盖数据算法.输入:D,V,查询节点q,缓存节点CN,源节点SN,输出:Q1.fori=1to|CN|2.T[i,q]=Optimal-Search-path(V,CNi,q);3.fori=0to|SN|4.T[|CN|+i,q]=Optimal-Search-path(V,SNi,q);5.QD=;6.whileQD≠Ddo7.从CN和源节点SN中查找具有T[i,q]最小的8.q向CNi发送查询消息;9.CNi发送数据NCD(CNi)至q;Page810.对每一个d∈NCD(CNi),令unit_delay(d)=11.QD=QD∪NCD(CNi);12.Q=Q∪{CNi};13.endwhile14.returnQ.在算法2中,语句5~12循环的迭代次数最多为min(|D|,|CN|),而在循环体内语句1~2需要的时间为O(|CN|·n3),语句3~4需要的时间为O(|SN|·n3),|SN|,|CN|为常数,且|SN||CN|n,所以算法2所需时间复杂度为O(n3).在算法2中,语句7中Delay(CNi)是收集节点CNi的新覆盖数据NCD(CNi)所花费的总时延,即Delay(CNi)=T[i,q]·|NCD(CNi)|.定理3.GD算法是一个多项式时间的(ln|D|+1)-近似算法.证明.假设Q是由算法GD得到的集合,其所需的传输时延为DelayQ;Q是DQBCCS问题的最优解集合,Q所使用的传输时延为DelayQ.设CNi表示第i个被算法选中的缓存节点,CNi节点中新覆盖数据NCD(CNi)转发到查询节点q时,Q所需的传输时延增加Delay(CNi),则将之分配给该节点中首次被覆盖的数据.以unit_delay(d)表示d∈D,在d第一次被覆盖时,所需要的时延为|NCD(CNi)|可由式(16)得出,设DelayQ表示查询节点集合Q覆盖D后得到的总时延,即近似优化解,DelayQ=∑d∈DQ中的节点也依照算法GD的收集方法依次取入,于是有下面估计∑d∈CNx对CNx∈Q,令ui=|D(CNx)-D(CN1)∪D(CN2)∪…∪D(CNi)|表示算法选择CN1,CN2,…,CNi后节点CNx中未被覆盖的数据个数,令k是使uk=0的uk的第1个下标,使得CNx中每个数据都被CN1,CN2,…,CNi其中的一个覆盖,可知ui-1ui,且CNx中ui-1-ui个数据是首次被CNi所覆盖的.因而∑d∈CNx=∑k∑k∑k∑k=Delay(CNx)∑k令H(k)=∑k∑d∈DDelay(CNx)∑k=Delay(CNx)H(u0)=Delay(CNx)H(D(CNx))Delay(CNx)H(max{D(CNx),CNx∈CN})由式(18)和(20)可得DelayQ∑CNx∈Q∑d∈CNx对调和级数H(n),有对CNi,|D(CNi)||D|,故DelayQDelayQH(D)ln(D)+1(23)5实验与结果分析为了测试本文提出的基于线性规划的最优查询算法OPT和贪心数据覆盖算法GD的性能,将算法OPT、GD与DS(DirectedSource)进行比较.DS算Page9法是不考虑缓存节点中的数据信息,直接从源节点查询数据.通过实验得出结果并对其进行分析.其模拟实验环境设计如下:网格区域布置传感器节点,相邻节点间距离为1m.实验中网络规模大小默认为10m×10m,在5.4节测试网络规模大小变化对实验性能的影响时,测试了5组大小分别为10m×10m,20m×20m,30m×30m,40m×40m和50m×50m.在每次测试中,网络中最左下角的节点作为查询节点,最右上角的节点作为源节点,在其它节点中,随机选取网络中30%的节点作为缓存节点,测试查询节点从缓存节点或源节点中查询并收集所有数据所需的平均传输时延.其中,源节点存储100个数据包,缓存节点缓存1~20内的随机个数据包.如图4所示为10m×10m的网格区域内布置100个节点,最左下角黑色节点为查询节点,最右上角节点为源节点,其它节点中,浅色为缓存节点,剩余白色的为普通节点.本文采用LINGO9.0软件求解线性规划方程,使用C++实现模拟实验,实验中涉及的主要参数设置如表1所示.其它如RTS、SIFS和λ等实验参数取值,参见文献[14].本文实验中,评估OPT、GD和DS这3个算法的性能参数为测量查询所有数据所需查询处理时延,即算法完成查询并将所有数据转发给查询节点所需要的平均传输时延,并分别从缓存节点个数、节点缓存数据量、通信带宽和网络规模4个方面来分析对平均传输时延的影响.缓存节点缓存数据包数5.1缓存节点个数变化本组实验考查缓存节点个数的变化对Multi-RadioMulti-Channel网络性能的影响.图5(a)和图5(b)所示,OPT、GD和DS这3个算法分别在2R4C和1R1C网络中查询所有数据所需要的传输时延.图5(a)中3个算法比图5(b)中相对应的算法所需要的传输时延都少.因为在1R1C网络中信道冲突次数比在2R4C网络中多,数据重传次数增多,进而传输单位数据包的时延增大,查询所有数据所需要的时延增大.在图5(a)或图5(b)中,算法OPT和GD随着缓存节点个数的增加,所需时延呈递减趋势.因为缓存节点个数越多,随之查询节点到这些缓存节点传输单位数据包的所需时延较小的节点也在增加,所以查询所需时延也在减少.而算法DS与缓存节点个数无关,它是直接从源节点查询所需的所有数据,只与查询节点到源节点传输单位数据包所需时延有关,所以呈直线型.5.2节点缓存数据量变化本组实验考查Multi-RadioMulti-Channel网络中,缓存节点中存储数据包数的变化对网络性能的影响.从图6(a)中2R4C网络和图6(b)中1R1C网络可以看出DS算法呈直线型,因为DS是从源节点直接转发数据到查询节点,与其它节点Page10缓存多少数据没关系,只与查询节点到源节点的传输单位数据包所需时延有关.而算法GD和OPT随着节点缓存数据量增加,所需传输时延减少.算法GD是每次选择传输单位数据包所需时延最小的缓存节点,收集其新覆盖数据,节点缓存数据量增加,新覆盖数据也随着增加,进而查询所有数据所需时延减少.从纵坐标来看,在节点缓存数据量相同时,GD和OPT所需传输时延相差很小.同图5(a)和图5(b)一样,在图6(b)中1R1C网络中信道冲突比在图6(a)中2R4C网络中的冲突大,所以图6(b)中的算法比图6(a)中相对应的算法所需平均时延较大.5.3通信带宽变化需传输时延的影响.本组实验主要是通信带宽的变化对查询数据所如图7(a)中2R4C和图7(b)中1R1C所示,随着通信带宽的增大,GD、DS和OPT这3种算法查询数据时所需的传输时延呈递减趋势.因为随着通信带宽增大,传输单位数据包所需的时延减小,所以查询所有数据所需传输时延也减少.从纵坐标来看,算法GD、DS和OPT在相同的通信带宽下,OPT算法所需传输时延最小,而GD算法所需传输时延与OPT算法相差很小.图7(b)在1R1C网络中信道冲突大,所以比图7(a)在2R2C网络中相应算法所需时延较大.5.4网络规模本组实验考察网络规模对实验性能的影响.网络规模,即网络边长,10代表网络工作在10m×10m的网格中.OPT随着网络规模增大,变量数过多,用LINGO无法求解.如图所示,图8(b)中1R1C网络中算法查询所有数据所需要的查询时延比图8(a)中2R4C、2R3C网络中相对应算法所需时延相差很大,因为随着网络规模增大,在1R1C网络中信道冲突随之增大,进而所需平均传输时延也增大.图8(a)和图8(b)中分别看出,GD和DS两个算法随着网络规模的增大,所需的平均传输时延也增加.因为网络规模越大,信道冲突增大,而且缓存节点与查询节点之间的跳数随之也增多,进而所需要的传输时延也就会随之增加.其中DS算法所需传输时延增长最快,因为DS算法是查询节点直接从源节点查询并收集,随着网络规模的增大,查询节点到源节点之间的跳数比GD中查询节点到缓存节点之间的跳数增加速率快,所以所需时延增长快,GD算法所需时延增长速度缓慢.图8(a)中2R3C网络中比2R4C中相对应算法所需时延大,因为2R3C网络中信道冲突比2R4C的多,因而2R4C网络中算法所需时延较大.Page116结论与展望针对Multi-RadioMulti-Channel网络中链路服务质量和信道冲突等问题,提出了基于缓存和信道切换的数据查询问题,并证明了该问题是一个NP完全问题.其次为了最小化传输时延,提出了基于线性规划的最优数据查询的解决方案,随后设计了一个多项式时间的近似算法———贪心新覆盖数据算法,并证明了其近似比为ln|D|+1.实验结果表明,本文提出的算法可以有效地减少数据传输时延,提高查询效率.在实际的应用中,本文对传感器网络的搭建有一定的限制,需要节点均匀分布在某一区域中.因为网络中节点放置过于密集,节点间传输数据所需时延减小,进而查询节点直接从源节点获取数据与从缓存节点获取数据所需时延相差不大;而节点放置稀疏时,对于Multi-RadioMulti-Channel网络信道分配,通信半径和干扰半径设置等问题,可能会失去利用信道切换来减少数据传输时延的效果.因而本文没有考虑网络中节点放置密集和稀疏的情况.对此,后续工作将针对节点分布的情况,研究更加完善的数据查询算法来提高实验性能和效率.
