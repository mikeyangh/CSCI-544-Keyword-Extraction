Page1面向下一代互联网实验平台的新型报文处理模型———EasySwitch李韬孙志刚陈一骄贾春波苏琪郭腾飞(国防科学技术大学计算机学院长沙410073)摘要下一代互联网实验平台应能提供网络原型系统快速开发及部署能力,以有效支撑新型互联网体系结构关键技术的实现和验证.基于FPGA(FieldProgrammableGateArray)技术构建的网络实验平台可以提供较高的可编程性和性能,而它对硬件逻辑设计能力的要求则严重限制了平台的广泛应用.新型报文处理模型EasySwitch通过优化设计并预置通用报文交换及处理逻辑,有效实现用户定制报文处理逻辑与通用报文处理逻辑解耦;良定义的用户模块接口则使用户仅需关注业务特定逻辑实现,有效简化用户逻辑设计.理论分析表明,EasySwitch可通过提供确定性资源约束模型,有效支持FPGA资源的优化利用.此外,EasySwitch具有较低的报文调度处理延迟,对实验系统输入流量真实特性影响较小.EasySwitch模型在NetMagic平台的有效实现及应用表明该模型可为下一代互联网新型报文处理机制及协议的快速设计、开发和验证提供有力支撑.关键词报文处理模型;实验平台;报文交换;NetMagic平台;FPGA1引言在真实网络环境中进行实验并收集数据结果是下一代互联网创新技术研究最有效和最具说服力的手段.因此,下一代互联网体系结构研究[1]无论是采用渐进式演进路线(如中国下一代互联网示范工程CNGI)还是CleanSlate革命性路线(如美国国家科学基金会FIND项目)都强调网络实验平台在实现和验证新型网络协议和服务方面的关键地位.NSFGENI(GlobalEnvironmentsforNetworkInnova-tion)计划、EUFP7FIRE计划,以及日本的JGNX计划都试图通过构建大规模可编程实验床支持下一代互联网技术研究.以路由器为代表的网络设备作为支撑互联网运行的基础,是支撑下一代互联网实验平台构建的关键.为有效支持以软件定义网络、虚拟化、原语扩展等下一代互联网技术,支撑网络技术研究的实验平台必须提供可编程、可重构以及可重用特性,能有效支持网络技术快速开发与部署,降低验证测试成本,匹配新型互联网功能原语的时空演化特性.面向上述需求,出现了基于通用微处理器(纯软件)、网络处理器、图形处理单元GPU(GraphicsProcessingUnit)、ASIC(Application-SpecificInte-gratedCircut)以及FPGA(FieldProgrammableGateArray)等的网络实验平台.其中,FPGA技术由于具有可重构能力,可取得在性能和灵活性方面的良好折衷,目前受到广泛关注.作为采用FPGA技术的典型代表,NetFPGA平台[2]基于模块化可重用设计思想,提供清晰的接口及丰富的参考设计,广泛应用于网络教学和科研.然而,NetFPGA平台缺乏支持用户开发的优化报文处理模型,难以为用户逻辑功能的规划设计提供有效支撑.SwitchBlade[3]基于流水化思想,设计了一种可定制报文处理模型,能够有效支持新型网络协议和虚拟化技术.然而,为减少硬件综合时间,该模型预置了丰富的可配置流水线功能模块,占用硬件资源较多,限制了用户开发灵活性.基于FPGA技术的实验平台设计门槛较高,需要开发者具有一定硬件开发及设计经验,很多平台还需要用户提前规划实验方案的性能指标和硬件资源使用,从而阻碍了FPGA实验平台的广泛应用.面向下一代互联网技术的实验平台及相应模型应能够最大限度简化用户硬件逻辑开发,降低设计开发门槛.此外,针对FPGA硬件资源有限的特点还应提供确定性资源占用及性能评估模型,以指导和协助用户完成设计规划.针对上述需求,本文提出了一种面向下一代互联网实验平台的新型报文处理模型———EasySwitch.EasySwitch模型主要特点包括:(1)通过预置通用报文交换处理逻辑及良定义用户逻辑开发接口,实现用户业务逻辑与通用处理逻辑显式分离;虚拟化技术;(2)支持并行数据平面和资源隔离,支持网络(3)提供确定性模型指导硬件资源配置及性能优化,为用户逻辑规划和开发提供充分设计裕度.2相关工作随着下一代互联网研究的开展和深入,支撑实验床构建的网络设备平台体系结构和处理模型也逐渐引起关注.Click模块化路由器[4]支持以软件方式进行定制协议和报文转发操作的快速开发.而基于内核的报文转发很难实现线速处理性能.高性能软件路由器RouteBricks[5]基于商用多核处理器实现可获得较高报文转发性能,但可扩展性受限于连接网卡和CPU的PCI-E(PeripheralComponentInterconnectExpress)总线带宽.此外,采用RouteBricks开发的原型也很难移植到硬件上.PacketShader[6]利用GPU加速软件路由器报文处理过程,通过应用程序(库程序)控制硬件转发过程,可以达到每秒数百万报文的处理速度.然而,所采用的批处理方式会引入较高的报文处理延迟[3].Page3SuperchargedPlanetLab(SPP)[7]基于IntelIXP网络处理器实现报文数据平面处理,具有同时线速处理来自多个端口报文的能力.由于部署代价昂贵,目前仅适合在大规模交换中心中部署.PNIC[8]采用配备了IXP285516核网络处理器的NetronomeNFE-i8000构建,支持数据中心网络相关技术,可以灵活实现虚拟网卡、Openflow交换[9]及时钟同步等功能.基于网络处理器的方式可以获得较高的处理性能和编程灵活性.然而,编程开发与特定厂商平台相关,缺乏可移植性,限制了其数据平面功能的优化实现与重用.PLUG[10]提供了一个编程模型框架用于实现高性能报文查找芯片,可以获得高速报文处理能力,然而全定制芯片设计代价较高,开发周期较长.ServerSwitch[11]采用集成商用交换芯片方式实现报文定制处理,由服务器CPU负责报文控制平面和数据平面处理,可以有效实现数据中心网络多种组网方式所需的路由交换功能.然而商用交换芯片的可编程能力仍然局限于特定报文字段的匹配处理,难以有效支持新型网络协议的实现与验证.与基于ASIC的平台相比,基于FPGA的设计不仅可以提供功能可重构能力,还可以极大缩短开发和部署周期;相比基于软件的平台,在性能方面更具优势.例如,NetFPGA平台作为一款面向网络课程教学的评估卡,在教学科研中已得到十分广泛的应用.NetFPGA通过提供丰富的参考设计(如IPv4路由器、OpenFlow交换机等),以重用和修改移植等方式,为用户逻辑功能实现提供支持.然而,由于缺乏对用户逻辑和平台预置逻辑进行清晰划分的报文处理模型,用户逻辑开发受限于特定参考设计的复杂度和相似度,在一定程度上制约了网络实验原型系统的快速构建.基于FPGA实现的OpenFlow交换模型和SwitchBlade处理模型[3]都试图通过硬件提供丰富报文处理功能集合以增强新型网络技术的快速开发和部署能力.然而,互联网技术的演进性将导致预置报文处理功能集合不断膨胀,很难期望能够获得一个稳定的功能基底.此外,上述模型预置的通用报文处理逻辑较为复杂,与实验无关的特定功能逻辑占用较多FPGA硬件资源,难以为用户开发提供充足的可用资源.3EasySwitch处理模型EasySwitch处理模型面向可重构FPGA技术提出,试图通过预置优化的报文交换及处理功能,简化用户逻辑开发及调试工作,并通过定义简洁而清晰的接口,将用户业务逻辑与预置逻辑显式分离,使用户可以专注于业务逻辑开发,而不需了解其它外围模块的功能实现细节.与已有模型不同,EasySwitch处理模型充分考虑FPGA资源的有限性,仅试图通过预置网络设备(路由器、交换机等)基础、稳定的通用报文处理功能,即报文交换功能,将报文分类、查表匹配、深度报文检测等高级报文处理功能以可重用硬件模块构件方式提供给用户,供用户按需集成.除报文交换功能外,EasySwitch还基于聚类合并方法,预置了核心报文处理功能逻辑.基于对通用报文处理操作的归纳总结,通过编码形成报文处理规则集合.如图1所示,EasySwitch报文处理模型主要由三部分组成,即输入控制IC(InputControl)、输出控制OC(OutputControl)以及用户模块UM(UserModule).基本的报文交换功能由IC/OC中输入调度器IS(InputScheduler)和输出调度器OS(OutputScheduler)协同完成,而报文处理规则指定的报文处理操作则由OC通过对来自UM的处理规则信号解码完成.IC/OC是EasySwitch模型定义的预置处理逻辑,UM承载用户业务处理逻辑实现.用户模块接口UMS(UserModuleSocket)则显式定义了预置处理逻辑与用户自定义逻辑间的接口,用户逻辑的开发只需考虑满足UMS规范要求,无须关心预置逻辑的具体实现.为有效支持网络虚拟化技术,EasySwitch模型支持集成多个UM实现并行数据平面.通过为多个UM提供独立的处理和存储资源(如转发表),可以实现并行数据平面间的资源隔离.EasySwitch也允许多个UM间的资源共享,避免资源复制,以提高FPGA资源利用率.3.1输入/输出控制EasySwitch模型中的输入控制负责接收来自多个网络接口的报文,在完成校验后进行汇聚,并根据报文分类规则分派到一个或多个UM中处理,同一报文仅允许分派到一个UM.由于多时钟域设计Page4会加剧FPGA逻辑设计复杂度,EasySwitch模型要求各UM以及UMS运行在统一的时钟频率上.输出控制OC负责接收UM处理完成后的报文以及相应的处理规则,通过译码处理规则执行对该报文指定的处理操作(如截断、复制等),之后将报文发送到目标输出缓冲队列.EasySwitch模型中输入调度器IS采用连续工作模式(即若某输入缓冲队列中包含报文尾,调度器将调度输出该完整报文,保证输出链路不空闲),对输入缓冲队列IQ(InputQueue)进行调度.由于不能预先假定UM对IQ报文的处理策略,IS采用公平调度算法.可重用硬件模块库中也包含支持贪婪、加权轮转等其它调度算法的IS,可供用户选择集成.输出调度器OS主要负责响应并处理来自UM的报文处理请求,也可采用类似IS的连续工作模式和公平调度算法,以防止请求“饿死”.各UM也可以选择集成内部输出缓冲队列,基于灵活性考虑,其管理和配置由用户根据应用需求确定,EasySwitch模型不作规定.3.2用户模块UMEasySwitch模型可灵活支持多种UM开发模式.以单UM为例,包括旁路处理(bypass)模式、穿透处理(pass-through)模式以及混杂处理(promis-cuous)模式.(1)旁路处理模式.UM不修改报文内容,只根据报文中提取的关键字,通过查表等方式,决定报文的处理行为.通过在IC与OC间设置输入报文缓冲PB(PacketBuffer),到达的报文可在PB中缓存,OC在接收到UM的处理控制信息后,从PB中读取报文,并对其执行相应的处理.(2)穿透处理模式.IQ中报文全部进入UM,并在UM中缓存和处理.UM可以直接修改报文字段,进行如地址替换、TTL(TimeToLive)更新等操作.OC接收UM处理完成后的报文,并按照对应的规则对报文进行相应的转发控制操作.(3)混杂处理模式.UM不修改报文内容,到达的报文在PB中缓存,并根据输入报文信息构造产生新的报文.UM必须产生与原始输入报文和新产生报文一一对应的处理规则,并发送到输出控制,输出控制根据处理规则,选择PB或UM中对应报文完成指定转发控制操作.该模式不支持多UM实现.需要注意的是,为简化控制复杂度,EasySwitch模型要求多UM必须采用同一模式设计实现.3.3UMS接口UMS定义了用户模块UM与预置模块IC/OC间的接口,即UMS-I和UMS-O,所有满足UMS接口约束的UM都可无缝集成到EasySwitch模型.UMS-I为报文输入接口,是IC与UM间的通信接口,采用简单的报文FIFO(FirstInFirstOut)接口定义.UMS-I接口包括带内数据和带外信息两部分.带内数据为完成校验处理的有效报文数据,数据宽度通常设为多个字节以提高报文处理流量,带外信息则包括编码后的报文头尾标识、输入接口号等.UMS-O为报文输出接口,是OC与UM间的通信接口,由报文数据接口和输出控制接口组成.报文数据接口定义与UMS-I接口类似,其中带内报文数据位宽与UMS-I相同,带外信息不包含报文输入接口号信息.输出控制接口用于传递UM对报文的决策结果,以报文处理规则形式定义,OC通过译码处理规则,确定报文的下一步处理动作.EasyS-witch模型定义并实现的报文处理规则由以下字段构成:(1)接口bitmap,用于选择接口集合中的一个(2)操作字段,指定处理动作即丢弃、转发或(3)报文截断长度;(4)保留字段.上述处理规则各字段通过相互组合可以覆盖按端口转发、多端口复制转发、丢弃、截断后单端口或多端口报文转发等多种报文转发处理操作,并通过设置保留字段可支持功能扩展.此外,输出处理规则还定义了报文规则绑定指示,用于选择从UM或PB接收报文.4资源及性能分析或多个接口输出报文;截断;对于基于FPGA的网络实验平台,由于用户硬件逻辑设计受FPGA片上资源、处理频率等多方面因素影响,在进行实验方案设计时,必须对方案的资源占用及性能指标进行评估.NetFPGA采用基于参考设计的开发方式,用户业务逻辑与预置逻辑间缺乏明显划分,无法有效评估预置逻辑对业务逻辑在资源和性能等方面的影响;SwitchBlade模型中预置处理逻辑则过于复杂,也难以提供精确的资源及性能分析评估模型.EasySwitch模型基于简洁的UMS接口,实现了用户逻辑与预置逻辑的清晰分离,可以提供确定性资源约束及性能评估模型.下面介绍面向接口数目及缓冲队列长度需求建立的EasySwitch资源约Page5束模型,并针对网络测量应用需求,评估EasyS-witch模型报文调度处理性能.表1列出了EasyS-witch模型资源及性能分析涉及的相关参数.简化起见,网络接口设为千兆以太网,内部数据通路(FIFO接口)位宽为128位,IS采用连续工作模式.N输入接口的数目B输入缓冲队列容量ViVoIS调度输出速率Ii(t)t时刻第i个输入缓冲CFPGA缓冲队列容量4.1资源约束模型接口EasySwitch模型中的预置逻辑在FPGA上实现必须满足以下约束:一方面,FPGA片上资源(尤其是存储资源)有限,EasySwitch模型中缓冲队列(即IQ/OQ)占用存储资源比例不应过大,影响用户逻辑开发自由度;另一方面,EasySwitch模型必须保证在报文处理过程中预置逻辑不能造成输入报文丢失,即输入缓冲队列不应出现溢出,这要求输入缓冲队列必须有充足的缓冲存储资源①.上述约束模型RS可以形式化为其中,式(1)反映了FPGA存储资源约束,式(2)则用于保证输入缓冲队列在公平调度情况下不会出现溢出,相关证明参见附录中定理1.以EasySwitch处理模型在NetMagic-24②和NetFPGA网络实验平台的实现为例,假设允许输入缓冲队列最多占用40%存储资源.NetMagic-24平台FPGA存储容量约为8×106bits(CNetMagic=3.2×106bits),数据通路位宽Bd为128位;NetFPGA平台FPGA存储容量约为4.9×106bits(CNetFPGA=1.96×106bits),数据通路位宽Bd为64位.在上述条件下,图2和图3分别给出了NetMagic-24及NetFPGA平台在不同IS处理频率下,接口数目N与输入缓冲队列容量B间的约束关系.由图可知,数据通路(调度器)处理频率越高,可支持的接口数目越多.如图2所示,NetMagic平台下,处理频率为75MHz时,最多可支持10个千兆接口;100MHz时,则最多可支持14个千兆接口.经过综合仿真,EasySwitch处理模型在NetMagic-24平台最高数据通路时钟频率fmax可达169.43MHz,考虑到用户业务逻辑的嵌入可能会导致综合后fmax的下降,为保留设计裕度,其数据通路时钟频率f设定为125MHz.因此,由图2可知,在该频率下Net-Magic-24最多可支持16个千兆接口.由于NetFPGA平台数据通路时钟频率也设定在125MHz,由图3可知,若该平台采用EasySwitch处理模型,在该时钟频率下,最多可支持8个千兆接口;若时钟频率提高到150MHz,NetFPGA则最多可支持10个千兆接口.然而,NetFPGA实际仅集成了4个千兆接口.NetFPGA采取保守设计的主要原因在于采用参考路由器作为预置逻辑实现,功能复杂,资源占用较多,无法保证更多接口报文的线速处理.4.2报文调度性能基于EasySwitch处理模型的网络实验平台可以支持多种应用部署场景,不仅可作为报文流旁路处理设备,也具有部署在报文数据通路内处理的能力.后者是支持网络测量技术实现和验证极为重要的手段.对于测量精度要求较高的实验,EasySwitch模型可保证调度处理对输入报文流量特性的影响可①②Page6确定或可忽略.下面将具体分析EasySwitch处理模型报文调度性能.EasySwitch模型对报文p处理调度延迟E(p)可以分为两部分,即报文传输延迟以及排队调度延迟.其中,T(p)表示报文p进入UM处理前经过输入缓冲队列的传输延迟(即报文头进至尾进延迟),Q(p)表示报文p经过输入控制IC的排队调度延迟(即报文尾进至头出延迟).由于缓冲队列分布、数据通路位宽及处理频率在实现时已知,且报文p的长度l(p)可在接收时获得,因此T(p)可由式(4)计算获得.对于网络测量等应用场景,T(p)可以通过在UM中利用时间戳修正机制消除.在EasySwitch处理模型中,不可修正的性能误差主要由Q(p)构成.由附录1中定理2可知,报文p在N进1出的连续工作模式调度系统中,排队调度延迟Q(p)具有上限,即Q(p)<(N×L-l(p))/(f×Bd-(N-1)Vi)根据式(5),图4给出了在IS不同处理频率下,最大报文调度延迟与网络接口数目的关系.由图可知,相同接口数目下,调度器处理频率越高,报文调度处理延迟越低.对于特定处理频率,支持的输入接口数目不应超过某一特定值,否则报文调度延迟将急剧增长,以f=100MHz为例,支持接口数目N应小于12,以保证获得可接受的报文调度延迟.此外,对于延迟敏感的应用,可以通过提高处理频率及减少占用接口的方法降低EasySwitch模型调度延迟对系统延迟的影响,通常可以控制在100μs内.5模型实现与应用我们基于NetMagic平台对EasySwitch处理模型进行了实现和验证.如图5所示,NetMagic目前提供NetMagic-24和NetMagic-08两个版本.NetMagic-24采用部分可编程交换体系结构,将大容量FPGA(MagicFPGA)与商用交换芯片相结合,提供可编程性与性能的良好折中.24个千兆以太网接口中,16个由MagicFPGA(AlteraArriaIIGXEP2AGX125)控制,具有完全可编程能力.NetMagic-08是NetMagic-24的lite版本,采用低成本和小型化设计方案,基于AlteraArriaIIGXEP2AGX45FPGA提供共8个(4个光口4个电口)完全可编程千兆以太网接口.5.1基本结构如图6所示,MagicFPGA是NetMagic平台实现报文处理可重构的核心,EasySwitch处理模型在MagicFPGA中以预置方式实现,支持8或16个千兆以太网接口报文接收,并提供转发、截断、复制等EasySwitch定义的基本报文处理规则.此外,EasySwitch模块对平台集成的外部存储器(如Page7DDR、SRAM)以及高速XAUI接口等进行封装,为UM提供良定义访问接口以及仲裁机制,有效隔离各UM访问资源.用户仅需专注于UM业务逻辑,而不必考虑网络接口、数据缓冲、平台管理等其它外围逻辑的具体实现.UM与其它外围逻辑之间数据通路位宽为128bits,处理频率为125MHz.EasySwtich模型仅定义报文数据平面处理规范,NetMagic平台提供基于以太网的通用管理控制接口及协议,为控制平面处理功能实现提供兼容性和可移植性支持.用户可在任何带有以太网接口的主机或平台上,通过Socket编程,按照NetMagic访问控制(NetMagicAccesssandControl,NMAC)协议标准①,将管理控制命令封装成标准以太网报文,发送到NetMagic管理控制接口P0对平台进行管理和控制.MagicFPGA内部的管理模块负责基于NMAC协议与外部控制器建立连接,并对管理报文中封装的命令进行解析,转换为局部控制总线信号,完成对平台中EasySwitch等模块及存储器的初始化配置及管理控制.表2及表3给出了NetMagic-24平台中管理模块及全配置(接口数目N=16)EasySwitch模型的资源占用情况.资源名称查找表LUT寄存器存储器位资源名称查找表LUT5781寄存器存储器位表4给出了在支持4个千兆输入端口线速报文转发情况下,EasySwitch模型与NetFPGA参考路由器及SwitchBlade基本模型占用FPGA逻辑/存储资源情况.其中,NetFPGA及SwitchBlade相关数据来源于文献[3].由表可得,与其它模型相比,EasySwitch模型通过优化设计占用FPGA硬件资源(尤其是存储资源)较少,可为用户提供极大的设计裕度,有效减少用户逻辑开发的限制.资源名称NetFPGA查找表LUT23552378885672存储器位264499236986881800425.2应用实例在EasySwitch处理模型下,网络报文数据平面处理功能的定制工作基于硬件逻辑编程语言(如Verilog等)对UM实现.用户可以选择在UM中的自主实现报文定制处理功能,也可以选择通过修改、移植参考设计等方式加速逻辑设计工作.下面介绍基于EasySwitch处理模型在NetMagic平台上实现的多种新型报文处理机制和网络协议.5.2.1RLI延迟测量与评估RLI(参考延迟插值)延迟测量体系[12]是普渡大学在SIGCOMM2010上提出的一种流级精确延迟测量技术.RLI延迟测量体系可为互联网中微秒级低延迟应用提供有效监测手段,支持网络故障快速定位和排除.RLI通过在报文的发送端插入携带时间戳的参考报文,并在接收端计算参考报文的真实延迟,采用线性插值方法评估被测报文流的传输延迟.我们基于EasySwitch模型在NetMagic平台上实现了RLI延迟测量与评估功能.如图7所示,RLI延迟测量与评估系统采用Pass-Through模式实现,由参考报文产生UM和延迟评估UM构成.参考报文产生UM负责接收来自流量产生端(S)的待测报文,根据RLI算法完成参考报文自适应插入,将提取的待测报文及参考报文摘要信息(包括发送时间戳)封装后,通过UMS-O接口发送到OS调度输出.其中,待测报文及参考报文的目标端口为TX3(即待测设备输入端),而摘要报文的目标端口则为TX5(即性能监测端).延迟估计UM负责接收自待测设备返回的待测报文和参考报文,并根据当前时间戳计算参考报文真实延迟,最后封装待测及参考报文摘要信息(包括发送时间戳等)并发送.返回的待测报文通过OS发送到流量接收端(R),摘要报文发送到性能监测端(M),参考报文则被废弃.RLI延迟测量与评估系统仅使用2个输入端口,即N=2.根据式(2),输入缓冲队列IQ容量设①NMAC协议实现(NMACProtocolImplementation),Net-Page8为12800bits(队列长度为100)即可保证报文队列不溢出;由式(5)可得,对于任意以太网报文,Q(p)<1.568μs,可满足RLI延迟测量体系精度(10μs~100μs)要求.由于篇幅限制,详细内容参见文献[13].5.2.2其它应用我们与香港理工大学合作基于EasySwitch模型在NetMagic平台上实现了OneProbe网络测量机制[14]的硬件加速,相比传统基于软件的实现方式具有更高的性能和精确性.此外,针对支持流媒体高效传输的新型传输层协议Labelcast①的实现,则进一步验证了EasySwitch模型对新型网络协议实现和验证的有效支持,关于EasySwitch模型更多应用实例可参见NetMagic论坛②.5.2.3特点与优势EasySwitch模型在NetMagic平台的成功应用表明,EasySwitch模型具有结构简单、接口清晰以及资源占用少的实现特点,易于硬件实现.预置的IS/OS等调度器及接口逻辑,允许应用开发聚焦于用户逻辑UM实现,并可为多数据通路资源隔离提供支持.通过采用UMS接口将UM与预置逻辑解耦,可支持基于标准接口构建可重用硬件模块库.EasySwitch模型资源、性能等特征参数可以采用精确的数学模型表述,从而为高精度网络实验的规划及实现提供理论依据,将实验系统误差控制在可接受范围内,适用于网络测量等对网络设备性能及精度要求较高的网络实验场景.6总结面向下一代互联网技术创新实验需求,针对现有FPGA实验平台报文处理模型缺失、设计开发门槛高、硬件资源有限等问题,本文提出了一种新型报文处理模型EasySwitch.EasySwitch的设计基于严谨的科学分析和丰富的设计经验,在考虑FPGA资源约束情况下,通过优化设计预置逻辑,为用户逻辑开发提供一个稳定、开放、通用的接口UMS,允许用户专注于业务逻辑实现,减少设计开发工作量和周期.EasySwitch模型支持通过集成多个UM实现并行数据平面及资源隔离,从而为虚拟化技术提供实现基础.通过提供精确的资源约束模型和性能分析模型,EasySwitch可为网络实验系统设计规划提供科学指导和优化.目前,EasySwitch模型已成功应用于多种新型网络处理机制及协议的开发和验证.
