Page1一种障碍空间中不确定对象的连续最近邻查询方法李传文谷峪李芳芳于戈(东北大学信息科学与工程学院计算机软件与理论研究所沈阳110004)(医学影像计算教育部重点实验室(东北大学)沈阳110004)摘要近年来,基于位置的服务获得了越来越广泛的关注,其中最近邻查询是最常用的一种查询方式.测量手段的不准确性以及数据本身的性质导致不确定性在位置数据中普遍存在,这种不确定性会对最近邻查询结果产生影响.空间中障碍物的存在也给空间数据查询带来了挑战.文中研究存在障碍物的空间中不确定对象连续最近邻查询的处理方法,设计了一种剪枝策略大幅降低需要计算的不确定对象数目,并进一步提出了障碍空间中不确定对象最近邻查询安全区域的概念及安全区域生成算法.设计了安全区域的索引存储方法.实验结果表明,文章所提出的方法具有良好的效率和可扩展性.关键词最近邻;不确定;障碍空间;基于位置的服务1引言ices,LBS)获得了越来越多的关注,并越来越广泛地应用到生产生活当中.LBS以查询为基础,根据用户的当前位置信息为用户提供各种有用的信息,例近年来,基于位置的服务(LocationBasedServ-如,最近的自动提款机在哪,附近有哪些饭店等等.Page2LBS包括多种查询类型及处理方法,如最近邻、KNN、Skyline、反KNN等.在这些查询中,最近邻查询是最常用的一种查询方式.现已提出若干最近邻查询处理方法[1-4].这些方法大部分针对确定数据(即完整且精确的位置数据)并且全都假设空间中不存在障碍物(即任意两点之间可以直线连接).然而,在许多实际应用中还存在大量的不确定数据以及障碍物的情况.例如,卫星图像或GPS定位,由于设备本身的硬件条件限制或数据传输过程中产生的噪声都会使数据中的位置信息具有不确定性.而且,地面上移动的物体一般都会受到地理条件的限制(例如建筑、湖泊等),两物体之间的最短距离必须考虑障碍物的因素.本文提出障碍空间内不确定对象连续最近邻查询的处理方法.与精确对象不同,不确定对象的位置不是一个确定点,而是一个范围,在这个范围内该对象服从某种概率分布函数.在障碍空间中,两个点之间的距离由他们绕过障碍物的最短距离决定.例如一辆汽车在行驶的过程中不断地查询距离自己最近的加油站的位置.由于地图数据不精确以及GPS测量误差等因素,汽车自身的位置以及加油站的位置都不是绝对准确的,它们都归属于某个不确定区域.同时,由于自然地形或建筑物的阻挡,汽车和加油站之间的距离也不仅仅是它们之间的欧氏距离.文献[5]给出了两点之间障碍距离的计算方法.然而,当障碍空间中的对象为不确定对象时,现有的计算方法不再适用,这是因为两对不确定对象之间距离远近的比较结果不确定.本文对最近邻的概念进行了扩展,将最近邻查询的结果从某个确定的对象扩展到一个对象集合,其中包含所有可能成为最近邻的不确定对象.本文考虑不确定对象的概率分布,用不确定对象的分布半径作为参数,提出了一种处理方法计算最近邻可能对象的集合,并在该算法中设计了一种剪枝策略,通过不断更新剪枝条件,大幅减少需要计算的不确定对象数目.本文进一步提出了障碍空间中不确定对象最近邻查询安全区域的概念及安全区域生成算法.文献[6]提出了欧氏空间中确定对象的安全区域概念,所谓安全区域即空间中某些点的集合,这些点具有相同的最近邻查询(或其它LBS查询,如K近邻)结果集.当查询点在某个结果集的安全区域内移动时,不再需要重复查询,因而事先生成安全区域可以节省大量的实时计算开销.提出了一种基于四分树的索引方法对安全区域进行存储,该方法具有较优的查询性能.最近几年,对于不确定数据的研究工作取得了广泛的成果[7-8].在不确定数据查询领域,研究者已提出了多种类型的查询及其处理方法,如一般的关系查询、top-k查询、kNN查询、概率Skyline查询等.文献[9]提出了不确定Voronoi图的概念,文献[10-11]也针对特定的不确定查询提出了相应的方法.然而,据我们所知,目前尚无对障碍空间中的不确定数据进行有效最近邻查询的方法.目前对障碍空间数据查询的研究主要集中在可视kNN及反kNN查询[12-14](即只考虑直线可达而不考虑绕过障碍物的情况).文献[15]提出了障碍空间中连续kNN查询的解决方法.综上所述,对障碍空间中的不确定数据进行最近邻查询的研究具有现实意义和理论价值.本文研究的主要内容如下:(1)基于空间障碍物及不确定对象的数据模型,提出障碍空间中不确定对象最近邻查询问题.(2)设计一种高效的基于障碍空间距离的算法来进行查询处理.运用了一种剪枝技术来提高性能.(3)提出不确定对象分割区域的概念,并以之为基础设计一种有效的安全区域生成方法.(4)提出一种高效的索引方法,对安全区域进行存储.该方法比传统的R-tree索引方法需要的存储代价低并且查询速度较快.(5)通过实验考察并证实了本文提出的方法具有良好的效率和可扩展性.本文第2节介绍相关术语并给出数据模型和问题定义;第3节给出障碍空间中不确定对象最近邻查询的计算方法,提出对象分割区域的概念、安全区域生成算法以及索引存储方法;第4节给出实验结果和分析;第5节总结全文.2问题定义2.1数据模型本文考虑具有n个查询对象的集合P={p1,p2,…,pn},pi∈O2,…,On}以及一个不确定查询点q.集合P为查询对象集,其中其中障碍物具有确定的边界且相互不重叠,查询对象具有不确定性且都在障碍物之外.为描述方便,本文假定障碍物都是凸多边形(如果有障碍物为凹多边形,可将其分解为几个凸多边形的组合).查询点q及集合P中每个查询对象pi均具有一个“不确定区域”(Uq或Upi)以及对应的概率分布Page3函数(ProbabilityDistributionFunction,PDF).不确定区域包含该对象所有可能出现的位置,对象在该区域某点的概率由概率分布函数确定.不确定区域可以为任意形状,概率分布函数也可以是任意分布(如均匀分布、高斯分布等).若无特别说明,后文中不确定区域均是指圆形分布,定义p·心,rpi为Upi的半径,对不规则区域的讨论将在3.3节给出.令VIS(p)为点p·中任意一点与点p·域S=置的点pi,pj之间的最短距离d(pi,pj)为d(pi,pj)=定义1.障碍空间S=min∑m-1其中点xk,xk+1为任意两可见点,m为可见点总数,即直线段xkxk+1不与O中任何障碍物相交,|xk,xk+1|表示线段xkxk+1的长度.例1.图1示例了一个具有两个障碍物的空间,竖条阴影部分(△abc及△def)表示障碍物,点p1,p2,p3周围的圆形阴影表示不确定对象p1,p2,p3的不确定区域,q表示查询点.其中p1,p2圆心的最短距离由连线段p1c→cd→dp2组成(即图中黑色粗线段).这条连线段比其它所有连线段(如p1b→bd→dp2或p1c→cf→fe→ep2等)短.基于确定点之间最短距离的定义,本文提出障碍空间中不确定对象的最近邻查询如下定义.最近邻定义为一个集合N={n1,n2,…,nm},其满足定义2.查询点q在障碍空间S=(1)ni∈P(1m);(2)dmin(q,ni)>dmax(q,nj),j≠i,nj∈P.其中dmin(q,n)与dmax(q,n)分别代表点q与区域n之间的最短与最长距离.障碍空间中不确定对象的最近邻查询结果为一个集合,包含所有可能成为查询点最近邻的不确定对象.例2.对图1中查询点q求其最近邻,查询点q到查询对象p1,p2,p3的距离分别属于区间Rangeq,p1=[d(q·,p·rp1],Rangeq,p2=[d(q·,p·rq+rp2],Rangeq,p3=[d(q·,p·3)+rq+rp3].通过观察可知,两区间Rangeq,p1,p·Rangeq,p2存在交集且都小于Rangeq,p3,因此查询对象p1和p2都有可能成为查询点q的最近邻,p3不可能成为查询点q的最近邻,故查询结果为Pn={p1,p2}.2.2问题描述本文假设空间中查询对象和障碍物的信息保存在某种常用空间索引当中(如R-tree等),且不存在特殊的空间数据结构(如Voronoi图或k阶Voronoi图等).这是因为特殊的空间数据结构维护代价大,并且应用范围较窄.例如Voronoi图或k阶Voronoi图只适用于查询对象和障碍物固定情况下的最近邻或k近邻查询,当k变化或空间信息变化时这些数据结构的更新操作需要高昂的代价.障碍空间中不确定对象的最近邻查询与传统的最近邻查询主要区别在两点:首先,空间中两点之间的距离不是直线距离,而是绕过障碍物的最短距离;其次,两点间的最短距离不是一个确定的值,而是一个范围.基于上述特点,障碍空间中对不确定对象的最近邻查询可以分为3步:(1)找到可能成为查询点最近邻的所有可能结果的集合;(2)找到该集合的安全区域,所谓安全区域即与查询点有相同的查询结果的点的集合;(3)将查询结果和安全区域的信息返回给查询点.下节主要讨论不确定对象连续最近邻查询的前两步.3障碍空间中不确定对象最近邻查询3.1不确定对象最近邻查询本节假定查询点具有确定位置,查询点为不确定区域的情况将在3.3节讨论.下面提出计算距离某确定点最近的不确定对象集的算法,其中采用文献[15]提出的算法计算障碍空间中两确定点之间最短距离d(p1,p2).Page4算法1.不确定对象最近邻生成.输入:查询点q,查询对象集P输出:最近邻结果集Pn1.bound←,PS←,PU←P2.lmax←0,Pn←3.根据O构建可见图G(V,E)4.While(PU≠)5.pn←从PU中取出q欧氏距离最近邻6.If(d(pn,q)-rpn>bound)7.Return8.If(d(pn,q)-rpn<lmax)9.Pn←Pn+pn10.lmax←d(pn,q)-rpn11.RefreshCandidates(pn)12.PS←PS+pn,PU←PU-pn13.bound←min(bound,d(pn,q)+rpn)14.Return算法1的工作过程如下:首先构造区域S的可见图G(V,E),其中E包含O中障碍物的所有顶点及P中所有不确定对象的圆心,V包含E中所有顶点之间的可见线段.图1中示例了一个可见图G(V,E),其中E包括障碍物顶点a,b,c及不确定对象p·2,p·3等,V包括图中所有实线段(p2d,dc,fc等).p·集合PS,PU分别保存已查询点和未查询点,每次循环从PU当中选择一个离q欧氏距离最近的点pn.因为查询对象已经保存在某种空间索引中,所以选择点pn只需要很小的运行开销(例如,R-tree索引查找最近点pn需要的查询复杂度接近常数).算法1第8~10行检查是否将点pn加入到结果集Pn中.lmax保存结果集Pn的上界,如果pn到q的最小值大于lmax,则pn不可能是q的最近邻,否则pn属于结果集Pn.如果pn是结果之一,则需要更新lmax并且调用子算法RefreshCandidates将结果集中不满足条件的结果去掉.算法2.候选集刷新(RefreshCandidates).输入:新加入查询对象pn输出:最近邻结果集Pn1.max←d(pn,q)-rpn2.Foreach(p∈Pn)3.If(d(p,q)-rp>max)4.Pn←Pn-p为提高性能,算法1采用边界量bound对象的计算条件.第13行对bound赋值,第6、7行采用bound对查询对象进行剪枝.因为如果查询对象p1到查询点的最近距离比另一查询对象p2到查询点的最远距离还大,那么p1绝不可能成为查询点的最近邻,所以查询对象p1可以被安全剪枝.当PU未被剪枝掉的查询对象都被检查过之后,Pn包含的即是所有可能成为查询点最近邻的查询的集合.3.2最近邻查询结果的安全区域3.2.1不确定对象的区域分割首先,本文将欧氏空间中两点之间平分线的概念在障碍空间中进行推广,提出两不确定对象之间区域分割的概念.为Up1及Up2)将障碍空间S=域:Bp-1,p2、Bp1,p2及Bp-2,p1,其满足定义3.两不确定对象p1,p2(其不确定区域(1)Bp-1,p2∪Bp1,p2∪Bp-2,p1=S;(2)dmax(x,pi)<dmin(x,pj),x∈Bp-i,pj;(3)dmax(x,pi)>dmin(x,pj)例3.图2示例了障碍空间中两不确定对象p1和p2的分割区域.其中上方横线阴影部分为Bp-2,p1,该区域内所有点到不确定对象p2的距离肯定大于到不确定对象p1的距离.下方阴影部分为Bp-1,p2,该区域内所有点到不确定对象p1的距离肯定大于到不确定对象p2的距离.而中间未标阴影的部分为Bp1,p2,p1和p2都有可能成为距离该区域内的点最近的不确定对象.下面给出分割区域的部分性质及构造方法.首先考虑构造Bp-1,p2、Bp1,p2及Bp-2,p1的边界.由定义3知,x∈Bp-i,pj的条件为其中dmax和dmin分为代表两点之间的最大距离和最小距离.则式(1)可以表示为即Bp-i,pj和Bpi,pj之间的边界可以表示为lpi,pj={x|d(x,p·Page5以图2为例对定义3描述的分割区域的性质进行分析.基于lp1,p2与lp2,p1在构造方式上的对称性,只需对边lp1,p2的性质进行讨论.观察图2可知,边lp1,p2由一系列曲线构成,其中一部分位于点p·2共同的可见区域VIS(p·p·分则与点p·种情况分别进行讨论.(1)在点p·2)内,边lp1,p2可定义为VIS(p·lp1,p2∩VIS(p·{x|x,p·VIS(p·令点p·y2),并采用文献[9]提出的不确定对象之间距离的分析方法,令则式|x,p·其中α=(rpi+rpj)/2,β=|p·xθ=x-x1+x2()2cosθ+y-y1+y2()2sinθ;yθ=x1+x22-()xsinθ+y-y1+y2()2cosθ.式(6)指出,lp1,p2中满足式(4)的部分由双曲线1)∩VIS(D),因此b2b3由点D和点p·的一段构成.图2中VIS(p·b1b2所在的阴影区域,而曲线段b1b2则是lp1,p2满足式(6)的部分.(2)在点p·少一个点不可见),lp1,p2由那些在该位置可见的点v(v∈E)决定.例如,图2中曲线段b2b3位于VIS(p·曲线段b3b4位于VIS(B)∩VIS(D),因此b2b3由点D和点B决定.以b3b4为例,在VIS(B)∩VIS(D)中,边lp1,p2可定义为lp1,p2∩VIS(B)∩VIS(D)={x|x,B|+rp1-|p·VIS(B)∩VIS(D)对比式(7)和式(4)可知,式(7)也可转换为双曲线的形式,即将点B和点D的坐标分别记为(x1,y1)和(x2,y2),且将式(6)中α和β分别替换为2的非可见区域VIS(B)∩VIS(D)也是由双曲线p·构成.根据双曲线的性质知,点D和点B分别是该双曲线的两个焦点.定义4.作为双曲线焦点决定分割线部分曲线段形状的两点称为该曲线段的两个决定点.如图2中曲线段b3b4的决定点为点D和点B.综合上述讨论,得到两不确定对象p1,p2在障碍空间S=定理1.两相邻分割区域的分割边lpi,pj由一系列曲线段lpi,pj=c1一条曲线段都是某双曲线的一部分.证明.略(参考上文相关讨论).观察图2可知,组成每条分割边的曲线段是部分相邻的,即某些曲线段邻接在一起而与另外的曲线段之间被障碍物分隔.其中相邻的曲线段有如下性质.定理2.相邻曲线段ck同的决定点.令M为曲线段ck定点,Nk及Nk+1为二者各自的另一决定点,则式pi,pj∈VIS(Nk+1)与ck+1ck个成立.令未成立的决定点为Nk,则曲线段ckpi,pj之间的交点位于VIS(M)中VIS(Nk)的边ck+1界处.定点,设曲线段ckNk,2,Nk+1,1和Nk+1,2,则ckVIS(Nk,2),ck+1为曲线段ckVIS(Nk,2)与VIS(Nk+1,1)∩VIS(Nk+1,2)相交,这与Nk,1,Nk,2,Nk+1,1,Nk+1,2四点互异相矛盾.所以相邻线段ck证明.假设曲线段ck将式(8)代入式(6)可知,边lp1,p2在点p·假设式ck都成立,因为ck是隐含成立的.所以曲线段ckVIS(M)∩VIS(Nk)∩VIS(Nk+1).这显然是不可能的.都不成立,说明VIS(Nk)和VIS(Nk+1)恰好相切,且切线通过曲线段ck的前提条件相矛盾.假设式ckPage6算法3.分割边生成.输入:查询对象p1,p2,可见图G(V,E)输出:分割边lp1,p21.P1←p·2.While(P1≠)3.n1←min{p|d(p,p1),p∈P1}4.While(P2≠)5.n2←min{p|d(p,p2),p∈P2}6.If(VIS(n1)∩VIS(n2)≠)7.segn1,n2←根据式(6)及(8)计算双曲线方程8.lp1,p2←lp1,p2∪segn1,n29.P2←P2-n2+vis(n2)10.P1←P1-n1+vis(n1)例4.以图2为例说明定理1和定理2.两不确定对象p1和p2之间分割区域Bp-1,p2和Bp1,p2,一条分割边由曲线段b1b2,b2b3,b3b4,b5b6,b6b7和b7b8组成,它们的决定点分别为{p·d},{c,d},{c,e}和{p·点依次为p·VIS(b),b6b7∈VIS(d)以及b7b8∈VIS(c).基于定理1和定理2,给出障碍空间中两不确定对象之间分割边的生成算法.由于分割区域是由分割边直接产生的,所以该算法即是障碍空间中两不确定对象的分割区域的产生算法.算法3中P1和P2集合中分别保存了从p1方向和p2方向开始查找的点集,并将两集合中的元素按距离各自起始点由近到远的顺序依次配对.第6~8行中如果两点的可视区域有交集的话,则计算该区域内以两点为决定点(即双曲线焦点)的双曲线,并将其加入到边集中.每一组配对计算结束后,第9、10行分别对P1和P2集合进行刷新,将n2和n1查询对象从P1和P2集合中除去,并将它们的可见点加入到P1和P2集合中.其中vis(n)代表在点n·可见并且从未被加入到集合中的节点v(v∈E).3.2.2安全区域生成令q为查询点,查询对象集Pn为q的可能最近邻集,p为Pn中任意对象.通过观察图2知,任意查询对象p附近存在一个区域,在这个区域内p始终属于查询点q的可能最近邻集.定理3.在查询对象p附近存在一个区域,当查询点q处于该区域内时,p属于q的可能最近邻集Pn.该区域称为查询对象p的支配区域,记为Dom(p).证明.假设不存在该区域.令p为Pn中任意对象,当q无限接近p时,均存在d(p·,q)+rp<d(p·,q)-rp,因此p无限接近p.这意味着Pn中的所有对象都与p重合,显然这是不成立的.所以对任意p,必然存在区域Dom(p).证毕.算法4.支配区域生成.输入:查询对象p,查询对象集P,障碍区域S输出:支配区域Dom(p)1.Dom(p)←S,bound←2.Foreach(p∈P,p≠p)3.If(bound<d(p,p)-rp)4.Return5.生成p针对p的近分割边bp,p6.将Dom(p)中位于bp,p外的部分去掉7.bound←dp,p+rp对任意对象p,定理3指出的Dom(p)具有如Dom(p)={x|d(p·,x)-rp>d(p·,x)+rp}下性质即对Dom(p)中的任何一点x及P中其他任何对象p,点p·到x的距离的最大值小于p·到x距离的最小值.结合3.2.1节的讨论可知,Dom(p)的边界由对象p和其它对象之间的分割边构成.且该分割边为p与其它对象p每一对分割边中距离对象p较近的一条,下文将这种距离p较近的分割边称为p针对p的近分割边.Dom(p)生成算法中p针对其它对象的近分割边的计算需调用算法3.算法4中bound的作用与算法1作用相同,用于对不必要计算的对象进行剪枝.算法第5行对P中每个未被剪枝的对象调用算法3生成分割边并用该分割边对Dom(p)切割,逐渐逼近Dom(p)结果.当所有对p有作用的对象p都计算过后,Dom(p)取得最终结果.将查询点q的可能最近邻结果集Pn中每个对象p的支配区域Dom(p)取交集则Dom(P)即为查询点q的安全区域,q在此区域内运动时,其最近邻结果集Pn保持不变.3.2.3安全区域索引采用四分树的方式对安全区域进行索引保存.四分树每个内部结点都有4个子结点,每个内部结点将当前空间均等的分为4个区域.设Tθ为结点对应索引区域内安全区域所占面积比的阈值,即如果该索引区域内某安全区域所占面积比超过Tθ,即可近似认为该索引区域全部都是该安全区域.如果某区域包含的任何安全区域所占比例都小于Tθ,那么就把该区域继续均等的划分为4个区域,依此类推,Page7直到每个区域都包含一个所占比例大于Tθ的安全区域数为止.四分树每个叶子节点上都存储了该节点对应的安全区域的最近邻结果集.查询时只需根据查询点的位置到四分树进行遍历,即可以O(logn)的复杂度取得最近邻结果集.3.3不规则不确定区域及不确定查询点当查询对象p的不确定区域Up不规则时,可以通过构造圆形区域Cp,使其满足UpCp并且r(Cp)r(Cp),UpCp,其中r(Cp)代表圆Cp的半径.即Cp为包含不确定区域Up的最小圆形区域.在计算时,以Cp代替Up进行最近邻查询及安全区域生成.这种采用最小包含圆形区域替换的方法会对最终查询结果引入误差,即可能将本来没有可能成为查询点q最近邻的结果包括到结果集内.因此结果集Pn生成后需要对Pn中的结果采用真实不确定区域进行复查.以行驶的汽车为例,由于GPS定位误差,它作为查询点的位置是不精确的.当查询点q位置不确定时,设区域Uq为q的不确定区域.观察算法1知,该算法支持对不确定查询点的计算,即以区域Uq(Uq为圆形)或包含Uq的最小外接圆(Uq为其它非规则区域)的圆心q·和半径cq代入算法1,即可解出q的最近邻.在对不确定查询点q进行安全区域检测时,将与Uq存在重合部分的安全区域的最近邻结果集取并集,所得结果即为对不确定查询点q的最近邻结果集.综上,本文提出的障碍空间中不确定对象的最近邻查询方法可以应用到不规则不确定区域及不确定查询点的情况.4实验结果与分析实验主要考察提出方法的预处理性能和查询处理效率.实验运行环境为XeonE5580×2CPU、32GB内存和运行64位WindowsXP系统的HPZ800工作站.本文方法采用C++语言实现,VisualStudio2008编译(/GL,/O2优化).实验空间设定为20000×20000单位的平面.采用R-tree作为平面内不确定对象的存储结构.采用两个真实数据集Rivers和Lakes①作为障碍物集(见图3和图4).用R-treePortal提供的数据生成软件②生成不确定对象数据集,每个对象具有一个圆形不确定区域,并在该区域内服从高斯分布.这些对象采用均匀分布和Zipf分布两种形式分布在实验空间中,其中Zipf分布的斜相关系数设为α=0.85.查询点移动路径分为直线路径和随机路径两种.直线路径当查询点接触障碍物后按镜面反射角度继续直线前进;随机路径每前进50单位距离后随机变换前进方向.实验通过变化障碍物个数|O|(从数据集Rivers和Lakes中随机选择)、查询对象与障碍物比例|P|/|O|、不确定区域大小radius等变量,考察了提出方法的I/O代价、预处理(即生成安全区域)时间、运行时间、通信代价等.为保证实验结果的准确,每组实验令对象采用两种分布查询点和两种移动路径产生4种组合并取其平均值.图5给出了不同障碍物个数|O|的I/O代价的实验结果.I/O代价随障碍物个数|O|的增大逐渐增大,并且Quad-tree实现方式效率明显好于①②Page8R-tree实现.这是由于Quad-tree对点在区域内的检测方式优于R-tree.图6给出了不同障碍物个数|O|的查询时间的实验结果.与I/O代价类似,查询时间随障碍物个数|O|的增大逐渐增大,并且Quad-tree实现方式效率明显好于R-tree实现.图7给出了不同的对象障碍物比|P|/|O|的预处理时间的实验结果.查询时间随|P|/|O|的变化先减少后增加,这是因为当|P|相对较大时,安全区域划分就相对较小,安全区域个数相对较大,因此需要较长的计算时间.而当|O|较大时,安全区域的边界受障碍物的影响较大,因而计算边界的代价较大,因此也需要较长的计算时间.图8给出了不同的对象障碍物比|P|/|O|的查询通信代价的实验结果.查询通信代价随|P|/|O|的变化不明显,并且Lakes数据集的结果明显优于Rivers数据集的结果.这是由于Lakes数据集中障碍物的数量少于Rivers数据集,从而导致Lakes数据集中安全区域较大,查询点移动时穿过安全区域边界(需要与服务器通信)的次数较少.图9给出了不同不确定对象半径的预处理时间代价实验结果.预处理时间随着不确定对象的半径增长,预处理时间也不断增长.这是由于不确定对象半径增加造成对象之间可能长度的计算复杂程度增加,进而造成整体预处理时间的增长.Lakes数据集的结果明显优于Rivers数据集的结果,是因为对该数据集的处理数量明显小于后者.图10给出了不同不确定对象半径和通信代价实验结果.从图中可以看出,由于通信代价与不确定半径无关,不同半径对通信代价几乎没有影响.Page9图11给出了本文方法与传统的非基于安全区域的最近邻查询方法的执行时间对比.本文方法在执行时间上优于传统方法,并且在障碍物增多时远远优于传统方法.这是因为本文提出的方法节省了很多次查询操作,当查询点没有移出安全区域时,本文方法可以直接返回结果,而不需要与服务器通信.只有当查询点越过安全区域边界时,本文方法才需要向服务器请求新的查询.图12给出了本文方法与传统的非基于安全区域的最近邻查询方法的通信代价对比.本文方法在通信代价上远远优于传统方法,原因同上.5结论本文研究障碍空间中不确定对象连续最近邻查询的处理方法.基于空间障碍物及不确定对象的数据模型,形式化地提出障碍空间中不确定对象最近邻查询问题,并设计了一种高效的基于障碍空间距离的算法来进行查询处理,其中运用了一种剪枝技术来提高性能.本文提出了不确定对象分割区域的概念,并以之为基础设计一种有效的安全区域生成方法.实验结果表明,本文所提出的方法具有良好的效率和可扩展性.
