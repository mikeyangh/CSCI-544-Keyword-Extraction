Page1一种基于犽-核的社会网络影响最大化算法曹玖新1),2)董丹1),2)徐顺1),2)郑啸1),2),3)刘波1),2)罗军舟1),2)1)(计算机网络和信息集成教育部重点实验室(东南大学)南京211189)2)(东南大学计算机科学与工程学院南京211189)3)(安徽工业大学计算机学院安徽马鞍山243002)摘要社会网络中影响最大化问题是指在特定传播模型下,获取一个指定大小的节点集合,使得该集合在网络中的聚合影响力最大.针对贪心算法运用于大规模社会网络时存在效率低下且不可扩展的问题,文中提出基于核数层次特征和影响半径的启发式算法———核覆盖算法(CoreCoveringAlgorithm,CCA).该算法首先引入k-核概念,基于k-核分解求出每个节点的核数,然后根据核数分布的层次性,引入节点的影响半径参数,最后综合核数和度数两个属性,找出影响力节点集合.文中在两个数据集和两种传播模型上进行了实验,结果表明:(1)在传播概率较大的独立级联模型(IndependentCascadeModel,IC)下,CCA能取得比现有启发式算法更优的影响效果;(2)在三价(TRIVALENCYModel,TR)模型下,CCA的表现也同样优于其他启发式算法;(3)与其他启发式算法相比,CCA的运行时间更少.关键词社交网络;影响最大化;独立级联模型;k-核;社会计算1引言近年来,大规模在线社会网络(如FaceBook、Twitter和微博等)迅速发展.作为当前重要的传播媒介,社会网络在社会个体间信息传播、相互影响和思想引导方面发挥着重大作用.社会网络的流行,为大规模在线“病毒式营销”提供了机遇.其中一个关键问题是如何在大规模社会网络中挖掘一个较小的节点集合,使得该集合在社会网络的影响最大化,即影响最大化问题.Domingos和Richardson等人[1-2]首次把影响最大化问题定义为一个算法问题.为解决影响最大化问题,Kempe、Kleinberg和Tardos[3]提出一种贪心爬山算法,该算法的影响范围能近似达到最优解的63%.然而,贪心算法时间复杂度比较高,不适用于大规模在线社会网络.针对此问题,文献[4-5]对贪心爬山算法进行了优化,提出了CELF、NewGreedy以及MixedGreedy算法.实验证明上述算法在时间效率上有了数百倍的提高,然而在中等规模的网络(如15000个节点和31000条边)中选择50个节点在一台现代服务器上运行需要数小时.因此对于较大规模的网络(如500000条边)来说,改进的贪心算法仍然不能解决时间复杂度高这一问题.为了克服贪心算法的低效性,人们提出了多种启发式算法[5-11],其运行时间比贪心算法降低了多个数量级,然而这些算法在不同的社会网络和传播模型下影响范围不稳定,或与贪心算法相比,传播影响范围相对较小,因此研究影响范围接近贪心算法的高效启发式算法是本文的主要内容.针对上述问题,本文提出了一种基于核数的启发式算法CCA.实验结果表明CCA在传播概率较大的IC模型和TR模型下,影响范围明显优于其他启发式算法,且CCA的时间复杂度低于除Degree算法之外的其他启发式算法.本文第2节介绍现有解决影响最大化问题的相关工作;第3节介绍两种最常用的传播模型;第4节提出核覆盖算法CCA;第5节介绍本文的实验设计,包括实验数据集和对比算法;第6节验证本文提出的算法并对结果进行分析;第7节总结并探讨将来的研究工作.2相关工作Domingos和Richardson等人[1-2]首次把影响最大化作为一个算法问题引入到社会网络领域进行研究.Kempe、Kleinberg和Tardos[3]首次把影响最大化问题建模为在特定传播模型上寻找影响力最大的k个节点的离散优化问题,并证明在多种传播模型下,影响最大化问题是一个NP-hard问题.在此基础上,提出了性能近似达到最优解63%的贪心爬山算法,该算法每轮选择边际收益最大的节点,然而计算给定种子集合的影响范围是NP-hard问题,因此贪心算法运用多次Monte-Carlo模拟[12]获得近似的影响范围.然而Monte-Carlo模拟非常耗时,因此贪心算法不适用于大规模网络.为了改善原始爬山算法的低效性,Leskovec等人[4]提出了CELF算法,它利用影响传播函数的子模特性,延迟边际收益计算,与贪心爬山算法相比,其时间效率提高了数百倍.另外,Chen等人[5]提出了两种改进的贪心算法NewGreedy和MixedGreedy[5],进一步对传统贪心算法进行了优化.在独立级联模型下,NewGreedy以1-p的概率去掉原图中的每条边,从而得到一个更小的子图,然后在子图中考虑影响最大化问题.MixedGreedy第一轮采用NewGreedy,其余轮采用CELF,实验表明MixedGreedy的性能略优于NewGreedy.然而,上述改进的贪心算法的计算复杂度仍然非常高,不适用于大规模社会网络.针对贪心算法的低效性,近年来涌现出了大量启发式算法.Chen等人[5]在度的基础上提出了DegreeDiscount算法,该算法的思想是当一个节点v有邻居节点被选为种子节点时,在计算它的度时要打一定的折扣.它优于简单的Degree[13]算法.SCG算法[6]为避免选取度数最大的节点而产生邻居重叠现象,尽可能把这些种子节点分散.PageRank[14]是Google用于用来标识网页等级和重要性的一种方法,也应用在社会网络中寻找影响力节点.基于最短路径计算的SPM/SP1M[15]时间复杂度同样非常高.PMIA[7]算法是一种较好的启发式算法,该算法有稳定的影响范围并且运行速度比贪心算法提高了3个数量级.PMIA算法通过计算每个节点的本地树结构,加快影响传播的计算和更新.然而,PMIA算法需要耗费较大的内存.IRIE[11]算法被认为在运Page3行时间、耗费内存以及影响范围等三个方面综合排名第一的算法.该算法首先通过全局影响力排名算法(InfluenceRanking)计算每个节点的全局影响力排名,根据排名次序选择影响力节点.为避免节点影响力重叠问题,在选择一个种子节点之后,利用影响力评估算法(InfluenceEstimation)估计网络中剩余节点的影响力变化,再根据节点变化后的影响力更新节点影响力排名.如此循环往复直至找到k个影响力节点.在2010年《Nature》物理版上,Kitsak等人[16]通过实验表明在影响力传播方面,核数比度数和介数等节点属性具有更稳定的传播力,并且提出了基于覆盖的最大核算法和最大度算法.总之,启发式算法通常比贪心算法在时间性能方面能够提高数个数量级,却在不同的社会网络和传播模型下表现不稳定,或者与贪心算法相比,只能取得一个相对小的影响范围,这是因为启发式算法并没有考虑到传播模型的约束.贪心算法由传播模型出发,寻找当前能获得最大影响范围的节点.虽然贪心算法的传播效果非常好且稳定,但其时间复杂度非常高,并不适合大规模社会网络.3传播模型对于特定的社会网络,在网络中寻找影响力节点集,需要借助于相应的传播模型.社会网络通常表示成由n个节点和m条边组成的有向图G(V,E),其中节点表示个体,有向边表示个体之间的社会关系.独立级联模型(IndependentCascadeModel)[3,17]和线性阈值模型(LinearThresholdModel)[3,18]是两种最基本的传播模型.在这两种模型中,节点有活跃和不活跃两种状态.节点可以从不活跃状态转变成活跃状态,反之则不可.随着节点的活跃邻居数越来越多,节点也越倾向于活跃.3.1独立级联模型独立级联模型是一个概率模型.对于每条边〈u,v〉∈E,需指定一个影响概率puv∈[0,1],puv表示节点u通过边〈u,v〉影响节点v的概率.给定初始活跃节点集合A,传播过程以如下的方式进行:当不活跃节点u在时间步t变成活跃节点,那么u在时间步t有单次机会去激活当前每一个不活跃的邻居节点v,其激活成功概率为puv.不论u是否能成功激活v,在以后的时间步中u不再激活v.如果激活成功,则v在时间步t+1变成活跃节点.如果在时间步t,v有多个父节点变为活跃状态,则这些活跃的父节点以任意顺序尝试激活v,但所有的这些尝试都发生在时间步t.当不存在激活的可能时,传播过程结束.在简单的独立级联传播模型中,puv为一个系统常量.TRIVALENCY模型(简称TR模型)是IC模型的一个变型,图G(V,E)中每条边〈u,v〉的传播概率从集合{0.1,0.01,0.001}中随机选取,它们依次代表从高到低的传播影响力.3.2线性阈值模型任一节点v都有一个阈值θv∈[0,1],该阈值表示节点v受影响的难易程度,阈值越小,越容易受影响,即越容易被激活.在现实社会网络中,节点的阈值很难被度量,因此θv通常为一个随机值(一些情况下,指定为一个常量,如1/2),服从[0,1]均匀分布.w∈N(v)(N(v)表示v的邻居节点集),bv,w表示节点w对节点v的影响力,且满足邻居节点的影响力之和不超过1,即∑w∈N(v)bv,w1.给定初始种子节点集A,传播过程以如下的方式进行:在时间步t,一个不活跃的节点v受每一个活跃的邻居节点u的影响.如果节点v的活动邻居节点集AN(v)的影响力之和大于或等于θv,即∑u∈AN(v)bu,vθ.则v在时间步t+1变成活跃节点.当不存在激活的可能时,传播过程结束.线性阈值模型体现了影响力的累积效应.4基于核数的影响力最大化算法4.1犽-核(犽-core)k-核概念由Seidman[19]于1983年在论文“NetworkStructureandMinimumDegree”中提出,它可用来描述度分布所不能描述的网络特征,揭示源于系统特殊结构的结构性质和层次性质.给定网络G(V,E),其中V为节点集合,E为边集合.相关定义如下.定义1.k-核(k-core).集合CV的任一节点v的度数不少于k,由它所推导出的最大子图GC(C,E|C)称为k-核,即递归移去图中度数小于k的节点及与其连接的边后所得到的子图为图的k-核.定义2.核数(coreness).若节点v属于k-核,而不属于(k+1)-核,则节点v的核数为k.k-核的一个重要特征是它的连通性[20],若图的k-核为k-连通,那么k-核中的任意两个节点之间存在k条不相交的路径,这意味着核数越大的节点,其连通性就越好.4.2节点影响力重叠分析已有的影响最大化算法(如Degree、PageRank)Page4都没有考虑节点影响区域的重叠问题.给定一组相互连接的节点,它们都有很高的度数或者PageRank值,如果它们彼此的影响区域存在大部分重叠,那么一个节点所带来的影响范围和多个节点的影响范围相近,使得影响力难以得到有效的扩散,即后续部分种子节点选择所带来的边际效益非常少.如图1所示,节点u和v有着较大的重叠区域.贪心算法提供了一个较优的解决方案,但它选择一个种子节点需要进行大量计算,不适用于大规模社会网络.一个更好的解决方案是避免识别出的影响力节点在彼此的影响区域内.节点核数越大,节点间聚集程度就越高,因此简单地选择核数最大的k个节点并不能使传播信息得到有效的扩散,反而使得它们的影响范围产生大幅度重叠.结合节点核数分布的层次特征,本文引入覆盖距离参数d使得种子节点间保持一定距离,影响力能够在网络上得到扩散,能有效地克服影响重叠问题.核数的层次分布指的是从最高核开始,节点由高核到低核,由内层至外层分布,核数越高的节点,其网络分布越集中,也就越能受到彼此影响.4.3CCA算法核覆盖算法(CoreCoveringAlgorithm,CCA)的基本思想:若节点u被选为种子节点,则与u距离小于等于d(d为自定义参数)的所有节点标识为覆盖状态,被标记为覆盖状态的节点不能被选为种子节点,每轮选择核数最大或在核数相等的情况下选择度数最大且未被覆盖的节点作为种子节点.算法描述如算法1所示.在核数相同的情况下,本文兼顾了节点的度数,这使得节点有更多的机会去影响邻居节点.算法1.核覆盖算法.输入:社会网络G(V,E),种子节点个数k,覆盖距离d输出:选取的种子节点集合S算法描述:1.initializeS=;2.ComputeCores(G);3.FOREACHvertexv∈VDO4.COv=false;5.ENDFOR6.FORi=1tokDO7.w=argmaxv8.u=argmaxv9.S=S∪{u};10.FOREACHvertexvin{v|du,vd,v∈V}DO11.COv=true;12.ENDFOR13.ENDFOR14.RETURNS;其中Cv为节点v的核数,COv表示节点覆盖属性,若节点未被覆盖则为false,否则为true;du,v表示节点u和节点v的距离.算法第2行:根据网络图的核分解算法[21]计算每个节点的核数;第3~5行:设置每个节点的初始覆盖状态为未覆盖状态;第7~8行:所选节点为当前环境中核数为第一关键字,度数为第二关键字且未被覆盖的节点.在核数相等的情况下,度数最大的节点有更好的连通性和传播能力;第10~12行:根据覆盖距离d,以节点u为中心,标记与它距离小于等于d的所有节点为覆盖状态,这些所标记的节点可以理解为节点u的影响范围.假设社会网络G(V,E)有n个节点,m条边,CCA算法时间复杂度分析如下:第2行计算网络中节点核数的时间复杂度为O(m),第3~5行的时间复杂度为O(n),第7~8行选择目标节点的时间复杂度为O(n),第10~12行标记节点的d跳邻域的时间复杂度为O(m),则第6行到第13行的时间复杂度为O(km).因此算法的总时间复杂度为O(km).4.4CCA算法实例分析图2是一个简单有向图,以出度作为节点的度.通过k-核解析,易得到每个节点的核数,图中节点的核数从外至里依次递增,最外层和最里层节点的核数分别为0和3.从图中可以清晰地看出节点的核数分布呈现层次结构.假定k=3,d=1,在初始阶Page5段,每个节点都处于未被覆盖状态.第1轮:选取核数为3,出度为6的节点v12,并标记它及它的所有出边邻居集合{v5,v9,v10,v11,v13,v16}的节点为覆盖状态;第2轮,选择当前核数最大并且未被覆盖的节点v7,标记v7和v4为覆盖状态;第3轮,选择当前核数最大并未被覆盖的节点v8,标记v2和v8.当选择过程结束后,所选择的种子集S={v12,v7,v8}.5实验设计5.1数据集本文从社会网络中选择两个真实的作者合作网络数据集,网络中节点表示作者,边表示两个作者之间存在合作关系.NetPHY①[5]是预印本e-printarXiv②物理领域的论文全文列表,包括37154个节点,231584条边;DBLP③合作网络包括317080个节点,1049866条边.节点度的幂律分布是社会网络的一个重要规律,节点的核数同样也满足幂律分布,其中在NetPHY网络中核数分布的幂指数为1.5093;DBLP网络中核数分布的幂指数为2.3756.k-核解析与节点的度值有关,但节点的核数与度值之间并无明显的关系,度大的节点核数不一定高,核数高的节点度也不一定大.5.2对比算法和参数设置为验证本文所提算法的性能,将它们与当前最有代表性的算法进行比较.实验对比的算法及参数设置如表1所示.贪心爬山算法的时间复杂度较高,虽然后续算法对其进行了优化,使得时间效率提高了数百倍,但面对十万个节点的社会网络,仍需要数天的时间才能得到结果,因此所比较的算法中不包含贪心算法.相关研究表明,节点度数比介数和最短路径等节点属性或者网络属性更能表征节点的影响力,因此本文所对比的算法中包括Degree算法,而没有包含介数中心算法和距离中心算法.Chen等人提出的DegreeDiscount算法,较好地衡量了一个节点在当前邻域的影响力,并在多数实验中有可观的表现.Kitsak等人提出的基于覆盖的最大核算法(本文称之为MaxCoreCover)和最大度算法(本文称之为DegreeCover)具有较好的传播范围.目前很多重要的链接分析算法和社会网络中主题排序算法都是从PageRank算法基础中衍生出来的,如Topic-SensitivePageRank算法[22]和TwitterRank算法[23].PMIA算法是在独立级联模型中表现较好的启发式算法,它具备传播范围的稳定性和运行时间的快速性等特征.IRIE算法是迄今为止被认为在运行时间、消耗内存、传播范围等方面综合排名第一的启发式算法.算法Degree选取k个度最大的节点的启发式算法DegreeDiscount对种子节点的邻居节点进行度折扣的启发式MaxCoreCoverDegreeCoverPageRankGoogle用于用来标识网页等级/重要性的算PMIA基于本地树结构的启发式算法,其中theta设IRIE影响力排名和影响力评估相结合的启发式算法CCA(d)基于核数层次特征和影响半径的启发式算种子节点数k的取值范围从1到50,为便于阅读,算法是根据种子数为50时各算法的影响范围大小而排列的.影响最大化算法A和B在种子数为i时的差异定义为其中,σ(A,i)为算法A在种子数为i的影响传播范围.则影响最大化算法A和B的平均差异定义为Diffavg(A,B)=1在我们的实验分析中,所有影响范围的百分比差异指的是种子数从1到50时,两算法之间影响范围大小的平均差异,平均差异更能体现出算法之间的差异性.其中差异性的比较以CCA(1)为基准,即在式(2)中A为CCA(1).本文通过Monte-Carlo模拟10000次传播过程来获得一个较为精确的影响范围.为验证各算法的影响传播效果,本文在两个真实的社会网络数据集和两种传播模型上进行了实验.(1)IC模型.假定在IC模型下社会网络中的传播概率相同,在不同的传播概率(PP∈{0.01,0.02,…,0.05,0.06})下分析对比各算法的性能;(2)TR模型.网络中每条边〈u,v〉的传播概率从集合{0.1,0.01,0.001}随机选取,它们依次代表着从高到低的传播影响力.①②③Page6所有的实验在装有MicrosoftWindows2008系统的IBMSystemX3755M3上运行,其硬件配置为2.00GHzQuad-Core处理器、16GB内存.6结果分析社会网络的影响最大化算法的评价指标可概括为如下两点:(1)时间效率.如何用较短的时间找出初始种子节点集合;(2)影响效果.在此初始集合的影响下,使得社会网络中最终受影响的节点数最多.图3不同算法在NetPHY数据集和不同传播概率上的影响效果在传播影响图中,X轴表示种子节点数,Y轴表示在给定种子数的影响范围.6.1IC模型上的数据结果与分析6.1.1NetPHY数据集上算法性能分析NetPHY数据集是一个中等规模大小的网络,图3显示了在IC模型和NetPHY数据集上影响力算法的传播结果,由此可以清晰地看出CCA算法在传播概率大于0.01时优于其他启发式算法;并随着种子数k和传播概率的增大,算法之间效果的差异性越来越大,体现了CCA算法的有效性.Page7如表2所示,在传播概率为0.01时,PMIA的影响范围显著优于其他算法.当传播概率大于0.01时,在算法的传播范围方面,CCA(1)算法平均优于IRIE、PageRank、Degree、PMIA、DegreeDiscount、表2在NetPHY数据集上CCA(1)与其他算法影响范围的百分比差异9.4546.278.745.491.06传播概率CCA(2)/%PMIA/%IRIE/%DD/%DC/%MCC/%Degree/%PR/%0.0142.53-27.9579.56-13.01-7.7731.73-10.5159.640.020.03-1.150.04-1.2110.8973.8210.825.931.2813.0411.040.05-1.2310.1557.159.996.001.1811.369.860.06-1.17如图3所示,CCA(1)算法的性能始终优于Max-CoreCover,因此可以得出这样的结论:以核数作为第一关键字,度数作为第二关键字选择影响力节点的算法肯定优于只考虑核数这一节点属性的选择算法.当传播概率大于等于0.05时,其他启发式算法的影响范围(除CCA外)都基本上停止增长,即它们的曲线与X轴趋于平行,这表明传统的启发式算法都存在种子节点聚集现象,或者种子节点处于一个强连通图中.因此考虑选择的节点间的距离是必要的.而且从图3可以看出随着影响概率p的增大,CCA(2)的影响范围的增长速度快于CCA(1),由此可得出定性结论:当影响概率p较大时,选择的节点间距离d也应该较大.因此在特定的传播概率下表3不同算法的运行时间传播概率DegreeDDDCMCCPRPMIAIRIECCA(1)CCA(2)0.010.0060.03920.0070.0071.6180.9362.3650.0080.0140.020.0060.03900.0070.0071.6451.0132.3470.0080.0140.030.0060.03920.0070.0071.6201.0962.3440.0080.0140.040.0060.03930.0070.0071.6020.9092.3190.0080.0140.050.0060.03920.0070.0071.7620.9152.3090.0080.0140.060.0060.05950.0070.0071.63324.0422.1990.0080.0146.1.2DBLP数据集上算法性能分析DBLP数据集是有着百万边数的一个较大规模的网络,从图4的实验结果显示:当传播概率小于等于0.03时,PMIA、DegreeDiscount、DegreeCover、IRIE等算法影响范围要大于CCA算法;当传播概率属于[0.04,0.06]时,与PMIA、IRIE、DegreeCover、DegreeDiscount、PageRank和Degree等启发式算表4在DBLP数据集上CCA(1)与其他算法与影响范围的百分比差异传播概率CCA(2)/%PMIA/%IRIE/%DD/%DC/%MCC/%Degree/%PR/%0.018.71-27.96-29.82-28.11-16.4711.31-28.5318.240.020.030.04-0.360.05-0.530.06-0.301.11-2.830.29-4.964.723.112.682.650.641.072.012.121.851.220.401.631.371.371.130.17DegreeCover和MaxCoreCover算法77.26%、14.72%、12.54%、9.00%、8.84%、3.9%和2.36%.且在传播概率大于0.02时,CCA(1)的影响范围平均比CCA(2)低1.19%.如何通过定量关系合理选择节点间距离是一个值得探讨的问题.影响最大化问题可以归结为一个概率最大覆盖问题.我们希望选择那些影响力节点可以触发激活网络中的很大一部分节点而又尽可能的避免重叠激活.CCA启发式算法利用核数高的影响力节点又使它们保持一定的距离,从而减少重叠激活的可能性.算法在NetPHY数据集上的运行时间如表3所示,从表中可以看出CCA、Degree、DegreeDiscount、DegreeCover、MaxCoreCover算法运行时间都在1s以下,IRIE算法的运行时间在2.3s左右,PMIA算法在传播概率为0.06时上升为24s,并随着概率的增大,所耗内存也越大.法相比,CCA算法的表现效果更优.然而,我们可以发现:无论传播概率多大,CCA(1)算法的影响范围始终大于MaxCoreCover算法的影响范围.如表4所示,传播概率小于0.03时,PMIA、IRIE、DegreeDiscount、DegreeCover、Degree等算法的传播效果更好,随着传播概率的增大,CCA算法有更好的表现.Page8如图4(a)所示,Degree、DegreeDiscount、IRIE和PMIA的曲线之所以拟合在一起,是因为它们有着90%以上的公共种子节点.PageRank在种子数小于10时,种子节点集合的影响范围非常有限,导致其平均差异低于CCA算法.如图4(b)所示,Degree、图4不同算法在DBLP数据集和不同传播概率上的影响效果度数是节点的一个关键属性,当传播概率较小时,节点所能影响到的邻居深度有限,这时度越大,能够激活的节点也就越多;当传播概率较大时,由于节点影响所产生的重叠效果,使得节点集合的影响DegreeDiscount、IRIE和PMIA的影响范围仍处于领先.如图4(c)所示,CCA(1)在种子数小于20时,比其他算法有较小优势.如图4(d)~4(f)所示传播概率在[0.04,0.06]区间时,CCA具有比其他启发式算法更大的传播影响力.力无法得到有效地扩散,并随着种子节点数的增大,影响边际效益却降低.CCA算法较优的影响效果是由社会网络中节点核数分布的层次性和种子节点间有效的距离所致的.Page9算法在DBLP数据集上的运行时间如表5所示,从表中可以看出CCA、Degree、DegreeCover、MaxCoreCover和DegreeDiscount算法运行时间仍表5在DBLP数据集上不同算法的运行时间传播概率DegreeDDDCMCCPRPMIAIRIECCA(1)CCA(2)0.010.0340.2700.0550.06712.2724.66615.25100.0950.1020.020.0340.3060.0550.06711.9805.65814.56000.0950.1020.030.0340.2870.0550.06712.2244.65815.45230.0950.1020.040.0340.2890.0550.06711.1035.15714.96960.0950.1020.050.0340.2890.0550.06712.1924.46615.15130.0950.1020.060.0340.2400.0550.06711.161196.68514.96290.0950.102本文在这两个数据集上同样进行了传播概率在[0.07,0.10]区间时的实验,各算法的传播效果与传播概率为0.06时相比,影响传播效果相似.随着传播概率的增大,覆盖距离越大其影响力传播的越远,当覆盖距离d为3时,CCA(3)的传播效果略优于CCA(2).值得注意的是,距离并非越大越好,当覆盖距离d为4时,CCA(4)的表现并不理想,这是因为网络的直径有限,覆盖距离的增大使得后续所选择的节点可能处于核心区域之外,从而边图5TRIVALENCY模型CCA、Degree、DegreeCover和MaxCoreCover算法在TR模型下的运行时间和在IC模型下的运行时间相同,DegreeDiscount、PageRank、IRIE和PMIA的运行时间分别为0.82s、1.33s、2.26s和1.556s.除了简单的Degree算法之外,CCA的运行时间都低于其他算法,却取得较好的影响范围.如图5(b)所示,在种子数k小于20时,CCA(1)和CCA(2)比其他启发式算法有着更好的传播效果.而在种子数k大于20时,DegreeDiscount和DegreCover算法的效果比CCA好.CCA(2)接近CCA(1)的影响范围,两者之间只有0.59%的差异.都在1s以下,PageRank运行时间在12s左右,IRIE算法的运行时间在15s左右,PMIA算法在传播概率为0.06时上升为197s.际效益不高.6.2TR模型上数据结果与分析如图5(a)所示,CCA在NetPHY数据集和TR模型上表现很好.与其他启发式算法相比,CCA算法有显著的优势,Degree几乎没有增长,PageRank、IRIE和PMIA增长缓慢.CCA(1)的影响范围大幅度优于Degree、PageRank、PMIA和IRIE(22.37%、18.08%、18.17%和12.21%).同理,CCA、Degree、DegreeCover和MaxCore-Cover算法在DBLP数据集上的运行时间参照IC模型下的时间.DegreeDiscount、PageRank、IRIE和PMIA的运行时间分别为13.32s、16.2s和8.22s.7总结本文提出了一种基于核数的启发式算法来解决影响最大化问题.在TR模型和IC模型的不同概率下,与目前具有代表性的启发式算法进行了比较,实验结果表明:在较大传播概率下CCA算法Page10的传播范围优于其他启发式算法,且时间复杂度非常低,并随着种子节点数的增加,影响范围保持增长势头.将来的工作将在以下几个方面进行.首先,我们将考虑节点间影响概率的差异性,通过数据挖掘和机器学习等方法,推算个体之间准确的影响概率.其次,社会网络中存在社区结构,我们将研究社区结构这一特性对影响最大化问题的影响.致谢审稿专家和编辑对本文提出了宝贵的意见和建议,在此表示感谢!
