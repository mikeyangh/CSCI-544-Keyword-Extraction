Page1改进的基于屏幕空间环境遮挡邱祥松1),2)李泽癉2)吴志红1),2)时宏伟2)张严辞1),2)1)(四川大学计算机学院成都610065)2)(四川大学视觉合成图形图像技术国防重点学科实验室成都610065)摘要基于屏幕空间环境遮挡以牺牲计算精度与部分效果作为代价,换取场景的实时渲染.文中针对基于屏幕空间环境遮挡技术在采样方式、遮挡因子计算和平滑滤波3个方面的缺陷,提出相应的改进方法.采样方式方面,在三维空间构建平行于投影平面的圆盘,并根据其在屏幕的投影来计算采样范围,然后采用类似正态分布的方法结合随机纹理,对采样范围内的纹素采样;在遮挡因子计算方面,增加衰减系数,调整采样点对遮挡因子的贡献;最后,使用双边滤波来平滑图像,保持场景边缘,突出细节信息.关键词环境遮挡;屏幕空间;圆盘采样;双边滤波;光线跟踪1引言全局光照技术作为对真实光照的逼真模拟,目前被大量使用在电影特效等离线应用中.但由于其巨大的计算量,即使在目前图形处理器(GraphicsPage2时执行,因此被广泛的应用在游戏中[3-4].基于顶点的AO技术在模型表面顶点足够密的情况下,能够得到很好的效果,但这种方法却由于计算量巨大而只能用于离线渲染.为达到实时计算的目的,提出基于屏幕空间的环境遮挡技术(ScreenSpaceAmbientOcclusion,SSAO),对每个像素的邻域进行随机采样快速计算AO的近似值.由于SSAO使用较少采样点的方法,从而会引起渲染结果出现大量噪点[5],自遮挡误差[6],阴影效果不明显,且在计算精度不够时会丢失更多细节[7].当屏幕空间中相邻的采样点位置在实际视点空间中距离偏差较大时,将导致遮挡值计算出现误差.同时,SSAO只根据当前可见像素进行遮挡计算,在视点移动时容易出现帧闪烁现象.针对SSAO技术在采样方式,AO因子计算和图像平滑滤波等方面的缺陷,本文提出了相应的改进方法(ImprovedScreenSpaceAmbientOcclusion,ISSAO).本文的主要贡献:(1)根据视点坐标系中生成的圆盘在屏幕空间的投影来确定采样范围,并使用类似正态分布的方法来选取采样点的位置;(2)采用新型衰减表示函数,加入可控参数来计算当前点的遮挡因子;(3)采用改进的双边滤波处理噪点.2相关工作Zhukov等人[8]提出利用场景表面的可见点发射射线,判断与周围物体的相交情况,计算点与周围物体的遮挡关系模型.Landis[1]在Zhukov等人提出的模型基础上,改进遮挡的计算方式,称作AO,计算效率得到大幅提升.后来,Kontkanen等人[9]提出对每个遮挡物,提前计算一个空间区域,利用场景上点的相关信息,近似表示可见点被遮挡的比例,提升执行效率.Shanmugam等人[10]在AO思想的基础上,结合硬件加速的方法,将AO分解为高频的AO和低频的AO进行计算.NVIDIA公司根据AO的原理,预计算AO值,存储在三维网格之中并通过检索相应值使用[11].Crytex游戏公司最先提出SSAO理论[3]改进AO计算,只需计算可视区域场景的几何物体之间的位置遮挡关系.这种方法不仅适用于静态场景,更适用于各种动态场景,极大地提高AO计算的实时性.SSAO算法,将空间物体表面的可视点,映射到纹理中,采样计算AO因子.这样的算法虽然效率高,但是带来因采样较少而产生的噪点以及部分效果的丢失.在2008年,Bavoil等人[7]提出HBAO(Horizon-BasedAmbientOcclusion)算法,采用极坐标进行积分,利用空间夹角计算AO;紧接着又提出MDAO[12](Multi-LayerDual-ResolutionScreen-SpaceAmbientOcclusion)的想法,采用基于深度的多层采样和不同的分辨率纹理进行处理,增强渲染效果.最近,仍有大量学者针对AO进行改进.Reinbothe等人[13]提出HAO(HybridAmbientOcclusion),联系物体空间和屏幕空间计算AO,保留场景周围所有的物体信息,消除几何图形光栅化到Z缓存引起的问题.Mattausch等人[14]提出TSSAO(High-QualityScreen-SpaceAmbientOcclusionusingTemporalCoherence),使用帧相关性,复用上一帧结果进行累加,获取高质量的AO.Loos等人[6]提出VO(VolumetricObscurance)算法,利用平面线段或者面积采样代替点采样的方式,计算遮挡区域体积比例近似AO因子.在2011年,McGuire等人[5]提出基于Alchemy游戏引擎下的AlchemyAO(TheAlchemyScreen-SpaceAmbientObscuranceAlgorithm)算法,在AO因子计算公式中,引进可调控的参数因子,调整显示结果.3算法概述基于屏幕空间的AO算法通过在屏幕空间进行随机采样,并根据采样点的空间分布来估算AO因子.由于所有的计算都发生在屏幕空间,因此这类算法的执行效率非常高,但在计算的精度上,却难以和基于顶点的AO计算相比.同时,由于视点移动以及随机采样等因素,基于屏幕空间的AO算法往往需要使用平滑滤波的方式来消除采样较少或不足所产生的噪点.综上所述,基于屏幕空间的AO算法以牺牲部分渲染效果和精度的代价,来换取实时渲染.本文提出一种改进的基于屏幕空间的AO算法,通过如下3个方面对原有算法进行改进:(1)采样区域的计算和采样点选取:采样区域可能影响算法的效率和效果,例如,在改进的SSAO算法中,屏幕空间的采样区域选取不当,会导致即使采样点较多,却仍得不到准确效果的情况.为此,ISSAO使用视点空间下圆盘在屏幕空间下的投影Page3区域作为采样范围,增加采样像素的有效性.在采样点的选取方面,如果采用完全随机的采样方式,场景明暗不够明显,产生一些细节处的遮挡信息丢失.ISSAO使用类似正态分布的概率方法,结合随机纹理,得到场景明暗明显、细节处有良好保持的效果;(2)遮挡因子计算公式:在实验中发现,SSAO计算公式会计算并得到场景中距离较远物体之间的遮挡因子,甚至采样点被重复计算,不可避免地出现自遮挡、不连续等现象.ISSAO改进遮挡因子计算公式,采用新型的衰减表示函数,有效地消除多余边缘的计算,减少自遮挡和不连续现象的发生;(3)作为后置处理的去噪滤波:由于SSAO算法是在屏幕空间中采样,采样点不足会导致普遍存在的噪点.与以往SSAO的滤波不同,ISSAO使用可以有效保持边缘的改进型双边滤波,结合深度信息,得到较好的去噪效果.4算法实现4.1改进的采样方式为更准确地得到屏幕空间的采样区域,ISSAO针对屏幕空间中的像素p,以其在视点坐标系中的对应点P为圆心,作一个平行于屏幕空间、半径为R的圆盘,将其投影到屏幕空间,并以其投影所覆盖的像素区域作为p的采样区域.由于投影方式是透视投影,因此三维空间中的一个圆盘在屏幕空间上的投影为一个椭圆,椭圆相对于原始圆盘的形变程度根据投影角度的不同而不同.投影角度越大,形变越大.由于在椭圆区域内进行随机采样的计算量较大,在具体实现过程中,本文在屏幕空间上构造一个能刚好覆盖椭圆投影区域的半径为r的圆作为真正的采样区域.通过在三维空间中构造的圆盘来确定采样区域,使得距离视点更近的像素获得更大的采样区域,而减小距离视点较远的像素采样区域,使得最终生成的图像质量更高并保证渲染效率.在得到采样区域后,需要在采样区域中产生一些随机采样点来计算AO因子.以往的一些AO算法在采样区域内产生的采样点比较均匀,导致较多的噪点产生,引起场景的明暗程度不明显、细节大量丢失等问题.本文算法的采样点生成方式是基于如下事实,三维空间中距离P点较近的点对其遮挡贡献值较大,而较远点对其遮挡贡献值较小.这个事实体现在屏幕空间的采样,即在距离p较近的区域,应该生成更多的采样点;而在远离p的区域,只需生成较少数目的采样点.ISSAO使用类似正态分布的方法,结合随机纹理进行采样,计算采样偏移C(e1,e2),见式(1).C(e1,e2)=rmax×(e1×sin(2πe2),e2×cos(2πe1))其中,rmax为屏幕空间采样区域半径;e1和e2是有固定关系且均小于1的随机数值,通过读取随机纹理得到.在图1中,采样点的选取呈现出采样区域中,距离圆心p越近,选取的采样点越密集;距离越远,选取的采样点越稀疏的分布情况,很好地模拟了三维空间中遮挡贡献值的强弱分布.这样的采样点选取方法,有效利用p点较近区域的顶点,增大这些点对p点AO因子的贡献,增强场景明暗效果,实现对场景细节的良好保持.考虑到视点空间的P点距离视点越远,在屏幕空间投影的采样范围越小,在视图中的显示区域越小,会减少对最终渲染的场景整体效果影响;每个采样区域采样点数固定,区域过小有可能增加重复的采样.所以,采用根据深度值调整采样数的LOD(LevelOfDetail)层次度模型[15]类似方法,对距离视点较远的顶点减少采样次数,同时减少计算次数,提高渲染效率,增强场景真实度.4.2改进的AO因子计算与基于顶点的AO算法从每个顶点发出大量光线,通过求交计算来获得遮挡率不同,基于屏幕空间的AO算法只通过很少的采样点来估算遮挡,因此其计算公式应该更精确,否则会导致较大的误差.ISSAO在SSAO计算公式的基础上,增加衰减表示函数,抑制视点空间中距离P点较远的点对P点AO因子计算的影响,增强近点对P点的影响权重因子.Page4环境光照强度Ia的计算公式[16]为其中,I0是入射的环境光照强度;A0是遮挡因子,其计算公式可以表示为其中积分区域Ω是三维空间中P点的空间邻域,为简化计算,取以P点为中心、半径为R的球形空间Θ作为积分区域进行处理;狊为三维空间中的采样点到P点的归一化向量;狀为P点的单位法向量;D(狊)是AO贡献权重因子的计算函数.在计算AO因子的算法中,假设P点空间邻域的所有采样点都对P点的环境遮挡值有贡献.在Θ中,把视点空间中的圆盘投影到屏幕空间,对p点纹理邻域上的采样点,都认为可以用来计算AO因子,简化计算公式.但这样的计算方法,可能会增加一些原本不该影响AO因子计算的采样点.在图2中,三维空间中点T和W在纹理上的映射点离p点的距离是一样大小,但是在视点空间中离P点距离distanceT>distanceW.W点对AO因子的贡献值较大,而T点对AO因子的贡献值很小.如果不加区别的计算W和T的结果作为对P的遮挡贡献,可能会导致较大的误差.ISSAO通过引入一个衰减表示函数Q(p→狊)来解决这个问题,AO因子的计算公式更新为式(4).在Θ区域,采样点离P的距离distance<R,狏是P到遮挡点的向量,狀为P的单位法向量,Q(p→狊)是本文提出的衰减表示函数,如式(5)所示:其中φ(狏)是用户可控的场景明暗参数因子,控制场景明暗颜色分离,使深黑色保持,稍浅颜色变淡;μ是用于向量大小计算范围限定的常数因子.在计算AO因子的SSAO算法中,通过对狏进行归一化操作,提高采样点信息的利用率,却使得纹理上临近p的点,在视点空间下因距离P较远,得到的AO因子计算值比真实值偏大.另外,由于三维空间下的采样并不需要预先知道场景信息,P点可能与同一采样点多次进行遮挡因子计算,产生自遮挡、不连续等误差.结合式(4)和(5),并将积分离散化,最后可以得到ISSAO的AO因子计算式(6).其中,λ是用来增强遮挡处阴影效果的权重因子;ψ(z)根据三维空间P的深度z值,消除自遮挡阴影和不连续的参数因子;采用未归一化的狏计算点积,用以抑制采样点与P点距离过大时对遮挡值计算的影响;引入σ,用以控制当狏为0时,分母导致的不可预测结果,且根据场景的大小可以调整渲染效果;s为基于屏幕空间p点采样范围中的采样数目.在计算采样点的遮挡贡献值时,设置相关的与场景复杂度无关的可控制因子经验值,能够使整个场景的显示效果得到明显优化.4.3双边滤波去噪高斯滤波作为一种简单高效的滤波算法,被很多AO算法使用.但是,由于其对屏幕空间所有信息过滤,直接忽略边缘信息的保持.所以,ISSAO使用一个可保持边缘的改进型双边滤波作为算法的后置处理.双边滤波(BilateralFilter,BF)能够减少图像的噪点,是平滑图像并且保存边缘细节信息的非线性滤波技术[17].ISSAO采用三维空间中顶点的深度信息来计算得到双边滤波中的相似性因子,作为边缘保持的权重,结合AO值的高斯权重,作为去噪因子.AO的处理方式区别于像素差值形式的处理方式,能够更有效地得到真实的位置信息,再通过对边缘检测分割,减少不必要的点的计算,提高计算效率,并且得到一个既保存边缘信息又减少图像噪点的滤波效果.B(x)=1在式(7)中,f(ξ)是在x周围偏移ξ所取得的顶点遮挡信息,dp(ξ)是在x周围偏移ξ所取得的采样点的深度信息;k(x)是单位化因子,由g(ξ,x)和s(dp(ξ),dp(x))综合得到;g(ξ,x)是基于像素空间Page5σ(dp(ξ),dp(x))2σ()r距离的高斯权重,g(ξ,x)=e-1是用来计算点与点之间的距离系数,ξ-x用来表示两个顶点的水平距离;s(dp(ξ),dp(x))是基于深度信息的相似度权重,s(dp(ξ),dp(x))=e-1系数,σ(dp(ξ),dp(x))是计算f(ξ)和f(x)两点的深度差.B(x)因子的滤波处理,很好地解决场景因SSAO采样点较少所带来的噪点影响.5实验结果本文的硬件测试平台采用Intel(R)Core(TM)i3-2100CPU@3.10GHz处理器和NVIDIAGeForceGTS450图形显卡.通过对Dragon、Bunny、Hebe模型进行渲染,分别与改进的HBAO、SSAO、AlchemyAO进行效果对比,以及光线跟踪渲染的环境遮挡作为参照对比(详见图6);主要以Dragon模型进行效率测试,可以看到ISSAO算法与现有遮挡算法运行效率的对比结果.图3展示了ISSAO算法和HBAO算法同样选取12个采样点的结果对比,可以看出,ISSAO算法可以反映出更多的细节,能够产生更多细节的主要原因在于其采用了更好的采样方式,此处ISSAO参数选择R=1.75,φ(狏)=0.40,ψ(z)=0.022,λ=1.06,σ=0.00016.从采样区域来说,HBAO算法在确定采样区域时没有过多考虑像素p在三维空间中对应点到视点距离,而ISSAO是通过在三维空间中构造固定大小的圆盘,通过圆盘在屏幕空间的投影来确定采样半径.从采样方式来说,HBAO算法沿着某些随机方向进行采样,其最后生成的采样点仍然比较规整;而ISSAO算法的采样,通过采用类似正态分布规律的采样方法,距离p越近的区域,采样点越密集,而距离p越远采样点越稀疏,确保采样点的有效性.图4展示了在同样采用12个随机采样点的情况下,分别应用式(3)和(4)得到的渲染效果,此处ISSAO参数为R=1.05,φ(狏)=0.43,ψ(z)=0.014,λ=1.00,σ=0.00019.从图4中可以看出,采用引入衰减表示函数修正AO因子的计算公式后,得到成功消除模型自遮挡效果,减少局部区域周围不连续情况,减少渲染产生的噪点.ISSAO算法通过计算三维空间点的高斯模糊因子与基于深度对比的相似性因子,综合两因子得到双边滤波的计算因子,保持各边缘间的信息,对各个区域产生的噪点进行模糊处理,与AlchemyAO的滤波方式相比,去除噪点效果更明显,边缘信息保持完整.此处ISSAO参数为R=2.20,φ(狏)=0.55,ψ(z)=0.018,λ=1.00,σ=0.00015,如图5所示.图6为ISSAO与光线跟踪、对比算法的渲染效果详细对比,光线跟踪采用不同分辨率以及发射光线数渲染,对比算法选择模型的不同的结果.Page6表1展示了ISSAO与部分基于屏幕空间的AO算法的运行时间对比结果.为了公平地比较算法的效率,在不采用任何滤波和都采用双边滤波的情况下,进行算法的运行效率测试.从表中可以看出,ISSAO能够获得与其他主流SSAO算法类似的渲染效率.在具体实现过程中,采用如下方式来保证算法的渲染效率.Dragon(withBF)14.648.378.338.77Dragon(nofilter)10.974.544.675.10(1)采用early-z-culling技术,消除采样重复的点以及跳过空间R区域以外的采样点计算,减少不必要的计算时间;(2)通过进行屏幕空间的圆盘采样,直接操作纹理处理采样点,减少不必要信息的计算;(3)采用改进的双边滤波,通过深度信息计算保持边缘,从AO计算的中间结果直接获取深度信息,提高计算效率.6结论本文主要研究屏幕空间环境遮挡算法,改进采样方式,采用新型的遮挡因子计算公式和改进的双边滤波处理.采样半径选取上,根据视点坐标系中生成的圆盘在屏幕空间的投影来确定采样范围,提高采样点的有效性;使用类似正态分布的方法来选取采样点的位置,控制显示明暗;采用新型衰减表示函数,加入可控参数来计算当前点的遮挡因子,增强细节效果;针对SSAO方法采样带来的噪点,使用改进的双边滤波处理,得到平滑的效果;在运行效率方面,能够达到与HBAO和AlchemyAO同级的渲染效率.本文所提出的改进算法,依然存在一些未能完全改进的细节.采样方式上,依然不能完全还原细小区域的边缘信息;采样精度上,为保证效率,没有采用更高精度采样方法提高渲染精度;引进需要用户自己调试的相关控制因子,调整偏移值大小,较为繁琐,只能根据实验结果得到相应的经验值;在滤波方式上,也有可以提升和改进的地方.
