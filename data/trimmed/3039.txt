Page1基于改进的粒子群遗传算法的DNA编码序列优化崔光照1),2)李小广1)张勋才1),2)王延峰1),2)李翠玲1)1)(郑州轻工业学院电气信息工程学院郑州450002)2)(河南省信息化电气重点实验室郑州450002)摘要在DNA计算中,DNA编码序列的设计是影响DNA计算可靠性的重要手段.在不同的DNA序列设计中,应该选择适当的约束条件,并且根据相应的约束条件提出每个DNA应该相应满足的评估公式.文中从DNA编码设计应满足的多约束条件中选取适当的约束条件,提出评估公式,并采用改进的粒子群遗传算法来解决多目标优化问题.同时根据得到的序列与已有序列在综合适应度函数结果上进行对比,结果证明了该方法的有效性.关键词DNA计算;DNA编码;多目标优化;改进的粒子群遗传算法1引言美国加州大学的Adleman博士[1-2]利用现代分子生物技术提出7个顶点的哈密尔顿有向路问题的DNA分子生物算法,并且成功地在DNA溶液的试管中进行了实验,成为DNA计算发展的里程碑.总Page2首要问题.一个好的DNA编码序列就是能够确保随后进行的各种生化反应不出现任何错误,而且反应产物中包含有足够多的稳定可靠的能够被成功提取的原始问题的解.在实际的操作过程中,DNA编码设计就要通过序列优化尽量减少DNA计算过程中的错误杂交.错误杂交的类型可以分为两种[3-4]:第一是假阳性,也就是不完全互补的DNA分子在适当的条件下能够杂交形成双链分子;第二是假阴性,也就是完全互补的DNA分子在反应过程中由于种种原因而没有杂交.假阳性主要是由于杂交的两个DNA分子间的序列有足够的“相似度”而造成的;而假阴性则主要是由反应条件及生化操作本身的失误引起的.为了确保DNA计算结果的可靠性,就必须最大限度地降低错误杂交的可能性.因此我们利用各种约束条件来筛选序列,使之满足可靠的DNA计算的需要.已经提出的组合约束以及热力学约束有汉明距离约束、二级结构约束、连续性约束、解链温度、GC含量等.基于这些约束条件,Frutos等提出了模板编码方法[4],Feldkamp提出了一个设计DNA序列的DNA序列编译算法[5],Deaton提出了遗传算法来设计DNA序列[6-7].DNA编码问题实质上是满足多约束条件的多目标组合优化问题.文献[8]用基本遗传算法针对多个约束条件产生了较好的序列,其中约束条件是针对每代群体的所有个体所提出的.本文将改进的粒子群算法(MPSO)[9-10]与基本遗传算法(SGA)[8]相结合,提出了改进的粒子群遗传算法(MPSO/GA)来对DNA序列进行优化,同时提出了针对单个个体的约束条件评估公式.在遗传算法的基础上,结合改进的粒子群算法,产生出了与之前文献相比更好的DNA序列.2基本编码问题DNA编码问题是DNA计算中的核心问题,它创造性地将现实问题映射为特殊的编码DNA分子序列.这些DNA分子序列应能够确保随后进行的生化反应不出现任何错误,而且反应产物中须包含有足够多的、稳定可靠的、能被成功提取的原始问题的解.一个好的编码序列就是要最大限度地促进期望的杂交,同时限制不期望杂交的发生,综合平衡各个反应条件,从而为最后解的提取提供有力支持.概括来讲,DNA编码问题可以表述为:在DNA分子的4个碱基ΣDNA={A,G,C,T}上,存在一个长度为n的DNA分子的编码集合S,显然|S|=4n.求S的一个子集CS使得si,sj∈C满足τ(si,sj)k.其中K为正整数,τ是评价编码性质的准则,如汉明距离、GC含量等.接下来的问题就是要在寡核苷酸空间中找到合适的评价编码性质的准则τ以及确定各个DNA编码约束条件的复杂性.如前所述,DNA编码问题实质是多目标组合优化问题,也就是说编码要同时满足多个目标约束.这个问题将在第4节给出.3改进的粒子群遗传算法3.1基本遗传算法遗传算法是模拟达尔文生物进化论的自然选择和遗传学机理的生物进化过程的计算模型,是一种通过模拟自然进化过程搜索最优解的方法,它最初由美国Michigan大学Holland教授于1975年首先提出来的.遗传算法以决策变量的编码作为运算对象,而不需要待解决问题的具体领域信息,同时它也不受搜索空间是否连续或者可微的限制.遗传算法主要可以分为4个部分:初始状态的确立、适应度函数的制定、遗传操作的进行以及控制参数的选取.编码机制是遗传算法的基础.首先要创建一个随机的初始状态,即初始解,将这些解比喻为染色体或基因,该种群被称为第一代.接着对每一个解(染色体)指定一个合理的适应度值,根据问题求解的实际接近程度来指定.然后就是各种进化操作(选择、交叉和变异).在以上的各种操作过程中,控制参数的选取是不可忽略的因素,适当地选取可以使算法得到令人满意的结果.图1为基本遗传算法的流程图.Page33.2改进的粒子群优化算法粒子群算法自诞生以来就以其规则简单,易于编程实现成为处理多目标优化问题的重要工具.传统的粒子群算法是求解连续优化问题的有力工具,但是对于离散问题却无能为力.这里我们引入了四进制粒子群算法用于求解DNA编码这样的离散空间问题.(1)传统粒子群算法:传统粒子群算法是受鸟群觅食行为的启发而提出的,其基本思想是通过群体中个体之间的协作和信息共享来寻找最优解.该算法将每个个体看作是搜索空间中的一个没有体积的微粒,并且在搜索空间中从一个随机初始位置(xi)和随机初始速度(vi)飞行.每个粒子代表解空间的一个候选解,它们的飞行速度根据它本身的飞行经验和同伴的飞行经验来进行动态调整.每个粒子在飞行过程中所经历过的最好位置就是粒子本身找到的最优解,整个群体所经历过的最好位置就是整个群体目前所找到的最优解.每个粒子都通过上述两个极值(个体最优解和整体最优解)不断地更新自己,从而产生新一代群体.对于第t次迭代,粒子i将根据下面的公式来更新自己的位置和速度:vt+1id=w×vt烄c2×rand()×(pgd-xt烅xt+1id=xt烆其中rand()是均匀分布于(0,1)区间的随机数,c1,c2为学习因子,ω为惯性权值,pid为个体极值,pgd为群体极值.粒子在解空间中不断跟踪个体极值与全局极值进行搜索,直到达到规定的迭代次数或者满足规定的误差标准为止.(2)四进制粒子群算法:基于传统粒子群算法的不足,Kenndy和Eberhart在文献[11]提出了一种二进制离散型PSO算法[12]用于解决组合优化问题,在一定程度上完善发展了传统粒子群算法.这里我们对文献[11]进行了改进,在离散四进制空间中,粒子xid要趋向于判决选择为0,1,2和3,由参数vid决定一个概率选择阈值,如果偏高,粒子就会更可能选择为0,1;如果偏低,就更倾向于选择2,3.并且这个阈值位于[0,1]范围之内,这里引入sigmoid函数:S(vid)=1/(1+exp(-vid)),改进后的速度和位置更新公式如下:vt+1id=w×vt烄c2×rand()×(pgd-xt烅id=Mod((xtxt+1烆其中f(v)被定义如下:f(v)=(3)扰动策略的引入:经典的粒子群算法的粒子们在搜索过程中,总是追逐当前全局最优点和自己迄今搜索到的最优点,因此速度会很快降低到接近于0,容易陷入局部最优值.我们课题组的秦利敏等人在文献[10]引入了扰动策略:即如果迄今搜索到的全局最优适应值连续u步迭代没有更新,那么依概率r随机选择一定数量的粒子,重置它们的速度.u是自然数,称为设定的扰动因子,r为[0,1]上的一个随机数.扰动策略表示为其中tu表示最近一次更新搜索到的全局最优点适应值的迭代步.图2为改进的粒子群算法流程图.3.3改进的粒子群遗传算法(MPSO/GA)该算法是以基本遗传算法为基础,同时将改进的粒子群算法作为遗传算法的一个重要算子,具体算法步骤如下:1.设定参数,并随机产生初始种群;2.计算每个个体的适应度函数值,并且按照适应度函数值进行排序;3.判断是否满足目标条件(包括程序收敛以及达到指定的进化代数),如果满足,结束进程,输出结果;否则进行下一步;Page44.更新个体种群.根据适应度函数值的大小确定一部分个体直接进入下一代种群,剩余个体通过MPSO算法优化过后进入下一代种群;操作,转步2.5.对新一代种群执行遗传算法的复制、交叉和变异等该算法的流程图如图3所示.4算法约束条件通过很多的算法与文献,我们已经知道,越来越多的约束条件被用于评估DNA编码的好坏.例如GC含量约束、Tm值约束、连续性约束、二级结构约束、汉明距离约束、自由能约束等等.但是通过文献[13]我们可以知道并不需要把每个约束条件考虑在内.综合目前DNA计算中的主要组合约束,我们选取了以下几个方面作为评估项.(1)GC含量约束.GC含量就是碱基G和C在一个DNA分子序列里所占总碱基的比重.由于碱基G和C之间有3个氢键连接,而碱基A和T之间有两个氢键连接,所以GC含量对保持序列的化学性质的稳定性非常重要.一般要求GC(x)∈[40,60].其中GC(xi)表示序列xi的GC含量,GC(xi)difined表示所指定的GC含量,其计算公式如下:其中#G和#C分别表示序列x里面的碱基G和C的个数,|x|表示序列x里碱基总个数.(2)连续性约束.如果DNA序列里某一字母连续出现(比如出现“AAAA”或者“GGGG”,那么DNA结构就会变得不稳定.其中N(i)次数.(3)Hairpin约束.发卡结构可以引起DNA分子的自杂交,一般应该予以限制.fHairpin(xi)=∑n-2·pinlen其中,r为形成发卡最小的环长度;pinlen为形成发卡茎所应有的最小长度.并且Hairpin(xi,c)定义如下:Hairpin(xi,c)=1,d(xi,c)>pinlen/2其中d(xi,c)表示序列xi沿其c点折叠两段序列的逆补距离.(4)Hamming距离约束.在DNA序列编码设计中,Hamming距离描述了两个不同DNA序列之间的非相似程度.为了减少不同DNA序列之间的相似性从而避免错误杂交的产生,一般要求两个DNA序列xi和xj之间的Hamming距离不小于某个阈值d,即H(xi,xj)d.(5)逆距离约束.与Hamming距离相似,要求序列xi和序列xj的逆序列xR离不小于某个阈值d.(6)适应度函数设计.本文所定义的多目标优化问题属于最大化问题,我们采用加权平均法来处理每个DNA个体各约束项的评估函数:其中m是评估项个数,wj为各个评估项fj的权重,并且有Page55算法仿真结果及分析针对以上约束条件以及目标函数设计编码序列模型,在Matlab7.0环境下,使用MPSO/GA算法进行仿真,运行环境是PentiumDualE2104,1.6GHz,512MB,MicrosoftXP.参数设置如下:(1)基本遗传算法.最大进化代数为300,种群规模为20,DNA序列编码长度为20,交叉率为0.85,变异率为0.005.表1MPSO/GA算法产生的DNA序列CGTGTGCAGTACTGAGTATG1514AGTAGTTCTCAGACGCTGCT1213GCATGATCGATCTCGTCAGA1413ATCGGTAGTCGTAGACGTCT1215TTGCAGTCAGTCGACTAGTG1314TACGCTCACGATAGCCATGT1413AGTGCTACCTCGCTGTGATA1212表2文献[8]所产生的DNA序列GAGTTAGATGTCACGTCACG1514AGGCGAGTAGGGGTATATCT1412TTATGATTCCACTGGCGCTC1313CCTGTCAACATTGACGCTCA1111CGCTCCATCCTTGATCGTTT1113ATCGTACTCATGGTCCCTAC1110CTTCGCTGCTGATAACCTCA1110从表1与表2可以明显看到,MPSO/GA算法明显比文献[8]算法的适应度函数有所改进,同时在图4指出了该算法的进化收敛图.其中横轴表示进化代数,竖轴表示适应度函数值(每代群体经过排序后最差个体的适应度值).由图4可以看出,算法具有较好的收敛性.(2)MPSO算法.最大进化代数为200,学习因子分别为c1=2,c2=1.8,惯性权重因子w从2降低到0.8,扰动因子u=10,最大速度为4.为了评价本算法所产生的DNA序列的性能,我们将所得到结果与文献[8]的结果进行了比较.表1和表2分别列出了本算法以及文献[8]所产生的DNA序列编码的数据分析.其中“Hd”表示Hamming距离,“Id”表示逆距离.50505050505050505050505050506结论与展望本文从DNA编码的多个约束条件选取合适的约束,通过将多约束转化为多目标优化问题,提出了MPSO/GA算法对DNA计算中的编码序列实现了优化,通过与前人对比,产生了较好的DNA序列,验证了该算法的可行性和有效性.当然,进一步的工作可以结合其他的智能优化算法,进而增强算法的寻优能力并且尽量减小陷入局部最优的概率.
