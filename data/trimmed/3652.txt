Page1视频解码计算复杂度的线性建模理论及在线预测方法田婷1)余胜生1)郭红星1)苏曙光2)1)(华中科技大学计算机科学与技术学院武汉430074)2)(华中科技大学软件学院武汉430074)摘要视频解码是一类最典型的多媒体应用,其计算量大、耗能高.现代多媒体计算平台可利用视频解码计算复杂度固有的动态变化特征来自适应地调整所需计算资源,从而节省能耗,其前提是对视频解码计算复杂度进行准确估计.作者基于解码计算复杂度与帧长之间的线性关系,提出了一种利用状态变量法对解码计算复杂度进行理论建模和在线估计的方法.与传统的直接对帧长和计算复杂度之间的输入-输出依赖关系进行建模所不同,这里将视频解码系统表征为由视频内容特征的状态变化所驱动的系统.首先从语义层面对解码器各模块的解码复杂度进行分析,并导出各模块计算复杂度与语义参数间的依赖关系模型,总解码复杂度为各子模块的复杂度之和.经过化简得到解码计算复杂度与帧长之间的线性模型,其中模型系数为上述语义参数的函数,表征了视频内容特征的状态变化,被定义为状态变量.再结合压缩视频流中相邻帧语义参数之间的相关性,将系统状态方程定义为反映视频内容变化程度的分段线性函数.根据I帧和P帧状态轨迹特性及其在压缩码流中位置属性的不同,分别进行计算复杂度在线估计:对于I帧,采用统计分析方法获得其状态变量的均值并进行在线估计;而对P帧,则是在运行过程中利用状态方程对状态变量进行实时更新和计算复杂度估计.在基于SimpleScalar的软件仿真平台和基于DSP的嵌入式硬件平台上分别对H.264、MPEG-4压缩码流的解码计算复杂度进行在线估计,实验结果表明:对解码计算复杂度的平均估计误差在7%以内,预测精度非常高,而且状态方程更新过程简单,在线运行复杂度低,特别适用于嵌入式移动设备.关键词视频解码;计算复杂度;线性模型;在线预测;状态变量分析法1引言视频编解码一类的多媒体应用不仅计算复杂度高,而且计算过程需要进行密集数据存取,导致其功耗需求较一般应用程序要大得多.因此,如何构建高性能、低功耗的多媒体系统一直是设计者长期追求的目标,特别是对于目前方兴未艾的无线移动多媒体应用,由于其硬件平台资源严重受限,且采用电池供电,能量有限,更迫切需要采用节能技术来提高续航能力.这已经成为衡量众多移动设备性能的最重要指标之一.通过动态调节技术能使系统在运行阶段根据工作负载的动态变化来调整工作模式,从而降低能耗[1].现代计算机硬件的可伸缩性也为动态调节技术提供了支持.按照调节方式的不同可将动态调节技术分为两类:动态功耗管理(DPM)技术[2]和动态电压频率调节(DVFS)技术[3].DPM根据系统工作负载的变化情况有选择地将设备设置为低功耗模式(或直接关闭),从而降低系统能耗.DVFS则通过动态预测后续任务所需计算量,并根据预测结果调节处理器运行电压和频率,以达到任务响应时间和系统功耗之间的平衡.DPM技术适用于间歇性任务,如硬盘读写操作;对于实时性要求高、任务时间间隔短的多媒体流计算任务,频繁的设备状态切换不仅增大了系统开销,而且还导致设备处于不稳定状态,在这种情况下,DVFS技术更为适用.对多媒体流的计算复杂度进行精确估计是提高DVFS效率的前提.最坏路径法(单位计算单元运行最大开销)和平均值法(单位计算单元运行平均开销)是对系统计算量进行估计的常用方法.由于多媒体系统计算复杂度受视频压缩标准、视频帧的编码类型、采用的编码工具集合、视频内容、幅面、压缩码率等因素的影响,变化幅度非常大,传统的计算复杂度估计方法不适用于时变性非常强的多媒体任务,迫切需要发展针对多媒体流计算任务的精确计算复杂度估计方法.视频解码是目前应用最为广泛的一类多媒体应用.本文将以视频解码计算复杂度为研究对象,探讨对其进行分析和建模的方法;同时通过该分析和建模过程归纳出对多媒体系统进行分析的共性方法并指导后续工作.2相关研究本节将在分析已有视频解码复杂度估计方法的基础上,简要说明本文的工作及其意义.2.1视频解码复杂度估计研究进展典型视频解码复杂度估计方法可分为两类:基于统计分析的方法和基于预测的方法.基于统计分析的方法首先将解码过程分成几个相对独立的模块(如变长解码、运动补偿等),然后对每个模块进行统计分析并确定各模块所需计算量与各种参数之间的依赖关系,总解码计算量为各模块计算量之和.这类Page3方法的典型代表包括新加坡国立大学Wang等人[4]提出的直接将每个模块的计算复杂度分别建模为残差系数个数、不同编码类型宏块的数目等编码参数的线性模型.纽约大学Wang等人[5]提出的对每个模块的基本操作单元进行分析,并将模块复杂度建模为基本操作单元的个数与操作单元平均计算复杂度之积.加州大学洛杉矶分校Schaar等人[6]提出的利用混合高斯模型建立视频特征参数以及解码执行时间的联合概率密度分布函数,并通过离线学习与在线更新相结合的方法对上述概率密度函数进行动态更新,从而适应视频内容的变化.南加州大学Kuo等人[7]提出的将宏块运动补偿(帧内预测)的计算复杂度建模为Cache未命中次数、横向插值次数、纵向插值次数和宏块内运动矢量个数这4个参数的线性表达,并通过对多个测试序列进行统计分析,获得每个参数的权值因子.上述方法能够对解码计算复杂度进行非常精确的分析,估计结果准确.但是,为了获得解码复杂度模型中的各种参数,必须在解码端插入大量的分析语句,或者在传输码流中插入指示复杂度的信息.这样不仅增加了数据传输量,还需要对解码系统进行修改,系统运行时的复杂度增加,也不利于模块化系统设计.基于预测的方法是根据视频帧之间的相关性,利用已解码帧的计算复杂度来估计后续帧的计算复杂度.这类方法的重点和难点是如何挖掘出相邻帧计算复杂度之间的相关性.一旦建立起这种相关性就可以通过简单的预测来获取每一帧的计算量,在线运行时开销小,适用于处理能力较弱的多媒体计算平台.典型算法包括伊利诺伊大学香槟分校Nahrstedt等人[8]提出的利用相邻时间段内的视频帧解码计算复杂度的概率密度函数具有连续性和相似性的特点,以组为单位对解码计算复杂度概率密度函数进行动态更新,并将前面组的概率密度函数近似作为待解码视频组的概率密度函数.之后利用解码系统的软实时性特点,在满足解码率ρ(即在截止期之前被解码的视频帧占总视频帧的比率)的条件下,在概率密度函数中寻找合适的计算复杂度C,使得P(cC)ρ,将C作为对待解码视频组中每一帧的计算复杂度的预测.该算法虽然利用了解码计算复杂度概率密度函数的相关性,但对视频帧计算复杂度的估计是以组为单位进行,粒度较大,没有充分挖掘出相邻视频帧之间的相关性,因此估计结果并不精确.我们提出了一种融合离线统计分析和在线预测的解码计算复杂度估计方法[9],利用解码计算复杂度与视频帧长之间的线性关系对其进行建模.在离线阶段通过统计方法对模型系数变化规律进行分析并对相邻帧模型系数之间的关系式进行求解;在线运行时利用这一关系式动态更新模型系数并进行解码计算复杂度估计.这一方法融合了统计分析和在线预测两种手段,实验结果表明该算法能以非常小的系统开销对解码计算复杂度进行精确估计.这部分工作很好地利用了相邻帧模型系数的相关性,但对于相关性的内在机理分析不够,建模和分析方法不足以推广至其它多媒体应用程序.2.2本文的研究工作及其意义本文在已有基础上主要开展了如下工作:(1)根据多媒体系统输出与视频内容特征之间的强依赖性以及相邻视频帧之间潜在的相关性,首次引入信号系统分析理论,将多媒体解码系统定义为状态驱动的系统.将系统输出响应(解码计算复杂度)的求解过程转化为描述系统状态变量变迁轨迹(即状态方程)的过程.(2)采用状态变量分析法对解码系统计算复杂度进行求解,并利用状态变量化简法优化系统状态空间.解码计算复杂度最终表征为以帧长作为输入,系数(K,B)为状态变量的输出响应.状态变量K用以表征压缩视频编码信息的变化(视频编码信息主要指预测模式、运动矢量精度及运动矢量范围);状态变量B表征压缩视频幅面的变化,当视频幅面相同时,B用以表征被编码残差的变化.(3)以(K,B)为状态变量利用压缩视频帧被编码残差和视频编码信息之间固有的量变与质变关系(即相邻帧之间的变化首先通过残差表现;当变化过大时,相邻帧的编码信息将发生明显变化),给出了一种建立系统状态方程的方法,并将其最终定义为表征视频内容变化程度的分段线性函数.(4)提出了对解码计算复杂度在线估计的一整套完整解决方案,实现了对不同编码方式、不同幅面、不同帧类型的视频帧解码计算复杂度在线估计,并通过软仿真和硬仿真两种方式分别对H.264和MPEG-4压缩码流进行测试.实验结果表明本方法能很好地适应各种类型的压缩码流.除上述对解码计算复杂度进行理论分析、建模和动态估计等工作外,本文所提出的方法从另外两个方面展现了对其它多媒体系统建模的意义,包括:(1)本文所提出的方法从本质上来说是回归了解码系统的物理属性,从解码机理出发探讨影响解Page4码系统计算复杂度的因素.多媒体系统不同于其它计算系统的重要特点是其具有丰富的语义层信息,虽然在计算机中多媒体是以信号的形式被表示、存储和传输的,但语义层信息却广泛地被用来对多媒体信号处理过程进行优化.遗憾的是,多媒体信号经过越复杂的处理,其语义层信息被利用的程度就越低,以至于最后通常选择复杂数学模型对视频信号进行分析和处理,语义层信息熵被人为增大.本文所提出的解码计算复杂度估计方法是一种寻找编解码系统中语义层信息传递的方法,即原始视频帧时域和空域的相关性是如何转化为压缩视频帧之间的相关性.首先利用基于输入-输出的统计分析法获得可能体现压缩域视频帧相关性的参数,然后利用状态变量法从理论层面进行推导,确定待选参数作为状态变量的语义层含义.最终落脚点是从语义层分析这些包含物理含义的状态变量随视频帧连续变化而动态变迁的过程,并将其转化为数学形式进行求解,而不是单纯的依靠数学工具.这种方法能够挖掘不同形式视频信号中所潜在的语义层信息,保持语义层信息熵的稳定性,同时也为提高多媒体系统分析效率和减少分析复杂度提供了新思路.(2)本文所获得的状态方程虽然最终服务于解码计算复杂度估计,但是由于它能够很好地表征压缩视频内容、残差以及视频幅面的变化,故可以作为独立系统服务于其它需要对视频运动复杂度以及纹理复杂度等视频特性进行分析的多媒体应用中.本文第3节通过实验对解码计算复杂度和压缩视频帧长呈正相关这一现象进行描述,并采用统计的方法验证将帧长与解码计算复杂度之间的正相关性建模为线性关系的合理性;第4节阐述利用状态变量分析法获得解码系统状态变量(K,B)物理含义的原理以及系统状态方程的建立过程,并给出了利用状态方程分别对I帧和P帧解码计算复杂度进行动态估计的方法;第5节是本文的实验部分,将分别对H.264和MPEG-4压缩码流进行在线解码复杂度动态预测,本节还将详细展现在线预测过程中表征视频特征的状态变量的变迁过程;最后,第6节是结论.3计算复杂度与帧长的线性模型通过对运行在典型嵌入式平台上的解码任务计算量与视频流帧长之间的关系进行实验分析,发现视频帧的解码计算复杂度与帧长正相关.以基于TITMS360DM642DSP芯片的嵌入式解码平台为例,采用遵循MPEG-4编码标准的XVID编码器将CIF格式的测试序列Akiyo、Hall、Coastguard、Crew、Foreman、Mobile在各种码率下(200kbps、400kbps、500kbps、600kbps、800kbps)进行压缩,将生成的压缩码流输入到上述嵌入式解码器中进行解码,并记录每帧压缩视频的帧长及所需计算复杂度.编码参数为XVID编码器的默认参数配置,将最大I帧间隔设置为32.采用的解码器是遵循MPEG-4编码标准的DIVX解码器①,利用TI公司提供的线性汇编语言对解码器进行优化,没有任何算法上的修改,所得结果不失一般性.图1给出了码率为500kbps时,Foreman和Mobile序列每一帧的帧长(以字节为单位)和解码计算量(以解码一帧所需要的时钟周期数cycle作为度量)对比图.其它码率下,各测试序列的表现形式与此类似.图1500kbps测试序列每帧帧长与解码计算复杂度对比图①http://en.pudn.com/downloads270/sourcecode/multime-Page5从图1中可以看出,解码计算复杂度与帧长的走势一致,当帧长发生剧烈变化时,计算复杂度也发生明显变化.因此,可将解码计算复杂度(记为C)与帧长(记为L)之间的关系建模为其中关系函数f应体现帧长与计算复杂度之间的正相关性.考虑到算法实现时的低复杂度要求,尝试将f定义为线性函数,即式(2)成立的充要条件是随机变量C和L线性相关,即两者相关系数ρ等于1.以CIF格式的测试序列Akiyo、Hall、Coastguard、Crew、Foreman、Mobile在各种码率下(200kbps、400kbps、500kbps、600kb-ps、800kbps)采用XVID编码器编码并解码后所得到的计算复杂度和帧长为样本,计算样本相关系数,结果如图2所示.图2各序列在不同码率时解码计算复杂度与帧长相关系数在大多数情况下解码计算复杂度与帧长之间的相关系数大于0.8,表明两者确实存在很强的线性相关性;视频运动复杂度低(如Akiyo、Hall等序列),两者相关系数大于0.95,可以认为解码计算复杂度与帧长是线性相关的.因此将f定义为线性函数是合理的.式(2)中函数系数(K,B)可通过文献[9]所给出的线性拟合方法离线分析获得,在线运行过程中便可利用该拟合系数对解码计算复杂度进行估计.但是由于系数(K,B)是随输入视频内容的变化而动态变化的(图(2)中计算复杂度和帧长相关系数不等于1可以说明这一点),静态系数无法反映视频内容特征的变化.因此有必要挖掘系数(K,B)随视频内容特征动态变化的规律,从而指导我们对解码计算复杂度进行在线动态估计.4融合统计分析和状态变量分析法的解码复杂度在线动态预测为了挖掘系数变化规律,需要从多媒体系统内部机理进行分析.在信号系统分析法中,状态变量分析法正是从系统内部机理进行分析,构建系统各节点的状态变量与系统输入输出之间联系的方法.采用状态变量分析法需要首先确定系统状态变量,然后建立两个基本方程,即输出方程:犢(n)=C犡(n)+D犲(n),建立输出向量犢和状态向量犡以及输入向量犲之间的联系.状态方程:犡(n+1)=A犡(n)+B犲(n),建立状态向量犡在输入犲的作用下的变化.考虑到视频具有天然的语义层信息,视频编解码器运行的过程就是挖掘和解释视频运动特点、纹理特点的过程,因此系统的输出是由视频特征所驱动的;而且由于视频帧具有时域上的连续性,其特征也具有时域上的相关性.因此可借鉴状态变量分析法的思想,将帧长与计算量线性模型中的模型系数(K,B)重新定义为表征视频内容特征的状态变量,并通过分析状态变量的具体物理含义来建立系统状态方程.4.1视频解码系统状态方程的建立4.1.1解码系统状态变量物理含义分析根据第3节的分析,系统输出方程可以定义为C(n)=K(n)×L(n)+B(n),n为视频帧序号.每一帧的帧长在压缩后已经确定,可以认为L(n)为常量,解码系统状态变量为(K,B).本小节将从视频解码器工作流程切入,对解码器计算复杂度各组成部分进行分析,并通过状态变量化简,推导出以(K,B)为状态变量的系统输出.图3给出了一个典型的视频解码器的工作流程.压缩码流输入到解码器,熵解码模块(ED)对输入的码字进行解析,得到压缩域残差系数.重排序模块(Reorder)对这些残差系数进行反zig-zag扫描,获得按行列顺序排列的压缩域残差系数.反量化模块和反变换模块(IQ&IT)则将上述重排序后的压缩域系数进行反量化和反变换操作获得像素域的残差信息.最后MC/IP模块利用块预测模式和运动矢量,取得当前块的预测块,并将其与像素域残差信息相加,得到最终重构后的块.因此,视频解码计算复杂度C可表征为熵解码(CED)、重排序(CReO)、反量化和反变换(CIQ&IT)以及MC/IP模块(CMC/IP)的计Page6算复杂度之和.即换言之,4个模块的计算量作为系统节点处的输出,可被定义为解码系统状态变量(如图3中虚线图3视频解码器工作流程图熵解码模块按照码流输入顺序对码字逐个进行处理,其解码复杂度与视频帧帧长呈正比关系[5].设L为码流长度,C0为解码每个码元所需要的平均计算量,熵解码计算复杂度可以定义为Reorder模块对固定大小的块(4×4或8×8)进行反zig-zag扫描,由于反zig-zag扫描的步骤不变,因此消耗在每个块的计算复杂度基本不变.Reorder模块的计算量由数据块个数决定.在视频编码中,对于采用统一编码标准的视频帧,其数据块大小固定,块数目由视频帧的幅面决定.因此Reor-der模块的计算量与视频帧帧长基本无关,主要取决于视频帧幅面.设视频所包含的分块数为N,每个固定大小块所需要的计算复杂度为C1,则IQ&IT模块对每个固定大小的压缩域系数块进行相同的加法和乘法操作,与Reorder模块类似,其计算量与视频帧帧长基本无关,主要由视频帧幅面决定.但是目前所采用的优化IDCT算法会利用许多DCT系数为零这个特点对计算过程进行简化,在这种情况下反变换的计算量与非零系数的个数和出现位置有关.设视频所包含分块数为N,处理每个块所需平均计算复杂度为C2,则MC/IP模块的计算复杂度包含两部分:获取参考块所需计算量(Cfetch)以及将参考块与残差相加所需计算量(Ccalc).取参考块的计算复杂度取决于块类型、块预测模式以及运动矢量的精度,当预测模式复杂、采用分数精度运动矢量时计算复杂度会急剧增加.由于块类型、块预测模式及运动矢量都是宏块头的组成部分,复杂度高的预测模式以及分数精度运动矢量将导致宏块头消耗较多码字,因此可以认处指示):为了获得系统状态方程,对每个状态变量进行独立分析,获得其各自表达式.为Cfetch与宏块头长度正相关,从视频帧的角度来说就是与帧头长度正相关.将残差与参考块相加所需计算复杂度对单个块来说是一样的,总计算量取决于视频幅面.设视频帧头部信息长度为Lh且帧头中每个码元预取数据所需平均计算复杂度为C3,视频所包含的分块数为N,每个块相加所需平均计算复杂度为C4,MC/IP计算复杂度可定义为CMC/IP=Cfetch+Ccalc=C3×Lh+C4×N(7)综合式(3)至式(7),解码计算复杂度可以表征为C=C0×L+C1×N+C2×N+C3×Lh+C4×N=C0×L+C3×Lh+(C1+C2+C4)×N.将上式与C(L)=K×L+B对比,可令考察状态变量K的组成部分,C0为熵解码模块解码每个码元所需要的平均计算量,实验表明该系数的变化幅度不大[5].K值的大小主要取决于C3×(Lh/L)的大小,其中C3是MC/IP模块中每个码元预取数据所需平均计算复杂度,当视频采用复杂的预测模式、运动矢量为分数精度、运动矢量范围很大时C3的值较大.Lh/L则表征的是帧头占帧长的比例,该值由率失真优化模型决定,总是试图在头信息和残差信息所占长度之间取得最好的平衡.因此其大小与码率分配策略以及视频内容密切相关,当码率分配均匀时,如果视频内容变化较小,相邻帧的帧头在帧长所占比例应基本保持不变,否则此部分的值将由于视频的预测模式、运动矢量等编码信息的变化而发生较大幅度的变化.因此K值的大小由视频编码信息所决定的.考察状态变量B的组成部分,C1、C2、C4分别为Reorder、IQ&IT以及MC/IP模块中对固定大小块Page7所做操作的平均计算量,原则上讲是不变的,因此B值主要取决于N的大小,即视频幅面.但是当压缩块残差系数全部为零时,解码器将不对该块进行相应的操作;当为零的系数很多时,IQ/IT模块也将采取一定的快速算法,单个块的计算复杂度也将发生变化,因此在这种情况下,残差的变化决定了B值的变化.但是必须指出的是,在给定正常码率的条件下,不可能出现所有块系数为零的情况,决定B值的主因仍然是视频幅面.为了验证上述对状态变量(K,B)物理含义的分析,将CIF和4CIF格式标准测试序列在不同码率下进行压缩并解码,I帧间隔设为250,对获得的帧长和计算量进行拟合,得到不同码率时各测试序列的状态变量拟合值,实验结果如表1和表2所示.表1不同码率下CIF格式测试序列状态变量拟合值视频序列Akiyo355.15285.19275.32269.86264.82Hall453.87356.77325.44322.78270.13Coastguard367.54215.57210.64209.42208.32Crew762.48710.70624.43559.20497.98Foreman589.93363.96327.16315.28288.38Mobile264.06263.23266.16265.79265.13视频序列Akiyo1.75941.81811.83691.84581.8555Hall1.90032.07652.16482.17392.3725Coastguard2.26872.29162.31942.34082.4035Crew2.67302.04732.06262.09582.0764Foreman2.10152.26602.31362.33402.4009Mobile2.42632.40552.40792.41842.4289表2不同码率下4CIF格式测试序列状态变量拟合值视频序列City358.30313.53295.63278.26274.56Crew829.68808.13677.74606.98533.26Harbor351.88373.05341.71345.92305.79Ice427.67332.20292.83283.46268.62视频序列City9.15249.39529.53639.69229.7274Crew11.36207.88488.01598.00778.3511Harbor9.46209.48879.75589.687810.1810Ice8.38218.48888.70778.72008.8715观察上述两表,可以发现:(1)随着视频序列运动复杂度增加,K值在不断增大,Crew序列的运动复杂度最大,其K值明显大于其它序列.(2)4CIF格式视频序列B的拟合值大约为CIF格式视频序列拟合值的4倍,与两种视频幅面的比值相等.(3)当视频序列幅面相同时,随着被编码残差数量的增加B值将增大.如Mobile序列,其纹理非常复杂,导致残差量较大;Foreman序列,其视频运动复杂度较高,残差量较大;对于Crew序列,由于其运动复杂度很高,在编码时用以表示宏块编码模式、运动矢量等编码信息的码字较多,最终被编码的残差数据较少.实验表明,Crew序列被编码残差量明显小于其它序列,在500kbps时,其残差所占长度仅为帧长的53%,同等测试条件下Mobile序列这一比例为76%.(4)随着码率增加,被编码残差数量增加,B值呈增大的趋势.上述实验结果表明K确实主要受视频预测模式、运动矢量的范围和精度的影响,而B基本与上述视频编码信息无关.在幅面相同条件下,被编码残差数对B的影响较大;当视频幅面不同时,B的变化非常大,此时K的变化并不明显.因此,K和B的物理含义可以定义为:状态变量K可以表征被编码视频编码信息变化,其中视频编码信息主要指预测模式、运动矢量精度及运动矢量范围.状态变量B可以表征被编码视频幅面的变化,当视频幅面相同时,B可以表征被编码残差的变化.4.1.2解码系统状态方程的建立状态方程用来表征系统状态变量在输入激励下所产生的变化,在视频解码系统中就是建立相邻帧状态变量(K,B)之间的联系.通过对K和B物理含义的分析,可以将相邻帧状态变量的变化映射为编码信息以及被编码残差的变化.根据视频压缩原理,从相邻帧变化角度来说,编码信息和被编码残差之间是质与量的关系,即相邻帧之间的变化首先通过被编码残差的数量发生改变而体现;当视频内容发生剧烈变化时,被编码残差数量发生很大幅度变化,此时编码器率失真优化模块和码率控制模块将通过改变编码信息来提高压缩视频的率失真性能.因此K和B之间的关系也可以认为是质与量的关系,以相邻帧视频内容的变化程度作为衡量质变与量变的准则,则有(1)相邻帧视频内容变化小,视频内容的差别主要由被编码残差的数量的变化来体现.相邻帧K值保持不变,B值发生变化.(2)相邻帧视频内容变化大,视频内容的差别主要由视频编码信息的变化来体现.相邻帧K值变化,B值保持不变.Page8采用数学形式对上述过程进行描述,则可以给出一种以视频内容变化程度为条件的分段函数,对状态方程进行求解.设前一帧(第i-1帧)的状态变量为(Ki-1,Bi-1),通过该状态变量值预测得到当前帧(第i帧)的解码计算量Ci;解码后得到当前帧的真实计算量为CR(i),第i帧的状态变量为(Ki,Bi),则当前帧的解码复杂度估计误差为CR(i)-Ci,且当视频内容变化较小时,相邻帧状态变量应基本相同,则当前帧的解码复杂度估计误差较小;而当视频内容变化大时,相邻帧状态变量差别较大,当前帧的解码复杂度估计误差较大.因此可用当前帧的解码复杂度估计误差来表征视频内容变化程度,进而将其作为选择状态方程的约束条件.利用计算复杂度估计误差、视频内容变化以及状态变量变化三者之间的映射关系,解码系统状态方程可由式(9)、(10)给出.状态方程1:当前帧解码复杂度估计误差在一定范围内,即Δ1CR(i)-CiΔ2,则状态方程2:当前帧解码复杂度估计误差超过一定范围,即CR(i)-CiΔ1‖CR(i)-CiΔ2,则4.2解码复杂度在线动态预测利用状态方程对解码计算复杂度进行在线估计.由于状态方程描述系统前后帧状态变量的变化关系,而在压缩序列中除全I帧序列外,I帧一般独立出现,其后续帧多为P帧和B帧,前后帧属性不同,相关性无法通过状态方程体现.因此本文针对I帧和P帧状态变量轨迹特性和在编码过程中的位置属性不同,分别提出了两种预测方法.针对I帧主要是采用统计的方法获得I帧状态变量的统计特性,并利用其对解码复杂度进行预测;对于P帧则是融合统计分析和状态方程进行动态预测.B帧从编码原理上来说同样是采用帧间预测编码,其估计过程与P帧类似,在此不单独讨论.为了分析不同编码方式对视频状态变量的统计特性以及相邻帧状态变量的变化趋势的影响,还将对MPEG-4和H.264编码标准进行对比讨论.4.2.1基于统计分析的I帧计算复杂度预测表3和表4分别给出了CIF格式全I帧MPEG-4压缩码流和H.264压缩码流在不同码率时拟合得到的(K,B)值.可以发现对于MPEG-4压缩码流,当视频内容、压缩码率发生变化时,状态变量(K,B)值基本保持不变.而对于H.264压缩码流,当视频内容、压缩码率发生变化时,K值发生明显变化,B值有一定区别,但变化幅度并不明显.表3不同码率下CIF格式全I帧MPEG-4压缩码流视频序列Akiyo218.59219.32207.46203.20201.98Hall214.38212.58208.95206.26214.91Coastguard218.69215.57210.64208.32206.90Crew238.58233.24222.33215.20212.91Foreman210.36211.21216.98221.38218.79Mobile206.68206.63206.65206.28203.78视频序列Akiyo6.31576.35236.43016.50076.5210Hall6.40696.42616.46426.49316.3916Coastguard6.41466.44086.49616.53106.5552Crew6.35316.37996.44486.50106.5356Foreman6.40986.41146.36776.30046.2971Mobile6.48266.48346.48296.49916.5545表4不同码率下CIF格式全I帧H.264压缩码流视频序列Akiyo318.17274.37248.67261.17103.58Hall374.25379.10333.37275.49146.82Coastguard238.33228.36221.96203.55191.01Crew227.73244.44265.60259.40176.53Foreman312.93326.30310.34286.84241.33Mobile185.62178.90182.28177.06156.58视频序列Akiyo1.42231.43581.43581.43321.5888Hall1.38481.38111.39971.45541.6002Coastguard1.41301.42001.42131.44401.4720Crew1.48961.48301.47041.47431.5579Foreman1.38121.38121.39871.42381.4670Mobile1.55231.55251.53741.52961.5790由于状态变量K表征被编码视频运动信息的变化,I帧只采用帧内预测.在MPEG-4视频编码标准中只有两种方向的帧内预测,且计算复杂度基本相同,状态变量K值将保持基本不变.对于H.264编码标准,由于其采用9种4×4预测模式和4种16×16预测模式,且每种模式计算复杂度区别较大,同时每种预测模式所需码长也不同,因此随着视频纹理的变化K值将发生明显变化.对于状态变量B,当视频幅面相同时,B的值与Page9被编码残差数量变化相关,MPEG-4压缩码流中各种帧内预测模式消耗的码字相同,在同样码率的条件下被编码残差数量相近,B值保持不变.在不同码率条件下,随着码率的增加,B值会增加,但相对于B值的大小来说增幅较小.而对于H.264压缩序列,虽然各种预测模式消耗码字不等,但由于所占码字较少,残差量变化并不明显,因此B值有一定变化,但其主导因素还是视频幅面.通过以上分析可以发现,虽然MPEG-4压缩码流和H.264压缩码流的状态变量统计特性随编码方式的不同而发生改变,但物理含义始终保持不变.对于在码流中单独出现的I帧而言,由于它无法利用连续帧之间的相关性进行状态变量的更新,这种物理含义的一致性就显得尤为重要.通过分析状态变量所表征的压缩码流特征,了解影响状态变量变化的主要因素,为利用I帧状态变量的统计特征值提供了理论支持.更确切的说,就是将状态变量(K,B)的物理含义与表3、表4中状态变量的统计特性相结合,可得到:规律1.当视频幅面一定时,随着视频内容、压缩码率的变化,状态变量(K,B)值基本保持不变.对于不同幅面的视频,表5给出了4CIF格式全I帧MPEG-4压缩码流在不同码率时拟合得到的(K,B)值,将它与表3对比,可以发现:规律2.当视频幅面变化时,状态变量K的值基本不变,而状态变量B的值发生变化;且对不同幅面的视频,其状态变量B的比值约等于幅面的比值.表5不同码率下4CIF格式全I帧MPEG-4压缩码流视频序列City219.54212.27209.55208.65205.58Crew240.75222.80218.47220.02212.14Harbor212.38205.63202.32200.15196.87Ice206.07216.72216.76211.58209.74视频序列City2.52892.55482.56592.57312.5911Crew2.50822.54452.55442.55012.5802Harbor2.57062.59562.60942.62092.6405Ice2.52752.50792.51152.52632.5317需要指出的是,虽然H.264压缩码流K值的变化并不满足上述变化规律,但是由于I帧作为关键帧,其在码流中出现的频率很低,预测误差对系统整体性能的影响并不大.而且通过后续实验证明,在确定了B值的基础上,I帧的平均预测误差也不超过4%.上述规律可以应用至H.264压缩码流.利用规律1和规律2,对I帧解码计算复杂度估计可以分为离线分析和在线预测两个部分.离线分析得到针对某一幅面的压缩码流的状态变量统计值,在线运行时根据接收视频与离线分析所使用的视频的幅面的比值对状态变量统计值进行调整,调整后的值将用来对I帧解码复杂度进行预测.因此有算法1.算法1.I帧计算复杂度预测.输入:压缩视频流中的I帧及其帧长输出:输入的I帧解码计算复杂度估计值1.离线分析得到某种幅面视频状态变量统计值:1.1.选择与解码器所采用的压缩标准一致的编码器,采用此编码器将某种幅面大小(记为S1)的标准测试码流以全I帧形式在不同码率下进行编码;1.2.将压缩码流进行解码,并获取解码每一帧的计算复杂度及压缩帧帧长,记为(Cn,Ln);1.3.以帧长为自变量,解码计算复杂度为因变量对上述生成的(Cn,Ln)利用最小二乘法进行线性拟合,获得I帧状态变量统计值,记为(KI,BI).2.在线预测I帧的计算复杂度:2.1.初始化状态变量值,令(KI(o),BI(o))=(KI,BI);2.2.计算接收视频幅面是否发生改变,如改变,则计算接收视频的幅面S2与步1中所使用的视频幅面S1之比,即r=S2/S1,根据r对状态变量值进行比例缩放,即(KI,BI)=(KI(o),r×BI(o)).否则保持(KI,BI)不变;2.3.读取当前帧帧长L,利用公式C=KI×L+BI估算所需解码计算复杂度.4.2.2融合统计分析和状态方程的P帧计算复杂虽然MPEG-4与H.264标准在预测模式、运动矢量精度、运动矢量范围等编码工具上有所区别,但是它们都利用相邻帧之间的相关性进行状态方程更新,因此两类码流中对于P帧的解码复杂度预测方法类似.图4给出了对P帧解码计算复杂度进行预测的框图.Page10在解码视频帧之前,状态变量更新模块将更新后的状态变量输入至解码计算复杂度在线预测模块.预测模块结合待解码帧的帧长,对解码计算复杂度进行预测.操作系统根据预测得到的计算复杂度进行DVFS调节之后,解码器对当前帧进行解码并记录其真实计算复杂度,将其输入至状态变量更新模块.更新模块计算当前帧真实计算复杂度和预测值之间的差值,并将其与迭代控制阈值进行比较,选择4.1.2节中所给出的状态方程(9)或者(10)对状态变量进行动态更新,更新后的状态变量将指导下一帧的解码计算复杂度预测.P帧计算复杂度动态预测算法如算法2所示.算法2.P帧计算复杂度动态预测.输入:压缩视频流中的P帧及其帧长输出:输入的P帧解码计算复杂度估计值1.离线分析得到系统状态变量迭代初值和迭代控制阈值:1.1.确定迭代控制阈值(Δ1,Δ2),本算法是通过确定状态变量B的范围(Bmax,Bmin)来确定(Δ1,Δ2);1.2.确定迭代初值(KP,BP).2.在线动态预测输入P帧的计算复杂度:2.1.初始化系统状态变量值及迭代控制阈值,令(KP(o),BP(o))=(KP,BP),Bmax(o)=Bmax,Bmin(o)=Bmin;2.2.计算接收视频幅面是否发生改变,如改变,则计算接收视频的幅面S2与步1中所使用的视频幅面S1之比,即r=S2/S1.根据r对状态变量值进行比例缩放,即(KP,BP)=(KP(o),r×BP(o)),(Bmin=r×Bmin(o),Bmax=r×Bmax(o)).否则保持系统状态变量值及迭代控制阈值不变;2.3.读取当前帧帧长L,直接利用公式C=KP×L+BP估算其所需解码计算复杂度;2.4.对当前帧进行解码,解码后得到真实计算量CR以及当前帧解码复杂度估计误差Δ=CR-C;2.5.计算当前帧的解码复杂度估计误差的阈值[Δ1,Δ2],Δ1=Bmin-BP,Δ2=Bmax-BP,判断估计误差所处阈值范围,如果Δ1ΔΔ2,则按式(9)更新BP为BP=BP+Δ;否则按式(10)更新KP为KP=Δ/L+KP,将更新后的(KP,BP)用于下一个P帧解码计算复杂度预测.由于篇幅的限制,迭代控制阈值(Δ1,Δ2)以及迭代初值(KP,BP)的计算方法没有详述,具体方法可参看作者前期工作[9].5实验结果与分析采用基于统计的解码计算复杂度预测算法(StatisticalAnalysisbasedPrediction,SP)以及融合统计分析和状态方程的解码复杂度预测算法(StatisticsmergedStateVariableAnalysis,SSVA)分别对I帧和P帧的解码复杂度进行估计.由于本算法在实际运行阶段利用了相邻帧状态变量之间的相关性进行解码计算复杂度预估,属于基于预测算法,本节将给出与伊利诺伊大学香槟分校Nahrstedt等人[8]提出的CDP(CumulativeDistributionbasedPrediction)算法的对比.为了验证算法的有效性,实验分别选取了采用MPEG-4和H.264两种视频编码标准的解码器,在不同平台上进行测试.其中MPEG-4解码器运行在基于TITMS320DM642DSP芯片的嵌入式开发板上,采用DIVX解码器.H.264解码器运行在SimpleScalar仿真器上[10],仿真器所仿真的硬件环境为基于X86架构的通用PC,解码器源码选取开源代码P264.如文献[8]所述,CDP算法包含3个控制参数:视频帧解码率ρ,每组视频帧的数目w和计算复杂度分组间隔g,在本实验中,将其分别设置为0.96,50帧和10000个时钟周期.5.1基于统计分析的I帧计算复杂度预测结果5.1.1MPEG-4压缩码流I帧预测结果利用4.2.1节中所提出的算法1,对I帧解码复杂度进行估计.首先选取Akiyo、Coastguard、Foreman和Mobile等CIF格式的视频序列作为测试序列,采用MPEG-4编码标准将其在不同码率下(800kbps、1000kbps、1500kbps、2000kbps和2500kbps)以全I帧形式进行压缩并解码,记录每一帧视频的帧长和解码计算复杂度,记为(Cn,Ln).以帧长为自变量,解码计算复杂度为因变量,利用最小二乘法对得到的(Cn,Ln)进行线性拟合,得到状态变量(K,B)值为(215.51,6.4108×106).利用拟合得到的状态变量值预测CIF格式MPEG-4压缩码流的解码计算复杂度.将测试视频(Akiyo、Hall、Coastguard、Crew、Foreman和Mo-bile)在不同码率下(800kbps、1000kbps、1500kbps、2000kbps和2500kbps)按全I帧进行压缩,并将其输入到解码器进行解码复杂度动态预测.图5给出了预测误差的概率密度分布.如图5所示,采用SP所得到的估计误差的概率密度分布呈正态分布,且平均估计误差为0.47%,近89%视频帧预测误差范围在1%以内,最大预测误差为2.94%,SP方法精确度高于CDP方法.而且采用SP方法的在线运行开销非常小,计算复杂度可以通过一次乘法以及一次加法预测得到.在本实验环境下,SP在线运行开销仅为54cycles/帧.Page11更进一步的,利用CIF格式视频序列所得到的状态变量值动态预测4CIF格式视频序列解码计算复杂度.将测试序列(Ice、Harbor、Crew和City)在不同码率下(2000kbps、4000kbps、5000kbps、6000kbps和8000kbps)按全I帧形式压缩,并将其输入到解码器中进行解码复杂度动态预测.由于在线输入视频幅面(4CIF)与离线分析视频所采用的幅面(CIF)不同,按照4.2.1节中所提出的规律2,根据视频幅面的比值将状态变量(K,B)值修正为(215.51,2.5643×107).为了评价规律2的有效性,本实验还给出了利用4CIF幅面视频进行离线拟合分析所得到的状态变量值:(218.25,2.5421×107).图6给出了采用不同预测方法所得到的预测误差的概率密度分布.其中将采用修正后的CIF格式视频序列拟合得到的状态变量值进行预测的方法记为SPSimple,采用4CIF幅面视频直接离线拟合得到的状态变量值进行预测的方法记为SP.实验结果表明,SP方法预测结果仍然很准确,这再次验证了4.2.1节中所提到的规律1,即对同一幅面视频序列,其状态空间基本不变这一规律是正确的.虽然SPSimple的预测结果没有SP精确,但是也有不错的预测结果.近69.79%视频帧的预测误差在1%以内,近99%的视频帧预测结果在2%以内,最大预测误差为2.32%.这一结果表明规律2是正确的,另一方面也暗示了本算法的鲁棒性,虽然SP和SPSimple状态变量值稍有不同,但两者都可以达到比较好的预测效果.5.1.2H.264压缩码流I帧预测结果选取CIF格式的视频序列(Akiyo、Coastguard、Crew、Mobile)作为测试序列,采用H.264编码标准将其在不同码率下(500kbps、800kbps、1000kbps、1500kbps、2000kbps)以全I帧形式压缩并解码,利用最小二乘法进行线性拟合得到状态变量(K,B)值为(222.6,1.4749×107).利用拟合得到的状态变量值对CIF格式H.264压缩码流的解码计算复杂度进行预测.将测试视频(Akiyo、Hall、Coastguard、Crew、Foreman和Mobile)在不同码率下(500kbps、800kbps、1000kbps、1500kbps、2000kbps)按全I帧进行压缩,并将其输入到解码器进行解码复杂度动态预测.表6给出了不同序列在不同码率时的预测误差绝对值的均值.表6采用H.264编码标准的全I帧测试序列在视频序列Akiyo1.881.160.700.750.31Hall3.452.051.261.242.86Coastguard3.923.483.522.842.08Crew1.271.301.281.672.21Foreman3.663.222.461.210.92Mobile3.963.692.601.301.32实验结果表明,虽然H.264编码标准中的帧内预测模式较MPEG-4编码标准复杂,状态变量空间有小幅度变化,但在确定了状态变量(K,B)数量级的基础上,仍能保持较高精度,所有测试序列估计误差均值都保持在4%以内.5.2融合统计分析和状态方程的P帧解码计算复5.2.1MPEG-4压缩码流P帧在线预测结果利用4.2.2节所述的算法对P帧解码复杂度进行估计.选取CIF格式测试序列Akiyo、Hall、Coastguard、Foreman、Mobile、Crew作为测试序列,并按照文献[9]中所述方法获取迭代控制阈值及迭代初值:Δ1=1.7×106-B(i-1),Δ2=2.4×106-B(i-1);(KP,BP)=(325.58,2.3171×106).利用上述初值对MPEG-4压缩码流进行解码计算复杂度在线估计.表7给出了SSVA和CDP的平均绝对估计误差.杂度预测结果Page12表7不同码率时P帧预测误差绝对值的均值视频序列预测方法预测误差绝对值的均值/%AkiyoSSVA6.283.952.333.762.96HallSSVA2.892.051.521.502.78CoastguardSSVA2.462.651.853.362.58CrewSSVA4.805.005.325.475.49ForemanSSVA3.633.843.864.123.60MobileSSVA2.332.452.361.952.38实验结果表明SSVA适用于不同内容、不同码率的压缩视频,特别是对于运动复杂度中等、纹理复杂度中等的视频序列(如Hall、Coastguard和Mo-bile序列),平均预测误差一般都在3%以内.对于运动非常剧烈的视频(如Crew序列),由于相邻帧之间的相关性较弱,导致相邻帧状态变量相似性减小,预测结果较差,但其平均估计误差仍然小于6%.图7给出了各序列预测误差概率密度分布,从图中可以看出SSVA算法估计误差呈正态分布,且估计误差均值和方差都接近0,证明SSVA算法预测非常平滑.对6个序列综合计算,估计误差在5%以内的比例为84.6%,误差在10%以内的比例为96.6%,SSVA精确度较高.更进一步的,利用CIF格式视频序列所得到的状态变量的值动态预测4CIF格式视频序列解码计算复杂度.将测试序列(Ice、Harbor、Crew和City)在不同码率下(800kbps、1000kbps、1500kbps、2000kbps和2500kbps)压缩,并将其输入到解码器中进行解码复杂度动态预测.由于在线输入视频幅面(4CIF)与离线分析视频所采用的幅面(CIF)不同,根据视频幅面的比值将状态变量迭代初值修正为(325.58,9.2684×107).为了评估该迭代初值的有效性,本实验还给出了利用4CIF幅面视频进行离线拟合分析所得到的迭代初值(344.24,8.6397×107)进行在线估计所得到的估计结果.实验结果如表8所示,采用CIF序列初值得到的估计初值记为EST,D1序列直接拟合得到初值记为FIT.从表8中可以看出,两者效果类似,精确度都比较高.这说明迭代初值对本文所提出的算法影响并不大,只要确定状态变量(K,B)的数量量级,在线预测算法会迅速地根据估计误差调整状态变量K或者B,达到快速收敛的效果.表8MPEG-4用CIF序列估计D1序列拟合初值(EST)以及用D1序列拟合选取初值(FIT)的预测绝对误差均值视频序列预测方法CityFIT1.361.251.341.602.18CrewFIT4.305.104.524.874.74HarborFIT2.562.231.941.931.77IceFIT3.113.142.382.312.11对算法在线运行复杂度进行分析,一旦通过离线拟合确定了迭代控制阈值和状态变量迭代初值,在线运行的过程中只需要通过一次加法和一次乘法便可获得计算复杂度预测值,而状态变量的修正过程也只需两次加法和一次乘法.在本实验所用的DSP环境下,算法的在线运行开销为103cycles/帧.5.2.2H.264压缩码流P帧在线预测结果采用同MPEG-4压缩码流计算复杂度估计类似的方法,选取CIF格式测试序列Akiyo、Hall、Coastguard、Foreman、Mobile、Crew作为测试序列,并按照文献[9]中所述方法获取迭代控制阈值及迭代初值Δ1=9.5×106-B(i-1),Δ2=1.26×107-Page13B(i-1);(KP,BP)=(1109.99,1.061×107).将CIF格式测试序列(Ice、Harbor、Crew和City)在不同码率下(200kbps、400kbps、500kbps、600kbps和800kbps)进行压缩,对用H.264编码标准进行编码的测试序列进行在线解码复杂度动态预测,实验结果如表9所示.表9采用H.264编码标准的不同视频测试序列在视频序列Akiyo0.530.761.141.890.80Hall0.760.630.630.610.89Coastguard0.550.430.550.770.96Crew1.601.651.651.682.05Foreman0.680.780.901.161.59Mobile0.510.390.740.640.87从表9可以看出,本文提出的P帧解码复杂度动态预测算法对H.264编码标准也非常有效,在线估计误差不超过2%.虽然MPEG-4和H.264采用了不同的编码方式,但是本算法是从解码系统机理出发,利用相邻帧之间的相关性来揭示系统状态变量随视频内容变化的规律;是从物理层面引出的一种解析方法,满足解码器运行规律,因此预测效果非常好.对于采用其它编码方式进行编码的压缩码流(如基于感兴趣区域编码的ROI[11]),只要其采用基于MC-DCT混合编码框架,相邻帧之间状态空间就具有极强的相关性,就可以利用本文所提出的状态空间的变化规律进行求解,算法普适性强.图8CIF格式测试序列状态空间变化图5.2.3解码系统状态变量轨迹分析为了突出本文所提出的状态变量的物理含义,本节将给出采用状态方程对状态变量进行求解后所得到的每一帧视频对应的状态变量值.图8给出了在码率为500kbps时,采用MPEG-4编码标准进行压缩的各测试序列的状态变量在状态空间的轨迹.从图8可以看出,当视频运动简单,没有突变时,表征视频预测模式、运动矢量复杂度的状态变量K值的变化幅度较小,如Akiyo、Hall、Mobile序列,K值变化在30以内;当视频出现突变时,如Coastguard序列在80帧附近发生一次镜头切换,K值发生大幅度跳跃;Foreman序列从180帧到230帧发生了数次镜头切换,K值也发生了几次跳变;对于Crew序列,由于全序列的运动非常复杂,K值的切换也是非常明显的.当视频运动趋于稳定后,K值也基本稳定.之后,解码器将在某一K值平面上通过更新B值(即残差的变化)寻求最优位置,表现在图形中就是B值在某一个K值平面中震荡.这也进一步体现了编码信息与被编码残差之间质与量的关系.值得注意的是,在图8中Mobile、Akiyo序列的K值平面在开始处发生过大幅度切换,这主要是因为迭代初值所表征的视频内容的特征与当前序列的特征不一致所导致,解码器必须通过更新K值平面的方法迅速逼近最优位置.一旦逼近最优状态平面,将通过小幅调整B的方法精细搜索最优位置.Page146结论本文给出了一种基于状态变量法的视频流解码计算复杂度估计方法.首先通过统计分析,对解码计算复杂度与帧长之间的关系进行建模,得到解码计算复杂度与帧长之间的线性关系,并分析得出模型系数作为状态变量所包含的物理含义,从而将在线模型系数求解问题转化为对系统状态变量进行更新的问题.通过统计分析,发现对于I帧,其状态变量值仅与视频幅面相关,可通过离线分析方法获得状态变量统计均值,在线运行过程中直接利用该值对解码计算复杂度进行估计.对于P帧,则利用相邻视频帧编码信息及残差的变化特点,结合状态变量所表征的物理含义,将相邻视频帧的相关性转化为状态变量随视频内容变化而变化的规律,并以预测误差作为反馈动态调整相邻P帧状态变量值,最终快速高效地预测解码计算复杂度.本方法采用简单的线性模型对解码复杂度进行估计,系统输入(帧长)可由压缩码流直接获得,解码器设计流程简单、码流兼容性好;能对系统状态变量进行动态更新,及时反映视频内容变化,估计结果精确度高;进行在线更新时仅需利用上一次更新结果做简单运算,系统运行时开销小,特别适合资源受限的嵌入式系统.最后,本文所提出的状态变量法利用视频的语义层信息,通过挖掘状态的语义层含义直接构建系统状态方程,摒弃了复杂的数学建模.所得到的状态方程直接反映了多媒体解码系统固有的物理特性,因此有非常好的效果.这一建模方法为对其它多媒体系统进行理论分析和建模提供了新思路.
