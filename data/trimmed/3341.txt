Page1基于非线性预处理网络流量预测方法的泛洪型DDoS攻击检测算法杨新宇杨树森李娟(西安交通大学计算机科学与技术系西安710049)摘要该文提出了一种基于非线性预处理网络流量预测方法NLPP(Non-LinearPreprocessingNetworkTrafficPrediction)的分布式拒绝服务DDoS攻击检测算法,该算法是在分析DDoS攻击的网络流量特性基础上提出的,由一个基本检测算法和一个非线性预处理网络流量预测方法组成.通过与两种经典算法———基于VTP的检测算法和基于小波分析的检测算法对比分析,证明文中提出的算法有比这两种经典算法更高效的检测结果.只要参数选取合适,该算法可以达到100%的检到率和100%的正确率.该算法在引入非线性预处理网络流量预测方法NLPP后,大大缩短了检测延迟,可以很好地实时检测DDoS攻击.关键词分布式拒绝服务;非线性预处理;网络流量预测;实时检测1引言SYN-flooding、ICMP-flooding、UDPflooding以及DNSflooding等泛洪型分布式拒绝服务攻击Page2要及时采取有效的措施阻止DDoS攻击,就必须在DDoS攻击发生的初期对其进行检测.传统的检测方法需要一定的先验知识,难以区分突发正常流量与DDoS攻击,并且这些方法都是基于一定假设,并不可靠[2].基于流量的方法是DDoS攻击检测方法的一个新的发展方向[3-6].DDoS攻击发生时,其流量将呈现出与正常情况不同的特征.目前基于流量的DDoS攻击检测方法的研究已经取得一些进展.Wang等利用SYN-FIN包配对的思想,提出针对SYN-Flood攻击的检测方法,对进入主机的SYN包和流出主机的FIN包进行计数,以它们的差值的绝对值是否明显大于0为判断依据[7].统计模型是比较常见的模型,利用流量的期望值、方差等统计值的分布配合假设检验来发现攻击[8].基于VTP(方差-时间图)的方法是统计模型中的一种经典模型.VTP方法实时计算Hurst参数,然后由Hurst参数的变化来判断DDoS攻击[9].小波分析的方法引入DDoS攻击检测是基于流量检测方向的一个突破,能实时有效地检测DDoS攻击,其中比较经典的小波分析方法见文献[10-13].文献[10-11]都是用小波分析法求解Hurst参数,然后根据Hurst参数的变化来判断DDoS攻击.文献[12]提出使用离散小波变换后,根据Hurst参数的变化来检测攻击.文献[13]提出了一种基于连续小波变换的DDoS攻击检测技术.本文通过研究DDoS攻击发生的网络流量特点,发现DDoS攻击时的网络流量呈增大和趋于平稳的趋势,即呈现高平台性.根据上述流量特点,我们提出了一种基于网络流量突发的DDoS攻击检测算法,并且引入非线性预处理网络流量预测方法NLPP(Non-linearPreprocessingNetworkTrafficPrediction),加快了检测到DDoS攻击的时间.另外,通过实验对比分析了基于NLPP的方法与经典检测算法———基于VTP方法[9]和基于小波分析方法[10]的检测效果,证明了基于NLPP的方法有更好的检测效果.本文第2节研究DDoS攻击发生时网络流量的特点;第3节首先提出基本的基于网络流量突发的DDoS攻击检测算法;其次,将非线性预处理网络流量预测方法NLPP引入到检测算法当中,并对非线性预处理网络流量预测方法NLPP进行详细介绍;最后,给出检测算法中关键参数的选取方法;第4节给出基本检测算法与引入非线性预处理网络流量预测算法的检测结果,并且与经典算法的检测结果作对比分析;第5节是对全文的总结以及下一步的工作.2DDoS攻击发生时网络流量特点2.1模拟生成DDoS攻击流量DDoS攻击发生不易被察觉,而且一旦大规模攻击发生,往往会造成严重的网络资源消耗.为了研究DDoS攻击发生时网络流量的特点,我们采用NS-2模拟仿真软件模拟生成SYN-floodDDoS攻击发生时的网络流量.在模拟网络中一共有20个攻击节点、两个正常节点和一个被攻击节点.在3500s的模拟过程中一共发生了5次DDoS攻击,攻击起始时间、持续时间和攻击节点个数如表1所示,NS-2生成的流量如图1所示,该流量我们命名为DDoS-Attack-Traffic.表1攻击的起始时间、持续时间和攻击节点个数攻击发起时间/s持续时间/s攻击节点个数ABCDE2.2DDoS攻击发生时网络流量特点DDoS攻击发生时网络流量呈增大和趋于平稳的趋势,即呈现高平台性.结合统计量描述就是流量测量值远大于流量的整体平均值(如图2所示),并且网络流量的差分方差在突发后的局部范围内呈现衰减的趋势(如图3所示).在图2中,实线和虚线分别表示流量和流量平均值.可以看出在攻击过程中原始流量远高于平均Page3流量,而正常情况下原始流量在平均流量值附近波动.图3中的实线代表网络流量的差分方差(定义见式(5)),差分方差在攻击过程中增大.需要指出的是,概率学中的方差计算公式是其中,X(i)为i时刻观测值,珡X是序列X(i)的期望值.在实际计算时,流量的期望值由流量的均值代替,均值由每次得到的流量数据推算一次得到.使用原始数据的差分序列的方差能够更好地反应数据波动的情况,定义原始序列的差分序列为W(i).t-1∑t珨W=1t-1∑t=1=1t-1(X(2)-X(1)+X(3)-X(2)+…+=1t-1(X(t)-X(1))limt→当t→时,珨W→0,因此在计算时认为珨W为0以简化计算.var_W表示的就是原始序列的差分方差,定义如下:var_W(i)=1由差分方差的表达式(5)和方差的表达式(1)可以看出,差分方差比方差更容易计算得到,因此在判定DDoS攻击是否发生时采用计算网络流量的差分方差来代替方差.3DDoS攻击检测算法3.1基本检测算法点,我们提出了一种递推的攻击检测算法:根据主机受到DDoS攻击时接收到的流量的特(1)统计量的计算由于算法实时性的要求,各统计量均采用递推方式完成.假设在t时刻,原始流量为S(t),整体均值为s_u(t),流量的差分值为w(t),差分方差为var_w(t),根据式(4)可知,w(t)的均值可以认为是0.对统计量的计算如下:s_u(t)=1var_w(t)=1为了衡量t时刻流量的大小,定义函数c(t):烄c(t)=烅烆式(9)定义了一个隶属函数.其中low×s_u(t)表示认为流量“大”的下限,即当流量小于平均流量的low倍时,流量不大,也即流量隶属于“大”的程度为0;区间[low×s_u(t),high×s_u(t)]的意义是当流量S(t)属于这个区间时认为流量大,“大”的程度由函数S(t)义;high×s_u(t)表示能够忍受的流量的上限,当流量超过平均流量的high倍时,流量很大,即流量隶属于“大”的程度为1.(2)攻击的判定根据式(9)对c(t)的定义,当c(t)=0时流量隶属于“大”的程度为0,所以没有攻击发生.如果t时刻c(t)>0,则认为该时刻为攻击疑似点,此时启动攻击判定过程以确定是否有攻击发生.Page4在算法描述中,定义一个变量:expected_step.当连续出现攻击疑似点的个数与expected_step相等时就认为发生了攻击.expected_step参数过小会造成检测算法误报的情况,但是expected_step参数过大会造成检测算法灵敏度降低,出现漏报的情况,这在检测攻击的过程中是一对矛盾.如果要求检测灵敏度高,则容易出现误报的情况.而如果要求检测准确,则相应的检测灵敏度会降低.另一个参数accumulate表示的是攻击检测过程中连续的攻击疑似点出现的个数,当accumulateexpected_step时就认为有攻击发生.accumulate参数按照如下规则计算:如果攻击强度增加,accumulate自增1,否则自减.对t时刻攻击强度的判断用下面的伪代码表示:foreacht-thtimeslotofdetectiondoexpected_step=3;if(c(t)>0){else{}对上面伪代码的解释:(1)如果流量隶属于“大”,且差分方差增大,说明发生了流量突增,可能是攻击的开始,accumulate增加1;(2)如果t时刻差分方差相对于t-1时刻变大或者不变,说明流量波动程度没有降低,可能有两种流量波动情况:①流量增大,此时c(t)c(t-1),攻击可能性增加,Attack(t)取c值较大者即c(t);②流量减小,此时c(t)<c(t-1),攻击可能性减小,Attack(t)取c值较小者,为c(t);(3)如果差分方差变小,说明流量趋于平稳,攻击可能性增大,因此Attack(t)取c值较大者;(4)如果流量不隶属于“大”,将accumulate赋值为0,程序进入下一个检测周期;(5)accumulate=expected_step和Attack(t)=Attack(t-1)同时发生,说明攻击可能性在expected_step个周期内持续增加或者至少保持不变,而且这种可能性仍然有增加趋势,所以发出报警;(6)如果accumulate=expected_step,但是Attack(t)<Attack(t-1)说明尽管攻击可能性已经增加或已经维持了一段时间,他在t时刻有所下降,因此程序继续观察,等待进一步确认.根据以上对统计量的递推和推断过程,t时刻需要的数据只有S(t-1)、s_u(t-1)、var_w(t-1)、c(t-1)和Attack(t-1),而S(t)、s_u(t)、var_w(t)、c(t)和Attack(t)将被存储,供下一个检测周期使用.3.2引入非线性预处理网络流量预测NLPP的检测方法将网络流量预测方法NLPP引入到DDoS攻击检测的主要思想是利用预测值得到比当前观测流量更长的序列,从而缩短发现攻击的时间.NLPP(1)基于非线性预处理网络流量预测方法———一直以来,时间序列模型因其理论发展成熟及易于建立的特点而成为分析和预测网络流量的重要工具.从短相关时间序列模型AR、ARMA、ARIMA到长相关时间序列模型FARIMA[14]、k-factorGARMA[15],研究者对时间序列模型预测网络流量进行了深入的研究.但是随着对网络流量特性研究的深入,采用时间序列模型分析和预测暴露出一些缺点和不足.首先,建立时间序列模型所广泛采用的基于二阶统计量的处理方法,用于对网络流量进行建模时存在一定的局限性.近年来在对网络流量特性研究时发现,网络流量与α-stable分布相一致[16].α-stable分布是唯一一类构成独立同分布随机变量之和的极限分布.高斯分布是α-stable分布的一种特殊情况,即特征指数α=2.而当特征指数不断减小,对应的α-stable分布数据集中存在越来越多突发点.从采集到的网络流量数据集时间序列图形上可以看到明显的突发情况.正是这些突发点的存在,使网络流量偏离高斯分布,二阶统计量不再是有限值,造成了采用时间序列模型预测网络流量失效.通过已知数据估计模型参数来建立时间序列模型,使用基于二阶统计量方法使估计误差最小化,往往采用的是最小二乘准则.在高斯分布假设下,最小二乘准则是适当的,但对于非高斯分布的α-stable分布时间序列,最小二乘准则往往不再适用.最主要的原因是由于最Page5小二乘准则对于数据中为数不多的较大误差缺乏韧性.最小二乘准则被使用时,它往往忽略相对较小的误差,而尽量使较大的误差最小化.网络流量中存在一部分极端观测值,在采用最小二乘准则对网络流量建立模型时,往往由于最小二乘准则对这些极端观测值缺乏韧性而导致无法准确地建立网络流量数学模型.其次,网络流量存在长相关特性[17],许多研究者采用FARIMA(p,d,q)模型对网络流量进行分析和预测.FARIMA(p,d,q)模型是ARIMA(p,d,q)模型的一种自然延伸,它能够同时刻画出数据集的长相关特性与短相关特性.但是它的建立过程十分复杂,因此在建立FARIMA模型时,研究人员利用在高斯假设下得出的相关性结论对其建立过程进行了简化.该结论表示为:hurst=0.5表示短相关而0.5<hurst<1表示长相关.利用该结论首先估计hurst参数,通过d=hurst-0.5估计FARIMA(p,d,q)的d参数.有了d参数后去除数据集中的长相关性,使数据集只具有短相关特性,进而以估计ARMA(p,q)参数的方法估计模型剩余的参数.但是存在明显突发的网络流量偏离了高斯分布而符合α-stable分布,上述关于相关性的结论是在高斯分布假设下得出的,在非高斯分布假设下,还没有统一的关于相关性的类似结论[18].例如当数据集是LFSN时,hurst=1相关.因此,采用基于高斯分布假设得出的相关性结论建立FARIMA(p,d,q)模型并不能刻画网络流量的长相关特性.图4非线性预处理前后网络流量特性分析图4中(a)图和(b)图显示的是预处理前后时间序列图,(a)图突发明显而(b)图突发程度明显降低.鉴于上述局限性,我们提出了基于非线性预处理网络流量预测方法.非线性预处理就是通过非线性变换预处理网络流量,使预处理后的时间序列具有有限的二阶统计量,然后利用通常的最小均方(LMS)等方法进行建模和预测.该方法具体描述如下:首先,通过非线性预处理手段抑制网络流量中显著的突发现象;其次,对非线性预处理后的数据建立LMS自适应ARIMA(p,d,q)模型进行预测;最后,将LMS自适应ARIMA(p,d,q)模型的预测值通过恢复函数得到网络流量预测值.非线性变换函数选取必须遵循以下两点:(1)在待变换数据所处区间内是单调函数.这样才能够保证待变换数据集中所有点与变换后数据是一一对应的关系,保证非线性预处理过程与恢复过程的正确性.(2)非线性变换函数与恢复函数易于实现.由于网络流量预测大多是在实时的情况下进行的,因此复杂的非线性变换函数和恢复函数会带来过多的时间耗费.函数,指数函数为恢复函数.为了证明通过非线性预处理后的数据集已经消除了明显的突发现象,我们选取http://ita.ee.lbl.gov/网站上提供的网络流量lbl-tcp-3(时间粒度为1s)进行非线性预处理前后数据特性对比分析.对该网络流量进行非线性预处理,预处理前后数据特性对比如图4所示.综合上述要求,选择对数函数为非线性预处理(c)图和(d)图是预处理前后无限方差检验图,(d)图显示随着样本数的增加估计的方差收敛,证明预处Page6理后数据二阶统计量存在.(e)图和(f)图给出了数据统计柱状图,(g)图和(h)图显示的是预处理前后高斯分布检验图.从(f)图和(h)图可以明显地看出,预处理后的数据已基本符合高斯分布.将LBL-TCP-3流量划分为建立模型所需的学习数据集和预测数据集.学习数据集为500个数据点,预测数据集选取为501~7100,预测区间长度为200,一共进行33组实验.采用NLPP预测方法和表2LBL-TCP-3流量预测误差MAPE比较NLPP53.05753.84345.16268.07190.60848.39474.49666.57276.85865.56878.891AR(3)73.55759.02453.54995.659126.1870.467133.15107.45100.38102.18103.5NLPP59.47943.3854.28156.79360.99640.37837.5133.97357.9452.62647.138AR(3)69.6914974.4980.09969.36838.19435.7335.31458.71469.08947.694NLPP57.86649.82761.79960.66160.57542.30152.44145.08355.30847.85653.821AR(3)67.52861.95390.69667.29568.74344.79156.79953.12965.73350.46971.169(2)引入NLPP的攻击检测算法添加网络流量预测后,要对前面提出的算法进行一定的调整.得到当前流量的预测值p_S(t+1)后计算其差分方差的预测值pvar_w(t+1),把pvar_w(t+1)看作var_w(t+1).递推公式改为pvar_w(t+1)=1p_S(t+1)c(t+1)=0,p_S(t+1)<low×s_u(t)烄(high-low)×s_u(t)-low烅p_S(t+1)∈[low×s_u(t),high×s_u(t)]1,p_S(t+1)>high×s_u(t烆用pvar_w(t+1)和c(t+1)代替3.1节检测流程中的var_w(t)和c(t).经此修改,在未包含流量短期预测时,如果在t+1时刻检测到攻击,t时刻就可以得到t+1时刻的相关数据,检测到攻击,从而提前了发现攻击的时间.如果采用多步预测,就可以提前更长发现攻击的时间.然而,这种发现攻击时刻上的提前不是无限制的.一方面,预测步数越多,误差也就越大;另一方面,只有当攻击真正发生时,LMS自适应AR(3)模型方法进行预测.对比两种预测方法的平均百分比误差(MeanAbsolutePer-centageError,MAPE)(如式(10)所示),结果如表2所示.NLPP方法取得了明显优于LMS自适应AR(p)模型的预测结果,MAPE误差平均降低了17.6%.预测结果才对检测是有价值的.3.3关键参数的选取(1)low参数从算法的定义可以看出low参数直接影响到检测算法中检测的点是不是攻击疑似点.因此它的选取是检测算法成功与否的至关重要的一点.接下来将根据正常流量分析出网络流量的正常模式帮助确定关键参数low.low参数的大小决定了一个检验点是不是疑似的攻击点,low参数选择过小容易产生误报的情况,也就是疑似点增多导致的;low参数选择过大则容易产生漏报的情况,因为一些攻击点被认为是正常流量而忽略.该检测算法检测的是流量突然增大的情况,因此通过估计正常流量的均值,以及分析正常流量每一时刻和均值之间的关系,就可以发现正常流量的行为模式.下面对DDoS-Attack-Traffic流量进行分析,选取关键参数low.在DDoS-Attack-Traffic流量中从1s~549s都是正常通信下产生的网络流量.将DDoS-Attack-Traffic流量1s~549s那段流量进行排序,估计该段流量的均值且计算每一时刻的流量是均值的多少倍,用Multy(t)(如式(13)所示)表示.画出Multy(t)的分布图,如图5所示.图5中标出的点表示正常流量中的98%的单位时间流量值都小于均值的1.1倍,因此如果将Page7low参数定为1.1,意味着在检验过程中认为单位时间内超过平均流量1.1倍的流量值是疑似攻击点,同时这些疑似点中包含正常流量的可能性很低,这样可以降低误报率.另一方面low参数过大会产生漏报的现象,因此在确定了low参数的下限之后一般就采用该下限值作为low的值,或者略微上调low的下限值就作为low的参数值,根据经验调整的范围一般在0.05~0.15之间.(2)expected_step参数expected_step参数决定了检测到攻击的时间,当疑似攻击点的个数等于expected_step参数时发出攻击报警.因此,当expected_step参数越小检测到攻击的时间越短,但是同时误报的可能性也在增加;另一方面,expected_step参数越大检测到攻击的时间越长,降低误报率.但是当expected_step参数值过大的时候,短时间的攻击不会被检测出来,因为检测到的攻击疑似点的个数可能比expected_step参数要小,因此不会报警,发生漏报.另外,expected_step参数变化也需要对应改变low参数.因为expected_step参数变小,意味着更少的攻击疑似点就可以判定有攻击发生,因此制约着攻击疑似点的low参数要适当地上调,将判定为攻击疑似点的条件变得更加严格一些,以降低误报率.在采用了短期预测算法的检测算法中,虽然expected_step参数与不采用短期预测算法时取值一样,但是由于加入了预测算法,提前计算了一步攻击疑似点,在判断是不是攻击的时候就相当于多提供了一个攻击疑似点,因此加入一步预测值攻击检测算法的expected_step值相当于相同条件下未加入预测方法攻击检测算法的expected_step-1.在加入预测算法攻击检测算法中的low参数值应比未加入预测算法攻击检测算法的low参数值略微上调.在本文的实验中选取expected_step参数为3.3.4复杂性分析本文提出的DDoS攻击检测算法是以单位时间为周期来运行检测算法.因为检测算法是一个顺序过程,不包含任何循环,所以整个检测算法的时间复杂度是T(n)=O(n),n=t.如果将流量短期预测算法NLPP加入到检测算法中,在t时刻进行检测之前首先要进行流量预测.因为预测过程本身也是顺序的,所以检测算法的时间复杂度仍然是T(n)=O(n).检测算法每一次运行都需要保存一些值以供下一个检测周期使用,例如S(t)、s_u(t)、var_w(t)、c(t)、Attack(t)、p_S(t),如果将这些值都保存下来,需要的存储空间会线性增加,空间复杂度为S(n)=O(n).然而这些量在以后的计算中并不会用到,这样新的值可以覆盖过期值,空间复杂度降为S(n)=O(1).4实验结果和讨论4.1基本的检测算法(即未引入NLPP的检测算法)我们选择DDoS-Attack-Traffic作为实验流量.由上面的分析可知low参数的下限为1.1,为了验证该下限的正确性,分别选取low=1.05和low=1.1,其它参数相同,应用不采用短期预测的检测算法进行实验.(1)选择low=1.1、expected_step=3、high=3.5,得出攻击检测结果如图6和表3所示.图6low=1.1、expected_step=3、high=3.5时的表3犾狅狑=1.1、犲狓狆犲犮狋犲犱_狊狋犲狆=3、犺犻犵犺=3.5时的攻击编号起始时刻检测到攻击的时刻/s延迟/sABCDE根据前面介绍的关键参数选择办法确定的low参数和expected_step参数判断出的攻击正确率为100%,没有发生漏报和误报的情况.Page8(2)选择low=1.05、expected_step=3、high=3.5,得出攻击检测结果如图7和表4所示.图7low=1.05、expected_step=3、high=3.5时的表4犾狅狑=1.05、犲狓狆犲犮狋犲犱_狊狋犲狆=3、犺犻犵犺=3.5时的攻击编号起始时刻检测到攻击的时刻/s延迟/s-AB--CDE将low参数值改为略小于low下限值后,出现了3次误报,证明了3.3节中提出的low参数选择办法是有效的.4.2引入NLPP的检测算法为了与未采用流量预测的基本攻击检测方法进行比较,在相同参数的情况下进行了实验.另外,由于加入了1步预测算法,因此适当的增加low的值,取low=1.2再进行了一次实验.(1)NLPP流量预测方法①选择low=1.1、expected_step=3、high=3.5,得出的攻击检测结果如图8和表5所示.图8low=1.1、expected_step=3、high=3.5时的表5犾狅狑=1.1、犲狓狆犲犮狋犲犱_狊狋犲狆=3、犺犻犵犺=3.5时的攻击编号起始时刻检测到攻击的时刻/s延迟/sABCDE检测攻击的正确率为100%,没有发生漏报和误报的情况,同时检测到攻击的时间也有所提前.②选择low=1.2、expected_step=3、high=3.5,实验结果同参数low=1.1的情况,见图8和表5.对比未加入预测的攻击检测算法,加入预测过程后,正确检测到攻击的时间提前,即延迟缩短.(2)LMS自适应AR模型①选择low=1.1、expected_step=3、high=3.5,得出的攻击检测结果如图9和表6所示.图9low=1.1、expected_step=3、high=3.5时的表6犾狅狑=1.1、犲狓狆犲犮狋犲犱_狊狋犲狆=3、犺犻犵犺=3.5时的攻击编号起始时刻检测到攻击的时刻/s延迟/sA-BCD-E对比未加入预测的检测算法,检测延迟有所缩短,但是出现了两次误报的情况.3.5,得出的攻击检测结果如图10和表7所示.②选择low=1.2、expected_step=3、high=图10low=1.2、expected_step=3、high=3.5时的表7犾狅狑=1.2、犲狓狆犲犮狋犲犱_狊狋犲狆=3、犺犻犵犺=3.5时的攻击编号起始时刻/s检测到攻击的时刻/s延迟/sABCDE在相同参数的条件下,采用两种网络流量预测方法的攻击检测算法实验有着不同的检测精度.采用AR模型的检测方法由于预测方法精度不高,无Page9法为检测过程提供准确网络流量未来信息,因此没有检测出攻击C,出现了一次漏报.而采用NLPP预测方法的检测算法由于NLPP预测方法可以提供更加准确的网络流量未来信息,因此有更准确的检测精度.4.3与经典检测算法的对比为了对比效果准确,下面实验中的检测数据都使用DDoS-Attack-Traffic,与前面的实验保持一致.(1)基于VTP(方差-时间图)方法的DDoS实用基于VTP的方法[9]来检测DDoS攻击,具体检测参数选取为:检测窗口W=400,步长step=2,聚合度m=15,检测结果如图11和表8所示.时攻击检测图11基于VTP(方差-时间图)方法的DDoS攻击检测效果图表8基于VTP(方差-时间图)方法的DDoS攻击检测效果表攻击编号起始时刻/s检测到攻击的时刻/s延迟/sABCDE表104种方法检测效果对比未引入短期预测方法5引入短期预测方法小波分析方法基于VTP方法注:检到率=检测到正确的攻击个数/待检测攻击总数,漏检率=1-检到率,正确率=检测到正确的攻击个数/检测到的攻击总数.4.4实验结果小结(1)参数选择总结通过分析正常流量模式,为检测算法应用于不同网络流量攻击检测提供了选择参数的下限,从而减少了检测算法在使用时的盲目性.经过实验证明,该方法是有效的,提供的参数下限降低了检测算法中出现误报的可能性.攻击检测算法之间的比较(2)不采用预测的攻击检测算法与采用预测的采用网络流量预测的攻击检测算法明显地比不(2)基于小波分析方法的DDoS实时攻击检测用基于小波分析的方法[10]来检测DDoS攻击,具体检测参数选取为检测函数为Db3,变换尺度scale=10,检测窗口W=400,步长step=2,检测结果如图12和表9所示.图12基于小波分析方法的DDoS攻击检测结果图表9基于小波分析方法的DDoS攻击检测结果表攻击编号起始时刻/s检测到攻击的时刻/s延迟/sA-B-CD--E(3)4种方法的检测效果对比4种方法的检测效果对比如表10所示.由表10可以看出,小波分析方法具有最小的平均延迟,但是正确率太低,即误报太多.而引入短期预测的方法,在较小的延迟下,可以有100%的检到率和正确率,其高效的检测效率是很明显的.5554采用网络流量预测的攻击检测算法检测到攻击的延迟要短,提高了攻击检测的灵敏度.但是,由于预测毕竟会引入误差,如果不适当调整low参数,将判定为攻击疑似点的条件变得严格一些的话就会增加误报的次数.因此在使用采用网络流量预测的攻击检测算法时通过分析正常流量模式得到的low参数的下限值要适当的调整才能在采用流量预测的攻击检测算法中使用.间的比较(3)包含两种流量预测方法的攻击检测算法之Page10在相同参数条件下,采用NLPP网络流量预测方法比采用AR模型预测网络流量时取得的检测效果要好,而且稳定性要高一些.主要表现在,采用AR模型预测网络流量的检测算法对low参数更加敏感,略微改动low参数就造成了漏报或者误报.而采用NLPP预测网络流量的检测算法则没有出现这样的情况.究其原因,在基于网络流量的攻击检测算法中引入预测的网络流量意味着为检测算法提供了未来的流量信息,而通过第4节的实验证明,NLPP网络流量预测方法比使用时间序列模型方法更加准确地预测了网络流量,因此NLPP网络流量预测方法为检测算法提供了更加准确的网络流量未来信息,从而取得了更好的检测效果.5结论本文首先分析了DDoS攻击发生时网络流量的特点,根据该特点设计了一种基于网络流量突发的DDoS攻击检测算法.经过实验证明该检测方法可以成功地检测到泛洪型DDoS攻击,并且比经典检测算法(基于VTP的方法和基于小波分析的方法)有更好的检测结果.为了缩短发现攻击的时间,采取将网络流量短期预测方法与该检测算法相结合的办法,取得了预期的实验结果.值得指出的是,为了给检测算法提供更准确的网络流量未来信息,我们在分析时间序列模型预测网络流量局限性的基础上提出了基于非线性预处理网络流量预测方法NLPP.在文中通过实验证明了NLPP预测方法确实能够提供比AR模型方法更准确的网络流量未来信息.在后续的工作中我们将会在以下两个方面做进一步研究:攻击检测算法中的关键参数选取方法仅仅给出了参数的下限值,下限值可以降低检测算法的误报率,但是对于如何选取参数的上限值,减少漏报情况还有待于进一步的研究;NLPP网络流量预测方法中,采用的仍旧是短相关模型对网络流量进行预测,可以进一步研究非线性预处理长相关模型.
