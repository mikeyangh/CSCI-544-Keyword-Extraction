Page1基于时态数据库的极小子结构逻辑系统刘冬宁1),2)汤庸3)滕少华1)林哲2)1)(广东工业大学计算机学院广州510006)2)(中山大学逻辑与认知研究所广州510275)3)(华南师范大学计算机学院广州510631)摘要逻辑是知识表达的重要方法,但由于时序性知识与时间属性知识交叉应用的复杂性,其对时态数据库支撑一直不尽如人意.目前时态数据运算体系不完备,时态关系演算缺乏系统和有力的逻辑与代数理论支持.为此,文中从子结构逻辑出发,针对时态数据库及其信息处理中关键的知识推理、时态操作与函数依赖等内容,构建了一个极小的(最小的)子结构逻辑系统TDLmin,其恰好等价于传统的数据库函数依赖Armstrong规则.TDLmin系统能在逻辑语义模型中对时序性、时间属性进行表达,而在句法逻辑系统将时间剥离,从而既表达了时态知识,对时态操作进行处理,又降低了逻辑系统的复杂度,使得逻辑系统的时间复杂度为P-time(O(n2)).而该逻辑系统还可与传统的Allen方法进行对接,使得相关时态查询所需的时间代价为传统非时态查询的时间加上一个复杂度仅为O(n)的线性时间,从而使得系统具有更强的普适性和应用前景.关键词时态数据库;子结构逻辑;时态查询;函数依赖1引言时态信息的需求与技术一直伴随着数据库技术的发展而产生和发展.时态信息技术仍处于研究和发展阶段,现有时态数据库(TDB)共性概念、研究方法仍存在不足,主要是因为时态数据运算体系不完备、时态关系演算缺乏系统和有力的数学理论支持而引起[1-2].逻辑是知识表达的一种重要方法,然而逻辑学对时态数据库与时态信息处理方面的支撑却一直不如人意.1994年Gabbay等人论证了公理化时态逻辑及其证明论方法不适合信息系统中的时态数据库建模[3],至此信息系统若采用时态逻辑作为时态知识的表达方法,一般采用的是非公理化时态逻辑[4],但其符号演算和推理能力强,信息处理能力弱,与时态数据库和时态信息处理研究相脱离,没有涉及时态知识的数据库模型.此外,除了非公理化时态逻辑外,也有许多一阶逻辑、区间逻辑、描述逻辑和动态逻辑等方面针对时态知识的数据库模型及相关数据操纵的逻辑学研究与应用[5-8].但这些研究主要基于不同的研究内容,研究背景与应用也不尽相同,没有形成统一的观点、模型与方法论,使得针对时态数据库、时态信息处理与时态数据运算体系的逻辑学研究在系统化方面仍然是一个开问题[9].这是由于时态知识的复杂性造成的,时态知识一般分为时序性知识和时间属性知识.其中,时序性知识表示了在知识表达、推理和运算过程中的序性关系[10],这类时态知识与时态推理中所应遵循的外部秩序有关.时间属性知识则表示了在推理与计算中,时间作为内因的表现形式.时序性知识与时间属性知识的交叉出现,导致了时态知识的复杂性,使得在时态数据库方面,难以使用统一的逻辑工具作为表述,这也是由于传统逻辑方法止步于Hilbert风格的研究,忽略了知识内部结构,及表达与推理的结构特性与资源敏感特性,由此影响了系统的判定性和计算复杂性而造成的.而不可判定或计算复杂度高、代价大的知识表达方法不能被用于信息系统.子结构逻辑是一类构造性逻辑,并将逻辑系统分为结构规则和操作规则.其Gentzen式演算能把逻辑系统“掰”碎了,通过对模态规则、结构规则与逻辑算子(类似时序性知识)的灵活增删,并借助代数语义模型与类型论做类型映射(类似时间属性知识),在表达能力、判定性和计算复杂性方面对逻辑系统进行综合考量[11],子结构逻辑在语义上的近似性能进一步转化为关系代数及相关语义,从而有利于构建时态数据运算体系和数据库建模.为此,本文从子结构逻辑出发,面向时态数据库及其信息处理中关键的知识推理、时态操作与函数依赖等内容,构建了一个极小的(最小的)子结构逻辑系统(我们将其命名为TDLmin,意为MinimumSubstructuralLogicofTemporalDatabase).“极小”主要在于此系统只存在一个类似于传统合取连接词“∧”的连接词“·”和最少的结构规则(2条),并恰好等价于传统的数据库函数依赖Armstrong规则.能在逻辑语义模型中对时序性、时间属性进行表达,而在句法逻辑将时间剥离,从而既表达了时态知识,对时态操作进行处理,又降低了逻辑系统的复杂度.该逻辑系统还可与传统的Allen方法进行对接,使得相关时态查询所需的时间代价为传统非时态查询的时间加上一个复杂度仅为O(n)的线性时间.2逻辑系统及其语义模型2.1问题提出与分析时态数据库中的逻辑研究主要集中在知识表达、时态查询和范式理论3个方面,其中知识表达是基础,又可进一步分为时态完整性约束和知识推理;范式理论是时态数据库设计、抽象数据库模型的重要环节,逻辑学在此起到的作用主要体现在函数依赖和概念设计两方面;而时态查询问题是核心所在,是当前时态数据运算体系不完备,时态关系演算缺乏系统和有力的数学理论支持的具体体现,其研究可进一步细分为查询操作和时态关系代数.针对时态查询的逻辑表达方法,我们举例说明.表1中查询“仅在一个企业并且仅在一个部门工作过的员工”,如使用传统非公理化时态逻辑的表达方法,可将其表示为时间快照(Snapshot)和时间戳(Timestamp)两种形式,如下:(1)Snapshot:◆◇(c,d.Workplace(x,c,d))∧c,d.(◆◇Workplace(x,c,d)∧c≠c∧d≠d)(其中c表示company,d表示department).(2)Timestamp:c,d,t.Workplace(t,x,c,d)∧c,d,t.(Workplace(t,x,c,d)∧c≠c∧d≠d)(其中c表示company,d表示department).这两种方法是基于时间点的,形式晦涩,缺乏直观性,而时态逻辑又具有较高的计算复杂性,通常都Page3Person_IDPerson_NameCo_ID表1人员工作关系表Per_CoA001A002A002A003A003A003CompanyIBMOracleNotelNotelNotelIBM是PSTIME或不可判定的[12]①,因此不适合对时态查询进行知识表达与推理.传统非经典时态逻辑之所以形式晦涩、计算复杂性高,主要原因是时态关系、时态算子以及时态规则引入句法逻辑,使得逻辑系统在句法层面变得复杂,尽管知识表达能力强,但相应也使得系统更为复杂,并影响了判定性和计算复杂性.针对时态数据库,传统逻辑方法主要在句法层面增加对时间的表示,而语义模型则只简要地以相应的整数、自然数、实数和有理数等序关系,构成时间轴语义模型与逻辑系统对应,如(Z,),(N,),(R,)和(Q,).如能在语义模型中,增加对时间的表示与运算,将句法逻辑对时间的表示转移至语义模型,甚至直接剥离对时间的表示,则能降低句法逻辑系统的复杂度,从而在判定性和计算复杂性方面得到更好的性质,同时通过语义模型对时态知识的表达,也保持了系统的知识表达能力.2.2代数语义模型表1中,人员表(Person)和企业表(Company)两个实体存在联系Per_Co,如图1所示,其主键为Person表的Person_ID和企业表的Co_ID,时间(Time)只是属性(时态数据库中一般不存在时间实体).但是有别于一般属性,时间在此是具有约束性的.例如:Person_ID∧Co_IDTDepartment,表示在时间T的约束下,通过Person_ID和Co_ID能确定人员工作部门,这也是时态函数依赖TFD的一般表示方法[13-14].图1Person-Company-Workplace关系的ER图Person_ID∧Co_IDTDepartment的实质是将Person_ID∧Co_IDDepartment的值映射入相应的时间模型或者时间函数、时间域,也即对时间的表示由时间模型来完成.换言之如果时间模型有足够的时态知识表达能力,那么可用其作为逻辑系统的语义模型,以减少句法逻辑对时间的表示,从而降低句法逻辑的复杂性.逻辑系统的语义模型种类有许多,例如Kripke语义模型、领域语义模型和代数语义模型,其中抽象程度最高的是代数语义模型.针对时态数据库的一般应用(如上例),可对其构建时间代数模型如下.定义1(时间向量集).犠为整数时间轴T上的一个向量集,满足犠=[t1,…,ti,…,tn](1in)令Vec(犠)为犠上的所有向量子集,形如Vec(犠)={[a1,…,an]|t1a1antn}.显然整数时间轴T本身即为这样的一个向量集,空集为这样的一个最小向量集,且犠T.而犠∈Vec(犠)且∈Vec(犠),分别为Vec(犠)上的极大元和极小元.定义2(时间向量集半群).代数结构S=(Vec(犠),∩,)是一个交换半群,其中是Vec(犠)上的偏序关系,∩是Vec(犠)上可交换的二元运算.通过定义2,我们实际得到了一个时间模型,它以时间向量的向量幂集为论域,同时满足偏序的时序关系,符合最基本的时态数据库的时序关系,该模型有且只有一个二元运算,即“∩”.这个运算与逻辑运算中的“∧”合取运算或“·”product运算有密切关系(在切割定理消除部分,我们会对其进行介绍),通过这个时间向量集半群以及“∩”运算,我们可得到一个子结构逻辑系统TDLmin.2.3子结构逻辑句法系统TDLmin系统的公式由原子公式(类型Tp)p,q,r…通过二元连接词“·”构成,逻辑演算矢列形如ΓA,Gentzen系统如下所示.公理:pp(Id).结构规则:ΔAΓ,A,ΠB①MarkK,GertS.AfiniteaxiomatizationofpropositionalPage4ΓCΓ,ΔC(Weakening);Γ,Δ,ΔAΓ,ΔA(Contraction).操作规则:Γ,A,BCΓ,A·BC(·L);ΓAΔBΓ,ΔA·B(·R).TDLmin系统的代数语义模型定义如下.定义3.TDLmin系统的代数结构为G=(M,·,),G是一个交换半群,是M上的偏序关系,并且对所有a,b,c∈M满足:(1)a·aa;(2)ifac,thena·bc.易证得:caandcbiffca·b(iffcb·证明.情形1.ca·biffcb·a由交换性可得;情形2.caandcbiffca·b①左右.因为ca且cb,所以c·ca·b,据定义3(1),得ca·b;②右左.因为aa,据定义3(2),a·ba,因为ca·b,所以ca.据情形1,2,caandcbiffca·b(iffcb·a)在G中成立(简称其为(I)).证毕.定理1(框架可靠性).TDLmin系统相对于代数语义模型G=(M,·,)是可靠的.据定义3各算子的运算规则的对应性,定理1a)在G中成立.易证得.定理2(框架完全性).TDLmin系统相对于代数语义模型G=(M,·,)是完全的.证明.给定一个序列(Sequent)Γ0A0,令S表示该序列中所有公式的子公式集合,p为原子公式.显然,S是一个有穷集,S上的语言为S的子集.定义(M,·,)上的典范赋值f如下所示:我们需要证明的是:(II)f(A)={Γ∈S:ΓA}.施归纳于A的长度:情形1.当A=p时,结论显然.情形2.当A=B·C时:(1)左右.设Γ∈f(B·C).据(I),Γ∈f(B)且Γ∈f(C),据归纳假设ΓB且ΓC,再据(·R),ΓB·C;(2)右左.设ΓB·C.据(·L)与Weakening规则,易证得ΓB且ΓC,据归纳假设Γ∈f(B)且Γ∈f(C),据(I),Γ∈f(B·C).故据情形1,2,(II)f(A)={Γ∈S:ΓA}得证.下证完全性.设Γ0/A0,据(I),Γ0f(A0),又因为Γ0Γ0,再据(II)Γ0∈f(Γ0),所以μ(Γ0)f(A0),所以Γ0/A0.故完全性定理得证.证毕.针对半群G=(M,·,)与时间向量集半群S=(Vec(犠),∩,),我们可定义同态映射如下.定义4.μ在G=(M,·,)上的定义为Tp→Vec(犠),并满足μ(A·B)=μ(A)∩μ(B).由此,运算性得到保持,我们得到TDLmin系统相对于S=(Vec(犠),∩,,μ)的模型可靠性和模型完全性.定理3(模型可靠性).TDLmin系统相对于时间向量集半群模型S=(Vec(犠),∩,,μ)是可靠的.定理4(模型完全性).TDLmin系统相对于时间向量集半群模型S=(Vec(犠),∩,,μ)是完全的.3系统分析与证明3.1查询操作与函数依赖3.1.1查询操作根据TDLmin系统,及其代数结构与时间向量集半群模型,我们实际上使得在赋值μ:Tp→Vec(犠)下,句法逻辑中的公式(类型)映射到了时间模型中,而其自身剥离了对时间的表示,从而降低了句法逻辑系统的时间复杂度,单纯由语义模型完成时间的表达.如果将句法逻辑中的公式(类型)看作是时态数据库的数据表中的属性,我们实际完成了将属性映射为类型,类型映射为时间集,即“attributesastypes,typesastimeset”的工作.由此,时间向量集半群模型既通过偏序关系表达了基本的时序关系与时序性知识,又通过属性-类型-时间集映射表示了时间属性知识,使得相应的对时态知识的表达与操作可单纯由逻辑系统的语义模型完成.据此,我们在表1中查询“仅在一个企业并且仅在一个部门工作过的员工”,实际上就是比较Page5结果.μ(Person_ID·Co_IDDepartment)=μ(Person_ID)是否成立,其查询操作计算过程如下:(1)针对Lee,μ(A001·C001Account)={[2009,Now]}=μ(A001),μ(Person_ID·Co_IDDepartment)=μ(Person_ID)成立,所以Lee满足条件;(2)针对Jack,μ(A002·C002Marketing)={[2009,2009],[2011,Now]},μ(A002)={[2009,2009],[2011,Now]}∪{[2010,2010]}={[2009,2009],[2010,2010],[2011,Now]},μ(Person_ID·Co_IDDepartment)=μ(Person_ID)不成立,所以Jack不满足条件;(3)针对Tom,μ(A003·C003IT)={[2009,2009]},μ(A003)={[2009,2009]}∪{[2010,2010]}∪{[2011,Now]}={[2009,2009],[2010,2010],[2011,Now]},μ(Person_ID·Co_IDDepartment)=μ(Person_ID)不成立,所以Tom不满足条件;(4)综上,满足条件的只有Lee,为查询操作属性-类型-时间集映射的方式,使得时态知识的表达与处理只需通过代数语义模型进行操作,而主要是线性地基于代数和集合的运算,显得直观而有效率.此外,基于子结构逻辑的构造性,我们实际还处理了时态数据库中经典的Now语义过大和过小问题.例如,我们要在表1中查询Tom在2012年、2009年和2014年是否在IBM工作,实际上要比较的是这些时间是否在μ(Person_ID·Co_ID)中,过程如下:(1)针对2012年,因为μ(A003·C003)={[2010,2010],[2011,Now]},并且存在[2011,Now]包含(contain)了[2012,2012]([2012,2012]∈Vec([2011,Now])),所以返回结果为true,Tom在2012年在IBM工作;(2)针对2009年,对于x∈μ(A003·C003),[2009,2009]Vec(x),但[2009,2009]∈Vec(μ(A003)),所以返回结果为false,Tom在2009年不在IBM工作;(3)针对2014年,对于x∈μ(A003·C003),[2014,2014]Vec(x),同时[2014,2014]Vec(μ(A003)),所以返回结果为uncertain,所以无法判定Tom在2014年是否在IBM工作.针对Now语义的问题,经典二值逻辑无法处理其不确定性问题,但是基于子结构逻辑的构造型语义,不确定性得以表达和处理.3.1.2函数依赖在代数语义模型对时态知识进行表达并做操作运算的同时,句法逻辑主要提供的是合理性支撑,即μ(Person_ID·Co_IDDepartment)与μ(Person_ID)这样的映射和比较是否合理.而Person_ID·Co_IDDepartment实际是时态数据库在时间约束下的函数依赖,即Person_ID·Co_IDTDepartment,因此通过对时间向量半群模型的赋值与映射,μ(Person_ID·Co_IDDepartment)与μ(Person_ID)的比较实际则是在时间模型约束下的函数依赖推理与计算.为证明合理性,我们将证明,TDLmin系统恰好等价于Armstrong函数依赖规则,由此通过属性-类型-时间集的映射方式,以上述语义模型对时态知识进行表达和计算是合理的.从略.函数依赖是数据库设计理论的基础,是数据库设计理论中的核心概念,可以规范属性之间满足语定义5.Armstrong函数依赖规则.设有关系模式R(A1,A2,…,An)和属性全集U=A1A2…An,X,Y,Z,犠均是U的子集,F是R的函数依赖集,Armstrong推理规则如下:自反律(Reflexivity).若YX,则X→Y;增广律(Augmentation).若X→Y,则XZ→YZ;传递律(Transitivity).若X→Y,Y→Z,则X→Z.欲证明TDLmin与Armstrong函数依赖规则等价,先定义Φ是形如AB的一个有穷序列集合,定义λ是一个从TDLmin上的类型到属性全集U的满射,形如:λ(p)={p}且λ(A·B)=λ(A)∪λ(B).现需证明如下定理.定理5(等价性定理).Φ|-TDLminABiffλ(A)→λ(B)据Armstrong函数依赖规则.证明.从左至右的证明是平凡的,通过Wean-kening规则和Contraction规则,我们易证得,TDLmin满足Armtrong函数依赖规则的自反律、增广律和传递律.我们需要证明的是右至左,以自反律为例证明.如果λ(A)→λ(B)是通过自反律得到,则λ(B)λ(A).根据λ的定义,λ-1(B)是λ-1(A)的子公式.根据Weakening规则,Φ|-TDLminλ-1(A)λ-1(B),即Φ|-TDLminAB.类似地,我们可以证明增广律和传递律,证明Page6义约束,同时也是数据库中推理与运算的重要方式与工具.由于时间维的引入,时态数据库中的函数依赖更为复杂,主要体现在时间约束下的数据依赖关系.我们证明了TDLmin与传统数据库的函数依赖Armtrong推理规则是恰好等价的,一方面从句法逻辑上对代数语义模型的“属性-类型-时间集”映射与操作运算方式提供了合理性支持,另一方面,从“恰好”等价也说明了TDLmin是极小的、最小的.3.2计算复杂性3.2.1TDLmin的判定性TDLmin系统在句法逻辑中剥离了对时间的表示,而改由语义模型完成对时态运算与操作的支持,使得逻辑系统的复杂性大大降低.因此,使其不但具有良好的知识表达能力,而且还是可判定的,使得逻辑系统的时间复杂度为P-time(O(n2)).以下将证明其判定性与时间复杂度.欲证明TDLmin系统是可判定的,首先要证明其是可切割消除的(Cut-free),欲证明切割消除定理,我们可先将系统转换成另一种形式,即以传统的“∧”取代“·”算子和Weakening与Contraction规则.易证得,在结构规则Weakening和Contraction证明.(1)∧·AABBA,BA·B(·R)A∧BAA∧BB(∧L)下的“·”算子与经典的“∧”是等价的.A∧B,A∧BA·B(2)·∧A·BA(·L)AAA,BA(Weakening)因此,我们的系统可以转化成只含“∧”操作规则和Cut结构规则的逻辑系统(如下所示),并且我们可以证明Cut规则也是可以消除的.公理:pp(Id).结构规则:ΔAΓ,A,ΠB操作规则:Γ,ACΓ,A∧BC(∧L);ΓAΓBΓA∧B(∧R).定义6.切割度.令d(x)表示类型公式x中出现的连接词∧的数量.且d(x1,x2,…,xn)=d(x1)+d(x2)+…+d(xn).则一个切割的度为d(Δ)+d(Γ)+d(Π)+d(A)+d(B).定理6(切割消除定理).在系统的任意切割中,当所有切割的前提不是由切割推演得到时,该切割的结论存在且只存在两种可能:(1)与结论前提中的某一个一致;(2)该切割可以被一个或两个切割度更小的切割替换.证明(分5种情况).情形1.ΔA是公理的实例;情形2.Γ,A,ΠΒ是公理的实例;情形3.证明ΔA的最后一步推演中没有引情形4.证明Γ,A,ΠΒ的最后一步推演中没入A中的主连接词;有引入A中的主连接词;上述4种情况的切割消除证明与经典子结构逻辑系统Lambek演算相似,我们需要证明的是以下一种情况.情形5.切割前提推演的最后一步都引入了A的主连接词∧,A=A∧A.可将原切割ΔA∧A(∧R)Γ,A(orA),ΠBΔAΔA置换为ΔA(orA)Γ,A(orA),ΠB新的切割比原切割有更小的度.据情形1~5,我们证明了在TDLmin系统中,切割定理是可以被消除的.据切割消除性,我们可证明TDLmin系统具有有穷判定性.定理7(判定性定理).在上述系统中,给定一个Sequent:ΓA,其是可判定的.证明.设给定一个Sequent:ΓA,我们可对其构造一棵自底向上的证明树,该树的每一分支为一证明.对于该树的构造,可使用(∧L)和(∧R)规则(注意到Cut规则已经被消除).因此我们可将每次回溯过程构造为树中的一个点,形成一棵新树.在新树中,每一个向上的步骤,都能消除连接词∧的一次出现,注意到这样的回溯总是有穷的,因此该树是有穷的.据此Sequent:ΓA是可判定的当且仅当Page7该树的某一分支能证明之.3.2.2TDLmin的计算复杂性ΓAiffΦ|-TDLminΓpi.TDLmin系统的时间复杂度为P-time(O(n2)),我们将使用有向图的方式对其进行证明[15].在此之前,我们需先证明一个引理和一个推论.引理1.对pi∈A(pi为原子公式),Φ|-TDLmin证明.情形1.当A=pi时,结论显然;情形2.当A=B·C时:(1)左右.据Weakening规则和(·L),B·CB且B·CC,再据Cut规则,ΓB且ΓC,据归纳假设Γpi;(2)右左.对pi∈A,如果Γpi,据有穷次是用(·R)和Contraction规则,易得ΓA.故据情形1,2,pi∈A,Φ|-TDLminΓAiffΦ|-TDLminΓpi得证.推论1.pi∈A(pi为原子公式),Φ|-TDLminΓAiffΦ|-TDLminΓpi,其中Φ表示由Φ产生的所有形如Api的公式集(Horn子句).定义7(有向图).有向图G由三元组G=(Gn,R,犠)组成,其中Gn表示图中结点的集合,R表示图中有向边的集合.一条有向边由二元序对(ai,aj)组成,其中ai,aj∈Gn,wi∈犠为每条边上的权值.G上从结点a到b的路径为R中元素的序列,形如(a1,a2),(a2,a3),…,(an-1,an),其中a1=a且an=b,w(a,b)=∏w(ai,aj),其中(0ijn).两条路径(a,b)和(c,d)是分离的(disjoint)当且仅当(a,b)(c,d)且(c,d)(a,b).据此,我们可以根据上述定义,构造TDLmin(Φ)的有向图,过程如下:(1)令Gn=pi∈Φ,pi为原子公式;(2)对Φ任意序列,如p1·…·pnq,将(q,p1),…,(q,pn)加入到R中,其权值为(q,p1)=…=(q,pn)=1/n.如图2所示.这个构造过程是P-time的,其时间复杂度为O(n).特殊的,针对时态数据库,Φ可以为其函数依赖集.以下利用有向图证明TDLmin系统判定算法的时间复杂度.根据推论1,欲证明Sequent:ΓA在给定公式集Φ是否能被判定,仅需证明在给定公式集Φ中,是否对pi∈A,Γpi.为此可构建TDLmin(Φ)有向图,并作扫描如下:(1)对pi∈A,依次扫描;(2)如果pi∈Γ,Γpi,结论显然;(3)如果piΓ,Γpi当且仅当存在若干条分离的路径,形如(pi,a1),…,(pi,an)使得a1,…,an∈Γ且∑w(pi,ai)1(1in);(4)如果pi∈A不存在步3中的路径,则ΓA在给定公式集Φ下不可判定;否则ΓA可判定.显然,这个扫描过程是P-time的,由于经过了两个嵌套循环的扫描(一次为pi∈A,另一次为ai∈Γ),易知其最坏时间复杂度为O(n2).这个时间复杂度对于绝大部分逻辑系统(包括模态逻辑、线性逻辑、子结构逻辑等)来说,已经是非常好的结果,经典一阶逻辑扫描真值表的时间复杂度也为O(n2).4TDLmin与Allen方法的对接TDLmin系统对时间的表示在语义模型中实现,而在句法逻辑中剥离对时间的表示,从而降低了逻辑系统的复杂性,提高了直观性.这样也使得时态查询将分两步进行(如图3).第1步为传统的非时态查询,其可兼顾时态知识和非时态知识,对于时态知识在第1步查询中不对时间进行演算,留到第2步进行;第2步为时态查询,即针对子结构逻辑语义模型的时间表达和演算对时态知识进行二次计算.在第2步查询中,实际上我们要完成的事情,是根据语义模型从类型到时间向量集半群的赋值(μ:Tp→Vec(犠)),对时间进行运算和比较,而这些运算和比较是可以划分成若干类型进行的.在3.1节的两例中,我们实际完成了两种类型的运算:(1)Equals.判断两个时间向量集是否等价,如查询“仅在一个企业并且仅在一个部门工作过的员工”;(2)DuringandContains.判断一个时间向量集中是否存在时间向量,而这个时间向量包含另一个时间向量集,如查询“Tom在2012年、2009年和Page82014年是否在IBM工作”的例子.图3“两步式”时态查询流程图由于时态数据库中,较多地采用线性时间而非分支时间(BranchingTime),线性时间又具有单向性,因此时间向量集又是一个顺序集,完成上述两种操作的时间复杂度仅为O(n).因此两步式查询完成上述两种操作的时间复杂度为:O(TQ)+O(n),其中O(TQ)为第1步查询的时间复杂度,即传统的非时态查询的时间复杂度.这表明,我们完成相关查询与推理计算时,所需要的时间代价是在传统非时态查询的基础上,加上一个时间复杂度为O(n)的时间向量集运算.由于时间复杂度O(n)是线性的,所以实际整个查询的时间复杂度仅取决于O(TQ),这是一个较为理想的结果.而除了Equals和During(Contains)运算外,由于时间向量集中的元素主要采取的也是时间区间的表示方法,根据不同查询与应用,我们还能完成的运算有(1)Beforeandafter;(2)OverlapsandOverlapped-by;(3)MeetsandMet-by;(4)StartsandStarted-by;(5)FinishesandFinished-by.这实际和传统的基于区间逻辑和时间区间运算的Allen方法[16]是完全对接的.1983年Allen提出了13种时态关系运算:“before”,“after”,“during”,“contains”,“overlaps”,“overlapped-by”,“meets”,“met-by”,“starts”,“started-by”,“finishes”,“finished-by”和“equals”,相关研究结果被应用于时态查询语言TSQL2中[17].这种对接也使得TDLmin系统具有更强的普适性和应用前景.首先,其恰好等价于Armstrong函数依赖规则(极小性源出于此),由此通过属性-类型-时间集的映射方式,为单纯由语义模型对时态知识进行表达和计算的方法提供了合理性支撑;其次,其在句法逻辑中剥离了时间的表示,降低了逻辑系统的复杂度,使得通过该逻辑系统进行的表达与推理运算,时间复杂度是P-time(O(n2))的,而且还能完成不确定性推理;最后,TDLmin系统能与经典的时态数据库查询语言TSQL2进行对接,匹配经典的时态关系运算Allen方法,而同时相应的查询时间复杂度接近于传统非时态查询时间复杂度,仅为O(TQ)+O(n).Page95结束语子结构逻辑是一类构造性逻辑,采用构造性证明,具有较强的计算性.从证明论角度出发,子结构逻辑将逻辑系统分为结构规则和操作规则.直观上来说,其Gentzen式的风格有别于传统Hilbert风格,能把逻辑系统“掰”碎了,通过对模态规则、结构规则与逻辑算子(类似时序性知识)的灵活增删,映射并借助代数语义与类型论(类似时间属性知识),在表达能力、判定性和计算复杂性方面对逻辑系统进行综合考量,其在语义上的近似性能进一步转化为关系代数及相关语义,从而有利于构建时态数据运算体系和数据库建模.为此,我们从子结构逻辑出发,针对时态数据库及其信息处理中关键的知识推理、时态操作与函数依赖等内容,构建了一个极小的子结构逻辑系统TDLmin,其只存在一个类似于传统合取连接词“∧”的连接词“·”和最少的结构规则(2条),并恰好等价于传统的数据库函数依赖Armstrong规则.TDLmin系统能在逻辑语义模型中对时序性、时间属性进行表达,而在句法逻辑系统将时间剥离,从而既表达了时态知识,对时态操作进行处理,又降低了逻辑系统的复杂度,使得逻辑系统的时间复杂度为P-time(O(n2)).而该逻辑系统还可与传统的Allen方法进行对接,使得相关时态查询所需的时间代价为传统非时态查询的时间加上一个复杂度仅为O(n)的线性时间.由于子结构代数语义模型与关系代数的相似性,在后续研究中,我们希望将TDLmin系统或相关变形系统能与时态关系代数对接,在语义模型层面形成等价的关系代数模型或可被关系代数运用的子代数模型.此外,针对多粒度的时态函数依赖(TMVD),我们也希望能进一步推广TDLmin系统的相关方法,并做相关工作.
