Page1NoC目录协议能耗分析与建模研究王继禾1)郭兵1)沈艳2)伍元胜1)刘云本1),2)1)(四川大学计算机学院成都610065)2)(成都信息工程学院控制工程学院成都610225)摘要在MPSoC芯片设计中,能耗问题是一个关键因素,NoC(Network-on-Chip片上网络)的能耗占芯片总能耗的50%以上.文中首先对NoC应用层协议的能耗行为进行统一的数学描述,在此基础上,针对目前Cache一致性中常用的目录协议进行深入分析,提出一种基于位置概率分布的目录协议能耗模型,其考虑目录信息与数据块节点位置分布的无关性,定位数据块在NoC中的节点位置,计算任意节点间数据传输的概率矩阵,并结合路由单元能耗、连线能耗以及网络拓扑结构,准确获得目录协议中一次数据块传输的能耗.仿真实验表明,该文提出的模型在发包概率稳定的Mesh(网孔)网络中可有效计算出不同类型目录协议产生的能耗,且精度较高(误差小于2%),为下一步协议能耗优化研究提供可信的量化的评判依据.关键词MPSoC;NoC;协议功耗;目录协议;Cache一致性1引言目前处理器的发展趋势倾向于采用多核集成的策略,随着芯片的集成度越来越高,设计复杂性不断上升,对计算机系统的能耗也带来严重挑战.因此,在MPSoC(Multi-ProcessorSoC多核SoC)芯片设计中,能耗问题始终是一个关键因素[1].在MPSoC中,核间通信主要包括总线监听、交叉开关和NoC(NetworkonChip片上网络)3种方式.其中,总线监听一般适用于规模较小的多核网络,如ARMCotex-A9处理器中采用侦听控制单元(SnoopControlUnit)控制多核在AMBA总线上的通信;使用交叉开关的典型例子是AMDAthlon64X2处理器,利用交叉互联网络和系统请求接口对各个CPU核的请求进行仲裁.由于上述两种通信方式都不适合高端的多核和众核互联,所以包交换网络互连的思想被引入到MPSoC核间通信设计中,NoC将成为未来MPSoC的主流通信方式[2].目前NoC的能耗一般占芯片总能耗的50%以上[3],其中静态能耗主要由器件的漏电电流造成,动态能耗由器件的0/1翻转和短路电流造成.由于NoC的动态能耗主要由协议活动产生,因此,开展NoC协议能耗问题的分析与建模是十分必要的.关于NoC协议能耗问题的一些代表性工作包括:Benini[4]于2001年首次完整描述了NoC系统的能耗,从能耗产生的角度将NoC划分成多个层次;Bhat[5]给出了NoC包交换中各片上传输部件的能耗模型,并得到了各部件单次执行的能耗值;Li[3]将DVS(动态电压调整)用于NoC节点间互联,通过动态调整电压和频率降低NoC通信能耗;Wang[6]采用了分组Cache的方法将分布式存储组织成多个自治域,从而降低了Cache一致性协议的能耗.但是,上述工作都没有给出明确的协议能耗模型,导致NoC协议能耗优化缺乏理论支撑.因此,本文将重点研究Cache一致性协议的能耗模型及其能耗影响因素,为能量有效的NoC协议设计和优化奠定基础.尽管能耗和功耗是两个不同的概念,但是在相关研究领域中许多泛指情况下可互换使用,一些低功耗的研究工作实际上是优化系统的能量消耗.因此,在不会引起混淆的情况下,本文不详细区分能耗和功耗的概念.本文第2节介绍NoC协议的基本组成及应用层协议能耗的统一描述;第3节描述NoC物理层协议的能耗,分析NoC中能耗是如何在连线和路由单元(路由节点)中产生的;第4节对目录协议能耗进行建模,得出单个数据包(message)传输的能耗模型;第5节对提出的能耗模型进行实验验证;第6节对未来的工作进行展望.2NoC协议栈及协议能耗的描述2.1NoC协议栈在文献[5]中,Bhat试图将NoC纳入到一般网络的体系结构中,希望完全按照ISO/OSI(OpenSystemInterconnection开放系统互连)的分层结构设计现有的NoC,但是NoC与OSI之间在设计目标和工作环境方面存在一些差异:次对比(如图1所示).(1)NoC的设计目标与OSI不同.OSI是满足各种应用需求的通用网络,而NoC是面向Cache一致性的专用网络,二者在低层设计上有相似之处,但在上层的实现上存在较大的差别.(2)OSI与NoC的工作环境不同.OSI的应用环境往往不可预知,其设计十分强调QoS(QualityofService服务质量),但是NoC一般工作在MPSoC中,对信息传输环境的适应性不是设计者考虑的主要问题,而令设计者头痛的是片上资源的局限性和能耗难以控制.换言之,NoC的设计更加强调不同层次之间的统一描述和软-硬件的协同设计,而不像OSI追求各层协议之间相互独立.因此,NoC更应遵循整体设计的思路.进一步地,可将NoC和OSI的协议模型进行层Page3(1)在下层(传输层以下)协议中,NoC与OSI协议栈几乎对等,NoC依然需要物理层和链路层对信号进行编码和传输.由于一个设计好的NoC拓扑结构相对简单且固定,因此片上通信中的路由协议也相对简化,如一种简单有效的路由协议是X-Y路由,将一个数据微片(Flit,FlowControlUnit)先按照X轴方向传输,到达目标列之后再按照Y轴方向传输,最终到达目的节点.(2)在上层协议中,NoC和OSI协议栈的差异较大,功能上也不完全对等.这是因为对于NoC来说,OSI中提供服务质量保证的传输层复杂度较高,难以利用片上较低的软-硬件成本实现.如何在增强传输可靠性和降低设计复杂度之间取得平衡,已成为当今NoC研究的一个热点问题,如文献[7]中提出的一种增强传输可靠性的反馈控制方法,依然难以摆脱实现成本过高的问题,并且严重制约了传输效率.对于NoC应用层协议,可细分为3个子层.(1)CPU&L1Cache读写层.当CPU发生读-写操作时,若目标地址所指向的内存块不在本地L1Cache中,将向NoC接口发出读-写请求,并保存在接口请求队列中,由下层协议响应这些请求,并保证以适当的操作权限将所请求的内存块返回给CPU使用.值得一提的是,在一种具有XBar结构的网络中,每个路由单元可能同时连接多个CPU核,这些CPU拥有各自独立的L1Cache,因此当这些核的读-写操作请求在本地L1Cache中失效,也将依次进入NoC接口的请求队列,由下层协议无差别地依次处理[8].(2)竞争管理协议层.将CPU对Cache的读-写操作封装成独立的原子事务.一个有效的竞争管理机制应该保证,在任何时刻,网络中都存在一些不能被其它读-写请求中断的原子事务,协议确保这些事务能够完整地得到执行.在文献[9]中,Zhang对Greedy竞争管理机制与Cache一致性协议的关系做了较为详细的讨论.(3)Cache一致性协议层.一种面向CPU读-写操作的同步通信机制,应该保证,在任何时刻,执行事务的节点可在最短的时间内在网络上定位自己所需要的Cache块.目录协议是一种主流的Cache一致性协议实现方式,对共享存储器中的数据块设置目录项,用以跟踪、记录每个数据块的状态信息,从而判断哪些节点应对请求做出响应.这些目录项按照固定的排列方式分布在各个路由节点中,使得需要这些信息的节点知道所需信息在网络中的位置[10].在多任务MPSoC环境中,设计人员为减少片上长距离通信提出了各种映射策略,试图降低数据远程传输对系统造成的影响.这种映射优化虽然可以在一定程度上降低系统能耗,但难以根本上消除并行任务对共享资源的同步、竞争这一重要特性.在并行执行中,任意节点上的进程在任何运行时刻都可能产生对系统中的某一共享数据的读/写请求,这是程序员和硬件设计者无法预料的.因此对Cache一致性协议的能耗进行分析和建模显得尤为重要.2.2应用层协议能耗的统一描述软件能耗是指在软件运行期间,驱动直接相关硬件(包括CPU、存储器、I/O控制器等)活动产生的系统能耗总和.自从Tiwari提出软件能耗的概念之后,人们越来越关注软件实现方式对系统能耗的影响程度.协议能耗是软件能耗的一种,表征了协议软件完成一种特定任务时所消耗的能量.对NoC应用层中各层次协议的能耗,可用下列两个定义进行统一的描述.定义1.面向能耗的协议是一个由4个元素构成的集合Protocol(O,S,P,E),其中,O(o1,o2,…,om)是协议的操作域,即面向下层协议的接口,为协议操作的最小粒度;S={s|s=(on1,on2,…,onk);oni∈O,k<}是协议的事务集,每个s由一个操作序列组成,代表协议所能够完成的功能;P(p1,p2,…,pn)是协议的各个事务s发生的概率向量,是由高层协议调用决定的;E(e1,e2,…,em)是操作域O内的各个操作o所对应的能耗向量.定义2.协议能耗是一个Protocol(O,S,P,E)在完成单个任务的过程中所产生的平均能耗,可表示为∑sj∈S从定义2可以看出,可将协议中各种事务的能耗视为一个基本的能耗单元,协议能耗与协议负载无关,只与事务发生的概率分布和单元能耗有关.3NoC物理层协议的能耗分析为了建立NoC目录协议能耗模型,需要首先对物理层协议的能耗进行分析,以明确NoC产生的能耗在硬件单元上的分布情况.与通用的互联网络类似,NoC的核心是路由单元,处理单元通过路由单元的消息转发机制在片上Page4实现数据的通信,路由单元通过金属连线实现网络相互连接,这种片上通信对于能量的消耗是十分可观的,如Alpha21364处理器的功耗为23W,其中NoC占整个处理器功耗的58%,而MITRaw处理器的NoC占整个处理器功耗的40%[3].NoC产生的能耗主要由连线能耗和路由单元能耗组成.连线能耗是数据从一个路由单元发出,通过金属连线传播到相邻下一个路由单元的过程中所产生的能耗;路由单元能耗则是指数据在路由单元内部存储转发所产生的能耗.Li等人通过对NoC的仿真发现,其功耗分布如图2所示,其中连线功耗占82.4%,路由单元功耗占17.6%,而在路由单元中,Buffer功耗占10.07%,交叉开关(Crossbar)功耗占6.49%.下面分别对连线能耗和路由单元能耗模型进行分析介绍.(1)连线能耗模型.大规模集成电路的片上通信连线几乎都采用并行通信,由于并行连线的集成度很高,所以必须考虑并行高频传输的线间电容(interlinecapacitance)效应,并且随着连线尺寸的减小,线间电容对与传输能耗的影响也逐渐增大.在适当考虑线间电容的影响后,单个Flit在连线上一次传出能耗犈line可表示为下列向量形式:其中,d是一个数据传输块中含有Flit的数量,犞f是n条并行连线在数据一次变化后的电平向量,(犞f)T是其转置向量,犞i是n条并行连线在数据一次变化前的电平向量,犆t是n×n的连线间电容对称矩阵,其中对角线上元素是对应位置连线到地的电容,其它位置元素是连线间的电容.(2)路由单元能耗模型.目前片上路由单元的结构还没有摆脱通用路由器的基本框架.在输入端,当数据从E、W、N、S和Local5个方向到达路由单元后,由输入VC(InputVirtualChannel)完成输入数据的接收和缓存,向路由仲裁器(SwitchAllocator)请求并得到需要的输出端口后,数据包以Flit为单位通过Crossbar发射到下一跳(hop)的路由单元输入VC中.如果该Flit已到达目的节点,那么Crossbar将其发送到本地L2Cache接口队列(Sink)中.一个Flit通过一个路由单元所产生的能耗犈Router可表示为其中,犈VC为数据包在VC队列中等待的能耗,犈SA和犈Crossbar分别为路由仲裁器分配交叉连接的能耗和Flit通过Crossbar的能耗,犈VC又可分为VC缓冲器能耗犈Buffer和VC分配电路(VCAllocator)能耗犈VCA.一般情况下,犈Buffer和犈Crossbar是整个路由单元能耗的主要来源.在此基础上,可得出路由协议的能耗模型.由于发送端将一个数据包分割成一组大小相等的Flit,当数据包的第一个Flit通过路由到达一个新的路由节点后,由VC内部的分配电路为该组Flit分配一个数据缓冲对列,随后的Flit会自动地进入该缓冲对列,等待由Crossbar转发到下一跳.因此,用n表示单个Flit传输所经过的跳数,一个Flit在传送路径上完成一次传输所产生的能耗EFlit可表示为4基于位置概率分布的目录协议能耗模型可用一个有向图NoC〈SN,L〉表示具有N个路由节点的NoC网络,si∈SN为第i个路由节点,i是节点的位置编号,0iN-1,li,j∈L是节点si到sj之间的有向边.一个一维的连续内存M(n,b),n为内存块的数量,将M平均分成的b个区域,一个区域的大小为n/b块.每一个块对应一个块目录项,同一个区域中的块目录项集中存放在NoC的一个节点中,不同区域的目录项分布存放在不同的节点中.假设区域的数量等于路由节点的数量,即b=N,得到块地址block_addr到路由节点位置i之间的映射关系为路由节点上PE(ProcessingElement处理单元)发出的块读-写请求会沿着NoC协议栈自上而下到达Cache一致性协议层,协议对请求的块地址Page5按照式(4)进行计算,得到块的目录项所在路由节点的位置i,目录协议根据目标节点的位置i完成3-way取数据操作(如图3所示).从路由节点s0请求一次取数据块的完整过程包括:(1)查询过程.通过式(4)计算,请求者s0发现目标块的目录项信息静态存放在s11的SRAM中,向s11发送请求消息;(2)响应过程.s11收到请求消息后,在自己的目录项中查找发现该块的一个共享副本存储在s13的二级缓存中,于是向响应者s13发送一个数据请求消息,该消息包含了所要请求的块地址和请求节点(s0)信息;(3)传输过程.当响应者s13得到请求消息后,向s0发送一份该块的副本并告知s11,s11对该块目录项的状态做出相应的更新.由于整个内存的块信息均匀分布存储在所有的路由节点中,因此这种协议的网络负载较为均衡[11].为建立上述过程的能耗模型,首先采用概率统计模型刻画一个3-way取数据的过程.将网络中的PE对内存的块请求视为随机事件,用qi,j表示PEi的L2Cache对内存中第j个区域中数据块请求的概率(或速率).矩阵犙表示整个NoC中各节点对Cache块的请求概率,由于b=N,该矩阵为一个方阵:矩阵对角元素qi,j不为0,这是因为如果一个PE所请求数据块的目录项恰好在本地,不需要进行远程查询目录项的操作,而直接向目标节点发送数据请求.通过分析可知,∑N-1PE首先在自己的L2Cache中查找所需的数据块,如果命中,则不向NoC接口发送数据请求.一个请求信息到达目录项所在的节点后,通过查询数据块的目录项可获得该块目前所在节点位置,可用矩阵犘表示响应过程的概率分布,元素pj,k表示在节点j的目录项查询某一个数据块时,该块在节点k的L2Cache中的概率,即在目录协议中3-way传输的第2步发生的概率分布.响应过程的概率模型与查询过程类似,这里不再赘述.假设经过查询,某一个数据块在节点k的L2Cache中存在一个副本,那么节点k将此块发送给需要它的源节点i,该传输过程的概率分布用方阵犜表示,可表示为即节点k向节点i发送数据块的概率,实际上等于节点i向所有节点发送请求查询概率和任何节点查询到某一个块在节点k中概率的乘积.然后,计算单个Flit在NoC中传输的平均能耗.假设在c×c的Mesh网络中,一个Flit从节点i产生,目的节点为j,则该Flit经过的总跳数n=|j-i|mod(c)+j表示一个Flit从节点i到j传输的能耗,则根据式(3)有犈Flit=ei,j[=|j-i|mod(c)+j其中,ei,j包含了硬件电路、网络拓扑结构和网络层协议的所有能耗信息,不仅是单个Flit对硬件资源利用程度的函数,而且是源和目的节点之间传输跳数的函数.引入式(2)可得到整个网络任意结点间一次数据块传输产生的能耗为犈data=熿d×eN-1,0tN-1,0e15,1tN-1,1…eN-1,N-1tN-1,N燀其中,d是一个数据块中含有Flit的数量.个节点之间传输数据能耗的期望,可表示为因此,一次取数据块的过程平均能耗是任意两Page6以上通过对目录协议请求数据块的过程进行抽象,得到在NoC中数据传输的能耗模型.从式(3)可以看出,影响一个数据块传输能耗受到两方面因素影响,一方面是单个Flit的传输能耗,代表单个Flit对片上资源利用程度,对硬件传输电路和网络拓扑结构进行改进,是目前降低ei,j对NoC能耗影响的主要方法[12];另一方面是面向能耗的目录协议本身的运行情况,这控制数据块的存储策略和传送过程,是对分布式存储及目录协议能耗的抽象描述,面向能耗的协议优化也是NoC研究领域的焦点.5仿真实验及分析5.1实验环境仿真实验在NS-2平台上进行[13],对目录协议能耗模型在不同网络发包概率的情况下进行比较和分析.相关参数设置如下:(1)NoC参数.在NS-2中建立了一个4×4的Mesh网络,相邻路由节点之间的链路传输速率为10Mbps,每个数据包的大小设为512Bytes,与一个数据块的大小相适应.在源节点上,一个512Bytes的数据块被分割成4个大小相同的Flit.传送路径上的每个路由节点都只为第一个Flit做一次路由处理,其实质是在输入/输出端口间分配一个软连接,后继Flit通过此连接直接发送到输出端口.(2)发包参数.为了模拟不同负载环境下的NoC发包情况,为NoC中的每一个PE设置一个“发包向量”数据结构以控制目的地址范围,从而控制发包概率矩阵犜.PE发包的过程分为两个相互独立的阶段:发包持续时间(BurstingTime)和空闲持续时间(IdlingTime).设定任意两个PE之间的发包持续时间期望值和空闲持续时间期望值,以控制节点的发包概率.如果将一个轮转周期的期望设为1s,发包持续时间的期望E(BT)和空闲持续时间的期望E(IT)满足E(BT)+E(IT)=1s,节点发包概率由E(BT)/[E(BT)+E(IT)]=E(BT)决定.(3)节点距离的影响.一般来说,在一个经过优化的任务映射中,任意两节点间的通信概率会呈现如下特征:两节点i与j之间的“曼哈顿”距离越大,对应的传输概率ti,j越小.本实验通过调整矩阵犜中的概率分布,体现不同优化深度对系统能耗的影响.具体来说,4×4类型模拟没有经过任务映射优化的随机发包;3×3类型和2×2类型模拟了经过一般优化和深度优化后的随机发包.5.2实验结果分析情况下60s的发包情况:即犜中元素ti,j=1实验模拟一个4×4Mesh在3种不同发包类型(1)4×4.在4×4Mesh网络中随机自由发包,(2)3×3.发包节点只向水平距离和垂直距离(3)2×2.发包节点只向水平距离和垂直距离通过统计一次实验中总路由次数和产生数据包都小于3的节点随机自由发包;都小于2的节点随机自由发包.数量,得到NoC中单个包的平均路由次数:同理,采用式(5)也可得到包的平均链路传输次数.根据平均路由次数和平均连路传输次数,获得NS-2平台与目录协议能耗模型估算的包平均能耗数据如表1所示.类型NS-2平台的4×40.9563270.9581000.1851.7673×30.7830500.7824760.0730.6962×20.5125380.5132860.1461.350可以看出,NS-2平台的包平均能耗与模型估算的包平均能耗最大误差小于2%,说明本文提出的目录协议能耗模型是有效的.进一步地,可得到上述3种情况下目录协议能耗模型的包平均能耗精度与概率的变化关系(如图4~7所示).从图4可以看出,虽然收到发包向量矩阵的影响,3种情况下包平均路由次数有所不同,但是无论发包概率如何变化,NoC中的包平均路由次数维持在理论值附近变化,从而保证了网络中数据包平均能耗是稳定的.Page73种情况下当发包概率接近1时,单个包的NS-2平台平均能耗值接近于目录协议能耗模型估算的平均能耗值,并且稳定性也更高(如图5~7所示).随着发包概率的增大,目录协议能耗模型估算的包平均能耗值精度也不断提高.5.3实验结论从实验部分可以看出,由式(6)得到的矩阵犜实际上反应了NoC数据传输概率的集中度.这体现在网络优化中,犜的每一行发包概率应尽可能集中在与该行号的网络位置向邻近的节点上,同时也不回避长距离传输对网络能耗的影响.利用该模型,可对各种网络优化措施的能耗收益做定量的分析和比较.例如在本实验中,经过初步优化的3×3类型,单个包的平均能耗为未经优化的4×4类型的81.7%;而经过深度优化的2×2类型,单个包的平均能耗仅为未经优化情况的53.6%.由此可见,该模型为分析协议设计的能耗优化深度提供量化评判依据.6结束语在NoC中,能耗问题将会随着网络规模的增大而越来越受到人们的重视.本文对NoC协议栈中应用层协议的能耗行为进行统一的数学描述,重点对目录协议的取数据过程所产生的能耗进行了分析与建模,提出一种基于位置概率分布的目录协议能耗模型,并利用发包概率稳定的Mesh网络验证了目录协议能耗模型的有效性.该模型不受到网络拓扑结构的影响,同样适用于DTorus、3-D等其它网络拓扑结构,通用性较强.下一步工作主要包括将目录协议的能耗模型与Cache一致性协议的3态MSI协议和5态MOESI协议相结合,构建更为广泛的NoC能耗模型,以及目录协议的能耗优化.
