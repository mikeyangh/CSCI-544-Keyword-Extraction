Page1基于信号驱动的多批处理综合调度算法谢志强1),2)辛宇2)杨静2)1)(哈尔滨理工大学计算机科学与技术学院哈尔滨150080)2)(哈尔滨工程大学计算机科学与技术学院哈尔滨150001)摘要针对以往综合调度中批处理调度算法只能处理2个工序的批量调度,进行批量调度的工序不能具有2个以上的紧前工序,使综合调度具有局限性问题,提出基于信号驱动的多批处理综合调度算法.该算法先建立设备和调度2个子系统,并通过相互间传递的信号驱动;为了预判断可批处理工序,将工序分为可调度工序和准可调度工序,采用组合策略将可批量处理的工序形成组合工序一同加工;当可调度工序超过设备批处理量时,按最大并行性选择策略选择调度;当准可调度工序成为批处理工序时,无需考虑前续工序对工序批处理的影响,即对批处理工序的紧前工序数无限制;循环以上可批处理工序判断,实现多批量处理.关键词多批处理;组合工序;组合策略;综合调度算法;信号驱动1引言随着社会对产品个性化需求的不断增加,多品种小批量产品、特别是单件产品的订单越来越多,企业越来越需要有好的算法实现加工和装配一同调度的综合调度计划[1].为了实现树状结构产品内在加工和装配充分并行,缩短产品加工总时间,文献[1]提出了基于拟关键路径的调度算法,该算法虽然为解决多产品加工和装配综合调度提供了较好的解决方案,但该算法注重产品树状结构的纵向,特别是关键路径上工序对调度结果的影响,忽略横向———其它路径上不同设备工序可并行处理;针对这一问题,文献[2]提出了采用层优先、短用时和长路经策略的调度算法,由于文献[2]算法在注重其它路径上不同设备工序的并行处理时,兼顾长路经工序的调度,所以文献[2]算法优于文献[1]算法.文献[2]虽然较优,但其重横轻纵的策略不符合树状结构产品调度以纵向为主的机理,于是文献[3]提出兼顾文献[1-2]优点的基于动态关键路径的调度算法,实现了更优的以纵为主兼顾横向的调度方案.动态关键路径法采取先确定工序调度次序,再将工序插入设备合适的空隙中,不仅使设备产生较多空隙,而且为寻找合适的空隙需要较多的比较操作.由于事件驱动无需先确定调度工序次序[4],文献[5]提出了基于设备空闲驱动的综合调度算法,由于该算法不涉及工序寻找设备空闲的操作,不仅使设备的利用率显著提高,而且容易确定工序在设备上的开始时间.目前批处理在单机调度[6-7]、网络组播调度[8]、实时动态任务分配[9]方面已有一些研究成果,但存在批处理设备的综合调度问题的研究才刚刚开始.虽然基于文献[2]的批量综合调度算法考虑了存在批处理设备的一般和动态综合调度问题[10-11],但该算法还存在两个方面问题:(1)可以批量调度的工序其紧前工序数不大于2;(2)批量调度的工序数量不大于2.而以上两点弊端将严重限制该批量调度算法在实际生产调度中的应用.为了避免上述的两类问题,本文提出通过建立设备和调度2个子系统,并通过相互间传递的信号进行驱动的批综合调度算法.该算法利用文献[5]算法的优点,设备信号通过设备驱动实现;以“多批处理”命名,以区别以往的限制加工批量为2的调度算法;将工艺树叶子节点工序中未加工的工序定义为可调度工序,紧前工序均处于加工状态的工序定义为准可调度工序,当可调度工序与准可调度工序批处理时,实现批处理不受紧前工序个数限制;通过信号驱动激活可调度工序,并判断其是否与准可调度工序满足批组合策略,如果可批处理,将该工序的加工时间延迟至准可调度工序的开始时间;当已形成的可批处理工序组开始加工时,如果该工序组还可与其它准可调度工序继续组合形成更大的批处理工序组,可实现加工批量无限制.2问题描述加工和装配一同处理的综合调度是将加工工序和装配工序统一定义为加工工序,加工设备和装配设备统一定义为加工设备,工序和设备统一调度,一般要求是:①每道工序的加工设备唯一.②同一加工设备在同一时刻只能加工一道工序.③每道工序必须在其所有紧前工序均已加工完毕,或没有紧前工序时才可以在其加工设备上开始加工.④最后一道工序加工完毕时间为产品的总加工时间.设产品由N道工序组成,在M台设备上加工,n(1nN)为工序编号,m(1mM)为设备编号.设End(n)为工序n的加工完毕时间,则产品加工总时间E=max[End(n)],于是一般综合调度问题目标函数为根据加工工序是否存在紧前工序,将工序划分为可调度工序和不可调度工序.其中不可调度工序为紧前工序未加工完毕的工序,即非叶子节点工序;可调度工序为无紧前工序或紧前工序均已加工完毕的工序,即为动态树状模型中的叶子节点.个(2)工序的设备.定义1.多批处理设备.可以批量加工多多批处理对一般综合问题的扩展要求是:⑤同一加工设备在同一时刻可以加工多道工序,工序的数量受设备的批加工量限制,同时开始的工序结束时间相同.通过与一般综合调度问题的要求比较可知,多批处理扩展了约束②,即一般综合调度问题是多批处理问题的特例.Page3为了说明多批处理条件下工序的约束关系,有关符号说明和分析如下:某一工序.工序集合,Fm,k={fm,k}.Fk=F1,k∪F2,k∪…∪Fm,k.(1)不同的设备可以在同一时刻加工完毕,设tk为设备加工完毕并产生空闲的时刻,其中k0(t0为开始时刻).(2)tm,k为设备m加工完毕并产生空闲的时刻.(3)fm,k为tm,k时刻在设备m上刚加工完毕的(4)Fm,k为tm,k时刻在设备m上刚加工完毕的(5)Fk为tk时刻刚加工完毕工序构成的集合(6)Xk为tk时刻已加工完毕工序构成的集合;设pre(n)代表工序n的紧前工序,有关工序表(1)Ok为tk时刻可调度工序集合:(n)({pre(n)}Xk)→(n∈Ok).(2)Cm,k为tk时刻空闲设备m选择加工的工序集合,Cm,kOk,Cm,k中各元素的开始时间均为tk,Cm,k中元素个数大于1,则Cm,k为批处理工序组.(3)Ck为tk时刻设备资源选择的工序集合,Ck=C1,k∪C2,k∪…∪Cm,k,CkOk.多批处理的约束条件⑤表示如下:Xk=Xk-1∪Fk.示如下:3系统模型设计3.1系统结构设计根据综合调度的实际情况,将多批处理系统划分为调度子系统(SchedulingManagementSubsystem,SS)和设备子系统(DeviceManagementSubsystem,DS).其中SS有两个主要内容:(1)采用组合策略确定批处理工序组;(2)利用最大并行性选择策略为空闲设备分配可调度工序或工序组,发送加工开始信号.DS负责接收SS传递来的可调度工序信息,锁定相应加工设备资源并在加工完毕时释放设备资源,发送加工完毕信号.定义2.加工完毕信号(Sig_F).DS释放设备资源时向SS发送的信号,该信号包含了加工结束的工序号和设备号.定义3.加工开始信号(Sig_B).SS选择为空闲设备分配可调度工序后,利用该信号通知DS锁定设备资源及具体的加工工序.SS与DS的交互过程如图1所示,其中信号Sig_F和信号Sig_B发送时伴随着设备资源的转移.系统加工的初始时刻t0,先由SS采用组合策略确定批处理工序组,此时所有设备资源均为SS所有,SS再为所有空闲设备进行可调度工序的选择,将被选择的工序和设备信息通过Sig_B传递到DS,此时DS锁定加工工序和设备资源,在设备加工完毕时释放设备资源并发送信号Sig_F,SS在收到新的设备资源信息后再进行新一轮的设备选择.SS与DS通过信号Sig_F和信号Sig_B的循环传递完成整体加工任务.若某一不可调度工序的所有紧前工序均被选择,则将该工序加入准可调度集合.加工任务从开始到结束的过程中,各个加工工3.2工序状态分析序状态会经历一系列状态变化,其定义如下.上加工时的状态.定义4.加工状态.可调度工序在其加工设备定义5.完毕状态.工序加工完毕时所处的定义6.可调度状态.可调度工序所处的状态.定义7.准可调度状态.不可调度工序中紧前定义8.非调度状态.不可调度工序中非准可调度工序所处的状态.其中处于准可调度状态和非调度状态的工序均为不可调度工序.图2为某一时刻加工任务工艺树,状态.工序均处于加工状态的工序.Page4叶子节点F6和F7在设备上加工处于加工状态,无紧前工序的叶子节点F8和F9处于可调度状态;其中非叶子结点均为不可调度工序,例如F3的所有紧前工序(F6)处于加工状态,因此F3处于准可调度状态;F4紧前工序中,只有F7处于加工状态,因此F4处于非调度状态,tk时刻各工序状态如表1所示.工序号F1F2F3F4F5F6F7F8F9SS发送信号Sig_B时,某一工序(组)的状态由可调度状态变为加工状态,其后续工序可能会变成为准可调度状态.DS发送信号Sig_F时,某一工序(组)由加工状态变为完毕状态,其后续工序可能会变成为可调度状态.因此各工序状态变化以信号Sig_F和信号Sig_B为驱动.图3为某一工序从开始到结束所经历各种状态,其状态变化随着信号Sig_F、Sig_B的产生有序地变化.定义9.信号驱动时刻.某一工序加工完毕的时刻,此时DS发送驱动信号Sig_F,进行新一轮调度.下面介绍当信号驱动时刻到来时,SS对可多批处理工序的调度策略.4多批调度策略设计与分析由于SS内部分别为可调度工序和准可调度工序建立集合,因此SS内部结构如图4所示.当收到信号Sig_F时,SS先对所有工序的状态进行一次更新,然后SS利用组合策略将可批处理工序组合成工序组,再按文献[5]中最大并行性选择策略选择可调度工序(组),将被选择工序号及设备资源信息通过Sig_B发送到DS.工序是否进行批处理组合的组合策略设计和分4.1组合策略设计与分析析如下.定义10.组合工序.将可同时在一台设备上加工的多个工序虚拟成为一道工序,这道虚拟工序称为组合工序,组合工序在调度时与正常工序一样.根据多批处理问题的约束条件⑤,可以批量处理的工序是相同的工序,其加工时间相同,因此,组合后的工序加工时间不变.由于SS工序集中批处理工序分为可调序批处理工序(A)和准可调度批处理工序(B).组合类型分为两种:A与A组合和A与B组合.对于AA类型,当可批处理调度的工序数小于设备批处理量时,此时所有可批处理工序一同批处理;当可批处理调度的工序数大于设备批处理量时,考虑工序并行加工[2],按设备批处理量,选择路径长的工序组合为工序PAA.对于AB类型,由于加工工艺约束,组合后工序A推迟开始加工时间与B同步并形成组合工序PAB.PAB缩短了单一设备的总加工时间,但推迟了工序A的后续工序,为此,有必要研究是否进行AB类型工序组合的判断策略.为方便阐述问题,现利用代数式说明条件之间的关系.设信号驱动时刻T时,可批处理工序A与B的加工时间为Tp,准可调度工序B转变为可调度状态的时刻为TB.工序A和工序B的父路径工序序列为QA和QB,路径长度为TQA和TQB.理想条件下QA在A加工结束时开始加工,即T+Tp时刻;QB在B加工结束时开始加工,即TB+Tp时刻.当T+TpTB时,AB的关系如图5(a)所示,准可调度工序B可以开始加工时,工序A已加工完Page5毕,若对AB进行组合,其结果如图5(b)所示,此时,不仅批处理设备在时间段(T,TB)处于空闲,而且还要推迟QA的开始时间,影响调度结果.因此,当T+TpTB时不对AB工序进行组合.图5T+TpTB时AB是否组合甘特图对比当T+Tp>TB时,AB及其后续工序的关系如图6(a)所示,若不对AB进行组合,则AB在批处理设备上串行加工,此时需要推迟B及其后续工序的开始时间,调度结果如图6(b)所示;若对AB进行组合,由于B的开始时间晚于当前时刻T,此时需要推迟A及其后续工序的开始时间,调度结果如图6(c)所示,AB组合后的工序为PAB.由于AB的后续部分QA和QB可以并行加工,其路径长度TQA和TQB是决定AB组合后整体效率问题的关键因素,因此下面将根据TQA和TQB的情况,对AB是否组合进行分析.对于图6(b)所示的情况(AB不组合),设总加工时间为S1,对于图6(c)所示的情况(AB组合),设总加工时间为S2.理想条件下QB与QA可在不同的设备上并行加工.当AB不组合,B、QB与QA并行加工,其并行时间为max(Tp+TQB,TQA),S1=T+Tp+max(Tp+TQB,TQA);当AB组合,QB与QA并行加工,其并行时间为max(TQB,TQA),S2=TB+max(TQB,TQA).为了实现目标函数,需要选择S1和S2中较小的方案,即当S1>S2时,对AB进行组合.下面对选择图6T+Tp>TB时AB是否组合甘特图对比组合的条件进行分析.S1-S2=T+Tp+max(Tp+TQB,TQA)-根据上式中的各种取大可能进行以下4种情况分析:由此得出4种情况的首要条件:①TQB>TQA,该条件即工序B的父节点路径长度大于工序A的父节点路径长度.②TQA>TQB>TQA-Tp,该条件即工序B的父节点路径长度小于工序A的父节点路径长度,且大于工序A的父节点路径长度与B的加工时间之差.③TQB>TQA>TQB+Tp矛盾.Page6④TQA-Tp>TQB,该条件即工序B的父节点路径长度小于工序A的父节点路径长度与B的加工时间之差.在合理的3种条件下,S1-S2>0还需满足如下条件:①T+2Tp-TB-TQB>02Tp-(TB-T)>TQB②T+2Tp-TB-TQA>02Tp-(TB-T)>TQA④T+Tp-TB>0T+Tp-TB>0组合时间变化如图6(c)所示,Tp为AB的加工时间,TB-T为A推迟的时间.情况①时,发生合并的条件可以表述为:AB的加工时间的2倍与A推迟时间之差大于B的父路径长;情况②时,发生合并的条件可以表述为:AB的加工时间的2倍与A推迟时间之差大于A的父路径长;情况④时,AB组合的条件T+Tp-TB>0与图7组合策略流程图4.2最大可并行性选择策略最大可并行性选择策略就是在信号驱动时刻,当空闲设备寻找可调度工序时,如果可调度工序不AB批处理前提条件一致,因此情况④在满足首要条件即TQA-Tp>TQB时可直接对AB进行组合.组合后,PAA工序为可调度工序且开始时间不变;PAB工序为准可调度工序且开始时间为TB.理想状态下组合后的父路径工序充分并行后形成的父路径长度为QA和QB的最大值.根据以上分析,多批综合调度的组合策略如下:①对于AA类型的批处理工序,根据设备加工容量(批处理量)和文献[5]选择工序路径长的进行组合.②对于AB类型的批处理,在满足设备加工容量的前提下,批处理工序需按序满足以下条件:2Tp-(TB-T)>TQB烅烄T+Tp-TB>烆TQA-Tp>TQB.图7为组合策略的简要流程图.该组合策略可循环使用,形成多批量综合调度,唯一,选择父结点路径长的工序;如果存在父结点最长路径相同的工序,选择用时短的工序[5].由于该策略可以使得待加工工序有更多的并行Page7处理时间,所以本文在可加工工序数多于设备批加工容量的情况下,采用最大可并行性选择策略,在多个可加工工序中选取部分工序批加工.5调度算法设计及复杂性分析5.1调度算法设计调度系统分为调度算法的实现系统SS和设备的驱动系统DS.某一加工状态的工序加工完毕时,DS向SS发送信号Sig_F,该信号激活SS进行一次调度;SS调度完毕后向DS发送信号Sig_B,该信号激活DS对分配的工序执行加工.号相同则结束.④向SS发送Sig_F.若发送的Sig_F->PID与根节点工序的工序(3)SS子系统算法设计为简化后续调度工序满足最大并行性选择策略和AA类型批处理工序组工序的选择,初始时将工序集中所有工序按父结点路径长度由长到短排序.(1)信号设计一次调度时可对不同空闲设备资源分配不同的可调度工序,不同的加工工序可能在同一时刻加工完毕,因此信号Sig_F与信号Sig_F需要记录多个加工工序号及其设备号,因此为信号设置如下数据结构.StructSig_F{IntDID[MAX];//当前加工完毕的设备资源号数组IntPID[MAX];//当前加工完毕的工序号数组IntcurrentTime;//当前Sig_F发送时间};StructSig_B{IntDID[MAX];//被选择工序的设备资源号数组IntPID[MAX];//被选择工序的工序号数组IntworkTime[MAX];//被选择工序的加工时间数组};以上两个结构中DID数组与PID数组的每一项相对应,即工序PID[i]的加工设备号为DID[i],其加工时间为workTime[i].(2)DS子系统算法设计①DS等待SS传来的信号Sig_B.②对Sig_B->DID中的设备加锁,锁定时间为Sig_B->workTime.③等待某一工序加工完毕,将加工完毕工序的工序号、加工设备号和加工时间记录在Sig_F中,并释放加工完毕的设备资源.①初始时刻,记录当前时刻t0.②更新可调度工序集与准可调度集.③利用组合策略对满足批处理条件的工序进行组合.④根据SS现有的设备资源,利用最大并行性选择策略,对可调度工序进行选择,将被选择工序的工序号、加工设备号和加工时间,记录在Sig_B中,并将该工序从可调度集中删除.⑤向DS发送Sig_B.⑥等待DS传来的信号Sig_F.⑦收到信号Sig_F时,若Sig_F->PID与根节点工序的工序号相同,转⑧,否则转②.⑧记录当前时刻tn=Sig_F->currentTime,加工任务结束,产品加工总时间E=tn-t0.图8为DS和SS子系统的简要流程图.5.2复杂性分析本算法复杂之处在于,信号驱动时刻,SS利用组合策略对多批处理工序的组合判断和设备利用最大可并行策略对可调度工序的选择.由于本算法考虑最大并行性选择策略,对所有工序按其父路径长度排序,可调度工序按加工设备进行分组,从而保证了该算法有较低的复杂度,具体分析如下:设多批处理调度系统中工序集中工序总数为n,设备集中设备总数为m,下面分析其两个子系统的算法复杂度.(1)DS算法复杂度分析设备加工一个工序时,先接收信号Sig_B并在Page8加工结束时发送信号Sig_F,n个工序需进行2n次信号操作,因此DS算法的复杂度为O(n).(2)SS算法复杂度分析①调度系统初始时,对工序集中所有工序按其父结点路径长度由长到短排序,按Quick-Sort快速排序法排序,复杂度为O(nlogn).②利用组合策略先对2个可批处理工序进行判断,根据组合判断流程图7知,对2个工序进行批处理的判断次数最多为5.由于批处理工序组可由2个工序最多扩展为n个,所以形成一个批处理工序组最多判断5n次,即形成一个批处理工序组的复杂度为O(n).系统中最多形成n个批处理工序组,所以组合策略的复杂度为O(n2).③利用最大并行性选择策略对可调度工序进行选择,由于工序已按最大并行性选择策略的比较算法排序,每个工序只需1步选择操作,因此,该过程最多进行n次操作,复杂度为O(n).④SS以接收信号Sig_F作为一次调度的开始和以发送信号Sig_B作为一次调度的结束,n个工序需进行2n次信号操作.因此,SS信号接收和发送的复杂度为O(n).综上所述,本文提出的多批处理调度系统算法的复杂度为O(n2).6实例分析图9为满足树状加工模型的加工任务,如其中P6/3/15表示:加工工序号PID=6、加工设备号图10文献[3]算法调度结果甘特图图11M1批处理量为1文献[5]算法调度结果甘特图DID=3和加工时间Tp=15,设备号为1的设备是多批处理设备,批处理工序P2、P5、P7、P10和P11的加工时间Tp=30.其它设备为普通设备,即加工批量为1的设备.当M1的批处理量为1,即为一般综合调度问题,此时利用文献[3]算法调度,工序调度次序为P4、P13、P8、P12、P9、P2、P10、P11、P5、P7、P6、P1、P3、P0,结果如图10所示,加工总用时为205;利用文献[5]算法调度,工序调度次序为{P4、P11、P12}、P8、P9、P7、P2、{P1、P10}、P5、P6、P3、P0,结果如图11所示,加工总用时为180.文献[5]之所以比文献[3]调度效果好,是因为文献[3]算法在调度工序时先确定调度次序,次序靠后的工序只能在剩余的空闲时间段中寻找合适的位置,由此会产生不可被利用的空闲时间段,例如,图10中,工序P2前的空闲时间段(0~20),不能被后续工序使用,造成设备资源M1的浪费,影响了调度效率.Page9当M1的批处理量为2,利用本文算法处理M1的批处理量为2的情况时,调度结果如图12所示,加工总用时为160.由于文献[10-11]只适用于批处理量为2的情况,且无法解决本例中P5与P10(紧前工序大于1)的情况.而本文算法由于采用工序分类,使准可调度工序成为批处理工序时,无需考虑前续工序对工序批处理的影响,即对批处理工序的紧前工序数无限制,由此可知本文算法有利于解决类表2信号驱动时刻调度过程表时间01020303540508095120135选择:P4设备忙碌A:P9,P13A:P9,P13选择:P9A:P13设备忙碌A:P13选择:P13设备忙碌A:空A:空A:P3选择:P6A:空A:P0选择:P0似本例中P5与P10紧前工序大于1的批处理问题.因此,本文算法在解决处理量为2的综合调度问题时,比以往算法应用范围更广.对于批处理量大于2的批处理调度问题,是本文算法的重点.当M1的批处理量为3,采用本文提出的算法进行处理的过程如表2所示,调度结果甘特图如图13所示.Page10图12批处理量为2时本文算法调度结果甘特图图13批处理量为3时本文算法调度结果甘特图由表2和图13知,在本例的处理过程中,P7和P11满足AA类型的组合策略,形成2个工序的批处理组P7,11;在加工时间为20时,P2和P5满足AB类型的组合策略,形成准可调度工序P2,5,在加工时间为40时,P10和P2,5满足AB类型的组合策略形成3个工序的批处理组P2,5,10.通过实例分析,说明本文算法可以有效解决批处理量大于2的多批处理问题,当循环使用本文的批处理组合策略,本文算法可以解决批处理量更多的问题.7结论本文针对以往综合调度中批处理调度算法只能处理2个工序的批量调度,进行批量调度的工序不能具有2个以上的紧前工序,使综合调度具有局限性问题,创新提出基于信号驱动的多批处理综合调度算法.理论分析和实例表明:度系统,而且使调度系统具有实时性.(1)利用两个子系统间信号传递,不仅便于调(2)利用信号驱动和批处理组合策略,实现了多个工序的批量调度和具有2个以上的紧前工序的批量调度.(3)采用所设计的组合策略和最大并行性选择策略进行多批处理的复杂度只有2次多项式.因此,本文提出的算法不仅扩大了解决批综合调度问题的范围,而且算法简单实用,对深入研究综合批处理调度问题具有一定的理论和实际意义.
