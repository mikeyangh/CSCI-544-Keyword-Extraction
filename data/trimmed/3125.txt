Page1RulerRep:一种基于偏离度的过滤不实评价新方法单明辉1),2)贡佳炜1),2)牛尔力1),2)陈君2)倪宏2)1)(中国科学院研究生院北京100190)2)(中国科学院声学研究所国家网络新媒体工程技术研究中心北京100190)摘要信誉系统在解决开放网络环境中的信任问题时,较传统技术具有明显优势.然而不实评价的存在严重降低了信誉系统的可用性.文中提出一种基于偏离度的不实评价过滤方法:RulerRep.该方法以用户自身与服务提供者的直接经验为标尺,度量评价者的评价准确性,并以该评价准确性定义评价者的平均偏离度.在融合多个评价以计算服务提供者信誉的过程中,用该平均偏离度导出其评价的权重,使得平均偏离度大的节点的意见权重较小,从而达到过滤不实评价的效果.最后,以平均均方误差为指标,在实验仿真中与TRAVOS算法和没有使用过滤技术的BetaReputation系统进行了性能对比.实验结果表明,在50%与100%的评价者均为恶意节点的情况下,RulerRep仍显示出接近理论最优过滤的性能,并大幅优于同类技术.关键词信誉;偏离度;过滤不实评价;信任;RulerRep1引言传统的基于策略的信任管理系统以认证、授权技术为核心,主要用来解决将合法的资源与不合法的使用者隔离的问题.而基于信誉的信任管理系统由于更易于处理动态、开放环境中的信任关系,因此更适用于分布式网络环境中;同时其更适于解决把合法的使用者与不合法的资源隔离开的问题,因此逐渐发展成为一种新的信任处理机制.信誉(Reputation,也称声望),是指一个集体对一个个体的某种特性的一般评价[1].一般认为实体的信誉依赖于其在系统中的行为表现,并由其它节点的评价聚合而成.信誉系统的基本原理可描述为:当服务请求者需要计算某服务提供者的某种属性值、而本地又没有该提供者足够的信息时,该请求者向网络中其它节点发送询问请求,其它节点基于其与该服务提供者的交互历史返回评价(也称推荐),则请求者可通过返回的评价信息计算出该服务提供者的该属性值,从而可为进一步是否选用其服务的决策提供依据.信誉系统,按其技术不同可分为简单平均模型、贝叶斯模型、离散信任模型、基于证据理论模型、模糊模型、流式模型等.国内外学者近年来提出了多种信誉系统,其中较具代表性的有文献[2-12].其中,Jsang提出的BetaReputation[2]是基于贝叶斯概率理论信誉系统中的代表,该系统适用于交互结果可用二值(好、坏)描述的场景.信誉系统现已广泛应用于在线贸易的商家评定、P2P文件传输的上传节点选择、网格计算等多个领域.但目前信誉系统仍面临着多种攻击,如Freeriding现象、评价的正向偏移、不实评价(虚夸,诋毁)、身份变更、节点品质随时间变化、辨识身份区分服务、评价量奇大等[1].其中,对不实评价过滤的研究是其中的一个热点.不实评价,指的是评价者在对某服务提供者进行评价时,做出了与事实不符的评价,从而达到其私利目的,如虚夸和诋毁等.前者指评价者做出比真实值更好的评价以抬高服务提供者信誉,后者指评价者做出比真实值更差的评价以降低服务提供者信誉.不实评价的存在,使得对服务提供者的信誉值计算准确度大大降低,从而降低了信誉系统的可用性.国内外学者针对不实评价的过滤提出了多种解决方法,按其技术体系主要可分为内生式和外生式[1]两类,内生式指利用一组评价自身的统计信息识别不实评价,该类方法主要采用聚类的技术,典型代表技术有文献[4-5,7];外生式指借助于外部的信息,如评价者的信誉值,识别并过滤不实评价.一般而言,内生式和外生式方法可同时使用,从而进一步增强过滤效果,提高计算的准确度.在外生式过滤不实评价的方法中,典型的外生式过滤不实评价的方法有文献[5-6,11],文献[6]提出了一种基于证据理论的信誉系统,其过滤不实评价的主要思想为每次交互后根据公式wj+1调整权重wi,若交互结果与推荐者的推荐值相差较大,则θ较小,反之θ较大.该方法某些参数没有给出计算方法,需要依赖主观决定.文献[5]综合运用了内生式和外生式方法构造了一个适用于网络书评的信誉系统.在该系统所采用的外生式方法中,评价者权重的确定综合考虑了评价本身的信息和读者对评价的评价,因此要求读者对评价进行评价这种额外操作.文献[11]提出了一种基于BetaReputation的不实评价过滤方法,其主要思想与本文类似,都是利用评价者的评价与本节点的直接经验之间的差异大小,对评价者的评价进行调整.但Travos方法需要将评价的值域空间平均分成多个段,分段的数目对性能会有严重影响;另一方面由于每次评价只能使用一个段内的数据,从而增加了所需的历史评价数目.本文提出了一种应用于BetaReputation系统的、基于评价偏离度的不实评价过滤方法:RulerRep.该方法的主要思想为:以服务请求者与服务提供者的交互经验为标尺,以评价者对同一服务提供者的评价与该标尺的差异大小,度量该评价者在评价活动中的准确性,以此定义评价者的平均偏离度.在融合多个评价以估算服务提供者信誉的过程中,利用该平均偏离度对各个评价者的意见分配不同的权重,使得平均偏离度大的节点的意见权重较小,从而大幅降低恶意节点的影响,有效过滤不实评价.实验结果表明,在50%与100%的评价者均为恶意节点的情况下,RulerRep仍显示出接近最优过滤的性能,并大幅优于Travos.本文第1节为前言,介绍信誉系统以及过滤不实评价的研究现状;第2节介绍BetaReputation系统;第3节详细描述RulerRep的算法;第4节是实验仿真与数据分析;第5节对全文进行总结并提出下一步工作的方向.Page32Beta信誉系统2.1定义与说明根据一次服务结果值域的不同,信誉系统可分为基于二值的、基于多值离散域的和基于连续域的.本文所述系统为基于二值,即服务结果可用好、坏二值表示.因此服务提供者的信誉值可定义为其提供好服务的概率P,而信誉系统的目标就是利用评价信息尽量精确地估计P的值.在一个信誉系统中,节点可分为3种:服务提供者(provider)、评价者(rator)和用户(user).Provider:表示为proi,i为节点编号,下同.该类节点可向rator和user节点提供某种服务或资源,如文件下载、流媒体播放等.Rator:表示为ratori.该类节点既可向provider节点申请并享用服务、并记录服务结果,又可向user提供其与provider的交互历史及结果,作为其对该provider的评价(rating).ratori对proj的评价定义为二元组〈goodij,badij〉,用rij表示.其中,goodij代表ratori与proj交互历史中成功的次数,badij代表失败的次数.User:表示为useri.该类节点可向provider申请服务,并记录服务结果;又可向rator索取其对某一provider的评价,以计算该provider的信誉值.在实际系统中,同一个节点往往兼具rator和user身份(如user本身也可给出对某一provider的评价),实际取何种身份依赖于该节点在该次交互过程中所起的作用,可根据上下文区分.2.2信誉计算Jsang等提出了一种基于二值的信誉系统[2],用贝叶斯理论计算节点的信誉值,其主要思想描述如下:假设proj提供好服务的概率是Pj.节点i与之经过若干次交互后,交互历史可以用〈goodij,badij〉二元组表示.利用贝叶斯估计方法,根据同等无知原则,由交互历史〈goodij,badij〉得出的Pj的概率密度函数为Beta分布的形式[12]:f(Pj|αij,βij)=Γ(αij+βij)0Pj1,αij=goodij+1,βij=badij+1(1)其中,Γ(·)代表Gama函数:值P^ij:由式(1)求Pj的期望,即得Pj的贝叶斯估计P^ij=∫1则P^ij即可作为节点i计算出的proj的信誉值.对于某一待考察provider节点proj,大多数情况下useri自身没有足够的直接经验,因此需要利用来源于系统中其它节点的间接经验,对proj的信誉值进行估算.此时,useri先向邻近的rator查询其对proj的评价(设该邻近rator节点集合为Ri),获得形式为〈goodkj,badkj〉的评价rkj.要将user自身的直接经验与来自多个rator的评价{rkj}融合,则只要把各个rator的评价按照下述公式相加,即可得出融合后总的经验〈GOODij,BADij〉.由总的评价〈GOODij,BADij〉,根据式(2),useri即可计算出proj的信誉值P^ij.在实际系统中,为处理节点品质随时间变化的情况,通常会降低较早交互经验的权重,常用的技术有在评价上乘一个指数时间衰减因子和加时间窗两种.由于该技术并非本文重点,为降低描述复杂性,本文假设节点的品质是不随时间变化的.另外,本文不涉及信任网络的建立,useri构造集合Ri的方式并非本文重点,因此本文假设该集合Ri已经建立完毕.从上述过程可以看出,BetaReputation系统将所有的节点默认视为可信节点.因而恶意rator节点可通过报告错误的交互经验对系统发起攻击.设某一恶意节点ratorx对proj的评价rxj为〈goodxj,badxj〉,则当goodxj+badxj较大时,根据式(2)和(3)计算出的信誉值P^ij将受rxj的严重影响.这样,恶意节点即可依据自己的喜好而肆意影响网络中其它节点的信誉值,从而破坏系统的可用性、可靠性.下面即介绍一种过滤不实评价的方法,可有效抵御恶意评价节点的攻击.3RulerRep算法3.1基本思想将ratori与proj的每一次交互视为ratori对PjPage4的一次观测.经过N次观测后,ratori可根据观测的N个结果对Pj做出估计,这个估计过程我们称之为ratori对Pj的一次测量过程.若ratori属于良节点,则其测量结果中应该只有随机误差,且误差的大小仅与历史交互的次数N相关,N越大,误差越小(严格意义上讲,误差也与Pj相关.本文忽略了Pj对误差的影响,以求得到简练的形式).以公式来表达,应有形式:=e(Nik)-e(Njk)其中,e(N)为随机变量:其均值为0;方差随N增加而减小,当N趋于无穷时趋于0.当两个良rator节点ratori、ratorj均对同一个provider节点prok做出了测量时,根据式(4),其测量结果的差为Dij,k=P⌒P⌒即其测量结果的差也为随机变量:其均值为0;方差随Nik、Njk增大而减小,当Nik、Njk均趋于无穷时趋于0.可见,Dij,k衡量了两个测量结果之间的距离.若ratori是良节点而ratorj是恶意节点,则式(5)中随机变量Dij,k不再满足均值为0、方差随N增大而趋于0的约束.因此,useri可以通过Dij,k衡量与ratorj之间的偏离程度:若偏离程度大,则说明ratorj很可能是一个恶意评价节点,因此应给予其意见较小的权重;否则给予其意见较大权重.详细的过程描述如下.3.2偏离度与准确度定义1.评价信誉.设ratori对prok有评价rik=〈goodik,badik〉且Nik=goodik+badik>0,则评价信誉定义为通过单个评价rik直接得出的信誉估计值P^ik:其值域为P^ik∈[0,1].对于Nik=0的情况,由于是空评价,因此计算其评价信誉无实际意义.式(6)是经过Nik次实验后、对Pk的一种无偏估计[12].之所以这里选用该式而非式(2)的贝叶斯估计,是由于该信誉估计值是一个中间变量而非最终结果,需要在后面参与进一步计算;若采用式(2)的定义,会将“同等无知”原则运用多次,从而增加了先验概率的影响.实践表明,此处采用式(6)定义比式(2)效果要好.评价信誉的值是一种估计,其估计准确程度随Nik的增加而增加.为了表述该准确性,我们定义了评价信誉的准确度:定义2.评价信誉的准确度.设评价信誉来源于prok对ratori提供的Nik=goodik+badik次服务,则评价信誉的准确度定义为其值域为CP^ik∈[0,+).准确度具有两层物理含义:一方面它表征了计算评价值所依据的数据量的多少,另一方面,通过推导能够发现准确度与评价值的方差之间存在近似倒数关系,因篇幅原因,推导过程略去.这两层物理含义在后面的其它类型准确度中也存在.定义3.评价的偏离度.若ratori与ratorj各自独立给出了对prok的评价rik、rjk,则定义这两个评价的偏离度为其值域为Dij,k∈[0,1].定义4.偏离度的准确度.若ratori与ratorj各自独立给出了对prok的评价rik、rjk,其偏离度为Dij,k,且rik、rjk所依据的实验次数分别为Nik、Njk,则偏离度Dij,k的准确度定义为其值域为CDij,k∈[0,+).从定义式可看出CDij,k小于CP^ik和CP^jk,即偏离度的准确度低于其所依据的任何一个评价信誉的准确度.评价的偏离度刻画了两个评价之间的距离,而偏离度的准确度则描述了对于这种距离度量的准确程度.设与节点i有交互历史的provider节点集合为Hi,则节点i与节点j之间有共同交互历史的节点集合为Hij=Hi∩Hj.定义5.评价者的平均偏离度.以useri的经验为参照,则ratorj平均偏离度定义为其值域为Dij∈[0,1].为参照、ratorj的平均偏离度Dij的准确度定义为定义6.平均偏离度的准确度.以useri的经验其值域为CDij∈[0,+).Page5平均偏离度描述了ratorj与useri之间意见的一般偏离程度.根据3.1节中的分析,useri可根据该平均偏离度判定ratorj是一个恶意节点的可能性.平均偏离度的测量是根据useri、ratorj与共有的交互伙伴集合Hij之间的历史交互结果,其交互次数越多,该测量越准确,因此可基于交互次数构造平均偏离度的准确度,来衡量这种准确性.平均偏离度与平均偏离度的准确度组成的二元组〈Dij,CDij〉描述了useri对ratorj品质的估计,其典型意义如下(useri自身为善意节点):(1)当CDij趋于无穷时:若ratorj为善意节点,则Dij趋于0;若ratorj为恶意节点,则Dij>0,其值越大,则说明ratorj说谎的程度越大.(2)当CDij趋于0时:尽管Dij有某一确定值,但由于其数据来源太少,该值没有使用价值.(3)当CDij为有限值时:对同样的Dij,CDij越大说明准确性越高;对同样的CDij,Dij越大说明节点越有可能是一个恶意节点.因此,综合考虑平均偏离度与平均偏离度的准确度组成的二元组〈Dij,CDij〉,即可以确定useri对ratorj的信任程度.3.3信誉计算当useri需要计算proj的信誉时,useri先向一组rator节点发出询问请求(设该组rator节点集合为Ri);各rator节点返回对proj的评价后,useri即依据rator的平均偏离度,对各个rator的评价进行修正,使得偏离度大的节点其意见权重较低.具体方法如下:首先,根据式(12),用CDij修正Dij.式(12)表示实际采用的平均偏离度要根据平均偏离度的准确度做出调整:偏离度可能是由于测量中的随机误差导致的,而方差是衡量随机误差大小的指标,又因为平均偏离度的准确度和方差成近似倒数关系,因此利用式(12)能够尽量排除随机性的影响.为保证一定的置信水平,要减去一个与准确性相关的值.θ1为经验参数,其取值对系统的影响如下:(1)若θ1>0,表示把“该节点平均偏离度为0”作为原假设:除非有足够的证据证明该节点偏离度不为0,否则将该节点的偏离度视为0.此时,其取值影响识别恶意节点的误识率与漏识率:θ1越大,则误识率越小、漏识率越大;反之亦然.根据实验结果,为取得较好的折衷性能,θ1取值一般在1.5~2.5之间,本文取θ1=2.(2)若θ1=0,则表示不依据可靠性来修正偏离度.(3)若θ1<0,表示把“该节点平均偏离度大于0”作为原假设;其它分析结果类似(1).然后,根据调整后的平均偏离度,调整每个评价者的评价.该调整方法应满足特性:(1)平均偏离度越大,其评价的权重越小.(2)偏离度每增加一定值,其权重也应下降一固定百分比.即若两个评价者的平均偏离度分别为D1、D2,评价的调整因子f(D)应满足f(D1)/f(D2)=g(D1-D2).因此构造调整公式如式(13).其中,θ2为经验参数,其取值决定计算结果对偏离度的敏感程度:(1)θ2=0,表示不依据偏离度来修正意见.(2)θ2>0,越大表示系统对偏离度越敏感,同等偏离度的评价者其评价被折扣得越多.根据仿真结果,经验参数θ2=40时能够取得比较好的实验效果,因此本文取θ2=40.(3)θ2趋于正无穷,表示平均偏离度为0的节点的评价被无条件接受,其它的评价都被完全拒绝.根据式(12)、(13)得到修正意见〈goodmkj,badmkj〉后,proj的信誉即可由式(2)、(3)计算,即useri对proj总的信誉估计值为4仿真与比较分析4.1仿真环境说明目前过滤不实评价性能较好的外生式技术为Travos,因此本文选择Travos进行了对比(参照文献[11]设置,其值域划分为5个小区间),并选择相同环境下未使用任何过滤方法的基本BetaReputation作为参照.仿真环境中设有一个user节点,10个rator节点,41个provider节点.其中,rator节点分为良(fair)节点和恶意(unfair)节点,对unfair节点,我们分别仿真了以下几类:lyingrator、noisyrator、badmouthingrator和braggingrator.设ratori与proj节点的真实交互历史为〈goodij,badij〉,则ratorPage6向user报告的评价〈goodij,badij〉将依rator身份的不同而有所差异:Fair节点:如实报告:Lying节点:报告与真实结果相反的经验:Noisy节点:在真实评价上增加一个随机值:烄1,0,ρ=烅goodijgoodij+badij+e,烆goodij=ρ·(goodij+badij),badij=goodij+badij-goodij,其中,e是一个在[-0.4,0.4]之间均匀分布的随机变量.Badmouting节点:对provider进行诋毁:Δ=mingoodij,1goodij=goodij-Δ,badij=badij+Δ.Bragging节点:对provider进行虚夸:Δ=minbadij,1goodij=goodij+Δ,badij=badij-Δ.对41个provider节点,其提供好服务的真实概率Pi在[0,1]区间内平均分布,分别设为[0,0.025,0.05,…,0.975,1].设user通过信誉系统估算出的概率值为P^i,则信誉系统的性能可通过估算值与真实值之间的平均均方误差来衡量(NP为provider节点个数):4.2仿真流程仿真系统的运行流程描述如下,其中user指特定的一个集中计算者,并不包括rator.流程中的步7之所以跳到步2,主要是为了模拟真实环境,因为在真实环境中user在计算新的声望值前,并不知道在过去的一段时间内,整个系统内的rator是否发生过新的交易行为,因此user在每次计算新的声望值前需要实时向每个rator查询其对每个provider的评价,然后再根据自己的直接经验计算.虽然对于本文所描述的特定仿真流程,每一次循环中步2和3的返回结果是一样的(除noisy结点外),因此循环步骤能够简化成直接跳到步4,但为了保持和实际运行步骤的一致性,本文仍选择循环步骤跳到步2.1.系统随机挑选一对rator与provider进行交互,共进行41×10×20=8200次,即平均每个rator与每个provider之间进行20次交互,以产生rator与provider的交互历史.初始化循环变量i=0.2.user向每个rator查询其对每个provider的评价.3.rator以其与provider的交互历史记录数据为基础,按照4.1节中设定的行为方式,构造评价响应user的查询.4.user根据收到的评价,按照某一不实评价过滤方法,估计每个provider的信誉值.5.系统依据式(16)求得该次估计的平均均方误差Φi.6.user与每个provider都进行一次交互,并保存交互结果;i++.7.如果i<40,进入步2.8.结束,输出每次的Φi.每次实验都将运行20次,并取平均值作为评测依据.4.3实验数据与分析我们分别对BetaReputation(不使用任何过滤技术)、Travos算法和RulerRep算法进行仿真,仿真效果以平均均方误差作为标准进行比较,并以平均均方误差为纵轴、user与provider之间的交互次数为横轴作图.实验分为两部分,第1部分实验侧重对比系统在善良环境(评价节点全为善意)和恶意环境(50%的评价节点是恶意节点)中的过滤性能;为了突出对比效果,该部分实验中user在计算信誉值时并不采用式(14),而是根据没有使用自身直接经验的式(17)以及式(15)来计算信誉值.各次实验中,rator节点的组成结构如表1所示,实验结果见图1~图5.Page7图2一半rator为lyingrator时的过滤效果对比图3一半rator为noisyrator时的过滤效果对比图4一半rator为badmouthingrator的过滤效果对比图5一半rator为braggingrator时的过滤效果对比类型fairlyingnoisybadmouthing00050bragging一个好的不实评价过滤算法首先应该满足在良好系统环境中的可用性要求,即尽量小的误识(不是恶意节点却被识别成了恶意节点)率.从图1中可以看出,当10个rator均为fairrator时,BetaReputa-tion系统由于将所有rator都视为完全可信的,没有引入错误,可认为是理论最优值,其均方误差最小;而RulerRep系统的平均均方误差曲线基本与BetaReputation的重合,可见RulerRep的过滤对fairrator节点基本无不良影响,即对恶意节点的误识率极小;在Travos系统中,当user与provider之间的交互次数较少时,因其无法检验rator是否值得信赖,因此将大部分rator的评价都错误地过滤掉了,随着user与provider间交互次数的增加,这种错误影响趋向于减小,直到交互次数达到20以后,其影响才基本消除.图2~图5分别对比了当存在各种类型的恶意节点时系统的过滤效果,并增加了去掉所有恶意节点、只有5个fairrator后的BetaReputation系统(可视为最佳过滤结果)性能作为对比.从图中可以看出,不使用过滤技术,计算出的信誉值与真实值之间的差异非常大,使得计算值几乎无使用价值,即恶意节点的存在能严重影响系统的可用性.Travos与RulerRep系统对不实评价的过滤效果均非常明显,可大幅提高系统的可用性,对二者相比较可以看出:(1)当user与provider之间的历史交互次数N足够多时(30~40),二者对各种不实评价攻击均有明显过滤效果.但RulerRep系统的平均均方误差普遍比最优值仅高4%以内,而Travos系统的平均均方误差则比最优值大得多.尤其对noisy型节点的攻击,其平均均方误差比最优值大150%以上,因此可认为Travos系统对noisy型节点的过滤效果不佳.其统计数据如表2、表3所示.表2犖较大时平均均方误差比不用过滤系统降低的平均百分比(1-Φ狓/Φnofilter)·100%,狓={Travos,RulerRep}算法Travos84.612.6561.3961.9RulerRep87.6864.269.5666.27Page8表3犖较大时平均均方误差比理论最佳过滤系统升高的平均百分比(Φ狓/Φbest-1)·100%,狓={Travos,RulerRep}算法Travos28.24153.2230.4814.42RulerRep2.593.782.871.3(2)当user与provider间的历史交互次数N较少时(1~10),RulerRep比Travos的平均均方误差降低显著.其统计数据如表4、表5所示.对于网络交易等应用而言,由于实际环境中user与provider间的历史交易次数较少,因此本项对比结果更具实际意义.表4犖较小时平均均方误差比不用过滤系统降低的平均百分比(1-Φ狓/Φnofilter)·100%,狓={Travos,RulerRep}算法Travos77.075.8439.7236.78RulerRep87.4751.9457.953.73表5犖较小时平均均方误差比理论最佳过滤系统升高的平均百分比(Φ狓/Φbest-1)·100%,狓={Travos,RulerRep}算法Travos90.94172.94103.789.87RulerRep4.3739.3142.2638.98在第2部分实验中,所有rator节点均为恶意节点,而user节点在计算provider节点信誉时将加入自身的直接经验.该部分主要对比user节点处于极端恶劣环境中时系统的鲁棒性能,并增加了去掉所有恶意节点后的BetaReputation系统(可视为最佳过滤结果)进行对比.各次实验中,rator节点数目如表6所示,实验结果见图6~图9.表6第2部分各次实验中的rator数目配置类型lyingnoisybadmouthing00100bragging图6融合直接经验与10个lyingrators的评价结果图7融合直接经验与10个noisyrator评价后的结果图8融合直接经验与10个badmouthingrator评价后的结果图9融合直接经验与10个braggingrator评价后的结果从图6~图9中可以看出,当user周围的rator都是恶意节点时,采用过滤系统仍然可以将不实评价的影响大幅降低.对比Travos与RulerRep的结果:(1)在数据量较多时RulerRep表现出较为明显的优势,几乎与将所有恶意节点过滤掉的理论最优性能一致;而Travos仍有不可消除的误差.(2)在应对badmouthing与bragging节点攻击时,在某些区段,RulerRep的表现甚至超越将所有恶意节点都过滤掉的情况,其原因是由于随机误差.(3)当user与provider间交互次数较少时,RulerRep比TravosPage9的优势不明显,在恶意节点为badmouthing和类型、且交易次数小于等于3时甚至略差;这是因为RulerRep在无数据情况下假定所有rator均为可信的,而Travos假定所有节点均为不可信的,因此在此极端恶劣情况下,Travos的性能较优;Travos的假设是以提高误识率的来降低漏识率,因此也导致了Travos在非极端恶意环境中的性能较差(参照第1部分实验,即使在50%的结点均为恶意节点的次极端恶劣环境下,Travos的这种假设也将转换为劣势).考虑到实际应用环境中,恶意节点的比例远比仿真环境中所设定的要低,因此Travos在这种特殊情况下(所有评价者均为恶意、恶意节点类型为badmouthing或bragging、user与provider的交互次数又恰小于等于3次)的略微相对优势可忽略不计.RulerRep方案比其它方案优的原因在于其侧重于消除信誉度量的一个重要误差:辨识力误差.辨识力误差来源于对真实信任度辨识的客观能力不足或主观故意歪曲,并且无法像随机误差一样随着增加实验次数而减小.而RulerRep提出的以平均偏离度和平均偏离度的准确度组成的二元组能够比较准确地度量辨识力误差,从而达到了比较好的实验效果.5结论信誉系统是分布式环境中解决信任问题的有效方法,然而目前信誉系统仍面临包括不实评价在内的多种攻击威胁.本文提出了一种信誉系统中基于偏离度的过滤不实评价的新方法:RulerRep.该方法属于外生式过滤方法,其主要思想为:以服务请求者与服务提供者的交互经验为标尺,用评价者对同一服务提供者的评价与该标尺的差异大小,度量该评价者的评价准确性,以此定义评价者的平均偏离度.在融合多个评价以估算服务提供者信誉的过程中,利用该平均偏离度对各个评价者的评价分配不同的权重,使得平均偏离度大的节点的评价权重较小,从而大幅降低恶意节点的影响,有效过滤不实评价.实验仿真结果表明,该方法可应对各种类型攻击,对不实评价的过滤接近最优过滤效果;同时对善意节点影响可忽略不计.与现有同类系统相比,RulerRep在对善意节点的影响、对各种恶意节点的过滤上,性能均有大幅提高,尤其适用于历史交互数据量较小的应用环境.下一步的工作主要集中在:(1)研究RulerRep对各种类型、不同强度攻击的过滤效果,研究系统中经验参数对各种攻击过滤效果的影响.(2)研究RulerRep在多值离散域、连续域评价系统上的应用.(3)构造系统框架、研究与之配套的通讯协议,分析在网络环境下的通信、计算开销.(4)研究在无线传感器网络等节点资源极为有限的情况下的简化系统.
