Page1关系数据中函数依赖检测方法钟评李战怀陈群(西北工业大学计算机学院西安710129)摘要在数据质量研究中函数依赖被广泛用于关系数据不一致性的修复.然而,不一致修复问题面临的一个主要挑战是如何从包含有错误的关系数据中自动发现有效的函数依赖(FunctionalDependence,FD).目前基于统计度量置信度的FD自动发现方法经常找出大量近似成立但无效的FD.如果直接利用这些FD修复数据,会产生更多错误.针对该问题,文中提出了一种基于数据语义分析的函数依赖检测方法.该方法通过条件概率来分析属性值和元组的数据置信度,进而计算函数依赖成立的置信度.文中同时提出了利用关系数据构建马尔科夫毯贝叶斯网络用以计算数据置信度的方法.最后文中通过实验在模拟数据和真实数据上验证了基于数据语义的置信度计算方法在自动检测中的精确度优于基于统计的计算方法,并且在交互式检测应用场景中数据语义的置信度所需用户工作量少于基于统计的方法.关键词数据质量;函数依赖;数据置信度;条件概率1引言当前数据不一致是关系数据中普遍存在的问题[1].从关系数据中发现函数依赖(FunctionalDependence,FD),再通过删除或修改不一致数据使其满足给定函数依赖,是当前不一致性修复的常用方法.然而,在当前不一致性修复中,FD自动发现算法得到的近似成立FD不一定是真实成立的.在给定数据和FD集都含有错误的情况下,如果数据违反了FD,则有两种可能原因:(1)FD成立,数据违反函数依赖需要修复;(2)FD本身不成立,数据不需要修复.本文主要研究在数据含有错误的情况下FD的检测问题.以表1为例,假设表1中存在两个近似成立FD,记为φ1与φ2,分别有其中数据元组t1不满足函数依赖φ1,但是通过实际验证可以发现,t1虽然City(城市名),County(郡名)属性与t3,t4,t5,t6取值相同,但是实际中却是同名的不同城市,因此该FD在实际语义中不成立.与φ1相比,对违反φ2的元组t9验证可知,t9中County属性值现实中确实是错误应当修改,φ2成立.由此可见,FD检测通常需要涉及到关系数据在现实世界中的语义.虽然现实世界中的语义信息无法完全和精确获取,但本文通过在给定的关系数据中寻找能够反映现实世界语义的信息,即数据语义作为解决当前问题依据.目前,仅有部分不一致性修复研究考虑了FD不成立的情况[2-4],针对关系数据的FD自动挖掘仍主要采用基于统计的置信度[5]计算方法.该方法假定数据中错误仅占很小一部分,因此FD中不一致数据越少,其成立的可能性越大.然而,由于该方法没有考虑数据语义,除包含真实成立的FD以外,检测结果通常也会包含很多无效的FD,因此总体的检测精确度仍有可能很低.如第6节图4(e)~(h)实验所示,在真实数据hospital的精确度实验中置信度前20%的近似FD中真实成立的FD不到30%.本文贡献如下:(1)针对关系数据提出了一种基于数据语义分析的FD检测方法.该方法通过条件概率定义属性值和元组的数据置信度,提出相应的FD置信度计算方法;(2)提出了构建并使用马尔科夫毯贝叶斯网络来计算数据置信度的方法;(3)通过在模拟数据和真实数据集上的实验,验证了基于数据语义的置信度计算方法在自动检测中精确度高于统计置信度方法,并且在交互式检测应用场景中数据语义的置信度所需用户工作量少于基于统计的方法.本文第2节为相关工作;第3节概述FD概念以及FD检测问题;第4节介绍数据置信度和FD数据语义分析置信度的定义;第5节介绍使用数据构建马尔科夫毯贝叶斯网络用以计算数据置信度的方法;第6节通过实验验证该方法对函数依赖的检测效果;第7节为结论.2相关工作目前,关系数据中不一致性的修复主要通过函数依赖实现.文献[1,6]对不一致性修复进行了综述性介绍.文献[7]首先提出了直接修复数据值的代价修复模型.该模型通过寻找一个满足给定FD集并且修复代价最小的修复方案来修复数据.文献[8]对FD在语义上扩展提出了条件函数依赖(ConditionalFunctionalDependence,CFD),CFD可以看做是一种局部的FD,文献[9]提出了基于代价修复模型使用FD和CFD共同修复数据的方法.文献[10]对代价模型修复算法进行优化,提出了近似最优修复的方法.文献[11-12]提出使用采样的方法对海量数据进行修复.此外,文献[13-15]分别提出了不同于FD和CFD的其他数据修复方法.关系数据不一致性修复首先需要自动发现数据中的FD.文献[16]介绍了FD自动发现研究现状,文献[17-18]等分别提出了从数据中发现最小FD集的算法.文献[17]提出的TANE算法使用分层搜索策略,将FD搜索空间按照FD中属性数分层并逐层搜索,同时在搜索过程中对搜索空间剪枝.并证明该方法对数据量有良好扩展性.文献[18]提出算法FastFDs通过计算各数据元组的不一致集来发现FD集,该方法对数据中属性数量有良好扩展,但复杂度是数据量的平方.文献[19]将FD自动发现算法扩展到CFD,提出了分别基于TANE算法和FastFDs算法的CFD发现算法CTANE和CFDMiner.文献[20]提出一种深度优先的发现算法,该方法能够用于数据量较大条件下的发现.文献[21]实验评估了当前多种发现算法的效率.当前数据修复流程主要是首先通过上述文献[17-19]中函数依赖发现算法发现数据中成立或近Page3似成立的FD或CFD等规则.再使用文献[7-15]方法对不满足规则的数据进行修复.但这样的方法面临一个问题是FD或CFD发现方法得到的规则不是语义上成立的,无法直接应用于数据修复.当前衡量规则是否成立主要采用文献[5]基于统计的置信度的方法,置信度是近似函数依赖[15](ApproximateFunctionalDependence,AFD)中使用的概念.该方法假定数据中错误仅占很小一部分,则FD中不一致数据越少,其成立的可能性越大.该方法发现的近似成立FD中通常含有大量无效的FD,需要进一步的人工判定.文献[22]分析了FD,CFD与关联规则(AssociationRale,AR)之间的层级关系,并指出AR发现算法可适用于所有依赖发现问题.由于近似成立的FD不一定在语义上真实成立,直接应用其对数据修复会引入更多错误.文献[2-3]研究了给定FD集不完全成立条件下的修复方法,同时考虑FD和数据的修复代价,但研究局限于修复代价的优化问题上.文献[4]提出的增量式修复方法通过人为定义FD的统计特征作为分类特征,通过人工标注的函数依赖作为训练集进行增量式的有监督学习和修复,再检测其他FD是否成立并进行数据修复.该方法特征选取有主观性,忽略了不同FD可能包含的不同语义.而且,该方式是有监督学习方法,需要人工进行样本标注.本文针对上述检测FD是否成立的问题进行了研究,提出了一种自动检测FD方法,实验结果显示本文方法得到的FD集拥有较高的精确度.3函数依赖概念与检测问题3.1函数依赖概念与定义设数据库关系模式R由m个属性组成,记为(A1,A2,…,Am).Dom(A)记为属性A的域,I表示数据库中由|I|个元组组成的实例.则每一个元组都属于空间Dom(A1)×…×Dom(Am).对于元组t∈I,记为t[A],表示元组t在A属性的取值.R上的一个FD表示为X→Y,其中X,YR.其中X称作FD的左部(Left-Hand-Side,LHS),Y称作FD的右部(Right-Hand-Side,RHS).一个FD在数据库实例I上成立(记为IX→Y),当且仅当t,t∈r,t[X]=t[X]t[Y]=t[Y].在R上FD集合Σ如果是一个最小覆盖(minimalcover),则满足Σ中每个FD都是简化的形式X→A(即FD右部仅有一个属性),并且任意φ∈Σ不会被Σ-φ蕴涵.以表1为例,表1为美国医院数据中的部分信息,主要包含医院所在地、邮编和联系方式等.假设有FD:ZipCode→States.表示数据集中所有ZipCode(邮编)取值相同的元组,其对应属性States(所在州)的取值必须相同.如果不相等,则该数据是违反函数依赖的不一致数据.t1LOUISVILLEJEFFERSONGA304344786257000t2MILLENJENKINSGA304424784784221t3LOUISVILLEJEFFERSONKY402025025874011t4LOUISVILLEJEFFERSONKY402025026296560t5LOUISVILLEJEFFERSONKY402025025623000t6LOUISVILLEJEFFERSONKY402075028978100t7BaltimoreBaltimoreCityMD212014103288667t8BaltimoreBaltimoreCityMD212014102258996t9BaltimoreKetchikanGatewayMD2120141060570163.2函数依赖检测问题FD的检测问题可以形式化描述为:给定FD候选集Σ以及数据库实例I,对每一个函数依赖φ∈Σ,置信函数f:f(φ,I)将Σ中每个FD和I作为输入,映射得到一个实数d(φ)∈[0,1],作为函数依赖成立的度量.当前数据修复领域通常使用AFD中的置信度概念来度量FD成立的可能性.在数据库设计中,当允许一个FD含有部分不一致数据时,则该函数依赖是一个AFD.置信度用来衡量一个AFD与对应FD在数据上的近似程度,当前主流方法是统计一个AFD同对应FD元组上的相似比例,一个函数依赖φ:X→Y的置信度con(φ)标准形式为con(φ)=式(1)中∏X影,cX(x)表示属性X的取值x在I上的元组数.以表1中φ2:ZipCode→County为例,可以计算出置信度con(φ2)=1+1+3+1+2与基于统计的置信度计算方法不同,本文提出通过分析I中违反待检测FD的数据项是否需要修复来计算FD成立的置信度.为区别起见,本文将基于数据语义分析置信度(DataSemanticConfidence,DSC)简称DSC置信度,传统基于统计的置信度称为SC置信度(StatisticalConfidence,SC).Page44基于数据语义分析的FD检测方法本文目标是通过从给定数据中寻找数据所包含的语义信息来解决检测问题.贝叶斯网络作为一种描述数据因果关系的模型,其网络结构蕴含了数据的因果关系.基于贝叶斯网的数据语义信息本文提出判断不一致数据是否需要修改的方法———数据置信度.本文依据第3节中检测问题定义,使用违反FD元组的数据置信度来定义FD成立的可能性,即FD的DSC置信度.本章介绍数据置信度和DSC置信度的定义.第5节介绍使用马尔科夫毯贝叶斯网络计算数据置信度的方法.4.1数据置信度以表1中为例,元组t1属性City,County取值虽然与t3~t6相同,但是Zipcode与Phone取值有很大差异,可以作为支持t1是同名的不同城市的证据.本文通过为该属性构建贝叶斯网络,并利用网络中相关属性E的值t[E]=e计算元组t当前值t[A]=a的条件概率p(a|e)来推测t[A]是否需要修改.其中证据属性E通过贝叶斯网络构建获得.具体方法在第5节介绍.本节首先定义元组单个属性的数据值置信度,对于元组t,其属性A∈U取值t[A]=a的数据值置信度定义如下.定义1.数据元组t∈I,I中所有属性记为U,属性A的取值a=t[A],证据e=t[E],其中EU/A,则元组t中属性A的数据值置信度定义为式(2)中p(a|e)-p(a)代表的意义可以用分类的观点解释:将A的取值范围a∈Dom(A)中每一个值看作一个类标签,p(a)代表没有任何额外信息时,元组t分到类a的概率.P(a|e)为当知道作为证据的属性E取值信息时分类为a的概率.当已知该元组证据属性E取值e时,e使得该元组分类为t[A]=a的概率发生了变化.p(a|e)-p(a)越大,说明证据属性取值在概率上越支持当前值,则a=t[A]置信度越大.反之如果P(a|e)-p(a)越小,则认为当前值更应当修改.式(2)中r(t,A)取值范围为-1<r(t,A)<1,为了方便后续计算和排序,因此将r(t,A)进行归一化,得到归一化后的数据值置信度:式(2)定义单个属性t[A]的数据值置信度后,需要定义元组t的数据置信度.对于一个违反FD:X→Y的元组t,集合X∪Y中属性都可能发生错误,t的数据置信度应当由所有可能发生错误的属性定义.元组中一个属性值有错时,整个元组被看作是不一致数据.因此一个元组t的数据置信度定义为所有可能错误属性的数据值置信度最小值:以表1中元组和φ2:ZipCode→County为例,要计算违反φ2元组t9的数据置信度,则需要计算t9中所有φ2相关属性的属性值置信度并取最小值.即r(t9,I,φ2)=min(r(t9,ZipCode),r(t9,County)).假设ZipCode的证据属性为State,则r(t9,ZipCode)=p(21201|MD)-p(21201)该条件概率的计算方法将在第5节介绍.4.2数据语义的FD置信度计算当给定数据置信度之后,可以进一步定义FD的数据语义置信度(DataSemanticC,DSC),任意函数依赖φ的DSC置信度d为其中ti∈I为不满足φ的数据元组.r(ti,I,φ)为元组的数据置信度,可简写为ri.置信函数f(r1,…,rn)利用不一致元组的数据置信度,计算φ成立置信度.式(5)定义一个FD的DSC置信度需要通过所有不一致数据的数据置信度来计算.在数据修复应用中,若给定一个FD成立,所有违反该FD的不一致数据将被修复.因此本文根据以下原则定义FD的数据语义分析置信度:一个FD成立的DSC置信度越高,则违反该FD的不一致数据中被修复部分平均数据置信度越低,因为当FD没有错误的时候,数据必然发生了错误.因此计算DSC置信度需要首先使用式(3)和(4)对函数依赖的不一致部分计算数据置信度,再通过各违反元组的置信度利用式(5)计算FD的DSC置信度.假设元组集VI为使用FD修复数据后会发生改变的元组集合.对于FD:X→Y,将I中所有元组按照属性X的取值xi∈X划分成等价类.明显的,数据中与FD一致部分不属于集合V.对于不一致部分,本文假设不一致数据所在的等价类中支持度低的部分需要修复,如图1(a)中可认为t={JEFFERSON,KY}元组支持度最大没有错误,称为主模式(majorpattern),记为major(xi),主模式中元组t∈major(xi)不需修复.而{JEFFERSON,Page5GA}需要修复,这种情况下仅需要计算主模式外的其他元组的数据置信度.但是如图1(b)和(c)所示,即支持度最高的模式不存在或不唯一.在这种情况下需要对所有不一致数据元组进行检测.并计算每个模式(即函数依赖属性的不同取值)的数据置信度之和.并从中找出支持度最大且数据置信度最大的模式作为主模式.因主模式不需修复,则不包含于集合V中.最终,单个函数依赖成立的数据置信度d(φ)可以定义如下.定义2.对于函数依赖φ,以及发生改变的元组集V,函数依赖成立的DSC置信度为其中|V|表示V中元组数.5数据置信度计算方法为计算数据置信度,需要计算式(2)中条件概率p(a|e)与先验概率p(a).其中p(a)可以通过数据直接统计得到.对于p(a|e)的计算,由于数据各属性之间的互相影响会降低判断的准确性,本文采用概率图模型方法由数据集I为每个属性构建马尔科夫毯贝叶斯网络[23]用以计算每个元组取值的条件概率.5.1贝叶斯网络及其推理贝叶斯网络[24]是一种表示随机变量集联合分布的概率图模型方法.一个贝叶斯网络由网络结构BS以及条件概率表(ConditionalProbabilityTable,CPT)组成.网络结构BS是一个如图2所示有向无环图,图中每个顶点对应随机变量中的一个变量.两个节点间的有向边表示对应变量之间的直接依赖关系.图中点A与点D之间没有边相连,则表示当已知D在BS中的双亲C取值时,D取值概率与A、B独立,p(D|CAB)=p(D|C).在当前应用中,关系数据中的每个属性被看作贝叶斯网络中的一个节点.对于每个变量节点X都有一个对应的CPT,CPT表项记录该节点的双亲节点parent(X)相对于X的条件概率.假设图2中ABCD四个节点都代表一个2值变量,其取值为{absence,present}.则其条件概率表如表2所示.ApresentpresentabsentabsentBpresentabsentpresentabsentpresent0.60.150.3750.75absent0.40.850.6250.25presentabsent贝叶斯网络的优点在于其简化了计算条件概率所涉及到的属性,假设贝叶斯网中n个节点集合为(X1,X2,…,Xn),且Xi的双亲节点序号小于i.其一个实例(X1=x1,…,Xn=xn)根据链式规则,联合概率表示为P(x1,x2,…,xn)=p(x1)×p(x2|x1)×…×由贝叶斯网络的条件独立假设,节点的条件概率只与其双亲节点相关,则联合概率可以简化为P(x1,x2,…,xn)=∏i式(8)简化了计算过程,同时贝叶斯网络降低了属性之间互相关联带来的影响.例如图2中各节点ABCD的联合概率p(ABCD)=P(A)P(B)P(C|AB)P(D|C).不同于传统的贝叶斯网络推理,本文应用场景中计算条件概率p(a|e)在通常情况下元组t中各属性不包含空值,条件概率可以通过式(8)中概率P(x1,x2,…,xn,a)边缘化得到P(a|x1,x2,…,xn)=P(x1,x2,…,xn,a)以图2和表2为例,假设已知图中节点A=present,B=present,D=absent时计算节点C的概Page6率分布.为简便将absent记为a,present记为p.首先通过表2的条件概率求的C各个取值的联合概率分布:p(A=p,B=p,C=a,D=a)=0.4×0.1=0.04,p(A=p,B=p,C=p,D=a)=0.6×0.3=0.18.对这两个联合按照式(9)进行概率归一化后求得当前条件C的条件概率分布为p(C=a|A=p,B=p,C=a)=0.04/(0.04+0.18)p(C=a|A=p,B=p,C=a)=0.18/(0.04+0.18)由于当前应用中绝大多数属性没有属性值缺失,同时本文在构建网络时按照下文5.2节方法限制节点的最大邻居数maxSize,因此式(9)可以快速计算出条件概率,无需其他推理算法.maxSize可以通过经验选取,本文实验中使用maxSize=4.对于所推理元组t的条件属性含有空值时,只需将该属性对应的节点从网络中去除,条件概率仍可通过式(9)快速计算.引理1.在数据值没有缺失并且限制网络最大邻居数时计算条件概率P(a|x1,x2,…,xn)的时间复杂度为Ο(r),其中r=max(|Dom(A)|,A∈U),即数据中所有属性取值数量的最大值.证明.计算式(8)中联合概率P(x1,x2,…,xn,a)的时间复杂度由公式为Ο(p+c),p和c分别代表A属性在网络中parent集合与children集合大小.由于p+c<maxSize.则式(8)计算复杂度为常量.计算式(9)条件概率的复杂度为Ο((p+c)×r),则P(a|x1,x2,…,xn)时间复杂度为Ο(r).证毕.定理1.使用式(5)计算DSC置信度的时间复杂度为Ο(T×m×r).证明.根据式(6),设数据中违反FD:X→Y的元组数为T=|V|,FD中属性个数为|XY|,由于|XY|<m,则计算一个FD的DSC置信度复杂度为Ο(T×m×r).5.2贝叶斯网络的建立贝叶斯网络可以通过学习当前数据集得到网络结构BS和条件概率表CPT.在结构学习方面,由于当前应用需要计算任意一个属性值t[A]的数据置信度,统一的网络结构使得一些局部属性相邻节点过少,影响推理准确性.针对该问题本文采用为每个属性建立一个马尔科夫毯贝叶斯网络(MBBN)来推理条件概率.马尔科夫毯是指在贝叶斯网络中,由于条件独立假设任何一个节点Xi的概率仅受其双亲节点、孩子节点和孩子节点的双亲这3类节点影响,称为Xi的马尔科夫毯.因此当推理任意一个节点Xi的条件概率时,仅需要计算对应的马尔科夫毯作为网络结构.图2中C节点的马尔科夫毯为{A,B,D},A节点为{B,C},D节点为{C}.本文对文献[24]中MBBN的3步构建算法进行修改,使其更符合当前应用要求.修改后的算法依然使用3步构建,但基于效率考虑做出如下修改:(1)使用信息增益度量属性间相关性;(2)没有使用计算复杂的贝叶斯概率函数确定加入节点是双亲还是孩子,而是通过属性在数据中取不同值的数量作为判断依据预先给定顺序.给定顺序依据主要是parent的属性取值不应过多,如果parent中属性过多会导致所生成条件概率表中条件过多而每个条件下对应的不同概率过少,不利于条件概率的判断;(3)由于节点过多会导致计算过于复杂,因此人为限制网络中每个节点最大相邻节点数maxSize.最大邻居节点主要通过经验设定,本文中设为4,原因在于大于4时大多数节点会出现双亲节点取值过多,造成与上述(2)中相同的CPT条件过多的情况.两个属性X与Y的信息增益IG(X,Y)可以通过计算:IG(X,Y)=H(X)-H(X|Y)=H(Y)-H(Y|X)H(X),H(X|Y)分别代表随机变量的熵与条件熵.为了推理任意属性X∈U的数据置信度,需要对属性X构建MBBN.算法1描述了为X建立MBBN的过程.算法1.Create_MBBN_for_X.输入:属性X,数据集I,最大邻居数maxSize输出:网络结构mbbn1.mbbn,parent(X),children(X),none←2.计算每个IG(Y,Z),Y,Z∈U且Y≠Z3.IGLIST(X)←对X∈U/X按照IG(X,X)排序4.FOREACHX∈IGLIST(X)5.IF(|parent(X)|+|children(X)|<maxSize)6.THENIF(|Dom(X)|>|Dom(X)|)7.THENparent(X)=parent(X)∪X8.ELSEchildren(X)=children(X)∪X9.ENDIF10.ELSEnone=none∪X11.ENDIF12.ENDFOR13.mbbn=mbbn∪parent(X)Page714.FOREACHC∈children(X)15.parent(C),children(C)←16.IGLIST(C)←对C∈parent(X)∪non按照17.FOREACHC∈IGLIST(C)18.IF(|parent(C)|+|children(C)|<maxSize)19.THENIF(|Dom(C)|>|Dom(C)|)20.THENparent(C)=parent(C)∪C21.ELSEchildren(C)=children(C)∪C22.ENDIF23.ENDIF24.ENDFOR25.ENDFOR26.FOREACHC∈children(X)27.IGLIST(C)←对C∈children(X)/28.FOREACHC∈IGLIST(C)29.IF(|parent(C)|+|children(C)|<maxSize)30.THENIF(|Dom(C)|>|Dom(C)|)31.THENparent(C)=parent(C)∪C32.ELSEchildren(C)=children(C)∪C33.ENDIF34.ENDIF35.ENDFOR36.mbbn=mbbn∪parent(C)37.ENDFOR38.RETURNmbbn算法中|Dom(X)|表示属性X在数据集中不同值的数量.算法分为3个步骤:(1)算法第4到12行,计算属性X与其余属性的联系并排序,依次将最相关的属性加入X节点的双亲或孩子集,记为parents集合和children集合;(2)算法第14至25行使用第(1)步相同方法对children每个节点在children集合外的双亲;(3)算法第26至37行.步骤1方法确定children节点在children集合外的双亲.完成网络结构的构建后,需要使用数据计算该结构下的条件概率表CPT,当前应用中构建CPT面临两个问题:(1)组合爆炸问题.在没有简化的情况下,MBBN中任意节点CPT的大小是∏Y∈parent(X)|dom(Y)|·|dom(X)|.例如表2中二值属性节点C的CPT大小为23=8,如果节点属性值数量为100,则CPT大小为1003.FD检测应用中使用数据的属性值数量通常较大,会导致CPT过大降低存储和计算效率;(2)过拟合问题.由于使用同一数据建立的CPT再对数据自身元组数据置信度进行推测,推测结果必定会出现过拟合.因此计算元组t数据置信度时需要将元组自身的影响从对应CPT中去除,如表1中计算t1的条件概率,其使用的CPT仅由t2~t9统计得到.组合爆炸问题的解决方法是使用简化的CPT,即CPT仅记录数据中出现的数据值组合.由于简化没有改变条件概率的分布情况,因此不会对算法的检测结果产生影响.为解决过拟合,本文在实现MBBN时并没有直接生成每个节点的条件概率,而是统计各属性值出现的频率f,通过计算条件概率.在计算元组t的条件概率时,通过减去其出现的频率对CPT修正去除t本身的影响.算法2描述了通过网络结构计算CPT的过程.算法对每个数据元组t∈I,在对应的MBBN网络结构中记录其式(11)中频率f(a,parent(a)),f(parent(a)).其中a∈Dom(A),为元组t中A属性的取值.算法2.Compute_CPT.输入:数据实例I,mbbn输出:cpt1.cpt←2.FOREACHt∈I3.FOREACHX∈U4.FOREACHA,parent(A)∈MBBN(X)5.cpt记录f(a,parent(a)),f(parent(a))频率6.ENDFOR7.ENDFOR8.ENDFOR9.RETURNcpt定理2.给定网络结构与数据I,计算CPT的时间复杂度为O(nm2).其中n为数据元组数,m为数据I中不同属性数.证明.计算CPT实质为统计网络中所有节点出现的频率f(a,parent(a)).对单一数据元组,统计该频率需要对每一个属性A∈U对应的MBBN中每个节点进行一次操作,计算量为Ο(ms),其中s为MBBN节点数.又因为s<m,则单一元组复杂度为Ο(m2).对数据I,计算CPT复杂度为Ο(nm2).6实验及分析本节通过实验对比评估使用数据语义分析置信度的方法(DataSemanticConfidence,DSC)和统计置信度的方法(StatisticalConfidence,SC).实验算法使Page8用Java编写,运行在使用Intel酷睿i3-3.3GHz的CPU,4GB内存的Windows计算机上.实验使用两个数据集,分别是模拟数据TPC-H①和真实数据Hospital②数据.6.1节中分别提出了自动和交互式的两种应用场景,实验分别比较了DSC和SC方法对相同FD待检测集使用top-K排序进行自动检测,以及交互式检测两种应用场景下检测的结果.此外本文同时对CFD集合进行检测,检测结果表明本文提出的DSC方法同时适用于CFD检测.实验分别使用两个数据集:(1)模拟数据集TPC-H:本实验选取TPC-H参数ScaleFactor为0.002时自动生成交易记录.为了增加表中的函数依赖,实验选取生成数据中Order和Lineitem两表进行join操作,并从选取16个属性构成关于订单和项目的数据表LineitemOrder,表中包含的元组大小为11957;(2)Hospital为美国医院数据,实验选择了其中Outpatient_Imaging_Efficiency表项,从该表中选取11个属性,共包含29668条记录.实验假定两个数据集没有错误,实验中根据错误率e人为引入噪声数据.具体方法为:数据集中元组数记为n,生成噪声方法为元组t中任意一个属性值t[a],更改为t[a],其中a,a∈A且a≠a.生成噪声的数量为e×n.实验结果中DSC表示数据语义分析置信度,SC表示统计置信度方法.6.1自动检测与交互式检测应用6.1.1自动检测在自动检测的应用中,通常应用场景为:给定一个待检测集,自动发现方法从待检测集中找出判定为成立的FD集合.考虑FD应用于数据修复时,一个FD:A→B,往往比FD集合{AC→B,AD→B,ACD→B,…}更有效.因此为了避免发现重复的冗余FD,本文限定待检测FD集Σ为最小(Minimal)集合.本文算法通过式(6)方法计算FD的置信度并排序.算法没有给出直接检测结果,通过人工设定一个top-K值,对返回的前top-K(实验中按照百分比计算)个FD检测为成立.6.2节中实验比较了不同数据集合和不同错误率情况下检测精确度.6.1.2交互式检测当需要精确发现错误数据中FD时,无法仅靠自动检测完成.因此本文提出通过DSC方法对候选集进行排序通过top-K形式返回给用户并由用户交互最终发现所有成立的FD集,并通过6.3节实验结果证明使用DSC方法在交互式系统中可以有效降低用户工作量.本文提出了图3中所示的交互式检测流程.在该流程中,通过从待检测集Σ中计算置信度并排序,返回给用户top-K个最小覆盖FD集,记为S.在用户对FD进行确认后,得到用户检测为成立的FD集F并加入结果集F.通过F对待检测FD集Σ进行剪枝.即对于任意函数依赖φi∈Σ,如果φi∈F+,则φi应当从待检测集Σ中删除.其中F+为集合F的闭包.随后通过待检测集再次计算top-K排序返回给用户交互,直到待检测集为空时结束.对于待检测集Σ,每次交互都保证将至少k个(全部不成立时)FD从Σ中删除,Σ内待检测FD数量不会增加,因此该流程最终必然会终止.交互式检测方法中,核心部分在于用户确认后使用检测成立的FD集对原有待检测集Σ进行剪枝.剪枝按照Armstrong规则(Armstrongrules),使用类似于FD发现算法中的剪枝方法.主要针对两种情况剪枝:(1)对于函数依赖X→A成立,则所有XZ→A应当从待检测集中删除;(2)若X→A成立,则检测XAY→B,只用检测XY→B是否成立.其中X∩Y≠,A,BX,A,BY且A≠B.6.2top-犓自动检测精确度评估为了评估算法对同一待检测数据集检测的精确性.精确度定义为排序前top-K个候选中真实成立FD所占比例.实验通过以下方法生成待检测集:(1)对带噪声的数据集,使用函数依赖挖掘算法①②tal-comparePage9TANE,挖掘所有置信度大于θ的函数依赖,实验中θ=0.95;(2)对挖掘结果计算最小函数依赖集,得到待检测集.实验计算置信度并排序,将前top-K个FD判定为成立.算法同时比较了DSC和SC两种置信度在对CFD的精确度.CFD检测精确度实验通过使用文献[25]中方法FACD作为挖掘算法.待检测集的生成同FD待检测集生成方法相同.使用FACD作为挖掘算法的原因在于其挖掘到的CFD都是常量CFD,即CFD中各属性取值固定.这样做的原因在于含有变量的CFD可以被看作多个常量CFD的集合,不便于统计结果.因此待检测集合中CFD统一为常量CFD.FD实验结果如图4所示,图中x轴表示top-K的百分比大小,y轴表示返回top-K的精确度.图中可以看到,DSC置信度排序方法在不同错误率下返回效果均优于置信度方法(SC)排序.其中最显著的是在hospital数据中,DSC置信度返回前20%内的FD完全准确.对于图中SC置信度曲线和置信度曲线随着top-K数量增大而逐渐趋近,是因为成立的FD已经基本发现完毕,在余下部分中没有成立的FD,因而两者准确率会趋于一致.图4(e)、(f)中,SC曲线在前10%的候选中精确度较高,但是直到40%候选的排序中,都没有包含真实成立的FD,因此精确度下降.最后由于随着候选比例增大所有真实成立的FD最终都会被发现,因此在top-K为60%时精确度增加.图4(d)在e=0.08时,DSC曲线走向与前3个的不同是由于实验将使用FD发现算法从数据中发现的近似FD中confidence>0.95的候选FD作为候选集,在e=0.2~0.6中前10%判断错误的FD在错误率增大后其confidence小于了0.95而没有成为候选集,因此e=0.08时曲线在前10%上升.CFD实验结果如图5所示.DSC方法在各种条件下均优于SC方法.图5(a)、(e)中图形与相同数据集下的其他结果相差较大,这主要是因为错误率较小时,生成的待检测CFD集与其他错误率时待检测集差异较大.同时可以发现统计置信度方法在错误率小时CFD检测精确度较高,而DSC方法受错误率影响较小.DSC随着top-K增大曲线下降的原因与FD中相同.图5(h)中两条曲线趋于相同,主要是由于错误率增大后其候选集也同时增大,但是成立的CFD数没有改变,因此top-K同比例下的绝对数量增大,导致所有成立的FD在top-K=40%时已经全部发现,因此两条曲线趋于相同.6.3交互式检测为评估交互式方法对人工工作量的节省程度,实验数据集通过对带噪声的数据集,使用函数依赖挖掘算法TANE,挖掘所有置信度大于θ的函数依赖作为待检测集,实验中θ=0.95.交互过程按照6.1.2节中描述过程进行.其中人工工作量定义为人工确认FD是否成立的次数.即实验中每返回一次top-K集合,用户的人工工作量增加k.与6.2节自动检测方法不同,在交互过程中top-K选取可能对实验结果产生影响.其原因在于当top-K取值太大时,返回给用户的FD最小覆盖集合S中可能存在φi,φj∈S,使得φj被φi和已成立的结果集F所共同包含,这样φi被用户判定为成立时φj仍需要用户确认造成重复的工作.由此可知,因此top-K不能太大.可以看到,如果每次仅返回一个数据,即top-K=1重复判断次数最少.但由于算法模拟的是一个返回给用户的过程,每次仅返回1个FD可能造成用户交互次数太多,因此实验中经验选取top-K=5作为返回.在交互式的应用场景中实验对用户确认进行模拟,并比较用户工作量(userefforts)和发现的FD比率(即召回率recall)之间的关系.实验结果如图6、图7所示,图6中x轴表示发现成立FD比例,y轴代表发现这些FD所需要的用户工作量.实验结果证明交互式应用中DSC方法在不同数据集合以及错误率的情况下用户工作量均少于置信度排序.图中可以看到,除了(a)、(b)两图中用户工作量达到50%以外,其余用户工作量都在20%~40%之间,说明DSC方法的交互式检测方法可以有效降低人的工作量.同时从图中可以看到,SC方法往往在刚开始时效果较好,但是随着recall增加,其需要的用户工作量大幅增加.这是因为置信度隐含的假设是待检测FD中不一致数据越少,其真实成立可能越大.因此当FD待检测集中少部分满足该假设的FD被发现后,置信度的检测效果变差.相比之下使用DSC方法的检测并没有受到太大影响,在hospital数据更是保持在线性增长.在hospital数据中,DSC曲线开始时有一小段效果差于置信度排序,这是由于FD之间互相影响使得有一些FD虽然不成立,但是其不一致部分数据可能被包含在另外一个真实成立FD中,因此计算DSC排序靠前所致.CFD的检测同样使用FACD方法挖掘候选集,使用相同方法进行检测.在图7的CFD检测中可以发现,DSC曲线在各图中趋势较为一致.而SC曲线Page10图4FD检测精确度Page11图5CFD检测精确度Page12图6用户工作量与FD发现Page13图7用户工作量与CFD发现Page14则显得不稳定,如图7(e)表现较好与DSC曲线相似,但是DSC在大多数情况下优于SC方法,其原因与图5(e)相似,都是因为错误率较少时CFD所产生的候选集与其他错误率下产生候选集差异较大.另外CFD检测曲线中尾部效果变差的原因主要在于CFD实验所使用的待检测集中真实成立的CFD所占比例较小,仅占全部成立CFD的20%左右.因此部分CFD排序靠后所致.6.3性能分析本节对MBBN快速构建算法以及检测算法进行性能评估,结果如图8所示.MBBN构建算法主要比较了简化算法和原算法的时间效率扩展性.检测算法给出了时间效率的扩展性以及CPT是否简化时内存占用情况的实验结果,并讨论了检测算法在大数据场景中的应用方法.图8(a)、(b)为MBBN快速构建算法和原算法时间效率比较结果.图中FC-MBBN表示MBBN快速构建算法(FastConstructingMBBN),base-MBBN表示原算法.实验结果表明快速构建算法在时间比原算法有数量级上的改善.在时间对比中,快速算法基本上在数百毫秒至数秒内可以完成网络的构建,具有良好的扩展性.图8算法性能分析结果图8(c)为检测算法CPT内存占用比较实验,图中CPT-S(CPT-Simplified)为本文所使用的简化CPT方法,CPT-O(CPTOriginal)为没有简化CPT的方法.图中结果显示简化后CPT长度在不同数量数据下均比原来的CPT长度减少数个数量级.这是因为简化方法避免了组合爆炸问题,使得大量在数据中未曾出现的取值组合不需要被CPT记录.图8(d)为整个检测过程的扩展性实验,结果显示算法在扩展性上并非完全的线性扩展,其主要原因在于检测算法运行时间主要的数据违反FD部分的大小所决定,而非受数据元组数的直接影响.虽然对于大数据应用而言直接计算FD的DSC置信度耗时较大,但是由于DSC表示的是所有违反FD数据需要修复的概率均值,因此对于大数据可以通过对违反FD的数据元组进行抽样,通过将式(6)中V更换为V的样本V计算近似值.在大数据检测中,检测过程由于并非线性扩展,可能导致计算过程耗时较长.由于DSC置信度代表所有违反FD的数据需要修复的概率平均值,大数据条件下检测算法可以通过对违反FD部分数据进行抽样,根据样本计算公式(6)置信度的近似值,降低运行时间.Page157结论针对数据修复中在函数依赖和数据都含有错误的情况下,本文提出了一种基于数据语义分析的函数依赖置信度计算方法,该方法使用条件概率定义的数据语义分析置信度作为数据是否含有错误的依据,同时可应用于自动检测和交互式检测两种场景使得检测问题可以有效解决.
