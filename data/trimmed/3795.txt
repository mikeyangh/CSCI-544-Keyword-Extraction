Page1基于用户聚类的异构社交网络推荐算法陈克寒韩盼盼吴健(浙江大学计算机学院杭州310027)摘要相比传统的社交网络,基于弱关系的微博类社交网络具有显著的异构特征.根据特征可以将节点分为用户(消息订阅者)和主题(消息发布者)两类,面向用户推荐其感兴趣的主题成为了该类社交网络中推荐系统的主要目标之一,同时该类社交网络中普遍存在的数据稀疏性和冷启动现象成为了推荐系统面临的主要问题.文中提出一种基于两阶段聚类的推荐算法GCCR,将图摘要方法和基于内容相似度的算法结合,实现基于用户兴趣的主题推荐.与以往方法相比,该方法在稀疏数据和冷启动的情况下具有更好的推荐效果,此外,通过对数据集进行大量的离线处理,使得其较以往推荐方法具有更好的在线推荐效率.最后通过真实社交网络的数据对本方法进行了验证,同时分析了各参数对推荐效果的影响.关键词社交网络;推荐系统;聚类算法;图摘要;数据挖掘1引言社交网络(SocialNetworksServices,SNS)随着Internet用户的普及呈现出飞速发展的趋势,不仅用户数量爆炸性地增长,其服务形态也在发生急剧的变化.近年来,大量新型的社交网络服务不断地涌现,其中以国外Twitter和国内新浪微博为代表的弱关系社交网络微博服务(MicroBlog)正成为一种主要的社交网络形态.与传统的社交网络不同,由于弱关系的单向性,基于弱关系(即单向关注关系)的社交网络中的节点呈现出明显的异构性特征,包括大量以自然人为主体的用户节点(如“张三”)和以媒体、机构以及各类消息源为主体的主题节点(如“北京天气”、“南方周末”、“热门视频”等).其中,用户节点,通常作为消息订阅者,单向关注大量主题节点,这些单向订阅关系,往往基于用户对于不同类型主题的兴趣倾向;同时用户节点常常与其它用户节点形成双向关注关系,这通常基于用户的真实社会关系.相反,主题节点,作为消息的发布者,被大量的用户节点订阅,而其主动关注和双向关注关系数量远远小于其被订阅的数量.图1(a)展示了一个典型基于强关系的社交网络结构,网络中的节点呈现出同构性.图1(b)为从新浪微博中提取出的一个典型异构弱关系社交网络(黑点为用户节点,白点为主题节点,虚线为单向订阅关系,实线为互关注关系).自然的,异构社交网络中的推荐系统所服务对象是用户节点,其推荐的内容主要分为两类:向用户推荐其它用户节点(如向“张三”推荐“李四”)和推荐主题节点(如向“张三”推荐“北京天气”),即面向互关注关系的推荐和面向订阅关系的推荐.对于互关注关系和订阅关系的推荐需要基于不同因素:对于互关注关系的推荐,通过共同好友、联系人、通讯录等真实社交信息的方法通常就达到很好的效果[1];对于订阅关系,需要基于用户的兴趣进行推荐,这与推荐系统中常见的商品推荐、文档推荐等场景类似.关于这类推荐问题,有学者也进行了充分的研究[2-4],提出了协同过滤、基于内容等方法.然而,社交网络上的推荐问题,特别是对订阅关系的推荐,不同于传统的推荐系统,其一大挑战在于它极端的数据稀疏性.Mislove等人[5]指出,Internet上的社交网络呈现出Scale-freeNetwork的特点,极少量的用户拥有较多的关系连接,而大量的用户仅具有少量的关系连接.由于大量主题节点的存在,这一现象在弱关系社交网络中更加显著.如图2所示,根据对新浪微博中抽样的500个用户和50个主题的统计,仅有20%的用户对10%以上的主题有订阅关系,而关注主题数量低于总主题数量5%的用户占了超过一半的比例.而对于如此稀疏的数据,协同过滤等单纯基于二元关系的方法不能达到理想的推荐效果.此外,社交网络随着新用户的不断加入,往往面临着冷启动(ColdStart)的问题.新加入的用户往往体现出很少的兴趣倾向,而基于内容的推荐方法往往不具有足够的多样性,使得推荐结果会很快地收敛于一个小范围的集合,从而丧失对更多用户感兴趣内容产生推荐的可能.本文所解决的问题是在微博类的异构社交网络中对用户进行主题节点的推荐(即订阅推荐),并处理社交网络中普遍存在的数据稀疏性和冷启动场景.对此,本文提出了一种基于两阶段的用户聚类的Page3主题推荐的方法GCCR(Graph-ContentClusteringRecommendation).首先,选取用户节点中关注数量较高的节点,从而抽取出稀疏数据中的一个密集子集,利用图摘要(GraphSummarization)的方法,对此密集子集形成关注兴趣相似的核心聚类.然后,提取种子聚类的微博内容特征和整个数据集中其它用户的内容特征,基于内容相似度对整个用户群进行聚类,最后将聚类结果用于主题推荐.通过对密集数据子集和全数据集的两阶段聚类过程,提高对极端稀疏数据集的聚类效果.同时,由于图摘要聚类中的类模糊性,可以在对用户兴趣聚类的过程中保留一定的多样性,从而避免冷启动时收敛过快.本文第2节介绍社交网络分析和推荐系统的相关工作;第3节阐述GCCR算法的总体架构;第4节介绍GCCR算法各环节的具体步骤;第5节介绍数据集的获取并且通过真实的数据集验证GCCR的推荐效果,通过多组对照实验,分析不同参数对推荐结果的影响;第6节是对本文工作的总结和展望.2相关工作目前,对于推荐系统的研究很多,在推荐算法中,主要的研究方向包括协同过滤推荐、基于内容的推荐、聚类技术、Bayesian网络技术、关联规则技术等.协同过滤算法是目前最受欢迎的推荐技术,它利用用户爱好之间的相似性来进行推荐[3],不依赖于物品的实际内容,而是需要用户对物品的偏好信息,通常以评价或者打分的形式[2].然而这种经典的协同过滤方法不能直接应用于社交网络的好友推荐,因为在社交网络中,没有物品和评分的概念.此外,由于社交网络的数据稀疏性,协同过滤算法的推荐效果不好.另一些研究利用物品的内容进行推荐,根据用户过去喜欢的物品,为用户推荐和他过去喜欢的相似的物品[4].基于内容相似性的方法可以很好地应用在社交网络的好友推荐中,文献[6]利用自然语言处理的技术对用户的tweet进行处理,提取出用户的兴趣点,从而推荐有相似兴趣的好友.Sakaguchi等人[7]提出了一个基于概念模糊集(CFS)的系统,该系统识别Twitter用户的兴趣并推荐相关的好友,系统使用了基于模糊集的概念词典以及词向量来代表单个Twitter用户的兴趣,用向量余弦值衡量用户的相似度.然而,基于内容相似度的推荐过于专一化,只能推荐出与用户兴趣相似的好友.Facebook上有一个功能是“你可能认识的人”,它是基于“Friend-of-friend”算法进行推荐的①.该算法的思想是:如果A的很多好友是B的好友,那么A也可能会是B的好友.这种算法只能帮用户寻找没有添加的强关系,经济社会学家马克·格兰诺维特提出:相对于强关系而言,弱关系有助于传递新信息[8].针对Twitter和新浪微博这种弱关系型社交网络,弱关系的推荐比强关系更有价值.一些研究者把基于内容相似度的算法与社交网络的好友关系相结合.Hannon等人[9]提出了Twit-tomender系统,根据用户发布的tweet、好友、粉丝以及好友和粉丝的tweet对用户进行建模,利用Lucene的TF-IDF衡量关键词的权重.文献[10]利用概率模型来进行协同过滤,可以为用户推荐最感兴趣的K个好友和K条tweet.概率模型综合考虑了tweet信息和用户之间的关系,Kim等人[10]还提出了一个预测算法来推算概率模型的参数,并且使用MapReduce来处理大规模数据.此外,在社交网络中,大型图数据集的研究和处理很重要.图摘要技术可以用来发掘数据中隐藏的信息,现有的图摘要算法大多是基于统计学的,Tian等人[11]提出了一种基于节点聚合的方法k-SNAP来进行图摘要计算,该算法可以自由地调整图摘要的聚合程度和迭代次数,得到对图不同粒度的分析结果.文献[12]提出一种自动对数值属性值进行分类的算法,该算法通过发掘节点数据中隐藏的领域知识以及对图中边的结构的分析进行分类.3GCCR总体框架GCCR算法旨在根据弱关系社交网络中用户对不同主题的兴趣程度,为用户推荐其可能喜欢的主题内容.通过分析从用户-主题喜好矩阵和用户自身发表内容的中体现出的用户喜好信息,并将二者综合利用,提高在稀疏数据集上的推荐效果.同时利用图摘要算法中的类模糊性,保证冷启动条件下推荐的多样性.GCCR主要步骤包括预处理、核心聚类、全用户聚类、主题推荐阶段,主要流程如图3所示.①OfficialFacebookBlog.http://blog.facebook.com/blog.Page4(1)预处理阶段.筛选出兴趣向量非零值比例大于密度阈值λ的核心用户集合.根据核心用户对应的兴趣向量提取构造出原兴趣矩阵的密集子矩阵.(2)核心聚类阶段.根据核心用户的兴趣矩阵构成的订阅关系图进行图摘要计算,利用摘要迭代的过程生成满足模糊度和独立性约束的核心聚类.(3)全用户聚类阶段.利用上一步中生成的核心聚类,提取核心聚类内容特征向量,同时提取非核心用户所发表微博的内容特征向量,根据内容特征向量的相似度不断迭代,将非核心用户加入到已有的聚类集合中,直至完成对所有用户的聚类.(4)根据聚类结果以及每个用户在聚类内部的相似度和类兴趣特征,生成类成员内部的推荐向量,同时根据不同主题在不同聚类间的兴趣差异,形成跨类推荐向量,两者综合排序之后的结果作为最终推荐结果.推荐算法执行过程中,对于训练数据集进行(1)~(3)离线计算生成聚类结果和类兴趣向量,对于任何新加入的用户,只需进行(3)中的聚类归属计算和(4)中的推荐过程.通过将离线和在线处理运算尽可能的分离,可以使算法达到更高的在线推荐计算效率.4聚类推荐算法4.1问题建模(1)对于N个用户,M个主题,可分别表示为用户集U={u1,u2,…,uN}与主题集S={s1,s2,…,sM}.对于每个用户ui,有对应兴趣向量狏i=(a1,a2,…,aM),所有用户的兴趣向量可构成N×M的兴趣矩阵犿,对于存在订阅关系的用户ui和主题sj,对应元素aij>0,表示用户ui对主题sj兴趣度,如不存在订阅关系,则对应aij=0.(2)基于兴趣矩阵犿的兴趣图G犿可表示为有向图G(V,E),其中V为用户和主题节点构成的集合:E为订阅关系构成的边集合:E={e(ui,sj)|ui∈U,sj∈S,aij>0}.(3)对于每个用户ui,定义其兴趣密度值des(ui)为兴趣向量狏i中非零元素所占的比例,那么对于des(ui)大于密度阈值λ(通常取10%)的用户ui定义为核心用户.那么核心用户集合可定义为由核心用户兴趣向量构成的兴趣矩阵为密集子矩阵犿,基于密集子矩阵可构造出核心兴趣图G犿.4.2核心聚类图摘要算法通常用于从拥有大量节点的复杂图中提取隐含信息,发现主体结构和普遍规律.不同于以往基于统计的图摘要方法,Tian等人[11]提出了一种基于节点聚合的方法k-SNAP来进行图摘要计算.该算法优势在于,图的摘要计算过程中不会丢失任何原始节点的信息,同时,可以自由地调整图摘要的聚合程度和迭代次数,得到对图不同粒度的分析结果.我们注意到,k-SNAP在图摘要迭代过程中同时完成了对节点的聚类,每个节点聚类是一系列与外部节点拥有相似连接度的节点的聚合.因此,我们认为通过对用户兴趣图进行k-SNAP摘要,可以对用户节点实现兴趣聚类.基于k-SNAP,我们设计了SNAP-Cluster算法,使得(1)聚合过程仅发生在用户节点之间;(2)仅将k-SNAP算法应用于核心兴趣图,以保证能产生足够多有效信息的聚类;(3)通过计算模糊度和差异性指数来表示聚类结果的特征,并以此来估计对最终推荐结果的影响.4.2.1聚类的度量(1)通过密集兴趣矩阵犿在核心用户集U和主题集S上构造核心兴趣图G犿(V,E),用户集U上的一组聚类集Clus可以表示为用户聚类Ci的集合,其中:U=∪n对于每一个主题sj,我们定义Ci的参与集:那么参与度pij满足Page5pij=|Psj(Ci)|的Ci和sj称为“聚类Ci强关注于主题sj”.(2)定义用户聚类Ci在主题sj上的模糊度Ambij:由此可定义Ci对于主题集合S的模糊度:那么用户集U上的Clus对于主题集合S的全局模糊度为此处取对数是为了保证全局模糊度随聚类增长呈线性变化的趋势.(3)定义用户聚类Ci在主题sj上的兴趣度为则Ci在主题集S上的类兴趣向量为其中每个非零分量对应于一条强关注关系.我们用不同用户聚类在主题集S上的兴趣向量的相互距离,来衡量聚类结果体现出的用户群体兴趣差异度.两个聚类间的兴趣距离采用余弦距离:那么用户集U上的一组聚类Clus对于主题集合S的差异性指数为4.2.2图摘要算法SNAP-Cluster的过程.基于之前的定义,我们给出图摘要聚类算法算法1.SNAP-Cluster图摘要聚类算法.输入:核心用户集U,主题集S,核心兴趣图G犿输出:核心聚类Clus1.Clus=U,maxAmb=0,srcCi=null,arget=null;2.whileAmb=0或达到目标迭代次数k3.forCiinClusdo4.计算对所有sj的Ambij,找到sj=argmax(Ambij);5.计算对主题集S的Ambi;6.ifAmbi>maxAmb7.maxAmb=Ambi;8.target=sj;9.srcCi=Ci;10.endif11.endfor12.从Clus中删除聚类Ci;13.Ci,Ci=split(Ci,target);//分裂聚类14.Clus中加入Ci;15.存储当前阶段的聚类结果Clus和对应的Amb,16.endwhile17.return最优的Clus,使得Amb·dvst最大.算法2.Split聚类分裂.输入:用户聚类C,主题节点sj,兴趣图G输出:聚类C对sj的参与集Ci和非参与集Ci1.初始化Ci和Ci为空集;2.foruiinC3.if((ui,sj)∈E(G))4.将ui添加到Ci中;5.else6.将ui添加到Ci中;7.endif8.endfor9.returnCi,Ci.对于最优聚类的选择,我们基于这样观察:当差异性指数越大时,表明类间的兴趣越不相同,这使得每一个聚类的兴趣特征越明显,增加了对兴趣预测的精确性.相反,模糊值越大,则在一个聚类的内部保留了更大的差异性,因而增加了产生多样性推荐的可能.因此我们考虑将二者综合考虑,在最后的实验中我们也将验证上述结论.图4(a)展示了一个来自于新浪微博中500个用户和50个主题所构成的兴趣图(平均兴趣密度7.2%),图4(b)是通过SNAP-Cluster计算之后的核心聚类图(平均密度15%,小点为主题,大圆为用户聚类,中心数字为聚类大小).4.3全用户聚类核心聚类以及非核心用户的内容特征向量.得到用户核心聚类Simik之后,我们需要提取对于用户ui,其发表的微博为OriginTweetsi,首先对原始微博数据进行预处理,比如去掉微博中的表情符号,去掉“@”某人的信息等等,得到用户发表的纯文本微博内容Tweetsi.Page6定义用户ui的特征向量为犞ui,则犞ui=(Tweetsi).核心聚类Clusj的特征向量为犞Clusj,则有犞Clusj=(Tweets犿),u犿∈Clusj.我们采用改进的编辑距离算法来计算内容特征向量相似度[13],编辑距离最初用于衡量字符串之间的相似程度,并以单个的字符作为基本的计算单位,为了使其更加适合具有语义的汉语句子相似度计算,算法采用对句子进行自动分词后的单个词作为基本的编辑单元.此外算法还考虑编辑操作代价和句子长度对相似度的影响,提出了新的块交换操作,并根据词汇之间的语义相似度赋予不同的编辑操作不同的权重,在不用经过词义消歧和句法分析的前提下,兼顾了句子结构和词汇语义信息.对于用户ui,我们用改进的编辑距离算法来计算他和所有核心聚类Clusj的相似度Simij,若最大值为Simik,则将用户ui加入到聚类Clusk中.将所有的非核心用户加入到相应的聚类之后就可以得到全用户聚类Gclus.4.4推荐阶段户聚类Ci在主题集S上的类兴趣向量:得到全用户聚类Gclus,可计算出其中每个用所有聚类的类兴趣向量可构成类兴趣矩阵犿,对于其中的零值,利用SlopeOne算法[14]进行预测.定义主题si和sj间的平均兴趣偏差值为那么对于任意零值分量,均可以通过以下公式进行预测,其中cai为向量犮狏i各分量的平均值,M-1是考虑i=j时devj,i值为零的情况:将原向量犮狏i中的零值用预测值填充,得到预测兴趣向量犮狏,对每个分量表示的兴趣值进行排序,对每个用户,除开其已经关注的主题,对其余主题按照Top-K兴趣值进行推荐.在实践中,我们通常取K值为用户已关注主题数或该数量的一半.对于在线推荐的情况,首先对于需要进行推荐用户,可以提取其发布内容的特征向量,利用全用户聚类过程中的归类过程,将用户分配到合适的聚类之中,再利用该聚类的预测向量犮狏,对其进行推荐.可以看到,整个流程中,除用户归类的过程需要实时计算之外,用户聚类和兴趣值预测均可直接采用事先离线处理之后的结果.在线推荐的计算复杂度,仅与用户聚类个数有关,而用户聚类个数在实际情况下是非常有限的,这也保证了本算法的在线推荐效率.对于聚类和推荐的结果,需要在新用户增加到一定数量并对兴趣分布产生明显影响时进行调整.5实验分析5.1数据集尽管本文的研究内容建立在已有的用户-主题兴趣的数值矩阵之上,然而我们在真实的数据集上却无法直接获得这一量化的兴趣指数.因而在实验中我们需要建立用户兴趣指数的一个度量,尽管这与本文所描述的算法内容是无关的,但是为了表现实验的效果,这项工作是必要的.我们用“用户期望转评率”来描述用户对主题的兴趣程度,它在微博系统中的意义可以理解为一个用户对某一主题所发表的内容进行评论或转发的潜在概率,这一指数与用户自身转评率规则化之后,可以用以下条件概率公式近似:Page7a=P(r|R)其中,P(R)为阅读到主题R的概率,P(R|r)为用户转发、评论的内容来自于主题R的概率,以上两个概率可以用对实验数据集的统计结果近似.在接下来的讨论中,都以这一兴趣值度量为基础.我们通过新浪微博的开放平台API抓取实验数据.由于社交网络中存在海量的用户和信息,简单随机地抓取节点会造成实验数据过于稀疏,也不能体现弱关系社交网络中的结构特征.因此,我们通过以种子用户为起始逐步在新浪微博的网络中生成兴趣图的方式来模拟基于弱关系的网络社区的形成过程,从而得到具有异构社交网络特征的局部样本.主要过程为:①以5~10个相邻或相近的用户节点作为种子节点.②对每一次迭代,采用深度优先的方式,抓取与当前用户相邻的用户节点;或者采用广度优先的方式,抓取当前用户所关注的主题节点.③根据统计得到的用户关注对象中用户节点和主题节点的平均比值,来调整迭代中进行两种抓取的比例.④根据抓取到的用户集合和主题集合,获取详细的关注、转发、评论的数据,根据前文的公式,计算“用户期望转评率”,从而得到最终的用户-主题兴趣矩阵.在本实验中,我们抓取了多组各不相同的用户-兴趣关注矩阵,最终的实验结果为各种实验数据的平均值.其中每一组均包含约500个用户、50个主题和近2万条微博内容.实验代码由Python和Java实现.实验代码运行于MacBookProMC990上,Python版本为2.7,jdk版本1.6.实验参照算法为:(1)基于Top-K相似的协同过滤推荐算法(Collaborative-Filtering,CF);(2)基于主题内容相似度(Content-based)的K近邻推荐算法.实验参照算法基于开源的机器学习库ApacheMahout而实现.其中Collaborative-Filtering算法为基于用户的协同过滤,用户相似度的计算采用皮尔森相关系数,最终的推荐结果使用Top-K推荐.Content-based算法中主题之间的相似度采用汉语句子相似度来计算[13].实验中,我们将用户的一半主题作为训练集,将另一半主题作为测试集进行实验.5.2推荐效果我们在实验中观察到,几种算法在面对稀疏数据集的情况下,其产生推荐结果的能力是不同的,表1显示了不同数据稀疏度情况下,几种算法所能产生的最大推荐结果数量的对比(本实验中我们限制最大推荐数量不超过测试集的非零兴趣值数量).稀疏度/%需推荐5.507257.139.816.099.36.756398.141.918.199.78.655208.443.820.7100.011.751698.845.618.9100.0显然,在数据极端稀疏的情况下,无论是CF还是基于内容的方法,都不能产生足够的推荐结果,而GCCR方法的推荐能力受数据稀疏性的影响非常小.接着,我们对比几种算法在最优参数下的准确率和召回率.我们总是取推荐个数等于训练集中的关注个数,而对于CF和Content-based算法,我们取Top-k个数为10个.准确率可表示为推荐命中的数量与总推荐数量的比值,召回率可表示为推荐命中数量与测试集中总关注数量的比值.图5(a)显示了在不同数据稀疏程度下各算法的推荐准确率.可以看到,在极端数据稀疏的情况下(密度低于10%),协同过滤算法具有最差的准确性,在密度超过10%时逐渐提升.而基于内容的推荐方法对于数据的稀疏性并不敏感,然而准确率维持在不高的水平.GCCR算法在数据极端稀疏的情况下仍能保持较高的推荐准确率,并且随着数据密集度增大也能逐步提升,这与本算法在图摘要过程中实现了数据的密集化有关.因而,在微博类异构社交网络的场景下,由于普遍存在的数据稀疏性(常常低于10%),GCCR相比传统方法具有显著的提升.图5(b)显示了不同算法间召回率的对比.可以看到,GCCR算法在稀疏数据集中,召回率保持在稳定的较高的水平.而CF和Content-based的方法,受数据稀疏性的影响较大,产生的推荐数量和质量都比较差,其中Content-based的方法由于产生推荐结果的数量较少而使得召回率非常低.为了更好地比较算法的推荐质量,我们引入了Fmeasure和MAP(MeanAveragePrecision)两项指数.其中,Fmeasure为准确率和召回率的调和平均值,该值越高则表明推荐算法的综合性能越好:同时,对一个用户群体产生的推荐结果的MAP可定义为对每个用户推荐结果的AP(AveragePrecision)值的平均值,该值越高,则表明推荐算法的总体推荐Page8质量越好:图53种算法推荐效果的对比可以看到,GCCR算法无论在推荐综合性能和推荐质量上,都有较大的优势.5.3多样性我们通过人工标注,将50个主题分为文字、时尚、笑话、资讯等16个类别.由于在冷启动场景下,新加入的用户通常关注的主题有限,因而其兴趣范围可能仅体现在几个类别的主题之中,而推荐算法为了避免过快地收敛,我们希望能产生一定范围内更多样的推荐结果,从而提高跨类别推荐的可能性.我们将训练集中不存在对某类别主题的关注而产生对该类别主题的推荐定义为“跨类别推荐”,同时对于此类推荐结果在测试集中的命中称为“跨类别命中”.在实验中,我们通过针对性地删除在训练数据集中每个用户对于于某一类或几类主题的关注信息,来模拟冷启动场景下的数据特点,以此来测试算而AP值表示对某个用户推荐结果的平均准确率.3种算法的Fmeasure值和MAP值分别如图5(c)和图5(d)所示.法对跨类推荐的能力.表2显示了实验中的一组结果.算法删除Content-basedGCCR可见GCCR算法在模拟冷启动的场景下,产生跨类推荐的数量和质量都明显较好.在图6中,我们采用产生的推荐结果中跨类推荐的Fmeasure值和总体推荐结果的Fmeasure值的乘积来衡量推荐的多样性.Page9可以看到,相比传统基于内容的推荐方法,GCCR可以产生更高质量的跨类别推荐结果,这来自于GCCR中产生的聚类模糊性.而基于内容的方法在主题类别缺失较多的情况下,具有极低的推荐多样性,导致推荐结果过快收敛.5.4各参数对推荐效果的影响5.4.1模糊度和差异性指数模糊度是对一个聚类内部成员间,对于主题关注的差异程度的度量,用Amb表示.在图7中我们可以看到,当前聚类结果的全局模糊度随着聚类个数的增加而减少,这是因为当聚类变小时,会更容易形成强关注关系.同时,推荐算法的整体效果则随着模糊度的减少而提高,并且随着数据集密度的增加,这一差距显得更加明显.然而当聚类数量过多时,推荐的准确率会出现降低的情况,这是由于过小的聚类使得兴趣矩阵变得稀疏.差异性指数反应聚类之间的的兴趣平均差异程度,其随着聚类数量的增加而升高.在图8中我们可以看到随着差异性指数的升高,用dvst表示.推荐效果的多样性逐渐降低.聚类数为10时,dvst=0.524取值最低,此时具有更强的推荐多样性,当聚类个数达到80时,dvst取值最小,此时较小的聚类使得此时推荐的多样性显著降低.这可以理解为聚类间的兴趣差异增大,而聚类内部兴趣更加一致时,更难产生跨类别的推荐.我们可以从上述实验结果中看到,选择最优的聚类数量时,需要同时考虑对推荐多样性和准确率的影响.更多聚类个数使得每个聚类的模糊度降低,在提高了推荐的准确率的同时缩小了兴趣的预测范围,从而减少了产生跨类推荐的可能.相反,较少聚类的个数,能够提供更广的推荐范围,从而提高在冷启动时的推荐效果.因此,聚类数量的确定依赖于具体的推荐需求.实践中,在没有明确倾向的情况下,我们选择使得差异性指数和模糊度乘积达到最大值时的聚类结果.5.4.2关系强度阈值σσ定义强关注关系在一个聚类中需要满足的最小覆盖度,σ取值决定了在聚类过程中对聚类兴趣的置信程度.当我们需要推定一个聚类对某主题是有兴趣时,若σ取值越大,则需要此类中更多的成员满足对该主题的关注关系.而σ值越小时,对于聚类兴趣的判定条件则趋于宽松.图9显示了σ取值对预测准确率的影响.σ定义强关注关系在一个聚类中需要满足的最小覆盖度,在Tian等人[11]的论文中,将σ取值为0.5,而GCCR的实现中,面对更加稀疏的数据集,相对宽松的强关系判断条件(σ=0.3时达到最优),使得由图摘要形成的聚类具有更多的非零兴趣值,从而能达到更好的推荐效果.而当强度阈值过低时推荐效果有所下降的原因是由对于类兴趣判断过于模糊所致.Page106总结与展望为了解决微博类异构社交网络中存在的数据稀疏性和冷启动问题,本文提出了基于图摘要和内容相似混合聚类的推荐算法GCCR.GCCR在极端稀疏的数据集上具有较高的准确度,同时在冷启动的场景下能够提供多样性的推荐结果,从而避免推荐结果收敛过快的问题.最后,我们通过真实的数据集验证了算法的效果,并且分析了各参数对推荐结果的影响.在接下来的工作中,我们准备将系统实际部署实施,并且希望引入反馈机制,根据用户对推荐结果的实际兴趣反馈,实现推荐算法的动态优化.同时希望能够将离线计算的部分并行化处理,以获得更高的算法执行效率.
