Page1覆盖网络中一种公平负载均衡QoS路由算法曹雪松1),2)胡瑞敏1)王朝萍1)1)(武汉大学计算机学院武汉430072)2)(中国通信服务集团天讯瑞达通信技术有限公司广州510623)摘要覆盖网络通过选择资源消耗代价较低的应用层服务路径实现分布式网络应用的负载均衡,但传统方法未考虑局部负载较重链路中存在的资源瓶颈问题,导致系统吞吐量的下降.针对该问题提出一种公平负载均衡QoS路由算法,该方法引入表征路径瓶颈程度的资源公平指数,依据代价模型建立新的负载均衡效用函数,并采用自适应的系统负荷状态加权方法修正QoS约束项权重.实验证明该算法相对传统算法性能更优,有效提高了服务成功率,并降低了负载分布的波动程度.关键词覆盖网络;QoS路由;负载均衡;分布式系统1引言覆盖网络[1](overlaynetwork)又称重叠网络,是指通过在基础网络的关键位置上设立智能的节点,以单播路由方式连接起来构成的虚拟应用层网络,这种网络位于用户终端与物理网络之间,可以用于实现特定的应用.相对于底层基础网络而言,覆盖网络层能够监测底层网络上的路由走向、传输延时、流量分布、拥塞状况以及异常故障等状态信息.覆盖网络层一方面依靠覆盖节点(overlaynode)相互交换这些信息,另一方面基于这些信息实施智能的控Page2制和管理手段,如路由探测选择、流量控制以及内容检索、分类和管理等等.覆盖网络的优点在于不改变基础网络架构而有效提高分布式网络应用的服务质量(QualityofService,QoS).覆盖网络QoS路由是覆盖网络技术的重要研究方向.由于传统的TCP/IP网络只能提供尽力而为的服务模式,不能有效保障分布式应用的传输质量,而在应用层上重新构建可靠的覆盖路由网络,就可以提供QoS保障的传输控制机制,这种技术被称为覆盖网络的QoS路由[2].在这种体系结构中,覆盖网络是由应用层的服务器主机节点构成,这些节点不仅能够传递和转发数据流,而且还具有特殊的计算能力和存储能力,通过互相协作实现复杂的服务组合.因此覆盖网络能够使用路由选择方法有效解决分布式应用的资源调度问题[3].负载均衡的资源调度是分布式系统应用研究中的关键问题,因为网络环境的差异性,不同区域业务吞吐量的波动以及不合理的资源分配策略都会导致网络负载的不均衡,进而引起网络出现拥塞现象,降低系统的整体吞吐量,目前该问题在IP网络上仍没有很好的解决办法.而覆盖网络QoS路由技术可以提供基于应用层部署负载均衡资源调度策略的方法,有助于分布式系统实现公平的资源分配,因此成为了当前的研究热点.经典的覆盖网络负载均衡QoS路由算法主要有QUEST[4]、PBLCP[5]、RBLCP[6]等,这些算法的基本原理均是推导表征覆盖网络传输、计算资源的消耗代价和的启发式效用函数,基于最短路径算法搜索最优负载均衡服务路径,有利于选出整体资源消耗较低的路径.然而该类方法仍存在一个问题:未考虑局部负载较重的链路引发的资源瓶颈问题,这种瓶颈仍会导致系统发生拥塞,严重时会降低系统吞吐量和负载均衡程度.针对该类问题,本文重点研究了路径瓶颈程度的计算方法,并将其引入传统路由模型,提出一种更加公平的负载均衡覆盖路由算法,实验证明该算法能够进一步提高网络系统的吞吐量及负载均衡程度.本文第2节介绍覆盖网络QoS路由技术相关的国内外研究现状;第3节通过原理性分析和实验结果验证资源瓶颈问题及其影响;第4节针对该问题提出解决方案,详细阐述本文核心算法;第5节给出仿真实验的结果及分析;最后第6节阐述本文的研究结论.2相关研究现状覆盖网络负载均衡QoS路由的目标[3,7]就是要在覆盖网络中找到一条合适的服务组合路径,其接入业务所花费的资源代价相对较小,并且能够充分地利用系统的“空闲”资源,这样在不断接入用户请求的过程中,负载就能均衡分布在网络空间内部,从而使网络资源的利用率达到最大.覆盖网络中的资源类型可以抽象为两类:传输资源和计算资源,一般可用链路的传输带宽(BR)和节点的计算能力(CR)表示,目前的负载均衡QoS路由算法都是以优化这两类资源的分布为目标,求解最优的QoS服务路径.QUEST[4]是较早提出的多QoS优化目标覆盖路由算法,它证明该类问题属于NP-Complete问题.该算法首先定义了多QoS目标优化的代价函数,根据问题目标的侧重程度可对代价函数进行加权调节,然后以最短路径Dijkstra算法[8]求解最优路由结果.QUEST针对负载均衡目标优化采用了两种QoS度量约束项:(1)链路li,j=(Si,Sj)的带宽消耗率fB(li,j,Bt),Bt为服务请求的带宽资源需求约束;(2)节点Sj的计算资源的消耗率fc(li,j,Ct),Ct为服务请求的计算资源需求约束;设CRj和BRi,j为节点j和链路li,j的可用资源,得到链路启发式代价函数C(li,j)为耗代价函数Cost(P)定义为路径P的代价通过链路代价和计算,其总体消Cost(P)=∑lij∈P2005年Li等人[5]提出了一种基于传输资源和计算资源残余比例的负载均衡路由算法PBSP(Pro-portionalBandwidthShortestPath),比QUEST能更加精确表征资源利用程度,算法改用了节点和链路的残余可用资源的比例作为选择权值,并通过乘法混合度量生成代价函数,路径的代价仍通过所有链路的代价和计算,其代价函数Cost(P)如下:2007年应必娣等人[6]在PBSP的基础上又提出了一种改进的路由算法RBLCP.该算法引入了全局服务资源分布的约束因子,可以基于整体资源分布状况动态对带宽和计算资源代价函数加权,这样算法能够根据两类资源的瓶颈情况作自适应的负载Page3均衡(α值为权重因子),其代价函数Cost(P)如下:Cost(P)=∑lij∈P3问题分析由第2节研究现状可知,传统的覆盖路由算法采用了表征资源消耗代价的变换函数作为负载均衡启发式效用函数,这些方法能够尽量选出整体资源饱和度[9](实际承受负载与最大承受负载比值)较低的空闲服务路径,但仍然存在一定的非公平性,这主要是因为它们没有考虑局部负载较重链路的资源瓶颈问题.服务路径是由多段覆盖链路组成,链路和节点的能力也会存在不均衡的情况,虽然叠加的总体消耗代价低,但是单端链路或节点的资源消耗率仍然可能较高,因而其出现拥塞的概率也会相对较高,一旦出现异常不但会影响到运行期内的服务会话,而且可能导致局部网络瘫痪,反而降低系统吞吐量.实验1的数据表明传统覆盖路由算法在高业务流量下仍存在较严重的资源拥塞现象.实验1.基于NS2平台[10]模拟大规模持续流式服务请求接入覆盖网络系统的场景,具体实验方法参见第5节.实验统计了在不断递增的业务负荷量(20~200unit/s)情况下通过PBSP、RBLCP两种路由算法调度服务所产生的节点吞吐量分布情况.图1(a)、(b)描述了当业务总量达到100unit/s时所有物理节点的吞吐流量.结果表明当并发业务流量较大的时候,资源分布不均衡的状况趋于明显,并出现了若干可能会导致局部网络拥塞的流量峰顶节点.图2描述了业务量不断上升过程时的服务请求接收成功率,结果表明当系统业务量不断上升直至超负荷情况下,服务成功率也随之陡降(80unit/s时出现过载点)这种现象证明了网络拥塞造成的资源瓶颈问题会严重降低系统的服务吞吐量.4公平负载均衡QoS路由算法由第3节理论分析和实验验证可知,传统算法存在无法排除局部路径瓶颈的问题,针对该问题本文提出一种公平负载均衡QoS路由算法F-LBQAR(Fair-LoadBalanceQoSAwareRouting),在路由模型中引入路径资源瓶颈程度约束因子,尽量避免选择瓶颈链路,能够在一定程度上降低网络拥塞的出现概率.本节给出具体算法的技术路线.4.1服务资源消耗的代价模型传统算法通过求取链路的资源消耗率总和计算服务资源消耗代价,F-LBQAR仍采用类似的模型,所不同的是本算法用路径的消耗代价权值代替链路的消耗代价权值,这种方法分开考虑传输资源和计算资源的约束因子,更符合代价特征量的物理意义,并有利于针对不同资源QoS需求做独立的加权.本节首先定义针对路径路径接入服务后的资源消耗代价权值的计算模型,该模型分为两部分:一是传输服务代价:以链路流量消耗率的总和表示;二是计算服务代价:以节点计算能力消耗率的总和表示,代价函数定义如下.定义1.路径传输资源消耗代价函数.设某到达业务请求T,其传输资源的QoS需求为Bt,假定覆盖网络系统能够提供服务路径P接受Page4业务T的服务请求,则T对P的传输资源消耗代价ΔB(P)为ΔB(P)=Bt/BR0,1+λ1Bt/BR1,2+BRi,j为路径P上每跳链路lij的可用带宽资源存量,λ1,…,λi为路径P每一跳节点i对流量的影响系数(节点输出流量Bout=λ×Bin,λ0=1),tp为当前路径跳数.定义2.路径计算资源消耗代价函数.设某到达业务请求T,其计算资源的QoS需求为Ct,假定覆盖网络系统能够提供服务路径P接受业务T的服务请求,则T对P的传输资源消耗代价ΔC(P)为ΔC(P)=Ct/CR0+Ct/CR1+Ct/CR2+…+Ct/CRtpCR0,CR1,…,CRtp为路径P上每跳节点i(包括源节点和目的节点)的可用计算资源存量,tp为当前路径跳数.由以上定义可知,ΔB(P)和ΔC(P)两个代价约束项是相互独立的参数因子,因此可通过加法混合度量求取路径的整体代价函数,如下定义.定义3.路径资源消耗代价函数将式(6)和(7)代入式(5)得式(8)Cost(P)=Bt·∑tp4.2服务资源利用率公平指数为了降低服务路径的瓶颈程度,本文引入了一种基于服务资源利用率公平指数的权值约束路由方法,该方法通过计算服务路径中所有链路和节点的资源利用率的公平性来衡量路径中是否存在瓶颈.假设存在序列x1,x2,…,xn,则衡量序列均衡度的公平指数函数f(x)的定义[11]如下:f(x)=(x1+x2+…+xn)2从原理上分析可知,公平指数值f(x)当x1=x2=…=xn时f(x)取最大为1,而如果序列Ai间的差值波动越高,则其值越小,无限趋近于0,因此f(x)的值域为(0,1].如果采用数值序列的均方差计算均衡度,则情况正好相反,取值越大则波动越高,值域范围为[0,1),但是其值有可能出现为0的情况,这种情况并不利于作除法系数,所以采用公平指数计算均衡度的方式更理想.由以上定义可知,可以通过计算服务路径上所有节点和链路的资源利用率公平指数评价路径的负载均衡程度.假设采用资源饱和度[9]表征利用率,则如果路径上部分链路和节点的饱和程度较高(表明链路和节点的负荷较大),会造成该指数值偏大,如果饱和程度越均衡的话,则该指数值就越小(但高负荷下也是如此).因此将该指数作为最短路径权值的正则约束项,可减少出现瓶颈的概率,具体计算方法如下.定义4.路径传输资源的利用率公平指数.设某到达业务请求T,其传输资源的QoS需求为Bt,假定覆盖网络系统能够提供服务路径P接受业务T的服务请求,则P接入T后的传输资源公平指数fB(P)计算如下:fB(P)=∑tpB(li,i+1)为路径P上链路li,i+1接入请求后的传输资源负荷饱和度函数,BRi,i+1为路径P上链路li,i+1的可用带宽资源存量,BRtotalli,i+1的可用带宽资源总量,tp为当前路径跳数.该指数与链路的传输负荷波动成反比线性关系,当波动程度越高时,指数取值也会越小,表明路径中存在瓶颈链路的概率越大.定义5.路径计算资源的利用率公平指数.设某到达业务请求T,其传输资源的QoS需求为Ct,假定覆盖网络系统能够提供服务路径P接受业务T的服务请求,则P接入T后的计算资源公平指数fc(P)计算如下:fc(P)=∑tpC(ni)为路径P上每跳节点C(ni)(包含源节点和目的节点)的计算资源饱和度函数,CRi为节点ni的可用带宽资源存量,CRtotalPage5总量.该指数与节点的计算负荷波动成反比线性关系,当波动程度越高,指数取值也会越小,表明路径中存在瓶颈节点的概率越大.单纯使用该指数作路径选择只能选出均衡度高的路径,但无法降低路径的整体消耗代价,因此将式(11)、(13)引入式(7),在服务代价模型的基础上加入瓶颈约束因子,通过乘性混合度量计算服务路径的负载均衡度,这样就能够获得瓶颈概率小且资源消耗少的服务路径,负载均衡效用函数的计算方法如下.定义6.服务路径的资源负载均衡效用函数4.3基于负荷加权的负载均衡启发式函数式(14)描述了服务请求接入后对系统及服务路径负载均衡状态的影响情况,因此根据影响程度的轻重就可决定路由的选择.分析该公式可知,ΔB(P)/fB(P)因子对提高传输资源的负载均衡程度有利,而ΔC(P)/fC(P)因子对提高计算资源的负载均衡程度有利,两者影响权重完全相等.而在实际情况中,覆盖网络在特定运行周期内不同类型资源的负荷状态和瓶颈程度往往并不相同.显然,如果某类资源的瓶颈情况或者负载更重,应当更倾向于优化该类资源的分配,因此本文考虑采用系统负荷分布状况对两类因子进行加权处理,修正模型的精度.4.3.1系统负荷状况评价方法考虑到F-LBQAR算法的目标是降低系统资源饱和度的波动,尽量提高整个网络的负载分布的均衡性,因此本文采用了基于全局资源公平指数的加权方法,通过计算系统总体传输和计算服务资源的波动程度来得到权重值.式(15)、(16)可计算出全局计算资源饱和度的公平指数Gc和传输资源饱和度的公平指数Gb,这两个QoS指标能够对当前系统的负载均衡程度进行量化评价:其中C(ni)=(CRtotal其中B(lj)=(BRtotalk和m分别是图G的节点数和链路数,Gc和Gb能够表征当前资源饱和度的波动程度,两个QoS参数越大,则表明接入服务后系统的资源平均饱和程度越均衡,瓶颈程度越轻,而反之两个QoS参数越小,则表明接入服务后系统的资源平均饱和程度越不均衡,瓶颈程度越严重,注意Gc和Gb的值域为(0,1].4.3.2加权负载均衡启发式函数本节基于Gc和Gb的比例关系设计负载均衡的权重因子的计算方法,设定α为计算资源负载均衡的加权判决因子,β为传输资源负载均衡的加权判决因子,则α,β的计算公式如下:由于Gc和Gb值越大表明资源分布越均衡,那么权重应倾向于值越小的那一类型资源,因此实际上式(17)和(18)采用的是反比例计算.新定义负载均衡效用函数为w(P)=β×ΔB(P)基于式(17)和(18)对式(19)进行线性加权,重由以上定义可知,w(P)值越小则路径负载均衡程度越高.4.4F-LBQAR算法流程本节将描述F-LBQAR算法的具体流程,算法中将采用Dijkstra算法[8]搜索最短路径,算法采用了邻接矩阵方法,因此其计算复杂度为O(n2),与QUEST、PBSP及RBLCP相同,具体步骤如下.F-LBQAR算法.公平负载均衡QoS路由算法.输入:业务请求T,传输资源的QoS需求为Bt,计算资输出:从G找到一条从节点K到节点M的单播服务1.根据T的资源QoS约束,剪除G所有无法满足Bt和Ct的节点与链路,获取备选网络G,如果目标节点K、MG,则算法结束,拒绝业务T;2.基于Dijkstra算法开始最短路径搜索;3.初始化K到所有节点对间的代价及路由信息,设t∈G,有DISTANCE[t]=,ROUTE[t]=-1,DISTANCE[]是距离矩阵表,ROUTE是K节点路由表;4.设定根节点ROOT=K,搜索节点SN=K,备选搜索集合B_SERARCH={G-K},开始最短路径迭代搜索;5.设定NB为SN的邻居节点集合,则有节点S∈NB,链路SN→S,且路径PATH(ROOT,S);6.逐次计算ROOT至NB中节点的路径PATH的传输资源和计算资源代价权值ΔB(P)和ΔC(P);7.逐次计算ROOT至NB中节点的路径PATH的传输资源和计算资源公平指数fB(P)和fc(P);8.计算G的全局公平指数Gc、Gb及加权系数α和β;9.逐次计算ROOT到所有S∈NB路径的负载均衡权Page6值w(P),如果w(P)<DISTANCE[S],则更新距离矩阵DISTANCE[S]=w(P)及路由表ROUTE[S]=SN;10.如果N∈B_SEARCH,DISTANCE[N]≠,且为目前到ROOT的最小距离值,则取SN=N,B_SERARCH=B_SERARCH-N,并跳转到步5,否则到步11;11.如果DISTANCE[M]=,则搜索失败,拒绝业务T;12.如果DISTANCE[M]≠,则接受业务T,并根据ROTUE[]回溯建立K→M的服务路径.5仿真实验分析5.1实验环境本文通过NS2[10]仿真工具模拟覆盖网络系统的资源调度场景,验证F-LBQAR算法与传统算法间的性能差异.仿真方法采用NS2平台生成模拟的物理拓扑,然后在此拓扑基础上通过节点间建立逻辑的应用连接构建覆盖网络空间,最后部署应用层路由协议实现相关的算法,具体步骤分为两步:(1)覆盖空间与物理拓扑间的虚映射.首先构建一组三元向量犌={OverlayGraph,OverlayNode,OverlayLink}描述覆盖网络空间的3种实体对象,对应分别为覆盖拓扑对象、覆盖节点对象及覆盖链路对象,并且通过继承NS2中的NSObject对象,使这些元素能够在TCL实例化;然后建立NS2中的物理拓扑空间与覆盖对象间的映射关系,由主动选出的物理节点一一对应生成若干OverlayNode对象,并根据底层路由表采用邻近领接法[12](即使得两个覆盖节点间的覆盖链路不存在其它覆盖节点)构建出覆盖网络拓扑,生成相应的OverlayLink对象;最后通过OverlayNode和OverlayLink组合形成覆盖拓扑对象OverlayGraph.(2)实时Agent监测.生成覆盖网络后,仍需要采用端到端的测量方法[13-14]获取覆盖网络中的各种网络性能参数,首先继承NS2中的Agent对象生成OverlayAgent对象,该对象可放置在任一Overlay-Node上,并通过向邻近的节点发送探测包来评估和交换OverlayLink和OverlayNode的性能,比如传输延时、路径可用带宽等,所有实时性能数据和通信连接信息可以存放在OverlayGraph的性能数据库中,根据这些信息OverlayGraph对象可以实时计算出全局路由表.对于业务通信的模拟则改进了NS2的流量发生机制.本文设计了OverlayTraffic对象可以依照OverlayGraph中的路由表建立多个OverlayNode节点对间的流Application(NS2中的Application对象)形成应用层连接式的服务路径,并且基于服务路径对象OverlayPath存储已建立的路由信息,随时进行路径的拆除、中断、更新等操作.5.2仿真实验结果分析本实验共分成两组:衡量算法在网络规模和业务量增长的情况下对系统吞吐量的影响(5.2.1节实验2);衡量算法在业务量增长的情况下对系统负载波动程度的影响(5.2.2节实验3).5.2.1服务成功率及吞吐量测试实验2.模拟海量QoS服务请求不断到达的场景,通过服务成功率和吞吐量等QoS指标验证不同的负载均衡覆盖路由算法对系统吞吐量的影响.实验环境基于GT-ITM[15]分别生成4种随机分布物理网络,网络大小分别为50个节点(scale=100×100)、100个节点(scale=100×100)、150个节点(scale=100×100)、200个节点(scale=100×100);节点间存在一条双向链路为0.02概率,每条链路的带宽为2Mbps,延时为200~1000ms;选择30%的物理节点为覆盖节点,每个节点最大计算能力为20unit/s;通过OverlayTraffic模拟到达率为20~400unit/s的CBR业务流,平均流量为300kbps,分别测试QUEST、PBSP、RBLCP及F-LBQAR算法的QoS服务成功率(Qos-ServiceSuccessRate,QSSR)[5]:实验采用了度稀疏的物理网络(0.02概率)构建覆盖网络,因此受限的网络资源导致拥塞较易出现,从图3的数据中明显观察到系统逐渐过载,成功率逐渐下降的过程.分析实验结果可知,随着业务流量的不断增长,资源调度的QoS服务成功率也在不断下降,这表明网络出现拥塞而过载.由于通常网络承载负荷的能力随着网络规模的增长而提高,因此图3(a)中的50个节点网络过载点出现较早,在80unit/s负荷左右,而图3(d)中的过载点则出现较晚,在260unit/s负荷左右.从该实验结果可以看出,无论在哪种拓扑下,相对于传统算法,F-LBQAR算法能够在系统过载的情况下QSSR提高了1%~5%左右,特别对小规模的网络更加明显,最高能提高5%左右的成功率(图3(a),120~200unit/s),该结果说明F-LBQAR算法比传统算法更能适应恶劣的网络环境,有利于提高网络系统的吞吐量.图4的实验结果描述了在100个节点大小的网络平面上,当系统负荷达到100unit/s业务量时,执行各类算法所构成的网络节点流量分布情况,可以看出每种算法仍会产生出现拥塞的节点(流量值较Page7图3不同拓扑下QSSR测试实验结果图4网络size=100、100unit/s下各算法节点吞吐量分布情况高的节点数),但执行F-LBQAR算法后,拥塞节点相对少于其它算法,负载能够被更加均衡地分布在网络平面上.表1统计了该情况下的流量峰值节点数目的分布情况,分析可知在这种实验环境下,QUEST算法和PBSP算法出现[5000kpbs,4000kpbs]、[4000kbps,3000kbps]及[3000kbps,2000kbps]流量区间上的高负荷节点概率要远高于RBLCP及F-LBQAR,而RBLCP算法产生的在[4000kbps,3000kbps]区间内的峰值节点数目略高于F-LBQAR,但[2000kbps,1000kbps]区间内节点数目要远高于F-LBQAR,而F-LBQAR算法的峰值节点则主要集中在[1000kbps,0kbps]部分,这说明F-LBQAR能够将负载更加均衡分布,即提高了网络资源的利用率,又同时降低了拥塞节点的数量.Page8吞吐量范围[5000kpbs,4000kpbs]3300[4000kpbs,3000kpbs]3154[3000kpbs,2000kpbs]151244[2000kpbs,1000kpbs]34364740[1000kpbs,0kpbs]454844525.2.2负载均衡波动程度测试实验3.模拟海量QoS服务请求不断到达的场景,测试系统链路和节点资源饱和度的波动情况,以验证不同的覆盖路由算法的负载均衡能力.实验通过链路的传输负荷(饱和度)和节点的计算负荷(饱和度)的波动率的方差(ResidualLinkCapacityDeviation,RLCD)、(ResidualNodeCapacityDeviation,RNCD)[5-6]两个QoS指标衡量算法对于系统的总体负载均衡程度的影响,定义如下:图5负载均衡波动率测试实验———100点计算资源瓶颈网络图6负载均衡波动率测试实验———100点传输资源瓶颈网络C(ni),B(lj)为网络中物理节点和链路的资源饱和度函数,珚C,珚B为系统两类资源的平均饱和度,k和m分别是节点和链路总数.实验首先基于GT-ITM分别生成2种随机分布物理网络,网络大小均为100节点;一种网络中节点间存在一条双向链路为0.1概率(scale=10×10),每条链路的带宽为2Mbps,随机设定30%的物理节点为覆盖节点,每个节点最大计算能力为20unit/s,该网络属于计算资源相对稀疏的网络拓扑;另一种网络节点间存在一条双向链路为0.02概率(scale=100×100),每条链路的带宽为1Mbps,随机设定30%的物理节点为覆盖节点,每个节点最大计算能力为40unit/s,该网络属于传输资源相对稀疏的网络拓扑;通过OverlayTraffic模拟到达率为0~250unit/s的CBR业务流,平均流量为300kbps,分别测试QUEST、PBSP、RBLCP及F-LBQAR算法在不同拓扑及负荷量情况下的RNCD与RLCD,实验结果如图5、图6所示.从图5、图6的实验结果可以观察到,随着负荷量上升,所有资源饱和度的波动率也会呈上升趋势,Page9这说明负载会增大系统不均衡程度.而当拥塞过载发生以后,波动率反而会有所下降,这是因为过载的服务节点和链路会拒绝新的请求,导致负荷自然分布到空闲的资源上.图5描述了计算资源相对稀疏网络上各种算法的均衡情况,可以看出该网络上高负荷情况下计算资源出现明显拥塞(超过140unit/s),而传输资源波动仍处在上升过程,说明传输资源仍未饱和.但图5结果说明在这种计算资源相对稀缺的网络环境下,相对传统算法,F-LBQAR算法能够在系统过载的情况下降低3%~8%左右的RNCD,而RLCD值与其它算法基本保持在同一水平.图6结果与图5相类似,但由于节点拥塞会对多条链路造成影响,因此传输拥塞(图6(b))不如计算拥塞(图5(a))明显,然而其结果仍然表明F-LBQAR算法仍能够在系统过载的情况下降低2%~6%左右的RLCD(超过160unit/s),而RNCD与其它算法基本保持在同一水平.分析两种实验数据结果可以得出结论:F-LBQAR相对传统算法具有更好地资源均衡分配能力,特别是有利于优化系统紧缺资源的分布状况,在高负荷业务环境及同样的吞吐流量下能够降低2%~8%左右的资源饱和度波动率(RLCD、RNCD).6总结基于覆盖网络环境解决分布式应用的负载均衡QoS路由是一个非常重要的研究方向,而传统的覆盖网络QoS路由算法未考虑资源瓶颈对路由选择的影响,容易造成系统的局部拥塞,本文提出一种公平负载均衡QoS覆盖路由算法F-LBQAR,能够降低资源瓶颈引起的网络拥塞概率,提高QoS服务成功率和系统吞吐量.该方法相对传统算法具有两个创新之处:(1)在路由模型中引入了路径服务资源利用率的公平指数,依据资源消耗代价模型推导负载均衡启发式函数,有利于选出阻塞概率较小的服务路径,且总体代价仍能保持相对较低水平;(2)基于全局系统资源的瓶颈程度计算路由约束项的权重因子,有利于瓶颈资源自适应的优化分布.实验结果证明相对传统算法,F-LBQAR算法在高负荷情况下能提高1%~5%服务成功率(QSSR),降低2%~8%负载波动(RNCD,RLCD),该研究成果将有助于分布式系统开发高性能的资源服务调度策略.F-LBQAR算法目前仅考虑了覆盖网络端到端的单播服务路由,尚未涉及覆盖组播路由的负载均衡问题,本文未来研究工作重点将考虑覆盖组播路由情况下优化资源分布,同时考虑节点度、组播树延迟等更多QoS参数的约束.
