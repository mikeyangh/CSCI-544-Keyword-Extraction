Page1一种基于攻击图的安全威胁识别和分析方法吴迪1),2),4)连一峰1),3)陈恺1)刘玉岭1),2)1)(中国科学院软件研究所北京100190)2)(中国科学院研究生院北京100049)3)(信息安全共性技术国家工程研究中心北京100190)4)(信息网络安全公安部重点实验室(公安部第三研究所)上海201204)摘要业务系统安全管理需要网络攻击图来评估系统整体安全性或态势,同时又需要对那些可能严重危害系统安全的脆弱性利用威胁进行重点分析和优先处置.现有安全威胁识别和分析方法无法兼顾这两个方面,也无法处理脆弱性利用威胁分析过程中的不确定性问题.作者提出了一种安全威胁识别和分析方法.利用颜色Petri网(CPN)定义网络攻击图,并给出了网络攻击图生成NAGG算法,根据攻击模型分析结果生成网络攻击图;给出了基于CPN仿真的网络攻击图分解NAGD算法,可一次性分解出各脆弱性利用威胁对应的子攻击图,所述子攻击图不存在循环路径且最长攻击路径不超过预设值.并给出了一种脆弱性利用威胁度评估VETE算法,将子攻击图转换为不确定性推理规则集,采用D-S证据推理计算各子攻击图所对应安全威胁的威胁度,以确定安全威胁处置优先级.最后以一个典型Web应用系统为例,验证了所述安全威胁识别和分析方法的有效性.关键词攻击模型;网络攻击图;子攻击图;颜色Petri网;不确定性推理;D-S证据理论1引言业务系统不可避免地存在脆弱性,因而使其面临各种脆弱性利用威胁.从脆弱性利用角度剖析业务系统面临的安全威胁是一种有效的业务系统安全分析途径.攻击图是一种广泛应用的脆弱性利用分析方法.它从攻击者角度出发,基于系统网络配置和脆弱性信息,分析脆弱性利用之间的依赖关系,找出所有可能的攻击路径[1-3],以便管理员采取必要措施抵御安全威胁,以降低安全风险.因此,攻击图可为信息系统安全风险评估和绩效分析提供重要依据[4-5].按攻击图中节点和边表示的含义不同,本文将攻击图分为状态攻击图和因果关系图.状态攻击图[1,6]中的节点表示目标网络和攻击者的全局状态,有向边表示单一攻击行为引起的状态转换.状态攻击图由于存在状态空间爆炸问题,不适用于大规模系统的安全性分析;因果关系图[7-9]中,节点表示系统条件(属性)和原子攻击,有向边表示节点间的因果关系.因果关系图克服了状态攻击图的状态组合爆炸问题,具有更好的可扩展性,能用于大规模网络安全性分析.目前的攻击图[7-10]大都属于因果关系图.依据攻击图中攻击路径覆盖范围,本文将攻击图分为网络攻击图和子攻击图.网络攻击图展示业务系统中所有可能攻击路径,子攻击图只展示与特定安全威胁相关的攻击路径.网络攻击图适用于识别系统中各种可能影响到业务系统安全属性的脆弱性利用威胁,有助于评估业务系统整体安全性或态势,但网络攻击图[7,9]往往非常庞大,不适合对某一特定脆弱性利用威胁的分析;子攻击图[1,10]适于对特定脆弱性利用威胁进行有针对性的分析和处置.在具体安全分析场景中,鉴于系统业务重要性的不同及资源有限和成本等因素影响,往往需要进一步分析所识别出的各种脆弱性利用威胁,生成各脆弱性利用威胁所对应的子攻击图,确定脆弱性利用威胁的优先处置顺序,以合理分配安全资源.以往攻击图生成算法只能生成网络攻击图[7,9]或者子攻击图[1,10].但在实际的脆弱性利用威胁识别和分析过程中,通常需要基于网络攻击图和安全属性识别出所有影响业务系统安全性的脆弱性利用威胁,再基于子攻击图对所识别出的各脆弱性利用威胁进行深入分析.近年来攻击图的研究工作主要集中在攻击图可视化[11]和基于攻击图的安全分析[4,12-14]上.文献[11]利用数据归约和攻击组合方法改善攻击图可视化方法,更关注攻击图呈现问题,不是完备的攻击图分析方法.文献[10]尝试基于网络攻击图裁剪出特定安全威胁所对应的子攻击图时,发现了网络攻击图中的循环攻击路径问题,但并未给出有效去除循环攻击路径的方法.文献[12]给出从网络攻击图求取所有n-有效路径的后向迭代算法,一次只能生成一个与特定安全威胁相关的子攻击图.文献[15-16]给出了基于Petri网的组合攻击模型,但并未给出创建Petri网攻击模型的方法.文献[17]应用贝叶斯网络评估网络脆弱性,提出了量化评估计算方法,但无法克服贝叶斯网计算过程中大量先验概率的获取问题.文献[4]考虑攻击图中各个节点由于在攻击路径中所处位置不同而具有不同的重要性,基于PageRank思想将状态攻击图转换为Markov链,来计算攻击图中各个节点的重要度,但仍未解决状态攻击图组合爆炸问题.在基于子攻击图分析特定脆弱性利用威胁的过程中,往往需要处理大量的不确定性信息,这些不确定性主要表现在模糊性和不一致性.传统基于概率的信息系统安全分析方法无法有效解决模糊性问题[4,17-18].基于D-S证据理论的脆弱性利用威胁分析方法可以有效处理信息安全分析过程中的不确定性.文献[19]使用D-S证据理论来处理网络风险评估中的不确定性,利用D-S组合方法对风险评估指标相关的安全因子进行融合.D-S证据理论因其在不确定信息表达和合成方面的明显优势,近年来广泛应用于数据融合[14,19],但在脆弱性利用威胁分析Page3方面的应用尚处于探索阶段.本文旨在基于网络攻击图识别业务系统中各脆弱性利用威胁,并通过对网络攻击图进行分解以得到各脆弱性利用威胁所对应的子攻击图,并评估各脆弱性利用威胁度,以便对各脆弱性利用威胁进行优先级排序和处置.本文采用文献[20]中的攻击模型建模方法构建业务系统攻击模型,并基于攻击模型分析结果构建基于颜色Petri网(CPN)的网络攻击图,然后将网络攻击图进行分解,可一次性得到各脆弱性利用威胁所对应的子攻击图,并采用不确定性D-S证据推理方法,将安全威胁所对应的子攻击图转换为不确定性D-S推理规则集,采用D-S推理引擎计算各脆弱性利用威胁的威胁度.最后以一个典型Web系统为例,验证了本文所述安全威胁识别和分析方法的有效性.2安全威胁识别2.1网络攻击图定义和生成算法为叙述方便,本文称单次脆弱性利用攻击为原子攻击.如图1所示,原子攻击包括三类要素,即原子攻击成功实施所依赖的前提条件、原子攻击动作本身以及攻击后果.其中,原子攻击前提条件包括攻击者权限、攻击可达性、服务活跃性和脆弱性存在性.攻击者权限指攻击者在源主机和目标主机上获得的权限级别,包括None、User和Root权限;攻击可达性指攻击者从源主机发起的原子攻击能否抵达目标主机;服务活跃性指原子攻击成功实施所依赖的服务是否在目标主机上运行;脆弱性存在性指攻击所利用的脆弱性在目标主机的服务中是否存在.在实际攻击中,只有满足这些前提条件的原子攻击才可能成功实施.原子攻击成功实施的结果主要表现为攻击者能力的提升,比如攻击者获得了目标主机上的user或root权限.图1所述原子攻击其实是一个CPN网结构,其中,用来表示原子攻击前提条件和后果的椭圆形节点等同于CPN网结构中的库所;用来表示原子攻击动作本身的矩形节点等同于CPN网结构中的变迁.下面基于CPN给出原子攻击形式化定义.定义1.原子攻击AAG是一个CPN网结构,记为AAG=〈PAo,t,PAd〉,其中,PAo为所定义原子攻击的输入库所集合,每个库所代表一个攻击前提条件,它可定义为攻击者在源主机或目标主机上的初始权限、源主机到目标主机的攻击可达性、脆弱性所依赖服务的可用性及脆弱性存在性;t为变迁,它表示原子攻击的一个脆弱性利用行为;PAd为原子攻击的影响库所集合,其中每个库所记录该原子攻击成功实施后的效果.图2为一个具体的原子攻击实例,假设攻击者要从其所控制的主机1利用主机2上的IISWeb服务中的一个缓冲区溢出漏洞(CVE-2002-0364),则必须满足以下4个条件:(1)攻击者在源主机H1的权限至少为User(记为椭圆U_h1);(2)主机1可以访问主机2的HTTP服务(记为椭圆http_h1_h2);(3)主机2上的IIS5.0Web服务正在运行(记为椭圆IIS_h2);(4)主机2上的IIS5.0服务存在一个编号为CVE-2002-0364的缓冲区溢出漏洞(记为椭圆v364_h2).只有当以上4个条件都满足时,攻击者才可能成功的从H1上发起对H2上IISWeb服务的攻击(记为矩形v364_h1_h2),攻击结果是,攻击者可能获得了H2上的Root权限(记为椭圆R_h2).本文采用文献[20]中的攻击建模方法构建攻击模型,所创建的攻击模型为一个CPN系统.所述攻击模型基于攻击能力增长假设.定理证明:该攻击模型所对应CPN系统在有限步仿真后一定进入死状态,并且有且仅有一个死状态,且在CPN系统进入死状态时,SuccessExploitList库所包含了攻击者成Page4功执行的所有脆弱性利用动作.由于可以采用CPN仿真方法代替复杂度较高的可达图分析方法,因此,所述攻击模型分析方法具有较好扩展性,非常适合大规模网络的攻击建模.CPN攻击模型仿真结束后,融合库所Success-ExploitList中保存有本次攻击过程中所有可能成功执行的脆弱性利用攻击动作.根据定义1可知,每个脆弱性利用动作可用原子攻击CPN模型表示.当各原子攻击建模结束后,可以根据各原子攻击之间依赖关系构建网络攻击图.下面给出网络攻击图的定义.定义2.网络攻击图AG是一个CPN网结构,记为AG=〈P0∪Pd,T0∪Td,E〉,其中,初始库所集合P0中每个库所代表网络和攻击者的初始状态,表示原子攻击成功实施的前提条件;可达库所集合Pd中每个库所代表网络和攻击者的可达状态,它记录原子攻击成功实施后的效果;T0为独立型变迁集合,对于T0中各变迁,其输入库所包含在初始库所集合P0中,因此,T0中各变迁所代表的原子攻击的实施不依赖于其它原子攻击;Td为依赖型变迁集合,对于Td中各变迁,其输入库所集合中至少有一个库所属于可达库所集合Pd,因此,成功实施Td中各变迁所代表的原子攻击必须依赖于其它原子攻击;E为连接CPN攻击图中库所和变迁的有向弧.网络攻击图AG满足如下约束:①攻击图AG中的有向弧只能连接库所和变迁,或者连接变迁和库所,即E((P0∪Pd)×(T0∪Td))∪((T0∪Td)×(P0∪Pd));②对于独立型变迁集合T0中任一元素t,pre(t)表示该变迁的输入库所集合,post(t)表示该变迁的输出库所集合,则(pre(t)P0)∧(post(t)Pd);③对于依赖型变迁集合Td中任一元素t,pre(t)表示该变迁的输入库所集合,post(t)表示该变迁的输出库所集合,则(p∈pre(t):p∈Pd)∧(post(t)Pd).算法1.网络攻击图生成算法(NAGG).输入:CPN攻击模型中记录着所有成功的脆弱性利用输出:网络攻击图AG=〈P0∪Pd,T0∪Td,E〉1.P0={Markeplace(root(host0))},Pd=,T0=,2.AG=〈P0∪Pd,T0∪Td,E〉3.foreachselinSuccessExploitList4.begin5.sel(sn,dn,vid)=split(sel);6.cveentry(vid,st,snm,mt,vt,or,dr,rr)=7.atomic_model=8.AG=9.end10.returnAG.算法1给出了基于CPN攻击模型中融合库所SuccessExploitListtoken值的网络攻击图生成(NAGG)算法.算法第1行和第2行将初始攻击图AG置为空,调用Makeplace过程创建一个表示攻击者拥有h0主机上root权限的库所,并加入到初始攻击图AG中.第3行到第9行为一个循环,它为SuccessExploitList中记录的每个脆弱性利用动作sel构造原子攻击CPN网结构,然后追加到当前攻击图AG中.其中,第5行对sel进行分解;第6行根据脆弱性利用漏洞编号检索CVEDB数据库,得到该脆弱性对应CVE条目cveentry;第7行利用sel和cveentry输入数据,根据原子攻击的CPN网结构(如图5所示)构造相应的CPN模块;第8行将构造的原子攻击CPN模块追加到当前攻击图AG中;第10行返回生成的网络攻击图AG.为确保网络攻击图AG中脆弱性利用的前提条件和后果所对应库所及原子攻击所对应变迁的唯一性,NAGG算法对脆弱性利用相关库所和变迁进行规范命名.NAGG算法采用如下规范命名规则来命名各库所和变迁:(1)前提条件“攻击者权限”(包括攻击者在源主机和目标主机上具有的权限),表示为“权限级别(主机编号)”,其对应库所命名为“权限级别_主机”.如,在构造攻击图时,攻击者在h1上具有的权限User(h1)所对应的库所名为U_h1.(2)前提条件“攻击可达性”,表示为“协议(源主机,目标主机)”,此前提条件对应库所命名为“协议_源主机_目标主机”.如,在构造攻击图时,主机h1和h2之间http协议的可达性http(h1,h2)对应库所名为http_h1_h2.(3)前提条件“服务活跃性”,表示为“服务名(主机名)”,对应库所命名为“服务名_主机名”.如,在构造攻击图时,主机h1上的IIS服务IIS50(h1)所对应的库所名为IIS50_h1.(4)前提条件“漏洞存在性”,表示为“漏洞编号(主机名)”,相应库所命名为“漏洞编号_主机名”.(5)对于脆弱性利用后果,本文仅指攻击者获得的权限,因此,其命名方法和对应库所命名方法与Page5前提条件“攻击者权限”相同.(6)某一脆弱性利用动作表示为“漏洞编号(源主机,目标主机)”,其相应变迁命名为“漏洞编号_源主机_目标主机”.如在构造攻击图时,脆弱性利用动作CVE364(h1,h2)对应的变迁名称为v364_h1_h2.3网络攻击图分解算法算法1所示网络攻击图生成NAGG算法所构造的网络攻击图AG包含了系统所有可能的攻击路径,以及攻击者所有可能获得的攻击权限.为了对特定脆弱性利用威胁进行重点分析和优先处置,需要基于各脆弱性利用威胁,对网络攻击图进行分解,以获得各安全威胁对应的子攻击图.子攻击图包含了攻击者从初始节点出发抵达指定威胁目标的所有可能攻击路径.这里给出一个基于CPN的网络攻击图分解算法,可一次性分解出各脆弱性利用威胁所对应的子攻击图,所述子攻击图不存在循环路径且最长攻击路径不超过预设值.攻击图相关定义和网络攻击图分解算法如下.3.1网络攻击图分解算法和相关定义定义3.攻击路径.设Path=t1→t2→…→tn是给定网络攻击图AG中的一个变迁序列,其中ti(1in)为变迁,它代表一个原子攻击,则称满足下面约束条件的变迁序列为攻击路径:①变迁t1为独立型变迁;②变迁tn的输出库所集合Potst(tn)与关键节点集合P的交集不为空;③变迁序列中前驱变迁的输出库所为后继变迁的输入库所.攻击路径长度为攻击路径所对应的变迁序列长度.定义4.脆弱性利用威胁定义为SRi=〈Pi其中Pi务系统安全的权限集合,脆弱性利用威胁所对应的子攻击图只包含了从初始节点出发抵达集合Pi各元素所示权限的攻击路径.本文所指威胁除特别说明外,均为脆弱性利用威胁.网络攻击图分解需要解决两个问题:(1)循环攻击路径问题;(2)超长攻击路径问题.根据攻击者能力单调增长特性可知,实际攻击过程中攻击者没有必要重复获取已获得的攻击能力,因此循环攻击路径没有实际意义,并且循环攻击路径的存在会增加子攻击图分析复杂度.根据以往对黑客攻击事件的研究显示,实际网络攻击场景中,并不存在超长的攻击路径[12].这里首先给出子攻击图定义,然后给出一个可以消除循环攻击路径和限制攻击路径长度的网络攻击图分解(NAGD)算法.定义5.子攻击图.某脆弱性利用威胁SR=〈PC〉所对应的子攻击图为满足下述条件的网络攻击图AG=〈P0∪Pd,T0∪Td,E〉,记AG的所有攻击路径集合为PATHAG:(1)不存在循环路径,即对p(t1,t2,…,tl)∈PATHAG,有Post(ti)∩(∪i-1,2ilk;(2)任意攻击路径长度不超过指定常数N(N1),即p(t1,t2,…,tl)∈PATHAG,Len(p)N;(3)任一攻击路径抵达的目标必然为脆弱性利用威胁SR中的节点,即p(t1,t2,…,tl)∈PATHAG,Len(p)N,Post(tl)∩PC≠.算法2为NAGD算法,其中,代码第1到第7行将网络攻击图所对应的CPN网结构转换为可仿真CPN系统;代码第8行对转换后的CPN系统进行仿真,仿真必然在有限步停止;代码第9到15行根据仿真结束后各脆弱性利用威胁相关库所记录的攻击路径列表对网络攻击图进行分解,得到各威胁对应的子攻击图.NAGD算法可在只执行一次网络攻击图转换和CPN系统仿真前提下,一次性得到各脆弱性利用威胁所对应的子攻击图.算法2.网络攻击图分解算法(NAGD).输入:需分解的CPN网络攻击图AG=〈P0∪Pd,T0∪输出:〈Pic〉中各威胁相关子攻击图AGSi=〈P0∪Pd,1.P0=,Pd=,T0=,Td=,E=;2.AG=〈P0∪Pd,T0∪Td,E〉;3.foreachtinT0∪Tddobegin4.AAG=ObtainAAG(t);5.AAG=AAGtoCPN(AAG,N);6.AG=AppendCPNModel(AAG,AG);7.end8.CPNSimulate(AG);9.fori=1tondobegin10.ValidTransSet=11.AGSi=AG;12.foreachtinT0∪Tddobegin13.If(tValidTransSet)14.end15.end16.return{AGSi}i=1..n.在算法2所示的NAGD算法中,函数AAG-toCPN将原子攻击AAG=〈PA0,t,PAd〉转换为可仿真CPN子模块AAG,它是NAGD算法实现的关Page6键步骤.该函数所用到的颜色类型定义见表1.函数AAGtoCPN伪代码如算法3所示,其中,代码1~4行为PA0中各输入库所指定颜色类型APT,并为属于初始库所集合P0的各输入库所建立一个攻击路径和攻击者能力列表都为空的token;代码第5行为输出库所PAd中各库所指定颜色类型APT;代码6~8行将(PA0×t)中各输入弧改为双向弧,以避免变迁t与其它变迁在输入库所代表的攻击条件上形成竞争;同时为双向弧附上可将APT类型token分表1函数AAGtoCPN中用到的颜色类型定义说明列表序号颜色类型名称1234算法3.AAGtoCPN函数伪代码.输入:网络攻击图AG=〈P0∪Pd,T0∪Td,E〉;需转输出:AAG相应的被转化的CPN子模块AAG1.ForeachpinPAodo2.AttachColorType(p,APT);3.ifp∈P0thenAttachEmptyToken(p)4.Endfor5.ForeachpinPaddoAttachColorT(p,APT);6.Foreacheiin(PA0×t)do7.ei=MakeDuralArc(ei),AttachSplitAPTExpr(ei)8.Endfor9.Foreacheiin(t×PAd)(t×PAd)do10.AttachArcExpression(ei,MkExpr(Pre(ei),11.Endfor12.Ph=MakeHistoryPlace(APT);13.AttachGurad(t);14.returnAAG.图3为一个利用AAGtoCPN函数将与变迁v2_0_3相关的原子攻击网结构转换为可执行CPN子模块实例.其中,设置输入库所R_0,dns_0_3,bnd_h3和v2_h3的颜色类型为APT;设置输出库所R_3的颜色类型为APT;分别为4个输入库所R_0,dns_0_3,bnd_h3和v2_h3附加初始token值“([],[])”;将从输入库所到变迁v2_0_3的4个输入弧设置为双向弧,并定义弧表达式为(pi,ti);以表达式“(p1[“v2_0_3”],t1[“R_3”])”标识从变迁v2_0_3到库所R_3的输出弧(表达式中的为CPN语言中list元素追加运算符),从而将变迁解为攻击路径和攻击能力列表的脚本表达式;代码第9~11行为(t×PAd)中各输出弧附上可将变迁t所代表的脆弱性利用行为追加到当前攻击路径中,以及将变迁T输出结果所代表的攻击者能力追加到当前攻击者能力列表中的弧表达式;代码第12行创建颜色类型为APL的库所Ph,它记录了所有经过变迁t的攻击路径的列表,以防止仿真过程中变迁t的同一绑定被重复触发;代码第14行为变迁t添加guard函数,以去除攻击图中的循环路径和超长路径.v2_0_3所代表的脆弱性利用行为追加到当前攻击路径中,同时将变迁v2_0_3成功执行后所获得的攻击权限(获得了host3上的root权限)追加到当前攻击者能力列表中;创建一个颜色类型为APL的历史库所PH,分别创建从PH到v2_0_3和从v2_0_3到PH的有向弧,并分别附加弧表达式“pl”和“pl[p1]”,以记录经过变迁T的所有攻击路径的列表.图3利用AAGtoCPN函数转换原子攻击例子图3中,为变迁v2_0_3设置guard函数“gd(“R_3”,p1,t1,pl)”,以限定变迁v2_0_3所代表原子攻击的执行条件,限定条件为3个条件的与:①该变迁的执行不会导致循环攻击路径;②该变迁Page7的执行不会获取到重复的攻击权限;③该变迁所在攻击路径长度不超过指定值.3.2NAGD算法复杂度分析NAGD算法包括转换、仿真和裁剪3个步骤,其算法复杂度主要由第8行的CPN系统仿真复杂度决定,因此,这里只分析CPN系统的仿真复杂度.为说明NAGD算法的正确性和有效性,这里给出两个定理.定理1.NAGD算法中,由网络攻击图转换而来的CPN系统仿真复杂度为O(m(ktoutkpout)N),其中,m为网络攻击图中的独立型变迁数量;kpout为库所最大输出度;ktout为变迁最大输出度;N为子攻击图中允许的攻击路径最大长度.证明.采用数学归纳法证明.假设网络攻击图所对应的CPN网结构中,各库所ai输出度最大为kpout;各变迁Ti输出度最大为ktout;网络攻击图中存在m个独立型变迁.假设子攻击图中允许出现的最大攻击路径长度为1,则只有m个独立型变迁能被触发,因此,CPN系统在m步仿真后停止,这m个独立型变迁将最多向mktout个库所输出token;假设子攻击图中允许出现的最大攻击路径长度为2,则由第1步攻击所得到的最多mktout个token将可能触发最多mktoutkpout个变迁,这些变迁将向最多toutkpout个库所输出token;假设子攻击图中允许mk2出现的最大攻击路径长度为3,则第3步可能触发的变迁数最多为mk2子攻击图中允许出现的最大攻击路径长度为N的情况下,第N步攻击可能触发的变迁数最多为mkN-1仿真所触发的变迁数最多为(m+mktoutkpout+mk2(ktoutkpout-1).因此,由网络攻击图转换而来的CPN系统仿真复杂度为O(m(ktoutkpout)N).证毕.在网络攻击图中,独立型变迁数m一般为较小值,变迁最大输出度ktout和库所最大输出度kpout为较小常数;最大攻击路径N一般长度为3或4.综上所述,算法2所示的网络攻击图分解NAGD算法计算复杂度与文献[12]中求取N-有效攻击路径计算方法相比复杂度更小,且本文所述NAGD算法可一次性求出各脆弱性利用威胁所对应的子攻击图,比文献[12]中所述一次只能求取一个关键节点集合的N-有效攻击路径灵活性更好.定理2.NAGD算法中,由网络攻击图所对应的CPN网结构转换而来的CPN系统在有限步仿真后一定进入死状态,且有且仅有一个死状态;在死状pout+…+mkN-1toutkN-1toutk2态时,各威胁节点对应库所token值包含了攻击者抵达脆弱性利用威胁节点的所有无环和最大长度不超过N的攻击路径集合.定理2证明与文献[20]中的定理1证明类似,首先证明可采用CPN系统仿真代替CPN可达图分析法,然后基于本文定理1可得定理2结论.由于篇幅所限,定理2证明过程从略.4脆弱性利用威胁度评估本文采用D-S证据不确定性推理方法评估各脆弱性利用威胁的威胁度.这里首先给出脆弱性利用威胁度和D-S证据推理相关定义,然后给出脆弱性利用威胁度评估VETE算法.定义6.脆弱性利用威胁度为从指定脆弱性利用威胁的子攻击图AAG到区间[0,1]的映射f:AAG→[0,1],用来综合评估攻击者达到脆弱性利用目标的成功率,攻击者达到脆弱性利用目标成功率越大,脆弱性利用威胁度越大,反之越小.定义7.具有不确定性的推理规则可表示为IFEthenH,CF;其中H为假设,表示为H={a1,a2,…,am},ai∈Ω;E为支持H成立的假设集,它们是命题的逻辑组合,CF为可信度因子,CF={c1,c2,…,cm},ci用来描述前提E成立时ai的可信度,且ci满足如下条件:(1)ci0,1im;(2)∑mci1.i=1定义8.不确定性传递.对于不确定性规则IFEthenH,CF,定义m({ai})=f(E)ci(ai=1,2,…,m),并规定:①m(Ω)=1-∑m于Ω的所有其它子集H,均有m(H)=0.定义9.不确定性组合.当规则的前提(证据)E是多个命题的合取或析取时,定义:f(E1∧E2∧…∧En)=min(f(E1),f(E2),…,f(En)),f(E1∨E2∨…∨En)=max(f(E1),f(E2),…,f(En)).当有n条规则支持同一结论时,即如果H={a1,a2,…,am},则IFEithenH,CFi(CFi={Ci1,Ci2,…,Cim}),如果这些规则相互独立的支持结论H成立,则可以先计算mi({a1},{a2},…,{am})=mi({a1},{a2},…,{am})=(f(Ei)Ci1,f(Ei)Ci2,…,f(Ei)Cim),1in,Page8(f(Ei)·Ci1,f(Ei)·Ci2,…,f(Ei)·Cim),1in.然后根据证据合成法则对mi进行证据合成,得到所有规则对结论H的支持.算法4给出基于D-S证据推理的VETE算法,它包括3组步骤:(1)第1行至第6行将子攻击图转换为如定义7所示的IF-then规则集,其中,对于子攻击图中每个变迁,算法第3行抽取该变迁所对应的原子攻击,第4行将原子攻击分解为原子攻击前提条件、原子攻击动作和原子攻击后果,算法第5行根据原子攻击分解结果生成IF-then规则;(2)第7行至第10行根据CVSS发布的脆弱性利用难易程度评估经验值和初始证据可信度等知识,将IF-then规则转换为D-S证据推理规则;(3)第11行利用D-S证据理论推理引擎对所生成的D-S证据推理规则集进行不确定性推理,最终得到脆弱性利用威胁度.算法4.VETE算法.输入:脆弱性利用威胁相关子攻击图SAG=〈P0∪Pd,输出:子攻击图相关脆弱性利用威胁的威胁度VEI1.ForeachtinT0∪Tddo2.Begin3.aag=ObtainAAG(t);图4Web系统拓扑图表2Web业务系统软件配置及脆弱性信息无主机所在网段H0外网H2DMZApache2.0(HTTP)CVE-2011-3607(1)(remote,1,0)H3DMZH4内网OpenSSHD(SSH)H5内网IE7.0(HTTP)CVE-2002-0004(4)4.〈PAo,t,PAd〉=DecomposeAAG(aag);5.Ri=Convert2IF-Then-Rule(PAo,t,PAd);6.End7.Foreachrin{Ri}do8.Begin9.Ri=Convert2DSRule(r,DSVE);10.end11.VEI=DSReasoning({Ri});12.return(VEI).5实验分析本文建立了一个典型Web应用业务系统实验环境,用于验证基于攻击图的安全威胁识别和分析方法的有效性.实验系统拓扑结构如图4所示,部署在网络信任域边界处的防火墙将系统网络分成内网、DMZ区和可访问互联网的外网3个安全域,各安全域之间的安全策略如下:(1)外网用户只允许访问DMZ区H2上的ApacheWeb服务和H3上的DNS域名服务;(2)DMZ区的H2允许访问H3上的Sendmail服务和内网H4上的PostgreSQL服务;(3)禁止H2和H3直接访问内网中其它主机;(4)内网中的管理主机H5允许直接访问DMZ的H2和H3及内网的H4.各应用终端的软件配置和脆弱性信息见表2.Page9应用文献[20]中给出的攻击建模方法为此Web业务系统建立攻击模型,然后利用标准工具CPNTools[19]对该CPN攻击模型进行仿真.仿真结束后,融合库所SuccessExploitList的token数据为1[(H0,H2,1),(H0,H3,2),(H2,H3,2),(H2,H3,5),(H2,H5,6),(H2,H4,7),(H3,H5,3),(H5,H4,7),(H4,H4,4),(H4,H3,2),(H3,H2,1),(H4,H3,5),(H5,H2,1),(H5,H3,2),(H5,H3,5),(H4,H2,1)].应用2.1节给出的NAGG算法构造图5由CPN攻击模型结果生成的网络攻击图基于Web业务系统安全属性对图5所示的网络攻击图进行分析,可识别影响Web业务系统安全性的各种脆弱性利用安全威胁,即攻击者可能获得的影响业务系统网络节点安全属性的攻击权限.根据Web系统业务流和安全属性分析可知,影响到本业务系统安全的关键节点为H2,H3和H4.容易从网络攻击图中识别出它们可能面临的脆弱性利用威胁分别为{R_2}、{R_3}、{U_4,R_4}和{U_5,R_5}.下面利用NAGD算法从网络攻击图分解出各脆弱性利用威胁所对应的子攻击图.这里假设在子攻击图中允许出现的最长攻击路径为3.NAGD算法第1阶段将图5所示的网络攻击图转换为可仿真CPN系统;第2阶段利用CPNTools工具[21]对转基于CPN的网络攻击图如图5所示.从图5可以看出,攻击者在初始状态拥有主机H0上的Root权限(用库所R_h0表示),它可以利用主机H3上编号为2(CVE-2001-0010)的脆弱性,从而获得H3上的Root权限,它由图5中名为v2_0_3的原子攻击表示;攻击者也可以利用主机H2上编号为1(CVE-2011-3607)的脆弱性,从而获得H2上的Root权限,它由图5中名为v1_0_2的原子攻击表示.换后的CPN系统进行仿真,仿真在有限步内结束后,各脆弱性利用威胁相关库所中包含了攻击者从初始节点出发抵达目标节点所有可能的步长不超过3的脆弱性利用攻击路径,因此,可以基于这些攻击路径信息对网络攻击图进行分解,一次性得到各种脆弱性利用威胁所对应的子攻击图.这里以节点H4和H5面临的脆弱性利用威胁{U_4,R_4}和{U_5,R_5}为例,给出相应的子攻击图.网络攻击图仿真结束后,库所U_4的token值为1([v1_0_2,v7_2_4],[R_2,U_4])++1([v2_0_3,v1_3_2,v7_2_4],[R_3,R_2,U_4]),表明存在两条长度不超过3的攻击路径,使攻击者可以获得节点H4上的User权限;库所R_4的token值为Page101([v1_0_2,v7_2_4,v4_4_4],[R_2,U_4,R_4]),这表明存在一条长度不超过3的攻击路径,使得攻击者可以获得节点H4上的Root权限.脆弱性利用威胁{R_4,U_4}所对应的子攻击图如图6(a)所示.类似地,对于脆弱性利用威胁{R_5,U_5},库所R_5的token值为1([v1_0_2,v5_2_3,v3_3_5],[R_2,U_3,R_5]),库所U_5的token值为1([v1_0_2,v6_2_5],[R_2,U_5])++1([v2_0_3,v1_3_2,v6_2_5],[R_3,R_2,U_5]),最后得到脆弱性利用威胁{R_5,U_5}对应的子攻击图如图6(b)所示.由于篇幅问题,其余脆弱性利用威胁所对应的子攻击图说明从略.图6脆弱性利用威胁所对应的子攻击图实例图7由图6(a)转换而来的不确定性推理规则集在得到指定节点面临的各种脆弱性利用威胁所对应子攻击图后,下面根据VETE算法计算各脆弱性利用威胁度.由于篇幅问题,这里只给出脆弱性利用威胁{R_4,U_4}的脆弱性利用威胁度计算过程.首先,将图6(a)所示的子攻击图转换为如图7所示的不确定性推理规则集;然后,根据初始证据可信度和脆弱性利用成功率经验值将不确定推理规则集转换为D-S不确定性推理规则集.这里假设各初始证据可信度为1(即初始条件总成立),D-S证据样本空间大小Ω=6,基于CVSS知识库确定子攻击图中各脆弱性利用成功率和失败率(参见表2中利用成功率栏),从而确定对应推理规则的CF因子.求出脆弱性利用威胁{R_4,U_4}的威胁度.最后,根据D-S证据理论的不确定性推理算法(1)根据r1求R_3的确定性f(R_0dns_0_3bnd_h3v2_h3)=min(1.0,1.0,1.0,1.0)=1.0,m1({R_3})=(1.0×0.4)=(0.4),Bel(R_3)=m1({R_3})=0.4,Pl(R_3)=1-Bel(R_3)=1-0=1,f(R_3)=Bel(R_3)+({R_3}/Ω)×Page11(2)求R_2确定性根据规则r2和r3,有f(R_3htp_3_2iis_h2v1_h2)=min(0.5,1.0,1.0,1.0)=0.5,m2({R_2})=(0.5×0.5)=(0.25),f(R_0htp_0_2iis_h2v1_h2)=min(1.0,1.0,1.0,1.0)=1.0,m3({R_2})=(1.0×0.5)=(0.5),m2(Ω)=1-0.25=0.75,m3(Ω)=1-0.5=0.5.由D-S证据组合公式得到K=∑x∩y≠则有m23({R_2})=(m2(Ω)m3({R_2})+m2({R_2})m3(Ω)+m2({R_2})m3(R_2))/K=(0.75×0.5+0.25×0.5+0.25×0.5)/1.0=0.625,Bel(R_2)=m23({R_2})=0.625,Pl(R_2)=1-Bel(R_2)=1-0=1,f(R_2)=Bel(R_2)+({R_2}/Ω)×(3)求U_4确定性f(R_2sql_2_4mql_h4v7_h4)=min(0.688,1.0,1.0,1.0)=0.688,m4({U_4})=(0.688×0.5)=(0.344),Bel(U_4)=m4({U_4})=0.344=0.344,Pl(U_4)=1-Bel(U_4)=1-0=1,f(U_4)=Bel(U_4)+({U_4}/Ω)×(4)求R_4确定性f(U_4cli_4_4atc_h4v4_h4)=min(0.453,1.0,1.0,1.0)=0.453,m5({R_4})=(0.453×0.4)=(0.181),Bel(R_4)=m5({R_4})=0.181,Pl(R_4)=1-Bel(R_4)=1-0=1,f(R_4)=Bel(R_4)+({R_4}/Ω)×通过D-S不确定性推理可知,在限定最长攻击路径为3的情形下,节点H4面临的脆弱性利用威胁{R_4,U_4}的威胁度为0.317.按照类似方法,可以求得其它节点面临的脆弱性利用威胁度,分别为{R_2}=0.665,{R_3}=0.413,{R_4,U_4}=0.317,{R_5,U_5}=0.215.最后,按照威胁度大小对各脆弱性利用威胁排序,得到影响Web业务系统安全性的各脆弱性利用威胁优先级排序:{R_2},{R_3},{R_4,U_4},{R_5,U_5},结果表明,脆弱性利用威胁{R_2}发生的可能性最大,脆弱性利用威胁{R_3}次之.6结论和进一步工作本文提出了一种基于攻击图的安全威胁识别和分析方法,以分析和处置业务系统面临的各种脆弱性利用安全威胁;所述方法基于CPN攻击模型仿真分析结果构建基于CPN的网络攻击图,以分析业务系统整体安全性;与现有网络攻击图生成算法相比,本文所述方法可基于标准CPN分析工具实现,便于利用成熟CPN分析工具,且所构建的网络攻击图为一个CPN网结构,易于进一步分析.本文给出了一个可实现网络攻击图分解的NAGD算法,以获取各脆弱性利用威胁所对应的子攻击图;与现有子攻击图生成算法相比,本文所述算法在不增加算法复杂度情况下,可一次性得到各脆弱性利用威胁所对应的子攻击图.最后,本文给出了一种实现脆弱性利用威胁度评估的VETE算法,将子攻击图转换为不确定性D-S证据推理规则,利用D-S证据推理引擎计算脆弱性利用威胁度;与传统脆弱性利用分析方法相比,本方法选择D-S证据来描述系统中的不确定性,因而更具有合理性.本文最后以典型Web业务系统为例,验证了本文所述安全威胁和识别方法有效性.进一步研究工作包括:(1)考虑在基于CPN的网络攻击图和子攻击图上实现更多的攻击图分析方法,包括基于子攻击图的攻击预测等;(2)寻找一种更合理的D-S初始证据的可信度赋值方法.
