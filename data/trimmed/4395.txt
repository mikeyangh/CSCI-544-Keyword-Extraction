Page1多目标优化的进化环境模型及实现郑金华申瑞珉李密青邹娟袁琦钊(湘潭大学信息工程学院湖南湘潭411105)(智能计算与信息处理教育部重点实验室湖南湘潭411105)摘要传统多目标进化算法主要是模仿生物自身的进化过程,没有考虑环境对进化的作用,缺乏能动的、指导性的搜索.提出一种基于进化环境的多目标进化模型,利用进化环境记录群体进化过程中产生的知识信息,并反过来指导群体搜索,实现环境与群体的共同进化.此外,给出基于进化环境的多目标进化模型的一种算法实现,利用环境域和单元域表示进化环境,设置了一组环境规则,从而实现进化环境对进化群体的约束、促进和导向作用.通过与5个代表性经典多目标进化算法,对12个具有不同特征和不同求解难度的测试函数,在GenerationalDistance、Hypervolume和InvertedGenerationalDistance三项性能指标上进行比较实验,验证了文中所提出的算法具有良好的收敛性和综合性能.关键词进化模型;进化环境;多目标优化;多目标进化算法1引言进化算法(EvolutionaryAlgorithms,EA)已经被证明是一种解决多目标优化问题(Multi-objectiveOptimizationProblem,MOP)的有效方法[1-3].近二十年来,越来越多的研究学者将进化算法应用到MOP中[4].自1984年Schaffer[5]首次在机器学习中实现了向量评估遗传算法VEGA以来,国内外许多学者开展了进化多目标优化(EvolutionaryMulti-objectiveOptimization,EMO)方法的研究,提出了不少有效的多目标进化算法(Multi-objectiveEvolutionaryAlgorithm,MOEA)[6-7].比较具有代表性的有:Fonseca和Fleming[8]提出的MOGA;Horn等人[9]提出的小生境遗传算法NPGA;Srinivas和Deb[10]提出的非支配排序遗传算法NSGA,以及在NSGA的基础上Deb等人[11]提出的NSGA-II;Zitzler和Thiele[12]提出的强Pareto进化算法SPEA、SPEA2[13];Corne等人[14]提出的基于封套选择算法PESA;Coello等人[15]提出的微遗传算法Micro-GA;Deb等人[16]提出的EPSMOEA(即ε-MOEA)以及Kukkonen等人[17]提出的第三代差分进化算法GDE3;Guo等人[6,18]提出了在多目标优化算法中预测Pareto支配性的学习方法,为克服昂贵多目标优化的计算成本灾难问题提供了有效途径;Li等人[19-20]提出了构造解个体最小生成树来保持解集的均匀性和广泛性.以上算法主要使用Pareto支配指导搜索,对一些测试问题能够取得较好的结果[21].然而,随着EMO的发展[6],性能评价技术[22-24]日趋完善,测试函数不断复杂[25],经典MOEAs很难得到令人满意的结果[26].特别是,2005年以来,各种复杂的变量关联(linkage)测试函数的提出[25,27],使MOEA的发展面临着更加严峻的挑战.这种情况的出现,我们认为主要有3个方面的原因.(1)EA中随机的个体重组操作存在盲目性或半盲目性[28],交叉、变异等重组算子不具有学习和识别基因之间连锁关系的能力,因而在实际的重组操作中可能造成优良基因的破坏;(2)MOEA中非支配选择[29]、适应度赋值、种群维护等操作只是对当前优良个体进行保留,缺乏能动的、指导性的搜索,很少考虑从已有的种群信息、进化轨迹、优良个体分布等知识中进行学习,而这些知识对进化过程具有十分重要的引导作用[30],融入学习机制的进化将是MOEA发展的必然趋势[31];(3)已有的MOEAs主要是模仿生物自身的进化规律而设计的算法,忽略了环境在进化过程中的重要作用,实际上进化个体只有在特定的环境下才能生存和进化,就如同大自然中的生命体与环境的相互关系一样.为此,本文提出基于进化环境的多目标进化模型,利用进化环境引导群体进化.一方面,根据环境中社会规则和环境知识约束、评价和指导群体,使其向更优的搜索区域逼近;另一方面通过群体自身的进化调整社会规则、更新环境知识,实现群体和环境相互学习、共同进化.本文第2节介绍多目标进化算法方面的一些基本概念;第3节提出基于进化环境的多目标进化模型,并对其进化原理进行分析,然后给出基于进化环境的多目标进化算法(Multi-objectiveEvolutionaryAlgorithmbasedonEvolutionaryEnvironment,EEMOEA)及其实现;第4节进行对比实验;第5节讨论EEMOEA的特点以及需要改进的地方;第6节为结束语.2基本概念配关系、Pareto最优解等有关定义.函数为为方便后续讨论,先给出多目标优化、Pareto支定义1.多目标优化.一般地,给定优化目标Min犳(犡)=(f1(犡),f2(犡),…,fr(犡)),其中,r为优化目标数,且这r个优化目标是相互冲突的.设决策向量犡=(x1,x2,…,xn),满足下列约束:寻求犡=(x1,x2,…,xn),使犳(犡)在满足约束(1)和(2)的同时达到最小.定义2.Pareto支配关系.设p和q为r维目标进化群体中的任意两个不同的个体,称p支配q,则必须满足下列两个条件:(1)fk(p)fk(q)(k=1,2,…,r);(2)l∈{1,2,…,r},使fl(p)<fl(q).表示为pq,其中“”是支配关系.定义3.Pareto最优解.称犡∈Ω是给定或者∧i∈I(fi(犡)=fi(犡))或者至少存在一个j∈I,I={1,2,…,r},使Min犳(犡)的最优解,若犡∈Ω,满足下列条件:fj(犡)>fj(犡)Page3其中Ω是满足式(1)和式(2)的可行解集,即Ω={犡∈Rn|gi(犡)0,hi(犡)=0;(i=1,2,…,k;j=1,2,…,l)}定义4.Pareto最优面(边界)(ParetoOptimalFront,POF).给定Min犳(犡)和它的最优解集{犡},则Min犳(犡)的Pareto最优面为PF={犳(犡)=(f1(犡),f2(犡),…,fr(犡))|犡∈{犡}}定义5.非支配集.设有解集P,P的非支配集NDS(Non-DominatedSet)可表示为NDS={q|q∈P且-p∈P,使pq}.非支配集也称非劣解集.3进化环境模型在生态学中,环境是指生物生活周围的气候、生态系统等对该生物群体产生影响的外界事物.在本文所讲的进化环境模型中,环境是对进化群体起约束、促进和引导等作用的一组实体集合.任何进化个体(或群体)必须在特定的进化环境下才能生存和进化,进化环境对进化群体起“约束、促进和导向”作用,进化环境对进化群体的这三个作用是完全不同的,约束主要用于保证进化个体的合法性,促进主要用于提高进化个体的进化效率,导向主要用于改善进化群体的分布性.同样地,进化群体也影响进化环境,群体的不断进化将导致进化环境知识的不断更新.基于进化环境的多目标进化模型的基本框架如图1所示.进化环境的组成要素包括社会规则、环境知识和环境中的群体(环境集).社会规则包括环境评价机制、环境约束和指导机制;其中,指导机制包括促进个体加速进化的机制,引导个体适应环境的机制.环境知识包括静态知识和动态知识.其中,静态知识通常为预先定义好的环境属性,如环境容量、环境域维数等;动态知识是随群体进化而不断变化环境属性,是进化过程中产生的知识,如个体的聚集信息、待导向域信息、优良个体分布均匀性和广泛性信息等.环境集是进化结果的集中体现,如当前进化状态,它随进化过程不断更新.进化环境中各实体之间的关系如图1所示.下面我们对这些实体进行简要的说明.环境评价机制分为环境对个体的评价和环境对群体的评价两类.其中,环境对个体的评价是指,根据环境知识评价个体在环境中的生存状况,如个体在环境中的位置等;环境对群体的评价是指,根据环境知识评价整个群体在环境中的分布情况,为指导群体进化做准备.环境约束主要包括:(1)期望解集的满意度约束;(2)期望解集的分布性约束.环境中分布性约束可分为两类,第1类为分布均匀性约束,指环境中的群体满足均匀分布的条件;第2类为分布广泛性约束,指环境中的群体满足广泛分布的条件.需要指出的是,“依赖于问题的约束”不属于环境约束的内容,它隶属于优化目标.环境约束主要体现在对群体的引导.也就是说,通过环境约束,实现个体在环境中的良性进化.进化环境对群体的指导机制,是EEMOEA的核心内容.它决定着群体的进化方向,对群体的进化起着决定性的推动作用.群体指导机制具体包括:(1)遵照环境满意度约束,促进进化个体加速进化的机制.具体实现时,将根据不同的环境知识选择相应的促进操作,对不同的环境状态应选择不同的重组操作.如群体接近全局最优时,可采用局部优化策略;当环境中的群体陷入局部最优时,可采用个体变化程度大的重组操作(如SBS[32]或“F”较大的差分进化[33]等)跳出局部最优.(2)遵照环境分布性约束,引导个体适应环境的机制.具体而言,导向机制实现两方面的导向功能,一是实现环境维护的功能,当环境中的总个体数目或某一区域个体数目违背环境分布性约束时,需要对环境进行维护.这与经典MOEAs中的种群维护有些类似,但环境维护主要是利用环境知识实现的;二是实现区域导向功能,根据环境中进化个体的分布性知识,在密度小的区域产生新的个体.区域导向又可进一步分为均匀性导向和广泛性导向,均匀性导向为平衡群体在环境中的分布密度,广泛性导向为拓展群体在环境中的分布范围.值得说明的是,实现进化环境对群体的促进和Page4导向功能有隐式和显式两种形式.对隐式情况,促进和导向操作隐含在进化过程中,如构造非支配集的过程是隐促进操作,共享适应度机制则实现了隐导向操作.对显式情况,是根据环境知识而实施的操作,如针对解集满意度约束而实施的局部优化操作,针对群体分布性约束而设计的个体迁移操作.环境知识也是进化环境的重要组成部分,它记录当前进化环境中的信息,环境中的社会规则必须依照环境知识才能作用于进化群体.另外,群体的进化也带动环境知识的更新.事实上,进化环境的进化过程就是环境中群体(环境集)和知识相互影响、相互促进、共同进化的过程.下面讨论EEMOEA的具体实现.4进化环境模型的实现4.1环境约束进化环境中的每个进化个体都有一个生存空间,在这里我们用一种类似于网格的机制———环境域,对环境中的个体进行存储.环境域由很多相同的称之为单元域的网格组成,环境域、单元域的维数与优化目标的维数相同.在进化环境中,环境域与进化群体相互作用、共同进化.一个2目标问题环境域与群体进化过程如图2所示.在进化初期,环境域中的群体拥有8个个体,占用6个单元域;而在进化后期,环境域中的个体数目减少到5,占用的单元域变为5个.同时,环境域也随群体进化而不断变化(进化).环境域的容量、单元域的大小可通过进化个体的分布情况确定.一般地,可用式(4)和式(5)分别计算环境域每维目标的底边界和顶边界:lbk=min(Pk)-(max(Pk)-min(Pk))/(2×div)(4)ubk=max(Pk)+(max(Pk)-min(Pk))/(2×div)(5)其中,max(Pk)和min(Pk)分别表示群体P在第k维目标上最大值和最小值,div为每维目标上的单元域数目.div的设置与MOP的目标维数有着紧密的联系.对于有着相同维数的MOP,div的设置相同;对于不同维数的MOP,问题的维数越高,div值越小,如对两目标问题,div可设为40;三目标问题,div可设为10.如图3所示,可用式(6)计算第k维目标上的单元域的大小:每个进化个体在环境中都占用一个确定的单元域,记Areap为个体p所占用的单元域.可根据环境域的底边界、单元域的大小确定每个进化个体的单元域位置(域坐标),Areap在第k维目标上的域坐标可用式(7)计算:其中pk为个体p在第k维目标上的值.需要说明的是,并不是任意的个体都能进入环境域,环境中的个体必须满足一定的满意度约束.在这里,规定环境中的个体必须满足以下两个约束条件:(1)每个单元域中不存在有支配关系的个体;(2)单元域必须不存在域强支配关系(这里的单元域是指含有个体的单元域.为描述方便,以后若没有特别指明,文中出现的单元域均表示含有个体的单元域).强支配关系是一种比支配关系更严格的关系.定义6.域强支配关系.设Ω为环境域,A∈Ω、B∈Ω为两个不同的单元域,若(A)k<(B)k(k=1,2,…,r),即对所有域坐标A均比B好,则称A域强支配B,记为AareaB,“area”为域强支配关系.其中,r为单元域的维数.类似地,可定义域支配关系如下.定义7.域支配关系.设Ω为环境域,A∈Ω、B∈Ω为两个不同的单元域,称A域支配B,则必须同时满足下列两个条件:(1)对所有的域坐标,A不比B差,即(A)k(2)至少存在一维域坐标,使A比B好.即l∈(B)k(k=1,2,…,r);Page5{1,2,…,r},使(A)l<(B)l.表示为AareaB,“area”是域支配关系,r为单元域的维数.图4为一环境约束实例,其中白色个体为满足环境约束的个体,黑色个体为违背环境约束,被环境淘汰的个体,其中个体a、c违背约束条件1,个体b、d违背约束条件2.容易发现,虽然条件1和2都是对群体进行满意性约束,但侧重点有所不同.条件1侧重环境中局部小生境的满意性,条件2则侧重整个环境的满意性.需要指出的是,满足环境约束的个体之间也可能存在支配关系,如图4中p支配q.事实上,由约束条件2可知,环境中的单元域允许存在域支配关系,正是这种比域强支配关系弱的关系的存在,使环境具有更大的搜索空间.图4中个体q虽然与环境中个体p存在支配关系,但其分布距离主群体较远,能更多的引导群体向新的有效区域(图4中环境右下区域)搜索,扩大群体的分布范围.而维持群体的分布广泛性在进化过程中是至关重要的[34],特别是对于变量关联测试问题,体现得尤为明显[27].在经典MOEAs中,也存在不少算法使用类似网格的机制来提高收敛性,保持分布性,如PESA[14]、PAES[35]、AGA[36]、PESA-II[37]、EPSMOEA[16]、GrEA[38]、TDEA[39]等[40-41].但它们与本文的方法主要有以下4个方面的区别:(1)它们格子的范围、大小大多是固定的,并不能随着群体的进化而自适应的改变(如PAES、PESA等);(2)有些算法存储个体的格子不能存在支配关系(如EPSMOEA),这可能淘汰部分边缘非支配个体或边界个体,在一定程度上破坏了解集分布的均匀性和广泛性[22,42];(3)一些算法不允许网格中存在支配个体,这虽然提高了算法的收敛性(如AGA、PESA、PESA-II、GrEA、TDEA等),但也影响了群体的搜索空间,使群体难以逼近整个Pareto最优面[43];(4)最主要的是,这些经典的MOEAs都只是依靠网格的自然属性对群体进行存储,并没有挖掘、利用网格内在的信息、知识来指导群体的进化,这与本文提出的方法有着本质的区别.环境知识记录着进化环境的当前信息,是进化环境的重要组成部分.在本文方法中,环境知识分为环境域知识,单元域知识两类.环境域知识又分为静态环境域知识和动态环境域知识.其中,静态环境域知识通常是事先设定好的,主要包括环境容量、单元域数目等环境属性;动态环境域知识则是随进化而变化的环境属性,主要包括每维目标的底边界和顶边界、每维目标的单元域大小、个体占用的单元域数目、个体总数目、每维目标上最小个体(或极值个体)、需要导向的区域等.单元域知识主要包括单元域中个体数目、代表个体、与其非支配的单元域等,是动态知识.代表个体是单元域中最优的个体,从种群分布广度和收敛性两方面考虑,如果单元域中存在极值个体则其选定为此单元域的代表个体;否则,将与单元域原点欧式距离最近的个体选定为代表个体.单元域原点为单元域每维目标上的最小值.另外,非支配单元域为与单元域不存在域支配关系的单元域,如图4中个体r和p所在的单元域.环境的进化过程是环境中群体和知识相互影响、相互促进、共同进化的过程.待进入环境中的个体通过环境知识进行评价、约束;进入环境中的个体又进一步更新环境知识.算法1为个体进入环境的过程,首先根据环境知识判断个体是否超出环境域边界,若个体超出环境边界再判断是否超出底边界,若超出则进入临时集temp_Set;若个体没有超出环境域边界,则判断个体是否满足环境约束,若满足则个体进入环境并更新环境知识.其中Judge_boundary()函数判断个体是否超出环境域,Satisfy_constr()函数判断个体是否满足环境约束.算法2和算法3为两个函数的伪代码.算法1.个体进入环境.Enter_Environment(ind)1.IFJudge_boundary(ind)≠02.THENIFJudge_boundary(ind)=13.THENEnter(ind,temp_Set);4.ELSEIFSatisfy_constr(ind)=15.THENRenew_environment(ind);/更新环境/6.RETURN算法2.环境超界判断Judge_boundary(ind).1.flag←0;2.FORALLk∈(f1,f2,…,fr)DOPage63.IFindk[lbk,ubk]THEN4.{flag←-1;5.IFindk<lbkTHEN{flag←1;GOTO6;}}6.RETURNflag算法3.环境约束判断Satisfy_constr(ind).1.flag←1;/Ai=1表明单元域Ai存在个体,否则Ai=0/2.FORALLAi=1DO3.IFAreaindareaAiTHENGOTO9;4.IFAiareaAreaind/Areaind=Ai表明ind属于单元域Ai/5.IFAreaind=Ai/判断是否满足约束条件1/6.THENIFJudge_constr1(ind,Ai)=17.THENGOTO9;8.ELSE{flag←-1;GOTO9;}}9.RETURNflag算法2判断个体是否超界,若返回值为1,表明个体在某一维目标上超出环境域底边界.这里,我们用一个临时集来存储超出环境底边界的个体;若算法2返回值为-1,表明个体没有超出环境域底边界但在某一维目标上超出环境域顶边界,淘汰该个体;若返回值为0,表明个体没有超出环境域边界.算法3图5个体进入环境实例判断个体是否满足环境约束,若返回值为1,表明个体满足环境约束,具体分3种情况:(1)若个体所在的单元域域强支配环境中某一单元域,则直接返回1;(2)若个体所在的单元域在环境中已有个体,并且满足约束条件1,则直接返回1;(3)若环境中任意单元域不域强支配个体所在的单元域,则返回1.图5为个体进入环境示例,其中图5(a)为环境域已有个体,图5(b)为待进入环境域个体.图5(c)为环境维护过程:个体g超出环境域目标f1的底边界,进入临时集;个体h满足上文所述情况3,进入环境;个体i满足情况1,进入环境,同时根据约束条件2淘汰个体d;个体j和k满足情况2,进入环境,同时根据约束条件1淘汰个体c;个体l所在的单元域不满足约束条件2,被淘汰;个体m超出环境域目标f1的顶边界,被淘汰.图5(d)为环境域剩余的个体.与此同时,随着环境中群体的更新,环境知识也发生改变,如图5(a)中单元域A3,0(其中3、0分别为单元域A在目标f1、f2上的域坐标)个体数目为1,非支配域为A1,1、A1,2、A0,2和A0,4,代表个体为f;图5(d)中单元域A3,0中个体数目为2,非支配单元域为A1,1、A0,1、A0,2、A0,3和A0,4,代表个体为f.下面讨论,利用环境知识指导环境中群体的进化.Page74.2环境促进与导向环境促进和环境导向是基于环境进化的两个重要功能.先介绍进化环境的促进机制.在经典MOEAs中,通常是随机地选取两个或多个个体进行重组进化操作.而对参与重组操作的个体,如果个体之间的相似度很高,则很难使后代个体比父代个体更好.只有相似度迥异的个体参与重组操作才可能产生远优于父代的新个体.然而,简单的随机重组操作并没有区分这两者的不同.在本文讨论的进化环境中,通过对单元域设置相对适应度值,以选择有利于提高后代个体质量的个体进行重组操作.设Ω为环境域,Ax1,x2,…,xr∈Ω、By1,y2,…,yr∈Ω为两个不同的单元域,B相对于A的适应度为其中xk、yk分别为单元域A、B在第k维目标上的域坐标,函数Φ的定义如下:Φ(xk,yk)=1/(2+yk-xk),xkykB相对于A的适应度f(B|A)比较大时,则b∈B与a∈A重组操作后,可能产生比个体a更优秀的后代个体,或者说b对a具有较大的促进进化作用.图5(d)中,A0,4、A0,3、A0,1、A1,1和、A3,0相对A0,2的适应度分别为3/4、5/6、3/2、4/3和11/5.因此,a∈A0,4与b∈A0,2进行重组操作很难产生远好于b的后代个体,也就是说a对b的促进作用不明显;k∈A3,0或f∈A3,0与b∈A0,2进行重组操作,可能继承父代个体不同方面(目标)的优点,从而产生远优于b的后代个体,即k或f对b有较大的促进作用.为了促进进化,在执行重组操作时,对给定a∈A和单元域集合{B|aB},按相对适应度f(B|A)赌轮选择一个单元域C∈{B|aB},然后对a∈A与c∈C执行重组操作.环境导向包括区域导向和环境维护两项功能.区域导向的目的是为了满足环境分布性约束.根据进化环境知识,在待导向的区域产生新的进化个体.下面为讨论待导向区域.定义8.待导向区域.设A狓∈Ω为一给定单元域(其中,Ω为环境域,狓=(x1,x2,…,xr)),称A狓为待导向区域,则必须同时满足下列3个条件:(1)|A狓|=0,即该单元域中没有个体;(2)-B狔∈Ω∧|B狔|1,使B狔areaA狓,其中狔=(y1,y2,…,yr).即A狓不被环境域Ω中任意一个非空单元域强支配;(3)xk,使B狕∈Ω∧|B狕|=0,其中,k∈(1,2,…,r),狕=(y1,…,xk,…,yr).即存在某一维域坐标,该域坐标上的其他单元域中都不存在个体.称xk为待导向域坐标.根据定义8,图6中A2,0、A2,1和A4,0为待导向区域.待导向区域有两类,一类为均匀性待导向区域,另一类为广泛性待导向区域.均匀性待导向区域是指待导向域坐标两旁都存在个体的单元域,如图6中A2,0、A2,1为均匀性待导向区域;对均匀性导向操作,应选取待导向域坐标两旁的对称单元域中的个体进行重组操作,对图6中A2,0和A2,1应选取其对称单元域A1,1与A3,0中的个体进行均匀性导向操作.广泛性待导向区域是只有待导向域坐标上端(或者下端)存在个体的单元域,如图6中A4,0为广泛性待导向区域;对广泛性导向操作,参与重组操作的个体中,其中一个个体应当是离待导向域坐标最近单元域内的个体,对图6中A4,0应选取单元域A3,0中的个体参与重组操作以实现广泛性导向.下面讨论均匀性导向操作的一般形式.设个体U=(u1,u2,…,un)和V=(v1,v2,…,vn)是与待导向域坐标两旁的两个单元域中的个体,重组操作的后代个体为W=(w1,w2,…,wn),wk=a(uk-vk)+vk(n为决策向量维数,a为0到1之间的随机数).容易发现,W是位于U和V之间的个体,通过调节a的值可以让W进入U和V之间的待导向单元域,如图7所示.Page8为了便于用赌轮选择有效地选取离待导向单元域A狓最近的单元域,将其周围的单元域B狔相对于A狓的适应度设置为其中狓=(x1,x2,…,xr),狕=(y1,…,xk,…,yr),xk为待导向域坐标.图6中,待导向单元域A2,1的待导向域坐标f1=2,按式(10),离A2,1最近的两个单元域的适应度为g(A1,1|A2,1)=1和g(A3,0|A2,1)=1;而离A2,1较远的单元域的适应度均小于1,如g(A0,1|A2,1)=1/2.因此,离A2,1最近的两个单元域A1,1和A3,0具有更高的概率参与对A2,1的均匀性导向重组操作.对广泛性导向操作,设U=(u1,u2,…,un)是离待导向区域最近的单元域中的个体,V=(v1,v2,…,vn)是在环境域中随机选取的单元域中的个体,令重组操作算子为zk=a(uk-vk)+uk,则得到后代个体Z=(z1,z2,…,zn),(n为决策向量维数,a为0到1之间的随机数).从图7中可以看出,广泛性导向操作产生的后代个体是位于U旁但远离V的个体.图8环境维护实例4.3基于环境的群体进化过程基于环境的进化操作是利用环境知识、评价机制、约束条件产生新个体的过程.算法4给出了进化环境中群体进化的过程,由4部分组成.第1部分需要说明的是,虽然解集在决策空间中的分布与目标空间中的分布不一定是完全对应的,但绝大多数MOP满足连通性[44],即在决策空间中呈邻域分布的解个体,映射到目标空间后也呈邻域分布,反过来也是这样.解集的这种特性已被广泛运用到MOEA研究中[45-46],本文讨论的区域导向操作也利用了MOP解集的这种特性.环境维护是指当环境中总个体数目超出环境容量时,剔除环境中部分个体的过程.这与经典MOEA中的种群维护有些类似.首先选择个体最多的单元域,若环境中同时存在多个这样的单元域,则选择环境中支配该单元域的单元域数目最大的单元域;若支配该单元域的单元域数目也相等,则选择非支配域少的单元域;若非支配域数目同样相等,则随机地选择一个单元域.然后对选定的单元域内的非代表个体进行剔除,若存在多个非代表个体,则随机任选其一剔除.图8为一环境维护实例,环境中总个体数目为10,设环境容量为5,故需要剔除5个个体.第1步,选择个体最多的单元域A1,2进行维护,设剔除的非代表个体为f;第2步,环境中个体最多的单元域有3个(A1,2、A2,0和A0,4)且个体数目均为2,环境中支配A1,2、A2,0和A0,4的单元域数目分别为1、0和0,因而继续剔除A1,2中的非代表个体设为d;第3步,环境中个体最多的单元域为A2,0和A0,4,因支配A2,0和A0,4的单元域数目相等,但A2,0和A0,4的非支配域数目分别为4和5,故则剔除A2,0中的个体设为h;继续以上维护操作,可依次剔除个体b和c,最后环境中剩下的个体为a、e、g、i和j.(第1~2行),对环境集envset中所有个体ind执行促进操作,并将结果保存到新个体集newset中;第2部分(第3~4行),对新个体集newset中的所有个体newind,执行进入环境的操作,判断是否环境超Page9界、是否满足环境约束;第3部分(第5~12行),首先调用Eval_Environment()对环境进行评价,将环境中需要进行分布性导向的区域保存到Awaitlead中,分别针对均匀性导向和广泛性导向进行相应的处理,并将导向操作产生的新个体加入到环境中;第4部分(第13~17行),对环境进行维护,按4.2节所述规则剔除超出环境容量的多余个体.算法4.基于环境的群体进化过程.Evolution_in_Environment()参数设置:envset、newset、Awaitlead、envcapacity、areasum分别为环境集、新个体集、待导向区域、环境容量、含有个体的单元域数目1.Clear(newset);/清空newset集/2.FORALLind∈envsetDOAccelerate(ind,newset);3.FORALLnewind∈newsetDO4.Enter_Environment(newind);/进入环境/5.Eval_Environment();6.FORALLAwaitleadDO7.{IFlead_type(Awaitlead)=1/均匀性导向/8.THENnewind←Uniformity_lead(Awaitlead)9.ELSE/广泛性导向/10.IFlead_type(Awaitlead)=0THEN11.newind←Spread_lead(Awaitlead);12.Enter_Environment(newind);}13.IF|envset|>envcapacityTHEN/环境维护/14.{Sort(A0,A1,A2,…,Aareasum);15.DODelete_ind(A0);16.Adjust_order(A0,A1,A2,…,Aareasum);17.WHILE|envset|>envcapacity;}18.RETURN算法5给出了EEMOEA的具体过程,由4部分组成.第1部分(第1~2行),根据初始群体构造进化环境;第2部分(第3~4行),对于新构造的进化环境中的所有个体,若满足环境约束则进入进化环境;第3部分(第5~8行),为基于进化环境的群体进化过程;第4部分(第9行),输出最后进化结果.算法5.EEMOEA总进化过程.Evolution_Implement(initialset,terminationgen)参数设置:initialset、gen、terminationgen、finalset分别为初始集、进化代数、终止条件、输出结果集1.tempset←initialset;2.Construct_environment(tempset);/构造环境/3.FORALLind∈tempsetDO4.Enter_environment(ind);/进入环境/5.gen=0;6.WHILEgen<terminationgenDO7.{Evolution_in_Environment();/在环境中进化/8.gen=gen+1;}9.finalset=Output_nondominated_set(envset);10.RETURN5实验结果及分析为检验EEMOEA的性能,我们将它与5个经典多目标优化算法(NSGA-II[11],SPEA2[13],EPSMOEA[16],GDE3[17],RM-MEDA[26])进行对比实验.其中,NSGA-II、SPEA2和EPSMOEA是最具有代表性的3个进化多目标优化算法;GDE3为差分多目标进化算法,因其良好的收敛性被广泛运用于MOEA比较中[25-26];RM-MEDA为基于规则模型学习的多目标分布估计算法,该算法对在决策空间形状复杂的MOP有良好的效果[26,47].共对12个测试函数进行了对比实验,其中8个为2目标MOP,4个为3目标MOP.实验环境为P-IV2.8GHzCPU,1GBRAM,WindowsXP/PC.5.1实验设置一组好的测试函数集应该包括各种问题特征[48],这里选取了ZDT[3,49]、DTLZ[3,50]、WFG[27]3个系列中的12个各具特征的代表函数,其中ZDT系列3个,DTLZ系列4个,WFG系列5个.ZDT2(30)为一个相对简单的凹形测试函数;ZDT4(10)、DTLZ1(7)和DTLZ3(12)均为多模测试函数,存在大量的局部Pareto最优面;ZDT6(10)为多模非均匀测试函数;DTLZ6(12)的POF退化为一条曲线;DTLZ7(22)的POF为非连续分布.这里,测试函数名称后面括号中的数字表示决策变量的维数.WFG为变量关联测试函数,WFG1具有平偏好(flatbias)特征,WFG2具有多模非连续特征,WFG5为欺骗问题,WFG8为参数独立测试函数,WFG9为参数独立多模欺骗问题.5个WFG测试函数的方向向量均为2、距离向量均为4.对比实验中的6个算法均采用实数编码,采用模拟二进制交叉算子[1](ηc=15,概率设为0.9),和多项式变异算子[1](ηm=20,概率设为1/nreal,nreal为决策变量的维数).GDE3中参数CR=1.0,F=1.0,这是GDE3对绝大多数问题取得最佳结果Page10的设置[25].EEMOEA差分促进中CR=1.0,F=0.2.ZDT、WFG系列测试函数种群规模设为100,进化250代;DTLZ系列测试函数种群规模设为200,进化500代.SPEA2归档集大小设置为与种群规模相同,EEMOEA的环境容量设置为种群规模的两倍.对2目标MOPs,EEMOEA每维目标上单元域数目设置为40,对3目标MOP,每维目标上单元域数目设置为10.RM-MEDA参数设置与其原始文献设置相同[26],EPSMOEA中ε大小在不同测试函数上设置如表1所示.表1EPSMOEA参数ε设置(测试函数名/参数ε值)ZDT2/0.0075ZDT4/0.0075ZDT6/0.0055DTLZ1/0.025DTLZ3/0.042DTLZ6/0.015DTLZ7/0.033WFG1/0.005WFG2/0.0035WFG5/0.015WFG8/0.015WFG9/0.015为比较6个算法的性能,采用GD(GenerationalDistance)[51]、HV(Hypervolume)[12]和IGD(InvertedGenerationalDistance)[43]三种目前流行的评价方法进行性能评价.GD为基于Pareto的方法,用于评价算法的收敛性;HV和IGD为基于非Pareto的方法[30],可同时评价收敛性、分布均匀性和分布广泛性[52-53].GD的计算如式(11)所示:式(11)中,n为解集大小,di为第i个个体到POF的最小欧氏距离.GD越小表明解集越接近POF.IGD是GD的反向映射,即为POF到解集的最小欧氏距离,IGD越小表明算法的性能越好.HV将解集和参考点围成的超体积作为算法的量化评价指标,HV越大表明算法的性能越好.一般地,ZDT和WFG两个系列测试函数的参考点分别设置为(2,2)和(3,5),DTLZ1和DTLZ7的参考点分别设置为(1,1,1)和(2,2,7),DTLZ3和DTLZ6的参考图95个MOEAs在ZDT2上100次独立运行得到的GD、HV和IGD盒形图点均设置为(2,2,2).将对比实验分为两类:(1)比较EEMOEA与NSGA-II、SPEA2、GDE3及EPSMOEA等4个不具有学习能力的经典MOEAs的性能;(2)比较EEMOEA与RM-MEDA两个均具有学习能力的MOEAs的性能.第1类实验,用盒形图(Boxplot)[54]表示算法在不同测试问题上的统计结果,能很好地反映数据的统计分析情况,特别适用于不同样本的比较.盒形图中有5项统计指标,即最小值(盒子虚线底端)、第一四分位数、中位数(盒子中间的水平线)、第三四分位数和最大值(盒子虚线顶端).盒形图中,盒子的切口为样本的置信区间,盒子的上下两条线分别表示样本的上下四分位数,盒子上下的虚线表示样本其余部分(异常值除外),“+”表示异常值.第2类实验,比较算法的平均值与方差.5.2与经典MOEAs比较结果本节测试EEMOEA、NSGA-II、SPEA2、GDE3和EPSMOEA等5个MOEAs分别在ZDT系列、DTLZ系列和WFG系列上的GD、HV和IGD指标.5.2.1ZDT系列测试结果图9~图11为5个算法分别在ZDT2、ZDT4和ZDT6上100次独立运行得到的GD、HV和IGD统计盒形图.对收敛性指标GD,测试ZDT2时,EEMOEA略逊于GDE3,但好于其他3个算法;对于多模测试函数ZDT4,GDE3完全无法收敛到Pareto最优面,EEMOEA优于其他4个算法;测试多模非均匀测试函数ZDT6时,SPEA2有部分结果无法收敛到Pareto最优面,EEMOEA与GDE3相似,好于其他3个算法.对于综合性能评价指标HV和IGD,与其他4个算法相比,EEMOEA始终具有最优结果,特别是在ZDT4和ZDT6上,EEMOEA所求解集分布更加集中.Page11图105个MOEAs在ZDT4上100次独立运行得到的GD、HV和IGD盒形图图115个MOEAs在ZDT6上100次独立运行得到的GD、HV和IGD盒形图5.2.2DTLZ系列测试结果图12~图15为5个算法分别在DTLZ1、DTLZ3、DTLZ6和DTLZ7上100次独立运行得到的GD、HV和IGD统计盒形图.对DTLZ1,5个算法的GD指标都比较好;EEMOEA的HV指标略逊于SPEA2,优于另外3个算法;在IGD指标上,EEMOEA拥有最优结果.值得注意的是,SPEA2虽然在GD指标上拥有较多的异常值,但在HV和IGD上分布结果十分集中,这可能是由于SPEA2的大多数个体已收敛到Pareto最优面,只有少数个图125个MOEAs在DTLZ1上100次独立运行得到的GD、HV和IGD盒形图图135个MOEAs在DTLZ3上100次独立运行得到的GD、HV和IGD盒形图体距离Pareto最优面较远.对DTLZ3,5个算法在GD上总体水平相对比较接近,EEMOEA在HV和IGD上要优于其他4种算法.对DTLZ6,EEMOEA和GDE3在GD、HV和IGD三个指标上均远优于另外3个算法;图16为5个算法所求解集分布情况,EEMOEA和GDE3求得了最优解集,而其他3个算法所求解集并未退化为一条曲线.对DTLZ7,在GD指标上,EEMOEA与EPSMOEA相当,好于其他3种算法;在HV和IGD指标上,EEMOEA逊于SPEA2,但好于另外3个算法.Page12图145个MOEAs在DTLZ6上100次独立运行得到的GD、HV和IGD盒形图图155个MOEAs在DTLZ7上100次独立运行得到的GD、HV和IGD盒形图图165个MOEAs在DTLZ6上的最终解集分布情况5.2.3WFG系列测试结果WFG是一组变量关联测试函数,因此,比ZDT和DTLZ具有更大的求解难度.5个算法对WFG1、WFG2、WFG5、WFG8和WFG9,在GD、HV和IGD三个指标上的测试结果(100次独立运行得到的结果)如图17~图21所示.WFG1是一个非常难收敛的平偏好MOP,NSGA-II即使运行25000代也无法收敛到POF[27],EEMOEA求解WFG1的GD、HV和IGD三个指标均比较好,远优于其他4个算法;5个算法求解WFG1的解集分布情况如Page13图22所示,WFG1的POF为左下的一条曲线,5个算法都没有收敛到POF,但EEMOEA的收敛性和分布性都优于其他4个算法.对WFG2,EEMOEA的GD指标比GDE3好一点,但比其他3个算法差;EEMOEA的HV和IGD两项指标均优于其他4个算法.对WFG5和WFG9,EEMOEA的GD、HV图175个MOEAs在WFG1上100次独立运行得到的GD、HV和IGD盒形图图185个MOEAs在WFG2上100次独立运行得到的GD、HV和IGD盒形图图195个MOEAs在WFG5上100次独立运行得到的GD、HV和IGD盒形图图205个MOEAs在WFG8上100次独立运行得到的GD、HV和IGD盒形图和IGD三项指标均优于其他4个算法.WFG8是一个很难收敛的偏好问题,EEMOEA的GD、HV和IGD三项指标优于其他4个算法但不够集中;5个算法求解WFG8的解集分布情况如图23所示,EEMOEA基本收敛到了POF并具有较好的分布性,而其他4个算法均未收敛到POF且分布性也不好.Page14图225个MOEAs在WFG1上的最终解集分布情况图215个MOEAs在WFG9上100次独立运行得到的GD、HV和IGD盒形图5.3与RM-MEDA的比较结果RM-MEDA为基于规则模型的多目标分布估计算法,该算法在决策空间中利用主成分分析对已有的进化知识(解集分布)进行学习,抽象为分段模型,然后利用概率方法在模型周围产生新的解.表2~表4为EEMOEA与RM-MEDA两个算法在12个测试函数上100次独立运行得到的统计结果.表中每个算法的统计结果对应两行,第1行为均值,第2行为标准差.容易发现,EEMOEA在绝大多数测试问题上拥有更优的结果.特别是对于容易陷入局部最优的多模测试函数,RM-MEDA基本无法收敛到Pareto最优面.表3中,RM-MEDA在ZDT4、DTLZ1、DTLZ3和DTLZ6等4个多模测试函数上的HV值为0,表明RE-MEDA得到的解集没有收敛到HV参考点的范围内.在测试WFG问题时,对WFG5,RM-MEDA的GD、HV和IGD三项指标均优于EEMOEA;对WFG1、WFG2和WFG9,EEMOEA的GD、HV和IGD三项指标均优于RM-MEDA;对WFG8,RM-算法ZDT2ZDT4ZDT6DTLZ1DTLZ3DTLZ6DTLZ7WFG1WFG2WFG5WFG8WFG9表2EEMOEA与RM-MEDA在GD上的比较结果5.89e-017.34e-022.14e-058.93e-050.00e+000.00e+006.11e+001.76e-035.78e+003.39e+002.86e-038.23e-04RM-MEDA3.64e-03EEMOEA7.61e-05RM-MEDA3.19e+00EEMOEA3.33e+00RM-MEDA4.28e-02EEMOEA3.58e-03算法ZDT2ZDT4ZDT6DTLZ1DTLZ3DTLZ6DTLZ7WFG1WFG2WFG5WFG8WFG9表3EEMOEA与RM-MEDA在HV上的比较结果算法ZDT2ZDT4ZDT6DTLZ1DTLZ3DTLZ6DTLZ7WFG1WFG2WFG5WFG8WFG9表4EEMOEA与RM-MEDA在IGD上的比较结果1.08e-021.50e-025.03e-031.46e-041.23e+012.13e+001.34e+013.87e-022.69e-011.48e-012.03e-011.88e-03Page15MEDA的GD优于EEMOEA,但EEMOEA的HV和IGD优于RM-MEDA,表明RM-MEDA只能收敛到部分最优解集.对比两个算法在HV上的结果,可以发现RM-MEDA在WFG1、WFG2和WFG8上都只能得到Pareto最优面的部分形状.5.4讨论通过以上对比实验和分析,本文提出的EE-MOEA对绝大多数测试问题具有最好的性能表现,特别是对求解难度大的多模问题和变量关联问题,EEMOEA表现出了更加明显的优势.主要原因是EEMOEA为一类基于环境进化并具有向环境学习功能的算法,进化环境对进化群体具有很好的促进和导向作用.而经典MOEAs主要是群体自身的进化,没有利用好进化过程中所产生的知识和信息.此外,EEMOEA虽然具有很好的收敛性、分布广泛性以及综合性能,但解集的分布均匀性并不十分理想.主要原因是因为对单元域内的个体,没有进行良好的分布均匀性维护操作.事实上,目前存在大量的分布性维护方法,如小生境[9]、聚集距离[11]、熵[55]等.然而,选择或设计一种适合于单元域分布均匀性维护的方法并不是一件容易的事,它既要保持单元域内部个体的均匀性,也要考虑相邻单元域中个体的分布情况,这也是我们将要研究的工作.6结束语进化群体在进化过程中会产生大量的知识.然而,已有MOEAs除群体隐含的进化信息外,没有设计合适的机制来有效地利用好进化过程中产生的知识.为此,本文提出了基于进化环境的多目标进化模型,利用进化环境引导群体进化.一方面,根据环境中社会规则和环境知识约束、评价和指导群体,使其向更优的搜索区域逼近;另一方面通过群体自身的进化调整社会规则、更新环境知识,实现群体和环境共同进化.此外,本文给出了基于进化环境的多目标进化模型的一个实现,即EEMOEA.利用环境域和单元域实现、表示进化环境,并设置了环境约束规则,环境评价规则,环境维护规则.进一步地,根据环境知识,设计了两类基于环境的进化操作:促进操作和分布性导向操作.通过与NSGA-II、SPEA2、GDE3、EPSMOEA和RM-MEDA等5个具有代表性的MOEAs,对12个具有不同特征和难度的测试函数,从GD、HV和IGD三个评价指标进行了比较实验,结果表明本文提出的EEMOEA具有最好的综合性能,特别是在处理复杂MOP时EEMOEA具有更加明显的优势.最后,需要指出的是,本文提出的EEMOEA只是多目标进化环境模型的一种实现.对于进化环境中的各种实体:环境知识、约束条件、评价机制、促进机制等,可以有其他的表示和实现方法.如可以利用其他重组算子或参考点引导[56]等方法实现环境促进功能;对环境导向功能,可以利用分布搜索[57]或其他局部搜索方法实现;对环境约束功能,可以利用ε支配关系、环境的更新程度等来实现满意度约束;对环境知识,可以进一步地引入个体历史信息等等.另外,在更多变量关联函数(如UF、CF[58])上和一些高维多目标测试函数上[52,59-60]测试EEMOEA的性能以及在一些实际工程问题上应用EEMOEA也是将来我们重要的研究工作之一.
