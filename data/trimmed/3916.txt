Page1基于方向梯度的H.264帧内预测模式选择算法宋云1),2)沈燕飞2)龙际珍1)朱珍民2)1)(长沙理工大学计算机与通信工程学院长沙410014)2)(中国科学院计算技术研究所北京100190)摘要率失真优化(RDO)技术的应用大幅提高了H.264的编码性能,但全搜索方式下,每一宏块所有模式都要进行R-D代价计算,复杂度非常大.文中利用参考像素与当前块之间的方向梯度检测预测方向上的纹理方向与边缘强度,预先筛除部分方向梯度较大的预测模式,形成一种基于方向梯度的快速帧内预测模式选择算法,并利用预测模式的空间相关性采用最有可能模式替换直流模式作为缺省候选模式,改进了基本算法.对10个标准序列进行测试,两个算法应用在亮度分量帧内预测模式选择中均比JM18.0全搜索方式减少了50%以上的编码时间,且编码性能损失很小,保持峰值信噪比与JM全搜索方式相同时,基本算法码率平均上升2.361%,改进算法码率平均上升1.477%.关键词视频编码;H.264;率失真优化;模式选择1引言H.264标准[1]中提供了多种编码工具,使得其编码性能较大幅度优于其它视频编码标准[2],率失真优化(RateDistortionOptimization,RDO)[3]是其中的核心技术之一.H.264率失真优化技术以全搜索的方式选择R-D(Rate-Distortion)代价最小的模式进行帧内预测和帧间运动估计,虽然较大幅度地提高了编码性能,但计算量非常大,RDO计算甚至达到了整个编码计算的90%[4].为了减小RDO的计算量,研究者们提出了很多帧内与帧间快速模式选择算法,本文侧重帧内模式选择算法.Pan等人最早在2003年提出两个快速模式选择算法,比全搜索模式减少约10%的编码时间,PSNR(PeakSignalNoiseRatio,峰值信噪比)损失0.1dB左右,被H.264标准采纳[5-6].其后,Pan等人又应用Sobel算子计算块内局部边缘信息,提出了一个模式过滤算法[7],进一步降低了模式选择的复杂度.与此同时,Huang等人[8]结合块内采样提出了一个基于上下文的自适应快速模式选择算法,相比全搜索模式可节省一半以上的编码时间,但PSNR损失接近0.3dB.Wang等人结合MPEG-7[9]边缘描述符提出一个基于主边缘强度检测的快速算法DES[10],纹理检测比文献[8]更为准确,编码性能也有较大提高,但检测到无方向纹理时执行全搜索,计算复杂度仍然较高.其后,Tsai等人观察到MPEG-7边缘描述符在某些情况下会出现错误并且计算中存在指数运算不利于硬件实现,改进了边缘描述符,提出了基于子块和像素的边缘方向检测的SDD和PDD[11].其后,Wang等人也基于文献[10]提出了一个层次模式过滤算法[12],在文献[10]的基础上较大幅度地提高了编码性能,并降低了模式选择的复杂度.Tsai等人[13]利用块内像素梯度检测预测方向的边缘强度提出了一个高效的模式过滤算法,较好地平衡了编码性能和计算复杂度.最新的研究中,毛峡等人[14]应用梯度方向算子通过检测4×4块的纹理特征和灰度起伏特征进行模式选择,Wang等人[15-16]则基于预测残差的SATD(SumofAbsoluteTransformDifferences)和SADM(SumofAbsoluteDifferencesMean)提出一个针对I4MB的模式筛选和一个基于边缘特征的两阶段模式选择算法,都取得了很好的效果.此外,Sung等人采用统计方法和聚类方法[17]进行模式选择,把机器学习的方法引入到快速模式选择算法中,取得了很好的效果.基于机器学习的方法[17],需要脱机学习,算法实现较为复杂,硬件实现难度较大,而且容易出现训练集过适,难以应用在实时系统中.传统基于纹理检测的快速算法,简单实用,但现有算法大都只在当前预测块内进行纹理方向与强度检测进行预测模式筛选[5-16],没有充分利用H.264帧内预测机制特性,编码性能受到限制.事实上,虽然块内纹理方向强度能一定程度地估计相应预测模式的编码性能,但它不能反映预测方向上邻域参考像素与当前块预测像素之间的相似程度,不能估计模式的预测残差能量,模式筛选的准确程度受到一定影响.本文提出一种快速帧内预测模式选择算法,采用预测模式参考像素与当前块像素的方向梯度作为简化的帧内预测模式编码性能估计模型,在RDO之前进行候选模式筛除.由于预测模式的方向梯度同时包含当前块与邻域之间的纹理方向和边缘强度和模式的预测残差能量信息,模式筛选的准确性得到提高.同时,为了进一步提高算法的编码性能,本文利用相邻块间预测模式的空间相关性,采用最有可能模式MPM(MostProbableMode)替换直流DC(DirectCurrent)模式作为缺省候选模式,改进了基本算法.实验结果表明本文基本算法和改进算法编码复杂度基本相同,相比全搜索方式有较大幅度的降低,同时都较好地保持了编码性能,特别是改进算法的编码性能较明显地优于比较的经典算法.2H.264帧内预测H.264以宏块为单位在YUV色彩空间进行编码,亮度信号Y和色度信号U、V分离,宏块又可按多种分块方式划分为不同大小的子块.H.264以子块为单位在空域进行帧内预测,采用从左到右、从上到下的预测顺序,边界块采用DC模式进行预测,其它块由其左、上邻域已编码块的重建值预测.编码器对预测残差进行DCT变换、量化、熵编码的同时模拟解码过程,计算并保存当前块的重建值,为后续块预测提供参考.为适应不同的应用需求,H.264定义了多个编码档次,基本档次的亮度分量帧内预测定义了I4MB和I16MB两种分块方式,高级档次的还包括I8MB.I4MB和I8MB方式下,宏块分别划分为16个4×4子块和4个8×8子块,每个子块可Page3以采用不同的模式进行预测,I16MB方式下整个16×16宏块采用同一种模式进行预测.图1示例了I4MB的预测参考像素和预测模式,当前块像素a~p由邻域A~M13个参考像素重建值预测,共有9种预测模式,包括DC模式和8种方向预测模式.I8MB方式参考当前块上、左邻域的25个像素,9种预测模式与I4MB相同.I16MB参考像素包括当前块邻域已编码宏块的33个像素,只有DC模式和3种方向模式共4种预测模式.色度分量预测相对简单,只采用8×8分块方式,预测模式与I16MB相同,UV色度分量采用相同的预测模式.H.264率失真优化策略穷举宏块各种分块策略下所有预测模式的R-D代价,选择宏块代价最小的分块方式和模式进行预测.R-D代价函数定义为其中,D表示重建失真,H.264参考软件JM①采用当前块的原始值与重建值的差值平方和SSD(SumofSquaredDifferences)度量;码率Rate为各种预测模式和量化参数下编码所需比特数;λ为拉格朗日算子.得到失真度量SSD需要进行整数变换、量化、熵编码、反整数变换、反量化,码率Rate也只有熵编码后才能得到,计算一次R-D代价,几乎要进行一次完整编码.预测过程中亮度分量与色度分量组合进行,高级档次下每一宏块需要计算R-D代价4×(4×4×9+2×2×9+4)=736次,其它不包括I8MB方式的档次也需要计算592次,计算量非常大.3基于方向梯度的模式选择算法3.1模式筛选模型为了降低编码复杂度,基于过滤的帧内模式选择算法构建低复杂度的编码性能估计模型,在RDO之前筛除部分编码性能可能不佳的模式,减少R-D代价计算,降低编码复杂度.本文采用方向梯度作为方向预测模式编码性能估计模型进行模式筛选.方向预测模式的方向梯度定义为预测方向上当前块像素与其最大权重参考像素之间的平均绝对差[18]:上式中,dir表示预测方向;R和C分别为参考像素和当前块像素的抽样子集;Xx//dir表示抽样参考像素X与当前块像素x的连线与预测方向一致;n为抽样像素的数量;PX、Ix分别为参考像素X的重建值和当前块像素x的原始值.考察式(2),G(dir)表征预测方向上参考像素与当前块的梯度,其值大小对应预测方向正交方向上的边缘强度.同时,G(dir)也是预测方向上当前块预测残差平均绝对值的近似,包含预测残差能量信息,因此,式(2)定义的方向梯度构成图像局部上下文纹理方向和当前块预测残差的一个重要特征表示,能较好地估计预测模式的编码性能.3.2方向梯度计算为了减少计算,只抽样少数有代表性的预测像素与参考像素对计算预测模式的方向梯度,本文抽样2的幂数个像素对作方向梯度,把除法运算转化为移位操作加速运算,I4MB抽样4个像素对,I8MB抽样8个像素对,I16MB抽样16个.图2(a)~(h)示例了I4MB8个方向预测模式的方向梯度计算方法,深色像素表示参与计算的考考像素与当前块像素.如图2(a)所示,I4MB垂直预测模式中,当前块像素由参考像素A~D预测,用式(3)计算方向梯度:其中,PA、PC分别代表参考像素A、C的重建值;Ie、Im、Ig、Io则为当前块像素e、m、g、o的原始值;G(A)、G(C)表示参考像素A、C与当前块的梯度;G(ver)即为垂直预测模式(mode0)的方向梯度.I4MB水平预测模式中,当前块每一行的像素预测值等于其左侧的参考像素I~L的重建值,如图2(b)所示,其方向梯度由式(4)计算:①JointVideoTeamReferenceSoftwareJM18.0[CP/OL].Page4图2I4MB预测模式方向梯度计算其中,PI、PK为参考像素I、K的重建值;Ib、Id、Ii、Il为当前块像素h、d、i、l的原始值;G(I)、G(K)表示参考像素I、K与当前块的梯度;G(hor)为水平预测模式(mode1)的方向梯度.I4MB左下对角线预测模式中当前块像素由B~H预测,参考像素E、D、F参与预测的像素较多且权重较大,预测像素g、m、f、k与它们不紧邻,一定程度地反应了这个方向上亮度值的变化趋向,选择它们计算方向梯度,如图2(c)和式(5)所示:G(E)=PE-Ig+PE-Im烄G(D)=PD-If烅G(F)=PF-IkG(diag_left)=(G(E)+G(D)+G(F))烆其中,PE、PD、PF为参考像素E、D、F的重建值;Ig、Im、If、Ik为像素g、m、f、k的原始值,G(E)、G(D)、G(F)为E、D、F与当前块的梯度,G(diag_left)为左下对角线预测模式(mode3)的方向梯度.I4MB右下对角线模式则选择参与预测的像素较多且权重较大M、I、A以及当相应的预测像素f、g、j、p计算方向梯度,如图2(d)和式(6)所示:G(M)=PM-If+PM-Ip烄G(I)=PI-Ij烅G(A)=PA-IgG(diag_right)=(G(M)+G(I)+G(A))烆其中PM、PI、PA和If、Ig、Ij、Ip分别为参考像素M、I、A的重建值和预测像素f、g、j、p的原始值,G(M)、G(I)、G(A)表征对应参考像素与当前块的梯度,G(diag_rightt)为右下对角线预测模式(mode4)的方向梯度.类似地,依图2(e)~(h)可以得到I4MB另外4个预测方向的方向梯度.I8MB方式与I4MB一样包括DC模式和8个方向模式,其方向梯度计算方法与I4MB类似,在每个预测方向上抽选当前块内的8个像素和与其对应的权重最大的参考像素进行方向梯度计算.I16MB方式中只有0、1、3这3种方向预测模式,每个预测方向上,在当前块内抽选16个有代表性的像素计算它们与对应参考像素的绝对差和得到模式的方向梯度.3.3基本模式选择算法预测模式的方向梯度包含参考像素与当前块之间的局部纹理方向、边缘强度和残差能量信息,可以作为简化模型在编码前估计模式的编码性能.但方向梯度并不能完全准确地表征模式的编码性能,方向梯度最小的模式为块最佳预测模式的可能性较大,但并不一定是实际编码过程中的最佳模式.同时,H.264中边界预测采用DC模式,而且这种模式在平坦区域性能优越.因此,不能直接采用方向梯度最小的模式作为预测模式,而应选择DC模式和方向梯度较小的几种模式作为候选模式进行率失真优化.表1列出了Foreman.qcif和Tempete.cif两个序列100帧全部使用I4MB方式,选择DC模式加方向梯度最小的1~7种方向预测模式进行亮度分量预测RDO的性能测试结果.结果显示采用的模式数量越多编码性能越好,编码复杂度越大,选择DC模式加3种方向梯度最小的方向模式能较好地达到编码时间与编码性能的平衡.其它序列和全部Page5使用I8MB方式的实验也得到了类似的结果.基于此观察,对于I4MB和I8MB方式我们都选择3种方向梯度最小的方向模式和DC模式作为候选模式进行RDO,以R-D代价最小的模式作为各4×4子块和8×8子块最佳预测模式.I16MB方式只有3种方向模式,以方向梯度最小的1种方向模式和DC模式作为候选模式进行RDO,选择R-D代价较小的作为它的最佳预测模式.然后,累加I4MB所有4×4子块、I8MB所有8×8子块的最佳预测模式的方向模式数量1234567表1I4MB采用不同数量模式进行编码的性能比较(全部I帧编码)-6.963.4改进算法图像的空间相关性不仅存在于相邻像素间的亮度和色度值上,还表现在相邻块间的纹理结构上.自然图像中存在很多区域相邻块间的局部边缘特征、纹理方向相同或相近,这些相邻块的最佳预测模式往往会相同,这意味着相邻块间的预测模式也存在一定的空间相关性.利用这一特性,把最有可能模式MPM作为RDO的一个候选模式,可以提高模式选择算法的编码性能.H.264中I4MB和I8MB最有可能模式MPM定义为当前块的左、上相邻块采用的最小编号的预测模式,不存在左或上相邻块的边界块则以DC模式作为其MPM,I16MB没有定义MPM.图3比较了多个序列全搜索方式下MPM和DC模式为最佳预测模式的块占所有块的百分比,图3(a)和(b)分别为I4MB和I8MB方式下的占比.很明显,无论是I4MB还是I8MB方式MPM为最佳模式的频率都远高于DC模式,因此,我们改进基本算法,I4MB和I8MB方式中采用MPM模式取代DC模式作为缺省候选模式.算法在I4MB和I8MB方式候选模式的选择中计算各分块方式下的方向模式的方向梯度后,选择I4MB和I8MB方式方向梯度最小的3种模式作为候选模式,如果MPM在候选模式集中,则加入DC模式到候选模式集中,否则加入MPM到候选模式集中,I16MB候选模式的选择与基本算法相同.由于选择参与RDO的模式数量相同,所以改进算法的复杂度与基本算法基本相同.R-D代价得到I4MB和I8MB的宏块R-D代价,I16MB的宏块R-D代价即为其最佳预测模式的R-D代价.最后,在3种方式中选择宏块R-D代价最小的作为最佳预测方式,采用最佳方式中各子块的最佳预测模式进行帧内预测.因此,算法在高级档次下每一宏块亮度分量只需进行4×4×4+4×2×2+2=82次R-D代价计算,在不进行色度分量模式选择时,宏块R-D代价计算次数也减少到4×82=328.图3最佳预测模式为MPM与DC模式占比比较4实验与分析4.1实验比较算法我们在JVT参考软件JM18.0[18]上实现了文献[10]中的DES、文献[11]中的SDD和文献[12-13]算法等几个优秀算法和本文算法的性能比较.DES和SDD都采用分块的方式检测纹理强度,均没有提供亮度分量I8MB模式筛选方法,我们把2×2子块的大小设为4×4,然后参照I4MB方式对两个算法进行扩展.此外,文献[13]算法提供了退出方法的一Page6个逃逸选项,当各方向的梯度值都大于一个经验阈值时执行全搜索,实验中为了比较方法的有效性,取消了这个选项.文献[10,12]算法在检测到无方向边缘信息时也执行全搜索,这是算法的一个选择分支,为了保持算法的完整性,实现中予以保留.本文算法在所有条件下都不执行全搜索.同时,考虑到色度分量的预测相对简单,实验中所有比较算法都不进行UV分量预测模式筛选.4.2编码参数与评价指标实验以JM18.0全搜索策略为基准评价方法性能,评价指标包括编码性能指标亮度分量PSNR和码率(BR)损益ΔPSNR(dB)和ΔBR(%)以及算法相对JM18.0编码时间降低百分比ΔTime.ΔPSNR(dB)和ΔBR(%)分别表示快速算法相对JM18.0在PSNR模式(不损失码率)和码率模式(不损失PSNR)下的编码性能损失,采用Bjontegaard方法①在4个量化参数下进行PSNR/码率转换和平均拟合.测试序列包括qcif、cif各5个标准420序列,每个序列编码100帧,其它关键参数设置如下:(1)量化参数(QP)为28、32、36和40;(2)帧频为30.0;(3)所有帧均采用帧内预测;(4)使用率失真优化(RDO);(5)采用CABAC进行熵编码;(6)采用高级档次(highprofile)编码.4.3性能比较图3、图4比较了Paris.cif序列JM18.0和各快速模式选择算法的R-D曲线和编码时间.图3显示本文改进算法R-D曲线比其它算法更为接近JM18.0全搜索曲线,各量化参数下的性能点均在比较算法的左上方,算法的重建视频质量和压缩性能均优于比较算法.文献[12]算法虽然编码性能与本文基本算法相近,但如图5所示其编码时间明显高于本文基本算法和改进算法.图5显示,文献[11,13]算法每帧编码时间与本文算法接近,但从图4可以看出它们的编码性能与本文两个算法都有较明显差距.表2详细比较了各个算法在10个测试序列中4个量化参数下的平均编码性能损益.本文基本算法相比JM18.0平均损失0.163dB的PSNR或增加2.361%的码率的情况下能减少了约52%的编码时间,改进的算法进一步降低了编码性能损失,比JM18.0平均损失0.101dB的PSNR,增加1.477%的码率,编码时间与基本算法基本相同(Silent.qcif等少数包含大量无规则纹理背景的序列,当前块像素与邻域像素相关度较低,文献[10]算法检测到无方向边缘信息时退化为全搜索方式,所以其编码性能接近或略超本文基本算法.而对于大部分序列而言,像素值空间相关性较大,当前块像素与邻域像素相关度较高,本文基本算法编码性能损失也更小).文献[11,13]算法与本文同样采用固定数量的候选模式参与RDO,所以它们的编码复杂度也是稳定的,各序列编码时间与本文方法接近,但由于它们都只利用块内纹理特征筛选模式,限制了模式选择的准确性,编码性能与本文方法有一定差距.文献[12]算法从两个方面改进了文献[10]算法,一方面基于宏块方差预先筛除一种编码方式降低编码复杂度,另一方面采用MPM代替DC模式提高编码性能,取得了很好的效果,编码性能优于本文基本算法,但仍低于本文改进算法.而且与文献[10]算法相同,文献[12]算法在检测到无方向边缘信息时退化为全搜索方式,其编码复杂度是不稳定的,平均编码时间比文献[10]算法有较大提高,但比本文提出的两个算法仍然高15%左右.①BjontegaardG.CalculationofaveragePSNRdifferencesPage7表2帧内模式选择算法综合性能比较(全I帧编码)序列文献[10]Forman.qcif-0.159-0.194-0.121-0.232-0.123-0.0812.6773.2682.0363.8872.0621.35731.7450.1342.8650.8250.2651.11News.qcif-0.291-0.384-0.189-0.316-0.229-0.1323.6724.8862.3624.0082.8531.62735.0650.4245.1751.2951.6651.49Coastguard.qcif-0.189-0.312-0.134-0.197-0.163-0.0643.6634.5501.9583.8573.1570.93333.1949.2847.1450.2050.5350.60Container.qcif-0.268-0.226-0.046-0.328-0.199-0.1163.8924.4120.8804.7832.8872.22335.1750.3851.4951.3451.2151.06Silent.qcif-0.130-0.184-0.097-0.175-0.147-0.1182.3723.3321.7933.1512.6452.14033.7050.6846.9851.5151.6951.44Tempete.cif-0.161-0.210-0.107-0.210-0.128-0.0952.3253.0471.5463.0471.8451.36933.8651.8542.3952.6552.8052.62Bus.cif-0.238-0.235-0.109-0.193-0.119-0.0803.6723.6241.6742.9831.8371.22935.8951.6448.5252.5052.6452.62Paris.cif-0.251-0.314-0.136-0.288-0.203-0.1123.2484.0921.7663.7452.6211.45235.4551.4644.6052.3252.4552.32Mobile.cif-0.184-0.258-0.127-0.267-0.153-0.1022.0302.8531.4082.9551.6941.12428.9552.1533.6052.7753.0752.83Stefan.cif-0.186-0.266-0.133-0.241-0.169-0.1112.2093.1801.5752.8772.0111.31333.0151.1941.0352.1051.9951.79平均-0.206-0.258-0.120-0.245-0.163-0.1012.9763.7241.7003.5292.3611.47733.6050.9244.3851.7551.8351.79I4MB预测宏块数分别为1063、2246、6591和1001、表3是各算法News.qcif在量化参数为28和2139、6760,分块方案都比包括文献[12]算法在内的32下详细性能比较(对应表2的第2行),I16MB、I8MB、I4MB列分别表示采用I16MB、I8MB、I4MB其它算法更接近JM全搜索方法.其它量化参数下方式进行编码的宏块数量.以QP=28为例,和其它序列下也存在同样的现象,所有算法都由RDO选择最优分块策略,这就说明本文采用方向梯JM18.0分别有990个宏块采用I16MB、2326个宏块采用I8MB、6584个宏块采用I4MB方式进行预度对R-D代价的估计比采用块内纹理检测的方法测,本文基本算法和改进算法采用I16MB、I8MB、更为准确.量化参数方法BR/(KB·s-1)PSNR/dB平均编码时间/(ms·frame-1)I16MBI8MBI4MB表3News.qcif编码性能与分块方式比较QP=28QP=325结论H.264RDO过程计算复杂度很高,本文提出一个基于方向梯度的帧内预测模式选择算法,利用方向梯度检测当前块与邻域之间的纹理方向与边缘强度,在R-D代价计算前筛除方向梯度较大的预测模式,降低了RDO的复杂度.同时,本文利用预测模式的邻域空间相关性,用MPM取代DC模式作为缺省候选模式对基本算法进行了改进,提高了算法的编码性能.实验结果表明,提出的基本算法和改进算法应用在亮度分量帧内预测模式选择中,与JM18.0全搜索方式相比都减少了超过50%的编码ΔBR/%文献[12]文献[11]时间,同时较好地保持了编码性能.对10个标准序列进行测试,保持与JM18.0全搜索方式相同的亮度分量PSNR,基本算法码率平均上升2.361%,改进算法码率平均上升1.477%,较为明显地优于其它采用块内纹理检测的方法.
