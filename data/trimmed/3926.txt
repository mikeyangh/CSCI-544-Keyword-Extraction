Page1完全狆-支配集的参数算法骆伟忠1),2)冯启龙1)王建新1)陈建二1)1)(中南大学信息科学与工程学院长沙410083)2)(惠州学院计算机科学系广东惠州516007)摘要完全p-支配集是一个著名的NP-难问题,在无线传感网络中被用于构建无线传感节点的自我保护网络.该文主要研究完全p-支配集在DG(DiskGraph)模型及其特殊模型上的参数复杂性及参数算法设计.首先证明完全p-支配集在顶点度受限的UDG(UnitDiskGraph)上仍是NP-难的.为了深入理解完全p-支配集在UDG模型上的难解性根源,利用参数化规约进一步研究了完全p-支配集在UDG上的参数复杂性.基于难解性根源的分析,最后利用树分解技术和动态规划技术,针对平面图(一种特殊DG模型)上的完全p-支配集,设计了一个时间为O((2p+2)19.1·槡kk3n+n3)的精确算法,其中n为给定实例中的顶点个数,k为问题解的大小.关键词完全p-支配集;DG模型;固定参数可解;树分解;动态规划1引言支配集是经典的NP-难问题,在无线网络、测量及地理信息系统、编码理论、图像处理、数值分析、VLSI设计、信息检索、生物学等众多领域都有应用[1].近来,人们从参数复杂性及参数算法的角度对支配集问题进行了深入的研究.支配集在一般图上是W[2]-完全的,这表示除非W[2]类问题都是固定参数可解的,否则该问题不存在时间复杂度为O(f(k)nc)的算法,其中n为问题规模,c是一个常量,k为问题解的大小,f(k)是一个可计算函数[2].因此,人们主要研究了特殊图上支配集的参数算法设计.Alber等人提出了区域分解技术,并利用该技术证明了平面图上支配集具有335k的线性核上界[3].随后Chen等人将平面图上支配集的核上界改进到67k[4].Dorn利用分支分解和快速矩阵相乘技术针对平面图上支配集设计了一个时间复杂度为O(211.98槡k)的参数亚指数算法[5].最近,人们对支配集的参数算法研究扩展到比平面图更一般的图,如无H-图子式的图(H-minorfreegraph)、无Ki,j图(Ki,j-freegraph)和d-退化图(d-degeneratedgraph)等[6-7].完全p-支配集是与支配集相关的一个重要问题.完全p-支配集在无线网络中具有重要应用.在无线传感网络中,完全p-支配集被用于构建自我保护网络,使传感节点能够抵抗外部的攻击,从而传感节点能更好地进行监控工作[8-9].完全p-支配集的严格定义如下.完全狆-支配集输入:无向图G=(V,E),非负整数p,k.任务:判断是否存在一个大小不超过k的点集TV,使得对于V中的每个点v,v至少与T中的p个顶点相邻.如果p=1,则称之为完全支配集.自完全支配集和完全p-支配集被提出以来[10-11],人们主要从两方面对其进行了研究.一方面,人们从算法和复杂性角度对其进行研究.完全支配集是NP-完全的[12],甚至在顶点的最大度为3的平面图上仍是NP-难的[13].文献[8]证明完全支配集的近似度的上界为logn,其中n为图中顶点的个数.文献[14]给出了一个近似度为ln(δ-0.5)+1.5的近似算法,其中δ为输入图中的顶点最大度.文献[15]证明了对任意常数p,完全p-支配集是NP-难的,给出了一个近似度为lnn的多项式时间近似算法,并证明了近似度的下界为(1/p)lnn.文献[16]指出完全支配集存在时间为O(6l)的精确算法,其中l为输入图的树宽.另一方面,人们从图理论角度对完全支配集和完全p-支配集进行研究.文献[10]给出了顶点个数至少为3的连通图上最优完全支配集大小的上界为2n/3.文献[17]进一步证明了在顶点度至少为3的图上最优完全支配集大小的上界为n/2.文献[18]证明了在顶点度至少为p的图上,其最小完全p-支配集大小的下界为pn/Δ,其中Δ为图中顶点的最大度.DG模型和UDG模型在无线网络中具有重要应用[19].人们对DG模型和UDG模型上NP-难问题进行了深入研究.从NP复杂性角度出发,文献[20]研究了斯坦纳树等经典难解问题在UDG模型上的难解性.从参数算法角度出发,文献[21]研究了红-蓝支配集和连通点覆盖在DG模型上的核心化算法设计.近来完全p-支配集在无线网络中得到成功应用,因此人们开始关注DG模型和UDG模型上完全p-支配集的研究.文献[9]研究了UDG上完全支配集,并证明了完全支配集在UDG上的近似率上界为10.本文主要从参数复杂性和参数算法角度对DG模型及其特殊模型上完全p-支配集问题进行系统的研究.首先证明了完全p-支配集在顶点的最大度为3的UDG上仍是NP-难的.基于参数化规约,进一步证明了完全p-支配集在UDG上是W[1]-难解的,即完全p-支配集在UDG上以问题解的大小k作为参数是固定参数不可解的.但如果限制DG模型中相交圆之间的距离,则完全p-支配集在DG上以k作为参数是固定参数可解的.最后研究完全p-支配集在一种特殊DG模型-平面图上的参数算法设计,利用树分解技术和动态规划技术,提出了一个时间为O((2p+2)19.1·槡kk3n+n3)的参数化精确算法,其中n为输入实例中的顶点个数.从而证明了完全p-支配集在平面图上以p和k为参数是固定参数可解的.2相关术语设z,z为欧式平面上的任意两个点,用d(z,z)=(x-x)2+(y-y)槡其中(x,y),(x,y)分别为z,z在欧式平面上的坐标值.在欧式平面上,将一个圆DPage3(r,x,y)∈值和纵坐标值,而r为圆D的半径.设={D1,…,Dn}(Di(V,E)表示的相交图,即V={v1,…,vn},E={(vi,vj)|Di∩Dj≠}.设G(V,E)为一个无向图,其中V是G的顶点集,E是G的边集.如果存在一个欧式平面上的圆集合={D1,…,Dn}(Di2),使得G=G,则称G为DG(DiskGraph).如果对中任意两个圆Di,Dj,满足ri=rj,即半径相等,则称G为UDG(UnitDiskGraph).特别地,如果对中任意两个圆Di,Dj,满足d(vi,vj)ri+rj(vi,vj分别表示圆Di和Dj的圆心),则称图G为硬币图(coingraph).称={D1,…,Dn}为图G的圆盘模型.用μ()表示中所有圆所占的欧式平面上的面积大小.设S{D∈|D∩S≠}表示S在中的导出圆集合.设G(V,E)为一个无向图,如果能将图G嵌入到二维平面上,使得G中任意两条边除端点外不相交,则称G为平面图.平面图和硬币图是等价的[22].定义1[23].设G(V,E)为一给定的无向图.图G的树分解是一个二元对〈{Xi|i∈I},T〉,其中Xi是顶点V的一个子集(称为包),树T的每个节点i∈I都对应V的一个子集Xi,且满足以下条件:(1)∪i∈IXi=V,即覆盖原图G的所有顶点;(2)对于图G上的每一条边(u,v)∈E,存在一个i∈I使得{u,v}∈Xi,即覆盖所有的边;(3)对于任意的i,j,k∈I,如果在树T中,j是i到k路径上的节点,则Xi∩XkXj,即保证与原图的一致性.树分解〈{Xi|i∈I},T〉的宽度定义为max{|Xi||i∈I}-1.图G的树宽tw(G)是G的所有可能树分解树中的最小宽度值.在得到给定图的树分解后,通常将给定的树分解转化为一种具有简单结构的树分解———完美树分解.定义2[23].如果树分解〈{Xi|i∈I},T〉满足以下条件:(1)树T的任意节点最多包含两个子节点;(2)如果节点i包含两个子节点j、k,则Xi=(3)如果节点i只包含一个子节点j,则满足以(a)|Xi|=|Xj|+1且XjXi(称i为引入(b)|Xi|=|Xj|-1且XiXj(称i为遗忘Xj=Xk(称i为连接节点);下两个条件中的一个:节点);节点).可在多项式时间内将任意给定的树分解转换成则称〈{Xi|i∈I},T〉为完美树分解.完美树分解,具体如以下引理所示.引理1[23].给定图G=(V,E)和图G的一个宽度为k,节点个数为N的树分解,可在线性时间内(O(N))将该树分解转化成一个宽度为k、节点个数为O(N)的完美树分解.3UDG上的NP复杂性完全p-支配集在一般图上是NP-难的,本节进一步证明完全p-支配集在顶点度受限的UDG上仍是NP-难的.首先给出以下重要引理.引理2[24].顶点最大度为4的平面图G(V,E)可按以下方式嵌入到面积不超过O(|V|)的二维平面上:每个顶点具有整数的坐标;任一条边均由一些平行于y轴或x轴,形式为x=i或y=j的线段组成(i、j为整数).基于引理2,可得出:定理1.完全p-支配集在顶点的最大度为3的UDG上是NP-难的.证明.要证明定理的正确性,只需证明完全支配集(p=1)在顶点的最大度为3的UDG上是NP-难的.完全支配集在顶点的最大度为3的平面图上是NP-难的[13].证明从顶点最大度为3的平面图上的完全支配集规约到顶点最大度为3的UDG上的完全支配集.设图G为顶点最大度为3的平面图.基于G,构造一个顶点最大度为3的UDG图G,使得图G上存在一个大小不超过k的完全支配集当且仅当图G上存在一个大小不超过k的完全支配集(k和k为非负整数).利用引理2,将图G嵌入到二维平面上,使得任一个顶点均具有整数坐标,任一条边均由一些形式为x=i或y=j的线段组成(i、j为整数).调整坐标刻度,使得任意两个顶点间的边由一些长度为整数的线段组成(任意两个点间的最短距离为1).在该嵌入下,对于G中的任一点v,用一个圆心为v点所在的坐标位置、半径为1/8的圆代替.对于G中的任一条边(u,v),用4kuv个半径为1/8的圆代替(kuv0),且以以下方式组织这4kuv个圆的相交模式:除了以u、v为圆心的圆,这4kuv个圆不与其它圆相交,且这4kuv个圆及以u、v为圆心的圆的相交图是条长度为4kuv+2的简单路径(路径长度等于该Page4路径上的顶点个数).图G即为按以上方式构造出的圆的相交图.因此,图G上的点由两部分组成:从G上的顶点转换过来的点集V以及从图G上的边转换过来的点集VE.显然,图G上的顶点最大度为3.下面证明:图G上存在一个大小不超过k的完全支配集当且仅当图G存在一个大小不超过k=k+∑uv∈E:假设图G上存在一个大小不超过k的完全支配集D.基于D,构造图G上的一个完全支配集D.注意到G中的顶点由两部分组成:V和VE.首先将V∩D中的所有点加入D.下面说明将VE中的哪些点放入D中.分3种情况讨论.设u,v为图G上两个相邻的点.由G的构造过程可知,在图G中,u,v间的路径p(u,v)上有4kuv个内部点(kuv0),且这些内部点均来自点集VE.不失一般性,假设kuv1.为了描述的方便,假设路径p(u,v)上的4kuv个内部点从与u相邻的第一个内部点依次编号到与v相邻的最后一个内部点.(1)u,v∈D.将路径p(u,v)上的第1个、最后一个及第4i个和第4i+1个(1ikuv-1)内部点放入D中.(2)uD,v∈D.将路径p(u,v)上的第4i+1和第4i+2个(0ikuv-1)内部点放入D中.(3)u,vD.将路径p(u,v)上的第4i+2和第4i+3个(0ikuv-1)内部点放入D中.容易验证,D是图G上的完全支配集,且|D|=|D|+∑uv∈E:假设图G上存在一个大小为k=k+∑uv∈E的完全支配集D.设u∈V,NG(u)为点u在图G上的邻居节点集合.下面证明,图G上存在一个大小不超过|D|的完全支配集D,满足NG(u)∩D≠.假设NG(u)∩D=.设NG(u)为点u在图G上的邻居节点集合.因点u需被支配,所以D∩NG(u)≠.设a∈D∩NG(u).设v∈NG(u)且a在路径p(u,v)上.根据假设,vD.注意到路径p(u,v)上有4kuv个内部点.设P为路径p(u,v)上包含在解D中的内部节点集合.容易验证,为了完全支配路径p(u,v)上的u点及所有内部点,|P|2kuv+1.如果uD,则设S为路径p(u,v)上第4i+1和第4i+2个(0ikuv-1)内部点组成的点集,否则设S为路径p(u,v)上的第1个、最后一个及第4i个和第4i+1个(1ikuv-1)内部点组成的点集.设D=(D\P)∪S∪{v}.显然,D是图G上的完全支配集.注意到|S|=2kuv.因此,|D|=|D|.设D为图G上的完全支配集,且满足:对任意点u∈V,NG(u)∩D≠.设D=D\VE.显然,D是图G上的完全支配集.下面证明D是图G上一个大小不超过k的完全支配集.设u,v∈V.由G的构造过程可知,路径p(u,v)上有4kuv+2个点(kuv0),且其中4kuv个内部点均来自点集VE.容易验证,为了完全支配路径p(u,v)上的4kuv个内部点,这4kuv个内部点中至少需2kuv个包含在解D中.因此,|D|=|D\VE|k.4UDG上的参数复杂性因完全p-支配集在UDG上是NP-难的,一个自然的问题是完全p-支配集在UDG上是否是固定参数可解的.本节研究完全p-支配集以目标解的大小作为参数的参数复杂性.定理2.完全p-支配集在UDG上是W[1]-难解的.证明.要证明定理的正确性,只需证明完全支配集(p=1)在UDG上是W[1]-难解的.从k-团问题参数化规约到UDG上的完全支配集.给定一个无向图G(V,E)和一个非负整数k,k-团问题的任务是回答图G中是否存在一个顶点子集KV,使得|K|k,且K中顶点在图G中的导出子图是一个完全图.k-团问题是W[1]-难解的[25].设(G,k)为k-团问题的一个实例.基于(G,k),构造出完全支配集的一个实例(G,k),其中G为UDG图,满足:k=f(k)(f为一可计算函数),且(G,k)是k-团问题的真实例当且仅当(G,k)是完全支配集的真实例.首先说明(G,k)的总体构造思路.将图G看成是一个有向图:对G中的任一条边(u,v),用有向边[u,v]和[v,u]代替(u,v);对任一个点u,假设存在从u到u的自我有向边.在G中找一个大小为k的团,其本质是在G中找k2条边,使得这k2条边构成了一个k-团.为了模拟找这k2条边的过程,在图G中构造k2个相同的部件(gadget),每个部件用来模拟找一条边.这k2个部件按k行和k列的方式排列,用Gi,j表示第i行第j列的部件.同一行相邻的部件用行连接器进行连接,同一列相邻的部件用列连接器进行连接.行连接器的作用是保证针对同一行部件找出的k条有向边的起始顶点是相同的;而列连接器的作用是保证针对同一列部件找出的k条有向边的终止顶点是相同的.Page5为了表述方便,对G(V,E)中的点和边进行编号.对G中的顶点从1到n进行编号(n=|V|),用c(v)表示顶点v∈V的编号;对G中的任一条有向边e=[u,v],则e的编号c(e)=(c(u)-1)×n+c(v).显然,G上任一条边的编号在1到n2之间.对于G上的某条有向边e的编号s(1sn2),用x(s)表示边e的起始顶点编号,用y(s)表示边e的终止顶点编号.接下来描述部件、行连接器和列连接器的具体构造.部件Gi,j的构造.Gi,j由17个模块组成:X1,…,X8,Y1,…,Y8,Z,每个模块包含了多个圆,具体的构造见图1.每个X类型的模块Xi包含了n2圆,每个Y类型的模块Yi包含了n2+1个圆,而模块Z包含了8个圆.X和Y类型模块中的每个圆C的圆心坐标的形式为(x1+aε,y1+bε),其中x1,y1为整数,表示圆心的基准坐标,ε=1/8n2,-na,bn,称a为圆C的横偏移量,b为圆C的竖偏移量.同一个模块(X和Y类型)中的圆的基准坐标相同,即x1和y1值相同.为了表示的方便,设Offxy(C)=(a,b),表示圆C的圆心偏移量.对于Gi,j,如果i≠j,则对于图G中的每条编号为s的非自我有向边,每个模块Xl(或Yl)中均有一个编号为s的圆Xl,s(或Yl,s)与之对应;如果i=j,则对于图G中的每条编号为s的自我有向边,每个模块Xl(或Yl)中均有一个编号为s的圆Xl,s(或Yl,s)与之对应.对于类型为Y的每个模块Yl,还包含一个编号为0的圆Yl,0.每个模块中编号为s的圆的圆心偏移量如下所示:Offxy(X1,s)=(s,-y(s));Offxy(X2,s)=(s,y(s));Offxy(X3,s)=(-x(s),-s);Offxy(X4,s)=(x(s),-s);Offxy(X5,s)=(-s,y(s));Offxy(X6,s)=(-s,-y(s));Offxy(X7,s)=(x(s),s);Offxy(X8,s)=(-x(s),s);Offxy(Y1,s)=(s+0.5,s+0.5);Offxy(Y2,s)=(s+0.5,-n);Offxy(Y3,s)=(s+0.5,-s-0.5);Offxy(Y4,s)=(-n,-s-0.5);Offxy(Y5,s)=(-s-0.5,-s-0.5);Offxy(Y6,s)=(-s-0.5,n);Offxy(Y7,s)=(-s-0.5,s+0.5);Offxy(Y8,s)=(n,s+0.5).由以上构造可知,对于X和Y类型的任两个圆C1和C2,只有当C1,C2在同一个模块,或它们所在的模块相邻时,C1,C2才可能相交.模块Z由8个圆组成.其中圆Z1(Z3,Z5,Z7)与模块X8(X2,X4,X6)和X1(X3,X5,X7)中的每个圆均相交,且与圆Z2(Z4,Z6,Z8)相交,但与其它任何圆均不相交.圆Z2(Z4,Z6,Z8)只与圆Z1(Z3,Z5,Z7)相交.行连接器Hi,j的构造.Hi,j连接部件Gi,j和部件Gi,j+1.Hi,j中的圆分为两模块H1和H2,每个模块均包含n+1个圆.模块H1连接Gi,j中的模块X3和Gi,j+1中的模块X8,模块H2连接Gi,j中的模块X4和Gi,j+1中的模块X7.模块H1中编号为s的圆H1,s的圆心偏移量为Offxy(H1,s)=(-s-0.5,-n2-1),而模块H2中编号为s的圆H2,s的圆心偏移量为Offxy(H2,s)=(s+0.5,n2+1).H1和H2中的圆不会与任何Y类型模块中的圆相交.列连接器Vi,j的构造.Vi,j连接部件Gi,j和部件Gi+1,j.Vi,j中的圆分为两模块V1和V2,每个模块均包含了n+1个圆.模块V1连接Gi,j中的模块X6和Gi+1,j中的模块X1,模块V2连接Gi,j中的模块X5和Gi+1,j中的模块X2.模块V1中编号为s的圆V1,s的圆心偏移量为Offxy(V1,s)=(n2+1,-y(s)),而模块V2中编号为s的圆V2,s的圆心偏移量为Offxy(V2,s)=(-n2-1,y(s)).V1和V2中的圆不会与任何Y类型模块中的圆相交.设k=12k2.显然,(G,k)的构造可以在多项接下来证明(G,k)是k-团问题的真实例当且仅式时间内完成.Page6当(G,k)是完全支配集的真实例.假设(G,k)为一个真实例,并设K为图G上一个大小为k的团.图G上一个大小为12k2的完全支配集T构造如下.设K中的k个点为v1,…,vk,并假设c(v1)<c(v2)<…<c(vk).对K上的每一条有向边e=[vi,vj]∈E(K),将G中的部件Gi,j上的以下12个圆加入T中:Z1,Z3,Z5,Z7,X1,c(e),X2,c(e),X3,c(e),X4,c(e),X5,c(e),X6,c(e),X7,c(e),X8,c(e).由G的构造过程可知,T是图G上的完全支配集.假设(G,k)是一个真实例,并设T为图G上一个大小为12k2的完全支配集.首先证明以下命题.命题1.每个部件Gi,j上有12个圆包含在T中.证明.因为Z2只能被Z1支配,易推出T一定包含Z1.如果T包含Z2,则用X1∪X8中的任意一个圆代替Z2,可得另一个解.因此,可以假设T不包含Z2.因为Z1需要被支配,所以T至少包含X1或X8中的一个圆,不失一般性,假设T包含X1中的一个圆.因为X1∪X8中的任意一个圆均不能支配Y1中所有圆,所以T至少包含Y1∪X8中的一个圆.综上所述,T至少包含X1∪X8∪Y1中的两个圆.同理,可推出T一定包含Z3,Z5,Z7,不包含Z4,Z6,Z8,至少包含X2∪X3∪Y3中的两个圆,至少包含X4∪X5∪Y5中的两个圆,至少包含X6∪X7∪Y7中的两个圆.另一方面,注意到T为一个大小为12k2的完全支配集.因此每个部件Gi,j上刚好有12个圆包含在T中.从而命题得证.因为共有k2个部件,每个部件包含12个圆,所接下来证明以下命题.命题2.对于每个部件Gi,j,存在一个G的完全支配集T,T包含Gi,j上的以下12个圆:Z1,Z3,Z5,Z7,X1,s,X2,s,X3,s,X4,s,X5,s,X6,s,X7,s,X8,s,其中1sn2.证明.设T∩(X1∪…∪X8)的值在所有解中是极大的.由命题1可知,T包含Z1,Z3,Z5,Z7.下面证明,对每一个模块Xi,T至少包含一个Xi中的圆.假设T不包含Xi中的任意一个圆.由命题1可知,T至少包含4个X类型的圆.因此,存在两个模块Xa,Xb,使得T∩Xa≠,T∩Xb≠,但对任意a<i<b,满足T∩Xi=.从而对任意a<ib,满足T∩Yi≠.假设Xa,j∈T∩Xa,令T=T\(Ya+1∪…∪Yb)∪(Xa+1,j∪…∪Xb,j),显然,T是G上的一个大小不超过|T|的完全支配集.这与以连接器上的圆没有一个包含在T中.T∩(X1∪…∪X8)的值在所有解中是极大的前提矛盾.另一方面,容易得知,对每一个模块Xi,T至多包含一个Xi中的圆,否则|T|>12k2.设T包含圆X1,j1,…,X8,j8.下面证明j1=…=j8.由部件Gi,j的构造过程可知,对于任两个圆Xi,ji和Xi,ji+1,只有当jiji+1时,Xi,ji和Xi,ji+1才能支配Yi+1中的所有圆.因此,j1j2…j8j1,即j1=j2=…=j8.因此,假设T满足命题2的性质.接下来证明以下命题.命题3.对于同一行的两个相邻的部件Gi,j和Gi,j+1,假设Gi,j上每个X类型模块中编号为s的圆(即圆X1,s,X2,s,X3,s,X4,s,X5,s,X6,s,X7,s,X8,s)包含在T中,而Gi,j+1上每个X类型模块中编号为s的圆包含在T中,则s和s满足以下性质x(s)=x(s).证明.假设x(s)>x(s).容易观察到,此时第1个部件Gi,j的包含在T中的圆X3,s支配了H1中的以下圆:H1,x(s),…,H1,n.而第2个部件Gi,j+1的包含在T中的X8,s支配了H1中的以下圆:H1,0,…,H1,x(s)-1.因此,T没有支配H1,x(s).这与T是一个G上的一个解的前提矛盾.类似地,如果x(s)<x(s),则可推出H2中的H2,x(s)没有被T支配.由命题3容易得出:对于同一行的任两个部件Gi,j和Gi,j,假设Gi,j上每个X类型模块中编号为s的圆包含在T中,而Gi,j上每个X类型模块中编号为s的圆包含在T中.则x(s)=x(s).命题4.对于同一行的部件Gi,j和Gi,j(j≠j),假设Gi,j上每个X类型模块中编号为s的圆包含在T中,而Gi,j上每个X类型模块中编号为s的圆包含在T中.则s≠s.证明.假设s=s,即x(s)=x(s)且y(s)=y(s).假设部件Gj,j上X类型的在T中的圆的编号为s,Gj,j上X类型的在T中的圆的编号为s.因为y(s)=y(s)=x(s),y(s)=y(s)=x(s),所以s=s.假设Gj,j上X类型的在T中的圆的编号为s.因为x(s)=x(s),y(s)=y(s),x(s)=y(s)=y(s),所以x(s)=y(s).但由Gj,j的构造过程可知,对于Gj,j中X类型的任意一个圆C,假设圆C的编号为l,则x(l)≠y(l).矛盾.证毕.使用类似于命题3和4的证明方法可得:对于同一列的部件Gi,j和Gi,j(i≠i),假设Gi,j上每个X类型模块中编号为s的圆包含在T中,而Gi,j上每Page7个X类型模块中编号为s的圆包含在T中.则y(s)=y(s)且s≠s.基于T,图G上的一个大小为k的团K的构造如下.对于每个部件Gi,j,假设Gi,j上每个X类型模块中编号为s的圆包含在T中,则将图G上编号为s的边加入图H中.由以上讨论可知,图H中的k2条有向边中没有重复边,即没有两条起始点和终止点均相同的边,且图H中刚好有k个不同的顶点.因此,图H是图G的一个有向完全子图.将V(H)加入K中,则K是图G一个大小为k的团.证毕.从完全p-支配集在UDG上固定参数不可解性证明的过程可知,问题的难解性依赖于以下假设:UDG圆盘模型中相交圆间的距离可以无限接近.如果限制相交圆之间的距离,则问题的难度会发生根本性的改变.这是因为,如果相交圆间的距离大于某个常量c,则图中顶点的最大度是受限的,利用文献[26]的“几何”核心化技术容易得出所研究的问题是固定参数可解的,具体如以下定理所示.定理3.给定一个DG图G(V,E),假设为G的圆盘模型.如果中任何两个圆的圆心之间的距离大于某个常量c,且中圆的半径是有限常量,则完全p-支配集在实例(G,k)上是固定参数可解的.证明.假设的相交图G(V,E)中的顶点按如下方式嵌入到欧式平面上:顶点vi∈V位于圆Di∈的圆心位置.假设中圆的最大半径和最小半径分别为常量rmax和rmin.注意到对任意点v∈V,因为中圆的最大半径为rmax,所以有μ([N[v]])π(3rmax)2=9πr2max(N[v]表示v及其邻接点的集合).因此,如果μ()>9kπr2max,则(G,k)是一个假实例.假设μ()9kπr2max.另外一方面,因为中圆的最小半径为rmin,且任何两个圆的圆心之间的距离大于某个常量c,所以μ()π(c槡n/2+rmin)2(π/4)c2n(将所有圆的圆心放入某个圆中),其中n=|V|.从而(π/4)c2nμ()9kπr2maxn(36r2max/c2)·k.因此,完全p-支配集具有大小为(36r2max/c2)·k的核.因为一个参数化问题是可核心化的当且仅当该问题是固定参数可解的[2],所以完全p-支配集在实例(G,k)上是固定参数可解的.证毕.5平面图上的参数算法设计平面图是一种相交圆之间的距离最大化的特殊DG模型:任何两个相交圆均以相切的方式进行相交.由上一节的分析可知,完全p-支配集在平面图上是固定参数可解的.本节进一步证明平面图上完全p-支配集存在参数亚指数算法.设(G,k)为完全p-支配集的一个实例(k为问题解的大小),该算法基于树分解技术和动态规划技术,主要由两部分组成:(1)找到图G上的一个最优树分解(X,T),且证明该树分解的树宽是受限的,即树宽是关于k的一个函数:tw(G)f(k);(2)利用动态规划技术,在树分解树上设计一个时间复杂性为2α·tw(G)nO(1)的算法,其中α为一常量,n为问题规模.5.1树分解jp).首先给出关于平面支配集问题的一个重要结论.引理3[27].设图G为一平面图.如果G上存在一个大小不超过k的支配集,则图G的树宽tw(G)9.546槡k.基于以上引理,可得新的引理.引理4.设图G为一平面图.如果G上存在一个大小不超过k的完全p-支配集,则图G的树宽tw(G)9.546槡k.证明.设平面图G上存在一个大小不超过k的完全p-支配集D.显然,D也是图G上的一个支配集.由引理3可得tw(G)9.546|D槡|.因此,tw(G)9.546|D槡|9.546槡k.证毕.5.2动态规划针对完全p-支配集实例(G,k)的一个树宽受限的完美树分解〈{Xi|i∈I},T〉,基于动态规划技术设计完全p-支配集的参数亚指数算法.为了表述方便,先介绍相关概念.对于分解树T上的每个节点i∈I,用Gi表示节点i及其子孙节点中所有顶点在图G中的导出子图,即Gi=(Vi,Ei),其中Vi表示节点i及其子孙节点所对应的包的所有顶点集合,Ei=E∩(Vi×Vi).对于每一个包Xi,假设Xi中的顶点是按顺序编号的,即对任意i∈I,Xi={x1示Xi中顶点的个数.对于任意包Xi,使用2(p+1)种颜色对其中的顶点进行着色:^j:该点在解中且已经被j个点支配(0jp);j:该点不在解中且已经被j个点支配(0设c=(c1,…,cni)∈{0^,…,^p,0,…,p}ni.则称c为针对包Xi中顶点的一种着色方案,且用ct表示Xi中的第t个顶点xti在c中被着的颜色.假设在某着色方案c下某顶点xti的着色为ct,用b(ct)表示在着色Page8p),则b(ct)=i,如果ct=i(0ip),则b(ct)=i.针对一个大小为ni的包Xi,定义函数mi:{0^,…,^p,0,…,p}ni→∪{+}.对于Xi中顶点的一种着色方案c=(c1,…,cni)∈{0^,…,^p,0,…,p}ni,mi(c)表示Xi中顶点在着色方案c限制下,图Gi中的最小完全p-支配集的大小.对于包Xi中顶点的一种着色方案c=(c1,…,cni)∈{0^,…,^p,0,…,p}ni,如果以下条件满足:(t∈{1,…,ni}:b(ct)1)∧(|N∧(xti)|<b(ct)),其中N∧(xti)表示图G[Xi]中顶点xti的邻居且着色属于{0^,…,^p}的点集,则称c为无效着色方案.对于给定着色方案c=(c1,…,cni)∈{0^,…,^p,0,…,p}ni,定义#∧(c)=|{t|t∈{0^,…,^p}}|.动态规划算法为每个树分解树中的节点i∈I建立一张动态规划表Ai,如表1所示.表Ai共有ni+2列,有(2p+2)ni行.每一行代表包Xi中顶点的一种着色方案c,以及该着色方案的函数值mi(c)和前驱指针pi(c).pi(c)用于最后构造最优解,指向获得mi(c)值的包Xi孩子节点的某着色方案.算法首先计算树分解树中叶节点的动态规划表,然后自底向上计算中间节点的动态规划表,也就是说,对于每个节点i∈I,只有计算完节点i的所有子孙的动态规划表,才根据节点i的孩子节点的动态规划表更新节点i的动态规划表.显然,所求解的完全p-支配集的最优解大小包含在根节点的动态规划表中.x1ix2i…xni-10^0^pp步骤1:初始化.算法的第1步是计算树分解树中叶节点的动态规划表.对每一个叶节点包Xi的所有着色方案c∈{0^,…,^p,0,…,p}ni,按如下公式求解函数mi(i)值:mi(c)=#∧(c),c是有效着色方案步骤2:后序遍历树分解树犜,执行动态规划的过程.假设当前遍历到的节点为i∈I.如果i为叶节点,则不执行任何操作.下面假设i为中间节点.下面分情况讨论节点i的动态规划表的计算.(1)遗忘节点.假设节点i为遗忘节点,并设其孩子的编号为j.注意到此时图Gi和图Gj是相同的,而Xj包含了Xi中所有顶点且只比Xi多一个顶点.不失一般性,假设Xi={x1xnii,x}.引理5.对遗忘节点Xi的每一种着色方案c:(1)mi(c×{l})=烄烅烆mi(c)=mind∈{^p,p}{mj(c×{d})}.证明.根据树分解的定义,顶点x不会再出现在后续要处理的树分解树中的任何一个中间节点中.因此,后续要处理的包不会改变顶点x被支配的次数.对包Xj的任意着色方案c×{d},如果d{p,^p},则在该着色方案的限制下,顶点x在图G中被支配的次数少于p次,也即着色方案c×{d}不会导出一个图G上的完全p-支配集.因此,只需考虑x的着色为p或^p的着色方案.按引理5的公式对遗忘节点Xi的动态规划表进行计算,并将指针pi(c)指向获得mi(c)值的包xj中的着色方案c×{d}(即mi(c)=mj(c×{d})).(2)引入节点.假设节点i为引入节点,其孩子节点的编号为j∈I.此时,图Gi包含图Gj中的所有点且比Gj多一个顶点x,该顶点x在图Gi中只与包Xj中的某些顶点相邻,而与Vj\Xj中的任何点均不相邻.不失一般性,假设Xj={x1{x1j,…,xnjj,x}.设顶点x在包Xi中的邻居为N(x)∩Xi={xl1nj.为了表述的方便,定义一个针对包Xj中顶点着色的一个转换函数:{0^,…,^p,0,…,p}nj→{0^,…,^p,0,…,p}nj.对于包Xj上的一个着色方案c=(c1,…,cnj),定义函数(c)={c1,…,cnj}使得ct=^j(j=i-1),如果ct=^i且t∈{l1,…,lp},i1烄i-1,如果ct=i且t∈{l1,…,lp},i1烅ct,其它情况烆引理6.对引入节点Xi的孩子Xj的每一种着色方案c,任意0lp,有Page9mj(c)+1,在图G[Xi]中,x存在l个邻居烄烅烆证明.首先考虑(1)的正确性.此时顶点x被分配的着色为l.为了保证包Xi的着色方案c×l的有效性,需保证顶点x至少被l个顶点支配,即x的邻居点中至少有l个是在解中.注意到在图Gi中,顶点x只能被包Xi中顶点支配.因此在图Gi和图G[Xi]中,顶点x的邻居点集是相同的.下面证明(2)的正确性.顶点x的着色^l表明x已被放入解中,因此相比于着色方案c,x在包Xi中的所有邻接点{xl1支配的次数均增加了一次.假设在着色方案c下,x的某邻接点xqj∈{xl1因x的着色^l会给xq意到mj(c)mj(c)(xqi-1次),所以mi(c×{^l})的值为mj(c)+1.证毕.按引理6的公式对引入节点Xi的动态规划表进行计算,对于有效着色方案c×{l},c×{^l},将指针pi(c×{l})指向包xj中的着色方案c,而指针pi(c×{^l})指向c.(3)连接节点.假设节点i为连接节点,其两个孩子的编号分别为j和k.设Xi=Xj=Xk={x1i,…,xnii}.此时图Gj和图Gk的顶点交集为Xi,而图Gi=Gj∪Gk.为了表述方便,引入以下概念.设c={c1,…,cni}∈{0^,…,^p,0,…,p}ni为Xi上的一个着色方案.对于任两个着色方案c={c1,…,cni}∈{0^,…,^p,0,…,p}ni和c={c1,…,cni}∈{0^,…,^p,0,…,p}ni,如果以下条件满足:(1)ct=^ib(ct)+b(ct)-li,其中i0,l=|N∧(xti)|(图G[Xi]中,顶点xti的邻居且在解中的点的个数);(2)ct=ib(ct)+b(ct)-li.其中i0,l=N∧(xti),则称c和c划分了c.引理7.对于连接节点Xi中的着色方案c:mi(c)=min{mj(c)+mk(c)-#∧(c)|c,c划分了c}.证明.首先证明mi(c)min{mj(c)+mk(c)-#∧(c)|c,c划分了c}.对于任一对划分了c的着色方案c,c,设D,D分别为在c,c限制下,图Gj和Gk中大小为mj(c)和mk(c)的完全p-支配集.设D=D∪D.容易得知,D是在c限制下,图Gi的一个完全p-支配集.因此,mi(c)|D|=mj(c)+mk(c)-#∧(c).下面证明mi(c)min{mj(c)+mk(c)-#∧(c)|c,c划分了c}.假设D为在着色方案c的限制下,图Gi中大小为mi(c)的完全p-支配集.设D=D∩V(Gj),D=D∩V(Gk).按以下方法构造包Xj(Xk)的一个着色方案c1(c2):对包Xj(Xk)中任一顶点xt含在D(D)中的邻居个数,即i=|N(xt(|N(xtk)∩D|),如果点xtj(xtk)的着色c1t(c2t)=^i,否则c1t(c2t)=i.根据mj()xt和mk()的定义可知,|D|mj(c1),|D|mk(c2).容易得知,c1,c2划分了c.综上所述,可得mi(c)=|D|=|D|+|D|-|D∩D|mj(c1)+mk(c2)-#∧(c)min{mj(c)+mk(c)-#∧(c)|c,c划分了c}.按引理7的公式对连接节点Xi的动态规划表进行计算,并将指针pi(c)指向获得mi(c)值的c和c.步骤3:构造最优解.假设r为树分解树T的根.当r以外的所有节点的动态规划表计算完毕,最后才计算r的动态规划表.根据r的动态规划表,可以得到最小完全p-支配集的大小.p-支配集的大小为min{mr(c)|c∈{^p,p}nr}.定义可得引理8的正确性.引理8.设r为树分解树T的根,则最小完全证明.注意到Gr=(V,E)=G.根据mr()的根据最优解大小mr(c)及各个动态规划表中设立的指针,利用回溯法即可得到最优解.定理4.给定图G的一个树宽为tw(G)的完美树分解〈{Xi|i∈I},T〉,则可以在O((2p+2)2·tw(G)tw(G)3N)时间内求解图G的最优完全p-支配集,其中N为T中的节点个数.证明.树分解定义的第1个条件保证了原图中所有顶点均被处理.在进行初始化及在动态规划的过程中,在给当前处理包Xi中某个顶点x分配着色^i(或i)时,保证了在图Gi中至少有i个顶点支配了顶点x,即顶点x的着色是有效的.根据树分解定Page10义的第2个条件,原图中任两个相邻的顶点至少出现在一个包中,从而保证了原图中任意点的着色有效性.树分解定义的第3个条件保证了动态规划过程的一致性.如果一个顶点x出现在两个不同的包Xi和Xj中,根据该定义,Xi到Xj的路径上的所有包均包含顶点x,由于动态规划的过程保证了两个相邻包的公共顶点的着色相容性,所以最终计算出的最优解中顶点x在各个包中的着色是相容的.下面分析算法的时间复杂性.首先考虑第1步的初始化.对于任一叶节点i∈I,其动态规划表Ai最多包含的着色方案个数是(2p+2)ni(ni为包Xi的大小).对于每一着色方案c,为了计算mi(c),需要检验c是否有效,这需要时间O(n3i).因此计算一个叶节点的动态规划表的时间为O((2p+2)nin3i).下面分析步骤2的时间.设节点i∈I为树分解树中的中间节点.(1)遗忘节点i动态规划表的计算时间.显然,计算节点i的动态规划表的时间为O((2p+2)ni).(2)引入节点i动态规划表的计算时间.容易得出,计算节点i的动态规划表的时间为O((2p+2)nin3i).(3)连接节点i动态规划表的计算时间.其时间由划分了动态规划表Ai中着色方案c的着色方案对c,c的个数决定,即∑c∈{0,…,p,0^,…,^p}ni|c和c划分了c}|.显然,其个数的上界为(2p+2)nj(2p+2)nk(2p+2)2·tw(G)(nj,nk为i的两个孩子节点的包大小).因此,计算一个中间节点i的时间复杂度为O((2p+2)2·tw(G)tw(G)3).因为分解树的中间节点个数最多有N个,所以步骤2的时间复杂性为O((2p+2)2·tw(G)tw(G)3N).最后考虑步骤3的计算时间.显然,步骤3中决定最小完全p-支配集的大小mr(c)的时间复杂性为O((2p+2)ni).根据c及每个动态规划表中设立的指针,通过回溯法在时间O((2p+2)tw(G)N)内得到最优解.综上所述,构造一个最优完全p-支配集的时间为O((2p+2)2·tw(G)tw(G)3N).由引理4和定理4可得如下定理.定理5.给定平面图上完全p-支配集的一个实例(G,k),可在时间O((2p+2)19.1·槡kk3n+n3)内解决完全p-支配集问题,其中n为图G中的顶点个数,k为问题解的大小.证明.算法主要由两步组成:(1)针对平面图G,计算一个最优的完美树分解〈{Xi|i∈I},T〉(T的节点个数N=O(n)).如果该树分解的树宽tw(G)>9.546槡k,则图G上不存在大小不超过k的完全p-支配集,返回“否”.如果tw(G)9.546槡k,则进行下一步;(2)基于完美树分解〈{Xi|i∈I},T〉,运用动态规划技术求解图G上的最优完全p-支配集D,如果|D|k则返回D,否则返回“否”.以上算法的正确性可由引理4和定理4得出.下面分析算法的时间复杂性.计算平面图G的最优树分解的时间为O(n3)[27-28].根据引理1,从树分解到完美树分解的转换需时间O(n).因此步骤1的时间为O(n3).由定理4及tw(G)9.546槡k,可得步骤2的时间为O((2p+2)19.1·槡kk3n).综上所述,整个算法的时间复杂度为O((2p+2)19.1·槡kk3n+n3).6结论本文主要研究了完全p-支配集在DG模型及其特殊模型上的难解性根源及参数算法设计.证明了完全p-支配集在顶点的最大度为3的UDG上仍是NP-难的,并进一步证明了完全p-支配集在UDG上是W[1]-难解的.通过W[1]-难解性的证明发现,UDG(圆盘)模型中相交圆间的距离对完全p-支配集在UDG上难解性有根本性的影响:如果相交圆的圆心之间的距离大于某个常量,则完全p-支配集在DG上是固定参数可解的.基于完全p-支配集难解性根源分析,利用树分解和动态规划技术,最后针对平面图上完全p-支配集设计了一个时间复杂度为O((2p+2)19.1·槡kk3n+n3)的参数亚指数算法,其中n为给定实例中的顶点个数,k为问题解的大小.
