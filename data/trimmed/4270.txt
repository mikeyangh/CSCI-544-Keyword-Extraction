Page1基于证据推理网络的实时网络入侵取证方法田志宏余翔湛张宏莉方滨兴(哈尔滨工业大学计算机科学与技术学院哈尔滨150001)摘要在分析现有网络入侵取证系统所存在问题的基础上,提出了一种基于证据推理网络的实时网络入侵取证方法NetForensic,将弱点关联性的概念引入网络入侵取证领域,根据网络系统的弱点知识和环境信息构建了证据推理网络,利用证据推理网络所提供的多阶段攻击推理能力,NetForensic实现了高效实时攻击流程重构.实验数据表明,NetForensic给出的证据链完整可信,且具备实时推理的能力,为快速有效的调查取证提供了有力保证.关键词入侵取证;证据推理网络;弱点;证据链;信息安全;网络安全1引言随着全球信息化的到来,计算机网络已深入到各个领域成为重要基础设施.网络结构日趋复杂、规模日渐庞大的同时,入侵过程也向复杂性、多样性和分布性的趋势发展.传统的安全措施,如防火墙和加密技术等,已难于应付大量复杂多样的攻击手段,网络安全问题面临着前所未有的威胁.据2006年ConsumerReports的最新调查报告显示,美国计算Page2机用户在过去两年中因病毒、间谍软件和网络欺诈等电脑犯罪带来的损失就超过了80亿美元.网络犯罪已经从技术问题发展为全球性重大社会问题,各国政府都在考虑如何借助于法律手段来维护合法使用者权益,并对网络入侵者进行法律制裁,网络入侵取证(networkintrusionforensics)技术的研究变得越来越迫切[1].与主机取证[2]一样,网络取证同样需要获取与鉴别潜在的、有法律效力的电子证据.然而计算机的互联使得网络系统取证与主机系统取证有很大不同,网络取证通过对网络上动态传输的通信数据进行提取和分析,提供攻击者定位、攻击流程重构等有效电子证据[3],并将这些证据作为法庭裁决的依据.现实中的网络攻击绝大多数不是孤立的行为,而是由数个具有某种逻辑联系、时间和空间却有一定跨度的攻击单元组合而成的多阶段攻击(multi-stageattack)[4].从证据学的角度看,检测到的攻击单元作为直接证据虽具有可采性,但由于无法体现多阶段攻击的全貌而缺乏证明力.因此,如何将多个单独的证据通过合理的逻辑关系联系成一个较为可信的证据体系,成为网络入侵取证研究所面临的核心问题.由此,本文通过将弱点关联性的概念引入到网络入侵取证领域,根据网络系统的弱点知识和环境信息构建证据推理网络,提出一种基于证据推理网络的实时网络入侵取证方法———NetForensic,利用证据推理网络所提供的多阶段攻击推理能力,NetForensic能够高效实时地重构攻击流程,给出完整可信的证据体系.2相关工作由于实现原理与工作机制的原因,主机取证技术存在很多不足之处.首先,主机取证方法的实现机制与操作系统内核联系紧密,这无疑会影响正在运行的业务系统的性能;其次,主机取证方法需要事先在目标主机上进行部署,因而难以适应大规模的取证需求,未部署的目标主机将成为取证盲点;第三,电子证据的可信性、可靠性取决于取证服务自身的安全性,而主机取证进程的安全保护问题至今依然是一大难点.以网络数据为数据源的网络取证技术的提出很好地解决了上述问题,补充和完善了计算机取证领域的研究工作[5].基于人工智能技术的攻击事件检测方法属于最初步的网络取证,利用专家系统[6]、模糊决策树[7]、人工神经网络和支持向量机[8]等技术的强大学习能力及其分析结果的易理解性将捕获到的网络海量数据标记为正常和异常.此类方法不能够揭示出相关安全事件之间的因果联系,无法对攻击全貌给出清晰的解释,无法完全满足取证分析的需要.在证据表示方面,文献[9]根据源和目的地址等地理属性对数据包进行链路分析,并依照时序进行信息可视化处理,设计并实现了一个支持实时取证分析的数据包级的可视化工具,方便调查人员了解某个时间段内全网范围的流量情况和数据走向.文献[10]将主机分为{Attacker,Victims,SteppingStones,BackgroundAttacker}四类,并基于IF-THEN规则的模糊认知图对由入侵检测系统产生的二次证据进行归纳和推理,利用固定模式的推理逻辑对证据进行关联,生成的图形化结果能够清晰地显示攻击次序和各主机所充当的角色.文献[11]提出一种基于层次化入侵场景重构的自动入侵证据分析方法.首先,利用报警关联技术重构出入侵者的抽象攻击步骤及步骤间关系;然后,基于攻击特征和依赖追踪技术重构出各步骤的行为细节;最后,通过两层重构结果的彼此映射,调整获得完整的入侵行为图.实际上此类算法大都是基于融合技术产生超报警的关联图,但对关联图的可信度却未作深入研究.在网络取证技术系统框架的研究方面,Kulesh等人[12]提出和设计了一种分布式网络实时取证系统ForNet,由网络取证控制中心ForensicServer和事件收集代理SynApp两个组件组成,全面讨论了符合大规模网络取证需求的系统架构、事件的存储查询以及系统安全性等问题.基于可信计算平台的TIF[13]主要研究了网络数据的获取与存储,并采用认证和加密的方式保证数据的完整性.针对大规模蠕虫爆发和分布式拒绝服务攻击的取证问题,CANINE[14]以CISCO路由器的NetFlow记录为数据源进行多源数据融合,而NFA[15]则采用多自治域相结合的信息共享机制来获得全局调查能力,从而能够及时准确地发现传播路径和攻击源.现有的网络入侵取证分析技术还存在着如下一些问题:首先,由于对多阶段攻击认识上的不足,大量研究工作仅关注于如何对攻击证据进行准确有效地标识,但对证据关联性少有分析;其次,根据固定的模式对证据进行关联的方法虽然可以重构攻击流程,但未对目标系统以及攻击者状态进行有效追踪,Page3缺乏客观性和可信性;第三,实用性不强,庞大而复杂的网络数据为取证分析带来了巨大的挑战,但大量研究工作仅从体系结构和取证节点部署来进行相关研究,对如何提高系统性能、降低算法复杂度未有涉及.综合考虑上述不足,NetForensic具有以上方法所不具备的优点:(1)取证过程对业务透明,不会对系统应用性能产生任何影响;(2)以网络数据为证据数据源,无需事先在目标主机部署取证设施,避免了主机取证方法中取证服务的安全性问题;(3)充分考虑了目标网络系统的弱点知识和环境信息,所获证据更具准确性;(4)引入弱点关联性概念,依靠证据推理网络所提供的多阶段攻击推理能力,实现了高性能证据链推理,并细化了取证粒度.3基于证据推理网络的网络入侵取证3.1网络攻击模型由于隐蔽性强、成功率高,多阶段攻击已成为网络入侵的主要形式[16].以Welchia.B.Worm病毒为例,整个攻击过程分为3个阶段,分别是系统信息收集、弱点服务发现和特权提升,每阶段有多种方式可供选择,分别为δ,ε1,ε2,ε3,γ1,γ2,γ3,γ4.如图1所示,几种攻击可以组合出多种攻击方式,每种方式均可实现攻击目的.证据学认为,证据对于案件事实有无证明力,以及证明力之大小,取决于证据与案件事实有无联系,以及联系的紧密、强弱程度.为了提高证据的证明力,NetForensic引入了证据链的概念[17].定义1.证据链.是指由两个及以上不同的电子证据所组成,各证据并不孤立存在,而是由客观联系相互联结,内容相互印证并体现或提高证明力,用以证明案件事实性的证据体系.多阶段攻击的每个攻击步骤均看作一个电子证据(下文简称为证据),而网络入侵取证研究所面临的主要问题则转化为如何将多个离散证据通过合理的逻辑关系连接为可信的证据链,这也是NetForensic追求的最终目标.3.2弱点和弱点的关联性弱点概念表示的是计算机系统在其安全策略保证下存在的缺陷,即破坏所声称安全的漏洞,弱点的存在是导致安全事件发生的内因.弱点及弱点关联性的定义如下[18]:定义2.弱点.是软件系统或软件组件中存在的缺陷,此缺陷若被发掘利用则会违反安全策略,并对系统的机密性、可鉴别性和可用性造成不良影响,弱点可记为v.定义3.弱点关联性.设一个具有n个弱点V[S]={v1,v2,…,vn}的软件系统S,若vli(i=1,…,k∧kn)∈V[S],使攻击者能够利用vl1,…,vlk完成一次多阶段攻击,则称弱点vl1,…,vlk是相关的,vl1,…,vlk之间具有关联性.弱点关联性可由如图2所示的AND和OR结构表示.AND结构表示在多阶段攻击中,成功利用弱点v的前提是弱点vli(i=1,…,n∧n2)均被成功利用;而OR结构则表示只需成功利用弱点vli(i=1~n∧n1)中任一弱点,攻击者就可以试图继续利用弱点v攻击目标系统.由定义不难看出,攻击行为的本质是攻击者对相应弱点的利用,攻击和弱点之间存在着潜在的必然联系.因此只要将攻击特征空间映射至弱点空间,即可利用弱点关联性来描述攻击行为之间的逻辑联系.基于上述分析,NetForensic以弱点关联性为基础,构建证据推理网络对离散的攻击证据进行关联和推理,最终实现形成可信证据链的目的.3.3证据推理网络在网络信息系统中,功能各异的计算机由电缆互联,这种互联互通的特性和弱点之间存在的关联性使计算机之间形成了众多特殊的访问逻辑关系.我们把一个能够表述网络信息系统连接特性和弱点之间关联性的逻辑关系图称为证据推理网络.定义4.证据推理网络.证据推理网络ERNPage4是一个有向图,表示为五元组ERN={N,E,L,W,D},定义如下:(1)N是带有弱点信息的网络节点的顶点集合,N={h,v}.其中,h表示网络节点,v是h上的一个弱点.(2)E表示有向边的集合,由顶点的有序对唯一确定,如ei=(ni,nj),其中ni=(hi,vi),nj=(hj,vj),表示网络节点hi和hj互联,且弱点vi和vj具有关联性.有向边的起点称为父节点,终点称为子节点.对于ni∈N,定义IN(ni)={e|e=(nh,ni),e∈E,nh∈N}为指向顶点ni的有向边的集合,定义OUT(ni)={e|e=(ni,nh),e∈E,nh∈N}为由顶点ni发出的有向边的集合.此外,为方便描述,将有向边ei记为ni→nj.(3)L定义为逻辑表达式的集合,由括号、与、或运算符组成.L与顶点集合N中的元素一一对应,表示指向同一顶点的各有向边之间的关系.对ni,若有IN(ni)={e1,e2,e3|e1=((h,v1),(h,vi)),e2=((h,v2),(h,vi)),e3=((h,v3),(h,vi))}并且li={(e1∧e2)∨e3},则表示弱点v1,v2与vi之间是AND结构,而弱点v3与vi之间是OR结构.(4)集合W定义为每个顶点的风险权重,与顶点集合N中的元素一一对应,对ni=(hi,vi)∈N,有wi=(fi+pi+ri)/3,其中,fi∈[0,1]表示网络节点hi在功能上的价值,包括信息服务器、数据库、个人主机等;pi∈[0,1]是弱点vi被成功攻击的概率;ri∈[0,1]是弱点的安全影响.W的设定为ERN生成证据链提供了证明力评判标准.(5)D={qn,pptr}为一组数据结构的集合,与顶点集合N中的元素一一对应,qn为长度k的环形队列,用来存放证据.每个队列元素可表示为qn={ts,cptr,s,wt},其中ts为时间戳;cptr存放指向子节点的指针,用来重构攻击流程;s是状态位,可取值为0,1,2,3,分别表示该证据为初始节点、既是初始节点又是虚拟节点、中间节点、虚拟节点;wt存放风险权重.pptr存放指向相应顶点的父节点的指针集合,利用逆向指针来提高证据推理速度.为方便描述,用符号.索引D中各元素.例如di.pptr或di.qni.ts.生成ERN的一般步骤为:(1)由待取证目标网络的管理员或节点主机等设备使用者报告目标网络的拓扑情况;(2)使用Nmap、Nessus等已有的弱点扫描工具在管理域内、外的不同地点对网络进行探测;(3)构建顶点集合N;(4)遍历N中各元素,根据节点连通性及弱点关联性递归生成有向边集合E与逻辑表达式的集合L;(5)根据预设的风险权重计算集合W并初始化数据结构集合D.显然,上述步骤(1)与(2)的执行速度依赖于网络拓扑特点及规模,而取证效率和实时性可通过事先生成各目标网络ERN的策略加以解决.以图3的网络信息系统为例,ABCDE为五台Linux服务器,A存在危及管理员root的弱点v1和危及用户user的弱点v2;B开启rshd服务,允许A和D的root用户以root身份执行远程shell命令;C开启telnetd和rshd服务,rshd服务仅允许D的root用户以root身份执行远程shell命令,且C具有危及root的弱点v4和危及用户user的弱点v5;D开启sshd服务,具有危及root的弱点v3;E具有危及root的弱点v6,A的用户user和C的用户root能够以root身份通过ssh访问D;B和E的root用户能够以root身份通过telnet访问C.建模上述网络系统,可抽象为图4所示的ERN,该网络共10个网络节点,11条有向边.3.4证据链推理ERN为攻击流程重构和证据链推理提供了框架,任何证据链都可以用ERN的子图来表示,而ERN的状态转换是以带有弱点信息的网络节点的形式完成的,因此证据预处理的主要功能是将证据从攻击行为特征映射为ERN的图顶点,该过程用Page5函数map()来表示.证据链推理算法要解决的问题可抽象为:设e1,e2,…,en为按时序排列的证据流,对ei,i=1,2,…,n,在e1,e2,…,ei-1中查找集合{eh|h=1,…,i-1},使ERN图中存在一条由map(eh)指向map(ei)的有向边,即map(eh)→map(ei).设有3个对应相同ERN图顶点的证据ei,ej,ek,即三者的map()有相同取值.另有证据em,若存在有向边map(ek)→map(em),则一定存在有向边map(ej)→map(em)和map(ei)→map(em).这种关联关系的传递性为证据链的推理提供了有利条件,提高了推理效率.证据链推理处理流程主要包括以下3个步骤:1.初始化.按时序取出下一个证据ei并转换为ERN2.关联分析.分析方法根据ERN图顶点ni的不同情图顶点,设map(ei)=ni;赋值di.qni.ts为ei的时间戳ti.况而不同.A.IN(ni)=0,表示该证据ei是起始节点,赋值di.qni.s=0,di.qni.wt=wi.B.IN(ni)>0,根据逆向指针di.pptr索引顶点ni的所有父节点,若父节点nj对应的dj.qn非空,则称有向边(nj,ni)为顶点ni的真值边,若将ni的所有真值边代入li并使li为真,则表示该证据ei是中间节点,记录所有使li为真的各父节点的数据结构集D中的相应元素cptr为di.qni,并赋值di.qni.s=2,di.qni.wt=wi.C.IN(ni)>0,且将ni的所有真值边代入li并使li为假,则表示该证据ei与其他证据没有关联性,重新将ei看作起始节点,赋值di.qni.s=0,di.qni.wt=wi.3.证据链生成.从入度为零的ERN图顶点开始进行广度优先搜索BFS(),根据遍历到的各顶点的cptr域生成证据链.以图4描述的ERN为例,数据结构集D中的相应元素随着证据的变化情况如图5所示.况而不同.A.IN(ni)=0,表示该证据ei是起始节点,赋值di.qni.s=0,di.qni.wt=wi.3.5时序无关的证据链推理证据链推理算法能否得出正确的结果完全依赖于证据的时序性.为克服证据的时间戳不同步问题,本节提出一个时序无关的证据链推理算法,处理流程如下:1.初始化.按时序取出下一个证据ei并转换为ERN图顶点,设map(ei)=ni,且ei的时间戳为ti.2.节点判断.若di.qni.s=1或di.qni.s=3,则执行(di.qni.s)--,di.qni.wt=wi,di.qni.ts=ti,并转步1;否则转步3.3.关联分析.分析方法根据ERN图顶点ni的不同情B.IN(ni)>0且将ni的所有真值边代入li并使li为真,则表示该证据ei是中间节点,记录所有使li为真的各父节点的数据结构集D中的相应元素cptr为di.qni,并赋值di.qni.s=2,di.qni.wt=wi.C.IN(ni)>0且将ni的所有真值边代入li并使li为假,则遍历ni的父节点,并查找增加虚拟记录后能使li为真的父节点nj.执行步3对nj进行关联分析,若转分支A,则分别赋值dj.qnj.s=1,dj.qnj.cptr=di.qni,di.qni.s=2,di.qni.wt=wi;若转分支B,则分别赋值dj.qnj.s=3,dj.qnj.cptr=di.qni,di.qni.s=2,di.qni.wt=wi;若转分支C,表示该证据ei与其他证据没有关联性,重新将ei看作起始节点,赋值di.qni.s=0,di.qni.wt=wi.注:由于节点为虚拟记录,因此未计风险权重,待该节点实际出现,会在步2中补计.4.证据链生成.从入度为零的ERN图顶点开始进行广度优先搜索BFS(),根据遍历到的各顶点的cptr域生成证据链.如图6给出了近似推理的过程演示,其中顶点3为虚拟记录.Page63.6时间复杂度分析设ERN的顶点数和边数分别为|N|和|E|.证据链推理算法的步骤1可在常数时间内完成,步骤2的平均复杂度为Ο(|E|/|N|),步骤3中图的广度优先搜索的时间复杂度为Ο(|N|+|E|),因此证据链推理算法的时间复杂度为Ο(|N|+|E|).对于时序无关的证据链推理算法中的步骤1和步骤2为常数时间复杂度,由于需要判断虚拟节点的父节点状态,因此步3的平均复杂度为Ο((|E|/|N|)2),广度优先搜索的时间复杂度为Ο(|N|+|E|).在完全有向图时|E|取最大值为|N|2-|N|,因此|N|+|E|(|E|/|N|)2,时序无关的证据链推理算法的时间复杂度为Ο(|N|+|E|).3.7证据链的证明力电子证据的证明力是指证据在证明案情事实方面的说服力,存在证明力大小之分.ERN的元素W定义了每个顶点的风险权重,因此NetForensic将证据链上的每个证据所对应的风险权重累加和作为证据链的证明力评判标准.推理过程中产生的虚拟记录表示该证据未被NetForensic获取,因此不计风险权重,设证据链上所有证据的风险权重累加和为w,虚拟记录所对应的风险权重累加和为w,式(1)给出了证据链的证明力confidence的计算方法,confidence值越大,所得证据链的证明力越大,反之,证明力越小.4实验过程及结果分析为进一步检验所提出方法的有效性,我们在LinuxRedHat7.3上用C语言开发了NetForensic原型系统,采用著名的开源网络入侵检测系统Snort2.4.3作为攻击检测组件,并利用Graphviz对证据链进行可视化,选用曙光服务器(CPU2.4GHz,MEM8GB)为测试环境,分别进行了2组相关实验.4.1参数设置为了评判证据链的证明力,需要设定ERN的风险权重.由于每个弱点利用的难易程度不同,所以概率也不同,为突出实验效果,我们不妨假定所有弱点的概率相等、且网络节点的功能价值属性也相等,至于弱点的安全影响,我们将弱点按照影响范围分为9类,并赋予一定的权值,如表1所示.由此设定,可用权值作为ERN的风险权重.弱点类别1系统管理员,管理系统设备、系统文件和系统进2系统管理员部分权限.3任意多个系统普通用户,有更多独立私有的资源.0.64任意一个系统普通用户的权限和任意一个或多5任意一个系统普通用户,由系统初始化产生或7任意一个系统普通用户的部分权限.89在物理层和目标系统连通的远程访问者,通常4.2Lincoln数据集的推理结果实验1采用MITLincoln实验室的LLDOS1.0和LLDOS2.0.2数据集.产生此数据集的试验床包括由14台主机模拟的外部Internet环境,39台主机组成的内部网络和6台主机组成的DMZ区域,涵盖了包括Windows、LinuxRedHat5.0、SunOS4.1.4和Solaris2.7等在内的多种通用操作系统.该数据集具有很强的代表性,利用攻击检测组件检测大小为179MB的内网数据集,生成的证据种类和数量如图7所示.运行NetForensic对LLDOS1.0数据集的证据进行自动推理,得到图8所示证据链.此证据链清晰直观地给出了攻击者的5个攻击阶段:攻击者首先从主机202.77.162.213扫描整个网络选定目标主机的IP地址范围;然后执行选中ping选项的Sadmind溢出程序验证Sadmind服务是否运行,从而决定最终的目标主机172.16.115.20;接下来,利用Solaris操作系统的Sadmind漏洞实施缓冲区溢出攻击;在获得root权限之后,攻击者通过telnet和rpc安装Mstream后门程序;最后,利用该受控主机,向主机172.16.115.20/172.16.112.10/131.84.1.131发动DDoS攻击.这与MITLincoln实验室给出的攻击过程描述文档全部吻合,NetForensic的有效性得到了验证.由于不存在虚拟记录,此证据链的confidence=100%.推理LLDOS2.0.2数据集得到的证据链结果如图9所示.显然,该证据链也包含了一个完整的攻击序列,依旧采用跳板攻击方式.与LLDOS1.0相同,攻击者也是在主机202.77.162.213实施了攻击,并利用Solaris操作系统的Sadmind漏洞成功地陆续获得了主机172.16.115.20和172.16.112.50的root权限.但相比前者,LLDOS2.0.2攻击过程Page7图7LLDOS数据集的证据种类与数量图8LLDOS1.0数据集的证据链更为复杂和隐蔽,例如,攻击者没有选用极易被屏蔽的“ICMPechoreply”对目标主机进行探测,而是利用合法的“DNSHINFO”查询获得目标主机(一台DNS服务器)的详细信息.需要注意的是,证据链中的阴影节点“FTPupload”表示攻击者利用ftp上传Mstream后门程序和攻击脚本的证据,但由于攻击检测组件漏报了此事件,为保证证据完整性,NetForensic产生了虚拟记录.依据表1设定的权值计算可得该证据链的confidence=86%.4.3原始证据的分析工具及结果除了证据之外,NetForensic还保存了相应的IP数据包作为原始证据,为协助取证调查人员方便快捷地使用原始证据,NetForensic为此专门提供了2个辅助工具———链路分析Link_Analysis和关联分析Association_Analysis.Link_Analysis以取证人员指定的原始证据的属性为输入,例如IP地址,通过遍历原始证据,对该属性进行计数统计,并将结果以图的方式展现,图的顶点为属性值,边则表示各属性之间的连接关系.图10给出了以源IP地址作为属性输入的LLDOS1.0数据集的链路分析结果,顶点的大小表明该属性在原始证据中出现的次数,这样的结果能够使调查取证人员对原始证据的各属性分布有一个清晰直观的宏观认识.Page8图10LLDOS1.0数据集的链路分析结果Association_Analysis的功能是挖掘原始证据中的关联规则和序列模式,图11为关联规则实例,这条规则表明如果攻击者的源IP为192.168.1.30,目的IP是172.16.112.5并且目的端口为161,则攻击类型有98.6%的可能是“SNMPrequestudp”,这样的原始证据在整个证据集合中占90.2%.IPsrc=192.168.1.30,IPdst=172.16.112.5,Port=161Signature=“SNMPrequestudp”(90.2%,98.6%)图11关联规则实例IPsrc=192.168.1.2,IPdst=192.168.1.1,Signature=“ICMPPING”IPsrc=192.168.1.1,IPdst=192.168.1.2,Signature=“ICMPEchoReply”图12序列模式实例4.4TreasureHunt数据集的推理结果实验2采用美国加利福尼亚大学圣塔芭芭拉分校在指导学生进行网络攻防课程设计时收集的TreasureHunt数据集,其网络拓扑按照学生的分组方式划分为Alpha、Omega和DMZ3个子网,共包括MySQL服务器、事务处理服务器、文件服务器和WEB服务器等八台目标主机,虽然网络情况并不复杂,但学生们采用的种类繁多时攻击方式,较为适合NetForensic的功能测试.图13和图14分别给出了相应的证据链,confidence值分别为91.7%和33.3%.表2NetForensic的实时处理性能MIT/LL2000TreasureHunt在资源占用率方面,图15给出了NetForensic的CPU和内存占用率的曲线图,二者的占用情况均处于较低的水平.图12的序列模式实例表明如果在源IP192.168.1.2和目的IP192.168.1.1之间发生类型为“ICMPPING”的攻击,那么在1秒钟之内,会有20.1%的概率会继续产生源IP为192.168.1.1和目的IP为192.168.1.2且类型为“ICMPEchoReply”的攻击.4.5性能分析由于目前针对网络入侵取证的相关研究和文献中均未给出取证的性能测试数据,也没有相应的开源软件供我们进行横向比较.因此表2仅给出了NetForensic在处理上述数据集时的时间开销,可以看出,NetForensic每秒处理的证据数量在100个左右,按文献[19]的观点,“依据入侵检测系统的使用经验,每个检测点平均每天检测出的安全事件数量大约为10~20000个”,NetForensic的处理性能将远超实际处理需求,具备实时推理证据链的条件.入侵事件/个处理时间/s平均处理速度/(个/s)2498905112562473230775结束语如何将多个单独的证据通过合理的逻辑关系联Page9图13Alpha子网数据产生的证据链系成一个较为可信的证据体系,成为网络入侵取证研究所面临的核心问题.NetForensic将弱点关联性的概念引入到网络入侵取证领域,根据网络系统的弱点知识和环境信息构建了证据推理网络,依靠证据推理网络所提供的多阶段攻击推理能力,实现了高性能证据链推理并细化了取证粒度,实验数据表明,NetForensic给出的证据链完整可信,且具备实时推理的条件,为快速有效地调查取证提供了有力保证.在后续研究工作中,我们将会进一步开展快速生成算法等研究工作,并将所做科研工作应用到实际网络环境中加以检验.致谢审稿专家们提出了宝贵的意见,促使论文质量得到进一步提升,在此表示感谢!
