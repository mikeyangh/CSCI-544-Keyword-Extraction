Page1仿生蚊子追踪算法冯翔张进文虞慧群(华东理工大学计算机科学与工程系上海200237)摘要旅行商问题(TravelingSalesmanProblem,TSP)是NP完全问题中最为著名的问题,它易于陈述而难于求解,至今尚未找到准确有效的求解大规模TSP问题的方法.文中提出了能求出TSP有效近似最优解的新的蚊子追踪(MosquitoHost-Seeking,MHS)算法,证明了蚊子的目标追踪行为和MHS数学模型的一致性、蚊子追踪算法的收敛性,并通过理论证明确定了MHS算法中各参数的选择范围.蚊子追踪算法是一个全新的仿生算法.文中以TSP问题为载体,详细提出了蚊子追踪算法的动机、生物学模型、数学模型、算法、理论基础(数学证明)及大量实验结果.从理论和实验两方面证明了蚊子追踪算法能够求出TSP问题理论上的优化解.关键词仿生算法;旅行商问题;蚊子追踪算法;分布并行算法1引言南加州大学的Leonard教授在《Science》上发表的论文“MolecularComputationofSolutionstoCombinatorialProblems”中指出:“自然(生物学和物理)和计算(计算机科学)是相关的,重要的学术成Page2为计算机的发明和计算机学科的产生和发展奠定了理论基础.纽厄尔和西蒙提出了图灵机的扩展概念物理符号系统及物理符号系统假说.物理符号系统假说的内容是:人、动物等智能体是物理符号系统,广义的计算机及算法也是物理符号系统,那么可以得出以下推论.可以用广义计算机及算法来模拟人、动物等智能体的智能行为.以上理论也论证了本文的可行性,即计算机及算法可以模拟蚊子追踪目标的自然演化行为.既然自然法则有计算属性,计算机及算法又有模拟的可能性[6],本文的目标是探索和发展一个全新的自然演化算法———蚊子追踪算法(MosquitoHost-SeekingAlgorithm,MHSA).通过研究和模拟蚊子目标追踪行为,建立运动学和动力学模型,研究复杂环境和复杂交互模式下群体智能的演化机制,建立个体微观行为与群体宏观智能之间的关系模型,研究基于蚊子追踪行为模型的分布并行智能处理理论与方法,并用以求解TSP问题.一些组合优化问题(CombinationalOptimiza-tionProblems,COP),如旅行商问题(TravelingSalesmanProblem,TSP)属于一类典型的NP完全问题(NP-completeproblems),这类问题的计算时间复杂性随问题规模增大成指数性增长.TSP问题易于陈述而难于求解.自1932年Menger提出以来,至今尚未找到准确有效的求解大规模TSP问题的方法.在过去的几十年里,一些新的仿生、仿物理方法被提出,用来求解TSP问题的近似优化解.这些仿生方法包括:(1)演化算法.如遗传算法(GeneticAlgorithm,GA)[7]、演化策略(EvolutionStrategies)、演化规划(EvolutionaryProgramming)等;(2)行为仿生算法.如蚁群优化(AntColonyOptimization,ACO)[8-9]、粒子群优化(ParticleSwarmOptimization,PSO)[10]、群搜索算法(GroupSearchOptimizer,GSO)[11]等;(3)其他的仿生算法.如人造免疫系统(ArtificialImmuneSystem,AIS)[12]、人造神经网络(ArtificialNeuralNetwork,ANN)、细胞自动机(CellularAutomaton)、广义细胞自动机(GeneralizedCellularAutomaton)、细胞神经网络(CellularNeuralNetwork)、反应生长模型(ReactionandGrowthModel)[13]等.虽然仿生算法是计算方法研究的边缘领域,但却是近些年来计算方法研究领域中的热点.它们发展较快、相当活跃,已被成功地应用于解决现实生活中许多复杂难解的问题,有非常广泛的影响.现有仿生算法的局限性:现有仿生算法使用和应用比较复杂.以蚁群算法为例,由于它的算法结构特点,除了解决图问题(如TSP问题)比较有效以外,很难求解那些不能转化为图问题的问题.另外,现有仿生算法需要更多的参数.对于不同的问题,现有仿生算法为了找到参数有效的设定区间,需要通过多次实验来调整参数.基于现有仿生算法的这些局限性,我们开始研究新的仿生算法.与仿生方法相对比,近年来只有两个重要且成功的仿物理方法被提出求解TSP问题:模拟退火算法(SimulatedAnnealingAlgorithm,SAA)[14]和弹性网络算法(ElasticNet,EN)[15].模拟退火算法的局限性:该算法不能完全描述和处理所待解决问题的动力学特性,特别是那些高维、非线性、随机性问题中的动力学.弹性网络算法的局限性:(1)弹性网络中的目标节点在一维或多维空间中的位置是固定不变的;(2)目标节点之间没有相互作用,不能表达节点间复杂的非线性社会交互行为;(3)弹性网络中的能够形变的橡皮圈是均匀的,连接各个节点的橡皮带也是均匀的,不能表示非对称力的作用;(4)弹性网络仅仅在吸引力的作用下伸展,而没有考虑其他种类的力,如反作用力、不对称的单向力等;(5)弹性网络仅考虑对称的弹性形变,而不考虑不对称的弹性形变;(6)弹性网络中在橡皮圈上任何两个节点间,或目标节点和弹性网络节点间,力的属性是关于它们之间距离的函数,这个函数是固定的,从而力的属性也是固定的,不能反映随时间变化的属性;(7)弹性网络仅仅是一个单回路弹性圈,而不是多回路弹性圈.以上这些局限性严重妨碍了弹性网络方法在复杂动态优化问题中的应用.弹性网络方法不能处理系统中随机发生的、并发的复杂的社会交互行为,也很难刻画问题中实体的自治性、意志和愿望.由于目前存在的自然演化方法有其局限性,本文通过模拟“蚊子”追踪目标,建立受各种目标物“力”的作用而不断“运动”的生物学模型,以Lyapunov第二稳定性定理为理论基础,以弹性网络理论和方法为基点,发展提出一种新的自然演化算法结合仿生仿物理算法优点的蚊子追踪理论和方法,旨在克服现有方法的一些局限性,使之能够:(1)具有高度内在并行性,能处理大规模复杂问题;(2)用Lyapunov第二定理能证明算法收敛且解为全局Pareto最优解,逼近理论上的最优解,较近来一些文献上提出的自然演化算法及其他常用优化算法有更好的性能;(3)参数的选取范围是从算法的收敛性、Page3有效性等理论证明中推导而来,不需要先验知识和算法学习;(4)算法与现存的自然演化方法、其他常用优化方法在动机、原理、优化机制、基本单元及状态、生物物理模型、数学模型、算法、理论基础(数学证明)等方面有着本质的不同;(5)蚊子追踪模型能够描述复杂、高维、非线性、宏观演化、微观演化、随机的行为和动力学;(6)能够实现多目标优化;(7)算法具有强的鲁棒性,蚊子追踪算法能够独立于初始条件、问题规模、参数小范围变化等;(8)能处理问题中各参数的实时改变,能处理动态复杂问题;(9)算法通用性、灵活性强,容易应用于更广范围的不同复杂问题.2TSP问题描述TSP问题是求解遍历n个城市的最短路径的问题.TSP问题中的主要变量和TSP矩阵犕(t)分别见表1和表2.符号nCi(xi,yi)dijpijxijifxij=1,thenpijcanbepassed;orelseZtheshortestpaththroughncitiesproblemrij城市C1…Cj…CnC1r11,x11,d11…r1j,x1j,d1j…r1n,x1n,d1nCiri1,xi1,di1…rij,xij,dij…rin,xin,dinCnrn1,xn1,dn1…rnj,xnj,dnj…rnn,xnn,dnn定义1.TSP问题的数学描述为3蚊子追踪算法的动机和仿生模型在自然界中,雄性和雌性蚊子一般靠吸花蜜以及植物的汁液为营养素维持生命,但雌蚊子还有吸食动物血的能力.雌蚊子吸血主要是为了繁殖后代.也就是说,只有雌蚊子才会追踪动物目标去袭击它们.在日常生活中,观察发现雌蚊子的追踪能力十分强,它们主要是通过探查一定距离内的二氧化碳(CO2)和1-辛烯-3-醇(C8H16O)来寻找目标.雌蚊有追踪动物目标的行为,而雄蚊没有.如图1所示,一群蚊子正在随机搜索能袭击的动物目标.可以总结雌蚊追踪目标的3个步骤如下(见图2):(1)雌蚊感觉到二氧化碳和气味物质.(2)判断出是它喜欢叮的动物的气味,就朝浓(3)感觉到动物体温的热幅射后就降落(确认度高的方向找去.是皮肤就开始吸血).在本文中,提出了蚊子追踪算法(MHSA)模拟蚊子的目标追踪探查行为,求解TSP问题.蚊子追踪算法把TSP矩阵犕(t)中的每一个元素视为一个人造蚊子mij,n个城市间的TSP问题求解就转化为了一群蚊子(n×n)的目标追踪行为.由于TSP矩阵由mij组成,因此让mij分别代表矩阵中的元素和Page4对应的人造蚊子.如图3所示,一群人造蚊子等圆周角均匀地分布在一个可袭击的目标周围.每个人造蚊子,只要是雌蚊子都会被目标产生的二氧化碳、气味物质和幅射热吸引,而向目标飞去.人造蚊子和目标之间的径向距离代表这个人造蚊子的个体效用(utility),即它追踪目标的成功值(successvalue).二氧化碳和气味物质浓度越高,这群人造蚊子朝目标追踪的速度越快.当所有人造蚊子停止移动,达到一个平衡状态,就得到TSP问题的优化解.图3中,靠近圆周的点代表这群人造蚊子的初始状态,靠近圆心的点代表这群蚊子经过目标追踪行为(向目标运动)后的更优状态.更具体地说,每个人造蚊子有一个灰度值(grayscalevalue),rij.灰度值将随人造蚊子的移动而在0和1之间不断改变.当人造蚊子停止移动(静止),它的灰度值将为0或1.当灰度值为1时(rij=1),代表相应的人造蚊子(mij)追踪到目标;对应于TSP问题,代表路径(pij)(城市i和城市j之间的路径)为通(着黑色),即最短路径Z通过路径pij.相反,rij=0代表人造蚊子mij没有袭击到目标,则TSP问题中路径pij为断(着白色),最短路径Z不通过路径pij.当人造蚊子在运动过程中,它的灰度值为(0,1)间的数,对应TSP问题中,路径pij的着色为不同灰度的灰色.不同灰度代表人造蚊子追踪目标的成功度.此外,每个人造蚊子mij有一个性别属性xij.xij=1代表人造蚊子mij为雌性,否则xij=0代表人造蚊子mij为雄性.xij不随时间而演化.xij的存在一方面符合仿生系统中蚊子的客观属性,另一方面也为解决城市间有路径不通的TSP问题提供可能.我们知道雄蚊子是不吸血的,故目标对它们没有吸引力.类比之,在TSP问题中,两两城市间如果路径不通,TSP的最短路径不应该包含这两两城市间这条不通的路径.因此,如果遇到有城市i和城市j之间路径不通的TSP问题,蚊子追踪算法的数学模型中就可以设xij=0;否则,xij=1.在蚊子追踪模型中,xij=0,代表人造蚊子mij为雄性,该蚊子的灰度值rij就不会随时间而演化,将一直为0,只有雌蚊的灰度值rij才会随蚊子mij的运动而改变.雄蚊的灰度值将总为0,对应于TSP问题就是相应的路径pij总为断(着白色),从而蚊子追踪算法求出的TSP的最短路径将不会包含城市i和城市j之间路径pij.总结蚊子追踪模型的机理为Motionofmi←→j(1)(2)(3):即为蚊子追踪的数学模型和相应算法,他们将会在下一部分中提出.为了解释蚊子追踪模型与TSP问题求解之间的关系,我们举一个简单的TSP的例子.图4显示了用蚊子追踪算法求解TSP问题过程中各路径灰度的变化和最短路的求解过程.在计算过程中,两两城市间的路径的灰度随着对应的人造蚊子的灰度值的并行计算,而并行变化.图4中(d)所示,此TSP问题的解最短路Z为Page5在最终状态t=end时,r12=r21=1,r23=r32=1,r34=r43=1,r45=r54=1,r56=r65=1,r67=r76=1,r71=r17=1,其余rij=0.4蚊子追踪算法的数学模型在这一部分,将定义求解n个城市TSP问题的蚊子追踪算法的数学模型.首先,我们介绍一个变量cij,代表城市对(Ci,Cj)间的权重,cij(t=0)=maxi,jdij-dij,cij(t>0)∈[0,1].在蚊子追踪模型中,cij也代表人造蚊子mij强弱.cij越大,说明人造蚊子mij追踪能力越强,越容易追踪到目标,接触到皮肤达到静止,求得优化点;反之,亦然.cij和rij将随人造蚊子对目标的追踪而并行演化.让uij(t)代表在时刻t人造蚊子mij和目标之间的径向距离,让J(t)代表在时刻t所有人造蚊子的整体效用,分别定义为在时刻t,由目标(host)产生的吸引力函数P(t),定义为P(t)=ε2ln∑n其中0<ε<1,P(t)越大,人造蚊子追踪目标越快,TSP问题优化越快.目标产生的吸引使人造蚊子,尤其是效用最小的人造蚊子(成功值最小,距目标最远的蚊子)向目标运动,从而使其个体效用增大.在时刻t,人造蚊子间的交互行为函数Q(t)定义为Q(t)=∑n人造蚊子能够在以下因素的影响下,沿着自己的径向轨道向目标运动:(1)个体目标追踪行为.(2)蚊子群整体目标追踪行为.(3)目标的吸引力.(4)人造蚊子群之间的交互行为.这4种吸引因素促使人造蚊子向目标追踪运动.我们将这4种因素对人造蚊子mij产生的吸引力用混合吸引函数Eij(t)来表示,定义为Eij(t)=-λ1uij(t)-λ2J(t)-λ3P(t)-λ4Q(t)(4)其中0<λ1,λ2,λ3,λ4<1.为了动态并行地求解TSP问题,模型中每一个人造蚊子mij可以分别按下式迭代地更新rij和cij,从而达到求出优化解(最短路)目的.dcij(t)/dt=-λ1uij(t)drij(t)/dt=-λ1uij(t)cij(t)-λ2J(t)rij(t)-λ2J(t)人造蚊子mij的运动方程定义为其中Q(t)uij(t)=-{[1+exp(-10(t)uij(t))]-1-0.5}.duij(t)/dt=Ψ1(t)+Ψ2(t)烄Ψ1(t)=-uij(t)+γvij(t)Ψ2(t)=-λ1-λ2J(t)烅uij(t)烆其中γ>1.vij(t)为关于uij(t)的分段线性函数,定义为5求解TSP的并行蚊子追踪算法否可达),蚊子追踪算法如算法1.已知n个城市的坐标和xij(城市i和j之间是算法1.蚊子追踪算法.1.初始化人造蚊子的数量为n×n;并行初始化人造蚊子的性别为xij;并行初始化人造蚊子的灰度值rij为均值;并行初始化人造蚊子的强弱值cij为dij;初始化相关的系数ε,λ1,λ2,λ3,λ4分别为0.8,0.05,0.05,0.9,0.9.2.据式(1)并行计算每个人造蚊子的个体效用值uij(t)和duij(t)/dt.3.分别据式(6)和(5),并行计算每一个人造蚊子的drij(t)和dcij(t).4.分别据公式rij(t+1)=rij(t)+drij(t)/dt和cij(t+1)=cij(t)+dcij(t)/dt并行更新每一个人造蚊子的灰度值rij(t)和强度值cij(t).5.如果所有的人造蚊子停子追踪达到静止,即所有duij(t)/dt=0,那么此时所有人造蚊子的灰度值rij(t)为Page6TSP问题的优化解,成功结束计算;否则转到第2步.6蚊子追踪算法的生物学模型和数学模型的一致性证明在第3节和第4节,我们已分别介绍了蚊子追踪算法的生物学模型和数学模型,现在我们给出两者的一致性证明.命题1.据式(5)和(6)分别更新人造蚊子mij的强度值cij和成功度值(灰度值)rij,将使这个人造蚊子追踪目标的速度(式(7)中的Ψ2(t))发生改变.证明.让dcij(t)式(5)和式(6)中的第j项.当rij据式(6)更新,式(6)的第1项和第2项将分别使人造蚊子mij产生如下的速度增量:〈duij(t)/dt〉r〈duij(t)/dt〉r=λ2uij(t)rij(t)J(t)类似地,当rij据式(6)更新,式(6)的第3项和第4项将分别使人造蚊子mij产生如下的速度增量:〈duij(t)/dt〉r〈duij(t)/dt〉r同样,对式(5),能求得〈duij(t)/dt〉c3,4.因此得∑4[-λ1-λ2J(t){rij(t[])因此,据式(5)和式(6)分别更新c(j)j=1人造蚊子mij的追踪目标的速度发生改变,其改变量为式(7)中的Ψ2(t).命题2.据式(5)和(6)分别更新人造蚊子mij的强度值cij和成功度值(灰度值)rij,式(5)和(6)中的第1项和第2项将使人造蚊子mij向目标运动,即该人造蚊子的个体效用uij将增加,其增加程度与证明.据式(9)和式(10),式(5)和(6)第1项(λ1+λ2)成正比.和第2项的和为〈duij(t)/dt〉r〈duij(t)/dt〉cuij(t[λ1+λ2J(t)(λ1+λ2)x2因此,式(5)和(6)的第1项和第2项将使uij(t)单调增加.命题3.蚊子追踪数学模型中,如果ε较小,则目标的吸引力函数(式(2))的增加,将会使离目标最远的人造蚊子向目标飞近.即,使人造蚊子中最小个体效用增加.证明.假定H(t)=maxi,j[exp(H(t)/2ε2)]2ε2∑n对以上不等式的符号两边同时取对数,得H(t)2ε2ln∑n因为nn是常数,而ε较小(0到1之间的小数),我们得到H(t)≈2ε2ln∑n这就证明了在时刻t,目标吸引力函数P(t)代表所有人造蚊子mij中最大的一个-u2人造蚊子中最小个体效用.因此,增加目标吸引力函数P(t),将使最小的uij(t)增加.命题4.据式(5)和(6)分别更新cij和rij,将使人造蚊子中离目标最远的那个人造蚊子向目标运动,即最小uij增加,其增加程度与λ3成正比.子mij向目标追踪的速度增量为duij(t)dt3=〈duij(t)/dt〉r证明.由目标吸引力函数P(t)产生的人造蚊据式(5)和(6),得dP(t)dt=P(t)uij(t[])=λ3P(t)ij(t)u2=λ3ω2Page7其中,ωij(t)=exp[-u2因此,使用式(5)和(6)会使P(t)单调增加.又根据命题3,P(t)的增加会导致人造蚊子中最小效用增加,其增加程度与λ3成正比.命题5.据式(5)和(6)更新cij和rij,将导致所有人造蚊子的效用增加,即所有人造蚊子会向目标运动,其增加程度与λ2成正比.证明.与命题2类似,当人造蚊子mij据式(5)、(6)更新强弱值cij和目标追踪成功值rij,整群人造蚊子的效用函数J(t)的增量将非负.即dJR(t)增量非负意味着J(t)将会单调增加,增加程度与λ2成正比.命题6.据式(5)和(6)更新cij和rij,将导致所有人造蚊子的交互函数Q(t)单调减少,其减少程度与λ4成正比.证明.与前面类似,有duij(t)dt4=λ4Q(t)那么,我们得dt=Q(t)dQ(t)=λ4Q(t)因此,Q(t)单调减少,其减少程度与λ4成正比.7蚊子追踪算法的收敛性和参数分析7.1收敛性分析在这一部分,将证明蚊子追踪算法中所有人造蚊子将会收敛于它们的稳定状态(平衡静止状).即对应于TSP问题,蚊子追踪算法一定能求出有效的优化解.数学中,稳定性理论(StabilityTheory)研究微分方程和动力学系统的解的稳定性.由于前面提出的蚊子追踪算法的数学模型是由微分方程组成,且算法的生物学模型中一群人造蚊子是在目标的吸引力下向其追踪运动,故具有动力学特征.因此,用稳定性理论证明蚊子追踪算法的收敛性具有可行性.稳定性理论中,稳定性的定义包括Lyapunov稳定性和结构稳定性.我们下面将证明蚊子追踪算法满足Lyapunov稳定性.Lyapunov稳定性是检查有动力学特征的模型(系统)是否具有稳定性的一种方法.它比检验是否具有稳定性的其他方法更为通用.Lyapunov方程是用来证明模型的状态点是否具有稳定性的一个或一组方程.要证明我们的蚊子追踪算法的收敛性需要找到蚊子追踪模型的一个适当的Lyapunov方程.Lyapunov稳定性证明方法的主要优点是不需求出Lyapunov方程(状态方程)的根.当所求解的问题用各种方法都不能求得准确解时,这个优点将非常关键.而大规模的TSP问题正是不能求解准确解的问题,并且我们在TSP问题和解之间构建的桥梁———蚊子追踪生物学模型、数学模型和算法,具有非线性动力学特征,因此,用Lyapunov稳定性理论证明蚊子追踪算法能够收敛且能求出TSP问题有效的优化解,既可行又非常适合.那么蚊子追踪模型为什么具有动力学特征?判定动力学系统的标准是看其是否为能量开销(energy-cost)系统.能量开销(energy-cost)系统的特征是系统的总能量将随着时间的推移而减少,直至能量为零.在蚊子追踪的生物学模型中,目标(host)对所有的人造蚊子都具有吸引力,目标吸引力即为该模型的能量,使整个模型运动.随着时间的推移,目标吸引力不断变化,一旦目标吸引力为零,蚊子追踪的生物学模型将会停止运动,达到稳定的状态.对应于TSP问题,其求解最短路的目标将会使每一个城市对间的路径的灰度不断演化,当最短路径找到,路径的灰度将全部为黑色(1)或是白色(0),达到稳定状态,不再演化.因此,我们的求解TSP问题的蚊子追踪模型具有动力学特征.明显地,在具有动力学特征的模型中,可通过度量能量来判断整个系统的稳定性.在蚊子追踪算法的数学模型中,我们用“混合目标吸引力函数(hybridattractionfunctionEij(t))”来对模型中的目标吸引力进行定量化,此函数类似于其他动力学系统中的能量函数.在下面的收敛性证明中,将构建一个基于目标吸引函数的正定函数作为Lyapunov函数.通过分析所构建的Lyapunov函数是否随时间单调减少,来判断蚊子追踪模型的稳定性.下面我们先介绍Lyapunov第二稳定性定理.Lyapunov第二稳定性定理.考虑到函数L(X)有(1)L(X)>0(正定,positivedefinite);(2)dL(X(t))/dt<0(负定,negativedefinite).那么L(X(t))被称为Lyapunov方程的备选方Lyapunov第二稳定性定理的机理是很容易理程,X满足Lyapunov渐近稳定性.Page8解的.蚊子追踪模型是由一群人造蚊子和一个目标组成.我们可以想象,如果目标消失,对人造蚊子的吸引将不存在,而目标消失之前的吸引力又不会储存,因此,这群人造蚊子一定会停止运动达到一个静止状态.这个最终的静止状态就是稳定的平衡状态.对于Lyapunov第二稳定性定理来说,Lyapunov方程的一个好的选择是蚊子追踪模型中的混合吸引力函数.当然,如果在证明过程中需要对此函数进行一些变形,也是可以接受的.定理1.如果条件式(13)成立,蚊子追踪算法将收敛于一个稳定的平衡状态.证明.对于蚊子追踪模型,我们定义一个Lyapunov方程L(R(t))如下:R(t)据式(6)更新,R(t+1)=R(t)+ΔR(t+1);Δrij(t+1)≈drij(t)=-λ1uij(t)rij并行初始化和更新后,得到的矩阵犚要进行(1)rij=0|xij=0.如果xij=0,那么rij=0.(2)非负性:0rij1.如果mini,jrij<0,那么(3)标准化:让rij=2rij∑n这样是为了满足TSP问题的约束(见定义1),即rij=2且∑n∑nj=1cij据式(5)并行更新后,矩阵犆也要进行以上3步骤的处理.通过使用上面提到的3个步骤,矩阵犚和矩阵犆将在单位1维空间中演化.因为0rij1,那么R(t)>0.所以L(R(t))>0.以下3个步骤的处理:这样是为了确保雄性人造蚊子的灰度值总为0.让rij=rij-mini,jrij.其中drij(t)/dt=drij(t)=cij(t)xij(t)exp-cij(t)rij(t)xij(t其中,duij(t)/dt=uij(t)=-λ1-λ2J(t)drij(t)/dt=所以dL(R(t))/dt=∑i,j[λ1+λ2J(t)如果式(11)中各项之和小于0,那么dL(R(t))/dt<0.即cij(t)xij(t)exp-cij(t)rij(t)xij(t[λ1+λ2J(t)分析上式(12):当xij(t)=0,那么rij(t)=0,cij(t)=0.因此TSP矩阵中的元素当xij(t)=0时不需要演化更新计算.事实上,仅xij(t)≠0的TSP矩阵元素被处理为雌性人造蚊子.因此,在蚊子追踪算法的演化模型中xij(t)≠0.除了矩阵元素xij(t)=0,rij(t)=0,cij(t)=0,总得到0<rij(t),cij(t)1.所以cij(t)rij(t)xij(t)>0且cij(t)xij(t)>0.那么expcij(t)rij(t)xij(t我们有明显地,除了TSP矩阵元素xij(t)=0,rij(t)=0,cij(t)=0,那么uij(t)式(12)的第1项大于0.因此要使式(12)存在,第2项λ1+λ2J(t)λ3P(t)uij(t)+λ4Q(t)λ1+λ2J(t)根据Lyapunov第二稳定性定理,只要我们据式(13)恰当地选择参数λ1,λ2,λ3,λ4,蚊子追踪算法Page9的收敛性能够保证.即,当t→,那么R(t)→R.7.2参数分析在蚊子追踪算法中仅仅只有5个参数,它们是ε,λ1,λ2,λ3和λ4.这里,我们分析它们,然后指出它们应该怎样选值.首先,ε代表目标对人造蚊子的吸引力的强度.ε越大,所有人造蚊子将朝目标移动得更快.因此,ε影响TSP问题的收敛速度.据命题3,ε应该选取较小的值,通常0<ε<1.定理2.关于蚊子追踪算法中的参数λ1,λ2,λ3,λ4,可以据式(13)得以下结论.(1)如果λ1,λ2,λ3和λ4同时成比例变化,蚊子追踪算法的解将不变.因此,我们能让λ1,λ2,λ3,λ4∈(0,1).(2)无论λ3在(0,1)间选择什么值,蚊子追踪算(3)当λ4比λ1,λ2之和大较多时(满足式(16)),证明.(1)从式(13),可以得到结论1.(2)对于式(13),其中J(t)uij(t)=1;uij(t)=-uij·exp[-(uij)2/2ε2]P(t)Q(t)uij(t)=-1将式(13)中正的项放在“<”左边,负的项移动右边.那么式(13)成为λ1+λ2<-uij·exp-(uij)2/2ε[法的收敛性几乎不受到影响.蚊子追踪算法收敛.式(14)中,因为uij∈[0,1]且0<ε<1,那么uij·exp[-(uij)2/2ε2]通常n为较大的常数,所以11n+n在式(14)中要视为λ3的系数,因此λ3几乎(3)基于结论2,式(14)将近似为不影响蚊子追踪算法的收敛性.-Q(t)uij(t)=1因此,式(15)为因此,当λ1+λ20.45λ4时,条件式(14)将满足,蚊子追踪算法将收敛.其中λ4λ1+λ28实验结果这一部分,给出关于蚊子追踪算法3个方面(如何使用、有效性和并行性)的详细实验结果.首先,使用一个非常简单的(小规模)TSP问题,一步一步详细解释蚊子追踪算法是怎样使用.其次,用蚊子追踪算法去求解大量的、大规模随机产生的TSP问题,测试算法的有效性,并给出实验结果.最后,给出了用蚊子追踪算法在超级并行计算机集群上计算不同规模的TSP问题的真实收敛时间,测试算法的并行性和效率,并与文献中最新的并行算法相比较.所有的实验都是在联想深腾6800高性能计算集群上完成的,该机群系统拥有64个计算结点,每一个结点的配置为CPU2.4GHz,内存24GB,硬盘500GB.8.1蚊子追踪算法的使用为了能解释清楚蚊子追踪算法是怎样求解出TSP问题的解,又不占用太多的文章篇幅,这里我们使用一个非常小规模的8个城市的TSP问题为例,用蚊子追踪算法找出这个实例的遍历8个城市的最短路径,并给出算法计算过程中的详细步骤.随机产生8个城市节点的坐标(见图5),即初始化这8个城市的X轴和Y轴坐标为0到1之间的随机数,Ci(xi,yi)为C1(0.5619,0.0418)C2(0.9851,0.7751)C3(0.7311,0.9593)C4(0.7900,0.3382)C5(0.2407,0.8863)C6(0.0110,0.1451)C7(0.5684,0.3134)C8(0.6208,0.1119)蚊子追踪算法计算过程.步骤1.1.xij:由于有8个城市节点,故在蚊子追踪模型中有64个人造蚊子.因为没有城市间的节点是不可到达的,故所有xij=1,i=1,8,j=1,8.即模型中所有人造蚊子都为雌性,64个雌Page10性人造蚊子都要并行进行演化.2.cij:(1)初始化人造蚊子的强弱值cij与两城市节点间的距离dij相关,cij(t=0)=maxi,jdij-dij.这样处理是为了让求最大化问题变为求最小化问题(TSP最短路问题).(2)让dii=8,i=1,8.让8个人造蚊子mii=8,i=1,2,…,8为非常非常弱,使它们不可能追踪到目标.即让rii≠1.为城市节点Ci的坐标.(3)当i≠j时,dij=(xi-xj)2+(yi-yj)(4)对初始化的矩阵犆,还要做以下3步处理:①cij=0|xij=0.如果xij=0,那么cij=0.②非负性:0cij1.如果mini,jcij<0,那么让cij=③标准化:让cij=2cij∑8cij-mini,jcij.是为了满足TSP问题的约束条件∑8i,j=1,2,…,8..初始化的矩阵(犮ij)8×8为00.27990.27740.28750.27960.29200.28890.2965烄0.279400.30070.28850.28830.27740.28250.28060.27690.300700.28430.29660.27990.28140.27780.28770.28930.285100.28170.28270.28850.28890.27890.28820.29640.280800.29080.28270.27860.29100.27700.27950.28150.290500.28660.28790.28940.28360.28240.28870.28380.281100.2897烆0.29670.28130.27850.28880.27950.28910.3.rij:初始化:(t=0)(1)初始化所有人造蚊子mij的灰度值rij为均值,即(狉ij)8×8=(0.25)8×8.这里rij被初始化为均值.此外,rij也可以被初始化为0到1之间的随机数.事实上,基于我们所做的大量实验的结果,发现不论rij始何初始化,都不会对所求的优化解产生影响.(2)对初始化的矩阵犚,还要做以下3步处理:①rij=0|xij=0.如果xij=0,那么rij=0.②非负性:0rij1.如果mini,jrij<0,那么让rij=③标准化:让rij=2rij∑8rij-mini,jrij.步是为了满足TSP问题的约束条件∑8i,j=1,2,…,8.4.Z(R):步骤2.并行计算和更新每一个人造蚊子的灰度值rij和cij强度值(这里我们仅给出蚊子追踪算法第1步演化迭代的结果,t=1).1.并行计算rij和cij的增量:(1)Δrij:根据式(6),得Δrij≈drij/dt=-λ1uijrij-λ2J其中,uijrij=-cijxijexp(-cijrijxij),Jrij=-cijxijexp(-cijrijxij),rij=PPrij=2∑nQ(2)Δcij:根据式(5),得Δcij≈dcij/dt=-λ1uijcij-λ2J其中,uijcij=-rijxijexp(-cijrijxij),Jcij=-rijxijexp(-cijrijxij),Pcij=Prij=-1Q2.并行更新rij(t=1)和cij(t=1):3.在并行更新完rij(t=1)和cij(t=1)后,矩阵犚和犆需要分别使用步骤13.(2)和步骤12.(4)中的3步进行处理.第1次并行更新后的矩阵(狉ij)8×8为Page11..00.27690.27330.28780.27640.29470.28980.3011烄0.276900.30840.29020.29010.27430.28140.27860.27330.308400.28390.30230.27790.27970.27450.28780.29020.284000.27910.28070.28880.28950.27640.29010.30220.279100.29410.28190.27600.29470.27430.27780.28070.294100.28810.29010.28980.28140.27970.28880.28190.288200.2903烆0.30110.27860.27450.28950.27600.29010.第1次并行更新后的矩阵(犮ij)8×8为00.27880.27600.28740.27840.29280.28890.2977烄0.278800.30350.28920.28920.27670.28230.28020.27600.303500.28440.29870.27960.28100.27690.28740.28920.284400.28050.28180.28810.28870.27840.28920.29870.280500.29230.28270.27810.29280.27670.27960.28170.292300.28760.28910.28900.28240.28100.28810.28270.287600.2893烆0.29770.28020.27690.28870.27810.28920.优化了很多.能得到以下结论:第1次并行更新后Z(R)(t=1)=9.9441,比Z(R)(t=0)参数λ1,λ2,λ3,λ4和ε,根据定理2和我们做的大量实验(1)当ε越大,蚊子追踪算法的收敛速度越快.(2)当参数λ1,λ2,λ3和λ4成比例改变,实验结果不会受到影响.(3)参数λ3的选取,对蚊子追踪算法的收敛性和所求得的解影响不大.(4)为了使蚊子追踪算法收敛,即求解出TSP问题的优化解,需要根据式(16),设定参数λ4远大于参数λ1和λ2之和.在重复步骤2的并行迭代更新第149次后,我们得到8个城市节点TSP实例的最优解(遍历8个城市的最短路见图9).蚊子追踪算法在迭代第149步后,得每一个人造蚊子的灰度值rij(t=149)如表3.rij(t=end)12345678100000101200110000301001000401000010500100100610001000700010001810000010灰度值rij=1代表城市节点i和j之间路径为通(着黑色),即最短路经过路径pij.同时,也代表人造蚊子追踪到目标.反之,如果灰度值rij=0,代表城市节点i和j之间路径为断(着白色),即最短路不经过路径pij.对应地,也代表人造蚊子没有追踪到目标.表4总结了此TSP实例的计算结果.从表4可以得知,蚊子追踪算法在求得优化解收敛以后,不论再并行计算演化多少步,其优化解不变.而且,对于该TSP问题,用蚊子追踪算法求解,其所得优化解和其他结果都相同.这表明了蚊子追踪算法具有相当好的稳定性.因为此实例规模相当小,我们仅用了一个并行节点计算.通过大量的实验,我们发现所有灰度值rij总会收敛于0或1.当TSP问题规模较小时,收敛时间和步数少;当规模较大时,收敛时间和步数大.即使当TSP问题有上千个城市节点时,蚊子追踪算法也能每次都收敛,千万个人造蚊子的灰度值rij将经过数万次的并行计算更新,而最终收敛为0或1.我们曾做过实验,在超级并行计算机集群上,用250个并行计算节点,并行计算5000个城市节点的TSP问题,用蚊子追踪算法花28694s(约8h)得到优化解,25000000个灰度值并行计算28694s后全部收敛于0或1.图6~图9分别给出了人造蚊子的灰度值对应于TSP实例的优化,从初始t=0到t=149收敛过程中的演化情况.图中,两城市节点间的直线的灰色度越深,代表rij越大;当rij=1时,达到稳定优化状态,我们用实线表示,以区别于灰度值较小的虚线;当rij越小,直线的灰色度越浅;当t=149,蚊子追踪算法收敛时,所有rij不是为1就是为0,两两城市节点要么为实线连接,要么无连钱(连线为白色),遍历城市节点的最短路线自然显现,求得了TSP实例的最优解.图6当t=0时,人造蚊子的灰度值对应于TSP问题的优化Page12图7当t=10时,人造蚊子的灰度值对应于TSP问题的优化图8当t=30时,人造蚊子的灰度值对应于TSP问题的优化图9当t=149时,人造蚊子的灰度值对应于TSP问题的优化8.2蚊子追踪算法的有效性我们已随机选取大量的不同规模的TSP问题,用蚊子追踪算法去求解.TSP问题的规模从几个城市到上千个城市节点,蚊子追踪算法总是能够收敛并且求出TSP问题的优化解.在真实的自然界里,蚊子间在追踪目标时很少有合作行为,每个蚊子独自追踪目标.在我们的蚊子追踪模型中,每一个人造蚊子在没有信息交换的情况下并行演化和运动.因此,蚊子追踪算法具有内在并行性,但只能求出问题的近似解.如图10和图11所示,虽然蚊子追踪算法能求得TSP问题的优化解,但也易于陷入局部优化.8.3蚊子追踪算法的并行性和效率蚊子追踪算法由于其内在的并行性,为不能用传统方法求解的问题提供了有价值的、可能求近似优化解的方法.蚊子追踪模型中,所有人造蚊子的灰度值rij和强弱值cij在没有信息交换的情况下并行计算和更新,这就是蚊子追踪算法并行性的基础.大量的实验结果也证明了蚊子追踪算法好的并行性和高的计算效率.对于不同规模的TSP问题,其真实的计算收敛时间和迭代步数见表5.我们分别使用1和16个集群上的并行计算节点来完成表5中TSPLib中的典型的TSP实验.表5中,“T16”和“T1”分别为MHSA用16和1个并行计算结点计算TSP问题收敛时间.“S16”为Page13MHSA用16个并行计算结点计算的加速比,S16=T1T16.“E16”为MHSA的并行效率,E16=S1616.表5MHSA算法求解不同规模TSP问题的收敛时间和效率TSP问题测试集1ch1306.265.110.50.656252kroA15012.5120.69.60.63kroA20032.122328.810.20.63754ts22550.7656.913.00.81255lin318135.82144.715.80.9875如图12所示,当蚊子追踪算法以非并行方式在一个并行计算节点上计算时,收敛时间随TSP规模的增大呈指数增长,这与其他准确性方法相类似.但当蚊子追踪算法以并行方式同时在多个集群的并行节点上计算时,收敛时间大大降低.实验结果验证了蚊子追踪算法的并行性.求解TSP问题并行性较好的最新的自然演化算法有:并行遗传算法(ParallelGeneticAlgorithm,P-GA)(2008)[16],并行蚁群算法(ParallelAntColonyOptimization,P-ACO)(2009)[17],并行遗传蚁群算法(ParallelGenetic-AntColonyAlgorithm,P-GACO)(2002)[18],并行免疫算法GenericParallelImmuneAlgorithm,GP-IA)(2009)[19]和改进的并行免疫算法(ImprovedParallelImmuneAlgorithm,IP-IA)(2011)[20].我们将MHSA与这些最新的并行自然演化算法在并行效率方面进行实验比较.实验结果见表6.测试集算法并行计算TSP问题1ch1302kroA1503kroA2004ts2255lin318如图13所示,对于不同规模的TSP,MHSA算法比其他并行算法的并行计算时间少很多.如图14所示,MHSA求解不同规模的TSP的并行效率都大于0.6,而其他的并行算法的并行效率通常在0.1到0.5之间,MHSA的并行性更好.Page14图13MHSA与其他并行算法的并行计算时间比较图14MHSA与其他并行算法的并行效率比较9结论本文以TSP问题为载体,提出了受蚊子追踪目标行为启发的蚊子追踪算法(MHSA).此算法将TSP矩阵中的每一个元素处理为一个人造蚊子,TSP问题的求解就转化为一群人造蚊子对目标的追踪行为.在蚊子追踪模型中,每一个人造蚊子独立地追踪目标,朝着目标不断运动演化.人造蚊子向目标移近一步,它们的灰度值和强度值发生相应的演化.当所有人造蚊子停止运动(追踪到目标或没有追踪到),蚊子追踪模型达到稳定状态,所有人造蚊子的灰度值将收敛为1或0,映射到TSP问题城市节点间的路径着色上,就得到了TSP问题的优化解.MHSA的仿生模型、数学模型、并行算法、模型算法的一致性证明、收敛性证明、参数分析在本文中被详细的阐述.此外,怎样使用MHSA算法以及该算法的有效性和并行性相关的实验结果也在本文中给出.理论和实验都证明,蚊子追踪算法能够收敛,能够求出TSP问题的优化解,并在并行性上有其他算法不能替代的优势.蚊子追踪算法除了能求解TSP问题以外,应用领域主要还有网络、信息融合、多目标优化和智能系统中现有方法难以处理的某些复杂问题,具体为:(1)多传感器信息融合,如机器人运动中多传感器信息融合问题.(2)网络动态优化问题,如内容分发网络缓存资源分配问题、保障QoS的带宽动态分配问题.(3)智能系统中的复杂的优化问题,如涉及各类社会行为多Agent系统中的优化问题.(4)高性能集群计算机系统工作流均衡问题.(5)多目标优化问题.(6)目前传统方法难以求解的某些复杂问题,如DNA序列聚类、匹配,蛋白质序列预测问题.针对以上应用问题,根据蚊子追踪算法的特点,我们的解决方案如下:(1)将上述问题转化为蚊子追踪算法能并行求解的数学问题描述.(2)改进蚊子追踪算法的具体数学模型、动力学方程等去求解这些问题.改进的方法,一是从问题出发;二是从类似本文中的收敛性证明和有效性证明方法反推.(3)算法中参数的选取和设定.其方法同(2).(4)提出算法步骤.根据应用的问题和改进后的蚊子追踪算法的数学模型而提出,并设定算法如何初始化和终止.(5)用大量的实验和模拟对改进后的蚊子追踪算法进行测试,检验其对具体应用问题的有效性、收敛性、并行性等方面的性能.
