Page1一种保持结点紧凑的虚拟网络映射方法刘新刚怀进鹏高庆一沃天宇(北京航空航天大学计算机学院北京100191)摘要虚拟网络映射是网络虚拟化中最基本的问题之一.虚拟网络映射可分解成结点映射和链路映射两个阶段,之前的研究更加侧重于链路映射,对结点映射只采取简单的方式进行,不利于资源利用率的提高.之前的结点映射方法有两个主要问题:(1)优先占用带宽较大的结点,不利于资源的合理配置;(2)将结点映射与链路映射完全分隔处理,逻辑相邻的虚拟结点可能映射到分散的物理结点上,致使虚拟链路占用更多的网络资源.文中提出一种结点紧凑的虚拟网络映射方法,将所有符合条件的物理结点都作为虚拟结点的候选宿主,扩大了宿主的选择空间,有利于资源的合理配置;同时选择那些分布紧凑的结点作宿主,将相邻的虚拟结点映射到邻近的物理结点之上,减少虚拟链路对网络资源的占用.实验结果表明:文中方法可以提高资源的利用率,并显著地提高了虚拟网络请求的接受率.关键词虚拟网络;虚拟网络映射;紧凑;优化1引言网络虚拟化[1-2]使用虚拟化和网络技术将底层的物理资源组织起来,以虚拟网络的形式向外提供可定制的计算环境供用户按需申请使用.虚拟网络由虚拟结点通过虚拟链路连接而成.多个虚拟网络可以同时在相同的物理资源上运行,它们之间彼此隔离、相互独立.网络虚拟化技术已经成为解决许多问题的重要手段,可以增强网络的灵活性、安全性和可管理性.互联网研究人员利用它来构建新的网络结构,部署新的网络协议,增强服务的质量保障能力[3-5];云计算研究人员利用它按需动态生成虚拟网络环境,在满足用户需求的同时,最大限度的提高物理资源的利用率[6].虚拟网络映射是网络虚拟化中最基本的问题之一.它负责为虚拟网络请求分配资源,将虚拟结点映射到物理结点(称之为该虚拟结点的宿主)上,将虚拟链路映射成物理网络中的一条或者多条路径.与互联网中采取尽力而为的策略不同,虚拟网络映射采取资源预留机制为虚拟网络请求分配足额的资源以保障服务质量.由于物理资源是有限的,如何在满足需求的前提下提高底层资源的利用率就成了虚拟网络映射的关键.虚拟网络映射是一个极具挑战性的问题.虚拟网络请求的网络结构具有多样性,虚拟网络映射必须能适应不同的拓扑结构,并且在分配资源时同时满足结点和链路对资源的要求[7];虚拟网络请求动态性强,在进行资源分配时无法获知后续到达的虚拟网络请求的信息.即使能事先预知所有虚拟网络请求的信息,虚拟网络映射问题也是一个NP-hard问题,可以转化为多路分离器问题[8];更进一步,即使预先确定结点映射,在流不可分割的情况下,虚拟链路映射问题仍是一个NP-hard问题,可以转化为不可分割流问题[9].研究人员提出了多种启发式算法来求解虚拟网络映射问题[7,10-13].然而,这些研究大多侧重于链路映射,主要是寻找链路映射可行的条件和最优的链路映射等,对结点映射只采取简单的策略,如带宽优先[7]、随机[14]等.然而,结点映射决定了链路映射的起点和终点,对链路映射和整个虚拟网络映射都有着巨大的影响.此前的结点映射方法存在两个主要的问题:首先,优先选择带宽资源较多的物理结点作为宿主的这类策略虽然可以在一定程度上提高当前请求的接受率,但它总是优先占用带宽资源最充裕的结点,对后续请求产生较大影响,整体上不利于请求接受率的提升.如图1所示,虚拟结点a、b、c依据带宽优先策略分别映射到带宽资源较多的物理结点D、E、B上,当虚拟网络请求2到达时,已经没有带宽资源充足的结点可以做虚拟结点d的宿主.而图2中的结点映射能有效避免这种情况的发生.其次,此前的映射方法将结点映射和链路映射完全分开处理,可能造成逻辑相邻的虚拟结点映射到物理结点后分布分散,导致虚拟链路占用更多的网络资源.例如,虚拟网络请求1的虚拟结点的分布在图1中比图2中分散,从而虚拟链路bc和ca在图1中占用的网络资源比在图2中多.本文提出一种结点紧凑的虚拟网络映射方法,可以有效地避免上述问题.首先,对于每个虚拟结点预选出所有符合其条件的物理结点作为候选宿主并将它们组织成簇,再从每个簇中选出一个结点(称之为簇头)作为对应虚拟结点的宿主,这样可以有效地扩大每个虚拟结点的宿主选择空间,而不是每次都占用那些带宽资源最多的结点,有利于资源的合理配置,提高整体的请求接受率;其次,在选择簇头时充分考虑链路映射对资源的占用情况,选择分布紧凑的物理结点作为宿主,将逻辑上相邻的结点映射到邻近的物理结点之上,减少虚拟链路占用的网络资源,提高资源的利用率.Page3具体地,我们通过虚拟结点的平均分布距离来衡量映射后虚拟结点分布的紧凑程度,证明了在带宽资源不受限的情况下最紧凑结点映射就是最优结点映射.由于虚拟网络映射问题本身的复杂性决定了最紧凑结点问题在计算上并不简单,我们证明最紧凑结点映射问题属于NP-Complete问题并且不属于APX[15],即没有常数边界的多项式时间近似算法.因此,我们设计了启发式算法LS_SDM来求最紧凑结点映射问题的近似解.同时,在分簇过程中我们要求候选宿主结点除了要满足计算能力的需求外,还需要通过1-割检验[14],使得LS_SDM算法求解的结点映射存在可行的链路映射与之对应的概率极大[14].基于此,我们设计了结点紧凑的虚拟网络映射算法,算法先通过LS_SDM寻找紧凑的结点映射,然后寻找对应的链路映射.如果存在可行的链路映射与之对应,则完成虚拟网络请求的映射;如果没有可行的链路映射,那么再次执行算法LS_SDM寻找新的紧凑的结点映射,重复上述过程.如果通过多次独立尝试仍然没有映射成功,那么该虚拟网络请求不存在可行映射的概率趋近于1.最后,本文通过一系列实验来验证算法的有效性.实验结果表明,本文方法求解的映射虚拟结点分布更加紧凑,占用的资源较少,可以显著提高虚拟网络请求的接受率.本文第2节分析相关工作;第3节对虚拟网络映射问题进行描述,对虚拟网络映射、可行映射和最优映射等进行明确定义;第4节给出结点映射紧凑程度的定义,分析最紧凑结点映射问题,证明其在带宽不受限的情况下即为最优结点映射,证明它属于NP-Complete问题并且没有常数边界的多项式时间近似算法,随后给出启发式算法求它的近似解;第5节给出分簇方法,并在前一节的基础上提出结点紧凑的虚拟网络映射算法;第6节对本文提出的方法进行实验验证;最后,在第7节总结全文.2相关工作虚拟网络映射本质上是一类资源分配问题.与一般的资源分配问题不同,虚拟网络映射具有许多新特性,如资源请求具有网络结构,需要同时满足结点与边的约束等,文献[7,10]对这些特性进了详细的分析与总结.虚拟网络映射是一个复杂的问题,早期的研究从不同角度对问题空间进行限制,并在此基础之上提出了不同的解决方法[11-13,16].如文献[16]只考虑带宽的限制,文献[13]限定虚拟网络请求为特定的网络结构,文献[11]提出了一种基于图同构的回溯查找算法,在图同构近似算法的基础上寻找映射方案.为了应对图同构问题的高复杂性,作者限定了搜索的路径长度,限定了问题的解空间.这类添加附加限制的方法虽然有助于简化问题,但同时也极大地制约了这些方法的性能和适用性.Yu等人[7]第一次详细分析了虚拟网络映射的特点,给出了解决虚拟网络映射问题需要满足的约束,提出了两阶段的映射方法,全面考虑了虚拟网络映射的各项约束.Yu提出底层网络支持流分割的思想,使得链路映射问题可以转化为多商品流问题(Multi-CommodityFlow,MCF)[17],简化了链路映射的复杂性.然而,为了提高在链路映射阶段找到可行链路映射的概率,Yu在结点映射阶段采取带宽优先的策略,优先选择网络带宽大的物理结点作为宿主.这种策略虽然有助于提高当前请求的接收率,但不利于后续请求的接受,从全局来看不利于资源的优化配置.Chowdhury等人[10]同时考虑结点映射与链路映射两个阶段的信息,将虚拟网络映射问题建模成一个混合整数规划问题.作者引入了位置约束,并依据该约束将物理结点划分成簇,接着在每个簇中引入一个扩展结点和多条连接扩展结点与簇内结点的扩展边组成扩展图.限定每个簇中只能有一条扩展边被选中,从而通过选定的扩展边来确定选定的宿主.由于混合整数规划是NP-Complete问题,作者放松其整数的限制,将其转化为线性规划问题进行求解.然而,如果所有虚拟链路的两个端点都分处于不同簇中,这种方法有较好的性能;一旦这个条件不满足,这种方法求得的近似解性能很差.实际上,通常将一个虚拟网络请求部署到同一个数据中心,上述条件无法满足,因此这种方法的实用性受到极大限制.Hou等人[14]着重研究了结点映射与链路映射之间的关系,提出了一种检验结点映射是否存在可行的链路映射与之对应的方法,证明了该方法的充分必要条件.由于充要条件的验证在计算上不可行,作者进一步提出简化的检验方法.简化方法是结点映射存在可行的链路映射与之对应的必要条件,并且计算简便.基于此,作者提出了“随机映射加检测”的虚拟网络映射方法.然而,作者没有提出有效的结点映射方法,简单的随机策略缺乏对资源优化的整体考虑,不利于资源利用率的提高,影响了虚拟网络请求的接受率.以上研究工作更多地关注在链路映射,对结点映射缺乏深入的分析研究,也没有提出较好的结点映射方法.然而,结点映射决定了虚拟链路的起点和Page4终点,对虚拟网络请求是否被接受和其占用多少资源有着重大影响.在本文中,我们对结点映射进行分析,提出一种保持结点紧凑的结点映射方法,并在此基础上提出虚拟网络映射的方法,提高底层资源的利用率和虚拟网络请求的接受率.3虚拟网络映射虚拟网络映射是把虚拟网络请求部署到物理资源上并为其分配资源的过程.我们用无向有权图来描述物理资源和虚拟网络请求.物理资源可以描述为GP=(NP,EP,APN,APE),其中NP表示物理结点的集合,EP表示物理链路的集合,权APN(nP)表示结点nP∈NP的属性,如计算能力;权APE(eP)表示链路eP∈EP的属性,如带宽大小.同样,虚拟网络请求可以描述为GV=(NV,EV,AV分别表示虚拟结点和虚拟链路对资源的需求,如请求分配的计算能力和网络带宽等.定义1(虚拟网络映射).将虚拟网络请求GV=(NV,EV,AVAPN,APE)上称为虚拟网络映射,简称映射,记为:GV→GP.虚拟网络映射可以分解成结点映射N和链路映射E:结点映射:N:NV→NP;链路映射:E:EV→结点映射N将虚拟结点nV∈NV映射到物理结点nP∈NP上,即nP=N(nV).物理结点nP为nV分配的结点资源为fN(nP,nV);链路映射E将虚拟链路eV=(mV,nV)∈EV映射成物理网络中的一条或多条路径,即E(eV)=E(mV,nV)N(mV),N(nV)),其中接结点s和t的所有路径的集合.路径p∈E(eV)为eV分配的带宽资源为fE(p,eV).为了满足GV对资源的需求,分配给虚拟结点nV和虚拟链路eV的资源应符合:fN(nP,nV)=AV∑p∈E(eV)记映射到物理结点nP∈NP上的虚拟结点的集合为ΩN(nP)={nV|N(nV)=nP,nV∈NV};记链路映射后经过物理链路eP的路径集合为ΩF(eP)={p|p∈E(eV),eP∈p,eV∈EV}.物理结点和链路向外提供服务受自身资源的限制,不能超出其能力范围,需要满足如下约束:∑nV∈ΩN(nP)定义2(可行映射).若虚拟网络映射:GV→GP,既满足GV对资源的需求(即符合式(1)、(2)),又不超出GP的能力范围(即符合式(3)、(4)),则称是可行的.若结点映射N同时满足式(1)、(3),则称其为可行的结点映射;若链路映射E同时满足式(2)、(4),则称其为可行的链路映射.结点映射N决定了链路映射阶段虚拟链路的起点和终点.可行的结点映射N和一个与之对应的可行链路映射E组成一个可行映射=(N,E).显然,给定一个可行的结点映射,并不一定存在可行的链路映射与之对应.虚拟结点nV占用的资源为cost(N,nV),有记虚拟链路eV部署后占用的资源为cost(E,eV),有给定可行的虚拟网络映射=(N,E),记cost(E,eV)=∑p∈E(eV)其中,|p|为路径p的长度.整个虚拟网络请求GV占用的资源为cost(,GV)=∑nV∈NV例如,图1中虚拟网络请求1占用的结点资源为20+15+15=50,带宽资源为15×1+10×2+10×2=55;图2中虚拟网络请求1占用的结点资源为50,带宽资源为15×1+10×1+10×1=35.定义3(最优映射).若虚拟网络映射是可行的并且其占用的资源量最小,则称其为最优虚拟网络映射,简称为最优映射,记为最优映射N和链路映射E分别为最优结点映射和最优链路映射,分别记为N和其它可行的结点映射N占用的结点资源相同,但是不同的结点映射决定了链路映射的起点和终点不同,资源.4紧凑的结点映射方法本节中,我们首先引入反映虚拟网络映射属性的指标,给出结点映射紧凑程度的定义并对最紧凑结点映射问题进行深入分析,接着在分析的基础上Page5提出一种紧凑的结点映射方法.4.1最紧凑结点映射问题分析络映射:GV→GP,定义的平均路径长度为定义4(映射的平均路径长度).给定虚拟网映射将GV中的虚拟链路映射成GP中的路径,l为这些路径的平均长度,它可以反应映射占用网络资源的多少.当l越小时,映射所占用的资源越少.例如,虚拟网络请求1在图1中,平均路径长度为(15×1+10×2+10×2)/(15+10+10)=1.57,在图2中的平均路径长度为1.虽然平均路径长度l可以很好地反映出映射占用网络资源的多少,但是它需要在结点映射和链路映射都完成之后才能计算,不能在结点映射阶段就对链路映射可能占用多少网络资源进行一个合理的估算.为此,我们引入虚拟结点的平均分布距离的概念.定义5(虚拟结点的平均分布距离).给定结点映射N:NV→NP,定义结点映射N对应的虚拟结点的平均分布距离为∑nVi,nVd=其中,dist(u,v)表示结点u,v∈NP之间的距离,这里将其定义为结点间最短路径的长度.平均分布距离d反应了虚拟结点在物理网络中分布的紧凑程度,d越小表示分布越紧凑.例如,虚拟网络请求1的虚拟结点在图1和图2中的平均分布距离分别为1.57和1,其在图2中的分布更紧凑.当d取最小值时,对应的结点映射N称为最紧凑结点映射.给定结点映射N,虚拟结点的平均分布距离d随即确定,而l则随着链路映射E的不同而变化.在所有与N对应的链路映射中,当E为它们中占用资源最少的链路映射时,对应的l取极小值,并且趋近或等于d(例如,图1和图2中虚拟网络请求1的链路映射均为对应结点映射下的最优值,l=d),d为l的下界.由于平均分布距离d只与虚拟结点的分布有关,因此一旦给定结点映射N,就可以利用它对所有与N对应的链路映射最少要占用的网络资源进行一个合理的估算.定义6(最紧凑结点映射问题,ClosestNodeMapping,CNM).已知点的集合N={ni},任意两点之间的距离dij=dist(ni,nj)0,结点簇的集合C={c1,c2,…,ck},ciN,i=1,2,…,k,簇间的需求R={rxy},rxy0,1x,yk,x≠y以及常数D.问:是否存在点序列V=〈v1,v2,…,vk〉,使得vi∈ci,1ik,如果i≠j,则vi≠vj,且CNM问题刻画的是GV→GP上的最紧凑的结点映射.将点集N定义为GP中物理结点的集合NP,ci∈C为虚拟结点nVi∈NV的所有候选宿主组成的集合,rxy∈R定义为虚拟结点nVx和nV带宽需求AV射,它将nVi映射到vi上.当Γ(V,R)取最小值时,对应的虚拟结点的平均分布距离d也取最小值,所以结点映射V为最紧凑的结点映射.我们用一个五元组CNM=(N,dij,C,R,D)来描述CNM问题.如果没有式(6)的约束,CNM问题就变成了一个新的问题,我们将其定义为簇头选择问题(ClusterHeader,CH).CH问题只关心能否从每个簇中选出一个点做为簇头,并且这些簇头互不相同,并不关心这些簇头分布是否紧凑.CH问题求解的是CNM问题的一个可行解,而不是最优解.CH问题用一个三元组CH=(N,C,R)描述.定理1.当带宽资源不受限时,最紧凑结点映射即为最优结点映射.证明.设CNM问题的实例Icnm刻画从GV=(NV,EV,AV紧凑结点映射,其解为V.任选一条虚拟链路eVx=(nVi,nV宽资源不受限,所以eVx一定可以映射到一条连接vi和vj的最短路径上.依据式(5),它占用的网络资源为dist(vi,vj)·rij.显然,这也是虚拟链路(nVi,nV至少要占用的带宽资源.对每条虚拟链路都采取上述映射方法,可以构造出一个可行的链路映射E,其总共占用的带宽资源为Γ(V,R).当Γ(V,R)取最小值时,E占用的带宽资源最少,故E为最优结点映射.这样,V和E就可以组成最优虚拟网络映射,故V为最优结点映射.定理2.CNM问题是NP-Complete问题.证明.首先,任意给定一个CNM的实例Icnm和一个点序列V,可以在多项式时间内验证V是否为满足条件的点序列,故CNM属于NP问题.接着,将一个NP-Complete问题归约到CNM问题.考虑下述NP-Complete问题.最小精确覆盖(MinimumeXactSetCover,MXSC)[18-19].已知集合U和U的子集组成的集j)∈EV,它将被映射到Page6合S,函数size:S→Q+和常数B.问是否存在分离集(disjointset)SS,使得S覆盖U,并且下面证明MXSC问题可以在多项式时间内归约到CNM问题.任意给定一个MXSC问题的实例Imxsc,其中U={u1,u2,…,ut},S={s1,s2,…,sw},可以构造一个CNM问题的实例Icnm=(N,dij,C,R,D):N={(sj,ui)|ui∈sj,sj∈S}∪{(s-1,ui)|ui∈U}∪{(s0,ui)|s∈S,uis;ui∈U}(8)dist((sj,ui),(sq,up))=0,烄|sj∩sq|·(1+ε)B,jq>0,j≠q,j>0size(sq)/|sq|,jq<0,q>0烅size(sj)/|sj|,jq<0,j>0(1+ε)B,烆其中,(sj,ui),(sq,up)∈N;ε>0,为任意常数.C={ci|1it}∪{ci+t|1it},其中,ci={(sj,ui)|(sj,ui)∈N,j0},1it(10)ci+t={(s-1,ui)},1itk=|C|=2t.R=RI∪RO其中,RI={rij|1i<jt},RO={ri,i+t|1it},rij=1,1i<jt,ri,i+t=1,1it.D=B可以证明,Icnm存在满足条件的点序列V当且仅当Imxsc存在满足条件的集合S,详细证明过程见附录.不难看出上述构造过程可以在多项式时间内完成,故MXSC问题可以在多项式时间内归约到CNM问题.综上所述,CNM问题属于NP-Complete问题.定理3.如果CNM∈APX,那么P=NP.证明.对于任意MXSC问题的实例Imxsc,可以构造一个对应的CNM实例Icnm.由定理2的证明过程可知(详见附录):其中,opt(Icnm)表示Icnm的最优解.又若CNM∈APX,依据APX的定义[15],存在一个α-approximation[15]算法A,对于任意CNM实例Icnm有当Imxsc存在可行解时,Icnm也具有可行解,综合式(14)、(15),并令式(14)中ε=α,有当Imxsc不存在可行解时,Icnm也不具有可行解,由式(14)有又opt(Icnm)为最优解,所以A(Icnm)opt(Icnm),即有由式(16)、(17)可知,我们可以通过A(Icnm)的结果判断Imxsc是否有可行解.又因为算法A为多项式时间算法,MXSC属于NP-Complete问题.所以若NCH∈APX,则P=NP.由定理1和定理2可知,即使没有带宽的限制,要寻找最优结点映射和最紧凑的结点映射依然十分困难.定理3进一步表明,最紧凑结点映射问题没有常数边界的多项式时间近似算法.因此,接下来我们设计一种启发式算法来求解最紧凑结点映射的近似解.4.2紧凑的结点映射算法我们设计启发式算法的思路是先找出一个CNM问题的可行解,然后再在这个可行解的基础上逐步优化,找出更优的近似解,持续整个过程直至不能进一步优化为止.定理4.CH问题属于P问题.证明.任意给定一个簇头选择问题CH=(N,C,R),构造一个与之对应的二分图G=(A∪B,E).令A=N,B=C,E={(ni,cj)|ni∈cj;ni∈N,cj∈C},这样就构造出了二分图G,且构造过程可以在多项式时间内完成.显然,CH有解与G的最大匹配度等于|C|是等价的.而二分图最大匹配问题[17]可以在多项式时间内解决,故CH问题也可以在多项式时间内求解,即CH属于P问题.证毕.定理4表明CNM问题的可行解可以在多项式Page7时间内求得.只需将CNM问题转化成二分图最大匹配问题,再利用二分图的最大匹配算法即可求解.据此,我们设计出一种求解CNM问题初始解的算法.此外,我们在算法中还引入随机因素(算法1第6~12行),使得每次算法返回的结果都不相同,彼此之间独立性强.求解CNM问题的初始解的算法具体如下.算法1.CNM问题初始解算法.AlgorithmCNM_Initialinput:CNM=(N,dij,C,R,D)output:V//构建二分图1.buildabipartitegraphG=(A∪B,E)1.1.A=N,B=C1.2.E={(ni,cj)|ni∈cj;ni∈N,cj∈C}//求解二分图最大匹配问题2.findamaxmatchingM//|M|≠|C|,表明没有可行解,返回3.if(|M|≠|C|){V=,goto13}//构建初始解4.forall(nt,ci)∈M{vi=nt}5.V=〈v1,v2,…,v|C|〉//随机化初始解6.for(1i|C|){7.ci=ci-{v1,v2,…,v|C|}8.if(ci≠){9.randomselectau∈ci10.vi=u,V=Viu11.}12.}13.returnV其中Viu表示用u替换簇头i所得到的点序列.例如,若V=〈v1,…,vi-1,vi,vi+1,…,vk〉,那么Viu=〈v1,…,vi-1,u,vi+1,…,vk〉.在找到CNM问题的可行解之后,利用局部搜索的思想依次替换其中的一个结点使得近似解更优,持续整个过程直到不能进一步优化为止(算法2第4~14行).算法在寻找替换结点时采取最速下降的策略,即每次替换都选择全部候选结点中使得Γ(V,R)下降最多的结点(算法2第6~12行).求解CNM问题近似解的具体算法如下.算法2.紧凑的结点映射算法.AlgorithmLS_SDMinput:CNM=(N,dij,C,R,D)output:V//求解初始解1.V=CNM_Initial(NCH)//若初始解为,则没有可行解2.if(V==)goto153.dmax=+//持续替换初始解中的一个结点,使结果更优4.while(dmax>0){5.dmax=0,x=null,k=-16.for(ci∈C){7.u=argmin{Γ(Viu,R)|u∈ci;8.if(dmax<Γ(V,R)-Γ(Viu,R)){9.dmax=Γ(V,R)-Γ(Viu,R)10.x=u,k=i11.}12.}13.if(dmax>0){ck=ck-{vk},V=Vkx}14.}15.returnV第7行在簇ci中寻找这样的结点:它没有被选中作为簇头(uV-{vi}),同时又使得Γ(Viu,R)取最小值.只要遍历簇ci中的所有结点即可完成第7行的计算,而簇ci中的结点数不会超过|N|,故其复杂度不会超过O(|N|).算法LS_SDM的复杂度主要由while循环决定.每次while循环中for循环执行|C|次,一次for循环的复杂度不超过O(|N|),故一次while循环的复杂度不超过O(|C||N|).要使while循环不终止,必有执行完该次while循环后dmax>0.又若dmax>0,则必有某个簇ci∈C减少一个结点(第13行),而所有簇ci∈C中的结点总数不超过|C||N|,故while循环的执行次数不会超过|C||N|,所以LS_SDM的复杂性不超过O(|C|2|N|2).5保持结点紧凑的虚拟网络映射上一节求解紧凑的结点映射过程中,我们假设结点分簇已经完成.本节中,我们首先对结点进行分簇,并在分簇过程中结合割检验理论,充分考虑虚拟网络映射过程中的带宽约束.接着在此基础上提出保持结点紧凑的虚拟网络映射方法.5.1结点分簇定义7(割).对网络G=(N,E,AN,AE)的结点集合N的一个划分称为G的一个割.割(S,珚S)将N分成S和珚S=N-S两个部分,称之为网络G的|S|-割.若边e=(u,v)满足u∈S,v∈珚S,则称边e通过割(S,珚S).所有通过割(S,珚S)的边的带宽之和称之为割(S,珚S)的容量,记为ψ(G,S).Page8定义8(k-割检验).N:NV→NP是GV=(NV,EV,AV点映射,常数k∈[1,|NV|].如果N满足式(18),则称N通过k-割检验.ψ(GV,S)ψ(GP,N(S));SNV,|S|=k其中N(S)={nP|nP=N(nV),nV∈S}.图4所示是1-割检验的实例.定理5(可行性检验定理)[14].N有可行的链路映射与之对应,当且仅当N通过所有的k-割检验,其中k∈1,|NV|/2[Hou在文献[14]中给出了定理5的证明.给定一个结点映射,要判断是否有可行的链路映射与之对应需要验证其是否通过全部的k-割检验.然而充要条件的验证复杂度过高,在计算上不可行.与之对应,通过1-割检验是结点映射有可行的链路映射与之对应的必要条件,计算上十分简便,复杂度仅为O(n).文献[14]进一步表明,当结点映射N通过1-割检验时,其有可行链路映射与之对应的概率为93.9%,可以将绝大部分不存在可行链路映射的结点映射排除在外,极大地缩减了结点映射的搜索空间.请求GV=(NV,EV,AV(NP,EP,APN,APE),对于nVi∈NV,选择满足下述条件的物理结点nP∈NP作为它的候选宿主,并将它们组成簇ci.因此,我们采取如下的分簇方法:给定虚拟网络ci={nP|AV任意从每个簇ci中选择一个结点vi∈ci作为虚拟结点nVi的宿主可组成一个结点映射N,依据上述分簇方法,所有的N都能通过1-割检验.又依据文献[14],N有可行的链路映射与之对应的概率超过93%.5.2保持结点紧凑的虚拟网络映射算法本小节提出一种保持结点紧凑的虚拟网络映射算法.给定请求GV和资源GP,算法首先对候选宿主进行分簇;然后利用算法LS_SDM求解一个紧凑的结点映射N;接着基于Yu等人[7]的研究将链路映射建模成多商品流问题,求解与N对应的最优链路映射方案E;进而求出虚拟网络映射问题的解=(N,E).如果没有找到可行的E与N对应,则重新求解一个新的紧凑结点映射N,再接着进行链路映射,重复上述过程.如果经过Ttry次尝试仍找不到可行的虚拟网络映射,算法终止.算法的具体内容如下.算法3.保持结点紧凑的虚拟网络映射算法.AlgorithmCNM_LS_SDMinput:GP=(NP,EP,APN,APE),GV=(NV,EV,AVoutput://构建CNM问题实例,求其近似解1.buildanCNMinstanceIcnm1.1.for(1i|NV|)ci={nP|APN(nP)>AV1.2.C={ci|1i|NV|}1.3.for(1i,j|NR|)dij=sp(nPi,nP1.4.R={rij=AV2.T=0//尝试次数置零3.solvetheIcnm,V=LS_SDM(Icnm)//CNM问题解为,不能完成结点映射4.if(V==){=,goto18}//构造结点映射5.for(1i|NV|)N(nVi)←vi//将链路映射建模成MCF问题,并求解6.accordingthelinkmappingproblem,buildan//若MCF问题有可行解,完成链路映射7.if(Imcfhasfeasiblesolution){8.usetheresulttobuildE9.}else{//MCF问题没有可行解10.if(T<Ttry){11.T++,goto312.}else{13.=,goto1814.}15.}16.=(N,E)//更新资源状态17.updateresoucestatus,GP=GP-(GV)18.return其中函数sp(第1.3行)表示两点间最短路径长度.由于算法CNM_Initial在寻找初始解的过程中加入Page9了随机因素,使得算法LS_SDM每次求得的结点映射结果都不相同,彼此之间独立性强.依据概率论,当尝试次数Ttry足够大时,如果仍然没有找到可行的映射,那么不存在GV映射到GP上的可行映射的概率趋近于1.6实验验证6.1实验环境我们采用虚拟网络映射问题研究中通用的方法[7,10]来进行实验验证.物理资源和虚拟网络请求的网络拓扑均由GT-ITM[20]生成.物理资源由100个结点和约300条边组成,物理结点的计算能力和物理链路的带宽都在[50,100]上均匀分布,其拓扑在实验过程中保持不变.虚拟网络请求随机产生,每个虚拟网络的结点数在[0.8×E[scale],1.2×E[scale]]之间均匀分布.虚拟网络中结点与边的权值分别在[0.8×E[cpu],1.2×E[cpu]]和[0.8×E[bw],1.2×E[bw]]之间均匀分布.实验过程持续1000个单位时间,虚拟网络请求的生存时间符合负指数分布,其数学期望为200个单位时间.虚拟网络请求的到达符合泊松过程,平均每100个单位时间内到达的虚拟请求数为E[con].我们选取与之前最主要的研究结果[7,10]进行比较.“bw-first”表示文献[7]中方法的实验结果.文献[10]通过位置约束的形式给宿主结点的选择范围额外增加了限制,如果虚拟链路两端属于同一个簇,则该算法求解得到的结果性能远远不如文献[7],因此没有在这里呈现其实验结果.此外,为了验证结点紧凑思想的有效性,我们给出两种基于结点紧凑思想而实现的虚拟网络映射方法的结果.一种方法是基于简单的贪婪准则min{duv/rij};u∈ci,v∈cj来求解结点映射而得的方法,其结果用“cnm-greedy”表示.另一种是本文提出的方法,它利用基于最速下降和局部查找思想而设计的启发式算法来求解结点映射,其结果用“cnm-ls-sdm”表示.我们通过“cnm-greedy”和“cnm-ls-sdm”的结果与“bw-first”的结果的对比来验证结点紧凑思想的有效性;通过“cnm-ls-sdm”的结果和“cnm-greedy”的结果的对比来验证本文所提启发式算法的性能.影响实验结果的因素很多,本文选出最主要的参数(如表1所示)并逐一分析它们对实验结果的影响.为了更好地反映出每个参数对实验结果的影响,减少其它因素的干扰,每组实验中我们只变动被考察的参数,而保持其它参数不变.然后通过综合多组实验结果,全面考察各个算法的整体表现.由于虚拟网络请求是随机生成的,为了避免随机因素对实验结果产生扰动,每次实验生成15组虚拟网络请求数据,并用这15组数据的实验结果的平均值作为该次实验的结果.参数TtryE[scale]每个请求中虚拟结点个数的数学期望E[cpu]虚拟结点对计算能力需求的数学期望E[bw]虚拟链路对带宽资源需求的数学期望E[con]每100单位时间内平均到达的请求数6.2实验结果及分析实验结果证实了本文所提算法具有良好的性能,映射的平均路径长度更短,能有效地提高资源的利用率,显著地提高虚拟网络请求的接受率.下面介绍主要的实验结果.(1)增大最大尝试次数Ttry,可以提高CNM_LS_SDM算法的性能;当其超过一定的值之后,进一步增大Ttry,对性能的改善不明显.我们首先考察最大尝试次数Ttry对CNM_LS_SDM算法性能的影响.设置实验参数使系统负载处于一个合理的水平,然后在实验中变动Ttry,观察虚拟网络请求接受率的变化情况,实验结果如图5所示.随着Ttry的提高,接受率也在提高,当Ttry超过一定数值之后,接受率就没有显著的提升.这一结果与此前的分析相一致.从图5中可以看出Ttry=5是一个临界值,因此在下面的实验中,我们设定最大尝试次数为5.图5最大尝试次数对CNM_LS_SDM算法性能(E[cpu]=20,E[bw]=35,E[scale]=10,req_num=60)(2)CNM_LS_SDM算法可以显著缩短映射的通常情况下,虚拟结点分布越紧凑,按照多商品平均路径长度,提高资源的利用率.Page10流算法完成链路映射后,其平均路径长度也会越小.接着我们考察虚拟网络映射完成后,虚拟链路映射成物理路径的平均路径长度的变化情况.平均路径长度反映了映射占用带宽资源的情况,平均路径长度越小,所占用的带宽资源越少,资源利用率就越高.实验结果(如图6)表明,CNM_LS_SDM算法的图6各种实验参数配置下的平均路径长度(3)结点紧凑的虚拟网络映射方法可以显著提高虚拟网络请求的接受率;LS_SDM算法求解CNM问题的结果优于贪婪算法.最后,我们通过虚拟网络请求的接受率来考察算法的性能.从实验结果(图7)可以看出,在各个实验中CNM_LS_SDM算法的接受率都是最高的,CNM_greedy算法次之.这表明我们提出的保持结点紧凑的虚拟网络映射方法是有效的,可以全面稳定的提高虚拟网络请求的接受率.出现这个结果的主要原因有二:①我们在结点映射阶段扩大了宿主的选择范围,而不是只关注那些带宽资源充足的结图7各种实验参数配置下的请求接受率7结论本文提出了一种保持结点紧凑的虚拟网络映射方法,该方法将结点映射和链路映射两个阶段综合起来考虑.与传统方法优先选择带宽较大的结点的策略不同,本文在结点映射阶段将所有满足结点计平均路径长度最小,CNM_greedy算法次之,都优于文献[7]中的方法.这表明基于CNM模型求解的映射可以提高资源的利用率.从实验结果中还可以发现,随着负载的不断加重,平均路径长度不断增长,这表明当负载增大时,需要在更大的范围内配置资源才能满足虚拟网络请求的需求.点,有利于从整体上提高请求的接受率;②我们将结点映射和链路映射结合起来考虑,将相邻的虚拟结点映射到邻近的物理结点上,使结点分布更加紧凑,占用更少的带宽资源.算法CNM_LS_SDM与算法CNM_greedy的主要区别在于求解CNM问题近似解的方法不同.从图7可以看出沿着最大梯度方向进行局部搜索的方法(LS_SDM)求得的CNM问题的近似解优于贪婪算法.而两者的接受率都高于文献[7]中方法的实验结果,这验证了本文所提的保持结点紧凑的映射思想是有效性的.算能力要求并通过1-割检验的结点都作为候选宿主并将它们组成簇,扩大了宿主的选择空间,有利于从整体上提高虚拟网络请求的接受率.接着,我们从每个簇中选择一个结点作为宿主形成结点映射.在选择宿主时考虑链路映射将会占用多少网络资源,选择那些紧凑的结点映射.我们证明在带宽资源不受限时,最紧凑结点映射即为最优结点映射.然而,Page11虚拟网络映射问题本身的复杂性决定了最紧凑结点映射在计算上不可行,我们证明最紧凑结点映射为NP-Complete问题并且没有常数边界的多项式时间近似算法.因此,本文提出了启发式算法求解最紧凑结点映射的近似解,并在此基础上提出了一种保持结点紧凑的虚拟网络映射方法.本文的方法不仅扩大了宿主的选择空间,还会将相邻的虚拟结点映射到邻近的物理结点上,减少了虚拟链路对网络资源的占用.随后,本文通过一系列实验进行验证,实验结果表明,本文方法有效地提升了资源的利用率,全面稳定地提高了虚拟网络请求的接受率.
