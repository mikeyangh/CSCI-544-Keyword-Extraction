Page1异构计算系统中弹性节能调度策略研究朱晓敏贺川王建江江建清(国防科学技术大学信息系统工程重点实验室长沙410073)摘要目前,节能已成为异构计算系统中减少电量开销、提高系统可靠性和保护环境的重要研究内容.传统的节能调度策略侧重于研究如何节能而忽略了用户对任务完成时间的期望,使得任务执行效果受到较大影响.特别是当系统负载较重时,由于电压调节缺乏自适应性,导致在某些情况下(如应急服务)的任务执行效果不可容忍.文中提出一种弹性节能调度策略(ElasticEnergy-AwareScheduling,EEAS),用于动态调度异构计算系统中非周期、独立任务.EEAS策略根据系统负载情况在系统节能与用户期望之间进行权衡,即当系统负载较重时,EEAS优先考虑用户期望,通过动态调整计算节点局部队列中等待任务的执行电压提高任务完成率;当系统负载较轻时,EEAS在尽量满足用户期望的基础上最大限度地降低任务执行电压以实现节能.文中通过大量的模拟实验比较了EEAS、GEA、HVEA和LVEA的性能.实验结果表明,EEAS的调度质量优于其他策略,可有效提高系统弹性.关键词异构计算系统;调度;节能;弹性;动态电压调整1引言随着计算机硬件设备的快速发展,大规模计算系统在成本和体积迅速下降的同时计算能力大幅提升,目前已被广泛用于计算密集型和数据密集型应用[1-2],尤其是由不同计算能力的节点组成的异构计算系统在实际工作中得到了广泛应用.这是因为一方面同一系统中的计算节点可能在不同时期获得,在计算能力上有所差异,同时出于经济效益考虑,那些仍然具有一定计算能力的节点会和新购买的计算节点放在一起;另一方面,系统中通信链路的传输能力可能有所不同,从而构成了一个异构计算系统[3].值得注意的是,大规模异构计算系统消耗的能量巨大.据统计,目前计算中心服务器消耗的能量大约占全球电力总消耗的0.5%,如果照此速度继续发展,预计到2020年,其能量消耗将翻番[4].此外,系统运行过程中产生的热量需要制冷设备(如空调)进行降温调节以维持系统的正常运行环境,保证系统的可靠性,而制冷设备的投入又导致更多的能量消耗.目前,在全球70%的计算中心中,能耗开销已成为第二大运营开销[5];高性能计算系统生命周期内维持正常运行所需的电力成本已经超出了系统的硬件成本[6].与此同时,通过燃料发电产生的大量CO2、SO2和粉尘,对环境带来极大污染[7].因此,研究异构计算系统中的节能调度问题,减少系统能量消耗已成为当前极具发展前景的研究方向.现如今,许多处理器都可在不同的电压下运行(如TransmetaTM5400和AMDAthlon64).不同电压支持不同的处理频率和不同的执行速度,即动态电压调整(DynamicVoltagesScaling,DVS)技术.由于一个处理器的能量消耗与其执行速度满足严格的递增凸函数关系,因此可以通过降低CPU电压使其运行在一个较低的速度,从而降低系统的能量消耗.与此同时,系统的快速响应能力尤为必要,有时甚至是强制的[8-9].例如,对地观测卫星获取的图像数据在传到地面处理中心后,需要低延迟处理,特别是在应对地震、海啸等紧急情况下,系统的快速响应比节能更为重要[10].相反,如果任务不是很紧急,系统应在满足用户需求的基础上尽量减少系统能量消耗.因此,仅考虑能量节约或系统的快速响应能力是不够的,必须在异构系统的开发过程中研究弹性节能问题以提高系统的自适应性和灵活性.另一方面,在实际应用中很多用户对任务完成时间没有特别严格的限制,允许任务的完成时间与预期完成时间存在一定误差.例如,一颗卫星获取的数据首先传到地面数据处理中心进行处理,分析结果用来引导下一次观测.由于数据执行时间的不确定性导致任务完成时间不固定,可能超出用户预期完成时间,但是数据处理结果对下一颗卫星仍然有用[11].而在传统的实时系统中,如果一个任务不能在截止期内完成,则该任务将被拒绝执行.对于非实时系统而言,通常忽略每个用户的期望完成时间,仅关注任务的整体完成时间或系统吞吐率.因此,为提高系统对用户的服务质量,应充分考虑任务的期望完成时间.众所周知,调度是提高系统性能的有效手段.但是,目前大多数调度算法没有考虑异构计算系统中的弹性节能问题,因此研究新的节能调度策略,弥补该方面的不足具有重要的理论意义和应用价值.本文提出了一种基于DVS技术的异构计算系统弹性节能调度策略EEAS.该策略综合考虑了系统弹性和用户期望.EEAS首先满足用户期望,并在此基础上尽量减少系统能量消耗.充分考虑了系统弹性和用户期望.异构计算系统中独立任务调度.本文的主要贡献包括:(1)构建了一种新的调度器模型,在该模型中(2)提出了一种弹性节能调度策略EEAS,用于(3)通过模拟实验评估了EEAS策略的性能.本文第2节回顾与本文相关的研究工作;第3节建立一种弹性节能调度模型;第4节介绍本文提出的EEAS节能调度策略,并对该策略进行分析;第5节通过大量的模拟实验测试EEAS策略的性能;第6节总结全文并给出下一步的研究工作.2相关工作近几十年,人们对分布式计算系统中的调度问题进行了大量研究.实践表明,多机调度在大多数情况下仍属于NP完全问题[12],因此,在实际应用中常采用尽可能接近最优的启发式方法来解决此类问题[8,13].调度算法通常分为两大类,即静态(离线)调度和动态(在线)调度.在静态调度中,任务具有周期性特征,且到达时间已知[14-17].对于非周期到达任务,通常需要采用动态调度算法[18-23].本文提出的调度策略采用动态调度算法,用于调度非周期、独立任务.Aydin等人[14]提出了一种周期实时任务静态调度方法,可根据系统负载情况计算CPU的最优执行速度.Mishra等人[15]提出了一种静态能量管理Page3模式,通过利用静态空闲时间槽节约能量.Yu等人[16]研究了一种离线节能任务分配策略,该策略首先被描述为一个扩展的一般分配问题,之后通过线性启发式方法解决异构DVS实时系统中独立任务调度问题.Zhu等人[17]引入了多处理器系统中空闲时间共享的概念来减少能量消耗,同时提出了两种基于空闲时间共享的节能调度算法,可分别用于调度多处理器系统中独立任务和有依赖关系的任务.尽管这些调度方法可使系统有效节能,但是均属于静态调度算法,不具有处理动态到达任务的能力.目前,已有较多关于分布式计算系统中动态节能调度算法的研究.例如,Ge等人[18]研究了一种分布式DVS调度策略,该策略在不增加任务执行时间的情况下,通过改变任务粒度减少系统能量消耗.Nélis等人[24]提出了两种节能调度算法,即离线算法EDF(k)和在线算法MOTE.两种算法均考虑了带有时间期限的实时任务.Hu等人[19]提出了一种通过虚拟机实时迁移减少能量消耗的方法,该方法把负载分发到多个同构节点上以减少能耗.Laszewski等人[25]研究了计算机集群系统中的虚拟机调度问题,通过DVS技术减少能量开销.Liu等人[26]开发了一种集群系统中能量—性能折衷的任务复制调度算法EPBTDCS,该算法可在任务分配到节点过程中减少通信能量消耗.Zong等人[20]提出了两种节能复制调度算法,即节能复制算法EAD和性能—能量折衷复制算法PEBD,用于提高系统性能并进行能量节约.值得注意的是,这些算法均用于同构计算环境,不适用于具有不同节点计算能力的异构计算系统.而在异构计算系统中,节能问题变得更复杂,因为某些处理器可能以较快的处理速度运行但消耗相对较少的能量.也有学者对异构计算系统中的节能调度问题进行了研究.例如,Hamano等人[21]提出了一种调度策略,可通过调整加速参数来改善系统的节能效果.Zong等人[27]研究了一种节能调度方法EETDS,该方法可以灵活地减小通信能量开销,从而减少任务分配过程中的总能耗.Shekar和Izadi[28]研究了异图1调度器模型构计算环境中的节能调度问题,提出了一种节能调度算法EDLS,通过考虑各种开销因素,将任务分配到能量开销较小的节点上.但是这些方法均没有考虑任务的完成时间限制.与此同时,一些学者研究了异构计算系统中的实时任务节能调度问题.例如,Zikos和Karatza[22]研究了3种基于最小排队的异构集群节能调度算法.Yan等人[23]开发了一种基于集成DVS和自适应竞争的调度算法ABB,该方法可用来优化动态能量消耗和静态能量消耗.Chen等人[29]提出了一种实时任务节能调度策略,该策略可在符合最低满足度的情况下给出近似最优调度方案.韩建军等人[30]针对多处理器系统,以最短任务优先调度为基础,结合共享时间回收等技术,在满足实时任务截止期的基础上尽量节能.但是在这些实时调度算法中,如果一个任务不能在截止期内完成,该任务将被拒绝.因此,对于有期望完成时间但不具有明确截止期的任务,这些算法并不适用.在前期的研究工作中[31-33],我们提出了一些异构多处理系统中的实时任务调度策略,但是这些调度策略都没有考虑任务的节能问题.在本文中,我们针对非抢占、非周期、独立任务,提出了一种基于DVS技术的异构计算系统弹性节能调度策略.该策略采用启发式算法,可根据系统负载情况自适应调整CPU电压,从而在最大化用户满意率的基础上减少系统能量消耗.3数学模型本节主要介绍相关模型、概念和术语.3.1调度器模型本文研究的异构计算系统中,计算节点可通过一个集合P={pj,j=1…|P|}表示.假设系统中的节点是异构的,即所有节点的处理能力不同.同时,通信能力也是异构的,即从调度器到各个处理节点的通信链路具有不同的传输能力.图1给出了系统的调度器模型.Page4在如图1所示的调度器模型中,调度器包括一个用户期望控制器和一个电压选择控制器.两个控制器共同工作,首先满足用户的完成时间期望,然后尽量减小系统的能量消耗.当调度决策制定后,调度器为任务分配执行电压.每个计算节点均有一个局部队列,任务在该队列中排队等待执行.当一个新任务到达后,首先由调度器收集系统状态信息(例如,节点电压级别、正在执行任务的信息和节点局部队列中等待任务的信息等).然后,调度器通过节能调度算法计算新任务是否可以在用户期望时间内完成.在调度过程中,尽量将任务调度到具有较低执行电压的节点上.系统的弹性主要体现在调度器可以调节新到任务和局部队列中等待任务的执行电压,从而提高调度质量.3.2任务模型本文考虑一组非抢占、非周期、独立任务集合T={ti,i=1…|T|},并假设任务之间没有通信.每个任务只能在一个节点上执行,一个任务不能被分割和分发到多个节点上.任务ti用一组参数ti={ai,li,efti}表示,其中,ai,li和efti分别表示任务ti的到达时间、任务大小和期望完成时间.令犃犜=(atij)|T|×|P|为任务的可获得时间矩阵,其中元素atij表示任务ti在计算节点pj上的可获得时间.类似地,犛犜=(stij)|T|×|P|为开始时间矩阵,其中元素stij表示任务ti在计算节点pj上的开始时间.犉犜=(ftij)|T|×|P|为完成时间矩阵,其中元素ftij表示任务ti在计算节点pj上的完成时间.由于节点和通信链路的异构性,令犈犜=(etij)|T|×|P|为执行时间矩阵,其中元素etij表示任务ti在计算节点pj上的执行时间.犜犜=(ttij)|T|×|P|为传输时间矩阵,其中元素ttij为任务ti从调度器到计算节点pj的传输时间.犡=(xij)|T|×|P|为任务分配矩阵,若任务ti被分配到计算节点pj上,则xij=1;否则xij=0.犗=(oij)|T|×|P|为任务执行顺序矩阵,其中元素oij表示任务ti在计算节点pj上的执行顺序.犠=(wij)|T|×|P|为任务等待矩阵,如果任务ti在计算节点pj的局部队列中等待,则wij=1;否则wij=0.3.3能量消耗模型假设系统中的计算节点可进行动态电压调整,即具备DVS能力,那么每个计算节点中的处理器可在不同的电压和频率下工作.目前,处理器中的数字电路大多采用CMOS集成电路,CMOS集成电路的能量消耗主要由静态(泄露)能量消耗和动态能量消耗构成[23].尽管泄露能量消耗在微处理器设计中不能忽略,但由于其在总体能量消耗上所占的比例较少,通常将动态能量消耗作为节能研究的主要对象[4].因此,本文在构建能量消耗模型时仅考虑动态能量消耗.令ecij为任务ti在计算节点pj上的能量消耗,该能量消耗可以表示为其中,ecrj为计算节点pj上的能量消耗率,τi为任务ti的执行时间.节点的能量消耗率ecrj随着执行电压的改变而变化.假设计算节点pj有k个级别的执行电压,用Vj={Vj1,Vj2,…,Vjk}表示,并满足Vj1<Vj2<…<Vjk.任务ti在计算节点pj上的执行电压用vij表示,显然有vij∈{Vj1,Vj2,…,Vjk}.任务ti采用电压vij的能量消耗率记为ecr(vij).因此,任务ti在计算节点pj上执行的能量消耗可以计算为给定任务集合T,计算节点集合P,任务分配矩阵犡,电压集合V,任务执行时间矩阵犈犜,所有任务的整体能量消耗为ecexec(T,P,犡,V,犈犜)=∑P上式中,etij可由式(4)计算:其中,s(vij)表示计算节点pj采用电压vij执行任务ti的处理速度.值得注意的是,在式(3)中,没有考虑节点处于空闲状态时的能量消耗.通常当节点处于空闲状态时,将其电压设定为最低值,即具有最低能量消耗率ecr(Vj1).因此节点空闲状态时的能量消耗可表示为ecidle(T,P,犡,V,犈犜)=∑P=∑Pj=1其中,τidle度长度减去pj执行任务的时间.max|T|个在节点pj上执行任务的完成时间,即计算节点pj的调度长度.异构计算系统的节点能量消耗可以通过式(3)Page5和式(5)得到pec(T,P,犡,V,犈犜)==∑Pecexec(T,P,犡,V,犈犜)+ecidle(T,P,犡,V,犈犜)在本文中,我们考虑了从调度器到各个计算节点的传输能量开销.由于网络的异构性,令ecrtran示从调度器到计算节点pj的传输能量消耗率.因此,任务ti从调度器到计算节点pj的传输能量开销可计算为给定任务集T,计算节点集合P,任务分配矩阵犡,电压集合V,任务传输时间矩阵犜犜,传输所有任务的能量消耗为ectran(T,P,犡,犜犜)=∑P此外,通信链路空闲时的能量消耗可表示为其中,trj表示从调度器到计算节点pj的通信链路传输率.eclink-idle(T,P,犡,犃犜,犜犜)=∑P=∑P其中,ecrlink-idle在空闲时的能量消耗率,τlink-idle点pj的通信链路空闲时间.lec(T,P,犡,犃犜,犜犜)==∑P因此,通信链路的传输能量消耗可表示为ectran(T,P,犡,犜犜)+eclink-idle(T,P,犡,犃犜,犜犜)最后,依据式(6)和式(10)可得到总体能量消耗为tec(T,P,犡,V,犈犜,犜犜)=pec(T,P,犡,V,犈犜)+lec(T,P,犡,犃犜,犜犜)(11)3.4调度目标给定任务集T,调度方案应尽可能使更多的任务在用户期望时间内完成,即j=1为满足任务执行的用户期望,可能会导致系统能量消耗增加.因此在调度过程中,应在满足用户期望的前提下,最大程度地降低系统能量消耗,即(min∑Pj=1∑T∑P∑Pj=1∑T∑Pj=1值得注意的是,仅追求最低能量消耗可能导致任务的完成时间推迟,使其不能满足用户期望.因此,用户期望与系统节能在异构计算系统的调度过程中属于两个冲突目标.本文提出一种弹性调度策略EEAS,可根据系统负载情况在式(12)和式(13)之间进行权衡.当系统负载较重时,EEAS优先考虑满足用户期望;而当系统负载较轻时,EEAS在满足用户期望的前提下尽量降低任务执行电压,以实现系统节能.4弹性节能调度策略EEAS本节我们给出一种弹性节能调度策略EEAS,用于调度异构计算系统中非周期、独立任务.此外,任务具有期望完成时间,但不具有明确的截止期.下面首先介绍EEAS策略的一些性质.性质1.在调度过程中,正在执行的任务不能被抢占.ti,tk∈T,xij=1,[stkj,ftkj]∩[stij,ftij]≠:xkj=0性质2.如果一个任务不能在用户期望完成时间内完成,该任务仍将被分配,并选择能量消耗最少的计算节点.ti∈T,pj,pk∈P,ftij>efti:xij=1|ecij=min{ecik}性质3.对于一个新任务,首先采用最低电压进行试探,如果最低电压不能满足用户期望,逐步提高电压直到满足用户期望或者电压已经达到最高值.Page6(min{vij}:ftijefti)∨(vij=Vjk:ftij>efti)(16)性质4.调度在一个新任务到达后触发,即采用立即调度模式.任务ti在计算节点pj上的可获得时间atij可计算为其中,tstij为ti从调度器到计算节点pj的传输开始时间.任务ti在计算节点pj上执行的开始时间stij为烄atij,atij+rtj,∑Tstij=烅atij+rtj+∑okj<oij,wkj=1烆其中,rj=0表示没有任务正在计算节点pj上执行.rtj表示在计算节点pj上正在执行任务的剩余执行时间.∑T等待队列中排队.时间stij与执行时间etij之和,即i=1任务ti在计算节点pj上的完成时间等于其开始EEAS采用期望完成时间最早最优先策略对新到达任务和局部队列中等待任务进行排队,有如下性质.性质5.当一个新任务被插入到局部队列时,可缩短局部队列中等待任务的执行时间以满足用户期望完成时间,从而需要重新计算队列中等待任务的开始执行时间.那么队列中等待任务tk的新开始时间stkj可计算为stkj=stkj+etij,如图2所示.假设任务ti被插入到计算节点pj的局部队列中,(1)若oij=min{omj|wmj=1},okj=oij+1,则(2)若oij=min{omj|wmj=1},okj>oij+1,则stkj=stkj+etij-∑omj<okj,omj≠oij所示.(3)若okj=min{omj|wmj=1},则stkj=stkj,如图4所示.(4)若oij≠min{omj|wmj=1},okj≠min{omj|wmj=1},okj<oij,则stkj=stkj-∑omj<okj如图5所示.(5)若oij≠min{omj|wmj=1},okj≠min{omj|wmj=1},okj>oij,则stkj=stkj-∑omj<okj,omj≠oijetmj)+etij,如图6所示.其中,etmj表示任务tm在计算节点pj上的新执任务tk在计算节点pj上的新完成时间可以计行时间.算为EEAS调度策略采用启发式算法,在任务分配过程中尽量满足用户期望时间.当一个新任务到达后,首先采用最低电压进行分配试探,然后EEAS计算任务在每个计算节点上的开始时间和完成时间,通过提升任务执行电压以满足用户时间期望.如果最高电压仍不能满足用户时间期望,则调整局部队列中等待任务的执行电压,直到满足用户期望.EEAS在执行过程中选择能量消耗和传输能量消耗最少的节点以减少系统的能量消耗.EEAS调度策略的伪代码如算法1所示.Page7算法1.EEAS策略伪代码.输入:任务及其属性、节点及其属性、链路及其属性、输出:调度方案1.FOREACHnewtasktiDO2.mSelectedNode←NULL;nMSelectedNode←NULL;3.FOREACHcomputationalnodepjINaheteroge-4.Calculatethetransmissionenergyconsumption5.CalculatethestarttimestijusingEq.(18);6.vij←Vj1;7.IFstij+etij>eftiTHEN8.adjustPhase1();9.IFfurtherAdjust==TRUETHEN10.adjustPhase2();11.ENDIF12.IFmeetExpectation==FALSETHEN13.noMeetExpectation();14.ENDIF15.ELSE16.noNeedAdjust();17.ENDIF18.ENDFOR19.IFmSelectedNode≠NULLTHEN20.AllocatetitomSelectedNodeandupdatesched-21.ELSE22.AllocatetitonMSelectedNodeandupdatesched-23.ENDIF24.ENDFOREEAS调度策略首先计算传输能量消耗和任务开始执行时间(见4~5行,算法1).之后EEAS试探系统采用最低电压是否可以满足新任务的用户期望(见6~7行,算法1),如果试探结果为采用最低电压不能满足新任务用户期望,则调用函数adjustPhase1().算法2.adjustPhase1()函数伪代码.输入:任务ti在节点pj上的当前选择电压vij输出:furtherAdjust、meetExpectation和mSelected-1.WHILEvijVjkDO2.Increaseonesupplyvoltagelevelvij←vij++;3.IFstij+etij<eftiTHEN4.furtherAdjust←FALSE;5.meetExpectation←TRUE;6.Calculatethenodeenergyconsumptionecnode7.IFectran8.energyCons←ectran9.mSelectedNode←j;10.BREAK;11.ENDIF12.ENDIF13.ENDWHILE在函数adjustPhase1()中,EEAS逐渐提高新任务的执行电压直到满足其用户期望(见2~5行,算法2).之后,EEAS选择能量消耗最少的节点(见6~11行,算法2),WHILE循环之后,如果变量fur-therAdjust等于TRUE,表明采用最高电压也不能满足用户期望,那么EEAS调用函数adjustPhase2(),进一步调整局部队列中等待任务的执行电压.算法3.adjustPhase2()函数伪代码.输入:节点pj局部队列中等待任务及其属性、任务ti输出:meetExpectation和mSelectedNode的取值1.FOREACHtasktmINthelocalqueueofpjDO2.WHILEvmjVjkDO3.Increaseonesupplyvoltagelevel4.Calculatetm’snewstarttimestmjandexecution5.IFstmj+etmjeftmANDstij+etijeftiTHEN6.meetExpectation←TRUE;7.Calculatethenewnodeenergyconsumption:8.IFectran9.mSelectedNode←j;10.ENDIF11.BREAK;12.ELSE13.vmj=vmj--;14.BREAK;15.ENDIF16.ENDWHILE17.ENDFOR对于局部队列中的等待任务,如果其执行电压没有达到最高,EEAS首先提高其执行电压(见2~3行,算法3).如果电压提高后不能使新任务和队列中等待任务满足用户期望,则将电压调回原值(见12~13行,算法3);否则,说明新任务可在用户期望时间内完成(见第6行,算法3).之后,EEAS寻找能量消耗最少的计算节点(见7~10行,算法3).Page8如果函数adjustPhase1()和adjustPhase2()均不能使变量meetExpectation为FALSE,即所有电压调整均不能保证新任务在用户期望时间内完成,则调用函数noMeetExpectation().算法4.noMeetExpectation()函数伪代码.输入:任务ti及其属性、节点pj及其属性、ti到pj链路输出:nMSelectedNode的取值1.IFectranij+ecnodeij(vij=Vjk)energyConsTHEN2.nMSelectedNode←j;3.ENDIF在函数noMeetExpectation()中,EEAS选择最高电压但具有最少能量消耗的计算节点(见1~3行,算法4).如果新任务采用最低电压可以满足用户期望,则调用函数noNeedAdjust().算法5.noNeedAdjust()函数伪代码.输入:任务ti及其属性、节点pj及其属性、ti到pj链路输出:mSelectedNode的取值1.IFectran2.mSelectedNode←j;3.ENDIF在函数noNeedAdjust()中,EEAS选择具有最少能量消耗的计算节点.回顾算法1,如果变量mSelectedNode不为空,表明某些计算节点可以在满足用户期望的条件下执行新任务,则EEAS将任务分配到能量消耗最少的计算节点上.若没有计算节点可在满足用户期望的条件下执行该新任务,那么EEAS仍选择一个能量消耗最少的计算节点(见19~23行,算法1).定理1.EEAS的时间复杂度为O(|P||Q||K|),其中,|P|为计算节点数,|Q|为局部队列中的等待任务数,|K|为电压级别数.证明.函数adjustPhase1()的时间复杂度为O(|K|),adjustPhase2()的时间复杂度为O(|Q||K|),noMeetExpectation()和noNeedAdjust()的时间复杂度为O(1),其它行的时间复杂度为O(1).因此,EEAS的时间复杂度为O(|P|)(O(|K|)+O(|Q|)O(|K|))=O(|P||Q||K|).证毕.5实验测试本节通过大量模拟实验测试EEAS节能调度策略的性能,将其与贪婪节能(GreedyEnergy-Aware,GEA)调度算法、最高电压节能(HighestVoltageEnergy-Aware,HVEA)调度算法和最低电压节能(LowestVoltageEnergy-Aware,LVEA)调度算法进行比较.GEA,HVEA和LVEA的算法描述如下:GEA:通过调整新到任务的执行电压,尽量满足用户的期望完成时间,同时减少能量消耗;HVEA:所有计算节点以最高电压运行.当分配一个新任务时,选择能量消耗最少的计算节点;LVEA:所有计算节点以最低电压运行.当分配一个新任务时,选择能量消耗最少的计算节点.本文主要从以下几个方面比较了EEAS、GEA、HVEA和LVEA的性能:(1)用户满意率(UserSatisfactionRate,USR):USR=满足用户期望的任务数/全部任务数×100%;(2)总能量消耗(TotalEnergyConsumption,TEC):能量消耗之和;(3)调度跨度(Makespan):任务集合中最后一个任务的完成时间.本文的总能量消耗为归一化能量消耗,类似的处理方法如文献[19]和[25].5.1模拟方法和参数异构计算系统中所有计算节点的电压级别变化从0.9V~1.5V,步长为0.1V.相对应的处理器能量消耗率分别为140MW到1000MW.处理器能量消耗率按电压等级服从均匀分布.此外,假设0.9V和1.5V分别对应处理速度350Kbps和1000Kb-ps[23].处理速度的分布类似于能量消耗率分布.下面给出实验中所用的模拟参数.(1)为体现系统中节点计算能力的异构性,令minSpeed为最小执行电压下的处理速度范围,各节点最低电压下的处理速度在minSpeed内均匀分布;类似地,maxSpeed为最高执行电压下的处理速度范围,各节点最高电压下的处理速度在maxSpeed内均匀分布.为体现网络传输速度的异构性,令参数bandWidth为网络传输率范围,从调度器到各个计算节点的传输率在bandWidth内均匀分布.(2)参数processingPower用于反映计算节点从最低电压到最高电压的能量消耗率范围.参数transmissionPower为从最差通信链路到最佳通信链路的传输率范围,且能量消耗率与通信链路传输率服从均匀分布.(3)参数taskSize表示任务大小.在实验中测试了3种大小的任务,即小任务、中等任务和大任务.例Page9如,0KB~500KB属于小任务,500KB~1000KB属于中等任务,1000KB~1500KB属于大任务.(4)参数expectedTimebase用于控制任务的期望完成时间.式(21)中用户期望完成时间efti的计算类似于文献[34].其中,emaxefti=ai+(1+expectedTimeBase)×emaxi为任务ti的最长执行时间:(5)单位时间内到达的任务数服从泊松分布,参数intervalTime表示两个连续任务间的平均时间间隔.节点数任务数minSpeed/KbpsmaxSpeed/Kbps([900,1100])-([950,1050]),bandWidth/Kbps([1250,1400])intervalTime/staskSize/KBexpectedTimeBase/s(2.0)-(2.0,4.0,6.0,8.0,10.0,processingPower/s([140,1000])transmissionPower/s([10,20])5.2节点数对性能的影响在本组实验中,为测试EEAS策略的可伸缩性,将节点数从8变化到128.图7显示了GEA、HVEA、LVEA和EEAS在用户满意率、总能量消耗和调度跨度3个方面的性能对比.图7(a)显示了所有策略的用户满意率随着节点数的增加而提升,这是因为更多的节点可以保证更多的任务在用户期望时间内完成.从图7(a)可以发现,HVEA一直比其它策略具有较高的用户满意率,因为HVEA始终将电压设定为最高值,导致任务具有较短的执行时间和较早的开始时间,因此满足用户期望的概率较高.相反,由于LVEA采用了最低电压,导致最低的用户满意率.此外,图7(a)显示了EEAS调度策略在用户满意率方面优于GEA算法,这可以解释为EEAS充分利用了节点局部队列中的任务信息,可以提高等待队列中任务的执行电压以提高用户满意率,而GEA仅对新到达任务的执行电压进行调节,忽略了局部队列中的任务信息.从图7(b)中可以发现,尽管HVEA可以提供最高的用户满意率,但其节能效果最差(见图7(a));相反,LVEA具有最少的能量消耗,但其用户满意率最低.上述实验结果表明两种策略均不具有弹性,缺乏在用户满意率和总能量消耗之间进行权衡的能力.此外,从图7(b)可以发现,当计算节点数小于96时,尽管GEA比EEAS的节能效果好,但是大量任务的用户期望无法得到满足(见图7(a)),这是因为当系统负载较重时,EEAS为提高用户满意率增加了能量消耗.此外,当计算节点数大于96时,EEAS和GEA具有相似的能量消耗,这是由于系统负载较轻时,EEAS在保证系统提供较高用户满意率的基础上减少了系统能量消耗.值得注意的Page10是,当节点数从8变化到64时,EEAS的总能量消耗逐渐减少,因为此时系统负载较轻,EEAS在保证系统具有较高用户满意率的基础上减少了系统能量消耗.当节点数大于64时,EEAS的总能量消耗增加,这是因为尽管系统以最低电压运行,但随着节点数的增加,较多节点处于空闲状态.GEA具有和EEAS类似的趋势,但是它只能调整新到任务的执行电压而不能调整等待队列中任务的执行电压,因此当系统负载较重时,不能提供比EEAS更优的用户满意率.图7(c)的结果表明,LVEA具有最差的调度跨度,因为LVEA始终选择最低电压,使得任务具有最长的执行时间,因此产生最长的调度跨度;相反,HVEA的调度跨度最小,但是它的能量消耗一直高于其它策略的能量消耗.这一结果表明,异构计算系统采用该策略不具备任何弹性.当节点数小于96时,EEAS比GEA具有更优的调度跨度,这可以解释为当系统负载较重时,为获得更高的用户满意率,EEAS可通过提高局部队列中等待任务的执行电压来缩短任务的执行时间,但是GEA缺乏对局部队列中任务执行电压的调节能力.因此,采用EEAS调度策略的任务相对采用GEA策略的任务具有较短的执行时间.当计算节点数目大于96时,即使采用最低电压,系统负载仍然较轻,因此两者的任务执行时间基本相同.5.3任务到达率对性能的影响为了测试任务到达率对性能的影响,在本组实验中,将参数intervalTime的值从2变化到16,步长为2.图8显示了GEA、LVEA、HVEA和EEAS的性能.图8(a)显示了当参数intervalTime较小时,任务到达速度较快,使得较多任务在局部队列中排队,因此一些晚到达任务可能错失其期望完成时间.随着intervalTime的增加,在局部队列中等待任务的数量减少,任务具有较早的开始时间,此时系统负载较轻,使得系统具有较高的用户满意率.此外,HVEA和LVEA分别具有最高和最低的用户满意率.EEAS的用户满意率高于GEA的用户满意率,其结果与图7(a)中所示情况的解释一致.图8(b)显示了HVEA消耗的能量最多,而LVEA消耗的能量最少.值得注意的是EEAS具有特殊的变化特性.例如,当参数intervalTime小于8时(即系统负载较重),EEAS尽量通过增加节点局部队列中等待任务的执行电压提高用户满意率.当intervalTime大于8时,任务到达速率较低(即系统负载较重)时,EEAS的总能量消耗增加,这是因为系统负载变轻,空闲时间增加,增加的空闲时间使得系统的总能量消耗略微增加.图8(c)中的结果表明,当参数intervalTime从2变化到8时,所有策略的调度跨度增加.这是因为随着intervalTime的增加,任务到达时间间隔变长,因此,任务的开始时间延长导致最晚到达任务的完成时间较晚,相应的调度跨度增加.此外,HVEA的调度跨度最小,而LVEA正好相反.该原因和图8(c)中的解释类似.当参数intervalTime小于8时,EEAS在调度跨度方面优于GEA,这可解释为当系Page11统负载较重时,EEAS优先满足用户期望,使任务具有较短的执行时间,因此调度跨度减小.5.4期望完成时间对性能的影响本组实验的目的是为了测试期望完成时间对GEA、HVEA、LVEA和EEAS性能的影响.参数expectedTimebase的变化从2~16.图9显示了实验中4种方法的性能.从图9(a)中可以发现,随着expectedTimebase的增加(即期望值变得宽松),GEA、HVEA、LVEA和EEAS的用户满意率随之增加,这是因为任务的期望完成时间限制变得宽松,使得任务可以较晚完成.此外,图9(a)显示了HVEA和LVEA分别具有最高和最低的用户满意率.EEAS的用户满意率高于GEA的用户满意率,这与前面实验的结果类似(见图7(a)和图8(a)).参数expectedTimebase的增加使得系统负载变轻.从图9(b)中可以发现,当expectedTimebase的值小于10时,采用EEAS策略的能量消耗逐渐减少,因此具有较好的弹性;而当expectedTimebase的值大于10时,其实验结果与前述实验结果类似.尽管GEA与EEAS的变化趋势类似,但当系统负载较轻时,其用户满意率低于EEAS.此外,无论系统负载如何变化,HVEA和LVEA均不能减少系统能量消耗.图9(c)显示了LVEA具有比其它算法较长的调度跨度,这是因为LVEA始终采用最低的任务执行电压,导致任务具有最长的执行时间,而HVEA恰好相反.EEAS具有比GEA更好的调度跨度,其原因是为了保证较高的用户满意率而缩短了部分任务的执行时间.5.5任务大小对性能的影响本组实验测试了任务大小对性能的影响.3种任务大小的设计如表1所示.假设任务大小均匀分布,图10显示了小任务、中等任务和大任务对GEA、HVEA、LVEA和EEAS性能的影响.图10(a)显示了当任务为小任务时,由于任务执行时间较短,所有方法均提供较高的用户满意率.当任务为中等任务或大任务时,任务的执行时间变长,因此用户满意率下降.从图10(a)中可以看出,HVEA始终具有最高的用户满意率,而LVEA具有最低的用户满意率,这是因为HVEA和LVEA均属于静态算法,不具备根据系统负载情况自适应调整电压的能力.EEAS具有比GEA较高的用户满意率是因为在系统负载较重时,EEAS可以通过增加能量消耗来提高用户满意率.图10(b)显示了随着任务粒度的增加,采用4种不同策略的系统能量消耗均增加,这是因为大任务需要更长的执行时间,因此消耗的能量最多.当任务为中等或大任务时,EEAS的总能量消耗略高于GEA的总能量消耗,因为EEAS在系统负载较重时优先考虑用户满意率.但是,当任务为小任务时,EEAS和GEA基本上具有相同的能量消耗.图10(c)显示了采用4种不同调度策略时,任务大小对调度跨度的影响.实验结果表明EEAS具有最好的弹性.Page126结论本文研究了异构计算系统中独立任务节能调度问题,其调度目标是在用户期望与系统节能之间进行权衡.为了达到这一目标,本文提出了一种弹性节能调度策略EEAS.该策略可有效提高系统灵活性,根据系统负载情况对新到达任务和局部队列中等待任务进行执行电压自适应调整.为了评估EEAS策略的性能,本文通过大量模拟实验对其进行了测试.实验结果表明在系统负载的较大变化范围内,EEAS调度策略相比其它算法具有更好的弹性,可以为动态环境下异构计算系统提供良好的适应性.下一步的研究工作主要包括3个方面:(1)将现有调度策略扩展到存储系统的节能设计中;(2)改进现有调度策略以处理异构计算系统中的并行任务;(3)进一步考虑系统中存储能力的异构性.
