Page1大规模网络服务系统行为异常的敏捷感知方法章昭辉1),2),3)崔君2)1)(东华大学计算机科学与技术学院上海201620)2)(安徽师范大学数学计算机科学学院安徽芜湖241003)3)(同济大学嵌入式系统与服务计算教育部重点实验室上海201804)摘要大规模网络服务系统环境中,短时的大规模用户合法行为聚集会造成系统行为异常,使得系统可用性受到极大的损害.现有的系统异常检测方法大多适用于用户非法行为造成的系统异常.文中针对用户合法行为短时聚集引起的系统异常问题,提出一种大规模网络服务系统行为异常敏捷感知的方法.该方法包括系统异常敏捷感知模型和重复行为检测的Petri模型.基于“放大因子”的系统异常敏捷感知模型给出了系统异常的可预知性和异常系统行为的可定位性.即如果系统会在未来的某一时刻t2发生异常,那么t1时刻预期系统负载值要大于系统所能承受的最大负载值(t2>t1).而且,该模型通过行为阻滞度可确定引起系统异常的系统行为.在敏捷感知模型的基础上,针对应用系统的异常检测,提出了基于带优先关系的颜色双变迁Petri网的重复行为检测模型及其系统异常敏捷感知算法.根据单位时间内用户行为数较小变化、缓慢增长和激增三种情况进行模拟实验,实验结果表明该方法可以有效地在系统异常发生之前提前感知,并能定位引起系统异常的系统行为.关键词网络服务系统;行为异常;敏捷感知;异常检测;Petri网;云计算1引言随着通信技术、网络技术、分布式计算技术等日新月异地发展,基于网络的服务系统为满足用户需求带来了便捷.但是,系统本身的大规模性、全方位性、复杂性等特征越来越突出;同时,系统的用户群体也随之呈现出规模巨大、用户需求多样化的特征.大规模网络系统的服务能力和服务质量与大规模用户群体的需求满足之间的矛盾也越来越凸显.尤其是当某些扰动事件发生时,系统会吸引大规模的用户群体以及异常行为用户(如使用抢票软件、“黄牛”囤票软件,其本质上也是聚集大规模用户的一种形式,只是其购票流程实现自动化)参与系统,用户群体的刚性需求引起对资源的过度竞争和非法竞争,从而使得系统的可用性急剧下降,系统资源和用户资源(时间等)极大浪费.基于网络的服务系统为了满足用户需求,新一代软件范型不断涌现,如普适计算软件、超大规模软件系统、网构软件等[1].与传统计算机软件系统相比,互联网服务系统所表现出的大规模性、开放性、复杂性等特征,使得软件自适应对系统感知提出更高的要求[2-3].网络系统环境的开放性可能使得大规模网络服务软件系统在开发设计时就存在固有的缺陷,如不可预见的用户行为增长与有限的系统负载之间的不平衡.这些潜在缺陷会在软件系统运行时随着用户的增加显现出来,对系统的可用性造成极大的损害.12306购票系统曾经在春节前瘫痪就是一个典型例子.系统一开始是满足用户需求的,但是随着用户量和用户向系统重复提交请求行为数的激增,系统负载随之激增,导致系统性能急剧下降、甚至崩溃.短时用户量激增以及用户施加于系统的重复行为数激增是大规模网络服务系统的可用性造成严重伤害的重要成因.因此,要保证系统能够在动态开放环境下持续、高质量地提供服务,系统需要在运行前期或是运行中提前快速感知自身异常并提供相应地异常预防措施.然而,现有的系统状态感知或检测研究[4-5]大多考虑的是基于用户非法行为产生的系统异常,并未考虑用户合法行为短时聚集对系统所造成的异常;或是从系统流量、事件日志表征现象中挖掘出异常,不能及时有效地在异常发生之前感知.用户合法行为对系统造成异常的敏捷感知与检测的关键在于,如何在系统异常发生之前就能快速感知系统异常并定位异常的系统行为.本文主要有以下贡献:(1)针对用户量和用户向系统重复提交请求行为数的短时激增对系统的影响,建立了系统异常的敏捷感知模型.该模型提出了“放大因子”的概念,通过建立“放大因子”与系统预期负载的关系模型将用户量与用户重复提交的行为数对系统负载的影响放大来考察系统负载的变化趋势.在t时刻,用户提交的正常行为数在“放大因子”的作用下所需的预期系统负载值若超过系统所能承受的最大负载值,说明在未来的某一时刻系统会出现异常,且异常的地方在于该时刻所有系统行为中阻滞度比重最大的系统行为.(2)在敏捷感知模型的基础上,建立了系统重复行为检测方法.通过对系统行为进行Petri网建模,分析其系统Petri网结构,确定关键节点.通过对关键节点设置检测机制,即利用PCDPN(带优先关系的颜色双变迁Petri网)对系统模型进行行为重构,并将感知模型运用到所建立的PCDPN网系统行为模型中,提出相应的检测算法,通过实例及实验验证该方法的有效性.本文第2节综述系统异常感知与检测的国内外相关研究工作;第3节阐述系统异常敏捷感知模型,并给出该模型对异常行为的可预知性和可定位性结论;第4节给出对实际系统中重复行为的Petri网检测模型及算法;第5节给出模型实例及有效性的实验验证;第6节给出本文工作与其他工作比较的相关讨论;第7节给出本文的工作总结和下一步工作.2相关工作为了提高软件的可用性以及系统服务的质量,Page3对软件自适应的研究现已成为关注热点.软件自适应包括感知、决策、执行3个环节[1].目前国内外对感知环节的研究主要从两个方面展开:一是基于环境上下文处理,获取和处理软件的环境信息[6].软件系统的开放性和动态性导致了软件环境不断的变化,因此对环境上下文的研究也开始更多地强调环境信息的显式化.丁博等人[7]概述了普适计算中间件技术对上下文信息的获取方式.朱可可[8]设计了面向环境感知的自适应中间件模型,自适应服务层通过从传感器感知外部环境从而进行自适应选择反馈到应用层.张慧[9]提出了面向语用网的上下文感知系统,通过设计一个面向语用网的上下文感知系统框架,使之可以动态地知识表达与推理,能够更加准确地理解用户的真实意图.Chen等人[10]将上下文定义为环境状态和场景集合,它们分为可能影响应用行为的上下文、由应用展现且用户对之感兴趣的上下文两类.Yang等人[11]提出利用“建模-规约-检测”的分布异步环境感知框架来检测异步动态属性的普适计算环境.Cheng[12]提出了Rainbow模型,进一步将软件自适应拓展到分布环境下,通过在结点之间建立严格的层次控制关系来实现群体自适应.二是基于软件的监测系统,获取软件的内部状态信息.Robinson[13]通过用户的需求分析和软件在运行时的监测技术相结合,实现对Web服务行为的监控,保证电子商务的可用性.Garlan等人[14]使用探针和量规三层监控机制来实现对软件体系结构的监测,监测系统体系结构的变化.Mi和Wang等人[15]针对用户请求的结构提出了一种可以快速诊断导致系统性能下降的原因的检测方法.从感知异常行为的角度来看,大多数的检测技术是通过建立系统、用户或程序的正常行为轮廓,比较和匹配被监测对象的实际行为与正常行为轮廓来实现的[16].谢逸等人[17]提出一种基于Web用户访问行为的异常检测方案,用于检测应用层上的分布式拒绝服务攻击,并以具有非稳态流特性的大型活动网站为例,进行应用研究.冯震[18]提出基于建立正常用户行为流量特征的方法,与之比对来检测可能对网络本身或其承载的数据业务造成危害的异常行为,并根据异常行为的特征来采取相应措施,降低这些异常行为所造成的危害,保证网络的安全运行.Huang等人[19]提出一种级联模式用于分布式网络的在线监测异常事件.Li等人[20]提出异常相关性分析方法,从全网的流量分析异常数据,揭示攻击行为变化的相关性.从软件系统的故障检测的角度来看,在大规模网络环境下对分布式软件进行异常检测和故障诊断显得十分困难[21].近年来故障检测的研究主要从结点或是结构等方面开展.Smith等人[22]利用贝叶斯方法对结点数据进行降维并通过PCA方法解析出影响结点健康状况的主要指标,最后根据结点之间的差异来检测故障结点.Bertier等人[23]提出了一种的分层检测结构,通过将节点分成若干组,在每个组内设置一个Leader节点,负责完成对组内节点的故障检测,并且可以根据应用程序需求通过共享服务自适应调整服务质量.Shi等人[24]也提出了一种类似的层次结构故障检测协议,包含了不可靠的故障检测技术服务和微处理器体系结构的一些想法,并重点讨论了这种结构的良好的可伸缩性和灵活性.Wang等人[25]在云计算的环境中提出了一种基于熵的异常测试方法模型.Basile等人[26]提出带标记的时间Petri网来动态的评估系统的状态和故障检测.综上所述,现有的系统异常感知和检测主要考虑的是用户非法行为对系统所造成的异常,而未考虑用户合法行为对系统的影响.通过表征检测异常的方法缺乏考虑实时预知用户合法行为对系统的可用性造成的损害.这种影响主要是开放环境下的网络服务系统对用户行为的不可预见性和不可控性所造成的.而系统行为对系统本身来说应当是可控性的.但这种可控性必须是系统尽早感知潜在异常的发生,即系统异常的可控性是以系统对异常的可预见性为前提.本文提出的大规模网络服务系统的异常行为敏捷感知方法,是针对用户合法行为短时聚集对系统行为所造成的异常,通过系统行为流程中微小的负载变化,在系统运行前期或系统运行中提前快速地感知系统异常行为,以达到利用系统行为的可预见性解决用户行为的不可预见性,从而为系统服务调整提供支持.3系统异常敏捷感知模型3.1系统异常在大多数系统运行正常情况下,系统是可以满足用户需求的.但当某一特定时间或是受事件、其他用户行为、环境等因素影响时,大规模网络服务系统性能及系统行为与用户需求及用户行为容易发生不相适配的状况,即系统异常.例如,火车票网上购票Page4系统每到节假日,尤其是春节,用户群体规模急剧扩大,系统就呈现出不堪使用的状态甚至瘫痪.从用户使用系统的流程看,平时用户完成一次购票过程很顺利.但是当系统并发用户量激增时,系统资源会被占用,导致系统的流畅度下降,有些用户会因自身原因在此次流程中的某些环节不断重复操作(如不断刷新页面、重复提交等),这使得系统负担加重,系统的可用性极大下降,造成系统异常.例如,每年双十一活动时,电商平台聚集了大量的用户,有数据表明双十一这一天用户购买物品的一系列过程会比平常慢很多,尤其是在付款环节,用户付不了款或是要不断重复付款操作,用户对购物过程的体验度也比平时差.由此可知,在系统运行中,系统负载增加主要有两个原因,一是用户量的增加,另一个是用户提交的请求行为数增加.而用户量和用户提交的请求行为数的增加则是因为系统群体用户行为中有行为噪音的存在.这种行为噪音在大规模的网络环境中具体表现为个体用户的行为偏差会影响其他用户的行为序列,并且这种影响会扩大到群体用户,造成群体用户的行为偏差,最终导致系统异常.本文主要考虑用户重复提交请求的行为偏差,并将这种具有不可控性的行为偏差定义为放大因子,以此建立系统异常敏捷感知模型.3.2系统异常敏捷感知模型定义1.t时刻系统中用户正常提交的总的行为数等于用户量,即Bft=St.其中St表示t时刻的大规模网络服务系统的用户数.定义2.t时刻系统中用户提交的总的行为数Bt,是t时刻系统中所有用户正常提交的行为数和重复提交的行为数的总和,即Bt=Bft+Brt.其中Bft表示t时刻系统中用户正常提交的总的行为数;Brt表示t时刻系统中用户重复提交的总的行为数.定义3.t时刻系统的实际负载Ct,是用户在当前时刻t提交的总的行为数对应的一个系统负载,即Ct=Bt×a.其中a(a1)表示一个用户提交的一个请求行为所需要的系统行为的负载.定义4.系统重复行为阻滞系数β1,是t时刻所有用户重复提交的行为数Brt占总的系统行为数Bt的比重,即β1=Brt/Bt.定义5.系统行为阻滞系数β2,是t时刻所有用户正常提交的行为数Bft占总的系统行为数Bt的比重,即β2=Bft/Bt.定义6.放大因子(NTR),是单位时间内用户量和用户重复提交系统行为数的变化量,即NTRt=β1ΔBrt/Δt+β2ΔSt/Δt.其中ΔBrt表示在趋近t时刻的用户重复提交的总的行为数的变化量;ΔSt表示在趋近t时刻的用户数的变化量.定义7.t时刻预期的系统负载Cbt,是用户在当前时刻t正常提交的总行为数在放大因子的作用下所需要的系统负载,即Cbt=NTR×Bft×a.定义8.系统行为阻滞度wit.{b1,b2,b3,…}表示系统的行为序列,t时刻系统行为bi总数占总的系统行为数Bt的比重,即wit=∑bi/Bt.如果t时刻系统行为bi的行为阻滞度最大,说明行为bi在系统中是不稳定的.假设1.大规模网络服务系统在设计之初都有一个自身可以承受最大的系统负载Cmax.假设2.在t2时刻,系统因ΔSt/Δt或ΔBrt/Δt的激增而产生异常,即当Ct2>Cmax时,t,t<t2,有limΔt→0ΔSt/Δt=或limΔt→0ΔBrt/Δt=.定理1.可预知性.在假设1、2的条件下,如果系统在t2时刻系统会发生异常,那么根据定义1~7的模型,在t1时刻可预测系统会发生异常,即t1时刻系统的预期负载超过系统的最大负载,其中t1<t2.证明.假设在任意t(t<t2)时刻不能预测到系统会发生异常,即CbtCmax.其中Cbt是系统t时刻的预期负载,Cmax是系统的最大负载.根据定义1~7,则有NTR×Bft×aCmax<Ct2成立.即NTR×Bft×a<Ct2=Bt2×a.可知BrtBt×ΔBrt设y=min{Brt,Bft},则有Bt×ΔBrty即ΔBrt+ΔSt最右边是一个定数.当Δt→0时,这与假设2矛盾.因此,t1,t1<t2,使得Cbt1>Cmax.即系统如果发生异常则可提前感知.定理2.可定位性.如果系统异常是因ΔSt/Δt或是ΔBrt/Δt的激增引起的,那么可定位到某个系统异常行为.证明.根据定理1可知在t1时刻系统的预期负载大于系统最大负载.根据定义3,此时用户行为对应于相应的系统行为bi.由于该预期负载根据t1时刻的用户行为数Ct=Bt×a得到.根据定义8,可计算出阻滞度最大的系统行为bi.证毕.Page53.3案例分析以某网购大规模网络服务系统为例来说明系统异常感知敏捷模型的原理,如图1所示是某网购系统流程.假设对网购系统流程中的用户登录行为、浏览网页行为、加入购物车行为、支付行为进行关键监测,检测其上述4种关键系统行为总的用户提交正常行为数和重复行为数.具体数据假设如表1所示.t19:0012083795320036t29:10159371239428331t39:20226711756840239t49:30337552105254807t59:40382722195360225假设该网购系统所能承受的最大系统负载Cmax为60000,一个用户提交的一个请求行为所需要的系统负载a为1;从表1数据得出:当t4=9:30,Ct4=Bt4×a=54807×1β1=Brt4/Bt4=21052/54807≈0.38,β2=Bft4/Bt4=33755/54807≈0.62,NTRt4=β1ΔBrt4/Δt+β2ΔSt4/ΔtCbt4=NTR×Bft4×a当t5=9:40,Ct5=Bt5×a=60225×1即当Time=9:30时,Cbt4>Cmax>Ct4,系统发出预警,且t4<t5.行为含义TimeBftBrtBtb1用户登录行为9:307124323210356b2反馈网页行为9:306987316710154b3加入购物车行为9:307646455112197b4支付行为9:3012998910522103b5系统总的行为数9:30337552105254807从表2数据得出:当Time=9:30时,w4t=∑b4/Bt=22103/54807≈0.40最大,所以系统异常行为是b4,即支付行为.4重复行为检测的Petri网模型及算法本文第3节所提出的系统异常敏捷感知模型对快速感知用户合法行为短时聚集引起系统异常问题提供了理论支持,本节将阐述如何将敏捷感知模型应用到实际系统的异常行为检测中.在实际的应用系统中,敏捷感知模型应用实现的关键是如何检测系统重复行为.检测系统重复行为首先要对系统进行建模,再对系统的关键节点设置检测机制.系统建模工具有形式语言与自动机、Petri网等,同其他系统模型相比较,对系统并发的贴切描述是Petri网的独特优势.下面讨论通过对系统进行Petri网建模,建立可检测重复行为的Petri网系统模型及其算法,并将敏捷感知模型应用于该检测算法中.4.1带优先关系的颜色双变迁Petri网传统Petri网是由库所、变迁和流关系3个基本Page6个网,当且仅当结构构成,是描述离散事件动态系统的有力工具.下面先简述Petri网的基本概念,然后给出带优化关系的颜色双变迁Petri网模型.定义9.网[27].三元组N=(P,T,F)称为一(1)P是一个有限库所集,T是一个有限变迁集;(2)P∪T≠,P∩T=;(3)F(P×T)∪(T×P)是一个弧集.定义10.Petri网[27].PN=(N,M)称为一个(1)N=(P,T,F)是一个网;(2)M:P→{0,1,2,…}是PN的一个标识函数;(3)引发规则:①p∈·t:M(p)>0,则称变迁t在标识M使②若变迁t在标识M使能,则t可以引发且引能,记为M[t〉;Petri网,当且仅当发后产生一个后继标识M,记作M[t〉M,其中定义11.冲突关系[27].设(P,T;F,M0)为一个基本网系统,t1,t2∈E,M是∑的一个情态.如果满足:则称事件t1和t2在情态M处于冲突关系.(1)M[t1〉且M[t2〉;(2)M[t1〉M→M[t2〉∧M[t2〉M→M[t1〉颜色双变迁Petri网是传统Petri网的基础上扩展了颜色以及变迁得到的高级Petri网.Gao等人[28]提出的颜色双变迁的Petri网,通过颜色集、变迁集以及弧表达式等增强了控制逻辑表达能力.针对变迁的不同优先级的问题,Best等人[29]提出了带优先关系的Petri网.本文在此基础上,为解决系统重复行为的检测,提出一种带优先关系的颜色双变迁Petri网.是一个PCDPN=(Σ,P,T,Q;F,C,ρ);其中Σ~P(λ);定义12.带优先关系的颜色双变迁Petri网(1)Σ是有限颜色集合,服从泊松分布函数,(2)P是库所集,P={p1,p2,…,pn}(n0);(3)T是服务行为变迁集,T={t1,t2,…,tk,tk+1,…,tk+i}(k0,i0),其中t1到tk是系统流程本身固有的服务行为变迁,tk+1到tk+i是用户重复提交系统行为时所需触发的服务行为变迁;(4)Q是控制行为变迁集,Q={q1,q2,…,qm}(m0);(5)F是有向弧集,F=FC∪FD,FC(P×T)∪(T×P),FD(P×Q)∪(Q×P);(6)C是颜色函数,C:P→Z(非负整数集),库所P中的托肯值属于有限颜色集合Σ,且用户在时间t内到达系统的数量可以服从泊松分布[30];(7)优先关系ρ表示一个变迁的偏序关系,即(qi,ti)∈ρ,定义控制行为变迁qi的优先级高于服务行为变迁ti的优先级.4.2PCDPN模型4.2.1Petri网的4种基本结构择、循环这4种基本结构构成[31],如图2所示.基于Petri网的系统模型主要由顺序、并发、选4.2.2PCDPN的4种基本结构的几种基本结构进行建模,如图3所示.下面利用PCDPN分别对大规模网络系统模型图3中有两种变迁,一种是系统服务行为流程变迁t,一种是控制行为变迁q.当用户提交重复系统行为时,触发代表重复行为的控制行为变迁q,此时正常行为流程的服务行为变迁t和控制行为变迁q属于冲突关系,优先触发控制行为变迁q,使用户回到之前的行为流程中,并且重复行为数加1,系统Page7行为流程库所中的托肯值减1.4.3重复行为检测的PCDPN模型4.3.1顺序结构对系统行为流程进行Petri网建模,如果有关键行为节点属于顺序结构,则对该关键节点进行重构,转变成PCDPN模型,以此对该节点进行重复行为检测.以图3顺序结构为例,p1~p5是库所集,表示状态.当用户重复提交一个行为,服务行为变迁t3触发.此时服务行为变迁t2和控制行为变迁q1在此情态下同时满足触发条件,属于冲突关系,因控制行为变迁q1的优先级大于服务行为变迁t2,控制行为变迁q1优先触发,且重复行为数加1,系统行为流程库所中的托肯值减1.4.3.2并发结构对系统行为流程进行Petri网建模,如果有关键行为节点属于并发结构,则对该关键节点进行重构,转变成PCDPN模型,以此对该节点进行重复行为检测.以图3并发结构为例,p1~p6是库所集,表示状态.当用户重复提交一个行为,服务行为变迁t5触发.此时服务行为变迁t4和控制行为变迁q1在此情态下同时满足触发条件,属于冲突关系,因控制行为变迁q1的优先级大于服务行为变迁t4,控制行为变迁q1优先触发,且重复行为数加1,系统行为流程库所中的托肯值减1.4.3.3选择结构对系统行为流程进行Petri网建模,如果有关键行为节点属于选择结构,则对该关键节点进行重构,转变成PCDPN模型,以此对该节点进行重复行为检测.以图3选择结构为例,p1~p6是库所集,表示状态.当用户重复提交一个行为,服务行为变迁t5触发.此时服务行为变迁t4和控制行为变迁q1在此情态下同时满足触发条件,属于冲突关系,因控制行为变迁q1的优先级大于服务行为变迁t4,控制行为变迁q1优先触发,且重复行为数加1,系统行为流程库所中的托肯值减1.4.3.4循环结构对系统行为流程进行Petri网建模,如果有关键行为节点属于循环结构,则对该关键节点进行重构,转变成PCDPN模型,以此对该节点进行重复行为检测.以图3循环结构为例,p1~p4是库所集,表示状态.当用户重复提交一个行为,服务行为变迁t4触发.此时服务行为变迁t3和控制行为变迁q1在此情态下同时满足触发条件,属于冲突关系,因控制行为变迁q1的优先级大于服务行为变迁t3,控制行为变迁q1优先触发,且重复行为数加1,系统行为流程库所中的托肯值减1.4.4算法PCDPN根据PCDPN模型,将所有关键行为节点的所检测出来的重复行为数进行累加得到系统总的重复行为数.其中用户正常提交的行为数为系统行为流程库所的托肯值.然后根据定义1~8的敏捷感知模型,计算系统的预期负载和行为的阻滞度.相应的系Page8统感知检测算法PCDPN如下所示.算法PCDPN.系统异常行为敏捷感知检测.输入:St,Bt,Brt,Bft,a,n;//在t时刻系统监测或计输出:系统异常预警和异常行为1.WHILEt>0;2.Ct=Bt×a;//计算所有用户在当前时刻t提交的总的行为数对应的一个实际的系统负载C3.β1=Brt/Bt;β2=Bft/Bt;//计算当前t时刻的放大因子的值4.Cbt=NTR×Bft×a;//计算所有用户在当前t时刻提交的正常行为数在放大因子的作用下所需要的预期系统负载5.IFCbt>CmaxTHEN6.预警系统在未来的某个时刻会发生异常;//定位可能发生异常的系统行为7.i←1;8.WHILEi<n//计算t时刻所有行为bi的阻滞度9.wit=∑bi/Bt;i=i+1;10.ENDWHILE11.wmax←w1t;k←0;i←2;12.WHILEi<n13.IFwit>wmaxTHEN14.wmax←wit15.k←i16.ENDIF17.i=i+118.ENDWHILE//找出阻滞度最大wkt19.PRINT系统在未来的某个时刻会发生异常,且导致20.ENDIF21.t=t+m//检测时间间隔为m22.ENDWHILE23.算法结束.5实例与实验5.1购票系统的PCDPN模型某些购票系统就是典型的大规模网络服务软件系统,例如12306购票系统.每逢春运,12306购票系统的用户量就会突然增多,以及抢票软件的使用,使得系统负载的增大,导致系统变慢甚至崩溃.模拟某购票系统的基本流程(如图4所示),在其购票系统Petri网模型的基础上构建重复行为检测的PCDPN网模型,并将系统异常行为敏捷感知检测算法运用到模型中,通过实验验证重复行为检测模型的有效性,且可以敏捷感知到系统在未来的某个时间是否会发生异常.所示.根据购票系统的流程图进行Petri建模,如图5对于图5中各变迁的含义如表3所示.变迁t1t2t3t4t5t6t7t8t9t10t11t12Page9对图5的购票系统的Petri网模型进行分析,确定登录行为、查询行为、预订行为和支付行为是其关图5购票系统的Petri网模型图6购票系统的PCDPN模型对于图6中t1~t12变迁的含义见表3,t13~t14,q1~q4变迁的含义如表4所示.表4图6模型中狋13~狋14,狇1~狇4变迁所对应的含义t13~t14q1~q45.2实验设计本文通过对购票系统的PCDPN模型所示的流程进行模拟,其中对登录、查询、预订和支付这几个模块进行重点考察,并对每个模块设置了监控,主要包括图6中的控制行为变迁q1~q4,采集行为数等相关数据,其中系统服务行为流程中的库所的托肯值表示用户量,用户重复行为数由累加得到.行为及数据的模拟如下:模拟系统的行为序列如图7所示.图7中主要键行为,利用PCDPN对这几个关键行为进行行为流程建模,如图6所示.Page10IP的模拟;密码、IP,进行模拟校验;点、时间的模拟;(1)用户登录,此环节需要完成用户名、密码、(2)服务端响应登录请求,接收模拟的用户名、(3)登录完成后,查询,此环节需要完成起止地(4)响应查询请求,接收模拟的查询的起止地(5)模拟预订请求,此环节需要确定完成订单(6)响应预订请求,根据查询条件返回此时的提交的订单剩余量,提交进行排队,计算剩余时间,响应预定请求,返回状态码;点、时间,模拟数据库查询,返回符合条件列表;提交的模拟;的模拟;(7)模拟支付请求,此环节需要车次、支付节点(8)响应支付请求,连接第三方服务代理,返回支付状态.由于无法获取到购票系统的实际数据,本文设置一个数据发生器,使其对各个模块不断施加用户提交的正常行为数和重复行为数,造成模拟系统负载的增加.计算模拟数据,为保证数据的有效性,与12306系统某一时段的具体流量图作对比(如图8所示①),使之符合12306购票网站的流量特征,即短时聚集性.对12306购票网站的流量进行分析,发现其在变化的过程中有着单位时间内,系统中总行为数变表5第1组实验数据TimeBtBft/StBrtTimeBtBft/StBrtTimeBtBft/StBrt13:0091890527583913215:0079435465263290917:002325617892536413:1088068495483852015:1064561395252503617:102530819044626413:2090636477904284615:2060954392362171817:202507418888618613:3089358485344082415:3055943365241941917:302527818492678613:4091314469384437615:4048672349921368017:402512218108701413:5089922483244159815:5042018301141190417:502525418984627014:0097274484974877716:003135023892745818:002509218312678014:1090288524823780616:103244223280916218:102531418456685814:2094734501124462216:203126021810945018:202506218264679814:3090990521883880216:3032076215641051218:302457018576591614:4094356525364182016:4031770209221084814:5086543552583128516:50357842329212492一般的,预期系统负载Cbt比系统实际负载Ct小,但当系统总的行为数变化量较大时,预期系统负载Cbt比系统实际负载Ct大.例如,当Time=14:00时,Ct=Bt×a=97274×1=97274,ΔSt=48497-48324=173,ΔBrt=48777-41598=7179,NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈1.02,化不大、总行为数变化缓慢以及总行为数激增的3种不同的流量特征.根据这3种12306购票网站的流量特征,分别模拟3组不同的用户及用户行为数据进行实验.定义负载在[0,60000)区间内属于良好服务区,[60000,120000)区间内属于可用性受损区,[120000,+)属于服务不可用区.将这3组实验数据代入系统异常行为敏捷感知检测算法,通过JavaScript和Java编写模拟系统,利用画图插件Highcharts表现3个实验效果图.5.3实验结果分析第1组实验数据见表5,把表5的数据运用到感知检测算法中,得到效果如图9所示.从图9可以看出,实际负载随着时间的推移变化比较平缓,相比之下系统预期负载的变化趋势比较明显,且系统预期负载变化量比较大的时刻(结合表5的数据)和系统总的行为数变化量较大的时刻是重合的.Cbt=NTR×Bft×a≈1.02×48497×1当Time=14:10时,Ct=Bt×a=90288×1=90288,ΔSt=52482-48497=3985,ΔBrt=48777-37806=10971,①12306流量超京东商城.http://news.youth.cn/jsxw/201301/Page11图9第1组实验结果NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈1.92,Cbt=NTR×Bft×a≈1.92×52482×1总之,该组数据中的系统用户量St和用户重复提交的行为数Brt的变化量大都趋于平稳,此时St和Brt的变化量对系统负载的影响比较小,导致系统异表6第2组实验数据TimeBtBft/StBrtTimeBtBft/StBrtTimeBtBft/StBrt13:001981210882893014:4073741406293311216:2048192307441744813:102530819044626414:5064474385432593116:3037050257161133413:2042018301141190415:0052272318962037616:4047340297121762813:3049712373151239715:1036570238921267816:5032537204561208113:4060060435121654815:2037248251341211417:002798418312967213:5088068495483852015:3036024241081191617:102507418888618614:0065922428162310615:4043696281701552817:202547618582689414:1072936470522588415:5050486309821950417:302620819356685214:2080184459873419716:0055424363841904017:402525418984627014:3091384483454303916:10707164207228644图10第2组实验结果常感知模型中的放大因子NTR的值不会变大,根据放大因子和系统预期负载的关系模型可以得到放大因子NTR的值不会使系统预期负载Cbt的值大于系统最大承受负载Cmax,即系统不会发出预警信号.第2组实验数据见表6,把表6的数据运用到感知检测算法中,得到效果如图10所示.从图10可Page12以看出,系统实际负载随着时间的推移逐渐上升,且系统预期负载随着实际负载的变化量增长而变大.例如,当Time=15:40,Ct=Bt×a=43696×1=43696,ΔSt=28170-24108=4062,ΔBrt=15526-11916=3610,NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈1.08,Cbt=NTR×Bft×a≈1.08×28170×1当Time=15:50,Ct=Bt×a=50486×1=50486,ΔSt=30982-28170=2812,ΔBrt=19504-15526=3978,NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈0.91,Cbt=NTR×Bft×a≈0.91×30982×1当Time=16:00时,Ct=Bt×a=55424×1=55424,ΔSt=36384-30982=5402,表7第3组实验数据TimeBtBft/StBrtTimeBtBft/StBrtTimeBtBft/StBrt13:0045062282641679815:1064702325363216617:20139572798295974313:1044570285761599415:2086837445794225817:30122156688625329413:2044006280901591615:30105946540425190417:40115406554785992813:3043256279221533415:40107248501345711417:50106762521105465213:4062325362932603215:5096024441085191618:0095856525844327213:5085898485363736216:0077698451703252818:1088692507903790214:0070042405122953016:1067524393842814018:2083526480963543014:1059204302942891016:2050924319221900218:3077176433523382414:2042858284221443616:3074188403823380618:4065182418762330614:3034590238921069816:4096528510544547418:5050136387471138914:4036084229741311016:50105670552565041419:0048390358741251614:5028752174481130417:00126732601086662419:1046105329971310815:0057413292572815617:10130342641376620519:20423792979412585图11第3组实验结果ΔBrt=19504-19040=464,NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈1.03,Cbt=NTR×Bft×a≈1.03×36384×1当Time=16:10时,Ct=Bt×a=70716×1=70716,ΔSt=42072-36384=5688,ΔBrt=28644-19040=9604,NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈2.02,Cbt=NTR×Bft×a≈2.02×42072×1总之,该组数据中系统用户量St和用户重复提交的行为数Brt缓慢变化.随着St和Brt的缓慢增加,感知模型中放大因子NTR也随之缓慢增大,此时系统有发生异常的可能性.当预期系统负载值Cbt超过系统实际负载Ct并先到达系统所能承受的最大负载Cmax,系统发出预警信号.第3组实验数据见表7,把表7的数据运用到感知检测算法中,得到效果如图11所示.从图11可Page13以看出,系统实际负载随着时间的推移瞬间上升,且系统预期负载也随着实际负载的变化快速增大.例如,当Time=13:30时,Ct=Bt×a=43256×1=43256,ΔSt=28090-27922=168,ΔBrt=15916-15334=582,NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈0.10,Cbt=NTR×Bft×a≈0.10×27922×1当Time=13:40,Ct=Bt×a=62325×1=62325,ΔSt=36293-27922=8371,ΔBrt=26032-15334=10698,NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈2.60,Cbt=NTR×Bft×a≈2.60×36293×1当Time=13:50,Ct=Bt×a=85898×1=85898,ΔSt=48536-36293=12243,ΔBrt=37362-26032=11330,NTR=β1ΔBrt/Δt+β2ΔSt/Δt≈3.29,Cbt=NTR×Bft×a≈3.29×48536×1总之,该组数据中系统用户量St和用户重复提交的行为数Brt短时聚集,此时放大因子NTR迅速增大,且预期系统负载值Cbt也快速超过系统实际负载Ct先到达系统所能承受的最大负载Cmax,系统发出预警信号.通过这3组实验的效果图可以看出,如果系统会发生异常,预期负载值总是先于系统实际负载值到达系统所能承受的最大负载值,并进入系统的服务受损区或不可用区.该实验表明,感知检测算法可以把系统实际负载微小的变化通过放大因子观察预期负载变化,可以有效预警系统可能发生的异常.同时表明,若系统因行为数的较大变化而发生异常,该算法一定可以提前快速感知.6相关讨论通过环境上下文获取和处理软件的环境信息[7-15],这种方法可能会导致出现新的上下文,软件就需停止运行,需要较大的系统代价;对于Web用户访问行为的这些感知异常行为的方法[16-17],主要是针对各种异常行为施加到系统上,没有考虑用户合法行为对系统造成的影响;基于流量来检测系统异常[18-20],只是从表征出发,没有实际考虑系统负载问题;而软件系统的故障检测[21-26]基本上都是基于数据挖掘的角度提出的检测方法,用采集的数据来分析系统是否发生异常,计算量较大,缺乏实时性.由于大规模网络服务系统的开放性特征,使得不可预见的用户的需求及其行为对系统的可控性提出了更高的要求.而系统的实时可控是以实时可预测系统异常为前提的.针对施加于系统的非法行为,现有的感知和检测方法取得了积极效果;但是对于施加于系统的群体合法行为(大规模用户短时聚集并施加于系统的行为,每个用户的行为都是系统允许的)而造成系统异常的情况,目前未见有实时感知技术的研究.在大规模网络服务系统中,对于群体合法行为的短时聚集而引起系统的异常,本文的敏捷感知方法能以系统负载的细微变化而快速预测系统是否可能发生异常.即系统若发生异常,本文的方法一定能提前检测到.这点由第3节的定理所保证.在实际系统中,本文第4节给出了一种系统异常检测实现技术,其包括对实际系统的关键行为上施加相应的检测控制.这种控制通过实时监测系统的行为数,应用感知模型计算实际负载和预期负载.当预期负载大于实际负载时,系统可能发生异常;此时,通过计算出行为阻滞度来定位可能发生异常的系统行为.第5节的实验表明当预期负载大于实际负载时,系统会发出异常预警.7结论本文针对大规模网络服务系统环境中用户合法行为数增长而使系统发生异常问题,提出了一种系统异常敏捷感知模型和基于带优先关系的颜色双变迁Petri网的重复行为数检测模型及算法.异常敏捷感知模型是通过行为与行为之间的影响因素,把当前的系统负载在“放大因子”的作用下放大来看,在系统发生异常之前,敏捷感知系统是否会发生异常.异常敏捷感知模型为实际系统异常发生是否能提前敏捷感知的依据.在实际系统中可以应用基于带优先关系的颜色双变迁Petri网的重复行为数检测模型及算法检测系统的潜在异常发生的可能性,其关键是在实际系统的关键行为节点上增加相应的行为控制部分(图6所示),并运用感知模型进行计算预期负载是否大于系统最大负载.下一步我们将Page14在感知到导致系统发生异常行为后如何进行系统服务流程重构进行研究和讨论.
