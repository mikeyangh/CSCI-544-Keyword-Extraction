Page1一种速率自适应的能耗优化路由策略研究王高才1)冯鹏1)王淖1)彭颖1)黄书强2)1)(广西大学计算机与电子信息学院南宁530004)2)(暨南大学网络与教育技术中心广州510632)摘要降低网络系统能耗是当前计算机领域构建绿色网络迫切需要解决的关键问题.网络设备的传输服务速率自适应性为优化网络能耗和提高网络能效提供了有效的途径,文中提出一种基于速率自适应的全局性和分布式的能耗优化路由策略.该策略从网络全局路由的角度出发,根据网络系统的服务特征,将为数据提供传输服务的网络组件抽象为一个处理域.为求解处理域中速率自适应时的服务速率和工作状态平均转换次数,把处理域的服务过程视为可变服务速率的服务系统.然后以网络系统总能耗最小化为目标,并满足相关的路由和性能等约束条件,建立基于速率自适应的网络能耗优化路由模型,利用改进的蚁群算法对模型进行求解.在仿真实验中,将文中提出的能耗优化路由的分布式启发算法与相关文献的OSPF和GreenOSPF节能路由算法进行比较,给出算法在能耗和延时方面的对比结果.多种实验情况下的对比结果表明,文中提出的能耗优化路由策略能更有效地匹配速率自适应机制,具有较好的节能效果,从而达到优化和降低能耗的目的.关键词网络系统;速率自适应;能耗优化;蚁群算法1引言随着网络系统规模的不断扩大和设备的更新,能量利用日益暴露出能耗高、效率低、浪费多等诸多问题.特别的,在最近十年中,新一代网络技术得到突飞猛进的发展,各种新的通信网络和计算服务模式如雨后春笋般涌现,如IPv6、3G、WiMAX、Wi-Fi、Adhoc网络、无线传感器网络、无线Mesh网络、云计算和大规模数据处理中心等.这些大量的基础设施为用户提供了良好的服务能力和高速的通信速度,而高服务速率和传输速率比低服务速率和传输速率通常消耗更多的能量.例如,一些高速服务器和高速链路总是配置处理很少有的峰值荷载,而实际上平均利用率却很低;另外,互联网骨干网络的忙时最大平均利用率不足30%,很多网络的闲时链路利用率只有5%以下[1].这就意味着大量的能量因为IT设备的利用率低而浪费掉.因此,以节省和降低网络系统能耗为目标而构建绿色网络已成为计算机领域一个非常重要和迫切需要解决的课题[2-5].目前,针对网络设备能耗的急剧增长,研究人员提出了许多的节能机制和方法,如引入高效的冷却技术和提高服务器能量的利用率等,但是该类方法不能从本质上解决网络能耗高、效率低的问题.因此,有效的系统能耗管理与节能技术应该是:根据不同的能耗级别所提供的服务能力是不同的实际情况(如低能耗对应的服务能力较弱,高能耗则服务能力较强),对网络设备资源进行合理的使用和配置.目前主流的有效能耗管理和节能机制有两种:睡眠-唤醒机制和动态速率调节机制.(1)睡眠-唤醒机制最早是在1997年由Intel、Microsoft和Toshiba共同制定的规范[6].而较早的节能工作要追溯到计算机系统动态功耗管理(DynamicPowerManagement,DPM)的研究.在操作系统中,功耗管理器(PowerManager,PM)作为计算机系统DPM的执行模块,它监视系统的运行负荷,利用功耗可管理组件提供的多种睡眠机制,在满足系统性能约束条件下,动态调节系统的睡眠深度,达到降低系统整体能耗的目的.在网络系统节能研究中,主要通过关闭某些网络组件:如路由器、交换机或链路等,或重路由网络流量来节约网络能耗.如文献[7]在办公室局域网中,通过聚集利用率较低的用户到无线网络中,从而关闭不活跃用户所链接的交换机节约能量.文献[8]提出通过改进目前链路状态路由协议,如OSPF协议,实现网络层的节能算法,从而使路由器能够在低负载的情况下关闭部分链路.文献[9]提出最小化ISP骨干网络能耗的方法,该方法首先得到与网络流量相关的网络资源的最小子集,然后在保证网络全连通和最大化链路利用率的前提下关闭部分路由器和链路.(2)动态速率调节机制是通信网络研究中一个极其活跃的领域,它根据网络系统资源和负载的实际情况动态调节速率,使得系统在低速率下节省能耗.Yao等人在文献[10]中首次提出采用速率动态缩放机制实现处理器的节能,并给出了与处理器速度有关的能耗函数,即处理器工作速率的快慢决定能耗的高低.文中将处理器的能耗优化转化为任务调度的优化问题进行求解.Iran等人在研究休眠机制和速率缩放机制方面做了大量的研究,在文献[11]中提出将休眠策略与速率缩放进行结合的策略.自适应链路速率最初由Nordman和Christensen在2005年提出,文献[12]对该方法做了进一步研究和完善.2008年Gunaratne等人[13]提出EnergyEfficientEthernet(EEE)的自适应链路速率方法,该方法根据链路利用率,通过动态变换链路速率减少以太网链路能量消耗,研究结果表明,以太网链路速率从100Mbps增加到1Gbps时,功耗增加2~4W,而增加到10Gbps时,功耗增加10~20W.文献[14]研究ISP的接入节点的节能方法,在满足实际流量需求下通过控制每个接入节点的服务容量实现节能,并提出一种基于主动窗口管理的拥塞控制技术的绿色路由器(GreenRouter).文献[15]研究休眠和自适应两种节能技术:在网络链路上无分组传输时减少能耗,即网络组件空闲时使之休眠;根据链路的负载情况,积极地自适应调节处理分组的速率.结果表明,在网络设备上,即使使用非常简单的休眠或Page3自适应机制也能获得较好的节能效果.文献[13]研究了链路速率切换的条件和时机,提出根据利用率或者队列长度切换服务速率的策略,并且对系统服务速率可能产生的抖动问题也给出了双阈值的解决策略.文献[16]将网络性能的稳定性引入到节能策略中,在控制队列长度和网络延迟稳定的前提下,考虑3种速率自适应策略,并给出临时会话情况和永久会话情况下能耗自适应优化算法.文献[17]研究速率自适应策略中一种结合当前队列长度、服务速率、速率切换时间和速率持续时间的速率切换策略,该策略能保障系统的最大延迟不会超过一个设定的阈值.由此可见,速率自适应策略中速率切换问题与网络整体环境有极其紧密的联系.在网络级节能策略方面,文献[18]对随机生成的网络拓扑进行最短路径路由和加入能耗因素的路由的能耗对比测试.结果表明,随着节点数目的增加,加入能耗因素的路由节约的能耗最终占总能耗的65%.由此可见,从全局角度研究网络能耗的数据包调度和路由对网络节能研究具有非常重要的实际意义.文献[19]研究在连续流速率缩放(ContinuousFlowwithSpeedScaling,CFSS)模型中通过利用能耗函数f(s)为凸函数将路由最小能耗问题转化为一个在多项式时间内可解的凸规划问题,并根据随机舍入的思想,给出求解最小路由的能耗优化算法.文献[20]从网络全局角度提出CFSS和连续流速率自适应(ContinuousFlowwithRateAdaptation,CFRA)模型两种路由能耗优化算法,同时还考虑网络带宽和通信的延迟,提出一种通过权值参数权衡能耗和延迟的优化模型.在网络路由节能研究方面,大多数的研究工作集中在网络链路以峰值负载工作的条件下努力提高网络链路的利用率或尽可能多的关闭链路实现节能[21-24].例如,文献[21]提出关闭部分链路提高能效的路由算法,并给出基于蚁群算法的求解方法;文献[23]提出根据链路权重值关闭链路的路由策略.另一方面,网络能耗和服务质量的多目标优化也是研究关注的重点.文献[24-25]研究在满足带宽和附加服务质量约束条件下提高网络利用率的路由节能策略.这些研究工作往往忽略了对具有节能机制网络模型的讨论,例如链路速率自适应模型下的路由能耗优化问题.此外,这些采用节能机制的网络模型一般具有与传统以峰值负载工作的模型不同的能耗特性,直接借用传统以峰值负载工作的模型下的路由节能策略通常不能取得较好的节能效果.因此,为了能够更加有效地节约网络能耗,将网络节点级的链路节能策略和网络全局的路由选择策略相结合研究具有更好的实际意义.本文提出一种基于速率自适应的全局性和分布式的路由能耗优化策略.从网络全局路由的角度出发,根据网络系统服务特征,将为数据提供传输服务的网络组件抽象为一个处理域,为求解处理域中速率自适应时的服务速率和工作状态平均转换次数,把处理域的服务过程视为可变服务速率的服务系统.然后以网络系统总能耗最小化为目标,并满足相关的路由和性能等约束条件,建立基于速率自适应的网络能耗优化路由模型,利用改进的蚁群算法对模型进行求解.本文第2节通过将抽象网络组件为一个处理域,分析并给出基于处理域的速率自适应模型;第3节从网络全局的角度考虑网络能耗,并给出网络能耗优化模型;第4节提出基于改进的蚁群算法的能耗优化路由的分布式算法;第5节给出仿真实验结果与分析;最后在第6节总结全文,同时给出下一步的研究方向.2速率自适应模型2.1处理域定义通常,网络系统中负责通信传输服务的组件所消耗的能量占系统总能耗的一半以上,所以节省网络通信传输能耗对网络节能至关重要.网络通信传输通信能耗是所有提供传输服务的网络节点和链路的组件所消耗的能量总和.对于具有速率自适应机制的网络环境,提供传输服务的网络组件的能耗多少与数据传输速率密切相关.因此,从网络全局的角度出发,根据网络的运行状态和负载的动态变化合理地调节数据包路由能在很大程度上节约网络通信传输能耗.本文将一条有向链路上为数据包提供传输服务的网络组件抽象为一个处理域.即网络中的数据包传输服务交由处理域负责,处理域模型如图1所示.Page4处理域模型由4个部分组成:(1)缓存队列Q;(2)输入端口I;(3)数据处理单元P;(4)输出端口O.缓存队列接收到达处理域的数据包;输入端口根据缓存队列中的数据积压状况动态地调节数据包从缓存队列进入处理单元的速率;处理单元主要负责对数据包的处理和发送;输出端口完成传输的数据包输出.在上述模型中,处理域根据链路上的负载情况动态地改变处理域的工作状态以实现数据包传输速率的调节.设S={S0,S1,…,SM}表示处理域的所有工作状态集,每一种工作状态Sm(m∈{0,1,…,M})对应某一相应的传输速率rm,不同的传输速率所消耗的能量不同.此外,处理域在切换工作状态时,需要消耗额外的时间和能量,且不能进行数据的传输处理.2.2处理域中速率自适应机制为了便于分析处理域在数据传输过程中的工作状况,我们将处理域的传输过程视为一个可变服务速率的服务系统.假设到达处理域缓存队列Q的数据包为Poisson流,在处理域中提供数据传输服务的处理单元的服务时间服从负指数分布.同时,处理域在传输数据前根据当前时刻逗留在处理域中的数据总量(包括缓冲队列中的数据量和在处理单元中的数据包)对传输速率进行调节.处理域以较高的传输速率工作时需要消耗较多的能量,而以较低的传输速率时则消耗较少的能量.当缓存队列中数据包的积压数超过缓存容量H个时,新进入处理域的数据包将被丢弃.同时,处理域每次切换传输速率需要消耗额外的能量,过于频繁地切换工作状态不利于节约能耗,所以,应该尽可能降低切换工作状态的频率.也就意味着,当逗留在处理域中的数据包发生变化时,处理域应根据具体情况延时切换,而不能立即改变工作状态.因此,我们给出下列速率自适应切换规则:(1)假设处理域有M+1个不同的工作状态S={S0,S1,…,SM},处理域的每一种工作状态Sm对应一种服务速率μm,其中,服务速率μm表示单位时间内传输服务数据包的个数,且满足0=μ0<μ1<…<μM.服务速率μm与上一小节所定义的处理域的数据传输速率rm一一对应.令数据包的平均大小为a,则rm=aμm.当逗留在处理域中的数据量为0时,处理域进入空闲状态S0.(2)定义一个调节处理域的服务速率的正整数阈值q.(3)初始时刻处理域的工作状态为S0;当有数据进入处理域时,工作状态切换到S1;当处理域中逗留数据总量(包括缓存队列中的数据量和处理单元中的数据量)大于(M-1)q时,工作状态切换到SM,其服务速率为最大值μM,而且服务速率不再随逗留在处理域中的数据总量增加而提高;当所有数据处理完毕后工作状态切换回S0.(4)当处理域中逗留数据量上升到mq+1,且处理域的服务速率小于μm+1时,则处理域服务速率提高到μm+1.(5)当传输处理域中逗留的数据量下降到mq+1,且处理域的服务速率大于μm+1时,则处理域服务速率降低至μm+1.令N(t,m,k)表示t时刻逗留在处理域中数据量为k及服务速率为μm的状态,即p(t,m,k)=P{N(t)=N(t,m,k)}.由于limt→p(t,m,k)极限存在,且与初始条件无关,为方便描述处理域的状态转移,令limt→p(t,m,k)=p(m,k).因此,{N(t),t0}是有限状态空间上的生灭过程.同时,{p(t,m,k),0mM,0kH}构成概率分布,其状态转移强度图如图2所示(以M=4,q=4,H=16为例,其中,λ为处理域链路上的数据包的平均到达量).显然,λμM.否则,因系统不能达到稳态而无法进行讨论.Page5根据上述描述,可得到下列状态转移方程组:λp(0,0)-μ1p(1,1)=0,m=0烄λp(M,k)-μMp(M,k+1)=0,m=M,(M-1)q+1kH-1λp(m,k)-μmp(m,k+1)-λp(m,mq)=0,1mM-1,(m-1)q+1kmq-1烅μmp(m,k+1)-λp(m,k)-μmp(m,(m-2)q+2)=0,2mM,(m-2)q+2k(m-1)qλp(m,mq)-μm+1p(m+1,(m-1)q+2)=0,1mM烆为了获得处理域运行在各个工作状态的概率,令(λ,m)表示单位时间内服务速率为μm的概率总和,即(λ,m)=因为所有状态的概率和为1,所以,(λ,m)必须满足以下条件:根据式(1)~(3),求得j=0(λ,m)=p(0,0),烄∑q-1((j+1)ρj∑q-1j=0ρjj=0ρj()m∏m-1q∑q-1烅∑q-1j=0ρjj=0ρj()M+∑q-1[q∑H-(M-1)q-1ρMp(0,0),m=烆其中,ρm=λ/μm.j=0p(0,0)=1+∑q-1烄烅烆j=0ρj()M+∑q-1[q∑H-(M-1)q-1令zm表示处理域在单位时间内服务速率由μm切换到μm+1的平均转换次数与服务速率由μm-1切换到μm的平均转换次数之和.当m=1时,z1=μ1p(1,1)+λp(0,0),根据式(1)可得z1=2μ1p(1,1).当m=2时,z2=μ2p(2,2)+λp(1,q),根据式(1)可得z2=2μ2p(2,2),以此类推可得zm=2μ1p(1,1),m=1根据状态转移方程组(1)求得p(m,(m-2)q+2)=∏m-1令ψ(λ)表示单位时间内服务速率的转换次数,即工作状态的平均转换次数.结合式(6)~(8)可得ψ(λ)=∑M其中,ρm=λ/μm,p(0,0)由式(5)给出.3网络能耗优化模型用有向图G(V,E)表示一个给定的网络,其中V和E分别表示节点集和有向链路集.设节点i∈V的邻接节点集为Ni={eij∈E;i,j∈V}.令网络中一个从源点s到终点d的请求数据包通信量为fsd,速率为λsd.数据包通过链路eij的总的通信量用fij表示,数据包通过链路eij的速率用λij表示.令cij表示链路eij上的链路带宽容量.显然,λijcij.令yd路由指示变量.节点i发送到终点d的请求数据包选择节点j作为下一跳节点,则ydPage6因此,数据包通过链路eij上的处理域总的通信量fij的表达式为同理,可得链路eij上的处理域的数据包平均到达速率λij的表达式:令tij,m表示链路eij上的处理域运行在工作状态Sm的总时间,则总的传输运行时间Ta,ij(处理域传输数据包的总时间)可表示为令Pa,m表示处理域运行在工作状态Sm(服务速率为rm)时的功耗,则处理域以工作状态Sm运行的能耗为Pa,mtij,m,从而得出处理域在各个工作状态下的能耗总和为∑M令(λij,m)表示链路eij上处理域在单位时间内运行在工作状态Sm的概率,则在总的传输运行时间Ta,ij内处理域以状态Sm运行的总时间tij,m为因此,链路eij上处理域的数据包的总的通信量表示为fij=∑M=Ta,ij·∑M同时,链路eij上处理域在切换工作状态时,需要消耗额外的能量和时间.假设处理域在单位时间内平均切换工作状态的次数为ψ(λij),额外开销的功耗为Psw,平均切换一次所需要的额外时间为δ,则处理域在总的传输运行时间(处理域传输数据的总时间)内切换工作状态的次数为Ta,ijψ(λij),额外开销的时间(处理域无法传输数据的总时间)为tij,sw=Ta,ijψ(λij)δ.因此,链路eij上处理域的能耗函数El,ij为El,ij=∑M=∑M=fij为实现网络总能耗最小的优化目标,我们得到下列能耗优化模型:∑j∈Niij·fsd-∑j∈Niyd其中,cij表示链路eij上的最大带宽容量.yd足流守恒,即对任意从源点s到终点d的请求数据包,流入节点i的数据包通信量fsd等于流出该节点的数据包通信量.显然,发起请求的源点s的流入数据包通信量为0,接收请求的终点d的流出数据包通信量为0.4能耗优化路由的分布式启发算法4.1分布式启发算法本节设计一种基于蚁群算法的分布式启发算法对能耗优化路由模型进行求解.该算法通过规划每个请求数据包的传输路径优化网络总能耗,实现能耗最小的目标.算法的基本思想是:首先,制定简单的路由优化规则,即每个节点对于需要转发的数据包,从若干条到达终点的候选路径中选择一条使得该路由路径上的链路总能耗最小的路径.然后,网络中所有的节点同时并发地实施该优化规则,通过不断地对数据包传输路由路径进行动态优化,实现网络的总能耗最小.分布式能耗优化路由启发式算法基本思想如下:(1)在基于蚁群算法的分布式启发算法中,我们定义两种类型的蚂蚁:前进蚂蚁和返回蚂蚁.(2)当源点发出请求数据时,源点首先查询自己的路由信息表是否存在到达终点的有效路径,若存在则直接发送请求数据;若不存在,源点将生成若干只前进蚂蚁,并将源点、终点、请求通信速率评估值λsd和请求通信量评估值fsd添加到蚂蚁记录信息表中,同时初始化每只蚂蚁的生命值live、能耗评估向量犈l和路径向量狆犪狋犺,禁忌向量狋犪犫狌,如图3所示.前进蚂蚁从源点出发,根据节点的路由信息素和启发式信息,不断地在网络中探寻一条到达终点的有效路由路径.令蚂蚁由当前节点i选择下一跳节点j作为到达终点d的概率为Page7φij,d=其中,τij,d表示节点i选择邻接节点j到达终点d的路线信息素值,ηij,d表示节点i选择邻接节点j到达终点d的启发式信息,α表示信息素值相对重要性权值,β表示启发式信息相对重要性权值.Ni,d表示节点i中能到达终点d的邻接节点集合,即蚂蚁下一步移动可选择的节点集.将蚂蚁的请求通信速率评估值λsd和请求通信量评估值fsd分别与信息素表的链路通信速率评估值λij和链路通信量评估值fij相加,计算得出从节点i到邻接节点j的通信速率评估值(λij+λsd)和通信量评估值(fij+fsd).由此根据式(15)计算出选择路径eij的能耗评估值El,ij.令启发式信息ηij,d为其中,σ表示启发式信息调节因子.显然,能耗值较低的链路会被优先选择.(3)在前进蚂蚁移动过程中,蚂蚁不断地收集网络的状态信息.当前进蚂蚁从节点i移动到节点j后,蚂蚁将节点j加入到禁忌向量狋犪犫狌中.同时,蚂蚁评估出数据包从节点i到该节点j的传输能耗El,ij,并将其添加到蚂蚁的能耗评估向量犈l中,随后蚂蚁的生命值live增加1,即路由跳数加1.当蚂蚁的生命值超过阈值时,蚂蚁将会死亡,从而保证路由跳数不会超过设定的最大阈值.(4)当前进蚂蚁到达终点后,终点生成一只返回蚂蚁,并复制和存储前进蚂蚁携带的所有网络信息,然后消灭前进蚂蚁.返回蚂蚁将带着收集到的网络信息沿着前进蚂蚁移动的路径按原路返回.在返回的移动过程中,返回蚂蚁不断地在沿途节点上更新访问路线的信息素表和路由表,如图3所示.当返回蚂蚁从节点j移动到节点i后,返回蚂蚁释放的信息素增量为Δτij,d,Δτij,d表示节点i选择邻接节点j到达终点d的路线轨迹强度增量.前进蚂蚁的行走路径决定信息素增量值,我们给出如下定义:式中,C是返回蚂蚁携带的能耗评估向量犈l的分量值之和,κ表示信息素调节因子.即路由能耗越高信息素增量越小,能耗越低信息素增量越大.同时,定义路线信息素的更新公式为其中,参数ξ∈(1,0)表示信息素的挥发系数,将会随着迭代次数的增加而减小.根据返回蚂蚁携带的能耗评估向量犈犾计算当前节点到终点d的能耗,如果其值小于路由表中对应终点d的能耗,则更新路由信息表.(5)当返回蚂蚁到达源点s并更新完信息素表和路由表后,返回蚂蚁将被消灭.分布式能耗优化路由启发式算法可表述为如下详细步骤:1.如果节点收到一条请求,则执行步2;如果节点收到一只前进蚂蚁,则执行步5;如果节点收到一只返回蚂蚁,则执行步8.2.查询路由表中是否存在到达终点d的下一跳转发节点.如果存在,则直接转发请求,返回步1;如果不存在,则初始化信息素,执行步3.3.生成m只前进蚂蚁.初始化前进蚂蚁,具体包括添加源点、终点、请求通信速率评估值λsd和请求通信量评估值fsd到蚂蚁信息表中;同时初始化蚂蚁信息表的生命值live、能耗评估向量犈l、路径向量狆犪狋犺和禁忌向量狋犪犫狌.4.查询信息素表,根据式(20)计算的概率选择下一跳节点,根据式(15)计算出转发到下一跳节点的能耗评估值El,ij,并添加下一跳节点信息和能耗评估值到前进蚂蚁信息表,转发前进蚂蚁.返回步1.5.判断当前节点是否为终点,如果是终点,执行步6;如果不是终点,执行步7.6.生成一只返回蚂蚁并复制前进蚂蚁信息表,消灭前进蚂蚁.反向转发返回蚂蚁,按原路返回.返回步1.7.更新前进蚂蚁的生命值(生命值加1).若生存时间超过阈值,则消灭前进蚂蚁,返回步1;如果未超过阈值,执Page88.提取返回蚂蚁信息表,根据式(23)更新当前节点的信息素表,并计算路由线路能耗评估值,如果评估值更优则更新路由表.判断当前节点是否为源点,如果是,则执行步9;如果不是,则执行步10.9.消灭返回蚂蚁.判断是否到达最大迭代次数,如果未达到,则执行步3.如果达到,则返回步1.10.反向转发返回蚂蚁,按原路返回.返回步1.行步4.4.2性能分析我们指出,上述的算法是基于网络组件具有速率自适应机制的网络环境.另外,算法是分布式的,该算法能够在网络负载和网络拓扑结构动态变化的情况下动态调节网络的数据包,同时最小化网络总能耗.在我们的能耗优化路由算法中,对于一个具有N(N=|V|)个结点和L(L=|E|)条弧的有向图.一只前进蚂蚁在从源点出发开始搜索到达终点的路由路径的过程中,每经过一个中间节点,它都要查询路由信息表,计算概率以选择下一跳节点,并计算转发到下一跳节点的能耗代价评估值.假设节点的出度为dout,则节点存储的路由信息素表最大为(N-1)dout,而且节点的出度doutN,因此查询节点的信息素表的时间复杂度为O(N).前进蚂蚁在搜索过程中最多经过(N-1)个结点,所以,一只前进蚂蚁搜索路由路径的最大时间复杂度为O(N2).一只返回蚂蚁按照前进蚂蚁探索的路径从终点返回源点,并更新经过的每个节点(包括源点)的信息素表和路由表,最大时间复杂度为O(N2).因此,一次路径探索的最大时间复杂度为O(N2).5仿真实验及分析5.1实验设计通常,网络路由算法的性能主要考虑保障网络请求的延时最小或者如何得到一条最短路径.另一方面,当网络中的链路和节点具有多种不同的服务速率工作状态,且工作状态的调节与网络组件的能耗密切相关时,通过对数据包进行全局规划与调度不失为一种较好的选择方法.例如,当网络组件的工作状态的能耗服从次可加性时,即f(x+y)<f(x)+f(y),要达到优化能耗的目标,显然需要尽可能规划网络中的负载,提高链路的利用率,如GreenOSPF算法[8].但是,当网络组件的工作状态能耗服从超可加性时,即f(x+y)>f(x)+f(y),要优化网络能耗则需要尽可能均衡网络中的负载.根据文献[17]中速率与能耗关系,网络组件的能耗与工作速率的关系是非次可加性的.因此,为了验证本文提出的能耗优化路由策略在具有速率自适应机制的网络环境中能更好地适应链路和节点的能耗分布特征以达到节约网络能耗的目标,我们在实验中对比3种不同路由策略的能耗,并给出3种策略下对延迟性能的影响结果.第一种是本文提出的能耗优化路由(EnergyConsumptionOptimizationRouting,ECOR)策略;另外两种路由策略是传统的路由策略OSPF和以关闭链路和节点来提高链路利用率的节能路由策略GreenOSPF.我们选用NS-2作为仿真测试平台,选取文献[26]中的网络拓扑进行实验.如图4所示,网络拓扑由46个节点和69条链路组成.参照文献[17]的参数设定,如表1所示.并对链路处理域的最大功耗进行归一化处理,即最大速率的功耗归为1W.根据文献[17,27]中提及的速率缩放组件的功率的曲线公式:其中,P0表示链路上最低能耗功率,r0表示对应于P0的最大传输速率.令r0=1.625Mb/s,P0=0.232W,A=1.308mWMb/s-3,从而可得每个状态对应的传输功耗.表1列出了速率自适应策略工作状态及功耗.同时设置处理域切换工作状态的开销能耗Psw=0.1W,额外开销时间δ=0.01s.Page9工作状态传输速率/(Mb/s)传输功耗/WS0S1S2S3S4S5S6S7S8S9S10实验中设定基于蚁群算法的能耗优化路由启发式算法信息素值相对重要性权值α=1,启发式信息相对重要性权值β=1,每次生成的前进蚂蚁数量为10,最大迭代次数设为50,信息素挥发系数ξ=0.7,并且随着迭代次数的逐次递减,当降低到ξ=0.2之后保持恒定.5.2实验结果及分析首先,在网络请求数目逐步增加的情况下,我们测试和比较在不同的网络负载条件下ECOR、OSPF和GreenOSPF这3种路由策略的网络总能耗.对于网络系统中每组源点到终点的请求,实验随机生成10000个大小为10Kbit的数据包分组,每组请求的数据发送速率为1Mb/s.设定链路带宽容量最大值设定为10Mb/s.其中GreenOSPF的ExporterRouter(ER)数目通常情况下占网络总结点数的5%~10%[21].这里,令ER=10%.实验结果对比如图5所示.根据图5,我们观察到在请求数目较低的情况下,3种路由策略的能耗较为接近,且GreenOSPF的节能效果稍优.但随着请求数目的不断增加,网络负载逐渐加大.与OSPF和ECOR相比,GreenOSPF逐步表现出在具有速率自适应的网络环境下的高能耗特征.另一方面,随着网络的请求数目的增加,本文提出的ECOR表现出更好的节能效果.为了进一步分析网络能耗情况,我们给出了请求数目为30与请求数目为80两种情况下各条链路的利用率的分布情况,如图6和图7所示.其中,γ表示网络链路实际利用带宽与链路最大带宽容量的比值,即带宽利用率.γ值越大,表明网络负载越大.图63种路由算法链路带宽利用率对比(请求数目为30)图73种路由算法链路带宽利用率对比(请求数目为80)从图6可观察到,GreenOSPF因关闭了大多数的链路,所以,各条链路利用率相对较高.因此,GreenOSPF在传统的非速率自适应的网络环境中,显然具有较强的节能优势;但在具有速率自适应的网络环境中,链路利用的提升并不代表具有更优的节能效果,这与网络组件的能耗分布特征有关.根据表1可知,当传输速率以较低的速率工作时,网络链路上的功耗并无较为明显的差别.因此,在请求数目较少及网络负载较低时,GreenOSPF的节能效果要比OSPF和ECOR效果稍好.但随着网络负载的增加,当请求数目为80时,各链路的利用率如图7所示.从图7中可观察到,GreenOSPF的链路利用率普遍要较OSPF与ECOR的链路利用率较高,且利Page10用率较低的链路都被直接被关闭.根据表1可知,随着链路服务速率的提升,链路上的功耗有了较为明显的差别,且功耗的分布特征是非次可加性的,从而导致了在图5中GreenOSPF在具有速率自适应的网络环境中高能耗的结果.图8给出了当请求数目不断增加的情况下,3种路由算法的延迟对比.从图8可观察到,GreenOSPF由于能提高链路的利用率,所以链路的数据积压高于OSPF和ECOR,从而导致链路上的平均延迟高于OSPF和ECOR.另一方面,由于网络能耗的特征是非次可加性的,所以ECOR不断地朝着均衡网络负载的方向调节请求路由,进而也导致了路由路径的延迟提高,当路由路径过长则会导致如图7所示的结果,最大延迟也超过了GreenOSPF.综上所述,我们可知全局的网络路由策略对链路的节能机制有着重要影响.有效的节能机制必须和全局的网络路由选择策略相结合才能更好地实现节能目标.同时,也不难发现具有节能机制的能耗优化路由算法是以牺牲一定的网络性能(如延时)为代价的,但对于很多可容忍少量延时的应用来说是可以接受的.例如,对于某些应用(如VoD、IP电话、高清电视等),分组的延迟是敏感的,但是它们又能够容忍少量的延迟(如IP电话延迟小于150ms及HDTV延迟小于250ms以内时,用户感觉不到明显的断续).因此,在网络传输中运用某些能耗优化路由策略能有效地节省网络能耗及提高网络系统的利用率,同时获得满足要求的服务性能.6结束语及进一步研究方向降低网络系统能耗是当前计算机领域构建绿色网络迫切需要解决的关键问题.网络设备的服务速率自适应性为优化网络能耗和提高网络能效提供了有效的途径.目前在研究绿色网络节能路由策略方面,大多数的研究工作都侧重于努力提高链路的利用率;同时,在满足某些约束条件的情况下,尽量关闭利用率低的链路实现节能的目标,这些研究大多没有考虑到链路上的节能策略.为了能够更加有效地考虑网络节能问题,将网络节点级的链路节能策略和网络全局的路由选择策略相结合来研究具有更好的实际意义.本文提出一种基于速率自适应的全局性和分布式的能耗优化路由策略.该策略从网络全局路由的角度出发,根据网络系统的服务特征,将为数据提供传输服务的网络组件抽象为一个处理域.为求解处理域中速率自适应时的服务速率和工作状态平均转换次数,把处理域的服务过程视为可变服务速率的服务系统.然后以网络系统总能耗最小化为目标,并满足相关的路由和性能等约束条件,建立基于速率自适应的能耗优化路由模型.利用改进的蚁群算法对模型进行求解.在NS-2模拟器仿真实验中,我们将本文提出的能耗优化路由算法与相关文献的OSPF和GreenOSPF节能路由算法进行比较,并给出算法在能耗和延时方面的对比实验结果.对比实验结果表明本文提出的能耗优化路由算法能更有效地匹配速率自适应机制,具有较好的节能效果,从而达到优化和降低能耗的目的.另外,考虑节能不能仅仅通过牺牲网络的服务质量来换取低能耗,因此,研究如何将能耗控制与服务质量相结合实现多目标联合优化,例如,在满足链路带宽、延迟等多种服务质量约束条件下,将全局路由策略和链路的节能机制相结合进行能耗优化将成为下一步研究的主要工作.致谢感谢辛苦工作的评审专家,你们专业的意见和建议提高了本文的质量!
