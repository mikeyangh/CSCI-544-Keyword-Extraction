Page1有限域上高效的细粒度数据完整性检验方法陈龙1)王国胤2)1)(重庆邮电大学计算机取证研究所重庆400065)2)(重庆邮电大学计算机科学与技术研究所重庆400065)摘要基于交叉检验思想的细粒度数据完整性检验方法在实现完整性检验的同时可以对少数错误进行准确和高效的隔离,从而避免因偶然错误或个别篡改造成整体数据失效的灾难性后果.针对需要隔离多个错误时现有方案效率不高的问题,提出了多维结构下基于有限域均匀划分的完整性交叉检验方法,相应地构造了高效的多错完整性指示编码.该方法将完整性检验Hash数据分为若干组,任一组Hash可在某一中间粒度独立指示所有数据对象的完整性,多组Hash结合起来则在更小的基本粒度指示数据的完整性.该方法实现了模块化的Hash结构,对于GF(q)上的d维向量空间,每增加(d-1)组共(d-1)q个Hash即可多指示一个错.分析了该编码在不同参数下的性能,分析结论和实验结果表明该编码效率高,具有灵活的参数选择,可满足各种应用的不同需要.关键词计算机取证;Hash;数据完整性;组合编码;有限域1引言由于现实需求的推动,计算机取证研究发展非常迅速,引起了众多研究者的关注[1-2].Hash检验的一个重要应用是在进行取证复制的过程中计算并存储取证映像的Hash值,从而保证取证分析用的副本的完整性,实现证据固定与保全.取证映像(完全复制件)往往数据量很大,而计算机取证面临的主要难题之一是海量数据处理[3].包括取证映像在内的海量数据的完整性不能只停留在整体是否可靠、未被修改的层面上,因为若有偶然数据变化就会影响全部数据的可用性、可信性.细粒度的数据完整性检验成为支持改善海量数据可用性的一种重要手段,文献[4-5]在开发取证映像工具时基于直观的磁头、柱面、扇区区分法从不同的角度对磁盘数据进行交叉检验,实现了一种基本的细粒度完整性检验方案,增强了磁盘数据的完整性与可用性.一般性的问题可归纳为:如何高效地判断每个细粒度数据对象是否具有完整性?细粒度是相对于传统关注数据对象大小的概念.例如考虑目录中的单个文件、一个文件的独立分片———小数据块、磁盘中扇区级的物理存储块[6]或数据流中的数据包.这样一来,伴随海量数据处理本身的问题,其完整性检验面临新问题———完整性检验Hash数据也成了大规模数据.Hash检验数据具有随机性,无法使用数据压缩技术进行压缩,对远程取证映像获取时的网络传输效率及完整性检验数据的存储带来较大的影响.例如:一个512GB硬盘的扇区级MD5Hash值将需要16GB的存储量,如果使用强度较高的SHA-256则需要32GB.借鉴纠错编码思想[7]可以在低出错率条件下通过交叉完整性检验使用少量Hash实现细粒度的完整性检验,从而减少Hash数据量[8].相对于每个数据对象使用1个Hash进行监督的方案,体现为Hash“压缩”.尽管可以借鉴纠错编码的思想,但研究表明完整性交叉检验涉及的编码在编码设计、编码性质及分析方法上与纠错编码都不相同,因而需要细粒度数据完整性指示编码理论与完整性检验新方法.陈龙等在讨论细粒度数据完整性指示编码基本性质的基础上已分别构造了针对单错、多错的细粒度数据完整性指示编码[8-10].基于复数旋转码构造的复数旋转多错完整性指示码[9]具有指示多错、模块化结构的特点,但它在指示稍多的错误时效率不高.本文考虑多错完整性指示的实际需求,提高编码的效率,基于有限域上的迹函数的性质,提出由有限域上的特殊向量组生成系列扩展迹函数———投影函数,利用系列投影函数可实现有限域的均匀交叉划分,进而构造了高压缩率的多错完整性指示码.2完整性指示编码2.1完整性检验编码思想设X1,X2,X3,X4,X5,X6表示6个数据对象,采用4个Hash监督这6个数据对象,使用如下的监督关系(交叉检验):式(1)中的“‖”表示将数据对象连接成一个数据流,“=”表示将左端的数据流进行单向Hash运算,等式右端h1,h2,h3,h4表示Hash.该监督方案可准确指示一个错误.在需要进行完整性检验时采用相同顺序处理数据对象,按式(1)重新生成Hash,与事先存储的Hash进行比较以判断数据对象是否发生改变.例如h1,h2与其原值不相符时,无法证明X1具有完整性,判定X1出错,而h3,h4无变化可明确表明其它数据对象没有出错,具有完整性.为方便分析编码的性质,将式(1)的监督关系表达为一个监督矩阵犃[m,n],如表1所示.m细粒度完整性检验需要从所有数据对象中指示出不具有完整性的若干具体数据对象,把基于纠错编码思想的完整性检验方法设计称为完整性指示编码,其基本原则是不能将出错数据对象判定为正常数据对象.2.2完整性指示码的基本概念定义1(完整性指示码).设需要检验完整性的数据对象有n个,若存在一种监督关系,使得生成并存储的m个Hash值,在对n个对象进行检验时能准确指示任意的t个出错对象,但无法准确指示Page3当nt+1时某组合中存在的t+1个错误,其中受监督次数最多的某个数据对象受到k个Hash监督(k1).这种监督方案称为完整性指示码,记为C=[n,m,t,k].定义2.完整性指示码的压缩率η为数据对象数n和使用Hash值个数m之比.定义3.利用完整性指示码C=[n,m,t,k]进行完整性检验时,若实际出现的错误数量e大于编码设计时可准确指示的错误数量t,则可能出现将正常数据对象判定为出错数据对象的情况,即指示出错的对象数量大于e.这种现象称错误放大.错误数据对象的组合关系不同会导致实际指示错误数量也可能不同.考察e个数据错误对象的所有组合,可得其平均值.实际指示错误数量的平均值和实际出错数量的比值称错误放大率,记为β(e).由于码C能准确指示t个错误,因此,出现t+1个错误时最能体现C的基本特性,将e=t+1时的β(e)简记为β,称为C的基准错误放大率.特别地,规定β(0)=1.3有限域多错完整性指示码复数旋转完整性指示码实现了有限域二维结构上不同方向之间的均匀交叉,可指示多个错误,不同的监督方式有q+1种[9].分析发现,不同的监督方式和有限域GF(q)上q+1个二维向量构成的两两线性无关的向量组对应.鉴于复数旋转完整性指示码的压缩率不够高,我们进一步讨论有限域GF(q)上三维及多维结构形成的均匀交叉监督方案.下文涉及有限域元素的运算均限定在有限域上,其它运算则为普通加法、乘法(如指数的加、乘).3.1基本概念定义4.设q是素数或素数幂(下同),则有限域GF(qd)在GF(q)上的迹函数[11]Tr:GF(qd)→GF(q)为把Tr(u)称为u在GF(q)上的迹.该迹函数是一个线性函数,对任意的u,v∈GF(qd),有以下5条性质[11]:①Tr(u+v)=Tr(u)+Tr(v);②对任意的a∈GF(q),Tr(au)=aTr(u);③Tr(uq)=Tr(u);④映射Tr:GF(qd)→GF(q)是满射;⑤对每一a∈GF(q),恰有qd-1个元素的迹为a.设α是有限域GF(qd)关于GF(q)的本原元,任一元素u∈GF(qd),则u可由自然基1,α,…,αd-1表示为u=cd-1αd-1+…+c1α+c0,其中ci∈GF(q).由①、②线性性质有Tr(u)=cd-1Tr(αd-1)+…+c1Tr(α)+c0Tr(1)(3)因此,先计算出一个自然基中所有元素的迹,由这些元素在GF(q)上的线性组合即可得所有元素的迹.定义5.向量组犞中有γ个GF(q)上的d维非零向量(d>1),如果犞中的任意d个向量都线性无关,则称犞是GF(q)上的d-线性无关向量组,向量个数γ称为向量组犞的阶.Rizzo提出了采用系统码矩阵(systematiccodematrix)结合范德蒙德矩阵(Vandermondematrix)的方式来构成线性编码向量组[12],其编码向量数可以达到(d-1)+q,但是却无法保证其中的任意d个向量均线性无关.陶均等在设计数据分散编码存储方案时讨论了线性分组编码需要的编码向量的构造问题,根据其结论可知GF(2)及其扩张域上d-线性无关向量组犞的阶γ的最大值的理论上界和下界[13].采用和陶均等人相同的思路和方法,可知阶γ的最大值的理论上、下界对于任意的GF(q)上的d-线性无关向量组犞也成立.若同时考虑另一因素———维度d,可以得到d>q时的更紧的下界,所以有结论如下.定理1.设q是素数或素数幂,则GF(q)上的d-线性无关向量组犞的阶γ的最大值满足如下的上、下界:其中d>1,max表示两者取大.证明.设α是GF(q)的本原元,则GF(q)上的所有元素均可以表示为{0,1,α,α2,…,αq-2}.首先,采用数学归纳法证明关于γ上界的不等式.(1)当d=2时,选取向量集合犞={(1,0),(1,1),(1,α),…,(1,αq-2),(0,1)},共计q+1个元素.考察有限域上的其它2维向量,可将它们划分为{αx,αy}、{αx,0}、{0,αy}三类,其中x,y≠0.那么,(αx,αy)=(αx·α0,αx·αy-x)=αx·(1,αy-x)烄(αx,0)=(αx·α0,αx·0)=αx·(1,0)烅(0,αy)=(αy·0,αy·α0)=αy·(0,1烆所以,这三类向量中的任何一个向量都可由向量组犞中的某一个线性表示.所以d=2时d-线性无关向量组犞刚好有q+1个向量两两线性无关,不Page4等式成立.(2)假设不等式γq+d-1对于d=k(k>1)时均成立,证明d=k+1时的情况.假设不等式在d=k+1时不成立,则有假设命题:可以得到一个k+1维向量组犞,其向量数至少为q+k+1且其中任意k+1个向量都线性无关.任取犞中一个k+1维向量,与犞中的其余向量作高斯消元,使其余q+k个向量消去一维,则高斯消元后的q+k个k维向量,应满足任意k个向量都线性无关,而这与结论d=k时γq+k-1相矛盾.因此,假设命题不成立,不等式在d=k+1时仍成立.(3)综上所述,由数学归纳法原理可知,对一切d>1,关于γ上界的不等式均成立.然后,采用构造法证明关于γ下界的不等式.若qd,参考范德蒙德(Vandermonde)矩阵,增加两个特殊向量,由GF(q)中的元素0,1,α,α2,…,αq-2构造包含q+1个向量的向量组犞及展开的矩阵如下:犞=狏1熿狏2狏3狏q-1狏q狏q燅+1燀燄分析向量组犞中的任意d个向量的线性无关性,分3种情况讨论:(1)从犞中任选d个向量但不包括狏q、狏q+1时,此时所得矩阵即为d×d的范德蒙德矩阵.显然对应的范德蒙德行列式不等于0,此时,任选的d个向量线性无关.(2)从犞中任选d个向量,其中包括狏q或狏q+1之一时,若d=2,显然所得矩阵对应行列式不等于0,否则用狏q或狏q+1对其它d-1个向量进行高斯消元,必要时每行提取公因子,可得(d-1)×(d-1)的范德蒙德矩阵.同理,所选的d个向量线性无关.(3)从犞中任选d个向量,其中包括狏q和狏q+1时:若d=2,则只有狏q和狏q+1,结论成立;若d=3,另一个向量的分量均不为0,显然此时3个向量线性无关;否则用狏q和狏q+1对其它d-2个向量进行高斯消元,然后每行提取公因子,可得(d-2)×(d-2)的范德蒙德矩阵.同理,任选的d个向量线性无关.综合这3种情况可知所构造的向量组犞中的任意d个向量都线性无关.即qd,对任意的GF(q)都存在γ=q+1的d-线性无关向量组,即q+1γ成立.若q<d,构造包含d+1个向量的向量组犞及展开的矩阵如下:显然,向量组犞中的任意d个向量都线性无关,即d+1γ也成立.所以,式(4)中左端的不等式成立.综合起来,定理成立.定理2.有限域GF(q)上d-线性无关向量组犞的阶γ在以下特例可达到上界.特例1:q=2;特例2:d=2;特例3:d=3且GF(q)的特征为2.证明.特例1和特例2中的上下界相等,所以γ可达到上界;特例3采用构造法证明.特例3中,q为2的幂次,向量组犞构造如下:由定理1的证明过程中构造的向量组可知,从犞中任选3个向量不包括狏q+2时3个向量线性无关,只需额外证明选中了狏q+2的情况.设已选中狏q+2为3个向量之一,选中的另外两个向量为狏i,狏j,其中i<j.分3种情况讨论:如果qi<j,则可构成单位矩阵,结论显然;如果i<qj,由于狏i的分量均不等于零,显然,所选向量的行列式不等于零;如果i<j<q,则所选向量的行列式等于α2i-2-α2j-2,由于i<j,所以2i-2<2j-2,又由于q是偶数,所以2i-2≠2j-2-q-1,于是α2i-2≠α2j-2.所以,所选向量的行列式不等于零,所选的3个向量线性无关.所以,此时γ可达定理1中的上界q+2.证毕.Page53.2有限域划分定义6(投影函数).设q是素数或素数幂,从GF(q)上d-线性无关向量组犞中选取一个向量狏=(a0,a1,…,ad-1),ai∈GF(q),令GF(qd)的自然基元素1,α,…,αd-1在GF(q)上的投影构成向量狏,即π狏(αi)=ai,i=0,1,…,d-1,定义GF(qd)中任一元素u在GF(q)上关于向量狏的投影为π狏(u)=cd-1π狏(αd-1)+…+c1π狏(α)+c0π狏(1)投影函数满足迹函数的性质中除③外其它4条,称向量狏为投影参考向量.由GF(qd)中投影相同的元素构成一个集合,于是每个投影函数都可以得到GF(qd)在GF(q)上的一个均匀划分———分为q个包含qd-1个元素的集合,由定理1,GF(qd)关于GF(q)的不同划分至少可达q+1种或d+1种.不同投影函数得到的划分之间形成均匀交叉,并有如下定理.定理3.GF(qd)上的一个元素x与x在GF(q)上任意d个投影函数的一组投影值b1,b2,…,bd可相互唯一确定.证明.设所选用的投影参考向量分别为狏1,狏2,…,狏d,d个投影函数为π狏1,π狏2,…,π狏d,由投影函数可知x有确定的d个投影值.反之,若已知投影值b1,b2,…,bd,则x=(x1,x2,…,xd)满足如下方程(所有运算都在有限域上进行):π狏1(x)=a11x1+a12x2+…+a1dxd=b1烄π狏2(x)=a21x1+a22x2+…+a2dxd=b2烅π狏d(x)=ad1x1+ad2x2+…+addxd=b烆用犃=(aij)表示式(10)中的系数矩阵,因投影参考向量狏1,狏2,…,狏d线性无关,所以det犃≠0,则x有唯一解.利用行列式表示形式,x的分量分别为x1=det犃1det犃,x2=det犃2det犃,…,xd=det犃ddet犃(11)其中,det犃,det犃1,det犃2,…,det犃d分别为式(10)左端系数行列式和将第1列,第2列,…,第d列分别替换成式(10)右端投影值列所得的行列式.证毕.定理3表明可由特定元素在不同划分中的投影值对其进行定位.3.3有限域多错完整性指示码定义7(有限域多错完整性指示码).设完整性检验数据对象有n=qd个,其中q是素数或素数幂,d是大于1的整数,需要准确指示数据对象中的任意t个错误对象,将qd个数据对象分别对应于GF(q)上的一个d维向量.从GF(q)上的d-线性无关向量组犞中任意选取k=(d-1)t+1个投影参考向量,将关于函数π狏j(j=1,2,…,k)投影相同的所有数据对象用一个Hash监督.于是,每个函数都把n个数据对象均匀划分为q份分别进行监督,参与每个Hash计算的数据对象有qd-1个,此监督方案共有kq个Hash值,构造得到有限域多错完整性指示码C=[n,m,t,k]=[qd,kq,t,k],k=(d-1)t+1.简称有限域多错指示码,简记为GFIIC(GaloisFieldmulti-errorIntegrityIndicationCode).有限域多错完整性指示码在d=2时为C=[q2,(t+1)q,t,t+1],此时的特例为复数旋转完整性指示码[[9].当d=3时,有限域多错完整性指示码为C=[q2,(t+1)q,t,t+1],称为有限域立方指示码,简记为GFC.定理4.有限域多错完整性指示码C=[n,m,t,k]=[qd,kq,t,k],k=(d-1)t+1的k组共kq个Hash可准确指示任意的t个错误.证明.已知每个数据受到k个Hash监督.设任意的t个出错数据对象对应于t个GF(q)上的向量狑i=(wi1,wi2,…,wid),i=1,2,…,t.另设一未出错数据对象对应于向量狑x=(wx1,wx2,…,wxd).那么任一狑i至多与狑x同时受d-1个Hash监督(若狑i与狑x同受某个Hash监督,则根据该Hash无法判断狑x是否出错).否则,假设狑i与狑x同受d个Hash监督,则该码使用的k个投影函数中存在d个投影函数,使得狑i与狑x的投影相同,即有由定理3得狑x=狑i.与已知的两者不相同矛盾.即假设不成立.所以,任一狑i至多与狑x同受d-1个Hash监督.根据鸽巢原理,监督t个出错对象的Hash且监督狑x的Hash至多有(d-1)t个Hash监督,即最多在(d-1)t个Hash上狑x无法与出错对象狑i区分,i=1,2,…,t.(d-1)t+1个Hash中的另一个可指示狑x具有完整性(未出错).所以,kq个Hash可准确指示任意的t个错误数据对象,而其它的数据对象具有完整性.证毕.Page6由码GFIIC的完整性检验、监督关系可知,每个分组均可独立指示全部数据的完整性.同时,由码中k与t的关系及定理4的证明过程可见,每增加(d-1)组共(d-1)q个Hash即可多指示一个错.所以,码GFIIC体现出模块化的Hash结构.3.4GFIIC码Hash生成与检验3.4.1Hash生成算法数据对象监督关系.设数据对象个数为n,指示错误能力为t.选取适当的素数或素数幂q,及维数d,使得nqd且k=(d-1)t+1γ.从有限域GF(q)上的d-线性无关向量组中选取k个向量.把k个投影函数所生成的Hash看成q行k列的Hash矩阵.将数据对象对应到有限域的元素:把数据对象从0到n-1依次编号,将每个编号j(j=0,1,…,n-1)表示为GF(q)上的d维向量(rd,…,r2,r1),满足j=(rd,…,r2,r1)=rdqd-1+…+r2q+r1.对数据对象进行投影划分:计算数据对象j(j=0,1,…,n-1)在第l个(l=1,2,…,k)向量(记狏l=(ad,…,a2,a1))上的投影u,即u=π狏l(j)=adrd+…+a2r2+a1r1,依据投影u判定数据对象j参与第u+1行第l列的Hash计算,即同一投影函数下投影相同的元素受同一个Hash监督.每个Hash由同一投影函数下投影相同的qd-1个数据对象计算得到.每个投影函数可生成q个Hash.并发计算模式.上述Hash值生成时依次读入数据对象,可采用并发计算模式[8].即并发计算所有该对象参与计算的k个Hash值,将中间结果暂存起来,后面某个数据对象读入之后取出该中间结果继续进行.并发计算方式的源数据只需读入一次,可有效缓解大数据量的I/O瓶颈问题,每个数据对象参与了Hash计算k次.Hash计算数据总量为knB.B为数据对象的平均大小,假设其为512字节的整数倍.再Hash计算模式.可信计算环境存储器数据完整性检验使用了Hash树或Merkle树,其中应用了再Hash机制[14-15].应用再Hash机制可加快细粒度完整性检验中的Hash计算速度.先分别计算每个数据对象的Hash,通过一定程度的缓冲,把受同一个Hash监督的元素对应的Hash数据连接后再进行Hash运算,即用完整性数据H(H(D1)‖H(D2)‖…‖H(Dq))替代H(D1‖D2‖…‖Dq).其中H表示完整性检验单向Hash函数,‖表示数据连接运算,Di为数据对象.再Hash方法计算数据总量为1+k再Hash计算算法.输入:码[n,m,t,k],n个数据对象,d-线性无关向量组输出:Hash矩阵算法步骤:1.根据有限域GF(q)、维数d以及指示错误能力t值从准备好的相应d-线性无关向量组中取出k=(d-1)×t+1个向量;2.初始化Hash矩阵,j=0;3.建立和Hash矩阵对应的缓冲数据矩阵;4.读入第j个数据对象;5.计算该数据对象的Hash数据hj;6.由k个对应的投影函数计算该数据对象的监督关系,确定监督该数据对象的k个Hash以及相应的Hash数据缓冲位置;7.将Hash数据hj分别存入缓冲数据矩阵中的对应k个位置(已有缓冲数据之后);8.如果k个位置中某个或某几个位置的数据达到合适的规模(如32字节、512字节等),分别取出Hash矩阵中对应中间结果或初值计算缓冲数据的对应Hash,将中间结果再存入Hash矩阵,并把缓冲数据清除;否则继续;9.j=j+1,重复步4~8直到数据对象处理完;10.输出Hash矩阵.3.4.2Hash检验算法Hash检验算法.输入:Hash矩阵,码[n,m,t,k],n个数据对象,d-线性输出:出错数据对象编号算法步骤:1.选取原Hash矩阵生成时相同的参数,采用相同的Hash计算方式生成Hash矩阵;2.将所得Hash矩阵和原Hash矩阵进行比较,如果任意一组(列)Hash完全相符,则没有出错,所有数据都具有完整性,结束.否则任意一组中至少有一个Hash不相符,继续下一步;3.先检查d个向量生成的Hash组,统计不相符的Hash数量;4.设这d组Hash分别有xd,…,x2,x1个Hash不相符,则最多有xd…x2x1个数据对象出错;5.从Hash矩阵相应列xd个Hash中取1个得到其行号(从小到大)rd,同理取得rd-1,…,r2,r1.由定理3,用步3中的d个向量和向量(rd-1,…,r2-1,r1-1)可求得对应的数据对象,其编号记为j;依据数据对象监督关系依次检查数据对象j在其它的(d-1)t-d+1组Hash中对应的Hash是否相符,若全都不相符,则数据对象j出错———不具有完整性,输出编号j;6.重复步5验证其它数据对象是否出错.Page73.5性能分析(1)参数边界分析.采用有限域多错指示码,以定理1中的γ下界为d-线性无关组的向量数.若固定指示错误数t和数据对象n=qd,此时压缩率η上界为设维数d小于有限域的阶q(否则问题简化,只能指示单错),则GF(q)上的有限域多错指示码指示错误能力t的上界为若固定指示错误能力t时,压缩方案维数的上界:(2)压缩率分析.有限域多错指示码的压缩率为显然,对某一固定维数和固定数量的数据对象,需要准确指示的错误越多,可实现的压缩率就越低.对某一固定错误数t和固定维数d,q越大时检验数据对象越多,压缩率也就越高.对某一固定错误数t和相同的Hash个数m,假设采用d+1维方案的Hash数据量m=(dt+1)q与d维方案使用的Hash数据量相同,则d+1维和d维方案的压缩率之比为Δd=η而对于某一固定错误数t和检验对象总数n=qd+1,采用d+1维和d维方案的压缩率之比为Δd=η由式(15)表达的维数限制可见,一般而言维数高的方案压缩率更高(不是所有参数都能同时满足不同维度参数关系).有限域多错指示码的维数等参数分别讨论如下:(3)错误放大率.依据指示码的指示错误能力,①当t=1时,该码退化为超方体单错指示码,其超方体的阶r只能取素数或素数幂,错误放大率增长较快,其具体性能参见文献[10].②当d=2,t2时,错误放大率增长稍快,其具体性能参见文献[9]讨论的复数旋转完整性指示码.③当d=3,t2时,用抽样的方式计算出不同有限域下有限立方指示码的基准错误放大率β.实验设定的抽样次数为20万次.得到GFC指示码的基准错误放大率如表2所示.有限域GF(4)1.62------GF(5)1.50------GF(7)1.331.13-----GF(8)1.281.071.03----GF(9)1.231.071.03----GF(11)1.171.021.011.00---GF(13)1.131.021.001.001.00--GF(16)1.091.011.001.001.001.001.00GF(17)1.081.011.001.001.001.001.00GF(19)1.071.001.001.001.001.001.00GF(23)1.051.001.001.001.001.001.00④当d=3,t2时,以q=16为实例,考察有限域立方指示码的一般错误放大率.通过抽样方法测试产生一定错误数量时的实际指示错误数,由于错误增多,组合关系更多,分别抽样50万次,GF(16)上的GFC码的一般错误放大率特性如图1所示.图1GF(16)上的GFC码的一般错误放大率由表2和图1可见,GFC指示码q很小及t=2时有稍明显的出错放大,其它情形的基准错误放大率都很低,随着错误数的增长,t较小时错误放大率增长稍快,t较大时错误放大率增长较慢.对比定理4的结论可知,GFC在设计指示错误能力范围内能完全准确指示出任意的多个错误,对于少量超出此范围的错误,大部分情况下也可以正确指示,其它情况类似.(4)时间性能.以有限域立方指示码为例,测试码的时间性能.随机生成2M、4M、8M大小的文件各10个,使用MD5Hash函数测试有限域立方码采用并发计算方式和再Hash方式时相对于单Hash生成的时间性能.设定数据对象分块大小为Page8512字节,每组为4096块,即n=4096,3种规格的文件分别有1组、2组、3组数据对象.分别采用两种方式生成Hash矩阵,另单独生成单一Hash,测试实际运行时间.计算Hash生成的平均时间,换算为相对于单Hash生成所费时间的比值.有限域立方指示码Hash生成的相对时间见表3.表3有限域立方指示码Hash生成的相对时间计算模式并发计算模式再Hash模式由表3可见,交叉检验带来了Hash计算的部分重复,相对于单Hash生成时间,生成Hash数据所需的时间随着指示错误数的增多呈线性增长.同时,并发计算方式时间增长稍快,而采用再Hash方式时间增长很慢.再Hash方式与传统的生成单一Hash方式时间性能差异较小.4结论细粒度数据完整性检验方法在实现完整性检验的同时可以对少数错误进行准确和高效的隔离,本文针对需要隔离多个错误时现有方案效率不高的问题,提出了多维结构下基于有限域均匀划分的完整性交叉检验方法,具体内容包括:提出了有限域上系列扩展迹函数———投影函数的构造方法,基于系列投影函数实现对有限域的多种均匀交叉划分,构造了有限域上高效的多错完整性指示编码,设计了再Hash计算模式以加快Hash生成.该码在设计指示错误能力范围内能准确指示出多个错误,对于少量超出此范围的错误,大部分情况下也可以正确指示.该码具有模块化的Hash结构:由任一组Hash在某一中间粒度均可独立指示所有数据的完整性,多组Hash结合起来则在更小的基本粒度指示数据的完整性;同时,对于GF(q)上的d维向量空间,每增加(d-1)组共(d-1)q个Hash即可多指示一个任意错.分析和实验结果表明该码效率高,可实现几十倍的“Hash压缩”,具有灵活的参数选择,可满足各种应用的不同需要,对实际应用具有指导作用.致谢感谢论文审稿专家给予的启发性意见、建议,这对提高本文质量起到了重要作用!
