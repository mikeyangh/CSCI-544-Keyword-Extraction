Page1支持偏好调控的路网隐私保护犽近邻查询方法倪巍伟陈萧马中希(东南大学计算机科学与工程学院南京211189)(东南大学计算机网络和信息集成教育部重点实验室南京211189)摘要随着人们对个体隐私的日益关注,位置服务中的隐私保护问题成为数据库领域新兴的研究热点.针对面向路网的隐私保护k近邻查询中,保护位置隐私引发的难以兼顾查询质量问题及查询者对查询效率与准确性间偏好调控需求问题,引入PoI(PointsofInterest)概率分布概念,通过分析服务器端PoI邻接关系,生成PoI概率分布.将服务器端查找k近邻PoI过程分解为路网扩张查询阶段和迭代替换阶段,为迭代替换阶段构建基于PoI概率分布的可替换PoI概率预测机制.基于所构建概率预测机制,提出支持用户偏好调控的保护位置隐私k近邻查询方法AdPriQuery(AdjustablePrivacy-preservingknearestneighborQuery),查询者通过调节筛选概率阈值,在兼顾位置隐私安全的同时,实现对查询效率与准确性的偏好调控.所提调控机制对已有的基于空间混淆的路网环境保护位置隐私近邻查询方法具有良好的兼容性.理论分析和实验结果表明,所提方法在兼顾保护位置隐私的同时,能有效提高服务器端查询效率,同时支持查询结果准确性与查询效率的偏好调控要求.关键词位置隐私保护;k近邻查询;路网;PoI概率分布;偏好调控1引言移动通信与空间定位技术的快速发展促进了基于位置服务(LocationBasedServices,LBS)的兴起,k近邻查询是位置服务中常见的查询模式,指查找距查询者当前位置最近的k个目标PoI(PointsofInterest),例如查找距查询者最近的k个餐厅或加油站等.从查询者运动模式角度,可分为无约束环境下近邻查询和路网环境下近邻查询,前者假设查询者可以向任何方向运动,后者要求查询者的运动必须受实际路网约束.该服务需要查询者向服务提供方提供自身准确位置以获取查询结果,实时位置信息蕴含用户行为模式,随着人们对个体信息安全的日益关注,用户的位置安全日益受到重视,如何在不泄漏个体位置隐私的同时实现k近邻查询成为数据库领域隐私敏感位置服务研究的一个热点.近年来,研究者提出了一系列保护位置隐私查询的方法,基本思想是通过隐匿机制,将隐藏后查询者位置及查询请求提交服务器,服务器返回候选结果,由可信第三方或查询者从中甄选出查询结果.从隐藏技术角度,这些方法可分为三类[1-5]:位置干扰(LocationObstruction)、空间变换(SpaceTransfor-mation)和空间混淆(SpatialCloaking).已有研究多数以维持查询准确性为前提,在查询效率与查询者位置隐私安全间寻求折衷.然而,查询处理中对位置隐私的保护引发了一些新问题:(1)保护位置隐私导致难以兼顾查询质量相对于不考虑查询者位置隐私的k近邻查询,保护查询者位置隐私的约束不可避免地导致查询效率降低.尽管已有一些研究致力于提高隐私保护k近邻查询的效率,但从隐私保护查询内在制约机理角度分析,查询效率、准确性与位置安全是对立的.在保证位置隐私安全的前提下,对提高查询效率的无限追求,最终不可避免需要牺牲查询的准确性.(2)保护位置隐私引起查询者偏好调控需求不考虑位置隐私的情况下,查询者只需解决查询效率和查询准确性二元关系,相对于保护位置隐私查询,其查询机理相对简单,使得查询者能够兼顾效率与准确性.保护位置隐私查询中,查询者面对位置安全性、查询准确性、查询效率三元关系,其查询机理的复杂,使得查询者需要在查询效率、准确性与位置安全间进行取舍,出现偏好调控需求.例如,对最近邻查询,准确性要求通常高于位置安全和查询效率要求;而对k近邻查询,其处理较最近邻查询更为复杂,在保证查询者位置安全前提下,查询者通常能够接受牺牲查询准确性以换取查询效率的提升.如图1所示路网,n1~n12对应公路交点,p1~p9为分布在公路附近的PoI(如加油站),查询者在图示位置发起距其最近3个加油站的查询,根据路网扩张搜索方法(具体见3.1节),服务器需要遍历n8n5、n8n2、n8n9、n9n7、n9n10这5条边才能确定距其最近的3个加油站p1,p2,p3.这一过程中,查找第1、2近邻,仅需遍历查询者所在边n8n9,确定第3近邻p3时,则需遍历其余4条边,若查询者愿意接受所查找到的第3近邻可能不准确(取决于选取4条边的哪条边遍历),即若选择n8n2,p5将被认为是第3近邻反馈给查询者,从而节省60%遍历时间.面向路网的隐私敏感查询中,通常采用空间混淆技术将查询者位置泛化为混淆区域(公路子网)提交服务器处理,服务器端通过扩大搜索空间返回候Page3选解集实现对查询者位置隐私的保护,搜索空间的扩大和复杂路网结构限制,更是加大了查询处理开销,查询准确性与效率间的调控机制更显重要.考虑位置服务中,查询者对位置隐私安全关注度日益提高,本文针对面向路网的隐私敏感k近邻查询存在的上述问题,提出一种查询者可根据自身偏好要求,在不影响查询者位置安全前提下,动态调控查询准确性与查询效率的面向路网隐私保护k近邻查询方案.论文主要贡献包括:(1)针对保护查询者位置隐私约束,片面提高查询效率存在的局限性,采用牺牲准确性换效率策略,缓解满足隐私需求约束下查询效率与准确性间的根本对立关系;(2)关注查询者偏好调控需求,在满足查询者保护位置隐私约束前提下,构建查询准确性与查询效率间的偏好调控机制;(3)提出用户可调控的路网环境保护位置隐私k近邻查询方法AdPriQuery(AdjustablePrivacy-preservingknearestneighborQuery),查询者可通过调节筛选概率阈值,在保证位置安全的同时调控查询准确性与效率,并通过理论分析和实验验证所提方法的有效性.本文第1节介绍保护位置隐私近邻查询研究现状;第2节对相关工作进行概述;第3节对问题进行描述,提出解决思路并引入PoI概率分布概念;第4节提出PoI概率分布生成方法;第5节构建基于PoI概率分布的可替换PoI概率预测机制,并提出查询者可调节查询准确性与效率的保护位置隐私k近邻查询方法;第6节对所提方法的有效性进行实验分析和验证;最后,总结全文并展望后续工作.2相关工作近年来,保护位置隐私近邻查询得到了研究者的持续关注,采用的主要技术包括:(1)位置干扰(LocationObstruction).查询者持续向LBS服务器提交关于特定假位置的查询请求,直到返回满足其查询准确性与隐私安全要求的结果;(2)空间变换(SpaceTransformation).设计保持数据空间关系的数据变换方法将原始位置和查询转换到新的数据空间执行以保证查询者位置隐私与查询准确性;(3)空间混淆(SpatialCloaking).将查询者位置扩展为包含该位置的泛化区域并提交至LBS服务器,由查询者或可信第三方从返回候选解中甄别出查询结果.研究者在面向非路网环境保护位置隐私近邻查询领域开展了大量工作[1,6-11],文献[1]利用空间混淆技术,由可信第三方将查询者位置泛化为包含该位置且满足隐私模型约束的矩形区域,并发送至LBS服务器,LBS服务器查找出泛化区域内所有可能位置的近邻PoI作为候选解返回可信第三方,可信第三方从候选解中筛选出目标结果返回查询者;文献[7]采用空间变换思想,首先将LBS服务器端存储的PoI位置坐标转换为Hilbert编码,查询者通过内置Hilbert编码转换器将自身位置转换为Hilbert编码并提交给LBS服务器,LBS服务器利用Hilbert编码连续相邻特性,将查询者位置编码的邻近PoI编码返回查询者,查询者解码获取返回Hilbert编码对应的PoI信息;文献[8]提出基于位置干扰的SpaceTwist查询方法,查询者生成假位置坐标,并向LBS服务器提交关于假位置的近邻查询请求,LBS服务器向查询者返回相应假位置的近邻PoI,查询者根据返回PoI判断已搜索区域和待搜索区域内切这一临界条件是否满足,若满足则返回的PoI即为查询者真实位置的近邻PoI;否则继续生成新的假位置,重复这一过程.多数方法不支持查询准确性与查询效率的可调控性.尽管基于位置干扰的SpaceTwist方法可以在不满足临界条件情况结束查询,实现牺牲查询准确性,换取查询效率提升.然而基于假位置干扰的查询处理中,查询者对其与LBS服务器间迭代轮次的未知,使得查询者难以对查询准确性与查询效率进行可控的动态调节.目前,面向路网的隐私保护近邻查询主要通过空间混淆技术实现[12-16],即由查询者或可信第三方将查询者位置匿名为覆盖该位置且满足特定隐私约束的混淆区域,将生成的混淆区域及查询请求发送给服务器,服务器根据混淆区域完成相应查询并返回候选解,由查询者或可信第三方筛选出目标结果.文献[12]采用空间混淆技术,由可信第三方生成星状子网,进一步通过合并星状子网生成满足查询者位置匿名需求的混淆区域提交至LBS服务器,LBS服务器对混淆区域进行路网扩张查询获取候选解集并返回可信第三方,由可信第三方筛选出查询结果;文献[13]通过可信第三方对路网进行层次划分,选取不同层次的路网构成满足查询者隐私保护需求的Page4混淆区域并提交至LBS服务器完成后续路网扩张查询与反馈过程;文献[14]通过可信第三方对路网进行Hilbert编码,利用Hilbert编码生成匿名区域.路网的复杂结构加大查询处理难度,不可避免的导致服务器处理代价激增.已有研究多数侧重于可信第三方混淆区域生成策略及LBS服务器处理效率的提升,提升效果最终受制于保护位置隐私和查询准确性约束,缺少对查询准确性与查询效率间偏好调控问题的关注.3问题描述与相关概念3.1问题描述面向路网的保护位置隐私k近邻查询常见模式如下:LBS服务器存储查询者感兴趣的PoI对象(例如加油站、宾馆等),查询者将其当前位置及查询请求(查询内容及位置隐私要求)提交可信第三方,由可信第三方将其位置坐标泛化为满足保护位置隐私约束的混淆区域提交至LBS服务器,LBS服务器分析混淆区域与路网的所有交点,并查找这些交点的k近邻PoI,将所有交点的k近邻PoI及混淆区域所包含PoI组成候选解集返回可信第三方,可信第三方从中筛选出目标结果并发送给查询者.文献[17]给出了证明:上述候选解集中的PoI必定覆盖查询者真实位置的k近邻PoI.本文要解决的问题是如何在兼顾查询者位置隐私保护需求前提下,支持查询者对查询准确性与查询效率的动态调控.路网环境保护位置隐私查询领域,查询者位置隐私保护需求主要通过引入位置隐私模型实现.目前常用位置隐私模型是基于空间混淆的匿名隐私模型,诸如K-匿名位置隐私模型、(K,l)位置隐私模型[16]等,K-匿名位置隐私模型要求混淆区域至少包含K-1个其他同类移动用户;(K,l)位置隐私模型要求混淆区域至少包含K-1个其他同类移动用户,且这些用户分散在至少l条公路边上.查询者向可信第三方发送自身位置及所指定位置隐私模型约束,可信第三方生成包含查询者位置且满足位置隐私模型的混淆区域代替查询者准确位置提交至LBS服务器进行查询处理,以实现对查询者位置隐私安全的保护.目前,路网环境近邻查询中,查询者位置隐私保护需求主要由可信第三方实现.前已述及,保护位置隐私查询中,查询者位置隐私安全性、查询准确性、查询效率间存在复杂的三元(2)调控机制支持常见有基于空间混淆的路网匿名隐私模型,保证调控机制对已有的基于空间混淆的路网环境隐私保护近邻查询方法有较好的适用性.下一节,对LBS服务器端查询处理过程进行分析,提出解决问题的基本思路.3.2基本思路路网环境保护位置隐私查询中,LBS服务器获取可信第三方提交的混淆区域后,处理主要由对混淆区域与路网交点的k近邻查询组成,对每个交点的k近邻查询可分为以下两阶段:(1)路网扩张查询阶段.从查询起点出发,每搜索到一个新的节点,将与其连接且还未搜索过的公路边加入待搜索队列,按照公路边的中点距搜索出发点的距离排序依次遍历,找到k个PoI.关系,要实现查询者对查询准确性与查询效率动态调控的同时不影响查询者位置隐私保护要求,调控机制应独立于可信第三方,不影响可信第三方根据查询者位置及查询者隐私保护约束生成混淆区域.因此,路网环境兼顾查询者位置隐私保护需求的查询准确性与查询效率动态调控机制需满足以下要求:(1)调控机制独立于可信第三方,仅通过对LBS服务器端处理流程的调控实现,以保证查询者位置隐私安全不受调控机制影响;(2)迭代替换阶段.将k个PoI按其距查询位置距离由近到远排序,寻找第k近邻PoI可能存在的替换PoI,对替换后的k个PoI按其距查询位置距离由近到远重新排序;重复这一过程,直到找不到第k个近邻PoI的替换点为止.最终保留的k个PoI即为交点位置的k近邻PoI.分析易知,服务器端处理开销主要集中于迭代替换阶段反复寻找第k近邻PoI的可替换点过程,特别当k值较大时,处理效率低下,查找最后几个PoI点耗费的时间甚至可能超过查找前面所有点所耗费时间.如图1所示,需要查找查询者的3近邻PoI,从查询位置出发,处理了查询者所在边的PoI点p1、p2后,只处理了1条边;继续查找第3近邻PoI,需要检验n8n5、n8n2、n9n7、n9n10这4条边上的PoI.可见,k越大,服务器端查找k近邻PoI的开销越大,并且大量时间消耗在确定距查询位置较远的PoI是否为相应近邻PoI的处理上.容易证明迭代替换阶段寻找替换PoI的计算复杂度与k呈近似线Page5性关系(证明见附录A).鉴于现实世界查询者在查询准确性与查询效率间存在不同的偏好取舍,在迭代替换阶段查询处理中若能预判断当前PoI邻近区域存在距查询位置更近PoI的概率,以便对是否继续查找可替换PoI进行预判断,将能有效提高服务器端处理效率,同时兼顾查询者对查询准确性与查询效率的偏好要求.因此,考虑从概率论角度建立k近邻查询准确性与查询效率间的调控机制,让查询者能够通过适当降低k近邻查询准确性,换取查询效率的提升.为叙述方便起见,表1列出下文出现的主要变量符号含义.符号GT搜索生成树p,q平面点或PoImaxnum最大容忍搜索边数x路网距离Prob()概率函数k查询对象数ei3.3相关概念尽管服务器端可以分析得到所有PoI对象关于某个位置点的准确位置分布信息,但对查询中的每个当前PoI点,实时地分析该点邻近区域是否存在距查询位置更近的PoI,将带来额外的计算开销:若分析获知该PoI无可替换PoI,则无需继续查询;否则,继续查询直至找到可替换的PoI.即便通过构建PoI索引结构可以一定程度提高效率,也需要对索引表进行额外的查询处理,不管分析结果如何,分析过程本身都需要对PoI点集(或索引表)进行至少一轮遍历.在现实生活中可以发现,某种类型的PoI有其自身分布规律,例如餐厅的分布通常比较稠密,从一家餐厅出发在较近的距离内能以较大概率找到另一家餐厅;而加油站的分布比较稀疏,从一个加油站出发找另一个加油站,在较近的距离内找到的概率比较低.因此,考虑利用PoI分布的潜在规律,生成服务器端PoI概率分布,实现对是否查询可替换PoI的高效预判断.引入路网距离与PoI概率分布定义如下.定义1.路网.采用无向图G=(VG,EG)描述路网,其中VG代表路网中公路交点的集合,EG代表路网中各个公路边组成的集合.现实世界PoI位置不可能在公路上,只是邻近公路,为叙述方便起见,下文用PoI属于某条公路表示PoI距该公路最近.定义2.路网距离.假设p,q坐标点位于路网G所在平面,p与q的路网距离指通过G中的边,由p到达q的最短路径距离.定义3.PoI概率分布.对任意p∈D,路网距离x为正实数,PoI概率分布指p的路网距离x范围内存在PoI的概率,PoI概率分布用Prob(p,x)表示.如前所述,隐私敏感k近邻查询中,LBS服务器对混淆区域处理的基本操作是对混淆区域与路网的交点进行k近邻查询,查询中消耗大量时间判断当前PoI是否为相应近邻.在此过程中,可以借助PoI概率分布信息,预判断存在距查询位置较当前所处理PoI更近PoI的概率,根据概率值选择继续查找可替换PoI或停止查找,实现对查询处理效率的调控.下一节,介绍LBS服务器端PoI概率分布的构建方法.4PoI概率分布LBS服务器端存储了路网及所有PoI对象的位置信息,容易计算出给定PoI到其余PoI的路网距离,考虑通过获取某个PoI到其余部分PoI的路网距离,分析距该PoI特定路网距离范围内存在PoI的概率.引入邻接PoI定义如下.定义4.邻接PoI.对p,q∈D,若存在e1,…,em∈EG,e1,…,em构成一条路经,满足p∈e1,q∈em,且满足任意r∈D,rei(i=2,…,m-1),称p,q为邻接PoI.对p∈D,计算p到其所有邻接PoI的路网距离:从p出发进行路网扩张搜索,获取其所有邻接PoI,记录所有邻接PoI与p的路网距离.当PoI分布较稀疏时,分析p的邻接PoI可能需遍历整个路网,因此考虑设置搜索终止条件以避免这种极端情况的发生.终止条件为已遍历边的数目超过阈值a,且查找到的邻接PoI数目亦大于阈值b,其中a,b为正整数.在此基础上,给出查找给定PoI邻接PoI过程所访问路径的搜索生成树定义.定义5.搜索生成树.以给定PoI为生成树根节点,生成树第2层节点为该PoI所在公路边的两端节点,按照路网扩张查询方法,每搜索到一个新节点v,将v及搜索v经过的边(u,v)加入生成树.如图2所示路网,外围3条公路边长度为3,内部3条边长度为2,p0,p1,p2,p4位于1/3处,p3位于所在道路中间(注:图2仅作示意,图中的边非直Page6线).假设搜索终止条件阈值a设置为6,b设置为2,p0的搜索生成树如图3所示.由于设置了终止条件,需要记录没有找到邻接PoI的路径数量以及找到邻接PoI的路径数量.这些路径被选中的概率是不一样的.因此定义边的权重以便计算某条边被选中的概率,一条边被选中的概率与这条边的权重成正比.定义6.生成树边的权重.给定生成树T,e为T中一条边,e为e的父亲边,e具有cp条子女边,假设生成树第1层边的权重设置为1,e的权重为w(e),则e的权重w(e)=w(e)/cp.叶子边代表一条从生成树根节点到叶节点的唯一路径,因此叶子边被选中的概率也能够代表这条路径被选中的概率.在其邻接PoI的概率为性质1.对p∈D,p的路网距离x范围内存Prob(p,x)=其中:dist_sum(p,x)表示距离p路网距离不大于x的邻接PoI数量;dist_sum(p)表示p的所有邻接PoI数量;sum(p)表示当前生成树中各邻接PoI所在路径对应叶子边的权重之和.证明.考虑最基本情况,所有方向都能找到邻接PoI,从p点出发在路网距离x范围内存在其邻接PoI的概率为dist_sum(p,x)/dist_sum(p);一般情况下,并非所有方向都能找到邻接PoI,因此上述概率为Prob(A)×dist_sum(p,x)/dist_sum(p),事件A表示在某个路径上能够找到邻接PoI.首先查询p所在边,从p向所在边两端进行搜索,p的生成树第1层具有两条边,设置这两条边的权重为1,由生成树边的权重定义可知,父亲边的权重为其所有子边权重之和,因此生成树所有叶节点所连接边的总权重等于第1层边的总权重2.对任意一条边e,其父亲边为e,e有cp条子女边,Prob(选取e)=Prob(选取e)/cp,Prob(选取e)/Prob(选取e)=1/cp=w(e)/w(e).选择到第1层的任意一条边的概率为1/2,即第1层边的权重/生成树叶子边总权重.递推易得,Prob(选取e)=w(e)/2.每个叶子边代表一条路径,事件B表示在当前生成树中沿某条路径能找到邻接PoI,因此Prob(B)=sum(p)/2.在生成树中p的路网距离x范围内存在其邻接PoI的概率为Prob(B)×dist_sum(p,x)/dist_sum(p).服务器端有|D|个PoI,对应|D|棵生成树,Prob(A)=1其中Bi表示在每个PoI对应生成树中沿某条路径能找到邻接PoI.故路网距离x范围存在p的邻接PoI的概率为Prob(p,x)=Prob(A)×dist_sum(p,x)/dist_sum(p)设置递增x值序列(增幅结合路网度量规模设置),根据性质1,容易生成服务器端距任意PoI路网距离x范围内存在其邻接PoI的概率,进一步结合所生成概率序列,汇总形成PoI概率分布.仍以图2所描述路网为例,由图3可得p0距其两个邻接PoI的距离分别为1、3,对其余PoI进行类似处理,各PoI的邻接PoI、距邻接PoI距离、权重等信息见表2.若设置递增x序列为1,2,3,4,根据性质1,容易得到相应(路网距离、概率)序列为(1,0.2),(2,0.4),(3,0.65),(4,0.775).各PoI的邻接PoI点及其路网距离生成算法见算法1.PoI邻接PoI距离PoI所在边权重不含PoI边权重p0p1,p21,31,1/2p1p0,p3,p41,2,31,1/2,1/2p2p4,p0,p32,3,41,1/2,1/41/4p3p1,p42,31/2,1/21/2,1/2p4p2,p1,p32,3,31/2,1/2,1/21/2算法1.NeighborPoI(a,b).输入:终止条件参数a,b输出:各PoI的邻接PoI距离Page71.Qset=NULL;//Qset记录各PoI距其邻接点距离2.FOReachpinD//服务器端每个PoI点3.Lset=NULL;//初始化待搜索边集合4.Num=0;//已查找到的邻接PoI数目5.M=0;//已搜索边数6.lp=theedgecontainingp7.IF(lpcontainstwoneighborsofp)8.Calculatetheirdistancesl1,l2top;9.Qset.add(l1,l2);//把距离l1,l2加入集合10.BREAK;11.ENDIF;12.Lset.add(lp.link_edges);//把lp的邻接边加入队列13.FOReachleinLset:14.IFlehasPoI15.Qset.add(le.PoI.distance);16.Num+=1;17.ELSE18.Lset.add(le.link_edges);19.ENDIF;20.M+=1;21.IF(MaandNumb)BERAK;22.ENDFOR;23.RETURNQset;对服务器端PoI集合,可以设置适当的距离增幅,离线计算一组PoI概率分布序列并存储为PoI概率分布表,或基于所生成PoI概率分布序列,拟合PoI概率分布函数,生成服务器端所存储PoI的概率分布,为后续查询处理提供预测支持.PoI概率分布机制具有如下优点:(1)采用离线处理方式产生,不占用服务器端在线处理时间,实现对路网中给定位置任意路网距离存在邻接PoI概率的计算;(2)生成PoI点集的全局概率分布序列或概率分布函数,无需存储具体PoI索引信息.较之构建PoI索引结构,不仅节省存储空间,也能够更大程度的提升查询和判断效率.5查询处理方法AdPriQuery本节介绍路网环境支持查询者偏好调控的隐私保护k近邻查询方法AdPriQuery.算法思路如下:查询者将自身位置提交至可信第三方生成满足隐私安全要求的混淆区域,可信第三方将混淆区域及查询请求提交给LBS服务器,LBS服务器计算混淆区域与服务器端路网的所有交点,并利用基于PoI概率分布的可调控筛选替换机制,查找这些交点的k近邻PoI,最终向可信第三方返回所有交点的k近邻PoI集合及将混淆区域内所包含PoI作为候选解集,可信第三方从中筛选出目标结果并反馈给查询者.5.1客户端处理AdPriQuery方法客户端处理流程与已有的多数面向路网隐私保护k近邻查询方法相同.采用查询客户端、可信第三方与LBS服务器三方架构,主要采用空间混淆技术实现查询者位置隐藏处理.具体包括以下步骤:(1)查询者将自身位置、查询请求(包括查询对象数k、隐私安全要求①)及概率阈值Pu提交给可信第三方;(2)可信第三方对接收的查询请求进行处理,将查询者提交的当前位置点泛化为覆盖该点且满足查询者隐私安全要求的混淆区域;(3)可信第三方将查询对象数k、概率阈值Pu及混淆区域提交给LBS服务器,并等待LBS服务器返回候选查询结果集;(4)可信第三方结合查询者真实位置点信息,从返回的候选解集中筛选出查询者的k近邻PoI并将结果反馈给查询者.5.2服务器端查询处理LBS服务器接收可信第三方提交的混淆区域后,首先计算出混淆区域与服务器端路网的所有交点,随后对这些交点逐个进行路网扩张查询,生成各交点的k近邻PoI.设计最小堆Hr和最大堆Hp,最小堆Hr记录查询过程中遇到的新边,将所记录的边按其与查询位置点(交点)的距离排序,每次从最小堆Hr顶部寻找距查询位置最近的边进行搜索,搜索完成后将该边的邻接边加入堆并将该边从堆中删除;同时,将每次搜索到的PoI点添加到最大堆Hp中,这样搜索到k个PoI后,只需要对最大堆Hp顶部的PoI点进行替换分析处理.最小堆结构如图4所示,堆中每个节点存储本条边起始点到查询位置的距离d1以及上一个PoI点距该边起始点的距离d2,以便计算该边存在PoI的概率.算法主要思想是在隐私保护k近邻查询服务器端处理过程中根据用户需求,通过牺牲所获取较远①隐私安全约束并非本文主要关注点,基于空间混淆技术的Page8k近邻对象的准确性换取服务器端处理效率的提升.因此引入服务器端k近邻查询过程各PoI重要程度系数定义:定义7.PoI重要程度系数.给定参数s(0<s<1),LBS服务器查找位置点p的k近邻PoI过程中,其第k近邻PoI的重要程度系数定义为Ik=sk-1.重要程度系数体现了p的k个近邻PoI中第k近邻PoI的重要程度,重要程度值域为(0,1),s为指数系数,k值越大,重要程度越低.定义8.最大容忍搜索边数.给定重要程度系数Ik和查询前k-1个PoI已搜索边数m,最大容忍搜索边数maxnum=(Ik×m)/(1-Ik).假设查找位置p的k近邻过程时间耗费为O,按照近邻点搜索时间与其重要程度一致原则,第k近邻PoI的搜索容忍时间Tk应满足TkO×Ik,查询过程主要时间消耗是对边的遍历.查询第k近邻PoI过程,最大容忍搜索边数maxnum应满足maxnum/(maxnum+m)Ik,由定义7知maxnum(Ik×m)/(1-Ik).如果继续查找maxnum条边仍未能结束查询,则认为查找第k近邻PoI耗费的查询处理时间不可接受.重要程度系数中参数s需根据服务器端路网信息,结合路网PoI密度ρ和具体需求设置.由m=(k-1)/ρ有maxnum=sk-1(k-1)k-1maxnum×ρ/(maxnum×ρ+k-1槡调控思想.采用路网扩张搜索方法获取查询位置的k个近邻PoI后,按照距离查询位置远近由近到远排序,如果存在距离查询位置更近的PoI点,第一个需要替代的点必然是已获取的k个PoI中排在第k位的PoI点.若分析得出在第k近邻PoI的容忍搜索边数约束下存在替代PoI的概率大于所设置概率阈值Pu,继续查找;否则,认为查找到替代PoI点的期望太低、时耗过高,停止查找,并返回当前的k个PoI作为查询结果.具体流程如下:(1)计算当前第k近邻PoI的最大容忍搜索边证明.在第i条边查找到替代PoI的概率为数maxnum;(2)分析最小堆Hr的前maxnum条边中出现当前第k近邻PoI替代点的概率Pk,若Pk小于设定的概率阈值Pu,终止搜索,返回当前k个PoI作为结果;(3)否则,继续搜索当前第k近邻PoI点的替代点,若未能搜索到替代PoI点,终止整个搜索过程;(4)若搜索到替代点,则用替代点替换当前第k近邻PoI,调整最大堆Hp,重复这一过程.性质2给出在PoI最大容忍搜索边数约束下,计算当前第k近邻存在替换PoI概率的方法.性质2.假设最小堆Hr中第i条边上存在当前第k近邻PoI的替代PoI的概率为Pi,在只能遍历maxnum条边的约束下,找到当前第k近邻PoI替代PoI的概率为Pk=1-∏maxnumPi,则前maxnum条边搜索失败的概率为∏maxnumPi),存在替代点的概率为1-∏maxnum由性质1、2及生成的PoI概率分布,结合最小生成堆Hr中记录的边信息,容易计算出Pi以及最大查找边数约束下存在的当前第k近邻PoI替代点的概率Pk.用户设定的概率阈值Pu在0~1之间,设置为0表示查询者要求准确查询结果,即不进行查询优化;设置为1表示每次都省略最后替换查询过程,即完全省略服务器端迭代替换阶段查询处理,以换取服务器端的高处理效率,代价是承受可能存在的最大查询准确性损失.5.3算法描述概率阈值Pu可以调节查询者对查询准确性和查询效率的偏好要求,阈值Pu设置的越小,查询准确性越高,服务器端查询性能的提升越小,对应较之查询效率,查询者更关注查询结果的准确性;反之,阈值Pu设置的越大,查询准确性越低,LBS服务器端查询效率的提升越大,对应查询者更关注查询效率情况.筛选替换方法如算法2所示.算法2.Filter(Pu,max_distance,maxnum).输入:概率阈值Pu,最远PoI的距离max_distance,最输出:True/False,是否应继续查找替换PoI1.result=1;//初始概率设置为12.FORi=1tomaxnum:3.cur_distance=Hr.top(i).last_distance;Page94.cur_distance+=max_distance-Hr.top(i).distance5.result=result×(1-Prob(cur_distance));6.ENDFOR7.IF(1-resultPu)RETURNfalse;//停止搜索8.RETURNtrue;//继续搜索LBS服务器端对匿名区域与路网各个交点的k近邻PoI查询算法如算法3所示.算法3.PoIQuery(k,j,Pu).输入:k,混淆区域和路网的交点j,概率阈值Pu输出:k个近邻PoI1.Hp=NULL;//初始化最大堆Hp2.Hr=NULL;//初始化最小堆Hr3.L_num=0;//初始化已搜索边数L_num4.Hr.add(e(j));//把包含j点的边e(j)加入Hr5.FOReachlinHr//遍历堆中的待搜索边6.L_num++;7.FOReachpinl//遍历边上的每一个PoI8.Hp.add(p);//把PoI加入到最大堆Hp中9.IF(Hp.num>k):10.Hp.pop();11.ENDIF;12.IF(Hp.num=k)max_distance=p.distance;13.maxnum=(Ik×L_num)/(1-Ik);14.IF(Filter(Pu,max_distance,maxnum))15.testend=true;16.ENDIF;17.BREAK;18.ENDIF;19.ENDFOR;20.IF(testend)BREAK;//停止搜索21.IF((Hp.num=kandl.distance<max_distance)22.ENDIF;23.ENDFOR;24.RETURNHp中前k个PoI;LBS服务器完成路网与混淆区域所有交点的k近邻查询后,合并PoI点集,进一步查找混淆区域包含的PoI点(简单范围查询即可获取).将所得PoI点集作为候选解集返回可信第三方,可信第三方根据查询者位置从候选解集中选出最近的k个PoI返回查询者.LBS服务器端处理描述如算法4所示.算法4.AdPriQuery(R,k,Pu).输入:混淆区域R,查询对象数k,概率阈值Pu输出:候选PoI集合1.S=intersect(R);//生成R与服务器端路网交点集合2.CandSet=cover(R);3.FOReachpinS4.CandSet=CandSet∪PoIQuery(k,p,Pu);5.ENDFOR;6.RETURNCandSet;分析算法调控机理及流程可知,AdPriQuery算法能够实现3.1节的目标:(1)查询者能够通过调整概率阈值Pu对LBS服务器端基于可信第三方所提交混淆区域的路网扩张查询过程进行调控,实现对查询准确性和查询效率的偏好调控目的;(2)由算法流程可知,调控处理发生在可信第三方生成混淆区域并提交LBS服务器后,调控过程亦未与可信第三方或查询者进行通信(除了调控过程结束将候选解集返回可信第三方).因此,AdPriQuery算法满足预期的调控机制独立于可信第三方要求,能够保证查询者位置隐私安全不受调控机制影响;(3)AdPriQuery调控算法布署于LBS服务器端,算法的处理对象是混淆区域,本算法适用于服务器端满足以下处理模式的路网环境保护位置隐私近邻查询方法:LBS服务器接收包含查询者位置的混淆区域进行路网扩张查询以获取候选解集,并将候选解集返回查询者或可信第三方.该模式是目前基于空间混淆的路网环境保护位置隐私近邻查询服务器端的基本处理模式,因此,所提调控机制对已有的多数基于空间混淆的路网环境保护位置隐私近邻查询方法具有良好的兼容性.6实验结果本节对AdPriQuery算法的有效性进行实验分析.首先验证参数对算法效率和结果的影响,随后将AdPriQuery算法与已有的基于空间混淆技术的隐私敏感k近邻查询算法进行分析比较.所用路网数据来源于美国奥尔登堡市真实路网系统(http://www.datatang.com/data/13531),该路网包括6104个公路交汇点及7034条公路,7000个PoI点随机产生并分布在道路网络中.实验平台硬件配置如下:Intel(R)Core(TM)2CPU1.80GHz,Page102GB内存.根据第4节所设计的PoI概率分布生成方法,生成实验数据PoI概率分布如图5所示.6.1AdPriQuery算法参数实验分析本节测试查询对象数k与概率阈值Pu对算法效率与查询准确性的影响.参数s设置为0.975(实验数据集ρ为1,k的上限取100,最大搜索边数maxnum设置为10,结合定义8及其推论可得),阈值a与b分别设置为2和6.图6对应k值取10时,随着概率阈值由0.1递增至0.9,算法AdPriQuery服务器端处理时间及查询准确性的变化趋势.如图6所示,用户设置不同概率阈值Pu,服务器端查询处理时间随着Pu的增加呈减小趋势,这是由于Pu取值越大,服务器端执行AdPriQuery算法时,需要进行的查找第k近邻潜在替换点的处理越少,图6的实验结果与5.2节的理论分析吻合;相应的Pu取值越大,查找第k近邻替代点的操作被省略的也越多,而这当中出现的当前第k近邻PoI并非真实第k近邻PoI的可能性越大,其查询的准确率亦越低,图6的实验结果印证了这一结论.图7对应随着k的增加,Pu取递增阈值(0.3,0.5,0.7)时,AdPriQuery算法服务器端时间消耗变化趋势,由实验结果可得出如下结论:查询对象数k越大,服务器端查询时耗越大;但随着Pu的增加,时耗呈减小趋势.可见,对不同查询对象数k,AdPriQuery算法通过调节概率阈值参数Pu,能够有效的实现查询者关于查询准确性与查询时耗的偏好调控需求.图8对应概率阈值Pu及查询对象数k对算法查询准确性的影响,如图所示,随着Pu的增加,AdPriQuery算法查询准确性呈降低趋势,但随着k的增加,这种降低趋势显著变缓慢,这是由于查询对象数越多,AdPriQuery算法筛选判断错误的近邻PoI占查询PoI数的比值下降.图8查询准确性与查询规模k与概率阈值Pu6.2AdPriQuery算法与传统算法对比实验本节将AdPriQuery算法与传统不具备查询准确性与效率调节功能的路网环境隐私保护k近邻查询方法(叙述方便起见,将该类算法命名为Gen-PriQuery,以文献[16]算法为代表)进行实验对比.AdPriQuery算法与GenPriQuery算法客户端处理流程相同,区别在于服务器收到关于查询位置的混淆区域后,GenPriQuery算法进行常规精确k近邻PoI查询,查询者缺少对处理过程的调控能力.因此,只比较两算法的服务器端处理.图9为查询对象数k为10时,两算法服务器端Page11时间消耗对比图,当Pu取0时,AdPriQuery的时间消耗与GenPriQuery持平,对应概率阈值的筛选调节功能未执行情况.随着Pu增加,AdPriQuery算法的调节功效日趋显著,其服务器端时间消耗也越来越小;相应的查询准确性对比见图10,Pu取0时,概率阈值的筛选调节功能未执行,其查询准确性与GenPriQuery相同,查询结果均为准确k近邻,随着Pu的增加,AdPriQuery算法的准确性呈逐渐降低趋势.图9AdPriQuery与GenPriQuery时间消耗对比(k=10)图10AdPriQuery与GenPriQuery准确性对比(k=10)图11描述了AdPriQuery算法在概率阈值固定(Pu=0.5)时,目标查询对象数k对AdPriQuery算法和GenPriQuery算法查询性能的影响.如图所示,算法GenPriQuery服务器端执行时间明显长于算法AdPriQuery服务器端执行时间,随着k的增加,两算法运行时间均呈增长趋势,但AdPriQuery时间消耗的增长幅度较GenPriQuery算法明显趋于缓慢,这与前文指出的已有诸如GenPriQuery方法存在服务器端计算开销大,特别是k较大时,查询搜索规模激增的分析吻合.就查询准确性而言,如图11所示,随着k的增加,AdPriQuery算法查询准确性逐渐提高.图11查询对象数k对算法查询效果的影响(Pu=0.5)7总结与展望针对面向路网的隐私保护k近邻查询中,保护位置隐私需求引起服务器端处理代价激增,导致保护位置隐私前提下查询效率与查询准确性绝对对立问题,提出支持查询者对查询准确性与查询效率进行偏好调控思想,实现位置查询服务的安全化和个性化.通过引入PoI概率分布概念,对服务器端PoI邻接关系进行分析,提出PoI概率分布生成方法及查找替换PoI的概率预测机制.在此基础上,提出查询者可调控的隐私敏感k近邻查询方法AdPriQuery,查询者可通过调节筛选概率阈值,有效调控查询准确性与查询效率.理论和实验分析验证了所提方法的有效性.AdPriQuery方法依赖可信第三方,然而现实应用中,可信第三方容易成为系统安全及性能的瓶颈;另一方面,现实世界路网存在单行线等路段约束.下一阶段将进一步开展以下研究:(1)不依赖可信第三方的路网环境支持隐私偏好的k近邻查询方法;(2)结合实际路网存在的单行道、限行道等问题,研究带约束有向图模拟路网环境隐私保护k近邻查询中的偏好调控问题.
