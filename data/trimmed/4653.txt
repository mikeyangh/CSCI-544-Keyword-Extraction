Page1传感器网络邻居发现协议综述裘莹李士宁徐相森李志刚(西北工业大学计算机学院西安710072)摘要邻居发现协议是传感器网络协议族的重要组成部分,用于快速高效地发现通信范围内的邻居节点,为其他协议和应用提供邻居信息.文中根据近年来的相关研究成果,介绍传感器网络邻居发现的问题定义,提出了形式化的问题模型以及简化的时隙模型,并指出了协议设计面临的挑战:(1)在电池供电的前提下保证能量有效性;(2)保证实时性以满足应用的延迟约束;(3)适应网络拓扑的动态性,尤其是近年来基于位置移动应用的出现对邻居发现协议的性能提出了更高的要求.文中根据各类邻居发现协议的对称性、确定性、协作性、是否使用多信道和按需发现等特点分类,选定了发现延迟、能耗和最优近似比作为协议的性能评价标准,并针对各类具有代表性邻居发现协议分析研究其主要设计思想,剖析了相似协议间存在的关联性和演进过程,论述各自的优缺点及适用范围,归纳协议设计方法并通过理论分析比较协议性能.最后,通过真实环境中的实验比较了各类协议的实际性能,并总结和展望了邻居发现技术的未来发展趋势.关键词无线传感器网络;物联网;邻居发现;能量有效;移动感知1引言传感器网络使用大量低成本、小体积、低能耗的传感器节点通过无线通信自组织形成网络,用于感知和传输各类感兴趣的信息.传感器网络已在环境监测[1]、数据采集[2]、结构健康检测[3]、目标追踪[4]、应急救援[5]、动物习性监测[6-9]等领域得到了广泛的应用.在传感器网络应用部署中,传感器节点的地理位置分布往往不确定,并且没有基础通信设备的支持,节点间需要通过互相发现才能自组织形成网络.因此,邻居发现协议是传感网网络协议族中不可或缺的一个重要组成部分,合理地利用邻居信息可以有效地提高MAC协议、路由协议、拓扑控制协议等网络协议的性能.例如,MAC协议中通常会利用邻居的唤醒调度信息优化睡眠等待时间以节省能耗[10-11].路由协议使用邻居信息(如邻居节点的接收信号强度)作为选择下一跳路由的参考因素[12],以提高路由选择的准确性.拓扑控制协议[13]更需要准确的邻居信息以筛选部分链路作为可用的通信链路.这些协议的性能往往都与邻居信息的实时性和准确性有密切的关联[14].由于各类网络协议和具体应用中都需要使用邻居信息,因此传感器网络操作系统通常将它作为一个独立公用的基础服务[15-16].近年来,随着智能终端的普及,移动传感器网络已成为学术界研究的热点[17].这类网络在居民生活环境监测[18-19]、用户行为记录与分析[20-22]、交通运输[23-24]、社交网络[25-29]等方面得到了初步应用.许多移动应用通常都需要快速地收集邻近设备的信息以便高效地与它们合作来完成既定的任务[30-31].相比传统的传感器网络应用,此类应用中的节点移动性更大,对实时性的要求也更高,从而对邻居发现协议的设计提出了更高的要求.本文只考虑在不借助额外辅助设备(如定位设备[6,32]、定向天线[33-35]、天线阵列[36]等)的前提下进行邻居发现,即邻居发现的过程中仅使用无线数据包通信作为互相发现的基础.通过这方面的研究主要来解决以下问题:(1)如何能量有效地快速发现邻居?邻居发现协议期望能在最短的时间内发现所有通信范围内的邻居.然而,传感器网络中的节点通常受能量的制约,发送或监听邻居发现消息的频率过高会减少节点的生存时间.如何权衡能耗和邻居发现延迟是绝大多数邻居发现协议研究的关键点.(2)是否可以在有限的时间内发现所有邻居?传感器网络中的节点通常采用睡眠-唤醒调度周期地打开和关闭无线收发机以减少能耗,无线收发机大多数时间处于关闭状态,此时节点并不能接收和发送消息.那么邻居发现协议应当以何种形式的睡眠-唤醒调度控制无线收发机的状态,以保证它能在有限的时间内发现所有邻居?这需要对邻居发现过程建立模型,并构造合适的发现模式确保在理论上节点可以互相发现.(3)如何度量邻居发现协议的性能?目前学术界已提出了多种邻居发现协议,其发现模式存在差异,如何以统一的标准对它们进行系统地评价以客观地反映协议设计的优劣,这也是邻居发现协议研究必须解决的问题.本文综述传感器网络邻居发现技术的研究进展,第2节概述传感器网络邻居发现协议设计面临的挑战,并提出邻居发现问题的定义、模型以及协议的分类;第3、4、5、6、7节分别介绍确定性邻居发现、随机邻居发现、协作式邻居发现、按需邻居发现和多信道邻居发现;第8节综合比较各类协议的特点和适用场景;第9节展望未来的研究方向;第10节总结全文.2问题与挑战在无线网络中,单跳通信范围内无线信号可达的节点称为邻居.然而,在物理上互为邻居的两个节点并不能立即知道对方在通信范围内,必须通过信息交换才可以了解彼此的存在,该过程就称为邻居发现.发送邻居通告消息(也称为Hello消息、信标消息)是节点间互相发现的必要手段,旨在向邻居通Page3告自身的存在.邻居通告消息通常包含自身的链路地址、唤醒调度模式等信息,以便接收方根据这些信息构建邻居表,从而为本地的上层协议或应用提供邻居信息.2.1面临的挑战在传统的无线网络(如WLAN、蜂窝网络等)中,每个节点都具有充足的电源供给,无线收发机可以时刻保持监听状态,待发现节点只需要周期性地广播邻居通告消息就可以保证周围的邻居节点可以发现它.与传统无线网络相比,传感器网络的以下特点使邻居发现协议的设计更具有挑战性:(1)能量有效性传感器网络本身固有的特性决定了传感器节点只能使用电池供电.电池容量往往受到传感器节点体积的限制,所以节点应尽可能减少电量的使用以延长生存时间.已有研究[19]表明,开启节点的无线收发机处于发送或空闲监听状态的时间主导了节点的能量消耗.因此,传感器网络邻居发现协议应尽量减少无线收发机处于开启状态的时间.(2)实时性传感器网络应用通常对邻居发现的延迟有一定的要求[30],确保在给定的时间内发现所有的邻居节点.尤其是在移动传感器网络应用中,过长的发现延迟会大大降低用户体验.(3)网络动态性网络动态性包括节点的加入、退出和位置移动等动态事件.由于网络动态性,已发现的邻居随时可能会失效,因此传感器网络邻居发现必须是一个持续的过程.目前大多数应用中只是简单地使用现有的MAC协议(如B-MAC[37]、X-MAC[38]、A-MAC[39-40])广播邻居通告消息以互相发现,这类基于信道采样的协议都需要采用发送长度为一个周期的前导码(或监听一个周期的探测包)的方式进行广播,能量开销较大,并不适合持续更新邻居信息.2.2问题定义第2.1节中所描述的特性使得传感器网络的邻居发现问题显著区别于传统无线网络,因此传统无线网络的邻居发现协议并不能直接应用于传感器网络中.这就需要根据传感器网络的特性重新定义邻居发现问题,并根据新的问题模型提出合适的解决方案.2.2.1问题模型为了减少能耗,传感器网络中的节点一般都采用睡眠-唤醒调度的模式周期性地打开和关闭无线收发机.一个周期内唤醒调度模式是随时间变化对应的无线收发机状态序列.由于只有睡眠和唤醒两个状态,因此唤醒调度模式可以形式化表述为如下的二值函数:其中,Ψ(m,t)为0表示节点m在t时刻处于睡眠状态,此时无法发现邻居节点,也无法被邻居节点发现.Ψ(m,t)为1表示节点m在t时刻处于唤醒状态,可以发现邻居节点,同时也可以被邻居节点发现.在确定了唤醒调度模式的基础上,如果一对邻居节点m1,m2在某个时刻t同时处于唤醒状态,则认为两者互相发现,即邻居发现协议的目的就是寻找满足该定义的唤醒调度模式Ψ(m,t),使邻居发现延迟和能耗综合最优化.2.2.2时隙模型时隙模型将连续的时间轴分为等长的间隔称为时隙,并且所有节点的时隙互相对齐.每个时隙中节点处于睡眠或唤醒两个状态之一,唤醒时隙用于发送和接收邻居通告消息,时隙的长度应当大于发送或接收邻居通告消息的时间以确保邻居发现.分时隙唤醒调度模式本质上是将调度模式Ψ(m,t)离散化,下文中用记号ψ(m,t)表示.时隙对齐的时隙模型具有便于理论分析的优点,因而为绝大多数邻居发现协议所采用.然而,在实践中实现时隙对齐的难度较大,不仅需要对全网作时钟同步,并且需要充分考虑时钟漂移和软件处理延迟的不确定性所带来的影响.幸运的是时隙并不需要严格对齐,只要相邻节点时隙的偏差不超过一个时隙,那么在这一时隙内仍会有重叠的唤醒时间,足以保证发现邻居.因此根据时隙对齐原则设计的邻居发现协议仍然适用于时隙未对齐的情况,从而显著降低了实现的难度.在唤醒时隙中,节点首先发送邻居通告消息,随后切换到监听模式以接收邻近节点的邻居通告消息.当时隙未对齐时,这种模式只能单向发现邻居,如图1中左半部分所示,B节点无法接收到A的邻居通告消息,从而无法知道A节点的存在.文献[41]中提出在时隙的结尾再发一次邻居通告消息,就可以让一对邻居节点双向发现.如图1中右半部分所示,即使时隙未对齐,无论A和B之间的时间差是多少,仍然可以保证双向发现.Page4图1时隙未对齐时需发送两次邻居通告消息当时隙严格对齐时,实践中存在着恰好错过邻居通知消息的问题,文献[42]中提出的将唤醒时隙适当延长,同时将相邻的睡眠时隙缩短以保证总周期长度不变的方法,可以妥善地解决该问题.此外,文献[42-43]都利用了该方法将唤醒时隙数量减半,从而缩短了邻居发现延迟,极大地提高了协议的能量有效性.2.3评价标准为了比较不同传感网邻居发现协议的性能,学术界提出了多种评价标准以便对不同的协议进行统一比较.常用的评价标准为发现延迟、能耗和最优近似比.2.3.1发现延迟邻居发现延迟是指从两个节点进入彼此通信范围内的时刻起,到彼此接收到对方的邻居通告消息的时刻为止的时间间隔长度.发现延迟通常由应用指定,实时性要求较高的应用倾向于指定较小的发现延迟,以保证在指定时间内发现所有邻居.大部分研究将发现延迟进一步细分为最坏发现延迟和平均发现延迟.最坏发现延迟是指发现最后一个邻居所需的时间,用于评价算法的理论边界.平均发现延迟是所有邻居发现时间的期望,用于评价算法的实际性能.在最坏发现延迟相同的情况下,两种不同的邻居发现协议在不同的时间段发现的邻居数量也存在着差异.一般认为在初始阶段能更快地发现邻居的协议较优,这在发现延迟累积分布图中得以体现.如图2所示,横坐标为时间轴,纵坐标为已发现邻居数占总邻居数的比率,可以看到虽然A、B两种协议发现所有邻居所需要的时间相同,但是协议A的发现速度明显快于协议B,因此协议A的平均发现延迟小于协议B.2.3.2能耗传感器网络中能耗决定了节点的生存时间[44],邻居发现协议应尽可能减少能耗以延长节点的寿命.节点的实际能耗往往难以直接计算,由于无线收发机唤醒时的能耗远高于节点的其他能耗[45],因此一般使用无线收发机的唤醒时间与总时间的比值(即Duty-Cycle,占空比)作为评价节点能耗的标准,占空比越小,说明节点处于唤醒状态的时间越短,能耗越低.2.3.3最优近似比能耗和发现延迟是邻居发现协议设计中一对互相制约的因素.一般而言,发现延迟越短则这种邻居发现协议的效率越高,但往往它的能耗也越大,反之亦然.邻居发现协议设计的难点在于权衡这两个因素,在发现延迟能满足应用需求的前提下保证能耗尽可能低.为了综合分析发现延迟和能耗这两方面因素以比较不同邻居发现协议的优劣,文献[46]提出了将两者的乘积作为综合衡量邻居发现协议性能的评价标准.设邻居发现调度模式的周期为T,最坏发现延迟为L,一个周期内的平均能耗为P,即从而能耗与发现延迟的PL乘积Λ为若协议使用时隙模型,那么该乘积可以使用离散化的ψ(m,t)表示为文献[46]进一步使用最优近似比作为对称邻居发现评价的标准.若存在最优邻居发现协议的PL乘积为Λop(L),则最优近似比为根据该评价标准可以量化地比较不同邻居发现协议的优劣.2.4邻居发现协议分类现存的邻居发现协议可以根据不同的正交特性分类,每种协议可以分别属于不同的多个分类.根据唤醒调度模式的确定性,邻居发现协议可以分为确定性邻居发现和随机邻居发现.在确定性Page5邻居发现中,节点采用固定的唤醒调度模式,保证在指定的发现延迟内发现所有的邻居;而随机邻居发现协议采用了随机唤醒的调度模式,能在给定的发现延迟内以一定的概率发现邻居.根据节点唤醒调度模式是否相同,邻居发现协议可以分为对称邻居发现协议和非对称邻居发现协议.对称邻居发现协议中每个节点的唤醒调度模式相同,仅因为节点的启动时间不同或时钟漂移而使各个节点的调度模式间存在一定的时间相位差.而非对称协议中每个节点采用不同的唤醒调度模式,以满足不同类型节点占空比不同的需求.根据协议是否与相邻节点协作以完成发现过程,可以分为非协作式邻居发现和协作式邻居发现.非协作式邻居发现仅使用本地信息独立发现邻居节点,而协作式邻居发现利用已发现邻居提供的信息,共同发现附近未发现的邻居.根据邻居发现过程的持续时间,可以分为按需邻居发现和长期邻居发现.按需邻居发现只在上层协议或应用提出邻居发现请求时才启动邻居发现过程,而长期邻居发现将邻居发现过程作为一项持续运行的服务,连续不断地发现潜在的邻居.根据邻居发现过程是否使用多个信道,可以分为单信道邻居发现和多信道邻居发现.单信道邻居发现始终仅使用一个固定的信道发现邻居,而多信道邻居发现可以在邻居发现过程中切换到不同信道以发现邻居.此外,根据全局时钟是否同步,可以分为同步邻居发现和异步邻居发现.同步邻居发现要求网络中的每个节点具有完全相同的唤醒调度模式,这样就保证了节点在唤醒状态发送邻居发现消息时,所有邻居节点都可以收到该消息;异步邻居发现不需要网络中所有节点时间同步就可以发现邻居.然而,实现全网准确时钟同步在实际中难度较大,各个节点的启动时间不同且硬件时钟往往存在一定程度的漂移,因此在多跳网络环境中要求所有节点时间同步的条件并不容易满足.同步邻居发现协议的有效性取决于时间同步的准确性,这并不是邻居发现协议重点关注的内容,而是同步MAC协议(如S-MAC[47]、RT-Link[48])或时间同步协议[49-50]所需要解决的问题,因此本文仅综述不需要时钟同步的异步邻居发现协议,对同步邻居发现协议不作详细讨论.现有的邻居发现协议可按表1所示分类,每个协议可以分别属于多个不同的类别.51%[14]Quorum[51]U-Connect[46]SearchLight[52]C-Torus[53]Hello[54]BlindDate[43]Todis[55]Hedis[55]组合设计[56]Disco[41]Birthday[57]PSBA[58]WiFlock[59]Cohen[60]Acc[61]EasiND[62]BLE[63]3确定性邻居发现确定性邻居发现采用特定的唤醒调度模式,从理论上保证在指定的时间内可以发现所有邻居.3.1对称邻居发现在对称邻居发现中,每个节点采用的唤醒调度模式相同,但由于各个节点的启动时间不同或受时钟漂移的影响,节点间存在时间相位差.在实际应用中,使用对称邻居发现的前提是网络中所有节点的能耗需求比较类似,因此可以采用相同的唤醒调度模式.对称邻居发现的调度模式可以表述为:对于任意邻居节点对(mi,mj),存在时刻t使得Ψ(mi,t)=Ψ(mj,t)+Φi,j成立,其中1i,jn,Φi,j为节点对(mi,mj)的时间相位差.本节中介绍的邻居发现协议都满足该条件.3.1.1基于鸽巢原理的对称邻居发现保证邻居可以互相发现最简单的方法是让节点在一个周期内唤醒的时间稍长于半个周期,即在n个时隙中,让(n+1)/2个连续时隙处于唤醒状态,并在每个时隙中作邻居发现,其余时间睡眠.根据鸽巢原理[65],这种情况下任意两个节点间至少有一个唤醒时隙重叠.文献[14,65]将该方法称为51%协议.如图3所示,A、B节点的调度周期为12个时隙,每个周期中连续唤醒7个周期作邻居发现,至少有一个时隙A、B同时处于唤醒状态(图中的第5、6个时隙),从而保证了A、B必定能互相发现.Page6然而这种方法存在显著的缺陷,空闲监听时间至少为50%的周期长度,能量消耗过高,在实际应用中一般难以接受.3.1.2基于Quorum的邻居发现协议为了克服51%协议能量过高且占空比不可调的缺点,Tseng等人[51]提出了Quorum协议,使占空比可根据需求调整,同时保证邻居发现的确定性.Quorum机制是分布式系统中常用于保证冗余数据一致性的算法[66-68],为读写操作分配权限.两个Quorum集合总是存在非空交集以保证事务的原子性.Quorum协议利用了Quorum机制的特点,将n2个时隙以二维方阵形式排列.如图4所示(此处n=5),A、B节点都分别在方阵中任选一行一列作为唤醒时隙,无论相对时隙偏移是多少,行列之间至少存在两个重叠的唤醒时隙,从而保证了邻居发现的确定性.Quorum协议的唤醒调度周期为n2,需要处于唤醒状态的时间为2n-1个时隙,相应的占空比为(2n-1)/n2.当占空比的需求为1%时,发现延迟的最坏情况约为n2=40000个时隙.若每个时隙为10ms,则节点发现所有邻居的时间至多需要400s.Quorum协议虽然在保证邻居发现确定性的同时达到了降低占空比的目的,但是它的第2次唤醒时隙重叠是多余的(图4中的第18个时隙),这意味着Quorum协议并不是最优的对称邻居发现协议,理论分析证明其最优近似比为2,它仍存在可以进一步优化的可能.为了得到相同发现延迟要求下比Quorum协议更低的占空比,Kandhalu等人[46]提出了U-Connect协议.每个节点根据占空比的要求选取一个正整数p(一般为质数,在3.2.1节中进一步讨论),以p为周期进行唤醒调度.U-Connect选取p2个时隙中第1个周期的前p/2个时隙作为唤醒时隙,并且在每个周期的第1个时隙唤醒.如图5所示,当p取值为5时,第1个周期的第0,1,2个时隙都处于唤醒状态,而后续4个周期中节点只需在每个周期的第1个时隙唤醒.由于每个周期第1个时隙唤醒相当于节点以p为周期对信道进行扫描,且第1个周期中p/2个唤醒时隙覆盖了至少半个周期,从而保证了至少有一个唤醒时隙可以重叠.当p值较大时,p2个周期中的第1个周期的唤醒时间几乎可以忽略,因此与Quorum协议相比,在同样的发现延迟要求下,U-Connect的占空比更小.这一点也在最优近似比(1.5)上得以体现.为了得到比U-Connect协议更佳的最优近似比,Bakht等人[42,52]进一步提出了SearchLight协议.SearchLight将时隙以t×t/2的矩阵形式排列,选取每一列的第1个时隙作为锚点时隙,并选取第i列的第i+1个时隙为探测时隙,其中1it/2.当t=10时,唤醒调度模式如图6所示,第1列0、10、20、30、40个时隙为锚点时隙A,1、2、23、34、45个时隙为探测时隙P.与U-Connect协议类似,SearchLight邻居间的锚点时隙和探测时隙必然会有一次重叠.Search-Light在理论上有比U-Connect更小的近似比为槡2,这意味着它在占空比相同的前提下所需的邻居发现时间比U-Connect更短.SearchLight协议将唤醒调度模式矩阵的长宽比固定为21,一定程度上制约了调度模式的灵活性.为了研究长宽比可调整的更通用情形,Chen等Page7人[53]提出了一种基于ContinuousTorusQuorum(简称C-TorusQuorum)的邻居发现协议.如图7所示,在高度为h和宽度为w的时隙矩阵中选取任意一列和其后的任意一行的连续w/2个时隙作为唤醒时隙,同样可以确保邻居发现的确定性.作者证明了h=w/2是最优的Quorum比例,实质上此时的唤醒调度与SearchLight协议等价,其最优近似比同样为槡2.为了追求更优的最优近似比,Wang等人[43,69]提出了BlindDate协议在SearchLight的基础上通过精心安排探测时隙的位置,进一步提高了邻居发现的效率,使最优近似比达到了更低的1.34.Blind-Date将由s个时隙组成的时间段称为块,每个周期中包含m个块,每个周期的最后一个时隙作为静态时隙S,其作用类似于SearchLight中的锚点时隙.BlindDate从m个块中选出k个块作为动态块D,其作用类似于SearchLight中的探测时隙.每经过一个周期,不同块中的动态时隙D向不同方向移动一个时隙,直至到达块的边界时折回块中的第1个时隙.例如,图8中左边的D一直向右移动,而右边的D一直向左移动,经过s个周期后,该模式就会重复出现,这段时间称为超周期T.作者论证了在占空比相同的情况下,每个周期中块的个数m=5,动态块个数k=2时,可以得到最小的发现延迟,同时保证邻居发现的确定性.当s取值较大时,动态块实际上覆盖了图中约2/5的区域,相对于SearchLight(覆盖了约1/2的区域)更优.因此,在发现延迟相同的情况下,BlindDate的占空比要略低于Search-Light,其最优近似比仅为9/槡5≈1.34,是现存对称邻居发现协议中最接近理论最优值的方法.3.1.3基于Quorum协议的通用框架本节上文提到的邻居发现协议都将唤醒调度模式以矩阵的形式表达,并以固定的模式选择唤醒时隙以保证邻居发现.Jiang等人[70-71]对Quorum协议进行了推广,将这些模式具有非空交集的特征归结为Quorum系统的旋转闭包特性(RotationClosureProperty),提出了三类典型的Quorum系统:GridQuorum系统、TorusQuorum系统和CyclicQuorum系统,并证明了各类Quorum系统相应的最优近似比为2、槡2和1.为了进一步抽象各类基于Quorum协议的调度模式和协议参数,Sun等人[54]提出的Hello协议将各类协议以统一的通用框架描述.在Hello协议中,唤醒调度周期表示为一个c×n的矩阵,其中c为一个周期的长度,n为周期个数.如图9所示,图中的G和P分别表示守卫(Guardian)时隙和巡查(Patrol)时隙,每个周期的第0个时隙为守卫时隙,每n个周期中第1个周期的[1..c/2]部分时隙为巡查时隙.由于守卫时隙和巡查时隙覆盖了超过一半的周期长度,从而保证了守卫时隙和巡查时隙必然会在c×n的时间段内重叠.通过调整c和n的参数值,不同的确定性邻居发现协议可以统一变换为Hello协议(允许存在冗余的唤醒时隙).如图10(a)所示,将Quorum协议选取的行列分别平移到第1行第1列就可以覆盖Hello协议的唤醒时隙,此时第1个周期存在c/2Page8的冗余时隙.如图10(b)所示,当参数c=n且为质数时,U-Connect就是Hello协议的一种特殊情况.如图10(c)所示,当参数n=c/2且将探测时隙移至第1个周期,SearchLight可以变换为Hello协议的一种特殊情况.如图10(d)所示,C-Torus协议使用了与Hello协议唤醒调度方式基本相同,然而Hello协议侧重于灵活的参数选取以满足对称和非对称情况下的占空比和发现延迟的平衡.3.1.4组合设计协议上文中提及的邻居发现协议逐步减小了在相同发现延迟要求下所需的占空比.然而,它们都没有达到理论上最优的边界.Zheng等人[56]研究了邻居发现协议的最优化问题,明确提出了对称邻居发现唤醒调度模式的理论边界,并提供了一种构造最优唤醒调度模式的方法.文中证明了对称邻居发现协议在T个时隙内至少有m次重叠时,所需唤醒的时隙个数下界为槡mT.作者认为对称邻居发现问题本质上等同于集合的移位自相交问题,根据组合设计理论中的差集和乘子定理[72]提供了一种可行的最优唤醒调度模式.设T为唤醒调度周期,k为一个周期内的唤醒次数,m为重叠的唤醒时隙个数,作者称这种调度模式为(T,k,m)-设计.依据乘子定理,当唤醒次数k为质数的幂次时,必然存在一种(k2+k+1,k+1,1)-设计.图11展示了一种满足最优设计条件的(7,3,1)-设计.在一个调度周期内,无论该模式的表2确定性对称邻居发现协议参数和评价标准理论值51%[14]Quorum[51]U-Connect[46]SearchLight[52]C-TorusQuorum[53]Hello[54]BlindDate[43]组合设计[56]占空比稍大于50%2n-1n22/t(h+w/2)/wh(c/2+n)/cn35sk+1k2+k+13.2非对称邻居发现在实际应用中,不同角色的节点往往具有不同的唤醒调度占空比需求.例如,电源供应充足的节点会设置较大的占空比以迅速发现邻居,这是对称邻居发现协议所无法处理的.非对称邻居发现协议对时隙偏移是多少,它总是与任意邻居有至少一个重叠的唤醒时隙.组合设计协议达到了最优化唤醒调度的目的,其占空比为(k+1)/(k2+k+1).当占空比需求为1%时,组合设计协议的邻居发现延迟约为10000个时隙,与Quorum协议相比快了4倍.然而,从软件实现角度考虑,组合设计协议唤醒调度模式需要预先计算,并以调度表的形式写入节点存储空间.若占空比要求为0.1%,则每个调度值需要用32位无符号整型数表示,那么调度表所占用的空间约为4K字节.若需要更小的占空比则调度表所占用的空间将更大.因此,实际中需要综合考虑占空比和传感器节点的存储空间以决定使用哪种邻居发现算法.表2比较了本节中涉及的确定性对称邻居发现协议的参数和评价标准的理论值.)pp2这类问题提出了有效的解决方法,它并不要求每个节点有相同的唤醒调度模式,每个节点的占空比可以根据需求调节.值得注意的是,对称邻居发现可以视为非对称邻居发现的一种特殊情况,运用互质方法或倍数方Page9法等手段改造对称邻居发现协议,可以将其应用于非对称邻居发现.3.2.1互质方法非对称邻居发现中,如何选取不同长度的唤醒调度周期以保证有重叠的唤醒时隙是一个难题.利用孙子定理(又称为中国剩余定理)[73]可以有效地解决该问题,当一对节点唤醒调度周期互质时,根据孙子定理可以保证在若干个周期后唤醒时隙会有重叠.图12Disco协议由于需要保证网络中任意一对节点选取的m都互质,因此上述方法的难点在于如何合理选取唤醒调度周期m的值.理论上可以采用预分配或集中式统一分配的方式,但这会增加传感器网络部署的难度.为了保证互质,Disco协议规定m必须为质数以保证邻居间m的互质性.由于互质性约束,邻居节点不能选取相同的m值.这就导致了该方法在对称的特殊情况下无法使用.为解决这一问题,Disco要求每个节点选取一对互不相同的质数p1、p2为周期进行唤醒调度,即使邻居节点选取了相同的质数对(p1,p2),也可以保证在p1p2的时间内会有重叠,此时的占空比为两个独立的调度模式占空比之和1/p1+1/p2.Disco协议进一步探讨了p1、p2的选取对占空比的影响.在对称的情况下,假设应用的占空比要求为2%,那么p1、p2可以有多种选取方式,例如,选择(97,103)或者(53,883)都可以使占空比为2%.然而(97,103)的选取方式仅需97×103=9991个时隙的发现延迟,而(53,883)需要46799个时隙的发现延迟.因此,在满足占空比要求的前提下,应选取使p1p2尽可能小的质数对以使邻居发现延迟最小化.在非对称的情况下,Disco认为选择接近占空比倒数的质数作为p1可以最小化邻居发现延迟.例如,占空比要求仍然为2%,两个相邻的节点分别选择(53,883),(57,409)时发现延迟为53×57=3021,远小于选择(97,103)作为参数时的发现延迟.Disco需要根据网络的对称性分别设定协议参Dutta等人[41]提出的Disco协议率先根据孙子定理设计了一种非对称邻居发现协议.节点A、B的唤醒调度周期分别为正整数mA、mB,且节点只在每个周期的第0个时隙唤醒.当mA,mB互质时,根据孙子定理可以保证A、B必定会在mAmB的时间内有一次重叠的唤醒时隙.如图12所示,当mA=3,mB=5时,无论B的启动时间相对于A的偏移是多少,在15个时隙内必定会出现一次重叠.数,增加了实际应用的部署难度.为了能够灵活地根据应用特性指定合适的参数,Hello协议[54]提出只需调整参数c就可以针对网络的对称程度作出相应的优化.如图13所示,DC为所需的占空比,当c接近于1/DC时,可以达到非对称情况下最优的发现延迟;当c接近于2/DC时,可以达到对称情况下最优的发现延迟.Disco协议为邻居发现协议的设计提供了一种新颖的思路,但是它为了解决对称的特殊情况付出了较大的代价,采用两个质数作为唤醒调度周期的方法使占空比增大了约一倍.在对称的情况下,Disco相对于最优调度的近似比仅为2,还存在进一步改良的空间.U-Connect,SearchLight等协议也考虑了对非对称邻居发现情况的处理,并提出了比Disco更简便的方法.相对于Disco,由于以上方法都选取时隙矩阵中的一列作为锚点时隙,因此只需要将唤醒调度的周期设为质数p就可以处理非对称的情况,同时保留了在对称情况下必定有重叠时隙的特性.Page10Disco等协议都使用质数以保证互质性.然而,1000以内仅有不到2%的整数是质数,使参数的选择范围受到了较大的限制.Chen等人[55]提出Todis协议,选取3个连续的奇数三元组(n-2,n,n+2)作为唤醒调度的参数就可以保证互质性,同时显著增加了可选的参数空间.虽然该三元组的互质性并不对所有的奇数n成立,但作者论证了最小的非互质三元组为(1600023,1600025,1600027)和(2046915,2046917,2046919),这两组三元组对应的占空比远远小于实际应用中可能采用的占空比,因此可以认为任意两组由3个连续奇数组成的三元组所确定的唤醒调度模式必定存在互相重叠的时隙.由于Todis协议仅需要参数n为奇数,在给定占空比需求时,Todis可以得到比Disco更好的占空比粒度.3.2.2倍数方法互质方法虽然为大多数邻居发现协议所用,然而它并不是唯一可以解决非对称邻居发现问题的方法.SearchLight协议[42]提出了倍数方法,邻居节点间的唤醒调度周期具有倍数关系.假设节点A、B的周期分别为T、nT,其中n为正整数,那么唤醒调度周期较短的节点A重复n次调度周期后便与节点B的唤醒调度周期等长.如图14所示,只需要保证在nT的时间内A和B有重叠的唤醒时隙,就可以确保两者互相发现.此外,作者提出周期长度应从正整数n的幂次集合{n,n2,n3,…}中按占空比需求选取,以保证所有节点的唤醒调度周期都是倍数关系.倍数方法本质上是将非对称问题转化为对称问题进行解决,周期较长的唤醒调度中必须连续覆盖长度为T的时隙以保证邻居发现的确定性.3.2.3Quorum方法3.1.2节中提到的Quorum协议[51]仅能处理对称邻居发现,Chao等人[74]将Quorum协议扩展至非对称情况,提出了AQEC(AdaptiveQuorum-BasedEnergyConserving)协议,Quorum的大小可以根据节点对能耗需求的不同来进行设置,但仍然采用选取时隙矩阵中一行一列的方法决定调度周期的唤醒时隙.作者证明了该方法仍然可以保证邻居发现的确定性,确保了非对称情况下的唤醒时隙有重叠.Chen等人[55]提出了Hedis协议,将调度周期设置为n(n-1)的矩阵,其唤醒调度定义如下:ψ(t)=例如,当n=5和n=7时,Hedis协议的调度方式如图15所示.若一对节点具有不同的参数n,m,作者证明了只要n,m具有相同的奇偶性就可以保证互相发现,并且平均发现延迟为O(nm).3.2.4组合设计方法组合设计方法可以得到最优的调度模式,因此研究非对称发现的最优组合设计具有一定的理论指导意义.Zheng等人[56]认为,在非对称的情况下,设计最优唤醒调度问题可以归结为图的顶点覆盖问题.然而,寻找图的最优顶点覆盖问题是NP完全问题,目前还没有相应的算法可以在多项式时间内解决该问题.此外,该算法为集中式算法,需要知道全网的拓扑信息,通信代价较高,这在实际的网络中通常难以实现.Lai等人[75-76]将对称组合设计方法加以扩展,使其可以应用到仅有两种不同占空比需求的非对称情况中.作者将文献[56]中提出的(N,k,λ)差集扩展为适用于非对称情况下的(N,k,M,l)差集,增加的参数M为非对称节点对中占空比较高的节点在一个周期内唤醒的时隙个数.满足(N,k,M,l)差集的设计可以确保异构旋转闭包特性,即在非对称的情况下不同调度模式的节点可以互相发现.文中提出了两种满足异构旋转闭包特性的非对称邻居发现唤醒调度模式,分别为栅格Quorum模式和循环Page11Quorum模式.栅格Quorum模式与文献[74]中提出的AQEC协议基本相同.与栅格Quorum模式相比,循环Quorum模式可以用更少的唤醒时隙保证异构旋转闭包特性,从而使节点的占空比更低.在循环Quorum模式中,两个节点各自的调度模式需要满足旋转闭包特性,即对于任意的相对偏移它们的调度模式都会有非空交集.根据对称组合设计[56]中提出的方法,两个节点可以分别得到满足(n,k,λ)差集的多种调度模式,作者将两者的调度模式进行组合,并扩展较短的周期使之与较长的周期等长,随后验证扩展后的两个调度周期是否存在重叠,以筛选出符合异构旋转闭包特性的调度周期.该方法可以达到理论上的最优解,但由于筛选算法时间复杂度和空间复杂度较高,并不适用于实际计算和存储资源受限的传感器节点.4随机邻居发现随机邻居发现协议[34,57,77-78]使用随机广播邻居通告消息的方式发现邻居.随机邻居发现的性能问题值得关注.从直觉上看,采用随机发送的盲目性较大,其发现邻居的效率未必比确定性邻居发现高.然而,根据生日悖论(BirthdayParadox)[79],随机邻居发现的效果远比想象中好.生日悖论表述如下:如果一个房间里有23个或23个以上的人,那么至少有两个人生日相同的概率大于50%;在50个人中有相同生日的概率高达97%.这两个概率之高出乎绝大多数人的意料,但可以论证它完全是正确的.当房间里有n个人时,至少有两个人生日相同的概率为p(n)=1-p其函数如图16所示,横轴表示房间中的人数,纵轴表示至少有两人生日相同的概率.图16生日悖论中至少有两人生日相同的概率McGlynn等人[57]将生日悖论的特性应用于邻居发现中,提出了Birthday协议.假设一段时间可以分为n个时隙,两个邻居节点随机选择k个时隙醒来,那么在这n个时隙中至少有一次在同一个时隙醒来的概率为例如,在100个时隙内有16个时隙为唤醒时隙,每对邻居间互现发现的概率为Q(100,16)≈0.95,而此时占空比仅为16%.为了避免两个节点在同一个时隙内发送消息而产生冲突,Birthday协议进一步将每个时隙分为3种状态:发送状态、监听状态和节能状态,每个状态所对应的概率为pt,pl,1-pt-pl.对于网络中的任意一对节点A、B,当且仅当A处于发送状态且B处于监听状态时,才可以称为“A发现了B”.因此,每个时隙内A发现B的概率为plpt,n个时隙内A至少发现一次B的概率为Birthday协议在初始阶段可以快速地发现大部分邻居,相比确定性协议能获得更低的平均发现延迟,文献[34,80]对此进行了更深入的分析.然而,Birthday协议在多个邻居发现消息竞争发送时,产生冲突的节点仍然采用完全随机的方式继续进行邻居发现.Vazquez-Gallego等人[81]使用反馈机制通知产生冲突的节点在下一个竞争窗口中重复随机邻居发现,而没有产生冲突的节点被认为已发现,不必在后续时隙中再次发送邻居发现消息,从而减少了冲突发生的概率,同时降低了发现延迟和通信能耗.Chen等人[58]提出了基于质数集的邻居发现协议PSBA,减少了Birthday协议的平均发现延迟.PSBA根据应用需要的占空比选取质数集I,并随机地从I中选取一个质数作为当前的唤醒周期.在重复以该质数为周期调度α次后,再次在I中随机地选取另一个质数作为下一个唤醒周期,如此循环进行.PSBA利用质数间隔以提高节点唤醒时隙相遇的可能性,当占空比需求为1%时,PSBA理论上可以在10104个时隙内发现80.7%的邻居,而在相同的条件下,Birthday仅能发现63.9%的邻居.随机发现协议的优点是原理简单易实现,网络中的节点可以根据自身的能力自由地选择合适的占Page12空比,并且不需要考虑节点的唤醒调度是否对称.同时,它的平均发现延迟一般优于确定性邻居发现协议.然而,随机发现协议的发现延迟没有理论边界.从图16中可以看到当邻居发现概率到达95%以上时,出现了增长速度十分缓慢的长尾现象,为发现最后仅存的少数邻居花费了大量时间.SearchLight协议[42]结合了两者的优点,将探测时隙随机化以减少平均发现延迟,同时保证最坏发现延迟有确定的边界.5协作式邻居发现前文中提及的邻居发现协议都独立地发现邻居节点,并不需要与其他节点协作.然而,邻居关系往往存在一定的传递性:若A是B的邻居且B是C的邻居,那么A有很大的可能也是C的邻居.这一点在稠密网络中尤其显著,由于节点间距离较近,在节点的通信范围内会有较多的节点可以互相通信,也就有更大的可能性满足邻居传递性.协作式邻居发现协议利用这个特性提高邻居发现的效率,利用已知邻居发现潜在邻居.Chen等人[82-83]提出了一种基于组的协作式邻居发现算法,通信范围内已互相发现的节点称为组.当组中的任意节点发现了新的邻居时,该节点主动将本地存储的邻居信息发送给新节点.新节点利用得到的邻居唤醒调度信息准确地预测邻居节点唤醒的时刻,并在该时刻唤醒以便接收邻居通告消息,从而大大减少了发现延迟.采用组协作式发现时,节点i发现所有组内n个节点所需的最大时间tg为其中Eg(t)为节点i发现至少一个组内节点的期望时间,定义如下:Eg(t)=∫其中Tmin,i=min(Ti,0,Ti,1,…,Ti,n-1),而Pij(t)为组内节点i,j在t时刻前互相发现的概率.然而,由于组内节点本地邻居表中的邻居并不一定都是新节点的邻居,因此,对于那些不是新节点邻居的节点信息,一方面导致发送方浪费一部分额外的通信能量,另一方面也会造成新节点不必要的唤醒.针对该问题,作者进一步利用时空因素对本地邻居信息进行筛选,仅选取空间上位置接近或时间上近期活跃的节点作为新节点可能的邻居,从而提高了新节点发现邻居的效率,并减少了传输邻居信息的开销.Acc[61]和EQS[84]协议也使用了类似的协作式方法,在邻居通告消息中加入自身和已知邻居的唤醒调度信息以加快发现间接邻居的速度.Cohen等人[60]提出将已互相发现的邻居通过直接或间接相连的方式组成为一个段(Segment),只要段中的任意节点发现了新的邻居,那么它就会通知段中其他节点启动邻居发现过程,以确定它是否为自己的直接邻居.在这种方法中,段中的节点应当以多大的时间间隔发现新邻居是设计的难点.若间隔过小,那么在稀疏网络中节点很可能在空闲监听上浪费过多的时间;反之,在稠密网络中发现邻居的延迟可能会过于漫长.作者提出了3种方法估计待发现节点的邻居密度:(1)使用段中节点的平均邻居数作为待发现节点的邻居密度;(2)使用当前正在作邻居发现的节点其自身邻居数作为待发现节点的邻居密度;(3)综合以上两种方式,分别计算出密度并赋予恰当的权重,相加后得出的值作为待发现节点的邻居密度.作者使用最小均方差方法以比较3种方法的准确性.在节点均匀分布的情况下,3种方法的最小均方差分别为:(1)MSE1=Var(X);(2)MSE2≈0.84Var(X);(3)MSE3≈0.66Var(X).其中X为节点邻居数的随机变量.由此可见,第3种方法在均匀分布的情况下可以得到最好的准确性.本节前文所述的协作式发现协议都需要通过对邻居发现消息作出响应以达到双向邻居发现,然而,响应包会增加通信开销,并且增加了与邻居通告消息冲突的可能性.此外,由于存在节点间仅具有单向通信链路的可能性[85],所以邻居通告响应消息在这种情况下是无效的.Purohit等人[59]提出了WiFlock协议认为不需要邻居发现响应消息也可以达到类似的邻居发现的效果,从而避免了传输响应消息的开销.WiFlock以单向发现作为基本操作,将邻居发现和组维护过程相结合,在信标消息中加了邻居组信息,并使用协作式同步侦听和空间均分传输机制实现了更小的发现延迟和更快的组信息维护.6按需邻居发现前文提及的邻居发现协议自节点启动后一直使用固定的模式发现邻居,而决定发现模式的相关全局参数已经在网络部署前根据发现延迟和占空比需Page13求确定,在网络运行过程中始终保持不变.然而,这类协议并不能很好地处理以下两种情形.(1)上层网络协议对不同阶段邻居信息的实时性要求不同.例如在环境监测应用中,上层协议通常希望传感器节点在启动阶段邻居发现服务时能尽快提供邻居信息以建立到汇聚节点的通路,从而及时上报采集到的感知数据.而在网络的稳定期,由于网络拓扑已经趋于稳定,上层协议对邻居信息的实时性要求并没有启动阶段那么迫切.(2)用户参与交互在由智能终端设备组成的移动传感器网络应用中,通常用户会参与到设备间的交互.当用户提出邻居发现请求时,邻居发现服务应当尽快返回邻居信息以减少用户等待的时间,提高用户体验.这两种情形的共同点是需要邻居发现协议能够动态地根据外部请求调整发现模式以提高邻居发现能力.按需邻居发现协议采取了用额外的能量换时间的方法,在需要快速发现邻居时增加唤醒时隙的数量,从而具备了按需动态调整邻居发现模式的能力.6.1分阶段发现为了解决第1种情形中存在的问题,Cohen等人[60]提出将邻居发现过程分为两个不同的阶段:初始阶段和正常工作阶段.节点启动完成时进入初始阶段.在这个阶段中,为了尽快让其他节点发现,该节点以较高的频率广播邻居通告消息,并在剩余时间处于唤醒状态以接收其他节点的邻居通告消息,以便快速发现所有邻居节点.进入正常工作阶段后,节点可以使用常规的邻居发现协议以持续发现邻居.6.2增加发现时隙Zhang等人提出的Acc[61]有效解决了第2种情形中的问题.Acc并不是一种邻居发现协议,而是按需加速邻居发现的中间件.它利用现存邻居发现协议作为底层协议持续地发现邻居,并使用第5节中所述的协作方式交换邻居的唤醒调度信息.已知邻居和它们的调度信息有助于按需快速发现潜在邻居.当需要按需发现时,Acc会增加唤醒时隙以提高发现邻居的速度.然而,新增的时隙应当放置在哪些位置以最大化邻居发现的效率是Acc设计的难点.为了对每个候选的时隙进行量化评估,Acc认为可以从时间差异性和空间相似性两方面分别考虑.时间差异性是指一对节点的调度周期中不是同时唤醒的时隙个数,可以定义如下:其中m隙数.时间差异值越大,说明这两个节点的调度模式差异越大,也就更有可能通过对方发现新的邻居.空间相似性是指两个节点本地邻居表中共有的邻居数,代表了两个节点在空间上的接近程度,定义如下:其中nt0空间相似性大的节点发现的新邻居通常也是本节点的邻居.在确定了每个候选时隙的时隙收益后,当按需发现请求到来时,只需选择时隙收益最高的几个时隙作为额外增加的时隙,便可以快速地发现邻居.为了综合分析时间差异性和空间相似性对邻居发现的影响,Acc提出了时隙收益(SlotGain)的评价标准,定义如下:选择时隙收益越大的时隙就有越大的可能发现新的邻居.7多信道邻居发现为减少能耗,大多数传感器网络应用都选用功耗极低的符合IEEE802.15.4标准的射频芯片作无线通信的基础硬件.IEEE802.15.4标准[86]定义了16个信道用于互不干扰地通信.在邻居发现过程中,合理地分配和利用这些信道可以有效地减轻来自同类设备或其他工作在2.4G频段设备的干扰[87].Huang等人[62]提出了基于组合设计[56]的多信道邻居发现协议EasiND.作者将网络中的节点分为两类,被动待发现节点和主动发现节点.被动待发现节点使用固定的信道周期性地唤醒,而主动发现节点顺序使用多个信道扫描被动待发现节点.主动发现节点将组合设计得出的最优发现模式扩展到每个信道中,而被动待发现节点也使用相同的唤醒调度Page14模式,因此,当主动发现节点扫描至被动待发现节点所在的信道时,两者必然存在唤醒时隙的交集,从而互相发现.该方法实质上是组合设计在多信道上的扩展,其他单信道邻居发现协议也可以通过类似的方法扩展到多信道中使用.除了IEEE802.15.4标准,传感器网络也常用蓝牙技术作为无线通信的底层协议.蓝牙技术是一种低功耗、短距离的无线通信技术,广泛应用于智能手机、可穿戴设备、无线外围设备等移动设备中,用于代替传统的线缆连接.由于蓝牙设备通常使用电池供电,且电池容量往往受到设备体积的约束,因此节能是其协议设计需要考虑的重要因素,这一点与传感器网络协议的设计目标相同.蓝牙4.0标准中的BLE(BluetoothLowEnergy)模式工作在频段2402~2480MHz之间的3个信道上,每个信道的带宽为40MHz,相应的工作频段为2402、2426和2480MHz,BLE中处于邻居发现阶段的设备可以工作在3个不同的模式下,通告模式、扫描模式和初始化模式.通告模式中,设备周期性地在3个不同的信道上发送邻居通告消息,随后立即监听邻居设备的响应,若收到相应邻居的响应,则双方彼此发现.在扫描或初始化模式中,设备周期性地唤醒以轮流检测各信道中是否有邻居通告消息.在这种发现模式中,通告消息的发送周期和扫描间隔对占空比和发现延迟有直接的影响,如何合理地选取这两个参数决定了设备发现邻居所需的能耗和发现延迟.Liu等人[63]为BLE的邻居发现过程进行了建模分析,以确定通告消息的发送周期和扫描的间隔与邻居发现延迟的关系.文中将扫描模式的周期根据不同的信道分为3个区域,并根据接收邻居通告消息可能性的不同将每个区域划分为3种不同类型的块,分别计算通告消息位于该块的概率以及相应的发现延迟,从而得到邻居发现延迟的期望.根据期望的表达式,得出当通告消息发送的间隔越小或扫描信道的间隔越大时,邻居发现延迟越小.8邻居发现协议比较本文中提及的邻居发现协议各具特点,但也不可避免地在特定的条件下存在某些缺陷.本节对邻居发现协议进行了全面的比较,以便为未来的应用提供参考.在实际应用中,设计者应根据网络环境、应用对占空比与发现延迟的要求和协议开销等各方面选择合适的邻居发现协议.为比较邻居发现协议的性能,我们选取了本文中具有代表性的协议在真实环境中进行实验.实验在20个真实环境中的NPUMOTE节点上运行,节点的微控制器为ATmega128RFA1,集成了符合IEEE802.15.4标准的射频模块,并通过USB线缆连接到PC机以收集邻居发现时间数据.节点上运行TinyOS2.x操作系统,所有协议的占空比统一设为5%,时隙长度设为50ms.在每个活跃时隙,邻居通告消息按2.2.2节中所述在开头和结束时各发一次的方式以保证双向发现.实验结果如图17所示,其中横坐标为经过的时隙数,纵坐标为到该时隙时所发现的邻居数占所有邻居数的比率.图中的SearchLight+δ和BlindDate+δ协议使用了2.2.2节中所述延长唤醒时隙的方法以减少发现延迟,从而在最坏发现延迟上表现最佳.从邻居发现速度上来看,Birthday协议超过了所有的确定性协议,体现出了随机发现协议在平均发现延迟上的优势.然而,当邻居发现比率高于80%时,Birthday协议不可避免地出现了长尾现象.图17典型邻居发现协议实验比较,占空比同为5%表3定性地比较了在同等实验场景下,各类邻居发现协议的性能.其中发现速度以占空比相同且发现一半以上邻居为前提作比较.类似地,占空比也是在同样的发现延迟且至少发现一半邻居的前提下进行比较.最后,表4总结了本文中提及的各类传感器网络邻居发现协议的适用网络环境和应用范围.从表中可以看到不同的协议在不同的评价标准中各有高下,并不存在各方面都最优的协议.因此,在实际工程实践中通常需要根据应用的占空比与发现延迟需求、网络的对称性等方面作权衡,选择最适合实际网络环境的邻居发现协议.Page15协议Quorum[51]SearchLight[52]U-Connect[46]C-Torus[53]Hello[54]BlindDate[43]Todis[55]Hedis[55]组合设计[56]Disco[41]Birthday[57]PSBA[58]WiFlock[59]Cohen[60]Acc[61]EasiND[62]BLE[63]Quorum[51]U-Connect[46]SearchLight[52]C-Torus[53]BlindDate[43]Disco[41]Hello[54]Hedis[55]Todis[55]组合设计[56]Birthday[57]PSBA[58]WiFlock[59]Cohen[60]Acc[61]EasiND[62]BLE[63]表3传感器网络邻居发现协议特点比较计算开销较低较低中等中等表4传感器网络邻居发现协议应用范围比较将探测时隙随机化后平均发现延迟较小,适用于大多数邻居发现场景适用于非对称发现场景,可支持对称应用场景,但需要增加能耗适用于只需快速发现大部分邻居的场景,对发现延迟的边界没有要求适用于可以容忍增加一部分控制开销用于减少发现延迟的场景适用于节点移动性较高的网络,可按需减少现有邻居发现协议的发现延迟9未来研究方向传感器网络邻居发现技术经历了由粗粒度向细粒度发展的过程,从51%协议、Quorum协议到Disco协议、U-Connect协议、SearchLight协议和BlindDate协议,它们对调度模式的控制逐步精细,相对于最优调度的近似比也日益减小.另一个发展趋势是邻居发现协议都同时考虑了唤醒调度对称和非对称的情况,使协议能满足不同的能耗需求.然而,尽管这一领域已获得了一系列研究成果,但仍存在不少问题值得进一步研究和完善.(1)构造最优近似比更小的唤醒调度模式虽然对称邻居发现的下界已经确定并且组合设计协议已提出了一种构造最优解的方法,但是这种低低低低低低低高低低低高低应用范围解法实用性欠佳,构造算法复杂且占用的存储空间过大.目前最优近似比最小的BlindDate协议仍与最优调度存在着一定的差距.因此构造近似比更小的邻居发现协议仍然具有较高的理论和应用价值.(2)非对称邻居发现评价标准现存邻居发现的理论研究主要集中于对称邻居发现,对非对称邻居发现的关注仍显不足,目前并没有统一的标准以比较不同的非对称邻居发现算法.评价标准的缺失也导致非对称邻居发现的理论边界无法确定,也就无法公平地量化比较各类非对称邻居发现技术.因此,寻找非对称邻居发现评价标准并建立相应的理论是下一步研究需要关注的重点.(3)随机邻居发现的理论分析和评价标准随机邻居发现具有平均发现延迟小的优点,但目前并没有得到充分的研究.由于随机邻居发现的Page16发现延迟没有边界,因此还没有统一的标准以比较不同随机邻居发现算法的优劣.例如,PSBA协议仅通过实验说明其优于Birthday协议,但并没有从理论上分析原因.SearchLight协议提出将探测时隙随机化以减少平均发现延迟,但同样没有对此作形式化证明.由此可见,提出统一的随机邻居发现评价标准对于研究和比较现有的协议有重要意义,并对研究更优的随机邻居发现协议具有显著的指导作用.(4)考虑信道占用SearchLight协议和BlindDate协议证实了可以通过增加邻居发现消息减少发现延迟,理论上可以运用到所有确定性发现协议中以使发现延迟减半.该方法本质上是以增加信道占用为代价换取更快速的发现,然而,目前并没有相关工作揭示该方法背后所蕴藏的原理,未来的工作可以进一步研究如何合理地增加邻居通告消息以提高发现效率.(5)与MAC协议的整合目前邻居发现协议是建立在直接控制无线收发机睡眠唤醒的基础上.然而从网络分层的角度考虑,控制无线收发机的睡眠状态应由MAC协议负责.因此,如何协调邻居发现协议与MAC协议的分工,使两者可以有效地整合仍然存在一系列亟待解决的问题.(6)安全隐私机制研究网络协议需要在设计时就考虑它的安全性和隐私性,以避免恶意攻击和窃听对系统带来的不良影响.然而,目前邻居发现协议的安全隐私机制相关研究十分有限[88-89].如何在资源受限的节点上实现邻居发现过程的认证和加密,以及如何避免洪泛攻击、欺骗性确认攻击、Sybil攻击等恶意攻击是保证邻居发现协议的安全性所必须要解决的问题.(7)在IPv6传感网中的应用下一代互联网协议———IPv6协议使用邻居发现协议代替了ARP和RARP协议以实现地址解析,此外还用于路由发现、前缀发现、参数发现和地址自动配置.其中邻居发现通过周期性发送ICMPv6邻居通告报文完成.现有工作[90-91]认为IPv6协议适用于传感器网络,然而各层协议都需要根据传感器网络的特性作适当地调整和简化.目前并没有符合IPv6架构且适用于传感器网络的邻居发现协议,如何在该架构下适配并优化邻居发现的性能也是实现传感网IPv6化的重要环节.10结束语研究作为传感器网络基础协议之一的邻居发现协议具有重要的理论意义和应用价值.本文综合学术界近年来的相关研究成果,总结了传感器网络邻居发现的问题定义、评价标准,并分类介绍了各项技术的研究进展.然而,各类新型传感器网络应用的相继出现对邻居发现协议的性能提出了更高的要求,因此仍需要进一步完善邻居发现的理论和应用技术,为传感器网络和物联网的发展打下坚实的基础.致谢衷心感谢审稿人提出的宝贵修改意见!
