Page1不需要安全信道的空间有效秘密分享方案刘艳红1),3)张福泰1),2)1)(南京师范大学计算机科学与技术学院南京210046)2)(江苏省信息安全与保密技术工程研究中心南京210097)3)(黑龙江省安全生产科学技术研究中心哈尔滨150040)摘要高效的秘密分享方案在保护加解密密钥、门限密码系统、多方安全协议等方面发挥着重要作用.文中主要考虑空间有效的秘密分享问题.作者提出一个新的不需要安全信道的空间有效秘密分享方案.方案构造简捷、运行高效,并且在分发者和参与者之间发送信息不需要秘密信道的支持.文中给出了对新方案的安全性和性能的分析,同时给出了方案的工作流程图和一个简单的示例.由于安全性和性能方面的优点,新方案可广泛应用于诸如长期档案安全存储系统、资源受限环境(传感器网络、移动网络等)下机密信息的保护等方面.关键词秘密分享;空间有效秘密分享;秘密信道;离散对数1引言随着计算机及计算机网络的飞速发展,信息安全问题日益受到人们的关注.密码学为解决信息安全问题提供了许多实用技术.比如在保密通信中,为Page2最早的秘密分享方案是(t,n)门限(threshold)秘密分享方案,是由Blakley[1]和Shamir[2]于1979年各自独立提出的.其中Shamir[2]的方案是信息论安全的.为了保证信息论安全,(t,n)门限方案要求秘密份额的长度至少不能小于秘密的长度.即如果被分享的秘密是b比特位,在n个参与者中分享,那么被分享的秘密将被扩展成至少n×b比特位长度.此外,我们知道必须有t个以上的份额持有者合作才能恢复被分享的秘密,所以,在信息论安全的(t,n)门限秘密分享方案中,信息的有效传输位最多为1/t.如果t=n,就必须所有的参与者合作才能恢复秘密,那么此时信息的有效传输位最多才为1/n.所以在实现信息论安全的方案时,份额的存储和传输开销都比较大,并且随着n的增大,这种劣势就显得更加突出.然而,在一些资源受限的环境,例如:传感器网络、移动网络等,这样高的存储和传输开销却是不适合的.为了改善空间有效性,一些学者提出利用多秘密分享技术来解决.首先将秘密S分割成p块,用Si(i=1,2,…,p)来表示p块子秘密,然后用多秘密分享技术同时分享这p块子秘密.目前已经有不少多秘密分享方案.例如:文献[3]中基于离散对数问题的多秘密分享方案、文献[4]中的基于系统分组码的方案及文献[5-7]中的基于拉格朗日插值法的方案.上述方案中的绝大多数在用多秘密分享技术减少秘密份额长度的同时,也需要大量的存储空间来存储一些公开信息用以保证方案的安全性.毋庸置疑,公开参数的数量是衡量一个方案性能的重要指标,因为它影响了一个方案存储和通信的性能.在文献[8]中,Li等人列表比较了上面提到的几个多秘密分享方案公开参数的数量(m表示秘密组的个数,Pi表示第i组秘密的个数,ti表示第i组秘密的门限值),如表1所示.Li等人的方案[8]Pmt1Chan等人的方案[9]Chien等人的方案[4]Li等人的方案[7]Pang等人的方案[5]表中显示,这些方案都需要大量的公开参数.另一种改善空间有效性的方法是将加密技术与秘密分享技术结合起来.在文献[10-14]中,将秘密用对称密钥加密成密文,然后,将对称密钥在n个参与者中分享.这样的解决办法使密钥存储量增长到原来的至少n倍,因为每个参与者都需要存储密钥的一个秘密份额.更重要的是,此种方法将带来新的密文存储的问题.如果将密文分别在n个参与者中存储,那么空间有效性将更低效;如果将密文放在一个公共的空间存储,那么将带来新的单点失败问题和权力过于集中的问题.所以此种方法也不是理想的解决办法.还有一种改善空间有效性的办法是隐藏被分享秘密的部分信息.这种方法可有效减少秘密份额的长度.文献[15-19]中的方案就是依据此种方法提出的.它们利用递归的方法隐藏了秘密的部分信息,改善了秘密分享方案的空间有效性.但是,Sahasranand等人[20]指出,此类方案,受到门限值t的限制,即它们只能递归隐藏至多t-1块秘密.另外,因为此方法是递归隐藏部分秘密的,在重构被分享的秘密时,就需要递归调用多次插值公式,因此重构的效率比较低.2009年Parakh和Kak在Shamir方案的基础上,利用拉格朗日插值法给出了一个空间有效的秘密分享方案[21].与Shamir方案不同的是,他们的方案是将k个子秘密作为分享多项式f(x)的函数值,产生函数曲线上的k个点(i,si)(i=0,1,…,k-1),然后利用插值法再构造出k-1次多项式f(x),之后再计算f(x)曲线上新的点(i+k,f(i+k))(i=0,1,…,n-1),并将这些新的点秘密地分发给n个参与者.从而完成了整个秘密分发的过程.然而,Sahasranand等人[20]却指出,利用插值方法实现的秘密分享方案存在着一些弊端.比如:子秘密的个数与门限值t一定要满足tk;子秘密之间不能存在线性相关性,否则插值出来的多项式将不能满足门限值的要求;对于相同的子秘密,插值出来的多项式可能是一个常量多项式等等.另外,Sahasranand等人[20]对文献[21]中的方案还给出了两个新的攻击方法,这里就不再赘述了.本文设计了一个新的不需要安全信道的空间有效秘密分享方案.方案除了在空间有效性的实现上克服了上面提到的不足外,还具有两大优点:一是在分发者与参与者之间不需要维护秘密信道;二是可以用来分享任何类型、任何长度的秘密信息.方案利用Diffie-Hellman[22]密钥协商技术实现了份额在公开信道上的安全分配,采用分组和对称加密来实现对任意长度秘密的分享,同时保持份额只有一个分组的长度.Page32新的不需要安全信道的空间有效(狋,狀)秘密分享方案方案由3个阶段构成:初始化阶段、构造阶段和先对方案用到的各种符号进行说明,如表2所示.恢复阶段.={M1,M2,…,Mn}n个参与者的集合Pi(i=1,2,…,n)参与者获得的份额Si(i=1,2,…,d)分割后的子秘密块Ri(i=1,2,…,L)为构造多项式而选择的辅助随机数ηi(i=1,2,…,Z)需要公开的函数点的自变量取值方案由n个参与者={M1,M2,…,Mn}和一个分发者D(D)组成.并且在整个方案中,假设分发者和参与者都是诚实、可信的.这里暂不考虑分发者和参与者的欺骗行为.K是基于离散对数的安全参数,用来保证方案的计算安全性.原始秘密分割后的比特位长度不得小于此安全参数的值.在目前的实际应用中,一般K=1024就可以满足广泛的安全要求了.但我们的方案并不将安全参数固定.用户可以根据实际情况,在系统初始化阶段自己灵活地设置安全参数的值.下面将给出方案详细的介绍.(1)初始化阶段分发者D首先创建一个公开的公告牌(noticeboard),此公告牌用来存储一些必要的公开信息,这里要求只有秘密分发者D可以修改、更新公告牌上的内容,而其他人只能阅读或下载.分发者D执行下面的初始化操作:①设置安全参数K的值.②设置门限t的值.③选择一个素数q满足q>max(2K,n),q为包含q个元素的有限域,在g,满足离散对数问题在此基础上是计算不可行的.④秘密空间为Ω={0,1},份额空间为=q.⑤D将公开信息params=〈K,t,n,,q,g,Ω,〉公布到公告牌上.参与者Mi(i=1,2,…,n)的初始化操作:随机选择一个整数ai∈Uq-1作为自己的私钥,计算公钥Yi=gaimodq,并将公钥Yi公开发送给分发者D.D将所有参与者的公钥信息params=〈Yi〉(i=1,2,…,n)公布到公告牌上.(2)构造阶段分发者D执行下面的步骤进行秘密分发:①计算秘密S分割的块数d=|S|②判断不等式t(d+2)是否成立,如果成立,L=0,Z=(d+2)-t;如果不成立,L=t-(d+2),Z=0.③对秘密S按照二进制从低位到高位进行分割,每K个比特位作为一个子秘密块.即S=S1‖S2‖S3‖…‖Sd-1‖Sd分割成d块子秘密,然后安全销毁秘密S.④随机选择对称密钥R∈q和对称加密算法E,加密每一个子秘密块,并将加密的密文作为二进制整数再进行模运算.即Si=ER(Si)modq(i=1,2,…,d)将对称加密算法E公布到公告牌.之后安全销毁所有的子秘密块Si(i=1,2,…,d).⑤选择L个随机数.RL,RL-1,…,R1∈q,如果L=0,则不需要进行此步操作,然后安全销毁L.⑥将随机数Ri(i=L,L-1,…,2,1)、密文块Si(i=d,d-1,…,2,1)、变量d和对称密钥R作为系数,来构造多项式f(x):f(x)=(RLxL+1+d+…+R1x2+d+Rx1+d+⑦随机选择b∈q.计算相应的公开值YD=gbmodq,并将公开值YD公布到公告牌上,对b严格保密.⑧计算每个参与者的份额Pi=(Yi)bmodq(i=1,2,…,n).并计算份额的函数值f(Pi)modq(i=1,2,…,n).将这些信息f(Pi)公布到公告牌上.中选取Z个最小整数η1,η2,…,ηZ,并且计算函数值f(ηi)(i=1,2,…,Z).之后将这些信息⑨从集合Page4(ηi,f(ηi))(i=1,2,…,Z)公布到公告牌上.如果Z=0,则不需要进行此步操作,然后安全销毁Z.⑩最后安全销毁f(x),R,d和Si(i=1,2,…,d),Ri(i=1,2,…,L).为了能够清楚地说明此阶段的工作过程,我们给出了一个流程图用来进行直观的描述,如图1所示.(3)恢复阶段假设任意t个或更多的参与者{Mi}i∈I(I{1,2,…,n})合作重构被分享的秘密.不失一般性,这里我们就假设{M1,M2,…,Mt}t个参与者合作重构秘密.他们将执行下面的步骤:①计算份额Pi=(YD)ai,之后提交自己的份额Pi来重构被分享的秘密.②通过Lagrange插值方法得到f(x)多项式:f(x)=∑Z③由f(0)=α0,得到原始秘密被分割的块数d=α0,得到对称密钥R=αd+1.④用对称密钥R解密密文块,如下所示:从而得到子秘密块Si(i=1,2,…,d).⑤合并所有子秘密块得到被分享的原始秘密S=S1‖S2‖S3‖…‖Sd-1‖Sd.为了能够清楚地说明此阶段的工作过程,我们给出了一个流程图用来进行直观的描述,如图2所示.3举例本节给出了一个简单实例来说明方案的可行性.为使所举实例具有说服性和可比性,这里采用了与Parakh等人[19]方案中相同的参数,即相同的参与者人数n=7(={M1,M2,…,M7}),相同的门限值t=5,以及相同的原始秘密S=17280512.此实例的安全参数设置的比较小,即K=6.当然,在实际应用中,这样的安全参数可能达不到安全的要求.在方案分发和重构过程中,暂不考虑分发者和参与者的欺骗行为,也不考虑信息在传输途中可能出现的各种差错.整个方案的运行过程如下:(1)初始化阶段分发者D首先创建一个公开的公告牌(noticeboard),此公告牌用来存储一些必要的公开信息,这里要求只有秘密分发者D可以修改、更新公告牌上Page5的内容,而其他人只能阅读或下载.D执行下面的初始化操作:①设置安全参数K=6,门限值t=5,参与者人②选择一个素数q=67满足67>max(26,7),数n=7.67为包含67个元素的有限域,取g=8.③秘密空间为Ω={0,1},要分享的秘密S=17280512∈Ω.份额空间为=67.④D将公开信息params=〈6,5,7,,67,8,Ω,〉公布到公告牌上.参与者的初始化操作:M1,M2,…,M7依次选取67中的元素a1=5,a2=3,a3=6,a4=4,a5=整数7,a6=9,a7=8作为自己的私钥,计算出各自的公钥依次为Y1=ga1=5,Y2=ga2=43,Y3=ga3=40,Y4=ga4=9,Y5=ga5=52,Y6=ga6=45,Y7=ga7=14,并将各自的公钥公开发送给分发者D.D将所有参与者的公钥信息params=〈5,43,40,9,52,45,14〉公布到公告牌上.(2)构造阶段D执行下面的步骤:①计算秘密S=17280512分割的块数K=|1000001111010111000000000|②5(5+2)成立,所以L=0,Z=2.③将秘密S进行分割S=S1‖S2‖S3‖S4‖S5d=|S|然后安全销毁秘密S=17280512.④随机选择对称密钥R=47∈67,并加密每一个子秘密块Si=E47(Si)mod67(i=1,2,…,5)为了方案的直观性,这里我们选择简单的移位加密操作,如下所示:Si=(R+Si)modq={48,48,38,36,47}.之后安全销毁所有的子秘密块Si.⑤因为L=0,不需要进行其它操作,只需将L安全销毁即可.⑥将密文块Si(i=5,4,3,2,1)、变量d=5和对称密钥R=47作为多项式的系数,构造多项式f(x):f(x)=(Rx1+5+S5x5+S4x4+S3x3+⑦随机选择b=2∈67.计算公开值YD=gbmodq=82mod67=64.并将公开值YD=64公布到公告牌上.⑧计算出每个参与者份额Pi=(Yi)bmodq依次为25,40,59,14,24,15,62以及份额的函数值f(Pi)modq依次为20,37,13,6,63,1,66.并将函数值的信息〈20,37,13,6,63,1,66〉公布到公告牌上.59,24,15,62}中选取Z=2个最小整数η1=1,η2=2,计算出它们的函数值f(ηi)modq分别为1,57.将这些信息〈(1,1),(2,57)〉公布到公告牌上.之后安全销毁R,d和Si(i=1,2,…,5).⑨从集合(1)在离散对数问题和CDH问题是困难的前提下,敌手通过公告牌上的信息YD=gb,Yi=gai(i=1,2,…,n),获得分发者或者参与者的秘密信息b,ai是计算不可行的.同样敌手获得任何参与者Mi的份额Pi=(gai)b的概率也是可以忽略的.(2)假设敌手已经掌握了t-1个参与者的份额(3)恢复阶段假设任意t=5个或更多的参与者{Mi}i∈I(I{1,2,…,7})合作重构被分享的秘密.不失一般性,这里我们假设参与者{M1,M2,M3,M4,M5}合作重构秘密.他们将执行下面的步骤:①每个参与者计算自己的份额Pi=(YD)aimodq.{M1,M2,M3,M4,M5}计算并提交自己的份额25,40,59,14,24.②通过Lagrange插值方法重构多项式f(x)=47x6+47x5+36x4+38x3+48x2+48x+5.③由f(0)=5,得知秘密被分割成的块数d=f(0)=5及对称密钥R=47.④用对称密钥R=47解密密文块,与构造阶段的加密算法对应,这里进行简单的移位解密操作.得到的子秘密块Si依次为1,1,58,56,0.⑤合并所有子秘密块,得到S=S1‖S2‖S3‖S4‖S5=1‖1‖58‖56‖0=000001‖000001‖111010‖111000‖000000=000001000001111010111000000000=17280512,即恢复出了被分享的秘密S=17280512.4分析与讨论4.1安全性分析如下:这节对我们的方案进行安全性分析,分析结论Page6信息,即Pi(i=1,2,…,t-1).但根据求解线性方程组理论,敌手不能确定多项式f(x)的系数.所以敌手得不到关于秘密S的信息.(3)假设敌手获得部分子秘密块,即使敌手获得了d-1块子秘密,也无法获得另外一块子秘密.这是因为构造多项式f(x)的时候,各子秘密是用随机对称密钥加密过的,只要所用对称加密算法具有足够的安全性(如选择密文安全),敌手已经知道部分子秘密块,无益于他获取其它子秘密块.(4)与Parakh和Kak的方案比,新方案在构造阶段没有使用插值的方法构造多项式,可以保证多项式能够满足门限值的要求.所以克服了Sahasranand等人[20]指出的用在构造阶段使用插值法所带来的弊端,避免了他们提到的两种攻击.(5)方案甚至不会泄露秘密的长度信息.因为将秘密进行分块后,块数的秘密隐藏在多项式中.所以对于原始秘密的长度信息,敌手是没有办法知道的.(6)方案即使多次分享相同的秘密S,每次得到多项式相同的概率是可以忽略的.因为每次分发者选择的对称密钥是随机的,所以每次多项式的系数也就不同.那么公告牌上发布的信息也必然不同.这样就可以很有效地抵抗重放攻击.上面的分析说明,我们的方案是安全的空间有效秘密分享方案.4.2运行性能本节对新方案的运行性能进行分析.(1)方案在计算性能上较Parakh等人[21]的方案要强.在Parakh的方案中,采用了递归隐藏数据的方法来实现空间有效性.所以在构造阶段,需要递归操作多个多项式.在恢复阶段,需要递归调用多次Lagrange插值法才能恢复被分享的秘密.而我们的方案在构造和恢复阶段,都只需操作一个多项式.所以在计算性能上,新方案要高于Parakh等人的方案.(2)新方案中参与者的份额是可以自己计算的.方案利用Diffie-Hellman密钥协商技术,参与者通过公告牌信息得到分发者的临时公钥YD,就可以计算自己的份额Pi=(YD)ai.分发者可以得到相同的Pi=(Yi)b.在方案的运行过程中,秘密份额不需要进行传输.所以新方案的通信性能是非常高的.(3)新方案利用Diffie-Hellman技术解决了秘密信道的问题.所以,方案可以运行在价格非常低廉、普及范围非常广、通信性能非常高的万维网上.秘密信道是需要付出一定运行成本才能实现的,甚至在有些情况下是不可能得到满足的.因此,新方案的运行成本低,非常适合推广及应用.(4)新方案对被分享的秘密S没有任何限制,可以是任何类型、任何长度的信息.然而,在文献[19]中,只可以实现t-1个秘密块的分享.另外,在文献[21]中,子秘密块不能存在线性相关性,否则将达不到门限值的要求.当所有子秘密块相同时,方案甚至不能正常工作,因为插值出来的多项式将是一个常函数.所以,同上述方案相比,新方案的适用范围更广.通过上面的分析我们得出,新方案无论从计算性能、通信性能以及适用范围等方面都具有一定的优势.而且还特别适合一些特定场合的应用.例如长期归档文件的存储、在资源受限环境下对机密文件的安全保存与备份等.5结语不需要安全信道的空间有效秘密分享方案不仅具有理论意义,而且具有重要的实际应用价值.本文给出了一个新的不需要安全信道的空间有效秘密分享方案.在新方案的构造中,借鉴了多秘密分享的思想,使用了Diffie-Hellman密钥协商技术,及对称加密技术.新方案可以分享任何类型、任何长度的秘密,分发者与参与者之间不需要通过秘密信道进行保密通信,而且参与者需要保存秘密信息的长度是固定的.我们给出了方案的运行流程图和一个简单的运行实例,以说明方案的工作流程.分析显示新方案在安全性和运行性能方面与已有的几个同类方案相比,有明显的优势.这些特点使新方案可以在现实的很多场合得到推广和应用,例如在长期归档文件的安全存储,在一些资源受限的环境下保存和备份机密文件等等.
