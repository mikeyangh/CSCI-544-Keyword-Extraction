Page1面向工作流管理系统的动态构件预取方法李海波1)战德臣2)徐晓飞2)1)(华侨大学计算机科学与技术学院福建厦门361021)2)(哈尔滨工业大学企业与服务智能计算研究中心哈尔滨150001)摘要基于软构件和工作流技术的ESA(EnterpriseSoftware&Application)系统运行效率不仅取决于功能性的因素,还受到非功能性因素的影响,而且常常被忽视.把业务频率这一重要的非功能性因素融入到ESA系统中,同时结合构件的使用频度和构件出现的间隔这两个因素,提出构件预取模型,包括相对依赖强度和绝对依赖强度两个计算模型.前者体现了构件使用频度,后者体现了构件出现的间隔.业务频率则通过工作流日志融入两个模型中,以此提高构件实例化时缓冲的命中率,缩短应用服务器对用户访问的响应时间.最后的实验结果表明,该方法具有工作流的优势,能为构件缓冲提供更加准确的预测.关键词工作流;软构件;预取模型;业务频率;依赖1引言目前,基于构件的软件工程(ComponentBasedSoftwareEngineering,CBSE)逐渐成为软件开发的主流范型,是软件开发工程化的现实可行途径.同时,工作流技术已经成为实现业务过程自动化的核心技术,基于工作流技术实现的软件系统越来越受到重视.对基于软构件和工作流技术搭建企业应用软件系统(EnterprisesSoftwareandApplication,ESA)的研究也备受关注,而目前的研究大多集中在体系结构方面[1],对于运行层次的效率提高与改善的研究相对较少.基于软构件和工作流技术的ESA软件系统的运行,实际上是软构件在工作流引擎调度下,在应用服务器上往复不断地执行过程.对于一个中等规模的企业和业务量,ESA系统每秒钟要把成千上万个构件装入内存,执行,再销毁.把构件装入内存通常称作构件的实例化.在软件执行这一速度数量级上考虑,提高构件实例化的速度可以极大地缩短应用服务器的响应时间,进而提高ESA系统的整体运行效率.在缩短WEB服务器响应时间上,很多研究者都提出采用WEB预加载技术加以解决[2-4],WEB预加载又称为主动缓存技术,区别于一般意义上的被动缓存,它通过分析用户访问的历史记录,主动预测用户将来可能浏览的页面,在用户请求该对象前,预先把这些对象装入缓冲区中.当用户请求该对象时,直接把缓存里的对象提交给用户,而不用从磁盘获取,从而减少用户的访问延时.如果预加载足够准确,缓存的性能将得到明显改进[4].根据当前请求以及历史记录预测用户接下来的访问请求相当于对访问路径的预测,可以大大提高预测的准确性.和这些通用的路径预测方法相比,在基于工作流技术的ESA系统中对构件实例化的预测应该具有明显的优势,因为工作流模型中已经描述了构件的执行顺序.但是,对ESA系统构件的预取还必须综合考虑业务发生频率这一因素.业务过程的各个分支甚至每个业务活动的执行频率都不是固定的,“热门”业务也会逐渐变成“冷门”业务,所以,ESA系统构件的执行频率也会随之变化.完全根据工作流模型预测的构件范围太大,更加精确的预测还必须考虑业务频率.我们提出一种基于业务频率持续变化的构件预取模型.模型中既体现了构件之间的距离和顺序关系,又体现了业务发生的频率.区别于现有的路径预测方法,由于现实中的业务频率具有渐变的特点,所以可以通过挖掘工作流日志获得工作流各分支的发生频率.据此可以更加准确地预测下一个要实例化的构件.2构件预取影响因素分析工作流模型是对业务逻辑的描述,两个基本的元素就是活动及其连接关系,如图1(a)所示的采购订单制定过程示意图.而活动则是由构件根据一定的组装模型组装而成,而且对于一个成熟的ESA系统来说,都具有一定规模的构件库,图1(b)中显示了采购订单制定过程相关的构件库.由于ESA的活动都是由构件组装而成,工作流模型确定了活动的执行顺序,也就决定了其组成构件的执行顺序,例如图1(c)中,A1先于A2执行,A1中的C1,C2,C3,C4,C5,C6就是A2中C7,C11的前驱,由于是相邻执行,所以也是直接前驱,A1中C1就是A4中的C13的间接前驱.构件间的直接前驱和间接前驱关系形成的“间隔”也不同,A1中C1和A2中C7的间隔就比A1中C1和A3中C12的间隔小,C2,C3和C24,C25,C26的间隔最大.同时也应该看到,C4在A1,A2,A3,A4中反复出现,也就被反复执行,从整个模型来看C4,C11和C21被反复执行的次数较多.通过上面分析,若要预测构件的出现顺序,至少要取决于两个因素:构件被反复执行的程度和构件之间的出现间隔.虽然有了这两个预测因素,但也仅仅是从工作流模型定义的角度去考虑的,业务的发生频率则是工作流运行时需要考虑的另一个因素.例如,图1(c)中,设备大修期间企业采购的物料多数都是备品备件,那么采购招标构件C14执行的频率就很低,而在年初生产准备阶段,原材料采购业务占多数,C14执行的频率就会变高.因此,业务频率的持续变化因素也应该体现在构件预取模型中,才能更加准确地预测待预取的构件.3基于工作流日志的业务频率识别方法业务频率是指一段时期内某项业务发生的频率.在业务层面,由于工作流模型描述的是业务发生的所有可能性,运行的工作流当遇到选择关系的路Page3图1采购订单制定过程及构件组成径时,会根据当时的业务发生情况有选择地执行.因此,在一段时期内,各个活动都有一定的发生频率.同一个活动在不同时期内发生的频率也在变化.同时,企业业务频率的变化大多都是逐渐的,因此挖掘工作流日志能够如实地反映出业务频率的变化趋势.在实现层面,工作流模型中的业务活动都是由构件组装而成,业务活动的执行频率也就是其组成构件的执行频率.因此首先定义工作流日志.定义1.工作流日志.设A为所有工作流实例中出现的活动集合,A是A范围内所有工作流实例的集合,则工作流日志WLA,是A上工作流实例的子集.工作流日志的定义体现了两个方面:(1)工作流日志定义在已经出现的业务活动上,即使工作流模型中定义了某业务活动,但现实中一直没有执行,那么它也不属于工作流日志范围;(2)强调工作流日志的有效性,实际上,只有一定时期内的工作流日志才能反映当时业务过程的执行情况,一般选取最近发生的工作流日志作为关键路径的计算依据.工作流模型中规定了4种基本的控制模式:顺序、选择、并发和循环结构.而在一个工作流实例中,活动的前后顺序是调度完的结果.每一个业务活动都有一个开始时间(starttime)和完成时间(completetime),记录了活动的执行顺序.例如图1(a)中的业务活动所形成的工作流日志片段如表1所示.工作流实例ID活动名称开始时间1采购需求制定2007-01-0208002007-01-0208101采购需求审核2007-01-0208202007-01-0208221月采购计划制定2007-01-0308302007-01-0308321月采购计划审核2007-01-0308402007-01-0308421采购招标管理2007-01-0409002007-01-0409421采购合同管理2007-01-0509552007-01-0510301采购订单制定2007-01-0608152007-01-0608201采购订单审核2007-01-0609222007-01-0609251采购订单下达2007-01-0609302007-01-0609322采购需求制定2007-01-0208252007-01-0208302采购需求审核2007-01-0211302007-01-0211322月采购计划制定2007-01-0308302007-01-0308322月采购计划审核2007-01-0308402007-01-030842显然,工作流日志WL中的工作流实例,是一组业务活动的执行序列.设WL中出现的业务活动共有m种,表示成A={a1,a2,…,am},相应地,WL中每个业务活动被执行的次数为Freq={f1,f2,…,fm}.下面给出求解Freq的算法.Page4算法.WLFreq.输入:工作流日志WL输出:每种活动的执行FreqBeginFor(allaij∈Ii,Ii∈I)doFor(allai∈A)doEndforRetrunFreq=(f1,f2,…,fm)End在表1的工作流日志片段中,业务活动:采购需求制定、采购需求审核以及月采购计划制定出现的频率Freq=(2,2,2).在n个工作流实例中,处于工作流循环控制结构下的活动出现的次数经常都大于n,说明经常被反复执行.在选择结构下,一个工作流实例里的每个分支只执行一次,处于各分支上的活动在工作流日志中出现的次数一般都小于n.4构件预取计算模型为了使给出的构件预取模型能够反映上述3个影响因素,即工作流模型中定义的构件间隔和构件被执行的频度以及业务的发生频率,下面首先分析这几个因素对预取模型的影响.采用AB表示构件A是构件B的前驱,包括直接前驱和间接前驱,AB形成的B对A的依赖表示成A→B,而构件预取模型就是要反映这种依赖关系的强度.两个构件之间的依赖关系越强,相对于前驱构件来说,后继构件的命中率越高,反之越低.这可以采用绝对依赖强度度量构件间的依赖关系.A→B的绝对依赖强度ADS(A→B)只考虑B对A的依赖程度,而不考虑A对B的依赖程度.由于在工作流系统中两个构件往往互为前驱和后继,即AB和BA同时存在.为了体现方向性,采用相对依赖强度RDS(A→B)同时考虑B对A的依赖程度和A对B的依赖程度,即“扣除”A对B依赖程度后B对A依赖程度的“净值”.假如业务过程运行1000次,AB出现的次数为1000,BA出现的次数为0,则ADS(A→B)应该最大,如果两者出现的次数基本各占一半,则说明A和B之间的执行顺序不确定,RDS(A→B)的值应该趋近于0.构件的绝对依赖强度模型和相对依赖强度模型是构件预取计算模型的关键.若要计算RDS(A→B),需要同时考虑AB和BA的关系,AB令A→B值增大,BA令A→B值减小.同时,A→B和AB与BA关系出现的总次数呈反比.可见,构件A和B之间的依赖强度随着二者“距离”的增大而减弱,距离定义为构件所组装成的活动之间间隔的其它活动个数,表示成|AB|,A是B的直接前驱,则|AB|=1.若A和B被组装到同一个业务活动中,A和B之间不具有时序依赖关系,因此|AB|=0.三类影响因素在模型上的体现如下:|AB|体现了A和B的间隔,这从工作流模型就能得到;A和B的间隔增大时绝对依赖强度减弱;在m次工作流实例取样中,AB的绝对依赖强度累加和体现了业务频率;AB的使用频度则体现在相对依赖强度上.实际上构件之间的时序依赖强度,总体趋势随着距离以指数关系减小[10-11],在此定义系数δ|AB|-1,依据实验看δ的增长趋势,δ取0.4较为合适,当|AB|=1时,系数δ|AB|-1=1表示构件直接相邻.下面先给出ADS(A→B)的计算模型:ADS(A→B)=∑|AB|×δ|AB|-1其中,m为工作流实例的个数.RDS(A→B)的计算模型如下:RDS(A→B)=∑|AB|×δ|AB|-1-∑|BA|×δ|AB|-1∑|AB|×δ|AB|-1+∑|BA|×δ|AB|-1+1工作流日志中参与挖掘业务频率的工作流实例越多越好.例如A是B的直接前驱,实验5次该条路径,AB出现5次,BA出现0次,则ADS(A→B)=1,RDS(A→B)=0.83.实验10次时,AB出现10次,BA出现0次,则ADS(A→B)=1,RDS(A→B)=0.9.样本数目越多对求RDS值越好.下面分析一下两种依赖关系模型的语义.以图2中显示的工作流模型示意图、其构件组成以及构件之间的顺序关系为例,分别计算执行了100次时的绝对依赖强度和相对依赖强度,计算结果分别见表2和表3.Page5C1C2C3C4C5C1C2C3C4C5绝对依赖强度虽然度量了两个构件之间的依赖程度,但还不足以体现出这两个构件依赖的反复使用,需要相对依赖强度体现.反之,相对依赖强度掩盖了交错被调用执行的两个构件,需要靠绝对依赖强度体现.表4详细描述了构件的绝对依赖强度和相对依赖强度共同表达的依赖关系含义.A→B绝对依赖强度大小小大5性能评价5.1实验设计以图1所示的采购订单制定为例,分析构件预表6构件间的相对依赖强度相对依赖强度前序C10.0000.0000.0000.9790.0000.0000.9520.9410.9410.9410.9790.9410.906C20.0000.0000.0000.9790.0000.0000.9520.9410.9410.9410.9790.9410.906C30.0000.0000.0000.9790.0000.0000.9520.9410.9410.9410.9790.9410.906C4-0.979-0.979-0.9790.000-0.979-0.979-0.2930.2360.2360.2360.2660.2360.819C50.0000.0000.0000.9790.0000.0000.9520.9410.9410.9410.9790.9410.906C60.0000.0000.0000.9790.0000.0000.9520.9410.9410.9410.9790.9700.906C7-0.952-0.952-0.9520.292-0.952-0.9520.0000.9520.9520.9520.9740.9520.941C8-0.941-0.941-0.941-0.236-0.941-0.941-0.9520.0000.0000.0000.0480.0000.952C9-0.941-0.941-0.941-0.236-0.941-0.941-0.9520.0000.0000.0000.0480.0000.952C10-0.941-0.941-0.941-0.236-0.941-0.941-0.9520.0000.0000.0000.0480.0000.952C11-0.979-0.979-0.979-0.266-0.979-0.979-0.973-0.048-0.048-0.0480.000-0.0480.354C12-0.941-0.941-0.941-0.236-0.941-0.941-0.9520.0000.0000.0000.0480.0000.952C13-0.906-0.906-0.906-0.819-0.906-0.906-0.941-0.952-0.952-0.952-0.776-0.9520.000图4显示了完整的26个构件之间的相对依赖趋势,图中可以看出不同构件之间的相对依赖程度,取模型.具体步骤如下:(1)抽取服务器中的工作流日志组成实验数据集;(2)计算工作流模型中构件的依赖强度.对图1所示的工作流模型,分别抽取1000、2000和3000个工作流实例,各活动出现的频率如表5以及图3所示.运行次数100010001000100010003576776776776772000200020002000200068013681368136813683000300030003000300010082012201220122012结论.从运行结果看,A1、A2、A3、A44个活动出现频率最高,A5出现频率最低.运行次数虽然不同,但总体趋势相同.在3种物料的采购业务均等情形下,只针对原材料和备品备件制定订单.3种物料的业务频率也可以不同,做加权处理,这完全取决于对现实业务的反映,此处不赘述.通过仿真工具,计算出构件之间的相对依赖关系如表6所示,限于篇幅,只显示前13个构件(C1~C13)之间的相对依赖强度.据此可以为构件缓冲提供预测.Page6通过仿真工具,计算出构件之间的绝对依赖关系如表7所示,限于篇幅,只显示前13个构件(C1~C13)之间的绝对依赖强度.表7构件间的绝对依赖强度绝对依赖强度前序C10.0000.0000.0000.4800.0000.0001.0000.8000.8000.8000.6060.8000.480C20.0000.0000.0000.4800.0000.0001.0000.8000.8000.8000.6060.8000.480C30.0000.0000.0000.4800.0000.0001.0000.8000.8000.9000.5930.9000.760C40.0000.0000.0000.5930.0000.0000.5000.6000.6000.9000.5930.9000.760C50.0000.0000.0000.6060.0000.0001.0000.8000.8000.8000.6060.8000.480C60.0000.0000.0000.6060.0000.0001.0000.8000.8000.8000.6060.8000.480C70.0000.0000.0000.6600.0000.0000.0001.0001.0001.0000.6601.0000.800C80.0000.0000.0000.6120.0000.0000.0000.0000.0000.0000.6120.0001.000C90.0000.0000.0000.6120.0000.0000.0000.0000.0000.0000.6120.0001.000C100.0000.0000.0000.3940.0000.0000.0000.0000.0000.0000.3940.0001.000C110.0000.0000.0000.3430.0000.0000.0000.5000.5001.0000.5850.5000.600C120.0000.0000.0000.3940.0000.0000.0000.0000.0000.0000.6120.0001.000C130.0000.0000.0000.1140.0000.0000.0000.0000.0000.0000.2560.0000.000取模型[2]和基于访问路径的预取方法[4]做比较,并根据表4给出的定性分析结果,预测某构件C的后序构件,最好选取那些绝对依赖强度高,同时相且选取命中率作为模型性能评价指标.为了便于叙述,文中将我们提出的模型简称为FCP,将对比模对依赖强度低的构件.这里取阈值为0.5,即从表6和表7中选择那些满足:0相对依赖强度0.5和型分别称为PMM和PAP.绝对依赖强度0.5的依赖关系,最终得到表5所以图1所示的工作流模型为例,分别用不同的示的业务发生频率下的构件预取集合:{C7→C4,方法进行模拟实验,比较在相同的硬件条件下,系统运行开始后的不同时间段内,按照不同方法计算出C4→C8,C4→C9,C4→C10,C4→C11,C8→C11,C9→C11,C12→C11,C20→C11,C21→C11,C22→的预取构件的命中率及适应度.同时运行的工作流C11,C4→C12,C11→C13,C11→C15,C11→C17}.实例个数也相同,每当一个工作流实例运行结束立即补充一个新的工作流实例,始终保持N工作流实5.2和相关方法做比较预取方法很多,如基于概率的预取模型,基于分例在运行,该实验取N=20.命中率h=p/(N×C),支模型的预取方法,基于数据挖掘的方法(详见下其中p为从缓存中获取的构件个数,C为工作流模型定义的构件总数,该例中C=37.实验结果如图6节)等等.为了对比测试模型的预取性能,我们选用和本文方法相似的两个预取方法———基于概率的预所示.图5显示了完整的26个构件之间的绝对依赖趋势,可以看出不同构件之间的绝对依赖程度,据此可以为构件缓冲提供预测.Page7实验结果表明,本文提出的方法从系统运行的开始就表现出命中率的优势,这是因为该方法除通过工作流日志挖掘业务频率语义外,更重要的是建立在工作流模型基础之上,被预取的对象本身就能确定出顺序,具有先天优势.而基于访问路径的预取方法,被预取的对象起初是无序的,必须先通过训练数据确定顺序关系,至于基于概率的预取方法,则取决于用户的访问偏好,而且很大程度上还取决于用户操作的熟练程度.6相关工作预取概念可以追溯到分布式与并行系统的设计中,其目的是隐藏通信延迟.根据目前Web预取方面的工作和成果,将预取算法分为以下几种类型:(1)基于访问概率的预取算法.由Markov模型派生的技术已经被广泛应用于对用户行为的预测上,如果已知用户先前的行为序列,则根据Markov模型可以对其将来的行为进行预测.一般地,Markov模型都需要一个操作集、状态集以及二者的转移概率矩阵.传统的Markov链模型是一种简单而有效的预测模型,但它存在预测准确率低等缺点,常用于对Web访问请求的预测,典型的如基于Web流行度的Markov模型[2]、基于隐式Markov链的预测模型[3]、基于路径分析的预测模型[4].除对Web页访问的预测外,Markov链也常常用于数值预取模型上[5-6].(2)基于数据挖掘的预取算法.数据挖掘是从大量的数据中采掘出隐含的、先前未知的、对决策有潜在价值的知识和规则的一种技术.可以根据用户访问的历史数据和当前访问的数据、利用数据挖掘技术来预测用户将来的可能行为,从而为用户预取相关Web页面.用户缓冲器中的数据可以作为数据挖掘时的历史数据.文献[7-8]利用数据挖掘技术挖掘用户的兴趣关联规则,作为对用户即将访问的页面进行预取的依据.基于数据挖掘的方法更适合于用户的个性化推荐领域.(3)基于Web语义的预取算法.通过提炼用户会话特征,按语义对用户会话进行分类,根据当前用户访问路径与各类别中心的距离,确定会话特征,预测用户可能访问的文档,如文献[9].被挖掘对象的语义很多,如论文的相互引用语义[10]、上下文语义[11]、网页超链描述文字信息[12]等等.(4)基于网络性能的预取算法.许多Web智能加速技术都是建立在如RTT(RoundTripTime)等网络性能指标基础上的[13],在对Web代理服务器上的业务进行分析和对网络RTT进行测量的基础上,提出了智能预取控制技术及新的缓存替换方法.文献[14]则在有限的网络带宽下基于距离和时间的计算预取对象,在相对合理的时间与空间开销下获取较高的性能.7结束语本文方法建立在工作流系统之上,预取的对象是在已知调用顺序的基础上确定的,因此,性能上占有绝对优势.在现今ESA系统开发的主流技术———软构件和工作流技术背景下,提供了更好的构件预取策略以减轻应用服务器的运行负载和缩短用户访问的响应时间.本文提出的是工作流管理系统中基于业务频率持续变化的构件预取方法,为构件缓冲提供了更加准确的预测,提高了从构件缓冲实例化时的命中率,从而提高应用服务器对用户访问的响应速度.构件预取模型分为构件的绝对依赖强度和相对依赖强度两个模型,全方位地体现出影响构件预取的3个因素.
