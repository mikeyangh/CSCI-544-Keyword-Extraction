Page1基于密度控制的传感器网络能量空洞避免策略陈果3)1)(四川师范大学基础教学学院成都610068)2)(四川大学计算机学院成都610065)3)(四川师范大学计算机科学学院成都610068)4)(电子科技大学计算机科学与工程学院成都610054)摘要针对无线传感器网络中节点能耗不均造成的能量空洞现象,提出了一种基于密度控制机制的能量空洞避免策略DCDD(DensityControl-basedDataDeliveryalgorithm).在对分层成簇网络的各层能耗进行计算和分析的基础上,根据网络各层的能耗比例在各层网络中配置不同的初始能量,即不同数量的节点.进一步,利用密度控制机制改变节点的工作/休眠状态,使各层网络中的节点能量趋于同时耗尽.同时,为平衡簇头间的负载,引入路由负载平衡分流的思想,让一个簇的数据发送到下一跳的簇头时,不再只发送给一个簇头,而是将数据分流到多个簇头.仿真实验表明,与现有的几种数据传输算法相比,DCDD算法能有效延长网络寿命,平衡网络各层节点的能耗并避免能量空洞现象的出现.关键词无线传感器网络;能量空洞;密度控制机制;路由负载平衡分流;物联网1引言近年来,由大量的装配小型能量装置节点构成的无线传感器网络成为了研究的热点[1],并在环境监控、野生动物保护、军事探测等诸多方面得到了广泛的应用.在采用多跳方式进行通信的网络中,一些节点不仅产生数据也转发数据,因而网络中sink附近的节点势必有着更大的数据传输负载,造成这部分节点能量率先耗尽,从而形成能量空洞[2-3].由于死亡节点附近的节点需要承载已死亡节点的通信负载,进而加快这部分节点衰亡,使能量空洞增多,这种现象被称作”漏斗效应”[2].在能量空洞出现之后,部分未死亡节点采集到的数据无法被转发至sink,此时网络寿命结束,网络中大量未死亡节点的能量资源被浪费.文献[4]的模拟实验表明受能量空洞影响,网络中可能有高达90%的能量被浪费.由此可见,避免或延迟能量空洞的形成,是延长整个网络寿命的有效可靠途径.为避免能量空洞现象,本文在对分层网络各层节点能耗进行计算和分析的基础上,提出一种基于密度控制机制的数据传输算法DCDD(DensityControl-basedDataDeliveryalgorithm).算法的基本思想是,根据网络各层圆环的能耗比例,给出各层圆环内的初始节点配置数,除最外层圆环外其余各层圆环的节点配置数量均大于满足网络覆盖要求的最低节点密度.网络中的节点以组织成簇的形式进行数据传递,为减少节点高密度区域的冗余信息,引入密度控制机制,让满足网络覆盖所需数目的节点成为本轮的工作节点,其余节点进入休眠状态.最后,为有效均衡层内各簇头节点的负载,引入路由负载平衡分流的数据传输方法,让一个簇的数据发送到下一跳簇头时,不再只发送给一个簇头,而是将数据分流到多个簇头.很多研究者对传感器网络中节点的非均匀部署进行了研究.节点部署方法可以归纳为随机部署、规则部署、计划部署三类[5-6].针对于DCDD算法的节点非均匀分布特点,算法可设定场景为温度、大气、植物等环境监测应用.网络使用计划部署的方法在各个设定区域内按照预先计划放置不同数量的节点.传感器节点采集监测数据,完成监测任务.仿真实验表明,与现有的LEACH[7]算法、DERECT算法、ACT(ArrangingClustersizesandTransmissionranges)[8]算法相比,DCDD算法在网络的各层有着均衡的节点能耗,能有效避免能量空洞现象的出现.因此当网络中出现死亡节点时,网络各层中的节点平均能量剩余率均在25%附近.在不同网络半径下,DCDD算法也有着更长的网络寿命.本文第2节对相关工作进行说明;第3节对网络模型进行描述;第4节对网络各层能耗进行计算和分析;第5节提出密度控制机制与路由负载平衡算法;第6节进行仿真实验;第7节进行总结并提出今后的研究方向.2相关工作目前,能量空洞现象作为制约无线传感器网络发展的瓶颈性问题,受到了国内外许多研究者的广泛关注.Li等人在文献[2]中首次提出了用于分析无线传感器网络能量空洞问题的模型,作者指出在一个节点均匀分布的传感器网络中,采用层次结构和数据压缩机制对于缓解能量空洞现象是有效的,增加数据采集率会使能量空洞问题更加严重.但作者没有讨论能量空洞能否避免的问题.Olariu等人在文献[9]中证明了在特定条件下能量空洞现象难以避免.为了避免能量空洞,研究者们进行了大量的研究,利用的技术包括:采用不同的传输策略、传感器节点的部署策略、适当的路由协议、部署移动sink、利用非均匀成簇算法等.在本节,我们介绍与本文研究相关的两类研究.(1)利用传感器节点的部署策略缓解能量空洞现象.文献[10]研究了利用节点非均匀分布策略来缓解能量空洞,得出了在采用节点非均匀分布和恒定速率传输网络中,各个节点的能耗必然存在不均.为此,作者提出了一种新的非均匀节点分布策略来Page3实现无线传感器网络中能耗近似均衡,最后给出了适应该策略的q-switch路由算法.文献[11]通过对网络目标区域进行分层,并优化各个层内的节点数目来实现节点的能耗均衡.该文提出了基于分层协作覆盖模型的启发式因子和全覆盖条件下节点数量的上下限的计算方法.文献[12]针对传感器网络的能量空洞问题,在网络的连续空间状态下分析节点的负载分布特性,并研究了空闲侦听对能量消耗的影响.基于分析结果,提出负载相似节点分布策略,即根据负载分布特性配置节点,负载重的区域配置较多的节点,以平衡各区域节点的能量消耗.文献[13]提出为了平衡所有节点的能量消耗,网络中各区域的节点密度应该是持续变换的.在没有足够的节点在整个网络中时,该文所提出的节点部署策略能以最小节点数目实现网络寿命的阈值T;在当有足够的节点以确保网络覆盖和连通性时,该文设计了一个算法以找到最佳的传输半径r,并实现相应的最大网络寿命.文献[14]对传感器网络中的节点能耗不均衡现象进行了分析,并在网络中部署两种不同类型的异构节点(普通节点与中继节点)以平衡节点负载.(2)利用非均匀成簇算法来缓解能量空洞问题.文献[15]提出了一种分布式分簇路由协议,该协议采用基于时间的簇头竞争算法,广播时间取决于候选簇头的剩余能量和其邻居节点的剩余能量.同时,通过控制不同位置候选簇头的竞争范围,使得距离基站较近的簇的几何尺寸较小.文献[8]提出了ACT成簇路由协议.为让各簇的簇头节点在每个簇周期消耗大致相等的能量,以使各节点能量趋于同时耗尽,在该协议中,靠近sink的簇,其簇半径更小;远离sink的簇,其簇半径更大.但是ATC算法忽略了普通节点的能耗,仅计算簇头节点的能耗,这样对较大规模的簇的能耗估计不能做到十分准确.文献[16]对成簇网络中以多种优化路由方式(包括采用不等簇路由)来提高网络寿命算法的性能进行了理论分析,给出了多种成簇网络的第一个节点死亡寿命与全部节点寿命的理论上限,并得到如果仅通过成簇网络的路由优化进行能量空洞避免,其效果有限.文献[17]针对由初始能量较大节点充当簇头节点与初始能量较小的节点作为普通节点组成的异构成簇无线传感器网络,提出了不等簇半径工作能量空洞避免策略.策略的核心是让近sink的簇半径较小,远sink的簇半径较大,这样,近sink部署的初始能量较大的簇头节点较多.该文还将能量空洞避免问题转化为在保证网络寿命满足应用需求约束前提下如何使部署的节点最小的优化问题,并详细给出了不等簇半径的取值与优化方法.文献[18]提出了一个能量有效的分布式成簇算法,该算法根据与sink节点的转发距离确定适当的簇半径,以实现节点寿命的大致均衡,并降低能耗水平.作者还提出了一个简单的高效节能多跳数据收集协议来对成簇算法进行评价,并计算出该协议的能耗.实验结果表明该算法能有效延长网络寿命,并且性能表现明显优于其他成簇算法.文献[19]将非均匀分簇引入节点非均匀分布的网络,以避免能量空洞问题.作者提出了一个最小化网络内所有节点能耗的最优簇结构方法.作者还设计了一个简单的分布式路由协议以实现所有节点能耗均衡.此外,文献[20]提出了一种流量均衡路由算法FBR.与现有的路由算法不同,作者构建了一种新的多层次骨干网络,区别于传统树形结构的簇头通信拓扑,该网络中每个簇头拥有多个父簇头.簇头间传输数据时,簇头将数据分流传输给多个父簇头,以平衡父簇头之间的负载.但是该算法中每个簇的规模相等,因此各簇能耗很难实现完全均衡.同时,该算法各簇的簇头节点固定,因此簇头的能耗会远高于普通节点.3网络模型3.1网络模型本文定义半径为珚R的圆形网络中分布着N个传感器节点.图1给出了网络结构模型,表1给出了相关符号说明.假设该传感器网络具有如下性质:(1)唯一的sink节点位于网络中心O,并且所有节点在部署后静止不动.(2)网络被均分为m层圆环,每层圆环高度均为2r.(3)传感器节点被组织成簇的形式,周期性的获取监控数据.(4)各簇的簇头节点在完成簇内数据收集后,以簇间多跳形式将数据发送到sink节点.Page4符号珚RRiNiRiρρiCRiCRikiE(di)第i层圆环内的节点到网络中心O的平均距离期望E(li)CRi内的节点距离簇中心的平均距离期望τERiinREiitREi3.2能量模型本文使用简单能量消耗模型[21],忽略节点在计算、存储等过程中消耗的能量,仅计算节点的通信能耗.在数据传输过程中,传输l比特信息经过距离d,发送端能量消耗为ETx(l,d)=ETx_elec(k)+ETTx_amp(l,d)接收端能量消耗为其中,d0为一阈值,当发送节点与接收节点的距离小于d0时,发送方发送数据的能量损耗与距离的平方成正比,否则与距离的4次方成正比.Eelec表示发送或接收每比特数据时的能量消耗,εfsd2和εmpd4是发送每比特数据放大器的能量消耗.4网络能耗分析在本节,本文设定节点在各层圆环内均匀分布,并且各层节点的密度ρ均为满足网络最低覆盖要求密度.在此条件下,分别对网络非最内层圆环和最内层圆环提出成簇算法,并对网络各层圆环的能耗进行详尽的分析.4.1非最内层网络成簇模型与能耗分析为保证各层圆环能被簇完全覆盖,在第i层圆环中心位置C作圆Ci,Ci与相邻的圆在圆环外沿相交于点P1、P2.圆环层高为2r,同时C与线段OP1的距离为r.因此,簇CRi是以C为圆心,线段CP1为半径的圆,其面积为CRi.若簇CRi没有位于最外层圆环,CRi将负责把外层圆环内的节点收集的数据转发至内层圆环中的簇CRi-1.CRi在一个簇周期的能耗包括完成簇内数据处理所消耗的能量E的能量E定理1.在圆环Ri中,簇CRi的监控面积为πr2(8i2-8ii2-槡i-4i+1),并且Ri中共有簇arccos2i2-槡i证明.如图1所示,在Ri中,线段OC长度OC为2r(i-1)+r,线段OP1长度OP1为2ir,可知,圆C的半径长度为CP1=r8i2-8ii2-槡i-4i因此,线段OB长度OB为2ri2-槡i,线段P1B长度P1B为2ir-2ri2-槡i,线段CP1长度CP1为槡r8i2-8ii2-槡i-4i域面积为CRi=πCP1βi为CRi簇角度的一半,可知cosβi=βi=arccos2i2-槡i因此,Ri中的簇数目为定理2.圆环Ri中所有节点在一个簇周期完成簇内数据处理所消耗的能量为π8ii2-槡i-4i+1()2Eelec+4i+1)).Page5证明.在一个簇周期,簇CRi完成簇内数据处理所消耗的能量包括节点将监控到的数据发往簇头的能耗E此,有文献[22]讨论了能满足覆盖要求的最低节点密度.图2给出了节点以最低密度完成监控区域覆盖的分布图.节点A的6个邻居节点与节点A构成了一个六边形.其中任意2个节点的距离为槡3(τ-σ),τ为节点感知半径,σ为任一小数(σ1).如果任意2个节点的相互距离大于槡3τ便会出现覆盖盲点.此时,节点A的覆盖面积为槡33τ2ρ=2槡33τ2文献[23]计算了簇内节点到簇头的平均距离期望为Ed[]toCH=因此,设每个簇周期每个节点发送l比特数据到簇头,Ri中一个簇的所有簇内节点将收集的数据发送到簇头所消耗的能量为i=CRiρ(lEelec+lεfsE[d2nodeE=πr2(8i2-8ii2-槡i-4i+1)×(ρlEelec+簇头节点接收簇内节点发送的数据所消耗的能量为E将式(7)、(8)代入式(6),可知Ri内的所有节点在一个簇周期完成簇内数据处理所消耗的能量为EinRi==βiβi(定理3.圆环Ri中所有节点在一个簇周期完成簇间数据处理所消耗的能量为4πr2(m2-i2)ρlEelec+4πr2(m2-i2+2i-1)ρl(Eelec+εfs(2r)2).证明.在多跳网络中,各层圆环要负责把外层网络收集的数据转发到内层圆环的簇头节点.对Ri层圆环中的各簇,负责转发平均面积为CRiforwarding的区域产生的数据:CRiforwarding=因此,簇CRi接收外层网络的数据所消耗的能量为recEi=CRiforwardingρlEelec=包括簇内节点收集的数据,簇CRi需要发送到内层圆环的数据总量为簇头节点向下一跳簇头发送数据消耗的能量还与它的发送距离期望E(dsend)相关.相邻两层圆环距离为2r,因此非最内层圆环中的簇头节点的发送距离期望E(dsend)=2r.CRi的簇头节点发送数据所消耗的能量为4πr2(m2-i2+2i-1)senti=E根据式(11)、(13),我们能得出Ri中的节点在一个簇周期完成簇间数据处理所消耗的能量为itERi=4.2最内层网络成簇模式与能耗分析本节讨论最内层网络R1成簇的条件,并给出R1内节点的能量消耗分析.很明显,最内层网络R1不再是圆环,而是一个以网络中心O为圆心,2r为Page6半径的圆.文献[24]已经证明3个相邻圆之间的重叠角θ最大为π/3.如果最内层网络R1中任意相邻的2个簇心与网络中心之间都有最大的重叠角,显然在保证这些簇能完全覆盖R1的前提下,每个簇的实际面积最小(如图3所示).在图3中,最内层网络R1内的6个簇{CRA,CRB,CRC,CRD,CRE,CRF}将R1完全覆盖,由于R1半径为2r,因此可计算出每个簇的半径为2的簇面积CR1=当R1内的节点组织成簇的形式时,可知R1内的簇内节点距离簇头的平均距离期望E[dtoCH]为r,因此簇内节点将收集的数据发送到簇头所消4槡33耗的能量为簇头节点接收簇内数据所消耗的能量为因此,在一个簇周期内,R1中各簇完成簇内数据处理所消耗的能量为EinR1=(ER1中的簇头节点距离sink的距离期望为2因此6个簇头节点将簇内数据发送到sink所消耗的能量为R1内的簇头节点还负责把外层网络的监控数据转发至位于网络中心的sink,R1负责转发区域的面积为R1内的簇头节点接收和转发这些簇间数据所消耗的能量为E在R1内节点组织成簇的情况下,一个簇周期R1内所有节点的能量消耗为EcluterR1=E=8πr2ρl(2+m2)Eelec+如果R1内节点不组织成簇的形式,则每个节点不再把监控到的数据发送到簇头,而是直接以单跳的形式发送到sink.可知R1内节点距离sink的平均距离期望为4/3r,在一个簇周期,R1内所有节点将监控到的数据发送到sink的能量消耗为R1内节点不组织成簇,R2内的簇头会在R1内选择k2个节点转发数据.这k2个节点接收和转发这些数据所消耗的能量为E在R1内节点不组织成簇的情况下,一个簇周期R1内所有节点的能量消耗为EdirectR1很明显,若满足E组织成簇的形式更有利于能耗的减少;反之,R1中的节点直接以单跳的形式将数据发送到sink更优.5密度控制机制与路由算法5.1节点工作概率计算本节我们根据网络中每层圆环的能量消耗,给出能有效避免能量空洞现象的节点密度控制机制.由上一节的研究可以看出,由于内层圆环中的节点要承担更多的数据转发任务,因此这些节点能量消耗速率必然更快.如果网络中每层圆环的节点密度均为满足网络覆盖要求的最低密度,网络中所有节点便会一直处于工作状态,那么更靠近sink的节点必然会提前死亡,从而导致能量空洞的出现.由于网络内各层圆环能量消耗的不均匀,若能根据本文第4节对各层网络的能耗分析,依据各层网络的能耗负载情况,在各层中配置不同的初始总Page7能量,即配置数量不等的节点,便能在理想状态下让各层圆环内的节点同时能量耗尽,从而避免能量空洞的出现.定理4.当各层圆环中部署的节点密度满足式(25)时,网络中各层圆环内的节点能量在同时消耗完,此时网络有最优能耗效率.证明.整个网络中,只有最外层圆环Rm不承担数据转发任务,因此Rm中的节点有着最小的能量消耗.这样在Rm中部署的节点密度为满足网络覆盖要求的最小密度2当节点轮流工作时,节点工作的簇周期数为该层圆环总能量与每个簇周期圆环总能量消耗之比值.因此,若满足式(26),第i层和第i+1层圆环内的节点有相同的网络寿命:其中,Ni为第i层圆环内的节点数量.因此,满足1<i<m时,有ρiRiERi显然,最外层圆环之外的各层圆环中的节点密度均大于满足网络覆盖所需的节点密度.若所有节点同时处于工作状态,必然许多节点的监测信息存在冗余,即多个相邻的传感器节点可能采集到相同的事件信息.而网络接收、发送这些冗余信息会浪费大量能量,降低网络寿命.因此,本文引入密度控制机制:在每一层圆环内让满足网络覆盖所需数目的节点成为本轮的工作节点,其余节点进入休眠状态.节点交替轮流工作,这样既保证了监测域内的信息采集,又延长了网络寿命.定义1.邻居节点.对任意节点i,若有其他节点的覆盖面积与节点i的覆盖面积存在交集,则称这些节点为节点i的邻居节点.节点i的所有邻居节点集合为NEi={ne1,ne2,…,nen}.节点i在网络初始阶段以能量E收到该广播的节点j能根据接收信号强度E出节点i、j的距离[21]:其中K为常数,γ是距离-能量梯度,根据传感器网络所处的具体物理环境,其取值范围在1~6之间.定义2.节点工作概率.对任意节点i,其节点工作概率Pi代表了该节点成为工作节点的可能性,节点工作概率越高节点成为工作节点的可能性越大.计算任意节点i的Pi,考虑以下3个因素:(1)节点i的当前能量与初始能量的比值;(2)节点i最近没有成为过工作节点的轮数;(3)节点i与其各个邻居节点的距离.因此,Pi由3个计算因子ω(Ei)、ω(Gi)、ω(Ni)计算得出.当节点处于工作状态时,会消耗能量以完成数据的发送,因此节点能否成为工作节点,首先要考虑的就是节点的当前能量.让有更多能量的节点成为工作节点,有利于平衡节点间的能耗.因此,对任意节点i,对第i层圆环,共有Ni个节点,为满足网络覆盖,需要工作节点Ni个.因此,该层圆环内的节点,平均每i最近没有成为工作节点的轮数,ω(Gi)的计算如下:在选择工作节点时,应让这些工作节点尽量均匀分布在圆环内,使这些工作节点重复监控的区域越小越好.节点与其邻居节点的距离越小,其重复覆盖区域面积越大,由于节点在圆环内随机分布,因此,节点与其各个邻居节点的距离可作为衡量节点有效独立覆盖的衡量指标.对任意节点i,考察它与其邻居节点NEi={ne1,ne2,…,nen}的距离.很明显,若节点i有更多邻居节点,且这些邻居节点和它的距离更近,那么节点i应该有更小的成为工作节点的可能性.ω(Ni)计算如下:对任意节点i的节点工作概率Pi为5.2节点休眠/工作调度机制网络内所有节点在每个簇周期按轮(Round)进Page8行节点状态调度.在每一轮的初始阶段,开启节点状态调度工作,根据调度结果,网络中部分节点进入休眠状态,部分节点转入工作状态.图4为节点状态调度的过程示意图.每轮簇周期,节点进行一次状态的调度.在每轮的初始阶段,节点进入调度过程,此时所有节点计算出自己的工作概率后,在其所在簇的范围内广播带有自己节点工作概率和当前能量信息的消息.同时,每个节点接收簇内其他节点的广播.对簇CRi(1im),每轮需要的工作节点数为2始前,CRi中的任一节点在接收到簇内其他节点的广播后,将自身的节点工作概率与其他节点的工作概率进行比较.若该节点的工作概率在簇内所有节点中排名前2入休眠状态.文献[25]对节点调度机制中的时间同步问题进行了研究.作者认为每个节点在每轮成簇周期的初始阶段进行节点状态调度,从长时间来看,这相当于每个处于工作状态的节点在该轮结束时进行一次状态判断,而每个处于休眠状态的节点在醒来时同样进行一次判断.这意味着每个节点在每次状态改变前都完成一次调度.这种时隙交错进行的节点调度效果和时钟完全同步时的避让机制(back-off)效果[26]一样,因此按轮进行的调度算法并不需要全局的时间同步.5.3簇头选择每个簇的工作节点选举完成后,这些工作节点中将产生簇头节点,以负责收集簇内节点产生的数据,并把这些数据及外层簇头发送来的数据发送到内层圆环的簇头.所以,簇头节点的能耗比簇内其他节点大得多.为了防止簇内低能量的节点当选簇头,从而加快该节点的死亡速度,我们将节点的剩余能量作为选择簇头的基本参数.在选择工作节点时,每个节点都接收到了其他节点发送的带有其节点工作概率和当前能量信息的消息.所以,如果某节点的当前能量比簇内其他节点的当前能量都高,该节点就发布成为簇头的广播.5.4路由负载平衡分流在每个簇周期,簇头节点完成簇内数据的收集之后,要根据路由算法,将数据发送到内层的簇头节点,经过多跳路由数据最终发送至sink.从图5(a)可以看出,在分层网络中,由于各层簇头数量不等,因此必然出现不同的簇头节点所承担的路由负载不等.因此,我们引入路由负载平衡分流,让数据包到sink之间存在多个路径,让多个节点承担数据转发的任务,以平衡这些节点的能耗.路由负载平衡分流的思想如图6所示,令节点i有l比特的数据需要发送到sink,节点a、b、c分别有剩余能量0.1J,对其中的任意一个节点,接收l比特的数据需消耗能量0.01J,发送l比特的数据到sink需要消耗能量0.05J.若目前从节点i到sink之间只存在i-b-sink一个路径,则节点b共需消耗能量0.06J以完成数据转发,此时a、b、c这3个节点剩余能量分别为0.1J、0.04J、0.1J.显然,在这次数据路由的过程消耗了节点b更多的能量.但是,如果节点i拆分数据包,让节点a、b、c各转发l/3比特的数据,则完成数据转发后,3个节点的剩余能量均为0.08J.显然,对数据包进行拆分后再转发,可以有效平衡簇头节点的能量消耗.Page9路由负载平衡分流的算法思想如下:(1)为平衡下一层圆环中的簇头节点负载,考察下一层圆环中数据传输范围内所有簇头的当前剩余能量,让有更多剩余能量的簇头承担更大的数据转发任务.(2)为节省数据待传输簇头节点的能耗,考察数据待传输簇头与数据传输范围内的下一层圆环内的所有可通信簇头的相对距离.让数据待传输簇头分流更多的数据到下一层圆环中相对距离更小的簇头.对Ri(i≠1)层圆环中的第j个簇头节点CHi,j,其数据最大传输距离为4r,因此,当CHi,j有数据待发送时,在Ri-1中开启路由发现过程.首先簇头CHi,j在4r范围内发出路由请求,Ri-1中所有收到路由请求的簇头节点在收到请求后,以一定功率发出包含自身能量信息的应答消息.令Ri-1层网络中共有k个簇头发出了应答消息,对其任意一个簇头节点CHi-1,j,E由距离(与CHi,j的距离).簇头CHi,j共有l比特数据需要进行发送,其中发送到CHi-1,j的数据量lj计算如下:lj=lk×簇头节点CHi,j由式(32)得出将数据包发往下一层圆环中的数据分流值,将数据发送至各个簇头节点,如图5(b)所示.对第R1层圆环,若R1中的节点组织成簇的方式,则R2与R1的路由过程按上述方法进行.若R1中的节点不组织成簇,R2中的簇头在路由发现过程中,在距离2r的范围内选择R1中当前能量最高的2个节点进行分流路由.6仿真实验本节将在Matlab仿真平台下,通过实验验证我们提出的算法的有效性.我们首先讨论最内层圆环是否成簇与不同网络参数下最优圆环层高的取值;其次,分析节点密度控制机制下网络节点能量的均衡消耗及路由负载的均衡性;最后,我们将通过对比DCDD、DIRECT、LEACH和ACT这4种算法不同的表现.仿真实验中,网络默认规模为半径720m的圆形区域,唯一的sink位于网络中心.网络带宽为10Kbps,其他网络参数以及相应的缺省值见表2.实验结果若未特别说明,均为100次独立实验结果的均值.节点初始能量(J)6.1最内层成簇与最优层高分析定义3.最优层高.根据定理1可知,每层圆环中的簇半径长度与网络各层高度相关,因此层高直接关系到各簇的能量消耗.圆环层高存在一个极值点使得网络中的节点完成一次数据收集所消耗的能量的平均值最小,此极值点即最优层高.在4.2节中,本文讨论了最内层网络成簇模式.这里在默认网络环境下,网络层高取不同值,比较最内层圆环成簇与不成簇时的能量消耗.从图7可看出,当网络层高小于120m时,最内层圆环中的节点组织成簇的结构,平均能耗更低,而当网络Page10层高大于等于120m时,最内层圆环中的节点不组织成簇,更节省能量.进一步,我们讨论最优层高的取值.图8给出了在网络默认环境下,改变网络层高即网络分层数不同时,所有工作节点在一个簇周期处理簇内、簇间数据所消耗的平均能量以及工作节点消耗的总能量的平均值.可以看出,层高较小时一个簇周期内簇间能耗远高于簇内能耗,随着圆环层高的增加,簇内能耗逐渐增加,而簇间能量消耗逐渐降低.这是因为当圆环层高很小时,网络会分为更多的层数,此时更多的节点将担当簇头,更多的数据将在簇间进行传递,因此节点处理簇间数据所消耗的能量也较大.在圆环层高为90m时,总能耗达到最低值,而后随着圆环层高的增加,簇内节点距离簇头的距离也越来越大,簇内节点发送数据所消耗的能量也越来越大,特别是节点间的距离大于d0后,节点能量消耗的增加更为明显.图9显示了在默认网络环境下改变节点感知半径,工作节点能量消耗的平均值.可以看出,改变节点感知半径,工作节点的平均能量消耗变化不大.节点感知半径为不同取值时,最优层高均在90m.因此,可以得出,改变节点感知半径不能影响最优层高的取值,对网络性能的影响也不大.图10则显示了不同网络半径下的最优层高值.可以看出,在不同网络规模下,最优层高的取值均在90m~100m之间.图9不同层高与感知半径下的工作节点平均能耗6.2密度控制机制性能表现本节将对本文提出的密度控制机制的性能进行验证.由定理4可知,网络各层节点密度与各层圆环的能耗及圆环面积相关.图11给出了一个簇周期内网络各层圆环中所有工作节点的总能耗.仿真结果显示,最外层圆环内的节点由于没有承担数据转发任务,节点的能耗最低.随着节点与sink的距离更近,节点将承担更多的数据转发任务,因此节点的能耗负担越来越大,最内层的节点则有着最高的能耗.图12和图13根据定理4给出了能满足网络有最优能耗效率时的网络各层节点密度和节点数量.图12显示,最外层圆环有着最低的节点密度.网络由外向内,随着各层圆环内的节点能耗负载加重,各层圆环内的节点密度逐渐增加,以使网络达到最优能耗效率,即各层圆环内的节点同时死亡.从图13Page11可以看出第4层圆环有着最多的节点数目,而由于内层圆环面积逐渐减小,靠近sink的3层圆环节点数目逐渐减少.由于提高了节点密度,增加了网络中节点的配置数量,为比较节点数目不同的网络的能耗效率,本文提出如下定义.定义4.网络能耗效率.网络能耗效率用以衡量网络内的节点能量是否被充分利用,其取值为网络寿命与网络中部署的总能量之间的比值.采用密度控制机制时,节点在休眠状态和工作状态之间转换,根据图13的实验结果,网络中需部署6430个传感器节点而节点均匀分布条件下,满足网络最低覆盖要求需部署节点2785个.图14对比了默认网络环境下,网络层高取为最优层高时,分别采用密度控制机制和节点均匀分布,首节点死亡的时间.采用密度控制机制时,网络内部署的节点数为6430个,即网络总部署总能量为3215J,在1264轮时出现第一个死亡节点,因此网络能耗效率为0.393;节点在网络内均匀分布时,部署2785个节点,总能量为1392.5J,在114轮时出现第一个死亡节点,网络能耗效率为0.082.采用密度控制机制时,虽然多配置了3645个节点,但是网络寿命得到了10.09倍的提高,网络能耗效率则提升了3.79倍.图14节点均匀分布与密度控制下的网络寿命进一步,我们改变网络规模,让网络半径从450m增加到800m,考察密度控制机制对网络能耗效率的影响.从图15可以看出,在不同规模的网络中,密度控制机制均能有效利用节点的能量资源.尤其在网络半径更大时,网络的性能更优.这是因为网络半径更大,内层圆环中的节点密度更大,密度控制机制能休眠更多的冗余节点,从而降低了网络能量消耗,提高了网络能耗效率.图15不同网络半径下网络能耗效率的提升6.34种算法对比在本小节,我们通过实验比较本文提出的基于密度控制的数据传输算法DCDD、DIRECT算法、LEACH算法及ACT算法在网络各层能耗、网络首节点死亡时各层节点的能量剩余率以及网络寿命方面的性能.根据本文的网络环境,DIRECT算法和LEACH算法分别定义为:DIRECT:节点在网络内均匀分布且节点密度满足网络最低覆盖要求,各层圆环中的节点不组织成簇.节点有数据需发送时直接将数据发至相邻的内层圆环中的节点,内层圆环中的节点再将收到的数据转发到更内层的节点.所有的数据通过这种多跳方式最终发送至sink.LEACH:节点在网络内均匀分布且密度满足网络最低覆盖要求.节点组织成簇,簇头在接收到簇内成员节点发送的数据后,将数据直接发送至sink.因此,这是一种单跳成簇网络.图16显示了网络内的所有节点在一个簇周期的能耗平均值.不难看出,DIRECT算法在更靠近sink的区域有着更高的能耗.这是因为sink附近的节点要承担更多的数据转发任务,很明显,能量空洞现象将在sink附近的区域出现.对于LEACH算法,最内层圆环内的节点由于有着很小的数据发送距离,因此有着很低的能耗,而随着节点与sink距离的增大,节点的能耗以极快的速度增加.DCDD算法和ACT算法均能有效平衡网络各层内节点的能Page12耗.DCDD算法由于引入密度控制机制,使冗余节点转入休眠状态,节省了能量开销,因而有着最低的节点能耗.图17显示了4个算法在首节点死亡时,网络中各层圆环内的平均剩余能量率.实现结果显示DERECT、LEACH算法均不能高效利用网络中节点能量.在网络中出现第一个死亡节点,即网络寿命结束时,使用DERECT算法,在靠近sink的网络区域会出现能量空洞,此时最外4层圆环中的节点平均剩余能量均在90%以上.而使用LEACH算法,能量空洞出现在远离sink的区域,此时网络最内4层圆环中的节点平均剩余能量也在90%以上,实验结果与文献[4]的实验结论相符.本文提出的DCDD算法有着最好的节点能量利用率,由于节点轮流进入工作状态,保证了各层节点的能量均衡消耗.因此当网络中出现第一个死亡节点时,网络各层节点剩余能量在20%~35%之间.但是,我们可以看出,在网络寿命结束时,DCDD算法在外层网络的平均能量剩余率相对较高,这是因为内层网络中的节点进行节点状态调度,消耗了部分节点能量,造成了内层网络的节点能耗略快于外层网络.ACT算法由于根据到sink的距离,让不同簇有着不同的簇半径和不同的传输范围,因此也有较好的节点能量利用率.图18比较了4种算法的能耗效率.其中,DIRECT、LEACH、ACT算法部署了满足网络覆盖最低要求的2785个节点,DCDD算法部署了6430个节点.可以看出DERECT、LEACH算法有着很低的网络能耗效率.ACT算法由于不同簇有着不同的簇半径和传输范围,能量消耗得到了较好的平衡,因此网络寿命达到了392轮,能耗效率提高到了约0.28.而本文提出的DCDD算法有着最好的网络能耗效率.进一步,改变网络规模考察4种算法的网络寿命.从图19可以看出,在不同的网络半径下,DCDD均有着最高的网络寿命.DIRECT算法和LEACH算法无法避免能量空洞的出现,因此网络寿命均很短,并且随着网络规模的增大网络寿命进一步降低.ACT算法的网络寿命则介于DCDD和DIRECT、LEACH之间.7结论本文对无线传感器网络的能量空洞问题进行了研究,提出了一种基于节点密度控制机制的能量空洞避免策略DCDD.与已有工作相比,本文的主要贡献表现在以下几个方面:(1)我们对分层网络中各层的节点在一个簇周期内的能耗进行了计算和分析.Page13(2)网络各层的初始能量根据各层中的节点在一个簇周期的能耗进行配置.高能耗区域有着更多的初始能量,以保证网络各区域的节点能量趋于同一时间死亡.为了让高密度区域的冗余节点转入休眠状态,以节省能耗开销,我们设计了一个有效的节点密度控制机制,让高能耗区域的节点轮流工作.(3)为有效平衡簇头间的能耗负载,DCDD引入了路由负载平衡分流,让一个簇的数据发送下一层时,不再只发送给一个簇头,而是将数据分流到多个簇头,这样平衡了网络各个簇头节点间的能耗.仿真实验结果表明,DCDD算法能获得比DIRECT、LEACH、ACT等主要数据传输算法更均衡的节点能耗负载、更长的网络寿命,并能有效避免能量空洞现象的出现.在今后的工作中,我们将关注于节点状态调度的能耗与节点密度分布对网络寿命的影响,并进一步着眼于在更为复杂的网络结构(如异构网络、移动sink网络)中研究能量空洞现象的避免策略.
