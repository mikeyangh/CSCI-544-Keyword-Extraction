Page1基于局部性定量分析模型的自适应替换算法LA-LRFU韩永姚念民蔡绍滨(大连理工大学计算机科学与技术学院辽宁大连116024)摘要已有的LRFU(LeastRecencyFrequencyUsed)自适应算法在实际应用中根据经验调整λ值,缺乏对访问局部性强弱的量化分析,因而其可适用的访问模式有限.该文首先建立基于K阶马尔可夫链(K→)的局部性定量分析模型,在访问过程中根据统计信息实时量化局部性特征.然后以此分析模型为基础设计自适应替换算法LA-LRFU(Locality-AwareLRFU),随着访问特征的变化动态调整参数λ.最后应用Trace仿真对算法进行测试.实验结果显示,针对多种访问模式,LA-LRFU均可显著提高Cache命中率;在由多种访问模式构成的具体访问过程中,LA-LRFU能比现有的各类LRFU自适应算法更合理地调整参数λ.关键词LRFU;自适应;替换算法;局部性;访问模式;访问分析模型1引言缓存替换技术在操作系统、存储系统、Web应Page2发和经验总结作出置换决策.基于该研究方法提出的典型替换算法有ARC[3]、MQ[4]、FBR[5]、2Q[6]等.这些算法可以针对某些特定访问模式提供有效的替换手段,但是缺少严格的定量分析.基于分析模型的替换算法,首先对访问模式建立分析模型,然后从模型中提取出访问特征并进行量化分析,进而提出合理的替换算法.基于该研究方法提出的典型分析模型及其替换算法有LRU栈模型[7](LRU算法[8]、EELRU算法[9]、LIRS算法[10])、马尔可夫模型[11-12](马尔可夫优化替换算法[13])、独立参考模型[14](LFU算法)、工作集模型[15]、访问间隔模型[16]、访问间隔分布模型[17]等.关于单级缓存的自适应性替换算法的研究多集中在基于探测的策略、基于特殊应用的策略、基于时间和频率平衡的策略.基于探测的策略较关注线性模式、循环模式等具有显著特点的访问模式.基于该策略的有SEQ[18]、EELRU等算法.基于特殊应用的策略如UBM[19]、AFC[20]等算法.UBM算法与AFC算法通过探测访问模式以采用合适的替换算法,但是实现复杂且适用范围有限.然而,最普遍的访问特征仍是局部性和频率性的体现.因而基于时间和频率平衡策略的算法具有更好的适用性.现有的结合访问时间和访问次数的替换算法有很多种,如MQ算法、FBR算法、ARC算法、LRFU算法[21]等.LRFU在参数λ从0~l的变化过程中,将从LFU(LeastFrequentlyUsed)置换过渡到LRU(LeastRecentlyUsed)置换.在—个特定的LRFU算法中λ值是固定的.文献[22]给出了一种动态调整λ值的方法,但是这种方法实现复杂,而且不确定能够起到积极的作用.文献[23]仅通过考察被替换出页面的再次访问情况动态调整λ值,因此该方法的理论性有待进一步研究.LRFU算法虽然将LRU和LFU两种置换策略折衷,却没有建立有效的分析模型可以同时捕捉局部性特征和频率性特征并进行量化.因此,当访问模式及访问特征发生变化时,参数λ值的调整只能基于经验,无法以合适的CRF(CombinedRecencyandFrequency)值来平衡访问时间(Recency)和访问次数(Frequency),从而不能很好地适用于实际环境.本文首先基于K阶马尔可夫链(K→)建立局部性定量分析模型,能同时提取访问模式的局部性特征和频率性特征并进行量化;然后以此分析模型为基础设计自适应替换算法LA-LRFU(Locality-AwareLRFU),从而在系统运行期问动态调整参数λ,以更好地适应访问特征的变化.2相关工作2.1典型分析模型及其替换算法(1)LRU栈模型(LRUStackModel)是一个独立事件模型,事件根据页面的Recency信息进行划分,因而该模型着重分析访问的局部性特征.基于该模型提出的算法有LRU算法、EELRU算法、LIRS算法等.(2)马尔可夫模型(MarkovModel)试图预测近期将被访问的页面以及访问次序.文献[13]提出了一个基于马尔可夫模型的优化替换算法.真实程序中精确预测再次访问是不可能的,这使得基于该模型的替换算法对于实际应用不太友好.(3)独立参考模型(IndependentReferenceModel)实际上是马尔可夫模型的0阶特殊情况,每个页面都具有确定的访问概率.因而该模型着重分析访问的频率性特征.LFU算法以该模型为理论基础,选择最少被访问的数据块进行替换.该算法对符合不相关访问模式的负载有比较好的表现,但是对访问局部性较强、活动集随时间变化较快的模式性能很差.(4)工作集模型(WorkingSetModel)利用滑动窗口概念揭示程序的时间局部性.在任意给定时刻,一个进程将来所需缓存的数量可通过过去最近时间内的缓存使用做出估计.工作集是指:“在某一段时间间隔内,一个进程所需访问的页面集合”.工作集是程序局部性的近似表示,可以通过它来确定驻留集的大小.工作集置换算法监督驻留页面变化的开销很大,估算合适的窗口大小也是个难题.(5)访问间隔模型IRGM(Inter-ReferenceGapModel)将一个缓存块连续访问的时间间隔称为它的IRG(Inter-ReferenceGap).IRGM为每一个独立的数据块分别记录一个IRG序列.IRG替换算法[16]用基于K阶马尔可夫链的策略对每一个数据Page3块的IRG序列分别进行建模,并对序列中下一IRG生成值的概率进行预测.该方法为每一个被访问的缓存块记录了过长的IRG历史信息,且该模型过于精细,很难描述访问模式的一般性.(6)访问间隔分布模型IRGDM(Inter-ReferenceGapDistributionModel)与IRGM不同,它不是直接研究IRG序列,而是假设每一个数据块都有其各自的IRG概率分布并计算出其数学期望.IGDR(Inter-ReferenceGapDistributionReplacement)[17]以该模型为理论基础,使用IRG期望的倒数评估一个缓存块的理想权重,并选择权重最小的数据块进行替换.同IRG替换算法一样,该算法需要记录很长的IRG历史信息,而且计算IRG期望的开销很大,很难应用到实际.可见,针对各种访问模式,现有分析模型具有很大的局限性,仅能概括出访问模式的部分特征或开销很大.因此,我们应建立可有效提取访问特征的分析模型,进而提出合理的替换算法.2.2基于时间和频率平衡策略的自适应性算法(1)MQ算法是针对网络存储领域两级缓存中二级缓存的访问模式设计的.二级缓存中再次访问的距离较大且访问频度分布不均匀,该算法设置多重队列,随时间变化将不活跃的块从高一级队列移动到低一级的队列中,从而兼顾访问时问和访问次数.然而该算法对访问频率的变化反应太慢,且很难确定最优参数.(2)FBR算法考虑了LRU和LFU两者的优点.它将LRU队列分成三部分:新、中间、旧.该算法不增加新部分的引用计数,并替换旧部分最不经常使用的块.FBR算法避免了缓冲区污染问题.但是该算法要求特定参数来调整各部分的大小,到目前为止还没有可适用的策略来动态调整这些参数.(3)ARC算法将缓冲区分为两部分:一部分保存仅访问过一次的页面;另一部分保存访问次数超过一次的页面.每个部分还有一个相应的表用来记录从其置换出的页面.它兼顾了访问次数和访问时间,并且根据哪个因素更重要动态调整两部分的大小.(4)2Q算法使用一个FIFO队列Alin和两个LRU队列Alout和Am.它将首次访问的数据块放在Alin,在第2次访问时将其放入Am.替换时,如果Alin中的块超过固定数量,就替换Alin队头的块并将其标示符放入Alout;否则,替换Am中的数据块.2.3基于LRU栈模型的算法LRU栈模型着重分析访问的局部性特征.基于该模型提出的有LRU算法、LIRS算法、EELRU算法等.(1)LRU算法适合具有强局部性的访问模式.但是LRU算法存在如下缺点:①无法区分线性访问模式中的热块[24];②容易被大于缓存的循环访问造成缓存污染(CachePollution)[9];③不能区分具有不同访问概率的页面.(2)LIRS算法是一种基于LRU算法的弱点而改进的算法,有效地解决了LRU不能处理弱局部性访问模式的弱点.该算法以LRU栈模型为基础,但是与LRU仅仅关注并使用Recency信息不同,它使用页面的最近使用间隔IRR(Inter-ReferenceRecency)作出替换决定.IRR表示一个页面最近两次访问的间隔中,其它被访问页面的个数.文献[25]指出LIRS适合具有频繁访问特征的模式,而不适合某些具有强时间局部性特征的访问模式.(3)EELRU算法可有效解决大于缓存的循环访问以及线性访问方式造成的缓存污染问题.EELRU使用总计的Recency信息来特征化页面访问行为;而SEQ算法基于地址信息探测线性访问模式,因此缺乏一般性(例如,不能探测由链表指向的分散页面构成的循环).默认情况下EELRU执行LRU算法,当发现LRU的性能反常(例如:处于大于缓存容量的循环模式),它将寻找合适的替换点执行MRU替换.采用EELRU算法,每次访问都需要判断页面的位置,导致开销很大,很难在一个系统中被真正实现.可见,LRU栈模型虽然反映了局部性特征,却不能定量反映局部性的强弱性,因此基于该模型的算法也很难根据访问模式的局部性强弱变化而进行调整.LRU算法和LIRS算法分别适合了具有强局部性或弱局部性的访问模式,但却很难适应局部性由强到弱的某一过渡阶段的访问特征.3局部性定量分析模型3.1理论模型LRU算法和LFU算法分别基于LRU栈模型和独立参考模型,这两个分析模型分别仅捕捉访问的局部性特征和频率性特征.以下我们将建立局部性定量分析模型来同时挖掘局部性特征和频率性特征,从而为LRFU算法的参数调整提供依据.该模型基于一个K阶马尔可夫过程(K→),但是与经典马尔可夫模型[11-12]以及访问间隔模Page4型[16]在处理方法上有很大不同.经典马尔可夫模型过于复杂,而且没有将局部性特征作为该模型的分析框架;访问间隔模型则过于精细,不具有一般性和健壮性,而且同样没有捕捉访问的局部性特征.局部性定量分析模型把局部性特征作为基本数学特征框架,随着访问时间距离的递增,逐渐收敛数据块的再次访问概率.为了更好地说明模型中的参数,提出以下几个概念.时间t:不表示真实的系统时间,而是表示访问逻辑时间,用数字序列来表示,例如,t开始是0,访问过XYZ后,t是3.访问子集A:在连续d时间范围内所访问的数据块的集合.Ai表示在时间(i-d+1)至时间i内所访问的数据块的集合(id).并规定:如果任意两个子集Am和An不是同一个子集,则Am和An的交集必须为空集.局部性定量分析模型对应的访问模式具有以下数学特征:如图2所示,在该随机过程中,Ai为新子集的概率为β(即该子集从来没有被访问过);Ai为先前出现过的访问子集的概率为α,显然α+β=1.在Ai为先前出现的访问子集的条件下,Ai为距离该点访问时间为Kd的访问子集的概率为qk-1p(q+p=1).以上叙述可用公式表示如下图2局部性定量分析模型中访问子集的生成概率属性1.Ai为先前出现的访问子集的概率符合其空间概率之和为α的要求.证明.Ai为Ai-kd的概率为αqk-1p,因此Ai为先前出现过的访问子集的概率为αp(1+q+…+qk-1)=α(1-qk),K趋于无限大,因此α(1-qk)=α,故Ai为先前出现的访问子集的空间概率之和为α.若访问子集Ai生成为先前出现过的访问子集,则Ai的生成与先前的访问子集都有关,因此整个访问子集的生成过程是一个K阶马尔可夫过程(K→).3.2参数α和狆对局部性特征的量化反映从式(1)看出,β表示Ai为新的访问子集的概率.如果β是1,则表示访问的数据块均未被访问过,可对应局部性非常差的情况,比如线性访问模式.Ai可能为Ai-kd的概率是αqk-1p,它表示Ai成为距自身时间距离较近的访问子集的概率较高,在很大程度上反映了局部性特征.假设当前访问子集Ai为新的访问子集(即Ai没有在Ad,A2d,A3d,…,Ai-d中出现过,也就是说,该子集从来没有被访问过,其中i=Kd且K>1),可得以下结论.推论1.P(Ai+kd=Ai)=αp(q+ap)k-1.证明.设Ai=X,若Ai+d生成为X,则Ai+2d生成为X的概率应该为Ai+2d生成为Ai+d的概率与Ai+2d生成为Ai的概率之和;若Ai+d不生成为X,则Ai+2d生成为X的概率应该为Ai+2d生成为Ai的概率.则P(Ai+2d=X)=P(Ai+d=X)P(Ai+2d=X)+即:P(Ai+2d=Ai)=αp(q+αp).同理可证:P(Ai+3d=X)=P(Ai+d=X)P(Ai+2d=X)P(Ai+3d=X)+P(Ai+d≠X)P(Ai+2d=X)P(Ai+3d=X)+P(Ai+d≠X)P(Ai+2d≠X)P(Ai+3d=X)+P(Ai+d=X)P(Ai+2d≠X)P(Ai+3d=X)=αp(αqp+αp)(αq2p+αqp+αp)+(1-αp)αqp(αq2p+αp)+(1-αp)(1-αqp)αq2p+αp(1-αqp-αp)(αq2p+αqp)=αp(q+αp)2通过数学归纳法,可得即:P(Ai+3d=Ai)=αp(q+αp)2.由于q+p=1,所以q+αp<1.由此可见,当该模型生成一个新的访问子集后,而后随着d单位时间的增长,再次访问该子集的概率以q+αp的比率衰减传递.如图3所示,距离当前访问时间越近,则再次访问概率就越高.分析局部性和频率性具有的某些特征.局部性是指刚刚被访问的块在近期具有很高的再次访问概率;而频率性是指频繁访问的块无论在近期还是远Page5期均具有较高的再次访问概率.推论2.参数α反映访问的局部性特征,且与其正相关.证明.分析再次访问概率的衰减传递系数q+αp.该系数经变形后可表示为:1-(1-α)p.观察公式P(Ai+kd=Ai)=αp(q+αp)k-1.设函数f(a)=αp(q+αp)k-1,对其变形,可得f(a)=αp(1-(1-α)p)k-1.显然,f(a)为增函数.若α增大,则在将来当前子集被再次访问的概率也增大,即增大α将使序列中的子集将来被再次访问的局部性得到加强;反之亦然.当p为定值,考察α对访问局部性的影响.比较图3中的曲线4(α=0.8,p=0.2)和曲线1(α=0.2,p=0.2),若α较大,则当前子集在将来被再次访问的概率较大,且随着访问步数的增加,再次访问概率衰减较慢.推论3.参数p体现访问的频率性特征.证明.设函数f(p)=αp(q+αp)k-1,对其变形,可得f(p)=(1-β)p(1-βp)k-1.对f(p)求导,可得f(p)=(1-β)(1-βp)k-2(1-Kβp).当1-Kβp>0时,f(p)>0,f(p)为增函数;当1-Kβp<0时,f(p)<0,f(p)为减函数.因此,当K较小,能满足1-Kβp>0时,增大p值能使该时间范围内再次访问的概率也增大;然而,当K较大,使得1-Kβp<0时,增大p值会使该时间范围内再次访问的概率减小.因此,函数f(p)的增减性随着K增大到某一阈值而发生变化.若p较大,在近距离内再次访问的概率较大,但是概率曲线的衰减速率也较大,随着K的增大,再次访问的概率很快衰减为低概率,此时体现较强的局部性特征;若p较小,在近距离内再次访问的概率较小,但是概率曲线的衰减速率也会较小,随着K的增大,由于再次访问的概率衰减较慢,可以保证再次访问概率在远距离仍维持一定的数值水平,频率性特征为主导访问特征.综上,若p越大,则体现的频率性特征越弱,局部性特征体现出主导地位;若p越小,则体现的频率性特征越强.图3显示了当前访问子集的再次出现的概率随着K的增大而对应的变化曲线.考察当α相同,p不同时,两个概率变化曲线之间的位置关系.图3中的曲线5(α=0.8,p1=0.8)和曲线4(α=0.8,p2=0.2)体现了再次访问概率随着K的增大而减小的趋势.可以看出,当K小于11时,曲线5在曲线4之上,p1对应的再次访问概率要高于p2对应的再次访问概率,即若p增大,近距离内再次访问的概率也将增大;当K增大到11之后,曲线5在曲线4之下,p1对应的再次访问概率要低于p2对应的再次访问概率,即若p增大,远距离处再次访问的概率将减小.图3在α和p的各种组合值下,访问子集的再次访问概率随着访问步长K的增加而对应的变化曲线3.3各参数组合对应的访问模式(1)若α和p值均较小,如图3中曲线1(α=0.2,p=0.2)所示,虽然概率曲线的衰减速率较小,但是由于近距离内被再次访问的概率很小,远距离处的再次访问概率始终维持在较低水平.这种序列对应如下访问模式:线性访问模式和远大于cache尺寸的循环访问模式.(2)若α和p值均较大,如图3中曲线5(α=0.8,p=0.8)所示,近距离内的再次访问概率极高,经过一段时间距离后仍能保持较高值,直至在远距离处衰减为低概率值.这种序列对应强局部性访问模式.(3)若α值较大,p值较小,如图3中曲线4(α=0.8,p=0.2)所示,近距离内生成新的访问子集的概率较小,由于概率曲线的衰减速率很小,远距离处的再次访问概率仍能维持在一定水平.这种序列对应概率访问模式.(4)若α和p均取中间值,如图3中曲线3(α=0.5,p=0.5)所示,近距离内的再次访问概率值维持在较高的水平,并在随后一段距离逐渐衰减为较低的概率值.这种序列对应弱局部性访问模式.3.4根据模型设置算法参数以局部性定量分析模型为基础设计自适应替换算法LA-LRFU(Locality-AwareLRFU),从而在系统运行期问动态调整参数λ,以更好地适应访问特征的变化.当访问模式体现较强的局部性,工作集在较短的时间内被频繁访问,此时应用LRU算法可以获Page6得很好的性能;但是当访问模式体现较弱的局部性,被访问的块具有较长的再次访问距离,LRU算法在这种情况下表现很差,尤其当工作集大于Cache尺寸.这种情况下,应将频繁访问的块保留在Cache中,因为它们在近期被再次访问的概率要比刚刚被访问的块高很多,此时应用LFU算法可以获得较好的性能.LRFU策略中每块保留有一个CRF(CombinedRecencyandFrequency)值,表示该块在近期将被再次访问的可能性,替换时总是选择具有最小CRF值的块.CRF值通过权值函数F(x)=(1/2)λx计算得出.其中,x是上次访问到现在的时间间隔,λ是局部性和频率性的平衡参数.例如,某块的被访问时间是3、5、9,现在时间是10,则该块的CRF值是F(10-3)+F(10-5)+F(10-9).可见,在参数λ从0~1的变化过程中,LRFU置换策略将从LFU置换策略过渡到LRU置换策略.若λ值越大,则算法越倾向于着重考虑访问的局部性特征;若λ值越小,则算法越倾向于着重考虑访问的频率性特征.再看局部性量化分析模型,若α越大,则访问模式的局部性特征越强;若p越小,则访问模式的频率性特征越强.故α和p的乘积αp可体现访问模式的特征趋向.即αp越大,则表明访问模式趋向于局部性特征,此时应使参数λ也相应增大,从而使算法适应强局部性特征访问模式;若αp越小,则表明访问模式趋向于频率性特征,此时应使参数λ也相应减小,从而使算法适应强频率性特征访问模式.故λ值应与αp值成正相关,即由访问模式的特征设定算法参数λ,从而实现更好的替换策略.因此,λ值与αp值和概率衰减系数(q+αp)值的乘积为正相关,即λ=θ(C)αp(q+αp)(θ为参数调整函数,C为缓存可装载的数据块数量).在整个访问过程中,动态调整λ值,可使算法自适应访问模式的特征变化,实现最佳性能.由文献[21]的图7可知,缓存容量越大,远距离的访问就应给予更多的权重,算法应越倾向于LFU策略,则最优λ值越小.因此,最优λ值与C为反相关.由实验分析可得参数调整函数θ(C)的表达式为4LA-LRFU算法具体实现2Q、MQ、ARC、CAR等算法都保存了近期置换出页面的信息,为替换决策提供有效的历史数据.文献[23]使用一个LRU队列保存近期置换出的页面记录号和CRF值,并通过分析这些历史页面的再次访问情况动态调整λ值.为了统计更长时间的页面访问情况,我们同样使用一个FIFO队列Lout来记录置换出的页面记录号和CRF值,并将队列长度设为C.Lout中的页面按照被置换出的顺序排列,刚被置换出的页面放在队列的尾部,当队列已满时,清除队列头部的数据.读取不命中时,先在Lout中查找记录,如果找到相应的记录,将页面读取到缓冲区,同时按照该页面在Lout中记录的上次访问时间及CRF值计算出当前的CRF值,并将Lout中的相应记录删除;如果没有找到相应的页面记录,直接读取数据并将页面的CRF值设为F(0),另外将置换出的页面添加到Lout的尾部,如果Lout已满,将队列头部的记录删除.文献[22]中提出阈值dthreshold,保证如果一个块在时间点dthreshold以前经常被访问,那么这个块的CRF值永远不可能大于刚刚被访问的块.这个属性允许我们限制保存在堆中的块的数量,因为在堆中仅仅dthreshold个块可以比现在访问的块有更大的CRF值.因此,可以保存最近访问的dthreshold个块在堆中,同时其它的块保存在链表.然而dthreshold值是由λ值确定的,而在我们的策略中λ值是动态设定的,因此该优化不适用于我们的算法,数据块都将保存在堆栈中.文献[5,21]对关联访问的概念作出了具体的描述,并指出在关联访问期间内,对数据块的多次访问应作为一次单独访问对待.我们将d/10时间距离内对数据块的多次访问界定为关联访问,并按照文献[21]中处理关联访问的方法计算其CRF值.为了具有较好的统计特性,我们将访问时间统计单位d设定为缓存容量C的一半,即d=C/2.在实际应用中,很难对局部性定量分析模型中的访问子集进行划分,我们根据概率统计计算出模型中的相关参数.总是考察最近d次访问,并将多次关联访问作为一次访问考虑,则d次访问可统计为D次有效访问.当访问的数据块既不在缓存中,也不在历史队列Lout中时,则认为该数据块以前从未被访问过,若此类数据块的数目为B,则β=B/D,α=1-β.除去关联访问的情况,统计距上次访问的时间距离在d以内的数据块数目,将此类数据块的数目记为A1;统计距上次访问的时间距离在d与2d之间的数据块数目,将此类数据块的数目记为A2.AiPage7有可能会生成为Ai-d的概率是αp,Ai有可能会生成为Ai-2d的概率是αqp,则q=A2/A1或q=A1/α,取算术平均值,q=(A2/A1+A1/α)/2,p=1-q.综上,LA-LRFU算法可表述如下.(1)遵循基本的LRFU算法,将d/10时间距离内对数据块的多次访问界定为关联访问(d=C/2);(2)使用FIFO队列Lout保存被置换出页面的记录号和CRF值,将队列长度设为C.读取不命中时,如果在Lout中找到相应记录,按照记录的上次访问时间及CRF值计算出当前的CRF值;(3)每d时间段更新参数α和p(β=B/D,α=1-β,q=(A2/A1+A1/α)/2,p=1-q);(4)每d时间段对λ值进行计算和调整,使λ=θ(C)αp(q+αp)(其中θ(C)=10-3+4000/C2).5实验分析在该部分,以Trace仿真来评估各类LRFU替换策略的性能.将文献[22-23]中调整λ的策略分别称为A-LRFU(Adaptive-LRFU)和p-LRFU.我们将LA-LRFU和OPT、A-LRFU、p-LRFU以及LRFU做性能比较.OPT是一种离线最优置换算法,总是替换在最长时间内不再访问的块.各算法根据其文献中的描述设置参数.在A-LRFU策略中,设定初始λ=0.0001,每阶段增减的λ值按其规则计算.在p-LRFU策略中,设定初始λ=0.0001、M_TIMES=5、M_RATIO=1、M_VALUE=5.原始LRFU采用λ为0.001及0.0001两个值分别实验.我们采用3个模拟Trace和一个真实系统Trace进行实验.3个模拟Trace分别代表3种显性访问模式:线性访问模式、概率访问模式、强局部性访问模式.其中,线性访问Trace模拟了文件的顺序访问方式;概率访问Trace中对数据的访问符合zipf分布.真实系统Trace使用文献[26]实验中的Linux服务器内存访问Trace(MemoryBuddiesTrace)①.图4~图6显示了在线性访问、概率访问、强局部性访问这3种显性模式下,OPT、LA-LRFU、A-LRFU、p-LRFU以及LRFU的命中率.如图4和图5所示,A-LRFU在线性访问模式和概率访问模式下性能较低.这是因为该算法使用LRU栈模型作为它的λ值调整基准[22],当访问流体现较差的局部性特征且更符合独立参考模型时,它的预测是不准确的.图4线性访问模式下LRFU及其自适应算法的命中率比较图5概率访问模式下LRFU及其自适应算法的命中率比较图6强局部性访问模式下LRFU及其自适应如图6所示,p-LRFU在强局部性访问模式下也没有体现良好的性能.这是因为当访问流在某一阶段体现较强的局部性特征并连续在Cache命中时,该算法却规定减小λ值以倾向LFU策略[23].该缺陷造成的负面影响在Cache容量较大时尤为突出.而针对3种访问模式,LA-LRFU虽然没有全都表现出最优性能(如线性访问模式和概率访问模式),但都在很大程度上提高了Cache命中率,说明LA-LRFU对多种访问模式都具有适用性.MemoryBuddiesTrace是数据虚拟化中心服务器的内存访问Trace.数据虚拟化中心服务器融①http://skuld.cs.umass.edu/tracesPage8合了多台设备的资源,并为用户提供统一的逻辑接口.各用户对不同资源的访问使得MemoryBuddiesTrace由多种访问模式构成.图7和图8显示在该Trace下,当Cache块数为6000时,随着访问时间的增长(连续12万次访问),LA-LRFU、A-LRFU、p-LRFU以及LRFU在各时间段内的λ值变动及命中率(加入OPT算法进行对比)情况.图7MemoryBuddiesTrace访问过程中的λ值变动曲线图8MemoryBuddiesTrace访问过程中的命中率曲线如图7所示,LA-LRFU基于局部性定量分析模型,p-LRFU的λ值曲线和LA-LRFU在整体上较为吻合;但是当访问时间在70000至90000范围内时,LA-LRFU的λ值曲线说明此时的访问流具有较强的局部性特征,而p-LRFU却倾向于LFU策略,由图8可看出此阶段p-LRFU的命中率远低于LA-LRFU.A-LRFU以LRU算法作为其性能对比标准,并以此确定λ值的调整方向.当访问流具有良好的局部性特征(如访问时间在60000至100000范围内),则较适合LRU栈模型的评估,A-LRFU的λ值曲线和LA-LRFU较为吻合.而当访问流体现了很差的局部性特征(如访问时间在20000~50000范围内),频率性成为应捕捉的主导特征,则独立参考模型更符合此时的特征评估要求,因此A-LRFU根据LRU栈模型的评价结果很难对λ值进行合理调整,由图8可看出此阶段A-LRFU的命中率远低于LA-LRFU.图9显示当Cache块数为6000时,OPT、LA-LRFU、A-LRFU、p-LRFU以及LRFU在MemoryBuddiesTrace下的平均命中率.与各类LRFU及其自适应替换算法相比,LA-LRFU具有最佳的平均命中率.图9各算法在MemoryBuddiesTrace下的平均命中率综上,一个具体的访问过程通常由多种访问模式构成,这使得A-LRFU、p-LRFU以及LRFU在实际应用中具有一定的局限性;而LA-LRFU能够实时发现访问模式的转换,并根据访问特征的变化动态调整λ值,因此LA-LRFU具有更广泛的应用范围,且具有良好的整体性能.6结语本文针对现有访问分析模型的缺陷,提出基于K阶马尔可夫链(K→)的局部性定量分析模型,以此作为自适应替换算法LA-LRFU的理论基础.访问过程中,局部性定量分析模型根据统计信息实时量化局部性特征,从而为LA-LRFU动态调整参数λ,以适应访问模式的转换及访问特征的变化.实验结果显示,针对多种访问模式,LA-LRFU均可显著提高Cache命中率,因而在由多种访问模式构成的具体访问过程中,LA-LRFU能比现有的各类LRFU自适应算法更合理地调整参数λ,实现最佳性能.
