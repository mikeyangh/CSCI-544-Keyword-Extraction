Page1基于自重构粒子滤波算法的目标跟踪王宇霞赵清杰蔡艺明王博(北京理工大学计算机学院智能信息技术北京市重点实验室北京100081)摘要该文提出了一种对粒子滤波跟踪器进行分裂和合并的自重构算法.该算法能够通过分裂跟踪器以应对复杂多变的跟踪环境,同时,合并过程能够从多个跟踪器中选出最优跟踪器,合并冗余的跟踪器以达到减少计算量的效果.通过使用分裂和合并,能够在使用较少粒子的情况下达到很好的跟踪效果,在一定程度上解决了粒子滤波跟踪中计算量大的问题.分裂出来的多个跟踪器能够同时从多个位置多个方向跟踪目标,降低了复杂环境下目标跟踪丢失的概率,避免了粒子滤波中跟踪丢失时需重新选定目标的问题.通过和其他算法对比,文中提出的算法在跟踪准确性和跟踪效率两个方面表现优秀.关键词目标跟踪;粒子滤波;分裂;合并;计算机视觉1引言视觉目标跟踪在人机交互[1]、智能监控[2-3]、国防等领域有着巨大的潜在应用价值.然而,在实际环境中实现准确的目标检测与跟踪存在着诸多挑战,Page2进的运动模型、观测模型实现鲁棒的目标跟踪.优秀的运动模型可以准确的预测目标位置随时间的变化规律,有效缩小目标的搜索空间.匀速运动模型和匀加速运动模型因其计算简单高效而被很多跟踪算法所采用,但是由于真实环境中并不存在理想的匀速运动和匀加速运动,所以文献[4-5]采用随机游走(布朗运动)模型作为运动模型,以应对真实环境中目标运动的随机性.另外,Pan等人[6]提出使用动态方差建议分布作为目标状态的运动模型,旨在使用较少的粒子来有效预测目标状态.与运动模型不同,观测模型用来衡量候选目标与真实目标的似然,有效的外观模型可以及时反映目标表面的变化.Ross等人[4]提出的基于增量主成分分析的外观模型可以鲁棒的应对目标的姿态变化,尺度变化和环境光照变化.在线多示例学习算法[7]使用图像块的集合表示目标,使得跟踪器在目标经历光照变化和遮挡时可以有效地跟踪目标.Mei等人[5]提出的稀疏表示算法采用稀疏线性表示的方法使跟踪器可以应对光照变化、遮挡等问题.上述算法可以有效应对某些特定类型的外观变化和环境变化,但是真实环境中的目标变化和环境变化非常复杂,使用单一的目标跟踪器很难同时处理多种复杂的外观变化和环境变化.因此,近年学者们提出使用多个跟踪器跟踪同一个目标的算法.Siebel和Maybank[8]将主动形状跟踪器、区域跟踪器和头部检测器3个跟踪器结合到一起实现了鲁棒的行人跟踪.Leichter等人[9]为了将多个跟踪器结合到一起,提出了一个新的概率框架,在该框架中每个跟踪器输出一个目标状态的概率密度函数.Badrinarayanan等人[10]使用一个恒定不变的基于颜色模板的粒子滤波器和一个随机模板跟踪器实现鲁棒的目标跟踪.Zhong等人[11]利用多个跟踪器同时推断目标最优位置并且同时计算每个跟踪器的精度,实现了鲁棒的单目标跟踪.Santner等人[12]使用边检测边跟踪的方法通过级联的方式将3个跟踪器结合到一起实现单目标跟踪.Li等人[13]提出了一种基于不一致性的方法,通过该方法可以将多种目前性能较好的跟踪算法结合到一起,使这些方法协同地实现目标跟踪.文献[14]使用多个跟踪器跟踪同一目标,每个跟踪器应对一种外观或环境变化,以达到最好的跟踪效果.上述跟踪算法在一定程度上解决了单一跟踪器在应对复杂外观变化时的局限性,但由于导致目标外观变化的因素会随着时间不断变化,采用预先定义的跟踪器(跟踪器的数目和类型固定)不能够自适应的改变跟踪器的数量和类型以及时反映外观和环境的变化.为应对上述问题,本文在粒子滤波框架下提出了自重构粒子滤波目标跟踪算法(Auto-ReconstructingParticleFiltertrackers,ARPF),该算法使用自适应多跟踪器实现单目标跟踪.ARPF算法可以根据跟踪环境的复杂程度,在跟踪过程中通过分裂和合并过程自动添加好的跟踪器、替换不好的跟踪器,在一定程度上保证了跟踪器可以及时反映当前帧的目标外观变化.粒子滤波[15-17]采用贝叶斯滤波理论解决状态估计问题,根据所有粒子的权重,利用蒙特卡洛序列方法确定状态的后验概率,因此粒子滤波对噪声具有一定的鲁棒性,并且能够有效地解决非线性、非高斯问题.鉴于粒子滤波的上述优势,Isard和Blake[18]首次将粒子滤波算法应用于目标跟踪,之后粒子滤波算法引起了越来越多视觉跟踪领域学者们的关注,在CPF算法[19]、SPT算法[20]、IVT算法[4]、L1算法[5]、SCM算法[21]和ASLS[22]等算法中广泛应用.上述跟踪算法使用单一的目标跟踪器实现单目标跟踪,为同时应对多种类型的外观变化和环境变化需要设计更加复杂的外观模型和运动模型.本文我们提出的目标跟踪算法也是基于粒子滤波框架,但与上述算法不同的是,我们不关注复杂的运动模型和观测模型的设计,而旨在通过多个粒子滤波跟踪器实现单目标跟踪.另外,为了实现鲁棒的目标跟踪,不少研究者致力于研究目标丢失时如何重新初始化目标[23-26],但这些算法往往要付出昂贵的代价:在正常跟踪时牺牲一定的算法时间用来获取目标的相关信息,或者在目标丢失后,在全局范围内寻找目标.与上述做法不同的是,本文旨在避免目标跟丢的概率而不是丢失之后找回目标,从而以较低的代价解决了遮挡和噪声导致的跟丢目标的问题.直观上,在噪声较大的情况下为减少目标跟丢概率我们应该增强跟踪器,防止跟踪丢失、减小噪声对跟踪器跟踪效率的影响,当噪声较小时,应该减弱跟踪器以减小计算量.为实现上述思想,我们提出了对跟踪器的分裂和合并的算法.当目标被遮挡或者图像中存在较大噪声时,我们将一个跟踪器分裂成为多个跟踪器,利用多个跟踪器同时并行地跟踪多个准目标.这里我们定义准目标是那些和原始跟踪目标相似的目标.遮挡发生时,多方位同时跟踪多个准目标,可以解决由于遮挡导致的真实目标权重过小问题,有效减少了漂移和目标跟踪丢失的概率.同时,多方位同时跟踪多个准目标,适应了复杂的目标运动,可以使用简单的运动Page3模型实现对运动复杂目标的跟踪.合并过程舍弃所有伪目标跟踪器,选出真实目标跟踪器,有效降低了计算复杂度,提高了跟踪准确性.通过与其他算法的对比实验表明,分裂和合并过程实现简单,能够以较少粒子数取得较好的跟踪效果,当视频序列中存在遮挡或明显噪声干扰时,我们的算法表现尤为突出.2自重构粒子滤波跟踪算法基于自重构粒子滤波算法的目标跟踪,通过跟踪器的分裂和合并过程应对目标由于遮挡或者噪声干扰引起的目标外观变化.分裂是指跟踪目标与其他物体出现完全重叠或部分重叠,或者噪声明显造成粒子波动时,同时并行地对多个目标进行跟踪,从而减小跟踪丢失的概率.合并的目的是从分裂过程出现的多个跟踪器中找出有效的跟踪器,同时,合并过程还能丢弃分裂过程中出现的不必要分裂的跟踪器.图1显示了分裂和合并过程.图1分裂与合并过程(其中(a)、(b)、(c)分别显示跟踪器从一个分裂出多个;(d)、(e)、(f)分别显示跟踪器的合并过程)2.1分裂过程分裂过程从所有粒子组成的粒子集中找出一个或多个不相交的子集,每个子集确定一个目标的估计位置,然后单独地对每个估计目标进行跟踪.分裂的目的是减小目标跟踪丢失的概率,因为当目标与非目标出现重叠或部分重叠,并且两个目标的特征信息类似时,粒子滤波算法在选定跟踪目标位置时可能出现误选,这是由于在单目标跟踪的粒子滤波算法中,当前时刻总是选定一个位置作为目标的估计位置,如果当前时刻或者之后的几个时刻真实目标的特征信息似然函数值偏小,目标的估计位置和真实位置就可能出现很大的偏差.2.1.1分裂准则考虑到分裂的目的是减小目标跟踪丢失的概率,并且为了尽量避免错误分裂,我们根据下面的3个准则进行目标分裂.准则1.粒子重叠的概率.把权值最大的粒子作为候选粒子集的初始状态,当一个粒子与候选粒子集的每一个粒子的重叠率小于阈值T1时,把该粒子加入候选粒子集.本文我们使用矩形的位置和形状表示目标状态,每个粒子对应一个可能的目标状态,即每个粒子对应一个矩形区域.对于两个粒子,重叠率定义为Roverlap,其计算方法如式(1)所示,其中A1和A2分别表示两个粒子所在的区域,A1∩A2表示两个区域重叠部分的面积,A1∪A2表示两个区域并集的面积.重叠率既考虑了两个粒子的重叠面积,同时也考虑了两个粒子本身的大小,因此能够准确地表达两个粒子的距离.准则2.粒子权重.从准则1中得到的候选粒子集中剔除权重小于阈值T2的粒子.这里粒子权重等于粒子的似然函数值.在粒子滤波算法中,迭代几次后,除个别粒子外,几乎所有归一化后的粒子的重要性都会接近于0,造成粒子退化.为了解决粒子退化问题,我们对粒子进行重采样,就是根据一个给定分布随机地得到粒子的位置和大小,因此会出现少量的噪声粒子,这些粒子和真实目标位置偏离较远,同时似然函数值也很小.准则2可以有效地剔除这些干扰粒子,提高算法的准确率并且减少运算时间.准则3.目标周围的粒子数.前面两个准则得到的候选粒子集中的每个粒子各标定为一个类别,对任意一个不在候选集中的粒子,分别计算它与候选粒子集中每个粒子的重叠率,然后把该粒子归入重叠率较大的粒子所对应的类别.当对所有的粒子归类后,选出粒子数大于阈值T3的候选类,阈值的选择可以参照算法中粒子总数而定.分裂的最后,对于得到的每个候选类,根据一定的方法,如以每类中权重最大的粒子或粒子的均值,得到候选的跟踪目标.在下一时刻的粒子滤波跟踪过程中,对应于每个候选跟踪目标,重新初始化跟踪器,然后并行地使用这些跟踪器跟踪目标.我们将在接下来的合并过程中确定目标的预测位置.2.1.2准则3与k-means的比较和k-means算法[27]相比,准则3聚类的均方误差大于k-means算法,但是相比k-means的迭代过Page4程,准则3只要一步就可以对所有的粒子进行分类,节省了大量的计算时间,同时,得益于准则1和准则2,准则3分类的准确率就能得到保证.2.1.33个准则中的阈值的确定因为式(1)考虑到了每个粒子的大小,准则1的阈值对粒子的大小具有鲁棒性.当某个粒子与候选粒子重叠率大于某阈值时,我们可以认为该粒子与候选粒子跟踪同一个目标,当重叠率小于该阈值时,我们可以认为该粒子跟踪新目标或者产生了漂移.该阈值受重采样过程中重采样分布的影响,当重采样分布的方差较大时,选择较小的阈值,当重采样方差较小时,选择较大的阈值.在我们的实验中,相邻图2bolt视频上阈值T1取不同值时跟踪器的个数以及跟踪中心误差、覆盖率表1bolt视频上阈值犜1取不同值时跟踪器的中心误差和重叠率(其中加粗显示为最优跟踪结果)boltT1=0.05T1=0.55T1=0.65T1=0.75T1=0.85T1=0.95重采样过程不可避免地引入一些噪声粒子,这些粒子不能够正确跟踪目标,具有较小的权重.准则2用于剔除这些噪声粒子,有利于提高跟踪准确性和减少运算时间.当阈值设置过大时,会剔除许多正确跟踪的粒子,降低粒子的多样性,当该阈值设置过小时又不能够剔除噪声对跟踪器的影响,容易使跟踪器产生漂移和错误跟踪.由于重采样后的粒子大多分布在有效粒子周围,在实验中我们选择T2=0.25×Wmax(Wmax为最大权重粒子的权重值).准则3用于聚类,阈值T3的选择受准则1的阈值和粒子总数的共同制约,如果准则1中阈值设置帧间目标不存在突然运动,所以重采样分布的方差都较小,因此我们应该选择较大的阈值,如果该阈值设置过小,大部分粒子被认为跟踪同一个目标,当出现噪声干扰时跟踪器不能及时地分裂.图2(a)至图2(f)给出了在bolt视频序列上,阈值取不同值时跟踪器的数目,可以看出,随着阈值增大,分裂得到的跟踪器数目越多.图2(g)和图2(h)分别给出了在bolt视频上阈值取不同值时跟踪中心误差和重叠率,从图中可以看出,当T1=0.95时能够及时反映噪声对跟踪目标的影响,取得了最好的跟踪结果.因此在实验中,我们选择T1=0.95.表1给出了阈值取不同值时中心误差和重叠率的均值与方差.较小时,有较多的粒子不在候选粒子集,在准则3计算重叠比例后归类到每个候选粒子的粒子数就会较多,当总粒子数一定时,应该选择较大的阈值;如果准则1中的阈值设置较大,不在候选粒子集中的粒子较少,归类到每个候选粒子的粒子数相应也较少,当粒子数一定时,应该选择较小的阈值.由于在准则1中我们选择的阈值较大,所以参照粒子滤波算法中粒子的总数,实验中我们选择T3=0.03×N(N表示粒子滤波算法中粒子的总数).2.2合并过程合并的目的主要有两个:找出最有可能的目标状态的预测;减少跟踪器的数目从而减少计算量.通过合并确定置信度最高的跟踪器,从而得到目标状态最有可能的预测.在视频跟踪过程中,由于视频数据的连贯性,如果当前帧无法确定目标的位置,可以利用接下来几帧所收集到的信息加以确定,因此,为了得到置信度最高的跟踪器,我们累计更新每个时刻的目标置信度,并且丢弃置信度比值小于阈值Tc的跟踪器,当跟踪器的数目为1时,该跟踪Page5器给出的目标位置即目标的最优预测.令第i个跟踪器当前时刻t的置信度为Confi程为其中:N为t时刻跟踪器的个数;fi跟踪器得到的最优预测的观测似然函数值.在分裂过程中,我们尽量保证分裂得到的跟踪器所跟踪的目标都是独立的.但由于各种因素的影响,可能出现多个跟踪器跟踪同一个候选目标,为了减少计算量,当出现两个跟踪器所得到目标的预测位置相近时,即预测目标的重叠比例大于阈值To时,我们认为这两个跟踪器正在跟踪同一个目标,因此合并这两个跟踪器.我们选择两个跟踪器得到的最优预测位置的均值作为新跟踪器的初始状态,通过重构跟踪器得到合并后的跟踪器,从而减少跟踪器的数目以达到减少计算量的目的.2.3分裂和合并的数学解释视觉目标跟踪的目的是在图像序列中寻找跟踪目标对应的区域和位置,可以把目标跟踪问题看成最优化问题.对于单目标跟踪,每一时刻只能确定一个最优目标位置,当不存在遮挡和其他噪声干扰时,通常真实目标对应的粒子权重最大,单目标跟踪可以得到正确的跟踪结果;然而当真实目标被相似目标完全或部分遮挡时,伪目标与真实目标的权重可能相当甚至超过真实目标权重,如图3(a)时刻t所示,以前一帧的跟踪结果(以五角星表示)为中心,在搜索范围内我们得到了两个权重较大的粒子(五角形表示伪目标,具有最大权重;三角形表示真实目标,具有次大权重),此时单目标跟踪就会跟错目标,依旧选择权重最大的粒子作为跟踪结果,并且一旦跟错目标便很难恢复,最终导致跟丢目标,如图3(a)时刻t+1和时刻t+2所示.导致上述结果的原因在于当前时刻变量空间中存在多个函数值接近的峰值,如果我们选择该时刻最大的峰值作为函数最优,即权重最大的候选目标作为跟踪目标,会陷入时域局部最优,即选择的最终目标仅在该时刻具有较大的权重,在该时刻之前和之后权重都比较小,即该时刻权重最大的目标并不是真实目标,出现跟丢目标或者漂移问题.为了避免上述问题,我们提出了分裂和合并的算法.当目标的分布在某时刻出现多个峰值时(如图3(b)时刻t所示),分裂过程能够分裂并重构多个粒子滤波跟踪器,同时跟踪多个候选目标(如图3(b)时刻t+1所示),这样就能有效地避免出现跟错目标的问题;合并过程是丢弃那些确定不是真实目标的跟踪器(如图3(b)时刻t+2所示),并且纠正分裂时出现的错误分裂,选出最优的跟踪器.通过上述分裂合并过程,我们的跟踪器可以在整个序列上得到最优跟踪结果,即取得时域的全局最优序列.图3基于粒子滤波算法的目标跟踪(其中行(a)代表单目标跟踪,行(b)代表基于自重构粒子滤波算法的目标跟踪,3列分别给出了3个不同时刻的跟踪结果)2.4自重构粒子滤波跟踪算法的流程与实现我们的自重构粒子滤波算法使用C++语言和opencv库函数实现,我们实验的硬件平台为Intel(R)core(TM)i7-2600,3.40GHzCPU,4GB内存.算法的实现中,我们的主要目的是验证通过分裂和合并的方法重构跟踪器能否有效地区分重叠的目标,因此选择以较简单的方法实现自重构粒子滤波跟踪器.与基于颜色直方图的粒子滤波跟踪算法[19]相同,我们的自重构粒子滤波跟踪器的运动模型选择二阶自回归模型,因为对于视频序列来说,在相邻帧之间,目标运动的机动性不是很大.为了简单而且能够有效地辨别目标,选择用颜色信息表示目标的观测模型,颜色空间选择HSV颜色空间,似然函数用如下的公式定义:其中λ是预定义常量,Hr是目标的HSV空间的颜色分布,H(犡t)是候选目标的颜色分布,d(Hr,H(犡t))表示两个颜色分布的距离,可以使用K-L(Kullback-Leibler)距离[28]或Bhattacharyya距离[29],本文采用Bhattacharyya距离.选择所有粒子状态的均值Page6作为目标的最优状态.图4给出了自重构粒子滤波跟踪算法流程图.自重构粒子滤波跟踪算法具体描述和实现如算法1所示.算法1.自重构粒子滤波算法.输入:视频图像或者图片序列,图像目标在第1帧图像输出:输出目标在每一帧中所有可能的位置和区域初始化:使用第1帧图像(i=0)和目标的位置、区域初始化一个粒子滤波跟踪器,该跟踪器的初始置信度Conf跟踪器的个数N=1.Fori从1到最后一帧1.跟踪器跟踪阶段:(1)对于第i帧图像,分别利用N个跟踪器跟踪目标,得到每个跟踪器中所有粒子在当前帧的状态,包括粒子的位置和大小.2.合并阶段:(1)使用式(2)更新每个跟踪器的权值;(2)对于任意两个跟踪器,如果两个跟踪器得到的最优目标的重叠比例大于To,合并这两个跟踪器;(3)对当前时刻的所有跟踪器的权值进行归一化,对跟踪器按权值得大小从大到小排序;(4)Fork=1~M(M为当前时刻所有跟踪器的数目)3.分裂阶段:Fork=1~M(M为当前时刻所有跟踪器的数目)(1)候选粒子集犛初始化为第k个跟踪器中权重最大(2)计算任意两个粒子的重叠比例;(3)Forn=1~p(p为跟踪器所用的粒子的个数)(4)根据分裂的准则3对候选粒子外的粒子归类(每(5)根据最后得到的候选粒子重新构造跟踪器;(6)归一化每个跟踪器的权值.EndEnd上述自重构粒子滤波算法是在传统粒子滤波算法的基础上加入分裂和合并过程.通过分裂,多个跟踪器并行跟踪目标,增强了跟踪器抗噪声的能力.合并过程可以从分裂过程出现的多个跟踪器中找出有效的跟踪器,丢弃分裂过程中出现的冗余跟踪器.除了运用在粒子滤波跟踪算法中,分裂和合并思想还可以使用在任何基于采样的跟踪算法中,因此该算法具有很好的适用性.通过下面实验结果证明,我们的自重构粒子滤波跟踪算法可以有效地跟踪目标,即使当跟踪过程中存在遮挡和噪声干扰的情况下,本文的跟踪算法也能实现较好的跟踪.3实验与结果分析为了考察自重构粒子滤波跟踪算法(以下简称ARPF算法)的性能,我们在10个具有挑战性的视频上对算法的跟踪效率和跟踪准确性进行了实验,并与CPF算法[19]、SPT算法[20]、IVT算法[4]、SCM算法[21]、ASLS算法[22]以及VTD算法[14]进行了对比.以上7种算法都是基于粒子滤波框架下的目标跟踪,其中CPF算法、SPT算法、IVT算法、SCM算法和ASLS算法使用单个跟踪器,通过设计复杂的外观模型进行跟踪,而VTD和我们的ARPF算法通过多个跟踪器实现鲁棒的目标跟踪.实验中用到的10个视频分别为basketball[14]、singer1[14]、skating2[14]、bolt[20]、girl_move[20]、DavidOutdoor[20]、girl_head[30]以及来自公共测试集PETS2004的OneShopOneWait2cor、ShopAssistant2cor、Three-PastShop2cor.为了公平的对7种算法进行评价,我们使用作者提供的源代码对CPF算法、SPT算法、IVT算法、SCM算法、ASLS算法和VTD算法进行实验,并且在实验中CPF算法、SPT算法、IVT算Page7法、SCM算法和ASLS算法使用的粒子数为800;VTD算法共使用8个跟踪器,每个跟踪器使用100个粒子;我们的ARPF算法使用跟踪器个数可以根据跟踪场景复杂程度动态调整,但一般不超过6个跟踪器,实验中我们也选择每个跟踪器的粒子个数为100个.3.1跟踪效率分析与CPF算法相比,引入分裂和合并的自重构粒子滤波跟踪器不会引入过多的计算量.因为在噪声较少的情况下,跟踪器很少发生分裂,计算量和CPF算法几乎相当;在目标发生重叠情况下,利用我们的图5不同时刻跟踪器的数目(左图分别显示了172帧和190帧分裂得到的跟踪器,中间曲线图显示跟踪与SPT算法、IVT算法、SCM算法、ASLS算法和VTD算法相比,ARPF算法实现简单:不需要如SPT算法、IVT算法、SCM算法和ASLS算法一样设计一个复杂的外观模型,也不需要VTD算法表27种算法在10个视频上的效率比较(加粗显示为最优结果)basketballDavidOutdoorgirl_moveOneShopOneWait2corShopAssistant2corThreePastShop2corgirl_head从表2中可以看出,我们的ARPF算法取得了较高的运行效率,并且明显优于SPT算法、SCM算法和VTD算法.3.2跟踪准确性分析为了对7种跟踪算法的跟踪准确性进行分析,我们人工标注了10个视频的真实目标的中心位置和覆盖区域.由于视频序列都较长,逐帧标注太过繁琐,所以我们每隔5帧标注一次.我们使用中心误差自重构算法分裂开的跟踪器也能在之后的几帧迅速合并为一个跟踪器.如图5所示,172帧至190帧跟踪目标被遮挡噪声干扰,使得跟踪器发生分裂,当两目标完全重叠后分裂得到的多个跟踪器迅速合并为一个跟踪器;204帧至234帧由于重叠的两目标开始发生分离,使得跟踪器再次发生分裂,当分离过程结束后,多个跟踪器又重新合并成一个跟踪器.因此在整个跟踪过程中,只有当出现较严重的噪声干扰时跟踪器才会出现强烈的分裂和合并过程,在分裂合并过程结束后会迅速恢复成单个跟踪器,所以并没有引入很多计算量.多个运动模型和外观模型的设计和选择.因此本文提出的基于自重构粒子滤波的跟踪算法运行效率较高,7种跟踪算法在10个视频上的运行效率如表2所示.运行效率/(帧/s)VTD0.520.220.170.290.220.680.680.680.520.22和重叠率来衡量7种算法的跟踪准确性,其中,中心误差定义为最优跟踪结果中心位置与真实目标中心位置的欧式距离,中心误差越小,跟踪越准确.重叠率定义为跟踪得到的目标区域与真实目标区域重叠的比例,重叠率越大,跟踪越稳定,此处重叠率的定义与2.1.1节中的重叠率的定义相同.表3和表4显示了在10个视频序列中7种跟踪算法的平均中心误差和平均重叠率.在使用分裂Page8和合并的算法中,某一时刻由于可能有多个跟踪器,因此存在目标的多个最优估计,我们选择多个估计中和真实目标重叠面积最大的估计.从表3和表4可以看出,ARPF算法在多数视频上取得了比其他跟踪算法更小的中心误差和更大的重叠率;根据总体的中心误差和重叠率,VTD算法在多数视频上取得了较好的跟踪结果,但由于VTD算法采用固定个数和固定类型的跟踪器,导致不能很好地应对复杂多变的环境,并且复杂的外观模型和运动模型的设计引入了更多的参数,针对每个视频的参数调节对算法运行结果影响较大;CPF算法在大多数视频上也取得了较小的跟踪中心误差和较大表37种算法在10个视频上的中心误差(加粗显示的为最优结果)basketballDavidOutdoorgirl_moveOneShopOneWait2corShopAssistant2corThreePastShop2corgirl_headbasketballDavidOutdoorgirl_moveOneShopOneWait2corShopAssistant2corThreePastShop2corgirl_head表47种算法在10个视频上的重叠率(加粗显示的为最优结果)为了更加直观地分析7种跟踪算法的准确性,图6和图7中分别给出了7种算法在10个视频上的中心误差曲线图和重叠率曲线图.basketball视频序列中存在严重的目标形变和相似目标的干扰,由图6(a)、图7(a)可以看出,ARPF算法和VTD算法在整个视频序列中实现了较鲁棒的跟踪,SCM算法和ASLS算法在目标出现形变时无法实现准确的跟踪,而其他5种算法在应对形变时均具有一定的鲁棒性,但当跟踪目标受到相似目标干扰时CPF算法、SPT算法和IVT算法也丢失了目标.bolt视频序列和girl_move视频序列中存在较大幅度的形变的重叠率,说明CPF算法在应对形变和遮挡时具有一定的鲁棒性;SCM算法、IVT算法在存在遮挡和光照变化的girl_head、singer1视频序列中取得了较好的跟踪结果,在其他存在严重目标形变的8个视频序列中SCM算法表现较差;ASLS算法在One-ShopOneWait2cor、ShopAssistant2cor以及singer1中取得了很好的跟踪结果,但在其他视频序列中表现不佳;SPT算法在存在大幅度形变和遮挡的视频序列中表现不佳,并且由于我们使用的视频尺寸和目标初始位置不同,在存在光照变化的视频序列singer1中我们也并没有取得原作者声明的性能.VTD8.3553.5769.9545.3923.517.7311.7920.197.2412.1625.99VTD0.610.450.350.460.450.580.550.430.670.630.52和短暂的完全遮挡,CPF算法、IVT算法和SCM算法在目标频繁形变的影响下跟踪器性能非常不稳定,甚至丢失了跟踪目标,ASLS算法、VTD算法和SPT算法在遮挡过程中也丢失了跟踪目标,我们的ARPF算法在整个跟踪过程中表现较好,如图6(b)、(d)和图7(b)、(d)所示.DavidOutdoor视频序列中存在频繁的目标形变和短暂的部分遮挡,如图6(c)、图7(c)所示,ASLS算法和VTD算法在出现遮挡时丢失了目标,但当目标重新出现在跟踪范围内时VTD算法恢复了正常跟踪,SCM算法、IVT算法在出现较大幅度的目标形变时丢失了跟踪目标,Page9图67种算法在10个视频上的中心误差曲线图ARPF算法、CPF算法和SPT算法取得了较好的跟踪结果.skating2视频序列存在严重而且频繁的目标形变和遮挡,在该视频序列中ARPF算法、CPF算法和VTD算法跟踪效果较好,而SPT算法、IVT算法、SCM算法和ASLS算法在出现形变和遮挡时出现较大程度漂移,甚至跟丢目标,如图6(e)、图7(e)所示.OneShopOneWait2cor、ShopAssistant2cor和ThreePastShop2cor视频序列来自标准视频库PETS2004,3个视频序列中均存在形变和遮挡,在3个视频序列中ARPF算法取得了较好的跟踪结BBBBB果,而CPF算法、SPT算法、VTD算法、IVT算法、SCM算法和ASLS算法都出现了不同程度的漂移,部分算法最终跟丢目标.girl_head视频序列存在相似目标的遮挡,如图6(i)、图7(i)所示,SCM算法取得了最好的跟踪结果,IVT算法、ARPF算法取得了次优的跟踪结果,其他算法在遮挡出现时均出现了不同程度的漂移.singer1视频序列存在短暂的光照变化,如图6(j)、图7(j)所示,SCM算法、ASLS算法和VTD算法取得了很好的跟结果,由于使用的视频尺寸和目标初始位置不同SPT算法并没有Page10图77种算法在10个视频上的重叠率曲线图取得作者声明的结果,另外由于我们的ARPF算法采用基于颜色直方图的外观模型,所以在光照变化严重时表现不佳.图8列出了10个实验视频中部分帧的实验结果截图.视频序列basketball、bolt、DavidOutdoor、girl_move、skating2、OneShopOneWait2cor、Shop-Assistant2cor、ThreePastShop2cor、DavidOutdoor、girl_head的实验结果图显示了目标在经历频繁的形变和遮挡干扰时7种跟踪算法的表现,从图中可以看出CPF算法、SPT算法、VTD算法、IVT算法、SCM算法和ASLS算法在经历形变和遮挡时都出1.0)G1.0)G1.0)G1.0)G1.0)G现了不同程度的跟踪不准的现象,甚至丢失目标.我们的ARPF算法在应对形变和遮挡干扰时,自动分裂成多个跟踪器并行跟踪多个潜在目标,当遮挡噪声消除时,又迅速地合并为一个跟踪器,保证了鲁棒高效地跟踪.在singer1视频中,干扰噪声来自于光照变化,结果图显示我们的算法在经历光照变化时,出现一定程度的跟踪不准确现象,这是由于我们采用的基于颜色直方图的外观模型对光照较敏感导致的.以上10个视频序列的跟踪结果表明,我们的ARPF算法可以鲁棒的应对目标形变和遮挡问题,对于光照敏感的问题有待进一步解决.Page11图87种算法在10个图像序列上的实验结果Page124结论针对视觉目标跟踪易出现目标跟丢的问题,我们提出一种自重构粒子滤波算法,即在传统粒子滤波算法的基础上引进分裂和合并的思想.分裂是指通过分裂出多个跟踪器以增强跟踪器抗噪声的能力.合并的目的是从分裂过程出现的多个跟踪器中找出有效的跟踪器,丢弃分裂过程中出现的冗余跟踪器.与其他6种跟踪算法的对比实验结果证明在使用较少粒子的情况下,自重构粒子滤波算法能够得到很好的跟踪效果.除了运用在粒子滤波跟踪算法中,本文提出的分裂和合并思想还可以使用在任何基于采样的跟踪算法中,因此该算法具有很好的适用性.本文算法只使用了静态的基于颜色直方图的表观模型,为了进一步提高跟踪器的跟踪效果,下一步的工作将考虑在每个跟踪器中引进含有其他鲁棒特征的动态表观模型,以适应复杂多变的跟踪环境.
