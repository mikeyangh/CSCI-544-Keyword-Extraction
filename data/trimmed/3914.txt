Page1基于结点权重模型的XML片段检索策略刘德喜万常选刘喜平钟敏娟江腾蛟(江西财经大学信息管理学院南昌330013)(江西财经大学数据与知识工程江西省高校重点实验室南昌330013)摘要当用户向XML检索引擎提交查询后,返回的结果通常远远多于用户的期望,返回结果中难免有一些不相关的文档或结点.对于以文档为中心的XML文档集合,XML片段检索是根据用户的查询,从XML检索引擎返回的XML文档或结点中抽取出仅包含数百字节的片段,用户可以通过该片段判断片段所在的XML文档或结点与查询的真实相关性,以决定是否有必要进一步阅读,从而有效地提高从XML文档中获取信息的效率.该文提出了基于结点权重模型的XML片段检索策略.该策略先利用结点权重模型ATG(平均主题概括强度)对XML文档集中的标签或路径设置权重,再将该权重用于BM25模型,得到BM25NW检索模型.在利用BM25NW检索出XML结点后,对结点中定长窗口进行评分,考察其是否适合作为片段内容.最后在保证信息冗余较小的条件下,选择得分较高的窗口内容组成片段返回给用户.INEX2011片段检索任务上的评测结果显示,基于结点权重模型ATG的XML片段检索策略具有很强的竞争力,性能明显优于其它参赛系统.关键词XML片段检索;结点权重模型;平均主题概括强度;窗口1引言片段检索在平面文本或网页检索上已有广泛的应用,它可以帮助用户扫视文档或页面的内容,以决定是否点击阅读.对于以文档为中心的XML文档集合,XML片段检索是根据用户的查询,从XML检索引擎返回的XML文档或结点中抽取出仅包含数百字节的片段,用户可以通过该片段直接得到需要的信息,或者判断片段所在的XML文档或结点是否与查询相关、是否有必要进一步阅读,从而有效地提高信息获取的效率.考虑到在以文档为中心的XML文档集合上进行片段检索的重要意义,INEX图1一个XML文档树的例子(来自IEEECS文档集①)另外,在得到与查询相关的XML结点后,由于这些结点通常比较长,远远超过XML片段检索对片段长度的要求,因此需要从结点中选择更小粒度的内容作为片段,需要探索相应的选择标准和有效的选择策略.本文以INEX2011片段检索任务为背景,提出在2011年增加了XML片段检索任务(SnippetRetrievalTrack),以推动该方向的研究.然而,XML的结构及结点间的嵌套关系使得在衡量XML结点与查询的相关性时,需要考虑结点的重要性及其在结点相关性判断中的作用.例如,对于图1所示的XML文档树,在其它信息相似的条件下,从“摘要”结点e10中抽取句子作为片段比从“正文章节”结点e16中抽取更有代表性.再如,假设图1中某个“章节”(结点e16)的“标题”(结点e17)和“段落”(结点e19)中都包含查询词时,它们的父亲e16乃至祖先e15和e1均可视为相关结点.量化结点的权重及结点的相关性是XML片段检索的首要挑战.基于结点权重模型的XML片段检索策略,该策略先利用结点权重模型ATG(AverageTopicGener-alization)对XML文档集中的标签或路径设置权重,再将该权重用于BM25模型,得到BM25NW检①http://www.inex.otago.ac.nz/Page3索模型.在利用BM25NW检索出XML结点后,对结点中定长窗口进行评分,考察其是否适合作为片段内容.最后在保证信息冗余较小的条件下,选择得分较高的窗口内容组成片段返回给用户.INEX2011片段检索任务上的评测结果显示,基于结点权重模型的XML片段检索策略具有很好的竞争力,明显优于其它参赛系统,取得第一名的评测成绩.本文的主要创新工作包括:(1)分析在以文档为中心的XML文档集上进行面向查询的片段检索时,片段所应具备的基本特征,并以此作为片段检索的目标;结点的代表性或重要性;(2)提出XML结点权重模型,用于衡量XML(3)提出XML结点检索模型BM25NW,它将XML结点权重模型ATG设置的权重集成在BM25模型中,显著地提高了BM25用于XML检索时的性能;(4)设计了基于窗口的XML片段抽取策略,该策略根据片段检索的目标,利用“与用户查询的相关性”、“对XML文档的代表性”、“信息含量”、“信息冗余”等多个特征对结点检索结果中的定长窗口进行评价;(5)以INEX2011任务作为实验环境,通过详细的对比分析,验证了基于结点权重模型的XML片段检索策略的效果.本文第1节介绍研究的背景;第2节简要陈述结点权重模型的基本思想和重要结论;第3节和第4节分别给出基于结点权重模型的XML片段检索策略和实验分析;第5节对XML结点权重设置及片段检索方面的相关工作进行总结分析;最后在第6节对所做的工作进行总结.2结点权重模型在XML检索和片段抽取过程中,统计查询词项在XML文档、结点或片段中出现的频率是向量空间模型、概率模型及语言模型等各类检索模型建立的关键.已有的研究结果表明,在对以文档为中心的XML文档集进行检索时,根据结点的重要性适当调整结点中词项的权重,能够有效地提高XML检索的质量[1-2].已有的研究成果中,根据结点的标签调整结点中词项频率(或权重)的典型过程:(1)人工阅读多篇文档和DTD(DocumentTypeDefinition,文档类型定义);赋予一个权重,对其重要性进行量化;(2)根据结点的含义、地位和作用为每个标签(3)根据标签的权重调整结点中词项的频率(或权重).这种权重设置方法面临如下3个困难:①工作量大.例如IEEECS、Wikipedia等文档集,通常无法直接得知每个标签/路径的实际语义,需要观察文档集中大量的XML文档,并根据结点的内容和标签字符串本身,推测该标签/路径实际代表的含义.这种人工观察的方式枯燥繁重,效率低下;②主观性强.人工设置权重具有很强的主观性,同一个标签/路径,不同人会根据自己的理解给出不同的权重;③误判较多.由于文档集中文档较多,每个文档中的标签/路径少则几个,多则几十乃至上百个,因此,人工判断时难免由于疏忽而对标签/路径的真实语义产生误判.针对人工设置结点权重所面临的困难,我们提出了一种基于主题概括强度的结点权重模型ATG(AverageTopicGeneralization)[3-4],它能够有效地利用文档集自动设置各结点的权重,减少了人工设置时所消耗的劳力、主观依赖性和误判问题.该模型基于这样的观察:在一篇以文档为中心的XML文档中,越能高度概括全文主要内容的结点,对检索的影响越大.例如,通常文章的标题、关键词、摘要、章节标题比正文中的段落、图表、参考文献等更能概括全文的主要内容,因此查询关键词如果出现在文章的标题、关键词、摘要、章节标题所对应的结点中,相应的XML文档、结点或片段与查询更相关、更有代表性.然而,很难仅仅通过标签本身,例如IEEECS数据集中的标签“atl”、“kwd”和“st”等,判断其是标题、关键词还是其它内容.因此,需要根据结点内容来判断并量化主题概括强度.一个XML文档可以表示为由文档结点、元素结点、属性结点等构成的树[5].本文中的结点主要指元素结点,即每个结点对应XML文档中的某个元素,如图1中椭圆形的结点.结点内容是指结点对应的元素中所包含的文本.例如结点e13的内容为“indextermsregionidentification…”.结点标签Te是指结点e对应元素的标记名.结点路径Pe是指XML文档树中从根结点到e所经过的各结点的标签的序.图1中,Te13=“kwd”,Pe13=“/article/fm/kwd”.结点权重可以利用结点标签的权重或者结点路径的权重来代表.在ATG模型中,对这两种类型的权重都加以考察.ATG模型的设计框架如图2所示,共包括以下5个基本过程.Page4(1)人工权重设置从IEEECS文档集中随机选择250篇文档作为表1结点标签的候选特征特征ALt平均长度ALVt平均层次ABt平均兄弟结点个数ACt平均孩子个数ADt平均后裔个数APt平均位置AFt标签t在文档中出现的平均次数ANFt平均归一化次数(t在文档中出现的次数除以该文档中标签出现次数的最大值)ANLt平均归一化长度(结点长度除以其所在文档中最大结点长度)ANLVt平均归一化层次(结点层次除以结点所在文档的深度)在一个XML文档中,各个结点的内容与文档主题都有一定的相关性,在一定程度上反映了文档的核心内容.对于具有不同标签的结点,或者标签相同的不同结点,这种概括强度也不相同.ATGt是指在XML文档集合C中标签为t的结点内容对该结点所在文档主题的平均概括强度,其定义如式(1)所示.其中,TGe,d为结点e对其所在文档d的主题概括强度,可用结点e的内容与文档内容之间的相似性来衡量;Te是指e的标签;FRt,d是标签t在文档d中出现的次数,或者d中标签为t的结点个数;DFt,C指文档集C中包含标签t的文档数量.显然,结点越长,包含的内容越多,与整个文档的相似性也越大.但长结点并不一定具有很好的概括性,因此在计算TGe,d时,一方面,采用隐含语义索引技术获取文档内容和结点内容中的核心“概念”;另一方面,对结点的长度进行补偿.具体计算概括为以下4步:①将XML文档集合C表示成term-doc(词项-文档)矩阵犃,其中标引项termi在文档dj中的权重wi,j是在PNW(PivotedNormalization)权重[6]基础上进行调整得到的;②利用奇异值分解对矩阵犃进行分解,并保留特征值最大的200个特征(k=200,依据信息检索中的经验值[7]);③利用奇观察对象(称该文档集为IEEECS250),人工在观察各结点内容及其标签的基础上,推测标签的语义,并为各标签设置一个界于[0,10]之间的权重.(2)候选特征选择影响XML结点标签权重的主要因素可分为两类,结点的结构及结点的内容.本文以标签为t的结点的特征来表示标签t的特征,如结点长度、所在层次、兄弟结点个数、孩子结点个数等,如表1所示.下面对特征ATGt(标签为t的结点对文档主题的平均概括强度)作进一步的说明.异值分解的结果计算文档向量和结点向量;④用文档向量和结点向量的内积作为二者的相似度,即TGe,d.(3)相关性分析结点标签的特征对结点标签权重的影响采用标签的人工权重与各特征值之间的Pearson相关系数来衡量.根据相关性分析,最终选择了5个特征来衡量结点标签t的重要性,分别为:结点内容对文档主题的平均概括强度ATGt、结点在文档中的平均位置APt、结点的平均孩子个数ACt、结点在文档中的平均层次ALVt和标签在文档中的平均频率AFt,其中ATGt中还用到了结点的长度特征.作为对比,实验还验证了当对选择条件适当收紧或放松时,得到的4个特征和7个特征时的效果,结果表明,选择上述5个特征的效果最好.(4)结点权重模型通过相关性分析了解到,结点对文档主题的概括强度与结点标签权重最相关,因此本文中的结点标签权重模型以结点内容对文档主题的概括强度为基础,并在主题概括强度计算的过程中考虑被选择出的其它各个特征.结点标签t的权重TW(t)的定义与计算与式(1)相同,即标签为t的结点对结点所在文档的平均主题概括强度,只是度量标引项termi在结点e中的权重wi,e时,综合考虑影响标签权重的更多特征,Page5如式(2)所示.其中,tf为标引项termi在结点e中出现的次数;rLG、rPO、rCH、rLV、rFR分别为结点的长度特征、位置特征、孩子数量特征、层次特征和标签频率特征,它们的定义如式(3)所示.其中,X可表示LG、PO、CH、LV、FR;AVG(LGd)、AVG(POd)、AVG(CHd)、AVG(LVd)、AVG(FRd)分别为文档d中结点的平均长度、结点的平均位置、结点的平均孩子数量、结点的平均层次、标签的平均出现次数;常量βLG、βPO、βCH、βLV和βFR为各特征调节参数,用于控制各特征对权重设置的影响强度,并采用非线性回归分析进行训练.本文中各参数值的训练结果分别为βLG=0.94,βPO=0.19,βCH=0.08,βLV=0.25,βFR=0.05.结点权重可采用结点标签的权重,也可采用结点路径的权重.设PW(p)是路径p=“/t1/t2/…/tm”的权重,TW(t)是标签t的权重,一种计算结点路径权重的方法是对结点路径上所有标签的权重求平均,即PW(p)=∑m最下层的标签权重作为结点的路径权重,即PW(p)=TW(tm).但这两种方式得到的路径权重与人工标注的路径权重差异较大,平均相关系数分别为0.422和0.435,而不同人标注的路径权重之间的相关系数平均为0.556.也就是说,直接利用结点标签权重不够合理.为了更加准确地计算结点路径的权重,本项目还采用了类似结点标签权重的过程来计算结点路径的权重,即先人工标注一部分结点路径的权重,再考察结点的15项候选特征与结点路径权重的相关性,并从中选择路径权重所用的特征,将其集成到平均主题概括强度特征中,作为结点路径的权重.所选择出的特征及训练得到的各特征的调节参数分别为:结点所在的层次(βLV=0.254)、长度(βLG=0.950)、兄弟数量(βBR=0.281)、孩子数量(βCH=0.061)、结点的路径在文档中出现的次数(βFR=0.054)、结点的位置(βPO=0.322).(5)ATG模型测试对结点权重模型效果的测试从两个方面开展,①对比模型所给出的结点权重与人工设置的权重之间的相关性,该相关性越大,说明模型越能代替人工对结点权重进行自动赋值;②将模型给出的结点权重用于XML检索,并对比利用该结点权重前后的检索效果.为测试结点权重模型ATG的鲁棒性,实验文档集除IEEECS外,还选择了用于INEX评测的Wikipedia文档集,两组文档集在文档长度、文档中的标签数量和结点数量等方面有很大差异.通过考察IEEECS中250篇文档得到的结点权重模型及调节参数,如果在不做任何调整的情况下,也能很好地用于Wikipedia文档集,则说明该模型具有较强的鲁棒性.结点权重采用如表2所示的9种设置方法并加以对比.其中,结点n所在的路径为p,PW(p)是路径p=“/t1/t2/…/tm”的权重,结点n的权重用路径p的权重PW(p)表示,TW(t)是标签t的权重.需要说明的是,由于受奇异值分解规模的限制,标签和路径是在抽样的250篇文档上得到的,得到的权重不能够覆盖数据集中的所有结点.因此,如果某结点的权重未能通过表2中的方法得到,默认其权重为1.另外,表2中结点权重在使用前,都会被按比例缩放到区间[0,10],即将结点的最大权重设置为10.名称EPWPW(p)=1,所用路径权重都为1,即不考虑权重LATGTPW(p)=TWATG(tm),路径权重等于路径中层次最LManuTPW(p)=TWManual(tm),路径权重等于路径中层次AAATGTPW(p)=∑mAAManuTPW(p)=∑mGAATGTPW(p)=∏mGAManuTPW(p)=∏mATGPPW(p)=PWATG(p),由ATG模型计算得到的路径ManuPPW(p)=PWManual(p),路径的人工权重对ATG模型测试所得出的主要结论如下.结论1.模型ATG给出的结点权重是合理的,并且具有良好的鲁棒性.表3显示,在IEEECS和Wikipedia两组不同的文档集上,模型给出的结点权重与人工设置的权重间的相关性都是“很显著”的.另外,用IEEECS文档集上训练得到的ATG模Page6型为Wikipedia文档集中的结点设置权重,得到的结果与人工权重之间相关性也是“很显著的”.表3ATGP权重与ManuP权重的相关性(犺1,犺2,犺3为h10.452h20.3730.556h30.4070.4280.5820.4150.5840.766注:表示相关性在0.01水平上是显著的(2-tailed).结论2.使用ATG模型得到的路径权重能有表4ATG模型用于INEX2008AdHoc任务的评测结果3XML片段检索评测任务focusedk=3,b=0.8iP[0.01]0.67880.66000.67280.61570.67360.66130.65620.64470.6066relevantincontextk=2,b=0.8MAgP0.21400.20220.18400.20320.19600.20600.19330.20280.1959bestincontextk=1.2,b=0.4MAgP0.20960.19750.16090.20330.17080.18200.16660.17800.1809段,用户可以判定d的真实相关性.综合上述3种情况,为避免XML片段失效,要求片段所在的结点与用户查询是相关的(尽管这种相关性与人工判断的可能不一致),能较好地满足用户查询需求.特征2.片段所在的结点应能较好地代表整个XML文档的内容.可以通过一个例子来说明片段的这一特征.设来自IEEECS文档集的XML文档d的主题为“imageretrieval”(图像检索),d的abs(摘要)结点中自然包含“imageretrieval”相关的描述.假设该文引用了一篇关于“XMLretrieval”的文献,即d的bib(参考文献)结点中包含“XMLretrieval”.如果用户查询为“XMLretrieval”,由于bib结点的存在,文档d可能会被视为相关文档.此时,如果返回给用户的片段也来自bib结点,极易造成用户将文档d误判为与查询相关.相反,由于abs结点中也包含查询词“retrieval”,因此根据特征1,可以从该结点中抽取片段,而这时抽取的片段则会帮助用户判断出文档d是关于“imageretrieval”而非“XMLretriev-al”的.可以看出,从更能代表XML文档内容的结点abs中抽取片段,能帮助用户了解整个XML文档的主要内容,从而作出正确判断.然而,如果只是简单地选择从文章的摘要或者标题结点中抽取片段也不合适.原因是,一个文档通常包含多个主题,这些主题并不全反映在标题或摘要中.因此,如果d的某个p(段落)结点与查询非常相关而abs结点中并没包含查询词时,武断地从abs结点中抽取片段会导致用户将d误断为不相关.在以文档为中心的XML文档集上进行片段检索时,生成片段的目的是为了帮助用户在更短的时间内判断片段所在的结点或文档是否是查询相关,并以此决定是否有必要对结点或文档进一步阅读.基于此,所生成的片段应具有一定的特征,而XML片段检索的目标就是生成满足这些特征的片段.3.1XML片段的特征特征1.片段所在的结点应能较好地满足用户的查询需求.设结点犲d=〈e1,…,en〉是XML文档d中的全部结点,狊d=〈s1,…,sn〉是来自犲d中各结点的片段,si为空表示没有来自结点ei的片段.直观地,如果犲d中存在与查询Q相关的结点,则文档d与Q相关;反之,如果文档d与Q不相关,则d中不存在与Q相关的结点.XML片段是用户观察XML文档与查询相关性的一个窗口,因此有:①如果d与Q相关,但XML片段却来自与查询不相关性的结点,这会导致用户误将相关的文档d判断为不相关;②如果d与Q不相关,且d中所有结点e与Q都不相关,来自e的片段自然会引导用户将d判断为不相关,但这除了浪费用户的时间外,没有任何意义,因为检索出相关文档才是用户查询的目的,而没有必要去考察那些无关的文档;③如果d与Q不相关,但由于d中结点e包含了查询词而使得XML检索引擎将该文档视为相关文档返回,通过分析来自e的片效地提高XML检索的质量.实验考察了结点权重模型对XML检索性能的影响,检索模型基于BM25模型,选择INEX2008AdHoc任务和相应的评测指标.表4中的实验结果显示,对于INEX2008的focused任务、relevantincontext任务和bestincontext任务,利用ATGP权重所取得的成绩比不用路径权重时(权重设置方法为EPW)分别提高了2.8%、5.8%和6.1%.实验结果同时还显示,表2所列出的9种ATG路径权重方法中,ATGP方法要好于其它8种权重设置方法,包括人工设置权重的方法ManuP.Page7点的重要性或者结点对文档主题的概括强度.也就是说,在XML片段检索时,需要考察各结特征3.片段应能提供必要的上下文信息.特征1要求片段所在的结点应能较好地满足用户的查询需求,类似地,片段本身也应能较好地满足用户的查询需求,并且为用户提供必要的上下文信息.例如,用户查询为“XMLretrieval”,某相关结点的内容如图3所示①.直观地,窗口2较窗口1中的内容更适合作片段,因为窗口1与查询相关性不明显;窗口3比窗口2的内容更适合作片段,因为窗口3包含了必要的上下文信息,可以帮助用户“窥视”到整个结点或整个文档的内容;窗口4比窗口3的内容更适合作为片段,因为窗口4(含查询词“XML”和“retrieval”)比窗口3(只含查询词“XML”)更能满足用户的查询需求.所以,在从与用户查询相关的结点中抽取片段时,除了要求片段能满足用户的查询需求外,还要求片段有一定的长度,以提供必要的上下文信息.基于对XML片段的特征分析,本文所提出的XML片段检索策略分为两个阶段:结点检索和片段抽取.结点检索阶段针对片段的特征1与特征2,从XML文档集中检索出既与用户查询相关,又能代表XML文档内容的结点.片段抽取阶段针对片段的特征3和特征4,从相关结点中抽取与用户查询相关、有一定上下文且信息含量丰富的片段.可能丰富的信息量.特征4.片段应在长度受限的条件下包含尽该特征是比较直观的,因为片段的信息含量越丰富,就越能帮助用户了解到片段所在文档的内容.例如,对于图3中所示的例子,在都不含查询词的情况下,相同长度的窗口“resemblancebetweenthestructure”要比“istofindthe”更适合作为片段,因为前者信息量更丰富.3.2结点检索OkapiBM25模型[8]是具有良好理论基础和实验效果的检索模型,利用该模型可以从XML文档集中检索出符合片段“特征1”的结点.然而,经典的BM25模型没有考虑XML片段中“特征2”的要求,无法衡量结点对文档主题的代表性.考虑到在第2节中提出的结点权重模型ATG可以用来量化结点对文档主题的代表性,我们将ATG模型得到的结点权重与BM25模型集成,得到BM25NW模型(BM25modelwithNodeWeight).在BM25NW结点检索模型中,结点e的分值定义为s(e)=∑t∈Q其中,Q是用户查询主题中查询词项的集合;N是文档集中的文档数;dft为包含词项t的文档数量;|e|是结点e中词项的个数;avgdl是文档集中文档的平均长度.经典BM25模型中,fe,t是词项t在结点e中出现的频率,为考虑词项所在结点的权重,本文中词项频率fe,t的计算如式(5):其中,leaf是结点e中的叶子结点;tfleaf,t是词项t在叶结点leaf中出现的频率;pleaf是叶结点leaf的路径;PW(pleaf)表示叶结点leaf的路径pleaf的权重.BM25NW模型中,查询词在结点中出现的频率受结点权重的调节.结点权重大,说明该结点内容对文档主题具有更强的概括性,更能反映整个文档的主题,因此在结点长度和查询词出现频率相同的情况下,权重越大的结点与查询越相关.集成结点权重后的BM25NW模型既考虑了结点内容与查询的相关性,又考虑了结点内容对文档主题的代表性,能满足特征1和特征2对XML片段的要求.3.3片段抽取在得到与查询主题相关的XML结点后,进入片段抽取阶段.片段抽取的基本思想是:①按XML结点与查询的相关度依次选择候选结点,并从中抽取片段(体现XML片段的特征1);②如果XML文档有标题,由于标题最能说明文档与查询的相关性,首先将标题作为片段的内容(体现XML片段的特①http://en.wikipedia.org/wiki/XML-RetrievalPage8征2);③如果一个片段能较好地反映用户查询,同时又能描述XML结点及整个XML文档的主要内容,则该片段适合作为返回结果(体现XML片段的特征1和特征2);④片段应具有一定的长度,以帮助用户理解片段的内容(体现XML片段的特征3);⑤如果一个片段的内容被已经返回的结果所覆盖,则该片段不需要再返回,从而让长度有限的片段含有更多的信息(体现XML片段的特征4).片段是由词项构成的,因此片段与查询的关系、片段与XML文档/结点的关系以及片段之间的信息覆盖程度可通过分析片段所含的词项得到.设结点e=〈t1,…,tn〉;tk(1kn)是e中的词项,tk所在的叶结点为leaftk(本文假设词项只出现在叶子结点中);n为e所包含的词项数.用户查询Q={q1,…,qm};qi(1im)是查询词项,m为查询词的数量.根据片段抽取的基本思想,词项tk是否适合作摘要内容由3个因素决定,即词项与查询的相关性、词项自身的信息含量及其所在结点的权重.词项tk与查询Q的相关性由词项与查询词的距离决定,二者在XML文档中的距离越近,说明该词项与Q越相关,有relevance(Q,tk)=∑n输出:与查询Q相关的M个XML文档以及从各个文档中抽取出的片段组成的片段集合S.S中每个元素ζ=〈r,d,狊〉,其中d表示检索出的XML文档的编号,r表示XML文档与查询相关性分值,狊是指导用户进行相关性判断的片段8.由式(8)计算e中窗口windowj的分值,1j|ei|-l+1,|ei|为ei的词项数,l为窗口大小(本文设定为15个词10.如果狊对window的信息覆盖率cover(狊,window)<0.6,则将window追加到狊中(如果二者无重叠且不邻图4基于ATG模型的片段检索算法4实验INEX2011新增的“片段检索任务(snippetretrievaltrack)”[9],要求根据某个查询主题,返回一个经过排序的XML文档列表(不超过500个文词项自身的信息含量用词项在XML文档集中的反文档频率表示,有IDFtk=log(1+log(1+N))/(dftk+0.5)(7)其中,N为文档集中文档总数;dftk为包含词项tk的文档数量.词项所在结点(叶子结点)的权重为ATG模型得到的结点权重PW(leaftk).本文假设XML片段长度的最大值由用户设定,构成XML片段的各候选子片段长度相同,即狊=〈s1,…,sv〉,子片段si(1iv)中包含的词项个数小于等于l.在得到各词项的3类信息后,可据此计算候选片段内容的分值.设windowi=〈ti,ti+1,…,ti+l-1〉为e中长度为l的一个窗口,则窗口windowi的分值有赖于windowi所含词项,有score(windowi)=1最终返回的片段应该是那些分值较大的窗口的集合.在将窗口window中的内容加入到片段狊之前,需要考察窗口所包含的信息是否已被狊的内容所覆盖,本文用二元覆盖率来计算信息覆盖程度.一个片段狊对一个窗口window的二元覆盖率为cover(狊,window)=window与狊中相同2-gram的个数/(l-1)(9)l∑i+l-1片段检索的具体算法如图4所示.档),并且针对其中的每个文档,返回一个描述该文档的片段(长度不超过300个字符),该片段能够指引用户判断其所在的文档是否与查询相关.也就是说,用户只需浏览该片段,即可判断片段所在的文档与查询的相关性.我们参加了INEX2011的片段检索任务,因此本节以INEX2011任务来验证基于结Page9点权重模型的XML片段检索的效果.4.1数据集评测用的文档集采用INEX2009所用的Wikipedia文档集(本文称其为Wikipedia2009),包含2666190个XML文档.查询主题来自INEX2009的AdHoc任务(AdHocTrack),每个查询主题包含一个CO查询和一个CAS查询,以及对所需信息的说明,如图5所示.此外,数据集还包括为每个查询主题提供的500个来自BM25模型的检索结果(referenceruns),参赛者可以不使用XML检索引擎,直接从这些文档中抽取片段.〈topicid=2011017ct_no=17〉〈title〉oliveoilhealthbenefit〈/title〉〈castitle〉//food[about(.,oliveoil)andabout(.,healthbenefit)]〈/castitle〉〈phrasetitle〉oliveoilhealthbenefit〈/phrasetitle〉〈description〉Findinformationaboutwhatsortofhealthbenefitoliveoilhas.〈/description〉〈narrative〉Imahealth/beautybuff.Irecentlylearnedthatoliveoil…〈/narrative〉〈/topic〉查询关键词采用查询主题中的标题(title)和短语标题(phrasetitle).例如,对于图5所示的查询主题,提交给检索系统的查询关键词为{oliveoilhealthbenefitoliveoil,healthbenefit}.考虑到大部分结点不具备完整的意义,我们将返回结点的标签限定为{section,bdy,caption,sec,ss1,ss2,ss3,ss4,ss5,p}.4.2评测方法与评测指标将一个参赛系统对各个查询的片段检索结果(含文档及对应的片段)分配给不同的评测员,评测员根据查询的需求,在只阅读文档片段的基础上判断该文档与查询的相关性.这种判断越接近文档与查询的真实相关性,说明片段越能有效地帮助用户在不阅读整个XML文档或结点的情况下做出正确的相关性判断,相应的片段检索系统就越好.给定一个查询,可将文档分为“相关”和“不相关”两组.对于“相关”文档,评测员在阅读片段的基础上可能做出正确判断,将其判断为“相关”,也可能由于片段的误导,将其误判断为“不相关”,反之亦然.据此,组织者共设计了7项评测指标,其中综合考虑“相关”文档和“不相关”文档的指标分别为MPA(theMeanPrecisionAccuracy)、MNPA(MeanNormalizedPredictionAccuracy)和GM(theGeometricMeanofRecallandNegativeRecall).相比MPA和MNPA,GM指标更合理,这也是INEX2011对参赛系统进行排名的依据,其定义如下:其中TP、TN、FP、FN分别是用户判断正确的“相关”文档数量、用户判断正确的“不相关”文档数量、用户判断错误的“相关”文档数量和用户判断错误的“不相关”文档数量.4.3实验结果ATG模型中的参数仍采用在IEEECS文档集上,利用人工权重作为训练样本得到的参数.我们有理由相信通过INEXAdHoc的历史评测任务进行训练会得到更好的结果,但遗憾的是,由于时间关系,未能在提交参赛系统前完成这一工作.而INEX2011将各个参赛系统提交的结果分发并进行人工评测的做法,加之无从得知数据集中文档与查询的真实相关性,使得我们不具备进一步实验的条件.但这并不影响本次实验评测对本文所提出的片段检索方法性能的验证.表5是按GM评测指标排名前10的参赛系统,其中加重显示的系统是本文所提出的方法对应的参赛系统.我们提交了8组参赛系统,用p72-LDKE-m1m2m3m4中的后4位数字m1m2m3m4区分,各参赛系统的各项评测指标具体得分情况如表6所示.m1用于说明XML结点检索时所用的文档集是表5按GM评测指标排名前10的参赛系统排名1p72-LDKE-11112p23-baseline3p72-LDKE-01014p20-QUTFirst3005p73-PKU_ICST_REF_11a6p72-LDKE-11107p23-expanded-408p72-LDKE-01119p65-UMD_SNIPPET_RETRIEVAL_RUN_30.526410p20-QUTFocusedRunp72LDKE-11110.75820.64300.46410.82190.57050.37480.8292LDKE-01010.75900.63310.43470.83140.54720.36470.8301LDKE-11100.76840.63280.44700.81870.53170.36460.8232LDKE-01110.76740.61790.40580.82990.52700.34520.8364LDKE-11210.78600.62630.38880.86370.51920.32790.8587LDKE-11010.76380.62200.41150.83250.51300.33290.8313LDKE-10010.77260.61610.36900.86330.49190.31910.8434LDKE-10110.80220.60760.32690.88840.47700.31510.8715Page10Wikipedia2009文档集(m1=1),还是由主办方在BM25(K1=0.7,b=0.3)基础上为每个查询主题检索出来的500篇文档(referenceruns)(m1=0);m2用于说明片段抽取策略,m2=1表示使用图4中的片段抽取策略,而m2=0表示baseline方法,即将图4中算法的步8~11的片段抽取策略替换成抽取结点e的前L个字节;m3表示结点权重设置方法,m3=0表示不使用结点权重,即所有结点的权重都为1,m3=1或m3=2分别表示使用结点的LATGT权重(结点路径中层次最低的标签的ATG权重)或ATGP权重(由ATG模型计算得到的路径权重);m4=0表示按数据集中所提供的参考检索结果(referenceruns)给出的文档顺序重排由BM25NW(图4中算法第3步)得到的检索结果,m4=1不重排.通过对评测结果的分析,可以得出以下结论.结论3.本文提出的基于结点权重ATG模型的片段检索策略具有很好的效果,通过该策略检索出的片段能很好地替代原始文档指引用户进行相关性判断.其中p72-LDKE-1111的GM评测值在50组参赛结果中排名第一,该参赛系统的检索文档集为Wikipedia2009文档集,抽取分值较高的窗口内容、使用结点的标签权重、按BM25NW模型对文档进行排序.结论4.利用结点权重模型ATG构建的XML检索模型BM25NW的检索结果优于直接使用BM25模型.该结论从两个方面体现,一是利用BM25NW直接在Wikipedia2009上检索,结果的GM值(p72-LDKE-1111,0.5705)好于在referenceruns(基于BM25)上的结果(p72-LDKE-0111,0.527);另一方面,根据referenceruns提供的文档顺序对BM25NW的检索结果重排后的GM指标从0.5705下降为0.5317(p72-LDKE-1110).结论5.以窗口为粒度并对窗口进行评分的片段抽取策略是有效的.相对于直接抽取结点的前L个字节的内容(p72-LDKE-1011和p72-LDKE-1001),对结点中的各窗口进行评分,并抽取高分的窗口内容作为片段(p72-LDKE-1111和p72-LDKE-1101),得到的GM值分别从0.477和0.4919上升到0.5705和0.513.结论6.采用结点的LATGT权重(结点路径中层次最低的标签的ATG权重)对XML检索及片段抽取有显著提高.相比于不使用结点标签权重的p72-LDKE-1101,使用结点LATGT权重后(p72-LDKE-1111)的GM值从0.513提升到0.5705.有趣的是,尽管在Wikipedia2008(INEX2008使用)文档集上结点的ATGP权重(由ATG模型计算得到的路径权重)比LATGT权重表现更好,但对于Wikipedia2009文档集上的片段检索任务,使用ATGP权重与不用权重表现基本相当,GM值分别为0.5192(p72-LDKE-1121)和0.513(p72-LDKE-1101).进一步对文档集本身分析发现,造成这种结果的原因是,对于Wikipedia2009文档集,在250篇抽样文档上得到的路径对整个文档集上的路径覆盖率太低,造成绝大多数路径权重缺失,因此路径权重的作用无法体现.对该问题进行定量说明如下:设文档集C中所有结点标签的集合为T,通过采样得到的标签集合为TT,如果在对C中的标签进行访问时用T代替T,则部分标签可能无法被访问到,因为它们不在T中,称这部分标签未被T覆盖.设文档d中总标签数为|Td|,被T覆盖的标签数为|Td|,则T对文档集C的标签覆盖率为同理,设文档集C中所有结点路径的集合为P,通过采样得到的路径集合为PP,文档d中总路径数为|Pd|,被P覆盖的路径数为|Pd|,则P对文档集C的路径覆盖率为表7是在Wikipedia2008和Wikipedia2009ReferenceRuns(Wikipedia2009的一个子集,含24971个文档)文档集上,通过250篇抽样文档得到的路径和标签的覆盖率(只保留文档频率大于0.05的标签和路径[3-4]).从中可以看出,在Wikipedia2009referenceruns文档集上,抽样得到的路径的覆盖率只有6.44%,不难推断在Wikipedia2009上的路径覆盖率会更低.因此,检索和片段抽取时绝大部分结点的路径权重因缺失而被设置为1,此时,结点权重几乎起不到任何作用.Wikipedia20081.26K339.00M8.26M91.78Wikipedia2009referenceruns9.47K2991.89M1.41M74.39Wikipedia200866.21K5312.33M10.12M82.08Wikipedia2009referenceruns2.50M1844.27M0.27M6.44Page11结论7.当不使用结点的LATGT权重时,在referenceruns上检索XML元素并抽取片段(p72-LDKE-0101,0.5472)比在整个文档集Wikipedia2009上更好(p72-LDKE-1101,0.513).但为何在referenceruns上再使用结点LATGT权重(p72-LDKE-0111,0.527)不能提高片段检索的效果,原因还有待进一步分析.一个可能的解释是,referenceruns是利用BM25为每个查询检索出500个XML文档所组成的文档集合,在已经与查询相关的500个XML文档上检索XML元素并抽取片段,BM25EW并不合适.原因是此时很多统计信息与原始的200多万篇数据集已经不一致了,例如,由于各相关文档几乎都包含了查询词,导致查询词的IDF在这500篇文档上会很小.结论8.相比于其它参赛系统,基于结点权重模型的XML片段检索策略检索的片段,在指引用户进行“相关”文档的判断上具有明显优势.Recall和PA两个指标衡量“相关”文档判断的准确度及与标准答案的一致性,p72-LDKE-1111在指标Recall和PA两个指标上排名皆为第一.然而,在指引用户对“不相关”文档进行判断时,本文提出的方法却不具竞争力,即容易指引用户将“不相关”文档判断为“相关”文档.用户使用Web检索引擎或XML检索引擎的目的是找到“相关”的文档,返回的结果中更多的是检索引擎认为“相关”的文档.因此,如果片段能帮助用户正确判断“相关”的文档,可以有效地减轻用户阅读原文档的负担.表5中排名第二的P23[10]来自澳大利亚皇家墨尔本理工大学(RMITUniversity),他们选择使用由主办方在BM25基础上为每个查询主题检索出来的500篇文档(referenceruns),并且只从title和bdy结点中抽取片段.经去停用词、词干提取和句子拆分后,不同的查询词在句子中的共现越多,句子的得分就越高.最后根据句子得分的高低,依次从中抽取最多150,100,100,…个字符组成片段.其中的p23-expanded-40系统还采用Rocchio方法和排名前5的文档进行查询扩展,扩展的查询词为40个,而P23-baseline未使用查询扩展.通过与p23-baseline和p23-expanded-40的性能对比发现,通过人工方式过滤候选结点并且只考虑句子中查询词的共现情况,不论是否进行查询扩展,都无法达到P72-LDKE-1111的性能.这说明,集成了结点权重的窗口打分方法,以及利用结点权重检索候选结点的方法效果是明显的.当然,我们也有理由相信,通过句子划分、去停用词、词干提取等预处理,能够进一步改善本文所提出的方法.与本文方法类似,北京大学的p73-PKU_ICST_REF_11a[11]也是先检索XML结点,然后再从结点中抽取片段,并且也考虑了结点的权重信息.该系统利用BM25计算查询词在结点中的权重,并在集成结点权重后得到文档的分值.其中结点权重是利用INEX2010AdHoc任务中的相关结点和不相关结点,通过各结点的信息增益得到的.在句子划分后,利用查询扩展、句子中查询词的分布、句子中有意义词(SignificantWords)的比例、句子对文档标题的覆盖、句子所在结点的权重等指标衡量句子的得分,并选择得分较高的作为片段.评测结果发现,尽管p73-PKU_ICST_REF_11a系统采用了更为老练的技术和更加复杂的指标,但综合这些技术和指标后的性能仍然明显低于本文给出的方法.可以肯定的是,各项技术和指标的选择都是实验者精心设计的,是有利于提高而不是破坏系统性能的.由此也从另一个侧面说明,本文所提出的片段特征(可视为片段评价指标)、结点权重设置方法、BM25NW结点检索模型及基于窗口的片段评价策略性能是优越的.表5中排名第4的p20来自昆士兰科技大学(QueenslandUniversityofTechnology)[9],其中p20-QUTFirst300返回referenceruns中各文档的前300个字节,与本文可比性不大.而他们另一系统p20-QUTFocused(表5中排名第10),将文档中长度为300个字符的窗口作为候选片段,片段的分值为查询词的TFIDF值,并且忽略所有tables,images,templates,reference等结点的内容.显然,这种TFIDF的窗口计分策略及人工为各结点分配布尔权重的权重设置方法与本文的方法有较大的差距.由于INEX2011片段检索任务的主办方并未发布各查询主题与XML文档的真实相关性,因此在INEX2011给定的查询主题上较难重复该实验,这也是我们提交8组不同的参赛系统并进行自我对比的原因.此外,在INEX2011之前,尽管有XML片段检索的相关文献,但这些工作大都针对以数据为中心的XML文档集,其片段的特征与INEX2011片段检索任务有很大区别,因此本文也未将这些文献中提到的方法用于以文档为中心的XML片段检索任务中.如果需要重复该实验,一个可行的办法是,利用INEX2008或2009的AdHoc任务,该Page12任务发布了查询主题及文档的真实相关性,采用INEX2011片段检索任务类似的方式,由人工通过阅读片段判断XML文档的相关性,并与真实相关性进行对比,从而评价XML片段检索方法的性能.5相关工作5.1结点权重设置在Web页面检索中,尽管HTML文档的标签大都是用来描述文档的格式,但这些标签通常会被识别并加以区别对待[12],根据标签的语义来适当调整词项的权重能有效地改善检索效果.对于XML检索,不同的结点在XML文档中充当着不同的角色,应该具有不同的重要性,因此需要对结点的权重进行设置,并将该权重集成到XML检索模型中.标签的语义是描述XML结点角色的重要依据,识别标签语义并为之赋予一定的权重是结点权重设置的重要途径之一.然而,尽管在XML检索结果的计分和排序方面已有大量的研究成果,但很多研究工作忽略了XML结点的标签在检索中的作用.例如,Cohen等人[13]用XML结点中词项的频率作为结点排序的依据,但他们没有对结点在XML文档中所充当的角色加以区分.Buscaldi等人[14]试图用自然语言处理技术对标签进行消歧,以发现标签的真实语义,但这种方法过于依赖标签本身的拼写.实际上,对于像IEEE数据集中的XML文档,标签几乎全是单词的缩写,如“atl”,“st”等,不可能用这种方法直接识别出标签的真实含义.此外,即便正确识别出了标签的真实含义,当标签太多时,如何根据它们的重要性恰当设置结点的权重依然无法解决.采用人工方式对XML中标签设置权重是最直接的方式[1-2].Chowdhury等人[2]由人工在分析XML文档DTD的基础上给XML标签设置权重.他们将XML文档中的“前言(preamble)”结点的权重设置为“正文(body)”结点的3倍,而在“前言”结点中,“关键词(keywords)”结点的权重设置为“标题(title)”结点的5倍.XML文档的结构是设置结点权重的重要依据.XRANK系统[15]在进行XML关键词检索时,考虑了XML文档中的层次和超级连接等结构,但却忽视了结构与内容的关系.在IEEE数据集中,“摘要(abs)”结点和“章节(sec)”结点在结构层次上非常类似,并且不容易从遏制边(containmentedges)推导出哪个结点更重要.实际上,以文档为中心的XML文档的结构是比较松散的,因此结点的重要性更多的应该通过结点的内容而非结构来考察.因此,XRANK中对结点重要性的分析不适合以文档为中心的XML文档.一些基于BM25模型[8]的XML检索工作考虑了结点的标签或路径.Waterloo大学提出的BM25F[16]考虑了文档中不同区域(field)的权重.但是,用这种方法对数据集中数以千计的不同“域”进行训练是不现实的,因此该方法是只考虑非常有限的几个候选“域”,通过训练得到这些“域”的权重.在INEX2009中,BM25F只考虑了“title”和“body”两个域,而在他们后来的相关工作中[17],也只考虑了“bodyoftheelement”、“documenttitle”、“document’sabstract”和“ancestralsectiontitles”等几个域.与文献[16-17]中的工作类似,Robertson等人[18]也扩展了BM25模型,将不同“域”中的词项频率通过线性组合的方法进行集成,在线性组合的过程中考虑不同“域”的权重.该方法也只考虑了“title”、“body”和“anchor”几个有限的域,因为训练更多“域”的权重难度较大.由于具有不同标签的元素包含“相关”和“不相关”段落的可能性不同,Géry等人[19]通过概率模型计算标签的权重,并将这种权重用于BM25模型.这种方法存在的主要问题是,为了计算标签的权重,必须收集大量针对多个话题的相关性判断,用来计算标签与话题相关的概率.考虑到XML文档中不同结点的重要性不同,不同结点中的关键词项(surroundingkeywords)对其它词项的影响也不同,Beigbeder等人[20]根据词项到不同结点中关键词项的距离来重新设置词项的权重.例如,对于出现在“标题”结点中的某一关键词,其它结点中的词项距离该关键词越近,词项权重受到的影响越大.Trotman[21]提出用遗传算法来演化出文档中所有结点权重的最佳组合.各个结点的权重要么为0,要么为1.在TRECWSJ数据集上的实验显示,通过Trotman的方法所得到的权重,并没有明显改善BM25模型.与Trotman的实验结论不同的是,在INEXWikipedia数据集上,本文提出的结点权重模型能明显增强BM25的检索性能.5.2片段检索片段检索与面向查询的自动摘要,特别是基于抽取策略的自动摘要非常类似,不同之处在于片段检索不强调片段的连贯性,因此组成片段的各部分Page13内容不一定要是完整的句子.面向查询的自动摘要方面,研究成果非常丰富.开创性工作来自Mani等人[22]的SUMMAC系统.Ouyang等人[23]提出基于支持向量回归模型(Sup-portVectorRegression,SVR)的焦点摘要方法,并利用“伪”训练数据进行模型训练.Wan等人[24]采用Manifold排序(manifold-ranking)方法,在以句子/查询为结点,句子/查询间相似关系为边的图中,通过句子权重的迭代传播来给候选摘要句打分,后来的工作又考虑文档内句子间的关系和文档间句子间的关系,认为二者起到互相增益的作用[25].Zhao等人[26]利用条件最大熵模型(conditionalmaximumentropymodel)来完成焦点查询摘要任务,他们还将文档集中句子间关系、句子与词的关系构建成图,在不需要任何外部资源的情况下对用户查询进行扩展,采用基于图的方法选择摘要内容[27].李芳等人[28]将查询返回的文档集合表示为以文本、段落为结点的双层复杂网络结构,为了满足用户的个性化需求,除传统的摘要模式外,又设计了概括摘要、局部摘要、全局摘要和详细摘要这4种摘要模式.还有些学者,如Mori等人[29],直接利用自动问答系统构建面向查询的自动摘要系统.Tombros等人[30]的研究表明,对于面向查询的短摘要(可视为片段)抽取时,查询词项在片段中的出现对发现相关文档有积极的影响.相反,如果查询词项不出现在片段中,用户则很难判断片段所在的文档与查询的相关性.除在平面文本上进行片段检索外,针对Web页面的片段检索工作还包括文献[31-33].5.3XML片段检索在XML查询及XML片段检索方面,ArizonaStateUniversity大学的Chen、Liu和Huang等人做了大量卓有成效的工作[34-36].他们针对以数据为中心的XML文档(集),设计了基于查询的XML片段生成系统eXtract[36-37],并指出一个好的面向查询的XML片段除了长度受限外,还应该满足下面3个特征:具有自包含且有意义的信息,能凸显不同查询结果之间的区别,能够代表查询结果的主要内容.eXtract系统利用XML的DTD识别其中的实体[38],并且认为实体可以作为自包含且有意义的片段,而查询目标实体的键或ID可用于区分不同的查询结果.对于片段的代表性,eXtract系统则是利用实体名、实体属性名及实体属性值的统计特征,认为数量相对较多的实体更有代表性.eXtract系统及相关的研究工作主要针对的是以数据为中心的XML文档集,因此,Chen等人[34-36]所提出的很多有效方法并不适合以文档为中心的XML文档集.例如,尽管在IEEECS和Wikipedia数据集中也可以用ChenYi提出的方法分析实体,但得到的诸如章节(标签为sec)、段落(标签为p)之类的实体,其价值远不如在以数据为中心的XML文档中所进行的实体分析.此外,eXtract系统中XML片段所应满足的3个目标(或特征)也不完全适用于以文档为中心的XML片段检索.首先,片段的长度限制及检索结果中大量的文本信息使得片段很难自包含某个实体的内容;其次,片段检索的目的是为了让用户判断片段所在文档与查询的相关性,因此不需要过多考虑片段之间的差异,而应更关心片段能否反映文档与查询之间的关系;最后,片段对XML查询结果的代表性对以文档为中心的XML片段检索同样重要,但不适合用实体的数量来衡量,而更应该考虑片段的内容能否代表查询结果的主题.然而,在以文档为中心的XML片段检索方面的工作却比较鲜见.为促进该方面的研究,2011年INEX将XML片段检索作为评测的主要任务之一,评测用的数据集来自Wikipedia.由7个国家的10个机构参加了比赛,有效参赛系统共50个.Leal等人[10]首先用Rocchio方法对查询进行扩展,然后将文档中查询词出现密度较大的句子抽取出来,与文档的标题一起组成片段.Pal等人[39]将带格式的XML文档中的标签全部删除,将其转换为平面文本,然后将从文档起始位置开始的指定长度的内容作为片段.Wang等人[11]提出的方法共分4步:①用OkapiBM25模型计算XML结点的分值;②利用文档中各结点的分值、结点的重要性(权重)计算XML文档的分值,作为对以文档为单位的查询结果排序的依据,其中结点权重的计算利用了结点的信息增益,它与文献[19]类似,需要利用相关文档集合和不相关文档集合计算结点“相关”的概率;③利用伪反馈进行查询扩展;④根据句子包含的查询关键词的数量、句子包含的显著词(significantwords)的数量、句子包含文档标题中词项的数量、以句子所在结点的标签权重等,决定句子是否被抽取作为片段内容.6结论片段检索技术已广泛应用于Google、百度等搜索引擎,它为搜索引擎返回结果提供一个“窗口”,用Page14户可以透过该“窗口”了解检索结果的真实相关性,以决定是否进一步点击阅读.对于以文档为中心的XML数据,XML检索引擎返回的结点或文档中文本内容很丰富,有必要利用片段检索技术提高XML信息获取的效率.在XML片段检索时,从相对重要的结点中抽取的片段更有代表性,更有利于用户了解原文档或结点的真实内容.已有的关于结点重要性(结点权重)设置的方法大致可分为3类:①人工设置权重,该方法由人工在分析XML文档或其DTD基础上进行结点权重设置,工作量大、主观性强且容易出现误判;②利用XML文档的结构分析结点权重,该方法可用于以数据为中心的XML文档,但无法适应以文档为中心的XML文档;③统计XML检索结果,给“相关”元素所在的“域”设置更高的权重,该方法需要大量的训练数据,因此通常只能针对极少的几个“域”进行权重设置.本文提出的ATG模型是依据在一篇以文档为中心的XML文档中,越能高度概括全文主要内容的结点越重要.在具体计算过程中,ATG模型充分考虑XML结点的结构和内容特征,并且只需要用少量的训练数据来优化模型中的参数.相关性分析显示,在IEEECS和Wikipedia两种文档集上,ATG模型设置的权重和人工设置的权重都是显著相关的,并且在IEEECS上优化得到的参数也适用于Wikipedia文档集,体现了模型较好的鲁棒性.在INEX2008AdHoc检索任务上的实验结果还显示,采用ATG模型能显著提高XML的检索性能.针对以文档为中心的XML文档集进行片段检索是一项新的研究课题,相关的文献大都来自INEX2011论文集.本文提出XML片段应具有4个特征,并采用基于结点权重模型的XML片段检索策略,该策略首先利用结点权重模型ATG对XML文档集中的标签和路径设置权重,再将该权重用于BM25模型,得到BM25NW检索模型.在利用BM25NW检索出XML结点后,从重要性、信息含量、与查询的相关性等方面对结点中定长窗口进行评分,考察其是否适合作为片段内容返回.最后在保证信息冗余较小的条件下,选择得分较高的窗口内容组成片段返回给用户.基于结点权重模型的XML片段检索策略参与了INEX2011片段检索任务,证实了这一策略的有效性.进一步的研究工作包括:ATG模型中更合适的参数训练方法、片段抽取时的窗口大小设置,以及如何在大规模数据集上有效利用结点的ATGP(路径)权重.致谢由衷感谢论文评审专家和编辑对本文提所出的修改建议!
