Page1基于触发路径的主动规则集终止性分析熊伟吴烨张震吴秋云(国防科学技术大学电子科学与工程学院长沙410073)摘要为满足用户对网络服务的个性化、定制化和主动化需求,主动规则成为解决这些问题的关键技术.研究了在网络环境下基于规则的复杂应用中,大量规则集同时触发所带来的规则终止性问题,提出的分析方法确保主动规则能够有效运行,以提供更加灵活的主动服务.讨论了以静态分析方法为主的主动规则终止性分析相关工作,随后给出问题描述和相关形式化定义.分析了基于关联图的终止性分析方法的保守性,引入触发路径和有限触发环概念,提出了基于触发路径的两种终止情形分析方法,提高了规则集终止性分析的准确性,采用两阶段分析算法保证了分析效率.与相关分析方法的实验比较说明,文中方法能够更准确高效地检测主动规则集的终止性,并适应基于主动规则的其它应用.关键词主动规则;触发路径;有限触发环;终止性分析;关联图1引言随着以服务为形式的各种应用的发展,用户对网络服务的需求呈现个性化、定制化和主动化的趋势,主动规则成为解决这些问题的关键技术.例如,对等网络中,用户可以利用自定义的规则来进行网络学习和协作科研[1].网络中用户感兴趣的最新学习资料、实验数据和结果都可以实时地向用户发布.主动规则用来实现节点或超级节点片段数据的更新,特殊之处在于P2P网络中参与规则计算和执行的节点数量是非常庞大的,对定义的规则集进行准确的终止性分析,能够提高P2P网络的执行效率;在传感器网络中,主动规则作为一种新的查询处理模式,可以应用于安全管理、环境监控,当出现危险情况时进行应急处理[2].其与传统主动数据库应用的区别在于各个传感器节点数目众多且功能独立,规则终止性分析需要考虑其动态自组网络特点;商业数据库产品也纷纷推出规则管理器,以支持商品订购、位置服务等应用[3],通过用户自主定制的主动规则,随时提供满足用户需求的商品或服务.其特点是引入了位置信息和空间查询.从这些应用来看,主动规则的功能已经不再局限于传统的数据库完整性约束维护,而是逐渐用于满足更复杂和高级的商业应用.此外,这些支持规则技术的大规模复杂网络应用都具备类似特点,即常有大量的用户自定义规则集同时触发,网络结构也有可能发生动态变化,因此带来了规则并发行为的控制问题[4].每当应用及其相关数据状态发生改变时,都会进行规则处理.由于规则动作的执行也会产生新的状态,从而会引起一组规则集的相互级联触发,这种级联触发可能会一直延续下去,无法在有限步内终止.终止性(Termination)问题是一个不可判定的问题[5],规则处理行为的非结构化、不可预测性是主动规则设计的一大难题.为此,需要提供一些分析方法和工具,以使主动规则能够更加有效地运行.主动规则常采用事件驱动的ECA规则模型[6],即认为一个主动规则由事件(Event)、条件(Condition)、动作(Action)三部分组成,语义是:当规定的事件E发生且条件C成立时自动执行相应动作A,并且在动作执行过程中接着逐个检查下一个被级联触发的规则,直到执行完为止.为了使研究更具有普遍性,本文讨论的范围主要是ECA规则模型.首先综述以静态分析方法为主的主动规则终止性分析相关工作;随后给出问题描述和相关形式化定义;分析基于关联图的终止性分析方法的保守性,通过定义触发路径,证明基于触发路径的规则终止性相关定理,并给出触发路径构建算法、优先级判定算法和规则集终止性分析算法.最后与相关分析方法进行比较.本文的方法能够更有效地检测主动规则集的终止性,并且顾及规则执行的优先级,不依赖于具体的主动数据库实现模型,复合事件、复杂条件等都可以很方便地集成于该方法,能够适应基于主动规则的其它应用.2相关工作规则的终止性分析目前主要有两大类方法:静态分析方法和动态分析方法.静态分析方法关注于提出编译时保证规则集终止的充分条件,动态分析方法则通过规则执行仿真、动态分析方法等来获取运行时的终止性.动态分析也称运行时分析方法,需要知道数据库的内部状态,分析结果也只能根据测试过的内部数据库状态获得[5-7].由于该方法的高昂代价,在商业数据库中采取的是比较简单的实现方案,比如可以固定规则级联的深度或者指定规则执行的时间来控制规则终止,然而这种方法无疑会回滚掉许多本来可以终止的规则事务.本文主要关注静态分析,相关研究涉及面广.Ray等人[8]提出的使用软件规范和验证的自动工具,如符号模型检查方法,将规则转化为一种模型检查器的规范,然后使用模型检查器通过穷尽搜索检查终止性是否保持;有学者将主动规则转化为形式化逻辑进行推理分析[9].Baralis等人[10]采用代数方法对转化的规则进行更强的终止性分析,但是没有考虑触发条件的影响.另外Bailey等人使用抽象解释技术,基于抽象数据库状态来对主动规则的执行进行仿真,如果规则在抽象状态上终止,则真实的数据库状态也可以保证终止[5].近几年,Petri网理论也被引入到规则终止性分析方法中.Li介绍了将Petri网划分为多个子网负责ECA规则模型的各个部分,分别对应于激活和触发状态,终止性分析是基于Petri网的可达性理论[11];有学者对于给定任意规则集,构造了改进的谓词/变迁网,再根据该Petri网自动检测出循环规则集、不一致规则集和矛盾规则集[9];Li等人[11]基于着色Petri网对主动规则行为建模,采用Petri网理论中的关联矩阵来检查规Page3则集中是否存在循环路径,但没有考虑规则的优先级,Baha-hamed等人对该方法进行了扩展以支持规则优先级[4].上述方法都是通过转化的策略,将主动规则转化到另一个技术比较成熟的领域来解决终止性分析问题.这些方法或者在转化语义上实现复杂,或者不够直观.大部分静态分析方法研究以Aiken等人[12]定义的触发图概念为基础进行扩展和改进.Baralis等人[7]通过引入激活图改善了触发图的条件分析能力.有学者提出精化触发图通过对触发图中触发公式的分析,可以得出触发图继续归约的算法[9].精化触发图方法的改进方法如Lee等人[13]提出的路径删除技术和解圈技术,路径删除技术解决了只删除一条边的分析方法的不足,综合考虑规则执行路径,同时考虑了可更新谓词/属性对规则终止性的影响,采用节点分割方法删除触发图中的规则路径,规则归约中可以删除整条路径而不是一个节点.解圈技术对于触发图中执行次数少于k次的圈,构造一个等价的复制节点的触发图,这样就将这个k圈“解开”并进行触发图归约.关于如何计算圈的k值,有学者提出一种基于约束的方法计算圈的最大迭代次数[9].基于精化触发图,Couchot[14]提出了一系列的改进方法,通过将原始的触发图进行分割,可以删除被无限次触发的规则节点,而且该节点的条件也可以是恒真的,从而检测出新的终止情况;也提出了具有复合事件的主动规则的静态终止性分析算法,扩展了触发图,触发图节点不仅仅包括规则,还包括事件;又提出复合路径的概念,采用处理规则的路径最大序M替换传统表示圈的方法.该方法对于合取事件和依次事件的主动规则尤其有效.针对规则执行优先级问题,Couchot提出一种基于触发规则及路径的优先级的分析方法.左万利等人[15]引入惰化图,提出了基于关联图的终止性分析算法,但该算法分析结果仍然存在保守性.Xiong等人[16]提出为有效活化路径建立条件公式的思想,在此基础上给出处理一个新的主动规则终止性判定方法.郝忠孝等人[17]提出了判断规则集活化路径的同步无限次执行问题的方法,来分析终止性.熊伟等人[9]采用标注事件图扩展Couchot的方法并应用于空间数据库主动规则终止性分析.3问题描述定义1.规则集R={ri|i=1,2,…,n}是所有规则ri的有限集合,规则ri是形如〈Evt,Cnd,Act〉的三元组,其中Evt是事件,Cnd是条件,Act是动作.定义2.对于任意的ri∈R,pri(ri)是规则ri的优先级,它是一个整数.对任意的ri,rj∈R,i≠j,若pri(ri)>pri(rj),则ri优先rj执行;反之,则rj优先ri执行.尽管分析方法不同,规则执行模型中的耦合模式也不一样,但是主动规则的处理算法是相同的,规则处理算法Rule_Process的自然语言描述如下:1.无规则被触发则退出;2.令被触发规则的集合为RT,rj∈RT,j≠i,若pri(ri)>pri(rj),则选择ri;3.从触发规则实例集中删除选择的规则实例;4.计算ri的条件,若条件为真,则执行ri的动作;5.转步1.基于规则执行模型,相关学者提出以下定义.定义3.规则集R的触发图(triggeringgraph)为TG,它是由〈R,TE〉构成的有向图[12].图中每个结点表示规则ri∈R,有向边〈ri,rj〉∈TE为触发边,表示规则ri的执行产生某事件,该事件可能触发规则rj.在规则的触发图中,触发边用带箭头的实线表示.如果一个规则的执行会触发自身,则称之为自触发规则.定义4.规则集R的活化图(activationgraph)为AG,它是由〈R,AE〉构成的有向图.图中每个结点表示规则ri∈R,有向边〈ri,rj〉∈AE为活化边,表示规则ri的执行可能会使规则rj的条件为真[7].在规则的活化图中,活化边用带箭头的虚线表示.如果一个规则的执行会使自身的条件为真,则称之为自活化规则.定义5.规则集R的惰化图(deactivationgraph)为DG,它是由〈R,DE〉构成的有向图.图中每个结点表示规则ri∈R,有向边〈ri,rj〉∈DE为惰化边,表示规则ri的执行一定使规则rj的条件为假[15].在规则的惰化图中,惰化边用带箭头的双实线表示.如果一个规则的执行使自身的条件为假,则称之为自惰化规则.定义6.令规则集R的触发图为TG=〈R,TE〉,活化图为AG=〈R,AE〉,惰化图为DG=〈R,DE〉,则R的关联图(relationshipgraph)为RG=〈R,E〉,其中R为所有规则结点的集合,E=TE∪AE∪DE是所有边的集合[15].定义7.规则r由规则集R直接触发可达是Page4指,r∈R,r触发r.规则r由规则集R触发可达是指,r由R直接触发可达,或r,r触发r且r由R触发可达.令ri,rj∈R,由规则ri到规则rj的触发可达集tr(ri,rj)是规则集R的一个子集,其中包含rj但不包含ri,它满足如下特性:(1)使用规则集tr(ri,rj),由ri触发可达rj;(2)tr(ri,rj)是最小的,即删除tr(ri,rj)中的任一规则,性质(1)不再成立.由规则ri到规则rj的触发可达集可能不止一个,这些可达集的集合记为Str(ri,rj).定义8.触发可达集的tr(ri,rj)的制约优先级是指tr(ri,rj)中所有规则的最小优先级.触发可达集集合Str(ri,rj)中的最大和最小制约优先级分别记为pmax定义9.令规则集R的触发图为TG=〈R,TE〉,若r1,r2,…,rk∈R,〈r1,r2〉∈TE,〈r2,r3〉∈TE,…,〈rk,r1〉∈TE,则称ρ=(r1,r2,…,rk)为TG的一个触发环.触发环ρ上所有规则的集合记为Cρ.定义10.令ρ为一个触发环,rCρ,r由Cρ触发可达,rc∈Cρ,tr(rc,r)≠且tr(rc,r)∩Cρ=,则称rc为r与ρ的交点规则.即r与ρ的交点规则rc位于触发环ρ上,且由rc出发不经过ρ上的其它规则触发可达r.基于上述定义,通过分析关联图的特征,可以对规则集终止性进行判定.如:基于触发图和活化图、触发环和活化环是主动规则集呈现非终止行为的必要条件[7].即对于任意ri∈R,若不存在与之相连的触发边或活化边,则ri不会执行多次,连同其相关边可在关联图中去掉,这个步骤即规则集的基本归约算法Basic_Reduce,如果规则集能够归约为空,那么表明其行为能够终止.4基于触发路径的终止性分析算法4.1关联图算法保守性分析文献[15]提出了基于关联图的终止性分析算法,但对禁止触发环的定义中条件不够充分,没有明确惰化规则.本文在此基础上进行改进,并分析该算法的保守性.定义11.令ρ为不可归约集R上的一个触发环,ro∈Cρ,〈ro,ro〉∈DE,rt∈Cρ,〈rt,ro〉∈TE,〈rt,ro〉AE,即ro为环上的一个自惰化规则,rt为环上触发但不活化ro的规则.ra∈R,〈ra,ro〉∈AE,tr(ro,ra)≠即ra由ro触发可达,当满足以下条件之一成立时,称ro为被禁止的规则,并称ρ为被禁止的触发环:(1)ra∈Cρ,rd∈Cρ,〈rd,ro〉∈DE,使ρ呈(ro,…,ra,…,rd,…,rt)形式;(2)raCρ,令rc为ra与ρ的交点规则,rd∈Cρ,〈rd,ro〉∈DE,使触发环ρ的形式为(ro,…,rc,…,rd,…,rt),且pmax(3)raCρ,令rc为ra与ρ的交点规则,pmaxc-t且pmaxpmin定理1.对于不可归约集R,如果由于拓扑结构和优先级别的设置使得R上的所有触发环都被禁止,则仅由R确定的规则集不会呈现非终止行为[15].相应的终止性分析算法如下.算法1.基于关联图的终止性分析算法Termination_RG.输入:关联图G=〈R,E〉输出:非被禁止的触发环及其可达的边beginforeachρi∈G标记为非被禁止;foreachρi∈Gdoforall没被禁止的ρireturn(ρi是没被禁止的触发环);end例1.考虑如图1所示的规则集R,该规则集不可用基本归约算法归约,是不可归约集.Page5R包含3个触发环:ρ1=(r1,r2,r3,r4,r5),ρ2=(r6,r7,r8,r9,r10,r11),ρ3=(r19,r15,r16,r17,r18).令ri∈R,pri(ri)=i,且ri是自惰化规则,则对ρ1:ro=r1,ra=r5,rt=r5,rd=r4,ρ1呈(ro,…,ra,…,rd,…,rt)形式,满足定义11的条件(1),r1是被禁止的规则,ρ1是被禁止的触发环;对ρ2:ro=r6,ra=r12,rt=r11,rc=r7是ra与ρ2的交点规则,ρ2呈(ro,…,rc,…,rd,…,rt)形式,且Str(r7,r9)={{r8,r9}},pmaxc-a=pminpmin禁止的规则,ρ2是被禁止的触发环;对ρ3:ro=r19,ra=r13,rt=r18,rc=r15是ra与ρ3的交点规则,Str(r15,r13)={{r14,r13}},pmaxStr(r15,r18)={{r16,r17,r18}},pminc-a<pminpmax禁止的规则,ρ3是被禁止的触发环.综上,根据算法1分析可知R是可终止的规则集.根据重新定义的有限触发环,基于关联图的终止性分析算法分析结果比基本归约算法更精确,但仍存在一定的保守性.即由该算法分析可终止的规则集一定不存在非终止行为,然而,存在非有限触发环的规则集也有可能终止.如例2所示.pri(ri)=i,其关联图如图2所示.例2.令规则集R={r1,r2,r3,r4,r5,r6},该规则集是不可归约集,且不满足文献[15]中禁止触发环的任一条件,故由基于关联图的终止性分析修正算法不能判定R是非终止的.但是,我们按以下步骤分析:r3的执行活化r1并活化触发r4;r4的执行同时活化触发r5和r6;由于pri(r6)>pri(r5),先执行r6,r6的执行惰化r1;再执行r5,r5的执行触发r1,此时r1条件为假不会执行.因此,规则r1不会多次执行,该规则集R是可以终止的.因此,在基于关联图的修正算法基础上,为了提高规则集终止性分析的精确性,引入触发路径,并提出基于触发路径的主动规则集终止性分析算法.4.2触发路径相关定义为了表达规则集中两个规则之间的触发关系,本文提出了触发路径等概念,并提出触发路径构建算法和触发路径的优先级判定算法.定义12.令规则集R={r1,r2,…,rN},若〈ri,ri+1〉∈TE,〈ri+1,ri+2〉∈TE,…,〈rj-1,rj〉∈TE,i≠j,则存在一条ri到rj的触发路径tpath(ri,rj)=(ri,ri+1,ri+2,…,rj-1,rj).规则ri到rj的触发路径可能不止一条,称这些路径的集合为ri到rj的触发路径集,记为Stpath(ri,rj).若触发路径tpath(ri,rj)的所有规则顶点都不重复出现,则称该触发路径为简单触发路径,否则称复合触发路径.显然,复合触发路径构成触发环.定义13.考虑规则集R={r1,r2,…,rN},若:tpath(rm,rn)=(rm,rm+1,…,rn-1,rn),m,n<N,tpath(ri,rj)=(ri,…,rm,rm+1,…,rn-1,rn,…,rj),i,j<N,则称触发路径tpath(rm,rn)包含于触发路径tpath(ri,rj),记为tpath(rm,rn)tpath(ri,rj).若tpath(rm,rn)tpath(ri,rj),tpath(ri,rj)tpath(rm,rn),则称触发路径tpath(rm,rn)和触发路径tpath(ri,rj)完全重合.记为tpath(rm,rn)=tpath(ri,rj).定义14.考虑规则集R={r1,r2,…,rN},若:tpath(ri,rj)=(ri,ri+1,…,rs,rm,…,rj),tpath(ri,rk)=(ri,ri+1,…,rs,rn…,rk),即这两条路径自rs之前的路径相同,rs之后的路径不同,记为tpath(ri,rj)∧path(ri,rk)=(ri,…,rs),则称rs为触发路径tpath(ri,rj)和tpath(ri,rk)的分离点.若rs=ri,则称tpath(ri,rj)和tpath(ri,rk)分离;若rs≠ri,则称tpath(ri,rj)和tpath(ri,rk)部分分离.令规则集R的触发图为TG,则由vo到vt的触发路径tpath(ro,rt)可由以下算法得出.算法2.触发路径构建算法Build_TP.输入:触发图TG,出发规则ro,目标规则rt输出:触发路径集Lbeginlo··=ro;visited[ro]··=TRUE;ifro=rtthenaddlotoL;w··=FIRSTADJ(TG,ro);//找邻接点Page6end定理2.算法2是正确的,可终止的,时间复杂度为O(n2).其中n为触发图节点个数.证明.正确性.该算法从规则ro出发进行深度优先遍历,当访问到rt时找到一条触发路径并存储,存储的路径满足定义12,而且由于是遍历,所以所有路径都会被找到,故算法是正确的.可终止性.该算法的主要步骤是由一个规则出发进行深度优先遍历,由于规则集有限,算法是可终止的.时间复杂度.遍历过程的实质是对每个顶点查找其邻接点,耗费的时间取决于所采用的存储结构.仍采用邻接矩阵作为触发图的存储结构,找邻接点所需时间为O(n2),其中n为触发图节点个数.综上,算法2是正确的,可终止的,其时间复杂度为O(n2).定义15.考虑规则集R={r1,r2,…,rN},存在ro至ri和rj的触发路径tpath(ro,ri)和tpath(ro,rj),i≠j,当满足下列条件之一时,称tpath(ro,ri)的优先级高于tpath(ro,rj),记为p(tpath(ro,ri))>p(tpath(ro,rj)):(1)tpath(ro,ri)tpath(ro,rj),即tpath(ro,ri)包含于tpath(ro,rj);(2)若tpath(ro,ri)和tpath(ro,rj)分离,pmaxo-i;pmin(3)若触发路径tpath(ro,ri)和tpath(ro,rj)部分分离,它们的分离点为rs,且p(tpath(rs,ri))>p(tpath(rs,rj)).定理3.令规则ro至ri和rj的触发路径集为S1=Stpath(ro,ri)和S2=Stpath(ro,rj),若tpath(ro,ri)∈S1,tpath(ro,rj)∈S2,有p(tpath(ro,ri))>p(tpath(ro,rj)),则ri将优先于rj被ro触发执行,记为ptr(ro,ri)>ptr(ro,rj).证明.首先证明若p(tpath(ro,ri))>p(tpath(ro,rj)),则在只考虑这两条触发路径的情况下,ri优先于rj被ro触发执行.按定义4分3种情况考虑:(1)tpath(ro,ri)tpath(ro,rj),则rj的触发依(2)pmax赖于ri的执行,故ri优先于rj被ro触发执行;执行;(3)由于分离点为rs,ri和rj的触发都依赖于rs的执行,又由于p(tpath(rs,ri))>p(tpath(rs,rj)),ri优先于rj被rs触发执行,故ri优先于rj被ro触发执行.然后用反证法.假设rj优先于ri被ro触发,则存在两条路径tpath(ro,ri)∈S1和tpath(ro,rj)∈S2,p(tpath(ro,rj))>p(tpath(ro,ri)),这与条件矛盾,故假设不成立.综上,若tpath(ro,ri)∈S1,tpath(ro,rj)∈S2,有p(tpath(ro,ri))>p(tpath(ro,rj)),则ri将优先于rj被ro触发.需要说明的是,对于包含触发环的复合路径,假设复合路径为tpath(r1,…,ri,rj,r1…rn),则由于tpath(r1,…,ri,rj,r1)tpath(r1,…,ri,rj,r1…rn),所以ptr(r1,…,ri,rj,r1)>ptr(r1,…,ri,rj,r1,…,rn).因此在终止性分析时只需要考虑其中触发环部分即可,对于含多个触发环的复合路径,要一一判断.算法3.触发路径的优先级判定算法Deter-mination_Priority.输入:G=〈R,E〉,ro,ri,rj输出:TRUE表示规则ri优先rj被ro触发;FALSE表beginS1··=0;S2··=0;Build_TP(TG,ro,ri,S1);Build_TP(TG,ro,rj,S2);result··=TRUE;{foreachp(tpath(ro,ri))∈S1}return(result);end根据定理3可知该算法是正确的.算法主要步骤是分别从两个触发路径集中取触发路径进行对比,由于触发路径集有限,所以触发路径的个数也是有限的,故该算法可以终止.设n为触发环中规则的Page7个数,构造触发路径集的时间复杂性为O(n2),比较触发路径优先级的时间复杂性为O(n2),故该算法的时间复杂性为O(n2).4.3基于触发路径主动规则集终止性分析定义16.考虑不可归约集R,令ρ为R上的一个触发环,ro∈Cρ,rt∈Cρ,〈rt,ro〉∈TE,〈rt,ro〉AE,即rt为环上触发但不活化ro的规则;ra∈R,〈ra,ro〉∈AE,〈ra,ro〉TE,tr(ro,ra)≠即ra由ro触发可达;rd∈R,〈rd,ro〉∈DE,tr(ro,rd)≠即rd由ro触发可达.当满足下列条件之一时,称ro为有限规则,并称ρ为有限触发环:o-a<pri(ro).pmax环,如果ρ是有限触发环,则R具有可终止性.(1)ptr(ro,ra)>ptr(ro,rd)>ptr(ro,rt);(2)ptr(ro,rd)>ptr(ro,rt)>ptr(ro,ra),且定理4.令ρ为不可归约集R上唯一的触发证明.分情况证明:(1)由于ptr(ro,ra)>ptr(ro,rd)>ptr(ro,rt),故ra优先于rd被ro触发执行,rd优先于rt被ro触发执行,所以ro先被活化,再被惰化,再被触发,ro不会多次执行,故则R具有可终止性.(2)由于ptr(ro,rd)>ptr(ro,rt)>ptr(ro,ra),故rd优先于rt被ro触发执行,rt优先于ra被ro触发执行,ro先被惰化,再被触发,再被活化;又由于o-a<pri(ro),ro会在被活化之前选择执行;而此时pmaxro条件为假,不会多次执行,故R具有可终止性.综上,如果ρ是有限触发环,R具有可终止性.定理5.对于不可归约集R,如果由于拓扑结构和优先级别的设置使得R上的所有触发环是有限的,则仅由R确定的规则集不会呈现非终止行为.证明.反证法.假定R呈非终止行为,对于R上的任一触发环ρi,令ri为ρi上代表制约优先级的规则.由于ρi是有限的,其上规则的无限执行只能依赖于另外的呈非终止行为的触发环,且另外的触发环必须具有相对较低的制约优先级.令ρj就是这样一个触发环,rj是ρj上代表其制约优先级的规则,那么有pri(rj)<pri(ri).同理,ρj上规则的无限执行依赖于另外的呈非终止行为且具有相对较低制约优先级别的触发环,令ρk为这样一个触发环,rk为ρk上代表其制约优先级的规则,则有pri(rk)<pri(rj).依次下去,由于R中的规则个数有限,根据上述制约优先级之间的单向依赖关系,必在有限步骤之后找到某一触发环ρt,该触发环没有可以依赖的触发环,那么ρt必须是呈非终止行为才能使规则集R非终止,这与所有触发环是有限的相矛盾.证毕.算法4.基于触发路径的终止性分析算法Termination_TP.输入:G=〈R,E〉输出:触发环及其可达的边;NULL表示规则集R一定beginG··=Basic_Reduce(G);if(G=NULL)thenreturn(NULL);elseend由定理4可知该算法是正确的.由于规则集中的规则个数有限,若n为触发环中规则的个数,该算法是可终止的.该算法分两个部分:第一部分调用基本归约算法,其时间复杂度为O(n2);第二部分对每个满足条件的规则调用触发路径优先级判定算法,其时间复杂度为O(n3).故算法的总体时间复杂度为O(n3).由于该算法时间复杂度较高,因此可以采用两阶段算法加以改进,第一阶段采用基本归约算法和关联图分析算法,无法得到终止性结论的规则集才会进入第二阶段,从而降低了规则集的规模,减少了分析时间.算法5.两阶段终止性分析算法Termination_2P.输入:G=〈R,E〉输出:触发环及其可达的边;NULL表示规则集R一定Page8beginG··=Basic_Reduce(G);If(G=NULL)thenreturn(NULL);elseend5与相关算法的比较下面将基于触发路径的终止性分析算法与相关算法进行比较.例3.对于例2中的规则集R={r1,r2,r3,r4,r5,r6},pri(ri)=i,其关联图如图2所示.应用文献[5]的方法,通过抽象数据库状态来模拟规则的处理,需要列出规则处理前所有的初始触发规则.在例2中,数据库事务可以在规则处理前触发每条规则任意次数目的出现,如ρ=(r1,r2,r3,r4,r5,r1)中r1的两次出现和r2的一次出现,无法准确列出初始触发规则,该方法也无法保证规则集的终止.应用文献[7]的方法,触发环ρ=(r1,r2,r3,r4,r5,r1)中任何一条边无法移除,因此无法得到终止的结论.应用文献[13]的方法,由Lee给出的算法,触发环ρ=(r1,r2,r3,r4,r5,r1)的激活公式只能包含不被规则动作更新的属性,或者是可以从触发图中删除的规则所更新的属性.如果环中任一规则包含被规则r6所更新的属性,则解圈方法无法保证终止性.应用文献[17]的方法,图2中存在一个触发环ρ=(r1,r2,r3,r4,r5,r1)和一个活化环ρ=(r1,r2,r3,r1),由于ρ中每个规则都处于触发环ρ中,或者由ρ可达,并且每次自惰化后均可再次被活化,因此判定此规则集具有不可终止性.由图2可知,该规则集是不可归约集,且其触发环不满足文献[15]中关于被禁止的触发环的定义,故由基于关联图的终止性分析算法不能判定R可终止.在时间复杂度方面,基于触发路径的终止性分析算法的时间复杂度为O(n3),基于关联图的终止性分析算法的时间复杂度为O(n2),因此基于触发路径的终止性分析算法比基于关联图的终止性分析算法在时间复杂度高.然而,在大规模的网络环境中,触发路径方法的贡献在于辅助应用开发人员设计出更加合理有效的规则集,虽然规则分析精度的提高带来分析效率的降低,但不会影响到应用本身性能,而是提高了应用设计的灵活性.对于使用规则的用户来说,规则集已经成为了应用系统的一部分,复杂度较高的分析在设计阶段已经完成了,即使是在传感器网络这样规则集会出现动态变化的环境,采用两阶段算法也可以提高分析效率.在分析结果的精确性方面,基于触发路径的终止性分析算法比基于关联图的终止性分析算法的精确性更高.文献[15]中的定义禁止触发环的条件(1)和(2)是本文中有限触发环定义条件(1)的子集,其条件(3)是本文定义条件(2)的子集,因此被禁止的环一定是有限环,即由基于关联图的算法判定可终止的规则集,用基于触发路径的算法分析也一定是是可终止的.而对于用基于关联图的算法分析不一定终止的规则集,用基于触发路径的算法有可能判定可终止.对于例2,应用本文提出的基于触发路径的终止性分析方法进行分析,规则r1满足本文有限触发环定义,是有限规则,故触发环ρ=(r1,r2,r3,r4,r5,r1)是有限环,由基于触发路径的分析算法可知规则集R是可终止的规则集.因此,基于触发路径的终止性分析算法比上述其它算法的分析结果更精确,进一步提高了规则集终止性分析的精确性.6实验分析以下通过实验分析Basic_Reduce、Termination_RG、Termination_TP、Termination_2P4个算法的准确性和性能.性能测试中,Termination_RG、Termination_TP算法均先执行Basic_Reduce算法过滤规则集.实验环境设置为:IntelPentium双核CPU主频2.6GHz,内存2048MB,算法采用C语言实现,操作系统为Windows2003Server.实验数据采用随机生成规则节点数,规则节点之间随机生成触发边、活化边或惰化边(根据实际应用,惰化边与触发边、活化边不同时出现),各种边的方向随机,共生成1000组.测试生成的规则集1000组中能够得到终止性结论的百分比以及得到结果所需要的时间如图3所示.Page9根据实验结果,Basic_Reduce算法得到终止性结论的百分比最低,依次是Termination_RG和Termination_TP、Termination_2P算法(Termination_2P主要提高Termination_TP分析效率,不改变其结论),表明触发路径分析方法提高了规则集终止性分析的准确性.从执行时间来看,如果不采用两阶段分析方法,Termination_TP分析时间超出Termination_RG很多,采用两阶段算法后,在700个规则节点规模内,Termination_2P分析时间几乎接近Termination_RG算法.考虑到P2P、传感器网络中应用具有多用户并发、规则集规模大、网络动态变化等特点,进一步基于Loadrunner8.0软件仿真测试规则分析方法在多用户查询并发时负载情况.实验通过1000次随机增加和删除规则节点,分别考察规则集基数为500时,分析方法随用户访问数变化的负载情况以及用户访问数为60时,分析方法随规则集基数变化时的负载情况.实验结果如图4所示.根据实验结果,由于规则分析时间相对于仿真设置的多用户查询访问时间消耗很少,因此,3种方法总体负载情况相差不大.规则集基数为500时,随用户访问数增加,系统平均响应时间也增加,Termination_TP平均响应时间最长,Termination_RG和Termination_2P算法平均响应时间几乎相同.表明多用户访问时,即使规则集发生动态变化,规则分析方法性能差异也不大.对于用户访问数一定的情况,随着规则集数目增加,Termination_RG算法性能最为稳定,平均响应时间呈线性增长,但增长幅度很小,表明在规则动态分析中,如果多用户并发访问中的网络延迟、任务调度等时间消耗远超过规则分析时间时,规则数目增加与分析时间基本无关.而Termination_TP和Termination_2P算法性能随规则集数目增加而呈下降趋势,并且中间出现动荡,可能是因为随机增加和删除规则节点产生的性能差异,但Termination_2P算法总体性能好于Termination_TP,而接近于Termination_RG.7结语本文分析了触发环中规则不会多次执行的两种情形:(1)先被活化,再被惰化,最后被触发;(2)先被惰化,再被触发,再被活化.基于此原则,引入了触发路径和有限触发环的概念,根据触发路径优先级判断规则触发环是否是有限触发环,提出了基于触发路径的终止性分析算法,提高了分析结果的精确性.本文算法已经采用C语言实现,并将其应用于开源数据库Ingres的规则管理器.本文方法与基于关联图的规则终止性分析算法相比时间复杂度略高,但采用第一阶段进行基本归约和关联图分析,第二阶段进行触发路径分析后,能够保证分析效率不会降低太多,并且提高了分Page10析的准确性.实验结果表明,基于触发路径的主动规则集终止性分析算法结合两阶段分析策略后,能够很好地适应规则集动态变化和多用户并发的负载情况.下一步的工作是将复合事件和复杂条件集成到该分析方法中,进一步加强本文算法的适应能力.致谢感谢墨西哥Cinvestav-IPNXiaoouLi教授提供了相关参考资料!
