Page1求解SAT问题的多智能体社会进化算法潘晓英1)焦李成2)刘芳3)1)(西安邮电大学计算机学院西安710121)3)(西安电子科技大学计算机学院西安710071)2)(西安电子科技大学智能感知与图像理解教育部重点实验室西安710071)摘要基于Agent社会合作机制以及智能体对环境的感知和反作用能力提出了一种新的求解SAT问题的多智能体社会进化方法MASEA(Multi-AgentSocialEvolutionaryAlgorithm).该方法在多智能体进化思想的基础上,引入人类社会“关系网模型”的概念来建立智能体所能感知的邻域环境;同时在保留原有的竞争算子和自学习算子前提下,根据智能体具有竞争协作的特性,设计了一个新的算子———协作算子来共同完成整个进化过程.以标准SATLIB库中变量个数从20~250的3700个不同规模的标准SAT问题以及基于RB模型所产生的随机实例对MASEA的性能进行了全面的测试,并与其他一些具有较高性能算法的结果进行了比较.结果表明,MASEA具有更高的成功率和更高的运算效率.关键词多智能体系统;进化算法;关系网模型;SAT问题;协作算子1引言Form)范式的可满足性问题(thesatisfiabilityproblem,简称SAT)是计算机科学中非常重要的核心问题,许多研究方向如人工智能、模型检测、数据库检索、VLSI(VeryLargeScaleIntegration)设计等中的许命题逻辑公式的CNF(ConjunctiveNormalPage2多问题都是转为SAT问题来求解的.SAT的问题已被证明是NP难解问题,目前解决该问题的方法主要有完备的方法和不完备的方法两大类.完备方法的优点是保证能正确地判断SAT问题的可满足性,但其计算效率很低,不适用于求解大规模的SAT问题.不完备方法的优点是求解时间比完备的方法快得多,但在很少数的情况下不能正确地判断SAT问题的可满足性.这类方法虽然不能保证一定找到解,但是它们利用问题的特点进行启发式搜索,一般情况下能够快速找到解,如WalkSAT[1]、拟人退火算法[2]、基于GA的算法[3-4],调查传播算法[5],组织进化算法[6]以及量子免疫克隆算法[7]等.这些算法大都采用了对真值赋值的逐步改进方法,使其真值赋值与SAT问题中的冲突子句数目降为0,从而达到其可满足性的判断.在这些不完备的算法当中,以进化算法来处理约束满足问题已经成为当今的研究热点[8-9].除了以上这些方法之外,研究者还提出了针对约束满足问题的多种有效算法,例如局部搜索算法[10]、粗粒度弧相容算法[11]、置信传播算法[12]、基于环切割算法[13]等,这些算法都在一定程度上解决了约束满足问题的求解难题,取得了较好的应用效果.分布式人工智能中基于智能体的计算已经应用于计算机科学的各个领域,文献[14]设计了一种基于能量的多智能体模型,求解了高达7000个皇后问题;文献[15]将多智能体系统和遗传算法相结合,成功地求解了二元约束满足问题,并证明了智能体与进化算法的结合对于解决NP难问题的优越性.通过分析发现,当智能体以进化的方式来解决二元约束满足问题时,主要依赖于所设计的进化算子,其中竞争算子起到了绝对支配的作用,而该算子是建立在智能体及其邻域之上的,因此邻域的选择就显得格外重要.本文在多智能体遗传算法的基础上,根据多智能体系统中多智能体的生存及其合作机理,引入人类社会“关系网模型”的思想[16]来建立智能体所能感知的邻域环境,同时在保留原有竞争算子和自学习算子的基础上,根据智能体具有竞争协作的特性设计了一个新的算子———协作算子来共同完成进化过程.实验结果表明,这种方式能有效地消除进化过程中的一些无效操作,尽快找到满足所有子句的真值指派.2SAT问题及其表示SAT问题的基本组成要素:(1)文字(literal):m个布尔变量的集合:U={x1,x2,…,xm},每个布尔变量xi∈U,xi和xi(xi的非)分别称为正文字和反文字.(2)子句(clause):n个子句的集合为C={c1,c2,…,cn},每个子句ci由若干文字通过析取运算符(∨)连接而成,子句中文字的个数称子句的长度,如ci=x1∨x3∨x8的长度为3.(3)真值指派:是一个函数t:U→{T,F},若U的布尔变量个数为m,每个真值指派为一m元布尔向量.(4)合取范式CNF:F=c1∧c2∧…∧cn,其中ci为子句,∧为合取运算符.范式F在一真值指派t下为真当且仅当每个子句ci在真值指派t下为真.SAT问题就是确定是否存在一真值指派t,使得布尔变量集U上的CNF范式F为真,若存在一真值指派t使F为真,则称SAT问题可解决.F中的每个子句的长度都为l,则称l-SAT问题.3求解SAT问题的多智能体社会进化算法在该算法中,我们沿袭了多智能体进化算法的整体思想,将进化算法中的个体看作是一些具有局部感知、竞争协作以及自学习能力的智能体,通过智能体之间以及智能体与环境之间的相互作用达到解决问题的目的[17].多智能体进化的基本思想和框架如图1所示.在此基础上,我们将针对SAT问题设计符合问题特征的智能体、生存环境、局部感知环境Page3及智能体行为,以期得到较理想的进化结果,提出了求解SAT问题的多智能体社会进化算法.3.1智能体定义在求解SAT问题中,智能体即为问题的解,也就是能满足所有合取范式的真值指派,因此,用于求解SAT问题的智能体定义为:有指派空间S中的一个指派.它的能量等于定义1.智能体(CSAgent),α,是SAT问题所其中χ(α,ci)=0,子句ci在真值指派α下为假,wi为权重,表示在当前搜索中某子句满足的难度,初始赋值为wi=1,每进化一代按式(2)更新一次wi.其中x为当前代中能量最高的智能体,该更新机制会增加x中未满足子句的权重,也就是说,下一代的搜索会更加关注当前代最优智能体中未满足的子句.这种定义方式避免了指派中某一变量一直重复翻转的可能,可以有效地防止算法陷入局部最优.用于解决SAT问题的智能体目的就是尽可能地增大自身的能量,而且它可以采用一定的行为来达到它的目的.另外,当用进化算法解决实际问题时,需要对智能体进行编码,BitStringRepresentation[8]是一种非常简单且有效的编码方式,即分别以变量取值的一个序列来直接表示问题的解.根据以上分析,用于解决SAT问题的智能体不但应该包括其各个变量取值的一个排列,还包括智能体能量,智能体所能感知的局部邻域环境以及另外一些控制智能体行为的信息,具体可表示为CSAgent=〈body,energy,neighborhood,SL〉,其中body表示的是包括各变量取值的一个排列;energy为智能体的能量,该值可用来控制智能体的行为;neighborhood为该智能体所能感知的邻域环境,包括了生存在邻域环境中的智能体及其对应的信任度;SL为自学习行为的标志,若该值为true,则自学习行为可以作用在该智能体上;否则不能.3.2智能体的生存环境这里所定义的智能体为指派空间中的任意一个指派,其生存环境为一lat×lat的网格结构,每个智能体占据着网格的一个格点,且固定不能移动.智能体仅能感知局部的邻域环境,即仅能与其邻域内的智能体进行相互作用.图2为智能体生存网格结构图.3.3智能体的局部感知环境为实现智能体的局部感知能力,还需要定义智能体的邻域环境.这里借用人类社会的“关系网模型”[16]来建立智能体局部感知环境,使其符合一般多智能体系统中的协作机制.以这种思想指导局部感知环境建立的方式也已在文献[17]中得到证明,对于函数优化问题,可以较大幅度提高算法的搜索性能及搜索精度.本文将此思想进一步将扩展到SAT问题求解中.3.3.1熟人关系网模型在人类社会当中,人是作为某一种独立体存在其中的,整个社会形成一种以各个独立的人为单位的整体,人与人之间总是同时存在着相互竞争以及协同合作关系.一般来说,作为社会中的一个基本单位———人总是活动在一定的范围之内,并受到该范围内其他人以及环境对它产生的影响,而这个范围会随着时间的推移发生改变.我们记社会中的某个人为a、b和c,称其活动的范围为neighborhood,首先给出以下基本概念:定义2.认识关系.若b包括在a的neighbor-hood之内,即ba.neighborhood,则称a认识b,并记为Acq(a,b).定义3.局部环境.个体a所认识的所有个体构成了个体a的局部环境.定义4.信任度trust.度量两个智能体之间的关系,其取值范围为[-1,+1].trust(a,b)=-1表示a完全不信任b,trust(a,b)=+1则表示a完全信任b.当一个人在社会中初始产生时,并不具备自己去发展熟人的能力,它所谓的熟人就是身边的父母以及至亲的人.另外,社会中的个体———人在成长的过程,会不断发展熟人,而且其熟人圈中的个体也在不断改变,改变是由发展新的熟人和去除一些不受信任的旧的熟人来完成的.一般来说,发展新的熟人Page4有两种,一是可以通过人本身的能力去结识新的朋友,也就是社会上其他的个体都有可能被发展成熟人;二是通过高信任度的朋友去结识.也就是说假如B为A所完全信任的朋友,而C为B所完全信任的朋友,则C就有很大的概率成为A的朋友.另外一方面,熟人圈中的朋友之间不可避免会发生各种关系,这里主要考虑的是竞争和合作两种.竞争将导致对方或自身的直接死亡,而合作不但有可能改变自身的一些特征,对熟人的信任度也将发生直接变化.3.3.2局部感知环境定义将以上理论推广到智能体系统当中,即可以类似的方式来确定智能体的局部感知环境.首先,对于系统中智能体的初始邻域,采用文献[15]中局部环境的定义方式,即选择智能体网格周围的4个智能体作为其初始邻域,且其信任度均为0.再者,随着智能体的不断活动,其邻域环境也在不断改变当中,因此除了智能体初始产生时局部环境所包含的4个邻域外,还要以一定的概率去发展一些新的“邻域”.定义5.任一智能体都能以一定的概率成为Agenta局部环境内的一员,其概率视其位置离Agenta的距离而定.定义6.若有Agentb∈a.neighborhood,trust(a,b)=1,且有Agentc∈b.neighborhood,trust(b,c)=1,则Agentc将以一定的概率成为Agenta的局部环境中的一员.局部环境中某些智能体的消亡:假设Agentb∈a.neighborhood,且trust(a,b)=-1,则将Agentb将从a.neighborhood中清除出去.3.4智能体的行为用于解决SAT问题的智能体行为有3种,分别为竞争行为、协作行为以及自学习行为.其中竞争算子和协作算子作用在具有熟人关系的智能体上,实现智能体的竞争和协作行为,而自学习算子是作用在单个Agent之上,实现Agent利用自身知识的学习,即局部搜索.3.4.1竞争行为竞争行为模拟的是“社会中的竞争,失败的Agent将无法继续生存”.该算子目的为剔除网格上能量较低的智能体,提高整体的能量水平,具体可描述为:假设智能体网格上某一智能体为Agenta=〈(a1,a2,…,am),energy,neighborhood,SL〉,对Agentl∈a.neighborhood,Agentmax∈a.neigh-borhood,且均有l.energymax.energy,则记局部感知环境中能量最高的智能体为Agentmax=〈(max1,max2,…,maxm),energy,neighborhood,SL〉.如果有a.energy<max.energy,则Agenta死亡,并产生一个新的智能体Agentchild=〈(c1,c2,…,cm),energy,neighborhood,SL〉来代替Agenta.其中child.neighborhood=a.neighborhood,child.body由交换max.body的一部分得到[15],等价于对max.body的一次局部搜索,具体描述如下.算法1.CompetitionBehavior.输入:Agentmax,max.body=(max1,max2,…,输出:child.body=(c1,c2,…,cm)令swap(x,y)表示交换x和y的取值,U(0,1)为0到1间均匀分布的随机数;random(n,i)为1,2,…,n中的随机整数且不等于i;1.令child.body←max.body,i←1;2.若U(0,1)<pcom,则令l=random(m,i),并执行swap(ci,cl);3.令i←i+1,若im,则转步2;否则停止,输出child.body=(c1,c2,…,cm).3.4.2协作行为协作行为模拟了“从别处获得经验”.对于生存在环境中的智能体,它将与其局部环境中的智能体发生协作,以提高自身能量,其协作概率为pcross+trust0.1.这样可以保证智能体与它所信任的智能体之间会有更多的概率进行合作,这一点非常符合人类社会当中的协作机制,减少了一些可能无效的操作,可进一步加快搜索速度.假设(a,b)=cooperate(a,b),若a.energy>a.energy,则认为两者合作成功,以a替代原有的a,并令trust(a,b)=trust(a,b)+0.1;若a.energy<a.energy,则合作失败,保持原有的Agenta,并令trust(a,b)=trust(a,b)-0.2;若a.energy=a.energy,则保持原有的信任度不变,具体描述如下.算法2.CooperationBehavior.输入:Agenta,a.body,a.energy及a.neighborhood输出:Agenta1.将a.neighborhood中的智能体依次进行下列操作;2.记从a.neighborhood中选出的智能体主体部分记为b.body=(b1,b2,…,bm),信任度为trust(a,b);3.如果U(0,1)<pcross+trust(a,b)0.1,则令l=random(m,1);否则转步6;4.产生新智能体a.body(1:l)=a.body(1:l),a.body(l+1:m)=b.body(l+1:m),并计算a.energy,令evaluation←evaluation+1;Page55.若a.energy>a.energy,则增加两者的信任度,令trust(a,b)=trust(a,b)+0.1,a.body=a.body,a.energy=a.energy;若a.energy<a.energy,则降低两者信任度,令trust(a,b)=trust(a,b)-0.2,其他保持不变;6.判断a.neighborhood中的智能体是否都已进行以上7.更新Agenta的邻域环境.操作,若是,则转步7;否则取出下一个智能体,转步3;3.4.3自学习行为自学习行为模拟了“根据自身能力学习环境以提升能量”,该算子只作用于当前代能量最优的智能体之上,以SL来表示是否进行该行为的标志.自学习就是对每一代中具有最优能量智能体的每一个分量进行依次翻转,以达到增大智能体能量的目的.具体操作可描述如下.算法3.Self-learningBehavior.输入:Agenta,a.SL=true输出:Agenta1.令Eold←a.energy,k←1;2.令ak←ak,计算a.energy,并令Enew←3.若Enew>Eold,则令Eold←Enew;否则执行ak←ak;4.令k←k+1,若km,则转步2;否则令a.SL=falsea.energy;并停止.3.5求解SAT问题的多智能体社会进化算法智能体必须有序的采取以上的3种行为才能达到求解约束满足问题的目的,这里采用进化的方式来控制智能体间的相互作用,具体描述如下.算法4.求解SAT问题的多智能体社会进化算法.输入:各初始化参数.evaluationmax:最大计算量;输出:s,即所求解问题的解或近似解假设Lt为第t代的智能体系统集合,CSAgenttL1,…,Lt中最好的智能体,CSAgentt体.conflicts(agent)为Agent违反约束的个数.1.令evaluation←0,初始化智能体集合L0,随机产生二元指派赋予L0evaluation+1,i=1,2,…,popsize.更新CSAgen0conflicts(CSAgent0令Lt+12.对集合中的智能体Lti←Lt3.对集合中的智能体Lt+1Cooperationbehavior来更新Lt+1Cooperationbehavior中更新;4.更新CSAgentt+1(t+1)best,令CSAgentt+1(t+1)best.SL=true,并将自学习行为作用在该智能体上;5.如果有conflict(CSAgentt+1则令CSAgentt+1CSAgentt为从Lt中随机选择的一个智能体并与CSAgentt+16.如果conflicts(CSAgentt+1evaluationmax,则停止,令s←CSAgentt+1t←t+1,转步2.4实验结果及其分析4.1测试数据我们采用了两类数据集来测试算法MASEA的性能.第1类为广泛使用的SATLIB库①中的“UniformRandom-3-SAT”问题集.该问题集共有SAT问题3700个,这些问题的子句个数与变量个数的比均为4.3左右,此时SAT问题的约束既不会过少,也不会过多,它们属于可满足和不可满足的概率是相等的,因而这些问题是比较难解的[18].根据变量个数可以将这3700个问题分成10个集合,分别记为SAT1,SAT2,…,SAT10.这10个集合所包含的问题和相应的参数在表1中给出.表1实验中所用的SATLIB库中的SAT问题问题集问题个数SAT11000uf20-01,…,uf20-010002091SAT21000uf50-01,…,uf50-0100050218SAT3100uf75-01,…,uf75-010075325SAT41000uf100-01,…,uf100-01000100430SAT5100uf125-01,…,uf125-0100125538SAT6100uf150-01,…,uf150-0100150645SAT7100uf175-01,…,uf20-0100175753SAT8100uf200-01,…,uf200-0100200860SAT9100uf225-01,…,uf225-0100225960SAT10100uf250-01,…,uf250-01002501065第2类测试问题为基于RB模型所产生的随机实例测试集.RB模型是许可[19]所提的一种值域可变的k元随机CSP模型,同时证明了该模型不仅存在从可满足到不可满足的相变现象.近年来,根据此模型所产生的随机实例已被国际上认可,并广泛使用[20-25],充分说明了其实例的难解性,可用于测试算法性能.我们共选取了10个问题集进行测试,其参数也在表2中给出.①TheCooperativeAssociationforInternetDataAnalysisPage6数据集frb30-15frb30-15-1,…,frb30-15-545019084frb40-19frb40-19-1,…,frb40-19-5760437804.2有效性测试首先采用本文所提算法对以上数据集进行有效性测试.实验分别从3方面来评价算法的性能,分别为成功率(SuccessRate,SR)、平均误差(MeanError,ME)和平均评价次数(AveragenumberofEvaluationstoSolution,AES).成功率指的是找到解的次数所占的百分比,SATLIB中所选择的所有测试问题都是有解的,所以成功率最高可以达到100%.误差指的是所得到的最优智能体所不能满足的子句个数,平均误差即为所有运行误差的平均,包括成功的和不成功的.该性能指标能衡量近似解的质量,可用于比较成功率低于100%时算法的性能.平均评价次数是指成功找到问题解时所用的评价次数的平均值,这也是常用于衡量进化算法计算量的一个指标.显然,当成功率为0时,平均评价次数是毫无意义的;当成功率很低时,平均评价次数也不能准确衡量算法的计算量.因此,应该从成功率和平均评价次数两方面综合评价试验结果.在这3个性能指标当中,成功率是最重要的,其次是平均评价函数,而平均误差仅仅用于衡量算法失败时的性能.对SATLIB库的SAT问题实验中,智能体网格规模popsize=16,竞争概率pcom=0.2,协作概率pcross=0.4,同时设定最大评价次数evaluationmax=100000,对每个问题均独立运行10次,对一组问题的实验结果进行平均.表3为算法MASEA对以上SATLIB中10组问题的实验结果.问题集成功率SR平均评价次数AES平均误差MESAT11SAT21SAT31SAT41SAT51SAT61SAT71SAT80.9743028.5SAT90.9654493.7SAT100.9461033.4从表3中的实验结果可以看出,对于SATLIB中的SAT问题,MASEA具有较优的性能,它能对前7组中的所有问题找到满足所有子句的指派;对于后面的3组问题,也能对大部分问题找到满足所有子句的指派,且对于暂时未能找到满足所有子句条件的问题,所得解的误差较小,平均误差均在0.4以下.另外,找到满足条件指派时所用的平均评价次数较少,对于SAT10这组包含250个变量以及1065个子句的问题,平均仅花费60000余次评价即证明该问题是可满足的,并得到满足条件的真值指派.实验结果显示该算法具有良好的性能,能以可接受的计算量求得满足问题的解.在针对RB模型产生的随机实例实验中,我们设定智能体网格规模popsize=25,竞争概率pcom=0.2,协作概率pcross=0.4,同时设定最大评价次数evaluationmax=200000,对每个问题均独立运行10次,对一组问题的实验结果进行平均.表4为算法MASEA对两组随机实例问题集的实验结果.问题集成功率SR平均评价次数AES平均误差MEfrb30-150.824187658.30.468frb40-190.795196354.80.492从表4中可以看出,对基于RB模型产生的随机实例问题集frb30-15以及frb40-19,由于其中包含的变量个数和子句个数大幅度增长,尤其是子句数目,算法的成功率相对较低,但仍然能在大部分时候取得正确的解;所花费的平均评价次数较多,而且平均误差也比SAT问题的结果有了较大幅度的增长.究其原因,所提出的MASEA需对每一个智能体进行性能评价,即只要产生给一个新的智能体,就将给评价次数加1,而我们的实验设定了最大评价次数evaluationmax=200000,在一定程度上限定了算法继续寻优的可能.这也在另外一个角度说明,对于复杂度急剧升高的问题,算法的计算复杂度也将急剧升高,这也是该算法用于实际问题时的一个缺陷.4.3对比性测试为了进一步验证算法性能,我们将本文算法与已有的多种算法进行性能比较.鉴于大部分已有算法都是针对SAT问题提出的,而SATLIB为SAT问题的标准测试数据集,因此以下实验均针对SATLIB库中的“UniformRandom-3-SAT”问题集进行比较测试.首先,鉴于所提出用于解决SAT问题的MASEA与求解约束满足的MAGA(Multi-AgentGeneticAlgorithm)[15]有某些类似之处,我们专门对这两种算法进行比较,用以验证MASEA中邻域建立方式和协作算子的有效性,表5为这两种算法的比较结Page7果.两者的参数设置同为popsize=16,pcom=0.2,最大评价次数为evaluationmax=100000,MASEA中pcross=0.4,每个问题独立运行10次,统计其平均结果.问题集SRSAT111563.2704.300SAT2111702.51898.200SAT3113893.75007.600SAT4117147.49312.900SAT51111439.315573.800SAT61116900.220145.500SAT710.9922453.129124.700.078SAT80.970.9343028.550329.90.1820.219SAT90.960.9254493.764678.30.2240.346SAT100.940.8861033.473004.10.3480.483从表5中的结果可以看出,对于相同的SAT问题,且在其参数设置相同的情况下,MASEA要比MAGA具有更高的性能,能在提高成功率的前提下,保证较小的评价次数和平均误差.对于全部能找到满足所有子句指派的前6个问题集合,MASEA比MAGA所需的平均评价次数明显减少,且对于越复杂的问题,其优势越加明显.另外,对于后4组MAGA不能全部找到问题解的问题集合,MASEA以20000余次的评价代价对SAT7问题集达到了100%的成功率;对于剩下的3个问题集,其成功率分别提高了5%左右,并且其评价次数要比MAGA求解时少7000~12000次,就是说MASEA以更小表6与其他进化类算法的比较结果问题集SAT11111563.2760.1176.7171.50000SAT211111702.52813.51484.74508.50000SAT311113893.74125.64405.441418.70000SAT411117147.48120.18591.077678.20000SAT5111111439.314932.719078.2265198.10000SAT61110.9816900.218527.230828.6249978.10000.105SAT710.980.970.9622453.133712.563768.7478289.900.0960.1020.187SAT80.970.950.950.8843028.543896.496024.8714918.80.1820.2510.2360.439SAT90.960.930.930.9354493.753863.1106070.3757870.30.2240.3200.3410.361SAT100.940.940.940.8761033.459961.8140338.01010541.10.3480.4110.3960.567解的平均误差要大于采用MASEA所得的结果.因此,MASEA在整体上优于所比较的3种有效算法,QCIA,OEA和WSAT.除此之外,EagleUP2[26]和SATzilla2012[27]是近年来出现的两种非常优秀的SAT问题求解器,为了进一步说明所提算法的求解性能,我们将本文所提方法与这两种算法也进行了比较,其结果如表7从比较结果来看,算法MASEA具有比其他算法更优的性能.在所比较的算法当中,它的成功率是最高的,而且,对于大部分问题集来说,它所需的平均评价次数也是最少的.随着问题复杂度的逐步增加,MASEA的优势逐渐明显.对于问题集SAT9和SAT10,其评价次数和QICA所用的评价次数基本持平,但此时QICA的成功率不及MASEA,且所得的代价获得了更优的结果.另外,平均误差可用于衡量算法失败时的性能,从表中可以看出,对于未能找到最优解的情况,MASEA所产生的误差明显小于MAGA的结果.究其原因是MASEA采用了“关系网模型”的思想来建立智能体所能感知的局部环境,而不是MAGA中简单的位置相邻.同时,通过信任度来动态调整局部环境中的智能体,使智能体之间的操作更加有效,也更符合整个社会进化过程.通过这种方式,各种有用信息将通过邻域直接扩散到整个智能体网格当中.另外,在进化算子的设计上也有所不同.MAGA采用了竞争操作、自学习操作以及变异操作,同时通过实验分析得知,竞争操作和自学习操作在整个算法中起到了举足轻重的作用.因此,在MASEA中仍然保留了这两个算子,同时根据智能体具有竞争协作的特点,设计了一个协作算子.该算子模拟了社会中合作时从别处获得有用经验的过程,通过信任度来动态控制智能体间的密切程度,从另一方面促进了有用信息的快速传递.除了MAGA之外,进化类算法量子免疫克隆算法QICA[7],组织进化算法OEA[6]在SAT问题的求解上都取得了较好的效果;另外,WalkSAT[1]是一种非常经典且有效地利用局部搜索求解SAT问题的方法,因此,我们首先将MASEA的性能与这3种算法进行逐一比较,同样为每个问题独立运行10次,并取其各项统计平均值,表6为比较结果.Page8所示.由于对前5个SAT问题集(SAT1~SAT5)3种算法均能达到100%的成功率,且误差均为0,因此表7仅列出了对后5个问题(SAT6~SAT10)在成功率、平均误差以及运行时间三方面的比较结果.其中,MASEA的参数设置如前所述.衡量指标算法成功率SR平均误差AES运行时间/s从表7的结果中可以看出,我们所提算法MASEA的成功率与两种求解器EagleUP2和SATzilla2012基本持平,在平均误差上要略优于这两种求解器,显示了算法优越的寻优性能.但是在运行时间方面,MASEA所花费的时间要大大多于所比较的两种求解器,复杂度相对较高,还存在一定的改进空间.另外,求解SAT问题的多智能体社会进化算法是通过设计3种行为来完成进化过程,并通过信任度来控制智能体之间可能发生的行为来达到求解目的的.为进一步明确3种行为在整个进化过程中所起的作用,下面分别对3种行为的性能进行逐一分析.我们挑选了4组问题集进行测试,分别为SAT1、SAT4、SAT7和SAT10.实验中分别去掉一种行为,以其他两种行为来完成整个进化过程,其参数设置与步骤完全同于前述实验,只是去掉了相应的行为,实验结果如表8所示.表8两种行为算子构成的算法与本文算法的比较问题集性能SAT1SAT4SAT7SAT10从表8的结果中可以看出,竞争行为对算法性能的影响十分巨大,若去除该行为,算法仅留下极弱的性能.竞争行为作用在智能体和其局部环境中的智能体之间,实现的是局部环境中的全局选择,并通过这种由信任度所控制的整个局部环境网络传递到整个智能体系统当中,最终实现了整个空间内的全局搜索.这一点十分符合自然进化模型,因此该算子起到了举足轻重的作用.除此之外,合作行为和自学习行为也在整个进化过程当中起到了不同程度的作用.合作行为通过吸取局部环境中智能体的有用信息来提升自身能量,符合整个自然系统协同竞争的思想.而且,我们是通过合作行为来更新信任度,进而控制下一代进化中的操作.自学习行为实现的是某一智能体附近的局部搜索,它实际上是一种“启发式信息”的利用,也就是说,在随机搜索算法当中加入适当的启发式信息有利于算法性能的提高.因此,算法中的3种行为算子在整个进化过程中都起到了不同程度的作用,且三者是相辅相成,缺一不可的.5结论本文根据Agent社会协作机制以及智能体对环境的感知和反作用的能力提出了一种新的求解SAT问题的方法———MASEA.该算法在多智能体进化思想的基础上,通过人类社会“关系网模型”来建立智能体所能感知的局部环境,同时根据智能体具有竞争协作的特性,以竞争算子,自学习算子和协作算子共同完成了智能体的进化过程.实验中采用大量的标准SAT问题以及RB模型的随机测试实例对算法进行了全面的测试,并与已有的一些高性能算法进行了比较,结果表明,不论是在成功率方面还是所花费的计算代价方面,MASEA在整体上均优于所比较的高性能算法.当成功率小于1时,算法所找到的解也能满足绝大多数子句,且平均误差较小.
