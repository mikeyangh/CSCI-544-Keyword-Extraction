Page1基于主题模型的Mashup标签推荐方法刘建勋石敏周栋唐明董张婷婷(湖南科技大学知识处理与网络化制造湖南省普通高校重点实验室湖南湘潭411201)摘要Web2.0时代,标签作为Web资源管理和检索的有效方式已成为近年的热点研究对象.开发者通常为新的Mashup人工指定若干与功能性相关的标签,以便于用户理解、检索以及实现Mashup资源的分类管理.然而,手动指定标签十分繁琐且费时,自动生成Mashup标签十分必要但缺乏有效方法.针对该问题,文中提出一种基于主题模型的方法进行Mashup标签的自动推荐.该方法首先建立Mashups与WebApplicationProgrammingInter-faces(APIs)的描述文档以及Mashups与APIs之间的组合关系模型,然后寻找与待推荐标签Mashup的描述文档主题分布相似的WebAPIs,并将它们与该Mashup直接组合的APIs合并,采用一种带权重的PageRank算法,从中挑选出最重要的APIs,最后将它们已有标签推荐给该Mashup.同时,针对所提方法文中设计实现一种标签排序算法,该算法优先推荐那些与Mashup主题最相关的标签.根据使用从ProgrammableWeb收集的真实数据进行实验可知,文中所提出的方法明显优于其他自动化标签推荐方法.关键词Mashup;WebAPIs;标签推荐;主题模型;PageRank;云计算1引言随着Web2.0技术的兴起,标签(Tag)作为资源管理和检索的有效方式成为近些年的热点研究对象[1-4].互联网上的各种资源比如网页、文献、博客、图片、音乐、视频等通常允许作者或其他用户为其关联若干描述性的词汇,也就是标签.标签和关键词相似,都体现了对标注资源的描述和概括.但是,标签是用户根据自己的理解为资源指定的描述性词汇,它具有随意性和语义模糊性等特点,这为标签的自动推荐带来了巨大的挑战[1-2].近些年,许多网站如ProgrammableWeb①和Seekda②已经允许用户为Mashup资源关联若干标签,以便于人们理解、检索以及实现Mashup资源的分类管理.如在ProgrammableWeb中,为Mashup指定若干相关的标签将有助于用户快速检索出需要的Mashup服务.图1所示为ProgrammableWeb③上名为“Mashit”的Mashup实例,该Mashup有4个标签和一个描述文档.为进一步说明标签的作用,取其中两个标签“Color”与“Fonts”作为关键词检索ProgrammableWeb的Mashups资源库,图2所示为检索结果.从结果可以看出,名称为“Mashit”的Mashup排在最前面.然而,人工为Mashups资源指定标签是一件比较繁琐且浪费时间的任务.因此需要一种方法为Mashups资源自动推荐标签,同时规范标签的使用.目前已经存在一些为Web服务进行标注的方法[3-6].在这些标签推荐方法中,基于词共现的方法被广泛使用[7-8].例如为了解决Web服务标签分配不均匀等问题,Chen等人[7-8]使用基于词共现的方法为标签数较少的Web服务扩充标签.基于词共现的方法挖掘已有标签数据中标签之间的关联关系,用以有效地扩充Web服务的现有标签.但当服务标签较少或者当Web服务没有标签时,基于词共现的方法通常工作效果不好[9-10].基于聚类的方法也被用于Web服务的标签推荐[4,6,11],例如Fang等人[4]提出了一种自动Web服务标签推荐方法,该方法使用了两种策略:标签扩展和标签抽取.他们首先基于WSDL文档将Web服务进行聚类,然后将同一个类中其他服务的标签推荐给指定服务.但是仅仅使用基于WSDL的匹配技术忽略了文档的隐含语义信息[6]且存在词汇稀疏的问题[12].因此有方法研究基于主题模型来发现Web服务的隐含主题信息.例如Aznag等人[5]首先基于主题模型从Web服务中抽取出若干候选标签,随后这些标签被用于训练一个分类器,然后基于该分类器将最相关的标签推荐给新的服务.然而,大部分基于主题模型的标签推荐方法仅仅依赖于Web服务的文本描述信息[1-2,4].当描述信息较少或者标签矩阵很稀疏时,往往无法取得较好的效果[9].因此需要其他辅助信息以提高推荐标签的准确率.众所周知,Web服务之间往往存在链接(或组合)关系.研究表明,如果两个文档之间存在链接关系,它们则很可能具有相似的主题分布信息[13-14],而隐含主题分布相似的Web服务则表明它们的功能性描述文档相似,进一步说明它们可能共享某些相同或者相似的标签.所以,在服务描述信息或者标签信息较少时,充分利用这些服务之间构成的网络信息有助于提高标签推荐的准确度.基于此,本文提出了一种同时将Mashups文档描述信息以及Mashups与APIs之间的链接关系进行建模的方法用于Mashups标签的自动推荐.图1ProgrammableWeb上名为“Mashit”的Mashup实例图2用关键词“Color”与“Fonts”检索得到的结果①②③Page3图3展示了Mashups、Tags、APIs三者之间的链接关系网,实线表示标签与Mashups或者APIs之间存在标注关系,虚线表示Mashups由若干APIs组合而成.从图中可以看出,某些Mashups及APIs由一些共同的标签进行标注,当某一Mashup和某一API包含共同的标签时,该Mashup和API很有可能是组合关系.以往的研究表明,当Mashup与API存在组合关系时,它们的功能性描述文档是相似的[15].也就是说,当某一Mashup和API具有相同或者相似的功能性描述文档时,很有可能包含有相同的标签.基于以上观察,本文提出了一种基于主题模型的Mashup标签推荐方法,该主题模型同时将Mashups与APIs的描述文档以及Mashups与APIs之间的组合关系进行建模.基于该模型,该方法首先寻找与指定Mashup描述文档主题分布相似的若干APIs(可能不包含与指定Mashup直接组合的APIs).接下来,将这些APIs和那些与该Mashup直接组合的APIs合并为一个APIs集合,采用一种带权重的PageRank算法,从该APIs集合中进一步挑选出若干最重要的APIs(最可能与指定Mashup共享标签的若干APIs).最后,将这些APIs图3Mashups、Tags、APIs三者之间的链接关系网2相关工作本小节主要介绍相关的标签推荐技术及本文研究所涉及的PageRank技术.在Web2.0背景下,标签被广泛地用于对Web资源进行有效的组织和管理.目前针对社会化标签推荐方面的研究较多,总体来说,可分为如下3类[16]:基于内容的标签推荐方法、基于词共现的标签推荐方法以及混合标签推荐方法.基于内容的推荐方法仅仅利用物品(如Mashup)的文本描述信已有标签推荐给该Mashup.下面举例说明该过程.如图3所示,任务为给名称为“WhereAml.At”的Mashup推荐若干标签(起初该Mashup并没有任何标签),首先系统选择名称为“Shooping.com”的API作为该Mashup的相似APIs,接着将这个相似API与名称为“GoogleMaps”与“Flickr”的两个APIs合并为一个APIs集合(该实例集合中只包含3个APIs,实际中可能包含多个APIs),显而易见,这两个APIs与Mashup“WhereAml.At”是直接组合关系(虚线表示).然后使用改进的PageRank算法进一步选择出最重要的APIs,最后将这些APIs的标签推荐给“WhereAml.At”.本文在寻找与Mashup相似的APIs时,使用了一种概率主题模型方法,该模型同时考虑Mashups的文本描述信息以及Mashups与APIs之间的链接关系.同时,由于待推荐标签集较大,而Mashups真实标签数目通常有限,因此本文设计实现了一种标签排序算法用于进一步排序待推荐的标签集合,该算法优先推荐那些与Mashup主题最相关的标签.使用从Programmable-Web收集的真实数据进行实验表明,本文所提出的方法明显优于其他标签推荐方法.息[17-18],然后从中抽取标签.这些方法通常能够推荐非常相关的标签,但是当物品没有丰富的文本内容时效率将不会很好[19].基于词共现的方法通过挖掘标签之间的共现关系来扩展物品的标签集[18,20].然而仅仅利用标签的共现信息不能很好地处理标签的主题漂移问题[21].混合的标签推荐方法同时利用物品的内容信息和物品-标签矩阵信息[9,22],通常能取得较满意的效果.但是当缺乏物品的内容信息或者当物品-标签矩阵很稀疏时,推荐效果通常不会很好,因此需要利用其他辅助信息如社会网络(例如Web服务之间的组合关系)等来进一步改善标签推Page4荐的准确度.在混合标签推荐方法中,充分利用物品的隐含主题信息对于提高推荐结果的准确度至关重要[9].因此基于主题模型的标签推荐方法被广泛采用[1-2,10].如Krestel等人[1]提出一种基于主题模型的标签推荐方法,该方法寻找与物品已有标签主题最相关的标签用于推荐.Si等人[2]基于LatentDirichletAllocation(LDA)模型提出一种新的主题模型Tag-LDA用于标签推荐.虽然Tag-LDA推荐效果优于LDA,但是它没有考虑社会网络信息(如Web服务之间相互链接关系).对Web服务进行标签推荐也是一个研究热点[3-6].在这些标签推荐方法中,基于词共现的方法被广泛使用[7-8].例如为了解决Web服务标签分配不均匀等问题,Chen等人[7-8]基于词共现的方法为标签数较少的Web服务扩充标签.基于词共现的方法挖掘已有标签数据中的关联规则关系,用以有效地扩充Web服务的现有标签.但当服务标签较少或者当Web服务没有标签时,基于词共现的方法通常工作效果不好[9-10].基于聚类的Web服务标签推荐方法过去也被广泛采用[4,6,11].例如Fang等人[4]提出了一种自动Web服务标签推荐方法,该方法使用了两种策略:标签扩展和标签抽取.他们首先基于WSDL文档将Web服务进行聚类,然后将同一个类中其他服务的标签推荐给指定服务.但是仅仅使用基于WSDL的匹配技术忽略了文档的隐含语义信息[6]且存在词汇稀疏的问题[12].过去一些机器学习技术也被用于解决标签推荐的问题[5-6].例如Aznag[5]等人首先基于主题模型从Web服务中抽取出若干候选标签,随后这些标签被用于训练一个分类器,然后基于该分类器将最相关的标签推荐给新的服务.然而,大部分基于主题模型的标签推荐方法仅仅依赖于物品的文本描述信息[1-2,4].当物品描述信息较少或者物品的标签矩阵很稀疏时,往往无法取得较好的效果[9].因此需要其他辅助信息,比如Web服务之间的组合关系,以改善推荐标签的准确度.在有些推荐系统中,物品之间常常存在着某种联系,如网页之间的互相链接的关系、Mashups与APIs之间互相组合的关系以及科学论文之间的互相引用关系等.当物品之间存在链接关系时,它们的描述文档可能具有相似的主题分布[13-14].因此,充分利用上述社会网络等信息将有助于标签推荐性能的提高.PageRank算法主要用于计算网页的重要性,在搜索引擎中应用十分广泛[23].PageRank算法通过研究网页的相互链接来确定网页的排序情况.其基本思想是:当网页A有一个链接指向网页B,就认为B获得了A对它贡献的分值,该分值的多少取决于网页A本身的重要程度,即网页A的重要性越大,网页B获得的贡献值就越高.因此一个网页的重要性由3个因素决定[24]:链接指向该网页的网页数量、链接指向该网页的网页质量以及从这些网页链接出的网页数量.然而,传统的PageRank算法依据网页的链出结构,将PageRank值均匀分配给链出的网页节点,使得权威性高的网页不能快速上浮.Xing等人[25]综合考虑网页的链入、链出结构提出一种带权重的PageRank算法(WeightedPageRank,WPR),即为网页的链入和链出赋予相应的权重因子.实验表明WPR改善了传统PageRank算法平均分配的不足,能有效改善排序的结果[26].3Mashup标签推荐方法本节首先定义标签推荐问题,然后分别介绍使用的两种主题模型技术和PageRank算法,继而详细描述提出的Mashup标签推荐方法.为了阅读方便,表1总结了本文所使用的常用符号及其含义说明.符号m表示一个Mashupm表示一个待推荐标签的新Mashupa表示一个APIW(m)表示m的功能性描述文档W(a)表示a的功能性描述文档θ(m)W(m)的主题分布向量θ(a)W(a)的主题分布向量T表示主题模型中主题的数目z(m)大小为T的主题集合,用于W(m)中词汇的主题抽样z(a)大小为T的主题集合,用于W(a)中词汇的主题抽样N语料库中词汇的总数目Iter主题模型训练时的迭代次数维度为T的一维向量,表示对应主题下所有词汇的概u有向带权图中的顶点(网页或API)λ本文提出的增强相似度计算公式中惩罚项的惩罚力度PR(u)顶点u的PageRank值Bu链向顶点u(网页或API)的顶点集合dPageRank概率参数t表示一个待推荐标签P(t)标签t的流行度μ标签得分计算公式的平滑参数A与m最相似的API集合,该集合可能不包含全部Mashuptagsr推荐的标签集合tagsmMashupm的真实标签集合S未排序的待推荐标签集S已排序的待推荐标签集3.1问题定义通常一个Mashupm由一个简短描述文档对其提供的服务进行描述,描述文档可表示为W(m)={w1,w2,…,w|W(m)|},其中wi表示文档中第i个词Page5汇,W(m)表示描述文档的词汇数目.用于标注Mashup的标签集合表示为R(m)={t1,t2,…,t|R(m)|},其中ti表示第i个标签,R(m)表示Mashupm的标签个数.相似的,一个APIa由一个简短的文档对其提供的功能服务进行描述,描述文档表示为W(a)={w1,w2,…,w|W(a)|},其中wi表示文本中第i个词汇,W(a)表示描述文本的词汇数目.用于标注APIa的标签集合表示为R(a)={t1,t2,…,t|R(a)|},其中ti表示第i个标签,R(a)表示APIa的标签个数.在对某一Mashupm进行标签推荐的过程中,开发者用一个简短的文本Wm对Mashup所提供的功能服务进行描述,然后Mashup标签推荐系统能自动为该新创建的Mashup推荐若干相关的标签.3.2概率主题模型本文在寻找与Mashup文档描述相似的APIs时分别使用了两种主题模型技术,下面分别对它们进行详细介绍.3.2.1LDA模型LDA模型[27]是一种文档主题生成模型,包含文档、主题和词三层结构.LDA假设每篇文档由若干隐含的主题组成,每个主题下有一系列与主题相关的词汇.当要生成一篇文档时,是通过以一定的概率选择某个主题,然后再以一定的概率选择主题下的某个词语.LDA是一种非监督机器学习技术,可以用来发现大规模文档集合或者语料库中隐含的主题分布信息.与关键词匹配技术相比较,LDA主题模型更关注文档或语料的语义信息,它将文档归纳出若干主题,然后根据文档主题分布向量计算文档之间的相似性,因此,LDA主题模型是一种语义层次的匹配技术.LDA模型可以使用蒙特卡罗马尔科夫链等方法学习得到.本文在学习LDA模型时使用的是吉布斯抽样方法[28].图4为LDA的模型图.假设T表示待训练主题的数目,N表示语料库中词汇的总数目.则θ(m)是一个维度为T的一维向量,表示文档W(m)的主题分布向量.是一个维度为N的一维向量,表示对应主i=j|狑,狕(m)题下所有词汇的概率分布.将所有Mashups与APIs的描述文档作为输入,参数θ(m)、和z(m)可通过吉布斯抽样方法训练得到[28].LDA训练过程中,吉布斯抽样方法为描述文档中的每个词进行多次迭代,每次迭代都以下列式(1)为词W(m)的主题,直到LDA模型的参数收敛为止.p(z(m)其中,犆(W(m)语W(m)的词汇的数目;C(·)·,﹁i表示文档W(m)中所有词汇的数量;狕(m)C(W(m))除当前主题外的主题向量;狑表示语料库中所有的词汇向量.α和β是狄利克雷先验的超参数,用于平滑模型.式(1)的后验概率可以由下列式(2)和式(3)计算得出i归入主题j的次数和文档W(m)中归入主题j式(2)表示文档的主题分布,式(3)表示主题的词分布.通过式(2)、(3)可确定Mashups和APIs描述文档的主题分布及各主题下词的分布.3.2.2RTM模型关系主题模型(RelationTopicModel,RTM)最早由Chang等人[29]提出,是一种层次概率主题模型.RTM不仅仅考虑文档的内容,同时还考虑文档之间的链接关系,比如科学论文之间的引用关系或以及网页之间的链接关系等.Li等人[15]将RTM模型用于API推荐问题,该模型在训练文档主题分布的过程中同时考虑Mashups与APIs之间的组合关系.图5为RTM的模型图.θ(m)与θ(a)分别表示Page6Mashup文档与API文档的主题分布向量.ym,a是一个通过观察得到的Mashup与API文档之间的链接关系变量.对于每一对Mashup与API文档都会有这样一个变量ym,a,此变量由它们的文档主题分布向量与平滑参数η决定.RTM模型在训练的过程中不仅考虑Mashups与APIs的文档信息,同时在抽样文档主题时还考虑了与当前抽样文档有链接(或组合)关系文档的主题分布情况.RTM模型的详细训练过程如算法1所示.算法1.RTM模型训练过程.输入:APIs的标签、Mashups和APIs描述文档以及它输出:θ(m),θ(a),,z(m)和z(a)等隐含参数1.对于Mashup或API描述文档中的每一个隐含主题,根据Dirichlet分布Dirichlet(β)得到该主题上的一个词多项式分布向量~Dirichlet(β).2.对于每一个Mashup描述文档,根据Dirichlet分布Dirichlet(α)得到一个主题分布概率向量θ(m)α~Dirichlet(α).3.对于每一个API描述文档,执行同步骤2过程.4.对于Mashup描述文档中每一个词汇w(m)5.对于API描述文档中的每一个词汇w(a)步骤4过程.6.对于每一对Mashup与API描述文档,刻画一个它们之间的链接关系变量:ym,az(m),z(a)~ψ(·z(m),z(a),λ),其中z(m)={z(m)ym,a=1表示Mashup与API之间存在链接(或组合)关系.通过函数ψ可以得到Mashups与APIs描述文档之间的相似性或者链接可能性大小.函数ψ的计算依赖于Mashups与APIs描述文档的主题分布概率向量.本文提出一种增强的余弦相似度计算公式来计算Mashups与APIs文档之间的相似性或者链接(或组合)可能性概率,定义如式(4)所示:ψ(ym,a=1)=槡(z(m)1)2+…+(z(m)该相似度计算公式引入一个惩罚项.即对于两个参与计算的主题向量狕(m)和狕(a),如果它们向量之间对应位置元素差越大,则惩罚也越大,参数λ表征该差值的惩罚程度,当设置λ=0时,该相似度计算公式转变为普通的余弦相似度计算公式.第4节实验证明了该改进相似度计算方法的有效性.将所有APIs的标签、Mashups和APIs文档以及它们之间的组合关系狔作为输入,通过蒙特卡罗马尔科夫链方法进行抽样便可训练出θ(m),θ(a),,z(m)和z(a)等隐含参数.在吉布斯抽样过程中,Mashup描述文档中词汇主题的更新规则如式(5)所示[15]:p(z(m)i=j|狕(m)i=j|狑,狕(m)其中p(z(m)狑表示所有词汇的向量,狔表示所有Mashups与APIs之间的链接(或组合)关系,A表示所有与Mashupm有组合关系的APIs,z(a)述文档中对应主题j的概率值.平滑参数η表示Mashup与API描述文档之间链接关系因素的重要程度.上述更新规则同样适用于API文档词汇主题的抽样,在这种情况下,A表示与APIa所有存在组合关系的Mashups.RTM模型的后验文档主题分布和主题下词的分布分别由式(2)和(3)计算得出.3.2.3PageRank算法PageRank算法主要用于计算网页的重要性,在搜索引擎中应用十分广泛[23].PageRank通过网页之间的超链接关系来确定一个页面的重要性程度(等级).当网页A有一个链接指向网页B,就认为B获得了A对它贡献的分值,该分值的多少取决于网页A本身的重要程度,即网页A的重要性越大,网页B获得的贡献值就越高.也就是说,一个网页的重要性由3个因素决定[24]:链接指向该网页的网页数量、链接指向该网页的网页质量以及从这些网页链出的网页数量.网页的重要性称为PageRank值[23].PageRank建立在随机冲浪者模型[26]上,通常在一个浏览者浏览网页的过程当中,为了防止该浏览者跟随链接浏览网页时形成闭环,因此赋予该浏览者一个随机跳到一个新的起点网页的概率值(1-d)(d通常取值为0.85).对于一个网页u,其PageRank值可由如下公式计算得到式中,Bu表示链接指向u的网页集合;Fv表示从Page7u链出的网页的数目.通常,设置每个网页的初始PageRank值为1,然后通过式(7)迭代计算各网页的PageRank值,直到每个网页的PageRank值趋于稳定.3.3基于主题模型的Mashup标签推荐方法本小节详细介绍本文提出的方法.如图6所示,针对Mashup的标签推荐流程分为3个步骤.首先,对数据集进行预处理,筛选出Mashups描述文档、APIs描述文档以及标签集等信息;接下来对上一步图6Mashup标签推荐的执行流程具体来说,假设通过模型训练后得到第j个API描述文档的主题分布为z(aj)=(z(aj)T).对于一个新的无标签Mashupm.可以抽样z(aj)得到它的主题分布向量犣=(z(m)然后通过式(4),获取该Mashup描述文档与每个API描述文档的相似性.最后根据上述计算得到的相似性值对APIs由高到低排序.选出Mashupm的若干最相似APIs,表示为A={a1,a2,a3,a4,…}.通过上述步骤,选择出了与Mashupm最相似的APIs.基于图3的观察,如果Mashup与API存在直接组合关系,则说明它们的功能性描述文档相似,即它们可能会共享某些标签.然而,上述选出的与Mashupm最相似的APIs可能没有全部包含与m直接组合的APIs.因此,接着将上述相似APIs和那些与m直接组合的APIs合并为一个API集合A={a1,a2,a3,a4,…,b1,b2,…}.最后,基于一种带权重的PageRank算法,从API集合A中进一步筛筛选出的信息分别采用两种主题模型进行训练;第3步进行标签的推荐.当针对一个新的Mashupm进行标签推荐时,首先用训练后的模型对m的描述文档进行抽样,确定其主题分布情况,然后寻找与m主题分布相似的APIs,由于这些APIs可能不完全包含m直接组合的APIs,因此接着将这些相似APIs与m直接组合的APIs合并为一个整体的APIs集合.最后使用PageRank算法,将集合中APIs的标签推荐给m.选出最重要的APIs.图7所示为由一个示例集合A中的APIs构成的有向带权网络,其中网络中的顶点表示API,一个APIAu指向另一个APIAv则表示Av是一个与Au主题分布相似的API,该相似性值由式(4)计算得到.由Au指向Av的边的权重由如式(8)计算得到式中,Pu表示由Au链出的APIs集合;sim(Au,Av)Page8表示Au与Av根据式(4)计算得到的相似性值.每条边赋予一个权重值后,每个API顶点的PageRank值可由式(9)计算:PR(u)=(1-d)+d∑v∈Bu通过式(9),获取集合A中每个API的PageRank值.接着,将API依据PageRank值由高到低排序.最后,选择若干PageRank值最高的APIs,并将它们的标签作为待推荐的标签集合,表示为S={t1,t2,t3,t4,…}.通过上述步骤,已经选择出与Mashupm最相关的API集合,并抽取它们的标签作为待推荐标签集.但是,通过对真实Mashup数据集标签的统计(见第4节介绍)可知,待推荐标签集中的标签数目依然大于真实的Mashup标签数量.因此,本文设计一种标签排序算法用于进一步过滤出最相关的标签.该排序过程如算法2所示.算法2.标签排序算法.输入:未排序的待推荐标签集S={t1,t2,t3,…},Mashup输出:已排序的待推荐标签集S={t2,t1,t6,t3,…}1.将犣=(z(m)序列犣=(z(m)序发生了改变).2.按式(10)为集合S中的每个标签计算一个推荐得分:3.根据步骤2计算出的标签推荐得分对标签进行排序得到降序的标签集S={t2,t1,t6,t3,…}.最后推荐该集合中前M个标签给Mashupm.式(10)中,ti,j表示标签ti属于主题j的概率值;j表示集合犣中属于主题j的元素;pj表示元素z(m)j在集合犣中的位置,例如元素z(m)z(m)的位置为1.变量μ为平滑参数,用于协调标签推荐得分受Mashup主题影响的程度.此外通过分析数据集发现有些标签被功能相似的Mashup频繁使用,因此认为流行的标签应该得到优先推荐.标签的流行度由式(11)[15]计算得出其中,c为控制参数,实验中取固定值c=0.1.图8所示为随机选取的1000个测试Mashups标签的流行度变化曲线,其中,横坐标Nt表示标签在所有APIs(而不是Mashups)标签中被使用的次数,纵坐标P(t)表示标签流行度值.从图中可以看出,标签被使用次数越多,其流行度越大,因此被推荐的可能性也越大.考虑标签流行度后推荐得分由式(12)计算得出Scoreti=1-sinμpj通过式(4)和式(12),本文最终推荐出的标签与Mashupm既相关且比较流行.第4节评估结果表明本文提出的方法能取得较好的推荐效果.3.4算法复杂度分析本文提出的标签推荐算法中,主要涉及两个部分的算法:主题模型的训练过程以及通过PageRank算法找出最重要的APIs.其中主题模型LDA和RTM的训练使用的是Gibbs抽样方法,其训练过程中单次迭代的时间复杂度为O(T·N),其中T表示训练的主题数目,N表示语料库中词汇总数.假设主题模型的迭代次数为Iter,则训练LDA或者RTM模型的复杂度为O(T·N·Iter).然而,LDA和RTM主题模型的训练采用的是一种离线计算的方式,实际应用中,可以离线训练得到模型,然后用于在线标签推荐的过程.因此该部分时间不在本文的考虑范围之内.而本文采用的PageRank算法使用幂迭代法求解,每次迭代依次修改顶点的PageRank值,当PageRank值不再显著变化或者趋近收敛时,迭代算法结束.由于本文API构成的网络顶点数目较少,因此该算法能够较快地收敛结束,其算法复杂度为O(k·k·Iterp),其中k表示网络顶点数目,Iterp表示PageRank算法的迭代次数.4实验评估实验评估的数据来自一个提供基于互联网的APIs资源发布和检索的权威平台.截止2016年,该Page9平台中Mashup的数量已经超过7000,WebAPIs的数量突破14000个.本文从ProgrammableWeb爬取包括Mashups和APIs的描述文档及Mashups和APIs的标签信息等数据①,去掉没有标签的Mashups和APIs后,数据集包含6693个Mashups和9122个APIs.本节首先对收集的数据进行了统计分析;接着使用这些数据训练主题模型;然后使用本文设计的方法进行标签推荐;最后对实验结果进行评估并与6种最新水平的标签推荐方法进行分析比较.4.1数据集分析图9所示为6693个Mashups的标签分布情况.由图中可以看出,在真实数据中,99%以上的Mashups标签数目为1到6个,因此本文在进行方法比较时只推荐1到6个标签.本文将6693个Mashups平均分成五等份,然后采用五折交叉验证对本文提出的方法及其他方法的推荐效果进行评估,然后取五次评估结果的平均值.每一次评估实验中,首先将测试集中Mashups的真实标签去掉,然后基于本文进行比较的6种方法为测试集中的Mashups分别推荐1到6个相关的标签,最后将推荐出的相关标签与Mashups的真实标签集进行比较,对测试集中每一个Mashup,分别计算其Recall、Precision和F-measure值,最后求它们的平均值即为最终的推荐评估结果.4.2方法比较比分析,分别介绍如下:本文采用6种方法作为基线系统进行评估和对(1)TF[2,30].该方法直接从Mashup描述文档中抽取词频最高的关键词汇作为标签用于推荐.(2)TF-IDF.该方法基于描述文档的词频-逆文档频率寻找与当前Mashup描述文档最相似的APIs,并将这些APIs的标签用于推荐.(3)LDASA[1].该方法使用基本的LDA模型.首先基于本文提出的增强的相似度计算方法(式(4))选择与指定Mashup最相似的APIs,然后对这些相似APIs的标签进行排序,最后选择若干最相关的标签用于推荐.(4)RTMSA[15].该方法使用RTM模型训练得到Mashups与APIs文档的隐含主题.与LDASA方法相比,该模型在抽样主题的过程中同时考虑了Mashups与APIs文档之间的链接(或组合)关系.该方法剩余推荐步骤同LDASA方法.(5)RTMCS.该方法使用RTM模型训练得到Mashups与APIs文档的隐含主题.首先基于本文提出的增强的相似度计算方法选择与指定Mashup最相似的APIs,接着将这些相似APIs与Mashup直接组合的APIs合并为一个整体的APIs集合.然后对集合中APIs的标签进行排序,最后推荐若干最相关的标签.注意该方法未使用PageRank算法进一步从上述合并后的APIs集合中寻找出最重要的APIs.(6)RTMPR.本文提出的方法.首先使用RTM模型训练得到Mashups与APIs文档的隐含主题.接着基于本文提出的PageRank算法与排序算法,为Mashup推荐若干最相关的标签.本文在训练LDA与RTM模型时设置主题数T为10,迭代次数Iter为1000,超参数α=2.0以及β=0.1.式(11)中控制参数取固定值c=0.1.此外,训练RTM模型时设置η=3[15].4.3评估标准F-measure.分别定义如下.比例,计算如式(13)所示:本文采用如下评估标准:召回率、准确率以及召回率表示推荐的相关标签占所有相关标签的tagsr表示推荐的标签集合,tagsm表示Mashup真实的标签集合.准确率表示推荐的标签集中相关标签所占的比例,计算如式(14)所示:F-measure融合了召回率和准确率,是它们两者的调和平均值,其计算如式(15)所示:①http://blog.csdn.net/shimin520shimin/article/details/Page10Recall和Precision分别由式(13)和(14)计算得出.4.4实验结果本小节首先对比分析6种标签推荐方法的效果.接着分析本文提出的改进的余弦相似度计算方法的性能.最后进一步分析本文所提方法中涉及到的参数对推荐结果的影响.图10、图11、图12分别表示了本文提出的方法与TF、TF-IDF、LDASA、RTMSA及RTMCS这5种方法推荐性能的比较.从图中可以看出,对于本文采用的3种评估标准,基于主题模型的方法(包括RTMPR、RTMCS、RTMSA以及LDASA)比基于关键词匹配技术的方法(包括TF-IDF和TF)推荐
