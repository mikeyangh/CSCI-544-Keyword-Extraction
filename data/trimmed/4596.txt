Page1一种面向大规模社会信息网络的多层社区发现算法1)(中国科学院信息工程研究所北京100093)2)(中国科学院大学北京100049)摘要社区发现旨在挖掘社会信息网络的社区结构,是社会计算及其相关研究的基础.随着交互式社会信息网络规模的快速增长,传统的社区发现算法难以满足大规模网络的可扩展分析需求.多层社区发现算法如PMetis、Graclus等虽然可以分析包含数百万节点规模的网络,但是小于2的粗化缩减比率以及社会信息网络的幂律分布特性极大地制约着该类算法的性能优势.该文提出了一种基于三角形内点同一社区性粗化策略的多层社区发现算法TMLCD.TMLCD不仅以大于2的粗化缩减比率加快了大规模社会信息网络的粗化过程,而且从基本拓扑结构上保持了初始网络的社区效应,提高了社区发现精度.基于YouTube、Orkut等真实网络的实验结果表明:TMLCD在计算精度、内存占用以及运行时间方面的性能均优于目前典型的多层社区发现算法,适用于富含三角形的社会信息网络分析.关键词社会信息网络;社区发现;三角形;多层模式;粗化;大数据1引言随着Web2.0概念的出现和不断深入,大量用户交互式社会媒体如微博、论坛、社交网络、社会新闻、维基等不断涌现.基于这些共享社会媒体平台产生的新型信息网络称为社会信息网络.社会信息网络具有强社区效应,社区发现是分析社会信息网络社区结构的一种有效方法,其广泛的应用场景引起了社会、经济、信息安全等多个学科领域的普遍关注.深入挖掘社会信息网络社区可为圈内好友推荐、个性化信息导向、未来经济走势预测、网络舆情监控等提供技术支持.社区发现本质上是聚类在社会网络研究应用上的延伸.从定性的角度讲,社区发现就是挖掘一个网络中内部连接紧密而外部连接稀疏的群组(子团或簇).传统的社区发现算法有谱分析方法[1]、分层凝聚法[2]、Girvan-Newman分裂法[3]、基于模块度(Modularity)的方法(该方法存在严重的分辨率受限问题)[4]以及结合其他学科理论如统计学[5]、遗传学[6]、信息论[7]等衍生的社区发现算法.这些算法虽然不断改进优化以适应新的数据计算需求,但Θ(n2)或更高的计算复杂度制约着其分析大规模网络的能力.为了能够有效挖掘大规模网络的社区结构,近年来,研究人员提出了大量可扩展的社区发现算法.如Charikar等人[8]在内存有限的情况下,通过流模式扫描大规模网络一次或几次得到其近似的网络拓扑结构,从而加快了社区发现过程.Satuluri等人[9]采用随机抽样去边稀疏化的方法降低了网络规模,并在一定误差范围内识别出大规模网络的社区结构.上述两种算法虽然在一定程度上提高了大规模网络社区发现的效率,但随机抽样近似有时会给实际问题的求解带来较大误差,因此计算结果存在一定的不确定性,即社区发现精度不高.Li等人[10-11]通过定量分析Potts模型的动力学特征来揭示网络中隐藏的社区结构属性,即通过马尔可夫过程来模拟基于Potts模型的社区发现过程,并采用马尔可夫过程的谱分析特征向量来推测对应多变量自旋组态的关键拓扑结构信息.该方法拥有扎实的数学理论推导,不仅计算精度高且完全解决了社区发现分辨率受限的问题,但是较高的计算时间复杂度使之难以分析包含百万节点以上的大规模社会信息网络.Yang等人[12]基于亚稳态的两个基本属性“局部一致性和暂态不变性”,提出了一种可以扩展分析大规模网络社区结构的有效社区发现算法(LM算法),该算法同样采用网络的谱分析特征向量来推测网络中潜在的社区结构拓扑性.由于仅通过一个特征向量的二分迭代实现社区发现,LM算法的计算速度很快,且易于扩展,但是二分迭代难以满足多分社区结构同时分析的应用需求,特别是在大规模社会信息网络的多分社区发现问题中,具有一定的适用范围局限性.在大规模网络社区结构的分析研究中,多层社区发现是目前应用广泛且性能较好的一种方法,如Karypis等人[13-14]提出的KMetis、PMetis以及Dhillon等人[15]提出的Graclus等.该类方法并不直接挖掘大规模网络的社区结构,而是先将网络规模通过迭代粗化的方法逐层缩减,然后分析粗化后生成的小规模网络的社区结构,再通过反粗化逆推出原大规模网络的社区结构.已有的多层社区发现算法进行粗化时均采用一种基于极大匹配选边的粗化策略[14],即通过一定方法尽可能多的从网络中选取出可被粗化的边,然后将被选边上的两个端点融合形成一个复合节点来实现粗化.但是,这种粗化策略存在以下3个方面的问题:(1)极大匹配选边过程是一个NP难问题,且由于所选边集中任意两条边均不可以共点,因此被选作粗化边的数目最多为原网络边数的一半,严重制约着该类算法的粗化缩减比率[13](CoarseningShrunkRatio为|Gi|/|Gi+1|,其中|Gi|和|Gi+1|分别代表粗化前、后网络中的边数;粗化缩减比率越高,粗化过程越快,存储反粗化Page3所需的中间过渡图信息量越少.目前已有算法的粗化缩减比率实际值均小于2),进而影响其计算时间复杂度和存储空间占用率;(2)被选作粗化边上的两个端点,其自然社区归属性不确定,但因形成复合节点而被纳入同一个社区,这一结果将直接影响初始社区发现和最终社区发现的精度,因此反粗化阶段需要调用大量的调优操作来调整和提高算法整体的计算精度;(3)社会信息网络的节点度一般服从幂律分布(power-law)[16],度高的节点会以其中心占优势屏蔽掉很多可被选作粗化的边,致使其粗化过程过早结束,加剧了算法的时间和空间复杂度,进一步限制了其分析大规模网络的性能优势.针对上述问题,本文提出一种基于三角形的多层社区发现算法TMLCD(Triangle-BasedMultilevelCommunityDetection).该算法在粗化阶段采用一种新的粗化策略———基于三角形内点同一社区性的粗化策略,即将网络中遍历到的三角形3个顶点收缩融合形成一个复合节点来实现粗化.三角形因其3个顶点完全互连而具有强社区性[17],所以选择三角形作为粗化对象不仅可以确保被融合粗化的节点同属于一个社区,使得经逐层迭代粗化后生成的小规模网络可以保持原始大规模网络的基本社区结构,提高初始社区发现精度,而且可以节省大量反粗化调优工作并以高精确度反推出原始大规模网络的社区结构.实验结果表明,在分析真实的大规模社会信息网络时,TMLCD可以大于2的粗化缩减比率加快网络的粗化过程,降低反粗化所需存储的中间过渡图信息量,同时能够以高精确度发现网络中隐含的社区结构,提升多层社区发现算法的性能,且适用于服从幂律分布的网络分析.2基于三角形的多层社区发现算法多层社区发现算法的设计理念源于网络社区结构在不同划分度要求下呈现出的层次嵌套模式[18],是一种可高效分析大规模网络且扩展性能很好的方法.据Abou-Rjeili等人[16]分析,即使在最坏情况下,通过多层社区发现算法间接分析得到的结果均优于采用某一算法直接挖掘大规模网络社区结构的结果.多层社区发现的一般计算过程分为粗化、初始社区发现、反粗化并调优3个阶段[14],如图1所示.本文秉承多层分析模型的计算特点并融入基于三角形内点同一社区性的粗化策略,提出一种可扩展分析大规模社会信息网络的多层社区发现算法———基于三角形的多层社区发现算法TMLCD(Triangle-BasedMultilevelCommunityDetection),下面将具体阐述TMLCD.2.1设计基础三角形是组成复杂网络的基本拓扑结构之一,是复杂网络应用研究分析的核心[19-21],如典型的“聚类系数”计算等[22].在大规模社会信息网络中,表示用户的个体或组织节点常常会因共同的社会属性、兴趣爱好、价值取向、行为特征等形成具有强关联特性的三角形拓扑结构.而社会信息网络是人类社会活动在网络空间的虚拟映射,其能够以更短的时空距离增强人们之间的互动交流,映射出更加强烈的社会关系,且这种频繁交互易于引发两个关联节点的相邻节点集交集的迅速膨胀.另外,基于斯坦福大学SNAP网络的社会信息网络数据[23]的调研,绝大多数(至少85%以上)社会信息网络富含三角形拓扑结构(网络中三角形拓扑结构的数目至少与边的数目相当).因此,三角形以其固有的强社区效应(三角形内点完全互联,是最简单的完全子图),成为网络社区分层嵌套模式中的基本社区单元,是嵌套树中的叶子社区或者叶子社区的有机组成部分.并且,相对于高阶完全子图,大规模社会信息网络包含的三角形更为丰富,这为TMLCD粗化过程提供了必要的粗化源.另一方面,随着粗化层级的不断深入,网络中的高阶多边形会逐渐降阶,进而演变成三角形,为TMLCD的逐层迭代粗化过程提供可持续的粗化源.例如图2中所示:粗化前社区1内的节点6、7与节点1、2、3或者节点1、3、4构成一个五边形,当由节点1、2、4构成的三角形被融合粗化形成一个复合节点时,上述五边形将降阶为下一层粗化图上的四边形.即如图2中粗化后的社区1内由节点3、4、6、7所构成的四边形(图中仅给出粗化局部效果图,未展示全图粗化结果),原因是五边形与被粗化三角形Page4图2高阶多边形的降阶过程共边;同理,粗化前社区2内由节点9、10、12、13构成的四边形也会随着由节点8、9、13构成的三角形被粗化而降阶为下一层粗化图上的三角形.如此粗化迭代,高阶多边形逐步向低阶多边形演化,甚至转变成三角形,为后续粗化过程提供粗化对象,从而保证了TMLCD逐层迭代粗化的可持续性.2.2算法实现本文先将基于链接结构的大规模社会信息网络表示成图G0=(V0,E0),其中V0、E0分别表示节点集和边集,节点v∈V0表示个人、组织等信息,边e∈E0表示节点之间某种无向链接关系,如好友关系、合作关系等,边权重ω0取单元值.社区就是图上内连边数大于外连边数的局部强关联子图.TMLCD算法的具体实现过程如下.2.2.1粗化阶段遍历大规模社会信息网络图G0上的三角形,将每次遍历遇到的三角形3个顶点融合粗化形成1个复合节点vc,相应连接边参照复合节点作归一化处理,且累加求其边权重之和得到ωc,vc和ωc将成为下一层粗化图的基本组成元素.当图G0遍历完全生成第1层粗化图G1时,基于图G1继续上述三角形遍历粗化过程生成第2层粗化图G2,然后再基于图G2继续三角形遍历粗化过程生成下一层粗化图G3,如此循环迭代,生成一系列规模逐渐减小的粗化图G0,G1,…,Gm,并且满足节点数逐层递减|V0|>|V1|>…>|Vm|.当图Gm的规模小于一定阈值T(该阈值T一般为设定内存容量大小)或规模不再缩减时,粗化迭代过程终止,且定义此时生成的粗化图Gm为最简粗化图.TMLCD算法的多层粗化是基于单层粗化迭代实现的.本文将该单层粗化过程定义为三角形遍历粗化算法TTCA(TriangleTraversingCoarseningAlgorithm),其具体实现如算法1所示.算法1.TTCA.输入:位于磁盘上的图G(V,E)的邻接表Adj(G)输出:经粗化生成的图G(V,E)的邻接表Adj(G)1.Adjs(G)=SortedDegree(Adj(G));2.INIT(F(v));3.WHILE(Adjs(G)中有未读数据){4.buffer=READ(Adjs(G));5.FOREACH(nodevinbuffer)DO6.7.8.9.10.FOREACH(nodeuinN(v))DO11.12.13.14.15.16.17.18.19.20.21.22.23.ENDFOR24.ENDFOR}25.由复合节点、聚合边和未被粗化的节点、边联合构算法中图G以邻接表的形式给出,节点信息包括标号、节点度d(v)和标志位F(v),N(v)表示节点v的相邻节点集.为了尽可能避免图上三角形遍历的随机性且使算法适合于分析节点度服从幂律分Page5布的网络,算法开始时先采用函数SortedDegree()对图G上所有节点按照其度值的升序排序.这里有几点需要说明:(1)为了避免重复操作,TTCA先对节点进行排序并按照节点度值从低到高的顺序遍历粗化三角形,而且结合标志位F(v)判断“已被粗化过的节点”是否可以进一步参与后续的三角形遍历粗化过程;(2)“已被粗化过的节点”包含两种,一种是被粗化融合后消失了的节点,如算法1中的节点w和节点u,该类节点的标志位F值均为2且在后续操作中一律被忽略.另一种是被粗化融合后形成的复合节点,如算法1中节点v(亦是复合节点vc),若其标志位F值小于2,可继续参与后续三角形的遍历粗化过程,否则亦会被忽略,直到下一层粗化过程被重新考虑(对于标志位F值的设定还有一个重要考虑因素是避免过粗化现象,这一点可参见性能分析3.3);(3)若节点排序过程中出现了度值相同的情形,可随机选择其中任一节点继续三角形的遍历粗化过程.由于粗化过程本身是一个近似过程,本文所采取的策略是尽可能降低其遍历粗化的随机性(如节点排序以及标志位的辅助设置),但当两个节点度值相同时,随机选择会存在一定的局部不确定性,但相对于整个网络而言,其基本的社区结构特性不会受到影响,因此选择差异不大.若想完全排除这种随机性,可以结合模块度Q(Modularity),从与具有相同度值的节点相比邻的所有三角形中,选择使模块度Q(或模块度增益ΔQ)最大的三角形优先进行粗化融合.另外,TMLCD逐层迭代粗化过程中,生成的中间过渡图均需被存储,为后续反粗化还原、调优处理提供必要的信息.2.2.2初始社区发现阶段调用社区发现算法对最简粗化图Gm进行初始社区发现.原则上,任何高效的社区发现算法均可用于初始社区发现,因为图Gm包含的数据量已经完全被内存容纳.但随着迭代粗化的深入,原始大规模社会信息网络图G0中的边权重开始由单元值逐渐累加求和变成了图Gm中的数值,因此,边的权重成为决定初始社区发现算法质量的重要因素,选择初始社区发现算法必须考虑边权重的可计算性.目前较受欢迎的初始社区发现算法是kernelk-means算法和谱分析算法,它们最大的特点是不受线性可分条件的限制.由Pizzuti[24]提出的GA-Net算法也是一种不局限于分析凸社区结构的算法,且相对于kernelk-means和谱分析,GA-Net还是一种社区自动检测方法,即不需要预先知道或假设社区的数目k.因此,本文采用基于遗传算法的社区发现算法GA-Net进行初始社区发现.GA-Net运用遗传学机制缩小最优解目标搜索空间以降低算法的时间复杂度.具体过程是,首先通过选择交叉算子将解空间锁定在使目标函数值趋优的范围内,避免全图逐点搜索,再结合变异算子将解空间适度变换到全局范围内,避免陷入局部最优解而提早终止计算过程,最终找到全局最优解.GA-Net算法定义了一个全局意义上的社区发现目标函数,如式(1)所示:其中,Qc为社区发现的形式化定义,求解Qc的最大值即是社区发现过程.C={C1,C2,…,Ck}表示图上的k个子图社区,Cl表示其中某一子图社区;若将犆l表示为矩阵形式犆l=(犐,犑),其中犐表示图的邻接矩阵犃={aij={0,1}|i,j=1,…,n}中对应于社区犆l的行向量组成的子矩阵,犑表示图的邻接矩阵犃中对应于社区犆l的列向量组成的子矩阵,则V犆l示犆l邻接矩阵中1的个数,即令ai犑表示犆l邻接矩阵中第i行的均值,即综上,即为GA-Net算法社区发现目标函数的完整定义.但此时的GA-Net仅限于基于链接结构的图上社区发现,为了拓展其能够分析加权图Gm,本文将边权重ω融入ai犑的定义式(3)中,得到如下定义式:式中:aij取值0~1,表示节点间是否存在链接关系(同上述邻接矩阵);ωij表示对应边的权重.经过逐层迭代粗化,边权重ωij由初始的单元值累加求和逐渐转变成为图Gm中的数值;ωij值越大,表示节点间的关联度越高,其社区同属性越高,因此ωij成为初始社区发现的重要计算因子.将式(4)重新代入式(1)中,得到GA-Net算法的加权社区发现目标函数:2.2.3反粗化并调优阶段初始社区发现结果并不能直接呈现出原始大规Page6模社会信息网络的社区结构,需经过逐层反粗化还原出图G0上的社区结构,即将最简粗化图Gm上分析得到的社区结果通过中间过渡粗化图Gm-1→Gm-2→…→G1逐层反粗化还原到图G0上,以得到原始大规模社会信息网络的社区结构.在图Gi+1反粗化还原图Gi时,通常将复合节点展开的各节点简单地归属到复合节点所属社区内.对于基于极大匹配选边粗化策略的多层社区发现算法,由于复合节点反粗化还原过程会产生随机自由节点(即社区归属性不确定的节点),若不做适度调优,社区发现结果误差将在粗化图层间以链式反应逐级递增,进而降低原大规模网络图G0上社区发现结果的精度.因此,每次反粗化均需采用调优算法如KL(Kernighan-Lin)、BKL(BoundaryKernighan-Lin)[25]等重新调整随机自由节点的社区归属性.而对于本文提出的TMLCD算法,由于采用基于三角形内点同一社区性的粗化策略,即从三角形所具有的内在社区性出发,将其3个顶点融合实现粗化,从基本拓扑结构上保持了初始网络的社区效应,因此反粗化还原展开的各节点可直接归属到复合节点所属的社区内,不会产生随机自由节点.但存在一种特殊情况,即被粗化的三角形位于重叠社区部分.如图3所示,由节点1、2、3构成的三角形位于重叠社区部分,其因强社区性同时属于社区1和社区2.如果优先选择该三角形作融合粗化,社区1和社区2会因过早聚合而形成一个大社区,模糊掉一定划分度要求下的自然社区结构.因此,与基于极大匹配选边粗化策略的多层算法不同,TMLCD反粗化调优工作的重点不是重新调整由复合节点展开的节点的社区归属性,而是分离因社区重叠而被聚合的大社区,从而发现不同划分度要求下的自然社区结构.3算法性能分析3.1复杂度分析基于三角形内点同一社区性的粗化策略使得TMLCD算法在反粗化阶段无需进行特别的调优处理,且初始社区发现阶段所需分析的图规模远远小于原始大规模社会信息网络,因此TMLCD的复杂度主要取决于粗化阶段,即TTCA的有限次迭代粗化.回顾算法1中的TTCA,假设图G包含n个节点和m条边,第1行中的排序过程可在Θ(nlog(n))时间内完成,且空间复杂度为Θ(n);当数据从磁盘写入内存,第5行至第10行通过两层嵌套循环遍历图上节点以及度大于该节点的相邻节点来遍历图上的边,因此时间复杂度为Θ(m);第14行相邻节点集的交集计算完全可以在Θ(m1/2)时间内完成,这是因为节点已排序,因此第15行最内层循环的时间复杂度也为Θ(m1/2);这3层嵌套循环的计算时间复杂度为Θ(m3/2)=(Θ(m)Θ(m1/2))且占用Θ(n+m)大小的存储空间.另外,算法中所描述的“遍历”图上三角形并不需要“完全遍历”图上的每一个三角形,如图4所示,若三角形A被融合粗化,与之相邻的三角形B和C会随之消失,因为边(1,4)、(3,4)以及边(1,5)、(3,5)会因节点1与节点3复合而被聚合形成一条边.因此,后续遍历选择粗化对象时,可通过标志位的值(F2)来判断并忽略所有与被粗化三角形相邻的三角形.综上,TTCA算法的时间复杂度将远小于Θ(m3/2).3.2性能提升TMLCD算法聚焦于社会信息网络图上的三角形,并将被遍历选定的三角形3个顶点融合形成一个复合节点来实现粗化.回顾前述内容,由三角形具有强社区效应[17]可知,生成的复合节点所包含的被融合粗化了的节点必然属于同一个社区,完全不会产生基于极大匹配选边粗化策略中由复合节点展开的随机自由节点;且具有相同社区属性的节点经融合粗化后仍然同属于一个社区(仅规模缩减),不会引起社区边界的混淆.因此,粗化前后网络的基本社Page7区结构保持一致.例如图5(a)中所示,在包含3个明显社区结构的简单网络中,若基于极大匹配选边粗化策略选择分属于不同社区的边上的节点6和7或节点10和13(如图5(a)中圆圈标注的边)进行融合粗化,自然会因生成的复合节点的社区分划而混淆不同社区的边界,将节点6和7、节点10和13归属到同一个社区,进而反粗化将产生随机自由节点;但如果选择网络中的三角形作为粗化对象,完全不存在被融合粗化了的节点社区属性不一致的情形,因此复合节点的社区划分完全等价于该复合节点包含的所有被融合粗化了的节点的社区属性,且社区边界不会被混淆,图5(b)所示结果为经TTCA(或TMLCD)粗化后的生成图.综上,TMLCD从基本拓扑结构上保持了生成粗化图Gi+1与被粗化图Gi的社区结构一致性(0im),即经过m次迭代粗化后生成的最简粗化图Gm,其拓扑结构近似于初始图G0,使得在图Gm上分析得到的社区结果可以最大限度地还原出原始大规模社会信息网络图G0上的社区结构,减小分析误差,提高初始社区发现精度,且反粗化无需调优界定被展开节点的社区归属性,降低了系统的时间开销.另外,相较于基于极大匹配选边粗化策略的多层社区发现算法,基于三角形内点同一社区性粗化策略的TMLCD算法可以大于2(因为三角形3个顶点被融合粗化形成一个复合节点)的粗化缩减比率加快网络粗化过程,减少所需保存的中间过渡粗化图层数和每层粗化图的信息量,降低了多层社区发现算法的空间占用.为了进一步提升社区发现性能,TTCA算法采用了对节点的度进行排序并依次从度最低的节点开始遍历图上三角形的方法.这样做有两方面的原因:一方面,节点度服从幂律分布的网络分布极不均衡,中心社区和边缘社区的密度相差较大[16],若粗化阶段随机选择粗化三角形,则会造成度高的节点以其中心占优势将网络先向中心聚合粗化而模糊掉网络的边缘特征,从而覆盖掉很多有意义的边缘低密度社区;另一方面,与度高的节点相比邻的三角形数目较多,选择不同的三角形会引起图遍历粗化的随机性.相反地,与度低的节点相比邻的三角形数目较少,当其中一个三角形被选作粗化时,与该粗化三角形相比邻的三角形的顶点会被逐渐标记(F)而变得不可选,这样从边缘向中心推进,逐渐减少度高节点相比邻的三角形中可被选作粗化对象的数目,降低网络图遍历粗化的随机性.而且,从度最低的节点开始遍历,优先选择粗化边缘社区内的三角形,可以突出边缘低密度社区效应,弱化占优节点的中心覆盖性,进而提高TMLCD发现自然社区的能力.3.3过粗化现象过粗化是一种极端的现象,一般不会发生,但当网络中被选作粗化对象的三角形很多都存在于高阶极大完全子图时,就会产生过粗化现象.例如图6所示,粗化前社区A、B、C是3个高阶极大完全子图,若将其每个子图中包含的三角形均作融合粗化,就会产生粗化后的1个简单三角形,原有的社区效应完全消失.这种导致社区内部连边数目大大减少或者消失,使得其与社区之间的连边数目相当,模糊掉社区边界,进而抵消网络的局部聚集特性(即社区内部边的密度高于社区之间边的密度的社区效应)的粗化现象就是过粗化.过粗化将严重影响社区发现质量.因此,本文在设计TMLCD算法时,采用设置标志位的值(如算法1中“F<2”,该限定值以2为临界且为经验值,其可通过简单地试探回溯方法进行确定)来控制一个节点所在的三角形中被选作粗化对象的数目,有效防止了过粗化现象的产生.Page84实验4.1实验数据及运行环境TMLCD算法是基于三角形内点同一社区性粗化策略实现的,因此本实验将分成两组分别进行测试:第1组将测试基于三角形内点同一社区性粗化策略的性能及其对网络基本社区结构的保持能力,并对比基于极大匹配选边粗化策略,测试其对单层粗化过程性能的改善;第2组将对比目前可有效挖掘大规模网络社区结构的算法Graclus、PMetis、MMLSC[26]和GEM[27],测试TMLCD的社区结构分析性能.所有实验均运行于配置为2.67GHzCPU、24核处理器且内存为48GB的Linux机器上,且所有算法均基于Java语言实现.实验数据采用斯坦福大学提供的真实社会信息网络数据负载[23],并根据实验需求分成4组,前两组用于第1组实验测试,后两组用于第2组实验测试,每组数据的具体信息分别列于表1、表2、表3和表4中.目前的TMLCD(或TTCA)仅限于分析数据-图Collaboration-GCEmail-GEFlickr-GF数据-图节点数Actor5131651637860Google216872328917数据-图FacebookGrQcHepThHepPhAstroPhBrightkiteGowallaPatents数据-图DBLPAmazonYouTubeOrkutLiveJournalTwitter非重叠性社区结构或者重叠性较弱的社区结构.因此,在运用上述各表中数据做社区发现之前,需先将各网络中的重叠社区部分作适度的去重叠化处理.4.2TTCA性能评测为了测试基于三角形内点同一社区性粗化策略的性能,并对比分析基于该策略实现的单层粗化算法TTCA的性能,本组测试先将已有的多层社区发现算法中基于极大匹配选边粗化策略的单层粗化过程定义为极大匹配选边粗化算法MMSEA.具体的实验步骤如下:先对表1中3个规模相对较小的社会信息网络数据(这里仅需对比单层粗化算法TTCA和MMSEA的性能,因此数据规模要求可适度降低)构建无向图GC、GE和GF;然后分别运用TTCA和MMSEA对图GC、GE和GF进行粗化得到图GTC、GTE、GTF和图GMC、GME、GMF(这里要求经两种算法粗化后得到的图的规模相当);最后采用基于遗传算法的社区发现算法GA-Net对上述所有粗化图进行社区发现并对比实验结果.由于表1中的数据规模较小,因此本测试可采用GA-Net直接分析3个网络图GC、GE和GF上的社区结构,并将该社区发现结果作为基准社区以对比TTCA和MMSEA性能.GA-Net的具体参数设定如下:种群规模为500,一共遗传50代,每代交叉率为0.8,突变率为0.2,遵循轮转选择法则,并按照种群规模10%的比例选择精英个体直接复制到下一代.为了对比TTCA和MMSEA的粗化结果对社区发现精度的影响差异,这里采用归一化互信息NMI[28](NormalizedMutualInformation)进行精度测量.NMI是一种相似度度量指标,由Danon等人[28]证明可用于度量两种社区划分结果的相似程度,即若两个社区发现结果相同,NMI值为1,若完全不同,NMI值为0,其定义如式(6)所示:式中:Ω和C分别代表两种不同社区发现结果,即Ω=(ω1,ω2,…,ωk),C=(c1,c2,…,cj),I代表互信息,H代表信息的熵,其形式化定义分别如式(7)和式(8)所示:I(Ω,C)=∑k∑jH(Ω)=-∑kPage9实验中,将经TTCA粗化得到的图GTC、GTE、GTF和经MMSEA粗化得到的图GMC、GME、GMF分别通过算法GA-Net进行社区发现,再基于上述的基准社区分别代入式(6),计算其各自对应的NMI值(NMITTCA和NMIMMSEA)并列入表5中.对比表5中的每一列数据可以看到,NMITTCA值均显著优于NMIMMSEA值,且较接近于1,说明在不做调优处理的情况下,基于TTCA粗化得到的网络图所发现的社区与基准社区很相近,即基于三角形内点同一社区性的粗化策略充分保持了网络粗化前后其基本社区结构的一致性,因此可以显著改善多层社区发现算法的性能,提高社区发现精度.而MMSEA不能保证上述结论,其较低的NMIMMSEA值显示,经过MMSEA粗化后的社区发现结果与基准社区相差较大,因此反粗化阶段需调用大量的调优工作以提高多层社区发现算法的计算精度.NMINMITTCANMIMMSEA此外,为了证明TTCA在分析节点度服从幂律分布的社会信息网络时性能优于MMSEA,测试又针对表2中列出的两个服从幂律分布的大规模网络Actor和Google,分别采用TTCA和MMSEA作逐层迭代粗化.两种粗化算法逐层迭代生成的粗化图Gi上的节点数和边数,相较于初始网络图G0上的节点数和边数,其比率变化如图7所示(该比率是|VGi|/|VG0|或者|EGi|/|EG0|,而不是粗化缩减比率|VGi|/|VGi+1|或者|EGi|/|EGi+1|,但两者反映的算法粗化本质是一致的).从图7中可以看到,同一横坐标下,经过相同层数的粗化,MMSEA保留的节点数和边数大于TTCA;同一纵坐标下,要达到相同的粗化程度,MMSEA需经过更多次迭代粗化操作,这充分说明了采用基于三角形内点同一社区性粗化策略的TTCA其粗化幂律分布网络的能力高于MMSEA,并以大于2的高粗化缩减比率(该值可通过计算(|VGi|/|VG0|)/(|VGi+1|/|VG0|)或(|EGi|/|EG0|)/(|EGi+1|/|EG0|)得到,而MMSEA的粗化缩减比率小于2)加快了网络粗化过程.另外,图7中MMSEA比率折线的渐近值明显高于TTCA比率折线的渐近值.实验结果表明:TTCA的基于三角形内点同一社区性粗化策略,以及依度值排序、从低到高地选择节点并开始由边缘向中心逐渐推进式的遍历三角形的粗化方式,有效地避免了MMSEA极大匹配选边的随机性以及因度高节点的中心占优势而引起的粗化过程提早终止的现象,适用于分析具有幂律分布特性的大规模社会信息网络.4.3TMLCD性能评测首先,针对表3中的8个数据集,我们先来测试TMLCD的可适用范围,即网络中包含三角形的数目比例对于TMLCD社区发现性能的影响.由于表3中的网络数据规模大小不一,且多数规模适中,我们仅通过TMLCD挖掘各网络社区结构的精度来分析和估量TMLCD的适用场景.实验过程中我们采用两个社区发现质量评估函数:归一化互信息NMI和兰德指数RI[29](RandIndex,其定义如式(9)所示,式中TP、TN、FP和FN的具体含义可参见文献[29],且RI值越大表示算法的社区发现精度越高)来同时测量TMLCD的计算精度,并将结果NMI值和RI值列入表6中.分析表6中的计算精度NMI值和RI值,很明显TMLCD在各社会信息网络上的社区发现结果质量普遍很高,除了网络Patents;再来回顾表3中Page10数据-图FacebookGrQcHepThHepPhAstroPhBrightkiteGowallaPatents各网络的数据信息,对比于其他社会信息网络,Patents包含的三角形数目明显少于边的数目,而其他网络包含三角形的数目均大于边的数目.因此,根据网络数据信息的统计和计算精度结果的分析,可以粗略估计TMLCD适用于富含三角形的社会信息网络社区结构分析,即适用于所包含三角形的数目大于边的数目(或至少与边的数目相当)的社会信息网络分析.其次,针对表4中所列的6个大规模社会信息网络,我们测试TMLCD计算精度、运行时间以及内存占用3个方面的性能,并对比于4个可扩展挖掘大规模社会信息网络社区结构的算法Graclus、PMetis、MMLSC[26](Graclus、PMetis和MMLSC是3种广泛使用的基于极大匹配选边粗化策略实现的多层社区发现算法)以及GEM[27](GEM是一种图8内存占用的比较图9运行时间的比较社区发现抽样近似算法,并非多层社区发现算法)的性能.本组测试将选择如下两个具有代表性的社区评分函数[23]来度量各算法计算结果精度的优劣:(1)InternalDensityFunction(IDF).(2)NormalizedCutFunction(NCF).F(C)NCF=以G=(V,E)表示一个无向图,n=|V|为图中的节点数,m=|E|为边数,C代表图上的一个子图社区,nC为社区C中的节点数,mC为社区C中的边数,bC为社区C中位于边界的边数,即bC=|{(u,v)∈E:u∈C,vC}|.上述式(10)中F(C)IDF表示社区C内部边的连接密度的大小,其值越大表示社区划分效果越好;式(11)中F(C)NCF表示社区C与其他社区之间的分离程度,其值越小表示社区划分效果越好.通过计算上述评分函数来分别测试TMLCD、Graclus、PMetis、MMLSC以及GEM的社区发现质量,并对比各算法的时间和空间复杂度,其实验结果分别如图8、图9和图10所示.Page11图10社区发现质量的比较分析图8中的实验结果,TMLCD的系统内存占用远低于Graclus、PMetis和MMLSC,其原因在于单层粗化算法TTCA的粗化缩减比率比MMSEA高,即在相同粗化程度要求下,TMLCD所需的迭代粗化次数和每层需要保存的网络信息量要远小于Graclus、PMetis和MMLSC.而GEM的系统内存占用不仅低于Graclus和PMetis,甚至低于TMLCD,主要是因为GEM的抽样近似大大缩减了其所需存储的网络信息量.另外,基于Amazon网络的实验结果显示,TMLCD的内存占用较高,较接近PMetis,原因是Amazon包含的三角形数目较少(明显少于网络中边的数目,与表6中实验结果的分析结论一致),可选作粗化对象的三角形数目相对较少,因此极大地限制了TMLCD的性能优势,即系统需要经过更多次的迭代粗化来缩减网络规模和更多的内存空间来存储反粗化时所必需的网络信息.MMLSC在粗化阶段基于模块度增益的选边策略需要不断选择和排除共边节点对,因此系统内存占用高于PMetis,但相对于采用高计算复杂度的kernelk-means作为反粗化调优算法的Graclus,其内存空间使用要低.同理,在分析规模为17M的Twitter网络时,由于Graclus内置的kernelk-means反粗化调优算法严重阻碍了其分析超大规模网络的可扩展性能,因此图8中的Twitter网络未显示Graclus的内存占用结果.对比图9中的实验结果,TMLCD的运行时间远小于Graclus、PMetis和MMLSC,原因是实验预处理已将所有社会信息网络转变成了不包含重叠社区(或社区重叠性较弱)的网络,TMLCD在分析这些网络时,可对初始社区发现结果直接作反粗化还原而无需任何的调优处理,加之TMLCD具有高粗化缩减比率和网络基本拓扑结构的高保持度,因此大大降低了其时间损耗;而Graclus、PMetis和MMLSC反粗化阶段需要大量的调优工作来重新界定由复合节点展开的自由节点的社区归属性,因此它们的时间复杂度较高.图9中Graclus运行时间高于PMetis和MMLSC的主要原因是Graclus采用了更加复杂的kernelk-means算法分析网络,导致了高额的时间开销,而且Twitter网络仍未能显示Graclus的运行时间结果;MMLSC运行时间高于PMetis的原因在于MMLSC需要额外计算模块度增益来匹配选择可被粗化的共边节点对.虽然抽样近似加快了GEM发现大规模网络社区的速度,但图9中GEM的时间损耗仍高于TMLCD,这是因为TMLCD省去了大量反粗化调优计算过程,而GEM却需要大量的调优工作来降低其抽样近似误差,以提高社区发现精度.另外,基于Amazon网络的运行时间再一次验证了TMLCD适用于分析富含三角形的大规模网络(参见表4中数据,Amazon包含的三角形的数目明显小于边的数目).图10中对比显示了Graclus、PMetis、MMLSC、GEM和TMLCD在分析大规模社会信息网络社区结构时的质量评估函数值IDF和NCF的计算结果.对比分析图10中的直方图,除了网络Amazon以外,TMLCD的计算精度性能均高于Graclus、PMetis、MMSLC和GEM.Amazon网络不在此列的原因是Amazon包含的可选作粗化对象的三角形数目较少,限制了TMLCD的计算性能优势;而Twitter上Graclus性能结果的再次缺失,仍是因为其内置的kernelk-means算法具有过高的计算复杂度.相对于PMetis,Graclus内嵌的kernelk-means反粗化调优算法和MMLSC内嵌的基于模块度增益选边算法使得其二者具有明显的计算精度优势.GEM虽然具有较高的可扩展性,适合分析大规模甚至超大规模网络,但却是一种随机抽样近似方法,极易丢失网络中的社区结构信息,其社区发现结果Page12精度低于TMLCD.因此,基于三角形内点同一社区性的粗化策略以对网络基本社区结构的高保持度,极大地提高了TMLCD计算大规模社会信息网络社区结构的精度.5结论与展望本文提出了一种面向大规模社会信息网络的基于三角形的多层社区发现算法TMLCD.该算法采用基于三角形内点同一社区性的粗化策略,将网络上遍历到的三角形3个顶点融合形成一个复合节点来实现粗化,不仅从基本拓扑结构上保持了初始网络的社区效应,提高了社区发现精度,而且以大于2的粗化缩减比率加快了网络粗化过程,节省了系统的运行时间与空间开销,同时其反粗化阶段无需大量的调优工作,进一步降低了算法整体的计算时间复杂度.实验结果表明,TMLCD在计算精度、内存占用以及运行时间三个方面的性能均优于PMetis、Graclus和MMLSC,适用于分析富含三角形的大规模社会信息网络.未来我们将在反粗化阶段引入分离重叠社区的调优算法,使得TMLCD可以发现不同划分度要求下的自然社区,或改进设计TMLCD,使之可以分析重叠社团,拓展其应用需求,亦或基于MapReduce实现TMLCD的并行化计算,进一步提升其扩展分析超大规模社会信息网络的能力.
