Page1一种基于运动矢量空间编码的HEVC信息隐藏方法1)(中国科学院声学研究所南海研究站海口570105)2)(中国科学院声学研究所国家网络新媒体工程技术研究中心北京100190)3)(清华大学电子工程系北京100084)摘要HEVC(HighEfficiencyVideoCoding)是ISO/IEC和ITU-T联合制定的最新的视频编码标准,该文提出了一种基于运动矢量空间编码的HEVC信息隐藏方法.文中首先给出了运动矢量空间的构建及编码方法,并定义了运动矢量集合与该空间中点的映射关系;其后,给出了通过修改运动矢量集合映射值进行信息隐藏的方法.文中的方法实现了在N个运动矢量分量中最多改变一个分量即可嵌入一个2N+1进制数的效果,具有较高的嵌入效率.此外,文中的方法仅选择CTU(CodingTreeUnit)中尺寸最小的N/2个PU(PredictionUnit)的运动矢量作为嵌入载体,使得隐写所引入的视频附加失真进一步减小并提升了隐写的透明性.最后,通过实验证实了该文的方法可行且具有优良的性能,具有良好的应用前景;而且,该文通过构造虚拟空间进行信息隐藏,给出了一种提升视频信息隐藏算法嵌入效率的新途径.关键词视频编码;HEVC;信息隐藏;运动矢量;空间编码1引言信息隐藏技术利用人的感觉器官对数字信号的感觉冗余,以数字媒体或数字文件(包括声音、图像、视频等)为载体,通过一定的算法将秘密信息隐藏在载体信息中,以达到不易于被人的知觉系统所察觉为目标.根据应用场景的不同,信息隐藏技术可分为数字水印与隐写术两大类.数字水印将版权等信息嵌入到载体中,以表示内容所有者具有的合法权益,防止内容被篡改.隐写术则将秘密信息嵌入到载体中,以达到隐蔽通信的目的.在互联网时代,视频信息隐藏技术具有很重要的作用,它可以防止视频内容被非法传播、保护信息完整性以及监控并记录视频内容在互联网上的传播与分发等.视频信息隐藏方法根据秘密信息嵌入位置的不同,可大致分为两类:其一是将视频视为运动图像,按照一定强度把秘密信息隐藏在视频帧像素之中.这类方法易于理解,但压缩编码后嵌入的信息可能会丢失,而且会造成较大失真;其二是在图像或视频编码过程中嵌入秘密信息,结合编码标准某方面的特性,找到合适的信息嵌入位置,最后通过改变编码过程中的某些中间结果实现秘密信息嵌入.由于视频一般经过压缩编码后再进行传输或存储,因此第二类方法具有较大的应用价值,获得了较多关注.但是,目前的主流视频编码标准如H.26X、MPEG-X等都具有较高的压缩率,经过压缩编码的视频其数据冗余基本被去除,这使得在压缩视频流内部要嵌入较多的数据时有着较高的难度.从现有的文献看,目前该类型信息隐藏算法大多结合压缩编码某方面的特性进行;如较多地利用了帧内预测、DCT变换、熵编码、运动估计等编码环节进行信息隐藏.利用帧内预测编码环节进行信息隐藏已有较多方法见诸报道[1-6].这些方法虽然实现方式各异,但实质上都是通过修改帧内编码预测模式进行信息隐藏.该类方法只能在I帧中嵌入信息,由于视频序列中I帧的比例较低,因此该类方法嵌入容量比较有限.利用DCT变换进行信息隐藏的方法[7-8]则一般选择在整数变换和量化后所得的数值较大的非零DCT系数中进行秘密信息的嵌入.由于这种系数通常数量比较少,所以该类方法的信息嵌入容量也不是很高.利用熵编码进行信息隐藏一般通过修改基于上下文自适应的二进制算术编码或自适应变长编码的某个编码码元进行[9-14],该类方法会引入较大的失真,严重时甚至会导致解码失败.基于运动估计的信息隐藏方法[15-22]则通过修改运动估计得到的运动矢量或调整运动矢量的搜索过程进行隐藏.由于运动估计的失真在补偿步骤会被编码传输,而且运动估计本身就存在较大的误差,因此基于运动估计进行信息隐藏对重建帧的视频质量产生的附加失真较小.同时,由于P及B帧是视频序列的主要帧型,因此运动矢量的数量很大,能实现较大的嵌入容量.鉴于此,基于运动矢量调制的信息隐藏技术得到了广泛的研究.在早期的工作中,一般通过直接修改运动估计得到的运动矢量进行信息隐藏[15-19].这些方法一般相对比较简单,其主要思想是修改运动矢量使得其幅值或相角等满足某些特定规则达到信息隐藏的目的.近期,文献[20]在前人的基础上提出了一种较为新颖的方法,该方法以运动矢量的预测误差作为载体运动矢量的选取依据,通过直接替换满足阈值条件的运动矢量的最低有效位(LeastSignificantBit,LSB)来嵌入信息.文献[21]也具有一定的新颖性,它通过调整运动矢量水平与垂直分量的奇偶性来嵌入秘密信息.最近,还有一些在视频编码过程中通过修改运动搜索范围来实现信息隐藏的新方法.如Zhu和Swaraja等人[22-23]提出的大容量H.264/AVC视频隐写算法,将搜索点分成两个集合,分别表示秘密信息0和1,在1/4像素精度的运动搜索过程中实现信息隐藏.此外还有其他无法归入上述4大类的方法,例如基于IPCM模式的编码宏块进行信息隐藏的方法[24-25],利用编码块的大小进行信息隐藏的方法[26-28],以及综合使用上述某几种方法进行信息隐藏的方法[29-30]等.伴随着数字视频产业的快速发展,高清视频在日常应用中愈加普及,市场上也逐渐产生了分辨率更高的超清格式(如4K×2K,8K×4K等).同时,由于网络和视频点播等业务的发展,视频高效传输的需求也越来越大.这些新需求,对视频编码的清晰度、帧率和压缩率提出了更高的性能要求.当前,广泛应用的H.264/AVC已然无法满足.为此,ITU-TVCEG(VideoCodingExpertsGroup)与ISO/IECMPEG(MovingPictureExpertsGroup)于2013年2月正式联合发布了下一代编码标准H.265/HEVC(HighEfficiencyVideoCoding).HEVC具有良好的并行处理架构,大幅提高了处理高分辨率视频的Page3能力.除此之外,HEVC具有更高的压缩率,且支持数据丢失恢复,降低了传输难度.与H.264/AVC相比,HEVC更能适应日益多样的高清网络视频服务,可以预期在未来将取代H.264/AVC,成为新的视频主流压缩编码标准并得到广泛应用.这就带来了如何有效保护HEVC编码视频内容的版权保护问题.因此,研究基于该标准的信息隐藏方法具有非常重要的意义,将有利于该标准的应用推广.HEVC与H.26X及MEPG-X等标准一样,都使用了混合编码方法.它在编码器中集成了帧内预测、运动估计与补偿、变换、量化、编码等环节[31].因此上文所述的视频信息隐藏方法的思路也可以应用于HEVC,即可在编码过程中结合编码器的某方面特性进行秘密信息嵌入.然而HEVC在技术细节上进行了大量的改进与创新,例如,使用变换单元、预测单元和编码单元替代了H.264/AVC中的宏块,而且各个单元具有更加灵活的尺寸.如以预测单元为单位并引入了合并(Merge)模式进行运动估计等.这些新特性决定了前述的视频信息隐藏方法无法直接应用于HEVC.因此,很有必要针对HEVC的编码特性设计相应的信息隐藏方法.由于HEVC提出的时间不长且相当复杂,当前HEVC视频编码标准的信息隐藏技术研究可以说正处于起步阶段.根据我们的调研,目前尚未见公开发表的相关文献.在上述主要的压缩视频信息隐藏方法中,我们认为基于运动矢量进行信息隐藏的方法具有较大的优势,本文我们也将结合这一视频压缩编码特性,给出一种面向HEVC的高效视频信息隐藏方法.具体而言,本文以HEVC视频编码过程中的运动矢量为载体,通过构造与运动矢量具有映射关系的N维运动矢量空间,达到了在N个运动矢量分量中最多改变一个分量就可以嵌入一个2N+1进制数的效果,具有很高的嵌入效率.另外,本方法使用密钥完成秘密信息的嵌入与提取,并只选择尺寸较小的PU(PredictionUnit)的运动矢量作为嵌入载体,使算法具有较好的透明性和抗隐写分析性能.2HEVC的数据划分与运动估计HEVC摒弃了H.264/AVC中宏块的概念,使用编码树单元CTU(CodingTreeUnit)、编码单元CU(CodingUnit)、预测单元PU以及变换单元TU(TransformUnit)对视频帧数据进行划分与处理.其中最大处理单元是CTU,类似H.264/AVC中的宏块.每个CTU能够递归地分解成CU,一个CU包含若干不同尺寸的PU,每个PU又能够划分成一个或多个TU,每一种处理单元都有比H.264/AVC的宏块尺寸更丰富、更灵活的分割模式.CTU根据四叉树结构分解成一个或多个CU.HEVC中每帧图像采用帧内或帧间的预测方式是由CU层次决定的.根据预测模式的决策,CU会进一步被拆分为PU,最终以PU为单位执行预测过程.图1中以树的形式说明了一个CTU划分成CU、PU的例子.这个例子中,树的根部是大小为64×64的CTU,依次向下逐渐分解成更小块的CU、PU.位于叶子节点的PU具有不同的分块大小.HEVC的帧间预测支持对CU进行4种模式的对称拆分:PART_2N×2N、PART_2N×N、PART_N×2N以及PART_N×N.同时也支持4种非对称拆分模式,此时将CU分成两个不同大小的PU:PART_2N×nU、PART_2N×nD、PART_nL×2N、PART_nR×2N.全部划分模式如图2所示.运动估计与补偿技术广泛应用于视频压缩的帧间预测环节,用于消除视频的时域数据冗余以提升编码压缩率.运动估计技术将视频序列中要进行帧间预测的图像分割成多个互不重叠的块,然后为每个块在参考帧的某个搜索范围内搜寻与其最相似的Page4匹配块,匹配块到当前块的位移即为运动矢量.运动矢量是一对包含水平与垂直分量的整数犱=(x,y),如图3.记像素坐标为(i,j)的匹配块图像值为fm(i,j),当前块实际图像值为fc(i,j).在经过运动矢量犱=(x,y)的补偿后,得到当前块的预测值为fc(i,j)=fm(i+x,j+y).视频编码过程中的帧间预测过程可以描述如下:首先计算出预测运动矢量犱pred;以预测运动矢量为起点在参考帧中进行运动搜索,找出最佳匹配块,得到运动矢量犱;最后减小码流规模,只将犱pred与犱的残差数据Δ犱编码并写入码流.HEVC的运动搜索过程与H.264/AVC等其他视频编码标准相似,支持四分之一像素精度的亮度块运动搜索.对于每个块,首先搜索整数像素的位置,然后搜索最好的整数像素位置周围的半像素位置,最后搜索半像素位置周围的四分之一像素位置,以找到的最佳匹配点来计算运动矢量.搜索过程中需要评判当前块fc与搜索块fs的匹配程度,通常使用最小均方误差、最小平均绝对值误差等匹配准则.运动搜索是整个编码过程中计算成本最高的环节之一,为了降低计算量,HEVC引入了运动合并这一新概念,处于合并模式的PU可用其相邻PU的运动矢量推导其运动矢量,不再进行运动搜索.使用该技术进行运动矢量预测的PU在编码过程中被标记为Merge模式.从上文中我们不难看出运动估计本身就是一个不精确的过程,即通过运动估计得到的运动矢量本身就是一个估计值,这就为信息隐藏提供了很好的机会.3运动矢量空间编码假设在HEVC编码过程中,一个使用帧间预测模式的CTU中有m个运动矢量,每个运动矢量包括水平分量h和垂直分量v,表示为犱i=(hi,vi),i∈{1,…,m}.运动矢量的取值范围与HEVC的运动搜索参数相关.该CTU中包含的所有运动矢量分量组成如下集合:MV=(h1,v1,h2,v2,…,hm,vm).从该运动矢量分量集合中取出N(Nm)个元素构成一个运动矢量分量N元组:犆=(c1,c2,…,cN),其中每个元素ci,i∈{1,…,N}都是从集合MV中取出的运动矢量分量.最后,使用式(1)对集合犆中的元素进行处理,最终得到一个2N+1进制数集合τ=(x1,x2,…,xi,…,xN):xi=y(ci)=ciMod(2N+1),烄烅(ciMod(2N+1)+2N+1)Mod(2N+1),ci<烆以τ为坐标集,xi作为第i维坐标,可以构造出一个N维立体空间,我们称之为运动矢量空间,用符号Γ表示.显然,对于任意给定的N元组τ,它将对应Γ中的一个点,该点的点值用函数f(x1,x2,…,xi,…,xN)表示.所有Γ空间中的点构成一个N维空间点阵,空间中每个维度的坐标有2N+1个值,取值范围为{0,1,2,…,N}.下面,我们给出对Γ空间中的点进行赋值的过程.Step1.对Γ空间中第一维数轴上的点进行赋值:Step2.将第一维数轴上点的值扩散到二维平面:f(x1,x2)=(f(x1)+2x2)Mod(2N+1)(3)Step3.将二维平面上点的值扩散到三维空间:f(x1,x2,x3)=(f(x1,x2)+3x3)Mod(2N+1)(4)StepN.将N-1维空间上点的值扩散到N维空间:f(x1,x2,…,xN)=(f(x1,x2,…,xN-1)+NxN)Mod(2N+1)(5)我们称上述运动矢量空间中点的赋值过程为运动矢量空间编码.下面,我们以N=3为例,给出基于上述方法的运动矢量空间构造过程:首先,N=3时,根据式(1)可知空间坐标范围为{0,1,…,6},根据式(2)代入坐标值,可得到第1维数轴x1上的点的取值如图4(a);接下来,根据式(3),将第1维数轴上点的值扩散到二维平面,得到二维点阵如图4(b);最后,首先构造3维空间坐标系,然后根据式(4)将图4(b)所示二维平面上点的值扩展到三维空间,得到的三维点阵如图4(c)所示.图4(c)即为N=3时的运动矢量空间Γ,显然Γ中的点都有一个2N+1进制数取值.Page5图4N=3时不同维度的点阵下面我们证明Γ空间具有如下重要性质.性质1.采用运动矢量空间编码得到的N维空间点阵中每个点的值可简化计算如下:f(x1,x2,…,xN)=证明.据运动矢量空间编码方法与式(2)~(5),可得f(x1,x2,…,xN)=(f(x1,x2,…,xN-1)+NxN)Mod(2N+1)=(((f(x1,x2,…,xN-2)+(N-1)xN-1)Mod(2N+1))+NxN)Mod(2N+1)=…=((x1Mod(2N+1)+2x2)Mod(2N+1)+…+NxN)Mod(2N+1).令J1=(x1Mod(2N+1)+2x2)Mod(2N+1),把x1提到等式左边可得x1=(J1+(2N+1)M1-2x2)+(2N+1)M2,其中M1、M2为整数.将上式代入(x1+2x2)Mod(2N+1),可以得到(x1+2x2)Mod(2N+1)=(((J1+(2N+1)M1-2x2)+(2N+1)M2)+2x2)Mod(2N+1)=…=J1,从而证明(x1+2x2)Mod(2N+1)=(x1Mod(2N+1)+2x2)Mod(2N+1).以此类推,从而得到f(x1,x2,…,xN)=((x1Mod(2N+1)+2x2)Mod(2N+1)+…+NxN)Mod(2N+1)=…=(x1+2x2+…+NxN)Mod(2N+1).对于任意给定的N维运动矢量空间Γ中的点P=(x1,x2,…,xN),假设其第i个维度的坐标为xi,则我们称点B+i=(x1,x2,…,x-B-的领域节点,其中x+显然,点P总共有2N个领域节点,如图4(c)中,位于空间中部加粗标记的数字3所在空间节点在第1个维度的领域节点是1和5,第2个维度是2和4,第3个维度是0和6,这些邻域节点在图中以单下划线标记;而位于空间边缘同样加粗标记的数字1所在空间节点在第1个维度的领域节点是6和3,第2个维度是0和2,第3个维度是5和4,这些邻域节点在图中以双下划线标记.通过观察,可以发现每个点及其所有领域节点的取值互不相同,而且这些点的取值构成连续整数集合{0,1,…,2N}.Γ空间的这一现象是本文方法的重要理论基础,因为这保证了对于任意空间点P我们最多只对一个维度的坐标值进行加1或减1操作,就可以使其取值等于任意给定的2N+1进制数.在理论上我们也可以证明这一结论.根据性质1,可以计算出点P的值设为f(x1,x2,…,xk,…,xN)=(x1+2x2+…+NxN)Mod(2N+1),令(x1+2x2+…+kxk+…+Page6NpN)=K(K为整数),则P点的取值为KMod(2N+1).设P在第i(i∈{1,2,…,N})个维度上的邻域节点为B+x2,…,x+NxN)Mod(2N+1)=(x1+2x2+…+i(xi+1)+…+NxN)Mod(2N+1)=(K+i)Mod(2N+1).用类似的方法可得B-x2,…,x-变化到N时,所有B+域节点.根据i的取值范围,由P及其邻域节点的点值组成的集合:V={(K-N)Mod(2N+1),…,(K-1)Mod(2N+1),KMod(2N+1),(K+1)Mod(2N+1),…,(K+N)Mod(2N+1)}.显然,集合V中一共包含2N+1个元素,且当K和N的值确定后这些元素可以和整数集合{0,1,…,2N}中的整数一一对应.因此,对于任意给定的正整数D∈{1,2,…,N}以及运动矢量空间Γ上的任意点P,若P的点值不等于D,则P点的邻域节点中必定存在一点B,使得f(B)=D;且由于点B是点P的邻域节点,只需对点P某一维度的坐标进行加1或者减1操作,即可得点B.因此,对于给定的2N+1进制数D,至多对N元组中的一个元素进行幅度为1的修改,就能使其取值为D.这是本文嵌入算法的重要理论基础.由于1个2N+1进制数包含Log2(2N+1)个比特,因此,在理论上本文方法可通过最多修改1个运动矢量分量嵌入Log2(2N+1)个秘密信息比特.下面我们给出具体的秘密信息嵌入及提取算法.4信息的嵌入和提取本文提出的信息隐藏算法以HEVC的运动矢量作为载体.为了进一步提高算法的安全性及更灵活的控制嵌入过程,我们仅选择部分PU的运动矢量作为载体,并引入嵌入强度用于控制秘密信息的嵌入容量.对于入选为载体的运动矢量,本文的方法首先构建运动矢量N元组犆,用犆在运动矢量空间中的映射值表示秘密信息,从而将秘密信息嵌入到P帧或者B帧运动矢量中.4.1运动矢量犖元组的选取与空间映射本文方法以CTU作为信息嵌入的基本单元,嵌入信息前,首先要根据预先设定的嵌入强度判断是否在该CTU进行信息嵌入.嵌入强度e是一个在[0,1]中的小数,它是CTU是否进行信息嵌入的概率,例如当e=0.5时表示每个CTU将有50%的概率被选为信息隐藏载体.进行信息隐藏时,对于每个CTU首先会由随机小数生成器G生成一个随机小数r,如果r小于e则该CTU将被选中.为了嵌入的秘密信息gbin能够正确提取,随机小数生成器G在嵌入端和提取端须使用相同种子进行初始化.该种子一般作为密钥,由信息嵌入者通过其他信道告知秘密信息提取方.如果CTU被选为嵌入载体,则将由r计算出本CTU进行信息隐藏所对应的运动矢量空间维度数N,即在隐写过程中运动矢量空间是变化的,这样做的目的是为了进一步提高算法的安全性.得到N之后,还要判断该CTU包含的非Merge及Skip模式的运动矢量数量是否大于N/2个,如果不是那么该CTU仍然不能作为嵌入载体,否则,选出该CTU中最小的N/2个PU所包含的运动矢量作为载体,用这些选中的PU的运动矢量作为信息隐藏载体.通过上述方法,我们将可能由于隐写而被修改的运动矢量限制在尺寸最小的那些PU中,实质上是限制了运动矢量修改的图像区域的影响范围,有利于降低隐写对视频质量的影响.经过选择,被用于隐写的CTU将得到N/2个PU.将这些入选的PU的运动矢量的水平和垂直分量看作两个独立整数,那么这N/2个入选PU的运动矢量的水平与垂直分量将组成一个包含N个整数的集合,本文称之为运动矢量N元组犆=(c1,c2,…,cN).当运动矢量N元组确定后,根据式(1)可将其转换为N维运动矢量空间坐标τ=(x1,x2,…,xN).该转换实质上是将N元组映射为运动矢量空间Γ中的点τ=(x1,x2,…,xN),该点的运动矢量空间编码值f(x1,x2,…,xN)∈{0,1,…,2N}可根据性质1求得.这样,就将运动矢量N元组映射成了一个在[0,2N]范围内的整数D1,本文称之为运动矢量N元组的映射值.本文方法的实质即通过修改N元组中的元素值,使N元组的映射值变得与要嵌入的2N+1进制数相同以达到嵌入信息的目的.由于对N元组中某个元素进行加1或减1的操作,就能够使N元组映射成一个与D1不相等但仍在[0,2N]范围内的整数D2.所以,本文方法对原始运动矢量的修改幅度是非常小的.此外,由于构成N元组的运动矢量来源于当前CTU中面积较小的那些PU,且隐写中对一个CTU只会改变其中一个PU运动矢量的一个分量.因此,使用本文方法进行信息隐藏对视频质量引入的扰动较小.Page7以图5中的CTU为例,图中标记在黑色粗框内的PU为Merge模式PU.假设运动矢量空间维度数N=8,则该CTU首先必须从所有以自身为根的PU中选出其中面积最小且非Merge及Skip模式的4个,在该示例中被选中的PU编号依次为10、11、13和15,在图中以阴影标记.入选的4个PU的运动矢量的所有分量将会用于构造该CTU的运动矢量N元组.用符号犱表示阴影PU的运动矢量,h和v分别表示水平分量以及垂直分量,则这些运动矢量能够表示为犱1=(h1,v1)、犱2=(h2,v2)、犱3=(h3,v3)以及犱4=(h4,v4);所有运动矢量分量构成了该CTU的运动矢量N元组犆=(h1,v1,…,h4,v4),改写为犆=(c1,c2,…,c8).这样就获得了该CTU用于信息隐藏的运动矢量分量集合,可以将其根据第3节中介绍的方法映射为Γ空间中的一个点.4.2秘密信息的嵌入秘密信息嵌入的过程实际上就是调整运动矢量N元组犆=(c1,c2,…,cN),使其在Γ空间中的映射值转化为2N+1进制数的秘密信息的过程.在嵌入之前,首先需要对秘密信息进行处理,将原为文本、图像或其他形式的秘密信息二值化,得到秘密信息比特流.记l=Log2(2N+1),在对一个CTU进行嵌入时,每次从秘密信息比特串中顺序取出长度为l的二进制串,假设为S=(sl,sl-1,…,s1),根据式(7)求出该二进制串对应的2N+1进制数F:如果N元组犆的映射值D与F相等,则犆中所有元素都不需要修改,隐写完成.否则,将遍历犆中的元素,对某个元素进行加1或减1操作,使修改后的运动矢量N元组犆的映射值D与F相等.综合PU选择过程的完整信息隐藏过程如算法1所示.算法1.秘密信息嵌入算法.图6给出了一个本文方法在HEVC编码视频序到进行秘密信息嵌入的例子.每一次嵌入时,首先选出一个CTU,然后计算空间维度数N,根据N的大小提取部分秘密信息.在这个例子中,秘密信息的总长度为10bits,每次用于嵌入的N值依次为2、8、4,因此秘密信息分3次嵌入到3个CTU中,便Page8可以完全嵌入.图中,入选的运动矢量位于阴影覆盖的PU上,黑色粗框表示最终修改的运动矢量所在的PU.以第2次嵌入为例,当前计算出的空间维度数N=8,对应的运动矢量N元组为犆=(-1,-2,30,15,0,0,11,19),使用式(1)得到犆对应的运动矢量空间Γ中的点为τ=(16,15,13,15,0,0,11,2),根据性质1可以计算出这一点的点值为f(16,15,13,15,0,0,11,2)=11,即当前CTU的运动矢量N图6对CTU进行秘密信息嵌入的例子使用本文方法进行信息隐藏后,携带秘密信息的运动矢量仍然被编码并作为HEVC压缩视频码流的中码元被存储或传输.4.3嵌入信息的提取嵌入信息的提取实质上是抽取HEVC压缩视频码流中的运动矢量,形成N元组并计算其在Γ空间中的映射值的过程.提取与嵌入过程一样,首先要判定当前CTU是否嵌入秘密信息.提取方以嵌入方提供的秘钥作为随机小数生成器G的种子,对每个CTU生成一个随机小数,如果这个随机小数小于嵌入强度,则该CTU被列入候选.此时,需进一步计算空间维度数N,方法与嵌入过程一样.若当前CTU中使用非Merge及skip模式的帧间预测的PU数量不足N/2,则该CTU没有携带秘密信息,不需进行信息提取.否则,从满足条件的PU中选出面积最小的N/2个PU,提取这些PU的运动矢量,图7对CTU进行秘密信息提取的例子元组根据映射规则对应的映射值D1=11.需要嵌入的秘密信息比特串为“1100”,根据式(7)计算出对应的2N+1进制数F=12.所以,最后将犆中的最后一个元素由19修改为20,使修改后的运动矢量N元组映射值D2=12.最终嵌入秘密信息后的运动矢量N元组为犆=(-1,-2,30,15,0,0,11,20),嵌入的秘密信息为“1100”.从本例中可以看出,本文的隐写方法对CTU的改动幅度较小.构成运动矢量N元组犆=(c1,c2,…,cN).根据式(1)将其转换为运动矢量空间坐标,基于该坐标使用性质1计算其映射值D,再将此映射值D转换成长度为l=Log2(2N+1)的二进制串M.所得的M即为在该CTU上嵌入的秘密信息比特串.抽取出所有被选为载体的CTU中的秘密信息后,再将所得二进制串依次连接起来即可还原出完整的嵌入秘密信息.对压缩后的HEVC视频进行秘密信息提取的详细过程如算法2所示.图7给出了在一段视频序列中提取秘密信息的例子,它与图6所表示的嵌入过程示例是对应的.每一次检测到CTU带有隐写信息后,首先计算空间维度数N,根据N的大小构建运动矢量N元组,然后计算、提取位于当前CTU中的部分秘密信息.图中,入选运动矢量位于阴影覆盖的PU上.以第2次提取为例,当前计算出的空间维度数N=8,对应的Page9运动矢量N元组为犆=(-1,-2,30,15,0,0,11,20),使用式(1)得到犆对应的运动矢量空间Γ中的点为τ=(16,15,13,15,0,0,11,3),根据性质1可以计算出这一点的点值为f(16,15,13,15,0,0,11,3)=12,即当前CTU的运动矢量N元组根据映射规则对应的映射值D=12,转换成二进制串后为“1100”.该二进制串即为当前CTU中嵌入的秘密信息.将所有隐写于CTU中的嵌入秘密比特都提取并连接起来,即可得到完整的嵌入秘密信息m=“101100101”.算法2.秘密信息提取算法.5实验为了充分评价本文算法的性能,我们将首先评估信息隐藏对解码视频造成附加失真及码率的增量情况,其次分析算法的嵌入效率,最后给出算法的抗隐写分析性能.在评估过程中,我们还将本文算法与一些从H.264/AVC移植过来的基于运动矢量的信息隐藏方法进行了比较.5.1实验说明由于HEVC刚刚被提出,根据我们掌握的文献,迄今尚未有HEVC信息隐藏的相关文献见诸报道.因此,为了便于比较,我们考虑移植一些H.264/AVC中典型的运动矢量信息隐藏方法到HEVC中.文献[20-21]是近年来比较典型的H.264/AVC运动矢量信息隐藏方法.虽然,由于数据划分方式的变迁,文献[20-21]中载体运动矢量的选择方法不能直接应用于HEVC,但是秘密信息的嵌入规则可以方便地应用于HEVC运动矢量信息隐藏.文献[20]嵌入秘密信息比特时,直接用秘密信息比特替换载体运动矢量的水平和垂直分量的LSB位,每个运动矢量可嵌入两个秘密信息比特.文献[21]嵌入时,修改水平分量或垂直分量使修改后的两个分量的奇偶性的异或结果与秘密信息比特一致,每个运动矢量嵌入一个比特.对算法进行抗隐写检测性能分析时,我们也使用了面向H.264/AVC运动矢量信息隐藏的检测方法.文献[32]是近年公开发表的、较为有效的H.264/AVC运动矢量调制隐写检测方法.本文基于文献[32]实现了适用于HEVC的运动矢量调制信息隐藏检测器,用于分析本文算法的抗隐写检测性能.本文基于HEVC的参考软件HM14.0实现本文算法及其他用于比较分析的算法.实验时,选取以下6个分辨率为1920×1080的HEVC常用测试视频序列进行测试:Cactus,BasketballDrive,BQTerrace,Kimono1,ParkScene和Tennis.编码时视频帧序列结构为IPP…,帧率为25帧/s,其他参数均采用HM默认设置.进行视频质量、码率、嵌入容量分析时,基于单一P帧进行,进行抗隐写检测性能分析时,每个序列编码100帧.实验时将记录利用本文方法且嵌入强度为1时被选为载体的运动矢量的位置信息,包括其所在的CTU及PU.然后,基于文献[20-21]中秘密信息嵌入映射规则以同一个PU的运动矢量为载体进行信息隐藏.本文实验对比了在使用相同载体时不同隐写方法对视频质量及码率的影响,以及不同方法的实际嵌入效率.除了嵌入强度为1时的情况,本文还测试本文算法嵌入强度为0.5及0.2时的性能以更全面的评价本文算法.为便于叙述,下文以ME1.0、ME0.5、ME0.2分别表示3种不同嵌入强度下的本文算法.5.2视频质量分析视频质量可以通过主观印象与客观评价两方面进行比较.主观印象主要强调直觉感知的图像是否存在人眼可见的严重失真;而客观评价是对视频质Page10量进行定量分析,具有多个不同标准.峰值信噪比PSNR(PeakSignaltoNoiseRatio)可以对视频质量进行有效的定量分析,广泛应用于视频质量客观评价.本文中使用PSNR作为指标,对进行信息隐藏后的视频进行视频质量客观分析.首先对视频质量进行主观评价分析.图8为序列Cactus和序列BasketballDrive使用不同信息隐藏方法进行秘密信息嵌入后与嵌入前的解码视频图像对照图.图中标记为“CLEAN”的行的图像表示未嵌入秘密信息时得到的解码图像,标记为REF[20]及REF[21]的行的图像分别表示采用文献[20-21]定义的秘密信息嵌入映射规则隐写后解码得到的图像.标记为ME1.0、ME0.5、ME0.2的行的图像则分别表示嵌入强度为1.0、0.5及0.2时,使用本文算法进行信息隐藏解码所得的图像.从图中可以发现,本文3种嵌入强度的隐写均未对解码视频图像造成明显的恶化,与未隐写得到的解码图像相比,视觉感官上并没有察觉到明显的锯齿、马赛克以及错位等.本文隐写方法同另外两种对比隐写方法相比,从主观感受上分辨不出差别,下面使用PSNR指标对视频质量进行客观比较.表1中列出了对6个HEVC序列没有嵌入秘密信息以及使用不同信息隐藏方法嵌入秘密信息后解码所得的视频图像的PSNR值,以评估信息隐表1使用相同载体时不同隐写方法对视频质量的影响分析序列CactusBasketballDriveBQTerraceKimono1藏算法对视频客观质量的影响.表中Y、U和V三个数据列表示没有进行信息隐藏时解码得到的图像在U37.9637.6937.9137.9137.9437.9442.1441.1142.0342.1442.1142.1738.9138.9138.9138.9138.9138.9140.4340.3940.8140.4340.4040.44Page11序列ParkSceneTennis亮度及两个色度通道上的PSNR值,标记为变化率的列为使用不同隐写算法时解码所得的图像在相应通道PSNR值相对于未隐写版本解码图像的变化率.从表中可以看出,在不同嵌入强度的本文的隐写方法中,大多数在嵌入强度为1.0时PSNR值变化较大,即视频失真程度较大,随着嵌入强度的降低,PSNR的恶化也会随之减小.这是由于嵌入强度降低意味着视频帧中被选为载体的CTU的数量将会下降,这意味着对原视频的改动区域变少,因此对视频质量的影响也会相应减小.同一序列下,不管在何种嵌入强度下本文方法对亮度分量的PSNR的影响都是最小的,远低于文献[20-21]的方法,与未隐写视频的PSNR最接近.在两个色度分量上,本文方法的PSNR的影响也基本保持一定优势.上述实验结果说明在改变同等数量的PU的运动矢量时,本文隐写方法对视频质量引入的附加失真要小于其他方法.这对保持隐写的透明性是非常有利的.表2使用相同载体时不同隐写方法的视频码率分析REF[21]BasketballDriveBQTerraceParkScene5.4嵌入效率分析本文将嵌入效率E定义为平均修改一个单位运动矢量分量时的秘密信息嵌入数量.例如某隐写方法对视频中的某一帧共嵌入秘密信息m比特,总共修改了n个运动矢量分量,则嵌入效率E=m/n.表3中列出了使用3种嵌入强度的本文的隐写方法以及两种对比隐写方法对6个HEVC视频进行信息隐藏的U38.7238.7038.7138.6338.7238.7241.4841.4741.4941.4941.4841.485.3码率分析由于信息隐藏过程对PU的运动矢量进行了修改,一般而言这种改变将会引起压缩码流码率的增加.表2中列出了对6个HEVC序列没有嵌入秘密信息、以及使用不同信息隐藏方法嵌入秘密信息后的码流码率情况.从表2中可以发现,在每一个序列中,嵌入强度为0.2的本文的隐写方法压缩后的视频流码率最低,与未隐写的视频帧最接近.随着嵌入强度的增加,视频码率也在增加,但是总体低于文献[20-21]隐写算法导致的码率增量.对6个序列的测试结果进行平均处理,ME1.0、ME0.5以及ME0.2的平均码率分别为1207.8kbps、1206.5kbps、1200.0kbps,而文献[20-21]的方法平均码率为1210.7kbps以及1210.0kbps.因此,本文的隐写方法在3种嵌入强度下的码率均低于两种对比的隐写方法.综上,可以说本文的隐写方法在视频质量附加失真及码率增量方面均优于文献[20-21]的方法.975.01302.0412.81786.4615.22168.4嵌入效率分析结果.表中最后一列即为嵌入效率.从表3中的数据可以看出,本文的隐写方法在不同嵌入强度下进行信息隐藏时,随着嵌入强度的降低,嵌入比特数也随之减少.但是,本文的方法的嵌入效率在绝大多数序列上均高于文献[20-21]的方法.这说明在同等载体修改量下,本文的隐写方法一般能够嵌入更多的秘密信息比特.Page12表3使用相同载体时不同隐写方法的嵌入效率分析序列CactusBasketballDriveBQTerraceKimono1ParkSceneTennis5.5抗隐写分析性能分析本节将对本文隐写方法的抗隐写分析性能进行评估.抗隐写分析性能是信息隐藏算法评估的重要指标,优秀的信息隐藏算法应该难于被隐写分析者所感知.本文采用文献[32]的隐写检测方法,将其从H.264/AVC标准移植到HEVC标准,用其对3种不同嵌入强度的本文的隐写方法以及两种用于对比的隐写方法的抗隐写分析性能进行了评估.对每一个视频序列,我们首先进行正常的HEVC压缩编码,然后解码得到未隐写载体的样本数据,标记为正样本.然后,再次对视频进行编码,并在编码过程中运用3种嵌入强度的本文的隐写算法以及文献[20-21]的方法进行信息隐藏.其后,仍然对视频码流进行解码,得到不同隐写算法处理后的样本数据,标记为负样本.完成以上步骤后,使用文献[32]的隐写检测方法对正负样本数据提取特征向量并构建检测器进行隐写检测,判断样本数据是否被嵌入秘密信息.实验结果如表4所示.根据表4,本文的方法在各种嵌入强度下进行信息隐藏时,检测准确率均在50%左右即基本等价于猜测.因此本文方法具有较高的隐蔽性.以序列BasketballDrive为例,当嵌入强度为1.0、0.5、0.2时,本文方法隐写的检测率分别为46.39%、51.03%、47.14%,两种对比隐写方法的检测率分别为50.67%和48.98%,本文的方法较优.以上结果说明本文方法具有较高的抗隐写检测性能.序列CactusBasketballDrive50.61BQTerraceKimono1ParkSceneTennis经过以上实验结果的讨论及分析,可以看出本文方法在视频附加失真、码率增量、嵌入效率以及抗隐写检测等方面均具有良好的性能.因此,本文为最新的视频编码标准HEVC提出了一种高效的信息隐藏方法.6结论本文提出了一种面向最新视频编码标准HEVC的信息隐藏方法.该方法通过引入运动矢量空间实现了高效的信息隐藏:对于作为载体的CTU中的N个运动矢量分量,最多只需对其中的一个分量进行加1或减1操作即可嵌入一个(2N+1)进制数.此外,本文方法还引入了可配置的嵌入强度、密钥、PU选取规则等,进一步提高了信息隐藏算法的隐蔽性.实验证明,本文方法在多个评价维度均具有良好的性能,为HEVC视频内容的保护及基于HEVC视频码流的隐蔽通信等应用提供了坚实的基础.
