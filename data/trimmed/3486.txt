Page1一种新型的社会网络影响最大化算法田家堂王轶彤冯小军(复旦大学计算机科学技术学院上海201203)摘要社会网络中影响最大化问题是对于给定k值,寻找k个具有最大影响范围的节点集.这是一个优化问题并且是NP-完全的.Kemple和Kleinberg提出具有较好影响范围的贪心算法,但其时间复杂度很高,不能适用在大型社会网络中,并且不能保证最好的影响范围.文中利用线性阈值模型的“影响力积累”特性,提出了一个该模型下影响最大化算法的框架,并在此框架基础上给出一个新的算法HPG.HPG综合考虑网络的结构特性和传播特性,首先启发式选择PI值最大的节点,然后寻找最具影响力的节点.实验结果显示HPG在最终影响范围和运行时间上都获得比贪心算法更好的效果.关键词社会网络;贪心算法;影响最大化;带符号网络;信息传播1引言社会网络是指由个体及个体之间的关系所组成的一个复杂网络,这种复杂的社会结构对信息的传播和扩散起着至关重要的作用.当一个人采纳一个新的思想或接受一种产品时,他会向他的朋友或同事推荐,某些人可能会接受或采纳他的推荐,并进一步向他们自己的朋友或同事推荐,这个过程称为传播或扩散(PropagationorSpreading).一个人的行为在很大程度上取决于周边的朋友或同事的决定.社会网络的传播和扩散过程在社会科学中已有很长的研究历史.Richardson和Domingos等人[1]将影响最大化问题归纳为一个算法问题,即如何定位网络中某些最有影响力的成员,提供给他们免费的样品,希望通过他们向网络中其他成员推荐,从而达到营销的目的,那么该如何选择这k个初始成员使得最终购买人数最多?影响最大化问题的研究有着十分重要的现实意义,在市场营销、广告发布、舆情预警以及社会安定等方面有十分重要的应用.随着WEB2.0的出现及流行,目前出现了很多大型在线社交网站,如Facebook、Flickr等.这些大型在线社会网络的成员数目庞大,它们的出现对传统社会网络中的影响最大化算法,包括传播模型均提出了巨大的挑战.近年来,社会网络中影响最大化算法再次成为研究热点.目前研究的目标主要集中在如何扩大影响范围同时降低算法的时间复杂度.社会网络中影响最大化问题(即如何选择k个种子节点,使其在传播过程结束之后,传播的范围达到最大)已被证明是一个NP-hard问题[2].Kemple和Kleinberg提出了一种自然的爬山贪心算法.它在每一步都选择当前“最具影响力”的节点作为初始传播对象进行传播.所谓“最具影响力”的节点,即是当前能够激活最多节点的节点.然而,选择“最具影响力”的节点是一个非常耗时的过程,并且这种局部最优并不能保证最终的传播结果最优.对于大型社会网络,这种贪心算法由于高耗时更加不适用.除了贪心算法之外,还有一些常见的启发式节点选择策略,包括基于点的度数或中心度等[2].然而,就传播范围而言,完全基于度数的启发式规则的效果并不理想.因为,该方法显然没有考虑到社会网络的传播特性.当然信息扩散有其本身的规则,或者叫做模型.当前所有社会网络影响最大化问题的研究都是基于以下两个基本传播模型:线性阈值模型(LinearThresholdModel,LT模型)和独立级联模型(Inde-pendentCascadeModel,IC模型),我们将在第2节进行介绍.目前影响最大化问题的主要研究工作集中在IC模型下利用次模特性(sub-modularity)来提高贪心算法的运行效率[3].本文考虑LT模型(介绍见第2节)下的影响最大化问题.通过考察,我们发现LT模型具有“影响力积累”的特性.利用这个特性,在本文我们提出了一种混合算法,通过综合考虑网络的特性和传播特性来提高最终的影响范围和降低算法的运行时间.本文的主要贡献有:(1)基于线性阈值模型提出一种算法框架和一种新型的混合式影响最大化算法(HPG);(2)将HPG算法推广到带符号的社会网络中,并给出合理的节点之间的影响力buv估计公式;(3)在各种不同特性的数据集上进行了实验,并分析和验证了HPG算法的有效性.本文第2节介绍两个最常用的传播模型和相关工作;第3节介绍提出的算法框架和混合型算法并给出不同特性网络上buv的估计公式;第4节介绍在6个不同特性数据集上进行的实验及结果分析;最后一节进行总结并探讨未来的工作.2背景知识2.1两个基本传播模型一般将社会网络抽象为一张有向(无向)图G(V,E),V代表节点的集合,每个点表示个人或组织;E代表边的集合,每条边表示个体之间的关系(合作、朋友、敌对等).每个节点有两种状态,激活状态(购买了某产品或接受了某观念等)和未激活状态(还未购买或未接受).处于激活状态的节点对处于未激活状态的节点存在影响,如果这个影响导致了某个节点从未激活状态变为激活状态则这个过程称为激活.某节点的邻居节点被激活的越多,则该节点被激活的可能性就越大.新激活的节点又会影响其处于未激活状态的邻居节点.随着时间的推移,越来越多的节点从未激活状态转变为激活状态.整个传播过程是不可逆的,即:一个节点可以从未激活状态变为激活状态,反之则不可.2.1.1线性阈值模型[4]线性阈值模型是所有基于节点特异性阈值模型的核心.给定一个社会网络G(V,E),定义N(v)为节点v的邻居节点集合(有向图中,“邻居”的定义为Page3“入边邻居”).被激活的节点u对邻居节点v存在影响buv,一个节点v的所有邻居节点对v的影响力总和小于等于1.定义A(v)为节点v的邻居节点中已激活的节点集合.每个节点v有一个特异性阈值θv,如果满足∑u∈A(v)buvθv,则v被激活.在LT模型中,当一个激活节点u尝试去激活它的未激活邻居v而没有成功时,节点u对节点v的影响力buv被“积累”下来,而不是被抛弃.这种积累对后面节点v的其它邻居对v的激活是有贡献的,直到节点v被激活或传播过程结束.这就是LT模型的“影响积累”特性,这和IC模型是不同的.LT模型的扩散过程如下:给定初始传播节点集合S0、所有节点的特异性阈值θv以及节点之间的影响力buv.在第t步扩散时,基于集合St-1激活满足阈值的节点,被激活的节点加入到集合St-1形成St.重复这一过程,直至不再有新的节点被激活.2.1.2独立级联模型[5-6]独立级联模型是基于相互粒子系统(InteractingParticleSystems)设计的一个信息扩散的模型,这是一个概率模型.给定初始传播节点集合S0以及所有节点之间相互激活成功的概率puv.当传播至第t步时,利用在t-1步中被激活的节点,根据成功概率puv试图去激活它们的邻居节点,并将在这一步中被激活的节点加入到St-1形成St.重复这一过程,直至不再有新的节点被激活.值得注意的是成功概率puv是一个系统变量,与其它尝试激活节点v而未成功的节点无关,这也是该模型命名的来历.显然,在IC模型下,当节点u尝试激活其邻居节点v而失败时,这种激活行为就被抛弃了.Kemple和Kleinberg认为puv并不是独立的,随着时间的推移会变得越来越小.也就是说v已经被其它很多节点尝试激活过很多次都没有成功,新激活的邻居节点u对v的影响就会被削弱,由此提出了一个新的模型叫做递减级联模型[2](DecreasingCascadeModel).2.2相关工作2.2.1爬山贪心算法为了找到模型中要求的初始扩散集合Sk,一个简单有效的策略是每一步根据算法的标准确定初始集合中的一个节点,直到找到k个(预定义)节点.为了便于介绍算法,我们定义:(1)S0=;(2)I(Si):集合Si扩散后已激活节点的集合;(3)m(u|Si)=|I(Si∪{u})|-|I(Si)|:节点u相对于集合Si的边际影响范围.Kemple和Kleinberg在文献[2]中提出一种自然的爬山贪心算法(我们用作者的姓名缩写KK来表示):每一步都选择当前最具影响力的节点.从S0开始,在第i步,根据局部最优策略选择节点u,u=argmaxvm(v|Si-1),并令Si=Si-1∪{u}.尽管KK算法能够在1-1/e的因子内近似最优值,但是其缺点非常明显,每一步都要计算所有未激活节点u的边际影响m(u|Si),这导致了KK算法运行十分耗时.文献[3]中,利用IC模型的次模特性给出了KK算法的改进方法CELF算法.次模特性指当我们添加一个节点v到种子集合S时,如果S集合越小,v对影响范围的增量影响就越大.CELF利用次模特性,在每一步选择初始种子节点时,大量节点的增量影响不需要被重新计算,这是因为它们在之前步骤中的值已经小于其它节点在当前步骤中的值.它缩短了KK算法的时间,但在影响范围上没有提高.然而,次模特性并不适合LT模型,我们希望利用LT模型的“影响力积累”特性来提高算法的运行效率.2.2.2基于度数的节点选择策略中心度是分析社会网络的一个最重要的和常用的概念工具之一.它是关于行动者在社会网络中的中心性位置的测量概念,反映的是行动者在社会网络结构中的位置或优势的差异.在一个社会网络中,某节点度数最高,该点就居于中心位置,这表明该点所对应的行动者为此网络中的中心人物即最具影响力的人物[7].在社会网络和其它网络中,以度数递减的顺序选择k个最大度数节点的启发式节点选择策略,是长期以来的一个标准方法,在社会科学中被称为“度中心性”.此方法的一个缺点就是静态选择初始节点,没有考虑影响的扩散过程,不能保证最终影响范围最优.2.2.3其它相关算法集合覆盖贪心算法[8]每次选择最高“uncovered”度数的节点,一旦一个节点被选中,它的所有邻居节点被标记为“covered”,这个过程一直持续k步.它选择覆盖范围最大的节点,但是在影响最大化的约束下,覆盖并不等于激活,所以其实验结果并不好.文献[9]中讨论了如何在作者合作网络中找到k个研究员,使得与他们合作的其他研究员人数最多.这是影响最大化问题的一个特例.该文中提出的计算Shapley值的方法并不适合本文提出的问题.Page43一种新型的混合式影响最大化算法3.1框架的提出及HPG算法由于KK算法时间复杂度高,且局部最优并不能保证具有最好的最终影响范围,这里的影响范围是指能够激活的节点个数.我们利用LT模型的“积累特性”并综合网络的结构特性和传播特性,提出了解决问题的框架,并在此框架基础上提出了新的初始节点选取策略(HybridPotential-influenceGreedyAlgorithm,HPG),这是一种混合式的影响最大化算法.根据LT模型的“积累特性”,我们知道尽管一个节点u没能成功激活节点v,但影响力buv却被积累了.因此,我们的出发点是与其花费大量的时间寻找“最具影响力”的节点,不如迅速地找到一些具有潜在影响力的节点:这些节点虽然当前并不能激活最多的节点,但却能积累大量的“潜在影响力”,使得在后面的阶段能够激活更多的节点.这样可以大大地节省运行时间,因为寻找“最具影响力”的节点是非常耗时的,我们需要针对当前所有未激活节点去计算它的扩散影响范围,在算法初始阶段,即大部分节点均未被激活时,尤其耗时.基于这个出发点,我们提出了一个解决问题的框架:框架的核心是节点的选取过程分为两个部分.(1)启发阶段.选取最具潜在影响力的节点.这部分节点虽然在当前不能带来最大的影响范围,但却蕴含着巨大的潜在影响力.(2)贪心阶段.选取最具影响力的节点.文献[8]中提到度数大的节点往往都处在社会网络的中心位置.而KK算法考虑影响的传播过程,能够达到最优值的63%[2].综合度中心性和贪心算法的优势并结合LT模型的特性,首先静态选择最具潜在影响力的节点来激活,尽管当前不能激活最多的节点,在接下来贪心阶段时,很大部分没有被激活但是积累了很多潜在影响力的节点一触即发.尽管这一框架不是局部最优,但其最终影响范围更大.为了找到潜在影响力最大的节点,通过网络结构分析和实验,我们发现有两个因素影响最具潜在影响力节点的选择:节点的度数(outdegree)和一个激活节点对其所有未激活邻居影响力之和(inf),并且这两个因素的效果也不相同.根据实验结果,节点的度数对最终影响范围的贡献更加明显.因此,综合上述原因,我们给出下列公式,使得最具潜在影响力节点的选择以节点的度数为主,并综合考虑inf因素.潜在影响力PI(PotentialInfluence)定义如下:其中珡N(u)表示u的出边邻居节点集合,珡A(u)表示珡N(u)中已激活的节点,buv表示节点u对v的影响力.因此inf(u)表示节点u施加于所有未激活邻居节点的影响力之和,我们称之为节点u的影响力,它由节点u未激活邻居的个数以及buv大小这两个因素决定.outDegree(u)表示节点u的出度.当节点的出度相同时,选择影响力较大的节点,而不是盲目随机地选择一个度数最大的节点作为当前潜在影响力最大的节点.因此,“最具潜在影响力”的节点就是PI值最大的节点.显然我们将计算每个节点的边际影响范围简化为计算每个节点的PI值.这里PI值在常数时间内可以计算获得.需要特别注意的是,当处理带符号社会网络时,式(2)中的outDegree(u)的取值需要进行特别处理.理论上我们是选择当前节点中度数最大的节点,但是由于负边的存在,我们重新定义outDegree(u)=outDegree+(u)-outDegree-(u)其中outDegree+(u)表示u出边中正边的个数,outDegree-(u)则表示u出边中负边的个数.这是由于u的出度中包含正边和负边,正边对影响的传播产生正影响,负边对影响的传播产生负影响,正影响减去负影响才能表示节点u的度中心性.我们给出的框架中将k个初始节点的选择分为两个阶段:启发阶段和贪心阶段.启发阶段选择PI值最大的节点,贪心阶段选择最具影响力的节点.框架中引入了启发因子c(c∈[0,1]),ck表示贪心阶段的步数,k-ck表示启发阶段的步数.显然,当c=1时框架中的方法为KK算法.框架中启发因子c是一个经验值,我们需要确定c的取值,给出一个确定的影响最大化算法即提出的HPG算法.在后文实验部分,我们得出HPG算法是c=0.5时的一种影响最大化算法.框架的伪代码详见算法1.算法1.HPG算法框架.输入:图G(V,E),buv,θv,初始集合大小k,启发因子c输出:初始传播集合Sk1.集合S0=,k1=k-ck,k2=ck2.FORi=1TOk13.从未激活的节点中选择PI最大的节点u4.令Si=Si-1∪{u}5.基于集合Si激活尚未激活的节点6.更新所有还未被激活节点的PI值Page57.ENDFOR8.FORi=1TOk29.计算每个尚未被激活节点的边际影响值10.选择边际影响值最大的节点u11.令Si+k1=Si-1+k1∪{u}12.更新节点u所影响的节点状态13.ENDFOR3.2犫狌狏估计公式的改进线性阈值模型中buv表示激活的节点u对邻接点v存在的影响,通常用1/d(v)(d(v)表示v的度数)估计,意味着v的所有的邻居对它的影响力相同.显然,这一假设忽视了节点之间的差异性,并不符合现实.这里我们针对不同特性的社会网络给出了不同的buv估计公式.3.2.1无权图上buv的估计公式buv的大小是节点v自身的一个感受,这个感受是它对于指向它的节点的权威性的一种体现,与其它节点没有关系,因此只需要考虑节点v邻居节点的结构关系即可[10].邻接图NG(NeighborGraph)由v和指向它的邻居节点以及这些节点之间的关系构成.buv估计公式中节点的度数是根据邻接图中节点的度数得来的.式(4)给出了它的定义.NG(v)=G(V,E),V={v}∪N(v),E={(x,y)|x,y∈V,(x,y)∈E},buv=outDeg(u)其中outDeg(u)表示节点u在邻接图中的出度.N(v)表示节点v在邻接图中的入边邻居节点集合.节点u对v的影响力主要由v的邻接结构来决定.图1给出一个简单的邻接图示例,深色节点v,以及节点u1,u2和u3,组成一张邻接子图.u1,u2和u3在NG(v)中的出度分别为1,1,2,因此bu1v,bu2v和bu3v分别为0.25,0.25和0.5.3.2.2带权图上buv的估计公式在考虑边上带权重的情况下,节点u对v的影响力主要由边上的权重来决定.我们规定buv的定义如下:其中W(u,v)表示边(u,v)上的权重,N(v)表示节点v在邻接图中的入边邻居节点集合.图2给出了一个简单的示例.边(u1,v),(u2,v)和(u3,v)的权重分别为2,5,3,根据式(3)计算得到bu1v,bu2v和bu3v分别为0.2,0.5和0.3.3.2.3带符号图上buv的估计公式之前大量社会网络的研究只关注传统社会网络,而关于带符号社会网络的研究相对很少.带符号的社会网络是指个体与个体之间的关系不仅存在正关系还存在负关系,其中正关系对影响传播产生正影响,负关系产生负影响.在真实的社会网络中,考虑正关系和负关系之间的相互作用是非常重要的[11].例如资讯科技网站Slashdot的用户之间可以相互标注为“朋友”或者“敌人”,评论网站Epinions的用户之间可以相互表达“信任”或者“不信任”等.我们将一个带符号的社会网络抽象为一个由正边和负边组成的有向图G(V,E).其中,边的符号代表影响的正负.定义Triangle(a,b,c)表示由边(a,b),(a,c)和边(b,c)三条有向边所组成的三角形,如图3所示,其中x,y,z代表边的符号即影响的正负.在带符号图中,当考虑a对c的影响时,a对c产生直接影响,a通过b对c产生间接影响,但需要注意的是并不是所有的间接影响都有效.根据带符号图上的Balance理论[11],给出乘法规则:若要a通过b对c产生的间接影响有效,则必须满足z=x×y.有了乘法规则我们就可以通过邻接图来进行带符号图上buv的计算.Page6在考虑存在负边的情况下,我们规定buv的定义如下:其中W(u,v)不是指边上的权重,而是指邻接图中u对v的影响权重,由边(u,v)产生的直接影响和Triangle(u,u,v)产生的间接影响来决定.首先考察边(u,v)产生的直接影响,将W(u,v)初始化为1,再考察间接影响,若存在Triangle(u,u,v)满足乘法规则,则W(u,v)加1,否则什么都不做.图4给出了一个简单示例.Triangle(u1,u3,v)满足乘法规则,Triangle(u1,u2,v)不满足乘法规则,所以在邻接图中u1对v的影响权重为2=1+1+0.图中W(u1,v)=2,W(u2,v)=2,W(u3,v)=1,W(u4,v)=2,W(u5,v)=1.因此根据公式3计算得到bu1v,bu2v,bu3v,bu4v和bu5v分别为0.25,-0.25,-0.125,0.25和0.125.贪心阶段,虽然在贪心阶段每一步选择的都是边际影响最大的节点.但是由于已经经历过了启发阶段,图中已经有大量的节点被激活,此时未激活的节点比原始数据集会少很多,相应的会比KK算法少遍历很多遍图.可以将之看作KK算法在小规模数据集上的运行.因此HPG算法的时间复杂度要比KK小很多.表1HPG和KK算法两个阶段的时间复杂度节点情况时间复杂度T(1)=k/2×O(C)T(2)=k/2×O(NM)T(1)=k/2×O(NM)T(2)=k/2×O(NM)表1中给出了HPG算法和KK算法两个阶段的时间复杂度对比.我们将KK算法也相应地分成两个阶段,每个阶段均选择k/2的初始节点.需要注意的一点是,随着图中未激活节点个数的减少即随着初始节点选择的进行,贪心算法的运行时间也在单调减少.假设要选择k个初始节点,图中有N个节点,M条边.表1中,表示远小于的含义.HPG算法的时间复杂度为T(1)+T(2)=k/2×O(NM).KK算法的时间复杂度为T(1)+T(2)=k/2×O(NM).因此,HPG算法时间复杂度比KK算法时间复杂度低很多.3.3KK算法和HPG算法的算法时间复杂度分析下面,我们对两个算法的运行时间进行简要的说明和分析.KK算法考虑了影响的整个传播过程,每一步都需要计算所有未激活节点的边际影响.刚开始时,图中所有的节点均处于未激活状态,计算每个未激活节点的边际影响均要遍历整张图来进行影响的传播,非常耗时.HPG算法是在所提框架下启发因子c=0.5时的一种影响最大化算法.我们从两个阶段来分析HPG算法的时间复杂度.启发阶段,每一步都是从未激活节点中选择PI值最大的节点.PI值的计算基本不消耗时间(时间复杂度为常量,用O(C)表示),这是因为公式(1)中的outDegree(u)是不变的,inf(u)在确定上一个初始种子节点之后进行整个图的更新时也已计算完毕.启发阶段结束之后,图中积累了很大的潜在影响力,同时激活了大量的节点.4实验和评估4.1实验数据集我们在6个真实数据集上进行了实验,它们的统计信息详见表2.数据集1是酵母菌蛋白质之间的相互作用①,有关它的社会网络性质详见文献[12],无向无权图.数据集2是个作者合作社会网络②,点代表作者,边代表两个作者有合作关系,无向无权图.①②Page7序号数据集节点数边数1酵母菌23611329211.6蛋白质相互2航天物理合作网络1670612125114.5作者合作3计算几何合作网络7343118983.2作者合作4Wiki_vote711510368926.6Wiki投票5Slashdot77357396378/6Epinions131828717667/注:在这些统计数据中,有向图都当作无向图来处理.数据集3是个带权的作者合作社会网络①,点代表作者,边上的权值表示作者之间合作的次数,是带权社会网络的代表,无向带权图.数据集4是个Wikipedia的投票历史网络②,其中点代表Wikipedia的用户,u到v的有向边意味着u投票给了v,有向无权图.数据集5是一个来自Slashdot网站的朋友敌人网络③,点代表网站的会员,u到v的有向边意味着u把v标注为朋友或者敌人(由边上的符号决定).这是个带符号的有向图.数据集6是一个来自Epinions的信任网络④,节点代表网站的会员,u到v的有向边意味着u信任v或者不信任v(由边上的符号决定).这是个带符号的有向图.这6个数据集都是社会网络领域公开的用于各种测试的数据集,它们具有不同的特性(带权\不带权,有向\无向,带符号\不带符号).我们注意到对于数据集Wiki_vote、Slashdot和Epinions,需要对原始图进行反向处理,因为我们研究的是影响的最大化,我们把v投票给u,信任u或者把u标注为朋友看成u对v产生影响.4.2实验设计基于线性阈值模型进行实验,buv按照3.2节中给出的估计公式计算.文献[2]中给出一个经典的阈值θv取值方法是固定每个节点的阈值为0.5.启发因子c意味着贪心阶段拥有ck步,启发阶段拥有k-ck步.文献[3]给出的算法虽然降低了贪心算法的时间复杂度,但最终影响范围没有提升,所以这里我们不予比较.4.3实验结果4.3.1算法框架在无向网络上的效果首先考察启发因子c和目标集合大小k的联合效果,即当k相同时,不同c值对影响范围的影响.数据集1上的实验结果见图5.由图可知对于不同的k值,除了c=0的情况,其它的c值大部分情况都比c=1的影响范围大.当c取0.5,k取60时算法框架下的算法的影响范围高出贪心算法10%左右.当c=0时,所有初始节点都是静态选取的PI值最大的节点,未考虑影响的传播过程,所以其影响范围最差.在接下来的实验中,我们直接忽略c=0的情况.数据集2的实验结果见图6,同样算法框架在取到合适的c值时绝大部分都要比KK算法效果好,仅有个别的情况效果差于KK算法.4.3.2算法框架在带权网络上的效果为了验证框架在带权网络上的有效性,我们在计算几何作者合作网络数据集上进行了同样的实验.实验中buv采用3.2.2节中的buv的估计公式,θv取0.5.结果见图7.从图中可以看到,算法框架下算法大部分影响范围都优于KK算法,特别是c=0.5的情况,最好情况下得到10%左右的提升.图5、图6和图7都显示出随着k增大算法框架下算法的影响范围曲线的斜率越大,表明这种提升随着k值的增大而愈加的①②③④Page8明显.然而,当前的大型社会网络均包含上百万个节点,过小的k值没有实际的意义.因此,本文提出的算法框架在大型社会网络中的优势愈加明显,因为该框架需要足够的节点来积累潜在的影响力.4.3.3算法框架在有向网络上的效果为了验证框架在有向网络上的有效性,我们在Wiki_vote数据集上进行了同样的实验.实验中buv采用3.2.1节中的buv估计公式,θv取0.5.结果见图8.从图中可以看到,实验结果跟无向网络和带权网络上的结果类似,算法框架下的算法大部分情况下影响范围都优于KK算法,特别是c=0.5的情况.这说明了算法框架在有向网络上也能够取得很好的效果.那么对于不同的数据集类型,该如何确定c值?我们不可能对每一个c值做实验,然后选择最优的.但从实验结果中可以看到c=0.5时大部分情况下都要优于KK算法.因此我们选择中间值0.5作为算法的参数,不管c值偏大还是偏小,c=0.5在统计意义上离中心最近.因此我们把c=0.5时算法框架下的影响最大化算法确定为HPG算法.4.3.4HPG算法在带符号社会网络上的效果我们已经确定HPG算法是c=0.5时的影响最大化算法,下面直接验证HPG算法和KK算法在带符号网络上的效果.我们选取两个大规模的带符号社会网络进行实验.分别是Slashdot和Epinions数据集.实验结果分别见图9和图10.图9数据集5上HPG和KK影响范围曲线下面考察算法框架两个阶段的区别,说明为什图10数据集6上HPG和KK影响范围曲线从图中可以看出,在带符号网络上HPG算法相对于KK算法在影响范围上同样有很大的提升,同时也验证了参数c赋值的正确性.4.3.5KK算法和算法框架之间的详细比较么HPG算法要比KK算法的影响范围广.表3和表4中列出了算法框架两个阶段的节点平均影响数AI(AverageInfluence).为了便于比较,我们将KK算法也对应地分为两个阶段(相应阶段1和相应阶段2).这里我们用AI作为比较的工具.例如在贪心阶段选择了10个节点,而它们共激活了60个节点,那么贪心阶段的AI=6.0(60/10).平均影响数c=0.210.2720.414.611.35c=0.410.417.6513.7510.83c=0.610.6515.3613.2410.76c=0.811.912.1512.4710.1平均影响数c=0.226.1547.2528.1328.03c=0.419.4247.2124.1930.63c=0.618.3140.5825.0832.5c=0.818.6336.524.0634.3Page9从表3和表4中可以看出,启发阶段要比相应阶段1的平均影响数低,但是贪心阶段要比相应阶段2的平均影响数高出很多,因此只要选择合适的参数c,综合两个阶段,我们所提框架下算法的效果要优于KK算法.启发阶段比相应阶段1低的原因容易解释,因为启发阶段寻找到的节点都是静态选择PI值最大的节点并不是最具影响力的节点.贪心阶段比相应阶段2高出很多主要是启发阶段中所选择节点的特性和LT模型的“影响力积累”特性导致的,虽然它们没有激活很多节点,但是广泛地施加影响给网络中的其它节点,这些被影响但还没有被激活的节点在贪心阶段一触而发,这就是为什么贪心阶段能够激活更多节点的原因.4.3.6时间复杂度的比较前面对算法影响范围进行了详细的对比分析,这里进行时间复杂度的比较.为了更好地区别算法在时间复杂度上的差别,我们选择规模较大的Slashdot数据集,给出了算法框架在不同参数下所消耗的时间,结果见图11.从图中可以看到当k值相同时,c越大算法花费的时间越多,这是因为c越大算法在它贪心阶段花费的步骤越多.值得注意的是,当c越来越大时,时间曲线的斜率也越来越大.我们还可以看出HPG算法(即c=0.5)比KK算法(即c=1)高效很多.随着k值的增加,这种时间上的优势更加明显,这对大型社会网络来说将是一种非常重要的贡献.5总结本文中,基于LT模型影响力积累的特性,综合度中心性和贪心算法的优点,提出了一个影响最大化算法的框架并给出新的混合式影响最大化算法HPG.在6个真实的具有不同特性的数据集上进行了详尽的实验.实验结果表明,我们提出的HPG算法相比KK算法在影响范围上有很好的提升.时间复杂度上HPG算法也很直观地优于KK算法.尽管HPG算法影响范围和时间复杂度都比较好,但依然还有许多值得改进与进一步研究的地方.例如如何将已有的社团信息整合到影响最大化问题中;现有的模型都没有涉及时间的概念,但是现实的信息扩散都是需要时间的,如何扩展已有的模型使之包括时间因素,或者创建新的模型等等.致谢感谢本文审稿专家和编辑所提出的宝贵意见和建议!
