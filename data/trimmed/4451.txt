Page1无线移动感知网络上的数据聚集传输规划冯诚李治军姜守旭(哈尔滨工业大学计算机科学与技术系哈尔滨150001)摘要随着城市交通日益增多,智能交通系统研究受到工业界和学术界的极大关注.智能交通系统上的实时导航、交通监控等应用都需要大量实时车辆速度、位置等信息.由智能车组成的无线移动感知网络的链路变化频繁并且无线干扰严重,现有的车辆网络上的数据聚集算法没有考虑无线链路变化的具体情况,就进行数据聚集和传输的规划.文中分析并求解了移动感知网络上的无冲突数据聚集传输规划问题,将该问题形式化为移动通信拓扑图上的单传聚集传输规划问题,并证明了该问题是NP完全的;提出了移动聚集路由树,将无线冲突分为树内冲突和树间冲突,首先构建树间冲突图描述树间冲突,过滤节点的传输候选时刻集以消除树间冲突,然后利用动态规划思想进行聚集路由树上的数据聚集传输时刻规划来消除树内冲突.并且在真实出租车移动轨迹数据集上进行了实验,实验结果表明文中的算法比现有的算法在数据收集率上提高了1/4左右,并且收集上来的数据的平均延迟也更小.关键词无线移动感知网络;车联网;数据聚集;动态规划;数据收集1引言近年来,移动感知网络(WirelessMobileSensorNetworks)①成为无线通信领域继无线传感器网络(WirelessSensorNetworks[1])之后的又一新研究热点.无线移动感知网络由移动感知节点、静态骨架节点(AccessPoint)②以及处理中心构成,用于监测动态环境中的事件.移动感知节点实时产生感知数据,对数据进行初步处理,然后通过其他移动节点的携带和转发,将数据路由到AP节点.AP节点稀疏地部署在监测区域,它们之间以及与处理中心之间通过有线网络进行互联.处理中心通过AP节点向移动感知节点派发查询或控制请求,收集移动节点感知的实时数据,并做进一步的数据处理和分析.车辆网络(VehicularAd-hocNETworks)[2]就是一种典型的无线移动感知网络,它为智能交通系统(IntelligentTransportationSystem)[3]的应用提供了实现平台.在许多ITS应用[4-5]中,实时路况信息是许多应用计算的基础,实时路况信息体现在路段上的车辆的平均速度、最大速度等聚集信息.对实时路况信息的收集也是VANET研究的关键点.这些聚集信息通常采用网内数据聚集的方式进行收集.现有的数据聚集算法[6-18]主要集中在WSN上.WSN上的传感器节点主要是静态节点,因此WSN上的数据聚集算法主要是针对静态无线通信拓扑设计的.现有研究中也有将移动节点引入WSN,但这些移动节点通常是少量由人工操纵的专用于收集信息的节点,而大量的感知节点仍是静态的[11-12].然而在移动感知网络中大量的感知节点不断地快速移动,少量的固定AP节点收集实时感知信息.感知节点不断移动使得节点间的通信拓扑关系不断变化,在这种动态通信拓扑网络环境下WSN上的数据聚集算法无法适用.目前在无线移动感知网络上也有一些数据聚集的研究[19-35].这些研究主要是进行协议的设计,通过参数控制调整路由模式,从而优化数据聚集性能.这些方法没有利用整个动态拓扑的细节信息,没有最大程度地优化数据聚集的效率.因此,我们从整个通信拓扑图序列出发,优化聚集传输时刻使得AP节点利用最小的传输带宽收集最多的聚集数据.本文研究的场景是由一个AP节点和n个移动节点构成的移动感知网络.车辆在移动的过程中不断产生速度、位置等实时感知数据.车辆节点携带并转发这些数据,同时进行网内数据聚集,然后将这些聚集信息路由到AP节点.AP节点周期性地收集这些聚集信息,再将这些信息汇总到处理中心,做进一步应用计算.在该场景下节点之间的通信采用一跳冲突模型,即同一通信半径内的多个节点不能同时传输数据.图1显示了由8个移动感知节点和1个AP节点组成的无线移动感知网络从1时刻到4时刻的网络拓扑变化情况以及数据聚集传输过程.图中di表示节点i的原始数据,ade,f表示节点e和节点f的数据聚集后得到的聚集数据,ade,f,h,g表示节点e、节点f、节点g和节点h的数据聚集后得到的聚集数据,带箭头的虚线表示通过无线进行数据传输.从图1中可以看出,AP节点固定设置在路边,其他节点不断向右移动,它们通信的拓扑结构不断变化.图中所示的传输规划使得在4时刻,AP节点收集到了8个移动节点在0时刻产生的感知数据信息.本文研究的问题即是规划移动节点数据的路由路径和数据聚集传输时刻,使得AP节点收集最多的聚集信息.这里我们需要考虑两个子问题:一个是移动节点选择哪个节点将数据路由到AP节点,另一个是在避免节点之间通信冲突的情况下移动节点应该在什么时刻发送数据.对于第一个问题,我们在移动通信拓扑图上建立移动路由聚集树以确定每个节点发送数据的接收节点,利用求解最小生成树的Prim算法[36]构造移动路由聚集树.本文主要研究的是第二个问题,即在给定的移动路由聚集树上如①②Page3何规划移动节点的无冲突传输时刻,使得AP节点收集最多的聚集信息.本文的基本思想是根据移动路由聚集树将冲突分成树间冲突和树内冲突,先根据树间边提取出树间冲突,对节点的候选传输时刻集进行过滤,消除树间冲突,然后考虑树内冲突,利用动态规划计算聚集传输的优化时刻.本文的贡献包括以下几个方面:(1)形式化定义了无线移动感知网络上的无冲突数据聚集传输规划问题,并分析了该问题是NP完全的.(2)提出了求解该问题的算法,主要分成两个步骤,首先消除树间冲突,对节点的候选时刻集进行过滤,然后在过滤后的候选时刻集上进行数据聚集传输规划.(3)为消除树间冲突,提出了基于时间段的过滤候选时刻集算法,但是该算法粒度较粗,使得过滤后的候选时刻集较小,导致后续树上的无冲突传输规划的解空间太小,因此提出了基于时间片过滤候选时刻集的改进算法.数据聚集传输规划算法.(4)为消除树内冲突,提出了基于动态规划的(5)在真实的出租车轨迹数据集上进行了大量实验.实验结果表明本文提出的算法比现有的算法大幅提高了数据收集率,并且数据的平均延迟也更小.本文第2节介绍VANET以及WSN上数据聚集的相关工作.第3节描述本文采用的系统模型.第4节形式化了Π问题,并对该问题进行简化得到等价的Π问题,分析该问题是NP完全的.第5节给出求解Π问题的近似算法PTSDP,针对消除树间冲突,提出构建树间冲突图的createPIG算法以及过滤节点候选传输时刻集的PTS算法,针对消除树内冲突,提出基于动态规划思想的DAS-MRT算法.第6节在真实出租车轨迹数据集上进行仿真实验并对实验结果进行分析.最后总结全文.2相关工作现有的数据聚集研究主要集中在WSN上.关于数据聚集的研究主要考虑时延、聚集数据精度、能量消耗、聚集信息量等因素[13].由于本文研究的聚集问题与时延和聚集信息量相关,我们主要考虑与这两个方面相关的聚集算法.WSN上与时延相关的聚集算法的研究包括两个问题,一个是最小化最大聚集延迟问题(MDAT),另一个是在给定的截止时间内最大化sink节点聚集信息量问题(DCDA).MDAT问题是由Chen等人[6]最先提出的,并且被证明了该问题是NP完全的.文献[6]给出了SDA算法,并证明了该算法的近似比为Δ-1(其中Δ为节点的最大度数).现有的关于MDAT问题的研究主要思路是先确定路由树,然后在该树上规划无冲突传输.文献[7]基于最小生成树提出分布式数据聚集规划的算法,并分析了该算法能够达到的上界为24R+6Δ+16.文献[8]提出了基于Penoy树的数据传输规划算法,并分析了该算法能够达到的上界为15R+Δ-15.文献[9]分析得出路由树的结构会影响聚集传输规划的性能这一结论,因此提出了同时进行建树和规划的算法.对于DCDA问题最早的研究是由Hariharan等人[15]提出的.文献[15]研究的问题是在树型拓扑的WSN上规划无冲突的数据传输,使得截止时间内sink节点聚集数据量最多.该文利用二部图最大权值匹配问题的求解,给出了基于动态规划思想的优化算法.文献[16]研究的场景与文献[15]中的场景基本相同,唯一不同点是文献[15]中每个节点只有一个数据需要进行路由和聚集,而文献[16]中每个节点有多个数据需要路由和聚集,因此这里既要规划节点的传输时刻还要规划每个节点要传输多少数据,即每次传输占用的时间槽数.该文分析了这一问题为强NP难的,并且利用单服务器任务分配近似算法构造基于动态规划思想的规划算法.文献[18]研究的问题的优化目标与上述不同,这里优化目标是最大化节点子集上的单调压模函数值,它分析了该问题为强NP难问题,该文给出了数据转发模式下的常数近似比的近似算法以及数据聚集模式下的双准则近似算法,近似比为1/(min(h,D)+1)(其中h为树高,D为截止时刻).目前关于VANET上的数据聚集算法的研究主要集中在两个方面,一个是权衡聚集数据的精度和聚集收益的优化[19-23],另一个是权衡延迟和聚集收益的优化[24-26].聚集收益包括数据聚集率、收集的数据量、节省的传输带宽消耗等方面.Traffic-View[19]和SOTIS[20]研究节点上哪些数据进行聚集使得保证聚集精度的前提下最小化聚集数据量.文献[21-22]引入模糊逻辑,根据建立的模糊规则对数据进行聚集.文献[23]的研究是针对停车位这类离散信息的应用,它提出的方法只适用于离散性数据的收集,不适用于收集速度、位置等连续性数据.文献[24-25]提出了基于分簇思想的无损数据压缩的算法.CatchUp[26-27]算法利用分布式马尔可夫模型Page4决策节点数据的转发时刻以最小化传输消耗网络带宽.文献[28]研究的是限定截止时间内的优化收集聚集信息量问题,它提出DB-VDG协议,该协议通过调整数据传输过程中的转发和携带策略使得在截止时间内AP节点收集的数据量最多.还有一些其他的关于VANET上数据聚集的研究工作.Dietzel等人[29]给出了VANET上数据聚集模型,对不同类型的数据、不同的聚集操作等建立统一的聚集过程模型.文献[30]研究可扩展的数据聚集模式需要满足的理论性能.Giordano等人[31-32]提出CORNER系统用于仿真VANET上数据的收集传输.文献[33]利用MySQL数据库构建了用于在VANET上收集聚集数据的平台CANET.文献[34]提出的VESPA平台用于VANET上的数据收集和分享.3系统模型3.1动态网络及传输模型我们考虑基于时间片时钟同步系统.首先我们对车辆节点的移动进行建模.设车辆节点i在时刻ji,y(j)处于(x(j)各个时间槽所处位置序对形成车辆i的移动轨迹Tradi=((x(0)对于节点之间的无线通信我们采用圆盘通信模型.车辆i与车辆j在k时刻可以进行通信当且仅当在k时刻节点i和节点j之间的欧氏距离小于无线通信半径R.假设已知n个车辆的移动轨迹,根据移动轨迹集以及圆盘通信模型,可以得到D个时刻的通信拓扑图序列.然后我们利用通信拓扑图序列构造移动通信拓扑图.移动通信拓扑图涵盖了D个时刻的节点之间的连通关系.下面给出移动通信拓扑图的定义.定义1.移动通信拓扑图MCG.图G=(V,E)表示一个移动通信拓扑图,其中V为节点集,包括n个移动感知节点和一个AP节点;E为链路集,E={(i,j,CTij)|i,j∈V},其中i,j为两个移动节点,CTij是节点i与节点j之间的链路连通时刻集,CTij={k|(x(k)表示节点i在移动通信拓扑图G上的邻居节点集.图G上的边表示一条链路,这里假设每个链路的容量为常数,不失一般性,设该值为1.假设被调度节点需要传输的数据量不超过通信链路的容量.3.2树状路由及冲突模型在给定的移动通信拓扑图上移动节点进行聚集传输数据时,我们采用以AP节点为根的树型结构进行数据路由和聚集.当移动节点到AP节点存在可达路径时,即可建立树型结构.节点u到节点v存在可达路径指的是存在一条路径Puv=(u,e1,v1,e2,…,ek,v)且该路径上的链路存在一个递增的连通时刻序列,即t1,t2,…,tk,t1∈CTe1,t2∈CTe2,…,tk∈CTek使得t1<t2<…<tk.tk为路径Puv的可达延迟.下面我们通过移动节点到AP节点的可达路径建立移动聚集路由树.定义2.移动聚集路由树MRT.移动聚集路由树是由所有移动节点到AP节点的可达路径构成的树,表示为T=(V,ET),其中V为节点集,ET为树T的边集.Ci表示节点i在树T上的儿子节点集,pi表示节点i在树T上的父节点.节点在数据传输过程中,由于无线干扰会产生冲突.本文采用一跳冲突模型,即不能将具有公共节点的两条链路在同一时间激活(包括发送数据和接收数据).一跳冲突模型包含以下3条规则:一个节点不能在发送数据的同时接收数据;一个节点不能同时接收来自两个节点的数据;当一个节点接收数据时,在它的通信半径内不能有其他的节点对正在进行通信.该模型被广泛应用在蓝牙或FH-CDMA系统中.对于一跳冲突模型,我们进一步分析可知,冲突包括两种情况,一种是节点不能同时接收多个数据,即同一父节点的多个儿子节点不能同一时刻向父节点发送数据,同时父节点发送数据的时刻不能和儿子节点发送数据的时刻相同,这种冲突被称为树内冲突;另一种是节点在接收数据时不能受到其他发送数据的节点的影响,即接收节点不能在其他发送节点的通信范围内,这种冲突被称为树间冲突.图2(a)所示的情况即是树内冲突,如图所示节点u和节点v有共同的父节点x,如果节点u和节点v同时Page5给节点x发送数据,那么在节点x处会发生冲突,节点x无法同时接收节点u和节点v的数据.树间冲突的情况如图2(b)所示.节点u给父节点x发送数据,节点v给父节点y发送数据,但节点x在节点v的通信半径内,如果节点u和节点v同时发送数据,那么在节点x处会受到节点v传输数据的干扰,无法接收到节点u的数据.3.3传输规划及数据聚集在数据聚集传输的过程中,节点发送数据的时刻决定传输是否存在冲突以及AP节点最终能收集到的聚集信息量.因此规划数据聚集传输时刻,即规划节点发送数据的时刻.节点可以多次发送数据,所以对于每个节点i,聚集传输规划得到一个时刻集W(i).因此一个聚集传输规划W是从移动节点集到时刻子集的映射.下面我们给出聚集传输规划的定义.定义3.聚集传输规划.一个聚集传输规划是映射W:V/{AP}→2CT,其中CT=∪{CTe|e∈ET},ET为移动聚集路由树T的边集.节点i的W(i)表示通过聚集传输规划W得到的发送数据的时刻集,当W(i)为空集时,表示规划节点i不发送数据.在发送数据之前节点要执行数据聚集操作.我们假设这里的聚集操作为可分函数.可分函数指的是可以分治计算的函数,例如MIN、MAX、SUM等.这些操作也是数据聚集中常常出现的操作.同时假设在节点上进行聚集计算的时间是可以忽略的,即不占用单独的时间片.在初始时刻,每个移动节点产生一个感知数据,即为原始数据.一个原始数据的信息量为1.然后节点在传输数据的过程中通过聚集操作得到聚集数据.一个聚集数据包含的信息量是参与该聚集数据计算的原始数据的个数,即相关的移动节点的个数.一个节点上的累积的聚集信息量为该节点原始数据的信息量和该节点接收到的所有聚集数据的信息量之和.我们下面给出节点上的累积聚集信息量的定义.定义4.节点上的累积聚集信息量.该值是节点i原始数据的信息量和节点i在聚集传输规划W下接收的聚集数据的信息量之和,记为Mi(W).Mi(W)定义如下:Mi(W)=其中VL为移动聚集路由树T中的叶节点集合,Ci为节点i的儿子节点集.4问题定义及分析4.1问题定义无线移动感知网络上的数据聚集传输规划问题是已知n个移动节点和1个AP节点构成的移动通信拓扑图G=(V,E),以AP节点为根的移动聚集路由树T=(V,ET),在T0时刻移动节点i产生感知数据di,求聚集传输规划W,使得满足数据传输无冲突的情况下最大化AP节点收集的聚集信息量MAP(W).我们将无线移动感知网络上的数据聚集传输规划问题进行形式化定义,记为Π问题.Π问题MaximizeWMAPSubjecttoW(i)∈2CTi,pi,i∈V/{AP}W(i)∩W(k)=,i∈V/{AP},k∈CiW(i)∩W(j)=,i,j∈Ck,k∈V/VLW(i)∩W(u)=,i∈V,j∈Ni/{pi},u∈Cj其中W(i)∩W(j)=即表示了节点i和节点j不能同时发送数据.限制条件中的第2项表示的是父节点发送数据的时刻不能与儿子节点发送数据的时刻相同,第3项表示的是同一父节点的多个儿子节点都传输数据时传输数据的时刻不能相同,避免父节点在接收数据时发生冲突,第4项表示的是一个节点在向父节点发送数据时,邻居节点不能接收数据,即邻居节点的儿子节点不能发送数据.4.2问题的简化从上述形式化定义中,我们可以看出Π问题中节点可以多次发送数据,因此规划的节点发送数据的时刻是一个集合,如果限定每个节点最多只发送数据一次,即W(i)中元素的个数小于等于1,我们得到单传数据聚集传输规划问题,记为Π问题.定义为如下形式:Π问题MaximizeWMAPSubjecttoW(i)∈2CTi,pi,i∈V/{AP}W(i)1,i∈V/{AP}W(i)∩W(k)=,i∈V/{AP},k∈CiW(i)∩W(j)=,i,j∈Ck,k∈V/VLW(i)∩W(u)=,i∈V,j∈Ni/{pi},u∈Cj定理1.Π问题的优化解也是Π问题的优化解.Page6证明.假设Π问题的优化解中节点i有k次发送的数据经过转发最终到了AP节点,分别在时刻w1,w2,…,wk发送数据包p1,p2,…,pk,假设w1<w2<…<wk.由于数据包p1,p2,…,pk可以被聚集为一个包,因此,将这些数据包聚集成一个数据包在时刻wk发送出去,同分别在时刻w1,w2,…,wk发送数据包p1,p2,…,pk,对于AP节点来说,收集到的聚集信息量是相同的.因此,通过Π问题的优化解能够构造Π问题的解.设M1为Π问题的优化解,则构造满足假设条件的解为M2,则M1=M2.设M2为Π问题的优化解,则M2M2.我们知道Π问题的优化解M2是Π问题的一个可行解,因此M2M1.综上可知,Π问题的优化解也是Π问题的优化解.证毕.通过定理1可知,通过解Π问题即可得到Π问题的优化解,也就是在形式化问题时加入的每个节点最多只发送一次数据的条件并没有影响数据聚集问题的实质.通过这一条件可以简化问题.由于Π问题中每个节点最多只发送一次数据,因此我们将节点i的被规划的发送数据时刻记为w(i),当节点i被规划不发送数据时,w(i)为0.4.3单传数据聚集传输规划问题是NP完全问题由于Π问题是受几何约束的传输规划问题,因此我们利用受限平面3SAT问题进行规约,从而证明该问题是NP完全的.受限平面3SAT判定问题是指是否存在1个赋值使得所有的可平面的布尔公式均满足,其中每个子句最多有3个变量,每个变量最多出现在3个子句中,每个变量的正形式和负形式均出现.定理2.Π问题是NP完全的.证明.我们将受限平面3SAT问题规约到Π问题.给定受限平面3SAT问题的实例π(n,m,Gπ),n为变量个数,m为合取子式个数,Gπ为布尔表达式平面图.通过实例π(n,m,Gπ)构造一个平面图和其上的路由树,从而构造截止时间内将节点数据聚集到根节点的Π问题实例.首先我们构造平面图Gk(k为正整数).如图3所示.对于每个变量xi(1in),我们构造环Xi和两条路径Pi,Pi.Xi包括10k个节点,依次等距为pi,qi,ri,si,ti,si,ri,qi,pi,ti节点.Pi是一条节点oi和节点pi之间长度为(6i-5)k-1的路径,Pi是一条oi和pi之间长度为(6i-5)k-1的路径.Xi∩Pi={pi},Xi∩Pi={pi}.对于每个子式ci(1im),我们构造边Ci.Ci是一条节点bi和节点ci之间的边.对于Gπ上的每条边xicj(或xicj)(1in,1jm),构造边Iij.边Iij的一个端点是bj,另一个端点在{si,ri}(或{ri,si})中.下面根据边Iij构造边Ci的连通时刻集,设子式ci=xi1·xi2·xi3,当边Ii1,i中端点为si或si时,构造边Ci的一个连通时刻为(6i1-2)k-1,当边Ii1,i中端点为ri或ri时,构造边Ci的一个连通时刻为(6i1-3)k-1.同理构造其他两个连通时刻,因此边Ci的连通时刻集包括3个连通时刻.Qi是一条节点ti到节点ti+1长度为k的路径.πi是一条节点bi到节点bi+1长度为k的路径.还有两条路径分别是节点tn到节点b1长度为k的路径和bm到节点root长度为k的路径,上述构造得到图Gk,如图3所示.设该图G1的节点个数为g,l=120g2,将G1中的每条边用长度为l的路径替代得到图G1.通过文献[6]中的定理可知,进行平面化嵌入的时间复杂度为O(f(g)),其中f(g)为g的多项式函数.由文献[6]中的引理2可知,图G1为网格图的子图,且构造时间为n和m的多项式.然后构造路由树Tk.构造树的关键是给出节点的父节点或祖父节点.这里我们不区分父节点和祖父节点,均称为父节点.oi(或oi)的父节点为pi(或pi),ti的父节点为pi,pi(或pi)的父节点为qi(或qi),qi(或qi)的父节点为ri(或ri),ri(或ri)的父节点为si(或si),si(或si)的父节点为ti,ti的父节点为ti+1,tn的父节点为b1,bi的父节点为bi+1,bm的父节点为root.其中箭头线段构成路由树.受限平面3SAT实例π是可满足的,当且仅当Π问题实例(G1,T1,V(G1),|V(G1)|)可实现在O(ik)轮内将V(G1)中的所有节点聚集到tn节点.由于受限平面3SAT问题是NP完全的,所以Π问题是NP完全的.Page75数据聚集传输规划问题的求解算法5.1算法框架问题求解的是节点什么时刻传输数据.在规划节点的传输时刻时,需要满足两个约束,一个是考虑单个节点自身,该节点的传输时刻需要在该节点与父节点的链路的连通时刻集中取值,另一个是考虑节点之间的一跳冲突,一个发送数据的节点不能干扰到其他发送节点的接收节点的数据接收.由于一跳冲突分为树内冲突和树间冲突,因此,我们考虑成两步处理,首先处理树间冲突,使得不同子树的节点在发送数据时不会发生冲突,我们通过保证在通信范围内的处于不同子树的节点的可选传输时刻集不相交达到这种冲突的避免,然后我们再处理树内冲突,即在规划一个父节点的儿子节点们的传输时刻时,将儿子节点和传输时刻进行匹配,从而避免多个儿子节点同时发送数据.我们提出了求解该问题的算法框架:PTSDP(PartitionTimeSetDynamicProgramming)算法,如图4所示.该近似算法的基本思想就是分别处理两种冲突,首先过滤节点的可选传输时刻集,保证不同子树上的节点的传输规划不会产生干扰,然后再从远到近按层规划节点的儿子节点与可选传输时刻的优化匹配,使得同一父节点的儿子节点们传输时不产生冲突.PTSDP算法的伪码如下.算法1.PTSDP算法.输入:移动通信拓扑图G=(V,E),移动聚集路由树输出:所有节点的聚集传输规划时刻算法:1.构造树间冲突图算法2.输出树间冲突图G3.过滤候选传输时刻集算法4.输出新的移动聚集路由树T5.在树T上规划无冲突数据传输时刻6.输出节点的聚集传输时刻为了描述树间冲突我们引入一个重要定义,树其中步1~4进行消除树间冲突,详细内容在5.2节展开.步5、6消除树内冲突并进行聚集传输规划,输出无冲突的优化聚集传输时刻,详细内容在5.3节展开.5.2消除树间冲突间冲突图(PartialInterferenceGraph).定义5树间冲突图PIG.已知移动通信拓扑图G=(V,E),记G=(V,E)为树间冲突图,其中节点集V中的元素是V的子集,即V={v∈2V},边集E中的元素为(u,v),则u,v∈V,且i∈u,j∈v,k∈CTi,pi∪CTj,pj,w(i)=w(j)=k.如图5(a)所示,节点d为移动聚集路由树的根节点,其他节点存在到节点d的唯一路径,节点a和节点j,节点i和节点c以及节点g和节点j之间存在无线连通链路.在图5(b)中,八面体表示树间冲突图的节点,冲突图的节点是G的节点集V的子集,冲突图上的节点有两种类型,一种是图G中的单个节点,例如图中由节点a构成的节点1,由节点j构成的节点5,另一种是树T上的兄弟节点集,例如图中由节点c和节点l构成的节点2,由节点f、节点h和节点i构成的节点4.冲突图上的边是由在图G中而不在树T上的边构造而成的.例如图G中的边eaj的存在导致了节点a的传输时刻不能与节点c和节点l的传输时刻相同,节点j的传输时刻不能与节点f、节点h和节点i的传输时刻相同,也就是在G中的两条边,节点1和节点2之间的边,节点4和节点5之间的边.我们利用树间冲突图刻画传输规划中的树间冲突,即当不同子树上的节点之间存在无线链路时,一个节点向它的父节点发送数据时,另一个节点不能接收儿子节点的数据,即此时另一个节点的儿子节点不能发送数据.树间冲突图中节点之间存在边表示两个节点的候选传输时刻集之间不能重叠.因此根据树间冲突图的结构将边的两个端点中节点的候Page8选传输时刻集中相交的部分进行划分,对相交的部分在一个端点的节点的候选传输时刻集中保留,在另一个端点的节点的候选传输时刻集中去除,最终使得交集为空,即得到了避免树间冲突的目的.因此,消除树间冲突部分包括两个子算法,构造树间冲突图算法和过滤候选时刻集算法.5.2.1构造树间冲突图算法该算法输入移动通信拓扑图G=(V,E)和移动聚集路由树T=(V,ET),输出树间冲突图G=(V,E).该算法主要有两个部分,首先根据在移动通信拓扑图G上而不在移动聚集路由树T上的边euv,构造树间冲突图G上的两条边,euv的存在会导致两个冲突,节点u和Cv中的节点不能同时传输,节点v和Cu中的节点不能同时传输.如图6所示,节点u有3个儿子节点a、b、c,节点v有两个儿子节点d和e,在G中节点{u}和节点{d,e}之间有一条边,节点{v}和节点{a,b,c}之间有一条边,这就是G中的两条边的构造过程.然后我们要对节点进行合并,这是因为对于u∈V,如果u∈v1∩v2,v1,v2∈V,u在v1和v2分别分配的候选时刻不能有冲突,因此需要将具有相同元素的节点进行合并.通过节点合并以后就得到了树间冲突图G.下面给出createPIG算法的伪码.算法2.createPIG算法.输入:移动通信拓扑图G=(V,E),移动聚集路由树输出:树间冲突图G=(V,E)算法:1.初始化V=NULL,E=NULL2.FOR((u,v)∈E\ET)3.{将{u}作为一个节点添加到V,将Cv作为一个节4.构造{u}和Cv之间的边,加入E5.将{v}作为一个节点添加到V,将Cu作为一个节6.构造{v}和Cu之间的边,加入E}7.FOR(u,v∈V)8.IFu是v的子集,则将u和v合并成v节点该算法从步2到步6循环了|E\ET|次,步7的循环次数是|V|2.设m=|E\ET|,|V|2m,因此createPIG算法的时间复杂度是O(4m2).5.2.2过滤候选时刻集算法createPIG算法构造得到树间冲突图,通过树间冲突图我们可以获得不同子树上的节点的冲突信息,下面的关键就是将冲突的候选传输时刻集划分开使得可能冲突的节点的候选时刻集之间没有交集.不同的划分规则就决定了不同节点上的候选传输时刻集,进而影响传输时刻的规划.我们将划分树间冲突并过滤候选传输时刻集的算法称为PTS算法.树间冲突图表示的是整个时间段内节点之间可能存在的冲突情况.因此,从树间冲突图考虑的是整个时刻集上的冲突.由于这样处理的粒度粗,导致了部分冲突图复杂,过滤后的候选时刻集较小,使得后续树上的无冲突传输规划的解空间较小,结果较差.如果考虑单时刻的部分冲突图,求单个时刻的部分冲突图的最大权独立集,将该时刻分配给独立集中的节点使用,并将该时刻下其他节点的链路的连通时刻集中过滤掉,这样会使得被过滤掉的候选时刻更少,即后续树上的无冲突传输规划的解空间大一些.5.2.2.1基于时间段的过滤候选时刻集算法我们提出从整个时间段的树间冲突图考虑节点间的冲突关系进而过滤节点的候选时刻集的算法,记为PTS-Peroid算法.首先根据树间冲突图划分冲突子集使得子集的个数最少.然后将整个时间段根据子集个数进行划分,形成不重叠的时刻子集.最后将冲突子集与时刻子集进行匹配.因此,PTS-Peroid算法包括3个部分:冲突子集的划分、时刻子集的划分和冲突子集与时刻子集的匹配.PTS-Peroid算法的伪码如下.算法3.PTS-Peroid算法.输入:树间冲突图G=(V,E),移动聚集路由树T=输出:新移动聚集路由树T=(V,ET)算法:1.划分冲突子集:对树间冲突图进行顶点着色2.划分时刻子集:EI划分或A划分3.构造颜色号和时刻子集的映射,计算权值wij4.求最大权二部图匹配下面我们展开每个部分的详细阐述.对于冲突子集的划分,我们利用贪心算法对树间冲突图进行顶点着色[36].同一颜色的节点组成一个冲突子集.首先根据节点的度进行从大到小排序,第1个颜色对应第1个节点着色,并按照节点排列的次序对与前面着色点不邻接的每个点着相同颜Page9色,重复上述步骤直至所有顶点着色完成,设共用了CN个颜色.在时刻子集的划分中,时刻集TS={1,2,…,D},划分形成的CN个子集TS1,TS2,…,TSCN需要满足如下两个条件:(1)∪CNi=1TSi=TS;(2)TSi∩TSj=.划分的方法有很多,最直接的划分方法是将该时刻集TS等分为CN个子集,得到{1,2,…,[|TS|/CN]},{[|TS|/CN]+1,[|TS|/CN]+2,2[|TS|/CN]},{CN[|TS|/CN],CN[|TS|/CN]+1,…},记为EI(EqualInterval)划分.这种划分方法基本思想是每个节点被分配一段可用时间,如果节点的候选传输时刻集和这段时间较匹配,则该节点可在这段时间内规划传输时刻,但当超过这段时间时,该节点就没有传输机会了.这种划分方法使得节点的候选传输时刻集中在较小的时刻或者较大的时刻.另一种划分方法是将时刻集TS抽取分为CN个子集,得到{1,CN+1,…,[|TS|/CN]×CN+1},{2,CN+2,…,[|TS|/CN]×CN+2},…,{CN,2CN,…},记为A(Alternate)划分.这种划分的基本思想是让节点在各个时间段内都有传输的机会,但在每个时间段内可用时刻更少,即把传输机会分散开.冲突子集与时刻子集的匹配是PTS算法的核心.PIG中的每个节点属于一个冲突子集,该节点本身包含多个移动节点,每个移动节点有候选传输时刻集,当建立时刻子集与冲突子集的匹配,意味着该时刻子集中的时刻可以属于该冲突子集的节点的候选传输时刻集,因此匹配结果直接影响节点的候选传输时刻集.节点的候选传输时刻集决定了传输时刻规划的解空间.下面我们分析影响节点优化传输时刻的3个因素,分别是节点在路由树上的位置、节点之间的关系以及节点和父节点的链路的连通时刻集.(1)考虑节点在路由树上的位置节点按照路由树的结构传输数据,因此传输时刻存在偏序关系,也就意味着离根节点越远的节点要越早发送数据,因为除了干扰影响传输进程,节点和根节点的路径长也影响节点的数据能否在D时刻之前到达根节点,离根节点越近的节点应该越晚发送数据,节点应该尽可能等待子节点传输的数据,能尽可能多地收集数据再向上传输.通过上述分析,我们将节点与根节点的距离作为建立映射的权值.设节点i离根节点的距离为hi,PIG中涂j颜色的节点集为Vj={vj1,vj2,…,vjbn},VjV,vjk={v(1),v(2),…,v(m)},vjk∈Vj.定义j颜色的节点平均高度为hj如式(2).(2)考虑节点之间的关系父节点在接收儿子节点的数据时,儿子节点之间是竞争的关系,因此当一个节点的兄弟节点较多时,应该候选传输时刻更晚.设节点i的兄弟节点个数为bi,PIG中涂j颜色的节点集为Vj={vj1,vj2,…,vjbn},VjV,vjk={v(1),v(2),…,v(m)},vjk∈Vj.定义j颜色的平均兄弟数为bj如式(3).(3)考虑节点和父节点的链路的连通时刻集节点的候选时刻集是规划传输时刻的解空间,因此候选时刻集越大,规划的机会越多,优化的空间也越大.节点候选时刻集大小由两个因素决定,一个是节点与父节点的链路的连通情况,这是本问题的输入信息,另一个是分配的时刻子集与连通时刻集的匹配情况,匹配程度越高,连通时刻集中被保留作为候选时刻集的元素越多,后续规划传输时刻的优化空间也越大.设PIG中涂j颜色的节点集为Vj={vj1,vj2,…,vjbn},VjV,vjk={v(1),v(2),…,v(m)},vjk∈Vj.节点v与父节点pv的链路连通时刻集为CTv,pv.计算j颜色的节点的连通时刻集与时刻子集TSi的匹配度mij如式(4).mij=∑v∈Vj∑v∈v下面我们定义冲突子集j对应时刻子集TSi的权值为wij,如式(5)所示,这里α,β,γ为比例因子.根据权值进行冲突子集与时刻子集匹配的算法的基本思想是对于时刻子集TSi找出所有冲突子集的wij值最大的,将该时刻子集匹配该冲突子集,重复此过程,直至所有时刻子集均匹配.下面我们分析PTS-Peroid算法的时间复杂度.设图G的顶点数为n,总时刻个数为D.步1顶点着色算法时间复杂度为O(n2),步2划分时刻子集为O(1),步3计算权值的时间复杂度为O(nD),步4匹配算法时间复杂度为O(nlog(n)),综上PTS-Peroid算法的时间复杂度为O(n2+nD).5.2.2.2基于时间片的过滤候选时刻集算法PTS-Peroid算法中将整个时刻集分成时刻子集,然后对时刻子集进行颜色号分配,这里时刻子集Page10的划分采用等分或等间隔的方式,可能会将更优化的传输时刻规划漏掉,因此,我们考虑可以对每个时刻分别考量而不是对一个时刻子集进行考量.图7给出了Π问题的实例,如图所示由a到l组成的10个节点构成移动通信拓扑图,右侧为各链路的连通时刻集,左侧为以节点a为根的一棵移动聚集路由树.图8给出了采用PTS-Peroid算法的PTSDP算法的解,根节点a截止时刻7时收集的最大聚集信息量为9,树边上标注的是节点规划的发送数据的时刻.对于树间冲突图中的节点{f}分配的可用时刻子集为{6,7},节点{d,e}分配的可用时刻子集为{4,5},节点{j,k,l}分配的可用时刻子集为{1,2,3},图8的右侧即为PTS-Peroid算法求得的解,可以看出该算法的解求得的优化目标的值为9,节点e和节点f的数据没有被规划传输的机会.图8采用PTS-Peroid算法的PTSDP算法得到的解由于PTS算法中对节点的候选传输时刻集进行了过滤,经过PTS算法后规划传输时刻的解空间缩小了.因此,PTS算法应该尽量减少缩小的解空间范围.从图8中可以看出,经过PTS-Peroid算法,节点e的候选传输时刻集由{2,3,4,5,6}过滤为{4,5},节点f的候选传输时刻集由{3,4,5}过滤为空集,如果不采用时间段去过滤,而是针对单个时刻进行考虑时,就可以使得从候选时刻集中被过滤出去的时刻更少,也就是得到的解空间更大,因此,我们提出了PTS-Slot算法,采用PTS-Slot算法的PTSDP算法得到结果如图9所示,根节点a截止时刻7时收集的最大聚集信息量为11.图9采用PTS-Slot算法的PTSDP算法得到的解PTS-Slot算法的核心是每个时刻应该划分给哪些节点作为可用传输时刻.PTS-Slot算法首先用单时刻的树间冲突图t-PIG描述在一个时刻时节点之间的冲突关系,这个冲突关系可以通过树间冲突图提取出来,然后是将该时刻划分给部分节点可用.下面给出PTS-Slot算法的伪码.算法4.PTS-Slot算法.输入:树间冲突图G=(V,E),移动聚集路由树T=输出:新移动聚集路由树T=(V,ET)算法:1.FOR时刻t从1到D2.根据树间冲突图G得到t-PIG图.3.计算t-PIG图上的所有节点的权值w(t,i).4.在t-PIG上求最大权独立集IS:计算每个节点u的w(u)∑v∈N(u)w(v)值,选择最大值的节点加入IS,将该节点及邻居节点删除,重复直至处理完所有节点.从树间冲突图中提取单时刻树间冲突图的基本思想就是将包含某时刻t的可规划传输时刻集对应的节点保留,当PIG上的一个节点内包含的所有节点的可规划传输时刻集中都不包括该时刻时,这个节点不包含在t-PIG的节点集中,相连的边也被删除.对每个t-PIG,该图上节点之间的边eij表示在t时刻节点i中的节点的传输时刻和节点j中的节点的传输时刻不能同时规划时刻t,因此时刻t保留在哪个节点的候选传输时刻中是t-PIG图上的独立集问题.我们求解t-PIG图的最大权独立集,将时刻t从t-PIG图上的其他节点的候选时刻集中去掉.这里的核心就在于权值如何设计.在设计权值参数时要考虑两个因素,分别是节点在路由树上的高度和兄弟节点的个数.考虑节点在路由树上的高度和规划时刻时,节点在路由树上离根节点越远应该越早规划,离根节点越近应该越晚规划.考虑节点的兄弟节点个数和规划时刻时,如果节点的兄弟节点个数越多,竞争越激烈,可规划的时刻应该更多一些.利用式(2)计算t-PIG图上单节点的平均高度,利用Page11式(3)计算t-PIG图上单节点的平均兄弟个数,我们给出权值的定义为函数w:TS×V→R,其中TS为{1,2,…,D},V是t-PIG图的顶点集,R为实数集.w(t,i)=(t-btr/2)cosα-(shi/bi-hT/2)sin(t-btr/2)sinα+(shi/bi-hT/2)cos[其中α=2π-arctanD/hT,p、q、s为3个静态参数.求解最大权独立集采用一个贪心的算法[37],该算法由WMIN算法[37]改进得到,基本思想是每次从节点集选择w(u)∑v∈N(u)w(v)值最大的节点加入独立集,在原图上删除该节点及其邻居节点,重复上述过程直至图上没有节点.下面分析PTS-Slot算法的时间复杂度.设图G的顶点数为n,边数为m.步2需要遍历G时间复杂度为O(m),步3为O(n),步4为贪心法求最大权独立集的时间复杂度为O(n),步2、3、4要循环D次,因此PTS-Slot算法的时间复杂度为O((n+m)D).5.3消除树内冲突通过PTS算法,我们得到新移动聚集路由树,在该树上需要给出无冲突传输规划使得根节点收集的聚集数据最多.我们提出了基于动态规划思想的DAS-MRT算法.用X[i,W]表示节点i在传输时刻为W时发送的聚集数据包含的最多聚集信息量,DAS-MRT算法对节点所有的候选传输时刻根据节点在树上的深度从底向上逐层计算X[i,W],在计算X[i,W]时,需要选择节点i的儿子节点的传输时刻,使得儿子节点之间的传输时刻不冲突,我们将该子问题转化成二部图的最大权匹配问题,通过KM算法[38]进行求解.该二部图的构造方法为节点集分为A和B两个不相交子集,集合A为节点i的儿子节点集,集合B为儿子节点的候选传输时刻集的并集,集合A中的节点j与集合B中的时刻t之间有边当且仅当时刻t为节点j的传输候选时刻集中的元素,该边的权值为X[j,t].求解该二部图的最大权匹配即可求得父节点的X[i,W]值.DAS-MRT算法的伪码如下.算法5.DAS-MRT算法.输入:新移动聚集路由树T=(V,ET)输出:所有节点的聚集传输时刻算法:1.对于所有的叶子节点,初始化X[i,W]=1,i∈VL,W∈CTi,pi2.对于所有的节点,初始化X[i,0]=0,如果1∈3.考虑除了根节点r和叶节点的任一节点i,计算X[i,4.设节点i有k个儿子节点c1,c2,…,ck.任一儿子5.设临时变量NC=Ci6.(1)从W-1开始,将没有出现冲突的时刻分发7.WHILE((w-m)>1){8.如果|{cj|(w-m)∈CTcj,i}|==0,m+19.如果|{cj|(w-m)∈CTcj,i}|==1,将cj的W10.如果|{cj|(w-m)∈CTcj,i}|>1,跳出循环}11.(2)对剩下未处理的节点进行处理且从w-m开12.用NC的节点和可选时刻集构造最大权值匹配13.计算X[r,D]步1、2为初始化步骤.从步3~13为逐层计算除根节点以外的所有节点的X[i,1]值,其中步6~10是将不冲突的时刻直接分配,步11~12是将剩余的未规划节点利用KM算法进行规划.步13是计算根节点的X[r,D].下面分析DAS-MRT算法的时间复杂度.设移动聚集路由树T的高度为h,树上节点的最大度为Δ,节点总数为n,MRT中边的连通时刻集的基数的最大值为m.二分图最优匹配问题的KM算法[36]的复杂度为O(q3),其中q为二分图的边数.在每个节点i,W∈CTi,pi,我们需要计算X[i,W].对于叶子节点来说,i∈VL,W∈CTi,pi,X[i,W]均设为1,因此计算需要时间为O(m).对于第k层的节点来说,对于i∈V(k),W∈CTi,pi,计算X[i,W]需要的时间取决于EM算法的时间复杂度,这里二部图的边数为O(Δ2),由于KM算法的时间复杂度为O(q3),q为边数,因此计算X[i,W]的时间复杂度为O(Δ6),从而计算第k层一个节点的所有可传输时刻的X值的时间复杂度为O(mΔ6).由于同一层的节点的X值相互不影响,可以并行计算,因此第k层的节点的X值计算的时间复杂度为O(mΔ6).第k层节点的X值计算取决于第k+1层节点的X值.第h层为叶子节点,从h-1层开始逐层计算,计算到第0层的根节点的时间复杂度为O(m+Page12因此,DAS-MRT算法的时间复杂度为O(m+(h-1)mΔ6).(h-1)mΔ6).6仿真实验及其结果分析本文通过仿真实验分析采用不同的PTS算法的PTSDP算法的性能,同时与DB-VDG[28]进行了比较.DB-VDG是由Claudio等人提出的在车辆感知网络上进行限定延时的数据收集协议.这个协议包括两种策略,分别是SBSS和DBSS,在文献[28]中SBSS的性能更好,因此,我们采用SBSS策略的DB-VDG协议.PTSDP近似算法框架中核心是PTS算法的选择,PTS算法分为两类,分别是PTS-Peroid算法和PTS-Slot算法,这里PTS-Peroid算法可以采用两种划分时间子集方法,EI划分和A划分,分别记为PTSDP-PEI算法,PTSDP-PA算法,将采用PTS-Slot的算法记为PTSDP-S算法.仿真实验中将本文提出的PTSDP-PEI算法,PTSDP-PA算法和PTSDP-S算法与DB-VDG进行比较.6.1实验数据及其参数设置本文采用真实出租车移动轨迹数据集CSGPS进行仿真实验.CSGPS数据集是由MichalPiorkowski,NatasaSarafijanovic-Djukic,MatthiasGrossglauser[39]在2008年于美国旧金山采集的出租车GPS移动轨迹数据.该数据集的数据是由cabspotting①项目组提供的.该数据集包含在旧金山湾区的大约500辆出租车的30天的GPS数据.数据采集的开始时间为2008-05-17,结束时间为2008-06-10.数据集中每辆车的轨迹数据存储为以该车辆ID命名的txt文件,该文件中每一条记录为一个时刻该车辆的GPS数据.该数据集具体数据以及更详细的信息可在http://crawdad.cs.dartmouth.edu/epfl/mobility/CSGPS上获取.我们对数据进行预处理,首先对整个数据采集时间段进行分片,将每个时间片内出现的GPS数据整理为一个文件,形成单时间片GPS数据文件,然后根据给定的通信半径以及圆盘模型,形成单时间片通信拓扑图文件.实验中关于数据集和算法的默认参数见表1.我们采用NS2模拟器模拟无线网络传输,这里MAC层采用802.11p协议.我们将处理后的GPS轨迹导入NS2,在NS2上运行规划算法,按照得到的结果进行实际数据传输.CommunicationRangeCardinalNumberofTS6.2性能指标指标来评测数据收集的有效性、效率和时效性:为了分析数据收集算法的性能,我们定义3个(1)数据收集率是度量数据收集算法的有效性的指标,也就是数据收集算法将相关的节点数据路由到AP的能力.该度量是AP收集到的节点数据占节点总数的比例,定义如下这里Ndelivered是AP收集到的节点的数据总量,Nnodes是节点总数.(2)平均传输数据率是评测传输数据时消耗的带宽量的指标,即度量算法的效率.该度量是节点发送的数据总量与AP收集到的节点的数据总量的比值,定义如下这里Si为节点i发送的数据量,delivered是AP节点收集到的数据对应的节点集,Ndelivered是AP收集到的节点的数据总量.(3)平均延迟是度量数据收集算法的时间性能的指标.该度量是收集上来的数据的延迟的平均值,定义如下这里ti为节点i的数据到达AP节点的时刻,received是AP节点收集到的数据对应的节点集,Nreceived为AP收集到的节点的数据总量.6.3性能对比为了分析PTSDP系列近似算法的性能,我们将该算法与DB-VDG算法从数据收集的有效性、效①CabspottingProject.http://cabspotting.org/about.htmlPage13率和时效性3个方面进行对比.从表2中可以看出本文提出的PTSDP-PEI算法、PTSDP-PA算法和PTSDP-S算法从数据收集的有效性、时效性和效率上均优于现有的最好的DB-VDG算法.3种算法中数据收集的有效性最高的是PTSDP-S算法,这是由于该算法考虑部分冲突的粒度是单个时刻,而相比较PTSDP-PEI算法和PTSDP-PA算法考虑部分冲突的粒度是时间段,PTSDP-S算法处理的粒度更细,因此效果更好.对于数据收集的时延,本文提出的3种算法略小于DB-VDG算法,这是由于DB-VDG算法在数据聚集过程中传输的数据量较大,因此最大延时会更高.本文提出的算法在数据收集效率的评测指标上的结果均为1,这是由于本文提出的算法进行了完全的聚集,即根据移动路由聚集树结构,当父节点等到所有规划传输的儿子节点发送完数据以后,父节点才将所有已收到的数据和自己的数据进行聚集发送出去,之后父节点不再进行数据传输,因此,每个节点只发送一次数据,所以收集到的聚集数据量即为发送数据的节点个数,因此,数据收集效率为1,而DB-VDG算法在传输数据过程中是通过阈值控制数据转发的方式,存在大量节点需要多次发送数据的情况,即没有实现最大化的数据聚集,因此,在数据收集的效率上本文提出的3个算法要远远好于DB-VDG算法.DB-VDG0.647PTSDP-PEI0.786PTSDP-PA0.693PTSDP-S0.8176.3.1节点数量对性能的影响本组实验主要研究节点数量对算法性能的影响.除节点数量以外的其他参数采用默认参数,见表1.从图10中可以看出随着节点个数的增加数据收集率逐渐下降.本文提出的PTSDP-S算法比其他算法的下降趋势缓慢得多,因此,在数据收集的有效性上该算法要远远优于DB-VDG算法.PTSDP-PEI算法和PTSDP-PA算法的下降非常迅速,这是由于当节点个数增加时,树间冲突图中的节点和边的个数都会增加,使得时间槽个数远远小于分配颜色数,在过滤时会造成很多的候选时刻被去除,使得规划传输的机会大大降低,但PTSDP-S算法是针对单个时刻构造树间冲突图,因此树间冲突图的大小变化不大,也就使得数据收集的有效性很高.从图11中可以看出数据收集的平均延迟随着节点个数的增加变化不大,4种算法相比较来看,DB-VDG算法的平均延迟更高,这是由于DB-VDG采用阈值控制数据的转发,因此只有在达到阈值时采用转发数据,否则采用携带策略,这也就导致了收集上来的数据的延迟较高.PTSDP系列算法是采用完全聚集的策略,因此数据会尽可能早地路由给父节点,这也就使得收集到的数据的平均延迟较小.6.3.2延迟界对性能的影响本组实验主要研究延迟界对性能的影响.除延迟界以外的其他参数采用默认参数,见表1.从图12和图13中可以看出随着延迟界的增加,数据收集率和平均延迟均是逐渐增加的.图12中4个算法中PTSDP-S算法的数据收集率增长趋势更快,DB-VDG算法是缓慢增加的,这说明了PTSDP-S算法随着延迟界的增加,可规划的空间变大,优化的机会更多,因此性能提高更显著.PTSDP-PEI算法和PTSDP-PA算法随着延迟界的增加,数据收集率的增长并不迅速,这是由于虽然延迟界的增加使得规划时刻个数增加,但还是小于树间冲突图的颜色数,因此仍然存在大量候选时刻被过滤掉的问题.Page14从图13中,我们可以看出平均延迟几乎随着延迟界同步增长的,但本文算法的增长趋势比DB-VDG算法逐渐变缓,这是由于本文采用的路由树在构造时考虑了延迟的优化,因此在保证数据收集率的情况下平均延迟也是优化的.7结论实时感知数据的采集和聚集是智能交通系统中各种应用的基础.而现有的车辆上的数据聚集研究大部分采用通过阈值进行调整的策略,没有利用无线通信网络本身的动态通信拓扑信息,因此,本文分析现有研究的不足,提出基于移动通信拓扑图在移动路由聚集树规划无冲突的数据传输规划问题.首先我们形式化了无线移动感知网络上的单传无冲突数据聚集传输规划问题,并证明了该问题是NP完全的.然后提出了求解该问题的PTSDP算法框架,基本思想是将传输冲突分两种情况处理,将发送节点发送数据时干扰其他正在接受数据的节点的情况用树间冲突图进行描述,将发生冲突的时刻划分给一方可用于规划,其他节点不能使用该时刻传输数据,然后再用移动路由聚集树上的动态规划算法处理一个接收数据节点的多个发送数据节点之间传输不冲突问题.最后我们通过利用真实出租车轨迹数据集上的实验验证了本文提出的近似算法比现有的最好的DB-VDG算法在数据收集的有效性、效率以及评价延迟上都高出1/4左右.本文研究移动感知网络上的数据聚集问题采用先建立路由聚集树然后进行传输规划的思路,树的结构影响规划的效果,因此,更优化的思路是建树和传输规划一起做,边建树边规划合理的传输时刻.我们下一步即研究在移动通信拓扑图上不依托给定路由树结构的无冲突数据传输规划问题.
