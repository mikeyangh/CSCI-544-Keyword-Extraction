Page1ε-近似和加权公平性保证的无线传感器网络拥塞控制算法李国华李建中高宏(哈尔滨工业大学计算机科学与技术学院哈尔滨150001)摘要针对现有的无线传感器网络拥塞控制算法中很少考虑数据压缩和加权公平性的问题,提出了一种ε近似和加权公平性保证的拥塞控制算法.首先,我们对传感器节点产生的时间序列采用贪心分段常值ε近似(GreedyPiecewiseConstantε-Approximation,GPCA)的策略,极大地减少了数据通信量.其次,我们给出了具有加权公平性保证的拥塞控制算法(WeightedFairnessGuaranteedCongestionControlAlgorithm,WFCC),并首次给出了公平性度量的下界1-(10c/9)2,其中c为常数且0<c<0.2.实验结果表明,GPCA具有很好的压缩性能,WFCC达到了较高的吞吐量和加权公平性(95%以上).关键词无线传感器网络;拥塞控制;ε-近似;加权公平性;拥塞度量1引言无线通信技术、微电子技术及嵌入式计算技术的快速发展使得无线传感器网络被广泛应用于环境监测、健康监护、智能家居及战场监控等领域.无线传感器网络由许多分布于特定区域且具有一定计算、存储和通信能力的传感器节点组成.每个节点只能与附近几跳的节点通信,数据通过多跳转发才能到达sink节点.当传感器节点接收数据包的速率大于其转发或调度速率时,需对过剩的数据包进行缓存;当缓存的数据包队列满时,过剩的数据包就会被丢弃,即引发无线传感器网络中的拥塞问题.拥塞不仅增加包的延迟,降低网络吞吐量且浪费能量.因此如何有效地减缓拥塞是无线传感器网络技术研究的一个重要方面.目前,几乎所有的拥塞控制算法都没有考虑对数据进行预处理后再进行传输的问题.在无线传感器网络应用中,连续稠密采样能极大地提高对现实世界的感知程度,然而如果不加处理将采集的原始数据存储再转发将带来很大的存储和通信开销.为了从源头上减少数据的传输量,我们对传感器节点产生的时间序列采取贪心分段常值ε近似(GreedyPiecewiseConstantε-Approximation,GPCA)的策略,使得一个连续的子序列仅需要一个常值来近似且保证其与真实值的误差不大于ε.这样既没有严重损害数据的保真度,还减少了数据传输的通信开销,从而延长了网络的生命周期.节点在得到时间序列的常值近似后,将相应的常值及近似的起止时间存入缓冲队列,等待调度传输.衡量拥塞控制算法有效性主要有两个指标:一是服务质量,包括吞吐量、时延;二是加权公平性[1-2].目前的大多数拥塞控制算法主要考虑了服务质量,而很少考虑如何保证数据传输的加权公平性问题,即如何保证sink节点接收到不同传感器节点产生的数据包数目与传感器节点的重要性成正比.保证加权公平性可以使sink节点从重要的数据源获得更多的数据包.然而,现有的拥塞控制算法均没有全面地从服务质量和加权公平性这两个方面进行考虑.文献[3-4]主要考虑了如何提高数据传输的效率,即服务质量,而未涉及加权公平性.文献[5-6]不仅考虑了服务质量,还考虑了公平性,但只是简单的公平性,即保证sink节点在某段时间内接收每个节点的数据包一样多.文献[1-2]考虑了服务质量和加权公平性,但只是启发式方法,没有具体的加权公平性度量和理论结果保证.针对上述不足,我们提出了一个新的拥塞控制算法,不仅考虑了数据传输的服务质量,还首次给出了一个加权公平性度量,并在理论上给出了其的一个下界.由于不同的节点可能装有不同的传感器,所产生的数据的重要性不一样.故一个好的拥塞控制算法应该使sink从重要的传感器节点接收较多的数据包.我们给每个节点i赋予一个权值wi,wi越大表示节点i产生的数据越重要.我们采用下面的公式[7]作为公平性度量.这里,Pi,t表示sink节点在时间段[0,t]接收来自节点i的数据包数量,N表示节点总数.当Pi,t/wi=Pj,t/wj(j∈[1,N],j≠i)成立时,ft=1,此时达到了最大的公平性.当Pi,t/wi为正数而Pj,t/wj=0(j∈[1,N],j≠i)时,ft=1/N,此时达到了最小的公平性.我们在理论上严格证明了ft1-(10c/9)2,其中c为常数且0<c<0.2.综上所述,目前的拥塞控制算法各有其针对性和局限性,均是对原始数据进行操作,且没有给出加权公平性一个量化表达式.基于此,本文联合考虑了数据压缩和拥塞控制技术,提出了一个ε-近似和加权公平性保证的拥塞控制算法,其由两个子算法组成:on-line的贪心分段常值ε近似算法(GPCA)[8]和加权公平性保证的拥塞控制算法(WeightedFairnessGuaranteedCongestionControlAlgorithm,WFCC).GPCA分布式地运行在每个非sink节点,对节点产生的时间序列进行贪心分段近似,使得每一个连续子序列仅需要一个常值来描述,这样不仅减少了存储开销,更重要的是减少了通信开销.我们证明了在常值ε近似算法中,GPCA是最优的.WFCC以进入节点的平均数据包速率除以流出节点的平均数据包速率作为拥塞度量,对进入节点的数据包速率进行调节,使得单位时间收到孩子节点传输的数据包的数量与其权值大小成正比.我们随后分析说明通过这种局部公平调速,可以达到全局的公平性,并给出了理论证明.综上,本文的主要贡献总结如下:(1)本文设计了一个贪心分段常值ε近似算法,并证明其在所有满足ε近似的分段常值近似中是最优的.(2)本文首次给出了无线传感器网络中加权公平性度量的定义.Page3(3)本文提出了一个分布式的加权公平性保证的拥塞控制算法,并首次给出了加权公平性的一个下界1-(10c/9)2,其中c为常数且0<c<0.2,且给出了其严格的理论推导.(4)本文进行了广泛的实验来评估算法性能,实验结果表明本文提出的拥塞控制算法不仅达到了较高的吞吐量,且其加权公平性平均达到了95%,验证了我们的理论分析.本文第2节讨论相关工作;第3节介绍算法GPCA;第4节给出算法WFCC;第5节对WFCC的加权公平性进行分析;第6节是实验和分析;第7节是本文结论部分.2相关工作ε时间序列近似[8-10]是时间已久一种有损数据压缩方法,虽然丢失了一些数据精度,但仍可以满足查询用户的需求且减少数据的存储、计算和通信开销.文献[8]考虑在数据流模型中,给出了两个空间有效的且有质量保证的L柱状近似算法.文献[9]考虑如何动态地融合多个传感器节点的数据,进行数据压缩以减少通信开销.文献[10]给出了一个能以任意精度近似原始时间序列的算法EAQ,其能支持多种不同的查询.文献[8]虽给出了贪心分段常值ε近似,但并没有给出其方法最优性的严格的数学证明,我们在本文给出了其最优性的严格证明.文献[9-10]的方法适用于对数据延迟不敏感的传感器网络应用.而对数据延迟敏感的应用一般使用on-line近似时间序列方法,因为它可以极大地减少数据的延迟.本文的ε近似时间序列方法为on-line近似时间序列方法.早期研究拥塞问题的主要文献有CODA[8]、Fu-sion[9]、CCF[11]、IFRC[6]和文献[12].文献[8]给出了最早的被动拥塞控制机制CODA,它通过检测传感器节点缓冲区队列的长度或信道利用率来侦测网络中是否发生拥塞.如果发生了拥塞,则通过局部地降低上一跳节点的发送速率来缓解局部拥塞,同时采用闭环多源调节机制来缓解大范围拥塞和长期拥塞.文献[9]给出的Fusion拥塞控制机制综合利用3种技术来进行拥塞控制:一是在拥塞发生时逐跳地向源节点发反馈信息,以减少数据包的丢失和避免能量浪费;二是限制源节点的发包速率;三是用带优先权控制的MAC协议给缓冲区占有率高的节点以更高的通信信道访问权.Fusion机制能有效地缓解拥塞现象,但没有给出保证事件公平性的措施.CCF[11]和IFRC[12]能达到非常好的简单的公平性,但是未考虑加权公平性.文献[12]提出了一种拥塞避免的方法,即发送者只有在接收者通知其缓冲区未满时的条件下才发送数据包.文中还考虑了可能由于隐终端问题而引起的拥塞,并给出了一种通过广播1/k剩余缓冲区的方法来避免由于隐终端问题引起的拥塞.尽管该方法能有效地避免拥塞,但由于每个包都得携带关于剩余缓冲区大小的信息,所以通信消耗的能量开销较大.最近的关于拥塞问题的文献主要有PCCP[1]、RCRT[13]和RCCAP[14].文献[1]以数据包的平均服务时间与数据包的平均到达时间的比值作为拥塞度量,每个节点每接收到一定数目包,就通过广播将自己的拥塞度告知给子节点,子节点根据父亲节点的拥塞度量值相应地调节自己的发送速率和采样速率.文献[13]以RTT(Round-TripTime)的整数倍作为拥塞度量,端对端地通过对节点的传输速率进行AIMD(AdditiveIncrease/MultiplicativeDecrease)的方法来缓解拥塞.文献[14]通过单神经元和PID控制结合的方法减缓拥塞.在上述拥塞控制的相关研究中,均没有考虑数据压缩或近似技术,且或者没有考虑公平性,或者只考虑简单的公平性和加权公平性,没有理论上的分析和证明.基于此,本文联合考虑数据压缩技术和拥塞控制技术,提出一种保证ε近似和加权公平性的拥塞控制算法.ε近似减少了数据的存储和通信开销,加权公平性的保证提高了传感器网络的负载平衡能力,从而延长网络的生命周期;且我们证明了GPCA的最优性,并首次给出了拥塞控制算法中加权公平性度量的下界,1-(10c/9)2,其中c为常数且0<c<0.2.3拥塞控制算法概述在无线传感器网络中,节点通信所消耗的能量远远大于计算所消耗的能量[1],所以减少数据的通信量可以极大地减少能量的消耗,而且还可以减缓拥塞.基于此,我们提出了一个对数据先进行压缩然后再传输的拥塞控制算法.其基本思想是:(1)先对每个节点的原始采样数据进行压缩,使得多个连续的采样数据可被一个常值c近似且保证近似值与原始采样值之间的误差小于ε,然后将三元组〈c,[ta,tb]〉压入队列,等待调度传输.(2)由于有一些传感器产生的数据比较重要,因此需要更高的数据传输速率(带宽).我们首先量化了每种传感器节点产生的数Page4据的重要性,赋予每种传感器一个权值,然后在进行数据的调度传输时,不仅保证重要的数据源获得的带宽比较高,且尽量使得每个数据源获得的带宽与其权值成正比.据我们所知,本文是第一篇不仅保证了对原始数据的ε近似,且首次给出了加权公平性的一个下界的论文.下面分两个小节对算法的基本思想进行详细的说明.其中第4节的贪心分段常值ε近似算法GPCA对应基本思想中的(1);第5节的加权公平性保证的拥塞控制算法WFCC对应基本思想中的(2).4贪心分段常值ε近似算法4.1预备知识假设S(n)=〈x[t1],x[t2],…,x[tn]〉为一个传感器节点产生的时间序列,其中th(1hN)为节点采样的时刻;x[th](1hN)为节点采样得到的属性值.S[ta:tb]=〈x[ta],x[ta+1],…,x[tb]〉表示S(n)的一个连续子序列.我们使用贪心分段常值近似的方法近似S(n),使得每一段的子序列仅需要一个常值来描述.这样我们对每一个子序列只需记录常值及子序列的开始时间和结束时间.从而大大减少了记录整个时间序列的开销.假设最后将产生H个常值(c1,c2,…,cH)近似序列S(n),其中c1近似子序列〈x[t1],x[t2],…,x[tj1]〉,ch(2hH)近似子序列〈x[tjh-1+1],x[tjh-1+2],…,x[tjh]〉,其中jH=n.假设S^(n)=〈x^[t1],x^[t2],…,x^[tn]〉为(c1,c2,…,cH)近似S(n)得到的时间序列,我们用下面的E范数来量化两个序列的误差.其表达式为E(S(n),S^(n))=max1pn|x[tp]-x^[tp]|.我们的优化问题是:对于给定的时间序列S(n)=〈x[t1],x[t2],…,x[tn]〉,误差界ε和误差函数E(),找到最小长度的常值序列(c1,c2,…,cH),使得E(S(n),S^(n))ε.4.2贪心分段常值ε近似算法贪心分段常值ε近似算法(GPCA)的主要思想描述如下.对子序列S[ta:tb]中的最大值和最小值我们分别用maxapbx[tp]和minaqbx[tq]表示,当maxapbx[tp]-minaqbx[tq]2ε时,我们用c=(maxapbx[tp]+minaqbx[tq])/2来近似子序列S[ta:tb].此时,易得对amb,|c-x[tm]|max{|c-minaqbx[tq]|,当新来数据点(tb+1,x[tb+1])时,(1)若maxapb+1x[tp]-minaqb+1x[tq]2ε时,我们用c0=(maxapb+1x[tp]+minaqb+1x[tq])/2来近似子序列S[ta:tb+1].(2)否则,若maxapb+1x[tp]-minaqb+1x[tq]>2ε,则子序列S[ta:tb+1]不能被一个常数c近似且保证误差不大于ε.因为|maxapbx[tp]-c|+|c-minaqb+1x[tq]|>2ε,所以|maxapbx[tp]-c|与|c-minaqb+1x[tq]|两者必有一个的值大于ε.故我们用c1=(maxapbx[tp]+minaqbx[tq])/2近似子序列S[ta:tb],且在时间tb+1开始一个新的子序列的近似.为了证明贪心常值ε近似的最优性,我们先证明下面的引理.引理1.给定任意时间序列S[ta:tb]=〈x[ta],x[ta+1],…,x[tb]〉,误差界ε和误差函数E().(1)若S[ta:tb]可用一个常数近似且保证误差小于等于ε.则对a1,b1,aa1<b1b,S[ta1:tb1]可用常数近似且保证误差小于等于ε.(2)若S[ta:tb]不能被一个常数近似且保证误差小于等于ε.则对a2,b2,a2a<bb2,S[ta2:tb2]也不能被一个常数近似且保证误差小于等于ε.证明.(1)设maxab和minab分别为S[ta:tb]的最大值和最小值,maxa1b1和mina1b1分别为S[ta1:tb1]的最大值和最小值.则有从而得到由算法描述可知,我们可用c=(maxa1pb1x[tp]+mina1qb1x[tq])/2来近似子序列S[ta1:tb1]保证其误差小于等于ε.(2)假设S[ta2:tb2]能被一个常数近似且保证误差小于等于ε,因为a2a<bb2,则由(1)可知,S[ta:tb]也能被一个常数近似且保证误差小于等于ε.得出矛盾.故S[ta2:tb2]也不能被一个常数近似且保证误差小于等于ε.定理1(最优性证明).给定时间序列S(n)=〈x[t1],x[t2],…,x[tn]〉,误差界ε和误差函数Page5E().在所有满足E(S(n),S^(n))ε的分段常值ε近似中,贪心分段常值近似算法产生最小长度的常值序列(c1,c2,…,cH).证明.反证法.假设有一个更小长度的常值序列(d1,d2,…,dH)(H<H)近似S(n)且满足E(S(n),S^(n))ε,其中,S^(n)为(d1,d2,…,dH)近似S(n)得到的时间序列.假设c1近似子序列〈x[t1],x[t2],…,x[tj1]〉,ch(2hH)近似子序列〈x[tjh-1+1],x[tjh-2+1],…,x[tjh]〉,其中jH=n.d1近似子序列〈x[t1],x[t2],…,x[tl1]〉.dh(2hH)近似子序列〈x[tlh-1+1],x[tlh-1+2],…,x[tlh]〉,lH=n.下面我们用数学归纳法证明对1mH-1,lH-m>jH-(m+1)成立.(1)当m=1时,lH-1>jH-2成立.否则,如果lH-1jH-2,则子序列S[tjH-2:tjH]S[tlH-1:tlH],故由引理1可知子序列S[tjH-2:tjH]可用dH近似且误差不大于ε.但是由算法可知S[tjH-2:tjH-1+1](S[tjH-2:tjH])不能被一个常数近似且保证误差小于等于ε.故由引理1可知S[tjH-2:tjH]也不能被一个常数近似保证误差小于等于ε.得出矛盾,故m=1时,lH-1>jH-2成立.(2)假设m=k<H时,lH-k>jH-(k+1)成立.则lH-(k+1)>jH-(k+2)成立.否则,若lH-(k+1)jH-(k+2)成立,则由归纳假设知lH-(k+1)jH-(k+2)<jH-(k+1)<lH-k,从而S[tjH-(k+2):tjH-(k+1)+1]S[tlH-(k+1):tlH-k],由引理1可知,S[tjH-(k+2):tjH-(k+1)+1]可用dH-k近似且误差小于等于ε.但是由算法可知S[tjH-(k+2):tjH-(k+1)+1]不能被一个常数近似且保证误差小于等于ε.得出矛盾,故lH-(k+1)>jH-(k+2)成立.由(1)、(2)可知对1mH-1,lH-m>jH-(m+1)成立.特殊地,当m=H-1,l1>jH-H成立,从而有S[t1:tjH-H+1]S[t1:tl1],由引理1可知,S[t1:tjH-H+1]可被d1近似且误差小于等于ε.而H-H1,从而有S[t1:tj1+1]S[t1:tjH-H+1],故由引理1可知S[t1:tj1+1]可被d1近似且误差小于等于ε.但是由算法可知S[t1:tj1+1]不能被一个常数近似且保证误差小于等于ε.从而得出矛盾.故不存在长度小于H的常值序列近似S(n)且满足E(S(n),S^(n))ε.4.3时间和空间复杂性分析由于GPCA是一个on-line算法,每当一个新的采样到达,只需要O(1)的空间和O(1)的计算时间,因为新采样值只需与之前未结束的子序列的最大值与最小值比较大小.故GPCA的时间复杂度为O(n),空间复杂度为O(1),其中n为时间序列S(n)的长度.5加权公平性保证的拥塞控制算法WFCC5.1节点模型和术语假设传感器节点连续地采集数据,中间节点不仅采集数据还转发来自其他节点的数据.每个节点在其应用层维护一个最大长度为L的循环队列作为缓存自身采样得到的和来自子孙节点的数据包的缓冲区,每个数据包的payload域由GPCA算法得到的〈ts,te,c〉三元组组成,其中c为[ts,te]时间段内子序列的近似值;每个节点有一个唯一的编号.并且,由于传感器节点所监测区域的重要性不同以及可能不同的节点所装传感器不一样,每个节点被分配给一个反映其重要性的正权值[1-2].传感器节点间的数据传输通过单路径的树状拓扑结构来实现.在路由结构中,如图1所示,根节点为sink节点,其编号为0;编号为i的节点关联一个二元组〈wi,swi〉,其中,wi是节点i的权值,swi是的以节点i为根的子树i中所有节点的权值和,即swi=∑j∈iwj.swi的计算在路由构造过程中完成.WFCC算法将利用二元组〈wi,swi〉来分配流入节点的总速率以满足拥塞控制过程中的加权公平性.我们用O(i)表示节点i的子孙节点总数,将直接传输数据包给节点i的节点j称为节点i的孩子节点,相应地称节点i为节点j的父亲节点.r(i)send分别表示节点i的采样速率和发送速率.r(i)r(i)示进入节点的总速率,且有r(i)其中child(i)为节点i的孩子节点编号集合.5.2拥塞度量的计算我们使用文献[8]中的拥塞度量来测量每个节点的局部拥塞情况,与文献[8]中不同的是,我们将Page6t-(i)流入的数据包速率公平地分配给孩子节点和自身节点分别作为其在下一个时间段的发送速率和采样速率来实现加权公平性.最后,我们从理论上证明了通过这种局部的公平速率分配策略可以达到很好的全局公平性,并给出了一个下界.下面我们先给出几个定义,然后给出拥塞度量的表达式.定义1(数据包的服务时间).数据包的服务时间ts是指从数据包到达MAC层的时间到数据包的最后一个比特成功发送的时间间隔.定义2(数据包的间隔到达时间).数据包的间隔到达时间ta是指两个连续到达节点网络层的数据包之间的间隔时间.单个的ts和ta只反映短时间内的包的服务时间和间隔到达时间,为了更长时间更准确反映包的平均服务时间和平均到达时间,每发送一个数据包,我们使用指数加权移动平均方法更新节点i的数据包平均服务时间t-(i)其中,0<qs<1(实验中qs=0.1)是一个加权常数,tnew是第h+1个数据包的服务时间.类似地,每收到一个数据包,我们使用指数移动加权平均方法更新数据包平均到达时间t-(i)其中,0<qa<1(实验中qa=0.1),tnew是第m个与第m+1个数据包到达的间隔时间.定义3(拥塞度量).节点的拥塞度量值是指数据包的平均服务时间与数据包的平均到达时间之间的比值.其具体计算式如下:从其表达式易见,当数据包的平均到达时间小于平均服务时间时,d(i)>1,即流入的速率大于流出的速率,说明节点拥塞程度较严重.反之,d(i)<1,即流入的速率小于流出的速率,说明节点拥塞程度较轻.d(i)能根据网络的变化情况自适应地进行调节,为实现拥塞控制提供了动态指示信息.下面,我们描述如何利用拥塞度量来进行速率的公平分配.5.3速率的公平分配WFCC算法是一个分布式算法,在每一个节点上周期地运行.时间轴被划分成长度为T的周期序列.第k个周期是指(k-1)T到kT这个时间段.sam(k)表示节点i在第k个周期的采样速率.r(i)r(i)表示节点i在第k个周期的发送速率.r(i)在第k个周期流入节点的数据包总速率.其值等于在第k个周期自身采样速率和孩子节点的发送速率之和,即t-(i)下面我们分sink节点和非sink节点描述WFCC算法在一个周期内的运行情况.首先我们对算法在非sink节点上的运行过程进行描述.(1)非sink节点i的初始采样速率和发送速率分别设置为r(i)中r0为初始设定的基准速率.下面我们以一个周期为例,来说明节点的行为.我们将节点分成两类来描述:一类是有孩子节点;另一类是没有孩子节点.先讨论WFCC算法在第1类节点(有孩子节点)上运行时的行为.①在kT时刻,即第k+1个周期的开始时间,节点i比较拥塞度d(i)与1的大小.若d(i)>1,则更新其中,0.9Factor1<1(实验中Factor1=0.9)为减速因子.若d(i)1,则更新其中,1<Factor21.1(实验中Factor2=1.1)为增速因子.得到r(i)配给节点i及其孩子节点分别作为其在下一个周期的采样速率和发送速率.具体计算式如下:send(k+1).这里我们没有传r(i)其中节点j为节点i的孩子节点且swi=wi+∑j∈child(i)swj.r(i)send(k+1)的计算实现是通过将二元组〈swi,1000/r(j)in(k+1)〉捎带在数据包的头部,节点i在广播这个r(i)数据包的同时,其孩子节点j收到这个包后,就可以计算r(j)1000/r(i)中,包只存整数形数据.这样对节点i来说,流入的数据包速率被公平地分配给自身和其孩子节点分别作为其在下一个周期的采样速率和发送速率.②若节点i属于第2类节点,即没有孩子节点的节点.只需sam(k+1)=r(i)计算r(i)如①所述是在收到其父亲节点的广播包后进行的.(2)sink节点0采用AIMD(AdditiveIncrease/Muliti-plicativeDecrease)的方法来调节流入的数据包总速率.其具体调节过程如下:在kT时刻,比较in(k)与∑1jNr(0)为提高链路的利用率,对r(0)节,其计算式如下:Page7其中,AddFactor>0(实验中视网络大小而定,一般在[2r0,5r0])为加性增因子.若r(0)为减缓拥塞,对r(0)式如下:其中,0<MulFactor<1(实验中一般在[0.9,0.98]中取值)为乘性减因子.得到r(0)们将其公平地分配给节点0的孩子节点分别作为其在下一个周期的发送速率.具体计算式如下:send(k+1)=r(0)r(j)其中,∑j∈child(0)swj=∑1jN节点.其具体实现同(1)一样.的运行伪代码.下面我们给出WFCC算法在第k+1个周期内算法1.加权公平性保证的拥塞控制算法.输入:wi,swi(1iN),r(0)输出:r(i)/N表示节点总数,NumOfChild(i)表示节点i的孩1.if(NodeID!=0)2.if(NumOfChild(i)!=0)3.if(d(i)>1)4.r(i)5.else6.r(i)7.end;8.r(i)9.forj∈child(i)10.r(j)11.end;12.else13.r(j)14.end;15.else16.if(r(0)17.r(0)18.else19.r(0)20.end;21.forj∈child(0)22.r(j)23.end;24.Outputr(i)在WFCC算法中,每一个周期内流入节点i的数据包速率被完全公平地分配给自身及其孩子节点j分别作为其在本周期的采样速率和发送速率,且有sam(k+1)/wi=r(i)r(i)样带宽按节点i的权值及以其孩子节点j为根的子树的权值比例公平地分配给它们.这种局部公平的速率分配方案间隔地保证了全局的加权公平性.我们将在之后的加权公平性分析中严格证明.下面我们先分析算法的复杂性,之后再进行加权公平性分析.5.4WFCC算法复杂性分析我们分析WFCC算法在一个周期内的计算、存储和通信复杂性.从上面的算法描述可知,在一个周期内,WFCC算法在每个节点只需执行αT/r0次的四则运算操作,其中α8=6+2,6是指更新一次s(h+1)和t-(i)t-(i)指计算tnew和tnew所各需的2次减法操作;T/r0一般小于1000.在无线传感器网络中,传感器节点用无线方式传播1bit到100m远所消耗的能量可供执行3000条左右加法指令[15].故相比于缓冲区溢出引起重传数据包的浪费的能量,运行WFCC算法的计算开销是值得的.除了正常的数据存储外,额外的所需的变量个数不超过15个,其存储开销小于60字节.对一般的传感器节点(如Telosb节点的扩展内存有1兆字节),是可以承受的.我们重点关注的是算法的通信复杂性,为降低通信代价,我们采用隐式的拥塞通知方法:即将拥塞信息(swi,1000/r(i)捎带在数据包的头部,利用无线信道的广播特性,孩子节点也能接收到这个数据包,之后就可以对包进行解析和计算.隐式的拥塞通知方法并没有影响正常的数据传输,只需要将必要的拥塞信息捎带在数据包的头部即可.故WFCC算法所需的额外通信较低.6加权公平性分析6.1加权公平性度量如前所述,由于传感器节点所监测区域的重要性不同以及可能不同的节点所装传感器不一样,每个节点被分配给一个反映其重要性的正权值.我们以wi表示节点i的正权值.直观地,如果wi>wj,我们希望单位时间内sink节点接收来自节点i的包的数目Pi大于来自节点j的包的数目Pj,最理想的情况(也是最公平的情况)是wi/wj=Pi/Pj.为了量化这种加权公平性,我们使用和文献[5]一样的公平性度量,其表达式如下:f(y1,y2,…,yN)=∑NPage8其中,N表示传感器网络中节点总数.这里的yp不是文献[5]中的数据包速率,而是TPp与wp的比值.这里TPp表示在前M个周期sink节点接收来自节点p的数据包总数.当TPp/wp=TPj/wj(1jN,j≠p)成立时,式(8)的值等于最大值1,此时达到了最好的加权公平性.当TPp/wp>0,而TPj/wj=0(1jN,j≠p)时,式(8)的值等于最小值1/N.此时的加权公平性最差.基于式(8),我们定义在前M个周期内的加权公平性度量如下:(fM=f∑Mw(=∑Np=1∑MN∑Np=1∑M6.2加权公平性分析下面我们先给出几个重要的引理及其证明,然后基于这些引理,证明fM1-(10c/9)2.点,则有引理2.节点i和j为路由树中的任意2个节k=1y()jyp+∑j≠py()j[p+∑j≠pp+b2)-(yp+b1)2[(yp+Δyp)2+b2]由于b2-b21-2b1yp=(b2+y22b1yp)=∑Nb1>0,又b1>0和N(y2故Δf<0当且仅当下面3个条件之一成立.(1)Δyp>0且yp>y0.(2)Δyp<0且0yp<y0.(3)yp=y0且∑N其中,y0=b2/b1.其中,c=|Factor1-Factor2|.证明.由式(4)、(5)和式(6)可知sam(k)=r(i)r(i)其中,m∈{1,2}.则由上式易知sam(k)r(i)wi-r(j)其中,c=|Factor1-Factor2|.引理3.关于式(8),如果只改变yp为yp+Δyp,而不改变yj(j≠p,1jN),则f(y1,y2,…,yp-1,yp+Δyp,yp+1,…,yN)<f(y1,y2,…,yp-1,yp,yp+1,…,yN)成立当且仅当下面3个条件之一成立.(1)Δyp>0且yp>y0.(2)Δyp<0且0yp<y0.(3)yp=y0且∑N其中,y0=b2/b1,b2=∑j≠p证明.由式(8)可知2]2=[(yp+Δyp)+b1]2推论1.若0<yminypymax(1pN),则式(8)中的f取最小值fmin时,yp=ymin或yp=ymax两者必成立一个.证明.因为b2=∑j≠p若b1=0.则yj=0(j≠p,1jN).此时yp>0且yp=ymin=ymax,命题成立.若b1≠0,由表达式易知yminb1b2ymaxb1,即yminy0ymax.下面分两种情况分析:(1)若ymin<y0<ymax,则由引理3可知,对y0<yp<ymax,我们可以减少f的值通过增加ypPage9直到yp=ymax;对y0<yp<ymax,我们可以减少f的值通过减少yp直到yp=ymin;对yp=y0,我们可以减少f的值通过增加或减少yp直到yp=ymin或yp=ymax.(2)若y0=ymin或y0=ymax,则y1=y2=…=yN=ymin=ymax.如若不然,当y0=ymin成立时,如果p0∈[1,N],使得yp0>ymin,则有y2pyminyp(p∈[1,N]且p≠j,p0),可得∑p≠jy2y()pymin,即y0>ymin,与y0=ymin矛盾,故y1=∑p≠jy2=…=yN=ymin=ymax.同理可知,当y0=ymax成立时,y1=y2=…=yN=ymin=ymax.证毕.基于推论1,我们来分析式(8)中的f的下界,得到如下的引理.引理4.如果0<yminypymax(1pN),则式(8)中的f有下界4K/(1+K)2,即f4K/(1+K)2.其中K=ymax/ymin.证明.由推论1可知,当f取最小值fmin时,对p,1pN或者yp=ymin或者yp=ymax.假设f=fmin时,ymin和ymax的个数分别为m0和N-m0.为方便分析,我们令m0=λN(0<λ<1),K=ymax/ymin.则fmin=[m0ymin+(N-m0)ymax]2N[m0y2min+(N-m0)y2max]=[λ+(1-λ)K]2(1-K)2λ+K=(1-K2)λ+K2令t=λ-K2fmin=其中,等号成立条件是t=tmin=-KK2(-K2K2-1,-1时,f取最小值4K基于上面的引理和推论,我们得到下面的定理.定理2.如果我们以式(9)中fM作为网络在前M个周期的加权公平性度量,则其中,c=|Factor1-Factor2|0.2.Factor1和Factor2分别为式(4)和(5)中的减速因子和增速因子.证明.令Sp(M)=∑M由式(9)可知fM可重写为如下表达式由引理2可得|Sp(M)-SN(M)|∑M令Smin(M)=SN(M)-cMr0,Smax(M)=SN(M)+cMr0,则对p,1pN,有又SN(M)=∑Mr0,故Smin(M)0.7Mr0,故对p,1pN,有令KM=Smax(M)理4可得因为KM=Smax(M)fM4又SN(M)0.9M·r0,故fM1-(10c/9)2.注.由于在证明下界时,对于|Sp(M)-SN(M)|sam(k)r(p)∑M而实际运行中Sp(M)≈SN(M),故实际运行时fMk=1Page10的值非常接近1.其具体接近程度在接下来的实验中可以看到.7实验和分析下面我们通过实验评价算法GPCA和算法WFCC的性能.其中,我们使用IntelLabData①来检验算法GPCA的压缩效率;在TOSSIM模拟平台下,通过与目前最好的基于速率的拥塞控制算法PCCP[1]进行对比实验来检验算法WFCC的性能.7.1算法GPCA性能评价为了衡量算法GPCA的压缩性能,我们给出两个性能指标,其定义如下.压缩率.其值等于n/H,其中n为原始时间序列S(n)的长度,H为近似S(n)的常值序列的长度.平均绝对值误差.SumOfAbsoError(n)/n,其中SumOfAbsoError(n)为原始数据与近似数据的绝对值之差的累积和,n为原始序列长度.下面,分两组实验来检验算法GPCA的性能.第1组:在ε不固定情况下,检验算法GPCA在单源数据上的运行性能;第2组:在ε固定情况下,检验算法GPCA在单源数据上的运行性能.图2为算法GPCA在节点1上运行时其压缩比和平均绝对值误差随误差界ε变化的情况.这里我们使用的数据为IntelLabData中节点1采集的前10000个温度数据.图2(a)为误差界ε从0.05递增到0.1时,压缩比的变化情况.易见,随着误差界ε的放宽(即ε增大),压缩比逐渐增大.当ε=0.1时,其压缩比等于7.5301,大大减少了数据的存储和通信开销.图2(b)为误差界ε从0.05递增到0.1时,平均绝对值误差的变化情况.当误差界ε从0.05递增到0.10时,平均绝对值误差从0.01253递增到0.02515.由此可见平均绝对值误差与最大误差之比接近于1/4.图3为在ε=0.05的条件下,算法GPCA在多个节点上的温度数据上运行时的性能.这里我们使用的数据为IntelLabData中节点1~10(节点5除外,因为其温度传感器故障)各自采集的前10000个数据.图3(a)为在ε=0.05的条件下,算法GPCA在各个节点上运行所达到的压缩比.其中GPCA在节点7上压缩比最大,为7.7101;在节点1上的压缩比最小,为4.3535.由此可见节点7所监测区域的温度变化比节点1所监测区域缓慢.图3(b)为在ε=0.05的条件下,算法GPCA在各个节点上运行产生的平均绝对值误差.节点2的平均绝对值误差最小,为0.01221;节点4的平均绝对值误差最大,为0.01349.由图易见,所有节点的平均绝对值误差基本维持在ε/4,即0.0125左右变化.由图2和图3可知,算法不仅达到了很好的压缩效率,且其平均绝对值误差远低于最大值误差ε.①http://db.csail.mit.edu/labdata/labdata.htmlPage117.2算法WFCC评价我们用TOSSIM来进行模拟实验来检验算法WFCC性能.其中,TOSSIM(TinyOSsimulator)是TinyOS(UCBerkeley开发的开放源代码操作系统,专为嵌入式无线传感网络设计)自带的一个仿真工具,可以支持大规模的网络仿真.由于TOSSIM运行和传感器硬件相同的代码,所以仿真编译器能直接从TinyOS应用的组件表编译仿真程序.7.2.1WFCC和PCCP的对比实验为了研究算法WFCC的性能,我们和目前最好的基于速率控制的拥塞控制协议PCCP[1]进行基于TOSSIM平台的模拟对比实验.下面我们简要介绍PCCP的核心思想.PCCP的拥塞度量和本文一样,为d(i)=t-(i)每收到Np(=50,实验中)个数据包进行一次更新,s(h+1)是每发送完一个数据包更新一次.节点it-(i)触发拥塞控制的条件是:(1)收到数据包数目为O(i)·Np,其中O(i)为节点子孙节点总数;(2)收到父亲节点发来的包含拥塞信息的数据包.在条件(1)下,节点更新拥塞度量为dnew(i)并把更新前的拥塞度量保存为dold(i).若dnew(i)dold(i),则节点i通过广播包含拥塞信息的数据包的方法将其孩子节点j的发送速率更新为r(j)更新为r(j)孩子节点发送速率限制为r(j)在条件(2)下,节点收到父亲的广播包,进行条件(1)中的相应发送速率和采样速率的更新.在下面的实验中,我们采用的路由拓扑如图4所示,其中w3=w5=w18=2,wi=1(1i21,i≠3,5,18).我们进行4组比较实验,实验参数如表1和表2所示,其中表1中4个参数两算法都有,表2中4个参数中Np为算法PCCP中参数,T,Factor1和Factor2为算法WFCC中参数.WFCC(r0=0.25pkts/s)1.50.970.10.1PCCP(r0=0.25pkts/s)1.50.970.10.1WFCC(r0=0.30pkts/s)1.80.970.10.1PCCP(r0=0.30pkts/s)1.80.970.10.1WFCC(r0=0.35pkts/s)2.00.960.10.1PCCP(r0=0.35pkts/s)2.00.960.10.1WFCC(r0=0.40pkts/s)2.30.960.10.1PCCP(r0=0.45pkts/s)2.30.960.10.1WFCC(r0=0.25pkts/s)200/0.91.1PCCP(r0=0.25pkts/s)/50//WFCC(r0=0.30pkts/s)200/0.91.1PCCP(r0=0.30pkts/s)/50//WFCC(r0=0.35pkts/s)200/0.91.1PCCP(r0=0.35pkts/s)/50//WFCC(r0=0.40pkts/s)200/0.91.1PCCP(r0=0.45pkts/s)/50//实验中我们主要考察2个性能指标:sink节点的吞吐量;加权公平性.在后面的对比实验中将比较这2个性能指标.sink节点的吞吐量是指sink节点单位时间内接收来自所有节点的数据包总数.加权公平性用式(9)中的fM来表示.fM=fmax=1时,加权公平性最好;fM=fmin=1/N时,加权公平性最差.图5给出了在初始基准速率r0=0.25(pkts/s)条件下,本文算法WFCC与算法PCCP的吞吐量和加权公平性随实验时间变化的对比情况.其中节点i的初始采样速率和发送速率分别为r0·wi=0.25wi(pkts/s)和r0·swi=0.25swi(pkts/s).WFCC和PCCP均有的参数加性增因子AddFactor和乘性减因子MulFactor分别设为1.5(pkts/s)和0.97.其余参数设置如表1和表2所示.数据为每隔50s统计得到.从图5(a)中可以看到:(1)随着时间的增加,WFCC的吞吐量基本维持在4.35到4.5(pkts/s),变化不是很大.体现了WFCC在吞吐量上的保障;(2)在与PCCP的吞吐量的对比中,可以看到随着时间的增加,PCCP吞吐量逐渐在下降.这是由于PCCP中子节点得知父节点拥塞度增大时,进行了限速措施.从而子节点流出速率减少,逐渐拥塞,进一步影响其子节点的采样速率和发送速率,故如此逐层限速,最后使得整个网络吞吐量逐渐下降.从图5(b)中可以看到:(1)WFCC的加权公平性基本维持在0.96以上,与我们的理论分析相符;(2)而PCCP的加权公平性由第2个50s时的0.966逐渐下降至第10个50s时的0.836.这是由Page12于WFCC在计算得到流入总速率后严格按权值大小比例将此速率分配给自身和孩子节点;而PCCP没有保障流入速率的公平分配.图5初始条件r(i)图6~图8分别给出了在初始基准速率r0=0.30(pkts/s)、0.35(pkts/s)和0.40(pkts/s)条件下,本文算法WFCC与算法PCCP的吞吐量和加权公平性随实验时间变化的对比情况.其中对比实验参数设置如表1和表2所示,实验时间均为500s.从3个图的图(a)可以看到WFCC的吞吐量变化比较慢且平稳,且高于PCCP的吞吐量;而PCCP的吞吐量变化则比较快,随着时间增加逐渐下降,这是由于PCCP的限速所致.从3个图的图(b)可以看到WFCC的加权公平性基本维持在0.95以上,验证了我们的理论分析;而PCCP的加权公平性仅在前100s内维持在0.9以上,之后随时间增加逐渐减少,最低时其值小于0.8.7.2.2WFCC的参数变化对性能的影响为了进一步检验算法WFCC的性能,我们研究了两个重要参数周期T和初始基准速率r0对算法WFCC性能的影响.具体方法是:在其中一个参数值固定另一个参数值变化的条件下,研究WFCC吞吐量和加权公平性的变化情况.图9给出了在周期T=200s,WFCC的吞吐量和加权公平性随初始基准速率r0变化的情况.其中实验时间为500s.从图9(a)可以看出吞吐量随着初始基准速率增加逐渐增大,且吞吐量与初始速率比图6初始条件r(i)图7初始条件r(i)例接近正比关系;从图9(b)可以看出加权公平性基本维持在0.95以上,符合我们的理论分析.因此在周期T固定,初始基准速率r0变化条件下,WFCC的各方面性能表现良好.图10给出了在初始基准速率r0=0.4pkts/s,WFCC的吞吐量和加权公平性随周期T变化的情Page13图8初始条件r(i)况.其中实验时间为500s.从图10(a)可以看出吞吐量随周期增大逐渐增加,其原因在于短周期的频繁调速降低了部分节点的采样速率和发送速率;从图10(b)可以看出加权公平性随周期增加逐渐增大,且维持在0.95左右.因此在进行参数设置时,周期T不宜太小且不宜太大,一般设置在200s比较合适.8结论本文针对无线传感器网络的拥塞问题提出了一个ε近似和加权公平性保证的拥塞控制算法,其由两个子算法组成:算法GPCA和算法WFCC.GPCA采取贪心分段常值ε近似的策略,使得一个连续的子序列仅需要一个常值来近似且保证其与真实值的误差不大于ε,这样不仅减少传感器网络的数据传输量,而且保证数据的精确度.最后,我们在理论上证明了这种常值近似的最优性.WFCC以进入节点的平均数据包速率除以流出节点的平均数据包速率作为拥塞度量,将流入的数据包速率公平地分配给孩子节点和自身节点分别作为其在下一个周期的发送速率和采样速率来实现加权公平性.最后,我们从理论上证明了通过这种局部的公平速率分配策略可以达到很好的全局公平性且得到了一个理论上的下界.实验结果表明,GPCA具有良好的压缩性能;WFCC不仅达到了较高的吞吐量,且其加权公平性基本维持在0.95以上,验证了我们的理论分析.
