Page1一种基于数据驱动的CPS建模方法研究杨帆刘彦李仁发段梦琴谢国琪黄晶(湖南大学嵌入式与网络计算省重点实验室长沙410082)摘要信息-物理融合系统(CPS)由物理事件与计算系统两大部分组成,前者专注于处理连续的物理过程,与时间的流逝存在密切联系;后者则只能处理基于0-1机制的离散问题,两者存在本质上的差别.传统的建模方法一般需事先估计系统将要经历的状态及每一个状态转换所需的时间,这在复杂的CPS(Cyber-PhysicalSystem)环境中难以预测,也没有真正意义上实现计算系统与物理事件之间的交互.因此,我们提出一种新的建模方法DCDM:面向CPS的真实环境经传感器、网络等测试得出一些原始的离散数据,通过一定的数学方法(GMDH)从数据出发建立系统的连续模型,为了缩小离散数据与连续模型之间的误差,采用反馈控制的方式不断调整两者之间的差距,直至其减小到一定的范围之内.DCDM从根本上改变了传统的建模方式,提出了一种从离散数据出发建立系统模型的思想,通过反馈控制实现物理事件与计算系统之间的深度融合.DCDM具有以下4种优势:(1)建模对象容易获得且更加客观,能真实反映系统本身;(2)通过数学方法直接实现参数的筛选,去除冗余属性,减小弱影响因子对系统模型的影响;(3)相较于其他数据拟合的方法,DCDM具有更加简单的复杂度,能节约大量的计算时间;(4)在离散数据与连续模型之间的误差方面,相较于其他的算法有着明显的改进.实验结果表明,在真实数据集中,DCDM的执行速度快于当前最新的数据建模方法,且数据集越大优势越明显.关键词信息-物理融合系统;GMDH;连续系统;离散系统;反馈控制;物联网1引言信息-物理融合系统(CPS)自2006年提出以来,国内外众多专家学者进行了深入的研究,使其成为当今计算机前沿交叉学科的重点研究内容,具有广泛的应用前景[1].CPS主要包含信息系统与物理系统两个方面,前者涉及计算系统与网络部分,专注于处理离散的计算过程、网络通信及反馈控制,最终目的都是将问题转换为计算机可以处理的问题,其核心思想是离散的;后者则主要描述真实的物理世界,包括高山流水、天气、阳光、化学反应、机械运动、环境变化等等,面向对象是整个真实的物理环境,其核心思想是连续的[2].对于如何设计实时、可靠的CPS系统,解决信息与物理之间存在的矛盾就成了专家学者共同面临的难题[3].模型驱动开发架构(ModelDrivenArchitecture,MDA)能够在早期阶段对系统进行分析与验证,有助于保证系统的质量属性,并有效控制开发时间与成本[4].但随着CPS研究的深入,一些在通用计算机领域很少受到关注的系统建模问题逐渐凸显出来.在CPS中,离散的计算过程与连续的物理过程并存于系统之中,难以用单一模型刻画两者之间的融合特征,且CPS系统具有明显的时空性和动态非确定性,现有的建模语义都难以适应[5],发展新的建模语言及方式是推动CPS发展的重要途径.图1简单描述了基于MDA的开发流程.金字塔的最底层主要包括CPS的处理对象:人体、计算机、网络、物理世界等等,MDA开发流程的第1步是将这些关联对象分类,从复杂的环境中加以抽象,并提取相关的特征向量;第2步建立相应的模型,鉴于CPS所涉及的面向对象,其模型一般包括连续模型与离散模型两大类,一般情况下使用状态机、PETRI网、AADL等建模语言描述信息部分,而采用微积分方程的方式来描述物理事件.在此之后运用一定的建模理论如离散模型中插入连续变量,连续模型分解为多个离散状态,发展新的建模语言一体化描述离散连续系统等方式将模型统一起来.最后也就是金字塔的顶层,在统一模型的基础上设计实现整个系统,并提前对系统进行分析验证,包括可靠性验证、实时性分析、安全分析等等,以避免给系统带来重复设计与操作[6].从设计流程可以看出基于MDA的开发方法其关键问题在于采用何种建模方式来建立系统模型.目前,从信息的角度与物理的角度考虑建模的思维方式是完全不一样的[7].众所周知,信息科学处理的是离散问题,最本质的特征是将一系列的问题抽象成0/1模式,在此基础上再运用计算机的离散运算加以处理,信息系统建模语言发展迅速,时间自动机、PETRI网、AADL、UML等无一例外都高度依赖于计算机科学的发展[8].另一方面,物理事件是连续的,它们是不断变化的,其建模方式一般是建立关于时间的微积分方程,从立方程解方程的过程中寻找规律及相关属性.总之,CPS是一个混合系统,既包含离散的计算过程,也需要处理连续变化的物理事件,因此发展一种新的CPS建模方法解决当前离散与连续建模之间的问题,统一CPS的建模方式是一件非常有意义的研究工作.Page3图1基于MDA的CPS设计流程2我们的主要工作当前解决CPS的建模问题主要为发展新的模型理论及在现有建模语言基础上扩展相关属性两种方式.对于前者,由于现有的计算机都采用冯诺依曼体系架构,几乎所有的编程语言都缺乏对于时间及并发行为的表示,如我们坚持采用这一发展模式,势必打破现有的计算机体系架构,由此而带来的问题是非常多的;对于后者,众多的研究学者主要关注与已有建模语言的结合,在PETRI网、自动机、Ptolemy等建模语言中添加相关因子,这一实现方式并没有从根本上解决离散-连续问题,且扩展之后并没有一个统一的标准.本文我们提出将CPS的建模问题转化为离散-连续问题,建立模型之前,我们并不需要了解CPS系统所面临的环境如何复杂,也不需要分析系统即将经历的状态,这些在现有建模语言中是必须且分析过程冗繁而又复杂的.从系统所经历的真实物理环境出发,测试获得系统属性的真实数据及相关限制,这样既能真实反映系统的运行状况又较容易获得,在此基础上建立系统连续模型从而作进一步的分析处理.我们的方法解决了常规的CPS建模中离散连续系统分开处理的方式,提出了一种新的建模分析方法,为相关的研究人员提供一种新的思路:(1)离散-连续-离散建模方法.将其应用到CPS的建模问题中能解决离散连续系统分开处理之后合成的问题,且问题的本质最后又回到离散系统,这方便我们应用计算机科学的相关知识加以分析处理.(2)客观式建模.对于CPS系统,我们不需分析系统将要经历的状态也不知系统所处的物理环境,却通过真实的数据更加准确地反映系统本身.该建模方法完全根据真实的数据建模,客观真实地反映系统本身.(3)反馈控制.为了减少离散系统与连续系统之间的误差,我们实现了它们之间的反馈控制.通过传感器等工具获得真实的测试数据,从数据出发建立系统连续模型,以连续模型为基准调整离散数据,然后重新建立系统的连续模型,通过多次反馈控制及相互限制,在一定范围内控制离散连续模型之间的误差.在复杂的CPS环境中,相对于准确估计系统将要经历的状态,通过工具获得大量的真实数据是简单易行的,而且提出的方法通过两模型之间的反馈控制不断缩小误差,使得建立的模型更加精确.Page43相关研究随着CPS对工业进步及社会发展重要性影响的日益增强,2007年,美国总统科学技术顾问委员会将CPS列为国家战略发展的顶级研究领域.在此之后,欧洲各发达国家也陆续将大量人力物力投入到CPS的研究中来.解决CPS的关键问题在于如何建立准确的模型,在此之前已有大量的研究工作存在(见总结性文献[9-10]),PETRI网、UML、时间自动机、AADL等建模语言发展迅速也大量应用到CPS的研究分析中.文献[11]在面向对象PETRI网的基础上提出了针对CPS建模的专有模型,扩展描述了传感器节点模型、执行器模型及控制器模型,该模型缩小了系统的状态空间,但与面向对象的编程语言一样并没有从本质上解决时间所带来的影响.文献[12]在随机PETRI网的基础上提出了一种概率模型用来描述CPS系统中存在的恶意节点,并对CPS中的攻击入侵行为做检测分析,利用响应系统(IDRS)来实时回应运行时的恶意事件,该模型主要侧重验证系统的可靠性,对CPS其他性能的分析需进一步的扩展研究.文献[13]在UML、MDA及面向目标设计语言的基础上提出了一种CPS模型用来检测石油的分布情况,该方法提高了石油控制应用的开发效率,更好地保证了发生石油泄漏时的应用控制.这一模型定义复杂,在CPS服务模型中需包含资源模型的类型及定义、资源利用、资源约束、资源到服务的映射等等,并集成资源模型,所有这些在模型的建立过程中显得复杂而又难以实现.文献[14]在文献[13]的基础上解决了对资源形式化表达的相关问题,描述了一个上下文相关的以资源为中心的CPS模型.除了以上对现有模型语言的进一步研究,一些新的建模语言也得到了广泛应用.文献[15]提出一种扩展的AADL语言用来描述CPS系统(CPSADL),该语言将带有上下文环境组件及控制组件的物理实体添加到物理事件的描述及交互过程中,所有的物理组件都包含连续的端口,在PDA(Push-DownAutomata)的基础上对设计模型的实时性进行验证.文献[16]在此基础上对CPS模型的流延迟特性作进一步的分析,并将其转换为PDA来评估模拟其延迟特性.这一模型的提出实现了对物理事件的分析验证,但缺少连续系统与信息系统之间的真正交互.混合系统理论[17-18]作为CPS的根本依据,在CPS的建模过程中也发挥了重要作用.文献[19]改变了传统的混合系统中无限的时间范围内都做离线模型检测的做法,定期对混合系统模型做在线模型检测,每一个时间段,都会在一个固定的周期范围内对混合系统模型进行检查.这一方法虽将模型检测从离线提到在线范围内,但由于设定的是周期检查,并没有真正意义上的实现系统检测的实时性.另外文献[20]使用混合自动机的形式化理论描述分析CPS的设计模式以保证系统在有通信故障的情况下的安全性.文献[21]在混合系统理论的基础上设计和实现了一个称为HybridSim的集成建模及仿真工具链,用来对CPS进行建模及分析.以上提出的所有CPS建模方法,在建立模型之前,研究人员都需掌握其运行环境及所经状态.另外有一些方法则从不同的角度出发,文献[22-23]使用经验数据用来对CPS通信过程中的主要属性(自相似、非平稳性)进行描述,从CPS所具有的这些复杂特性出发,提出了一种与分形几何相似的统计物理启发式模型,根据系统特征从数据中找出普遍规律并建立模型.CPS这一根据数据建模的方式,不失为一个好的研究方向.4一种面向CPS的建模机制建模问题成了CPS发展的瓶颈所在[24-27].但不容忽视的是,随着CPS复杂度的增加,面临的环境日益复杂,CPS系统将要经历的状态、系统将在何时完成、会给外部环境带来或受其怎样的影响,所有这些都是难以预测的.不可否认的是,传统的建模方法在建立系统模型之前需取得一些先验知识[18,28-29],例如,加速度等于物体各个方向所受力的矢量和除以物体的质量,而速度则是加速度的积分:加速度:速度:t>0,x(t)=X(0)+在获得速度之前,需事先计算物体所受各个方向的力的矢量和犉(t),所受正方向的力犉+(t)包括顺风力、机械动力、推力等等,而负方向的力犉-(t)则包括路面阻力、摩擦力、其他与物体前进方向相反的力等等,另外计算速度也需计算物体的初始加速Page5度及质量的大小,所有这些在复杂的物理环境中都难以获得.描述系统的状态也是如此,很难限定系统何时开始何时结束,甚至都难以保证系统在这种模式下能准确的执行.我们提出的方法与之前的建模方法不同,不需预计系统将要经历的状态而从一系列测试获得的离散数据出发建立系统的连续模型,以汽车信息-物理融合系统(ACPS)为例,图2给出了建模方法的总体流程:首先,汽车在行驶过程中,通过外部设备如传感器、网络等测量获得大量的离散数据,这些数据看起来是杂乱无章且没有规律的;在特征提取这一环节通过大量的经验分析及数学方图2CPS中一种新的建模机制5建模方法及其改进5.1离散-连续建模方法从离散数据出发建立系统连续模型有很多方法可以选择,其中数据处理的分组方法(GMDH)能快速建立系统模型,具有自组织和全局选优等特性,非常适合非线性数据的拟合[30-31].在测量获得大量非线性的离散数据之后,将分析对象作为因变量,其他因子作为自变量,GMDH主要分3步来建立系统连续模型:(1)回归计算一个离散数据构成的矩阵(CPS系统测试数据)如表1所示.y1y2y3…ynt…yn法,去掉大部分的冗余数据,并提取出一些有用的能反映系统属性本质特征的数据;接着,从留下的有用的离散数据出发根据一定的数学方法(方法将在接下来的章节详细介绍)建立系统的连续模型;最后将连续模型与离散模型类比,反过来调节控制离散数据,若它们之间存在较大误差,则修改影响因子较大的离散数据后重新建立系统连续模型,直到两者之间的误差小于一定的阈值.对于非功能性属性的验证,也可以从获得的离散数据出发并通过反馈控制加以实现,本方法主要讨论CPS的建模问题,集中于处理离散-连续-离散模型.设y为因变量(分析属性(a)),x为自变量(影响因子(b)),该矩阵共包含m个自变量及n个数据点,且将其分为训练样本(A)和测试样本(B)两个部分,其中训练样本包含nt个数据集.对每一对xi和xj作如下多项式回归处理:y=A+Bxi+Cxj+Dx2多项式回归处理之后,可以得到k=m(m-1)/2个更高阶的回归多项式,设:z=a0+b0xi+c0xj+d0x2那么(b)部分在数据拟合后形成一个新的矩阵(表2).z1z11(x11,x12)z12(x11,x13)…z21(x21,x22)z22(x21,x23)…znt,1(xnt,1,xnt,2)znt,2(xnt,1,xnt,3)…znt,k(xnt,(m-1),xnt,m)(2)替代计算将x用z来替换使用测试样本(B)中的因变量y计算如下均方Page6根值(RMS),将rj作为迭代结束的阈值.rj=从数据集(表1)可以看出测试样本(B)为下标nt+1到n的n-nt-1条数据,在计算得出均方根值rj之后,选定一个经验值L,删除满足条件rjL对应的列,假设有k列满足,将这k列数据标记为Zk,将剩下的k列数据替代数据集中(b)部分,得到如下新的矩阵(表3),且满足k<m:(3)检验计算在第2步中取最小的rj值,将其标记为Rmin,使用z替换x之后,重复第1步和第2步直至下次产生的Rmin值大于本次Rmin,得到多项式如下:y1=a+∑y2=a+∑yn=a+∑为了得到最终的线性回归方程,在计算过程中需保存每一次迭代的回归系数.随着数据结构的发展,树结构成了较好的选择(图3):假设在计算过程中,保存的系数树结构为图4所示.那么线性回归方程表示为y=1+u1+2u2+2u2其中回归计算是从一个N阶矩阵中两两配对构建新的自变量,易知其时间复杂度为O(N2).替代计算针对测试样本计算各个因变量的均方根值,其自变量的个数为C2N),假设L为总的迭代次数,Fj(j=1,2,…,L)为C2每一次迭代所得的最优矩阵,易知其最大迭代次数不会超过N,即LN,检验计算的时间复杂度为O(N×m×C2综上所述,从离散数据出发,通过GMDH非线性拟合方法建立了CPS系统的连续模型,但离散数据与连续模型之间不可能完全的一致,它们之间势必存在一定的误差,这就需对上述拟合方式提出改进,以实现模型的准确性.5.2建模方法的优化模型优化通过离散数据与连续模型之间的反馈控制来实现,缩小两者之间的误差,使得所建立的模型更加精确.为了真正意义上减少离散系统与连续系统中存在的误差,模型优化从GMDH算法本身出发:第1次执行GMDH时,选定分析对象y作为因变量,其他属性作为自变量并建立关于y的多项式方程,在众多的自变量中存在一些对y值影响较大的因子.以汽车CPS系统中自适应巡航控制系统(ACC)为例,当分析汽车速度受其他属性影响之时(以速度作为因变量),加速度、气缸数、马力等因子比生产年限、品牌等属性更能影响当前汽车的速度.我们称这些对因变量影响较大的属性为强因子.第1次执行GMDH建立连续模型后,在众多的强因子中选择一个作为因变量,而之前的分析对象则作为自变量(例如:加速度为y,速度为x1),再次建立系统的连续模型,将旧因变量的值(速度)代入新的多项式方程,计算新因变量值(加速度)与原始值对比并加以修改.重复上述操作,并选定新的强因子作为因变量,继续对比修改,直到所建立的连续模型与初始的测量数据之间的误差小于一定的阈值,模型优化算法流程如图5所示.假设计算所得新因变量的值(速度)为yc,离散Page7数据中存在的因变量(速度)初始值为yo,yc、yo为m维空间中的两点,判断其相似性最直接的方式是计算其欧式距离:槡d=(yo1-yc1)2+(yo2-yc2)2+…+(yon-ycn)迭代终止条件为yo与yc之间的欧式距离小于一定的阈值TS,该阈值的设定既可以根据经验值判断,也可以为了达到某一属性或要求而设定.由于欧氏距离的计算与数据集的选择有关,在实验过程中我们可根据运行时间及参数的变化而选择一定的经验值.图6给出了离散-连续-离散建模方法及优化过程(DCDM),它通过不断的反馈控制使得模型更加精确.随着CPS复杂度的增加,分析物理环境及所处状态是非常复杂的,从数据出发建立系统模型是一个新的研究方向,特别在大数据时代环境背景下,通过数据分析系统的相关属性也变得越来越重要.上述建模方法不需主观判断系统如何运行,也不需估计预测其状态导向,而是实事求是的从数据出表4实验数据集特征数据集特征多因素分析该数据集包含3种类型的实体:(1)在各种特征条件下汽车的自动规约值;(2)指定的风险等级;(3)与其他汽车相比其归一化的损耗值.其中第2个数据用来反应汽车的安全性能.在开始测试各数据之前会根据汽车价格为每一种类型初始化分配一个安全等级,如果该汽车测试得出其安全性能降低symboling-3,-2,-1,0,1,2,3from65to256Curb-weightFrom1488to4066Peak-rpmFrom4150to6600表5实验数据集的属性①From2.54to3.94From2.07to4.17发,客观式建模并实现了离散与连续的深度融合.6案例分析:方法的应用我们提出的建模方法适用于处理大量的数据信息,实验选择一个包含26个属性因子的汽车实测数据集,它由加州大学欧文分校(UCI)在实际运行环境下测得,表4给出了数据集的一些相关属性.属性数量16(升高),则相应的增大(减小)其对应的风险等级,+3表示汽车的安全性能最低,-3则表示其安全系数最高.第3个实体则对应汽车每一年的平均损耗,这个值是根据汽车的不同类型(旅行/商务/私家车)做了归一化处理后的数据,表5给出了相关的属性信息.①lengthstrokepriceFrom5118to45400①http://archive.ics.uci.edu/ml/datasets/Automobile,2003Page8实际上,原始数据集包含26个属性.但我们认为其中的10条对需要分析的对象(安全系数)影响因素较低可以忽略不计,因此被直接删除.在实验过程中,选取风险等级作为因变量,其他15个属性作为自变量构建系统的连续模型.在第5节建模方法中提到了经验值L,如果L值设置过大,最终的模型中将包含较多的自变量,随着L的减小,最终模型中自变量的个数将减少,必须根据需求来设置正确的L值.为了不使问题变得复杂难以分析,算法规定在每一次迭代过程中L值的设定都使得模型不超过4对变量.图7给出了算法在每一次迭代过程中选择两对变量的4次迭代结果,其中u表示第2层迭代的参数.从图7可以看出第1次迭代后算法仅包含两对变量,所以接下来的一层只需用u1、u2两个参数来分别表示第1对和第2对.以图7第1层图7两对参数的4次迭代结果为了篇幅上的方便,图8仅给出3对参数时出现的两次迭代结果,其计算连续模型的方式与两对参数时类似.由于第1层包含了3对参数:x1和x2,x13和x2,x14和x2,因此第2层也需C2u1、u2、u3来表示该层.由于首次迭代时,算法选择了相同的变量,如图8中的x1和x2,x13和x2与图7中的选择相同,故第一次迭代的系数结果相同,其起始误差也与图7的相同,但是随着迭代的深入,通过反馈控制修改参数,属性的系数及产生的误差将变得迭代作为例子,其连续模型可以表示为y=-0.08176+0.86285u1+0.40608u2+其中u1=58.029-0.01918x1-1.0302x2+0.00043x2u2=83.647-1.274x2-0.90374x13+0.00592x2算术表达式中,y代表汽车电子的“风险等级”,x1、x2、x3分别表示其“归一化损耗”、“轮距”、“车速”,算法在下一次的迭代过程中选择将当前分析因子影响较大的变量作为因变量,注意到x2在多项式回归方程中出现的次数比x1、x3要多,那么轮距将作为下次迭代需调整的变量继续其反馈控制.差距很大.图9描述了每一次迭代过程中选择不同数量的参数对数对反馈控制带来的影响.由于迭代开始时每一次都是从未修改的原始数据出发,其初始误差是一致的.随着选择变量对数的增加,其误差减少速度越明显,这是由于选择更多的变量而更容易分散每一个变量所造成的影响,通过修改强因子的值而更能减少连续模型与离散数据之间的误差.另外从图也可以看出,前面几次迭代时,误差的缩小速度更Page9快,这是由于前几次迭代所选择的参数往往是更强的影响因子,而后面选择的修改参数对原始分析属性的影响越来越弱的缘故.注意到有时也存在特殊情况:后一次的迭代使得误差减少的速度快于前一图83对参数的两次迭代结果在相同的硬件环境下,运行我们的DCDM算法与几种经典的从离散到连续的建模算法[33]时间比较如表6所示.其中a,b,c,d代表采集的数据集个数分别为189,125,95,63.从表6可以看出当数据集较大时SPD与DCDM算法优势明显,其运行时间差不多只有CAS和SP算法的1/10,数据集越大CASSPSPDDCDM次,这是由于在一次迭代过程中,多项式可能包含多个参数,当两个参数出现次数相同而无法决定哪一个作为下一次迭代的修改参数时,算法采用的是一种随机选取机制,这就可能造成以上影响.优势越明显.随着数据集的减少,SP算法逐渐与后两种算法运行时间接近.从总体上来说,我们的DCDM算法运行时间优于以上3种算法,且数据集越大优势越明显.图10总结对比了不同算法误差值与迭代次数的关系.其中CAS算法起始误差值较大,随着迭代次数的增加误差呈现减小的趋势.DCDM算法起始误差值较SPD大,这是因为我们的算法在第一次迭代时未调整相应的参数造成的,随着迭代次数的增加,DCDM误差值下降明显且呈现较以上两种算法更优的误差值.Page107总结为了研究CPS的建模问题,许多研究学者将其工作集中于系统的状态转变及分析.然而,在真实的物理环境中,系统的状态都是难以捕获且实时追踪的.因此,我们提出了一种新的建模机制,在这种机制下,不需估计系统的运行环境及所处状态,只需通过传感器捕获CPS系统的实时数据,从这一系列所获得的离散数据出发建立系统的连续模型.为了深度融合信息与物理系统,算法同时提出了一种反馈机制,实现离散数据与连续系统之间的相互控制.实验表明,我们的算法缩小了两者之间的误差,并建立了相关模型.另外,离散-连续-离散的建模机制使得物理事件的处理最终回归到计算科学可以处理的离散数据上来,实现了两者之间的深度融合.致谢本文在湖南大学完成,感谢湖南大学嵌入式与网络计算省重点实验室,向本文的审稿专家致以深深的谢意!
