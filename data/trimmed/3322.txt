Page1基于投递概率预测的DTN高效路由彭敏洪佩琳薛开平卢汉成(中国科学技术大学电子工程与信息科学系合肥230027)摘要在延迟容忍网络中,基于配额的多拷贝路由通过对消息拷贝数量的限制来控制开销,如何在控制开销的前提下尽可能提高消息投递成功率是其需要解决的关键问题.文中首先分析了提高消息投递成功率的配额分配策略,然后据此提出一种基于投递概率预测的配额路由算法.该路由算法根据节点的本地信息预测到其它节点的投递概率,在复制消息时,根据节点间投递概率的差别分配拷贝配额.仿真结果表明,该算法能较为明显地提高投递成功率并减小延时.关键词延迟容忍网络;路由;投递概率;本地信息;拷贝配额1引言是一种具有长延时和链路频繁中断等特性的新型网络体系结构.在DTN中,网络分割的出现导致端到端路径不一定存在,因此先寻路后转发的传统路由方式不再适用.为了应对网络分割状态,DTN采用延迟容忍网络(DelayTolerantNetwork,DTN)Page2先存储后转发的路由方式,使消息可以逐跳向目的节点转发[1-2].按照是否对消息进行复制,可以把现有DTN路由算法分为两类:单拷贝路由和多拷贝路由.在单拷贝路由中,节点将消息发送给所遇到的节点后不再保存该消息的备份,因此网络中只存在消息的一份拷贝[3].由于网络分割现象频繁出现,只保持消息的一份拷贝容易导致投递失败.为了提高投递成功率,可以在节点向其它节点发送消息后并不删除所缓存的数据,而是继续将该消息复制给后续遇到的节点,此时网络中会存在同一消息的多份拷贝,这种路由方式就是多拷贝路由[4-5].根据消息的拷贝数量是否受限,多拷贝路由又可分为两类:基于泛洪的多拷贝路由和基于配额的多拷贝路由.Epidemic[5]是一种典型的基于泛洪的多拷贝路由算法.在Epidemic中,节点将自身所拥有的消息复制给所遇到的所有节点,通过泛洪来提高投递成功率,其代价是会过多地消耗节点的存储空间和通信带宽.为了减小泛洪开销,MaxProp[6]和ProPHET[7]采用基于概率的消息复制方式.相比于Epidemic,MaxProp和ProPHET能明显减小网络开销,但随着网络中节点数量的增加,消息的复制次数也会增加,使得开销迅速上升并导致网络性能明显下降[8].为了更有效地控制开销,SprayandWait[9]算法采用配额的方式对消息的拷贝数量进行控制.该算法将消息转发分为喷射(Spray)和等待(Wait)两个阶段:在喷射阶段,源节点将消息传输给L个与之相遇的节点;在等待阶段,收到消息的节点等待与目的节点相遇并将消息传输给目的节点.这样,网络中最多只能存在L份相同的消息.在基于配额的多拷贝路由中,消息的拷贝数量L不会随着网络中节点数量的增加而增大,因此其可扩展性更好,可以更为有效地控制开销.基于配额的路由方式是基于泛洪的多拷贝路由和单拷贝路由的折衷,它在控制开销的同时会使投递成功率有所下降,因此,怎样尽可能提高其投递成功率是一个备受关注的问题.在基于配额的多拷贝路由中,配额的分配策略是影响投递成功率的关键.本文分析了限定拷贝数量时使投递成功率最高的配额分配策略,由于这种配额分配策略复杂度很高,并且在DTN中难以实现,因此,本文随后提出了一种基于投递概率预测的高效路由(DeliveryProbabilityPredictionbasedEfficientRouting,DPER)算法.该路由算法根据节点的本地信息预测本节点到其它节点的投递概率,然后根据各节点到目的节点的投递概率分配消息的拷贝配额.由于考虑了不同节点间投递概率的差别,DPER可以在分配拷贝配额时充分利用节点的运动规律,从而明显提高投递成功率,同时,由于预测投递概率时考虑了时间因素,因此这种投递策略也会使延时明显减小;另一方面,由于投递概率预测的复杂度不高,并且仍然严格限制了拷贝配额,因此DPER的额外开销并不大.2基于投递概率预测的高效路由2.1拷贝配额分配策略分析在基于配额的多拷贝路由中,消息投递成功率取决于拷贝数量的阈值和拷贝配额的分配策略.Spyropoulos对拷贝数量L进行了分析并提出了两种配额分配方案:源端喷射(sourcespray)方案和二分喷射(binaryspray)方案[9].在源端喷射方案中,源节点每遇到一个节点,都将消息发送一份给对方,并将本节点中该消息的拷贝配额减1,因此,L份拷贝被发送给最先遇到的L个节点;在二分喷射方案中,节点遇到其它节点后,将消息复制给对方并将拷贝配额的一半分给对方,直到拷贝配额减小到1.多拷贝路由对消息进行复制是为了使消息能从多条路径同时传递,从而提高投递成功率.因此,在分配拷贝配额时,到目的节点的投递概率高的节点应该获得较大的拷贝配额.然而,SprayandWait的两种拷贝配额分配方案都没有考虑不同节点间投递概率的差别.EBR[8]对此作了改进,在分配拷贝配额时考虑节点的活跃程度,即活跃的节点(与其它节点相遇概率较大的节点)将获得较大的配额值.由于活跃的节点更有机会遇到其它节点,因此赋予活跃节点较大的拷贝配额有利于消息投递.然而,节点的活跃程度并不能完全反映节点到目的节点的投递概率,所做的决策可能并不合理.如图1所示,节点2在节点1与节点7之间运动,运动周期为5s;节点3、4在节点1、5、6之间运动,运动周期为4s;节点7与节点8处于稳定连接状态.假设节点1需要向节点8发送消息,网络中最多允许出现同一消息的2份拷贝(L=2),如果仅考虑节点的活跃程度,由于节点3、4遇到其它节点的概率比节点2更大,节点1的两份拷贝会分别发送给节点3和节点4.实际上,由于节点2可以通过节点7Page3将消息投递给节点8,为了提高投递成功率,节点1需要将一份拷贝预留给节点2.(1)获得最高投递成功率的配额分配策略假设网络中共有N个节点,消息拷贝配额的阈值为L(即网络中最多允许存在L份相同的消息),若当前节点n(1nN)需要向节点j发送消息(1jN,j≠N),应该采用怎样的策略才能使投递成功率最高?在DTN中,节点间的链路频繁中断,因此节点的邻居频繁更换.为了描述方便,本文把节点n的邻居节点集定义为其中,pc(n,i)为节点n与节点i(1iN)在给定时间单元内的相遇概率.若节点i(i∈T)到目的节点j共有Y条路径(不经过节点n),其投递成功率用pd(i,j)y(1yY)表示.如果不对消息拷贝数量进行限制,并且不考虑节点的缓存空间和节点间的通信带宽,则沿每条路径都发送一份拷贝(泛洪)能获得最高投递成功率:pd(n,j)max=1-∏i∈T在限制拷贝数量为L的情况下,为了使投递成功率最高,应该将这L份拷贝沿L条投递成功率最大的路径转发.因此,首先需要获取节点的相遇概率,并据此求出L条投递成功率最大的路径,然后根据这L条路径的分布情况确定消息拷贝配额的分配策略.配额分配的原则为:若L条投递成功率最大的路径中有m条的第一跳是节点i,则节点n在复制消息给节点i时需要分配的拷贝配额为m.在限定拷贝数量的情况下,上述方法能使投递成功率最大化,但它在DTN中并不适用:一方面,在DTN中,当前节点仅能获取本节点与其它节点的相遇概率,而获取网络中其它节点间的相遇概率开销很大;另一方面,在获取了节点间的相遇概率后,通过全局相遇概率求解L条投递成功率最大的路径是一个K最短路问题,K最短路问题过高的复杂度[10]使其不适用于DTN.(2)基于投递概率预测的配额分配策略通过与邻居节点的交互,节点n所能获得的信息为:节点n与邻居节点i的相遇概率pc(n,i)、任意邻居节点i到目的节点j的总投递成功率pd(i,j),其中pd(i,j)是由节点i逐步得到的.在仅获取邻居节点信息的前提下,如何在较低的复杂度下做出合理的转发决策呢?如果把节点i到节点j的所有可能路径(不经过节点n)看作一条虚拟的链路,则这一链路的投递成功率pd,i,n-(j)可以通过pd(i,j)、pc(n,i)等信息得到.于是,整个网络可以简化为一个只有两跳的网络,简化的网络中只有源节点n、目的节点j以及节点n的邻居节点集T,如图2所示.在这样一个只有两跳的虚拟网络中,如果T有m个元素,则从源节点到目的节点一共有m条可能的路径,只需按照这m条路径的投递成功率的比值分配拷贝配额即可.经过节点i投递到目的节点j的投递成功率为pc(n,i)pd,i,n-(j),因此该消息从节点n复制到节点i的拷贝配额为其中,Ln为当前节点n中该消息的拷贝配额,F={f}为转发节点集,表示该消息已转发给节点f.由于pc(n,i)可以由节点n与节点i的历史相遇信息得到,pd,i,n-(j)可以由节点i获得并在节点n与节点i相遇时交互,因此,这种基于投递概率预测的配额分配方式的实现难度不大.pc(n,i)和pd,i,n-(j)是由节点的历史相遇信息得到的,随着时间的推移,相遇概率和投递概率可以得到逐步更新,从而使得拷贝配额能够按照当前的节点运动规律进行分配.2.2DPER算法根据2.1节的分析,本文提出一种基于投递概率预测的高效路由(DeliveryProbabilityPredictionbasedEfficientRouting,DPER)算法,在仅能获取本节点和邻居节点信息的情况下,根据节点间投递概率的差别分配消息拷贝配额.Page4由式(3)可知,拷贝配额分配依赖于本节点与邻居节点的相遇概率和邻居节点能投递到目的节点的概率.为了得到相遇概率和投递概率信息,DPER需要节点维护3个矩阵(或向量):相遇记录犆犚、转移投递概率犜犇犘和总投递概率犇犘.相遇记录犆犚是一个N×K的矩阵,记录了本节点在最近K个时间单元内与其它节点的相遇信息.若本节点n在第k(1kK)个时间单元内与节点i(1iN)相遇,则相遇记录矩阵的对应元素cn(i,k)=1,否则cn(i,k)=0.获得犆犚矩阵后,可以得到节点n与其它节点的相遇概率.节点n在时间单元内与节点i的相遇概率pc(n,i)定义为犆犚记录的是最近K个时间单元的相遇信息,它需要在每个时间单元进行一次更新.在犆犚矩阵更新后,相遇概率也应该及时更新.转移投递概率犜犇犘是一个N×N的矩阵,其元素pt,n(i,j)表示本节点n经过节点i能投递到目的节点j的概率,其中,pt,n(j,j)=pc(n,j)、pt,n(n,j)=0.总投递概率犇犘是一个具有N个元素的向量,其元素pd,n(j)表示本节点n到目的节点j的总投递概率.显然,节点n到节点j的总投递概率可以直接由转移投递概率得到而节点n经过节点i投递到节点j的转移投递概率为其中,pc(n,j)为节点n与节点i的相遇概率,pd,i,n-(j)表示节点i到节点j的投递概率(不经过节点n).节点i到节点j的消息投递有两种可能的选择:经节点n转发和不经过节点n转发.因此,pd,i(j)=1-(1-pt,i(n,j))(1-pd,i,n-(j)),于是,pd,i,n-(j)可由节点i到节点j的总投递概率pd,i(j)与转移投递概率pt,i(n,j))得到pd,i,n-(j)=1-1-pd,i(j)在节点n与节点i相遇时,可以根据式(6)和(7)更新节点n经过节点i到任意节点j(1jN)的转移投递概率pt,n(i,j).在式(3)中,pc(n,i)pd,i,n-(j)表示节点n经过节点i投递到目的节点j的投递成功率,实际上这就是转移投递概率,因此,得到转移投递概率后,便可利用节点间投递概率的差别分配拷贝配额.当节点n向节点i复制消息时,分配给节点i的拷贝配额为节点n的DPER算法如图3所示,它包括两部分:投递概率预测和拷贝配额分配.1.ifcurrenttime%timeunit=0then2.update犆犚3.updatepc(n,i)as(4)foreachnodei4.endif5.ifnodencontactnodeithen6.updatept,n(i,j)andpd,n(j)as(5)and(6)foreachj7.forAllmessageMinlocalbuffer8.F←M’sForwardList9.ifMisnotinnodei’sbufferandiFthen10.j←M’sdestination11.Ln←M’snumberofreplicas12.calculateLias(8)13.ifLi>0then14.sendLireplicasofMtonodei15.addnodeitoFandupdateLn16.endif17.endif18.endfor19.endif在投递概率预测方面,主要需要解决相遇概率、转移投递概率和总投递概率的更新问题.在当前时间(currenttime)为时间单元(timeunit)的整数倍时,执行相遇记录的更新,并按照式(4)更新节点n与其它所有节点的相遇概率;当节点n与节点i相遇时,需要按照(5)和(6)更新转移投递概率犜犇犘和总投递概率犇犘.得到投递概率的预测值之后,便可以按照给定的配额分配策略进行消息投递.对于需要从节点n复制给节点i的消息M,首先应该获取消息的目的节点j和拷贝配额Ln,然后根据节点n所保存的转移投递概率和消息M的转发节点集F,利用式(8)计算分配给节点i的配额Li,最后,将节点i加入消息M的转发节点集F并更新节点n处消息M的配额Ln.3性能评估本文采用ONE仿真平台[11]评估DPER和现有Page5典型路由算法.仿真在赫尔辛基城市地图(ONE仿真平台默认地图)上进行,仿真区域范围为5000m×4000m.网络中的节点共有3类:第1类节点以0.5~1.5m/s的速度在整个仿真区域中随机游走,用于模拟行人;第2、3类节点的运动速度分别为2.7~13.9m/s和7~10m/s,它们只能在城市道路上运动,用于模拟普通汽车和公交车,不同的是后者的运动路线固定.在城市地图中存在4个热点地区,节点运动到4个热点地区的概率分别为0.3、0.1、0.1和0.1.在默认情况下,网络中共有120个节点,其中,第3类节点占10%,其它两类节点各占45%,数据产生速率为每个节点每分钟产生一条消息,消息拷贝数量阈值L=10(根据文献[8-9]选取).网络中的每个节点都以同样的概率发送消息,消息大小为10KB.节点能缓存并转发消息,每个节点的缓存空间都为2MB.节点的通信范围为50m,数据传输速率为20Kbps.DPER算法中与投递概率预测相关的其它参数为:时间单元为200s、相遇记录矩阵中记录最近20个时间单元内的信息(K=20).为了全面验证DPER算法的性能,本文使用3个性能评价指标:投递成功率、平均延时和投递效率.投递成功率为最终投递成功的消息比例;平均延时是指从消息产生到最终投递到目的节点所需时间的平均值;投递效率则定义为投递成功的消息数量与消息转发的总次数的比值.投递效率的倒数的物理意义为:完成一条消息的投递平均需要进行多少次消息转发.因此,投递效率越高则表示完成投递所需的数据开销越小.为了衡量SprayandWait、EBR和DPER在不同场景下的性能,本文分别改变节点数量、数据产生速率和固定节点所占比例进行仿真.不同节点数量对网络性能的影响如图4所示.随着节点数量的增加,节点间的相遇概率会逐渐增大,由于数据传输机会更多,消息的投递成功率会有所提高,同时,消息的投递延时会减小;然而,节点数量的增加会增加网络中的总数据量,导致节点缓存空间和通信带宽更为紧缺,由于缓存空间的限制,使得延时大的包被丢弃,因此,随着节点数量的进一步增大,投递成功率反而有所下降,但由于丢弃的是延时较大的消息,平均延时不会上升,只是减小的幅度变小.投递效率为投递成功的消息数量与消息转发次数的比值,随着节点数量的增加,相遇概率的增大会使消息转发总次数和投递成功的消息数量都明显增加,但由于消息转发总次数的增长速率更大,投递效率显示出逐渐下降的趋势.由图4可以看出,相比于SprayandWait和EBR,DPER能获得更高的投递成功率和更小的延时,但投递效率不如SprayandWait.首先看投递成功率,在SprayandWait路由算法中,源节点直接将消息发送给最先与之相遇的L个节点,这种方式没有考虑节点的运动规律,完全依赖于这L个节点能与目的节点相遇,其投递成功率相对较低;EBR算法考虑了节点的运动特性,在分配拷贝配额时,活跃的节点能获得更高的拷贝配额,从概率上说,活跃的节点更可能将消息转发出去,因此,其投递成功率相比于SprayandWait有较大的提升;DPER在分配拷贝配额时,主要考虑节点能将消息投递到目的节点的概率,更有机会将消息投递到目的节点的节点将获得更高的拷贝配额,与仅考虑节点活跃程度相比,这种配额分配方式能更好地利用节点的运动规律,因此,DPER能获得更高的投递成功率.在延时方面,消息投递延时由发送延时、传输延时和等待延时三大部分构成,其中,等待延时又分为节点运动延时和排队延时.由于DTN中节点分布Page6较为稀疏,节点运动延时很大,在缓存空间较小的情况下,比发送延时、传输延时和排队延时要大得多,因此,消息投递延时主要取决于消息传输前的节点运动延时.SprayandWait中消息的投递完全依赖于最先与源节点相遇的L个节点能与目的节点通信,节点运动延时取决于这L个节点与目的节点相遇所需的时间,在这种情况下,消息投递延时会比较大.在EBR中,活跃的节点能获得更高的拷贝配额,但节点的活跃程度与节点运动延时并没有必然联系,从整体上说,EBR的延时性能与SprayandWait相差不大.根据配额分配式(8),DPER中消息的投递与转移投递概率相关,而转移投递概率是由相遇概率得到的,由式(4)可知,相遇概率取决于本节点在时间单元内与其它节点的相遇记录,因此消息的投递策略实际上已经考虑了节点运动延时的因素———在选择投递路径时,DPER选择节点运动延时较小的路径的可能性较大.也就是说,DPER能获得更小的节点运动延时,因此,与SprayandWait和EBR相比,DPER可以较为明显地减小延时.在投递效率方面,从图4中可以看出,在节点数量过多或过少时,DPER的投递效率不如SprayandWait.在SprayandWait中,源节点将消息发送给L个节点后,这些节点只有在与目的节点相遇后才传输消息,因此,无论是否投递成功,最多只能传输L+1次;而DPER和EBR只对复制次数做了限制,配额减小到1之后仍然可以传输,传输的次数可能会比SprayandWait多一些,因此投递效率可能反而不如SprayandWait.数据产生速率对网络性能的影响如图5所示,其中,数据产生速率用平均每个节点每分钟产生多少条消息来表示.数据产生速率的上升会使网络中的总数据量上升,由于节点的缓存空间有限,总数据量的增加必然会导致节点缓存空间更容易溢出,因此投递成功率明显下降.在数据产生速率上升后,虽然丢包变得更为严重,但由于节点缓存优先抛弃延时更长的消息,保留下的消息都是相对延时较小的,因此延时反而有所减小.随着数据产生速率的增大,消息转发的总次数和成功投递的消息数量都有所增加,投递效率的变化将取决于两者的增长速度.由于缓存中丢弃的消息增加,网络中消息转发的总次数增长速度并不是特别快,当消息转发总次数比成功投递的消息数量增长速度更慢时,投递效率会呈现上升趋势.由于DPER会根据节点在时间单元内投递到目的节点的概率来分配拷贝配额,因此无论在何种数据产生速率下,DPER在投递成功率和平均延时方面都要优于其它两种路由协议;而在投递效率方面,由于传输的次数比SprayandWait更多,DPER可能会比SprayandWait更差,在数据产生速率较大的情况下,这一现象尤为突出.可以认为DPER是以牺牲一定的投递效率为代价换取投递成功率和延时性能的提升,另外,DPER对投递概率的预测会带来一定的计算开销,虽然开销并不是很大,但这也是DPER能获得较好性能的重要原因.固定路线节点的比例对网络性能的影响如图6所示.无论在哪种路由算法中,消息投递都依赖于节点间的相遇机会,固定节点比例的增加会在一定程度上提高投递成功率,但由于节点的缓存有限,投递成功率、延时和投递效率方面的性能提升幅度不会很大.在实际网络中,节点运动的规律性是普遍存在的,包括热点地区、相对固定的运行轨迹、群组运动等,因此,DPER和EBR这类利用节点运动规律性的路由协议比随机转发的方式具有一定的优势.在限定拷贝配额的基础上,DPER通过对投递Page7图6固定线路节点所占比例对网络性能的影响概率的预测,为投递概率更高的节点分配更大的拷贝配额,这样能够充分利用节点的运动规律,从而选择在当前已知条件下的合理决策.这种决策既包括对消息投递成功率的考虑,也会影响到投递延时,因此,对于不同的节点数量、数据产生速率和固定路线节点比例,相对于没有考虑运动特性的SprayandWait和仅考虑节点活跃程度的EBR来说,DPER都可以较为明显地提高投递成功率和减小延时.由于DPER的决策依赖于节点间的投递概率预测,可能该决策的路径不止两跳,因此完成投递所需的转发次数可能会增加,使得投递效率在部分情况下不如SprayandWait.虽然开销在部分情况下有所上升,但由于能较为明显地提高投递成功率和减小平均延时,因此,用少量可接受的开销换取投递成功率和延时性能的提升是值得的.4总结在DTN中,基于配额的路由方式能较好地控制网络开销,其关键问题在于在限制拷贝数量的前提下怎样尽可能提高投递成功率.本文分析了限定拷贝数量时的配额分配策略,并据此提出一种基于投递概率预测的高效DTN路由(DPER)算法.DPER可以在当前已知条件下根据本节点和邻居节点到目的节点的投递概率选择合适的拷贝配额,因此可以较好地利用不同节点间投递概率的差别.仿真结果表明,DPER能在增加少量开销的情况下较为明显地提高投递成功率和减小延时.
