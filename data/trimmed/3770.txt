Page1基于G/G/1-FCFS、M/G/1-PS和M/G/排队网络的Web服务组合性能分析汪浩黄明和龙浩(江西师范大学软件学院南昌330022)摘要影响Web服务组合性能的因素分为“内因”和“外因”,内因具体表现为:BPEL流程的结构、BPEL流程中变量取值的概率分布;外因具体表现为:Web服务器的软硬件处理能力、Web服务器的负载(包括“正对其进行性能分析的Web服务组合”对Web服务器形成的负载和“其它Web服务组合”对Web服务器形成的负载)以及Web服务器的调度策略.目前广泛采用的广义Petri网、排队Petri网、Markov过程和随机进程代数等模型不能同时综合建模上述各种“内因”和“外因”对Web服务组合性能的影响,导致不能全面分析Web服务组合在互联网环境下的性能.文中建立了一组把影响Web服务组合性能的各种“内因”和“外因”映射到具有G/G/1-FCFS、M/G/1-PS和M/G/排队节点类型的排队网络的映射规则,给出了一组建立在排队网络基础上的Web服务组合性能分析指标体系及其计算公式,并以这些性能分析指标体系为基础,分析了Web服务组合的性能及其变化规律,以便在Web服务组合部署前,分析预测Web服务组合在互联网环境下的性能.关键词面向服务计算;BPEL;Web服务组合;排队网络;性能分析1引言面向服务的计算[1]是互联网分布式异构环境下实现跨组织应用集成的重要技术,它以具有松散耦合和可重用等特性的Web服务为构造单元,通过Web服务组合技术,实现数据、资源和系统的集成.BPEL(BusinessProcessExecutionLanguage)是OASIS(AdvancingOpenStandardsfortheInformationSociety)制定的用于Web服务组合的语言.性能是Web服务组合取得成功,赢得用户的关键.度量Web服务组合性能的指标有“响应时间、吞吐率和利用率”等.由于Web服务组合逻辑的复杂性、互联网的动态开放性和Web服务器负载的不可预测性,使得Web服务组合性能分析成为具有挑战性的研究.影响Web服务组合性能的因素分为“内因”和“外因”,其中“Web服务组合逻辑的复杂性”是内因;“互联网的动态开放性、服务器负载的不可预测性”是外因.内因具体表现为:BPEL流程的结构、BPEL流程中变量取值的概率分布;外因具体表现为:Web服务器的软硬件处理能力、Web服务器的负载以及Web服务器调度策略.目前广泛采用广义Petri网[2-10]、排队Petri网[11]、Markov过程[9-10,12]和随机进程代数[13]为Web服务组合建立性能分析模型,但这些模型不能同时建模上述各种“内因”和“外因”对Web服务组合性能的影响,从而不能反映Web服务组合在互联网环境下的实际性能.广义Petri网、Markov过程和随机进程代数不能建模互联网环境下Web服务调用请求需要在Web服务器端排队等待运行的现象.利用广义随机Petri网、Markov过程和随机进程代数分析Web服务组合的性能时,都隐含着如下假定:在Web服务组合的运行过程中,一旦需要调用某个Web服务,该Web服务“立即”就能在Web服务器端运行.由于“互联网的动态开放性和Web服务器负载的不可预测性”,该假设是不成立的.当通过互联网HTTP协议调用某个Web服务时,至少存在如下排队过程[14]:TCP协议的侦听(TCPListen)排队、HTTP协议的侦听(HTTPListen)排队、HTTP协议的线程排队以及等待CPU时间片的排队.广义随机Petri网、Markov过程和随机进程代数不能建模这类“排队”等待现象.广义Petri网、排队Petri网、Markov过程和随机进程代数孤立地分析正在建模的Web服务组合的性能,没有考虑其它Web服务组合对正在建模的Web服务组合性能的“干扰”.由于互联网的动态开放性,提供Web服务的Web服务器会被许多不同的Web服务组合“调用”其Web服务.对正在进行性能分析的Web服务组合而言,这些来自其它Web服务组合的对该Web服务的调用,是来自外界的“负载”;这些无法提前预知的随机“负载”会对正在进行性能分析的Web服务组合的性能产生重要影响.基于广义Petri网、排队Petri网、Markov过程和随机进程代数的性能分析模型不能建模这些来自外界的“负载”,导致不能建模Web服务组合性能受Web服务器负载动态变化的影响.本文创新点:把影响Web服务组合性能的各种“内因”和“外因”映射到排队网络,建立了Web服务组合性能在排队网络中的“性能映像”,该性能映像综合地建模了各种“内因”和“外因”对Web服务组合性能的影响,反映了Web服务组合在互联网环境下的实际性能.并获得了如下结果:(1)建立了一组把影响Web服务组合性能的“内因”,即BPEL基本动作和结构动作〈invoke〉、〈sequence〉、〈if〉、〈while〉、〈repeatUntil〉、〈forEach〉、〈flow〉映射为排队网络的映射规则.(2)建立了把影响Web服务组合性能的“外因”映射为排队网络的映射规则.(3)给出了一组建立在排队网络基础上的Web服务组合性能分析指标体系及其计算公式.(4)以上述Web服务组合性能分析指标体系为基础,分析了Web服务组合的性能及其变化规律.2相关研究分析计算机系统性能有“测量”和“建模”两种方法.测量是分析Web服务组合性能的方法之一,需要有实际系统或原型系统的支持.Web服务信任中心WSTC(TheWebServiceTrustCenter)是一个开发及评价SOA和Web服务测量工具和技术的机构,其成员发表了一系列文章讨论Web服务组合的测量问题[14-18].他们通过在提供Web服务的服务器端和执行Web服务组合的客户端安装测量模块,利用统计手段获取Web服务组合的平均响应时间、每个Web服务的平均调用次数、每个Web服务的利用率等性能指标;同时提出了根据〈invoke〉、〈receive〉、〈sequence〉、〈if〉、〈while〉、〈pick〉、〈flow〉等BPEL动作,递归统计Web服务组合性能指标的方法.分析Web服务组合性能的一类重要方法是利Page3用具有时间约束的Petri网[19](如随机Petri网、广义随机Petri网等).采用这些工具分析Web服务组合性能要依次做两件事:一是把BPEL动作如〈invoke〉、〈sequence〉、〈if〉、〈while〉/〈repeatUntil〉/〈forEach〉、〈flow〉等映射到随机Petri网或广义随机Petri网;二是用Petri网仿真工具,如CPN[20],分析Web服务组合的平均响应时间[2-10].分析Web服务组合的性能的另一类重要方法是利用连续时间Markov链(CTMC).文献[12]通过将具有并行结构的Web服务组合映射为连续时间Markov链(CTMC),并在CTMC中增加引起Web服务提供者失效的迁移率(transitionrate),给出了Web服务组合响应时间、可靠性的计算公式,并分析了Web服务组合的性能和性能瓶颈.文献[13]在现有进程代数的基础上,提出了一种代价概率进程代数PPPA,给出了基于PPPA统一建模和分析Web服务组合功能和QoS的方法,建模和分析了Web服务组合的功能、可靠性、性能和代价.所有基于进程代数的Web服务组合性能建模工具,如PEPA、TIPP、EMPA、IMC以及PPPA等,无一例外地采用了连续时间Markov链来分析评价Web服务组合的性能.随机Petri网、广义随机Petri网、Markov过程和概率进程代数建模了“内因”对Web服务组合性能的影响,建模了“外因”中“Web服务器的软硬件处理能力”对Web服务组合性能的影响,但无法很好地建模“外因”中其它因素对Web服务组合性能的影响.文献[11]利用排队Petri网QPN[21],按Web服务组合的两种执行方式(集中执行和分散执行),建立了性能分析模型,给出了队列库所(queueingplace)的排队模型,变迁(transition)的触发模式;最后利用排队Petri网模拟工具QPME[22]分析了Web服务组合的平均响应时间、吞吐率等性能指标.尽管QPN能建模Web服务调用请求在Web服务器端排队等待的现象,但该排队仅仅是由“正在对其进行性能分析的Web服务组合”形成的“Web服务调用请求”排队.QPN不能方便地建模来自“其它Web服务组合”的“Web服务调用请求”在Web服务器端形成的排队等待现象,即不能建模来自外界的负载,导致QPN不能很好地建模由于互联网的开放性和动态性产生的Web服务器负载的不可预测性.目前用QPN建模Web服务组合性能的文献还很少.文献[23]通过用模糊数表示Petri网变迁的触发率(firingrates),用模糊微分方程表示变迁,定义了模糊Petri网FPN(FuzzyPetriNet).通过将Web服务组合映射为FPN,建立了一组刻画Web服务组合性能的模糊微分方程,避免了传统Petri网状态爆炸的问题,获得了Web服务组合的响应时间、吞吐率、资源利用率、最大负载等性能指标.但“模糊”与“随机”是不同的数学概念和方法,并不等价.由于互联网的开放性、动态性以及Web服务分布式异构等特性,利用“随机”数学方法和手段应该能更好地刻画Web服务组合的实际性能.排队论(也称为随机服务系统)是对计算机系统进行定量分析,特别是进行性能分析的优秀工具.目前排队系统主要用于建模单个Web服务器的性能,用于建模Web服务组合性能的文献不多.例如,为了提供QoS保证以满足客户的SLA(ServiceLevelAgreement)需求,文献[24]利用M/M/1排队系统为提供Web服务的服务器建立了响应时间模型,给出了响应时间的概率分布及其均值.3排队网络简述[25]排队网络是由一些排队节点构成的网络,每个排队节点是一个服务站(servicecenter).本文采用开乘积排队网络(openproductformqueueingnet-works)和开非乘积排队网络(opennon-productformqueueingnetworks)分析Web服务组合的性能.开排队网络是指顾客既可以从排队网络外部进入到排队网络,在排队网络中服务完毕后,又可以离开排队网络的排队网络.具有M/G/1-PS和M/G/类型排队节点的排队网络称为乘积排队网络;具有M/G/1-FCFS类型排队节点的排队网络称为非乘积排队网络.假设排队网络由N个(N为大于等于1的整数)排队节点组成,排队节点用整数i,j(1i,jN)表示,并用整数0表示排队网络外部.进入排队网络中的顾客有R(R为大于等于1的整数)种类型,顾客的类型用整数r,s(1r,sR)表示.排队节点间由带权的有向边相连,排队节点i和j之间的权值记为pir,jr(称之为路由概率routingprobability),表示类型为r的顾客在排队节点i服务完毕后进入排队节点j继续服务的概率,且∑Npir,jr=1,且用p0r,jr表示类型为r的顾客从排队j=0网络外部到达排队节点j的概率,pir,0r表示类型为r的顾客在排队节点i服务完毕后离开排队网络的Page4概率.本文约定:(1)排队网络中有R种(R=2)类型的顾客,顾客在排队节点间路由时,不会改变类型.类型1的顾客代表“正在对其进行性能分析的Web服务组合”产生的“Web服务调用请求”,类型2的顾客代表“其它Web服务组合”产生的“Web服务调用请求”.类型1的顾客到达排队节点i,表示“正在对其进行性能分析的Web服务组合”调用Web服务WSi;类型2的顾客到达排队节点i,表示“其它Web服务组合”调用Web服务WSi,该调用会降低“正在对其进行性能分析的Web服务组合”的性能.(2)类型r的顾客从排队网络外部到达排队节点i的间隔时间服从Coxian分布、重尾分布[26]或其它的一般分布,其平均间隔时间记为1是指两个连续到达的顾客相隔的时间),均方差系数(squaredcoefficientofvariation)记为c2为类型r的顾客到达排队节点i的到达率(arrivalrate).(3)类型r的顾客在排队节点i的服务时间服从Coxian分布、重尾分布或其它的一般分布,其平均服务时间记为1类型r的顾客在排队节点i的服务率(servicerate).(4)当排队节点为M/G/1时,每个节点按服务器共享方式(processorsharing)为顾客提供服务,记为M/G/1-PS.当排队节点为G/G/1时,每个节点按先来先服务(firstcomefirstservice)方式为顾客提供服务,记为G/G/1-FCFS.(5)排队节点的类型可以是M/G/1-PS、M/G/1-FCFS或M/G/.(6)本文后序部分,将把“提供Web服务的服务器”映射成“排队节点”,顾客到达排队节点,表示调用(invoke)该Web服务器提供的Web服务.λ0,i1表示类型1的顾客从排队网络外部到达排队节点i的到达率,是“正在对其进行性能分析的Web服务组合”调用Web服务WSi的“Web服务调用请求”的到达率(即平均间隔1/λ0,i1时间调用一次Web服务WSi).本文后续部分中,图3~图13中均要求λ0,11>0且λ0,i1=0(i=2,3,…,n),表示“正在对其进行性能分析的Web服务组合”从WS1开始执行.λ0,i2表示类型2的顾客从排队网络外部到达排队节点i的到达率(即平均间隔1/λ0,i2时间调用一次Web服务WSi),是“其它Web服务组合”调用Web服务WSi的“Web服务调用请求”的到达率,可以看成是“其它Web服务组合”对“正在对其进行性能分析的Web服务组合”的“干扰”负载的到达率.pi1,j1是类型1的顾客在排队节点i服务完毕后,进入排队节点j服务的概率,可以看成是“正在对其进行性能分析的Web服务组合”调用完Web服务WSi后,继续调用Web服务WSj的概率.pi1,01是类型1的顾客在排队节点i服务完毕后,离开排队网络的概率,可以看成是“正在对其进行性能分析的Web服务组合”调用完Web服务WSi后,不再调用其它Web服务的概率.pi2,j2是类型2的顾客在排队节点i服务完毕后,进入排队节点j服务的概率,可以看成是“其它Web服务组合”调用完Web服务WSi后,继续调用Web服务WSj的概率.pi2,02是类型2的顾客在排队节点i服务完毕后,离开排队网络的概率,可以看成是“其它Web服务组合”调用完Web服务WSi后,不再调用其它Web服务的概率.4BPEL服务组合流程映射为排队网络将BPEL服务组合流程映射为排队网络的目的是为了用排队网络获得评价Web服务组合性能的指标.这些性能指标中“响应时间”是最基本最重要的指标;因此,将BPEL业务流程映射为排队网络要符合“时间等效性原则”和“结构等效性原则”,即(1)排队网络的响应时间应反映Web服务组合的运行时间.(2)排队网络中各排队节点之间的拓扑次序要与Web服务组合的先后调用次序一致.根据这些原则,“提供Web服务的服务器”映射为一个排队节点,调用Web服务的基本动作(如〈invoke〉/〈receive〉)“映射”为“顾客”到达排队节点;与Web服务调用无关的基本动作(如〈empty〉、〈wait〉、〈assign〉、〈validate〉、〈throw〉、〈rethrow〉、〈exit〉等)不必映射;BPEL结构动作中(如〈sequence〉,〈if〉,〈while〉,〈repeateUntil〉,〈forEach〉,〈flow〉)嵌套的Web服务调用“映射”为符合BPEL结构动作语义的排队网络.表1列出了影响Web服务组合性能的各种“内因”和“外因”与排队网络各元素之间的映射关系.将影响Web服务组合性能的“内因”和“外因”映射到排队网络后,我们获得了Web服务组合的性能在排队网络中的性能映像(见图1),使得我们能通过排队网络分析Web服务组合的性能.Page5表1影响Web服务组合性能的各因素与排队网络各元素之间的映射关系提供Web服务WSi的Web服务器Web服务调用正在对其进行性能分析的Web服务组合中的“Web服务调用请求”类型1的顾客到达排队节点BPEL流程的结构BPEL流程中〈condition〉…〈/condition〉变量的概率分布Web服务器的软硬件处理能力Web服务器的负载Web服务器调度策略部分性能指标图1Web服务组合的性能在排队网络中的性能映像4.1BPEL基本动作〈invoke〉/〈receive〉映射为排队网络的规则如果BPEL基本动作〈invoke〉/〈receive〉(同步或异步)调用Web服务WS1,则该Web服务WS1映射为排队网络中的一个排队节点(见图2),用于建模提供该Web服务的服务器,且将该排队节点记为node(WS1);如果Web服务组合中存在对同一个Web服务的多次调用,这些调用要“映射”为同一个排队节点.图2〈invoke〉/〈receive〉(同步或异步)调用映射为此处我们用一个排队节点建模一台提供Web服务的服务器,一次〈invoke〉/〈receive〉同步或异步调用(简称“Web服务调用请求”)相当于“顾客”到达该排队节点,并请求提供一次服务;如果有多个“顾客”相继到达,则这些“顾客”会在排队节点等待队列“排队等待”.该映射规则显然符合“时间等效性原则”和“结构等效性原则”.4.2BPEL顺序结构动作〈sequence〉映射为排队网络的规则BPEL结构动作〈sequence〉中的Web服务调用映射为图3所示的一个线性级联排队网络.如果BPEL结构动作〈sequence〉依次(同步或异步)调用WS1,WS2,…,WSn等n个不同的Web服务,则这n个不同的Web服务调用各自映射为一个排队节点node(WSi)(i=1,2,…,n),且类型1的顾客从node(WS1)到node(WS2)的路由概率p11,21=1;类型1的顾客从node(WS2)到node(WS3)的路由概率p21,31=1;…;类型1的顾客从node(WSn-1)到node(WSn)的路由概率pn-11,n1=1.BPEL顺序结构动作〈sequence〉中的Web服务调用“映射”为一个线性级联排队网络,符合“结构等效性原则”.由于类型1的顾客要依次在每个排队节Page6点服务完毕后,才能离开排队网络,故类型1的顾客在排队网络中的响应时间等于Web服务组合的运行时间,符合“时间等效性原则”.类型2的顾客对“正在对其进行性能分析的Web服务组合”而言是一种“干扰”,可以随时离开排队系统.4.3BPEL条件结构动作〈if〉映射为排队网络的规则BPEL结构动作〈if〉/〈elseif〉/〈else〉中的Web图4〈if〉/〈elseif〉/〈else〉映射为排队网络根据〈condition〉…〈/condition〉中的布尔表达式及其中变量的概率分布,按初等概率论的方法,我们可以方便地计算“布尔表达式”为真的概率,此“概率”就是排队节点之间的路由概率.例如,如果变量$counter服从区间[0,100]的均匀分布,变量$order服从区间[100,500]的均匀分布,并且变量$counter和变量$order互联独立(不独立也能计算概率,但复杂点),则条件〈condition〉$counter&lt;42and$order&gt;300〈/condition〉为真的概率计算如下:P{$counter&lt;42and$order&gt;300}=P{$counter&lt;42}×P{$order&gt;300}100d()x×∫500=∫420BPEL结构动作〈if〉/〈elseif〉/〈else〉中的Web服务调用“映射”为一个分支排队网络,符合“结构等效性原则”.由于类型1的顾客要在排队节点node(WS1)服务完毕后,或者以概率p11,21进入排队节点node(WS2),然后离开排队网络;或者以概率p11,31进入排队节点node(WS3),然后离开排队网络;或者以概率p11,41进入排队节点node(WS4),然后离开排队网络;故类型1的顾客在排队网络中的响应时间等于Web服务组合的运行时间,符合“时间等效性原则”.类型2的顾客对“正在对其进行性能分析的Web服务组合”而言是一种“干扰”,可以服务调用“映射”为一个分支排队网络.例如,可以将BPEL动作〈if〉…〈elseif〉…〈else〉“映射”为图4所示的排队网络.其中p11,21表示〈if〉条件为真的概率,p11,31表示〈elseif〉条件为真的概率,p11,41=1-p11,21-p11,31.当〈if〉条件为真时,调用WS2;〈elseif〉条件为真时,调用WS3;否则调用WS4.随时离开排队网络.4.4BPEL循环结构动作〈while〉/〈repeatUntil〉/〈forEach〉映射为排队网络的规则BPEL结构动作〈while〉“映射”为如图5所示的排队网络.其中p11,21,p21,21表示〈while〉条件为真的概率且p11,21=p21,21;p11,31=1-p11,21和p21,31=1-p21,21表示〈while〉条件为假的概率.当〈while〉条件为假时调用WS3;当〈while〉条件为真时重复调用WS2若干次,直到条件为假时调用WS3.如果结构动作〈while〉之前和之后没有调用Web服务,则“映射”为如图6所示的排队网络,可以认为〈while〉前存在一个〈empty〉,此时排队节点node(WS1)可用具有无穷服务器的排队系统M/G/建模,其中p11,21,p21,21表示〈while〉条件为真的概率;p11,01=1-p11,21和p21,01=1-p21,21表示〈while〉条件为假的概率.BPEL结构动作〈while〉“映射”为如图5或图6所示的排队网络,由于该排队网络中的排队节点node(WS2)包含一个“循环”,符合“结构等效性原则”.以下我们以图5为例说明“映射”符合“时间等效性原则”,对图6的说明类似,故不再赘述.类型1的顾客在排队节点node(WS1)服务完毕后,或者以概率p11,31进入排队节点node(WS3),然后离开排队网络;或者以概率p11,21进入排队节点node(WS2),在排队节点node(WS2)以概率p21,21经多次“循环”后,以Page7概率p21,31进入排队节点node(WS3),然后离开排队网络;故类型1的顾客在排队网络中的响应时间等于Web服务组合的运行时间,符合“时间等效性原则”.类型2的顾客对“正在对其进行性能分析的Web服务组合”而言是一种“干扰”,可以随时离开排队网络.BPEL结构动作〈repeatUntil〉“映射”为如图7图5〈while〉映射为排队网络图6〈while〉映射为排队网络图7〈repeateUntil〉映射为排队网络图8〈repeateUntil〉映射为排队网络所示的排队网络,其中p11,21=1,p21,21表示〈repeat-eUntil〉条件为假的概率,p21,31=1-p21,21表示〈repeateUntil〉条件为真的概率.当〈repeateUntil〉条件为假时重复调用WS2若干次,直到条件为真时调用WS3.如果结构动作〈repeateUntil〉之前和之后没有调用Web服务,则“映射”为如图8所示的排队网络,其中p11,11表示〈repeateUntil〉条件为假的概率.Page8与BPEL结构动作〈while〉类似,BPEL结构动作〈repeateUntil〉“映射”为排队网络,符合“结构等效性原则”和“时间等效性原则”,故不再赘述.如果BPEL结构动作〈forEachparallel=“no”〉中依次调用WS1,…,WSn等n个不同的Web服务,则“映射”为如图9所示的具有node(WS1),…,node(WSn)等n个节点的排队网络,且p11,21=p21,31=…=pn-11,n1=1.如果Web服务WSi(i=1,…,n)的服务时间Xi的分布函数为Gi(x),〈forEach〉的循环次数为m,则Web服务WSi图9顺序〈forEach〉映射为排队网络4.5BPEL并行结构动作〈flow〉/〈forEachparallel=“yes”〉映射为排队网络的规则BPEL并行结构动作〈flow〉中的n个Web服务调用WS1,…,WSn可以映射为图10所示的Fork-Join排队网络[27].图10中Fork节点表示开始并行调用WS1,…,WSn等n个Web服务,当Web服务WSi(i=1,…,n)执行完毕后,进入队列图10〈flow〉映射为排队网络到目前为止,Fork-Join排队网络的响应时间主要借助近似手段获得[25,27].如果用随机变量Xi表示WSi的服务时间,用Gi(x)表示其分布函数,且假定X1,…,Xn相互独立;用随机变量X表示〈flow〉的经m次循环后的服务时间为mXi,其分布函数计算如下:BPEL结构动作〈forEachparallel=“no”〉依次调用WS1,…,WSn等n个不同的Web服务m次,“映射”为图9所示排队网络,符合“结构等效性原则”.排队网络的响应时间为m∑n效性原则”.节点node(Qi)等待其它Web服务执行完毕;Join节点是同步节点,当这n个Web服务执行完毕后,BPEL并行结构动作〈flow〉也执行完毕.队列节点node(Qi)用于同步各并行Web服务,每个Web服务WSi执行完毕后,要在相应的等待队列node(Qi)等待其它并行Web服务执行完成.服务时间,则X=max{X1,…,Xn},且其分布函数G(x)计算如下:G(x)=P(Xx)=P(max{X1,…,Xn}x)Page9于是,图10中的Fork-Join排队网络的响应时间可通过图11中单节点排队网络近似计算,其服务时间的分布函数为G1(x)G2(x)…Gn(x).类似地,如果〈forEach〉的循环次数为m,根据并行〈forEachparallel=“yes”…〉的语义,可以映射为图12所示的具有m个并行分支的Fork-Join排队网络.如果用随机变量Xi表示WSi的服务时间,用gi(x)表示其概率密度函数,且假定X1,…,Xn相图11用单节点排队网络近似计算〈flow〉的响应时间图12并行〈forEach〉映射为排队网络图13用单节点排队网络近似计算并行〈forEach〉的响应时间Fork-Join排队网络是专用于并行程序结构建模的排队网络[25,27],符合“结构等效性原则”;由上述排队节点服务时间分布函数的推导过程可知,图10~图13的“映射”规则符合“时间等效性原则”.互独立,则一个并行分支的执行时间为X1+…+Xn,其概率密度函数为g1(x)…gn(x),其中“”运算符表示概率密度函数的“卷积”运算.令X=X1+…+Xn,则随机变量X的分布函数G(x)为因此,图12中Fork-Join排队网络的响应时间可通过图13中单节点排队网络近似计算,其服务时间的分布函数为[G(x)]m.4.6BPEL服务组合流程映射到排队网络规则应用举例按照4.1~4.5节的映射规则,以下BPEL服务组合流程(本文后续部分称其为BP1)可以映射为Page10图14所示的排队网络.用单节点近似Fork-Join的响应时间后(参考图10和图11),可以获得图15所示的排队网络.〈process…〉…〈sequence〉〈receive…/〉〈invokename=“WS1”…/〉〈invokename=“WS2”…/〉〈if…〉〈condition〉“条件1”〈/condition〉〈invokename=“WS3”…/〉〈elseif〉〈condition〉“条件2”〈/condition〉〈invokename=“WS4”…/〉〈/elseif〉〈else〉〈invokename=“WS5”…/〉〈/else〉〈/if〉图14一个由BPEL服务组合流程映射的排队网络图15用单节点近似Fork-Join的响应时间后的排队网络图15中,p11,21=1;p21,31和p21,41分别是“条件1”和“条件2”为真的概率,且p21,51=1-p21,31-p21,41;p31,61、p41,61、p51,61和p61,61是“条件3”为真的概率,且p31,71=1-p31,61,p41,71=1-p41,61,p51,71=1-p51,61,p61,71=1-p61,61;p71,81=1,p81,91=1,p91,01=1;λ0,11是调用Web服务组合BP1的请求的到达率,且λ0,11>0;而λ0,i1=0(i=2,3,4,5,6,7,〈while〉〈condition〉“条件3”〈/condition〉〈invokename=“WS6”…/〉〈/while〉〈invokename=“WS7”…/〉〈flow〉〈invokename=“WS81”…/〉〈invokename=“WS82”…/〉〈invokename=“WS83”…/〉〈/flow〉〈forEachparallel=“no”…〉〈startCounterValue〉…〈/startCounterValue〉〈finalCounterValue〉…〈/finalCounterValue〉〈scope〉〈invokename=“WS9”…/〉〈/scope〉〈/forEach〉〈reply…/〉〈/sequence〉…〈/process〉8,9),表明Web服务组合BP1是从调用WS1开始执行.图15中,每个类型1顾客的路由概率pi1,j1,都有一个对应的类型2顾客的路由概率pi2,j2(i=1,2,3,4,5,6,7,8,9;j=1,2,3,4,5,6,7,8,9).为使图清晰起见,图14和图15中未标出pi2,j2;另外λ0,i2>0和pi2,02>0也未在图中标出.Page115影响Web服务组合性能的“外因”映射到排队网络的映射规则第4节给出了将BPEL流程中影响Web服务组合性能的“内因”(BPEL流程的结构、BPEL流程〈condition〉…〈/condition〉中变量取值的概率分布)映射为排队网络的映射规则.本节给出将影响Web服务组合性能的“外因”映射到排队网络的规则.影响Web服务组合性能的外因包括:Web服务器的软硬件处理能力、Web服务器的负载和Web服务器的调度策略.具体映射规则如下:(1)“Web服务器的软硬件处理能力”相当于处理一次“Web服务调用请求”需要花费的时间,可以映射为类型r顾客服务时间的概率分布;类型r的顾客调用Web服务WSi的平均服务时间可以映射为“排队节点i服务时间概率分布的均值1服务时间”.(2)“Web服务器的负载”相当于对Web服务器的“Web服务调用请求”.它由两部分构成:一是由“正在对其进行性能分析的Web服务组合”对Web服务WSi的“Web服务调用请求”组成,映射为类型1的顾客到达排队节点node(WSi)间隔时间的概率分布,其平均间隔时间为1为类型1的顾客到达排队节点node(WSi)的到达率;二是由“其它Web服务组合”对Web服务WSi的“Web服务调用请求”组成,映射为类型2的顾客到达排队节点node(WSi)间隔时间的概率分布,其平均间隔时间为1客到达排队节点node(WSi)的到达率.两者叠加构成“Web服务器(即排队节点node(WSi))的实际负载”.进一步,通过求解“流量方程”可以获得“Web服务器的实际负载”(见第6节).(3)“Web服务器调度策略”可映射为排队网络各排队节点的调度策略,如FCFS或PS.针对图14或图15的示例,根据上述映射规则,我们需要确定:(1)类型1和类型2顾客在各排队节点的平均服务时间1率分布.概率分布可以是指数分布,也可以是Coxian分布或重尾分布.(2)类型1的顾客到达排队节点node(WSi)的到达率λ0,i1及其概率分布.概率分布可以是指数分布,也可以是Coxian分布或重尾分布.由于Web服务组合从排队节点node(WS1)开始执行,故λ0,11>0且λ0,i1=0,i=2,3,4,5,6,7,8,9.λ0,11相当于单位时间调用Web服务组合的次数.(3)类型2的顾客到达排队节点node(WSi)的到达率λ0,i2(i=1,2,3,4,5,6,7,8,9)及其概率分布,概率分布可以是指数分布,也可以是Coxian分布或重尾分布.当λ0,i2>0时,表明对应Web服务器存在“干扰”.(4)各排队节点的调度策略,如FCFS或PS.6Web服务组合性能评价指标到目前为止,我们给出了将影响Web服务组合性能的各种“内因”和“外因”映射到排队网络的映射规则,获得了Web服务组合的性能在排队网络中的性能映像,使得我们能通过排队网络分析Web服务组合在互联网中的实际性能(参见表1).为了用排队网络分析Web服务组合在互联网中的实际性能,我们需要给出评价Web服务组合性能的指标及其计算公式.Web服务组合性能指标包括利用率、响应时间、排队节点或排队网络中的顾客(即“Web服务调用请求”)数量等.本文后续部分将用整数i表示排队节点node(WSi).用λir表示实际到达排队节点i的类型r顾客的到达率,通过求解下列线性方程组,我们可以获得[25].λir由类型r的顾客的路由概率pir,jr(i,j=1,2,…,N)构成的矩阵犘r=(pir,jr)N×N,称为类型r顾客的路由概率矩阵.在平衡状态下,λir等于类型r顾客在排队节点i的吞吐率.排队节点i的实际吞吐率λi为类型r的顾客在排队网络的吞吐率λr为类型r顾客在排队节点i的利用率ρir为排队节点i的利用率ρi为Page12排队节点i的平均服务率μi(servicerate,即平均服务时间的倒数)为利用率最大的节点称为瓶颈节点,其利用率为ρmax=maxi{ρi}.由于Web服务组合存在循环结构,故类型r顾客调用Web服务i的次数不止一次,类型r顾客调用Web服务i的平均调用次数eir(也称为排队节点i的访问率visitratio)为6.1排队节点类型为M/G/1-PS和M/G/时,排队网络的平均响应时间和平均顾客数类型r顾客在排队节点i的响应时间为[28]eirμir=1烄Rir=烅1-∑R烆注意,该响应时间考虑了类型r顾客在排队节类型r顾客在排队节点i中的平均数量(包括ρir=λrRir,当排队节点为M/G/时烄Qir=烅1-∑R烆正在被服务的顾客)为点i的访问率[28].顾客在排队网络中的响应时间(即Web服务组合的平均响应时间)为顾客在排队网络中的平均数量(即排队网络中Web服务调用请求的平均数量)为6.2排队节点类型为G/G/1-FCFS时,排队网络的平均响应时间和平均顾客数当排队节点的类型为G/G/1-FCFS时,排队网络为非乘积排队网络,需要采用开排队网络分解法计算[25]平均响应时间和平均顾客数.计算平均顾客数的算法描述如下(参见文献[25]第480-483页):1.初始化.对i,j=1,2,…,N;r=1,2,…,R,假设c2为类型r顾客到达排队节点i间隔时间概率分布的均方差系数,c2Bir为类型r顾客在排队节点i服务时间概率分布的均方差系数.且令c22.合并.对i=1,2,…,N;r=1,2,…,R,按式(12)和(13)计算,3.流出.对i=1,2,…,N,按式(14)计算,Di=-1+λi∑Rc24.分离.对i,j=1,2,…,N;r=1,2,…,R,按式(15)计算,5.重复步2~4直到c2式(16)计算类型r顾客在排队节点i的平均顾客数(包括正在被服务的顾客)和按式(17)计算类型r顾客在排队节点i的响应时间,6.最后,按式(10)和式(11)分别计算顾客在排队网络中的平均响应时间和平均数量.7Web服务组合性能分析我们在第1节曾指出:(1)广义Petri网、Markov过程和随机进程代数,不能建模互联网环境下Web服务调用请求需要在Web服务器端排队等待运行的现象.(2)广义Petri网、排队Petri网、Markov过程和随机进程代数孤立地分析正在建模的Web服务组合的性能,没有考虑其它Web服务组合对正在建模的Web服务组合性能的“干扰”.当排队网络中每个排队节点为M/G/时,由于每个排队节点有无穷多个服务器,使得每个“Web服务调用请求”能立即获得执行,从而不会发生排队等待现象;当排队网络中每个排队节点为M/G/1-PS或M/G/1-FCFS时,由于每个排队节点仅有1个服务器,使得每个“Web服务调用请求”不一定能立即获得执行,需要在等待队列排队等待.本节将以图15所示排队网络对应的Web服务组合BP1为例,通过计算排队节点分别为M/G/、Page13M/G/1-PS和M/G/1-FCFS时,Web服务组合的性能评价指标,分析存在或不存在排队等待时,Web服务组合BP1的性能.当类型2顾客的到达率λ0,i2=0(i=1,2,…,N)时,表明不存在其它Web服务组合对“正在对其进行性能分析的Web服务组合”的干扰;当存在i(i=1,2,…,N)使得λ0,i2≠0时,表明存在“其它Web服务组合”对“正在进行性能分析的Web服务组合”的干扰.本节将以图15所示排队网络对应的Web服务组合BP1为例,通过计算排队节点分别为M/G/、M/G/1-PS和M/G/1-FCFS时,Web服务组合的性能评价指标,分析存在或不存在其它Web服务组合的干扰时,Web服务组合BP1的性能.为了进行以上性能分析,根据BP1中变量的概率分布和〈condition〉…〈/condition〉中的布尔表达式,可以计算类型1顾客的路由概率,4.3小节给出了排队节点之间路由概率的计算方法.类型2顾客的路由概率刻画了“其它Web服务组合”对“正在对其进行性能分析的Web服务组合”的干扰程度.此处,我们假设类型1顾客和类型2顾客的概率路由矩阵分别为犘2=犘1=0.01.00.00.00.00.00.00.00.0烄0.00.00.30.30.40.00.00.00.00.00.00.00.00.00.70.30.00.00.00.00.00.00.00.70.30.00.00.00.00.00.00.00.70.30.00.00.00.00.00.00.00.70.30.00.00.00.00.00.00.00.00.01.00.00.00.00.00.00.00.00.00.01.00.00.00.00.00.00.00.00.00.0烆0.00.80.00.00.00.00.00.00.0烄0.00.00.20.20.40.00.00.00.00.00.00.00.00.00.70.10.00.00.00.00.00.00.00.60.20.00.00.00.00.00.00.00.60.20.00.00.00.00.00.00.00.30.50.00.00.00.00.00.00.00.00.03.00.00.00.00.00.00.00.00.00.03.00.00.00.00.00.00.00.00.00.0烆由于可以用Coxian分布近似任意一般分布,此处我们假定每个排队节点的服务时间服从Coxian分布,其平均服务时间12.0(i=1,2,…,9,r=1,2).由于对Web服务组合BP1的调用从WS1开始执行,当排队节点为M/G/和M/G/1-PS时,我们假设对Web服务组合BP1调用请求的间隔时间服从指数分布,平均间隔时间1λ0,11>0且λ0,i1=0(i=2,…,9);当排队节点为G/G/1-FCFS,我们假设对Web服务组合BP1调用请求的间隔时间服从重尾分布[26],平均间隔时间1λ0,11>0且λ0,i1=0(i=2,…,9),方差系数c20.5且c2本节将给出“当存在或不存在排队等待现象时”以及“当存在或不存在其它Web服务组合的干扰时”,Web服务组合的平均响应时间(参见式(10))以及排队网络中Web服务调用请求的平均数量(参见式(11))的变化规律.此外,本小节还分析了当BPEL流程中变量取值的概率分布发生变化时,Web服务器WS6的响应时间的变化规律(参见式(8))以及在Web服务器WS6中等待执行的“Web服务请求”的平均数量的变化规律(参见式(9)).受篇幅所限,当其它“内因”和“外因”变化时,各Web服务器(即各排队节点)响应时间的变化规律,各“Web服务调用请求”平均数量的变化规律以及瓶颈节点的分析拟另文讨论.7.1当存在或不存在排队等待时,Web服务组合的性能本小节分析当存在排队或不存在排队等待时,Web服务组合BP1的性能,为此我们假定不存在其它Web服务组合对Web服务组合BP1的干扰,即λ0,i2=0(i=1,2,…,9).当λ0,11从1变化到30时,按第6节给出的方法,我们分别计算排队网络的响应时间,即Web服务组合的平均响应时间(参见式(10))以及顾客在排队网络中的平均数量,即排队网络中Web服务调用请求的平均数量(参见式(11)).图16给出了Web服务组合BP1响应时间的变化规律,图17给出了Web服务组合BP1执行过程中,在各Web服务器中执行或排队等待的“Web服务调用请求”的平均数量的变化规律.图16中横坐标为Web服务组合调用请求的到达率,即λ0,11,其倒数1BP1的平均间隔时间;纵坐标是Web服务组合BP1执行完毕所需的平均时间,即Web服务组合BP1的平均响应时间.从图16中可知:Page14图17“Web服务调用请求”平均数量的变化规律(1)如果排队节点为M/G/,即“Web服务调用请求”能立即获得执行,从而不会发生排队等待现象时,Web服务组合的响应时间最短,即不存在排队等待时,Web服务组合的响应时间最短;随着λ0,11增加(即平均间隔时间缩短),Web服务组合的响应时间几乎不发生变化.(2)当排队节点为M/G/1-PS或G/G/1-FCFS时,由于每个排队节点仅有1个服务器,使得每个“Web服务调用请求”不一定能立即获得执行,需要在排队队列等待执行,Web服务组合的响应时间大于排队节点为M/G/时的响应时间;随着λ0,11增加(即平均间隔时间缩短),由于调用Web服务组合平均间隔时间的缩短,响应时间也逐渐增加.(3)当排队节点为G/G/1-FCFS时,Web服务组合的响应时间要大于排队节点为M/G/1-PS时的响应时间,即当Web服务组合BP1调用请求的间隔时间服从重尾分布时,Web服务组合的响应时间大于Web服务组合BP1调用请求的间隔时间服从指数分布时的响应时间.图17的横坐标与图16相同;纵坐标是Web服务组合BP1执行过程中,在各Web服务器中执行或排队等待的“Web服务调用请求”的平均数量.由于受排队论中Little公式的约束,对比图16和图17可知,“Web服务调用请求”的平均数量具有与Web服务组合“响应时间”类似的变化规律.排队节点为G/G/1-FCFS时平均数量最大,其次是排队节点为M/G/1-PS时,排队节点为M/G/时最小.当排队节点为M/G/时,由于不需要排队等待,平均数量是各Web服务器中正在执行的“Web服务调用请求”的平均数量.7.2当存在或不存在其它Web服务组合的干扰时,Web服务组合的性能本小节分析当存在或不存在其它Web服务组合的干扰时,Web服务组合BP1的性能.当不存在其它Web服务组合的干扰时,即类型2顾客的到达率λ0,i2=0;当存在其它Web服务组合的干扰时,即类型2顾客的到达率λ0,i2>0,此时我们假设λ0,i2=5(i=1,2,…,9),如果到达间隔时间服从重尾分布,则假设方差系数c2两种情况下,当λ0,11从1变化到30时,按第6节给出的方法,我们分别计算了排队网络的响应时间,即Web服务组合的平均响应时间(参见式(10))以及顾客在排队网络中的平均数量,即排队网络中Web服务调用请求的平均数量(参见式(11)).图18(其纵横坐标与图16相同)给出了当类型2顾客的到达率λ0,i2=0和λ0,i2=5,λ0,11从1变化到30,且排队节点分别为M/G/、M/G/1-PS和G/G/1-FCFS时,Web服务组合BP1响应时间的变化规律;图19(其纵横坐标与图17相同)给出了当类型2顾客的到达率λ0,i2=0和λ0,i2=5,λ0,11从1变化到30,且排队节点分别为M/G/、M/G/1-PS和G/G/1-FCFS时,各Web服务器中“Web服务调用请求”平均数量的变化规律.图18其它Web服务组合的干扰对Web服务从图18可知:(1)不论排队节点是何种类型,当λ0,i2=5时Web服务组合BP1的响应时间大于当λ0,i2=0时的响应时间.表明如果存在其它Web服务组合“调用”Web服务组合BP1中涉及的“Web服务”,Web服Page15务组合BP1的响应时间会增加.(2)当排队节点为M/G/时,由于不会发生排队等待现象,不论是否存在其它Web服务组合的干扰,随着调用Web服务组合BP1平均间隔时间的缩短(当λ0,11从1变化到30时),Web服务组合BP1的响应时间不会发生明显变化.(3)当排队节点为M/G/1-PS时,由于存在排队等待现象,当存在其它Web服务组合的干扰时,随着调用Web服务组合BP1平均间隔时间的缩短(当λ0,11从1变化到30时),Web服务组合BP1的响应时间会迅速增加.(4)当排队节点为G/G/1-FCFS时,由于调用Web服务的间隔时间服从重尾分布,当存在其它Web服务组合的干扰时,随着调用Web服务组合BP1平均间隔时间的缩短(当λ0,11从1变化到30时),与排队节点为M/G/1-PS相比,Web服务组合BP1的响应时间会更迅速地增加.(5)排队节点为G/G/1-FCFS时的响应时间大于排队节点为M/G/1-PS时的响应时间;排队节点为M/G/1-PS时的响应时间大于排队节点为M/G/时的响应时间.由于互联网环境下HTTP流量具有自相似性,且服从重尾分布[26],因此排队节点为G/G/1-FCFS时的响应时间能更好地反映Web服务组合的实际性能.由图18可知,随着调用Web服务组合流量的增加以及外部流量的干扰,Web服务组合的响应时间会迅速增加.图19是在各Web服务器中执行或排队等待的“Web服务调用请求”的平均数量.由于受排队论中Little公式的约束,对比图19和图18可知,“Web服务调用请求”的平均数量具有与Web服务组合“响应时间”类似的变化规律.7.3当“外因”不变、“内因”发生变化时,Web服务组合的性能本小节分析当BPEL流程中变量取值的概率分布发生变化时,Web服务组合BP1的性能.我们固定“外因”不变:类型1顾客的到达率(即Web服务组合的平均调用次数)λ0,11=5,λ0,i1=0,且i=2,3,4,5,6,7,8,9;类型2顾客的到达率λ0,i2=5;如果到达间隔时间服从重尾分布,则假设方差系数c22.0(i=1,2,…,9).在上述条件下,当BP1中〈while〉语句“条件3”为真的概率从0.1变化到0.9时(即调用Web服务WS6的次数增加时),按第6节给出的方法,我们分别计算了各排队节点的响应时间(参见式(8))以及各排队节点中顾客的平均数量(参见式(9)).图20给出了当〈while〉中“条件3”为真的概率从0.1变化到0.9,且排队节点分别为M/G/、M/G/1-PS和G/G/1-FCFS时,Web服务WS6响应时间的变化规律;图21给出了Web服务WS6中“Web服务调用请求”平均数量的变化规律.特别需要说明的是,除了节点WS6,随着〈while〉中“条件3”为真的概率从0.1变化到0.9,其它节点的“响应时间”和“Web服务调用请求平均数量”几乎没有变化.图21Web服务WS6调用请求平均数量的变化规律从图20和图21可知,不论排队节点是哪种类型,随着调用Web服务WS6的概率增加,其响应时间逐渐变长,在Web服务WS6中排队等待处理的“Web服务调用请求”逐渐增多,从而会对Web服务组合的性能造成影响,增加Web服务组合的响应时间.Page168结论及进一步的研究内容目前广泛采用的广义Petri网、排队Petri网、Markov过程和随机进程代数[13]不能同时建模互联网环境下各种“内因”和“外因”对Web服务组合性能的影响,从而不能刻画Web服务组合在互联网环境下的实际性能;本文通过把影响Web服务组合性能的各种“内因”和“外因”映射到排队网络,建立了Web服务组合性能在排队网络中的“性能映像”,以便建模各种“内因”和“外因”对Web服务组合性能的影响,并获得了如下结果:(1)建立了一组把影响Web服务组合性能的“内因”,即BPEL基本动作和结构动作(〈invoke〉、〈sequence〉、〈if〉、〈while〉、〈repeatUntil〉、〈forEach〉和〈flow〉)映射为排队网络的映射规则.(2)建立了把影响Web服务组合性能的“外因”映射为排队网络的映射规则.(3)给出了一组建立在排队网络基础上的Web服务组合性能分析指标体系及其计算公式.利用上述分析方法,通过对图15所对应的Web服务组合的性能分析,我们得到如下结论:(1)当“Web服务调用请求”需要排队等待时,Web服务组合的响应时间会“大于”不需要排队等待时的响应时间.(2)当存在“其它Web服务组合”的干扰时,“正在进行性能分析的Web服务组合”的响应时间要“大于”不存在“其它Web服务组合”干扰时的响应时间.(3)Web服务组合中变量取值的概率分布会影响Web服务组合的性能.受篇幅限制,我们拟另文讨论:(1)分析当各种“内因”和“外因”发生变化时,Web服务组合以及各Web服务器(即各排队节点)响应时间的变化规律,“Web服务调用请求”平均数量的变化规律;并定位Web服务组合的瓶颈节点.(2)分析当存在QoS区分服务时,Web服务组合的性能变化规律.
