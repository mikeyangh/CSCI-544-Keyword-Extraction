Page1量子计算复杂性理论综述张焕国1)毛少武1)吴万青2)吴朔媚3)刘金会1)王后珍1)贾建卫1)1)(武汉大学计算机学院空天信息安全与可信计算教育部重点实验室武汉430072)2)(河北大学计算机科学与技术学院河北保定017002)3)(石家庄学院计算机系石家庄050035)摘要量子计算复杂性理论是量子计算机科学的基础理论之一,对量子环境下的算法设计和问题求解具有指导意义.因此,该文对量子计算复杂性理论进行了综述.首先,介绍了各种量子图灵机模型及它们之间的关系.其次,量子计算复杂性是指在量子环境下对于某个问题求解的困难程度,包含问题复杂性、算法复杂性等.于是,该文介绍了量子问题复杂性、量子线路复杂性、量子算法复杂性,并且介绍了量子基本运算和Shor算法的优化实现.第三,格被看做是一种具有周期性结构的n维点空间集合.格密码有很多优势,包括具有抗量子计算的潜力,格算法具有简单易实现、高效性、可并行性特点,格密码已经被证明在最坏条件下和平均条件下具有同等的安全性.因此该文介绍了格的困难问题,以及主要的格密码方案现状.最后,对今后值得研究的一些重要问题和量子计算环境下的密码设计与分析给出了展望.关键词量子计算;量子图灵机;量子计算复杂性;量子线路;量子环境下的密码1引言目前随着量子和生物等新型信息科学的建立和发展,涌现出许多新的研究领域.量子信息科学的研究和发展催生了量子计算机、量子通信和量子密码.它们的出现为量子信息理论研究和技术发展拓宽了范围.促使了一些新的量子理论和量子算法出现.例如,Deutsch等人[1]首次给出了量子计算的模型,指出量子计算在计算方面优于电子计算.Simon[2]给出了称为Simon算法的例子.Grover[3]给出了一种标准搜索算法,复杂度是O(槡n).随后Shor[4]给出了分解大整数问题和求解离散对数问题的有效量子算法.Mosca等人[5]将Shor算法扩展到交换群,提出了隐藏子群问题(HSP).Hallgren等人[6]指出存在有效的量子算法找到非交换群的正规子群等.这些已知的量子算法大体上可以分为3类:第1类是基于量子Fourier变换的量子算法.该算法实际将求周期函数的周期问题归结为隐藏子群问题.例如,Shor的因子分解算法和离散对数算法,这两个算法是对经典算法的指数加速;第2类是量子数据库搜索算法.例如,Grover的量子搜索算法及其推广算法.该算法的计算复杂性是经典算法的开方加速,目前已经发展成为量子搜索算法体系;第3类是量子仿真算法,即量子模拟系统[7-10].这些量子算法的出现对经典公钥密码产生了严重的威胁,主要表现在:(1)Grover算法的作用相当于把密钥的长度减少一半,这对所有的密码都是一个威胁;(2)Shor算法对基于大整数分解和离散对数问题的公钥密码产生了严重的威胁,譬如RSA、ECC、ElGamal密码等.Proos和Zalka[11]指出在k量子位的量子计算机上可以容易地求解k比特的椭圆曲线离散对数问题,其中N=5k+8槡k+5logk对于整数因子分解问题,Beauregard指出在k位量子计算机上可以容易地分解k比特的整数,其中N=2k.据此分析,利用1448量子位量子计算机可以求解256位椭圆曲线离散对数问题.因此也就可破译256位椭圆曲线密码.利用2048量子位量子计算机就可以分解1024位的大合数.因此就可以破译1024位的RSA密码[12-13];(3)HSP算法的出现对基于交换群的密码产生了本质的威胁.因此,凡是可归结到AHSP上的公钥密码都不能抵抗量子计算的攻击.可见量子算法的出现为密码分析提供了新的理论和工具.除了在理论分析上取得了许多成果外,在量子计算机的物理实现上已经取得一些重要的成果.在国际上,2011年5月Nature撰文指出加拿大D-Wave公司推出世界上首台128量子位商用量子计算机D-WaveOne系统.著名军火商洛克希德马丁公司以1000万美元/台购买了D-WaveOne用于F35战机分析,新武器开发和航天航空器系统测试等.2013年初,加拿大D-Wave公司又推出512量子位的D-WaveTwo.谷歌公司以1500万美元/台购买了D-WaveTwo用于加速信息搜索的速度和人工智能.但是加拿大D-Wave公司推出的D-Wave系列量子计算机是专用型的量子计算机,不是通用型的,只能处理某些特定的问题.2001年IBM公司率先研制成功了7qbit的示例性通用量子计算机.证明了量子计算机原理的正确性和可行性.2011年9月,Nature撰文指出UCSB团队通过量子电路成功实现了冯诺依曼结构的9个量子位的量子计算机.2012年IBM在美国物理年会上公布声称找到了可以大规模提升量子计算机规模的一种关键技术.2013年美国MIT报告指出微软公司早在十年前就与加州大学圣巴巴拉分校合作开始研究量子计算机.2014年4月,科学家获得110量子位的纠缠态远高于以前的11量子位.2014年9月3日谷歌公司宣布投资50亿美元与UCSB的研究团队联合研制量子计算机.综上所述,虽然量子计算机离大规模使用还有很长的距离.但是,一旦大规模的量子计算机成为现实,现有的许多公钥密码将不再安全.量子计算时代我们使用什么密码,是摆在我国面前的一个十分紧迫的重大战略问题!这样就迫切需要研究能抵Page3御量子计算的新型密码.抗量子计算的密码主要包括以下几类[12]:(1)基于量子物理的量子密码[14-19];(2)基于生物学的DNA密码[20-22];(3)基于量子计算不擅长计算的数学问题构建的密码[23-26].量子计算复杂性理论是量子密码体制安全性的理论基础,也是构造现代量子密码体制的理论依据.它给出求解一个问题是容易还是困难的依据,并由此对问题和算法的复杂性进行分类,进而根据困难问题设计量子计算环境下的安全密码.由于量子计算机具有并行性[27],所以它在许多方面具有比电子计算机更强大的计算能力[28].这使得现在广泛应用的许多密码在量子计算环境下将不再安全[4,11,29-30].量子计算复杂性理论是量子计算机科学的基础理论之一[31],对量子环境下的算法设计和问题求解具有指导意义.因此,量子计算复杂性理论成为量子环境下密码安全的理论基础.本文对量子计算复杂性理论进行了综述.介绍了各种量子图灵机模型及它们之间的关系,并进行了量子线路模型与量子图灵机的比较.详细讨论了量子计算复杂性,包括量子算法复杂性,问题复杂性和量子线路复杂性.特别提出了一种新的量子计算数据复杂性.最后,对今后值得研究的一些重要问题和量子计算环境下的密码设计与分析给出了展望.2经典复杂性理论在介绍量子复杂性之前,先简单地回顾一下经典的复杂性.算法复杂性理论研究基于算法求解问题所要花费的资源消耗,包括时间、空间资源(比特数、带数、逻辑门数)等的消耗[32].通过考察求解某个问题的不同算法复杂程度来衡量问题的难易程度.由此将问题划分为不同的类型,并对各种算法按其有效性进行分类.在表1中总结了常见的经典复杂性问题分类.在图1中给出了部分复杂性关系的一个简图.经典复杂性分类P确定型单带图灵机在多项式时间内可判定的语言类NP某个非确定型多项式时间图灵机判定的语言类NPCNP问题子集,可以通过多项式时间算法归约到一PP多项式时间的概率图灵机以严格大于1/2的概率ZPP非确定型图灵机在平均多项式时间内接收的语言PL概率图灵机在多项式时间和对数空间以严格大于BPP多项式时间的概率图灵机以错误概率1/3接收的RP多项式时间非确定性图灵机以大于ε>0的概率接EXP存在指数时间的确定性图灵机接收的语言类NEXP存在指数时间的非确定性图灵机接收的语言类算法是指可用来求解某一问题的过程.称一个算法求解一个问题,是指该算法可应用到问题的任一例子,并保证总能找到该例子的一个解.一个算法的有效性可以用执行该算法时所需的各种计算资源的量来度量.最典型、也是最主要的资源是所需的运行时间和内存空间.在复杂性研究中,衡量一个算法的效果,最广泛采用的标准是求解问题所花费的时间,称为时间复杂性.计算复杂性常用的符号O(),o(),Ω(),ω(),Θ().利用这些记号可以将函数划分为不同的类.在复杂性理论中,对如此定义的同一类型的不同函数往往不加以区分.3量子图灵机模型量子复杂性理论考虑的是在量子计算环境下评估解决某个问题的资源消耗情况.而这些资源的评估都是基于某个模型的.这样的模型有量子图灵机模型、量子线路模型[33]、量子查询模型[34]、量子通信协议模型[35]等.本节主要介绍了量子图灵机模型.利用量子图灵机模型,可以解释量子计算机求解的问题分类.量子图灵机的讨论类似于经典的概率图灵机(PTM).因此下面我们介绍一些量子图灵机的模型及它们之间的关系.最早,Feynman[36]指出经典图灵机不能有效模拟量子力学过程,需要发展量子计算模型来模拟量子体系的演化.Deutsch[37]阐述量子图灵机概念,并提出了量子计算复杂性理论.基于此,Bernstein和Vazirani[38]在数学上首次对量子计算模型给予严格的形式化描述.量子图灵机模型(QTM).设有限状态集Q,而Page4q0,qY,qN∈Q分别是初始状态,接受状态和拒绝状态.设带中所有字符的一个有限集合Γ,它包含输入字符表子集Σ.用Σ表示Σ中的字符所组成的所有有限长字符串的集合,空白字符b∈(Γ-Σ).δ是量子状态转移函数,满足其中δ(q1,a1,a2,q2,d)是格局.QTM在状态q1读取字符a1,沿方向d,进入状态q2将读取字符a2.转移函数指定了无限维空间的格局叠加态的线性映射Mδ(时间演化算子).随后,文献[39-40]对该模型进行了微调,增加了一个静止的读写头.设量子图灵机(QTM)是一个七元组(Q,Σ,Γ,δ,q0,qY,qN).量子状态转移函数δ满足其中Σ(q2,a2,d)∈Q×Γ×{-1,0,1}δ(q1,a1,q2,a2,d)2=1,珚C应为复数集的子集,其实部与虚部是多项式时间可计算的.存在确定性多项式时间函数f(n)的算法精确计算复数α的实部和虚部,满足f(n)-α<2-n.←,→分别表示读写头移动方向.o代表读写头不移动.它的工作原理如下:设S是QTM的格局且S是有限线性组合上的满足欧几里德归一化条件的复内积空间,称S中的每个元素为M的一个叠加.量子有限状态转移函数δ诱导一个时间演化算子UM:S→S.M以格局c起始,当前状态为p,且扫描标识符σ,下一动作M将会被置为格局叠加:ψ=∑i其中每个非零的αi都与一个量子转移函数δ(q1,a1,q2,a2,d)对应,ci是向c施行转化得到的新的格局.通过线性时间演化算子UM可以将这种操作扩展到整个S空间[41].广义量子图灵机(GQTM).Ohya等人[42]在2003年提出了广义图灵机的概念,定义如下:设四元组M=(Q,Σ,H,Λδ),其中字母表Q是处理器格局,Σ是包含空字符串的字母表,H是希尔伯特空间,Λδ是量子态的转移函数.设(H)是希尔伯特空间H密度算子的集合.量子态的转移函数Λδ:(H)→(H)的工作原理如下:给定格局ρ=∑k∑kλk=1,λk0且ψk=|qk〉|Ak〉|ik〉(qk∈Q,Ak∈Σ,ik∈Z),是希尔伯特空间H的一组基.所以这个转移函数是ρ=Λδ(ρ)=∑kμk|ψk〉〈ψk|且∑μk=1,μk0.需要注意的是,如果Λδ是一个幺正算子U那么GQTMM=(Q,Σ,H,Λδ)可以规约到QTM[43].随机预言量子图灵机(ROQTM).在1996年Bennett等人[41]提出了随机预言量子图灵机.ROQTM有一个特殊的查询纸带,除了非空白的单元外纸带的所有单元都是空白.同时含有两个不同的内部状态矢量:先验查询状态qq和后验查询状态qa.无论机器何时进行查询先验状态qq都开始查询.若查询串是空的,则不操作且机器直接转到后验查询状态qa.若查询串非空,查询串可写为x‖b,其中x∈Σ,b∈Σ,‖表示串联,Σ={0,1}.这种情况下,调用谕示A(x)的结果将内部状态转到后验查询状态qa,然后查询纸带内容从|x‖b〉变化到|x‖bA(x)〉.除了查询纸带和内部控制外其他部分不发生变化.容易发现,若给定初始值b=0,即|b〉=0,则最终态为A(x).与经典的随机预言计算机一样,若给定初始b=A(x),则最终查询态为|0〉.这表明调用谕示A(x)将重置靶比特为|0〉.它的工作原理如下:当调用随机预言量子图灵机时,将酉变换U作用在查询纸带目录|z〉上记作U|z〉.U定义在可数无限维希尔伯特空间上,由二进制串|ε〉,|0〉,|1〉,|00〉,|01〉,|10〉,|11〉,|000〉,…,组成.其中|ε〉表示空串.对于谕示图灵机,一般的酉随机预言服从酉演化.随机预言将输入映射到叠加态输出,不需要保长.在U|z〉中只有有限个基向量的振幅为0.同时U2=1,调用一个随机预言的结果可以通过进一步调用相同的随机预言进行复原.另外,允许适当的干扰发生.下面举了一个例子加以说明.设图灵机的所有字符Γ={0,1,b},b是空白符号,输入字符表子集Σ={0,1}.随机预言是一个酉运算O,作用于计算机上定义为其中|x〉是指标寄存器,是模2加法,随机预言的量子比特|q〉,q∈Γ是单量子比特.当f(x)=1,则翻转;否则不变.通过制备|x〉|0〉,应用随机预言,检查随机预言量子比特是否翻转到|1〉,来判断x是否为搜索问题的一个解.我们注意到有一些量子算法是带有随机预言模型的“Oracle”,譬如Deutsch-Jozsa算法[1]、Grover搜索算法[3]、Shor算法[4]等.这个量子谕示作为一个黑盒,不考虑输入的具体细节.在讨论这些问题的计算复杂性时需要构造谕示,并估计构造谕示需要的资源.如果能构造这样谕示,称问题是可解的.另外,Page5并不是所有的量子算法都需要谕示.在文献[36,44]中Ohya等人给出了一些不需要谕示的例子.因此ROQTM被视作带有随机预言模型“Oracle”的量子图灵机.多带量子图灵机模型(MQTM).Yamakami在1999年提出了多带量子图灵机的概念[45-47],具体如下:k条带量子图灵机是一个五元组M=(Q,q0,Qr,Σ1×Σ2×…×Σk,δ),每个Σi是带有空白符号b的有限字符集,Q是包含初始状态q0和终止状态Qr={q1r,q2r,…,qkr}的内部状态有限集合,δ是从Q×Σ1×Σ2×…×Σk到CQ×Σ1×…×Σk的多值量子转移函数.令Σk=Σ1×Σ2×…×Σk.即δ:Q×Σk→CQ×Σ-k.QTM是由Z索引单元格的双向无限纸带,读写头沿着纸带向左,向右或者不移动,分别用L,R,N表示.它的模拟能力有如下的结果.在文献[45]中介绍了良构引理和完全引理作为刻画特征的依据.设M是k-带良构的QTM.如果输入x后M在时间T(x)内停机,那么存在k+2-带良构的QTMM输入(x,1T(x))在时间2T(x)+2内停机.由文献[38]中命题1说明在二次多项式时间内可以通过一个单带QTM模拟MQTM,记作QTMpMQTM.这与经典情况类似,QTM与MQTM具有多项式等价的计算能力.到此我们介绍了几种量子图灵机模型及其变形.综上所述,它们在计算能力上是有联系和区别的.具体地说,广义量子图灵机(GQTM)的计算能力涵盖了量子图灵机(QTM).量子图灵机(QTM)的计算能力涵盖了随机预言量子图灵机(ROQTM).在二次多项式时间内可以通过一个单带的QTM模拟MQTM.在图2中形象化地描述了它们之间的关系.量子图灵机类似于经典计算下的概率图灵机,但是与经典图灵机(包括概率图灵机)并不相同.一方面,量子图灵机可以看做是由量子读写头和一条无限长的带作为量子存储器组成的.“带”上的每个单元格均表示一个量子记数位,可以以“0”和“1”的叠加态形式存在,这样可以在带上同时对编码问题的许多输入进行计算,计算结果是所有输入对应结果的叠加,通过测量得到经典结果.另一方面,它们之间的区别是状态转移函数的变化[45-46].量子图灵机含有复量子状态转移函数,进行T步计算只需要精度为O(logT)位的转移幅度就足够了[45].由于量子图灵机的运算结果不再按概率叠加,而是按概率振幅叠加,量子相干性在量子图灵机中起着本质性作用.这是实现量子并行计算的关键,这个性质也是量子图灵机和概率图灵机的重要差异.Feynman[36]证明了QTM可以有效地模拟经典的可逆图灵机,这意味着量子计算至少与经典计算有相同的计算能力.Deutsch[37]将这个结果形式化.4量子计算复杂性概论一个问题的量子计算复杂性是由求解这个问题的量子算法的计算复杂性所决定.量子计算复杂性是指在量子环境下对于某个问题求解的困难程度,包含问题复杂性、算法复杂性等.由于求解一个问题的量子算法可能有多个,它们的量子计算复杂性也各不相同.因此在理论上定义一个问题的量子计算复杂性为求解该问题的最有效量子算法的计算复杂性.目前,研究的问题主要有两种:一是可行性检验问题,二是判定问题.在经典的计算复杂性理论中,人们已经证明存在多项式时间通用图灵机求解可计算问题.类似地,Bernstein和Vazirani[48]指出存在多项式时间通用量子图灵机求解可计算问题.同时,他们提出了量子计算复杂性理论.随后,许多学者提出了各种量子算法和量子复杂性证明作为量子计算复杂性的进一步解释.譬如,Simon定理说明量子计算优于经典计算,即存在具有有界错误概率的量子谕示图灵机求解问题的复杂性低于经典计算的复杂性[2].Shor算法和Gover算法分别验证了Simon定理的正确性[3-4].但是对于任意(或趋近)无穷多的输入,量子图灵机(包含任意的概率图灵机)以有界错误概率求解问题需要(亚)指数时间复杂度[3].一方面,量子图灵机的出现降低了求解问题的计算复杂性;另一方面,不是所有的问题都在BPP内.4.1量子问题复杂性分类由于量子计算机可以看做是经典计算机在量子环境下的推广.于是,问题的经典复杂性P、NP、ZPP、BPP等可类似地推广到量子计算中,即有QP、ZQP、BQP、NQP等.Page64.1.1量子模拟P类问题我们给出称之为QP问题的重要语言,具体定义如下[42]:QP={L:存在一个多项式时间QTMM使得L=LM},其中LM={x∈Σ:M接受x}.若存在多项式时间QTMM,它在编码策略e之下能够求解问题Π,则判定问题Π∈QP,即L[Π,e]∈QP.它被看作P类问题在量子环境下的模拟.另外,EQP类问题是指QTM以精确或者无错误的量子多项式时间接收的语言类,即EQPQP.相应地,它的时间复杂性EQPTime(T(n))是指由输入长度为n,运行时间为T(n)精确界定的QTM接收的语言类.ZQP类问题是指QTM以至少1/2的概率在多项式时间内接收的语言类,即ZQPQP.BQP类问题是指QTM在多项式时间内以1/3的概率接收的语言类.它的时间复杂性BQPTime(T(n))是指输入长度为n,运行时间为T(n)界定的QTM以概率2/3接收的语言类[49].它的计算能力有结果BQPPP[50].4.1.2量子模拟NP类问题NP问题在量子环境下有两种不同的模拟定义:一种类似于用NDTM定义NP问题的定义方式,即NQP是指由多项式时间的NQTM识别的语言类[51];另一种是多项式时间验证NP语言类的扩展,即QMA[52].在经典计算理论中,这两种问题类的定义方式是等价的.然而,在量子计算理论中这两个定义并不等价,文献[53]给出NQP和QMA两者满足的关系:NQP=∪δ:Z+→(0,1]QMA(1,c,0).如果存在一个多项式时间的量子验证者V,对于任意的输入x,满足(1)x∈Ayes,存在k(|x|)量子证明使得V至少以c(|x|)的概率接受x,(2)x∈Ano,对任意给定的k(|x|)量子证明,使得V至多以s(|x|)的概率接受x.问题A=(Ayes,Ano)的复杂性记作QMA(k,c,s).在Milner等人①的文章中说明了对于任意的多项式限制函数k2,任意c使得QMA(k,c,0)=QMA(1,c,0).QMA的定义如下:设问题A=(Ayes,Ano),p是一个多项式限制函数,函数a,b:N→[0,1].那么A∈QMAp(a,b)当且仅当存在一个多项式时间的线路族Q={Qn:n∈N},其中每一个Qn有n+p(n)个比特的输入和一个比特的输出,满足下面的性质:(1)完整性.对于所有的x∈Ayes,存在p(|x|)个量子比特态ρ使得Pr[Q接受(x,ρ)]a(|x|);(2)可靠性.对任意的x∈Ano和p(|x|)量子比特态ρ使得Pr[Q接受(x,ρ)]b(|x|).NQP问题定义如下:QTM识别的语言L∈NQP,当且仅当存在QTM和一个多项式函数P使得x∈LPr(M在p(|x|)步内接受x)≠0.在文献[54]中指出它的计算能力有如下的结果,NQPPPNQPNQP,NQPk=coC=P,QkC.另外在量子环境下可以模拟经典的NPC问题.在文献[54]中介绍了一个特殊的语言分类,即QAP.定义如下QAP={〈M,x,0t〉|M编码一个量子机器在t步内以非零概率接受x}.文中指出QAP难于确定准确的概率接受问题.而确定准确的概率接受问题是一个NPC问题.这说明QAP的复杂性不低于求解NPC问题的复杂性,有NPCQAP.除此之外,在文献[55]中给出了另一个量子模拟NPC问题的定义,即QMA-complete问题,简记为QMAC.在文献[56]中证明了量子环境下的团问题是QMAC问题.在文献[53]中讨论了NPC问题的另一个量子模拟NQP-complete问题.它不同于QMAC问题.像这样的完全问题还有许多其他的形式,在文献[57]中讨论了更多的完全问题的情况,譬如BQP-complete,QMA-complete,QMA(2)-complete,QSZK-complete,QIP-complete.但目前的研究不是很充分,在这里我们不做过多地叙述.4.1.3其他类问题在文献[58]中给出了NC的量子模拟QNC的定义,并指出QNC=∪kQNCk且QNCBQP.在文献[59]中介绍了AWPP和LWPP类问题.AWPP是BPP使用Gap函数代替接受概率产生的语言类.在文献[50]中给出了它们的计算能力分类,即BQPAWPPPPPSPACE,EQPLWPP.在文献[60]中证明了AWPPAPP且WPPAWPP.于是结合前面的结论有BPPBQPAWPPAPPPP.另外,在文献[61]中得到结果SPPLWPPWPP,其中WPP的介绍参见文献[62].文献[63]介绍了PostBQP类问题.PostBQP是指具有后选择能力的量子计算机在多项式时间内解决的问题,且证明了PostBQP=PP.文献[64]考虑了量子模拟NP困难问题的计算能力之间的关系,得到如下的结果BPPBQPQCMAQMAPP,其中QCMA是一类特殊的QMA(后来的文献如文献[49]把它也称作MQA).同时还得到了结果MAQCMAQMA.在文献[65]中作者研究了①MilnerK,GutoskiG,HaydenP,etal.Quantuminterac-tiveproofsandthecomplexityofentanglementdetection.Page7WAPP,APP计算能力的量子解释,给出了如下结果PostBPPFPWAPPAWPP=PostBQPaFPAPP.其他的结果参见文献.文献[66]认为到目前为止大部分的量子算法问题可以规约到量子采样.现有的许多问题,譬如离散对数问题、图表同构等都属于SZK问题.在文献[66]中指出了这些问题在量子环境下有如下结果SZKQSZK.在文献[67]中作者讨论了PQDP类问题与SZK的关系,指出SZKPDQPPSPACE,BQPPDQP.文献[68]介绍了PQP类问题.它是指存在多项式时间的量子线路族Q={Qn:n∈N},其中每一个线路Qn有n量子比特的输入和一个量子比特的输出,满足下面的性质:(1)对于所有的x∈Ayes,使得Pr[Q接受(x,ρ)]>1/2;(2)对任意的x∈Ano,使得Pr[Q接受(x,ρ)]1/2.它的计算能力有结果PQP=PP.文献[68]解释了QIP类问题.具体的定义如下,设m是多项式有界函数,a,b:N→[0,1]是多项式时间可计算函数.语言L∈QIP(a,b,m)当且仅当存在m个量子消息验证者V,满足下面性质:(1)完整性.对所有的x∈L,存在量子验证者P使得V以至少a(|x|)的概率接受x;(2)可靠性.对所有的xL,对每个量子验证者P使得V以至多b(|x|)的概率接受x.对每个有界多项式函数m,QIP(2)=QIP(m,2/3,1/3).并且定义QIP=∪mQIP(m).关于QIP类问题的计算能力有如下一些结果.文献[69]证明了QIP=PSPACE,比文献[68]中的结果QIPPSPACE更精确.在文献[70]中指出QIP(2)PSPACE.在文献[71]中证明了QIP([log,poly],a,b)=QMA,QIPlog(a,b)=BQP.于是,在图3中刻画了量子模拟的QP、NQP问题与经典复杂性之间的关系.更详细的复杂性讨论结果总结在图4中.图4文中讨论的量子与经典复杂类总结关系4.2量子线路复杂性在电子环境下,布尔电路可用于描述经典图灵机.在量子计算出现以后,Deutsch[72]首次提出量子线路模型.于是布尔电路被推广到量子计算中,量子图灵机也可以采用量子线路进行描述.随后,Yao[73]指出量子图灵机模型和量子线路模型是等价的.在某种情况下,它们多项式时间可以互相模拟,这开启了一个新的量子信息技术研究领域,量子线路复杂性理论.量子线路是将布尔线路模型中的比特和逻辑门推广到量子线路模型中.量子线路是多量子位的酉变换,将初始状态集合映射到某个终止状态.通常的酉门可以分解为一个或者两个量子位的基础门.线路图代表了一系列酉演化和测量,包含输入状态和输出测量.线路图每次从左到右运行.每个水平线代表量子信息向前传播一次.每条线代表一个量子位的量子信息.酉门由线上的盒子表示,门的符号写在盒子里[74-77].量子线路模型是一个很好的量子计算模型.它为量子算法的构造和量子计算机的物理实现提供了一个框架.由于量子图灵机的操作是可逆操作,量子图灵机的逆操作变换处理相当于把每一个量子逻辑门用一个需要更多量子比特输入的量子逻辑门代Page8替.这意味着当量子图灵机对应的量子线路进行逆操作时,所付出的代价只是额外增加了按照线性增长的量子比特数目.量子线路模型通过组合一组基本的量子逻辑门,实现具有特定功能的线路.该模型可以清晰、直观地模拟量子信息处理的过程,对我们设计量子计算装置和新的量子算法都有很好的指导作用.这样的文章有很多,譬如文献[78-83].量子计算复杂性理论中最重要的两个模型是量子图灵机模型和量子线路模型.在量子计算中,QTM计算过程是复杂的,尤其是表示数据的量子态的转换和控制变量处于基状态的过程是十分重要的.量子线路模型不用考虑这些方面,它更侧重于考虑输入的量子态在幺正运算的操作下得到的结果.它类似于均匀多项式线路,是可逆线路的推广.使用该模型能够更方便地描述量子算法.量子线路模型的主要优点是模型简单,描述问题比较直观,并且有利于理解和设计量子算法.在量子系统中,量子线路模型提供了非常方便的物理演化形式,如量子超密编码[84]、量子隐形传态[85]以及Deutsch算法[1]等.4.3量子算法复杂性理论4.3.1量子算法的时间复杂性设TM(x)表示量子图灵机M对输入x计算得到一个最终格局所用时间,或者称时间复杂性;否则无定义.若TM(x)存在,且TM(x)=T,则M对输入x的计算在时间T停机.对所有输入x∈Σ均停机的QTMM,其时间复杂性函数TM:Z+→Z+:TM(n)=max{t:x∈Σ,|x|=n,使得QTMM对输入x的计算需要的时间为t}.若存在一个多项式g(n),使得对所有的n∈N+,有TM(n)g(n).即若存在多项式g(n),对每个输入x,QTMM在时间g(f(ω))内精确停止,则M称为多项式时间QTM.若函数g(n)是指数形式的,那么M称为指数时间QTM.图5对多项式时间量子算法与指数时间量子算法的复杂度进行比较分析,其中L2是多项式时间量图5多项式时间量子算法与指数时间量子算法复杂度比较子算法复杂度,另外两个是指数时间量子算法的复杂度.法,给出以下几点注记:关于多项式时间量子算法与指数时间量子算(1)定义的量子时间复杂性是在最坏情形下的度量.求解某一问题的一个量子算法,对于该问题的绝大多数例子是有效的.但是可能对问题的某个极端例子表现极差.从而导致这一量子算法是指数时间量子算法.(2)关于问题的难解性.一个量子算法本质上并不依赖于特定的编码策略和具体的计算模型.这是因为这些定义划分在多项式变换下可相互规约.而不同的合理编码策略给出同一问题的描述,相应的输入长度(或长度的上界、下界)之间最多相差一个多项式倍数,且从一种编码容易转换到另一种编码.类似地,多项式时间界定的量子计算模型在单一时间单位内所完成的工作量,相对于多项式的复杂性函数是等价的.一般不具体提及特定的编码策略和量子计算模型,只简单地称某一算法是多项式时间量子算法或别的类型的量子算法问题等.众所周知,经典算法复杂性是基于经典图灵机进行讨论的.类似地,量子算法复杂性是基于量子图灵机进行分类的.由前面所述,量子图灵机的定义有许多,最常使用的是随机预言量子图灵机.现有许多已知的量子算法都属于这个模型,譬如Deutsch-Jozsa算法[1]、Grover搜索算法[3]、Shor算法[4]等.谕示“Oracle”可以作为一个黑盒,使用者不必考虑它的细节.在考虑某个算法的量子复杂性时,必须考虑如何去构造这个谕示,且构造谕示需要多少资源(包括量子比特和量子逻辑门).如果可以用构造谕示得到有效的解,则称这个问题在量子环境下是可解的.但是并不是所有的量子算法都需要使用谕示.有些量子算法就不使用谕示模型,譬如文献[36,39-40,86-87].目前我们只考虑带有谕示的量子图灵机模型.它的计算能力有如下的两个重要的结果.定理1[41].设Q(A)是运行时间受限于T(n)=O(2n/2)的随机谕示量子图灵机.从Q(A)中随机唯一地选取谕示A的概率为1,则基于Q(A)的BQP问题中不包含NP问题,即NPBQP.定理2[41].设Q(B)是运行时间受限于T(n)=O(2n/3)的随机置换谕示量子图灵机.从Q(B)中随机唯一地选取置换谕示B的概率为1,则基于Q(B)的BQP问题中不包含NPco-NP问题,即NP∩Page9co-NPBQP.为了更直观地理解量子算法的优越性,在表2表2一些困难问题的经典算法复杂性和量子算法复杂性Feistel结构和随机置换的区分[91]经典算法复杂度O(2n)exp(c(logn)1/3(loglogn)2/3)下上界分别是Ω(nn/4),Ω(nn/2)Ω(nn/3/槡n)2槡nk2O(n)O(2n/2)O(N)O(n2.376)O(n2n/2)O(2n/槡r)从表2中,我们可以看到,某些困难问题的经典算法的复杂性超过量子算法的计算复杂性.某些NP类问题的量子算法可以多项式地规约为QP类问题.基于这些问题所构造的密码在量子环境下,将不再安全.而某些NP类问题的量子算法不能多项式地规约为QP类问题,则基于这些问题困难性构造的密码体系仍然不能被量子计算攻破[94].另外,由于PQP,使得在电子环境下不安全的密码在量子环境下一定是不安全的.4.3.2量子环境下的数据复杂性在文献[95]中我们着重讨论了数据复杂性.计算复杂性理论描述了计算对资源的消耗,如时间和空间资源.目前的计算复杂性理论主要研究时间复杂性和空间复杂性.除了时间和空间外,数据也是一种重要的计算资源.在计算过程中,如果需要的数据量过大而实际上无法获得,那么计算也将不能完成.数据复杂性的概念最早用于电子计算环境下对DES密码的差分攻击.对于8轮以下的DES由于需要的选择明文数量较少,在PC机上几分钟就可以攻破.但对于标准的16轮DES密码却不能攻破,因为需要247个选择明文,这在实际上是很难得到的.这里影响差分攻击是否成功的重要因素是其数据复杂性.①与经典的情况类似,这里提出的量子环境下的数据复杂度包括输入数据复杂度和处理数据复杂度两方面.输入数据复杂度是指完成某个量子算法所需输入的数据量.处理数据复杂度是指运行该量子算法所要处理的数据量.通常,我们采用其主要部分来描述计算复杂度.譬如,在Grover搜索算法中需要将搜索算符执行2n/2次.这说明Grover搜索算法的处理数据复杂度是很大的.另外,在Shor算法中我们总结了一些困难问题的经典算法复杂性和量子算法复杂性.设待分解的合数是n位的,则它的输入数据复杂度是O(n).又因为它的处理数据复杂性不大.故Shor算法可以有效计算大合数的因子分解问题.于是在标准量子谕示的意义下,我们给出量子计算情况下的数据复杂性的定义,且给出了基于数据复杂性分类的容易和困难问题定义.定义1.令QTM是一个n量子比特的量子图灵机.QTM的数据复杂性是一个函数f:N→N,其中f(n)是QTM在运行时输入和处理的所有数据量之和.令n=n1+n2,则f(n)=f(n1)+f(n2),其中n1、n2分别是储存输入数据的储存器和运算处理数据的储存器的量子比特数,f(n1)、f(n2)分别表示输入数据量和处理数据量.定义2.令QTM是一个n=n1+n2量子比特的量子图灵机,其中n1,n2分别是储存输入数据的储存器和运算处理数据的储存器的量子比特数.假设量子图灵机的数据输入能力和处理数据能力分别是g(n1)和g(n2).量子图灵机在时间T∈R+内运行解决某类问题的量子算法时,需要的数据总量为f(n)=f(n1)+f(n2),其中输入数据量是f1(n1),处理数据量是f2(n2).(1)若存在正整数n0使得对所有的n=n1+n2>n0满足limn→是正常数,则称该问题在量子图灵机环境下是容易计算的;(2)若limn→,则称该问题在量子图灵机环境下是计算困难的.在经典计算中,布尔函数是一种重要的函数.n①BrassardG,HoyerP,TappA.QuantumalgorithmforthePage10元布尔函数一共含有22n种情况.设Ct(f)是计算布尔函数f的规模最小的布尔线路C,且C中每个逻辑门的输入不大于t.如果t=2,则用C(f)=C2(f)表示.文献[96]中指出几乎所有的n元布尔函数f均满足C(f)=Ω(2n/n).这说明只有少数的布尔函数存在有效的经典算法.类似地,我们将这一结果推广至量子计算中.布尔运算包括逻辑非、逻辑和与逻辑积.在布尔线路中,所有的逻辑非门变换到最底层,作为一个输入变量.因此,布尔线路中仅含有逻辑和和逻辑积运算.通过适当地增加用于储存逻辑运算结果和表示逻辑非的量子比特数,量子线路能够成功地模拟布尔线路[97].不同的是,在布尔线路中每个逻辑门(逻辑和和逻辑积)的输入是两个经典比特,而量子线路图中每个量子逻辑门的输入是四个量子比特.不失一般性,在量子计算中我们把这些逻辑运算视作由一组量子逻辑门构成的黑盒.众所周知,量子门按照输入的量子比特数可以分成单比特、二比特及多比特量子门.这些量子比特门构成一个集合组.在这里我们忽略具体的量子逻辑门,只根据输入的量子比特数划分.于是,量子线路中出现的量子逻辑门的数量称为量子线路的尺寸.如果两个线路有相同的输入和输出,则称它们是等价的.如果不存在含有更少量子比特门的等价量子线路,则称该量子线路的尺寸是最小的.设N(n,S)表示计算不同布尔函数的量子线路的数量,其中n表示量子比特数,S表示量子线路中的量子逻辑门数.引理1[95].对任意的S有N(n,S)<S(2n)S.由引理直接得到下面的结果.定理3[95].设量子计算机有n个量子比特.在标准谕示模型下,不存在多项式尺寸的量子线路计算所有的布尔函数.在文献[95]中我们得到了与经典情况相似的结论,即不存在多项式规模的量子线路计算布尔函数.虽然到目前为止,我们仍未能找到具体的布尔函数的布尔线路或量子线路的规模是超线性函数的.但这表明即使在量子计算中,仍有许多的计算是量子计算不能有效完成的.于是我们得到重要的结论,即输入数据复杂性很大的问题是抗量子计算的.换句话说,若某个计算任务的输入数据量与计算所有的布尔函数的数据量是一个数量级的,则该问题是抗量子计算的.不论是电子环境还是量子环境下,时间复杂性、空间复杂性[98]和数据复杂性都是重要的复杂性分类.它们彼此之间是互相关联和影响的.在算法运行过程中需要空间储存数据,这就涉及到空间复杂性.有时算法运行需要的数据太大可能会超过储存能力.另一方面算法运行时需要处理数据越多,则处理时间就越长.此外,在量子计算中态之间的转换是复杂的.譬如,经典态到量子态(或量子态到经典态)转换的过程是复杂的,而量子态之间的转换是容易实现的.这对量子计算机的影响是很大的.在量子计算内部的数据处理是量子态的,而显示给人看到的数据是经典态的.所以在输入输出数据的环节,量子计算机的速度和量子计算机的处理速度相比是慢的.在密码设计上,我们可以利用这个特点.如果我们设计的密码使得攻击该密码需要极大的输入输出数据复杂性,则该密码就可以抵御量子计算的攻击.4.4量子基本运算和Shor算法的优化实现量子计算的通用模型包括,一种是基于一系列门和测量来实现的,另一种仅包含量子测量.目前大部分的量子计算研究重点是第一种.下面通过实现量子计算机中两个量子比特x1和x2的与操作方案,解释一下量子计算的过程.(1)采用3个量子比特位的变换来表示|x1,x2,y〉;(2)置第3个量子比特为0,即y=|0〉;(3)对|x1,x2,0〉执行Uand操作,定义Uand:|x1,x2,0〉=|x1,x2,x1∧x2〉,其中x1∧x2表示x1和x2的经典与操作结果,而表示模2加;(4)对第3个量子比特进行(|0〉,|1〉)测量,测量结果作为Uand操作的结果.通过对以上的运算策略进一步推广,已经证明量子计算机能够完成经典计算的任何任务[99].而加法作为经典计算的基础运算,在量子计算中能成功地被模拟.在文献[100]中给出了包括加法、模加、模乘、模幂基本运算的量子线路图.利用模幂运算可以实现Shor量子算法.它使用一个线性增长的辅助储存器执行分解大因子算法.在文献[101]中作者优化了原始的量子加法基本运算的量子线路图.在此基础上,我们进一步优化了量子加法基本运算的量子线路图.以3量子比特为例(见图6),对比文献[101]给出的3位输入,2位Page11输出和4位输入,3位输出的量子加法,我们的方案使用的量子比特数均比原方案少一个,且量子门更加简单.通过对比出现的量子加法路线图的构造,得到结论:量子加法的构造可用受控非门和Toffoli门连接而成.做简单的推广粗糙地得到一个结果,对m(m3)个数据的加法可以用一个m个数的一位加法和多个m+1个数的一位加法元件组合而成,表达式为U(m,n)=Un-1j位的元素进行加法运算.设Tn表示含有n个量子比特参与运算的Toffoli门.设U(m,n)表示m个n位量子比特数的加法.例U(5,2)=U(52)U(6,1)U(5,1)=S56S45S34S12C56T5C46T4S45S34S23S12C45T4.这个例子不一定是最佳方案,得到的扩展方案与同类方案[101]比较,使用的量子比特数和量子门更少.Shor算法是重要的量子算法之一.Shor算法的出现使得量子算法求解整数分解问题优于任何已知的经典算法.这个标准的量子算法刺激了量子信息处理的研究与量子计算机的实际实现.在过去的20年中,利用优化技术,Shor算法的在各种不同的平台上进行了实现.证明了量子求解整数问题的有效性.但是,在实验方面Shor算法的执行需要很高的条件,一个充分大的量子寄存器和高保真的量子控制.因此,这对于量子算法的优化和实验的简化都是一个重要的挑战.量子算法的优化和实验的简化是可能的.一般地,理论上的优化结果好于实验的结果①.在Shor算法优化方面出现了很多的成果.Takahashi利用2n+2个量子比特构造了一个量子线路[102],其中n是待分解数的比特长度.该量子线路使用了O(n3logn)量子逻辑门.该线路比Beauregard的量子线路方案更优[103].不仅量子比特数减少一个,而且量子逻辑门少一半.Pavlidis通过利用量子傅里叶变换构建更复杂的算术乘法器(累加器),量子常数和常数的量子分频器来实现Shor算法.它们可以有效地执行量子模乘运算.这个量子线路需要9n+2个量子比特[104].付向群等基于半经典量子傅里叶变换的方法,设计了一个新的量子线路.该线路需要O((logn)3)量子逻辑门,需要的量子比特数比初始方案多2个量子比特,但是实现速度增加2倍[105].随后,付向群等将这个结果进行了推广.由于大维数量子寄存器生成的困难性,基于小维数量子寄存器实现大维数量子Fourier变换的方法,与Parker等人的实现线路相比,计算资源大体相同,所需量子寄存器的维数前者较后者多t-1维,而实现速度提高了t2倍,t是窗口宽度[106].Shor算法的实验方面也有许多的成果.在处理量子编码技术中,普遍使用的是量子光学电路.Politi等在硅芯片上利用4单光子量子比特实现了分解15的Shor算法[107].Crespi实现了光子集成控制非(CNOT)栅偏振编码的量子比特[108],对于逻辑真值表的量子门表现出其高的保真度.这表明这个门的能力将可分离状态转换成纠缠的.利用该技术可以实现Shor算法.虽然Shor算法在理论上是一个成熟的算法,但是在实现上存在着距离.由于量子算法是一个概率算法,并不能保证Shor算法每次都能成功.通过优化可以提高算法的成功率,接近1.到目前为止,对Shor算法实现方法的优化都是基于算法实现所需的量子比特数,基本量子门数量和实现速度方面去研究Shor算法的优化.在硬件实现方面,尽管已经出现了一些实现的方案,但是实现的位数较少,仅处于实验室阶段.目前,对量子计算研究者而言还不能使用真正的量子计算机,更多地是使用经典计算机模拟量子算法进行验证实现.量子计算的经典模拟对量子计算理论和量子算法正确性、可行性的研究具有重要意义.可以通过经典模拟进行超前研究,但是经典计算机的计算速度和存储空间远不能满足量子计算机的需求,它的验证范围也有限.这限制了经典模拟的发展.如何构造更好的经典模拟环境,并有效地和目前计算机系统结合也是一个重要的研究内容.目前使用的量子模拟器有Mathemcaticanotebooksimulation、QCL、QCE、QDD等.模拟器主要是对目前比较成熟的量子算法的模拟,比如Grover、Deutsch以及小波变换等.4.5其他量子计算模型除了上面讨论的以外,其他量子计算模型还有量子计数模型、量子查询模型、量子黑箱模型、量子通信模型等.而单向量子模型[109]和绝热量子模型[110]的出现为量子计算研究带来了新思路.而量子衍生算法[111],量子遗传算法[112]等丰富了量子算法的应用领域.单向量子模型用于量子水印技术[113]等,绝热量子模型[114]更多地用于分解大合数问题.对偶量子模型可以允许在量子算法的设计中使用非酉算符[115].各种量子模型的出现对研究量子算法求解问题是有利的,丰富了研究的领域.①SmolinJA,SmithG,VargoA.PretendingtofactorlargePage125格密码的量子安全性5.1格理论及其困难问题格理论的研究开始于18世纪.它被作为一个算法工具用来解决数学和计算机科学中的一系列问题,这包括密码分析[116]和公钥密码设计[117]等.格被看做是一种具有周期性结构的n维点空间集合.格密码有很多优势.首先,它具有抗量子计算的潜力.其次,格算法具有简单易实现、高效性、可并行性特点.它的运算简单,通常只涉及矩阵、向量之间的线性运算.第三,格密码已经被证明在最坏条件下和平均条件下具有同等的安全性.因此格密码可以作为抗量子密码领域的一个候选方案.下面介绍格中的一些困难问题.量犫1,…,犫n∈Rn,由它们生成的向量集合定义3(格的定义).给定n个线性无关的向称为格.向量犫1,…,犫n称为格L的一组基.任意一组基可以用一个实数矩阵犅=[犫1,…,犫n]∈Rn×n表示,矩阵的列向量由基向量组成.使用矩阵表示后,一个格可以用矩阵的语言描述为L(犅)={犅狓,狓∈Zn},其中犅狓表示一个矩阵与向量的乘法.定义4(q元格).给定正整数q,m,n,矩阵q,可以得到下面两个q元格:∧q(犃)={狔∈Zm,狊∈Zn,狔=犃Ts(modq)},q(犃)={狔∈Zm,犃狔=0(modq)}.∧⊥犃∈Zn×m第1个q元格由犃的行向量生成,第2个格包含了所有与犃的行向量模q正交的向量.在格理论中有许多的困难问题.首先介绍最短向量问题(SVP)及其变型问题.其次,介绍另一个重要的格问题类,最近向量问题(CVP)及其变型问题.定义5(最短向量问题(SVP)).对于一个d维格LZn给定一组基犅,找到一个非零的向量狌∈L满足格中的最短向量是不唯一的.因为如果狌是最短向量,-狌也是.其中符号表示范数.1801年Gauss在欧几里德范数中提出了范数的限定概念.直到2002年Kaib和Schnorr将其推广到任意范数[118].1910年Minkowski建立了二次型与丢番图近似之间的联系,其中一个中心问题就是证明格中最短向量的存在[119].1981年Van证明了SVP在l范数下是NP难的[120].1998年Ajtai证明了在lp(p<)范数下的困难性①.对大多数应用来说,最短向量定义在l2范数上.大多数情况下,不要求最短只要近似最短满足计算要求即可.定义6(近似最短向量a-SVP).给定近似因子γ>1和一组基,找到一个非零向量狌∈L,使得求解a-SVP问题最著名的算法是LLL算法,对近似因子γ=2o(n),LLL算法是个多项式时间算法求解近似SVP.目前,对近似因子γ=2logn1/2-ε(ε>0是一个任意小的常量)的a-SVP在准多项式归约下是NP难的[121].定义7(Hermite最短向量HSVP).给定d维格LZn的一组基犅和一个近似因子γ>0,找一个非零向量狏使得其范数满足如果格的体积是易计算的,则确认正确的解也变得容易了.Hermite常量确保γγd时至少有一解,而λ1(L)λ槡dvol(L)1/d.因为LLL算法可以找到一组基,使得第一个向量犫1α(d-1)/4vol(L)1/d,其中α>4/3.因此LLL算法可以解决近似因子为γ=α(d-1)/4的HSVP问题.定义8(最短长度问题SLP).给定d维格LZn的一组基犅和一个近似因子γ>0,找到一个值λ(L)满足当γ=1时,λ1(L)=λ(L).定义9(唯一最短向量u-SVP).对于一个满秩格LZn的基犅和一个间隙因子γ,找到最短非零向量狏∈L,其中狏是惟一的(对其他任何向量狓∈L满足且至多是向量狏长度的γ倍的向量都平行于狏).定义10(最短基问题SBP).给定一个d维格LZn的基犅和一个近似因子γ>0,找到一组基犅=[犫1,…,犫d]满足①MicciancioD.LatticeBasedCryptography:AGlobalImprove-Page13其中犅=[犫1,…,犫d]∈犅(L)是L的任意一组基.当γ=1时,max1id犫i=max1id犫i.定义11(最短向量决策问题GapSVP).给定d维格LZn的一组基犅,一实数因子r和一个近似因子γ,决定λ1(L(犅))r或λ1(L(犅))γr.即如果λ1(L(犅))r,结果直接返回YES.如果λ1(L(犅))γr,结果直接返回NO.否则,如果rλ1(L(犅))γr,那么YES和NO都可被返回.这个问题被称为promise问题.对任何常量近似因子γ,GapSVP是NP难的.定义12(最短独立向量问题SIVP).给定d维格LZn的一组基犅和一个近似因子γ>0,找到一组d个线性无关向量狌1,…,狌d满足此外,另外一个重要的格问题类是最近向量问题(CVP)及其变型问题.定义13(最近向量问题CVP).给定d维格LZn的一组基犅和一个目标向量狓∈span(L),找到一个向量狌∈L,满足定义14(近似最近向量问题ACVP).给定d维格LZn的一组基犅,一个目标向量狓∈R和一个近似因子γ1,找到一个向量狌∈L,满足Henk第一次提出CVP比SVP困难一些(对同一维数来说).后由Goldreich扩展开来,提出一个预言,对各种范数解决CVP就可以解决SVP(在相同维数下).定义15(有界距离译码BDD).给定d维格LZn的一组基犅,一个距离参数α>0和一个目标向量狓∈span(L),找到一个向量狌∈L满足当目标向量距格不远于αλ1(L)时,BDD和CVP是一样的.定义16(最小整数解SIS).给定一个模q,一个矩阵犃∈Zn×m个非零向量狌∈Zm,满足犃狌=0(modq),且狌v.v的选择保证了解的存在.这是因为狓=qei是犃X=0(modq)的平凡解,所以v的选择通常小于q.2007年Micciancio和Regev指出在一个随机q(犃)中解SVP问题至少和求解平均状况的格∧⊥SIS一样困难[122],其中v的选择满足SIS的条件.定义17(非齐次最小整数解ISIS).给定∧⊥的一组基,找到一个向量狏∈Zn如果存在一个算法可以找到解且狏β(对给定的范数界),则称算法成功.将上式右边的0替换为y,则得到SIS问题的一个非齐次状态,记为ISIS(q,m,β).如果不存在有效的算法在多项式时间t内,以不小于ε的概率求解SIS(ISIS),则SIS(ISIS)是(t,ε)难的.ISIS问题的relationproblem定义为RISISn,m,q,β={((犃,狔),狓)∈Zn×mKawachi等得到了ISIS问题的一个变型版本[123],使得RKTXn,m,q,ω={((犃,狔),狓)∈Zn×m文中指出对给定m和β=plon(n),任意的素数qβωn(logn槡),近似因子γ=β·O(槡n),求解平均情况下的SISq,n,m,β和ISISq,n,m,β问题,同最差条件下近似SIVPγ和GapSVPγ问题的困难性相同.除了最短向量问题(SVP)、最近向量问题(CVP)之外,还有一类被称为带误差的学习问题(LWE).它在密码学中有着广泛的应用.下面简单介绍一下带误差的学习问题(LWE)及其变型问题.定义18(带误差的学习问题LWE)[117].选取参数q2作为大整数模,狊∈Zn是Zq上的一个概率分布,A狊,χ是Zn分布,分布样本选取如下:(1)从Zn(2)通过χ在Zq上选取犲;(3)返回元组(a,〈a,狊〉+犲).给定n1,模q2,Zq上的一个概率分布χ和分布As,χ中的任意多个相互独立的样本,找到狊.定义19(带均匀误差的LWE问题(LWEU)).给定正整数m,n,q=q(n)>2,输入对(犃,犫),其中犃∈q,向量犫∈ZmZm×n到向量狊∈Zn5.2格问题的难解性在2002年Regev将傅里叶变换应用到格困难问题及格密码的分析上[124],考虑了最坏情况下的唯一最短向量问题(uSVP)解的情况,并提高了Ajtai和Dwork的格密码的安全性指标,同时在文章中给出了存在量子算法求解nc-uSVP问题的充分条件.在2003年Aharonov等人考虑了一个特Page14殊的最短向量问题coGapSVP槡n,证明了该问题属于QMA,即NP问题在量子环境下的模拟[125].在2004年Aharonov等人考虑了其他的格困难问题,近似最短向量问题(aSVP)和近似最近向量问题(aCVP),证明了这两个问题属于NP∩coNP,故在标准量子谕示模型中不存在有效的量子算法求解这两个格困难问题[126].随后,在2003年Regev首次考虑了利用量子算法求解特殊的格困难问题[127].文中证明,在陪集抽样实验中如果存在算法求解二面体群的隐藏子群问题,那么存在算法求解唯一最短向量问题(uSVP).另外,文中讨论了二面体群陪集问题,指出如果存在带有失效参数f的算法求解二面体群陪集问题,那么存在量子算法求解θn1这两点,作者给出了θ(n2.5)唯一最短向量问题到平均情况下的子集和问题的量子规约.但是Regev提出的量子算法的时间复杂性是2O(logN(loglogN槡)).2004年Regev修改了原来的量子算法,将量子空间复杂性降低到多项式规模,而时间复杂性仍是亚指数的[94].2015年Laarhoven等人在改进的量子Grover算法基础上讨论了最短向量问题(SVP),提出新的量子算法的复杂度是O(21.799n+O(n))[128].这一结果优于Micciancio[129]、Nguyen[130]、Wang等人[131]的经典算法复杂性.同年,Laarhoven等人在文献[132]中利用局部敏感的哈希函数(LSH)加速格基筛选,将求解最短向量问题(SVP)的时间和空间复杂度分别降低到O(20.298n+O(n))和O(20.208n+O(n)).Becker等人在文献[133]中提出新的启发式算法求解最短向量问题(SVP).在不增加新的寄存器的情况下,该算法的时间复杂性和空间复杂性分别是O(20.3122n+O(n))和O(20.2075n+O(n)).在2005年Regev提出了LWE问题,并讨论了它的难解性[117],给出从GapSVP问题到SIVP问题的量子规约,其中SIVP问题是SVP问题的一个变型.在量子规约下,LWE问题与最坏情况下近似因子为O(n/α)的SVP问题一样困难,其中α是与扰动分布方差相关的实际参数.2013年Lyubashevsky等人[134]在环上考虑了LWE问题,假设不存在多项式的量子计算机求解最坏情况下的理想格问题,那么环LWE的分布是随机的.5.3基于格的密码学提供了理论上的支持.这些格困难问题的出现为设计新的格密码方案5.3.1AD公钥密码1997年Ajtai和Dwork提出第一个格密码方案[135],简称为AD.该公钥密码体制是基于O(n8)-uSVP的最坏情况困难性.在1997年Goldreich等在文中针对AD密码体制的解密失败问题给出消除解密错误方案[118],并且给出了一种新的密码体制将安全性提高到O(n7)-uSVP,但新方案并没有基于格的困难问题,这就失去了与之等价的安全性.2004年Regev提出了一个新的困难性相当于O(n1.5)-uSVP的公钥密码体制[124].AD密码体制是定义在欧氏向量空间集合上.该安全参数n是向量空间的维数.令m=n3且rn=nn.引入符号Bn表示n维立方体,Bn={狓∈Rn:|xi|rn2,i},且对于c>0,将半径为n-c的n维球记作Sn={狓∈Rn:狓n-c}.私钥是从n维单位球中随机选择的向量狌.在Bn上定义的广义函数Hn有如下的结构:(1)从{狓∈Bn:〈狓,狌〉∈Z}中随机均一地选取元素狓.(2)从集合Sn中随机均一地选取误差向量狔1,…,狔n.(3)输出狏=狓+∑n同时从Hn中随机选取n+m个向量狑1,…,狑n,狏1,…,狏m作为公开密钥.其中狑i满足从狑i到由狑j生成的超平面(i≠j)的最小距离不小于rnn2.加密过程:加密是逐比特进行的.首先加密0比特,令犫1,…,犫n从{0,1}中随机选取并且归约向量∑n犫i狏i模平行六面体i=1将n维向量作为密文.其次加密1比特.从平行六面体P(狑1,…,狑n)中随机选取n维向量作为密文.解密过程:对于密文c,通过密钥u可以计算出明文.如果dist(〈c,u〉,Z)n-1,那么密文解密为0比特;反之解密为1比特.AD密码体制存在以下3个方面的问题:(1)解密失误.由于AD密码存在解密失误的现象,所以必须保证解密错误以比较低的概率发生,否则大量解密错误会使AD无法使用.减少扰动参数可以有效降低解密错误发生的概率,但扰动参数Page15太小,就可能泄露私钥信息.因此AD密码是一种IPKC.(2)效率问题.由于AD是由逐比特加密的,1比特的信息被加密成为实空间中的一个点.数据扩展和内存需求很大.但是由于AD已经被证明平均安全性与最坏安全性相同.因此如果加密的明文不多,又要求具有较高的安全性,那么就可以考虑使用AD方案.(3)实用性问题.为了使AD方案能够抵抗概率算法攻击,必须满足n>32.如果n=32,那么公钥大小为20M字节,并且每1比特的明文加密后将变成一个6144比特的密文.如此大的公钥和加密数据扩充,使AD在普通的公钥密码应用中难以接受.因此实用性大大受到限制[119].5.3.2GGH公钥密码在1997年Goldreich、Goldwasser和Halevi[120]设计了简称为GGH的密码体制,并给出了一个基于CVP问题的单项陷门函数,使用这种函数可以用来做为公钥加密后的数字签名.这也是第一次基于格的签名.它对AD加密体制进行了改进避免了解密失败的现象.该体制有两个参数,分别是格维数n和安全参数δ.它们是由最近向量问题加密的困难性决定的.私钥是由矩阵犚给出.矩阵犚的列构成格L的一组基.这些基构成合理的短整向量.设计者在文中给出了集中构造犚的方法.公钥由公开的矩阵犅构成,它的列表示L的不同的基.与犚不同的是,犅不能归约到犚.设计者给出了两种方法能随机地从犚中生成犅.随后Micciancio提出更有效的厄米范式作为公开基(见本文第12页脚注①)[121].加密过程:为了加密一个信息,将它进行编码为整向量犿∈Zn.令误差向量犲随机地取自集合{-σ,σ}n,计算密文c=犅犿+犲.解密过程:对于密文c,解密得到明文m=犅-n犚犚-nc,其中符号·:犚→Z运算规则是四舍五入.对于x=(狓1,…,狓n)∈Rn,计算x=(狓1,…,狓n)∈Zn.分析过程:在GGH密码体制里,每个明文m对应格点mL=犅犿.在加密过程中,明文m首先转换成对应的格点mL,然后通过增加误差向量犲计算得到密文c.因此,通过选择σ和犲使得mL是最接近密文c的格向量.为了得到明文mL(或者m),那就必须解决最短向量问题.因此解密过程是由Babai的关于近似CVP问题四舍五入方法构成的.在1986年Babai针对近似CVP问题提出两种方法,分别是四舍五入方法和最近平面算法[122].按照Babai的方法,当使用密钥犚时效率很好,当使用公钥犅解密时工作效率很差,即解密时按照Babai的方法使用密钥可以得到正确的格向量犚犚-1c.因为犚-1m犔是整向量,由Babai的方法知道犚犚-1c=犚犚-1(m犔+犲)=犚(犚-1m犔+犚-1犲)=m犔+犚犚-1犲.如果犚-1犲=犫是非零向量,那么犚犫是非零的格向量.此时,按照Babai的方法不能得到正确的格点,即恢复出错误的消息.因而,当犚-1犲=0时加密是正确的.同时,误差向量具有(±σ,…,±σ)形式.增加σ值意味着增加格向量犿犔和密文c的距离,使得CVP问题更难于求解且解密错误的可能性增加.另一方面按照Babai方法利用公钥犅解密将会失败.这是因为公钥犅不能归约到密钥犚上.这意味着利用格基归约解决CVP问题等价于解决近似最短向量问题.为了保证安全性,其公钥尺寸至少需要1.8MB,私钥尺寸也必须大于1MB.这使得GGH密码体制的使用价值也不大.5.3.3NTRU公钥密码在1996年Hostein、Pipher和Silverman[123]提出了简称为NTRU的密码体制,同传统的公钥方法相比,它具有较小的密钥长度、较快的加密和解密时间等优势.除此之外,在安全性方面也有优势,即存在潜在的抗量子计算能力.这是因为到目前还没有有效的量子算法解决NTRU密码体制的基础———格问题.在最近的十几年来,关于NTRU密码体制的安全性问题的研究已经变得十分活跃.在国际上,NTRU密码体制已经作为IEEEP1363.1标准[136].这也是到目前为止最好的基于格问题的公钥方案.NTRU密码体制包含加密和签名,这里只是介绍加密.在介绍密码加密体系之前,先引入两个多项式函数的定义,选取整数N,设多项式函数f=aN-1xN-1+…+a1x+a0和多项式函数g=bN-1xN-1+…+b1x+b0的次数小于N.定义h=fg=cn-1xn-1+…+c1x+c0,其中ci=∑i+k≡1这个和是对所有满足j+k≡i(modN)的.(1)加密过程通过预处理阶段,将明文m表示成次数小于N且系数的绝对值至多为(p-1)/2的多项式,并选择一个小的多项式φ计算密文c=pφh+m(modq).Page16(2)解密过程计算a≡fc≡pφg+fm(modq),其中多项式a的所有系数的绝对值至多为q/2.所以明文Fqa=pFpφg+Fpfm≡0+1m=m(modp).NTRU密码体制的说明:因为在NTRU密码体制中次数是N-1的多项式f和g定义的运算fg需要N2个乘法,所以在加解密一个长为N的明文时,需要运算O(N2)次的运算,因而密钥的长度为O(N).当NTRU密码体制的参数n变为2n时,加密过程中的两个n-1次多项式变为两个2n-1次的,加密2nlog2p比特的计算量从2n2变为4n2个,即NTRU密码体制的加密速度与n成反比.(3)解密失败在解密过程中,若a=pφg+fm(modq)不等于pφg+fm,而是存在一个非零多项式u使得a=pφg+fm+qu.于是Fpa(modq)=m+quFp(modq),其中(p,q)=1.当p不能整除u时qyFp(modq)≠0,解密失败.在NTRU的技术报告上将解密失败分为越界错误和越距错误[137].越界错误是指多项式φg+fm的系数超出[-q/2,q/2),但是最大的系数和最小的系数之差不超过q;如果最大的系数和最小的系数之差超过q,称为越距错误.同时越界错误可以用中心化方法纠正.(4)NTRU密码体制的攻击到目前为止已经有各种各样的攻击方法针对NTRU密码体制,下面介绍一些已有的攻击方法:设h=hN-1xn-1+…+h0构造一个N×N矩阵设犐为N×N单位矩阵,构造一个2N×2N矩用行向量分别表示多项式f=aN-1xN-1+…+a1x+a0和多项式g=bN-1xN-1+…+b1x+b0,记为f-=(a0,…,aN-1)和g-=(b0,…,bN-1),那么f-犎=g-(modq).阵犕=犐犎格.由于g≡fg(modq),所以存在多项式y有g=fg+qy.将y表示成一个N维的行向量狔-,那么(f-,狔-)犕=(f-,g-),其中(f-,狔-)是2N维行向量.故有(f-,g-)在格L中,由于f和g均有小的系数,使得(f-,g-)在格L中是一个短的向量.于是将NTRU密码体制建立在寻找最短向量问题(SVP问题).穷举攻击.攻击者试图试遍所有的密钥f,使得fg(modq)有小的值;或者试遍所有的多项式g.所以攻击者如果想恢复明文,需要试遍可能的多项式φ计算得到明文m=c-φh(modq).而多项式g的规模小于多项式f的规模,所以密钥的安全由多项式g的规模决定.同时明文的安全由多项式φ的规模决定.其次是中途相遇攻击.作者指出存在分别针对多项式φ和密钥f的攻击.随后在文献[138]中继续了这一工作.简单地说,将密钥f分成两半f=f1+f2,分别计算狓1=f1h和狓2=-f2h.因为(f1+f2)h=g(modq)和g是二进制的,所以狓1和狓2模q后只是0与1的不同.假设f有偶数df个1,f1有df/2个1,那么从N次多项式中任取一个向量狓1,其系数满足-q/2<(狓1)iq/2.对于狓1的每一个系数定义一个比特βi,其中若系数狓1>0则βi=1反之βi=0.进而定义一个N-比特的字符串a1=β1:β2:…:βN.设β-=1-β表示比特β的余,a-表示N-比特的字符串的补.所以f1被分为两个储存盒,分别储存a1和a-应狓1=f1h和a-时,使得a1=a-出碰撞.对于这些碰撞能从储存的盒中恢复出多项式f1,f2.同时在文中估计了这种攻击的复杂性1槡N第3种是多种传输攻击.如果数次发送同一个明文m,但是使用同一个密钥和不同的随机多项式φ进行加密,攻击者可能恢复大部分的明文.现在发送密文ci≡pφih+m(modq)其中i=1,…,r.攻击者计算(ci-c1)h-1(modq),从而得到pφi-pφ1(modq).因为多项式φi非常小,以至能恢复出确定的pφi-pφ1,从而得到多项式φ1的一些系数.如果r比较小,那么可以通过穷举搜索恢复出明文.因此建议在加密过程中增加干扰,使得能抵御这种攻击方式.第4种格攻击.已知的攻击主要是针对公钥h和明文m.与利用公钥攻击一样,攻击者是利用类似的方法找到α,使得相对容易找到目标向量(αm,φ).对于利用格基归约方法的攻击,就需要使格具有足够高的维数,使得格基归约算法失效.但是这样的结果使得加解密算法变得很慢,效率降低.已知当最短向量与2N维格的2N次根判别式相比很小df/()2Page17时,格基归约算法有很高的成功概率.利用这种方法,利用公钥h攻击,如果攻击者能选择合适的实数α,将矩阵犕中的犐替换为α犐使得目标向量(αf-,g-)相对更容易找到,这样就可以提高攻击的效率.文献[137]中给出了参数选择的方法.或者在格L中另找一个向量(狊,狋)满足h狋=狊(modq),使它尽量短,那么解密时,有c狋=pφ狊+m狋(modq).若pφ狊+m狋的系数没有越界,即pφ狊+m狋(modq)与pφ狊+m狋相等,计算(pφ狊+m狋)狋-1=m(modq),即可得到明文.但是还不能证明CS格中的困难问题的计算复杂性低于普通的格.而对其他参数进行限制,也可以降低攻击的效率.譬如,在加密过程中如果pφh+m(modq)等于pφh+m,即多项式pφh+m系数的绝对值至多为q/2.攻击者在截获密文后直接计算pφh+m(modp),可得到m1=m可以直接恢复出明文;如果p与m不互素,m是m1的整数倍,通过选择参数可以恢复出明文.所以这要求pφh+m(modq)不能等于pφh+m.在2000年Jaulmes和Joux发表论文提出一种选择密文攻击[138].选择密文e=ch+c,其中c是整数,h是公钥.攻击者将密文发给Bob,经解密有a≡fch+cf(modq)=cg+cf(modq),其中多项式f和g的系数等于0,1或-1,因而多项式cg+cf的系数为0,±c,±2c.选择适当的c值满足c<q/2<2c.假设多项式cg+cf的所有项中只有xi项的系数为2c,则cg+cf(modq)=f+cg-qxi.将结果-qxiFp(modp)返给攻击者.因为(p,q)=1,于是得到xiFp的逆元xn-if.所以能得到一组与(f,g)等价的密钥(xn-if,xn-ig).当多项式有多个系数为±2c,此事只要改变密文的形式,经过一系列的计算最终得到等价密钥(xn-if,xn-ig).同时在文中作者列举出了在一些参数下的攻击成功的概率.和整数ω有出了恢复密钥攻击[139].具体算法描述如下:在2002年Han等人针对NTRU密码体制提(1)初始化密钥f=∑N-1①f0=1,fj=0,其中1jN-1;②cj=0,其中0jN-1;③ω=1.ω+1并且忽略⑤到⑧;(2)i=1,…,N-1有如下过程:如果ω<q/2,那么令ci-1=-fi-1,反之ci-1=0;如果ω>q/2,那么令ci=ω-q/2,反之ci=0;解密密文c;④在解密过程中如果a≠fc,令fi=1,ω=⑤令ci=-ci;⑥解密密文c;⑦在解密过程中如果a≠fc,令fi=-1,ω=ω+1并且忽略⑧;⑧令fi=0;(3)令fi=fN-1-i,其中i=0,1,…,N-1;(4)返回f=∑N-1该算法得到密钥f的错误率最多是2N/3q-1,但是该算法在加密时需要使用O(N2)次,过程变的十分复杂.在2003年Howgrave-Graham和Proos等人[140]在文中提出两种选择明文攻击NTRU密码体制.这两种攻击一开始都要求寻找能破译密文的或可以构成解密失败的对(m,φ).第1种攻击要求固定多项式φ和选择不同的明文m.现在逐个将明文m的非零系数变为0.如果使得变化后的明文m-能解密成功,保持这个系数不变,反之令该系数为0.将这一过程继续直到明文m能够导致解密失败.此时多项式s=pφg+mf的系数至少有一个超出了[-q/2,q/2)的范围,而它的系数为s-1=p∑N-1gj-i+∑N-1i=0φifj-i,其中φi,gi,fi表示多项式φ,g,f的第i项系数.譬如当p=3时,mi的值是0,±1,而fj-i的值按照如下的方式定义:若m-i=1且将m-i变为0解密成功,则fj-i=1;若m-i=-1且将m-i变为0解密成功,则fj-i=-1;若m-i=0且将m-i变为-1解密成功,则fj-i=1;若m-i=0且将m-i变为1解密成功,则fj-i=-1,反之fj-i=0.然后寻找新的解密失败的明文和φ来确定其他的系数.具体的分析细节可以参见文献[140].第2种攻击要求固定明文m和选择不同的多项式φ.与第1种方法相似,选择解密失败的对(m,φ),计算(φg)0=∑N-1φg的常数项系数.当φi=-gN-1≠0时,称φ和g有正碰撞;当φi=-gN-i≠0时,称φ和g有负碰Page18撞.于是φ和g的净值碰撞等于正碰撞减去负碰撞,即(φg)0等价于净值碰撞.因为大部分随机选取的φ与g有正的净值碰撞,通过分析φ中的1和-1能够恢复g的非零系数.在实践中当φi=1时有3种情况:高频率gN-i=1;随机频率gN-i=0;低频率gN-i=-1.同样实践中对φi=1时有3种情况.因此攻击者可以分析φi得到g的系数的值,进而得到密钥f.具体的分析细节可以参见文献[140].NTRU密码体制的扩展:在2005年Yao和Zeng提出关于NTRU密码体制的非填充的扩展方案,可以消除解密失败[141].与传统的NTRU密码体制不同,选择公钥犎=Fqr1(modq)和L=pFqr2(modq),其中r1=1+pφ和一个随机多项式r2.加密过程:选择随机多项式r3,计算密文c=m犎+Lr3(modq).解密过程:收到密文以后,计算a≡cf≡mr1+pr2r3(modq).通过选择p和q使得a的系数小于q,即恢复出明文m≡a(modq).参数的设置:同传统的NTRU密码体制一样,明文的系数在-p-1性,使得多项式r1和r2不可逆,且格的维数大于100.于是多项式mr1最多有pN+1项,多项式r2r3最多有N项.为保证解密的正确性使得多项式a的系数在-p-1pN<q/2,即q>4pN+2.随后作者在文中对前面提到的攻击传统的NTRU密码体制的方法进行分析,通过分析指出可以抵御这些攻击.比较而言,选择密文攻击是已知的效果比较好的攻击方法.为了保护密码的安全性,在2000年Hoffstein和Silverman针对选择密文攻击先后提出了3种填充方案[142].因为对于NTRU密码体制中没有有效的安全性证明,所以这3种填充方案对NTRU密码体制的弥补并不能从本质上得到解决,只是对漏洞进行弥补提高了安全性,以及需要很小的计算开销,具体的安全性说明可参见Hoffstein和Silverman的文献.虽然有普遍的填充方案,但是相比较RSA和ElGamal密码体制而言,NTRU密码体制的散列成本相对于加解密不能忽略不计[140].下面介绍这3个填充方案:设哈希函数H:{0,1}m→{0,1}n.设明文M是k1比特长的字符串.在加密过程中需要随机k2比特长的字符串R,其中k2在40到80之间且k1+k2m.令符号‖表示字符串的连接.填充方案1:在加密过程中,使用随机字符串R得到密文c=D(M‖R;H(M‖R)).填充方案2:令哈希函数F:{0,1}k1于是可以得到密文c=D((F(R)M)‖R;H(M‖R))[140].填充方案3:首先将明文M和随机字符串R分成相等大小的块,M=珨M‖M和R=珚R‖R.令哈希函数F和G是集合{0,1}k1+k2到集合{0,1}k1+k2的映射,计算m1=(M‖R)F(M‖R)和m2=(M‖R)G(m1),于是得到密文c=D(m1‖m2;H(M‖R)).关于NTRU密码体制的变种方案有很多.譬如,在2002年Banks和Shparlinski提出简称为G-NTRU的密码体制,希望借助大的密码空间达到较好的安全性[143];在2005年Coglianese和Goi提出简称为MaNTRU的密码体制,其加密效率更高且密钥长度增加[144];同年,Yu等人针对解密错误提出一种补偿算法;在2008年胡予璞教授对该方案进行了改进[145],具体的内容可以参看相关的参考文献:2009年Vats在矩阵环中证明了Shamir关于NTRU密码的一个结论①,指出如果在非交换系统设计中设计相应的NTRU变种密码,那么它在加密和解密计算过程中能抵御格的攻击;在2014年文献[146]针对NTRU公钥密码体制是容易受到多个传输攻击这个不足,通过研究指出线性化攻击技术能恢复出明文.5.3.4Regev公钥密码2004年,Regev在发表的文章中提出了一个简称为Regev密码体制,对于安全参数n,设N=28n和m=cmn2,其中cm是特定的常数.令γ(n)=ω(nlog槡n)或者当n趋于无穷时满足γ(n)/log槡n趋于无穷.一方面,选择一个较小的函数γ(n)产生强的安全保障.另一方面,这也使得解密更容易出错.可以选择函数ω(nlog槡n)是最小的γ(n)函数使得解密出错的概率可以忽略不计.具体的文中建议选择γ(n)=nlogn.设H={h∈[槡N,2槡N)|frc(h)<1/16m},其中frc(x)=|x-[x]|,x∈R,且对x,y∈R,0frc(x)1/2,frc(x)|x|和frc(x+y)frc(x)+frc(y).随机选取h∈H作为密钥.①VatsN.NNRU,anoncommutativeanalogueofNTRU.Page19令x∈N,y∈R+,分布函数Tx,y(r)=∑y(rx-k)(exp-πy(r-k)(-π布函数Tx,y扩展到非整数.令实数h>0和r∈[0,…,1),重新定义Th,β(r)=1Qβ(rhmod1).根据上面提到的分布函数,随机选取值x∈{0,1,…,h-1}和值y∈Qβ.如果x+yz=x+yh.反之,继续重复这一过程.于是,选取β∈γ2(n[γ2(n),84和y1,…,ym使得z1,…,zm∈Th.对i∈{1,…,m},设ai=|Nzi|和i0是整数且使得xi0是奇数(这样的i0概率存在的指数接近1).将(a1,…,am,i0)作为公钥.加密过程:随机选取集合{1,…,m}的一个子集S.逐比特加密明文,加密0比特时计算∑i∈S加密1比特时计算∑i∈S解密过程:令d=N解密为0反之为1,其中ω∈{0,…,N-1}.Regev密码体制的公钥长度为O(logN2),逐比特加密的密文长度为O(logN).逐比特加密方案使加密速度过慢而且密文扩展比较大,使得工程实现不方便.随后2005年Ajtai[147]和Regev[117]分别对该密码体制进行改进,使公钥长度和密文扩展为O(N),但是改进的算法安全性不再直接建立在格困难问题上.5.3.5Cai-Cusic公钥密码在1998年Cai和Cusick[148]提出了一种简称为Cai-Cusick密码体制.它建立在近似SVP格问题上的密码体制,从单位球Sn-1={x|x=1}随机选取向量狌和m+1个字母的随机置换σ作为密钥.由于允许指数小的舍入误差,不妨假设向量狌的坐标是有理数,其分母是限制在非常大的整数的范围内.设m=cn,不妨令c=1直于狌的超平面.公钥是参数b>0和集合{vσ(0),…,vσ(m)},其中i∈Z+,vi∈Hi满足vju=Nj∈Z+.选择数列Nj使得N0>b和Ni>∑i-11,…,m.加密过程:加密m+1位的明文P=(δ0,…,δm),其中δi=0或者1,那么将P加上一个扰动进行计算得到密文∑m取的且满足狉b解密过程:通过使用密钥狌计算下面的内积i=(0S=狌∑m下面使用贪心算法能高效地从S中恢复出δσ-1(i),并且使用秘密的σ得到δ(i).如果δσ-1(m)=1,那么SNm-bN1+…+Nm-1+bS-δσ-1(m)Nm代替原来的S,重复这一过程直到得到δσ-1(i).使用秘密的置换,得到明文δ0,…,δm.在Cai-Cusick密码体制中的m+1=O(N)位明文是加密的密文n维向量,而不是仅仅一个比特的明文.在2011年3月,《IEEETransactionsonInfor-mationTheory》刊登了中国国家数学与交叉科学中心潘彦斌和邓映蒲关于Cai-Cusick格密码体制的论文,其审稿意见认为该密码体制已被完全攻破.潘彦斌和邓映蒲给出了它的一个唯密文攻击,时间复杂性是多项式的,从而彻底攻破了该存在有十多年的密码体制.6展望目前,虽然出现了一些量子算法,但是量子计算的理论研究还很不充分.现有的量子算法应用于解决经典可计算问题,而对于不可计算问题在量子环境下却没有进行充分讨论,如停机问题.Kieu考虑了量子可计算性的概念,并且借助量子连续变量和量子绝热演化,提出了一个解决Hilbert第10问题(停机问题的一个等价问题)的量子算法.Calude和Pavlov在数学意义上构造了一个解决有无穷多堆硬币情况下的零售商问题(停机问题的一个等价问题)的量子设备.如果算法在物理上能够实现,则量子计算为解决经典的不可计算问题提供了新的方Page20法[149-150].这将对计算科学和密码学产生巨大的影响.Bernstein和Vazirani指出Deustch算法感兴趣的是可计算性问题而不是计算复杂性.但是,Deustch认为,他所构造的通用量子图灵机模型并不能计算非递归函数,即他构造的模型在计算能力上不与Church-Turing论题矛盾[151].而以后提出的QTM直接或间接地建立在Deustch提出的量子图灵机模型的基础上.这说明,从现有的QTM的角度不可能突破Church-Turing论题.考虑新的QTM,可能对这个问题有帮助.Etesi等人从另外的角度告诉我们,对量子可计算理论的研究,似乎应该从数学,物理学甚至更多不同学科的角度去研究[152].目前广泛使用的公钥密码RSA、ELGamal、ECC等分别依赖于大整数质因子分解,离散对数问题,椭圆曲线上的离散对数问题.然而在量子计算机上求解这些问题存在多项式时间量子算法.量子计算机的发展,将对这些公钥密码体制构成严重的威胁.量子计算复杂性理论有助于我们构造一些抗量子密码,进而确保量子计算环境下的密码安全.尽管量子计算复杂性理论在理论方面取得了一定的研究成果,但是,人们对量子计算的复杂性以及量子计算机实现的研究还处于初级阶段,还有许多问题有待更深入的研究.关于量子计算求解NPC问题有一个有趣的观点,量子计算可以被看作格局叠加态上的许多线性算子.若量子计算机采用非线性时间演化,则能够在多项式时间求解NPC问题.文献[153]采用非线性量子逻辑门,给出了求解NPC问题的一个量子算法.文中证明,若量子计算机能够用非线性算子设计格局叠加态上的算子,则能够在多项式时间求解NPC问题.这也是一个十分重要的问题,如果这个问题能够得到正面的解决将对密码学产生致命的影响.现在被认为是抗量子计算的密码都将受到挑战.另外,在图理论和组合理论中某些著名的NP问题存在量子算法[154].这些量子算法至少相对于经典算法是加速的.量子计算机是否能在多项式时间内求解所有的NP类问题呢?在量子算法方面,自Shor因子分解和Gover搜索算法提出后,虽然各国众多的研究者在该领域进行了大量的研究.但目前,还没有发现其他解决经典问题的新量子算法.在量子问题复杂性关系,及其与古典问题复杂性关系方面,还有许多不确定包含关系.如NPC与QP、BQP的关系?三个复杂类NQP、EQP和BQP中有两个是相同的吗?等等.由于量子算法的出现,使得在经典计算下的P类问题在量子环境下仍是容易求解的,即PQP.一些在经典计算下是困难的问题,譬如大整数分解和离散对数问题等,在量子计算下是容易求解的.而另外一些NP类问题即使在量子计算下仍然是困难的.在第4节我们介绍了NP问题在量子环境下的模拟定义分为两类,NQP和QMA.但它们并不是最困难的问题分类,从关系图4中看到在它们之上还有PP,QMA(2)等问题分类.如果我们把量子模拟的NQP和QMA问题作为困难问题对待,就像NP类问题在经典计算中的作用一样,那么我们可以看到NEXP类问题即使在量子环境下也是困难的.Plandowski在1999年证明了带有常数的字方程式可满足性问题是NEXPTIME困难的,而NEXP也被称作NEXPTIME的[155].这样的问题还有其他的定义.这对设计抗量子计算的密码而言是一个好消息.从而设计者可以在经典环境下选择更困难的问题设计抗量子计算的密码.关系图4有利于对困难问题的理解和密码的设计.这是基于对问题复杂性做出的分析.另一方面,从算法复杂性的角度考虑.根据我们提出的数据复杂性定义,如果某个计算任务需要处理的数据量规模等价于计算布尔函数的数据量O(22n),那么该计算任务是不能完成的,即使是在量子计算环境下.这也为设计抗量子计算的密码提供了一种新的思路[111].当今互联网信息化时代,各个国家都十分重视密码学的理论和技术研究.目前流行的公钥体制主要包括基于大整数分解问题的RSA和基于椭圆曲线上离散对数问题的公钥体制,即ECC.这些体制有一个共同的弱点,即不能抵抗量子攻击.因此,一旦实用的量子计算机出现,这些体制将可能被攻破,从而被淘汰.而且随着计算机技术的飞速发展,这些体制也逐渐遭受一些新的威胁.因此,寻找新的公钥体制,特别是能抵抗量子攻击的公钥体制,便成为一件重要而迫切的工作.量子计算复杂性理论的发展为设计实际应用的公钥密码奠定基础.此外,设计能够走向实际应用的抗量子计算的公钥密码也是密码学的一个关键技术.而格密码被认为是后量子时代最主要的公钥体制代表之一,它以能抵抗量子攻击、平均安全性可以建立在格问题最坏情况复杂性及快速的加解密速度等优点受到了广泛的关注.现有的研究表明,还没有出现有效的量子算法Page21解决格上的困难问题.目前最好的结果都需要指数级的资源消耗,并且能够走向实际应用的公钥密码不多.这都需要进一步的研究.
