Page1一种关联网络和主机行为的延迟僵尸检测方法何毓锟李强嵇跃德郭东(吉林大学计算机科学与技术学院长春130012)(符号计算与知识工程教育部重点实验室(吉林大学)长春130012)摘要僵尸网络对现有计算机网络安全构成了巨大的威胁.新型僵尸经常采用隐蔽技术躲避安全系统的检测.采用延迟响应手段的僵尸在网络活动和主机行为之间插入随机时间的延迟,迷惑现有使用关联的检测方法.针对延迟僵尸的网络活动和主机行为,提出了一个新的关联检测方法.针对延迟僵尸的网络活动和主机行为可能分散在不同时间窗口的问题,使用滑动时间窗口迭代算法,提高了检测准确率.针对单纯主机检测方法需要全局部署问题,使用推荐算法关联网络和主机行为,提高了检测的健壮性和准确率.分析了滑动时间窗口大小和主机检测工具部署率对检测准确率的影响.实验结果表明,方法能有效检测延迟僵尸,当网络中主机检测工具的部署率达到80%时,包括未部署检测工具的主机在内,准确率约为88%.关键词僵尸检测;延迟僵尸;滑动时间窗口;关联引擎;僵尸网络1引言攻击者为了达到恶意目的,利用各种手段在大量计算机中注入特定的恶意代码,通过命令与控制信道(CommandandControl,C&C)远程控制这些计算机,这些计算机组成的可通信可控制的网络称为僵尸网络(botnet).控制这些计算机的组织或个人称为僵尸控制者(botmaster).秘密运行在受控主机上,可以接受预定义的命令和执行预定义的功能的恶意代码称为僵尸(Bot).僵尸网络常被用于分布式拒绝服务攻击(DDoS)、发送垃圾邮件(Spam)、网络钓鱼(Phishing)、窃取机密信息(Informationtheft)、传播其它恶意软件等.在僵尸网络发展过程中,有一类通过在网络活动和主机行为之间插入随机时间的僵尸,可称为延迟响应僵尸.CERT的报告①曾分析了一种基于Web的僵尸,该僵尸获取命令后等待一段时间再进行相应操作.SECUREWORKS的报告中也发现了Vecebot有延迟响应时间的参数DelayTime.botmaster通过C&C通信信道对Bot发布命令,Bot接收到命令后并不是立即产生恶意行为,可能有一定的响应延迟.在不同的受感染主机上,响应延迟的时间也可能不同,延迟响应僵尸的网络活动和主机行为可能并不在同一个时间段内,这样单纯按照预定的时间窗口对网络活动和主机行为进行关联的方法就可能无效.图1是僵尸程序网络活动和主机行为的一个时间顺序图,横轴是时间窗口的变化,灰色的区域表示僵尸正在进行网络活动,黑色区域表示僵尸正在进行主机行为.b1和b2是实时响应僵尸,他们的网络活动和主机行为都在同一个时间窗口内,b3和b4是延迟响应僵尸,他们的网络活动和主机行为可能分散在不同的时间窗口中.近年来,研究者对僵尸网络的检测和防御做了大量的工作,从检测位置上看主要分为两大类:(1)主机检测,主要利用僵尸程序在主机上运行时,网络通信、文件资源使用、CPU占用、内存占用、注册表信息修改、系统API调用等多个方面的信息与正常程序不同的特性,来检测可能已感染僵尸程序的主机.如Park等人[1]提出的BotTee方法,Stinson等人[2]提出的BotSwat方法,Liu等人[3]提出的BotTracer方法;(2)网络检测,抓取网络中主机间通信的流量信息,过滤后进行特征提取,然后使用一些算法区分正常通信的主机和已感染僵尸程序的主机.如Coskun等人[4]提出的利用“敌人的朋友”的方法,Nagaraja[5]等人提出了结构图分析法BotGrep,Collins和Reiter提出的分析流量协议图的异常变化的方法[6].然而单纯主机层面的检测或网络层面的检测,在检测的准确性、误报率、漏报率、性能、用户隐私、健壮性、是否需要全局部署等问题上存在一定的不足.Zeng等人[7]提出了首个主机和网络结合的僵尸网络检测方法,使用网络触发的方式,按照预定的时间窗口,关联引擎结合主机检测的结果和网络流量聚类分析后的结果,得到最终的检测结果.Zeng等人的方法能有效地检测使用IRC、HTTP、P2P通信协议的僵尸网络,有较高的准确性,但在主机检测部分仍需要全局部署,即网络中的主机都需要部署主机检测工具才能有效,检测方法的健壮性仍然不足.同时在面对延迟通信僵尸时,由于僵尸程序的主机行为和网络活动可能并不是同时进行的,可能分布在不同的时间窗口,因此单纯按照时间窗口获取主机行为和网络活动的方法可能无效.Shin等人[8]的EFFORT方法,也使用了关联的方法,对主机进程的多个模块检测结果关联,产生最终结果以判断主机是否感染僵尸程序.针对僵尸检测过程中,检测工具健壮性不足、需要全局部署、不能有效检测通信延迟僵尸等问题,在保证准确率和性能的情况下,我们提出了在滑动的时间窗口内,对网络流量和主机检测结果使用关联算法分析,以检测网络中感染延迟响应僵尸的主机.包括3个部分:(1)按照预定的时间窗口,获取主机①IanelliN,HackworthA.BotnetsasavehicleforonlinePage3流量相似度和主机检测可疑度;(2)在滑动时间窗口内,对网络活动和主机行为进行迭代计算;(3)对网络和主机的分析结果使用关联算法,最终得到网络中部署或未部署僵尸主机检测工具的所有主机的检测结果.本文主要贡献:(1)针对延迟响应僵尸,使用了滑动时间窗口对主机和网络数据进行迭代分析,在一定程度上提高了僵尸检测准确率,降低了漏报率;(2)在滑动时间窗口内,使用推荐算法关联获取的网络流量相似度和主机可疑度,提高了僵尸检测方法的健壮性.同时检测工具不需要全局部署,整个网络中的主机不需要全部部署检测工具,只要部署数量达到一定的规模,可以通过现有主机检测结果和网络流量分析结果,对未部署主机产生可靠的检测结果;(3)实现了一个基于滑动时间窗口关联网络活动和主机行为的僵尸检测模型.在滑动时间窗口大小和主机检测工具部署率两个指标上,对检测方法的有效性,进行实验分析.滑动时间窗口在一定程度上解决了延迟响应僵尸的网络活动和主机行为分布在不同时间窗口的问题,关联主机和网络行为的推荐方法能提高检测的健壮性和准确率.本文第2节介绍相关工作;第3节给出问题描述、假设和方法;第4节实现网络流量分析并获取主机检测可疑度,分析滑动时间窗口内网络活动和主机行为,并使用推荐算法进行关联;第5节建立实验环境并分析实验结果;第6节与同类工作进行对比;第7节给出总结和讨论.2相关工作主机检测主要包括主机通信域名信誉值分析、API调用序列分析、系统资源使用分析、主机网络通信行为分析.(1)Park等人[1]提出了BotTee方法,通过提取出主机上可疑的系统调用序列,与僵尸命令模板进行匹配,检测主机是否感染僵尸程序;(2)Rieck等人[9]提出的方法,使用机器学习自动分析恶意软件的行为;(3)Karbalaie等人[10]提出的方法,使用数据挖掘进行语义分析检测主机上的恶意软件;(4)Stinson等人[2]的方法BotSwat,通过判断主机执行的命令是否使用来自网络上的数据,将僵尸行为与正常程序区分开来;(5)Liu等人[3]的方法BotTracer根据僵尸攻击的3个不可缺少的阶段判断是否感染僵尸;(6)Kolbitsch等人[11]将拦截到的系统调用序列与恶意行为图进行匹配,根据匹配结果判断是否是恶意行为;(7)Al-Hammadi等人[12]使用人工免疫学[13]的知识,利用树突状细胞算法(DendriticCellAlgorithm,DCA)[14]进行主机端的僵尸检测;(8)Xu等人[15]的方法PeerPress将主机行为与网络活动结合进行主动检测,在主机端动态地对恶意软件分析,自动提取出P2P恶意软件的MalwareControlBirthmarks(MCB),然后使用网络中的扫描器检测网络中的主机是否被P2P恶意软件感染.网络检测方法主要包括流量图分析、流量特征聚类分析或机器学习处理分析、流量网络行为分析.如Tegeler等人[16]提出的BotFinder方法,使用了机器学习的方法,将抓取的网络流量通过学习的方式分为正常和恶意两种模型,最后通过生成的模型检测主机产生的流量是否为恶意;Bilge等人[17]提出的DISCLOSURE方法,使用大规模NetFlow数据,提取流量特征并分析后,检测僵尸网络中的C&C服务器;Francois等人[18]提出的Bottrack方法,通过NetFlow数据分析和PageRank算法分析僵尸通信行为模式.使用关联的方法主要包括主机检测中不同模块之间的关联、网络分析中不同模块之间的关联、主机和网络结果关联.Shin等人[8]提出的EFFORT方法,关联主机中多个模块的检测信息,得到最终的主机检测结果.Gu等人[19]提出的BotMiner方法,关联不同层次流量聚类分析的结果.Gu等人[20]提出的BotSniffer方法,关联网络活动分析结果和通信内容分析结果,产生最终的检测报告.Zeng等人[7]提出的关联方法,关联主机检测结果和网络流量聚类信息,最终产生部署检测工具的主机的检测结果.在使用基于主机的检测方法时,当主机上的检测工具损坏或被恶意僵尸程序破坏,检测方法将完全失效并且网络中的所有主机都必须部署检测工具,没有部署的主机将无法检测.使用网络流量的检测方法中,由于未结合主机检测信息,单纯依靠网络通信流量判断是否为僵尸主机,存在较大误差.使用主机和网络结合的方法能有效弥补单纯方法的不足,提高检测的效率.对于延迟类僵尸的检测,按照时间窗口获取数据的检测方法,准确率将会受到延迟时间长短和获取数据的时间窗口大小的影响,如BotSniffer方法[20]在获取僵尸程序的命令与反馈信息时,如果僵尸命令延迟响应时间较长或获取信息的时间窗口较短,一些僵尸活动信息将无法获取,导致准确率降低.Page43方法设计3.1问题描述及假设主机上的僵尸程序在接收到命令后会表现出恶意行为,如文件资源分配、注册表产生、主机上的网络通信、CPU占用、内存占用等.这些都可以在主机上获取到,而且这些特征都是僵尸程序后台自动产生的,而非人为操作,因此可以在主机上监控这些信息,进而分析得到主机感染僵尸程序的可疑度.僵尸控制者和受控的僵尸主机通信的过程中,在通信流量上有很大的相似性.在集中式的结构中僵尸主机几乎同时接收来自集中式服务器的命令,并且通信的流量在数据包的多少、数据包的大小、通信的时间、使用的端口数等特征上有极大的相似性.在分布式结构中,僵尸控制者发布的命令也需要在主机间传播,他们之间的流量也表现出极大的相似性.对于延迟僵尸的网络活动和主机行为,考虑僵尸活动在实际应用中的需要,假设网络活动和主机行为延迟响应的时间间隔会在一个固定大小的时间段内.这样利用主机上已有检测结果和网络分析后得到的主机间流量相似度,通过关联算法可在一定程度上检测网络中未部署检测工具或检测工具失效的主机是否感染延迟僵尸程序.根据以上假设,针对延迟响应僵尸,采用滑动时间窗口策略,设计结合不同主机流量相似度和主机感染僵尸程序可疑度的关联方法.产生网络中所有主机的检测报告.方法主要针对一个大型局域网中延迟响应僵尸,当主机检测工具部署率达到一定程度时,能有效检测使用IRC、HTTP、P2P作为C&C通信信道的延迟响应僵尸,对于未知或现有僵尸程序的变种的检测效果主要取决于主机检测工具的准确率.3.2方法结构图2是方法的结构图.主要分为4个部分,包括主机可疑度获取、网络流量分析、滑动时间窗口信息的迭代和关联引擎.获取主机感染僵尸程序的可疑度时,利用已有主机检测工具获取.部署在网络中的主机检测工具可以是同一结构、同一原理、同一级别的僵尸检测软件,也可以是不同的.当主机检测工具发现僵尸活动后,立即分析活动的特征,产生感染僵尸的可疑度,并将产生的可疑度发送到滑动时间窗口主机信息处理器.网络流量分析时,按照预定的时间窗口抓取整个网络中主机通信流量,对获取的流量进行白名单过滤、特征提取、聚类分析和相似度计算.在每个时间窗口结束时,将最终分析的主机流量相似度结果发送到滑动时间窗口网络信息处理器.滑动时间窗口信息处理器,接收主机检测可疑度和网络流量相似度分析结果,并按照预定大小时间窗口对接收的信息存储,分析在一个滑动时间窗口网络内,主机可疑度迭代结果和主机流量相似度迭代结果.最后将主机可疑度和主机流量相似度在滑动时间窗口内的迭代结果发送到关联引擎.关联引擎,对接收到的网络活动和主机行为分析结果,使用推荐算法进行关联分析,最终确定网络中已经感染延迟僵尸的主机.4方法实现信息获取包括网络中所有主机的流量信息的获基于在滑动时间窗口内关联网络活动和主机行为结构,我们实现了一个延迟响应僵尸检测系统模型.主要由3部分构成,(1)信息的获取,包括网络流量信息和主机检测结果;(2)滑动时间窗口内信息的迭代,包括网络流量相似度的迭代和主机可疑度的迭代;(3)关联引擎,使用推荐算法关联主机可疑度和网络流量相似度.4.1信息获取取和主机可疑度的获取.4.1.1网络流量信息为了获取网络中主机通信流量的相似度,首先需要按预定的时间窗口抓取整个网络的通信流量,然后进行过滤、特征提取、聚类分析和流量特征的相似度计算.流量过滤主要为了减小数据处理复杂度.对于已获取的流量数据,通过IP地址白名单进行过滤,我们认为用户主机和白名单中主机的通信是安全Page5的,如www.google.com、www.microsoft.com等对应的IP所产生的流量都被过滤掉,这样在网络流量分析阶段可以很大程度上减少数据量,进而减小计算开销.而对于局域网络内部主机间的流量不进行过滤,因为在使用P2P作为C&C通信信道的僵尸网络中,内部网络主机间也会产生通信,而且他们的通信流量是相似的,可用于关联分析以检测是否感染僵尸程序.对获取的整个网络的主机通信流量过滤后,从过滤后的数据中提取主机通信的基本信息.一个数据流包含的基本信息有:dpkts是发送数据包的数量、doctets是发送的字节数、first是连接建立的时间戳、last是连接结束的时间戳、srcaddr是产生流的源IP地址、dstaddr是产生流的目的IP地址、srcport是流的源发送端口、dstport是流的目的端口、prot是产生流所使用的协议.根据通信主机的IP地址提取流的特征,考虑到储存在主机上的僵尸程序通常产生较少的流量,如果单纯收集某一主机和其它主机通信产生流量,僵尸程序通过C&C控制信道和僵尸控制者通信产生的流量很可能被其它流量掩盖,导致僵尸产生的流量特征不明显,不利于获取不同主机在同一时间窗口内产生的流量相似度.因此,我们不考虑流的方向,即不区分流量的源主机IP和目标主机IP,统计一个预定时间窗口内两主机的所有通信流量,产生一个由14个流量统计特征组成的向量.如表1所示,其中1~8是通过直接统计时间窗口内流量信息获取,9~14是通过对流的持续时间、数据包的多少和字节的数量再次进行统计计算得到的特征.特征序号1两主机通信产生流的总数2两主机通信发送数据包的总数3两主机通信发送消息的字节数4两主机通信总的持续时间5两主机通信使用的端口总数6两主机通信时使用TCP协议的流的数量7两主机通信时使用UDP协议的流的数量8两主机通信时使用SMTP协议的流的数量9两主机通信产生的所有流中,数据包数量的方差10两主机通信产生的所有流中,字节数的方差11两主机通信产生的所有流中,持续时间的方差12两主机通信产生的所有流中,平均每流包含数据包13两主机通信产生的所有流中,平均每流包含的字节数14两主机通信产生的所有流中,平均每流的持续时间提取流量特征后,通过聚类处理将特征相似的流量划分到同一个聚类中.由于在僵尸程序和僵尸控制者通信的过程中,它们之间的通信流量都是程序自动产生的,没有人为因素的影响,因此同一种僵尸程序在不同主机上产生的流量具有极大的相似性.不同主机上的正常程序也可能访问同一主机,但受人为操作的影响,在流量特征上会产生很大的差别,如流量包的多少、数据量的多少、持续时间等.为了获取流量相似主机的信息,我们对时间窗口内获取的流量,根据提取的流的统计特征,对数据矩阵进行标准化处理后,使用层次聚类的方法进行聚类,在聚类时两点的距离采用欧氏距离,聚类时集合之间的距离使用最短距离法,最终将特征相似的流划分到同一聚类中.假设有N个数据样本,每次合并都需要计算两个点之间的距离,时间复杂度是O(N2),聚类完成时最终的复杂度是O(N3).如图3是16台主机上提取的流量特征,进行层次聚类产生的谱系图.其中编号为1~4的主机是感染同一种僵尸程序而产生的流量,编号为9、10、13是不同主机上同一种应用产生的流量,11、14、15也是同一种应用产生的流量.纵轴的高度表示当前聚类中,子叶子节点之间的距离,距离越小他们之间的相似度越高,可以看出同一种僵尸程序产生流量,在谱系图中具有很低的高度,即有很高的相似度.对特征流量聚类处理后,需要计算在同一时间窗口、同一聚类中主机间通信产生流的相似度.假设j和k是在同一聚类中两个不同流量特征,他们分别包含了产生流的IP地址和14个流量的统计特征,则j和k的相似度可以通过计算他们的距离来确定.用S表示流量特征的相似度,则Sjk=Page6其中,xij是j的第i个特征,xik是k的第i个特征,14∑14j=1x-间,值越大表示相似度越高.用HS表示主机在流量指标上的相似度,假设A和B分别产生流量特征j和k,则A和B的相似度HSAB=Sjk.4.1.2主机可疑度基于主机的检测主要是分析主机的异常行为,已有大量的检测方法能解决主机上检测僵尸程序问题[3,6,8,12,21-24].我们更关注网络流量分析以及如何将主机检测结果和网络分析结果更好的关联,实验中使用传统的反病毒工具获取主机上的检测结果.4.2滑动时间窗口对于延迟响应僵尸,它们接收来自Botmaster命令后可能并不是立即执行,网络活动和主机行为可能并不在一个固定的时间窗口内.如图4,它们可能分布在相邻的时间窗口,也可能间隔几个时间窗口.由于僵尸活动在实际应用中的需要,延迟响应的时间不能太长,我们假设网络活动和主机行为产生的时间间隔不会超过m个时间窗口.当一个时间窗口结束时,分析相邻m个时间窗口的信息,作为当前滑动时间窗口的结果.如图4,b1和b2是实时响应僵尸,b3和b4是延迟僵尸,获取信息的时间窗口的大小为10min,当延迟响应的时间最大为50min时,设定滑动时间窗口大小为60min,就可以有效地关联延迟僵尸的网络活动和主机行为.考虑不同的信息来源,网络流量相似度和主机可疑度有各自的特点,滑动时间窗口内信息迭代分为两种情况:(1)相似度的迭代,用TS表示滑动时间窗口相似度的迭代结果,ts表示一个时间窗口结束时相似度数据集,则当第n个时间窗口结束时,当前滑动时间窗口内相似度总的数据集TSn=∑n度的迭代,用TH表示滑动时间窗口可疑度的迭代结果,th表示一个时间窗口结束时可疑度检测结果,则当第n个时间窗口结束时,当前滑动时间窗口内可疑度THn=max(thn,thn-1,…,thn-m).当一个滑动时间窗口结束时,网络中主机在流量指标上的相似度和主机检测可疑度将被发送到关联引擎.滑动时间窗口的选取与获取信息的时间窗口大小和僵尸命令可能的延迟时间密切相关.假设记录信息的时间窗口的大小为t,滑动时间窗口大小为T,僵尸命令延迟的随机时间最大值为R.为了便于说明,我们取T和R与t成倍数关系,时间单位为分钟.例如当R>T时,取t=10,T=40,R=60,此时t0时刻主机接收僵尸命令,然后在t0+50时刻才执行响应的操作进行恶意行为,这样主机恶意行为和流量信息就可能不在同一个滑动时间窗口内;当T-t<RT,取t=10,T=60,R=60,此时第1个滑动时间窗口在t0至t0+60之间,第2个滑动时间窗口在t0+10至t0+70之间,僵尸命令在t0+3时刻接收,在t0+61时刻执行,显然主机的恶意行为和流量信息也不在同一个时间窗口内;当RT-t,取t=10,T=70,R=60,此时主机的恶意行为和流量信息总能在同一个滑动时间窗口内.我们分析更通用的情况,滑动时间窗口大小和僵尸命令延迟时间长短在变化时,主机的恶意行为和流量信息会落在同一个滑动时间窗口中的概率P.当R>T时,僵尸命令的一次执行过程中可能包含(R-T)/t+1个滑动时间窗口,在最大延迟时间内可能有C2不同的执行过程(C是组合数),在一个滑动时间窗口内可能有C2个滑动时间窗口的概率P=[((R-t)/t+1)×(C2T+T)]/(C2续的滑动时间窗口内,僵尸命令随机时间可能有t×C2R+C2能有2×(C2P=t×C22×(C2僵尸命令的执行过程总能在同一个滑动时间窗口内,因此P=1.4.3关联引擎这一部分主要对来自滑动时间窗口信息迭代的结果进行关联,使用推荐算法结合主机流量的相似度和主机检测结果,对网络中部署或未部署主机检测工具的所有主机,产生是否感染延迟僵尸的检测报告.Page74.3.1推荐算法推荐算法常用于社交网络中为用户推荐好友、在线商城中为用户推荐新的物品,也被广告服务商用于精准投放广告.如图5,是一个典型的在线商城的物品推荐模型.其中A、B、C、D、E、F是商城中的6件物品,根据用户购买A、B、C3件物品的记录和评价,可以得出用户对这3件物品的喜好程度,记作LA、LB、LC.对商城中的所有物品进行特征分析,可以得出物品间的相似度S,图中物品A和E之间的相似度为SAE.此时,通过用户对已知物品的喜好程度和不同物品之间的相似程度,通过关联分析就可以推算出用户对未知物品的喜好程度.利用图中信息就可以简单推算出用户对物品E的喜好程度:LE=(LA×SAE+LB×SBE+LC×SCE)/4.3.2网络活动和主机行为的关联推荐算法也可用于关联网络活动和主机行为,如果把检测工具对主机产生的可疑度类比为用户对商品的喜好,而主机流量之间的相似度类比为物品间的相似度,这样很容易借鉴物品推荐所使用的算法.通过关联分析主机可疑度和网络流量相似度,对未部署主机检测工具或者检测工具失效而未产生可疑度的主机,产生较可靠的检测结果.根据主机检测结果和流量相似度分析结果,关联引擎可以计算网络中未报告检测结果的主机的可疑度.假设有6台主机A、B、C、D、E、F,其中A、B、C3台主机反馈的检测结果分别为HA、HB、HC,其它主机未反馈检测结果,主机流量的相似度信息包括SAE、SBE、SCE、SAD、SCF.对于未报告检测结果的主机E,由于和主机A、B、C在同一个时间段内有相似的通信流量,而A、B和C上的主机检测工具均报告检测到可疑的僵尸程序,最终E主机感染僵尸程序的检测结果为FE=(FA×SAE+FB×SBE+FC×SCE)/从而可以在一定程度上对未部署检测工具或者检测工具失效的主机产生一个较可靠的检测.如果主机E已经报告检测结果HE,发现E主机可能已经感染僵尸程序,但是可疑度的值并不是很高,我们不能准确判断主机是否真的是感染僵尸程序,还是一些正常软件的一些操作导致主机上的检测工具产生不准确的报告.通过关联引擎结合网络上其它主机的流量信息,我们可以更准确地计算出E主机的最终检测结果为FE=(HE+(HA×SAE+HB×SBE+HC×SCE)/此时如果网络中有大量主机和E主机有相似的流量,而且他们都发出了检测报告,通过关联引擎则进一步提高了E主机的可疑度,使检测结果更准确,如果和主机E流量相似的主机几乎没有,这在很大程度上可能是主机上检测程序的误报.对于更普通的情况,如算法1所示,X表示网络中的任意主机,N(X)表示和主机X在同一个聚类中,并且在相同时间段内和满足主机X流量相似度的大小条件的主机集合,HX表示主机X产生的检测结果,SKX表示主机K和主机X的相似度计算结果,FX是通过关联引擎,使用关联算法得到的最后检测结果.FX=∑K∈N(X)HK×SKX∑K∈N(X)SKX,HX=0其中主机检测结果HX范围在0~1之间,值越大表示主机感染僵尸程序的可疑度越大,主机流量相似度SKX范围也在0~1之间,值越大表示两个主机的流量越相似,分析以上关联算法,很容易得到最终的检测结果FX的范围也在0~1之间,值越大表示主机感染僵尸程序的概率越大.对于特殊情况:当网络中只有一台主机被检测出感染僵尸程序,并且与其它主机没有相似流量,此时主机上的检测结果和通过关联分析得到的最终结果是一样的,即FX=HX.烄烅烆算法1.关联网络和主机信息的推荐算法.Page8输入:H:主机检测可疑度C:主机流量聚类信息S:在同一聚类中主机在流量指标上的相似度结果hosts:网络中所有主机的IP地址集合输出:R:网络中主机的最终检测结果1.FORXinhosts2.u=v=0//用于计算最终检测结果的临时变量3.FORKinC[X]4.u+=H[K]×S[X][K]5.v+=S[X][K]6.ENDFOR7.IFH[X]=0THENR[X]=u/v8.ELSER[X]=(H[X]+u/v)/29.ENDFOR10.RETURNR推荐算法结合主机检测可疑度和网络中主机流量相似度,产生所有主机的最终检测结果.假设滑动时间窗口最多包含k个聚类,一个聚类中最多包含n个相似度信息,网络中一共有m个主机,在给m个主机通过关联引擎计算最终检测结果时,最多需要关联n个在同一聚类中已报告检测结果的主机信息,则计算最终关联算法的复杂度为O(mn).5实验5.1实验环境和评价方法根据提出的方法,我们设计并实现了实验原型,分析了滑动时间窗口大小和检测软件部署率对检测结果的影响.主机检测部分我们使用多个现有检测工具得到一个平均值,其中包括微软提供的MicrosoftSecurityEssentials①、kaspersky②安全工具、bitdefender③检测软件,作为主机感染僵尸程序的可疑度.网络分析部分利用fprobe④和flow-tools⑤抓取整个网络中的流量,借助google提供的safe-browing⑥和alexa提供top1000000网址⑦对抓取的主机流量,根据IP地址进行过滤,使用hclust⑧工具包和Python语言编写程序,对流量数据进行处理分析,实现了滑动时间窗口数据迭代器和关联引擎.通过关联引擎得到最终的检测结果,当主机的最终检测结果超过阈值时,确定该主机已感染僵尸程序.实验中,我们建立一个可控的局域网环境.用户主机部署在装有WindowsXPProfessional系统的VMware虚拟机中,滑动时间窗口信息迭代器和关联引擎部署在装有WindowsXPProfessional系统、2.40GHzCPU、2GRAM、四核主机上,网络流量收集和分析器部署在装有Ubuntu10.10系统、2.40GHzCPU、2GRAM、四核主机上,同时用这台Linux内核主机作为整个局域网的网关.为了验证方法在检测僵尸主机上的有效性,我们在部分用户主机上安装僵尸程序,并把僵尸控制端安装在公网的一台主机上.由于P2P僵尸网络的不可控性,我们只使用HTTP和IRC作为C&C通信信道的僵尸样例,包括SdBot,AgoBot,RBot,Nugache.为了更好的模拟用户主机的真实环境,在用户主机上安装并运行mIRC、pcAnywhere、xunlei、QQ、uTorrent等软件,并使用他们正常地访问网络.在BotSniffer方法[20]中,Gu总结了延迟僵尸的一些特征,并根据已有关于延迟僵尸的描述[25],CERT和SECUREWORKS报告实现了4个基于HTTP的僵尸程序.由于没有可控的延迟响应僵尸,根据延迟响应僵尸的功能特征,我们修改了已有的Sdbot源码,使其在接收到控制端的命令后,并不会立即响应,会随机延迟一个可控的随机时间,我们将修改后的Sdbot称为fixedSdbot.在网络流量分析处,采用CERNET某骨干节点一天的网络流量数据,作为网络分析的背景数据.在10min的时间窗口内约含有735421条流量记录,经过过滤处理后含有64538台主机信息,将过滤后的特征信息混合到局域网抓取的特征流量中,这样更有利于验证聚类分析在区分僵尸流量上的有效性.5.2结果分析实验中使用了40个VMware虚拟主机作为用户主机,他们被配置在192.168.1.1~192.168.1.40/24同一个局域网环境中.保证在感染僵尸程序的主机上部署主机检测工具的部署率达到80%,主机上的常规软件正常进行网络活动,僵尸控制端和受控僵尸主机进行正常C&C通信,使用的僵尸命令包括download、dns、open、redirect等.在网络流量收集分析器上以10min为一个时间窗口,对流量进行过滤和特征提取处理,再混合背景流量进行聚类分析①②③④⑤⑥⑦⑧Page9和相似度计算.按照60min作为滑动时间窗口的大小,对各独立时间窗口信息迭代.最终通过关联引擎得到整个网络中主机的检测结果.如表2,是24h分别使用5种僵尸实例,多次试验后的平均检测结果.对于使用的5种实例,主机检测工具都能有效报告恶意活动.对于传统未采用延迟技术的僵尸,受不同僵尸在网络流量相似度的影响和部分主机检测工具失效(网络中检测工具的有效部署率)的影响,最终关联的结果不能保证准确率达到100%.对于fixedSdbot,由于在C&C过程中,僵尸程序接收命令和实际进行恶意活动有随机的时间延迟,当延迟时间比滑动时间窗口长时,不能有效检测所有僵尸活动,对于实验中采用的数据其准确率较普通僵尸程序低.僵尸类型FPFNTPTNDuration/hfixedSdbot089210024SdBot049810024AgoBot0010010024RBot0010010024Nugache049610024时间窗口大小对最终检测的准确率和方法的性能都有直接的影响,包括获取网络流量和主机可疑度的时间窗口大小和迭代多个连续时间窗口的滑动时间窗口的大小.当收集信息的时间窗口过小时,时间窗口内收集的信息量不够大,产生的相似度信息不够多,最终导致在关联计算时由于没有足够的相似度信息,严重影响检测的准确率;当收集信息的时间窗口过大时,收集的流量信息过多,通过滑动时间窗口迭代后,数据量会更大,在对流量聚类分析和相似度计算时需要消耗大量的计算和存储资源.滑动时间窗口大小,是延迟响应僵尸检测准确性的一个重要影响因素,当滑动时间窗口过小时,延迟响应僵尸的网络活动和主机行为的时间间隔,可能跨越整个滑动时间窗口,此时滑动时间窗口将不在起作用,仍然无法有效检测主机上的僵尸程序;当滑动时间窗口过大时,一方面流量信息过大,最终会给关联引擎产生性能上巨大的压力,另一方面每两个相邻时间窗口之间,都有大量重复的流量信息,每次都会有大量主机进行重复检测,造成计算资源的浪费.如图6是使用fixedSdbot,僵尸程序的随机延迟时间上限为70min,收集信息的时间窗口大小分为5min、10min、20min3个层次,滑动时间窗口大小分为20min、40min、60min、80min4个层次.分析收集信息时间窗口和滑动时间窗口对准确率的影响.当滑动时间窗口小于延迟时间时准确率较低,且获取信息时间窗口越大反而对导致准确率下降,这是因为获取信息的时间窗口越大,在连续的滑动时间窗口上就会跳过更长的时间段,进而使僵尸执行过程不在同一个活动时间窗口的可能性增大.在正常用户主机上固定的滑动时间窗口内,不断调整感染僵尸程序的主机的数量、正常主机的数量和安装主机检测工具的主机的数量,使用IRC和HTTP僵尸网络中的多种僵尸实例进行实验分析.如图7,是主机检测工具的部署率对整体检测结果的影响,部署率超过50%时,整个网络检测结果的准确率有明显提高;部署率超过80%时,未部署检测工具主机的检测准确率超过88%.6与同类工作的对比Zeng等人[7]首次提出的结合主机行为和网络活动的检测方法,主机行为是通过对注册表、文件系统、网络堆栈的行为进行监视,获取一个特征向量;Page10网络信息是在网络的边缘处抓取整个网络通信的NetFlow流量数据,对流量进行过滤,提取特征后进行聚类分析;最后通过关联算法将主机行为与网络活动结合,判断产生检测结果的主机是否感染僵尸.文献[7]的方法在一定程度上提高了主机检测的准确率,但仍不能解决检测工具健壮性低的问题,仍需要在网络中全局部署检测工具,同时在检测延迟响应僵尸时,关联的方法也几乎无效.健壮性低主要表现在,当网络中主机上的检测工具由于一些原因失效,不会向关联引擎反馈检测结果或者反馈误差较大的检测结果,此时整个检测系统无法对该主机产生可靠的检测结果;需要全局部署表现在,当网络中的主机没有安装主机检测工具时,检测系统就无法对该主机进行僵尸感染判断;对延迟响应僵尸检测,关联引擎失效,表现在当延迟响应僵尸的网络活动和主机行为分散在不同的时间窗口时,关联引擎没有结合多个时间窗口的信息,无法进行关联.对比文献[7]的方法,本文使用了滑动时间窗口对收集的信息迭代处理,当延迟僵尸的网络活动和主机行为分散在不同的时间窗口时,仍然可以通过关联引擎进行检测;本文在关联引擎处使用了推荐算法,当主机上的检测工具失效时,仍能对该主机产生可靠的检测报告,同时网络中的主机也不需要全部部署主机检测工具,当检测工具在网络中的部署率达到一定阈值后,整个检测系统对网络中所有主机会有较高的准确率.7总结和讨论僵尸网络的不断演化,网络中大量计算机仍遭受僵尸程序的危害.本文中,针对延迟响应僵尸,我们提出的在滑动时间窗口内,使用推荐算法关联网络活动和主机行为的方法,在局域网的主机检测工具部署率达到一定程度时,能有效的对整个网络的主机是否感染僵尸程序.从收集的流量中提取了14个特征,以区分正常程序通信的流量和僵尸程序C&C通信过程中产生的流量,计算出主机通信流量的相似度.通过滑动时间窗口信息迭代器对网络活动和主机行为进一步分析处理.最终通过推荐算法,结合主机检测结果和网络流量分析结果,得到网络中所有主机的检测报告,其中不仅包括部署检测工具的主机,也包括未部署检测工具的主机.对于提出的方法,我们进行实验室模拟实验,并在多个指标上进行了分析.同时本文中提到的方法也存在一些问题,使用滑动时间窗迭代网络活动和主机行为,来应对延迟响应僵尸,会大大增加需要处理的网络流量,需要消耗更多的计算和存储资源.由于实验环境的限制,本文中的方法只通过实验室小规模模拟实验验证,对于真实复杂网络环境的适用情况还有待验证.方法最终通过关联引擎得到的结果在很大程度上依赖于主机检测工具的结果,单纯网络分析不能直接给出网络主机的可疑度,对于未知僵尸网络的检测也主要取决于主机检测工具的有效性.为了减小主机检测结果对关联结果的影响,一个可能的方法是在网络中部署多种检测工具,提出更高效的主机检测方法,同时在网络边缘处,利用流量信息,通过机器学习或其它算法得出网络的检测结果.
