Page1进化树拓扑路网构建及多停靠点路径规划方法研究吴海涛1)张贵军2)洪榛2)俞立2)1)(浙江工业大学计算机学院杭州310023)2)(浙江工业大学信息学院杭州310023)摘要针对多停靠点线路优化问题,提出一种基于邻接矩阵网络拓扑树构建的路径寻优方法,借鉴系统生物学中进化树分类的思想,引入路网结点间邻接关系评价标准邻接值的概念,将路网按照其结点邻接关系归类划分为以路网结点间邻接值为表征的路网拓扑进化树,同时对线路路径寻优问题中目标结点进行动态回溯分类,在限定路网搜索区域同时采用分支定界搜索策略进行搜索优化,降低了搜索算法时间复杂度.最后依据国家基础地理信息系统网站提供的国界、省会城市及主要公路基础地理数据进行系统实现,证明该算法的有效性.关键词进化树;邻接值;动态回溯;分支定界1引言Page2径寻优算法,但是其采用的传统D算法进行线路搜索,对于小规模结点的计算结果非常准确,而对于大规模网络结点所需要的计算时耗是无法接受的.Ja-gadees等人[4]提出一种结点提升分层优化算法,能够保证算法在较短时间内获得最短路径,但其属于一种基于路网结点规模限制的算法,仅适合结点数固定的网络,对于现实结点个数的不确定性使得该算法无法普遍应用.Yanns等人[5]提出一种求解路径优化问题的混合启发性算法,有机结合了粒子群优化算法、多阶段领域搜索、随机自适应贪婪、扩展的领域搜索算法以及路径重新连接技术.刘菲等人[6]提出了一种基于加强基因突变解决网路路径优化问题,由于其初始种群仅有一个,无法避免遗传算法中普遍存在的早期收敛现象,也不能保证子代种群的多样性.景玲等人[7]提出了基于特定有序、选择、交叉、遗传算子路径诱导算法,而该算法对于初始种群的质量依赖性过高,如果初始化种群质量较差,则很容易陷入局部最优解.多停靠点路径优化问题即路网中给定n个停靠点,要求找到一条遍历所有停靠点且每个站点只被访问一次的路线,使得总路线距离最短.其数学描述表达如下:设所需停靠点集合V=(v1,v2,…,vn),求解一条经过V中每个停靠点一次的路线(vπ1,vπ2,…,vπn),使得费用函数值最小[8],即其中π1,π2,…,πn是(1,2,…,n)的一个规则置换.针对多停靠点路径优化问题,本文提出一种基于邻接矩阵网络拓扑树构建的路径寻优方法,借鉴系统生物学(systemsbiology)中进化树分类的思想,引入路网结点间邻接关系评价标准邻接值的概念[9],构建基于结点间邻接关系的路网拓扑进化树,在此基础之上,对线路路径寻优问题中的目标结点进行动态回溯分类,同时采用分支定界搜索策略进行搜索优化,降低了搜索算法时间复杂度.2路网拓扑树构建本文以路网拓扑进化树来反映路网中各结点邻接关系,首先应用邻接矩阵方法构造原始地理信息图,将路网结点抽象为全连通图G中的一个结点,而路网结点间的路网可达性抽象为图G边的连通性,则令图G={V,E},其中V(G)={v1,v2,…,vn}为结点集,n表示结点个数.E(G)={e1,e2,…,em}表示各路网结点之间边的集合,其中m表示边的条数,则有m=n×(n-1)/2,如图1所示.边权矩阵犇表示全联通图G各结点之间的权值:其中,wij表示结点vi、vj间路网可达距离.2.1抽象图构建根据路网结点结构模型(图1),首先将路网抽象为一个以抽象连接点X为连接点的星型树,如图2所示,同时将图G任意两点之间的权值表示为抽象星型树中抽象边权,即Dij=LiX+LjX,其中LiX表示星型树中结点vi到X之间的抽象边权,LjX表示星型树中结点vj到抽象连接点X之间的抽象边权.定义1.给定一个抽象路网星形树,定义路网抽象边权总和L为其中:LiX表示结点vi到连接点X的权值,Dij表示结点vi到vj之间的权值,n为路网结点个数,且有L1X+L2X=D12,L1X+LXY+LkY=D1k.由式(1)变式为Page3也即L=1由此可得2.2判断邻接值基于定义1,引入邻接值的概念用于判断结点vi、vj的邻接关系,其中vi、vj∈V(G)且i≠j,定义Sij表示结点vi、vj之间邻接值,将网络中任意两点vi、vj结点通过两个抽象连接点X、Y与其它结点连接,如图3所示,之后计算结点vi、vj的S值.为了计算路网中任意两点间的邻接关系权值,定义2.由图3定义图G中任意两点vi、vj之引入以下定义.间的邻接值Sij为定义3.定义两结点vi和vj合并后,组成新结点vi-j,vi-j与其它结点边权为其中,vk∈V(G)且k≠i,j,由定义1和定义2可计算得到推论如下Sij=∑n证明.将邻接值计算转化为邻接矩阵方法表示,令犃狓=犱,其中狓T=[L1XL2X…LnXLXY],犱为任意两结点之间的边权值矩阵,其长度为n(n-1)/2,则有犱T=[D12D13…D1nD23…D2n…Dn(n-1)],犃为图G的邻接矩阵表示,其中将犃狓=犱转化为犃T犃狓=犃T犱,得到其中,犅=犃T犃,由图3可知,犪T1k、犪k1为任意结点与v1连线中所有经过L1X的道路,除L12外都经过L1X,则其它类推得到矩阵犅和犅-1为n-111…1n-2熿犅=n-2n-22…22(n-2燀犅-1=其中,a=n/4(n-2),b=(n-4)/4(n-2),c=(2n2-11n+16)/2(n-2)2(n-3),d=-(n-4)/2(n-2)2(n-3),e=-1/4,f=-1/2(n-2)(n-3),g=(n-1)/4(n-3).将犅-1回代式(8),从而求得LiX=Dij2+1LjX=Dij2+1LlY=Rln-2-Ri+Rj(n-2)2-LXY=Ri+Rj2(n-2)-Dij2-∑n其中Rl=∑nl≠i.j,上式与式(5)联立,可消除未知变量LiX、LjX、LlY(ln且l≠i,j)、LXY,求得Sij的最终计算式如下Sij=∑nPage42.3路网拓扑重构在每一组邻接值计算结果集中,选择邻接值最小的结点对作为最佳邻接对保留,应用拓扑重构规则对路网进行重构并给出其合法性证明.拓扑重构规则:假定vi和vj为邻接结点对,则将结点vi和vj组成一个新的结点,定义为虚拟结点vi-j,表现为在V(G)中删除结点vi、vj,插入新结点vi-j,之后依照抽象图构建原则构建新的路网V(G).图4选择v1、v2为邻接对后的拓扑重构模型树合法性证明:以结点v1、v2为例,假定v1、v2为邻接结点对,由图4可知,拓扑重构后的连通图V(G)应满足定义式(1),即需证明证明.(1)对于式(13)中右式,由式(9)可知L(1-2)X=1联立LiX+LjX=Dij,D(i-j)k=(Dik+Djk)/2.化简上式得L(1-2)X=1则可得到L(1-2)X+L3X=1(2)对于式(13)中左式,由定义式(3),可知其中,D13=D1A+LAX+L3X,D23=D2A+LAX+L3X,则上式可变式为D(1-2)3=(L1A+LAX+L3X+L2A+LAX+L3X)/2也即D(1-2)3=1综上,左式=右式,则D(1-2)3=L(1-2)X+L3X.上述证明重新拓扑构建满足定义式(1)要求,由此在寻求每一对邻接结点后,将其合并为虚拟结点并插入结点集合中,进行拓扑重构.3多停靠点路径优化算法针对多停靠点路径优化问题,在上述二叉路网拓扑树构建基础之上,采用动态回溯分类策略进行路网限定搜索区域,搜索区域采用启发式规则构建方法:以邻接值为关联因子,对交通网络中的路径结点的相互邻接性进行包含分析,在运算过程中只对包含分析的结果集进行搜索.3.1动态回溯分类策略对于初始路网进行拓扑进化树构建,采用上文结点间邻接值计算方法,按照邻接值最小策略,构建拓扑进化树Tree,算法步骤如下.1.令G={V,E},D=wij,Tree;2.对vi、vj∈V(G),计算vi,vj的邻接值Sij;3.寻找vm、vn,使得Smn=min(Sij),vm、vn∈V(G);4.vm-n=vm∪vn,V=V-{vm,vn}+{vm-n},按照邻接关系,将vm-n(父节点)、vm(子节点)、vn(子节点)插入Tree中;5.若V中元素个数为1,算法结束,否则转步2.以多停靠点路径优化问题中的停靠点作为目标结点,根据相互邻接关系,采用动态回溯策略进行分类,减少关联矩阵维度以及路网数据存储空间,其规则如下:获取目标结点vs、vo,遍历路网拓扑进化树Tree,判断vs、vo在Tree中的位置,假定vs、vo分别处于Tree的第m、n层,分别回溯vs、vo的父结点,当两者回溯到同一父结点时终止,保留该结点及其以下分支树,作为包含目标结点最小分类树,算法流程如图5所示.3.2分支定界优化策略通过动态回溯分类操作,获取包含vs、vo的最小Page5分支树,定义为B-Tree,在选择vs→vo具有拓扑邻接关系的过程结点筛选过程中,应用分支定界策略进行算法优化,规则如下(以图6为例):1.根据目标结点的邻接性,首选直系父结点或直系子结点,图6中从vs出发,则首先选择v2作为途径结点,此时关联结点集合为{vs,v2,vo}.2.若目标结点的父结点或子结点为虚拟结点,则以其兄弟结点替代,图6中从v2出发,其父结点为v2-3,则以结点v4替代v2-3.选择v2作为途径结点,则忽略v3及其分支树.3.若两目标结点位于同一层次且具有兄弟邻接关系,则以与最近邻接结点的邻接度判断先后顺序,如图6中vs、v2、v3均为停靠点,而vs、v2位于同一层次,则判断Ss3、S23大小来决定停靠顺序.4.每一层只选择一个途径结点,忽略同层其它分支,如3.3路径优化算法设计根据上文构建路网拓扑进化树方法,将包含所有停靠点的路网重构为具有邻接关系表现特征的路网拓扑进化树,应用动态回溯方法获取包含所需停靠点的最小分支树,采用分支定界优化策略对停靠点集合V进行拓扑排序,在此基础之上设计路径规划算法步骤如下:1.进化树拓扑路网构建,将整个路网按照邻接关系进行拓扑重构,最终形成以邻接关系为表现特征的路网拓扑进化树Tree.2.根据停靠点集合V=(v1,v2,…,vn),采用动态回溯分类策略,在Tree中寻找最小分支树B-Tree,满足条件VVB-Tree.3.对于包含(v1,v2,…,vn)的最小分支树B-Tree,遵循分支定界优化策略,获取依据邻接关系判定各停靠结点访问先后的巡游顺序(vπ1,vπ2,…,vπn)并输出.4.同时对步3所获取的序列应用动态规划策略进行局部调整,即将(v1,v2,…,vn)中位于B-Tree同一分支树的结点与其它结点分离开来,对限制范围内结点应用动态规划进行精确求解,之后与其它结点以相互邻接关系合并,得到最优解,如图7所示.图7给出了搜索区域局部动态规划的情况,其中B-TreeB-Tree,v2、v3、v4为B-Tree所包含的停靠结点,将B-Tree在B-Tree中分离出来,对(v2,v3,v4)进行动态规划求解局部最优路线(vπ2,vπ3,vπ4),之后依据邻接关系将其插入到(vπ1,vπ2,…,vπn)中,得到经过局部优化后的巡游路线.3.4时间复杂度分析如上所述,路网拓扑进化树优化策略在线操作主要分为两个部分:依据停靠结点动态回溯分类、站点路径寻优.动态回溯分类部分时间复杂度:算法需要对目标结点在拓扑进化树中进行回溯,最坏情况下共需回溯n次,每一次回溯平均时间复杂度为log(n),因此此处操作总的时间复杂度为O(nlog(n)).路径寻优时间复杂度:算法需要在最小分支树中B-Tree以相互邻接关系为判定因子,采用分支定界优化策略获取n个停靠结点的先后巡游次序,因此其时间复杂度即为O(nlog(n)).将上述时间复杂度进行叠加,即可得到应用拓扑进化树构架策略的网络路径优化算法总的时间复杂度为O(nlog(n)+nlog(n))=O(nlog(n)).4试验分析4.1算法仿真实现依据上文优化算法原理开发路网拓扑进化树路径优化算法的程序模块,其中城市数据采用国家基础地理信息系统(NFGIS)1400万比例的中国行政中心数据文件res1_4m,该文件(.shp,GIS的图形格式)包含32个大陆省会城市信息(可从http://nfgis.nsd-i.gove.cn下载),根据该地理数据文件获取中国大陆32个省会城市相互之间路网可达距离,具体OD分析结果如图8所示.Page6图9路网邻接进化树由中国省会城市OD分析图,可获取各省会城市之间的路网可达线路及其可达距离等数据,基于上述数据基础,将各省会城市间路网可达距离作为邻接距离权值,应用拓扑进化树构建策略,针对中国32个大陆省会城市构建拓扑进化树,拓扑结构及结点邻接值计算结果如图9所示.基于上述数据基础,应用路网拓扑进化树的路径优化算法,考虑实际路网可达性,对中国大陆32个省会城市随机选取停靠点进行路径寻优算法仿真实现,本文以停靠点组合北京、石家庄、太原、沈阳、长春、西安、成都为例,也即停靠结点集V={北京、石家庄、太原、沈阳、长春、西安、成都},求解最短巡游路径结果如图10所示.计算结果表明:经过停靠结点集V有效序列为长春→沈阳→北京→太原→石家庄→西安→成都,优化目标值为35.0420(1400万比例尺).4.2算法性能分析针对上述案例,本文同时采用动态规划算法(Lingo实现)、遗传算法(种群规模100,交叉概率0.85,变异概率0.1)求解结果与上例中采用进化树路径优化算法计算结果一致,均为序列:长春→沈阳→北京→太原→石家庄→西安→成都,目标值为35.0420(1400万比例尺).对比可知,应用拓扑分类算法求解小规模多停靠点路径优化问题,与动态规划求解算法以及遗传算法相比具备同等有效性.对于大规模停靠点进行路径优化计算,动态规划求解方法多项式内已经无法计算,因此,本文以全局路网中所有结点作为停靠点(32停靠点)为例,分别采用遗传算法和拓扑分类算法计算最优路径优化结果如图11、12所示.分析图11、12表明,遗传算法以损失大量计算Page7时间以及计算精度为代价能够得到可行解,但是解质量与初始种群规模及质量有关,无法保证获得的可行解的质量,试验表明,针对大规模停靠站点路径优化问题,拓扑分类算法计算结果质量优于遗传算法计算结果.图11遗传算法优化计算结果图(32停靠点)图12进化树路径优化算法计算结果图(32停靠点)另外,本文对任意多停靠点路径优化问题平均计算时间进行对比分析,对比方法为选取同组计算实例,在同一PC机上,保持运算环境相同,分别采用动态规划算法、遗传算法以及拓扑分类算法进行多次计算,也即针对不同规模的停靠站点集合进行路径优化算法分别采用上述3种求解方法进行求解,同时记录获取有效序列的平均计算时间,分析结果如表1所示.计算方法实例规模(停靠点个数)由表1可知,基于拓扑分类策略的路径优化求解算法对于大规模结点实例,对比传统的动态规划算法以及遗传算法具有较好的计算效果,同时有效地降低了计算时间.综上,应用拓扑分类算法求解多停靠站点路径优化问题对比动态规划算法和遗传算法,在保证获得可行解的精度良好的情况下,提高了计算效率.5结论本文提出的实际路网拓扑树构建方法,根据路网结点之间邻接关系,进行快速关联分类,构建基于相互邻接关系的路网拓扑进化树.在此基础之上,对于多停靠点路径优化问题,应用动态分类策略缩小关联矩阵维度,在保证算法结果准确有效的前提下,降低了算法时间复杂度,实验证明了其有效性.
