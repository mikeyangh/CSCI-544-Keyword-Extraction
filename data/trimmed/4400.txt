Page1基于语义的网络大数据组织与搜索吴纯青任沛阁王小峰(国防科学技术大学计算机学院长沙410073)摘要随着信息技术的飞速发展,网络空间中出现海量异构的数据资源,网络大数据逐渐引起了人们的关注.从网络大数据中发现并获取用户所需的数据资源,需要对网络大数据进行有效地组织管理并进行基于数据语义的相似搜索.为此,需要从网络数据资源中抽取其特征/属性构造高维语义空间,并将数据资源及用户查询信息抽象为语义空间中的特征向量或高维点,进而通过比较特征向量间夹角余弦值或高维点之间的距离来衡量语义相似性.高维索引技术可以对高维语义空间中的数据资源进行有效组织管理,实现基于数据语义的相似性搜索;而降维技术可以消除语义空间维数过高所引发的“维灾”影响.文中对现有的高维数据索引及降维技术进行了系统的综述,然后介绍了现有的基于分布式技术实现高维数据语义相似性搜索的研究工作,最后并展望了未来工作.关键词语义空间;高维索引;降维;相似性查询;P2P;大数据1引言近年来,随着互联网、物联网、社交网络、云计算等信息技术的发展,网络空间中的数据资源正以前所未有的速度不断地增长和积累,世界已经进入了网络化的大数据(BigData)时代[1].大数据指在可容忍的时间内用常用软硬件工具无法对其进行有效感知、获取、管理、处理和服务的数据集合[2].IBM、IDC等权威机构将其特点总结为4V特性:规模巨大化(Volume),形式多样化(Variety),生成高速化(Velocity),价值巨大但密度稀疏化(Value).大数据的兴起引起了产业界、学术界及政府机构的高度重视.Microsoft、Google、IBM、Facebook等国际IT巨头广泛应用并推动大数据技术的发展.JimGray提出了数据密集型科学的“第四范式”[3],改变了人们对传统计算科学的看法;而《Nature》与《Science》也相继专刊讨论研究与大数据相关的问题:《Nature》于2008年出版专刊“BigData”[4],介绍了海量数据带来的挑战;《Science》于2011年出版“DealingwithData”专刊[5],讨论了数据洪流所带来的机遇与挑战.此外,美国政府于2012年公布了“大数据研发方案”①,该计划被视为美国政府继“信息高速公路”计划后又一重大举措.网络大数据[6]指“人、机、物”三元世界在网络空间(Cyberspace)中彼此交互与融合所产生并在互联网上可获取的大数据,其特点符合大数据的4V特性.首先,网络空间中数据资源飞速增长,数据规模不断扩大,呈现出海量的特性.其次,网络大数据类型丰富多样,呈现出多样化及异构化的特点,网络空间中涌现了大量的结构化数据、半结构化数据及非结构化数据,且非结构化数据的比例不断增长.再次,网络空间中大数据变化更新频繁,常以数据流的形式动态、快速地生成,具有很强的时效性.最后,网络空间中大数据价值巨大但呈现出稀疏性的特点,由于数据量巨大及表现形式多样化,传统的方法技术很难高效发现并获取用户所需的数据资源,实际应用中往往呈现出“数据丰富而知识缺乏”的窘态,网络大数据价值利用密度低.网络大数据对社会产生了深刻的影响,孕育着巨大的机遇,同时也为有效管理和利用大数据提出了挑战.在当前数据爆炸的大数据时代,针对网络空间中数据规模巨大,形式异构,动态变化,分布广泛等特点,如何高效地组织管理并搜索发现用户所需的数据资源面临着以下3个难点问题:(1)网络空间中数据资源类型繁多,表现形式多样,而形式异构的数据资源可能具有相同或相似的语义信息,传统的基于精确匹配的搜索方法不能有效地获取用户所需的数据资源.为了实现基于语义的智能搜索,需要将网络中海量异构的数据资源统一映射为语义空间中的高维数据,并通过有效手段快速锁定搜索区间,利用相似性搜索方法获取与用户语义相关的数据资源.(2)随着网络空间中数据资源的日益丰富,语义空间维度急剧增加.当空间维度过高时,在语义空间中实现相似性搜索的性能急剧下降,引发“维度灾难”[7].(3)由于大数据的4V特性,在将网络大数据映射到统一的语义空间并进行基于语义的相似性搜索过程中将占用大量的计算及存储资源.传统的集中式处理方式容易产生性能瓶颈,系统的稳定性及可扩展性较差,不能很好的应对海量的网络数据及复杂的用户需求.以上3个问题可总结为:如何在统一的语义空间中描述网络大数据的语义信息,并对其进行适当的组织划分,实现基于语义的智能搜索发现;如何解决语义空间维度过高所引起的“维灾”问题;如何合理分配数据组织搜索过程中产生的庞大计算及存储开销,提高系统性能.本文对现有工作进行了深入研究,将上述问题的解决方法总结为对应的3个方面:高维索引技术、数据降维技术及分布式语义相似性搜索技术,如图1所示.高维索引将海量异构的数据资源统一映射到语义空间,并根据给定的用户查询快速确定搜索区间,修剪掉与查询请求语义无关的数据集合,可以实现基于语义的相似性搜索.当语义空间维度过高时,容易引发“维灾”问题,导致高维索图1网络空间中数据组织搜索方法发展趋势①http://www.whitehouse.gov/blog/2012/03/29/big-data-Page3高维数据索引技术.引的性能急剧下降,甚至不如顺序扫描.降维技术通过构造降维映射,获得高维数据集合的低维表示,可以有效消除“维灾”带来的影响.针对传统集中式设置带来的局限性,分布式高维索引或降维技术可以合理分配计算及存储开销,提高系统的健壮性及可扩展性,有效地应对网络大数据带来的挑战.本文的贡献主要体现为:(1)从向量空间及度量空间角度综述了现有的(2)从线性及非线性角度综述了现有高维数据降维方法.(3)总结了现有的基于分布式技术的高维数据语义相似性搜索技术,并展望了未来发展方向.本文第2节综述现有的高维数据索引结构;第3节系统地介绍现有的高维数据降维方法;第4节总结现有的基于分布式技术实现高维数据语义相似性搜索方法;最后一节总结全文并展望未来工作.2高维数据索引高维数据,即高维语义空间中的数据,通常表示为高维点或高维向量.高维空间内数据通常表现出以下的特点:(1)分布不均匀.随着空间维度的增加,数据趋于空间表面分布[8];(2)分布稀疏性.高维数据在空间内分布稀疏,很难对有相似语义的数据信息进行有效的组织管理;(3)等距性.由于高维数据趋于空间表面分布,从给定查询点到其近邻点和远邻点的距离随着维度的增加趋于相等[9];(4)动态性.伴随着数据的更新,随时有高维数据进入或离开语义空间;(5)数据海量性.语义空间内网络数据量庞大;(6)时间代价大.操作高维数据所花费的时间一般远高于传统数据;(7)不能排序.无法对高维数据进行有效的线性排序以充分体现其在空间中的相对位置关系.为了实现高效的基于语义的相似性搜索,学者们提出了多种高维索引结构,用以在相似性搜索过程中修剪掉与给定用户查询语义无关的数据对象,减少搜索空间,缩短查询时间,提高搜索效率.根据构建高维索引所采用的数据划分标准及相似度量的不同,高维索引可分为向量空间索引结构和度量空间索引结构[10],如图2.两者之间的区别与联系体现为:(1)向量空间可看作是带有坐标信息的度量空间,在一定条件下可以相互转换.当在度量空间中只利用一个给定的距离函数获取数据间距离信息时,向量空间则转换成了度量空间;而利用快速映射(FASTMAP)算法可以将度量空间转换为较低维的向量空间;(2)在相似性查询过程中,度量空间索引仅仅利用基于距离函数的三角不等式性质;而向量空间索引则可以同时利用数据在空间中的位置(坐标)信息.向量空间索引利用了更多的信息,比度量空间索引具有更好的修剪及搜索效率.2.1向量空间高维索引2.1.1向量空间高维索引分类距离函数来组织数据,具有不同的分类标准:向量空间索引利用数据在空间中的相对位置及(1)根据所索引数据的类型,可分为点数据类索引和空间数据类索引.点数据类索引只能处理高维点数据,如k-d-树[11];空间数据类索引则可以同时处理点、线及多边形等高维数据,如R-树[12].(2)根据索引节点构建方法的不同,可分为数据组织类、空间组织类以及混合组织类.数据组织类索引根据数据在空间中的分布组织索引节点,如R-树;空间组织类将数据空间划分为互相邻接的子空间并将子空间对应为索引节点,如k-d-树.混合组织类则同时利用数据组织方法及空间组织方法构建索引结构,如Hybrid-树[13].(3)根据索引组织形式,可分为树型索引和非树型索引.树型索引中索引节点按照树的形状组织,如R-树等;非树型索引中索引节点不按照树的形状组织,如VA-File[14]等.Page4(4)向量空间索引将语义上相似(位置接近)的数据聚类为数据页(page),分配到每个数据页的子空间称为页区域(pageregion).根据页区域的形状,可以分为超矩形、超球体和混合型.页区域为超矩形的索引有R-树等;超球形的有SS-树[15]等;混合型的有SR-树[16]等.(5)此外,高维映射到一维类索引将高维空间内数据对象按照某种标准映射到一维数据空间,典型的代表有空间填充曲线(SpaceFillingCurve,SFC)[17]、iDistance[18]方法及金字塔技术[19]等.2.1.2典型向量空间高维索引(1)R-树类.R-树是一种对应空间矩形层次嵌套结构的平衡树,是B+-树在空间上的扩展,如图3所示.R-树可应用于多维点及空间数据,索引树中的节点对应包含高维数据的最小边界矩形(MinimumBoundingRectangle,MBR).MBR是所包含数据的最小近似,且相互之间可以有重叠.R-树具有较好的数据存储效率,但是MBR间的重叠导致了数据的重复搜索.R-树[20]是R-树的扩展,它改进了R-树的数据插入及节点分裂算法,同时引入了强制重新插入机制,一定程度上提高了搜索性能,但R-树没有有效地降低节点间的重叠程度.R+-树[21]是针对R-树中由矩形重叠造成的多重路径搜索问题而提出的,它增加了描述R-树性能的新特征,并通过分裂的方式使同层节点矩形之间不再存在重叠.X-树[22]基于R-树引入了超节点的概念,当对溢出的节点执行节点分裂操作而导致较严重的区域重叠时,则扩大溢出的节点使之成为超节点,以便存放更多的数据对象.SS-树利用超球体代替MBR作为页面区域,可以有效的减少存储空间,但是在节点分裂过程中不能避免区域重叠现象.SR-树[23]可以看作R-树和SS-树的结合,同时利用MBR及超球体划分高维数据以形成页面区域,从而在更高效的处理相似性查询时避免了较高的区域重叠度.SS+-树[24]是SS-树的改进,相较SS-树,SS+-树利用更紧密的边界超球体划分高维数据,在执行节点分裂过程中更好的利用了数据的聚类特性,同时利用本地重构规则构建索引树以便减少区域重叠度.CSS-树[25]根据半结构化数据的特点,基于聚类的思想进行索引节点组织及溢出节点的分裂,同时提出了高效的搜索剪枝策略,能有效地提高针对半结构化数据的相似性搜索效率.(2)k-d-树类.k-d-树为高维空间中的二叉查找树,可用于点数据相似性搜索.如图4所示,k-d-树利用超平面分割数据空间,保证了不同节点对应的页面区域间没有重叠,避免了重复搜索.k-d-树是基于空间的划分方式,不能充分考虑数据在空间中的实际分布情况,导致很多节点包含很少的数据对象;同时k-d-树高度上不平衡,进一步影响了搜索效率.Adaptivek-d-树[26]为k-d-树的变种,它在利用超平面分割数据时保证得到的两个子空间内点数据的数目相等,超平面上不一定要包含数据,每个节点内只能包含定量的数据,当溢出时需进行节点分裂.kd-B-树[27]采用了B-树的思想,使其成为平衡的多叉树.当节点溢出时,在节点内部执行强制分割策略,使其变为相邻的子空间.但是这种节点分割方法不能保证最大的空间利用率.(3)量化近似类.VA-File首次提出了量化近似的思想,其本质上并不能称为一种索引结构,它提出了利用数据压缩技术以便加速顺序扫描的方法.VA-File维护两个文件:高维数据的量化近似表示Page5(以压缩的比特串形式表示)及其精确表示.空间中的每一维被分配一个比特串近似表示其刻度(比特串的长度决定了近似表示的精度),空间被刻度值划分为大量子区间,空间中的高维点根据其所在子区间的坐标近似表示.当进行相似性搜索时,首先根据查询点的近似表示进行顺序扫描确定子区间,然后再对子区间内的数据进行精确扫描来确定最终结果.VA+-File[28]方法是VA-File方法的改进,首先使用Karhunen-Loeve变换来去除各维之间的相关性,然后根据变换后各维的能量(方差)做不均匀的维数分配.在保证分配的总维数不变的前提下,能够更精确地估计特征向量;LPC-File[29]同时采用极坐标的方法近似表示高维数据,提高了数据的近似表示精度及相似性搜索精度;VQ-Index[30]用矢量量化替代VA-File中的标量量化,有效提高了相似性搜索效率,但矢量量化器需利用历史数据生成.文献[31]基于高斯混合模型提出了一种矢量量化索引方法,充分利用了各维之间的统计相关性,更加精确的近似表示了高维数据对象.文献[32]提出了一种并行压缩优先过滤索引PCPF,通过量化特征向量构建近似向量空间上的高维索引结构,进行空间划分并行构建多个子索引分支,可以显著提升查询匹配效率及精度.(4)高维映射到一维类.空间填充利用某种方法对高维空间中的数据近似排序,尽可能确保数据点间的相对位置不变,将高维数据从高维空间映射到一维线性空间,其典型代表有Z-Order、Hilbert曲线等,如图5所示.但此类方法灵活性不足,如果对两个不同区域的索引进行组合,至少要对其中一个进行重新编码,且对范围查询的效率较差.iDistance方法利用数据点相对参考点的距离将空间中高维数据映射到一维空间.如图6所示,该方法首先对空间内高维数据进行聚类,为每一个数据聚集区顺序编号,并为每一个数据聚集区选择一个参考点.然后根据高维数据所在子空间编号及其到参考点的距离将高维数据映射为一维数值.BC-iDistance[33]通过引入位码来近似表示参考点与数据之间的位置关系,将高维向量压缩为二维向量,并利用特殊的B+-树组织,查询过程中实现了两层剪枝处理,提高了查询效率.文献[34]提出了一种基于聚类分解的高维索引,首先基于聚类分解的思想把聚类得到的超球体分解为半径不同的空腔超球体,然后对空腔超球体内数据利用iDistance方映射为一维数值,可以有效提高搜索效率.金字塔技术首先将数据空间划分为以中心点为共同顶点的多个高维金宇塔,并为每个金字塔确定一个金字塔值,然后根据高维数据所在的金字塔值及其到金字塔底的垂直距离将高维数据映射为一维数值.P+-树[35]首先对高维数据聚类,并将每个数据聚集区规整为超立方体,之后利用金字塔技术的思想索引高维数据,增强了金字塔技术的鲁棒性.iMinMax[36]方法也为一种将高维数据映射为一维数值的索引结构,首先找出某个高维数据所有维度中维度值最大和最小的两个维度,然后根据两个维度值将高维数据映射为一维数据,注意这里的映射也为多对一的映射.此外,学者们还从不同的角度提出了多种索引结构,如利用超平面划分高维特征空间形成的Quad-树[37],基于哈希存取方法形成的网格文件类[38]索引结构及IQ-树[39]等,这里不再详细介绍.2.2度量空间高维索引2.2.1度量空间高维索引的分类度量空间高维索引利用满足三角不等式性质的距离函数来实现高维数据的相似性搜索,从不同的角度可以对度量空间高维索引做出不同的分类.(1)根据索引组织形式,可分为树型索引和非树型索引.树型索引中索引节点按照树的形式组织,如BK-树[40]、VP-树[41]等;非树型索引中索引节点不按照树的形状组织,如AESA[42]等.(2)根据索引构建过程中所使用的距离函数类型,可分为离散距离类及连续距离类.离散距离类索Page6(3)混合索引方法将树状索引与顺序扫描方法引利用离散距离函数构建索引,距离函数提供有限数量的距离值,如BK-树;连续距离类利用连续的距离函数构建索引,距离函数提供大量甚至无限的距离值,如M-树[43]等.相结合,具体实例有GC-树[44]、DABS-树[45]等.2.2.2典型度量空间高维索引(1)VP-树类.VP-树为一种连续距离类树型索引,采用自上而下的方法来构建,利用数据对象到参考点之间的相对距离修剪查询过程中与给定查询语义无关的数据,不支持数据的更新和删除.VP-树(图7)递归构造一棵平衡二叉树,首先选择任意数据对象p作为根节点(参考点),同时计算出其他数据到p的中值距离M;然后将与p的距离小于M的一半数据放入左子树,另一半放入右子树;针对左右子树重复执行上述过程,直到节点中数据数目小于给定的阈值.针对VP-树采用二叉树结构所导致的索引高度很高,从而引起大量的距离计算,造成性能下降的问题,MVPT[46]在一个节点中使用多个参考点对数据进行划分,一定程度上提高了搜索效率.VPF[47]将VP-树的每一层中参考点距离大约为M的“中间部分”数据对象挑选出来,并用“中间部分”数据构建第二棵树,以此类推获得具有多棵树的“森林”.这样当需要搜索“中间部分”数据时,不用同时进入左右子树进行搜索.(2)BK-树类.BK-树(图8)属于离散距离类树状索引,索引树的构造过程如下:首先从空间内原始数据集U中任意选择一个数据对象p∈U作为根节点,然后利用离散距离函数将剩余的数据对象划分为多个子集作为树的分支.对于每个离散距离i,定义子集Ui={u∈U,d(u,p)=i}为距离根节点为i的所有数据元素的集合,并为每一个非空子集Ui在BK-树上建立分支.然后为所有的非空子集Ui循环构造BK-树直到子集中剩余元素数目为1或小于给定的阈值为止,所有将作为子集根节点的数据对象称为支点(pivot).FQ-树[48]对BK-树的结构进行了改进.与BK-树不同的是,FQ-树所有的数据元素存储在叶子节点中,且存储在同一层节点中的所有支点是相同的.该结构可以减少查询时距离比较的次数,代价是树的高度增加.FHQ-树[49]对FQ-树进一步做了改进———强制所有的叶子节点在同一高度上,这样的设置使我们进行相似性搜索时可以统一考虑同一层的节点,不用额外区分叶子节点和中间节点,提高了搜索效率,但其代价是增加了某些叶子节点的高度.FQA[50]不是树的形式,但具有比FHQ-树更紧凑的结构.FQA将FHQ-树叶子节点中的数据按从左至右的顺序放入一个数组中,并记录下从根节点到数据的高度.在同样内存的情况下,FQA可以较FHQ-树访问更多的支点,从而提高搜索效率.(3)M-树类.M-树是基于连续距离类的平衡树状索引.在M-树中每个节点中首先选取代表元素,然后将靠近代表元素的数据构建成以代表元素为根的子树,代表元素存储其覆盖半径信息.当进行相似性搜索时,首先比较搜索范围与节点中代表元素的覆盖范围以确定语义相关(范围相交)的子树,然后进入子树中进一步搜索.当插入数据时,选择距离最近的代表元素对应的子树插入,当引起节点溢出时,需执行分裂操作(图9).M-树可以支持数据的更新,同时很大程度上减少了相似性搜索过程中的计算量,但是没有处理好节点间的重叠问题.MB+-树[51]针对节点间的重叠问题,利用B+-树和Block-树索引空间内高维数据,避免了兄弟节Page7点间的区域重叠.M2-树[52]使用多种距离函数,可以同时根据数据的多个特征对数据进行检索,实现了高维数据的复杂查询.Slim-树[53]提出了基于最小生成树的节点分裂方法,并通过一个后处理过程最小化索引节点数目及节点间的重叠度.M+-树[54]提出了一种基于距离及关键维的两步分割策略,根据对相似性影响最大的关键维对数据进行二次过滤,在有效提高数据分割效率的同时降低了索引树的高度.MS-树[55]提出了活动子空间和非活动子空间的概念,并通过一种空间映射方法减少对非活动子空间的访问次数,提高了查询性能.(4)混合索引结构.高维索引能够有效处理聚类或分布密集的数据集,当数据分布特别稀疏时,采用顺序扫描可能更加有效.混合索引能够区分数据集在空间中的分布状态,针对不同的数据分布针对性的采用顺序扫描或树状索引,能够有效的提高相似性搜索的效率.如GC-树首先根据一个密度函数划分数据密集区域及稀疏区域,然后对两者分布采用树状索引及顺序扫描;DABS-树根据数据分布动态调整数据页大小,并通过顺序扫描一个一级目录以解决目录过载的问题;文献[56]对树状索引无法有效处理的数据采用顺序扫描的方法,能够一定程度上解决“维灾”带来的影响.文献[57]提出一种基于查询采样的高维数据混合索引结构,基于查询采样的方法将分步稀疏的数据从树状索引中分离出来,并对其进行顺序扫描处理,能够有效提高搜索效率.此外,学者们还提出了多种索引结构,如针对离散距离函数的BK-树;动态多级树SA-树[58];可适用于离散距离函数及连续距离函数的BS-树[59]等,这里不再详细介绍.2.3高维数据索引综合比较综上,学者们已对高维索引进行了大量研究,提出众多索引结构及其相关算法用以组织管理高维数据,表1从数据划分方式、数据节点组织形式、所支持的数据类型及是否支持数据更新等方面对几种典型高维索引结构进行了综合比较.但是,高维索引并没有在基于语义相似性搜索中得到广泛应用,主要是其性能受到以下因素的制约:(1)对基于语义的相似性搜索性能不稳定,当搜索范围增大时,获取有用信息的代价迅速上升;(2)对空间维数较敏感,随着维度的升高高维索引对数据的过滤效果越来越差,当空间维数超过某一“临界值”时,采用高维索引的相似性搜索效率甚至不如顺序扫描;(3)基于语义相似性搜索容易受到高维索引划分方式组织形式数据类型数据更新R-树SS-树超球体树形空间数据支持SR-树空间矩形+超球体树形空间数据支持SS+-树超球体+聚类树形空间数据支持k-d-树超平面树形点数据支持空间填充曲线保距映射非树形点数据不支持VA-File空间划分非树形点数据支持VP-树相对距离树形点数据不支持M-树相对距离树形点数据支持iDistance聚类+相对距离树形点数据不支持金字塔技术空间划分+相对距离树形点数据不支持混合索引树形索引+顺序扫描树形点数据支持空间“语义无关”维度的影响;(4)现有的高维索引基本都在某种特定情况下提出(如有的针对聚类数据,有的针对均匀分布数据),缺乏对数据在语义空间内分布的自适应性,不能很好地满足用户的要求.3高维语义空间降维“维度灾难”指在对高维数据组织管理处理过程中遇到的由于数据特征(维度)过多而引起的所有问题,主要表现为以下几个方面:(1)高维空间数据分布非常稀疏,很难对有相似语义的数据信息进行有效的组织管理,在发现有相似语义的数据信息时,需要访问较大的空间区域;(2)高维空间中一个给定数据到其最近邻和最远邻的距离在很多情况下几乎是相等的,不能高效地组织和发现与该数据点语义相似的数据信息;(3)随着维数的升高,高维索引的数据划分效果变差,数据索引节点之间的重叠度随之增大,导致了数据的重复搜索并增加了数据访问路径,从而影响了搜索效率.此外,高维索引搜索效率受语义空间维度及数据对象内在维度(IntrinsicDimension)的影响,当在高维空间处理内在维度很低的数据对象时(如在1000维空间内查找2维平面),由于受到与内在维度无关维度的影响,导致搜索效率很低.降维方法是解决“维灾”问题的有效手段,通过有效手段将数据从高维空间映射到低维空间,同时尽可能保持数据集的整体结构和分布不变,从而获得高维数据的一个有意义的低维表示,进而降低基于语义的相似性搜索算法的复杂性,提高搜索效率,如图10.Page8降维方法从数学角度的描述如下:设X={xi}Ni=1RD为D维语义空间RD内数据元素个数为N的一个数据集,X的内在维度为d(dD),即数据集X内的数据元素属于嵌于D维语义空间RD内一个维度为d的子空间.降维技术通过找到合适的降维映射F:X→Y,将数据集X映射为一个新的维度为d的数据集Y,Y={yi}N原数据集的拓扑结构不变,从而可以在较低维空间内对数据对象进行处理,有效地消除了维灾的影响.目前学者们已经陆续提出了多种降维方法,如潜在语义索引[60]、主成分分析[61]、多维尺度分析[62]以及近年来提出的基于流形学习[63]的算法等.从不同角度可以对降维方法作如下分类:从降维映射形式角度可分为线性及非线性降维;根据降维过程中是否使用数据中的监督信息可分为无监督降维,有监督降维及半监督降维;从操作数据集范围角度可分为全局方法和局部方法;根据降维过程中特征获取途径可分为特征选取和特征抽取两类.本文根据降维映射形式将现有降维技术分为线性降维和非线性降维,如图11.形式上,设{xi}N合,通过降维映射F(x)=得到较低维空间Rd中的数据集Y,Y={yi}NRd.若F的每个分量Fi都只是X的线性函数,则称F为线性降维;否则,称F为非线性降维.3.1线性降维方法线性降维技术以其简单、快速、易于实现、不存在局部极值以及相对有效性的特点得到了十分广泛的应用.以下介绍几种典型的线性降维方法.(1)潜在语义索引(LatentSemanticIndex,LSI).LSI基于向量空间模型(VectorSpaceModel,VSM)提出.VSM将高维数据对象描述为特征向量.LSI对空间内高维数据组成的特征矩阵进行奇异值分解,并舍弃后面绝对值很小的奇异值,进而将高维数据映射到低维空间,同时去除了语义相似性查询过程中的噪声干扰.LSI通过矩阵奇异值分解并人为设置阈值舍弃较小的奇异值,阈值的选取将直接影响到搜索的精度;同时由于矩阵分解计算量较大,当数据规模较大或维数过高时,LSI效率变低.针对LSI不能处理大规模数据的问题,RLSI[64]将根据数据对象的不同“主题”将“特征-对象”矩阵表示为“特征-主题”矩阵及“主题-对象”矩阵的乘积,然后对分解后的矩阵进行并行处理,可以有效提高系统的可扩展性及相似性搜索效率.(2)主成分分析(PrincipalComponentsAnalysis,PCA).PCA方法将数据映射到一组新变量(主成分)上,并通过设置数据方差的阈值舍弃方差较少的主成分以达到降维的目的.PCA为一种坐标变换技术,新得到的维度(主成分)为原维度的线性组合,并尽可能反映数据原有的信息.但在降维过程中,主成分个数需人工选取,选取不当将导致信息丢失.(3)投影寻踪(ProjectionPursuit,PP).投影寻踪[65]可以有效地分析和处理服从非正态分布的高维数据.它基于某种线性组合将高维数据投影到低维子空间中,并寻找能很好地反映原数据特征的最佳投影方向,从而能在低维空间对数据进行分析处理.PP方法降维过程中由于有大量的点积计算,当空间维度过高时降维效率变差,比较适用于数据量大但维度较低的数据集.(4)离散余弦变换(DiscreteCosineTransform,DCT).DCT[66]的基本思想是在一定损失的情况下,采用较少数目的维数来表示高维数据.其基本原理为对于D维数据ξ=(ξ0,ξ1,…,ξD-1),令ε=(ε0,ε1,…,εD-1)为ξ的DCT结果,若ε的第m项之后均为0(或绝对值相对首项很小),则只保留前m项,实现Page9了数据的降维.高维数据经DCT处理后具有保距性,不影响数据间的拓扑结构.实际操作过程中需要人为控制舍弃部分的阈值,需要根据所能容忍的精度及系统效率综合考虑.(5)线性判别分析(LinearDiscriminantAnalysis,LDA).LDA[67]也称为Fisher判别分析,其主要思想是寻找一个投影矩阵,将高维数据投影到低维空间,同时Fisher准则确保了在低维空间中同类数据的区别最小化,异类数据的区别最大化,提高了不同类别之间数据的可分性.LDA是一种有监督降维方法,可应用于现实中高维数据的分类工作.但是LDA不能灵活调整分解矩阵的大小,当类别中心有重叠时分类效果较差.3.2非线性降维方法现实生活中的真实数据集更多的体现为非线性结构,线性降维方法不能在降维过程中很好的保持数据集的非线性特性.为弥补线性降维方法的不足,学者们提出了非线性降维方法.非线性降维方法可以通过对线性降维方法进行非线性扩展(通常采用核技巧或局部方法)来获得,也可以对相应的函数采用神经网络或直接采用最优化方法(如梯度下降法)等来获得.流行学习是当前流行的一种非线性降维方法,其目标是发现嵌入在高维特征空间中的低维流形结构,并给出一个有效的低维表示.流行学习的典型代表有等距映射ISOMAP(IsometricMapping)[68]、局部线性嵌入LLE算法[69]、Laplacian特征映射[70]等.非线性降维方法可分为三种类型(图3):(1)全局方法.降维过程中保留数据集的全局属性;(2)局部方法.降维过程中保留数据集的局部属性;(3)混合方法.通过局部线性模型的全局排列实现降维.3.2.1全局方法全局非线性降维技术在降维过程中保留高维数据的全局属性.典型的全局方法有核主成分分析[71]、等距映射、多维尺度分析及神经网络方法.(1)核主成分分析(KernelPCA,KPCA).KPCA是PCA针对非线性数据集的“核化版本”,其基本思想为将非线性数据集通过核方法映射到一个更高维的特征空间,然后利用传统PCA方法实现数据降维.更高维的特征空间可以通过非线性映射:ΦN→F得到,由于通过映射后的两个点的点积可以用核函数k(x,x)=((x)·(x))来估计,因此该方法称为核PCA.KPCA的性能依赖于核函数的选择,而实际应用中核函数往往无法有效的选择.(2)多维尺度分析(Multi-DimensionalScaling,MDS).MDS可分为度量MDS和非度量MDS.度量MDS确保降维后低维数据点之间的距离与原数据点之间的距离尽量保持一致,可以尽可能保留数据对象间的相似性.度量MDS方法具有明显的几何意义,降维过程中距离函数的选择具有灵活性.非度量MDS[72]旨在确保降维前后数据对象间顺序关系的一致性,而非数据对象间的相对距离.(3)等距映射(IsometricMapping,ISOMAP).ISOMAP方法的出发点与度量MDS相似,即在保持数据点间相对距离一致的情况下实现数据降维.但ISOMAP采用“测地距离”表示数据对象间的相似性,而度量MDS通常选用“欧式距离”.ISOMAP方法用邻域图(NeighborhoodGraph)来表达数据的邻域结构,根据流形的局部欧氏性质,邻域图上的每一条边都可以采用欧氏距离来进行表达;然后用邻域图中的最短路径长度来对未知的全局测地距离进行逼近;最后以逼近得到的这些全局测地距离作为输入运行古典MDS算法,将数据重建在其内在的低维参数空间中,可以发现数据内在的全局几何结构及其有意义的内在维.但是由于估计测地线距离的不精确性,ISOMAP在未采样的空间可能会得到较差的结果;同时ISOMAP具有拓扑不稳定性,可能在邻域图中产生错误的连接;此外,ISOMAP不产生内在模型,而当其他类似数据需要降维时,必须重新训练.(4)神经网络方法.基于神经网络的降维方法利用神经网络的特性去除高维数据集的冗余特征,将其映射到低维空间,其典型代表有多层自动编码器(MultilayerAuto-encoder)[73]、自组织特征映射(Self-OrganizingMap,SOM)[74]、生成建模(GenerativeModelling)[75]等方法.多层自动编码器为一种具有奇数个隐含层的前向反馈网络,从功能上可分为编码和解码两个网络.编码网络和解码网络存在一个重合的“瓶颈”层,该层具有最少的神经元,且能够反映高维数据集的本质维数,进而实现数据降维.SOM网络分为输入层,竞争层和输出层,基于数据聚类实现数据降维.竞争层中邻近的各个神经元通过彼此侧向交互作用,相互竞争学习,最终在输出神经元层排列成一张低维的映射图,从而实现数据的降维.映射图中语义相似的神经元距离较近,语义不相似的神经元则距离较远.Page103.2.2局部方法局部非线性降维方法基于局部特征保持的思想,即仅仅考虑数据样本附近数据的位置关系,代表方法有局部线性嵌入(LocalLinearEmbedding,LLE)[76]、Laplacian特征映射、HessianLLE[77]等.局部线性嵌入使人们开始更加关注数据集所蕴含的内蕴特征.其基本思想是在降维过程中尽可能保持邻近点的局部拓扑结构,确保相邻的高维数据在低维空间内同样保持相邻关系.LLE首先进行近邻搜索,确定高维数据的邻居;然后计算每个高维点的权重,用邻居数据的权值组合表示高维数据;最后,基于本征向量优化技术寻找高维数据的低维嵌入,确保每个数据对象的权重不变.LLE对流形中短路现象不太敏感,同时克服了局部极小的影响;但对非均匀数据区域表现较差,同样不产生内部模型.3.2.3混合方法混合方法通过全局排列局部线性模型实现降维,具体实现为:首先计算一系列局部线性模型,然后对线性模型进行全局排列.该方法典型代表有局部线性协同(LocallyLinearCoordination,LLC)[78]方法及ManifoldCharting[79]方法.LLC方法通过计算一些局部线性模型并对这些局部模型执行一个全局排列来实现降维.该方法分为两步:首先通过期望最大化(ExpectationMaxi-mization)算法计算一系列关于高维数据的局部线性模型;然后利用扩展的LLE方法排列调整这些局部线性模型以得到原数据集的低维表示.LLC的降维计算代价较LLE或ISOMAP有了明显的降低;但LLC易受到数据集中异常值的影响,同时期望最大化算法易陷入对数似然函数的局部最大值.此外,学者们还提出了多种降维技术,如线性降维方面的因子分析(FactorAnalysis,FA)[80]、独立成分分析(IndependentComponentsAnalysis,ICA)[81]等方法;非线性降维方面的主曲线流形[82],最大方差展开(MaximumVarianceUnfolding,MVU)[83]等方法,这里不再详细介绍.3.3降维技术性能分析D,数据集内数据个数为N,降维后得到低维空间Rd,d为目标维数.涉及的参数有邻域图(Neighbor-hoodGraph)中近邻点个数k,迭代次数i,稀疏矩阵中非零元素的比率p,LLC方法中局部线性模型的数目m,神经网络中权值的数量w.表2分析了几种典型降维方法的性能.对于某个高维数据集{xn}N降维技术参数计算复杂度内存复杂度LSInoneO(d2D)O(d2D)PCAnoneO(D3)O(D2)PPiO(ND2)O(D2)LDAnoneO(D3)O(D2)KPCAk(x,x)O(DN3)O(N2)MDSnoneO(N3)O(N2)ISOMAPkAutoencodernetsizeO(iNw)O(w)LLEkO(DNlogN)+O(pN2)O(pN2)LLCk,mO(imd3)O(Nmd)现有降维技术为快速有效地处理高维数据提供了一定的便利,但仍存在以下方面的不足:(1)现有降维方法处理人造数据效果理想,但对现实生活中的实际高维数据集不能实现有效降维.(2)现有流行学习方法仅实现了位于高维流形上有限数据集的低维表示(点与点的嵌入),但并未建立高维流形空间与对应低维表示空间之间的相互映射关系(集合与集合的映射),这使其无法获得一个新输入高维(或低维)空间数据在对应低维表示空间(或高维流形空间)的映射表示,进而限制了流行学习方法在应用上的扩展.(3)现有降维方法缺乏自适应能力,对动态增加或变化的数据对象不能实现快速有效的降维,提高降维方法的自适应性成为亟待解决的问题.4分布式语义搜索如上所述,在网络空间实行基于语义的相似性搜索过程中,高维索引技术可以修剪掉大量无用的搜索路径,提高语义空间中的搜索效率;降维技术可以将高维数据映射到低维空间而保留其语义信息近似不变,消除“维灾”的影响并去除语义空间内的噪声干扰.但是传统的基于集中式设置的网络数据语义搜索机制[84-85]可能引发以下问题:健壮性不高,存在单点失败问题;扩展性较差,用户数量的多少会影响系统性能;信息垄断,服务器对网络中信息数据及搜索过程全权控制,可以随意干预搜索结果;安全隐患,可以对用户行为进行跟踪,容易造成隐私泄露.P2P作为典型的分布式技术,具有高度的自治性、可扩展性、匿名性、健壮性、负载均衡性及安全性,可以解决集中式设置带来的局限性.近年来,学者们为了提高基于语义相似性搜索Page11的性能,分别提出了分布式高维索引技术及分布式降维技术.4.1分布式高维索引技术分布式多维索引综合了多维索引及分布式技术的优点,在语义空间中进行语义相似性搜索过程中通过高维索引技术修剪掉大量无关的搜索路径,并将计算搜索任务交由网络中所有参与者分担,实现了系统的可扩展性并克服了单点失败等问题.(1)基于P2P实现iDistanceM-Chord[86]方法将iDistance与P2P相结合实现了语义空间中的相似性搜索.该方法首先对高维语义空间内的数据进行聚类,然后利用iDistance方法将高维数据对象映射到一个[0,2m)的一维关键字区域,保证不同的聚类间的高维数据映射到一维数轴上不同的区间内,确保网络中每个peer负责一个区间,并通过维护一个B+-tree来实现数据插入,删除及检索功能.在相似搜索过程中,首先确定查询的搜索区间,然后在区间内精确搜索得出结果.R-Chord[87]与M-Chord相似,实现了Chord与iDistance的结合.区别是R-Chord定义了相对位置码(RelativePositionCode,RPC)用以实现搜索过程中的进一步数据过滤.利用RPC可以过滤掉下界距离比修剪距离大的数据对象,减少距离计算,提高搜索效果.MCAN[88]结合CAN及iDistance技术用来实现语义空间中的相似搜索.它利用一种基于支点的技术为语义空间中的每个数据对象关联一个坐标,将数据对象映射到一个N维向量空间,并将映射后的对象分布于CAN网络内,将度量空间中的相似搜索转变为CAN空间内的搜索.SIMPEER[89].M-Chord及MCAN方法数据预处理阶段(聚类及映射)仍以集中的方式处理,SIMPEER则完全实现了整个查询过程的分布式处理.SIMPEER采用一种三层聚类机制(peer,super-peer,routingclusters):每个peer聚类其自身数据,并用iDistance索引;super-peer管理所负责peer的聚类信息并利用扩展的iDistance方法计算hyper-clusters,hyper-clusters用以决定哪个peer处理super-peer接收到的查询请求;Hyper-clusters信息在super-peer间交互并进一步汇总产生一系列路由簇(RoutingClusters),路由簇信息保存在super-peer层,用来在super-peer网络中路由一个查询请求.SiMPSON[90]也为在高维语义空间中实现相似搜索的一种P2P索引结构.在SiMPSON中,任何支持一维范围查询的结构式P2P系统可作为其底层拓扑.首先每个peer局部聚类本地数据,然后基于iDistance方法将聚类范围映射为2个一维索引值(开始索引和结束索引),并利用一维索引值缩小搜索区间,从而减少搜索代价.(2)基于P2P实现R-树P2PR-树[91]将P2P中peer组织成分层的树形覆盖网,且将每个peer负责的空间数据表示为peerMBR.系统中每个peer维护一条到根的路径,查询请求必须经过根节点才能达到目的节点.P2PR-树为不平衡树,如果数据是倾斜的,一些peer必须维护很长的路径信息,进而会降低搜索性能.NR-树[92]是R-树的分布式结构.peers分为super-peers及passive-peers.super-peers管理一定数量的passive-peers形成一个簇.如果passive-peers数量超过一个阈值,簇依据CAN的方法执行分裂.super-peers构成一个CAN覆盖网来实现彼此间的通信.在每个簇中,super-peers负责构建分布式R-树,当一个passive-peers发送一个查询请求,首先将其发送到super-peers,然后super-peers将请求发送给可能包含答案的passive-peers.P2PRdNN-树[93]结构与NR-树类似,唯一区别为super-peers间利用主通道以广播的方式传递消息.但是super-peers间以广播形式传递消息将导致系统较高的通信代价.RT-CAN[94]以云计算为研究背景,将CAN及R-树技术相结合用以研究云系统中索引高维数据的问题.系统为每个peer分配两个角色:存储节点及覆盖节点.存储节点维护一部分数据并为本地数据构建一个R-树.覆盖节点为CAN网络中的一个节点,负责CAN的一个分区.RT-CAN的发布策略为:对于一个将要发布的R-树节点N,如果其半径小于给定阈值,则将其发送到包含N中心的所有簇节点;否则所有与N重叠的CAN节点在其全局索引中维护N.对于一个窗口查询:首先将查询请求路由到包含查询窗口中心的CAN节点,然后将该查询递归发送到所有与查询窗口重叠的邻居,存储节点如果收到查询请求则搜索本地索引并返回结果.(3)基于P2P实现KD-树DiST[95]为一种KD-树与CAN技术相结合的分布式多维索引结构.DiST利用KD-树划分方法划分语义空间,CAN网络中每个peer负责一个子Page12空间并创建本地索引.全局索引分布于所有的节点中,每个peer仅有局部索引,并根据局部索引路由查询请求.DKDT[96]将Chord与KD-树相结合用以解决P2P系统中的相似搜索问题.该方法首席循环基于KD-树划分语义空间直到子空间内数据数目不高于给定的阈值,然后利用一个hash函数将每个子空间映射到底层覆盖网络.Peers利用Chord协议维护映射到环上的子空间,同时以DHT方式及KD-树方式维护peers.每个peer维护一个称为TreeInformationBase(TIB)的局部数据库.由于Chord及KD-树相互并不匹配,因此在DKDT中维护两个结构将导致较大的维护成本.对于一个范围查询,查询发起者利用TIB决定树中覆盖查询点的最低节点(peer),然后发送查询到该peer,接收到查询的peer不仅搜索本地数据而且根据其TIB将查询转发到其他peers进一步搜索.对于KNN查询,在范围查询的基础上查询发起者通过维护一个优先队列用以获取最优结果.m-LIGHT[97]与DKDT类似,利用KD-树划分空间,并为KD-树中每个叶子节点(子空间)分配一个关键字.通过关键字,每个叶子节点被底层DHT中的一个peer管理.m-LIGHT搜索机制与DKDT方法类似,其不同之处是m-LIGHT在插入,查询及删除数据的过程中利用一个数据感知分裂(data-awaresplitting)策略来确保系统负载平衡.SkipIndex[98]将SkipGraph及KD-树相结合以解决高维索引问题.该方法利用KD-树划分空间,然后根据分裂记录,KD-树的每个叶子节点(数据子空间)分配一个由0/1组成的位串作为该节点的关键字,实现了对子空间的编码;然后根据关键字将叶子节点与SkipGraph相关联,则数据的搜索,插入及删除操作可以依据SkipGraph协议实施.此外,学者们还提出了多种不同的基于P2P的高维索引技术,如Squid[99]、Z-NET[100]等基于P2P实现的空间填充曲线技术,LINP[101]等基于P2P实现的VA-file技术等.4.2分布式降维技术分布式降维方法综合了分布式技术及降维技术的优点,可以有效消除“维灾”及集中式架构带来的影响,近年来逐渐引起关注.(1)基于P2P实现LSI/VSMpSearch[102]将VSM和LSI技术应用到CAN网络中,其基本思想是为查询请求及所有文档对象建立特征向量,并将其映射到相应的CAN地址空间,与查询向量语义相似文档向量在邻近的CAN地址空间,查询只需要在限定的邻近节点进行,有效提高了搜索效率.但这种方法存在几个局限性:首先该方法基于CAN网络实现,无法适用于其他结构的P2P网络;其次由于网络环境中数据维度较高且处于动态变化中,CAN由于维度的限制不能很好满足有效搜索需求;最后,CAN对于语义空间的平均划分策略容易导致节点上的负载不均衡.文献[103]提出一种分级语义覆盖网络,通过创建与网络节点相关联的语义簇来实现语义搜索.分级语义覆盖网络基于DHT的思想,利用LSI及余弦相似性将语义上相近的节点聚集成簇,能够同时支持基于关键字匹配和基于语义的相似性搜索.相对pSearch方法,分级语义覆盖网络可以更好的支持生僻词的查询且查询效率更高.文献[104]将LSI技术与非结构化P2P技术结合,实现了语义查询.该方法将网络中的节点分为super-peer和peer,并采用一种三层构造机制:每个peer建立自己的词条文档矩阵犃;super-peer将其所负责的peer上的资源整合为新的语义词典矩阵犜;super-peer间相互交互信息构造路由矩阵犛.当某个peer提出查询请求q,首先将q提交给super-peer,super-peer通过犛计算出可能含有结果的若干个super-peer,然后super-peer根据犜查询到具体的peer,最后确定的peer在犃中查找到与q语义匹配的资源并返回给peer.FCAN[105]方法通过对关键字向量表示的文本建立索引,并将索引发布到CAN网络中,利用索引信息和CAN在同一空间的特点,实现结构化P2P系统中基于文本内容的查询.FCAN通过FastMap实现了语义空间到P2P空间的映射,在保证语义完整性的同时有效地对语义空间进行了降维.(2)SSW(SemanticSmallWorld)SSW[106]采用的方法是降低叠加网络的维数,将语义相近的数据对象和P2P节点自组织成多个语义簇,然后通过自适应空间线性化方法将高维空间上的语义簇线性化到一维语义小世界上.这种方法克服了pSearch中存在的负载过大的弊端,但在降维过程中语义簇丢失了大量相似的语义信息,导致系统准确性降低,同时存在语义空间与P2P叠加网络空间维数不匹配的问题.文献[107]提出了一种基于SSW在非结构P2P上实现语义相似性搜索的,每个节点维护着一系列与其语义相似的节点连Page13接,可以有效减少搜索过程中的通信代价.4.3现有分布式语义搜索技术综合比较表3从空间划分方法、底层拓扑结构、支持的相似性查询方式及是否支持数据更新等方面对几种典型的分布式语义相似性搜索技术进行了综合比较,它们在一定程度上实现了信息语义的相似性搜索,但其实现技术及特点各异.方法空间划分拓扑结构查询方式数据更新M-Chord聚类Chord范围查询+KNN查询否R-Chord聚类+RPCChord范围查询+KNN查询否MCANCAN划分CAN范围查询否SIMPEER聚类Super-peerP2PR-treeR-tree树形NR-treek-d-treeCAN+树形窗口查询+KNN查询支持RT-CANCAN划分CAN窗口查询+KNN查询支持DiSTk-d-treeCAN窗口查询支持DKDTk-d-treeDHT+树形范围查询+KNN查询否pSearchCAN划分CAN范围查询支持SSW聚类+分裂SSW范围查询支持本节分别从基于P2P的高维索引及降维技术两方面介绍了实现网络数据语义相似性搜索的方法.这两类方法克服了集中式方法的弊端,提高了系统的健壮性及可扩展性,具有广阔的发展前景.但由于网络空间中数据资源的多样性、异构性、海量性、动态性等特点,导致很难有效地构建网络数据资源的语义空间;另一方面,由于现有高维索引及降维技术本身固有的局限性,导致现有方法不能很好满足人们日益增长的信息需求.5结论及未来展望网络空间中数据资源的爆炸式增长为当今社会带来了宝贵机遇,同时也为如何有效利用网络大数据提出了巨大挑战.在网络大数据4V特性的背景下,本文研究如何有效组织管理网络空间中的数据资源并实现基于数据语义的相似性搜索,分别从高维数据索引、高维数据降维及分布式语义搜索技术三方面详细回顾总结了现有研究成果,并提出了现有工作在网络大数据背景下的局限性.总体来说,对于网络大数据的研究还处于起步阶段,尚有许多问题亟待解决,将来研究可以重点关注:(1)如何准确提取各种网络大数据资源的语义特征信息,确保构造的高维语义空间能够准确反映网络数据资源的语义信息,尽量避免噪声等因素的干扰.(2)针对网络大数据资源的语义空间维数高,动态增长,数据分布不规则等特点,提出先进的降维方法以适应网络大数据的特点,在保持数据资源语义不丢失情况下,尽可能降低语义空间维数,消除“维灾”的影响.(3)将降维技术与高维索引技术有效结合,在降维的基础上利用高维索引技术,修剪掉大量与给定搜索无关的搜索路径,快速确定搜索范围,进一步提高基于语义相似搜索的速度及精度.(4)深化分布式语义搜索系统的研究,针对非结构化P2P及结构化P2P固有的优缺点,考虑对两者进行综合,取长补短,尽可能减少数据语义搜索过程中所需流量,克服负载不均衡,免费搭乘等不足,进一步提高系统的性能.(5)将现有成熟的信息检索技术与基于语义的相似性搜索技术相结合,实现网络空间内智能高效的数据组织及搜索发现.致谢在此,感谢第二届中国互联网学术年会,并向对本文提出宝贵意见的计算机学报李刚老师及各位评审专家表示衷心的感谢!
