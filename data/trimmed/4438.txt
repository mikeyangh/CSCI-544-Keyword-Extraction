Page1受限接收缓存下CMT稳态吞吐量建模与分析刘杰民1),2)徐长明2)于长永1),2)王兴伟1)黄敏1)1)(东北大学信息科学与工程学院沈阳110819)2)(东北大学秦皇岛分校计算机与通信工程学院河北秦皇岛066004)摘要多路径并行传输(CMT)是一个基于流控制传输协议(SCTP)的新传输协议,它使用SCTP协议的多宿特性,在一条端到端偶联中的多条路径上并行地进行数据分发,相对单路径传输具有聚合带宽、可以提高端到端吞吐量的优点.文中针对受限接收缓存下发送窗口是否受接收窗口影响两种情况分别对多路径并行传输进行建模,提出了基于发送窗口和接收窗口关联的CMT吞吐量模型.首先以轮为单位,分别对两种情况下的超时阶段、慢开始阶段和拥塞避免阶段的拥塞窗口进行了分析.其次,综合3个阶段传输情况,得到1个多路径并行传输过程中,稳态吞吐量关于RTT、RTO和丢包率的函数关系,它能够很好地估计多路径并行传输协议在受限接收缓存下稳态吞吐量.最后,通过仿真实验和结果分析验证了多路径并行传输吞吐量模型的有效性和准确度.关键词多路径并行传输;吞吐量模型;发送窗口;接收窗口;受限接收缓存1引言Internet现有的端到端传输主要采用TCP协议,新型的端到端传输协议SCTP(StreamControlTransferProtocol)[1-2]因采用了多宿(multihoming)和多流(multistreaming)技术,故相对TCP而言具有了很高的端到端的路径容错性等优点,而基于SCTP的多路径并行传输CMT(ConcurrentMultipathTransfer)[3]相对SCTP具有端到端的带宽聚合等诸多优点[4],能更加充分地利用带宽资源,但这同时也对互联网传输层基础理论的研究与应用提出了新的挑战,近年来该研究也倍受学者们的关注[5-15],并由于其独特的优点目前已成为面向下一代网络传输层协议的关注对象[16-18].下一代互联网在多路径并行传输方面的要求主要体现在能保障各式各样的应用均能对网络资源进行动态合理的调度和使用,需将传输关联中的多条路径视为整体,即要充分考虑路径间的相关性,对每条路径诸如带宽、延迟、丢包率等各种网络属性特别是吞吐量应给予高度关注,对如何建立高效合理的吞吐量传输模型也正是本论文的工作重点所在.近年来很多学者针对SCTP单路径传输特点给出了不同的吞吐量建模方法.这些模型对于建立多路径传输吞吐量模型均有一定的启发意义.如文献[19]参考传统TCP吞吐量模型[20]建模方法,首先对慢开始、拥塞避免和超时重传3个阶段传输数据包数学期望进行考虑,之后分析这3个阶段所需时间的数学期望情况,从而建立了SCTP的吞吐量模型,文献[21]对该模型的建立给出了更为详细的论述.文献[22]从Markov链的分析角度,将整个模型划分为两部分,第1部分是源模型与网络模型,其出发点是将SCTP拥塞控制算法与动态变化的网络环境相分离,以提高所建立的吞吐量模型准确度.文献[23]与TCP时延模型[24]相结合,建立了两级门限故障切换机制的SCTP传输时延模型,以实现动态地调整关联中故障路径切换的阈值,来提高端到端的传输性能.在文献[25]中,作者针对无线环境下可能出现的几种丢包情况与吞吐量的关系进行了论述,并建立了相关的SCTP吞吐量模型.文献[26]充分考虑了SCTP拥塞避免、超时与快速重传以及超时重传次数超过临界值关联中断与吞吐量的关联性,建立了弃尾队列情况下SCTP吞吐量模型.凡此种种吞吐量模型均考虑了SCTP传输的不同特点,角度有所不同,但所有模型均建立在单路径传输的基础上,而没有涉及多路径并行传输情况.文献[27]在归纳各种单路径传输吞吐量模型基础上,给出了1种CMT吞吐量的建模方法,针对路径上是否有RTO发生两种情形,分别对模型进行设计,使用状态转换概率的分析形式对拥塞窗口增长进行了论述,同时为降低模型的复杂度提出了相关的算法给予了优化,提高了模型的计算速度.但经本文研究发现,这个模型也存在一定的局限性:第一,模型借鉴文献[28]和文献[29],在传输过程中假设接收缓存大小为非受限并仅考虑了这一方面,但实际上接收缓存大小是受限的,并且受限的接收缓存是制约端到端传输性能的重要因素之一,因为接收缓存和拥塞窗口是影响发送的两个重要因素,当然,为了分析问题的简单化,在分析拥塞窗口时可以假设接收缓存为非受限而暂不做考虑,但在做综合分析时,就必须要考虑接收缓存受限的情况,否则会影响结论的一般性.第二,所设计的模型只关注了慢开始阶段的数据传输,实际传输过程中还有拥塞避免阶段和超时阶段,所以该模型过于简单不够全面和准确.基于对上述研究成果的分析,本文针对在受限接收缓存下发送窗口受或不受接收窗口影响两种情况,提出了一种面向接收窗口的CMT稳态吞吐量建模方法CMT-ORM(OrientedReceive-windowModel),具体结合CMT数据传输的超时阶段、慢开始阶段和拥塞避免阶段的数据传输情况,详细地描述了CMT-ORM的建立过程;其次通过比较模型的计算结果和在NS2中的仿真结果验证了模型的准确度及与现有模型进行比较验证了模型的先进性.最后对所做工作进行了总结和展望.2CMT数据传输模型在推导CMT稳态吞吐量模型前,我们结合CMT的传输特点,借鉴相关文献[19-27]关于SCTP和CMT的建模与分析思路,同时为了简化分析并保障不影响结论一般意义,我们对CMT的数据传输建立如下模型:(1)发送端和接收端均为多宿主机,利用CMT协议在发送端和接收端之间建立偶联(Association),端到端的偶联存在多条路径,数据通过任何可能的路径同时进行数据传输,每一个流通过不同路径,每一条路径都保持稳定.(2)因CMT传输模型是用于分析稳态传输阶段的吞吐量变化情况,只有足量数据才能使传输呈Page3稳态,为此我们假定发送端为一恒定的数据发送源,即在数据传输过程中总有新数据产生与发送.(3)据实际的观察,网卡端口发送速率(b/s)总等于或大于所获得的实际的网络带宽大小(b/s),也就是说,CMT每个窗口发送的时间一般情况下总要小于其往返时间RTT,为此这里以轮次为单位来分析拥塞窗口的变换情况,同时认为轮次内数据包的丢失具有关联性,轮次间数据包的丢失无关联性.发送端据当前窗口大小来进行新数据包的发送,这表示一轮次的开始,收到了确认数据包则表示本轮次结束和新一轮次的开始,轮次之间的间隔和往返时间相同,同时认为往返时间和窗口大小两者间相对独立.(4)数据包的发送才有丢失情况存在,确认数据包无丢失情况发生.(5)CMT数据传输模型使用文献[3]中的CUC、SFR和DAC算法,以消除同时多路传输带来的发送端不必要的快速重传和重复保守的拥塞窗口增长,以及由于接收端少量延迟的ACK所引起的ACK流量增加这3个负面的影响.(6)每个数据包均为1个PMTU.(7)路径上所有数据包的丢失均遵从Bernoulli的分布规律.3CMT的稳态吞吐量计算过程在第2节所建立的CMT传输模型基础上,这里对CMT的稳态吞吐量的计算过程进行推导.如对CMT传输模型中的第3步骤描述,这里的计算过程采用“轮次”的概念,表1给出了计算过程中所涉及的变量及相关含义的描述.表1CMT稳态吞吐量模型中的变量名和相关含义变量名SwndqPbSSCATOBQDP拥塞避免阶段中2次丢包指示之间的阶段QDQSSTCwndRTORTT3.1CMT数据传输阶段的划分我们定义符号Si来表示数据传输过程中的第i个阶段,由第i个超时阶段的开始,到第i+1个超时阶段结束.整个过程由超时阶段(这里用符号表示为ZTO避免阶段(这里用符号表示为ZCA数据传输过程中第i个阶段可以表示为式(1):i)、慢开始阶段(这里用符号表示为ZSS定义Yi来表示Si阶段内传输的所有数据包数量,同样Yi由3部分组成:超时阶段传输的数据包数量(这里用符号表示为YTO据包数量(这里用符号表示为YSS传输数据包数量(这里用符号表示为YCA段内传输的所有数据包数量可以表示为式(2):则吞吐量B可以表示为CMT数据传输阶段窗口变化情况如图1所示.因为发送窗口(Swnd)取决于端到端传输环境中的拥塞窗口(Cwnd)和接收端的接收窗口(Rwnd)二者的最小值,因此模型的推导将分为两部分:第1部分为当拥塞窗口小于接收窗口时,即发送窗口不受接收窗口影响时的吞吐量模型.第2部分为拥塞窗口大于接收窗口时,即发送窗口受接收窗口影响时的吞吐量模型.3.2CMT数据传输不受接收窗口影响时的吞吐量模型(CMT-ORM)推导3.2.1拥塞避免阶段从t=0开始,发送端始终有数据要发送,定义Nt作为[0,t]时间段内传输的数据包的数量,Bt为这段时间内的吞吐量,当t>0时:Page4我们定义长时间稳定情况下吞吐量表达式为图2给出了拥塞避免阶段窗口变化情况.CMT的发送窗口大小为Swnd,在拥塞避免阶段,发送端每收到一个SACK,发送窗口大小就增加1/Swnd,如果有Swnd个数据包在第i轮发送成功,那么发送端会收到Swnd/b个SACK,假设下一轮的窗口大小为Swnd,那么所以,如果没有丢包发生,Swnd会呈线性增长,斜率为1/b,而如果检测到数据包丢失时,窗口值就会减少,减少的多少取决于丢包是由于重复确认引起的,还是超时引起的.如果丢包由重复确认引起,那么继续保持在拥塞避免阶段;如果丢包由超时引起,则进入超时阶段.假设Hij是第i个阶段内第j个QDP中传输的数据包的数量,一个拥塞避免阶段由j个QDP组成,这里设:Aij是第i个阶段内第j个QDP阶段的时间;CW是每一个QDP阶段结束时拥塞窗口大小;Xij是第i个阶段内第j个QDP阶段中丢包发生的轮次;b为累计应答因子,一个SACK里所确认的数据包的个数;拥塞避免阶段的吞吐量为为了推导出BCA的表达式,下面我们首先推导E[H]和E[A]的表达式.第i个QDP阶段如图3所示.一个QDP阶段从一个QD丢包指示开始,当前窗口值为CWij-1/2,即为QD出现前窗口值的一半时,窗口值每一轮增加1/b,也就是每b轮增加1,我们定义aij为QDP里第1个丢失的数据包,那么在丢包被检测到之前会再发送CWi-1个数据包,这些数据包会在aij出现的轮次以及之后的附加轮次上发送,因此在第xi+1个轮次里发送的数据包总数为由此可得aij是丢包发生之前发送端发送的数据包数量,包括丢失的第1个数据包,为了推出[]Ea,考虑随机过程a{}ii,a{}ii是一个独立同分布的随机变量,假设ai=k,那么在丢包发生之前有k-1个数据包发送成功,可以得到Pa=[]k=1-()pk-1p,k=1,2,…(10)变量aij的期望为由式(9)和式(11)可得为了推导[]ECW和[]EA的表达式,我们定义rn为QDPij中第n轮RTT,则整个QDPj时间Ai为考虑rn是随机变量,它的大小与窗口大小无关,也与n无关,可以得到在以下部分中,可以用RTT=[]Er来表示RTT的平均时间.下面我们推导[]EX的表达式,CWi是轮次个数的函数,为了简化模型的推导,我们假设CWi-1/2和Xi/b都是整数,首先观察第i个QDP阶段,窗口值在CWi-1/2和CWi之间变化,以1b为斜率线性的增长,则可以得到Page5则QDPij阶段传输数据包的数量Hij就可以表示为Hij=∑=1进而可以得到[]EH=1dij是附加轮传输数据包的数量,CW{}ii是一个马尔可夫过程,基于a{}i的函数,可以计算X{}i的概率分布,我们可以假设X{}i和CW{}i是独立同分布随机变量来得到更简单的方法,首先由于则可以得到综合式(12)、式(17)和式(20)可得1-pp+[]ECW=4[]ECW1b考虑到dij是最后一轮传输数据包的数量,它的值在1和CWi之间平均分布,可得到其期望值为由式(21)式(22)可得8[]ECW2-b+()23b求出[]ECW的表达式为[]ECW=2+b由于p值(丢包率)很小,趋近于0,所以有将式(20)和式(24)综合可得[]EX为下式[]EX=b由式(14)和式(26)综合可得[]EA为下面表达式[]EA=RTT2+b那么[]EH为[]EH=1-p由以上可推导出拥塞避免阶段吞吐量BCA为式(29)BCA=[]EH[]EA=RTT2+b=1RTT×3≈13.2.2慢开始阶段图4为慢开始阶段窗口变化情况.设Gi为第i个传输阶段内慢开始阶段传输的数据包的数量;Ii为第i个阶段内慢开始阶段时间;ki为第i个传输阶段内慢开始阶段轮次数量;CWSS是不考虑慢开始门限值情况下慢开始阶段结束时窗口的大小;慢开始阶段的吞吐量为Page6为了推出BSS的表达式,下一步我们要推出E[G]和E[I]的表达式.Swnd的原始值为2,比较SST与E(CWSS)的值,如果SSTE(CWSS),那么Swnd值增加到[]ECW2结束,进入拥塞避免阶段,如果SSTECW()SS,则Swnd的值增加到ECW()SS结束,进入超时阶段.下面推导ECW()SS表达式:假设ki是发生第1个丢包的轮次,因此在ki+1个轮次里发送的数据包个数为由此可得ai是丢包发生之前发送端发送的数据包的数量,包括丢失的第1个数据包,为了推出[]Ea的表达式,我们考虑随机过程a{}ii,a{}ii是一个独立同分布的随机变量,假设ai=k,那么在丢包发生之前有k-1个数据包成功发送,可以得到不同k值的概率:Pa=[]k=1-()pk-1p,k=1,2,…(33)a的期望[]Ea为[]Ea=∑=p+2p(1-p)+3p(1-p)2+4p(1-p)3+…=1由式(12)可得为了推导[]ECW和[]EI的表达式,定义cij是慢开始阶段中第j轮次的RTT,所以整个SSi的时间Ii为考虑cij是随机变量,它的大小与Swnd大小无关,也与j无关,所以那么可以通过RTT=[]Ec来表示SS阶段RTT的平均时间.下面要推导[]Ek的表达式,Swnd是轮次的函数,为了简化模型的推导,我们假设1是整数,窗口大小在每收到一个SACK时增加1,每一轮开始到结束时会收到Swnd/b个SACK,设新一轮的窗口值为Swnd,因此Swnd=Swnd+Swnd/b=Swnd1+1()b(38)Swnd{}ii是一个马尔可夫过程,我们可以计算k{}i的概率分布,假设k{}i和Swnd{}ii是独立同分布随机变量以得到更简单的方法,由于慢开始拥塞窗口值从2起始,我们可以得到慢开始结束时拥塞窗口大小与ki的关系为那么,慢开始阶段传输数据包的数量Gi可以表示为慢开始阶段结束时窗口大小ECW[]SS可以表示为由此可得1-pp+ECW[]SS=b21+1()bECW[]SS-可以得出ECW[]SS为下式ECW[]SS=1-p由式(25)可得慢开始门限值(SST)为SST=1比较[]ECW/2与ECW()SS的值,由于p1,那么SSTECW()SS,由此可得,考虑慢开始门限值(SST)时,该阶段结束时的窗口大小为[]ECW/2,由式(45)可以得到考虑慢开始门限值(SST)时慢开始阶段传输数据包的数量为Page7[]EG=那么,最后一轮的窗口值为并可以推出式(48)解得[]Ek为由此可得[]EI为下式:[]EI=[]RTTEk+()1慢开始阶段的吞吐量BSS为下式:BSS=3.2.3超时阶段图5为超时阶段路径1超时阶段数据包丢失与在路径2重传数据包的情况.在超时阶段,SCTP重传所有丢失的数据包,RFC2960规定在备份路径上重传从慢开始阶段开始,因为备份路径已闲置了一段时间,而在CMT传输数据期间,所有路径都是活跃的,我们利用这个特点,在重传路径重传数据时使用该路径的当前窗口.图5显示了重传方案,这里引进1个参数RI(ReliableIndex,可靠指数),它的值由下列公式给出:RIj=如果有数据需要重传时,则挑选除当前路径外RI最高的路径,选择一条路径重传数据的概率是与该路径的丢包率成反比的.当一条路径j超时,重传数据包的RTT平均值为假设路径1(A1,B1)在当前窗口丢失了所有的数据包,然后通过可靠指数最高的路径2(A2,B2)重传,重传路径拥塞窗口的平均值是ECW[]r路径j的ZTOTOj是路径j第1次超时时间,TRj是实际重传所有数据包所需要的时间,设RPj是路径j在超时发生时丢失数据包的数量,因此有其中ERTT[]r上式可表达为E[TRj]=E[RPj]下面推导超时阶段吞吐量表达式.Page8图6为超时阶段发送端窗口变化情况,第i次重传经历的时间为2iRTO.这里设:Mi为第i个超时阶段传输数据包的数i为第i个超时阶段的时间;E[M]和E[TTO]量;TTO是TO阶段平均数据包数量和平均时间.在两个连续超时之间传输一个数据包,在k-1个连续的丢包之后,出现了第k个成功传输的数据包,k的大小呈几何分布,可以推出:则M的期望为下面推导ET[]TO的表达式,排除重传的情况,在超时阶段前6次超时的时间为2i-1RTO,其中i=1,2,3,4,5,6,接下来的超时时间都是64RTO,这样连续k次超时的时间为Lk=2k-()1RTO,k6则超时阶段的平均时间ET[]TO为ET[]TO=∑=RTO1-64p6)=RTO1+p+2p2+4p3+8p4+16p5+32p6ET[]TO可以简化为RTO1+p+2p2+4p3+8p4+16p5+32p6.那么超时阶段的吞吐量BTO为式(61)BTO=[]EM3.2.4丢包指示产生原因的比率推导图7是丢包指示出现后数据包和确认传输情况,设Q是结束本阶段QDP的丢包指示是超时的概率,考虑丢包指示出现的轮次以及最后附加轮次图7丢包指示出现后数据包和SACK传输情况的数据包发送接收情况推导Q的表达式.设w为当前窗口大小,数据包f1…fw在倒数第2轮发送,数据包f1…fk收到了确认,fk+1是第1个丢失的数据包,基于假设丢包在同一轮次内有关联,如果一个数据包丢失,那么在那一轮次内接下来的所有数据包全部丢失.因此,fk+1以后的数据包全部丢失.从第1个丢失的数据包发送开始到发送端检测到丢失经历的时间是1个RTT,期间一共发送w个数据包,包括丢失的数据包fk+1,f1…fk已经收到确认了,fk+1…fw在倒数第2轮发送,那么另外k个数据包si…sk在下一轮(也就是最后一轮)发送,这一轮的数据包也有可能丢失,第1个丢失的数据包我们称作sm+1,同样sm+2…sk也丢失了,最后一轮成功传输的m个数据包收到了确认,但导致了重复确认.这些ACK没有延时,所以重复确认的个数与最后一轮成功传输的数据包的个数相等.换句话说,如果这样的ACK的数量多于4个,就会出现QD丢包指示,如果ACK的数量少于4个,就出现了超时的情况.在这两种情况下,当前的QDP都会结束,只是下一阶段不同.我们定义Aw,()k为窗口大小w,在这一轮中有一个或多个数据包丢失的情况下,前k个数据包成功传输的概率为定义cn,()m表示在最后一轮数据传输中传输了n个数据包,其中m个数据包收到了确认,则其余的数据包丢失的概率为定义Q(w)为当前窗口值为w时,丢包是由于超时引起的概率:Page9烄Q^(w)=烅烆当超时出现的时候,倒数第2轮成功传输数据包的数量小于4,或者最后一轮成功传输的数据包的概率小于4.基于假设数据包sm+1的丢失和fk+1无关,倒数第2轮fk+1丢失与sm+1丢失的概率为Aw,()k·Ck,()m.经过数学推导:Q^(w)=1,1-1-()p((设q=1-p,式(65)等于使用洛必达法则3b槡[]p+1-p3b槡[1-p+b+()121-p·()fp+RTT·b·log1+1()b因为CMT有多条路径,那么总的吞吐量表达式即为1n=13.3CMT数据传输受接收窗口影响时的稳态吞吐3.3.1慢开始阶段总轮次为ni;拥塞窗口的最大值为CWmax.量模型(CMT-ORM)推导设该阶段传输数据包的数量为Li;时间为Oi;此时SST值为1Q^(w)=1-q()41+q3-q()w=1-q()33q2-wqw-(由于p值很小接近于0,q值接近1,那么那么,丢包指示是超时的概率Q为可以近似得到3.2.5不受接收窗口影响时CMT数据传输的稳得到了[]EM,[]EG,[]EH,ET[]TO,[]EI,[]EA的表达式后,我们可以计算出当CMT其中一条路径吞吐量为下式:其中:综合式(74)可得ni期望的表达式为Oi期望的表达式为[]EO=[]RTTEn+()1这一阶段吞吐量的表达式为BSS=[]ELPage103.3.2拥塞避免阶段如图8中所示,Ui为QDPi中窗口大小未到达CWmax的轮次,Vi是到达了CWmax以后的轮次,在第1个QDP中,Swnd直线上升,经过U1轮增长到了CWmax,接着连续V1轮不变,再接着下一个QD指示出现,Swnd值变成了CWmax/2,开始了下一轮的QDP,重复此过程直到拥塞避免阶段结束.因此有图8受接收窗口影响时的拥塞避免阶段窗口变化示意图可以推导出这里设:Ri为第1个QDP里传输的数据包的数量;Zi为这一部分的轮次总数;Fi为这一部分的时间.我们可以得到Ri=Ui2Ri期望的表达式为[]ER=3[]EU将式(79)代入式(81)可得Bmax=Q^[]()[]那么CMT的吞吐量为∑NBn(pn)=∑Nn=14仿真结果与模型验证为了验证本文所提出模型(CMT-ORM)的准确由式(12)可知因此可以得到1p+CWmax-1=3b解得设Zij=Ui+Vi,那么代入式(79)和式(85)可得[]EZ和[]EF的表达式为[]EF的表达式为[]EF=[]RTTEZ+()1[]EF=RTT·b这一部分的吞吐量表达式为BCA=[]ER3.3.3受接收窗口影响时CMT数据传输的稳态已经得到E[CW],E[M],E[L],E[R],E[TTO],E[O],E[F]的表达式,那么总吞吐量的表达式为12CW2b+()1CW度和先进性,我们在NS-2.34(http://www.isi.edu/nsnam/ns)上进行仿真实验.CMT采用美国Delaware大学的ProtocolEngineeringLaboratory提供的CMT模块.图9为搭建的仿真环境拓扑结构图.Page11如图9所示,HostA和HostB分别代表具有双网卡的CMT终端.为模拟各种网络情况,这里设置了不同的带宽、时延和丢包率.并开启文献[3]中所设计的CUC、SFR和DAC算法.数据块设置为1468Bytes,并使用传统的文件传输协议FTP为应用层的协议.下面针对本文所提出的不受接收窗口影响和受接收窗口影响两种情况下的CMT数据传输稳态吞吐量模型CMT-ORM进行仿真实验与结果分析.其中不受接收窗口影响情形下的模型与文献[27]所提出的模型作对比来验证CMT-ORM的准确度和先进性.因文献[27]所给出模型主要技术特点是引入状态转换概率对拥塞窗口的增长方式进行建模,这里为了书写方便,暂为其命名为CMT-STP(StateTransitionProbability).其中受接收窗口影响时的情形因暂无比较对象,故这里仅对所提出的CMT-ORM本身的准确度进行分析.4.1不受接收窗口影响时CMT-ORM模型与现有CMT-STP模型的仿真结果和计算结果比较首先分别就关联中路径的带宽一定,两条路径传输时延较小和较大时,CMT-ORM模型与CMT-STP模型的仿真结果和计算结果随着丢包率变化情况进行比较和分析.为了更好对CMT-ORM模型和现有模型CMT-STP做有效的对比,在图10和图11中两个模型使用同样的仿真参数.图10是传输时延为25ms、两条路径的丢包率设置为1%,2%,3%,4%,5%,6%,7%和8%,累积应答因子b为1,在带宽为5Mbits和10Mbits时,模型的仿真结果和计算结果的对比.由图10可知,在带宽分别为5Mbits和10Mbits,丢包率为1%的情况下,因网络参数相同,CMT-ORM模型和CMT-STP模型的仿真结果必然是一致的.从计算结果来看,CMT-ORM模型和CMT-STP模型都能很好地对传输吞吐量进行估计,但CMT-ORM模型的计算结果更趋近于仿真结果,其准确度高于CMT-STP模型,这里由于仿真环境中参数设置所固有的局限性,加之仿真结果统计的固有局限性,其仿真结果势必高于计算结果.当丢包率不断加大,两模型仿真结果与计算结果均有一定偏差出现,带宽不同对模型准确度也有影响.当带宽为5Mbits时,由两个模型的仿真结果可见,两条曲线的间距变大,两个模型的准确度皆有所下降.而从整体看,两模型计算结果还是能较好地给出吞吐量变化的走势,尤其是CMT-ORM模型的准确度要高于CMT-STP模型的准确度.图10仿真结果和计算结果的比较(传输时延为25ms)图11是传输时延为100ms、两条路径的丢包率设置为1%,2%,3%,4%,5%,6%,7%和8%,累积应答因子b为1,路径的带宽分别为5Mb和10Mb情况下,CMT-ORM模型和CMT-STP模型的仿真结果和模型计算结果的比较情况.由图可以看出,两模型仿真结果与计算结果的一致程度随带宽和丢包率的增加而下降.与图10中的情况相对而言,当时延增加时,两模型准确度均有一定程度的下降.但从整体而言,两模型计算结果仍然能够较好地预测吞吐量的变化走向,其中CMT-ORM模型的准确度仍高于CMT-STP模型的准确度.图11仿真结果和计算结果的比较(传输时延为100ms)Page124.2受接收窗口影响时CMT-ORM模型的仿真结果和计算结果比较图12是丢包率为1%和5%两种情况下,CMT-ORM模型的仿真结果和计算结果随CWmax变化时的情况,并设累积应答因子b为1,传输往返时延为固定值100ms,由式(19)即[]ECW=8/3b槡p可知,窗口大小的平均值为[]ECW=51.64,我们设置CWmax为5MSS(MaximumSegmentSize,最大报文段长度),10MSS,20MSS,30MSS,40MSS和50MSS.CMT-ORM模型的仿真结果和计算结果如图12所示.图12仿真结果与模型计算结果比较(当丢包率为从图12中可以看出,当CWmax为5时,模型的仿真结果与计算结果基本一致,模型能很好地对吞吐量进行预测.随CWmax增加,吞吐量也逐渐增大,当丢包率不断变大时,模型仿真结果与计算结果间出现一定偏差,不同丢包率也对模型准确度有一定程度的影响.其中当丢包率为1%时,模型仿真结果和计算结果比较接近.当丢包率增加到5%时,两条曲线的间距变大,模型的准确度有所下降.但从整体来看,CMT-ORM模型的计算结果仍能很好地反应吞吐量的变化趋势.为了多角度验证CMT-ORM模型的准确度,下面我们分析CWmax为固定值,路径传输时延不变,模型的计算结果和仿真结果随丢包率变化情况,因为不同丢包率时路径的E[CW]不同,当丢包率为0.1%,0.5%,1%,2%,3%,4%和5%时,路径的E[CW]的近似值分别为50MSS,40MSS,30MSS,20MSS,10MSS,5MSS,这里我们分别选取CWmax为50MSS和5MSS两种情况下(但不失一般意义),对模型仿真结果和计算结果进行比较,如图13所示.图13仿真结果与模型计算结果比较(当CWmax为图13表明,当丢包率为0.1%时,模型能较好地对吞吐量进行预测,但随丢包率不断加大,模型的仿真结果与计算结果呈现一定偏差,路径CWmax不同对模型准确度也产生一定的影响.当CWmax为5MSS时,模型仿真结果与计算结果相差不大.当CWmax增至50MSS时,两线段间距有一定程度的加大,模型准确度有一定程度的降低.但从整体来看,模型的计算结果仍能很好地反应吞吐量的变化趋势.经上述分析可知,无论是发送窗口受接收窗口影响,还是发送窗口不受接收窗口影响,CMT-ORM模型均具有较高的准确度.5结论本文首先建立了一个CMT数据传输的模型,并在该模型的基础上考虑CMT在拥塞控制,慢开始和超时重传不同阶段对吞吐量的影响,提出了一种多路径并行传输情况下的吞吐量建模方法.根据受限接收缓存下发送窗口是否受接收窗口影响将模型分为两种情况进行设计,得到一个稳态吞吐量关于RTT、RTO和丢包率的函数关系.同时为验证模型准确度,通过选取不同带宽、时延、丢包率和CWmax进行模拟仿真实验.模型仿真结果和计算结果的比较表明,本文所设计的模型能较好地对吞吐量变化趋势进行预测,有较高准确性.并通过与现有多路径并行传输情况下的吞吐量建模的比较验证模型的先进性.本文为在建立CMT吞吐量模型中验证其准确度,对仿真结果和计算结果相比较,结果比较理想,但因仿真环境的局限性,不能对实际网络环境的各种因素进行仿真,尤其是其不测的动态变化情况,所以下一步的工作重点将所设计的模型移植到实际互Page13联网环境中加以测试,并进一步优化所设计的模型,提高其准确度.
