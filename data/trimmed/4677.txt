Page1自适应代理粒子的非线性有限元与不可压缩流体实时耦合袁志勇廖祥云郭甲翔童倩倩郑棉仑(武汉大学计算机学院武汉430072)摘要该文提出了利用生成自适应代理粒子来实时耦合TLED非线性有限元与隐式不可压缩流体的新方法.首先,该文根据固体表面的局部高斯曲率对固体表面采样生成不同分辨率的代理粒子.其次,为了避免代理粒子和流体粒子间过早的耦合,文中设计代理粒子光滑核函数的支持域为椭球型.其次,为了防止流体粒子在固体发生形变时产生穿透现象,作者在每个时间步长内对固体表面进行重采样生成代理粒子,并自适应地改变其支持域的大小,最后,在处理边界时运用正则化方法计算边界处粒子的物理量,并利用基于统一计算设备架构的GPU并行计算方法对耦合过程进行加速.实验结果表明,该文提出的方法能在减少采样粒子、提高计算效率的同时,实现实时逼真的流固耦合效果.关键词自适应代理粒子;流固耦合;非线性有限元;不可压缩流体;GPU加速1引言随着计算机仿真和虚拟现实技术的快速发展,近年来基于物理的流固耦合仿真及其相关应用已经成为一个重要的研究方向.它在计算机动画、游戏开发和工业设计等领域具有巨大的应用价值.流固耦合涉及流体和固体之间的许多复杂交互,包括边界处理、耦合力计算和耦合响应等方面.近年来,研究人员提出了许多基于物理的流固耦合仿真方法.这些方法通常可分为网格法和无网格法.网格法适用于固体的建模,但不适用于处理流体的自由表面和流固耦合中边界处的运动,然而无网格法可以有效地解决这些问题[1].光滑粒子流体动力学(SmoothedParticleHydrodynamics,SPH)[2]是近几年应用最广泛的无网格法,它的粒子特性使其天然的适合于流体的建模仿真①.但是SPH方法在模拟流体时不能保持流体的不可压缩性,导致仿真场景中部分流体效果失真,如何使SPH方法具备不可压缩性对于提升仿真场景的视觉效果具有重要意义[3].因此,为了获得逼真的流体视觉效果,本文采用隐式不可压缩光滑粒子流体动力学(ImplicitIncompressibleSmoothedParticleHydrodynamics,IISPH)[3]建立不可压缩流体模型.对可形变固体而言,非线性有限元能够较好的模拟变形仿真的效果,本文运用完全拉格朗日显式动力学(TotalLagrangianExplicitDynamics,TLED)有限元方法[4]建立非线性有限元固体模型.目前研究人员提出了一些最新的方法[3-8]用于耦合流体与复杂的固体模型,例如刚体和可变形固体,并取得了较好的效果.通过在固体表面三角网格上采样代理粒子或边界粒子用以实现固体与流体的耦合是最近比较流行的一种方法.Akinci等人[5]在刚体表面采样均匀分布的边界粒子与流体粒子相互耦合,所采样的边界粒子被用于修改边界流体的密度以及计算与流体粒子间的双向耦合力.Akinci等人[6]进一步扩展他们的方法并将其用于弹性固体与流体的耦合,提出了在弹性固体形变后采样均匀分布的边界粒子和重采样边界粒子的方法,并取得了不错的流体与可形变固耦合效果.但是,他们的方法在每个步长都对固体表面所有三角面片以同样分辨率进行无差别采样,这样对于复杂仿真场景或较大的固体模型而言会导致采样粒子数量过大,从而增加计算负担.实际上,在几何复杂区域(如尖、角、弯曲的区域)粒子间耦合过程的情况差异较大,而在几何简单区域(如平滑区域)粒子间耦合情况差异较小.如果能够根据固体表面的几何特点自适应地对几何复杂区域以较高的分辨率采样代理粒子,而对几何简单区域以较低的分辨率采样代理粒子,通过调整代理粒子的属性以满足流体与固体耦合过程的准确性要求,那么将能减少代理粒子的数量,进而提高整体的计算效率.本文针对非线性有限元固体与不可压缩流体的耦合,提出了一种在可形变固体表面自适应采样代理粒子的方法,按照固体表面局部高斯曲率采样生成不同分辨率的代理粒子,并设计其支持域为椭球型用于避免过早发生耦合.在固体产生形变时,重采样代理粒子并调整代理粒子的支持域大小以实现更加精确的耦合计算,在处理边界时采用正则化方法计算边界处粒子的物理量,并采样基于统一计算设备架构(ComputeUnifiedDeviceArchitecture,CUDA)的GPU并行计算方法对耦合过程进行加速.本文在减少采样粒子、提高计算效率的同时实现了实时逼真的流固耦合效果.2相关工作基于物理的流体仿真在计算机动画、游戏开发和工业设计等领域有着广泛的应用.采用SPH方法离散化Navier-Stokes方程是近年来用于流体仿真最常用的方法,并已成功地运用于各种流体仿真应用中[8-12].Müller等人[13]提出了基于SPH的交互式流体和自由表面仿真的方法,他们直接从Navier-Stokes方程中推导出流体的密度,通过添加表面张力项来仿真表面张力,而无需使用质量守恒方程和对流项,从而降低了仿真的复杂性.常元章等人[14]基于SPH方法,通过对传统Navier-Stokes方程添加弹性应力项,提出了一种新的统一模拟牛顿流体和粘弹性流体的方法,该方法具有良好的可控性,仅仅通过调节参数就可以模拟不同粘弹性、不同类型的流体.Macklin等人[15]提出了一个统一粒子框架,采用粒子对流体、弹性体和刚体建模,并使用了GPU并行计算以获得实时的仿真.最近,流体仿真①http://www.matmidia.mat.puc-rio.br/~tomlew/pdfs/lucas_wuw.pdfPage3的研究工作集中在不可压缩流体的仿真上[3,8,16-18].Becker和Teschner[19]提出了一种弱压缩性SPH方法(WeaklyCompressibleformofSPH,WCSPH)来仿真体积守恒的低粘性流体.Solenthaler和Pajarola[20]提出了预测修正不可压缩SPH(Predictive-CorrectiveIncompressibleSPH,PCISPH)方法,采用预测修正的方案来确定粒子的压力,相比WCSPH方法,该方法使用更少的时间便可获得相同的流体仿真效果.Ihmsen等人[3]提出了隐式不可压缩SPH(ImplicitIncompressibleSPH,IISPH)方法,通过结合对称的SPH压力和SPH离散化的连续性方程获得压力泊松方程的离散形式,并且可以基于速度计算密度的偏差.Cornelis等人[8]提出了IISPH-FLIP(Fluid-Implicit-Particle,FLIP)方法来仿真不可压缩流体,该组合方法能够在实现质量守恒的条件下以较少的内存实现不可压缩流体的仿真.基于物理的固体形变仿真通常采用有限元方法,因而具有较高的准确性,但有限元方法同时具有较大的计算量.Miller等人[4]提出了完全拉格朗日显式动力学(TotalLagrangianExplicitDynamics,TLED)有限元方法,能够快速有效地对非线性有限元弹性体进行建模和仿真.TLED有限元算法是在单元层次上进行预计算,可避免整体刚度矩阵的求解,并支持大规模的并行计算[7],Taylor和Joldes等人[21-22]分别在GPU上使用TLED方法实现了手术仿真中的实时非线性有限元分析.为了解决流固耦合问题,Solenthaler等人[23]将流体和固体都采用粒子表示,采用SPH邻域搜索来计算接触表面的粒子作用力,但基于粒子的线性弹性模型,当形变较大时,其精确性和稳定性相比非线性有限元模型较差.Schechter和Bridson[24]在流体和固体粒子表面的支持域内设置了一层ghost粒子,这样既保证了固体粒子的稳定性,又防止了流体粒子和固体粒子互相穿透.Paiva等人[25]将流体粒子的速度分解为切向速度和法向速度,在耦合过程中对它们分别进行处理.Ihmsen等人[26]结合PCISPH方法提出了一种用于不可压缩流体边界处理的新方案,其允许在求解过程中使用更大的时间步长,他们还提出了一种能独立于场景且自动估计合适的时间步长的方法,使得总的计算时间减少.Yang等人[7]在流体粒子与固体表面网格碰撞处生成代理粒子来与流体粒子相互作用,并计算代理粒子的位置、速度、质量和法向量.Clausen等人[27]描述了拉格朗日有限元方法在统一框架下仿真流体和固体的行为,该框架可以用同一个网格模型对弹性体、塑性体和流体进行建模.Akinci等人[5]提出了适用于单向和双向流体与刚体耦合的边界处理方法,在刚体表面均匀采样边界粒子.该方法应用到IISPH[3]的流固耦合的应用中,通过进一步扩展被用于耦合弹性固体与SPH流体,并在弹性固体形变后对其进行重采样[6],且该方法被用于Cornelis等人[8]关于流体与固体耦合的工作中.Müller等人[28]基于七点规则对固体表面三角面片进行采样,获得了较好的流固耦合效果.Si等人[29]以每个三角面片两边上的单位向量为基对三角面片采样.Müller等人[30]提出的positionbaseddynamics对粒子的位置进行强制迭代约束,来满足耦合的约束条件,以防止穿透现象的发生,该方法具有较高的准确性,但是由于迭代约束的存在也加大了整体系统的计算负担.Batty等人[31]通过提出一种新的变分法在相对粗糙的笛卡尔网格上实现了流体与不规则几何刚体的快速、鲁棒、精确的耦合仿真,该方法将刚体的边界条件离散化到网格中,并按照固体表面曲率的不同分别予以计算,与SPH流体和自适应采样的代理粒子的耦合方法具有较大区别.He等人[32]提出了一种交错的无网格方法,在每个时间步长内生成一系列的交错粒子将速度场从压力场中分离,因此能够非常方便地实现自由表面流体和刚体的耦合,但该方法不适用于流体与薄片型固体的耦合,且仅通过惩罚力来防止穿透现象,未对流体与可形变固体的耦合做相关工作.Adams等人[33]根据流体粒子距流体模型中轴的距离定义其局部几何特征值,并基于此设定采样条件,对流体进行自适应的采样,减少几何特征简单区域(如液体内部、靠近厚而平坦液体表面的区域)的采样粒子数量,并动态地对液体重采样,将计算资源集中到几何特征复杂区域的计算上,但是该方法会降低流体的仿真精度.3不可压缩流体和非线性有限元固体建模为了获得逼真的流体和固体形变视觉效果,本文采用隐式不可压缩光滑粒子流体动力学(IISPH[3])建立不可压缩流体模型,采用完全拉格朗日显式动力学TLED有限元算法[4]建立非线性有限元固体模型.Page43.1不可压缩流体建模SPH方法的基本思想是将连续的流体描述为相互作用的粒子群,每个粒子携带物理量,包括质量、速度、密度等.通过求解粒子群的动力学方程并跟踪每个粒子的运动轨迹可以获得整个粒子系统的物理行为,而每个粒子的物理量可通过粒子支持域内所有粒子的加权求和近似获得.隐式不可压缩光滑粒子流体动力学(IISPH[3])和标准的SPH方法不同,IISPH通过迭代求解线性方程组来求解压力.为了建立求解压力的线性方程组,IISPH采用连续方程和投影策略的离散形式[34],而且线性方程可以转换为非矩阵形式进行高效求解.IISPH是一种基于密度变化率的半隐性的密度预测技术,密度预测方程通过直接离散t时刻的连续性方程Dρ/Dt=-ρ·狏得到,由前向差分公式Dρ/Dt=(ρi法计算速度散度·狏i=-1/ρi是有(ρi(t+Δt)-ρi其中:Wij为光滑核函数,t+Δt的粒子相对速度狏ij(t+Δt)=狏i(t+Δt)-狏j(t+Δt)是未知的,它依赖于未知的t时刻的粒子压力,压力又与t时刻的粒子压强线性相关.采用半隐性的欧拉方法来更新粒子位置和速度,方程(1)中的速度可以被重写为狏i(t+Δt)=狏i(t)+Δt(犉adv其中:犉p是除压力外的其他力,如重力、粘性力等.由投影策略可将t+Δt时刻的速度分解为其他力产生的速度狏advi=狏i(t)+Δt犉adv狏pi=狏i(t+Δt)-狏adv的粒子密度分解为压力产生的密度和其他力产生的密度:ρi推出:由方程(1)和狏ppi=Δt2∑jρ而后寻找防止流体压缩的粒子压力,即通过压力修正t+Δt粒子密度的偏差,使ρi中ρ0为静态密度,可以得到Δt2∑j其中犉p式计算得到[2]犉pi(t)=-mi∑j其中pi式中κ和γ是控制刚度的系数.将式(6)代入式(5)中,可以得到形如犃(t)狆(t)=犫(t)的线性方程组,其中犫(t)对应方程(5)的右侧,对于每一个粒子有如下形式的方程:为了能够求解方程(8),必须获得∑j体形式.首先,对方程(6)两边都乘以Δt2/mi,得到Δt2犉p其中犱ii=-Δt2∑j同理可得Δt2犉p程(5),可得ρ0-ρ∑jmj犱iipi+∑j由于粒子i和粒子j互为邻域,因此∑k也包含了pi将方程(11)代入方程(10),则方程(10)可写为ρ0-ρ∑j由于∑j如式(13)形式:Page5对比式(12)和(13),我们可以得到∑j≠iaijpj=∑j使用RelaxedJacobi方法迭代求解式(13)中的pips+1其中:s为迭代次数;ω为松弛系数;aii和∑j≠i别如式(14)和(15)所示.求解出pi之后可根据式(5)i(t),而后可以通过式(17)和(18)获得粒子求解犉p在下一时刻的速度和位移:3.2TLED非线性有限元固体建模可形变固体的非线性有限元模型的动态平衡方程可描述为其中:狌n为节点位移;犕为常数质量矩阵;犚n为节点力向量;犓(狌n)为整体刚度矩阵,与节点位移为非线性关系;犇为阻尼矩阵,可定义为犇=α犕,其中α为常数,且质量矩阵犕和阻尼矩阵犇近似为对角矩阵[36].Miller等人[4]采用TLED计算非线性有限元动态平衡方程中的刚度项犓(狌n)狌n=∑i犉(i)n是由四面体有限元单元i中应力造成的全局节点力,对于t时刻的给定单元,t犉通过式(20)计算:其中t0珘犛是向量形式的第2类Piola-Kirchhoff应力,t0犅TL是应变-位移矩阵,0V是初始时刻单元的体积.TLED非线性有限元方法使得不必获得整体刚度矩阵犓(狌n),就可以在单元层次上计算由单元应力产生的节点力的分布.由于质量矩阵和阻尼矩阵近似为对角矩阵,因此有限元的平衡方程变得可以在单元层次上进行求解,并且能够对形状函数的空间导数进行预计算,从而减少模拟时的计算量[36],这些特性使得TLED非线性有限元方法非常适合在GPU上进行大规模的并行计算.4耦合仿真4.1自适应代理粒子生成本文根据固体模型表面的局部几何特征自适应地采样,在固体模型的表面三角片上根据局部高斯曲率计算生成不同分辨率(即粒子间隔)的代理粒子和不同大小的光滑核半径.固体模型表面局部变化剧烈且具有复杂几何特征的区域所生成的代理粒子间隔较小,支持域光滑核半径较小,代理粒子的采样分辨率较大;而局部变化平缓且具有简单几何特征的区域,代理粒子间隔较大,光滑核半径较大,代理粒子的采样分辨率较小.为了避免代理粒子光滑核半径过大而导致过早的发生耦合现象,本文将代理粒子光滑核函数的支持域设成椭球型(详见4.1.3节),在固体表面法向方向代理粒子的核半径和流体粒子相同,切向方向则根据局部高斯曲率来设定每个切向光滑核半径的大小.为了防止穿透现象的发生,在固体发生形变后根据新的局部高斯曲率对固体表面重采样代理粒子,并自适应地改变切向光滑核半径的大小,采用正则化方法修正耦合处的物理量.本文方法可在降低采样代理粒子的同时保持几何复杂区域的细节,并且允许将计算资源集中在几何复杂区域,提高计算效率并实现逼真的流固耦合效果.4.1.1局部高斯曲率本文高斯曲率实际反映的是曲面的弯曲程度,曲面的高斯曲率越大意味着曲面的光滑程度越低,对于一个固体模型而言,高斯曲率较大的区域通常是耦合情况较为复杂的区域.Meyer等人[37]提出了一种可以灵活地估算曲面重要几何性质的方法,包括任意三角网格顶点的曲率,此方法的基本思想是把光滑曲面看作是一簇网格的极限或者线性逼近,把三角网格每个顶点的度量性质看作是此空间网格在此点一个小邻域的平均度量.对于离散的三角网格模型顶点pi斯曲率κ⌒其中:m是顶点pi周围三角形面片数量;θj是pipj和pipj+1的夹角.AM(pi)为图1中的阴影区域面积:Page6如果△pipjpj+1是锐角三角形,则Sj是多边形pipjpj+1cj的面积,其中pj和pj+1是△pipjpj+1边的中点,cj是锐角△pipjpj+1的外心.如果△pipjpj+1是直角或钝角三角形,则Sj是△pipjpj+1面积的二分之一,即Sj为以pi为顶点、钝角对应边的中点和另两条边的中点相连形成的多边形的面积,其恰好为三角形面积的一半.对于任意一个三角形面片,本文定义了3种类型的局部高斯曲率:第1种是三角形顶点的局部高斯曲率,即为顶点的高斯曲率;第2种为三角形3条边上的局部高斯曲率,第3种为三角形面片内部的局部高斯曲率.设三角形3个顶点的高斯曲率绝对值从大到小的顺序分别为珔κG(A)、珔κG(B)、珔κG(C),定义三角形面片内的局部高斯曲率如式(23)所示:珔κG(T)=λA珔κG(A)+λB珔κG(B)+λC珔κG(C)(23)另外3条边的局部高斯曲率分别为图2均匀采样的边界粒子(a)和自适应采样的代理粒子(b)λA,λB,λC,τ1,τ2是权值,有1λAλBλC0,1τ1τ20,本文选取λA=0.5,λB=0.3,λC=0.2,τ1=0.6,τ2=0.4.4.1.2代理粒子的自适应分布本文在固体模型的三角片上根据局部高斯曲率计算生成不同分辨率(即粒子间隔)的代理粒子和不同大小的光滑核半径.局部高斯曲率越大,则所生成的代理粒子分辨率越高、粒子间距越小、代理粒子的切向光滑核半径越小.由于高斯曲率的值范围变化较大,为了方便计算,本文将局部高斯曲率归于区间,η[η1]2G,珔κmin其中珔κmax值,本文中η1三角网格顶点,我们直接在顶点上生成一个代理粒子,设其法向和切向光滑核半径与流体一致皆为hf.对于边上E的代理粒子,其间距为ds-E=hf/2·珔κG(E(最短边的法向方向采用扫描线算法[3]生成代理粒子,其间距为ds-T=hf/2·珔κG(T(图2显示了均匀采样粒子(a)和本文自适应采样方法采样的代理粒子(b)对比,在几何复杂区域采样的代理粒子较多,而在几何简单区域采样的代理粒子较少.Page74.1.3代理粒子的支持域本文根据局部高斯曲率以不同密度对固体表面采样代理粒子,采样的代理粒子数量越少的三角面片,其上的代理粒子支持域半径则越大.如果垂直于三角面片的轴向半径过大,则会导致粒子在距离三角面片还较远时便已进入代理粒子的支持域,受到耦合作用力,导致过早耦合现象的发生.本文将代理粒子光滑核函数的支持域设计为椭球,将垂直于三角面片的轴向半径设置为较小值,以代理粒子为中心建立局部坐标系狀x,狀y,狀局部坐标系下的方程为其中:a、b为赤道半径,c为极半径,如图3所示;狀x、狀y分别沿着椭球的赤道半径并与a和b重合;狀z沿着极半径方向,狀x、狀y、狀z都为单位向量,每一个支持域内可能包含了流体粒子和代理粒子.对于△ABC面片内部的代理粒子,狀x和狀y在平面切向方向上,狀x沿着扫描线方向并且狀y垂直于狀x,狀z为平面法向方向,初始情况下,设置此椭球形核函数支持域在狀x、狀y方向的光滑核半径皆为hs-T=2ds-T=hf/珔κG(T),狀z方向的光滑核半径为hf,即a=b=hf/珔κG(T),c=hf.对于△ABC边上的代理粒子,以AC为例,狀z图3代理粒子的支持域2D和3D示意图4.1.4代理粒子自适应更新当流固耦合现象发生时,代理粒子根据其在固体表面三角形面片内的重心坐标与三角面片顶点保持对应关系.流体与固体的耦合力作用于代理粒子上,代理粒子则根据其重心坐标将耦合力映射到固体表面三角面片的顶点上,耦合力转化为固体非线性有限元顶点受到的作用力.固体随之发生形变,为了防止固体形变后代理粒子间距拉大而导致穿透现象和过早耦合的发生,本文将重新根据固体表面局部高斯曲率重采样代理粒子,同时根据固体表面三角面片形变的大小自适应地改变代理粒子的切向光为法向方向,为与此边相邻的两个三角形的法向量均值.切向方向上,狀x沿着边AC方向,则狀y=狀x×狀z.所以AC边上椭球形核函数支持域在狀x方向的光滑核半径为hs-AC,狀y方向的光滑核半径为hf,狀z方向的光滑核半径为hf,即a=hs-AC,b=c=hf.对于AB边上的代理粒子,有a=hs-AB,b=c=hf,对于BC边上的代理粒子a=hs-BC,b=c=hf.对于代理粒子狓i邻域网格内的流体粒子狓j,判断其是否位于代理粒子狓i光滑核函数支持域内,只需要计算出该粒子在局部坐标系下的位置矢量狉j=狓j-狓i,以及该粒子在局部坐标系下的坐标(x,y,z)=(狀x·狉j,狀y·狉j,狀z·狉j),并代入局部椭球方程(28),看是否满足,如果满足则位于支持域内.对于此椭球形的光滑核函数支持域,本文设计了一个相应的椭球型的光滑核函数:s-T,h2其中:ξ为系数,狉=狓-狓i,由于代理粒子在椭球的各个方向上有不同的光滑核半径h,本文引入椭圆对角矩阵犌.对于△ABC内部的代理粒子,则犌=diag(h2粒子,则可以得到犌=diag(h2得到AC边和BC边上的代理粒子相应的犌.P(犌狉)是关于犌狉的多项式,本文采用的是三次样条多项式.滑核半径的大小.本文将代理粒子的切向光滑核半径初始化为其粒子间距的2倍,而后随三角面片的形变而自适应调整.对于边上的代理粒子,以三角形的边AB为例,具体过程为:设lAB为三角形AB边的初始长度,那么形变之后AB边的长度为lAB,形变后的边长比值为ηAB=lAB/lAB,那么AB边上的代理粒子的切向光滑核半径hs-AB=2ηABds-AB,同理,对BC、AC两边同样采用此方法得到hs-AC和hs-BC.设三角形的初始面积为S,形变后三角形的面积为S,那么设ηT=S/S,那么三角面片内代理粒子的切向光滑核半径为hs-T=2η槡Tds-T.Page84.2耦合力的计算和边界处理在计算流体粒子和代理粒子的耦合力时,以代理粒子为中心进行计算[5],采用式(30)计算:其中:Kc为耦合系数;mf和ms分别是流体粒子和代理粒子的质量,而后采用动量守恒定律计算流体粒子的耦合响应:狏f和狏f-next分别是流体粒子当前速度和下一时刻速度.对于代理粒子,则根据其在三角面片中的重心坐标与3个顶点的重心映射关系,将每个代理粒子的耦合力映射到三角面片的顶点上,而这些顶点所受的力即为TLED非线性有限元算法中的节点所受外力.为了处理SPH核函数在边界处不连续的问题,减少因此带来的计算误差,本文采用正则化的方式求解边界处代理粒子和流体粒子的物理量A:A=∑j∑j4.3基于CUDA的GPU并行计算非线性有限元固体与不可压缩流体的耦合过程需要进行大量的计算,当流固耦合仿真场景中粒子数目较多时很难实现实时的流固耦合仿真.本文运图4基于CUDA的GPU并行计算用基于CUDA的GPU并行计算方法来加速流固耦合的计算,使得流固耦合仿真达到实时性的要求.基于CUDA的GPU并行计算是以线程为基本单位的高度并行计算方式,GPU线程以网格的方式组织,每个网格又包含若干个线程块,同一线程块中的众多线程拥有相同的指令地址,可以并行执行且能够通过共享存储器实现高效的数据通信.在流固耦合场景初始化阶段,我们先对不可压缩流体和非线性有限元固体模型进行预处理,预先计算出并行过程中经常使用且不会改变的量,如有限元单元的节点链接关系、粒子的属性常量、有限元质量矩阵、阻尼矩阵等.而后将所需要用到的物理量从CPU内存载入至GPU内存中,其中将常用到的不变的量载入常量内存中,以减少并行计算过程中的内存访问时间.在并行计算过程中运用线程块和共享内存以实现高效并行执行和通信.首先并行求解固体几何表面的局部高斯曲率,并自适应地生成代理粒子;其次求解IISPH不可压缩流体的运动;而后并行求解代理粒子与流体粒子的耦合过程,并将代理粒子所受的耦合力通过重心坐标映射到TLED非线性有限元模型的单元节点处,以求解固体模型的形变;最后,当固体模型发生形变时,将计算结果传输至CPU内存渲染.在物体形变后,需重新计算固体几何表面局部高斯曲率,重采样自适应地生成代理粒子,而后继续上述过程直至结束程序,并行计算过程如图4所示.Page95实验结果与分析为了验证本文方法的有效性,我们分别使用了兔子、章鱼和怪兽的模型进行IISPH不可压缩流体和TLED非线性有限元固体的耦合实验.实验平台为:(1)硬件:英特尔Intel?Xeon?E3-1230CPU,3.30GHz,8GB内存,显卡GeforceGTX650Ti;(2)软件:VisualStudio2012,Mitsuba①,OpenGL.5.1不可压缩流体与可形变固体的耦合当流体与固体耦合时,可形变固体在流体的作图5非线性有限元球体模型与不可压缩流的耦合效果5.2方法对比表1与图8表示在怪兽模型上分别使用文献[3,5-6,8,28-29]与本文方法进行对比的仿真实验数据和流固耦合效果,所有实验均使用了基于CUDA的GPU并行计算来对流固耦合过程进行加速.从表1和图8的结果可以看出,相比于其他方法,本文方法减少了采样粒子,具有更高的效率,且实现了逼真的流固耦合仿真效果,帧率达到了30.1fps,满足仿真的实时性要求.实验结果表明本文方法在保持逼真的流固耦合仿真效果的同时降低了计算成本.用下会发生形变,为了在固体形变时仍实现逼真的流固耦合效果,本文将重新根据固体形变后表面局部高斯曲率重采样代理粒子,并根据固体表面三角面片形变的大小自适应地改变代理粒子的切向光滑核半径的大小.图5为非线性有限元球体模型与不可压缩流的耦合效果,球体在水流的冲击下发生较大的形变,而后慢慢恢复原有形状.图6为非线性有限元平板模型与不可压缩流的耦合效果,水流冲击平板并停留在其上,造成平板的形变.图7为非线性有限元怪兽模型与不可压缩流的耦合效果,水流冲击怪兽模型导致其弯曲,而后恢复原有形状.图9和图10分别展示了兔子与不可压缩流体的耦合效果的流体渲染图和粒子渲染图.实验中,兔子模型的非线性有限元单元数为3216,流体粒子数为25920,均匀采样粒子数为32666,本文方法的采样粒子数为7055.从图9和图10的对比中可以得出以下结论,采用均匀采样[3,5-6,8]的代理粒子(第1排图片)所得到的耦合仿真效果与本文方法(第2排图片)所得到的耦合仿真效果没有显著的差别,然而对于同样的仿真场景和同样的兔子模型,采用自适①http://www.mitsuba-renderer.org/Page10图6非线性有限元平板模型与不可压缩流的耦合效果图7非线性有限元怪兽模型与不可压缩流的耦合效果表1使用不同采样方法的流固耦合实验数据对比流体粒子数模型怪兽怪兽怪兽怪兽2000200020002000Page11图8使用不同采样方法的流固耦合效果图9采用均匀采样方法(第1排图片)和本文方法(第2排图片)的兔子与不可压缩流体耦合结果流体渲染图应代理粒子的场景,其流固耦合仿真帧率达到了19.3,而采用均匀采样的代理粒子其帧率仅为5.6,由此可知本文方法的计算效率更高,获得了实时逼真的流固耦合仿真效果.5.3收敛性分析目前比较成熟的SPH方法,例如文献[3]和文献[20]中的方法,所有粒子的支持域通常为球形支持域,且已具有较好的计算收敛性.本文将代理粒子Page12图10采用均匀采样方法(第1排图片)和本文方法(第2排图片)的兔子与不可压缩流体耦合结果粒子渲染图的支持域设置为椭球形,由于代理粒子是连接不可压缩流体和非线性有限元固体的纽带,因此我们分别从流体和固体的角度考察将球形支持域改为椭球形支持域后对收敛性的影响.对流体而言,将代理粒子的支持域设置为椭球形,将会影响着支持域内部所有流体粒子的状态(受影响的流体粒子集合称为Q).因此本文主要考察粒子集合Q的平均密度的变化,如果Q的平均密度能够收敛到初始化密度值(初始化密度为15)附近,则说明将代理粒子支持域设置为椭球形后仍具有良好的收敛性,能够保证液体的不可压缩性.且本文方法与代理粒子支持域为球形的情形进行对比,当代理粒子支持域为球形时,实际上所有流体粒子将与文献[3]中的IISPH流体情形一致,而文献[3]中已证明IISPH具有良好的图11代理粒子球形支持域与椭球形支持域的平均密度和平均速率的收敛性对比收敛性.实验结果如图11所示,当代理粒子支持域为椭球形时,流体粒子集合Q的平均密度将收敛于初始化密度为15附近,且与支持域为球形时的收敛情况非常接近.实验结果表明,代理粒子的支持域设置为椭球形之后,本文方法中流体的计算仍将具有良好的收敛性.对固体而言,本文将固体采样粒子的支持域设置为椭球,并将采样粒子的受力通过重心映射转换为固体有限元模型顶点的受力,流固耦合发生后,流体和固体模型最终会稳定下来,有限元顶点的平均速率收敛于0,则整个系统是收敛的.将本文方法与将支持域设为球形时的平均速率的演变进行对比,实验结果如图11所示,当代理粒子支持域分别为椭球形和球形时,其速率演变非常接近,最终将收敛于Page130,这说明本文方法中固体的计算仍将具有良好的收敛性.5.1节、5.2节及5.3节的实验结果表明,本文的方法采样的代理粒子较少,提高了流固耦合的计算效率,同时获得了实时稳定逼真的流固耦合仿真效果.然而本文也具有一定的局限性,如本文方法在稀疏的采样区域内的耦合力在平滑长度太大时可能产生扭曲.本文方法亦未对流固耦合时的过采样以及能量守恒问题进行考虑.6总结针对非线性有限元固体与IISPH液体的耦合,本文提出了一种根据固体表面模型的局部高斯曲率自适应采样代理粒子的新方法,且设计代理粒子的支持域为椭球形以更精确地实现耦合,在固体形变时自适应地重采样代理粒子以防止发生穿透现象.本文方法将计算资源集中于几何复杂区域,同时降低了代理粒子的数量.此外,本文采用基于CUDA的GPU并行计算对流固耦合过程进行加速.实验结果表明本文的方法提高了流固耦合的计算效率,同时获得了实时逼真的流固耦合仿真效果.在未来的工作中,我们将在本文方法的可行性以及局限性方面进行改进,并对流固耦合过程的能量守恒问题进行分析以完善本文方法.此外,我们会考虑增大粒子的规模并且采用GPU并行计算以仿真大规模应用场景中的流固耦合.
