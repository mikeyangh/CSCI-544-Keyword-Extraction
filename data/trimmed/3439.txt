Page1多数据源联合协作的AdHoc网络分布式最优资源分配算法陈怡1)胡瑞敏2)高戈2)1)(华中师范大学计算机科学系武汉430079)2)(武汉大学计算机学院武汉430072)摘要近年来基于AdHoc网络的智能化视频监控等新型网络应用逐渐兴起和普及,该类应用需要考虑多个数据源的联合协作.但是现有AdHoc网络的资源分配机制主要针对每个独立的数据流,在实现资源分配过程中没有考虑不同数据之间的依赖关系,导致针对联合任务的资源利用效率不高,成为制约网络服务质量提高的重要因素之一.文中首次把基于任务的评价参数纳入到无线AdHoc网络最优分配模型中,使得资源分配模型能够描述构成任务的各数据流之间的依赖关系.提出了基于任务利用率的动态资源调节算法(MissionutilitybasedResourceDynamicalgorithm,MRD).证明了该算法满足非线性问题最优约束,所求数据源发送速率满足系统全局最优.仿真结果表明,提出的MRD算法能够提高多数据源协作AdHoc网络利用效率.关键词协作;任务;效用1引言进入21世纪,伴随着全球信息化和数字化进程的逐步深入,无线网络技术获得了迅猛发展,无线网络技术承载的各种多媒体业务类型已深入到社会生活的各个方面,扩展了传统的网络应用模式.高效的音视频压缩格式、价格低廉的高清网络摄像头和灵活组网的AdHoc网络,延展了人们可视、可听、可控场景,为现场新闻发布会、安防监控等新兴应用提供了必要的基础.因此,如何提高网络服务模式对新兴应用的支持越来越受到广泛重视.1999年卡内基·梅隆大学的研究者首次提出网络提供服务的源节点之间存在依赖关系[1],需要对各应用资源进行整体规划,提高网络利用效率.文献[2]对多数据源联合协作工作的场景进行了分析.图1表示了不同位置的网络摄像头依据空间相关性“拼接”合成一幅完整的监控画面来对一个监控区域联合进行监控的场景.多摄像头联合工作,克服单一摄像头取景空间局限性,扩展目标监控范围,提高监控任务质量.视觉认知心理学研究发现,整体图像主观质量取决于画面质量最低的部分.图像整体质量与图像分块之间存在一定约束关系,因此,对存在多数据源联合协作工作的网络,需要具备相应的网络服务方式,保证任务完成的质量.协作的概念受到越来越多的重视,至2009年8月文献[1]的引用次数高达162次.协作的思想与网络朝着自组织、自调节、自动化、智能化的方向发展,越来越受到研究界的重视.2研究现状1999年卡内基·梅隆大学的研究者首次提出联合协作的概念[1].并指出存在一些复杂的网络应用依赖提供服务的多个源节点之间相互协作,但目前缺乏相应的网络服务模式.文献[3]指出“自然界已经表现出协作物种在许多生态环境中的竞争超过了自私物种,把协作的方法引入到无线通信系统可以达到更高的服务质量、完成更复杂的网络任务.从通信的角度来看,协作包含了大量的技术,这些技术利用了多个实体协同互动的优势以及共享资源,所有这一切都是为了提高性能”.对多数据流联合协作关系的研究一直延续到21世纪初才有进一步的发展,原因主要有2个方面:(1)多数据协作优化是NP难问题;(2)网络设备及音视频采集处理单元仍比较昂贵.随着各种设备价格越来越低、体积越来越小,自组织无线AdHoc网络满足了需要灵活组网的多数据源联合协作的任务要求.对基于任务协作的AdHoc网络服务模式的研究引起了国内外多家研究机构的重视.2008年,宾夕法尼亚州立大学和IBM研究院[4]首次给出基于任务协作无线AdHoc网络带宽资源分配模式.每个任务有3个相关参数(Um,犃,C),Um为任务的效用函数,效用函数越大越好;犃为转发节点流经数据流路由矩阵;C为转发节点传输能力.同年,Eswaran等人[5]对算法给出严格的利亚普洛夫稳定性分析,证明了该算法的全局稳定收敛特性.2008年Globecom会议上,Rowaihy等人[6]把网络物理拓扑因素考虑进多个节点协作的网络,利用多个节点协同增加任务内数据流的服务带宽.2009年,Eswaran[2]为了改进原有模型无法保证重要数据流服务质量的缺陷,提出了基于协作多数据源优先分级的方案.把任务内部数据源按优先级划分,把资源优先分配给级别高的数据流,以区分不同数据流对任务的贡献,采用梯度法求解凸规划优化模型,得到任务内各数据源最优速率.但该方案实验结果显示链路长度严重影响数据流分配带宽,并不完全取决于数据流优先级.同年,Eswaran等人[7]以NUM模型为基础,通过把底层无线节点能量消耗数据纳入到任务协作模型中,把“发送节点发射能量不超过节点剩余能量”为最优问题约束条件,构造无线网络发射能量和带宽之间的代价关系,获得任务效用最大和节点发送能量最小的Nash均衡.通过改进方案,缓解了任务内带宽与能耗之间的矛盾,得到了任务内各数据流带宽和能耗的合理折中.鉴于某些任务的效用函数时变特性,Eswaran等人[8]针对以前任务效用仅考虑当前时刻最优,未考虑一段时间内网络任务效用最大的缺陷,采用二Page3阶连续可导任务效用函数,重新建立非线性优化模型.该方法提高了任务在较长一段时间的效用总和,提高了具有时变特性的多数据流任务服务质量.2010年的文献[9]是最新的多数据源任务模型MCS.该模型与上述模型不同,不再采用静态效用函数U(xs),而是对效用函数进行如下修正:其中,AccuracyA(t)为时刻t反馈回的任务对服务性能指标的判断值,由任务接收端决定.模型不断获取用户的主观效用,把用户对任务质量的满意程度与网络参数映射起来,利用反馈信息修正网络原始效用函数,提高网络对任务服务的自适应性,提高网络利用率.基于无线网络协作机制的研究国内起步较晚,主要集中在物理层、数据链路层和网络编码[10].综上所述,寻找合理的网络多节点任务协作控制措施,进行基于任务协作进行的研究属于起步阶段,并逐渐受到重视[11].3基于协作任务的关键问题3.1问题的提出网络任务的复杂化使任务同时需要多个无线节点数据流协同工作,各数据源共同决定协作任务用户的感官质量.目前,任务协作方法依据事先制定的静态资源效用函数曲线根据价格求得资源.这种分配资源方式适合相互独立竞争资源的数据流,不满足有联合约束关系的数据流.因为在现有网络控制机制下,各数据流带宽之间的平衡关系容易被外界打破,部分数据流带宽缺失造成整个任务质量下降或失败.下面对一个监控场景举例说明.场景1.图2显示以链式静态拓扑为例的常见场景监控.4条视频数据流分别传回节点5,“拼接”成一个更大尺寸的监控图像.假设各链路带宽大小为2Mbps,采用文献[12]中GPA算法和文献[2]中MST算法分别得到网络收敛状态下各数据流最优带宽分配.从图3(a)中观察可得,各条数据流收敛后所得带宽差异很大.如果以数据流平均带宽作为期望带宽,则带宽偏差最大为134%,最小为23%,任务内数据流负载平衡性很差.研究从节点1到节点4传回视频流构成的图像质量,可以发现图像各部分质量好坏差异过大.原因在于:现有的网络分配资源机制基于单个数据流静态的效用函数,难以保证任务对数据流分布关系的约束,导致监控任务失败.通过对任务接收端流量大小进行分析可以发现:现有资源分配框架中多数据源联合任务完成效率不高,成为制约网络服务质量提高的重要因素之一.已有的研究已经证实节点间友好的相互配合会增加无线网络性能[13],优化多数据源联合协作的AdHoc网络控制机制的任务亟待进行.本文期望提出在原有静态效用函数基础之上,把任务对资源的要求量化引入到原资源模型,修正含协作依赖的自适应调节控制技术,根据任务的需要自动调整数据流带宽分配,从而进行有针对的预留资源.改善多数据源协作的任务服务质量,提高网络利用效率.3.2协作及任务的定义定义.文献[3]和文献[2]给出了协作和任务相应的定义1.协作.协作是指一组实体共同工作、Page4以实现共同或单个目标的策略.协作可以看作给予、共享或允许做一些事情从而获得一些好处的行为.协作策略要求每个实体都评估各自的处境,并根据实情作出决定.定义2.任务.多个网络实体通过一定协作策略和协作行为共同完成的目标.通信协作(communicationscooperation)的目标是在不牺牲过多效率的情况下,遵守一定的通信协议和传输方式,保证某些特殊目标或有协作需求的服务.定义3.多数据源任务协作模型.假设网络中存在一组数据流i(i∈1,2,…,N)相互独立,经过资源竞争的多跳路径,传输至相同的接收端,共同完成一个服务UM,则多数据源任务协作模型目标定义为Maximize{UM},UM=Λ[u1(x1),…,ui(xi),…,uN(xN)],xi=argmaxxi∈Ii其中,Λ[·]表示相关性函数;xi为数据流i的速率;ui(xi)为数据流i的资源利用率;UM为任务M的资源利用率.3.3现有技术及存在问题的分析当前具有代表性的多数据源资源分配技术主要分为两类:一类是2006年Yuan等人[12]提出的GPA算法为代表的独立数据流竞争模型;另一类是2009年文献[2]提出的MST数据流线性相加模型.2006年Yuan等人[12]的GPA算法首次针对独立数据流通过多跳路径在AdHoc网络传输的情况建立了数据模型.GPA算法以协议模型为干扰模型,在满足网络资源约束的条件下分析了多跳数据流带宽资源分配非线性优化模型.通过利用率函数Uf(xf)来描述每一个端到端的数据流f∈F:+→+,该函数表示了相关终端用户的满意度.假设在区间[0,]内,利用率函数Uf(·)是递增的连续可微分凹函数,且利用率函数Uf(·)是相加性函数,这样总体的分配速率利用率x=(xf,f∈F)就等于∑f∈F约束条件为e∈E,∑f∈Fe(e∈E)为网络中的资源要素,Ce为网络容量,Ref是指单位数据流f使用的资源要素e的数量.通过分布式算法求解,可以得到优化框架下数据流速率最优值矢量.每条数据流在网络资源竞争时是独立进行的,在这种情况下任务的资源优化等同于对每条数据流带宽资源的优化.2009年的文献[2]提出了一种多数据源协作优先分级的MST传输方案.方法是:把任务内数据源按优先级划分,把资源优先分配给级别高的数据流,以区分不同数据流对任务的贡献,任务的效用计算方法为各独立数据流效用的线性相加.max∑s∈S∑m∈Ms.t.∑(k,s)∈l其中fm(犡)是任务内数据流矢量犡优先级函数,犇表示固定优先级常数矩阵.采用梯度法求解凸规划优化模型,得到任务内各数据源最优速率.通过事前对多数据源的优先级区分,期望能够保障任务某些重要的数据流在网络传输过程中受到更多的重视,缓解网络恶化造成的重要数据流丢失.MST算法对任务内所有数据流采用简单比例相加的计算方法.分析图3,以GPA为代表的独立数据流竞争模型和以MST为代表的数据流效用线性相加模型的任务都不满足监控任务对图像质量的要求,链路长度及资源消耗严重影响每一个数据流所分配的带宽,即使采用数据流优先级的改进方式也收效甚微,达不到监控图像期望的各数据流速率分布.原因在于依靠静态的效用函数是开环控制,不能描述网络环境下数据流与任务之间的相互关系,必须建立任务对数据流动态的反馈模型,优化多数据源任务的资源分配效率.4基于协作机制无线AdHoc网络模型4.1静态效用函数本文首先采用R-U(Resource-Utility)带宽-效用函数描述静态的数据流与任务间的依赖关系.需要指出资源效用函数描述的是数据流对所分配带宽的满意程度,曲线具体形式已有西门子等大型研究机构专门进行研究,本文采用文献[14]给出的混合数据类型表示的效用函数.对于任务m,效益函数表示为∑s∈S其中s是数据流集合S中一个独立的发送源;um,s(bm,s(l))表示源节点s发出的数据流,在带宽等级为l时产生的效用.Page5采用离散效用函数形式,把任务的资源效用分级,每一级内各数据流带宽与效用的关系一一对应.每条数据流把资源效用函数近似为轮廓凸的曲线,再分段线性化,具体形式参见文献[15].对于数据源s所需带宽的某个分段资源,定义其为s的一个子流k,带宽大小限制为bim,sBkm,s-Bk-1m,s.网络传输该子流产生的边际效用(单位效用)为λkm,s=ukm,s-uk-1m,sBkm,s-Bk-1m,s.则基于任务效用最优化问题表述如下:max∑m∈MSubjectto∑m∑s其中,犡m是组成一个任务m所有的数据源矢量,Bjmax是无线干扰区域j的最大可用带宽,bmaxm,s是数据源s请求的最大带宽.4.2动态调节机制一个动态系统,资源需要重新分配,效用函数仅仅代表了时间t时刻的暂时效用值(ui(t)).用户效用函数的最终目的是使应用(用户)可以量化地对资源分配结果进行评价.系统分配资源给一个新的应用流,或者更改应用流资源的大小,都可以看成是资源的提供者与用户重新协商QoS(QoSContract)的结果.R-U函数把资源分配的结果对应一定的效用,并以曲线表示,因此网络协商的过程被简化了.独立的数据流竞争,采用静态资源效用函数大大提升了网络利用率,但对于存在多数据源协作竞争的网络,需要进一步研究合理的网络服务模式.本文采用了动态调整资源边际效用(单位效用)的方法,让任务接收端对资源分配结果进行评价,然后把评价结果带入下一次分配的方式产生影响.思路来自2006年Calin发表在《IEEETransactiononParallelandDistributedSystems》的“Time-AwareUtility-BasedResourceAllocationinWirelessNet-works”[14].该文把丢包率、分配间隔数值量化,修正静态的R-U函数,优化无线基站内的带宽资源使用效率.考虑到各数据流与任务有一定的相关性,原有模型主要考虑数据流独立的利用效率,没有对任务利用效率整体考虑,导致任务的完成质量不高.本文在任务接收端把应用的需求量化,建立任务内数据流资源效用函数,把数据流协作相关信息引入到资源再分配模型中.动态修正原静态资源效用函数,达到合理利用资源,提高网络服务性能的目的.具体做法是:首先,采用最小逼近原则.对于可能出现的数据组合,选择满足率大于0小于1最大的那一个组合进行调节.小于1表示该数据流带宽不满足任务等级;大于1表示该数据流带宽大于或等于此任务等级.通过动态调节这一等级内各数据流带宽分配,优化网络的资源配置.比如:假设网络内,一个完整的任务由5个数据流组成.在某个时刻,任务接收端对任务m个数据流判断后得到下列矩阵形式:犃=矩阵犃内每个元素Ai,j有3种表示形式,用来指示收到的数据流情况.Aij(m)=0表示任务m等级为i的数据流j不满足要求;Ai,j(m)=1表示任务m等级为i的数据流j刚好满足需要;Ai,j(m)=2表示任务m等级i的数据流j大于所需要的带宽标准.对于一个由5个数据流组成的任务m,矩阵的行表示任务可划分的等级.在本例中,i=4,表示采用4种不同的任务等级;j=5表示任务m是由5个数据流工作组成.接收端对矩阵犃按行搜索,搜索条件为l=minicount(Ai,j=0)A~,j{任务要求的数据流数目最少的那个等级.在本例中,可以判断得到l=3.基于默认任务的重要性高于单个数据流,所以找出任务等级提高的临界点,修改各数据流单位效用函数.然后,根据任务内带宽不匹配情况,修正边际效用(单位效用),增加带宽或减低带宽.当数据流带宽比例已经合理时,也修正数据流边际效用,稳定数据流竞争带宽能力.修正算法满足以下约束A1)~A3).A1)增加带宽.设任务流m中源端s的带宽原始级别为j,需要增加带宽级别到d.则这两级效用之差为uscale=um,s(d)-um,s(j),1jdk,其中,k为任务中效用级别的最大数;l表示调整后的原带宽级别l;z表示调整后的原z带宽级别.调整方式为um,s(l)=um,s(l)-(d-l)uscale,1l<d,um,s(z)=um,s(z),dzk.A2)减少带宽.设任务m内数据源端s的带宽原始级别为j,需要减低带宽级别到d.则这两级效用之差为Page6uscale=um,s(j)-um,s(d),1djk,其中,k为任务中效用级别的最大数;l表示调整后的原带宽级别l;z表示调整后的原z带宽级别.调整方式为um,s(l)=um,s(l)-(j-l)uscale,1l<j,um,s(z)=um,s(j),jzk.A3)保持带宽.需要稳定带宽,避免网络资源再分配失去已有带宽份额.设任务m中数据流源端s的带宽原始级别为j,j+1为相邻高一级带宽.设uscale=um,s(j)-um,s(j+1),1jk,其中,k为任务中效用级别的最大数;l表示调整后的原带宽级别l;z表示调整后的原z带宽级别.调整方式为um,s(l)=um,s(l)-(j-l)uscale,1l<j,um,s(z)=um,s(z),jzk.定理1.当um,s(m∈M,s∈S)按照满足约束条件A1)增加带宽,即存在最优解xm,s满足系统最优化问题(2).证明.按照条件A1)增加带宽后,1l<d且uscale=Δum,s(l)=um,s(l)-um,s(l-1)const.且um,s(z)=um,s(z),dzk,因此,Δum,s(z)=Δum,s(z),dzk.则修正后的资源-效用仍为凹函数,满足最优解存在条件约束[15].定理2.当um,s(m∈M,s∈S)按照约束条件A2)减少带宽,即存在最优解xm,s满足系统最优化问题(2).证明.按照条件A2)减少带宽后,1l<j且uscale=Δum,s(l)=um,s(l)-um,s(l-1)const.且um,s(z)=um,s(j),jzk,因此,Δum,s(z)=0,jzk.Page7则修正后的资源-效用仍为凹函数,满足最优解存在条件约束[15].定理3.当um,s(m∈M,s∈S)按照约束条件A3)修改资源效用函数,即存在最优解xm,s满足系统最优化问题(2).证明.1l<j且uscale=const.Δum,s(l)=um,s(l)-um,s(l-1)且um,s(z)=um,s(z),jzk因此,Δum,s(z)=Δum,s(z),dzk.则修正后的资源-效用仍为凹函数,满足最优条件约束[15].修改资源效用函数的原理在于:修正系统效用函数后,资源边际效用(单位效用值)改变.网络中的图5MRD算法流程图bidkm,sq表示子流km,s在最大干扰区域q的出价m,sq表示子流km,s流经最大干扰区域q时,属于q的链路数.yp表示最大干扰区域的门槛价格.λkm,s表示子流km,s效用,λkm,s=ukm,s-uk-1m,s(3)在数据流发送端,选择最小允许带宽作为发送速率.5实验验证由于Yuan等人[13]的GPA模型和Misra等资源分配单元为避免系统总效用下降,采用的分配原则是按照单位效用从高到低分配带宽份额.4.3MSD算法的分布式实现算法MSD的分布式实现如图5所示.(1)在数据流接收端,分析用户质量,调节各条数据流的单位效用,并反馈回源端.单位效用(MarginalUtility)定义为u(r)=dU(r)“用户每增加一个单位资源或服务额外获得的满足感”[14].依据经济学理论,分配模式是依据资源单位效用从高到低的顺序进行.(2)在网络干扰区域(maximalclique)内,由执行计算的节点独立地完成数据流竞价和资源分配,并重新更新资源价格.网络干扰区域价格计算机制如下,各符号含义如表1所示.人[2]的MST模型都是采用静态效用函数建立系统数学模型,结果非常接近,见图3.所以本文实验1~3采用MST的仿真结果进行对比.同时为了对比动态效用修正算法的效率,采用最新文献MCS算法[9]与本文提出的MRD算法进行对比.实验1.数据流效用函数相同采用图2所示链式无线AdHoc静态拓扑结构.干扰距离和传输距离同为250m,节点和节点之间相距250m.4条数据流分别从节点1~4传输回节点5,各条链路容量均为2Mbps.为简单起见,每条数据流分为10级,每级容量为0.2Mbps.资源效用为[0~10]的凸曲线,实验1假设任务内各数据流Page8效用函数曲线相同,即与lg2x曲线轮廓大致一致.从图6(a)、(b)可以看出,MRD算法相比MST算法,数据吞吐量从最大0.72Mbps缩小到0.4Mb-ps;MST算法吞吐量变化范围最大为0.62Mbps,MRD算法吞吐量变化范围最大为0.2Mbps;相对图6各数据流流量和相对误差再观察图6(c)、(d)可以发现MCS算法吞吐量最大为0.55Mbp,仍然大于MRD算法;MCS算法的吞吐量变化范围为0.36Mbps;相对误差最大为98%,仍然大于MRD算法的60%.因此,MRD算法采用的动态效用修正方案可以实现任务内多数据源均衡资源分配,提高整体资源利用率.实验2.数据流效用函数不同本实验主要考察对同一地点收集不同类型数据的任务场景.例如,在同一任务等级内的视频流和音频流所需带宽是不一样的,不同的资源效用曲线对表2实验中采用的混合数据业务分组164256128601800300VoiceService&AudioPhone220010005003007200600VideoMultimedia31282000512301200120FileTransfer从表3中可得,MRD算法所得的数据改变了f1和f2的吞吐量,任务内数据流带宽分别增加增强了30Kbps和100bps.该实验显示,当网络中出现误差从最大137%缩减到最大60%.虽然单个数据流的吞吐量没有提高,但任务接收端数据流分布更为合理,所以本方案不是提高单个数据流的效用,而是以任务为整体提高资源利用率.应不同类型的多媒体流.本实验数据采用文献[15]提供的混合类型数据,如表2所示.本实验采用文献使用的JAVA工具对数据流做网络层以上的仿真,默认10Kbps带宽为一个数量级.实验仍然采用实验1的场景和分级方法.2条数据流f1、f2分别表示类型1和类型2联合组成的音频和视频多媒体任务,同时从节点1发送传递到节点5.同时有类型3数据流f3从节点2传输到节点3,类型3数据流f4从节点3传输到节点4.表2最右一栏表示效用函数的归一化参数,用于确定不同类型的效用函数凸轮廓.多数据源任务与文件传输类完全“弹性流”共存时,能够获得更多的带宽份额,提高多媒体任务的服务质量.Page9f1f2300f3210f4210从表4中可得,MRD算法与MCS算法相比,f1和f2的吞吐量数据流带宽分别增加增强了10Kbps和20Kbps;非弹性流f3和f4的吞吐量分别缩减10Kbps和20Kbps.该实验显示,MRD算法和MCS算法都可以在多媒体任务数据流与“弹性流”共存时获得更多的带宽份额.但MRD算法与MCS算法相比,任务内多媒体数据流带宽占用比例略有提高,也更符合多媒体用户对服务质量的要求.f1f2f3f4实验3.随机网络拓扑.在实验2的基础上采用如图7所示拓扑结构,在面积为600m×600m的区域上随机分布10个无线节点.假设节点8、节点2、节点1和节点3分别传输类型2数据流至节点0组成一个任务.且同时有2条类型2的数据流独立传输,分别从节点7到节点6、从节点8到节点4.节点传输距离与干扰距离相等,同为250m;数据流每一级设为10Kbps;链路容量为2Mbps.图中粗线线段表示虚拟可连通无线链路.图8表示的是网络收敛状态下任务内数据流吞吐量.观察可得,MRD算法和MCS算法可以有效调整任务内各条数据流带宽分配,但从图中观察可得,MRD算法的数据流吞吐量总是优于MCS数据流吞吐量.在本实验由于n0节点收到的4条视频流不在同一等级,则计算效用时按照数据流最低的级别计算.图9表示了网络输入负荷与网络效用的关系,图中横坐标表示比值,纵坐标表示网络整体效用.横坐标点1表示的网络吞吐量对应图8中的网络实际输入负荷.可以看出,随着网络数据流负荷增加,整体网络效用增加.MRD算法比MST算法网络效用平均增加1.3;MRD算法比MCS算法的网络整体效用增加3.0.图中需要特别注意的一点是MCS算法的整体效用低于其他两个算法,根本原因是因为MCS算法不是基于优化框架的.6结论本文针对现有AdHoc网络的资源分配机制在实现网络利用效率最优的过程中没有考虑不同数据之间的依赖关系,导致针对联合任务的资源利用效率不高的问题,提出了基于任务利用率的动态资源调节算法.首次把基于任务的评价参数纳入到无线AdHoc网络最优分配模型中,证明了该算法满足非线性问题最优约束,所求数据源发送速率满足系统全局最优.仿真结果表明,提出的MRD算法能够提高多数据源协作AdHoc网络利用效率.未来的工作主要集中于以下几个方面:(1)评估数据分级数目对网络性能的可能影响;(2)研究加入时延、节点处理能力等因素的全局最优化资源分配策略.Page10
