Page1一种增强的OAEP方案EAEP3+刘英莎余文秋苏雯李英男赵志文(北京师范大学网络安全与保密通讯重点实验室北京100875)摘要著名的OAEP(OptimalAsymmetricEncrypationPadding)是一种随机化的消息填充技术,由于其具有较高的效率和良好的安全性而被广泛认可.然而随着研究的深入,人们逐渐发现其中存在的漏洞.该文介绍了几种OAEP的改进方案,其中OAEP3+为目前安全性最高的改进算法,该文中在OAEP3+的基础上提出了一种增强型结构———EAEP3+(EnhancedAsymmetricEncryptionPadding),该结构不仅仍然满足IND-CCA2安全等级,而且在密文不可区分性方面得到了进一步的提升,同时算法的执行效率也有提高.最后,该文分析证明了EAEP3+的效率与安全性.关键词OAEP;OAEP3+;明文可意识性;选择性密文攻击(CCA);网络安全;信息安全1引言随着信息技术的发展和广泛应用,信息安全问题日益严峻,在对信息进行加密的同时,对身份认证的需求也很迫切.并行签密技术将加密和签名有机地结合,使得加密和签名过程能够在同一个模型中高效率地完成,不仅保证了信息的安全性,同时也保证了信息的可信性.OAEP技术是由Bellare和Rogaway[1]在1994年首先提出的,这种填充技术由于本身的安全性有限,只能应用在RSA算法中,后来有很多在效率上和安全上的改进方案.Fujisaki和Boneh[2-3]提出了两种改进方案,2001年Shoup[4]提出了shoup攻击,此前的方案在shoup攻击模型中,都不堪一击.不久,Shoup提出一个改进方案OAEP+,通过增加一次置换来抵御shoup攻击.同Page2年Okamoto和Pointcheval[5]提出了一种快速安全的OAEP改进方案———REACT.2002年Coron等人[6]将PSS-E推广到PSS-ES中.2003年Phan和Pointcheval[7]提出一种安全性可以证明的非对称加密变换———OAEP3(OAEP3round),这种结构是当时对OAEP最优化的改进.2006年Cui等人[8]在OAEP3的基础上把加密函数所需的随机串ρ规定为(m‖r)的Hash,改进后安全性有所提高,但当解密机输出填充算法中的随机串时,它仍不能达到IND-CCA2安全性.2009年胡予濮等人[9]针对这一漏洞提出改进———OAEP3+.OAEP3+从两方面很好的弥补了原来的漏洞,但是也增加了运算复杂度.于是我们对OAEP3+做了一个增强,提出EAEP3+.这种结构在保证安全性不变的基础上提高了算法执行的效率.文中我们证明了效率的提升,并在RandomOracle模型下证明该方案仍然满足IND-CCA2的安全性等级.本文第2节介绍OAEP及其改进技术;第3节提出我们的增强方案EAEP3+,并分析其安全性和效率;最后在结论部分对论文进行了总结.2OAEP技术及其改进2.1OAEPOAEP是一种随机化的消息填充技术,主要应用由两个杂凑函数构成的菲斯特网络,输入明文m,随机数r以及为验证消息而填充的0冗余串.见图1.当时Bellare等人声称该方案使基于陷门置换的加密方案可以达到IND-CCA2安全性.其实由于其存在漏洞只达到了IND-CCA1.变换过程可以表示为OAEP(m,r)=(s‖t)其中,s=(m‖0k)G(t),t=rH(m‖0k).2.2OAEP3在2003年的亚密会上Phan和Pointcheval提出一种安全性可以证明的非对称加密变换———OAEP3(OAEP3round)[7].该方案实现了当时对OAEP最优化的改进.它使用3个杂凑函数:将明文变换到陷门单项置换的定义上,变换后巧妙地隐藏了明文.由于经过三轮异或运算,攻击者若想从密文中获得明文的信息,必须知道该密文对应的全部置换原像.其变换过程可以表示为OAEP(m,r)=(u‖t)=(sG(t)‖H(s)r),其中,s=mF(r),t=H(s)r,u=sG(t).加密消息m∈{0,1}k,随机串r∈{0,1}l.结构见图2.OAEP3能在加密函数的完全单向性假设下达到IND-CCA2的安全性.文献[7]中给了OAEP3安全性更为严格的证明.然而OAEP3也存在漏洞,即不具备明文可意识性.该漏洞主要由两方面造成:(1)无法确定字符串r是否是填充过的;(2)加密算法c=f(u‖t‖ρ)中用到的随机字符串ρ可以任意选择.2006年Cui等人[8]把加密所需的随机字符串ρ改为hash(m‖r),但是问题仍然存在[10-11].2.3OAEP3+2009年胡予濮等人[9]提出了OAEP3+,它是在OAEP3上做出的改进,该方案成功地填补了漏洞,但是也带来了新的问题,即在缩减密文尺寸上不理想[12].OAEP3+的结构见图3,需要5个Hash函数:加密消息m∈{0,1}k,随机串r∈{0,1}l,变换过程为ω=F(m‖r),s=G(ω)(m‖r),t=ωH(s),e=sU(t),ρ=V(e‖t),c=f(e,t,ρ).Page3解密时先计算(e‖t)=f-1(c),其中,f代表选择的加密算法,f-1为对应的解密算法.然后进行逆运算,s=eU(t),ω=tH(s),(m‖r)=sG(ω),并且验证ω=F(m‖r)与ρ=V(e‖t)是否成立,若成立就返回m,否则为非法密文.根据文献[9]中的安全性证明可以看出该方案成功地抵御了漏洞,实现了明文可意识性[13].但是由于将m与r组合在一起,引起算法结构的改变,导致安全性的优势下降(见3.2节),同时它的结构也较为繁琐.3EAEP3+3.1算法描述我们在保证安全性的前提下将OAEP3+进行增强,简称为EAEP3+.结构见图4.EAEP3+需要5个Hash函数:加密消息m∈{0,1}k,随机串r∈{0,1}l,变换过程如下:n=N(r),s=mH(n),t=n‖rG(s),e=sU(t),ρ=V(e‖t),c=f(e,t,ρ).解密时先计算(e‖t)=f-1(c),然后进行逆运算s=eU(t),(n‖r)=tG(s),m=H(n)s.并且验证n=N(r)与ρ=V(e‖t)是否成立.3.2安全性分析在随机预言机模型下,预言机先在列表中查询是否有相同的提问.如果列表中没有,则返回一个随机值并将提问和返回值添加到列表中;如果列表中有这样的提问,则直接将列表中的返回值作为该提问的回答.设加密函数f为(t,θ)完全单向函数,特别地,当t为多项式时,θ是可忽略的,我们描述f-OAPE3+的IND-CCA2安全性如下.定理1.攻击者A在时间t内分别向Hash预言机M,H,G,U,V和解密语言机D询问qM,qH,qG,qU,qV和qD次,若A能以ε的概率攻破f-OAPE3+的语义安全性,则存在算法B能以不低于ε-qG+1数f的完全单向性.证明.设PK,SK分别为加密函数f的公钥和私钥.A选择两条消息m0和m1,b=0,1,对mb加密生成挑战密文c,并要求A根据c来猜测b.Game0:加密mb时r∈{0,1}l,n∈{0,1}l,s∈{0,1}l,t∈{0,1}l,e∈{0,1}k,ρ∈{0,1}l+k,并计算h=ms,g=(ω‖r)t,u=se,c=f(e,t,ρ).将(r,n),(h,g),(s,g),(t,u),(e,t,ρ)分别加入语言机列表N-list,H-list,G-list,U-list,V-list.拿到c后,A输出b作为对b的猜测.若用Si表示在Gamei中b=b,根据优势概率的定义可得Game1:随机选取r+∈{0,1}l,n+∈{0,1}l,s+∈{0,1}l,t+∈{0,1}l,e+∈{0,1}k,ρ+∈{0,1}l+k,并计算g=(n+‖r+)t+,u=s+e+.加密mb,用e+,t+,ρ+生成挑战密文c=f(e+‖t+,ρ+),并把(r+,n+),(n+,h+),(s+,g+),(t+,u+),(e+‖t+,ρ+)分别加入N-list,H-list,G-list,U-list和V-list中.其中h+=m+n+.由(r,n,g,s,h,u,e,t,ρ)与(r+,n+,g+,s+,h+,u+,e+,t+,ρ+)有共同的概率分布可知Page4Game2:改变Game1,在生成密文c后并不把(r+,n+)加入N-list中.此时若A向N提问r+时返回的是一个随机值,即挑战密文c与r+并无直接关系,此时P[S2]=1/2.只有在向N提问r+时才表现出与Game1的差异.我们用AskNi来表示Gamei向N提问,则有Game3:继续改变Game2,生成c后并不把(n+,h+)加入H-list中.当A向H询问n+时,不返回h+,而是返回一个随机值.用AskHi表示Gamei中向H询问n+,则有|P[AskN3]-P[AskN2]|P[AskH3](4)Game4~Game6:依次把(s+,g+)、(t+,e+)、(e+‖t+,ρ+)从G-list,U-list和V-list中去除.用AshGi,AskUi,AskVi表示Gamei中提问s+,t+和e+‖t+,则有|P[AskH4]-P[AskH3]|P[AskG4](5)|P[AskG5]-P[AskG4]|P[AskU5](6)|P[AskU6]-P[AskU5]|P[AskV6](7)在Game6中把e+‖t+从V-list去掉后,挑战密文c相当于一个随机串,而与具体的加密算法无关.若此时询问V,只需输出V-list即可攻破f的完全单向性.即综合式(1)~(8)可得Sow|P[AskU6]-P[AskU5]|P[AskG4]-P[AskG5]-P[AskU6]P[AskH3]-P[AskH4]-P[AskN2]-P[AskN3]-P[AskH4]-Sow+P[AskN3]+P[AskH4]+Sowε-qG2k-qN2l+qH2l1+qU2l+l1(9)在证明过程中,我们使用随机预言机代替解密机,即将所有的列表添加到解密列表D-list中.解密由于改进后的方案不需要填充K比特的冗余,提高了加密方案的执行效率.假设使用RSA算法进行加密.我们用哈希运算的次数和RSA运算次数表示时间复杂度,用最大明文(每2048位密文能加密的明文长度)来表示空间效率,对比结果见表1.表1密钥填充方案的性能对比类型OAEPOAEP3+EAEP3+172817281888的时候若(n,h,g,u,ρ)都在相应的列表中,计算c=f(e,t,ρ),并将(c,m,r,n,h,g,u,ρ)添加到D-list中;如果列表中没有应有的询问,则选取一个随机数将列表补齐,最后所有的询问均出现在D-list中.当密文要求被解密时,若c在列表中则返回明文m,否则返回非法明文.与真实预言机相比,D-list可能将合法密文判定为非法密文,一般来说选择密文为合法密文的概率不超过2-l1,故用D-list代替解密机时根据f的完全单向性假设可得,适应性选择密文攻击者A对f-OAEP3+的优势概率ε可以忽略,故Sow可以忽略.根据文献[9]中OAEP3+的安全性证明对比式(10)和(11),不难看出EAEP3+被A攻击的概率有所下降,所以密文的不可区分性有所改善,EAEP3+的安全性得到了保障.3.3效率分析与优化的并行签密相比,时间复杂度的提高并不是很明显,根据文献[3]不难看出,如果我们使用qNqHqGqUqV的列表,则时间复杂度可以表示为τ+(qN+qH+qG+qU+qV)×(Tsearch+THash)+(qd+qNqHqGqUqV)Tsearch,其中τ是单向函数f计算所需要的时间,THash是计算一个单向函数的耗时,qN,qH,qG,qU,qV分别是询问随机预言机N,H,G,U,V的次数,qd是相应的解密时查询随机预言机的次数,Tsearch是查询列表的耗时.Page5虽然改进前后时间复杂度没有变化,但是EAEP3+每2048位密文所对应的明文长度增加了160bit,所以本方案的效率提升了约8%.4结束语本文在OAEP3+的基础上,提出了一种EAEP3+算法,分析证明的结果说明:EAEP3+较之OAEP和OAEP3而言,安全性显著提高,本方案完全达到了IND-CCA2.较之OAEP3+而言,减少了哈希运算的比特数,增加了每2048bit密文所对应的明文长度,提高了算法的效率.因此,本文的研究成果具有较高的应用价值.
