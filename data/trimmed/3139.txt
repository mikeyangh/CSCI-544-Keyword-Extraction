Page1不确定近邻的协同过滤推荐算法黄创光1)印鉴1)汪静1),2)刘玉葆1)王甲海1)1)(中山大学信息科学与技术学院广州510006)2)(南海东软信息技术职业学院广东佛山528225)摘要文中围绕传统的协同过滤推荐算法存在的局限性展开研究,提出一种不确定近邻的协同过滤推荐算法UNCF.根据推荐系统应用的实际情况,对于推荐的每一种场景其实都是不可预先确定的,而文中算法基于用户以及产品的相似性计算,自适应地选择预测目标的近邻对象作为推荐群,同时计算推荐群中推荐把握概率较高的信任子群,最后通过不确定近邻的动态度量方法,来对预测结果进行平衡的推荐.通过实验结果表明,该算法可以有效平衡用户群以及产品群推荐结果所带来的不稳定影响,有效缓解用户评分数据稀疏的情况所带来的问题,并在多个实验数据中,提高了推荐系统的预测准确率.关键词不确定近邻;协同过滤;推荐系统;相似性度量;信任子群1引言互联网的迅速发展以及信息量的暴涨,为用户提供主动推荐的功能越来越多地被应用到各种门户网站和电子商务系统中,来帮助人们更准确、高效地寻找到所需要的信息,这些系统通常会包括用户过去的点击日志、评分和评论等信息,通过这些历史的信息来分析用户的特征并提供推荐服务,给访问者主动推荐最可能感兴趣的信息.采用协同过滤推荐技术的应用领域非常广泛,Tapestry[1]是最早的推荐系统之一,在这个系统中,记录了每个用户对他们阅读文章的观点,这些观点可以被其他用户进行获取.GroupLens[2]、Ringo[3]和VideoRecommender[4]也是较早期的推荐系统,通过协同过滤思想,通过其他人的意见来给用户分别提供新闻、音乐和视频等推荐服务.推荐系统中普遍存在的3大问题:数据稀疏性[5]、冷启动[6]和可扩展性[7]等问题,随着协同过滤推荐系统应用的不断深入,许多研究者提出了一些新的方法来改进基于规则或基于模型过滤的推荐系统的不足,如Park[8]等通过协同过滤结合搜索工具提升Yahoo!的推荐结果;Tomoharu[9]等通过基于最大熵原理协同过滤来推荐用户最可能购买的商品;Yang[10]等提出的基于推论的协同过滤方法;Chen[11]等结合推荐结果的收益进行协同过滤推荐目标用户可能感兴趣的商品.推荐系统近期一个重要的研究趋势是研究个体与个体之间关系的拓展和延伸,例如Chen[12]等通过建立k最近邻及其影响集来计算预测的评分;Liu[13]等通过建立信任群的方式来构建一个Beta分布,来预测用户的相似程度;Jamali[14]等将用户之间的信任关系进行深度搜索,寻找更深层次的相似用户来进行推荐.当前基于协同过滤的推荐研究,主要是针对用户群对产品群的评分预测.往往由于用户与用户个体之间的差异,造成基于用户推荐效果的差异.单对用户群而言,对于每一个预测场景的某个用户而言,用户不固定的,同时预测的产品对象也是不固定的,由于预测场景的不确定性,传统方法存在一些局限性:(1)协同过滤研究中,很多采用kNN方法[2,11,15]来为预测的目标选择推荐对象,也就是选择k个最近的邻居作为推荐对象,这个方法选择的参数k通常具有一定的普遍性,但缺乏特殊性,对具体某个推荐对象而言,这k个推荐对象有可能属于另一个群,而不一定都属于预测目标的近邻群,而且未知用户或产品的相似性近邻数量也不是可以固定的;(2)传统的推荐往往只考虑了某一群的影响作用而忽视另一个关联群的影响作用,或者过分关注某一群体的影响作用[8-9,15-16],由于我们在对未知目标进行推荐之前,我们对他们相关联的近邻对象缺乏足够的分析和认识,从而导致推荐质量的降低.本文主要的贡献:围绕解决上述问题展开研究,并在已有研究的基础上,基于动态规划思想,提出了一种不确定近邻的协同过滤推荐算法(UncertainNeighbors’CollaborativeFiltering,UNCF),根据基于用户以及产品的相似性计算,来自适应地选择预测目标的近邻作为推荐群,同时计算推荐群中对预测目标的信任子群,在充分结合推荐群和信任子群的基础上,提出一种不确定近邻因子分析度量来计算预测目标的推荐结果.通过实验结果表明,该算法相比较传统的基于用户以及基于产品的协同过滤推荐算法,可以有效平衡用户群以及产品群推荐结果所带来不确定的影响,有效缓解用户评分数据极端稀疏情况使用传统性度量方法带来的问题,并显著提高推荐系统的推荐质量.本文第2节给出问题定义以及协同过滤领域研究的基本方法;第3节详细介绍本文主要的贡献:不确定近邻的协同过滤算法,并对算法进行形式化描述以及运算时间复杂度分析;第4节是针对提出的算法进行实验验证,并对实验结果的比较进行分析;最后是本文的小结.2问题定义及基本方法在推荐系统中,用户对所有产品的评价数据库中包含s个用户的集合U={U1,U2,…,Us}和t个产品的集合I={I1,I2,…,It}.用户评分数据集可用一个s×t阶矩阵表示,见表1.U1R1,1…R1j…R1,t…UaRa,1…Raj=?…Ra,t…UsRs,1…Rsj…Rs,t其中,矩阵共有s行代表s个用户,t列代表t个产品.假设某一用户Ua对产品Ij(其中Ua∈U,Ij∈I)的打分为Ra,j,这个评分体现了用户Ua对产品Ij的兴趣和偏好.2.1相似性度量方法相似性计算可以是在用户之间的相似性计算,也可以是产品间的计算.本节中以用户之间的相似Page3(1)标准的余弦相似性.通过向量间的余弦夹性研究为例,也就是基于用户协同过滤方法.角计算度量Sim(Ua,Ub)=cosine(犚a,犚b)其中,Ra,k表示用户Ua对产品Ik的打分值.(2)修正的余弦相似性.为了修正不同用户存在不同评分尺度的偏差,修正的余弦相似性度量方法通过减去用户对所有产品的平均评分来改善这一缺陷.选取用户Ua和Ub共同打分的产品集,也就是用户Ua和Ub打分的交集(IUa∩IUb),定义为I.Sim(Ua,Ub)=a)槡2×∑ik∈Ia是用户a评分的平均值.计算结果Sim(Ua,Ub)其中R-的值落在[0,1]区间中,Sim(Ua,Ub)值越大,则表示用户Ua和Ub之间的相似性越大.(3)相似性度量计算的改良.基于用户之间的相似性计算依赖于他们共同评分的产品,如果共同评分的产品数较少,则这个相似性度量存在一定的偶然性,为了消除这种偶然性带来的影响.Herlocker等[17-18]提出要增加一个关联权重因子来进行计算相似性.在这个基础上,Ma等在[19]中提出了影响性权重的设置,我们定义用户Ua和Ub之间共同打分的产品I=IUa∩IUb,通过设定某个阈值γ,与用户Ua和Ub共同打分的产品数目|I|进行比较.Sim(Ua,Ub)=min(|I|,γ)从式(3)中,我们可以看到满足min(|I|,γ)因此改良之后的相似度量Sim(Ua,Ub)的值域仍然落在[0,1]区间上.如果用户Ua和Ub间共同打分的产品数目较多,满足|I|γ,那么Sim(Ua,Ub)=Sim(Ua,Ub),如果共同打分数较少,那么相似度量值也会相应减少.2.2犽NN协同过滤推荐的结果两个:通常推荐系统对某一个用户Ua的主要任务有(1)在产品集中,选择某一个用户a未曾评分(2)在用户未评分的产品中,预测用户提供评的产品Ij,IjIUa,预测用户对它的评分Ra,j.分中最大的N个产品(N1),选择推荐给用户通过计算用户之间的相似性,基于用户的协同过滤算法为未知的Ij寻找k个近邻(与Ua最相似的k个用户),定义为S(Ua)且|S(Ua)|=k,来预测其评分的分数Ra,j=R-上述公式中,其中R-对其它产品所有打分的均值,Ra,x表示用户Ua对产品Ix的预测评分分数,式(4)中,传统kNN的协同过滤推荐算法是采用k个最相似的近邻用于预测评分.3不确定近邻的协同过滤推荐算法传统的协同过滤推荐算法本质上是利用了群体内(这里面的群体可能是用户群,也可能是产品群)个体与个体之间的相互作用(寻找对当前对象影响力最大的k个邻居)来为当前对象的属性作出预测的过程.但是,面对复杂的、多变的不确定的预测场景,这种预测结果往往是片面的,只考虑了某一群的影响作用而忽视另一个关联群的影响作用,或者过分关注某一群体的影响作用.例如要预测某一个用户对某一件商品的喜爱程度,除了可以通过其他对这件商品有过评价的用户与这个用户的相似性(基于用户协同过滤User-BasedCollaborativeFilter,UBCF)的方法,还可以考虑这个用户评价过的其他商品与这件商品的相似程度(基于产品协同过滤Item-BasedCollaborativeFilter,IBCF)的方法,但是如果这个用户对很多商品均有过评分,但却很少用户对某一件商品进行评分,那么通过基于用户来进行推荐过滤,则推荐准确性会相对较低.在现实生活中往往这两者均不可或缺,这也促使本文的研究开展,从影响的群体之间寻找一个自适应地可随案例数据变化而变化的紧邻因子,同时为当前对象找到受其影响较大的群体,结合两个群体的近邻对象来共同为当前对象的作出预测.3.1动态选择目标的推荐对象群如果仅仅依赖传统的基于用户或者基于产品,尤其是当某一个数据相当稀疏的时候,往往其结果不太理想.在传统的协同过滤算法中,最常见的是使用kNN算法.例如:传统的协同过滤依赖于在所有个体中,寻找相似性最大的k个邻居,但可能所在同一群体内的个数不足k个,那么最大k近邻也会产生一些不相似的个体进行协同过滤,从而导致推荐Page4结果准确性的降低.考虑采用自适应地选择预测目标的方法,可以有效避免人为设置过多的经验值,导致推荐系统无法根据数据的变化,自身进行适应性地调整.因此我们提出采用动态选择目标的推荐对象方法(DynamicallySelectedNeighbor,DSN),在进行近邻对象选择之前,需要界定预测目标的推荐对象应该如何选取,通过定义两个相似度的阈值μ和ν,一个是用于用户间相似度计算的阈值,另一个是用于产品间相似度计算的阈值.我们定义S(Ua)为基于用户选取的推荐集,S(Ij)为基于产品选取的推荐集.推荐集的对象都必须满足相似度大于阈值.我们只考虑选择与目标较接近的作为推荐对象,可以较好地解决传统kNN方法的不足.定义S(Ua)={Ux|Sim(Ua,Ux)>μ,a≠x}(5)计算这两个群的对象个数,分别计算|S(Ua)|=m和|S(Ij)|=n.3.2在推荐对象中选择信任子群针对目标进行推荐对象选择过程中,相似度计算成了主要的衡量指标,但是,在实际的推荐系统中,往往用户的相似度计算,可能仅仅来源于对少数几个产品的打分,甚至可能只有一个共同评分的产品,这样的相似度计算,存在较大的偶然因素,不能代表用户之间的相似性度量.除了要考虑相似度的同时,也需要考虑两者之间共同评价产品的个数.于是,我们根据式(7),来计算共同打分个数大于设定的阈值ε的用户推荐群,定义为S(Ua).同样,通过式(8),来计算目标项目推荐准确率较高的信任子群,定义为S(Ij).S(Ua)={Ux|Sim(Ua,Ux)>μ|IUa∩IUx|>ε,a≠x}(7)S(Ij)={Iy|Sim(Ij,Iy)>ν|UIj∩UIy|>γ,j≠y}(8)计算这两个信任子群的对象个数,分别为|S(Ua)|=m和|S(Ij)|=n.3.3引入不确定近邻因子的概念结合两个群体的推荐结果,往往采用基于用户和基于产品的预测平均值作为结果,或者设定某一经验值,但这些均很难产生较好的推荐结果.在本文中提出的不确定近邻因子的协同过滤框架,改变了原来基于用户或者基于产品来寻找k个邻居的方法,并对两者的预测结果进行一个可调整因子的加权,产生了新的推荐结果.我们提出的不确定近邻的协同过滤推荐算法UNCF(UncertainNeighbors’CollaborativeFiltering),是根据不确定的场景,结合用户以及产品的相似性计算,产生一个近邻因子,通过近邻因子去计算基于用户和产品的预测评分并产生推荐.不失一般性,假设用户Ua对产品Ij的预测评分,按照式(7)和(8),假设有|S(Ua)|=m个,分别为{Ua1,Ua2,…,Uam},而另外寻找与产品Ij近邻的产品集且用户Ua对它有评分,这个产品集定义为S(Ij),同样这个产品集数目|S(Ij)|不固定,假设这个|S(Ij)|=n,分别为{Ij1,Ij2,…,Ijn}.我们需要预先知道m和n的值,也需要了解预测目标准确率较高的推荐方法.定义不确定近邻因子λ和1-λ,分别作为用户群和产品群推荐结果的平衡因子,这两个因子的和为1,两者结合基于用户以及基于产品的推荐来计算推荐的最终结果,我们通过以下过程来计算λ和1-λ:其中作为一个调和参数,以第1种情况为例,当(m+n)>0存在以下4种可能:(1)若m=0同时n>0,则与值无关,明显可见λ=0,表示完全由基于产品的方法进行推荐.(2)当满足=n用户群的推荐和产品群的推荐权重相同,都是0.5.(3)当∈n则λ的值将从0.5逐渐变化为1,而1-λ从0.5逐渐变化为0,表示在用户群和产品群两者之间,更加趋向于采用用户群推荐,当λ=1,则表示完全由用户群进行推荐.(4)当∈0,n[)m时,如果趋向于0时,则λ的值将从0.5逐渐变化为0,而1-λ从0.5逐渐变化为1,表示在用户群和产品群两者之间,更加趋向于采用产品群推荐,当λ=0,则表示完全由产品群进行推荐.因此我们引入这个调和参数,用来协调基于用户以及基于产品的两者之间不同的影响,对两个不同维度的目标对象数进行调和,避免两者影响度不同而造成推荐质量的下降.Page53.4不确定近邻的协同过滤推荐算法基于上述的讨论,对于目标的在线用户Ua以及其他未浏览过的产品Ij,不确定近邻的协同过滤推荐算法UNCF,同时结合用户的最近邻集和产品的最近邻集对用户在产品上的评分进行预测,我们给推荐定义以下推荐公式:Ra,j=烄λ×R-烆(1-λ)×R-a,R-其中R-分的均值,R-打分的均值.公式中根据用户Ua和产品Ij的不确定近邻群进行推荐,假如用户Ua的近邻群为空,即λ=0,则完全按照产品Ij的近邻群来进行协同过滤.反之,λ=1,则是按选择用户近邻的方式来进行预测.3.5算法过程及性能分析算法1.寻找目标产品的近邻对象算法DSN.输入:用户-产品评分矩阵犚(s×t),目标用户Ua,产品输出:可以为未知评分进行协同过滤的近邻用户集和1.在矩阵犚(s×t)中分别计算用户的相似度矩阵和产品的相似度矩阵,并分别保存这两个矩阵犃狉狉_犝狊犲狉犛犻犿(s×s)和犃狉狉_犐狋犲犿犛犻犿(t×t).2.根据输入用户Ua,在步1中保存的用户相似度矩阵中,选取与用户Ua相似度大于μ的近邻对象,作为用户推荐集S(Ua).根据共同打分对象个数大于ε的推荐对象|IUa∩IUx|>ε,得出S(Ua)子群.3.在步1中保存的产品相似度矩阵中,寻找与产品Ij相似度大于ν的近邻对象,作为产品推荐集S(Ij).并根据共同打分用户个数大于γ的推荐对象|UIj∩UIx|>γ,得出S(Ij)子群.在DSN算法中,步1是其它协同过滤推荐算法中常见的一个步骤,而步2、3则是根据近邻阈值的设定,来寻找适合为未知评分进行推荐的协同对象,分别寻找大于阈值μ,ν的近邻,而不像传统的协同过滤寻找k个.由于在步1中,需要遍历所有的用户及客户,因此算法最坏的时间复杂度为O(s2+t2),在实际的推荐系统中,往往是通过离线的方式来对UNCF.输入:目标用户Ua,待评分的产品Ij,调和参数输出:用户Ua对产品Ij的预计评分Ra,j1.根据式(5)和(7),在用户Ua的近邻用户集中,分别计算近邻群及信任子群(分别表示为S(Ua)和S(Ua)),并分别计算它们的数量m和m.2.根据式(6)和(8),在产品Ij的近邻用户集中,分别计算近邻群及信任子群(分别表示为S(Ij)和S(Ij)),并分别计算它们的数量n和n.3.选择合适的调和参数.4.通过m、m、n和n作为输入参数代入到式(9),来计系统中的用户及产品来计算相似度,并只保留满足大于阈值的近邻对象,那么只需要进行定期的更新即可,可以节省相似度计算的时间.在只考虑寻找满足大于阈值的近邻对象中,由于m和n均为常量,那么时间复杂度的计算为O(m+n+m+n)=4×O(1),可以有效避免由于用户数的逐步增多,而导致算法运算数据量的急剧增加.算法2.不确定近邻的协同过滤推荐算法算λ和1-λ的值.Ua对产品Ij的预计评分Ra,j.5.将λ和1-λ的值代入到推荐产生式(10),计算用户在UNCF算法中,通过步1、步2来计算用户和产品的近邻群和信任子集.我们通过在DSN算法中设置的阈值,可以有效控制两个近邻集合的个数m和n为一个常量,因此它的时间复杂度均为O(1),步5中的推荐产生式同样是进行m和n次的求和运算,时间复杂度为2×O(1),因此,UNCF算法的时间复杂度为4×O(1).4实验结果及分析本节通过实验,来检验我们提出算法的推荐质量,并且回答以下几个问题:(1)自适应地选择推荐目标的近邻对象与kNN方法选择k个近邻对象的比较;在不同规模数据集上适应情况的比较;(2)关于调和参数的使用,对UNCF算法推荐结果的影响,是否可以取得一个更好的预测结果;(3)结合UNCF协同过滤算法推荐的结果,与其它协同过滤推荐算法的比较.4.1数据集实验使用的测试数据集是GroupLens研究产品组(http://www.grouplens.org)提供的一个著名电影评分数据MovieLens,它是有10万条记录的数据集,记录了943个用户对1682部电影的评分,Page6每个用户至少对20部电影进行了评分,评分值范围从1~5.5表示“perfect”(非常好),而“1”表示“poor”(差),用户通过对不同电影上的不同评分表达了自己的兴趣.用户和产品的评分矩阵密度为说明此数据集的评分矩阵是相当稀疏的.我们实验分为3组用户进行,首先将数据集随机抽取100、200和300个用户,并且将实验数据的评分矩阵进一步划分为训练集和测试集,我们引入变量x,表示训练集占整个数据集的百分比.例如,x=0.8表示随机地将数据集中的80%都将用作训练集,剩下的20%作为测试集.在本文的实验中,均采用x=0.8.4.2推荐质量的度量标准评价推荐系统推荐质量的度量标准主要包括统计精度度量方法和决策支持精度度量方法两类.统计精度度量方法中的平均绝对偏差MAE(MeanAbsoluteError)易于理解,可以直观地对推荐质量进行度量,是最常用的一种推荐质量度量方法,因此本文也采用平均绝对偏差MAE作为度量标准.平均绝对偏差MAE通过计算预测的用户评分与实际的用户评分之间的偏差度量预测的准确性,MAE越小,推荐质量越高.设预测的用户评分集合表示为{p1,p2,…,pN},对应的实际用户评分集合为{r1,r2,…,rN},则平均绝对偏差MAE定义为4.3动态选择预测目标的推荐对象方法的比较本实验对本文3.1节中提出的动态选择目标的推荐对象DSN方法(DynamicallySelectedNeigh-bor)与传统的kNN方法做了实验进行比较,目的是选择较佳的近邻对象,来进行基于用户的协同过滤,为下一步实验打下基础.我们以选择的k作为横坐标,从1个近邻开始,逐步增加到2,4,8,10,20,30,40,50,60个最近邻,实验结果如图1~图3所示.图1kNN方法与动态选择推荐对象的比较(100个用户)图2kNN方法与动态选择推荐对象的比较(200个用户)图3kNN方法与动态选择推荐对象的比较(300个用户)从图中可以看出,在100个用户的实验数据中,当选择k=5的时候,100u_kNN方法可以取得最优的结果,但在同样条件下的100_DSN方法,比100u_kNN的结果还要更好.同样,在200和300个用户的数据集上的实验,都取得类似的结果.另外,对比100、200和300个用户之间的实验结果,我们可以看到训练的用户数目越多,越容易找到目标用户合适的推荐对象,通过越多用户的训练结果,可以得到更好的推荐结果.通过实验,我们可以看出,动态选择的推荐对象的方法同比相应的kNN方法都要取得更小的MAE,说明动态选择的推荐对象方法可以更加有效地给用户推荐.下面的实验中,基于用户和基于产品的协同过滤推荐,均采用动态选择推荐对象的方法进行实验.4.4近邻因子及调和参数的比率实验这个实验的目的是为了比较引入近邻因子和调和参数的实验情况,基于用户的协同过滤和基于产品的协同过滤作为参考算法进行比较.目的是通过比较,考察应该如何选择适当的调和参数进行协同过滤推荐,平衡基于用户与基于产品之间的推荐结果.实验中,横坐标表示调和参数的取值.因为通过UBCF的预测结果优于IBCF的结果,将调和参数从1开始进行取值,并逐步增加,通过100、200和300个用户的实验,可以看到当参数在较小的时候,其结果可能还不如UBCF方法,但在从1~20递增的时候,3个实验的结果的MAE值逐步减小,均取得比UBCF和IBCF更低的值,说明推荐结果Page7更优.另外,如果当调和参数继续逐步递增的时候,从20~200取值时,也正如我们在3.2节中分析的,λ=×m×m+n逐步趋向于1,结合调和参数的推荐结果逐步趋向于基于用户群协同过滤的UBCF方法.但推荐结果还是优于任意一种UBCF或者IBCF的推荐方法.通过实验,我们得出一个结论,当调和参数在满足一定条件的时候(以100、200和300个用户为例,调和参数在20附近),MAE降到最低.由于调和因子与数据集的关联性非常紧密,与数据集的构成特征以及稀疏性有关,甚至可以理解就是数据集的一个属性,一个可以较好把握数据集基于用户和基于产品对推荐结果产生的影响的一个重要特征.获取这个取值的方法,可以通过对数据集进行训练和计算来获取.4.5推荐目标近邻群与信任子群推荐结果的比较这个实验的目的是为了比较推荐目标近邻群以及信任子群的不同推荐结果,通过比较来验证采用信任子群的推荐结果.我们实验数据集分别为100、200和300个用户,实验中纵坐标采用MAE作为度量标准.在实验图7中,左边柱子表示通过信任子群来进行推荐,即当推荐目标在(m+n)>0的情况.中间柱子表示满足(m+n)>0,通过近邻群推荐结果,右边柱子表示所有测试数据的平均结果.我们可以看出通过信任子群的推荐结果,MAE值均低于在同样数据集条件下近邻群的结果,表示通过信任子群可以获得更高的预测准确性.4.6UNCF算法与其它协同过滤算法的比较本实验的目的,是比较不确定近邻的协同过滤推荐算法UNCF与传统的协同过滤算法以及近期业界比较领先的研究进行比较.选择传统的协同过滤算法UBCF和IBCF,并与文献[19]中提出的EMDP(EffectiveMissingDataPrediction)方法,采用同样的实验数据进行比较.我们的实验采用3.3节的推荐方法来产生推荐,实验中的横坐标表示所预测目标产品的近邻数目,纵坐标采用MAE作为度量标准.在实验中,我们可以看出不确定近邻的协同过滤推荐算法UNCF,比较基于产品和基于用户的协同过滤推荐算法以及EMDP算法,本文提出的图8相关协同过滤推荐算法与UNCF算法的比较(100个用户)Page8图9相关协同过滤算法与UNCF算法的比较(200个用户)图10相关协同过滤算法与UNCF算法的比较(300个用户)UNCF算法都可以获得更低的MAE值,因此推荐的效果更好.当随着所预测产品的近邻数目增加的时候,预测的质量也随之提升,在用户较多的情况下,在200和300个用户的实验结果提升尤为明显.在不同的实验中,UNCF算法均比EMDP算法得到3%~7%的提升.5结论与未来工作协同过滤推荐算法,是推荐系统应用中的一个热门研究,应用的领域也非常广泛,针对预测场景的不确定性,本文从自适应地寻找目标的推荐对象出发,优先选择相似度高且推荐准确率较高的信任近邻群,同时深入分析基于用户和基于产品预测的不同影响,提出了一种不确定近邻的协同过滤推荐算法(UNCF),在不确定的场景中,结合用户以及产品的推荐结果,通过不确定近邻因子及调和参数去计算基于用户和产品的预测评分并产生推荐.实验结果表明,不确定近邻的协同过滤推荐算法对系统的正确推荐起了积极作用.另外UNCF算法在推荐上,由于结合基于用户和基于产品的推荐结果,使得推荐结果可以在更广泛的数据源中获得,而不仅仅在于用户群或者产品群,因此可以较好地解决数据稀疏性的问题,并提高推荐的质量.在本文开头,提到推荐系统研究领域,目前有许多不同的研究思路,如何结合各种不同的研究方法各自的优势,例如双聚类[20]和信任传递[14]等,是当今一个很重要的研究方向.另外,推荐系统中的数据往往是带有一定的时间属性,而且用户和产品本身也是具有一些可以获取的属性,通过结合时间性因素以及产品属性,建立带有这些参数的相关模型,例如本体模型[7]等,对目标产品进行更准确的预测,来提高推荐系统的准确性,也是一个有意义的方向.
