Page1图数据中Top-犽属性差异狇-clique查询孙焕良1)卢智1)刘俊岭1),2)于戈2)1)(沈阳建筑大学信息与控制工程学院沈阳110168)2)(东北大学信息科学与控制学院沈阳110004)摘要紧密子图发现在许多现实世界网络应用中具有重要的研究意义.提出一种新的紧密子图发现问题———Top-k属性差异q-clique查询,找出图中k个节点间属性具有最大差异的q-clique.属性差异q-clique是一种结合图的结构特征和节点属性的紧密子图,在作者合作关系图数据中,该查询可以发现属性(如研究领域或所属单位)上不同的具有紧密合作关系的团队.给出了q-clique的属性差异度量,证明了该问题为NP难问题.采用分支限界策略,提出一种有效求解问题的算法AD-Qclique,同时依照best-first排序思想优化节点访问次序进一步提高算法性能.ACM作者信息数据集上的实验表明,算法AD-Qclique效率远优于基本算法BSL,并且结果中作者皆具有较高的H-index值及广泛的研究领域.关键词图数据;紧密子图;属性差异;分支限界;节点访问次序1引言近年来,由于社会网络、生物信息等领域的快速发展,使得图数据挖掘成为了一个备受关注的研究领域[1].紧密子图是具有特殊结构与性质的子图,紧密子图的发现在许多现实世界网络应用中具有重要的研究意义.例如,社会网络中的社区发现、金融网络中的统计分析[2]、蛋白质交互网络的功能结构发现[3]、电子商务中的协同过滤[4]、病毒式营销中的影响力团体发现[5]等.随着网络内容信息的丰富,一些学者开始研究结合图结构和节点属性进行图挖掘的相关问题并取得了一定的成果,例如团队形成[6]、图聚类[7]、近似子图匹配[8]等.本文提出一种结合图结构和节点属性的紧密子图发现问题—属性差异q-clique查询.作为紧密子图的一种,q-clique是具有q个节点的完全子图.在社交网络中,q-clique可以表示q个相互认识的用户;在作者合作关系网络中,q-clique可以表示q个彼此合作过的作者.例如图1作者合作关系图中的3-cliqueQ1={r1,r2,r3}、Q2={r5,r6,r7}、Q3={r5,r6,r8}、Q4={r5,r7,r8}、Q5={r6,r7,r8}都代表由3个彼此合作的作者形成的团队.属性差异q-clique查询是找出图中节点间属性尽可能地具有较大相异度的q-clique.给定q-clique差异度量,发现k个具有最大差异的q-clique称为Top-k属性差异q-clique.该问题旨在使所找出的q-clique的属性内容尽可能丰富,同时子图中各节点间的属性内容又尽可能的不同.图1中除Q5只含有3种不同的属性值外,Q1、Q2、Q3、Q4都拥有5种不同的属性值,因而它们具有相同的属性内容丰富程度.但属性差异q-clique问题将Q4视为更好结果,因为Q4不仅属性内容丰富,而且节点间彼此各有不同.对于作者合作关系图数据中的属性差异q-clique查询可以发现属性(如研究领域或所属单位)上不同的合作团队,这样的团队更具有活力或发展潜力.作为一种特征q-clique查询,属性差异q-clique查询进一步丰富了紧密子图查询问题.属性差异q-clique查询问题的挑战在于:(1)q-clique的属性差异度量定义及Top-k属性差异q-clique排序;(2)q值不固定的q-clique问题是NP难问题,需要设计高效的查询算法.本文采用二元变量相异度的定义,计算出各邻接节点间的属性相异度并将其作为相应邻接边的边权值,使属性差异的q-clique发现问题转换成最大权值q-clique发现问题.一种简单的解决方法便是先找出图中所有的q-clique,然后计算出它们的差异度,并找出其中具有最大差异度的q-clique输出,从图中删除该q-clique的节点继续查询.但是,当q值不为常量时,该问题为NP难问题,因而随着图中节点数的增加,产生的q-clique的数目将会呈指数增长.由此导致这种方法不仅效率低,而且缺乏良好的可伸缩性.为解决上述问题,本文提出一种分支限界算法AD-Qclique来处理属性差异q-clique查询.在搜索结果的过程中不仅利用图的拓扑结构性质剪去不能形成q-clique的树枝,同时利用边上的邻接节点的属性相异度计算相应分支的差异度上界,产生剪枝条件来减小搜索空间,加快搜索过程.然后,本文依照best-first排序思想提出基于优先次序的AD-Qclique算法,进一步提高算法性能.综上所述,本文主要贡献如下:(1)提出一种节点间属性相异度尽可能大的紧密子图结构查询问题———Top-k属性差异q-clique查询,给出了该问题的形式化定义,并证明该问题具有NP-Hard复杂性.(2)提出一种分枝限界算法AD-Qclique,利用边权值形成剪枝条件,剪切掉大部分不符合要求的节点.提出基于优先次序的AD-Qclique算法,进一步提高算法效率.(3)使用真实数据集在不同参数下对算法性能及有效性进行实验分析.本文第2节综述相关研究工作;第3节定义属性差异q-clique问题;第4节给出解决问题的有效算法;实验结果及分析在第5节中给出;第6节为本文的结论.Page32相关工作随着各种网络数据规模的急剧增长,紧密子图发现相关算法的可伸缩性问题引起了广泛关注[9-12].Cheng等人[9]提出了一种在大规模网络上进行最大clique枚举的外存算法ExtMCE,通过扩展原图的核心部分来实现原图的最大clique枚举.同时,Cheng等人[10]还发明了一种新颖的自顶向下从大k值到小k值递归计算k-cores的外存算法EMcore.算法EMcore对原图进行图划分,每次处理一部分子图,避免随机访问磁盘数据的庞大开销.Huang等人[11]提出了一种基于无参数的聚类分析的社区发现算法,能够发现网络中的中心点、边界点以及具有层级的社区结构,具有良好的可伸缩性.由于现实世界网络构成的图中存在许多不确定性,韩蒙等人[12]提出了在不确定图中发现紧密子图问题,并提出了基于树搜索的TreeClose算法及优化策略.以上工作主要集中于图的拓扑结构特征,而伴随着各种网络的快速发展,网络上海量的内容信息也得到了广泛重视.Lappas等人[6]研究如何在社会网络中找到一个团队既具备完成特定任务的能力,同时团队中各成员间的沟通成本尽可能低.Zhou等人[7]提出了基于结构和属性相似性的图聚类算法SA-Cluster,将属性转化为一种附加的结构,使得属性与结构统一,最终将原图划分为k簇并且同一簇中节点属性值尽可能相同.Zhu等人[8]对同时考虑结构信息和属性信息的近似图匹配问题进行了研究,首先利用算法SA-Cluster对图建立索引,然后对各划分之间的连接关系建立索引,最后使用贪心算法找出最佳路径匹配.Kargar等人[13]提出r-cliques的概念作为一种关键字搜索问题的新方法,要求包含关键字内容的各节点间的最短路径长度不能超过r,使它们之间更加紧密;同时,建立索引避免搜索图中所有的节点,缩减搜索空间.与上述工作相比,本文所提出的Top-k属性差异q-clique查询,在结合拓扑结构和属性内容发现紧密子图的同时,希望子图中各节点属性内容尽可能地具有差异,使得子图中属性内容尽可能丰富且节点的属性内容各有特点.3问题定义本节给出属性差异q-clique问题的背景和相关定义.3.1狇-clique给定一个带权简单无向图G=(V,E,w),其中V是无向图G的顶点集,EV×V是图G的边集,w(u,v)表示以顶点u和v为端点的边的权值,用AG表示图中每个顶点的相关属性.对于图G中每个顶点v∈V,AG(v)表示该节点的属性值,它为一个列表[a1,a2,…,an],其中ai为节点v的一个属性值.以图1为例,图中每个节点代表一位学者,具有“研究领域”属性,图中边表示彼此具有合作关系.根据ACMComputingClassificationSystem[1998Version]的命名规则[14],节点r1的研究领域属性AG(r1)=[F22,H24,I21,I26].定义n=|V|,m=|E|,图G的大小用|G|表示,其值为图中节点的数目,即|G|=n.给定一个顶点集SV,定义由S形成的图G的导出子图为GS=(VS=S,ES={(u,v):u,v∈S,(u,v)∈E}).图G中任一顶点v∈V的邻接点的集合为nb(v)={u:(u,v)∈E},同时顶点v的度为d(v)=|nb(v)|.图G的一个clique是使得导出子图为所有节点相互连接的完全图的顶点集的子集,q-clique即为具有q个节点的clique.图1中{r5,r6,r7}即为一个3-clique,表示3个彼此具有合作关系的学者组成的团队.3.2属性差异狇-clique节点中的属性大多为二元变量,二元变量是只有两种状态0或1的变量,其中0表示该变量不出现,1表示该变量出现.本文采用二元变量相异度的定义计算出各邻接节点间的属性相异度,如定义1.定义1.节点间的属性相异度.给定一个图G,具有二元变量属性值的两个节点u和v,其中u,v∈V(G)且(u,v)∈E(G),节点间的属性相异度定义为diff(u,v)=其中,r是节点u值为1而节点v值为0的属性值的数目;s是节点u值为0而节点v值为1的属性值的数目;q是节点u和节点v值都为1的属性值的数目;t是节点u和节点v值都为0的属性值的数目.Page4图1中q+r+s+t=8,该值为图中所有属性值的个数.以r1,r2节点为例,AG(r1)=[F22,H24,I21,I26],AG(r2)=[C24,I21],则r=3(来自于F22,H24,I26),s=1(来自于C24),diff(r1,r2)=0.500.本文将图G中任意两邻接点u,v之间的属性相异度作为w(u,v)的取值,从而得到q-clique的属性差异度的定义.定义2.q-clique的属性差异度.设QG为图G中的一个q-clique,其节点集表示为{v1,v2,…,vq},该q-clique的属性差异度定义为其中w(vi,vj)=diff(vi,vj)为以vi和vj为端点的边的权值,即两个节点之间的属性相异度.图1中r5,r6,r7节点组成的3-clique的属性差异度为dvalue3({r5,r6,r7})=w(r5,r6)+w(r5,r7)+w(r6,r7)=0.375+0.375+0.250=1.000.当两个q-clique具有相同属性差异度时,并不代表着二者就具有相同的重要性.下面给出clique的跨度定义来对具有相同差异度的q-clique进行区别.定义3.clique的跨度.假设CG为图G中的一个clique,其边集表示为EC,该clique的跨度定义为span(C)=argmaxe∈EC其中,w(e)为边e的权值,argmaxe∈EC最大边权值,argmine∈EC为满足子图中节点彼此间各有特点的目标,当两个q-clique的差异度相同时,较小跨度的q-clique将更有意义.本文中q-clique具有较大的属性差异度将被视为较好的结果,而当两个q-clique的差异度相同时,将跨度较小的视为较好的结果.由于输出所有的q-clique缺乏实际意义,本文试图找出k个具有最大属性差异度且具有最小跨度的q-clique.同时,由于一些节点可能出现在多个具有较大属性差异的q-clique中而导致查询结果出现大量相同节点,所以输出的k个结果应该避免出现公共节点.本文研究问题如问题1.问题1.Top-k最大属性差异q-clique查询.给定一个图G,一个结果数目参数k,一个节点数目参数q,Top-k属性差异q-clique查询将找出一个集合S,S为图G中具有最大属性差异度且具有最小跨度的k个q-clique组成的集合且S中q-clique彼此之间没有公共节点.定理1.问题1Top-k最大属性差异q-clique是一个NP难问题.证明.首先,将问题1转换为其判定版本,给定一个图G,一个参数q,一个常量c,是否存在一个具有属性差异度c的q-clique.假定图G中每条边都具有权值2c中是否存在一个q-clique,因为q-clique的差异度一定为c.由于后者已证明为NP难问题[15],因此问题1也为NP难问题.4查询处理算法本文首先给出了属性差异q-clique问题的基本算法,然后提出一种分支限界算法.利用图节点信息,设计了基于优先访问次序的优化查询算法.4.1基本算法BSL一种直接的Top-k属性差异q-clique查询问题的解决方法是首先利用图的拓扑结构性质找出图中所有的q-clique,然后计算出它们的属性差异度,并找出其中具有最大差异度的结果输出.同时,从图中删除该q-clique中的节点避免后续结果出现公共节点,重复上述查询过程直到k个结果输出或者图中没有q-clique为止.算法1描述了基本算法BSL的细节.步5对过程1进行调用找出图中所有的q-clique.然后步6~9对q-clique的差异度进行计算并将具有最大差异度的q-clique存于Q中,最后步10~11将Q中结果存于Lq中输出.过程Recursive_Search_BSL中步5~11借鉴文献[16]中提出的clique遍历问题的剪切技术,其思想是利用clique中节点度的性质对无法形成目标clique的分支进行预先剪切,提高了clique遍历效率.算法1.BaselineAlgorithm(BSL).输入:带权简单无向图G,不小于1的正整数k,不小输出:G中具有最大属性差异度的无公共节点的k个1.初始化长度为k的数组Lq;2.初始化栈S;3.forifrom1tokdo4.Q←,dvalue(Q)←0;5.Recursive_Search_BSL(G,q,0,,V(G),S);6.whileS≠doPage57.Q←popS;8.ifQ具有最大的属性差异度then9.Q←Q;10.ifQ≠then11.Q添加入Lq,G=G-Q;12.ReturnLq.Recursive_Search_BSL(G,q,l,R,P,S)1.C←;2.ifl=qthen3.S←pushR;4.for每个P中的节点vdo5.ifd(v)<q-1then6.continue;7.for每个nb(v)中的节点udo8.Ifu.id>v.idthen9.C←C∪{u};10.if|P∩C|<q-lthen11.continue;12.Recursive_Search_BSL(G,q,l+1,R∪v,P∩C,S).本文所研究的问题中参数q不是固定常量,问题为NP难问题,因而随着图中节点数的增加,产生的q-clique的数目将会急剧增长.基本算法BSL遍历出图中所有的q-clique将导致算法效率极低且缺乏良好的可伸缩性.4.2分支限界算法AD-Qclique为解决BSL算法的不足,本文提出一种分枝限界算法AD-Qclique.在搜索结果的过程中,AD-Qclique算法不仅利用图的拓扑结构性质,而且利用图中边上的邻接节点属性相异度计算相应分支的差异度上界,产生剪枝条件来减小搜索空间.文给出如下定义.定义4.节点的t-边权和.给定一个图G和一个正整数t,u∈V(G)为图中一个节点且nb(u)t,节点u的t-边权和定义为为了方便设计图中边权值形成的剪枝条件,本其中w(ei)为节点u邻接边的边权值中第i大边权值.例如,图1中节点r5的2-边权和sum2(r5)=w(r5,r8)+w(r5,r6)=0.875.定义5.节点集合的t-边权和.给定一个图G和一个正整数t和一个节点集合PG且u∈P满足nb(u)t,集合P的t-边权和定义为r7})=sum2(r5)=0.875.图1中{r5,r6,r7}的2-边权和sum2({r5,r6,定义6.clique的差异度上界函数.给定一个图G,一个cliqueRG,一个正整数q且|R|<q,P为一个候选节点集合且P中任一节点都与R中所有节点相连接,该clique的差异度上界函数定义为d+图1中clique{r5,r6}的差异上界函数值为3({r5,r6})=w(r5,r6)+sum2(r7)=0.375+d+0.625=1.000.定理2.给定一个图G,δ为Top-k属性差异q-clique中的最小属性差异度,一个cliqueRG,|R|<q,PV(G)为一个候选节点集合且P中任一节点都与R中所有节点相连接,如果d+则R不会成为Top-k属性差异q-clique.证明.令Q为由R扩展而得到的所有q-clique的集合中具有最大属性差异度的q-clique.因此要想证明定理2,只需证明∑q-1dvalue|R|(R).因为QG,对任一正整数t,u∈Q-R满足sumt,Q(u)sumt,G(u).同时V(Q)-V(R)P,则不等式成立.因此dvalueq(Q)q(R)δ,定理2成立.d+算法AD-Qclique的具体执行过程如算法2所示.算法2.AD-Qclique.输入:带权简单无向图G,k,q输出:G中具有最大属性差异度的无公共节点的k个1.初始化长度为k的数组Lq;2.Q←,dvalue(Q)←0;3.forifrom1tokdo4.Recursive_Search_AD(G,q,0,,V(G),Q);5.ifQ≠then6.将Q添加入Lq,G=G-Q;7.else8.break;9.ReturnLq.Recursive_Search_AD(G,q,l,R,P,Q)1.C←;2.ifl=qthen3.ifQ=then4.Q←R;5.ifR具有最大的属性差异度then6.Q←R;7.for每个P中的节点vdo8.ifv不能形成q-cliquethen9.continue;10.ifd+(R∪v)<dvalue(Q)then11.continue;12.Recursive_Search_AD(G,q,l+1,R∪v,P∩C,Q).Page6与算法BSL相同,算法AD-Qclique同样是每次查询出最大属性差异q-clique将其输出,然后从图中删除该q-clique的节点避免后续结果出现公共节点.但不同的是,在查询Top-1属性差异q-clique的过程中,算法AD-Qclique并没有遍历所有的q-clique,图2算法AD-Qclique的状态空间树算法首先通过r1搜索到第一个3-clique{r1,r2,r3},而r2,r3,r4都无法形成3-clique,所以剪切相应分支.然后,算法通过r5搜索到{r5,r6,r7},虽然{r1,r2,r3}与{r5,r6,r7}的属性差异度相等,但是其跨度为0.500大于后者的0.125,因此{r5,r6,r7}为当前最优解.由于{r5,r6,r8}的属性差异度0.875小于当前最优解的属性差异度1.000,{r5,r6,r8}被丢弃.当搜索到{r5,r7}分支时,该分支的差异度上界值0.875小于当前最优解的1.000,此时算法进行剪枝处理.同理,{r6,r7}分支被剪切掉.最后r7和r8都无法形成3-clique,算法结束,输出最优解{r5,r6,r7}.如图2所示,算法在利用结构性质缩减搜索空间的同时,利用定理2的剪枝条件避免了{r5,r7}和{r6,r7}分支的进一步节点访问.4.3基于优先次序的AD-Qclique算法算法AD-Qclique搜索过程中必须逐个节点遍历来寻找q-clique,因此具有大差异度的结果越早出现,越能利用剪枝条件缩小搜索空间.基于best-first排序思想,遍历时要优先选择可能形成具有较大属性差异度q-clique的节点,而最直接的方法是在进行搜索过程之前,重新排列节点序列.算法3.基于优先次序的AD-Qclique(算法3替换算法2的步1~2).输入:带权简单无向图G,不小于1的正整数k,不小而是利用定理2的剪枝条件(见过程2步10)剪切掉差异度上界值小于当前最大属性差异度的分支,减小搜索空间.为清晰地描述算法AD-Qclique的执行过程,本文在图2中给出了算法进行Top-1属性差异3-clique查询时的空间状态树.输出:G中具有最大属性差异度的无公共节点的k个1.依照主键对图G中的节点进行排序;2.初始化长度为k的数组Lq,Q←,dvalue(Q)←0.基于优先次序的AD-Qclique算法如算法3所示.算法3在算法2执行之前对节点访问次序进行排序优化处理.下面将讨论依照不同主键的优先次序方法.(1)基于节点度次序.现实世界网络通常具有幂律分布和富人俱乐部性质[17],即网络中少量的节点具有大量的边并且这些节点倾向于彼此之间互相连接.因此,节点度越大的节点越可能拥有大量的内容属性且能够形成q-clique的可能性越大.当基于节点度的优先次序时,若最先加入已有节点集合的节点的度小于q-1时,则算法可以直接结束,后续节点不可能形成q-clique.(2)基于邻接边权值次序.具有较大属性差异度的q-clique一定具有较大的边权值,若节点的邻接边具有较大的边权值,则该节点构成大属性差异度的q-clique可能性会更高.由此衍生出3种策略:基于节点1-边权和的优先次序、基于节点(q-1)-边权和的优先次序和基于节点所有邻接边的边权之和的优先次序.Page7表1中列出了本文根据不同主键排序产生的基于优先次序算法的名称.Deg+AD-QcliqueMaxw+AD-QcliqueSumw+AD-QcliqueQmax+AD-Qclique5实验分析本文使用多组实验考察算法在不同数据大小和不同参数影响下的性能和结果质量.本文算法使用C++语言实现,实验使用一台拥有2个3.00GHz图3算法AD-Qclique与算法BSL效率对比实验表明,在利用图的拓扑结构性质的同时利用边权形成的剪切条件能够较大地提高算法的运行效率.对节点访问次序进行优化处理后,算法的效率进一步提高.图3(c)、(d)分别分析了参数q对算法访问节点数和运行时间的影响.与图3(a)、(b)对比,可以证实,参数q固定的q-clique问题为多项式时间复本文针对问题相关参数进行了实验分析,对各Xeon(R)CPU和3.25GB的内存,运行WindowsServer2003操作系统的服务器.5.1算法效率分析算法的效率进行了比较.由于BSL算法缺乏可伸缩性致使其无法在较大的图上正常运行,因此实验1在较小尺寸图上比较算法AD-Qclique与算法BSL的运行效率.如图3(a)所示,算法AD-Qclique比BSL的访问节点数减少了约28%,而算法Qmax+AD-Qclique则减少了86%.同时,图3(b)中显示了算法的运行时间,与图3(a)中的节点访问数相一致.与算法BSL相比,算法Qmax+AD-Qclique获得了约37倍的平均加速比.杂度.而当q值变化时,q-clique问题为一个具有NP难复杂性的问题.同时由图3可知,算法的访问节点数与算法的运行时间的趋势基本一致.实验2评价了参数k对算法运行时间的影响,因为本文中的所有算法皆为迭代地查询Top-1最大属性差异q-clique,因而算法的运行时间会随着k值的增大而呈多项式增长.图4(a)、(b)则验证了这一结论.Page8图4参数k对算法AD-Qclique和BSL的影响为分析节点访问次序对算法带来的进一步效率提升,实验3对大图尺寸下基于不同优先次序的AD-Qclique算法的节点访问数和运行时间进行了分析.除算法Qmax+AD-Qclique外,其它算法不用每次查询都进行节点排序,因此其它算法的排序开销作为预处理手段而没有算入运行时间中.如图5(a)、(b)所示,随着图尺寸的不断增长,算法AD-Qclique和算法Deg+AD-Qclique的图5基于优先次序的AD-Qclique算法效率对比访问节点数和运行时间都表现不稳定.与之相反,算法Maxw+AD-Qclique、Sumw+AD-Qclique和Qmax+AD-Qclique始终都保持稳定且高效.实验表明,基于邻接边权值次序的优化策略比基于节点度次序的策略效果好.图5(c)、(d)分别显示了|G|=20000,k=10时算法的节点访问数和运行时间随q值改变时的变化情况.与图3(c)、(d)的情况相同,随着q值的增长,算法节点访问数和运行时间同样呈指数级增长.Page9最后,图3、图4和图5表明,由于算法Qmax+AD-Qclique的排序主键与剪切条件最为相近,该算法拥有最高的运行效率.5.2算法结果分析表2显示了在20000节点的合作关系图中进行Top-3属性差异6-clique查询的结果并给出了作者的个人研究领域数和科研产出度量值H-index.表2括号中的值依次为个人研究领域数和H-index值.Rank1A.Choudhary(52,37)G.C.Fox(56,30)IanT.Foster(50,90)D.Reed(41,35)K.Kennedy(36,63)C.H.Koelbel(11,20)图6显示了20000节点数据集的作者个人研究领域数和对应作者数的平滑散点图.图6中的分布情况表明真实数据集中只有极少部分人拥有广泛的研究领域.结合表2中查询结果和图6中的个人研究领域数分布情况,说明合作关系网络中较大属性差异q-clique中节点不仅具有极强的研究水平,同时有着相比于大部分学者更为广泛的研究领域.图6作者个人领域数分布情况(|G|=20000)图7结果q-clique研究领域数分布情况(|G|=20000,q=6)图7显示了在20000节点的合作关系图中Top-500属性差异6-clique的不同研究领域属性值计数的分布情况.如图7所示,6-clique的差异度越大则其中包含的不同研究领域属性值越多.实验验证本文中属性差异度的定义能够满足属性差异q-clique问题中对属性内容丰富程度的要求.6结论本文提出了一种结合拓扑结构和属性内容的紧密子图发现问题———属性差异q-clique发现.为解决图中q-clique数目过多的问题,本文提出了一种分支限界算法AD-Qclique,该算法在搜索的过程中利用边上的节点属性相异度形成剪枝条件,从而较大程度地减少了节点访问数目.本文还对节点访问次序进行了优化,进一步提高了算法性能.最后,本文利用ACM作者信息数据集,对查询的有效性与算法的效率进行了测试.实验表明,AD-Qclique的效率远远高于基本算法BSL,且属性差异q-clique查询返回的作者都具有较高的H-index值及广泛的研究领域,表明了属性差异q-clique问题具有重要的实际应用价值.
