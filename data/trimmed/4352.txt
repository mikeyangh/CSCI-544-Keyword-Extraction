Page1基于轨迹频率抑制的轨迹隐私保护方法赵婧张渊李兴华马建峰(西安电子科技大学计算机学院西安710071)摘要移动终端和定位技术的快速发展带来了轨迹大数据.研究者通过挖掘和分析发布的轨迹数据集,可获得一些有价值的信息.攻击者也可利用所掌握的知识对发布的轨迹数据集进行推理分析,以较高的概率推断出用户的隐私信息.轨迹抑制是一类实现隐私保护的重要方法,然而轨迹抑制的点数越多会造成数据效用越低.因此,在满足用户隐私需求的情况下,如何选择合理的抑制点来提高匿名处理后的数据效用是数据发布中要解决的重要问题.针对以上问题,文中提出两种基于轨迹频率的方案对轨迹数据进行匿名处理.第一种方案是根据情况抑制整条有问题的轨迹数据或向有问题的轨迹数据集中添加假数据;第二种方案是采用特定的轨迹局部抑制法对数据进行抑制处理.实验表明相对于已有方案,在满足同等隐私需求的情况下,文中方案处理后的数据效用提升了近30%.关键词数据发布;轨迹抑制;隐私保护;服务质量;大数据1引言随着移动定位服务的广泛应用,服务器端产生了数据量巨大、生成速度快、蕴含重大价值信息的轨迹大数据.研究者通过对轨迹大数据的挖掘和分析,可得到与应用相关的有价值的信息[1-4].然而,这些轨迹数据中往往包含了关系到个人敏感信息的隐私数据.若数据发布者对数据不做任何处理直接发布,会造成个人敏感信息的泄露.随着个人对隐私信息保护的关注,数据发布中隐私保护问题[5]逐渐成为数据挖掘领域的研究热点之一.数据发布者发布数据时,一方面要确保发布的匿名数据不泄露个人的隐私信息,即保证攻击者不能以高概率推测出目标个体的敏感信息;另一方面要保证发布的匿名数据具有高可用性,使得研究者仍然能够根据发布的匿名数据进行较准确的数据分析.因此,如何在满足用户隐私需求的情况下提高匿名数据的可用性成为亟待解决的问题.文献[5]研究了轨迹数据发布过程中的隐私保护问题,引入了有问题的投影集概念,提出以部分轨迹作为一个准标识符来标识其他位置的轨迹抑制方案.但方案存在以下问题:(1)采用全局抑制法对数据进行处理,将包含问题投影集的整条轨迹数据不予发布.由于限制发布的数据过多,导致匿名处理后的数据效用较低,不利于数据挖掘研究;(2)在处理有问题的投影集时,没有考虑问题投影集在轨迹数据中出现的频率.对于出现频率高的问题投影集,其威胁用户隐私的程度更严重,应当优先对其进行处理.针对上述问题,在满足用户轨迹隐私需求的前提下,提出基于轨迹频率抑制的第一种方案,方案根据情况抑制整条有问题的轨迹投影或向有问题的轨迹数据集中添加假数据实现轨迹匿名处理.与已有方案相比,匿名后数据效用提升10%.但是假数据的添加导致方案所需的存储空间增大,且算法性能较差.为了进一步提高数据效用和算法性能,提出第二种方案,即通过求解隐私关联度和数据效用之间的关系对轨迹数据进行局部抑制.在每次匿名处理的过程中,将对整条轨迹的抑制改为抑制轨迹中的某一位置的数据,有效地提升了数据效用和算法性能.大量实验表明在满足用户同等隐私需求的情况下,方案将匿名数据的效用提升了近30%.2相关工作目前大部分方案[6-13]都采用K-匿名实现轨迹匿名,数据发布者在发布数据库中的记录集前,先概括准标示符的属性值,使得每条记录至少有K个人有相同的准标示符值.基于GPS(GlobalPositioningSystem,全球定位系统)定位的不精确性,Abul等人[6]提出通过轨迹聚簇和空间转换来实现所提出的(k,δ)-匿名模型,k表示匿名区用户数量,δ表示定位误差.通过将轨迹K-匿名集合的构建问题抽象为图模型,Gao等人[7]提出一种个性化匿名模型构建合适的匿名集合均衡隐私保护与数据效用的关系.Huo等人[10]提出根据轨迹间的距离来划分合适的轨迹K-匿名集合.近年来,学者开始从不同的角度[14-20]研究匿名技术.尽管通过K-匿名可以防止属性链接攻击,但是攻击者根据准标识符,按照其所在的等价类仍能够推断出其敏感属性的取值,同样会导致个人隐私的泄露.为了防止攻击者进行该类攻击,文献[14]提出另一种解决方案:L-多样性模型.L-多样性模型要求每个QID(Quasi-identifier,准标识符)分组中对应的敏感属性至少有L个具有代表性的取值,要求发布者应使得按QID得到的记录分组中的敏感属性取值多样化,分布尽可能的均匀.文献[21-23]研究了基于一种简化形式的轨迹数据的匿名问题,在仅考虑时间的顺序的情形下.文献[21]提出一种顺序数据的变型K-匿名模型,主要通过插入、删除或替换某些数据项实现K-匿名.文献[22]进一步假设不同的攻击者可能拥有不同的背景知识,且数据发布者要知道所有对抗性知识,防止攻击者从公布的顺序数据中获得额外的信息.文献[23]提出了一种新的基于移动物体的K-匿名概念,不同的移动物体可以具有不同QID.本文基于轨迹频率提出了解决用户轨迹发布中隐私保护问题的两种方案:(1)根据情况抑制有问题轨迹或向其添加假数据;(2)对有问题的投影集进行局部抑制.方案在防止身份链接攻击的基础上,也能够防止属性攻击,适用于新兴的轨迹数据发布方案.3预备知识3.1系统结构文中要解决的问题是离线轨迹发布中的隐私保Page3护问题.该问题的系统结构是基于“先收集轨迹数据集,再匿名处理,后发布匿名轨迹数据”的原则,即由一个数据收集服务器收集轨迹数据,并将原始数据存储到轨迹数据库中,然后由轨迹隐私保护服务器进行隐私保护处理,最后形成可发布的匿名轨迹数据.轨迹隐私保护服务器中有3个主要模块:数据预处理模块、隐私保护处理模块和数据效用衡量模块.各模块功能如下文所述.数据预处理模块:负责对收集到的原始数据进行预处理.对数据按照用户身份进行归类,并将同一用户的所有位置数据按照时间戳排序,最终形成用图1离线轨迹发布隐私保护系统结构图3.2轨迹数据集相关定义表1所示,T的形式化表示公式如下:轨迹数据集T是所有用户轨迹序列的集合,如其中,ti表示用户i的运动轨迹.对每个用户i,其运动轨迹ti是由n个不同时刻timei的位置序列组成,表示公式如下:其中loci(xi,yi)代表timei时刻用户i所在的具体位置.为简化处理,轨迹序列中包含用户的位置信息,且位置信息按照时间timei升序排列.定义1.轨迹记录.轨迹记录是由n个位置信息按照时间顺序组成的长度为n的一条记录t=〈loc1,loc2,…,locn〉,其中loci∈A.A是数据发布中心可以掌控的所有位置,例如户的轨迹序列集合.隐私保护处理模块:负责对预处理后的轨迹数据集进行隐私保护处理.根据用户的隐私需求,找到不满足用户隐私需求的轨迹序列集合,将这些集合按照出现轨迹频率进行排序,按照文中提出的两种隐私保护匿名算法对这些集合进行处理,从而得到安全的可发布数据集合.数据效用衡量模块:负责评估隐私处理后的轨迹数据集的可用性,即统计匿名轨迹数据集的数据效用.离线轨迹发布隐私保护系统结构如图1所示.假设仅有两个攻击者a、b,且用户的隐私容忍度Pbr设置为0.5,A={a1,a2,a3,b1,b2,b3},如智能卡公司可以发行一种智能卡,A代表的是可以刷该种卡的所有位置,如商店、停车场等.A被分为m个互不相交的非空子集,即A=∑mA1∪A2,A1={a1,a2,a3},A2={b1,b2,b3}.3.3攻击者模型假定潜在的攻击者数量为m个,则有V=∑mvi,其中V为攻击者集合.每个攻击者vi可以掌i=1控Ai中包含的所有位置信息,则有vi,vj∈V→Avi∩Avj=且∪vi∈VAi=A.对每一条轨迹记录t∈T,每一个攻击者vi∈V都拥有一个投影知识tvi,定义如下.定义2.投影.若仅考虑一个攻击者v,则一条轨迹记录t=〈loc1,loc2,…,locn〉的投影为tv=〈locv1,locv相对于攻击者v的投影.tv即为攻击者v的投影知识,tv是t的一个子轨迹记录,仅由t中属于Av的所有位置数据点组成.因此,每一个攻击者将会拥有所有轨迹数据集T中的投影集TPv,且TPv=∪t∈Ttv.例如攻击者va的投影集TPa可以根据定义2通过对轨迹记录集T计算得到,如表2所示.Page4攻击者根据其拥有的知识TPv很容易推断出经过tv中全部位置的用户的身份信息,进而推断出用户的其他信息.对该问题,我们进行如下定义.定义3.可公布数据集T.给定原始轨迹数据集T,T是T经过处理后要公布的轨迹数据集.若t∈T,每一个攻击者v都不能以高于Pbr的概率推断出用户的位置信息locj,Pbr为用户隐私容忍度,locj∈t∧locjAv,则认为T是安全的,可以公开发布,否则T是不安全的,不能公开发布.文中主要考虑攻击者可能发起的攻击有以下两种:(1)身份链接攻击,由于攻击者掌握用户的部分信息和对应的用户身份信息,所以攻击者可以根据这些局部信息发起身份链接攻击,进而推断出用户的身份;(2)属性链接攻击,攻击者根据掌握的用户的局部信息作为用户的准标识符发起属性链接攻击,进而推断出用户的其他属性信息.若攻击者v拥有关于轨迹记录t的投影tv的知识,则可从即将发布的轨迹数据集T中推断出其他任何不属于tv的位置信息或者用户的身份信息.这一问题类似于L-多样性问题,其中tv中的位置信息类似于准标识符QID,而其他的位置信息则类似于敏感属性S.该问题和以往的轨迹数据发布问题相比有很大不同.随着攻击者数量的变化,从不同攻击者的角度出发,每一个攻击者的投影知识tv∈TPv都可以作为轨迹记录t的准标识符QID.由于tv的长度是可变长的,因此每一条轨迹记录t∈T的准标示符都是可变长的,且可能有多个.对于每一条轨迹记录t∈T,其敏感属性S是不唯一的,也可能有多个.综上所述,文中研究的问题和以往的不同之处是:(1)准标识符QID是可变长的,可能有多个;(2)敏感属性S不是唯一的,可能有多个;(3)攻击者不是唯一的,可能有多个.3.4隐私模型由于攻击者拥有局部的轨迹信息,仅删除或隐藏原始轨迹集中的身份信息,攻击者仍能够以一定的概率推断出用户的身份和其他敏感信息,从而导致用户的隐私受到威胁.为了保护用户的隐私,我们定义隐私模型Pbr-privacy,该模型保证了攻击者不会以高于Pbr的概率推断出任意用户的身份信息和攻击者尚未掌握的其他位置信息.定义4.S(tv,TPv).根据定义2从轨迹数据集T中找到攻击者v的投影知识TPv,并从TPv中找到满足特定条件的所有轨迹记录集S(tv,TPv),S(tv,TPv)={t|t∈TPv∧t=tv}.S(tv,TPv)是攻击者v的投影知识TPv中所有与轨迹tv相同的轨迹形成的集合,如攻击者a的投影集TPa(如表2所示).若ta={a1→a2},则S(ta,TPa)是用户t1→t4的轨迹集合.t∈T,攻击者v根据S(tv,TPv)推断出其他位置locj的概率如式(3)、(4)所示.p(locj,tv,T)=sup(locj,tv,T)/|S(tv,T)|(3)sup(locj,tv,T)={t|t∈S(tv,T)∧locj∈t∧locjAv}为了使匿名处理后的数据T一定程度上保护用户的隐私,我们进行如下定义.定义5.Pbr-privacy.若v∈V且t∈T,{locj|locj∈t∧locjAv},若p(locj,tv,T)<Pbr成立,则认为T→T的转换是安全的,可以公开发布T;若p(locj,tv,T)>Pbr,则认为T→T的转换是不安全的,并标记tv为有问题的投影轨迹,根据特定匿名算法对有问题的投影记录作处理,使得T→T的转换是安全的.如果所有的攻击者从T中推断出任意不被攻击者掌握的位置信息的概率都小于Pbr,则表明该轨迹数据集T满足用户的隐私需求,是安全的数据集,可以进行发布.表1中数据集T不能够直接发布,而经过匿名处理的数据集T则是安全的,可以发布.3.5数据损失率数据发布者发布轨迹数据的目的是为了研究者进行数据挖掘,以满足多个研究者完成不同数据挖掘任务的需求.因此,我们在确保用户隐私的同时也要考虑如何提高数据效用.定义6中给出一种数据损失率的定义,数据损失率UL的值越小,数据效用越好;UL的值越大,数据效用越差.Page5定义6.数据损失率UL.原始轨迹数据集T的足迹个数记作|T|,匿名的轨迹数据集T中的足迹个数记作|T|,UL计算公式如式(5)所示.4基于轨迹频率抑制的方案文中提出两种方案:(1)对即将发布的数据进行轨迹抑制并根据情况添加假数据;(2)对即将发布的轨迹数据集按照特定的算法进行局部抑制.每个方案中包含一个匿名算法,算法基于轨迹频率进行匿名处理,且在满足用户隐私需求的同时最大程度地提高了匿名数据集的效用,下面分别对这两种方案进行详细描述.4.1方案1-添加假数据方案根据情况抑制整条有问题的轨迹投影记录或添加假数据,以实现轨迹匿名处理.方案所使用的匿名算法包含3个部分:(1)IVPA算法,从原始轨迹数据集T中找到不满足用户隐私容忍度Pbr的有问题的投影集VP;(2)FVPA算法,将有问题的投影集VP中的所有轨迹按照其在轨迹集T中出现的频率进行排序,并将结果保存到集合FVP;(3)匿名算法TDA_1,采用特定的算法处理原始轨迹集T,直到FVP=结束.4.1.1IVPA算法的匿名算法的处理过程,我们进行以下定义.为了更好地理解对原始轨迹数据集T所采用定义7.VPv.通过定义4可以求得攻击者v推断出其他位置locj的概率为P(locj,tv,T);若P(locj,tv,T)>Pbr,则记录tv为有问题的轨迹投影,VPv={tv|tv∈TPv∧P(locj,tv,T)>Pbr}.这里VPv是攻击者v的投影知识TPv中有问题的投影集,即攻击者能够以高于用户隐私容忍度Pbr的概率推断出与VPv中的轨迹记录相对应的原始轨迹中其他的位置信息.这样的轨迹记录对于用户是不安全的,需对其进行匿名处理.由于这里有m个攻击者,VP的计算如式(6)所示.文中对于攻击者a和b,通过IVPA算法计算得到有问题的投影集为VPa={a1→a3,a2→a3},VPb={b1,b1→b3,b2,b2→b3},VP={a1→a3,a2→a3,b1,b1→b3,b2,b2→b3}.算法如算法1所示.算法1.IVPA算法.输入:原始轨迹集T,用户隐私容忍度Pbr,每一个攻击输出:违背用户隐私需求的投影集合VP1.FORallvinVandtinT2.TPv··=∪t∈Ttv;3.FORalltv∈TPVdo4.sup(locj,tv,T)··=0;5.FORallv∈Vdo6.FORalllocjAvdo7.calculatesup(locj,tv,T);8.FORallv∈Vdo9.calculateS(tv,TPv)oftvinTPv;10.FORalltv∈TPVdo11.p(locj,tv,T)=sup(locj,tv,T)/|S(tv,T)|;12.IFp(locj,tv,T)>PbrTHEN13.VPv··=push_back(VPv);14.FORallvinVdo15.VP··=push_back(VPv);4.1.2FVPA算法该算法基于IVPA算法,将有问题的投影集VP中的轨迹序列按照其在原始轨迹集T中出现的次数降序排列,使出现频率较高的轨迹序列优先得到处理.通过多次实验,发现该算法在一定程度上可以减少被抑制的点数.算法如算法2所示.算法2.FVPA算法.输入:违背用户隐私需求的投影集合VP输出:依据频率降序排列有问题的轨迹投影集合FVP1.FORallvinVdo2.FORalltv∈VPvdo3.f(tv,VPv)··=0;4.FORallv∈Vdo5.FORalltv∈VPvdo6.calculatethefrequencyf(tv,VPv)oftvwhich7.F(tv,fre)··=push_back(tv,f(tv,VPv));8.FORallv∈VdosortalltrajectoriesinVPv9.FVP··=push_back(FVPv);对于文中举例的攻击者a来说,其轨迹序列{a1→a2}、{a1→a3}、{a2→a3},分别出现的次数为4、1、3,排序后的结果为{a1→a2}、{a2→a3}、{a1→a3}.4.1.3匿名算法TDA_1将原始轨迹集T经过处理变为满足用户隐私需求的轨迹集T,采用添加假数据的方法和轨迹抑Page6制方法两种方法进行匿名处理.算法如算法3所示.算法3.TDA_1算法.输入:原始轨迹集T,用户容忍度Pbr,每一个攻击者v输出:可发布的安全的轨迹数据集T1.constructprojectionTPvforeveryattackerv∈V;2.initialT··=T;3.WHILEFVP!=do4.callAlg.IVPAandAlg.FVPA;5.FORallvinVdo6.selectthemostfrequenttrajectorytvfrom7.calculateadd_sumanddelete_num;8.IFadd_sum<delete_numTHEN9.adddummytrajectoriestvinT;10.obtaintheintersectiontofbothtandtv,11.ELSEdodeleteallthetrajectoriestinTwith12.OutputT;程序流程如图2所示,具体描述如下.根据算法1从轨迹集T中找到有问题的轨迹投影记录保存到VP中,再调用算法2,将VP中的轨迹记录按照出现的频率降序保存到FVP中.若集合FVP为空集,则表示当前轨迹集合已安全,可发布;否则,根据FVP找到前|PS|个出现频率最高的轨迹投影记录,采用两种方法分别对其进行匿名处理.(1)添加假数据法.根据原始轨迹集T和用户的隐私容忍度Pbr,对v∈V,计算前|PS|个轨迹投影记录的p(locj,tv,T),locj∈t∧locjAv,在原始轨迹集T中添加轨迹记录tv,使得p(locj,tv,T)=Pbr,统计添加轨迹记录的总位置数add_sum.(2)轨迹抑制法.对v∈V,在FVP中找到前|PS|个的轨迹投影记录的子轨迹或父轨迹,若存在,则将抑制长度较长的轨迹记录中的局部位置,使其同轨迹长度较短的记录相同;否则,将抑制轨迹中的全部位置,统计抑制总位置数delete_sum.FVP进行匿名处理,直至FVP=时结束.对文中举例的攻击者a来说,VPa={a1→a3,a2→a3},通过计算得到add_num(a1→a3)=2,add_num(a2→a3)=2,delete_num(a1→a3)=2,delete_num(a2→a3)=6.为满足用户隐私,应删除轨迹a1→a3,添加一条假轨迹a2→a3;按同样方法处理VPb的有问题的投影.轨迹集T经过该匿名算法处理后的安全数据集T1如表3所示.当add_sum<delete_sum时,采用添加假数据的方法对其进行处理;当add_sumdelete_sum时,采用轨迹抑制方法对其进行处理.该过程使得添加或删除的点数减少,进而提升数据的效用.整个过程循环调用算法1和算法2,对VP和4.2方案2-局部抑制方案1中采用直接抑制整条轨迹投影记录的方法,使得匿名后的数据效用仅在一定程度上得到提升.假数据的添加导致占用的存储空间增大且算法性能较差.为了进一步提升发布数据的效用和算法的性能,提出第二种方案.通过求解隐私关联度和数Page7据效用之间的关系对轨迹数据进行局部抑制.在每次匿名处理过程中,将对整条轨迹记录的抑制改为抑制轨迹中的某一位置的数据,有效地提升了数据效用和算法性能.方案2包含4个算法:(1)算法IVPA,即算法1;(2)算法FVPA,即算法2;(3)算法IMVA,在有问题的投影集FVP中找到最小的违反隐私需求的轨迹序列集,并保存到轨迹集合MVP;(4)匿名算法TDA_2.根据攻击者v的知识Av计算轨迹序列集MVP中所有轨迹点R(PG(loci),UL(loci))的值.每次查找R(PG(loci),UL(loci))值较大的轨迹点loci,并在原始轨迹集T中查找与MVP中的所有包含位置信息的轨迹记录相对应的轨迹集,抑制该轨迹集中的位置信息loci,此算法需迭代进行,直至MVP=结束.4.2.1IMVA算法i}{aj|aj∈tvtv则将两者合并为tm有MVPv={tm为了提升匿名数据的效用,该算法仅通过对有问题的投影集FVPv进行合并,将集合FVPv缩小,从而得到最小的有问题的投影集MVPv.由于有m个攻击者,MVP的计算如式(7)所示.定义8.MVPv.tv对于文中攻击者a,b来说,FVPa={a2→a3,a1→a3},FVPb={b1,b2,b1→b3,b2→b3};通过算法IMVA,得到MVPa={a2→a3,a1→a3},MVPb={b1,b2}.算法如算法4所示.算法4.IMVA算法.输入:依据频率降序排列的有问题的轨迹投影集合输出:最小的有问题的轨迹投影集合MVP1.FORallvinVdo2.FORalltv3.IFtv4.tm5.replaceallthetrajectoriestv6.ELSEdo7.MVPv··=push_back(tv8.FORallv∈Vdo9.MVP··=push_back(MVPv);在对数据集T进行匿名处理前,我们需要进行4.2.2匿名算法TDA_2如下定义.定义9.R(PG(loci),UL(loci))=PG(loci)PG(loci):定义其为与位置loci相关的隐私关联度,表示由删除点loci所带来的隐私收益,其值为集合MVPv中包含点loci的不同的轨迹个数.但是当某一位置点仅和自身关联时,其隐私关联度仍定义为1.因为若将隐私关联度定义为0,当多个位置都和自身关联,导致多个位置的R(PG,UL)值是相同的,会造成对位置点的随机删除.因此,为了避免该种情况的出现,将其定义为1,那么出现次数较少的点便会优先被抑制,从而提升数据的效用.UL(loci):代表由删除位置点loci带来的信息损失量,其值为MVPv中所有的轨迹中包含点loci的总数.该匿名算法不同于以往的轨迹匿名算法,采用局部抑制轨迹集MVP中点的方法对轨迹数据集T进行匿名处理.为了获得较好的隐私收益和较高的数据效用,在处理轨迹集MVP中的位置信息时,优先抑制PG(loci)最大的点loci,使得每删除一个点loci所带的隐私保护和数据效用都达到最优.具体算法如算法5所示.算法5.TDA_2算法.输入:原始轨迹集T,用户隐私容忍度Pbr,每一个攻击输出:可发布的安全的轨迹数据集T1.constructprojectionTPvforeveryattackerv∈V;2.initialT··=T;3.WHILEFVP!=‖MVP!=do4.callAlg.IVPA,Alg.FVPAandAlg.MVPA;5.FORallvinVdo6.calculatetheR(PG,UL)ofallthepointsinAv7.FORalltv∈MVPv8.findalltrajectoriesT1whichincludethepoint9.FORallt∈TPv10.findalltrajectoriesT2whichcontainthetrajec-11.FORallt∈Tdo12.findalltrajectoriesT3withtheprojectionsthe13.OutputT;Page8对于文中举例的攻击者a、b,MVPa={a2→a3,a1→a3},MVPb={b1,b2}.按照定义9计算结果如表4所示.由表4知R(PG(a1),UL(a1))最大,由于轨迹a1→a3对应T中的轨迹a1→a3→b1,所以删除轨迹a1→a3→b1中的点a1,即a1→a3→b1变为a3→b1,循环迭代,直至MVP=结束,最终结果如表5所示.位置数据隐私关联度PG数据损失率ULR(PG,UL)a1a2a3b1b25实验评估及结果为验证所提两种方案的有效性,我们进行了一系列的实验.针对影响发布数据集效用的4个因素,我们对文献[5]的匿名方法和文中所提的2种匿名方案分别进行实验,根据实验结果分别从数据损失率和性能两方面进行对比分析,给出相应的结论.5.1实验环境和实验数据实验环境为2.83GHz的Intel双核CPU,2GB内存,操作系统平台为WindowsXP.在VisualC++6.0环境下,通过C++编程实现匿名算法.通过Brinkoff生成器在Oldenburg地图上模拟产生移动用户的坐标信息,经过简单地处理得到用户的轨迹数据集T.将Oldenburg地图均分成100个区域,通过随机算法产生每一个区域的攻击者,每个区域的中心位置作为用户穿越该区域的足迹信息.用户的平均轨迹长度为6,收集到的轨迹集T的总数为15000.5.2数据损失率和性能分析5.2.1数据损失率针对文中所提出的两种匿名方案,通过多次实验,分析总结了影响两种匿名方案数据损失率的因素,包括用户的隐私容忍度Pbr、每次处理有问题投影集中轨迹的个数|PS|、攻击者的数量|V|以及原始轨迹集的大小|T|.由图3可知,在保证用户隐私容忍度Pbr不变的情况下,方案1、2的UL值随着|T|的增大而减小;同时,方案1的UL随着Pbr的变化较平缓,而方案2的UL变化较快.这表明:(1)原始轨迹集|T|增大时,添加假数据或是对有问题的投影集进行局部抑制都能够有效地提升数据效用;(2)用户的隐私容忍度Pbr增大时,采用方案2处理轨迹集T得到的UL值变化较明显,因为随着Pbr增大,用户的隐私需求不断地下降,导致有问题的投影集也随之减少.方案2在每次匿名处理过程中对轨迹中的某一位置数据的抑制,有效地提升了数据效用和性能.因此,方案2的UL值变化较明显.在处理有问题的投影集FVP时,我们采取每次处理FVP中的前|PS|个轨迹.由图4可知,当|PS|的值从1变化到100时,对方案1、2的实验结果影响是不同的.对于方案1,|PS|在1~100的变化过程始终会影响UL;对于方案2,只有当|PS|在Page91~50的范围内变化才对其结果UL有影响.因为对于方案2,有问题的投影集合形成的点集个数在50个以内,因此,当|PS|>50后,不管再怎么增大|PS|,都不会对实验结果造成影响.由图5可知,方案1、2的数据损失率UL均小于文献[5]的实验结果.当攻击者|V|的数量增大时,有问题的投影集随之增多,导致在抑制过程中被删除的点数增多,数据损失率UL稍有增加.但是随着攻击者数量的增加不会使抑制的点数急剧增长,说明方案1、2在攻击者数量改变的情况下,具有一定的稳定性.采用方案1、2及文献[5]中的方案分别对数据集T进行处理,当|T|增加时,UL的变化结果如图6所示.相比文献[5],方案1的UL变化较明显,因为随着|T|的增多,导致有问题的投影集相对增多,方案1对UL的影响大于方案2对UL的影响,因此,方案1的数据效用较高.且方案1、2的实验结果总体优于文献[5]的方案.在同等隐私需求的情况下,方案2将匿名后的数据效用提升了近30%.5.2.2性能这里仅对性能进行简单分析,因为文中所要解决的问题并不是实时问题.我们从两方面对性能进行分析:(1)存储空间;(2)算法处理时间.由于方案1、2都需要对数据集进行频率的计算和保存,且方案1中需要添加虚假数据,方案2需要计算和保存每一个轨迹点的R(PG,UL)值,因此,和文献[5]中的方案相比,方案1、2需要额外的存储空间.尽管如此,随着计算机存储量的增大,用存储空间换取较高的数据效用是值得的.算法处理时间如图7所示,随着处理数据量的增大,方案1的算法处理时间要长于文献[5]的算法处理时间.而方案2的算法处理时间和文献[5]中的方案算法处理时间比较接近.随着计算能力的增强,算法的处理时间将会进一步缩短.6结论文中针对数据发布中的隐私保护问题提出了两Page10种有效的方案,结合实验结果,分析了原始轨迹集的大小|T|、用户的隐私容忍度Pbr、每次处理有问题投影集中轨迹的个数|PS|以及攻击者的数量|V|对方案的影响,并通过和文献[5]中的实验结果进行对比,给出以下结论:(1)随着发布数据量|T|增大,每次处理有问题投影集中轨迹的个数|PS|减小,匿名的数据效用会进一步得到提升;随着Pbr的增大及攻击者数量|V|的增多,匿名后数据效用下降;(2)在满足用户隐私需求的同时,文中两种方案都不同程度地提升了数据效用,一定程度上解决了数据发布中用户的隐私需求和数据效用之间的均衡问题.在满足用户同等隐私需求的情况下,相对于已有方案,经过方案2处理后的匿名数据的数据效用提升了近30%,使得该方案在解决数据发布问题时更有实际意义.
