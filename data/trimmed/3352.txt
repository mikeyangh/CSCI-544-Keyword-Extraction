Page1基于GPU的快速球面距离变换陈伟锋王锐潘明皓华炜(浙江大学CAD&CG国家重点实验室杭州310058)摘要文中提出了一种基于GPU加速的精确计算球面距离变换的算法.球面距离变换在球面网格剖分、气象建模等领域有重要的应用.目前主要的球面距离变换算法是基于有序扩散的,即每个球面像素的距离变换都需要参照相邻像素的信息,因而难以通过并行计算加速.在经度-纬度参数域上,该文给出了依次沿纬线和经线独立扫描进行球面距离变换的理论证明,提出了一种新的球面距离变换算法,称为经纬独立扫描算法.同以往的球面距离变换算法相比,该文提出的算法是完全并行的算法,可以在GPU上实现以提高球面距离变换的性能.最后,该文列举了几个快速球面距离变换的应用.关键词GPU加速;球面距离变换;独立扫描;球面Voronoi图1引言在二维空间中,假设图像是由边界像素和非边Page2的距离变换受到了广泛的研究及应用,研究者提出了许多优化的距离变换算法,包括Wavefront算法、顺序扫描算法、独立扫描算法等.本文主要研究定义在球面上的距离变换,称为球面距离变换(SphericalDistanceTransform,SDT),如图1所示.球面距离是指定义在球面上的测地距离.球面距离变换一直有着重要的应用,如球面网格化、气象建模、湍流建模等.在二维空间中,Rosenfeld和Pfaltz[1]提出了一个利用降维进行距离变换的算图1球面距离变换((c),(d)是相应的距离场在二维参数化平面上的表示.采用2048×2048的本文根据球面距离函数和距离变换的特征,证明了在经度-纬度参数域上球面距离变换中的两个重要定理,通过扩展二维空间中的独立扫描算法,提出了一种基于GPU并行加速的球面距离变换算法,称为经纬独立扫描算法.将球面在经度-纬度参数域上参数化并离散映射到N×N的二维平面网格上后,我们的算法主要分成如下两个步骤执行:算法首先沿着表示纬度的二维网格的行扫描,得到二维网格中每个像素在其所在行中的最近边界像素,并保存在当前像素中.然后沿着表示经度的列扫描,这个步骤分成两次扫描完成.由于执行第一步骤之后列的每个像素中都保存了其所在行中的最近边界像素的坐标(如果存在的话),第一次扫描将从中剔除那些不会影响到最终球面距离变换结果的边界像素,得到一个与当前列相关的最小的边界像素的子集.紧接着根据得到的这个子集对列再进行一次扫描,计算每个像素到其最近边界像素的球面距离.本文提出的算法的复杂度为O(N2),其中N是对球面经度和纬度的参数化密度,即将球面的经度和纬度分别N等分.由于我们的算法首先得到的是每个球面像素所属于的边界像素的球面Voronoi区域,所以得到的球面距离变换结果在参数化密度下是精确的.本文第2节介绍距离变换的相关工作;第3节提出并证明两个定义在球面上的距离变换相关的定理,它们是保证本文算法的正确性的理论基础;第4法,称为独立扫描算法.独立扫描算法首先在一维上(行或列)独立地构造一个距离变换,然后以这个中间结果作为构造二维距离变换的输入.Paglieroni[2]统一了这种基于并行地扫描行和列进行距离变换的架构,提出并证明了只要符合Paglieroni条件的距离函数都可以使用这个架构进行距离变换.然而在球面空间中,由于球面距离不属于欧几里得空间,它并不满足Paglieroni条件,因而无法直接应用独立扫描算法.节介绍经纬独立扫描算法的细节,并在第5节给出我们算法的实验结果与统计;最后本文列举快速球面距离变换的几个应用并给出总结.2相关工作球面距离变换是指在球面上计算距离场的方法.根据球面距离变换的定义,最直接的距离变换方法是对球面上的每个非边界像素(边界像素的距离变换是0)执行一遍循环,计算每个边界像素到它的距离并找出这些距离中的最小值作为每个非边界像素距离变换的结果.令球面参数化后的二维网格的分辨率为N×N,该方法在最坏情况下具有的时间复杂度为O(N4).球面距离变换的Brute-force算法虽然可以获得精确解,实现也相对简单,但是算法的时间复杂度太高,因而难以实际应用.由于球面距离变换首先需要将球面进行参数化,一般是将球面映射到二维网格,所以可以借鉴某些二维空间的距离变换算法.扩散算法(Propaga-tionAlgorithm)是有效利用距离变换局部特性的一类算法[3-5].将二维网格中的每个非边界像素的距离初始化为无穷大,通过维护一个边界像素的辅助数组,扩散算法每次从数组中取出一个像素,称为中心像素,并基于中心像素的距离计算它的每一个相邻像素的距离变换,如果新的距离值小于原来保存的Page3距离值,则更新原距离值,并将该相邻像素放到辅助数组中,重复该步骤直到辅助数组中没有像素为止.由于这种算法类似于Dijkstra算法[6],因而令辅助数组是一个以距离为关键值的优先队列,每次从中取出具有最小距离的像素进行扩散,从而可以减少像素的更新次数.Danielsson[7]在1980年提出了一种计算欧几里得距离变换的光栅化扫描算法,由于它扩散的是最近边界像素的相对坐标,因而被称为向量扩散算法.Danielsson指出,尽管在大部分图像上得到的距离变换是正确的,但仍会产生误差,主要是因为离散欧几里得Voronoi区域并不总是相连的[8].Michikawa和Suzuki[9]将向量扩散算法扩展到球面距离变换中,提出了基于顺序向量扩散的球面距离变换算法(SequentialVectorSphericalDis-tanceTransform,SVSDT).在基于N×N参数化的球面上,该算法直接沿着纬度方向做三次顺逆时针交替的长度为3N/2顺序向量扩散算法,因此算法的复杂度为O(N2).由于该算法是Danielsson的向量扩散算法[7]的扩展,因而也存在误差.另一方面,该算法数据依赖性较强,很难在并行架构上进行加速.Rosenfeld和Pfaltz[1]提出了一个利用降维计算距离变换的算法,称为独立扫描算法.在二维图像空间中,独立扫描分为两个步骤,分别对应行扫描和列扫描.根据第二步的不同,独立扫描又分为几个分支[8].Kolountzakis等人[10]在1992年提出了一种O(N2logN)时间复杂度的基于抛物线相交的独立扫描算法,Chen和Chuang[11]将该算法进行了优化,使得其在最坏情况下具有O(N2)的复杂度[12].Maurer等人[13-15]采用了类似的方法,不同的是他们在第二步中采用了基于Voronoi图相交的方法,由于边界像素的Voronoi图与二维图像的列或行的交点可以比较容易地求得,因此这种方法的效率较高.Maurer等人[15]同时证明了这种算法是准确的距离变换的算法.由于这些算法可以独立地扫描二维网格的列和行,并能够直接地扩展到多维空间(通过不断地降维),因此得到了广泛的应用.然而,由于球面函数不属于欧几里得空间,这种并行的独立扫描算法无法直接应用到球面距离变换.3理论基础3.1球面参数化和球面距离变换在用计算机进行球面距离变换之前,首先需要对球面进行参数化,即将球面离散成二维网格.本文在经度-纬度参数域上对球面参数化,将球面离散成一个N×N的二维网格数据结构,如图2所示.注意到粗的横线虽然具有不同的经度值(如图2(b)所示),但它们分别汇聚成两个极点.尽管有这两个极点的存在,但它们并不影响本文算法的实现及球面距离场的计算.参数化后的球面被表示成用横坐标i和纵坐标j分别表示经度i=i×2π/N和纬度θj=j×π/(N-1)的二维网格,其中经度的范围是[0,2π),纬度的范围是[0,π],经度在=2π处与=0重合.球面距离变换是指在球面上定义的一个标量距离场.球面上经过两点的劣弧的长度定义为这两点的球面距离.不失一般性,本文中的距离场定义在半径为1的单位球上.定义在单位球面上任意两点p(θ1,1)和q(θ2,2)的球面距离为其中,分别是p,q从球坐标系转化到三维欧氏坐标系后的坐标,θ和分别表示纬度和经度坐标(见图2).根据球面距离的定义,0ds(p,q)π.3.2经度距离和中心纬度(p1≠p2),定义经度距离如下:对于球面上两个点p1(θ1,1)和p2(θ2,2)Ψ(1,2)=min(|1-2|,2π-|1-2|),如果已知经度0,定义中心纬度θ0为使得ds(p0,p1)=ds(p0,p2)的纬度值,即球面点p0(θ0,0)分别到p1和p2的球面距离相等,如图3.由于球面具有旋转不变性,不失一般性,可以将0,1,2同时绕着极轴旋转至令0=0,从而根据中心纬度的定义推导得到中心纬度的计算公式如下:Page4Θ(0,p1,p2)=Θ(0,Δp1,Δp2)=π烄2,arctancosθ2-cosθ1A-B,cosθ2-cosθ1A-B0烅arctancosθ2-cosθ1A-B+π,cosθ2-cosθ1A-B<烆其中,A=sinθ1cosΔ1,B=sinθ2cosΔ2.Δ表示绕着极轴的一个旋转变换,Δ1和Δ2分别表示经过旋转变换后的两个球面点的经度值.中心纬度的几何意义为经过两个点的球面路径的中心点并在该点与球面路径垂直的大圆,与经度为0所在的大圆的交点的纬度值.由于球面上两个不同的大圆有且仅有两个交点,且交点的连线刚好是一条直径,因此当θ1≠θ2时,在经度0表示的半圆上,有且仅有一个交点,从而任意两个具有不同纬度的球面点在任意经度上的中心纬度值θ0是存在且唯一的,并且θ0∈(0,π).3.3经纬独立扫描算法的理论基础在二维距离变换中,Paglieroni[2]证明了只要定义的距离函数具有如式(2)形式,且符合如下条件(式(3)和(4)),就可以使用独立扫描算法进行距离变换.y,|x1|<|x2|f(|x1|,|y|)f(|x2|,|y|)x,|y1|<|y2|f(|x|,|y1|)f(|x|,|y2|)将球面参数化到二维空间后,由球面距离函数的定义,其不是以两点的经度差和纬度差的绝对值为独立变量的函数,即球面距离函数不具有式(2)的形式,因此基于这些条件的独立扫描算法也不再适用于球面距离变换.本小节内容主要提出并证明了在球面经度-纬度参数域上,球面距离变换中的两个重要定理.这两个定理保证了依次沿参数域的纬线和经线独立扫描得到球面距离变换的正确性.定理1.对于任意经度,在同一纬度θ0上的两个点p1(θ0,1)和p2(θ0,2),如果经度距离Ψ(,1)<Ψ(,2),那么对于经度上的任何球面点p0(θ,)(0θπ),ds(p0,p1)ds(p0,p2)成立,且当sinθ=0或sinθ0=0时取等号.证明.根据球面距离的定义及三角函数公式,cosds(p0,p1)-cosds(p0,p2)=sinθsinθ0(cos(-1)-cos(-2))=sinθsinθ0(cos(Ψ(-1))-cos(Ψ(-2))),其中,由余弦函数在[0,π]的单调性及经度距离的值域,当Ψ(,1)<Ψ(,2)时,cosds(p0,p1)>cosds(p0,p2).由于球面距离的区间是[0,π],因而就有ds(p0,p1)ds(p0,p2)成立,当且仅当sinθsinθ0=0时,等号成立.该定理说明对于任意经度上的球面像素,如果在同一纬度上存在边界像素,则只有与具有最小经度距离的边界像素离经度上的所有像素都最近.因此也表明在每条经线上,最多有N个球面边界像素的Voronoi区域与该经线相交,从而使每条经线上的球面像素的距离变换可以限制在与O(N)个边界像素的距离计算得到,由此可以得到最坏情况下O(N3)的整体时间复杂度.定理2.对于球面上的两个点p1(θ1,1)和p2(θ2,2),p0(θ0,0)是经线0上的到p1和p2距离相等的点,即θ0是p1和p2关于经线0的中心纬度,其中θ1<θ2.对于经线0上的其它一点p(θ,0),如果θ<θ0,则ds(p1,p)<ds(p2,p),反之,如果θ>θ0,则ds(p1,p)>ds(p2,p).证明.由于球面绕极轴旋转具有旋转不变性,因此令0=0,其它各点也做相应的旋转变换.根据球面距离公式,令函数F(θ)=cosds(p1,p)-cosds(p2,p),根据球面距离定义,有F(θ)=(sinθ1cos1,sinθ1sin1,cosθ1)·(sinθ,0,cosθ)-(sinθ2cos2,sinθ2sin2,cosθ2)·(sinθ,0,cosθ)F(θ)=Asinθ+Bcosθ烄A=sinθ1cos1-sinθ2cos2烅烆B=cosθ1-cosθ由假设θ1<θ2(θ1,θ2∈[0,π]),因此B>0,由三角函数公式,可将式(5)改写成如下形式:Page5其中γ=arctan(A/B),由假设当θ=θ0时,F(θ)=0,得到γ-θ0=±π/2.由于B>0,γ∈(-π/2,π/2),并且θ0∈(0,π),所以γ-θ0=-π/2.我们令θ=θ0+Δθ,于是有因为Δθ∈(0,π),所以F(θ)>0ds(p1,p)<ds(p2,p),θ<θ0烅烄F(θ)<0ds(p1,p)>ds(p2,p),θ>θ烆该定理是文献[12]中的引理1在球面上的推广.在球面上,对于两个点p1(θ1,1)和p2(θ2,2),只要有θ1≠θ2,则它们关于某一经线0上每个点的球面距离函数的交点有且仅有一个,这个交点的纬度即它们在该条经线上的中心纬度.该定理保证了任意两个点p1和p2关于某条经线的中心纬度构成了对该经线的划分,使得这条经线上的所有点以中心纬度为界,分别属于p1和p2所生成的球面Voronoi区域.4经纬独立扫描算法及实现在第3节中,我们引入了在经度-纬度参数域上的球面参数化方法后,给出了球面距离、经度距离、中心纬度等定义,最后证明了在这种参数域上,满足依次沿纬线和经线独立扫描进行球面距离变换的两个重要定理.为描述算法,假设在经度-纬度参数域上,我们已经把球面离散成N×N的二维网格G={gi,j|0i,j<N}.网格的每个元素保存一个索引,初始时所有表示边界像素的网格元素都初始化为自身索引,其它则初始化为一个无效的索引.本节中,在讨论球面距离变换算法的时候,如果不存在二义性,二维网格的点(i,j)即表示球面上的点(θj,i).4.1沿纬线逆/顺时针扫描对于网格中的第i列,Ni,j表示第j行中离球面点gi,j(θj,i)最近的边界像素,令Ni={Ni,j|Ni,j≠NULL,j=0,1,2,…,n-1}表示第i列每个像素在其所在行中的最近边界像素的集合,Ni,j=NULL表示第j行没有边界像素存在,称Ni为第i列的最近边界像素候选集.根据定理1,在每一行中,对于经度i上的球面点(θj,i),我们只需要找到与其具有最近经度距离(式(1))的边界像素.因此,对球面参数化得到的二维网格的每一行独立地从左往右和从右往左扫描,即可得到每一列的最近边界像素候选集.然而,由于球面的经度坐标在2π和0的时候会重合,所以,需要扫描3N/2的长度[9],以找到正确的具有最近经度距离的边界像素.如图4(a)所示,在第一次扫描时(逆时针),仅需要简单地把每个边界像素的索引填入在其之后,在下一个边界像素之前的网格元素内,扫描完成后,只要该行存在边界像素,每个网格元素都会保存一个边界像素的索引;在第二次反向扫描时(顺时针),初始化一个辅助边界像素索引B为起始网格元素保存的边界像素的索引,计算B与当前网格点的经度距离,并与网格元素已保存的边界像素到该网格点的经度距离比较,如果前者小于后者,则更新当前网格元素以保存新的边界像素的索引B;否则将B更新为当前网格元素已保存的边界像素的索引.4.2沿经线计算球面距离变换给定4.1节中得到的第i列的最近边界像素候选集Ni,如果把Ni中的边界像素的Voronoi图不与经线i相交的那些边界像素剔除,则得到第i列的最近边界像素集合Si.根据定理2及Meijster等人的方法[15-16],将这一步分成两次扫描,第一次扫描从列的顶部至底部,以求得该列的最近边界像素集合Si;第二次扫描则从列的底部扫描至顶部,以完成列的每个像素的距离变换.算法的大致流程如下.对于列i:初始化两个辅助数组W,S;令W[0]=0,S[0]=Ni,0令iter=1;1.按j递增的顺序依次取出Ni中的下一个边界像素Ni,j,执行以下流程,直到Ni为空,2.1.如果θjW[iter-1],则计算球面点(θj,i)到S[iter-1]的球面距离并输出到结果中;否则执行步2.2;2.2.iter=iter-1,执行步2.1.如果|Ni|=1,则略过算法中的步1,球面距离变换可以直接扫描i列的每个像素并计算到该边界1.1.计算Ni,j和S[iter-1]到点(W[iter-1],i)的球面距离,分别得到d1和d2,如果d1>d2,执行步1.2;否则,执行步1.3;1.2.计算Ni,j和S[iter-1]在i上的中心纬度θw=Θ(i,Ni,j,S[iter-1]),并执行W[iter]=θw,S[iter]=Ni,j,iter=iter+1;1.3.iter=iter-1,执行步1.1;见图4(b);2.对于列i的每个像素(i,j),按j递减的顺序从底部到顶部,Page6像素的球面距离得到.另外,根据球面上中心纬度的定义及性质,算法流程的第1部分中的辅助数组至少会有一个元素存在.图4(a)表示算法的第1部分(分别沿着每条纬线做逆时针和顺时针的长度为3N/2的扫描);(b)表示算法的第2部分的第一次扫描(对于一个新的边界像素P0,由于P0到θ1的距离小于P1到θ1的距离,因此执行算法中的步1.3,从辅助数组中分别移除P1和θ1;而P0到θ2的距离大于P2到θ2的距离,因此执行算法中的步1.2,将P0和θ0分别加入到辅助数组中)4.3算法复杂度在本文算法的第1部分(4.1节)中,对网格的每一行执行了两次3N/2长度的扫描,因此总体的算法复杂度为O(N2).在算法的第2部分(4.2节)中,对于网格的每一列,算法执行了两次O(N)的扫描过程,因而算法的这一步骤在整个二维参数化网格上的复杂度也是O(N2).结合两个部分,本文算法的整体复杂度仍然为O(N2).4.4基于GPU的算法优化因为上述两个部分分别沿着二维参数化网格的每行和每列的扫描是相互独立的,所以我们在GPU上用CUDA实现了并行的算法.注意到,本文算法的第1部分中是沿着网格的行扫描的,而在第2部分中是沿着网格的列进行扫描.由于GPU显存的存取特性,如果在一个Block内的线程具有连续的显存读取和写入,则可以一定程度上提升GPU算法的效率.因此可以在两个部分之间对存储的二维网格做转置,从而充分发挥GPU连续存取显存数据的效率.当然,转置需要额外的开销,但是,在实验中我们发现,由于对齐了显存存取,这种开销已经被掩盖.另一方面,由于GPU是针对大量(数以万计)线程并行优化的硬件架构,所以当并行执行的线程数量较少时,GPU的高性能计算能力无法被充分发挥出来.因此我们参照Cao等人提出的并行条带算法[17],使用m个线程同时处理原来仅由一个线程完成的计算任务,然后用额外的线程协调上述m个线程的结果.相应的运行时间统计结果在表1的第6列(统计时m=16).从中可以看到,当球面参数化密度较低的时候,使用该方法可以用较小的代价获得更高的并行粒度,从而显著提高了球面距离变换的计算性能.5实验结果我们的实验平台配置是IntelCore2E8400的CPU(4GB内存)和NVIDIAGeForce280GTX的GPU(1GB显存).图1显示了我们的算法运行在参数化密度为N=2048并随机生成100个网格点作为边界像素的结果,和Brute-force算法相比,我们的算法速度优势非常明显.图5显示了我们的算法在具有以字符串“GRAPHICS”为边界像素的输入上得到的结果.图6统计了在2048×2048分辨率下,边界像素的数量对算法性能的影响.从图中可以看到,算法的第1部分的运行时间基本不受边界像素数量的影响,而第2部分的运行时间随着边界像素的数量变化出现图5应用字符串“GRAPHICS”作为边界像素生成的等距线结果((a)是边界像素的示意图,采用2048×2048的分辨率,(b)是运行我们算法的结果.耗时14.5ms)图6边界像素数量对本文的经纬独立扫描算法的两个部分的平均运行时间的影响(球面参数化密度为2048×2048,横轴表示随机生成的边界像素的数量)Page7波动.当边界像素较少时,每一列的最近边界像素候选集的元素个数也相对较少,从而第2部分中算法流程的步1也能够较快地完成;另一方面,如果第2部分中算法流程的步1.3和步2.2被执行的次数较多而构成深度的循环,由于GPU的硬件特性,一个线程将会被分开执行,从而导致了性能下降.图6说明了当边界像素密度在10%左右时,这种现象最明显.然而可以证明,边界像素的数量不会影响整体的算法复杂度[16].由于在快速球面距离变换方面的研究相对较少,我们主要与Michikawa和Suzuki[9]的SVSDT算法进行对比.由于他们的算法是基于向量扩散的,因而难以在GPU上实现.基于扩散的方法是一个使用优先队列的有序扩散算法的实现,在每次扩散过程中保存最近边界像素的索引,以保证任意两个球面点的距离计算是精确的,然而同一般扩散算法一样,仍然会存在精度误差.表1列出了对比实验的统计结果.时间统计仅包括球面距离变换执行的时间,不包含初始化部分,基于GPU的本文的算法也不包含数据从系统内存上传到显存的时间.除本文算法实时计算每个网格点的欧氏空间坐标外,其余三种方法都使用了辅助数组进行缓存加速.表1各种算法的时间统计(只有本文的算法是基于GPU的,边界像素通过随机生成的1000个点得到)参数化密度0.080.00740.320.00921.250.01604.960.028019.700.0600512228.710242117.620482479.013.87409621945.071.88819227811.0571.9①注:上标①表示由于使用了优先队列(具有额外的存储开销),因此受32位系统单进程2GB的内存限制,我们实时计算每个网格点对应的欧式空间坐标.与之相距最近的边界像素的坐标(4.2节算法流程的步6应用2.1中直接输出最近边界像素的索引),从而可以根据边界像素的属性(如颜色等)直接生成球面Voronoi图,如图7(a)所示.球面质心Voronoi图(SphericalCentroidVoronoiDiagrams,SCVDs)是球面Voronoi图计算的一个扩展,在球面均匀网格划分、球面均匀采样等领域有着重要的应用.我们使用Lloyd迭代算法[18]得到球面质心Voronoi图,如图7所示.本节给出了球面距离变换的3个常见应用.6.1球面Voronoi图生成球面Voronoi图的计算是球面距离变换的直接应用.经过球面距离变换后,球面上的每个点都保存了球面距离变换在很多领域都有着重要的应用.图7球面质心Voronoi图的迭代过程(颜色最深的小球表示生成当前Voronoi图的中心点,颜色最浅的小球表示6.2地球表面相关的建模从以往的文献中,我们发现球面距离变换的最广泛的应用是在与地球地理相关的各种建模中(如气象运动建模、海洋湍流建模等).如图8展示了基于快速球面距离变换的地球建模,使用我们的算法,从地球洋面上的任何一个位置,都能迅速得到离其最近的大陆海岸以及相应的球面距离.6.3实时绘制中可见性场插值在绘制中,由于可见性场是一个二值函数,因此直接进行插值会产生鬼影效果(可见性既不为0,也不为1),如图9(e)所示.在文献[19]中,Wang等人通过将可见性场映射到半球上的带符号球面距离场(SphericalSignedDistanceField,SSDF,即在可见性为0的地方距离为负值),然后通过对距离场进行插值的方法,恢复出对应位置的可见性场,如图9所示.本文的算法可以实时地得到距离场,因而可以加快动态场景的真实感绘制过程.Page8图8(a)和(b)计算海洋中各点到最近海岸的距离变图9球面距离变换应用于绘制中的可见性场插值((a)7总结本文主要研究了球面上快速距离变换的精确方法,提出了一个基于GPU的快速球面距离变换的并行算法,称为经纬独立扫描算法,并从理论上证明了在经度-纬度参数域上保证我们的算法的正确性的一般定理.得益于GPU的强大的计算能力,我们的算法在较高分辨率下仍能达到接近实时的计算效率.同时本文也展现了球面距离变换在不同领域中的应用.虽然本文证明了在球面经度-纬度参数域上,我们的算法能够准确地计算球面距离变换,然而,由于这种球面参数化是不均匀的参数化,因而在球面上从赤道到两极存在着精度变化,在未来的工作中可以研究新的球面参数化方法,使得在整个球面上具有更加一致的精度.
