Page1一种面向方面需求模型的分析与验证方法金英刘华羉张鹏(吉林大学计算机科学与技术学院长春130012)摘要建立具有完整性和一致性的需求模型是软件项目成功的基础,验证需求模型是否具有相关性质在软件开发中具有重要的意义.文中针对面向方面文档驱动需求方法中的需求分析过程,给出了关注点建模过程中的若干验证策略,提出了基于本体的关注点模型验证的相关方法,并通过一个实例说明了文中方法的有效性.关键词面向方面需求分析;关注点关联图;本体;一致性验证1引言需求工程在软件开发过程中具有方向性和决策性的意义,需求建模是软件需求工程中的一个重要阶段,一个定义良好的需求模型是保证软件项目成功的前提之一.需求建模通过切实有效的方法和技术对所获取需求中的行为、特征和相关约束进行抽取和精化,构建一个准确描述软件系统功能和约束的需求模型.随着软件系统规模的不断扩大,软件需求模型也越来越复杂,如何验证需求模型的完整性、一致性等性质是需求工程中的一个挑战.目前有很多需求建模方法[1-5]和需求模型验证方法[6-8],不同的需求建模方法从不同的视角看待软件系统,体现了不同的建模理念.当前在学术界受到广泛关注的需求建模方法包括面向对象方法[5]、面向方面(Aspect)的方法[3]、面向特征(Feature)的方法[4]和面向目标(Goal)的方法[2].针对不同的需求模型有不同的模型验证方法,主要有基于语义分析的验证方法[9]、基于状态机推理的验证方法[6]、基于本体约束验证方法[10-11]等,从不同侧面一定程度上解决需求验证问题.在文献[12]中提出了一种面向方面文档驱动需求方法,基于该方法框架,本文给出了一种针对面向Page2方面需求分析模型的验证方法,给出了获取和规范描述关注点模型过程中的验证策略,提出了基于本体的关注点模型验证方法,归纳、定义并实现了基于本体的检验面向方面需求分析模型的完整性和一致性等性质的若干约束条件,最后,通过一个实例说明了本文所提出方法的有效性.本文第2节概要介绍面向方面文档驱动需求工程方法的主要过程以及关注点、关注点关联关系和关注点关联图等定义;第3节给出获取和规范描述关注点模型的方法以及在该过程中的验证策略;第4节阐述基于本体的需求模型定义和验证方法;第5节通过实例分析验证本文方法的可行性和有效性;第6节针对国内外相关工作做了比较;最后总结全文并提出下一步工作设想.2面向方面需求工程概述关注点(Concern)指的是一个特定的目标、概念或者兴趣域.一个关注点通常对应一个或者多个软件相关人员所关心的问题或特性,通常被定义为一组相互关联的需求集合.“关注点分离(SeparateofConcern)”[13]是软件工程中应遵守的必要原则,以分离关注点为核心的面向方面需求工程AORE[3]在需求阶段引入了关注点的概念,有效降低了系统的复杂性和耦合性,提高了需求的模块化程度.文献[12]中提出的面向方面文档驱动需求分析方法,将建立形式化需求文本的文档驱动方法与面向方面需求工程相结合,设计了一个从需求文本出发,在识别、定义关注点及关注点关联图的基础上,定义需求的形式化文档的逐步精化的过程.本文将在此工作的基础上,给出一个关注点定义及关注点模型完整性和一致性的验证方法.图1中介绍了面向方面文档驱动需求方法的主要过程.图1面向方面文档驱动需求方法的主要过程如图1所示,面向方面文档驱动需求分析方法首先根据面向方面需求分析原则,对原有的文本需求进行分离关注点、定义关注点、定义关注点间关系、判定横切关注点来构建关注点模型,此后对需求进行形式化描述,并进行需求变更影响分析,最后重新审视变量与需求间的关系,定义需求的可追踪性.本文在原有工作基础上,针对其中的面向方面需求分析方法部分给出了在关注点建模过程中的验证策略,以及基于本体的关注点模型验证方法,如图1中的虚线部分所示.下面给出关注点、关注点依赖关系、关注点关联图的相关定义.定义1.关注点.一个关注点C可以定义为一个四元组(id,Des,Rs,type),其中id为关注点C的名字,Des为关注点C的文本描述,Rs指与关注点C相关联的需求集合,type指的是关注点的类型.关注点一共分成4种类型,分别是:topic表示主题关注点;kinds表示功能、行为和状态类型的关注点;instance表示更为具体的kinds类型关注点;property表示kinds/instance类型关注点的特征.定义2.关注点关联关系.一个关注点关联关系RL可以定义为一个五元组(Ci,Cj,reqLs,type,crosscutting),表示从关注点Ci通过需求集合reqLs关联到关注点Cj,并且reqLs∈Ci.Rs∩Cj.Rs.关联关系一共分成6种类型,分别是relates_to,描述一个topic类型关注点到kinds类型关注点的关联;kinds_of,描述一个kind类型关注点到另一个kind类型关注点的关联;instance_of,描述一个kinds类型关注点到一个instance类型关注点的关联;aplies_of,描述一个instance类型关注点到一个property类型关注点的关联;dependent,没有定义域和值域的限制,描述逻辑上的关联关系;motivate与dependent为互逆关系.crosscutting的值为Bool类型,当其值为真时代表Ci、Cj之间存在横切关系,Ci为Cj的横切关注点,否则Ci、Cj间不存在横切关系.此处关于关注点关联关系的定义在文献[12]的基础上增加了一个Bool元素来表示关注点的横切关系.定义3.关注点关联图.设存在一个关注点集合Cset、存在一个关注点关联关系集合RLset,对于CiCj∈Cset,若存在Ci与Cj间的依赖关系,则认为Ci与Cj之间存在一条有向边.以Cset作为点集,以RLset作为边集组成的图G,叫做关注点关联图.Page33关注点模型建立过程中的验证3.1关注点模型的获取方法归纳为3个层次,如图2[14]所示.在文献[14]中指出,一个系统的关注点可以被第1层为通用关注点,表示系统中常见模块,例如安全控制等;第2层为领域关注点,表示通过领域分析获得的关注点,例如对于实时系统来说,时间控制就是一个领域关注点;第3层为实现系统关注点,表示完成需求所要实现的系统功能.关注点模型获取方法主要分成以下几个步骤:(1)对于原始的需求文本进行按条目的编号,构建一个型如R1,R2,…,Rn的需求集R.(2)自顶向下分析.这是一个精炼化的过程,首先建立通用关注点,然后建立领域关注点,并构建其与通用关注点间的关系,之后通过分析需求集R,建立更多的具体化的关注点.(3)自底向上分析.使用词法分析工具,以需求集R作为原始输入,对需求进行词法分析以获取需求中所描述的动作、行为、特征、目标、功能等关键词,并称之为候选关注点集CCset.然后从候选关注点集CCset中最基层的候选关注点出发,通过对候选关注点进行分组,将其中比较独立和重要的候选关注点表示成关注点.对于一些可以被其它关注点所包含的候选关注点,将其归并进相关的关注点,这样一步步自底向上的建立关注点模型.(4)结合.将自顶向下分析与自底向上分析所构建的模型进行结合,并结合实际分析,获取最终的关注点模型.(5)横切关注点判定.判定一个关注点Ci是否为横切关注点的主要依据是,观察依赖于该关注点的某一需求Ri是否同时依赖于其它关注点集Cset,若Ri可以被重新定义分割成几条新的需求并且可以被Cset中的关注点所分别实现,则对Ri进行重新定义,若Ri不可分割且关注点集Cset为了实现需求Ri需要依赖Ci中的功能,则将Cset中与Ri相关的共同功能提取出来,加入到Ci关注点中,此时关注点Ci即为一个横切关注点集Cset的横切关注点.经过以上的5个主要步骤,即可形成一个面向方面需求分析的关注点模型,模型中包括需求集R、关注点集C、关注点关联关系集RL、横切关注点集Ccut.然而在这个过程中,存在着以大量手工操作和开发者经验作为依据的分析过程,为了验证模型的准确性,本文给出了一系列保证关注点模型正确性的方法.3.2建模过程中的验证策略本文主要基于3个方面,在模型获取过程中开展验证工作,分别是需求依赖的准确性验证、候选关注点分组的合理性检验、横切关注点必要条件判定.3.2.1需求依赖准确性的验证策略建立关注点模型的实际过程中,某需求Ri不与任何关注点存在依赖主要存在两种可能.其一,对某需求Ri的词法分析并未获得相关候选关注点,实际上一种可能是Ri中将其具体需求描述的比较模糊,并没有清晰地指出它所要对应的候选关注点;另一种可能是Ri中本身不包含需要系统完成的实际功能.其二,在自底向上的构建关注点模型的过程中,缺少对需求与动作间依赖关系的重定向.为了解决上述问题,本文给出了相关的验证策略.需求重审策略:在建模开始阶段,若需求Ri中不包含任何候选关注点,则对其进行重审,若Ri描述中隐含了其实际关联候选关注点CCj,则建立Ri到CCj的依赖关系,并通过与需求提供人员进行沟通,修改需求Ri以使其描述的更为直观;若Ri中所描述的内容,对实际开发并无影响,即不需要某一候选关注点CCk来实现该需求,则忽略该需求.候选关注点分组中的需求依赖重定向策略:建模过程中的候选关注点分组,实际上是将原有的相互关联一个候选关注点集CCset重组成为一个新的候选关注点CCi,并将CCset中的子元素表示成CCi的子候选关注点,分组过程结束后所剩余的单独候选关注点和候选关注点组就被定义成关注点.若CCj∈CCset,则依赖于候选关注点CCj的需求Rn需要对其依赖关系进行重定向,删去Rn与CCj之间的依赖关系,建立Rn与CCi之间的依赖关系.3.2.2候选关注点分组验证策略前文中已经简要描述了自底向上构建关注点模型的过程,在对需求集进行词法分析之后,会获得大量的动作、行为、目标、功能等候选关注点,而其中的很多候选关注点不足以单独作为关注点存在,因此需要进行候选关注点分组以组建关注点.如果不同候选关注点与相同的需求之间存在关联,则这些候Page4选关注点可能会被分组,候选关注点分组是一个迭代进行的过程,多个候选关注点所组成的候选关注点组也将被看成是一个独立的新候选关注点,并参与到下一阶段的候选关注点分组,直到所有候选关注点组和独立候选关注点之间已经不存在隶属关系,此时每一个候选关注点组和独立的候选关注点都被定义为一个关注点.候选关注点分组示例如图3所示.图3中菱形表示一个候选关注点,圆形表示一个需求,在图中我们可以看出,R1依赖于CC2、CC3,R2依赖于CC2、CC4.此时通过分析候选关注点和需求本身,认为CC3和CC4是CC2的下属候选关注点,从而将其合并组成CC2,同时将候选关注点CC4与需求R5间的依赖关系重定向为R5与CC2间的依赖关系,同时将R1、R2与CC2、CC3、CC4间的关系重定向为与CC2的关系.此时,CC2可以继续参与候选关注点分组过程,并可能与CC1、CC5组成一个新的候选关注点.由于候选关注点分组是一个主观性很强的过程,需要结合实际的分析才能确定是否可以将几个候选关注点组合在一起,因此,本节给出了检测候选关注点是否可以被分组的必要条件.定义4.候选关注点分组验证图GCC(CCset).设存在由一些独立候选关注点和候选关注点组组成的集合CCset,对于CCi、CCj∈CCset,若存在某需求Rn使得CCi、CCj与Rn之间同时存在依赖关系,则认为CCi与CCj间存在连通边.以集合CCset中的元素作为点集,以CCset中存在的连通边作为边集,存在一个候选关注点分组验证图GCC.候选关注点分组策略:对于一个候选关注点集CCset,若候选关注点集CCset可能被重组为一个候选关注点组,则GCC(CCset)必须是一个连通图.本文依靠验证图GCC的连通性来检验这些候选关注点之间是否存在联系,如果图GCC不具备连通性,说明其中存在某些候选关注点CCi与其它的候选关注点之间不分享需求,即不存在联系,不满足分组的必要条件.在每次进行分组之后,按照候选关注点分组中需求依赖重定向策略对需求依赖关系进行重定向,同时再将重组后的CCset集作为一个新的节点加入候选关注点集CCset,并在候选关注点集CCset中删去CCset中原有的候选关注点.完成候选关注点分组后,将CCset中包含的候选关注点定义成关注点.3.2.3横切关注点验证策略在本文3.1节中提到了横切的关注点的判定方法,由于横切关注点的判定同样需要人工的分析,这里给出判定横切关注点的必要条件.验证横切关注点策略:存在一个关注点集合Cset,当且仅当任意属于Cset的Ci都与某需求Rj存在依赖关系,Cset中才可能存在横切关注点.若Cn为Cset中基于Rj的横切关注点,则Cset中被Cn横切的关注点为实现需求Rj必须依靠Cn中的功能.4基于本体的关注点模型定义及验证方法基于本体的模型定义方法主要研究的是需求分析所建立关注点模型其本质上有什么样的对象、过程、属性和关系,以及它们之间的依赖关系如何.对于一个基于关注点的面向方面模型,其建模过程更多的是依赖于需求分析人员的经验,因此,检验模型的可靠性是本文的研究重点.第3节介绍了从原始需求文本获取关注点以及相关的验证方法,本节将介绍基于本体的关注点模型,并给出相关约束来验证关注点模型的完整性和一致性.4.1基于本体的关注点模型关注点模型中包括需求集R、关注点集C、关注点关联关系集RL、横切关注点集Ccut,在关注点的相关定义中,可以看出一个关注点是由名字、描述、依赖需求集、类型所组成的四元组,同时两个关注点之间的关联关系根据关注点类型的不同存在6种类型.一个合理的本体模型必须保证与原始模型描述相同的内容,根据关注点模型的特点和本体描述的特点,本文对基于本体的关注点模型有如下定义.定义5.基于本体的关注点模型CM.一个基于本体的关注点模型CM被定义成一个4元组,CM=(C,RL,RA,Res).其中:Page5C代表CM中的概念集合.C=Con∪Re,Con为关注点概念集,Re为需求概念.Con=CB∪CC,CB为基础关注点概念集,CC为横切关注点概念集,同时CB=CtB∪CkB∪CiB∪CpB,分别表示topic、kinds、instance、property4种类型的基础关注点,CC=CkC∪CiC,分别表示kinds和instance两种类型的横切关注点.RL代表CM中的关系集合,RL=Rr∪Rc,其中Rr表示Re与Con之间的依赖关系,Rc=Rcut∪表1基于本体的关注点模型中的关系relaydependentmotivatecrosscuttingbe_crosscutkinds_ofinstance_ofrelate_toapplys_ofrequirementconcerncrosscutting_concern横切关注点base_concerninstanceCkindsCtopicinstanceBkindsBproperty本文通过总结归纳现有基于本体的需求模型完整性和一致性的约束规则,结合面向方面需求模型的实际特点,定义和实现了CM中的约束集Res.约束集Res=Rc∪Ri,其中Rc为完整性约束集,Ri为一致性约束集,具体的约束如下所示:完整性约束集犚犮Res.1领域可扩展性约束:一般性的软件需求都应该包括软件安全需求、功能性需求和非功能性需求.本约束规则在此基础上通过对不同软件产品的本体知识模型进行分析,定义关注点模型中所必须要定义的关注点,如:(1)必须存在安全需求关注点.(2)必须存在非功能性需求关注点.Res.2Topic约束:在本体实例中,有且仅有一Res.3需求覆盖约束:对于任何一个requirement个topic概念的实例.Rtype,其中Rcut代表CB与CC之间横切与被横切的关系,Rtype代表Con中各种类型的关注点依赖关系.所定义的概念及关系.RA代表CM中概念间的层次关系集合.Res代表CM中的约束集合.根据定义5中所定义的本体关联模型CM,本表1和表2中给出了基于本体的关注点模型中文构建的其概念间的关联如图4所示.的实例,都最少依赖于一个关注点.Res.4关注点需求依赖约束:每个关注点必定Page6被1个以上的需求所依赖.一致性约束集犚犻Res.5实例命名互斥约束:每一个概念具有不Res.6关系集约束:任何一个合法关系RL必同名称的实例.须建立在两个合法的概念C上.Res.7关系定义域、值域约束:为Res.6的扩展定义,任何一个合法的关系RL,必须满足表2中所定义的定义域和值域.例如:Res.8横切约束:对于任意一个crosscutting_concern的实例,最少横切两个关注点.crosscutting_concern2crosscutting.concern.Res.9互逆关系约束:关系crosscutting与be_crosscut;motivate与dependent具有互逆性.Res.10关注点关联关系存在约束:当且仅当两个关注点包含的需求集存在交集,这两个关注点才存在关联关系.对于上述定义的10条约束中的Res.3、Res.4、Res.6、Res.7、Res.8、Res.9,文中给出了基于描述逻辑(DescriptionLogic)的定义,直接作为公理存储在本体当中,用于推理机进行逻辑检测.对于Res.1、Res.2、Res.5、Res.10本文利用JenaAPI工具通过对本体进行查询和推理来验证约束条件是否成立.例如检验Res.10的JanaAPI算法如下所示:JenaAPI:查询所有关注点C的依赖需求集Rset,当Ci与Cj间定义了关联关系时,若RsetI与RsetJ的交集不为空,则说明Ci与Cj间关联关系成立,否则说明不成立.若所有关注点关联关系都成立,则返回true,否则返回false.4.2关注点模型到基于本体的关注点模型的映射及验证本节介绍了从关注点模型到基于本体的关注点模型的映射规则及映射后的验证方法,设存在一个需求集Rset、一个关注点集合Cset(id,Des,Rs,type)、一个关注点关联关系集合RLset(Ci,Cj,reqLs,type,crosscutting)和一个横切关注点集合Ccutset,有如下映射规则:(1)若有Ci∈Ccutset且Ci∈Cset,如果Ci.type=kinds,则建立名为Ci.id的kindsC概念实例,如果Ci.type=instance,则建立名为Ci.id的instanceC概念实例.(2)若有CiCcutset且Ci∈Cset,如果Ci.type=topic,则建立名为Ci.id的topic概念实例,如果Ci.type=kinds,则建立名为Ci.id的kindsB概念实例,如果Ci.type=instance,则建立名为Ci.id的instanceB概念实例,如果Ci.type=property,则建立名为Ci.id的property概念实例.概念实例.(3)对于Ri∈Rset,建立名为Ri的requirement(4)对于Ci∈Cset中Ri∈Ci.Rs,建立关系relay(Ri,Ci).(5)对于RLi∈RLset,若RLi.crosscutting=1,则建立关系若RLi.type=kinds_of,则建立关系若RLi.type=instance_of,则建立关系若RLi.type=relate_to,则建立关系若RLi.type=applys_of,则建立关系若RLi.type=motivate,则建立关系若RLi.type=dependent,则建立关系通过上述的映射规则,我们可以在关注点模型的基础上获得相应的基于本体的关注点实例CM_instance,之后通过CM中的约束来检验CM_instance的完整性和一致性.定义6.验证函数Verify.Verify(CM_instance,Res)=false,{elsetrue,iftheCM_instance满足Res,否则本文利用描述逻辑和JenaAPI实现了检验各项约束的工具,此时利用定义的验证函数Verify来检验CM_instance的完整性和一致性.若函数返回结果为真,代表通过检验,否则需要对关注点模型进行相关修改.Page75实例分析本节将针对一个实例,检验基于本体的关注点模型的完整性和一致性验证策略,并给出分析结果.文献[15]中给出的是一个电灯控制系统的需求文本,该需求文本描述规范,被多次作为需求分析实例所使用,包括本文中介绍到的面向方面稳当驱动需求方法、SCR(SoftwareCostReduction)方法等.需求文本描述了电灯控制系统的各方面具体需求.在功能性需求方面,分别从用户需求角度(U〈number〉)和管理员需求角度(FM〈number〉)给出了系统的功能需求,需求文本又从容错度、安全性、用户界面这3个方面描述了系统的非功能性需求(NF〈number〉).实验人员依据第3节中介绍的分析方法和建模过程,首先建立需求集R,并对R进行词法分析、需求重审,获得改进后的需求集R和候选关注点集CCset,之后通过自顶向下和自底向上的分析方法并结合候选关注点分组策略获得关注点集和关注点关联关系集,最后通过横切判定并结合横切关注点验证策略获得横切关注点集.定义了一个未经验证的关注点模型,其中关注点定义和关注点关联图如表3和图5所示.表3未经检测的电灯控制系统中的关注点定义关注点名SYSLSFMUSERCSFMCPSIGJOJCMDMALmdmalfunctionOLSMALolsmalfunctionT2iMDOLSSITIMEOverrideOverridecontrolLCMAL{FM1,U14}{NF5}{FM7,NF4}{FM7,NF3}{FM4}{U14}{FM1}{U13}{FM2,FM4}{FM6,FM7}图5未经检测的电灯控制系统的关注点关联图这部分关注点模型的需求集R中包含{FM1,FM2,FM4,FM6,FM7,NF3~NF9,U13,U14},横切关注点集Ccut中包含{FMCP,MAL,SIG}.此时,依据4.1节中定义的基于本体的关注点模型CM和4.2节中给出的关注点模型到CM的映射规则,将关注点模型映射到CM之上获得CM_instance,图6中给出了CM_instance中的一部分.包括需求NF1、FM2、FM4,关注点FMCP、Override、T2i以及它们之间的关系.再利用定义6中给出的验证函数,通过进行本体推理机推理,检测该模型的完整性和一致性.在IntelCoreDuoE7500CPU、主频2.93GHz、2GB内存的运行环境下,检测程序运行时间共862ms,检测出20余项错误,其中包括的主要错误有:(1)未定义基于安全和非功能性需求的关注点.(2)关注点间关系定义错误,例如MAL到OLSMAL和MDMAL的关系不能为kinds_of而应该是instance_of.(3)需求未获得覆盖,如NF8,NF9等需求不存Page8在与任何关注点间的依赖关系.(4)SYS关注点并未被任何需求所依赖.(5)一些本来不应该存在关联关系的关注点间(6)存在两个以上的Topic类型关注点.被定义了关联关系,如SIG和JC关注点.存在上述错误的主要原因包括:需求建模实图6利用映射规则构建的部分本体实例图表4修改后的电灯控制系统中的关注点定义{NF6,NF7}{NF8,NF9}{NF6}{NF7}{NF8}{FM1,U14}{NF5}{FM7,NF4}{FM7,NF3}{FM4}{U14}{FM1}{U13}{FM2,FM4}{FM6,FM7}关注点名SYSSECUIADSNHCEIUWUILSFMUSERCSFMCPSIGJOJCMDMALmdmalfunctionOLSMALolsmalfunctionT2iMDOLSSITIMEOverrideOverridecontrolLCMAL验人员对领域知识掌握不够充分、建模过程中对细节的定义存在纰漏、对需求文本理解的不够深刻等等.根据工具检测报告,我们对原有的关注点模型进行了修改,定义修改后的关注点和关注点关联图如表4和图7所示.Page9图7修改后的电灯控制系统的关注点关联图经过检测,修改后的关注点模型满足文中定义的全部约束,并依据对实际的需求文本进行分析,检验了该模型的完整性和一致性,验证了本文提出方法的有效性.6相关工作比较需求模型的验证是当前软件工程领域的热点问题之一,很多研究人员作了广泛而深入的研究工作.本文将从面向方面需求验证和基于本体的需求验证两个方面阐述相关工作.面向方面的需求方法是被认为在模块化需求、确定和解决需求冲突方面具有一定的优势,关于面向方面的需求检测方面已经有一些较好的方法.Araujo等人在文献[6]中提出了一种利用状态机分别构建横切关注点和非横切关注点模型,并基于状态机结合的方法检验需求冲突.Brito等人在文献[7]中提出了一种多重标准决策定义方法,该方法中对非功能化关注点依据其对于开发的重要程度进行加权,通过分析非功能关注点及其权值的关系,从一个更高的角度检测需求间的冲突.Mehner等人在文献[8]中定义了面向方面需求和UML模型间的关联联系,通过分析UML模型来检验需求模型中的完整性和一致性.Lancaster大学的Weston在文献[9]中提出了一种形式化的面向方面需求语义冲突检查,采用RDL(RequirementDescriptionLanguage)描述需求,并依靠对需求的分类化的语义分析检测需求中的冲突.Sampaio等人在文献[16]中给出了EA-Miner工具,采用文本检测的方法从需求文本中获取关注点,并可以自动生成基于面向方面需求方法的关注点模型,同时该论文中还提到了一些应用的方法来保证建模的准确性.Sardinha等人在文献[17]中提出了一个面向大规模需求文本的自动冲突检测工具EA-Analyzer,基于贝叶斯学习方法,对描述需求文本的RDL进行需求冲突检测.这些方法的侧重点主要是利用RDL自然描述语言,并通过语义分析来进行的需求验证.上述方法基本上都是通过一定的方法和技术对需求文本中存在的冲突进行检测,而缺少对构建需求模型验证的方法.由于本体具有严谨的定义方法和强大的约束、推理能力,因此基于本体的需求分析及验证方法研究也有很多.2000年,陆汝钤等人在文献[18]中提出了一个面向本体的需求分析方法,文中用本体作为对象关联的手段,以增强面向对象方法的表达能力.Liu在文献[10]中定义了一套基于本体的需求冲突分析方法,该方法基于需求的动作图给出本体模型的定义,并建立相应的冲突检测规则来分析需求中存在的冲突.陈等人在文献[1]中提出了一个采用本体模型的基于问题框架的需求建模,对于问题框架需求分析方法定义了一个有效的建模工具,同Page10时定义了多条完整性和一致性规则来验证所建立本体模型的准确性和一致性.Guo等人在文献[11]中提出了一个基于本体元模型和一阶逻辑检测需求特征模型一致性的检验方法.文章针对特征模型的特点,假定已有特征模型满足一致性,用一个特定的冲突检测集合来验证对特征模型进行删除、修改等操作后模型是否依然满足一致性.Lee等人在文献[19]中提出了一个基于本体的需求工程框架,文章通过分析多种需求框架的特点,将它们整合在一个本体模型之上,为软件集成系统提供了一个良好的框架.Siegemund等人在文献[20]中提出了一个面向目标需求分析的本体模型,依据面向目标模型定义本体模型,以此来检验面向目标模型的准确性和一致性.然而利用本体对需求直接进行建模的方法存在着很多的不完善性,对于不同需求方法所构建的基于本体的需求模型验证又有很大的局限性,即仅适用于所针对的需求方法,目前缺少针对面向方面需求方法采用基于本体来进行需求模型验证的相关工作.本文针对面向方面需求分析方法,提出了在构建需求模型的过程中所应该遵守的策略,同时构建了基于本体的关注点模型,并在该模型中定义了一系列约束,利用作者开发的验证工具可以有效地自动化检验需求模型的完整性和一致性,为需求模型的形式化验证提供了基础.7总结和展望本文给出了一种基于面向方面需求分析模型的验证方法,在从原始需求文本生成关注点模型的过程中给出一定的验证策略,同时文中构建了基于本体描述的关注点模型CM,并给出了从关注点模型到模型CM的映射规则,通过定义CM中存在的约束并利用描述逻辑和JeanAPI实现约束检验工具,验证了关注点模型的完整性和一致性,为设计和实现一个可靠的软件系统提供了有效的信息和重要的支持.今后的主要工作是应用其它实例以进一步检验本文所提方法的有效性和实用性,并给出完整的工具支持,同时针对面向方面文档驱动需求分析方法框架,给出针对形式化需求文档的一致性、完整性验证策略.
