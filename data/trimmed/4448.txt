Page1基于轨迹挖掘的公交车自组织网络路由机制张扶桑1),2)金蓓弘1)汪兆洋1),2)胡佳锋1),2)张利锋3)1)(中国科学院软件研究所计算机科学国家重点实验室北京100190)2)(中国科学院大学北京100190)3)(鲁东大学信息与电气工程学院山东烟台264025)摘要数据传递是车载自组织网络(VANET)应用不可或缺的组成部分.在城市中,公交车网络具有覆盖面广、行驶线路固定等特点,VANET应用中的数据传递可以通过公交车自组织网络实现,但公交车网络能否在VANET数据传递中发挥其独特的作用取决于对公交车运行规律的挖掘和利用的程度.文中提出了一种公交车自组织网络的路由机制Vela,该机制依托从公交车历史轨迹中挖掘的公交车运行时空规律,建立了公交车数据传递的概率时空模型,并给出了基于路段上公交线路相遇的数据传递路径的选择策略.与已有相关研究相比,Vela路由机制一方面以路段为粒度刻画了公交车运行的时空规律,这使得所获得的公交车运行规律兼具准确性和稳定性,另一方面,基于公交车运行规律估算路段上数据传递的延迟和可靠性,能获得尽可能好的服务质量级别的数据传递路径.实验结果表明采用Vela路由机制能实现具有高到达率和低延迟的数据传递,而且Vela路由机制具有较强的可伸缩性.关键词车辆自组织网络;基于公交车的路由;轨迹挖掘;时间序列分析1引言车联网(VehicularAdhocNetwork,VANET)是车辆节点按自组织方式组成的一个移动无线通信网络.基于VANET及相关技术(如传感器技术、智能处理技术等),可以实现包括车辆主动安全、智能交通管理、城市生活服务、应急救援等在内的多种应用.可以预见,随着VANET的发展,相较于3G、WiFi等无线网络,VANET在部署代价和使用费用方面的潜在优势,使得它有望成为智慧城市中开放的数据交换平台,并在多个领域发挥作用[1].公交车是城市公共交通系统中的重要交通工具,公交车在安装了车载无线通信单元(OnBoardUnit,OBU)后,便可构成公交车自组织网络.由于公交车网络具有覆盖面广、行驶线路固定、起始站发车时间间隔相对稳定等特点,因此依托公交车自组织网络实现数据传递有望成为多种VANET应用的基础.本文研究公交车自组织网络的数据传递问题.在公交车自组织网络中,公交车节点的快速运动会使得网络拓扑变化频繁,通信链路生存周期较短,数据传递路径不稳定,网络分区时常发生,这都会直接导致数据传递服务质量的抖动,而城市建筑物、各类公共设施等对无线信号传播的阻挡和干扰会进一步加剧网络通信质量的不稳定性.因此如何挖掘公交车的运行模式来提高数据传递服务质量,是公交车自组织网络数据路由机制面临的一个挑战.换言之,针对公交车网络准确挖掘公交车行驶的时间特征和相遇的空间特征,并有效应用到数据路由中,是个值得研究的问题.本文针对V2V(VehicletoVehicle)通信场景提出了一种数据路由机制Vela,用于将数据从某个公交车节点传递至某个目的路段.该机制基于公交车在路段上的延迟估计和相遇规律来决定数据传递的路径,它包含以下3部分:(1)为了获得公交车运行的时空规律,依托公交车在路段上的历史运行时间的统计数据,通过相关性分析,建立车辆的路段运行时间的自回归滑动平均模型;同时挖掘了不同公交线路的公交车在各路段上的相遇规律,建立相遇概率模型;(2)利用上述模型所反映的时空规律,预测在路段上传递数据的时间和可靠性,建立了公交车数据传递的概率时空模型;(3)发起数据传递的公交车基于概率时空图计算到达目的路段的具有最短延迟的前k(Top-k)条路径,并选择前k条路径中可靠性最高的路径,随后,按此路径路由数据,若在路由时未能遇到预定的车辆节点,则重新计算从当前车辆节点到目的地的最优路径,并继续前述过程.由于Vela机制是在可容忍的数据延迟基础上,选择可靠性最高的路径进行数据传递,因而它能为数据传递提供尽可能高的服务质量级别.本文的主要贡献包含以下几个方面:(1)通过对真实公交车轨迹的统计分析,发现了公交车轨迹的一些基本特征;运用时间序列分析方法,给出了预测公交车在路段上的运行时间的模型,并且通过实验验证了预测方法的有效性.(2)以路段为粒度挖掘公交车历史运行轨迹,获得了公交车运行的时空规律.与粗粒度(即公交线路级别)规律挖掘相比,该方法挖掘出的规律的准确性更高;与细粒度(即公交车级别)规律挖掘相比,该方法挖掘出的规律的稳定性更高.(3)针对公交车自组织网络,提出了一种新的数据路由机制Vela,该机制利用公交车运行时空规律建立数据传递的概率时空图,并以满足数据传递不同的服务质量为目标选择数据传递的路径,从而为VANET数据传递提供高性能和高可伸缩性的路由.本文第2节介绍相关工作;第3节给出本文要解决的问题,并对公交车轨迹数据进行了初步分析;第4节给出公交车数据传递的概率时空模型;第5节描述基于概率时空模型的路由机制;第6节是对所提路由机制的实验评估;最后是全文总结.2相关工作近年来,VANET上数据传递机制的研究非常活跃.VANET上进行数据传递的基本策略是存储和转发,即车辆节点携带数据前行,直到遇到可以转发数据的节点,而数据的转发策略通常可以采用基于地理位置的贪心策略(如GPCR[2]),或采用基于Page3最短数据传递延迟的贪心策略,后者涉及的数据传递延迟可以采用历史交通流数据进行估算(如VADD[3]、TBD[4])、或直接采用实时的交通流数据(如文献[5])、或两者相结合的方法获得(如文献[6]).在VANET数据路由中,车辆的相遇是数据转发的前提条件,因此车辆的相遇关系(如频度、空间分布、相遇间隔等)被广泛挖掘并用于数据路由决策,例如:文献[7]通过共享轨迹构造了车辆相遇图,并基于此进行路由,文献[8]利用马尔可夫链预测车辆相遇间隔时间,并根据邻居节点与目标车辆的相遇间隔时间决定数据传递的下一跳车辆节点.文献[9]采用与文献[8]相同的相遇延迟估计方法,并进一步挖掘了社会层面的移动性,构造自我联系(egocontact)图,这样车辆在缺少邻居车辆与目的车辆的相遇延迟估计时,会选取在自我联系图中占据更重要位置的邻居车辆,进行数据传递.考虑到公交车网络的特点,有些研究工作挖掘了公交车节点的相遇概率,并基于此设计了公交车网络的路由机制.MaxProp[10]是在真实的校园公交车网络(UmassDieselNet)中使用的路由方法,它使用携带转发和数据包优先级技术传递数据.其中,数据包的优先级是由传递数据到目的地的开销来决定的,而开销又是通过记录两个公交车相遇的可能性来估计的.当公交车遇到另一辆公交车时,转发具有最高优先级且以该公交车为转发节点的数据包.针对节点之间有周期性相遇规律的这类特殊场景,文献[11]提出了一种数据路由协议RCM.它首先利用节点的历史相遇信息和先验知识刻画出节点间的相遇时间和概率,然后去掉时间维的约束,使用马尔可夫决策过程中得到消息传递的期望的最小延迟,最终给出基于期望的最小延迟的数据路由路径.文献[11]认为所提的方法适用于公交车网络.但城市的公交车网络受多方面因素的影响,一般很难满足此方法所要求的前提条件,即车辆节点具有稳定的,周期性的相遇规律.文献[12]假设目的移动车辆的轨迹已知,尝试在无静态基础设施辅助的条件下,利用公交车网络实现I2V(InfrastructuretoVehicle)型数据传输,它的目标是在满足用户给出的数据传输到达率条件下最小化传输延迟.它首先将公路网模型化为概率状态空间图,运用和文献[11]相同的马尔可夫决策方法得到期望的最小延迟,然后,根据期望的最小延迟和目的移动车辆的轨迹,确定公交车与目的移动车辆交汇的路口以及到该路口的数据路由路径.但该方法事实上需要使用静态基础设施即RSU(Road-SideUnit):RSU必须部署在交汇路口,并由此将数据传递给目的移动车辆,否则要保证用户要求的数据传输到达率,目的车辆与公交车在交汇路口必须恰好相遇并进行数据交换.但由于车辆运行时间的不确定性,这一点很难得到保证.还有些研究工作从公交车线路间相遇规律入手,分析线路间数据传递的规律,并进而设计基于公交车线路的数据传递机制.文献[13]提出了基于公交车线路的路由算法BLER(BusLine-basedEffectiveRouting).它首先构建公交车线路图,将公交车线路作为图的顶点,顶点之间的边表示两条公交线路至少相遇一次,边上的权重设置为这两条公交线路的公共路段长度.其次,每辆公交车基于上述公交线路图,计算出到目的公交线路的权重之和即最大的路径,并按此路径转发数据到目的线路.最后,采用往复(Zigzag)过程传递数据到目的公交车,即在目的线路上公交车只向其反向公交车传递数据,直到数据到达目的公交车.文献[14]提出了另一种基于公交车线路的路由算法R2R,它采用与文献[13]类似的公交线路图,即以公交线路为图的顶点,边表示线路间的相遇关系,但边的权重设置为一对公交线路上公交车的平均相遇时间间隔(即平均相遇频率的倒数).文献[14]基于该公交线路图,用Dijkstra算法计算权重最小路径,并将该路径作为数据传递路径.上述方法较BLER对车辆线路相遇规律的衡量更加准确,其路由性能也优于BLER.通常,公交车车站会汇聚多条公交线路,文献[15]利用公交线路的这种特性,用固定在车站的WiFi通信单元做数据中继,并在此前提下,为两个车站之间的数据传递寻找一条能最大限度按时传递的路径.它首先将公交网络建模成一个随机图:顶点是(车站-线路)对,顶点之间的边表示可以通过同一线路或不同线路的公交车从一个车站到达另一个车站,图上的边还与反映公交车行驶时间的随机变量相关联,随后,在此随机图上通过搜索和剪枝寻找出一条按时传递概率最高的路径.但该方法中公交车之间不能直接进行数据传递,只能依赖公交车站的WiFi通信单元进行数据交换.公交车网络上数据传递机制与公交车的运行时间关系紧密.到目前为止,也有不少关于公交车的运行时间/到站时间预测方面的研究工作.文献[16]利用实时的车辆GPS定位信息,结合路段长度、车辆速度、车站停留时间等因素,构造了Page4公交车运行时间估计模型,可以预报到站时间.这种方法的实时性较好,但由于需要实时获得GPS信息,通信开销较大.文献[17]考虑到公交车运行时间经常受到很多因素影响,如路段长度、交通状况、交叉路口数量、站点乘客数量、天气情况等,建立了包含多变量的回归方程作为预测模型,并根据各个变量在预测时段的变化情况计算得到车辆的运行时间.此类模型要求各个自变量是相互独立的,而这一点在实际应用中很难满足,因此此类预测模型的应用是有限的.文献[18]采用K-means聚类方法分析公交车运行的历史数据,找出道路状况最相似的前K个行程记录.具体来说,文献[18]首先提取历史行程记录的路况特征,聚类各个路段的历史路况评估值.然后,通过查找与当前时间,位置和路况特征最相似的历史行程记录,计算公交车的到站时间.但历史交通状况本身并没有明显的聚类特性,在其上应用聚类方法并不能获得真实反映历史路况评估的分类.文献[19]利用神经网络,通过对历史数据的训练得到预测函数用于公交车运行时间的预测,但神经网络的训练需要较长的时间.文献[20]将交通流看成时间序列,并使用支持向量机预测车辆长距离行驶所需的时间.该方法在预测精度上有一定优势,但是在某些参数的确定上(例如:核函数的选取)需要经验或多次尝试.文献[21]利用公交车乘客智能手机上的多种传感器,收集其感知的信息,然后,结合公交车运行的历史数据,预测公交车的到站时间.考虑到在车辆自组织网络中,公交车作为一类公共交通基础设施,利用公交车进行数据传递可以降低数据转发的随机性,减少数据传递延迟的抖动,但这些都需建立在挖掘公交车时空规律的基础上,从已有的相关工作可以看出,公交车个体之间的相遇受诸多因素的影响,周期性特点不明显,导致公交车个体层面的规律不稳定;而基于公交线路的规律反映的是粗粒度的公交线路之间的关系,用它估算数据传递延迟存在不准确的问题,因此我们提出了基于路段上公交线路时空规律的数据传递机制Vela,该机制有效提高了数据传递的性能,实现了在可容忍的延迟下,数据以可靠性最高的方式传递.3问题定义及数据分析3.1问题定义两个移动车辆节点利用公交车网络进行数据传递的过程可以分成3步:(1)移动源节点将数据传递到某公交车;(2)利用公交车网络将数据传递到目的节点途径的路段(称目的路段);(3)公交车将数据传递给移动车辆.若(由于移动车辆节点还未到达目的路段等原因造成的)公交车未能在目的路段上与移动节点实现数据传递,那么公交车在驶离该路段后将以自己为源节点,发起到达目的路段的数据传递请求.重复此过程,直到携带数据的公交车在目的路段上与移动车辆在通信范围内相遇.图1给出了一个V2V通信的实例:移动车辆节点Veh1利用公交线路1~3上的公交车A、B、C将数据传递到移动车辆节点Veh2.上述第(3)步的执行效率与环境紧密相关,可变因素多,随机性强,可能会需要很长时间才能完成数据传递,甚至会出现数据传递失败的情景.为了缓解数据传递延迟的抖动,提高数据传递的到达率,减少数据传递的开销,可以在目的路段上的公交车站或应用热点位置(PointofInterest,POI)或目的路段路口部署RSU,由它们存储数据并在目的车辆出现时将数据转发给目的车辆.本文研究上述场景中将数据从某个公交车节点传递至目的路段的路由机制,该路由机制不仅是实现V2V通信的关键,也适用于一些I2V或V2I(VehicletoInfrastructure)的通信场景,即源节点或目的节点可以是位于公交车线路旁的静态节点(例如:放置在停车场外的VANET节点).3.2公交车轨迹数据分析由于真实的公交车运行会受到实时交通流、道路突发事件等的影响,它的运行从微观上看经常呈现出与预期的调度和运行状况不一致的现象.为了Page5确定公交车的运行时间、不同线路的公交车在路段上的相遇是否存在某种宏观的模式,我们基于真实的公交车GPS轨迹信息,对公交车运行的时空模式进行了分析.我们选择了北京市具有代表性的3条公交线路,它们是939路、944路和983路,其中939路每天平均有20辆公交车在运行,944路平均有60辆公交车在运行,983路平均有42辆公交车在运行.图2是北京的道路图,其中加粗线路是我们关注的公交车线路.这3条线路都经过北四环北辰西桥-安慧桥路段,该路段长1920m,下文称此路段为采样路段.每辆公交车每天从早晨6点至晚间22点每20s报告一次自己的GPS轨迹信息,内容包括时间、公交车车牌号、公交线路号、公交车的经度和纬度、车辆当前的速度和方位角、上下行编号、下一站编号.表1给出了公交车报告的GPS轨迹信息的一个实例.公交线路号速度/(km/h)上下行编号下一站编号我们从2013年3月连续4周的公交车GPS轨迹数据中分析了采样路段上公交车的运行情况.首先对公交线路的GPS轨迹信息进行预处理,包括修正漂移的GPS点数据,插入丢失的GPS点数据,过滤掉非采样路段的GPS点信息;其次,根据公交车车牌号,获得各个车辆的GPS点信息;然后,对每辆车按照上下行信息,提取每次经过采样路段的GPS点序列(一辆车一天会多次往返始发站与终点站).最后,基于上述数据,统计公交车在运行时间和相遇关系上的特性.图3给出了3条公交线路从2013年3月4日(周一)到3月10日(周日)在采样路段上的通行时间.可以看到,从周一至周五的不同时段,公交车行驶通过采样路段的时间有明显的波动,早晨7点到9点采样路段的通行时间明显较长,晚上18点左右有程度较弱的晚高峰.周六、周日的运行时间较为平稳.从图3数据还可以得出,虽然周一至周五公交车通过采样路段的运行时间波动明显,但是遵循相同的变化模式.另外,周六、周日的运行时间平稳,运行时间的标准差仅为11.7s.在本文中,两辆公交车相遇是指在某个时间区间内一辆公交车在另一辆公交车的通信半径内,而公交线路A在某路段上与公交线路B相遇的概率定义为在指定的时间区间内线路A的公交车与线路B的公交车在该路段上相遇的次数与线路A的车辆通行该路段的次数的比值.这个概率反映了公交线路A的车将数据成功转发到公交线路B的概率.我们分析了944路公交车与939路公交车在采样路段上的相遇概率.图4给出了2013年3月连续四周的工作日里(即4日~8日,11日~15日,18日~22日,25日~29日)两条线路的车辆的平均相遇概率值.为了检验上述数据是否存在周期性,我们对连续四周工作日的相遇概率组成的数据,通过傅里叶变换求得数据的瞬时频率,然后在频域上计算其功率谱,功率谱结果如图5所示.从功率谱上可以明显地看到出现尖峰,这说明该数据序列具有周期性.Page6图4采样路段上两条公交线路的相遇概率上述初步的数据分析结果说明了公交车运行存在着规律,基于此,本文挖掘了公交车运行的规律,并将之应用于数据路由中.4公交车数据传递的概率时空模型4.1概率时空模型概述我们将公交车网络模型化为概率时空图G=〈V,E〉,其中V表示顶点集合,每个顶点代表经过某个路段的一条公交线路,为方便起见,一个顶点若代表的是经过路段e的公交线路A,那么用Ae表示;E代表边的集合,若顶点Ae与Be(Ae,Be∈V,A≠B)之间存在边,则该边表示不同公交线路A,B途经同一路段e;若顶点Aei与Aei+1之间存在边,该边表示同一公交线路A从一个路段ei行驶到相邻的另一个路段ei+1.图6给出了概率时空模型的一个例子,图6中,跨越两个大圈的边表示不同公交线路经过同一路段,大圈内顶点之间的边表示一公交线路从一个路段到达相邻的下一个路段.我们用P(Ae,Be)表示公交线路A和B在路段e上的相遇概率.本文的4.4节给出了车辆相遇概率的估计方法.转移总是成功的,所以有由于通过同一条公交线路的相邻路段进行数据我们用上述相遇概率表示图G上通过边(Ae,Be)及(Aei,Aei+1)进行数据传递的概率P.另一方面,数据沿一公交线路A从一个路段ei被携带到下一个路段ei+1的延迟T(ei,ei+1)可以通过挖掘公交车的轨迹数据获得,4.2节给出了具体Page7的延迟估计方法.我们用上述延迟表示图G上通过(Aei,Aei+1)进行数据传递的权重.若在同一时刻,有同一公交线路的多辆车经过此路段,那么取它们的平均延迟作为权重.由于我们认为在同一个路段的不同公交车之间进行数据传递的时间可以忽略,所以,图G上边(Ae,Be)的权重为0.下面用一个例子来说明上述数据传递模型,图7给出了一个简易的曼哈顿街区类型的路网,该路网由9个路口和12个路段构成,其中共有3条公交线路,分别为A、B、C,A经过的路段是1-4-9-11,B经过的路段是2-4-9-12,C经过的路段是1-2-5-10-11-12-8-3-1.根据图7的道路拓扑和公交线路,可以构造出如图8所示的概率时空图.图8中,大圈代表3条公交线路,大圈内顶点间的边对应着同一公交线路上的相邻路段,其顶点间的转移概率为1.4.2公交车运行时间预测为了准确预测公交车在路段上的运行时间,我们把公交车的历史运行数据看作时间序列,对它进行分析,识别出其所适合的模型,从而建立公交车运行时间的预测方程.采用时间序列分析方法是考虑到公交车的历史运行数据的规模并不是很大,而时间序列分析方法可以在有限样本数据的情况下建立起相当精确的数学模型,其预测精度和可操作性都较好.具体而言,设已有x天的公交车工作日运行历史数据,为了预测数据沿一公交线路A从一个路段ei被携带到相邻下一个路段ei+1的延迟.首先,将公交车每天的运行时间(即600~2200)按照20min为一区间(period)划分为48个区间,这样公交车每天行驶通过路段ei所需的运行时间可以看作按区间划分的48组时间序列,记为{Tperiod着,对给定一个具体的时间区间y下的公交车运行时间序列,简记为{Tt,t∈[1,x]},进行平稳性检验,然后,通过模型识别、参数估计,建立Tt(t>x)的预测方程,即可预测第t天(t>x)的公交车在这个给定的时间区间内的运行时间.考虑到公交车运行时间的分布规律未知,而游程检验法[22]无需假设被检验的随机序列的分布规律,因此我们采用该方法对时间区间y下的公交车运行时间序列(历史)数据进行分析,发现按照时间区间划分的公交车运行时间数据是平稳的.在模型识别阶段,首先需要对公交车运行时间序列进行自相关分析.将公交车运行时间序列{Tt}分为两组间隔为k天的序列,一共有x-k对,即(T1,Tk+1),(T2,Tk+2),…,(Tx-k,Tx).显然,{T1,…,Tx-k}和{Tk+1,…,Tx}都具有均值T-.义如式(1)所示:接着,观察自相关函数ρk的值,自相关函数的定其中,自相关函数反映了在Tt+1,Tt+2,…,Tt+k-1影响下,间隔为k天的运行时间Tt和Tt+k的相关关系.若自相关函数ρk在k>q时全为零,表明该公交车运行时间序列只有q步相关性,该q值就是滑动平均(MA)模型的阶数.Page8其次,我们对公交车运行时间进行偏相关分析,偏相关分析用于反映在剔除了Tt+1,Tt+2,…,Tt+k-1天运行时间的情况下,间隔为k的运行时间Tt和Tt+k的关系.偏相关系数φkk通过Yule-Walker方程求解,该方程式的矩阵表示为烄烆将k=1,2,3,…代入后可以解出φ11=ρ1,φ22=ρ2-ρ2若φkk在k>p时都为零,表明该公交车运行时间序列的偏相关函数是p步截尾,此p值是自回归模型(AR)的阶数.由于时间序列的随机性,对ρk和φkk的估计可能有误差,k>p或k>q时可能不全为零,而是在零附近波动,因此ρk和φkk的截尾性需要用统计方法去检验.若ρk和φkk均不截尾,但收敛于零的速度较快,那么仍可以认为{Tt}符合ARMA(p,q)模型,其中p、q的值可以根据相关系数的值是否超过置信边界来确定.随后,我们建立如下的自回归滑动平均模型(ARMA)预测方程:其中,p和q分别是在模型识别阶段获得的自回归和滑动平均模型的阶数,αt~N(0,δ2)(i=1,2,…)为白噪声序列,φi(i=1,2,…,p),θj(j=1,2,…,q)分别是自回归系数和滑动平均系数.我们采用矩估计法[22]估计方程系数φi(i=1,2,…,p),θj(j=1,2,…,q).最后,对建立的预测方程进行检验,保证预测方程的估计值和测量值的残差序列αt=Tt-T^t(t=1,2,…,x)为随机干扰误差,即白噪声序列.使用Ljung-BoxQ统计量进行检验.这样,利用上述预测方程即可获得公交车在第t天(t>x)的时间区间y内通过路段ei所需的运行时间.对公交车双休日的历史运行数据也按上述方法做相同的处理,也可预测双休日内公交车的运行时间.4.3预测方法的验证本节用实际的公交车GPS轨迹数据来验证4.2节提出的公交车运行时间预测方法的可行性.我们将2013年3月连续4周(600~2200)的北京公交车GPS轨迹数据按工作日和双休日分为两组.令北四环主路北辰西桥-安慧桥路段为路段e,我们从公交车GPS轨迹信息中提取通过路段e的时间,得到相应的公交车运行时间序列,然后采用时间序列分析方法,用前三周工作日早高峰[800~820]的通行时间数据预测最后一周公交车通过路段e的时间.首先,对公交车运行时间序列进行自相关分析和偏相关分析.从图9可以看到,自相关系数在拖尾2阶时,超出了置信边界,且自相关值在拖尾2阶之后逐渐趋近于0.从图10中可以看到,在拖尾2阶后偏相关值均小于显著边界.因此,路段e上的公交车运行时间序列应遵循ARMA(2,2)模型.然后,我们根据矩估计法确定了预测方程的参数,并预测了5步(即第4周5个工作日早高峰的运Page9行时间),结果如图11所示.图11所示的预测的运行时间与真实的通行时间之间的残差序列通过了Ljung-BoxQ检验.接着,为了预测一天不同时段公交车通过路段e所需的时间,我们为每个时间区间都建立了预测方程(共48个),并让每个预测方程执行一步预测,得到工作日各个时段(600~2200)公交车运行时间的预测值(如图12所示)和双休日各个时段运行时间的预测值(如图13所示).图12工作日采样路段公交车通行时间预测图13双休日采样路段公交车通行时间预测公交车运行时间预测精度估计采用平均绝对误差MAE(MeanAbsoluteError)、平均绝对百分误差MAPE(MeanAbsolutePercentageError)和均方根误差RMSE(Root-Mean-SquareError).它们的计算公式如式(4)~(6)所示:其中,N是将一天从早晨6点到晚上22点以20分钟为单位划分所得的数目,ti是第i个时段内运行时间的真实值,t^i是第i个时段内运行时间的预测值.从图11的数据可知,工作日高峰时段公交车通过路段e的预测运行时间与真实的通行时间之间的平均绝对百分误差为9.5%.而表2列出了对工作日与双休日预测的精度估计值,其中,双休日的预测平均绝对百分误差为8.02%,工作日的平均绝对百分误差为10.42%,该精度优于基于实时GPS的方法[16],与文献[18]有类似的预测精度,但算法复杂度远小于文献[18].工作日19.81双休日13.564.4车辆相遇概率估计通过对不同公交线路上的公交车历史相遇情况的统计(见3.2节),我们发现公交线路在路段上的相遇每周呈现相似的变化趋势,因此我们采用拟合历史平均相遇概率来反映公交车相遇概率的变化趋势.为了估计t时刻公交线路A与公交线路B在路段e的相遇概率P,我们用式(7)计算时间区间ti(i∈n,n为时间区间的数目)的平均相遇概率Pi(Ae,Be):其中,fd,ti(Ae,Be)是在第d天时间区间ti内,公交线路A的公交车和B的公交车在路段e上的相遇次数,D代表进行数据统计的所有日期,Q代表在D内,公交线路A的公交车通过路段e的总次数.这Page10样我们可以获得历史上不同时间区间(即t1,t2,…,tn)的平均相遇概率Pt1,Pt2,…,Ptn.遇概率P:然后,用多项式拟合两公交线路在时刻t的相P(t)=μ0+μ1t+μ2t2+μ3t3+…+μmtm(8)其中m代表多项式的次数.我们利用最小二乘法确定系数μ.这里给出一个拟合3.2节历史平均相遇概率的实例,取m=4,式(9)为拟合得到的相遇概率多项式,其中的参数值是利用最小二乘法来确定的,拟合曲线如图14所示.P(t)=-0.00012t4+0.00713t3-0.15304t2+5Vela路由机制为了基于公交车进行数据传递,公交车间通过心跳消息相互感知.公交车会周期性地向一跳通信范围内的邻居节点广播自己的心跳消息,心跳消息中包含发送者节点的标识以及位置等信息.心跳周期为心跳消息发送的时间间隔.如果公交车连续两个心跳周期未收到相应节点的心跳消息,则认为该节点已经不在自己一跳通信范围内,即不再是自己的邻居节点,此时它会将该节点从心跳消息列表中删除,否则会更新相应节点的时间戳.某路段上的公交车作为发起数据传递的节点Vsource,为了将数据传递到目的路段,按下面的流程决策路由路径并进行数据传递.首先,该公交车根据公交路网和已有的公交车运行轨迹数据构造概率时空图.其次,根据概率时空图中边的权重,以自身为起点,按如下步骤计算到达目的路段的最优路线.第1步.根据目的路段的位置,定位能到达目的路段的公交线路集合,从而确定经过目的路段的公交线路节点,这些节点集合记为goalSet.第2步.计算Vsource到goalSet中所有节点的前k个延迟最短路径:对于goalSet中的每个节点Vdest,利用Dijkstra算法计算在概率时空图中Vsource到Vdest的最短路径,并存入前k路径集合.将Vsource节点进一步扩展,以与Vsource相连的节点集为起点,求解它们到Vdest的最短路径,这些路径在各自加上各个节点到Vsource这一段后,存入前k路径集合.将扩展的节点再次作为起点,并从这些节点继续向外扩展,求解到达Vdest的最短路径,均记录到前k路径集合中.该扩展过程一直进行,直到路径集合中有了k条到达Vdest的路径.第3步.评估这k条路径数据传递的可靠性:用路径中路段的数据传递概率的最小值作为该路径可靠性的度量.将前k条线路按照其可靠性度量排序,选择可靠性最高的路线,作为数据传递的线路.然后,Vsource节点按照选定的满足延迟要求的、可靠性最高的线路传递数据.若在指定路段,按照设定路径,数据应该从公交线路A转移到另一条公交线路B,但在实际运行时,公交车在该路段上可能遇不到公交线路B的车辆.当A线路上的车辆检测到数据未在预先设定的数据传递线路中时,它将以自己为源节点,重新计算路径,将数据以新的路径传递到目的路段位置.在进行数据传递时,公交车采用消息确认机制,即接收到数据包的一方会向发送方发送确认消息,发送方在收到确认消息后才将该数据包删除,否则该数据包会继续保持在发送队列中.数据传递的路径决策算法的伪代码如下.算法1.Bus-basedDataDeliveryMechanism.//Vsourcedenotesabusnodethatinitiatesadatadeliveryrequest//goalSetdenotesasetofnodesthatpassthedestina-tionroadsegment1.BEGIN2.ObtainG(V,E)accordingtotheroadmapand3.CalculateP,Tandconstructtheprobabilistic4.shortestPathSet←getTopkPath(Vsource,goalSet)Page115.path←sortshortPathSetwithP6.returnpath7.ENDgetTopkPath(Vsource,goalSet)1.BEGIN2.FORVdestINgoalSet3.Dijkstra(Vsource,Vdest)4.queue.push(Vsource)5.WHILEqueue!=NULLDO6.curNode=peekthefirstelementfromthe7.IFcurNodepathreachestoVdest8.shortestPathSetaddcurNodepath9.IFshortestPathSet.size()=k10.RETURNshortestPathSet11.END12.END13.nbrNodes←curNode’sneighbornodes14.CalculatenbrNodespathtoVdest15.queue.push(nbrNodes)16.END17.END18.END6实验评估本节通过模拟实验评估Vela机制的性能和可伸缩性,采用的度量指标为数据传递到达率和数据传递延迟,前者是指在规定的时间内目的车辆在指定路段收到的消息数与发起数据传递的车辆发出的消息数的比率,后者是指数据从源车辆发出到被传递到目的路段所经历的时间.我们选择R2R[14]作为对比的路由机制.R2R是一种基于公交车线路的路由机制,它基于公交车线路相遇频率进行数据传递.考虑到BLER[13]和R2R是同类机制中的典型代表,而R2R的性能又优于BLER,故模拟实验将把Vela与R2R进行比较.6.1实验搭建我们采用NS-3①作为模拟实验平台,基于北京市海淀区的真实地图(如图15所示)分别以公交车真实轨迹和模拟轨迹为输入设计了两组实验.在第1组实验中,我们选取了海淀区一块4000m×5000m的区域,该区域内有双向行驶的944路、939路、881路3条公交线路.在实验开始前,我们提取了该区域在2013年3月29日1030到1200这一个半小时内上述3条公交线路上运行的所有35辆公交车的轨迹数据.将这些公交车每20s报告一次的轨迹信息用插值方法转化成NS-3中记录每秒钟车辆GPS位置的tcl轨迹文件,然后采用第4.2节的时间序列分析方法,预测该区域路段的运行时间,并用4.4节的方法估计了车辆间的相遇概率.实验开始后,3条公交线路按照真实GPS轨迹信息运行,公交车也按照真实的进入时刻进入实验区域,所有公交车都每隔1s产生一条消息,该消息以随机方式选取公交车运行经过的道路为数据传递的目的路段.实验持续时间为5300s,在整个实验过程中,车辆发送消息总量为3500条.实验观察了数据传递的到达率和延迟随时间的变化.该实验用于评估Vela进行数据传递的性能.在第2组实验中,我们选取了海淀区一块4000m×8000m的区域,该区域内的道路总长度为145km,包含了58个十字路口和86条双向车道.在实验开始前,采用开源的城市交通模拟工具SUMO[23]生成了公交车轨迹tcl文件以及15条公交线路轨迹(如图16所示),其中,公交车的运动模型采用了能反映城市场景车辆运动特征的智能驾驶员模型,每条道路上模拟了公交车停靠车站,站台停靠时间为30s到80s之间的随机值.所有车辆根据指定的公交车线路行驶.实验开始后,每隔200s为每条公交线路增加1辆进入实验区域的公交车,所有公交车每隔1s产生一条消息,该消息以随机方式选取公交车经过的道路为数据传递的目的路段.实验持续时间为4000s,车辆发送消息总量为3000条.实验观察了公交车线路数量的变化对性能指标的影响.该实验用于评估Vela数据传递机制的可伸缩性.①NS-3tutorial.http://www.nsnam.org/ns-3-19/docu-Page12表3汇总了第2组实验所用到的参数.图16基于真实地图的15条模拟的公交线路6.2实验结果与分析第1组实验观察了Vela和R2R两种策略随着运行时间的增加(从3500s到5300s的过程中)性能指标的变化.图17显示了两种策略的数据到达率,实验在运行到5300s时,Vela机制的数据到达率已达到91.3%,而R2R的数据到达率仅是72.3%.从图17可以看到,两种机制在数据到达率上始终有较大的差距,这说明基于路段的相遇规律和延迟估计更为准确.图18显示了两种策略的数据延迟,可以看到Vela机制的延迟始终低于R2R机制,这说明Vela机制达到了其原定的减少延迟的目标,而R2R机制数据传递延迟较长,可能的原因来自以下3方面:(1)数据传递以线路间高相遇频率为依据,这种方式可以增加数据传递的可靠性,但是由于没有考虑数据传递的延迟,所以数据可能被携带到距离目的路段更远的线路上;(2)数据发起车辆可能需要携带数据前行较长时间才与频繁相遇的公交线路进行数据传递,有可能错失了很多数据传递机会;(3)与Vela将数据直接路由到目的路段不同,R2R机制将数据传递到目的线路的公交车之后,目的线路的公交车可能需要携带数据向其反向行驶车辆传递数据并携带到目的路段,这无疑会增加数据传递的延迟.第2组实验观察公交车线路数量对两种数据传递机制的影响.实验中,公交车线路数量从5条增加Page13到15条,实验运行时间为4000s.图19显示了在不同公交线路数下的数据传递到达率.可以看到,随着公交车线路数的增加,Vela数据传递到达率从80.5%增长到了91.1%.这说明对于Vela策略,线路数的增加有效提高了数据传递到达率.图20显示了不同公交线路数下的数据传递延迟.从图上可以看到随着线路数量的增加,Vela的数据传递延迟一直在下降.实验结果表明基于Vela的数据传递具有较好的可伸缩性.这是由于Vela是以数据传递的延迟和可靠性为指标从多条备选路径中遴选路径,而公交线路的增加为数据传递增加了更多的备选路径,从而增加了Vela选到低延迟、高可达路径的可能性.在图19和图20中,公交线路的增加起初对R2R的性能影响并不明显,这是因为R2R的选路指标并不与数据传递的性能直接相关.但随着线路数量的不断增加,R2R的性能在逐渐下降,这是由于面对更多的备选线路,R2R倾向于选择具有更高相遇概率的路径,而在这样的路径上传递数据,其数据延迟未必会比备选线路未增加时缩短.换言之,R2R机制不具有可伸缩性特征.7结论考虑到公交车网络的特点,本文认为公交车网络数据传递机制的有效性与挖掘公交车运行时空规律的准确性关系密切.为此,本文对实际的公交车轨迹进行了分析,建立了公交车运行时间预测的ARMA模型,从而获得公交车运行的时间特性;同时,基于实际的公交车相遇记录发现公交车之间潜在的空间特性,并用多项式拟合车辆相遇概率曲线,从而获得对公交车相遇概率的估计.在挖掘公交车轨迹时空规则的基础上,本文建立了公交车数据传递的概率时空模型,并给出了一种实现数据传递的路由机制Vela,该机制在可容忍的数据传递延迟基础上选择可靠性最高的路径进行传递.为了验证所提的Vela机制的有效性,本文基于真实轨迹和模拟轨迹进行了大量的实验,实验结果表明与已有的R2R机制相比,Vela机制具有较高的数据到达率、较低的数据传递延迟和较好的可伸缩性.
