Page1分布式计算环境下的动态可信度评估模型朱友文黄刘生陈国良杨威(中国科学技术大学计算机科学技术学院国家高性能计算中心合肥230026)摘要随着计算机网络的发展,分布式计算技术得到了广泛的应用,这使得网络节点间的信任问题变得日益突出.参考社会学的人际关系信任模型,基于Dempster-Shafer证据理论和Shapley熵,文中设计出了分布式计算环境下的动态可信度评估模型,这一可信度评估模型清晰地反映了可信度的动态性、连续性和不确定性等特性.该模型通过历史交互信息获得直接可信度,并根据每个节点的信用记录和其直接可信度函数的信息量对其直接可信度进行修正,然后综合考虑修正后的各个节点的直接可信度信息,利用Dempster规则合成计算出综合可信度.最后利用仿真实验分析了新模型对可信度的评估效果,并对未来的工作做了展望.关键词分布式计算环境;信任测度;Dempster-Shafer证据理论;Shapley熵;动态可信度评估模型1引言随着计算机网络的发展,分布式计算技术得到了越来越广泛的应用.分布式计算利用网络实现数以万计的计算机的连通和协作,并利用它们的闲置资源和计算能力来完成大规模计算事务的求解,实现计算资源、软件资源、信息资源和通信资源等的深入共享.网格计算[1]和P2P技术[2]就是两种已经在一定范围内得到广泛应用的分布式计算技术.与此同时,分布式计算技术的发展使得网络节点间的信任问题变得日益突出,比如网络中的某个计算机节点可能会对自己的共享资源做出虚假描述,目的在于获得更多的关注,进而谋取不正当利益.为了应对这样的问题,越来越多的研究者投入到相互连通的计算机节点可信度评估问题的研究之中,这使得可信度评估成为当前的研究热点之一.1968年,Zadeh[3]开创了模糊测度理论.随后,Sugeno[4]在1974年系统地研究了模糊测度和模糊积分理论.此后,模糊测度理论得到了进一步的推广和完善.Dempster-Shafer证据理论[5-6]中提出的信度函数就是一种常用的用于可信度评估的模糊测度.1953年,Shapley[7]提出了Shapley指标的概念.1999年,Yager[8-9]观察到Shapley指标的各分量和为1,并采用Shannon熵的形式,借助Shapley指标[7]提出了可以区分模糊测度的不确定性程度的Shapley熵.文献[9]的分析表明Shapley熵可以有效地度量模糊测度的不确定程度.模糊测度理论和Shapley熵都是可信度评估过程中有效的理论工具.当前,国内外研究者提出的可信度评估模型主要有:斯坦福大学Kamvar等[10]的EigenTrust模型,这是一种典型的全局声誉模型;唐文等[11]的基于模糊集合理论的主观信任管理模型;基于Dempster-Shafer证据理论[5-6],朱峻茂等[12]提出了Grid与P2P混合计算环境下的信任模型,袁禄来等[13]提出了网格信任计算模型,它们都在一定程度上解决了单个节点所提供信息的不完备性和不精确性,但并没有考虑到推荐者可信度和推荐信息所包含的信息量有很大差别的问题.2007年,Zhou和Hwang[14]设计的PowerTrust算法改进了EigenTrust模型的迭代过程收敛过慢等问题,然而PowerTrust算法没有对恶意节点的惩罚机制,也没有针对推荐信任值的评估价值不同而区别对待各个推荐信息.文献[15]提出的基于信誉与风险的信任模型R2BTM考虑到了节点动态行为影响信任度计算的不确定性,引入了信息熵量化节点为恶意参与者的风险,该方案主要不足之处在于:没有给出推荐权重具体的量化方法;对信誉值的存储等实施方案并没有具体说明;最主要的是该模型依然没有考虑到不同推荐信任值所包含的信息量差别较大,只是使用信息熵评价了每个节点的风险,仅据此对推荐信息进行区别对待.Josang和Haller[16]提出了一种基于Dirichlet分布的信任算法,该算法使用概率期望值表示信任度,体现了可信度的不确定性,而且计算方法简单易于实现,然而该方案仅仅使用直接评价结果计算可信度,没有考虑推荐信任信息,导致其评价结果无法反映节点在整个网络系统中的行为特征.2010年,张兴等[17]提出了一种基于无干扰模型的信任链传递分析方法,该方案主要用于可信计算平台中的信任传递过程中的度量和分析,并不能直接应用到分布式网络系统中.田春岐等[18]通过设计一种基于聚集超级节点的P2P网络信任模型,部分解决了推荐信息的虚假和不公正问题,然后该方案依然没有考虑推荐信息本身的不确定性差别很大,仍将信息量不同的推荐信任值同等对待.文献[19]较全面介绍了当前P2P网络中的信任机制研究现状.更多的可信度评估研究内容可见文献[20-25].可以看出,由于分布式计算环境中的节点的可信度经常会随着时间而发生变化,上述方案都未能充分考虑到可信度的动态和连续性变化的问题,因而具有一定的局限性;另一方面,不同节点的推荐信息的可信度和所包含的信息量有很大差别,只有在综合评估过程中反映这些区别才能得到更加准确的可信度评估结果.鉴于这些问题,参考社会学的人际关系信任模型,本文设计了基于Dempster-Shafer证据理论[5-6]和Shapley熵[8-9]的分布式计算环境下的动态可信度评估模型.文中将可信度评估过程按逻辑顺序划分为两个阶段,即直接可信度评估阶段和综合可信度评估阶段,如图1所示.在直接可信度评估阶段,通过节点间的直接历史交互记录,每个节点可以获得对其它节点的直接可信度.接着每个节点向其它节点广播在直接可信度评估阶段得到的初步评估信息,本文称这一广播过程为直接可信度的传播过程.直接可信度的传播过程的实现细节并不是本文所要讨论的内容,文中只是指明在这一过程中所要完成的内容.经过直接可信度的传播过程之后,我们综合了每个节点提供的直接可信度信息,并考虑到可信度的动态性、连续性和不确定性以及利Page3用Shapley熵度量的每个节点直接可信度函数的信息量,然后利用Dempster规则合成,得到了综合可信度.这里的综合可信度评估阶段是整个动态可信度评估模型中的核心.本文的第2节介绍本文所需要的一些基础知识;第3节给出动态可信度评估模型;第4节利用仿真实验分析新模型的评估效果;最后,在第5节我们对本文进行总结,并指出我们下一步的工作计划.2预备知识设Q是一个问题,其答案集记为X,集合X被称为问题的识别框架.本文考虑X={T,-T}的情况,这里T和-T分别表示分布式计算环境中一个节点对另一个节点的信任和不信任.接着,我们将对模糊测度[3]、Dempster-Shafer理论[5-6]和Shapley熵[8-9]的一些关键内容进行定义,这有助于理解将在后面内容中展示的动态可信度评估模型.我们以P(X)表示集合X的幂集,以|X|表示集合X所包含的元素的个数.2.1可测空间、模糊测度和信任测度P(X)满足:定义1(可测空间).对于集合X,如果U(1)X∈U;(2)A∈UAc∈U;(3)An∈U(n∈N)∪+则称(X,U)为可测空间,A∈U称为可测集,其中Ac为集合A关于集合X的补集.定义2(模糊测度).设X为非空集合,(X,U)为可测空间,函数μ:U→[0,1]满足:(1)μ()=0,μ(X)=1;(2)A,B∈U,且ABμ(A)μ(B),则称μ为U上的模糊测度.定义3(信任测度).设X为非空集合,(X,U)为可测空间,函数blv:U→[0,1]满足:(1)blv是U上的模糊测度;(2)A,B∈Ublv(A∪B)blv(A)+则称blv为信任测度.信任测度是可信度评估模型的理论基础.一个设计合理的信任测度对可信度评估结果的准确性起着至关重要的作用.我们的动态可信度评估模型利用Dempster-Shafer信度函数获得节点的可信度.2.2Dempster-Shafer证据理论Dempster-Shafer信度函数是最常用的信任测度之一.Dempster-Shafer理论的一些关键定义如下.定义4(基本可信度函数).对于识别框架X,函数m:P(X)→[0,1]满足:(1)m()=0;(2)∑A∈P(X)m(A)=1,则称m为识别框架X上的基本可信度函数;相应地,m(A)称为集合A的基本可信数(A∈P(X)).定义5(信度函数).对于识别框架X,m为X上的基本可信度函数,如果则称bel:m:P(X)→[0,1]为X上对应于m的信度函数.显然,由定义可得bel()=0,且bel(X)=∑BXm(B)=∑B∈P(X)m(B)=1,所以bel为模糊测度.而且bel(A∪B)=∑DA∪B∑DAm(D)+∑DBbel(A∪B)bel(A)+bel(B)-bel(A)·bel(B).所以,根据定义3可知,Dempster-Shafer信度函数bel为信任测度.下面是Dempster规则的定义,这一规则可以实现各个相互独立的基本可信度函数的合成,使我们获得准确性较高的综合可信度信息.定义6(Dempster规则).设m1和m2为识别框架X上的两个基本可信度函数,并且这两个推荐证据相互独立,定义m12为X上的基本可信度函数:(1)m12()=0;(2)m12(A)=1其中,K=∑B∩C=这里得到m12的方式称为合成m1和m2的Dempster规则,其结果m12反映了m1和m2对A的综合支持程度.其中K反映了集合之间的冲突程Page4度,1-K为归一化因子,保证了m12的值域规格化到区间[0,1]上.2.3Shapley指标和Shapley熵1953年,Shapley[7]提出了Shapley指标的概念.1999年,Yager[8-9]利用Shapley指标[7]提出了Shapley熵的概念,在使用模糊测度描述变量时,Shapley熵可以用来度量模糊测度的不确定性.定义7(Shapley指标).集合U={u1,u2,…,un},如果μ是P(U)上的模糊测度,那么元素ui的Shapley指标Φi(μ)定义为Φi(μ)=∑n-1γk=(n-1-k)!k!di1999年,Yager[8-9]观察到Shapley指标的各分量和为1,即∑n熵的形式,借助Shapley指标定义了Shapley熵.其定义如下.定义8(Shapley熵).集合U={u1,u2,…,un},如果μ是P(U)上的模糊测度,那么μ的Shapley熵HY(μ)定义为HY(μ)=-∑nShapley熵可以有效地度量模糊测度的不确定程度,文献[9]对Shapley熵的合理性做了说明.本文将利用Shapley熵可以用来度量模糊测度的不确定性的特点,评估信任测度所具有的信息量大小.3动态可信度评估模型历史信息是评估节点可信度的基础.我们通过对节点间交互的历史信息的分析和综合获得每个节点的可信度.所以在每轮评估结束后,评估结果就会随时间逐渐失效.在这里,我们设置一个固定的时间间隔τ,每个时间间隔为一个交互周期.规定在每个时间间隔结束时,根据刚刚过去的一个时间间隔的历史交互记录进行新一轮的可信度评估,将最新得到的综合可信度作为节点可信度评估结果.在识别框架X={T,-T}下,我们将分别对直接可信度评估阶段和综合可信度评估阶段进行讨论和展示.假设在分布式环境下的某个评估时刻共有n个计算节点,分别记为P1,P2,…,Pn.接下来,我们通过描述节点Pi(1in)对其它n-1个节点的可信度评估过程,展示动态可信度评估模型.3.1直接可信度评估在直接可信度评估阶段,计算节点通过与其它节点的直接历史交互记录对各个节点的可信度进行初步的评估.利用历史直接交互记录得到直接可信度可以采用多种方法.这里,我们利用历史交互次数及其相互间的比例关系作为直接可信度的依据.假设Aij为节点Pi与节点Pj(1jn,j≠i)在最近的一个时间间隔内实际直接交互的总次数;Tij表示在节点Pi看来交互成功的次数;Fij表示在节点Pi看来交互失败的次数;那么,Aij-Tij-Fij就表示节点Pi无法确定交互成功或者失败的次数.利用Aij、Tij和Fij可以建立节点Pi对节点Pj的基本可信度函数,表示为tij.我们称tij为节点Pi对节点Pj的直接基本可信度函数.相应地,我们称信度函数belij(A)=∑BA对节点Pj的直接信度函数.对应于分布式计算环境中除本身之外的n-1个节点,节点Pi各拥有一个直接基本可信度函数tij(1jn,j≠i).节点Pi上的n-1个直接基本可信度函数的赋值过程如下.首先在节点Pi上执行语句tij()=0(1jn,j≠i);使得空集的基本可信数为零,然后执行算法1完成所有n-1个直接基本可信度函数的赋值过程.需要强调的是,这里我们只是给出一种简单的直接可信度评估方法,通过其它方式分析历史交互记录得到的直接可信度只要满足tij()=0,tij({T})+tij({-T})+tij({T,-T})=1仍然可以通过本文的可信度评估模型得到节点的综合可信度值.由于直接可信度的计算过程一般比较简单,而且新模型的核心部分是综合可信度评估阶段,这里不再对直接可信度的计算方法进一步展开讨论.算法1.直接可信度评估方法.过程:codesforPi:Page5由以上过程,我们在图2中给出了直接可信度评估阶段的模型结构图.直接可信度评估阶段主要是对原始的历史交互记录进行初步处理,为综合可信度评估阶段提供必须的基础信息,即直接基本可信度函数.在得到节点间的直接基本可信度函数后,每个节点向其它所有节点广播初步计算评估后得到的直接基本可信度函数.然后进入综合可信度评估阶段,计算综合可信度.3.2综合可信度评估得到直接基本可信度函数矩阵.在广播直接基本可信度函数之后,每个节点将我们将该矩阵的n(n-1)个元素划分为n个组,每组包含n-1个直接基本可信度函数.其中,第j个组为(t1j,t2j,…,t(j-1)j,t(j+1)j,…,tnj)(1jn).这里,第j个组的直接基本可信度函数代表了分布式计算环境下除节点Pj本身之外n-1个节点对节点Pj可信度的初始评价.由节点Pk(1kn,k≠j)所提供的直接基本可信度函数tkj,容易得到对应的直接信度函数为belkj(A)=∑BA着,我们将展示节点Pi计算节点Pj可信度的过程.当tkj({T,-T})=1.0时,则节点Pk无法确定与Pj的任何一次交互的成败,或者节点Pk和节点Pj交互次数为零,那么节点Pk所提供的信息是无效的,我们的可信度评估模型将忽略这样的直接基本可信度函数.不同的节点所提供的直接可信度信息的价值有很大差别,我们用权值数组ω[n]表征这种差别,当评估节点Pj的可信度时,权值数组为ωj[n].其中权值ωj[k]越大,表明对应节点Pk提供的直接可信度信息对评估节点Pj的可信度的过程的影响越大.权值ωj[k](1j,kn,k≠j)体现了两方面的内容:(1)节点Pk的诚实程度,由节点Pi和节点Pk历史交互记录得到的直接可信度和上轮评估结束时节点Pk的诚实程度共同决定(见算法3),称为信用因子,存放在数组u[n]中;(2)节点Pk提供的直接信度函数belkj所具有的信息量大小,由直接信度函数belkj的Shapley熵变换得到,称为效用因子,存放在v[n]中.算法2是识别框架X={T,-T}时,Shapley熵的计算过程.容易说明当belkj({T})=belkj({-T})时,信度函数belkj的Shapley熵取得最大值,这时的最大Shapley熵MAX_HY=1.考虑到节点可信度变化的连续性,我们保留上一轮评估结束时权值分配在数组last_ωj[n](1jn,j≠i)中,使其和直接可信度共同决定本轮评估的信用因子(见算法3).算法2.Shapley熵的计算.functionHY_Shapley(belkj){//X={T,-T}}//HY_Shapley算法3.权值数组ω[n]的赋值过程.functionget_weight(n,j){//n为所有节点个数,返回对应于节点Pj的权值数组//last_ωj[n]为上一轮评估结束时,对应于节点Pj的权//值数组//u[n]中是各节点的信用因子//last_u[n]为上一轮评估结束时各节点的信用因子//v[n]存放各节点的效用因子//α和β是考虑可信度的连续性而引入的参数//0<α,β<1v[i]←1-HY_Shapley(belij);sum←u[i]·v[i];last_ωj[n]←ωj[n];//保留本轮权值用于下轮评估last_u[n]←u[n];//保留信用因子用于下轮评估}//get_weight算法3是对权值数组ωj[n]的赋值过程,易于得出,在算法3的每一轮执行之后有Page6下面,我们给出等式(3)的简要证明过程,由算法3可知∑1kn,k≠jtkj({T,-T})≠1=α·∑1kn,k≠j=α+(1-α)=1.因此,∑1kn,k≠j过程.tkj({T,-T)}≠1在得到每个节点的权值后,执行算法4,将直接信度函数进行变换处理.然后通过算法5利用Dempster规则将n-1个直接信度函数合成,得到综合信度函数ctj()(1jn,j≠i).ctj({T})的值就反映了节点Pj的可信度大小.算法4.对直接信度函数的变换处理过程.for(k|1kn&k≠j&tkj({T,-T})≠1){belkj({T})=ωj[k]·belkj({T});belkj({-T})=ωj[k]·belkj({-T});belkj({T,-T})=1-belkj({T})-belkj({-T});}//endfor算法5.Dempster规则合成直接信度函数的//ctj()为利用Dempster规则合成后的信度函数ctj({T})=belij({T});ctj({-T})=belij({-T});ctj({T,-T})=1-ct({T})-ct({-T});for(k|1kn&k≠i&k≠j&tkj({T,-T})≠1){//依次合成各个直接信度函数K=ctj({T})·belkj({-T})+ctj({-T})·belkj({T});p=ctj({T})·belkj({T})+ctj({T})·belkj({T,-T})+q=ctj({-T})·belkj({-T})+ctj({-T})·r=ctj({T,-T})·belkj({T,-T});ctj({T})=p/(1-K);ctj({-T})=q/(1-K);ctj({T,-T})=r/(1-K);}//endfor接着我们将对加入到分布式计算环境下的新节点单独考虑.新加入的节点指刚刚加入分布式计算环境、尚未与其它节点的进行交互的节点.在以上计算过程中,如果节点Pj是新加入的计算节点,那么将使得ctj({T})=ctj({-T})=0.这将导致新加入的节点因为可信度过低而无法得到分配任务,我们可给新加入节点赋一定的初始可信度.算法6给出了将新加入节点可信度赋初始值的过程.算法6.新加入节点初始可信度赋值的过程.for(k|1kn&k≠j){//θ为新加入节点的可信度初始值,0<θ<0.5}//endfor根据以上过程,图3给出了综合可信度评估阶段的模型结构.在综合可信度评估阶段,本文引入了α、β和θ三个参数,并给出了它们的取值范围,它们的具体取值需要根据某个特定网络的状况而定.在第4节中,我们分析了它们的不同取值对评估结果的影响.4算法分析在可信度评估过程中,不诚实的节点可能会提供虚假的评估数据,干扰其它节点的评估过程,因此,在我们的方案中,利用每个节点的可信度记录作为其信用因子,信用因子高的节点的直接基本可信度函数在形成综合可信度的过程中拥有更高的权值;另一方面,在利用每个节点的直接基本可信度函数计算综合可信度时,各个直接基本可信度函数所包含的信息量差别很大,因此不能对它们等同对待.本文利用Shapley熵[8-9]评估了每个直接基本可信度函数的信息量,作为效用因子.然后,利用信用因子和效用因子的乘积作为权值,对每个直接基本信度函数进行修正,再利用Dempster规则合成得到综合可信度.通过这种方式,使得可靠的,含有信息量较高的直接基本可信度函数在形成综合可信度的过程中占有更高的权重,从而保证了综合可信度反映节点可信度历史记录和其直接评估函数信息量的差别,因此,综合评估结果可以比较准确地动态反映Page7节点可信度的变化.接下来,我们通过仿真实验分析新方案对节点可信度的评估效果.本文设置的网络包括1000个节点(分别记为P0,P1,…,P999),所有节点共分为5类:长期诚实节点、长期不诚实节点、前半期不诚实节点、后半期不诚实节点和偶尔不诚实节点,其中每类节点各200个.这里,长期诚实节点是指在所有交互周期都很少有欺骗行为的节点;长期不诚实节点为在所有交互周期都有较多欺骗行为的节点;前半期不诚实节点指在前10个交互周期欺骗行为较多,之后行为诚实的节点;后半期不诚实节点是在前10个交互周期行为诚实,之后有较多欺骗行为的节点;偶尔不诚实节点是只在极少数交互周期里表现出较多欺骗行为的节点.现实中,极少存在绝对诚实或者绝对不诚实的节点,因此,本文假设节点在表现欺骗行为时,每次提供的资源信息和推荐信息有90%的可能是虚假的;而表现为诚实行为的节点每次提供的资源信息和推荐信息有90%的可能是真实的,只有10%的可能是虚假的.4.1参数α和β对综合评估结果的影响4.1.1参数α对综合评估结果的影响为了分析参数α对综合评估结果的影响,我们首先设定参数β=0.6,θ=0.62,然后令α取不同的值,分别模拟了节点在20个周期的交互过程.图4记录了本文的可信度评估模型在参数α等于0.3、0.5和0.8三种情况下的交互成功率.在第1个周期,由于缺少历史可信度记录,节点选择交互对象的随机性较大,导致起始成功率较低,随着交互的进行和历史可信记录的累积,交互成功率逐渐上升.在第11个周期,由于存在前半期不诚实节点和后半期不诚实节点,前者开始变得诚实,而后者原本诚实,此后,其欺骗行为增多,导致交互成功率出现大幅下滑,然后在得到新的可信度记录之后,交互成功率又逐步回升到较高水平.可见,本文的可信度评估方案可以动态放映节点行为情况的变化,并能够适应节点行为的动态变化,保持较高的交互成功率.另一方面,从图4中,我们可以看到当α等于0.5时,交互成功率对节点行为的动态变化适应相对较差.这是因为在算法3中有ωj[k]←α·ωj[k]+(1-α)·(u[k]·v[k]/sum),因此α越大,历史权值记录在新权值中所占的比例越大,算法对节点的行为变化适应度越差.然而,当节点行为基本稳定时,α等于0.5的评估效果要优于α等于0.3的情况.当α等于0.8时,历史权值在新权值中占有的比重过大,导致权值更新缓慢,无法及时反映节点的最新行为模式,使得评估结果的准确性明显降低.可见,为了使α获得一个最佳的值,需要根据具体的需求和网络中节点的行为模式,逐步权衡调整.4.1.2参数β对综合评估结果的影响与参数α类似,参数β的不同取值也表征了历史评估结果对新评估结果的不同影响程度;然而两者之间有本质上的区别,参数β表示了历史信用对节点的新的信用因子(见3.2节和算法3)形成过程中所占的比重,而参数α是历史权值记录在新权值中比重,信用因子只是影响权值形成的其中一个因素,因此参数β取值的调整比α的取值调整对评估结果的影响小.那么在具体实施过程中,我们可以通过首先调整参数α的取值,然后微调参数β的取值,最终取得一个适合具体网络中节点行为模式的最优参数组合.图5描绘了在参数α=0.5,θ=0.62,β取0.4、0.6和0.9三个不同值时,节点在20个周期内的交互成功率.从图5可以看出,当β在0.5附近时,信用因子同时兼顾了节点的历史信用值和当前周期的表现,能够得到较准确的评估结果;然而,当β=0.9Page8时,节点当前周期的信用表现在信用因子的形成过程中所占的比例过低,历史信用记录占到了信用因子的90%,因此评估结果无法及时反映节点的最新行为模式,导致交互成功率较低.4.2节点综合可信度的动态变化分析为了进一步分析本文可信度模型的评估结果对节点行为的动态反映,图6记录了在参数α=0.5,β=0.6,θ=0.62时,节点P0对长期诚实节点,长期不诚实节点和偶尔不诚实节点3种节点的综合可信度平均值随着交互周期变化的情况.从图6可以看出,在交互初期,各种节点的可信度平均值差别不大,随着历史交互记录的累积,不同类型的节点的可信度平均值的差别逐渐显著.其中,长期诚实节点的可信度平均值一直维持在0.9左右,波动较小;长期不诚实节点的可信度平均值最终稳定在0.2以下;然后偶尔不诚实节点由于其在第4、10和16三个交互周期里的欺骗行为导致其可信度平均值曲线为锯齿形.因此,各种节点的可信度平均值在保持一定的连续性的同时,都反映了节点行为的动态变化过程.4.3与已有模型的成功率对比分析R2BTM[15]的应用环境与本文比较接近,而且文献[15]中的分析显示R2BTM方案的评估效果明显优于之前的EigenTrust[10]和PET[25]方案,因此,我们实现了R2BTM方案,并在上述模拟环境下对R2BTM方案和本文的可信度评估模型两种不同机制在交易成功率上进行了对比分析.从图7可以看出,在节点行为模式基本稳定时,R2BTM方案的成功率只能达到85%左右,而本文的可信度模型的成功率可以达到90%上下;另一方面,在第11周期前后,部分诚实节点转变为欺骗节点时,新模型的成功率下滑较少,而且能够及时回复,而R2BTM方案的成功率急剧下滑,回复较为缓慢.所以,本文的可信度评估模型在交易成功率和对节点行为模式发生转变的适应度两个方面都明显优于R2BTM方案.图7本文的可信度模型和R2BTM方案的交互成功率对比5结论与展望基于Dempster-Shafer证据理论和Shapley熵,本文提出了分布式计算环境下的动态可信度评估模型,并实现了其主要过程的算法.本文考虑到了信任测度的可靠性和其所带有的信息量大小的问题,并将Shapley熵引入到可信度评估的过程之中,从而使得新方案的综合可信度较准确地反映了节点的行为方式.最后,我们通过仿真实验分析了新方案对可信度的评估效果.我们将来的工作是将本文的可信度评估算法应用到实际的分布式计算系统中,进一步讨论其中相关参数的取值;同时研究更加实用和灵活的可信度评估模型,比如在保护推荐信息提供者的私有数据不会泄漏的条件下实现可信度评估的保护隐私的可信度评估模型等.
