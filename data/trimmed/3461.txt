Page1一种基于格雷码的电路自测试序列分配算法孙海臖1),2)王宣明2)卢晓博2)邵志标2)1)(郑州大学信息工程学院郑州450001)2)(西安交通大学电子与信息工程学院西安710049)摘要为了降低组合电路内建自测试的测试功耗,提出了一种基于格雷码的测试序列分配算法.分组式格雷码序列和种子序列相异或生成单跳变测试序列,根据电路的基本输入权重,合理分配测试序列位,减少了电路内部节点的跳变,有效降低了电路的测试功耗.该算法应用在改进的布斯二阶乘法器的自测试中,根据不同的数据通道位宽,相对于传统自测试架构,测试功耗降低了35.6%~43.7%,并且不影响乘法器的性能.对ISCA85基准电路的测试结果表明,该算法降低了测试功耗,具有高的故障覆盖率和少的测试长度,与LFSR相比功耗下降了59.3%~97.3%,并且硬件开销小.实验结果表明,该算法有效降低了组合电路的测试功耗,特别适合于系统级芯片内部模块的内建自测试.关键词功耗;内建自测试;权重;测试序列;格雷码1引言随着VLSI的集成度和复杂度不断提高,对电路的测试要求也越来越高,为了降低测试的成本和时间,内部模块的可测性已经成为系统级芯片设计的关键.目前,各种电路内建自测试架构已经被提出,它使系统级芯片的内部模块具有可测性和可控性,避免了外部测试电路和测试向量的引入,提高了测试效率[1-2].传统的自测试架构的目标集中在具有高的故障覆盖率、小的测试电路面积和少的测试时间,随着芯片的规模和工作频率不断提高,测试时的功耗对芯片的可靠性和稳定性产生影响,目前,低功耗测试已经成为内建自测试的重要目标[3].各种低功耗自测试方法已被陆续提出来:改进的PODEM算法通过减少测试向量间的翻转降低了测试功耗[4];基于两个线性反馈移位寄存器运行在不同的速度,测试时电路的翻转减少,测试功耗降低[5];电路内嵌计数器,对预设的测试向量进行优化,来降低测试时的功耗[6].本文通过对格雷码和电路基本输入权重的研究,提出了一种新的由分组式格雷码序列和正交种子序列构成的权重分配自测试架构,有效降低了电路的测试功耗.通过对种子性质的理论推导,本文提出了种子的数学模型以及电路实现.基于乘法器和ISCAS85基准电路的实验结果表明,本文提出的自测试架构具有高的故障覆盖率和低的测试功耗,并且硬件开销不大.2基于格雷码和正交种子的测试序列分配2.1基本输入权重电电流,即动态功耗[7]CMOS电路的功耗主要来自负载电容的充放其中,Cl是电路内部线l的负载电容;Vdd是电源电压;Tl是线l的电平翻转总数.从式(1)中可以看出,通过减少电路内部线的总的翻转数目∑l线l的函数,f(l)布尔差分,它表明f(l)是否对ini敏感,如式(2)所示令pf(l)功耗还可以表示为Pw=(1/2)V2dd∑l式(3)表明可以通过减少基本输入端的跳变,从而减少电路内部线的总的翻转数目而使功耗降低.然而,根据电路结构,某些基本输入端的跳变要比其它基本输入端造成更多的内部电路翻转.对应于每一个基本输入端,设定一个权重w(ini),如下式所示:权重表明每一个基本输入端的跳变所影响的总的负载电容.从式(3)和式(4)可以看出,权重越大的输入端的翻转越少,则电路的功耗越低.因此,对于测试电路,将测试向量中跳变少的位分配给权重大的基本输入端,可以有效降低测试功耗.2.2格雷码的权重分配格雷码相邻两个编码之间只有一位不同,因此采用格雷码作为测试向量,可以减少基本输入端的跳变.但是,由于格雷码有很多种,相同位翻转的次数是不同的,通过对格雷码的优化筛选,根据电路的基本输入权重,合理分配测试向量,来减少电路内部翻转.测试向量中分配给权重大的输入端的位跳变越少,测试功耗降低越多,因此,应使格雷码的高位翻转最少.定理1.对于n位格雷码序列犌2n×n,当每一位的翻转次数x1,x2,…,xn为1,2,…,2n-1,若g1给定,那么应有gij=g(i-1)j,i=(2n-j+1)mod(2n-j+1),i2g(i-1)j,烅烄烆其它证明.n位格雷码序列犌2n×n可表示为对于n位格雷码序列犌2n×n,如果每一位的翻转次数x1,x2,…,xn为1,2,…,2n-1,那么第j位的翻转如下:第一次在2n-j+1行,以后每隔2n-j+1行发生翻转,最后一次在2n-2n-j+1行,共翻转2j-1次.即当i=2n-j+1,(2n-j+1)+2n-j+1,(2n-j+1)+2×2n-j+1,…,(2n-j+1)+k×2n-j+1,…,(2n-j+1)+Page3(2j-1-1)×2n-j+1时,第j位翻转,此时gij=g(i-1)j.由以上可得gij=g(i-1)j,i=(2n-j+1)mod(2n-j+1),i2g(i-1)j,烅烄烆其它若首个测试向量给定,则整个格雷码序列可由定理1得到.定理2.对于n位格雷码序列犌2n×n,每一位的翻转次数x1,x2,…,xn为1,2,…,2n-1,如果犵1确定为(00…0),那么所有第j位发生翻转的格雷码,其第j+1位到第n位均为(10…0),且第1位到第j-1位组成j-1位的穷举的二进制序列犌2j-1×(j-1).证明.根据定理1,当犵1确定为(00…0),则1,i∈((4k-3)×2n-j,(4k-1)×2n-j],烄gij=烅0,烆其它当第j位将要翻转时,i=2n-j,3×2n-j,…(2m-1)×2n-j…,m∈(1,2,3,…,2j-1),此时:对于第j+1位,gi(j+1)=.因为i=(2m-1)×2n-j=(4m-2)×2n-j-1,所以i∈((4m-3)×2n-j-1,(4m-1)×2n-j-1],m∈(1,2,3,…,2j-1),gi(j+1)=1.对于第j(j+2jn)位,1,i∈((4s-3)×2n-j,(4s-1)×2n-j],烄gij=烅0,烆其它由于i=(2m-1)×2n-j令r=(2m-1)×2j-j-2,则i=4r×2n-j.因为1r(2j-1)×2j-j-2<2j-2,所以r∈s.因为4r×2n-j((4s-3)×2n-j,(4s-1)×所以gij(j=(j+2,j+3,…,n))=0.对于第1位到j-1位:当第j位要翻转时,i=(2m-1)×2n-j,m∈(1,2,3,…,2j-1).2n-j],即i((4s-3)×2n-j,(4s-1)×2n-j],将所有要翻转的格雷码的第1位到j-1位组成一个2j-1×(j-1)的序列犌2j-1×(j-1),其第u行犵u=(gu1gu2…gu(j-1))=(gi1gi2…gi(j-1)),i=(2u-1)×2n-j,u∈(1,2,3,…,2j-1).由于犵i不发生重复,故犌2j-1×(j-1)为穷举的二进制序列.由以上可证得:如果犵1确定为(00…0),那么所有第j位发生翻转的格雷码,其第j+1位到第n位均为(10…0),且第1位到第j-1位组成j-1位的穷举的二进制序列犌2j-1×(j-1).在测试过程中先根据式(4)可确定权重最小的基本输入端,将格雷码序列中跳变最多的第n位分配给它.根据定理2,格雷码的第n-1位在跳变时,其第n位始终为1,因此,在确定权重次小的输入端时,应将权重最小的输入端赋值为1,重新计算余下各端口的权重.同理,权重次小的输入端确定后,计算余下的基本输入端的权重时,权重次小和最小端口应赋值(10),依次类推.根据格雷码的特点,计算电路基本输入端的权重,将测试序列中的位合理分配给电路的输入端,使测试功耗最小化.2.3基于格雷码和正交种子的测试序列采用穷举的格雷码序列作为测试序列,故障覆盖率会很高,但是,随着输入端口数目的增多,测试向量的数目很大,测试时间很长.如果采用部分的格雷码序列作为测试序列,可能使得比较关键的输入端口翻转频率下降,从而影响测试覆盖率,或者在相同测试覆盖率的情况下测试时间延长.本文提出了基于格雷码和正交种子的测试序列,它由分组式格雷码序列和正交种子序列异或生成.分组式格雷码序列按位分组,逐组发生跳变,组内为穷举的格雷码.正交种子序列和分组式格雷码序列异或生成单跳变测试序列,既可以通过种子使得生成的测试序列对应于关键输入端口的位的翻转频率上升,从而提高测试覆盖率,又由于测试序列组内各位的跳变数目不相同,将跳变少的位分配给能造成更多的内部电路翻转的输入端,可以降低测试功耗.本文的分组式格雷码序列是每4位分成一组,矩阵形式如下:犆16n×n=其中,n为组数,cij为四位的二进制码.犌16×4=(g1g2…g16)T=(00000001…1000)T如果犮0=[g1…g1g1],则cij如下式:令格雷码序列当1i16n-1时Page4以n=2为例,分组式格雷码序列为{00000000,00000001,00010001,…,10000000}.本文提出的测试序列代数形式如下:其中犆=[犮0犮1…犮x]T为分组式格雷码矩阵,犛=[狊0狊1…狊y]为种子矩阵.为了提高测试效率,正交种子序列和分组式格雷码序列异或应生成不重复的测试序列,即犮i,犮j∈犆,狊p,狊q∈犛,有3内建自测试电路的架构实现3.1种子的生成算法及电路量不应该发生重复.为了提高故障覆盖率,测试序列生成的测试向满足狊0=0.定理3.序列犛m={狊0,狊1,狊2,…,狊2m-1}(m1)狊2k+u=狊2k狊u(0km-1,0u2k-1).如果犛m是分组式格雷码序列的种子序列,且第2m+1个种子狊2m存在,那么序列犛m+1={狊0,狊1,…,狊2m-1,狊2m,…,狊2m+1-1}也是分组式格雷码序列的种子序列.证明.令犮i,犮j为分组式格雷码序列中任意两个向量,由式(5)可知狊h∈犛m,狊r∈犛m,有令犛r=犛m+1-犛m={狊2m,狊2m+1,…,狊2m+1-1}.因为狊2m+p=狊2m狊p(0p2m-1),所以狊2m+p∈犛r,狊q∈犛m,有因为狊p∈犛m,狊q∈犛m,所以由序列犛m满足的条件可知,狊t∈犛m,满足所以狊2m+p狊q=狊2m(狊p狊q)=狊2m狊t.因为狊2m,狊t都是种子,由式(5)知所以狊2m+p∈犛r,狊q∈犛m,有狊2m+d∈犛r,狊2m+f∈犛r(0d2m-1,0f2m-1),有狊2m+d狊2m+f=(狊2m狊d)(狊2m狊f)=狊d狊f.因为狊d,狊f都是种子,由式(5)知所以狊2m+d∈犛r,狊2m+f∈犛r,有由式(6)~(8)可知,狊u∈犛m+1,狊v∈犛m+1,满足狊u狊v≠犮i犮j.因此,序列犛m+1={狊0,狊1,…,狊2m-1,狊2m,…,狊2m+1-1}是分组式格雷码序列的种子序列.根据定理3,本文产生种子的方法如下:①令第一个种子狊0=0,犮i,犮j∈犆;②选择种子狊1,满足狊1狊0≠犮i犮j;③选择种子狊2,满足狊2狊v≠犮i犮j(v<2),狊2和狊1异或生成种子狊3;④选择种子狊4,满足狊4狊v≠犮i犮j(v<4),狊4和狊1,狊2,狊3分别异或生⑤选择第2k+1个种子狊2k,满足狊2k狊v≠犮i犮j(v<2k),狊2k和狊1,…,狊2k-1分别异或生成种子狊2k+1,…,狊2k+1-1(k=3,4,…).本文将种子狊2k(k=0,1,2,…)称为keyseed,确定m个keyseed能生成2m个种子.种子序列中第m+1个种子狊m(m的二进制形式为bh…b1b0)可以表示为成种子狊5,狊6,狊7;由定理3可得令第i个keyseed为犢i-1={yn-1则狊m=(bh犢h)(bh-1犢h-1)…(b0犢0)由上式可以看出,keyseed确定以后,狊m只与m的二进制形式有关.如果把bh…b1b0看成二进制计数器的输出,那么种子电路可以由计数器和异或门构成.以16位种子为例,种子电路如图1中a所示,7个keyseed是犢0={1,0,1,0,0,1,0,1,0,1,1,1,1,1,1,0},…,Page5犢6={0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1},则狊m={(b6y156)(b5y155)…(b0y150),={(b3b2b0),3.2内建自测试电路对于输入端口少的被测电路,可以直接采用格图1自测试电路架构4实验结果采用8位的格雷码计数器,生成穷举的格雷码序列,对n×n位的布斯乘法器进行测试,其测试结雷码计数器产生穷举的格雷码序列对电路进行测试.对于输入端口多的被测电路,自测试电路由种子电路和分组式格雷码电路构成,如图1所示,种子序列(图(a))和分组式格雷码序列(图(b))相异或生成测试序列(图(c)).测试序列是单跳变序列,它通过种子提高基本输入端关键端口的跳变频率,从而提高故障覆盖率,同时又由于测试序列组内各位的跳变数目不相同,根据电路的基本输入权重,将跳变少的位分配给能造成更多的内部电路翻转的被测电路输入端,更多的降低测试功耗.构如图2所示,故障覆盖率可达到99%以上[8].8位的格雷码计数器产生256个测试向量,测试过程中,4位分配给乘法器的X操作数,4位分配给乘法器的Y操作数.本文对32位乘法器的逻辑网表提取寄生参数,确定内部每个线l的负载,计算出乘法器Page6的基本输入权重,根据基本输入权重,将格雷码计数器的输出分配到乘法器相应的输入计算测试功耗.32位乘法器的基本输入权重如表1所示.从表表132×32改进布斯二阶乘法器的输入权重y3y2y1y0x3x2x1x010764.7910026.8610006.489998.1420891.9812686.2721727.0512629.48110833.2510054.4410028.25-21162.9413982.1322014.5613936.06-21196.0013688.8822192.2513605.861010788.759904.38-10010450.00--20633.7511984.0021332.0011824.001000-20072.7510511.7521080.2510664.75-18844.00-19003.001727.0000001000001-18844.00-18941.00-表2乘法器的测试功耗模拟格雷码B的功耗/W8位16位32位注:分配A:C0=Y4i+3,C1=Y4i+2,C2=Y4i+1,C3=Y4i,C4=X4i,C5=X4i+1,C6=X4i+2,C7=X4i+3;分配B:C3=Y4i+3,C2=Y4i+2,C1=Y4i+1,C0=Y4i,C4=X4i,C5=X4i+1,C6=X4i+2,C7=X4i+3;分配C(本文优化):C3=Y4i+3,C2=Y4i+2,C1=Y4i+1,C0=Y4i,C5=X4i,C7=X4i+1,C4=X4i+2,C6=X4i+3.本文采用图1所示的测试电路对ISCA85基准电路进行了故障仿真,测试序列4位分成一组,根据权重分配到基准电路的输入端.表3比较了本文提出的测试电路与LFSR的固定型故障覆盖率(SFC),从表中可以看出,对于绝大部分电路,在测试图形远少于LFSR的情况下,本文提出的自测试电路具有更高的故障覆盖率.如C6288,在SFC相同的情况下,测试长度是LFSR的1%;如C3540,在SFC高3.36%的情况下,测试长度是LFSR的70%.表4比较了本文提出的自测试电路和LFSR在测试中基准电路全部内部节点电容与跳变次数的乘积之和(用∑t·c表示),∑t·c值越高测试功耗中可以看出,32位乘法器的基本输入权重由小到大依次为y0y1y2y3x2x0x3x1.根据乘法器的基本输入权重,将格雷码计数器的输出分配到乘法器相应的输入,在0.18μmCMOS工艺下,使用Prime-Power完成了8位、16位和32位乘法器的测试功耗的模拟,并与二进制计数器采用顺序分配进行了比较,结果如表2所示.从表中可以看出,采用基于格雷码的测试序列分配算法,乘法器的测试功耗降低从35.6%到43.7%.对于输入端口少的被测电路,可以直接采用格雷码计数器生成穷举的测试序列进行测试,而对于输入端口多的被测电路,自测试电路由种子电路和分组式格雷码电路构成,根据电路的基本输入权重,将测试序列中跳变少的位分配给能造成更多的内部电路翻转的被测电路输入端.∑7w(x4i+3)i=0越大.表中A表示没有根据权重分配的∑t·c,B表示根据权重分配后的∑t·c,从表中可以看出根据权重分配后的∑t·c比分配前下降了3.4%~13.7%.在相同的测试长度下,本文提出的自测试电路根据权重分配后的∑t·c比LFSR降低了59.3%~97.3%,对输入端数目最多的3个电路C5315、C7552和C2670,∑t·c下降均超过97%.仿真结果表明,本文提出的自测试电路能够有效降低测试功耗.Page7表3本文提出的自测试电路和LFSR的故障覆盖率比较CircuitLFSR电路测试结果C8801638499.948200100.00C62883276899.4633899.50C35403276896.302324099.66C53153276899.422056099.96C19081638499.48486099.84C13551638499.711680100.00C26706553689.2487168094.91表4本文提出的自测试电路和LFSR的功耗比较CircuitLengthC880164001502.71308.918780.9C628816008309.88021.519711.7C3540232408319.98000.583291.3C5315205603005.72663.391043.5C7552311485629.44859.2178492.0C190897203048.22928.29853.3C13551680558.0538.91893.5C2670544802080.41829.065171.35结论本文提出了一种基于格雷码的测试序列分配算法,根据电路的基本输入权重,合理分配测试向量位,减少了电路内部翻转,有效降低了电路的测试功耗.对于输入端口少的被测电路,直接采用格雷码计数器生成穷举的测试序列进行测试,对于输入端口多的被测电路,自测试电路由种子电路和分组式格雷码电路构成,种子序列和分组式格雷码序列相异或生成单跳变测试序列,对电路进行测试,既可以保证高的故障覆盖率,又由于测试序列各位的跳变数目不相同,将跳变少的位分配给权重大的基本输入端,可以更多地降低测试功耗.采用格雷码计数器生成穷举的测试序列对改进的布斯二阶乘法器进行了测试,相对于传统自测试架构,测试功耗降低了35.6%到43.7%,并且不影响乘法器的性能.采用种子序列和分组式格雷码序列相异或生成测试序列,对ISCA85基准电路进行了测试,同LFSR相比,本文提出的自测试电路具有高的故障覆盖率和少的测试长度,在测试长度相同的情况下,功耗比LFSR下降59.3%~97.3%.实验结果表明,本文提出的测试电路能有效降低测试功耗,具有高的故障覆盖率和少的测试长度,并且硬件开销小.
