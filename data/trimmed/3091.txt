Page1一种新的基于正交实验设计的约束优化进化算法蔡自兴江中央王勇罗一丹(中南大学信息科学与工程学院长沙410083)摘要提出了一种新的基于正交实验设计的约束优化进化算法.新算法的主要特点是:在搜索机制方面,利用正交实验设计方法安排多个父代个体的交叉操作,提出了一种新的多父体正交交叉算子,新的交叉算子能够有效利用多个父代个体所携带的信息产生新的具有代表性的子代个体.此外,利用单形交叉算子对父代种群进行并行搜索,以协调算法的勘探和开采能力.在约束处理技术上,新算法引入了一个衡量个体优、劣的新比较准则.通过13个标准的测试函数验证了算法的通用性和有效性.关键词约束优化;进化算法;正交实验设计;约束处理技术;单形交叉算子1引言在科学、工程和商业等诸多领域中,很多实际问Page2束优化问题的一种有效方法,目前已被广泛地用于求解约束优化问题[1-2].但大量的研究表明,传统的遗传算法也存在许多的不足和缺陷[3-4],如早熟收敛、计算量大和局部搜索能力差等.近年来,不少研究者将优化实验设计方法(如正交实验设计、均匀设计、佳点集等)引入到遗传算法中,在一定程度上克服了传统遗传算法的缺陷,表现出良好的搜索性能.Zhang和Leung[5]将正交实验设计引入遗传算法来设计多媒体的多点传输路由.Leung和Wang[6]利用正交表初始化种群和安排两个父代个体的交叉操作,提出了一种量化的正交遗传算法(OGA/Q)求解高维全局优化问题.Wang和Dang[7]利用均匀表设计两个父代个体的交叉算子,并提出了一种基于水平集进化和拉丁方的进化算法(LEA).张铃和张钹[8]利用数论中的佳点集理论和方法,对GA中的交叉算子进行了重新设计,提出了佳点集遗传算法,该算法在求解全局优化问题、SAT问题、TSP问题和背包问题方面取得了满意的效果.在用GA求解约束优化问题时,除了算法本身的搜索能力以外,如何处理约束条件也是得到好的优化效果的关键.目前常见的约束处理技术有惩罚函数法[9-11]、多目标优化法[12-14]以及其它方法.惩罚函数法是利用进化算法处理约束优化问题的常用方法,它允许群体中的个体在一定程度上违反约束条件,但必须对该个体依其违反约束条件的程度进行惩罚以减小它被选择的概率.惩罚函数法的惩罚参数选取比较困难,而且算法的性能强烈地依赖于所选择的参数.多目标优化法的主要思想是将约束优化问题转换为多目标优化问题后,利用多目标技术处理约束优化问题,但利用多目标技术处理约束优化问题需要了解多目标处理技术的知识背景,且对群体中的个体进行选择和比较操作时,需要计算Pareto前沿,在一定程度上增加了算法的计算开销.考虑到算法的搜索能力和约束处理技术对求解约束优化问题的性能影响,在搜索策略上,为了充分利用多个父代个体之间所携带的有效信息,产生具有代表性的子代个体,本文利用正交实验设计方法设计了一种新的多父体正交交叉算子(Multi-parentOrthogonalCrossover,MOC),并采用该算子对群体中的父代个体进行交叉操作.同时,利用单形交叉算子(SimplexCrossover,SPX)[15]对父代种群进行并行搜索,来协调算法的勘探和开采能力.在约束处理技术上,本文将群体的进化过程分为3个阶段,并根据群体在3个不同阶段的特点采取不同的选择策略,从而有效地引导群体不断向最优解逼近.数值实验验证了算法的通用性和有效性.2约束优化问题的描述不失一般性,一般的约束优化问题(ConstrainedOptimizationProblems,COPs)可以描述为Minimizef(狓),狓=(x1,x2,…,xN)∈Subjecttogj(狓)0,j=1,2,…,l这里,狓∈ΩS为决策向量,Ω为可行域,S为决策空间.一般地,S为u(i),l(i)、u(i)为常数,i=1,2,…,N.f(狓)、gj(狓)、hj(狓)均为数,gj(狓)0为第j个不等式约束条件,hj(狓)=0为第j个等式约束条件,l表示不等式约束条件的个数,m-l表示等式约束条件的个数.3正交实验设计正交实验设计[6]是一种解决多因素、多水平实验问题的有效方法,它利用正交表LM(QF)安排少数次实验,就能找到最好或者较好的实验条件,因此它被广泛地用于寻优.LM(QF)表示一个具有F个因素和Q个水平的正交表,其中L表示拉丁方,M表示水平组合数.对F因素、Q水平的实验问题,若进行全面组合实验,则要做QF组实验,但是当Q和F很大时,不可能做QF组实验,而应用正交表LM(QF)来安排正交实验,只需要选择M个组合去做实验.这里M一般远小于QF.我们以正交表L9(33)为例,如表1,对3因素、3水平的问题而言,若依据正交表L9(33)来进行正交实验,只需做9次验,但若进行全面组合实验,则需33=27次实验.可见正交实验设计大大减少了实验次数,且因素和水平越大,该方法的优越性越明显.实验号123456789Page31.selectthesmallestJfulfilling(QJ-1)/(Q-1)F;2.if(QJ-1)/(Q-1)=F,then3.constructthebasiccolumnsasfollows:F=FelseF=(QJ-1)/(Q-1);fork=1toJdo4.constructthenon-basiccolumnsasfollows:endforfork=2toJdo5.incrementai,jbyoneforall1iMand1jF;6.deletethelastF-FcolumnsofLQJ(QF)togetLM(QF)whereM=QJ;为了方便,记LM(QF)=[ai,j]M×F,其中第i个组合的第j个因素的水平值为ai,j,ai,j∈{1,2,…,Q}.设正交表[ai,j]M×F第j列为aj,若j=1,2,(Q3-1)/(Q-1)+1,…,(QJ-1-1)/(Q-1)+1,则aj称为基本列,其它的列称为非基本列.文献[6]给出了创建正交表LM(QF)的算法,它首先创建基本的列,然后创建非基本的列,详细描述见表2.其中Q为素数,且M=QJ,J满足式(2).4基于正交实验设计的约束优化进化算法4.1多父体正交交叉算子通过对多个父代个体进行重组,可以交换多个父代个体所携带的基因信息,以引入更多的启发式信息对解空间进行有效搜索,这样增加子代个体的采样范围,使种群在进化过程中保持好的多样性,从而避免早熟收敛.目前在遗传算法中,广泛使用的交叉算子有单点交叉、两点交叉、均匀交叉、算术交叉、单峰正态分布交叉等.但是这些算子在子代个体的样本空间中随机产生新的子代个体,搜索具有一定盲目性,在一定程度上降低了算法的搜索效率.因此,本文利用正交实验设计方法在子代个体的样本空间中产生具有代表性的组合来生成子代个体,以提高搜索效率.例如,设父代个体狆1=(p11,p12,p13,p14,p15,p16),狆2=(p21,p22,p23,p24,p25,p26),狆3=(p31,p32,p33,p34,p35,p36).对狆1,狆2,狆3进行重组,将有36种可能的组合即子代个体的样本空间大小为36.我们利用正交实验设计方法,从子代个体的样本空间中产生具有代表性的组合来生成子代个体,从而提高算法的搜索效率.对狆1,狆2,狆3而言,利用正交实验设计安排交叉操作的具体步骤是:把参与交叉操作的父代个体狆1,狆2,狆3分别作为正交实验的一个水平,分别记为β1,β2,β3;然后将每一个个体分成F个片段,例如把狆1,狆2,狆3分成3个片段,分片的位置如表3所示,将每一个片段作为正交实验的一个因素,分别记为f1,f2,f3.这样就将对狆1,狆2,狆3的交叉操作转化为3因素、3水平的实验问题,例如因素f1对应的3个水平分别为f1(1)=p11p12,f1(2)=p21p22,f1(3)=p31p32.最后根据表2构造正交表L9(33)来安排正交实验设计,如表4所示,将产生9个子代个体.水平β1(狆1)β2(狆2)β3(狆3)表4对狆1,狆2,狆3进行正交实验设计的方案和结果实验号1(p11p12)11(p11p12)21(p11p12)32(p21p22)42(p21p22)52(p21p22)63(p31p32)73(p31p32)83(p31p32)9在N维的实数空间中,设参与重组的Q个父代个体为狆1,狆2,…,狆Q,其中狆i=(pi1,pi2,…,piN),且i∈{1,2,…,Q}.将每一个参与重组的父代个体看作是正交实验设计的一个水平,即Q个水平;然后将每一个父代个体分成F个片段,每一个片段作为正交实验设计的一个因素,即F个因素.这样就将对Q个父代个体的重组问题转化为Q水平、F因素的实验设计问题.然后构造正交表LM(QF),安排正交实验设计将产生M个子代个体,其具体的操作过程见算法1.Page4算法1.多父体正交交叉.1.将参与重组的Q个父代个体分别作为正交实验设计的一个水平,记第i个水平为βi,i∈{1,2,…,Q},则βi=狆i.2.设狓=(x1,x2,…,xN)为参与重组的任一个体,将个体狓分成F个片段,将每一个片段作为正交实验设计的一个因素,具体的分片操作方法如下:首先随机产生F-1个整数,即k1,k2,…,kF-1,且满足1<k1<k2<…<kF-1<N;然后把个体狓=(x1,x2,…,xN)分成F个片段,其中每一片段表示个体狓的一个因素:令k0=0,kF=N,因此第j(j=1,2,…,F)个因素fj的Q个水平可以表示为3.构造正交表LM(QF)=[ai,j]M×F,根据正交表LM(QF),安排实验,产生M个子代个体:4.2单形交叉算子单形交叉算子(SimplexCrossover,SPX)[15]是目前常用的实数交叉算子之一,并广泛地用于求解各类优化问题.单形交叉算子基于均匀分布来产生后代个体,且单形交叉算子运算前后,群体中个体向量的均值应保持不变.m个独立的父体向量(狓i,i=1,2,…,m)形成了一个单形,子代个体的产生按照以下步骤进行:(1)按一定的比率ε将单形沿各个方向(狓i-狅,这里狅是m个向量的中心,即狅=1ε为扩张比)进行扩张得到一个新的单形;(2)从新的单形中随机选择一个点作为后代个体.例如,在两维空间中由3个点狓1,狓2和狓3构成的一个单形.将这个单形以(1+ε)(ε0)的比例向各个方向进行扩张,令狅=1和狔3形成了一个新的单形.在新单形中随机取一点狕,则狕=k1狔1+k2狔2+k3狔3+狅,其中k1,k2和k3为[0,1]中均匀分布的随机数且满足k1+k2+k3=1.4.3个体优劣的新比较准则类似于文献[16],本文将种群的进化过程分为以下3个阶段:种群中只有不可行解;种群中既有可行解又有不可行解;种群中只有可行解.(1)当种群中只有不可行解的时候,应使整个种群尽快地向可行域边界逼近,而个体违反约束程度反映个体到可行域边界的距离,因此本文根据个体违反约束程度的大小来对个体进行选择操作.选择违反约束程度小的个体,进入下一代种群.(2)Runarsson和Yao[17]认为,通常情况下平衡可行解与不可行解的比例是约束处理技术的关键问题之一.文献[18]使违反约束程度最小的不可行解以一定的概率继续生存,以此来增加群体的多样性.实验结果表明这种多样性机制对提高算法的性能是有效的.事实上,增加群体中违反约束条件最小的不可行解的生存概率,不仅可以提高群体的多样性,而且还可以引导群体中其它不可行解迅速地逼近可行域边界.因此,当种群中既有可行解又有不可行解时,使可行解和不可行解保持一定的比例,同时增加违反约束条件最小的不可行解的生存概率,可以维持种群的多样性,有利于群体向最优解逼近.(3)当种群中只有可行解时,适应度值大小反映个体与最优解的距离,为了使种群以较快的速度收敛到最优解,我们应根据个体适应度值的大小来进行选择操作.基于以上考虑,当种群处于不同进化阶段时,本文遵循以下原则来比较和选择个体:(1)种群中只有不可行解时,只比较个体违反约束程度的大小,违反约束条件小的个体占优.(2)种群中既有可行解又有不可行解时,为了使可行解与不可行解保持一定的比列,以更好地搜索可行的最优解,同时为了对群体中的可行解和不可行解进行简单直接比较,我们采取了以下处理方式.令Gj(狓)=max{0,gj(狓)},1jl表示个体狓与第j个约束条件的距离,则表示个体狓违法约束条件的程度.设狓min,狓max分别为当前群体可行解中适应度值最小和最大的个体,狓uf为当前群体不可行解中违反约束程度最小的个体.Page5f(狓)=f(狓),烄maxf(狓min)+η(f(狓max)-f(狓min)),f(狓烅烆其中,η为当前群体中不可行解的百分比.G(狓)=0,F(狓)为个体狓转化后的适应度值,对求最小值的问题来说,F(狓)数值小的个体占优.当群体中不可行解的比例较小时,由式(8)知,不可行解转换后的函数适应度值小,被选择进入下一代的概率增加,这样提高了群体中不可行解比例,反之不可行解被选择概率减少.因此通过这种自适应的动态调节机制可以有效地调节群体中可行解与不可行解的比例.此外,由式(9)可知,通过取消对群体中违反约束程度最小的不可行解的惩罚,可以增加其进入下一代种群的概率,这样引导其它不可行解快速地逼近可行域.(3)种群中只有可行解时,比较个体目标函数值的大小.对求最小值问题来说,函数值小的个体占优.4.4算法步骤设种群P的规模为n,N为个体变量的维数,t为进化代数,采用实数编码,w表示取实数w的整数部分.整个算法实现的具体步骤如下:1.生成初始种群随机生成初始种群P0={狓1,…,狓n},P0中的每一个个体满足狓i∈S,i∈{1,2,…,n},令t=0;2.交叉操作2.1.把群体Pt中的n个个体随机分成n/λ子类,每一个子类中有λ个个体,Pt剩余的个体加入到种群P1t.构造正交表LM(λN-1),利用多父体正交交叉算子以p0的概率对每一个子类中的个体进行交叉操作产生新的子代个体.然后再从每一个子类的父代个体和子代个体中,根据4.3节的个体优劣比较准则,选出λ个最好的个体进入到种群P1t;2.2.把群体P1t中的n个个体随机分成n/u子类,每一个子类中有u个个体,P1t剩余的个体加入到种群P2t.利用SPX算子以p1的概率对每一个子类中的个体进行交叉操作产生新的子代个体.然后再从每一个子类的父代个体和子代个体中,根据4.3节的个体优劣比较准则,选出u个最好的个体进入种群P2t.3.变异操作种群P2t的任一个体狓i=(xi,1,xi,2,…,xi,N),以概率pm参与变异操作.具体操作是:①产生一个随机整数j∈[1,N]和一个随机数实数r∈[0,1];②令xi,j=lj+r(uj-lj).群体P2t经变异后生成的新的子代种群P3t.4.种群更新从P2t和P3t中,根据4.3节的个体优劣比较准则,选出n个最好的个体进入到下一代种群Pt+1中.5.判断是否满足终止条件.若满足终止条件,则输出最优解;否则t=t+1,同时转步2.5数值实验5.1实验结果为了评估新算法(COEA/OED)的性能,我们选取文献[16-19]中采用的13个复杂的测试函数进行实验研究.函数g02属于高维多峰函数,主要用来考察算法的搜索能力.函数g03、g05、g11、g13主要考察算法的约束处理能力,其它几个函数主要用来考察算法的综合能力.实验中,种群规模n=100,λ=3,u=3,多父体正交交叉操作的概率p0=0.1,单形交叉操作的概率p1=0.8,扩张比ε=6,变异概率pm=0.1,适应度函数值评价次数为240000次.对等式约束优化问题,我们采用文献[9]中提出的新方法.该方法将等式约束条件h(狓)=0转化为不等式约束条件h(狓)-e<δ来处理,其中δ是一个很小的正常数,偏差值e随着种群代数的递增逐渐下降,其表达式如下:e(t+1)=e(t)/C,其中C为常数,t为进化代数.本文对所有等式约束优化问题取C=1.0165,e(0)=2.0,δ=1E-4.所有实验都在MATLAB2007中完成(需要MATLAB代码可与作者联系),对于每一个测试函数,在相同的条件下独立运行30次,记录其最好的结果(best)、中间结果(median)、平均结果(mean)和解的标准差(std.dev).表5列出了新算法COEA/OED对13个测试函数实验的结果.为了对比,我们将COEA/OED的运行结果与其它4个国内外较好的约束算法实验结果进行了比较.它们分别是文献[10]中的SAFF算法、文献[18]中的SMES算法、文献[19]中的RY算法、文献[20]中的AIRCES算法.表6列出了5种算法比较的结果,这些实验结果均来自相关算法的参考文献,NA表示原文中没有可获得的结果.Page6表5COEA/OED算法对13个标准测试函数独立运行30次的结果median-15.0001.00函数g01-15.000-15.000g02-0.803619-0.803619-0.791021-0.790908-0.7615327.9E-03g03g04-30665.539-30665.539-30665.539-30665.539-30665.5391.2E-11g055126.498g06-6961.814-6961.814-6961.814-6961.814-6961.8143.9E-11g0724.306g08g09680.630g107049.248g11g12-1.000g1324.306680.6300.75-1.000表65个算法(COEA/OED、SAFF[10]、SMES[18]、RY[19]和AIRCES[20])对Function/optimalstatusg01/-15.000g02/-0.803619g03/-1.000g04/-30665.539g05/5126.498g06/-6961.814g07/24.306g08/-0.095825g09/680.630g10/7049.248-15.000-15.000-15.0000.0E+00-0.80297-0.79010-0.760431.2E-02-1.000-1.000-1.0007.5E-05-30665.50-30665.20-30663.304.9E-015126.9895432.0806089.4303.9E+03-6961.800-6961.800-6961.8000.0E+0024.4826.5828.401.1E+00-0.095825-0.095825-0.0958250.0E+00680.64680.72680.875.9E-027061.347627.898288.793.7E+02运行结果Page7Function/optimalstatusg11/0.75g12/-1.000g13/0.05394980.7500.7500.7500.0E+00-1.000-1.000-1.0000.0E+00NANANANAFarmani和Wright[10]提出的SAFF算法实质是一种自适应惩罚函数法.SMES[18]算法使群体中违反约束程度最小的不可行解以一定的概率进入到下一代种群中,这对维持种群的多样性具有很重要的作用.Runarsson和Yao[19]提出的随机排序法是目前最经典的约束优化算法之一,它通过定义概率pf来协调目标函数和惩罚函数对个体适应度的影响,并采用冒泡排序的方法来实现选择操作.文献[20]提出了一种新的用于解决约束优化问题的人工免疫响应进化策略,表现出良好的收敛速度和求解精度.5.2实验结果分析及算法性能评价从表5可以看出,除g10外,新算法(COEA/OED)在其它的12个测试函数中达到了最优解.就寻优精度而言,从表6可以看出,对于高维多峰测试函数g02,只有COEA/OED算法找到了精确的最优解;同SAFF算法相比,COEA/OED算法在函数g02、g04、g05、g06、g07、g09、g10的最优结果、平均结果和最差结果方面明显优于SAFF算法,对于函数g01、g03、g08、g11、g12,COEA/OED算法取得了与SAFF算法相似的结果;同SMES算法相比,COEA/OED算法在函数g02、g05、g07、g09、g10、g13的最优结果、平均结果和最差结果方面均占优,对于函数g01、g03、g04、g06、g08、g11、g12,COEA/OED算法取得了与SMES算法相似的结果;同RY算法相比,COEA/OED算法在函数g02、g07、g10的最优结果、平均结果和最差结果方面优于RY算法,对于函数g01、g03、g04、g06、g08、g11、g12,COEA/OED算法取得了与RY算法相似的结果;同AIRCES算法相比,COEA/OED算法在函数g02的最优结果、平均结果和最差结果方面均优于AIRCES算法,对于函数g06、g09,COEA/OED和AIRCES算法都同时找到了最优解,但COEA/OED算法得到平均结果和最差结果方面优于AIRCES算法,对函数g01、g03、g04、g08、g11、g12、g13,COEA/OED和AIRCES算法得到了相似的结果.此外,就计算代价而言,对同一测试问题,SAFF算法所需适应值函数评价次数为1400000次,RY、AIRCES算法需评价350000次,而COEA/OED和SMES算法只需要评价240000次.从以上比较研究可以看出,无论是在寻优精度还是在计算代价上,COEA/OED算法整体优于其它4种算法,表现了良好的寻优性能.6结论全局搜索能力和约束处理技术是利用进化算法求解约束优化问题最为关键的两个问题.针对这些问题,本文提出了一种新的基于正交实验设计的约束优化进化算法.新算法具有以下优点:(1)利用正交实验设计方法设计了一种新的多父体正交交叉算子,新的交叉算子能够有效利用多个父代个体所携带的信息产生新的具有代表性的子代个体,以更好地搜索解空间和维持种群的多样性,使种群在进化的过程中尽可能收敛到最优解.(2)针对群体进化过程中所处不同阶段的特点,利用不同的比较个体优、劣的准则来指导选择操作,使群体逐步地向可行的最优解逼近.(3)通过对13个测试函数的优化结果表明,针对不同类型的约束优化问题,新算法参数比较固定,不需要针对不同的优化问题来过多地调整实验参数,有利于算法的推广和应用.对该算法进行完善和推广是本文的进一步工作.Page8
