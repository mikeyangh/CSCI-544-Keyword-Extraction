Page1无线传感器网络中可容错的事件监测算法任倩倩1),2)李建中2)程思瑶2)1)(黑龙江大学计算机科学技术学院哈尔滨150080)2)(哈尔滨工业大学计算机科学与技术学院哈尔滨150001)摘要事件监测是传感器网络研究中的一个重要问题,传感器网络自身的局限性以及感知数据的非确定性向事件监测技术提出了挑战.文中分析了传感器网络中存在的各种非确定性,引入可容错的事件监测机制.文中首先提出可容错的事件发现和参与事件监测节点选择算法.在此基础上,提出可容错的事件发生区域估算算法.算法对于动态传感器网络具有较好监测效果.最后通过大量模拟实验验证了所提出算法的性能.关键词无线传感器网络;事件监测;可容错;非确定性;物联网1引言无线传感器网络由大量传感器节点组成,具备感知能力、数据处理能力和无线通信能力.这些节点布置在给定监测区域内用以感知所关注的事件,例如泥石流滑坡、森林火灾和有毒化学物质泄漏检测(1)当所关注事件在传感器网络的监测区域内Page2发生时,处于感知范围内的所有传感器节点会产生对事件的感知数据.这导致大量数据的拥塞和冗余,在节点密集的传感器网络中[7-8]尤其如此.(2)单一的传感器节点无法对所关注事件准确定位,因此需要网络内节点协作感知,并将感知数据发送到指定网内节点或Sink节点做进一步处理.(3)所关注事件通常发生在一定地理区域内,因此,如果要监测这些事件只需处于事件发生区域周围的传感器节点参与事件监测即可,其它节点可以睡眠以节约网络能耗.传统的事件监测算法采用集中式方法,网络中的传感器节点实时地将对目标事件感知的数据发送到Sink节点,Sink节点根据传感器节点的位置信息和所采集的感知数据即可以确定事件的覆盖区域.由于Sink节点具有较强的计算能力,因此集中式方法对于算法复杂度要求不高.然而随着网络规模的扩大,传感器节点向Sink节点报告数据的通信量增加,这将耗费大量通信资源,导致网络寿命降低.另外,收集所有节点数据后发送到Sink节点需要较长的时间,导致不可忽略的事件监测延迟[8].因此,提出一种轻量级分布式事件监测算法非常必要.这其中面临许多挑战.首先,传感器网络中节点多采用电池供电,节点能量有限.而且传感器网络大都布置在危险或不可达的区域,节点电池充电或更换困难.对于一个长期连续事件网监测应用,如果要求网络中所有节点实时收集对事件的感知数据并报告给Sink节点将大量耗费节点有限的能量.考虑到事件监测的实际情况,只要处于事件周围的部分传感器节点参与监测,反馈感知信息,即可以估算出事件位置区域.其次,传感器网络的监测环境通常存在各种干扰,传感器节点感知部件精度有限,传感器节点容易失效,这导致传感器节点产生的感知数据具有很高的不确定性[9-10].尤其当节点电量将要耗尽时,产生错误数据的概率会增加[11].在不准确或错误的数据上无法准确监测事件[12],因此事件监测算法必须具有容错性,即要保证环境干扰以及单个节点的异常行为不影响整个监测系统的性能.因此,如何过滤错误数据,在可靠的感知数据上进行事件位置估算是事件监测的一个关键问题.有鉴于此,本文提出无线传感器网络中可容错的事件监测算法.我们首先分析感知数据存在的非确定性,提出可容错的事件发现算法,综合事件周围传感器节点的决策,确定事件发生的可能性.其次,本文提出监测节点选择算法,该算法综合传感器节点与事件的位置信息和节点剩余能量,在给定事件监测质量需求的情况下,选择剩余能量大并且处于事件边缘的节点参与监测任务.最后,本文提出可容错的事件定位方法,通过为处于事件边缘的监测节点建立凸壳估算事件发生区域.本文贡献总结如下:(1)将网络中动态簇结构与节点调度策略相结合,为事件发生区域内节点建立簇,使事件发生区域以外的节点处于睡眠状态,以降低网络能耗.(2)分析了传感器网络中感知数据存在的非确定性,提出了可容错的事件发现算法.该算法综合考虑各传感器节点对事件发生所做决策,确定事件发生的可能性.为节点建立凸壳确定事件发生区域.(3)提出参与事件监测节点选择策略,并通过(4)通过大量模拟实验验证了所提出算法的正确性和有效性.本文第2节介绍相关工作;第3节描述所提出算法采用的系统模型,包括网络模型和能量模型;第4节详细描述所提出的可容错事件监测算法;第5节评估所提出算法的性能效果;第6节总结全文.2相关工作近年来无线传感器网络中事件监测和跟踪技术得到了广泛关注,目前已经有一些能源有效的事件监测方法.文献[13-14]提出基于二位传感器模型的监测跟踪方法,该方法可以有效减少网络通信量.然而,二位传感器模型对网络的可靠性要求较高,网络中感知数据的不确定性会影响跟踪效果.文献[15]提出一种分布式跟踪监测方法,该方法利用动态传送树结构实现节点间协作跟踪.文献[16]提出利用信息驱动方法确定参与工作的节点,以降低网络内的通信量和节点资源耗费.文献[6]研究无线传感器网络中稀疏事件监测技术.考虑到传感器网络布置节点数目和网络能耗的局限性,该文献采用压缩传感器技术以减少工作节点个数,并引入概率贝叶斯机制在保证监测概率的同时降低采样率.文献[12]提出分布式事件监测方法,该方法传感器网络内节点.网格内簇头节点负责收集网格内节点产生的感知数据以及来自邻近簇的数据均值.网格内数据均值以矩阵形式组织,通过矩阵匹配判断事件是否被检测到.文献[8]设计一个Page3基于无线传感器网络的分布式事件监测系统,该系统经过训练后可以识别不同类型事件.通过使检测到事件的传感器节点报告数据,达到最小化网络通信代价的目的.上述方法充分考虑到网络内能源节省的重要性,通过分布式计算或减少工作节点数目以降低网络内通信量.然而对网络内感知数据由于感知部件精度和环境干扰等导致的数据误差和错误数据未考虑在内.文献[4]提出了基于高斯混合模型的事件边缘监测算法.基于邻居节点感知数据的相关性,该算法采用模型选择技术将网络内节点划分为事件边缘节点和非边缘节点两类.文献[17]提出一种基于贝叶斯理论的失效节点检测算法.该算法通过使邻居节点间交换数据以确定事件的统计概率.文献[18]研究传感器网络内事件周围失效节点的识别和监测问题,提出局部失效节点识别和可容错的事件边缘监测算法,算法的局部特性使其不受到网络规模的影响.上述方法利用感知数据时间或空间上的相关性,找到存在错误数据的节点,从而达到可容错的目的.然而这类方法需要节点之间频繁交换信息,这将消耗大量的能量.本文所提出方法,通过量化节点提供错误数据的可能性,尽量选择提供数据可靠性高的节点参与事件监测,在保证事件监测质量的同时,平衡网络内节点的能耗,延长整个网络的生存期.3模型定义本节将给出网络模型和能量模型的定义.本节将介绍文中所提出的算法所采用的网络模3.1网络模型型.为方便起见,我们作如下假设:(1)整个传感器网络由n个同类传感器节点组成,节点集合表示为V={v1,v2,…,vn}.网络模型化为图G={V,B},其中B为任意两个节点的边集合.如节点vi和vj可以通信,则有bij∈B.(2)网络内所有节点可以利用GPS或其它定位技术计算出自己的位置坐标[19].用(xi,yi)表示节点vi的坐标.(3)网络内节点的感知范围相同,为半径R的圆形区域.节点的通信范围与节点的感知范围相同,或者可以调整节点的通信范围为节点感知范围的整数倍.整个网络划分为多个簇,每个簇内包含一个簇头节点和多个簇内成员节点.参与事件监测的簇称为工作簇.当关注事件发生后,位于事件周围的传感器节点产生感知数据,根据感知数据作出关于事件是否发生的决策.簇内节点向簇头节点报告所作决策以及节点剩余能量信息.簇头节点统计事件发生的可能性,并综合簇内节点的能量信息,选择部分簇内节点参与监测任务,被选中的节点称为参考节点.簇头节点将选定的参考节点信息向距离Sink节点较近的工作簇报告,由距离Sink节点最近的工作簇综合所有工作簇的数据对事件进行定位.由于事件只发生在网络的一个局部区域内,同一时刻工作簇的数目有限,因此工作簇之间交换信息不会给网络造成过重的通信负担.为了节约网络能量消耗,本文提出的事件监测算法可与能源管理协议相结合.现有的能源管理协议大都可以应用到我们的算法中,例如采用文献[3]提出的节点调度协议使位于事件所在区域外的节点处于睡眠状态.节点的感知覆盖能力保证事件所发生区域内至少有一个节点处于工作状态,该节点成为簇头节点唤醒其它节点构建工作簇.3.2能量模型假设传感器网络中所有节点的初始能量值相同,记为E.在事件监测的过程中,节点的能量消耗主要由以下几方面组成:(1)向其它节点发送数据,(2)接收来自其它节点的数据,(3)采集感知数据,(4)处理簇内节点数据.由于节点处理数据消耗的能量远小于通信和采样的能耗,簇内节点执行简单操作的能耗可以忽略不计.假设发送和接收数据包消耗能量的大小与传感器节点间距离无关,采样感知数据消耗的能量与节点和事件间距离无关.假设节点发送一个数据包消耗的能量为Esend,接收一个数据包消耗的能量为Erec,采样感知数据一次消耗的能量为Esample,处理簇内节点感知数据消耗的能量为Eproc,则每个工作周期,簇内节点vi的能耗可以表示为其中,α和β分别表示节点vi发送和接收数据的次数.簇头节点vj的能耗可以表示为用Ei节点工作周期数,则有Page44可容错的事件监测算法当目标事件在传感器网络的监测区域内发生时,感知数据中存在的误差使得我们不能够保证所有节点都能够提供准确有用的信息.亦即,有些节点的感知数据由于误差较高无法用于事件监测,有些节点提供的信息具有冗余性.本节提出可容错的事件监测算法,目标是尽量选择提供数据可靠的节点参与事件位置估算.同时考虑到网络能源有效的需求,选择剩余能量较高的节点作为参考节点可以更有效地延长网络寿命.我们提出的可容错事件监测算法包含3个子算法,事件发现算法、参考节点集合选择算法和事件定位算法.表1显示了文中所用符号及其含义.符号V传感器网络内节点集合V={v1,v2,…,vn}C传感器网络内参考节点集合C={v1,v2,…,vm}CV最近顶点集合CV={cv1,cv2,…,cvm}di节点vi对事件所作决策pi节点vi发出错误警报的概率4.1事件发现算法传感器网络监测区域内发生目标,部分节点能够检测到事件,这说明事件位于这些节点的感知范围内.假设传感器节点vi产生的感知数据为si,1in.给定感知数据阈值T,当传感器节点的感知数据大于T时,该节点认为事件发生.用“1”表示节点vi做出“检测到事件发生”的决策,而“0”表示节点vi做出“未检测到事件发生”的决策.由于网络内的节点独立做出决策,因此可以量化每个传感器节点的决策di为用假说H1表示关注事件处于节点的感知范围内,用假说H0表示事件未在节点的感知范围内发生.簇内节点收集对事件的感知数据,并作出事件是否发生的决策.然后,节点将所作决策向簇头节点发送.用D={d1,d2,…,dk}表示工作簇内节点所作决策集合,其中D1k1={d1,d2,…,dk1}为支持H1假说的决策集合,D0k0={d1,d2,…,dk0}为支持H0假说的决策集合.簇头节点接收到来自簇内节点的决策后,采用似然检验方法,验证事件发生的可能性.似然比表示为[7]Λ(D)=P(D1如果Λ(D)P(H0)/P(H1),我们可以得出事件在该簇的感知范围内发生的结论.此时,簇头节点从支持H1假说的节点中选择处于事件边缘节点作为参考节点.然而,由于感知部件精度和环境因素影响,感知数据中可能存在误差,传感器节点可能发出错误警报.当事件未在节点vi的感知范围内发生时,节点vi做出di=1的决策,或者事件已经在节点vi的感知范围内发生时,节点vi却做出di=0的决策.假设节点vi所采集的感知数据中存在误差为εi,εi服从期望为0、方差为σ的高斯分布,即εi~(0,σ2),其中参数σ可以通过训练感知数据获得.因此定义节点vi发出错误警报的概率pi为[7]其中,Q(x)为高斯Q函数,服从标准正态分布.簇头节点在选择参考节点时,从发出错误警报的概率小于给定阈值pT的簇内节点中选择.这样可以有效降低感知数据的不确定性对事件监测质量的影响.4.2基于贪心启发式的参考节点选择算法本文提出基于贪心启发式的参考节点选择算法(Greedy-Choice).算法首先将所有支持H1假说的节点着红色,支持H0假说的节点着蓝色.对于任意红色节点vi,用ri邻居节点总数中所占比率.如果ri于事件边缘,将节点加入候选参考节点集合C.ri值越大,表明该节点越接近事件.确定候选参考节点集合C后,每次从C中增量地选择参考节点.为了采用贪心策略,我们定义一个收益函数g,用Ei况.Greedy-Choice每次选择使收益函数g最大化的节点,亦即尽量选择剩余能量大,发出错误警报可能性低并且距离事件较近的节点作为参考节点.给定支持假说H1的节点集合,假定C是已经选择的参考节点集合,节点vi的收益函数g(vi)定义如下:根据式(6)定义的贪心规则,本文设计了一个基于贪心启发式的算法Greedy-Choice,如算法1所示.初始化时,确定候选参考节点集合C,同时置空结果集C.接下来,算法选择当前最优的节点vi放入C中.此后,算法进入一个循环过程,每次从剩余节点集合C-C中选择一个使收益函数g最大化的节点vi,并将其放入结果集合C中.当C中节点个数Page5满足事件定位算法要求的最小节点个数要求①,或者C-C中节点发出错误警报概率值大于pT,退出循环,算法结束.算法1.Greedy-Choice参考节点选择算法.输入:候选参考节点集合C={v1,v2,…,v|C|}输出:参考节点集合C1.将C置空;2.从C中选择一个节点vi加入C使g(vi)最大化;3.C={vi};4.while(C内节点数目<事件位置估算的最小节点数5.从C-C中选择节点vi使得g(vi)最大化6.endwhile7.returnC.上述算法中,计算g(vi)需要时间O(1),因此整个算法的时间复杂度为O(k),其中k为簇内节点的个数均值.4.3事件定位算法由于选定的参考节点处于事件边缘,因此参考节点所包围的区域必然包含事件发生区域.在参考节点可以形成的各种几何区域中,凸壳是包含平面点集的最小凸区域,因此参考节点的凸壳是包含事件发生区域的最小凸区域.本文提出为参考节点建立凸壳的方法来描述事件发生区域,简称为H-ES算法.H-ES算法采用经典的Graham扫描方法求参考节点的凸壳[20].H-ES算法分两个步骤:参考节点排序和参考节点扫描.参考节点排序阶段按照节点的x坐标值递增排序,若节点的x坐标值相同,再按照节点y坐标值递增排序,得到有序的参考节点集合,用SC表示.参考节点扫描阶段从SC内第一个节点开始,每次选择一个节点加入,得到凸壳新边.图1为H-ES算法描述事件发生区域的实例.假设参考节点个数为m,则节点排序阶段的时间复杂度为O(mlogm),节点扫描阶段的时间复杂度图1H-ES算法示意图(其中,虚线所围成区域为事件发O(m),因此整个算法的时间复杂度为O(mlogm).4.4考虑节点移动的事件定位算法在许多实际应用中,布置在监测区域内的传感器节点移动会导致,这节点位置周期性变化.例如,在水域安全监测中,传感器节点通常布置在河流上以监测和跟踪入侵者[19].节点会随着水流浮动,因此需要周期性更新节点位置.然而由于测量设备和节点定位算法存在误差,传感器节点的位置坐标不能准确反映节点的真实位置.亦或由于节点位置信息更新存在延迟,簇头节点不能实时获得传感器节点的准确位置.根据节点的移动属性,我们为每个传感器节点定义一个安全区域,在固定的时间间隔内,传感器节点处于其安全区域内.本文用一个矩形区域描述传感器的安全区域,矩形边长由节点的运动速度决定.其它形状图形(例如:圆盘)也可以描述节点的安全区域,本文采用矩形区域以便于事件定位算法的描述.节点vi的安全区域用Reci表示.在此基础上,本文对H-ES算法进行改进,提出可容错的事件估算算法,简称为FH-ES算法.该算法用节点安全区域的凸壳描述事件发生区域.FH-ES算法由两部分构成:首先确定事件发生区域与节点安全区域的位置关系,找到距离事件发生区域最近的安全区域顶点;然后为节点安全区域建立凸壳.定义1.最近顶点.给定节点vi及其安全区域Reci,最近顶点cvi定义为Reci的4个顶点中距离事件发生区域最近的顶点.4.4.1确定最近顶点从集合C中第一个节点v1开始确定最近顶点.具体过程为v1向邻开居节点广播决策H1,邻居节点接收到v1的广播后,向该节点反馈自己的决策.节点v1根据收集的决策内容将邻居节点划分为两个子集合:支持假说H1的节点集合和支持假说H0的节点集合.接下来,计算支持假说H1的节点发出错误警报的概率,如果概率值大于pT,则认为该节点支持假说H0.经过Rec1中心节点建立两条相互垂直的直线l1和l2.l1和l2将v1的感知区域划分为4个子区域A1,A2,A3和A4,如图2所示.用r11,r12,r13和r14分别表示每个子区域内落入支持假说H1节点数目与v1周围支持假说H1的邻居节点总数目的比值.假设集合{r11,r12,r13,r14}为按照数值降序排列的①事件定位算法要求的最小节点个数由算法决定,或者根据Page6结果,根据4个比值取值情况的不同,确定最近顶点需要考虑以下两种情况:(1)如果r11≠r12,则区域A1为距离事件发生区域(虚线所围)最近的子区域,此时位于子区域A1内的顶点为距离事件最近的顶点,如图2(a)所示,r11=5/11,r12=4/11,r13=2/11,r14=0.(2)如果r1=r2并且r2≠r3,则区域A1和A2都为距离事件发生区域(虚线所围)最近的子区域,此时位于子区域A1和A2内的顶点与事件的距离认为相同,任选其一为最近顶点,如图2(b)所示.r11=r12=5/11,r13=1/11,r14=0.按照同样的方式,为集合C内其它节点确定最近顶点,得到最近顶点集合CV={cv1,cv2,…,cvm}.4.4.2建立节点安全区域凸壳确定最近顶点集合CV后,调用H-ES算法建立CV内顶点的凸壳,得到事件发生区域.图3显示了FH-ES算法估算事件发生区域的一个实例.算法2给出FH-ES算法的详细过程.图3FH-ES算法示意图(虚线表示事件发生事件算法2.FH-ES算法.输入:集合CV={cv1,cv2,…,cvm}输出:事件的发生区域Q1.foriin1tom2.建立两条经过Reci中心且与Reci边长分别垂直的3.计算r11,r12,r13和r14;4.确定cvi加入CV;5.endfor6.Q=H-ES(CV);7.returnQ.算法2中,执行语句1~5需要时间O(m),执行语句6需要时间O(mlogm),因此整个算法的时间复杂度为O(mlogm).5实验结果及分析本节通过模拟实验对文中所提算法进行分析,实验中传感器节点均匀分布在800×800单位区域内,传感器节点的位置已知.设置所有传感器节点的感知范围相同,初始能量相同.模拟实验研究所提出算法对事件监测的准确性以及网络规模对事件定位结果的影响.用事件的中心表示事件所在位置.5.1节点静止情况下监测结果模拟实验首先研究了所提出两种事件估算算法的准确性.图4(a)、(b)、(c)和(d)分别显示了网络内节点位置不变的情况下,H-ES算法跟踪事件中心的轨迹.实验中,节点感知半径R=30单位,网络内节点数目分别为1200,1600,2500和3600.图中,两条曲线分别表示事件中心的真实移动轨迹和H-ES算法估算事件中心的移动轨迹结果.X轴和Y轴分别表示事件在二维坐标系下的位置坐标.从图中发现H-ES算法可以较好地对事件定位.网络规模=1200时,H-ES算法估算事件移动轨迹结果与事件真实运动轨迹有几处偏离.当网络规模大于Page71600时,H-ES算法的跟踪效果几乎不受到网络内节点数目变化的影响.在网络规模为=1600,2500和3600时,估算结果与事件的真实移动轨迹各有两处较明显偏离.图5(a)、(b)、(c)和(d)分别显示了网络内节点位置不变的情况下,H-ES算法估算事件发生区域半径的结果.图中,两条曲线分别表示事件实际发生区域半径值和H-ES算法估算事件发生区域的半径图45.2节点移动情况下监测结果图6(a)、(b)、(c)和(d)分别显示了网络节点移图5值.实验中假设事件的发生区域为圆盘区域,H-ES算法计算事件发生区域半径值为凸壳上各顶点至事件中心位置的距离均值.从图中可以看出,随着网络规模增加,估算的事件发生区域半径值趋于实际值.事件发生区域的实际半径值在数值30上下波动.当网络规模=1200时,真实半径值与H-ES算法计算结果的最大差值为10.4.当网络规模=3600时,二者差值降低至7.5.动的情况下,FH-ES算法跟踪事件中心运动轨迹的结果.实验中,节点感知半径R=30单位,节点安全区Page8域边长设置为14单位,网络内节点数目分别为1200,1600,2500和3600.图中,两条曲线分别表示事件的真实移动轨迹和FH-ES算法估算事件运动轨迹的结果.随着网络规模增加,FH-ES算法的效果略微有所提高.当网络规模大于1200时,参考节点的最近顶点足以生成包含事件发生区域的凸壳,此时节点数目的增加对估算事件运动轨迹的结果没有明显影响.图7(a)、(b)、(c)和(d)分别显示了网络内节点移动的情况下,FH-ES算法计算事件发生区域半径的结果.实验中,节点感知半径R=30单位,网络内图6图7节点数目分别为1200,1600,2500和3600.图中,两条曲线分别表示事件实际发生区域半径值和FH-ES算法计算事件发生区域半径值.半径值的计算方法与图5相同.网络规模为1200和1600时,FH-ES算法的实验结果相似,此时真实半径值与FH-ES算法计算结果的最大差值为10.9.网络规模为2500和3600时,FH-ES算法的性能有所提高,此时二者的最大半径差值为9.1.从实验结果可以看出,FH-ES算法可以克服由于节点移动或定位误差所引入的非确定性,有效地实现事件监测.Page9上述几组实验结果说明,当网络规模足够大时,网络规模增加对提高事件中心定位结果的准确性没有显著影响.但是随着网络内节点数目增加,估算事件发生区域半径值与真实事件发生区域半径值的差距明显缩小.这是由于网络规模增加使得网络内节点间距降低,因此选择的参考节点距离事件发生区域更接近,此时估算结果更接近于真实事件的发生区域.6结论本文提出一种可容错的事件监测算法.考虑到无线传感器网络中存在的各种非确定性,例如感知数据存在误差和节点移动导致节点位置不确定等,提出相关容错机制以降低非确定性对事件监测质量的影响.最后,通过模拟实验验证了所提出H-ES算法和FH-ES算法的正确性和有效性.本文下一步将进一步研究由传感器节点感知区域不规则所引入的非确定性对事件监测的影响.
