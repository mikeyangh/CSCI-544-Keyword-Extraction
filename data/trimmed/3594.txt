Page1基于联盟构造博弈的认知无线电网络分布式多目标协作感知算法杨威1)班冬松2)管东林1)叶锡庆1)窦文华3)1)(海军装备研究院北京100036)2)(国家高性能集成电路(上海)设计中心上海201204)3)(国防科学技术大学计算机学院长沙410073)摘要协作感知技术可提高认知无线电网络中的频谱资源利用率,但网络节点在形成协作感知联盟的同时也不可避免地引入了额外开销,联盟内节点总希望用较少的额外能量开销达到较大的吞吐量期望.为此,文中提出了协作感知系统的多目标非线性优化问题,然后基于联盟博弈理论为该问题构建了一个不可转移支付的联盟构造博弈模型,在其核心的支付函数的设计中,采用线性加权和的方法同时考虑了节点吞吐量期望和能量消耗两个优化目标.基于该函数,提出了一种分布式多目标联盟构造算法DMCF,其核心是根据优超算子所定义的联盟的帕累托顺序,循环地对联盟进行合并和分裂操作.此外,还证明了DMCF的收敛性和最终联盟划分的稳定性.仿真实验的结果表明,DMCF可有效解决提出的多目标优化问题,与一种分布式随机联盟构造算法DRCF相比,DMCF总能使节点消耗较少能量却达到相对较大的吞吐量期望.在不同网络规模下,DMCF可获得的节点平均吞吐量期望可提升约7.5%,而节点平均能量消耗却可降低约70%.关键词认知无线电网络;协作感知;多目标优化;联盟构造博弈;分布式算法1引言认知无线电(CognitiveRadio,CR)最早由MitolaIII在他的博士论文中提出[1],网络中的非授权的次级用户(SecondaryUser,SU)利用CR技术可以感知频谱空洞(spectrumhole)并采用动态频谱接入的方式使用原来只有授权的主用户(PrimaryUser,PU)才能使用的频谱资源,从而能提高频谱资源利用率,缓解网络频谱资源短缺的问题.CR的提出激发了人们对认知无线电网络(CognitiveRadioNetworks,CRN)大量的研究工作.其中,协作感知技术是当前研究热点之一.当PU不使用某段连续频谱(或某些子通道)时,SU通过能量检测可判断通道的可用性并接入通道完成自身的通信需求.而协作感知技术指的是在衰落环境下,网络中的一些SU结成联盟(coalition),利用分布式能量检测和信息融合等技术对可用通道进行协作感知,以提高当通道不被PU使用时被正确检测为可用的概率,即通道的正确检测概率(Probabilityofrightdetection,Pd)①,从而提高次级系统的吞吐量.一般的说,随着联盟中SU数量的增加,Pd逐渐增大,但每次协作感知过程也不可避免地带来了额外开销,主要有两方面:(1)由于仅采用一个公共控制信道(CommonControlChannel,CCC),每个SU需依次通过CCC将自身的感知结果传输给融合中心(FusionCenter,FC)(FC可以是联盟中某个SU或其它单独的处理节点),因此,在FC计算出最终的结果前,引入了额外的传输延迟.(2)同时,每个SU向FC传输感知结果时需消耗额外的能量.若系统时间被划分为长度均等的时间槽,在每个时间槽内,若联盟内SU数量很多,传输延迟将会很大,剩余的留给每个SU进行通信的时间则相应减少,次级系统吞吐量期望将会降低,因此,在吞吐量期望和联盟内SU数量之间存在天然的平衡(tradeoff)关系.另外,随着SU数量增多,联盟规模增大,每个SU到FC的距离增加,额外的通信开销会逐渐增大,所以在SU数量和额外能量开销之间也存在平衡关系.考虑到以上两种平衡关系,形成一个包含网络中所有SU节点的大联盟(grandcoalition)也许并不是最优的联盟构造方案.因此,需设计分布式算法指导联盟的构造.具体地说,联盟构造的最终目标是将网络中的SU划分成协作感知联盟并优化每个联盟信息融合的拓扑结构,一方面希望减少每个联盟的额外传输延迟,进而提高每个SU的吞吐量期望,另一方面,考虑到若SU的通信需求较小,则希望降低每个SU额外的能量开销;同时,联盟构造还应考虑为避免对PU通信产生干扰,在每个联盟内部,使通道被PU占用时被错误检测为可用的概率,即通道的错误接入概率(Probabilityoffalseaccess,Pf)①小于给定阈值.针对上述需求,本文首先提出了协作感知系统的多目标非线性优化问题,然后基于联盟博弈理论为该问题构建了一个不可转移支付的联盟构造博弈模型,在关键的支付函数的设计中,采用“线性加权和”方法综合考虑了节点吞吐量期望和能量消耗两个优化目标,同时还考虑了每个联盟内错误接入概率需小于给定阈值的约束.随后基于支付函数,提出一种分布式多目标联盟构造算法DMCF,该算法的核心是根据“优超算子”所定义的联盟的帕累托(Pareto)顺序,循环地对联盟进行合并和分裂操作.此外,我们还证明了DMCF的收敛性和最后划分的稳定性.仿真实验的结果表明DMCF可有效解决提出的多目标优化问题,表现为与另一种分布式随机联盟构造算法DRCF相比,DMCF总能使节点消耗较少能量却达到相对较大的吞吐量期望.在不同网络规模下,DMCF可获得的节点平均吞吐量期望可提升约7.5%,而节点平均能量消耗却降低约70%.本文第2节介绍相关工作;第3节提出协作感知系统的多目标优化问题;第4节为该问题构建联盟构造博弈模型;第5节详述分布式多目标联盟构造算法DMCF,讨论了其收敛性和计算复杂性;第6节对算法进行性能评价;第7节总结全文.①在本文中,特定义通道的正确检测概率Pd和错误接入概率Page32相关工作作为合作博弈理论的一个重要分支,联盟博弈理论指导网络中的参与者(博弈论中称局中人)如何形成联盟,以使每个局中人能获得更大收益(支付).Saad等人将联盟博弈分为标准联盟博弈、联盟构造博弈和联盟图博弈3种[2].(1)在标准联盟博弈中,形成联盟不引入额外开销,因此更关注在形成大联盟后联盟的稳定性问题和局中人的收益是否公平的问题.(2)而联盟构造博弈则更适用于描述真实的网络应用,即形成联盟会不可避免地引入额外开销.因此,形成大联盟的可能性很小.联盟构造博弈指导局中人如何构造联盟,如何评估最终形成的联盟划分的稳定性.(3)在联盟图博弈中,在联盟构造博弈的基础上,还需考虑每个联盟内的局中人的相互关系对联盟构造的影响.在3种联盟博弈中,联盟构造博弈在CRN中的应用较多,包括用于解决CRN中的分布式协作感知问题[3-4]、考虑负载均衡的分布式频谱资源分配问题[5]和多PU、多SU之间频谱接入与协作传输问题[6-7].其中Saad等人[3-4]考虑了多SU对单一的通道进行协作感知的问题,并将其建模为一个不可转移支付(Non-TransferableUtility,NTU)的联盟构造博弈模型(N,v),其中N为网络中的SU数目,v为支付函数.在该模型中,联盟的支付值与联盟内每个SU获得的支付值相同.每个联盟S的支付函数定义为v(S)=Qd,S-C(Qf,S),Qd,S和Qf,S分别是检测概率和虚警概率,开销函数C(Qf,S)则定义为一个对数罚函数[8]:C(Qf,S)=-α2·log1-Qf,S()α(随着联盟内SU数量的增加,Qd,S和Qf,S都逐渐增大,由罚函数得,当Qf,S接近阈值α时,C(Qf,S)的值显著增加.因此,在增大Qd,S与减少C(Qf,S)之间存在着矛盾关系.利用这种关系,他们提出了一种基于合并(merge)和分裂(split)操作的分布式联盟构造算法.联盟之间是否进行这两种操作取决于联盟的Pareto顺序:若两联盟组合形成新联盟后,新联盟中的每个SU的支付值都比原联盟中的支付值高,则进行合并操作;同理,若一个联盟拆分形成两个新联盟后,若每个SU的支付值都获得提升,则进行分裂操作.通过循环地进行这两种操作,最终达到一种稳定状态.注意到,该文献将虚警概率描述为联盟的开销,而并未考虑形成联盟带来的实际额外开销,即每个SU传输检测结果所带来的传输延迟和额外能量开销.除了在协作感知系统中采用联盟博弈,Wang等人[9]基于进化博弈理论对感知系统建立模型并考虑了传输延迟开销.考虑到每个SU若参与协作感知,会消耗额外的传输时间将感知结果传给融合中心,导致其吞吐率期望降低,因此每个SU有一定自私性,总想“不劳而获”.与文献[3]中的假设不同,Wang等人假设某些SU可监听其它SU进行协作感知的结果,并利用这些结果.在该模型中,每个SU可从其行动集合{C,D}中选择行动方式,C表明SU愿参与协作,而D表明SU拒绝参与协作.一方面,SU可通过参与协作,虽耗掉一部分传输时间,但可获得一个稳定吞吐量期望;另一方面,SU可自私地不参与协作,将节省的时间用于自身通信,以提高其吞吐量期望,但也存在其它SU不参与协作,最终获得的吞吐量期望为零的风险.该文献提出了一种基于复制动力学的分布式算法来指导SU是否参与协作.给定参与协作的SU数量、信息融合方式、感知时间、正确检测概率和错误接入概率,可分别计算出两种行动下获得的吞吐量期望.设节点SUj在t时刻选择行动h∈{C,D}的概率为xh,SUj,关于该概率的重复动力学方程为与以上研究不同,本文基于联盟构造博弈对多目标协作感知系统建立模型.联盟构造的最终目标是将网络中的SU划分成协作感知联盟并优化每个联盟的信息融合的拓扑结构,一方面希望减少每个联盟的额外传输延迟,进而提高每个SU的吞吐量期望,另一方面,考虑到SU自身的通信需求不大时,希望降低每个SU额外的能量开销,据知,到目前为止,还没有其它研究涉及此问题.h,SUj=[珡USUj(h,x-SUj)-珡USUj(x)]xh,SUj,x·其中,珡USUj(h,x-SUj)是SUj选择纯策略h的平均支付值,x-SUj是其它SU的行动策略的集合,珡USUj(x)是SUj选择混合策略xSUj得到的平均支付值,则h,SUj/xh,SUj与选择纯策略h和选择混合策略xSUjx·所获得的支付值差值成比例.因此,若SUj选择h所获得的支付值大,选择行动h的概率就大.通过不断更新选择各行动的概率,系统最终达到一个稳定状态.注意到,该文献考虑了额外的传输延迟,但并未将能量开销考虑在内.Page43系统模型与问题定义3.1系统模型考虑一个包含N个SU节点和一个PU节点组成的认知无线电网络,SU节点集合表示为={1,2,…,N}.我们采用文献[10-11]中的假设,设PU占用的连续频谱可被划分为N个带宽均等且正交的子通道,当PU空闲时,这些子通道可被SU采用能量检测的方式感知并使用,用于满足SU传输需求.设网络中的N个SU节点被划分为若干联盟,在每个联盟内部采用协作感知的方式检测可用通道.如图1所示,设网络内所有节点的时间精确同步,系统时间被划分为长度均等的时间槽,在每个时间槽T内,在任一联盟S内,T被划分为感知阶段、感知信息交换阶段和传输阶段.其中,在感知阶段中,设每个SU都具有相同的采样频率,因此具有相同的感知时间τs;在感知信息交换阶段中,每个SU依次利用公共控制信道CCC向联盟S内的融合中心FC(S)传输感知结果,融合中心计算出最终结果后,再通过CCC广播给S的每个SU.设预留给S内的节点(包括融合中心)的信息交换时间都为τc,则信息交换阶段的时间为|S|τc.需说明的是,在这里,令融合中心采用OR策略,计算复杂度较低,因此忽略了融合中心计算时间;在传输阶段中,若PU空闲,SU若有通信需求,则利用指定的子通道进行通信,每个SU传输阶段的时间都为T-τs-|S|τc.下面先给出单个SU节点的感知模型,然后分别给出多SU节点形成协作感知联盟后获得的吞吐量期望和能量开销.图1每个时间槽T的划分方式(包括感知阶段、(1)单SU节点感知模型任取网络中的节点SUi(1iN),若它单独对可用通道进行检测,则根据假设检验原理,它得到的通道的正确检测概率Pdi和错误接入概率Pfi可依如下公式计算得到[12]:其中Pdi=Pr{Yi<λi|H0}=1-Pr{Yi>λi|H0}Pfi=Pr{Yi<λi|H1}=1-Pr{Yi>λi|H1}H0表示假设通道未被PU占用,H1表示假设通道被PU占用,Pr{H0}为PU不工作的概率;Yi为进行u次采样累积得到的检测值,λi为检测阈值,函数Q(·)为标准正态分布的尾概率函数,即Q(x)=2槡()π∫1过γi=Ps|hi|2hi为PU到SUi的通道增益,σ2n为加性高斯白噪声信号的方差(设在所有节点处相同).(2)SU节点在协作感知联盟中获得的吞吐量若SUi加入某一联盟S,则当Yi<λi时,SUi认为通道可用,向融合中心FC(S)发送标识“1”,否则认为通道不可用,向FC(S)发送标识“0”.而在FC(S)处采用OR融合方式,因此FC(S)最终获得的通道的正确检测概率Pd(S)和错误接入概率Pf(S)为设SUi在指派给它的子通道上的传输速率为ri,因此它在联盟S中获得的吞吐量期望为(3)SU节点在协作感知联盟中的额外能量开销设在感知信息交换阶段的联盟内能量模型采用路径损耗模型.此时存在两种情况:①若SUi=FC(S),即SUi为S的融合中心,则其额外的能量消耗为ESk≠i})2,其中l为包括判定信息和地址信息的数据包长度(不妨设该数据包长度在每个SU节点都相同),di,k为SUi到SUk的欧拉距离.ld2i,ID(FC(S)),ID(FC(S))为融合中心的序号.而融合中心的选取原则为ID(FC(S))=argmin∑SUk∈S,k≠i②若SUi≠FC(S),则它消耗的能量为ESPage5即选取使联盟额外能量消耗最小的SU作为融合中心.需要说明的是,虽然本文仅采用了路径损耗模型,但更复杂、更精确的能量消耗模型依然适用于本文后续讨论.3.2问题定义首先给出划分方式和大联盟的定义.定义1.划分方式,大联盟.称P={S1,S2,…,Sl}为集合的一种划分方式,当且仅当∪l.特别地,若P=,称该种划分方式为大联盟(grandcoalition).基于上述系统模型,联盟构造的最终目标是将网络中的SU划分成联盟并优化每个联盟的信息融合的拓扑结构,一方面希望减少每个联盟的额外传输延迟,进而提高每个SU的吞吐量期望,另一方面,考虑到SU自身的通信需求不大时,希望降低每个SU额外的能量开销.此外每个联盟还应控制错误接入概率以避免对PU通信产生干扰.设对进行划分,划分方式的集合为,则协作感知系统的多目标优化问题描述为定义:划分方式P∈s.t.V-maxP∈注意到这是一个多目标非线性规划问题,在式(8)中符号V-max表示求向量的最大值,而式(9)则表明在最终形成的每个联盟中,错误接入概率不能大于给定阈值.为求解该问题,一般的方法是将多优化目标构造成一个单目标评价函数(可用理想点法、平方和加权法、线性加权法等),然后进行求解.而若对的划分进行穷举搜索,搜索空间为Bell数,随着N的增加,搜索空间成指数级增长,因此,该问题是典型的NP-hard问题[3,13].接下来,我们为其建立一个基于联盟构造博弈的模型并设计分布式算法对该问题求解.4联盟构造博弈模型定义2.定义协作感知系统的多目标优化问题所对应的联盟构造博弈模型为Γ=(,v),其中为网络中所有SU节点集合,v是每个联盟的支付函数.定义3.若联盟S的支付函数值v(S)为定义在2上的实值有界函数,即v:2→,其中v(S)的值可根据固定规则公平分配给S中的所有SU,就称这种博弈为可转移支付博弈(TransferableUtilitygame,TUgame).若联盟S的支付函数值v(S)为一向量Φ∈内每个SU的支付值彼此独立且依联盟内不同的协作策略而不同,称这种博弈为不可转移支付博弈(NonTransferableUtilitygame,NTUgame).支付函数值为一个支付向量Φ∈S,它的支付值ΦS增函数,关于能量ES目标支付函数描述这两个优化目标.首先,由于这两个优化目标的量纲不同,根据多目标优化问题的求解方法,首先应对吞吐量期望和额外能量消耗进行规范化处理以统一量纲,然后采用线性加权和的方法构造支付函数.显然,Γ=(,v)为一个NTU博弈,联盟S的(1)吞吐量期望的规范化我们首先导出SU节点有可能达到的最大吞吐量期望.不妨设所有SU节点传输速率都为rmax=max{ri|1iN},所有节点的正确检测概率都为Pdmax=max{Pdi|1iN},网络中每x个SU节点形成一个联盟,则联盟内每个SU的吞吐量期望相同,可由式(1)~(5)得Th=f(x)=rmax(T-τs-τcx)(1-(1-Pdmax)x).令T=T-τs,Pd=1-Pdmax,注意到该函数为一个凹函数,故对f(x)求导,即令f(x)=rmax(-τc(1-Pdx)-(T-τcx)Pdxln(Pd))=0.由此得到当f(x)取最大值时xmax=1τc·ln(Pd)(τc·lambertw(e-ln(Pd)·Tτc+T·ln(Pd))其中lambertw为朗伯W函数,即f(W)=w·eW的反函数.因此,吞吐量期望的最大值为Thmax=max(f(xmax),f(xmax)).令xmax为使函数值较大的那个整数值,则容易证明,任取SUi(1iN),令其属于联盟S,且|S|=x,其吞吐量期望不可能大于Thmax.这是因为ThSi=ri(T-Ts-Tcx)∏SUi∈SPage6rmax(T-Ts-Tcxmax)(1-(1-Pdmax)xmax=f(xmax)=Thmax,所以规范化后SUi的吞吐量期望为ThSi/Thmax.(2)消耗额外能量的规范化在极端情况下,网络中SU节点可能出现的传输能量最大值为Emax=ld2max,其中dmax是网络中任意两点间距离的最大值(在分布式算法中,该值可以统一设定为网络的直径).因此任取SUi和它所在的联盟S,规范化后SUi的额外能量消耗为ES(3)基于线性加权和的支付函数构造接下来,我们采用线性加权和的方式构造支付函数(11)如下.具体地说,任取SUi和它所在的联盟S,当Pf(S)α时,引入权系数η∈(0,1),将规范化的吞吐量期望赋予权重η,将规范化的额外能量赋予权重1-η,η越大,表明更希望得到高的吞吐量期望,而η越小,表明更注重减少额外能量的消耗.当Pf(S)>α时,则令联盟内部的每个节点支付值为-.需说明的是,在实际应用时,若SU利用子通道进行传输的需求很小,则η值可设置较小;反之若每个时间槽基本都需进行传输,则η可设置较大.烄v(S)=ΦS烅Pf(S)αv(S)={ΦS烆5分布式多目标联盟构造算法5.1算法设计我们接下来设计分布式多目标联盟构造算法(DistributedMulti-objectiveCoalitionFormation,DMCF)解决本文提出的问题.首先,为比较两个划分方式孰优孰劣,定义“优超算子”如下.定义4.优超算子“”.设R={R1,R2,…,Rm}和Q={Q1,Q2,…,Qn}是的两种联盟划分方式.设SUj为联盟Ri∈R中的成员,1im,其在Ri中的支付函数值为ΦRij;SUj又为联盟Qk∈Q的成员,1kn,在Qk中的支付函数值为ΦQkj.称R优超于Q,当且仅当任取SUj,需满足ΦRijΦQkj,且至少存在一个SU,其在R中的支付函数值严格大于其在Q中的函数值.记这种关系为RQ,其中“”为优超算子.显然根据优超算子对联盟划分排序,也称帕累托(Pareto)序.基于优超算子,我们在DMCF中采用如下两个基本操作规则:合并规则和分裂规则.定义5.合并规则(MergeRule).对于的任意一个划分R,设CR为该划分的任意子联盟集合.令C={C1,C2,…,Cm},如果{∪mi=1Cm}{C1,C2,…,Cm},则合并规则将{C1,C2,…,Cm}合并为一个新的联盟{∪m定义6.分裂规则(SplitRule).对于的任意一个划分中的一个联盟C,若存在对C的一个划分{C1,C2,…,Cm},使得{C1,C2,…,Cm}C,则分裂规则将C分裂为新的联盟集合{C1,C2,…,Cm}.在上述规则中,若较小的联盟通过合并为新的联盟可使联盟内节点的支付值增加,则进行合并操作.若较大联盟通过分裂成为多个小联盟也可以使原联盟中节点的支付值增大,则进行分裂操作.需说明的是,若新联盟形成,首先要根据式(6)选择融合中心,然后再计算联盟内各个节点的支付值.Apt[14]基于合并-分裂规则提出了一个形成联盟的通用框架,但在该框架下,没有给出节点如何分布式地根据邻居节点信息做出合并或分裂决定的算法.结合上述通用框架,接下来介绍本文提出的分布式算法DMCF.DMCF算法的基本思想如下:初始状态时,每个SU节点都独立,形成初始划分C={C1,…,CN},其中Ci={SUi},1iN.算法每轮迭代分为两阶段:首先是合并阶段,然后是分裂阶段.合并阶段中,每个联盟尝试合并邻居节点并检验是否能够形成更优联盟.分裂阶段中,如果存在一个联盟满足分裂规则,则该联盟进行分裂操作.DMCF算法的伪码描述见图2.AlgorithmDMCF1.Initialization:thenetworkispartitionedbyC={C1,…,CN},whereCi={SUi},1iN;EachSUicomputesitsPdiandPfi;2.Repeat3.CM=Merge(C);4.C=Split(CM);5.UntilnocoalitionsareabletomergeorsplitMerge阶段:①联盟Ci计算等待时间Twi和Info(Ci).为便于实现,联盟中所有节点的平均支付值越大,令该联盟等待时间Twi越短并先开始启动合并过程.广播Info(Ci)给搜索半径ds内的邻居节点,其中邻居节Page7点利用Info(Ci)计算新形成联盟的特征函数向量,Info(Ci)包括成员数量、位置、特征函数向量.②联盟Ci在Twi时间内等待其它联盟的合并请求,将请求存储在MR(用于存储合并请求)中.当等待时间Twi超时后,在MR中寻找能与之合并的联盟(符合合并规则),若有多个联盟可与之合并,则选择合并之后,形成的新联盟中每个SU节点的平均支付值最大的联盟(在伪码描述中Mean(v)函数表示求支付向量的平均值).如果没有邻居联盟发出合并请求,则Ci将启动自身的合并过程,计算能够与自身进行合并的候选联盟列表MC.在MC中寻找能与之合并的,且合并之后,形成的新联盟中每个SU节点的平均支付值最大的联盟,例如Cy.如果Cy不能合并,则尝试MC中的其它联盟,直到MC为空.Merge阶段伪码描述见图3.Merge(C)1.ForeachcoalitionCi∈C2.MR=;/storethecoalitionset’sinformationwho3.CalculatesTwiandInfo(Ci),broadcastsInfo(Ci)toits4.While(Twidoesnotexpire)do5.If(ReceivesamergingrequestfromCk)6.MR=MR∪Ck;7.Endif8.Endwhile9.If(MR≠)10.FindsoutCx∈MRsuchthatmean(v(Ci∪Cx))isthe11.Ci=Ci∪Cx;12.Else/Cidoesnotmergewithanycoalition/13.SearchesMC;/MCstorethesetofcandidatecoali-14.If(MC=)15.Return;/nocandidateisfound/16.Else17.FindsoutCy∈MRsuchthatmean(v(Ci∪Cy))isthe18.SendsoutmergingrequesttoCy;19.If(ReceivesanacknowledgementfromCy)20.Ci=Ci∪Cy;21.GotoStep3;22.Else23.MC=MC-Cy;24.GotoStep14;25.EndIf26.EndIf27.EndIf28.EndForneighborcoalitionswithinrangeds;(2)Split阶段:每个联盟根据分裂规则,在所有可能划分中,寻找满足分裂规则,且分裂后新联盟的各SU节点的平均支付值最大的划分.若存在,则分裂.Split阶段伪码描述见图4.Split(CM)1.ForeachcoalitionCi∈CM;2.FindapartitionS={S1,…,Sk}forCisuchthat∑1ik3.If(S≠)4.BroadcastsplitrequesttoSi,Si∈S;5.Else6.Return;7.EndIf8.EndFor5.2算法收敛性分析下面论证DMCF算法结束时得到的网络结构的稳定性,进而证明该算法的收敛性.为使证明更加完整,先介绍脱离函数、hp和-stable、-stable的基本概念[14].定义7.脱离函数与-stable.脱离函数将的每个划分P映射到的一组联盟集上,即(P)包含局中人因某种操作而离开划分P,重新组合后能够形成的所有的联盟集.如果没有局中人要离开当前划分P,或者离开后只能够形成由(P)允许的联盟集,则划分P是-stable的.该定义的直观解释为,若划分P是-stable的,表明在划分P下,所有SU的支付值为帕累托最优的.但是这种帕累托最优划分不一定总是存在的.若存在,需满足以下两个条件:(1)若T={T1,…,Tl}是-stable划分,则任取i∈{1…l},若两个不同的联盟S1,S2满足{S1∪S2}Ti,则{S1∪S2}{S1,S2}.(2)称联盟G为“T-不兼容”的,当且仅当不存在Ti,使得GTi.而-stable要求所有T-不兼容联盟满足{G∩Tii∈{1…l}}{G}.定义8.脱离函数hp与hp-stable.脱离函数hp将的一个划分P映射到的所有能够通过合并-分裂操作形成的划分上.划分P是hp-stable的,当且仅当没有局中人能够通过合并-分裂操作离开划分P而形成其它的划分.对上述定义的直观解释是,hp(P)只允许局中人通过合并-分裂操作离开P形成新的划分.一个划分P是hp-stable的,表明如果只通过合并或分裂操作,没有局中人想要离开P形成其它划分,这种状态是一种弱均衡状态.根据以上定义,并不是每个网络-stable划分都存在,有的网络仅存在hp-stable划分,因此有如下定理.定理1.如果存在-stable的划分,则DMCFPage8算法终止时得到的划分是-stable的,否则终止时得到的划分是hp-stable的.证明.若-stable的划分是存在的,由于在DMCF算法中,对联盟的合并和分裂操作依帕累托序,因此,任取初始划分,总能收敛到-stable状态.若-stable不存在,假设DMCF算法终止时得到的最终划分P不是hp-stable的,那么存在一个划分P,局中人能够通过合并-分裂操作离开P而构建P.这说明合并-分裂规则是满足的,DMCF算法不会终止,与假设矛盾,划分P不存在.所以DMCF算法终止时得到的最终划分是hp-stable的.证毕.定理1说明了最终形成的网络结构是稳定的,因此DMCF算法是收敛的.5.3算法的计算复杂性分析DMCF算法为具有迭代性质的分布式算法,网络中的每个节点在算法每一轮中的计算开销主要分为两个部分:(1)在每一轮的Merge阶段中,若节点为融合中心,则它在MR中寻找能与它所在的联盟合并的其它联盟.设网络中共有n个节点,在算法初始情况下,每个节点单独形成联盟并作为数据融合中心,每个节点最多需要进行n次计算和比较.因此,节点在Merge阶段的计算复杂度为O(n).(2)在每一轮的Split阶段中,若节点为联盟的融合中心,则它在所有可能划分中,寻找满足分裂规则且分裂后新联盟的各SU节点的平均支付值最大的划分.设融合中心节点所在的联盟中节点数量为m,则所有可能划分的数量为Bell数,其穷举划分的数量为(1/m!)∑m该式展开,则在Split阶段的计算复杂度为(O(1/m!)∑m算法中不做任何限制,则Split阶段的计算复杂度是相当高的.因此,在分布式算法的实现中,一种降低计算复杂性的有效的方法就是对联盟规模做限制,若联盟规模过大,一方面增加了联盟内部能量消耗,另一方面增加了Split阶段的计算复杂性.因此,在算法实现和后续的仿真实验中,令联盟中可允许的节点最多为6,这样,根据Bell数公式,可得到最大划分的数量仅为203,这样可大大降低Split阶段的算法复杂度.6实验与仿真为验证DMCF算法的性能,我们又提出一种分布式随机联盟构造算法(DistributedRandomCoalitionFormation,DRCF)与之比较.与DMCF中每个联盟按帕累托序有选择性地、迭代地进行合并和分裂操作不同,在DRCF中,每个节点按节点序号大小在搜索半径ds内随机选择其它节点构造一个错误接入概率小于给定阈值的联盟,直到所有节点都做出是否与其它节点合并的决定后终止.两种算法比较时,搜索半径ds的设置相同.接下来,需为分布式算法确定一个合理搜索半径ds.我们发现支付函数中的加权系数η与搜索半径ds存在如下关系:加权系数越大表示算法更注重使节点获得高的吞吐量期望,而加权系数越小表示算法要防止节点的能量消耗过大.同样的,若ds设置很大,则最终形成的联盟规模可能很大,算法更注重在更大搜索范围内获得更优化的联盟组合以提高节点吞吐量期望,而忽略由于联盟规模增加带来的每个节点额外能耗的增加;若ds设置很小,则最终形成的联盟规模较小,算法更注重降低每个联盟内节点的额外能耗.因此,我们可令ds=η·ddiameter,其中ddiameter是网络中任意两节点间的最大距离.因此,给定加权系数η,就可根据上式设定分布式算法中的参数ds.最后,我们用MATLAB设计仿真程序对算法DMCF和DRCF进行性能评价.设网络中共有N个SU随机部署在1km×1km的正方形区域内,另有一PU位于网络中心,即位于坐标(500,500).设PU的发送功率Ps=1W,其占用的频谱带可被均分为N个子通道.该频带在每个时间槽内要么被PU占用,要么空闲,Pr{H0}=0.5.SU节点数量N可在集合{10,20,30,40,50}中取值.给定一包含N个SU节点的网络实例,任取SUi(1iN),令其检测阈值λi在[-30dBm,-25dBm]间随机取值,若采用指派给它的子通道通信,其传输速率ri在[10kbps,50kbps]间随机取值.每个节点的采样次数都相同,为u=10.另设σ2n=-40dBm,则根据公式:γi=Pshi,PU2/σ2n,hi,PU=k/d2i,PU(k=1)和式(1)~(3)便可计算出SUi的Pfi和Pdi.设每个时间槽长度T=10ms,每个SU的感知时间和感知信息的传输时间相同,都为τs=τc=0.1ms.在这里,我们令ddiameter槡=10002,令l·(1)2为一个单位的能量消耗.我们进行以下3组实验,它们分别为当某一参数变化,其它参数固定时,对算法DMCF和DRCFPage9最终得到的节点平均吞吐量期望和平均消耗能量进行比较.实验1.加权系数η对算法性能的影响.令N=30,随机产生100个实例,对每个实例,令错误接入概率阈值α=0.05,计算当η∈{0.1…1.0},步进0.1时,在每个加权系数下得到的100个实例应用两算法得到的结果的均值.图5的结果说明:①与算法DRCF得到的解相比,在各加权系数下,算法DMCF总能使节点消耗较少或相当的能量而达到相对大的吞吐量期望.表现为DMCF获得平均8%的吞吐量期望的提升,却平均节省42%的能量.②随着加权系数的增加,两算法获得的吞吐量期望逐渐增加,同时能量消耗也不断增大.特别地,当η=0.1时,在DMCF算法中更注重节能,搜索半径ds较小,两算法形成的联盟规模都较小,因此额外能量开销相当,但即便如此,与DRCF算法获得的吞吐量期望相比,DMCF也比其提升15%.当η=1.0时,DMCF算法更注重获得大的平均吞吐量期望,因此,与DRCF算法获得的吞吐量期望相比,理所应当地提高了10%,但这时能量消耗却较大,但即便如此,DMCF与DRCF消耗的额外能量却几乎相同.①和②说明了DMCF算法通过分布式的Merge和Split操作,综合考虑了增大系统吞吐量期望和降低能量消耗两个优化目标,使得DMCF总能使节点消耗较少能量却达到相对较大的吞吐量期望.图5加权系数变化时DMCF算法和DRCF算法得到的影响.实验2.错误检测概率阈值α对算法性能的令N=30,随机产生100个网络实例,对每个实例,令η=0.5,计算当α∈{0.01…0.1},步进0.01时,每个阈值下得到的100个实例应用两算法得到的结果的均值.图6的结果再次说明算法DMCF比DRCF能更有效解决多目标协作感知问题.表现为:①与算法DRCF得到的解相比,除α=0.01时,算法DMCF总能使节点消耗较少的能量却达到相对大的吞吐量期望,即获得平均8%的吞吐量期望的提升,却平均节省65%的能量.②随着阈值α不断增加,约束不断放宽,两算法可形成更加优化的联盟,因此吞吐量期望显然逐渐增加.特别的,当α0.06时,关于错误接入概率的约束基本未发挥作用,因此,吞吐量期望和能量消耗随着α的增加而保持不变.又当α=0.01时,由于阈值约束太小,每个节点单独形成联盟,两算法消耗的额外能量都为0,获得的吞吐量期望均相同.图6错误接入概率阈值变化时DMCF算法和DRCF算法N=30,加权系数η=0.5)实验3.SU节点数目不同时对算法性能的影响.分别令SU数量N=10,20,30,40,50,在每种网络规模下各产生100个实例.在每个实例中,令η=0.5,α=0.05,计算每个网络规模下,100个实例应用两算法得到的平均值.图7的结果表明:在拥有不同SU节点的不同规模的网络中,与DRCF获得的解相比,DMCF得到的吞吐量期望平均可提高7.5%,却平均节约70%的额外能量开销.需要说明的是,随着网络规模的增加,吞吐量期望与能量消耗保持不变,这是因为我们计算的吞吐量期望与能量消耗为每个节点的平均值,这两个值基本保持稳定,表明了DMCF这种分布式算法随着网络规模的增加,性能并未降低,因此更适合分布式应用.Page10图7SU节点数目不同时DMCF算法和DRCF算法得到的节点平均吞吐量期望和额外能量开销(其中错误接入概率α=0.05,加权系数η=0.5)7结束语本文首次提出了协作感知系统的多目标非线性优化问题,然后基于联盟博弈理论为该问题构建了一个不可转移支付的联盟构造博弈模型,采用线性加权和方法在模型的支付函数的设计中同时考虑了节点吞吐量期望和能量消耗两优化目标,基于此,提出了分布式多目标联盟构造算法DMCF,该算法循环地按帕累托序对联盟进行合并和分裂操作.仿真实验的结果表明:DMCF可有效解决提出的多目标优化问题,与分布式随机联盟构造算法DRCF相比,DMCF总能使节点消耗较少能量却达到相对较大的吞吐量期望.论文的后续工作是如何对协作过程中的开销进行更精确的建模,在这里,开销指时间开销和能量开销.在协作感知应用中,时间开销不仅包括感知时间、检测信息传输时间,还应该包括用于节点同步时间等;对于能量开销模型,现有研究基本假设SU在感知、传输检测信息时都消耗固定的能量,然而基于不同的感知方式、传输方式(数据包长度、功率大小、调制方式等),节点消耗的能量也不尽相同.不同的开销模型会对节点选择、联盟构建等协作感知优化问题产生影响,也会影响协作感知系统的性能.
