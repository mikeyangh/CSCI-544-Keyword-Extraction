Page1异构网络中关联实体识别模型及增量式验证算法研究寇月申德荣刘恒王泰明聂铁铮于戈(东北大学信息科学与工程学院沈阳110004)摘要利用关联实体识别技术可以对异构网络中主题相关的实体进行检测并整合,更好地帮助用户理解搜索目标.然而,目前关联实体识别技术考虑的因素较为单一、对识别结果缺乏验证而影响识别准确性.文中提出了一种两阶段的关联实体识别模型,充分考虑了实体的模式特征与属性特征.此外,提出了一种增量式验证算法,基于迭代对识别结果进行增量式的验证并修正,以保证结果的准确性.通过实验验证了文中所提出的关键技术的可行性和有效性.关键词异构网络;关联实体识别;迭代;增量式验证1引言以实体为中心的系统当前已经得到广泛的应Page2之间具有出版关联等.这些实体连同关联关系构成了一种网络关系结构.在现实世界中,单一的网络关系结构已不足以应对现实中的问题,而更多地倾向于将实体及实体间关联关系以一种复杂的网络抽象结构即异构网络来建模,所谓异构主要体现在两方面:实体类型的多样化和关联关系的多样化.这种异构网络在现实生活中是普遍存在的,例如学术论文网络DBLP、电影资料网络IMDB以及图片共享网络Flickr等等.在异构网络中,实体之间可能具有某种主题相关性,例如相同学术机构所发表的论文、论文作者及相关的会议等实体构成了一个主题,某学术领域具有相同声望的专家及其著作等实体构成了一个主题,相同电影公司拍摄的影片、涉及的导演及演员构成了一个主题等等.关联实体识别的目的是在异构网络中识别出所有不同的主题,并针对每一主题正确地辨识相关联的实体.关联实体识别的结果是异构网络上的主题集合以及每个主题所包含的关联实体集合.需要强调的是,关联实体识别不同于实体识别,前者用来识别出主题相关的实体,每个主题一般包含多种实体类型的实体;而后者用来识别描述同一个实体的不同表象,这些表象具有相同的实体类型.关联实体识别的结果可以在实体搜索(尤其是相关性搜索)中得到广泛应用,利用关联实体识别技术可以对异构网络中关联紧密的实体进行检测并整合,将搜索结果按照实体间的主题相关性进行组织,更好地帮助用户理解搜索目标.尽管当前的关联实体识别技术有很多,但考虑的影响因素较为单一、对识别结果缺乏验证而影响识别准确性.一方面,这些技术通常采用基于实体模式特征或者基于实体属性特征的方法来衡量实体间的主题相关性,而缺乏对二者的有效整合;另一方面,这些技术一般只适用于静态的异构网络,而异构网络一般具有动态性,一旦异构网络发生变化,将影响识别结果的准确性.综上所述,能够准确地将实体按照主题相关性进行组织、识别出关联紧密的实体集是十分必要的.然而,在异构网络中的关联实体识别技术面临一些新的挑战:首先,隶属于同一主题的实体往往具有不同的实体类型,而传统的实体识别技术要求待识别的实体具有相同的类型,因此无法直接应用实体识别技术进行相似度的衡量.第二,由于数据源的异构性和多样性,隶属于同一主题的实体在相同属性上取值可能不同(例如作者DongX和XinLunaDong),而具有相同属性取值的实体可能隶属于不同的主题(例如同一名字的两部电影),因此通过简单地计算实体间相似度来量化实体间主题相关性是不可行的.第三,异构网络具有动态变化的特性,节点或边的变化会对当前的识别结果造成影响,因此如何对识别结果进行验证并修正是保证识别准确性的关键.第四,当异构网络规模较大时,若将所有实体作为验证对象将造成较高的时间代价和空间代价,因此如何保证关联实体识别的高效性也是我们要解决的问题.针对现有关联实体识别技术的不足,本文提出了关联实体识别的模型及结果验证算法,主要贡献点包括:(1)提出了一种两阶段的关联实体识别模型(TwoPhaseRelatedEntityIdentificationModel,2P-REIM).不同于传统的关联实体识别模型,2P-REIM充分考虑了实体的模式特征与属性特征,能够更加准确地评估实体间的主题相关性.(2)提出了一种增量式验证算法,基于迭代对识别结果进行增量式的验证并修正,以适应异构网络的动态变化,既能保证识别结果的准确性,又能保证结果验证的高效性.(3)通过实验验证了本文所提出的关键技术的可行性和有效性.本文第2节介绍关联实体识别的相关工作;第3节对关联实体识别、结果验证等概念进行了阐述;第4节提出关联实体识别模型2P-REIM;第5节提出一种增量式验证算法;第6节为实验部分,对提出的模型及算法进行测试;最后对全文进行总结,并指出下一步研究计划.2相关工作本节首先介绍关联实体识别的相关工作,包括:实体识别技术和关联实体识别技术(具体可分为基于模式特征的关联实体识别技术和基于属性特征的关联实体识别技术).然后,将本文提出的关键技术与这些技术进行比较.2.1实体识别技术实体识别技术用来对数据集成中产生的重复记录进行检测并整合,关于实体识别技术的研究主要集中在两方面:一方面是基于实体间相似度进行实体识别,侧重于研究相似函数的设置(包括函数定义、选取和相关阈值的确定)、属性权重的选取以及Page3相关优化措施等.例如:文献[1]通过采用机器学习方法SVM自适应地选取最佳文本相似度算法,以满足不同领域数据的特点及需求.文献[2]分析并比较了多种字符串匹配函数(如编辑距离、Token距离、Levenstein距离等),并从中选取最佳函数来衡量属性特征的相似性.文献[3]利用数据约束条件进行实体识别,并将其应用于数据融合中.另一方面,一些研究工作提出了基于上下文语义信息或特定领域知识进行实体识别的技术.例如:文献[4]将实体间的语义关联以图结构表示,并应用图分割技术对实体进行聚类分组,每组由对应于同一实体的不同表象组成.文献[5]利用实体的上下文在互联网中的共现情况,通过计算网页的URL距离来量化实体间的语义关联.文献[6]分析了XML、图数据等复杂数据上的实体识别技术.2.2关联实体识别技术与实体识别类似,关联实体识别最终也是要识别出一系列实体聚类.但前者强调实体间的相似性,这些实体具有相同类型;而后者强调实体间的主题相关性,可具有不同类型.图模型是一种重要的数据类型,可以用来描述网站结构、关联网络等具有广泛应用的数据.目前关联实体识别技术主要集中在图数据的判定上,可分为基于模式特征的关联实体识别和基于属性特征的关联实体识别.基于模式特征的关联实体识别技术的基本思想是根据实体的类别、在图中的元路径等信息辨识主题相关的实体.例如:文献[7-8]提出了模式聚类方法,利用模式中属性名的相似性将有关联的实体模式聚在一起,形成一个领域.文献[9]提出了一种星型网络模式下的聚类算法,基于图结构形成一系列节点聚类.但该算法要求待聚类的节点必须符合星型结构,例如以论文实体类为中心点,周围关联作者、会议、关键词等附属实体类,因此具有一定局限性.文献[10]认为在图中关联实体之间的路径往往具有一定的规律,因此事先定义了一系列元路径作为关联实体匹配的模板和依据.文献[11]在元路径的基础上还考虑了用户的意愿,在用户的指导下选取聚类种子,以保证聚类的准确性.基于属性特征的关联实体识别技术的基本思想是依据实体属性取值的相似度及关联强度等信息来计算实体间主题相关度.例如:文献[12]提出了网络中节点的相似度计算方法SimRank,该方法采用递归的方式对图中节点的相似性进行计算,直到达到稳定值为止.其基本思想是对于两个实体,如果它们在图中的邻居实体相似,则它们就相似.文献[13]提出了SimRank++方法,在SimRank的基础上还考虑了图中边的权重和两个节点公共邻居的数量.文献[14]提出了一种混合子空间聚类算法,根据实体的共现情况及属性相似度进行聚类,从而形成一系列主题.文献[15]提出了基于关联强度来挖掘关联实体,并针对稀疏网络进行主题划分.本文提出的关联实体识别技术与上述技术的不同之处在于:(1)实体识别技术往往面向具体的应用,涉及的实体类型单一,一般采取简单的相似度计算方法直接对两个实体进行比较.而关联实体识别技术涉及多种实体类型且实体属性取值具有异构性,若采用直接比较的方法,识别结果中容易造成较多的漏报(FalseNegative,FN)和误报(FalsePositive,FP),而已有的间接计算相似度的方法(如SimRank、SimRank++)无法准确地计算直接相连的节点间相似度(详见4.2节).为此,本文提出了可支持多种实体类型的关联实体识别模型,并对SimRank++算法进行了改进,能够有效地评估实体间主题相关性.(2)传统的关联实体识别技术或者侧重于模式特征,或者侧重于属性特征,由于考虑的因素有限,很难保证识别的准确性.本文充分考虑了实体的模式特征与属性特征,能够更加准确地评估实体间的主题相关性.(3)传统的关联实体识别技术没有考虑图数据的动态性,得到的是针对某一静态网络状态的识别结果.本文提出了一种增量式验证算法,基于迭代对识别结果进行增量式的验证并修正,以适应异构网络的动态变化.3问题定义本节介绍关联实体识别技术的相关概念,并对关联实体识别和识别结果验证两个研究问题进行形式化定义.定义1.实体.实体是指现实世界中客观存在的并可以相互区分的资源个体.每个实体e具有某种实体类型t,每种实体类型由一组属性(即模式)t=(f1,f2,…,fn)来描述,每个实体与一组属性取值FV=(fv1,fv2,…,fvn)相对应.例如:某文章实体的实体类型是文章类型,由属性F={title,authors,affiliation,conference,year,subject}来描述,取值为FV=(‘Indexingdataspaces’,Page4‘DongX,HalevyA’,‘UniversityofWashington’,‘Sigmod’,2007,‘Dataspace’).现实生活中实体多种多样,且不是孤立存在的,将多样化的实体及其关联关系以图数据的形式表示出来即形成了异构网络.本文将异构网络定义为两个层次:实体类关联图和实体关联图.定义2.实体类关联图.实体类关联图(EntityTypeRelationshipGraph,TRG)以实体类为核心,用来表示实体类之间的关联关系,用三元组(VT,LT,ΨT)表示.其中,VT表示所有的实体类型节点,LT表示实体类型间的关联边集合,ΨT用来量化实体类之间的关联强度(ΨT=0~1).例如,DBLP主要包含了论文P、作者A、会议C、关键词T以及出版社Pr等实体类(本文用大写字母表示实体类名,用小写字母表示对应的实体名),它们之间的关联关系可以由TRG表示(如图1所示).其中,A和P之间具有write/written关联,C和P之间具有publish/published关联,Pr和P之间具有press/pressed关联等.ΨT(A,P)=0.9表示实体类A与P间关联强度为0.9.定义3.实体关联图.实体关联图(EntityRelationshipGraph,ERG)用来表示实体之间的关联关系,用四元组(VE,LE,DΨE,IΨE)表示.其中,VE表示实体节点集合,LE表示节点间关联边集合,实边和虚边分别代表实体间的直接关联和间接关联,DΨE和IΨE分别用来量化直接关联强度和间接关联强度(DΨE=0~1,IΨE=0~1).若两个实体在ERG中具有直接关联,则必须满足其隶属的实体类在TRG中具有关联边.例如,在图1的基础上可将论文p、作者a、会议c、关键词t以及出版社Pr等实体之间的关联关系以ERG表示(如图2所示).由于p1的作者是a1、a2、a3且P与A在TRG中存在关联边,因此p1与a1、a2、a3之间分别用实边相连.另外,在ERG中如果两个节点的邻居节点间的关联强度越高,这两个节点也越相关.因此,除了直接关联外,我们还考虑了间接关联,如a1与a2之间具有间接关联.DΨE(p1,a1)=0.9表示实体p1与a1间的直接关联强度为0.9,IΨE(a1,a2)=0.75表示作者a1与a2间的间接关联强度为0.75.我们将在第4节详细讨论DΨE和IΨE的计算方法.定义4.关联实体识别.给定TRG和ERG,关联实体识别的理想化目标是生成主题聚类集,要求:(1)代表同一主题的实体应隶属于同一聚类;(2)同一聚类中只包含一个主题.然而,关联实体识别的理想化目标难以实现.首先是主题划分难以明确,例如主题可以按照学术机构来划分,也可以按照专家的学术声望来划分,其聚类结果有很大差异.其次,聚类过程相当于对图数据进行子图划分,其复杂度较高,很难找到一种精确的划分方法.为此,我们提出了一种两阶段的关联实体识别模型,第1阶段根据TRG挖掘出可能存在的主题C[:]={C[1],C[2],…,C[m]},在其指导下第2阶段再针对某一主题C[i]在ERG上进行关联实体识别,形成该主题下的实体聚类C[i][:]={C[i][1],C[i][2],…,C[i][n]},更具有针对性.其中,C[i]代表一个主题且由关联的实体类构成,C[i][j]表示主题C[i]下的某个实体聚类.另外,在子图划分过程中采用了近似算法,一方面降低了计算的复杂性,另一方面最大化地保证划分的准确性(详见第4节).定义5.识别结果验证.给定某C[i]和C[i][:],由于异构网络的动态性,当C[i](或C[i][:])所对应的子图发生变化时,将对C[i][:](或C[i])进行验证并修正,以适应对方的变化.上述验证过程是一个迭代过程,直到C[i]和C[i][:]达到一致为止.当关联实体类C[:]发生变化时,ERG也需要随之变化.例如:若出现新的关联实体类C[m+1]={C,Pr},则需要在ERG中将所有的会议C和对应Page5的Pr之间加边.相应地,若ERG发生变化时,C[:]也需要随之变化.例如:在ERG中加入或删除节点或边,则影响当前关联实体类的关联强度或者出现新的关联实体类.因此,对于C[:]和ERG来说,一方的改变将影响另一方.识别结果验证的过程就是通过对双方的相互验证和修正,使得识别结果不断精确化(详见第5节).4两阶段关联实体识别模型为了准确地对关联实体进行识别,使识别结果更具有主题针对性,我们提出了一种两阶段的关联实体识别模型2P-REIM(如图3所示),该模型将整图3两阶段的关联实体识别模型(2P-REIM)图4关联实体类识别阶段举例个识别过程分为关联实体类识别和关联实体识别两个阶段.(1)第1阶段根据TRG挖掘出可能存在的主题,即一系列关联实体类C[i](i=1~m).(2)第2阶段再针对每个C[i]所涉及的实体类型在ERG上进行关联实体识别,形成一系列关联实体C[i][j](j=1~n).4.1第1阶段2P-REIM中第1阶段用来挖掘实体类间的关联关系,将关联紧密的实体类聚在一起而形成关联实体类.查询日志能够反映用户的查询意图,用户经常选取主题相关的实体作为结果数据,而这些实体所具有的类别也是相关的.因此我们将查询日志作为训练集来分析可能存在的关联实体类.具体步骤如下.步骤1.关联实体类挖掘.关联实体类挖掘的基本思想是根据实体类在查询结果中的共现程度来判断实体类是否主题相关.共现程度越高,其主题相关性也越高.我们使用Apriori算法[16]来挖掘相关联的实体类,首先将查询日志中所包含的所有实体类看成项集,然后通过扫描查询日志采取逐层搜索的迭代方法获取频繁项集即关联实体类.例如,l1~l10是10条查询日志,T1~T5是这些日志所包含的5个实体类,假定最小支持度为0.2(如图4(a)所示).经过第k次扫描可以确定频繁k项集的集合,再基于频繁k项集来探测频繁(k+1)项集,最终得出结论:{T1,T2,T3,T4}是一个频繁4项集,它们构Page6成了一个关联实体类(如图4(b)所示).步骤2.频繁项集图数据化表示.接下来需要将上一步得到的每个频繁项集以子图形式表示.其中,将频繁项集中的实体类表示为子图中节点,节点之间用边相连且初始关联强度为其支持度.例如,基于图4(b)生成的频繁项集可构造一系列子图(如图4(c)所示),这些子图构成了初始的关联实体类集合C[:].步骤3.基于TRG的子图剪枝.进一步对各个子图进行剪枝处理,在某子图中若两个实体类在TRG中不存在关联,则将它们之间的边去除.例如,假定在TRG中T3和T4之间没有关联,则需要在各个子图中消除它们之间的连边(如图4(d)所示).步骤4.实体类关联强度标准化.对于两个实体类A和B,若它们频繁地共同出现在C[:]集合内的子图中且具有较高的支持度,则它们在主题上越相关.为此,我们需要进一步对实体类间关联强度进行标准化处理(如式(1)所示).ψNT(A,B)=ψT(A,B)×在C[:]中包含A和B的子图数4.2第2阶段在第1阶段我们得到了可能出现的主题集合C[:]并将每个主题以子图形式表示,接下来将进入第2阶段即关联实体识别阶段.本部分首先介绍实体关联强度的量化方法,然后介绍关联实体识别的具体步骤.4.2.1实体关联强度量化方法若两个实体是可连接的(即实体类型在TRG中存在关联边)且在连接属性上的取值比较相似,则它们就越相关.我们将这种可连接的实体间的关联强度称为直接关联强度DΨE,如式(2)所示,两个实体a和b之间的直接关联强度取决于它们在属性上(尤其是连接属性)的相似度.由于数据源的异构性和多样性,有些实际上相关联的实体在连接属性上的取值可能相差较大.相反,具有相同属性取值的实体可能隶属于不同的主题.因此,仅考虑直接关联强度来量化实体间主题相关性是不可行的.为此,我们又在DΨE基础上提出了间接关联强度IΨE,其计算过程借鉴了SimRank++的基本思想,用两个节点的邻居节点间的相关性来量化它们间的相关性.首先,我们用实体间的直接关联强度作为连接它们的边权重,并对某实体的所有邻边的权重进行标准化处理(如式(3)所示).其中N(a)表示a的邻居节点集合.W(a,x)=e-variance(x)×DΨE(a,x)然后,依据邻居节点间的相关性来递归地计算间接关联强度IΨE.如式(4)所示,节点a和自身的相关度最高,相同或相关节点的邻居节点也相关,其中c为衰减系数(c=0~1),表示相关度在传递过程中的衰减性.IΨE(a,b)=1,烄烅c×∑x∈N(a)∑y∈N(b)W(a,x)×W(y,b)×IΨE(x,y),烆上述量化过程虽然在一定程度上能够反映实体间的主题相关性,但仍存在一些问题.首先,隶属于同一主题的实体往往具有不同的实体类型,而上述过程没有考虑实体类型间的关联强度;其次,SimRank++算法的计算目标涵盖了ERG中的所有节点对(包括直接相连和间接相连),该算法虽然能够较好地计算间接相连的节点间的关联强度,但对于直接相连的节点并不适用.为此,我们对上述量化过程进行了改进,考虑了实体类型间关联强度并用参数α来对ΨNT和IΨE进行权衡(如式(5)所示).另外,对SimRank++的结果进行了修正,对于直接相连的节点间关联强度用DΨE替代,将修正后的结果作为节点间的总关联强度ΨE(如式(6)所示).IΨE(a,b)=1,烄α×ψNT(A,B)+(1-α)×c×∑x∈N(a)∑y∈N(b)W(a,x)×烅W(y,b)×IΨE(x,y),烆ψE(a,b)=DΨE(a,b),a与b在ERG中直接相连4.2.2关联实体识别算法关联实体识别阶段将针对第1阶段得到的每个主题C[i]对ERG中的实体进行聚类,形成一系列关联实体集C[i][:]={C[i][1],C[i][2],…,C[i][n]},如算法1所示.该算法采用了谱聚类的思Page7想,并在聚类过程中采用了近似算法,一方面降低了计算的复杂性,另一方面最大化地保证划分的准确性.算法1.关联实体识别算法.输入:ERG,C[i],聚类数K输出:C[i]下的K个关联实体集C[i][:]={C[i][1],1.在ERG中保留相容实体,形成ERG;2.犕=constructAffMatrix(ERG);//构建相似矩阵犕3.犔=constructLaplacian(犕);4.犞=computeEigenvectors(犔,K);5.犢=constructClusterMatrix(犞);6.O=getCentroid(犢,K);//随机从犢的n行(狔i,i=7.O=;8.While(diff(O,O)>ε)do9.Foreach狔iinY10.Forj=1toK11.计算狔i与O[j]间的向量相似度VSim(狔i,O[j]);12.Endfor13.将狔i分配到C[i,j]=argmaxjVSim(狔i,O[j])中;14.Endfor15.Forj=1toK16.O[j]=argmax狔i17.Endfor18.EndWhile19.Output(C[i,:]).算法1主要步骤如下.步骤1.构建相似矩阵犕.在构建矩阵犕之前,首先要在ERG中保留与C[i]类型相容的实体,也就是隶属于C[i]中实体类型的实体而形成ERG.然后基于实体间总关联强度构建相似矩阵犕(如式(7)所示).假定待聚类的实体是n个,则犕由n行n列构成.步骤2.构建特征向量空间犢.基于犕构建对角矩阵犇和拉普拉斯矩阵犔(如式(8)和(9)所示),并计算犔的前K个特征向量犞,从而构建特征向量空间犢.其中犢由n行K列构成,每一行代表一个实体,每个实体由K维向量表示.步骤3.对犢中向量进行聚类.本步骤的目标是将犢的n个行向量聚成K类.首先,随机从犢的n行中选取K行作为初始中心点集合O,并将O置空.然后,对于犢的每个行向量狔i,计算狔i与各个中心点O[j](j=1~K)间的向量相似度VSim(狔i,O[j]),将其与最相关的中心点聚在一起.接下来,在生成的各个聚类中重新选取中心点,再重复上述过程,直到O与O差别较小,则聚类达到稳定状态,得到C[i]主题下的实体聚类C[i][:]={C[i][1],C[i][2],…,C[i][K]}.需要说明的是,K的取值会影响聚类结果的好坏,关于这方面的研究已有很多并已趋于成熟(如文献[17]),本文将借鉴已有技术来设置K值,此部分不作为本文研究重点.在第3节中,我们提出关联实体识别的理想化目标体现在两方面:代表同一主题的实体应隶属于同一聚类;同一聚类中只包含一个主题.好的聚类结果要使不同聚类间的耦合程度最低,同时使聚类内部的聚集程度最高,也就是要达到“高内聚低耦合”.为此,我们定义了理想化聚类目标(如式(10)所示).其中,ΨEii和ΨEij分别表示在聚类内部(子图i)的实体间总关联强度之和与聚类之间(子图i与其它子图j)的总关联强度之和.前者越大,后者越小,则聚类效果越好.由于要考虑所有的聚类划分(即子图划分)情况,才能得出最优解,因此上述最优化过程是一个NP难问题.为此,我们在算法1中采用了近似算法,用中心点的贡献度(如式(11)所示)来近似地表示该聚类的内聚耦合程度.若节点a与聚类内部节点的总关联强度之和较大,而与其它聚类中节点的总关联强度之和较小,则a的贡献度就较大.我们近似地认为若节点的贡献度越大,以其为中心的聚类内部就越集中,与其它聚类间的耦合度也越低.因此在选取中心点时,我们优先选取聚类中贡献度最大的节点.Contribution(a)=∑a∈C[i,j]∧x∈C[i,j]ψE(a,x)-∑a∈C[i,j]∧xC[i,j]ψE(a,x)5增量式验证算法由于异构网络具有动态变化的特性,节点或边Page8的变化会对当前的识别结果造成影响,因此对识别结果进行验证和修正是保证识别准确性的关键.本节首先介绍识别结果验证的基本思想,然后提出一种增量式验证算法.5.1识别结果验证的基本思想2P-REIM模型中的两个识别阶段分别生成了关联实体类识别结果和关联实体识别结果.受异构网络动态性等因素的影响,上述识别结果需要进行更新,而一方的改变可能又会对另一方造成影响.识别结果验证的过程就是通过对双方的相互验证和修正,使识别结果不断精化.识别结果验证的基本思想如图5所示,我们将关联实体类识别结果和关联实体识别结果看成两种角色,将最先进行更新的一方作为验证的发起者,另一方作为接收者.具体过程如下:步骤1.发起者根据外界因素(如查询日志的变化、实体加入退出等)进行自我更新,然后向接收者发送验证申请,随即进入等待接收应答状态.步骤2.当接收者接收到验证申请后,则进行一致性检测,判断自身与对方是否满足一致性.这里,我们用两种方法来计算实体类关联强度,从而检测一致性.一种是前文介绍的基于频繁项集的方法,另一种是基于ERG中实体关联强度来计算实体类关联强度的方法,通过比较二者所计算出结果的差别来衡量其不一致性(如式(12)所示).若二者满足一致性则代表验证通过,由接收者向发起者发送一致性应答,整个验证结束.否则接收者对自身识别结果进行修正,使之适应对方的更新.如果关联实体类识别结果是接收者,则需要将实体类间关联强度修正为新值(如式(13)所示).由于此时接收者也发生了变化,变化后的数据可能与发起者存在不一致,因此还需要继续验证,由接收者向发起者发送验证申请,并进入等待接收应答状态.diff=∑A,B∈C[:]ψT(A,B)-∑A,B∈C[:]Avga,b∈ERG∧atype=A∧btype=B(ψE(a,b))ψT(A,B)=ψT(A,B)×Avga,b∈ERG∧atype=A∧btype=B(ψE(a,b))(13)步骤3.当发起者接收到验证申请后,则进行一致性检测,判断自身与接收者的当前状态是否满足一致性.若满足,则向接收者发送一致性应答,整个验证结束.否则发起者对自身识别结果进行修正,继续向接收者发送验证申请,并进入等待接收应答状态.起者与接收者达到一致,整个验证过程结束.5.2增量式验证算法5.2.1识别结果验证算法基于识别结果验证的基本思想,我们提出了识别结果验证算法.以关联实体类识别结果作为发起者、关联实体识别结果作为接收者为例,其验证算法如算法2所示.步骤4.迭代地执行步骤2和步骤3,直到发算法2.识别结果验证算法.输入:ERG,当前关联实体类识别结果C[:],当前关输出:修正后的关联实体类识别结果C[:],修正后的1.C[:]=updateRelatedType(C[:],ERG);2.diff=checkConsistency(C[:],C[:]);3.While(diff>δ)do4.C[:]=C[:];//对C[:]进行修正5.ERG=updateERG(ERG,C[:]);6.Fori=1to|C[:]|7.C[i,:]=updateEntityCluster(C[i],ERG);8.EndFor9.C[:]=updateRelatedType(C[:],ERG);Page910.diff=checkConsistency(C[:],C[:]);11.EndWhile12.Output(C[:],C[:,:]).5.2.2复杂度分析通过对算法2的计算复杂度进行分析,发现算法2存在两方面弊端:(1)实体关联强度计算代价大.算法2的步5需要重新计算ERG中实体间关联强度,其计算过程借鉴了SimRank++的思想.假定ERG中的节点总数为n,在每次迭代中需要暂存中间结果,因此空间复杂度为O(n2).假定每个节点的平均邻居数为d,迭代次数为p,则计算实体关联强度的时间复杂度为O(pn2d).(2)实体聚类代价大.算法2的第7步需要对关联实体识别结果进行修正,即需要执行算法1重新对实体进行聚类.假定算法1中的聚类数为k1,谱聚类过程需要的迭代次数为q,则针对某一C[i]对实体进行聚类的时间复杂度为O(qnk1).假定当前C[:]中聚类数为k2,则针对所有的关联实体类对实体进行聚类的时间复杂度为O(qnk1k2).因此,当异构网络规模较大时,若将所有实体作为验证和修正的对象将造成较高的时间代价和空间代价.5.2.3改进措施当n的规模很大时,则算法2可能产生性能瓶颈.因此本文对算法2进行了改进,基于增量式验证的思想提出了一系列改进措施.(1)剪枝优化策略在重新计算实体关联强度时,如果能减少需要计算的节点的数量,将降低第5步的计算复杂度.为此我们提出了剪枝优化策略,该策略包括静态剪枝和动态剪枝两个过程.静态剪枝是指在计算实体关联强度之前,通过设置影响半径r来缩小计算范围.例如,若在实体x和y之间添加一条边,则分别以x、y为圆心,以r为半径获取节点集,仅将该范围内的节点作为重新计算关联强度的目标.动态剪枝是指在重新计算实体关联强度过程中所进行的剪枝.当ERG发生变化时,实体间关联强度也会发生变化.通过分析可知,随着迭代次数的增加,实体间关联强度的变化具有衰减性(如定理1所示).在结果验证中,当发现某节点对x和y的关联强度的变化低于一定程度时,即可终止对x、y邻居节点的关联强度的重新计算.因为此时x、y对其邻居节点的影响已微乎其微,若再继续进行计算,其邻居节点的关联强度与重新计算前相比变化不大,因此计算过程可以终止.定理1.假定节点x和y间关联强度的变化为ΔΨE(x,y),则其邻居节点受此影响而产生的关联强度的变化ΔΨE(xi,yj)不大于ΔΨE(x,y).其中xi和yj分别表示x和y的第i和第j个邻居(i=0~n,j=0~n).证明.采用数学归纳法证明.当i=1,j=1时,ΔΨE(x1,y1)=(1-α)×c×WNE(x1,x)×WNE(y,y1)×ΔΨE(x,y),由于(1-α)×c×WNE(x1,x)×WNE(y,y1)<1,所以ΔΨE(x1,y1)ΔΨE(x,y).假定当ik-1,jk-1时,ΔΨE(xk-1,yk-1)ΔΨE(x,y)成立.当i=j=k时,ΔΨE(xk,yk)=(1-α)×c×WNE(x1,x)×WNE(y,y1)×ΔΨE(xk-1,yk-1)ΔΨE(xk-1,yk-1)ΔΨE(x,y).因此定理1成立.(2)增量式聚类策略在对关联实体识别结果进行修正时,如果事先对当前聚类集进行筛选,仅针对部分聚类进行更改,将降低实体聚类即第7步的计算代价.为此,我们提出了增量式聚类策略,使识别结果修正的目标仅针对部分实体数据,以节省识别结果验证的时间代价和空间代价.对于两个实体聚类C[i,1]和C[i,2],n1和n2分别表示它们包含的实体数量,ΔΨE11和ΔΨE22分别表示其内部节点间关联强度之和的变化,ΔΨE12表示处于C[i,1]和C[i,2]之间边的关联强度之和的变化.可以证明C[i,1]和C[i,2]满足定理2的特性.定理2.假定(n21+n22+3n1n2)×ΔΨE12n21×ΔΨE11+n22×ΔΨE22,则C[i,1]和C[i,2]不可能合并.证明.采用反证法证明.假定C[i,1]和C[i,2]需要合并,基于式(10)可计算合并后的聚类有效性为(ΨE11+ΔΨE11+ΨE12+ΔΨE12+ΨE22+ΔΨE22)/(n1+n2),二者分离的有效性为(ΨE11+ΔΨE11-ΨE12-ΔΨE12)/n1+(ΨE22+ΔΨE22-ΨE12-ΔΨE12)/n2,由于C[i,1]和C[i,2]需要合并,则合并后的有效性一定大于分离后的有效性,即(ΨE11+ΔΨE11+ΨE12+ΔΨE12+ΨE22+ΔΨE22)/(n1+n2)>(ΨE11+ΔΨE11-ΨE12-ΔΨE12)/n1+(ΨE22+ΔΨE22-ΨE12-ΔΨE12)/n2,可推出(n21+n22+3n1n2)×ΔΨE12>n21×ΔΨE11+n22×ΔΨE22,与(n21+n22+3n1n2)×ΔΨE12n21×ΔΨE11+n22×ΔΨE22相矛盾.因此C[i,1]和C[i,2]不可能合并,定理2Page10成立.假定经过判断得知C[i,1]和C[i,2]不可能合并,则我们可以针对C[i,1]和C[i,2]进行增量式聚类.本文考虑了以下几种情况,并提出了应对措施.情况1.当ΔΨE110,ΔΨE220且ΔΨE120时,则C[i,1]和C[i,2]均保持不变.由于ΨE11和ΨE22的提高,使得C[i,1]和C[i,2]的内聚性均加强;同时由于ΨE12的降低,使得C[i,1]和C[i,2]之间的耦合性降低.也就是说在当前状态下,C[i,1]和C[i,2]的聚类效果比原来更好,因此保持不变.情况2.当ΔΨE110,ΔΨE220且ΔΨE120时,需要将C[i,2]中的部分实体移到C[i,1]中,而C[i,1]中原有实体保持不变.由于ΨE11的提高,使得C[i,1]的内聚性加强,因此C[i,1]中不会有实体移出到其它聚类;但是由于ΨE22和ΨE12的降低,从C[i,2]移出部分实体到C[i,1]中,可能会同时加强C[i,1]和C[i,2]的内聚性.情况3.对于其它情况,则需要将C[i,1]与C[i,2]中的实体重新进行聚类.此时移动是双向的,既有可能将C[i,1]中的实体移到C[i,2]中,又有可能将C[i,2]中的实体移到C[i,1]中.6实验测试6.1数据集与评价指标本文主要针对学术论文网络DBLP中的关联实体进行识别,涉及的实体类别包括论文、作者、会议、出版社和关键词.ERG由8528个节点构成,具体包括1033个论文节点、2405个作者节点、7个会议节点、7个出版社节点以及5076个关键词节点.节点间的关联包括A和P之间的write/written关联,C和P之间的publish/published关联,Pr和P之间的press/pressed关联,A和C之间的attend/attended关联.实验环境设置如下:主机采用Intel(R)Core(TM)3.40GHz,内存容量为8GB,硬盘容量为1TB,操作系统为MicrosoftWindows7UltimateEditionwithSP1(64bit).为了评价关联实体识别结果的准确性,本文定义了单一主题熵和单一聚类熵(分别如式(14)和式(15)所示),其中gk为对应于某一主题的标准聚类,Ci为某一实际聚类.单一主题熵为了衡量某主题的分散性,即本应隶属于同一主题的实体被分配到不同聚类中的分散程度(n为gk涉及的聚类数).单一主题熵越小,表明分散程度越低,聚类效果越好.单一聚类熵为了衡量某聚类的多样性,即某聚类所包含主题的多样性(m为聚类Ci包含的主题数).单一聚类熵越小,表明聚类中主题越集中,聚类效果越好.针对所有主题的单一主题熵和所有聚类的单一聚类熵求均值,即可分别计算综合主题熵H(g)和综合聚类熵H(C).最终通过对H(g)和H(C)求均值(即为综合熵值),用于综合评估关联实体识别的准确性.6.2参数测试本节我们针对关联实体识别过程中使用的参数进行测试.这些参数包括权衡因子α、衰减系数c和不一致性阈值δ.权衡因子α用来权衡实体类间关联强度对实体间关联强度的影响程度,衰减系数c用来表示实体间相关度在传递过程中的衰减性.图6和图7分别显示了权衡因子α、衰减系数c对识别准确性的影响.最终我们将权衡因子α设置为0.01,将衰减系数c设置为0.95.不一致性阈值δ用来检测结果验证过程是否满足终止条件.图8显示了关联实体类识别结果和关联实体识别结果之间的不一致性diff随着迭代次数的增加而进行变化的趋势.从图8可以看出,随着Page11迭代次数的增加,diff逐渐降低并趋于稳定,因此我们将不一致性阈值δ设置为diff的稳定状态0.3.6.3识别准确性测试首先,在不同的ERG规模下,我们将本文提出的两阶段关联实体识别模型2P-REIM与单阶段关联实体识别模型1P-REIM在识别准确性上进行了比较(如图9所示).1P-REIM直接对ERG中的关联实体进行识别,而没有考虑实体的模式特征,因此准确度较低.而2P-REIM是在关联实体类识别结果的基础上进行关联实体的识别,因此能够更加准确地评估实体间的主题相关性.图91P-REIM与2P-REIM的识别准确性比较其次,我们比较了实体关联强度的不同量化方法对识别准确性的影响(包括:方法1:仅考虑实体直接关联强度;方法2:在方法1基础上又考虑间接关联强度;方法3:在方法2基础上对SimRank++结果进行了修正).如图10所示,由于方法3同时考虑图10不同的实体关联强度量化方法对识别准确性的影响了直接关联和间接关联并对SimRank++算法进行了改进,更能有效地评估实体间主题相关性.另外,我们评估了识别结果验证过程对识别准确性的影响.如图11所示,随着迭代次数的增加,识别准确性不断提升,在第5次迭代后趋于稳定.6.4性能测试本实验将增量式验证策略与非增量式验证策略在性能上(包括验证时间和所耗费内存空间)进行了比较.如图12和图13所示,随着关联强度发生变化的边数增多,需要自我修正的代价就越大.本文采取了一系列改进措施,使增量式验证策略所需时间代价和空间代价均优于非增量式验证策略.图12增量式验证与非增量式验证所需时间代价对比图13增量式验证与非增量式验证所需空间代价对比7结论针对现有关联实体识别技术的不足,本文针对Page12关联实体识别的模型及相关算法进行了研究.为了更加准确地评估实体间的主题相关性,本文充分考虑了实体的模式特征与属性特征,提出了一种两阶段的关联实体识别模型2P-REIM.为了适应异构网络的动态变化,本文提出了一种增量式验证算法,基于迭代对识别结果进行增量式的验证并修正,既能保证识别结果的准确性,又能保证结果验证的高效性.最后,通过实验验证了这些技术的可行性和有效性.下一步,我们将针对更为复杂的异构网络(如:实体间存在多种关联关系)上的关联实体识别技术进行研究.
