Page1基于动态时槽的车联网协助下载方法研究刘建航1),2),3)孙江明4)毕经平1)边永超1),2)刘新宇1),2)李忠诚1)1)(中国科学院计算技术研究所北京100190)2)(中国科学院研究生院北京100049)3)(中国石油大学计算机与通信工程学院山东青岛266555)4)(中国科学院深圳先进技术研究院广东深圳518055)摘要随着人们对互联网依赖性的日益提高,人们希望随时随地接入Internet,即使在行驶中的汽车里.虽然通过3G或4G网络可以达到此目标,但是通过路边接入点AP(AccessPoint)接入互联网具有高带宽低延迟的特点.该文针对AP通信范围有限的问题提出了一套适应于高速公路场景下,通过AP接入点以及其它车辆进行协助下载的方法DSRelay.使用文中提出的算法,移动用户在一个AP区内不能完成它的下载任务时,下一个AP点计算用户和注册车辆在AP间盲区(DarkArea,DA)中的相遇时间和通信时长,选择一组协助车辆来携带用户所需数据.每辆协助车在DA中不同时间段内将数据传给用户,从而达到利用DA延伸移动用户的下载区域的目的.同时,文中对车速变化带来的影响进行了分析,并提出了相应解决方案.作者最后对该方法进行了仿真实验,实验结果表明该方法显著提高了下载的吞吐量,减少了间歇性连接带来的影响.关键词协助下载;车联网;动态时槽;存储转发;DTN;物联网1引言车联网(VANET)作为物联网产业的一个重要分支已经成为一个研究热点.车联网本身具有拓扑变化频繁,移动速度快的特点,尤其在高速公路场景中.但是相比于其它物联网分支,其供电能力、处理能力以及存储能力都不受太大的限制.汽车作为一个节点,使用移动服务提供商的3G或4G通信网络可以方便接入互联网,但是昂贵的费用和较差的服务质量成为制约这种接入方式发展的障碍.随着近些年路边接入点的大规模部署,研究者更多的是考虑使用802.11标准或是DSRC技术通过将汽车联入路边基础设施(AP接入点)实现与互联网的信息交互[1].然而由于汽车快速地大范围地移动以及AP的通信范围有限,这种接入方式的缺点是在两个AP通信范围之间存在盲区DA(DarkArea),从而导致了间歇性连接.当汽车节点在一个AP区域不能完成下载任务时,只能等待下一次连入AP后再进行下载工作.这种延迟在高速公路中尤其严重,其AP点通常设置在加油站或服务区内,距离较远,一般是在8~16km.使用802.11a/b/g/p,AP的通信范围为300~1300m,其中produc-tionphase在1km[1],汽车使用WLAN接入Inter-net,将有7~15km与互联网失去联系,如果汽车行驶速度为100km/h,则在DA中的运行时间为5~10min,这种延迟是很难让人接受的.另一方面,当一辆车刚刚离开AP区并提出联网请求,只能等5~10min后进入下一个AP区域内才能进行相应的操作.尽管Ott等人[1]提出了在车联网中用Disconnec-tionTolerant方法来保持连接,但是无法从根本上降低由于间歇性连接而产生的延迟.正是针对高速公路车辆和互联网间歇性连接的问题,本文提出了DSRelay,一种基于动态时槽的汽车网络协作下载方法,图1展示了这种方法的基本思想.当车载用户需要下载数据并且刚好在AP的通信范围内时,在t0时刻向AP1提出接入请求,AP1接入Internet,查找资源并下载给该用户,如果AP1根据用户车速计算出指定时间内无法完成全部数据下载,通知AP2准备协助下载.AP2收到请求后,根据本文提出的算法选择一组协助车辆装载用户所需数据.从图中t2时刻用户第一次接触到协助车一直到用户进入到AP2的通信范围,只要遇到协助车辆,用户就可以进行数据下载.实际上,在AP1和AP2之间的DA根据用户和每辆协助车的通信时间被分为不同大小的时槽,在时槽中接收各协助车携带的数据.该方法与其它相关研究的主要区别在于本文根据用户和协助车辆相遇时的通信时长将两个AP之间的通信盲区分成不同大小的时槽(slot).如果用户在一个AP之内无法完成下载任务,AP根据用户和其它车辆的车速计算相遇时刻并选取一组协助车辆携带用户所需要的数据,在其相遇时传递给用户.时槽的大小就由协助车辆和目标车辆的通信延迟决定.由于不同的车辆车速不同,维持通信的时间也不同,因此通信时槽的长度并不固定,我们称之为动态时槽.DSRelay利用AP间的通信盲区延伸了用户的下载区域,从根本上提高了下载的吞吐量.我们的工作主要集中在协助车辆的选取算法,算法根据AP内的注册车辆的车速及位置机会性地选取一组协助车辆携带用户所需信息.算法的目标是所有的协助车辆能够在预定的时刻和地点在尽可能少的通信碰撞的情况下将数据传递给用户.由于车速受诸多因素的影响,预定的通信区可能会产生重叠,本文也给出了由于车速变化而产生的通信冲突的解决方案.根据相关调研结果,本文是第一次提出了在高速公路场景中明确划分DA区进行协助下载的方案.仿真结果表明,通过该算法对DA通信区域的动态划分使得下载数据量提高60%以上.本文第2节为目前相关研究工作;第3节详细阐述本文的主要工作;第4节讨论模拟实验的结果,验证此方法的有效性;最后一节是结论和未来的工作.Page32相关工作自从Nandan等人[2]提出的SPAWN协议第一次将协助下载(Cooperativedownloading)的概念引入到车联网,越来越多的研究团队投入到协助下载方面的研究中.SPAWN协议与本文所做工作不同之处主要集中在其针对P2P的应用场景中,假定了目标车辆和协助车辆都下载同一资源,再通过其提出的方法寻找资源进行下载,而本文要解决的问题是用户下载不同的数据,利用AP间的DA由AP选择车辆提供协助下载服务.相似的研究中[3-4]重点集中在P2P汽车网络中在其它汽车里寻找所需要的资源进行协助下载方面的研究.Fiore等人[5]提出的协助下载方法主要考虑城市下载场景,通过以往经过AP的车辆的速度和相关数据来预测车辆的行驶路线与目标车辆相遇的时刻,选定协助车辆下载协助数据.其工作主要集中在AP的部署,不同协助车辆选择算法的评估以及数据分块方案.而本文的工作主要是高速公路场景下的车辆选择算法,DA下载区域的动态划分以及该算法对不同的车辆密度及车速变化带来的影响的解决方案.Trullols-Cruces等人[6]提出的高速公路场景下的协助下载方法的研究与本文比较类似.他们提出了高速公路场景下的协助下载模式,主要讨论通过同向车辆协助传输解决无线下载过程中产生的丢包问题以及通过对向车辆传输增加总的吞吐量.但是文中没有对对向车辆协助下载进行具体的规划,也没有提到相邻AP点如何根据车辆的速度选择不同的车辆协助下载数据.MobTorrent[7]提出了使用WIFI和WWAN相互补充利用同向以及对向车辆协助下载的方案,但是前提是需要所有车辆安装GPS导航以及WIFI接口和WWAN接口,当目标车辆提出下载请求时,通过WWAN提前通知AP站点,AP站点根据GPS的行驶路线信息将数据下载到对向或同向的车辆上.文中没有明确给出AP的选车算法和协助车辆携带的数据量,没有考虑由于车速变化产生的协助车重叠问题.其它相关工作包括Cabernet[8]通过优化建立连接的过程和传输层协议来提高传输性能.Balasubramanian等人[9]提出了利用AP点分布的差异来减少冲突的一种支持车内用户使用交互式应用程序的方法.Zhang等人[10]提出了汽车从路边基础设施上传和下载的方案.Mahajan等人[11]提出了一种测量WIFI连通性的方法.DTcoop[12]解决的是单向的信息广播分发问题,通过协助下载的方式减少高速情况下丢包率较高的问题.在文献[13]中作者提出了一种通过车间中继延伸AP通信范围的方法以便于车辆有更大的机会通过AP接入Internet.3主要工作在本文中,我们的工作集中在单用户下载请求.多用户协助下载将作为未来的研究工作.另外,应用场景假定在车辆行驶路线容易被预测的高速公路上,AP通过有线网络可以直接通信.每辆车都装有可用于车与AP通信和车车通信的WIFI接口.车辆进入AP通信区都要向其注册速度,运行方向等信息.根据运行方向,协助下载车辆可分为与用户同向的车辆集合v→与目标车对向的车辆集合v←.当目标车辆离开AP通信范围区后,当前AP选择注册列表中能够在与相邻AP的盲区中赶上用户并完成通信的汽车作为协助下载车辆,在协助车辆超越用户过程中完成下载.我们把这种同向协助下载过程称为SDCD(SameDirectionCooperativeDownloading).SDCD受目标车辆的速度影响,当目标车速为120km/h时,超越率仅为5%,对总的吞吐量提高不大,并且超越的发生地点大部分发生在对向车辆可以进行协助下载的区域,因此本文将SDCD作为未来的研究工作,实验中暂忽略同向车辆协助下载的情况.相比之下,高速公路上相邻两个AP点间对向行驶的车辆都会与目标车辆相遇,相遇发生地点和通信持续时间有所不同.下一个AP点需要做的是选择哪些车携带下载数据能够使总的数据下载量最大.我们把这种对向车辆协助下载过程称为ODCD(OppositeDirectionCooperativeDownloading),本文主要讨论ODCD下载方法.方法中要用到的参数见表1.AP通信范围LDA的长度D车辆通信半径d选择第n辆的时刻TnAP区内的下载速度WAp车间下载速度Wv移动用户注册时间ts移动用户车速vs第n辆选中车辆的注册时间tn第n辆选中车辆车速vn3.1AP的角色与功能每辆汽车进入AP区后都要注册自己的ID,平Page4均速度vn以及进入此AP点的时间tn.vn的值由3.2节式(3)计算取得.AP中维护了一个其通信范围内所有汽车的速度和注册时间信息列表List={(id0,v0,t0)…(idn,vn,tn)}.列表中的记录随着汽车的进入不断增加,每个AP点每隔30s相互交换自己的信息列表,如果一个AP发现其注册的车辆出现在相邻的AP的列表中,并且其注册时间比在自己的列表中的注册时间还要新,说明该汽车已经驶入另一个AP的通信范围内了,随即删除当前记录.当AP通信范围内有车辆提出下载请求,AP需要接入Internet,找到指定资源,并根据车速和当前时间,计算出用户在AP范围内的剩余时间,下载相应的数据块给用户.同时根据用户行驶的方向预测用户将要经过的下一个AP点,将尚未下载完成的内容通知给它,由下一个AP点设定协助下载方案.下一个AP点收到协助下载请求时,计算其List列表中每一辆车与用户的相遇时间,按与用户相遇的时间顺序从中选取一组车辆作为协助车辆放入集合M=(id0,v0,t0,B0,E0,T0),…,(idn,vn,tn,Bn,En,Tn),AP点将剩余的数据按协助车与用户的相遇时所能传输的数据量下载到协助车上,直至完成下载任务.为了将来多车协助下载考虑,本文假定AP同时只能为一辆车提供下载服务,因此只有当AP下载足够多的数据到协助车后才开始选择下一辆协助车.M中(idn,vn,tn,Bn,En,Tn)分别代表车辆ID,平均速度,注册时间,与用户通信开始时间和完成通信的时间以及选车时间,Bn和En可以通过式(1)和(2)取得,从结果可以看出选车时间Tn与Bn和En无关.Bn=Tn+D+2L-(Tn-ts)×vs-(Tn-tn)×vn-d=D+2L-d+vsts+vntnvs+vnEn=Bn+2d图2显示了当AP2在时间Tn选择Cn作为协助车辆,Bn是两车预期相遇时的时间,slotn是其通信持续时间.3.2协助汽车选择算法根据式(1)和(2),AP可以选择En后第一辆到达用户通信区域的汽车.AP选择协助车辆的原则是防止协助车在与用户通信时产生冲突,尽可能接近上一次下载完成的时间并且携带尽可能多的数据.(1)车速的确定3.1节提到了AP点在选择协助车辆时要根据车速选择,计算车辆相遇的时间和协助传输的数据量都需要用到速度这个值.然而,任何一辆汽车在行驶过程中都很难保持匀速行驶,如果AP使用汽车注册时的速度作为依据的话,很难保证协助车辆在预计的时刻与目标车辆相遇,完成协作下载的任务.幸运的是,尽管车辆在行使过程中车速是不可预测的,但是在高速公路场景下,车辆在某段时间内的速度变化还是遵循一定规律的.本文提出采用车辆在相邻两点间的平均速度与当前速度的加权平均值来定义车速.也就是说,如果一辆汽车在进入AP点时,AP已经通过与相邻的AP点交互信息得知该辆汽车在上一个AP点的注册时间,则这段时间的平均车速可以通过距离与运行时间的比值求得,车辆注册的车速为其中Dab是相邻两个AP点a和b之间的距离,L为AP的通信范围,ta,tb是车辆在AP点a和b的注册时间.α值的按照式(4)求解x确定:x·v+(1-x)Dab+L目标车与协助车相遇时的实测运行距离即通过式(3)和目标车与协助车相遇时的实测运行距离与运行时间的比值计算求得.经过实际测试α的取值范围在0.15~0.25之间,仿真实验中我们取α=0.2.(2)选择算法由于车辆进入AP区,每一辆车都要注册上文所提到的信息,AP点通过式(3)得出的速度v和时间t来确定在T时刻哪一辆车可以作为协助车.这里必须满足以下两个约束条件:①为了最大限度的利用DA传输数据,选定车辆在AP区内所下载的数据量应该能够满足该车和目标车辆相遇过程中传递的数据量,备选车辆(vn,tn)应该满足式(5),其中Tn为当前时间.Page5②为了避免传输冲突,两车在DA中与目标车辆通信区域不能重合.即后选车辆在与用户相遇的时刻应该在用户与前一个协助车辆通信完毕后.为了有效利用传输区域,应选择最先与用户相遇且满足上述要求的车辆.假如AP在Tf时刻选择的上一个协助车(idf,vf,tf,Bf,Ef,Tf),则新的协助车(idx,vx,tx,Bx,Ex,Tx)应该满足式(6).在AP点中不应该存在(vy,ty)满足式(5)和根据上述的两个约束条件,在DA中的数据传(6),且|vy|>|vx|.输总量为然而,这只是一个次优解.使用上述两个约束条件选择协助车辆会使得DA中的一些区域(这里我们称为空白区blankareas)没有被利用上.如图3所示,即在两个已选的协助下载车辆s1和s2中间可能出现没有携带数据的车辆n1.n1没有被选择的原因有两个,第1种可能是s2先于n1进入AP区,并且s2的车速比n1的车速要慢.当AP点选择s2时,n1并没有进入,所以根据上述算法,AP点选择s2作为s1后续的下载车辆进行数据下载;当n1进入AP区时,AP只能在列表中选择s2与用户通信结束后的车辆,而n1先于s2接触到目标车辆,所以也未能作为备选车辆.另一种可能是n1和s1与用户的通信区部分重合,根据式(6),尽管n1先于s2进入用户通信区,也未被选中.这个次优解决方案的优势在于在保持车速不变的前提下保证用户能够按序接收数据,而代价就是导致了出现图3的下载空白区,导致未能充分利用对行的车辆进行协助下载.然而在高速公路上车速未必会处于一个恒定状态,变化的车速可能会导致携带序列号较大数据的协助车辆超越前车,所以理想中的按序接收的目标很难实现.既然如此,下载空白区应该可以被利用以达到提高吞吐量的目的.也就是说当AP点发现n1可以先于s2接触到目标车辆,就可以将一部分数据下载到n1上,填补下载空白区,以保证在整个盲区中只要有对向车辆经过,就可以协助目标车辆进行数据下载.如果AP已经选中s2后再下载数据到n1,在车速不变的前提下,则用户一定会收到乱序的数据,那么用户按时间顺序下载数据,再由高层处理错序的数据段.算法片段如图4所示.1.foreachAP区域内的注册车辆Rido2.foreach已选车辆Sxdo3.ifRi.meetTime>Sk.meetTime4.andSk-1.endTime-Sk.meetTime>0do5.downloaddata[n]~data[n+t]toRi6.done7.done8.doneAP在选择下载车辆时先查看列表中的车辆是否先于已选车辆与目标车辆相遇(line3).如果是,则查看已选车辆之间是否存在传输空白区(line4),如果满足这两个条件,将数据块data[n]~data[n+t]下载到该注册车辆上(line5),其中t由空白区大小决定.AP把这种用于填补空白区的协助车辆放到集合R=(id0,v0,t0,B0,E0,RB0,RE0,T0),…,(idm,vm,tm,Bm,Em,RBm,REm,Tm)中,R中的车辆一定出现在M中车辆之间.这也意味着两类车与用户通信区的叠加.因此R中的车辆直到前车离开与用户的通信区后才开始通信,并且要在下一辆车进入用户通信区前完成通信.假如使用RBn和REn作为R中第n辆车开始通信和结束通信的时间,其前车和后车分别为(idk,vk,tk,Bk,Ek,Tk)和(idk+1,vk+1,tk+1,Bk+1,Ek+1,Tk+1),那么则DA中的下载总量最优解为RBn=Min{Bn,Ek};REn=Max{Bk+1,En}(8)∑ni=0显然式(9)的下载总量要高于式(7),图7展示了两种解在一个下载区内的下载总量的比较.另外每辆车经过用户车辆时都记录用户的车速及位置,当其进入AP通信区后通知AP,AP根据这些信息调整选车方案.3.3传输冲突解决如果在整个过程中,所有车辆的速度保持不变,那么协作下载过程中将不会产生冲突,每辆协助车都会在预定的时刻与用户相遇,并传递信息,这种理想状况下可以使下载达到最大值.然而虽然本文已Page6经提出了采用式(3)来减少由车速变化对系统性能带来的影响,但是车速仍然在很大程度上受到人为因素的影响,比如驾驶员的驾驶习惯,多变的路况条件等.所以本文所提出的协助下载方案仍然存在偏差,这将无疑导致传输冲突的产生.幸运的是,在高速公路上车速的变化并不大.尽管如此,我们仍然要考虑由于速度变化而产生的冲突问题.在协作下载过程中会有4种可能的情况发生:(1)顺序到达,未产生冲突如图5(a),这种情况是比较理想的,目标车辆按序接收即可.(2)当目标车辆正在接收数据块时,后续的车辆由于车速超过预期,提前进入了目标车的通信范围,如图5(b).这时后续车提出的传输请求被目标车辆拒绝,直到目标车辆完成前车的数据段的接收后再接收后续车的数据.显然这种情况下,后续车携带的协作数据可能未下载完成,则由目标车辆在新的AP区内提交下载请求,由AP点补充未完成的下载数据.(3)后续车超越前车,提前进入目标车辆的通信区域,如图5(c).如果此时目标车为空闲状态,则立即下载数据,下载过程中如果检测到其它下载请求,不予理睬,继续完成与当前下载车辆的下载任务后再响应下载请求.缺失的数据由进入新的AP区内重新下载.(4)后续车辆超越前车如图5(d),并在前车进入用户通信区域前完成了下载,则用户按时间顺序下载数据,再由高层处理错序的数据段.3.4连接请求协助传输由于高速公路AP点分布比较稀疏,用户仅有10%的机会通过AP接入互联网(AP通信范围1000m,盲区8~16km),如果用户刚刚驶出AP点,刚好有了下载的需求,那么要经过5~10min才能通过下一个AP点联入互联网,这个过程是难以接受的.本文提出用户可以通过协助的方式将下载请求通过同向或是对向的车辆尽快的传入最近的AP点,再由AP点按照前面所述的方法指定下载方案安排车辆协助传输,通过这种方式可以有效的减少延迟的产生.每辆车在进入AP通信区后,都与AP交互信息,信息中包括下一个AP点的距离.当一辆汽车离开AP点,并产生下载请求时,首先检测目标车辆所在的通信范围内的汽车,形成一个临时的邻居车速列表v→与目标车辆同向的用v→表示,与其相向的用v←表示.根据当前位置以及邻居车辆的车速和行驶方向计算出能够最先到达AP区的车辆.用户所有邻居节点到达AP的时间集合为式(10).因此,连接请求的协助车辆应该选择在S集合中t值最小的那辆车.s=ti|ti=vs·(T-ts)4实验验证本文通过仿真实验对该方法的性能进行了评估.实验场景:根据文献[14],高速公路的AP点通信范围设为800m,两个AP间相距8km,符合高速公路上AP点设置在加油站或服务区的实际情况.车辆的通信半径设为250m.协助下载过程中取1s作为用户与协助车辆建立连接所用的时间.AP区下载速率设为150KBytes/s[14],对向车辆协助下载速率设为50KBytes/s.车速在90~150km/h之间随机产生,在车速变化上,假定车速变化的概率为p,变化的范围在90~150km/h,并且符合对数正态分布[15],假定用户车速为90km/h.图7比较了在车速保持不变,车流符合Poisson分布(λ=10)时,不采用协助下载方法、前文提到的次优解和采用DSRelay方案的吞吐量情况.在没有协助下载的情况下,目标车辆只通过AP点进行数据下载,在0~30s的AP服务区内,车辆的下载速度是150KBytes/s,然后经过大约6min运行在盲区,与网络失去联系,直到进入下一个AP区才继续下载.结果显示离开下一个AP区之前下载总量达Page7到9MBytes.根据本文提出的算法,在用户驶出AP区100s后,就接收到了协助车辆发来的数据,在DA(30~350s)中使用次优解下载方案,用户可从协助车辆上下载到7MBytes的数据,而使用DSRelay算法可以下载9MBytes数据,吞吐量高于次优解的方法.很明显,这种方式显著的提高了车辆下载的吞吐量,减少了延迟.我们使用两种方式分别下载大小为8.1MB、27MB和55.3MB的视频文件和一个时长为119min的379.8MB的电影文件去比较时延和平均带宽.表2显示:无协助下载的方法没用利用DA区,从而导致了相对较长的时延,并随着文件尺寸增大,平均带宽逐渐减低.相比较而言,使用DSRelay方法下载55MB的数据仅用时1284s,效率提高了近三倍,42KB/s的带宽对于用户浏览视频文件是可以接受的.当用户在线观看时长为119min的电影时,总延迟为7908s,约132min.略高于电影长度.和非协助下载相比,性能有了非常显著的提高.表2下载不同大小文件的延迟(D.)和平均带宽(A.B.)文件长度/MB8.138320.923134.627.0177315.268339.555.3388014.2128442.8379.82781213.7790848.0从实验结果可知,假设用户车速保持在90km/h,如果用户刚一进入AP区就提出下载请求的情况下,使用两种方法下载小于4.5MB的文件,其平均带宽相同,因为用户在AP区内可以完成下载.但是如果一个AP区内不能完成下载的话,DSRelay方法就具有一定的优势,用户可以在运行到下一个AP区一半的时间即可继续下载工作,如表2所示,下载8.1MB的数据文件,此方法可使延时减少70%左右.但是用户一进入AP区就提出下载请求是最为理想的情况,实际上大部分请求发生在AP通信区的中间部分.这种情况下只要文件大于2.5MB左右,一个AP区就无法完成下载,使用DSRelay可以将延迟减少到50%以上.而如果文件下载需要2个AP区以上才能完成(数据量大于15MB),则表2的实验结果显示DSRelay可以比普通的下载方法提高2~4倍的带宽.需要特别指出的是,第1个盲区中最初约有100s的时间没有下载发生,是因为第2个AP点在收到请求后选取协助车辆,而最快的协助车辆与用户相遇发生也要在用户离开AP区的100s的时间.而第2个以后的盲区中协助下载从用户离开AP通信范围以后就产生了,这是因为第2个以后的AP点有足够的时间选择协助车辆,以使其可以在用户一离开AP通信区就能与协助车相遇.车流密度对AP选择协助车辆有很大的影响.图8显示了车流密度与吞吐量的关系.从图8可以看出当车流密度λ设为20时,盲区内车辆下载总量为7MB左右,而当λ=10和5时,吞吐量分别上升到8.5MB和9MB.显然,在假定车速不变的情况下车流越密集,目标车辆的吞吐量越大.这是因为下一站的AP点有更大的选择空间来选择协助车辆,以保证用户在行驶过程中尽可能的保持联通状态.然而,车速不变的假设是不成立的.正如3.4节所分析,汽车的速度受诸多因素的影响,即使在高速公路上车速也不会一直保持恒定,因此应该考虑车速变化对协助下载的影响.图8目标车速为90km/h不同车流分布吞吐量在λ=10的情况下,我们分别对车速的变化率为20%、30%和50%的情况做了仿真,如图9所示.Page8车速变化可能使协助车辆未在预期的时刻接触到用户,从而导致下载冲突,降低吞吐量.当发生冲突时,3.4节提出了解决冲突的方案.仿真结果显示,车速变化率越大,发生冲突的可能性越大,对吞吐量的影响也就越大.图10显示了不同λ值对应的不同车速变化率的冲突发生的情况,仿真中以秒作为单位.从结果可以看出,车流越密集,发生冲突的可能性越大.当λ=5并且p=50%共发生了70次冲突.当p=20%,冲突值下降到19次.相比之下,λ=10的时候,发生冲突的可能性略有下降,p=50%仍有56次冲突.而当λ值为20时,车速变化对结果产生的影响非常小,这是因为协助下载车辆间距很大,即使车速发生很大变化,也不会导致很大的冲突.当p=20%的时候仅发生两次传输冲突,这对结果的影响非常小.图10不同λ值对应的车速变化的冲突发生次数通过以上实验结果可知,(1)使用DSRelay协助下载方法显著提高了车辆下载的吞吐量,在下载大文件或是在线视频服务时优势尤为明显,(2)在保持车速不变的前提下,车流密度与吞吐量成正比,原因是车辆密度越大,可供AP选择的协助车辆越多.(3)在保持车辆密度不变时(λ=10),图9的实验结果表明车速变化越大,用户的吞吐量越低,这是因为协助车和目标车未在预期的时间相遇,导致传输冲突.实验结果也显示了考虑到车速变化因素,车流密度越大发生碰撞的概率也会越大,吞吐量越低.因此本文提出的方法更适合应用到具有一定车流密度的并且用户车速变化相对比较小的高速公路上,并且如果用户想提高下载的质量要尽可能的保持车速稳定.5结束语为了尽可能地利用原本没有下载发生的DA区下载数据以达到提高用户下载吞吐量的目的,本文提出了一种基于动态时槽的协助下载方法,通过对向汽车携带请求数据的方法在DA中提供协助下载服务;同时本文针对由于车速变化而导致的冲突提出了相应的解决方案.最后对方案进行了仿真,验证了其可行性.实验结果表明,如果汽车在一个AP点无法完成下载,使用DSRelay方法通过对向的车辆协助下载可以将下载的吞吐量提高70%以上,同时有效地降低了下载文件的延迟.下一步的工作包括研究相对速度与传输误码率的关系,比较SDCD和ODCD对结果的影响.另外通过路线预测和GPS导航等机制深入研究行车路线并不确定的城市场景协助下载方法.
