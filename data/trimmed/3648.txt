Page1无线传感器网络具有跟踪质量保证的节点选择算法任倩倩1),2)李建中1),2)王宇1)1)(黑龙江大学计算机科学与技术学院哈尔滨150080)2)(黑龙江省数据库与并行计算重点实验室哈尔滨150080)摘要目标跟踪广泛地应用于无线传感器网络的各个领域.该文研究无线传感器网络目标跟踪中的节点选择问题,提出了具有跟踪质量保证的跟踪节点选择算法.该算法在保证给定目标跟踪可靠性要求的同时对网络生存期进行优化.文中首先分析了影响传感器节点生存期的3个因素,包括节点感知数据的可靠性、节点剩余能量以及节点通信和采样的能量消耗.在此基础上建立节点生存期函数,在满足用户给定目标跟踪可靠性要求的前提下选择使网络生存期最大化的节点参与目标跟踪.实验结果表明该文所提出的节点选择算法可以有效延长网络生存期.关键词无线传感器网络;目标跟踪;节点选择;跟踪质量1引言移动目标跟踪是无线传感器网络最具代表性的应用之一,在基于传感器网络的战场监控、灾难预报Page2络覆盖.处于覆盖漏洞区域内的目标将无法被监测到,这导致目标跟踪任务的失败,也意味着执行目标跟踪任务的传感器网络生存期结束.因此,传感器网络的生存期完全由传感器节点能源供应时间所决定.为了延长传感器网络的生存期,减少网络能耗并且平衡节点能耗至关重要.在目标跟踪的许多应用中,用户要求跟踪系统具有一定的可靠性保证.然而,由于环境干扰和感知部件精度限制,传感器节点的感知数据通常存在着误差,尤其当节点电量将要耗尽时,传感器产生错误数据的概率会明显增加[4-5].感知数据误差为具有质量保证的目标跟踪问题研究增加了难度.显然,尽量选择提供可靠感知数据的节点参与跟踪可以提高目标定位的准确度.然而,由于每个传感器节点的能量消耗情况不同,如何选择参与跟踪任务的节点在保证跟踪质量的同时优化网络生存期是一个挑战性问题.首先,传感器节点的感知范围有限,只有位于目标周围的传感器节点能够感知到移动目标.而目标的运动轨迹具有随机性,通常位于目标出现较频繁区域内的传感器节点能耗更大.其次,传感器节点的通信范围有限,距离Sink较近的节点由于需要转发距离Sink较远节点的数据包而消耗更多的能量,这导致网络内传感器节点的能量消耗不平衡,而传感器网络的生存期由能耗较大节点的能源耗尽时间所决定.因此,一个有效的跟踪算法不但要具有跟踪质量保证,而且要考虑网络内节点能耗的节省和平衡.本文研究目标跟踪中考虑网络负载平衡的质量可控节点选择算法.首先,我们定义感知数据误差模型,该模型充分量化了传感器节点的感知数据误差和节点对目标是否在其感知范围内出现做出错误决策的概率.其次,我们分析了影响节点生存期的3个因素包括节点剩余能量、执行目标跟踪任务的能耗和节点发出错误警报的可能性,建立节点生存期和目标跟踪质量的依赖关系.在此基础上,提出了质量可控的目标跟踪算法.该算法在保证用户给定跟踪质量要求的前提下,选择使网络生存期最大化的节点子集合参与目标跟踪和定位任务.为了有效支持所提出的节点选择算法,本文设计了基于动态跟踪子树的拓扑结构.本文贡献总结如下:首先,分析了影响传感器节点生存期的3个因素,包括:(1)节点发出错误警报的可能性;(2)节点的剩余能量;(3)节点参与目标跟踪的能量消耗.建立节点生存期和上述3个因素的函数关系.其次,提出了在保证跟踪质量要求的前提下,优化网络生存期的节点选择问题,并给出两种节点选择算法.最后,研究动态跟踪子树的建立与维护以支持本文所提出的节点选择算法.并且,通过模拟实验验证了所提出算法的正确性和有效性.本文第2节介绍相关工作;第3节描述文中所提出算法所采用的系统模型,包括网络假设、感知数据误差模型和能量模型;第4节介绍基于动态跟踪子树的网络拓扑;第5节详细描述两种节点选择算法;第6节评估所提出算法的性能效果;第7节总结全文.2相关工作近年来,基于无线传感器网络的目标跟踪引起了广泛关注,并提出了有效的跟踪方法.本节仅总结与本文研究内容相关的研究工作,即基于节点选择的目标跟踪和考虑感知数据误差的目标跟踪.文献[6-8]提出基于节点选择的目标跟踪机制,通过预测目标的出现区域或设定节点分类规则以选择部分节点跟踪目标.文献[6]提出信息驱动的目标跟踪方法,该方法考虑节点通信资源和计算资源的限制,综合传感器节点采集的数据和接收到邻居节点的数据信息选择部分节点协作完成目标跟踪任务.文献[7]提出一种分布式目标分类和跟踪方法.该方法将整个传感器网络监测区域划分为多个子区域,使处于潜在目标轨迹周围的节点协作检测目标的出现.当所关注目标出现后,跟踪过程将被激活.文献[8]提出基于协作信号处理的目标跟踪机制.所提出跟踪方法唤醒处于监测区域四个顶角位置的节点以监测潜在目标.文献[9]将整个跟踪过程划分为目标监测和目标定位两个阶.在目标监测阶段,采用密度控制算法以选择适当的节点子集监测目标.在目标定位阶段,提出具有最小能耗保证的节点选择和目标定位方法.文献[10]研究网络能源消耗和跟踪质量的平衡问题并提出了具有信息质量保证的数据收集算法.该算法利用三角测量方法在跟踪误差允许的条件下选择处于活跃状态的节点.文献[11-12]设计并实现了一个分布式目标跟踪系统,该系统采用能源管理机制使传感器节点在睡眠和工作状态之间轮转以节省网络能耗.同时该系统在目标监测、分类和跟踪的过程中采取了节点唤醒策略和分组聚集机制,以达到跟踪延迟和能源节省的平衡.文献[13]给出一个最小轮廓线跟踪方法.该方法研究根据目标的运动Page3学特征,将移动目标可能出现区域限定在一个最小轮廓线内,唤醒处于最小轮廓线内的节点参与跟踪任务,从而最小化参与跟踪节点数目.然而该方法需要所有处于最小轮廓线内的节点持续保持工作状态.上述工作通过在目标跟踪过程中引入节点选择机制,选择部分节点协作跟踪目标达到节省网络能耗的目的.然而几乎没有工作关注网络的生存期问题,降低网络能耗不等于会延长网络生存期.本文研究优化网络生存期的跟踪节点选择策略,在保证跟踪质量的同时最大化网络生存期.3模型定义3.1网络假设不失一般性,假设传感器网络由m个节点组成,节点ID从1~m编号.所有节点具有计算、通信和感知能力.传感器节点通常采用电池供电,其能量、通信带宽和计算能力有限.为了方便算法描述,本文作如下两个合理假设:(1)假设传感器网络内节点均匀分布在监测区域内,这些节点可以获得自己的位置坐标信息通过GPS或其他定位机制.(2)所有传感器节点的感知范围相同,并可以近似表示为以Rs为半径的圆盘区域.所有传感器节点具有相同的通信范围,最大通信距离为Rc.Rc为Rs的整数倍.我们进一步假设整个网络内节点自组织形成一棵路由树.其中,Sink节点为树根节点,位于路由树的第0层.每个节点存储的路由信息包括:父亲节点ID、孩子节点个数以及所在路由树的层数等.3.2感知数据误差模型当跟踪目标出现在传感器网络的监测区域内,位于目标周围的传感器节点会产生感知数据.由于感知部件的精度受限以及环境干扰,感知数据往往存在误差.用si表示传感器节点i所采集的准确感知数据(1im),则传感器节点i实际采集到的感知数据oi可以表示为oi=εi+si,目标与节点i的距离Rs其中εi为感知数据的误差.我们采用高斯分布描述感知数据的误差,即εi~(0,σ2).参数σ可以通过训练历史数据获得.给定感知数据阈值T,如果oiT,则认为节点i监测到跟踪目标,即目标出现在节点i的感知范围内.用“1”表示节点i做出“监测到跟踪目标”的决策,而“0”表示节点i做出“未监测到跟踪目标”的决策.由于网络内的节点独立做出决策,因此传感器节点i的决策bi可以表示为由于感知数据中存在误差,传感器节点可能会做出错误决策.例如:移动目标已经进入节点i的感知范围,节点做出决策bi=0;或者移动目标未在节点i的感知范围内,节点做出决策bi=1.我们通常更关注后者错误决策发生的可能性,因为该情况下所产生的数据会参与目标定位操作,影响目标定位的准确程度.下面将给出节点做出错误决策的可能性概率.定义1.误报概率.当移动目标处于节点感知范围之外时,节点i做出决策bi=1的概率定义为误报概率,用pi表示.根据文献[15-16],pi可以表示为pi=p(bi=1|si<T∧oiT)=QT()σ(3)为了进一步量化传感器节点发出错误警报的可能性,我们用似然函数描述节点i发出错误警报的概率为Tp()i=1Li0,σ其中,φ为标准正态分布的概率密度函数.相应地,pi的对数似然函数可以表示为LnLi0,σ用FAi=LnLi0,σ误警报的可能性,则FA值越小,节点所产生感知数据越可靠.给定误报阈值ξ,当FAiξ时,我们说节点i所作决策可信.3.3能量模型假设网络内节点的初始能量相同.用Cs别表示节点i发送和接收一个数据包所消耗的能量.Cs性要求等因素的影响.通常情况下,如果网络内节点i和CrPage4采用相同的功率和频率收发数据,则可以认为所有节点的Cs耗,如果接收消息的目的节点位置已知,源节点可以适当调整无线部件工作频率.因此,当节点i向距离较远的传感器节点发送数据时,Cs系统对通信可靠性的要求也会影响通信能耗.通信的可靠性要求越高,则节点采用的功率越大,相应的i和Cri值也越大.由于传感器节点在通信之前已经Cs确定通信部件工作的功率和频率,因此对每个传感器节点Cs一个感知数据消耗的能量,该值与节点所采集的信号属性相关.4基于动态树结构的网络拓扑为了实现目标跟踪过程的节点选择策略,本文采用基于动态子树的网络拓扑结构.在该拓扑结构下,监测到目标的节点形成一棵动态跟踪子树.为了节约网络中的能量消耗,该结构可以与能源管理协议相结合.例如采用文献[17]提出的节点调度协议使动态跟踪子树外节点处于睡眠状态.4.1构建动态跟踪子树当目标在网络的监测区域内出现时,任意监测到目标的节点i(即做出决策bi=1的节点)计算其FAi值.如果FAiξ,则节点i在网络内广播发现目标数据包DT-Packet.DT-Packet由一个二元组〈FAi,li〉组成,其中li为节点生存期的期望值,第5节将给出li的定义.父亲节点j接收到来自孩子节点i的DT-Packet后,对数据包进行处理,然后向上层节点转发.所有广播和转发DT-Packet的节点形成一棵动态跟踪子树.任意节点j,处于动态跟踪子树的孩子节点集合可以表示为Dj={i|FAiξ,i与目标距离Rs,1im}4.2修剪动态跟踪子树父亲节点接收到其孩子节点的数据后,执行一系列的数据处理操作.根据所接收数据包类型的不同,父亲节点主要执行的处理操作包括两种类型:(1)选择参与目标跟踪的孩子节点;(2)聚集和转发数据包.定义2.发现节点.对于任意节点i,如果i能够监测到目标,并且满足条件FAiξ,则称节点i为发现节点.定义3.跟踪节点.由节点选择算法选定参与目标跟踪的发现节点称为跟踪节点.父亲节点接收到来自孩子(发现)节点的DT-Packet后,统计接收到DT-Packet的个数,如果接收到数据包的个数大于k(跟踪节点的最小数目,k值由用户指定或根据目标定位算法需求确定),父亲节点将对所在动态子树分支进行剪枝,即通过执行节点选择算法选择候选跟踪节点,未被选中的发现节点将被剪掉.否则,所有发现节点为候选跟踪节点.第5.2节将给出具体的节点选择算法.父亲节点将候选跟踪节点信息聚集后转发给Sink节点,Sink节点对候选跟踪节点再次执行节点选择算法,确定最终的跟踪节点集合.被选中的节点监测跟踪目标,并产生感知数据.其它非跟踪节点脱离动态跟踪子树,这些节点可以根据睡眠调度规则周期性转入睡眠状态以节省能量.父亲节点接收到跟踪节点对目标产生的感知数据后,经聚集转发给Sink节点,Sink节点执行目标定位算法.现有大部分目标定位算法[18]都可以应用于本文所提出的算法.4.3维护动态跟踪子树随着目标的移动,部分跟踪节点将无法监测到目标(此时称跟踪节点失效),同时会有新的非跟踪节点发现目标,因此动态子树需要定期进行更新和维护.本节主要从节点加入动态子树和失效跟踪节点退出动态子树两个角度研究动态子树的维护问题.(1)节点加入动态跟踪子树.随着跟踪目标的移动,会有新的节点监测到目标,这些节点将广播DT-Packet,申请加入动态子树.具体过程如下:任意监测到目标的非跟踪节点i,如果FAiξ,节点i广播DT-Packet.等待固定时间间隔后,如果接收到来自父亲节点的确认信息,i将加入动态跟踪子树.否则,节点i继续保持原来的调度模式.父亲节点j接收到来自孩子节点i的DT-Packet后,对节点i是否可加入动态跟踪子树做出如下决策:如果其所在树的分支内存在跟踪节点退出动态子树,或者监听到招募新跟踪节点的消息,则向节点i发送允许加入动态跟踪子树的确认信息.(2)节点退出动态子树.对于任意跟踪节点i,当目标移出其感知范围,i将向父亲节点发出退出子树请求.父亲节点接收到i的请求消息后,更新动态子树内跟踪节点信息,同时广播信息招募新的跟踪节点.Page55具有跟踪质量保证的节点选择算法当目标在传感器网络的监测区域内出现,所有跟踪节点以及转发跟踪节点数据的传感器节点形成一棵动态跟踪子树.跟踪节点收集目标的信息并转发给Sink节点对目标进行定位.为了能够在保证跟踪质量的同时最大化网络生存期,本节研究以网络生存期为优化目标的节点选择问题.我们首先在5.1节给出节点生存期定义,5.2节给出具有跟踪质量保证的节点选择算法,该算法从发现节点集合选择参与目标跟踪的节点,以减少动态跟踪子树内节点个数,从而降低整个网络内能量消耗.表1显示了文中所用符号及其含义.符号mRsRcNWεilipi5.1预备知识为了提高目标跟踪系统的准确度,我们尽量选择FA值小的节点参与目标跟踪.FA值越小则节点提供感知数据的可靠程度越高.用户可以指定所选择跟踪节点集合的误报阈值FAT,以限定跟踪节点集合误报数据的可能性.对于任意给定FAT值,跟踪节点的选择结果并不唯一.因此,我们可以通过选择不同的跟踪节点平衡网络内节点的能源消耗.尽量选择FA值小的节点作为跟踪节点可以提高目标跟踪的可靠程度,然而会导致这些节点的能量消耗过大,从而降低网络生存期.不失一般性,假设当节点i的误报数据可能性为FAi时,该节点被选定为跟踪节点的可能性为h(FAi).h(FAi)表示节点误报概率FAiξ的可能性.显然,h(FAi)为非递增函数.则每个周期节点i的能量消耗可以表示为i=h(FAi)·(CsCcost其中,Ccosti每个周期消耗的能量,c表示节点i的孩子节点中跟踪节点的个数.假设节点i的剩余能量为Cli,则节点i生存期的期望可以表示为与文献[19]类似,我们将网络生存期定义为从网络布置开始至网络内第1个传感器节点能源耗尽的时间间隔.本文所提出算法也可以应用于q(q>1)覆盖的网络,即网络内任意位置由q个传感器节点覆盖.此时,可以将覆盖任意位置的q个节点看成是一个能量较大的节点,该节点的能量为q个节点的能量之和.因此,传感器网络的生存期可以表示为5.2跟踪节点选择算法本节研究具有跟踪质量保证的节点选择(TrackingQualityAwareNodesSelection,TQANS)问题,并提出有效的节点选择算法,其目标是在保证给定跟踪质量的同时最大化网络生存期.定义4.TQANS问题.给定发现节点集合N={n1,n2,…,n|N|},要求找到一个|N|元向量(y1,y2,…,y|N|),其中yi∈{0,1}.满足条件:(1)mini∈N∧yi≠0yili的值最大;(2)∑i∈N(3)∑i∈N其中,FAT值由用户给定或根据实际应用的需求设定.k为跟踪节点的最小数目,k值由用户指定或根据目标定位算法需求确定.本节提出的两个跟踪节点选择算法分别为:基于贪心启发式的选择算法和基于条件置换的选择算法.基于贪心启发式的算法从发现节点集合中贪心地选择跟踪节点,具有时间复杂度低的优势.而基于条件置换的选择算法在基于贪心启发式算法的基础上根据节点的FA和l属性值对选择结果进行调整,优化选择结果.5.2.1基于贪心启发式的跟踪节点选择算法基于贪心启发式的选择算法(G-TQANS)采用著名的贪心策略,从发现节点集合中增量地选择跟踪节点.为了采用贪心策略,我们定义一个收益函数g.G-TQANS每次选择使收益函数g最大化的节点.给定发现节点集合N={n1,n2,…,n|N|},对于本节所解决问题,节点ni的收益函数g的定义如下Page6根据式(10)定义的贪心规则,本文设计了一个基于贪心启发式的算法G-TQANS,如算法1所示.初始化时,确定发现节点集合N,同时设置|N|元向量(y1,y2,…,y|N|)的初值为0(语句1~3).接下来,算法选择当前最优的节点ni并将其对应yi值置1(语句5~8).此后,算法进入一个循环过程,每次从剩余节点集合中选择一个使收益函数g最大化的节点nj,并将其对应yj值置1(语句9~16).当满足条件(2)和(3)时退出循环,算法结束.向量(y1,y2,…,y|N|)中对应yi值为1的节点即为跟踪节点.该算法中,计算g(ni)需要时间O(1),因此整个算法的时间复杂度为O(|N|log|N|).算法1.G-TQANS算法.输入:发现节点集N,FAT输出:满足FAT阈值条件并使lnetwork最大化的|N|元向1.FOR(i=1,…,|N|)DO2.yi=0;3.ENDFOR4.FAsum=0;5.从N中选择一个节点ni使g(ni)最大化并且满足条件FAsumFAT;6.yi=1;7.N=N-{ni};8.FAsum+=FAi;9.WHILE(∑i∈N10.从N中选择节点nj使g(nj)最大化;11.IF(FAsum+FAjFAT)THEN12.yi=1;13.FAsum+=FAi;14.ENDIF15.N=N-{ni};16.ENDWHILE17.输出|N|元向量(y1,y2,…,y|N|).5.2.2基于条件置换的节点选择算法基于贪心启发式的节点选择算法(G-TQANS)每次做出当前最佳选择,并不能保证整体最优性.而且当FAT值设置较小时,该算法可能无法找到满足条件(3)的解.因此,本节提出了基于条件置换的节点选择算法S-TQANS,该算法在G-TQANS基础上根据节点的FA和l属性值对选择结果进行替换.S-TQANS算法首先按照节点l值为集合N内发现节点排序,使得N内节点满足条件l1l2,…,l|N|(语句1).接下来算法选择N中前k个节点为候选跟踪节点加入集合W,将向量(y1,y2,…,yk)中每个元素的值置1.对候选跟踪节点的FA值求和,如果满足条件∑i∈W2~5).否则,算法进入一个循环过程,每次从W中选择FAi值最大的节点ni,并且用集合N-W中l值最大并且满足条件FAi>FAj的节点j替换nj(语句9~20).当满足条件∑i∈W时,退出循环,算法结束.该算法的时间复杂度为O(|N|log|N|+k2).算法2.S-TQANS算法.输入:发现节点集N,FAT输出:满足FAT阈值条件并使lnetwork最大化的|N|元向1.将N内节点按照l值降序排序;2.将N内前k个节点加入W;3.FOR(i=1tok)DO4.yi=1;5.ENDFOR6.FOR(i=k+1to|N|)7.yi=0;8.ENDFOR9.WHILE(∑i∈W10.从W中选择FA值最大的节点ni;11.yi=0;12.从N-W中选择l值最大的节点nj;13.IF(FAi>FAj)THEN14.W=W∪{nj}-{ni};15.yi=1;16.ELSE17.N=N-{nj};18.GOTO语句12;19.ENDIF20.ENDWHILE21.输出|N|元向量(y1,y2,…,y|N|).6实验结果及分析本节通过模拟实验验证了所提出的节点选择算法的性能.本节实验中,我们考察了网络规模、参与跟踪节点数目和跟踪目标的最大移动速度值变化时,本文所给出的算法导致网络生存期的变化情况.6.1实验设置我们用VC++6.0语言开发了无线传感器网络模拟环境.在该模拟环境中,传感器节点部署在1000×800个单位的平面区域内.由于传感器节点的数量是影响跟踪效果的一个重要因素,给定节点分布区域大小,节点数量与节点密度直接相关.在本Page7实验中,我们设定节点数目的变化范围是从1200~3000,默认的传感器节点数目为1600.由于选择跟踪节点个数会影响节点能量消耗进而影响整个网络的生存期,本实验考察跟踪节点个数在3~6之间变化时,网络生存期的变化情况.跟踪目标的移动速度决定了每个节点连续参与目标跟踪的时间长短,因此与每个节点的能量消耗密切相关,我们考虑了跟踪目标的最大移动速度为10和20个单位两种情况.实验中按照文献[20]设置节点能耗模型参数值,所有节点的初始能量值相同,并设置为50mJ.节点发送和接收一个字节消耗的能量分别为0.0144mJ和0.0057mJ.每个数据包的长度为32Bytes.采集数据和处理数据消耗的能量忽略不计,因为通信消耗的能量远高于两者能耗.在实验中,目标分别按照直线和曲线两种轨迹运动,目标作曲线运动时运动方向随机生成.文中所提出G-TQANS算法和S-TQANS算法分别在传感器节点和Sink节点上运行.6.2结果分析图1和图2分别给出当选择跟踪节点数目为3和4时,网络内节点数目分别为1200、1600、2500和3000时,本文所提出的跟踪算法跟踪直线运动目标图1目标作直线运动,跟踪节点个数=3时,图2目标作直线运动,跟踪节点个数=4时,的实验结果.从图中我们可以看出,随着传感器节点数量的增加,网络生存期明显增加.这是因为网络内节点数目增加使得网络密度变大,算法在选择跟踪节点时具有更多的选择,更有利于降低节点的平均能耗.本文所提出算法的设计目标是保证网络内节点的能耗平衡.当网络密度增加,发现节点的数目增加,每个节点被选中为跟踪节点的平均次数降低,每个节点的平均能耗降低,从而导致每个节点的生存期增加.而网络生存期的大小由生存期最小的节点所决定,节点的生存期整体增加必然导致网络生存期的增加.图3和图4分别显示了当选择跟踪节点个数分别为3和4,网络内节点数目在1200~3000之间变化时,本文所提出的算法跟踪曲线运动目标的实验结果.从图中我们仍然可以看出,本文所提出的算法性能对于网络规模的依赖性.从上述图中也可以看出,在相同参数设置的情况下,目标做曲线运动时,算法所带来的网络生存期明显低于目标做直线运动的情况.目标做直线运动时,网络生存期的最大值约为9600个时间单位,而目标做曲线运动时,网络生存期的最大值约为4800个时间单位.这是因为目标做曲线运动时,运动方向的随机性使得目标可能在部分节点的感知区域内逗留时间较长,导致这些节图3目标作曲线运动,跟踪节点个数=3时,图4目标作曲线运动,跟踪节点个数=4时,Page8点的能量消耗较大,不利于网络内节点的能耗平衡,从而降低了整个网络的生存期.而目标做直线运动时,在各个节点感知范围内所处时间更为平均,因此更有利于平衡节点能耗,从而延长网络生存期.从上述图也可以看出,跟踪目标的移动速度与网络生存期不存在明显的依赖关系.当目标移动速度较低时,目标平均连续处于每个节点感知范围内的时间增加,然而在整个目标跟踪过程中,处于每个节点感知范围内的平均时间趋于不变,因此这不会影响算法平衡网络内节点能耗的目标.该组实验也证明了本文所提出的算法能够适用于各种具有不同速度的跟踪目标.图5显示了目标作直线运动和曲线运动时,跟踪节点个数分别为3、4、5、6时,网络生存期的变化情况.在该组实验中,网络内节点数目为1600,目标的最大移动速度为10个单位.从图中可以看出,当跟踪节点个数从3增加至5时,网络生存期明显降低.当跟踪节点个数从5增加至6时,这种降低趋势减缓.这是因为网络生存期由网络内能量消耗较大的节点决定,而能量消耗较大的节点主要来源于跟踪节点和转发跟踪节点数据的中间节点.当跟踪节点数目增加,不但监测目标采集感知数据的节点数目增加,转发节点的数目也会相应的增加,这使得网络内节点的平均能耗显著增加,因此网络生存期会明显降低.当转发节点增加到一定的数量后,增加的幅度会有所降低.因此当跟踪节点数目在5~6之间变化时,转发节点增加趋势降低,因此网络能耗增加的趋势也会有所缓解,从而使得网络生存期的降低趋势放缓慢.图5目标作直线运动和曲线运动时,跟踪节点7结论作为无线传感器网络的一个重要研究问题,目标跟踪已经得到了广泛研究.本文研究目标跟踪应用中具有跟踪质量保证的节点选择算法,综合考虑感知数据的误差和节点能耗对跟踪质量和节点生存期的影响,研究在保证跟踪质量的前提下最大化网络生存期问题,并给出有效的节点选择算法.迄今为止,本文是第一个考虑最大化网络生存期的目标跟踪的研究工作.最后,通过模拟实验验证了所提出方法的有效性.
