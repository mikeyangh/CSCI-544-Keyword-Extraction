Page1随机模型检验研究1)(南京大学计算机软件新技术国家重点实验室南京210093)2)(新加坡国立大学计算学院计算机科学系新加坡117417)3)(南京航空航天大学计算机科学与技术学院南京210016)摘要随机模型检验作为模型检验理论的延伸和推广,可用于验证分析系统模型的定性或定量性质,其已经应用到随机分布式算法验证、通信协议性能分析甚至是系统生物学等跨学科领域.从20世纪90年代末至今,随机模型检验引起了形式验证等领域的广泛关注,并取得了很大的进展.该文追溯了随机模型检验的渊源,系统地概括了其最基本的原理及几类典型的PCTL、概率的LTL、PCTL和CSL模型检验随机系统的算法框架.然后归纳总结了随机模型检验的主要研究方向及其进展,分析了基于随机模型检验的验证过程及其优势与劣势,并分类列出了目前出现的随机模型检验工具.最后介绍了随机模型检验的应用领域并指出了其未来的应用挑战.关键词形式验证;马尔可夫随机过程;随机模型检验;定量分析1引言系统验证是检验系统是否满足已经识别的需求,其作为保证计算机系统正确性的有效方法一直是业界和学术界研究的焦点问题.目前常用的系统验证方法有:同行审查(peerreview)、测试、模拟、结构化分析、形式验证(formalverification)及某些方法的组合等[1].其中,形式验证借助严格的数学方法来完备地检查系统是否满足性质规约,同其他验证方法相比,其具有集成于系统的设计过程、较高的覆盖率和完备性及节省验证成本等优势[2].形式验证的发展大体上经历了以下有代表性的阶段:(1)1936年,Turing关于Turing机停机问题的思考[3],及其在1949年提出需人工证明程序的终止和正确性[4]等,可以看作是形式验证的雏形;(2)20世纪60年代末和70年代,Floyd和Hoare等开展的程序正确性证明研究[5-6]推动了形式验证的发展,他们试图用数学的方法来证明程序的正确性并发展成了各种程序验证方法,但受到程序规模的限制,这些方法并未完全达到预期的效果;(3)1977年,Pnueli提出反应式系统规格说明和时序逻辑(TemporalLogic,TL)的验证方法,将时序逻辑引入形式验证领域[7]及20世纪80年代初,Clarke和Emerson[8]、Queille和Sifakis[9]分别提出模型检验(modelchecking)的形式验证方法.模型检验通过将待验证系统约束为有限状态模型、待验证需求性质约束为命题时序逻辑[10],把系统验证这一不可判定问题变换为可判定问题.模型检验是一种自动地完备判定有限状态系统模型是否满足给定时序逻辑描述性质的方法,其强调的是系统功能行为的绝对正确,回答的是系统是否满足用户的功能需求性质.目前,模型检验已成功应用于诸多工业领域.然而计算机系统正变得日趋庞大和复杂,很多实际的系统被赋予随机行为特征[1],其原因可分为3类:(1)系统本身包含随机性,如随机化算法(randomizedalgorithm)的使用;(2)系统运行环境的复杂,造成系统构件间调用过程的失败或传递消息的丢失等随机故障发生;(3)对系统进行性能评价和分析,需要人为地增加随机变量来刻画其相应的性能指标.具有以上各种随机行为特征的系统被称为随机系统.用模型检验的方法对随机系统进行自动的形式验证,定量分析其满足用户的功能或非功能需求性质的程度,即随机模型检验(stochasticmodelchecking)或概率模型检验(probabilisticmodelchecking)[11-12].Clarke、Emerson和Queille在“TuringLecture”中把随机模型检验列为模型检验研究的一个重要方向[11].近十年随机模型检验取得较大进展,出现了一些著名的研究组,如英国牛津大学Kwiatkowska教授课题组、德国亚琛工业大学(RWTHAachenUniversity)Katoen教授课题组和德国萨尔大学(SaarlandUniversity)Hermanns教授课题组等.本文将从随机模型检验的渊源、原理、进展、验证过程及应用与挑战等方面,对其作阐述分析.本文第2节追溯随机模型检验的渊源,介绍其相关的最基本理论,给出典型的随机模型检验算法框架;第3节总结归纳出随机模型检验的7个重要研究方向,并分别对其进展作对比分析;第4节分析基于随机模型检验的验证过程及其优缺点,并对其支撑工具作分类介绍;第5节指出随机模型检验应用的几个方面的挑战;最后对全文进行总结.2随机模型检验原理关于随机模型检验的研究可以追溯到:20世纪80年代初,Harts、Pnueli和Sharir用离散时间马尔可夫过程建模概率程序,研究概率并发程序的终止性质[13-14]和概率程序性质的证明方法[15].在后续的随机模型检验研究中,有以下里程碑式的成果:(1)Vardi和Wolper提出一种基于自动机理论的定性线性时间性质的验证方法[16-17],Pnueli和Zuck给出这一类问题的模型检验算法[18],Courcoubetis和Yannakakis研究了线性时间框架下的定性、定量验证离散时间马尔可夫链,并分析了其时间复杂性[19-20];(2)Hansson和Jonsson提出一种新的描述系统时间和可靠性的时序逻辑PCTL,并给出了其模型检验算法验证随机系统[21],Bianco和deAlfaro对该时序逻辑进行扩展并给出其模型检验算法验证概率和非确定性系统[22];(3)Aziz、Sanwal、Singhal和Brayton提出一种新的时序逻辑CSL,并给出其模型检验连续时间马尔可夫链算法[23-24],Baier、Haverkort、Hermanns和Katoen对这一理论做了进一步的完善[25-26].近年来,随机模型检验取得了较大进展,本节将简要介绍其最基本理论.如图1所示,随机模型检验实际上是经典模型检验理论和应用方面的延伸和推广.Page32.1基本的随机系统模型及其度量随机模型检验所验证的系统模型是一类具有马尔可夫特性①的随机过程式系统模型.此类随机过程由俄罗斯数学家马尔可夫于1907年提出,可根据其状态空间和索引参数性质类型对其进行分类,其中:离散时间马尔可夫链(Discrete-TimeMarkovChain,DTMC)是离散状态空间离散时间的马尔可夫随机过程,连续时间马尔可夫链(Continuous-TimeMarkovChain,CTMC)是连续状态空间连续时间的马尔可夫随机过程,而马尔可夫决策过程(MarkovDecisionProcess,MDP)是离散状态空间离散时间且带有非确定性选择的马尔可夫随机过程,是基于马尔可夫过程理论的动态随机系统的最优决策过程.与随机过程中把马尔可夫过程作为随机变量序列的定义有所不同,在随机模型检验中其定义是基于状态的观点,可看作是标号迁移系统(LabelledTransitionSystem,LTS)的变体,其关系如图2所示.(1)DTMCDTMC可定义为M=(S,P,s0,AP,L),其中:S是可数的非空状态集合,表示被建模系统的所有可能配置状态;P:S×S→[0,1]是迁移概率函数,对于s∈S,∑移的概率值;s0是初始状态;AP是原子命题的集合;L:S→2AP是标号函数,可用于表示用户的需求,即系统应该满足的性质.DTMC把LTS中某一状态后继状态间的非确定性选择变换成了概率选择,时间在DTMC模型中以离散的时间步向前推进,可以将其理解为精确的离散时间单元,或者是对时间的抽象,即迁移不伴随任何具体的时间信息.在随机模型检验中,假定:(1)DTMC是时间齐次(time-homogenous)②的,即迁移概率独立于时间;(2)DTMCM是有限的;(3)出于算法运算目的,迁移概率是有理数.DTMC的路径表示被建模系统的执行,即系统可能的事件行为,可描述为状态的无限序列s0s1s2…∈Sω,其中s0是初始状态,对于i0,P(si,si+1)>0.令Paths(s)表示从某状态s开始的所有无限路径的集合,Pathsfin(s)表示从某状态s开始的所有有限路径的集合.为了度量DTMCM模型中某一事件的概率,需要定义关于模型M的概率空间(Outc,ζ,Prob)[27],其计算方法[28]为:(1)样本空间Outc=Paths(s0);(2)ζ是关于包含Cyl(π^)的路径Paths(s0)的最小σ-代数,其中Cyl(π^)={π∈Paths(s0)|π^∈pref(π)},π^是路径π的前缀,即π^=s0…sn∈Pathsfin(s0);(3)存在唯一关于与M关联最小σ-代数ζ的概率度量Prob,即Prob(Cyl(π^))=(2)CTMCCTMC可定义为M=(S,R,s0,AP,L),其中S,s0,AP,L表示的含义与DTMC相似,R:S×S→0是迁移速率函数,LTS中某一状态后继状态间的非确定性选择变换成在该状态停留指数分布时间后的概率选择;CTMC也可以看作是把连续时间引入到DTMC,把DTMC中的离散时间步迁移变成一个符合指数分布的连续时间延迟迁移.在随机模型检验中,对CTMC也在存在诸如对DTMC的前两点假设.度量CTMC涉及到uniformisedDTMC和embeddedDTMC.CTMCM的uniformisedDTMC可定义为DTMCunif(M)=(S,Punif(M),s0,AP,L),其中S,s0,AP,L与CTMC定义中的一致,而对于s,s∈S,Punif(M)①②Page4Q(s,s)=阵.CTMCM的embeddedDTMC也可定义为一个DTMCemb(M)=(S,Pemb(M),s0,AP,L),其中S,s0,AP,L与CTMC定义中的一致,Pemb(M)可定义为Pemb(M)(s,s)=使用embeddedDTMC可将CTMC的行为分析为在某一状态延迟一段关于E(s)指数分布的时间后,按照概率值Pemb(M)(s,s)触发迁移.CTMC的路径含义与DTCM的相同,CTMC的一个无限路径π可表示为s0t0s1t1s2t2,…,其中ti是非负实数,对于i,R(si,si+1)>0.关于CTMC模型M的概率空间(Outc,ζ,Prob)的计算方法[26]为:①样本空间Outc=Paths(s0),Paths(s0)代表从初始状态s0开始的所有路径集合;②ζ是关于包含Cyl(s0,I0,…,In-1,sn)的路径Paths(s0)的最小σ-代数,其中,s0…sn是模型M中的R(s,s)>0状态序列,I0,…,In-1是实数集上非空的区间序列;③存在唯一关于与M关联的最小σ-代数ζ的概率度量Prob,即:如果n=0,Prob(Cyl(s0,I0,…,In-1,sn))=1,否则Prob(Cyl(s0,I0,…,In-1,sn))=Prob(Cyl(s0,I0,…,In-2,sn-1))·Pemb(M)(sn-1,sn)·(e-E(sn-1(3)MDPMDP可定义为M=(S,Act,P,s0,AP,L),其中S,s0,AP,L与DTMC定义的含义相似,Act表示动作的集合,P:S×Act×S→[0,1]是迁移概率函数,对于s∈S、动作α∈Act,∑s∈SMDP把LTS中某一状态后继状态间的非确定性选择变换成了非确定性选择后的概率选择;MDP也可以看作是把非确定性选择引入到DTMC模型,把原来的全概率选择变成了非确定性和概率选择混合存在.若对于任何状态s,Act(s)是只有一个元素的集合,那么该MDP就是一个DTMC;反之亦然,任何一个DTMC可以看作是一个MDP,在该MDP中,对于任何状态s,Act(s)是只有一个元素的集合.在随机模型检验中,关于MDP也存在诸如对DTMC的3点假设.MDP的一个路径是状态和动作的无限序列,无限路径可表示为s0α1s1α2s2α3…∈(S×Act)ω,其中对于i0,αi+1∈Act(si)且P(si,αi+1,si+1)>0.MDP的概率空间与其非确定性有关,在非确定性选择求解后,其概率空间就变换成了DTMC的概率空间.MDP的非确定性选择求解称为策略(strategy),可形式化描述为MDPM的一个策略可表示为函数A:π^→Act(sn),其中π^是有限路径s0α1s1α2s2α3…sn.常用的策略有无记忆策略(memorylessadversary)、有限记忆策略(finite-memoryadversary)、公平性策略(fairadversary)和随机化策略(randomizedadversary)等.2.2常用的定量性质规约定量性质规约是对系统行为的定量描述,如系统模型实现某一期望行为的概率要满足一定的界限(大于或小于用户给定的阈值).定性性质规约是定量性质规约的特例,它的概率界限值是0或1,但其含义也与经典模型检验中的性质规约不同,如系统模型到达一个“坏”状态的概率是0的含义是:存在到达“坏”状态的路径且其概率是0,或者不存在到达“坏”状态的路径;系统模型完成期望的系统行为的概率是1的含义是:系统模型只能完成期望的行为,或者还可以有其他的行为但其概率是0.常用的定量性质规约有概率计算树逻辑(Proba-bilisticComputationTreeLogic,PCTL)[21]、带有概率的线性时序逻辑(LinearTemporalLogic,LTL)[7]、PCTL[21]和连续随机逻辑(ContinuousStochasticLogic,CSL)[24,26],其中PCTL、概率的LTL和PCTL的关系如图3所示.图3PCTL、概率的LTL和PCTL间的关系(1)PCTLPCTL是对计算树逻辑(ComputationTreeLogic,CTL)[8]的概率扩展,用概率运算符P~p定量地扩展了CTL的路径量词A(all)和E(exists).PCTL可描述关于DTMC和MDP这两类随机系统模型的定量分支(branching)时间性质,其与文献[29]的时序逻辑pCTL基本上一致.关于原子命题集合AP的PCTL状态公式Φ可定义为Φ·Φ|Φ|Ρ~p(Ψ),其中a∈AP,Ψ是路径公式,~∈{,<,,>},p∈[0,1]是概率界限值;PCTL路径公式Ψ可定义为Ψ·Page5X(next)和∪(until)与CTL路径运算符语义相同,∪n(boundeduntil)是∪的变体,要求n次迁移或小于n次迁移内满足∪语义,n是非负整数,Φ是状态公式.PCTL性质规约最终是一个状态公式,路径公式是概率运算符Ρ~p的参数.其他的PCTL公式,如F(future)和G(globally)可以由定义推出:FnΦ=true∪nΦ,Ρp(GΦ)=Ρ1-p(FΦ),FΦ=true∪Φ.PCTL路径公式描述的事件是可度量的[21].(2)概率的LTL概率的LTL可描述关于DTMC和MDP这两类随机系统模型的定量线性时间性质规约,尤其是用于表示随机系统模型的long-run性质.概率的LTL与PCTL在表达能力上相互补充,不存在包含关系.与PCTL定义中概率可以语法地通过运算符P表示不同,LTL概率度量只能在语义层面上体现.LTL语法即经典模型检验中的LTL语法定义,其公式Ψ可定义为Ψ·Ψ,其中a∈AP,AP是原子命题集合.LTL公式最终是一个路径公式,其他的路径公式可以由定义推出.LTL是隐式的关于所有路径的量词,LTL路径公式描述的事件是可度量的[16].(3)PCTLPCTL是PCTL的扩展(或CTL[8]的扩展),其不要求时序逻辑运算符后必须是状态公式,并允许路径公式的布尔运算.PCTL可描述关于DTMC和MDP这两类随机系统模型的定量分支时间性质规约.关于原子命题集合AP的PCTL状态公式Φ可定义为Φ·AP,Ψ是路径公式,~∈{,<,,>},p∈[0,1]是概率界限值;PCTL路径公式Ψ可定义为Ψ·Φ|Ψ∧Ψ|Ψ|ΧΨ|Ψ∪Ψ|Ψ∪nΨ,其中Φ是状态公式,n是非负整数.其他的PCTL公式可由定义推出,PCTL路径公式描述的事件是可度量的[21].(4)CSLCSL可看作是对CTL的扩展:①如同PCTL扩展CTL类似,增加了概率运算符P;②增加了稳状运算符S.CSL可描述关于CTMC这类随机系统模型的定量线性性质规约.关于原子命题集合AP的CSL状态公式Φ可定义为Φ·Ρ~p(Ψ)|S~p(Φ),其中a∈AP,Ψ是路径公式,~∈{,<,,>},p∈[0,1]是概率界限值;路径公式Ψ可定义为Ψ·公式,I是一个实数区间.其他的CSL公式可由以上定义推出.CSL路径公式描述的事件是可度量的[25].2.3随机模型检验算法随机模型检验问题可描述为:给定一个随机系统模型M和一个性质规约公式Φ,(1)判断模型M是否满足公式Φ,即(M,s0)Φ是否成立;或者(2)求模型M中满足公式Φ的所有状态.其中,(1)称作局部随机模型检验问题,(2)称作全局随机模型检验问题,但本质是一致的,即判断状态s是否满足公式Φ.对于(1)可采用全局随机模型检验算法来完成判定,即:先求出模型M中满足公式Φ的所有状态集合Sat(Φ),然后判断s0是否属于该集合,若属于则(M,s0)Φ成立,否则(M,s0)Φ不成立.本小节讨论的随机模型检验算法属于全局随机模型检验.2.3.1PCTL模型检验DTMCPCTL模型检验DTMC算法[19-21]的基本过程是递归地由底向上遍历公式Φ的语法解析树,并在此过程中计算满足子公式φ的状态集合Sat(φ).对于PCTL公式中的非概率状态运算符,其满足关系计算与经典模型检验相似,即其中S表示系统模型的所有状态集合,Sat(φ)表示满足公式φ的状态集合.对于Ρ~p[Ψ],需要计算状态s∈S满足路径公式Ψ的概率值,即Prob(s,Ψ).可分为3种情况求解:(1)Ρ~p[XΦ].满足公式Ρ~p[XΦ]的状态集合Sat(Ρ~p[XΦ]),是指满足路径公式XΦ的概率度量符合~p的所有状态s,即Sat(Ρ~p[XΦ])={s∈S|Prob(s,XΦ)~p},其中,Prob(s,XΦ)=∑s∈Sat(Φ)(2)Ρ~p[Φ1∪kΦ2].满足公式Ρ~p[Φ1∪kΦ2]的状态集合Sat(Ρ~p[Φ1∪kΦ2]),是指满足路径公式Φ1∪kΦ2的概率度量符合~p的所有状态s,即Sat(Ρ~p[Φ1∪kΦ2])={s∈S|Prob(s,Φ1∪kΦ2)~p},令Sno=S\(Sat(Φ2)∪Sat(Φ1)),Syes=Sat(Φ2),S?=S\(Syes∪Sno),则Prob(s,Φ1∪kΦ2)=1,烄0,烅0,P(s,s)·Prob(s,Φ1∪k-1Φ2),若s∈S?且k>∑s∈S烆Page6(3)Ρ~p[Φ1∪Φ2].满足公式Ρ~p[Φ1∪Φ2]的状态集合Sat(Ρ~p[Φ1∪Φ2),是指满足路径公式Φ1∪Φ2的概率度量符合~p的所有状态s,即Sat(Ρ~p[Φ1∪Φ2])={s∈S|Prob(s,Φ1∪Φ2)~p},计算Prob(s,Φ1∪Φ2)的过程为:①用图论算法计算Sat(E[Φ1∪Φ2]),然后计算Sno=Sat(P0[Φ1∪Φ2])=S\Sat(P>0[Φ1∪Φ2]),即Sno=S\Sat(E[Φ1∪Φ2]);②用图论算法计算Sat(E[Φ1∪Sno]),然后计算Syes=Sat(P1[Φ1∪Φ2])=S\Sat(P>0[Φ1∪Φ2]),即Syes=S\Sat(E[Φ1∪Sno]);③用值迭代或高斯消元法等方法求解线性方程组:Prob(s,Φ1∪Φ2)=1,烄0,烅∑s∈S烆求解Sat(Ρ~p[Φ1∪kΦ2])和Sat(Ρ~p[Φ1∪Φ2])也可以通过将某些状态变换为吸收(absorbing)状态,然后将其化简为可达性概率问题的求解,而可达概率的计算可以通过图分析算法和线性方程组求解获得[1].PCTL模型检验DTMC的时间复杂性与公式的大小|Φ|成线性关系,与模型的大小|M|成多项式关系.2.3.2PCTL模型检验MDPPCTL模型检验MDP算法[21-22]与PCTL模型检验DTMC的算法框架相似,其区别在于:需要根据~的取值用线性规划等方法计算路径概率的最大值或最小值,即Ρmax(s,Φ)或Ρmin(s,Φ).与PCTL模型检验DTMC类似,也可以通过将某些状态变换为吸收(absorbing)状态,然后将其化简为可达性概率问题的求解.PCTL模型检验MDP的时间复杂性与公式的大小|Φ|成线性关系,与模型的大小|M|成多项式关系.2.3.3LTL模型检验DTMCLTL模型检验DTMC[16]涉及到自动机、叉乘等相关理论,其过程步骤如下:(1)先将公式Ψ转换成非确定Büchi自动机[30],然后再将其转换成确定Rabin自动机DRA[31]的积M强连通分量(BottomStronglyConnectedComponent,BSCC);(4)用线性方程组计算到达可接受的BSCC的概率pBSCC;(5)对比pBSCC和~p的值,求出满足的状态.在LTL模型检验DTMC算法过程中,步1得到的DRA的大小是LTL公式大小的22强连通分量的复杂性与模型大小成线性关系,步4是求解线性方程组,其时间复杂性是关于积模型大小的三次方.因此LTL模型检验DTMC的时间复杂性与公式的大小|Ψ|成双指数关系,与模型的大小|M|成多项式关系.文献[19-20]将其复杂性化简为关于|Ψ|的单指数关系,定性LTL模型检验DTMC是PSPACE完全问题[16].2.3.4LTL模型检验MDPLTL模型检验MDP与2.3.3节LTL模型检验DTMC的算法框架相似,其过程步骤如下:(1)通过等价变换Ρ>p[Ψ]=Ρ<1-p[Ψ],把概率的LTL规约变换成类型Ρ<p[Ψ],即求解最大概率;(2)与2.3.3节的步1一致,将公式Ψ转换成NBA[30],再将NBA转换成DRA[31]的积M端分量(EndComponents,EC);(5)用线性规划计算到达可接受EC的概率pEC;(6)对比pEC和p的值,求出满足Ρ<p[Ψ]的状态.在LTL模型检验MDP算法过程中,步2得到的DRA的大小是LTL公式大小的22端分量的复杂性与模型大小成线性关系.因此LTL模型检验MDP的时间复杂性与公式的大小|Ψ|成双指数关系,与模型的大小|M|成多项式关系.与LTL模型检验DTMC算法不同,该算法的时间复杂性目前没能改进,定性LTL模型检验MDP是2EXPTIME问题[20].2.3.5PCTL模型检验DTMCPCTL模型检验DTMC可以看作是PCTL和概率的LTL模型检验DTMC的联合,算法复杂度为PSPACE完全问题,其过程步骤为:(1)把PCTL状态公式Ρ~p[Ψ]的Ψ转换成LTL公式Ψ;(2)将LTL公式Ψ换成DRAM与DRA的积M找出其可接受的强连通分量(BottomStronglyConnectedComponent,BSCC);(5)计算到达可接受的BSCC的概率pBSCC;(6)对比pBSCC和~p的值,求出满足的状态.2.3.6PCTL模型检验MDP类似2.3.5节,PCTL模型检验MDP可以看作是PCTL和概率的LTL模型检验MDP的联合,其算法复杂度为2EXPTIME完全问题.2.3.7CSL模型检验CTMCCSL模型检验CTMC算法已经被证明是可Page7判定的[23],文献[25]首次给出其算法过程,文献[26,32]对该算法做了改进,其算法框架与2.3.1节算法过程类似,其时间复杂度与模型大小成多项式关系、与CSL公式大小成线性关系且与qtmax成线性关系,tmax是时间区间内的最大值.其计算方法为:对于CSL公式中非概率状态运算符,其满足关系计算与经典模型检验相似.对于公式Ρ~p(XΦ),Sat(Ρ~p[XΦ])={s∈S|Prob(s,XΦ)~p},Prob(s,XΦ)的计算与CTMC的实时时间没有任何关系,只需计算到达下一状态的概率,可以直接用2.3.1节对于P~p[Ψ]中的(1)方法对CTMC的embeddedDTMC模型emb(M)进行计算.对于公式Ρ~p(Φ1∪IΦ2),I是非负实数区间,Sat(Ρ~p[Φ1∪IΦ2])={s∈S|Prob(s,Φ1∪IΦ2)~p},Prob(s,Φ1∪IΦ2)=Prob(s,Φ1∪cl(I)是区间I的闭包,可将I分成以下4种情况进行计算:(1)I=[0,).Prob(s,Φ1∪P~p[Ψ]中的(3)方法对CTMC的embeddedDTMC模型emb(M)进行计算,即Prob(s,Φ1∪Probemb(M)(s,Φ1∪Φ2).(2)I=[0,t],t∈0.令Syes=Sat(Φ2),Sno=S\(Sat(Φ2)∪Sat(Φ1)),S?=S\(Syes∪Sno),则Prob(s,Φ1∪1,烄0,t烅∫0∑s∈SProb(s,Φ1∪烆关于该积分的解,文献[25]提出通过Volterra积分方程组的近似解来求解,而文献[33]的实验表明一般来说该方法比较慢,文献[34]中给出了一种比较简洁的方法来求解,即将其化简为瞬时状态概率分析.(3)I=[t,t],t,t∈0.分为两部分计算:①直到时间t停留在满足Φ1的状态,可以把满足Φ1的状态变成吸收状态后,用瞬时概率计算可得;②在时间区间[0,t-t]内到达满足Φ2的状态,在这之前停留在满足Φ1的状态,通过(2)的计算可得.(4)I=[t,),t∈0.同(3)相似,也可把其分为两部分计算,且第一部分相同,第二部分变成了无界的区间,可以直接用embeddedDTMC求解.对于公式S~p[Φ],状态s满足S~p[Φ],即πs(s)~p,分两种情况计算稳态概率πs(s):∑sΦ(1)若CTMCM是不可约简的,则通过求解以下线性方程组可得π·Q=0,且∑s∈S(2)若CTMCM是可约简的,则①根据图的深度优先搜索算法,求出M的所有BSCC;②每个BSCC可算作是一个不可约简的CTMC,根据上述(1)计算其稳态概率分布πBSCC(s);③对于任一个BSCC,计算M的每个状态到达其概率Probemb(M)(s,BSCC);④根据以下等式求解M的稳态概率分布:πs(s)=Probemb(M)(s,BSCC)·πBSCC(s),若s∈BSCC0,{3随机模型检验研究方向及其进展总的来说,根据随机模型检验原理,关于随机模型检验的研究可分为:(1)增强随机系统模型刻画能力,使随机模型检验的可验证随机系统模型范围扩大;(2)增强定量性质规约描述能力,使随机模型检验可验证定量需求类型扩大;(3)有效的反例产生和表示,使随机模型检验的实用性扩充;(4)化简随机系统模型的状态空间,使随机模型检验的复杂度降低;(5)更有效的检验算法或模型存储表示方法,使随机模型检验的效率提高.其中,(1)、(2)和(3)属于随机模型检验功能横向上的扩展;(4)和(5)是随机模型检验功能纵向上的优化,是缓解随机模型检验状态空间爆炸[35]的重要手段,其二者往往交织或组合使用以达到更好地应对随机模型检验中的状态空间爆炸问题.3.1新的随机系统模型随机系统模型的分类如表1所示,如何更具体或更广泛地建模和验证随机系统,即新的随机系统模型的分析与验证是目前随机模型检验的一个重要研究方向.我们在文献[36]给出一种建模非确定性和概率系统的high-level方法非确定概率Petri网(NondeterministicProbabilisticPetriNet,NPPN),并给出其相应的代数语义和逻辑语义及定量验证方法,其是以通用网论[37]为指导,在保证非确定性前提下,将概率度量理论引入到经典的Petri网模型.概率时间自动机(ProbabilisticTimedAutomata,PTA)[38-39]可以看作是MDP和概率自动机(Proba-bilisticAutomata,PA)的实数时钟扩展,或者是时Page8间自动机[40]的概率扩展,其语义是无限状态空间MDP.目前PTA的分析方法有基于数字时钟(digitalclock)[41]和基于区域带(zone)的方法:数字时钟方法假设时钟值是整数并将PTA转换成有限状态MDP;区域带(zone)方法是用有界差值矩阵(difference-boundmatrices)符号化的获取时钟值的集合,包括向前可达性[39]、向后可达性[42]等分析方法.连续时间马尔可夫决策过程(Continuous-TimeMDP,CTMDP)[43-44]结合CTMC的时间延迟方式和MDP的非确定性选择策略,文献[45-47]分别从离散化和均匀一致化等方面探讨了其可达性和模型检验算法.交互式马尔可夫链(InteractiveMarkovChain,IMC)[48]正交的组合时间延迟和非确定性动作的选择,可以对随机系统进行组合式建模与分析,文献[49]给出一种CSL模型检验IMC算法.文献[50]将随机博弈作为建模两类非确定性及概率行为系统的形式模型,并将其用于控制器合成问题的验证.离散时间连续时间3.2新的定量性质描述方法定量性质的分类如表2所示,如何更全面和更细致地描述定量需求性质,即新的定量性质规约方法与验证是目前随机模型检验的一个重要研究方向.概率时间计算树逻辑(ProbabilisticTimedComputationTreeLogic,PTCTL)[51]是结合PCTL概率算子和TCTL(TimedComputationTreeLogic)[52-53]时间约束算子的一种关于时间和概率的定量性质规约描述方法.通过改进传统的区域图(region-graph)构造方法[40,52],PTCTL模型检验PTA过程是可判定的[39],遗憾的是这种方法很容易导致状态空间爆炸,文献[51]给出了一种基于符号化的模型检验算法.多目标定量性质(quantitativemulti-objectiveproperties)[54]是结合概率的ω正则性质和基于回报(reward)的度量性质[55],文献[54]给出了基于多目标定量性质的模型检验算法,并将其用于系统的合成.PCTL、CSL、PTCTL和多目标定量性质规约等均是面向状态的定量性质描述方法,不能显式刻画随机系统的动作执行序列,因此有一定的局限性.aCSL[56]是基于动作(action)的CSL变体,文献[56]将其用于随机进程代数的模型检验,文献[57]将aCSL用于系统的性能建模.与aCSL类似,我们给出了一种基于动作的PCTL变体(aPCTL)[36]及其语义和模型检验算法,并将其用于NPPN的定量验证.借鉴了基于路径的回报变量[58]和命题动态逻辑[59],文献[60-62]扩展LTL,把基于动作和基于状态的时序逻辑联合起来,给出一种asCSL(CSLwithactionandstatelabels)逻辑,其可用于分析验证带有动作标号的CTMC.基于动作和状态的时序逻辑可以更直观和更有效地规约随机系统模型的性质.LTL+probabilityquantitativemulti-objectivepropertyΦ3.3随机模型检验的反例对于不满足的性质给出反例(counterexample)使模型检验不仅可以验证系统而且可以作为调试工具使用,如何有效地产生和表示反例是随机模型检验的一个重要研究方向.与经典模型检验相似[63],随机模型检验中的反例要满足3个条件:(1)可以作为随机系统模型为什么不满足性质的解释(explanation);(2)含有丰富的信息能代表不满足一类定量性质;(3)可以简单、具体地识别出随机系统模型的错误,并且可以有效地分析这些错误.文献[64]为随机模型检验的反例产生提供了理论和算法基础,是最早关注随机模型检验中反例产生的研究,其给出了关于模型检验DTMC的反例概念,将反例求解转换为图论中最短路径问题的变体.文献[65]对文献[64]的研究工作做了进一步完善,给出了表示反例的简洁正则表达式方法.文献[64]的反例产生方法可以扩展到模型检验MDP的反例产生[66]和模型检验CTMC的反例产生[67].与上述方法不同,文献[68-69]将模型检验MDP的反例定义为一般的DTMC.文献[66,68-69]的方法不能完全有效地表示模型检验MDP的反例,文献[70]进而将反例定义为一般的MDP,并给出求解最小反例的算法.文献[71]用符号状态交集等方法研究了PTCTL模型检验PTA的反例产生方法,但其不能保证可得到证据最少的反例.3.4随机系统模型的抽象抽象(abstraction)是应对模型检验中状态爆炸问题的主要技术之一[72],在经典的模型检验中得到Page9很好的应用.抽象通过隐藏与验证性质无关的具体系统模型状态,用尽可能少的抽象状态来表示系统模型.对随机系统模型的抽象是一个更为复杂的过程,它是随机模型检验的一个重要研究方向.在随机模型检验中关于抽象的研究涉及到两个问题:如何表示抽象模型和如何构造抽象模型.(1)抽象模型的表示因随机模型检验中有不同的随机系统模型,所以也存在不同的抽象模型表示方法.对于DTMC,可将抽象模型定义为抽象马尔可夫链[73],即抽象状态间的迁移概率是一个概率区间,通过类似的方法可将CTMC的抽象模型定义为CTMDP.DTMC和CTMC的抽象模型也可以通过概率模拟(probabi-listicsimulation)[74]或其变体的熵表示.文献[75]给出了一种DTMC和CTMC三值抽象模型的表示方法.对于MDP,可将其抽象模型定义为另一个MDP[76],或者将其抽象模型定义为二人随机博弈[77].(2)抽象模型的构造构造抽象模型是对原随机系统模型具体状态的划分,一个好的抽象模型是在保证可以正确分析用户关注的定量性质的同时使得随机系统模型的状态空间足够小.一种常用的构造抽象模型的方法是抽象精化(abstractionrefinement),其过程是把一个简单的粗糙的抽象模型反复精化成一个足够精确的抽象模型.文献[76]第1次提出用抽象精化方法对MDP进行抽象;文献[69]运用谓词抽象、反例等技术给出一种关于随机系统的反例引导的抽象精化(Counterexample-GuidedAbstractionRefinement,CEGAR)方法;文献[70]基于概率反例的定义给出一种关于MDP的反例引导的抽象精化算法框架,其抽象精化过程可表示为图4;文献[78-80]提出一种基于随机博弈的用容忍误差引导的定量抽象精化框架来抽象MDP和PTA等随机系统模型,其抽象精化过程可表示为图5.还有一些构造等价抽象模型方法,如:互模拟最小化(bisimulationminimi-zation)[81]、对称归约(symmetryreduction)[82]或偏序归约(partial-orderreduction)[83]等.3.5组合随机模型检验组合验证利用分而治之的思想,分别对系统模块进行模型检验,是应对模型检验中状态空间爆炸的主要方法之一.实际上系统模块往往只能在特定的上下文环境中才能满足其性质,这就导致出现了假设-保证(assume-guarantee)式的组合验证技术,其验证过程是将验证两个模块的系统M1‖M2是否满足性质P变换成:(1)在假设A成立的前提下,模型检验M2是否满足性质P,即〈A〉M2〈P〉;(2)模型检验M1是否在任何情况下总是满足假设A,即〈true〉M1〈A〉.如何把假设-保证式组合验证技术应用于随机模型检验,即组合随机模型检验,是目前随机模型检验的一个重要研究方向.基于已有的关于组合分析MDP的理论[84],文献[85]提出了一种假设-保证的方法组合验证随机系统,给出了其假设-保证推理规则,其中〈A〉pA和〈G〉pG是用有限自动机表示的安全性质,即当系统模块M以最小概率pA满足A时,系统模型将以最小概率pG满足性质G,其基本思想如图6所示.为了有效且自动化实现组合随机模型检验,假设-保证式组合随机模型检验可以转换成定量多目标随机模型检验问题[54].关于假设A的构造是假设-保证式组合随机模型检验的关键,其可以通过反例引导的人工交互式的产生[86],也可以通过L学习算法自动产生[86-87].文献Page10[88]用模拟的方法产生假设-保证推理的假设,并将其用于概率标号迁移系统模型的组合验证.3.6统计随机模型检验第2节论述的随机模型检验算法属于数值(numerical)方法,这种方法可以得到精确的度量值,但是会因随机系统模型与性质规约方式的不同而导致计算方法不同,并且其计算过程需要较多的时间和存储空间,易出现状态空间爆炸问题.另一种定量分析验证随机系统的方法是统计(statistical)方法[89-91].如何用统计方法实现随机模型检验,即统计随机模型检验,是目前随机模型检验研究的一个重要方向,其基本过程思想如图7所示.文献[92]最先给出一种统计随机模型检验方法,即通过有限多次的模拟随机系统的运行,并用假设检验(hypothesistesting)来推断样本是否提供了一个随机系统模型满足或违反性质规约的统计证据(evidence),其理论依据是既然随机系统的样本运行是根据系统定义的分布得到的,那么它就可以用来评估系统执行的概率度量.针对文献[92]只能验证时间限界的PCTL性质,文献[93]给出了一种基于MonteCarlo模拟和假设检验的验证无界UntilPCTL性质的方法,文献[94]也给出一种验证无界UntilPCTL性质的方法,但是这两种方法需要预先知道随机系统的一些信息,而文献[95]给出一种不需要这种先知条件的验证无界UntilPCTL性质的方法.文献[96-97]将统计随机模型检验由原来的验证白盒随机系统推广到黑盒随机系统,文献[98]在对比数值和统计随机模型检验的基础上,提出将二者结合的思想.文献[99-100]给出了一类基于MonteCarlo技术的统计随机模型检验方法.统计随机模型检验提供了一种验证随机系统模型DTMC和CTMC的统一方法,该随机系统模型可以具有无限状态空间或甚至不具备马尔可夫性质,但是现有的统计随机模型检验方法不能用于验证带有非确定性的随机系统模型.3.7参数随机模型检验在建模随机系统的早期阶段或者为了建模系统的鲁棒性,往往把模型状态间的一些迁移概率设置为参数而不是具体值[101],如何对这类随机系统模型进行模型检验验证,即参数随机模型检验,是目前随机模型检验的一个重要研究方向.关于参数系统模型的研究,最初是分析与验证实时系统,文献[102]给出一种参数分析实时系统的时间性质的方法,文献[103]提出一种新的时间自动机模型参数时间区间自动机(ParametricTime-IntervalAutomata,PTIA),并给出其参数模型检验算法.文献[104-105]最先开始研究参数随机系统的分析与验证.文献[104]把满足概率的路径公式表示成一个正则表达式,然后递归地计算正则表达式,当概率值是有理数时,则正则表达的值也是有理数,当概率是参数时,则正则表达的值是一个有理数函数,给出一种基于正则语言的符号参数模型检验DTMC算法.文献[105]分析参数随机系统模型的可达性问题,给出确定满足性质的参数取值范围的方法.文献[106]把文献[105]中参数的取值域扩展到实数范围,并给出一种求解参数最大值和最小值的方法.文献[107]在文献[104]的研究基础上,给出一种更有效的参数随机系统模型的可达性计算方法.文献[108]通过把参数MDP可能的状态空间划分成超矩形(hyper-rectangles),然后使用已有的判定过程检验性质是否在该超矩形上成立,给出了一种关于参数MDP模型的PCTL合成方法.除了以上主要的随机模型检验研究方向,还有其他一些主题也值得作深入的探讨,如有效的随机系统模型的表示与存储[109]、限界的随机模型检验[110-111]、运行时随机模型检验[112]等.4基于随机模型检验的验证4.1验证过程与基于经典模型检验的验证过程类似[1],基于随机模型检验的验证过程如图8所示,可分为3个阶段:建模、运行和分析.(1)建模待验证的系统和性质随机模型检验器的输入是被验证系统的模型和需求性质规约,所以为了得到正确的验证结果,要对系统行为和需求性质进行严格、准确和精确的刻画,Page11即验证过程的建模阶段.建立系统模型的过程是用随机模型检验器的模型描述语言表示待验证的系统,这其实是将待验证系统或其马尔可夫链模型转换为模型检验器可识别的系统模型的过程.为了提高模型质量,通常在模型检验前对系统模型进行模拟(simulation)执行,模拟可以发现一些简单错误,排除这些错误有利于减少模型检验过程的时间耗费.性质规约是用随机模型检验器的性质描述语言表示需求性质,不同的随机模型检验器的性质描述语言略有不同.(2)运行随机模型检验器根据随机系统模型类别和验证性质,适当地设置随机模型检验器的某些参数和选项,对其初始化并运行随机模型检验器.(3)检验结果分析随机模型检验的返回结果有3种:①系统模型满足性质;②系统模型不满足性质,并给出反例;③系统模型状态空间太大,运行随机模型检验器的系统内存不足.对于①,可以继续验证其他性质,或者所有性质均已验证,则验证过程结束.对于②,可能有多种情况:模型错误,即模型没有正确地表示系统的设计模型,需要修改模型并再次运行随机模型检验器;设计错误,验证过程结束,需要修改设计模型并重新启动验证过程;性质规约错误,即性质规约没有正确描述需求,需要修改性质规约并再次运行随机模型检验器.对于③,可以采用其他一些支持符号化或运行时验证的随机模型检验器,或者对模型进行抽象等化简模型的操作.4.2优缺点分析基于随机模型检验的验证主要具有以下优点:(1)以严格的数学理论为基础,如逻辑、数据结构和算法理论等;(2)可以广泛应用于协议分析、嵌入式系统、软件系统和硬件设计等领域;(3)支持部分验证,可以先验证最重要的性质;(4)提供反例,即诊断信息;(5)可以容易地集成到已有的系统开发过程.其主要缺点有:(1)随机模型检验验证属于可判定领域范围,不能有效地应用于无限状态空间或抽象数据类型(需要不可判定或半可判定逻辑)的验证与分析;(2)验证的是系统模型而非系统,所得结果仅对系统模型的层面上有效;(3)容易产生状态空间爆炸问题;(4)验证过程中的建模需要一定的专业知识.4.3工具支持随机模型检验工具的实现,推动了随机模型检验验证的广泛应用.目前已有一些随机模型检验工具,本小节先介绍两种常用的随机模型检验器PRISM和MRMC,然后对其余工具按验证的系统模型类型对其分类并做简单介绍.(1)PRISMPRISM[113-114]是Kwiatkowska教授课题组用Java/C(++)语言实现的最为广泛使用的一种图形化随机模型检验工具,可运行于Windows、Linux和MacOSX等操作系统.PRISM可以验证包括DTMC、CTMC、MDP、PA、PTA及其回报扩展模型等多种类型的随机系统模型,其性质规约囊括了PCTL、CSL、概率的LTL、PCTL及其回报扩展等定量性质规约语言,是功能最为齐全的随机模型检验工具.PRISM使用基于BDDs(BinaryDecisionDiagrams)和MTBDDs(Multi-TerminalBiaryDecisionDiagrams)[115-116]的符号数据结构和算法,提供了一个离散事件模拟引擎,实现了包含定量抽象精化和系统归约等分析验证技术,对于规模较大的随机系统模型验证效率较高,一定程度地支持多目标定量性质随机模型检验和统计随机模型检验.(2)MRMCMRMC(MarkovRewardModelChecker)[117],是Katoen教授课题组用C语言实现的较为广泛使用的一种命令行随机模型检验工具,可运行于Windows、Linux和MacOSX等操作系统.MRMC可以验证DTMC、CTMC、DMRM(DiscreteTimeMarkovRewardModel)、CMRM(ContinuousTimeMarkovRewardModel)和CTMDP等随机系统模型,其性质规约包括PCTL、CSL、PRCTL(Probabi-listicRewardComputationTreeLobic)和CSRL(ContinuousStochasticRewardLogic).MRMC采用基于稀疏矩阵的数据结构和算法,支持精确的on-the-fly稳态检查和互模拟最小化等验证技术.Page12在验证连续时间随机系统模型的稳态性质方面具有一定的优势,对于规模较小的随机系统模型验证效率较高.(3)其他工具①DTMC、CTMC及其扩展模型的检验工具:PARAM[101],支持参数随机模型检验,可验证带有参数的DTMC及其回报扩展的随机系统模型的可达性质;INFAMY[118],支持无限状态模型的随机模型检验,可验证具有无限状态的CTMC类随机系统模型;②MDP模型检验工具:LiQuor[119],显示状态模型检验MDP的LTL性质,对于规模较大的随机系统模型,其运行效率要比PRISM低;ProbDiVinE-MC[120],支持并行分布式随机模型检验,可验证MDP类随机系统模型的概率的LTL性质规约;PASS[121],支持谓词抽象精化的随机模型检验,可验证具有无限状态的MDP和DTMC类随机系统模型;③PTA模型检验工具:Fortuna[122],可计算PTA的最大可达概率及代价PTA的回报值;mcpta[123],以PRISM为基础支持建模语言Modest的PTA验证;UPPAALPRO[124],可计算PTA的最大概率可达性质.5随机模型检验的应用挑战随着随机模型检验理论和工具的发展,随机模型检验已经在有些领域得到了初步应用,如:随机分布式算法的正确性验证和性能分析[125]、多媒体通信协议的服务质量分析[126-127]、生物化学过程的建模与分析[128]、系统性能和可靠性分析[129]、随机优化调度与规划[130]和电源管理系统的性能分析与优化[130-131]等.目前随机模型检验主要面临以下挑战:(1)随机混成系统模型验证随机模型检验目前验证的随机系统模型是时间同构的,即状态迁移和时间驱动的行为独立于全局时间,但是这类模型不足以建模诸如表现为浴盆曲线的硬件故障、由于重启内存降低和增加的软件可靠性和功率削减与剩余能量成非线性关系的电源消耗等随机现象.为了分析验证这类随机现象,就要涉及异构的马尔可夫链或马尔可夫决策过程,甚至是非马尔可夫性质的随机系统的建模与验证.随机混成系统模型的验证是随机模型检验的一个挑战,文献[132-133]做了一定的尝试工作.(2)无限状态空间的随机系统模型验证对于诸如无限大缓冲区的通信网络系统或含有递归调用过程的系统,其系统模型的状态空间是无限的,分析与验证这类系统需要不可判定或半可判定逻辑等理论,是随机模型检验的一个挑战.(3)合成系统模型随机模型检验可以用于分析与验证系统的设计模型,而将其用于系统的设计过程本身是随机模型检验的一个挑战.这里的设计过程是指在保证某些性质的前提下,合成系统参数或合成诸如控制器之类的系统构件,涉及此类问题是否属于可判定的范畴.(4)普适计算系统模型验证普适计算强调的是与环境融为一体的计算概念,使无数的计算机服务无缝地集成为用户提供所需的服务,这就需要保证它们的正确性,这类带有动态特征的系统建模与验证是随机模型检验的一个挑战.6结束语随机模型检验是用模型检验的方法对展现随机行为的复杂系统进行定量验证和分析,是一种基于模型的自动的形式验证随机系统方法.本文从渊源、最基本原理、研究方向及现状、优势/劣势及工具支持和应用挑战等方面对随机模型检验方法进行分析、总结和论述.其实,如图9所示,随机模型检验的研究方向是对其原理研究的深化和优化,使其更真实地验证系统性质和提高验证效率;随机模型检验的应用挑战是其原理应用的推广和扩展,使其可验证系统范围扩大;而随机模型检验研究方向的进展,可以有效应对其应用挑战;解决目前随机模型检验的应用挑战,也促使其研究方向的进展.随着目前计算机系统运行环境开放程度的增大和系统本身复杂性的提高,随机模型检验作为对该类系统进行定量分析验证的新方法,将会有更为广阔的应用前景和发展空间.图9随机模型检验原理、进展和挑战间的关系致谢感谢德国RWTHAachenUniversity的Joost-PieterKatoen教授,他热情地给了我们很多关于随机模型检验研究的帮助,从他的书籍论文,尤Page13其是与他的直接交谈中受到很多启发.本文工作得到江苏省软件新技术与产业化协同创新中心的资助!
