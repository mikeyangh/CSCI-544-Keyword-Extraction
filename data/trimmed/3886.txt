Page1延迟敏感的移动多媒体会议端到端服务质量保障吴冀衍乔秀全程渤陈俊亮孙运雷(北京邮电大学网络与交换技术国家重点实验室北京100876)摘要随着异构无线网与智能移动终端的快速发展,移动多媒体会议逐渐成为重要的网络应用.然而,在不可靠、多变的无线网络环境下,因传输单向延迟过长所造成的多媒体视频丢帧、跳帧、断续等现象严重影响会议的服务质量和用户体验.文中提出一种应用层端到端服务质量保障方法.该方法将数据包分段重组与异构无线网路径分集传输相结合,在考虑带宽、延迟、权重以及长度等多种参数情况下对视频数据包分段并发送,各分段经路径分集传输到达客户端、通过有效性检验后进行重组.文中为实现该方法,设计了一种服务器-客户端形式多路径数据包调度算法,构建端到端虚通路保障视频流的快速传输.实验数据表明,此方法能够有效地整合异构无线网带宽,减少传输单向延迟.关键词移动多媒体会议;延迟敏感;服务质量;数据包分段重组;异构无线网;移动互联网1引言移动多媒体会议(mobilemultimediaconferen-cing)是指在异构、无线的网络环境下,用户可以通过各种智能移动终端(例如笔记本电脑、智能手机、平板电脑等)接入会议系统,进行全面的信息交互.这些信息呈现实时的音频、视频、文字、图片等同步或异步的多媒体数据.典型应用主要有视频会议、远程学习、多人在线游戏等[1-2].相对于传统的多媒体会议系统,其优点如下:(1)移动性.解决了传统的多媒体会议系统终端缺乏移动性支持,限制用户只能在有线、固定的网络环境下开展会议的问题;(2)经济性.移动多媒体会议无需使用专用的硬件设备和通信网络,这在很大程度上降低了用户的使用成本,使得移动多媒体会议的普及成为可能;(3)兼容性.能够支持多种类型的无线网络、智图1异构无线网环境下移动多媒体会议应用场景然而,在不可靠、多变的无线网络环境下保障多媒体会议的服务质量面临着严峻挑战,主要如下:(1)带宽限制.尽管近年来带宽限制问题在一定程度上得到了缓解,但在实际应用中,用户的可用带宽仍十分有限,与网络的峰值速率相差甚远.根据文献[3-4],本文在表1中列出几种典型的无线网可能移动终端、操作系统以及网络协议等相关的软硬件.随着异构无线网与智能移动终端的快速发展,移动多媒体会议逐渐成为新的发展趋势和研究热点.异构无线网[3-4](heterogeneouswirelessnetworks)是带宽、信号范围、网络协议、应用场景等各种特征不同的无线网络的集合,例如各种蜂窝网(GSM,UMTS,HSDPA,LTE)、无线局域网(802.11a,802.11b,802.11g,802.11n)和数字视频广播网(DVB-T,DVB-S,DVB-H).在未来的第四代通信系统中[5](4G),会出现更多的无线网络并在不同的应用中发挥重要作用.异构无线网目前的研究热点是利用各种无线网络之间的特点进行互补,为用户提供更好的服务质量.例如结合蜂窝网的广泛移动性支持以及无线局域网的高带宽低费用特点,用于支持移动多媒体会议视频、音频、图片、文字等各种数据流的上下行传输,既能满足用户进行全面信息交互的需求,又能节约费用成本.异构无线网环境下移动多媒体会议的应用场景如图1所示.用带宽,并与其对应的峰值速率比较.因为移动多媒体会议在多数情况下需要同时进行视频、音频、图片等多种数据流的上下行传输,并且受后文中所述的延迟敏感和无线信道状态多变等因素影响,依靠单一无线网络的实际可用带宽通常无法保障良好的会议服务质量[6];Page3无线网2G:GSM2.5G:EDGE90kbps3G:UMTS3.5G:HSDPA14.4Mbps300~500kbps(2)延迟敏感.端到端单向延迟(one-wayEnd-to-EndDelay,oEED)是衡量实时交互式多媒体应用服务质量的重要指标之一[7].因此,多媒体视频对延迟十分敏感,根据ITU-TG.114标准[8],要保证交互式视频应用达到良好服务质量(excellentQoS),传输单向延迟(one-waydelay)不能大于150ms,而满足用户可接受服务质量(acceptableQoS)不能大于400ms;(3)信道状态.无线网络信道状态复杂多变[9],具体表现为较高的误码率、丢包率、带宽波动、延迟抖动等,解决此类问题需要使用反馈重发、前向纠错等方法,一定程度上会进一步增加延迟.因此,在多数情况下,依靠单一无线网络难以支持低延迟、高带宽要求的移动多媒体视频传输,解决此问题需要利用异构无线网之间的协作传输,已有的研究工作主要分为两个方向:垂直切换(verticalhandoff)和路径分集(pathdiversity).垂直切换[10]是指移动终端从接入一种类型的无线网络切换到接入另一种不同类型无线网络之间的转换过程,这适用于终端设备在同一时间内只能接入单一无线网络的情况,即单接入(single-radio)移动终端.而随着相关软硬件的不断发展,许多最新的智能移动终端提供了多接入(multi-radio)功能,例如iPhone和NokiaN系列手机,能使用户同时接入至少4种无线网络,包括GSM、3G、WLAN和Bluetooth.路径分集[11]技术基于多接入智能移动终端,使用户能同时接入多种不同的无线网络,并使用所建立的多路径链接进行并行传输.路径分集相对于垂直切换的优点如下:(1)带宽整合.垂直切换技术在同一时间内只能接入单一的无线网络,并不能解决前文中所述的带宽限制问题,而路径分集能将多种无线网络的带宽进行整合,用于支持移动多媒体视频传输;(2)无切换延迟.垂直切换过程中的切换延迟问题会造成视频质量的严重下降,同时接入多种网络能解决这一问题,达到真正的“无缝切换”;(3)可靠性.不同的无线网络路径之间彼此独立,使用合理有效的多路径传输方法能在很大程度上解决前文中所述的无线网络信道状态复杂多变问题,提高传输的可靠性.因此,使用路径分集技术是解决前文中所述多媒体会议服务质量保障所面临问题的有效方法.在该研究领域已有一些相关工作.Chebrolu和Rao[12]提出EDPF(EarliestDeliveryPathFirst)算法,其设计思想是在每个数据包发送时从可用的多种无线网中选择端到端延迟最短的路径,该方法在一定程度上减少了视频流传输的总延迟,但因为单路径带宽限制以及未对长度过大数据包做出有效处理的原因,单向延迟问题没有得到有效解决.Jurca等人[13]基于负载均衡原理设计LBA(LoadBalancingAlgorithm)算法,该算法充分考虑了网络带宽、播放延迟以及数据包权重等因素.Nightingale等人[14]针对移动网络中多路径之间的选择以及切换问题提出OPSSA算法.Han等人[15]基于喷泉码设计并实现一种端到端的虚通路构建系统,该方法的主要目的是解决路径丢包和带宽波动问题.上述研究工作合理有效地利用路径分集传输,解决所面临的问题,但是单向延迟还没有一种有效的解决方法.这是因为路径分集的主要作用是解决单一无线网带宽受限问题,而带宽只是影响单向延迟的重要因素之一.根据ITU-TG.114标准[8],数据包长度同样是一种重要影响因素,长度较大的数据包因延迟过长会造成视频的丢帧、跳帧、断续等问题,严重影响会议的服务质量和用户体验.因此,解决此问题需要对数据包长度进行有效调整,目前关于数据包长度调整已有相关研究工作,主要集中在MAC层.Lin等人[16]经研究发现帧长度(framesize)与WLAN吞吐量之间的关系,并使用神经网络方法考虑多种因素对帧长度进行计算和自适应调整,提升网络吞吐量.Modiano[17]发现长度过大的帧不适宜在易错信道中传输,并且推导出了帧的最佳长度与信道误码率之间的计算公式.本文在应用层对数据包长度进行调整以解决单向延迟问题,应用层视频数据包长度调整的方法在RFC6184[18]以及RFC6190[19]中称为NAL单元分段重组.因此,本文采用路径分集传输解决单一无线网带宽限制,并且使用分段重组方法对数据包长度进行有效调整,通过在应用层设计的服务器-客户端形式多路径数据包调度算法将两种方法结合并实现.选择应用层的原因是下层的参数和协议是受各集成服务提供商以及硬件设备商所控制,难以协调和统一,而应用层参数在应用服务提供商控制范围内,可Page4根据具体需求做出优化和调整.本文的贡献在于:(1)将数据包分段重组与异构无线网路径分集传输相结合,提出一种应用层端到端服务质量保障方法,解决移动多媒体视频传输的延迟敏感问题;(2)设计实现了服务器-客户端多路径数据包调度算法(PFDA-PRRA算法).仿真结果验证了该算法具有良好的低延迟传输以及带宽整合性能.本文第2节对所设计的服务质量保障方法进行详细描述;第3节具体介绍本文所提出并实现的PFDA-PRRA算法;第4节描述实验方法以及对实验进行结果分析;第5节总结全文并提出进一步的研究工作.本文中所使用的主要数学符号及其说明如表2所示.TintervalDmaxPKmax_transdpropA(p)B(p)NA(p)NB(p)图2本文方法总体架构图2服务质量保障方法设计本文所提出方法的目的是构建端到端虚通路保障多媒体视频流的快速传输,总体架构如图2所示,方法通过服务器的数据包调度器以及客户端的数据包接收器实现,服务器的调度器使用本文提出的数据包分段发送算法(PacketFragmentationandDeliveryAlgorithm,PFDA),客户端接收器使用数据包接收重组算法(PacketReceiveandReassemblyAlgorithm,PRRA).上述过程具体可分为以下步骤:(1)数据包分段发送;(2)构建端到端虚通路进行路径分集传输;(3)数据包接收重组.本节剩余部分将分别介绍实现上述过程所使用的两个关键方法,2.1节介绍数据包分段重组方法,2.2节介绍路径分集传输的实现方式.服务器-客户端多路径数据包调度算法(PFDA-PRRA算法)及其计算推导过程将在第3节中进行详细介绍.在编解码器选择方面,因为考虑移动多媒体会议需要满足不同用户的需求以及适应多种网络环境,本文使用H.264的可伸缩视频编码方式,即H.264/SVC[20].因为H.264/SVC具有三维可伸缩性(时域可伸缩性、空域可伸缩性以及质量可伸缩性),它相对于H.264/AVC[21]更加灵活.有关H.264/SVC的具体介绍可参考文献[20],本文在PFDA算法中使用了SVC的质量可伸缩性.2.1数据包分段重组本文中所述的视频数据包即为H.264标准中Page5的网络抽象层单元(NetworkAbstractionLayerUnit,NALU).在H.264标准[21]中,以NALU为单元支持编码数据在网络中的传输.有关NAL单元的结构、类型、语义以及解码过程等可参考文献[20-21],在此不详述.NAL单元的长度因编码参数和视频测试序列的不同而改变,主要编码参数为比特率(BitRate).在本文的实验中,对标准YUV视频序列Foreman_cif分别使用比特率等于1Mbps和3Mbps进行编码,其它参数保持一致,对所产生的NAL单元进行统计.长度分布区间及其所占视频流数据总长度的百分比(概率密度)如图3所示.从图中可以看出,当比特率取值越大时,编码生成长度较大的NAL单元数量越多.根据信息论,比特率是保障视频高清质量与失真最小化的必要条件.因此要使多媒体视频失真最小,需要考虑长度过大数据包的延迟问题,否则视频的断续、丢帧、跳帧现象会十分明显.在实际可用带宽受限的条件下,依靠单一无线网络传输在多数情况下无法将单向延迟图4NAL单元分段过程示意图设一个待分段的NAL单元长度为N字节,所分成两段长度分别为N-M和M字节,在两段分别添加一个16字节的报头,报头中所包含的信息分别为所属NAL单元的编码序号、所属NAL单元总长度、该分段起始位置和该分段长度,各占4字节.所分成两段的报头信息如图4所示,以此可类推单个NAL单元分成多段的过程.在客户端进行重组时,当接收到第一块分段时申请一块长度为N的内存空间,并将该分段按其起控制在可容忍范围内,因此本文使用NAL单元的分段重组方法对长度做出有效调整.NAL单元的分段与重组在H.264/AVC以及H.264/SVC的RTP规范[18-19]中有阐述,但是其目的主要是考虑最大传输单元(MaximumTransmis-sionUnit,MTU)长度、不平等差错保护以及接收端缓存容量等问题,并未有过与路径分集传输相结合的应用.本文在遵循上述两种规范的前提下,根据具体应用需要,使用自定义报头进行分段重组,具体过程如图4所示.始位置和长度拷贝至其中,继续等待接收数据包,当接收到第二块分段并拷贝至已申请的内存空间后该NAL单元的重组完成.重组过程如图5所示:有关NAL单元的分段重组所需考虑的因素以及实现过程将在第3节PFDA-PRRA算法中具体描述.因为本文的工作处在应用层,该层以下对NAL单元进一步的封装、拆分等操作是由底层系统和相关协议完成,为统一名称,NAL单元即为前后文中所述的数据包.Page6图5NAL单元重组过程示意图2.2路径分集传输路径分集传输是指在分组交换网络中,从源节点到目的节点之间通过两条或者多条路径同时进行数据传输[11].路径可以表示为到达单个目的节点的一对源目的地址(source-destinationaddresses).当源节点与目的节点之间有多条并行传输路径时,源节点需要有合适的路径选择方法,该方法需要考虑具体的应用需求、服务质量、传输可靠性和延迟等.在实际网络中,两节点之间数据传输通常需要经过有线网和无线网,有线网路径分集不在本文研究范围之内.本文路径分集传输实现过程及所使用协议如图6路径分集传输实现过程及相关协议图6所示,图中的源节点有一个有线网接口,IP地址为IPs,目的节点有3个无线网接口,即WLAN、GSM以及3G,IP地址分别为IP1d,IP2d,IP3d.当编码产生视频流时使用PFDA算法对视频流数据包进行处理,算法中对数据包封装发送是通过调用RTP协议,在接口函数中指定源节点与目的节点的IP地址实现的,图中两节点之间的端到端路径之一可表述为P1:{IPs,IP1d}.文中所述端到端虚通路(End-to-EndVirtualPath)是由上述端到端路径中的一条或者多条构成,即所有路径组成集合的非空子集,可表述为Page7从上述过程可以得出,RTP以下的各层协议并未使用PFDA-PRRA算法,因此本文在应用层实现路径分集传输,构建端到端虚通路.3PFDA-PRRA算法PFDA-PRRA算法不仅需要对带宽进行有效整合,同时需要考虑由于信道状态原因(例如带宽、延迟)造成的数据包多路径传输后可能出现的乱序问题.在第1节中已经对几种路径分集传输数据包调度算法做了总结和概括,包括EDPF[12]、LBA[13]和OPSSA[14],在上述三种算法中,EDPF与本文所图7PFDA-PRRA算法总体流程图3.1PFDA算法服务器数据包调度算法的设计目的是在各路径的最大传输量范围内,将数据包的单向延迟最小化.该算法命名为数据包分段发送算法,具体分为以下三个步骤:选择性丢包、解码时间计算以及数据包分段发送.(1)选择性丢包.服务器按照一定的时间间隔Tinterval发送数据包.首先要确定在该间隔内所能传输的视频流总长度(最大传输量).如果长度小于发送缓存中数据包总长度之和,则需要进行选择性丢包(selectivepacketdiscard).这不仅可以节省不必要的带宽开销,还能将视频质量的下降最小化.单个数据包通过路径的端到端总延迟等于传输延迟提出算法目的一致,即将延迟最小化,表3中列出了本文所提出的PFDA-PRRA算法的类型、实现方式以及所考虑的路径和数据包参数,并且与EDPF进行了对比.PFDA-PRRA流程如图7所示.算法名称类型实现路径参数数据包参数EDPF网络层网络代理服务器延迟PFDA-PRRA应用层流媒体服务器(transmissiondelay)与传播延迟(propagationdelay)之和.计算方法如下:其中Spkt表示数据包的长度,bw和dprop分别表示路径的带宽和传播延迟.因此,路径i在Tinterval内的最大传输量PKimax_trans的计算公式如下:可以得出终端设备连接的所有路径并行传输的最大传输量:PKmax_trans=∑NnetPage8之后,需要根据A(p)中数据包的权重以及长度进行选择性丢包.数据包权重pω需要读取数据包确定,因为增强层数据包的解码需要参考基础层,所以其权重小于基础层数据包.优先丢弃增强层数据包不会影响基础层解码,可保证视频的基本质量,因此按照pω值从小到大将数据包逐个丢弃,直到满足A(p)中剩余数据包长度之和不大于PKmax_trans为止,即PKmax_trans∑NA(p)(2)解码时间计算.在选择性丢包结束后,A(p)中剩余的数据包即为本次间隔内所需传输的数据包,因为受客户端播放延迟(playbackdelay)Δ以及最大延迟上限DBmax的条件约束,需要逐个计算每个数据包的解码时间(decodedeadline),数据包的正常解码时间等于该数据包的播放时间,计算公式如下:其中δ表示播放速率,但是经常会出现最大延迟上限小于播放时间的情况,因此解码时间需要取两者之间的最小值:(3)数据包分段发送.根据H.264的RTP规范[18],数据包发送需要按照其编码产生顺序即编码序号,在解码时间计算完成后,将A(p)中的数据包按照编码序号升序排序,逐个识别需要分段的数据包.因为H.264RTP规范[18]不允许对一些数据包进行分段.例如参数集和补充增强信息类数据包.此类数据包长度很小,从延迟方面考虑没有分段的必要性,其处理方式是直接选择一条端到端延迟最短的路径发送.路径选择使用pq的取值表示,数据包p选择路径i的表达式如下:分段步骤需要计算分段数量、各分段的长度以及各分段所发送的路径.为充分利用移动终端所连接无线网的带宽,本文假设数据包的分段数量等于无线网的数量Nnet,数据包的分段使用向量表达式:因为所有分段经路径分集传输在客户端重组后方能进行正常解码,被分段数据包的端到端延迟等于所有分段端到端延迟的最大值,计算各路径所传输分段长度的目的是将延迟最小化,表达式如下:Minimize:pc=MAX{psizeSubjectto∑Nnet转换为方程组表达式如下:i/bwi+dproppsize烄烅∑Nneti=ppsize烆sizei=1求解方程组可得结果:i=psize-∑Nnet[psizei即为路径i传输的分段长度,PFDA算法的psize算法1.数据包分段发送算法PFDA.Initialize:j←0;AccuLen←0;伪代码描述如算法1所示.1.IFPKmax_trans<∑NA(p)2.SORT-BY-WEIGHT(A(p))3.狆=(p1,p2,…,pi,…,pNnet)4.WHILEj<NA(p)andDiscardSize>0DO5.DiscardSize←∑NA(p)6.DISCARD-PACKET(pj)7.NA(p)←NA(p)-18.j←j+19.ENDWHILE10.ENDIF11.SORT-BY-SEQNUM(A(p))12.FOREACHPacketpinA(p)13.pd=min(pseq/δ+Δ,DBmax)14.IFIS-PACKET-RECEIVED(pseq)==trueTHEN15.FORi←1TONnet16.IFi!=NnetTHEN17.psize18.pi←PACKET-FRAGMENTE(p,AccuLen,psize19.AccuLen←AccuLen+psize20.ELSE21.pi←PACKET-FRAGMENTE(p,AccuLen,22.pq23.ENDIF24.ENFFOR25.ELSEpq←MIN1iNnet26.ENDFORPage93.2PRRA算法数据包在服务器经分段和传输后,需要在客户端进行重组后解码,在传输过程中,会经常出现丢包、乱序、延迟较长等情况,为了解决这些问题将解码率最大化,本文设计了客户端的数据包接收及重组算法,命名为PRRA,该算法具体可分为:数据包有效性检验、缓存接收以及缓存窗口自适应滑动.数据包接收缓存的数据结构使用多值映射(multi-valuedmap),即一个主键(key)对应多个值(value),编码序号作为主键,该主键同时对应三个值,即数据包总长度、已接收长度以及数据包负荷(packetpayload),如图8所示.当接收到一个数据包p之后,在RTP报头中可以获取解码时间pd,而编码序号、所属数据包(NAL单元)总长度、该分段起始位置以及该分段长度可以从自定义报头中获取(如2.1节中所述),剩余的信息如数据包权重pω需要读取数据包负荷获取,读取上述信息后进入PRRA算法的具体步骤:(1)数据包有效性检验.检验有效性的条件有以下3点:①数据包的到达延迟即tcur-pCT,是否已超过该数据包的解码时间pd,如果已超过则选择丢弃该数据包;②数据包的编码序号是否大于解码序号,因为PRRA算法使用了滑动窗口管理,可能会出现编码序号小于解码序号的情况,此情况下该数据包无效,选择丢弃;③该数据包所参考数据包中是否有被丢弃,参考数据包用集合D(p)表示,如果有则表示该数据包无法正常解码,选择丢弃.数据包有效性检验可以节省缓存开销以及不必要的程序执行时间,如果该数据包有效,则进入PRRA算法的第(2)步骤缓存接收,无效则进入第(3)步骤滑动窗口管理.(2)缓存接收.在有效性检验完成后,如果该数据包还未被丢弃则可以将其存放至接收缓存中,首先遍历缓存的编码序号,并与pseq比较,确定该数据包到达之前是否已有同一编码序号的分段已经被接收,根据判断结果按以下两种情况处理:情况1.未收到该编码序号的分段,将pseq作为主键插入接收缓存中,从p的自定义报头中读取所属NAL单元总长度赋值给对应的TotalSize,申请长度为TotalSize的内存空间,对Payload初始化,然后将p按照其起始位置拷贝至Payload中,将psize赋值给对应的已接收长度ReceivedSize;情况2.已接收该编码序号的分段,查找pseq所对应的Payload,将按照其起始位置拷贝至Payload中,对应的ReceivedSize增加psize,即ReceivedSize+=psize.服务器的PFDA算法并非对所有数据包都进行了分段,上述第一种情况可以处理所接收的未分段数据包.在完成缓存接收的步骤之后进入算法的最后一步滑动窗口管理.(3)缓存窗口自适应滑动.为了避免对单个数据包停止等待过长时间,需要对接收缓存设置随时间自适应向前滑动的机制,将接收缓存中无效的数据包及时丢弃,将有效的数据包提交给解码器,即将数据包存入接入单元(accessunit).有关接入单元的详细介绍可参考文献[20-21].解码序号是已被解码的数据包的最大编码序号.滑动窗口管理操作步骤如下所述:①以解码序号作为查询条件(即主键)从数据包接收缓存中获取对应的数据包总长度、已接收长度和数据包负荷.下面分3种情况:步骤①,继续执行循环.③将该数据包从缓存中删除,解码序号自增长1,返回PRRA算法伪代码如下.算法2.数据包接收重组算法PRRA.Initialize:LoopFlag←true;1.IFtcur-pCTpdorpseqDecSeqTHEN2.DISCARD-PACKET(p)3.ELSEFOREACHPacketpinD(p)4.IFIS-DISCARDED(p)THEN5.DISCARD-PACKET(p)6.ENDIF7.ENDFOR8.ENDIF9.IFIS-PACKET-RECEIVED(pseq)==trueTHEN10.pb←RETURN-BY-SEQNUM(B(p),pseq)情况1.查询结果为空,表示还未接收到该序号的数据包或分段,根据当前时间与该数据包的播放时间判断是否等待.如果tcur<DecSeq/δ+Δ则结束循环继续等待接收下一个数据包.如果tcurDecSeq/δ+Δ则编码序号自增长1,进入步骤①;情况2.查询结果非空,表示已接收到该序号的数据包或分段,在当前时间与数据包产生时间之差小于解码时间的情况下,即当tcur-pCT<pd时进入步骤②;情况3.查询结果非空,当tcur-pCTpd时表示该数据包已经超过解码时间,进入步骤③.②判断已接收长度与数据包总长度是否相等.如果相等则将该数据包存入接入单元,解码序号增加1,返回步骤①,继续执行循环.如果不相等,结束循环等待接收下一个数据包.Page1011.pb←COMBINE-PACKETS(pb,p)12.psize13.ELSEADD-PACKET(B(p),p)14.ENDIF15.WHILELoopFlagDO16.ptemp←RETURN-BY-SEQNUM(B(p),pseq)17.IFptemp==NILTHEN18.IFtcur<DecSeq/δ+ΔTHEN19.LoopFlag←false20.ELSEDecSeq←DecSeq+121.ENDIF22.ELSEIFtcur-pCT23.IFIS-PACKET-INTACT(ptemp)THEN24.PROCESS-ACCESSUNIT(ptemp)25.REMOVE-PACKET(B(p),ptemp)26.DecSeq←DecSeq+127.ELSELoopFlag←false28.ENDIF29.ELSEREMOVE-PACKET(B(p),ptemp)30.DecSeq←DecSeq+131.ENDIF32.ENDIF33.ENDWHILE4实验及结果分析4.1实验环境及实验场景本文所使用的实验工具及相关参数设置如下图9实验场景拓扑图4.2实验结果分析本文所采用的三种对比方法为:PFDA-PRRA、EDPF以及带宽整合单路径BASP(BandwidthAggregatedSinglePath).带宽整合单路径表示整合异构无线网带宽的最理想状态.因此对上述三种方法进行对比,可检验本文所提出的PFDA-PRRA算法的整合带宽以及减少端到端单向延迟的性能.使用的指标如下:(1)单向延迟.对于EDPF和BASP,单向延迟所述:(1)视频编解码器使用H.264/SVC的参考软件JointScalableVideoModel(JSVM9.12)①,比特率分别使用1Mbps和3Mbps.使用长度为300帧的标准视频序列Foreman_cif作为编码YUV文件.主要编码参数及其设置如表4所示.(2)网络仿真工具使用QualNet②,一种功能强大主流的网络仿真器.但是QualNet的应用层协议不具有视频传输功能.因此本文将JSVM的代码以静态链接库的形式与QualNet结合并且添加视频编解码以及传输协议.主要参数设置如表5所示.实验场景如图9所示.节点移动模型发送时间间隔等于数据包到达客户端时间减去数据包产生时间.而PFDA-PRRA需要进行分段重组操作,其单向延迟等于数据包分段全部到达客户端并且重组完成的时间减去数据包产生时间;(2)丢包率.该丢包率是指在给定最大延迟上限情况下,PRRA算法的有效性检验步骤中,超过其①②Page11解码时间的数据包会被丢弃,如果该数据包被用于预测,所预测的数据包也会被丢弃;围内的数据包占视频流数据包总量百分比;(3)延迟累计分布.延迟累计分布即在该延迟范(4)网络开销.PFDA-PRRA算法在应用层对数据包进行了分段,因此相对于另外两种方法会造成额外的网络开销,需要对此进行定量分析.单向延迟.2.1节中已经给出了两种不同比特率情况下数据包长度分布区间和概率,为了保证采样样本充足,当比特率等于1Mbps时采样区间为0~15KB,而比特率等于3Mbps时采样区间为15~40KB,结果如图10所示.从图10(a)中可以看出,当数据包长度较小时,PFDA-PRRA的延迟要略大图10单向延迟图11丢包率①当比特率等于1Mbps时,最大延迟上限等于150ms时使用BASP和PFDA-PRRA的丢包率分别为5.35%和5.69%,基本上可以达到良好服务质量的要求,此时EDPF的丢包率为25.1%,无法提供良好的服务质量.使用EDPF只能在最大延迟上限为400ms时达到可接受服务质量的要求,此时于BASP,这是因为数据包分段时自定义报头所附加的长度以及网络传输随机因素的影响.在实验结果所取的测量样本中,两种算法的延迟十分接近,该趋势在图10(b)中非常明显,其中出现了个别差异较大的情况(例如当数据包长度等于32515字节时,BASP的延迟为355.6ms,而PFDA-PRRA的延迟为388.56ms).因此,可以得出结论:PFDA-PRRA在减小单向延迟方面相对于EDPF的优势十分明显,十分接近带宽整合的理想状态BASP.丢包率.实验结果如图11所示,在给定延迟上限时,两种比特率情况下PFDA-PRRA与BASP的丢包率都十分接近,明显低于EDPF.从该实验结果中可以得出以下两个结论:EDPF的丢包率为1%;②当比特率等于3Mbps时,PFDA-PRRA可以满足用户的可接受服务质量,最大延迟上限为400ms时丢包率为7.34%,而EDPF的丢包率为29.8%,无法达到要求.延迟累计分布.实验结果如图12所示,当比特Page12率等于1Mbps时,BASP和PFDA-PRRA分别有98.1%和94.92%的数据包单向延迟在150ms内,而此时EDPF仅为91.57%.当比特率等于3Mbps图12延迟累计分布函数网络开销.单向延迟和给定延迟上限时的丢包率证明了PFDA-PRRA减少端到端单向延迟以及带宽整合的性能,但是该算法减少延迟的代价是增加了网络开销(networkoverhead),假设一个视频数据包长度用Spkt表示,在网络中所占的总开销SNet计算公式如下所示:SNet=Spkt+(σf+σp)+(Spkt/SMTU)·(σa+σp)上式中σf表示数据包小于最大传输单元部分(即在底层网络中不需要进行一步拆分的部分)的开销,σa表示大于最大传输单元的每一个拆分部分网络开销,σp表示传输路径的开销(例如每条链路的报头长度),SMTU表示最大传输单元长度,如果数据包被分成n段,则每个分段总开销计算公式如下:SiNet=Si因此,单个数据包分段后的额外传输量可以通过以下方程组求出:方程中的Sheader表示分段所添加自定义报头长度,上述方程组计算结果为Sextra=n·Sheader1+σa+σpS()MTU+(n-1)·(σf+σp)该公式中最大传输单元以及开销会因网络类型时,使用BASP和PFDA-PRRA单向延迟在400ms内的数据包占99.5%和96.5%,而EDPF只占89.9%.以及各层协议参数设置不同而改变.为了将问题简化,本文中假设所有数据包的σf,σa以及σp相等.被分段数据包的数量用符号Npkt表示,总的额外网络开销近似等于∑NpktSiextra≈Npkt·n·Sheader1+σa+σpS()MTU+(n-1)·(σf+σpi=1本文实验中,在比特率分别等于1Mbps和3Mbps的情况下,总的额外开销分别近似等于97000字节和105000字节,分别占各自视频数据流总长度的6.51%和2.56%.4.3算法复杂度分析PFDA-PRRA算法复杂度等于PFDA与PRRA复杂度之和.下面对两种算法做出复杂度分析:(1)PFDA算法中选择性丢包步骤需要首先按照权重对所有数据包排序,然后执行丢包步骤,该过程时间复杂度表达式为其中NDiscard表示丢弃数据包的数量.解码时间计算的循环步骤与数据包分段发送一起执行.因此上述两步骤的复杂度等于数据包分段发送的复杂度,该步骤首先需要对选择性丢包后剩余的数据包按照编码序号排序,复杂度为PFDA=(NA(p)-NDiscard)·(NA(p)-NDiscard-1).T2之后进入循环阶段,对数据包逐个计算解码时间,然后根据类型判断执行分段多路径传输或者不Page13分段直接单路径传输,时间复杂度为T3因此PFDA算法总时间复杂度为TPFDA=T1最坏情况是当NDiscard=0并且Npkt=NA(p)时.该情况下PFDA的复杂度为(2)PRRA算法中数据包有效性检验步骤需要对接收数据包的所有参考帧进行搜索,复杂度表达式为在缓存接收步骤中,按序号搜索并返回是否有已接收的数据包分段.复杂度表达式如下:缓存窗口自适应滑动复杂度为其中NDec表示解码序号向前滑动的次数.因此PRRA算法的总时间复杂度为下算法复杂度为O(TPFDA)=(NB(p))2.最坏情况为当ND(p)=NDec=NB(p)时.该情况因此,PFDA-PRRA复杂度的最坏情况为5总结及进一步工作本文提出了一种异构无线网环境下移动多媒体会议端到端服务质量保障方法.该方法针对多媒体视频的传输单向延迟问题,将数据包分段重组与异构无线网路径分集传输相结合,在考虑带宽、延迟、长度以及权重等多种参数情况下对数据包进行分段并发送,各分段经路径分集传输后到达客户端,进行有效性检验和重组.仿真实验验证了该方法能有效整合异构无线网带宽,减少视频流传输的单向延迟.今后我们将针对信道误码、丢包、带宽波动以及数据包乱序[22]等问题做进一步研究.
