Page1三维网格曲面的可展性优化算法徐鹏飞刘利刚(浙江大学数学系杭州310027)(浙江大学CAD&CG国家重点实验室杭州310027)摘要可展曲面是每点高斯曲率均为0的曲面,具有许多良好的性质,因此在工业中具有很多应用.将一般的曲面用可展曲面来逼近表示具有现实意义.以此为目的,文中设计了一个有效的算法来处理一般的曲面,使得处理后的曲面尽可能满足可展的性质,同时与初始的曲面尽量地接近.首先利用最小范数方法来对网格曲面进行处理,得到初始预测的网格曲面.初始预测曲面具有良好的可展性,但是不能较好地保持网格的局部结构.然后利用尽可能刚性(As-rigid-as-possible)的方法,在初始预测曲面的基础上进行修正得到新的网格曲面.为了保持局部结构,作者的方法可以是基于顶点邻域的,也可以是基于三角形的.这两个过程可以迭代进行,直至得到满足要求的结果.与以往的算法相比,文中算法能保证结果收敛,迭代次数更少,且能得到更好的结果.关键词可展曲面;尽可能刚性;最小范数法;最小二乘法;迭代1引言可展曲面可以无扭曲地展开到一个平面上,其高斯曲率处处为零[1-2].在工业生产中,许多地方要将二维的材料贴合到三维曲面上.例如,在造船工业中,要将金属条片与船身贴合;在制衣业中,要将二维的布料缝合成完整的衣服;在家具制造业中,要将一些皮革蒙在家具表面;在建筑业中,要将一些板材置于特定的位置,并满足一些特定形状.而可展曲面正好具有这样的性质,即可以等距映射到平面上.如果这些材料所贴合的部位是可展曲面,则将这些材料与此部位贴合时,不用进行任何扭曲或拉伸.这样,材料本身内部所受的应力会大大减少,可以显著提高材料的使用寿命.然而,很多时候,材料所要贴合的部位不具有可展的性质.这就促使人们研究是否可以在保证原物体形状变化不大的情况下,将其表面修改为可展曲面.在运用计算机辅助设计时,人们可以通过对三维模型进行处理,来达到目的.因此,将三维模型表面处理为近似可展曲面,有很大的现实意义.关于可展曲面的逼近已有一些相关工作.文献[3-5]研究了利用直纹曲面等等距曲面对原模型进行逼近.Kilian等[6]研究了如何在平面上生成曲线折痕,使得该平面沿着折痕折叠后生成可展曲面.Rose等[7]提出了一种以交互输入的曲线作为边界曲线的可展曲面生成算法.Wang[8-9]提出了一系列曲面在离散情况下的可展处理.然而这些方法虽然最终能得到可展曲面的结果,但是对原曲面的破坏较大.本文的方法借鉴了文献[8]中的方法,同时保持原模型的结构,使得生成的可展曲面的结果既能够满足可展性质,又能保持原模型网格的结构.本文及文献[8]的方法都需要通过迭代来生成最终的结果.但是文献[8]中的方法在最后的几步迭代时需要进行特别处理,才能得到最终收敛的结果.而本文的方法在应用时不需要进行这样的特殊处理.保留原模型的结构的方法,很多工作都有涉及.本文利用了文献[10]中提出的尽可能刚性(as-rigid-as-possible)的方法,对模型形状进行改变时,模型的每一部分都尽量在做旋转或平移变换,而尽量不出现拉伸或扭曲的变换.在满足这个条件时,模型的整体的变换能够保持结构尽量不变.另外,本文也借鉴了Liu等在文献[11]中将三角面片作为旋转单位的方法.利用这些方法,本文得到的结果能够很好地保持原模型的结构特征.问题描述对于给定的一个模型,需要将其表面处理为可展曲面或近似可展曲面.在计算机图形学中,模型的表面一般可离散表示为三角网格曲面.在本文中,我们只讨论具有单一边界的网格曲面,即曲面与一个圆盘同胚.对于复杂的模型曲面,我们可以将其进行分块,使得每一小块都与圆盘同胚,然后对每一块分别处理.我们采用文献[9]中提出的网格顶点的可展性度量:如果在某个顶点处,与这个顶点相连的内角之和等于2π,则认为在这个顶点处,网格满足可展的性质.对于一个给定的单边界网格曲面,如果每个内点(即非边界点)都满足可展性质,则认为这个网格曲面是可展的.显然,一般的三角网格曲面并不满足可展性质.本文研究的问题为:给定一个三角网格曲面,如何改变网格顶点的位置,使得生成的新的三角网格曲面满足可展性,并且能很好逼近初始给定的网格曲面.2基于ARAP方法的可展性优化算法文献[8]提出了一种基于最小范数的方法来将一个三角网格曲面优化成近似可展曲面,其基本思想就是移动顶点坐标使得每个顶点满足可展性质,即每个顶点的内角之和等于2π.我们利用这个方法来对网格进行处理,得到新的网格,称为初始预测.由于初始预测不能保持原始网格的形状,并且顶点较不规则,我们希望能够在初始预测的基础上进行优化.为了能在优化过程中尽可能地保持原始曲面,我们采用文献[10]中的尽可能刚性(ARAP)的方法,来对网格进行优化.优化过程保持了原始网格曲面的形状,使得顶点较为规则.同时达到可展的要求.上述两步,即初始预测和尽可能刚性优化,可以通过迭代不断改进结果,最终得到很好的结果.2.1利用最小范数方法得到初始预测始预测网格,可通过以下优化问题求得下面具体介绍本文的算法.对于每次迭代,先利用最小范数方法[8]得到初其中,Vint是网格所有内点下标的集合,狏oPage3初始顶点,狏p是新的顶点位置.可见未知数只是网格的内点位置.设θ(狏p)为狏p以及狏p的邻点的一个函数.记狏p=p+犱p,通过泰勒展开[8],可以得到狏oθp(狏o其矩阵形式为θp(狏o描述.由于式(3)是欠定的,有无穷多组解.为使新网格曲面与初始曲面尽量接近,我们可以求一组解,使犱2最小.即为最小范数问题:这里矩阵犃是稀疏矩阵,所以可以有效的求得犱,进而求得狏p.这样,就得到了整个过程的第一步,即得到了初始预测.2.2尽可能刚性(ARAP)方法利用上述的最小范数方法,我们可以得到近似可展的新曲面.但是,新曲面与原始曲面相比,顶点位置变得较为不规则,整体形状也有较大变化.因此需要对其进行优化.尽可能刚性的方法使得网格在变形的时候,尽量保持其局部性质.局部在进行变化时,尽量只做旋转或平移变化,而不做拉伸和扭曲的变化.我们根据最小范数求解得到的顶点和初始网格的顶点可得到每个局部的旋转矩阵,之后再利用这些旋转矩阵,对初始顶点狏o在文献[10]中,局部被定义为:网格曲面的内点及其一环邻域所组成的一块,称为cell.在文献[11]中,定义每个三角面片为一个局部.这两种方法各有优点,最终得到的结果也都十分理想.下面对这两种方法分别进行讨论.2.2.1以cell为局部单位我们已经得到对原始网格的初始预测.对于每个cell,我们希望它们的变化都可以用旋转变换来进行逼近.假设旋转矩阵为犚p,则有其中实际中,不可能每个局部的变化都能严格地满足式(5).因此,可以定义一个误差函数,即,对于每个cell,有其中wpq是对每条边犲pq的权重.整体上,总的误差函数为对于每个cell,由式(7)可得在本文中,wp取值均为1.我们希望得到一系列的旋转矩阵,使得式(8)最小.即,尽量使初始网格每个局部进行旋转变换来逼近初始预测.E(p)=∑q∈NV(p)wpq(犲T上式中,不包含犚p的项是常数项,可以不用考虑.要令上式最小,等价于寻找合适的犚p,使∑q∈NV(p)wpq犲T最大.而argmax犚p∑q∈NV(p)wpq犲Targmax犚p并记则式(10)可以写作当犚p犛p是对称半正定矩阵时,上式取到最大值.为了使之满足对称半正定矩阵的条件,可以通过以下的方法来得到犚p.首先将犛p进行SVD分解[10].则可以得到其中,犝p和犞p是正交矩阵,Σp是对角矩阵,对角线上的值为犛p的奇异值.同时,令犚p等于在实际计算时,适当改变犝p每一行的符号,使得犚p满足作为旋转矩阵的要求.此时有犚p犛p=犞p犝T即此时犚p犛p是对称半正定矩阵.在具体求解时,式(10)中权重wpq采用cotangent权系数[14],即下式:图1为角度关系.可以发现,有wpq=wqp成立.Page4得到每个cell的旋转矩阵之后,再将这些旋转矩阵作用到初始网格上来进行优化,即,作用到顶点p.在实际操作时,由于局部之间的相互影响,不能狏o保证每个局部都能够进行旋转变换.可以考虑找到一组解狏p,使得式(8)最小.对式(8)中的变量狏p求偏导,并令其值为0,则有变换上式,可以得到∑q∈NV(p)wpq(狏p-狏q)=∑q∈NV(p)改写上式为矩阵形式,可以得到其中犔c是一个矩阵.犞是网格所有内点组成的向量,犵c是通过式(18)右边得到的向量.由于所有的wpq是从原始网格得到的,所以每次迭代时,犔c都是一样的,即犔c只需要计算一次.而犵c需要每次迭代时利用当前的网格信息以及初始预测得到.2.2.2以三角面片为局部单位当以三角面片为局部单位时,方法和以cell为局部单位相同.但是实际操作时有一些区别.当以三角面片为局部单位时,三个顶点以三角形的重心为轴,做旋转变换.对于某个三角面片ft,设它的顶点做旋转变换的旋转矩阵为犚t,重心位置为狏g,则可以得到下式:其中和以cell为局部单位类似,可以对每个三角面片定义一个误差函数:整体误差函数为其中,wt取值为1.同样用SVD分解,类似可以求得旋转矩阵犚t.现在要计算新的顶点.对式(23)中的变量狏p求偏导,并令其为0,有上式中,NF(p)表示与顶点狏p相连的三角面片的指3∑t∈NF(p)标集.若t∈NF(p),则三角面片ft中包含狏p作为顶点.不妨假设狏p是所有三角面片ft的第一个顶点.则可以得到下式:E狏p=2即∑t∈NF(p)改写上式为矩阵形式,可以得到(2狏p-狏t1-狏t2)=∑t∈NF(p)犚t(2狏o其中犔t是一个矩阵.犞是网格所有内点组成的向量,犵t是通过式(26)右边得到的向量.与以cell为局部单位时类似,矩阵犔t也是只需要计算一次,犵t需要在每次迭代时利用当前网格信息以及初始预测得到.2.3利用最小二乘方法对网格进行优化利用ARAP方法,可以保留原始网格的信息.结合最小范数方法得到的初始预测,可以对网格曲面顶点进行优化.然而在实际操作时发现,如果直接利用式(19)或(27)进行计算,则并不能得到很好的结果:计算时,迭代次数过多,对于某些模型,甚至不能得到收敛的结果.这是因为在求初始预测时,泰勒展开式的高次项被忽略了.当初始网格曲面的可展性很差时,计算的误差也较大.而ARAP方法只是保留初始网格的结构,并没有提供可展的限制.如果利用ARAP方法对网格曲面进行优化,则会使得初始预测的误差进一步加大.为了加入可展的限制,可以加入最小范数步骤中的线性方程,即式(3),从而得到()犃由于式(28)中的系数矩阵有可能是超定的,不一定有精确解.因此我们在最小二乘意义下求得方程的最优解[12],即找到一组解,使下式最小上式中,犱=犞-犞o,犵=犵-犔犞o.则可以解得式(28)的最小二乘解为犱=犃T犔()TT()之后结合犞=犞o+犱,可以得到优化后的顶点位置.2.4最小范数步骤时的一些权重在实现过程中,我们还可以将已经很接近可展的顶点和未接近可展的顶点来区分对待,让未接近Page5可展的顶点更容易获得较大的变化,则可以更快地令结果收敛.具体只要将不需要更多变化的顶点加上较大的权重,若这个顶点移动很小的距离,则目标函数的值便会显著增加.由此便限制了这些顶点的改变.具体的权重设置方法如下(这里的数值是实验得到的结果.可以根据需要进行调整):(1)得到当前所有内点处,与这个顶点相连的内角之和,与2π的差difp.(2)设定两个阈值(thresholdvalue),分别为tvl=0.005,tvu=0.5.对于某个顶点,如果difp大于tvu,则将此顶点处的权重wp设为1.如果difp小于tvl,则将此顶点处的权重wp设为100.如果difp在tvu与tvl之间,则由wp=tvudifp重.同时,将相应的权重乘到式(3)中犃的相应列.的权重.本文在实际应用时,设其上限为0.9,下限为0.1.设difp=difp+∑q∈NVin(p)dif(3)令狏p=狏o图2实验模型由图2中可以看到,虽然Cloak模型很多地方接近可展,但仍有一些部分要进行处理.本文将其分割为前后两部分进行处理.如果进行更细的分割,则能得到更好的结果.图中灰度表示模型可展程度.颜色接近浅色,表示可展程度较好;接近深色,表示可展程度较差.灰度对应数字是指某顶点处内角和与图3Cloak模型前半部分的处理(左边大图是原始模型,左上图的颜色代表了可展程度,左下图为网格模型.右边小图是不同方法的处理结果,其中第1行是文献[8]中方法处理的结果,第2行是以Cell为局部单位的结果,第3行是以三即difp是这个顶点处的difp及其内部邻点的difp的均值.将difp与tvl比较,如果前者较大,则设wp=0.9,否则设wp=0.1.根据实验结果来看,这样设置权重能够得到不错的结果.3结果及比较我们利用本文提出的算法对许多模型进行了试验和处理.算法适用于处理一些近似可展的模型曲面,而并不适用于所有的模型,尤其是一些复杂的,含有很多细节信息的模型.在实际应用时,如果需要处理的模型较复杂,可以先将其分块,然后对各块进行处理,再进行拼接.各图中的颜色表示曲面的可展程度.颜色接近蓝色,表示可展程度较好;接近红色,表示可展程度较差.颜色对应数字是指某顶点处内角和与2π的差值.可以先将其分为前后两块,然后分别进行处理.本文的算法可以处理类似于图2的模型.我们2π的差值.在图3和图4中,我们和文献[8]的方法进行了比较.文献[8]的方法需要对迭代进行一些特别处理才能得到收敛的结果,而我们的方法不需要任何处理都能够收敛.并且结果显示,本文的方法能得到更优的结果.Page6图4对Cloak模型背部的处理结果图3是Cloak模型的前半部分.从最终的结果来看本文方法得到的结果在保持原模型的形状上要好一些.而在处理过程中,可以发现经过1次,以及4次迭代后,本文的结果要明显更接近可展.而文献[8]中的方法收敛速度却没有那么快.为了得到最终收敛的结构,用文献[8]中的方法有时需要采取一些特别的措施.而本文的方法不需要区别对待,只要不断的进行迭代,就会得到收敛的结果.这也是这个算法的优势之一.图4是Cloak模型的后半部分.这个结果同样显示了本文的结果能更好地保持原模型的形状.将图3与图4中的处理结果相结合,就可以得到对整个Cloak模型处理的结果3.1计算中的数据表1是本文用到的一些模型的数据.表2是处理模型的一些数据统计.其中,Eθ是指所有顶点处内角和与2π差值的最大值.Ev是指所有顶点偏离初始位置的最大值.表2中,最小范数方法想要得到收敛的结果,需要在迭代若干步后,进行一些特殊处理表2处理模型的计算数据(PC数据:IntelCoreDuoprocessorT2300E,1.66GHz,512MBRAM)CloakfrontCloakback时间(每次迭代)/ms步数782812976722375248553116561719179775478015(具体请参见文献[8]).而本文的方法没有这样的情况.在表2中,处理模型并没有设置终止值,而仅仅是不断地迭代.当结果相对稳定时终止迭代.根据表2中的数据,可以发现,用最小范数方法得到的结果具有较好的可展性,一般Eθ比本文的结果要小.但是考虑实际情况,当Eθ达到10-3数量级时,已经没有必要再进行迭代,因为此时已经足够可展.事实上,只要迭代足够多的次数,本文的方法也是可以达到更小的Eθ的.如果考虑到与原始模型的接近程度,就可以看到本文方法的优势了.如表2所示,用本文的方法,最后的Ev要比最小范数方法小得多.这说明了这个方法在保持模型初始位置上要优于最小范数方法.通过对图3~图6等图的观察也可以发现,本文的方法在保留原模型的形状上要更好一些.PatchCloakfrontCloakbackSkirtPage7图5对Patch模型的处理结果图6对Skirt模型的处理结果4总结与结论本文给出的算法在得到理想的可展曲面的同时,还保证了原模型的网格结构尽量不被破坏,这是算法的优势所在.从这篇文章中一些例子也可以看到,最后得到的结果也确实在保持原模型结构上较优.本文的算法在实际应用时,只需设定一个可展性的目标值,然后不断地进行迭代即可.这使得这个方法更易被应用.另外,从实验的数据来看,被处理的模型不会出现与原形状相差过大的情况,这使得本文的算法能够胜任处理各种模型.本文算法也存在着一些不足.由于本文算法结合了ARAP方法,使得计算量增加较多,因此每次迭代所需要的时间较长.本文的方法虽然取得了一些结果,但是仍有改进的余地.首先,可以考虑对顶点赋予不同的权重,以得到更好的结果.其次,这个方法并没有加入人工交互的成分,只是单纯的对网格进行处理.但是在实际应用时,要处理的模型表面会有一些特殊情况,比如某些部分不需要处理,或者某些顶点位置不能移动.这个时候,可以利用交互的方法来选出这些顶点,然后将其固定或赋以特殊的权重,使得处理后能够得到人们需要的结果.
