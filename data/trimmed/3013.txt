Page1输入队列交换机中嵌套周期流优化调度问题的复杂性分析吴俊李斌(扬州大学信息工程学院江苏扬州225009)摘要许多网络应用需要网络交换节点能保证分组转发的时延,周期流量的调度是提供这一保证的重要手段.在流量负荷过载的情况下,如何进行优化调度是该领域的重要课题.文中首先依据交换机吞吐率和呼损率两个性能指标,分别定义了两种交换机周期流量调度的最优化问题.为了分析这些优化调度问题的复杂性,文中定义了一种受限的Max2Sat问题,并证明该Max2Sat问题是NP完全的.然后,通过将该问题多项式归约到交换机周期流优化调度问题,证明了仅有1和2嵌套周期流的交换机优化调度问题是强NP完全问题.并进一步利用该结果证明了任意嵌套周期的优化调度问题也是NP难的.关键词输入队列;交换机;分组调度;周期流;硬实时;NP完全1引言由于输出队列结构的交换机制存在严重的可扩展性问题,目前大量的高速交换节点采用了输入队列结构[1-5]或Broadcast-and-Select光纤交换机制[6-10].这类交换节点在分组转发时有着共同的限制:同一时刻任意两个被转发的分组不能涉及同一个输入或输出端口(或收发器),否则将产生冲突.因此在作分组调度决策时不仅要考虑分组调度的目标Page2还要考虑冲突的解析.另一方面,随着多媒体信息的广泛使用,网络中实时流量所占比重日益增多.这类实时流量一般要求分组在被转发到目的地时满足一定的时限要求.这要求网络的交换节点在作资源分配决策时能够考虑到流量的这种需求,即提供一种QoS保证的转发服务.支持QoS的交换机调度问题与网络的性能及服务能力密切相关,因而得到了广泛而深入的研究.解决这一问题的思路大致可以分为3种:区分服务方式、软实时调度和硬实时调度.区分服务方式只能提供统计意义上的质量保证,一般不能提供刚性的时延保证.文献[3]提出了一种基于博弈的帧调度算法,该算法在输入流量不过载的情况下可以达到100%的吞吐率且能够对不同的流提供不同带宽的服务.文献[8]中给出WDM光纤网络的一种自适应调度算法MLF-TTS,该算法兼顾了对实时流量的响应和非实时流量的性能.但由于这类算法难以提供刚性的服务质量保证,不能满足对时延、带宽等有着严格要求的应用.软实时调度算法一般通过对服务带宽的确保来提供时延的保证.这种带宽的保证可以通过将PGPS(Packet-by-PacketGeneralizedProcessorSharing)方法引入到交换机调度中加以解决.文献[2]将PGPS与稳定婚姻匹配算法相结合,为每条虚电路提供了服务带宽的保证.文献[5]采用Birk-hoff-vonNeumann算法将流量矩阵分解再结合PGPS来提供每条分组流的带宽保证.PGPS本质上属于fluid-track方法,文献[4,11]进一步深入地研究了交换机调度中的fluid-track方法.文献[4]的结果表明采用fluid-track类的调度算法,交换机滞留(backlogged)的分组数是O(N2).文献[11]显示最优的fluid-track策略只存在于2×2交换机.这表明,交换机软实时调度算法只能提供较松的时延界保证.硬实时调度是交换机调度的一个重要课题,这不仅因为它可以同时提供时延和带宽的保证,而且目前的光纤交换节点没有大量的光存储器,而软实时调度却需要较大的分组缓存队列.文献[6]讨论了逐分组时限保证可调度问题的复杂性,通过将TTD问题[12](TimeTableDesign)归约到该问题,证明了仅有3个时限类硬实时分组可调度问题是NP完全的.文献[1]研究了逐分组时限保证的分组最优调度问题,证明了当仅有两个时限类且第1个类及总和流量不过载的情况下,这种硬实时调度问题是多项式可解的,并基于两个类的调度算法设计了解决多个时限类的启发式算法.文献[13]进一步证明了两个时限类时,若第1个类和总和的流量过载的最优调度问题仍然是NP难的.文献[6-7]给出了EDD(EarliestDueDate)、MLF(MinimumLaxityFirst)等启发式算法得到可行解的负载条件.文献[14]研究了周期流的交换机硬实时调度问题,提出的NPS(NestedPeriodScheduling)算法能解决嵌套周期的可调度问题,并给出了NPS用于非嵌套周期时的性能界.本文着重讨论交换机嵌套周期流优化调度问题的复杂性.首先我们定义了两种交换机的优化调度问题,通过将一种受限的Max2Sat问题多项式归约到这两个优化问题,证明了即使是只有1和2两种周期的情况下,这类优化调度问题也是强NP完全的.且1和2周期优化调度问题的NPC证明方法可以推广至1和k周期的情况(k为任意大于1的整数).最后我们将1和k周期的最优调度问题多项式规约到任意嵌套周期的情况,从而证明任意嵌套周期流的最优调度问题是NP难的.2问题描述无阻塞交换机的规模是N×N,链路和交换机的工作时间被分成大小相等的时间片,称为时隙(timeslot).传输的分组是等长的,每个时隙传输一个分组.交换机是同步工作的,即每个分组的传输均起始于一个时隙的开始.交换机在转发分组时,每个时隙需要有一个配置矩阵用以刻画转发决策,本文将这种配置矩阵称为调度s.显然s作为一个调度必须满足∑N本文主要讨论一种上述交换机中分组流的硬实时(hardreal-time)调度问题.这里一条分组流指的是一个分组序列,该序列中的分组来自同一个输入端口且去往同一个输出端口.这种分组流有着恒定速率,即每隔P个时隙有一个分组,我们将P称为该分组流的周期.如果所有的流有着相同的相位,称为是周期同步的,下文所提及之周期流均为周期同步的.硬实时调度要求每个分组必须在该流中下一个分组产生以前被调度,即该分组流中分组调度的时限(deadline)为P.我们以流量矩阵犉k来表示所有周期为Pk的流,其中矩阵的项犉k(i,j)表示来自输入端i去往输出端j的周期为Pk的流数量.当给Page3定一组周期分别为P1,P2,…,Pk,流量矩阵为犉1,犉2,…,犉k的流集合,我们用m表示所有周期的最小公倍数,即m=lcm(P1,P2,…,Pk).周期流调度的任务就是给出交换机的一组调度S={s1,s2,…,sm}来确定分组的转发.如果给定的周期满足i<j:lcm(Pi,Pj)=Pj,则称这类周期流为嵌套(nested)周期流.MP-TSA问题(Multiple-PeriodTimeSlotAssignment)指当交换机不过载时(即任何时刻交换机的归一化负荷小于1),寻找一组调度使得每个分组能够在时限过期前得到转发.当讨论这类调度问题的复杂性时,本文以交换机的规模作为问题的度量,因此我们仅考虑mp(N)的情况(m>p(N)必然没有有效算法),p(·)为一多项式函数.目前,嵌套周期流MP-TSA问题已被证明是可以在多项式时间内可调度的[14].我们这里考虑比MP-TSA问题更一般的情况,即交换机面临的流量是过载的,这是网络控制中比MP-TSA更为现实的问题.交换机的输入流量可能是过载的,导致一些分组在调度时必须丢弃.由于是硬实时调度,因此同一条流中的分组或者全部被丢弃或者全部被转发.在调度时,必须给定决策的优化目标.一个自然的优化目标是使得交换机的吞吐率最大化.为此,我们定义了TMP-TSA(Throughput-optimalMP-TSA)问题.定义1(TMP-TSA).实例:设TMP=(P,F,R),其中P={P1,P2,…,Pk},犉={犉1,犉2,…,犉k},R为一正整数,设m=lcm(P1,P2,…,Pk).问题:是否存在调度S使得∑f∈S其中f∈S表示流f被S调度,P(f)表示流f的周期?上述定义是根据各个流对吞吐率的贡献来确定调度优化目标的,另一种直观的优化目标是交换机用户的满意度,即交换机服务的呼损率最小化,这相当于调度尽可能多的流,可以用被调度流的数量作为度量,本文将此优化目标的调度问题称作SMP-TSA(Satisfaction-optimalMP-TSA)问题.定义2(SMP-TSA).实例:设SMP=(P,F,R),其中P={P1,P2,…,Pk},犉={犉1,犉2,…,犉k},R为一正整数.问题:是否存在调度S使得‖S‖R,其中‖S‖表示被S调度的流的数量?犉1=犉2=010[]000(a)一个(1,3)周期流的流量矩阵图1给出了周期流优化调度的一个简单例子,共有(1,3)两类周期.从图1(a)的流量矩阵显示,1周期的流只有〈3,2〉一条,3周期的流有〈1,2〉和〈2,2〉两条,输出端口2共需要5个时隙才能调度所有的分组,而m=3,因此输出端口2过载.该例的调度方案共有两种,图1(b)的调度方案S丢弃了3周期的流,图1(c)的调度方案S丢弃了1周期的流.∑f∈S的TMP-TSA问题的解.然而,‖S‖=1,‖S‖=2,该例SMP-TSA问题的解却是S.3NMV-(2,3)-MaxSat问题及其m/P(f)=3,∑f∈SNP完全性Max2Sat问题是NP完全理论中的一个重要问题,该问题与许多组合优化问题的复杂性分析有关.Max2Sat问题的一些受限版本仍然是NP难的,寻找这类受限的Max2Sat问题一直是该领域的一个研究方向[15].本文为了分析周期流优化调度问题,定义了如下受限的Max2Sat问题.定义3(NMV-(2,3)-MaxSat).实例:设E=(C,X,R),其中C={c1,c2,…,cK}为子句集,X={x1,x2,…,xN}是变量集,R为正整数.E满足如下限制:(1)任一变量最多出现3次;(2)任一字最多出现两次.问题:是否存在变量X的真值指派使得C中有R个以上的子句被满足.在上面的定义中如果没有任一字最多出现两次的限制称作(2,3)-MaxSat问题,文献[15]证明了(2,3)-MaxSat问题是NPC问题.下面我们证明NMV-(2,3)-MaxSat问题也是NP完全的.引理1.NMV-(2,3)-MaxSat问题是NP完证明.MaxSat属于NP类,显然其子问题全的.NMV-(2,3)-MaxSat也是NP问题.Page4令E=(C,X,R)为(2,3)-MaxSat问题的实例,其中C={c1,c2,…,cK}为子句集,X={x1,x2,…,xN}是变量集,R为正整数.为了证明NMV-(2,3)-MaxSat是NP难的,我们将(2,3)-MaxSat多项式归约到NMV-(2,3)-MaxSat.设集合Y=y∈X∑Kci∩珔y=}3.对y∈Y作如下变换.增加变∑K量y1,y2,y3,将变量y的3次出现分别替换为y1,y2,y3,记变量y出现的3个子句的集合为Cy,替换后的子句集为Cy.再增加变量u1,u2,u3,u4,u5,u6,并增加子句集Zy:i=1Zy=每个ui(i=1,2,…,6)将仅在Zy中出现两次.而yi(i=1,2,3)还将在被替换的子句中出现一次,共出现3次,但都以两种字的形式出现.因此变换后的实例属于NMV-(2,3)-MaxSat:E=(∪y∈Y(Cy∪Zy)∪C\∪y∈YCy,其中U为新增加的变量集.这一变换将增加9|Y|个变量和9|Y|个子句,显然该变换是多项式的.下面我们证明若存在真值指派使得E有解,当且仅当存在真值指派使得E有解.如果存在真值指派使得E有R个子句被满足,则只要将与每个y∈Y所对应的y1,y2,y3,u4,u5,u6指派成同y一样的值,u1,u2,u3指派成与y相反的值,其它X中变量的赋值保持不变,则这使得E中与E中对应的子句正好有R个被满足,同时每个Zy中的子句也将被满足,因此E在这种指派下将有R+9|Y|个子句被满足.反之,如果存在真值指派使得E有R+9|Y|个子句被满足.图2考察了Zy在给定y1,y2,y3值的同时,并确保前6个子句被满足情况下,Zy中不能被满足的子句.从图2可以看出,只有将y1,y2,y3指派成相同值才能使得Zy的9个子句全部被满足,其它的指派将至少有一个子句不能满足.因此,如果与y∈Y所对应的y1,y2,y3在E中被指派了不同值,我们可以做如下变换:若有两个变量被指派成了0,则将与y对应的9个变量的值改为图2中第1种指派,否则改成图2中的第8种指派.由于这种变换只改变了yi(i=1,2,3)中一个变量的值,最多只影响Cy中一个子句的满足性,而Zy却全部得到了满足.因此变换后的指派仍然是E的一个解,且与y∈Y所对应的y1,y2,y3被指派成了相同值.利用E的这个真值指派可以构造E的指派:若x∈X/Y,x的赋值与E中的相同,否则将x赋值成与其对应变量y1的值.由于E中至少有R+9|Y|个子句得到了满足,而E仅比E多了9|Y|个子句,因此E在此赋值下将至少有R个子句被满足.123456u111000noney100y000y001u11———1y010u1—1—1—(珔u1,珔u5)y110y011u1———11图2变量y1,y2,y3的赋值及不能被满足的子句4嵌套周期流优化调度问题的复杂性在周期流调度问题中,可以根据各种不同周期的组合来划分周期流调度问题的子问题,如上节定义的嵌套周期流.在嵌套周期流的最优调度问题中,限定周期只有1和2两种的子问题记作(1,2)-TMP-TSA和(1,2)-SMP-TSA.利用NMV-(2,3)-MaxSat问题的NP完全性可以证明(1,2)-SMP-TSA和(1,2)-TMP-TSA问题也是NP难的.定理1.(1,2)-SMP-TSA问题是NP完全的.证明.对于N×N交换机,给定(1,2)-SMP-TSA实例的解,验证解的正确性需要验证调度的合法性、1周期的流在2个调度中是否有相同的子集和丢弃流的数量是否满足问题的需求.显然这些验证的时间复杂度都与流的种类成正比,N×N的交换机最多有O(N2)种流,因此验证算法的复杂度是O(N2),这表明(1,2)-SMP-TSA问题是NP类的.下面我们将NMV-(2,3)-MaxSat问题多项式归约到(1,2)-SMP-TSA问题.令E=(C,X,R)为NMV-(2,3)-MaxSat问题的实例,其中C={c1,c2,…,cK}为子句集,X={x1,x2,…,xN}是变量集,R为正整数.首先,为变量集X创建第1类周期的流,如图3Page5(a)所示,每个变量x∈X对应一个输入端口x、两个输出端口(x和珚x)和两条流(〈x,x〉和〈x,珚x〉),图3(b)给出了相应的流量矩阵犉X1.由于第1类流的周期是1,即只有一个调度,而每个输入端口关联犉X1=图3第1类周期流构造示意图然后,为每个子句c∈C增加一个输入端口c和一个输出端口c;增加第2类周期流〈c,c〉,同时若字l∈c则增加第2类周期流〈c,l〉.如子句c=〈x,珔y〉将对应〈c,c〉,〈c,x〉和〈c,珔y〉等3条第2类周期的流.由于输出端口c是无冲突的,我们将c称为哑端口,与哑端口关联的流称为哑流.所有哑流的流量矩阵是|犆|维单位方阵,记作犐|C|.其它第2类流对应流量矩阵是|犆|×2|犡|矩阵,记作犉C这样,我们就将NMV-(2,3)-MaxSat归约到了交换机周期流量调度问题,流量矩阵如图4所示,虽然这里的流量矩阵不是N×N型,但只需加上|犡|个空白输入端口即可,文中不再赘述.与E相应的(1,2)-SMP-TSA问题的实例为SMP=({1,2},{犉1,犉2},R),其中R=R+|C|+|X|.下面我们将证明:存在真值指派使得E有R个以上的子句被满足当且仅当SMP存在调度S满足‖S‖R.若存在真值指派使得E有R个子句被满足,则构造SMP的调度如下:(1)设1周期类中被调度的流集合为FS1.对c∈C,如果x=1,则令流〈x,珚x〉∈FS1,否则令流〈x,x〉∈FS(2)设2周期类中被调度的流集合为FS2.对c∈C,任选一使得c成真的字l,令〈c,l〉∈FS2和〈c,c〉∈FS2,另一条与c相关的流丢弃.由于与任一成真的字l相关的1周期流被丢弃,又因为NMV-(2,3)-MaxSat问题的实例中与每个字相关的子句数目不超过2个,因此l相应的输出端口的归一化负荷1.同时,容易验证其它端口也不过载.这样FS1和FS2就构成一个负荷不过载且着两条流,因此这两条流中至少将有一条被丢弃.如果与每个变量对应的两条流都正好丢弃一条,那么每个变量将有一个相应的输出端口空闲,这些空闲的输出端口将构成一个真值指派.x1珚x1x2珚x3…xN珚xN1100…000011…000000…11x1x2xN(b)与X对应的第1类周期流最大周期为2的嵌套周期流,即存在调度S使得FS1和FS2中的流在时限超时前被调度.在上述调度构造的第1步共有|X|条流被调度,第2步共有|C|+|R|条流被调度,因此‖S‖=R.反之,若SMP存在调度S使得‖S‖R.首先我们将S改造成S使得‖S‖‖S‖且任意输入端口x在S中的负荷为1.不妨设输入端口x在调度S中的负荷为0.由于此SMP是由NMV-(2,3)-MaxSat实例变换而来,因此与输出端口x和珚x关联的2周期流最多3条,故而必有一个输出端口o∈{x,珚x}在调度S中关联的流不超过一条.我们将1周期流〈x,o〉替换S中关联于o的流得到调度S,显然‖S‖‖S‖且输入端口x在调度S中的负荷为1.这样,在S中与每个输入端x关联的两条流中丢且仅被丢弃了一条,即1周期流在S中被调度了|X|条.根据R的定义,至少有|C|+|R|条2周期流得到了调度,又由于与每个子句对应的哑流只有1条,故至少有R个子句的非哑流被调度.因此如果用1周期丢弃流所关联的输出端口作为E的真值指派,将至少有R个子句被满足.证毕.对于(1,2)-TMP-TSA问题,我们可以采用定理1中类似的方法将NMV-(2,3)-MaxSat的实例多项式归约到(1,2)-TMP-TSA的实例.因此有如下定理.定理2.(1,2)-TMP-TSA问题是NP完全的.证明.给定E=(C,X,R)为NMV-(2,3)-MaxSat问题的实例,按照定理中的步骤构造如图3和图4所示的周期流量.所构造的TMP实例与定理1中的区别在于R的值,此时我们令R=R+|C|+2|X|.下面我们证明NMV-(2,3)-MaxSat问题的实例有解当且仅当如上构造的TMP实例有解.若NMV-(2,3)-MaxSat问题的实例有解,我们可以采用与定理1中相同的方法从NMV-(2,3)-Page6MaxSat实例E的真值指派构造TMP的调度S.显然在调度S中有对应变量指派的|X|条1周期流被调度,R条以上与被满足子句对应的2周期流和|C|条哑流(2周期流)被调度,因此∑f∈S2|X|+R+|C|R.另一方面,如果存在TMP的调度S使得R被满足,同定理1先将调度S改造成调度S,根据调度的必要条件,有|X|条1周期流被调度,这将对应着变量的真值指派,且2周期的哑流只有|C|条,因此至少有与子句对应的R条2周期流在S中被调度,故在此真值指派下必定存在R以上的子句被满足.定理1和定理2的证明可以推广至周期是(1,k)的情况.只需将上述证明中变换时添加的哑流变为(k-1)犐|C|即可.推论.(1,k)-TMP-TSA问题和(1,k)-SMP-TSA问题是NP难的.证明.这里我们仅给出(1,k)-SMP-TSA的证明,(1,k)-TMP-TSA与其类似,不再赘述.给定E=(C,X,R)为NMV-(2,3)-MaxSat问题的实例,如图5构造(1,k)-SMP-TSA实例的流量.犉1=犉X10X×C1和犉C其中犉X类中为每个子句c添加了(k-1)条哑流〈c,c〉.(1,k)周期流的调度中有k个配置矩阵,由于哑流不与其它子句的流冲突,所以(k-1)条哑流保证了哑流可以调度在(k-1)个配置矩阵中,从而保证了只要子句c中字对应的两条第2类周期流若都被调度,则可以在被调度流总数不变的情况下由哑流替换其中一条.这样,余下的讨论类似定理1,这里从略.嵌套周期流调度问题按周期的组合可以分成若干种子问题,如周期是(1,2),(1,2,4),(3,6,12),….并且这些子问题之间并没有包含关系,因此,(1,2)周期流优化调度问题的NP完全性并不意味其它子问题也是NP难的.然而,直觉上(1,k)周期的子问题应该是所有这些子问题中最简单的,事实也是如此,我们可以把(1,k)周期流的调度问题多项式归约至任意嵌套周期流的情况.定理3.任意嵌套周期流TMP-TSA问题是NP难的.证明.设任意嵌套周期P={P1,P2,…,Pn},其中P2/P1=k.令N×N交换机的(1,k)-TMP-TSA问题的实例TMP=({1,k},{犉1,犉2},R),任意的嵌套周期.我们通过将TMP嵌入到一个2N×2N交换机嵌套周期为P的实例PTMP=(P,{F1,F2,…,Fn},R),来证明任意嵌套周期流调度问题的难解性.在变换时首先增加N个输入端口和N个输出端口,将PTMP中流量矩阵犉3,犉4,…,犉k置为0,然后将TMP的流量矩阵分别嵌入到犉1和犉2,并为第1类周期流中每个新增加端口增加P1-1条流,具体流量矩阵如图6所示,其中犐N为N维单位矩阵.最后令R=(R+2kN(P1-1))Pn/P2,显然这一变换是多项式时间的.一方面,若TMP存在调度S={s1,s2,…,sk}满足R,按图7构造PTMP的调度S(由于只有第1、2类周期流不为0,因此PTMP的调度只需给出P2=kP1个配置矩阵即可).不妨设1、2周期流分别有u、v条被S调度,这样PTMP中第1类周期流中共有2N(P1-1)+u条周期流被调度,第2类周期中有v条周期流被调度.因此S的目标函数值为另一方面,若PTMP存在调度S使得R满足,由于在变换中每条新加入的流与犉1或犉2中的流只有一个端口的冲突且新增加的端口出没有冲突,因此不难在保持目标函数值不变的情况下将S改造成类似图7的调度,这样即可以从中得到TMP的调度,显然这个调度满足R.Page7定理4.任意嵌套周期流SMP-TSA问题是NP难的.证明.与定理3的证明类似,我们可以把(1,k)-SMP-TSA问题的实例按图8所示嵌入到任意嵌套周期的实例.接下来的讨论类似于定理3,此处从略.5结束语本文以吞吐和呼损为优化目标定义了两种交换机周期流的优化调度问题,并对其中一类子问题———嵌套周期流优化调度的复杂性进行了研究.我们首先证明了一种特殊Max2Sat问题的NP完全性,以该问题为基础证明了(1,2)周期流优化调度问题是NPC问题.然后利用该结果显示任意嵌套周期流的优化调度问题都是NP难的.实际上,定理1和2的证明所涉及的(1,2)周期流优化调度问题的实例中没有任何数值小于交换机规模N的某个线性函数,因此,根据文献[16]中的定义,(1,2)周期流优化调度问题是强NPC的.这表明对于任意嵌套周期流优化调度问题不存在伪多项式算法.本文未讨论的非嵌套周期流优化调度问题的复杂性,经典的启发式算法EDD、MLF等在周期流优化调度问题下的性能界以及高性能的近似算法设计等将作为我们进一步研究的方向.
