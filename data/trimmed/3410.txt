Page1基于ACO-SVM的软件缺陷预测模型的研究姜慧研1),2)宗茂1)刘相莹1)1)(东北大学软件学院沈阳110819)2)(东北大学医学影像计算教育部重点实验室沈阳110819)摘要针对传统软件缺陷预测模型的应用范围通常被局限在一定的子空间而影响其适用性和准确性的问题,文中利用支持向量机(SVM)的非线性运算能力和蚁群优化算法(ACO)的寻优能力提出了一种基于ACO-SVM的软件缺陷预测模型.文中首先对待预测的数据进行主成分分析降低数据的维数以提高运算速度,然后根据蚁群优化算法来计算最优的SVM参数,然后再运用SVM进行软件缺陷的预测.并基于十折交叉方法进行实验,通过与传统方法的对比,证明文中方法具有较高的预测精度.关键词软件测试;软件缺陷预测;支持向量机;蚁群算法;主成分分析1引言随着计算机系统应用领域的不断扩大,软件缺陷预测[1]问题变得越来越受到人们的关注.例如,在银行和股票等系统中,由于系统一旦失效将会导致巨大的经济损失,软件缺陷是软件开发首要因素.而Page2型[6]等,但这些方法尚存在一定问题,难以达到理想的效果.例如,马尔可夫模型需要对软件内部错误及失效过程的特性做出很多假设;分类回归树模型的泛化能力差;人工神经网络模型的网络结构选择尚无统一完整的理论指导.逻辑回归(LogisticRegression,LR)[7]是对线性回归的进一步改善,线性回归难以解决分类时出现的0~1之外的非法概率值问题,针对这一问题,LR采用对数变换,使其结果值不再局限于0~1范围,而是负无穷大和正无穷大之间的任意值.由于LR模型进行二次判别可以显著提高计算速度和识别率,所以被广泛应用于构建软件缺陷预测模型.但是该方法适用于大样本的情况,对小样本的预测效果不理想.支持向量机[8](SupportVectorMachine,SVM)是Cortes和Vapnik等人于1995年首先提出的,是在统计学习理论基础上发展起来的一种新的机器学习方法,在解决小样本、非线性及高维模式识别中表现出许多特有的优势,但SVM的参数选择没有理论上的指导,是一个亟待解决的问题.蚁群优化算法(AntColonyOptimization,ACO)[9]是Dorigo等人于20世纪90年代提出的,是一种模拟蚂蚁种群进化的启发式搜索算法,具有随机搜索、全局优化、分布式和正反馈等优点.为了提高软件缺陷预测模型的准确性,本文提出了一种基于ACO-SVM的软件缺陷预测模型.即分别利用SVM和ACO建立和优化软件缺陷预测模型,并基于主成分分析方法进行降维处理,最后利用ACO-SVM建立软件缺陷预测模型.2相关工作2.1支持向量机支持向量机的基本思想是求解核函数和二次规划问题,通过核函数将数据映射到高维特征空间来解决非线性可分的问题.径向基核函数(RadialBasisFunction,RBF)具有较宽的收敛范围,是较理想的分类依据函数,其表达式如式(1)所示.其中,狓和狓是特征向量,σ是径向基核函数的带宽.在二分类问题中,假设给定训练集T={(狓1,y1),…,(狓l,yl)}∈(Rn×y)l,其中狓i∈Rn,yi∈Y={+1,-1},i=1,2,…,l,狓i是特征向量,yi是类别标签.SVM将决策函数的求解转化为带有约束条件的二次规划问题求解,如式(2)所示,其中αi、αj是拉格朗日乘子,K(狓i,狓j)是核函数.minαs.t.∑l方程式的解为α=(α1,…,αl)T,决策函数的偏置项b如式(3)所示.决策函数如式(4)所示.2.2蚁群优化算法基本蚁群算法引进了正反馈和并行机制,较好地解决了旅行商(TravelingSalesmanProblem,TSP)问题,但是收敛速度较慢.1997年Dorigo等人在基本蚁群算法的基础上提出了蚁群系统,证明了该算法优于模拟退火、进化计算等仿生算法.蚁群系统的搜索过程如下:1.蚂蚁的配置和信息素的初始化.2.对每只蚂蚁按式(5)或式(6)选择下一个城市,并基于式(7)、(8)更新该路径上的信息素.pkij(t+1)=其中,q0∈[0,1]是初始设定的参数,q是一个随机数,τij(t)是t时刻在城市节点i、j之间路径上残留的信息素,ηij是城市i转移到城市j的启发式信息,α用来衡量残留信息素的相对重要程度,β用来衡量期望信息的相对重要程度,S是根据式(5)决定的随机变量,tabuk是蚂蚁k当前走过的城市(禁忌表),ljb是蚂蚁k从开始城市到当前城市已走过的路径长度,Q为常数,Tk为蚂蚁k经过的路径.3.当所有蚂蚁走完所有城市后,通过计算它们的最短距离获得最佳路径.按下式更新最佳路径上的信息素.Page3PCA的步骤如下:1.设犡=(X1,X2,…,Xn)T是一个n维随机向量,计算犡的协方差矩阵Σ=犡犡T.2.计算Σ的特征值λi(λ1λ2…λn)及其特征值对应的特征向量狆i(i=1,2,…,n),则犡的第i主成分为Yi=i犡.狆T4.输出最优解.其中,α为全信息素挥发系数,lk为最佳路径的长度,Ok表示蚂蚁k所走的是最佳路径.2.3主成分分析算法主成分分析算法(PCA)是由Hotelling提出的.主成分分析将给定的一组相关变量通过线性变换转换为另一组不相关的变量,这些新的变量按照方差递减的顺序排列,构成相应的主成分.3.定义λk∑n∑nλi为主成分的累积贡献率.主成分的个数由a决定,一般i=1取a>95%.3软件缺陷预测模型的建立3.1软件缺陷预测模型测模型主要包括以下几个步骤,如图1所示.基于ACO-SVM和PCA方法建立软件缺陷预建立软件缺陷预测模型步骤如下:1.获取软件复杂度度量数据集;2.对数据集进行主成分分析,降低数据集维数;3.用训练样本基于SVM建立软件缺陷预测模型,核函数选择RBF核函数;4.利用ACO进行模型参数C和σ的优化;5.用测试样本进行程序模块的分类预测.如果预测结果满足终止条件,则得到优化的软件缺陷预测模型并结束;否则返回步4继续优化模型.其中,终止条件为模型预测准确率达到了事先给定的阈值或者循环次数超过了事先设定的最大循环次数.3.2软件缺陷预测模型参数的优化本文利用ACO算法进行模型参数C和σ的优化.即根据ACO算法搜索出的最优路径来确定模型参数.在参数优化过程中,ACO算法不是根据路径的长度来更新路径上的信息素,而是根据系统的性能指标(分类准确率)来更新信息素.为了利用ACO算法进行参数优化,需要先将模型的参数C和σ离散化,根据经验,C和σ的有效位个数均取5位,各个有效位上的值取[0,9]之间的整数.参数C的最高位是百位,其取值范围是(0,999.99].参数σ最高位是个位,所以其取值范围是(0,9.9999].ACO算法以10个有效位作为行、以10个整数值(0~9)作为列,在直角坐标系中,画出10×10的平面结构图作为模型参数优化蚂蚁运行图.图中城市节点的横坐标是有效位,纵坐标是该有效位上的取值.每只蚂蚁走完一条路径后,根据小数点的位置可以计算出两个参数的值,根据最优路径就能计算出模型的最优参数.设启发式信息ηij=1,用分类准确率评估支持向量机性能,在全局信息更新过程中,令Q是信息素强度,Δτij=Q·Accuracy,Accuracy是每次循环中最高的分类准确率,执行过程如下:1.使用参数离散化方法离散化C和σ;2.初始化τij=1,信息素增量Δτij=0;3.第一次执行以下搜索过程寻找最优路径:3.1.将所有蚂蚁置于坐标系原点;3.2.随机地将蚂蚁放置到下一个需要访问的城市节点,且该节点的横坐标x不同于以前访问过的城市节点的横坐标;3.3.对每只蚂蚁根据式(7)、(8)更新转移路径上的信息素;3.4.如果所有蚂蚁完成了路径上的所有城市节点的访问,那么根据式(9)、(10)对最优蚂蚁走过的路径进行信息素更新.否则转到步3.2.4.再次将所有蚂蚁放到坐标系原点;5.根据式(5)、(6)使蚂蚁移到下一个城市;6.根据式(7)、(8)更新每只蚂蚁转移路径上的信息素.如果蚂蚁完成所有城市的访问,转到步7;否则转到步5;Page47.使用蚂蚁移动过程得到的C和σ训练SVM.找到具有最高分类准确率的最优蚂蚁,根据式(9)、(10)更新其所走路径上的信息素.如果分类准确率达到终止条件或者循环次数超过最大循环次数,则转到步8,否则转到步4;8.输出C、σ和最高分类准确率.4基于ACO-SVM的软件缺陷预测模型实验4.1实验数据实验数据是美国国家航空航天局(NASA)提供的一个数据包①.该数据包共有13个数据集,如表1所示.数据集模块数维数数据集模块数维数JM11087823PC1110742KC1210726PC2558942KC345842PC3127342KC412542PC4384042MC1946641PC51718642MC216142CM150540MW140342本文根据ERROR_COUNT属性对各数据集中各模块是否有缺陷进行分类,设每个数据集中ERROR_COUNT1的模块为有缺陷模块,否则为无缺陷模块.为了缩短分类时间,针对模块数比较多的数据集,我们在此数据集中随机选取200个模块作为训练样本,选取100个模块作为预测样本.每个数据集选取10维数据作为分类度量.4.2实验结果与分析为了验证模型的预测能力,本文采用十折交叉验证(10-foldCV)进行实验.即将每一个数据集平均分成10份,轮流将其中9份做训练,剩余的1份做预测,取10次预测结果的均值作为对算法预测能力的评价.本文采用准确度、查准率、查全率和F1值[10]来评价模型的预测能力.这些度量来自表2所示的交叉矩阵.实际值容易出错模块正确的正例(TP)错误的负例(FN)不易出错模块错误的正例(FP)正确的负例(TN)实际正例个数P=TP+FN,实际负例个数N=FP+TN,实例总数C=P+N.模型评价指标的定义如下:准确度(accuracy)表示正确分类的测试实例的个数占测试实例总数的比例,计算公式如下:查准率(precision)表示正确分类的正例个数占分类为正例的实例个数的比例,计算公式如下:查全率(recall)表示正确分类的正例个数占实际正例个数的比例,计算公式如下:F1表示查全率与查准率的调和平均,计算公式如下:将基于本文方法(ACO-SVM)和Fisher线性判别分析(LDA)、聚类分析(CA)、BP神经网络(BPNN)、逻辑回归(LR)、支持向量机(SVM)等方法建立的软件缺陷预测模型进行比较.基于十折交叉验证(10-foldCV)分别对13个数据集进行实验,计算13组评价指标(准确度、查准率、查全率、F1值),本文方法在预测过程中的最优参数选择如表3所示,预测结果如图2所示.数据集Cσ数据集CσJM1756.470.0040PC1711.720.0040KC1195.410.0086PC2676.790.0050KC320.040.0054PC34.090.0078KC4691.160.0020PC490.990.0070MC1594.690.0054PC5248.030.0029MC2260.950.0028CM1440.820.0043MW1663.060.0076图2(a)~(m)分别为本文方法与传统方法在13个数据集上的预测结果对比,(n)为13个数据集预测结果的平均值对比.从图2可以看出:基于LDA建立的模型的预测结果较差,这是由于该方法基于线性分类函数进行分类,而软件复杂性度量数据之间呈非线性关系;基于CA、BPNN建立的模型的预测结果明显优于基于LDA方法,但是由于CA方法需要较多的先验知识,BPNN网络结构选择尚无一种确定而有效的方法,因此这两种方法的泛化能力不十分理想;基于LR建立的模型预测结果较①http://mdp.ivv.nasa.gov/Page5图2本文方法和传统方法的比较Page6好,但是该模型受到样本容量的局限,只有样本容量较大时该模型才能取得较好的预测效果;基于SVM建立的预测模型的参数选择没有理论指导,只能根据经验选取,故预测能力不稳定;本文方法利用SVM在小样本情况下的预测优势,利用ACO对模型参数进行优化,并利用PCA缩减特征空间以减少计算成本,使得模型的各项评价指标均优于LDA、CA、NN、LR、SVM模型.但是由于在ACO参数寻优的过程中需要多次训练样本,计算成本仍然需要进一步减少.5结论本文的贡献是针对软件缺陷预测问题提出了一种新颖的基于ACO-SVM的软件缺陷预测模型,其基本思想是基于PCA缩减特征空间、基于ACO-SVM建立和优化软件缺陷预测模型.实验结果表明,该模型比传统方法具有更好的预测效果.但是该方法在参数寻优过程中需要较长的时间,如何进一步降低模型的运行时间和提高模型的预测准确率,是今后的课题.
