Page1异构云环境多目标Memetic优化任务调度方法1)(湖南大学信息科学与工程学院长沙410082)2)(湖南财政经济学院信息管理系长沙410205)摘要云计算系统的高效能调度优化是当前重要的研究课题,面向异构云环境的多目标优化调度方法研究具有重要意义.云计算环境下的能耗和性能优化管理是NP-HARD的多目标组合优化问题,目前一般启发式调度系统大多采用带约束的性能或能耗的单目标优化计算方法,不能完全满足复杂云计算系统资源约束动态性与管理需求多样性的需求.基于传统进化优化的随机搜索算法应用于云环境下的DAG任务的多目标调度优化,计算开销大、计算实时性不足,文中提出了新的Memetic优化方法以解决异构云环境多目标调度优化问题.首先,文中针对异构云环境多目标调度优化问题,构建了一般性的数学定义;其次,针对该问题设计了多目标Memetic优化算法,采用基于解结构相关信息的Memetic局部搜索算子加速调度方案的局部优化能力,以提高算法的收敛速度、降低计算开销.实验结果表明,应用所提出的多目标Memetic优化算法进行异构云环境能耗和性能多目标调度优化,比传统方法具有更好的计算效率、解集多样性与收敛性能.关键词异构云平台;能耗与性能优化;DAG;多目标Memetic优化;云计算1引言云计算作为一种新的商业计算模型和服务模式,是新一代高速网络计算和服务平台,随着其系统规模与计算性能不断提高,高效能的调度优化日益成为备受关注的课题.据统计,2011年我国数据中心总耗电量达700亿千瓦时,占中国用电总量的1.5%,相当于2011年天津市全年的总用电量.另据世界绿色和平组织的一份报告观测,到2020年,全球主要IT营运商“云计算”(包括数据处理和电信网络)的能耗将近2万亿千瓦时,超过德国、法国、加拿大和巴西四国的能耗总和.能耗开销已成为数据中心运营的最大开销[1-2].高的能源消耗不仅造成了高的计算开销,还会引发系统的不稳定和环境的污染.单一的提高计算性能显然已不再符合云计算发展的需求,结合计算性能与能耗的高效能优化调度是解决高能耗问题的有效途径之一.大规模异构云计算系统的高效能优化调度是一个具有多目标、动态约束与实时偏好特征的复杂优化问题.一方面,作为一种商业计算平台,需要以实现服务利润最大化为目标之一,但同时需要满足不同的计算任务的客户需求,例如:有的客户更倾向于计算性能(越快越好),而有的客户更倾向于计算开销(越节能越好).另外一方面,复杂的云计算系统具有计算节点异构、可用资源动态变化、管理需求偏好实时变化等特征.传统意义上的简单调度策略,以及基于决策偏好预定义的单目标优化方法都不能满足其复杂的多目标优化、资源约束动态与决策偏好实时变化的计算需求.因此,研究云计算环境下的多目标优化调度方法具有重要意义.在求解多目标优化问题时通常有2大类途径.其一是将多个目标通过加权求和转换为单目标的优化问题,其二是基于Pareto排序求解全体Pareto最优解集,再利用决策者实时偏好选择其中的某一折衷解.前者在转换为单目标的优化过程中,必须进行预定义的先验决策偏好权重设定,优化解单一,缺乏灵活性.而后者通过多目标优化计算,可获得一个Pareto最优解集,具有更灵活、广泛的决策空间.显然,在云计算环境下的能耗和计算性能的多目标优化管理问题中,通过获得该问题的Pareto最优解集来实现对不同客户需求下的能耗和计算性能优化与管理更符合系统需要.如图1所示(其中rw为能源消耗约束,rt为任务完成时间约束),通过多目标优化算法获得该次调度的Pareto最优解集,调度器再根据系统资源的动态状态、用户任务的需求特征以及系统管理的实时需求,选择其中最恰当的调度方案,实现商业化优化管理.显然,实现上述优化调度与管理的核心关键是其中的多目标调度问题建模与高效率优化算法.基于进化优化的随机搜索算法在求解多目标优化问题有着较好的表现,且该类算法已应用于分布式系统环境下的基于DAG任务图的任务调度问题,例如:文献[3-4]采用遗传算法对基于DAG任务图的调度问题进行研究,提出了一种满足任务间数据依赖约束关系的交叉和变异算子,取得了较传统调度算法更优的解;Swiecicka等人[5]将遗传算法和人体免疫模型引入任务调度问题,提出了一种基于细胞自动机的任务调度算法,该算法将任务分为学习、操作和重用操作3个互相关联的阶段;文献[6]采用模拟退火算法求解DAG调度问题,该算法可避免算法陷入局部最优;Ferrandi等人[7]将蚁群算法应用于任务到处理机的映射,获得了较好的优化效果;Xu等人[8]将化学反应算法应用于同构集群Page3系统下的DAG任务调度问题,针对性的设计了分子碰撞、分子合成等进化操作.上述方法取得了比传统启发式调度算法更好的解,但其计算开销通常太大且这些启发式算法大多应用于求解以提高系统性能为目标的单目标优化问题(没有考虑系统的能耗开销),不能直接应用于多目标优化问题求解.在分布式系统的能耗优化研究方面,近年来学者主要进行的系统能耗评估模型和节能调度算法的研究.Elnozahy等人[9]对计算机功率和处理器工作状态的关系进行了研究,并提出了相应的计算式;Bahsoon[10]总结了云环境下兼顾能源和可靠性的自优化框架所面临的问题,提出用QoS/能耗作为衡量标准;林闯等人[11]将能量看成一种系统资源,提出了基于随机模型的绿色评价框架,为构建绿色网络和节能机制的评价体系奠定了基础;Li等人[12-14]分别在同构、异构多处理器环境下研究了系统在一定时间约束下采用连续电压调节技术使得能耗最低的条件,并相应提出了节能调度算法;宋杰等人[15]提出了一种云计算环境下的能效模型和度量方法,定义了能效的数学表达及其测量和计算方法,通过CPU使用率和频率来计算能效,简化了能效测量方法;Cao等人[16]针对云数据中心的能耗分布和负载均衡问题进行了数学定义,分别对能耗约束下的性能优化和时间约束下的能耗优化问题进行了分析,提出了相应的解决方案来优化云数据中心的能耗;谭一鸣等人[6]采用排队论模型M/M/1对云计算系统进行建模,分析云计算系统的平均响应时间和平均功率,建立云计算系统的能耗模型,提出了满足性能的最少期望执行能耗的调度算法ME3PC;Zong等人[17]对同构集群系统的能耗和性能建模,针对该模型对已有的复制任务调度算法添加能耗感应机制,提出了面向同构集群系统的EAD和PEBD节能调度算法,李新等人[18]又针对该算法进行了改进,提出了一种启发式处理器合并优化方法PRO.目前这些研究大多采用在传统调度算法的基础上添加能耗感知机制,从而达到减少其空闲能耗开销或不合理调度产生的能耗浪费,提高系统的能效比率的目的,但较少考虑云计算环境下不同客户需求等特性.本文首先对云计算环境下的能耗与计算性能的多目标优化问题进行了数学定义,其中考虑了云计算的异构、动态伸缩特性对系统性能和能耗的影响.在调度算法研究方面,主要对以往随机搜索算法在DAG任务调度中计算开销大、收敛速度慢的缺陷进行了研究,提出了多目标Memetic优化算法(Multi-objectiveMemeticAlgorithm,MOMA),采用基于解结构信息的Memetic局部搜索算子来进行局部寻优,设计相对应的预评估机制减少对调度策略进行整体评估,提高算法收敛速度,从而达到减少算法计算开销的目的.此外,提出了基于DAG图层次的交叉算子,有利于个体间的信息交互.模拟实验表明,该算法能实现云计算系统下的能耗和计算性能的优化管理,且本文提出的算法比传统的多目标优化算法具有更好的收敛性能.本文第2节对云环境下的任务多目标调度问题模型进行阐述;第3节给出了本文提出的面向异构云环境下能耗与性能的多目标Memetic优化算法;第4节进行了仿真实验与性能分析;最后一节对本文所做的工作进行总结.2云环境下多目标优化调度模型2.1云计算环境下任务调度体系结构云计算系统的任务调度体系结构可如图2所示,其包括用户任务、任务调度中间件和异构计算机群.任务调度中间件是其中核心模块,包括计算任务DAG生成、优化调度方案决策及计算任务分配3大功能,任务调度中间件的一个重要目标就是尽可能的满足客户的服务水平协议(ServerLevelAgreement,SLA),同时提高计算系统的服务质量(QualityofService,QoS).当面向能耗、性能等多个目标的调度优化计算时,任务调度中间件可采用图3中的两种计算模式.图3(a)是传统的采用预定义偏好加权求和将多个优化目标转化为单目标优化的计算模式,其中的优化目标偏好权重需要预先设定,一般优化结果为单Page4一解,决策空间有限,无法实现多样化的实时动态偏好决策.而另一种优化流程可采用图3(b)的方式,首先将调度问题定义为多目标优化问题,通过高效率的多目标优化算法进行优化计算后,获得整个决策空间的Pareto最优调度解集(所有优化目标无偏好的折衷非劣解集合),然后再根据当前云计算系统的资源动态约束、系统稳定性需求、服务系统利润偏好以及系统管理偏好等产生综合实时决策偏好,决策产生Pareto折衷解作为最终调度方案.这种计算模式较第一种方式具有更灵活的决策选择空间,适合复杂大规模云计算系统的动态特性,但对多目标优化算法性能要求高,是其中的核心关键部分.以下将重点针对图3(b)中云环境下能耗和性能的多目标优化算法进行研究.2.2DAG任务模型分布式系统下的静态任务调度问题中,并行应用程序大多以DAG任务图模型进行表述,例如,图4为具有10个子任务的DAG任务图.具有n个子任务的DAG任务图可定义为定义1.DAG任务图可以表示为一个三元组:G=〈V,E,犔〉.其中V={vi|1in}表示任务的集合;E={eij|1in,1jn}表示任务间具有约束关系的边的集合,其中,eij边上的数值(Wij)表示任务vi与任务vj的通信需求;犔表示任务的服务长度向量,Li表示任务vi的服务长度.此外succ(vi)为任务vi的直接后继任务集,pred(vi)为任务vi的直接前驱任务集.2.3异构云计算系统模型由于不同客户的计算需求和数据中心设备的不断更新,现有云计算平台的硬件基础设施通常由大量异构的服务器组成,这些异构处理机含有不同的计算性能和能效比,且一般同一个任务在计算性能高的处理机上运行比运行在计算性能较低的处理机上会产生更多的能耗开销.例如:IntelPentiumG840(C1)的频率为2.8Hz,其执行功率为67.7W,空闲功率为42.1W;而AMDFx-6200(C2)的频率为4.1Hz,其执行功率为204W,空闲功率为63W.如果一个服务长度为1的任务分别在这两种处理机上满负载运行,由于频率与处理机的运行速率成正比,则该任务在这两种处理器上的完成时间比例约为32,能耗比例约为12,也就是说,如果将任务从C1调度到C2将提高33.3%的处理速度,但要增加100%的能耗开销.由此可知,高的计算性能是以巨大的能耗开销为代价的,将任务进行合理的调度可以减少能耗开销.基于此,本文将针对异构云计算环境进行研究.该异构云计算环境可定义为定义2.具有m个处理机的异构云计算系统可定义为一个五元组:〈C,S,P,犅,Q〉.其中C={ci|1im}是异构处理机集合,ci表示第i个处理机;S={Si|1im}是处理机平均服务速率的集合,SiPage5表示处理机ci的平均服务速率;P为处理机的功率,其中Pi表示处理机ci的平均执行功率,Pi,low为处理机处于空闲状态的功率;犅为处理机间的通信速率矩阵;Q=(Q1,…,Qm),其中Qi表示处理机ci开始通信的准备时间.2.4任务调度长度任务调度长度是评价系统计算性能的有效方式,在基于DAG任务图的调度问题中,必须考虑任务间的数据依赖约束关系和处理机的可调度性.设EST(vi)表示任务vi最早开始执行时间,EFT(vi)表示任务最早执行完成时间,则EST(vi)与EFT(vi)存在如下关系:其中,proc(vi)为任务vi的目标处理机.设任务vi与vj的通信开销为CCij,则其中k=u表示任务vi与vj在同一个处理机上.由此,任务vi最早开始执行时间EST(vi)可表示为EST(vi)=0,烄max{available(proc(vi)),烅max烆其中,avaible(proc(vi))表示vi目标处理机的可调度时间.最后,任务的调度长度(makespan),即任务的完成时间,可表示为2.5能耗分析处理机产生的能耗是计算系统产生能耗的主要部分,而处理器产生的能耗主要分为执行能耗EB(处理机处于运行状态下产生的能耗)和空闲能耗EI(处理器处于空闲状态下产生的能耗).设EBj为处理机cj的执行能耗,则其中犝={Uij|1in,1jm}表示分配矩阵,Uij∈{0,1},为1表示任务vi分配到处理机cj上.Li/Sj是任务vi在处理机cj上的执行时间.从而系统总的执行能耗为处理机处于空闲状态也存在能耗开销(也就是空闲能耗),处理机的空闲能耗等于空闲功率乘以空闲时间,考虑到云计算动态(伸缩)的特征,当没有任务调度到某个节点上时,可放弃对该节点的使用,处理机cj的空闲功耗EIj可表示为烄EIj=烅烆i=1其中,∑则,不存在调度任务.由此计算系统总的空闲能耗EI可定义为最终系统的总能耗(energy)为2.6问题定义基于上述计算性能和系统能耗开销的分析,面向云环境下能耗与计算性能的多目标优化问题可定义为min:{makespan,energy}烄s.t.∑烅烆其中约束条件∑任务都被调度且每个任务仅被调度一次,约束条件EST(vi)EFT(vj),vj∈pred(vi)保证了任务调度符合任务间的约束关系.3面向异构云环境下能耗与性能的多目标Memetic优化算法应用于DAG任务调度的随机搜索算法,虽然取得了比传统启发式算法更优的解,但其存在算法计算开销大的缺陷,且大多应用于提高系统性能的单目标优化问题.如何减少该类算法的计算开销,并能够应用于求解融合能耗和性能的多目标优化调度问题是接下来我们主要探讨的问题.经过研究发现,造成该类算法在DAG任务图调度优化问题中计算开销大的主要原因包括两方面:高的个体(一种调度安排)评估代价和低下的算法搜索效率.个体的评估在基于进化优化的随机搜索算法中是必不可少的,且每一代个体的更新都要Page6进行个体适应度的评估.在基于迭代搜索的面向DAG任务图的调度优化中,个体的评估时间复杂度为O(TN珡N),其中N为任务的个数,珡N为每个任务的平均直接前驱任务个数,T为算法的迭代次数;另一方面,在该问题的解空间搜索过程中,个体必须满足任务间的数据依赖约束关系与处理机的可调度性,使得在搜索过程中产生大量的非法解,严重影响了算法的搜索效率.本文试图采用基于局部预评估的Memetic局部寻优来减少个体的总体评估提高算法的搜索效率,同时采用基于DAG任务图层次的交叉变异操作来避免产生非法解,最终实现减少算法计算开销的目的,为此,提出了面向云计算环境下能耗与性能优化的多目标Memetic调度优化方法(Multi-ObjectiveMemeticAlgorithm,MOMA).2000年以来Memetic算法逐渐受到研究者们的认可,IEEE、CEC、GECCO、PPSN等进化计算领域的主流国际会议陆续的组织了MA(MemeticAlgorithm)的专题,MA作为一个开放式的进化计算框架,易于把多种局部/全局搜索策略结合起来,具有算法收敛速度快的优点.在离散优化领域,MA算法的研究较少,现有的一些研究主要集中于Memetic局部搜索策略的研究[19-21],其方法大多采用对特定的离散问题(例如:车间调度优化、路径优化等)设计针对性的Memetic局部搜索策略的方式来提高算法的收敛性能,较少应用于面向DAG任务图的调度优化问题,且这些方法主要针对单目标优化问题,较少应用于多目标优化.融合Memetic局部优化与多目标进化优化方法的多目标Memetic算法的总体框架可如图5所示.其中,A(t)是第t代的归档集,R(t)和R(t)为第t代种群.该框架主要包括个体进化、局部优化、归档集更新等操作.面向异构云环境下性能和能耗优化管理的多目标Memetic优化算法总体流程如下:1.初始化云计算环境参数(产生任务DAG图,获取云处理机参数,提取DAG任务图各层次任务子集;2.随机产生可调度序列,初始化种群R(0),外部归档集A(0),进化代数t=0;3.判断是否满足终止条件,如果满足则输出归档集中的最终解,算法结束;4.对种群R(t)进行适应度值评估;5.对种群R(t)中非支配解进行Memetic局部搜索,产生R(t);6.种群R(t)和A(t)更新生成A(t+1),t=t+1;7.对A(t)执行锦标赛选择操作,并将结果保存到R(t)中.然后对种群R(t)进行基于DAG层次的交叉操作和变异操作,产生新的子种群R(t),转到步3.该流程中的终止条件可为一定的个体评估次数或运行时间.步6中的归档集更新操作采用文献[22]中的非支配集拥挤距离排序方法.步2中的种群初始化,步5中的Memetic局部搜索策略和步7中基于DAG层次的交叉和变异算子将在接下来的内容中详细介绍.3.1个体编码与种群初始化在静态调度问题中,任务的一次调度包括确定任务的调度顺序和目标处理机的映射.本文中,种群中的个体(一种调度方案)的一个基因(si)由任务编号和其目标处理机共同组成(如图6所示),图中Z(si)表示基因si位置对应的任务编号,Y(si)为基因si的目标处理机编号.在种群初始化过程中,先采用文献[23]中的任务优先级计算方法,对DAG任务图中的任务根据优先级进行降序排序.当任务vi存在直接后继任务时,任务vi的优先级可表示为rank(vi)=其中Cij为任务vi与直接后继任务的平均通信开销.当任务vi没有直接后继任务时,任务vi的优先集为对任务优先级降序排序后,依照任务调度顺序,依次将任务随机调度到处理机上,产生种群规模大小的满足任务间数据依赖约束关系的随机个体.Page73.2Memetic局部搜索策略Memetic局部搜索策略主要通过利用解的结构相关信息进行领域的局部搜索来提高随机搜索算法的搜索效率.目前虽然已存在较多的Memetic局部搜索策略,但它们并没有考虑DAG任务图多目标调度问题的独有特性,本文对DAG任务图调度问题进行分析,提出了一种针对DAG任务图调度问题的Memetic局部搜索策略,并采用预评估方法,减少对个体的评估次数.在面向DAG任务图的调度问题中,一次调度安排的任务调度长度由部分子任务决定,我们称这部分任务为关键任务(设关键任务集为CP),关键任务生成的路径称为关键路径,而DAG任务图中的其它子任务称为非关键任务.如图7(图4中的DAG任务图在两种不同调度情况下生成的不同关键路径).关键任务决定着DAG任务图在该次调度中的完成时间,降低关键任务的最早完成时间,将极大可能减少DAG任务图在该次调度中的完成时间,而非关键任务将对DAG任务图的完成时间相对影响较少.由此可知,在一个个体中,部分变量(关键任务映射的基因)对任务的完成时间较为敏感,适合于对任务的完成时间和空闲能耗进行局部优化,而另外一部分变量(非关键任务映射的基因)对任务完成时间的影响相对较弱,可以用于对不合理调度产生的能耗进行局部优化.受此启发,本文将对关键任务和非关键任务进行相对应的局部寻优.对于关键任务调度调节到能减少其最早任务完成时间的处理机上,也就是对关键任务vi对应的目标处理机进行调节,当EFT(vi,cj)<EFT(vi,cnew)时,再进一步进行DAG任务图的整体评估,如果新的个体支配原来的个体,则接受该次调节;否则,不接受.其中EFT(vi,cj)表示任务vi调度到处理机cj上的的最早完成时间;而非关键任务调节到使其能耗开销减少又不增加其直接后继中关键任务的最早开始时间的处理机上,也就是对非关键任务vi的目标处理机进行调节,当EC(vi,cnew)<EC(vi,cj)&EST(vi,v,cnew)EST(vi,v,cj),v∈{succ(vi)∩CP}时,再进一步进行DAG任务图的整体评估,如果新的个体支配原来的个体,则接受该次调节;否则,不接受.其中EC(vi,ci)表示任务vi调度到处理机cj上的能耗开销,EST(vi,v,cj)表示任务vi调度到处理机cj上时直接后继任务v的最早开始时间.本文提出的Memetic局部搜索策略主要通过上述的局部预评估方式来减少对DAG任务图的整体评估次数,同时提高算法的收敛速度.Memetic局部搜索策略的具体流程算法1所示,其中pop,newpop为种群,Drank(x)=1表示个体x为非支配解,x为x局部寻优后产生的新个体,xx表示个体x支配x.同时考虑到算法的计算开销,和已有相关研究证明了在好的解的周围有更大的概率产生好的解,本算法只对当前种群的非支配解进行局部搜索.算法1.Memetic局部搜索策略.输入:pop,CP输出:newpopForeachx∈pop&&Drank(x)=1随机选择一个基因siIFV(si)∈CPTHENELSEENDIFENDFORnewpop←popPage83.3交叉与变异算子交叉操作主要是通过个体间信息的交换来产生更好的个体.本文提出的基于DAG任务层次的交叉算子,首先需对DAG图进行分层处理(该操作可在算法初始化阶段完成),图4中的DAG任务图分层处理如图8所示.同一层次中的任务间不存在数据依赖关系,且对相邻层次的任务有着较大的影响.同一层次的任务所产生的调度序列可视为总的任务调度序列的一个信息单元.在交叉算子中,随机选取两个不相邻的信息单元进行交叉操作.例如,假设图4中的DAG任务图调度到3个处理机上,其交叉流程如图9所示,s1、s2分别为父代的两个个体,在这次操作中随机选取了DAG任务图的层次2和层次4进行交叉操作,即选择层次任务对应的处理机进行交换,得到新的个体s1和s2.这种交叉方式将促使个体间更好的进行信息交互.变异操作主要是为了保持种群的多样性.在本文提出变异算子中,以一定变异概率选中某个基因,如果该基因对应的任务存在其他同一层次的任务,则随机选择一个,交换两者的位置,并随机将该任务调节到其他处理机上,如果没有,就仅随机改变该任务的目标处理机.3.4算法复杂度及收敛性分析3.4.1算法复杂性分析在算法复杂度方面,MOMA算法以一定的个体评估次数作为终止条件,所以在与传统的多目标优化算法[22]进行算法复杂度对比分析时,个体评估带来的算法复杂度可以不计算其中.MOMA算法相对传统的多目标算法主要多了DAG任务图分层处理和局部搜索两个操作,其中,DAG任务图分层处理的时间复杂度为O(N),其中N为任务的个数.局部搜索算子中主要增加了局部优化预评估带来的计算开销,其计算复杂度为O(珡NPM),小于种群适应度评估的计算复杂度O(N珡NP),因为MN,其中P为种群规模,M为计算资源数目.由此可知,MOMA算法虽然相对传统多目标进化算法增加了一定计算开销,但数量级别上是一样的.3.4.2算法收敛性分析定义3.称x是从x通过进化过程可达的,如果CM_LS(x)为x通过进化过程产生的个体,Pr(A)表示随机事件A发生的概率.引理1.若某进化算法满足以下两个条件[24],则该算法以概率1收敛到全局最优解集.(1)x,x∈I(I为可行域)x可以通过x进化过程可达.(2)整个种群的序列R(t)是单调的.定理1.全局收敛性.MOMA算法以概率1收敛到问题的全局最优解集.证明.(1)MOMA算法中任意两个个体x和x通过进化过程可达的.令x={x1,x2,…,xn},设x={x1,x2,…,xn},设交叉和变异概率分别τ和σ,y是x进行交叉变异后产生的个体,m为处理机的个数.当m>1时Pr(xi=yi)=τ(1-σ)1τσ因为01,0<σ<1,所以,τ-τσ=τ(1-σ)>0,Page9σ-στm-1Pr(CM(x)=y)=∏又局部搜索概率为0<β<1,则所以Pr(CM_LS(x)=x)Pr(CM(x)=y)×Pr(LS(y)=x)=i=1∏又m=1时,Pr(CM_LS(x)=x)=1>0所以x可以通过x进化过程可达.(2)再证整个种群的次序R(t)是单调的.A(t)和R(t)分别是第t迭代的归档集和种群,由于A(t+1)=Mf(R(t)∪A(t),),R(t+1)A(t+1)可知A(t)和R(t)都是单调的.综合(1)、(2)可知,MOMA算法以概率1收敛到问题的全局最优解集.4实验与分析本文采用模拟实验来验证和评价MOMA算法的性能.在实验过程中建立了由Intel、AMD等32种处理机构成的可扩展的异构模拟环境①,每组实验都是从32种计算资源中随机挑选若干种类作为计算资源.实验中的DAG任务图由应用程序随机产生.在DAG任务图生成过程中,先给定任务的数目和DAG图的并行因子(λ).任务的计算需求是Lmin(最少计算需求)到Lmax(最大计算需求)中的一个随机数;DAG任务图的高度由均值为槡N机生成,λ的值越少DAG任务图的并行度越低;而任务间的通信开销由符合均值为1分布随机生成;DAG任务图中的子任务与下一层子任务间采用0.5的概率随机产生依赖关系.在每次实验中,考虑任务的个数、处理机的个数和DAG任务图的并行因子对调度算法性能的影响.算法得相关参数和模拟场景相关参数如表1所示.DAG生成相关参数算法参数4.1MOMA算法与单目标优化算法比较在该部分实验中,主要将MOMA算法与经典的HEFT算法[23]和较新颖的能耗感知调度算法PRO算法[18]进行比较,来验证MOMA算法的优化效果.由于MOMA算法是多目标优化算法,寻优结果为一个Pareto解集,而HEFT、PRO算法的寻优结果只有一个解,为了更公正的比较算法之间的性能,将不直接对3个算法的结果进行比较.其实验结果比较示意图如图10所示.实验中主要进行3个方面的考虑:(1)Pareto解集中支配单目标算法最优解的解的个数,如图10中虚线与坐标轴所围成区域中解的个数;(2)单目标算法(HEFT或PRO)最优解x与Pareto解集中参考解y进行比较,来验证MOMA算法与目标算法(HEFT、PRO)在相似能耗开销下优化任务调度长度的能力,其中y是Pareto解集中能耗开销小于x且能耗开销与x最相近的解;(3)x与Pareto解集中的参考解z进行比较,来验证MOMA算法与目标算法HEFT、PRO在相似的任务完成时间下算法对系统能耗开销优化的能力,其中z是Pareto解集中调度长度小于x且调度长度与x最相近的解.图10MOMA与HEFT、PRO优化效果比较示意图①http://www.xbitlabs.com/articles/cpu/Page10按照上述方法针对不同的随机DAG任务图进行反复50次实验,其实验结果如表3所示.表中的实验数据都是50次实验后统计的平均值.从表3中可以发现,在任务的完成时间方面,MOMA算法在不同DAG任务图规模和并行因子、处理机个数下,都能获得比HEFT和PRO算法更好的优化效果,相对于HEFT算法,MOMA算法任务完成时间平均减少11.46%,相对于PRO算法,MOMA算法任务完成时间平均减少11.63%.在能耗开销方面,相对于没有考虑能耗开销的HEFT算法,MOMA算法存在较大的优势(平均减少14%),而对于PRO算法,MOMA算法也平均减少了7.84%的能耗开销,这主要是由于MOMA算法考虑了通过自适应进化的方式来调节处理机的数量,以及异构计算环境下合理调度对能耗开销的影响,而PRO主要是通过减少处理机的数量来减少能耗开销.由此可知MOMA算法相对传统启发式算法(HEFT、PRO)具有更好的优化能力和普适性.在算法的计算开销方面,我们在各个不同环境下,对HEFT、PRO、MOMA算法的计算开销进行统计分析,其平均值(sec.)分别为0.007756、13.536845、75.3583,可以发现HEFT算法的计算开销是最少的,同时PRO和MOMA算法的计算时间都远远高于HEFT的,这主要是由于PRO算法属于复制任务调度算法,它需对各个子任务的调度状态进行扫描且存在大量迭代计算,而MOMA算法是随机搜索算法,需对解空间反复搜索和评估,但MOMA是基于群智能优化的,具有较好的并行性,表3MOMA与HEFT、PRO算法优化效果比较任务数量处理机个数并行因子1.50图11是不同规模DAG任务图的调度模拟实验结果.从图中可以发现C(MOMA,MOEA)的平均值一直大于C(MOEA,MOMA)的,且C(MOMA,MOEA)的置信区间都大于C(MOEA,MOMA)的.其服务的对象也是一种并行计算系统,采用并行编码技术可以数倍甚至数十倍的减少算法的计算时间,从而弥补算法在计算开销方面的不足.4.2MOMA算法与多目标优化算法比较本组实验主要目的是验证MOMA算法的多目标收敛性能与算法的计算复杂度.由于目前面向云环境下性能和能耗优化的多目标优算法尚不多见,所以本研究实验中,将经典的多目标算法MOEA[25]进行改进(其中MOEA算法的进化操作采用文献[4]的交叉变异策略),然后再与MOMA算法进行比较.算法的收敛性能评估指标采用S指标和C指标[26].S指标主要依据S(χ)来衡量非支配解集χ的收敛性能,S(χ)为χ对应目标空间的超立方体的体积,由于各个算法获得的非支配解的个数不同,本文采用平均S(χ),即为S(χ)除以算法获得非支配解的个数.收敛指标C可定义为C(χ,χ)·其中χ,χ∈χ为决策变量的两个解集.C的取值在0~1之间,当C(χ,χ)=1,说明χ中的解都被χ支配或相等,当C(χ,χ)=0,说明χ中的所有解都不被χ支配或相等.在对比实验中,本文将C(χ,χ)与C(χ,χ)同时考虑.实验结果如图11~图13所示,图中的数据都是50次实验的平均值与均值95%的置信区间.支配解个数makespan平均减小/%energy平均减少/%这说明不同任务数目(对应问题的维度)下,MOMA算法都产生了更优的非支配解,且具有更加稳定的性能.对应不同的任务数目(32,64,128,256),MOEA非支配解集中的解被MOMA的解支配的Page11图11不同任务数目下的C指标和S指标图12不同处理机数目下的C指标和S指标图13不同并行系数下的C指标和S指标的,结合两者可知,不同问题维度下,MOMA算法比MOEA算法都具有更好的收敛性能.图12是在一定的任务数目下不同数量的处理机的调度模拟实验结果.对应不同的处理机数目(4,8,16,32),MOEA非支配解集中的解被MOMA的解支配的平均比率分别为72%,75%,71%,40%,MOMA非支配解集中的解被MOEA的解支配的平均比率分别为17%,12%,11%,34%,又MOMA算法的平均S指标都小于MOEA的,由此可知,不同处理机数目下,MOMA算法相对MOEA算法也具有更好的收敛性能.在不同的并行因子的DAG任务图调度模拟实验中,实验结果如图13所示,对应不同的DAG任务图并行因子(0.5,1,2,5),MOEA非支配解集中的解被MOMA的解支配的平均比率分别为71%,75%,74%,74%,MOMA非支配解集中的解被MOEA的解支配的平均比率分别为11%,12%,10%,12%,且MOMA的平均S指标的都比MOEA的少.可以发现,DAG任务图不同的并行因子对MOMA算法的信能影响较少,MOMA算法比MOEA算法具有更好的收敛性能.算法的计算开销是算法评价的一个重要指标,我们采用CEC2006竞赛评价指标①进行算法计算①ProblemdefinitionsandevaluationcriteriafortheCECtion.http://www3.ntu.edu.sg/home/EPNSugan/Page12开销与计算复杂性的评价,具体定义如下:其中t1i是问题i进行10000次评估的计算时间,本文主要考虑了12种不同场景参数设置下的DAG调度问题,t2i是算法完成问题i10000次迭代评估的完成时间.当(T2-T1)/T1越少时,说明算法的计算复杂度越低.本文的实验结果如表4所示.从表4我们发现,在相同的适应度评估次数下,MOMA算法在计算复杂度方面略优于MOEA算法.这主要是由于MOMA算法进行了局部寻优,减少了种群拥挤距离与支配等级排序的次数,又局部寻优的计算开销低于种群的拥挤距离与支配等级排序的,因此MOMA算法总的时间开销少于MOEA算法的开销.表4MOMA与MOEA算法计算复杂性比较MOEAMOMA从上述实验可以看出,MOMA算法在不增加算法的计算开销的前提下较MOEA算法具有更好的收敛性能.5结束语本文对异构云计算环境下能耗和性能优化管理的多目标优化问题进行定义,针对性的提出了包含Memetic局部优化策略的多目标优化方法,对当前调度的关键任务和非关键任务进行相对应的局部寻优,可以减少调度策略的评估计算,提高算法收敛速度,最终达到减少算法计算开销的作用.一系列的模拟实验结果表明,MOMA能够获得较好的优化效果,与经典的MOEA算法比较,具有更好的收敛性能与计算开销优势.本文重点研究了面向复杂异构云计算系统的多目标调度优化算法,为构建灵活的优化调度器提出了可行的计算方法.为使多目标优化调度更具实用性,针对具体的分布式计算系统动态特性与管理需求,采用合适的实时偏好决策同样非常重要,这也将是本方法应用研究的重要工作.
