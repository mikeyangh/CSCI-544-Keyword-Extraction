Page1基于多层增量式可扩展扇形兴趣区域的大规模DVE场景对等渐进式传输机制贾金原1)王伟2)王明飞1)范辰1)张晨曦1)俞阳1)1)(同济大学软件学院上海201804)2)(中国科学院云计算产业技术创新与育成中心广东东莞523808)摘要为了解决在有限的互联网带宽上高效下载海量虚拟场景的“瓶颈”问题,文中针对基于对等网络(P2P)的虚拟场景渐进式传输的增量判断和场景下载源节点最优选择这两个关键点,首先将传统的兴趣域(AreaofInterests,AOI)细化为兴趣扇区域(SectorofInterest,SOI),又将其提升为多层增量式可扩展兴趣扇形区域(Multi-Layered&IncrementallyScalableSOI,MISSOI),给出了MISSOI的分划扩展算法,并基于MISSOI提出了一个高效的整数级SOI场景下载的拾取算法;然后设计了一个基于对等网的海量DVE场景渐进式下载框架,并给出了在P2P-DVE中快速搜索场景下载源节点以及选择最优场景下载源节点的高效算法.仿真实验结果表明作者提出的方法在可视场景下载域的拾取、下载源查询成功率和下载请求失败率等性能指标上明显好于目前主流海量虚拟场景P2P-DVE传输机制FLoD,更是远优于传统的Client/Server虚拟场景传输模式.关键词分布式虚拟现实;对等网络;渐进式传输;下载增量;多层增量式可扩展兴趣扇形区域1引言分布式虚拟环境(DistributedVirtualEnviron-ments,DVE)[1-2]使得物理上分布在不同地点的用户(节点)可通过控制其虚拟化身(Avatar)在虚拟场景中进行漫游或交互.DVE已经在诸多方面得到了广泛的应用,如大规模多用户在线游戏(Massively图1网上大规模虚拟世界的著名实例用户构建本地虚拟环境的方式主要有:(1)虚拟场景的预分配;(2)虚拟场景的按需下载(On-demandDownloading).前者将全部DVE场景预先部署到客户端,通过对DVE的资源状态更新来保持数据一致性[1],经典的研究成果有高层体系结构(HighLevelArchitecture,HLA)及分布交互仿真(DistributedInteractiveSimulation,DIS).后者则根据需求实时下载DVE场景,首先利用AOI[4-8]将用户每次视点平移时需要下载的场景限定于视点周围区域,从而大大减少每次需要下载的场景数据量;再进一步优先下载距其视点较近和偏离视点角度较小区域内的场景模型.大规模DVE网络传输模式经历了3个发展阶段:(1)单服务器/多客户端;(2)多服务器/多客户端;(3)对等网(Peer-to-Peer,P2P).第1种传输模式简单成熟,数据的一致性较好,但当大量用户同时下载时可能给服务器带来极高的工作负担;第2种模式利用多台服务器降低单台服务器的工作负载,虽然可使每台服务器负载有所下降,但当某些子区域内用户数量急剧增加时,单服务器/多客户端结构的缺陷依然存在,而“用户迁移”策略则会增加额外的开销;第3种模式充分利用了节点间的带宽,有效减轻了服务器端的负载[4-5].P2P网络传输DVE场景的基本原理是:若DVE中某用户化身在虚拟空间中与邻近用户化身的AOI有重叠部分,则由于各MultiplayerOnlineGames,MMOG)[3],虚拟社区(如图1所示)、军事仿真等.通过网络从服务器下载虚拟场景已成为用户构建本地虚拟环境的主流方式,但随着虚拟场景复杂度和规模的急剧增加(如著名的虚拟社区———SecondLife的场景数据量已超过34TB,且仍在持续增加),海量虚拟场景的实时下载需求与目前极为有限的网络带宽之间的矛盾成为制约大规模DVE进一步发展的“瓶颈”所在.用户在不同时刻访问了同一兴趣域,先到者可能已经下载了该区域内的场景,因此后来者可直接向其邻近化身所在的节点请求下载场景,而不是从服务器下载.目前这方面国内外的主要研究成果有:面向虚拟城市的P2P场景传输机制FLoD[6]、HyperVerse[7]、借助于MPEG流式编码的Widereality[8]、面向大规模地形场景的P2P传输机制PeerVOLT[9]、面向大规模虚拟环境的P2P信息交互机制Solipsis[10-11]和面向MMOG的P2P兴趣管理机制MOPAR[12].它们的共同特点有:用户根据当前视点确定落入其视野范围的场景,通过特定策略在P2P网络中发现拥有用户所需场景的节点,然后与之建立连接并下载该场景.但以上方法采用的仅仅是AreaofInterests(AOI)的静态拾取,显得较为粗糙,也没有跟用户视点漫游时的下载行为结合起来,没有考虑场景级别的增量式渐进传输,更没有考虑将之与P2P覆盖网的下载源节点发现与最优下载源节点选择策略有机地结合起来,最大限度地减少网络传输负担与加快网上海量DVE场景的传输效率.本文首先将传统的兴趣区域AOI做了三度扩展工作:(1)首先将传统的AOI圆域细化并分划为两个扇形兴趣区域(SectorofInterests,SOI);(2)再以视点为中心将其静态地由单层扩展为多层的兴趣区域(Multi-layeredScalableSectorofInterests,Page3MSSOI);(3)然后再将其动态地扩展为多层增量式兴趣扇形域(Multi-layered&IncrementallyScalableSOI,MISSOI).MISSOI会带来两大优势:(1)量化了场景增量下载的优先级,根据视点由近及远的渐进增量式的加载场景,以最小的下载量来满足场景漫游的视觉体验,并能为预下载做准备工作,尤其适合SOI内场景数据量过大的情况;(2)对场景下载源的选择范围进行了分级,使得请求节点向最有可能拥有该数据的节点进行服务请求,减少了通信量,并均衡了各个节点的服务负载,避免了某些节点服务过载.基于所提出的MISSOI,本文给出了一种新的海量DVE场景渐进式传输机制与框架,并设计了一个更为高效的从P2P覆盖网中发现下载服务源节点的算法,以及如何从多个场景下载源候选节点中选择出最优节点(来下载场景文件)的算法.同时,本文还设计了一个仿真实验框架来验证本文所提算法的有效性.2多层增量式可扩展兴趣扇形域MISSOI2.1面向下载的DVE场景管理文件为了高效地判定拾取用户即将下载的当前可视场景,我们将整个DVE虚拟空间从水平面上划分为若干相同尺寸的矩形格子,称之为矩形下载单位域(DownloadingUnitCell,DUC).每个下载域拥有唯一标识ID(如图2所示),则可根据虚拟空间中物体模型的水平面投影位置将它们划归到不同的下载单位域[13-15],并采用“渐进网格”(ProgressiveMesh,PM)[16]实现对物体模型的简化.一个物体模型在经过PM简化后,能够生成一个表示其基本拓扑结构的“基网格”场景文件和一系列“网格增量”场景文件,因此网络传输场景的最小下载单位从完整物体模型转变为场景文件,而每个落入下载域中的物体都会对应设置一个“场景描述”文件,其格式如图2所示.本文设定若一个下载域与SOI相交,则视整个下载域落入SOI,那么通过判定虚拟空间中下载域与当前可视范围(SOI)的关系就能得到落入SOI内的场景.下面对物体的关注度和重用度给出说明.定义1.对象关注度.表示该对象(本文所指的对象即物体模型)对用户的吸引力,例如一个虚拟城市中的名胜古迹等往往具有较高的吸引力,而其他节点用户则可以参考该项的数值得知自己未来更有可能会浏览哪些场景并预先进行下载,从而在P2P网络中加快对这类物体的下载.定义2.对象重用度.在虚拟空间中是否有其他物体模型与该物体模型在几何形状和尺寸上完全一致(即可重复使用的模型),若无重用则取值为0,否则该项的值等于与之完全一致的物体模型的个数(如图3所示,居民楼的重用度为4).2.2MISSOI的分划过程为完成适应P2P网络中场景的并行传输需求,本文将现有的AOI扩展为多层增量式兴趣扇形域MISSOI,用于当前可视场景的判定和场景下载源的搜索.如图4所示,假设现有两个n层MISSOI,其由n个同心扇区组成,上下两个同心扇区对应着一个AOI.按照当前视线方向从远到近,标识每个子Page4区域为Qn,Qn-1,…,Q0,…,Q-(n-1).MISSOI的最外层半径即AOI半径R,均为观察者的最大可视距离.从整体上看,这两个MISSOI分别又可称为CVR(CurrentVisibleRegion,当前可视区域,由Q1,Q2,…,Qn组成的一个扇环,夹角通常为120°)和VRA(VisibleRegionAfterRotation,旋转后可视区域,由Q0,Q-1,Q-2,…,Q-(n-1)组成).在基于Client/Server的场景下载模式中,MISSOI中距离当前视点越近,偏离视线角度越小的子区域,其下载优先级越高,显然Q1>…>Qn>Q0>Q-1>Q-2>…>Q-(n-1),这样就能保证用户能够优先下载并渲染CVR中的场景.其可扩展性则体现在:若视点驻留某地,而视点的MISSOI中场景又已完全下载了,则可对现有的MISSOI进行扩展,利用视点原地驻留的时间,预下载[17]未来可能访问到的场景.当一个用户进入大规模P2P-DVE中时,其虚拟化身的部分邻居节点很可能已获得该用户所需下载的场景,故可不必再遵循C/S的按优先级下载的模式,用户对某场景文件的下载请求可以被并行发送至P2P覆盖网中所有拥有该场景数据的节点,再从多个节点处并行下载场景数据.算法1定义了对单层SOI进行分划得到MISSOI的过程,目的在于分划后每层内的场景下载请求量与分配给该层内的节点资源(如带宽)相匹配.我们使用了Voronoi图的邻居发现策略[18]来发现MISSOI及其各层内的节点.算法1中的阈值td为MISSOI分层的终止条件(设定为0.1),而ts则是MISSOI分划的终止条件(设定为1).待分划结束后,单层SOI就演变为一个层数为2n的MISSOI.算法1.多层增量式兴趣扇形域的分划算法.输入:单层AOI输出:多层增量式兴趣扇形域MISSOI1.初始中点分层.从SOI的半径R中点处将SOI分划为两层;2.计算每层的资源需供比.分别计算每层内场景文件的数据量与该层节点的可用带宽之比,分别计为RN、RF;3.如分层均衡则结束本轮分层.若RN和RF之差的绝对值小于阈值td,则转步5;4.调整半径使之趋于均衡.减少RN和RF中较大值所在层的半径直至RN和RF之差的绝对值小于td;5.继续分划.对于RN和RF尚未小于阈值ts的层,从其当前半径中点处再分划为两个子层,然后转步2分别处理之;6.终止分划.若RN和RF均已小于阈值ts,则退出.2.3MISSOI中场景平移下载增量的判定过程目前已知的文献(例如文献[6])大多采用BruteForce扫描来获知用户漫游过程中落入可视范围内的下载域,即通过扫描虚拟空间中的全部区域来判定落入AOI的下载域.这种方法对时间和CPU资源的开销都较大,而通常情况下用户每次视点平移前后的两个MISSOI仍有大部分下载域重叠,只有少部分下载域新落入平移后的MISSOI.因此用户漫游中每次判定可视场景时没有必要扫描全部下载域,只需判定每次新落入MISSOI中的场景即可.接下来本文给出了一种高效判定MISSOI场景平移下载增量/减量的方法.2.3.1场景平移下载增量/减量设MISSOIO1表示其视点在位置O1时的MISSOI,MISSOIO2表示视点平移到位置O2的MISSOI.以图5为例,给出场景下载平移增量及减量的定义.定义3.场景平移下载增量(TranslationDown-loadingIncrement)MISSOI即视点平移后新进入MISSOIO2的场景集合.MISSOI={MISSOIO2-MISSOIO1∩MISSOIO2}.定义4.场景平移下载减量(TranslationDown-loadingDecrement)MISSOI即在视点平移后不再被MISSOIO1覆盖的场景.MISSOI={MISSOIO1-MISSOIO1∩MISSOIO2}.2.3.2场景平移下载增量/减量的整数拾取算法设MISSOI最外层半径为r,圆心坐标为(x0,y0).以计算机屏幕窗口左上角为(0,0)建立全局坐标系,每个下载域的唯一ID用(i,j)确定(其中i为行号,j为列号).给定下载域边长为d,设某下载域的左上角顶点坐标为(xp,yp),则该顶点对应的该下载域的ID为(yp/d,xp/d).为了更方便地判定场景平移下载增量/减量,以AOI圆心为原点,建立一个平行于全局坐标系的局部坐标系,从而将AOI分为4个象限.如图6所示,在MISSOI平移前后,若在第1象限对p1进行判定其与MISSOI的关系,则同样需要对其余3个象限的p2,p3,p4所对应的下载域(灰Page5色)进行操作.设视点每次平移距离为c,为判定某个下载域是否落入MISSOI,将检测点(该下载域左上角顶点)坐标(x,y)分别代入判别式(1)与(2),由此可得式(3):D2=x-x()02+y-y0-()由于在场景的加载过程当中,优先加载视点前方的MISSOI,然后再加载后方的MISSOI,当视点向前移动时,前方MISSOI移除的场景数据正是后方MISSOI所需要的增量数据,所以这里只整体考虑视点前方MISSOI的下载增量和视点后方MISSOI的下载减量.从MISSOI右顶点所在下载域开始判定,设该下载域左上角坐标为(x,y),在判定过程中可能存在以下4种情况:(1)当D1>0和D20,则视点平移后该点新进入MISSOI,因此该点对应的下载域属于场景平移下载增量,落入该下载域的场景需要被下载(若其未被下载).(2)当D1<0和D2>0,则视点平移后该点不再属于MISSOI,因此该点对应的下载域属于平移下载减量.(3)当D10和D2<0,则视点平移前后该点都属于MISSOI,表明视点平移并未对此点对应的下载域产生影响.(4)当D1>0和D2>0时,则视点平移前后该点都不属于MISSOI,表明视点平移对该点对应的下载域未产生影响.若检测点未超过平移前MISSOI与平移后MISSOI所覆盖的边界范围,则继续检测下一下载域(i-1,j);否则就检测下载域(i+1,j-1).以上过程完成了对进入/移除MISSOI最外层同心圆中场景平移下载增量/减量的判定,接下来再判定落入MISSOI各子区域的场景平移下载增量/减量,限于篇幅,具体过程省略.以上给出了判定视点平移后落入/移除MISSOI内下载域的过程,当用户最初进入虚拟空间时,判定落入MISSOI内下载域的过程可被视为是以上过程的一个特例.假设当前的检测点为P1(x,y),其邻近下载域的检测点为P2(x,y+d),将这两个点代入式(3),则得到增量公式.D1(P2)=D1(P1)+2d(y-y0)+d2(4)对包含c和d的乘法运算:2dy,2dy0,d2,2cy,2cy0和c2,可以通过对c与d设定特殊的值来对式(3)、(4)进行消除乘法的优化,令c=1,2,4,…,2n,d=2m(m为自然数),由于计算机进行的是二进制运算,则式(3)、(4)中的乘法运算就可以通过移位操作来实现,这样可大大简化计算机进行运算的复杂度,加快运算速度.3基于MISSOI的对等覆盖网渐进式下载邻居发现算法对于邻居节点的发现和下载源的搜索,我们将做整体化考虑,由于在场景漫游中,化身视点的移动方向是多变的,兴趣扇区和自身SOI之间有重叠的邻居节点,不一定在自身的SOI中,但绝大部分在自身的AOI中,我们把视点前后的两个MISSOI合并成为MISAOI(Multi-layered&IncrementallyScalableAOI),这样将更加有利于邻居节点的判定和选择.3.1邻居节点发现首先,我们对虚拟场景中节点的角色进行定义.定义5.AOI邻居.在虚拟空间中,若一个节点i的虚拟化身进入了另一个节点化身j的AOI之内,则节点i被视为节点j的AOI邻居.定义6.场景下载源.当节点k需要下载某一Cellij场景文件时,那么虚拟空间中所有已拥有(下载过)该场景文件的那些节点被视为该场景文件Cellij的潜在场景下载源.对于某一下载请求节点来说,P2P网络中任意节点均有可能成为该请求节点的场景下载源,那如何快速发现合适的场景下载源,避免查询P2P网络中全部节点所带来的巨大通信开销就显得很有必要.一些研究者将场景下载源的搜索范围限定在了请求节点的AOI邻居节点内[7,18].而随着化身在虚Page6拟空间中不断改变位置,请求节点需要随时发现AOI邻居,目前邻居发现策略基本上可以分为两类:(1)通过节点与服务器之间的通信来发现邻居[7]每个化身位置发生变化的节点向服务器发送位置更新信息,再由服务器来广播至其余节点,其他节点在收到位置更新信息后,通过判断对方化身位置与自己化身AOI域的关系来发现邻居节点.(2)通过节点之间的通信来发现邻居[18]利用Voronoi图,请求节点通过自身的AOI邻居与AOI范围外的节点进行通信,以此发现自己化身位置变化后的新AOI邻居.由于在这种邻居发现策略中服务器不参与邻居发现工作,因此其工作负载大为降低.仿真结果[18]已经证明这种基于Voronoi图的邻居发现策略具有较好的可扩展性(能在大规模P2P-DVE中快速发现AOI邻居)及健壮性(即便一定规模的节点非正常退出系统,全局性能也能维持在一个较好的水平).因此本文沿用了文献[18]中的邻居发现策略.图7简要描述了一个两层MISAOI在视点平移前后的AOI邻居化身的变化情况.3.2场景下载源的搜索3.2.1基于MISAOI的场景下载源分级搜索策略文献[6]中提到了一种基于AOI的场景下载源搜索策略:请求节点向所有AOI邻居发送所需场景文件的查询请求,若当前AOI内没有发现某个场景文件的场景下载源,则将服务器视为该场景文件的场景下载源.这种基于AOI的场景下载源搜索策略存在一定缺陷:(1)通常情况下请求节点的AOI内只有部分节点拥有所需场景,因此随着场景密集度及邻居节点数量的增加,这种下载源搜索机制会消耗太多带宽资源;(2)部分位于AOI外的节点仍有可能成为场景下载源,而该下载源搜索策略的搜索范围则仅包含AOI邻居及服务器,搜索不完全.当一个请求节点需要下载给定区域内场景时,那些化身正位于该区域或离该区域较近的节点由于与该节点有更多相同的兴趣域,因此这些节点更有可能成为合适的场景下载源.基于以上认识,本文提出一种基于MISAOI的场景下载源分级搜索策略,如图8所示.假设一个请求节点需要下载落入其MISAOI内Qi(-nin-1)中的场景,具体算法如下.索算法.算法2.基于MISAOI的场景下载源分级搜输入:Qi内场景文件Pj的场景源查询请求输出:场景文件Pj的场景下载源集合1.初次搜索.向Qi内节点发送Pj的场景查询请求;2.发现场景下载源.若Pj被Qi内某些节点成功回应,则返回;3.生成查询优先级队列Quesearch.对当前MISAOI中的扩展层分别按照〈Q(i+1),Q(1-i)〉,〈Q(i+2),Q-i〉,…的查询优先级顺序插入到二元组队列Quesearch;4.发送Pj的查询请求.向Quesearch队头的扩展层内节点发送Pj的查询请求;5.在Quesearch中发现场景下载源.若Pj被该层内的某些节点成功回应,则结束搜索并返回;6.扩展到MISAOI的第n+1层.若Quesearch已经到达队尾,则将现有n层MISAOI扩大至n+1层,并向该层中的节点发送Pj的查询请求,转步5;7.选择服务器作为场景下载源.将服务器视为Pj最后的场景下载源.3.3最优场景下载源选择策略对于某一场景文件可能存在多个场景下载源,因此请求节点又面临着场景下载源的选择问题.目前文献[6]采取的方法是在多个场景下载源候选者中随机选择一个,同时限定了每个场景下载源能同时处理的下载请求数量为5个.这种过于简单的场景下载源选择策略存在一定缺陷:随机选择可能会造成节点的负担不均匀,而拥有较多资源的节点却受限于同时处理的请求数上限而无法及时对为更多请求响应,这即造成了下载资Page7源的浪费,增大了下载失败的概率.为克服以上随机选择策略存在的问题,本文提出了一种“场景下载请求动态分配”策略:对于场景文件下载请求队列中的每一个请求,将从其当前所有场景下载源中选择一个处理能力最强的节点(最优场景下载源)来提供下载服务.假定某场景文件的下载请求节点有n个场景下载源,通过式(5)来评估每个场景下载源的资源得分状况,设ResourceScore(i)为场景下载源i的资源得分,NumofRequest(i)为场景下载源i正在处理的下载请求数量,Bw(i)为目前场景下载源i的可用带宽,而Lat(i)表示下载请求节点到场景下载源i的基本网络传输延时,分别分配权重α,β和γ,α+β+γ=1,这3个权重初始均设为等值.ResourceScore(i)=α1假设每个下载源当前可用带宽为其所拥有总带宽的5%,正处理的请求数量为50个,根据式(5)来设定阈值TResource的初值,TResource的设定可以根据场景下载源的数量来确定,当可供选择的场景下载源较多时,TResource可以设定在较高的值,反之则设定为较低的值.请求节点将资源得分高于TResource的场景下载源挑选出并形成下载服务优先级队列QSource.而那些资源得分低于TResource的场景下载源则被认为不能提供下载服务而被舍弃,其目的是为了避免资源得分较低的节点负荷过重.由此可见,队列QSource是动态的,当那些被舍弃下载源重新拥有足够的资源分数时,就有可能会再次被加入到该队列;反之当其资源得分低于TResource时则退出该队列.算法3.最优场景下载源选择.输入:场景文件Pi的下载请求输出:场景文件Pi的最优场景下载源1.计算资源得分.对Pi的每个场景下载源,用式(5)计算其资源得分;TResource,转步1.2.生成队列QSource.筛选出Pi的场景下载源中资源得分高于阈值TResource的节点,按资源得分从高到低生成队列QSource;3.初次分配.将Pi的下载请求分配给QSource队头节点;4.场景下载.若该节点能提供下载服务,则传输Pi,从QSource删除该节点,并成功返回;5.转发下载请求.若QSource队列非空,那么将Pi的下载请求转发至QSource中的下一个节点,转步4;6.启动下一轮分配.若QSource队列已空,那么降低阈值4仿真实验结果与性能分析4.1仿真环境的设定目前由于硬件条件的限制,在真实大规模P2P网络中进行实验显得不太现实,故大多数研究者们都选择了仿真实验.基于文献[6]中的开源软件(参见http://ascend.sourceforge.net)实现了本文用于模拟P2P网络大规模节点渐进式下载的仿真平台.我们首先构建了一个大规模虚拟室外场景(简单起见,场景中物体模型大小均设为相等,且均匀分布于虚拟空间),将其存储于一台服务器上,再采用渐进网格技术[16]对场景中的模型进行精简编码,沿水平面将虚拟场景空间划分为若干矩形下载域,其中每个虚拟物体对象都建立了相应的“场景描述文件”.仿真实验中,当一定数量的节点进入P2P网络时,用户化身的漫游行为分为随机运动(RandomMovement,RW)模式和聚集运动(ClusterMove-ment,CW)模式[6](参见图9).在随机运动模式中,节点每一步的移动方向和位置均为随机产生的;聚集运动模式则来源于虚拟环境(如虚拟城市)的漫游体验,大部分游客会关注某些景观地点,并聚集在这些热点区域周围.因此,我们在虚拟环境中设定一定数量(n为节点数量)的热点区域,虚拟化身一般将尽可能地朝距离其最近的热点区域移动.这里我们作如下假定:(1)用户端的存储空间足够容纳整个虚拟环境,故未涉及缓存剔除问题.(2)每秒化身将平移10步,仿真持续3000步,统计每步数据的平均值.(3)用户之间的通信延时设为常数,即下一步将收到上一步发送的信息,若因带宽不足,信息到达将被延迟为实际传输时间.为了叙述方便,本文所提出的基于MISSOI/MISAOI的海量网上虚拟场景的P2P渐进式传输机制用SPT(MISAOIbasedP2PProgressiveTransmissionofHugeWebVRscenes)标识.在目Page8前已知P2P传输DVE场景的方法[3,7-9]中,我们的思想与文献[6]最为接近,又沿用了文献[6]的邻居发现策略,所以主要与文献[6]的仿真结果进行对比分析.各项仿真参数具体设定参见表1.MISAOI最外层半径4.2可视场景下载域的拾取目前主要有两种方法来判定用户每步漫游的可视场景区域,即判断哪些下载域落入用户的当前视野范围(MISSOI)内.第1种方法是文献[6]中采用的穷索法(BruteForce),即扫描全部下载域阵列;第2种就是本文所提出的场景下载域的整形增量拾取法.从表2中可以看出,每当视点移动时,其MISSOI也相应地平移.前者(BruteForce)每次都要重新扫描整个下载域才能拾取下载增量域,而我们运用增量扫描思想,仅仅需要加减法与移位操作就能高效地拾取MISSOI周围区域的下载增量域,使得拾取时间较之第一种方法大为降低,其所耗费的时间只是第一种方法的1%左右.表2两种不同方法的下载域拾取时间性能比较结果下载域宽度BruteForce判定MISAOI整数1001251504.3场景下载源查询成功率场景下载源查询成功率(SceneSourcesSearchingSuccessRatio,SSSSR),即每次用户视点平移后发送场景文件查询请求时,被成功回应的查询请求次数与用户总共发送的场景查询次数的比值.分别采用文献[6]中基于AOI的场景下载源搜索策略与基于MISAOI的场景下载源分级搜索策略进行仿真对比,从图10中可知,后者的场景下载源查询成功率远高于前者,前者最高未超过50%,而后者则始终维持在50%以上.对以上仿真结果的分析是:后者先将某区域内场景查询请求发送至该区域内节点,在该区域内未能发现场景下载源的情况下,才继续向邻居区域搜索;而这一区域内节点由于与该请求节点具有相同兴趣域,有较高的概率拥有该区域内场景数据,因此场景查询成功率较前者更高.仿真结果说明,基于MISAOI的场景下载源分级搜索机制SPT能够在大规模P2P网络中以更小的通信开销发现场景下载源.4.4场景下载请求失败率场景下载请求失败率(ScenesDownloadingRequestFailureRatio,SDRFR),这是是当用户每次发送场景数据下载请求时,未能被场景下载源成功回应的下载请求数与总共发送的场景下载请求数之比.我们分别实现了文献[6]中的随机选择策略和本文所提出的最优场景下载源选择策略,实验结果如图11所示,前者的SDRFR最高达24%,随着节点数量的增加而SDRFR呈现降低的趋势,但其最低SDRFR也达到了12%;而后者的这一指标基本Page9稳定,平均值为约6%,而最低值只有4%,明显好于前者.这是由于最优场景下载源选择策略对所有的场景下载请求都尽可能选择当前资源得分高的节点来提供下载服务,降低了场景下载请求的失败率.4.5基网格下载延时基网格下载延时(BaseLatency)是请求节点发送“场景文件请求队列”中基网格文件请求到基网格文件被成功返回至请求节点这个过程所耗费的时间.基网格下载延时是描述下载性能的重要指标之一,基网格下载延时越小则用户需等待看到最低分辨率场景的时间越短.基网格下载延时主要消耗在以下方面:(1)请求节点与其最优场景下载源之间用于建立传输连接的时间开销TConnection.(2)该基网格文件的查询请求被其最优场景下载源成功响应所耗费的时间TProcessing.(3)该基网格文件的网络传输时间TTransmission.BaseLatency=TConnection+TProcessing+TTransmission(8)从图11可以看出,在C/S模式下,由于数量众多的节点只能同时分享服务器端有限的网络带宽,基网格下载延时随着下载请求节点数量的增加呈现急剧增长的趋势,当节点数量达到2000时,基网格延时就已经达到了340步,因此传统C/S模式难以适应海量用户的并发下载请求.但图12却显示了P2P传输模式下的基网格下载延时稳定在20步之内,极为有效地改善了C/S模式的基网格延时“瓶颈”问题.我们从以下方面对P2P传输模式中的仿真结果进行了分析:(1)在P2P网络中,场景文件的传输充分利用了节点之间的带宽,因此可提供用于传输场景文件的带宽较C/S模式更高;(2)由于采用了MISAOI场景分级搜索策略和场景下载请求动态分配方法,基网格的下载请求能够迅速找到其最优场景下载源.在基网格下载延时这个重要性能指标上,我们的SPT与FLoD[6]的表现基本一致,都同样远优于C/S模式,并随着节点数目的增加,均呈现了很好的稳定性.4.6下载饱满度下载饱满度(DownloadingFillRatio)是用户在漫游过程中,每步已成功下载当前可视场景占所有可视场景总量的比例.下载饱满度是描述下载性能的另一个重要指标之一,下载饱满度越高则虚拟漫游的实时性和视觉效果会越好.我们分别在C/S模式和P2P网络中进行了仿真实验,图13显示随着用户节点数量的增加,C/S传输模式中下载饱满度急剧下降.造成以上结果的原因是Server端网络带宽是有限的,当用户节点数越来越多时,每个用户节点能分享的带宽会越来越少.然而,我们所提出的基于MISAOI的P2P渐进传输模式SPT中,即便当用户节点数在不断增加,虚拟场景的下载饱和度依然均保持在90%以上,略好于FLoD[6],远优于C/S,并具有良好的稳定性.4.7服务器端下载率服务器端下载率(ServerDownloadingRatio,SDR),这是在P2P网络中,用户从服务器端下载的场景数据量占其所有下载场景数据量的比值.基于P2P的虚拟场景传输机制的目的在于尽可能降低服务器端工作负担.从图14可看出,无论是在随机运动还是聚集运动模式下,绝大部分虚拟场景都是通过节点之间的相互传输来下载的,只有极少比例(SDR始终维持在2%以内)的场景是从服务器端下载的.显然,与SDR为100%的C/S模式相比,我们所提出基于P2P的海量虚拟场景渐进式下载机制SPT能够大幅度降低服务器端的负载.Page105结语本文设计了一种用于多用户在线高效下载海量虚拟场景的P2P渐进式下载机制,其贡献主要体现在:(1)扩展了传统的AOI并提出了新概念“多层增量式兴趣扇形域”(MISSOI);(2)给出了一个MISSOI的动态分划算法;(3)给出了MISSOI下载增量的整数拾取方法,这样用户可以快速判定对于当前视点需要下载的最佳分辨率场景区域;(4)给出一种基于MISAOI的场景下载源节点分级搜索策略,使得用户能快速发现拥有自己所需下载场景的邻居节点;(5)给出了一种动态场景请求分配策略,使用户能在多个场景下载源中选择一个最优节点用于实际的场景文件传输.仿真实验也验证了本文提出的基于MISSOI的海量虚拟场景P2P渐进传输机制,较已有方法能更有效地降低服务器端的工作负载,减少网络通信量,为进一步实现海量虚拟场景的网上实时传输奠定很好的研究基础.我们下一步的工作将主要着眼于:(1)本文目前假定用户节点的存储空间无限,因此未考虑缓存更新问题,而实际的DVE中参与节点的存储空间有限(尤其是PDA、手机等移动终端),因此需要设计合理的场景数据更新机制,尽可能保留用户访问频率最高的场景内容.(2)由于用户的带宽既可用于自身下载也可用于上传场景,因此有必要对用户端带宽进行合理分配,从而在自身与P2P网络中邻居的下载需求之间取得平衡.(3)场景下载源的搜索策略和场景下载请求的动态分配策略的效果仍有值得改进的余地.致谢衷心感谢为本文提出宝贵意见的审稿专家!
