Page1基于标签传播概率的重叠社区发现算法刘世超朱福喜甘琳(武汉大学计算机学院武汉430072)摘要发现高质量的社区有助于理解真实的复杂网络,尤其是动态地分析社区重叠结构,对社区管理和演化具有重要意义.文中提出一种基于标签传播概率的LPPB(Label-Propagation-Probability-Based)重叠社区发现算法,该算法首先为每个结点赋予一个独立的标签,然后根据结点的影响力大小将结点进行排序;在标签传播的过程中,综合网络的结构传播特性和结点的属性特征计算标签传播的概率,同时利用结点的历史标签记录修正标签更新结果;最后将传播后具有相同标签的结点划分为同一社区,社区间的重叠结点构成了社区重叠结构.作者在基准数据集和带时间维度的C-DBLP网络上进行实验,结果验证了该算法具有较高的准确性和稳定性,并且通过对重叠结构的动态分析,揭示了社区重叠结点的行为特性和C-DBLP网络处于高“耦合度”的发展趋势.关键词重叠社区;标签传播概率;结点影响力;社区演化;社交网络;数据挖掘;社会媒体1引言社区结构是复杂网络的重要特性,在网络中发现社区就是把相似结点划分为一个集合,使得集合内结点之间的相互作用比它们与集合外结点的相互作用更强,即同一社区内部结点间的链接较为稠密,不同社区之间的链接较为稀疏[1].近年来社区发现被广泛应用于不同类型的网络,如万维网、社交网络和生物网络等.现实的网络社区可能并不相互独立,如图1所示,网络中有阴影的结点可以同时属于两个社区,即社区是重叠的,这导致了网络结构更加复杂,为社区发现带来了新的挑战.社区的重叠结构由重叠结点组成,社区重叠结点是指网络中可以属于多个社区的结点,重叠结点越多表明社区的重叠度越高.一方面,重叠结点具有“多面性”,对重叠结点的挖掘能更全面地了解结点的特性.当前在线社会网络都是以用户为主体,分析用户的行为特性和喜好对商业推荐和用户管理具有重要的意义;另一方面,重叠结点是社区间的桥梁,对社区演化和社区间互通信息起到关键的作用.当社区间的重叠度较高时,表明共同拥有大部分的成员,那么这些社区即将融合为一个大社区;反之,社区间的重叠度较低,说明网络的社区间相对独立.因此,对社区重叠结构的研究有助于分析复杂网络的演化趋势.然而,简单的社区聚类算法不能解决重叠社区和重叠结点的检测问题,尤其在大型网络面前束手无策,如何有效地、精准地挖掘出复杂网络的重叠社区是当前社会网络分析的重点,也是本文研究的核心问题.本文的主要贡献如下:(1)提出了结点间的传播特性度量,以改进传统算法中仅仅基于邻域结构的传播方式.(2)在标签的传播过程中,根据结点影响力的大小进行更新,避免了不必要的标签更新和标签“逆流”的现象.(3)引入结点的属性特征来影响标签传播的概率,提高了算法的准确性,加快了算法的收敛.(4)动态地检测社区的重叠结构,能够分析和预测网络的发展趋势.2相关工作目前社区发现算法大多是基于网络结构划分的,如基于图的划分算法[2-4]、边聚类算法[5-6]、种子扩散的方法[7-8]、随机游走[9]、层次聚类[10-11]和模块度[12]等.当应用于大型社会网络分析时,几乎都遇到了算法复杂度高的问题,因此Raghavan等人[13]提出RAK算法,首次将标签传播应用于社区发现,显著地提高了算法的效率.该算法的基本思想:为每一个结点赋予一个独特的标签,并随传播过程更新标签,计算邻居结点中最多的标签来更新结点的标签,最后把所有相同标签的结点都加入到同一社区.为提高生成社区的质量,Barber等人[14-15]提出基于模块度约束的标签传播算法,更加准确地划分社区.Xie等人[16]结合了跳数衰减的思想扩展了对结点邻居的计算,提高了社区划分结果的精度.算法[13-16]只允许结点保留一个标签,然而真实的网络社区可能是重叠的,例如一个研究员可以属于多个研究小组,一个学生可以加入不同的兴趣社团.经典的团渗透算法(CPM)[2]以及边分割算法(Link)[5]虽然能够挖掘重叠社区,但都存在一定的局限性:CPM依赖于网络中团的分布,而Link取决于划分密度D,算法运行的时间和空间开销使得这两种算法无法应用于大型网络.于是GregoryCOPRA算法,首次运用标签传播方法解决重叠社区挖掘的问题.该算法每个结点都有一组属于某个社区的标签对(c,b),c表示社区名称,b表示归属系数,任意结点的所有归属系数加起来等于1.更新过程中设置一个筛选阈值,阈值的大小取决于结点能够属于的最大社区数,结点的归属标签集中b小于阈值的标签对将被删除.文献[18]对COPRA算法的筛选阈值的改进,是通过平衡阈值的选择来提高生成社区的质量.以上所有算法仅利用结点的邻居结构来更新标签,忽略了结点自身的属性和历史标签信息对传播的影响.尽管赵卓翔等人[19]引入结点的度来衡量标Page3签的影响传播概率,但是结点的度只能一定程度地反应其影响力值.由于历史的标签信息对现在的更新决策有一定的影响作用,Qiang等人[20]提出的MLPAO算法保留结点的历史标签信息,在选择标签时正比于其出现的次数.然而,历史标签的影响会随着时间衰减,因此,MLPAO算法将所有标签的影响等同处理,有一定的局限性.本文总结了上述算法的优缺点,提出了基于标签传播概率(LPPB)的重叠社区发现算法,该算法在COPRA的基础上改进了网络的传播特性,根据结点影响力确定更新顺序,同时还综合计算了结点的属性特征和历史标签记录对传播的影响.本文在第3节阐述LPPB的主要思想和具体步骤,第4节对该算法进行实验验证和分析,并与COPRA算法进行比较,第5节给出本文的工作总结和未来研究方向.3标签传播概率的社区发现算法3.1算法主要思想本文拟从网络的传播特性、结点的更新顺序和结点的属性特征3个方面对经典的COPRA算法进行改进,如图2所示.首先计算网络所有结点的影响力值,根据影响力的大小对结点排序,并以此作为结点的更新顺序,可以减少算法不必要的标签更新和标签“逆流”的现象;然后利用网络的传播特性、结点属性相似性和邻接矩阵分析标签在结点间传播的概率,并依据标签传播概率进行传播迭代,这样不仅提高了算法的准确性,更加准确地探测重叠社区结构,而且加快了收敛速度.定义1.结点影响力.设网络G(V,E)中每个结点i都拥有一个影响力值,用Infi表示.由于大多网络并不是连通图,因此本文采用吕琳媛等人[21-22]提出的LeaderRank算法,计算结点的Inf值.3.1.1网络的传播特性κ目前的标签传播算法虽然考虑了社会网络的传播特性,即假定结点直接接受邻居结点的标签,然而这在真实的社会网络中并不成立.每个结点都存在传播标签和接收标签两种能力,一般我们认为影响力大的结点传播标签的能力就强.根据文献[23]的研究结果,有影响力的结点不易接受影响,那么影响力大的结点的接受能力较弱,因此做如下定义.定义2.传播特性κ.定义κi←j为标签从结点j到结点i的传播特性度量值.由结点i和j的影响力决定,注意一般来说κi←j≠κj←i.当Infi远小于Infj时,κi←j≈1,说明由于j的影响力较大,结点i极易接受j的标签;反之,当Infi远大于Infj时,κi←j≈0,说明i的影响力较大,结点i较难接受j的标签.如图3所示,结点1的标签传播到结点3的κ值可以表示为κ3←1=κ1←3≈0.226,κ3←2≈0.661,κ2←3≈0.339.由上述结果可知,在更新结点3的过程中,结点1对结点3的影响更大,标签更容易从结点1传播到3.3.1.2结点的更新顺序U由于先更新的结点影响传播的较远,很多Inf值较小的结点在传播过程中会反过来影响一些Inf值较大的结点,因此存在标签逆向传播的问题.虽然算法在后续的迭代中可以修正结果,但耗费了大量的时间和更新操作,尤其是应用于大型社会网络时影响更为显著.因此,根据结点的Inf值,由大到小排序作为结点的更新顺序(该排序用U表示)减少了算法不必要的标签更新和标签“逆流”的现象.Page4算法1.结点更新顺序.输入:网络G(V,E),n是结点总数输出:结点更新顺序U1.U←{};2.INF←{};3.FOREACHi∈V4.Infi=LeaderRank(i);5.INF←INF∪Infi;6.ENDFOR7.WHILEINF!=NULL8.U←U∪max(INF);9.INF←INF-max(INF);10.ENDWHILE3.1.3结点的属性特征S现实的社会网络不仅具有拓扑结构特征,而且网络中结点的内在属性也容易获取,如C-DBLP中的学者记录都拥有研究方向、工作单位等信息,因此结点的属性特征S包含两部分:结构属性St和结点内在属性In.如图4,学者2、3、4属于A社区,5、6、7属于B社区,由于网络结构是对称的,此时学者1的候选标签集为{A,B},当学者1只能保留一个标签时,传统的标签传播算法在选择时存在较大的随机性,而实际上1和2、3、4同处于一个研究单位,如果算法随机地将学者1的标签更新为B是不恰当的,会影响社区划分的质量.为了解决上述随机性问题,本文综合结点的结构属性和内在属性共同计算结点间的相似性,即结点i和j的相似性,计算如下:采用常用的余弦公式计算结点i和j的结构相似性:其中,Γ(i)表示结点i的所有邻居与结点i的集合.定义Ini={ini1,ini2,…,iniN}为结点i的内在属性集合,inik是结点i的第k个属性值,N是内在属性个数.那么结点i和j的内在属性相似性Ini,j的计算公式为例如给定结点的3个属性为{城市,性别,单位},结点p的值为{武汉,男,百度},结点q的值为{武汉,女,腾讯},那么Inp,q值即为1/3.把结点间的相似性扩展到结点与社区的相似性就可以避免图4划分错误的问题,即结点i与社区A的相似性计算如下:Si,A=其中,M为社区A的结点总数,在标签选择的过程中结点总是选择与自己相似性最大的社区作为标签.本文将结点间的属性相似性值S作为网络关系的权重,并通过改进的网络传播特性κ共同决定标签传播概率.3.2标签传播概率根据3.1节阐述的算法思想,本节给出在结点更新的过程中标签传播概率的定义.定义3.标签传播概率.结点j的标签以概率P(i←j)传播到结点i,P(i←j)取决于结点i和j的相似性度量Si,j、传播特性度量κi←j和邻接矩阵δ(i,j),即其中Si,j∈[0,1]表示结点i和j的关系权重,即结点间的属性相似度,κi←j∈[0,1]表示标签从结点j传播到结点i的度量值.δ是n×n的邻接矩阵,n为结点总数,那么δ(i,j)表示如下:P(i←j)的取值范围为[0,1],由Si,j、κi←j和δ(i,j)共同决定.3.3标签传播过程定义4.结点的最大标签数k.根据输入网络,定义结点拥有的最大标签数k,即为结点可以归属的最大社区数.在C-DBLP的实验中证明,k取值的波动会影响到社区划分的重叠度和模块度.定义5.标签分布矩阵犘.每个结点拥有一组Page5标签,用1×k向量犘i表示结点i的标签分布:犘i={(犘i(lj),lj)|j=1,2,…,k∩lj∈C},其中犘i(lj)是结点i拥有标签lj的概率,C是全部标签的集合,且k满足∑分布矩阵犘.j=1标签传播算法是一个迭代的过程,定义算法第i次迭代时的标签分布矩阵为犘i,图5给出本算法的迭代过程示意图.每次迭代,根据结点的更新顺序U重新计算各个结点的标签分布.结点i除了概率地接受邻居结点的标签,还要考虑结点i的历史标签信息.历史的标签信息对当前的更新决策有一定的影响,并且其影响随时间衰减,定义∑标签信息对更新标签的辅助信息.那么算法在第t次迭代时,结点i的标签向量犘ti计算公式如下:等式(2)右侧第1项表示结点i概率地接受所有邻居结点的标签向量,第2项是结点i的历史标签集合,其影响经λ衰减后作为标签更新的辅助信息.在更新结点标签时,文献[24]发现同步更新需要更多的迭代次数,但是输出结果更加稳定,这是由于异步更新在分别选择t与t-1时刻邻居结点时的随机性引起的.本文通过实验发现采用同步更新策略能取得更加准确和稳定的结果.3.4过滤矩阵和标准化当分析的数据剧增时,如何缓解内存的压力是十分重要的问题,于是引入一个阈值=1/k,其中k为结点归属的最大社区数.将标签分布矩阵犘中概率值小于阈值的标签概率设置为0.如果结点拥有的标签概率都小于阈值,则计算结点与社区的相似性,选择具有最大相似值的社区作为该结点的标签,最后标准化分布矩阵犘,即犘中每行的概率和为1.算法2.过滤矩阵和标准化步骤.输入:网络G(V,E),结点归属的最大社区数k,Si,C输出:标准化的分布矩阵犘---对每一个属于V的结点i1.FOREACHi∈V---过滤犘i中概率小于的标签2.FOREACHj∈[1,k]∧j∈Z3.IF犘i(lj)<4.SET犘i(lj)=0;5.ENDIF6.ENDFOR---如果犘i的标签都被过滤,就选择与结点i相似性最大的标签;否则,标准化分布犘i7.IF∑8.label(i)=argmax9.SET犘i={(label(i),1)};10.ELSE11.犘i=犘i∑12.ENDIF13.ENDFOR3.5迭代停止条件算法的主要部分是迭代执行标签传播过程,因此合理的选择迭代停止条件十分重要.初始时,标签分布矩阵犘的标签数量等于结点总数,并随着迭代过程而减少,最终得到最小值.定义it为第t次迭代犘的标签数量,也表示当前网络的社区数.当it=it-1时,算法停止,可能导致输出结果不准确,虽然此刻标签数量不变,但是很有可能在几次迭代后再次降低.因此,终止条件除了满足it=it-1,还需要观察结点拥有标签的变化情况.第t次迭代时,假设网络中拥有标签c的结点总数为i,那么拥有c的结点数量i在迭代过程中经常变化,于是本文观测拥有标签c的最小结点数的变化情况,当it=it-1时ctmin={(c,i):pq((c,p)∈ct-1∧(c,q)∈ct∧否则,ct迭代.Page63.6后处理算法结束后根据标签分布矩阵犘,将具有相同标签的结点划分为同一社区.然而得出的结果中可能存在某社区的子集或者非严格意义的子集(拥有几乎相同的结点),因此需要删除掉这些重复的子集,这样就得出本文所挖掘的网络重叠社区结构,犘中拥有多标签的结点即为社区重叠结点.3.7LPPB算法这里给出LPPB算法的伪代码,如算法3所示.算法3.LPPB算法描述.输入:网络G(V,E),n是结点总数,参数k是结点归属输出:重叠社区Cov1.初始化,为每个结点赋予一个独立的标签,并生成2.计算所有结点的影响力值(Inf),由高到低排序作3.t=1;4.根据顺序U更新每个结点的标签分布向量,任一结5.删除犘中小于阈值=1/k的标签信息,如果结点i6.判断是否满足设定的迭代停止条件7.算法执行结束后,将拥有相同标签的结点划分为同3.8算法复杂度分析假定网络有n个结点和m条边,k是结点归属的最大社区数,以m/n表示结点的平均邻居数.(1)初始化标签分布矩阵需要O(kn).(2)计算结点的影响力O(nlogn).(3)计算结点相似性需要O(k2n).(4)与COPRA算法一致,整个传播过程需要O(kmlog(kn/m)).(5)过滤矩阵和标准化需要O(kn).(6)最后划分社区需要O(k(m+n)).由于k一般取值较小,因此算法总的时间复杂度为O(nlogn),在真实网络中实验发现该算法能够快速地收敛.LPPB完善了社会网络的传播特性,综合考虑了复杂网络的结构、结点的属性特征和历史标签记录对标签传播过程的影响,使得划分的社区结果更加准确和稳定.4实验分析4.1实验数据集和评估方法我们选取ZacharyKarateClub[25]数据集作为基准数据集,并将本算法得出的结果与标准结果进行比较,验证算法的准确性;另外选取真实的C-DBLP合著数据(来源于WAMDM实验室)来测试LPPB算法生成社区的质量和稳定性,该数据集带有时间维度,包含学者合著的时间,可用于动态分析社区重叠结构的变化和对社区演化的作用.由于大部分的真实网络没有标准的结果作为对比,本实验采用改进的模块度QovOverlap和F值作为分析指标来观测算法输出结果.给定无向网络G(V,E),C表示划分得到的社区数,m是结点个数.(1)改进的模块度Qov.Qov取决于每个结点归属于各社区的概率和各社区成员的数量.其中,rijc表示结点i和j同属于社区c的概率,rijc=(pi,c,pj,c),其中pi,c表示结点i属于社区c的概率,(pi,c,pj,c)可表示为(pi,c,pj,c)=对函数f的定义,采用文献[26]的定义,令f(x)=60x-30.wijc表示结点i在社区c里或者结点j在社区c里的概率,表示如下:wijc=(2)社区重叠度Overlap.社区重叠结点的个数决定了社区重叠度Overlap的值,是网络耦合度的具体体现,计算公式如下:其中|c|表示社区c的结点个数,m为网络结点总数.(3)综合指标F值.一般情况下,重叠度较高的网络其模块度相对较低,两者呈负相关性,为了输出更加合适的社区结果,定义F值作为综合评估指标:Page7F值越大,表明算法输出结果越好.4.2参数犽的选择结点归属的最大社区数k作为LPPB算法的唯一参数,直接影响了算法输出的结果质量.本文以综合指标F为效益函数,采用迭代局部搜索[27]的思想,在k取1~|C|范围内寻找最优效益函数值,这里C是网络中全部标签的集合,|C|表示标签总数.算法4.参数选择算法.输入:参数k及对应的效益函数值F(k)输出:k=argmaxF(k)1.初始化:随机生成初始解k02.进行局部搜索:k=LocalSearch(k0)---LocalSearch采用爬山法3.WHILE(未达到CPU预定运行时刻)4.对k进行随机扰动:5.进行局部搜索:6.IFF(kl)>F(k)THEN7.k=kl8.ENDIF9.ENDWHILE4.3基准数据集实验ZacharyKarateClub包含34个成员,78条关系,后来由于管理的分歧,该俱乐部主要分为2个社区,但是有一些成员处于重叠状态,如图6中浅灰色结点.由于结点33、34和1、2、3分别作为两个社区的核心人物,尽管与其他社区重叠,但是根据本文提出的网络传播特性,这些核心人物属于其他社区的概率较低,不应该作为重叠结点被探测.由于无法获取基准数据集实验中空手道网络的结点属性,因此本实验只能计算结点间的结构属性相似性,即取决于结点间的共同邻居数.LPPB算法在该数据集上运行100次取平均值,在取相同的参数情况下与COPRA算法进行对比,实验得出的社区数稳定,能够探测准确的重叠点,且迭代次数明显减少,如表1所示.与传统的COPRA不同,LPPB算法能探测出部分重叠结点如14、28等,这些结点都与两个派系的核心结点相连,根据网络传播特性的影响,易接受高影响力结点的标签.如果仅仅通过邻域结构计算标签传播会把这些结点只归为一个派系,因此本算法可以得出质量更高的社区划分结果.方法COPRALPPB为了验证算法能够降低随机性造成模块度较低的影响,本实验没有选取最好的模块度进行比较,而是通过对比两种算法在不同数据集的模块度平均值Avg,如表2所示,LPPB算法方差较小,具有较好的稳定性,且显著提高了社区划分的质量.数据集Karate[25]Dolphins[28]Blogs[29]PGP[30]4.4C-DBLP数据集实验本节实验采用C-DBLP《计算机学报》、《软件学报》和《计算机研究与发展》3个领域的学者合著关系网络,时间跨度为1999~2009年,共计6908篇文章,8257个作者,19683条合著关系.本文抽取学者的合著次数、工作单位和研究方向作为结点的内在属性特征,把研究者作为网络的结点.下面本实验将以静态和动态两种方式对C-DBLP数据进行分析,静态分析针对截止到2009年的11年合著数据,包括用户影响力分布、不同规模网络的执行时间和迭代次数、模块度与重叠度的综合分析、社区分布情况等;动态分析将C-DBLP分为11个时间段,即“1999~2000,1999~2001,…,1999~2009”,通过时间序列的递增,观测社区重叠结构(重叠点)的变化趋势及对社区演化的影响.4.4.1静态分析由上述11年合著数据经过LeaderRank算法计算得出结点的影响力值作为更新顺序U,结点的影响力服从厚尾分布,如图7所示.当Inf值在0.5~29间波动时,κ的取值范围为[0.11,0.89].定义6.社区中心结点.社区中具有最高拓扑Page8势的结点即为社区中心结点,结点i的拓扑势用如下公式计算[31]:其中,n为社区结点个数,nj(vi)为结点i的第j跳邻居节点数,h是计算结点影响的跳数,σ表示结点影响的范围,文献[32]分析了网络拓扑势熵最小值存在的普遍性,那么σ值可由如下公式确定:其中H(σ)为拓扑势熵,其定义为Z(σ)作为标准化因子,定义为根据高斯函数的数学特性,对于给定的σ值,每个结点的影响范围近似为3σ/槡2跳时,单位势函数很快衰减为0,因此确定了σopt后,那么结点的影响跳数h取值为3σopt/槡2.一般情况下,在算法后期的迭代中会形成以影响力大的结点为中心的社区,本文选取影响力排名前10%~20%的结点进行观测,根据LPPB算法输出的社区结果,分别计算各社区内部结点的拓扑势,选取最高拓扑势的结点最为该社区的中心结点,发现其中有80%以上的观测结点是划分社区的中心结点,从而验证了本算法根据结点影响力值确定更新顺序的准确性.本文依据C-DBLP数据集的时间特性,按照年份累积,构建了多个不同规模的网络,如表3所示,这11个网络的规模随着时间的推移稳步增长,可以用来测试算法的运行效率.LPPB算法通过引入结点的属性特征相似性来减少算法的随机性,同时利用结点的历史标签信息指导当前的更新决策,因此算法可以快速收敛.定义LPPB表示去除结点属性信息影响的LPPB算法,可以验证在不引入结点属性信息的情况下,LPPB算法是否仍然比原始的COPRA算法更优.本实验通过综合指标F值和算法的运行效率(算法的运行时间和收敛的迭代次数)观测3种算法的性能,另外还进行了LPPB算法在模块度、重叠度和社区集中度等指标的分析.网络t1t2t3t4t5t6t7t8t9t10t11(1)综合指标F值分析分析整体的C-DBLP数据集,采用迭代局部搜索算法得出的k值使得模块度和重叠度的综合指标F值最优,当k=13时,LPPB算法的F值最高;当k=12时,LPPB算法的F值达到峰值;当k=7时,COPRA算法的F值达到最优.通过试值计算,图8给出了3种算法的综合指标F值随k值的变化趋势,结果证明与搜索算法得出的参数k值一致.从图中可以看出原始的COPRA算法随着参数k的变大,重叠度趋于稳定而模块度急剧降低,导致F值变得较小;LPPB和LPPB算法的F值波动相对平缓,显示了本文提出的网络传播特性对标签传播算法的改进效果;同时LPPB算法引入了结点的属性信息来影响标签传播的概率,输出效果较优于LPPB算法.Page9表4全面对比3个算法在C-DBLP数据集上运行的最优结果:LPPB算法的平均模块度和重叠度相较于COPRA和LPPB都有所提高;LPPB和LPPB的方差大大降低,说明了算法输出的结果更加稳定;对于综合指标F值,LPPB算法在COPRA的基础上提高了2.99%;LPPB算法收敛的迭代次数和每次迭代的运行时间都比COPRA算法减少10%以上.指标COPRAk=7LPPBk=12LPPBk=13分析(2)算法的运行效率分析分别在表3给定C-DBLP的不同规模网络上进行实验,然后计算3个算法的运行时间和迭代次数在参数k取最优时运行100次的均值,如图9和图10所示的实验结果,显示了LPPB算法比LPPB和COPRA更有效.通过比较LPPB和LPPB两个算法的效果,验证了引入结点的属性特征相似性可以减少算法的随机性,降低了算法执行时间和迭代次数,在数据量增大的情况下依旧能够快速得出结果.本节实验还分析了LPPB算法在LFR[33]网络上的运行效率,网络的平均度为10,边数从10000~200000不断递增,其他参数为默认值.如图11所示,运行结果验证了LPPB算法拥有接近线性的时间复杂度,能够较好地处理大型社会网络数据.(3)其他指标的分析图12给出了算法的参数k对社区模块度Qov(左侧纵坐标)和社区重叠度Overlap(右侧纵坐标)的影响,输出结果在k较小时模块度较高,但此时网络的重叠度较低,只有小部分重叠结点被探测;当k值增大时,大部分的重叠结点被探测,重叠度渐渐的趋于某个极大值;当k大于40,由于社区间重叠的部分较多,即算法输出的社区存在较多的子集和近似子集,删除这些子集,导致模块度和重叠度急剧降低.定义7.社区集中度.社区的分布情况是社区质量的重要衡量标准之一,用HIM表示社区的集Page10中度情况.N是社区的个数,V是网络的结点总数,Vi表示第i个社区包含的结点数.HIM值越大,表示划分的社区较集中,即容易出现超大型社区.从图13中可以看出LPPB算法通过改进基于邻域结构的标签传播方式,使得社区划分的结果更加稳定、社区均匀分布,而COPRA算法在k值较大时,社区质量严重降低,此时出现较大社区,不利于检测出重叠结点.另外,非单体社区是指结点总数大于1的社区,本实验将非单体社区数随参数k变化的波动性作为社区质量的衡量指标.图14给出了LPPB算法和COPRA算法在k变化时非单体社区数的对比分析:当k取2~4时,此时网络的重叠度较低,COPRA算法输出的非单体社区数较高;而后随着k增大,社区重叠部分增多,从而生成了部分社区的子集和近似子集,这部分子集被删除后导致非单体社区数急剧下降.LPPB算法修正了网络的传播特性,减少了社区子集生成的概率,从而降低输出结果的波动性,提高了算法的稳定性.4.4.2动态分析为更好地了解C-DBLP网络,本节实验将网络划分成11个时间片段,动态地分析LPPB算法输出的结果.(1)社区重叠结点的行为分析本节实验针对社区重叠结点的合著行为进行分析,有助于理解社区的演化过程.定义8.合著转移概率α.t-1时刻,算法得到重叠结点i归属社区c的概率为p归属的社区集合,显然∑c∈C存在合著行为,那么有1-α的概率结点i的合著者j还属于C,那么α即为合著转移概率,如图15所示.根据年份将C-DBLP数据集分成11个时刻,同表3一致,动态地分析LPPB算法在每个时刻的输出结果,计算合著转移概率α的算法如下.算法5.计算合著转移概率.输入:t-1时刻重叠结点集合ont-1及其归属社区集合输出:合著转移概率α1.sum=0;transfer=0;2.t=2;3.WHILE(t<=11)4.FOREACHi∈ont-15.FOREACHj∈lt6.IFjCt-17.transfer=transfer+1;8.ENDIF9.sum=sum+1;10.ENDFOR11.ENDFOR12.t=t+1;13.ENDWHILE14.IFsum!=015.α=transfer/sum;16.ENDIF算法5运行20次得出的结果如图16所示,算Page11法输出较为稳定,社区重叠结点的合著转移概率在均值0.325附近浮动,表明C-DBLP数据集中社区重叠结点仅以较小的概率进行合著转移,更多是融入已有的社区圈子.(2)网络的演化趋势分析本节实验计算了k分别取1~30时重叠结点占结点总数的比例,然后取该比例的平均值进行分析.如图17所示,随着网络规模的扩大,重叠结点所占比例逐渐增加,表明网络的耦合度越来越高,即网络中结点的兴趣广泛,一般的结点都参与了多个社区.很明显,实验选取的C-DBLP网络在这11年间处于高耦合度的发展趋势.从图中还可以预测在2009年附近重叠度有可能趋于某个稳定值,如果重叠结点比例不变或降低,网络则处于内聚型发展,即结点专注于某一个社区内活动.本节还分析了算法输出的平均非单体社区数随时间的变化趋势,如图18所示.平均非单体社区数呈近似线性增长趋势,表示随着网络规模的扩大,非单体社区数稳步增长,因此我们得出:在C-DBLP网络不断发展的过程中,社区的融合和分裂处于某种平衡状态.5总结和展望本文提出的基于标签传播概率的重叠社区发现算法,依据结点的影响力大小进行更新,综合网络的结构传播特性、结点的属性相似性和历史标签信息共同影响标签的传播过程,实验验证了本算法大大减少了运行时间和迭代次数,同时也保证了社区划分的准确性和稳定性,提高了社区划分结果的质量.然而由实验结果可知,模块度与重叠度并不是正相关的,过分追求高模块度可能无法准确地探测出重叠结点;反之,追求高重叠度,而使得社区的模块度并不理想.因此,文中给出两者的综合指标F值来选择算法最优的结果.实验分析了社区重叠结点的行为特性,揭示了C-DBLP数据集中社区重叠结点仅以较小的概率进行合著转移,更多是融入已有的社区圈子;另外,还动态分析了社区的重叠结构,发现C-DBLP网络在1999~2009年间处于高“耦合度”的发展趋势,同时也预测了网络在2009年后可能会进入“内聚型”发展模式;此外,重叠结构对社区演化具有关键的作用,该作用会导致社区发生融合或者分裂,我们将在后续的工作中进行详细研究.
