Page1移动对等网络中的感知蚁群路由算法曲大鹏1),2)王兴伟2)黄敏2)1)(辽宁大学信息学院沈阳110036)2)(东北大学信息科学与工程学院沈阳110819)摘要针对移动对等网络的实际需要,文中提出了一种感知蚁群路由算法.该算法通过感知节点能量、链路质量和链路生存性等网络状况,可以有效地均衡网络能量,提高分组投递率.该算法在路由发现阶段采用基于信息素的选播机制,既保证及时找到有效路径,又避免传统广播机制浪费能量的现象;在评价建立的路径时,既考虑了沿途节点的能量,又兼顾了链路质量和链路生存性;在数据路由时,结合了概率型路由的自动均衡和确定型路由的快速收敛.模拟实验结果表明了它的有效性.关键词感知机制;蚁群路由算法;节点能量;链路质量;链路生存性;移动互联网1引言的成功.随着移动通信技术的快速发展,各种移动终端不断涌现,相应的处理能力也越来越强,对等计算逐渐扩展到移动领域,成为一种新型的应用网络———近年来,对等计算模式在有线网络上取得了巨大移动对等网络[1].移动对等网络部署方便,自组织性Page2强,具有很强的应用性,为对等模式带来了新的发展空间[2].移动对等网络通常是在移动自组织环境下运行对等计算,是为了特定的用户应用如灾难救援等而临时构建起来的网络系统.路由是计算机网络研究中的一个重要问题,路由算法应该遵循网络特性设计.因此,如何针对其特性设计有效的路由算法是移动对等网络所面临的重要问题.近年来,研究者们提出了很多基于网络信息感知的路由算法[3].感知的网络信息可以分为节点相关信息和网络层面信息两大类.其中,前者包括节点能量、节点位置等信息,后者包括链路质量、链路生存时间、流量负载、拓扑变化等信息.一种感知信息(即一个感知目标)可能对应多个不同的感知参数.例如链路质量可以通过4个不同的参数进行描述:接收信号强度指标(ReceivedSignalStrengthIndication,RSSI)、信干噪比(Signal-to-Interference-plus-NoiseRatio,SINR)、包投递率(PacketDeliveryRatio,PDR)和比特错误率(BitErrorRate,BER)[4],每个参数都有自己的特点.即使是感知同样的参数,选择的度量标准也可以不同,如Singh等人[5]提出了五种不同的关于网络能耗的度量标准.值得注意的是,感知包含两层含义:感知信息和相应处理.对相同的感知信息可能有多种处理机制.同时,每种感知目标之间不是相互独立的,一个路由算法可以同时基于多个感知参数.能量是节点最重要的资源.目前很多路由算法通过感知节点的可用能量,尽量减少节点间的能量差别,从而均衡节点能量分布,延长网络生存时间.例如,Hussein等人[6]提出的ARAMA根据路由请求包感知到的节点能量信息,对相应的路径进行评价,进而更新中间节点到目标节点的路由信息,以均衡节点的能量资源.Jhong等人[7]提出的CAARMA在ARAMA的基础上,根据感知到的信号强度判断邻居节点是否将移出通信范围,以提前选择好备用路径,从而减少丢包现象.直观上,路径质量是最佳的选路标准.例如,Tran等人[8]提出的CRP通过定期检测链路层缓冲区的使用率判断节点的拥塞状况,并将其分为三种等级,在判断主路径拥塞后,及时建立一条到主路径下游第一个非拥塞节点的旁路以降低延迟,将流量按概率分布在主路径和旁路上以缓解拥塞.Zheng等人[9]提出的CALRA的节点通过感知MAC(MediumAccessControl)层接口队列缓存的利用率和计算自身平均分组传输延迟与路径中节点的平均估计延迟的比例来判断链路负载状态,并根据网络中拥塞状况引入奖惩制度,以平衡网络负载.Couto等人[10]提出的ETX通过在链路上正确传输(包括重传)一个数据包需要的传输次数来计算链路质量.网络拓扑对于路由性能具有重要影响.有些路由算法通过感知位置信息使节点对于网络拓扑有更清晰的了解,从而选择更合适的路径.例如,Karp等人[11]提出的GPSR中的节点能感知到自己的地理位置信息并被统一编址,从而能够利用贪婪算法尽量沿直线转发数据.Wu等人[12]提出的LAODV是在AODV的基础上,通过GPS等定位技术感知自己的位置信息,同时通过HELLO分组感知邻居节点位置信息,从而以泛洪、位置信息修正的贪婪转发和局部受限泛洪相结合的方式进行路由发现.有些路由算法通过感知路径稳定性,了解网络拓扑的变化.例如,Sakhaee等人[13]提出的MUDOR-AS以节点间相对运动的关系作为稳定性参数,节点周期性地交换分组以获得节点间的多普勒频移.Xiao等人[14]提出的PGLS直接以两个节点间的距离作为链路稳定性参数,结合流言机制提出了一种基于链路稳定性的伪流言路由算法.Hu等人[15]提出的MASR以链路有效时间作为稳定性参数,通过双向评估链路有效时间,节点移动状态变化触发异步通告和基于链路稳定性维护多径路由,以保证路由的稳定性.有些路由算法通过其它参数感知网络拓扑变化.例如,Seba[16]提出的ARPM以感知到的周围邻居节点的变化率作为拓扑变化的度量参数,从而在高/低移动下分别执行反应式/主动式路由.Zhao等人[17]提出的EAGER将网络分为蜂窝状,蜂窝内的路由主动维持,蜂窝间的路由按需建立.根据消息到达率和拓扑变化率来动态调整蜂窝大小.基于以上分析,本文提出了一个新的基于感知的路由算法.该算法通过感知节点能量、链路质量和链路生存性,将三者结合起来作为选路标准,从而实现提高网络性能的目的.此外,引入蚁群优化思想,在路由发现时采用基于信息素的选播机制,既能及时找到有效路径,又能降低能耗.在路由时,结合概率型路由的自动均衡性和确定型路由的快速收敛性.2网络模型和问题描述2.1网络模型网络模型基本遵循文献[18]中的设置:节点运Page3动遵循RandomWaypoint移动模型[19];此外,初始能量异构,在能量耗尽时自动退出网络;节点不能获得位置信息;节点遵循Two-RayGround传播模型.为方便分析,我们设定了几个网络参数:d表示网络直径(以跳数为单位),mi表示节点i的邻接点数,Ni表示节点i的邻接点集合,N表示网络中节点数.2.2问题描述为提高移动对等网络的性能,一个有效的路由算法应该同时具有以下几个特点:(1)尽量避免使用广播机制,虽然广播机制实现简单,在任何情况下都能够保证找到目标节点,但往往涉及了很多不相关的节点,造成能量的浪费;(2)均衡网络中节点的能量分布,避免出现部分节点能量消耗过快,从而造成空洞,网络分离;(3)避开网络中的拥塞区域,均衡流量;(4)对网络中链路的质量和生存性能进行评价.链路质量能反映网络的当前状态,链路生存性能反映网络的变化趋势.在目前对移动对等网络中路由算法的研究中,已有工作并不能同时满足以上几点要求.例如,ARAMA的路由请求包是根据路径质量单播概率前进,虽然避免了广播,但很难保证及时找到目标节点,同时对网络拥塞和链路质量考虑不够;CALRA只考虑了网络中的拥塞情况,但没考虑节点的能量.基本上很多早期的路由算法都忽略了节点能量这一重要限制因素,而考虑了节点能量的算法大多未考虑到路由开销和节点的移动性[20],更重要的是,它们基本上都假设节点能量同构,虽然这并不符合网络实际情况.3算法设计由于具有自组织、鲁棒性等特点,蚁群优化思想非常适合于设计自适应的路由算法[21],即通过蚂蚁在网络中的移动,在经过的路径上留下信息素,同时根据已有的信息素和某些启发式信息做路由决策.路由算法可分为四个部分:路由发现、路由维持、数据包发送和信息素蒸发.3.1路由发现路由发现的任务是发现从源节点到目标节点的有效路径.为了更好地节约能量,采用按需路由的方式,即只在节点需要通信时才建立起有效路径[22].当源节点有数据包需要发送时,首先判断自己是否有到目标节点的有效路由,如果有,则直接发送数据包,否则生成前向蚂蚁(forwardant,fant),前向蚂蚁相当于传统路由算法中的路由请求包,在网络中根据信息素和启发式信息寻路,同时收集网络信息,在到达目标节点后,目标节点根据其收集的信息评价相应路径,并生成相应的后向蚂蚁(backwardant,bant),后向蚂蚁返回源节点并更新沿途节点的信息素,在收到后向蚂蚁后,源节点即建立起一条或几条到目标节点的有效路由.传统按需路由协议都是借助于广播机制实现的.广播机制可以保证在任何情况下都能够尽快找到有效路径,但易造成能量的浪费,因此很多改进协议都放弃使用广播机制,如ARAMA使用单播机制,SARA[23](SimpleAntRoutingAlgorithm)使用受控的邻居广播机制,每次只有一个邻接点转发路由请求包.本文使用基于信息素的选播机制:式(1)表示中间节点i选择邻接点j作为目标节点为d的前向蚂蚁的下一跳节点的概率.每个中间节点在收到前向蚂蚁后,首先判断自己是否有到目标节点的信息素,如果有,说明两个节点之间可能存在一条有效路径,因此转发,否则,根据自己到周围邻接点的本地启发式信息概率转发.其中,τd示节点i的信息素表中从邻接点j到目标节点d的路径对应的信息素值;qi,j表示连接节点i和邻接点j的链路上的队列长度(等待发送的比特数).路由算法的核心是选路机制.对于路径的评价主要集中在两个方面:路径质量和路径生存性.路径质量是指路径的优劣,主要是指路径对于数据包的投递率.如ARAMA根据前向蚂蚁收集的沿途节点的跳数和能量等信息评价路径质量;文献[24]综合带宽、投递率和节点负载等多项指标共同判定路径质量.路径生存性是指路径在未来生存周期内依然有效的概率,生存周期长的路径在数据传输过程中具有较高的稳定性,可以减小节点移动等对路由过程的影响.如NSR[25]根据邻接点间的历史信息,判断邻接点变化最小的节点具有较好的稳定性.对于拓扑动态变化的移动对等网络来说,评价路径应该既考虑链路质量,又考虑链路生存性.同时,还要注意评价方式不能过于复杂.当然也不能忘记节点能量受限的问题.Page4前向蚂蚁在前进的过程中,收集沿途节点的信息,以反映相应路径的质量.好的路由质量评价参数除了包括路径自身情况,还应该包括沿途节点的能量情况和预测链路未来的情况,如是否将发生拥塞,链路预期的生命周期.为了尽量减小前向蚂蚁的大小,我们应用归一化形式表示:μf,i=式(2)表示节点i的路由信息,其中的w1、w2、w3表示节点剩余能量、链路质量和链路生存性三者各自相应的权重值,w1+w2+w3=1.式(3)表示节点剩余能量与周围节点平均剩余能量的比值.很多算法使用节点能量利用率(remai-ning_energy/initial_energy)作为节点能量度量,但这只适用于节点能量同构的情况.由于移动对等网络使用HELLO机制保证连通性,因此,将当前能量信息加入定期发送的HELLO包,节点i即可获得周围mi个节点的平均剩余能量Ea,i=∑j∈Ni该比值符合半梯形分布,如图1所示.,图1节点剩余能量与周围节点平均剩余能量比值式(4)表示链路质量,文献[4]通过实验证明PDR是最常用同时也是准确度最高的链路质量度量,可以通过HELLO机制实现.式(5)表示链路生存性预测.由于移动对等网络中的节点动态变化,因此通常节点间的链路质量变化符合正态分布,如图2所示,在节点之间的距离最小时,链路质量达到最优.根据Two-RayGround传播模型,我们知道Pr=Pt×Gt×Gr的信号功率,Pt表示发送节点的信号功率,Gt表示发送节点的天线增益,Gr表示接收节点的天线增益,ht表示发送节点的天线高度,hr表示接收节点的天线高度,D表示发送节点和接收节点之间的距离.Gt,Gr,ht和hr是常数,在Pt不变的情况下,Pr和D成反比,通过中间节点收到的信号强度变化趋势来预测节点距离,从而判断链路生存性.其中,Pr,new表示节点收到的信号能量,λ表示平滑参数.因此,随着两个节点之间的距离下降,对应链路生存性增长,反之,链路生存性下降.后就是整条路径的信息,如下式所示:前向蚂蚁将获得的每段链路的归一化信息相乘跳数信息.由于Ii∈[0,1],所以Ipath∈[0,1],并且暗含了目标节点在收到前向蚂蚁后,可以根据其收集的路径信息进行评价,然后生成对应的后向蚂蚁,灭亡前向蚂蚁,后向蚂蚁沿前向蚂蚁的路径返回源节点,并沿途更新中间节点到下游各节点的信息素:式(8)表示中间节点i在收到来自上一跳节点j的后向蚂蚁后,更新自己通过邻接点j到目标节点d的信息素值.其中,g(p)=Ipath×Δτ表示强化的增量值,Δτ是一个常量,用于提高信息素增量的绝对值.g(p)与对应链路的评价信息成正比,评价越高的链路得到的信息素增量越高,越能够吸引后面的信息包.点都反向更新自己到上游节点的信息素值:τsi,k+g(p).τs3.2路由维持路由维持包括路由刷新和路由失效处理两部分.路由刷新是指确认和保持当前正在使用的路由为了提高性能,无论是否转发前向蚂蚁,中间节Page5有效的方法,主要有使用控制包、数据包和基于路由生命期限的自动更新三种方法.为了降低开销,我们使用数据包刷新路由的方法,即每成功发送一个数据包,沿途节点自动更新相应信息素:其中,τ表示自动更新的信息素值.路由失效处理是指因为节点移动等因素导致链路失效,路由协议需要进行修复以保证数据包正确投递的方法.主要包括局部修复和源节点修复两种,前者是由检测到路由失效的节点创建到目标节点的新i,j=pd式(10)表示节点i选择邻接点j作为目标节点为d的数据包的下一跳节点的概率,我们使用概率型路由和确定型路由相结合的方式.当生成的随机数大于阈值,则使用确定型方式,即选择最好的路径进行转发,充分利用寻路得到的结果;否则在多个有效的下一跳节点间根据信息素和启发式信息概率选择,发挥蚁群算法自动均衡流量的天然优势.其中,ηi,j表示节点i到邻接点j的链路的本地启发式信息,用该段链路的缓存队列的拥塞程度表示:启发式信息ηi,j是qi,j在[0,1]上的规格化函数.random_num是自动生成的一个随机小数,在[0,1]之间;β1是中间节点判断自己如何选路的阈值.数据包通过结合长期学习过程和瞬时启发式信息,作出路由决策.Ndi,allowed表示节点i的所有能到目标节点d的符合要求的下一跳节点的集合;α和β分别表示信息素值和启发式信息的相应权重.3.4信息素蒸发蚁群路由算法还有一个特殊的机制:信息素蒸发.由于信息素的蒸发是个体行为,不需要节点间的通信.因此,本文采取定期执行蒸发机制的方法.其中,ρ是蒸发系数.4算法分析引理1.路由发现过程既能保证及时发现有路由,以替代失效路由;后者是检测到路由失效的节点生成路由错误包反向传给源节点,由源节点重新寻路.在路由失效处理方面,蚁群算法具有天然的优势,即同时维持多条路径,因此,如果节点发现路由失效,自动寻找到目标节点的其它路径,如果存在,则直接使用;否则执行局部修复,以尽快建立有效路由,局部修复的过程类似于路由发现.3.3数据包发送的方法.数据发送是指基于获得的路由信息发送数据包i,j)α×(ηi,j)β=maxi,j)α×(ηi,j)β≠max效路由,又能降低开销.路由发现是通过前向蚂蚁根据信息素和启发式信息实现的,具体可以分为四种情况:无信息、信息素、启发式信息和信息素+启发式信息.网络刚建立时,没有任何信息,既没有信息素,也没有任何启发式信息,那么前向蚂蚁执行广播机制,等同于AODV;随着网络运行,某个节点想向一个新节点发送数据包,此时可能没有信息素,只有启发式信息,那么中间节点根据启发式信息概率转发,文献[26]证明只要转发概率在0.6~0.8之间,即可保证几乎所有网络情况下,所有节点都能收到前向蚂蚁,且较之广播机制节约近35%的消息.中间节点i对所有邻接点的平均转发概率为由于eqi,mi=∑mi缓冲区中存放包的总数.则l=1Page60.7788.当mi=2,3,4时,Ei分别为0.6065,0.7168和另外,Gossip是对所有邻接点计算转发概率,而本算法是对每个邻接点计算转发概率,因此在初始时转发完全失效的概率是∏Ni的1-pfor,无需执行前k跳广播的改进措施;当中间节点既有信息素又有启发式信息时,由于信息素定期蒸发,因此如果得不到及时加强,节点的信息素会很快丢失,所以中间节点有信息素意味着其拥有到目标节点的有效路由的概率很高,1的转发概率可以保证这些中间节点及时向有效路径转发前向蚂蚁.引理2.路由发现过程的时间复杂度为O(N).前向蚂蚁在中间节点处将其信息存入堆栈O(1),反向更新到上游节点的信息素为O(d),进入输出链路的队列O(1).因此,一个前向蚂蚁在从源节点到目标节点的运动过程中的最坏时间复杂度是O(d2).后向蚂蚁在沿着前向蚂蚁的路径反向返回的过程中,需要在每个中间节点执行出栈操作得到下一跳节点O(1),正向更新到下游节点的信息素为O(d),进入输出链路的队列O(1),则一个后向蚂蚁在运动过程中的最坏时间复杂度是O(d2).因此,路由发现过程的时间复杂度为O(d2)=O(N).5模拟实验5.1实验设置我们使用网络模拟软件NS2设计了相关实验,验证SAARA(Self-AwareAntRoutingAlgo-rithm)的性能.网络环境参数设置见表1,该算法参数见表2.我们选择AODV和ARAMA做对比.最大传输范围节点运动速度范围节点停留时间数据分组尺寸发送耗能txPower接收耗能rxPower5.2实验结果我们设置所有节点初始能量均为30J,以测试在节点能量同构时的性能.图3(a)表示分组投递率随节点停留时间不同的变化.AODV在找到最短路径后直接使用,如果没有因为节点移动而失效,则直到路径上节点的能量被耗尽后才会重新寻路,由于未考虑能量限制,因此节点能量消耗的速度差距严重影响其性能;ARAMA虽然在选择路径时考虑了沿途节点的能量利用率情况,但其使用单播机制进行寻路,因此只在静态环境下性能略好于AODV,在动态环境下性能略差;SAARA不仅考虑了节点能量,而且考虑了链路质量和链路生存性,因此,性能最好.图3(b)表示平均路由开销随节点停留时间Page7不同的变化.因为节点能量消耗的严重不平衡,AODV的开销远大于ARAMA和SAARA.值得注意的一点是由于能量受限,因此在静态环境下的性能反而可能低于动态环境下的性能,因为动态环境客观上均衡了能量分布.我们设置节点初始能量为30J~50J中的均匀分布,以测试节点能量异构时的性能.图4(a)表示分组投递率随节点停留时间不同的变化.图4(b)表示平均路由开销随节点停留时间不同的变化.由于ARAMA是为能量同构的环境而设计的,所以其与AODV之间的性能差别更大,SAARA感知节点能量的方式使其能够适应异构情况.图5为动态环境下,节点(同构/异构)能量标准差在网络运行过程中的变化情况.可以看出,由于考虑了节点能量信息,ARAMA和SAARA都优于AODV.在图5(a)中,节点的初始能量都为30J,所以能量差别因素影响较小,主要考虑路径跳数等质量信息,能量标准差快速增长,但到一定程度后,能量因素影响增长.其中,AODV的能量标准差陡然下降是因为某些在最短路径上的节点能量可能被快速耗尽,被迫选择其它路径.在图5(b)中,节点的初始能量在30J~50J之间,随着网络的运行,SAARA的节点能量标准差一直呈下降趋势;而ARAMA是针对同构情况的,选择的只是剩余能量比例较高的节点,不一定是剩余能量绝对值较高的.6总结本文针对移动对等网络,提出一种感知蚁群路由算法,主要贡献是通过蚁群优化思想实现流量均衡,避免拥塞;通过感知节点能量,均衡能量分布,避免部分节点消耗过快;通过感知链路质量和生存性,对建立起来的路径进行更准确的评价,从而选择更好更稳定的路径.在以后的工作中,我们可以通过感知用户行为和节点内容等信息进一步提高性能.致谢审稿专家和编辑老师对本文提出了宝贵的修改意见和建议,作者在此表示衷心的感谢!Page8
