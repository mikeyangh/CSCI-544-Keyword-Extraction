Page1针对SSH匿名流量的网站指纹攻击方法顾晓丹1)杨明1)罗军舟1)蒋平2)1)(东南大学计算机科学与工程学院南京211189)2)(南京市公安局南京210005)摘要目前在Internet上广泛部署的SSH单代理匿名通信系统利用其动态端口转发功能,在用户和代理之间构建加密隧道,通过对数据进行加密封装和转发,隐藏用户所访问站点的真实地址.为了实现对匿名Web访问的监管,现有工作基于流量分析技术提出了多种针对网站主页的指纹攻击方法,但在如何对目标网站建模、如何选择区分度高的流量特征以提高攻击准确率等问题上仍需进一步的研究.针对这些问题,深入分析SSH匿名流量的特征,提出一种新型的网站指纹攻击方法.该方法基于上下行流量的不同特性,分别抽取不同的区分度高的特征形成上下行指纹,并采取相应的匹配算法进行指纹比对.在此基础上,根据用户访问关联Web页面的行为模式,对所监管的目标网站建立隐马尔科夫模型,将目前只针对网站主页的识别扩展到了多级页面.通过使用公开数据集和在Internet环境中部署实验进行验证,该攻击方法获得了96.8%的准确率,可以有效地识别被监管者所访问的网站.关键词匿名通信;流量分析;网站指纹攻击;隐马尔科夫模型1引言随着Internet的飞速发展,人类已逐步进入了信息社会.其中,日新月异的Web技术正不断地变革着人们的生活和工作方式.作为现今通信与信息传播的主要途径之一,Web技术承载了电子商务、网上银行、网络营销、网络医疗咨询等各种在线服务,用户只需要通过浏览器就能获取所需的服务.然而,这些服务都会存在一定程度的隐私信息交互的情况,使得用户在需求得到满足的同时,对自身信息隐私性的担忧也愈加强烈.成熟的加密技术的使用虽然保障了用户传输的信息本身的安全性,但这并不意味着用户的隐私得到了充分的保护,攻击者仍可根据通信对端的身份等未被隐藏的信息对用户的隐私进行推理分析.匿名通信技术的产生与兴起在很大程度上缓解了这种使用障碍.相比于Tor[1]等多跳匿名通信系统复杂的部署和较差的用户体验,作为单跳的匿名通信系统,SSH(SecureShell)加密代理得到了更为广泛的部署和使用.SSH在用户和代理服务器之间构建加密隧道,通过该隧道的数据包均被加密封装,因此攻击者无法查看用户的通信内容和其真正的目的地址,从而保证了用户的隐私信息不被泄露.虽然匿名通信技术的初衷是为用户提供隐私保护服务使其个人信息不被泄露,但也可能会被网络犯罪者利用,掩盖其从事的恶意犯罪活动,如匿名的恐怖活动、传播儿童色情信息、发布反社会言论、散布谣言以及敲诈勒索等,造成匿名滥用.由于其通信内容和通信关系皆被隐藏,使得普通的包检测技术失效,很大程度上阻碍了执法者对其网络行为的监控与审查,这对打击网络犯罪和网络监管提出了严峻的挑战.针对现实存在的匿名滥用问题,研究者提出了多种匿名通信追踪技术,例如使用流水印攻击技术[2-4],通过在目标流量中主动嵌入流水印,然后在嫌疑的目的端进行检测确认两者的通信关系.然而此类方法要求攻击实施者能够同时监控嫌疑的通信两端的网络,攻击成本高,而且攻击效率受网络延迟、抖动等影响较大.不同于上述主动的攻击技术,网站指纹攻击方法[5-7]采用被动的流量分析技术,攻击者只需配置与被监管者相类似的网络环境,并使用相同的加密代理技术访问每个目标站点,通过分析、提取和比对所产生的通信流量的特征来识别被监管者通信对端的真实地址.现有工作[8-13]已经证明了网站指纹攻击方法的可行性,但在如何选择合理的区分度高的流量特征以提高攻击准确率等方面依然有待进一步的研究.此外,这些研究工作仅仅关注针对目标网站主页的指纹攻击,忽视了用户在浏览主页后往往会对其关联链接的页面进行访问的行为模式,存在一定的局限性.本论文针对上述问题,提出了一种新型的网站指纹攻击方法.主要的研究成果包括:(1)在对SSH封装的HTTP流量深入分析的基础上,根据上下行流量特征的区别,提出了抽取不同的区分度高的特征分别形成上下行指纹的方法;(2)根据所提取的上下行指纹的不同特性,分别采用最长公共子串算法和朴素贝叶斯分类器,进行单个页面指纹的相似度匹配;(3)根据目标网站的拓扑结构,建立对应的隐马尔科夫模型(HiddenMarkovModel,HMM),将现有的只针对网站主页的指纹攻击扩展到多级页面,从而识别整个站点.通过大规模的实验验证,该攻击方法获得了96.8%的检测率,证明了所抽取指纹特征的高区分性以及攻击方法的高效性.本文第2节简要介绍目前网站指纹攻击方面的相关工作;第3节基于SSH代理的工作原理,描述所采用的攻击模型;第4节深入分析HTTP和SSH协议,详细阐述所提出的网站指纹攻击方法,将单页面的指纹攻击扩展到多级页面;第5节通过大规模的实验证明所抽取指纹特征的高区分性以及该攻击方法的高效性;最后一节总结全文并指出下一步的工作.2相关工作网站指纹攻击是伴随着匿名技术的产生而出现的.当加密技术最初被引入蓬勃发展的Web应用时,在实际网络环境下部署和使用的是HTTP/1.0协议.该版本协议规定对于每个被请求的对象(object)Page3都会建立一条新的TCP连接,且一旦该对象传输完成,就会关闭对应的TCP连接.由于此时的匿名技术研究还处在起步阶段,主要是通过简单的SSL加密来提供隐私保护服务.该技术只是单纯地加密TCP通信内容,并不会改变所传输流量的特征.利用这一缺陷,研究者在进行匿名Web流量的特征选取时,主要采用了每个站点主页中对象的个数和长度作为原始特征.Hintz[5]针对加密代理SafeWeb存在的安全隐患,首次阐述了网站指纹攻击的概念,并在理论上分析和证明了该方法的可行性及有效性.Sun等人[6]同样也发现了此类SSL代理存在的漏洞,在S&P2002会议上提出了网站指纹攻击方法,并阐述了其进行的大样本量的实验:针对每个目标页面所产生的TCP连接计算其个数和响应报文的长度总和,从而获得页面对象的数量及大小,形成指纹建立特征库;随后使用Jaccard系数方法计算其与用户模拟访问所产生指纹的相似度,并选择相似度最高的站点作为用户Web访问的辨识结果.随着HTTP/1.1协议的推广以及匿名技术的日趋成熟,一方面浏览器在访问Web页面时采用了持久连接(PersistentConnections)和流水线(Pipe-lining)技术,另一方面多种单跳或多跳匿名通信系统例如SSH加密代理、Tor匿名网络等相继被提出.此类匿名系统会在其和用户之间建立一条加密隧道,将浏览器发起的TCP连接映射到不同的信道.上述多种技术的应用导致了攻击者无法使用之前的方法计算每个页面含有的对象数量及长度来形成指纹.经过进一步的深入研究,研究人员相继采用了一些新的流量特征和相似度对比方法.Bissias等人[7]首次提出将每次通信时产生的所有响应报文的长度和报文之间的间隔时间作为原始特征,使用交叉关联(CrossCorrelation)方法针对单个特征及联合特征分别计算指纹相似度进行身份识别,考察所选特征的可区分度.实验结果表明,报文长度特征的识别准确率远高于报文之间的间隔时间.此外,作者还指出指纹库建立和攻击实施之间的延迟时间只会轻微影响网站指纹识别的准确率.而Liberatore等人[8]吸取了之前工作的研究成果,仅采用Web访问时产生的报文长度分布这个流量特征生成指纹.在识别方面,则首次使用了机器学习领域中成熟的分类技术,即采用朴素贝叶斯分类器(NaiveBayesClassifier)进行相似度的评估.作者为了验证其攻击方法的现实可行性,针对黑名单站点列表中1000个网站进行了实验,获得了73%的准确率.同时,作者还证明了在嗅探用户访问产生的匿名流量后再进行指纹库建立的可行性,为数字取证技术发展提供了有力的实验依据.为了便于其他研究者进行研究,Liberatore等人公布了他们的数据集OpenSSH2000,并在CCS2006会议上发表了他们的研究成果.Herrmann等人[9]在此基础上进行了改进,在特征抽取方面同样选择了链路上产生的双向的报文长度分布,并采用文本挖掘中权值计算技术对特征向量进行标准化,然后再使用多项式朴素贝叶斯分类器(MultinomialNaiveBayesClassifier)进行分类.不同于Liberatore的工作只关注某个长度的数据包是否出现,Herrmann等人还考虑了该长度的数据包出现的频率.相对于大部分研究工作只关心报文长度,Lu等人[10]提出多次访问相同站点时产生的匿名流量在报文顺序上也非常的相似.他们利用报文长度和顺序作为特征,针对每个目标站点的主页形成2个报文长度序列(请求序列和响应序列),并使用编辑距离(EditDistance)计算相似度进行比对,实验结果表明该方法对于经过变形的流量仍然有效.Ling等人[11]则认为除了报文长度、顺序等特征以外,用户与Web站点之间的RTT的统计信息也可以用来推断用户所访问站点的真实地址.作者提取RTT的样本均值和样本方差作为分类特征,并使用贝叶斯分类算法进行决策.另外,他们还在理论上分析了该攻击方法可正确识别一个目标站点的概率.不同于SSH代理这类单跳的匿名系统,一些低延迟的多跳匿名通信系统,例如Tor、JAP等,会将转发的流量填充成等长信元.这种处理机制破坏了报文长度这一关键特征,导致提取的特征失效.针对这一问题,Panchenko等人[12]基于Tor等匿名系统的特性,就流量的大小、时间和方向等方面,提出了多种新的有效特征形成指纹,然后使用支持向量机(SupportVectorMachine)进行分类.实验结果表明即使在多跳的低延迟匿名通信系统下,指纹攻击方法仍然可行,并且将Tor下的攻击准确率由3%提高到55%、JAP下的准确率由20%提高到80%.而Yu等人[13]放弃了常用的包长等流量特征,关注目标用户的行为模式,第一次提出了将用户访问一个网页所花费的时间作为特征,并采用隐马尔科夫模型来对目标网站进行建模.但由于此攻击仅依赖于浏览网页所耗费时间这一动态性极强的特征,降低了该方法的鲁棒性.此外,攻击实施者还必须对用户Page4的明文流量进行建模获取其访问目标站点的时间动态性,对攻击者的能力要求较高.研究人员在提出新的网站指纹攻击方法的同时,也给出了一些他们认为有效的规避措施,例如包填充、流量变形等[14].通过大幅度地改变指纹特征,试图降低现有的依靠指纹相似度匹配的攻击方法的检测准确率.但在S&P2012会议上,Dyer等人[15]证明了这些规避措施并不能很好地抵御网站指纹攻击.他们使用现有的指纹攻击方法,针对9种包填充和流量变形的规避措施进行了大量的实验.结果表明,当目标站点列表集等于128时,仍能获得80%左右的准确率.Cai等人[16]则针对应用层的抵御措施,如HTTPOS[17]、Tor中的随机流水线技术①等,通过提取匿名流量中数据包长和顺序等特征形成指纹,获得了较好的识别结果.这就意味着即使耗费高额成本去实施大量的抵御措施,也无法高效地降低指纹攻击的准确率.上文所述的攻击方法忽视了上下行流量特性不同的事实,在特征抽取时,对于上下行流量均选择了相同的流量特征来生成指纹,降低了网站指纹攻击的准确率.本文通过对SSH封装的匿名流量的深入分析,分别从上下行数据包中提取不同的特征生成指纹.在指纹比对阶段亦基于所比对指纹的属性特征选择了合适的匹配算法.此外,现有工作仅针对目标网站的主页进行指纹匹配攻击,但真实情景是用户在访问网站时经常会连续地访问关联链接页面.根据这种访问模式,本文将引入隐马尔科夫模型,将单页面的指纹扩展到多级页面的联合指纹,可以更高效地进行网站指纹攻击.在方法有效性验证部分,为了体现结果的可比性,论文也在OpenSSH2000数据集[8]上进行了相关实验.3攻击模型由于目前SSH加密代理已被广泛地部署,其用户人数远超过Tor等多跳匿名通信系统,本文将针对SSH封装的匿名Web流量进行网站指纹攻击方法的研究.SSH协议使用身份认证和非对称加密技术,保证SSH客户端和服务器之间远程登录、数据传输和其他网络服务的安全性.SSH代理利用其协议中提出的动态端口转发功能,将其他TCP端口的报文通过SSH加密隧道进行转发.如图1所示,通过配置本地监听端口,并在具体的应用程序中将本机地址和监听端口设置为SOCKS代理,则该应用程序产生的所有数据包都会被本地监听端口转发给SSHClient,然后通过加密隧道到达SSH代理服务器.在这一过程中,转发报文的内容和目的地址均被加密封装,外部攻击者无法获知通信数据的内容,也不知道用户真正的通信目标,从而保证了用户的通信关系和通信内容的隐私安全.此后SSH代理会根据解密后数据包中的目的地址,和真正的通信目的端进行数据交互,并将接收到的数据包通过相同的加密隧道转发给用户.针对SSH代理提供的匿名保护服务,网络监管者一方面无法在有限的时间内对加密数据进行密码破译;另一方面,由于网络监管者难以具有监控全局网络信息的能力,从而也无法使用深度包检测等常用技术对被监管者的网络行为进行审和管理.鉴于监管者的监测能力受限,现有研究工作都采用了如下的攻击模型:被监管者通过SSH代理进行Web站点的访问,攻击者仅可以在被监管者和SSH代理之间嗅探并记录交互的报文(如图2所示).通过嗅探,攻击者可以获得关于报文长度、时间等方面的少量信息.网站指纹攻击方法采用被动的流量分析技术,基于流量模式匹配的思想来识别被监管者所访问的真实地址.为了提高指纹攻击方法的部署可行性①Experimentaldefenseforwebsitetrafficfingerprinting.https:fic-fingerprinting,2011Page5和工程可用性,本文采用与现有工作相同的前提假设:入环境.(1)攻击者可以配置类似于被监管者的网络接(2)攻击者拥有一个黑名单站点列表,并能使用和被监管者相同的SSH代理服务器进行站点访问,从而建立对应的指纹库.(3)攻击者掌握被监管者所使用浏览器的配置信息,并能进行相同的配置,例如使用HTTP/1.1协议、禁用cache、关闭插件等.(4)攻击者可以根据页面请求过程中的时间间隔等信息从嗅探得到的数据中提取出属于同一个页面的数据包.4针对SSH匿名流量的网站指纹攻击本节首先详细分析了经过SSH封装的HTTP流量的特性;然后,在此基础上对于上下行数据包提取不同的特征分别形成上下行指纹,并采用对应的匹配算法进行单页面的指纹比对;最后根据被监管者的Web访问模式,基于网站主页和次级页面的链图3HTTP协议各版本特点但随着HTTP/1.1的普遍应用,其支持的持久连接和流水线技术隐藏了这些特征.持久连接技术是指服务器在发出响应后仍维持该TCP连接,后续接关系,建立对应的隐马尔科夫模型,将现有的只针对主页的指纹攻击扩展到多页面,实现针对SSH匿名流量的网站指纹攻击.4.1HTTPoverSSH流量分析网站指纹攻击方法最初提出的时候,Internet上广泛部署的是HTTP/1.0协议.该版本协议采用非持久模式,每个TCP连接只能交互一个请求消息和对应的响应消息,在服务器端传送完一个对象后就会关闭该TCP连接,使之无法持续传输其他对象.这就意味着,针对载入的页面中每个待请求的对象,HTTP的客户端(浏览器)都会建立并维护一个新的TCP连接.如图3所示,当浏览器进行页面访问时,会和Web服务器建立一条TCP连接Connection1来发送Requeset1;当响应Response1发送完毕后,该连接断开.当要发送Requeset2请求时则会重新进行三次握手建立连接Connection2,以此类推进行后续的数据交互操作.通过嗅探数据可以获得一个网页的TCP连接个数及每个连接传送的数据总量,即对应了该页面的对象个数及大小.早期的网站指纹攻击技术使用这些信息作为指纹特征,识别效果十分显著.请求和响应都可以通过这个连接进行交互.如图3中,Connection1在传输完Response1后,并没有断开连接,而是继续发出了Requeset3进行后续对Page6象的请求.在流水线模式下,HTTP客户端在Html页面解析时每遇到一个对象引用就立即发出一个请求,允许连续发出多个请求.服务器端收到这些请求后,按顺序响应,即对应图中HTTP1.1(流水线)部分,Connection1发出Requeset1请求后不需要等待其响应Response1返回,可以继续发送Requeset3、Requeset5请求.而此时服务器会顺序地响应Response1、Response3和Response5.如上所述,从嗅探的加密数据包中无法获得反映页面对象个数及大小的特征.再加上使用SSH代理进行HTTP访问的时候,SSH协议规定了所有的流量都必须通过加密链路转发到同一个端口(默认为22),多TCP连接被映射到同一个SSH链路的多个信道,导致数据包嗅探无法区分每个TCP连接产生的数据包.同时,多信道的并行传输也使得数据包之间的顺序存在一定扰乱.尤其对于下行数据,因为它主要传输页面中嵌入对象的内容,相较上行HTTP请求多出了很多的数据包,使得包顺序具有很大的不稳定性,所以必须要寻找新的特征才能建立目标页面的指纹库.本文拟采用更为细粒度的特征,如访问目标页面产生的每个数据包的长度等.这些特征通用性更强,除非对数据包逐个进行特殊处理,否则是无法隐藏这些基本特征的.除了数据包包长等基本特征,SSH协议本身的特性也产生了一些可供进行指纹识别的特征.对于浏览器新发起的每个TCP连图4SSH协议报文格式4.2指纹特征的提取与比对4.2.1特征提取通过以上对SSH封装的匿名流量的分析,页面访问所产生的上下行流量存在各自的可区分特性.不同于现有工作,对于上下行流量统一提取相同的接,SSH连接协议①指出SSH会打开一个新的信道与之对应来传输数据,因此SSH信道数即为浏览器针对该页面所发起的TCP连接数.通过多次嗅探分析Firefox访问相同页面产生的匿名流量,我们发现其建立的TCP连接数和上行HTTP请求的顺序都很稳定,因此发起的TCP连接数(SSH信道数)和上行数据包的顺序也可以作为指纹特征进行使用.当SSH客户端请求打开一个新的信道时,会向SSH服务器发出一个SSH_MSG_CHANNEL_OPEN的消息.如果新的信道成功打开,服务器就会回复SSH_MSG_CHANNEL_OPEN_CONFOR-MATION消息,表示可以使用该新信道进行数据传输.SSH包格式如图4所示,SSH_MSG_CHAN-NEL_OPEN消息的包长一般被填充为96Bytes,SSH_MSG_CHANNEL_OPEN_CONFORMA-TION消息的包长则为48Bytes.通过计算流量中含有此类信道建立控制包的个数就可以得知Firefox访问该页面时建立的TCP连接数.除了上述的信道打开相关的两类控制包外,SSH客户端和服务器在进行数据转发的过程中,双方都还可能发出SSH_MSG_CHANNEL_CLOSE(32Bytes)、SSH_MSG_CHANNEL_EOF(32Bytes)、SSH_MSG_CHAN-NEL_WINDOW_ADJUST(40Bytes)等控制包,这些控制包的出现频率受网络干扰影响较大,所以可以将这些长度的数据包过滤后再进行特征抽取.特征,如包长、顺序或者频率等,本文将嗅探获得的数据包分为上行和下行两类,根据其不同的特性,分别抽取特征生成对应的上行指纹和下行指纹.①RFC4254:TheSecureShell(SSH)ConnectionProtocol.Page7(1)上行数据包在页面访问的过程中,上行数据包的大小和数量相对较小,且顺序比较稳定,可以抽取数据包的长度和顺序,SSH_MSG_CHANNEL_OPEN消息数以及所有数据包的总长度作为上行流量的特征.一条流记录的所有上行数据包可以表示为Fup={x1,x2,…,xsx,ltcp,sum(sx)}.其中xi为除SSH控制包、ACK包外的第i个非0数据包包长;ltcp为该条记录中所含有的SSH_MSG_CHANNEL_OPEN消息数,即建立TCP连接的总个数;sx为该条记录中除控制包外所有的非0上行包总个数,sum(sx)则为这些数据包的总长度.(2)下行数据包由于下行数据包数量较多,长度多为MTU值,且通过SSH封装后相对顺序紊乱,因此对于下行流量,本文只抽取其包长分布的统计信息作为特征值.可将一条记录中除控制报文以外的非0下行包表示为Fdown={fx1,fx2,…,fxMTU},其中fxi标志该条记录中包长xi是否出现:出现为1,不出现为0.4.2.2指纹比对4.2.2.1上行指纹比对在前文描述的攻击场景下,当用户使用浏览器进行Web访问时,即使在间隔时间很短的情况下多次访问相同的网页,产生的上行数据包序列也会存在一定的差异性.这种差异可认为主要是由以下几类情况造成的,如图5所示.(1)数据包的合并和分裂此类情况属于网络流量存在的普遍现象.由于机器的繁忙程度不同等原因,会导致数据包的合并和分裂.图5数据包序列差异(2)SSH对相同的数据包随机填充长度不同SSH协议中规定会对数据包进行随机长度的填充,使得封装后的数据长度必须是块加密长度或8Bytes的倍数.但在工程实现时为了较少开销,一般都会尽量减少无意义的填充数据的长度.通过手动分析报文,可以发现相同的数据包往往也被填充成一样的长度.当然,必然也会存在一些数据包随机填充的长度不一致,使得多次访问相同网页得到的数据包序列存在差异.(3)数据包乱序HTTP/1.1采用了多TCP连接和流水线机制,当浏览器发起的多个TCP连接并发地传输请求数据包时,很大可能会产生数据包乱序的现象.除此以外,SSH进行端口转发,将多个TCP连接映射到同一条连接的不同信道,也会加剧此类情况的出现.(4)数据包丢失重传由于网络繁忙等原因,通信对端没有接收到用户发出的某些请求数据包或者用户没有收到ACK报文,根据TCP的重传机制会对这些丢失的数据包进行重传.指纹比对是指通过测量未知类别的指纹和已知指纹之间的相似度来判断未知指纹最有可能的身份类别,之前的一些工作采用了Jaccard系数等相似度测量方法来进行指纹的匹配.但由于本文在抽取上行指纹时包含数据包的顺序和包长等特征,而分类器或Jaccard系数等方法都无法很好地处理这种数据包之间的顺序关系,所以并不适用于上行指纹的匹配.最长公共子串(LongestCommonSubstring)算法通过计算两个字符串x和y之间的最长不连续的公共子串,可以快速高效地对顺序序列进行相Page8似度匹配.字符串x和y的相似度Lcssim(x,y)计算如式(1)所示:其中,lcs(x,y)表示x和y的最长公共子串的长度,max(x,y)用来进行规格化.对于相同网站的两个指纹,我们发现Lu等人[10]提出的最小编辑距离和最长公共子串算法计算相似度得到的结果基本保持一致,但当包序列出现乱序情况的时候,最长公共子串算法的结果优于最小编辑距离:①对于(1)类中的数据包分裂的情况,假设属于相同类别的两个包序列x和y,其中y序列出现了一次包分裂现象,其他都保持一致,则y=x+1.x和y的编辑距离为2,即需要一次删除和一次替换操作才能使得两个序列一致,则最小编辑距离计算两者的相似度为Edsim(x,y)=1-Ed(x,y)而x和y的最长公共子串长度为x-1,相似度计算的结果为Lcssim(x,y)=x-1Edsim(x,y).②对于(1)类中的数据包合并的情况,和包分裂是类似的.③对于(2)类填充长度不同导致序列差异的情况,两种算法计算的结果一致.④对于(3)类中一个数据包相对位置改变的情况,假设属于相同类别的两个包序列x和y,其中y序列出现了一个数据包位置改变的现象,其他都保持一致,则y=x.而x和y的编辑距离为2,即需要一次删除和一次插入操作,则使用该算法获得的相似度为Edsim(x,y)=y-2子串为y-1,相似度计算结果为Lcssim(x,y)=y-1y,可得Lcssim(x,y)>Edsim(x,y).⑤对于(3)类中两个非相邻数据包互换位置的情况,编辑距离为2,即需要两次替换操作,而此时的最长公共子串长度也是原串长减去2,两种算法结果一致.⑥对于(4)类情况,编辑距离为1,最长公共子串也是原串长减1,两个算法结果相同.综上所述,考虑到使用SSH加密代理封装的数据包流量中会出现较多乱序情况,在本文中选择使用最长公共子串算法来进行上行指纹的相似度匹配,提高属于相同类别的两个指纹的匹配程度.除了比对包长和顺序这两个特征,我们还考虑了TCP连接总数和数据包总长度.上行指纹Fup(x)与已知类别为ci的指纹Fup(y)的相似度计算如式(2)所示:simci(Fup(x))=α×Lcssim(〈x1,x2,…,xsx〉,〈y1,y2,…,ysy〉)+β×ltcp(x)-ltcp(y)+γ×sum(sx)-sum(sy),β,γ<0(2)其中α、β和γ均为可调参数,表示对应特征所占的权重系数,其数值设置与实验使用的数据集相关.但必须保证β和γ均为负数,因为ltcp(x)-ltcp(y)和sum(sx)-sum(sy)的值越大,就代表两个记录中TCP连接数,数据包总长度差异越大,即两个指纹的相似度越低.4.2.2.2下行指纹比对在下行指纹比对过程中,本文主要采用朴素贝叶斯分类器来识别一个指纹所属的网站类别.朴素贝叶斯分类器[18]是目前使用最广泛的一种有监督的机器学习方法,它有坚实的数学理论基础,分类效率稳定.朴素贝叶斯假设目标对象的各属性之间相互独立,根据目标对象类别的先验概率,基于贝叶斯公式计算其后验概率,即该对象属于某一类别的概率,然后选择具有最大后验概率的类作为该对象所属类别.文献[19]中,Zhang通过证明朴素贝叶斯最优性的充要条件,指出各个属性之间的依赖性会相互抵消.因而在实际情形下,即使所比对指纹的各个属性之间并不相互独立,它仍能获得较好的分类结果.对于一个未知指纹,朴素贝叶斯分类器针对每一个待选的网站类别ci,都会使用如下公式计算该指纹身份为ci的概率:pci(Fdown)=p(ciFdown)=p(ci)p(Fdownci)其中,未知指纹Fdown对于任意的类别ci,p(Fdown)都相同,因此可以忽略.4.2.3单个页面的指纹匹配对于一个未知页面的指纹F(F=Fup∪Fdown),根据上述方法分别抽取上行和下行指纹后,考虑到候选类别总数对贝叶斯分类器分类准确率和计算复杂度的影响,先进行上行指纹的相似度比对,从结果Page9中抽取排名前R个候选类ci1…ciR(降序排列),记录下其对应相似度simci1…simciR;在下行指纹识别时,使得分类器只在ci1…ciR这R个类别中进行分类并获得对应的概率pci1…pciR,然后按照式(4)即可计算出这个未知指纹F属于这R个类别范围中cij类的概率PF(cij):PF(cij)=ξ×其中,由于上行指纹相似度需要和下行指纹进行加权相加,所以必须对上行指纹相似度值先进行归一化处理:simcij-simciksimci1-simcik因为上行指纹的稳定性强于下行指纹,建议ξ>0.5.而R值则需要根据实际数据在匹配准确率和计算复杂度之间折中选择.当R个类别的概率都计算过后,其中最大值对应的类别即为未知指纹F的最终结果.4.3多级页面联合指纹攻击当一个用户进行Web访问的时候,通常不会仅局限于网站主页的访问,还会对页面中相关链接进行次级页面的访问.不同于现有工作只针对目标网站主页进行指纹攻击,本文根据被监管者的这种行为模式,引入隐马尔科夫模型进行场景建模,将单页面的指纹扩展到多级页面的联合指纹,更高效地进行网站指纹攻击.隐马尔科夫模型[20]是一种特殊的马尔科夫模型,它的状态是隐藏的,无法直接观察获得.但是每一个隐藏状态的转移都会输出和该隐藏状态相关的可观察值,通过这些输出值可以对隐藏状态进行推测.直观地说,HMM可以分为可观察层和隐藏层,可观察层是一个输出值序列,其中每个可观察值出现的概率只和当前的隐藏状态有关;隐藏层是一个马尔科夫过程,可用状态转移概率进行描述.一个HMM可以定义为一个五元组{S,O,A,B,Π}:其中S={S1,…,SN}表示所有隐藏状态的有限集合;O={v0,v1,…,vM}表示输出的可观察值序列;πi表示某个隐藏状态Si为初始状态的概率,其集合记为Π=π1,π2,…,π{另一个状态Sj的概率记为aij(i,j>0),犃={aij}即为该HMM的状态转移概率矩阵;bi(k)表示在隐藏状态Si时出现观察值vk的输出概率,其集合记为B={bi(k)},且满足∑M被监管者进行Web访问的模式如图6所示:被监管者首先访问某目标站点的主页,然后点击主页中的某个超链接进入次级页面Page2的访问,以此类推,直至其浏览完Pagen后结束本次Web访问.在此过程中,被监管者每访问一个页面,就会产生一系列的上下行流量.由于被监管者是通过点击当前页面中所含的链接才访问下一个页面,下一个页面的访问仅取决于当前页面,满足马尔科夫链的特性.被监管者通过SSH代理匿名访问某网站页面,攻击者只能观测到访问该页面所产生的流量,无法得知页面所包含的内容.因此可将每一次页面的访问视为一个隐藏状态,所有黑名单中站点的目标页面即构成了隐藏状态集合.在对目标网站构建隐马尔科夫模型时,我们没有使用现有的前向-后向算法,通过数据集训练来获得模型的各个参数,而是基于网站指纹识别的需求,根据目标网站的拓扑结构计算并设置各个参数.假设黑名单站点列表含有N个站点,每个站点有n个目标页面,则S={S1,…,Sn,Sn+1,…,Sn×N}.被监管者未产生流量时的状态记为一个可见状态S0,其第一个访问的目标网站页面的概率为初始状态的概率.考虑到攻击者无法获得被监管者的Web访问历史记录,根据最大熵原理,假定被监管者等概率地访问每个目标网站,且每次访问都是从该网站主页开始,即每个目标网站主页作为初始状态的概率πx×n+1=1/N(x∈[0,N)),其他非主页的目标页面作为初始状态的概率为0.至于状态转移概率,则取决于两个页面之间的链接关系.当被监管者从当前页面Si通过链接跳转到下一个页面Sj时,攻击者可以观测到其产生的一系列上下行数据包,通过使用4.2节中特征抽取方法产生的指纹即为观察值vk.根据数据集中的样本记录,通过上述方法可以直接计算出所构建的HMM的各个参数,建立对应的模型.然后使用Viterbi算法[21]寻找可能性最大Page10的隐藏状态序列,即可得知被监管者访问的网站的真实身份.值得注意的是,在每一步递归计算Viterbi路径时,因为观察值vk所属的类别是不确定的,还必须根据式(4)来获得指纹匹配的相似度结果,具体计算方法如下:δj(1)=maxω∈CPv0(cω)bj(v0)πjδj(t+1)=maxω∈C,i∈Sδj(t)aijbj(v)Pvt(cω)(6)t+1(i)=argmaxω∈C,i∈Sδj(t)aijbj(v)Pvt(cω)(7)其中,C为观测到的指纹vk所有可能的候选类别集合,Pvt(cω)表示观察值vt属于类别cω的概率.通过上述对隐马尔科夫模型的修改和调整,一方面可以节省模型训练学习所需要的大量时间,另一方面也能防止因训练数据偏移导致所建模型与真实情况不符的情况的出现.5实验评估5.1数据采集为了评估指纹攻击方法的高效性,本文根据图2所示的攻击模型部署实验,在真实的Internet环境下进行数据采集.论文针对Alexa排名前200的网站,通过多次随机访问,选取了其中可稳定访问的前100个网站作为黑名单站点列表,并在Ubuntu10.10的客户端主机上使用Firefox3.6.13通过OpenSSH代理来访问目标站点.我们在Firefox中应用Pagestates扩展,通过编写脚本以达到浏览器自动访问目标站点列表的目的.当Firefox载入一个页面时,Tcpdump将被调用来记录所产生的加密数据包,并存入数据库.为了保证指纹攻击方法的工程可行性及与之前工作的可比性,我们根据第3节中提出的前提假设对Firefox浏览器进行了参数配置.在下行指纹的比对过程中,本文将修改开源工具Weka[22]中的朴素贝叶斯分类器来实现分类.考虑到多级页面建立隐马尔科夫模型的高复杂性,本文目前仅关注网站主页和次级页面的链接关系.首先对黑名单站点列表进行了扩展,对于每个网站的主页选取25个次级页面,即每个站点选取26个页面作为多级页面联合指纹攻击的目标列表,一共产生2600个链接.然后在2个月的时间内,每天访问这些目标页面2次,生成一个多级页面的数据集SSH100,包含312000条记录.此外,本文还使用了现有的公开数据集OpenSSH-2000.该数据集是由Liberatore等人选择了2000个可访问的热门网站作为目标站点列表,进行了2个月的数据采集形成的.由于该数据集仅针对目标网站的主页进行数据抓取,无法实施多级页面联合指纹攻击方法,因此本文在该数据集仅实现了单个页面的指纹攻击方法.通过和Liberatore等人的实验结果的比较,来验证所选流量特征的高区分性以及相应匹配算法的有效性.5.2实验参数设置网站指纹攻击主要包括样本数据训练和未知数据测试两个阶段,而其最重要的结果评估准则就是该攻击方法的准确率.在实验过程中所涉及的参数设置,例如每组训练样本大小ntrain、每组测试样本大小ntest、训练样本和测试样本之间的间隔时间Δt等,都会在一定程度上影响攻击方法的准确率.为了设置合适的参数值,我们在数据集SSH100上进行了小样本集的对照实验,在固定其他参数的情况下,代入待选参数的多个取值进行单个页面指纹攻击方法,然后根据所得的攻击准确率选取合适的参数.直观地,指纹识别结果的准确率会随着训练样本的增大而呈上升趋势,但同时也会造成大量的计算开销.如图7所示,对于数据集SSH100,在Δt=0.5、测试样本大小ntest=4的情况下,单个页面指纹匹配的准确率随着训练样本增加而逐步上升:当ntrain=1时,准确率仅有81.6%;当ntrain=4时,准确率上升到93.7%;当ntrain继续增大时,准确率基本趋于稳定,增幅下降.考虑到训练集增大会增加计算复杂度,以及与现有工作结果的可比性,我们在实验中将ntrain的值设为4.图8显示了在ntrain=4、ntest=4的条件下,单个页面指纹匹配的准确率随着间隔时间Δt增大的变化趋势.当目标列表中的站点普遍更新频繁的情况下,我们仍可以从图中明显看出,即使训练样本和测试样本之间存在较大的时间延迟,也只会轻微影响Page11指纹识别的准确率.究其原因,是因为这些站点一般都只是更新其页面中嵌入的文本或对象,并不会改变网页的总体架构,所以上行请求的数据包变化较小;而下行数据包是用来传输页面所嵌入的对象,此类更新操作对于单个对象的数据包改变较大,但对整个页面报文长度分布的影响甚微.而本文所提出的攻击方法对于上行数据包进行顺序与大小的匹配,在下行方面则根据包长分布进行分类,因此即使是内容更新较为频繁的站点,该方法对于时间的延迟仍具有较高的鲁棒性.反之,即意味着我们不需要频繁地更新指纹库,却仍可以获得较好的指纹识别准确率.但为了更好地验证本文所提出的指纹攻击方法的高效性,在之后的实验中,我们将Δt的值设置为0.5.5.3实验结果对于数据集OpenSSH2000,因为Liberatore等人只针对目标网站主页进行数据采集,没有提供次级页面的流量数据,所以我们仅执行单个页面指纹匹配方法.如图9所示,在其他条件相同的情况下,当目标站点个数N=1000时,单个页面指纹匹配(OneLayer)获得了81.7%的识别率,相较于Liberatore等人使用的Bayes和Jaccard系数方法,准确率提高了近9%.值得注意的是,OneLayer和Bayes方法的区别只在于我们对于上行流量提取了不同的特征然后使用最长公共子串算法进行相似度比对,而在下行流量的处理上是一致的.如果将未知指纹的真实身份在分类预测结果排名前K位也视为准确识别的话,当K=3时,仅使用单个页面指纹匹配方法就可以准确识别90%的记录的类别,而此时Bayes和Jaccard的识别准确率仅为78%和82%,证明了我们所抽取指纹特征的高区分性以及相应匹配算法的有效性.图93种攻击在不同的K值下对应的攻击准确率针对数据集SSH100,我们分别测试了5种指纹攻击方法:Liberatore等人提出的Jaccard系数、使用核密度估计的朴素贝叶斯分类器、Herrmann等人提出的多项式朴素贝叶斯分类器、Panchenko等人提出的支持向量机方法以及多级页面联合指纹攻击方法(TwoLayer),实验结果如图10所示.当目标站点的类别为100、Δt=0.5、ntrain=4时,我们的多级页面联合指纹攻击方法获得了近96.8%的准确率.在上述实验中,鉴于多级页面建立隐马尔科夫模型的高复杂性,本文仅针对两级页面这种最简单的情况进行攻击,而这已经获得了较好的实验结果.可以预期的是,当两级页面扩展到多级页面,甚至是目标网站的所有页面时,建立对应的精确的隐马尔科夫模型来进行网站指纹攻击,将会进一步提高攻击的准确率.6结束语本文针对SSH加密代理匿名滥用的问题,在详细分析SSH封装的Web流量特征的基础上,将嗅Page12探获得的数据包分为上行和下行两类,根据其不同的特性,分别抽取特征生成对应的指纹,然后根据待识别的指纹的特性选择了合适的比对算法,实现了单个页面的指纹匹配.通过在公开数据集上和现有工作进行实验比较,证明了所选特征的高区分性和匹配算法的高效性.同时,本文根据被监管者的Web访问模式,针对目标站点首页和次级页面之间的链接关系建立对应的隐马尔科夫模型,将单个页面指纹的匹配扩展到多级页面,实现了多级页面联合指纹攻击方法.Internet环境下的实验结果表明了该方法的高效性.现有研究工作所采用的攻击模型普遍存在一些具有较大限制的前提假设,例如关闭浏览器的cache功能.虽然这些假设存在一定的合理性,但会降低攻击方法的实用性.因此,在下一步的工作中,将针对浏览器cache开启等情况进行指纹攻击方法研究.同时,鉴于破损数据对指纹攻击方法准确率的影响,如何区分并处理破损数据也是亟需解决的问题.
