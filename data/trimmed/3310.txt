Page1eCK模型下可证明安全的双方认证密钥协商协议赵建杰1)谷大武2)1)(上海交通大学信息安全工程学院上海200240)2)(上海交通大学计算机科学与工程系上海200240)摘要如何构造安全的密钥协商协议是信息安全领域富有挑战性的问题之一.然而目前多数安全协议只能达到“启发式”安全,协议的安全性假设和效率也不够理想.针对这些问题,文中提出了一种新的两轮双方认证密钥协商协议,通过分析新协议的安全属性指出了构造双方认证密钥协商的一些原则.随后,在eCK模型下对新协议进行了严格的形式化证明,根据相关文献,eCK模型是目前关于双方密钥协商协议的安全程度最高的形式化模型.性能分析表明,新协议较好地平衡了计算量和安全性假设这两个协议评价指标.另外,为了实现新协议的密钥确认属性,文中提出了一种三轮变体协议.关键词密码学;认证密钥协商;可证明安全;eCK模型;密钥确认1引言在开放的网络环境下,如何确保会话双方安全Page2性等安全服务.近年来,学者们提出了大量的可满足不同安全需求的密钥协商协议.然而,由于没有一种有效的机制确保这类协议不会在未来被新的攻击方法攻破,早期的密钥协商协议只能达到“启发式”安全:一旦某协议被新的攻击方法攻击成功,该协议或者需要修改,或者被彻底摒弃.经过一系列的攻击与修改后,那些被认为可以抵抗某些应用环境下所有已知攻击的方案才可能用于实践.这种方法的弊端是显而易见的:协议使用者很难确信协议的安全性,反反复复的修补更增加了人们对安全性的担心,也增加了实现代价或成本.因此,设计可以准确刻画参与者和敌手特征的形式化安全模型,并在该模型下讨论协议的安全性有着重要的意义.1993年,Bellare和Rogaway[1]开创性地提出了第一个密钥建立协议的形式化安全模型(BR模型);之后,Shoup和Rubin[2]将BR模型推广到了智能卡领域;BlakeWilson和Menezes[3]以及BlakeWilson、Johnson和Menezes[4]又将安全模型推广到了非对称的应用环境.2001年,Canetti和Krawc-zyk[5]基于前人工作提出了著名的CK模型.CK模型大大简化了形式化证明的过程,但该模型不能保证协议抵抗密钥泄露伪装(KeyCompromiseImper-sonation,KCI)攻击和双方临时私钥泄露(LeakageofEphemeralPrivatekey,LEP)攻击,也无法确保协议的弱的完美前向安全性(weakPerfectForwardSecrecy,wPFS).为了弥补这些缺陷,最近,微软的三位学者LaMacchia、Lauter和Mityagin[6]将上述安全属性整合为单一定义,从而形成了扩展的CK模型(extendedCK,eCK).根据文献[7]的研究,如果eCK模型中使用匹配会话(matchingsession)定义伙伴关系(partnership),则该模型可提供目前最强的关于密钥协商协议的安全定义.本文提出了一种新的两轮双方认证密钥协商协议(命名为SAKA,安全认证密钥协商协议),并在eCK模型下进行了严格的形式化证明.我们还提出了一个可提供密钥确认(keyconfirmation)的三轮双方认证密钥协商协议(命名为SAKA-C).本文第2节给出一些相关的背景知识;第3节提出上述两个新协议,并通过分析新协议的安全属性指出构造双方认证密钥协商的一些原则;第4节首先在eCK模型下证明新协议的安全性,之后选取近年来一些类似协议进行性能比较;最后一节总结全文.2背景知识本节中,我们首先介绍双方认证密钥协商协议所要达到的安全目标,之后描述本文用于安全证明的eCK模型,2.3节定义一些安全属性.2.1安全目标对双方认证密钥协商协议而言,由于存在着大量的攻击场景,很难用一个简单的定义描述此类方案的安全性.文献[8]指出,以下3个安全属性可极大程度地包含潜在的攻击:(1)AKA安全.本文引言中提到的安全模型中,都假设了这样的实验:在一个利用不安全信道通信的多方通信环境下,敌手可以控制所有的通信过程(可以监听、延迟、重放和修改消息等),并且可得到某些参与者的长期私钥.另外,敌手有权选择某些合法的参与者进行密钥协商.如果敌手不能以不可忽略的概率区分一次新鲜的(fresh,见定义2)会话过程中的会话密钥与随机值(由协议的模拟器选取),则称该协议是AKA安全的.(2)弱的完美前向安全性.AKA安全中并未包含完美前向安全性(ForwardSecrecy,FS).粗略地讲,如果协议参与者的长期私钥被敌手获得,而敌手不能由此求出参与者在私钥泄露前协商获得的会话密钥的话,则称该协议具有前向安全性.根据会话性质的不同,前向安全性可分为完美前向安全性(Per-fectForwardSecrecy,PFS)和弱的完美前向安全性(weakPerfectForwardSecrecy,wPFS).具体来说,如果长期私钥泄露前的会话受到了敌手的破坏(该攻击者控制了其中一个参与者,为其选择了这次会话的临时私钥),而敌手仍无法获得这次会话的会话密钥,则称该协议具有完美前向安全性;若协议只能保证敌手在获得参与者的长期私钥后,之前的那些未被敌手破坏的会话的会话密钥不能被敌手获得,则称该协议具有弱的完美前向安全性.Krawczyk[9]对协议的前向安全性进行了详细研究,指出基于公钥的两轮的双方认证密钥协商协议都无法实现完美前向安全性,而只能实现弱的完美前向安全性.(3)抗密钥泄露伪装攻击.假设实体A和B是协议的两个参与者,则当A的长期私钥被敌手获得后,该敌手显然能够冒充A与其他协议的参与者(例如B)进行通信.然而,如果该协议抗密钥泄露伪装(KCI)攻击,则这一密钥泄露不能使得敌手反过来向实体A冒充为其他参与者(例如B).Page32.2eCK安全模型本小节我们简要回顾由LaMacchia、Lauter和Mityagin提出的eCK模型[6].参与者.这一模型包括一个参与者集合U,每个参与者被模拟成概率多项式时间图灵机,可以同时执行多项式次数的协议.假设协议中的两个参与者为A和B,则记双方运行的第s次会话为∏s证书管理中心(certificationauthority).eCK模型需要一个可信第三方CA验证每个参与者的长期公钥与其身份的绑定(binding)情况,所有通过该验证的参与者(包括敌手)均可参与协议.值得注意的是,CA并不验证参与者长期私钥与长期公钥的绑定情况.也就是说,协议的参与者可能拥有相同的长期公钥.敌手.敌手M为一个主动攻击者,它被模拟为一个概率多项式时间图灵机.eCK模型允许敌手任意监听、延迟、重放和修改消息等.也就是说,M可以完全控制通信网络.我们通过一个挑战者(challenger)和敌手M之间的游戏(game)定义双方认证密钥协商协议的安全性.在该游戏中,M被允许进行下面的预言机查询(oraclequery),并且,这些查询是无序和自适应的:(1)Send∏s照协议规范应答消息m.另外,通过该查询,敌手可要求参与者一方(如A)发起与另一方(如B)的会话;(2)Long-term_Key_Reveal(A).敌手M通过此查询获得参与者A的长期私钥;(3)Ephemeral_Key_Reveal∏s通过此查询获得会话∏s(4)Session_Key_Reveal∏s查询获得会话∏s(5)Establish_Party(A).敌手M通过此查询可以在CA上注册参与者A的公钥.此时,M可以发起未知密钥共享攻击;(6)Test∏s一个新鲜的(Fresh,见定义2)会话∏s询.这时,∏s此查询:若投币结果为0,那么它返回协商得到的会话密钥;否则返回会话密钥空间{0,1}k上的一个随机值.这里,k表示会话密钥的比特长度.在游戏的最后,M输出一个值b作为对b的判断,若b=b,则称敌手M赢得了此游戏.在eCK模型中,并不需要其它模型中(如BR模型、CK模型等)的Corrupt查询.这是因为在eCK模型中,敌手M完全可以通过Long-term_Key_Reveal查询、Ephemeral_Key_Reveal查询以及Session_Key_Reveal查询达到与Corrupt查询相同的效果.基于以上描述,我们定义会话的新鲜性(Fresh-ness)和协议的安全性.在此之前,先定义匹配会话.定义1.匹配会话(matchingsession).如果某次会话∏s一个会话∏s为∏s相应的下一条消息,那么我们说这两个会话是A,B匹配的.自然的,拥有匹配会话的两个会话互称为匹配会话.定义2.新鲜性(freshness).如果参与者A和B通过会话∏s话满足:(1)敌手没有对参与者A和B进行过Long-term_Key_Reveal查询和Ephemeral_Key_Reveal查询;查询.(2)敌手没有对∏s那么,我们称该协议是新鲜的.定义3.协议的安全性.在eCK模型下,敌手M攻击协议∏的优势AdvAKAPr[b=b]-1/2.对于任意的概率多项式时间敌手M,如果其赢得上述游戏的优势AdvAKA忽略的,则称该双方认证密钥协商协议是安全的.与CK模型相比,eCK模型捕获了抗密钥伪装(KCI)攻击以及抗临时私钥泄露等.更重要的是,eCK模型允许敌手M同时进行参与者双方的Long-term_Key_Reveal查询和Ephemeral_Key_Page4Reveal查询(但不允许同时对同一个参与者进行Long-term_Key_Reveal查询和Ephemeral_Key_Reveal查询).尽管Boyd等人[10]指出eCK模型并不比CK模型强,但根据文献[7]的研究,如果eCK模型中使用匹配会话定义伙伴关系,则该模型可提供目前最强的关于双方密钥协商协议的安全定义.另外,Huang等人[11]也发现一些在CK模型下得到证明的协议并不允许敌手获得充分的会话信息.2.3补充安全属性为了便于读者理解稍后的内容,本小节补充以下4个安全属性.(1)已知密钥安全(knownkeysecrecy).当协议的两个参与者协商得到的会话密钥泄露后,该会话密钥的泄露不会影响其它会话密钥的安全.已知密钥安全可分为前向已知密钥安全(forwardknownkeysecrecy)和后向已知密钥安全(back-wardknownkeysecrecy).(2)抗未知密钥共享攻击(unknownkeyshareattack).协议抗未知密钥共享攻击,是指协议参与者A不会在不知道对方身份的情况下,与某个参与者B协商获得一个共享的会话密钥.也就是说,当A和B之间协商获得一个会话密钥后,双方都不会错误地认为该密钥是和另外某个参与者共享的.成功的未知密钥共享攻击的后果是严重的:攻击成功后,敌手可以让B相信A发给B的用会话密钥加密的消息是由敌手自己发给B的.若在安全模型中,攻击者还可以由此得到B生成的会话密钥,冒充B与A通信.该攻击曾导致美国国家安全局(NationalSe-curityAgency,NSA)设计的双方认证密钥协商协议KEA[12]在8年后被攻破[8].(3)密钥确认(keyconfirmation).若一个协议的参与者可以确认它的伙伴已经与其建立了相同的会话密钥,则称该协议具有密钥确认属性.(4)抗密钥复制攻击(keyreplicationattack).如果敌手M可以使得两个非匹配的会话计算出相同的会话密钥,然后通过另一会话密钥查询得到此次会话密钥的值,则称协议不具有抗密钥复制攻击的属性.3双方认证密钥协商协议本节我们提出新的双方认证密钥协商协议的两个版本,分别命名为SAKA和SAKA-C,其中SA-KA-C除了具备SAKA的属性外,还具备密钥确认的特点.3.1符号说明q(p-1);以下的符号适用于全文.IDA,IDB:参与者A和B的身份标识;p,q:满足RSA安全要求的两个大素数,其中g:以q为阶的群G的生成元;H1:{0,1}→Z藏参与者的长期私钥和临时私钥;H:{0,1}→{0,1}λ:理想的Hash函数,其中,λ为安全参数;SK:A和B协商获得的会话密钥.3.2不带密钥确认的双方认证密钥协商协议(SAKA)如图1所示,新协议SAKA中的两个参与者A和B将依次执行.AaA-=gamodpBbB-=gbmodpK=RKBAmodp(RB,sB)SK=H(K,sA,sB,IDA,IDB)SK=H(K,sB,sA,IDB,IDA)1.A随机选取a∈Zq作为自己的长期私钥,计算珡A=gamodp作为其长期公钥,并公布(珡A,IDA);同理,B随机选取b∈Zq作为自己的长期私钥,计算珚B=gbmodp作为其长期公钥,并公布(珚B,IDB);2.A随机选取x~∈Zq作为自己的临时私钥,并计算x=H1(a,x~),KA=(珚B)xmodp,sA=x/(KA+a)modq,RA=gKAmodp,将(RA,sA)发送给B;3.收到(RA,sA)后,B计算KA=(RA珡A)bsAmodp并验证等式RA=gKAmodp是否成立.若成立,则B随机选取珘y∈Zq作为自己的临时私钥,并计算y=H1(b,珘y),KB=(珡A)ymodp,sB=y/(KB+b)modq,RB=gKBmodp.计算K=RKABmodp及SK=H(K,sB,sA,IDB,IDA),将(RB,sB)发送给A;4.收到(RB,sB)后,A计算KB=(RB珚B)asBmodp并验证等式RB=gKBmodp是否成立.若成立,计算K=RKB以及SK=H(K,sA,sB,IDA,IDB).至此,A和B建立了会话密钥SK.3.3协议的安全属性新协议可以抵抗未知密钥共享攻击、重放攻击和冒充攻击,还具有弱的完全前向安全性,本小节将详细分析SAKA协议的这些安全属性.3.3.1抵抗未知密钥共享攻击如果SAKA协议的会话密钥没有包含A,B双方的身份信息(IDA和IDB),将会导致如下的未知Page5密钥共享(UKS)攻击.假设敌手M将A的长期公钥注册为自己的公钥(这种情况是完全可能的,因为CA并不验证公钥图2对不含身份信息的SAKA协议的未知密钥共享攻击3.3.3抵抗冒充攻击1.当A发起与B的会话Session1时,M同时发起与B的会话Session2,并将在Session1中截获的(RA,sA)发送给B;2.这时B同时参与两个会话:B选取珘y∈Zq作为Session2的临时私钥,并将计算得到的(RB,sB)发给M;同时,选取珘y∈Zq作为Session1的临时私钥,并将计算得到的(RB,sB)发给A(计算过程同SAKA协议,不再赘述);3.M截获(RB,sB),并将(RB,sB)发送给A.这时,Session1中的A与Session2中的B计算得到相同的会话密钥SK.显然的,Session1中的A认为其与B建立了相同的会话密钥;而Session2中的B认为与M建立了相同的会话密钥.在后续的通信中,M可以截获Session1中A利用SK加密的消息,在Session2中发给B,由于B拥有相同的SK,可顺利解密该消息并认为该消息是M发出的.另外,在eCK模型中,M可对Session2进行Session_Key_Reveal查询获得SK,并宣布Session1为Test会话,从而轻松赢得安全模型中的游戏.一个可能的补救方法是CA验证参与者公钥与身份的绑定情况,禁止两个参与者拥有相同的公钥.但有学者已经指出这样的方法是行不通的,读者可参见文献[8].话密钥中,从而避免了未知密钥共享攻击.3.3.2抵抗重放攻击所谓重放攻击,是指攻击者利用已经截获的公开会话信息来获取新的会话的秘密信息的行为.在SAKA协议中,参与者A和B在每次会话中需要选择新的x~∈Z并利用x~和珘y计算新鲜的(RA,sA)和(RB,sB).由于每次会话生成会话密钥的信息都是不同的,因此有效地避免了重放攻击.SAKA协议将身份信息(IDA和IDB)添加到会示的步骤,M可成功地使B相信A通过会话密钥SK加密的消息是M发给B的.MA-BB-③(RA,sA)④(RB,sB)由于K=RKBBmodp(RKB过RKA节.这时攻击者可冒充一方(如B)身份发送不合法的s值(如sB)给对方,从而导致协商成功.在SAKA协议中,会话密钥中添加了当前会话的随机值sA和sB,保证了敌手不可能冒充参与者随意发送非法的s值.3.3.4弱的完美前向安全性在SAKA协议中,会话密钥并不完全由参与者双方的长期公私钥协商得到,而是包含了当前会话的临时私钥,因此新协议具有弱的完美前向安全性:如果长期私钥泄露前的会话没有被敌手破坏,即使参与者的长期私钥被敌手获得,敌手也无法获得这类会话的会话密钥.Krawczyk[9]指出,所有两轮的基于公钥密码体制的密钥协商协议都无法实现完美前向安全性(PFS),也无法实现密钥确认.为了弥补两轮协议的先天不足,本文在下节提出带有密钥确认的双方认证密钥协商协议.3.4带密钥确认的双方认证密钥协商协议(SAKA-C)在很多应用中,缺少密钥确认将可能导致某种形式的DoS攻击(DenialofService,拒绝服务).假如在密钥协商过程中,A得到了正确的会话密钥SK,而B由于敌手攻击得到了错误的值SK.当A用SK加密后续消息时,B无法解密,这可能导致A重复发送加密消息以便得到正确反馈,从而消耗了网络资源,严重时可能造成网络堵塞.SAKA-C协议用添加消息认证码(MessageAuthenticationCode,MAC)的方式来实现密钥确认,而这一性质也确保了协议的完美前向安全性,协议的细节如图3所示.其中,e=(1,sA,sB,IDA,IDB),e=(0,sB,sA,IDB,IDA).Page6图3SAKA-C协议4讨论4.1节中,我们在eCK模型下证明SAKA协议的安全性.SAKA-C协议的基本安全属性可以用相同的方法得到证明.不同之处在于它的安全性还要基于MAC的安全性假设.限于篇幅,我们这里只给出SAKA协议的详细证明过程.4.2节中,给出几个基于公钥基础设施(PKI-based)的协议在计算量、安全模型和困难性假设等方面的比较.4.1SAKA的安全性分析定理1.如果H:{0,1}→{0,1}λ为随机预言机,CDH假设对于群G成立,则SAKA在eCK模型下是安全的.进一步说,如果敌手M在多项式时间内,通过查询至多n个参与者和至多k次会话以优势AdvAKAS,可以在多项式时间内以优势AdvAKACDH问题,且(S)1AdvAKA证明.注意到H为随机预言机,SK=H(K,sA,sB,IDA,IDB).如果敌手M在多项式时间内以不可忽略的概率赢得游戏,那么M只可能利用以下两种可能的攻击区分真实的会话密钥和随机值:情形1.密钥复制攻击(keyreplicationat-tack).M迫使参与者成功发起另外一次会话t,并建立了与Test会话相同的会话密钥SK.这时,M通过Session_Key_Reveal查询得到会话t的会话密钥,从而获得Test会话的会话密钥;情形2.伪造攻击(forgingattack).M在某时刻成功计算出K,从而通过H查询得到了SK.关于情形1.根据假设,H为随机预言机,而且每次会话参与者选取的临时私钥是不同的,由于eCK模型不允许对一个参与者同时进行Long-term_Key_Reveal查询和Ephemeral_Key_Reveal查询,因此两个会→K=RKBSK=H(K,sB,sA,IDB,IDA)→话拥有相同的参与者并且有相同的临时私钥的概率是可忽略的,即情形1提到的密钥复制攻击是不可能的.关于情形2.下面重点分析伪造攻击.我们将会证明,如果敌手M以不可忽略的概率赢得游戏,则可构造一个模拟器S(Solver),它可利用M以不可忽略的概率解决CDH问题.给定S的挑战(U,V),S将与M按照SAKA协议流程执行查询,并适当修改诚实的参与者返回的数据,以期在M赢得游戏后S可以解决CDH问题.为了便于讨论,情形2可分为以下两种情况:情形2.1.Test会话存在匹配会话,由某个诚情形2.2.所有的诚实参与者都不拥有Test会请注意,这两种情况中至少有一种发生的概率实的参与者拥有;话的匹配会话.1/2.关于情形2.1.首先,S随机选取由某两个参与者A和B参与的匹配会话(选择过程为:随机选择两个会话,然后验证它们是否互为匹配会话.由于S最多可选取k次会话,故本次选择的概率为2/k2),S将这两个会话中的RA用U代替,RB用V代替.攻击开始后,M以1/k2的概率选中上述会话中的某个作为Test会话.显然,此时剩余的那个会话成为Test会话的匹配会话.在此情况下,若M成功地进行了伪造攻击,S一定能解决CDH问题.事实上,SK=H(K,sA,sB,IDA,IDB),若M获得了SK,它一定可以计算出K并通过进行H查询得到SK.根据之前的假设,K=CDH(U,V).因此,若M成功地进行了伪造攻击,S一定能解决CDH问题.由于eCK模型不允许敌手在Test会话中的某个参与者同时进行Long-term_Key_Reveal查询和Page7Ephemeral_Key_Reveal查询,因而敌手查询(a,x~)或(b,珘y)的概率可以忽略不计.H发生碰撞的概率O(k2/2λ)由于对H的假设也可忽略.因此,S与M的优势有如下关系:关于情形2.2.S随机选择一个参与者B.在情形2.2中,我们假设S不知道B的长期私钥b,从而无法获得B的长期公钥.为了在多项式时间内解决CDH问题,S将对B发起的与参与者C(C已经完全被敌手M控制)的会话进行如下处理.首先,S随机选取珘y∈Zq作为B的临时私钥,并计算KB=珚Cymodp,随机选取h,令sB=h,计算U=RB=gKBmodp,并将SK置为随机值.值得注意的是,这种情况下,模型允许S获得或者计算参与者B的会话密钥和临时密钥.由于参与者C被敌手控制,M可以进行Long-term_Key_Reveal查询和Ephemeral_Key_Reveal查询获得C的长期密钥和临时密钥,因而M可以计算KB=(U珚B)chmodp,通过验证,M会发现此值不真.但M仍然可以通过计算KC=珚Bzmodp,sC=z/(KC+c)modq和RC=gKCmodp获得K=Cmodp.这时,S检查M是否进行了H查询,若RKBM进行了H查询,且DDH(U,RC,RKB向M返回SK=H(K,sB,sC,B,C).然后,S随机选取一个会话s,该会话中B为应答者.设此会话的发起者为A,当A发起与B的会话后,S按照协议流程处理此会话,同时令V=RA.这时,M会以1/nk的概率选中s作为Test会话(以1/n的概率选中B,以1/k的概率选中会话s).如果M赢得了游戏,则M一定对五元组(CDH(U,V),sA,sB,IDA,IDB)进行了H查询,从而S查阅该五元组,即可解决CDH问题.需要说明的是,eCK模型只是不允许对Test会话中的某一个参与者同时进行Long-term_Key_Reveal查询和Ephemeral_Key_Reveal查询,而对其它实验会话没有这个限制.在情形2.2中,S与M的优势有如下关系:综合式(1)、(2),对于情形2,有如下公式成立:(S)1AdvAKA4.2性能分析据我们所知,目前基于eCK模型的两轮双方认证密钥协商协议并不多.本节我们挑选几个相似方案在计算量和安全性假设方面进行比较.为了简便,在计算量方面仅比较这几个方案中最耗时的模指数运算的次数.表1中TEXP表示一次模指数运算的时间.Okamato协议[13]从表1可以看出,与Okamato协议[13]相比,SAKA有明显的计算量优势;与NAXOS[6]和CMQV[14]相比,SAKA需要较多的模指数运算,但NAXOS和CMQV均基于GDH问题,而我们的协议基于CDH问题.众所周知,CDH假设比GDH假设更加标准,因此,SAKA在安全性假设方面占有优势.另外,CMQV在证明中需要使用分叉引理(forkinglemma),这可能导致协议证明的不严谨.总之,新协议较好地平衡了计算量和安全性假设两个评价标准.5结论与下一步工作本文首先提出了一种新的两轮双方认证密钥协商协议,通过分析新协议的安全属性指出了构造双方认证密钥协商的注意事项;新协议较好地平衡了计算量和安全性假设两个协议评价标准;随后我们在eCK模型下证明了协议的安全性基于CDH假设.根据相关文献,eCK模型可提供目前最强的关于双方密钥协商协议的安全定义.最后,本文还提出了一种带密钥确认属性的协议,以弥补两轮认证协议无法实现密钥确认的不足.我们注意到,新协议在计算量方面的优势并不明显,如何在安全假设和安全目标不变的情况下提出计算量更小的双方认证密钥协商协议是下一步值得研究的问题.
