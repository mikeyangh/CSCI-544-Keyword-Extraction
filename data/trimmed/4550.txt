Page1基于用户名特征的用户身份同一性判定方法刘东吴泉源韩伟红周斌(国防科学技术大学计算机学院长沙410073)摘要由于用户通常注册使用多个网络应用,因而在互联网中存在着许多重复的用户身份.对重复用户身份的判定与整合在商业领域和网络安全领域都有十分重要的意义.由于用户出于隐私安全的考虑,其在互联网中提供的个人信息通常不完整或者部分内容是虚假的.考虑到用户名能够反映出用户的个性或习惯,较易获得且不涉及隐私问题,因此文中提出了一种仅依靠用户名特征进行用户身份同一性判定的方法.首先文中对用户身份同一性判定问题进行了形式化描述,进而将用户名特征分为直观特征和对比特征两类,并对用户名特征的概率分布进行了量化分析.在此基础上,文中提出了一种身份同一性判定方法,对指定用户名对是否属于同一用户进行鉴别.进而提出了一种给定单个用户名时,在用户名候选集合中检索可能属于该用户的其他用户名的方法.最后在大规模真实数据集上进行了一系列实验,证实了提出的方法的有效性.关键词用户名特征;身份同一性判定;多网络应用;社交网络;社会计算1引言随着互联网的快速发展,网民规模也在不断壮大,截止到2014年12月,全球总网民数达到了28.9亿人,占全球总人口数的42.4%①.与此同时,网络应用也渗透到生活的方方面面,其中注册用户的数量急剧增长.以国外知名网站Twitter和Facebook为例,截止到2014年7月,Twitter注册用户数量已经超过了10亿②,而Facebook注册用户更达到了22亿之多③.在互联网中,人们通常会注册使用不同的网络应用进行信息获取、聊天通信等活动.研究表明[1],约有84%的互联网用户拥有超过一个的社交网站账户.因此,互联网中存在着大量重复的用户身份信息.整合这些重复用户身份逐渐成为了一个十分有意义的研究课题.从商业角度出发,对多个网络应用中的用户重复信息进行判定并整合,能够帮助网络服务提供商对网络用户进行全面了解,掌握用户身份特征,从而提供更好的个性化服务,如更加精准的好友推荐等.从网络安全角度而言,鉴别整合用户重复信息能够协助网络安全管理者发现虚假或不法身份,从而降低因用户匿名而引发的各种网络安全风险,保护合法用户的权益.除此之外,这项研究在协同推荐、信息检索等多个领域都有着广泛的应用前景.但是由于目前单点登录(SSO)技术应用并不广泛,并且各个网站对各自用户账户信息单独存储,很少互通,因此研究者们不得不寻找各种方法获取用户账户信息.一般来说,用户网站进行注册时,都需要提供部分个人信息如用户名、密码、邮箱、年龄、住址等.直观来看,不同网络应用中具有相似注册信息的用户账户便可能属于同一人.但是出于商业利益或者隐私保护的需要,获得详细准确的注册信息数据十分困难.此外,用户在网站注册时,出于隐私安全的角度,他们提供的个人信息大多不完整或者部分内容是虚假的,这也为用户身份鉴别增添了难度.而用户名通常由英文字母,数字和特殊字符如“-”、“_”等组成,长度在4~26之间.相对于其他注册信息,用户名更容易获得,而且不会泄露用户隐私.除此之外,用户名通常能够反映出所有者的身份或者个性特征,如姓名、籍贯、出生年月、喜好等;且同一用户的不同用户名通常也具有类似特征,如长度、字符组合模式等.因此本文将多个网站中用户重复身份鉴别问题定义为用户身份同一性判定,并提出了基于用户名特征的用户身份同一性判定方法.本文的主要贡献如下:(1)文中对用户身份同一性判定问题进行了形式化描述,并提出了一种基于用户名特征的解决框架.(2)文中从多个角度提取了用户名的隐含特征,将其归纳为直观特征和对比特征两类,并对这些特征的概率分布进行了量化统计分析.(3)文中提出了一种对指定用户名对是否属于同一用户进行判定的分类方法.进而在给定单个用户名时,提出了一种在用户名候选集合中查找用户潜在的其他用户名的方法.(4)综合考虑用户名特征,在较大规模真实数据集上(总计4千8百万用户名对)验证了本文提出的用户身份同一性判定方法的有效性.本文第2节介绍相关研究工作;第3节给出用户身份同一性判定的形式化描述;第4节详细分析用户名的各种隐含特征,并对其概率分布进行统计分析;第5节对同一性判定过程进行了详细介绍;在第6节中,通过真实数据集上的一系列实验验证用户名特征以及同一性判定算法的有效性;最后,在第7节对全文进行总结.2相关研究用户注册信息通常包含了用户的个人身份信息,如用户名、性别、地址、生日、兴趣等,而这些信息通常能够直接用来判断用户身份.因此已有一系列研究通过采集分析不同网络应用中的用户注册信息来判定两个用户是否为同一人.Motoyama等人[2]对Facebook和Myspace中的重复用户注册信息的检测进行了研究,主要对用户注册信息中标识属性的内容特征进行对比分析.他们发现某些标识属性的结合在检索中能够有效地定位个人,例如“名字”+“教育经历”,进而对Facebook和MySpace中重复用户身份的比例进行的定量度量.You等人[3]做了类似的工作,他们对Twitter和EntityCube中的用户账户信息进行了关联分析.首先利用了Web页面中名字共同出现而产生的共现关系对用户身份信息进行关联,进而对这些注册信息的标识属性的文①②③Page3本特征进行对比分析.Akcora等人[4]提出了一种基于注册信息的用户身份相似性度量方法,用于发现不同用户账户间的语义相似性.Raad等人[5]针对不同类型的身份属性赋予了不同的权重并采用了不同的相似性度量方法:如果两个用户注册身份信息的相似性计算结果超过预定阈值,则认为它们同属于一个用户.Vosecky等人[6]将用户注册信息表示为n维向量,同时考虑不同的字段拥有不同的权重,最后采用向量相似性计算方法来计算不同注册信息之间的相似性,从而对相应不同账户属于同一用户的可能性进行度量.除此之外,国外越来越多的网站采用FOAF(FriendOfAFriend)[7]定义用户注册信息的格式.FOAF是一种基于XML/RDF词汇表的标记语言,它为用户身份提供了一种基本表述,如姓名、电子邮件地址等,同样可以用来描述用户间的联系以及用户的活动信息.Ding等人[8]提出了一种启发式方法用以鉴别与分析社交网站中的FOAF文档,抽取并整合其中的用户相关信息及交互关系.Bortoli等人[9]利用多网站的用户身份FOAF文档,对解决用户身份鉴别问题进行了详细的描述.但是利用用户注册信息来进行用户身份同一性判定存在着一系列困难.出于商业及隐私保护等原因,这些信息一般情况下是不能直接获取的.而且,部分用户出于保护自身隐私的目的,在注册填写个人身份信息时,可能会提供错误的内容,如错误的出生日期、地址等.因此,一些研究者开始关注从用户名(较容易获得,且不泄露隐私)角度出发进行多个网站应用中用户重复身份的鉴别.但是目前利用用户名特征对用户身份同一性进行判定的研究较少.Liu等人[10]首先对153个志愿者就用户名的相关使用情况进行了一项社会调查,继而利用用户名、主页信息、文本内容、社交关系以及用户个人身份信息(头像、地址、署名)等对疑似同一用户的用户账户进行分析判别.Perito等人[11]采用n-gram模型度量用户名的独特性,进而利用编辑距离分析了用户名相似程度.Zafarani等人[12]首先分析用户名在重复身份鉴别中的作用,并提出了7种用户身份相关假设.他们在文献[13]中进一步提出了MOBIUS方法.该方法分析了用户名的隐含特征,用以关联不同网络应用中的相同用户.以上研究中存在的主要缺陷是用户名的数据量均不大,因此对用户名特征的分析仅限于假设和描述,缺乏大规模数据集上的量化分析.本文则采集了海量真实用户名数据,在此基础上对用户名特征进行了量化统计分析,并且对提出的用户身份同一性判定方法的有效性进行了验证.3问题描述本节我们主要对多个网站中用户身份同一性判定问题进行形式化描述.以O表示多个网站构成的集合,o∈O表示其中一个网站.Uo表示在o中注册的用户名集合.u∈Uo表示单个用户名.用户身份同一性的判定一般包含如下两个问题[13]:(1)给定两个用户名u和v,能否判定他们是否属于同一用户.(2)给定用户的一个已知用户名u,能否在用户名集合U中找到属于该用户的其他用户名.其中问题2可以分解为两步:首先,我们将集合U中的用户名与u进行对比,按照同一性判定函数计算得到对比结果;然后按照预先定义的阈值筛选符合条件的用户名.由此可以看出,问题2部分包含问题1,即问题集中为求解两个用户名是否属于同一用户的判定函数.首先我们对用户名特征进行了相关形式化定义.定义1.用户名特征向量.犉u=〈f1,f2,…,fn〉.其中fi表示用户名u中第i个特征的概率分布值,n为用户名特征总数.由于用户名通常包含了多个特征,如长度、命名模式等,因此,我们将用户名特征表示为n维向量.定义2.用户名特征支持度向量犛(犉u,犉v)=〈s1,s2,…,sn〉.其中si=supporti(u.fi,v.fi),显然有|犉u|=|犉v|=|犛|.supporti为第i个特征的支持度函数.si的值越大,表示这种特征对用户身份同一性的支持度越高,即用户名u和v越有可能属于同一用户.由于不同特征的具体含义不相同,因此不同特征的支持度函数supporti也各不相同,具体计算方法将在第五部分详细介绍.定义3.用户名特征权重向量.犠=〈w1,w2,…,wn〉.其中wi表示用户名第i个特征的权重取值,wi∈(0,1)且∑用户名特征对用户身份同一性判定的权重也不相同.权重越趋近于1,代表该用户名特征越为重要.定义4.用户身份同一性判定函数Page4我们对用户名各个特征的支持度加权求和,结果越大表明两个用户越有可能属于同一用户.最后,我们将判定结果与预定义阈值t进行对比,如果I(u,v)t,则认为用户名u和v属于同一个用户.4用户名特征分析由于人们一般很难记住大量随机字符串,因此在现实生活中用户通常拥有一个用户名集合,当注册使用新的网站应用时,他通常会从这个集合中选取用户名使用,或者采用某些模式根据已有的用户名创建新的用户名.这些用户名能够反映出隐含的用户个性特点或习惯.我们对用户名特征进行提取并分析后,将其归纳为以下两类:(1)用户名直观特征这类特征通常可以直接从用户名中获得,例如用户名长度、使用特殊符号或数字等.一般说来,如果用户名的直观特征较为独特,则该特征能够明显反映出用户的个性特点.(2)用户名对比特征进行用户同一性判定时,通常需要进行用户名之间的对比.在本文中,我们对比属于同一用户的两个不同用户名,将对比得到的特征定义为用户名对比特征.例如有些用户创建新用户名时仅仅改动部分字母,或者增加新的前后缀,这种更改模式的概率分布即可表示为对比特征.在文献[13]的数据集中,约有59%的用户在多个社交网站中重复使用同一个用户名,以便于记忆或建立该用户名在互联网中的信誉.本文在更大规模的数据集上进行实验,用户使用同一用户名的概率下降为32.57%.由于两个相同用户名所反映的用户特征是一致的,因此本文对用户名对比特征的分析是在由同一用户不同用户名构成的数据集上进行的.实际应用中我们发现用户名的每个特征都包含直观特征和对比特征,下面我们会对这些特征进行详细介绍.4.1用户特征提取(1)长度特征通常来说,大多数用户名的长度都在一个特定范围内(本文分析的用户名长度范围为4~26),一般不会过短或过长.一旦用户创建过短的名字,则很容易与已有用户名重名;相反,过长的名字不容易记忆或者在登录网站输入时颇为繁琐.因此,我们对用户名长度的统计,将其概率分布作为用户名长度直观特征.此外,用户在创建的新用户名通常与旧有用户名具有相近长度.例如一个原有用户名长度为10的用户通常不会创建长度小于6或者大于15的用户名.在对比同一用户的两个不同用户名u和v时,我们采用式(2)计算用户名长度的相似度.其中lu和lv分别表示u和v的长度,Min和Max分别为取最小值和最大值函数,我们将相似度lsim的概率分布定义为用户名长度对比特征.(2)特殊字符特征一些用户名常常包含特殊字符,如“_”、“-”等,这些特殊字符反映了表示的命名习惯或喜好.而某些罕见的字符串更能够十分有效地用于判断用户身份,如“∧_∧”.如果两个用户名拥有相近的特殊字符串,那么他们以较高的几率属于同一用户.我们同样将用户名中出现的特殊字符的概率分布定义为用户名特殊字符直观特征.在对比同一用户的两个不同用户名时(两用户名都包含特殊字符),我们将用户名中出现的所有特殊字符组成字符串,采用基于最长公共子串(LongestCommonSubstring,LCS)的算法计算两个特殊字符串的相似度.最终将该相似度的概率分布作为用户名特殊字符对比特征.具体算法流程如算法1所示.算法1.基于LCS的字符串相似度计算.输入:两个字符串s和s输出:基于LCS的相似度1.cn←0;/cn为对比次数/2.WHILE(s和s中存在LCS)DO3.lcsi←LCS的字符串长度;4.cn++;5.删除s和s中的LCS;6.ENDWHILE7.IF(cn==0)/当不存在LCS时进行参数调整/8.cn←1;9.ENDIF10.RETURNSimLCS=(3)数字特征用户名中经常包含数字,如出生日期、手机号码、身份证尾数等.这些数字串也能够反映出用户的喜好以及身份.类似于用户名特殊字符特征,我们将Page5数字串出现的概率分布定义为用户名数字直观特征.继而利用算法1对属于同一用户的两个不同用户名的数字串的相似度进行度量(两用户名都包含数字),并将相似度的概率分布定义为用户名数字对比特征.(4)字符输入模式特征由于键盘中字符的输入分为左右两部分,因此用户名中字符的键盘输入也可以反映出该用户的习惯特点.例如某些用户习惯于右手使用鼠标的同时输入用户名,因此他们更倾向于创建左手方便输入的用户名.本文主要关注了用户名的英文及数字字符的分布特征,将右手输入的字符数目与字符总数目的比值表示为字符输入模式,并以该模式的概率分布作为字符输入模式直观特征.我们采用式(3)计算属于同一用户的两个不同用户名的字符输入模式之间的相似度,并将该相似度的概率分布作为用户名字符输入模式对比特征.其中tpu和tpv分别表示用户名u和v的字符输入模式.(5)字符组合模式特征虽然很难准确预测创建用户名时用户选择的字符,但是我们能够通过不同类型字符的组合模式来对用户身份同一性进行判断.因为一个用户创建的用户名通常具有类似的字符组合模式,例如ld8058和ld0627属于同一用户,他们拥有相同的组合模式:EN,其中E表示英文字符串,N表示数字字符串.我们将字符组合模式的概率分布定义为用户名字符组合模式直观特征.类似,针对同一用户的两个不同用户名的组合模式,我们采用算法1计算两个模式的相似度(例如EN和E的相似度为0.5),并将其概率分布定义为用户名字符组合模式对比特征.(6)用户名独特性特征在实际中我们发现同一用户的不同用户名通常包含相同的字符.例如一个用户姓名拼音为liudong,他拥有两个不同的用户名ld0627和ld8058.这两个用户名都含有英文字符串ld,而ld正是其姓名拼音的缩写.由于英文字符串通常具有比较明确的含义,因此,我们重点关注用户名里面英文字符串出现的几率,并使用n-gram模型来度量用户名的独特性.在统计语言模型中,n-gram模型得到了广泛的应用.本文同样采用n-gram模型来度量用户名中英文字符串出现的概率.将用户名u中的英文字符串表示为序列E=e1e2…en,在没有精度损失的情况下,E的概率为此处每个字符出现概率与前面所有字符相关,而n-gram模型为了减少计算开销同时不产生较大精度损失,引入了如下假设:第n个字符出现的概率只与前面n-1个字符相关.将各个字符的出现概率相乘便得到整个字符串的概率.条件概率的计算如式(6)所示,count(ei-k+1…ei)表示字符串ei-k+1…ei的出现次数.P(ei|ei-k+1…ei-1)=以英文字符串Markov为例,利用3-gram模型计算该词汇出现的概率为P(Markov)≈P(M)P(a|M)P(r|aM)P(k|ar)P(o|rk)P(v|ko).本文最终采用5-gram模型来计算每个用户名中英文字符串的概率,记为P(E).然后我们以P(E)的自信息-ln(P(E))表示E的独特性,并将自信息的概率分布定义为用户名独特性特征.直观来看,具有较低自信息的用户名通常出现概率较高,反之具有较高自信息的用户名较为罕见.(7)英文字符串相似性特征如果每个网站都创建完全不同的用户名,这对记忆力将是严重的挑战,因此人们习惯于对原有的用户名进行简单更改以创建新的用户名,我们将这些更改模式归纳为以下4项:①插入(insertion).用户对原有用户名插入字符串得到新用户名,通常表现为插入前后缀,例如liudong→liudongcsdn;②删除(deletion).用户对原有用户名删除部分字符得到新用户名,例如采用姓名的缩写,liudong→liud;③替代(substitution).用户对原有用户名替换部分字符得到新的用户名,例如根据不同的网络应用创建不同的用户名,liudong_csdn→liudong_qq;④换位(transposition).用户对原有用户名中部分字符串变更位置,例如交换姓和名的位置,liudong→dongliu.以上4种更改模式在实际中可能会组合使用.与用户名独特性特征类似,本文重点考虑用户名中出现的英文字符串,并采用算法1计算同一用户不Page6同用户名英文字符串(全部转换为小写字母)的相似度,将其概率分布作为用户名英文字符串相似性特征.在进行用户名对比时,该特征通常结合用户名独特性特征进行综合分析,即作为用户名独特性的对比特征.毕竟如果用户名英文字符串越罕见,那么它与其他用户名的相似度也越低.4.2用户特征概率分布(1)长度特征我们在全部用户数据集(4千8百万用户名对)的基础上对用户名长度特征进行分析,其中用户名长度的概率分布如图1所示.由此可以看出用户通常选择创建长度在5~13之间的用户名(约91%).较短的用户名容易发生冲突,而过长的用户名在登录网站时比较繁琐.属于同一用户的不同用户名对的长度对比特征的概率分布如图2所示.约47%的用户名对长度的相似度在0.8以上.这一结果证实了我们的假设,即用户通常创建长度相近的用户名.(2)特殊字符特征出于系统安全的考虑,网站通常对用户名可使用的特殊字符进行限制.绝大多数网站仅允许用户使用3种特殊字符,即“.”、“-”和“_”.因此本文仅考虑这3类特殊字符以及由它们组成的字符串.图3展示了排名前十位的特殊字符串的概率分布.最常见的特殊字符是“_”,约占总数的68%,其次为“.”(17%)和“-”(12%).图4为用户名对特殊字符串对比相似度的概率分布.约有65%的用户名对拥有完全一致的特殊字符串,这说明先前假设成立,即若同一用户的不同用户名包含特殊字符串,它们通常是相同的.需要注意的是特殊字符串的相似度集中在[0.0,0.1),[0.5,0.6)和1.0.这主要因为用户名中95%以上的特殊字符串是单字符和双字符,而其相似度主要集中为0,0.5和1.0.(3)数字特征我们对用户名中出现的数字进行了统计分析.图5展示了排名前十位的数字的概率分布.图6为用户名对中数字相似度的分布.其中,相似度为1的用户名对约占17%,而相似度小于0.3的用户名对约占60%,这说明用户在创建新的用户名时倾向于两个极端,多数用户在创建新用户名时习惯更改数字,而也有部分用户保持数字不动.Page7(4)字符输入模式特征用户名字符(英文和数字)的键盘分布如图7所示.由此我看可以看出右侧输入字符数与字符总数的比值集中在0.5~0.7左右(约50%),这表明大部分用户名的字符分布是比较均衡的.但是也有约11%的比值在0.1以下,这种情况便是之前分析提到的方便左手输入的用户名.图8展示了同一用户不同用户名对的字符输入模式相似度的概率分布情况.72%的用户名对的模式相似度在0.8之上,其中42%的用户名对的字符输入模式是完全一致,这表示同一用户创建的不同用户名通常具有相近的字符输入模式特征.(5)字符组合模式特征图9展示了出现概率排名前10位的字符组合模式.其中EN和E,即英文字符串+数字字符串和纯英文字符串是最常用的模式,约占模式总数80%.图10展示了同一用户不同用户名对的字符组合模式的相似度分布,其中约有44%的用户名对的组合模式完全一致.由此证实了之前的假设,即同一用户的不同用户名通常具有相近的字符组合模式.而32%的用户名命名模式相似度介于0.5~0.6之间,这主要是EN和E的对比结果,它们的相似度为0.5.(6)用户名独特性如4.1节所述,我们采用5-gram模型度量用户名中英文字符串的独特性.在对全部用户名进行分析后,其自信息分布如图11所示.图中展示了两个网站(人人网和天涯论坛)中用户名独特性的自信息分布和全体数据集中用户名的独特性自信息分布.注意到这用户名独特性的自信息分布主要集中在10~25,这表明了这些网站中的用户拥有相似的用户名创建策略,特别大众和特别罕见的用户名数量都比较少.尽管都采用了5-gram模型,本文中用户名独特性自信息的分布与文献[11]有着较大的差异,后者自信息的分布主要集中在25~55.我们对数据集进行详细分析,认为主要有以下两个原因:①文献[11]中的用户名主要来源于eBay和Google+,这两个网站中大多数为英文用户,而本文用户名的来源主要是中文网站,绝大多数用户都是中国人.与英文用户相比,中文用户由于语言差异,在创建用户名时选择性较少.除了英文单词外,很多用户习惯根据姓名的汉语拼音创建用户名,而410个汉语拼音就基本能够代表所有的中文字符.因此,中文用户创建的用户名独特性较弱,自信息较小;②本文仅对用户名中英文字符串进行了分析,而没有像文献[11]一样分析所有类型的字符,显然其自信息值较小.这同样也从侧面反映了用户在创建新用户名时习惯保留原Page8有用户名中的英文字符串.例如,ld0627→ld8058.(7)英文字符串相似性特征我们属于同一用户的不同用户名对中的英文字符串进行相似性判断.其相似度分布如图12所示.其中,约有12%的用户名对中的英文字符串是完全一致的,相似度高于0.8的用户名对约占总数的40%,而相似度小于0.3的用户名对约占21%,这说明用户在创建新的用户名时倾向于两个极端,多数情况下仅略微变更英文字符串,而部分用户则创建了几乎全新的英文字符串(例如根据不同的网络应用而创建,例如csdn_198627→yahoo_198627).5用户身份同一性分析5.1问题1解决方法在解决问题1,即给定两个用户名u和v,判定它们是否属于同一用户时,我们通常需要分析得到这两个用户名的身份同一性判定函数I(u,v)的值,继而与预定义阈值作比较.根据式(1),最首要的问题是计算不同用户名特征的支持度函数supporti.根据第4节的分析,每一种用户特征都包括直观特征和对比特征两种类型.以用户名长度为例,在对比两个用户名时,我们除了要分析两个用户名各自的长度直观特征,还要考虑其长度的对比特征.因而在对用户身份同一性进行分析时,用户名特征的支持度函数也同样由两部分组成,分别是用户名直观特征的支持度函数和用户名对比特征的支持度函数.首先定义用户名第i个直观特征的概率分布均值为S其中fi.pk表示第i个用户名直观特征的第k个概率分布值,m表示不同概率分布值的个数,显然AVGi∈(0,1).在对比两个用户名u和v时,第i个直观特征的支持度函数计算如下:support_si(u.fi,v.fi)=MIN(logAVGi其中u.f特征的概率分布值,MIN为取最小值函数.显然当该特征的概率分布值小于均值,即该特征比较罕见时,对数值大于1.用户名的第i个对比特征的支持度函数计算如下:support_ci(u.fi,v.fi)=d×-∑我们将两用户名对比特征的相似度由[0.0,0.1)至[0.9,1.0)和1.0划分为11个区间,d表示用户名对相似度的值域区间序号,当两用户名越相似,d值越大.例如相似度0.85∈[0.8,0.9),则d赋值为9.f似度区间个数,本文定义为11.显然乘式后者表示对比特征概率分布的熵值,值越大,对用户身份同一性的支持度越高.最终在判断两用户名是否属于同一用户时,第i个用户特征对用户名同一性的支持度函数计算如下:supporti(u.fi,v.fi)=support_si(u.fi,v.fi)×support_ci(u.fi,v.fi)(10)5.2问题2解决方法给定用户的一个已知用户名u,在用户名集合U中检索属于该用户的其他用户名,最直观的处理方法是将u与U中每个用户名进行对比,继而寻找符合要求的用户名序列,即同一性判定函数值大于某个既定阈值.该方法存在的主要问题是当U中用户名数量很大时,逐一对比会耗费大量的计算开销.因此,我们提出了一种用户名集合约简方法.首先,我们将每个用户名v与预定义用户名up=ab…︷个n维向量犚=〈w1×r1,w2×r2,…,wn×rn〉,其中n为用户名特征数目wi为用户名第i个特征的权重,ri计算如下:ri=support_ci(up.fi,v.fi)×logAVGi继而我们计算向量犚和单位向量的余弦相似度,并最终将所有用户名按照其余弦相似度的值排序并建立索引.当给定一个用户名u,在用户名集合U中查找该用户名拥有者的潜在其他用户名时,我们首先定Page9义了参数ε,继而选择余弦相似度值位于u.simcos-ε和u.simcos+ε之间的用户名构成候选集合Uc,其中u.simcos表示u和up的相似度.最后,我们提出了一种top-k的准确率判断方法.通过将Uc中的用户名与u进行逐一对比,选择身份同一性判定函数值排名前k位的用户名,如果其中包含与u同属于一个所有者的用户名,则结果认为是准确的.5.3算法复杂度分析我们对第3节提出的用户身份同一性判定的两个问题的解决方法进行时间复杂度的分析.在解决问题1,即给定两个用户名,判定它们是否属于同一用户时,我们首先需要对比这两个用户名的相应特征之间的相似度,进而结合用户名特征的权重得到表示其同一性概率的综合相似度.这一过程需要对两用户名对应的特征进行一一对比,因此该算法的复杂度为O(|F|),|F|为用户名特征的数目.在解决问题2,即给定用户的一个已知用户名u,在用户名集合U中检索属于该用户的其他用户名.直观的处理方法是将u与U中每个用户名进行对比,寻找符合要求的用户名序列,该方法的时间复杂度为O(|F||U|),其中|U|为用户名集合的大小.可见此方法的计算复杂度与待检索的用户名集合规模成线性关系,当集合规模较大时,计算开销也较大.为了解决在大规模用户名集合中的快速检索问题,本文提出的用户名集合约简方法首先将U中的用户名与预定义用户名进行相似度计算并排序,此时间复杂度为O(|F||U|).在进行用户名检索时,仅需要在按照候选用户名集合候选集合Uc中查找即可,因此时间复杂度降低为O(|F||Uc|),|Uc||U|.由此可见虽然数据约简需要进行预先运算,但在以后较多的用户名同一性检索时,能够有效降低算法的计算开销.6实验分析本节我们在较大规模的真实用户名数据集上对用户名特征进行分析与验证.首先我们对本文采用的数据集进行详细介绍,继而通过实验验证了利用用户名特征进行多网站用户身份鉴别的可行性.实验环境为7台服务器组成的hadoop分布式计算环境,单个服务器的配置为3.10GHzIntelXeonE3-1220CPU,32GB内存,CentOS6.0操作系统.6.1实验数据在采集用户名的时候,文献[10]中社会调查的方法关联同一用户不同用户名的可信性较高.但是由于进行调查比较耗费人力和时间,并且用户顾虑到个人隐私安全,一般不愿意将自己多个用户名的关联关系提供给他人.此外,尽管一些网站提供了这一类服务,如Google+和Facebook允许用户在主页上列出自己在其他社交网站的用户名,但是大部分网络应用不具备这类功能.与文献[11-13]中刻意寻找提供同一用户不同用户名的网站不同,我们发现用户的Email电子邮箱名称同样也是用户在一些网站中的用户名,例如Email:ld0627@yahoo.cn中ld0627也是该用户在雅虎中注册的用户名,同样能够反映用户命名时的个性特征.此外一些网络应用在用户注册时不仅要求其填写用户名,同时要求提供Email,从而为用户名特征的对比分析提供准确的数据支持.因此,本文通过获取用户在网站中的用户名和Email构建数据集,其格式为〈username,emailname〉,其中username为用户在网络应用中的注册用户名,emailname为用户注册的Email中不包含后缀信息的名称.以ld0627@yahoo.cn为例,其emailname为ld0627.我们的数据来源于2011年12月互联网中泄露的多个网站的用户身份信息①,包括人人网、CSDN、天涯论坛在内的14个网站.这些用户信息主要包含了注册的用户名、Email以及其他用户身份信息如昵称等(此类信息多不完整且不在本文考虑范围内).在此我们构建了〈username,emailname〉数据集,总计4千8百万用户名对.由于用户注册信息中的用户名和Email同时存在,因此我们能够保证用户名对数据集中的username和emailname均属于同一个用户.为了进行对比实验对用户身份同一性判定准确率进行分析,我们同样构建了测试反例数据集.通过随机挑选不属于同一用户的用户名,最终构建了3个测试集,其中每个测试集包含1百万正例(同属于一个所有者的用户名对)和1百万反例(随机组合非同一所有者的用户名对).6.2用户身份同一性判定准确率验证(1)字符串相似度计算对比分析如第4节所述,在分析用户名特征相似度时,我们通常需要考虑“插入”、“删除”、“替代”、“换位”①http://tech.qq.com/a/20111228/000241.htmPage104种相似模式以及其组合应用.在分析特殊字符、数字以及字符组合模式时,这些用户名特征字符串的相似关系同样符合以上4种模式.例如分析字符组合模式“E”和“EN”,便为第2种“插入”字符相似模式.在此我们将本文的基于公共最长子串(LCS)的相似度方法与两种常用的字符串相似度度量方法进行对比.两种方法分别为Jaro-winkler相似度[14]和Levenshtein相似度[15].下面首先介绍这两种相似度度量方法.Jaro-winkler相似度广泛应用于字符串相似度度量.针对字符串s,以s[i]表示s中的第i个字符.在对比两个字符串s1和s2时,如果两个字符s1[i]和s2[i]满足s1[i]=s2[j]且|i-j|max(|s1|,|s2|)/2-1,则认为他们是匹配的.以s1(s2)表示s1(s2)中以原有顺序匹配的字符子串,显然s1和s2拥有相同的长度m.记参数t为符合s1[i]≠s2[i](1im)的位置i的数目除以2,即调换次数的半值.最终Jaro-winkler相似度定义如式(12)所示.SimJaro(s1,s2)=示例1.以字符串s1=“abcd”和s2=“bade”为例,匹配子串为s1=“abd”和s2=“bad”且m=3,t=2.最终两字符串s1和s2的Jaro-winkler相似度为SimJaro(“abcd”,“bade”)=Levenshtein相似度是通过计算两个字符串的Levenshtein距离得到的.Levenshtein距离又称为编辑距离,是指两个字串之间,由一个转换成另一个所需的最少编辑操作次数.许可的编辑操作包括将一个字符替换成另一个字符,插入一个字符,删除一个字符.例如将kitten转换为sitting包含如下3个编辑操作:sitten(k→s)、sittin(e→i)和sitting(→g).Levenshtein相似度度量如式(13)所示:SimLevenshtein(s1,s2)=1-其中,onum为编辑操作的次数,|s1|和|s2|分别表示两个字符串的长度,Max取最大值运算.示例2.kitten和sitting的Levenshtein相似度为SimLevenshtein(“kitten”,“sitting”)=1-通过表1可直观看出,Jaro-winkler相似度在判断子串包含关系的效果较为明显,但是由于在对比字符相同而序列不同的字符串时,相似度结果偏高如表1示例5,可能造成误判.且由于字符对比受距离限制,因此某些子串换位关系不能准确得出,例如表1示例3.Levenshtein相似度虽然能够处理字符相同而序列不同的情况,但是同样对子串换位关系不能进行有效判别,例如表1示例4.相比较而言,LCS相似度综合判断结果较好,能够有效判断字符串中的子串换位关系.例如表1中的示例3和4.1LiuDong,HanDong2LiuDong,Liu3LiuDong,DongLiu4LiaoDong,Dongliao5LiuDong,LiongDu(2)用户名特征的权重设置在根据用户名特征判断用户身份同一性时,我们需要考虑不同特征的重要程度,即赋予不同用户名特征不同的权重.为了减少计算开销,我们将上述六种用户名特征按照重要性进行分类.用户名中的英文字符具有特定含义,因此我们将英文字符串相似性特征(结合用户名独特性)作为主要特征,而用户名长度特征,字符输入模式特征和字符组合模式特征主要分析的是用户名的格式,因此我们将这3个特征作为次要特征.此外,由于用户名不都含有特殊字符或数字,因此我们将特殊字符特征和数字特征作为辅助特征.我们分别赋予3类特征不同的权重,并在测试集1中进行了实验分析.考虑不同的阈值t,在最优情况下测试结果如图13所示.在主要特征、次要特征和辅助特征的权重设置为0.3、0.1和0.2时得到了最佳准确率(69.42%).(3)针对问题1在对两用户名是否属于同一用户的判定问题上,我们首先将本文提出的方法与其他研究者的方法进行了对比.其中文献[11]的方法利用5-gram模型分析用户名的独特性,继而采用编辑距离度量两Page11个用户名的相似度.文献[13]提出的MOBIUS方法总结了用户名潜在的多种特征,进而对这些特征的重要性进行分析,指出top10特征便能得到接近最优的结果.各种方法的准确率如表1所示.由表2可以看出,本文提出的综合多个用户名特征的方法较方法[11]提升了平均12.23%的准确率,而较文献[13]也有小幅度的准确率提升(测试集1和2).这说明本文提出的用户名特征的数目虽然少于文献[13]中的top10,但是这些用户名特征(结合直观特征和对比特征)更能够反映出用户的真实个性特点和身份特征.此外,这两个对比方法的准确度较文献[13]中的实验结果下降明显,这是因为本文测试集中的用户名对均为同属于一个所有者但彼此不相同的用户名,而文献[13]没有排除用户名相同的情况(在用户名相同时,用户名特征显而易见也完全相同).方法文献[11]的方法文献[13]的方法top10特征,SVM本文方法(4)针对问题2首先,我们随机挑选了1百万同属于一个所有者的用户名对作为测试集4,即问题2中的用户名集合U,并在其中随机挑选了1千用户名组成了已知(给定)用户名集合Uk.在问题2中,u∈Uk.如5.2节所述,给定用户名u,在用户名集合U中查找其所有者的其他用户名时,我们首先需要对U进行数据约简.平均约简率(约简删除的用户名对所占比例)和包含率(约简后的候选用户名集合中包含待查找用户名的比例)如图14所示.其中约简率和包含率随着参数ε的变化有着相反的变化趋势,显然当约简删除的用户名数目越多,候选用户名集合中包含带查找用户名的几率也随之下降,即丢失率(true-negative)上升了.因此我们需要根据待查用户名集合U的规模,灵活调整参数ε的值以获得准确性和计算开销的平衡.例如,当U规模较大时,可以适度减小ε的值,进而可以约简更多无意义的用户名对比,从而减少了计算开销.在候选用户名集合Uc中查找与给定用户名u拥有相同所有者的用户名时,我们将u与Uc中的每个用户名进行对比,在此仅考虑包含待查用户名的候选用户名集合.沿用测试集4并将参数ε设置为0.2,采用5.2节提出的top-k判断方法对本文提出的同一所有者的潜在用户名查找方法进行分析,结果如图15~图17所示.可见随着判定阈值的提升,精确率也相应提升,而召回率则有了明显下降.这主要是因为当阈值提升时,通过比较用户身份同一性判定函数值能够得到较为准确的用户名对比结果,但是随着阈值提升,即判定条件越苛刻,查找得到的正确用户名对的数量也相应减少了,从而使得召回率下降.通过F1值得变化趋势分析,3.5~4.0似乎是一个较为合理的阈值区间.注意到即使k设置为7,依据已知用户名u在候选集合Uc中查找其所有者的其他用户名的精确率也在40%左右,考虑到之前数据约简,实际中精Page12确率可能还会降低.但是需要注意的是本问题中潜在其他用户名的寻找是在大规模数据集(本文为一百万用户名对)中进行的,因此虽然精确率稍低,但是本文提出的用户身份同一性判定方法仍然很有价值,如果结合用户其他可用信息,那么将会得到更好的判定效果.7总结针对网络中用户个人身份信息较难获取的情况,考虑到用户名通常能够反映出所有者的个性特点或身份特征,本文提出了仅依靠用户名特征对用户身份进行同一性判定的方法.首先对用户身份同一性判定问题进行了形式化描述,并提出了一种基于用户名特征的解决框架.进而从多个角度提取了用户名的隐含特征,将其归纳为直观特征和对比特征两类,并在大规模用户名数据集上对这些特征的概率分布进行了量化分析.基于用户名特征提出了用户身份同一性判定两个问题的解决方法,包括对指定用户名对是否属于同一用户进行判定的分类方法,以及给定单个用户名时,在用户名集合中查找用户潜在其他用户名的数据约简和检索方法,并对算法的复杂度进行了分析.通过大规模真实数据集上的实验验证,本文提出的基于用户名隐含特征的用户身份同一性判定方法能够对互联网中用户身份鉴别提供有效支持.在下一步工作中,我们会结合用户在其他方面的特征,例如发布文本的内容特征和发帖时间所反映的时序特征等,对用户身份同一性判定问题进行更为深入的研究.
