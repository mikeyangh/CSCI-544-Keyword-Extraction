Page1时间感知的Web搜索研究1)(中国科学技术大学计算机科学与技术学院合肥230027)2)(中国科学院电磁空间信息重点实验室合肥230027)3)(西南科技大学计算机科学与技术学院四川绵阳621010)摘要如何利用时间信息改善Web搜索效果是近年来的一个研究热点,这是因为大多数的Web网页都包含有时间信息,同时许多Web查询也含有时间查询词.文中围绕时间感知的Web搜索需求,重点研究了两个方面的问题,即查询时间词扩展和时间感知的搜索结果排序,提出了基于查询词和时间词共现关系的查询时间词扩展算法,以及结合了文本相关度和时间相关度的时间感知排序算法.作者建立了一个时间感知的Web搜索原型系统,并在大规模真实数据集上进行了实验.实验结果表明作者提出的算法在搜索效果上有明显的改善,并且具有较好的时间性能.关键词时间词扩展;Web搜索;时间感知排序1引言时间在许多研究领域都扮演着很重要的角色,Page2间表达式的不同展现形式以及Web网页存在的大量时间信息使Web搜索领域的研究产生了几个难题:(1)查询时间词扩展问题:如何确定一个查询的时间查询词?这一问题的主要挑战在于很多时候用户在进行Web搜索时并不会主动提供显式的时间信息.因此如何挖掘用户的时间查询需求,并将时间查询需求以时间词的方式扩展到用户查询中,这是时间感知Web搜索中需要重点研究的一个问题.(2)时间感知的搜索结果排序问题:如何将网页中的时间信息整合到Web搜索结果的排序中?搜索结果的排序是决定Web搜索效果的关键因素.在时间感知的Web搜索中,不仅需要考虑查询中的时间信息[1-2],还要考虑网页中的时间信息,并通过考虑查询与网页之间的时间相关性来提升时间相关的Web搜索效果.针对第1个问题,一种方法是对大量用户的查询日志进行分析,得到和查询相关的时间词进行扩展,但这种方法对于最新的事件查询效果较差,因为新的时间在查询日志中的查询相对较少.针对第2个问题,即时间感知的排序,难点在于如何确定时间之间的相似度.由于查询和文档中都可能包含多个时间表达式,时间相似度就是需要考虑每一对查询和文档的时间表达式之间的相似度,其中还需要考虑时间信息之间的相交关系和时间词本身的重要程度.已有的研究大多数只考虑了网页的创建时间,往往难以准确地反映网页的时间信息.本文围绕时间感知的Web搜索需求,主要研究上述的查询时间词扩展问题和时间感知的搜索结果排序问题.为了解决并验证以上问题,我们实现了一个时间感知搜索的原型系统(Time-AwareSearchEngine,TASE)[3].该系统的基本架构如图1所示.该系统集成了时间感知查询和查询时间词扩展的模块,可以为时间感知搜索的相关工作提供实验平台.本文所提出的在这篇文章中,基于上述搜索原型系统我们对多个算法进行了实验.本文的主要贡献可以总结为以下几点:(1)提出了一个对查询进行查询时间词扩展的方法,该方法利用查询词和时间词在文档中的共现关系来确定和查询相关的时间词,这样对于未提供时间词的查询可以给用户推荐一些相关时间限制词.(2)针对时间文本查询我们提出了一个改进的时间感知排序算法,该算法结合了查询和文档之间的文本相关度和时间相关度,能够更好地评价查询与网页的相关性.(3)实现了一个时间感知搜索的原型系统,并在该系统上基于真实数据集开展了对比实验,验证了所提出的算法的有效性.2相关工作时间感知排序是利用查询和文档中潜在的时间意图来改进Web搜索的结果,时间感知排序方面的研究主要包括时间信息的抽取和利用该时间信息来回答有时间依赖的查询.最近的研究表明在Web搜索中大量的查询中包含时间信息,有些时间关键词是显式的时间表达式[1],有些时间信息是查询中潜在的时间语义[2].Li和Croft[4]把时间信息整合到语言模型中(Time-BasedLanguageModel),其实现方式就是给文档赋予一个先验的概率,该先验概率是一个随着文档发布时间的变长而指数递减的函数,他们旨在解决面向最近查询的问题,以至于最近发布的文档具有更高的相关概率.Diaz和Jones[5]也利用文档的创建时间来分析搜索引擎返回的候选文档集合的时间概率分布,根据这样的概率分布来确定这个查询潜在的时间语义,他们的实验表明结合查询的潜在的时间信息和文档的内容能够提高检索的平均准确率.Kanhabua和Nrvg潜在时间词,在他们的方法中,3种不同的方法来确定一个查询可能的时间,然后通过考虑不确定性和不考虑不确定性的模型对时间查询结果进行重排序,把和查询包含的时间语义最相关的文档的相关度得分进行提高.这些方法的一个主要局限性就是Page3他们只考虑了文档的发布时间,而不考虑文档的内容时间,这样就忽略了文档中包含的大量的有价值的时间信息.文献[1,7]中考虑了网页的内容时间.Berberich等人[1]把时间信息整合到查询似然的语言模型中,它考虑了查询和文档的时间信息的不确定性,也就是说查询和文档的时间信息在有交集的时候两者就有时间相似性权重,而不需要两者完全相等时才有时间相似性权重,在这一方面我们的工作和他们的工作具有相同点,即我们都把网页的内容时间引入到排序中来改善时间相关检索的性能.Li等人[7]提出的方法是把网页中每个关键词都赋予一个和它最相关的时间词,然后基于这样的一个关键词-时间词的配对集合,他们提出了一个时间增强的语言模型.在这些研究中,所有网页的内容时间相对于网页来说都被认为有一致的权重,即他们没有去区分确定网页中哪一个时间对于网页来说更加的重要.与前面介绍的研究不同的是,Metzler等人[2]提出了一个直接从查询日志中挖掘和查询关键字词相关的时间信息的方法,他们的方法并没有去分析网页的发布时间和内容时间.这里他们限定和查询关键词相关的时间信息是以年为粒度的,而对于其他的时间粒度并没有进行支持,利用查询日志的方法的另外一个缺陷就是对于新网页来说,查询日志里包含的信息比较好,不能做很好的预测.在文献[8-10]中,Campos等人根据搜索引擎返回的网页快照进行分析,通过抽取并分析网页快照片段中的时间信息,对查询结果进行分类,另外,他们还分析了这些时间信息和查询词之间的相关性,用于识别用户的隐式时间意图,他们只是利用了搜索引擎返回的网页片段,而没有对网页全文进行分析,从而丢失了许多有用的信息,而且他们只考虑了年这个时间粒度,对于其他粒度的时间信息未予考虑.3查询时间扩展在本章中,我们将介绍在用户进行查询时查询时间词扩展的相关技术和实现,要进行查询时间词的扩展是因为在很多时候Web用户在进行查询操作的时候,用户可能并不知道他所需要查询的确切的时间区间或时间点,也就是说用户不能够显式的提供和查询相关的查询时间词,这里我们将会介绍如何在文档中挖掘潜在的查询相关的查询时间词.3.1候选句子的获取在文档中,我们认为要是有一个关键词和某些时间词相关的话,那么在海量文档中该关键词一般都会和这些时间词在同一个句子中一起出现.因此,在时间词扩展的时候我们主要针对包含时间词的句子进行处理,得到和查询词相关的时间词.针对一个查询Q,我们将按照图2的流程得到候选句子的集合S.首先,我们在原始的文档集中对查询Q进行查询,得到Top-k个初始的查询结果,然后对这k个文档进行时间词抽取以及分句的处理,保留包含时间词的句子,得到候选的句子集合S,如式(1)所示.集合S中每个句子由时间词和文本关键词组成,如式(2)所示,其中,t-temp表示句子中的时间词集合,t-text表示句子中普通关键词的集合.3.2权重矩阵在本节中,我们将定义两个权重矩阵,即词项-句子矩阵犃和时间-句子矩阵犅,如图3所示.词项-句子矩阵犃用来表示每一个词和每一个句子之间的权重关系,它和词项在句子中出现的频率和句子的新鲜度相关,句子的新鲜度是指句子中的时间词离当前时间越近,句子越新鲜.时间-句子矩阵犅用Page4来表示每一个时间词和每一个句子之间的权重关系,它和时间词的类型(显式时间、隐式时间)以及时间词的粒度(年、月、季度等)相关.如式(3)~(5)所示,对于词项-句子矩阵犃,wij表示词项ti在句子Sj中出现的频率和句子Sj的权重的乘积.而句子权重wS在文档的发布时间来决定.wSj=flen(Sj)×fdct(Sj)=flen(Sj)×eλ×|tc-tsflen(Sj)=其中,tfti前的时间,离当前时间越近的fdct(Sj)的值越大,则句子的权重越大,而且我们认为长句子(句子的长度大于20)具有较高的权重.如式(6)~(9)所示,对于时间-句子矩阵犅,wij由句子Sj中的时间词tempi的时间类型和时间粒度来决定.即wij=focc(tempi,Sj)×ftype(tempi)×fgran(tempi)(6)focc(tempi,Sj)=ftype(tempi)=fgran(tempi)=以上几式表明如果时间词tempi不在句子Sj中出现,则其权重wij为0,并且显示时间词的权重比隐式时间词的权重高,时间粒度为天和月的时间词和其他时间粒度的时间词的权重要高.3.3扩展时间词的确定这里,如式(10)所示我们可以将一个查询Q表示成一个由词项集合组成的向量形式.如果查询Q包含词项ti,则wti=1,如果查询Q不包含词项ti,则wti=0.根据以上的相关定义,我们可以根据式(11)计算与查询Q相关的时间词的权重.犙temp=[wtemp1值越大,表明时间词tempi和查询Q的相关性这里wtempiwtempi越大.因此,可以根据wtempi排列,排在前面的几个时间词可以作为查询Q的扩展查询时间词,可以让用户选择选用哪个时间词进行查询,也可以结合这些扩展的时间词进行再次检索,把时间相关的查询结果返回给用户.4时间感知的排序我们首先介绍文档的时间表示模型,然后讨论时间相似度算法,最后,基于时间相似度计算查询与文档的时间相关性并结合文本相关性对网页搜索结果进行重排序.4.1时间表示模型一个时间表达式或者一个文档的发布时间可以根据式(12)表示成一个四元组[1].其中tbl和tbu分别表示一个时间区间的开始时间点的下界和上界,相应地,tel和teu分别表示该时间区间的结束时间点的下界和上界.例如,时间表达式“2013年3月”可以表示为(2013/03/01,2013/03/31,2013/03/01,2013/03/31).一个文档d由文本部分dtext和时间部分dtime组成,其中dtime由文档的发布时间PubTime(d)和文档的内容时间ContentTime(d)组成,ContentTime(d)可以表示成{t1,…,tk}.一个时间查询q由文本关键词qtext和时间关键词qtime组成.在时间感知的检索过程中存在两种模式:(1)包含模式(inclusive)和(2)不包含模式(exclusive).对于包含模式,查询的文本关键词qtext由查询中的文本词和时间词共同组成,对于不包含模式,查询的文本关键词qtext只由文本词组成,而不包含时间词.因此,对于一个用户输入查询“航天飞船1981年4月12日”,在包含模式中qtext表示为{航天飞船1981年4月12日},而在不包含模式的情况下表示为{航天飞船}.4.2时间相似性我们的方法的表示基于论文[1]中提出的方法,在我们的方法中,我们结合了网页中时间信息和网页的相关度的得分.在这里我们先介绍一下他们的方法,在他们的方法中考虑了两种模型,一个是不考虑时间不确定性的模型(Uncertainty-IgnorantLanguageModel,LMT),LMT模型中查询时间和文档时间对的相关度计算如式(13)所示.其中td∈ContentTime(d),只有当tq和td完全相等Page5的时候相似度得分才为1,即满足条件(tbl=qbl)∧(tbu=qbu)∧(tel=qel)∧(teu=qeu)时才为1.另一个模型是考虑不确定性的模型(Uncer-tainty-AwareLanguageModel,LMTU),LMTU模型中考虑了查询时间词tq和文档时间词td的所有可能情况的交集.因此LMTU中查询时间和文档时间的相关度计算如式(14)和(15)所示,其中在文献[1]中详细地阐述了|T|的快速的计算方法.其中td∈ContentTime(d),|tq∩td|可以表示为|tq∩td|=(max(tbl,qbl),min(tbu,qbu),则时间相关度S(qtime,dtime)可以根据式(16)通过计算查询中每一个时间表达式和文档中每一个时间表达式之间的相关度得分的综合得到.S(qtime,dtime)=∏t基于上面的时间相似性计算公式,我们引入我们之前工作[11-13]中的方法来确定网页中的时间表达式和网页的相关度得分Score(T),这样在计算时间相似性的时候就能区分不同时间对于网页的重要性,在我们的方法中,我们在计算查询时间表达式tq和文档中时间表达式td相关度的时候采用式(17)和(18)的方法进行计算.P(tq|td)ELMT=P(tq|td)ELMTU=Score(td)·在上面的公式中,tq是查询中qtime中的一个时间,td是文档中dtime中的一个时间,Score(td)是时间td和文档d的相关度得分,分数越高表示时间td对于文档d越重要.ELMT(EnhancedLMT)是一个不考虑时间不确定性的模型,相应的ELMTU(EnhancedLMTU)是一个考虑时间不确定性的模型.4.3网页的重排序为了使搜索引擎具有时间感知的能力,需要整合查询和网页的时间相关度的得分来确定一个查询和一个网页的最终的相关度得分,根据该得分对网页进行重排序.之前的研究[1,14]的一种方案就是把时间相似性整合到相应的语言模型中,文献[15-16]把通过混合模型线性的将时间相似性引入到概率模型和向量空间模型中.在本文中,我们把原始的文本相似性得分S(qword,dword)和时间相似性得分S(qtime,dtime)进行线性求和,在线性求和之前文本相似性得分和时间相似性得分都要进行归一化,例如,所有的相似性得分都除以TopK个文档中相似性得分最高的分值.对于给定的时间查询q,文档d将根据式(19)的得分公式进行重排序.其中参数α来调节文本相似性和时间相似性的重要程度.5实验与分析5.1实验设置我们的实验数据集来源于新浪网新闻网页和纽约时报网站上抓取的真实的数据.新浪网数据集包含了2012年全年和2013年第一季度的新闻网页集合,总共包含198360个网页.纽约时报包含1812933个网页,网页的发布时间在1981年到2011年之间.其中包含各个领域的新闻文章,如商业,体育等.我们利用这个数据集来构建简单的检索系统,在本文中,我们使用ApacheLucene3.5.0来构建索引,其中原始的文本相似性可以由Lucene提供的函数得到.在这篇文章中,我们实现了6种不同的时间感知的排序算法,即LMT、LMTU、ELMT、ELMTU、TS[6]和TSU[6],其中前面4种算法在第4节中已经进行了介绍,这里我们将对TS和TSU算法进行简要的介绍.TS算法没有考虑时间的不确定性,因此P(tq|td)TS采用和P(tq|td)LMT一样的计算方法,但是td对应的是网页的发布时间,而不是网页的内容时间.和TS算法一样,TSU利用的也是网页的发布时间,另外它还考虑了时间的不确定性,P(tq|td)TSU使用如式(20)和(21)所示的一个指数衰退函数来计算.|tq-td|=|tbql-tbd其中td=PubTime(d),DecayRate和λ是常数,0<DecayRate<1并且λ>0,μ是一个时间单元的长度,其中心思想就是tq和td的相似性得分随着它们Page6之间的距离增大而减小,距离越小,时间相似性越高.5.2查询时间扩展实验结果与分析我们利用新浪网的数据集来验证我们查询时间扩展的算法的有效性.首先使用Lucene对该数据建立索引,对于查询Q,我们利用文本相关性得到前50个网页集合,根据本文的算法处理得到这些网页中包含时间词的句子集合.根据文献[4]中的实验我们在算法中句子新鲜度的参数λ取值为-0.02.我们选取了常用的事件词作为查询关键词,如表1所示,我们列出了部分的查询关键词.在表2中我们用“地震”为例展示了我们查询时间扩展算法计算得到的前10个查询时间扩展词,这10个查询时间扩展词中有9个是和地震这个事件相关的时间词,其中一个不正确是由于网页中会穿插一下新闻报道的时间以及同一个句子中有时会出现两个相对独立的事件造成的.2013年2月19日2012年8月12日18时47分2012年8月31日20时47分2012年9月1日2013年2月18日2013年2月19日当天2012年9月22日2013年1月19日22时56分2013年1月9日2013年1月9日15时26分04秒我们对所有选取的查询关键词的查询时间扩展词的前10个结果进行统计扩展词的准确率,表3中统计了这些查询时间扩展词在P@1、P@5和P@10上的平均准确率,实验结果表明我们的算法能够取得较高的准确率,对于用户选取所需的查询时间词具有较大的帮助.要是对于更大的数据集,和事件比较相关的时间词就能出现得比较多,小部分不太符合规范的句法对结果的影响也会随之减小,实验的结果会更好一些.5.3时间感知排序实验结果与分析在这一节中,我们将讨论不同时间感知排序算法的性能,所有的排序算法都使用同样的查询和同样的数据集,即我们抓取的纽约时报的数据集.我们选取了30个时间敏感的查询,表4列出了其中部分的查询.kurtcobainmickeymousedallasmavericksobamabostonredsoxmichaeljacksonmuammarqaddafiiphone4thomasedison在我们的原型系统中,我们使用包含模式(inclusive)并且只考虑文本相似性的算法作为基准算法,表示为TFIDF,其中文本相似性在我们的方法中使用由Lucene得到的文本相似性得分.针对每一个查询,我们使用7种不同的算法(TFIDF,ELMT,ELMTU,LMT,LMTU,TS和TSU)以及后6种算法对应的两种查询模式(“包含模式”和“不包含模式”)对搜索结果进行重新排序,我们对每种情况下在排序结果前20个文档进行相关性判定.我们采用P@5、P@10、P@20和MRR来评价排序性能.在我们的实验中存在多个可调节的参数,包括用于重排序的候选文档集的大小、TSU算法的参数以及文本相似性得分和时间相似性得分的权衡因子α.我们比较了用于重排序的不同文档候选集大小(50、500和1000)对实验结果的影响,实验结果表明用于重排序的文档候选集为1000时能取得较好的实验结果,因此在我们的系统中针对每种算法我们都对前1000个搜索结果计算他们的文本相关性和时间相关性,然后进行重排序.TSU算法的参数采用和原算法的参数一致,即DecayRate=0.5,λ=0.5和μ=6个月.而权衡因子α,我们针对10种不同的取值(0.1,0.2,…,1.0)进行比较,当α取值为0.1时表示我们几乎不关注时间相似性,主要由原始的文本相关度来决定重排的结果,相反地,当α的取值为1.0的时候表明我们在重排的时候仅仅考虑时间相似性.图4和图5显示了用P@5评价方法不同的算法随着α取值的变化时排序性能的变化.P@10、Page7P@20和MRR的结果和P@5类似.可以看出,不同的算法基本上都有一个共同点,即当α在一定的取值范围内检索的性能会随着α变大而变大,当α的值超过了一定的值后,检索性能会随着α的增大而变小,这就说明了对于时间感知的查询过多或过少的考虑时间相似性都会给检索性能带来负面的影响.表5显示了不同算法在最优参数下的检索结果.从表中可以看出,所有的时间感知排序方法都比图4在包含模式下P@5随权衡参数α的变化图5在不包含模式下P@5随权衡参数α的变化算法TFIDFELMTELMTULMTLMTUTSTSUELMTELMTULMTLMTUTSTSU不考虑时间相似性的基准算法的结果要好,我们的方法(ELMT,ELMTU)对比于其他的算法在大多数的情况下比其他的算法性能好,这表明区分网页中时间表达式的重要程度有利于提高时间相关检索的检索性能.我们可以看出,实验中的各个时间感知的算法的准确率还不够高,一方面是由于本实验中使用从纽约时报网站中抽取的新闻网页作为数据集,网页的数量相对于互联网的海量资源还有很大的差距,搜索返回的结果中相关网页的个数是比较有限的;另外,我们实验中是对初始的根据文本相关度返回的搜索结果进行重排序的,在这一步中可能会漏掉一些相关的文档,这对时间感知排序算法的准确率也有一定的影响.6结束语时间是信息的重要维度,已成为Web搜索近几年研究的一个重点方向.本文研究了时间感知Web搜索中的两个关键问题:查询时间词扩展和时间感知的搜索结果排序.我们提出了一种基于查询词和时间词在文档中共现关系的查询时间词扩展算法,以及一种结合文本和时间相关性的搜索结果排序方法.为了验证算法性能,我们构建了一个时间感知搜索的原型系统,在该系统上我们实现了多个时间感知的查询排序算法,并基于真实的新浪网新闻网页上进行了实验.实验结果表明,我们的查询时间词扩展算法具有较高的准确率,能够给用户提供准确可用的和查询关键词相关的时间词.另外,在纽约时报的数据集上进行的实验表明了我们提出的考虑网页中时间词对于网页具有不同重要程度的想法能够改进时间感知排序算法的有效性.在下一步的工作中,我们将着重考虑如何使时间信息更好地结合到搜索引擎的其他模块中,例如网页的索引.此外,我们还将研究时间信息在其他Web相关领域中的应用,例如Web网页的自动摘要、问答系统、个性化推荐系统等.
