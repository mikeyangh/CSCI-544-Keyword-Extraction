Page1Web服务流程的结构范式及其判定算法胡强1)杜军威1)杜玉越2)1)(青岛科技大学信息科学技术学院山东青岛266061)2)(山东科技大学信息科学与工程学院山东青岛266590)摘要服务组合是一种利用已有Web服务构建新的增值服务的有效方法,然而当前缺乏对组合产生的服务流程进行结构健壮性层次划分和判定的准则.针对上述问题,提出Web服务流程结构范式,从路径的可达性和结构冗余性两个角度将结构范式划分为四个层次.基于逻辑Petri网建模服务流程为服务网,将服务流程结构范式的判定转化为对服务网组成结构的分析.在服务网的基础上构建控制流网,从而将服务流程中的控制流和数据流进行分离.定义了控制流网语言,并提出一种通过约简求解控制流网语言的方法.通过对控制流网语言中字符序列组成结构特征的分析,获取服务网的结构性质,完成对服务流程结构范式层次的判定.给出了服务流程结构范式的定义、判定定理以及算法,并通过实例验证了文中方法对流程结构范式进行判定的可行性和有效性.关键词Web服务;结构范式;逻辑Petri网;服务网;健壮性1引言随着云计算、物联网以及移动互联网等新一代信息技术的成熟与应用的普及,软件开发和交付模式呈现出明显的服务化特征.作为一种成熟的服务计算实现模式,Web服务是SOA模式软件开发的首选.Web服务在网络化软件的构建中存在两种使用方式:原子Web服务调用和组合Web服务流程.通过组合产生的服务流程可以应对一些复杂的服务请求,对于给定的服务请求和一组原子服务,采用不同组合方法可以得到不同组合模式的服务流程,这些服务流程在结构的分支连通性、冗余性以及逻辑正确性等方面存在差异,本文将上述反映流程结构差异的特征称为服务流程的结构健壮性.现有研究工作中通常以工作流网的健壮性[1]为基础,提出一种新的约束规则,从流程中路径的可达性方面对结构健壮性进行评价.然而,在一些特定的应用场景下,并不要求服务流程中所有的服务路径均可正确执行,只要某些特定服务路径可达即可.因此,仅以服务流程中路径的可达性来定性地判定一个服务流程结构的健壮性是不合理的.服务流程的结构健壮性不仅要考察流程中路径的可达性,也需要考虑流程结构中是否存在冗余等特征.因此,本文提出对流程结构健壮性进行层次划分的思想,从路径可达性和结构冗余性两个角度将流程的结构健壮性划分为不同的层次级别.通过建立流程的结构健壮性层次划分准则及判定方法,可以有效地对服务流程的结构质量和可用性进行评价,进而有助于改进服务组合的合理性.借鉴关系数据库中的范式概念,将Web服务流程的结构健壮性层次划分准则定义为流程的结构范式.为了对服务流程的结构健壮性进行层次划分和判定,需对流程进行形式化建模,目前常用于Web服务建模的形式化工具主要有Petri网[2-4]、随机Petri网[5-6]、自动机[7-8]、描述逻辑[9]、进程代数[10]以及LTS(LabeledTransitionSystem)[11]等.Petri网作为一种图形化的建模方式,直观简洁且具有良好的数学推理分析方法,但在描述和分析复杂服务流程时存在状态空间爆炸问题.进程代数则过于符号化,直观性稍差;描述逻辑在服务描述及组合中的推理过程较为繁琐.自动机以及LTS与Petri网类似,但数学推理和分析能力稍显不足.逻辑Petri网(LogicPetriNet,LPN)是在普通Petri网的某些变迁中添加逻辑表达式而得到的一种高级Petri网,其描述能力等价于带抑制弧的Petri网[12].通过合理设置逻辑表达式,可有效地缩减建模时产生的网规模,且具有良好的建模结构性,适合对Web服务流程建模[13].本文采用逻辑Petri网作为流程描述工具,将Web服务流程建模为服务网,基于服务网中的可触发变迁序列结构性质,分析Web服务流程的结构特征,进而划分相应结构范式,并给出判定算法.2相关研究现有的成果中以服务流程的结构健壮性为主题的研究相对较少,研究者通常对流程结构的某些局部性质进行挖掘和验证.例如Benatallah等人[14]通过构造完全交互树来判定业务流程之间的互操作是否匹配.Xiong等人[15]利用Petri网对服务流程组成服务之间的交互行为做了分析,提出了若干种交互失配模式及其判定算法.Tan等人[16]利用随机Petri网定义了抽象工作流网,对Web服务流程建模,提出了一组流程结构化简规则,并对流程性能进行分析和评估.Mansour等人[17]对组合服务流程的事务性和可靠性进行了研究,并提出了相应的容错解决方案.Mateescu等人[18]从软件实体复用和组合的角度,利用状态图生成软件实体之间的会话适配器,并将其应用到Web服务交互协调过程中.邓水光等人[19]将Web服务之间的交互行为描述为π演算进程,利用π演算的操作语义对服务行为的兼容性进行推演和验证.李喜彤等人[20]采用颜色Petri网建模Web服务流程,并利用通信可达树对组合后的服务流程的逻辑正确性进行验证.宋巍等人[21]综合考虑服务流程中的控制依赖、数据依赖、交互依赖以及异步调用依赖,基于程序依赖图分析了BPEL服务流程的可替换性.雷丽晖等人[22]采用扩展自动机验证服务流程执行过程中可能存在死锁或活锁等逻辑错误.在流程结构健壮性方面,Clempner[23]提出了一种基于轨迹跟踪的方法去检测工作流网或业务流程中健壮性的规则.Du等人[24]利用Petri网对流程的组成服务之间的交互行为做了分析,并给出一种新的流程合理性判定标准.Martens[25]提出了一种基于工作流网定义的弱健壮性概念,并在弱健壮性概念的基础上给出流程可用性的判定准则,进而判断服务的交互兼容性和可替换性.Groefsema等人[26]在对业务过程模型的控制流进行分析时,将流程的健壮性定义为流程中不存在死锁和同步缺失.vanPage3derAalst等人[27]在对业务流程的健壮性进行评价时,提出弱良好、k良好以及最大k良好3个级别,并结合工作流健壮性的定义给出了不同级别流程健壮性的判定方法,该工作虽然对健壮性进行了层次划分,但所涉及到的3个层次的健壮级别仅仅是工作流健壮性3个条件的不同表述.上述研究大多是选取了流程结构中的某一性质进行分析或验证,特别是在健壮性方面鲜有分层评价的工作.为了合理评价流程的健壮性,本文从流程中的路径可达性和结构冗余性两个角度分析Web服务流程的结构健壮性,借鉴已有工作中在流程结构性质验证和健壮性分析方面取得的成果,建立起Web服务流程的结构健壮性层次划分准则及其形式化判定方法.3Web服务流程建模3.1逻辑Petri网简介采用逻辑Petri网描述的系统模型结构良好且规模较小,文献[28]中给出了一个应用实例,相比传统Petri网建模,网模型中变迁、库所以及可覆盖性树中的结点分别缩减了57.1%、19.2%和50.0%.在前期研究中,已将逻辑Petri网应用于实时协作系统[29-30]、E-Commerce工作流[31]、网上股票交易系统[32]以及Web服务流程的建模[13]与分析.下面给出Petri网、逻辑表达式以及逻辑Petri网等相关概念的定义.定义1.Petri网是一个四元组集合Σ=(P,T;F,M),其中P是库所集合,T是变迁集合,且P∩T=;F(P×T)∪(T×P)称为Petri网的流关系,映射M:P→{0,1,2,…}是Petri网的标识.若p∈·t:M(p)1,则称t在M是下使能的,记为M[t〉;若M[t〉M,则对于p∈P,M(p)可通过以下公式计算:定义2.Σ=(P,T;F,M)为一Petri网,x∈P∪T是Σ中的一个结点,·x={y|(y,x)∈F}称为x的前集;x·={y|(x,y)∈F}称为x的后集.特别定义操作π获取网中结点的前集和后集,令π1(x)=·x,π2(x)=x·.定义3.P={p1,p2,…,pn}是一个布尔变量集合,f=p-上的逻辑表达式,其中Δij∈{∨,∧},∨与∧分别为逻辑析取与合取运算符,p-ij=pij或pij,pij∈P,为逻辑非运算符,1ijp-n,记为f=δ(Δ,珚P),Δ和珚P分别为Δi1…Δij-1Δij…Δim-1和p-组成元项的集合标记为Ωf.定义4.P={p1,p2,…,pn}和Q={q1,q2,…,qn}为两个布尔变量集合,λ为一个映射函数:λ(P)→Q.f=δ(Δ,珚P)为P上的逻辑表达式,令PΩf,对p∈P,利用λ(p)替换p,得到逻辑表达式f,f称为f的函变替换,记为f=Ψ(f,P,λ).例如,假设P={p1,p2,p3,p4}与Q={q1,q2,q3,q4}为布尔变量集合,且存在映射λ满足pi∈P:λ(pi)=qi(1jn).令f=p1∧(p2∨p3),P={p2,p3},则f=Ψ(f,P,λ)=p1∧(q2∨q3).定义5.设LN=(P,T,F,I,O),LPN=(LN,M)称为一个逻辑Petri网,其中:(1)P是一个有限库所集合;(2)T=TD∪TI∪TO是一个有限变迁集合,且T∪P≠,t∈TI∪TO:·t∩t·=,其中①TD为一个传统Petri网变迁集合;②TI为一个逻辑输入变迁集合;t∈TI,t的触发受其输入库所集上的逻辑表达式fI(t)的约束,即fI(t)中的谓词变量包含t的所有输入库所,称fI(t)为逻辑输入表达式;③TO为一个逻辑输出变迁的集合;t∈TO,t触发后的结果受其输出库所集上的逻辑表达式fO(t)的约束,即fO(t)中的谓词变量包含t的所有输出库所,称fO(t)为逻辑输出表达式;(3)F(P×T)∪(T×P)是一个弧的集合;(4)I是一个从逻辑输入变迁到逻辑输入表达(5)O是一个从逻辑输出变迁到逻辑输出表达(6)M:P→{0,1}是一个标识函数;(7)变迁发生规则:①对t∈TD,变迁发生规则与普通Petri网中②对t∈TI,若fI(t)|M=·T·,即t的输入库所集在标识M下满足t的逻辑输入表达式fI(t),则M[t〉,并且,若M[t〉M,则p∈·t:M(p)=0;p∈t·:M(p)=0,M(p)=1;且p·t∪t·:M(p)=M(p);③对t∈TO,若p∈·t:M(p)=1,则t是使能式的映射,即t∈TI,I(t)=fI(t);式的映射,即t∈TO,O(t)=fO(t);变迁发生规则相同;Page4的,并且,若M[t〉M,则p∈·t:M(p)=M(p)-1;pt·∪·t:M(p)=M(p);且p∈t·:fO(t)|M=·T·,即t的输出库所集在标识M下满足t的逻辑输出表达式fO(t).逻辑Petri网通过附加在逻辑变迁中的逻辑表达式控制网中的流程转移,为了与普通变迁进行区别,在逻辑变迁上添加I或者O表示其变迁类型,图1(a)为一个逻辑输入变迁,(b)为一个逻辑输出变迁.图1中f1,f2,f3以及f4为逻辑Petri网的部分子网流程,(a)中的逻辑输入变迁标注(p1∨p2)∧p3,表示流程f1和f2之一与f3同时完成后即可触发后续流程f4;(b)中的逻辑输出变迁标注p2∧p3∨p2∧p3,表示当流程f1执行完毕后,可以触发且只能触发流程f2与f3之一.3.2服务网及相关概念借鉴工作流网的建模方法[1],采用逻辑Petri网描述服务流程,将Web服务流程建模为服务网,下面给出服务网的定义.定义6.服务网[13]为一个标记LPN,表示为SN=(LPN,i,o,φ,Γ),其中:(1)LPN是一个逻辑Petri网,用于描述Web服务流程的过程模型,具有唯一起始库所i和终止库所o;(2)P=PD∪PI∪PC,PD为外部数据库所集合,用于与外部服务进行数据交互;PI为内部数据库所集合,用于服务流程内部的数据交互;Pc为控制库所集合,用于描述服务流程的转移;(3)T=Ts∪TI∪TO,Ts为服务变迁集合,表示服务流程的所有组成Web服务,TI和TO为逻辑输入和输出变迁集合,用于控制服务流程中的业务流;(4)M称为SN的标识,令M0为初始标识,且(5)φ:T→Γ是一个映射函数,其中Γ表示流程M0(i)=1,p∈P-{p}:M0(p)=0;中的变迁名称集合.为了简化服务网模型,当服务网中的两个服务变迁之间同时存在控制库所和内部数据库所时,将二者合并表示为控制库所.图2为一个服务网,描述了电子商务中买卖双方交易流程,为了清晰描述服务流程,将流程中的服务变迁和数据库所进行编号,具体含义参见表1及表2.变迁IDWeb服务名称t11t12t13t14t15t21t22t23t24t25t26库所ID库所名称p1p2p3p4p5p0服务网中的库所p11~p19以及p20~p29为控制库所,表示流程内部操作状态之间的转换;库所p1~p5由虚线连接,表示内部数据库所及其数据转Page5移关系,库所p0为外部数据库所,表示服务流程需要从外部接受数据,为了区别于其他库所,以双圈进行标识.将服务网中的外部数据库所集合删除后得到的网结构称为服务内网,将服务网的外部数据库所和内部数据库所同时删除,得到的网结构称为控制流网,详见定义7和定义8.服务内网描述了服务流程之间的操作转移及其内部数据交互,控制流网则仅保留了服务流程中的操作转移关系,图3为图2中服务网所对应的控制流网.定义7.若SN=(LPN,M,i,o,φ,Γ)为一个服务网,令LPN=(P,T,F,I,O),其中P=Pc∪PI,T=T,F=F-{PD×T∪T×PD},则称SIN=(LPN,i,o,φ,Γ)为服务网SN的服务内网.定义8.若SN=(LPN,M,i,o,φ,Γ)为一个服务网,令LPN=(P,T,F,I,O),其中P=Pc,T=T,F=F-{PD∪PI}×T∪T×{PD∪PI},则称CFN=(LPN,i,o,φ,Γ)为服务网SN的控制流网.根据Web服务业务流程执行语言及工作流[1]相关知识可知,任意复杂的服务流程可由顺序、并行、选择以及循环4种基本结构组合而成.令t1和t2为两个原子Web服务,由上述4种基本结构表示的服务网如图4所示.本文将由两个原子服务组成的顺序、选择以及并行和一个原子服务组成的循环结构型的服务网称为原子型服务网.并发流程中的逻辑输入和输出变迁对应于工作流[1]中路由构件or-split和or-join,选择流程中的逻辑输入和输出变迁对应于路由构件and-split和and-join,上述逻辑变迁类型分别记为O∧,I∧,O∨和I∨.为规范流程建模,下面给出逻辑表达式的标准型及协同表达式的定义.定义9.F={f1,f2,…,fn}是一组服务网,to和ti是连接F的逻辑变迁,fj:π1(fj.i)={to}且fj:π2(fj.o)={ti}(1jn).将以下形式的逻辑表达式定义为对应类型逻辑变迁的逻辑表达式的标准型.(1)O∨:O(to)=f1.i∧f2.i∧…∧fn.i∨f1.i∧f2.i∧…∧fn.i∨…∨f1.i∧f2.i∧…∧fn.i;(2)O∧:O(to)=f1.i∧f2.i∧…∧fn.i;(3)I∨:I(ti)=f1.o∨f2.o∨…∨fn.o;(4)I∧:I(ti)=f1.o∧f2.o∧…∧fn.o.给定服务网SN,定义运算符来获取逻辑变迁的类型,对任意t∈SN.TI∪SN.TO,(t)∈Lg,Lg={O∨,O∧,I∨,I∧}.定义10.F={f1,f2,…,fn}是一组服务网,to和ti是连接F的逻辑变迁,fj:π1(fj.i)={to}且fj:π2(fj.o)={ti}(1jn).若(to)=O∨∧(ti)=I∨或(to)=O∧∧(ti)=I∧,则称O(to)和I(ti)为协同表达式,记为O(to)◇I(ti).为了便于后文描述,引入符号◆表示两个逻辑表达式为非协同逻辑表达式.若O(to)和I(ti)为非协同表达式,记为O(to)◆I(ti).定义11.SN为一服务网,to∈SN,ti:O(to)◇I(ti)且ti∈SN,to:I(ti)◇O(to),则称SN为良构流程.良构流程的概念被应用于工作流[1]和Web服务流程[20]建模中,良构是指两个流程若以or-split开始分支,则必须以or-join进行流程汇集;若以and-split开始分支,则必须以and-join进行流程汇集,并且匹配的逻辑变迁具有协同表达式.Page6图5为两种非良构流程,其中图5(a)流程中的逻辑变迁没有成对匹配出现,图5(b)流程中的逻辑变迁to1与ti1虽成对出现,但二者标注的逻辑表达式为非协同表达式.4Web服务流程的结构范式4.1结构范式的定义由于需要协调和管理参与组合的各个Web服务,在组合得到的服务流程中容易存在逻辑结构混乱、路径不可达、数据流交互死锁以及结构冗余等结构不合理的问题.然而,并非所有存在问题的流程均没有利用价值,为了对流程结构的合理性做出更为科学的定量评价,本文提出将已有研究工作中的结构健壮性进行层次划分,建立不同级别的健壮性判定准则.结构范式是在服务网的基础上对流程结构健壮性层次划分准则的一种形式化表达.结构范式可以用来评价服务流程的结构合理性,进而有助于改进服务组合的合理性和可靠性.在服务流程的建模过程中,服务内网描述了删除外部数据请求的服务流程,可以用来判定服务流程的逻辑结构和内部数据交互是否存在缺陷,本文从流程中的路径可达性和结构冗余性两个角度将Web服务流程结构范式划分为四个层次.为了便于描述,令SP表示一个Web服务流程,SN、SIN与CFN分别为SP的服务网、服务内网和控制流网,Gf表示SN的终止状态,即Gf为SN对应M(o)=1标识状态.定义12.若SIN中存在变迁序列σ,使得M0[σ〉Gf,则称SP满足第一范式,记为1NF.定义13.若SP满足1NF,且SIN是无阻塞的,则称SP满足第二范式,记为2NF.定义14.若SP满足2NF,且SIN中无等价子控制流网,则称SP满足第三范式,记为3NF.定义15.若SP满足3NF,且SIN中无重复子控制流网,则称SP满足第四范式,记为4NF.满足第一范式的服务流程中至少存在一条从起始服务至终止服务的连通服务流程路径,从而可以对外提供服务,这是服务流程结构合理的最低层次;第二范式要求服务流程是无阻塞的,即所有潜在的服务流程路径都是可以到达并正确地执行,无阻塞服务网参见定义16.第三范式要求流程中不存在等价服务流程,等价服务流程(定义17)是指在流程的选择和并行结构中存在两段功能等价的子服务流程.等价服务流程的出现造成了服务网结构的冗余,并可引发服务网语义表达错误.例如,一个服务网的选择结构中出现了两个等价子流程,选择结构会在不同条件下分别执行等价流程中的一个,而这两个流程的功能相同,因此该选择结构是无意义的.第四范式要求在流程中不存在重复服务流程,重复服务流程是指两段完全相同的服务流程,为了流程模型表达的简介,重复服务流程应该被抽象映射为一个子流程结点,有关重复流程的定义可参见定义18.定义16.〈SN,Gf〉是无阻塞的,当且仅当M∈R(M0),σ∈T:M[σ〉Gf.定义17.CFN1=(LPN1,M1,i1,o1,φ1,Γ1)和CFN2=(LPN2,M2,i2,o2,φ2,Γ2)为两个控制流网,称CFN1和CFN2为等价控制流网当且仅当存在映射τ使得如下条件成立:(1)LPN1=LPN2;(2)i1=i2∧o1=o2;ΩI(t),τ);ΩO(t),τ);(1)x∈P1∪T1τ(x)∈P2∪T2;(2)(x,y)∈F1(τ(x),τ(y))∈F2;(3)t∈TI1,τ(t)∈TI2:I(τ(t))=Ψ(I(t),(4)t∈TO1,τ(t)∈TO2:O(τ(t))=Ψ(O(t),(5)t∈TS1,τ(t)∈TS2:φ1(t)φ2(τ(t));若CFN1和CFN2为等价控制流网,则记为CFN1~CFN2.定义18.CFN1=(LPN1,M1,i1,o1,φ1,Γ1)和CFN2=(LPN2,M2,i2,o2,φ2,Γ2)为两个控制流网,对给定正整数n,称CFN1和CFN2为重复控制流网当且仅当如下条件成立:Page7(3)Γ1=Γ2∧φ1=φ2;(4)|LPN1.Ts|n;定义18中(4)要求服务网过程模型中的服务数目大于指定的整数n,是对重复流程中包含的服务数目做约束,即只有大于n时才认为两个服务流程是重复流程;在小于或等于n时,即使两个流程片段完全相同也不被认作重复流程.4.2结构范式的判定4.2.1控制流网语言服务流程的结构范式是根据服务内网中流程路径结构性质进行划分的,为了判定服务流程的结构范式,须获取服务内网中的流程路径,而服务内网中的流程路径对应于控制流网中从起始库所到终止库所的可触发变迁序列.将Petri网的变迁集T映射到某个字母表Γ(每个变迁对应一个字母),该Petri网的所有可能发生的变迁序列映射到Γ的字符串的集合称为Petri网的语言,从Petri网语言可以方便地获取所有可触发变迁序列.传统的Petri网语言求解方法通常是通过遍历Petri网的可覆盖性树或可达标识图获得.当Petri网规模较大时,其对应的可覆盖性树或可达标识图中的状态过多,存在状态空间爆炸问题,因此求解Petri网语言的复杂度过高.为避免上述问题,本文采取合并化简的方法求解控制流网语言(CFN-L),从而获取所有可触发变迁序列,然后再将内部数据库所加入到控制流网,判定这些可触发变迁序列的可达性及其结构性质,进而判定对应服务流程的结构范式.一个控制流网CFN的CFN-L表示为L(CFN),同时将L(CFN)对应的控制流网记为Nsp(L(CFN)).CFN-L求解约简规则如下:从起始库所i开始搜索CFN,令t1为当前处理(1)若t1∈CFN.Ts,t2∈CFN.Ts,则约简为t1t2.(2)若t1∈CFN.Ts,t2∈CFN.To,则t2为逻辑输出变迁,假设其关联子流程Sp1,Sp2,…,Spm,令L(Spi)=si,约简为t1t2s1‖/s2‖/…sm,其中si与si+1之间的连接符‖或由O(t2)中的逻辑运算符映射而得,‖对应∧,对应∨.(3)若t1∈CFN.Ts,t2∈CFN.TI,则t2为逻辑输入变迁,假设其关联子流程Sp1,Sp2,…,Spm,且L(Spi)=si求解完毕,约简为s1‖/s2‖/…smt2,其中t1∈sj,1jm.(4)若t1∈CFN.TI,t2∈CFN.Ts,则约简为t1t2.变迁,t2=π2(π2(t1)):(5)若π2(t1))=o,则约简完毕.(6)由逻辑变迁关联的子流程采取规则(1)~(5)递归约简,若在约简过程中选择和并发结构是非原子型的,对其分支流程产生的CFN-L添加括号以便增加控制流网语言的可读性.例如,令CFN1表示图3中控制流网,则L(CFN1)=O1t23(t24t25t26)I24.2.2相关结构判定定理定义19.ΠX→Y:X→Y称为从X到Y投影,当且仅当σ∈X,ΠX→Y(σ)是将X-Y中所有字符从σ删除后得到的字符串[31].定义20.字符串σL(CFN),若存在字符x,y∈&(σ):(x)∈{O∨,O∧}∧(y)∈{I∨,I∧}∧O(x)◇I(y),则将x和y从σ中同时删除,上述操作称为逻辑熔合,记为Λ(σ).定理1.ε为空字符串,给定控制流网CFN与字符集合Σ=φ(CFN.TI∪CFN.TO),若Λ(ΠΓ→∑(L(CFN)))=ε,则CFN是良构的.证明.假设CFN是非良构,则to∈SN,ti:O(to)◆I(ti)或者ti∈SN,to:I(ti)◆O(to).令σ=ΠΓ→Σ(L(CFN)),则x∈&(σ),对y∈&(σ),不存在O(x)◇I(y),所以x无法被逻辑熔合,即Λ(ΠΓ→∑(L(CFN)))至少包含字符x,这与Λ(ΠΓ→∑(L(CFN)))=ε矛盾,因此假设不成立,CFN是良构的.引理1.顺序型控制流网无阻塞.证明.假设F是由一组服务变迁{t1,t2,…,tn}组成的顺序型控制流网,且F.i=π1(t1),ti:π2(ti)=π1(ti+1),1in-1.令M0(F.i)=1,M∈R(M0),若M(tj)=1,1jn,则σ=tj+1tj+2…tn,使得M[σ〉Gf.因此F是无阻塞的.引理2.良构原子选择型控制流网无阻塞.证明.F是由一组服务变迁{t1,t2,…,tn}与逻辑变迁to及ti组成的良构原子选择型控制流网,即tj:π1(tj.i)={to},tj:π2(tj.o)={ti},且O(to)=t1.i∧t2.i∧…∧tn.i∨t1.i∧t2.i∧…∧tn.i∨…∨t1.i∧t2.i∧…∧tn.i,I(ti)=t1.o∨t2.o∨…∨tn.o.令M0(F.i)=1,M0[to〉M,若to触发后执行tp,则M[tp〉M,M(tp.o)=1,而π2(tp.o)={ti}且I(ti)=t1.o∨t2.o∨…∨tn.o,由LPN触发规则可知M[ti〉Gf,这里1pn.由p取值的任意性可知,F是无阻塞的.Page8引理3.良构原子并行型控制流网无阻塞.证明.方法类似引理2,不再叙述.证毕.引理4.原子循环型控制流网无阻塞.证明.F是由服务变迁t1逻辑变迁ti组成的原子循环型控制流网,且F.i=π1(t1)∧F.o=π2(t1).F中只存在两种标识:M0(F.i)=1与Gf=M(F.o)=1,且M(F.o)=1∧test(F.o)=1时,Gf[ti〉M0,而M0[t1〉Gf,因此F是无阻塞的.证毕.定理2.良构控制流网无阻塞.证明.若F是良构原子选择型控制流网,由引理2知F是无阻塞的,即若M(F.o)=1,则存在σ∈F.T,使得M[σ>Gf,因此F等价于一个服务变迁t.同理,原子并行型与原子循环型控制流网也等价于一个服务变迁.将良构控制流网中的上述3种结构利用服务变迁进行等价替换,最终可获得一个顺序结构的控制流网,由引理1可知,该控制流网是无阻塞的,定理得证.定义21.若服务网中的变迁t连接了发送数据的库所p,则t称为库所p的发送变迁,记作s(p);若服务网中的变迁t连接了接受数据的库所p,则t称为库所p的接受变迁,记作r(p);定义22.SN是一个服务网,C称为从节点n1到节点nk的一条路径当且仅当在SN中存在节点序列〈n1,n2,…,nk〉,使得(ni,ni+1)∈F,1ik.用&(C)表示路径C的字母表,即&(C)={n1,n2,…,nk}.引入符号表示两个字符存在后继关系,在C中,nj称为ni的后继,记作niCnj,当且仅当存在ni,ni+1,…,nj∈&(C),且(ni,ni+1),(ni+1,ni+2),…,(nj-1,nj)∈F.从上述定义和CFN-L的构造规则可知,一个服务网的CFN-L展开得到的语言表达式集合对应于该服务网从起始库所i到终止库所o的所有路径.定理3.假设一个服务内网中存在n条从起始库所i到终止库所o的路径,任取其中的m条路径,编号为C1,C2,…,Cm,若两条路径Ci与Ci+1之间存在内部库所p,使得s(p)∈Ci∧r(p)∈Ci+1,将这些库所命名为集合PiI中任取一个库所,分别记为p1p2…pm,若存在jPm(1jm)使得Cj:s(pj)Cjr(p(m+j-1)%(m+1)),则C1,C2,…,Cm中无环.证明.C1,C2,…,Cm中每条路径中无环,若存在环路,则必定是由C1,C2,…,Cm路径的一部分与p1p2…pm及其连接弧构成,因此路径Ci,pi,r(pi),s(pi+1)以及pi+1之间的流关系必须同向.由于pir(pi)且s(pi+1)pi+1,只有r(pi)Cis(pi+1),路径Ci,pi,r(pi),s(pi+1)以及pi+1之间才存在同向流,即Ci:r(pi)Cis(pi+1)才存在环.C1,C2,…,Cm中若有一条路径不满足上述规则便不存在环,即存在j(1jm)使得Cj:s(pj)Cjr(p(m+j-1)%(m+1)),定理得证.定理4.服务内网SIN是良构并且无环,则〈SIN,Gf〉是无阻塞的.证明.构建SIN的控制流网CFN,因为SIN良构,所以CFN良构,因此CFN是无阻塞的.由于SIN=CFN∪PD×T∪T×PD,即在CFN加入了内部数据库所及其流程关系.对一个处于使能状态下的变迁,增加一个带有托肯的库所将不会影响其使能及触发,因此,若SIN内部数据库均能得到托肯,则SIN中所有变迁的触发性等同CFN,即无阻塞的.根据资源请求死锁判定条件,如果不存在环路等待,则不会出死锁,因此如果SIN中无环结构,则所有数据库所均能获取托肯,此时〈SIN,Gf〉是无阻塞的.定义23.CFN1和CFN2为两个控制流网,令L(CFN1)=x11x12x1i…x1n,L(CFN2)=x21x22…x2i…x2n,当且仅当存在映射θ使得如下条件成立时,L(CFN1)和L(CFN2)称为等价控制流网语言,记为L(CFN1)L(CFN2):(1)t∈T1θ(t)∈T2;(2)φ1(t)φ2(θ(t));(3)x1i=φ1(t)x2i=φ2(θ(t));(4)x1i=‖x2i=‖orx1i=x2i=.定理5.CFN1和CFN2为两个控制流网,若L(CFN1)L(CFN2),则CFN1~CFN2.证明.令L(CFN1)=x11x12…x1i…x1n,L(CFN2)=x21x22…x2i…x2n.因为L(CFN1)L(CFN2),σ1=x1jx1j+1…xm,σ2=x2jx2j+1…xm满足σ1σ2.若σ1与σ2为顺序结构或者循环结构,不涉及逻辑表达式,由于σ1σ2可得:(1)t∈T1θ(t)∈T2;(2)φ1(t)φ2(θ(t));(3)x1i=φ1(t)x2i=φ2(θ(t));令τ=θ,由定义可知Nsp(σ1)~Nsp(σ2).若σ1与σ2为原子选择结构,令σ11σ12…σ1p与σ21σ22…σ2p为二者的组成分支,由于σ1kσ2k且是顺序结构或者循环结构的,因此Nsp(σ1k)~Nsp(σ2k)且τ=θ.由定义23可知,σ1与σ2中的字符‖和对应出现,而‖与对应于流程中的逻辑表达式中的∨与∧,即逻辑表达式连接了等价流程,因此满足t∈TI1,τ(t)∈TI2:I(τ(t))=Ψ(I(t),ΩI(t),τ)和t∈Page9TO1,τ(t)∈TO2:O(τ(t))=Ψ(O(t),ΩO(t),τ),由定义17可知Nsp(σ1)~Nsp(σ2).同理证明原子并发结构也满足Nsp(σ1)~Nsp(σ2).根据服务网的建模规则和控制流网语言的求解方法可知,对任意结构的σ1与σ2,若σ1σ2,则Nsp(σ1)~Nsp(σ2),因此定理得证.证毕.定义24.σ为字符串,x,y∈&(σ),σσ,若σ=xσ-y,称σ-为字符串σ基于字符x与y的切片,记为ρ(σ,x,y).定义25.σ所有基于字符x与y的切片组成一个字符串集合,称为切集,记为σ/(x,y).定义26.σ为字符串,字符集合C&(σ),σ被C中包含的字符分割为若干字符串,由这些字符串组成的集合称为σ关于C的割集,记为(σ,C).例如,σ=“abpcdapmbqcdpabcq”,则σ/(p,q)={cdapmbqcdpabc,cdapmb,mbqcdpabc,mb,abc}.令C={p,q},则(σ,C)={ab,cda,mb,cd,abc}.为了判定CFN-L中是否存在等价流程,首先利用CFN-L中的匹配逻辑变迁对进行切片,获取其中的并发或选择子流程结构对应CFN-L,然后再利用字符集C={‖,}去求解切片的割集,获取流程结构中的具体子流程的CFN-L,从而可以根据定理5进行是否存在等价流程的判定.将控制流网CFN=(LPN,M,i,o,φ,Γ)的匹配逻辑变迁对组成集合定义为Tmatch={(t1,t2)|t1∈TO,t2∈TI,O(t1)◇I(t2)}.根据CFN-L的生成规则,在进行切片割集求解时只能对不包含在括号内的字符‖和进行割运算,为区别定义26,以符号(σ,C)进行表示.(t21t22O2变迁对集合为Tmatch={(O1∨)},以(O1I2∧)=(t11O1I1(t24t25t26)I2{t11O1∨t12(t13t14t15)I1定理6.CFN为一个控制流网,Tmatch为其匹配逻辑变迁对集合,存在(x,y)∈Tmatch使得σ1,σ2∈(L(CPN)/(x,y),C)且σ1σ2,则CFN存在等价流程.证明.存在(x,y)∈Tmatch使得σ1,σ2∈(L(CPN)/(x,y),C),σ1和σ2为由逻辑变迁x和y连接的两段子流程结构的CFN-L,将这两段子控制流网命名为CFN1和CFN2,由σ1σ2及定理4可知CFN1~CFN2.又CFN1CFN,CFN2CFN,例如,L(CFN1)=O1所以CFN存在等价流程.4.2.3结构范式判定算法在进行服务流程结构范式判定时,首先需要将其转化为服务网,然后求解该服务网对应的CFN-L,通过CFN-L中字符串序列的性质研究服务网的良构、分支连通性、是否存在重复以及等价子控制流网,进而判定服务流程的结构范式,具体参见算法1.算法1.Web服务流程结构范式判定算法.输入:Web服务流程输出:结构范式级别SFStru_NF(SP)1.{constructtheservicenetSNandthecontrolflow2.unfoldL(CFN)andbuildthesetCpathwithallthe3.n=Num(Cpath);4.FORi=2TOn5.{Loop_check(i));6.IFthereexistaloopTHENelimatethechec-7.IF(Num(Cpath)=0)THENSF=0;8.IF(0<Num(Cpath)<n)THENSF=1;9.IF(Λ(ΠΓ→∑(L(CFN)))=ε∧SF=1)THEN10.FOR(x,y)∈Tmatch11.IF(σ1,σ2∈(P(CFN)/(x,y),C)∧σ1σ2)12.IF(!Equ_process∧SF=2)THENSF=3;13.IF(SF=3∧!Repeatsubstring_check(P(CFN),u))14.Return(SF);}算法首先构建服务流程SP的服务网SN以及控制流网CFN,求解L(CFN)并将其展开,获取CFN所有可能存在的从起始库所i到终止库所o的连通路径集Cpath;若Cpath中存在n条路径,即Num(Cpath)=n,依次分别取2,3,…,n条路径,根据定理3判定所取路径中是否存在环,若某些路径中存在环,则将所取路径从Cpath中删除.(1)若Num(Cpath)=0,则SF为0;(2)若0<Num(Cpath)<n,则SF为1;(3)若Num(Cpath)=n,判定CFN是否良构,若为良构则SF为2;(4)在SF为2的基础上,判定CFN中是否存在等价服务流程,若不存在则SF为3;(5)在SF为3的基础上,判定CFN是否存在重复子服务流程,若不存在则SF为4;利用函数Repeatsubstring_check(L(CFN),u))表示对是否Page10存在重复字符串进行判定,函数检测给定字符串L(CFN),若其中存在长度大于u的重复子串时,返回True,否则返回Flase,该函数可以利用编程语言中提供的字符串处理函数实现.算法1在进行结构范式判定时,对不存在可达路径的服务流程,将其结构范式级别定义为0,特此说明.5应用实例5.1满足4NF的服务网算例本节在图2给出的电子商务交易系统服务网模型的基础上,对卖方服务流程的功能进行扩充.在买方进行商品查询时,如果查询不成功,除了发送至买方一个查询失败处理外,增加一个可用于卖方采购的子服务流程,该服务流程由服务s_order、s_defray以及s_receive以顺序结构组成,在服务网中分别表示为t31、t32以及t33.该服务流程与查询失败处理服务构造并行流程,如图6所示.用SN1和CFN1表示该服务网及其对应的控制流网,则L(CFN1)=O1(t13t14t15)I1良构流程判定规则,该服务网是良构的.Num(Cpath)=5,所有的路径分别为path1=O1∨t12I1O1展开L(CFN1)可以得到路径集Cpath,且∧t11O1O1∧以及path5=O1∨I1I2根据结构范式判定算法,该服务流程的控制流网的路径之间不存在环路,可达路径条数为5,在服务网内部不存在等价控制流网,同时也不存在重复控制流网,因此该服务网的结构范式为4NF.5.2满足3NF的服务网算例现假设在为卖方服务增加采购子服务流程时,并未增加卖方专用采购流程服务t31、t32以及t33,而是使用了买方中的购买服务t24、t25以及t26;上述服务流程对应的服务网变为图7所示.用SN2和CFN2表示该服务网及其对应的控制流网,则L(CFN2)=O1(t13t14t15)I1一节中L(CFN1)相比,L(CFN2)在路径可达数目以及是否具有等价控制流网上完全相同.但L(CFN2)中存在重复字符序列t24t25t26,且其长度为3,如果给定用于评价流程结构范式的第4层次中允许重复的子流程长度为2,则该服务网的结构范式级别为3;如果第4层次中允许重复的子流程长度为3,则该服务网的结构范式级别仍为4.5.3满足2NF的服务网算例为了构建满足2NF的服务网,将上述服务流程中的卖方服务单独抽取出一部分,只保留流程“接受预定-收款-发货”和“查询失效处理”两个流程分支,Page11现拟在流程“接受预定-收款-发货”位置处添加一个“接受预定-发货-收款”的子服务流程以便为买方提供更好的服务.如图8,若在构建流程f1时未将收款和发货顺序调整,则与f0相同,命名为f2.若f2与f0组成并行流程结构,其对应服务网以及控制流网分别命名为SN3以及CFN3,则L(CFN3)=t11O1∧((t13t14t15)(t13t14t15))I2O2由于L(CFN3)的割集中存在两段相同的路径表达式序列t13t14t15,因此CFN3存在等价服务流程,CFN3的结构范式不满足第3层次,仅仅满足第2层次.5.4满足1NF的服务网算例若将图6中的服务流程做如下调整:买方要求先收取商品再付款,即将变迁t25和t26的顺序进行颠倒,调整后的服务网如图9所示,其对应服务网以及控制流网分别命名为SN4以及CFN4,则L(CFN4)=∧(t11O1O1t23(t24t26t25)I2径集Cpath,且Num(Cpath)=5,所有的路径分别为path1=O1∧,path3=O1I1∨I1∧t21t22O2O1I2∧.∨I1通过判断可知,CFN4是良构的,但路径path3和path4中内部库所p4和p5存在r(p4)C3s(p5)且r(p5)C4s(p4),因此存在环路,path3和path4为不可达路径,需要删除,最终Num(Cpath)=3,因此CFN4的结构范式为1.6结束语已有研究中仅以路径的可达性作为对服务流程健壮性进行判定的方法不能科学和全面地评价组合服务流程的结构合理性.为此,本文提出一种从路径的可达性和结构冗余性等角度对服务流程的结构健壮性进行了层次划分的准则,并将其定义为服务流程的结构范式,用于对流程的健壮性以及服务组合的合理性进行定量评价.文中采用逻辑Petri网作为形式化工具,将服务流程建模为服务网.为了降低模型分析难度,将服务网中的数据流与控制流分开,构建控制流网.基于逻辑Petri网在建模过程中表现出的良好结构性,提出一种利用约简的方式求解控制流网语言的方法,进而通过控制流网语言的结构特征判定服务网的结构范式所属层次.针对提出的四层结构范式,文中给出了相关实例.下一步的研究工作中将进一步细化结构范式的粒度,开发服务流程结构范式自动判定工具.致谢感谢审稿专家及责任编辑对本文的改进提出宝贵意见!Page12
