Page1MANETs稳定性路由的移动自适应策略研究胡曦汪晋宽王翠荣(东北大学信息科学与工程学院沈阳110819)摘要在移动AdHoc网络中,节点移动造成网络拓扑实时变化,并增加了路由的复杂性.已有稳定性路由算法往往关注于建立一条相对稳定的路由,而忽略了路由建立后稳定路由对于节点移动的适应性.针对这一问题,首先提出了一种针对稳定性路由的移动自适应策略,该策略主要包括3个关键技术:路由建立过程中稳定性参数的双向评估、节点移动状态改变时的异步通告和链路稳定性更新以及基于链路稳定性的多径路由维护.然后在此基础上,设计了一种具有移动自适应特性的稳定性路由算法.仿真结果表明:提出的移动自适应策略及稳定性路由算法能进一步提高路由性能,更好地适应动态多变的移动AdHoc网路环境.关键词移动AdHoc网络;稳定性路由;移动自适应1引言移动AdHoc网络(MobileAdHocNetworks,MANETs)是由移动节点自组织形成的一种无线网为了满足应用的需求,研究人员提出了许多支持服务质量的MANETs路由算法[1].面向稳定的Page2路由算法是其中的重要一类[2-12],其目的是提高数据传输过程的稳定性和连续性,减小节点移动对于路由过程的影响.NSR[2]路由算法认为,那些邻居变化最小的节点具有较好的稳定性,因此算法根据邻居节点间的历史信息选择稳定的节点构建路由.在该算法中,网络中的所有节点根据节点移动速度的大小设置分组的交换周期,通过这个周期交换,每个节点能够维护最新的邻居列表并评估稳定性.在路由请求(RouteRequest,RREQ)转发过程中记录经过路径上的稳定性,由目的节点根据RREQ记录的稳定性选择最优的路径应答(RouteReply,RREP).在发生路径中断后,NSR通知源节点重新建立路由.文献[3]提出了一种MANETs中的稳定路由选择算法,作者利用节点间运动产生的多普勒频移,按照节点间相对运动的关系(靠近或者远离)得到一个DV值来评估链路稳定性.在该算法中,节点间需要周期性地交换分组以获得节点间的多普勒频移,路由建立时根据其定义的链路稳定性寻找具有更优稳定性的路径作为备选路径.目的节点在备选路径中选择最优的路径进行应答.但该算法没有设计路由维护策略.文献[5]中,作者通过推导链路有效性模型得到节点通信范围内形成链路的有效性最高的区域,在AODV[13]的基础上通过修改RREQ分组的转发规则来获得稳定性较好的路由,路由中断后采用AODV的路由维护方案.文献[7]提出了一种面向链路稳定性的路由机制,节点根据少量接收信号强度样本值建立牛顿插值多项式描述连续时间域上的信号强度,进而估计链路生存时间,以AODV为基础按照链路生存时间和跳数作为RREQ约束条件建立稳定的端到端路径,路由中断后采用AODV的路由维护方案.文献[8]也在AODV的基础上,通过评估得到的链路平均维持时间,控制RREQ分组的转发,建立稳定路由.在路由中断后采用本地路由维护或者由源节点重新建立路由.文献[9-10]以链路有效时间(LinkExpirationTime,LET)[14]作为链路稳定性参数建立稳定路由,其中文献[9]的路由建立和维护操作与DSR[15]基本相同,只是通过对LET、链路中断数目以及跳数的加权平均值进行路由选择;而在文献[10]中,路由建立操作与DSR基本相同,但是在路由维护中如果存在可替换路由则按照DSR中的路由抢修机制进行操作;如果没有可替换路由,则采用本地修复机制进行维护.总结已有的面向稳定的路由算法,存在的主要问题有以下3种:首先,评估路由稳定性所选用的计算参数和方法会影响评估结果的准确程度,例如文献[9-10]中利用GPS数据得到的LET和文献[7-8]中利用信号强度得到的稳定性度量;其次,为了获得评估路由稳定性的参数,一些算法需要周期性地进行节点信息交换,例如文献[2,7-8].这就带来了两个问题:(1)交换周期的确定,若周期较长,则不能及时反映节点移动变化,若周期较短,会增加网络开销.(2)消耗网络资源,增加分组碰撞的几率;最后,建立的稳定路由缺乏对节点移动的适应性,导致处理此类路由中断的滞后性,例如前面提到的路由算法都存在这个问题.针对面向稳定的路由算法中存在的以上问题,本文首先提出了一种移动自适应策略,然后在此基础上设计了一种具有移动自适应特性的稳定性路由(Motion-AdaptiveStableRouting,MASR)算法.完成的主要工作有:(1)路由建立过程中LET的双向评估;(2)节点移动触发的异步通告及LET更新;(3)定义关键LET域,并基于该域决定路由维护策略;(4)通过仿真实验研究分析了MASR及其移动自适应策略对于路由性能的影响.2链路有效时间LET的计算随着GPS的普及,移动AdHoc网络节点配备GPS设备不再是一种经济负担.利用GPS,节点可以获得准确的位置和移动信息,由此文献[11]给出了两节点间链路有效时间的计算方法.如图1所示,令两个节点i和j的传输半径为r,移动速率和方向分别为(vi,θi)和(vj,θj),当前坐标分别为(xi,yi)和(xj,yj),则LET的计算如式(1)所示.LET=-(ab+cd)+(a2+c2)r2-(ad-bc)这里Page33移动自适应关键技术本文提出的移动自适应策略主要包括3个关键技术:LET的双向评估、异步移动通告及LET更新和基于关键LET域的多径路由维护.3.1LET的双向评估在已有的利用LET建立稳定路由的算法中,通过RREQ携带转发节点的移动信息,每个接收节点计算其上游链路的LET,并记录经过路径上的最小LET.在本文的讨论中,把路径上的最小LET作为这条路径维持时间的评价参数,称为路由有效时间(RouteExpirationTime,RET).目的节点通过比较多个RREQ记录的RET,选择其中RET最大的路径应答RREP.而RREP只是沿着相反路径逐跳转发,当到达源节点后即建立起一条相对稳定的路由.但是为了使稳定路由自适应节点的移动,路径上的每个节点都需要监测其下游链路的LET,因此提出了一种路由建立过程中的LET双向评估策略.基于RREQ和RREP的转发方向,此策略可以分为两个过程:LET的前向评估和LET的反向评估.其中LET的前向评估,是为了目的节点根据最小LET选择最优路径应答RREP;而LET的反向评估是为了所选路径上的节点能够获得其下游链路的LET(这里从源节点到目的节点的方向为下游方向,反之则为上游方向).3.1.1LET的前向评估如图2所示,源节点S广播RREQ,此RREQ中记录了发送节点S的移动信息(位置坐标、移动的速度和方向角)、经过路径的RET(初始RET=0)和经过的路径信息.当节点A收到此RREQ后获得节点S的移动信息,按照式(1)计算其上游链路1的LET,然后更新RREQ中的RET域和移动信息域,并继续广播更新后的RREQ.其它中间节点接收RREQ后进行相同的操作.当目的节点D收到此RREQ,计算其上游链路4的LET,然后更新RET,并缓存此RREQ.3.1.2LET的反向评估如图2所示,目的节点D应答RREP,此RREP中记录了发送节点D的移动信息和完整的路径信息{S→A→B→C→D}.当节点C收到此RREP后,按照式(1)计算其下游链路4的LET,然后保存其下游节点D的移动信息和下游链路4的LET,最后更新RREP中的移动信息域,并根据路径信息进行转发.其它转发节点接收RREP后进行相同的操作.当源节点S收到此RREP后,计算并保存其下游链路1的LET,同时得到可用的最优路径.3.2异步移动通告及LET更新在已有面向稳定的路由算法中,研究人员或者是关注于如何建立稳定路由而忽略了之后节点移动对路由稳定性的影响,或者是采用双向周期信息交换的方式获得邻居节点变化信息.在前一做法中稳定路由不能适应节点的移动,造成路由有效性下降;而后一种做法中,信息的交换需要同步,而且在不同的节点移动程度下交换周期难以确定.因此,利用节点通过GPS能够获得自己移动状态的特点,提出了一种异步移动通告及LET更新机制.该机制的基本思想是:节点自身移动状态的变化触发该节点向其邻居节点广播通告,同时若该节点是某条路由的构成节点,则还需要重新计算、更新其下游链路的LET.邻居广播通告中记录了通告节点最新的移动信息,当邻居节点收到通告后,按照式(1)重新评估和更新与通告节点间的LET.如图3(a)所示,节点{7,12}在某一时刻发生移动状态的改Page4变,则分别向其邻居节点{3,4,6,8}和{9,13}广播通告.由于节点7是路由15→8→7→6→13的构成节点之一,因此需要利用保存的下游节点6的移动信息重新计算其下游链路7→6的LET并进行更新.在收到通告后,这些邻居节点分别重新计算、更新与通告节点间的LET,并保存或更新通告节点的移动信息.而实际上,只有正在被路由使用的节点的移动改变才会对路由稳定性产生影响,并且每个节点只负责监测其下游链路的LET.因此进一步给出4个必要条件:(1)该节点发生了移动状态的改变;(2)该节点是某条路由的构成节点;(3)该节点是通告节点在路由上的上游节点:(4)该节点保持最新的移动状态超过某一预设时长T.其中,必要条件(4)是考虑到节点在移动过程中可能发生暂时性的抖动,从而引起错误的通告及LET更新.在本文后面的讨论和分析中暂时没有考虑节点的移动抖动,因此设置T=0s.只有同时满足条件(1)、(2)、(4)的节点才可以向其邻居广播移动通告.并重新计算、更新其下游链路的LET;同样,只有同时满足条件(2)、(3)的邻居节点才接收通告,并重新计算、更新与通告节点间的LET.如图3(b)所示,节点{7,12}改变移动状态,但是只有节点7是路由15→8→7→6→13的构成节点,因此只有节点7进行广播通告,并重新计算、更新其下游链路7→6的LET.而节点7的邻居节点{3,4,6,8}都会监听到广播通告,但是由于只有节点8是节点7在路由15→8→7→6→13上的上游节点,因此只有节点8重新计算、更新其下游链路8→7的LET,同时更新保存的节点7的移动信息.通过以上描述可以看出,该机制具有反应式触发、主动通告、资源消耗小的特点.3.3基于关键LET域的多径路由维护在已有的多径路由算法中,源节点能够获得多条路由,从而可以基于主备路由策略,在主要路由发生中断后,立即启用备份路由进行维护.而面向稳定的路由算法往往选择稳定性最优的路径作为主要路由,使得传统的基于主备份策略的多径路由维护失效.因此,本文提出了基于关键LET域的多径路由维护机制,该机制利用LET的可预测性按需地建立备份路由,保证了主要路由失效后数据传输的稳定性和连续性.3.3.1关键LET域式如下关键LET域(CriticalLETZone,CLZ)的定义通过CLZ的定义,将整个LET域(0,+)分为3个区间:(0,LETmin)、[LETmin,LETmax]和(LETmax,+),分别称为失效区间、触发区间(即CLZ)和稳定区间.其中LETmin的取值最少应该能够保证完成一次路由建立过程,而LETmax的取值应该限制在区间(LETmin,2×LETmin]内,因为LETmax越大,触发备份路由建立的频率就越高,造成的网络开销越大.3.3.2基于CLZ的备份路由按需建立机制当主要路由建立过程完成后,路径上除目的节点外的其它节点开始周期监测其下游链路的LET.一般情况下,各条链路的LET都应该处于稳定区间,因此如果各个节点不改变移动状态,则LET会随着时间的推移逐渐变化.当LET逐渐减小进入触发区间后,发现此状况的节点要通知源节点,由源节点启动备份路由建立过程(与主要路由建立过程相同).这里有两种特殊情况需要考虑:(1)若节点移动速度较快,路由中某条链路的LET(LETRET>0)可能在路由建立时就处于触发区间或者失效区间,这说明在当前网络状态下无法建立满足稳定区间的可用路径.此时若仍然触发备份路由建立,则可能造成备份路由的频繁建立,因此发生这种情况时,不允许触发备份路由的建立.(2)若节点移动状态发生变化,可能导致与其相关的链路的LET发生跳变.当LET跳变后如果处于触发区间,则触发源节点启动备份路由建立;若处于失效区间,则不触发备份路由的建立,当路由失效后按照突发路由中断进行维护.4MASR算法描述MASR算法采用按需路由的方式,主要包括两个部分:路由建立和路由维护.4.1路由建立当某个节点有数据要发送且没有有效路由时,此节点(源节点)广播路由请求(RREQ)分组,开始路由建立过程.中间节点按照转发规则继续广播此RREQ分组,当目的节点收到此RREQ后,按照RREQ中包含的路径回送路由应答(RREP)分组.Page5RREP分组以单播的方式逐跳转发至源节点,当源节点收到此RREP后获得一条有效路由,完成路由建立.算法1描述了一对通信节点间的路由建立过程.算法1.路由建立过程.Precondition:Neighborhoodsetofnodei:NiMinimumLETrecordedbynode:min_LETWaitingtimerforRREQ:RQ_TimerBEGIN:ThesourcenodesgeneratesandinitializesanewRREQ,thensbroadcaststheRREQtoitsneighbornodesIFnoden(n∈Nm)receivestheRREQfromnodemTHENrreq.RET=min(RET,LETmn)ENDIFIFanodej(j∈Ni)receivestheRREPfromnodeiTHENENDIFEND4.2路由维护MASR算法的路由维护过程主要包括3个部分:移动通告及LET更新、突发性的路由中断维护以及可预测的路由中断维护.其中突发性的路由中断维护采用本地修复和源节点路由重建的维护策略;而可预测的路由中断维护则采用本文提出的基于CLZ的多径路由维护策略.算法2描述了以上两种路由维护的具体过程.算法2.路由维护过程.Precondition:Neighborhoodsetofnodei:NiAcommunicationpairofnodes:s-dCriticalLETzone:[LETmin,LETmax]BEGIN/异步移动通告及LET更新/IFnodenchangeitsmotionANDitisoncurrentac-tiverouteTHENENDIFIFnodem(m∈Nn)receivestheMOTION_INFfromnodenANDitistheupstreamneighbornodeofnoncurrentactiverouteTHENENDIF/基于CLZ的备份路由建立/nodekcheckstheLETofitsdownstreamlinkperi-odicallyIFLET∈[LETmin,LETmax]THENENDIFIFnodelreceivesthePRE_DISCOVERYTHENforwardsthePRE_DISCOVERYtospre-discoversanalternativerouteENDIF/突发性路由中断的维护,假设节点h发现链路IFDistance(h,d)<Distance(h,s)THENPage6ELSEENDIFIFnodejreceivestheRRERTHENENDIFEND5仿真分析本文中使用ns-2.29作为仿真工具,通过仿真实验研究MASR路由算法的性能以及提出的移动自适应策略对稳定性路由性能的影响.仿真中分别实现了SWORP、SWORP-C和MASR3种基于不同策略的稳定性路由算法,并根据仿真结果对它们的性能进行了比较分析.(1)SWORP[9]是一种基于稳定性加权的按需路由算法,在路由建立过程中源节点广播RREQ寻找到达目的节点的有效路由,并通过广播RREQ统计经过路径上的3个参数:RET、EC(ErrorCount)和HC(HopCount).当目的节点收到第一个RREQ后得到第一条有效路径并计算此路径上的参数加权平均值,同时启动等待定时器.当等待定时器超时后,从收到的多个条路径中选择其中具有最大加权平均值的路径应答RREP.当源节点收到此RREP后完成路由建立过程.在维护过程中由发现链路中断的节点向源节点发送RERR,当源节点收到此RERR后重新启动路由建立过程.在仿真中,分别设置RET、EC和HC的加权系数为1、0和0.(2)SWORP-C是基于SWORP实现的,其路由建立过程与SWORP相同,但是在路由维护中使用了本文提出的基于CLZ的多径路由维护策略.仿真中CLZ设置为[1.5,2.5]s.(3)MASR是本文提出的具有移动自适应特性的稳定性路由算法.5.1仿真设置仿真中设计了两组实验来研究MASR算法的性能:(1)网络中布置50个移动节点,设置节点最大移动速度以10m/s为步长从10m/s逐渐增加到50m/s;(2)设置节点最大移动速度为50m/s,移动节点数目以10个为步长从40个逐渐增加到80个.因为在RWP(RandomWayPoint)移动模型中,随着节点移动速度的增加,节点移动状态的变化越频繁,所以选择RWP来模拟节点的移动.具体的仿真参数设置如表1所示.节点最小移动速度[16]节点最大移动速度5.2性能指标(1)分组递交率———目的节点成功接收的数据分组数目与源节点发送的数据分组数目的比值.(2)控制分组总数———在一次仿真过程中路由算法使用的所有控制分组的总和,反映了网络控制开销的大小.这些控制分组分别应用于路由建立过程,路由维护过程以及移动通告过程.(3)端到端时延———所有被目的节点成功接收的数据分组从源节点传输到目的节点经历的时延的期望值.5.3性能分析仿真结果中的每个数据点都是取10次仿真的平均值,同时给出了置信度为0.95时的置信区间.(1)分组递交率图4分别给出了不同最大节点移动速度和节点数目时3种路由算法分组递交率的比较.如图4(a)所示,两种稳定性路由算法的分组递交率都在随着节点移动速度的增大而下降,这是因为节点移动速度的增大增加了链路中断的概率.同时可以看到SWORP的分组递交率最低,下降趋势最明显,而能够移动自适应的MASR的分组递交率最高,下降趋势最平缓,这是因为SWORP只在路由中断后才进行路由维护,而且如果本地维护不成功就只能丢弃缓存的数据;SWORP-C根据路由建Page7立时保存的LET可以提前建立可用路由,减少了因路由中断造成的数据丢失;MASR更进一步地使得LET能够自适应节点移动的变化,在移动速度逐渐增加的情况下保证了LET的准确性,增强了可多径路由维护的有效性,因此更好地保证了数据传输的连续性,提高了数据分组的递交率.如图4(b)所示,不同路由算法的分组递交率随着节点数目的增加而增大.当节点密度较小时(图中为小于50),网络的连通率不能得到很好的保证,增加了路由建立不成功的概率,因此造成了分组递交率的快速下降.而在节点密度较大时随着节点数目增加,分组递交率的增加较缓.同样,MASR获得了最好的分组递交率,而SWORP的分组递交率是最低的,从而说明了MASR可以在不同节点密度的网络环境中较好地保证传输的稳定性和连续性.(2)控制分组总数图5分别给出了不同最大节点移动速度和节点数目时3种路由算法控制分组总数的比较.如图5(a)所示,3种稳定性路由算法的控制分组都在随着节点移动速度的增大而增加.当移动速度较小时(图中为小于20m/s),3种稳定性路由具有相近的控制分组总数,这是因为移动速度较小时,节点移动状态的变化也较少,因此移动自适应策略的优势没有得到体现.但是随着节点移动速度的增大,具有移动自适应的稳定性路由MASR使用了最多的控制分组.而SWORP-C则使用了最少的控制分组,但是随着节点移动速度的增加,节点移动的变化也随之增多,造成路由建立时节点保存的LET不能准确反映当前链路稳定性情况,一定程度上削弱了基于CLZ的多径路由维护的有效性.如图5(b)所示,3种路由算法的控制分组随着节点数目的增加而增多,这是因为路由建立及维护中使用了泛洪操作,节点数目越多被转发的控制分组数目就越大.但是随着节点密度的增加,MASR使用了最多的控制分组,而SWORP-C使用的控制分组数目比SWORP略少,原因分析如下:首先,虽然MASR由于更好地保证了路由的稳定性,从而一定程度上减少了维护路由中断所需的控制分组数目,但是这种提高是以广播移动通告为代价的,并且这种触发式移动通告的频率随着节点速度的增加而增加,因此在移动速度较大时从图5中可以看出增加的控制分组数目高于减少的控制分组数目;其次,SWORP-C没有使用移动通告更新LET,反而在SWORP的基础上采用了基于CLZ的多径路由维Page8护策略,由此减少了路由维护的次数,从而减少了维护分组数目.(3)端到端时延图6分别给出了不同最大节点移动速度和节点数目时3种路由算法端到端时延的比较.如图6(a)所示,3种稳定性路由算法的端到端时延都在随着节点移动速度的增大而增加.但是具有移动自适应的稳定性路由算法MASR获得了最小的时延,而SWORP则获得了最大的时延,这是因为MASR最好地保证了数据传输的稳定性和连续性,即使随着节点移动速度的增加导致了节点移动变化频繁,MASR也能够及时地更新LET,使得基于CLZ的多径路由维护能够有效地实施,保证了在路由中断前能把数据逐渐转移到新路由上;SWORP虽然在路由建立时考虑了LET,但是在数据传输过程中没有采用任何增强传输连续性和稳定性的策略,因此当路由中断时,造成了大量的数据等待建立替换路由,而SWORP-C在SWORP基础上使用了基于CLZ的多径路由维护,能够一定程度上提高数据传输时的连续性,减小因为路由中断造成的数据等待.如图6(b)所示,3种稳定性路由算法的端到端时延都随着节点数目的增加而减小.当节点数目较少时,会影响网络的连通性,造成数据需要等待有效路由的建立,从而增加端到端时延,而随着节点数目的增加,端到端时延的减少趋势逐渐变缓.同时,由于MASR对于节点移动变化的自适应性,获得了最小的端到端时延,SWORP-C次之,而SWORP由于在路由建立完成后,就不再考虑路由的稳定性问题,所以获得了最大的端到端时延.6结束语节点移动是影响MANETs路由性能的主要因素之一,本文在分析MANETs中已有稳定性路由的基础上,针对节点移动对于路由稳定性产生的影响,提出了一种具有移动自适应的稳定性路由算法MASR.该算法通过3个关键技术保证了路由在数据传输的稳定性和连续性.通过大量的仿真实验验证了提出的MASR算法及其关键技术能够在节点移动变化频繁的网络环境中进一步提高分组递交率,减少分组传输延迟.虽然MASR的控制开销有所增加,但是却使路由的性能得到了整体的提高,验证了MASR算法的有效性.在下一步工作中,我们将针对如何有效控制MASR算法的路由开销进行研究,希望能够在不降低路由稳定性和连续性的同时,获得更少的路由开销.
