Page1自然语言水印鲁棒性分析与评估何路1),2),3)桂小林1),2)田丰1),2)武睿峰3)房鼎益3)1)(西安交通大学计算机科学与技术系西安710049)2)(陕西省网络重点实验室西安710049)3)(西北大学信息学院西安710127)摘要自然语言与图像、音频信号的性质截然不同,图像水印等的鲁棒性分析方法不适用于自然语言水印,但是直到目前还没有专门针对自然语言水印鲁棒性的研究和评估工作.文中针对自然语言的特点,提出适合自然语言水印的敌手模型.然后将现有的自然语言水印分类,并总结各类的一般算法模型.利用文本提出的敌手模型分析自然语言水印编码算法的鲁棒性,并通过实验验证鲁棒性的理论模型.本项工作为对比、评估自然语言水印算法的鲁棒性提供了理论依据.关键词自然语言水印;鲁棒性;主动攻击;水印攻击;自然语言信息隐藏1引言印的概念后,几乎每年的国际信息隐藏大会都会有关于自然语言信息隐藏的论文发表.其它各类期刊、会议发表的论文更是繁多.自然语言文本水印在载体文本里,利用自然语言处理(NLP)技术进行等价自从2001年Atallah等人[1]提出自然语言水Page2信息替换、语态转换等办法把水印信息嵌入文本中,并且不改变文本的原意[2].鲁棒性是水印的一个重要性能指标,它是指水印嵌入算法应该能够抵抗标准的或恶意的数据处理所引入的失真[3].由于水印信息是嵌入在文本的语法、语义结构之中,不像基于文本排版的文本水印[4]、基于字符图像的文本水印[5]和基于不可见字符的文本水印①,水印信息不会因为格式排版、文件格式转换、字符集转换或光学字符识别(OCR)等常见的编辑处理而被破坏,因此适用范围可以更加广泛.但恶意的修改载体文本的内容只能够借助水印编码算法来对抗[6].虽然目前已经有了很多自然语言水印的研究工作,但是关于恶意攻击的研究却还不多.本文首先分析了自然语言水印面临的各种攻击,提出自然语言水印的恶意攻击的敌手模型,然后将已有的自然语言水印进行分类归纳以便进一步的分析.由于自然语言与图形、图像、音频信号在本质上截然不同,我们结合本文提出的敌手模型,利用组合数学的方法来分析各类自然语言水印并建立鲁棒性模型,这些模型可以用来评估各类自然语言水印编码算法的鲁棒性.本文第2节分析自然语言水印面临的攻击,并提出敌手模型;第3节是定义与符号;第4节描述评测工具的具体实现;第5节通过对现有算法的回顾,把自然语言水印进行分类和归纳;第6节针对各类算法分析鲁棒模型,并通过实验验证;最后是总结与展望.2敌手模型目前对自然语言水印攻击方法的研究基本都遵循Atallah等人[1]提出的敌手模型:攻击者必须在不大量改变句子原意的条件下破坏文本中包含的水印信息,可采用以下措施来对含有水印信息的载体文本进行攻击:(1)对文本中的句子进行保留意义的转换.(2)如果将句子的意义进行了改变,那么有可能会破坏文本中的秘密信息,但修改的句子不能过多,否则影响文本的原意.(3)在文本中插入一个新的句子,也有可能会破坏文本中的秘密信息.(4)将文本中一块连续的部分从一个地方移动到另外一个地方,有可能会破坏文本中的秘密信息.Gupta等人[7]又补充了一条规则:(5)在保留文章意义的前提下可在文本中删除一些句子.以上的敌手模型只是针对句子级别的水印嵌入方法,但其原则可以适用于各种改写方法.因此可以重新整理为(1)根据Kerckhoffs原则[8],攻击者可以使用与水印算法相同的NLP工具对载体文本中的同义词或句子等进行语义不变的变换,以期擦除水印[9].(2)改变语义的同义词替换、句子变换等,以期破坏水印同步.但攻击的地方不能过多,否则影响文本的原意.(3)插入或删除少量或不重要的句子以期破坏水印同步.(3.1)插入新的句子.插入的句子不可能是任意的,因为要保证语义的流畅,所以只能是在语义上是重复性的或透明性的句子[1].(3.2)删除不重要的句子.人类语言具有一定的冗余,比如重要的信息往往会在文本中重复出现;需要强调的信息也会通过不同表达方式重复叙述.从载体文本中摘除少量重复性的句子不会对载体文本的使用价值造成明显影响.(4)调整句子、段落的顺序.相当于打乱水印比特的顺序.此类攻击称为排序攻击.其中第(2)条相当于删除原有语义后再插入新语义,效果相当于(3.1)和(3.2)同时使用,但造成语义改变较(3.1)和(3.2)大,而且NLP工具难以自动实现.第(3)条中,考虑到要保证语义的流畅,(3.1)也难以实现:因为要找到合适的位置可以插入重复性或透明性的句子,根据目前的NLP技术还难以做到.而(3.2)可以利用自动摘要软件实现.(3.1)和(3.2)的效果分别来看是相同的,两种攻击从效果上看都是相当于同步攻击,即使得嵌入时和提取时水印比特序列错位造成秘密信息无法正确提取[3].因此,只须考虑(3.2)即可.第(4)条,一方面除非载体文本是说明书、手册之类的文体,其中包含大量的并行结构,不然调整句子、段落的顺序会显著影响语义逻辑.另一方面,如第4节所述,目前自然语言水印的编码算法都不按载体单元在载体文本中出现的顺序编码,所以不受文本中物理位置变化的影响.因此本文不考虑此类攻击.①FFEncode.http://www.securityfocus.com/tools/1188Page3由此可见,评估自然语言水印算法时,实际上需要考虑的敌手模型只有第(1)条和(3.2)条.3定义与符号文本涉及的术语和符号较多,为了方便描述,本节集中定义这些术语和符号.定义1.载体单元.文本中可被一种特定NLP技术处理并生成语义不变变换的最小语言片段.定义2.可行变换.在给定载体单元所处的上下文中,与载体单元语义相同的不同表达形式称为可行变换.定义3.可行变换集合.一个载体单元和它的所有可行变换构成的集合,称为可行变换集合.例如,对基于同义词替换的水印算法,载体文本中具有同义词的单词是载体单元,它的同义词都是可行变换,该单词以及它的同义词构成可行变换集合.而对于基于句式变换的水印算法,载体文本中可以做句式变换的句子就是载体单元,它的各种变换句式是可行变换,这些句子构成可行变换集合.对于一个给定的载体文本以及该文本中的一个载体单元,可行变换集合中的每个元素,在该语境中均可以互相替换,而不影响语义.设载体文本D,D中共含有n个载体单元,记作S={s1,s2,…,sn}.每个载体单元的si可行变换集合记作Ti={ti1,ti2,…tim},l代表水印长度.定义4.嵌入率(e).e=l目前除文献[10]是采用向量作为水印外,其它自然语言水印算法均采用比特串作为水印,所以本文采用误比特率作为衡量水印算法鲁棒性的指标.定义5.误比特率(BER).载体文本经历攻击后,提取的水印比特中出错的比特个数与水印比特的总数之比.高,算法的鲁棒性越差.在给定攻击方法和攻击力度的情况下,BER越定义6.替换攻击.根据Kerckhoffs原则[8],假设攻击者知道并且可以使用与水印算法相同的NLP工具对载体文本中的载体单元进行语义不变的变换,这种攻击方法称为替换攻击.即敌手模型第(1)条.自动摘要技术一般通过基于统计的算法,同时利用语言学技术来识别文档中的重要段落或语句,然后将这些文本片段提取出来粘帖在一起形成不具冗余的摘要,其长度虽然短于原始文档,但几乎没有信息损失[11].定义7.压缩比(c).通过摘要软件提取出来的词数占原始文档词数的百分比称为压缩比,即c%的摘要是从原始文档中提取c%的文字形成的①.定义8.摘要攻击.通过自动摘要软件,从载体文本中删除少量语义上不重要的句子,这种攻击方法称为摘要攻击.即敌手模型第(3.2)条.定义9.攻击力度(a).a=k/n,k是D中被攻击的单元数量.例如,替换攻击的攻击力度就是被替换的载体单元数量;摘要攻击的攻击力度就是摘要删除的载体单元数量.假设载体单元在载体中是均匀分布的,摘要攻击力度反映了对D的摘除比例,即a=1-c.显然,攻击力度越高,文本摘除比例越大,因此语义损失也就越大,所以a应当远远小于1.4鲁棒性测评工具的实现由第2节的分析可见,自然语言水印的鲁棒性评估只需考虑两种攻击方法,即替换攻击和摘要攻击.我们设计了相应的自动攻击工具②.替换攻击使用的技术与各个自然语言水印算法完全相同,所以不再赘述.需要注意的是同义词替换、句式变换等技术还不完美,为了保证不破坏载体的使用价值,攻击者只能实施少量的替换攻击,而不能通过替换所有可能的载体单元来擦除水印信息.此外,Topkara等人[11]针对词义消歧的困难性,选择语义扭曲度在可接受范围内的具有最大词义扭曲度的同义词进行替换.如果攻击者再次进行同义词替换,消歧错误的数量会被放大,使替换攻击更加难以有效实施.由此可见,替换攻击有相当大的局限性.摘要攻击利用OfficeWord2007中的自动摘要功能实现从文本中删除少量语义上不重要的句子.根据摘要的实施策略不同,进一步把摘要攻击分为三种:对整篇文本直接实施摘要攻击称为SAI.SAI的缺点是删除的句子不是均匀分布在文本中的.因为对于两个语义上相似的句子,摘要软件总是倾向①②Page4于保留出现在前面的句子.为此我们定义了SAII:给定D,设D共包含n个载体单元.设pi是D的第i个段落,根据Kerckhoffs原则我们可以识别出pi中的所有载体单元.首先,按照背包算法,设pi是物品,物品的价值是pi中包含的载体单元数量,记作vi,对各个pi分别做摘要,被删除的载体单元数量记作重量wi.背包的容量为W=a×n=(1-c)×∑iwi.调节c可以改变删除的句子在载体文本中的分布,因为当c越接近于1,一个段落中删除的句子数量越少,因此就会在越多的段落上进行摘要攻击.给定a和c,SAII会尽可能选择包含载体单元多的不重要句子进行删除,而且摘除句子的分布可控,因此理论上攻击效果应该最好.SAII依赖Kerckhoffs原则,如果攻击者不了解水印所采用的具体技术,则难以实施攻击,这时可以设vi恒等于1,我们称之为SAIII.SAIII是SAII的化简版本,但第6节的实验表明SAIII和SAII的性能相差不多,更适合作为通用的评估工具.5自然语言水印的编码技术自然语言与图像、音频、视频等载体有本质上的区别:(1)自然语言缺乏变换域,不能将信号处理的技术运用在自然语言之上;(2)自然语言冗余空间较少,即人类对于文字的改变相当敏感,除了要考虑语法、语义之外,还要考虑语用习惯.目前虽然已经提出不少针对自然语言水印的编码算法,但自然语言水印的研究者大多来自于自然语言处理领域,对编码技术知之甚少,所以到目前为止自然语言水印的编码技术大多比较简单.以下我们回顾自然语言信息隐藏中几种主要的编码技术.5.1空域技术T-Lex①给D中每一组同义词集合中的单词从0开始编号.每一个拥有同义词的单词都对应一个进制不同的一位数字.设D中包含N个同义词,那么这N个单词联合在一起就可以视作一个N位的混合进制数.秘密信息可以看作一个二进制数,利用同义词替换,使D表示的混合进制数等于秘密信息表示的二进制数就完成了嵌入过程.提取过程只是简单地从文本中把这个混合进制数读取出来再转换回二进制数.但该算法没有使用密钥,之后很多基于词法的自然语言信息隐藏算法在其基础之上进行了改进.这些方法的一般过程为:在密钥的控制下对嵌入信息的词进行秘密排序,依次找到需要嵌入的比特对应位置的单词,根据编码选择与需要嵌入的比特相同的词进行替换[7,12-13].Atallah等人[1]分析载体文本中句子得到句法树结构,对文本中句子的句法树中每个节点按先序遍历的顺序编号,然后对每个节点的编号j计算j+H(p),如果是p的二次剩余,那么节点的标为1;否则为0,其中p是大质数,H(·)是Hash函数.然后后序遍历节点将节点的比特连起来得到一个二进制数Bi,使用di=H(Bi)XORH(p)对句子进行排序.选择di最小句子作为“标志句”,标志句在文本中的后继句为“水印句”.通过句法变换在“水印句”中嵌入信息.一个水印句可以承载多个比特,但如果从鲁棒性的角度出发只嵌1比特更好.Atallah等人也指出算法中水印句要由它的标识句来指示,如果进行一次排序攻击,有可能正好把一对标识句和水印句分开.由此造成水印被破坏的概率3α/b,其中b代表文本中句子的总数,α代表个水印句个数,并且每个水印句嵌入1比特水印.但是Atallah等人没有给出一般的误比特率模型.文献[14]中不再使用标志句,水印比特逐句嵌入.如果文本足够长则重复嵌入水印,提取时通过多数投票机制对抗篡改攻击,但仍然不能抵抗排序攻击.文献[15-16]通过引入重排序机制,抵抗对于句子顺序改变的攻击.为了提高鲁棒性,将S在密钥控制下重新排序而不是在载体文本中出现的位置排序,可以抵抗排序攻击,目前几乎所有的算法都采用了这种策略.还有些研究者采用随机间隔嵌入[1,17]、重复嵌入[7,16],或者纠错机制[18].这相当于减少了一个载体单元承载秘密比特的数量.承载的比特数越少,遭受攻击后的BER也应该越小.值得注意的是重复嵌入可以看作是空域上的直接序列扩频.空域算法繁多,虽然对S排序的方法各不相同,但都是利用密钥和si进行运算,得出一个秘密数字,根据这个秘密数字的大小进行排序(由此也可以看出虽然S排序的结果不再与文本中出现的顺序有关,但不过是在另一个域上的顺序排序,所以本质上仍是空域性质的).为了分析方便,我们根据空域算法的一般过程总结出空域算法的一般模型:首先找出载体文本里的所有载体单元S=①WinsteinK.Tyrannosaurus-Lex[EB/OL].http://alumni.imsa.edu/~keithw/tlex/Page5{s1,s2,…,sn},每个si的可行变换集合Ti={ti1,ti2,…,tim},根据密钥从中选择一个可行变换tij作为代表元(选择代表元是为了防止嵌入时选择不同的可行变换可能会造成嵌入前排序的结果与提取时排序的结果不一致).然后根据密钥和tij计算出一个秘密数字,按照这个秘密数字的大小把S的元素排序.接下来根据密钥从S中随机选出部分元素准备嵌入,记作S={s1,s2,…,sl}.把S中的元素si的可行变换集合Ti用密钥分成两个子集,分别代表0和1.嵌入时对比水印比特与si表示的比特是否相同,如果不同则使用相应的可行变换对其进行替换以生成含密文章.该一般模型不考虑应用纠错码的情况,也不考虑扩频的情况.5.3节将给出扩频的一般模型.5.2变换域技术自然语言不像图像,缺乏变换域.现有的变换域算法一般都是以载体单元的某些特征出现的频次作为变换域来嵌入信息的.由于水印不是嵌入在空域,所以排序攻击均告无效.戴祖旭等人[19]随机选择载体文本中部分标记串,连同其频数构造一个完备概率空间,通过修改文本改变标记串的概率分布使其信息熵与水印一致.显然,该算法能抵抗排序攻击.该算法相当于在变换域上随机选取子带进行嵌入.Yang等人[10]把水印表示成l维整数向量.首先把文本中的同义词分成l组,并且每组中同义词对应的同义集合分为A、B两个子集.然后用同义词替换使第i组中属于A子集的同义词个数等于水印向量第i维分量.检测时采用线性相关,当大于给定的阈值时就认为水印存在.该方法本质上相当于图像水印的归一化相关检测方法.5.3扩频技术Vybornova和Macq[20]把文本中的句子根据密钥秘密排序并按水印长度分组,根据每组句子中包含的前提数量的奇偶性表达水印信息,如包含奇数个前提表示秘密比特1;包含偶数个前提表示秘密比特0.显然,这种编码方案也可以抵抗排序攻击.同时,这种编码的好处在于变换数量不多于水印长度,变换的数量越少隐蔽性自然越好.但是由于句子的排序不过是在另一个域上的顺序,其本质上属于空域扩频技术.与其类似的还有文献[16].何路等人[21]提出一个更通用的算法.根据密钥和载体单元的代表元计算Hash值,把载体单元是否包含特定的特征,按照文献[20]的方法进行编码.但并不排序,分组是按Hash值的定义区间(即0~2128)均匀划分为l个子区间.这样载体单元之间不再有序列关系,而成为变换域(如Hash域)上的扩频.类似的还有姜传贤等人[22]基于文本的重要内容提出的一种水印算法.该算法首先挑选出文本中所有包含主题词的句子,组成主题句集合CS;然后,根据同义词词典对CS的句子进行筛选:选取包含同义词的子主题句集合subCS;接着,根据给定的密钥对每个句子中主题词的最高频率求Hash,以求得的Hash值做模l运算(l是水印长度),具有相同运算值的句子将被分入一组;最后,依次将水印的每一位嵌入到一组句子中.以上两种扩频技术都属于直接序列扩频.空域和变换域的扩频技术区别在于对载体单元排序和分组是否与顺序有关.下面给出扩频编码算法的一般模型:扩频编码模型:首先根据密钥和载体单元的代表元计算秘密值.然后根据秘密值把S划分成l个组.每组包含的载体单元数量记作x.最后利用组内包含规定特征的载体单元的数量进行编码.当组代表的比特与目标水印比特不同时,对组内的载体单元进行替换使规定的特征出现的次数正好表达水印的比特.6自然语言信息隐藏的鲁棒性至少为0.5.引理1.在同义攻击中,si被成功攻击的概率证明.按照编码算法的不同,Ti可以被划分成两个子集Ti和Ti.设Ti表示“0”;Ti表示“1”.若集合Ti中的元素个数为m,则集合Ti和Ti中的元素个数有表1所示的几种情况.Ti中的元素个数Ti中的元素个数概率设任意一个载体单元si被编码为“0”,则在上述情况中si被成功攻击的概率如表1中第3列.因为集合Ti中的载体单元编码的方式是随机的,所以每一个载体单元被编码为“1”或者“0”的概Page6率是相同的,即上表中每一行情况出现的概率是相同的.因此si被成功攻击的平均概率为其中n2,n为整数.令函数f(x)=xf(x)=2(x-1)-2x因此,f(x)在定义域内是单调递减函数.对f(x)求极限:f(x)在定义域内有下界1/2.因此可知,在同义攻击中,每一个载体单元被成功攻击的概率至少为0.5.6.1空域算法的鲁棒性6.1.1替换攻击的误比特率分析因为对一个载体单元si进行替换攻击,根据密钥挑选的代表元并不会改变,所以S中的元素序列也不会改变.显然,只有si被成功攻击时才会产生1比特误码.嵌入秘密信息时的嵌入率为e,攻击力度为a,根据引理1,空域算法在替换攻击下的理论BER为由此可见空域算法对抵御替换攻击的效果较好,通过降低嵌入率可以进一步降低替换攻击造成的误比特率.6.1.2摘要攻击的误比特率分析误比特率:分两种情况讨论空域算法在摘要攻击下的理论(1)当e=1时首先考虑攻击只造成一个载体单元被删除的情况:设删除第i个载体单元(为了计算方便i是在S中从后往前的计数,即sl为1,s1为l,下同),在提取过程中,第i-1个载体单元会被错误地识别成第i个载体单元,而第i-2个载体单元会被错误地识别成第i-1个载体单元,以此类推,排在第i个载体后面的i-1个载体单元将全部错位,因此BER=i现在考虑攻击k个载体单元被删除的情况:由第一种情况可知,删除某一个载体单元,则其后所有的载体单元将错位,因此当多个载体单元删除时,造成的误比特率仅由秘密排序中最靠前的载体单元的位置决定(也就是最大的i).设攻击力度为a,则需要攻击an个载体单元.设最靠前的载体单元的位置为i,此时产生的误比特率为i载体单元的攻击位置都在i之后,总共有p=an()-1i-1一个离散型随机变量X,X的所有的可能取值为Xi(anin).式(2)给出在攻击力度为a的摘要攻击下BER的期望.(2)当e<1时可以将n个载体单元分成l组,每一组有x=nl个载体单元,但只有1个载体单元承载水印比特.设被摘要攻击删除的最靠前的载体单元的位置是i(从后向前计数),那么平均来看,这个载体单元处于从后往前计数的第i载体单元处于本组中承载水印比特的载体单元之前时,那么本组中的承载水印比特的载体单元就会发出错位,反之则不会.如图1所示,黑色圆圈代表被摘要攻击删除的载体单元,虚线圆圈代表承载水印比特的载体单元.组内承载水印比特的载体单元处于i之后的概imod1烄率是烆是i×e,反之,组内的承载水印的词处于i之前的概率是1-Page7an()-1的期望是(i×e-1).又每个i的发生概率是i-1散型随机变量X,X的所有的可能取值为Xi(anin),式(3)给出在攻击力度为a的摘要攻击下BER的期望.BER=∑nBER=∑n如果i恰好为l元就是第i内承载比特的载体单元一定会发生错位.此时BER的期望退化为式(3)的形式.基于以上分析,可以获得空域算法误比特率的理论曲线,如图2所示.横坐标是攻击力度,纵坐标是BER的期望.由图2可以看出降低嵌入率对抵抗摘要攻击几乎没有帮助.另外,空域算法抵御摘要攻击的能力非常差,删除一个载体单元平均就会造成50%的误比特率.而且由于摘要攻击的效果相当于删除比特后造成的同步丢失,纠错码并不能找回丢失的比特,所以直接对水印比特应用纠错编码反而雪上加霜.但是实际上,当第i个载体单元被删除,第i-1个会被错误识别为第i个载体单元,只有当第i个载体单元和第i-1个载体单元表示的比特不同时,才会造成误码.如果e=1,提取的水印比特将比嵌入的数量少,造成读取水印完全失败;而e<1时,会把一部分未承载水印比特的载体单元当作嵌入水印比特的载体单元来读取.由于秘密比特是随机的,不论是错位的比特还是误读取的比特,有一半的概率正好与嵌入的原始比特正好一致.所以实际的BER曲线会比理论的BER曲线降低一半.给定e=0.5,l=50,首先使用空域的一般模型在测试语料中嵌入水印;然后令a={0.02,0.04,…,0.20},使用摘要攻击进行攻击,结果如图3.横坐标是攻击力度,纵坐标是BER的期望.可以看出正如第4节所预期的:SAII的攻击效果最接近于理论曲线,其次是SAIII,SAI的攻击效果最差.而且SAIII与SAII的性能比较接近.图3空域的一般模型的摘要攻击BER曲线6.2变换域算法的鲁棒性由于变换域算法差异较大,难以用一个统一的模型分析,所以本节对每个算法逐个分析.文献[19]的算法相当于在变换域上随机选取子带进行嵌入.只有攻击到嵌入水印的子带上才有可能造成误比特.文献[19]以长篇小说《保卫延安》为例说明了水印的嵌入提取过程.考虑其中特别长和特别短的句子都难以进行变换;另外,根据嵌入算法原理,出现次数太少的无法嵌入信息,这就缩小了攻击的范围,据我们统计,《保卫延安》中实际可供嵌入的词性序列串模式(即句型)只有145种.只有每个词性标记串都被攻击到,才有可能损坏水印比特.替换攻击至少需要修改145/2≈61个句子,因为理想情况下替换攻击每次攻击一个载体单元,相当于攻击了两个不同的词性序列串模式(一个词性序列串模式的频数减1;另一个词性序列串模式的频数加1).而摘要攻击至少需要删除145个句子,才有可能损坏水印比特.因此替换攻击更有效率.Page8我们采用替换攻击,替换攻击程序采用马广平等人[9]的实现句子转换工具进行替换攻击,采用文献[19]的水印“WIT”,l=24.攻击策略如下:首先,在《保卫延安》中搜寻所有可能嵌入水印的词性序列串模式.然后,逐次从各个词性序列串模式中选择一个可以做句式变换的句子进行攻击.记录发生变化的词性序列串模式,即已被攻击.如果一个词性序列串模式中没有句子可以做变换,则跳过该词性序列串.如果所有词性序列串模式均被攻击过,或剩余词性序列串模式无法攻击,则攻击完毕.实验结果如图4.横坐标是被攻击的句子数量,纵坐标是BER的期望.同样由于有一半的概率使错误的比特正好与嵌入的水印比特正好一致,所以BER趋向于0.5左右.BER曲线呈现阶梯状,这是由于水印只嵌入在个别词性标记串模式上,替换攻击遍历各种词性标记串.当正好攻击到嵌有水印的词性标记串时,BER便会突然增加,否则BER维持不变.全文包含15余万字,37031个自然句子,搜寻并攻击几十个句子对载体的破坏十分微小.由全文可做变换的句子有741个,可知攻击力度未超过0.20.说明文献[19]的算法鲁棒性依然不是很好.文献[10]的算法,在变换域上由于不需要对S进行排序,所以删除载体单元不会造成水印比特错位,但会造成相关性降低.替换攻击有可能在某处减弱了水印向量,但在另一处又放大了水印向量,攻击效果有限[10].因此摘要攻击更有效率.Miller和Bloom[23]已经给出了归一化相关检测器的错误概率模型,在此不再复述.需要注意的是:由于自然语言冗余空间非常有限,文献[10]的算法没有使用水印模板,而是直接把水印向量调制在载体上.我们在测试语料中嵌入水印向量:{2,3,-1,0,4,-2,1,2,1,-3};然后令a={0.02,0.04,…,0.20},使用摘要攻击进行攻击,攻击的结果如图5.横坐标是攻击力度,纵坐标是水印向量的相关度.对比文献[10]的图2可见文献[10]的算法虽然能有效抵御替换攻击,但抵御摘要攻击的能力有限.扩频算法可以根据排序方法分为两类:空域的6.3扩频算法的鲁棒性扩频算法和变换域的扩频算法.6.3.1替换攻击的误比特率分析因为对载体单元si进行替换攻击,根据密钥挑选的代表元并不会改变,所以载体单元序列不会改变.因此空域和变换域的扩频算法抵抗替换攻击的性能是等价的.以下讨论不区分空域或变换域.若要使BER为t/l,则被成功攻击的组就要有t个.设r为一个组被攻击成功需要攻击的载体单元数量占组包含的载体单元数量的比例,攻击力度为a,则被攻击的载体单元个数k=a×n.设恰有t个组被成功攻击,从l个组中选择t个组的组合数为()l将l个组按照是否被成功攻击划分为集合W1和W2.其中,αi是被成功攻击的组;βi是未被成功攻击的组.用xi表示αi中被攻击的载体单元数,用yi表示βi中被攻击的载体单元数.根据引理1,要成功攻击某一组,则该组内至少需要攻击2rx个载体单元.则有x1+x2+…xt+y1+y2+…+yl-t=n(4)其中,2rxxix,0yi2rx-1.设zi=xi-2rx,则xi=zi+2rx,代入式(4),得z1+z2+…+zt+2trx+y1+y2+…+yl-t=n,即z1+z2+…+zt+y1+y2+…+yl-t=n-2trx,其中,0z1x-2rx,0yi2rx-1.设P1代表该组内攻击的载体单元个数至少为x-2rx+1个的性质;P2代表该组内攻击的载体单元个数至少为2rx个的性质.A1,A2,…,At是满足性质P1的集合;At+1,At+2,…,Al是满足性质P2的集合.根据容斥原理,式(5)给出了恰有t组被攻击成功的组合数.Page9t×A1∩A2∩…∩Al=()l∑Ai∩Aj∩Ak+…+(-1)l∑A1∩A2∩A3∩…∩A)l(5)B1∩B2∩…∩Bl=S2-∑Bi+∑Bi∩Bj-∑Bi∩Bj∩Bk+…+(-1)l∑B1∩B2∩B3∩…∩Bl(6)Pt=()lt×A1∩A2∩…∩Al=()lt×S1-∑Ai+∑Ai∩Aj-∑Ai∩Aj∩Ak+…+(-1)l∑A1∩A2∩A3∩…∩AS2-∑Bi+∑Bi∩Bj-∑Bi∩Bj∩Bk+…+(-1)l∑B1∩B2∩B3∩…∩Bl在对分成l组的n个载体单元进行攻击力度为a的攻击时,所有可能产生的误比特率构成一个离散型随机变量X,设X的所有可能取值为xt(1()EX=∑t=min{n,l}()lt×S1-∑Ai+∑Ai∩Aj-∑Ai∩Aj∩Ak+…+(-1)l∑A1∩A2∩A3∩…∩AS2-∑Bi+∑Bi∩Bj-∑Bi∩Bj∩Bk+…+(-1)l∑B1∩B2∩B3∩…∩Bl令r=0.5,e=0.5,l=50,在测试语料中使用扩的效果比非扩频的空域算法略好一些.频的一般模型嵌入50比特水印;然后令a={0.02,6.3.2摘要攻击的误比特率分析0.04,…,0.20},使用替换攻击,画出BER曲线如由于在变换域的扩频算法分组不是按S的序列关系,所以删除载体单元不会影响其它分组.因图6.横坐标是攻击力度,纵坐标是BER的期望,实此,变换域的扩频算法抵御摘要攻击的性能与抵抗线是BER的理论曲线,虚线是BER的实验曲线.替换攻击的性能是等价的.令e=0.5,l=50,在测试可见扩频算法在替换攻击下的BER曲线是呈对数语料中使用文献[21]的算法嵌入水印;然后令a=趋势增长,如果扩频范围增大,BER曲线还会进一{0.02,0.04,…,0.20},使用摘要攻击,结果如图7,步下降;而空域算法在替换攻击下的BER曲线根其中ideal代表理论曲线.由图7可以看出变换域算据式(1)是呈线性增长.所以扩频算法抵抗替换攻击其中S1=n-2trx+l-1若不考虑被成功攻击的组的个数,设每一组内攻击的载体单元个数为ki,则有其中,0kix.设P3表示该组内攻击的载体单元个数至少为x+1个的性质.B1,B2,…,Bl是满足性质P3的集合.根据容斥原理,式(6)给出其组合数.其中,S2=n+l-1()n.因此可以得到恰好有t组攻击成功的概率Pt:tl且t为整数),X的分布律为PX=x{}t=pt(1tl且t为整数).式(7)给出随机变量X的数学期望E(X).图7变换域扩频一般模型的摘要攻击BER曲线Page10法在抵御摘要攻击方面远远优于空域算法.另外SAI、SAII和SAIII的性能相差无几,且它们都与理论误比特率的曲线比较接近,而SAIII的前提更弱.结合图3可以看出SAIII作为测评工具更加通用.下面分析空域扩频算法在摘要攻击下的鲁棒性.显然至少要删除2rx个载体单元才有可能造成1比特误码.所以当多个载体单元删除时,造成的误比特率仅由秘密排序中第2rx个被攻击的载体单元所处的分组决定,设这个分组为i(i是从最后一个分组开始计数的).与5.1.2节的讨论类似,其后的分组错位的比特超过2rx也都会出现误比特.设攻击力度为a,则总共攻击an个载体单元.此时产生的误比特率为i在i=l组,则它在组的第2rx到x之间;如果第2rx个被攻击的载体单元处在其它组,则它在组的第1到x之间.所以它的平均位置近似为1+x2rx个被攻击的载体单元之前有2rx-1个载体单元被攻击,总共有种可能.而剩下的an-2rx个载体单元都处在第2rx个被攻击的载体单元之后,总共有种可能.由于空域扩频算法是在载体单元排序后按水印长度分组的,随着攻击力度的增加,必然造成每个分组包含的载体单元变少,所以pp和pn中的x不是固定的,但由于摘要攻击一般攻击力度不大,所以可以忽略.因此,所有可能的误比特率构成了一个离散型随机变量X,X的所有的可能取值为Xi(anin).式(8)给出在攻击力度为a的摘要攻击下的BER.令r=0.5,e=0.5,l=50,在测试语料中使用扩频一般模型的空域方法嵌入50比特水印;然后令a={0.02,0.04,…,0.20},使用摘要攻击,画出BER曲线如图8.横坐标是攻击力度,纵坐标是BER的期望.对比图3可见,空域的扩频算法只有当摘要攻击删除的载体单元较少时,产生误比特率才比较低;而当被删除的载体单元不少于2rx后,BER迅速上升,同样由于错位的原因BER与空域非扩频算法的情况几乎一样.所以空域的扩频算法不能有效抵御摘要攻击.7总结与展望本文通过分析自然语言水印面临的恶意攻击发现,不像图像水印面临众多的攻击手段,自然语言水印实际上只需要考虑替换攻击和删除攻击两种攻击就可以代表自然语言水印所面临的所有主要威胁.这使得对自然语言水印的鲁棒性进行全面分析和评估成为可能.本文为自然语言水印建立了鲁棒性模型,并通过实验验证了鲁棒性理论模型的正确性.该模型可以用于对比、评估自然语言水印的鲁棒性.分析和实验也发现自然语言水印编码算法中的一些问题:(1)空域算法在摘要攻击下的鲁棒性非常差,并且随机间隔嵌入、应用纠错码和扩频编码都不会真正提高鲁棒性.(2)即便在变换域上,如果仍然按某种序列关系对载体单元进行排序,其实质仍然是空域的,虽然可以抵抗排序攻击,但对于摘要攻击依然没有帮助.(3)变换域上的扩频编码算法对各种攻击显示出较好的性能,应当成为研究鲁棒的编码算法的重点方向.但是寻找变换域需要慎重,比如,以词性标记串代表句型的这种变换域由于句型数量有限,不一定能够保证鲁棒性.的工作包括以下几点:为了使我们的工作更实用、更具客观性,下一步(1)将各种典型的语义不变变换的技术集成在一起,使我们的攻击工具可以方便地评估不同水印算法.(2)开展攻击后语义损失评估技术的研究工作[24],以便评估攻击对载体文本造成的影响,确定Page11合理、可行的攻击力度范围.
