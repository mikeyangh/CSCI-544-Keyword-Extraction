Page1/ 运行/ 时/ 异常/ 对/ 软件/ 静态/ 测试/ 的/ 影响/ 研究/ 金/ 大海/ 宫云战/ 杨朝红/ 肖庆/ (/ 北京邮电大学/ 网络/ 与/ 交换/ 技术/ 国家/ 重点/ 实验室/ 北京/ 100876/ )/ 摘要/ 当/ 程序/ 的/ 执行/ 过程/ 中/ 出现/ 运行/ 时/ 异常/ ,/ 控制流/ 动态/ 地/ 变更/ 可能/ 会/ 产生/ 非/ 预期/ 的/ 执行/ 逻辑/ ,/ 由此/ 引入/ 的/ 缺陷/ 将/ 给/ 软件/ 静态/ 测试/ 工作/ 带来/ 巨大/ 的/ 挑战/ ./ 针对/ 这一/ 问题/ ,/ 提出/ 一种/ 结合/ 运行/ 时/ 异常/ 的/ 静态/ 测试方法/ ,/ 将/ 缺陷/ 检测/ 及/ 控制流/ 扩展/ 交替/ 执行/ ,/ 通过/ 扩展/ 分析/ 路径/ 达到/ 提高/ 测试/ 充分/ 度/ 的/ 目的/ ./ 以/ 异常/ 模式/ 状态机/ 描述/ 运行/ 时/ 异常/ 行为/ ,/ 在/ 包含/ 运行/ 时/ 异常/ 的/ 控制流/ 上/ ,/ 应用/ 迭代/ 方程/ 得到/ 运行/ 时/ 异常/ 控制流/ 序列/ ,/ 将/ 在/ 传统/ 控制流/ 上/ 的/ 一次/ 缺陷/ 检测/ 过程/ 扩展/ 为/ 在/ 异常/ 控制流/ 序列/ 上/ 的/ 多次/ 检测/ ./ 实验/ 结果表明/ ,/ 结合/ 运行/ 时/ 异常/ 的/ 静态/ 测试方法/ 虽然/ 增加/ 了/ 时间/ 开销/ ,/ 且/ 引入/ 一定/ 的/ 误报/ ,/ 但/ 却/ 可以/ 发现/ 传统/ 测试方法/ 所/ 遗漏/ 的/ 缺陷/ ,/ 这点/ 在/ 航空/ 、/ 航天/ 等/ 高/ 可信/ 领域/ 尤为重要/ ./ 关键词/ 软件测试/ ;/ 静态/ 分析/ ;/ 运行/ 时/ 异常/ ;/ 异常/ 模式/ ;/ 异常/ 控制流/ 1/ 引言/ 与/ 传统/ 的/ 软件测试/ 方法/ 不同/ ,/ 面向/ 代码/ 缺陷/ 的/ 静态/ 测试/ 技术/ 首先/ 从/ 软件/ 的/ 代码/ 层面/ 上/ 总结/ 缺陷/ ,/ 将/ 其/ 抽象/ 成/ 相应/ 的/ 缺陷/ 模式/ ,/ 然后/ 对/ 程序/ 中/ 相关/ 表达式/ 的/ 取值/ 进行/ 近似计算/ ,/ 最后/ 将/ 计算结果/ 应用/ 于/ 缺陷/ 检测/ ./ 自/ 2000/ 年/ 以来/ ,/ 面向/ 代码/ 缺陷/ 的/ 软件/ 静/ Page2/ 态/ 测试/ 技术/ [/ 1/ -/ 5/ ]/ 正/ 逐渐/ 受到/ 软件/ 业界/ 的/ 青睐/ ,/ 已/ 成为/ 美国/ 等/ 一些/ 国家/ 的/ 一种/ 主流/ 的/ 软件测试/ 技术/ ./ 目前/ 具有/ 代表性/ 的/ 代码/ 缺陷/ 检测工具/ 主要/ 有/ Coverity/ ①/ ,/ CodeSonar/ ②/ ,/ FindBugs/ ③/ ,/ K8/ ④/ 和/ Fortify/ ⑤/ 等等/ ,/ 对比/ 检测工具/ 的/ 测试/ 结果表明/ ,/ 现有/ 工具/ 均/ 存在/ 不同/ 程度/ 的/ 误报/ 及/ 漏报/ 情况/ ./ 为了/ 能够/ 处理/ 一些/ 非/ 预期/ 的/ 情况/ ,/ Java/ 语言/ 提高/ 对/ 两类/ 异常/ 的/ 支持/ :/ 检查/ 型/ 异常/ 和/ 运行/ 时/ 异常/ ./ 编译器/ 强制/ 要求/ 对/ 检查/ 型/ 异常/ 进行/ 处理/ ,/ 而/ 对/ 运行/ 时/ 异常/ 却/ 难以/ 限制/ ./ 当/ 运行/ 时/ 异常/ 发生/ 后/ ,/ 系统/ 会/ 按照/ 方法/ 调用/ 关系/ 的/ 逆序/ 逐级/ 上/ 抛/ ,/ 直到/ 相应/ 异常/ 被/ 捕获/ ,/ 否则/ 终止/ 程序/ 或/ 线程/ ./ 运行/ 时/ 异常/ 的/ 影响/ 对于/ 被/ 终止/ 的/ 程序/ 或/ 线程/ 是/ 明显/ 的/ ,/ 但/ 若/ 在/ 上/ 抛/ 过程/ 中/ 被/ 捕获/ 到/ ,/ 程序/ 或/ 线程/ 并/ 不会/ 终止/ ,/ 但/ 可能/ 会/ 影响/ 其/ 正常/ 执行/ 逻辑/ ,/ 由此/ 造成/ 难以/ 检测/ 及/ 定位/ 的/ 错误/ ./ 由于/ 异常/ 处理/ 机制/ 的/ 引入/ ,/ 使/ 程序/ 的/ 控制流/ 变得/ 更为/ 复杂/ ,/ 给/ 静态/ 分析/ 及/ 测试/ 工作/ 带来/ 更大/ 的/ 挑战/ ./ 目前/ 许多/ 专家学者/ 虽然/ 就此/ 进行/ 研究/ ,/ 但/ 对于/ “/ 当/ 一个/ 运行/ 时/ 异常/ 发生/ 后/ ,/ 它/ 是否/ 会/ 导致/ 其它/ 新/ 的/ 运行/ 时/ 异常/ ?/ 这些/ 运行/ 时/ 异常/ 对/ 静态/ 测试/ 结果/ 产生/ 哪些/ 影响/ ?/ ”/ 等/ 问题/ 却是/ 难以/ 回答/ ./ 目前/ 所有/ 的/ 代码/ 缺陷/ 检测/ 技术/ 及/ 工具/ 均/ 没有/ 考虑/ 到/ 该/ 问题/ ,/ 由此/ 引起/ 的/ 路径分析/ 不/ 充分/ 是/ 导致/ 缺陷/ 漏报/ 的/ 主要/ 原因/ 之一/ ./ 因此/ ,/ 本文/ 就/ 运行/ 时/ 异常/ 对/ Java/ 程序/ 静态/ 测试/ 的/ 影响/ 进行/ 进一步/ 研究/ ./ 2/ 问题/ 描述/ 面向/ 代码/ 缺陷/ 的/ 静态/ 测试/ 技术/ 从/ 理论/ 上/ 可/ 描述/ 为/ 对/ 问题/ D/ =/ {/ P/ ,/ M/ ,/ A/ }/ 的/ 求解/ ,/ 这里/ P/ 代表/ 被测/ 程序/ ;/ M/ 是/ 与/ P/ 对应/ 的/ 代码/ 缺陷/ 模式/ 集合/ ;/ A/ 是/ 缺陷/ 检测/ 算法/ ,/ 用于/ 计算/ P/ 中/ 相关/ 表达式/ 的/ 取值/ 信息/ ./ 算法/ 描述/ 为/ A/ =/ {/ S/ ,/ ρ/ (/ L/ ,/ X/ )/ ,/ σ/ (/ F/ )/ }/ ,/ 其中/ S/ 为/ 程序/ P/ 中/ 的/ 路径/ ;/ ρ/ 为/ 近似/ 地/ 计算/ 相关/ 变量/ X/ 的/ 取值/ 信息/ ,/ L/ 为/ P/ 的/ 执行/ 位置/ ,/ X/ 为/ P/ 执行/ 到/ L/ 处/ 的/ 相关/ 变量/ ;/ σ/ 为/ 方法/ 的/ 摘要/ 信息/ ,/ 近似/ 地/ 表示/ 对/ P/ 中/ 被/ 调用/ 方法/ F/ 的/ 抽象/ ./ 由于/ 运行/ 时/ 异常/ 的/ 引入/ ,/ 将/ 受/ 其/ 影响/ 的/ 控制流/ 路径/ S/ 扩展/ 为/ S1/ ,/ 而/ 在/ S1/ 上/ 又/ 可能/ 发生/ 新/ 的/ 运行/ 时/ 异常/ ,/ 经过/ 如此/ 迭代/ 过程/ 后/ ,/ 可/ 得到/ 一个/ 路径/ 集合/ [/ S1/ ,/ …/ ,/ Sn/ ]/ ,/ 其中/ Si/ 是/ 由/ Si/ -/ 1/ 上/ 发现/ 的/ 新/ 运行/ 时/ 异常/ 扩展/ 而成/ ,/ 且/ Si/ -/ 1/ / Si/ ,/ 由此/ 对/ A/ 的/ 描述/ 转化/ 为/ A/ =/ {/ S/ ∪/ [/ S1/ ,/ …/ ,/ Sn/ ]/ ,/ ρ/ (/ L/ ,/ X/ )/ ,/ σ/ (/ F/ )/ }/ ./ 在/ 静态/ 测试/ 过程/ 中/ ,/ 如果/ 忽略/ 了/ 对/ 运行/ 时/ 异常/ 的/ 处理/ ,/ 即/ 在/ A/ 中/ 遗漏/ 了/ 分析/ 路径/ [/ S1/ ,/ …/ ,/ Sn/ ]/ ,/ 则/ 会/ 有/ {/ ρ/ (/ L/ ,/ X/ )/ |/ S/ }/ / {/ ρ/ (/ L/ ,/ X/ )/ |/ S/ ∪/ [/ S1/ ,/ …/ ,/ Sn/ ]/ }/ ,/ 由此/ 会/ 导致/ 缺陷/ 漏报/ 情况/ 的/ 出现/ ,/ 即/ / x/ ,/ x/ ∈/ {/ ρ/ (/ L/ ,/ X/ )/ |/ S/ }/ ∧/ / D/ (/ P/ ,/ M/ ,/ A/ )/ / x/ ,/ x/ ∈/ {/ ρ/ (/ L/ ,/ X/ )/ |/ S/ ∪/ [/ S1/ ,/ …/ ,/ Sn/ ]/ }/ ∧/ D/ (/ P/ ,/ M/ ,/ A/ 其中/ D/ (/ P/ ,/ M/ ,/ A/ )/ 表示/ 由于/ 变量/ X/ 的/ 取值/ x/ 引起/ M/ ,/ / D/ (/ P/ ,/ M/ ,/ A/ )/ 表示/ 变量/ X/ 的/ 取值/ x/ 不会/ 引起/ M/ ,/ FN/ (/ X/ )/ 表示/ 对/ 变量/ X/ 的/ 漏报/ ./ 以下/ Java/ 代码/ 片段/ 包括/ 三级/ 方法/ 调用/ ,/ f3/ 调用/ f2/ ,/ f2/ 调用/ f1/ ./ 如果/ 不/ 考虑/ 运行/ 时/ 异常/ 的/ 影响/ ,/ 现有/ 测试方法/ 可以/ 很/ 容易/ 地/ 检测/ 到/ 第/ 7/ 行/ p/ 的/ 空/ 指针/ 异常/ (/ 尽管/ 它/ 可以/ 被/ 捕获/ 到/ )/ ./ 但/ 除此之外/ 还/ 存在/ 其它/ 的/ 问题/ 吗/ ?/ 结合/ 运行/ 时/ 异常/ 对/ 路径/ 的/ 影响/ 后/ ,/ 答案/ 显然/ 是/ 否定/ 的/ ,/ 实际/ 结果/ 应为/ (/ 1/ )/ 如果/ 第/ 5/ 行/ 的/ 条件/ 为/ 真/ ,/ 则/ 程序执行/ 到/ 第/ 7/ 行/ 时会/ 抛出/ 一个/ 空/ 指针/ 异常/ ,/ 且/ 它/ 在/ 第/ 9/ 行/ 被/ 捕获/ ./ (/ 2/ )/ 第/ 3/ 行/ 的/ q/ 初始值/ 为空/ ,/ 当/ 出现/ 结果/ 1/ 的/ 情况/ 时/ ,/ 会/ 略过/ 第/ 8/ 行对/ q/ 的/ 资源分配/ 操作/ 而/ 执行/ 第/ 9/ 行/ 的/ 异常/ 捕获/ ,/ 这样/ 会/ 在/ 第/ 10/ 行/ 触发/ q/ 的/ 空/ 指针/ 异常/ ,/ 且/ 由于/ 未/ 被/ 捕获/ 而/ 抛出/ f1/ ./ (/ 3/ )/ 当/ 出现/ 结果/ 2/ 中/ 的/ 情况/ 时/ ,/ 会/ 在/ 第/ 10/ 行/ 抛出/ 空/ 指针/ 异常/ ,/ 则/ 原本/ 在/ 第/ 11/ 行/ 释放/ 资源/ r/ 的/ 操作/ 被/ 略过/ ,/ 造成/ 对/ r/ 的/ 资源/ 泄漏/ ./ (/ 4/ )/ 当/ 出现/ 结果/ 2/ 中/ 的/ 情况/ 时/ ,/ 第/ 17/ 行/ 的/ f1/ 会/ 抛出/ 空/ 指针/ 异常/ ,/ 由于/ 此/ 异常/ 不能/ 被/ 18/ 行/ 捕获/ ,/ 从而/ 造成/ 16/ 行对/ q/ 分配/ 的/ 资源/ 泄漏/ ./ (/ 5/ )/ 由于/ 在/ 27/ 行/ 捕获/ 了/ 所有/ 类型/ 的/ 异常/ ,/ 使/ 运行/ 时/ 异常/ 不能/ 传播/ 到/ 程序/ 入口/ 而/ 终止/ 线程/ 过/ 进程/ ,/ 因此/ 以上/ 问题/ 会/ 隐藏/ 起来/ ,/ 难以/ 检测/ 及/ 定位/ ./ classtest/ {/ 1/ ./ FileInputStreamp/ ,/ r/ ;/ 2/ ./ voidf1/ (/ )/ throwsIOException/ {/ 3/ ./ FileInputStreamq/ =/ null/ ;/ 4/ ./ try/ {/ 5/ ./ if/ (/ p/ =/ =/ null/ )/ 6/ ./ System/ ./ out/ ./ println/ (/ "/ null/ !/ "/ )/ ;/ 7/ ./ p/ ./ mark/ (/ 0/ )/ ;/ 8/ ./ q/ =/ newFileInputStream/ (/ "/ output/ "/ )/ ;/ 9/ ./ }/ catch/ (/ NullPointerExceptione/ )/ {/ }/ 10/ ./ q/ ./ close/ (/ )/ ;/ 11/ ./ r/ ./ close/ (/ )/ ;/ ①/ ②/ ③/ ④/ ⑤/ Page312/ ./ }/ 13/ ./ voidf2/ (/ )/ throwsIOException/ {/ 14/ ./ FileInputStreamq/ =/ null/ ;/ 15/ ./ try/ {/ 16/ ./ q/ =/ newFileInputStream/ (/ "/ input/ "/ )/ ;/ 17/ ./ f1/ (/ )/ ;/ 18/ ./ }/ catch/ (/ IOExceptione/ )/ {/ 19/ ./ q/ ./ close/ (/ )/ ;/ 20/ ./ return/ ;/ 21/ ./ }/ 22/ ./ q/ ./ close/ (/ )/ ;/ 23/ ./ }/ 24/ ./ voidf3/ (/ )/ {/ 25/ ./ try/ {/ 26/ ./ f2/ (/ )/ ;/ 27/ ./ }/ catch/ (/ Exceptione/ )/ {/ }/ 28/ ./ }/ }/ 3/ 运行/ 时/ 异常/ 描述/ 及/ 检测/ 3.1/ 异常/ 描述/ 问题/ D/ =/ {/ P/ ,/ M/ ,/ A/ }/ 中/ 的/ 缺陷/ 模式/ M/ 是/ 求解/ D/ 的/ 基础/ ,/ 如何/ 将/ 运行/ 时/ 异常/ 特征/ 包含/ 于/ M/ 之中/ 是/ 首先/ 需要/ 解决/ 的/ 问题/ ,/ 本文/ 采用/ 异常/ 模式/ 状态机/ 对/ 其/ 进行/ 统一/ 描述/ 如下/ ./ 定义/ 1/ ./ 异常/ 模式/ 状态机/ 定义/ 为/ 一个/ 三元组/ EM/ =/ 〈/ N/ ,/ T/ ,/ C/ 〉/ ./ N/ 为/ 状态/ 集合/ ,/ 包括/ 一个/ 异常/ 模式/ 中/ 所有/ 可能/ 达到/ 的/ 状态/ ,/ N/ =/ {/ Nstart/ ,/ Nexception/ ,/ Nend/ }/ ∪/ Nother/ ./ T/ =/ {/ 〈/ ni/ ,/ nj/ 〉/ |/ ni/ ,/ nj/ ∈/ N/ }/ 是/ 状态/ 转换/ 集合/ ,/ 表示/ 状态机/ 可以/ 从/ 状态/ ni/ 转换/ 到/ 状态/ nj/ ./ C/ 是/ 状态/ 转换/ 条件/ ,/ T/ :/ N/ ×/ C/ →/ N/ ./ 由于/ 运行/ 时/ 异常/ 的/ 发生/ 模式/ 多种多样/ ,/ 所以/ 不同/ 类型/ 的/ 异常/ 由/ 不同/ 的/ 异常/ 模式/ 状态机/ 来/ 描述/ ,/ 但/ 所有/ 异常/ 模式/ 状态机/ 间/ 的/ 共有/ 状态/ 有/ {/ Nstart/ ,/ Nexception/ ,/ Nend/ }/ ./ Nstart/ 是/ 状态机/ 的/ 唯一/ 入口/ ,/ Nend/ 是/ 状态机/ 的/ 唯一/ 出口/ ,/ Nexception/ 代表/ 发生/ 运行/ 时/ 异常/ 的/ 状态/ ./ Nother/ 表示/ 除/ 以上/ 3/ 种/ 状态/ 之外/ 的/ 其它/ 状态/ ,/ 随/ 异常/ 类型/ 的/ 不同/ 而/ 不同/ ./ 在/ 给定/ 某种/ 异常/ 模式/ 状态机/ 的/ 所有/ 状态/ 后/ ,/ 状态/ 间/ 的/ 转换/ 集合/ T/ 及其/ 对应/ 的/ 转换/ 条件/ C/ 需要/ 手工/ 设定/ ./ 图/ 1/ 是/ 一个/ 空/ 指针/ 异常/ 模式/ 状态机/ ,/ 除了/ 共有/ 的/ 状态/ Nstart/ 、/ Nend/ 和/ Nexception/ 外/ ,/ 还/ 具有/ 代表/ 非空/ 的/ 状态/ Nnot/ 和/ 代表/ 可能/ 为空/ 的/ 状态/ Nmay/ ./ 经/ 人工/ 分析/ ,/ 与/ 空/ 指针/ 异常/ 相关/ 的/ 状态/ 转换/ 条件/ 有/ C1/ (/ 确定/ 对象/ 可能/ 空/ )/ ,/ C2/ (/ 确定/ 对象/ 非空/ )/ ,/ C3/ (/ 引用/ 对象/ 内容/ )/ ,/ C4/ (/ 超出/ 对象/ 作用域/ )/ ,/ C5/ (/ 自动/ 转换/ )/ ,/ C6/ (/ 其它/ )/ ,/ 与其/ 相关/ 的/ 状态/ 转换/ 集合/ 为/ T1/ :/ Nstart/ ×/ C6/ →/ Nstart/ ,/ T2/ :/ Nstart/ ×/ C1/ →/ Nmay/ ,/ T3/ :/ Nstart/ ×/ C2/ →/ Nnot/ ,/ T4/ :/ Nmay/ ×/ C6/ →/ Nmay/ ,/ T5/ :/ Nmay/ ×/ C3/ →/ Nexception/ ,/ T6/ :/ Nmay/ ×/ C4/ →/ Nend/ ,/ T7/ :/ Nmay/ ×/ C2/ →/ Nnot/ ,/ T8/ :/ Nnot/ ×/ C6/ →/ Nnot/ ,/ T9/ :/ Nnot/ ×/ C4/ →/ Nend/ ,/ T10/ :/ Nnot/ ×/ C1/ →/ Nmay/ ,/ T11/ :/ Nexception/ ×/ C5/ →/ Nend/ ./ 对于/ 其它/ 类型/ 的/ 异常/ 模式/ 描述/ ,/ 是/ 一个/ 与/ 上述/ 空/ 指针/ 异常/ 模式/ 类似/ 的/ 手工/ 生成/ 过程/ :/ 首先/ 确定/ 异常/ 相关/ 状态/ ,/ 然后/ 分析/ 所有/ 状态/ 间/ 的/ 转换/ 条件/ ,/ 最后/ 生成/ 不同/ 状态/ 间/ 的/ 转换/ 集合/ ./ 在/ 异常/ 模式/ 状态/ 机上/ 进行/ 状态/ 转换/ 时/ ,/ 需要/ 结合/ 具体/ 变量/ X/ 的/ 取值/ 信息/ ρ/ (/ L/ ,/ X/ )/ 及/ 状态/ 转换/ 条件/ C/ 来/ 完成/ ,/ 下面/ 给出/ 状态机/ 实例/ 的/ 概念/ ./ 定义/ 2/ ./ 针对/ 变量/ X/ 创建/ 的/ 异常/ 模式/ 状态机/ EM/ 称为/ 对应/ X/ 的/ 异常/ 模式/ 状态机/ 实例/ EM/ (/ X/ )/ ./ EM/ (/ X/ )/ 上/ 的/ 实际/ 状态/ 转换/ 为/ ni/ =/ {/ nj/ ×/ C/ |/ ρ/ (/ L/ ,/ X/ )/ }/ ,/ 结合/ 具体/ 变量/ X/ 在/ 位置/ L/ 处/ 的/ 取值/ 信息/ ,/ 通过/ 状态/ 转换/ 条件/ C/ 可/ 将/ EM/ (/ X/ )/ 的/ 当前/ 状态/ nj/ 转换/ 为/ 状态/ ni/ ./ 对/ 独立/ 变量/ X/ 的/ 异常/ 模式/ 状态机/ 实例/ 描述/ 为/ EM/ (/ X/ )/ ,/ 对/ 程序/ P/ 所/ 对应/ 的/ 异常/ 模式/ 状态机/ 实例/ 可/ 做/ 如下/ 描述/ ./ 定义/ 3/ ./ 假设/ 程序/ P/ 包括/ n/ 种/ 既定/ 的/ 运行/ 时/ 异常/ 模式/ {/ EM1/ ,/ EM2/ ,/ …/ ,/ EMn/ }/ ,/ 受/ P/ 中/ 的/ 相关/ 变量/ X/ 影响/ ,/ 每种/ 异常/ 模式/ EMi/ 最多/ 对应/ m/ 种/ 异常/ 模式/ 状态机/ 实例/ {/ EMi/ (/ X1/ )/ ,/ EMi/ (/ X2/ )/ ,/ …/ ,/ EMi/ (/ Xm/ )/ }/ ,/ 则/ 程序/ P/ 对应/ 的/ 所有/ 异常/ 模式/ 状态机/ 实例/ 构成/ P/ 的/ 异常/ 模式/ 状态机/ 实例/ 矩阵/ ,/ 记/ 作/ (/ EMij/ )/ n/ ×/ m/ =/ EMi/ (/ Xj/ )/ =/ / 表示/ 变量/ Xj/ 与/ 异常/ 模式/ EMi/ 无关/ ,/ 不/ 需要/ 为/ Xj/ 创建/ 该类/ 状态机/ 实例/ ./ 对于/ (/ EMij/ )/ n/ ×/ mPage4/ 中/ 所有/ 非空/ 状态机/ 实例/ ,/ 表示/ 需要/ 为/ 程序/ P/ 中/ 的/ 变量/ Xj/ 创建/ 异常/ 模式/ 状态机/ 实例/ ./ 在/ 所有/ 非空/ 的/ 状态机/ 实例/ 中/ ,/ 相同/ 的/ 状态/ 为/ {/ Nstart/ ,/ Nexception/ ,/ Nend/ }/ ,/ 至于/ 其它/ 的/ 中间状态/ Nother/ 和/ 状态/ 转换/ 条件/ C/ 随/ EMi/ 的/ 不同/ 而/ 各异/ ./ 3.2/ 异常/ 检测/ 有/ 了/ 以上/ 对/ 运行/ 时/ 异常/ 进行/ 描述/ 的/ 方法/ 后/ ,/ 可以/ 为/ 程序/ 中/ 与/ 特定/ 异常/ 模式/ EM/ 相关/ 的/ 变量/ X/ 创建/ 异常/ 模式/ 状态机/ 实例/ EM/ (/ X/ )/ ,/ 应用/ 缺陷/ 检测/ 算法/ A/ =/ {/ S/ ,/ ρ/ (/ L/ ,/ X/ )/ ,/ σ/ (/ F/ )/ }/ ,/ 结合/ 与/ X/ 相关/ 的/ 取值/ 信息/ 及/ 状态/ 转换/ 条件/ 实现/ 状态/ 转换/ ./ 当/ EM/ (/ X/ )/ 中/ 出现异常/ 状态/ Nexception/ 时/ ,/ 表示/ 在/ 位置/ L/ 处/ 可能/ 发生/ 运行/ 时/ 异常/ ./ ρ/ (/ L/ ,/ X/ )/ 的/ 计算/ 原理/ 是/ 以/ 传统/ 的/ 数据流/ 迭代/ 方程/ 为/ 基础/ ,/ 在/ 遍历/ 控制流/ 每/ 一个/ 节点/ 的/ 过程/ 中/ ,/ 计算/ 相关/ 变量/ 的/ 取值/ 信息/ ./ 这个/ 过程/ 的/ 详细信息/ 可/ 参考文献/ [/ 6/ -/ 8/ ]/ ,/ 这里/ 仅以/ Java/ 代码/ 片段/ 中/ 4/ ~/ 8/ 行为/ 例/ ,/ 简单/ 描述/ 对/ 运行/ 时/ 异常/ 的/ 检测/ 过程/ ./ 为/ p/ 创建/ 空/ 指针/ 异常/ 模式/ 状态机/ 实例/ 后/ ,/ 异常/ 检测/ 过程/ 如图/ 2/ 所示/ ./ 其中/ 控制流/ 节点/ 序号/ 对应/ 代码/ 片段/ 中/ 的/ 行号/ ,/ unknow/ 表示/ 对象/ 取值/ 未知/ ,/ all/ 表示/ 对象/ 取值/ 为空/ 或非/ 空/ ,/ null/ 表示/ 对象/ 取值/ 为空/ ./ 应用/ p/ 的/ 取值/ 信息/ 及/ 状态/ 转换/ 条件/ ,/ 异常/ 模式/ 状态机/ 实例/ EM/ (/ p/ )/ 的/ 状态/ 从/ 控制流/ 节点/ 4/ 上/ 的/ Nstart/ 状态/ 逐步/ 转换/ 到/ 控制流/ 节点/ 8/ 上/ 的/ Nend/ 状态/ ,/ 且/ 在/ 节点/ 7/ 上/ 发现异常/ 状态/ Nexception/ ./ 图/ 2/ 异常/ 模式/ 状态机/ 实例/ 在/ f1/ 片段/ 上/ 的/ 状态/ 转换/ 以上/ 过程/ 表明/ 控制流/ 节点/ 7/ 所/ 对应/ 的/ 语句/ 可/ 抛出/ 空/ 指针/ 异常/ ,/ 即/ 为/ 可/ 抛出/ 运行/ 时/ 异常/ 的/ 语句/ ;/ 若该/ 运行/ 时/ 异常/ 不能/ 被/ 当前/ 方法/ 所/ 捕获/ ,/ 则/ 当前/ 方法/ 为/ 可/ 抛出/ 运行/ 时/ 异常/ 的/ 方法/ ./ 由于/ 第/ 2/ 节/ 程序/ 中/ 第/ 7/ 行/ 抛出/ 的/ 运行/ 时/ 异常/ 会/ 在/ 第/ 9/ 行/ 被/ 捕获/ ,/ 因此/ 方法/ f1/ 在/ 此处/ 不能/ 抛出/ 该/ 异常/ ./ 但/ 在/ 第/ 7/ 行/ 异常/ 触发/ 的/ 条件/ 下/ ,/ 第/ 10/ 行/ 也/ 会/ 抛出/ 空/ 指针/ 异常/ ,/ 而/ 该/ 异常/ 不会/ 被/ f1/ 捕获/ ,/ 由此/ f1/ 为/ 可/ 抛出/ 运行/ 时/ 异常/ 的/ 方法/ ./ 为了/ 能够/ 准确/ 应用/ 运行/ 时/ 异常/ 信息/ ,/ 定义/ 异常/ 定义/ 4/ ./ 异常/ 向量/ 用于/ 描述/ 在/ 静态/ 测试/ 过程/ 中/ 检测/ 到/ 的/ 运行/ 时/ 异常/ ,/ 包括/ 运行/ 时/ 异常/ 发生/ 的/ 位置/ P/ 及/ 对应/ 的/ 异常/ 类型/ T/ ,/ 表示/ 为/ 犜/ 犘/ ./ 向量/ 的/ 模/ |/ 犜/ 犘/ |/ 表示/ 异常/ 相关/ 变量/ 的/ 当前/ 取值/ 信息/ ./ 应用/ 异常/ 向量/ ,/ 通过/ 异常/ 模式/ 状态机/ 实例/ 及/ 缺陷/ 检测/ 算法/ 检测/ 发现/ 运行/ 时/ 异常/ 的/ 过程/ 可/ 描述/ 为/ EM/ (/ X/ )/ A/ (/ X/ )/ →/ 犜/ 犘/ ,/ 其中/ 向量/ 的/ 位置/ P/ 由/ 算法/ A/ (/ X/ )/ 中/ 的/ L/ 确定/ ,/ 向量/ 的/ 类型/ T/ 与/ EM/ (/ X/ )/ 相关/ ,/ 向量/ 的/ 模/ |/ 犜/ 犘/ |/ 与/ ρ/ (/ L/ ,/ X/ )/ 相关/ ./ 当/ 运行/ 时/ 异常/ 被/ 触发/ 后/ ,/ 若/ 方法/ F/ 内/ 的/ 控制结构/ 可以/ 捕获/ 到/ ,/ 则/ 该/ 异常/ 不会/ 传播/ 出/ 方法/ ;/ 否则/ 该/ 异常/ 会/ 被/ 抛出/ 方法/ F/ ,/ 所有/ 此类/ 异常/ 构成/ 方法/ 可/ 抛出/ 的/ 异常/ 向量/ ,/ 记作/ 犉/ =/ ∪/ 犜/ 犘/ ./ 4/ 运行/ 时/ 异常/ 控制流/ 4.1/ 与/ 传统/ 控制流/ 的/ 区别/ 传统/ 方法/ 在/ 构建/ 程序控制/ 流/ 时/ ,/ 除了/ 包含/ 显式/ 抛出/ 异常/ 的/ 语句/ 和/ 方法/ 外/ ,/ 也/ 包含/ 隐式/ 抛出/ 异常/ 的/ 方法/ ,/ 如/ Java/ 语言/ 中/ 的/ 检查/ 型/ 异常/ ,/ 但/ 对于/ 可/ 抛出/ 运行/ 时/ 异常/ 的/ 语句/ 和/ 方法/ 却/ 很少/ 涉及/ ./ 运行/ 时/ 异常/ 控制流/ 是/ 描述/ 包括/ 运行/ 时/ 异常/ 处理/ 的/ 程序/ 有向图/ ,/ 它/ 在/ 程序/ 原/ 控制流/ 的/ 基础/ 上/ ,/ 增加/ 了/ 描述/ 运行/ 时/ 异常/ 处理/ 结构/ 的/ 点集/ 和/ 边集/ ,/ 包含/ 的/ 信息/ 有/ {/ N/ ,/ E/ ,/ Ner/ ,/ Nef/ ,/ Ere/ }/ ./ 其中/ N/ 是/ 节点/ 集/ ,/ 每个/ 程序/ 语句/ 都/ 对应/ 图中/ 的/ 一个/ 节点/ ./ 除了/ 传统/ 控制流/ 图中/ 的/ 节点/ 外/ ,/ Ner/ 是/ 包括/ 可/ 抛出/ 运行/ 时/ 异常/ 语句/ 的/ 节点/ ,/ Nef/ 是/ 包括/ 可/ 抛出/ 运行/ 时/ 异常/ 方法/ 的/ 节点/ ./ 边集/ E/ =/ {/ 〈/ ni/ ,/ nj/ 〉/ |/ ni/ ,/ nj/ ∈/ N/ }/ ,/ 表示/ 节点/ ni/ 对应/ 的/ 语句/ 执行/ 后/ ,/ 可能/ 立即/ 执行/ 节点/ nj/ 对应/ 的/ 语句/ ./ Ere/ 为/ Ner/ 和/ Nef/ 节点/ 的/ 一条/ 输出/ 边/ ,/ 对应/ 被/ 抛出/ 运行/ 时/ 异常/ 的/ 处理/ :/ 被/ 捕获/ 的/ 运行/ 时/ 异常/ 通过/ Ere/ 连接/ 到/ 相应/ 的/ 捕获/ 节点/ ,/ 未/ 被/ 捕获/ 的/ 运行/ 时/ 异常/ 通过/ Ere/ 连接/ 到/ 控制流/ 的/ 异常/ 退出/ 节点/ ./ N/ =/ {/ Ner/ ,/ Nef/ }/ ∪/ Nother/ ,/ Nother/ 表示/ 传统/ 控制流/ 中/ 的/ 节点/ ,/ E/ =/ {/ Ere/ }/ ∪/ Eother/ ,/ Eother/ 表示/ 传统/ 控制流/ 中/ 的/ 边/ ./ 基于/ 以上/ 描述/ ,/ 运行/ 时/ 异常/ 控制流/ 与/ 传统/ 控制流/ 区别/ 总结/ 如下/ :/ 向量/ 如下/ ./ (/ 1/ )/ 为了/ 便于/ 定位/ 运行/ 时/ 异常/ ,/ 每个/ 语句/ 作为/ 一个/ 控制流/ 节点/ ,/ 而/ 不是/ 一个/ 语句/ 块/ ;/ (/ 2/ )/ 每/ 一个/ 能够/ 抛出/ 运行/ 时/ 异常/ 的/ 方法/ ,/ 都/ 有/ 一个/ 异常/ 退出/ 节点/ 作为/ 所有/ 方法/ 内未/ 被/ 捕获/ 异常/ 的/ Page5/ 后继/ 节点/ ./ 为了/ 保证/ 控制流/ 中/ 出口/ 的/ 唯一性/ ,/ 每/ 一个/ 控制流/ 增加/ 一个/ 正常/ 退出/ 节点/ ,/ 它/ 和/ 异常/ 退出/ 节点/ 的/ 后继/ 节点/ 为/ 控制流/ 的/ 退出/ 节点/ ;/ (/ 3/ )/ 对应/ 每/ 一个/ 可/ 抛出/ 运行/ 时/ 异常/ 的/ 节点/ Ner/ 或/ Nef/ ,/ 通过/ 边/ Ere/ 连接/ 到/ 与其/ 类型/ 对应/ 的/ 异常/ 捕获/ 节点/ ,/ 或/ 没有/ 与其/ 对应/ 的/ 异常/ 退出/ 节点/ ./ 4.2/ 异常/ 控制流/ 序列/ 当/ 运行/ 时/ 异常/ 被/ 触发/ 时/ ,/ 它会/ 动态/ 地/ 扩展/ 当前/ 控制流/ ,/ 而/ 在/ 被/ 扩展/ 的/ 控制流/ 上/ 又/ 可能/ 出现/ 新/ 的/ 运行/ 时/ 异常/ ,/ 这个/ 运行/ 时/ 异常/ 对/ 控制流/ 的/ 扩展/ 和/ 在/ 扩展/ 的/ 控制流/ 上/ 发生/ 新/ 运行/ 时/ 异常/ 的/ 迭代/ 过程/ 会/ 产生/ 一个/ 控制流/ 序列/ ,/ 其/ 定义/ 如下/ ./ 定义/ 5/ ./ 异常/ 控制流/ 序列/ 表明/ 运行/ 时/ 异常/ 行为/ 与/ 扩展/ 的/ 控制流/ 之间/ 的/ 交互/ 关系/ ,/ 包括/ 运行/ 时/ 异常/ 对/ 控制流/ 的/ 扩展/ 和/ 在/ 扩展/ 的/ 控制流/ 上/ 检测/ 新/ 的/ 运行/ 时/ 异常/ 以及/ 如此/ 重复/ 迭代/ 的/ 过程/ ,/ 表示/ 为/ 一个/ 四元组/ EC/ =/ 〈/ RS/ ,/ ES/ ,/ G/ ,/ T/ 〉/ ./ RS/ 是/ 一个/ 控制流/ 有序/ 集合/ {/ RS0/ ,/ RS1/ ,/ …/ ,/ RSn/ }/ ,/ 表示/ 受/ 运行/ 时/ 异常/ 的/ 影响/ ,/ 控制流/ 从/ RS0/ 开始/ 逐步/ 扩展/ 到/ RSn/ ;/ ES/ =/ {/ ES0/ ,/ ES1/ ,/ …/ ,/ ESn/ }/ 是/ 一个/ 与/ RS/ 对应/ 的/ 集合/ ,/ 由/ 若干/ 异常/ 向量/ 集合/ 构成/ ,/ 犜/ 犘/ ∈/ ESi/ 表示/ 在/ RSi/ 上/ 可/ 发现/ 的/ 异常/ 向量/ ;/ G/ 是从/ RSi/ 上/ 生成/ ESi/ 的/ 规则/ ,/ T/ 是/ 通过/ ESi/ 将/ RSi/ 转化/ 为/ RSi/ +/ 1/ 的/ 规则/ ./ 在/ 规则/ G/ 下/ ,/ ES0/ =/ ∪/ / N/ ∈/ REC0M/ ,/ A/ )/ |/ RS0/ }/ 包括/ 两/ 部分/ 内容/ ,/ 其一/ 是/ 控制流/ RS0/ 中/ 所有/ 包括/ 方法/ 调用/ 的/ 节点/ 所/ 抛出/ 的/ 异常/ 向量/ ;/ 其二/ 是/ 在/ 控制流/ RS0/ 上/ 对/ 问题/ D/ (/ P/ ,/ M/ ,/ A/ )/ 求/ 的/ 有效/ 解/ ./ D/ 中/ 的/ M/ 为/ 定义/ 3/ 中/ 的/ 状态机/ 实例/ 矩阵/ (/ EMij/ )/ n/ ×/ m/ ,/ 在/ 计算/ 过程/ (/ EMij/ )/ n/ ×/ m/ ×/ A/ 中/ ,/ EM1/ (/ X1/ )/ EM1/ (/ X2/ )/ …/ EM1/ (/ Xm/ )/ 熿/ EM2/ (/ X1/ )/ EM2/ (/ X2/ )/ …/ EM2/ (/ Xm/ )/ …/ …/ EMn/ (/ X1/ )/ EMn/ (/ X2/ )/ …/ EMn/ (/ Xm/ 燀/ ∑/ ni/ =/ 1/ ∑/ mj/ =/ 1/ ∑/ m/ 当/ 变量/ Xj/ 与/ 异常/ 模式/ EMi/ 无关/ 时/ EMi/ (/ Xj/ )/ A/ (/ Xk/ )/ =/ / ,/ 另外/ ,/ 当/ j/ ≠/ k/ 时/ EMi/ (/ Xj/ )/ A/ (/ Xk/ )/ =/ / ./ EMi/ (/ Xj/ )/ A/ (/ Xj/ )/ ≠/ / 表示/ 对/ 非空/ 实例/ EMi/ (/ Xj/ )/ 应用/ 算法/ A/ (/ Xj/ )/ ,/ 结合/ EMi/ 的/ 状态/ 转换/ 条件/ C/ 实现/ 状态/ 转换/ ./ 当/ 在/ RS0/ 的/ 节点/ N/ 得到/ EMi/ (/ Xj/ )/ 的/ 异常/ 状态/ Nexception/ 时/ ,/ 即/ 有/ EMi/ (/ Xj/ )/ A/ (/ Xj/ )/ →/ 犜/ 犘/ ,/ 其中/ 位置/ P/ 对应/ 到/ RS0/ 中/ 的/ 节点/ N/ ,/ 类型/ T/ 对应/ 到/ EMi/ 表示/ 的/ 异常/ 类型/ ,/ |/ 犜/ 犘/ |/ 对应/ 到/ Xj/ 的/ 取值/ ρ/ (/ N/ ,/ Xj/ )/ ./ 在/ 规则/ T/ 下/ ,/ RSi/ +/ 1/ =/ RSi/ ×/ ESi/ ,/ 应用/ ESi/ 中记/ 在/ 规则/ G/ 下/ ,/ Ek/ =/ {/ D/ (/ P/ ,/ M/ ,/ A/ )/ |/ RSk/ }/ 是/ 在/ 异常/ 控制流/ RSk/ 上/ 对/ 问题/ D/ (/ P/ ,/ M/ ,/ A/ )/ 求/ 的/ 新/ 有效/ 解/ ./ M/ 为/ 状态机/ 实例/ 矩阵/ (/ EMij/ )/ n/ ×/ m/ ,/ 对于/ M/ 中/ 的/ 任一/ 实例/ EMi/ (/ Xj/ )/ 所/ 对应/ 的/ 变量/ Xj/ ,/ 算法/ A/ (/ Xj/ )/ 在/ 路径/ S/ ∪/ ∪/ kl/ =/ 1Sl/ 上/ 的/ 不同/ 执行/ 位置/ L/ 对/ Xj/ 的/ 取值/ 信息/ 进行/ 计算/ ,/ 最后/ 得到/ 控制流/ RSk/ 上/ 所有/ 可能/ 抛出/ 的/ 新/ 异常/ 集合/ ESk/ =/ ∑/ n/ 录/ 的/ 异常/ ∪/ sum/ (/ ESi/ )/ 标记/ 抛出/ 运行/ 时/ 异常/ 的/ 节点/ Ner/ ,/ 应用/ 类型/ Tj/ 添加/ 相应/ 异常/ 处理/ 边/ Ere/ ,/ 最后/ 将/ 其/ 扩展/ 为/ RSi/ +/ 1/ ,/ sum/ (/ ESi/ )/ 为/ ESi/ 中/ 异常/ 向量/ 的/ 数量/ ./ 通过/ 对/ 异常/ 生成/ 规则/ G/ 和/ 控制流/ 转换规则/ T/ 的/ 反复/ 迭代/ ,/ 可以/ 实现/ 异常/ 控制流/ 集/ RS/ 的/ 生成/ ./ 迭代/ 方程/ 表示/ 如下/ ,/ 假设/ RS0/ 已知/ ,/ 迭代/ 过程/ 从/ t/ =/ 1/ 开始/ ,/ 直到/ ESt/ =/ / 结束/ ./ RSt/ =/ RS0/ ,/ t/ =/ 0/ 烅/ 烄/ 烆/ ESt/ =/ ∪/ / N/ ∈/ RS0/ 烄/ 烅/ {/ (/ EMij/ )/ n/ ×/ m/ ×/ A/ |/ RSt/ }/ -/ ∑/ t/ -/ 1/ 烆/ 基于/ 以上/ 描述/ ,/ 异常/ 控制流/ 序列/ 与/ 传统/ 异常/ 控制流/ 间/ 的/ 区别/ 如下/ :/ (/ 1/ )/ 传统/ 异常/ 控制流/ 节点/ 中/ 与/ 异常/ 相关/ 的/ 节点/ 只有/ 抛出/ 显式/ 异常/ 和/ 隐式/ 异常/ 的/ 节点/ ,/ 而/ 运行/ 时/ 异常/ 控制流/ 中/ 除了/ 这些/ 节点/ 外/ ,/ 还/ 包括/ 抛出/ 运行/ 时/ 异常/ 的/ Ner/ 和/ Nef/ 节点/ 以及/ 处理/ 运行/ 时/ 异常/ 的/ 边/ Ere/ ;/ (/ 2/ )/ 在/ 传统/ 异常/ 控制流/ RS0/ 上/ 进行/ 静态/ 测试/ 时/ ,/ 只能/ 报告/ 当前/ 发现/ 的/ 运行/ 时/ 异常/ 信息/ E0/ 以及/ 与此相关/ 的/ 非/ 异常/ 问题/ ;/ 而/ 应用/ 异常/ 控制流/ 序列/ 的/ 方法/ ,/ 从/ 传统/ 异常/ 控制流/ RS0/ 开始/ ,/ 通过/ 迭代/ 方程/ 将/ 其/ 扩展/ 为/ {/ RS0/ ,/ RS1/ ,/ …/ ,/ RSn/ }/ ,/ 这样/ 可/ 发现/ 更/ 多/ 的/ 运行/ 时/ 异常/ {/ ES1/ ,/ …/ ,/ ESn/ }/ 以及/ 其它/ 非/ 异常/ 问题/ ./ 5/ 异常/ 控制流/ 序列/ 生成/ 算法/ 5.1/ 算法/ 描述/ 下面/ 以/ 前面/ 介绍/ 的/ 迭代/ 方程/ 为/ 基础/ ,/ 给出/ 异常/ 控制流/ 序列/ 的/ 生成/ 算法/ ./ 算法/ 的/ 输入/ 为/ 方法/ F/ 对应/ 的/ 不/ 包含/ 节点/ Ner/ 和/ Nef/ 的/ 传统/ 异常/ 控制流/ RS0/ 、/ 异/ Page6/ 常/ 模式/ 状态机/ 实例/ 矩阵/ (/ EMij/ )/ n/ ×/ m/ 以及/ 用于/ 计算/ 相关/ 内容/ 取值/ 信息/ 的/ 方法/ [/ 6/ -/ 7/ ]/ ,/ 输出/ 为/ 异常/ 控制流/ 集/ RS/ 和/ 对应/ 的/ 异常/ 向量/ 集/ ES/ ./ 1/ ./ begin2/ ./ I/ =/ 0/ ;/ ES/ [/ I/ ]/ =/ / ;/ 3/ ./ RS/ [/ I/ ]/ =/ CFG/ (/ F/ )/ ;/ 4/ ./ foreachNinRS/ [/ I/ ]/ do5/ ./ ifF/ ∈/ NthenES/ [/ I/ ]/ =/ ES/ [/ I/ ]/ ∪/ F/ ;/ 6/ ./ endfor7/ ./ foreachEMi/ (/ Xj/ )/ in/ (/ EMij/ )/ n/ ×/ mdo8/ ./ ES/ [/ I/ ]/ =/ ES/ [/ I/ ]/ +/ {/ EMi/ (/ Xj/ )/ A/ (/ Xj/ )/ |/ RS/ [/ I/ ]/ }/ ;/ 9/ ./ endfor10/ ./ whileES/ [/ I/ ]/ ≠/ / do11/ ./ ES/ [/ I/ +/ 1/ ]/ =/ / 12/ ./ foreach/ 犜/ 犘/ inES/ [/ I/ ]/ do13/ ./ RS/ [/ I/ +/ 1/ ]/ =/ RS/ [/ I/ ]/ +/ 犜/ 犘/ ;/ 14/ ./ endfor15/ ./ foreachEMi/ (/ Xj/ )/ in/ (/ EMij/ )/ n/ ×/ mdo16/ ./ ES/ [/ I/ +/ 1/ ]/ =/ ES/ [/ I/ +/ 1/ ]/ +/ 17/ ./ endfor18/ ./ I/ ++/ ;/ 19/ ./ endwhile20/ ./ foreachEreinRS/ [/ I/ ]/ ./ Nexcp/ _/ exitdo21/ ./ add/ (/ F/ ,/ Ere/ )/ ;/ 22/ ./ endfor23/ ./ end/ 第/ 4/ ~/ 6/ 行/ 首先/ 统计/ F/ 中/ 所有/ 被/ 调用/ 方法/ F/ 的/ 异常/ 向量/ 犉/ ,/ 并/ 将/ 其/ 累加/ 到/ ES/ [/ 0/ ]/ 中/ ;/ 7/ ~/ 9/ 行/ 遍历/ 方法/ F/ 的/ 状态机/ 实例/ 矩阵/ (/ EMij/ )/ n/ ×/ m/ ,/ 应用/ 方法/ A/ 在/ 控制流/ RS/ [/ 0/ ]/ 上/ 检测/ 异常/ 向量/ ,/ 也/ 将/ 结果/ 累/ 加入/ 到/ ES/ [/ 0/ ]/ 中/ ;/ 若/ 经过/ 前面/ 的/ 处理/ 后/ ES/ [/ 0/ ]/ 不为/ 空/ ,/ 则/ 从/ 第/ 10/ 行/ 开始/ 应用/ 迭代/ 方程/ 求解/ RS/ [/ I/ +/ 1/ ]/ ,/ 指导/ ES/ [/ I/ +/ 1/ ]/ =/ / 终止/ ./ 第/ 10/ ~/ 19/ 行/ 为主/ 迭代/ 过程/ ,/ 直到/ 在/ 当前/ 控制流/ 上/ 没有/ 新/ 的/ 异常/ 向量/ 产生/ 才/ 终止/ 循环/ ./ 其中/ 第/ 12/ ~/ 14/ 行/ 首先/ 计算/ ES/ [/ I/ ]/ 中/ 的/ 异常/ 向量/ 犜/ 犘/ 对/ RS/ [/ I/ ]/ 的/ 变更/ ,/ 即/ 应用/ 位置/ P/ 在/ RS/ [/ I/ ]/ 中/ 标记/ 异常/ 抛出/ 节点/ Ner/ 或/ Nef/ ,/ 应用/ 异常/ 类型/ T/ 在/ RS/ [/ I/ ]/ 中/ 加入/ 异常/ 处理/ 边/ Ere/ ,/ 由此/ 得到/ RS/ [/ I/ +/ 1/ ]/ ;/ 接下来/ 的/ 15/ ~/ 17/ 行/ 再次/ 遍历/ (/ EMij/ )/ n/ ×/ m/ ,/ 在/ RS/ [/ I/ +/ 1/ ]/ 上/ 应用/ 算法/ A/ 对/ 所有/ 状态机/ 实例/ 进行/ 状态/ 转换/ ,/ 以/ 发现/ 新/ 的/ 异常/ 向量/ 犜/ 犘/ ,/ 并/ 加入/ 到/ ES/ [/ I/ +/ 1/ ]/ 之中/ ./ 通过/ 10/ ~/ 19/ 行/ 的/ while/ 循环/ ,/ 可以/ 逐步/ 迭代/ 出/ RS/ 中/ 的/ 所有/ 成员/ ,/ 直到/ 没有/ 最新/ 异常/ 出现/ ,/ 即/ ES/ [/ I/ ]/ =/ / ./ 最后/ ,/ 为了/ 得到/ 当前/ 方法/ F/ 所能/ 抛出/ 的/ 所有/ 异常/ 向量/ ,/ 第/ 20/ ~/ 22/ 行将/ 当前/ 控制流/ 中/ 所有/ 连接/ 到/ 异常/ 退出/ 节点/ Nexcp/ _/ exit/ 的/ 边/ 加入/ 到/ 其/ 对应/ 的/ 异常/ 向量/ 犉/ 中/ ./ 以上/ 算法/ 循环/ 条件/ 是/ 以/ 控制流/ 的/ 扩展/ 为/ 基础/ 的/ ,/ 对/ 它/ 的/ 有限性/ 证明/ 如下/ :/ (/ 1/ )/ 假设/ 方法/ F/ 中有/ m/ 条/ 语句/ ,/ 则/ 最坏/ 情况/ 下/ 的/ 循环/ 次数/ 为/ m/ 次/ ,/ 因此/ 总/ 迭代/ 次数/ 是/ 有限/ 的/ ;/ (/ 2/ )/ 将/ RS/ 映射/ 成/ 函数/ RS/ =/ {/ y/ |/ y/ =/ f/ (/ x/ )/ }/ 后/ ,/ 对于/ f/ (/ x/ )/ 定义域/ x/ ∈/ [/ 0/ ,/ m/ ]/ 内/ 的/ 任意/ 两点/ x1/ 及/ x2/ ,/ 且/ x1/ 小于/ x2/ ,/ 则/ 恒有/ f/ (/ x1/ )/ / f/ (/ x2/ )/ ,/ 因此/ 函数/ f/ (/ x/ )/ 在/ 区间/ x/ ∈/ [/ 0/ ,/ m/ ]/ 上/ 是/ 单调/ 增加/ 的/ ./ 根据/ 上面/ (/ 1/ )/ 、/ (/ 2/ )/ 可/ 得/ ,/ 单调/ 有界/ 的/ 函数/ f/ (/ x/ )/ 必定/ 是/ 有/ 极限/ 的/ ,/ 因此/ 求解/ 异常/ 控制流/ 集/ RS/ 的/ 循环/ 次数/ 是/ 有限/ 的/ ./ 5.2/ 应用/ 举例/ 下面/ 以/ 代码/ 片段/ 中/ 方法/ f1/ 为例/ ,/ 对/ 以上/ 算法/ 在/ 软件/ 静态/ 测试/ 中/ 的/ 应用/ 步骤/ 进行/ 举例说明/ ./ 以/ 方法/ f1/ 作为/ 当前/ 分析/ 单元/ ,/ 其/ 输入/ 信息/ 包括/ f1/ 的/ 初始/ 控制流/ 图/ RS/ [/ 0/ ]/ ,/ 如图/ 3/ (/ a/ )/ 所示/ ./ 其中/ 每个/ 节点/ 上/ 的/ 序号/ 对应/ 源代码/ 的/ 行号/ ,/ 为了/ 避免/ 对/ 资源/ 泄漏/ 的/ 过/ 多/ 误报/ ,/ 控制流/ 中/ 屏蔽/ 了/ close/ 方法/ 的/ 检查/ 型/ 异常/ ./ 假设/ 对/ f1/ 检测/ 的/ 缺陷/ 模式/ 有/ 如下/ 两种/ :/ 空/ 指针/ 模式/ EMnpd/ 和/ 资源/ 泄漏/ 模式/ EMmlf/ ,/ 由于/ 资源/ 泄漏/ 不会/ 引起/ 运行/ 时/ 异常/ ,/ 因此/ 不/ 需要/ 为/ 其/ 创建/ 异常/ 向量/ ./ 首先/ 为/ f1/ 创建/ 的/ 状态机/ 实例/ 分别/ 为/ EMnpd/ (/ p/ )/ 、/ EMnpd/ (/ q/ )/ 、/ EMnpd/ (/ r/ )/ 、/ EMmlf/ (/ q/ )/ 、/ EMmlf/ (/ r/ )/ ,/ 限于/ 篇幅/ ,/ 状态机/ 实例/ 的/ 创建/ 方法/ 不/ 在/ 本文/ 讨论/ ./ 这些/ 实例/ 共同/ 构成/ f1/ 的/ 状态机/ 实例/ 矩阵/ (/ EMij/ )/ 2/ ×/ 3/ =/ EMnpd/ (/ p/ )/ EMnpd/ (/ q/ )/ EMnpd/ (/ r/ )/ EMmlf/ (/ p/ )/ EMmlf/ (/ q/ )/ EMmlf/ (/ r/ 中/ 与/ 资源/ 泄漏/ 模式/ 无关/ ,/ 故/ EMmlf/ (/ p/ )/ =/ / ,/ r/ 与/ 空指/ 异常/ 无关/ ,/ 故/ EMnpd/ (/ r/ )/ =/ / ./ 对/ 控制流/ RS/ [/ 0/ ]/ 和/ ES/ [/ 0/ ]/ 进行/ 初始化/ 操作/ 后/ ,/ 得到/ 初始/ 控制流/ RS/ [/ 0/ ]/ 为/ 方法/ f1/ 的/ 基本/ 控制流/ (/ 图/ 3/ (/ a/ )/ )/ 以及/ 初始/ 异常/ 向量/ 集合/ ES/ [/ 0/ ]/ =/ / ./ 除/ 库函数/ 外/ ,/ f1/ 没有/ 调用/ 其它/ 子函数/ ,/ 算法/ 4/ ~/ 6/ 行/ 执行/ 完成/ 后/ ,/ 当前/ 异常/ 向量/ 集/ ES/ [/ 0/ ]/ =/ / ./ 算法/ 7/ ~/ 9/ 行在/ 控制流/ RS/ [/ 0/ ]/ 上/ 执行/ (/ EMij/ )/ 2/ ×/ 3/ 中/ 的/ 非空/ 实例/ EMnpd/ (/ p/ )/ 、/ EMnpd/ (/ q/ )/ 、/ EMmlf/ (/ q/ )/ 、/ EMmlf/ (/ r/ )/ ,/ 在/ RS/ [/ 0/ ]/ 的/ 节点/ 7/ 上/ 得到/ EMnpd/ (/ p/ )/ :/ Nexception/ ,/ 将/ 异常/ 向量/ 犜/ npd/ 犘/ 7/ 加入/ 到/ 集合/ 中/ ,/ 得到/ ES/ [/ 0/ ]/ =/ {/ 犜/ npd/ 犘/ 7/ }/ ./ 算法/ 12/ ~/ 14/ 行/ 判断/ ES/ [/ 0/ ]/ 非空后/ ,/ 应用/ ES/ [/ 0/ ]/ 中/ 的/ 异常/ 向量/ 扩展/ RS/ [/ 0/ ]/ ,/ 首先/ 标记/ 节点/ 7/ 为/ 异常/ [/ Page7/ 抛出/ 节点/ ,/ 然后/ 在/ 节点/ 7/ 上/ 增加/ 一条/ 抛出/ 空/ 指针/ 异常/ 的/ 边/ ,/ 且/ 该/ 边/ 连接/ 到/ 异常/ 捕获/ 节点/ 9/ ./ 经此/ 操作/ 得到/ RS/ [/ 1/ ]/ ,/ 如图/ 3/ (/ b/ )/ 所示/ ./ 算法/ 15/ ~/ 17/ 行在/ 控制流/ RS/ [/ 1/ ]/ 上/ 执行/ (/ EMij/ )/ 2/ ×/ 3/ 中/ 的/ 非空/ 实例/ EMnpd/ (/ p/ )/ 、/ EMnpd/ (/ q/ )/ 、/ EMmlf/ (/ q/ )/ 、/ EMmlf/ (/ r/ )/ ,/ 在/ RS/ [/ 1/ ]/ 的/ 节点/ 10/ 上/ 得到/ 新/ 异常/ 状态/ EMnpd/ (/ q/ )/ :/ Nexception/ ,/ 将/ 新/ 异常/ 向量/ 犜/ npd/ 犘/ 10/ 加入/ 到/ 集合/ 中/ ,/ 得到/ ES/ [/ 1/ ]/ =/ {/ 犜/ npd/ 犘/ 10/ }/ ./ 算法/ 12/ ~/ 14/ 行/ 判断/ ES/ [/ 1/ ]/ 非空后/ ,/ 应用/ ES/ [/ 1/ ]/ 中/ 的/ 异常/ 向量/ 扩展/ RS/ [/ 1/ ]/ ,/ 首先/ 标记/ 节点/ 10/ 为/ 异常/ 抛出/ 节点/ ,/ 然后/ 在/ 节点/ 10/ 上/ 增加/ 一条/ 抛出/ 空/ 指针/ 异常/ 的/ 边/ ,/ 由于/ 该/ 异常/ 没有/ 被/ 捕获/ 而/ 连接/ 到/ 异常/ 退出/ 节点/ 12/ ./ 经此/ 操作/ 得到/ RS/ [/ 2/ ]/ ,/ 如图/ 3/ (/ c/ )/ 所示/ ./ 算法/ 15/ ~/ 17/ 行在/ 控制流/ RS/ [/ 2/ ]/ 上/ 执行/ (/ EMij/ )/ 2/ ×/ 3/ 中/ 的/ 非空/ 实例/ EMnpd/ (/ p/ )/ 、/ EMnpd/ (/ q/ )/ 、/ EMmlf/ (/ q/ )/ 、/ EMmlf/ (/ r/ )/ ,/ 在/ RS/ [/ 2/ ]/ 的/ 退出/ 节点/ 上/ 可/ 得到/ 新/ 异常/ 状态/ EMmlf/ (/ r/ )/ :/ Nexception/ ,/ 由于/ 资源/ 泄漏/ 模式/ 不会/ 抛出/ 运行/ 时/ 异常/ ,/ 因此/ 不/ 需要/ 为/ 其/ 创建/ 异常/ 向量/ ,/ 得到/ ES/ [/ 2/ ]/ =/ / 而/ 结束/ 循环/ ./ 在/ 算法/ 的/ 最后/ ,/ 当前/ 控制流/ 为/ RS/ [/ 2/ ]/ ,/ 连接/ 到/ 它/ 的/ 异常/ 退出/ 节点/ 的/ 边/ 有/ 两条/ :/ 从/ 节点/ 8/ 抛出/ 的/ 检查/ 型/ 异常/ 、/ 从/ 节点/ 10/ 抛出/ 的/ 运行/ 时/ 异常/ Enpd/ ,/ 因此/ 需要/ 将/ 这/ 两种/ 异常/ 加入/ 到/ 方法/ f1/ 对应/ 的/ 异常/ 向量/ 中/ ,/ 供/ 分析/ 其/ 调用者/ 时/ 使用/ ./ 6/ 实验/ 环境/ 及/ 结果/ 6.1/ 实验/ 环境/ 为了/ 对比/ 应用/ 异常/ 控制流/ 序列/ 前后/ 对/ 静态/ 测试/ 可以/ 决定/ 异常/ 模式/ 状态机/ 的/ 数量/ ./ 定/ 每种/ 异常/ 模式/ 状态机/ 需要/ 创建/ 实例/ 的/ 数量/ ./ 的/ 影响/ ,/ 实验/ 过程/ 在/ 北京邮电大学/ 自主/ 研发/ 的/ 软件缺陷/ 检测/ 系统/ DTS/ (/ DefectTestingSystem/ )/ ①/ 上/ 展开/ ,/ DTS/ 的/ 测试/ 架构/ 如图/ 4/ 所示/ ,/ 主要/ 包括/ 如下/ 内容/ :/ (/ 1/ )/ 配置文件/ 用于/ 确定/ 需要/ 检测/ 的/ 缺陷/ 类型/ ,/ (/ 2/ )/ 通过/ 分析/ Java/ 源文件/ 中/ 的/ 相关/ 对象/ ,/ 可确/ (/ 3/ )/ 抽象/ 语法/ 树以/ 源文件/ 为/ 基础/ 创建/ ,/ 它/ 是/ 对/ 程序/ 分析/ 的/ 基础/ ./ (/ 4/ )/ 控制流/ 图中/ 存放/ 每个/ 分析/ 单元/ 的/ 控制流/ 信息/ ,/ 它/ 是/ 缺陷/ 检测/ 的/ 基础/ ./ (/ 5/ )/ 符号表/ 中/ 存放/ 作用域/ 、/ 符号/ 声明/ 及/ 使用/ 、/ 表达式/ 类型/ 推导/ 等/ 信息/ ,/ 它/ 从/ 抽象/ 语法/ 树结构/ 中/ 获取/ ./ (/ 6/ )/ 函数/ 间/ 分析/ 过程/ 一方面/ 从/ 抽象/ 语法/ 树/ 和/ 符号表/ 中/ 收集/ 信息/ ,/ 通过/ 函数/ 间/ 的/ 调用/ 关系/ 确定/ 分析/ 次序/ ;/ 另一方面/ 对于/ 分析/ 完成/ 的/ 方法/ ,/ 保存/ 其/ 可/ 抛出/ 的/ 异常/ 信息/ ,/ 用于/ 其/ 调用者/ 的/ 分析/ 过程/ ./ (/ 7/ )/ 区间/ 运算/ 对/ 程序/ 中/ 相关/ 变量/ 的/ 取值/ 信息/ 进行/ 近似计算/ ,/ 它/ 依赖于/ 抽象/ 语法/ 树/ 、/ 控制流/ 图/ 和/ 符号表/ 等/ 数据结构/ ./ (/ 8/ )/ 当前/ 分析/ 单元/ 的/ 状态机/ 实例/ 创建/ 完成/ 后/ ,/ 需要/ 在/ 控制流/ 的/ 每个/ 节点/ 上/ 运行/ 该/ 实例/ 进行/ 状态/ 转换/ ./ 原/ DTS/ 测试/ 框架/ 在/ 获得/ 分析/ 单元/ 的/ 必要/ 信息/ 后/ ,/ 根据/ 既定/ 的/ 缺陷/ 模式/ 及/ 单元/ 内容/ 确定/ 需要/ 创建/ 的/ 状态机/ 实例/ 数量/ ,/ 然后/ 逐一/ 遍历/ 控制流/ 的/ 节点/ ,/ 在/ 每个/ 控制流/ 节点/ 上/ 应用/ 函数/ 间/ 分析/ 和/ 区间/ 运算/ 技术/ 计算/ 所有/ 状态机/ 实例/ 的/ 状态/ ,/ 当/ 遇到/ 缺陷/ 状态/ 时/ ,/ 报告/ 缺陷/ 并/ 退出/ 相关/ 状态机/ 实例/ ./ 应用/ 异常/ 控制流/ 序列/ 后/ ,/ 相当于/ 在/ DTS/ 的/ 控制流/ 遍历/ 过程/ 中/ 修改/ 如下/ 内容/ :/ 增加/ 对/ 方法/ 抛出/ 异常/ 的/ 处理/ ,/ 在/ 分析/ 前/ 扩展/ 初始/ 控制流/ ;/ 在/ 初始/ 控制流/ 上/ 检测/ 并/ 保存/ 运行/ 时/ 异常/ ,/ ①/ http/ :/ // // www/ ./ dtstesting/ ./ com/ // Page8/ 将/ 新/ 运行/ 时/ 异常/ 应用/ 于/ 对/ 初始/ 控制流/ 的/ 扩展/ ;/ 在/ 扩展/ 后/ 的/ 初始/ 控制流/ 上/ 继续/ 进行/ 运行/ 时/ 异常/ 的/ 检测/ 及/ 控制流/ 扩展/ 的/ 工作/ ,/ 直到/ 没有/ 新/ 异常/ 出现/ 为止/ ./ 以上/ 过程/ 将/ 控制流/ 序列/ 的/ 生成/ 算法/ 集成/ 到/ DTS/ 的/ 测试/ 过程/ 中/ ,/ 将/ 在/ 初始/ 控制流/ 上/ 的/ 一次/ 遍历/ 过程/ 转变/ 为/ 在/ 控制流/ 序列/ 上/ 的/ 多次/ 遍历/ 过程/ ./ 6.2/ 实验/ 结果/ 实验/ 选取/ 9/ 个/ 开源/ Java/ 工程/ 作为/ 测试/ 对象/ ,/ 选取/ 空/ 指针/ 异常/ 模式/ (/ NPD/ )/ 及/ 资源/ 泄漏/ 模式/ (/ MLF/ )/ 作为/ 测试/ 目标/ ,/ 对比/ 应用/ 异常/ 控制流/ 序列/ 前后/ 的/ 过程/ 数据/ 及/ 结果/ 数据/ ./ 设定/ DTS/ (/ A/ )/ 不/ 应用/ 异常/ 控制流/ 序列/ ,/ DTS/ (/ B/ )/ 应用/ 该/ 方法/ ./ 对比/ 测试/ 结果/ 如表/ 1/ 所示/ ./ 状态机/ 类型/ 有/ NPD/ 表/ 1/ 对/ 9/ 个/ Java/ 开/ 源程序/ 的/ 测试/ 结果/ 对比/ 控制流/ 数量/ C/ (/ A/ )/ C/ (/ B/ )/ areca/ -/ 7.1/ ./ 1aTunes/ -/ 1.8/ ./ 230652603321012521393183200136/ // 23157/ // 42cobra/ -/ 0.98/ ./ 14496953728941240127132534835/ // 644/ // 14freecol/ -/ 0.7/ ./ 334311483875632304275411911358345/ // 53374/ // 71freemind/ -/ 0.8/ ./ 1509102112465718322077818911245/ // 18259/ // 27jstock/ -/ 1.0/ ./ 4megamek/ -/ 0.32/ ./ 2535177512168234719515156796032363/ // 25389/ // 47robocode/ -/ 1.623353408306814721645234267185/ // 33201/ // 48SweetHome3D/ -/ 1.815459943256410931182238255116/ // 10131/ // 25/ 时间/ 开销/ 的/ 增加/ 是/ 应用/ 控制流/ 序列/ 技术/ 的/ 一个/ 代价/ ,/ 其/ 另外/ 一个/ 代价/ 是/ 误报率/ 的/ 增加/ ./ 表中/ 的/ IP/ 表示/ 总/ 检测/ 记录/ 数/ ,/ FP/ 表示/ 经/ 人工/ 判断/ 后/ 的/ 误/ 报数/ ./ DTS/ (/ A/ )/ IP/ (/ A/ )/ )/ i/ // 9/ ×/ 100/ %/ =/ 14.14/ %/ ,/ 而/ 引入/ 控制流/ 序列/ 后/ ,/ DTS/ (/ B/ )/ IP/ (/ B/ )/ )/ i/ // 9/ ×/ 100/ %/ =/ 20.09/ %/ ,/ 较/ DTS/ (/ A/ )/ 增长/ 了/ 5.95/ %/ ./ 引入/ 误报/ 的/ 主要/ 原因/ 在于/ 若/ ES/ [/ I/ ]/ 中/ 出现/ 了/ 误报/ 的/ 异常/ ,/ 则/ 会/ 在/ RS/ [/ I/ +/ 1/ ]/ 中/ 引入/ 不可/ 达/ 路径/ ,/ 由此/ 可能/ 导致/ 一系列/ 的/ 误报/ 出现/ ./ 虽然/ 这种/ 方法/ 增加/ 了/ 时间/ 开销/ 及/ 误报率/ ,/ 但是/ 它/ 带来/ 的/ 效果/ 是/ 增加/ 了/ 缺陷/ 的/ 报告/ ,/ 将/ DTS/ (/ A/ )/ 报告/ 的/ 1470/ 个/ 缺陷/ 增长/ 为/ 1500/ 个/ ,/ (/ (/ D/ (/ B/ )/ i/ -/ D/ (/ A/ )/ i/ )/ // D/ (/ A/ )/ )/ i/ // 9/ ×/ 100/ %/ =/ ∑/ 9i/ =/ 12.18/ %/ ,/ 其中/ D/ (/ X/ )/ i/ =/ IP/ (/ X/ )/ i/ -/ FP/ (/ X/ )/ i/ ./ 经/ 人工/ 分析/ 后/ ,/ 由于/ 未/ 捕获/ 运行/ 时/ 异常/ ,/ 其中/ 有/ 8/ 个/ 缺陷/ 发生/ 后/ 程序/ 会/ 异常/ 终止/ ,/ 而/ 剩下/ 的/ 22/ 个/ 缺陷/ 发生/ 后/ 则/ 不/ 和/ MLF/ 两类/ ,/ 建立/ 状态机/ 实例/ 的/ 数量/ 共/ 48766/ 个/ ,/ 平均/ 需要/ 为/ 每个/ 工程/ 建立/ 5418/ 个/ 状态机/ 实例/ ./ DTS/ (/ A/ )/ 创建/ 的/ 基本/ 控制流/ 共/ 16809/ 个/ ,/ 而/ 应用/ 了/ 控制流/ 序列/ 后/ ,/ DTS/ (/ B/ )/ 中将/ 控制流/ 扩展/ 为/ 18631/ 个/ ,/ 总/ 增长率/ 为/ [/ C/ (/ B/ )/ -/ C/ (/ A/ )/ ]/ // C/ (/ A/ )/ ×/ 100/ %/ =/ 10.8/ %/ ,/ C/ (/ A/ )/ )/ i/ // 9/ ×/ 100/ %/ =/ 10.14/ %/ ./ 由此/ 带来/ 的/ 开销/ 是/ DTS/ (/ B/ )/ 的/ 总体/ 分析/ 时间/ 较/ DTS/ (/ A/ )/ 增长/ 了/ [/ T/ (/ B/ )/ -/ T/ (/ A/ )/ ]/ // T/ (/ A/ )/ ×/ 100/ %/ =/ 8.01/ %/ ,/ 平均/ 增长率/ 为/ (/ T/ (/ B/ )/ i/ -/ T/ (/ A/ )/ i/ )/ // T/ (/ A/ )/ )/ i/ // 9/ ×/ 100/ %/ =/ i/ =/ (/ 1/ ∑/ 99.24/ %/ ./ 会/ 出现/ 这种/ 情况/ ,/ 即/ 它们/ 可以/ 较/ 深地/ 隐藏/ 在/ 程序/ 的/ 执行/ 过程/ 中/ ./ 虽然/ 此类/ 缺陷/ 的/ 数量/ 不是/ 很大/ ,/ 但是/ 通过/ 与/ 其它/ 同类/ 测试工具/ 对比/ ,/ 新/ 发现/ 的/ 缺陷/ 在/ 其它/ 工具/ 的/ 报告/ 中是/ 未曾/ 出现/ 的/ ./ 这/ 也/ 是/ 这种/ 方法/ 的/ 价值/ 所在/ —/ —/ —/ 以/ 可/ 承受/ 的/ 代价/ 尽可能/ 多/ 的/ 发现/ 软件/ 中/ 存留/ 的/ 问题/ ,/ 这点/ 在/ 航空/ 、/ 航天/ 等/ 高/ 可信/ 领域/ 尤为重要/ ./ 7/ 相关/ 工作/ 比较/ 运行/ 时/ 异常/ 对/ 软件/ 静态/ 测试/ 提出/ 了/ 新/ 的/ 问题/ ,/ 本文/ 提出/ 的/ 应用/ 异常/ 控制流/ 序列/ 的/ 方法/ 结合/ 了/ 运行/ 时/ 异常/ 行为/ 与/ 控制流/ 扩展/ 间/ 的/ 迭代/ 关系/ ,/ 具有/ 如下/ 优点/ :/ (/ 1/ )/ 扩展/ 传统/ 异常/ 控制流/ ,/ 将/ 抛出/ 运行/ 时/ 异常/ 的/ 边/ 加入/ 其中/ ,/ 在/ 此基础/ 上/ 支持/ 对/ 新/ 异常/ 及/ 缺陷/ 的/ 检测/ ;/ (/ 2/ )/ 在/ 静态/ 测试/ 过程/ 中/ ,/ 通过/ 迭代/ 方程/ 将/ 在/ 初始/ 控制流/ 上/ 的/ 一次/ 遍历/ 过程/ 转变/ 为/ 在/ 控制流/ 序列/ 上/ 的/ 多次/ 遍历/ 过程/ ./ Page9/ 目前/ 有/ 许多/ 文献/ 都/ 涉及/ 了/ 异常/ 处理/ 机制/ 对/ 控制流/ 、/ 数据流/ 或/ 静态/ 测试/ 的/ 影响/ ,/ 有些/ 文章/ 也/ 包括/ 了/ 有关/ 运行/ 时/ 异常/ 的/ 内容/ ,/ 主要/ 有/ 如下/ 几种/ :/ Fu/ 等/ 人/ [/ 9/ ]/ 在/ 对/ 网络服务/ 应用/ 进行/ 健壮性/ 测试/ 时/ ,/ 综合/ 考虑/ 了/ Java/ 程序/ 中/ 的/ 显式/ 异常/ 及/ JDK/ 库所/ 抛出/ 的/ 隐式/ 检查/ 型/ 异常/ ;/ Mao/ 等/ 人/ [/ 10/ ]/ 在/ 研究/ 面向对象/ 程序/ 的/ 健壮性/ 和/ 可靠性/ 时/ ,/ 在/ C++/ 异常/ 处理/ 模型/ 的/ 基础/ 上/ ,/ 提出/ 了/ 一种/ 应用/ 静态/ 异常/ 分析方法/ 提高/ 程序/ 的/ 健壮性/ ./ 以上/ 研究/ 虽然/ 考虑/ 到/ 不同/ 语言/ 中/ 的/ 显式/ 异常/ 和/ 隐式/ 异常/ ,/ 但会/ 由于/ 缺少/ 对/ 运行/ 时/ 异常/ 分析/ 而/ 遗漏/ 某些/ 特殊/ 路径/ ,/ 从而/ 影响/ 程序/ 的/ 健壮性/ ./ Sinha/ [/ 11/ -/ 12/ ]/ 等/ 人/ 在/ 进行/ 程序/ 分析/ 的/ 过程/ 中/ ,/ 描述/ 了/ 异常/ 发生/ 及/ 传播/ 机制/ ,/ 从/ 过程/ 内/ 和/ 过程/ 间/ 两个/ 方面/ 介绍/ 了/ 异常/ 处理/ 对/ 控制流/ 的/ 影响/ ,/ 并/ 给出/ 异常/ 处理/ 机制/ 对/ 构建/ 测试/ 及/ 覆盖/ 技术/ 的/ 影响/ ,/ 但/ 在/ 他们/ 所/ 提出/ 的/ 异常/ 处理/ 结构/ 和/ 标准/ 中/ 仍然/ 缺少/ 与/ 运行/ 时/ 异常/ 相关/ 的/ 内容/ ,/ 因此/ 难免/ 影响/ 测试/ 覆盖/ 的/ 充分/ 度/ ./ 为了/ 能够/ 充分/ 有效/ 地/ 支持/ 程序/ 分析/ ,/ Choi/ 等/ 人/ [/ 13/ ]/ 提出/ 一种/ 控制流/ 表示/ 方法/ ,/ 叫做/ 要素/ 控制流/ 图/ FCFG/ 方法/ ./ 该/ 方法/ 将/ 程序/ 中/ 潜在/ 抛出/ 运行/ 时/ 异常/ 的/ 语句/ (/ PEI/ )/ 都/ 加入/ 到/ 控制流/ 中/ ./ 虽然/ FCFG/ 方法/ 可以/ 处理/ 运行/ 时/ 异常/ ,/ 但/ 由于/ 潜在/ 异常/ 抛/ 出点/ 都/ 是/ 预先确定/ 的/ ,/ 而/ 并非/ 通过/ 计算/ 求得/ ,/ 因此/ 采用/ 此/ 技术/ 的/ 静态/ 测试方法/ 必然/ 会/ 出现/ 较/ 高/ 的/ 误报率/ ./ Weimer/ 等/ 人/ [/ 14/ ]/ 提出/ 一种/ 数据流/ 分析方法/ 来/ 检测/ 由于/ 异常/ 处理不当/ 导致/ 的/ 资源/ 泄漏/ 问题/ ,/ 该/ 方法/ 包含/ 了/ 传统/ 显式/ 、/ 隐式/ 及/ 运行/ 时/ 异常/ 对/ 控制流/ 的/ 影响/ 以及/ 由此/ 导致/ 的/ 资源/ 泄漏/ 问题/ ./ 他们/ 的/ 方法/ 虽然/ 考虑/ 了/ 运行/ 时/ 异常/ ,/ 但/ 仅限于/ 过程/ 内/ 的/ 影响/ ,/ 未/ 涉及/ 运行/ 时/ 异常/ 在/ 过程/ 间/ 的/ 传播/ ,/ 且/ 仅限于/ 研究/ 运行/ 时/ 异常/ 的/ 直接/ 影响/ ,/ 其/ 影响/ 对/ 控制流/ 的/ 扩展/ 以及/ 在/ 扩展/ 后/ 的/ 控制流/ 上/ 是否/ 能/ 出现/ 新/ 的/ 异常/ 则/ 没有/ 研究/ ,/ 因此/ 采用/ 此/ 技术/ 的/ 静态/ 测试方法/ 可能/ 会/ 出现/ 一定/ 的/ 漏报/ 情况/ ./ Chatterjee/ 等/ 人/ [/ 15/ ]/ 为/ 面向对象/ 程序/ 提供/ 了/ 一个/ 异常/ 处理/ 的/ 模型/ ,/ 可以/ 确定/ 某个/ 运行/ 时/ 异常/ 在/ 过程/ 间/ 传播/ 后/ 可以/ 达到/ 什么/ 程序/ 位置/ ,/ 同时/ 开发/ 了/ 一个/ 静态/ 分析/ 工具/ Jex/ 处理/ 本地/ 异常/ 和/ 全局/ 异常/ ./ 他/ 的/ 方法/ 同样/ 也/ 由于/ 没有/ 考虑/ 运行/ 时/ 异常/ 与/ 控制流/ 扩展/ 之间/ 的/ 交替/ 影响/ 而/ 出现/ 漏报/ 情况/ ./ 8/ 结束语/ 本文/ 提出/ 一种/ 迭代/ 的/ 代码/ 缺陷/ 检测/ 方法/ ,/ 将/ 运行/ 时/ 异常/ 对/ 控制流/ 的/ 扩展/ 及/ 在/ 扩展/ 的/ 控制流/ 上/ 检测/ 新/ 运行/ 时/ 异常/ 这/ 两个/ 迭代/ 的/ 过程/ 相结合/ ,/ 用于/ 研究/ 运行/ 时/ 异常/ 对/ 软件/ 静态/ 测试/ 的/ 影响/ ./ 实验/ 结果表明/ ,/ 由于/ 控制流/ 的/ 扩展/ ,/ 会/ 导致/ 分析/ 时间/ 的/ 成倍增长/ ;/ 另外/ 在/ 生成/ 控制流/ 序列/ 的/ 过程/ 中/ 还/ 会/ 引入/ 部分/ 不可/ 达/ 路径/ ,/ 这/ 使得/ 误报率/ 也/ 有所/ 增长/ ./ 但/ 以上/ 代价/ 所/ 带来/ 的/ 效果/ 是/ 深入/ 地/ 检测/ 出/ 传统/ 方法/ 所/ 遗漏/ 的/ 缺陷/ ,/ 这些/ 遗漏/ 的/ 缺陷/ 在/ 航空/ 、/ 航天/ 、/ 电信/ 、/ 金融/ 等/ 高/ 可信/ 领域/ 具有/ 重要/ 的/ 价值/ ./ 因此/ ,/ 对于/ 如何/ 提高/ 分析/ 效率/ 以及/ 如何/ 降低/ 误报率/ 将/ 是/ 以下/ 一步/ 研究/ 的/ 主要/ 内容/ ./ 

