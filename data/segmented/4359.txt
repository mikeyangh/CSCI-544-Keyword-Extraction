Page1/ 面向/ 高性能/ 计算/ 的/ 众核/ 处理器/ 结构/ 级/ 高/ 能效/ 技术/ 郑方/ 1/ )/ 张昆/ 1/ )/ 邬贵明/ 1/ )/ 高/ 红光/ 1/ )/ 唐勇/ 1/ )/ 吕晖/ 1/ )/ 过锋/ 1/ )/ 李/ 宏亮/ 1/ )/ 谢向辉/ 1/ )/ 陈左宁/ 2/ )/ 1/ )/ (/ 数学/ 工程/ 与/ 先进/ 计算/ 国家/ 重点/ 实验室/ 江苏/ 无锡/ 214125/ )/ 2/ )/ (/ 国家/ 并行/ 计算机/ 工程技术/ 研究/ 中心/ 北京/ 100190/ )/ 摘要/ 随着/ 半导体技术/ 的/ 进步/ ,/ 众核/ 处理器/ 已经/ 广泛应用/ 于/ 高性能/ 计算/ 领域/ ./ 而要/ 构建/ 未来/ 高性能/ 计算/ 系统/ ,/ 处理器/ 必须/ 突破/ 严峻/ 的/ “/ 能耗/ 墙/ ”/ 挑战/ ./ 文中/ 以/ 一款/ 自主/ 众核/ 处理器/ DFMC/ 原型/ 为/ 基础/ ,/ 首先/ 对/ 其/ 在/ 典型/ 负载/ 下/ 的/ 能耗/ 分布/ 进行/ 了/ 分析/ ,/ 结合/ 该/ 处理器/ 的/ 具体/ 结构/ ,/ 提出/ 了/ 基于/ 指令/ 窗口/ 的/ 指令/ 缓冲/ 、/ 操作数/ 锁存/ 两种/ 结构/ 级/ 能效/ 优化/ 技术/ ,/ 探索/ 了/ 能效/ 优先/ 的/ 浮点/ 部件/ 设计/ 方法/ ./ 实验/ 表明/ ,/ 通过/ 上述/ 技术/ 可以/ 降低/ 处理器/ 取指/ 和/ 译码/ 能耗/ 约/ 50/ %/ 、/ 寄存器/ 文件/ 能耗/ 11.2/ %/ 和/ 浮点/ 部件/ 能耗/ 17.6/ %/ ,/ 最终/ 全/ 芯片/ 降低/ 能耗/ 约/ 14.7/ %/ ./ 在/ 该文/ 所述/ 实验/ 环境/ 下/ ,/ 作者/ 还/ 进行/ 了/ DFMC/ 原型/ 的/ 双/ 精度/ 矩阵/ 乘/ (/ DGEMM/ )/ 性能/ 功耗/ 比/ 测试/ ,/ 并/ 与/ NVIDIA/ 公司/ 的/ KeplerK20GPU/ 进行/ 了/ 对比/ ./ 关键词/ 众核/ 处理器/ ;/ 结构/ 优化/ ;/ 能效/ ;/ 高性能/ 计算/ 1/ 引言/ 高性能/ 计算机/ 是/ 21/ 世纪/ 科学研究/ 的/ 重要/ 支柱/ ,/ 技术水平/ 在/ 很大/ 程度/ 上/ 影响/ 甚至/ 决定/ 了/ 相关/ 科学技术/ 领域/ 的/ 创新能力/ ./ 目前/ 高性能/ 计算机/ 能力/ 处于/ 50P/ 量级/ (/ PetaScale/ ,/ 每秒/ 千万/ 亿次/ 运算/ )/ ,/ 美国/ 、/ 日本/ 等/ 先进/ 国家/ 的/ 后续/ 发展/ 计划/ 是/ 在/ 2020/ 年/ 左右/ 达到/ E/ 级/ (/ ExaScale/ ,/ 每秒/ 百亿/ 亿次/ 运算/ )/ 计算能力/ ./ 高性能/ 计算机/ 的/ 发展/ 面临/ 能耗/ 、/ 效率/ 、/ 可靠性/ 、/ 应用/ 适应性/ 等/ 诸多/ 挑战/ ,/ 其中/ 能耗/ 挑战/ 被/ 认为/ 是/ 制约/ 高性能/ 计算机/ 发展/ 的/ 最大/ 技术/ 障碍/ ./ 目前/ 国际/ 上/ 能效/ 比/ 最高/ 的/ 系统/ ,/ 即/ Green500/ 排名/ 第一/ 的/ 日本/ 研制/ 的/ TSUBAME/ -/ KFC/ ,/ 系统/ 能效/ 比/ 也/ 仅/ 达到/ 4.5/ GFlops/ // W/ (/ 每瓦/ 每秒/ 45/ 亿次/ 浮点/ 计算/ )/ ,/ 与/ 构建/ E/ 级计算机/ 需要/ 达到/ 的/ 30/ ~/ 50GFlops/ // W/ 的/ 能效/ 指标/ 还有/ 十倍/ 左右/ 的/ 差距/ ./ 处理器/ 是/ 高性能/ 计算机/ 的/ 核心/ 器件/ ,/ 其/ 主要参数/ 指标/ 对/ 整个/ 系统/ 的/ 结构/ 和/ 能力/ 起着/ 决定性/ 作用/ ,/ 同时/ 也/ 是/ 系统/ 能量/ 的/ 主要/ 消耗/ 者/ ./ 根据/ 对/ 集成电路/ 工艺/ 发展/ 路线/ 的/ 分析/ ,/ 尽管/ 晶体管/ 的/ 密度/ 仍然/ 会/ 随/ 工艺/ 进步/ 不断/ 提升/ ,/ 但是/ 每个/ 晶体管/ 的/ 能量/ 优化/ 的/ 速率/ 在/ 快速/ 降低/ [/ 1/ ]/ ,/ 除/ 依靠/ 工艺/ 进步/ 外/ ,/ 还/ 必须/ 对片/ 上/ 结构/ 进行/ 面向/ 能效/ 的/ 优化/ 和/ 针对性/ 设计/ [/ 2/ -/ 3/ ]/ ./ 面向/ 高性能/ 计算/ 的/ 处理器/ ,/ 需要/ 在/ 物理/ 可/ 实现/ 性/ 约束/ 下/ 对/ 芯片/ 的/ 性能/ 和/ 功耗/ 进行/ 平衡/ 优化/ ,/ 这/ 也/ 是/ 研发/ 自主/ 处理器/ 的/ 核心/ 目标/ 之一/ ./ 处理器/ 的/ 高/ 能效/ 技术/ 按照/ 作用/ 的/ 层次/ 可/ 分为/ 系统/ 级/ 、/ 结构/ 级/ 、/ 电路/ 级/ 和/ 工艺/ 级/ ./ 系统/ 级/ 主要/ 通过/ 软硬/ 协同/ 的/ 方式/ ,/ 根据/ 负载/ 情况/ 进行/ 能耗/ 管理/ ,/ 实现/ 运行/ 、/ 休眠/ 等/ 不同/ 运行/ 等级/ 状态/ 的/ 切换/ ;/ 结构/ 级/ 通过/ 选择/ 面向/ 能效/ 优化/ 的/ 算法/ 和/ 编码/ ,/ 在/ 保证/ 一定/ 性能/ 的/ 前提/ 下/ ,/ 控制/ 芯片/ 的/ 峰值/ 功耗/ 和/ 运行/ 功耗/ ;/ 电路/ 级/ 主要/ 是/ 针对/ 确定/ 功能/ 的/ 部件/ ,/ 选择/ 能效/ 最优/ 的/ 电路/ 实现/ ;/ 工艺/ 级/ 需要/ 密切/ 结合/ 工艺/ 情况/ ,/ 采用/ 合适/ 的/ 晶体管/ 和/ 逻辑/ 器件/ ,/ 优化/ 后/ 端/ 设计/ 流程/ ,/ 以/ 降低功耗/ [/ 4/ ]/ ./ 本文/ 的/ 研究/ 主要/ 集中/ 在/ 结构/ 级/ 高/ 能效/ 技术/ 上/ ./ 本文/ 以本/ 团队/ 设计/ 的/ 自主/ 众核/ 处理器/ 原型/ 为/ 基础/ ,/ 对/ 其/ 在/ 典型/ 负载/ 下/ 的/ 能耗/ 分布/ 进行/ 了/ 分析/ ,/ 针对/ 其/ 能耗/ 特征/ 结合/ 处理器/ 结构/ 提出/ 了/ 基于/ 指令/ 窗口/ 的/ 指令/ 缓冲/ 、/ 操作数/ 锁存/ 两种/ 结构/ 级/ 能效/ 优化/ 技术/ ,/ 探索/ 出/ 了/ 能效/ 优先/ 的/ 浮点/ 部件/ 设计/ 方法/ ./ 通过/ 实验/ ,/ 获得/ 相应/ 的/ 优化/ 数据/ ,/ 并/ 将/ 实验/ 数据/ 与/ 商用/ 高端/ GPU/ 进行/ 了/ 对比/ ./ 本文/ 给/ 面向/ 国产/ 高性能/ 计算/ 系统/ 的/ 处理器/ 设计/ 提供/ 了/ 积极/ 的/ 思路/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节对/ 自主/ 众核/ 处理器/ 原型/ 的/ 结构/ 和/ 能耗/ 控制/ 体系/ 进行/ 介绍/ ;/ 第/ 4/ 节对/ 自主/ 众核/ 处理器/ 的/ 能耗/ 分布/ 进行/ 分析/ ;/ 第/ 5/ 节/ 提出/ 针对/ 该/ 处理器/ 能效/ 优化/ 的/ 结构/ 级/ 技术/ 和/ 方法/ ;/ 第/ 6/ 节为/ 实验/ 结果/ 与/ 分析/ ;/ 第/ 7/ 节/ 总结/ 全文/ ,/ 并/ 对/ 未来/ 工作/ 进行/ 展望/ ./ 2/ 相关/ 工作/ (/ 1/ )/ 高/ 能效/ 处理器/ 结构/ 美国/ DARPA/ (/ DefenseAdvancedResearchProjectsAgency/ ,/ 国防部/ 先进/ 项目/ 研究局/ )/ 资助/ 的/ UHPC/ (/ UbiquitousHighPerformanceComputing/ ,/ 泛/ 在/ 高性能/ 计算/ )/ 计划/ ,/ 主要/ 目标/ 是/ 通过/ 软硬件/ 核心技术/ 突破/ 来/ 大幅/ 提升/ 系统/ 能效/ ./ 该/ 计划/ 中/ 进行/ 结构/ 研究/ 的/ 4/ 个/ 项目/ 中有/ 3/ 个/ 是/ 处理器/ 研究/ ./ 由/ Intel/ 公司/ 牵头/ 研究/ 的/ Runnemede/ 处理器/ ,/ 芯片/ 由/ 通用/ 控制/ 核心/ 和/ 能效/ 优化/ 的/ 执行/ 核心/ 组成/ ,/ 片上/ 支持/ 3/ 层/ 树形/ 网络/ 和/ 4/ 层/ 软件/ 管理/ 的/ 存储/ 层次/ [/ 5/ ]/ ;/ 由/ NVIDIA/ 公司/ 牵头/ 研究/ 的/ Echelon/ 处理器/ ,/ 片上/ 集成/ 了/ 少量/ 的/ 延迟/ 优化/ 核心/ 和/ 大量/ 的/ 吞吐/ 率/ 优化/ 核心/ ,/ 在/ 吞吐/ 率/ 优化/ 核心/ 中/ 采用/ 了/ 多种/ 能耗/ 优化/ 技术/ ,/ 它/ 是/ 由/ GPU/ 技术/ 演化/ 而来/ 的/ 技术/ 方案/ [/ 6/ ]/ ;/ Sandia/ 国家/ 实验室/ 牵头/ 的/ X/ -/ Caliber/ 处理器/ ,/ 核心思想/ 是/ 使用/ 3D/ 堆叠/ 技术/ 将/ 大量/ 精简/ 计算/ 核心/ 和/ 主存/ 进行/ 片上/ 集成/ ./ 上述/ 高/ 能效/ 处理器/ 的/ 结构/ 有/ 以下/ 共同/ 特点/ :/ 片上/ 集成/ 用于/ 管理/ 和/ 计算/ 的/ 异构/ 核心/ ,/ 集成/ 大量/ 充分/ 精简/ 的/ 计算/ 核心/ ,/ 提高/ 芯片/ 能效/ 和/ 集成度/ ;/ 通过/ 增强/ 片上/ 存储/ 层次/ 和/ 片/ 上/ 网络/ 设计/ 减少/ 数据/ 移动/ 带来/ 的/ 能耗/ ;/ 放弃/ 支持/ 一致性/ 的/ Cache/ 和/ 页/ 式/ TLB/ (/ TranslationLookasideBuffer/ ,/ 翻译/ 后备/ 缓冲/ )/ 结构/ ,/ 降低/ 数据/ 管/ Page3/ 理/ 带来/ 的/ 能耗/ ;/ 采用/ 软硬/ 协同/ 技术/ ,/ 降低/ 硬件/ 复杂性/ ./ (/ 2/ )/ 结构/ 级/ 高/ 能效/ 设计/ 技术/ 和/ 方法/ 处理器/ 结构/ 级/ 高/ 能效/ 设计/ 技术/ 和/ 方法/ 是/ 目前/ 的/ 研究/ 热点/ ,/ 主要/ 的/ 技术/ 途径/ 是/ 在/ 不/ 影响/ 性能/ 的/ 前提/ 下/ ,/ 通过/ 结构/ 优化/ 的/ 方法/ 降低/ 晶体管/ 的/ 翻转/ 率/ ./ 高性能/ 众核/ 处理器/ 主要/ 能量/ 的/ 消耗/ 在于/ 核心/ 流水线/ 中/ 的/ 指令系统/ 、/ 寄存器/ 文件/ 和/ 运算/ 部件/ (/ 尤其/ 是/ 浮点/ 部件/ )/ 等/ ./ 指令系统/ 的/ 高/ 能效/ 技术/ 的/ 主要/ 技术/ 路线/ 是/ 在/ 一级/ 指令/ Cache/ 和/ 流水线/ 之间/ 增加/ 一个/ 较/ 小/ 的/ 指令/ 缓冲/ ,/ 保存/ 并/ 向/ 流水线/ 提供/ 最/ 常/ 使用/ 的/ 指令/ ,/ 以/ 减少/ 对/ 一级/ 指令/ Cache/ 的/ 访问/ ./ 该/ 缓冲/ 也/ 可以/ 放置/ 在/ 译码/ 之后/ ,/ 以/ 进一步/ 降低/ 流水线/ 前端/ 的/ 功耗/ ./ 该/ 指令/ 缓冲/ 可以/ 组织/ 成/ Cache/ 、/ 存储器/ 或/ 队列/ 的/ 形式/ ,/ 也/ 可以/ 由/ 硬件/ 自动/ 管理/ 或/ 软硬/ 协同/ 管理/ ./ 学术界/ 和/ 业界/ 根据/ 具体/ 的/ 处理器/ 微结构/ 和/ 技术/ 目标/ ,/ 进行/ 了/ FilterCache/ 、/ LoopCache/ 、/ 微操作/ Cache/ 、/ 指令寄存器/ 文件/ 、/ 译码/ 缓冲/ 等/ 大量/ 技术/ 研究/ [/ 7/ -/ 14/ ]/ ./ 寄存器/ 文件/ 的/ 高/ 能效/ 技术/ 主要/ 是/ 减少/ 寄存器/ 文件/ 的/ 访问/ 次数/ 或/ 降低/ 单/ 次访问/ 的/ 功耗/ ./ 减少/ 寄存器/ 文件/ 访问/ 次数/ 的/ 技术/ 主要/ 是/ 利用/ 旁路/ 直接/ 获取数据/ ,/ 减少/ 不必要/ 的/ 寄存器/ 文件/ 读写/ [/ 15/ -/ 16/ ]/ ;/ 降低/ 单/ 次访问/ 功耗/ 主要/ 是/ 对/ 寄存器/ 文件/ 进行/ 分割/ ,/ 学术界/ 提出/ 了/ 分体/ 寄存器/ 文件/ 、/ 层次/ 式/ 寄存器/ 文件/ 、/ 分布/ 寄存器/ 文件/ 、/ 操作数/ 寄存器/ 文件/ 等/ 多种/ 优化/ 技术/ [/ 11/ ,/ 17/ -/ 20/ ]/ ./ 浮点/ 部件/ 的/ 算法/ 结构/ 很难/ 进行/ 大幅/ 调整/ ,/ 其/ 能耗/ 优化/ 的/ 主要/ 方法/ 是/ 采用/ 更/ 细粒度/ 的/ 门控/ 时钟/ 技术/ [/ 21/ ]/ 与/ 能效/ 优先/ 的/ 设计/ 空间/ 探索/ 方法/ [/ 22/ ]/ ./ 3/ 自主/ 众核/ 处理器/ 原型/ 3.1/ 自主/ 众核/ 处理器/ 原型/ 结构/ 在/ 高性能/ 计算/ 领域/ ,/ 大量/ 应用/ 对/ 芯片/ 计算能力/ 有/ 很/ 高/ 要求/ ,/ 同时/ 应用程序/ 的/ 核心/ 段/ 具有/ 良好/ 的/ 并行/ 可/ 分/ 特征/ ,/ 这/ 就/ 使/ 众核/ 处理器/ 具有/ 很/ 好/ 的/ 应用/ 前景/ ./ 同时/ ,/ 相比/ 多核/ 处理器/ ,/ 众核/ 处理器/ 能够/ 提供/ 更/ 高/ 的/ 计算/ 密度/ 和/ 性能/ 功耗/ 比/ ,/ 被/ 认为/ 是/ 构成/ 未来/ 高性能/ 计算/ 系统/ 的/ 核心/ 器件/ [/ 23/ ]/ ./ 面向/ 高性能/ 计算/ 的/ 众核/ 处理器/ 结构/ 是/ 国际/ 学术界/ 和/ 业界/ 的/ 研究/ 热点/ ,/ 还/ 存在/ 大量/ 的/ 结构/ 探索/ 空间/ ./ 本文/ 的/ 研究/ 基于/ 本/ 团队/ 提出/ 的/ 一种/ 自主/ 众核/ 处理器/ 结构/ DFMC/ (/ DeeplyFusedandheterogeneousMany/ -/ Core/ )/ ,/ 为/ 验证/ 设计/ 目标/ ,/ 并/ 考虑/ 到/ 知识产权/ 要求/ ,/ DFMC/ 采用/ 自主/ 设计/ ,/ 并/ 已/ 完成/ 了/ 原型/ 的/ RTL/ 实现/ ./ DFMC/ 原型/ 中/ 集成/ 了/ 两种/ 不同/ 类型/ 核心/ ,/ 分别/ 处理程序/ 中/ 不同/ 特征/ 的/ 代码段/ ,/ 不同/ 类型/ 的/ 核心/ 采用/ 兼容/ 的/ 指令/ 体系/ ;/ 异构/ 核心/ 间/ 实现/ 主存/ 共享/ ./ DFMC/ 原型/ 结构/ 如图/ 1/ 所示/ ./ 芯片/ 主要/ 由/ 管理/ 核心/ 、/ 运算/ 核心/ (/ ComputingProcessingElementsClusters/ ,/ CPE/ )/ 簇/ 、/ 存储/ 控制器/ 和/ 系统/ 接口/ 组成/ ,/ 这些/ 部件/ 通过/ 片上/ 网络/ 相连接/ ./ 其中/ ,/ 一个/ 运算/ 核心/ 簇/ 包括/ 多个/ 紧/ 耦合/ 的/ 运算/ 核心/ ,/ 高效/ 完成/ 协同/ 计算/ ./ 架构/ 中/ 各/ 主要/ 组成/ 部件/ 的/ 配比/ 、/ 运算/ 核心/ 簇/ 的/ 规模/ 等/ 可/ 根据/ 目标/ 灵活/ 调节/ ./ 管理/ 核心/ 是/ 全功能/ 的/ 通用/ 核心/ ,/ 支持/ 两级/ Cache/ 结构/ 和/ SIMD/ 向量指令/ 扩展/ ./ 管理/ 核心/ 为/ 超标/ 量/ RISC/ 结构/ ,/ 支持/ 乱序/ 发射/ 、/ 乱序执行/ 和/ 推测/ 执行/ ./ 运算/ 核心/ 私有/ 的/ 数据/ 存储/ ,/ 可以/ 配置/ 成由/ 软件/ 控制/ 的/ 局部/ 数据/ 存储/ ,/ 也/ 可以/ 配置/ 成/ Cache/ 的/ 方式/ ./ 配置/ 成/ Cache/ 方式/ 时/ ,/ 运算/ 核心/ 间/ 的/ 一致性/ 由/ 软件/ 保证/ ;/ 运算/ 核心/ 的/ 指令/ 存储系统/ 由/ 私有/ 的/ 一级/ 指令/ Cache/ 和/ 运算/ 核心/ 簇内/ 共享/ 的/ 二级/ 指令/ Cache/ 构成/ ./ 运算/ 核心/ 流水线/ 采用/ 双/ 发射/ 、/ 乱序执行/ 的/ 结构/ ,/ 支持/ SIMD/ 向量指令/ 扩展/ ,/ 支持/ 静态/ 转移预测/ ./ 运算/ 核心/ 簇/ 的/ 内部结构/ 如图/ 2/ 所示/ ./ 每个/ 运算/ Page4/ 核心/ 簇内/ 的/ 运算/ 核心/ 通过/ 高带宽/ 低/ 延迟/ 的/ 簇/ 通信/ 网络/ 交互/ ,/ 并/ 通过/ 簇/ 控制器/ 与/ 片/ 上/ 网络/ 相连接/ ./ 3.2/ 自主/ 众核/ 处理器/ 原型/ 中/ 的/ 能耗/ 控制/ 体系/ 高/ 能效/ 是/ 自主/ 众核/ 处理器/ 原型/ 设计/ 的/ 核心/ 目标/ 之一/ ,/ 需要/ 在/ 各层次/ 上/ 进行/ 体系化/ 控制/ ,/ 综合/ 达到/ 最优/ 效果/ ./ 这里/ 对/ 我们/ 在/ DFMC/ 中/ 采用/ 的/ 能耗/ 控制/ 体系/ 进行/ 简要/ 介绍/ ./ 其中/ ,/ 结构/ 级/ 是/ 本文/ 研究/ 的/ 重点/ ./ (/ 1/ )/ 系统/ 级/ 系统/ 级/ 高/ 能效/ 技术/ 主要/ 包括/ 从/ 部件/ 到/ 核心/ 再/ 到/ 片/ 上/ 系统/ 的/ 多级/ 低功耗/ 运行/ 模式/ ./ 各种/ 低功耗/ 运行/ 模式/ 可/ 由/ 硬件/ 自动控制/ 或/ 在/ 软件/ 管理/ 下/ 灵活/ 切换/ ./ 同时/ 还/ 支持/ 功耗/ 平缓/ 过渡/ ,/ 保证/ 运行/ 模式/ 切换/ 过程/ 中/ 功耗/ 负载/ 大幅/ 变化/ 不/ 影响/ 芯片/ 运行/ 稳定性/ ./ (/ 2/ )/ 结构/ 级片/ 上/ 异构/ 的/ 众核/ 结构/ ,/ 为/ 在/ 结构/ 级/ 进行/ 高/ 能效/ 设计/ 扩展/ 了/ 空间/ ./ 主要/ 的/ 技术/ 途径/ 是/ 根据/ 高性能/ 计算/ 领域/ 的/ 目标/ ,/ 在/ 保证/ 性能/ 的/ 基础/ 上/ 进行/ 信号/ 翻转/ 率控制/ 、/ 结构/ 精简/ 和/ 数据/ 局部性/ 开发/ ./ (/ 3/ )/ 电路/ 级/ 全面/ 采用/ 门控/ 时钟/ 和/ 操作数/ 隔离/ 技术/ ,/ 充分/ 降低/ 电路/ 翻转/ 率/ ./ (/ 4/ )/ 工艺/ 级/ 根据/ 性能/ 和/ 功耗/ 目标/ 的/ 综合/ 情况/ ,/ 混合/ 使用/ 多种不同/ 域值/ 电压/ 的/ 晶体管/ 单元/ 库/ 等/ 优化/ 技术/ ,/ 保证/ 频率/ 性能/ 的/ 同时/ 有效/ 控制/ 静态/ 功耗/ ./ 4/ 自主/ 众核/ 处理器/ 原型/ 能耗/ 分析/ 本/ 节/ 通过/ 定量分析/ DFMC/ 原型/ 的/ 能耗/ 分布/ 情况/ ,/ 进而/ 找到/ 需要/ 进一步/ 进行/ 结构/ 级/ 优化/ 的/ 主要/ 瓶颈/ 问题/ ./ 为/ 获取/ 在/ 更为/ 精确/ 接近/ 课题/ 情况/ 下/ 实际/ 芯片/ 上/ 运行/ 时/ 的/ 功耗/ 和/ 性能/ ,/ 本文/ 在/ DFMC/ 原型/ 的/ 全片/ RTL/ 和/ 门级/ 网表/ 的/ 基础/ 上/ 进行/ 测试/ ,/ 并/ 采用/ 主流/ 商用/ EDA/ 软件/ 进行/ 分析/ 实验/ ,/ 包括/ 综合/ 工具/ DesignCompiler/ 、/ 仿真/ 工具/ NCVerilog/ 等/ [/ 24/ ]/ ./ 由于/ 真实/ 应用/ 做/ 为/ 激励/ 直接/ 输入/ 网表/ 的/ 方式/ 运行/ 时间/ 过长/ ,/ 本文/ 的/ 能耗/ 计算/ 主要/ 使用/ 课题/ 运行/ 的/ 能耗/ 特征/ 和/ 轨迹/ 推算/ 的/ 方式/ ,/ 测试/ 的/ 方法/ 如下/ :/ 通过/ EDA/ 工具/ 获得/ 静态/ 功耗/ ;/ 通过/ 大量/ 针对/ 体系结构/ 设计/ 的/ 特征/ 激励/ 波形/ VCD/ 注入/ 网表/ ,/ 获得/ 设计/ 中/ 各/ 主要/ 部件/ 和/ 时钟/ 网络/ 在/ 各种/ 运行/ 情况/ 下/ 的/ 动态/ 功耗/ ;/ 在/ 仿真/ 环境中运行/ 实际/ 课题/ ,/ 统计/ 其/ 主要/ 能耗/ 特征/ 和/ 运行/ 性能/ ./ 汇总/ 上述/ 信息/ 后/ ,/ 折算/ 出/ 应用/ 课题/ 运行/ 的/ 能耗/ ./ 我们/ 对/ 该/ 方法/ 进行/ 过多道/ 课题/ 的/ 准确性/ 检验/ ,/ 结果/ 与/ 直接/ 波形/ 注入/ 的/ 方式/ 吻合/ ,/ 可信度/ 达到/ 90/ %/ 以上/ ./ 本/ 分析/ 对应/ 的/ 自主/ 处理器/ 原型/ 的/ RTL/ 配置/ 如表/ 1/ 所示/ ./ 后/ 文中/ 如/ 无/ 特别/ 说明/ ,/ 结构/ 分析/ 所用/ 的/ 配置/ 均/ 基于/ 该表/ ./ 控制/ 核心/ 运算/ 核心/ SIMD/ 宽度/ 管理/ 核心/ 存储体系/ 运算/ 核心/ 存储体系/ 簇/ 通信/ 网络拓扑/ 主存/ 系统/ 目标/ 工艺/ 自主/ 处理器/ 原型/ 在/ 不同/ 的/ 负载/ 下/ ,/ 体现/ 出/ 不同/ 的/ 能耗/ 特征/ ./ 为/ 获得/ 真实/ 应用/ 的/ 能耗/ 分布/ 情况/ ,/ 本文/ 在/ SPEC2006/ 中/ 选取/ 了/ 部分/ 代表性/ 课题/ 作为/ 测试/ 激励/ ./ 具体/ 包括/ CINT2006/ 中/ 的/ bzip2/ 、/ mcf/ 、/ gobmk/ 、/ hmmer/ 、/ libquantum/ 、/ h264ref/ 和/ omnetpp/ 七个/ 典型/ 课题/ 和/ CFP2006/ 中/ 的/ milc/ 、/ gromacs/ 、/ leslie3d/ 、/ namd/ 、/ soplex/ 和/ calculix/ 六个/ 典型/ 课题/ ./ 本文/ 将/ 自主/ 众核/ 处理器/ 原型/ 的/ 能耗/ 划分/ 为/ 运算/ 核心/ 动态/ 能耗/ 、/ 其他/ 部件/ 动态/ 能耗/ 和/ 漏电/ 能耗/ 三/ 大部分/ ./ 由于/ 运算/ 核心/ 数量/ 众多/ ,/ 是/ 芯片/ 能耗/ 的/ 主体/ ,/ 因此/ 将/ 运算/ 核心/ 进一步/ 细分/ 为/ ALU/ 部件/ 、/ 浮点/ 部件/ 、/ 寄存器/ 文件/ 、/ L1/ 指令/ Cache/ 、/ 译码/ 和/ L1/ 数据/ Cache/ 六/ 大部分/ ./ 其他/ 部件/ 中/ 能量消耗/ 最大/ 的/ 部分/ 是/ 运算/ 核心/ 之外/ 的/ 时钟/ 能耗/ ,/ 另外/ 还/ 包括/ 管理/ 核心/ 、/ 簇/ 控制器/ 、/ 存储/ 控制器/ 和/ 片/ 上/ 网络/ 等/ 部件/ 的/ 能耗/ ./ 测试/ 的/ 结果/ 如图/ 3/ 所示/ ./ 各种/ 课题/ 的/ 执行/ 特征/ 不同/ ,/ 能耗/ 分布/ 也/ 有/ 较大/ 差异/ ,/ 图/ 3/ 将/ 各个/ 课题/ 的/ 能耗/ 进行/ 了/ 归一化/ 处理/ ,/ 以便/ 于/ 比较/ 各个/ 课题/ 的/ 能耗/ 分布/ ./ 本文/ 对/ 选取/ 的/ 各/ 课题/ 运行/ 的/ 能耗/ 进行/ 了/ 平均/ ,/ 其/ 分布/ 如图/ 4/ 所示/ ./ 从/ 平均/ 分布/ 情况/ 来看/ ,/ 运算/ 核心/ 的/ 动态/ 能耗/ 仍/ 占据/ 了/ 芯片/ 能耗/ 主体/ ,/ 漏电/ 能耗/ 只/ 占/ 约/ 7/ %/ 的/ 比例/ ./ 虽然/ 随着/ 工艺/ 的/ 发展/ ,/ 漏电/ 功耗/ 比例/ 有/ 不断/ 增大/ 的/ 趋势/ ,/ 但是/ 众核/ 处理器/ 原型/ 芯片/ 设计/ 过程/ 中/ 采用/ 混合/ 阈值/ 晶体管/ 和/ 其他/ 控制/ 漏电/ 功耗/ 的/ 设计/ 方法/ [/ 25/ ]/ ,/ 可以/ 在/ 保证/ 其/ 性能/ 的/ 基础/ 上/ 有效/ 控制/ 漏电/ 功耗/ ./ 其他/ 部件/ 中/ 能量消耗/ 最大/ 的/ 部分/ 是/ 运算/ Page5/ 图/ 3/ 典型/ 课题/ 运行/ 的/ 能耗/ 分布/ 核心/ 之外/ 的/ 时钟/ 能耗/ ,/ 针对/ 该/ 部分/ 的/ 研究/ 主要/ 为/ 时钟/ 系统/ 的/ 电路/ 级/ 优化/ ,/ 不/ 在/ 本文/ 研究/ 范围/ 内/ ./ DFMC/ 原型/ 中/ ,/ 运算/ 核心/ 数量/ 众多/ ,/ 并/ 承担/ 了/ 主要/ 的/ 任务/ 负载/ ,/ 其/ 动态/ 能耗/ 占据/ 了/ 整个/ 芯片/ 能耗/ 的/ 59/ %/ ,/ 其中/ 取指/ 译码/ 部分/ 占/ 总/ 能耗/ 的/ 24/ %/ 、/ 寄存器/ 访问/ 部分/ 占/ 总/ 能耗/ 的/ 13/ %/ 、/ 一级/ 数据/ Cache/ 部分/ 占/ 总/ 能耗/ 的/ 12/ %/ 、/ 运算/ 部分/ 占/ 总/ 能耗/ 的/ 10/ %/ ,/ 因此/ 运算/ 核心/ 的/ 动态/ 能耗/ 是/ 本文/ 进一步/ 进行/ 结构/ 级/ 优化/ 的/ 主要/ 目标/ ./ 5/ 结构/ 级/ 高/ 能效/ 优化/ 本/ 节/ 针对/ DFMC/ 原型/ 的/ 运算/ 核心/ 动态/ 能耗/ 进行/ 优化/ ./ 选择/ 了/ 其中/ 的/ 3/ 个/ 部分/ :/ 取指/ 译码/ 、/ 寄存器/ 文件/ 和/ 浮点/ 部件/ ./ 面向/ 高性能/ 计算/ 的/ 众核/ 处理器/ 通过/ 集成/ 大量/ 核心/ 实现/ 单芯片/ 较/ 高/ 的/ 聚合/ 计算能力/ ,/ 有限/ 的/ 芯片/ 面积/ 也/ 是/ 结构设计/ 的/ 一个/ 关键/ 约束/ ./ 本文/ 在/ 优化/ 设计/ 过程/ 中/ 还/ 考虑/ 了/ 具体/ 技术/ 带来/ 的/ 芯片/ 面积/ 增加/ 的/ 影响/ ,/ 结构/ 级/ 高/ 能效/ 技术/ 的/ 一个/ 基本/ 条件/ 是/ ,/ 该/ 技术/ 带来/ 的/ 能耗/ 降低/ 的/ 比例/ ,/ 必须/ 远大于/ 面积/ 增加/ 的/ 比例/ ./ 5.1/ 基于/ 指令/ 窗口/ 的/ 指令/ 缓冲/ 为/ 减少/ 运算/ 核心/ 一级/ 指令/ Cache/ 的/ 访问/ ,/ 本文/ 在/ 一级/ 指令/ Cache/ 和/ 流水线/ 之间/ 增加/ 了/ 容量/ 小/ 、/ 访问/ 能耗/ 低/ 的/ 指令/ 缓冲/ ,/ 同时/ 为/ 节省/ 译码/ 能耗/ ,/ 该/ 缓冲/ 的/ 位置/ 设置/ 在/ 译码/ 站台/ 之后/ ,/ 保存/ 了/ 译码/ 后/ 的/ 指令/ ,/ 命中/ 后/ 不/ 需要/ 重新/ 译码/ ./ 该/ 指令/ 缓冲/ 在/ 流水线/ 中/ 的/ 位置/ 如图/ 5/ 所示/ ./ 与/ 已有/ 工作/ 中/ 使用/ Cache/ 或/ 基本块/ 组织/ 指令/ 缓冲/ 的/ 方式/ 不同/ ,/ DFMC/ 原型/ 的/ 运算/ 核心/ 采用/ 了/ 基于/ 指令/ 窗口/ 的/ 管理/ 算法/ ./ 采用/ Cache/ 管理机制/ 的/ 主要/ 问题/ 在于/ ,/ DFMC/ 的/ 运算/ 核心/ 为/ 双/ 发射/ 结构/ ,/ 译码/ 宽度/ 为/ 2/ 条/ 指令/ ,/ 如果/ 指令/ 缓冲/ 以/ 2/ 条/ 指令/ 为/ 单位/ 进行/ 管理/ ,/ 将/ 带来/ 很大/ 的/ Tag/ 开销/ ,/ 对/ 时序/ 和/ 能耗/ 都/ 存在/ 一定/ 的/ 不利/ 影响/ ./ 而/ 采用/ 基本块/ 的/ 管理/ 方式/ 时/ ,/ 由于/ 基本块/ 大小/ 是/ 动态/ 的/ ,/ 需要/ 支持/ 较/ 多/ 的/ 基本块/ 数量/ 才能/ 保证/ 缓冲/ 的/ 有效/ 填充/ 率/ (/ 缓冲/ 内/ 有效/ 指令/ // 缓冲容量/ )/ ,/ 例如/ 在/ 缓冲容量/ 为/ 保存/ 256/ 条/ 指令/ 时/ ,/ 至少/ 需要/ 支持/ 16/ 个/ 基本块/ 才能/ 达到/ 较/ 好/ 的/ 命中率/ ,/ 同时/ 支持/ 多个/ 基本块/ 的/ 全/ 相连/ 比较/ 会/ 抵消/ 指令/ 缓冲/ 的/ 功耗/ 收益/ ,/ 在/ 缓冲/ 命中率/ 较/ 低时/ 甚至/ 带来/ 负作用/ ./ 本文/ 采用/ 基于/ 指令/ 窗口/ 的/ 管理/ 算法/ ,/ 使用/ 循环/ 队列/ 的/ 方式/ 将/ 程序/ 中/ 一块/ 连续/ 的/ 指令/ 序列/ 整个/ 映射/ 到/ 指令/ 缓冲/ 中/ ./ 指令/ 缓冲/ 的/ 大小/ 与/ 对应/ 的/ 指令/ 窗口/ 相等/ ,/ 并/ 完全/ 对应/ ,/ 该/ 窗口/ 随着/ 代码执行/ 而/ 移动/ ./ 指令/ 缓冲/ 用/ 一个头/ 指针/ 指示/ 指令/ 窗口/ 起始/ 位置/ 在/ 缓冲/ 内/ 的/ 地址/ ,/ 并用/ 有效/ 位/ 的/ 方式/ 指示/ 指令/ 窗口/ 中/ 的/ 指令/ 在/ 指令/ 缓冲/ 中/ 的/ 保存/ 状态/ ./ 指令/ 缓冲/ 和/ 指令/ 窗口/ 的/ 对应/ 关系/ 如图/ 6/ 所示/ ./ 该/ 管理/ 方式/ 可以/ 使/ 缓冲/ 因为/ 管理/ 和/ 比/ 对/ 增加/ 的/ 复杂度/ 最小化/ ,/ 同时/ 也/ 可/ 保证/ 有限/ 的/ Page6/ 缓冲容量/ 被/ 充分利用/ ./ 另外/ ,/ 本文/ 的/ 指令/ 缓冲/ 是/ 通过/ 对/ DFMC/ 运算/ 核心/ 流水线/ 中/ “/ 指令预取/ 队列/ ”/ 扩展/ 而来/ 的/ ,/ “/ 指令预取/ 队列/ ”/ 是/ 处理器/ 中为/ 保证/ 转移预测/ 时/ 指令流/ 不/ 出现/ 空槽/ 的/ 必要/ 设计/ ,/ 一个/ 缓冲/ 两种/ 用途/ 使得/ 即使/ 在/ 缓冲/ 命中率/ 较/ 低时/ ,/ 也/ 不会/ 因为/ 对/ 该/ 缓冲/ 的/ 填充/ 带来/ 额外/ 的/ 功耗/ 浪费/ ./ 指令/ 缓冲/ 的/ 管理/ 算法/ 如图/ 7/ 所示/ ,/ 图中/ W/ 表示/ 指令/ 窗口/ 的/ 大小/ ./ 当前/ PC/ 位于/ 指令/ 窗口/ 内时/ ,/ 硬件/ 将/ 查询/ 指令/ 缓冲/ 内/ 对应/ 的/ 有效/ 位/ ,/ 如果/ 有效/ 位/ 有效/ ,/ 表示/ 命中/ 指令/ 缓冲/ ,/ 即/ 从/ 缓冲/ 中/ 取出/ 译码/ 后/ 的/ 指令/ ;/ 如果/ 有效/ 位/ 无效/ ,/ 则/ 按/ 正常/ 流程/ 取指/ ,/ 同时/ 用/ 译码/ 后/ 的/ 指令/ 对/ 指令/ 缓冲/ 进行/ 装填/ ./ 当前/ PC/ 不/ 命中/ 指令/ 窗口/ 时/ ,/ 则/ 按/ 正常/ 流程/ 取指/ ,/ 同时/ 用/ 译码/ 后/ 的/ 指令/ 对/ 指令/ 缓冲/ 进行/ 装填/ ,/ 这种/ 情况/ 下/ 指令/ 窗口/ 需要/ 挪动/ ,/ 挪动/ 的/ 方式/ 需要/ 再/ 分/ 两种/ 情况/ :/ 如果/ 当前/ PC/ 到/ PC/ +/ W/ 或/ PC/ -/ W/ 到/ PC/ 两段/ 区间/ 中/ 的/ 一个/ 与/ 指令/ 窗口/ 有/ 重叠/ ,/ 则/ 将/ 指令/ 缓冲/ 头/ 指针/ 挪动/ 到/ PC/ 或/ PC/ -/ W/ ,/ 同时/ 移动/ 指令/ 窗口/ ,/ 作废/ 缓冲/ 中/ 超出/ 新/ 指令/ 窗口/ 的/ 部分/ ,/ 但/ 仍/ 保持/ 重叠/ 部分/ 指令/ 有效/ 状态/ ;/ 如果/ PC/ -/ W/ 到/ PC/ +/ W/ 的/ 区间/ 均/ 与/ 指令/ 窗口/ 无/ 重叠/ ,/ 则/ 作废/ 整个/ 指令/ 缓冲/ ,/ 并/ 将/ 缓冲/ 头/ 指针/ 设置/ 为/ PC/ ,/ 同时/ 挪动/ 指令/ 窗口/ ./ 判断/ PC/ -/ W/ 到/ PC/ +/ W/ 与/ 当前/ 指令/ 窗口/ 的/ 重叠/ ,/ 目的/ 是/ 尽量/ 多地/ 利用/ 指令/ 缓冲/ 中/ 已有/ 指令/ ,/ 减少/ 作废/ 指令/ 缓冲/ 带来/ 的/ 浪费/ ./ 5.2/ 操作数/ 锁存/ 面向/ 寄存器/ 文件/ 的/ 结构/ 级/ 高/ 能效/ 技术/ 有/ 两种/ 技术/ 途径/ :/ 一种/ 是/ 对/ 寄存器/ 文件/ 进行/ 分割/ 或/ 分层/ ,/ 将/ 常用/ 数据/ 保存/ 在/ 访问/ 能耗/ 较少/ 的/ 部分/ 中/ ,/ 使得/ 访问/ 寄存器/ 文件/ 的/ 平均/ 能耗/ 降低/ ;/ 另/ 一种/ 是/ 通过/ 流水线结构/ 优化/ ,/ 减少/ 寄存器/ 文件/ 的/ 读写/ 次数/ ./ 在/ DFMC/ 原型/ 中/ ,/ 寄存器/ 文件/ 占用/ 的/ 面积/ 较大/ 、/ 时序/ 紧张/ ,/ 如果/ 在/ 结构/ 级/ 采用/ 分割/ 或/ 分层/ 的/ 方式/ ,/ 将/ 增大/ 寄存器/ 文件/ 面积/ 、/ 影响/ 关键/ 路径/ 的/ 延迟/ ,/ 未来/ 该/ 能效/ 优化/ 思想/ 可/ 在/ 工艺/ 级/ 定制/ 设计/ 流程/ 中/ 考虑/ ./ 在/ 结构/ 级/ ,/ 主要/ 采用/ 操作数/ 锁存/ 技术/ ,/ 减少/ 寄存器/ 文件/ 访问/ ./ 操作数/ 锁存/ 包括/ 硬件/ 识别/ 的/ 源/ 操作数/ 锁存/ 和/ 软硬/ 协同/ 的/ 目标/ 操作数/ 锁存/ 技术/ ./ 该/ 技术/ 主要/ 由/ 一个/ 控制器/ 实现/ 对/ 多个/ 站台/ 的/ 管理/ ,/ 其/ 作用/ 在/ 流水线/ 中/ 的/ 位置/ 如图/ 8/ 所示/ ./ 已有/ 的/ 通过/ 旁路/ 技术/ 减少/ 寄存器/ 文件/ 的/ 访问/ 的/ 工作/ ,/ 都/ 是/ 将/ 旁路/ 信息/ 完全/ 交由/ 软件/ 管理/ ,/ 依靠/ 编译/ 技术/ 完成/ 对/ 旁路/ 信息/ 的/ 指示/ ,/ 这些/ 技术/ 只能/ 适用/ 于/ 顺序/ 单/ 发射/ 处理器/ ./ 在/ 乱序/ 多/ 发射/ 处理器/ 中/ ,/ 由于/ 指令/ 调度/ ,/ 流水线/ 的/ 工作/ 情况/ 可能/ 与/ 程序/ 序/ 不同/ ,/ 且/ 相邻/ 指令/ 可能/ 调度/ 到/ 不同/ 流水线/ 上/ 执行/ ,/ 软件/ 无法/ 完成/ 静态/ 的/ 预测/ ./ 与/ 已有/ 工作/ 不同/ ,/ 本文/ 设计/ 了/ “/ 操作数/ 锁存/ 控制器/ ”/ 检测/ 两条/ 流水线/ 多级/ 站台/ 的/ 当前/ 状态/ ,/ 对源/ 和/ 目标/ 操作数/ 的/ 行为/ 和/ 状态/ 进行/ 动态分析/ ,/ 设计/ 中/ 除了/ 是否/ 为/ “/ 临时/ 变量/ ”/ 的/ 标志/ 需要/ 软件/ 指示/ Page7/ 外/ ,/ 其他/ 均/ 由/ 硬件/ 完成/ 识别/ ,/ 能够/ 在/ DFMC/ 原型/ 的/ 运算/ 核心/ 的/ 乱序/ 双/ 发射/ 结构/ 下/ 完成/ 操作数/ 锁存/ ,/ 并/ 降低/ 寄存器/ 文件/ 访问/ 频度/ ./ 操作数/ 锁存/ 的/ 算法/ 描述/ 如图/ 9/ 所示/ ./ 其中/ 源/ 操作数/ 锁存/ 技术/ 可以/ 发现/ 连续/ 执行/ 指令/ 的/ 相同/ 操作数/ 对/ 同一/ 寄存器/ 文件/ 条/ 目的/ 读/ 操作/ ,/ 在/ 保证/ 前导/ 指令/ 没有/ 通过/ 旁路/ 写/ 回该/ 寄存器/ 文件/ 条/ 目的/ 情况/ 下/ ,/ 硬件/ 自动/ 作废/ 后继/ 指令/ 对/ 寄存器/ 文件/ 该条/ 目的/ 读/ 访问/ ,/ 直接/ 使用/ 锁/ 存在/ 站台/ 中/ 的/ 操作数/ ./ 目标/ 操作数/ 锁存/ 可以/ 从/ 两个/ 方面/ 节省/ 寄存器/ 文件/ 的/ 访问/ ,/ 如果/ 硬件/ 发现/ 某个/ 源/ 操作数/ 可以/ 从/ 旁路/ 网络/ 得到/ ,/ 则/ 直接/ 作废/ 该/ 操作数/ 对应/ 的/ 寄存器/ 文件/ 读/ 访问/ ,/ 数据/ 从锁存/ 站台/ 获取/ ;/ 如果/ 软件/ 指示/ 某个/ 目标/ 操作数/ 为/ “/ 临时/ 变量/ ”/ (/ 该/ 数据/ 若/ 可/ 通过/ 旁路/ 送给/ 后继/ 指令/ ,/ 则/ 不/ 需要/ 写回/ 寄存器/ 文件/ )/ ,/ 当/ 旁路/ 成功/ 后/ ,/ 该/ 目标/ 操作数/ 不写/ 回/ 寄存器/ 文件/ ./ // // RO/ (/ i/ ,/ j/ )/ 含义/ 为/ 流水线/ i/ 等待/ 访问/ 寄存器/ 文件/ 的/ 指令/ 的/ 源/ 操作数/ j/ // // SO/ (/ i/ ,/ j/ )/ 含义/ 为/ 流水线/ i/ 操作数/ 锁存/ 站台/ 保存/ 的/ 有效/ 的/ 源/ 操作数/ j/ // // BDO/ (/ x/ )/ 含义/ 为/ 流水线/ x/ 当前/ 送入/ 旁路/ 网络/ 的/ 指令/ 的/ 目标/ 操作数/ 源/ 操作数/ 锁存/ :/ 条件/ 1/ :/ RO/ (/ i/ ,/ j/ )/ 对应/ 的/ 寄存器/ 文件/ 条目/ 号/ =/ =/ SO/ (/ i/ ,/ j/ )/ 对应/ 的/ 寄存器/ 文件/ 条目/ 号/ ;/ 条件/ 2/ :/ 旁路/ 网络/ 本/ 拍/ 不/ 修改/ SO/ (/ i/ ,/ j/ )/ If/ (/ 条件/ 1/ 条件/ 2/ )/ {/ RO/ (/ i/ ,/ j/ )/ 使用/ SO/ (/ i/ ,/ j/ )/ 中锁存/ 的/ 数据/ ,/ 不/ 访问/ 寄存器/ 文件/ }/ 目标/ 操作数/ 锁存/ :/ If/ (/ RO/ (/ i/ ,/ j/ )/ 对应/ 的/ 寄存器/ 文件/ 条目/ =/ =/ BDO/ (/ 0/ )/ 对应/ 的/ 寄存器/ 文件/ 条目/ )/ {/ RO/ (/ i/ ,/ j/ )/ 使用/ BDO/ (/ 0/ )/ 中/ 提供/ 的/ 数据/ ,/ 不/ 访问/ 寄存器/ 文件/ }/ If/ (/ RO/ (/ i/ ,/ j/ )/ 对应/ 的/ 寄存器/ 文件/ 条目/ =/ =/ BDO/ (/ 1/ )/ 对应/ 的/ 寄存器/ 文件/ 条目/ )/ {/ RO/ (/ i/ ,/ j/ )/ 使用/ BDO/ (/ 1/ )/ 中/ 提供/ 的/ 数据/ ,/ 不/ 访问/ 寄存器/ 文件/ }/ If/ (/ 回写/ 站台/ i/ 对应/ 指令/ 携带/ 软件/ “/ 临时/ 变量/ ”/ 标志/ 旁路/ 成功/ )/ {/ 流水线/ i/ 写回/ 站台/ 的/ 目标/ 操作数/ 不写/ 回/ 寄存器/ 文件/ }/ 5.3/ 能效/ 优先/ 的/ 浮点/ 部件/ 设计/ 方法/ 面向/ 高/ 能效/ 目标/ 进行/ 运算/ 部件/ 的/ 算法/ 结构调整/ 非常/ 困难/ ./ 以/ 浮点/ 部件/ 为例/ ,/ 国际/ 上/ 主要/ 的/ 能效/ 优化/ 方法/ 是/ 更/ 细粒度/ 的/ 门控/ 时钟/ 技术/ 与/ 能效/ 优先/ 的/ 设计/ 空间/ 探索/ 方法/ ./ DFMC/ 原型/ 中/ 的/ 电路/ 级/ 优化/ 技术/ 采用/ 了/ 细粒度/ 门控/ 时钟/ 技术/ ,/ 本文/ 在/ 结构/ 级/ 的/ 优化/ 方向/ 主要/ 是/ 能效/ 优先/ 的/ 设计/ 方法/ ./ 能效/ 优先/ 的/ 设计/ 方法/ 主要/ 是/ 通过/ 调整/ 部件/ 内部/ 站台/ 的/ 精细/ 划分/ 和/ 频率/ 约束/ ,/ 寻找/ 功耗/ 、/ 性能/ 与/ 面积/ 的/ 最佳/ 平衡点/ ./ 本文/ 以/ 自主/ 开发/ 的/ 双/ 精度/ 浮点/ 乘加/ 部件/ 为例/ ,/ 进行/ 了/ 设计/ 探索/ ,/ 采用/ 的/ 主要/ 评价/ 指标/ 包括/ 性能/ 功耗/ 比/ 、/ 性能/ 面积/ 比/ 和/ 实现/ 单位/ 性能/ 情况/ 下/ 的/ 面积/ 与/ 功耗/ 的/ 乘积/ ./ 本文/ 使用/ 的/ 双/ 精度/ 浮点/ 乘加/ 部件/ 如图/ 10/ 所示/ ./ 6/ 实验/ 分析/ 本文/ 对/ 基于/ 指令/ 窗口/ 的/ 指令/ 缓冲/ 技术/ 、/ 操作数/ 锁存/ 技术/ 进行/ 了/ 代码/ 实现/ ,/ 对/ 能效/ 优先/ 的/ 浮点/ 部件/ 设计/ 空间/ 进行/ 了/ 探索/ ./ 采用/ 的/ 测试方法/ 和/ 环境/ 与/ 第/ 4/ 节中/ 使用/ 的/ 方法/ 相同/ ./ (/ 1/ )/ 基于/ 指令/ 窗口/ 的/ 指令/ 缓冲/ 本文/ 实现/ 的/ 基于/ 指令/ 窗口/ 的/ 指令/ 缓冲/ ,/ 容量/ 设置/ 为/ 能够/ 保存/ 256/ 条/ 指令/ ,/ 总面积/ 开销/ 小于/ 一级/ 指令/ Cache/ 的/ 1/ // 15/ ./ 另外/ ,/ 由于/ 本文/ 的/ 指令/ 缓冲/ 是/ 在/ “/ 指令预取/ 队列/ ”/ 的/ 基础/ 上/ 扩展/ 而成/ ,/ 并/ 采用/ 锁/ 存器/ 进行/ 电路/ 构造/ ,/ 其/ 访问/ 能耗/ 基本/ 与/ 深度/ 无关/ ,/ 因此/ 即使/ 命中率/ 较/ 低/ ,/ 也/ 不会/ 因为/ 填充/ 缓冲/ 带来/ 额外/ 的/ 能量/ 浪费/ ./ 各/ 典型/ 课题/ 在/ 该/ 结构/ 下/ 的/ 指令/ 缓冲/ 命中率/ 如图/ 11/ 所示/ ./ 由于/ 课题/ 核心/ 段/ 的/ 规模/ 和/ 运行/ 特征/ 不同/ ,/ 指令/ 缓冲/ 命中率/ 差异/ 很大/ ,/ gobmk/ 课题/ 的/ 命中率/ 高达/ 97.3/ %/ ,/ 而/ omnetpp/ 课题/ 的/ 命中率/ 仅为/ 2/ %/ ,/ 上述/ 课题/ 的/ 指令/ 缓冲/ 平均/ 命中率/ 为/ 52.4/ %/ ./ 指令/ 缓冲/ 保存/ 的/ 内容/ 为/ 译码/ 后/ 的/ 指令/ ,/ 命中/ 缓冲/ 的/ 指令/ 的/ 译码/ 能耗/ 将/ 全部/ 被/ 节省/ ,/ 该/ 技术/ 将/ 降低/ 运算/ 核心/ 的/ 平均/ 译码/ 能耗/ 52.4/ %/ ./ 另一方面/ ,/ 由于/ 指令/ 缓冲容量/ 远/ 小于/ 一级/ 指令/ Cache/ ,/ 且/ 管理/ 算法/ 和/ 逻辑/ 非常简单/ ,/ 指令/ 缓冲/ 的/ 访问/ 能耗/ 也/ 远/ 小于/ 一级/ 指令/ Cache/ ,/ 经/ 计算/ 该/ 技术/ 能/ 降低/ 一级/ 指令/ Cache/ 平均/ 访问/ 能耗/ 约/ 47/ %/ ./ Page8/ (/ 2/ )/ 操作数/ 锁存/ 本文/ 实现/ 的/ 操作数/ 锁存/ ,/ 在/ 原有/ 代码/ 基础/ 上/ 进行/ 了/ 扩展/ ,/ 主要/ 增加/ 的/ 是/ 进行/ 条件/ 判断/ 的/ 组合/ 逻辑/ ,/ 对/ 芯片/ 的/ 面积/ 影响/ 很小/ ./ 相比/ 于/ 原始/ 设计/ ,/ 各/ 典型/ 课题/ 采用/ 操作数/ 锁存/ 技术/ 后/ 的/ 寄存器/ 文件/ 访问/ 的/ 情况/ 如图/ 12/ 所示/ ./ 图中/ 分别/ 列出/ 了/ 采用/ 源/ 操作数/ 锁存/ 技术/ 后/ 寄存器/ 文件/ 读/ 访问/ 降低/ 的/ 比例/ 、/ 使用/ 目标/ 操作数/ 锁存/ 技术/ 后/ 寄存器/ 读/ 访问/ 降低/ 的/ 比例/ 和/ 使用/ 目标/ 操作数/ 锁存/ 技术/ 后/ 寄存器/ 写访问/ 降低/ 的/ 比例/ 三组/ 数据/ ./ 这/ 三组/ 数据/ 的/ 效果/ 可/ 完全/ 叠加/ ./ 图/ 12/ 使用/ 操作数/ 锁存/ 后/ 的/ 寄存器/ 文件/ 访问率/ 采用/ 源/ 操作数/ 锁存/ 技术/ ,/ 读/ 操作/ 的/ 减少/ 率/ 在/ 0.7/ %/ 到/ 17.3/ %/ 之间/ ,/ 平均/ 降低/ 率为/ 9.4/ %/ ;/ 采用/ 目标/ 操作数/ 锁存/ 技术/ ,/ 读/ 操作/ 的/ 减少/ 率/ 在/ 0.6/ %/ ~/ 6.6/ %/ 之间/ ,/ 平均/ 降低/ 率为/ 4.1/ %/ ;/ 采用/ 目标/ 操作数/ 锁存/ 技术/ ,/ 写/ 操作/ 的/ 减少/ 率/ 在/ 1.1/ %/ ~/ 12.4/ %/ 之间/ ,/ 平均/ 降低/ 率为/ 7.8/ %/ ./ 根据/ 寄存器/ 文件/ 读写访问/ 的/ 功耗/ 计算/ ,/ 采用/ 源/ 操作数/ 锁存/ 技术/ 平均/ 可/ 降低/ 运算/ 核心/ 寄存器/ 文件/ 访问/ 能耗/ 6.1/ %/ ;/ 采用/ 目标/ 操作数/ 锁存/ 技术/ ,/ 平均/ 可/ 降低/ 运算/ 核心/ 寄存器/ 文件/ 能耗/ 5.4/ %/ ./ 两者/ 叠加/ ,/ 总计/ 可/ 降低/ 运算/ 核心/ 寄存器/ 文件/ 访问/ 能耗/ 为/ 11.5/ %/ ./ (/ 3/ )/ 能效/ 优先/ 的/ 浮点/ 部件/ 设计/ 方法/ 本文/ 在/ 已有/ 的/ 双/ 精度/ 浮点/ 部件/ 设计/ 的/ 基础/ 上/ ,/ 进行/ 了/ 不同/ 设计/ 参数/ 下/ 的/ 设计/ 空间/ 探索/ ./ 列出/ 了/ 各种/ 参数/ 下/ 的/ 性能/ 功耗/ 比/ 、/ 性能/ 面积/ 比/ 和/ 实现/ 单位/ 性能/ 的/ 面积/ 功耗/ 积/ ./ 本文/ 仅以/ 浮点/ 部件/ 为/ 实例/ 进行/ 分析/ ,/ 相关/ 方法/ 可以/ 应用/ 到/ 芯片/ 内/ 的/ 其他/ 部分/ ./ 本文/ 选取/ 的/ 实现/ 频率/ 为/ 1GHz/ ~/ 1.7/ GHz/ ,/ 每隔/ 100MHz/ 设置/ 一个/ 实验点/ ./ 根据/ 具体/ 浮点/ 部件/ 的/ 情况/ ,/ 选择/ 了/ 4/ 级/ // 5/ 级/ // 6/ 级/ 3/ 种/ 不同/ 的/ 内部/ 站台/ 切分/ 方式/ ,/ 站台/ 切分/ 时/ 尽量/ 控制/ 站台/ 触发器/ 数量/ ,/ 在/ 逻辑/ 较窄/ 处/ 进行/ 切分/ ./ 实验/ 结果/ 如图/ 13/ 所示/ ./ 图/ 13/ 中/ ,/ 由于/ 6/ 级/ 站台/ 的/ 切分/ 方案/ 继承/ 了/ 性能/ 优先/ 的/ 设计方案/ ,/ 其/ 频率特性/ 较/ 好/ ,/ EDA/ 工具/ 不用/ 进行/ 大幅/ 优化/ 即可/ 满足/ 频率/ 要求/ ,/ 因此/ 在/ 实验/ 中/ 呈现出/ 性能/ 功耗/ 比/ 基本/ 不变/ 、/ 性能/ 面积/ 比/ 线性/ 增加/ 的/ 特征/ ./ 而/ 4/ 级/ 和/ 5/ 级/ 两种/ 站台/ 切分/ 方式/ 出现/ 了/ 关键/ 路径/ ,/ 频率/ 约束/ 对/ 其/ 总体/ 特性/ 表现/ 影响/ 很大/ ./ 图/ 13/ 中/ 可以/ 看出/ ,/ 由于/ 浮点/ 部件/ 的/ 算法/ 没有/ 改/ Page9/ 变/ ,/ 因此/ 在/ 一种/ 设计/ 之下/ ,/ 性能/ 功耗/ 比/ 和/ 性能/ 面积/ 比/ 无法/ 同时/ 达到/ 最优/ ,/ 例如/ 性能/ 功耗/ 比/ 最优/ 的/ 方案/ 是/ 1GHz/ 、/ 4/ 级/ 站台/ ,/ 而/ 性能/ 面积/ 比/ 最优/ 的/ 方案/ 是/ 1.7/ GHz/ 、/ 6/ 级/ 站台/ ./ 单位/ 性能/ 下/ 的/ 面积/ 功耗/ 积是/ 一个/ 比较/ 平衡/ 的/ 参考/ 指标/ ./ 实验/ 中/ ,/ 面积/ 功耗/ 积/ 最优/ 的/ 设计/ 是/ 4/ 级/ 站/ 、/ 1GHz/ ,/ 比起/ 自主/ 处理器/ 原型/ 最初/ 使用/ 的/ 6/ 级/ 站台/ 、/ 1.2/ GHz/ 设计/ ,/ 性能/ 功耗/ 比/ 提升/ 17.6/ %/ ,/ 性能/ 面积/ 比/ 基本/ 相当/ ./ 这里/ 需要/ 说明/ 的/ 是/ ,/ 面积/ 功耗/ 积仅/ 能/ 做/ 为/ 设计/ 参数/ 选择/ 的/ 参考/ ,/ 实际/ 中/ 还/ 需要/ 根据/ 具体/ 实现/ 条件/ 下/ 的/ 功耗/ 和/ 面积/ 预算/ 约束/ 进行/ 平衡/ ./ 另外/ ,/ 浮点/ 部件/ 的/ 频率/ 设置/ 还要/ 考虑/ 到/ 整个/ 运算/ 核心/ 其他/ 部件/ 的/ 情况/ ./ 因此/ 能效/ 优先/ 的/ 设计/ 方法/ ,/ 需要/ 在/ 具体情况/ 下/ 进行/ 大量/ 的/ 实验/ ,/ 才能/ 得到/ 最终/ 综合/ 指标/ 满足要求/ 的/ 设计/ ./ (/ 4/ )/ 综合/ 效果/ 与/ 对比/ 结合/ 整个/ 芯片/ 的/ 平均/ 能耗/ 分布/ 情况/ ,/ 总结/ 了/ 各种/ 技术/ 的/ 综合/ 效果/ ./ 基于/ 指令/ 窗口/ 的/ 指令/ 缓冲/ 技术/ 平均/ 能够/ 降低/ 译码/ 能耗/ 52.4/ %/ 、/ 一级/ 指令/ Cache/ 访问/ 的/ 能耗/ 约/ 47/ %/ ,/ 折合/ 约/ 降低/ 整个/ 芯片/ 平均/ 能耗/ 的/ 12/ %/ ;/ 操作数/ 锁存/ 技术/ 平均/ 可以/ 降低/ 运算/ 核心/ 寄存器/ 文件/ 能耗/ 表/ 2/ 与/ 商用/ GPU/ 运行/ DGEMM/ 的/ 比较/ 10401173/ 本文/ 401000NVIDIAK20/ [/ 26/ ]/ 28705225DFMC/ 原型/ 目标/ 工艺/ 为/ 40nm/ ,/ 相比/ NVIDIAGPUK20/ 的/ 28nm/ 工艺/ ,/ 落后/ 了/ 一代/ (/ 与/ 40nm/ 工艺/ 相比/ ,/ 相同/ 性能/ 下/ 使用/ 28nm/ 工艺/ 可/ 降低功耗/ 40/ %/ 以上/ ①/ )/ ./ 但/ DFMC/ 的/ 实测/ 的/ 性能/ 功耗/ 比为/ 7.16/ GFlops/ // W/ ,/ 仍/ 是/ K20/ 的/ 1.29/ 倍/ ./ 这里/ 还/ 需要/ 对本/ 比较/ 的/ 置信度/ 进行/ 补充/ 说明/ :/ (/ 1/ )/ 文献/ [/ 26/ ]/ 测试/ 的/ 是/ GPU/ 的/ 板级/ 功耗/ ,/ 除了/ GPU/ 功耗/ 外/ ,/ 还/ 包含/ 了/ GDDR5/ 显存/ 芯片/ 的/ 功耗/ ./ 本文/ 的/ 测试数据/ 只/ 包含/ DFMC/ 原型/ 的/ 芯片/ 功耗/ ,/ 不/ 含/ 主存/ 功耗/ ./ K20GPU/ 加速卡/ 上/ 包含/ 了/ 10/ 片/ GDDR5/ 颗粒/ ,/ 根据/ 三星公司/ 的/ 文献/ 数据/ ②/ ,/ 其/ 总/ 功耗/ 估计/ 在/ 15W/ 左右/ ,/ 约/ 占/ GPU/ 测量/ 总/ 功耗/ 的/ 7.9/ %/ ./ (/ 2/ )/ 本文/ 采用/ 的/ 是/ 评估/ 功耗/ ,/ 而/ GPU/ 功耗/ 是/ 实测值/ ./ 尽管/ 本文/ 的/ 功耗/ 分析方法/ ,/ 使用/ 的/ 是/ 课题/ 运行/ 信息/ 和/ 设计/ 电路/ 物理/ 信息/ ,/ 接近/ 真实/ 芯片/ 的/ 工作/ 情况/ ,/ 但/ 仍会/ 与/ 最终/ 芯片/ 的/ 功耗/ 有/ 一定/ 差异/ ./ 根据/ 本/ 团队/ 的/ 芯片/ 设计/ 经验/ ,/ 该/ 差异/ 应/ 能/ 控制/ 在/ 15/ %/ 以内/ ./ 综上/ ,/ 面向/ 40nm/ 工艺/ 设计/ 的/ DFMC/ 原型/ 的/ 能效/ 11.5/ %/ ,/ 折合/ 约/ 平均/ 降低/ 整个/ 芯片/ 能耗/ 的/ 1.5/ %/ ;/ 能效/ 优先/ 的/ 浮点/ 部件/ 设计/ 方法/ 预计/ 可/ 提升/ 浮点/ 部件/ 性能/ 功耗/ 比/ 17.6/ %/ ,/ 折合/ 降低/ 全片/ 能耗/ 1.2/ %/ ./ 综合/ 上述/ 结构/ 级/ 技术/ ,/ 芯片/ 总/ 能耗/ 平均/ 可/ 降低/ 约/ 14.7/ %/ ./ 本文/ 还/ 对/ 结构/ 级/ 优化/ 后/ 的/ 众核/ 处理器/ 原型/ 的/ 整体/ 能效/ 情况/ 进行/ 了/ 测试/ ./ 选择/ 的/ 测试程序/ 为/ 双/ 精度/ 浮点/ 矩阵/ 乘/ (/ DGEMM/ )/ ,/ 该/ 程序/ 也/ 是/ 用于/ 高性能/ 计算机/ TOP500/ 排名/ 的/ linpack/ 测试/ 的/ 核心/ ./ 使用/ 了/ 高/ 能效/ 技术/ 优化/ 后/ 的/ 众核/ 处理器/ 原型/ ,/ 设计/ 频率/ 调整/ 为/ 1GHz/ 、/ 浮点/ 部件/ 选择/ 了/ 面积/ 功耗/ 积/ 最优/ 的/ 4/ 级/ 流水线结构/ ,/ 并/ 重新/ 进行/ 了/ 综合/ 布线/ ./ 在/ 4/ 个/ 管理/ 核心/ +/ 256/ 运算/ 核心/ 的/ 规模/ 下/ ,/ 通过/ 在/ RTL/ 上/ 仿真/ 运行/ 的/ 波形/ 注入/ 网表/ 的/ 方式/ 进行/ 能耗/ 测试/ ./ 测试/ 中/ 本文/ 提出/ 的/ 指令/ 缓冲/ 命中率/ 高达/ 95/ %/ ,/ 寄存器/ 锁存/ 技术/ 吸收/ 了/ 31/ %/ 的/ 寄存器/ 源/ 操作数/ 读/ 操作/ ,/ 发挥/ 了/ 很/ 好/ 的/ 节能/ 效果/ ./ 测试/ 结果/ 如表/ 2/ 所示/ ./ 为/ 更/ 直观/ 地/ 反映/ 众核/ 处理器/ 原型/ 能效/ 水平/ ,/ 本文/ 选择/ 了/ NVIDIA/ 公司/ 面向/ 高性能/ 计算/ 的/ Kepler/ 架构/ GPUK20/ 进行/ 对比/ ./ 该款/ GPU/ 采用/ 28nm/ 工艺/ ,/ K20GPU/ 实际/ 运行/ DGEMM/ 的/ 功耗/ 和/ 性能/ 的/ 测量/ 数据/ 来自/ 于/ 文献/ [/ 26/ ]/ ./ 其/ 结果/ 也/ 列于/ 表/ 2/ 中/ ./ 水平/ ,/ 与/ 28nm/ 工艺/ 下/ 的/ NVIDIAGPUK20/ 相当/ ./ 7/ 结论/ 与/ 未来/ 工作/ 面向/ 高性能/ 计算/ 的/ 众核/ 处理器/ 面临/ 严峻/ 的/ “/ 能耗/ 墙/ ”/ 挑战/ ./ 本文/ 以/ 一款/ 自主/ 众核/ 处理器/ DFMC/ 原型/ 为/ 基础/ ,/ 首先/ 对/ 其/ 在/ 典型/ 负载/ 下/ 的/ 能耗/ 分布/ 进行/ 了/ 分析/ ,/ 结合/ 该/ 处理器/ 的/ 具体/ 结构/ ,/ 提出/ 了/ 保存/ 部分/ 译码/ 后/ 指令/ 的/ 基于/ 指令/ 窗口/ 的/ 指令/ 缓冲/ 技术/ ,/ 该/ 技术/ 能够/ 有效/ 降低/ 处理器/ 运算/ 核心/ 一级/ 指令/ Cache/ 和/ 译码/ 逻辑/ 平均/ 能耗/ 约/ 50/ %/ ;/ 提出/ 了/ 操作数/ 锁存/ 技术/ 以/ 减少/ 寄存器/ 文件/ 访问/ 次数/ ,/ 该/ 技术/ 能够/ 减少/ 运算/ 核心/ 寄存器/ 文件/ 平均/ 能耗/ 约/ 11.5/ %/ ;/ 探索/ 了/ 能效/ 优先/ 的/ 浮点/ 部件/ 设计/ 方法/ ,/ 该/ 技术/ 预计/ 可/ 提升/ 浮点/ 部/ ①/ ②/ Page10/ 件/ 性能/ 功耗/ 比/ 17.6/ %/ ./ 综合/ 使用/ 上述/ 技术/ ,/ 最终/ 全/ 芯片/ 平均/ 能耗/ 可/ 降低/ 14.7/ %/ ./ 在/ 本文/ 的/ 实验/ 环境/ 下/ ,/ DFMC/ 原型/ 在/ DGEMM/ 课题/ 测试/ 中/ 得到/ 的/ 性能/ 功耗/ 比/ ,/ 与/ 比/ 其/ 工艺/ 先进/ 一代/ 的/ NVIDIAK20GPU/ 相当/ ./ 本文/ 工作/ 目前/ 还/ 主要/ 关注/ DFMC/ 的/ 结构/ 级/ 高/ 能效/ ,/ 未来/ 还/ 将/ 深入研究/ 系统/ 级/ 、/ 电路/ 级/ 和/ 工艺/ 级/ 高/ 能效/ 技术/ 和/ 方法/ ./ 另外/ ,/ 针对/ 除/ 运算/ 核心/ 外/ 的/ 其他/ 部分/ 的/ 动态/ 功耗/ 优化/ 研究/ 也/ 正在/ 开展/ 之中/ ./ 

