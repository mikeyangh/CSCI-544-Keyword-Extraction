Page1/ 基于/ 变量/ 影响/ 分析/ 与/ 数据/ 变异/ 的/ 回归/ 测试用例/ 生成/ 吴际/ 2/ )/ 1/ )/ (/ 北方工业大学/ 计算机/ 学院/ 北京/ 100144/ )/ 2/ )/ (/ 北京航空航天大学/ 计算机/ 学院/ 北京/ 100191/ )/ 摘要/ 故障/ 修复/ 后/ ,/ 程序员/ 还/ 需/ 验证/ 那些/ 与/ 修复/ 故障/ 相关/ 的/ 区域/ 是否/ 还/ 存在/ 故障/ 或者/ 引入/ 了/ 新/ 的/ 故障/ ,/ 这时/ 有/ 可能/ 需要/ 补充/ 新/ 的/ 测试用例/ ./ 现有/ 研究/ 大多/ 依赖/ 符号执行/ 等/ 技术/ ,/ 这样/ 可能/ 导致/ 状态/ 空间/ 过大/ ./ 且/ 现有/ 的/ 研究/ 统一/ 地来/ 考虑/ 程序/ 中/ 控制流/ 相关/ 的/ 故障/ 和/ 数据流/ 相关/ 的/ 故障/ ,/ 但/ 程序/ 中/ 控制流/ 相关/ 的/ 故障/ 与/ 数据流/ 相关/ 的/ 故障/ 存在/ 区别/ ./ 由于/ 程序运行/ 时/ 的/ 行为/ 与/ 变量/ 密切相关/ ,/ 并且/ 在/ 人工/ 程序调试/ 时/ 程序员/ 经常/ 会/ 关注/ 变量/ 的/ 状态/ 变化/ ./ 因此/ 该文/ 提出/ 了/ 一种/ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 回归/ 测试用例/ 方法/ ,/ 通过/ 分析程序/ 中/ 动态/ 执行/ 的/ 变量/ 状态/ 的/ 变化/ ,/ 提炼出/ 了/ 一种/ 变量/ 行为/ 模型/ ,/ 该/ 模型/ 描述/ 了/ 变量/ 自身/ 的/ 状态/ 变化/ 和/ 变量/ 间/ 的/ 依赖/ 关系/ ./ 利用/ 变量/ 行为/ 模型/ 来/ 找到/ 影响/ 故障/ 的/ 语句/ 集合/ ,/ 基于/ 该/ 语句/ 集合/ 并/ 利用/ 数据/ 变异/ 的/ 方法/ 可以/ 有/ 针对性/ 地/ 补充/ 测试用例/ ./ 经过/ 实验/ 验证/ ,/ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 回归/ 测试用例/ 方法/ ,/ 在/ 针对/ 数据流/ 相关/ 的/ 故障/ 修复/ 情况/ 进行/ 验证/ 时/ 效果/ 明显/ ,/ 且/ 要/ 优于/ 随机/ 测试用例/ 生成/ 方法/ 和/ 基于/ 路径/ 覆盖/ 的/ 测试用例/ 生成/ 方法/ ./ 关键词/ 故障/ 修复/ ;/ 影响/ 分析/ ;/ 变量/ ;/ 数据/ 变异/ ;/ 回归/ 测试/ 1/ 引言/ 有/ 统计数据/ 表明/ ,/ 回归/ 测试/ 占/ 软件维护/ 费用/ 的/ 50/ %/ 以上/ [/ 1/ ]/ ,/ 因此/ 提高/ 回归/ 测试/ 的/ 效率/ 非常/ 必要/ ./ 在/ 需要/ 进行/ 回归/ 测试/ 的/ 场景/ 中/ ,/ 有/ 一类/ 是/ 发现/ 故障/ 且/ 修复/ 了/ 故障/ 之后/ 的/ 回归/ 测试/ ,/ 在/ 这类/ 情况/ 下/ 可能/ 需要/ 补充/ 新/ 的/ 测试用例/ ./ 这/ 其中/ 包含/ 两个/ 方面/ 的/ 考虑/ ,/ 一方面/ 是/ 原有/ 的/ 故障/ 是否/ 已经/ 修复/ 正确/ ,/ 另一方面/ 是/ 原有/ 的/ 故障/ 修复/ 之后/ ,/ 是否/ 会/ 带来/ 新/ 的/ 故障/ ./ 程序员/ 验证/ 故障/ 修复/ 时/ ,/ 会/ 对/ 验证/ 修复/ 的/ 目标/ 进行/ 设定/ ,/ 比如/ 设定/ 需要/ 覆盖/ 的/ 程序/ 单元/ 的/ 集合/ ./ 然后/ 再用/ 已有/ 的/ 测试用例/ 做/ 回归/ 测试/ ,/ 如果/ 回归/ 测试/ 的/ 结果/ 反映/ 出/ 没有/ 达到/ 验证/ 修复/ 的/ 目标/ ,/ 例如/ 没有/ 完全/ 覆盖/ 到/ 设定/ 的/ 语句/ 集合/ ,/ 此时/ 补充/ 新/ 的/ 测试用例/ 非常/ 有/ 必要/ ./ 由于/ 程序/ 中/ 可能/ 存在/ 复杂/ 的/ 函数调用/ 关系/ ,/ 以及/ 逻辑/ 分支/ 、/ 循环/ 、/ 嵌套/ 等/ 复杂/ 的/ 逻辑/ 结构/ ,/ 并且/ 包含/ 相当/ 多/ 的/ 变量/ ,/ 变量/ 之间/ 还/ 存在/ 相当/ 复杂/ 的/ 依赖/ 关系/ ,/ 因此/ 想要/ 在/ 修复/ 故障/ 之后/ 进行/ 全面/ 的/ 回归/ 测试/ 显然/ 花费/ 太大/ ./ 并且/ 代码/ 的/ 规模/ 越大/ ,/ 进行/ 全面/ 回归/ 测试/ 的/ 复杂度/ 就/ 越/ 高/ ./ 因此/ 如何/ 提高/ 故障/ 修复/ 之后/ 回归/ 测试/ 的/ 效率/ ,/ 是/ 非常/ 有/ 价值/ 的/ 研究/ 问题/ ./ 在/ 进行/ 回归/ 测试/ 之前/ ,/ 程序/ 或/ 软件/ 可能/ 会/ 产生/ 新/ 的/ 测试/ 需求/ ,/ 对于/ 这/ 类/ 需求/ ,/ 研究者/ 提出/ 了/ 回归/ 测试/ 中/ 的/ 测试用例/ 方法/ [/ 2/ -/ 3/ ]/ ,/ 希望/ 利用/ 这些/ 方法/ 生成/ 新/ 的/ 测试用例/ 来/ 满足/ 新/ 的/ 测试/ 需求/ ./ Santelices/ 等/ 人/ [/ 2/ ]/ 提出/ 了/ 一种/ 结合/ 控制流/ 图/ 、/ 数据流/ 图/ 和/ 符号执行/ 技术/ 的/ 测试用例/ 生成/ 方法/ ,/ 该/ 方法/ 认为/ 新/ 生成/ 的/ 测试用例/ 集/ 应该/ 能够/ 覆盖/ 所有/ 以/ 修改/ 点为/ 起始/ 点/ 的/ 依赖/ 关系/ ./ 除了/ 提出/ 该/ 方法/ 之外/ ,/ Santelices/ 等/ 人/ [/ 3/ ]/ 还/ 将/ 测试用例/ 增加/ 技术/ 与/ PIE/ 模型/ 相结合/ ,/ 提出/ 了/ 传播/ 分析/ 和/ 谓词/ 约束/ 求解/ 的/ 测试用例/ 生成/ 方法/ ./ 利用/ 上述/ 方法/ 可以/ 获得/ 测试/ 输入/ ,/ 且/ 能/ 同时/ 记录/ 所/ 满足/ 的/ 测试/ 需求/ ./ 当新/ 的/ 测试/ 需求/ 全部/ 被/ 满足/ 时/ ,/ 测试用例/ 生成/ 就/ 宣告/ 完成/ ./ Jiang/ 等/ 人/ [/ 4/ ]/ 提出/ 一种/ 回归/ 测试/ 中/ 的/ 测试用例/ 增加/ 方法/ ,/ 该/ 方法/ 首先/ 对/ 程序/ 建立/ 图/ 模型/ ,/ 并且/ 考察/ 图/ 模型/ 中/ 的/ 边/ 是否/ 被/ 测试用例/ 覆盖/ ,/ 如果/ 没有/ 被/ 覆盖/ ,/ 则/ 搜索/ 能/ 连接/ 初始/ 节点/ 与/ 未/ 覆盖/ 边源/ 节点/ 的/ 一条/ 最短/ 路径/ ,/ 并/ 将/ 搜索/ 到/ 的/ 最/ 短/ 路径/ 进行/ 组合/ ,/ 最终/ 形成/ 子图/ ./ 根据/ 这些/ 子图/ 来/ 产生/ 测试用例/ ./ Xu/ 等/ 人/ [/ 5/ ]/ 通过/ 对比/ 测试用例/ 在/ 新旧/ 两个/ 程序/ 版本/ 的/ 执行/ ,/ 得到/ 修改/ 版本/ 中未/ 被/ 测试用例/ 覆盖/ 的/ 分支/ 集合/ ,/ 然后/ 利用/ 符号/ 测试/ 等/ 技术/ 产生/ 新/ 的/ 测试用例/ ./ Maragathavalli/ 等/ 人/ [/ 6/ ]/ 利用/ 覆盖/ 的/ 路径/ 相似/ 为/ 准则/ ,/ 利用/ 已有/ 的/ 测试用例/ 来/ 选择/ 合适/ 的/ 测试用例/ ./ Nachiyappan/ 等/ 人/ [/ 7/ ]/ 利用/ 进化/ 算法/ 来/ 缩减/ 回归/ 测试用例/ ,/ Zhang/ 等/ 人/ [/ 8/ ]/ 分析程序/ 对应/ 的/ 树形/ 结构/ 找到/ 发生/ 改变/ 的/ 路径/ ,/ 并/ 确定/ 影响/ 路径/ 改变/ 的/ 分支/ ,/ 依据/ 此来/ 生成/ 测试用例/ ./ Ye/ 等/ 人/ [/ 9/ ]/ 分析/ 程序修改/ 前后/ 对应/ 的/ 活动/ 图/ ,/ 找出/ 其他/ 受到/ 影响/ 、/ 没有/ 受到/ 影响/ 的/ 路径/ ,/ 并/ 依据/ 此/ 选择/ 测试用例/ ./ Kumar/ 等/ 人/ [/ 10/ ]/ 分析/ 修改/ 前后/ 程序/ 的/ 路径/ ,/ 选择/ 新/ 增加/ 的/ 路径/ 及/ 发生/ 改变/ 的/ 路径/ ,/ 作为/ 需要/ 覆盖/ 的/ 路径/ ./ Yoo/ 等/ 人/ [/ 11/ ]/ 利用/ 已有/ 的/ 测试用例/ ,/ 通过/ 分析/ 不同/ 的/ 测试/ 变量/ 搜索/ 域/ 和/ 交互/ 水平/ ,/ 采用/ 基于/ 搜索/ 的/ 方法/ 来/ 生成/ 新/ 的/ 测试用例/ ./ 吴川/ 等/ 人/ [/ 12/ ]/ 根据/ 测试/ 目标/ 从/ 已有/ 的/ 测试用例/ 中/ 进行/ 选择/ ,/ 提出/ 了/ 一种/ 基于/ 路径/ 相关/ 的/ 测试数据/ 进化/ 生成/ 方法/ ./ 谢晓园/ 等/ 人/ [/ 13/ ]/ 提出/ 了/ 基于/ 相似/ 度/ 度量/ 的/ 适应/ 值/ 函数/ ,/ 来/ 生成/ 覆盖/ 指定/ 路径/ 的/ 测试用例/ ./ 但/ 目前/ 基于/ 影响/ 分析/ 的/ 回归/ 测试用例/ 生成/ 方法/ 还/ 存在/ 以下几点/ 不足/ :/ (/ 1/ )/ 现有/ 的/ 基于/ 影响/ 分析/ 的/ 回归/ 测试用例/ 增加/ 方法/ 主要/ 依赖/ 符号执行/ 等/ 传统/ 生成/ 技术/ ,/ 这样/ 使得/ 这些/ 技术/ 会/ 面对/ 状态/ 空间/ 爆炸/ 的/ 问题/ [/ 14/ ]/ ./ (/ 2/ )/ 现有/ 的/ 研究/ 统一/ 地来/ 考虑/ 程序/ 中/ 控制流/ 相关/ 的/ 故障/ 和/ 数据流/ 相关/ 的/ 故障/ ,/ 但/ 其实/ 这/ 两种/ 故障/ 存在/ 自身/ 的/ 特点/ ,/ Santelices/ 等/ 人/ [/ 15/ ]/ 基于/ 对/ 程序/ 频谱/ 的/ 分析/ ,/ 指出/ 程序/ 频谱/ 分析/ 应/ 分别/ 针对/ 不同/ 类型/ 的/ 故障/ 来/ 进行/ ,/ 因此/ 对于/ 不同/ 类型/ 的/ 故障/ ,/ 需要/ 有/ 专门/ 验证/ 其/ 修复/ 的/ 方法/ ;/ 针对/ 上述/ 研究/ 问题/ ,/ 本文/ 专门/ 总结/ 了/ 数据流/ 相关/ 故障/ 的/ 特点/ ,/ 并/ 细致/ 地/ 分析/ 了/ 程序运行/ 过程/ 中/ 变量/ 的/ 动态/ 行为/ ,/ 在/ 其中/ 提炼出/ 能够/ 反映/ 变量/ 行为/ 的/ 模型/ ./ 其次/ ,/ 利用/ 变量/ 行为/ 模型/ ,/ 找出/ 与/ 故障/ 相关/ 的/ 语句/ 集合/ ,/ 接下来/ 借助/ 数据/ 变异/ 技术/ ,/ 自动/ 生成/ 与/ 故障/ 相关/ 的/ 测试用例/ ./ 该/ 方法/ 还/ 涉及/ 到/ 测试用例/ 的/ 判/ Page3/ 定/ 问题/ ,/ 在/ 文中/ 都/ 进行/ 了/ 详细/ 的/ 介绍/ ./ 本文/ 第/ 2/ 节对/ 数据流/ 相关/ 的/ 故障/ 给出/ 简短/ 的/ 描述/ ,/ 并/ 基于/ 对/ 变量/ 行为/ 的/ 分析/ 提出/ 变量/ 行为/ 模型/ ,/ 其中/ 包括/ 变量/ 自身/ 的/ 变化/ 和/ 变量/ 间/ 的/ 依赖/ 关系/ ,/ 并且/ 给予/ 详细描述/ ,/ 另外/ 介绍/ 将/ 变量/ 自身/ 变化/ 与/ 变量/ 间/ 依赖/ 关系/ 统一/ 在/ 一起/ 的/ 变量/ 行为/ 模型/ ;/ 第/ 3/ 节/ 主要/ 讲述/ 如何/ 利用/ 变量/ 行为/ 模型/ 和/ 数据/ 变异/ ,/ 来/ 有/ 针对性/ 地/ 对/ 修复/ 故障/ 之后/ 进行/ 回归/ 测试用例/ 的/ 生成/ ;/ 第/ 4/ 节/ 详细/ 地/ 介绍/ 用/ 变量/ 影响/ 分析/ 及/ 数据/ 变异/ 方法/ 进行/ 的/ 实验/ ,/ 并/ 分析/ 实验/ 结果/ ;/ 第/ 5/ 节/ 介绍/ 测试用例/ 生成/ 方法/ 、/ 数据流/ 分析/ 和/ 切片/ 分析/ 的/ 相关/ 工作/ ;/ 最后/ 在/ 第/ 6/ 节对/ 研究/ 工作/ 进行/ 总结/ 与/ 展望/ ./ 2/ 变量/ 行为/ 分析/ 及/ 建模/ 2.1/ 数据流/ 相关/ 的/ 故障/ 程序/ 中/ 的/ 故障/ 可以/ 分为/ 两大类/ :/ 分别/ 为/ 与/ 数据流/ 相关/ 的/ 故障/ 和/ 与/ 控制流/ 相关/ 的/ 故障/ [/ 16/ ]/ ,/ 这/ 两类/ 故障/ 存在/ 明显/ 的/ 区别/ ,/ 与/ 数据流/ 相关/ 的/ 故障/ 和/ 程序/ 中/ 的/ 变量/ 联系/ 紧密/ ,/ 变量/ 使用/ 错误/ 与/ 变量/ 定义/ 错误/ 都/ 能/ 导致/ 程序/ 触发/ 此类/ 故障/ ./ 与/ 控制流/ 相关/ 的/ 故障/ 和/ 程序/ 的/ 结构/ 相关/ ,/ 语句/ 执行/ 顺序/ 的/ 改变/ 、/ 谓词/ 条件/ 的/ 错误/ 定义/ 等/ 都/ 可/ 导致/ 程序/ 触发/ 此类/ 故障/ ./ 值得注意/ 的/ 是/ ,/ 现有/ 的/ 基于/ 影响/ 分析/ 的/ 回归/ 测试用例/ 生成/ 方法/ 都/ 没有/ 能够/ 充分/ 地/ 利用/ 程序/ 中/ 变量/ 的/ 取值/ 变化/ 信息/ 、/ 变量/ 间/ 的/ 依赖/ 关系/ 和/ 程序/ 的/ 执行/ 逻辑/ 信息/ ./ 程序/ 中/ 与/ 数据流/ 相关/ 的/ 故障/ 和/ 这些/ 信息/ 密切相关/ ,/ 且/ 在/ 人工/ 程序调试/ 中/ ,/ 这些/ 信息/ 也/ 是/ 需要/ 重点/ 关注/ 的/ ./ 与/ 数据流/ 相关/ 的/ 故障/ 有/ 其/ 自身/ 独特/ 的/ 特点/ ,/ 表现/ 在/ 以下/ 几个/ 方面/ [/ 17/ ]/ :/ 其一/ ,/ 与/ 数据流/ 相关/ 的/ 故障/ 未必/ 会/ 导致/ 程序控制/ 流/ 错误/ ,/ 即/ 程序执行/ 错误/ 的/ 路径/ ./ 这样/ 的/ 故障/ 往往/ 使得/ 程序/ 在/ 执行/ 过程/ 中仅/ 出现/ 一个/ 或/ 多个/ 变量/ 的/ 值/ 表现/ 出/ 异常/ ,/ 更/ 特殊/ 的/ 情况/ 是/ :/ 程序/ 可能/ 执行/ 到/ 最终/ 结果/ 输出/ 时/ ,/ 才/ 出现/ 输出/ 结果/ 与/ 预期/ 值有/ 差异/ ./ 其二/ ,/ 与/ 数据流/ 相关/ 的/ 故障/ 有时/ 需要/ 对/ 某个/ 或/ 多个/ 变量/ 的/ 值/ 多次/ 进行/ 计算/ 后/ 才/ 会/ 被/ 触发/ ,/ 例如/ 在/ 某/ 循环/ 内部/ ,/ 某/ 变量值/ 出现/ 越界/ 、/ 溢出/ 、/ 误差/ 过大/ 等/ 情况/ 的/ 前提条件/ 是/ 对/ 该/ 变量/ 的/ 值/ 进行/ 了/ 多次/ 迭代/ 计算/ ./ 对于/ 此类/ 故障/ ,/ 若能/ 保存/ 变量/ 的/ 执行/ 轨迹/ ,/ 将/ 有助于/ 对/ 此类/ 故障/ 的/ 理解/ 和/ 修复/ ./ 其三/ ,/ 与/ 数据流/ 相关/ 的/ 故障/ 发生/ 时/ 往往/ 是因为/ 某个/ 变量/ 的/ 取值/ 错误/ ,/ 使得/ 其他/ 变量/ (/ 某个/ 变量/ 或/ 多个/ 变量/ )/ 也/ 出现/ 错误/ ,/ 这是/ 变量/ 间/ 的/ 依赖/ 关系/ 导致/ 的/ ,/ 因此/ 在/ 对/ 这类/ 故障/ 进行/ 理解/ 和/ 修复/ 时/ ,/ 需要/ 考虑/ 这种/ 依赖/ 关系/ ./ 从/ 上面/ 的/ 讨论/ 可知/ ,/ 与/ 数据流/ 相关/ 的/ 故障/ 受/ 两大/ 方面/ 的/ 影响/ :/ 变量/ 的/ 取值/ 变化/ 与/ 变量/ 间/ 的/ 依赖/ 关系/ ./ 这/ 两个/ 方面/ 的/ 影响/ 混杂/ 在/ 一起/ ,/ 使得/ 对/ 这类/ 故障/ 的/ 修复/ 验证/ 相对/ 比较复杂/ ./ 本文/ 专注/ 于/ 研究/ 由/ 数据流/ 引起/ 的/ 故障/ 的/ 修复/ 验证/ ,/ 所/ 提出/ 的/ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 回归/ 测试用例/ 生成/ 方法/ 也/ 主要/ 是/ 针对/ 数据流/ 相关/ 的/ 故障/ ./ 2.2/ 变量/ 行为/ 分析/ 变量/ 行为/ 分析/ 与/ 程序/ 中/ 的/ 数据流/ 密切相关/ ,/ 程序/ 中/ 的/ 数据流/ 指/ 的/ 是/ :/ 设/ x/ 是/ 程序/ P/ 中/ 的/ 变量/ ,/ P/ 沿/ 所有/ 可能/ 路径/ 所/ 构成/ 的/ 对/ x/ 的/ 所有/ 操作/ 序列/ 都/ 叫作/ 变量/ x/ 的/ 数据流/ ./ P/ 中/ 所有/ 变量/ 的/ 数据流/ 集合/ 叫作/ 程序/ P/ 的/ 数据流/ [/ 18/ ]/ ./ 目前/ 已经/ 存在/ 多种/ 针对/ 程序/ 中/ 变量/ 的/ 行为/ 分析/ 的/ 方法/ ,/ 其中/ 典型/ 的/ 包括/ 数据流/ 分析方法/ 、/ 数据流/ 测试/ 技术/ 和/ 切片/ 技术/ ./ 数据流/ 分析/ 是/ 一种/ 典型/ 的/ 变量/ 行为/ 分析方法/ ,/ 其中/ 包括/ 静态数据/ 流/ 分析/ 与/ 动态/ 的/ 数据分析/ 方法/ ./ 切片/ 也/ 是/ 一种/ 典型/ 的/ 变量/ 行为/ 分析/ 技术/ ,/ Weiser/ 博士/ [/ 19/ ]/ 定义/ 程序/ 切片/ 为/ 程序/ 中/ 所有/ 能够/ 影响/ 某个/ 输出/ 的/ 语句/ 集合/ ,/ 切片/ 包括/ 动态/ 切片/ 与/ 静态/ 切片/ ,/ 动态/ 切片/ 与/ 静态/ 切片/ 相比/ 有/ 很多/ 优点/ ,/ 动态/ 切片/ 仅/ 考虑/ 在/ 某个/ 特定/ 输入/ 条件/ 下/ ,/ 程序/ 的/ 运行/ 情况/ ,/ 因此/ 有/ 很多/ 情况/ ,/ 例如/ 数组/ 下标/ 、/ 循环/ 依赖/ 关系/ 、/ 指针/ 等/ 信息/ 能/ 在/ 程序运行/ 时/ 动态/ 确定/ ,/ 这样/ 得/ 出来/ 的/ 结果/ 会/ 更/ 具体/ 和/ 精确/ ./ 而/ 在/ 程序调试/ 过程/ 中/ ,/ 通常/ 只/ 关注/ 程序/ 在/ 某个/ 输入/ 下/ 的/ 执行/ 行为/ ,/ 此时/ 动态/ 切片/ 比/ 静态/ 切片/ 有/ 更/ 高/ 的/ 准确度/ ,/ 更/ 能够/ 减少/ 切片/ 集合/ 规模/ ,/ 缩小/ 调试/ 分析/ 范围/ ./ 另外/ 还有/ 一些/ 基于/ 程序/ 图谱/ 的/ 行为/ 分析方法/ [/ 20/ ]/ ,/ 程序/ 图谱/ 的/ 概念/ 是/ 由/ Reps/ 等/ 人/ [/ 20/ ]/ 在/ 调试/ 解决/ 千年虫/ 的/ 问题/ 时/ 首先/ 提出/ 的/ ./ 程序/ 图谱/ 包含/ 了/ 程序/ 实体/ 在/ 测试用例/ 运行/ 过程/ 中/ 的/ 覆盖/ 信息/ ,/ 其中/ 程序/ 的/ 元素/ 可以/ 是/ 语句/ 、/ 语句/ 块/ 、/ 谓词/ 、/ 方法/ 、/ 变量/ 等/ ./ 程序/ 图谱/ 用来/ 描述/ 或/ 提供/ 程序/ 行为/ 的/ 表示/ 方式/ ./ 其/ 在/ 程序/ 理解/ 、/ 回归/ 测试/ 等/ 领域/ 得到/ 了/ 非常/ 广泛/ 的/ 应用/ ./ 上述/ 的/ 程序/ 行为/ 分析方法/ 是/ 进行/ 变量/ 影响/ 分析/ 的/ 基础/ ,/ 这些/ 方法/ 侧重点/ 不/ 一样/ ,/ 解决问题/ 的/ 特点/ 也/ 不/ 相同/ ./ 因此/ 在/ 进行/ 影响/ 分析/ 时/ ,/ 需要/ 分析/ 待/ 解决/ 的/ 问题/ 所/ 具有/ 的/ 特点/ ,/ 从而/ 提出/ 合适/ 的/ 程序/ 行为/ 表示/ 方法/ ./ 动态/ 切片/ 技术/ 由于/ 关注/ 程序/ 在/ 给定/ 输入/ 下/ 的/ 行为/ ,/ 因而/ 在/ 调试/ 方面/ 获得/ 了/ 更好/ 的/ 分析/ 准确度/ ,/ 这/ Page4/ 也/ 是/ 本文/ 利用/ 程序运行/ 时/ 行为/ 开展/ 影响/ 分析/ 研究/ 的/ 重要/ 原因/ ./ 然而/ ,/ 动态/ 切片/ 技术/ 没有/ 跟踪/ 相关/ 变量/ 在/ 程序运行/ 时/ 的/ 取值/ 变化/ 等/ 信息/ ,/ 因此/ 无法/ 有效/ 发现/ 程序运行/ 过程/ 中/ 的/ 错误/ 状态/ ./ 分析/ 程序运行/ 时/ 变量/ 的/ 行为/ ,/ 将/ 有助于/ 对/ 那些/ 与/ 数据/ 相关/ 的/ 故障/ 进行/ 定位/ ./ 程序/ 的/ 行为/ 与/ 程序/ 中/ 的/ 变量/ 有着/ 密切/ 的/ 关系/ ,/ 程序/ 中/ 变量/ 行为/ 的/ 变化/ 在/ 一定/ 程度/ 上/ 能够/ 反映/ 出/ 程序/ 的/ 行为/ 变化/ ./ 因此/ 对/ 程序运行/ 过程/ 中/ 变量/ 的/ 行为/ 进行/ 记录/ 、/ 建模/ 、/ 分析/ ,/ 能够/ 从/ 程序/ 中/ 数据流/ 的/ 角度/ 来/ 反映/ 出/ 程序/ 的/ 行为/ ./ 并且/ 对于/ 那些/ 由/ 变量/ 引起/ 的/ 程序/ 异常/ 进行/ 检测/ ,/ 基于/ 程序/ 变量/ 的/ 行为/ 分析方法/ 的/ 优势/ 就/ 能够/ 更好/ 地/ 体现/ 出来/ ./ 为了/ 对/ 数据流/ 相关/ 的/ 故障/ 进行/ 分析/ 并/ 补充/ 测试用例/ ,/ 需要/ 重点/ 关注/ 程序运行/ 过程/ 中/ 变量/ 的/ 变化/ 信息/ ,/ 与此同时/ 还/ 需/ 关注/ 变量/ 间/ 的/ 依赖/ 关系/ ./ 而已/ 有/ 的/ 数据流/ 分析/ 、/ 数据流/ 测试/ 的/ 方法/ 和/ 技术/ ,/ 虽然/ 反映/ 了/ 变量/ 的/ 定义/ 、/ 使用/ 的/ 特征/ ,/ 不过/ 却/ 难以/ 形成/ 程序执行/ 过程/ 中/ 变量/ 的/ 动态/ 行为/ 的/ 完整/ “/ 轨迹/ ”/ ,/ 这/ 给/ 针对/ 影响/ 分析/ 的/ 回归/ 测试用例/ 生成/ 带来/ 了/ 一定/ 的/ 难度/ ./ 本文/ 将/ 变量/ 在/ 程序运行/ 时/ 的/ 行为/ 特征/ 进行/ 了/ 抽象/ ,/ 重点/ 关注/ 变量/ 的/ 操作/ 状态/ 和/ 变量/ 之间/ 的/ 依赖/ 关系/ ,/ 这样/ 抽象/ 出来/ 的/ 结构/ 就是/ 本文/ 所/ 提出/ 来/ 的/ 变量/ 行为/ 模型/ ./ 2.3/ 变量/ 行为/ 模型/ (/ 1/ )/ 变量/ 对于/ 程序/ P/ ,/ 其/ 变量/ 集合/ 可以/ 表示/ 如下/ :/ 每/ 一个/ 变量/ 都/ 有/ 相应/ 的/ 类型/ ./ 这些/ 类型/ 可以/ 是/ 基本/ 类型/ 或/ 复杂/ 类型/ ./ (/ 2/ )/ 变量/ 的/ 赋值/ 与/ 引用/ 赋值/ (/ Define/ )/ :/ 指/ 变量/ 的/ 值/ 或/ 状态/ 发生/ 改变/ ./ 引用/ (/ Use/ )/ :/ 指/ 变量/ 被/ 使用/ ,/ 其值/ 或/ 对象/ 的/ 内部/ 状态/ 没有/ 任何/ 变化/ ./ (/ 3/ )/ 变量/ 状态/ 为了/ 能够/ 反应/ 程序/ 的/ 行为/ 特点/ ,/ 我们/ 将/ 变量/ (/ 包括/ 其/ 所指/ 对象/ 的/ 某个/ 属性/ )/ 在/ 程序/ 中/ 的/ 每/ 一次/ 被/ 赋值/ 看作/ 是/ 对/ 其值/ (/ 即/ 状态/ )/ 的/ 一次/ 改变/ ,/ 故/ 将/ 其/ 称为/ 该/ 变量/ 的/ 一个/ 状态/ ./ 变量/ 状态/ 包括/ 以下/ 几/ 部分/ 内容/ :/ 变量/ 标识/ 、/ 该/ 状态/ 的/ 标识/ (/ 状态/ 的/ 标识/ 直接/ 对应/ 于/ 变量/ 被/ 赋值/ 的/ 语句/ 所在/ 的/ 程序/ 位置/ ,/ 即/ 行号/ )/ 、/ 在/ 该/ 状态/ 下/ 变量/ 的/ 值/ 、/ 该/ 状态/ (/ 即/ 对应/ 的/ 赋值/ 语句/ )/ 的/ 编号/ ,/ 变量/ 在/ 该/ 状态/ 位置/ 所/ 依赖/ 的/ 变量/ 及其/ 状态/ 集合/ 等/ 信息/ ./ 从/ 另/ 一个/ 角度看/ ,/ 一个/ 变量/ 的/ 状态/ 变化/ ,/ 等效于/ 产生/ 或/ 创建/ 了/ 一个/ 新/ 的/ 变量/ 的/ 状态/ ,/ 并/ 在/ 程序/ 的/ 后续/ 执行/ 中/ 完全/ 取代/ 了/ 该/ 变量/ 的/ 前身/ (/ 即前/ 一个/ 状态/ )/ ./ 从/ 这个/ 意义/ 上/ 讲/ ,/ 变量/ 状态/ 的/ 变化/ 过程/ 可以/ 称作/ 变量/ 状态/ 的/ 演化/ 序列/ ,/ 因此/ 变量/ 在/ 程序/ 中/ 的/ 状态/ 演化/ 序列/ 可以/ 看作/ 是/ 一组/ 新/ 变量/ 的/ 产生/ 序列/ ./ 对于/ 给定/ 的/ 程序/ P/ ,/ 在/ 一组/ 输入/ I/ =/ {/ in1/ ,/ in2/ ,/ …/ ,/ inn/ }/ 的/ 条件/ 下/ ,/ 第/ x/ 个/ 变量/ 在/ 第/ i/ 次/ 被/ 重新/ 赋值/ 所/ 产生/ 的/ 变量/ x/ 的/ 第/ i/ 个/ 状态/ ,/ 记作/ vari/ 其中/ :/ v/ 为/ 变量/ x/ 的/ 唯一/ 标识/ ;/ value/ 为/ 变量/ varx/ 的/ 当前/ 值/ ;/ i/ 为/ 变量/ varx/ 被/ 赋值/ 的/ 次数/ ;/ s/ 为/ 变量/ x/ 在/ 第/ i/ 次/ 赋值/ 时/ 所在/ 行号/ ;/ refs/ 指/ 的/ 是/ x/ 在/ 状态/ i/ 下/ (/ 即/ vari/ 对于/ 每/ 一个/ 变量/ x/ ,/ 其/ 所有/ 的/ 状态/ 的/ 集合/ 可以/ 表示/ 如下/ :/ (/ 4/ )/ 变量/ 的/ 状态/ 轨迹/ 变量/ 的/ 状态/ 轨迹/ ,/ 指/ 的/ 是/ 在/ 程序/ 的/ 运行/ 过程/ 中/ ,/ 变量/ 状态/ 的/ 变化/ 序列/ :/ Trace/ (/ varx/ )/ =/ {/ (/ vari/ (/ 5/ )/ 变量/ 之间/ 的/ 依赖/ 关系/ 变量/ 之间/ 的/ 依赖/ 关系/ :/ 存在/ 两个/ 变量/ x/ 与/ y/ ,/ 若/ 变量/ y/ 的/ 变化/ 会/ 对/ 变量/ x/ 产生/ 影响/ ,/ 则/ 称/ 变量/ x/ 依赖/ y/ ./ 依赖/ 关系/ 主要/ 是/ 指/ 针对/ 变量/ x/ 赋值/ 语句/ ,/ x/ 出现/ 在/ 赋值/ 语句/ 的/ 左侧/ ,/ 而/ y/ 出现/ 在/ 赋值/ 语句/ 的/ 右侧/ [/ 14/ ]/ ./ 这里/ ,/ 赋值/ 语句/ 也/ 包括/ 以/ 其他/ 方式/ 影响/ x/ 值/ 的/ 语句/ ,/ 比如/ 对/ 变量/ x/ 的/ 值会/ 产生/ 影响/ 的/ 函数调用/ (/ 如/ x/ 为/ 其/ “/ 输出/ 型/ ”/ 参数/ ,/ 或/ x/ 是/ 会/ 受到/ 函数/ 影响/ 的/ 全局变量/ ,/ 即/ 其值/ 可能/ 被/ 所/ 调用/ 的/ 函数/ 修改/ )/ 等/ ./ 变量/ 的/ 依赖/ 关系/ 将/ 若干/ 变量/ 在/ 值/ 的/ 层面/ 上/ 关联/ 起来/ ./ 共有/ 两种/ 变量/ 依赖/ 关系/ :/ 第/ 1/ 种/ 是/ 两个/ 不同/ 变量/ 之间/ 的/ 依赖/ 关系/ ,/ 如/ c/ =/ a/ +/ b/ ;/ 第/ 2/ 种/ 是/ 变量/ 自身/ 的/ 依赖/ 关系/ ,/ 如/ a/ =/ a/ +/ 1/ ./ 变量/ 状态/ 之间/ 的/ 依赖/ 关系/ :/ 两个/ 不同/ 变量/ 状态/ (/ 以/ varx/ 和/ vary/ 为例/ )/ 之间/ 的/ 依赖/ 关系/ 可以/ 表示/ 如下/ :/ Vdr/ (/ varx/ ,/ vary/ )/ =/ {/ (/ varix/ 为/ 依赖/ 关系/ 的/ 前驱/ 节点/ ,/ varj/ 其中/ :/ i/ 和/ j/ 分别/ 是/ 变量/ varx/ 和/ vary/ 的/ 变化/ 次数/ ,/ 其中/ vari/ 继/ 节点/ ./ Var/ (/ vari/ 的/ 子域/ ./ Page5/ 在/ 上式/ 中/ ,/ 当/ y/ 即/ x/ 本身/ 时/ ,/ 表示/ 变量/ x/ 自身/ 的/ 值/ 之间/ 的/ 依赖/ 关系/ ,/ 表示/ 如下/ :/ Vdr/ (/ varx/ )/ =/ {/ vari/ (/ 6/ )/ 变量/ 行为/ 模型/ 对于/ 给定/ 的/ 程序/ P/ ,/ 对于/ 输入/ 空间/ I/ ,/ 其/ 执行/ 中/ 涉及/ 到/ 的/ 变量/ 集合/ 为/ Var/ (/ PI/ )/ ,/ 其/ 变量/ 的/ 数据流/ 轨迹/ 可以/ 表示/ 为/ Trace/ (/ Var/ (/ PI/ )/ )/ ,/ 各/ 变量/ 状态/ 之间/ 的/ 依赖/ 关系/ 可以/ 表示/ 为/ Vdr/ (/ Var/ (/ PI/ )/ )/ ,/ 其/ 变量/ 行为/ 模型/ CM/ (/ PI/ )/ 可以/ 表示/ 如下/ :/ CM/ (/ PI/ )/ =/ (/ Trace/ (/ Var/ (/ PI/ )/ )/ ,/ Vdr/ (/ Var/ (/ PI/ )/ )/ )/ =/ 2.4/ 变量/ 行为/ 模型/ 与/ 定义/ -/ 使用/ 对/ 的/ 区别/ 变量/ 行为/ 模型/ 的/ 一些/ 相关/ 概念/ 来自/ 于/ 数据流/ 测试/ ,/ 特别/ 是/ 利用/ 了/ 定义/ -/ 使用/ 对/ 中/ 的/ 变量/ 定义/ 和/ 变量/ 使用/ 的/ 概念/ ,/ 但是/ 两者之间/ 也/ 存在/ 明显/ 区别/ ./ 变量/ 行为/ 模型/ 针对/ 特定/ 的/ 输入/ ,/ 来/ 找到/ 运行/ 中/ 的/ 变量/ 状态/ 的/ 变化/ 轨迹/ ./ 静态数据/ 流/ 测试/ 考虑/ 到/ 的/ 是/ 所有/ 的/ 情况/ ,/ 而且/ 有时候/ ,/ 有些/ 根据/ 静态数据/ 流/ 测试/ 找到/ 的/ 潜在/ 的/ 故障/ 可能/ 在/ 实际/ 的/ 运行/ 中/ 根本/ 就/ 不会/ 触发/ ./ 虽然/ 动态/ 数据流/ 测试/ 更多地/ 考虑/ 变量/ 在/ 执行/ 时所/ 经过/ 的/ 程序执行/ 路径/ ,/ 相比/ 静态数据/ 流/ 测试/ 更/ 有/ 优势/ ,/ 但/ 变量/ 行为/ 模型/ 则/ 不仅/ 会/ 考虑/ 变量/ 自身/ 在/ 程序执行/ 过程/ 中/ 的/ 定义/ 状态/ 变化/ 情况/ ,/ 还会/ 考虑/ 变量/ 状态/ 之间/ 的/ 依赖/ 关系/ ./ 此外/ ,/ 数据流/ 测试/ 中将/ 变量/ 单独/ 来/ 看待/ ,/ 没有/ 关注/ 变量/ 间/ 的/ 依赖/ 关系/ ./ 需要/ 注意/ 的/ 是/ ,/ 变量/ 行为/ 模型/ 与/ 本文/ 作者/ 提出/ 的/ 数据链/ 模型/ 大致/ 相似/ [/ 17/ ]/ ,/ 两者/ 都/ 考虑/ 变量/ 的/ 变化/ 与/ 依赖/ 关系/ ./ 主要/ 区别/ 在于/ 数据链/ 模型/ 中有/ 许多/ 专门/ 针对/ 故障/ 定位/ 的/ 方法/ ,/ 而/ 变量/ 行为/ 模型/ 中/ 只/ 考虑/ 变量/ 因为/ 变化/ 和/ 依赖/ 关系/ 对/ 故障/ 修复/ 时/ 产生/ 的/ 影响/ ./ 3/ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 回归/ 测试用例/ 生成/ 3.1/ 方法/ 概述/ 此前/ 分析/ 了/ 程序执行/ 过程/ 中/ 变量/ 的/ 行为/ ,/ 本章/ 以/ 这些/ 分析/ 为/ 基础/ ,/ 同时/ 利用/ 变量/ 影响/ 分析/ 信息/ ,/ 提出/ 了/ 一种/ 基于/ 变量/ 影响/ 分析/ 与/ 数据/ 变异/ 的/ 回归/ 测试用例/ 生成/ 方法/ ./ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 测试用例/ 生成/ 方法/ 的/ 总体/ 框架/ 如图/ 1/ 所示/ ./ 从图/ 1/ 可以/ 看出/ ,/ 首先/ 需要/ 收集/ 故障/ 修复/ 前后/ 测试用例/ 的/ 运行/ 情况/ ,/ 根据/ 测试用例/ 的/ 运行/ 情况/ 再图/ 1/ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 回归/ 测试用例/ 方法/ 框架/ 结合/ 变量/ 行为/ 模型/ ,/ 对/ 程序/ 修复/ 故障/ 前后/ 的/ 变量/ 进行/ 影响/ 分析/ ./ 影响/ 分析/ 的/ 结果/ 可以/ 从/ 初始/ 的/ 测试用例/ 集合/ 中/ 选择/ 一个/ 或者/ 多个/ 测试用例/ 作为/ 种子/ 测试用例/ ,/ 也/ 可以/ 在/ 数据/ 变异/ 时/ 选择/ 合适/ 的/ 测试用例/ ./ 选择/ 出来/ 的/ 种子/ 测试用例/ 将/ 作为/ 数据/ 变异/ 的/ 基础/ ./ 利用/ 测试用例/ 语法/ 解析器/ 来/ 解析/ 这些/ 测试用例/ ,/ 从而/ 得到/ 种子/ 测试用例/ 中/ 的/ 测试/ 行为/ 、/ 测试数据/ 和/ 测试/ 配置/ 等/ 信息/ ./ 测试/ 行为/ 用于/ 描述/ 在/ 测试用例/ 中/ 的/ 各种/ 行为/ ./ 测试/ 行为/ 包括/ 消息/ 激励/ 、/ 消息/ 响应/ 及/ 测试/ 结果/ 类别/ 等/ ,/ 其中/ 消息/ 激励/ 和/ 消息/ 响应/ 中/ 定义/ 了/ 需要/ 的/ 输入/ 数据/ 和/ 预期/ 响应/ 数据类型/ 和/ 名称/ 信息/ ./ 测试数据/ 是/ 在/ 测试/ 过程/ 中/ 需要/ 的/ 相关/ 数据/ ,/ 这些/ 数据/ 可/ 作为/ 输入/ 施加/ 给/ 被/ 测系统/ ,/ 并/ 可/ 作为/ 被/ 测系统/ 输出/ 进行/ 判定/ 的/ 依据/ ./ 测试/ 配置/ 是/ 对/ 测试/ 系统/ 静态/ 组成/ 结构/ 的/ 描述/ ./ Page6/ 利用/ 种子/ 测试用例/ 的/ 测试数据/ ,/ 可以/ 获得/ 这些/ 测试数据/ 的/ 类型信息/ ,/ 再/ 结合/ 测试数据/ 生成/ 策略/ 和/ 变异/ 算子/ 集合/ ,/ 生成/ 新/ 的/ 测试数据/ ,/ 然后/ 再/ 结合/ 之前/ 得到/ 的/ 测试/ 行为/ ,/ 来/ 组合成/ 新/ 的/ 测试用例/ ./ 这样/ 生成/ 的/ 测试用例/ 集有/ 可能/ 存在/ 冗余/ ,/ 因此/ 需要/ 进行/ 缩减/ ,/ 缩减/ 的/ 依据/ 来自/ 于/ 与/ 修复/ 的/ 故障/ 相关/ 的/ 变量/ 影响/ 分析/ 信息/ ./ 利用/ 这些/ 变量/ 影响/ 分析/ 信息/ 对/ 产生/ 的/ 测试用例/ 进行/ 选择/ ,/ 可以/ 得到/ 最终/ 补充/ 的/ 测试用例/ 集合/ ./ 这种/ 方法/ 的/ 主要/ 技术/ 特点/ 有/ 以下几点/ :/ 首先/ ,/ 这种/ 方法/ 生成/ 的/ 测试用例/ 主要/ 用/ 在/ 故障/ 修复/ 之后/ 的/ 回归/ 测试/ 中/ ,/ 用于/ 对/ 修复/ 后/ 的/ 程序/ 进行/ 检验/ ./ 其次/ ,/ 这种/ 方法/ 利用/ 了/ 此前/ 修复/ 的/ 故障/ 相关/ 的/ 变量/ 影响/ 分析/ 信息/ ,/ 这/ 使得/ 测试用例/ 生成/ 更/ 具有/ 针对性/ ,/ 同时/ 也/ 能够/ 将/ 测试/ 集中/ 在/ 那些/ 可能/ 会/ 产生/ 故障/ 的/ 地方/ ,/ 这样/ 表/ 1/ 与/ 故障/ 相关/ 的/ 变量/ 影响/ 分析/ 信息/ 收集/ 算法/ 的/ 输入/ 与/ 输出/ 输入/ 参数/ 序号/ 123/ 输出/ 参数/ 序号/ 1/ 从表/ 1/ 可以/ 看出/ ,/ 该/ 算法/ 的/ 输入/ 为/ CM/ (/ V/ )/ 、/ varix/ ./ CM/ (/ V/ )/ 包括/ 修复/ 故障/ 前后/ 程序/ 所/ 对应/ 的/ 变/ 和/ vari/ 量/ 影响/ 分析/ ,/ 输出/ 则/ 需要/ 覆盖/ 到/ 语句/ 集合/ S/ ./ 整个/ 与/ 故障/ 相关/ 的/ 变量/ 影响/ 分析/ 信息/ 收集/ 算法/ 如/ 算法/ 1/ 所示/ ./ 该/ 算法/ 是/ 以/ 变量/ 影响/ 分析/ 定义/ 为/ 基础/ 实现/ 的/ ,/ 其中/ 还/ 用到/ 了/ 变量/ 状态/ 影响/ 链/ 和/ 变量/ 状态/ 转移/ 轨迹/ ./ 变量/ 状态/ 影响/ 链指/ 的/ 是/ 受到/ 变量/ 状态/ 影响/ 的/ 语句/ ./ 该/ 算法/ 主要/ 由/ 两个/ 主要/ 的/ 步骤/ 组成/ ,/ 分别/ 是/ 获取/ 故障/ 修复/ 前受/ 影响/ 的/ 语句/ 集/ So/ 和/ 获取/ 故障/ 修复/ 后受/ 影响/ 的/ 语句/ 集/ Sp/ ./ 获取/ 故障/ 修复/ 前受/ 影响/ 的/ 语句/ 集/ So/ 位于/ 第/ 5/ 行至/ 第/ 14/ 行/ ,/ vari/ 态/ ,/ 通过/ 寻找/ 以/ vari/ 迹/ ,/ 可以/ 找到/ 这些/ 转移/ 轨迹/ 对应/ 的/ 语句/ 集/ ./ 通过/ 寻找/ x/ 为/ 起点/ 的/ 影响/ 链/ ,/ 可以/ 找到/ 影响/ 链/ 对应/ 的/ 语以/ vari/ 句集/ ./ 对/ 这/ 两/ 部分/ 语句/ 集/ 进行/ 去/ 重/ 处理/ ,/ 将会/ 得到/ 故障/ 修复/ 前受/ 影响/ 的/ 语句/ 集/ So/ ./ 算法/ 1/ ./ 与/ 故障/ 相关/ 的/ 变量/ 影响/ 分析/ 信息/ 收集/ 算法/ ./ 输入/ :/ CM/ (/ V/ )/ ,/ vari/ 输出/ :/ S/ // // 需要/ 覆盖/ 的/ 语句/ 集/ 过程/ :/ 能够/ 更/ 有效/ 并且/ 更/ 切合实际/ 地/ 发现/ 更/ 多/ 的/ 故障/ ./ 第三/ ,/ 这种/ 方法/ 与/ 此前/ 的/ 方法/ 不/ 一样/ 的/ 是/ ,/ 该/ 方法/ 采用/ 了/ 数据/ 变异/ 的/ 技术/ ,/ 通过/ 数据/ 变异/ ,/ 借助/ 原有/ 的/ 测试用例/ 来/ 生成/ 新/ 的/ 测试用例/ ./ 3.2/ 变量/ 影响/ 分析程序/ 中/ 存在/ 的/ 故障/ 被/ 修复/ 后/ ,/ 进行/ 回归/ 测试/ 时/ 需要/ 重点/ 测试/ 该/ 故障/ 修复/ 之后/ 是否/ 引入/ 了/ 新/ 的/ 故障/ ./ 而/ 这时候/ 与/ 该/ 故障/ 相关/ 的/ 信息/ 相当/ 关键/ ,/ 这些/ 信息/ 能够/ 帮助/ 测试人员/ 有/ 目的地/ 开展/ 回归/ 测试/ ./ 在/ 利用/ 变量/ 影响/ 分析/ 进行/ 测试用例/ 生成/ 的/ 过程/ 中/ ,/ 可以/ 收集/ 故障/ 相关/ 的/ 变量/ 影响/ 分析/ 信息/ ,/ 来/ 作为/ 选择/ 种子/ 测试用例/ 的/ 依据/ ./ 本文/ 提出/ 了/ 与/ 故障/ 相关/ 的/ 变量/ 影响/ 分析/ 信息/ 收集/ 算法/ ,/ 该/ 算法/ 的/ 输入/ 与/ 输出/ 如表/ 1/ 所示/ ./ CM/ (/ V/ )/ 指/ 的/ 是/ 修复/ 故障/ 前后/ 程序/ 对应/ 的/ 变量/ 影响/ 分析/ ,/ CM/ (/ V/ )/ 包括/ CMo/ 、/ CMm/ 、/ vari/ 复/ 故障/ 前/ 的/ 变量/ 影响/ 分析/ 和/ 修复/ 故障/ 后/ 的/ 变量/ 影响/ 分析/ ./ varivarix/ 指/ 修复/ 故障/ 前/ 变量/ 状态/ x/ 指/ 修复/ 故障/ 后/ 变量/ 定义/ 状态/ S/ 指/ 的/ 是/ 需要/ 覆盖/ 到/ 的/ 语句/ 集合/ ,/ S/ =/ {/ s1/ ,/ …/ ,/ sl/ }/ ,/ 其中/ si/ 指/ 程序/ 中/ 需要/ 覆盖/ 的/ 语句/ ./ 1/ ./ CMo/ =/ CM/ (/ V/ )/ ./ getOri/ (/ )/ ;/ // // 得到/ 修复/ 故障/ 前/ 的/ 变量/ 行为/ 模型/ 2/ ./ CMp/ =/ CM/ (/ V/ )/ ./ getMod/ (/ )/ ;/ // // 得到/ 修复/ 故障/ 后/ 的/ 变量/ 行为/ 模型/ 3/ ./ So/ =/ null/ ;/ // // 修复/ 前受/ 影响/ 的/ 语句/ 集/ 4/ ./ Sp/ =/ null/ ;/ // // 修复/ 后受/ 影响/ 的/ 语句/ 集/ 5/ ./ foreachCMo/ ./ trace/ (/ v/ )/ !/ =/ null/ &&/ 6/ ./ trace/ _/ item/ =/ CMo/ ./ trace/ (/ v/ )/ ./ next/ ;/ 7/ ./ iftrace/ _/ item/ ./ getN/ (/ )/ >/ ithen8/ ./ So/ ./ add/ (/ trace/ _/ item/ ./ getL/ (/ )/ )/ ;/ 9/ ./ endif10/ ./ endfor11/ ./ foreachCMo/ ./ affectvariCMo/ ./ affectvari12/ ./ affect/ _/ item/ =/ CMo/ ./ affectvari13/ ./ So/ ./ add/ (/ affect/ _/ item/ ./ getL/ (/ )/ )/ ;/ 14/ ./ endfor15/ ./ foreachCMp/ ./ trace/ (/ v/ )/ !/ =/ null/ &&/ CMp/ ./ trace/ (/ v/ )/ ./ hasNext/ (/ )/ // // 遍历/ 变量/ v/ 的/ 转移/ 轨迹/ Page716/ ./ trace/ _/ item/ =/ CMp/ ./ trace/ (/ v/ )/ ./ next/ ;/ 17/ ./ iftrace/ _/ item/ ./ getN/ (/ )/ >/ ithen/ // // 判断/ 轨迹/ 中/ 变量/ 状态/ 变化/ 数/ 是否/ 比/ i/ 大/ 18/ ./ Sp/ ./ add/ (/ trace/ _/ item/ ./ getL/ (/ )/ )/ ;/ 19/ ./ endif20/ ./ endfor21/ ./ foreachCMp/ ./ affectvari22/ ./ affect/ _/ item/ =/ CMp/ ./ affectvari23/ ./ Sp/ ./ add/ (/ affect/ _/ item/ ./ getL/ (/ )/ )/ ;/ 24/ ./ endfor25/ ./ S/ =/ So/ -/ Sp/ // // S/ 中/ 的/ 语句/ 在/ So/ 中/ ,/ 且/ 都/ 不/ 在/ Sp/ 中/ 26/ ./ returnS/ ;/ 其中/ 第/ 15/ 行/ 和/ 第/ 24/ 行是/ 获取/ 变量/ 影响/ 分析模型/ 的/ 故障/ 修复/ 后受/ 影响/ 的/ 语句/ 集/ Sp/ ./ vari/ 复/ 之后/ 对应/ 的/ 变量/ 状态/ ./ 通过/ 寻找/ 以/ vari/ 定义/ 操作/ 状态/ 转移/ 轨迹/ ,/ 可以/ 找到/ 这些/ 转移/ 轨迹/ 对应/ 的/ 语句/ 集/ ./ 通过/ 寻找/ 以/ vari/ 以/ 找到/ 影响/ 链/ 对应/ 的/ 语句/ 集/ ./ 对/ 这/ 两/ 部分/ 语句/ 集/ 进行/ 去/ 重/ 处理/ ,/ 将会/ 得到/ Sp/ ./ 最后/ 求/ So/ 与/ Sp/ 的/ 差集/ So/ -/ Sp/ ,/ 即/ 可以/ 得到/ 与/ 故障/ 相关/ 的/ 语句/ 集/ S/ ./ 3.3/ 选择/ 种子/ 测试用例/ 在/ 对/ 程序运行/ 时/ 的/ 变量/ 进行/ 影响/ 分析/ 后/ ,/ 可以/ 利用/ 这些/ 信息/ 及/ 故障/ 修复/ 后/ 测试用例/ 运行/ 时/ 对应/ 的/ 语句/ 集合/ ,/ 来/ 选择/ 种子/ 测试用例/ ./ 种子/ 测试用例/ 选择/ 算法/ 如/ 算法/ 2/ 所示/ ,/ 该/ 算法/ 首先/ 需要/ 遍历/ 测试用例/ 集/ ,/ 然后/ 判断/ 测试用例/ 集中/ 的/ 每/ 一个/ 测试用例/ 是否/ 与/ 需要/ 覆盖/ 的/ 语句/ 集合/ 有/ 交集/ ,/ 如果/ 存在/ 交集/ ,/ 则/ 将/ 该/ 测试用例/ 添加/ 至/ 种子/ 测试用例/ 中/ ./ 算法/ 2/ ./ 种子/ 测试用例/ 选择/ 算法/ ./ 输入/ :/ T/ // // 测试用例/ 集/ 输出/ :/ T/ // // 选择/ 出/ 的/ 种子/ 测试用例/ 过程/ :/ 1/ ./ foreachi/ =/ 0/ ;/ T/ (/ i/ )/ ∈/ T/ ;/ i/ ++/ // // 遍历/ 测试用例/ 集/ 2/ ./ ifinfo/ ./ getStmt/ (/ T/ (/ i/ )/ )/ ∩/ S/ !/ =/ nullthen/ // // 判断/ 测试用例/ 运行/ 时/ 经过/ 的/ 语句/ 与/ S/ 有/ 交集/ // // 将/ 测试用例/ 加入/ 到/ 种子/ 测试用例/ 集中/ 3/ ./ endif4/ ./ endfor5/ ./ returnT/ ;/ 3.4/ 数据/ 变异/ 数据/ 变异/ 在/ 本文/ 中是/ 用来/ 结合/ 种子/ 测试用例/ 生成/ 新/ 的/ 测试数据/ 的/ 一种/ 方法/ ./ 数据/ 变异/ 是/ 变异/ 测试方法/ 的/ 一种/ ,/ 和/ 一般/ 变异/ 测试/ 需要/ 修改/ 程序/ 的/ 源代码/ 不/ 一样/ 的/ 是/ ,/ 数据/ 变异/ 不/ 需要/ 修改/ 程序/ 的/ 源代码/ ,/ 它/ 主要/ 利用/ 的/ 是/ 测试用例/ 中/ 的/ 测试数据/ 信息/ [/ 12/ -/ 13/ ]/ ./ 数据/ 变异/ 有/ 以下/ 一些/ 特点/ :/ (/ 1/ )/ 数据/ 变异/ 是/ 一种/ 类似/ 黑盒/ 测试/ 的/ 方法/ ,/ 不/ 需要/ 知道/ 源代码/ 的/ 信息/ ,/ 也/ 不/ 需要/ 知道/ 被/ 测系统/ 内部/ 的/ 逻辑/ 结构/ 和/ 实现/ ./ (/ 2/ )/ 数据/ 变异/ 是/ 一种/ 动态/ 测试方法/ ,/ 可以/ 根据/ 数据类型/ 的/ 不同/ ,/ 依据/ 变异/ 的/ 规则/ 来/ 动态/ 生成/ 测试数据/ ./ (/ 3/ )/ 数据/ 变异/ 生成/ 的/ 测试用例/ 执行/ 也/ 可以/ 自动化/ ./ 数据/ 变异/ 最/ 关键/ 的/ 部分/ 是/ 变异/ 算子/ ,/ 数据/ 变异/ 正是/ 依靠/ 变异/ 算子/ ,/ 才/ 能够/ 实现/ 对/ 种子/ 测试用例/ 里面/ 的/ 测试数据/ 进行/ 变异/ ,/ 从而/ 产生/ 出新/ 的/ 测试数据/ ./ 定义/ 1/ ./ 变异/ 算子/ (/ MutationOperator/ ,/ MO/ )/ ./ 数据/ 变异/ 的/ 变异/ 算子/ 指/ 的/ 是/ 在/ 符合/ 语法/ 规则/ 的/ 前提/ 之下/ ,/ 对/ 种子/ 测试用例/ 的/ 测试数据/ 进行/ 修改/ 的/ 一些/ 规则/ ./ 变异/ 算子/ 可以/ 定义/ 为/ 一个/ 函数/ MO/ ,/ 该/ 函数/ 能够/ 对/ 测试用例/ 的/ 输入/ 数据/ 进行/ 变异/ ./ 通过/ 变异/ 算子/ 产生/ 的/ 输出/ 为/ MOUT/ =/ MO/ (/ TD/ ,/ FLD/ )/ ./ 在/ 这里/ TD/ 指/ 的/ 是/ 某/ 测试用例/ 的/ 测试数据/ ,/ FLD/ 指/ 的/ 是/ 测试数据/ 中/ 的/ 一个/ 字段/ ./ 在/ 本文/ 中/ 针对/ 的/ 主要/ 是/ Java/ 程序/ ,/ 测试用例/ 一般/ 是/ Junit/ 类型/ 的/ ./ 因此/ 研究/ 了/ 针对/ Java/ 程序/ 的/ 变异/ 算子/ ,/ 并且/ 具体/ 提出/ 了/ 52/ 种/ 变异/ 算子/ ./ 在/ 附录/ 1/ 中/ 列出/ 了/ 其中/ 部分/ 变异/ 算子/ ,/ 有些/ 变异/ 算子/ 大同小异/ ,/ 比如/ Float/ 、/ Double/ 和/ Integer/ 的/ 变异/ 算子/ 有些/ 类似/ ./ 定义/ 2/ ./ 变异/ 规则/ (/ MutationRule/ ,/ MR/ )/ ./ 变异/ 规则/ 给出/ 了/ 要/ 变异/ 的/ 数据字/ 段/ 、/ 所/ 选择/ 的/ 变异/ 算子/ ,/ 以及/ 为/ 选择/ 的/ 变异/ 算子/ 分配/ 变异/ 的/ 参数/ 等/ 信息/ ./ 变异/ 规则/ 可以/ 定义/ 为/ 一个/ 函数/ MR/ ,/ 该/ 函数/ 能够/ 对/ 需要/ 变异/ 的/ 数据字/ 段/ 、/ 变异/ 算子/ 进行/ 选择/ ./ 变异/ 规则/ 的/ 形式化/ 定义/ 为/ MR/ =/ 〈/ TD/ ,/ FLD/ ,/ MO/ ,/ MOR/ 〉/ ./ 在/ 这里/ TD/ 指/ 的/ 是/ 测试数据/ ,/ FLD/ 指/ 的/ 是/ 测试数据/ 中/ 的/ 一个/ 字/ 段/ ,/ MO/ 指/ 的/ 是/ 变异/ 算子/ ,/ MOR/ 则/ 指/ 的/ 是/ 变异/ 参数/ ,/ 变异/ 参数/ 代表/ 了/ 变异/ 算子/ 中/ 动态/ 可变/ 的/ 部分/ ./ 3.5/ 测试数据/ 生成/ 传统/ 的/ 变异/ 测试/ 的/ 测试用例/ 生成/ 方法/ 重点/ 关注/ 的/ 是/ 得到/ 高质量/ 的/ 测试用例/ ,/ 同时/ 还/ 能够/ 有效/ 地/ 检测/ 出/ 所有/ 非/ 等价/ 变异/ 体/ ./ 而/ 数据/ 变异/ 测试/ 也/ 能够/ 指/ Page8/ 导/ 测试用例/ 的/ 生成/ ./ 不过/ 和/ 传统/ 的/ 变异/ 测试/ 的/ 测试用例/ 生成/ 方法/ 不/ 一样/ 的/ 是/ ,/ 数据/ 变异/ 测试用例/ 生成/ 无需/ 关注/ 程序/ 内部/ 的/ 细节/ ./ 下面/ 以/ 典型/ 三角形/ 的/ 例子/ 来/ 说明/ 基于/ 变量/ 影响/ 分析/ 的/ 数据/ 变异/ 的/ 测试数据/ 生成/ ./ 假设/ 三角形/ 的/ 例子/ 中/ 已经/ 存在/ 了/ 如下/ 的/ 测试用例/ :/ T1/ :/ 输入/ x/ =/ 8/ ,/ y/ =/ 8/ ,/ z/ =/ 8/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ,/ 期待/ 的/ 输出/ 是/ 全/ 等/ 三角形/ ;/ T2/ :/ 输入/ x/ =/ 8/ ,/ y/ =/ 8/ ,/ z/ =/ 10/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ,/ 期待/ 的/ 输出/ 是/ 等腰三角/ 形/ ;/ T3/ :/ 输入/ x/ =/ 4/ ,/ y/ =/ 5/ ,/ z/ =/ 10/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ,/ 期待/ 的/ 输出/ 是非/ 三角形/ ./ 在/ 基于/ 变量/ 影响/ 分析/ 的/ 数据/ 变异/ 的/ 测试用例/ 生成/ 方法/ 中/ ,/ 首先/ 会/ 进行/ 变量/ 影响/ 分析/ ,/ 得到/ 修复/ 故障/ 前后/ 受到/ 影响/ 的/ 语句/ 集合/ ,/ 然后/ 对照/ 修复/ 故障/ 后/ 测试用例/ 的/ 执行/ 情况/ ,/ 选择/ 那些/ 能够/ 执行/ 到/ 受/ 影响/ 语句/ 集合/ 的/ 测试用例/ 作为/ 种子/ 测试用例/ ./ 假如/ 修复/ 故障/ 之后/ ,/ T1/ 执行/ 时/ 的/ 语句/ 集合/ 中/ 包含/ 了/ 受/ 影响/ 的/ 语句/ ,/ 这时/ 可/ 将/ 测试用例/ T1/ 作为/ 种子/ 测试用例/ ./ 然后/ 分析/ 测试用例/ T1/ 的/ 输入/ 数据/ 的/ 类型/ ,/ 得到/ 的/ 数据类型/ 是/ 整型/ ./ 因此/ 可以/ 用到/ Integer/ 的/ 变异/ 算子/ 来/ 对/ 该/ 参数/ 进行/ 变异/ ./ 在/ 寻找/ 变异/ 规则/ 时/ ,/ 需要/ 根据/ 测试用例/ 执行/ 的/ 上下文/ 环境/ ,/ 观察/ 测试数据/ 中/ 整型/ 类型/ 的/ 数据/ 是否/ 存在/ 长度/ 限制/ 或者/ 取值/ 的/ 限制/ ,/ 如果/ 存在/ ,/ 则/ 从/ 变异/ 算子/ 集合/ 中/ 挑选/ 相关/ 的/ 变异/ 算子/ ./ 此外/ 变异/ 规则/ 还有/ 其他/ 的/ 几种/ 模式/ ,/ 分别/ 是/ 随机/ 选择/ 、/ 顺序/ 轮换/ 、/ 基于/ 权重/ 的/ 选择/ 、/ 反馈/ 引导/ 的/ 选择/ ./ 随机/ 选择/ 指/ 的/ 是/ 随机/ 地/ 选择/ 变异/ 规则/ ./ 顺序/ 轮换/ 是/ 按照/ 变异/ 算子/ 集合/ 中/ 的/ 顺序/ ,/ 来/ 随机/ 地/ 选择/ 变异/ 规则/ ./ 基于/ 权重/ 的/ 选择/ 是/ 指为/ 变异/ 算子/ 赋予/ 一定/ 的/ 权重/ ,/ 然后/ 根据/ 权重/ 的/ 高低/ 来/ 选择/ 变异/ 算子/ ./ 反馈/ 引导/ 的/ 选择/ 则/ 是/ 基于/ 之前/ 的/ 测试/ ,/ 来/ 为/ 新/ 的/ 变异/ 算子/ 的/ 选择/ 提供/ 依据/ ./ 这/ 几种/ 模式/ 的/ 选择/ 可以/ 根据/ 测试人员/ 的/ 偏好/ ,/ 以及/ 测试/ 任务/ 的/ 要求/ 等/ 特定/ 的/ 场景/ 确定/ ./ 在/ 选择/ 好/ 了/ 变异/ 算子/ 之后/ ,/ 接下来/ 需要/ 利用/ 变异/ 算子/ 对应/ 的/ 变异/ 策略/ ,/ 来/ 确定/ 每个/ 变异/ 参数/ 的/ 取值/ ./ 比如/ 在/ 用/ 测试用例/ T1/ 作为/ 种子/ 测试用例/ 之后/ ,/ 选择/ 出/ 变异/ 算子/ 分别/ 为/ MO/ -/ IntAdd/ 、/ MO/ -/ IntSub/ 、/ MO/ -/ IntZero/ 、/ MO/ -/ IntNegVal/ ./ 假设/ MO/ -/ IntAdd/ 算子/ 中/ 增加/ 的/ 值/ 为/ 5/ 、/ MO/ -/ IntSub/ 算子/ 中/ 减少/ 的/ 值/ 为/ 5/ ,/ MO/ -/ IntNegVa/ 算子/ 中/ 给予/ 的/ 负/ 整型/ 的/ 值/ 为/ -/ 1/ ./ 那么/ 通过/ 数据/ 变异/ 可以/ 得到/ 如下/ 测试用例/ (/ 以/ MO/ -/ IntAdd/ 算子/ 为例/ )/ ./ 需要/ 注意/ 的/ 是/ ,/ 在/ 进行/ 变异/ 的/ 时候/ 没有/ 考虑/ 参数/ 组合/ 的/ 情况/ ./ T1/ (/ 1/ )/ :/ 输入/ x/ =/ 13/ ,/ y/ =/ 8/ ,/ z/ =/ 8/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ;/ T1/ (/ 2/ )/ :/ 输入/ x/ =/ 8/ ,/ y/ =/ 13/ ,/ z/ =/ 8/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ;/ T1/ (/ 3/ )/ :/ 输入/ x/ =/ 8/ ,/ y/ =/ 8/ ,/ z/ =/ 13/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ;/ T2/ (/ 1/ )/ :/ 输入/ x/ =/ 13/ ,/ y/ =/ 8/ ,/ z/ =/ 10/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ;/ T2/ (/ 2/ )/ :/ 输入/ x/ =/ 8/ ,/ y/ =/ 13/ ,/ z/ =/ 10/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ;/ T2/ (/ 3/ )/ :/ 输入/ x/ =/ 8/ ,/ y/ =/ 8/ ,/ z/ =/ 15/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ;/ T3/ (/ 1/ )/ :/ 输入/ x/ =/ 9/ ,/ y/ =/ 5/ ,/ z/ =/ 10/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ;/ T3/ (/ 2/ )/ :/ 输入/ x/ =/ 4/ ,/ y/ =/ 10/ ,/ z/ =/ 10/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ;/ T3/ (/ 3/ )/ :/ 输入/ x/ =/ 4/ ,/ y/ =/ 5/ ,/ z/ =/ 15/ ,/ x/ ,/ y/ ,/ z/ 的/ 类型/ 都/ 是/ 整型/ ./ 从/ 以上/ 可以/ 看出/ ,/ 每/ 一个/ 变异/ 算子/ 应用/ 到/ 种子/ 测试用例/ 中/ 测试数据/ 的/ 每/ 一个/ 参数/ 时/ ,/ 都/ 会/ 产生/ 很多/ 变异/ 之后/ 的/ 测试用例/ ./ 而/ 这/ 其中/ 还/ 没有/ 考虑/ 参数/ 组合/ 的/ 情况/ ,/ 此外/ 新/ 生成/ 的/ 测试数据/ 中/ 还/ 包含/ 一些/ 非法/ 的/ 测试数据/ ,/ 因此/ 数据/ 变异/ 会/ 产生/ 大量/ 的/ 新/ 的/ 测试用例/ ,/ 所以/ 很/ 有/ 必要/ 对/ 这些/ 测试用例/ 的/ 选择/ ./ 3.6/ 测试/ 选择/ 测试用例/ 在/ 执行/ 的/ 时候/ ,/ 都/ 会/ 产生/ 一个/ 轨迹/ ,/ 这个/ 轨迹/ 的/ 粒度/ 可能/ 是/ 模块/ 级别/ 的/ ,/ 也/ 可以/ 是/ 函数调用/ 级别/ 的/ ,/ 还有/ 可能/ 是/ 语句/ 级别/ 的/ ./ 这些/ 轨迹/ 经常/ 用来/ 作为/ 统计/ 覆盖率/ 的/ 依据/ ./ 本文/ 采用/ 了/ 收集/ 语句/ 级别/ 的/ 轨迹/ 数据/ ,/ 利用/ 这些/ 数据/ 来/ 进行/ 测试用例/ 的/ 选择/ ./ 测试用例/ 选择/ 的/ 方法/ 首先/ 需要/ 记录/ 测试用例/ 在/ 执行/ 时所/ 经过/ 的/ 语句/ 轨迹/ ,/ 对于/ 修改/ 后/ 的/ 新/ 版本/ ,/ 哪些/ 语句/ 被/ 执行/ 到/ 的/ 信息/ 都/ 能够/ 准确/ 地/ 得知/ ,/ 这样/ 我们/ 就/ 可以/ 知道/ 哪些/ 测试用例/ 覆盖/ 到/ 了/ 与/ 故障/ 相关/ 的/ 数据链/ 信息/ ,/ 而/ 对于/ 那些/ 丝毫/ 没有/ 执行/ 到/ 与/ 故障/ 相关/ 的/ 变量/ 行为/ 信息/ ,/ 将/ 不会/ 被/ 选择/ 出来/ ./ 3.7/ 测试/ 判定/ 利用/ 数据/ 变异/ 产生/ 大量/ 的/ 测试数据/ 后/ ,/ 接下来/ 可/ 对/ 种子/ 测试用例/ 的/ 测试/ 行为/ 进行/ 复用/ ,/ 从而/ 能够/ Page9/ 自动化/ 地/ 应用/ 数据/ 变异/ 测试/ 产生/ 的/ 测试数据/ ./ 不过/ 对于/ 数据/ 变异/ 来说/ ,/ 测试/ 判定/ 是/ 一个/ 难点/ 问题/ ,/ 在/ 传统/ 的/ 功能测试/ 中/ ,/ 测试/ 判定/ 一般/ 是/ 通过/ 比较/ 被/ 测系统/ 的/ 实际/ 输出/ 是否/ 与/ 预期/ 一致/ ./ 如果/ 被/ 测系统/ 的/ 实际/ 输出/ 与/ 预期/ 是/ 一致/ 的/ ,/ 那么/ 则/ 认为/ 测试/ 判定/ 为/ pass/ ;/ 如果/ 被/ 测系统/ 的/ 实际/ 输出/ 与/ 预期/ 是/ 不/ 一致/ 的/ ,/ 那么/ 则/ 认为/ 测试/ 判定/ 为/ fail/ ./ 不过/ 在/ 数据/ 变异/ 测试/ 中/ ,/ 被/ 测系统/ 对于/ 变异/ 之后/ 的/ 测试数据/ 如何/ 响应/ 有时候/ 是/ 难以/ 得知/ 的/ ,/ 尤其/ 是/ 生成/ 的/ 测试数据/ 是/ 非法/ 的/ 测试数据/ 时/ ./ 因为/ 有时候/ 往往/ 不/ 知道/ 程序/ 源代码/ 或者/ 内部/ 功能/ 结构/ ./ 这里/ 有/ 多种/ 策略/ 来/ 处理/ 这样/ 的/ 问题/ ,/ 第/ 1/ 种/ 策略/ 每次/ 在/ 运行/ 一条/ 变异/ 测试/ 产生/ 的/ 测试数据/ 之后/ ,/ 再次/ 运行/ 所有/ 的/ 测试用例/ ,/ 看/ 被/ 测系统/ 是否/ 能够/ 正常/ 运行/ ./ 此外/ 一种/ 策略/ 是/ 在/ 运行/ 一组/ 变异/ 测试/ 产生/ 的/ 测试数据/ 之后/ ,/ 检测/ 被/ 测系统/ 对/ 变异/ 测试/ 产生/ 的/ 测试数据/ 的/ 耐受/ 情况/ ,/ 从而/ 一起/ 做出/ 判定/ ./ 第/ 3/ 种/ 策略/ 是/ 在/ 已知/ 程序/ 的/ 源代码/ 的/ 情况/ 下/ ,/ 观察/ 程序/ 的/ 一些/ 输出/ ,/ 从而/ 主观/ 地/ 给出/ 测试/ 判定/ ./ 对于/ 第/ 3/ 种/ 策略/ ,/ 一般/ 是/ 采取/ 收集/ 程序/ 在/ 运行/ 时/ 的/ 一些/ 信息/ ,/ 来/ 对/ 测试/ 进行/ 判定/ 的/ 方法/ ./ 例如/ Csallner/ 等/ 人/ [/ 21/ ]/ 提出/ 的/ 针对/ 鲁棒性/ 测试/ 时/ 的/ 测试/ 判定/ 方法/ ,/ 该/ 方法/ 主要/ 是/ 收集/ Java/ 程序/ 在/ 运行/ 时/ 可能/ 出现/ 的/ 错误/ 或者/ 异常/ 信息/ ,/ 然后/ 通过/ 分析/ 异常/ 信息/ 来/ 对/ 测试/ 进行/ 判定/ ./ 附录/ 2/ 列出/ 了/ 部分/ Java/ 程序/ 异常/ 信息/ 描述/ ./ 从/ 附录/ 2/ 可以/ 看出/ ,/ Java/ 程序/ 在/ 运行/ 出现异常/ 时/ ,/ 有/ 可能/ 会/ 抛出/ 两大类/ 信息/ 中/ 的/ 一种/ ./ 第一/ 大类/ 是/ 错误/ (/ Error/ )/ 信息/ ,/ 第二/ 大类/ 是/ 异常/ (/ Exception/ )/ 信息/ ,/ 在/ 异常/ (/ Exception/ )/ 信息/ 中/ ,/ 又/ 包括/ 运行/ 时/ 异常/ (/ RuntimeException/ )/ 信息/ 和/ 检查/ 异常/ (/ CheckedExceptions/ )/ 信息/ ./ 由于/ 检查/ 异常/ (/ CheckedExceptions/ )/ 通常/ 在/ 编译/ 的/ 时候/ 会/ 出现/ ,/ 指/ 一些/ 可以/ 预知/ 的/ ,/ 当/ 发生/ 异常/ 后/ 知道/ 如何/ 处理/ 的/ 异常/ ,/ 因此/ 难以/ 靠/ 这样/ 的/ 异常/ 信息/ 来/ 进行/ 测试/ 判定/ ./ 而/ 错误/ (/ Error/ )/ 信息/ 和/ 运行/ 时/ 异常/ (/ RuntimeException/ )/ 信息/ 则/ 可以/ 作为/ 测试/ 判定/ 的/ 依据/ ./ 出现/ 错误/ (/ Error/ )/ 信息/ 的/ 时候/ ,/ 表示/ Java/ 程序/ 出现/ 了/ 很/ 严重/ 的/ 问题/ ,/ 而/ 这样/ 的/ 问题/ 有/ 可能/ 是/ 程序/ 中/ 存在/ 很/ 严重/ 的/ 故障/ ./ 出现/ 运行/ 时/ 异常/ (/ RuntimeException/ )/ 信息/ 时/ ,/ 还/ 需要/ 进行/ 进一步/ 判断/ ./ 如果/ 运行/ 时/ 出现/ 的/ 异常/ (/ RuntimeException/ )/ 信息/ 是/ 底层/ 的/ 异常/ 信息/ ,/ 那么/ 这样/ 的/ 异常/ 信息/ 出现/ 之后/ ,/ 可以/ 认为/ 触发/ 了/ 程序/ 中/ 的/ 故障/ ./ 如果/ 运行/ 时/ 出现/ 的/ 异常/ (/ RuntimeException/ )/ 信息/ 是/ 测试用例/ 中/ 调用/ 的/ 方法/ 或者/ 构造/ 器/ 出现/ 的/ 异常/ 而/ 导致/ 的/ ,/ 比如/ 参数/ 不合理/ 等/ ./ 这种/ 情况/ 有/ 可能/ 是/ 数据/ 变异/ 时/ 产生/ 的/ 数据/ 导致/ 了/ 这样/ 的/ 问题/ ,/ 因此/ 难以/ 判断/ 程序/ 中/ 是否/ 存在/ 故障/ ./ 而/ 如果/ 运行/ 时/ 出现/ 的/ 异常/ (/ RuntimeException/ )/ 信息/ 不是/ 测试用例/ 中/ 调用/ 的/ 方法/ 或者/ 构造/ 器/ 出现/ 的/ 异常/ 而/ 导致/ 的/ ,/ 那么/ 这时候/ 可以/ 认为/ 程序/ 中/ 存在/ 故障/ ./ 当/ 认为/ 程序/ 中/ 存在/ 故障/ 的/ 时候/ ,/ 给出/ 的/ 测试/ 判定/ 为/ fail/ ./ 反之/ 给出/ 的/ 测试/ 判定/ 为/ pass/ ./ 本文/ 采取/ 的/ 也/ 是/ 第/ 3/ 策略/ ,/ 并且/ 借鉴/ 了/ Csallner/ 等/ 人/ [/ 21/ ]/ 提出/ 的/ 针对/ 鲁棒性/ 测试/ 时/ 的/ 测试/ 判定/ 方法/ ./ 此外/ ,/ 我们/ 还/ 在/ 程序执行/ 时/ 设置/ 了/ 对于/ 执行/ 路径/ 中/ 方法/ 的/ 观察点/ ,/ 来/ 收集/ 方法/ 的/ 返回值/ (/ 给定/ 相同/ 的/ 输入/ ,/ 来/ 比较/ 原始/ 版本/ 的/ 输入/ 和/ 修改/ 版本/ 的/ 输入/ )/ ,/ 通过/ 那些/ 观测/ 值来/ 辅助/ 给出/ 测试/ 判定/ ./ 当然/ ,/ 采用/ 这样/ 的/ 办法/ 有/ 可能/ 依然/ 难以/ 得到/ 测试/ 判定/ ,/ 这时候/ 采用/ 的/ 办法/ 是/ 舍弃/ 该/ 测试用例/ ,/ 如果/ 需要/ 可能/ 还要/ 再/ 补充/ 新/ 的/ 测试用例/ ./ 4/ 实验/ 与/ 分析/ 4.1/ 实验/ 对象/ 我们/ 选择/ 了/ 文本/ 比较/ 程序/ Diff/ 、/ Siemens/ 基准/ 库/ 的/ 程序/ xml/ -/ security/ 的/ 3/ 个/ 版本/ 、/ 1/ 个/ 网络/ 购物/ 的/ 程序/ Shopping/ 及/ NanoXml/ 程序/ 进行/ 了/ 测试/ ,/ xml/ -/ security/ 是/ xml/ 安全/ 协议/ 的/ 实现/ 代码/ ./ 这/ 4/ 个/ 例子/ 的/ 代码/ 行数/ 从/ 几百/ 行到/ 上万/ 行/ ,/ 满足/ 变量/ 影响/ 分析/ 所/ 需要/ 分析/ 的/ 代码/ 量/ ./ 实验/ 程序/ 的/ 相关/ 信息/ 见表/ 2/ 所示/ ./ 程序/ 名称/ Diffxml/ -/ security/ _/ v1XML/ 安全/ 协议/ 实现/ xml/ -/ security/ _/ v2XML/ 安全/ 协议/ 实现/ xml/ -/ security/ _/ v3XML/ 安全/ 协议/ 实现/ ShoppingNanoXml4/ ./ 2/ 评价/ 准则/ 为了/ 对/ 提出/ 的/ 方法/ 进行/ 评价/ ,/ 本文/ 提出/ 了/ 3/ 个/ 评价/ 准则/ ,/ 分别/ 为/ :/ 故障/ 检测/ 率/ (/ FaultDetectRate/ ,/ FDR/ )/ 、/ 影响/ 语句/ 覆盖率/ (/ ImpactStatementCoverage/ ,/ ISC/ )/ 和/ 测试用例/ 的/ 故障/ 检测/ 率/ (/ UsedTestCase/ ,/ UTC/ )/ ./ 故障/ 检测/ 率/ FDR/ =/ Page10/ 到/ 的/ 故障/ 数目/ ,/ ud/ 指/ 的/ 是/ 没有/ 检测/ 到/ 的/ 故障/ 数目/ ./ FDR/ 在/ 一定/ 程度/ 上能/ 反映/ 出/ 方法/ 检测/ 故障/ 的/ 能力/ ,/ FDR/ 越高/ ,/ 表示/ 该/ 方法/ 检测/ 出/ 故障/ 的/ 能力/ 越强/ ./ 影响/ 语句/ 覆盖率/ ISC/ =/ 盖到/ 的/ 影响/ 语句/ 数/ ,/ uc/ 指/ 的/ 是/ 没有/ 覆盖/ 到/ 的/ 影响/ 语句/ 数/ ./ ISC/ 在/ 一定/ 程度/ 上能/ 反映/ 出/ 使用/ 方法/ 获得/ 的/ 测试用例/ 执行/ 时/ 覆盖/ 语句/ 的/ 多少/ ,/ ISC/ 越高/ ,/ 表示/ 该/ 方法/ 得/ 的/ 测试用例/ 能够/ 覆盖/ 更/ 多/ 的/ 语句/ ./ 测试用例/ 的/ 故障/ 检测/ 率/ UTC/ =/ 是/ 检测/ 到/ 的/ 故障/ 数目/ ,/ tc/ 指/ 的/ 所有/ 测试用例/ ./ UTC/ 指/ 版本/ 故障/ 编号/ v1/ 版本/ 故障/ 编号/ v1Fault1v2Fault1v3Fault1/ 版本/ 故障/ 编号/ 表/ 3Diff/ 程序/ 中/ 植入/ 的/ 故障/ 情况表/ 4xml/ -/ security/ 程序/ 中/ 植入/ 的/ 故障/ 情况/ 原始/ 故障/ 代码/ byte/ [/ ]/ output/ =/ this/ ._/ c14nizedBytes/ ;/ StringqnameIS/ =/ “/ {/ ”/ +/ (/ (/ namespaceIS/ =/ =/ null/ )/ ?/ “/ ”/ :/ namespaceIS/ )/ +/ “/ }/ ”/ +/ localnameIS/ ;/ ElementdigestValueElem/ =/ this/ ./ getChildElementLocalName/ (/ 1/ ,/ …/ )/ 表/ 5Shopping/ 程序/ 中/ 植入/ 的/ 故障/ 情况/ v1v2v3v4Fault1Fault2Fault1Fault2Fault1Fault2order/ ./ getCartPrice/ (/ )/ +/ order/ ./ productCount/ (/ )/ / 100order/ ./ productCount/ (/ )/ / 50Fault1Fault2order/ ./ getCartPrice/ (/ )/ +/ order/ ./ productCount/ (/ )/ / 100order/ ./ productCount/ (/ )/ / 50/ 版本/ 故障/ 编号/ 植入/ 故障/ 代码/ 表/ 6NanoXml/ 程序/ 中/ 植入/ 的/ 故障/ 情况/ NanoXmlStringvalue/ =/ XMLUtil/ ./ scanString/ (/ reader/ ,/ ‘/ ’/ ,/ false/ ,/ this/ ./ parameterEntityResolver/ )/ ;/ this/ ./ currentSystemID/ =/ newURL/ (/ “/ 犳/ 犻/ 犾/ 犲/ :/ ”/ )/ ;/ this/ ./ encapsulatedException/ =/ null/ ;/ 的/ 是/ 发现/ 总/ 的/ 故障/ 数/ 与/ 使用/ 测试用例/ 总数/ 的/ 比值/ ./ UTC/ 在/ 一定/ 程度/ 上能/ 反映/ 出/ 使用/ 方法/ 获得/ 的/ 测试用例/ 检测/ 故障/ 的/ 能力/ ,/ UTC/ 越高/ ,/ 表示/ 该/ 方法/ 得到/ 的/ 测试用例/ 检测/ 故障/ 的/ 能力/ 越强/ ./ UTC/ 与/ FDR/ 侧重点/ 不同/ ,/ UTC/ 侧重/ 在/ 检测/ 故障/ 所用/ 的/ 测试用例/ 的/ 多少/ ,/ FDR/ 侧重/ 检测/ 出/ 的/ 故障/ 的/ 多少/ ./ 4.3/ 实验/ 结果/ 与/ 分析/ 4/ 组/ 程序/ 植入/ 的/ 故障/ 、/ 种子/ 测试用例/ 数/ 、/ 变异/ 测试用例/ 数/ 的/ 相关/ 情况/ 如表/ 3/ 、/ 表/ 4/ 、/ 表/ 5/ 和表/ 6/ 所示/ ./ 本文/ 将/ 所/ 提出/ 的/ 方法/ (/ IADM/ )/ 与/ 随机/ 测试用例/ 生成/ 方法/ (/ RT/ )/ 和/ 传统/ 的/ 测试用例/ 生成/ 方法/ (/ NGA/ )/ [/ 6/ ]/ 进/ 植入/ 故障/ 代码/ discount/ =/ 0.90/ discount/ =/ 0.80/ discount/ =/ 0.92/ discount/ =/ 0.90/ Page11/ 行/ 对比/ ,/ 分别/ 从/ 故障/ 检测/ 率/ 、/ 影响/ 语句/ 覆盖率/ 和/ 测试用例/ 的/ 故障/ 检测/ 率/ 进行/ 比较/ ,/ 所/ 得到/ 的/ 结果/ 图/ 2/ 、/ 图/ 3/ 和/ 图/ 4/ 所示/ ./ 从图/ 2/ 可以/ 看出/ ,/ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 回归/ 测试用例/ 方法/ (/ IADM/ )/ 在/ 检测/ 故障/ 方面/ 要/ 优于/ 随机/ 测试用例/ 生成/ 方法/ (/ RT/ )/ 和/ 传统/ 的/ 测试用例/ 生成/ 方法/ (/ NGA/ )/ ,/ 其中/ 对于/ Diff/ 程序/ ,/ IADM/ 的/ 故障/ 检测/ 率/ 达到/ 1/ ,/ RT/ 的/ 故障/ 检测/ 率为/ 0.7/ ,/ NGA/ 的/ 故障/ 检测/ 率为/ 0.6/ ;/ 对于/ xml/ -/ security/ 程序/ ,/ IADM/ 的/ 故障/ 检测/ 率/ 达到/ 0.8125/ ,/ RT/ 的/ 故障/ 检测/ 率为/ 0.625/ ,/ NGA/ 的/ 故障/ 检测/ 率为/ 0.6875/ ;/ 对于/ Shooping/ 程序/ ,/ IADM/ 的/ 故障/ 检测/ 率/ 达到/ 0.9231/ ,/ RT/ 的/ 故障/ 检测/ 率为/ 0.6154/ ,/ NGA/ 的/ 故障/ 检测/ 率为/ 0.538/ ;/ 对于/ NanoXml/ 程序/ ,/ IADM/ 的/ 故障/ 检测/ 率/ 达到/ 1/ ,/ RT/ 的/ 故障/ 检测/ 率为/ 0.5/ ,/ NGA/ 的/ 故障/ 检测/ 率为/ 0.75/ ./ 从图/ 3/ 可以/ 看出/ ,/ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 回归/ 测试用例/ 方法/ (/ IADM/ )/ 在/ 影响/ 语句/ 覆盖率/ 方面/ 要/ 优于/ 随机/ 测试用例/ 生成/ 方法/ (/ RT/ )/ 和/ 传统/ 的/ 测试用例/ 生成/ 方法/ (/ NGA/ )/ ,/ 其中/ 对于/ Diff/ 程序/ ,/ IADM/ 的/ 影响/ 语句/ 覆盖率/ 达到/ 1/ ,/ RT/ 的/ 影响/ 语句/ 覆盖率/ 为/ 0.76/ ,/ NGA/ 的/ 影响/ 语句/ 覆盖率/ 为/ 0.68/ ;/ 对于/ xml/ -/ security/ 程序/ ,/ IADM/ 的/ 影响/ 语句/ 覆盖率/ 达到/ 0.9291/ ,/ RT/ 的/ 影响/ 语句/ 覆盖率/ 为/ 0.748/ ,/ NGA/ 的/ 影响/ 语句/ 覆盖率/ 为/ 0.795/ ;/ 对于/ Shooping/ 程序/ ,/ IADM/ 的/ 影响/ 语句/ 覆盖率/ 达到/ 0.9211/ ,/ RT/ 的/ 影响/ 语句/ 覆盖率/ 为/ 0.6842/ ,/ NGA/ 的/ 影响/ 语句/ 覆盖率/ 为/ 0.789/ ;/ 对于/ NanoXml/ 程序/ ,/ IADM/ 的/ 影响/ 语句/ 覆盖率/ 达到/ 0.891/ ,/ RT/ 的/ 影响/ 语句/ 覆盖率/ 为/ 0.689/ ,/ NGA/ 的/ 影响/ 语句/ 覆盖率/ 为/ 0.756/ ./ 从图/ 4/ 可以/ 看出/ ,/ 基于/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 回归/ 测试用例/ 方法/ (/ IADM/ )/ 在/ 测试用例/ 的/ 故障/ 检测/ 率/ 方面/ 要/ 优于/ 随机/ 测试用例/ 生成/ 方法/ (/ RT/ )/ 和/ 传统/ 的/ 测试用例/ 生成/ 方法/ (/ NGA/ )/ ,/ 其中/ 对于/ Diff/ 程序/ ,/ IADM/ 的/ 测试用例/ 的/ 故障/ 检测/ 率/ 达到/ 0.1587/ ,/ RT/ 的/ 测试用例/ 的/ 故障/ 检测/ 率为/ 0.0301/ ,/ NGA/ 的/ 测试用例/ 的/ 故障/ 检测/ 率为/ 0.0361/ ;/ 对于/ xml/ -/ security/ 程序/ ,/ IADM/ 的/ 测试用例/ 的/ 故障/ 检测/ 率/ 达到/ 0.115/ ,/ RT/ 的/ 测试用例/ 的/ 故障/ 检测/ 率为/ 0.0356/ ,/ NGA/ 的/ 测试用例/ 的/ 故障/ 检测/ 率为/ 0.0534/ ;/ 对于/ Shooping/ 程序/ ,/ IADM/ 的/ 测试用例/ 的/ 故障/ 检测/ 率/ 达到/ 0.2/ ,/ RT/ 的/ 测试用例/ 的/ 故障/ 检测/ 率为/ 0.0408/ ,/ NGA/ 的/ 测试用例/ 的/ 故障/ 检测/ 率为/ 0.0654/ ;/ 对于/ NanoXml/ 程序/ ,/ IADM/ 的/ 测试用例/ 的/ 故障/ 检测/ 率/ 达到/ 0.08/ ,/ RT/ 的/ 测试用例/ 的/ 故障/ 检测/ 率为/ 0.0096/ ,/ NGA/ 的/ 测试用例/ 的/ 故障/ 检测/ 率为/ 0.0275/ ./ 4.4/ 影响/ 实验/ 有效性/ 因素/ 本文/ 将/ 所/ 提出/ IADM/ 与/ RT/ 及/ NGA/ 进行/ 对比/ 取得/ 了/ 较/ 好/ 的/ 效果/ ,/ 其中/ 故障/ 检测/ 率/ IADM/ 比/ RT/ 及/ NGA/ 要/ 高/ 的/ 原因/ 在于/ :/ 程序/ 中/ 所/ 植入/ 的/ 故障/ 都/ 是/ 与/ 数据流/ 相关/ 的/ ,/ 且/ 这些/ 故障/ 相关/ 的/ 变量/ 行为/ 模型/ 在/ 程序/ 修复/ 前后/ 存在/ 区别/ ,/ 而/ RT/ 和/ NGA/ 都/ 难以/ 检测/ 到/ 所有/ 的/ 区别/ ./ 影响/ 语句/ 覆盖率/ IADM/ 比/ RT/ 及/ NGA/ 要/ 高/ 的/ 原因/ 也/ 和/ 故障/ 检测/ 率/ 类似/ ./ 测试用例/ 的/ 故障/ 检测/ 率/ IADM/ 比/ RT/ 及/ NGA/ 要/ 高/ 的/ 原因/ 是因为/ 在/ 进行/ 数据/ 变异/ 之后/ ,/ 还有/ 后续/ 的/ 选择/ 策略/ ,/ 使得/ 测试用例/ 的/ 规模/ 减少/ ,/ 从而/ 使得/ 用/ 较/ 少/ 的/ 测试用例/ 能够/ 检测/ 出/ 更/ 多/ 的/ 故障/ ./ 尽管/ 采用/ IADM/ 方法/ 能/ 取得/ 不错/ 的/ 效果/ ,/ 但/ 考虑/ 到/ 程序/ 的/ 规模/ 还/ 不够/ 大/ ,/ 缺乏/ 实际/ 的/ 工程项目/ 进行/ 检验/ ./ 且/ 本文/ 所/ 针对/ 的/ 故障/ 是/ 数据流/ 相关/ 的/ 故障/ ,/ 在/ 后续/ 的/ 研究/ 中/ ,/ 需要/ 考虑/ 更/ 多/ 大型/ 的/ 工程项目/ 和/ 更/ 多/ 类型/ 的/ 故障/ ./ 5/ 相关/ 工作/ 讨论/ 5.1/ 测试用例/ 生成/ 方法/ 测试用例/ 生成/ 方法/ 有/ 很多/ ,/ 随机/ 测试用例/ 生成/ Page12/ 方法/ 是/ 其中/ 一种/ ./ 随机/ 测试用例/ 生成/ 方法/ [/ 22/ ]/ 通过/ 在/ 输入/ 域/ 中/ 采用/ 随机/ 选择/ 的/ 方式/ 来/ 产生/ 测试数据/ ./ 对于/ 简单/ 的/ 程序/ 输入/ ,/ 随机/ 测试用例/ 生成/ 方法/ ,/ 如/ 整数/ 、/ 实数/ 等/ ,/ 可/ 直接/ 生成/ 随机/ 数据/ ./ 其他/ 数据类型/ 需要/ 进行/ 数据/ 映射/ 和/ 数据/ 转换/ ./ 此外/ 还有/ 一些/ 随机/ 测试用例/ 生成/ 的/ 改进/ 方法/ ,/ 比如/ 自/ 适应/ 的/ 随机/ 测试用例/ 生成/ 方法/ [/ 23/ ]/ ./ 该/ 方法/ 根据/ 失效/ 输入/ 的/ 区域/ 特征/ ,/ 提出/ 将/ 测试用例/ 尽可能/ 均匀分布/ 在/ 整个/ 输入/ 空间/ ,/ 这样/ 可以/ 提高/ 测试用例/ 发现错误/ 的/ 效率/ ./ 由于/ 利用/ 随机/ 测试用例/ 生成/ 方法/ 获得/ 的/ 测试用例/ 不/ 需要/ 利用/ 过多/ 的/ 信息/ ,/ 也/ 不/ 要求/ 开发/ 复杂/ 的/ 程序/ ,/ 因此/ 该类/ 方法/ 的/ 开销/ 较/ 低/ ./ 但/ 利用/ 随机/ 测试用例/ 生成/ 方法/ 获得/ 的/ 测试用例/ ,/ 发现/ 程序/ 失效/ 的/ 效率/ 不高/ ,/ 且/ 难以确定/ 测试/ 停止/ 的/ 规则/ 或/ 条件/ ./ 基于/ 搜索/ 的/ 测试用例/ 生成/ 方法/ 来源于/ 对/ 人工智能/ 的/ 研究/ [/ 24/ -/ 25/ ]/ ./ 该类/ 方法/ 根据/ 以往/ 搜索/ 的/ 结果/ 所/ 得到/ 的/ 信息/ ,/ 产生/ 下/ 一步/ 的/ 搜索/ 动作/ ./ 搜索算法/ 是/ 处理/ NP/ -/ hard/ 问题/ 的/ 有效途径/ ./ 常用/ 的/ 搜索算法/ 有/ :/ 爬山/ 算法/ [/ 26/ ]/ 、/ 模拟退火/ 算法/ [/ 27/ ]/ 与/ 遗传算法/ [/ 28/ ]/ ./ 还有/ 一类/ 测试用例/ 生成/ 方法/ 是/ 基于/ 约束/ 求解/ 的/ [/ 29/ ]/ ./ 在/ 测试用例/ 生成/ 的/ 过程/ 中/ ,/ 大多数/ 测试/ 覆盖/ 要求/ 可/ 归结为/ 一个/ 或/ 多个/ 逻辑/ 表达式/ ,/ 这些/ 逻辑/ 表达式/ 可/ 看成/ 是/ 一些/ 约束条件/ ./ 因此/ ,/ 产生/ 达到/ 覆盖/ 要求/ 的/ 测试用例/ 的/ 问题/ 就/ 转化/ 成为/ 求解/ 满足/ 约束条件/ 的/ 值/ 的/ 过程/ ./ 根据/ 约束/ 问题/ 中/ 变量/ 的/ 值域/ 的/ 不同/ ,/ 约束/ 问题/ 又/ 可以/ 分为/ 布尔/ 约束/ 问题/ 、/ 有限/ 约束/ 问题/ 和/ 数值/ 约束/ 问题/ ./ Gotlieb/ 等/ 人/ [/ 30/ ]/ 用/ 约束/ 求解/ 法来/ 生成/ 测试数据/ ./ Gupta/ 等/ 人/ [/ 31/ ]/ 采用/ 迭代/ 逼近/ 的/ 方法/ ,/ 来/ 获得/ 满足/ 所/ 选择/ 的/ 路径/ 上/ 谓词/ 的/ 输入/ 值/ ./ 然后/ 在/ 每次/ 迭代/ 的/ 过程/ 中/ 执行/ 与/ 选定/ 路径/ 相关/ 的/ 语句/ ,/ 从而/ 得到/ 一个/ 线性/ 约束/ 集/ ./ 接着/ 利用/ 高斯/ 消去法/ 来/ 求解/ 该/ 约束/ 集/ ,/ 从而/ 获得/ 一个/ 输入/ 增量/ ,/ 再/ 进行/ 迭代/ ,/ 最终/ 产生/ 选定/ 路径/ 的/ 测试数据/ ./ 除了/ 上述/ 几种/ 测试用例/ 生成/ 方法/ 之外/ ,/ 还有/ 基于/ 符号执行/ 的/ 测试用例/ 生成/ 方法/ ./ 符号执行/ 是/ 指/ 在/ 进行/ 程序/ 分析/ 的/ 过程/ 中/ ,/ 使用/ 符号/ 而/ 不是/ 实际/ 的/ 值/ 代入/ 到/ 程序/ 中/ 进行/ 运算/ 的/ 过程/ ./ 从而/ 能够/ 分析/ 出/ 特定/ 路径/ 的/ 约束条件/ 和/ 计算公式/ [/ 32/ ]/ ./ 基于/ 符号执行/ 的/ 测试用例/ 生成/ 方法/ 需要/ 建立/ 约束/ 系统/ ,/ 从前/ 向/ 后/ 替换/ 与/ 从/ 后/ 向前/ 替换/ 是/ 两种/ 典型/ 的/ 建立/ 约束/ 系统/ 的/ 主要/ 方法/ ./ 5.2/ 数据流/ 分析/ 与/ 切片/ 分析/ 数据流/ 分析/ 是/ 一种/ 典型/ 的/ 变量/ 行为/ 分析方法/ ,/ 在/ 编译/ 优化/ 中/ 得到/ 大量/ 应用/ ,/ 使得/ 编译器/ 在/ 不/ 改变程序/ 功能/ 的/ 前提/ 下/ ,/ 利用/ 数据流/ 分析/ 来/ 对/ 程序/ 中/ 部分/ 代码/ 进行/ 适当/ 的/ 转换/ ,/ 从而/ 提高/ 程序/ 的/ 运行/ 效率/ [/ 33/ -/ 37/ ]/ ./ 数据流/ 分析/ 包括/ 静态数据/ 流/ 分析/ 与/ 动态/ 数据流/ 分析/ ,/ 静态数据/ 流/ 分析/ 是/ 指/ 不/ 在/ 计算机/ 运行/ 被测/ 程序/ 的/ 前提/ 下/ ,/ 利用/ 静态/ 分析/ 提供/ 的/ 必要/ 信息/ ,/ 检测/ 变量/ 的/ 取值/ 与/ 使用/ 是否/ 发生/ 不合理/ 现象/ ,/ 即/ 找出/ 被测/ 程序/ 中/ 是否/ 存在/ 变量/ 在/ 使用/ 前未/ 被/ 取值/ 、/ 变量/ 在/ 两次/ 取值/ 之间/ 未/ 被/ 使用/ 、/ 一个/ 赋/ 了/ 值/ 的/ 变量/ 是否/ 未/ 被/ 使用/ 等/ 异常情况/ [/ 33/ ]/ ./ 动态/ 的/ 数据流/ 分析/ 是/ 指以/ 程序/ 中/ 的/ 数据流/ 关系/ 作为/ 测试/ 的/ 需求/ ,/ 这些/ 数据流/ 的/ 关系/ 指/ 的/ 是/ 变量/ 的/ 定义/ 和/ 使用/ 关系/ ./ 基于/ 针对/ 数据流/ 的/ 测试/ 覆盖/ 准则/ ,/ 来/ 生成/ 满足/ 覆盖/ 准则/ 的/ 测试数据/ ./ 对/ 程序/ 中/ 的/ 方法/ 调用/ 进行/ 的/ 数据流/ 分析/ 称为/ 方法/ 间/ 数据流/ 分析/ ,/ 对/ 全局变量/ 进行/ 的/ 数据流/ 分析/ 称为/ 全局/ 数据流/ 分析/ ./ 文献/ [/ 38/ -/ 41/ ]/ 对/ 这些/ 分析方法/ 进行/ 了/ 深入/ 的/ 研究/ ./ 在/ 结构化程序/ 中/ ,/ 由于/ 指针/ 传递/ 和/ 引用/ 传递/ 引起/ 的/ 多个/ 变量/ 可以/ 操作/ 内存/ 中同/ 一块/ 数据/ 单元/ ,/ Burke/ 和/ Choi/ [/ 42/ ]/ 对/ 其/ 进行/ 了/ 深入/ 的/ 探讨/ ,/ 目前/ 可以/ 解决/ 某些/ 简单/ 形式/ 的/ 问题/ ./ 数组/ 中/ 的/ 各/ 元素/ 可以/ 被/ 看作/ 独立/ 的/ 变量/ ,/ 但/ 对/ 数组/ 中/ 各/ 元素/ 的/ 操作/ 很难/ 被/ 静态/ 的/ 区分/ 出来/ ./ 对于/ 数组/ 变量/ 的/ 数据流/ 分析/ ,/ 也/ 有/ 不少/ 的/ 研究/ ,/ 有/ 一种/ 处理/ 方法/ ,/ 可以/ 对/ 数组/ 元素/ 的/ 操作/ 进行/ 部分/ 的/ 区分/ ./ 静态数据/ 流/ 分析/ 需要/ 提取/ 和/ 分析/ 的/ 信息量/ 很大/ ,/ 所以/ 其/ 时间/ 和/ 空间/ 效率/ 有点/ 低/ ./ 动态/ 数据流/ 分析/ 技术/ 则/ 是/ 静态数据/ 流/ 技术/ 的/ 补充/ ./ 这种/ 技术/ 主要/ 是/ 针对/ 某些/ 特殊/ 的/ 变量/ (/ 或/ 信息/ )/ ,/ 如/ 数组/ 元素/ 、/ 结构/ 变量/ (/ struct/ )/ 、/ 指针/ 变量/ 和/ 动态/ 变量/ 等/ ./ 和/ 它们/ 相关/ 的/ 具体/ 信息/ 一般/ 只有/ 在/ 程序运行/ 时/ 才能/ 确定/ ./ 基于/ 数据流/ 的/ 软件测试/ 的/ 研究/ 工作/ 一直/ 是/ 软件测试/ 研究/ 的/ 重要/ 领域/ 之一/ ,/ 有着/ 极其重要/ 的/ 理论/ 和/ 实际/ 应用/ 价值/ ./ 从/ 数据流/ 覆盖/ 角度/ ,/ 相关/ 研究/ 设计/ 了/ 一系列/ 的/ 覆盖/ 准则/ 来/ 指导/ 生成/ 满足/ 覆盖/ 准则/ 的/ 测试数据/ ./ 切片/ 也/ 是/ 一种/ 典型/ 的/ 变量/ 行为/ 分析/ 技术/ ,/ Weiser/ 博士/ [/ 19/ ]/ 定义/ 了/ 程序/ 切片/ 为/ 程序/ 中/ 所有/ 能够/ 影响/ 某个/ 输出/ 的/ 语句/ 集合/ ,/ 如果/ 删除/ 其他/ 语句/ ,/ 不会/ 对/ 所/ 关注/ 的/ 输出/ 有/ 任何/ 影响/ ./ 切片/ 分为/ 静态/ 切片/ 、/ 动态/ 切片/ 、/ 前向/ 切片/ 和/ 后/ 向/ 切片/ 等/ ./ 如果/ 在/ 计算/ 程序/ 切片/ 时/ 不/ 考虑/ 程序/ 的/ 具体/ 输入/ ,/ 只/ 考虑/ 对/ 某个/ 关注点/ 影响/ 的/ 语句/ 集合/ ,/ 得到/ 的/ 切片/ 就是/ 静态/ 切片/ ./ 如果/ 在/ 计算/ 程序/ 切片/ 时/ 考虑/ 程序/ 的/ 具体/ 输入/ ,/ 在/ 特定/ 输入/ 下/ ,/ 影/ Page13/ 响/ 相关/ 变量/ v/ 在/ n/ 点/ 取值/ 的/ 语句/ 集合/ ,/ 得到/ 的/ 切片/ 就是/ 动态/ 切片/ [/ 43/ ]/ ./ 后/ 向/ 切片/ 是/ 指/ 构造/ 一个/ 集合/ affect/ (/ v/ ,/ n/ )/ ,/ 使得/ 这个/ 集合/ 由/ 所有/ 影响/ 变量/ v/ 在/ n/ 点/ 取值/ 的/ 语句/ 组成/ ./ 后/ 向/ 切片/ 常用/ 于/ 在/ 测试/ 发现错误/ 时来/ 分析/ 前面/ 哪条/ 语句/ 导致/ 了/ 相应/ 错误/ ./ 前向/ 切片/ 正好/ 相反/ ,/ 是/ 指/ 构造/ 一个/ 集合/ affect/ (/ v/ ,/ n/ )/ ,/ 由/ 受到/ 变量/ v/ 在/ 位置/ n/ 取值/ 所/ 影响/ 的/ 所有/ 语句/ 构成/ ./ 前向/ 切片/ 也/ 有/ 广泛/ 的/ 应用/ ,/ 如可/ 用于/ 检查程序/ 哪些/ 语句/ 受到/ 故障/ 修复/ 的/ 影响/ ./ 6/ 结论/ 与/ 展望/ 本文/ 对/ 程序/ 中/ 变量/ 的/ 动态/ 行为/ 进行/ 了/ 分析/ ,/ 提出/ 了/ 一种/ 变量/ 行为/ 模型/ ,/ 并且/ 采用/ 变量/ 影响/ 分析/ 和/ 数据/ 变异/ 的/ 方法/ ,/ 对/ 回归/ 测试用例/ 生成/ 进行/ 了/ 研究/ ,/ 实验/ 表明/ 本文/ 所/ 提出/ 的/ 方法/ 有效/ ./ 但/ 回归/ 测试用例/ 生成/ 是/ 一个/ 颇具/ 难度/ 的/ 问题/ ,/ 仅靠/ 本文/ 所/ 提出/ 的/ 一种/ 方法/ 还/ 不够/ ,/ 特/ 总结/ 了/ 后续/ 可以/ 进一步/ 改进/ 的/ 方面/ ./ 完善/ 变量/ 行为/ 模型/ ,/ 即/ 在/ 已有/ 的/ 基础/ 上/ 增加/ 程序控制/ 流/ 相关/ 的/ 信息/ ,/ 这样/ 可/ 针对/ 更/ 多/ 类型/ 故障/ 的/ 修复/ 检验/ ./ 此外/ ,/ 本文/ 在/ 利用/ 数据/ 变异/ 生成/ 测试用例/ 的/ 方法/ 中/ ,/ 采用/ 了/ 捕获/ 异常/ 信息/ 来/ 给出/ 测试/ 判定/ 的/ 方法/ ,/ 但/ 这样/ 的/ 方法/ 事实上/ 是/ 不够/ 精确/ 的/ ,/ 在/ 后续/ 的/ 研究/ 中/ ,/ 可以/ 对/ 利用/ 数据/ 变异/ 生成/ 测试用例/ 中/ 如何/ 给出/ 测试/ 判定/ 进行/ 深入/ 的/ 研究/ ./ 致谢/ 感谢/ 北京航空航天大学/ 软件工程/ 研究所/ 模型/ 驱动/ 小组/ 、/ 分布式/ 小组/ 此前/ 所/ 做/ 的/ 工作/ ./ 感谢/ 百忙之中/ 评阅/ 论文/ 的/ 各位/ 专家/ !/ 

