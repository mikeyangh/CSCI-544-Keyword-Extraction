Page1/ 基于/ 全局/ 同步/ 逻辑/ 时间/ 的/ 访存/ 依赖/ 约/ 减/ 方法/ 唐士斌/ 1/ )/ ,/ 2/ )/ 宋风龙/ 1/ )/ 张帅/ 1/ )/ ,/ 2/ )/ 范东/ 睿/ 1/ )/ 刘志勇/ 1/ )/ ,/ 3/ )/ 1/ )/ (/ 中国科学院计算技术研究所/ 计算机/ 体系结构/ 国家/ 重点/ 实验室/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 大学/ 北京/ 100049/ )/ 3/ )/ (/ 移动/ 计算/ 与/ 新型/ 终端/ 北京市/ 重点/ 实验室/ 北京/ 100190/ )/ 摘要/ 并发/ 执行/ 的/ 并行/ 多线程/ 程序执行/ 过程/ 中/ ,/ 不同/ 的/ 访存/ 顺序/ 会/ 得到/ 不同/ 的/ 执行/ 结果/ ./ 由于/ 再次/ 执行/ 时/ ,/ 难以/ 重现/ 首次/ 执行/ 时/ 的/ 错误/ ,/ 导致/ 并行程序/ 的/ 调试/ 非常/ 困难/ ./ 确定性/ 重放/ 是/ 解决/ 该/ 问题/ 的/ 一种/ 方法/ ,/ 目的/ 是/ 通过/ 记录/ 并行程序/ 执行/ 过程/ 中/ 的/ 不确定性/ 事件/ ,/ 然后/ 利用/ 记录/ 的/ 事件/ 重现/ 出/ 程序/ 的/ 原始/ 执行/ ./ 然而/ ,/ 已有/ 的/ 确定性/ 重/ 放/ 方法/ 会/ 产生/ 大量/ 的/ 记录/ 日志/ ,/ 如何/ 减小/ 记录/ 日志/ 是/ 确定性/ 重/ 放/ 领域/ 的/ 研究/ 热点/ ,/ 在/ 实际/ 应用/ 中/ 也/ 是/ 非常/ 具有/ 挑战性/ 的/ 问题/ ./ 为了/ 减小/ 记录/ 日志/ 的/ 开销/ ,/ 文中/ 提出/ 了/ 一种/ 基于/ 逻辑/ 时间/ 的/ 访存/ 依赖/ 约/ 减/ 方法/ ,/ 并/ 在/ 支持/ 松弛/ 存储/ 一致性/ 模型/ 的/ 处理器/ 上/ 提出/ 具体/ 的/ 实现/ 技术/ ,/ 该/ 方法/ 利用/ 了/ 访存/ 依赖/ 对应/ 的/ 逻辑/ 时间/ 之间/ 的/ 序/ 关系/ 进行/ 约/ 减/ ./ 通过/ 模拟/ 评估所/ 提出/ 方法/ 的/ 性能/ 和/ 可扩展性/ ./ 其中/ ,/ 在/ 8/ 核/ 模拟/ 平台/ 上/ ,/ 通过/ Splash2/ 测试程序/ 进行/ 评估/ ,/ 结果显示/ 所/ 提出/ 的/ 记录/ 方法/ 平均/ 日志/ 开销/ 为/ 0.11/ Bytes/ // Kilo/ -/ Instruction/ ,/ 与/ 目前/ 最好/ 的/ 访存/ 依赖/ 约/ 减/ 方法/ Timetraveler/ 相比/ 提高/ 了/ 75/ %/ ;/ 通过/ 4/ 核/ 、/ 8/ 核/ 和/ 16/ 核/ 平台/ 的/ 评估/ 结果/ ,/ 表明/ 所/ 提出/ 约/ 减/ 方法/ 具有/ 较/ 好/ 的/ 可扩展性/ ./ 关键词/ 多核/ ;/ 并行程序/ ;/ 确定性/ 重/ 放/ ;/ 访存/ 冲突/ 1/ 引言/ 目前/ ,/ 主流/ 的/ 处理器/ 设计/ 多/ 采用/ 多核/ 或者/ 众核/ 结构/ ./ 为了/ 充分发挥/ 多核/ 与/ 众核/ 的/ 计算能力/ ,/ 采用/ 并行/ 方法/ 进行/ 程序设计/ 是/ 必然/ 的/ 趋势/ ./ 但是/ ,/ 并行程序/ 中/ 存在/ 不确定性/ ,/ 这种/ 不确定性/ 导致/ 多次/ 执行/ 同一/ 并行程序/ 会/ 得到/ 不同/ 的/ 结果/ ./ 该/ 问题/ 使得/ 调试/ 并行程序/ 难度/ 高/ 、/ 周期长/ ./ 为了/ 解决/ 该/ 问题/ ,/ 研究/ 人员/ 提出/ 了/ 确定性/ 记录/ 与/ 重放/ 方法/ ./ 该/ 方法/ 分成/ 两个/ 阶段/ :/ 记录/ 与/ 重放/ ./ 在/ 记录/ 阶段/ 中/ ,/ 方法/ 监控/ 程序/ 的/ 行为/ 并/ 记录/ 执行/ 中/ 的/ 不确定性/ 事件/ ./ 在/ 重放/ 阶段/ 中/ ,/ 利用/ 记录/ 的/ 事件/ 重现/ 出/ 程序/ 被/ 记录/ 时/ 的/ 行为/ ./ 并行程序/ 执行/ 过程/ 中/ 的/ 不确定性/ 事件/ 主要/ 分成/ 两类/ :/ 一类/ 是/ 程序/ 外部/ 事件/ 引起/ 的/ 不/ 确定/ ,/ 如/ 中断/ 、/ 程序/ 输入/ 等/ ;/ 另一类/ 是/ 程序/ 内部/ 的/ 访存/ 顺序/ 引起/ 的/ 不/ 确定/ (/ 以下/ 简称/ 访存/ 依赖/ )/ ./ 与/ 外部/ 的/ 不确定性/ 相比/ ,/ 访存/ 依赖/ 的/ 发生/ 隐含/ 在/ 多线程/ 的/ 访存/ 交互/ 当中/ ,/ 该类/ 不确定性/ 发生/ 频率/ 高/ ,/ 故/ 难以/ 完整/ 记录/ ./ 因此/ ,/ 如何/ 检测/ 并/ 记录/ 访存/ 依赖/ 成为/ 确定性/ 重/ 放/ 领域/ 的/ 热点问题/ ./ 研究/ 人员/ 进行/ 了/ 大量/ 的/ 研究/ ,/ 相关/ 工作/ 分成/ 两类/ :/ 纯/ 软件/ 方法/ 与/ 硬件/ 辅助/ 方法/ ./ 在/ 纯/ 软件/ 方法/ 中/ [/ 1/ -/ 4/ ]/ ,/ 监控/ 程序/ 的/ 访存/ 行为/ 是/ 通过/ 修改/ 页表/ 或者/ 对/ 应用程序/ 插桩/ 来/ 实现/ ./ 该类/ 方法/ 的/ 优点/ 是/ ,/ 机制/ 的/ 实现/ 不/ 需要/ 硬件/ 设备/ ,/ 在/ 现有/ 硬件/ 的/ 基础/ 上/ 就/ 可以/ 实现/ 重放/ ./ 但是/ ,/ 当/ 被/ 记录/ 的/ 并行程序/ 访存/ 交互/ 频繁/ 时/ ,/ 纯/ 软件/ 方法/ 的/ 运行/ 时/ 开销/ 大/ ,/ 并且/ 难以/ 长时间/ 在线/ 工作/ [/ 5/ ]/ ./ 在/ 由/ 硬件/ 辅助/ 实现/ 的/ 方法/ 中/ [/ 6/ -/ 16/ ]/ ,/ 增加/ 了/ 硬件/ 设备/ 来/ 检测/ 访存/ 依赖/ ,/ 因此/ 大大降低/ 了/ 运行/ 时/ 开销/ ./ 但是/ ,/ 记录/ 过程/ 中/ 生成/ 了/ 大量/ 的/ 记录/ 日志/ ,/ 该/ 日志/ 不仅/ 占用/ 了/ 片/ 上/ 存储空间/ ,/ 同时/ 将/ 其/ 导出/ 到片/ 外会/ 占用/ 系统/ 访存/ 带宽/ ./ 为此/ ,/ 如何/ 减小/ 记录/ 的/ 日志/ 成为/ 确定性/ 重/ 放/ 领域/ 的/ 研究/ 热点/ ./ 其中/ ,/ 有/ 代表性/ 的/ 工作/ 有/ 文献/ [/ 6/ ,/ 8/ ,/ 10/ -/ 11/ ,/ 13/ ]/ ./ 研究/ 人员/ 利用/ 访存/ 依赖/ 之间/ 的/ 传递/ 关系/ [/ 17/ ]/ ,/ 提出/ 了/ 约/ 减访存/ 依赖/ 的/ 方法/ [/ 10/ ]/ ./ 文献/ [/ 6/ ]/ 基于/ 该/ 研究/ 进一步/ 采用/ 矢量/ 合并/ 的/ 方法/ ,/ 将/ 多个/ 平行/ 的/ 访存/ 依赖/ 合并/ 成/ 一项/ ./ 这/ 两种/ 方法/ 利用/ 点到点/ 的/ 方式/ 来/ 保存/ 依赖/ 关系/ ,/ 可以/ 最大/ 程度/ 地/ 保存/ 重放时/ 的/ 并行度/ ./ 然而/ ,/ 它们/ 的/ 缺点/ 是/ 日志/ 开销/ 大/ ,/ 其/ 原因/ 有/ 两点/ :/ 首先/ ,/ 在/ 方法/ 中/ 用来/ 保存/ 依赖/ 关系/ 的/ 数据结构/ 占用/ 字节/ 多/ ,/ 每/ 项/ 数据结构/ 由/ 4/ 个域/ 组成/ ,/ 分别/ 为源/ 处理器/ 标识符/ 、/ 源/ 处理器/ 逻辑/ 时间/ 、/ 目标/ 处理器/ 标识符/ 、/ 目标/ 处理器/ 逻辑/ 时间/ ;/ 其次/ ,/ 这/ 两种/ 方法/ 仅能/ 约/ 减由/ 两个/ 处理器/ 参与/ 的/ 依赖/ ,/ 不能/ 约/ 减/ 更/ 多处理器/ 参与/ 的/ 依赖/ 关系/ ./ 为了/ 获取/ 更好/ 的/ 约/ 减/ 效果/ ,/ 研究者/ 提出/ 了/ 在/ 动态/ 指令/ 片段/ 之间/ 建立/ 逻辑/ 时间/ 的/ 方法/ [/ 11/ ,/ 13/ ,/ 18/ ]/ ./ 其中/ ,/ 动态/ 指令/ 片段/ 是/ 指/ 一段/ 不/ 与/ 外界/ 通信/ 的/ 连续/ 指令/ ./ 该类/ 约/ 减/ 方法/ 从/ 3/ 个/ 角度/ 减少/ 日志/ 开销/ :/ (/ 1/ )/ 减小/ 日志/ 项/ 的/ 长度/ ,/ 该类/ 方法/ 每个/ 日志/ 项仅/ 由/ 两个/ 域/ 组成/ :/ 指令/ 块/ 包含/ 的/ 指令/ 数/ 、/ 指令/ 块/ 对应/ 的/ 时钟/ ;/ (/ 2/ )/ 合并/ 多项/ 依赖/ 关系/ ,/ 在/ 该类/ 方法/ 中/ 一条/ 日志/ 项/ 可以/ 表示/ 一段/ 动态/ 指令/ 片段/ 内/ 的/ 多条/ 依赖/ 关系/ ;/ (/ 3/ )/ 实现/ 多处理器/ 之间/ 的/ 传递/ 约/ 减/ ./ 在/ 文献/ [/ 8/ ]/ 中/ ,/ 研究/ 人员/ 提出/ 了/ 更/ 高效/ 的/ 约/ 减/ 方法/ ,/ 该/ 方法/ 利用/ 了/ 处理器/ 中/ 物理/ 时钟/ 之间/ 的/ 优先/ 关系/ ./ 但是/ ,/ 上述/ 方法/ 的/ 日志/ 开销/ 依旧/ 太/ 大/ ,/ 在线/ 记录/ 会/ 影响/ 系统/ 的/ 整体/ 性能/ ./ 针对/ 无/ 数据/ 竞争/ 的/ 程序/ ,/ 研究者/ 提出/ 了/ 一种/ 方法/ ,/ 可以/ 确定/ 地/ 执行/ 并行程序/ [/ 19/ ]/ ./ 该/ 方法/ 通过/ 确定/ 同步操作/ 之间/ 顺序/ ,/ 保证/ 了/ 无/ 数据/ 竞争/ 的/ 程序/ 的/ 确定性/ ./ 与/ 确定性/ 重/ 放/ 方法/ 相比/ ,/ 确定性/ 执行/ 的/ 优点/ 是/ 零/ 日志/ 开销/ ,/ 但是/ ,/ 方法/ 需要/ 为/ 不确定性/ 事件/ 建立/ 顺序/ ,/ 此/ 过程/ 引入/ 巨大/ 的/ 运行/ 时/ 开销/ ./ 此外/ ,/ 该/ 方法/ 不能/ 保证/ 存在/ 数据/ 竞争/ 的/ 程序/ 在/ 执行/ 时/ 的/ 确定性/ ./ 为了/ 在/ 真实/ 的/ 处理器/ 中/ 实现/ 重/ 放/ 方法/ ,/ 越来越/ 多/ 的/ 研究/ 工作/ 开始/ 关注/ 对/ 松弛/ 存储/ 一致性/ 模型/ 的/ 支持/ [/ 6/ -/ 9/ ]/ ./ 这些/ 研究/ 工作/ 重点/ 讨论/ 如何/ 在/ 支持/ TSO/ (/ TotalStoreOrder/ )/ 存储/ 一致性/ 模型/ 的/ 处理器/ 中/ 实现/ 确定性/ 重放/ ./ 为了/ 避免/ 重放时/ 的/ 死锁/ 问题/ ,/ 文献/ [/ 6/ ,/ 8/ ]/ 提出/ 了/ 记录/ 读/ 操作/ 返回值/ 的/ 方法/ ,/ 而/ 在/ 文献/ [/ 7/ ]/ 中则/ 采用/ 了/ 记录/ 动态/ 指令/ 片段/ 中/ 没有/ 完成/ 的/ 写/ 操作/ 的/ 数量/ 的/ 方法/ ./ 尽管/ 上述/ 两种/ 方法/ 实现/ 起来/ Page3/ 都/ 比较简单/ ,/ 但/ 都/ 存在/ 日志/ 开销/ 过大/ 的/ 问题/ ./ 为了/ 降低/ 日志/ 开销/ ,/ 在/ 文献/ [/ 9/ ]/ 中/ 提出/ 了/ 检测/ 违反/ 顺序/ 一致性/ 语义/ 的/ 方法/ ./ 但/ 该/ 方法/ 仅/ 适用/ 于/ 基于/ “/ 侦听/ ”/ 的/ 缓存/ 一致性/ 协议/ ,/ 而/ 不适/ 用于/ 基于/ “/ 目录/ ”/ 的/ 缓存/ 一致性/ 协议/ ./ 针对/ 目前/ 的/ 方法/ 都/ 存在/ 日志/ 开销/ 大/ 的/ 问题/ ,/ 本文/ 提出/ 了/ 一种/ 基于/ 全局/ 同步/ 逻辑/ 时间/ 的/ 访存/ 依赖/ 约/ 减/ 方法/ ./ 该/ 方法/ 利用/ 访存/ 操作/ 逻辑/ 时间/ 之间/ 的/ 序/ 关系/ ,/ 来/ 约/ 减访存/ 依赖/ ./ 具体操作/ 为/ ,/ 当/ 处理器/ 检测/ 到/ 一对/ 依赖/ 关系/ ,/ 表示/ 为/ A/ →/ B/ ./ 当/ 操作/ A/ 的/ 逻辑/ 时间/ 小时/ ,/ 则/ 该/ 依赖/ 关系/ 可以/ 被/ 约/ 减/ ./ 为了/ 追求/ 更好/ 的/ 约/ 减/ 效果/ ,/ 本文/ 提出/ 了/ 懒惰/ 同步/ 逻辑/ 时间/ 的/ 方法/ ,/ 该/ 方法/ 在/ 不/ 引入/ 大量/ 的/ 同步/ 日志/ 开销/ 的/ 同时/ ,/ 在/ 记录/ 过程/ 中/ 建立/ 了/ 全局/ 同步/ 的/ 逻辑/ 时间/ ,/ 保证/ 了/ 几乎/ 所有/ 的/ 访存/ 依赖/ 都/ 能/ 被/ 约/ 减/ ./ 为了/ 将/ 本文/ 的/ 方法/ 在/ 真实/ 的/ 处理器/ 中/ 实现/ ,/ 本文/ 讨论/ 了/ 松弛/ 存储/ 存储/ 一致性/ 模型/ 对/ 重放/ 的/ 影响/ 以及/ 解决/ 方法/ ./ 为了/ 还原/ 真实/ 的/ 执行/ 过程/ ,/ 该/ 方法/ 记录/ 了/ 被/ 推迟/ 执行/ 的/ 访存/ 指令/ ./ 同时/ ,/ 本文/ 还/ 提出/ 了/ 基于/ 乱序/ 指令/ 窗口/ 来/ 检测/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 方法/ ./ 本/ 研究/ 的/ 贡献/ 有/ 3/ 点/ :/ (/ 1/ )/ 提出/ 了/ 访存/ 依赖/ 约/ 减/ 方法/ ./ 该/ 方法/ 利用/ 逻辑/ 时钟/ 之间/ 的/ 优先/ 关系/ ,/ 来/ 约/ 减访存/ 依赖/ ./ (/ 2/ )/ 提出/ 了/ 懒惰/ 的/ 逻辑/ 时钟/ 同步/ 方法/ ./ 此外/ ,/ 针对/ 不同/ 的/ 缓存/ 一致性/ 协议/ ,/ 本文/ 提出/ 了/ 不同/ 的/ 同步/ 策略/ ./ (/ 3/ )/ 针对/ 支持/ 松弛/ 存储/ 一致性/ 模型/ 的/ 处理器/ ,/ 本文/ 提出/ 了/ 检测/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 方法/ ,/ 并/ 记录/ 了/ 乱序/ 行为/ 来/ 避免/ 重放时/ 的/ 死锁/ ./ 本文/ 第/ 2/ 节/ 主要/ 介绍/ 确定性/ 记录/ 方法/ 中访存/ 依赖/ 约/ 减/ 与/ 对/ 松弛/ 存储/ 一致性/ 模型/ 支持/ 的/ 相关/ 工作/ ;/ 第/ 3/ 节/ 具体/ 描述/ 本文/ 的/ 约/ 减/ 方法/ 以及/ 该/ 方法/ 如何/ 支持/ 松弛/ 的/ 存储/ 一致性/ 模型/ ;/ 第/ 4/ 节/ 给出/ 具体/ 实现/ 与/ 重放/ 算法/ ;/ 第/ 5/ 节对/ 约/ 减/ 方法/ 进行/ 实验/ 评估/ ;/ 最后/ 一部分/ 是/ 全文/ 总结/ ./ 2/ 研究/ 背景/ 确定性/ 重/ 放/ 方法/ ,/ 通过/ 记录/ 原始/ 执行/ 的/ 不确定性/ 事件/ ,/ 保证/ 了/ 并行程序/ 在/ 多次重/ 放中/ 行为/ 与/ 原始/ 执行/ 行为/ 一致/ ,/ 大大提高/ 了/ 并行程序/ 的/ 调试/ 效率/ ./ 在/ 确定性/ 重/ 放/ 研究/ 工作/ 中/ ,/ 日志/ 产生/ 速度/ 与/ 如何/ 在/ 松弛/ 存储/ 一致性/ 系统/ 中/ 实现/ 一直/ 受到/ 广泛/ 关注/ ,/ 下面/ 分别/ 介绍/ 相关/ 研究/ 工作/ ./ 2.1/ 访存/ 依赖/ 的/ 约/ 减/ 方法/ 在/ 确定性/ 重放中/ ,/ 需要/ 在/ 日志/ 中/ 记录/ 首次/ 执行/ 中/ 的/ 不确定性/ 事件/ ,/ 然而/ 过快/ 的/ 日志/ 产生/ 速度限制/ 了/ 该/ 方法/ 的/ 实用性/ ,/ 原因/ 如下/ :/ 首先/ ,/ 程序/ 中/ 导致/ 错误/ 的/ 根源/ 与/ 发生/ 错误/ 的/ 现场/ 之间/ ,/ 程序/ 已经/ 执行/ 了/ 很/ 久/ ,/ 追踪/ 到/ 错误/ 根源/ 需要/ 长时间/ 记录/ 执行/ 状态/ ;/ 其次/ ,/ 将/ 日志/ 从/ 处理器/ 导出/ 到/ 稳定/ 的/ 存储设备/ 中/ 占用/ 系统/ 带宽/ 资源/ ,/ 影响/ 系统/ 性能/ ;/ 最后/ ,/ 有限/ 的/ 存储设备/ 无法/ 承受/ 无限/ 增长/ 的/ 日志/ ./ 为此/ ,/ 十年/ 来/ ,/ 硬件/ 记录/ 方法/ 的/ 一个/ 研究/ 热点/ 是/ 减小/ 记录/ 访存/ 依赖/ 的/ 日志/ 开销/ ./ 主要/ 的/ 方法/ 分成/ 两大类/ :/ 第/ 1/ 类/ 方法/ 采用/ 传递/ 关系/ 约/ 减访存/ 依赖/ [/ 6/ ,/ 10/ ,/ 17/ ,/ 20/ ]/ ./ 该/ 方法/ 利用/ 偏序/ 集合/ 中/ 的/ 传递/ 关系/ 约/ 减/ 冗余/ 的/ 访存/ 依赖/ 关系/ ,/ 如图/ 1/ 所示/ ,/ 图中/ 存在/ 4/ 条/ 依赖/ 关系/ ,/ 分为/ 两类/ :/ Rd/ _/ A/ →/ Rd/ _/ B/ 和/ Wr/ _/ B/ →/ Wr/ _/ A/ 属于/ 默认/ 的/ 程序/ 序/ 引起/ 的/ 依赖/ 关系/ ,/ 而/ Rd/ _/ A/ →/ Wr/ _/ A/ 与/ Rd/ _/ B/ →/ Wr/ _/ B/ 属于/ 处理器/ 间/ 的/ 访存/ 依赖/ ./ 根据/ 访存/ 依赖/ 关系/ 的/ 传递/ 依赖/ 原则/ ,/ 虚线/ 表示/ 的/ 依赖/ 关系/ 可以/ 通过/ 另外/ 3/ 条/ 实线/ 表示/ 的/ 依赖/ 关系/ 推导/ 得出/ ,/ 因而/ 不/ 需要/ 记录/ 该/ 依赖/ 关系/ Rd/ _/ A/ →/ Wr/ _/ A/ ./ 基于/ 传递/ 关系/ 的/ 约/ 减/ 方法/ 采用/ 点到点/ 的/ 格式/ 保存/ 依赖/ 关系/ ./ 这种/ 格式/ 可以/ 精确/ 地/ 还原/ 依赖/ 关系/ ,/ 不会/ 引入/ 顺序/ 化/ ,/ 因此/ 最大/ 程度/ 地/ 保存/ 了/ 重放/ 并行度/ ./ 但是/ ,/ 该/ 方法/ 其/ 对/ 日志/ 的/ 约/ 减/ 效果/ 不好/ ,/ 其/ 原因/ 有/ 两点/ :/ (/ 1/ )/ 该/ 方法/ 保存/ 依赖/ 关系/ 的/ 数据结构/ 复杂/ ,/ 保存/ 的/ 每个/ 依赖/ 项/ 都/ 由/ 4/ 个域/ 组成/ ,/ 它们/ 分别/ 是/ 源/ 处理器/ 的/ 标识符/ 、/ 源/ 处理器/ 的/ 逻辑/ 时间/ 、/ 目标/ 处理器/ 的/ 标识符/ 和/ 目标/ 处理器/ 的/ 逻辑/ 时间/ ./ 如图/ 1/ 所示/ ,/ 日志/ 项/ 格式/ 为/ CoreID/ (/ Rd/ _/ B/ )/ ,/ LogicTime/ (/ Rd/ _/ B/ )/ ,/ CoreID/ (/ Wr/ _/ B/ )/ ,/ LogicTime/ (/ Wr/ _/ B/ )/ ./ (/ 2/ )/ 该/ 约/ 减/ 方法/ 保存/ 的/ 是/ 两/ 两/ 处理器/ 之间/ 的/ 关系/ ,/ 故/ 只能/ 适用/ 于/ 两/ 两/ 处理器/ 之间/ 的/ 约/ 减/ ,/ 不能/ 扩展/ 到/ 更/ 多处理器/ ./ 第/ 2/ 类/ 方法/ 通过/ 建立/ 动态/ 指令/ 片段/ 来/ 约/ 减访存/ 依赖/ [/ 11/ -/ 14/ ]/ ./ 该/ 方法/ 通过/ 访存/ 地址/ 签名/ 管理/ 一段时间/ 内/ 不/ 与/ 外界/ 通信/ 的/ 访存/ 指令/ 的/ 地址/ ,/ 并且/ 通过/ 该/ 签名/ 检测/ 这/ 段/ 动态/ 指令/ 是否/ 与/ 外界/ 发生/ 通信/ ./ 如果/ 有/ Page4/ 通信/ 发生/ ,/ 则/ 该/ 方法/ 保存/ 动态/ 指令/ 片段/ 包含/ 的/ 访存/ 指令/ 数/ 与/ Lamport/ 时钟/ [/ 18/ ]/ ./ 如图/ 2/ 所示/ ,/ 当/ 执行/ 访存/ 操作/ Wr/ _/ C/ 时/ ,/ 因为/ 依赖/ 关系/ Wr/ _/ A/ →/ Rd/ _/ A/ 的/ 存在/ ,/ 签名/ 集合/ 中/ 的/ 操作/ Rd/ _/ C/ 已经/ 被/ 删除/ ,/ 因此/ 不能/ 检测/ 到/ 依赖/ 关系/ Rd/ _/ C/ →/ Wr/ _/ C/ ./ 也就是说/ ,/ 虚线/ 表示/ 的/ 依赖/ 关系/ Rd/ _/ C/ →/ Wr/ _/ C/ ,/ 可以/ 通过/ 另外/ 5/ 条/ 依赖/ 推导/ 得出/ ,/ 即/ Rd/ _/ C/ →/ Wr/ _/ A/ →/ Rd/ _/ A/ →/ Rd/ _/ B/ →/ Wr/ _/ B/ →/ Wr/ _/ C/ / Rd/ _/ C/ →/ Wr/ _/ C/ ./ 由/ 上述/ 过程/ 可以/ 看出/ ,/ 该类/ 方法/ 可以/ 取得/ 更好/ 的/ 约/ 减/ 效果/ ,/ 主要/ 有/ 以下/ 3/ 个/ 原因/ :/ (/ 1/ )/ 日志/ 格式/ 短/ ,/ 每个/ 日志/ 项仅/ 需要/ 保存/ 该段/ 动态/ 指令/ 的/ 指令/ 数/ 与/ Lamport/ 时钟/ ;/ (/ 2/ )/ 一个/ 日志/ 项/ 可以/ 表示/ 一段/ 动态/ 指令/ 内部/ 的/ 多条/ 点到点/ 依赖/ 关系/ ;/ (/ 3/ )/ 基于/ Lamport/ 时钟/ 的/ 约/ 减/ ,/ 可以/ 将/ 传递/ 约/ 减/ 应用/ 到/ 多个/ 处理器/ 之间/ ,/ 提高/ 约/ 减/ 效率/ ./ 然而/ ,/ 该/ 方法/ 约/ 减/ 日志/ 开销/ 的/ 同时/ ,/ 将/ 记录/ 过程/ 中/ 并行执行/ 的/ 指令/ 强制/ 顺序/ 化/ ,/ 限制/ 了/ 重放时/ 的/ 并行度/ ./ 2.2/ 在/ 松弛/ 存储/ 一致性/ 模型/ 上/ 实现/ 重放/ 的/ 方法/ 为了/ 更好/ 地/ 实现/ 访存/ 依赖/ 约/ 减/ ,/ 已有/ 的/ 确定性/ 重/ 放/ 研究/ 工作/ [/ 10/ -/ 15/ ,/ 20/ ]/ 都/ 假设/ 目标/ 系统/ 采用/ 理想/ 的/ 存储/ 一致性/ 模型/ ,/ 即/ 顺序/ 一致性/ 模型/ ./ 然而/ ,/ 在/ 真实/ 的/ 处理器/ 设计/ 中/ 考虑/ 到/ 性能/ 的/ 因素/ ,/ 松弛/ 存储/ 一致性/ 模型/ 被/ 广泛/ 地/ 采用/ ./ 因此/ ,/ 近期/ 越来越/ 多/ 的/ 研究/ 工作/ 开始/ 关注/ 在/ 松弛/ 存储/ 一致性/ 模型/ 中/ 支持/ 确定性/ 重/ 放/ [/ 6/ -/ 9/ ]/ ./ 文献/ [/ 6/ ,/ 8/ ]/ 提出/ 的/ 方法/ ,/ 能够/ 在/ 支持/ TSO/ (/ TotalStoreOrder/ )/ 存储/ 一致性/ 模型/ 的/ 处理器/ 中/ 实现/ 确定性/ 重放/ ./ 该/ 方法/ 通过/ 记录/ 读/ 操作/ 的/ 返回值/ 来/ 避免/ 重放时/ 的/ 死锁/ 问题/ ./ 文献/ [/ 7/ ]/ 利用/ 指令/ 窗口/ 的/ 概念/ ,/ 首次/ 在/ TSO/ 存储/ 一致性/ 模型/ 上/ 支持/ 基于/ 动态/ 指令/ 片段/ 的/ 访存/ 依赖/ 记录/ 方法/ ,/ 该/ 方法/ 在/ 动态/ 指令/ 窗口/ 结束/ 时/ 记录/ 未/ 完成/ 的/ 写/ 访存/ 操作/ 数量/ ,/ 来/ 避免/ 重放时/ 的/ 死锁/ 问题/ ./ 文献/ [/ 9/ ]/ 是/ 在/ 文献/ [/ 12/ ]/ 的/ 基础/ 上/ 进行/ 的/ 扩展/ ,/ 该/ 方法/ 支持/ 多种/ 松弛/ 存储/ 一致性/ 模型/ ,/ 不仅/ 限于/ TSO/ (/ TotalStoreOrder/ )/ 存储/ 一致性/ 模型/ ./ 然而/ 在/ 文献/ [/ 9/ ]/ 中/ ,/ 仅/ 简单/ 地/ 指出/ 支持/ 多种/ 松弛/ 存储/ 一致性/ 模型/ ,/ 并/ 没有/ 对/ 松弛/ 存储/ 一致性/ 模型/ 进行/ 严格/ 的/ 定义/ ./ 在/ 文献/ [/ 8/ ]/ 中/ ,/ 没有/ 给出/ 支持/ 松弛/ 存储/ 一致性/ 模型/ 的/ 具体/ 实现/ ./ 与/ 已有/ 工作/ 不同/ ,/ 本文/ 的/ 方法/ 支持/ 维护/ 弱/ 写/ 原子/ 性/ 的/ 松弛/ 存储/ 一致性/ 模型/ ,/ 对/ 适用/ 的/ 模型/ 的/ 定义/ 更加/ 准确/ ,/ 同时/ 详细/ 讨论/ 了/ 在/ 该类/ 存储/ 模型/ 上/ 的/ 实现/ ./ 写/ 原子/ 性/ 在/ 现代/ 处理器/ 中/ 通过/ 缓存/ 一致性/ 协议/ 保证/ ,/ 然而/ 为了/ 获取/ 更/ 高/ 的/ 性能/ ,/ 在/ 实现/ 中/ 往往/ 实现/ 了/ 弱/ 写/ 原子/ 性/ 的/ 松弛/ 存储/ 一致性/ 模型/ ,/ 弱/ 写/ 原子/ 性是/ 指/ 在/ 写/ 操作/ 全局/ 可见/ 之前/ 读/ 操作/ 可以/ 提前/ 读/ 到/ 本地/ 的/ 写/ 操作/ ,/ 例如/ 写/ 缓存/ 中/ 的/ 数据/ 在/ 维护/ 缓存/ 一致性/ 之前/ ,/ 本地/ 的/ 读/ 操作/ 就/ 可以/ 读取/ ./ 文献/ [/ 21/ -/ 22/ ]/ 指出/ 弱/ 写/ 原子/ 性/ 在/ 现代/ 处理器/ 中/ 得到/ 了/ 广泛/ 的/ 支持/ ,/ 如/ ARM/ 、/ X86/ 、/ SPARC/ 和/ PowerPC/ 等/ ./ 3/ 访存/ 依赖/ 约/ 减/ 方法/ 并行程序/ 的/ 不确定性/ 事件/ 主要/ 分成/ 两类/ ,/ 外部/ 的/ 不确定性/ 与/ 访存/ 顺序/ 的/ 不确定性/ ./ 其中/ ,/ 外部/ 的/ 不确定性/ 事件/ 在/ 串行/ 程序/ 中/ 同样/ 存在/ ,/ 在/ 并行程序/ 出现/ 之前/ 就/ 引起/ 了/ 研究/ 人员/ 的/ 关注/ ,/ 目前/ 的/ 软件/ 方法/ 可以/ 很/ 好地解决/ 此类/ 不确定性/ ./ 然而/ ,/ 并行程序/ 中/ 的/ 访存/ 顺序/ 的/ 不确定性/ ,/ 尤其/ 当/ 并行程序/ 在/ 多/ 核/ 处理器/ 上/ 执行/ 时/ ,/ 此类/ 不确定性/ 事件/ 隐含/ 在/ 内存/ 数据/ 交互/ 当中/ ,/ 其/ 发生/ 的/ 频率/ 高且/ 难以/ 检测/ ./ 为此/ ,/ 访存/ 依赖/ 的/ 记录/ 与/ 约/ 减/ 受到/ 研究/ 人员/ 的/ 广泛/ 关注/ [/ 6/ ,/ 10/ -/ 14/ ]/ ./ 针对/ 已有/ 的/ 记录/ 方法/ 日志/ 开销/ 大/ 的/ 问题/ ,/ 本文/ 利用/ 访存/ 指令/ 逻辑/ 时间/ 之间/ 的/ 优先/ 关系/ ,/ 提出/ 了/ 建立/ 全局/ 逻辑/ 时间/ 约/ 减访存/ 依赖/ 的/ 方法/ ./ 3.1/ 基于/ 逻辑/ 时间/ 约/ 减访存/ 依赖/ 的/ 方法/ 如图/ 3/ 所示/ ,/ 箭头/ Rd/ _/ A/ →/ Wr/ _/ A/ 表示/ 的/ 是/ 基于/ 缓存/ 一致性/ 协议/ 检测/ 到/ 的/ 一对/ 访存/ 依赖/ ./ 在/ 物理/ 时间/ 上/ 一定/ 满足/ Time/ (/ Rd/ _/ A/ )/ </ Time/ (/ Wr/ _/ A/ )/ ./ 如果/ 在/ 每个/ 时钟/ 周期/ 执行/ 的/ 访存/ 指令/ 数/ (/ MemoryInstructionPerCycle/ ,/ MIPC/ )/ 接近/ 的/ 处理器/ 中/ ,/ 可以/ 得出/ 这/ 两条/ 指令/ 的/ 访存/ 指令/ 数/ (/ MemoryInstructionCounter/ ,/ MIC/ )/ 满足/ MIC/ (/ Rd/ _/ A/ )/ </ MIC/ (/ Wr/ _/ A/ )/ ./ 本文/ 中/ 的/ 逻辑/ 时间/ 通过/ 访存/ 指令/ 数/ 表示/ ./ Page5/ 基于/ 此/ 观察/ ,/ 本文/ 提出/ 了/ 基于/ 逻辑/ 时间/ 的/ 访存/ 依赖/ 约/ 减/ 方法/ ./ 方法/ 要求/ :/ 当/ 检测/ 到/ 一对/ 访存/ 依赖/ X/ →/ Y/ 时/ ,/ 如果/ 满足/ 约/ 减/ 条件/ MIC/ (/ X/ )/ </ MIC/ (/ Y/ )/ ,/ 则/ 认为/ 该/ 访存/ 依赖/ 隐含/ 在/ 逻辑/ 时间/ 之间/ 的/ 序/ 关系/ 当中/ ./ 如图/ 3/ 所示/ ,/ 执行/ 指令/ Rd/ _/ A/ 的/ 逻辑/ 时间/ 为/ 30/ ,/ 执行/ 指令/ Wr/ _/ A/ 的/ 逻辑/ 时间/ 为/ 65/ ,/ 访存/ 依赖/ Rd/ _/ A/ →/ Wr/ _/ A/ 满足/ 约/ 减/ 条件/ MIC/ (/ Rd/ _/ A/ )/ </ MIC/ (/ Wr/ _/ A/ )/ ,/ 因此/ 访存/ 依赖/ Rd/ _/ A/ →/ Wr/ _/ A/ 可以/ 被/ 约/ 减/ ./ 3.2/ 建立/ 全局/ 同步/ 的/ 逻辑/ 时间/ 的/ 方法/ 根据/ 3.1/ 节/ 描述/ 的/ 访存/ 依赖/ 约/ 减/ 方法/ ,/ 可知/ 处理器/ 间/ 的/ MIPC/ 是否/ 同步/ 会/ 直接/ 影响/ 访存/ 依赖/ 的/ 约/ 减/ 效果/ ./ 具体来说/ ,/ 当/ 一对/ 访存/ 依赖/ X/ →/ Y/ 发生/ 时/ ,/ 在/ 存储/ 端/ 可以/ 观察/ 到/ 执行/ 这/ 两条/ 访存/ 指令/ 的/ 物理/ 时间/ 满足/ Time/ (/ X/ )/ </ Time/ (/ Y/ )/ ./ 如果/ 执行/ 他们/ 的/ 处理器/ 之间/ 的/ 访存/ 执行/ 速度/ (/ MIPC/ )/ 接近/ ,/ 则/ 该/ 依赖/ 一定/ 满足/ 约/ 减/ 条件/ MIC/ (/ X/ )/ </ MIC/ (/ Y/ )/ ,/ 访存/ 依赖/ X/ →/ Y/ 可以/ 被/ 约/ 减/ ./ 然而/ 在/ 真实/ 的/ 系统/ 中/ ,/ 由于/ 缓存/ 命中率/ 、/ 分支/ 预测/ 准确率/ 等/ 因素/ 的/ 影响/ ,/ 处理器/ 之间/ 执行/ 访存/ 的/ 速度/ (/ MIPC/ )/ 往往/ 不同/ ./ 本文/ 将/ 不同/ 处理器/ 执行/ 的/ 访存/ 指令/ 的/ 数值/ 差记/ 为/ δ/ MIC/ ./ 随着/ 执行/ 的/ 推进/ ,/ 处理/ 核间/ 的/ δ/ MIC/ 逐渐/ 累加/ ,/ 导致/ 物理/ 时间/ 小/ 的/ 访存/ 指令/ ,/ 反而/ MIC/ 值/ 更/ 大/ ./ 如图/ 4/ 所示/ ,/ 对于/ 访存/ 依赖/ Wr/ _/ A/ →/ Rd/ _/ A/ ./ 尽管/ 访存/ 依赖/ 的/ 物理/ 时间/ 上/ 满足/ Time/ (/ Wr/ _/ A/ )/ </ Time/ (/ Rd/ _/ A/ )/ ,/ 但/ 逻辑/ 时间/ 上/ 不/ 满足/ 约/ 减/ 条件/ MIC/ (/ Wr/ _/ A/ )/ </ MIC/ (/ Rd/ _/ A/ )/ ,/ 因此/ 基于/ 逻辑/ 时间/ 的/ 方法/ 不能/ 约/ 减该/ 访存/ 依赖/ ./ 同理/ 图/ 4/ 中/ ,/ 所有/ 的/ 访存/ 依赖/ 都/ 不能/ 被/ 约/ 减/ ./ 图/ 4/ 不/ 同步/ 的/ 逻辑/ 时间/ 导致/ 大量/ 的/ 访存/ 依赖/ 无法/ 约/ 减/ 为了/ 取得/ 更好/ 的/ 约/ 减/ 效果/ ,/ 本文/ 提出/ 一种/ 懒惰/ 同步/ 逻辑/ 时钟/ 的/ 方法/ ,/ 该/ 方法/ 在/ 保证/ 所有/ 访存/ 依赖/ 关系/ 均/ 可/ 约/ 减/ 的/ 同时/ ,/ 不会/ 引入/ 大量/ 的/ 日志/ 开销/ ./ 懒惰/ 的/ 逻辑/ 时间/ 同步/ 要求/ :/ 当且/ 仅/ 当/ 检测/ 到/ 一对/ 访存/ 依赖/ 不能/ 被/ 约/ 减时/ ,/ 才/ 将/ 发生/ 依赖/ 的/ 两/ 处理器/ 的/ 逻辑/ 时钟/ 进行/ 同步/ ./ 如图/ 5/ 所示/ ,/ 处理器/ 0/ 收到/ 处理器/ 1/ 发起/ 的/ 请求/ 消息/ 后/ ,/ 处理器/ 0/ 检测/ 到/ 一对/ 访存/ 依赖/ Rd/ _/ A/ →/ Wr/ _/ A/ ./ 从图/ 中/ 可以/ 看出/ ,/ 该/ 访存/ 依赖/ 的/ 逻辑/ 时间/ 不/ 满足/ 约/ 减/ 条件/ MIC/ (/ Rd/ _/ A/ )/ </ MIC/ (/ Wr/ _/ A/ )/ ./ 为了/ 使/ 后续/ 的/ 访存/ 依赖/ 可以/ 被/ 约/ 减/ ,/ 在/ 检测/ 到/ 不能/ 约/ 减/ 的/ 访存/ 依赖/ Rd/ _/ A/ →/ Wr/ _/ A/ 时/ ,/ 同步/ 处理器/ 0/ 与/ 处理器/ 1/ 的/ 逻辑/ 时钟/ ./ 同步操作/ 要求/ ,/ 处理器/ 0/ 在/ 应答/ 消息/ 中/ 携带/ 其/ 当前/ 的/ 逻辑/ 时间/ ,/ 处理器/ 1/ 在/ 收到/ 应答/ 消息/ 后/ ,/ 根据/ 消息/ 中/ 的/ 逻辑/ 时间/ ,/ 执行/ 逻辑/ 时间/ 同步操作/ ./ 此外/ ,/ 从图/ 5/ 可以/ 看出/ 时钟/ 同步/ 信息/ 依赖/ 确认/ 消息/ ./ 然而/ 并非/ 所有/ 的/ 缓存/ 一致性/ 协议/ 都/ 支持/ 确认/ 消息/ ,/ 如/ 侦听/ 协议/ ./ 为此/ ,/ 本/ 节/ 分别/ 针对/ 目录/ 协议/ 与/ 侦听/ 协议/ ,/ 提出/ 了/ 两种/ 逻辑/ 时钟/ 同步/ 策略/ :/ 基于/ 应答/ 消息/ 的/ 同步/ 与/ 基于/ 请求/ 消息/ 的/ 同步/ ./ 3.2/ ./ 1/ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ 该/ 同步/ 方法/ 主要/ 用于/ 存在/ 显式/ 确认/ 消息/ 的/ 缓存/ 一致性/ 协议/ 中/ ,/ 如/ 基于/ 目录/ 的/ 协议/ ,/ 具体/ 算法/ 如/ 算法/ 1/ 所示/ ./ 该/ 方法/ 的/ 基本/ 思想/ 是/ :/ 在/ 收到/ 一致性/ 请求/ 算法/ 1/ ./ 基于/ 应答/ 消息/ 的/ 同步/ 算法/ ./ CMIC/ :/ CurrentMemoryInstructionCountinlocalRMIC/ :/ MICinrequestmessageXMIC/ :/ MICinresponsemessageAHMIC/ :/ MICinlocalaccesshistoryOnreceivingcoherencerequestforblockb/ {/ 1/ ./ Receive/ (/ b/ ,/ RMIC/ )/ 2/ ./ GetAHMICaboutb/ ;/ 3/ ./ If/ !/ exist/ (/ AHMICaboutb/ )/ 4/ ./ AHMIC/ =/ CMIC/ ;/ 5/ ./ CompareAHMICwithRMIC6/ ./ If/ (/ AHMIC/ >/ =/ RMIC/ )/ 7/ ./ Sendreplywith/ (/ CMIC/ )/ ;/ 8/ ./ Else9/ ./ Sendreplynormally/ ;/ }/ Onreceivingcoherencereplyforblockb/ {/ 10/ ./ Receive/ (/ b/ ,/ XMIC/ )/ ;/ 11/ ./ Ifexist/ (/ XMIC/ )/ Page612/ ./ Log/ (/ CMIC/ ,/ XMIC/ -/ CMIC/ )/ ;/ 13/ ./ UpdateCMIC/ =/ XMIC/ ;/ }/ Oncommittinginstructionsforblockb/ {/ 14/ ./ UpdateAHMICwithCMIC/ ;/ }/ 消息/ 时/ ,/ 利用/ 消息/ 内/ 的/ 访存/ 地址/ 进行/ 访存/ 冲突检测/ ,/ 如果/ 检测/ 到访/ 存/ 依赖/ 且/ 该/ 依赖/ 不能/ 通过/ 逻辑/ 时间/ 的/ 序/ 关系/ 进行/ 约/ 减/ ,/ 则/ 在/ 应答/ 消息/ 中/ 携带/ 应答/ 方/ 的/ 逻辑/ 时间/ (/ 访存/ 指令/ 数/ )/ (/ 语句/ 1/ ~/ 语句/ 9/ )/ ./ 在/ 请求/ 方/ 收到/ 应答/ 消息/ 时/ ,/ 如果/ 消息/ 中/ 要求/ 更新/ 请求/ 方/ 逻辑/ 时钟/ ,/ 则/ 请求/ 方/ 更新/ 逻辑/ 时钟/ ,/ 同时/ 在/ 日志/ 中/ 记录/ 访存/ 依赖/ (/ 语句/ 10/ ~/ 语句/ 13/ )/ ./ 当/ 处理器/ 提交/ 访存/ 指令/ 时/ ,/ 更新/ 本地/ 存储/ 中/ 的/ 逻辑/ 时间/ (/ 语句/ 14/ )/ ./ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ 执行/ 过程/ ,/ 如图/ 6/ (/ a/ )/ 和表/ 1/ (/ a/ )/ ./ 具体/ 的/ 步骤/ 为/ :/ ①/ 处理器/ 0/ 执行/ 读访存/ 操作/ Rd/ _/ A/ ;/ ②/ 处理器/ 1/ 执行/ 写/ 访存/ 操作/ Wr/ _/ A/ ./ 为了/ 维护/ 缓存/ 的/ 一致性/ ,/ 处理器/ 1/ 向/ 处理器/ 0/ 发送/ 请求/ 消息/ (/ 该/ 消息/ 用来/ 无效/ 处理器/ 0/ 缓存/ 的/ 地址/ A/ 的/ 数据/ )/ ,/ 处理器/ 1/ 在/ 消息/ 中负载/ 逻辑/ 时间/ 30/ (/ MIC/ =/ 30/ )/ ;/ ③/ 当/ 处理器/ 0/ 收到/ 请求/ 消息/ 以后/ ./ 首先/ ,/ 进行/ 访存/ 冲突/ 检查/ ,/ 并/ 检测/ 到访/ 存/ 依赖/ Rd/ _/ A/ →/ Wr/ _/ A/ ;/ 然后/ ,/ 比较/ 访存/ 依赖/ 之间/ 的/ 逻辑/ 时间/ (/ MIC/ (/ Rd/ _/ A/ )/ =/ 90/ )/ >/ (/ MIC/ (/ Wr/ _/ A/ )/ =/ 30/ )/ ,/ 得到/ 该/ 访存/ 依赖/ 不/ 满足/ 约/ 减条表/ 1/ 逻辑/ 时钟/ 同步/ 策略/ (/ a/ )/ 基于/ 应答/ 消息/ 的/ 同步/ 处理器/ 核/ 0/ 执行/ 读/ 操作/ Rd/ _/ A30y/ :/ Wr/ _/ A/ 处理器/ 核/ 1/ 提交/ 写/ 操作/ Wr/ _/ A/ 处理器/ 核/ 0/ 收到/ 请求/ 消息/ ,/ 检测/ 到访/ 存/ 依赖/ x/ →/ y/ ,/ 并且/ MIC/ (/ x/ )/ >/ MIC/ (/ y/ )/ 处理器/ 核/ 1/ 收到/ 应答/ 消息/ ,/ 根据/ 消息/ 中/ 携带/ 的/ 逻辑/ 时间/ 同步/ 本地/ 时间/ ,/ 同时/ 记录/ 同步/ 信息/ (/ MIC/ =/ 30/ ,/ Offset/ =/ 66/ )/ (/ b/ )/ 基于/ 请求/ 消息/ 的/ 同步/ 30y/ :/ Wr/ _/ A/ 处理器/ 核/ 1/ 提交/ 写/ 操作/ Wr/ _/ A/ 步骤/ 190x/ :/ Rd/ _/ A2396/ 收到/ 请求/ 消息/ 4/ 步骤/ 190x/ :/ Rd/ _/ A23453/ ./ 2.2/ 基于/ 请求/ 消息/ 的/ 同步/ 策略/ 该/ 同步/ 方法/ 主要/ 用于/ 不/ 存在/ 显式/ 确认/ 消息/ 的/ 缓存/ 一致性/ 协议/ 中/ ,/ 如/ 基于/ 共享/ 总线/ 的/ 侦听/ 协议/ ,/ 具体/ 算法/ 如/ 算法/ 2/ 所示/ ./ 该/ 方法/ 的/ 基本/ 思想/ :/ 总线/ 上/ 所有/ 件/ ;/ 最后/ ,/ 处理器/ 0/ 回复/ 应答/ 消息/ ,/ 并/ 负载/ 当前/ 逻辑/ 时钟/ 96/ (/ MIC/ =/ 96/ )/ ;/ ④/ 处理器/ 1/ 在/ 收到/ 应答/ 消息/ 以后/ ./ 首先/ ,/ 读取/ 消息/ 中/ 的/ 逻辑/ 时间/ (/ XMIC/ =/ 96/ )/ ;/ 然后/ ,/ 保存/ 同步/ 逻辑/ 时间/ 的/ 信息/ (/ MIC/ =/ 30/ ,/ Offset/ =/ 66/ )/ ;/ 最后/ ,/ 将/ 本地/ 的/ 逻辑/ 时钟/ 同步/ 到/ 96/ ./ 其中/ ,/ 同步/ 偏移/ 的/ 计算方法/ 为/ Offset/ =/ XMIC/ -/ MIC/ (/ 处理器/ 1/ )/ ./ 处理器/ 核/ 0/ 执行/ 读/ 操作/ Rd/ _/ A/ (/ 50/ )/ ,/ 若/ 该值/ 小于/ 请求/ 消息/ 中/ 的/ 值/ ,/ 则/ 将/ 其/ 更新/ 为/ 90/ 处理器/ 核/ 1/ 读取/ 地址/ A/ 侦听/ 到/ 的/ 最大/ 逻辑/ 时间/ (/ 90/ )/ ,/ 与/ 当前/ 执行/ 写/ 操作/ 的/ 逻辑/ 时间/ (/ 30/ )/ 进行/ 比较/ ,/ 因为/ 90/ >/ 30/ ,/ 则/ 更新/ 当前/ 的/ 逻辑/ 时间/ 为/ 91/ ./ 处理器/ 核/ 1/ 发出请求/ ,/ 携带/ 逻辑/ 时间/ 91/ 的/ 访存/ 请求/ 被/ 侦听/ (/ 语句/ 1/ )/ ,/ 并/ 在/ 本地/ 缓存/ 中/ 保存/ 侦听/ 到/ 的/ 每个/ 缓存/ 块/ 的/ 被/ 访问/ 的/ 最大/ 逻辑/ 时间/ (/ 语句/ 2/ )/ ./ 当/ 本地/ 发起/ 数据/ 请求/ 时/ ,/ 读取/ 缓存/ 中/ 对应/ 数据/ 的/ 逻辑/ 时间/ (/ 语句/ 3/ )/ ,/ 与/ 本地/ 当前/ 逻辑/ 时间/ 做/ 比较/ (/ 语句/ Page74/ )/ ,/ 如果/ 本地/ 逻辑/ 时间/ 较大/ ,/ 则/ 不作/ 处理/ ,/ 如果/ 缓存/ 中/ 保存/ 的/ 逻辑/ 时间/ 较大/ ,/ 则/ 更新/ 本地/ 逻辑/ 时间/ ,/ 并/ 将/ 本次/ 更新/ 保存/ 到/ 日志/ 中/ (/ 语句/ 5/ ~/ 语句/ 9/ )/ ./ 请求/ 消息/ 中/ 携带/ 最大/ 的/ 逻辑/ 时间/ (/ 语句/ 10/ )/ ./ 算法/ 2/ ./ 基于/ 请求/ 消息/ 的/ 同步/ 算法/ ./ CMIC/ :/ CurrentMemoryInstructionCountinlocalRMIC/ :/ MICinrequestmessageSHMIC/ :/ LargestMICinsnoopinghistoryOnreceivingcoherencerequestforblockb/ {/ 1/ ./ Receive/ (/ b/ ,/ RMIC/ )/ ;/ 2/ ./ UpdateSHMIConb/ ,/ SHMIC/ =/ max/ (/ SHMIC/ ,/ }/ Onsendingcoherencerequestforblockb/ {/ 3/ ./ GetSHMICaboutb/ ;/ 4/ ./ CompareSHMICwithCMIC/ ;/ 5/ ./ If/ (/ SHMIC/ >/ CMIC/ )/ 6/ ./ Log/ (/ CMIC/ ,/ SHMIC/ -/ CMIC/ )/ ;/ 7/ ./ CMIC/ =/ SHMIC8/ ./ RMIC/ =/ CMIC/ ;/ 9/ ./ Endif10/ ./ Send/ (/ b/ ,/ RMIC/ )/ }/ 基于/ 请求/ 消息/ 的/ 同步/ 策略/ 执行/ 过程/ ,/ 如图/ 6/ (/ b/ )/ 和表/ 1/ (/ b/ )/ ./ 具体/ 的/ 步骤/ 为/ :/ ①/ 处理器/ 0/ 执行/ 读访存/ 操作/ ,/ 携带/ 逻辑/ 时间/ 90/ (/ RMIC/ =/ 90/ )/ ;/ ②/ 处理器/ 1/ 侦听/ 到/ 的/ 请求/ ,/ 将/ 请求/ 中/ 的/ 逻辑/ 时间/ 与/ 本地/ 侦听/ 历史/ 中/ 保存/ 的/ 地址/ A/ 的/ 逻辑/ 时间/ (/ 50/ )/ 进行/ 比较/ ,/ 请求/ 中/ 的/ 逻辑/ 时间/ 大于/ 本地/ 侦听/ 历史/ 保存/ 的/ 逻辑/ 时间/ ,/ 则/ 更新/ 侦听/ 历史/ 的/ 逻辑/ 时间/ 到/ 90/ ;/ ③/ 处理器/ 1/ 发起/ 写/ 操作/ ;/ ④/ 处理器/ 1/ 读取/ 侦听/ 历史/ 中/ 的/ 逻辑/ 时间/ 90/ ,/ 而/ 当前/ 执行/ 写/ 操作/ 的/ 逻辑/ 时间/ 为/ 30/ ,/ 通过/ 比较/ 可知/ ,/ 侦听/ 历史/ 中/ 的/ 逻辑/ 时间/ 更大/ ,/ 则/ 更新/ 写/ 操作/ 的/ 逻辑/ 时间/ 到/ 91/ ;/ ⑤/ 处理器/ 1/ 发出请求/ ,/ 携带/ 逻辑/ 时间/ 91.3/ ./ 3/ 支持/ 松弛/ 存储/ 一致性/ 模型/ 多数/ 确定性/ 重放/ 的/ 研究/ 工作/ 都/ 假设/ 目标/ 系统/ 采用/ 顺序/ 一致性/ 模型/ 来/ 简化/ 设计方案/ ./ 然而/ ,/ 在/ 真实/ 的/ 处理器/ 中多/ 采用/ 松弛/ 存储/ 一致性/ 模型/ ./ 为此/ ,/ 本/ 节/ 详细/ 讨论/ 了/ 松弛/ 存储/ 一致性/ 模型/ 对/ 重放/ 的/ 影响/ ,/ 以及/ 如何/ 在/ 松弛/ 存储/ 一致性/ 模型/ 上/ 检测/ 并/ 记录/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 访存/ 行为/ ./ 3.3/ ./ 1/ 松弛/ 存储/ 一致/ 模型/ 对/ 重放/ 的/ 影响/ 本节/ 以/ TSO/ (/ TotalStoreOrder/ )/ 存储/ 一致性/ 模型/ 为例/ ,/ 说明/ 在/ 保证/ 写/ 原子/ 性/ 的/ 松弛/ 存储/ 一致性/ 模型/ 中/ ,/ 乱序执行/ 如何/ 造成/ 重放/ 的/ 死锁/ 问题/ ./ 在/ TSO/ 存储/ 一致性/ 模型/ 下/ ,/ 图/ 7/ 给出/ 了/ 处理器/ 0/ 与/ 处理器/ 1/ 的/ 程序/ 片段/ ,/ 表/ 2/ 给出/ 了/ 一次/ 具体/ 的/ 执行/ 顺序/ ,/ 执行/ 步骤/ 为/ :/ ①/ 处理器/ 0/ 执行/ 访存/ 操作/ Wr/ _/ A/ =/ 1/ ,/ 该/ 访存/ 操作/ 在/ 引退/ 之后/ ,/ 并/ 没有/ 提交/ 到/ 存储系统/ ,/ 而是/ 缓存/ 在/ 写/ 缓存/ 当中/ ;/ ②/ 处理器/ 0/ 执行/ 访存/ 操作/ Rd/ _/ B/ (/ 0/ )/ ,/ 并读/ 到/ 地址/ B/ 的/ 旧值/ 0/ ;/ ③/ 处理器/ 1/ 执行/ 访存/ 操作/ Wr/ _/ B/ =/ 1/ ,/ 该/ 访存/ 操作/ 立即/ 提交/ 到/ 存储系统/ 当中/ ;/ ④/ 处理器/ 0/ 收到/ 地址/ B/ 的/ 使/ 无效/ 操作/ ReceiveINV/ (/ B/ )/ ,/ 该/ 消息/ 无效/ 本地/ 缓存/ 的/ B/ 的/ 旧值/ ;/ ⑤/ 处理器/ 1/ 的/ 读/ 操作/ Rd/ _/ A/ (/ 0/ )/ ,/ 并读/ 到/ 地址/ A/ 的/ 旧值/ 0/ ;/ ⑥/ 处理器/ 1/ 收到/ 地址/ A/ 的/ 使/ 无效/ 操作/ ReceiveINV/ (/ A/ )/ ,/ 此时/ 处理器/ 0/ 将/ 访存/ 操作/ Wr/ _/ A/ =/ 1/ 提交/ 到/ 存储系统/ 当中/ ./ 表/ 2TSO/ 存储/ 模型/ 下/ 的/ 执行/ 过程/ (/ 初始化/ 犃/ =/ 0/ ,/ 犅/ =/ 0/ )/ ①/ Wr/ _/ A/ =/ 1/ ②/ Rd/ _/ B/ (/ 0/ )/ ③/ ④/ Receive/ ⑤/ ⑥/ 根据上述/ 执行/ 顺序/ ,/ 建立/ 了/ 如图/ 7/ 所示/ 的/ 访存/ 依赖/ 关系/ 1/ :/ Rd/ _/ A/ →/ 0/ :/ Wr/ _/ A/ 与/ 0/ :/ Rd/ _/ B/ →/ 1/ :/ Wr/ _/ B/ ./ 在/ 重放/ 过程/ 中/ ,/ 根据/ 记录/ 的/ 访存/ 依赖/ 关系/ 与/ 默认/ 的/ 程序/ 序/ ,/ 便/ 产生/ 了/ 图/ 7/ 中/ 的/ 死锁/ 问题/ ,/ 0/ :/ Wr/ _/ A/ →/ 0/ :/ Rd/ _/ B/ →/ 1/ :/ Wr/ _/ B/ →/ 1/ :/ Rd/ _/ A/ →/ 0/ :/ Wr/ _/ A/ ./ 3.3/ ./ 2/ 记录/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 操作/ 图/ 7/ 死锁/ 问题/ 的/ 存在/ 是因为/ 在/ 程序/ 的/ 执行/ 过程/ 中/ ,/ 程序/ 序/ 0/ :/ Wr/ _/ A/ →/ 0/ :/ Rd/ _/ B/ 没有/ 被/ 遵守/ ,/ 同时/ 该/ 乱序执行/ 表现/ 出/ 了/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 行为/ 特征/ ./ 为了/ 避免/ 重放时/ 的/ 死锁/ 问题/ ,/ 本文/ 记录/ 了/ 程序执行/ 过程/ 中/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 操作/ ./ 为了/ 记录/ 此类/ 乱序/ 操作/ ,/ 本文/ 提出/ 了/ 一种/ 新/ 的/ 日志/ 项/ (/ 指令/ 延迟/ 日志/ 项/ )/ ./ 该/ 日志/ 项是/ 一个二元/ 组/ Page8/ (/ A/ ,/ D/ )/ ,/ 表示/ 指令/ A/ 没有/ 遵守/ 顺序/ 一致性/ 模型/ 中/ 规定/ 的/ 程序/ 序/ ,/ 而是/ 延迟/ 了/ D/ 条/ 指令/ 之后/ 才/ 被/ 执行/ ./ 如图/ 7/ 所示/ ,/ 写/ 访存/ 操作/ Wr/ _/ A/ 在/ 引退/ 之后/ 没有/ 立即/ 提交/ 到/ 存储系统/ 当中/ ,/ 而/ 在/ 访存/ 操作/ Rd/ _/ B/ 引退/ 之后/ 才/ 完成/ 提交/ 操作/ ./ 因此/ 为了/ 记录/ 真实/ 执行/ 过程/ ,/ 需要/ 增加/ 一条/ 延迟/ 日志/ (/ 20/ ,/ 5/ )/ ,/ 其中/ 20/ 是/ 指令/ Wr/ _/ A/ 的/ MIC/ 索引/ ,/ 5/ 表示/ 推迟/ 多少/ 条/ 指令/ 之后/ 执行/ ./ 3.3/ ./ 3/ 检测/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 访存/ 操作/ 在/ 乱序执行/ 的/ 指令/ 窗口/ 当中/ ,/ 程序/ 序/ 的/ 依赖/ 总是/ 从/ 逻辑/ 时间/ 小/ 的/ 指向/ 逻辑/ 时间/ 大/ 的/ 指令/ ./ 根据/ 默认/ 的/ 程序/ 序/ ,/ 可以/ 得出/ 重/ 放/ 死锁/ 的/ 充要条件/ ,/ 如图/ 8/ 所示/ ./ 条件/ 1/ ./ 流水线/ 中/ 存在/ 已经/ 提交/ 但/ 并未/ 引退/ 的/ 指令/ A/ ./ 该/ 指令/ 在/ 引退/ 之前/ ,/ 收到/ 来自/ 访存/ 指令/ M/ 的/ 缓存/ 一致性/ 消息/ ,/ 并且/ 二者/ 存在/ 依赖/ 关系/ ./ 其中/ ,/ 指令/ A/ 占用/ 乱序/ 指令/ 窗口/ 的/ 第/ ROB/ -/ 2/ 项/ ,/ ROB/ 表示/ 乱序/ 指令/ 窗口/ 的/ 项数/ ./ 条件/ 2/ ./ 流水线/ 中/ 存在/ 未/ 提交/ 的/ 访存/ 指令/ B/ ,/ 占用/ 乱序/ 指令/ 窗口/ 的/ 第/ X/ 项/ ./ 该/ 指令/ 与/ 访存/ 指令/ N/ 存在/ 依赖/ 关系/ N/ →/ B/ ,/ 且/ X/ </ ROB/ -/ 2/ ./ 条件/ 3/ ./ 在/ 其他/ 处理器/ 之间/ ,/ 存在/ 访存/ 依赖/ M/ →/ N/ ./ 从/ 上述/ 描述/ 中/ 可以/ 看到/ ,/ 条件/ 3/ 的/ 检测/ 需要/ 从/ 多个/ 处理器/ 核中/ 提取/ 信息/ ,/ 实现/ 硬件/ 开销/ 大/ ./ 为此/ ,/ 本文/ 将/ 条件/ 1/ 与/ 条件/ 2/ 作为/ 检测/ 破坏/ 顺序/ 一致性/ 语义/ 行为/ 的/ 必要条件/ ,/ 当/ 检测/ 到/ 条件/ 1/ 与/ 条件/ 2/ 同时/ 发生/ 时/ ,/ 则/ 认为/ 有/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 行为/ 发生/ ./ 如图/ 8/ 所示/ ,/ 在/ 指令/ 流水线/ 中/ ,/ 访存/ 指令/ A/ 提交/ 到/ 存储系统/ 当中/ 但/ 并未/ 引退/ ,/ 访存/ 指令/ B/ 尚未/ 提交/ 到/ 存储系统/ 当中/ ./ 当访存/ 指令/ B/ 被/ 提交/ 到访/ 存/ 系统/ 时/ ,/ 检测/ 到访/ 存/ 指令/ A/ 已经/ 收到/ 来自/ 指令/ M/ 的/ 缓存/ 一致性/ 消息/ ,/ 则/ 本文/ 的/ 方法/ 认为/ 检测/ 到/ 了/ 破坏/ 顺序/ 一致性/ 语义/ 的/ 行为/ ./ 此时/ ,/ 记录/ 访存/ 指令/ B/ 在/ 程序/ 序/ 的/ 逻辑/ 时间/ 与其/ 被/ 延迟/ 执行/ 的/ 指令/ 条数/ ,/ 表示/ 为/ MIC/ (/ B/ )/ ,/ Offset/ ,/ 其中/ ,/ Offset/ =/ ROB/ -/ 2/ -/ X/ ./ 4/ 约/ 减/ 机制/ 实现/ 与/ 重放/ 算法/ 本/ 节/ 讨论/ 了/ 实现/ 中/ 的/ 具体/ 问题/ ./ 已有/ 的/ 研究/ 工作/ [/ 10/ -/ 11/ ,/ 13/ ,/ 23/ ]/ 对/ 硬件/ 实现/ 确定性/ 记录/ 方法/ 中/ 存在/ 的/ 问题/ (/ 如/ 检查点/ (/ checkpoint/ )/ 实现/ 等/ )/ 进行/ 了/ 详细/ 的/ 讨论/ ./ 本节/ 主要/ 讨论/ 在/ 本文/ 方法/ 的/ 实现/ 过程/ 中/ 所/ 特有/ 的/ 问题/ ./ 4.1/ 利用/ 缓存/ 实现/ 访存/ 依赖/ 检查/ 在/ 基于/ 指令/ 块/ 的/ 确定性/ 记录/ 实现/ [/ 7/ ,/ 9/ ,/ 11/ ,/ 14/ -/ 15/ ]/ 中/ ,/ 多/ 采用/ 签名/ 的/ 方法/ 管理/ 访存/ 地址/ 的/ 集合/ ,/ 同时/ 利用/ 访存/ 指令/ 数/ 管理/ 逻辑/ 时间/ (/ 在/ 本文/ 中将/ 签名/ 与/ 访存/ 指令/ 数/ 统称/ 签名/ 状态/ )/ ./ 然而/ ,/ 在/ 支持/ 松弛/ 存储/ 一致性/ 模型/ 的/ 乱序/ 处理器/ 中/ ,/ 维护/ 签名/ 状态/ 与/ 存储系统/ 的/ 一致/ 是/ 非常复杂/ 的/ ./ 为此/ ,/ 本文/ 中/ 采用/ 基于/ 缓存/ 的/ 检测/ 与/ 记录/ 方法/ ./ 本节/ 以/ 投机/ 的/ 读/ 访存/ 操作/ 为例/ ,/ 说明/ 已有/ 方法/ 在/ 维护/ 签名/ 状态/ 与/ 缓存/ 状态/ 一致/ 时/ 存在/ 的/ 问题/ ./ 文献/ [/ 7/ ]/ 提出/ 在/ 指令/ 的/ 引退/ 阶段/ 修改/ 签名/ 的/ 状态/ ./ 然而/ ,/ 此刻/ 的/ 读/ 操作/ 已经/ 提交/ 到/ 了/ 存储系统/ 当中/ ,/ 因此/ 签名/ 状态/ 落后/ 于/ 缓存/ 状态/ ,/ 基于/ 该/ 签名/ 状态/ 进行/ 访存/ 依赖/ 检查/ 会/ 漏掉/ 依赖/ 关系/ ./ 与/ 之/ 不同/ ,/ 文献/ [/ 11/ ,/ 15/ ]/ 提出/ 在/ 指令/ 的/ 提交/ 阶段/ 修改/ 签名/ 状态/ ./ 尽管/ 该/ 方法/ 能够/ 保持/ 签名/ 状态/ 与/ 缓存/ 状态/ 的/ 一致/ ,/ 但是/ 投机/ 读/ 操作/ 可能/ 被/ 刷掉/ ,/ 当/ 投机/ 读/ 操作/ 被/ 刷掉/ 以后/ ,/ 对/ 签名/ 状态/ 执行/ 删除/ 操作/ 则/ 会/ 影响/ 之前/ 的/ 访存/ 操作/ ,/ 造成/ 签名/ 状态/ 与/ 程序/ 行为/ 的/ 不/ 一致/ ,/ 基于/ 该/ 签名/ 状态/ 同样/ 会/ 漏掉/ 访存/ 依赖/ ./ 鉴于/ 已有/ 方法/ 存在/ 的/ 问题/ ,/ 本文/ 的/ 实现/ 基于/ 缓存/ 进行/ 访存/ 冲突/ 检查/ ./ 实现/ 中/ ,/ 为/ 每个/ 缓存/ 块/ 增加/ 一个/ 域/ 用来/ 保存/ 访问/ 该/ 缓存/ 块/ 的/ 最近/ 一次/ 访存/ 操作/ 对应/ 的/ 逻辑/ 时间/ ,/ 以及/ 一个/ 有效/ 位/ 表示/ 该/ 逻辑/ 时间/ 是否/ 有效/ ./ 访存/ 冲突/ 检查/ 的/ 具体操作/ 如下/ :/ ①/ 当/ 收到/ 缓存/ 一致性/ 请求/ 时/ ,/ 在/ 乱序/ 指令/ 窗口/ 中/ 检查/ 是否/ 存在/ 投机/ 读/ 操作/ 与/ 请求/ 中/ 的/ 地址/ 发生冲突/ ;/ ②/ 如果/ 不/ 存在/ 冲突/ ,/ 则/ 通过/ 缓存/ 中/ 的/ 逻辑/ 时间/ 建立/ 访存/ 依赖/ 关系/ ;/ 如果/ 存在/ 冲突/ ,/ 则/ 建立/ 两条/ 依赖/ 关系/ A/ 与/ B/ ./ 其中/ ,/ 依赖/ 关系/ A/ 是/ 通过/ 已经/ 引退/ 的/ 访存/ 指令/ 建立/ 的/ ,/ 而/ 依赖/ 关系/ B/ 是/ 通过/ 该/ 投机/ 操作/ 建立/ 的/ 依赖/ 关系/ ;/ ③/ 当/ 投机/ 读/ 操作/ 退出/ 乱序/ 指令/ 窗口/ 时/ ,/ 如果/ 该/ 投机/ 操作/ 是/ 被/ 刷掉/ 的/ ,/ 则/ 保留/ 依赖/ 关系/ A/ ;/ 否则/ ,/ 保/ Page9/ 留/ 依赖/ 关系/ B/ ./ 4.2/ 缓存/ 中/ 的/ 替换/ 操作/ 对/ 同步/ 的/ 影响/ 在/ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ 中/ ,/ 当/ 收到/ 对/ 地址/ A/ 的/ 请求/ 消息/ 时/ ,/ 记录/ 硬件/ 需要/ 从/ 缓存/ 中/ 提取/ 本地/ 对/ 地址/ A/ 的/ 最后/ 一次/ 操作/ 的/ 逻辑/ 时间/ (/ 记为/ LC/ -/ Last/ )/ ./ 如果/ 因为/ 缓存/ 的/ 替换/ 操作/ ,/ 造成/ 保存/ LC/ -/ Last/ 的/ 缓存/ 块/ 被/ 替换/ 出/ 缓存/ ,/ 则/ 用/ 处理器/ 当前/ 的/ 逻辑/ 时间/ (/ 记为/ LC/ -/ Current/ )/ 代替/ LC/ -/ Last/ ./ 由于/ LC/ -/ Current/ 一定/ 大于/ LC/ -/ Last/ ,/ 因此/ 通过/ 当前/ 逻辑/ 时间/ 建立/ 的/ 依赖/ 关系/ 蕴含/ 了/ 通过/ 最后/ 一次/ 操作/ 时间/ 建立/ 的/ 依赖/ 关系/ ./ 在/ 基于/ 请求/ 消息/ 的/ 同步/ 策略/ 中/ ,/ 缓存/ 记录/ 的/ 侦听/ 历史/ 中/ 的/ 最大/ 逻辑/ 时间/ (/ 记为/ LC/ -/ Snooping/ )/ ,/ 由于/ LC/ -/ Current/ 可能/ 小于/ LC/ -/ Snooping/ ,/ 因此/ 当/ 缓存/ LC/ -/ Snooping/ 的/ 缓存/ 块/ 被/ 替换/ 出/ 缓存/ 时/ ,/ 不能/ 使用/ LC/ -/ Current/ 进行/ 代替/ ./ 为了/ 保证/ 所/ 使用/ 的/ 逻辑/ 时间/ 一定/ 大于/ 侦听/ 历史/ 中/ 保存/ 的/ 逻辑/ 时间/ ,/ 本文/ 的/ 方法/ 在/ 每个/ 处理器/ 中/ 增加/ 一个/ 寄存器/ ,/ 用来/ 保存/ 侦听/ 到/ 的/ 最大/ 逻辑/ 时间/ (/ 记为/ LC/ -/ Max/ )/ ./ 当/ 保存/ LC/ -/ Snooping/ 的/ 缓存/ 块/ 被/ 替换/ 出/ 缓存/ 以后/ ,/ 则/ 用/ LC/ -/ Max/ 代替/ ./ 4.3/ 重放/ 算法/ 本节/ 重放/ 算法/ 的/ 核心/ 是/ :/ 在/ 重放/ 过程/ 中要/ 保持/ 访存/ 指令/ 数/ (/ 逻辑/ 时间/ )/ 的/ 全局/ 同步/ ./ 算法/ 3/ 给出/ 了/ 基于/ 全局/ 同步/ 逻辑/ 时间/ 的/ 重放/ 算法/ ./ 首先/ ,/ 算法/ 读取/ 本地/ 日志/ 中/ 保存/ 的/ 依赖/ 关系/ Order/ ;/ 然后/ ,/ 执行/ 初始化/ ,/ 将/ 各自/ 的/ 访存/ 指令/ 计数器/ MIC/ 置/ 零/ (/ 语句/ 1/ ~/ 语句/ 2/ )/ ;/ 最后/ ,/ 循环/ 执行/ 结构/ 体/ (/ 语句/ 3/ ~/ 语句/ 12/ )/ ./ 在/ 该/ 循环/ 中/ ,/ 首先/ ,/ 所有/ 的/ 处理器/ 执行/ 一次/ 栅栏/ 同步/ (/ 语句/ 4/ )/ ;/ 然后/ ,/ 处理器/ 对/ 计数器/ MIC/ 执行/ 加一/ 操作/ (/ 语句/ 5/ )/ ;/ 再/ 然后/ ,/ 根据/ 依赖/ 关系/ 判断/ 是否/ 需要/ 等待/ 被/ 依赖/ 指令/ 的/ 完成/ ,/ 无需/ 等待/ 则/ 执行/ 一条/ 访存/ 指令/ (/ 语句/ 6/ ~/ 语句/ 8/ )/ ;/ 最后/ ,/ 算法/ 判断/ 访存/ 依赖/ 是否/ 已经/ 失效/ ,/ 如果/ 已经/ 失效/ ,/ 则/ 根据/ 依赖/ 关系/ 更新/ 访存/ 指令/ 数/ (/ 语句/ 9/ ~/ 语句/ 11/ )/ ./ 算法/ 3/ ./ 重放/ 算法/ ./ Order/ :/ MemorydependenceMIC/ :/ MemoryInstructionCount1/ ./ Order/ =/ Pop/ _/ order/ _/ from/ _/ log/ (/ )/ ;/ 2/ ./ MIC/ =/ 0/ ;/ 3/ ./ While/ (/ 1/ )/ {/ 4/ ./ Barrier/ (/ global/ )/ 5/ ./ MI/ C++/ ;/ 6/ ./ Wait/ =/ check/ _/ dependece/ (/ Order/ ,/ MIC/ )/ ;/ 7/ ./ If/ (/ !/ wait/ )/ 8/ ./ Step/ _/ one/ _/ memory/ _/ Operation/ (/ )/ ;/ 9/ ./ IfPassed/ (/ Order/ ,/ MIC/ )/ 10/ ./ Update/ (/ MIC/ ,/ Order/ )/ 11/ ./ Order/ =/ Pop/ _/ order/ _/ from/ _/ log/ (/ )/ 12/ ./ }/ 本文/ 重点/ 讨论/ 了/ 基于/ 全局/ 逻辑/ 时间/ 的/ 访存/ 依赖/ 约/ 减/ 方法/ ,/ 并/ 分析/ 了/ 该/ 方法/ 在/ 支持/ 松弛/ 存储/ 一致性/ 模型/ 的/ 处理器/ 上/ 的/ 实现/ ./ 本节/ 实现/ 的/ 重放/ 算法/ 效率/ 仍/ 有/ 进一步提高/ 的/ 空间/ ,/ 可以/ 通过/ 放松/ 同步/ 的/ 次数/ ,/ 将/ 约/ 减/ 判定/ 条件/ 由/ 单条/ 指令/ 判定/ 改进/ 为/ 一段/ 动态/ 指令/ 统一/ 判定/ ./ 该/ 优化/ 方法/ 可以/ 大幅/ 提升/ 重/ 放/ 效率/ ,/ 将/ 作为/ 本文/ 未来/ 的/ 研究/ 工作/ ./ 5/ 实验/ 评估/ 5.1/ 实现/ 平台/ 本文/ 采用/ 的/ 模拟/ 平台/ 是/ GEMS/ 与/ Simics/ 模拟/ 平台/ ./ 其中/ ,/ Simics/ 模拟器/ 在/ 功能/ 上/ 模拟/ 了/ 商业/ 级/ SPARC/ 服务器/ ,/ 可以/ 启动/ 没有/ 任何/ 改动/ 的/ Solaris10/ 操作系统/ ,/ GEMS/ 是/ 在/ Simics/ 基础/ 上/ 开发/ 的/ 时序/ 模型/ ./ 本节/ 评估/ 使用/ 的/ 测试程序/ 是/ Splash2/ [/ 24/ ]/ ,/ 表/ 3/ 给出/ 了/ 被/ 模拟系统/ 的/ 参数/ 配置/ ./ 默认/ 核数/ 8/ 核/ 缓存/ 一致/ 协议/ MESI/ 协议/ L1/ 缓存/ L2/ 缓存/ ROB/ 项数/ 645.2/ 实现/ 结果/ 5.2/ ./ 1/ 顺序/ 一致性/ 模型/ 下/ 的/ 访存/ 日志/ 开销/ 本节/ 的/ 实验/ 比较/ 了/ 不同/ 的/ 同步/ 策略/ 对/ 访存/ 依赖/ 约/ 减/ 的/ 影响/ ,/ 同时/ 与/ 已有/ 的/ 研究/ 工作/ 进行/ 了/ 对比/ ./ 图/ 9/ 给出/ 了/ 基于/ Splash2/ 测试程序/ 的/ 实验/ 结果/ ./ 对于/ 适用/ 于/ 目录/ 协议/ 的/ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ ,/ 结果显示/ ,/ 多数/ 程序/ 的/ 访存/ 依赖/ 日志/ 开销/ 在/ 0.05/ Bytes/ // Kilo/ -/ Instruction/ ~/ 0.15/ Bytes/ // Kilo/ -/ Instruction/ 之间/ ./ 最坏/ 情况/ 下/ 日志/ 开销/ 为/ 0.2/ Bytes/ // Kilo/ -/ Instruction/ ,/ 为/ 平均值/ 0.11/ Bytes/ 的/ 1.8/ 倍/ ,/ 可以/ 看出/ 该/ 方法/ 的/ 约/ 减/ 效果/ 相对/ 稳定/ ,/ 不会/ 因为/ 程序/ 行为/ 的/ 不同/ 而/ 波动/ 较大/ ./ 此外/ ,/ 适用/ 于/ 侦听/ 协议/ 的/ 基于/ 请求/ 消息/ 的/ 同步/ 策略/ ,/ 平均/ 日志/ 开销/ 为/ 0.13/ Bytes/ // Kilo/ -/ Instruction/ ,/ 约/ 为/ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ 的/ 1.18/ 倍/ ./ Page10/ 与/ 其他/ 的/ 测试程序/ 相比/ ,/ LU/ 算法/ 测试程序/ 的/ 日志/ 开销/ 最小/ ,/ 这/ 是因为/ 在/ LU/ 算法/ 测试程序/ 中访存/ 冲突/ 总数/ 最少/ ./ 如图/ 10/ 所示/ ,/ 可以/ 发现/ 约/ 减/ 算法/ 的/ 约/ 减/ 比例/ 在/ 不同/ 程序/ 之间/ 是/ 相对/ 稳定/ 的/ ,/ 不能/ 约/ 减/ 的/ 访存/ 冲突/ 占/ 总/ 冲突/ 的/ 0.1/ ~/ 0.35/ ./ 此外/ ,/ 不同于/ 其他/ 的/ 程序/ ,/ 在/ LU/ 算法/ 测试程序/ 中/ 基于/ 请求/ 消息/ 的/ 同步/ 算法/ 优于/ 基于/ 应答/ 消息/ 的/ 同步/ 算法/ ./ 其/ 原因/ 是/ ,/ 通常/ 情况/ 下/ 基于/ 应答/ 消息/ 的/ 同步/ 算法/ 能/ 更/ 快/ 地/ 同步/ 逻辑/ 时间/ ,/ 因此/ 该/ 方法/ 取得/ 的/ 约/ 减/ 效果/ 往往/ 更好/ ./ 然而/ 在/ LU/ 算法/ 测试程序/ 中/ ,/ 访存/ 冲突/ 之间/ 的/ 间距/ 大/ ,/ 不同/ 的/ 逻辑/ 时间/ 同步/ 算法/ 之间/ 的/ 约/ 减/ 效果/ 差异/ 不/ 大/ ,/ 同时/ 基于/ 应答/ 消息/ 引起/ 的/ 过度/ 同步/ 问题/ 导致/ 在/ LU/ 算法/ 测试程序/ 中/ 基于/ 请求/ 消息/ 的/ 同步/ 算法/ 优于/ 基于/ 应答/ 消息/ 的/ 同步/ 算法/ ./ 图/ 10/ 在/ 8/ 核/ 平台/ 上/ 执行/ 64/ 个/ 软件/ 线程/ 时/ ,/ 在/ 顺序存储/ 一致性/ 模型/ 下/ ,/ 本/ 节/ 对比/ 了/ 本文/ 的/ 方法/ 与/ 目前/ 最好/ 的/ 约/ 减/ 方法/ [/ 8/ ,/ 14/ ]/ ./ 本文/ 提出/ 的/ 方法/ 平均/ 日志/ 开销/ 为/ 0.11/ Bytes/ // Kilo/ -/ Instruction/ ./ 而/ 文献/ [/ 8/ ]/ 的/ 平均/ 日志/ 开销/ 为/ 0.55/ Bytes/ // Kilo/ -/ Instruction/ ,/ 文献/ [/ 14/ ]/ 的/ 平均/ 日志/ 开销/ 为/ 0.44/ Bytes/ // Kilo/ -/ Instruction/ ./ 通过/ 对比/ ,/ 本文/ 提出/ 的/ 方法/ 比/ 文献/ [/ 8/ ]/ 的/ 方法/ 减少/ 了/ 80/ %/ ,/ 比/ 文献/ [/ 14/ ]/ 的/ 方法/ 减少/ 了/ 75/ %/ ./ 5.2/ ./ 2/ 顺序/ 一致性/ 模型/ 下约/ 减/ 方法/ 的/ 可扩展性/ 图/ 11/ 、/ 图/ 12/ 分别/ 给出/ 了/ 在/ 16/ 与/ 32/ 软件/ 线程/ 下/ ,/ 不同/ 的/ 同步/ 策略/ 需要/ 记录/ 的/ 日志/ 随核数/ 的/ 变化/ ./ 如图/ 11/ 所示/ ,/ 当/ 执行/ 16/ 个/ 软件/ 线程/ 时/ ,/ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ 在/ 4/ 核/ 、/ 8/ 核/ 、/ 16/ 核/ 平台/ 上/ 的/ 平均/ 日志/ 开销/ 为/ 0.11/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.15/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.02/ Bytes/ // Kilo/ -/ Instruction/ ;/ 基于/ 请求/ 消息/ 的/ 同步/ 策略/ 在/ 4/ 核/ 、/ 8/ 核/ 、/ 16/ 核/ 平台/ 上/ 的/ 平均/ 日志/ 开销/ 为/ 0.16/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.18/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.03/ Bytes/ // Kilo/ -/ Instruction/ ./ 如图/ 12/ 所示/ ,/ 当/ 执行/ 32/ 个/ 软件/ 线程/ 时/ ,/ 基于/ 应答/ 消息/ 的/ 同图/ 1116/ 个/ 软件/ 线程/ 时/ ,/ 处理器/ 核数/ 对/ 约/ 减/ 方法/ 的/ 影响/ 图/ 1232/ 个/ 软件/ 线程/ 时/ ,/ 处理器/ 核数/ 对/ 约/ 减/ 方法/ 的/ 影响/ Page11/ 步/ 策略/ 在/ 4/ 核/ 、/ 8/ 核/ 、/ 16/ 核/ 平台/ 上/ 的/ 平均/ 日志/ 开销/ 为/ 0.10/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.12/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.05/ Bytes/ // Kilo/ -/ Instruction/ ;/ 基于/ 请求/ 消息/ 的/ 同步/ 策略/ 在/ 4/ 核/ 、/ 8/ 核/ 、/ 16/ 核/ 平台/ 上/ 的/ 平局/ 日志/ 开销/ 为/ 0.14/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.15/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.06/ Bytes/ // Kilo/ -/ Instruction/ ./ 同时/ 图/ 13/ 评估/ 了/ 软件/ 线程/ 数/ 与/ 核数/ 同步/ 变化/ 时/ ,/ 不同/ 策略/ 的/ 日志/ 开销/ ./ 在/ 4/ 核/ 4/ 线程/ 、/ 8/ 核/ 8/ 线程/ 、/ 16/ 核/ 16/ 线程/ 的/ 平台/ 上/ ,/ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ 的/ 平局/ 日志/ 开销/ 分别/ 为/ 0.09/ Bytes/ // Kilo/ -/ Instruc/ -/ tion/ 、/ 0.15/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.02/ Bytes/ // Kilo/ -/ Instruction/ ;/ 基于/ 请求/ 消息/ 的/ 同步/ 策略/ 的/ 平局/ 日志/ 开销/ 分别/ 为/ 0.12/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.17/ Bytes/ // Kilo/ -/ Instruction/ 、/ 0.03/ Bytes/ // Kilo/ -/ Instruction/ ./ 图/ 13/ 软件/ 线程/ 数/ 与/ 处理器/ 核数/ 同步/ 变化/ 时/ ,/ 根据上述/ 结果/ 可以/ 发现/ ,/ 本文/ 提出/ 的/ 访存/ 依赖/ 约/ 减/ 方法/ 可扩展性/ 良好/ ,/ 日志/ 开销/ 不会/ 随着/ 核数/ 的/ 增加/ 不断/ 增长/ ./ 同时/ ,/ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ 最大/ 日志/ 开销/ 为/ 0.28/ Bytes/ // Kilo/ -/ Instruction/ ,/ 基于/ 请求/ 消息/ 的/ 同步/ 策略/ 最大/ 日志/ 开销/ 为/ 0.35/ Bytes/ // Kilo/ -/ Instruction/ ./ 此外/ ,/ 很多/ 应用/ 在/ 处理器/ 核数/ 为/ 8/ 时/ 记录/ 的/ 访存/ 日志/ 开销/ 取得/ 最大值/ ,/ 该/ 现象/ 的/ 产生/ 是/ 受/ 约/ 减前/ 要/ 记录/ 的/ 访存/ 日志/ 密度/ 与/ 约/ 减/ 效率/ 共同/ 制约/ 的/ (/ 约/ 减后/ 的/ 日志/ 密度/ =/ 约/ 减前/ 的/ 日志/ 密度/ ×/ 约/ 减/ 效率/ )/ ,/ 约/ 减前/ 要/ 记录/ 的/ 访存/ 日志/ 密度/ 随着/ 核数/ 的/ 增加/ 在/ 降低/ ,/ 而/ 约/ 减/ 效率/ 随着/ 核数/ 的/ 增加/ 也/ 在/ 降低/ (/ 值/ 在/ 变大/ )/ ./ 因此/ ,/ 约/ 减后/ 的/ 日志/ 开销/ 是/ 一个/ 上升/ 函数/ 与/ 下降/ 函数/ 的/ 乘积/ ,/ 在/ 可/ 观测/ 的/ 范围/ 内/ ,/ 该/ 曲线/ 存在/ 多种/ 可能/ 情况/ (/ 递增/ 、/ 递减/ 、/ 抛物线/ )/ ,/ 其/ 结果/ 如图/ 11/ 、/ 图/ 12/ 、/ 图/ 13/ 所示/ ./ 5.2/ ./ 3/ 基于/ 松弛/ 存储/ 一致/ 模型/ 的/ 日志/ 开销/ 为了/ 支持/ 松弛/ 存储/ 一致性/ 模型/ ,/ 本文/ 讨论/ 了/ 破坏/ 顺序/ 一致性/ 语义/ 行为/ 的/ 检测/ 与/ 记录/ 方法/ ./ 图/ 14/ 给出/ 了/ 记录/ 违反/ 顺序/ 一致性/ 行为/ 需要/ 的/ 日志/ 开销/ ,/ 该/ 实验/ 结果/ 基于/ 应答/ 消息/ 的/ 同步/ 策略/ ./ 从图/ 中/ 可以/ 看出/ ,/ 平均/ 而言/ 该/ 部分/ 的/ 日志/ 开销/ 的/ 比重/ 较/ 小/ ,/ 约/ 占/ 总/ 日志/ 开销/ 的/ 11/ %/ ./ 尽管/ 实验/ 结果表明/ ,/ 在/ 松弛/ 存储/ 一致性/ 模型/ 下/ ,/ 违背/ 顺序/ 一致性/ 结果/ 的/ 情况/ 发生/ 概率/ 很/ 低/ ,/ 但是/ 捕捉/ 该类/ 行为/ 对/ 保证/ 重放/ 的/ 正确性/ 是/ 极为重要/ 的/ ./ 6/ 结论/ 基于/ 多核/ 处理器/ 的/ 并行程序/ 设计/ 是/ 未来/ 程序设计/ 的/ 发展/ 方向/ ./ 但/ 由于/ 并行/ 程序调试/ 困难/ ,/ 并行程序/ 的/ 生产率/ 不高/ ,/ 限制/ 了/ 并行程序/ 的/ 发展/ 进程/ ./ 为了/ 解决/ 该/ 问题/ ,/ 研究/ 人员/ 提出/ 了/ 确定性/ 重/ 放/ 方法/ ./ 然而/ 目前/ 的/ 方法/ 不仅/ 日志/ 开销/ 大/ ,/ 并且/ 无法/ 在/ 支持/ 松弛/ 存储/ 一致性/ 模型/ 的/ 处理器/ 中/ 实现/ ./ 针对/ 这/ 两个/ 问题/ ,/ 本文/ 的/ 主要/ 贡献/ 有/ 3/ 点/ :/ (/ 1/ )/ 提出/ 访存/ 依赖/ 约/ 减/ 方法/ ,/ 其/ 日志/ 开销/ 比/ 目前/ 约/ 减/ 效果/ 最好/ 的/ 方法/ Timetra/ -/ veler/ 减少/ 75/ %/ ;/ (/ 2/ )/ 提出/ 了/ 懒惰/ 的/ 逻辑/ 时间/ 同步/ 方法/ ,/ 并/ 针对/ 不同/ 的/ 缓存/ 一致性/ 协议/ 提出/ 两种/ 同步/ 策略/ ;/ (/ 3/ )/ 提出/ 了/ 在/ 支持/ 松弛/ 存储/ 一致性/ 的/ 处理器/ 中/ 实现/ 约/ 减/ 方法/ 的/ 机制/ ./ 尽管/ 本文/ 的/ 日志/ 约/ 减/ 方法/ 可以/ 大大/ 减小/ 日志/ 开销/ ,/ 但/ 由于/ 使用/ 了/ 逻辑/ 时间/ 默认/ 的/ 序/ 关系/ ,/ 降低/ 了/ 重放/ 的/ 速度/ ./ 下/ 一步/ 工作/ 中将/ 研究/ 如何/ 使用/ 粗粒度/ 的/ 逻辑/ 时间/ 来/ 取代/ 单条/ 指令/ 的/ 逻辑/ 时间/ 进行/ 约/ 减/ ,/ 以/ Page12/ 提高/ 重/ 放/ 速度/ ./ 致谢/ 审稿/ 专家/ 与/ 编辑部/ 老师/ 为/ 本文/ 提出/ 了/ 宝贵/ 的/ 修改意见/ ,/ 作者/ 在/ 此/ 表示/ 衷心/ 的/ 感谢/ !/ 

