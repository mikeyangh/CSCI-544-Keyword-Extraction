Page1/ 基于/ 语义/ 的/ 网络/ 大/ 数据组织/ 与/ 搜索/ 吴纯青/ 任沛阁/ 王小峰/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 摘要/ 随着/ 信息技术/ 的/ 飞速发展/ ,/ 网络空间/ 中/ 出现/ 海量/ 异构/ 的/ 数据/ 资源/ ,/ 网络/ 大/ 数据/ 逐渐/ 引起/ 了/ 人们/ 的/ 关注/ ./ 从/ 网络/ 大/ 数据/ 中/ 发现/ 并/ 获取/ 用户/ 所/ 需/ 的/ 数据/ 资源/ ,/ 需要/ 对/ 网络/ 大/ 数据/ 进行/ 有效/ 地/ 组织/ 管理/ 并/ 进行/ 基于/ 数据/ 语义/ 的/ 相似/ 搜索/ ./ 为此/ ,/ 需要/ 从/ 网络/ 数据/ 资源/ 中/ 抽取/ 其/ 特征/ // 属性/ 构造/ 高维/ 语义/ 空间/ ,/ 并/ 将/ 数据/ 资源/ 及/ 用户/ 查询/ 信息/ 抽象/ 为/ 语义/ 空间/ 中/ 的/ 特征向量/ 或/ 高维/ 点/ ,/ 进而/ 通过/ 比较/ 特征向量/ 间/ 夹角/ 余弦/ 值/ 或/ 高维/ 点/ 之间/ 的/ 距离/ 来/ 衡量/ 语义/ 相似性/ ./ 高维索引/ 技术/ 可以/ 对/ 高维/ 语义/ 空间/ 中/ 的/ 数据/ 资源/ 进行/ 有效/ 组织/ 管理/ ,/ 实现/ 基于/ 数据/ 语义/ 的/ 相似性/ 搜索/ ;/ 而/ 降维/ 技术/ 可以/ 消除/ 语义/ 空间/ 维数/ 过/ 高/ 所/ 引发/ 的/ “/ 维灾/ ”/ 影响/ ./ 文中/ 对/ 现有/ 的/ 高维/ 数据/ 索引/ 及/ 降维/ 技术/ 进行/ 了/ 系统/ 的/ 综述/ ,/ 然后/ 介绍/ 了/ 现有/ 的/ 基于/ 分布式/ 技术/ 实现/ 高维/ 数据/ 语义/ 相似性/ 搜索/ 的/ 研究/ 工作/ ,/ 最后/ 并/ 展望/ 了/ 未来/ 工作/ ./ 关键词/ 语义/ 空间/ ;/ 高维索引/ ;/ 降维/ ;/ 相似性/ 查询/ ;/ P2P/ ;/ 大/ 数据/ 1/ 引言/ 近年来/ ,/ 随着/ 互联网/ 、/ 物/ 联网/ 、/ 社交/ 网络/ 、/ 云/ 计算/ 等/ 信息技术/ 的/ 发展/ ,/ 网络空间/ 中/ 的/ 数据/ 资源/ 正以/ 前所未有/ 的/ 速度/ 不断/ 地/ 增长/ 和/ 积累/ ,/ 世界/ 已经/ 进入/ 了/ 网络化/ 的/ 大/ 数据/ (/ BigData/ )/ 时代/ [/ 1/ ]/ ./ 大/ 数据/ 指在/ 可容忍/ 的/ 时间/ 内用/ 常用/ 软硬件/ 工具/ 无法/ 对/ 其/ 进行/ 有效/ 感知/ 、/ 获取/ 、/ 管理/ 、/ 处理/ 和/ 服务/ 的/ 数据/ 集合/ [/ 2/ ]/ ./ IBM/ 、/ IDC/ 等/ 权威机构/ 将/ 其/ 特点/ 总结/ 为/ 4V/ 特性/ :/ 规模/ 巨大/ 化/ (/ Volume/ )/ ,/ 形式/ 多样化/ (/ Variety/ )/ ,/ 生成/ 高速化/ (/ Velocity/ )/ ,/ 价值/ 巨大/ 但/ 密度/ 稀疏/ 化/ (/ Value/ )/ ./ 大/ 数据/ 的/ 兴起/ 引起/ 了/ 产业界/ 、/ 学术界/ 及/ 政府/ 机构/ 的/ 高度重视/ ./ Microsoft/ 、/ Google/ 、/ IBM/ 、/ Facebook/ 等/ 国际/ IT/ 巨头/ 广泛应用/ 并/ 推动/ 大/ 数据/ 技术/ 的/ 发展/ ./ JimGray/ 提出/ 了/ 数据/ 密集型/ 科学/ 的/ “/ 第四/ 范式/ ”/ [/ 3/ ]/ ,/ 改变/ 了/ 人们/ 对/ 传统/ 计算/ 科学/ 的/ 看法/ ;/ 而/ 《/ Nature/ 》/ 与/ 《/ Science/ 》/ 也/ 相继/ 专刊/ 讨论/ 研究/ 与/ 大/ 数据/ 相关/ 的/ 问题/ :/ 《/ Nature/ 》/ 于/ 2008/ 年/ 出版/ 专刊/ “/ BigData/ ”/ [/ 4/ ]/ ,/ 介绍/ 了/ 海量/ 数据/ 带来/ 的/ 挑战/ ;/ 《/ Science/ 》/ 于/ 2011/ 年/ 出版/ “/ DealingwithData/ ”/ 专刊/ [/ 5/ ]/ ,/ 讨论/ 了/ 数据/ 洪流/ 所/ 带来/ 的/ 机遇/ 与/ 挑战/ ./ 此外/ ,/ 美国政府/ 于/ 2012/ 年/ 公布/ 了/ “/ 大/ 数据/ 研发/ 方案/ ”/ ①/ ,/ 该/ 计划/ 被/ 视为/ 美国政府/ 继/ “/ 信息/ 高速公路/ ”/ 计划/ 后/ 又/ 一/ 重大/ 举措/ ./ 网络/ 大/ 数据/ [/ 6/ ]/ 指/ “/ 人/ 、/ 机/ 、/ 物/ ”/ 三元/ 世界/ 在/ 网络空间/ (/ Cyberspace/ )/ 中/ 彼此/ 交互/ 与/ 融合/ 所/ 产生/ 并/ 在/ 互联网/ 上/ 可/ 获取/ 的/ 大/ 数据/ ,/ 其/ 特点/ 符合/ 大/ 数据/ 的/ 4V/ 特性/ ./ 首先/ ,/ 网络空间/ 中/ 数据/ 资源/ 飞速/ 增长/ ,/ 数据/ 规模/ 不断扩大/ ,/ 呈现出/ 海量/ 的/ 特性/ ./ 其次/ ,/ 网络/ 大/ 数据类型/ 丰富/ 多样/ ,/ 呈现出/ 多样化/ 及/ 异构化/ 的/ 特点/ ,/ 网络空间/ 中/ 涌现/ 了/ 大量/ 的/ 结构化/ 数据/ 、/ 半/ 结构化/ 数据/ 及/ 非/ 结构化/ 数据/ ,/ 且/ 非/ 结构化/ 数据/ 的/ 比例/ 不断/ 增长/ ./ 再次/ ,/ 网络空间/ 中/ 大/ 数据/ 变化/ 更新/ 频繁/ ,/ 常/ 以/ 数据流/ 的/ 形式/ 动态/ 、/ 快速/ 地/ 生成/ ,/ 具有/ 很强/ 的/ 时效性/ ./ 最后/ ,/ 网络空间/ 中/ 大/ 数据/ 价值/ 巨大/ 但/ 呈现出/ 稀疏/ 性/ 的/ 特点/ ,/ 由于/ 数据量/ 巨大/ 及/ 表现形式/ 多样化/ ,/ 传统/ 的/ 方法/ 技术/ 很难/ 高效/ 发现/ 并/ 获取/ 用户/ 所/ 需/ 的/ 数据/ 资源/ ,/ 实际/ 应用/ 中/ 往往/ 呈现出/ “/ 数据/ 丰富/ 而/ 知识/ 缺乏/ ”/ 的/ 窘态/ ,/ 网络/ 大/ 数据/ 价值/ 利用/ 密度/ 低/ ./ 网络/ 大/ 数据/ 对/ 社会/ 产生/ 了/ 深刻/ 的/ 影响/ ,/ 孕育/ 着/ 巨大/ 的/ 机遇/ ,/ 同时/ 也/ 为/ 有效/ 管理/ 和/ 利用/ 大/ 数据/ 提出/ 了/ 挑战/ ./ 在/ 当前/ 数据/ 爆炸/ 的/ 大/ 数据/ 时代/ ,/ 针对/ 网络空间/ 中/ 数据/ 规模/ 巨大/ ,/ 形式/ 异构/ ,/ 动态变化/ ,/ 分布/ 广泛/ 等/ 特点/ ,/ 如何/ 高效/ 地/ 组织/ 管理/ 并/ 搜索/ 发现/ 用户/ 所/ 需/ 的/ 数据/ 资源/ 面临/ 着/ 以下/ 3/ 个/ 难点/ 问题/ :/ (/ 1/ )/ 网络空间/ 中/ 数据/ 资源类型/ 繁多/ ,/ 表现/ 形式多样/ ,/ 而/ 形式/ 异构/ 的/ 数据/ 资源/ 可能/ 具有/ 相同/ 或/ 相似/ 的/ 语义/ 信息/ ,/ 传统/ 的/ 基于/ 精确/ 匹配/ 的/ 搜索/ 方法/ 不能/ 有效/ 地/ 获取/ 用户/ 所/ 需/ 的/ 数据/ 资源/ ./ 为了/ 实现/ 基于/ 语义/ 的/ 智能/ 搜索/ ,/ 需要/ 将/ 网络/ 中/ 海量/ 异构/ 的/ 数据/ 资源/ 统一/ 映射/ 为/ 语义/ 空间/ 中/ 的/ 高维/ 数据/ ,/ 并/ 通过/ 有效/ 手段/ 快速/ 锁定/ 搜索/ 区间/ ,/ 利用/ 相似性/ 搜索/ 方法/ 获取/ 与/ 用户/ 语义/ 相关/ 的/ 数据/ 资源/ ./ (/ 2/ )/ 随着/ 网络空间/ 中/ 数据/ 资源/ 的/ 日益/ 丰富/ ,/ 语义/ 空间/ 维度/ 急剧/ 增加/ ./ 当/ 空间/ 维度/ 过高时/ ,/ 在/ 语义/ 空间/ 中/ 实现/ 相似性/ 搜索/ 的/ 性能/ 急剧下降/ ,/ 引发/ “/ 维度/ 灾难/ ”/ [/ 7/ ]/ ./ (/ 3/ )/ 由于/ 大/ 数据/ 的/ 4V/ 特性/ ,/ 在/ 将/ 网络/ 大/ 数据/ 映射/ 到/ 统一/ 的/ 语义/ 空间/ 并/ 进行/ 基于/ 语义/ 的/ 相似性/ 搜索/ 过程中将/ 占用/ 大量/ 的/ 计算/ 及/ 存储资源/ ./ 传统/ 的/ 集中式/ 处理/ 方式/ 容易/ 产生/ 性能/ 瓶颈/ ,/ 系统/ 的/ 稳定性/ 及/ 可扩展性/ 较差/ ,/ 不能/ 很/ 好/ 的/ 应对/ 海量/ 的/ 网络/ 数据/ 及/ 复杂/ 的/ 用户/ 需求/ ./ 以上/ 3/ 个/ 问题/ 可/ 总结/ 为/ :/ 如何/ 在/ 统一/ 的/ 语义/ 空间/ 中/ 描述/ 网络/ 大/ 数据/ 的/ 语义/ 信息/ ,/ 并/ 对/ 其/ 进行/ 适当/ 的/ 组织/ 划分/ ,/ 实现/ 基于/ 语义/ 的/ 智能/ 搜索/ 发现/ ;/ 如何/ 解决/ 语义/ 空间/ 维度/ 过高/ 所/ 引起/ 的/ “/ 维灾/ ”/ 问题/ ;/ 如何/ 合理/ 分配/ 数据组织/ 搜索/ 过程/ 中/ 产生/ 的/ 庞大/ 计算/ 及/ 存储/ 开销/ ,/ 提高/ 系统/ 性能/ ./ 本文/ 对/ 现有/ 工作/ 进行/ 了/ 深入研究/ ,/ 将/ 上述/ 问题/ 的/ 解决/ 方法/ 总结/ 为/ 对应/ 的/ 3/ 个/ 方面/ :/ 高维索引/ 技术/ 、/ 数据/ 降维/ 技术/ 及/ 分布式/ 语义/ 相似性/ 搜索/ 技术/ ,/ 如图/ 1/ 所示/ ./ 高维索引/ 将/ 海量/ 异构/ 的/ 数据/ 资源/ 统一/ 映射/ 到/ 语义/ 空间/ ,/ 并/ 根据/ 给定/ 的/ 用户/ 查询/ 快速/ 确定/ 搜索/ 区间/ ,/ 修剪/ 掉/ 与/ 查询/ 请求/ 语义/ 无关/ 的/ 数据/ 集合/ ,/ 可以/ 实现/ 基于/ 语义/ 的/ 相似性/ 搜索/ ./ 当/ 语义/ 空间/ 维度/ 过高时/ ,/ 容易/ 引发/ “/ 维灾/ ”/ 问题/ ,/ 导致/ 高/ 维索/ 图/ 1/ 网络空间/ 中/ 数据组织/ 搜索/ 方法/ 发展趋势/ ①/ http/ :/ // // www/ ./ whitehouse/ ./ gov/ // blog/ // 2012/ // 03/ // 29/ // big/ -/ data/ -/ Page3/ 高维/ 数据/ 索引/ 技术/ ./ 引/ 的/ 性能/ 急剧下降/ ,/ 甚至/ 不如/ 顺序/ 扫描/ ./ 降维/ 技术/ 通过/ 构造/ 降维/ 映射/ ,/ 获得/ 高维/ 数据/ 集合/ 的/ 低维/ 表示/ ,/ 可以/ 有效/ 消除/ “/ 维灾/ ”/ 带来/ 的/ 影响/ ./ 针对/ 传统/ 集中式/ 设置/ 带来/ 的/ 局限性/ ,/ 分布式/ 高维索引/ 或/ 降维/ 技术/ 可以/ 合理/ 分配/ 计算/ 及/ 存储/ 开销/ ,/ 提高/ 系统/ 的/ 健壮性/ 及/ 可扩展性/ ,/ 有效/ 地/ 应对/ 网络/ 大/ 数据/ 带来/ 的/ 挑战/ ./ 本文/ 的/ 贡献/ 主要/ 体现/ 为/ :/ (/ 1/ )/ 从/ 向量/ 空间/ 及/ 度量/ 空间/ 角度/ 综述/ 了/ 现有/ 的/ (/ 2/ )/ 从/ 线性/ 及/ 非线性/ 角度/ 综述/ 了/ 现有/ 高维/ 数据/ 降维/ 方法/ ./ (/ 3/ )/ 总结/ 了/ 现有/ 的/ 基于/ 分布式/ 技术/ 的/ 高维/ 数据/ 语义/ 相似性/ 搜索/ 技术/ ,/ 并/ 展望/ 了/ 未来/ 发展/ 方向/ ./ 本文/ 第/ 2/ 节/ 综述/ 现有/ 的/ 高维/ 数据/ 索引/ 结构/ ;/ 第/ 3/ 节/ 系统地/ 介绍/ 现有/ 的/ 高维/ 数据/ 降维/ 方法/ ;/ 第/ 4/ 节/ 总结/ 现有/ 的/ 基于/ 分布式/ 技术/ 实现/ 高维/ 数据/ 语义/ 相似性/ 搜索/ 方法/ ;/ 最后/ 一节/ 总结/ 全文/ 并/ 展望未来/ 工作/ ./ 2/ 高维/ 数据/ 索引/ 高维/ 数据/ ,/ 即/ 高维/ 语义/ 空间/ 中/ 的/ 数据/ ,/ 通常/ 表示/ 为/ 高维/ 点/ 或/ 高维/ 向量/ ./ 高/ 维空间/ 内/ 数据/ 通常/ 表现/ 出/ 以下/ 的/ 特点/ :/ (/ 1/ )/ 分布/ 不/ 均匀/ ./ 随着/ 空间/ 维度/ 的/ 增加/ ,/ 数据/ 趋于/ 空间/ 表面/ 分布/ [/ 8/ ]/ ;/ (/ 2/ )/ 分布/ 稀疏/ 性/ ./ 高维/ 数据/ 在/ 空间/ 内/ 分布/ 稀疏/ ,/ 很难/ 对/ 有/ 相似/ 语义/ 的/ 数据/ 信息/ 进行/ 有效/ 的/ 组织/ 管理/ ;/ (/ 3/ )/ 等距/ 性/ ./ 由于/ 高维/ 数据/ 趋于/ 空间/ 表面/ 分布/ ,/ 从/ 给定/ 查询/ 点到/ 其/ 近邻/ 点/ 和/ 远邻/ 点/ 的/ 距离/ 随着/ 维度/ 的/ 增加/ 趋于/ 相等/ [/ 9/ ]/ ;/ (/ 4/ )/ 动态性/ ./ 伴随/ 着/ 数据/ 的/ 更新/ ,/ 随时/ 有/ 高维/ 数据/ 进入/ 或/ 离开/ 语义/ 空间/ ;/ (/ 5/ )/ 数据/ 海量/ 性/ ./ 语义/ 空间/ 内/ 网络/ 数据量/ 庞大/ ;/ (/ 6/ )/ 时间/ 代价/ 大/ ./ 操作/ 高维/ 数据/ 所/ 花费/ 的/ 时间/ 一般/ 远高于/ 传统/ 数据/ ;/ (/ 7/ )/ 不能/ 排序/ ./ 无法/ 对/ 高维/ 数据/ 进行/ 有效/ 的/ 线性/ 排序/ 以/ 充分体现/ 其/ 在/ 空间/ 中/ 的/ 相对/ 位置/ 关系/ ./ 为了/ 实现/ 高效/ 的/ 基于/ 语义/ 的/ 相似性/ 搜索/ ,/ 学者/ 们/ 提出/ 了/ 多种/ 高维索引/ 结构/ ,/ 用以/ 在/ 相似性/ 搜索/ 过程/ 中/ 修剪/ 掉/ 与/ 给定/ 用户/ 查询/ 语义/ 无关/ 的/ 数据/ 对象/ ,/ 减少/ 搜索/ 空间/ ,/ 缩短/ 查询/ 时间/ ,/ 提高/ 搜索/ 效率/ ./ 根据/ 构建/ 高维索引/ 所/ 采用/ 的/ 数据/ 划分/ 标准/ 及/ 相似/ 度量/ 的/ 不同/ ,/ 高维索引/ 可/ 分为/ 向量/ 空间/ 索引/ 结构/ 和/ 度量/ 空间/ 索引/ 结构/ [/ 10/ ]/ ,/ 如图/ 2/ ./ 两者之间/ 的/ 区别/ 与/ 联系/ 体现/ 为/ :/ (/ 1/ )/ 向量/ 空间/ 可/ 看作/ 是/ 带有/ 坐标/ 信息/ 的/ 度量/ 空间/ ,/ 在/ 一定/ 条件/ 下/ 可以/ 相互/ 转换/ ./ 当/ 在/ 度量/ 空间/ 中/ 只/ 利用/ 一个/ 给定/ 的/ 距离/ 函数/ 获取数据/ 间/ 距离/ 信息/ 时/ ,/ 向量/ 空间/ 则/ 转换成/ 了/ 度量/ 空间/ ;/ 而/ 利用/ 快速/ 映射/ (/ FASTMAP/ )/ 算法/ 可以/ 将/ 度量/ 空间/ 转换/ 为/ 较/ 低维/ 的/ 向量/ 空间/ ;/ (/ 2/ )/ 在/ 相似性/ 查询/ 过程/ 中/ ,/ 度量/ 空间/ 索引/ 仅仅/ 利用/ 基于/ 距离/ 函数/ 的/ 三角/ 不等式/ 性质/ ;/ 而/ 向量/ 空间/ 索引/ 则/ 可以/ 同时/ 利用/ 数据/ 在/ 空间/ 中/ 的/ 位置/ (/ 坐标/ )/ 信息/ ./ 向量/ 空间/ 索引/ 利用/ 了/ 更/ 多/ 的/ 信息/ ,/ 比/ 度量/ 空间/ 索引/ 具有/ 更好/ 的/ 修剪/ 及/ 搜索/ 效率/ ./ 2.1/ 向量/ 空间/ 高维索引/ 2.1/ ./ 1/ 向量/ 空间/ 高维索引/ 分类/ 距离/ 函数/ 来/ 组织/ 数据/ ,/ 具有/ 不同/ 的/ 分类/ 标准/ :/ 向量/ 空间/ 索引/ 利用/ 数据/ 在/ 空间/ 中/ 的/ 相对/ 位置/ 及/ (/ 1/ )/ 根据/ 所/ 索引/ 数据/ 的/ 类型/ ,/ 可/ 分为/ 点/ 数据/ 类/ 索引/ 和/ 空间数据/ 类/ 索引/ ./ 点/ 数据/ 类/ 索引/ 只能/ 处理/ 高维/ 点/ 数据/ ,/ 如/ k/ -/ d/ -/ 树/ [/ 11/ ]/ ;/ 空间数据/ 类/ 索引/ 则/ 可以/ 同时/ 处理/ 点/ 、/ 线及/ 多边形/ 等/ 高维/ 数据/ ,/ 如/ R/ -/ 树/ [/ 12/ ]/ ./ (/ 2/ )/ 根据/ 索引/ 节点/ 构建/ 方法/ 的/ 不同/ ,/ 可/ 分为/ 数据组织/ 类/ 、/ 空间组织/ 类/ 以及/ 混合/ 组织/ 类/ ./ 数据组织/ 类/ 索引/ 根据/ 数据/ 在/ 空间/ 中/ 的/ 分布/ 组织/ 索引/ 节点/ ,/ 如/ R/ -/ 树/ ;/ 空间组织/ 类/ 将/ 数据/ 空间/ 划分/ 为/ 互相/ 邻接/ 的/ 子/ 空间/ 并/ 将子/ 空间/ 对应/ 为/ 索引/ 节点/ ,/ 如/ k/ -/ d/ -/ 树/ ./ 混合/ 组织/ 类则/ 同时/ 利用/ 数据组织/ 方法/ 及/ 空间组织/ 方法/ 构建/ 索引/ 结构/ ,/ 如/ Hybrid/ -/ 树/ [/ 13/ ]/ ./ (/ 3/ )/ 根据/ 索引/ 组织/ 形式/ ,/ 可/ 分为/ 树型/ 索引/ 和/ 非树型/ 索引/ ./ 树型/ 索引/ 中/ 索引/ 节点/ 按照/ 树/ 的/ 形状/ 组织/ ,/ 如/ R/ -/ 树/ 等/ ;/ 非树型/ 索引/ 中/ 索引/ 节点/ 不/ 按照/ 树/ 的/ 形状/ 组织/ ,/ 如/ VA/ -/ File/ [/ 14/ ]/ 等/ ./ Page4/ (/ 4/ )/ 向量/ 空间/ 索引/ 将/ 语义上/ 相似/ (/ 位置/ 接近/ )/ 的/ 数据/ 聚类/ 为/ 数据/ 页/ (/ page/ )/ ,/ 分配/ 到/ 每个/ 数据/ 页/ 的/ 子/ 空间/ 称为/ 页/ 区域/ (/ pageregion/ )/ ./ 根据/ 页/ 区域/ 的/ 形状/ ,/ 可以/ 分为/ 超/ 矩形/ 、/ 超/ 球体/ 和/ 混合型/ ./ 页/ 区域/ 为/ 超/ 矩形/ 的/ 索引/ 有/ R/ -/ 树/ 等/ ;/ 超/ 球形/ 的/ 有/ SS/ -/ 树/ [/ 15/ ]/ 等/ ;/ 混合型/ 的/ 有/ SR/ -/ 树/ [/ 16/ ]/ 等/ ./ (/ 5/ )/ 此外/ ,/ 高维/ 映射/ 到/ 一维/ 类/ 索引/ 将/ 高/ 维空间/ 内/ 数据/ 对象/ 按照/ 某种/ 标准/ 映射/ 到/ 一维/ 数据/ 空间/ ,/ 典型/ 的/ 代表/ 有/ 空间/ 填充/ 曲线/ (/ SpaceFillingCurve/ ,/ SFC/ )/ [/ 17/ ]/ 、/ iDistance/ [/ 18/ ]/ 方法/ 及/ 金字塔/ 技术/ [/ 19/ ]/ 等/ ./ 2.1/ ./ 2/ 典型/ 向量/ 空间/ 高维索引/ (/ 1/ )/ R/ -/ 树类/ ./ R/ -/ 树是/ 一种/ 对应/ 空间/ 矩形/ 层次/ 嵌套/ 结构/ 的/ 平衡/ 树/ ,/ 是/ B/ +/ -/ 树/ 在/ 空间/ 上/ 的/ 扩展/ ,/ 如图/ 3/ 所示/ ./ R/ -/ 树可/ 应用/ 于/ 多维/ 点及/ 空间数据/ ,/ 索引/ 树中/ 的/ 节点/ 对应/ 包含/ 高维/ 数据/ 的/ 最小/ 边界/ 矩形/ (/ MinimumBoundingRectangle/ ,/ MBR/ )/ ./ MBR/ 是/ 所/ 包含/ 数据/ 的/ 最小/ 近似/ ,/ 且/ 相互之间/ 可以/ 有/ 重叠/ ./ R/ -/ 树/ 具有/ 较/ 好/ 的/ 数据/ 存储/ 效率/ ,/ 但是/ MBR/ 间/ 的/ 重叠/ 导致/ 了/ 数据/ 的/ 重复/ 搜索/ ./ R/ / -/ 树/ [/ 20/ ]/ 是/ R/ -/ 树/ 的/ 扩展/ ,/ 它/ 改进/ 了/ R/ -/ 树/ 的/ 数据/ 插入/ 及/ 节点/ 分裂/ 算法/ ,/ 同时/ 引入/ 了/ 强制/ 重新/ 插入/ 机制/ ,/ 一定/ 程度/ 上/ 提高/ 了/ 搜索/ 性能/ ,/ 但/ R/ / -/ 树/ 没有/ 有效/ 地/ 降低/ 节点/ 间/ 的/ 重叠/ 程度/ ./ R/ +/ -/ 树/ [/ 21/ ]/ 是/ 针对/ R/ -/ 树中/ 由/ 矩形/ 重叠/ 造成/ 的/ 多重/ 路径/ 搜索/ 问题/ 而/ 提出/ 的/ ,/ 它/ 增加/ 了/ 描述/ R/ -/ 树/ 性能/ 的/ 新/ 特征/ ,/ 并/ 通过/ 分裂/ 的/ 方式/ 使/ 同层/ 节点/ 矩形/ 之间/ 不再/ 存在/ 重叠/ ./ X/ -/ 树/ [/ 22/ ]/ 基于/ R/ -/ 树/ 引入/ 了/ 超/ 节点/ 的/ 概念/ ,/ 当对/ 溢出/ 的/ 节点/ 执行/ 节点/ 分裂/ 操作/ 而/ 导致/ 较/ 严重/ 的/ 区域/ 重叠/ 时/ ,/ 则/ 扩大/ 溢出/ 的/ 节点/ 使/ 之/ 成为/ 超/ 节点/ ,/ 以便/ 存放/ 更/ 多/ 的/ 数据/ 对象/ ./ SS/ -/ 树/ 利用/ 超/ 球体/ 代替/ MBR/ 作为/ 页面/ 区域/ ,/ 可以/ 有效/ 的/ 减少/ 存储空间/ ,/ 但是/ 在/ 节点/ 分裂/ 过程/ 中/ 不能/ 避免/ 区域/ 重叠/ 现象/ ./ SR/ -/ 树/ [/ 23/ ]/ 可以/ 看作/ R/ / -/ 树/ 和/ SS/ -/ 树/ 的/ 结合/ ,/ 同时/ 利用/ MBR/ 及超/ 球体/ 划分/ 高维/ 数据/ 以/ 形成/ 页面/ 区域/ ,/ 从而/ 在/ 更/ 高效/ 的/ 处理/ 相似性/ 查询/ 时/ 避免/ 了/ 较/ 高/ 的/ 区域/ 重叠/ 度/ ./ SS/ +/ -/ 树/ [/ 24/ ]/ 是/ SS/ -/ 树/ 的/ 改进/ ,/ 相较/ SS/ -/ 树/ ,/ SS/ +/ -/ 树/ 利用/ 更/ 紧密/ 的/ 边界/ 超/ 球体/ 划分/ 高维/ 数据/ ,/ 在/ 执行/ 节点/ 分裂/ 过程/ 中/ 更好/ 的/ 利用/ 了/ 数据/ 的/ 聚类/ 特性/ ,/ 同时/ 利用/ 本地/ 重构/ 规则/ 构建/ 索引/ 树/ 以便/ 减少/ 区域/ 重叠/ 度/ ./ CSS/ -/ 树/ [/ 25/ ]/ 根据/ 半/ 结构化/ 数据/ 的/ 特点/ ,/ 基于/ 聚类/ 的/ 思想/ 进行/ 索引/ 节点/ 组织/ 及/ 溢出/ 节点/ 的/ 分裂/ ,/ 同时/ 提出/ 了/ 高效/ 的/ 搜索/ 剪枝/ 策略/ ,/ 能/ 有效/ 地/ 提高/ 针对/ 半/ 结构化/ 数据/ 的/ 相似性/ 搜索/ 效率/ ./ (/ 2/ )/ k/ -/ d/ -/ 树类/ ./ k/ -/ d/ -/ 树为/ 高/ 维空间/ 中/ 的/ 二叉/ 查找/ 树/ ,/ 可/ 用于/ 点/ 数据/ 相似性/ 搜索/ ./ 如图/ 4/ 所示/ ,/ k/ -/ d/ -/ 树/ 利用/ 超平面/ 分割/ 数据/ 空间/ ,/ 保证/ 了/ 不同/ 节点/ 对应/ 的/ 页面/ 区域间/ 没有/ 重叠/ ,/ 避免/ 了/ 重复/ 搜索/ ./ k/ -/ d/ -/ 树是/ 基于/ 空间/ 的/ 划分/ 方式/ ,/ 不能/ 充分考虑/ 数据/ 在/ 空间/ 中/ 的/ 实际/ 分布/ 情况/ ,/ 导致/ 很多/ 节点/ 包含/ 很少/ 的/ 数据/ 对象/ ;/ 同时/ k/ -/ d/ -/ 树/ 高度/ 上/ 不/ 平衡/ ,/ 进一步/ 影响/ 了/ 搜索/ 效率/ ./ Adaptivek/ -/ d/ -/ 树/ [/ 26/ ]/ 为/ k/ -/ d/ -/ 树/ 的/ 变种/ ,/ 它/ 在/ 利用/ 超平面/ 分割/ 数据/ 时/ 保证/ 得到/ 的/ 两个/ 子/ 空间/ 内点/ 数据/ 的/ 数目/ 相等/ ,/ 超平面/ 上/ 不/ 一定/ 要/ 包含/ 数据/ ,/ 每个/ 节点/ 内/ 只能/ 包含/ 定量/ 的/ 数据/ ,/ 当/ 溢出/ 时需/ 进行/ 节点/ 分裂/ ./ kd/ -/ B/ -/ 树/ [/ 27/ ]/ 采用/ 了/ B/ -/ 树/ 的/ 思想/ ,/ 使/ 其/ 成为/ 平衡/ 的/ 多叉树/ ./ 当/ 节点/ 溢出/ 时/ ,/ 在/ 节点/ 内部/ 执行/ 强制/ 分割/ 策略/ ,/ 使/ 其/ 变为/ 相邻/ 的/ 子/ 空间/ ./ 但是/ 这种/ 节点/ 分割/ 方法/ 不能/ 保证/ 最大/ 的/ 空间/ 利用率/ ./ (/ 3/ )/ 量化/ 近似/ 类/ ./ VA/ -/ File/ 首次/ 提出/ 了/ 量化/ 近似/ 的/ 思想/ ,/ 其本质/ 上/ 并/ 不能/ 称为/ 一种/ 索引/ 结构/ ,/ 它/ 提出/ 了/ 利用/ 数据压缩/ 技术/ 以便/ 加速/ 顺序/ 扫描/ 的/ 方法/ ./ VA/ -/ File/ 维护/ 两个/ 文件/ :/ 高维/ 数据/ 的/ 量化/ 近似/ 表示/ Page5/ (/ 以/ 压缩/ 的/ 比特/ 串/ 形式/ 表示/ )/ 及其/ 精确/ 表示/ ./ 空间/ 中/ 的/ 每/ 一维/ 被/ 分配/ 一个/ 比特/ 串/ 近似/ 表示/ 其/ 刻度/ (/ 比特/ 串/ 的/ 长度/ 决定/ 了/ 近似/ 表示/ 的/ 精度/ )/ ,/ 空间/ 被/ 刻度/ 值/ 划分/ 为/ 大量/ 子/ 区间/ ,/ 空间/ 中/ 的/ 高维/ 点/ 根据/ 其/ 所在/ 子/ 区间/ 的/ 坐标/ 近似/ 表示/ ./ 当/ 进行/ 相似性/ 搜索/ 时/ ,/ 首先/ 根据/ 查询/ 点/ 的/ 近似/ 表示/ 进行/ 顺序/ 扫描/ 确定/ 子/ 区间/ ,/ 然后/ 再/ 对子/ 区间/ 内/ 的/ 数据/ 进行/ 精确/ 扫描/ 来/ 确定/ 最终/ 结果/ ./ VA/ +/ -/ File/ [/ 28/ ]/ 方法/ 是/ VA/ -/ File/ 方法/ 的/ 改进/ ,/ 首先/ 使用/ Karhunen/ -/ Loeve/ 变换/ 来/ 去除/ 各维/ 之间/ 的/ 相关性/ ,/ 然后/ 根据/ 变换/ 后/ 各维/ 的/ 能量/ (/ 方差/ )/ 做/ 不/ 均匀/ 的/ 维数/ 分配/ ./ 在/ 保证/ 分配/ 的/ 总维数/ 不变/ 的/ 前提/ 下/ ,/ 能够/ 更/ 精确/ 地/ 估计/ 特征向量/ ;/ LPC/ -/ File/ [/ 29/ ]/ 同时/ 采用/ 极坐标/ 的/ 方法/ 近似/ 表示/ 高维/ 数据/ ,/ 提高/ 了/ 数据/ 的/ 近似/ 表示/ 精度/ 及/ 相似性/ 搜索/ 精度/ ;/ VQ/ -/ Index/ [/ 30/ ]/ 用/ 矢量/ 量化/ 替代/ VA/ -/ File/ 中/ 的/ 标量/ 量化/ ,/ 有效/ 提高/ 了/ 相似性/ 搜索/ 效率/ ,/ 但/ 矢量/ 量化/ 器需/ 利用/ 历史数据/ 生成/ ./ 文献/ [/ 31/ ]/ 基于/ 高斯/ 混合/ 模型/ 提出/ 了/ 一种/ 矢量/ 量化/ 索引/ 方法/ ,/ 充分利用/ 了/ 各维/ 之间/ 的/ 统计/ 相关性/ ,/ 更加/ 精确/ 的/ 近似/ 表示/ 了/ 高维/ 数据/ 对象/ ./ 文献/ [/ 32/ ]/ 提出/ 了/ 一种/ 并行/ 压缩/ 优先/ 过滤/ 索引/ PCPF/ ,/ 通过/ 量化/ 特征向量/ 构建/ 近似/ 向量/ 空间/ 上/ 的/ 高维索引/ 结构/ ,/ 进行/ 空间/ 划分/ 并行/ 构建/ 多个/ 子/ 索引/ 分支/ ,/ 可以/ 显著/ 提升/ 查询/ 匹配/ 效率/ 及/ 精度/ ./ (/ 4/ )/ 高维/ 映射/ 到/ 一维/ 类/ ./ 空间/ 填充/ 利用/ 某种/ 方法/ 对/ 高/ 维空间/ 中/ 的/ 数据/ 近似/ 排序/ ,/ 尽可能/ 确保/ 数据/ 点间/ 的/ 相对/ 位置/ 不变/ ,/ 将/ 高维/ 数据/ 从/ 高/ 维空间/ 映射/ 到/ 一维/ 线性/ 空间/ ,/ 其/ 典型/ 代表/ 有/ Z/ -/ Order/ 、/ Hilbert/ 曲线/ 等/ ,/ 如图/ 5/ 所示/ ./ 但/ 此类/ 方法/ 灵活性/ 不足/ ,/ 如果/ 对/ 两个/ 不同/ 区域/ 的/ 索引/ 进行/ 组合/ ,/ 至少/ 要/ 对/ 其中/ 一个/ 进行/ 重新/ 编码/ ,/ 且/ 对/ 范围/ 查询/ 的/ 效率/ 较差/ ./ iDistance/ 方法/ 利用/ 数据/ 点/ 相对/ 参考点/ 的/ 距离/ 将/ 空间/ 中/ 高维/ 数据/ 映射/ 到/ 一/ 维空间/ ./ 如图/ 6/ 所示/ ,/ 该/ 方法/ 首先/ 对/ 空间/ 内/ 高维/ 数据/ 进行/ 聚类/ ,/ 为/ 每/ 一个/ 数据/ 聚集区/ 顺序/ 编号/ ,/ 并/ 为/ 每/ 一个/ 数据/ 聚集区/ 选择/ 一个/ 参考点/ ./ 然后/ 根据/ 高维/ 数据/ 所在/ 子/ 空间/ 编号/ 及其/ 到/ 参考点/ 的/ 距离/ 将/ 高维/ 数据/ 映射/ 为/ 一维/ 数值/ ./ BC/ -/ iDistance/ [/ 33/ ]/ 通过/ 引入/ 位码/ 来/ 近似/ 表示/ 参考点/ 与/ 数据/ 之间/ 的/ 位置/ 关系/ ,/ 将/ 高维/ 向量/ 压缩/ 为/ 二维/ 向量/ ,/ 并/ 利用/ 特殊/ 的/ B/ +/ -/ 树/ 组织/ ,/ 查询/ 过程/ 中/ 实现/ 了/ 两层/ 剪枝/ 处理/ ,/ 提高/ 了/ 查询/ 效率/ ./ 文献/ [/ 34/ ]/ 提出/ 了/ 一种/ 基于/ 聚类/ 分解/ 的/ 高维索引/ ,/ 首先/ 基于/ 聚类/ 分解/ 的/ 思想/ 把/ 聚类/ 得到/ 的/ 超/ 球体/ 分解/ 为/ 半径/ 不同/ 的/ 空腔/ 超/ 球体/ ,/ 然后/ 对/ 空腔/ 超球/ 体内/ 数据/ 利用/ iDistance/ 方/ 映射/ 为/ 一维/ 数值/ ,/ 可以/ 有效/ 提高/ 搜索/ 效率/ ./ 金字塔/ 技术/ 首先/ 将/ 数据/ 空间/ 划分/ 为/ 以/ 中心点/ 为/ 共同/ 顶点/ 的/ 多个/ 高维/ 金宇塔/ ,/ 并/ 为/ 每个/ 金字塔/ 确定/ 一个/ 金字塔/ 值/ ,/ 然后/ 根据/ 高维/ 数据/ 所在/ 的/ 金字塔/ 值/ 及其/ 到/ 金字塔/ 底/ 的/ 垂直距离/ 将/ 高维/ 数据/ 映射/ 为/ 一维/ 数值/ ./ P/ +/ -/ 树/ [/ 35/ ]/ 首先/ 对/ 高维/ 数据/ 聚类/ ,/ 并/ 将/ 每个/ 数据/ 聚集区/ 规整/ 为/ 超/ 立方体/ ,/ 之后/ 利用/ 金字塔/ 技术/ 的/ 思想/ 索引/ 高维/ 数据/ ,/ 增强/ 了/ 金字塔/ 技术/ 的/ 鲁棒性/ ./ iMinMax/ [/ 36/ ]/ 方法/ 也/ 为/ 一种/ 将/ 高维/ 数据/ 映射/ 为/ 一维/ 数值/ 的/ 索引/ 结构/ ,/ 首先/ 找出/ 某个/ 高维/ 数据/ 所有/ 维度/ 中/ 维度/ 值/ 最大/ 和/ 最小/ 的/ 两个/ 维度/ ,/ 然后/ 根据/ 两个/ 维度/ 值/ 将/ 高维/ 数据/ 映射/ 为/ 一维/ 数据/ ,/ 注意/ 这里/ 的/ 映射/ 也/ 为/ 多/ 对/ 一/ 的/ 映射/ ./ 此外/ ,/ 学者/ 们/ 还/ 从/ 不同/ 的/ 角度/ 提出/ 了/ 多种/ 索引/ 结构/ ,/ 如/ 利用/ 超平面/ 划分/ 高维/ 特征/ 空间/ 形成/ 的/ Quad/ -/ 树/ [/ 37/ ]/ ,/ 基于/ 哈希/ 存取方法/ 形成/ 的/ 网格/ 文件/ 类/ [/ 38/ ]/ 索引/ 结构/ 及/ IQ/ -/ 树/ [/ 39/ ]/ 等/ ,/ 这里/ 不再/ 详细/ 介绍/ ./ 2.2/ 度量/ 空间/ 高维索引/ 2.2/ ./ 1/ 度量/ 空间/ 高维索引/ 的/ 分类/ 度量/ 空间/ 高维索引/ 利用/ 满足/ 三角/ 不等式/ 性质/ 的/ 距离/ 函数/ 来/ 实现/ 高维/ 数据/ 的/ 相似性/ 搜索/ ,/ 从/ 不同/ 的/ 角度/ 可以/ 对/ 度量/ 空间/ 高维索引/ 做出/ 不同/ 的/ 分类/ ./ (/ 1/ )/ 根据/ 索引/ 组织/ 形式/ ,/ 可/ 分为/ 树型/ 索引/ 和/ 非树型/ 索引/ ./ 树型/ 索引/ 中/ 索引/ 节点/ 按照/ 树/ 的/ 形式/ 组织/ ,/ 如/ BK/ -/ 树/ [/ 40/ ]/ 、/ VP/ -/ 树/ [/ 41/ ]/ 等/ ;/ 非树型/ 索引/ 中/ 索引/ 节点/ 不/ 按照/ 树/ 的/ 形状/ 组织/ ,/ 如/ AESA/ [/ 42/ ]/ 等/ ./ (/ 2/ )/ 根据/ 索引/ 构建/ 过程/ 中/ 所/ 使用/ 的/ 距离/ 函数/ 类型/ ,/ 可/ 分为/ 离散/ 距离/ 类及/ 连续/ 距离/ 类/ ./ 离散/ 距离/ 类索/ Page6/ (/ 3/ )/ 混合/ 索引/ 方法/ 将/ 树状/ 索引/ 与/ 顺序/ 扫描/ 方法/ 引/ 利用/ 离散/ 距离/ 函数/ 构建/ 索引/ ,/ 距离/ 函数/ 提供/ 有限/ 数量/ 的/ 距离/ 值/ ,/ 如/ BK/ -/ 树/ ;/ 连续/ 距离/ 类/ 利用/ 连续/ 的/ 距离/ 函数/ 构建/ 索引/ ,/ 距离/ 函数/ 提供/ 大量/ 甚至/ 无限/ 的/ 距离/ 值/ ,/ 如/ M/ -/ 树/ [/ 43/ ]/ 等/ ./ 相结合/ ,/ 具体/ 实例/ 有/ GC/ -/ 树/ [/ 44/ ]/ 、/ DABS/ -/ 树/ [/ 45/ ]/ 等/ ./ 2.2/ ./ 2/ 典型/ 度量/ 空间/ 高维索引/ (/ 1/ )/ VP/ -/ 树类/ ./ VP/ -/ 树为/ 一种/ 连续/ 距离/ 类树型/ 索引/ ,/ 采用/ 自上而下/ 的/ 方法/ 来/ 构建/ ,/ 利用/ 数据/ 对象/ 到/ 参考点/ 之间/ 的/ 相对/ 距离/ 修剪/ 查询/ 过程/ 中/ 与/ 给定/ 查询/ 语义/ 无关/ 的/ 数据/ ,/ 不/ 支持/ 数据/ 的/ 更新/ 和/ 删除/ ./ VP/ -/ 树/ (/ 图/ 7/ )/ 递归/ 构造/ 一棵/ 平衡/ 二叉树/ ,/ 首先/ 选择/ 任意/ 数据/ 对象/ p/ 作为/ 根/ 节点/ (/ 参考点/ )/ ,/ 同时/ 计算/ 出/ 其他/ 数据/ 到/ p/ 的/ 中值/ 距离/ M/ ;/ 然后/ 将/ 与/ p/ 的/ 距离/ 小于/ M/ 的/ 一半/ 数据/ 放入/ 左子/ 树/ ,/ 另一半/ 放入/ 右子/ 树/ ;/ 针对/ 左右/ 子树/ 重复/ 执行/ 上述/ 过程/ ,/ 直到/ 节点/ 中/ 数据/ 数目/ 小于/ 给定/ 的/ 阈值/ ./ 针对/ VP/ -/ 树/ 采用/ 二叉树/ 结构/ 所/ 导致/ 的/ 索引/ 高度/ 很/ 高/ ,/ 从而/ 引起/ 大量/ 的/ 距离/ 计算/ ,/ 造成/ 性能/ 下降/ 的/ 问题/ ,/ MVPT/ [/ 46/ ]/ 在/ 一个/ 节点/ 中/ 使用/ 多个/ 参考点/ 对/ 数据/ 进行/ 划分/ ,/ 一定/ 程度/ 上/ 提高/ 了/ 搜索/ 效率/ ./ VPF/ [/ 47/ ]/ 将/ VP/ -/ 树/ 的/ 每/ 一层/ 中/ 参考点/ 距离/ 大约/ 为/ M/ 的/ “/ 中间/ 部分/ ”/ 数据/ 对象/ 挑选/ 出来/ ,/ 并用/ “/ 中间/ 部分/ ”/ 数据/ 构建/ 第二/ 棵/ 树/ ,/ 以此类推/ 获得/ 具有/ 多棵/ 树/ 的/ “/ 森林/ ”/ ./ 这样/ 当/ 需要/ 搜索/ “/ 中间/ 部分/ ”/ 数据/ 时/ ,/ 不用/ 同时/ 进入/ 左右/ 子树/ 进行/ 搜索/ ./ (/ 2/ )/ BK/ -/ 树类/ ./ BK/ -/ 树/ (/ 图/ 8/ )/ 属于/ 离散/ 距离/ 类/ 树状/ 索引/ ,/ 索引/ 树/ 的/ 构造/ 过程/ 如下/ :/ 首先/ 从/ 空间/ 内/ 原始数据/ 集/ U/ 中/ 任意/ 选择/ 一个/ 数据/ 对象/ p/ ∈/ U/ 作为/ 根/ 节点/ ,/ 然后/ 利用/ 离散/ 距离/ 函数/ 将/ 剩余/ 的/ 数据/ 对象/ 划分/ 为/ 多个/ 子集/ 作为/ 树/ 的/ 分支/ ./ 对于/ 每个/ 离散/ 距离/ i/ ,/ 定义/ 子集/ Ui/ =/ {/ u/ ∈/ U/ ,/ d/ (/ u/ ,/ p/ )/ =/ i/ }/ 为/ 距离/ 根/ 节点/ 为/ i/ 的/ 所有/ 数据/ 元素/ 的/ 集合/ ,/ 并/ 为/ 每/ 一个/ 非/ 空子/ 集/ Ui/ 在/ BK/ -/ 树上/ 建立/ 分支/ ./ 然后/ 为/ 所有/ 的/ 非/ 空子/ 集/ Ui/ 循环/ 构造/ BK/ -/ 树/ 直到/ 子/ 集中/ 剩余/ 元素/ 数目/ 为/ 1/ 或/ 小于/ 给定/ 的/ 阈值/ 为止/ ,/ 所有/ 将/ 作为/ 子集/ 根/ 节点/ 的/ 数据/ 对象/ 称为/ 支点/ (/ pivot/ )/ ./ FQ/ -/ 树/ [/ 48/ ]/ 对/ BK/ -/ 树/ 的/ 结构/ 进行/ 了/ 改进/ ./ 与/ BK/ -/ 树/ 不同/ 的/ 是/ ,/ FQ/ -/ 树/ 所有/ 的/ 数据/ 元素/ 存储/ 在/ 叶子/ 节点/ 中/ ,/ 且/ 存储/ 在/ 同/ 一层/ 节点/ 中/ 的/ 所有/ 支点/ 是/ 相同/ 的/ ./ 该/ 结构/ 可以/ 减少/ 查询/ 时/ 距离/ 比较/ 的/ 次数/ ,/ 代价/ 是/ 树/ 的/ 高度/ 增加/ ./ FHQ/ -/ 树/ [/ 49/ ]/ 对/ FQ/ -/ 树/ 进一步/ 做/ 了/ 改进/ —/ —/ —/ 强制/ 所有/ 的/ 叶子/ 节点/ 在/ 同一/ 高度/ 上/ ,/ 这样/ 的/ 设置/ 使/ 我们/ 进行/ 相似性/ 搜索/ 时/ 可以/ 统一/ 考虑/ 同/ 一层/ 的/ 节点/ ,/ 不用/ 额外/ 区分/ 叶子/ 节点/ 和/ 中间/ 节点/ ,/ 提高/ 了/ 搜索/ 效率/ ,/ 但/ 其/ 代价/ 是/ 增加/ 了/ 某些/ 叶子/ 节点/ 的/ 高度/ ./ FQA/ [/ 50/ ]/ 不是/ 树/ 的/ 形式/ ,/ 但/ 具有/ 比/ FHQ/ -/ 树/ 更/ 紧凑/ 的/ 结构/ ./ FQA/ 将/ FHQ/ -/ 树叶子/ 节点/ 中/ 的/ 数据/ 按/ 从/ 左/ 至/ 右/ 的/ 顺序/ 放入/ 一个/ 数组/ 中/ ,/ 并/ 记录/ 下/ 从/ 根/ 节点/ 到/ 数据/ 的/ 高度/ ./ 在/ 同样/ 内存/ 的/ 情况/ 下/ ,/ FQA/ 可以/ 较/ FHQ/ -/ 树/ 访问/ 更/ 多/ 的/ 支点/ ,/ 从而/ 提高/ 搜索/ 效率/ ./ (/ 3/ )/ M/ -/ 树类/ ./ M/ -/ 树是/ 基于/ 连续/ 距离/ 类/ 的/ 平衡/ 树状/ 索引/ ./ 在/ M/ -/ 树中/ 每个/ 节点/ 中/ 首先/ 选取/ 代表/ 元素/ ,/ 然后/ 将/ 靠近/ 代表/ 元素/ 的/ 数据/ 构建/ 成以/ 代表/ 元素/ 为根/ 的/ 子树/ ,/ 代表/ 元素/ 存储/ 其/ 覆盖/ 半径/ 信息/ ./ 当/ 进行/ 相似性/ 搜索/ 时/ ,/ 首先/ 比较/ 搜索/ 范围/ 与/ 节点/ 中/ 代表/ 元素/ 的/ 覆盖范围/ 以/ 确定/ 语义/ 相关/ (/ 范围/ 相交/ )/ 的/ 子树/ ,/ 然后/ 进入/ 子树中/ 进一步/ 搜索/ ./ 当/ 插入/ 数据/ 时/ ,/ 选择/ 距离/ 最近/ 的/ 代表/ 元素/ 对应/ 的/ 子树/ 插入/ ,/ 当/ 引起/ 节点/ 溢出/ 时/ ,/ 需/ 执行/ 分裂/ 操作/ (/ 图/ 9/ )/ ./ M/ -/ 树/ 可以/ 支持/ 数据/ 的/ 更新/ ,/ 同时/ 很大/ 程度/ 上/ 减少/ 了/ 相似性/ 搜索/ 过程/ 中/ 的/ 计算/ 量/ ,/ 但是/ 没有/ 处理/ 好/ 节点/ 间/ 的/ 重叠/ 问题/ ./ MB/ +/ -/ 树/ [/ 51/ ]/ 针对/ 节点/ 间/ 的/ 重叠/ 问题/ ,/ 利用/ B/ +/ -/ 树/ 和/ Block/ -/ 树/ 索引/ 空间/ 内/ 高维/ 数据/ ,/ 避免/ 了/ 兄弟/ 节/ Page7/ 点间/ 的/ 区域/ 重叠/ ./ M2/ -/ 树/ [/ 52/ ]/ 使用/ 多种/ 距离/ 函数/ ,/ 可以/ 同时/ 根据/ 数据/ 的/ 多个/ 特征/ 对/ 数据/ 进行/ 检索/ ,/ 实现/ 了/ 高维/ 数据/ 的/ 复杂/ 查询/ ./ Slim/ -/ 树/ [/ 53/ ]/ 提出/ 了/ 基于/ 最小/ 生成/ 树/ 的/ 节点/ 分裂/ 方法/ ,/ 并/ 通过/ 一个/ 后/ 处理过程/ 最小化/ 索引/ 节点/ 数目/ 及/ 节点/ 间/ 的/ 重叠/ 度/ ./ M/ +/ -/ 树/ [/ 54/ ]/ 提出/ 了/ 一种/ 基于/ 距离/ 及/ 关键/ 维/ 的/ 两步/ 分割/ 策略/ ,/ 根据/ 对/ 相似性/ 影响/ 最大/ 的/ 关键/ 维对/ 数据/ 进行/ 二次/ 过滤/ ,/ 在/ 有效/ 提高/ 数据/ 分割/ 效率/ 的/ 同时/ 降低/ 了/ 索引/ 树/ 的/ 高度/ ./ MS/ -/ 树/ [/ 55/ ]/ 提出/ 了/ 活动/ 子/ 空间/ 和/ 非/ 活动/ 子/ 空间/ 的/ 概念/ ,/ 并/ 通过/ 一种/ 空间/ 映射/ 方法/ 减少/ 对非/ 活动/ 子/ 空间/ 的/ 访问/ 次数/ ,/ 提高/ 了/ 查询/ 性能/ ./ (/ 4/ )/ 混合/ 索引/ 结构/ ./ 高维索引/ 能够/ 有效/ 处理/ 聚类/ 或/ 分布/ 密集/ 的/ 数据/ 集/ ,/ 当/ 数据分布/ 特别/ 稀疏/ 时/ ,/ 采用/ 顺序/ 扫描/ 可能/ 更加/ 有效/ ./ 混合/ 索引/ 能够/ 区分/ 数据/ 集在/ 空间/ 中/ 的/ 分布/ 状态/ ,/ 针对/ 不同/ 的/ 数据分布/ 针对性/ 的/ 采用/ 顺序/ 扫描/ 或/ 树状/ 索引/ ,/ 能够/ 有效/ 的/ 提高/ 相似性/ 搜索/ 的/ 效率/ ./ 如/ GC/ -/ 树/ 首先/ 根据/ 一个/ 密度/ 函数/ 划分/ 数据/ 密集/ 区域/ 及/ 稀疏/ 区域/ ,/ 然后/ 对/ 两者/ 分布/ 采用/ 树状/ 索引/ 及/ 顺序/ 扫描/ ;/ DABS/ -/ 树/ 根据/ 数据分布/ 动态/ 调整/ 数据/ 页/ 大小/ ,/ 并/ 通过/ 顺序/ 扫描/ 一个/ 一级/ 目录/ 以/ 解决/ 目录/ 过载/ 的/ 问题/ ;/ 文献/ [/ 56/ ]/ 对/ 树状/ 索引/ 无法/ 有效/ 处理/ 的/ 数据/ 采用/ 顺序/ 扫描/ 的/ 方法/ ,/ 能够/ 一定/ 程度/ 上/ 解决/ “/ 维灾/ ”/ 带来/ 的/ 影响/ ./ 文献/ [/ 57/ ]/ 提出/ 一种/ 基于/ 查询/ 采样/ 的/ 高维/ 数据/ 混合/ 索引/ 结构/ ,/ 基于/ 查询/ 采样/ 的/ 方法/ 将/ 分步/ 稀疏/ 的/ 数据/ 从/ 树状/ 索引/ 中/ 分离出来/ ,/ 并/ 对/ 其/ 进行/ 顺序/ 扫描/ 处理/ ,/ 能够/ 有效/ 提高/ 搜索/ 效率/ ./ 此外/ ,/ 学者/ 们/ 还/ 提出/ 了/ 多种/ 索引/ 结构/ ,/ 如/ 针对/ 离散/ 距离/ 函数/ 的/ BK/ -/ 树/ ;/ 动态/ 多级/ 树/ SA/ -/ 树/ [/ 58/ ]/ ;/ 可/ 适用/ 于/ 离散/ 距离/ 函数/ 及/ 连续/ 距离/ 函数/ 的/ BS/ -/ 树/ [/ 59/ ]/ 等/ ,/ 这里/ 不再/ 详细/ 介绍/ ./ 2.3/ 高维/ 数据/ 索引/ 综合/ 比较/ 综上/ ,/ 学者/ 们/ 已/ 对/ 高维索引/ 进行/ 了/ 大量/ 研究/ ,/ 提出/ 众多/ 索引/ 结构/ 及其/ 相关/ 算法/ 用以/ 组织/ 管理/ 高维/ 数据/ ,/ 表/ 1/ 从/ 数据/ 划分/ 方式/ 、/ 数据/ 节点/ 组织/ 形式/ 、/ 所/ 支持/ 的/ 数据类型/ 及/ 是否/ 支持/ 数据/ 更新/ 等/ 方面/ 对/ 几种/ 典型/ 高维索引/ 结构/ 进行/ 了/ 综合/ 比较/ ./ 但是/ ,/ 高维索引/ 并/ 没有/ 在/ 基于/ 语义/ 相似性/ 搜索/ 中/ 得到/ 广泛应用/ ,/ 主要/ 是/ 其/ 性能/ 受到/ 以下/ 因素/ 的/ 制约/ :/ (/ 1/ )/ 对/ 基于/ 语义/ 的/ 相似性/ 搜索/ 性能/ 不/ 稳定/ ,/ 当/ 搜索/ 范围/ 增大/ 时/ ,/ 获取/ 有用/ 信息/ 的/ 代价/ 迅速/ 上升/ ;/ (/ 2/ )/ 对/ 空间/ 维数/ 较/ 敏感/ ,/ 随着/ 维度/ 的/ 升高/ 高维索引/ 对/ 数据/ 的/ 过滤/ 效果/ 越来越/ 差/ ,/ 当/ 空间/ 维数/ 超过/ 某一/ “/ 临界值/ ”/ 时/ ,/ 采用/ 高维索引/ 的/ 相似性/ 搜索/ 效率/ 甚至/ 不如/ 顺序/ 扫描/ ;/ (/ 3/ )/ 基于/ 语义/ 相似性/ 搜索/ 容易/ 受到/ 高维索引/ 划分/ 方式/ 组织/ 形式/ 数据类型/ 数据/ 更新/ R/ -/ 树/ SS/ -/ 树超/ 球体/ 树形/ 空间数据/ 支持/ SR/ -/ 树/ 空间/ 矩形/ +/ 超/ 球体/ 树形/ 空间数据/ 支持/ SS/ +/ -/ 树超/ 球体/ +/ 聚类/ 树形/ 空间数据/ 支持/ k/ -/ d/ -/ 树/ 超平面/ 树形/ 点/ 数据/ 支持/ 空间/ 填充/ 曲线/ 保距/ 映射/ 非/ 树形/ 点/ 数据/ 不/ 支持/ VA/ -/ File/ 空间/ 划分/ 非/ 树形/ 点/ 数据/ 支持/ VP/ -/ 树/ 相对/ 距离/ 树形/ 点/ 数据/ 不/ 支持/ M/ -/ 树/ 相对/ 距离/ 树形/ 点/ 数据/ 支持/ iDistance/ 聚类/ +/ 相对/ 距离/ 树形/ 点/ 数据/ 不/ 支持/ 金字塔/ 技术/ 空间/ 划分/ +/ 相对/ 距离/ 树形/ 点/ 数据/ 不/ 支持/ 混合/ 索引/ 树形/ 索引/ +/ 顺序/ 扫描/ 树形/ 点/ 数据/ 支持/ 空间/ “/ 语义/ 无关/ ”/ 维度/ 的/ 影响/ ;/ (/ 4/ )/ 现有/ 的/ 高维索引/ 基本/ 都/ 在/ 某种/ 特定/ 情况/ 下/ 提出/ (/ 如有/ 的/ 针对/ 聚类/ 数据/ ,/ 有/ 的/ 针对/ 均匀分布/ 数据/ )/ ,/ 缺乏/ 对/ 数据/ 在/ 语义/ 空间/ 内/ 分布/ 的/ 自适应性/ ,/ 不能/ 很/ 好/ 地/ 满足用户/ 的/ 要求/ ./ 3/ 高维/ 语义/ 空间/ 降维/ “/ 维度/ 灾难/ ”/ 指在/ 对/ 高维/ 数据组织/ 管理/ 处理过程/ 中/ 遇到/ 的/ 由于/ 数据/ 特征/ (/ 维度/ )/ 过多/ 而/ 引起/ 的/ 所有/ 问题/ ,/ 主要/ 表现/ 为/ 以下/ 几个/ 方面/ :/ (/ 1/ )/ 高/ 维空间/ 数据分布/ 非常/ 稀疏/ ,/ 很难/ 对/ 有/ 相似/ 语义/ 的/ 数据/ 信息/ 进行/ 有效/ 的/ 组织/ 管理/ ,/ 在/ 发现/ 有/ 相似/ 语义/ 的/ 数据/ 信息/ 时/ ,/ 需要/ 访问/ 较大/ 的/ 空间/ 区域/ ;/ (/ 2/ )/ 高/ 维空间/ 中/ 一个/ 给定/ 数据/ 到/ 其/ 最近/ 邻/ 和/ 最远/ 邻/ 的/ 距离/ 在/ 很多/ 情况/ 下/ 几乎/ 是/ 相等/ 的/ ,/ 不能/ 高效/ 地/ 组织/ 和/ 发现/ 与/ 该/ 数据/ 点/ 语义/ 相似/ 的/ 数据/ 信息/ ;/ (/ 3/ )/ 随着/ 维数/ 的/ 升高/ ,/ 高维索引/ 的/ 数据/ 划分/ 效果/ 变差/ ,/ 数据/ 索引/ 节点/ 之间/ 的/ 重叠/ 度/ 随之/ 增大/ ,/ 导致/ 了/ 数据/ 的/ 重复/ 搜索/ 并/ 增加/ 了/ 数据/ 访问/ 路径/ ,/ 从而/ 影响/ 了/ 搜索/ 效率/ ./ 此外/ ,/ 高维索引/ 搜索/ 效率/ 受/ 语义/ 空间/ 维度/ 及/ 数据/ 对象/ 内在/ 维度/ (/ IntrinsicDimension/ )/ 的/ 影响/ ,/ 当/ 在/ 高/ 维空间/ 处理/ 内在/ 维度/ 很/ 低/ 的/ 数据/ 对象/ 时/ (/ 如/ 在/ 1000/ 维空间/ 内/ 查找/ 2/ 维/ 平面/ )/ ,/ 由于/ 受到/ 与/ 内在/ 维度/ 无关/ 维度/ 的/ 影响/ ,/ 导致/ 搜索/ 效率/ 很/ 低/ ./ 降维/ 方法/ 是/ 解决/ “/ 维灾/ ”/ 问题/ 的/ 有效/ 手段/ ,/ 通过/ 有效/ 手段/ 将/ 数据/ 从/ 高/ 维空间/ 映射/ 到/ 低/ 维空间/ ,/ 同时/ 尽可能/ 保持数据/ 集/ 的/ 整体/ 结构/ 和/ 分布/ 不变/ ,/ 从而/ 获得/ 高维/ 数据/ 的/ 一个/ 有/ 意义/ 的/ 低维/ 表示/ ,/ 进而/ 降低/ 基于/ 语义/ 的/ 相似性/ 搜索算法/ 的/ 复杂性/ ,/ 提高/ 搜索/ 效率/ ,/ 如图/ 10/ ./ Page8/ 降维/ 方法/ 从/ 数学/ 角度/ 的/ 描述/ 如下/ :/ 设/ X/ =/ {/ xi/ }/ Ni/ =/ 1/ / RD/ 为/ D/ 维/ 语义/ 空间/ RD/ 内/ 数据/ 元素/ 个数/ 为/ N/ 的/ 一个/ 数据/ 集/ ,/ X/ 的/ 内在/ 维度/ 为/ d/ (/ d/ / D/ )/ ,/ 即/ 数据/ 集/ X/ 内/ 的/ 数据/ 元素/ 属于/ 嵌于/ D/ 维/ 语义/ 空间/ RD/ 内/ 一个/ 维度/ 为/ d/ 的/ 子/ 空间/ ./ 降维/ 技术/ 通过/ 找到/ 合适/ 的/ 降维/ 映射/ F/ :/ X/ →/ Y/ ,/ 将/ 数据/ 集/ X/ 映射/ 为/ 一个/ 新/ 的/ 维度/ 为/ d/ 的/ 数据/ 集/ Y/ ,/ Y/ =/ {/ yi/ }/ N/ 原/ 数据/ 集/ 的/ 拓扑/ 结构/ 不变/ ,/ 从而/ 可以/ 在/ 较/ 低/ 维空间/ 内/ 对/ 数据/ 对象/ 进行/ 处理/ ,/ 有效/ 地/ 消除/ 了/ 维灾/ 的/ 影响/ ./ 目前/ 学者/ 们/ 已经/ 陆续/ 提出/ 了/ 多种/ 降维/ 方法/ ,/ 如/ 潜在/ 语义/ 索引/ [/ 60/ ]/ 、/ 主/ 成分/ 分析/ [/ 61/ ]/ 、/ 多维/ 尺度/ 分析/ [/ 62/ ]/ 以及/ 近年来/ 提出/ 的/ 基于/ 流形/ 学习/ [/ 63/ ]/ 的/ 算法/ 等/ ./ 从/ 不同/ 角度/ 可以/ 对/ 降维/ 方法/ 作/ 如下/ 分类/ :/ 从/ 降维/ 映射/ 形式/ 角度/ 可/ 分为/ 线性/ 及/ 非线性/ 降维/ ;/ 根据/ 降维/ 过程/ 中/ 是否/ 使用/ 数据/ 中/ 的/ 监督/ 信息/ 可/ 分为/ 无/ 监督/ 降维/ ,/ 有/ 监督/ 降维及/ 半/ 监督/ 降维/ ;/ 从/ 操作/ 数据/ 集/ 范围/ 角度/ 可/ 分为/ 全局/ 方法/ 和/ 局部/ 方法/ ;/ 根据/ 降维/ 过程/ 中/ 特征/ 获取/ 途径/ 可/ 分为/ 特征/ 选取/ 和/ 特征/ 抽取/ 两类/ ./ 本文/ 根据/ 降维/ 映射/ 形式/ 将/ 现有/ 降维/ 技术/ 分为/ 线性/ 降/ 维和/ 非线性/ 降维/ ,/ 如图/ 11/ ./ 形式/ 上/ ,/ 设/ {/ xi/ }/ N/ 合/ ,/ 通过/ 降维/ 映射/ F/ (/ x/ )/ =/ 得到/ 较/ 低/ 维空间/ Rd/ 中/ 的/ 数据/ 集/ Y/ ,/ Y/ =/ {/ yi/ }/ NRd/ ./ 若/ F/ 的/ 每个/ 分量/ Fi/ 都/ 只是/ X/ 的/ 线性/ 函数/ ,/ 则/ 称/ F/ 为/ 线性/ 降维/ ;/ 否则/ ,/ 称/ F/ 为/ 非线性/ 降维/ ./ 3.1/ 线性/ 降维/ 方法/ 线性/ 降维/ 技术/ 以/ 其/ 简单/ 、/ 快速/ 、/ 易于/ 实现/ 、/ 不/ 存在/ 局部/ 极值/ 以及/ 相对/ 有效性/ 的/ 特点/ 得到/ 了/ 十分/ 广泛/ 的/ 应用/ ./ 以下/ 介绍/ 几种/ 典型/ 的/ 线性/ 降维/ 方法/ ./ (/ 1/ )/ 潜在/ 语义/ 索引/ (/ LatentSemanticIndex/ ,/ LSI/ )/ ./ LSI/ 基于/ 向量/ 空间/ 模型/ (/ VectorSpaceModel/ ,/ VSM/ )/ 提出/ ./ VSM/ 将/ 高维/ 数据/ 对象/ 描述/ 为/ 特征向量/ ./ LSI/ 对/ 空间/ 内/ 高维/ 数据/ 组成/ 的/ 特征/ 矩阵/ 进行/ 奇异/ 值/ 分解/ ,/ 并/ 舍弃/ 后面/ 绝对值/ 很小/ 的/ 奇异/ 值/ ,/ 进而/ 将/ 高维/ 数据/ 映射/ 到/ 低/ 维空间/ ,/ 同时/ 去/ 除了/ 语义/ 相似性/ 查询/ 过程/ 中/ 的/ 噪声/ 干扰/ ./ LSI/ 通过/ 矩阵/ 奇异/ 值/ 分解/ 并/ 人为/ 设置/ 阈值/ 舍弃/ 较/ 小/ 的/ 奇异/ 值/ ,/ 阈值/ 的/ 选取/ 将/ 直接/ 影响/ 到/ 搜索/ 的/ 精度/ ;/ 同时/ 由于/ 矩阵/ 分解/ 计算/ 量/ 较大/ ,/ 当/ 数据/ 规模/ 较大/ 或维数/ 过/ 高时/ ,/ LSI/ 效率/ 变低/ ./ 针对/ LSI/ 不能/ 处理/ 大规模/ 数据/ 的/ 问题/ ,/ RLSI/ [/ 64/ ]/ 将/ 根据/ 数据/ 对象/ 的/ 不同/ “/ 主题/ ”/ 将/ “/ 特征/ -/ 对象/ ”/ 矩阵/ 表示/ 为/ “/ 特征/ -/ 主题/ ”/ 矩阵/ 及/ “/ 主题/ -/ 对象/ ”/ 矩阵/ 的/ 乘积/ ,/ 然后/ 对/ 分解/ 后/ 的/ 矩阵/ 进行/ 并行处理/ ,/ 可以/ 有效/ 提高/ 系统/ 的/ 可扩展性/ 及/ 相似性/ 搜索/ 效率/ ./ (/ 2/ )/ 主/ 成分/ 分析/ (/ PrincipalComponentsAnalysis/ ,/ PCA/ )/ ./ PCA/ 方法/ 将/ 数据/ 映射/ 到/ 一组/ 新/ 变量/ (/ 主/ 成分/ )/ 上/ ,/ 并/ 通过/ 设置/ 数据/ 方差/ 的/ 阈值/ 舍弃/ 方差/ 较少/ 的/ 主/ 成分/ 以/ 达到/ 降维/ 的/ 目的/ ./ PCA/ 为/ 一种/ 坐标/ 变换/ 技术/ ,/ 新/ 得到/ 的/ 维度/ (/ 主/ 成分/ )/ 为原/ 维度/ 的/ 线性组合/ ,/ 并/ 尽可能/ 反映/ 数据/ 原有/ 的/ 信息/ ./ 但/ 在/ 降维/ 过程/ 中/ ,/ 主/ 成分/ 个数/ 需/ 人工/ 选取/ ,/ 选取/ 不当/ 将/ 导致/ 信息/ 丢失/ ./ (/ 3/ )/ 投影/ 寻踪/ (/ ProjectionPursuit/ ,/ PP/ )/ ./ 投影/ 寻踪/ [/ 65/ ]/ 可以/ 有效/ 地/ 分析/ 和/ 处理/ 服从/ 非/ 正态分布/ 的/ 高维/ 数据/ ./ 它/ 基于/ 某种/ 线性组合/ 将/ 高维/ 数据/ 投影/ 到/ 低维子/ 空间/ 中/ ,/ 并/ 寻找/ 能/ 很/ 好/ 地/ 反映/ 原/ 数据/ 特征/ 的/ 最佳/ 投影/ 方向/ ,/ 从而/ 能/ 在/ 低/ 维空间/ 对/ 数据/ 进行/ 分析/ 处理/ ./ PP/ 方法/ 降维/ 过程/ 中/ 由于/ 有/ 大量/ 的/ 点积/ 计算/ ,/ 当/ 空间/ 维度/ 过高时/ 降维/ 效率/ 变差/ ,/ 比较/ 适用/ 于/ 数据量/ 大/ 但/ 维度/ 较/ 低/ 的/ 数据/ 集/ ./ (/ 4/ )/ 离散/ 余弦/ 变换/ (/ DiscreteCosineTransform/ ,/ DCT/ )/ ./ DCT/ [/ 66/ ]/ 的/ 基本/ 思想/ 是/ 在/ 一定/ 损失/ 的/ 情况/ 下/ ,/ 采用/ 较/ 少数/ 目的/ 维数/ 来/ 表示/ 高维/ 数据/ ./ 其/ 基本原理/ 为/ 对于/ D/ 维/ 数据/ ξ/ =/ (/ ξ/ 0/ ,/ ξ/ 1/ ,/ …/ ,/ ξ/ D/ -/ 1/ )/ ,/ 令/ ε/ =/ (/ ε/ 0/ ,/ ε/ 1/ ,/ …/ ,/ ε/ D/ -/ 1/ )/ 为/ ξ/ 的/ DCT/ 结果/ ,/ 若/ ε/ 的/ 第/ m/ 项/ 之后/ 均/ 为/ 0/ (/ 或/ 绝对值/ 相对/ 首项/ 很小/ )/ ,/ 则/ 只/ 保留/ 前/ m/ 项/ ,/ 实现/ Page9/ 了/ 数据/ 的/ 降维/ ./ 高维/ 数据/ 经/ DCT/ 处理/ 后/ 具有/ 保距性/ ,/ 不/ 影响/ 数据/ 间/ 的/ 拓扑/ 结构/ ./ 实际操作/ 过程/ 中/ 需要/ 人为/ 控制/ 舍弃/ 部分/ 的/ 阈值/ ,/ 需要/ 根据/ 所/ 能/ 容忍/ 的/ 精度/ 及/ 系统/ 效率/ 综合/ 考虑/ ./ (/ 5/ )/ 线性/ 判别分析/ (/ LinearDiscriminantAnalysis/ ,/ LDA/ )/ ./ LDA/ [/ 67/ ]/ 也/ 称为/ Fisher/ 判别分析/ ,/ 其/ 主要/ 思想/ 是/ 寻找/ 一个/ 投影/ 矩阵/ ,/ 将/ 高维/ 数据/ 投影/ 到/ 低/ 维空间/ ,/ 同时/ Fisher/ 准则/ 确保/ 了/ 在/ 低/ 维空间/ 中/ 同类/ 数据/ 的/ 区别/ 最小化/ ,/ 异类/ 数据/ 的/ 区别/ 最大化/ ,/ 提高/ 了/ 不同/ 类别/ 之间/ 数据/ 的/ 可分性/ ./ LDA/ 是/ 一种/ 有/ 监督/ 降维/ 方法/ ,/ 可/ 应用/ 于/ 现实/ 中/ 高维/ 数据/ 的/ 分类/ 工作/ ./ 但是/ LDA/ 不能/ 灵活/ 调整/ 分解/ 矩阵/ 的/ 大小/ ,/ 当/ 类别/ 中心/ 有/ 重叠/ 时/ 分类/ 效果/ 较差/ ./ 3.2/ 非线性/ 降维/ 方法/ 现实生活/ 中/ 的/ 真实/ 数据/ 集/ 更/ 多/ 的/ 体现/ 为/ 非线性/ 结构/ ,/ 线性/ 降维/ 方法/ 不能/ 在/ 降维/ 过程/ 中/ 很/ 好/ 的/ 保持数据/ 集/ 的/ 非线性/ 特性/ ./ 为/ 弥补/ 线性/ 降维/ 方法/ 的/ 不足/ ,/ 学者/ 们/ 提出/ 了/ 非线性/ 降维/ 方法/ ./ 非线性/ 降维/ 方法/ 可以/ 通过/ 对/ 线性/ 降维/ 方法/ 进行/ 非线性/ 扩展/ (/ 通常/ 采用/ 核/ 技巧/ 或/ 局部/ 方法/ )/ 来/ 获得/ ,/ 也/ 可以/ 对/ 相应/ 的/ 函数/ 采用/ 神经网络/ 或/ 直接/ 采用/ 最优化/ 方法/ (/ 如/ 梯度/ 下降/ 法/ )/ 等/ 来/ 获得/ ./ 流行/ 学习/ 是/ 当前/ 流行/ 的/ 一种/ 非线性/ 降维/ 方法/ ,/ 其/ 目标/ 是/ 发现/ 嵌入/ 在/ 高维/ 特征/ 空间/ 中/ 的/ 低/ 维流形/ 结构/ ,/ 并/ 给出/ 一个/ 有效/ 的/ 低维/ 表示/ ./ 流行/ 学习/ 的/ 典型/ 代表/ 有/ 等距/ 映射/ ISOMAP/ (/ IsometricMapping/ )/ [/ 68/ ]/ 、/ 局部/ 线性/ 嵌入/ LLE/ 算法/ [/ 69/ ]/ 、/ Laplacian/ 特征/ 映射/ [/ 70/ ]/ 等/ ./ 非线性/ 降维/ 方法/ 可/ 分为/ 三种/ 类型/ (/ 图/ 3/ )/ :/ (/ 1/ )/ 全局/ 方法/ ./ 降维/ 过程/ 中/ 保留/ 数据/ 集/ 的/ 全局/ 属性/ ;/ (/ 2/ )/ 局部/ 方法/ ./ 降维/ 过程/ 中/ 保留/ 数据/ 集/ 的/ 局部/ 属性/ ;/ (/ 3/ )/ 混合/ 方法/ ./ 通过/ 局部/ 线性/ 模型/ 的/ 全局/ 排列/ 实现/ 降维/ ./ 3.2/ ./ 1/ 全局/ 方法/ 全局/ 非线性/ 降维/ 技术/ 在/ 降维/ 过程/ 中/ 保留/ 高维/ 数据/ 的/ 全局/ 属性/ ./ 典型/ 的/ 全局/ 方法/ 有/ 核主/ 成分/ 分析/ [/ 71/ ]/ 、/ 等距/ 映射/ 、/ 多维/ 尺度/ 分析/ 及/ 神经网络/ 方法/ ./ (/ 1/ )/ 核主/ 成分/ 分析/ (/ KernelPCA/ ,/ KPCA/ )/ ./ KPCA/ 是/ PCA/ 针对/ 非线性/ 数据/ 集/ 的/ “/ 核化/ 版本/ ”/ ,/ 其/ 基本/ 思想/ 为/ 将/ 非线性/ 数据/ 集/ 通过/ 核/ 方法/ 映射/ 到/ 一个/ 更/ 高维/ 的/ 特征/ 空间/ ,/ 然后/ 利用/ 传统/ PCA/ 方法/ 实现/ 数据/ 降维/ ./ 更/ 高维/ 的/ 特征/ 空间/ 可以/ 通过/ 非线性/ 映射/ / :/ Φ/ N/ →/ F/ 得到/ ,/ 由于/ 通过/ / 映射/ 后/ 的/ 两个/ 点/ 的/ 点积/ 可以/ 用核/ 函数/ k/ (/ x/ ,/ x/ )/ =/ (/ / (/ x/ )/ ·/ / (/ x/ )/ )/ 来/ 估计/ ,/ 因此/ 该/ 方法/ 称为/ 核/ PCA/ ./ KPCA/ 的/ 性能/ 依赖于/ 核/ 函数/ 的/ 选择/ ,/ 而/ 实际/ 应用/ 中核/ 函数/ 往往/ 无法/ 有效/ 的/ 选择/ ./ (/ 2/ )/ 多维/ 尺度/ 分析/ (/ Multi/ -/ DimensionalScaling/ ,/ MDS/ )/ ./ MDS/ 可/ 分为/ 度量/ MDS/ 和/ 非/ 度量/ MDS/ ./ 度量/ MDS/ 确保/ 降维后/ 低维/ 数据/ 点/ 之间/ 的/ 距离/ 与/ 原/ 数据/ 点/ 之间/ 的/ 距离/ 尽量/ 保持一致/ ,/ 可以/ 尽可能/ 保留/ 数据/ 对象/ 间/ 的/ 相似性/ ./ 度量/ MDS/ 方法/ 具有/ 明显/ 的/ 几何/ 意义/ ,/ 降维/ 过程/ 中距离/ 函数/ 的/ 选择/ 具有/ 灵活性/ ./ 非/ 度量/ MDS/ [/ 72/ ]/ 旨在/ 确保/ 降维/ 前后/ 数据/ 对象/ 间/ 顺序/ 关系/ 的/ 一致性/ ,/ 而/ 非/ 数据/ 对象/ 间/ 的/ 相对/ 距离/ ./ (/ 3/ )/ 等距/ 映射/ (/ IsometricMapping/ ,/ ISOMAP/ )/ ./ ISOMAP/ 方法/ 的/ 出发点/ 与/ 度量/ MDS/ 相似/ ,/ 即/ 在/ 保持数据/ 点间/ 相对/ 距离/ 一致/ 的/ 情况/ 下/ 实现/ 数据/ 降维/ ./ 但/ ISOMAP/ 采用/ “/ 测地/ 距离/ ”/ 表示/ 数据/ 对象/ 间/ 的/ 相似性/ ,/ 而/ 度量/ MDS/ 通常/ 选用/ “/ 欧式/ 距离/ ”/ ./ ISOMAP/ 方法/ 用/ 邻域/ 图/ (/ NeighborhoodGraph/ )/ 来/ 表达/ 数据/ 的/ 邻域/ 结构/ ,/ 根据/ 流形/ 的/ 局部/ 欧氏/ 性质/ ,/ 邻域/ 图上/ 的/ 每/ 一条/ 边/ 都/ 可以/ 采用/ 欧氏/ 距离/ 来/ 进行/ 表达/ ;/ 然后/ 用/ 邻域/ 图中/ 的/ 最/ 短/ 路径/ 长度/ 来/ 对/ 未知/ 的/ 全局/ 测地/ 距离/ 进行/ 逼近/ ;/ 最后/ 以/ 逼近/ 得到/ 的/ 这些/ 全局/ 测地/ 距离/ 作为/ 输入/ 运行/ 古典/ MDS/ 算法/ ,/ 将/ 数据/ 重建/ 在/ 其内/ 在/ 的/ 低维/ 参数/ 空间/ 中/ ,/ 可以/ 发现/ 数据/ 内在/ 的/ 全局/ 几何/ 结构/ 及其/ 有/ 意义/ 的/ 内在/ 维/ ./ 但是/ 由于/ 估计/ 测地线/ 距离/ 的/ 不精确性/ ,/ ISOMAP/ 在/ 未/ 采样/ 的/ 空间/ 可能/ 会/ 得到/ 较差/ 的/ 结果/ ;/ 同时/ ISOMAP/ 具有/ 拓扑/ 不稳定性/ ,/ 可能/ 在/ 邻域/ 图中/ 产生/ 错误/ 的/ 连接/ ;/ 此外/ ,/ ISOMAP/ 不/ 产生/ 内在/ 模型/ ,/ 而/ 当/ 其他/ 类似/ 数据/ 需要/ 降维时/ ,/ 必须/ 重新/ 训练/ ./ (/ 4/ )/ 神经网络/ 方法/ ./ 基于/ 神经网络/ 的/ 降维/ 方法/ 利用/ 神经网络/ 的/ 特性/ 去除/ 高维/ 数据/ 集/ 的/ 冗余/ 特征/ ,/ 将/ 其/ 映射/ 到/ 低/ 维空间/ ,/ 其/ 典型/ 代表/ 有/ 多层/ 自动/ 编码器/ (/ MultilayerAuto/ -/ encoder/ )/ [/ 73/ ]/ 、/ 自/ 组织/ 特征/ 映射/ (/ Self/ -/ OrganizingMap/ ,/ SOM/ )/ [/ 74/ ]/ 、/ 生成/ 建模/ (/ GenerativeModelling/ )/ [/ 75/ ]/ 等/ 方法/ ./ 多层/ 自动/ 编码器/ 为/ 一种/ 具有/ 奇数/ 个/ 隐含/ 层/ 的/ 前/ 向/ 反馈/ 网络/ ,/ 从/ 功能/ 上/ 可/ 分为/ 编码/ 和/ 解码/ 两个/ 网络/ ./ 编码/ 网络/ 和/ 解码/ 网络/ 存在/ 一个/ 重合/ 的/ “/ 瓶颈/ ”/ 层/ ,/ 该层/ 具有/ 最少/ 的/ 神经元/ ,/ 且/ 能够/ 反映/ 高维/ 数据/ 集/ 的/ 本质/ 维数/ ,/ 进而/ 实现/ 数据/ 降维/ ./ SOM/ 网络/ 分为/ 输入/ 层/ ,/ 竞争/ 层/ 和/ 输出/ 层/ ,/ 基于/ 数据/ 聚类/ 实现/ 数据/ 降维/ ./ 竞争/ 层中/ 邻近/ 的/ 各个/ 神经元/ 通过/ 彼此/ 侧向/ 交互作用/ ,/ 相互竞争/ 学习/ ,/ 最终/ 在/ 输出/ 神经元/ 层/ 排列成/ 一张/ 低维/ 的/ 映射/ 图/ ,/ 从而/ 实现/ 数据/ 的/ 降维/ ./ 映射/ 图中/ 语义/ 相似/ 的/ 神经元/ 距离/ 较近/ ,/ 语义/ 不/ 相似/ 的/ 神经元/ 则/ 距离/ 较远/ ./ Page103/ ./ 2.2/ 局部/ 方法/ 局部/ 非线性/ 降维/ 方法/ 基于/ 局部/ 特征/ 保持/ 的/ 思想/ ,/ 即/ 仅仅/ 考虑/ 数据/ 样本/ 附近/ 数据/ 的/ 位置/ 关系/ ,/ 代表/ 方法/ 有/ 局部/ 线性/ 嵌入/ (/ LocalLinearEmbedding/ ,/ LLE/ )/ [/ 76/ ]/ 、/ Laplacian/ 特征/ 映射/ 、/ HessianLLE/ [/ 77/ ]/ 等/ ./ 局部/ 线性/ 嵌入/ 使/ 人们/ 开始/ 更加/ 关注/ 数据/ 集所/ 蕴含/ 的/ 内蕴/ 特征/ ./ 其/ 基本/ 思想/ 是/ 在/ 降维/ 过程/ 中/ 尽可能/ 保持/ 邻近/ 点/ 的/ 局部/ 拓扑/ 结构/ ,/ 确保/ 相邻/ 的/ 高维/ 数据/ 在/ 低/ 维空间/ 内/ 同样/ 保持/ 相邻/ 关系/ ./ LLE/ 首先/ 进行/ 近邻/ 搜索/ ,/ 确定/ 高维/ 数据/ 的/ 邻居/ ;/ 然后/ 计算/ 每个/ 高维/ 点/ 的/ 权重/ ,/ 用/ 邻居/ 数据/ 的/ 权值/ 组合/ 表示/ 高维/ 数据/ ;/ 最后/ ,/ 基于/ 本征/ 向量/ 优化/ 技术/ 寻找/ 高维/ 数据/ 的/ 低维/ 嵌入/ ,/ 确保/ 每个/ 数据/ 对象/ 的/ 权重/ 不变/ ./ LLE/ 对/ 流形/ 中/ 短路/ 现象/ 不太/ 敏感/ ,/ 同时/ 克服/ 了/ 局部/ 极小/ 的/ 影响/ ;/ 但/ 对/ 非/ 均匀/ 数据/ 区域/ 表现/ 较差/ ,/ 同样/ 不/ 产生/ 内部/ 模型/ ./ 3.2/ ./ 3/ 混合/ 方法/ 混合/ 方法/ 通过/ 全局/ 排列/ 局部/ 线性/ 模型/ 实现/ 降维/ ,/ 具体/ 实现/ 为/ :/ 首先/ 计算/ 一系列/ 局部/ 线性/ 模型/ ,/ 然后/ 对/ 线性/ 模型/ 进行/ 全局/ 排列/ ./ 该/ 方法/ 典型/ 代表/ 有/ 局部/ 线性/ 协同/ (/ LocallyLinearCoordination/ ,/ LLC/ )/ [/ 78/ ]/ 方法/ 及/ ManifoldCharting/ [/ 79/ ]/ 方法/ ./ LLC/ 方法/ 通过/ 计算/ 一些/ 局部/ 线性/ 模型/ 并/ 对/ 这些/ 局部/ 模型/ 执行/ 一个/ 全局/ 排列/ 来/ 实现/ 降维/ ./ 该/ 方法/ 分为/ 两步/ :/ 首先/ 通过/ 期望/ 最大化/ (/ ExpectationMaxi/ -/ mization/ )/ 算法/ 计算/ 一系列/ 关于/ 高维/ 数据/ 的/ 局部/ 线性/ 模型/ ;/ 然后/ 利用/ 扩展/ 的/ LLE/ 方法/ 排列/ 调整/ 这些/ 局部/ 线性/ 模型/ 以/ 得到/ 原/ 数据/ 集/ 的/ 低维/ 表示/ ./ LLC/ 的/ 降维/ 计算/ 代价/ 较/ LLE/ 或/ ISOMAP/ 有/ 了/ 明显/ 的/ 降低/ ;/ 但/ LLC/ 易/ 受到/ 数据/ 集中/ 异常/ 值/ 的/ 影响/ ,/ 同时/ 期望/ 最大化/ 算法/ 易/ 陷入/ 对数/ 似然/ 函数/ 的/ 局部/ 最大值/ ./ 此外/ ,/ 学者/ 们/ 还/ 提出/ 了/ 多种/ 降维/ 技术/ ,/ 如/ 线性/ 降维/ 方面/ 的/ 因子分析/ (/ FactorAnalysis/ ,/ FA/ )/ [/ 80/ ]/ 、/ 独立/ 成分/ 分析/ (/ IndependentComponentsAnalysis/ ,/ ICA/ )/ [/ 81/ ]/ 等/ 方法/ ;/ 非线性/ 降维/ 方面/ 的/ 主/ 曲线/ 流形/ [/ 82/ ]/ ,/ 最大/ 方差/ 展开/ (/ MaximumVarianceUnfolding/ ,/ MVU/ )/ [/ 83/ ]/ 等/ 方法/ ,/ 这里/ 不再/ 详细/ 介绍/ ./ 3.3/ 降维/ 技术/ 性能/ 分析/ D/ ,/ 数据/ 集内/ 数据/ 个数/ 为/ N/ ,/ 降维后/ 得到/ 低/ 维空间/ Rd/ ,/ d/ 为/ 目标/ 维数/ ./ 涉及/ 的/ 参数/ 有/ 邻域/ 图/ (/ Neighbor/ -/ hoodGraph/ )/ 中/ 近邻/ 点/ 个数/ k/ ,/ 迭代/ 次数/ i/ ,/ 稀疏/ 矩阵/ 中非/ 零/ 元素/ 的/ 比率/ p/ ,/ LLC/ 方法/ 中/ 局部/ 线性/ 模型/ 的/ 数目/ m/ ,/ 神经网络/ 中权值/ 的/ 数量/ w/ ./ 表/ 2/ 分析/ 了/ 几种/ 典型/ 降维/ 方法/ 的/ 性能/ ./ 对于/ 某个/ 高维/ 数据/ 集/ {/ xn/ }/ N/ 降维/ 技术参数/ 计算/ 复杂度/ 内存/ 复杂度/ LSInoneO/ (/ d2D/ )/ O/ (/ d2D/ )/ PCAnoneO/ (/ D3/ )/ O/ (/ D2/ )/ PPi/ / O/ (/ ND2/ )/ O/ (/ D2/ )/ LDAnoneO/ (/ D3/ )/ O/ (/ D2/ )/ KPCAk/ (/ x/ ,/ x/ )/ O/ (/ DN3/ )/ O/ (/ N2/ )/ MDSnoneO/ (/ N3/ )/ O/ (/ N2/ )/ ISOMAPkAutoencodernetsizeO/ (/ iNw/ )/ O/ (/ w/ )/ LLEkO/ (/ DNlogN/ )/ +/ O/ (/ pN2/ )/ O/ (/ pN2/ )/ LLCk/ ,/ mO/ (/ imd3/ )/ O/ (/ Nmd/ )/ 现有/ 降维/ 技术/ 为/ 快速/ 有效/ 地/ 处理/ 高维/ 数据/ 提供/ 了/ 一定/ 的/ 便利/ ,/ 但/ 仍/ 存在/ 以下/ 方面/ 的/ 不足/ :/ (/ 1/ )/ 现有/ 降维/ 方法/ 处理/ 人造/ 数据/ 效果/ 理想/ ,/ 但/ 对/ 现实生活/ 中/ 的/ 实际/ 高维/ 数据/ 集/ 不能/ 实现/ 有效/ 降维/ ./ (/ 2/ )/ 现有/ 流行/ 学习/ 方法/ 仅/ 实现/ 了/ 位于/ 高/ 维流形/ 上/ 有限/ 数据/ 集/ 的/ 低维/ 表示/ (/ 点/ 与/ 点/ 的/ 嵌入/ )/ ,/ 但/ 并未/ 建立/ 高/ 维流形/ 空间/ 与/ 对应/ 低维/ 表示/ 空间/ 之间/ 的/ 相互/ 映射/ 关系/ (/ 集合/ 与/ 集合/ 的/ 映射/ )/ ,/ 这使/ 其/ 无法/ 获得/ 一个/ 新/ 输入/ 高维/ (/ 或/ 低维/ )/ 空间数据/ 在/ 对应/ 低维/ 表示/ 空间/ (/ 或/ 高/ 维流形/ 空间/ )/ 的/ 映射/ 表示/ ,/ 进而/ 限制/ 了/ 流行/ 学习/ 方法/ 在/ 应用/ 上/ 的/ 扩展/ ./ (/ 3/ )/ 现有/ 降维/ 方法/ 缺乏/ 自/ 适应能力/ ,/ 对/ 动态/ 增加/ 或/ 变化/ 的/ 数据/ 对象/ 不能/ 实现/ 快速/ 有效/ 的/ 降维/ ,/ 提高/ 降维/ 方法/ 的/ 自适应性/ 成为/ 亟待解决/ 的/ 问题/ ./ 4/ 分布式/ 语义/ 搜索/ 如上所述/ ,/ 在/ 网络空间/ 实行/ 基于/ 语义/ 的/ 相似性/ 搜索/ 过程/ 中/ ,/ 高维索引/ 技术/ 可以/ 修剪/ 掉/ 大量/ 无用/ 的/ 搜索/ 路径/ ,/ 提高/ 语义/ 空间/ 中/ 的/ 搜索/ 效率/ ;/ 降维/ 技术/ 可以/ 将/ 高维/ 数据/ 映射/ 到/ 低/ 维空间/ 而/ 保留/ 其/ 语义/ 信息/ 近似/ 不变/ ,/ 消除/ “/ 维灾/ ”/ 的/ 影响/ 并/ 去除/ 语义/ 空间/ 内/ 的/ 噪声/ 干扰/ ./ 但是/ 传统/ 的/ 基于/ 集中式/ 设置/ 的/ 网络/ 数据/ 语义/ 搜索/ 机制/ [/ 84/ -/ 85/ ]/ 可能/ 引发/ 以下/ 问题/ :/ 健壮性/ 不高/ ,/ 存在/ 单点/ 失败/ 问题/ ;/ 扩展性/ 较差/ ,/ 用户数量/ 的/ 多少/ 会/ 影响/ 系统/ 性能/ ;/ 信息/ 垄断/ ,/ 服务器/ 对/ 网络/ 中/ 信息/ 数据/ 及/ 搜索/ 过程/ 全权/ 控制/ ,/ 可以/ 随意/ 干预/ 搜索/ 结果/ ;/ 安全隐患/ ,/ 可以/ 对/ 用户/ 行为/ 进行/ 跟踪/ ,/ 容易/ 造成/ 隐私/ 泄露/ ./ P2P/ 作为/ 典型/ 的/ 分布式/ 技术/ ,/ 具有/ 高度/ 的/ 自治/ 性/ 、/ 可扩展性/ 、/ 匿名性/ 、/ 健壮性/ 、/ 负载/ 均衡性/ 及/ 安全性/ ,/ 可以/ 解决/ 集中式/ 设置/ 带来/ 的/ 局限性/ ./ 近年来/ ,/ 学者/ 们/ 为了/ 提高/ 基于/ 语义/ 相似性/ 搜索/ Page11/ 的/ 性能/ ,/ 分别/ 提出/ 了/ 分布式/ 高维索引/ 技术/ 及/ 分布式/ 降维/ 技术/ ./ 4.1/ 分布式/ 高维索引/ 技术/ 分布式/ 多维/ 索引/ 综合/ 了/ 多维/ 索引/ 及/ 分布式/ 技术/ 的/ 优点/ ,/ 在/ 语义/ 空间/ 中/ 进行/ 语义/ 相似性/ 搜索/ 过程/ 中/ 通过/ 高维索引/ 技术/ 修剪/ 掉/ 大量/ 无关/ 的/ 搜索/ 路径/ ,/ 并/ 将/ 计算/ 搜索/ 任务/ 交由/ 网络/ 中/ 所有/ 参与者/ 分担/ ,/ 实现/ 了/ 系统/ 的/ 可扩展性/ 并/ 克服/ 了/ 单点/ 失败/ 等/ 问题/ ./ (/ 1/ )/ 基于/ P2P/ 实现/ iDistanceM/ -/ Chord/ [/ 86/ ]/ 方法/ 将/ iDistance/ 与/ P2P/ 相结合/ 实现/ 了/ 语义/ 空间/ 中/ 的/ 相似性/ 搜索/ ./ 该/ 方法/ 首先/ 对/ 高维/ 语义/ 空间/ 内/ 的/ 数据/ 进行/ 聚类/ ,/ 然后/ 利用/ iDistance/ 方法/ 将/ 高维/ 数据/ 对象/ 映射/ 到/ 一个/ [/ 0/ ,/ 2m/ )/ 的/ 一维/ 关键字/ 区域/ ,/ 保证/ 不同/ 的/ 聚类/ 间/ 的/ 高维/ 数据/ 映射/ 到/ 一维/ 数轴/ 上/ 不同/ 的/ 区间/ 内/ ,/ 确保/ 网络/ 中/ 每个/ peer/ 负责/ 一个/ 区间/ ,/ 并/ 通过/ 维护/ 一个/ B/ +/ -/ tree/ 来/ 实现/ 数据/ 插入/ ,/ 删除/ 及/ 检索/ 功能/ ./ 在/ 相似/ 搜索/ 过程/ 中/ ,/ 首先/ 确定/ 查询/ 的/ 搜索/ 区间/ ,/ 然后/ 在/ 区间/ 内/ 精确/ 搜索/ 得出/ 结果/ ./ R/ -/ Chord/ [/ 87/ ]/ 与/ M/ -/ Chord/ 相似/ ,/ 实现/ 了/ Chord/ 与/ iDistance/ 的/ 结合/ ./ 区别/ 是/ R/ -/ Chord/ 定义/ 了/ 相对/ 位置/ 码/ (/ RelativePositionCode/ ,/ RPC/ )/ 用以/ 实现/ 搜索/ 过程/ 中/ 的/ 进一步/ 数据/ 过滤/ ./ 利用/ RPC/ 可以/ 过滤/ 掉/ 下界/ 距离/ 比/ 修剪/ 距离/ 大/ 的/ 数据/ 对象/ ,/ 减少/ 距离/ 计算/ ,/ 提高/ 搜索/ 效果/ ./ MCAN/ [/ 88/ ]/ 结合/ CAN/ 及/ iDistance/ 技术/ 用来/ 实现/ 语义/ 空间/ 中/ 的/ 相似/ 搜索/ ./ 它/ 利用/ 一种/ 基于/ 支点/ 的/ 技术/ 为/ 语义/ 空间/ 中/ 的/ 每个/ 数据/ 对象/ 关联/ 一个/ 坐标/ ,/ 将/ 数据/ 对象/ 映射/ 到/ 一个/ N/ 维/ 向量/ 空间/ ,/ 并/ 将/ 映射/ 后/ 的/ 对象/ 分布/ 于/ CAN/ 网络/ 内/ ,/ 将/ 度量/ 空间/ 中/ 的/ 相似/ 搜索/ 转变/ 为/ CAN/ 空间/ 内/ 的/ 搜索/ ./ SIMPEER/ [/ 89/ ]/ ./ M/ -/ Chord/ 及/ MCAN/ 方法/ 数据/ 预处理/ 阶段/ (/ 聚类/ 及/ 映射/ )/ 仍/ 以/ 集中/ 的/ 方式/ 处理/ ,/ SIMPEER/ 则/ 完全/ 实现/ 了/ 整个/ 查询/ 过程/ 的/ 分布式/ 处理/ ./ SIMPEER/ 采用/ 一种/ 三层/ 聚类/ 机制/ (/ peer/ ,/ super/ -/ peer/ ,/ routingclusters/ )/ :/ 每个/ peer/ 聚类/ 其/ 自身/ 数据/ ,/ 并用/ iDistance/ 索引/ ;/ super/ -/ peer/ 管理所/ 负责/ peer/ 的/ 聚类/ 信息/ 并/ 利用/ 扩展/ 的/ iDistance/ 方法/ 计算/ hyper/ -/ clusters/ ,/ hyper/ -/ clusters/ 用以/ 决定/ 哪个/ peer/ 处理/ super/ -/ peer/ 接收/ 到/ 的/ 查询/ 请求/ ;/ Hyper/ -/ clusters/ 信息/ 在/ super/ -/ peer/ 间/ 交互/ 并/ 进一步/ 汇总/ 产生/ 一系列/ 路由/ 簇/ (/ RoutingClusters/ )/ ,/ 路由/ 簇/ 信息/ 保存/ 在/ super/ -/ peer/ 层/ ,/ 用来/ 在/ super/ -/ peer/ 网络/ 中路/ 由/ 一个/ 查询/ 请求/ ./ SiMPSON/ [/ 90/ ]/ 也/ 为/ 在/ 高维/ 语义/ 空间/ 中/ 实现/ 相似/ 搜索/ 的/ 一种/ P2P/ 索引/ 结构/ ./ 在/ SiMPSON/ 中/ ,/ 任何/ 支持/ 一维/ 范围/ 查询/ 的/ 结构式/ P2P/ 系统/ 可/ 作为/ 其/ 底层/ 拓扑/ ./ 首先/ 每个/ peer/ 局部/ 聚类/ 本地/ 数据/ ,/ 然后/ 基于/ iDistance/ 方法/ 将/ 聚类/ 范围/ 映射/ 为/ 2/ 个/ 一维/ 索引/ 值/ (/ 开始/ 索引/ 和/ 结束/ 索引/ )/ ,/ 并/ 利用/ 一维/ 索引/ 值/ 缩小/ 搜索/ 区间/ ,/ 从而/ 减少/ 搜索/ 代价/ ./ (/ 2/ )/ 基于/ P2P/ 实现/ R/ -/ 树/ P2PR/ -/ 树/ [/ 91/ ]/ 将/ P2P/ 中/ peer/ 组织/ 成分/ 层/ 的/ 树形/ 覆盖网/ ,/ 且/ 将/ 每个/ peer/ 负责/ 的/ 空间数据/ 表示/ 为/ peerMBR/ ./ 系统/ 中/ 每个/ peer/ 维护/ 一条/ 到/ 根/ 的/ 路径/ ,/ 查询/ 请求/ 必须/ 经过/ 根/ 节点/ 才能/ 达到/ 目的/ 节点/ ./ P2PR/ -/ 树为/ 不/ 平衡/ 树/ ,/ 如果/ 数据/ 是/ 倾斜/ 的/ ,/ 一些/ peer/ 必须/ 维护/ 很长/ 的/ 路径/ 信息/ ,/ 进而/ 会/ 降低/ 搜索/ 性能/ ./ NR/ -/ 树/ [/ 92/ ]/ 是/ R/ / -/ 树/ 的/ 分布式/ 结构/ ./ peers/ 分为/ super/ -/ peers/ 及/ passive/ -/ peers/ ./ super/ -/ peers/ 管理/ 一定/ 数量/ 的/ passive/ -/ peers/ 形成/ 一个/ 簇/ ./ 如果/ passive/ -/ peers/ 数量/ 超过/ 一个/ 阈值/ ,/ 簇/ 依据/ CAN/ 的/ 方法/ 执行/ 分裂/ ./ super/ -/ peers/ 构成/ 一个/ CAN/ 覆盖网/ 来/ 实现/ 彼此间/ 的/ 通信/ ./ 在/ 每个/ 簇中/ ,/ super/ -/ peers/ 负责/ 构建/ 分布式/ R/ / -/ 树/ ,/ 当/ 一个/ passive/ -/ peers/ 发送/ 一个/ 查询/ 请求/ ,/ 首先/ 将/ 其/ 发送到/ super/ -/ peers/ ,/ 然后/ super/ -/ peers/ 将/ 请求/ 发送给/ 可能/ 包含/ 答案/ 的/ passive/ -/ peers/ ./ P2PRdNN/ -/ 树/ [/ 93/ ]/ 结构/ 与/ NR/ -/ 树/ 类似/ ,/ 唯一/ 区别/ 为/ super/ -/ peers/ 间/ 利用/ 主通道/ 以/ 广播/ 的/ 方式/ 传递/ 消息/ ./ 但是/ super/ -/ peers/ 间/ 以/ 广播/ 形式/ 传递/ 消息/ 将/ 导致系统/ 较/ 高/ 的/ 通信/ 代价/ ./ RT/ -/ CAN/ [/ 94/ ]/ 以云/ 计算/ 为/ 研究/ 背景/ ,/ 将/ CAN/ 及/ R/ -/ 树/ 技术相结合/ 用以/ 研究/ 云/ 系统/ 中/ 索引/ 高维/ 数据/ 的/ 问题/ ./ 系统/ 为/ 每个/ peer/ 分配/ 两个/ 角色/ :/ 存储/ 节点/ 及/ 覆盖/ 节点/ ./ 存储/ 节点/ 维护/ 一部分/ 数据/ 并/ 为/ 本地/ 数据/ 构建/ 一个/ R/ -/ 树/ ./ 覆盖/ 节点/ 为/ CAN/ 网络/ 中/ 的/ 一个/ 节点/ ,/ 负责/ CAN/ 的/ 一个/ 分区/ ./ RT/ -/ CAN/ 的/ 发布/ 策略/ 为/ :/ 对于/ 一个/ 将要/ 发布/ 的/ R/ -/ 树/ 节点/ N/ ,/ 如果/ 其/ 半径/ 小于/ 给定/ 阈值/ ,/ 则/ 将/ 其/ 发送到/ 包含/ N/ 中心/ 的/ 所有/ 簇/ 节点/ ;/ 否则/ 所有/ 与/ N/ 重叠/ 的/ CAN/ 节点/ 在/ 其/ 全局/ 索引/ 中/ 维护/ N/ ./ 对于/ 一个/ 窗口/ 查询/ :/ 首先/ 将/ 查询/ 请求/ 路由/ 到/ 包含/ 查询/ 窗口/ 中心/ 的/ CAN/ 节点/ ,/ 然后/ 将/ 该/ 查询/ 递归/ 发送到/ 所有/ 与/ 查询/ 窗口/ 重叠/ 的/ 邻居/ ,/ 存储/ 节点/ 如果/ 收到/ 查询/ 请求/ 则/ 搜索/ 本地/ 索引/ 并/ 返回/ 结果/ ./ (/ 3/ )/ 基于/ P2P/ 实现/ KD/ -/ 树/ DiST/ [/ 95/ ]/ 为/ 一种/ KD/ -/ 树/ 与/ CAN/ 技术相结合/ 的/ 分布式/ 多维/ 索引/ 结构/ ./ DiST/ 利用/ KD/ -/ 树/ 划分/ 方法/ 划分/ 语义/ 空间/ ,/ CAN/ 网络/ 中/ 每个/ peer/ 负责/ 一个/ 子/ Page12/ 空间/ 并/ 创建/ 本地/ 索引/ ./ 全局/ 索引/ 分布/ 于/ 所有/ 的/ 节点/ 中/ ,/ 每个/ peer/ 仅/ 有/ 局部/ 索引/ ,/ 并/ 根据/ 局部/ 索引/ 路由/ 查询/ 请求/ ./ DKDT/ [/ 96/ ]/ 将/ Chord/ 与/ KD/ -/ 树/ 相结合/ 用以/ 解决/ P2P/ 系统/ 中/ 的/ 相似/ 搜索/ 问题/ ./ 该/ 方法/ 首席/ 循环/ 基于/ KD/ -/ 树/ 划分/ 语义/ 空间/ 直到/ 子/ 空间/ 内/ 数据/ 数目/ 不/ 高于/ 给定/ 的/ 阈值/ ,/ 然后/ 利用/ 一个/ hash/ 函数/ 将/ 每个/ 子/ 空间/ 映射/ 到/ 底层/ 覆盖/ 网络/ ./ Peers/ 利用/ Chord/ 协议/ 维护/ 映射/ 到/ 环上/ 的/ 子/ 空间/ ,/ 同时/ 以/ DHT/ 方式/ 及/ KD/ -/ 树/ 方式/ 维护/ peers/ ./ 每个/ peer/ 维护/ 一个/ 称为/ TreeInformationBase/ (/ TIB/ )/ 的/ 局部/ 数据库/ ./ 由于/ Chord/ 及/ KD/ -/ 树/ 相互/ 并/ 不/ 匹配/ ,/ 因此/ 在/ DKDT/ 中/ 维护/ 两个/ 结构/ 将/ 导致/ 较大/ 的/ 维护/ 成本/ ./ 对于/ 一个/ 范围/ 查询/ ,/ 查询/ 发起者/ 利用/ TIB/ 决定/ 树中/ 覆盖/ 查询/ 点/ 的/ 最低/ 节点/ (/ peer/ )/ ,/ 然后/ 发送/ 查询/ 到/ 该/ peer/ ,/ 接收/ 到/ 查询/ 的/ peer/ 不仅/ 搜索/ 本地/ 数据/ 而且/ 根据/ 其/ TIB/ 将/ 查询/ 转发/ 到/ 其他/ peers/ 进一步/ 搜索/ ./ 对于/ KNN/ 查询/ ,/ 在/ 范围/ 查询/ 的/ 基础/ 上/ 查询/ 发起者/ 通过/ 维护/ 一个/ 优先/ 队列/ 用以/ 获取/ 最优/ 结果/ ./ m/ -/ LIGHT/ [/ 97/ ]/ 与/ DKDT/ 类似/ ,/ 利用/ KD/ -/ 树/ 划分/ 空间/ ,/ 并/ 为/ KD/ -/ 树中/ 每个/ 叶子/ 节点/ (/ 子/ 空间/ )/ 分配/ 一个/ 关键字/ ./ 通过/ 关键字/ ,/ 每个/ 叶子/ 节点/ 被/ 底层/ DHT/ 中/ 的/ 一个/ peer/ 管理/ ./ m/ -/ LIGHT/ 搜索/ 机制/ 与/ DKDT/ 方法/ 类似/ ,/ 其/ 不同之处/ 是/ m/ -/ LIGHT/ 在/ 插入/ ,/ 查询/ 及/ 删除/ 数据/ 的/ 过程/ 中/ 利用/ 一个/ 数据/ 感知/ 分裂/ (/ data/ -/ awaresplitting/ )/ 策略/ 来/ 确保/ 系统/ 负载平衡/ ./ SkipIndex/ [/ 98/ ]/ 将/ SkipGraph/ 及/ KD/ -/ 树/ 相结合/ 以/ 解决/ 高维索引/ 问题/ ./ 该/ 方法/ 利用/ KD/ -/ 树/ 划分/ 空间/ ,/ 然后/ 根据/ 分裂/ 记录/ ,/ KD/ -/ 树/ 的/ 每个/ 叶子/ 节点/ (/ 数据/ 子/ 空间/ )/ 分配/ 一个/ 由/ 0/ // 1/ 组成/ 的/ 位串/ 作为/ 该/ 节点/ 的/ 关键字/ ,/ 实现/ 了/ 对子/ 空间/ 的/ 编码/ ;/ 然后/ 根据/ 关键字/ 将/ 叶子/ 节点/ 与/ SkipGraph/ 相关联/ ,/ 则/ 数据/ 的/ 搜索/ ,/ 插入/ 及/ 删除/ 操作/ 可以/ 依据/ SkipGraph/ 协议/ 实施/ ./ 此外/ ,/ 学者/ 们/ 还/ 提出/ 了/ 多种不同/ 的/ 基于/ P2P/ 的/ 高维索引/ 技术/ ,/ 如/ Squid/ [/ 99/ ]/ 、/ Z/ -/ NET/ [/ 100/ ]/ 等/ 基于/ P2P/ 实现/ 的/ 空间/ 填充/ 曲线/ 技术/ ,/ LINP/ [/ 101/ ]/ 等/ 基于/ P2P/ 实现/ 的/ VA/ -/ file/ 技术/ 等/ ./ 4.2/ 分布式/ 降维/ 技术/ 分布式/ 降维/ 方法/ 综合/ 了/ 分布式/ 技术/ 及/ 降维/ 技术/ 的/ 优点/ ,/ 可以/ 有效/ 消除/ “/ 维灾/ ”/ 及/ 集中式/ 架构/ 带来/ 的/ 影响/ ,/ 近年来/ 逐渐/ 引起/ 关注/ ./ (/ 1/ )/ 基于/ P2P/ 实现/ LSI/ // VSMpSearch/ [/ 102/ ]/ 将/ VSM/ 和/ LSI/ 技术/ 应用/ 到/ CAN/ 网络/ 中/ ,/ 其/ 基本/ 思想/ 是/ 为/ 查询/ 请求/ 及/ 所有/ 文档/ 对象/ 建立/ 特征向量/ ,/ 并/ 将/ 其/ 映射/ 到/ 相应/ 的/ CAN/ 地址/ 空间/ ,/ 与/ 查询/ 向量/ 语义/ 相似/ 文档/ 向量/ 在/ 邻近/ 的/ CAN/ 地址/ 空间/ ,/ 查询/ 只/ 需要/ 在/ 限定/ 的/ 邻近/ 节点/ 进行/ ,/ 有效/ 提高/ 了/ 搜索/ 效率/ ./ 但/ 这种/ 方法/ 存在/ 几个/ 局限性/ :/ 首先/ 该/ 方法/ 基于/ CAN/ 网络/ 实现/ ,/ 无法/ 适用/ 于/ 其他/ 结构/ 的/ P2P/ 网络/ ;/ 其次/ 由于/ 网络/ 环境/ 中/ 数据/ 维度/ 较/ 高且/ 处于/ 动态变化/ 中/ ,/ CAN/ 由于/ 维度/ 的/ 限制/ 不能/ 很/ 好/ 满足/ 有效/ 搜索/ 需求/ ;/ 最后/ ,/ CAN/ 对于/ 语义/ 空间/ 的/ 平均/ 划分/ 策略/ 容易/ 导致/ 节点/ 上/ 的/ 负载/ 不/ 均衡/ ./ 文献/ [/ 103/ ]/ 提出/ 一种/ 分级/ 语义/ 覆盖/ 网络/ ,/ 通过/ 创建/ 与/ 网络/ 节点/ 相关联/ 的/ 语义/ 簇来/ 实现/ 语义/ 搜索/ ./ 分级/ 语义/ 覆盖/ 网络/ 基于/ DHT/ 的/ 思想/ ,/ 利用/ LSI/ 及/ 余弦/ 相似性/ 将/ 语义上/ 相近/ 的/ 节点/ 聚集/ 成簇/ ,/ 能够/ 同时/ 支持/ 基于/ 关键字/ 匹配/ 和/ 基于/ 语义/ 的/ 相似性/ 搜索/ ./ 相对/ pSearch/ 方法/ ,/ 分级/ 语义/ 覆盖/ 网络/ 可以/ 更好/ 的/ 支持/ 生僻/ 词/ 的/ 查询/ 且/ 查询/ 效率/ 更高/ ./ 文献/ [/ 104/ ]/ 将/ LSI/ 技术/ 与非/ 结构化/ P2P/ 技术/ 结合/ ,/ 实现/ 了/ 语义/ 查询/ ./ 该/ 方法/ 将/ 网络/ 中/ 的/ 节点/ 分为/ super/ -/ peer/ 和/ peer/ ,/ 并/ 采用/ 一种/ 三层/ 构造/ 机制/ :/ 每个/ peer/ 建立/ 自己/ 的/ 词条/ 文档/ 矩阵/ 犃/ ;/ super/ -/ peer/ 将/ 其/ 所/ 负责/ 的/ peer/ 上/ 的/ 资源整合/ 为/ 新/ 的/ 语义/ 词典/ 矩阵/ 犜/ ;/ super/ -/ peer/ 间/ 相互/ 交互/ 信息/ 构造/ 路由/ 矩阵/ 犛/ ./ 当/ 某个/ peer/ 提出/ 查询/ 请求/ q/ ,/ 首先/ 将/ q/ 提交/ 给/ super/ -/ peer/ ,/ super/ -/ peer/ 通过/ 犛/ 计算/ 出/ 可能/ 含有/ 结果/ 的/ 若干个/ super/ -/ peer/ ,/ 然后/ super/ -/ peer/ 根据/ 犜/ 查询/ 到/ 具体/ 的/ peer/ ,/ 最后/ 确定/ 的/ peer/ 在/ 犃/ 中/ 查找/ 到/ 与/ q/ 语义/ 匹配/ 的/ 资源/ 并/ 返回/ 给/ peer/ ./ FCAN/ [/ 105/ ]/ 方法/ 通过/ 对/ 关键字/ 向量/ 表示/ 的/ 文本/ 建立/ 索引/ ,/ 并/ 将/ 索引/ 发布/ 到/ CAN/ 网络/ 中/ ,/ 利用/ 索引/ 信息/ 和/ CAN/ 在/ 同一/ 空间/ 的/ 特点/ ,/ 实现/ 结构化/ P2P/ 系统/ 中/ 基于/ 文本/ 内容/ 的/ 查询/ ./ FCAN/ 通过/ FastMap/ 实现/ 了/ 语义/ 空间/ 到/ P2P/ 空间/ 的/ 映射/ ,/ 在/ 保证/ 语义/ 完整性/ 的/ 同时/ 有效/ 地/ 对/ 语义/ 空间/ 进行/ 了/ 降维/ ./ (/ 2/ )/ SSW/ (/ SemanticSmallWorld/ )/ SSW/ [/ 106/ ]/ 采用/ 的/ 方法/ 是/ 降低/ 叠加/ 网络/ 的/ 维数/ ,/ 将/ 语义/ 相近/ 的/ 数据/ 对象/ 和/ P2P/ 节点/ 自/ 组织/ 成/ 多个/ 语义/ 簇/ ,/ 然后/ 通过/ 自/ 适应/ 空间/ 线性化/ 方法/ 将/ 高/ 维空间/ 上/ 的/ 语义/ 簇/ 线性化/ 到/ 一维/ 语义/ 小/ 世界/ 上/ ./ 这种/ 方法/ 克服/ 了/ pSearch/ 中/ 存在/ 的/ 负载/ 过大/ 的/ 弊端/ ,/ 但/ 在/ 降维/ 过程/ 中/ 语义/ 簇/ 丢失/ 了/ 大量/ 相似/ 的/ 语义/ 信息/ ,/ 导致系统/ 准确性/ 降低/ ,/ 同时/ 存在/ 语义/ 空间/ 与/ P2P/ 叠加/ 网络空间/ 维数/ 不/ 匹配/ 的/ 问题/ ./ 文献/ [/ 107/ ]/ 提出/ 了/ 一种/ 基于/ SSW/ 在/ 非/ 结构/ P2P/ 上/ 实现/ 语义/ 相似性/ 搜索/ 的/ ,/ 每个/ 节点/ 维护/ 着/ 一系列/ 与其/ 语义/ 相似/ 的/ 节点/ 连/ Page13/ 接/ ,/ 可以/ 有效/ 减少/ 搜索/ 过程/ 中/ 的/ 通信/ 代价/ ./ 4.3/ 现有/ 分布式/ 语义/ 搜索/ 技术/ 综合/ 比较/ 表/ 3/ 从/ 空间/ 划分/ 方法/ 、/ 底层/ 拓扑/ 结构/ 、/ 支持/ 的/ 相似性/ 查询/ 方式/ 及/ 是否/ 支持/ 数据/ 更新/ 等/ 方面/ 对/ 几种/ 典型/ 的/ 分布式/ 语义/ 相似性/ 搜索/ 技术/ 进行/ 了/ 综合/ 比较/ ,/ 它们/ 在/ 一定/ 程度/ 上/ 实现/ 了/ 信息/ 语义/ 的/ 相似性/ 搜索/ ,/ 但/ 其/ 实现/ 技术/ 及/ 特点/ 各异/ ./ 方法/ 空间/ 划分/ 拓扑/ 结构/ 查询/ 方式/ 数据/ 更新/ M/ -/ Chord/ 聚类/ Chord/ 范围/ 查询/ +/ KNN/ 查询/ 否/ R/ -/ Chord/ 聚类/ +/ RPCChord/ 范围/ 查询/ +/ KNN/ 查询/ 否/ MCANCAN/ 划分/ CAN/ 范围/ 查询/ 否/ SIMPEER/ 聚类/ Super/ -/ peerP2PR/ -/ treeR/ -/ tree/ 树形/ NR/ -/ treek/ -/ d/ -/ treeCAN/ +/ 树形/ 窗口/ 查询/ +/ KNN/ 查询/ 支持/ RT/ -/ CANCAN/ 划分/ CAN/ 窗口/ 查询/ +/ KNN/ 查询/ 支持/ DiSTk/ -/ d/ -/ treeCAN/ 窗口/ 查询/ 支持/ DKDTk/ -/ d/ -/ treeDHT/ +/ 树形/ 范围/ 查询/ +/ KNN/ 查询/ 否/ pSearchCAN/ 划分/ CAN/ 范围/ 查询/ 支持/ SSW/ 聚类/ +/ 分裂/ SSW/ 范围/ 查询/ 支持/ 本/ 节/ 分别/ 从/ 基于/ P2P/ 的/ 高维索引/ 及/ 降维/ 技术/ 两/ 方面/ 介绍/ 了/ 实现/ 网络/ 数据/ 语义/ 相似性/ 搜索/ 的/ 方法/ ./ 这/ 两类/ 方法/ 克服/ 了/ 集中式/ 方法/ 的/ 弊端/ ,/ 提高/ 了/ 系统/ 的/ 健壮性/ 及/ 可扩展性/ ,/ 具有/ 广阔/ 的/ 发展前景/ ./ 但/ 由于/ 网络空间/ 中/ 数据/ 资源/ 的/ 多样性/ 、/ 异构/ 性/ 、/ 海量/ 性/ 、/ 动态性/ 等/ 特点/ ,/ 导致/ 很难/ 有效/ 地/ 构建/ 网络/ 数据/ 资源/ 的/ 语义/ 空间/ ;/ 另一方面/ ,/ 由于/ 现有/ 高维索引/ 及/ 降维/ 技术/ 本身/ 固有/ 的/ 局限性/ ,/ 导致/ 现有/ 方法/ 不能/ 很/ 好/ 满足/ 人们/ 日益增长/ 的/ 信息/ 需求/ ./ 5/ 结论/ 及/ 未来/ 展望/ 网络空间/ 中/ 数据/ 资源/ 的/ 爆炸式/ 增长/ 为/ 当今社会/ 带来/ 了/ 宝贵/ 机遇/ ,/ 同时/ 也/ 为/ 如何/ 有效/ 利用网络/ 大/ 数据/ 提出/ 了/ 巨大/ 挑战/ ./ 在/ 网络/ 大/ 数据/ 4V/ 特性/ 的/ 背景/ 下/ ,/ 本文/ 研究/ 如何/ 有效/ 组织/ 管理/ 网络空间/ 中/ 的/ 数据/ 资源/ 并/ 实现/ 基于/ 数据/ 语义/ 的/ 相似性/ 搜索/ ,/ 分别/ 从/ 高维/ 数据/ 索引/ 、/ 高维/ 数据/ 降维及/ 分布式/ 语义/ 搜索/ 技术/ 三/ 方面/ 详细/ 回顾总结/ 了/ 现有/ 研究成果/ ,/ 并/ 提出/ 了/ 现有/ 工作/ 在/ 网络/ 大/ 数据/ 背景/ 下/ 的/ 局限性/ ./ 总体/ 来说/ ,/ 对于/ 网络/ 大/ 数据/ 的/ 研究/ 还/ 处于/ 起步/ 阶段/ ,/ 尚有/ 许多/ 问题/ 亟待解决/ ,/ 将来/ 研究/ 可以/ 重点/ 关注/ :/ (/ 1/ )/ 如何/ 准确/ 提取/ 各种/ 网络/ 大/ 数据/ 资源/ 的/ 语义/ 特征/ 信息/ ,/ 确保/ 构造/ 的/ 高维/ 语义/ 空间/ 能够/ 准确/ 反映/ 网络/ 数据/ 资源/ 的/ 语义/ 信息/ ,/ 尽量避免/ 噪声/ 等/ 因素/ 的/ 干扰/ ./ (/ 2/ )/ 针对/ 网络/ 大/ 数据/ 资源/ 的/ 语义/ 空间/ 维数/ 高/ ,/ 动态/ 增长/ ,/ 数据分布/ 不规则/ 等/ 特点/ ,/ 提出/ 先进/ 的/ 降维/ 方法/ 以/ 适应/ 网络/ 大/ 数据/ 的/ 特点/ ,/ 在/ 保持数据/ 资源/ 语义/ 不/ 丢失/ 情况/ 下/ ,/ 尽可能/ 降低/ 语义/ 空间/ 维数/ ,/ 消除/ “/ 维灾/ ”/ 的/ 影响/ ./ (/ 3/ )/ 将/ 降维/ 技术/ 与/ 高维索引/ 技术/ 有效/ 结合/ ,/ 在/ 降维/ 的/ 基础/ 上/ 利用/ 高维索引/ 技术/ ,/ 修剪/ 掉/ 大量/ 与/ 给定/ 搜索/ 无关/ 的/ 搜索/ 路径/ ,/ 快速/ 确定/ 搜索/ 范围/ ,/ 进一步提高/ 基于/ 语义/ 相似/ 搜索/ 的/ 速度/ 及/ 精度/ ./ (/ 4/ )/ 深化/ 分布式/ 语义/ 搜索/ 系统/ 的/ 研究/ ,/ 针对/ 非/ 结构化/ P2P/ 及/ 结构化/ P2P/ 固有/ 的/ 优缺点/ ,/ 考虑/ 对/ 两者/ 进行/ 综合/ ,/ 取长补短/ ,/ 尽可能减少/ 数据/ 语义/ 搜索/ 过程/ 中所/ 需/ 流量/ ,/ 克服/ 负载/ 不/ 均衡/ ,/ 免费/ 搭乘/ 等/ 不足/ ,/ 进一步提高/ 系统/ 的/ 性能/ ./ (/ 5/ )/ 将/ 现有/ 成熟/ 的/ 信息检索/ 技术/ 与/ 基于/ 语义/ 的/ 相似性/ 搜索/ 技术相结合/ ,/ 实现/ 网络空间/ 内/ 智能/ 高效/ 的/ 数据组织/ 及/ 搜索/ 发现/ ./ 致谢/ 在/ 此/ ,/ 感谢/ 第二届/ 中国/ 互联网/ 学术年会/ ,/ 并/ 向/ 对/ 本文/ 提出/ 宝贵意见/ 的/ 计算机/ 学报/ 李刚/ 老师/ 及/ 各位/ 评审/ 专家/ 表示/ 衷心/ 的/ 感谢/ !/ 

