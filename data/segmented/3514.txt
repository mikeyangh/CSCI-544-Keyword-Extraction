Page1/ 云/ 计算/ 平台/ 中多/ 虚拟机/ 内存/ 协同/ 优化/ 策略/ 研究/ 张伟哲/ 张宏莉/ 张迪程涛/ (/ 哈尔滨工业大学/ 计算机科学/ 与/ 技术/ 学院/ 哈尔滨/ 150001/ )/ 摘要/ 虚拟化/ 技术/ 为云/ 计算/ 基础设施/ 资源/ 的/ 动态/ 部署/ 、/ 安全/ 隔离/ 提供/ 了/ 重要/ 保证/ ./ 从/ 过度/ 占用/ 内存/ 的/ 虚拟机/ 中/ 回收/ 内存/ ,/ 提供/ 给/ 内存/ 紧缺/ 的/ 虚拟机/ 使用/ ,/ 优化/ 多/ 虚拟机/ 间/ 的/ 内存/ 分布/ 是/ 内存/ 虚拟化/ 中/ 的/ 挑战性/ 问题/ ./ 文中/ 引入/ 了/ 自发/ 调节/ 和/ 全局/ 调节/ 协作/ 的/ 多/ 虚拟机/ 内存/ 管理/ 架构/ ./ 通过/ 定义/ 内存/ 资源/ 充裕/ 状态/ 和/ 内存/ 资源/ 紧缺/ 状态/ ,/ 提出/ 了/ 自发/ 调节/ 和/ 全局/ 调节/ 之间/ 协作/ 的/ 算法/ ./ 处于/ 内存/ 资源/ 充裕/ 状态/ 时/ ,/ 各/ 虚拟机/ 可/ 采用/ 自发/ 调节/ 策略/ 平衡/ 内存/ 资源/ ./ 处于/ 内存/ 资源/ 紧缺/ 状态/ 时/ ,/ 基于/ 空闲/ 内存价格/ 的/ 全局/ 调节/ 策略/ 平衡/ 内存/ 资源/ ./ 实验/ 结果表明/ ,/ 针对/ 计算/ 密集型/ 与/ 存储/ 密集型/ 负载/ ,/ 该/ 框架/ 与/ 算法/ 均/ 能/ 很/ 好/ 地/ 提高/ 服务/ 能力/ ,/ 同时/ 具有/ 较/ 高/ 的/ 可扩展性/ 与/ 较/ 低/ 的/ 性能/ 惩罚/ ./ 关键词/ 云/ 计算/ ;/ 虚拟化/ ;/ 内存/ 协同/ 优化/ ;/ 自发/ 调节/ 算法/ ;/ 全局/ 调节/ 算法/ 1/ 引言/ 受到/ 学术界/ 和/ 业界/ 的/ 重视/ ./ 有别于/ 以/ 个人/ 计算机/ 为/ 中心/ 的/ 传统/ 计算/ 模式/ ,/ 云/ 计算/ 通常/ 以/ 互联网/ 为/ 中心/ 构建/ 多个/ 大规模/ 数据中心/ ,/ 为/ 用户/ 提供/ 资源/ 按/ 需/ 租用/ 的/ 服务/ 模式/ [/ 1/ ]/ ./ 根据/ 服务/ 层次/ 不同/ ,/ 当前/ 云/ 计算/ 服云/ 计算/ 作为/ 一种/ 创新/ 的/ 计算/ 模式/ ,/ 近年来/ 日益/ Page2/ 务/ 模式/ 可以/ 分为/ 以下/ 3/ 种/ [/ 2/ ]/ :/ (/ 1/ )/ 基础设施/ 即/ 服务/ (/ IaaS/ )/ ./ 外包/ 用于/ 支持/ 操作/ 的/ 设备/ ,/ 用户/ 按照/ 自己/ 的/ 意志/ 运行/ 操作系统/ 和/ 应用软件/ 等/ 程序/ ;/ (/ 2/ )/ 平台/ 即/ 服务/ (/ PaaS/ )/ ./ 通过/ 网络/ 提供/ 操作系统/ 和/ 相关/ 服务/ ,/ 用户/ 采用/ 提供商/ 支持/ 的/ 编程语言/ 与/ 工具/ 编写/ 服务/ ;/ (/ 3/ )/ 软件/ 即/ 服务/ (/ SaaS/ )/ ./ 应用程序/ 由/ 供应商/ 或/ 服务供应商/ 托管/ ,/ 用户/ 通过/ 各种/ 客户端/ 设备/ 的/ 瘦/ 客户/ 界面/ 使用/ 这些/ 服务/ ./ 基础设施/ 服务/ (/ IaaS/ )/ 的/ 核心/ 是/ 系统/ 虚拟化/ 技术/ ./ 将/ 某/ 一个/ 或/ 多个/ 数据中心/ 的/ 计算/ 与/ 存储资源/ 虚拟化/ ,/ 形成/ 一个/ 高效/ 灵活/ 的/ 资源/ 池/ ,/ 可以/ 帮助/ 降低/ 基础设施/ 的/ 成本/ 、/ 延缓/ 数据中心/ 扩建/ 的/ 时间/ ,/ 提升/ 应对/ 快速/ 变化/ 的/ 业务/ 需求/ 能力/ [/ 3/ ]/ ./ 虚拟化/ 技术/ 包括/ 对/ 内存/ 、/ CPU/ 和/ I/ // O/ 设备/ 等/ 资源/ 的/ 虚拟化/ ./ 高效/ 的/ CPU/ 和/ I/ // O/ 设备/ 分/ 时/ 复用/ 已经/ 得到/ 广泛/ 的/ 研究/ ,/ 但/ 分时/ 共享内存/ 较难/ 实现/ ./ 因此/ ,/ 多/ 虚拟机/ 物理/ 内存/ 分/ 时/ 共享/ 正/ 逐渐/ 成为/ 系统/ 虚拟化/ 的/ 瓶颈/ ,/ 也/ 成为/ 当前/ 虚拟机/ 资源管理/ 的/ 研究/ 热点/ ./ 当/ 多个/ 虚拟机/ 部署/ 在/ 同一/ 台/ 物理/ 主机/ 上时/ ,/ 需要/ 在/ 虚拟机/ 之间/ 分配/ 物理/ 内存/ ./ 如果/ 静态/ 分配/ ,/ 即/ 在/ 虚拟机/ 运行/ 过程/ 中/ 所/ 占用/ 物理/ 内存大小/ 不/ 发生变化/ ,/ 则/ 物理/ 主机/ 上/ 所能/ 并发/ 执行/ 的/ 虚拟机/ 数目/ 受到/ 物理/ 内存大小/ 的/ 限制/ ./ 此外/ ,/ 不同/ 虚拟机/ 中/ 运行/ 的/ 上层/ 服务/ 对/ 内存/ 的/ 需求/ 各不相同/ 且/ 动态变化/ ,/ 静态/ 分配/ 必然/ 会/ 造成/ 内存/ 资源分配/ 不合理/ ,/ 影响/ 虚拟机/ 执行/ 效率/ ./ 文献/ [/ 4/ -/ 20/ ]/ 设计/ 并/ 实现/ 了/ 各种/ 虚拟机/ 动态内存/ 平衡/ 机制/ ,/ 然而/ 当前/ 研究/ 存在/ 如下/ 问题/ :/ (/ 1/ )/ Xen/ [/ 4/ ]/ 、/ VMware/ [/ 5/ ]/ 和/ KVM/ [/ 6/ ]/ 等/ 虽然/ 提供/ 了/ 气球/ 驱动/ 、/ 页面/ 交换/ 和/ 内存/ 共享/ 等/ 机制/ 来/ 动态/ 调整/ 虚拟机/ 的/ 内存/ ,/ 但/ 缺乏/ 从/ 全局/ 角度/ 进行/ 多/ 虚拟机/ 内存/ 协同/ 管理/ 的/ 系统/ 架构/ ;/ (/ 2/ )/ 多/ 虚拟机/ 间/ 缺乏/ 内存/ 协同/ 分配/ 策略/ ,/ 当/ 虚拟机/ 内存/ 充裕/ 时/ 系统/ 应当/ 从/ 哪些/ 虚拟机/ 回收/ 内存/ 、/ 回收/ 多少/ 内存/ 、/ 回收/ 的/ 内存/ 优先/ 分配/ 给/ 哪些/ 虚拟机/ 使用/ ,/ 这些/ 仍然/ 是/ 开放/ 的/ 问题/ ./ 针对/ 上述/ 问题/ ,/ 本文/ 首先/ 提出/ 了/ 自发/ 调节/ 与/ 全局/ 调节/ 协作/ 的/ 多/ 虚拟机/ 内存/ 管理/ 体系结构/ ./ 根据/ 多/ 虚拟机/ 系统/ 中/ 所有/ 虚拟机/ 的/ 内存/ 状态/ 信息/ ,/ 通过/ 定义/ 内存/ 资源/ 充裕/ 状态/ 和/ 内存/ 资源/ 紧缺/ 状态/ ,/ 依据/ 多/ 虚拟机/ 系统/ 所处/ 的/ 场景/ 执行/ 不同/ 的/ 内存/ 调节/ 策略/ ./ 其次/ ,/ 提出/ 了/ 自发/ 调节/ 和/ 全局/ 调节/ 之间/ 协作/ 的/ 算法/ ./ 自发/ 调节/ 在/ 内存/ 充裕/ 状态/ 生效/ ,/ 通过/ 操作系统/ 本身/ 的/ 统计/ 信息/ 获取/ 内存/ 使用/ 信息/ ,/ 利用/ Xen/ 提供/ 的/ 气球/ 驱动/ 机制/ 调整/ 分配/ 给/ 不同/ 虚拟机/ 的/ 内存/ 资源/ ./ 针对/ 内存/ 紧缺/ 状态/ ,/ 提出/ 了/ 基于/ 空闲/ 内存价格/ 的/ 全局/ 调节/ 策略/ ,/ 结合/ 客户/ 操作系统/ 的/ 空闲/ 内存/ 值/ 和/ 空闲/ 交换/ 空间/ 等/ 信息/ ,/ 确定/ 每个/ 客户/ 操作系统/ 的/ 空闲/ 内存价格/ ,/ 通过/ 平衡/ 价格/ 的/ 方法/ 达到/ 内存/ 资源/ 的/ 平衡/ ./ 本文/ 第/ 2/ 节/ 简要/ 介绍/ 与/ 本文/ 相关/ 的/ 研究/ 工作/ ,/ 并/ 分析/ 与/ 我们/ 研究/ 工作/ 的/ 异同/ ;/ 第/ 3/ 节/ 阐述/ 多/ 虚拟机/ 内存/ 管理系统/ 的/ 体系结构/ ;/ 第/ 4/ 节/ 重点/ 介绍/ 多/ 虚拟机/ 内存/ 动态平衡/ 算法/ ,/ 详细/ 给出/ 自发/ 调节/ 、/ 全局/ 调节/ 和/ 两者/ 协作/ 的/ 算法/ ;/ 第/ 5/ 节/ 给出/ 实验/ 平台/ 设置/ 和/ 实验/ 结果/ ;/ 最后/ ,/ 对/ 全文/ 进行/ 总结/ 并/ 对/ 未来/ 工作/ 给出/ 展望/ ./ 2/ 相关/ 工作/ 虚拟机/ 内存/ 优化/ 的/ 目的/ 是/ 通过/ 掌握/ 当前/ 虚拟机/ 内存/ 使用/ 情况/ 以及/ 预测/ 虚拟机/ 未来/ 负载/ 变化/ ,/ 从/ 过度/ 占用/ 内存/ 的/ 虚拟机/ 中/ 回收/ 内存/ ,/ 以/ 提供/ 给/ 内存/ 紧缺/ 的/ 虚拟机/ 使用/ 或/ 用来/ 启动/ 新/ 的/ 虚拟机/ ,/ 在/ 不/ 导致/ 服务/ 性能/ 严重/ 下降/ 的/ 前提/ 下/ ,/ 优化/ 多/ 虚拟机/ 间/ 的/ 内存/ 分布/ ./ 当前/ 的/ 内存/ 优化/ 策略/ 主要/ 分为/ 页面/ 复用技术/ 、/ 内存/ 动态/ 调整机制/ 和/ 多/ 虚拟机/ 内存/ 平衡/ 技术/ 3/ 类/ ./ (/ 1/ )/ 页面/ 复用技术/ 主要/ 包括/ 页面/ 交换/ (/ hostswapping/ )/ 和/ 页面/ 共享/ (/ pagesharing/ )/ 技术/ ./ CellularDisco/ 系统/ [/ 7/ ]/ 首先/ 提出/ 了/ 将/ 虚拟机/ 的/ 部分/ 物理/ 内存/ 页面/ 与/ 宿主/ 操作系统/ (/ hostOS/ )/ 的/ 交换/ 磁盘分区/ 交换/ ,/ 允许/ 虚拟机/ 使用/ 超过/ 实际/ 机器/ 内存大小/ 的/ 内存空间/ ./ Waldspurger/ [/ 9/ ]/ 与/ Sugerman/ 等/ 人/ [/ 8/ ]/ 分别/ 在/ VMWareESXServer/ 和/ VMWareWorkstation/ 中/ 实现/ 了/ 基于/ 交换/ 的/ 虚拟存储/ 技术/ ./ 文献/ [/ 9/ ]/ 进一步/ 提出/ 了/ 基于/ 页面/ 内容/ 比较/ 的/ 虚拟机/ 间/ 内存/ 共享/ 技术/ ,/ 通过/ 一致性/ Hash/ 等/ 方法/ ,/ 识别/ 同一/ 虚拟机/ 或/ 不同/ 虚拟机/ 间/ 存储/ 同样/ 内容/ 的/ 页面/ ,/ 达到/ 节约/ 内存/ 的/ 目的/ ./ Gupta/ 等/ 人/ [/ 10/ ]/ 通过/ 将/ 页面/ 共享/ 技术/ 与/ 页面/ 压缩/ 、/ 页面/ 补丁/ 技术/ 相/ 融合/ ,/ 大幅度/ 地/ 提高/ 了/ 虚拟机/ 内存/ 资源/ 的/ 利用率/ ./ (/ 2/ )/ 内存/ 动态/ 调整机制/ 主要/ 包括/ 气球/ 驱动/ 技术/ (/ balloondriver/ )/ 和/ 热插拔/ 技术/ (/ virtualhotPlug/ )/ ./ 气球/ 驱动/ 技术/ 是/ 内存/ 动态/ 调整/ 的/ 主流/ 技术/ ./ VMware/ 首先/ 提出/ 了/ 气球/ 驱动/ 机制/ [/ 9/ ]/ ,/ 通过/ 回收/ 某些/ 虚拟机/ 中未/ 使用/ 的/ 内存/ 页面/ ,/ 满足/ 内存/ 需求/ 剧增/ 的/ 虚拟机/ 请求/ ./ 虚拟机/ 管理器/ Xen/ 和/ KVM/ 分别/ 在/ 各自/ 系统/ 中/ 提供/ 了/ 对/ 气球/ 驱动/ 机制/ 的/ 支持/ [/ 11/ -/ 13/ ]/ ./ 虚拟/ 热插拔/ 在/ 虚拟机/ 内存/ 波动/ 时/ ,/ 通过/ 对/ 操作系统/ 中/ 内存/ 管理/ 接口/ 的/ 欺骗/ ,/ 伪装成/ 运行/ 时/ 系统/ 物理/ 内存/ 得到/ 了/ 增/ Page3/ 加/ 或/ 缩减/ ,/ 从而/ 使/ 虚拟机/ 地址/ 空间/ 具备/ 了/ 伸缩/ 能力/ ./ 文献/ [/ 14/ ]/ 详述/ 了/ 逻辑/ 层/ 虚拟/ 热插拔/ 的/ 工作/ 原理/ ,/ 此后/ 文献/ [/ 15/ ]/ 进一步/ 剖析/ 热插拔/ 和/ 气球/ 驱动/ 两种/ 方法/ 的/ 优缺点/ ./ (/ 3/ )/ 多/ 虚拟机/ 内存/ 平衡/ 技术/ 可以/ 分为/ 单台/ 物理/ 机和/ 多台/ 物理/ 机间/ 的/ 内存/ 平衡/ ./ 文献/ [/ 16/ ]/ 提出/ 了/ 基于/ 黑盒/ 与/ 灰盒/ 的/ 单台/ 物理/ 机/ 内部/ 多/ 虚拟机/ 内存/ 平衡/ 方法/ ,/ Magenheimer/ [/ 17/ ]/ 提出/ 了/ 基于/ Xen/ 气球/ 驱动/ 机制/ 的/ self/ -/ balloon/ 策略/ ,/ Zhao/ 等/ 人/ [/ 18/ ]/ 提出/ 了/ 基于/ 缺页/ 率/ 曲线/ 的/ 虚拟机/ 内存/ 预测/ 方法/ 及/ 内存/ 分配/ 策略/ ./ 文献/ [/ 19/ ]/ 提出/ 了/ 虚拟机/ 的/ 动态内存/ 映射/ 模型/ (/ DMM/ )/ ,/ 将/ 半/ 虚拟化/ 、/ 影子/ 页表/ 和/ 硬件/ 辅助/ 虚拟化/ 等/ 与/ 虚拟存储/ 、/ 内存/ 共享/ 等/ 融合/ 起来/ ./ 文献/ [/ 20/ ]/ 通过/ 引入/ 双层/ 地址/ 空间/ 映射/ 机制/ ,/ 构建/ 了/ 跨越/ 多个/ 物理/ 机/ 的/ 虚拟机/ 内存/ 优化/ 框架/ ./ 上述/ 研究/ 工作/ 中/ 页面/ 复用技术/ [/ 7/ -/ 10/ ]/ 和/ 内存/ 动态/ 调整机制/ [/ 9/ -/ 16/ ]/ 提供/ 了/ 内存/ 动态分配/ 的/ 底层/ 支持/ 机制/ ,/ 但/ 并/ 没有/ 解决/ 内/ 存在/ 各/ 虚拟机/ 间/ 何时/ 分配/ 、/ 如何/ 分配/ 等/ 问题/ ,/ 而/ 文献/ [/ 16/ -/ 20/ ]/ 缺乏/ 从/ 全局/ 角度/ 进行/ 多/ 虚拟机/ 内存/ 协同/ 管理系统/ 架构/ 和/ 协同/ 调度/ 策略/ ./ 本文/ 将/ 对/ 其/ 进一步/ 深入研究/ ,/ 提出/ 新/ 的/ 高效/ 解决/ 方法/ ./ 3/ 多/ 虚拟机/ 内存/ 动态/ 管理/ 体系结构/ 多/ 虚拟机/ 内存/ 管理/ 以/ 多个/ 虚拟机/ 内存/ 资源/ 的/ 动态/ 自/ 适应/ 为/ 目的/ ,/ 利用/ 内存/ 资源/ 的/ 使用/ 情况/ 等/ 信息/ ,/ 决定/ 给/ 不同/ 的/ 虚拟机/ 分配/ 不同/ 大小/ 的/ 内存/ ,/ 从而/ 达图/ 1/ 多/ 虚拟机/ 内存/ 动态/ 管理系统/ 体系结构/ 到/ 物理/ 机器/ 内存/ 的/ 最大/ 有效/ 使用/ 和/ 多个/ 虚拟机/ 内存/ 资源/ 均衡/ 分配/ ./ 因此/ ,/ 多/ 虚拟机/ 内存/ 管理系统/ 应/ 具备/ 以下/ 功能/ :/ (/ 1/ )/ 监测/ 物理/ 机/ 内存/ 资源/ 的/ 使用/ 情况/ ,/ 间歇性/ 地/ 获取/ 正在/ 使用/ 的/ 物理/ 内存/ 的/ 大小/ 和/ 空闲/ 内存大小/ ,/ 供/ 内存/ 调节/ 决策/ 使用/ ;/ (/ 2/ )/ 监测/ 每个/ 虚拟机/ 中/ 客户/ 操作系统/ 内存/ 资源/ 的/ 使用/ 情况/ ,/ 间歇性/ 地/ 的/ 获取/ 客户/ 操作系统/ 的/ 最大/ 可/ 分配内存/ 值/ 、/ 最小/ 可/ 分配内存/ 值/ 、/ 正在/ 使用/ 中/ 的/ 内存/ 值/ 、/ 空闲/ 内存/ 值/ 、/ 空闲/ 交换/ 空间/ 值/ 和/ 系统/ 所有/ 应用/ 提交/ 给/ 客户/ 操作系统/ 的/ 内存/ 值/ 等/ 内存/ 信息/ ;/ (/ 3/ )/ 在/ 内存/ 资源/ 充裕/ 状态/ 下/ ,/ 多/ 虚拟机/ 内存/ 管理系统/ 能够/ 根据/ 每个/ 客户/ 操作系统/ 上/ 的/ 应用/ 提交/ 给/ 系统/ 的/ 内存/ 值/ ,/ 来/ 调节/ 客户/ 操作系统/ 的/ 内存/ 值/ ;/ (/ 4/ )/ 在/ 内存/ 紧缺/ 状态/ 下/ ,/ 能够/ 从/ 全局/ 角度/ 根据/ 每个/ 客户/ 操作系统/ 内存/ 的/ 使用/ 情况/ 和/ 物理/ 内存/ 的/ 情况/ ,/ 平衡/ 每个/ 客户/ 操作系统/ 的/ 内存/ 值/ ./ Domain0/ 相对/ 于/ 其他/ 客户/ 操作系统/ 优先级/ 较/ 高/ ,/ 因此/ 在/ 首先/ 保证/ Domain0/ 内存/ 使用/ 情况/ 下/ ,/ 再/ 执行/ 对/ 其他/ 客户/ 操作系统/ 的/ 内存/ 平衡/ 策略/ ./ 另外/ ,/ 在/ 进行/ 内存/ 调节/ 的/ 过程/ 中/ ,/ 需要/ 考虑/ 内存/ 调节/ 引起/ 的/ 内存/ 和/ 计算能力/ 的/ 开销/ ./ 多/ 虚拟机/ 内存/ 动态/ 管理系统/ 体系结构/ 如图/ 1/ 所示/ ,/ 主要/ 由/ 内存/ 信息/ 采集/ (/ InformationCollection/ ,/ IC/ )/ 、/ 管理策略/ (/ Policy/ -/ Management/ ,/ PM/ )/ 、/ 调节/ 机制/ (/ RegualtorModule/ ,/ RM/ )/ 3/ 个/ 部分/ 组成/ ./ 内存/ 信息/ 采集/ 模块/ 包括/ 虚拟机/ 监视/ 模块/ (/ VMC/ )/ 和/ 物理/ 机/ 监视/ 模块/ (/ PMC/ )/ ./ 管理策略/ 包含/ 自发/ 调节/ (/ Self/ -/ adjustment/ )/ 和/ 全局/ 调节/ 策略/ (/ Global/ -/ adjustment/ )/ ./ Page4/ 内存/ 信息/ 采集/ 模块/ 负责/ 内存/ 使用/ 信息/ 的/ 获取/ ,/ 供/ 管理策略/ 部分/ 决策/ 使用/ ,/ 是/ 整个/ 多/ 虚拟机/ 内存/ 管理系统/ 的/ 基础/ ./ 内存/ 监视/ 模块/ 周期性地/ 获取/ 内存/ 信息/ ,/ 并/ 把/ 内存/ 信息/ 发送给/ 调节/ 管理/ 模块/ ./ 内存/ 监视/ 模块/ 分为/ 虚拟机/ 内存/ 监视/ 模块/ 和/ 物理/ 机/ 内存/ 监视/ 模块/ ./ 虚拟机/ 内存/ 监视/ 模块/ 不仅/ 可以/ 获取/ 分配/ 给/ 虚拟机/ 的/ 物理/ 内存/ 的/ 使用/ 情况/ ,/ 还/ 可以/ 获得/ 每个/ 虚拟机/ 的/ 交换/ 空间/ 的/ 使用/ 情况/ ;/ 物理/ 机/ 内存/ 监视/ 模块/ ,/ 可以/ 获得/ 物理/ 机/ 的/ 总/ 内存/ 值/ 和/ 空闲/ 内存/ 值/ 以及/ 运行/ 的/ 所有/ 客户/ 操作系统/ 的/ 最大/ 内存/ 信息/ 等/ ./ 管理策略/ 模块/ 是/ 多/ 虚拟机/ 内存/ 管理系统/ 的/ 核心/ ,/ 负责/ 整个/ 系统/ 调节/ 策略/ 的/ 制定/ 和/ 决策/ ./ 根据/ 按需分配/ 的/ 调节/ 原则/ ,/ 在/ 内存/ 资源/ 充裕/ 的/ 情况/ 下/ ,/ 给/ 每个/ 客户/ 操作系统/ 分配/ 充足/ 的/ 内存/ ,/ 调节/ 工作/ 由/ 自发/ 调节/ 模块/ 完成/ ./ 在/ 内存/ 资源/ 紧缺/ 状态/ 下/ ,/ 各个/ 客户/ 操作系统/ 自发/ 地/ 调节/ 已经/ 无法/ 满足/ 按需分配/ 原则/ ,/ 此时/ 调节/ 工作/ 则/ 由/ 全局/ 调节/ 模块/ 完成/ ./ 全局/ 调节/ 模块/ 决定/ 从/ 哪些/ 客户/ 操作系统/ 中/ 收回/ 内存/ ,/ 向/ 哪些/ 客户/ 操作系统/ 分配内存/ ,/ 并/ 计算/ 出/ 可回收/ 和/ 分配/ 的/ 内存大小/ ,/ 将/ 给出/ 的/ 每个/ DomainU/ 的/ 最佳/ 内存/ 值下/ 发给/ 实际/ 调节/ 部分/ ./ 详细/ 内容/ 将/ 在/ 第/ 4/ 节/ 介绍/ ./ 调节/ 机制/ 负责/ 具体/ 的/ 资源/ 调节/ 工作/ ,/ 本文/ 采用/ Xen/ 中/ 的/ Balloon/ -/ Driver/ 机制/ 作为/ 内存/ 调节/ 机制/ ,/ 使用/ XenStore/ 完成/ 各/ 部分/ 间/ 的/ 数据/ 交互/ ./ 内存/ 信息/ 采集/ 模块/ 中/ 的/ 虚拟机/ 监视/ 模块/ (/ VMC/ )/ 在/ DomainU/ 中/ 通过/ 轻量级/ Daemon/ 实现/ ,/ 物理/ 机/ 监视/ 模块/ (/ PMC/ )/ 在/ Domain0/ 中/ 实现/ ./ 全局/ 调节/ 模块/ (/ Global/ -/ adjustment/ )/ 负责/ 全局/ 的/ 调节/ ,/ 运行/ 在/ Domain0/ 中/ ;/ 自发/ 调节/ 模块/ (/ Self/ -/ adjustment/ )/ 负责/ 各个/ DomainU/ 内存/ 资源/ 的/ 调节/ ,/ 运行/ 在/ DomainU/ 中/ ./ 4/ 多/ 虚拟机/ 内存/ 动态平衡/ 算法/ 本/ 节/ 首先/ 给出/ 自发/ 调节/ 与/ 全局/ 调节/ 的/ 定义/ ,/ 而后/ 阐述/ 了/ 两者/ 协同工作/ 算法/ ,/ 最后/ 分别/ 详细描述/ 了/ 自发/ 调节/ 和/ 全局/ 调节/ 算法/ ./ 4.1/ 自发/ 调节/ 与/ 全局/ 调节/ 为了/ 方便/ 讨论/ ,/ 表/ 1/ 列出/ 了/ 虚拟机/ 内存/ 资源/ 信息/ 的/ 形式化/ 定义/ ./ 在/ 对/ 自发/ 调节/ 和/ 全局/ 调节/ 进行/ 定义/ 前/ ,/ 首先/ 形式化/ 地/ 定义/ 内存/ 资源/ 的/ 状态/ ./ 设/ Th/ 为/ 物理/ 机/ 所有/ 可用/ 的/ 物理/ 内存/ 的/ 大小/ ;/ Fh/ 为/ 物理/ 机上/ 空闲/ 内存/ 的/ 大小/ ./ 集合/ V/ 是/ 所有/ 客户/ 操作系统/ 的/ 集合/ ./ 对于/ 每个/ 虚拟机/ VMi/ ∈/ V/ 在/ 启动/ 时/ 设定/ 了/ 一个/ 最大/ 内存/ 值/ Hi/ 和/ 一个/ 最小/ 内存/ 值/ Li/ ./ 对/ 每个/ 虚拟机/ 上/ 运行/ 的/ 客户/ 操作系统/ 都/ 有/ 一个/ 对/ 未来/ 的/ 内存/ 需求/ 提交/ 的/ 预测值/ Ci/ ,/ 受/ 虚拟机/ 最大/ 和/ 最小/ 内存/ 值/ 限定/ ,/ 调整/ 地/ 提交/ 内存/ 值/ MCi/ =/ min/ (/ max/ (/ Li/ ,/ Ci/ )/ ,/ Hi/ )/ ./ 设/ Ni/ 为/ 当前/ 时刻/ 分配/ 给/ 每个/ 虚拟机/ 的/ 内存/ 值/ ,/ 则/ ∑/ (/ MCi/ -/ Ni/ )/ 为/ 所有/ 启动/ 了/ 自发/ 调节/ 服务/ 的/ 虚拟机/ 需要/ 的/ 内存/ 值/ 的/ 总和/ ,/ 该值/ 为/ 正值/ 表示/ 需要/ 使用/ 剩余/ 的/ 空闲/ 物理/ 内存/ ,/ 负值/ 表示/ 需要/ 释放/ 虚拟机/ 多余/ 的/ 内存/ 资源/ ./ 符号/ Hi/ 最大/ 内存/ Li/ 最小/ 内存/ Ci/ 提交/ 内存/ 值/ MCi/ 根据/ 最大/ 和/ 最小/ 内存/ 值/ 调整/ 后/ 提交/ 的/ 内存/ 值/ Ni/ 当前/ 分配/ 给/ 虚拟机/ 的/ 内存/ 值/ Nti/ 下/ 一/ 时刻/ 虚拟机/ 目标/ 内存/ 值/ (/ 不/ 包含/ 内存/ “/ 红利/ ”/ )/ Ti/ 虚拟机/ 最终目标/ 内存/ 值/ (/ 包含/ “/ 红利/ ”/ )/ Fi/ 当前/ 虚拟机/ 空闲/ 内存/ 值/ Ai/ 处于/ 活动状态/ 的/ 内存/ ,/ 等于/ Ni/ -/ FiSFi/ 空闲/ 交换/ 空间/ 大/ 小S/ Ti/ 交换/ 空间/ 总/ 大小/ 定义/ 1/ ./ 内存/ 资源/ 充裕/ 状态/ ./ 当/ Fh/ / ∑/ (/ MCi/ -/ Ni/ )/ 时/ ,/ 物理/ 机/ 空闲/ 内存/ 资源/ 可以/ 满足/ 所有/ 虚拟机/ 提交/ 内存/ 的/ 需要/ ,/ 称此/ 状态/ 为/ 内存/ 资源/ 充裕/ 状态/ ./ 定义/ 2/ ./ 内存/ 资源/ 紧缺/ 状态/ ./ 当/ Fh/ </ ∑/ (/ MCi/ -/ Ni/ )/ 时/ ,/ 空闲/ 的/ 物理/ 内存/ 资源/ 无法/ 满足/ 所有/ 虚拟机/ 提交/ 内存/ 的/ 需要/ ,/ 称此/ 状态/ 为/ 内存/ 资源/ 紧缺/ 状态/ ./ 定义/ 3/ ./ 多/ 虚拟机/ 内存/ 自发/ 调节/ ./ 若/ 系统/ 处于/ 内存/ 充裕/ 状态/ ,/ 各/ 虚拟机/ 可/ 根据/ 客户/ 操作系统/ 提交/ 的/ 内存/ 值/ 自行/ 调节/ ,/ 此种/ 内存/ 调节/ 方式/ 称为/ 自发/ 调节/ ./ 定义/ 4/ ./ 多/ 虚拟机/ 内存/ 全局/ 调节/ ./ 当/ 系统/ 处于/ 内存/ 紧缺/ 状态/ 下/ ,/ 物理/ 机/ 内存/ 资源/ 已经/ 无法/ 满足/ 多个/ 虚拟机/ 提交/ 内存/ 的/ 需求/ 了/ ,/ 出现/ 内存/ 资源/ 需求/ 竞争/ ./ 此时/ ,/ 需要/ 从/ 多/ 虚拟机/ 全局/ 的/ 角度/ 来/ 考虑/ 平衡/ 调节/ 策略/ ,/ 此种/ 内存/ 调节/ 方式/ 称为/ 全局/ 调节/ ./ 4.2/ 自发/ 调节/ 与/ 全局/ 调节/ 的/ 协同/ 算法/ 自发/ 调节/ 和/ 全局/ 调节/ 的/ 区别/ 在于/ 自发/ 调节/ 对于/ 每个/ 虚拟机/ 无需/ 知道/ 其它/ 虚拟机/ 的/ 内存/ 使用/ 信息/ ,/ 只/ 根据/ 自身/ 信息/ 就/ 可以/ 决定/ 分配/ 多少/ 内存/ 资源/ ./ 而/ 全局/ 调节/ 需要/ 掌握/ 每个/ 受控/ 的/ 客户/ 操作系统/ 的/ 内存/ 使用/ 信息/ ,/ 从/ 全局/ 的/ 角度/ 执行/ 平衡/ 调节/ 策略/ 决定/ 分配/ 给/ 每个/ 虚拟机/ 多少/ 内存/ 资源/ ./ 全局/ 调节/ 依赖/ 自发/ 调节/ 发送/ 的/ 虚拟机/ 内存/ 信息/ ,/ 自发/ 调节/ 受控/ 于/ 全局/ 调节/ ./ 自发/ 调节/ 和/ 全局/ 调节/ 之间/ 的/ 协作/ 算法/ 1/ 如下/ 所示/ ,/ 其/ 算法/ 的/ 复杂性/ 取决于/ 从/ 其它/ DomainU/ 中/ 回收/ Page5/ 内存/ 资源/ 和/ 执行/ 多个/ DomainU/ 的/ 全局/ 平衡/ 调节/ 策略/ ./ 算法/ 1/ ./ 自发/ 调节/ 与/ 主动/ 调节/ 协同/ 算法/ ./ 输入/ :/ 间隔时间/ time/ 输出/ :/ 无/ Cooperate/ (/ time/ )/ {/ While/ (/ 1/ )/ {/ If/ (/ 空闲/ 内存/ 资源/ 不够/ Domain0/ 使用/ )/ {/ If/ (/ 全局/ 调节/ 标记/ 为/ 真/ ‖/ 内存/ 资源/ 处于/ 紧缺/ 状态/ )/ {/ Sleep/ (/ time/ )/ ;/ }/ 首先/ 需要/ 考虑/ 的/ 是/ 不同/ Domain/ 之间/ 的/ 优先级/ 关系/ ./ Domain0/ 主要/ 负责/ VM/ 的/ 创建/ 、/ 管理/ 、/ 配置/ 等/ 工作/ ,/ 并/ 完成/ 设备/ 驱动/ ,/ 相对/ 于/ 其它/ DomainU/ 更加/ 重要/ ./ 因此/ 无论是/ 在/ 内存/ 资源/ 充裕/ 状态/ ,/ 还是/ 在/ 内存/ 资源/ 紧缺/ 状态/ 下/ ,/ 分配/ 给/ Domain0/ 的/ 调节/ 内存/ 值应/ 始终/ 为/ Domain0/ 客户/ 操作系统/ 的/ 提交/ 内存/ 值/ ./ 满足/ Domain0/ 需求/ 的/ 前提/ 下/ ,/ 再/ 在/ 各个/ DomainU/ 之间/ 进行/ 全局/ 调节/ ./ 内存/ 资源/ 充裕/ 状态/ 下/ ,/ 所有/ 客户/ 操作系统/ 内存/ 调节/ 由/ 自发/ 调节/ 机制/ 完成/ ;/ 在/ 全局/ 调节/ 模式/ 被/ 触发/ 后/ ,/ 拥有/ 自发/ 调节/ 服务/ 的/ 客户/ 操作系统/ 的/ 自发/ 调节/ 服务/ 将/ 被/ 禁用/ ./ 其次/ 要/ 考虑/ 全局/ 调节/ 的/ 触发/ 时机/ ./ Domain0/ 优先级/ 高于/ 其它/ DomainU/ ,/ 在/ 无法/ 满足/ Domain0/ 内存/ 资源/ 需求/ 时/ ,/ 需要/ 从/ 其它/ DomainU/ 中/ 回收/ 内存/ ,/ 区别/ 于/ 只是/ 在/ 相同/ 优先级/ 的/ DomainU/ 之间/ 进行/ 内存/ 资源/ 平衡/ ;/ 然而/ ,/ 通常/ 情况/ 下/ ,/ 并/ 不/ 在/ Domain0/ 中/ 运行/ 计算/ 或者/ 服务程序/ ,/ Domain0/ 的/ 内存/ 只是/ 在/ 有/ 新/ 的/ 虚拟机/ 启动/ 或者/ 有/ 虚拟机/ 关闭/ 的/ 时候/ 才/ 出现/ 内存/ 使用/ 的/ 明显/ 变化/ ./ 因此/ ,/ 当/ 能够/ 满足/ Domain0/ 内存/ 资源/ 需要/ 后/ 的/ 一段时间/ 内/ 都/ 不会/ 出现/ 第一种/ 情况/ ,/ 即/ 不/ 需要/ 从/ 其它/ DomainU/ 中/ 回收/ 内存/ 资源/ ./ 这/ 两种/ 情况/ 下/ 系统/ 都/ 是/ 处于/ 内存/ 资源/ 紧缺/ 状态/ ./ 综上/ ,/ 可以/ 确定/ 以下/ 两种/ 情况/ 会/ 触发/ 全局/ 调节/ 模式/ :/ (/ 1/ )/ Domain0/ 无法/ 满足/ 提交/ 内存/ 需要/ 时/ ,/ 需要/ 从/ 其它/ 客户/ 操作系统/ 回收/ 内存/ ;/ (/ 2/ )/ 能够/ 满足/ Domain0/ 的/ 需要/ ,/ 但/ 内存/ 资源/ 处于/ 紧缺/ 状态/ ./ 4.3/ 自发/ 调节/ 策略/ 自发/ 调节/ 和/ 全局/ 调节/ 模式/ 在/ 同一时间/ 只能/ 有/ 一个/ 处于/ 启用/ 状态/ ,/ 判定/ 哪/ 种/ 模式/ 处于/ 启用/ 状态/ 和/ 如何/ 执行/ 最终/ 的/ 内存/ 调节/ 是/ 自发/ 调节/ 策略/ 重点/ ./ 从/ // proc/ 文件系统/ 的/ meminfo/ 中/ 可以/ 得到/ 客户/ 操作系统/ 的/ 内存/ 信息/ ,/ 包括/ 提交/ 内存/ 值/ committed/ _/ AS/ ;/ 利用/ Xenstore/ 作为/ 客户/ 操作系统/ 和/ Domain0/ 之间/ 内存/ 信息/ 和/ 控制/ 信息/ 传递/ 的/ 媒介/ ;/ 利用/ 气球/ 驱动/ 机制/ 作为/ 调节/ 客户/ 操作系统/ 内存/ 的/ 基础/ ./ 自发/ 调节/ 算法/ 如/ 算法/ 2/ 所示/ ,/ 算法/ 复杂度/ 为/ O/ (/ 1/ )/ ./ 算法/ 2/ ./ 自发/ 调节/ 算法/ ./ 子程序/ :/ 调节/ 到/ 目标/ 内存/ // / type/ =/ =/ 1/ 为/ 自发/ 调节/ ,/ 其它/ 非负/ 整数/ 都/ 为/ 全局/ 调/ 输入/ :/ 调节/ 类型/ ;/ 输出/ :/ 无/ Adjust/ _/ to/ _/ target/ (/ inttype/ )/ {/ If/ (/ type/ =/ =/ 1/ )/ {/ If/ (/ current/ >/ target/ )/ {/ 自发/ 调节/ :/ 输入/ :/ 间隔时间/ time/ 输出/ :/ 无/ Self/ (/ time/ )/ {/ 通知/ 全局/ 调节/ 自发/ 调节/ 启动/ ;/ While/ (/ true/ )/ {/ 根据/ 配置/ 和/ 全局/ 控制/ ,/ 判断/ 自发/ 调节/ 状态/ ;/ If/ (/ 自发/ 调节/ 启用/ )/ {/ Adjust/ _/ to/ _/ target/ (/ 1/ )/ ;/ }/ else/ {/ 获取/ 全局/ 目标/ 内存/ global/ ;/ Adjust/ _/ to/ _/ target/ (/ global/ )/ ;/ }/ 向/ 全局/ 发送/ 内存/ 等/ 状态/ 信息/ ;/ Sleep/ (/ time/ )/ ;/ }/ }/ Page6/ 在/ 自发/ 调节/ 的/ 触发/ 过程/ 中/ 需要/ 注意/ 以下/ 问题/ :/ (/ 1/ )/ 自发/ 调节/ 启用/ 需要/ 通知/ 主控/ 模块/ ./ 自发/ 调节/ 的/ 启动/ 时间/ 的/ 不确定性/ 要求/ 自发/ 调节/ 在/ 启动/ 后/ 需要/ 通知/ 主控/ 模块/ ./ 若/ 自发/ 调节/ 在/ 启用/ 后/ 没有/ 通知/ 主控/ 模块/ ,/ 则/ 主控/ 模块/ 在/ 进行/ 调节/ 时/ 并不知道/ DomainU/ 自身/ 已经/ 作出/ 了/ 调节/ ,/ 会/ 引发/ 内存/ 资源/ 竞争/ ;/ (/ 2/ )/ 自发/ 调节/ 是否/ 启用/ 开始/ 时/ 由/ 自己/ 控制/ ,/ 后/ 受控/ 于/ 主控/ 模块/ ./ 自发/ 调节/ 是否/ 启用/ 在/ 开始/ 时/ 由/ 自身/ 的/ 配置文件/ 决定/ ,/ 一旦/ 全局/ 调节/ 改变/ 了/ 配置/ 的/ 状态/ ,/ 自发/ 调节/ 是否/ 启用/ 的/ 状态/ 只/ 受控/ 于/ 全局/ 调节/ ./ (/ 3/ )/ 对于/ 客户/ 操作系统/ 来说/ ,/ 自发/ 调节/ 和/ 全局/ 调节/ 同时/ 只能/ 有/ 一个/ 处于/ 启用/ 状态/ ./ 也/ 即/ 对于/ 每/ 一个/ 客户/ 操作系统/ 来说/ 同一时间/ 只/ 受控/ 于/ 一种/ 调节/ 机制/ ,/ 不会/ 出现/ 调节/ 冲突/ ./ 4.4/ 全局/ 调节/ 策略/ 在/ 处于/ 内存/ 紧缺/ 状态/ 时/ ,/ 自发/ 调节/ 策略/ 已/ 不能/ 满足需要/ ./ 需要/ 从/ 全局/ 视角/ 对/ 有限/ 的/ 内存/ 资源/ 重新/ 动态分配/ ./ Waldspurger/ 等/ 人/ [/ 9/ ]/ 提出/ 了/ 按/ 股份/ 分配/ 的/ 思想/ :/ 在/ 按/ 比例/ 分配/ 方案/ 中/ ,/ 客户/ 拥有/ 的/ 分配资源/ 的/ 权利/ 称为/ 股份/ ,/ 客户/ 根据/ 拥有/ 的/ 股份/ 按/ 比例/ 地/ 分配/ 与/ 回收/ 系统资源/ ./ 当/ 内存/ 资源/ 紧缺/ 时/ ,/ 系统/ 从不/ 完全/ 使用/ 其/ 内存/ 的/ 客户/ 中/ 收回/ 内存/ 资源/ ./ 空闲/ 内存/ 税/ 表示/ 从/ 一个/ 客户/ 中/ 收回/ 空闲/ 页面/ 的/ 最大/ 比重/ ./ 对于/ 一个/ 股份/ 为/ S/ 的/ 客户/ ,/ 当前/ 分配/ 的/ 内存/ 页/ 为/ P/ ,/ 其中/ 有/ f/ 部分/ 处于/ 活动状态/ ,/ 每页/ 股份/ 率/ ρ/ 为/ ρ/ =/ S/ // P/ (/ f/ +/ k/ (/ 1/ -/ f/ )/ )/ ./ 其中/ ,/ k/ =/ 1/ // (/ 1/ -/ τ/ )/ 为/ 空闲/ 页/ 开销/ ,/ τ/ (/ 0/ / τ/ </ 1/ )/ 为/ 空闲/ 内存/ 税/ ./ 空闲/ 内存/ 税/ τ/ 指定/ 了/ 可以/ 回收/ 多少/ 空闲/ 内存/ 资源/ ./ 当/ τ/ =/ 0/ 时/ ,/ 方法/ 是/ 纯粹/ 的/ 按/ 比例/ 分配/ 方法/ ,/ 当/ τ/ ≈/ 1/ 时/ ,/ 所有/ 的/ 空闲/ 内存/ 资源/ 都/ 将/ 被/ 收回/ ./ 然而/ 该/ 方法/ 没有/ 考虑/ 交换/ 空间/ 对/ 空闲/ 内存/ 税/ 的/ 影响/ ,/ 更/ 重要/ 的/ 是/ 该/ 方法/ 并/ 没有/ 提出/ 定量/ 计算/ 多/ 虚拟机/ 间/ 动态内存/ 分配/ 的/ 策略/ ./ 因此/ ,/ 本/ 节/ 提出/ 基于/ 空闲/ 内存/ 税/ 的/ 全局/ 调节/ 策略/ ./ 我们/ 规定/ 每个/ 客户/ 操作系统/ 拥有/ 的/ 股份/ 是/ 相同/ 的/ ,/ 设定/ 每个/ 客户/ 操作系统/ 的/ S/ =/ 1/ ,/ P/ =/ Ni/ ,/ 处于/ 活动/ 部分/ 的/ 内存/ 比率/ f/ =/ Ai/ // Ni/ ,/ 可得/ 该/ 客户/ 操作系统/ 的/ 每页/ 股份/ 率/ ρ/ i/ 为/ ρ/ i/ =/ 1/ // (/ Ai/ +/ k/ (/ Ni/ -/ Ai/ )/ )/ =/ (/ 1/ -/ τ/ )/ // (/ Ni/ -/ τ/ ×/ Ai/ )/ ./ 其中/ ,/ Ni/ 为/ 该/ 客户/ 操作系统/ 的/ 当前/ 内存/ 值/ ,/ Ai/ 为/ 该/ 客户/ 操作系统/ 处于/ 活动状态/ 的/ 内存/ 值/ ,/ 且/ Ai/ =/ Ni/ -/ Si/ ./ 内存/ 处于/ 紧缺/ 的/ 客户/ 操作系统/ 会/ 使用/ 系统/ 的/ 交换/ 空间/ ,/ 且/ 使用率/ 不同/ ./ 考虑/ 加入/ 交换/ 空间/ 后/ 每页/ 股份/ 率/ ρ/ i/ 如式/ (/ 1/ )/ 所示/ ,/ ε/ 为/ 交换/ 空间/ 使用率/ 加权/ 比/ ,/ 控制/ 交换/ 空间/ 的/ 使用/ 情况/ 在/ 每页/ 股份/ 使用率/ 评价/ 中/ 的/ 比重/ ./ ρ/ i/ =/ (/ 1/ -/ τ/ )/ +/ ε/ ×/ (/ 1/ -/ SFi/ // STi/ )/ // Ni/ -/ τ/ ×/ Ai/ (/ 1/ )/ 设/ Nti/ 为/ 下/ 一/ 时刻/ 分配/ 给/ 客户/ 操作系统/ 的/ 内存/ 值/ ,/ 在/ 物理/ 机/ 处于/ 内存/ 资源/ 紧缺/ 状态/ 时/ ,/ 平衡/ 多/ 虚拟机/ 的/ 内存/ 资源/ 为/ 平衡/ 空闲/ 内存/ 的/ 价格/ ,/ 即求/ 下/ 一/ 时刻/ 分配/ 给/ 客户/ 操作系统/ 多少/ 内存/ 资源/ 可以/ 保证/ 多个/ 虚拟机/ 的/ 空闲/ 内存价格/ 相等/ ./ 由此/ 可/ 得/ 方程组/ 如式/ (/ 2/ )/ 所示/ :/ 烄/ (/ 1/ -/ τ/ )/ +/ ε/ ×/ 1/ -/ SF1ST/ (/ )/ 1Nt1/ -/ τ/ ×/ A1/ =/ (/ 1/ -/ τ/ )/ +/ ε/ ×/ 1/ -/ SF1ST/ (/ )/ 1Nt1/ -/ τ/ ×/ A1/ =/ (/ 1/ -/ τ/ )/ +/ ε/ ×/ 1/ -/ SF1ST/ (/ )/ 1Nt1/ -/ τ/ ×/ A1/ =/ 烅/ 烆/ 设/ (/ 1/ -/ τ/ )/ +/ ε/ ×/ 1/ -/ SFiST/ (/ )/ (/ 其中/ i/ =/ 2/ ,/ 3/ ,/ …/ ,/ n/ ./ 化简/ 方程组/ (/ 2/ )/ 得/ 由此/ ,/ 可/ 得/ 方程组/ 的/ 系数/ 矩阵/ 犃/ (/ 如式/ (/ 4/ )/ 所示/ )/ ,/ 犃/ 是/ n/ ×/ n/ 的/ ./ 易求/ 的/ 系数/ 矩阵/ 犃/ 的/ 秩/ 为/ n/ ./ 又/ 因为/ 一个/ 满/ 秩/ 方阵/ 和/ 其/ 增广/ 矩阵/ 同秩/ ./ 若/ 对于/ 犃/ 狓/ =/ 犫/ 线性方程组/ ,/ 矩阵/ (/ 犃/ )/ 的/ 秩/ 与/ (/ 犃/ 犫/ )/ 的/ 秩/ 相等/ ,/ 并且/ 等于/ 满/ 秩/ ,/ 则/ 方程组/ 犃/ 狓/ =/ 犫/ 有/ 唯一/ 解/ ./ 全局/ 调节/ 算法/ 如/ 算法/ 3/ 所示/ ./ 根据/ 该/ 算法/ 可/ 求得/ 每个/ 客户/ 操作系统/ 下/ 一/ 时刻/ 分配/ 的/ 内存/ 资源/ 值/ Nti/ ./ Fh/ 为/ 物理/ 机上/ 空闲/ 内存/ 的/ 值/ ,/ 可/ 求/ 虚拟机/ 目标/ 内存/ 值/ Ti/ =/ Nti/ +/ Fh/ ×/ Nti/ ∑/ Nti/ ,/ 其中/ Ti/ 就是/ 需/ Page7/ 要求/ 的/ 每个/ 客户/ 操作系统/ 的/ 最终目标/ 内存/ ./ 构造/ 线性方程组/ 的/ 算法/ 复杂度/ 为/ O/ (/ n/ )/ ,/ 求解/ 线性方程组/ 的/ 复杂度/ 为/ O/ (/ n2/ )/ ,/ 因此/ 最好/ 情况/ 下/ 算法/ 复杂度/ 为/ O/ (/ n2/ )/ ,/ 最坏/ 情况/ 下/ 复杂度/ 为/ O/ (/ n3/ )/ ,/ 其中/ n/ 为/ 受控/ 的/ 虚拟机/ 个数/ ./ 算法/ 3/ ./ 平衡/ 空闲/ 内存价格/ 的/ 全局/ 调节/ 算法/ ./ 输入/ :/ 当前/ 内存/ 值/ 之/ 和/ ,/ 所有/ 虚拟机/ 内存/ 信息/ 输出/ :/ 每个/ 虚拟机/ 的/ 目标/ 内存/ 值/ Balance/ _/ mem/ (/ total/ _/ cur/ )/ {/ If/ (/ 只有/ 一个/ 客户/ 操作系统/ )/ {/ 根据/ 最大/ 和/ 最小/ 内存/ ,/ 调整/ 目标/ 内存/ 值/ ;/ }/ else/ {/ 构造/ 线性方程组/ ;/ 5/ 实验/ 结果/ 及/ 性能/ 分析/ 本/ 节/ 实验/ 分为/ 5/ 部分/ :/ 第/ 1/ 部分/ 通过/ 实验/ 测定/ 自发/ 调节/ 与/ 全局/ 调节/ 算法/ 中/ 空闲/ 内存/ 、/ 空闲/ 内存/ 税率/ 和/ 交换/ 空间/ 使用率/ 等/ 关键/ 参数/ ;/ 第/ 2/ 部分/ 验证/ 自发/ 调节/ 与/ 全局/ 调节/ 算法/ 的/ 有效性/ ;/ 第/ 3/ 部分/ 采用/ Dacapo/ 和/ SPECCPU2000/ 等/ 标准/ 测试程序/ ,/ 进一步/ 验证/ 多/ 虚拟机/ 内存/ 管理系统/ 的/ 性能/ ;/ 第/ 4/ 部分/ 和/ 第/ 5/ 部分/ 分析/ 多/ 虚拟机/ 内存/ 管理系统/ 的/ 开销/ 与/ 可扩展性/ ./ 实验/ 环境/ 采用/ Intel/ 服务器/ 和/ Xen3/ ./ 0/ ./ 服务器/ 为/ 8/ 核/ (/ 2/ 个/ IntelXeonE55062/ ./ 13GHzQuad/ -/ Coreprocessors/ )/ ,/ 16GB/ 双通道/ 1333MHz/ 内存/ ./ 客户机/ 系统/ 为/ linux2/ ./ 6.16/ ,/ 为了/ 避免/ CPU/ 竞争/ ,/ 实验/ 中/ 给/ 每个/ 虚拟机/ 分配/ 一个/ CPU/ 核心/ ./ 客户机/ 上/ 的/ 守护/ 进程/ 使用/ shell/ 编写/ ./ 全局/ 调节/ 使用/ C语言/ 实现/ ,/ 调节/ 每秒/ 运行/ 一次/ ./ 每个/ 客户机/ 的/ 初始/ 内存/ 值为/ 214MB/ ,/ 基线/ 数据/ 通过/ 在/ 没有/ 内存/ 信息/ 收集/ 和/ 内存/ 调节/ 的/ 环境/ 下测/ 得/ ./ 基准/ 测试程序/ 包括/ 两个/ 微内核/ 基准/ 测试程序/ (/ Dacapo/ [/ 21/ ]/ 和/ SPECCPU2000/ [/ 22/ ]/ )/ 和/ 两个/ 微内核/ 程序/ (/ random/ 和/ mono/ )/ [/ 18/ ]/ ./ random/ 运行/ 时/ 随机/ 申请/ 一个/ r/ 大小/ 的/ 内存空间/ r/ ∈/ [/ low/ ,/ high/ ]/ ,/ 然后/ 以/ 确定/ 的/ 迭代/ 次数/ 随机/ 地/ 访问/ 申请/ 的/ 内存空间/ ,/ 当/ 迭代/ 完成/ 时/ ,/ 释放/ 申请/ 的/ 内存空间/ 并/ 开始/ 下/ 一次/ 重复/ 操作/ ./ Mono/ 和/ random/ 相似/ ,/ 但/ 在/ 每个/ 阶段/ 的/ 访问/ 中/ ,/ mono/ 申请/ 的/ 内存空间/ 的/ 大小/ 先/ 从/ low/ 到/ high/ 单调/ 递增/ ,/ 然后/ 再/ 从/ high/ 到/ low/ 单调/ 递减/ ./ Dacapo/ 是/ 一组/ Java/ 测试/ 标准/ 集合/ ,/ 包括/ 10/ 个/ 真实/ 的/ 计算机/ 应用程序/ ,/ 其中/ 一些/ 程序/ 计算/ 需要/ 很大/ 的/ 内存/ 资源/ ./ 默认/ 情况/ 下/ ,/ 初始/ 的/ Java/ 堆/ 空间/ 大小/ 为/ 50MB/ ,/ 最大/ 为/ 100MB/ ./ SPECCPU2000/ 是/ 标准/ 性能/ 评价/ 公司/ (/ StandardPerformanceEvaluationCorporation/ )/ 发布/ 的/ 测试/ 标准/ ./ SPEC/ 发布/ CPU2000/ 是/ 在/ 广泛/ 使用/ 的/ 硬件平台/ 上/ ,/ 提供/ 了/ 对/ 计算/ 密集型/ 性能/ 进行/ 对比/ 的/ 测试/ 标准/ ./ 5.1/ 关键/ 参数/ 测定/ 空闲/ 内存/ 值/ ./ 多数/ 情况/ 下/ ,/ 通过/ 读取/ 客户/ 操作系统/ 中/ // proc/ 文件系统/ 的/ meminfo/ 信息/ 即可/ 获得/ 当前/ 空闲/ 内存/ 值/ ./ 然而/ ,/ 当/ 物理/ 机/ 内存/ 资源/ 处于/ 紧缺/ 状态/ 时/ ,/ 空闲/ 内存/ 会/ 出现/ 短时间/ 剧烈/ 颠簸/ 现象/ ./ 在/ 分配/ 256MB/ 内存/ 的/ 客户/ 操作系统/ SLED10/ (/ SUSELinuxEnterpriseDesktop10/ )/ 中/ ,/ 运行/ mono/ 标准/ 测试程序/ ,/ 内存/ 访问/ 范围/ 为/ 40MB/ ~/ 300MB/ ./ 如图/ 2/ (/ a/ )/ 所示/ :/ 采集/ 到/ 的/ 空闲/ 内存/ 值/ 出现/ 多次/ 瞬间/ 剧烈/ 波动/ ./ 由于/ 全局/ 调节/ 算法/ 在/ 计算/ 空闲/ 内存价格/ 时/ 需要/ 用到/ 空闲/ 内存/ 值/ 的/ 大小/ ,/ 空闲/ 内存价格/ 异常/ 颠簸/ 最终/ 导致/ 全局/ 调节/ 算法/ 分配/ 给/ 每个/ 客户/ 操作系统/ 的/ 内存/ 值/ 失配/ ./ 分析/ 发现/ ,/ 剧烈/ 波动/ 的/ 原因/ 是/ 物理/ 机/ 内存/ 资源/ 紧缺/ 时/ ,/ 客户/ 操作系统/ 通过/ 页/ 框/ 回收/ 算法/ (/ PageFrameReclaimingAlgorithm/ ,/ PFRA/ )/ 回收/ 内存/ 页面/ ./ 因此/ 采用/ 多次/ 采集/ 方法/ 确定/ 客户/ 操作系统/ 空闲/ 内存大小/ ./ 设定/ 空闲/ 内存/ 波动/ 发现/ 基准/ fmd/ (/ 5MB/ )/ ,/ k/ 为/ 收集/ 了/ 空闲/ 内存/ 值/ 次数/ ,/ freek/ +/ 1/ 为/ 当前/ 时刻/ 获取/ 的/ 空闲/ 内存/ 值/ 的/ 大小/ ,/ freek/ 为/ 前/ 一/ 时刻/ 收集/ 到/ 的/ 空闲/ 内存/ 值/ 的/ 大小/ ./ 若/ 本次/ 获取/ 的/ 系统/ 空闲/ 内存/ 值/ 满足/ freek/ +/ 1/ -/ ∑/ k/ 的/ 内存/ 值/ 异常/ ,/ 取前/ k/ 次/ 获取/ 的/ 空闲/ 内存/ 值/ 的/ 平均值/ 作为/ 该/ 时刻/ 系统/ 的/ 空闲/ 内存/ 值/ ,/ 即/ freek/ +/ 1/ =/ ∑/ kfreei/ // k/ ./ 根据上述/ 方法/ 实验/ 结果/ 如图/ 2/ (/ b/ )/ 所示/ :/ i/ =/ 1/ 空闲/ 内存/ 波动/ 降低/ ,/ 为/ 内存/ 动态/ 调整/ 提供/ 了/ 保障/ ./ 空闲/ 内存/ 税率/ ./ 启动/ 两个/ 客户/ 操作系统/ ,/ 每个/ 系统/ 的/ 最大/ 内存/ 值为/ 512MB/ ,/ 分配/ 的/ 当前/ 内存/ 值为/ Page8/ 图/ 2/ 基于/ mono/ 标准/ 测试程序/ 确定/ 空闲/ 内存/ 示意图/ 256MB/ ./ 首先/ 在/ 两个/ 客户/ 操作系统/ 中/ 配置/ 了/ 不/ 启用/ 自发/ 调节/ 方式/ 的/ 自发/ 调节/ 服务/ ,/ 在/ Domain0/ 中/ 启用/ 只/ 按照/ 基于/ 空闲/ 内存价格/ 的/ 调节/ 策略/ 进行/ 计算/ ,/ 不/ 作/ 实际/ 调节/ 工作/ ./ 在/ 其中/ 一台/ 客户/ 操作系统/ 上/ 运行/ mono/ 标准/ 测试程序/ ,/ 另一台/ 机器/ 上/ 不/ 运行/ 任何/ 程序/ ./ 并且/ 设置/ 内存/ 空闲/ 税率/ τ/ 为/ 0/ ,/ 随/ 时间/ τ/ 值/ 逐渐/ 递增/ ./ 实验/ 结果/ 如图/ 3/ 所示/ :/ 当/ 空闲/ 内存/ 税率/ 递增/ 至/ 0.75/ 时/ ,/ 调节/ 程序/ 会/ 根据/ 内存/ 使用/ 情况/ 多/ 分配/ 40/ %/ 的/ 内存/ (/ mono/ 访问/ 100MB/ 时/ ,/ 两个/ 客户/ 操作系统/ 中/ VM1/ 内存/ 增加/ 了/ 40MB/ ,/ 而/ VM2/ 内存/ 减少/ 了/ 40MB/ )/ ./ 因此/ ,/ 确定/ 内存/ 空闲/ 税率/ τ/ =/ 0.75/ ./ 图/ 3/ 基于/ mono/ 标准/ 测试程序/ 确定/ 空闲/ 内存/ 税率/ 示意图/ 交换/ 空间/ 使用率/ ./ 交换/ 空间/ 使用率/ ε/ 体现/ 交换/ 空间/ 的/ 利用/ 对/ 内存/ 分配/ 的/ 影响/ ./ 启动/ 两个/ 客户/ 操作系统/ ,/ 在/ 客户/ 操作系统/ 上/ 启用/ 自发/ 调节/ 服务/ ,/ 但/ 自发/ 调节/ 服务/ 的/ 自发/ 调节/ 被/ 禁用/ ,/ 只/ 做/ 内存/ 信息/ 收集/ 和/ 交互/ 工作/ ./ 而且/ 全局/ 调节/ 也/ 只/ 按照/ 基于/ 空闲/ 内存价格/ 的/ 策略/ 进行/ 计算/ 目标/ 内存/ 值/ ,/ 不/ 执行/ 调节/ ./ 在/ VM1/ 中/ 运行/ 申请/ 内存/ 范围/ 为/ [/ 200/ ,/ 350/ ]/ MB/ 的/ mono/ 程序/ ,/ VM2/ 上/ 不/ 运行/ 程序/ ./ 实验/ 结果/ 如图/ 4/ 所示/ :/ 当/ 交换/ 空间/ 使用率/ 加权/ 比/ ε/ =/ 0.1/ 时/ 波动性/ 相对/ ε/ =/ 0.04/ 根据/ 交换/ 空间/ 进行/ 调节/ 的/ 范围/ 显著/ ./ 在/ 小/ 的/ 时间/ 片内/ 没有/ 很大/ 波动/ ,/ 对/ 调节/ 的/ 影响/ 可以/ 忽略/ ./ 因此/ 取/ 交换/ 空间/ 使用率/ 加权/ 比/ ε/ =/ 0.1/ ./ 图/ 4/ 基于/ mono/ 标准/ 测试程序/ 确定/ 交换/ 空间/ 5.2/ 内存/ 动态平衡/ 算法/ 有效性/ 自发/ 调节/ 有效性/ ./ 当/ 内存/ 资源/ 处于/ 充裕/ 状态/ 时/ ,/ 多/ 虚拟机/ 内存/ 管理系统/ 使用/ 自发/ 调节/ 作为/ 基本/ 的/ 调节/ 策略/ ,/ 也/ 即/ 每个/ 客户/ 操作系统/ 使用/ 提交/ 内存/ 值/ 作为/ 调节/ 的/ 目标/ 内存/ 值/ ./ 在/ 客户/ 操作系统/ 分别/ 运行/ mono/ 和/ random/ 两个/ 测试/ 标准/ ,/ 申请/ 内存/ 范围/ 为/ [/ 40/ ,/ 170/ ]/ MB/ 和/ [/ 40/ ,/ 300/ ]/ MB/ ./ 实验/ 结果/ 如图/ 5/ 和/ 图/ 6/ 所示/ :/ mono/ 和/ random/ 两个/ 测试/ 标准/ 无论是/ 在/ 有/ 足够/ 物理/ 内存/ 情况/ 下/ (/ 图/ 5/ (/ a/ )/ 、/ 图/ 6/ (/ a/ )/ )/ ,/ 还是/ 使用/ 了/ 交换/ 空间/ 的/ 测试/ 结果/ (/ 图/ 5/ (/ b/ )/ 、/ 图/ 6/ (/ b/ )/ )/ ,/ 均/ 表明/ 系统/ 提交/ 内存/ 能够/ 体现/ 程序/ 占用/ 内存/ 资源/ 的/ 情况/ ,/ 使用/ 提交/ 内存/ 值/ 作为/ 系统/ 的/ 目标/ 内存/ 值/ 以及/ 应用/ 自发/ 调节/ 策略/ 的/ 有效性/ ./ Page9/ 图/ 5/ 基于/ mono/ 标准/ 测试/ 程序验证/ 自发/ 调节/ 算法/ 的/ 有效性/ 示意图/ 图/ 6/ 基于/ random/ 标准/ 测试/ 程序验证/ 自发/ 调节/ 算法/ 的/ 有效性/ 示意图/ 全局/ 调节/ 有效性/ ./ 采用/ mono/ 和/ random/ 两个/ 标准/ 测试程序/ 基于/ 空闲/ 内存价格/ 调节/ 方式/ 的/ 有效性/ ./ 实验/ 结果/ 如图/ 7/ 和/ 图/ 8/ 所示/ :/ 因为/ 每台/ 客户/ 操作系统/ 分配/ 的/ 内存/ 值为/ 256MB/ ,/ 因此/ ,/ mono/ 和/ random/ 在/ 申请/ 访问/ 内/ 存在/ [/ 40/ ,/ 170/ ]/ MB/ 范围/ 内时/ 没有/ 页面/ (/ 或者/ 很少/ )/ 被/ 换入/ 到/ 交换/ 空间/ ./ 从图/ 7/ (/ a/ )/ 和/ 图/ 8/ (/ a/ )/ 可以/ 很/ 明显/ 地/ 看出/ ,/ 基于/ 空闲/ 内存价格/ 调节/ 策略/ ,/ 两个/ 客户/ 操作系统/ 的/ 目标/ 内存/ 值/ 和/ 运行/ 在/ 客户/ 操作/ 系图/ 7/ 基于/ mono/ 标准/ 测试/ 程序验证/ 全局/ 调节/ 算法/ 的/ 有效性/ 示意图/ 统上/ 的/ 测试/ 标准/ 能/ 很/ 好/ 地/ 吻合/ ./ 另外/ ,/ 因为/ 进行/ 空闲/ 内存/ 值/ 调整/ 的/ 缘故/ ,/ 利用/ 基于/ 空闲/ 内存价格/ 进行/ 内存/ 调节/ 是/ 一个/ 缓慢/ 下降/ 的/ 过程/ ./ 图/ 7/ (/ b/ )/ 和/ 图/ 8/ (/ b/ )/ 所示/ 的/ mono/ (/ 40MB/ ~/ 300MB/ )/ 和/ random/ (/ 40MB/ ~/ 300MB/ )/ 的/ 实验/ ,/ 因为/ 客户/ 操作系统/ 物理/ 内存/ 只有/ 256MB/ ,/ 测试/ 标准/ 访问/ 内存空间/ 必然/ 导致/ 页面/ 换/ 出/ 操作/ ,/ 对于/ mono/ (/ 40MB/ ~/ 300MB/ )/ 当/ 交换/ 空间/ 使用量/ 到/ 一定/ 值时/ ,/ 虽然/ 分配/ 给/ 每个/ 客户/ 操作系统/ 内存/ Page10/ 图/ 8/ 基于/ random/ 标准/ 测试/ 程序验证/ 全局/ 调节/ 算法/ 的/ 有效性/ 示意图/ 值/ 趋于稳定/ ,/ 但/ 仍然/ 发现/ VM1/ 的/ 目标/ 内存/ 值/ 在/ 变化/ ./ 对于/ random/ (/ 40MB/ ~/ 300MB/ )/ 则/ 可以/ 很/ 容易/ 地/ 看出/ ,/ 基于/ 空闲/ 内存价格/ 的/ 方式/ 调节/ 能够/ 按照/ 操作系统/ 上/ 运行/ 的/ 测试程序/ 合理/ 调节/ 客户/ 操作系统/ 的/ 内存/ ./ 5.3/ 全局/ 内存/ 调节/ 算法/ 性能/ 存/ 调节/ 算法/ 的/ 性能/ ./ 本节/ 采用/ 不同/ 类型/ 的/ 负载/ 组合/ 着重/ 验证/ 全局/ 内/ 计算/ 密集型/ 加/ 存储/ 密集型/ 负载/ ./ 主要/ 测试/ 基于/ 空闲/ 内存价格/ 的/ 调节/ 策略/ 的/ 性能/ ./ 首先/ 利用/ 基本/ 没有/ 内存/ 竞争/ 的/ 程序/ 进行/ 实验/ ./ 程序/ 包括/ Dacapo/ 的/ 一套/ 标准/ 和/ 186/ ./ crafty/ ./ 186/ ./ crafty/ 是/ 一个/ 处理/ 密集型/ 的/ 程序/ ,/ 内存/ 的/ 负载/ 很小/ ./ 在/ VM1/ 上/ 186/ ./ crafty/ 先/ 运行/ 10/ 次/ 迭代/ ,/ 然后/ 运行/ Dacapo/ 的/ 标准/ ,/ 同时/ 在/ VM2/ 上先/ 运行/ Dacapo/ ,/ 接着/ 运行/ 同样/ 迭代/ 次数/ 的/ 186/ ./ crafty/ ./ 图/ 9/ 给出/ 了/ 实验/ 调节/ 后/ 程序运行/ 时间/ 和/ 基准/ 时间/ 的/ 对比/ ./ 基准/ 时间/ 是/ 程序/ 在/ 启动/ 了/ 自发/ 调节/ 服务/ (/ 但/ 不/ 执行/ 内存/ 调节/ )/ 的/ 客户/ 操作系统/ 的/ 运行/ 时间/ ,/ 系统/ 分配/ 的/ 内存/ 始终/ 为/ 214MB/ ./ 从图/ 中/ 可以/ 看出/ eclipse/ 的/ 运行/ 时间/ 降低/ 最大/ 为/ 20/ %/ ,/ 整个/ Dacapo/ 的/ 运行/ 时间/ 降低/ 了/ 13/ %/ ./ 图/ 9Dacapo/ +/ 186/ ./ crafty/ 内存/ 调节/ 前后/ 的/ 性能/ 对比/ 存储/ 密集型/ 加/ 存储/ 密集型/ 负载/ ./ 在/ 内存/ 调节/ 中/ ,/ 最/ 具有/ 挑战/ 的/ 情况/ 就是/ 当/ 出现/ 内存/ 资源/ 竞争/ 时/ ./ 在/ VM1/ 上/ 运行/ Dacapo/ ,/ 在/ VM2/ 上以/ 逆序/ 的/ 方式/ 运行/ Dacapo/ (/ 表示/ 为/ Dacapo/ )/ ./ Xalan/ 和/ eclipse/ 占用/ 300MB/ 左右/ 的/ 内存/ ,/ 并且/ eclipse/ 占/ 了/ 运行/ 中/ 的/ 大部分/ 时间/ ./ 当/ 两个/ 客户/ 操作系统/ 都/ 运行/ eclipse/ 时/ ,/ 出现/ 内存/ 竞争/ ./ 图/ 10/ 和/ 图/ 11/ 分别/ 给出/ 了/ 两个/ 客户/ 操作系统/ 上/ Dacapo/ 中/ 各个/ 程序运行/ 时间/ 和/ 基准/ 时间/ 的/ 对比/ ./ 可以/ 看出/ eclipse/ 的/ 运行/ 时间/ 缩短/ 的/ 最大/ ./ 和/ 基准/ 运行/ 时间/ 相比/ ,/ Dacapo/ 在/ 两个/ 客户/ 操作系统/ 上/ 运行/ 的/ 总/ 时间/ 分别/ 缩短/ 了/ 36/ %/ 和/ 32/ %/ ./ 图/ 10Dacapo/ +/ Dacapo/ 负载/ VM1/ 中/ 内存/ 调节/ 前后/ 的/ 性能/ 对比/ 图/ 11Dacapo/ +/ Dacapo/ 负载/ VM2/ 中/ 内存/ 调节/ 前后/ 的/ 性能/ 对比/ Page115/ ./ 4/ 系统/ 额外/ 开销/ 额外/ 开销/ 包括/ 存储/ 开销/ 和/ 计算/ 开销/ ./ 其中/ 存储/ 开销/ 包括/ 全局/ 调节/ 存储/ 各个/ 客户/ 操作系统/ 相关/ 的/ 信息/ 、/ 存储/ 空闲/ 内存/ 和/ 空闲/ 交换/ 空间/ 的/ 开销/ ./ 对于/ 每/ 一个/ 客户/ 操作系统/ 的/ 信息/ 占用/ 约/ 130/ 个/ 字节/ ,/ 最/ 多/ 启动/ 100/ 个/ 客户/ 操作系统/ (/ Xen3/ ./ 0/ 虚拟机/ 监视器/ 至多/ 支持/ 启动/ 100/ 个/ 左右/ 的/ 客户/ 操作系统/ )/ ,/ 存储/ 客户/ 操作系统/ 内存/ 信息/ 需要/ 的/ 内存大小/ 为/ 12KB/ ,/ 得出/ 存储/ 空闲/ 内存/ 和/ 空闲/ 交换/ 空间/ 需要/ 的/ 内存大小/ 分别/ 为/ 50KB/ 和/ 40KB/ ./ 自发/ 调节/ 不/ 做/ 信息/ 存储/ ,/ 内存/ 开销/ 非常/ 小/ ./ 相比/ 内存/ 开销/ ,/ 系统/ CPU/ 开销/ 较为/ 明显/ ./ Domain0/ 启用/ 全局/ 调节/ 的/ CPU/ 开销/ 增大/ 了/ 2/ %/ 左右/ ,/ 各个/ DomainU/ 在/ 启动/ 了/ 自发/ 调节/ 服务/ 后/ ,/ CPU/ 的/ 开销/ 增大/ 了/ 0.3/ %/ ./ 分别/ 利用/ Dacapo/ 和/ SPECINT/ 对比/ 观察/ 运行/ 调节/ 程序/ 对/ 客户/ 操作系统/ 性能/ 的/ 影响/ ./ 如图/ 12/ 和/ 图/ 13/ 所示/ :/ 运行/ 了/ 自发/ 调节/ 客户/ 操作系统/ 对/ Dacapo/ 和/ SPECINT/ 中/ 的/ 程序/ 均/ 有/ 不同/ 程度/ 的/ 影响/ ,/ 其中/ 对/ fop/ 影响/ 最小/ 为/ 0.007/ %/ ,/ 对/ eclipse/ 和/ luindex/ 影响/ 较大/ ,/ 分别/ 为/ 7/ %/ 和/ 9/ %/ ./ 对/ SPECCPU2000/ 中/ 程序/ 的/ 影响/ 为/ 0/ ~/ 2/ %/ 之间/ ./ 图/ 12/ 运行/ 和/ 不/ 运行/ 自发/ 调节/ 情况/ 下/ Dacapo/ 执行/ 时间/ 图/ 13/ 运行/ 和/ 不/ 运行/ 自发/ 调节/ 情况/ 下/ SPECINT/ 执行/ 时间/ 5.5/ 系统/ 可扩展性/ 为/ 体现/ 基于/ 空闲/ 内存价格/ 的/ 方法/ 的/ 可扩展性/ ,/ 我们/ 进行/ 多台/ 虚拟机/ 不同/ 类型/ 负载/ 的/ 实验/ ./ 启动/ 3/ 台/ 虚拟机/ ,/ 第/ 1/ 台/ 虚拟机/ 上/ 运行/ Dacapo/ 测试/ 标准集/ ,/ 第/ 2/ 台/ 虚拟机/ 上/ 逆序/ 运行/ Dacapo/ 测试/ 标准集/ ,/ 第/ 3/ 台/ 虚拟机/ 上/ 运行/ SPECCPU2000/ 中/ 的/ 186/ ./ crafty/ 循环/ 10/ 次/ ./ 实验/ 结果/ 如图/ 14/ 所示/ :/ Dacapo/ 标准集/ 的/ 运行/ 时间/ 分别/ 在/ 前/ 两台/ 虚拟机/ 上/ 分别/ 降低/ 了/ 17.1/ %/ 和/ 21.8/ %/ ,/ 186/ ./ crafty/ 运行/ 时间/ 增加/ 了/ ,/ 因为/ 在/ 开始/ 时间/ ,/ 内存/ 资源/ 被/ 更/ 多/ 地/ 分配/ 给/ 了/ 第/ 1/ 台/ 和/ 第/ 2/ 台/ 虚拟机/ 使用/ ,/ 但/ 从/ 整体/ 上/ 来说/ 系统/ 的/ 性能/ 提高/ 明显/ ./ 如图/ 15/ 所示/ ,/ 系统启动/ 4/ 个/ 客户/ 操作系统/ ./ VM1/ 上/ 运行/ Dacapo/ ,/ 在/ VM2/ 上以/ 逆序/ 的/ 方式/ 运行/ Dacapo/ (/ 表示/ 为/ Dacapo/ )/ ,/ 在/ VM3/ 上/ 运行/ 18crafty/ ,/ 在/ VM4/ 上/ 运行/ makelinuxkernel/ 程序/ ./ 这/ 4/ 个/ VM/ 的/ 初始/ 内存/ 是/ 128M/ ,/ 最大/ 内存/ 值均/ 为/ 256M/ ./ 与/ 基准/ 时间/ 相比/ ,/ 可以/ 看出/ 在/ Dacapo/ 和/ dacapo/ 上/ 系统/ 性能/ 都/ 提升/ 了/ 30/ %/ 以上/ ./ 在/ makelinuxkernel/ 中/ 提升/ 了/ 10/ %/ 以上/ ,/ 在/ 186/ ./ crafty/ 测试/ 集中/ 有/ 性能/ 损失/ 不大/ ./ 在/ 内存不足/ 的/ 情况/ 下/ ,/ 系统/ 的/ 性能/ 总体/ 提升/ 达到/ 17/ %/ ,/ 由此/ 看出/ 在/ 比较复杂/ 的/ 情况/ 下/ ,/ 系统/ 能够/ 显著/ 地/ 提升/ 性能/ ./ 6/ 结束语/ 本文/ 提出/ 了/ 自发/ 调节/ 与/ 全局/ 调节/ 协作/ 的/ 多/ 虚拟/ Page12/ 机/ 内存/ 管理系统/ ./ 根据/ 多/ 虚拟机/ 系统/ 中/ 所有/ 虚拟机/ 的/ 内存/ 状态/ 信息/ ,/ 我们/ 定义/ 了/ 内存/ 资源/ 充裕/ 状态/ 和/ 内存/ 资源/ 紧缺/ 状态/ ,/ 依据/ 多/ 虚拟机/ 系统/ 两种/ 不同/ 状态/ 之间/ 的/ 转换/ 执行/ 不同/ 的/ 内存/ 调节/ 策略/ ,/ 提出/ 了/ 自发/ 调节/ 和/ 全局/ 调节/ 之间/ 协作/ 的/ 算法/ ./ 自发/ 调节/ 是/ 通过/ 操作系统/ 本身/ 的/ 统计/ 信息/ 获取/ 内存/ 使用/ 信息/ ,/ 利用/ Xen/ 提供/ 的/ 气球/ 驱动/ 机制/ 调整/ 分配/ 给/ 客户/ 操作系统/ 的/ 内存/ 资源/ ./ 提出/ 了/ 基于/ 空闲/ 内存价格/ 的/ 全局/ 调节/ 策略/ ,/ 结合/ 客户/ 操作系统/ 的/ 空闲/ 内存/ 值/ 和/ 空闲/ 交换/ 空闲/ 等/ 信息/ ,/ 确定/ 每个/ 客户/ 操作系统/ 的/ 空闲/ 内存价格/ ,/ 通过/ 平衡/ 价格/ 的/ 方法/ 达到/ 内存/ 资源/ 的/ 平衡/ ./ 利用/ 多个/ 标准/ 测试程序/ 对/ 基于/ Xen/ 的/ 多/ 虚拟机/ 内存/ 管理系统/ 进行/ 了/ 测试/ ,/ 验证/ 了/ 自发/ 调节/ 与/ 全局/ 调节/ 的/ 有效性/ ./ 针对/ 计算/ 密集型/ 与/ 存储/ 密集型/ 的/ 混合/ 负载/ ,/ 标准/ 测试程序/ 性能/ 提升/ 达到/ 13/ %/ ;/ 针对/ 存储/ 密集型/ 负载/ ,/ 标准/ 测试程序/ 性能/ 提升/ 达到/ 30/ %/ 以上/ ./ 同时/ ,/ 系统/ 平均/ 性能/ 惩罚/ 在/ 5/ %/ 以下/ 并/ 具有/ 良好/ 的/ 可扩展性/ ./ 本文/ 的/ 方法/ 对/ IaaS/ 、/ PaaS/ 和/ SaaS/ 的/ 服务/ 均/ 可/ 平滑/ 扩展/ ,/ 由于/ 系统/ 本身/ 实现/ 在/ 虚拟机/ 的/ 应用层/ ,/ 针对/ PaaS/ 和/ SaaS/ 进行/ 服务/ 时/ ,/ 仅/ 需/ 掌握/ 应用/ 释放/ 和/ 申请/ 内存/ 情况/ ,/ 即可/ 采用/ 本文/ 的/ 自发/ 调节/ 与/ 全局/ 调节/ 策略/ 进行/ 调节/ ./ 致谢/ 在/ 此/ ,/ 我们/ 向/ 对/ 本文/ 的/ 工作/ 给予/ 支持/ 和/ 建议/ 的/ 审稿人/ 表示/ 由衷/ 的/ 感谢/ !/ 

