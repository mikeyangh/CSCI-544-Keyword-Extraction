Page1/ 一种/ 基于/ 逗留/ 时间/ 的/ 新型/ 内容/ 中心/ 网络/ 缓存/ 策略/ 王国/ 卿/ 1/ )/ 黄韬/ 1/ )/ 刘江/ 1/ )/ 陈建亚/ 2/ )/ 刘韵洁/ 1/ )/ ,/ 2/ )/ 1/ )/ (/ 北京邮电大学/ 网络/ 与/ 交换/ 技术/ 国家/ 重点/ 实验室/ 北京/ 100876/ )/ 2/ )/ (/ 北京邮电大学/ 北京市/ 网络体系/ 构建/ 与/ 融合/ 重点/ 实验室/ 北京/ 100876/ )/ 摘要/ 内容/ 中心/ 网络/ (/ Content/ -/ CentricNetworking/ ,/ CCN/ )/ 作为/ 一种/ 以/ 内容/ 为/ 中心/ 进行/ 路由/ 、/ 缓存/ 的/ 新型/ 未来/ 网络体系/ 架构/ 受到/ 了/ 广泛/ 的/ 关注/ ./ 在/ CCN/ 中/ ,/ 关键技术/ 问题/ 之一/ 是/ 网络/ 缓存/ 问题/ ,/ 现有/ 方案/ 主要/ 采用/ ALWAYS/ -/ LRU/ 缓存/ 策略/ ,/ 然而/ 该/ 策略/ 容易/ 出现/ 相邻/ 节点/ 重复/ 缓存/ 的/ 问题/ ,/ 使得/ 网络/ 整体/ 缓存/ 效率/ 较/ 低/ ./ 针对/ 这一/ 问题/ ,/ 文中/ 提出/ 了/ 一种/ 基于/ 逗留/ 时间/ 的/ 新型/ 缓存/ 决定/ 策略/ ,/ 设计/ 了/ 一种/ 适用/ 于/ CCN/ 的/ 合作/ 缓存/ 机制/ ./ 在/ 请求/ 泊松/ 到达/ 的/ 假设/ 下/ ,/ 通过/ 在/ 单个/ 缓存/ 器/ 对/ LRU/ (/ LeastRecentlyUsed/ )/ 替换/ 策略/ 使用/ 马尔可夫/ 链/ 建模/ ,/ 该文/ 得到/ 了/ 内容/ 在/ 各/ 缓存/ 器/ 平均/ 逗留/ 时间/ 的/ 近似计算/ 公式/ ./ 数值/ 仿真/ 结果显示/ ,/ 该/ 方案/ 相比/ 传统/ 缓存/ 策略/ ,/ 有效/ 地/ 提升/ 了/ 网络/ 缓存/ 的/ 效率/ 和/ 缓存/ 内容/ 的/ 多样性/ ,/ 进而/ 减少/ 了/ 用户/ 请求/ 服务/ 的/ 总/ 跳数/ ,/ 增加/ 了/ 内容/ 访问/ 的/ 命中率/ ./ 关键词/ 内容/ 中心/ 网络/ (/ CCN/ )/ ;/ 逗留/ 时间/ ;/ LRU/ ;/ 未/ 命中率/ 1/ 引言/ 随着/ 互联网/ 技术/ 与/ 应用/ 的/ 飞速发展/ 以及/ 互联网/ 用户/ 的/ 快速增长/ ,/ 基于/ TCP/ // IP/ 的/ 互联网/ 体系/ 架构/ 逐渐/ 暴露出/ 诸多/ 问题/ ,/ 主要/ 体现/ 在/ 可扩展性/ 差/ 、/ 安全/ 可控性/ 低/ 、/ 移动性/ 支持/ 不足/ 、/ 服务质量/ 难以/ 保证/ 等/ 方面/ [/ 1/ ]/ ./ 为此/ ,/ 国内外/ 学术界/ 纷纷/ 展开/ 了/ 未来/ Page2/ 网络体系/ 架构/ 的/ 研究/ ,/ 从以/ 主机/ 为/ 中心/ 向/ 以/ 内容/ 为/ 中心/ 进行/ 转变/ ,/ 主要/ 涉及/ 的/ 研究/ 项目/ 包括/ 北美/ 的/ CCN/ // NDN/ ①/ [/ 2/ -/ 3/ ]/ 、/ DONA/ [/ 4/ ]/ 以及/ 欧盟/ 的/ PSIRP/ // PURSUIT/ ②/ 、/ NetInf/ [/ 5/ ]/ 等等/ ./ 这些/ 架构/ 虽然/ 在/ 一些/ 细节/ 上/ 有/ 区别/ ,/ 但是/ 网/ 内/ 节点/ 缓存/ 内容/ 的/ 思想/ 已经/ 达到/ 了/ 共识/ ./ CCN/ 作为/ 最受/ 关注/ 的/ 未来/ 网络/ 架构/ 之一/ ,/ 其/ 基本/ 思想/ 从/ 被/ 提出/ 之日起/ ,/ 就/ 引发/ 了/ 学术界/ 的/ 一系列/ 的/ 研究/ 热点/ 如/ 内容/ 路由/ [/ 6/ ]/ 、/ 安全/ [/ 7/ ]/ 、/ 拥塞/ 控制/ [/ 8/ ]/ 及/ 网内/ 缓存/ [/ 9/ -/ 19/ ]/ 等/ ,/ 尤其/ 是/ 关于/ CCN/ 网内/ 缓存/ 机制/ 的/ 研究/ 受到/ 了/ 学术界/ 的/ 广泛/ 关注/ ./ 总结/ 起来/ ,/ CCN/ 网内/ 缓存/ 的/ 研究/ 主要/ 体现/ 在/ 两个/ 方面/ :/ 一方面/ 通过/ 建立/ 数学模型/ 或/ 仿真/ 实验/ 的/ 方法/ ,/ 评估/ ICN/ 系统/ 现有/ 缓存/ 策略/ 的/ 性能/ [/ 9/ -/ 13/ ]/ ,/ 其中/ ,/ 文献/ [/ 9/ -/ 11/ ]/ 重点/ 研究/ 了/ ICN/ 在/ 线型/ 和/ 树型/ 拓扑/ 下/ ,/ 缓存/ 策略/ 为/ 最近/ 最少/ 使用/ (/ LRU/ )/ 时/ 内容/ 在/ 节点/ 处/ 的/ 命中率/ 表达式/ ,/ Carofiglio/ 等/ 人/ [/ 12/ ]/ 则/ 给出/ 了/ 在/ CCNx/ 原型/ 系统/ 上/ ,/ 分别/ 采用/ LRU/ 、/ 最小/ 使用/ 频率/ (/ LFU/ )/ 和/ 生存/ 时间/ (/ TTL/ )/ 3/ 种/ 策略/ 的/ 性能/ 评估/ 方案/ 与/ 对比/ 分析/ 结果/ ./ Rossi/ 等/ 人/ [/ 13/ ]/ 用/ ccnSIM/ 仿真/ 研究/ 了/ 在/ 不同/ 网络拓扑/ 结构/ 下/ ,/ 不同/ 缓存/ 大小/ 的/ 分布/ 对/ CCN/ 网络/ 性能/ 的/ 影响/ ./ 另一方面/ ,/ 大量/ 研究/ 致力于/ 提出/ 各种/ 新型/ 缓存/ 策略/ 以/ 提升/ 网络/ 性能/ ,/ 例如/ 清华大学/ 提出/ 的/ 通过/ 跳数/ 感知/ 协议/ 得到/ 利润/ 值/ 的/ 最小/ 利润/ (/ LeastBenefit/ ,/ LB/ )/ 缓存/ 替换算法/ [/ 14/ ]/ ,/ 以及/ 通过/ 设置/ 内容/ 老化/ 时间/ 以/ 实现/ 驱动/ 流行/ 内容/ 缓存/ 到/ 边缘/ 的/ 算法/ [/ 15/ ]/ ;/ Chai/ 等/ 人/ [/ 16/ ]/ 提出/ 利用/ 计算/ 缓存/ 器/ 在/ 网络/ 中/ 最/ 短/ 路径/ 上/ 的/ 出现/ 次数/ 来/ 设计/ 内容/ 放置/ 策略/ 的/ 方法/ ;/ Psaras/ 等/ 人/ [/ 17/ ]/ 通过/ 研究/ 中间/ 节点/ 与源/ 节点/ 距离/ ,/ 中间/ 节点/ 到/ 请求/ 节点/ 距离/ 以及/ 中间/ 节点/ 到/ 请求者/ 的/ 剩余/ 路径/ 缓存/ 能力/ ,/ 设计/ 了/ 内容/ 在/ 中间/ 节点/ 缓存/ 概率/ 的/ 放置/ 策略/ ;/ 文献/ [/ 18/ ]/ 则/ 提出/ 了/ 将/ 大/ 文件/ 分块/ ,/ 利用/ Hash/ 函数/ 将/ 文件/ 块/ 放置/ 到/ 不同/ 缓存/ 节点/ 的/ 方案/ ;/ Cho/ 等/ 人/ [/ 19/ ]/ 提出/ 了/ 随/ 请求/ 次数/ 指数/ 增加/ 逐/ 跳往/ 边缘/ 缓存/ 的/ 内容/ 块数/ ,/ 实行/ 改进/ 的/ LCD/ (/ LeaveCopyDown/ )/ 策略/ 等/ ./ 缓存/ 策略/ 的/ 研究/ 已有/ 多年/ 的/ 历史/ ,/ 完整/ 的/ 缓存/ 策略/ 由/ 两/ 部分/ 组成/ :/ 缓存/ 决定/ 策略/ 和/ 缓存/ 替换/ 策略/ ./ 在/ CCN/ 体系/ 架构/ 提出/ 之前/ ,/ 大多数/ 研究/ 都/ 是/ 针对/ 缓存/ 替换/ 策略/ 展开/ 的/ [/ 20/ ]/ ,/ 而/ 缓存/ 决定/ 策略/ 方面/ 的/ 研究/ 却/ 很少/ ,/ 主要/ 有/ 随机/ 、/ LCD/ (/ LeaveCopyDown/ )/ 和/ 全存/ (/ ALWAYS/ )/ 3/ 种/ ./ 随机/ 策略/ 是/ 以/ 一定/ 的/ 概率/ 来/ 决定/ 是否/ 在/ 该/ 节点/ 缓存/ 经过/ 的/ 内容/ ,/ LCD/ 策略/ 是/ 让/ 返回/ 的/ 内容/ 仅/ 在/ 第一/ 跳/ 节点/ 缓存/ ,/ 目前/ ,/ CCN/ 采用/ 的/ ALWAYS/ 策略/ 对/ 所有/ 经过/ 该/ 缓存/ 器/ 的/ 内容/ (/ 数据/ )/ 都/ 缓存/ ./ 这/ 3/ 种/ 策略/ 的/ 一个/ 共同/ 的/ 缺陷/ 就/ 在于/ 各/ 节点/ 在/ 进行/ 决策/ 时均/ 未/ 综合/ 考虑/ 内容/ 的/ 流行/ 度/ 和/ 缓存/ 容量/ 等/ 因素/ ./ 在/ 上述/ 有关/ CCN/ 缓存/ 策略/ 的/ 研究/ 中/ [/ 14/ -/ 19/ ]/ ,/ 文献/ [/ 15/ -/ 19/ ]/ 都/ 是/ 研究/ 缓存/ 决定/ 策略/ 的/ ,/ 由此可见/ ,/ CCN/ 中/ 缓存/ 决定/ 策略/ 的/ 研究/ 已经/ 引起/ 了/ 学术界/ 的/ 重视/ ./ 但是/ 在/ 策略/ 的/ 设计/ 方面/ ,/ 这些/ 成果/ 还有/ 一定/ 的/ 改进/ 空间/ ./ 文献/ [/ 15/ ]/ 提出/ 了/ 一种/ 在/ 已/ 存满/ 的/ 节点/ 中若/ 无可/ 替换/ 的/ 内容/ 则/ 不/ 缓存/ 新/ 内容/ 的/ 策略/ ,/ 主要/ 考虑/ 了/ 节点/ 距/ 用户/ 的/ 跳/ 数及/ 内容/ 流行/ 度/ 的/ 因素/ 来/ 设计/ 内容/ 的/ 存活/ 时间/ ,/ 这是/ 一种/ 以/ 替换/ 为/ 主导/ 的/ 决定/ 策略/ ,/ 没有/ 直接/ 对/ 决定/ 策略/ 研究/ ./ 文献/ [/ 16/ ]/ 所提/ 的/ 策略/ 需要/ 计算/ 全网/ 任意/ 两个/ 节点/ 对/ 之间/ 的/ 路径/ ,/ 具有/ 可扩展性/ 差/ 的/ 缺点/ ./ 为此/ ,/ 文献/ [/ 17/ ]/ 提出/ 了/ 在线/ 计算/ 当前/ 路径/ 上/ 各/ 节点/ 的/ 缓存/ 概率/ 的/ 方法/ ,/ 但是/ 该/ 方法/ 仅/ 考虑/ 了/ 节点/ 缓存/ 容量/ 及/ 节点/ 距/ 用户/ 的/ 跳数/ ,/ 没有/ 考虑/ 内容/ 的/ 特点/ ./ 文献/ [/ 18/ ]/ 提出/ 分布式/ 算法/ 保证/ 缓存/ 同一/ 内容/ 不同/ 数据/ 块/ 的/ 节点/ 距离/ 不/ 超过/ 下界/ 的/ 一定/ 的/ 倍数/ ,/ 主要/ 解决/ 了/ 大/ 内容/ 的/ 缓存/ 决策问题/ ./ 文献/ [/ 19/ ]/ 仅/ 利用/ 了/ 内容/ 的/ 流行/ 度/ ,/ 提高/ 流行/ 内容/ 往/ 边缘/ 缓存/ 的/ 收敛/ 速度/ ./ 本文/ 主要/ 考虑/ 到/ 要/ 尽量减少/ 跨/ 自治/ 系统/ (/ Autono/ -/ mousSystems/ ,/ AS/ )/ 之间/ 的/ 流量/ ,/ 各/ AS/ 应/ 尽可能少/ 地/ 从/ 其他/ AS/ 获取/ 内容/ ,/ 因此/ 在/ AS/ 内/ 实现/ 增加/ 内容/ 多样性/ 的/ 缓存/ 决定/ 策略/ 可以/ 减少/ AS/ 间/ 瓶颈/ 带宽/ 的/ 使用/ ./ 研究/ 动机/ 主要/ 是/ 为/ 减少/ 节点/ 对/ 内容/ 的/ 不必要/ 的/ 复制/ 次数/ ,/ 减少/ 域间/ 带宽/ 的/ 使用/ ,/ 同时/ 提高/ 命中率/ ./ 本文/ 通过/ 提取/ 出/ 刻画/ 节点/ 对/ 内容/ 竞争力/ 的/ 逗留/ 时间/ (/ SojournTime/ ,/ ST/ )/ ,/ 设计/ 了/ 一种/ 基于/ 逗留/ 时间/ 的/ 缓存/ 决定/ 新策略/ ,/ 逗留/ 时间/ 是/ 指/ 内容/ 从/ 缓存/ 在/ 节点/ 到/ 本次/ 被/ 替换/ 出去/ 的/ 这/ 段时间/ ./ 本文/ 先/ 给出/ 了/ ST/ 决定/ 策略/ 的/ 设计/ 方法/ ,/ 将/ 逗留/ 时间/ 加入/ 到/ 兴趣/ 包/ 或/ 数据包/ 中/ ,/ 让/ 节点/ 通过/ 比较/ 内容/ 在/ 相邻/ 节点/ 处/ 的/ 平均/ 逗留/ 时间/ 来/ 决定/ 是否/ 缓存/ 该/ 内容/ ,/ 再/ 结合/ LRU/ 替换/ 策略/ ,/ 得到/ 了/ 完整/ 的/ ST/ -/ LRU/ 缓存/ 策略/ ./ 随后/ 在/ 特殊/ 的/ 场景/ 下/ ,/ 抽象/ 并/ 建立/ 出/ 马尔可夫/ 链/ 模型/ ,/ 并/ 利用/ 排队/ 论/ 的/ 方法/ 推导/ 出/ 平均/ 逗留/ 时间/ 的/ 近似/ 公式/ ,/ 该/ 公式/ 很/ 好/ 地/ 反应/ 了/ 在/ 有限/ 的/ 存储容量/ 下/ 节点/ 对/ 内容/ 的/ 竞争力/ ./ 最后/ ,/ 本文/ 仿真/ 验证/ 了/ 新策略/ 在/ 复制/ 次数/ ,/ 总跳数/ 及/ 命中率/ 上/ 的/ 优势/ ./ ①/ ②/ Page32/ 基于/ 逗留/ 时间/ 的/ 缓存/ 策略/ 2.1/ CCN/ 系统/ 模型/ 描述/ 在/ CCN/ 中/ ,/ 内容/ 被/ 分成/ 数个/ 大小/ 相同/ 的/ 数据/ 块/ ,/ 数据/ 块/ 被/ 唯一/ 命名/ ,/ 被/ 永久/ 地/ 存储/ 在/ 一个/ 或/ 多个/ 服务器/ 中/ ./ CCN/ 的/ 数据传输/ 主要/ 由/ 数据包/ (/ DataPacket/ )/ 和/ 兴趣/ 包/ (/ InterestPacket/ )/ 完成/ ,/ 用户/ 利用/ 接收者/ 驱动/ 的/ 传输/ 协议/ 发送/ 兴趣/ 包/ ,/ 基于/ 名字/ 的/ 路由/ 协议/ 确保/ 了/ 请求/ 被/ 路由/ 到/ 合适/ 的/ 缓存/ 器/ ,/ 每个/ 中间/ 节点/ 都/ 会/ 跟踪/ 该/ 节点/ 未/ 命中/ 的/ 请求/ ,/ 以便/ 将/ 被/ 请求/ 的/ 数据/ 原/ 路/ 返回/ 到/ 接收者/ 以及/ 让/ 途经/ 的/ 节点/ 缓存数据/ ,/ 此外/ ,/ 中间/ 节点/ 还/ 将/ 请求/ 聚合/ ,/ 即当/ 第一个/ 请求/ 还/ 未/ 被/ 满足/ 时/ ,/ 避免/ 转发/ 对/ 该/ 同一个/ 数据/ 的/ 其他/ 请求/ ./ 数据/ 可能/ 来自/ 服务器/ 或/ 来自/ 任何/ 被/ 命中/ 的/ 缓存/ 器/ ,/ 即/ 路径/ 上/ 暂时/ 保存/ 内容/ 副本/ 的/ 节点/ ,/ 缓存/ 器/ 采用/ LRU/ 替换/ 策略/ ./ LRU/ 机制/ 的/ 核心/ 工作/ 机理/ 是/ 当/ 需要/ 缓存/ 内容/ k/ 时/ ,/ 若/ 内容/ k/ 已经/ 缓存/ 在/ CS/ 中/ ,/ 则/ 将/ 内容/ k/ 移到/ 最/ 上面/ ,/ 原来/ 在/ 内容/ k/ 上面/ 的/ 内容/ 下移/ 一位/ ;/ 若/ CS/ 中/ 没有/ 内容/ k/ ,/ 则/ 将/ 内容/ k/ 缓存/ 在/ 最/ 上面/ ,/ 原来/ 在/ CS/ 中/ 的/ 每个/ 内容/ 下移/ 一位/ ,/ 原来/ 在/ CS/ 中/ 最/ 下面/ 的/ 内容/ 被/ 替换/ 出去/ ./ 由于/ 内容/ 的/ 总/ 大小/ 远大于/ 单个/ 节点/ 的/ 缓存/ 容量/ ,/ 因此/ 被/ 缓存/ 的/ 内容/ 经常/ 会/ 被/ 新/ 到/ 的/ 内容/ 替换/ 出去/ ./ 因此/ ,/ 内容/ 的/ 平均/ 逗留/ 时间/ 是/ 一个/ 有限/ 的/ 实数/ ./ 从/ ST/ 和/ LRU/ 的/ 定义/ 不难看出/ ,/ ST/ 值应/ 服从/ 如下/ 规则/ :/ (/ 1/ )/ 缓存/ 器/ 容量/ 越大/ ,/ 在/ 该/ 缓存/ 器/ 的/ 内容/ 的/ ST/ 值/ 也/ 越/ 大/ ;/ (/ 2/ )/ 内容/ 流行/ 度越/ 高/ ,/ ST/ 值/ 也/ 会/ 越/ 大/ ./ 显然/ ,/ 通过/ 比较/ 内容/ 在/ 相邻/ 缓存/ 器/ 的/ 逗留/ 时间/ 大小/ ,/ 把/ 内容/ 缓存/ 在/ 逗留/ 时间/ 较长/ (/ 即/ ST/ 值/ 较大/ )/ 的/ 节点/ 能够/ 有效/ 减少/ 内容/ 的/ 复制/ 次数/ ,/ 增加/ AS/ 域/ 内/ 的/ 内容/ 多样性/ ./ 下面/ 用/ 一个/ 简单/ 的/ 场景/ 来/ 比较/ ST/ -/ LRU/ 机制/ 较/ ALWAYS/ -/ LRU/ 机制/ 的/ 优势/ ,/ 如图/ 1/ 所示/ ./ 用/ STk/ (/ i/ )/ 表示/ 内容/ k/ 在/ 节点/ i/ 处/ 的/ 平均/ 逗留/ 时间/ ,/ 假设/ 一个/ 由/ 两个/ 路由器/ a/ 和/ R2/ 在/ R1/ 中/ 的/ 平均/ 逗留/ 时间/ 大于/ 内容/ R2/ 可以/ 与/ 其他/ AS/ 域/ 通信/ ./ 通过/ 对/ 内容/ a/ 及其/ 他/ 内容/ 在/ R1/ 和/ R2/ 的/ 到达/ 率/ 等/ 因素/ 的/ 分析/ ,/ 已知/ 内容/ a/ 在/ R1/ 中/ 的/ 平均/ 逗留/ 时间/ 大于/ 内容/ a/ 在/ R2/ 中/ 的/ 平均/ 逗留/ 时间/ ,/ 即/ STa/ (/ 1/ )/ >/ STa/ (/ 2/ )/ ./ 假设/ R1/ 处有/ 一个/ 内容/ b/ 的/ 请求/ ,/ 内容/ b/ 返回/ 之后/ ,/ b/ 与/ R2/ 中/ 都/ 缓存/ 了/ 内容/ b/ ,/ 然后/ R1/ 处/ 又/ 有/ 一个/ 内容/ a/ 的/ 请求/ ,/ 返回/ 的/ 内容/ a/ 在/ ALWAYS/ 策略/ 下/ 在/ R1/ 和/ R2/ 中/ 都/ 缓存/ ;/ 而/ 在/ ST/ 策略/ 下/ ,/ 由于/ STa/ (/ 1/ )/ >/ STa/ (/ 2/ )/ ,/ 内容/ a/ 仅/ 缓存/ 在/ R1/ 中/ ./ 显然/ ,/ ST/ 机制/ 有效/ 地/ 避免/ 了/ 相邻/ 节点/ 缓存/ 相同/ 内容/ 的/ 问题/ ,/ 有效/ 地/ 增加/ 了/ AS/ 域/ 内/ 内容/ 存储/ 的/ 多样性/ ./ 2.2/ ST/ 缓存/ 决定/ 策略/ 在/ CCN/ 中/ 的/ 设计/ CCN/ 路由器/ 有/ 3/ 个/ 数据结构/ 表/ :/ 内容/ 存储/ 表/ (/ ContentStore/ ,/ CS/ )/ 、/ 跟踪/ 兴趣/ 包表/ (/ PendingInterestTable/ ,/ PIT/ )/ 和/ 转发/ 信息/ 表/ (/ ForwardingInformationBase/ ,/ FIB/ )/ ./ 其中/ ,/ CS/ 表/ 用来/ 缓存/ 所/ 经过/ 的/ 内容/ ,/ PIT/ 表/ 用来/ 记录/ 那些/ 刚/ 被/ 请求/ 但/ 还/ 没有/ 得到/ 回应/ 的/ 内容/ 条目/ 及其/ 转入/ 接口/ ,/ FIB/ 表则/ 记录/ 内容/ 名/ 对应/ 的/ 下/ 一/ 跳/ 接口/ ./ 未/ 命中/ 的/ 兴趣/ 包/ (/ CS/ 中/ 没有/ 缓存/ 被/ 请求/ 的/ 内容/ )/ 和/ 它/ 的/ 接口/ 被/ 记录/ 在/ PIT/ 表中/ ,/ 并且/ 通过/ 查找/ FIB/ 表将/ 该/ 兴趣/ 包转发/ 到/ 下/ 一/ 跳/ ,/ 返回/ 的/ 数据包/ 通过/ 查/ PIT/ 按/ 兴趣/ 包原路/ 返回/ 到/ 请求者/ ./ ALWAYS/ 缓存/ 决定/ 策略/ 是/ 将/ 所有/ 经过/ 路由器/ 的/ PIT/ 中有/ 记录/ 的/ 内容/ 缓存/ 到/ CS/ 中/ ,/ 而/ ST/ 机制/ 设计/ 的/ 核心/ 目标/ 是/ 让/ 内容/ 缓存/ 到/ 合适/ 的/ 路由器/ 中/ ./ 本文/ 将/ STk/ 加入/ 到/ 内容/ k/ 的/ 兴趣/ 包/ 和/ 数据包/ 中/ ,/ 并/ 将/ 该值/ 通告/ 给/ 邻居/ 节点/ ./ 节点/ i/ 接收/ 到/ 从/ 节点/ j/ 处/ 发来/ 的/ 内容/ k/ 的/ 兴趣/ 包/ ,/ 节点/ i/ 先/ 检查/ 其/ CS/ 中/ 是否/ 存有/ 内容/ k/ ,/ 若/ 有/ 则/ 直接/ 返回/ 内容/ k/ ;/ 若/ 无/ ,/ 则/ 查询/ PIT/ 表/ :/ 若/ PIT/ 表中/ 有/ 内容/ k/ 这个/ 条目/ ,/ 则/ 在/ 该/ 条目/ 中/ 加入/ 接口/ j/ 及/ STk/ (/ j/ )/ ,/ 并且/ 丢弃/ 该/ 兴趣/ 包/ ;/ 若/ PIT/ 表中/ 没有/ 内容/ k/ 的/ 条目/ ,/ 则/ 创建/ 一个/ 新/ 的/ 条目/ ,/ 记录/ 该/ 内容/ 前缀/ 和/ 接口/ j/ 及/ STk/ (/ j/ )/ ,/ 随后/ 将/ STk/ (/ i/ )/ 覆盖/ 内容/ k/ 的/ 请求/ 包中/ 的/ STk/ (/ j/ )/ ,/ 并/ 按照/ FIB/ 表/ 的/ 接口/ 记录/ 转发/ 到/ 下/ 一/ 跳/ ./ 于是/ ,/ 改进/ 后/ 的/ PIT/ 表/ 设计/ 结构/ 如图/ 2/ 所示/ ./ 图/ 2/ 基于/ ST/ 机制/ 下/ 的/ CCN/ 网络/ PIT/ 表/ 设计/ 结构/ Page4/ 当/ 内容/ k/ 从/ 节点/ j/ 返回/ 到/ 节点/ i/ 时/ ,/ 首先/ 查询/ PIT/ 表中/ 是否/ 有/ 内容/ k/ 的/ 条目/ ,/ 若/ 无/ ,/ 则/ 直接/ 丢弃/ 该/ 数据包/ ,/ 若有/ ,/ 则/ 将/ 该/ 数据包/ 中/ 携带/ 的/ STk/ (/ j/ )/ 与/ PIT/ 表中/ 内容/ k/ 条目/ 中/ 记录/ 的/ STk/ 比较/ ,/ 当且/ 仅/ 当/ STk/ (/ i/ )/ 大于/ 其他/ 几个/ STk/ 值时/ ,/ 才/ 将/ 内容/ k/ 缓存/ 到/ 节点/ i/ 的/ CS/ 中/ ./ 然后/ 将/ STk/ (/ i/ )/ 加入/ 到/ 数据包/ 并/ 覆盖/ 数据包/ 中/ 的/ STk/ (/ j/ )/ ,/ 并/ 将/ 该/ 数据/ 包转发/ 到/ PIT/ 表/ 记录/ 的/ 所有/ 接口/ ,/ 具体/ 算法/ 流程/ 如图/ 3/ 所示/ ./ 图/ 3/ 从/ 节点/ j/ 返回/ 的/ 内容/ k/ 在/ 节点/ i/ 的/ 算法/ 流程图/ 在/ 图/ 3/ 中/ ,/ y/ (/ i/ )/ 用于/ 记录/ 缓存/ 器/ i/ 中/ 按照/ 逗留/ 时间/ 挑选出/ 的/ 缓存/ 内容/ 个数/ ,/ x/ (/ i/ )/ 表示/ 缓存/ 器/ i/ 的/ 缓存/ 容量/ ,/ 有/ y/ (/ i/ )/ / x/ (/ i/ )/ ./ 在/ 缓存/ 器/ i/ 还/ 未/ 接收/ 到/ 任何/ 内容/ 之前/ ,/ 缓存/ 器/ i/ 中/ 没有/ 缓存/ 内容/ ,/ 故/ y/ (/ i/ )/ =/ 0/ ,/ 开始运行/ 之后/ ,/ 节点/ i/ 接收/ 到/ 内容/ ,/ 先/ 查找/ PIT/ 表/ ,/ 如果/ PIT/ 表中/ 无该/ 内容/ 条目/ 记录/ ,/ 说明/ 该/ 内容/ 已/ 被/ 返回/ 或者/ 出错/ ,/ 因此/ 丢弃/ 该/ 内容/ ;/ 如果/ PIT/ 表中/ 有/ 该/ 内容/ 条目/ ,/ 则/ 把/ PIT/ 中/ 记录/ 的/ 该/ 内容/ 条目/ 对应/ 的/ 逗留/ 时间/ 与/ 数据包/ 携带/ 的/ 上游/ 节点/ 的/ 逗留/ 时间/ 比较/ ,/ 若/ 缓存/ 器/ i/ 处/ 的/ 逗留/ 时间/ 大于/ 其他/ 所有/ 逗留/ 时间/ ,/ 则/ 存入/ 节点/ i/ ,/ 同时/ 检验/ 按/ 逗留/ 时间/ 大小/ 缓存/ 的/ 内容/ 个数/ y/ (/ i/ )/ 是否/ 已/ 将/ 缓存/ 器存/ 满/ ,/ 即/ 判断/ 是否/ y/ (/ i/ )/ </ x/ (/ i/ )/ ,/ 目的/ 是/ 要/ 更新/ y/ (/ i/ )/ ;/ 若/ 缓存/ 器/ i/ 处/ 的/ 逗留/ 时间/ 不/ 大于/ 其他/ 所有/ 逗留/ 时间/ ,/ 则/ 判断/ CS/ 是否/ 已经/ 存满/ ,/ 若/ 已经/ 存满且/ y/ (/ i/ )/ =/ x/ (/ i/ )/ ,/ 则/ 不/ 缓存/ 该/ 内容/ ;/ 若/ CS/ 未存/ 满/ ,/ 则/ 缓存/ 该/ 内容/ ,/ 以/ 避免浪费/ 缓存/ 器/ 的/ 空间/ ./ 从/ 该/ 算法/ 可以/ 看出/ ,/ ST/ -/ LRU/ 机制/ 会/ 让/ 内容/ 缓存/ 在/ 平均/ 逗留/ 时间/ 较大/ 的/ 节点/ 中/ ,/ 相邻/ 节点/ 不会/ 缓存/ 相同/ 的/ 内容/ ,/ 从而/ 达到/ 增加/ 多样性/ 、/ 减少/ 复制/ 次数/ 和/ 提高/ 命中率/ 的/ 目的/ ./ 在/ 两种/ 极端/ 情形/ 下/ ,/ 节点/ i/ 将/ 决定/ 缓存/ 所有/ 经过/ 的/ 内容/ ,/ ST/ 机制/ 将/ 与/ ALWAYS/ 机制/ 有/ 一样/ 的/ 效果/ ,/ 这/ 两种/ 情形/ 是/ :/ (/ 1/ )/ 仅/ 有/ 小于/ x/ (/ i/ )/ 种/ 内容/ 的/ STk/ (/ i/ )/ 小于/ 邻居/ 处/ 的/ STk/ (/ 即/ y/ (/ i/ )/ </ x/ (/ i/ )/ )/ ;/ (/ 2/ )/ STk/ (/ i/ )/ 恒/ 大于/ 邻居/ 处/ 的/ STk/ (/ / k/ )/ ./ 这/ 是因为/ 当/ y/ (/ i/ )/ </ x/ (/ i/ )/ 时/ ,/ 新到/ 的/ 内容/ 总是/ 会/ 被/ 缓存/ ;/ 当/ 节点/ i/ 处/ 所有/ 内容/ 的/ 逗留/ 时间/ 都/ 大于/ 其/ 相邻/ 节点/ 处/ 的/ 相应/ 内容/ 的/ 逗留/ 时间/ 时/ ,/ 新到/ 的/ 内容/ 也/ 将/ 全/ 被/ 缓存/ ./ 2.3/ ST/ -/ LRU/ 策略/ 举例/ 近似计算/ 公式/ 如下/ :/ STk/ (/ i/ )/ =/ x/ (/ i/ )/ 其中/ ,/ μ/ k/ (/ i/ )/ =/ λ/ (/ i/ )/ -/ λ/ k/ (/ i/ )/ ./ 其/ 详细/ 推导/ 将/ 在/ 第/ 3/ 节中/ 给出/ ./ 从式/ (/ 1/ )/ 可以/ 看出/ ,/ ST/ 值/ 与/ 流行/ 度/ 和/ 缓存/ 容量/ 的/ 变化/ 关系/ 符合/ 2.1/ 节/ 所述/ 规则/ ./ 下面/ 用/ 一个/ 简单/ 的/ 场景/ 来/ 描述/ ST/ -/ LRU/ 机制/ 的/ 整个/ 流程/ ,/ 并/ 与/ ALWAYS/ -/ LRU/ 策略/ 比较/ ./ 假设/ 由/ 两个/ 路由器/ R1/ 和/ R2/ 构成/ 的/ 一个/ AS/ 域/ ,/ 缓存/ 容量/ 分别/ 为/ 2/ 和/ 1/ 个/ 内容/ ,/ 即/ x/ (/ 1/ )/ =/ 2/ ,/ x/ (/ 2/ )/ =/ 1/ ./ 每个/ 节点/ 接收/ 到/ 内容/ a/ ,/ b/ 和/ c/ 的/ 请求/ 率如图/ 4/ 给出/ ./ 这样/ ,/ 通过/ 式/ (/ 1/ )/ 可以/ 算/ 出/ 内容/ 的/ ST/ 值如表/ 1/ 所示/ ./ 为了/ 便于/ 分析/ ST/ -/ LRU/ 策略/ ,/ 先/ 给出/ ST/ 值/ 的/ 内容/ 本例/ 仅/ 考虑/ 与/ a/ 的/ 请求/ 到达/ R1/ ,/ 由于/ R1/ 中/ 没有/ 内容/ a/ 的/ 请求/ 到达/ R1/ ,/ 由于/ R1/ 中/ 没有/ 内容/ a/ ,/ 请求/ 被/ 转发/ 到/ R2/ ,/ R2/ 中/ 也/ 没有/ 内容/ a/ ,/ 从而/ ,/ 请求/ 被/ 转/ Page5/ 图/ 4ALWAYS/ -/ LRU/ 与/ ST/ -/ LRU/ 缓存/ 机制/ 对比/ 发到/ 其他/ AS/ 域/ ,/ 返回/ 的/ 内容/ a/ 先/ 到达/ R2/ ,/ 比较/ STa/ (/ 2/ )/ 与/ STa/ (/ 1/ )/ ,/ 有/ STa/ (/ 2/ )/ </ STa/ (/ 1/ )/ ,/ 然后/ 查看/ CS/ 是否/ 已满/ ,/ 若否/ ,/ 将/ 内容/ a/ 缓存/ 到/ CS/ 中/ ,/ 然后/ 转发/ 至/ R1/ ,/ R1/ 采用/ 同样/ 的/ 算法/ 进行/ 实现/ (/ 如图/ 3/ 所示/ )/ ,/ 即/ 首先/ 将/ 内容/ a/ 缓存/ 到/ CS/ 中/ ,/ 由于/ STa/ (/ 1/ )/ >/ STa/ (/ 2/ )/ 且/ y/ (/ 1/ )/ </ x/ (/ 1/ )/ ,/ y/ (/ 1/ )/ 自增/ 1/ ./ 接下来/ 内容/ 的/ 请求/ 过程/ 与/ 上述/ 过程/ 类似/ ,/ 不再/ 赘述/ ./ 初始化/ 结束/ 后/ (/ 虚线/ 以下/ )/ ,/ R1/ 又/ 收到/ 内容/ a/ 的/ 请求/ ,/ ST/ -/ LRU/ 机制/ 下/ R1/ 就/ 可以/ 直接/ 返回/ 内容/ a/ (/ 即/ 命中/ )/ ,/ 而/ 在/ ALWAYS/ -/ LRU/ 机制/ 下/ ,/ 该/ 请求/ 在/ 本地/ 未/ 命中/ ,/ 被/ 转发/ 到/ 其他/ AS/ 域/ ,/ 至少/ 需要/ 两跳/ 才/ 可以/ 命中/ ./ 而且/ ,/ 在/ 虚线/ 以下/ ,/ ST/ -/ LRU/ 策略/ 几乎/ 稳定/ ,/ 即/ R1/ 缓存/ 内容/ a/ 和/ b/ ,/ R2/ 缓存/ 内容/ c/ ,/ 内容/ a/ ,/ b/ 和/ c/ 都/ 不会/ 再/ 被/ 复制/ ,/ 而/ ALWAYS/ -/ LRU/ 机制/ 会/ 一直/ 复制/ ./ 显然/ ,/ ST/ -/ LRU/ 的/ 新策略/ 有效/ 地/ 提高/ 了/ 命中率/ ,/ 减少/ 了/ 跳/ 数及/ 不必要/ 的/ 内容/ 复制/ 次数/ ./ 3ST/ -/ LRU/ 方案/ 的/ 性能/ 分析/ 3.1/ CCN/ 数学模型/ 及/ 假设/ 本文/ 首先/ 建立/ 一个/ 具有/ N/ 个/ 节点/ (/ CCN/ 路由器/ )/ 的/ CCN/ 网络/ 模型/ ,/ 这/ N/ 个/ 节点/ 在/ 一个/ AS/ 域/ 中/ ,/ 网络/ 中共/ 有/ M/ 种/ 不同/ 的/ 内容/ ,/ 这些/ 内容/ 大小/ 一样/ [/ 10/ -/ 12/ ]/ ,/ 永久/ 地/ 存储/ 在/ 该/ AS/ 域外/ 的/ 一个/ 或/ 多个/ 服务器/ 中/ ,/ 即/ 所有/ 内容/ 一定/ 可以/ 从/ 该/ AS/ 域外/ 获得/ ./ 假设/ 节点/ i/ 可以/ 缓存/ x/ (/ i/ )/ 个/ 内容/ ,/ x/ (/ i/ )/ 远/ 小于/ M/ ./ 节点/ 接收/ 到/ 的/ 请求/ 过程/ 是/ 由/ 本/ 节点/ 的/ 用户/ 请求/ 序列/ 和/ 邻/ 节点/ 的/ 未/ 命中/ (/ miss/ )/ 序列/ 构成/ 的/ ./ 假设/ 节点/ i/ 从/ 用户/ 处/ 接收/ 到/ 的/ 请求/ 服从/ 参数/ 为/ λ/ u/ (/ i/ )/ 的/ 泊松/ 分布/ ,/ 根据/ 随机/ 服务/ 系统/ 原理/ ,/ 服从/ 泊松/ 分布/ 的/ 输入/ 流/ 的/ 输出/ 也/ 服从/ 泊松/ 分布/ ,/ 因此/ ,/ 邻/ 节点/ 未/ 命中/ 的/ 请求/ 序列/ 也/ 服从/ 参数/ 为/ η/ (/ i/ )/ 的/ 泊松/ 分布/ ./ 因此/ ,/ 节点/ i/ 的/ 输入/ 过程/ 服从/ 参数/ 为/ λ/ (/ i/ )/ =/ λ/ u/ (/ i/ )/ +/ η/ (/ i/ )/ 的/ 泊松/ 分布/ ./ 本文/ 涉及/ 到/ 的/ 主要/ 符号/ 如表/ 2/ 所示/ ./ 符号/ N/ 节点/ (/ CCN/ 路由器/ )/ 个数/ M/ 内容/ 种类/ 数/ x/ (/ i/ )/ 节点/ i/ 缓存/ 容量/ (/ 个/ 内容/ )/ λ/ u/ (/ i/ )/ 节点/ i/ 收到/ 用户/ 的/ 请求/ 率/ (/ 个/ // s/ )/ η/ (/ i/ )/ 节点/ i/ 收到/ 下游/ 节点/ miss/ 的/ 请求/ 率/ (/ 个/ // s/ )/ λ/ (/ i/ )/ 节点/ i/ 收到/ 的/ 总/ 请求/ 率/ λ/ (/ i/ )/ 节点/ i/ 决定/ 存/ 的/ 内容/ 的/ 总/ 请求/ 率/ λ/ k/ (/ i/ )/ 节点/ i/ 收到/ 内容/ k/ 的/ 请求/ 率/ STk/ (/ i/ )/ 内容/ k/ 在/ 节点/ i/ 的/ 平均/ 逗留/ 时间/ 3.2/ 平均/ 逗留/ 时间/ 的/ 计算公式/ 本文/ 在/ 分析/ 过程/ 中/ 采用/ 了/ 经典/ 的/ LRU/ 替换/ 策略/ ,/ 在/ 进行/ 平均/ 逗留/ 时间/ 的/ 设计/ 之前/ ,/ 我们/ 首先/ 建立/ 一个/ LRU/ 策略/ 的/ 数学模型/ ./ 首先/ ,/ 因为/ 内容/ k/ 所在位置/ 都/ 只/ 与/ 前/ 一个/ 位置/ 有关/ ,/ 与/ 再/ 之前/ 所处/ 的/ 位置/ 独立/ ,/ 又/ 因为/ 请求/ 是/ 泊松/ 到达/ 的/ ,/ 内容/ k/ 两个/ 位置/ 间/ 的/ 转移/ 仅/ 发生/ 在/ 请求/ 的/ 到达/ 时刻/ ,/ 泊松/ 到达/ 仅/ 与/ 时间/ 间距/ 相关/ ,/ 因此/ ,/ 我们/ 将/ LRU/ 的/ 工作/ 过程/ 抽象/ 成为/ 一条/ 齐次/ 马氏链/ [/ 9/ ]/ ,/ 链/ 的/ 状态/ 就是/ 内容/ k/ 在/ CS/ 中/ 的/ 位置/ :/ 状态/ 0/ 表示/ 内容/ k/ 不/ 在/ CS/ 中/ ,/ 状态/ 1/ 表示/ 内容/ k/ 在/ CS/ 的/ 最/ 上面/ ,/ 状态/ l/ 表示/ 内容/ k/ 在/ CS/ 的/ 第/ l/ 位置/ ./ 从/ 状态/ l/ (/ l/ =/ 1/ ,/ 2/ ,/ …/ ,/ x/ )/ 转/ 到/ 状态/ (/ l/ +/ 1/ )/ 的/ 转移率/ 为/ μ/ k/ ,/ 其中/ (/ x/ +/ 1/ )/ 表示/ 状态/ 0/ ,/ 每个/ 状态/ l/ 都/ 可以/ 转移/ 到/ 状态/ 1/ (/ l/ ≠/ 1/ )/ ,/ 转移率/ 为/ λ/ k/ (/ 内容/ k/ 的/ 到达/ 率/ )/ (/ 如图/ 5/ 所示/ )/ ./ 于是/ ,/ 这条/ 马氏链/ 的/ 转移率/ 矩阵/ 可/ 表示/ 为/ 犙/ =/ 这里/ ,/ β/ =/ λ/ k/ +/ μ/ k/ ./ 对于/ 满足/ λ/ k/ // μ/ k/ </ 1/ 的/ 内容/ k/ ,/ 它/ 对应/ 的/ 上述/ 马/ Page6/ 氏链/ 是非/ 周期/ 、/ 不可/ 约/ 、/ 正常/ 返/ 的/ ,/ 因此/ ,/ 一定/ 存在/ 稳态/ 概率/ ,/ 可/ 通过/ 解/ 下面/ 的/ 稳态/ 方程/ 来/ 求解/ :/ 这里/ ,/ π/ k/ 是/ 一个/ (/ x/ +/ 1/ )/ 维/ 的/ 列/ 向量/ ,/ 且/ 犲/ =/ (/ 1/ ,/ 1/ ,/ …/ ,/ 1/ )/ T/ 是/ 一个/ (/ x/ +/ 1/ )/ 维/ 的/ 列/ 向量/ ./ 则/ 有/ 其中/ ,/ π/ kl/ 表示/ 稳态/ 时/ 内容/ k/ 处在/ 状态/ l/ 的/ 概率/ ./ 由此/ ,/ 可以/ 推导/ 出/ 内容/ k/ 在/ 缓存/ 器中/ 平均/ 逗留/ 时间/ 的/ 公式/ ./ 命题/ 1/ ./ 缓存/ 器/ 收到/ 的/ 内容/ 请求/ 服从/ 参数/ 为/ λ/ 的/ 泊松/ 到达/ ,/ 内容/ k/ 的/ 请求/ 服从/ 参数/ 为/ λ/ k/ 的/ 泊松/ 过程/ (/ k/ =/ 1/ ,/ 2/ ,/ …/ ,/ M/ )/ ,/ 内容/ 具有/ 相同/ 的/ 大小/ ,/ 缓存/ 容量/ 为/ x/ 个/ 内容/ ,/ 则/ 内容/ k/ 在/ 缓存/ 器中/ 的/ 平均/ 逗留/ 时间/ 近似/ 公式/ 可/ 表示/ 为/ 其中/ ,/ μ/ k/ =/ λ/ -/ λ/ k/ ./ 证明/ ./ 若/ 内容/ k/ 不/ 在/ 0/ 状态/ ,/ 则/ 可以/ 将/ 除/ 内容/ k/ 以外/ 决定/ 缓存/ 的/ 内容/ 分成/ 两类/ :/ (/ a/ )/ 未/ 被/ 缓存/ 的/ 内容/ 及/ 存在/ 内容/ k/ 下面/ 的/ 内容/ ;/ (/ b/ )/ 存在/ 内容/ k/ 上面/ 的/ 内容/ ./ 而/ 如果/ 内容/ k/ 在/ 0/ 状态/ ,/ 则/ 不/ 需要/ 分类/ ./ 显然/ ,/ 只有/ (/ a/ )/ 类/ 内容/ 及/ 内容/ k/ 的/ 到达/ 才/ 会/ 改变/ 内容/ k/ 的/ 状态/ ,/ 而/ (/ b/ )/ 类/ 内容/ 的/ 到达/ 不会/ 改变/ 内容/ k/ 的/ 状态/ ./ 令/ ω/ k/ 为/ 内容/ k/ 在/ 缓存/ 器中/ 的/ 逗留/ 时间/ ,/ Prj/ {/ ω/ k/ >/ t/ }/ 表示/ 在/ 内容/ k/ 处于/ 状态/ j/ 的/ 条件/ 下/ ,/ 内容/ k/ 的/ 逗留/ 时间/ 大于/ t/ 的/ 概率/ ,/ 则/ 有/ CCN/ 网络/ 中/ 请求/ 到达/ 序列/ 与/ 一般/ 的/ 排队/ 系统/ 到达/ 序列/ 的/ 不同之处/ 在于/ :/ 对/ 同一/ 内容/ 的/ 请求/ 可能/ 在/ 前/ 一个/ 请求/ 还/ 未/ 被/ 满足/ 之前/ 重复/ 到达/ ,/ 这样/ 该/ 内容/ 就/ 会/ 由/ (/ a/ )/ 类/ 内容/ 变成/ (/ b/ )/ 类/ 内容/ ./ 在/ 本/ 模型/ 中/ ,/ 当/ 内容/ k/ 在/ 缓存/ 器/ 的/ 第/ j/ 个/ 位置/ 等待/ 被/ 替换/ 出去/ 的/ 时候/ ,/ 在/ 下/ 一个/ 内容/ k/ 的/ 请求/ 到达/ 之前/ 的/ 时间/ t/ 内/ ,/ 当且/ 仅/ 当/ 有/ 不少/ 于/ (/ x/ -/ j/ +/ 1/ )/ 个/ 不同/ 的/ (/ a/ )/ 类/ 内容/ 请求/ 到达/ ,/ 内容/ k/ 才/ 会/ 被/ 替换/ 出去/ ./ 即/ 在/ t/ 这/ 段时间/ 内/ ,/ 当且/ 仅/ 当/ 到达/ 的/ (/ a/ )/ 类/ 内容/ 请求/ 数/ 小于/ (/ x/ -/ j/ +/ 1/ )/ 时/ ,/ 逗留/ 时间/ 才/ 会/ 大于/ t/ ,/ 因此/ 有/ 将/ 式/ (/ 7/ )/ 代入/ 式/ (/ 6/ )/ 中/ ,/ 得到/ Pr/ {/ ω/ k/ >/ t/ }/ =/ ∑/ x/ 从而/ 得到/ 内容/ k/ 的/ 平均/ 逗留/ 时间/ :/ 从式/ (/ 9/ )/ 可以/ 发现/ ,/ 等/ 号/ 右边/ 的/ 表达式/ 与/ x/ 和/ λ/ k/ 正/ 相关/ ,/ 与/ μ/ k/ 负相关/ ,/ 与/ 我们/ 预期/ 的/ STk/ 与/ 这/ 三者/ 之间/ 的/ 关系/ 一致/ ./ 下面/ 进一步/ 分析/ 内容/ k/ 状态/ 的/ 向下/ 转移率/ μ/ k/ 的/ 取值/ ./ 由/ 上文/ 可知/ ,/ 当/ 内容/ k/ 处于/ 非零/ 状态/ 时/ ,/ 只有/ (/ a/ )/ 类/ 内容/ 的/ 到达/ 才/ 会/ 让/ 内容/ k/ 的/ 状态值/ 加/ 1/ ,/ 而/ (/ b/ )/ 类/ 内容/ 的/ 到达/ 不会/ 改变/ 内容/ k/ 的/ 状态/ ./ 因此/ ,/ 得到/ 当/ 内容/ k/ 处在/ 状态/ 1/ 时/ ,/ μ/ k/ 取得/ 最大值/ ,/ 即式/ (/ 10/ )/ ;/ 当/ 内容/ k/ 处在/ 状态/ x/ ,/ 并且/ 存在/ 它/ 上面/ 的/ 内容/ 是/ 最/ 流行/ 的/ (/ x/ -/ 1/ )/ 个/ 内容/ 时/ ,/ μ/ k/ 取得/ 最小值/ ,/ 即式/ (/ 11/ )/ ./ 由于/ π/ k0/ 是/ μ/ k/ 的/ 不减/ 函数/ ,/ 于是/ 可以/ 得到/ 内容/ k/ 的/ 未/ 命中/ 概率/ 区间/ 为/ Page7/ 式/ (/ 5/ )/ 的/ 右侧/ 为/ μ/ k/ 的/ 不/ 增函数/ ,/ 当/ 内容/ 请求/ 的/ 分布/ 比较/ 均匀/ (/ 即/ 在/ 时间/ t/ 内/ 到达/ 两个/ 或/ 以上/ 相同/ 内容/ 的/ 请求/ 几乎/ 不/ 可能/ )/ ,/ 并且/ 在/ x/ (/ i/ )/ 远/ 小于/ M/ 的/ 情况/ 下/ ,/ (/ b/ )/ 类/ 内容/ 相对/ 于/ (/ a/ )/ 类/ 内容/ 很少/ ./ 因此/ ,/ 可以/ 推得/ STk/ 的/ 近似计算/ 公式/ :/ 其中/ μ/ k/ =/ μ/ upper3/ ./ 3ST/ -/ LRU/ 方案/ 的/ 定性分析/ 从/ 上述/ 命题/ 的/ 证明/ 过程/ 可知/ ,/ 当/ 内容/ 请求/ 分布/ 让/ 短时间/ 内/ 重复/ 请求/ 同一个/ 内容/ 的/ 概率/ 很/ 小时/ ,/ 式/ (/ 5/ )/ 更/ 有效/ ,/ 即/ 若/ 请求/ 服从/ Zipf/ 分布/ ,/ 则/ 非负/ 参数/ α/ 越小越/ 好/ ./ 此外/ ,/ 由于/ 式/ (/ 5/ )/ 中/ μ/ k/ 的/ 取值/ 忽略/ 了/ 缓存/ 在/ 内容/ k/ 上面/ 的/ 内容/ ,/ 即/ (/ b/ )/ 类/ 内容/ ,/ 因此/ 缓存/ 器/ 容量/ x/ 也/ 是/ 越小越/ 好/ (/ x/ 越小/ ,/ 缓存/ 的/ 内容/ 就/ 越少/ ,/ 从而/ 缓存/ 在/ 内容/ k/ 上面/ 的/ 内容/ 也/ 越少/ )/ ./ 由/ 上节/ 分析/ ,/ 可/ 将/ 传统/ ALWAYS/ -/ LRU/ 机制/ 的/ 未/ 命中率/ 表示/ 为/ mk/ (/ i/ )/ =/ λ/ k/ (/ i/ )/ μ/ k/ (/ i/ )/ 同理/ ,/ 可/ 将/ ST/ -/ LRU/ 机制/ 的/ 未/ 命中率/ 表示/ 为/ mk/ (/ i/ )/ =/ λ/ k/ (/ i/ )/ μ/ k/ (/ i/ )/ μ/ k/ (/ i/ )/ =/ λ/ (/ i/ )/ -/ λ/ k/ (/ i/ )/ ,/ Ik/ (/ i/ )/ =/ 0/ ,/ 节点/ i/ 不存/ 内容/ k/ 由/ ST/ -/ LRU/ 策略/ 的/ 算法/ 及式/ (/ 13/ )/ 和/ 式/ (/ 14/ )/ 可以/ 得出/ 新策略/ 设计/ 的/ 合理性/ 如下/ :/ (/ 1/ )/ 减少/ 了/ 内容/ 的/ 复制/ 次数/ ,/ 就是/ 通过/ 让/ 平均/ 逗留/ 时间/ 长/ 的/ 内容/ 在/ 缓存/ 器中/ 停留/ 更/ 长时间/ ,/ 不/ 复制/ 平均/ 逗留/ 时间/ 较/ 短/ 的/ 内容/ 来/ 实现/ 的/ ./ (/ 2/ )/ 减小/ 了/ 总/ 的/ 未/ 命中率/ (/ =/ ∑/ k/ 而/ 减少/ 了/ 总/ 跳数/ ,/ 这/ 主要/ 有/ 两/ 方面/ 的/ 原因/ :/ 一方面/ ,/ 新策略/ 减小/ 了/ 决定/ 缓存/ 的/ 内容/ 个数/ ,/ 即/ μ/ k/ / μ/ k/ ,/ 由于/ 未/ 命中/ 概率/ π/ k0/ 随着/ μ/ k/ 的/ 减小/ 而/ 减小/ ,/ 从而/ 决定/ 缓存/ 的/ 内容/ 未/ 命中率/ 有所/ 减小/ ;/ 另一方面/ ,/ 不/ 决定/ 缓存/ 内容/ 的/ 未/ 命中/ 概率/ 虽然/ 为/ 1/ ,/ 但是/ 不/ 决定/ 缓存/ 的/ 内容/ 的/ 请求/ 率/ 也/ 很小/ ,/ 因此/ 有效/ 减少/ 了/ 系统/ 总/ 的/ 未/ 命中率/ ./ (/ 3/ )/ 增加/ 了/ AS/ 域/ 内/ 的/ 内容/ 多样性/ ,/ 从而/ 减少/ 了/ AS/ 域间/ 的/ 流量/ 传输/ ./ 通过/ 相邻/ 节点/ 之间/ 的/ 比较/ 决定/ 是否/ 缓存/ 内容/ ,/ 有效/ 避免/ 了/ 相邻/ 节点/ 缓存/ 相同/ 的/ 内容/ ,/ 提高/ 了/ 系统/ 的/ 整体/ 缓存/ 效率/ ./ 在/ 该/ 策略/ 的/ 设计/ 中/ ,/ 兴趣/ 包/ 和/ 数据包/ 在/ 原包/ 的/ 基础/ 上/ 又/ 增加/ 了/ 一段/ 空间/ 携带/ 该/ 内容/ 在/ 前/ 一个/ 节点/ 处/ 的/ 逗留/ 时间/ 数值/ ,/ 并且/ 给/ 节点/ 增加/ 了/ 读取/ 与/ 比较/ 相邻/ 节点/ 逗留/ 时间/ 的/ 计算/ 代价/ ./ 该/ 策略/ 在/ 传输/ 过程/ 中/ 没有/ 增加/ 新/ 的/ 包/ ,/ 在/ 读取/ 的/ 过程/ 中/ 也/ 只是/ 在/ 原来/ 读取/ 内容/ 前缀/ 及/ 接口/ 的/ 基础/ 上/ 多/ 读取/ 了/ 一个/ 数据/ —/ —/ —/ 逗留/ 时间/ ./ 这些/ 代价/ 远远/ 小于/ 将/ 相邻/ 两个/ 节点/ 的/ 缓存/ 空间/ 充分利用/ 所/ 节省/ 的/ 存储/ 成本/ ./ 4/ 仿真/ 结果/ 与/ 分析/ 4.1/ 仿真/ 环境/ 设置/ 本文/ 考虑/ 一个/ 具有/ 10/ 个/ 节点/ 的/ CCN/ 网络/ 模型/ (/ N/ =/ 10/ )/ ,/ CS/ 初始/ 为空/ ,/ M/ =/ 1000/ 个/ 相同/ 大小/ 的/ 内容/ 存储/ 在/ 服务器/ 中/ ./ 用户/ 和/ 其他/ 节点/ 可以/ 发送/ 请求/ 到/ 他们/ 相邻/ 的/ 上游/ 节点/ ./ 用户/ 发送到/ 节点/ 的/ 请求/ 服从/ 泊松/ 分布/ (/ λ/ u/ =/ 5/ 个/ // s/ )/ ,/ 内容/ 请求/ 服从/ 参数/ 为/ α/ (/ i/ )/ =/ α/ ,/ i/ =/ 1/ ,/ 2/ ,/ …/ ,/ 10/ 的/ Zipf/ 分布/ ,/ 节点/ i/ 的/ 请求/ 概率/ 设为/ qk/ (/ i/ )/ =/ c/ (/ i/ )/ // k/ α/ (/ i/ )/ ,/ 其中/ 1/ // c/ (/ i/ )/ =/ ∑/ k/ 为/ 归一化/ 参数/ (/ 即/ 内容/ 的/ 流行/ 度/ 从/ 大到/ 小/ 排序/ ,/ 最/ 流行/ 的/ 内容/ 标识/ 为/ 1/ )/ ./ 由于/ CCN/ 目前/ 尚未/ 在/ 真实/ 网络/ 中/ 部署/ ,/ 本文/ 仿真/ 是/ 通过/ 理论/ 分析/ 的/ 数值/ 结果/ 验证/ [/ 10/ -/ 12/ ,/ 15/ ]/ ,/ 与/ 实际/ 结果/ 之间/ 可能/ 出现/ 偏差/ ./ 在/ CCN/ 中/ ,/ 无论/ 采用/ 何种/ 网络拓扑/ 结构/ ,/ 其/ 最/ 基本/ 的/ 场景/ 都/ 是/ ,/ 每个/ 节点/ 都/ 接收/ 到/ 两种/ 请求/ 流/ :/ 一种/ 是/ 与其/ 直接/ 相连/ 的/ 用户/ 的/ 请求/ ,/ 另/ 一种/ 是/ 其他/ 节点/ 未/ 命中/ 的/ 请求/ 流/ 之/ 和/ ./ 在/ 网状/ 拓扑/ 结构/ 中/ ,/ 每个/ 节点/ 收到/ 的/ 请求/ 流/ 也/ 是/ 上述/ 两种/ ,/ 区别/ 仅仅/ 是/ η/ (/ i/ )/ 数值/ 上/ 的/ 变化/ ./ 因此/ 为/ 便于/ 问题/ 的/ 分析/ (/ 不/ 考虑/ 路由/ 策略/ )/ ,/ 同时/ 不/ 影响/ 通用性/ ,/ 本文/ 仿真/ 任意/ 网络拓扑/ 结构/ 中/ 的/ 一条/ 路由/ 路径/ ,/ 同时/ 假设/ 每个/ 节点/ (/ 节点/ 1/ 除外/ )/ 都/ 接收/ 到/ 两种/ 请求/ 流/ (/ 如图/ 6/ 所示/ )/ ./ 需要/ 说明/ 的/ 是/ ,/ 第/ 2/ 节/ 所述/ 的/ 算法/ 完整/ 地/ 比较/ 了/ 上游/ 与/ 下游/ 的/ ST/ 值/ ,/ 本文/ 将/ 此/ 算法/ 称作/ STboth/ 机制/ ,/ 很/ 容易/ 得到/ 两种/ 简化/ 的/ 机制/ —/ —/ —/ STup/ 和/ STdown/ 机制/ :/ STup/ 即仅/ 与/ 上游/ ST/ 值/ 比较/ ,/ ST/ 值仅/ 需/ 添加/ 到/ 数据包/ 中/ ,/ 节点/ i/ 决定/ 缓存/ 内容/ k/ 当且/ 仅/ 当/ STk/ (/ i/ )/ / STk/ (/ i/ +/ 1/ )/ ,/ i/ =/ 1/ ,/ 2/ ,/ …/ ,/ 9/ ,/ 这里/ 假设/ 第/ 10/ 个/ 节点/ 决定/ 缓存/ 第/ 9/ 个/ 节点/ 所有/ 不/ 决定/ 存/ 的/ 内容/ ;/ Page8STdown/ 即仅/ 与/ 下游/ ST/ 值/ 比较/ ,/ ST/ 值仅/ 需/ 添加/ 到/ 兴趣/ 包中/ ,/ 节点/ i/ 缓存/ 内容/ k/ 当且/ 仅/ 当/ STk/ (/ i/ )/ / STk/ (/ i/ -/ 1/ )/ ,/ i/ =/ 2/ ,/ 3/ ,/ …/ ,/ 10/ ,/ 这里/ 假设/ 第/ 1/ 个/ 节点/ 决定/ 缓存/ 第/ 2/ 个/ 节点/ 所有/ 不/ 决定/ 存/ 的/ 内容/ ./ ALWAYS/ -/ LRU/ 策略/ 节点/ i/ 获取/ 内容/ k/ 所需/ hopk/ (/ i/ )/ =/ λ/ k/ (/ i/ [/ )/ (/ 1/ -/ π/ k0/ (/ i/ )/ )/ +/ 跳数/ 可/ 表示/ 为/ 其中/ ,/ (/ 1/ -/ π/ k0/ (/ i/ )/ )/ 表示/ 在/ 节点/ i/ 命中/ 的/ 概率/ ;/ (/ 1/ -/ π/ k0/ (/ j/ )/ )/ ∏/ j/ -/ 1/ 中/ 、/ 节点/ j/ 命中/ 的/ 概率/ ;/ 10N/ ∏/ Ni/ 到/ 节点/ N/ 均/ 未/ 命中/ ,/ 则/ 需要/ 10N/ 跳/ 才能/ 命中/ 的/ 概率/ ./ 该/ 假设/ 的/ 目的/ 是/ 将/ AS/ 域间/ 带宽/ 的/ 使用/ 程度/ 间接/ 转化/ 为/ 跳数/ 的/ 多少/ ,/ 这样/ ,/ 若/ 内容/ 需要/ 从/ 其他/ 域/ 获取/ ,/ 则/ 所/ 需/ 跳数/ 剧增/ ;/ 反之/ ,/ 若/ 节点/ 获取/ 内容/ 的/ 总/ 跳数/ 较大/ ,/ 则/ 说明/ 大部分/ 内容/ 请求/ 在/ 本/ AS/ 域/ 中/ 未/ 命中/ ,/ 需从/ 其他/ AS/ 域/ 获取/ ./ 从式/ (/ 15/ )/ 可以/ 看出/ ,/ 本文/ 只/ 考虑/ 了/ 一个/ 方向/ 的/ 路由/ 路径/ ,/ 即/ 从/ 节点/ i/ 往/ 节点/ i/ +/ 1/ 路由/ 的/ 场景/ ,/ 没/ 能/ 更好/ 地/ 利用/ AS/ 域/ 中/ 缓存/ 的/ 内容/ ,/ 特别/ 是/ 节点/ N/ ,/ 它/ 接收/ 到/ 的/ 请求/ 只能/ 命中/ 节点/ N/ 缓存/ 的/ 内容/ ,/ 其余/ 的/ 请求/ 全/ 未/ 命中/ 而/ 被/ 转发/ 到/ 其他/ AS/ 域/ (/ 或/ 服务器/ )/ 获取/ 内容/ ,/ 从而/ 大大/ 地/ 增加/ 了/ 总/ 跳数/ ./ 与/ 式/ (/ 15/ )/ 类似/ ,/ ST/ -/ LRU/ 策略/ 中/ 节点/ i/ 获取/ 内容/ k/ 所需/ 跳数/ 可/ 表示/ 为/ hopk/ (/ i/ )/ =/ λ/ k/ (/ i/ [/ )/ (/ 1/ -/ π/ k0/ (/ i/ )/ )/ +/ 其中/ ,/ π/ k0/ (/ i/ )/ =/ μ/ k/ (/ i/ )/ 4.2/ 仿真/ 结果/ 分析/ 4.2/ ./ 1ST/ -/ LRU/ 与/ ALWAYS/ -/ LRU/ 机制/ 的/ 比较/ 图/ 7/ 给出/ 了/ 随/ 缓存/ 器/ 大小/ 在/ 递增/ 情况/ 下/ 几种/ 缓存/ 策略/ 的/ 性能/ 比较/ ,/ 图/ 7/ (/ a/ )/ 为/ 请求/ 分别/ 到达/ 所有/ 节点/ 处/ 的/ 未/ 命中率/ 之/ 和/ ,/ 图/ 7/ (/ b/ )/ 为/ 各个/ 节点/ 取得/ 内容/ 所/ 需/ 的/ 总/ 跳数/ ,/ 图/ 7/ (/ c/ )/ 为/ 在/ 50/ 个/ 请求/ 中/ (/ 每个/ 节点/ 从/ 用户/ 处/ 接收/ 到/ 5/ 个/ 请求/ )/ ,/ 每种/ 请求/ 获取/ 内容/ 所/ 需/ 的/ 总/ 跳数/ ./ 可以/ 看出/ ,/ STboth/ 和/ STup/ 策略/ 均/ 优于/ ALWAYS/ 策略/ ,/ STdown/ 与/ ALWAYS/ 策略/ 近似/ ,/ 这/ 是因为/ 在/ 缓存/ 容量/ 为/ [/ 5/ ,/ 10/ ,/ 15/ ,/ 20/ ,/ 25/ ,/ 30/ ,/ 35/ ,/ 40/ ,/ 45/ ,/ 50/ ]/ 时/ ,/ 由/ 平均/ 逗留/ 时间/ 式/ (/ 5/ )/ 可知/ ,/ 几乎/ 所有/ 内容/ 在/ 本/ 节点/ 的/ ST/ 值/ 都/ 大于/ 下游/ 节点/ 的/ ST/ 值/ ,/ 即/ STdown/ 几乎/ 所有/ 内容/ 都/ 存/ ,/ 从而/ STdown/ 与/ ALWAYS/ 策略/ 几乎/ 一样/ ./ 图/ 7/ (/ b/ )/ 中/ 虽然/ 第/ 10/ 个/ 节点/ 处/ 出现/ STboth/ 和/ STup/ 策略/ 所需/ 跳数/ 大于/ ALWAYS/ 与/ STdown/ 策略/ ,/ 但是/ 由图/ 7/ (/ c/ )/ 可知/ ,/ STboth/ 和/ STup/ 策略/ 下/ 所有/ 节点/ 对/ 同一/ 内容/ 的/ 请求/ 所/ 需/ 总/ 跳数/ 是/ 小于/ ALWAYS/ 和/ STdown/ 的/ ./ 因为/ 本文/ 的/ 仿真/ 只/ 考虑/ 了/ 往/ 节点/ 10/ 方向/ 路由/ 的/ 场景/ ,/ 没/ 能/ 更好/ 地/ 利用/ AS/ 域/ 中/ 缓存/ 的/ 内容/ ,/ 特别/ 是/ 节点/ 10/ ,/ 它/ 只/ 利用/ 了/ 自己/ 缓存/ 的/ 内容/ ,/ 未/ 命中/ 的/ 请求/ 全都/ 到/ 其他/ AS/ 域取/ ./ 所以/ ,/ 节点/ 10/ 处/ STboth/ 和/ STup/ 策略/ 所需/ 跳数/ 将/ 大于/ ALWAYS/ 与/ STdown/ 策略/ 所需/ 跳数/ ./ 图/ 8/ 则/ 给出/ 了/ 10/ 个/ 节点/ 缓存/ 容量/ 分别/ 为/ [/ 6/ ,/ 15/ ]/ 之间/ 的/ 整数/ 随机/ 排列/ 时/ ,/ 4/ 种/ 策略/ 在/ 未/ 命中率/ 、/ 总跳数/ 和/ 单位/ 时间/ 复制/ 次数/ 的/ 比较/ ./ 仿真/ 结果显示/ ,/ STboth/ ,/ STup/ 和/ STdown/ 策略/ 在/ 这/ 3/ 方面/ 的/ 性能/ 均/ 优于/ 传统/ 的/ ALWAYS/ 策略/ ./ Page9/ 图/ 8/ 缓存/ 容量/ 为/ [/ 13/ ,/ 9/ ,/ 14/ ,/ 6/ ,/ 15/ ,/ 8/ ,/ 12/ ,/ 10/ ,/ 7/ ,/ 11/ ]/ 4.2/ ./ 2/ 平均/ 逗留/ 时间/ 计算公式/ 的/ 有效性/ 分析/ 本文/ 的/ 3.2/ 节/ 从/ 原理/ 上/ 简要/ 阐述/ 了/ 平均/ 逗留/ 时间/ 式/ (/ 5/ )/ 的/ 适用范围/ ,/ 本节/ 将/ 从未/ 命中率/ 和/ ST/ 值/ 取值/ 范围/ 的/ 绝对/ 差来/ 定量分析/ 式/ (/ 5/ )/ 的/ 适用范围/ ./ 取值/ 范围/ 的/ 绝对/ 差越/ 小/ ,/ 则/ 式/ (/ 5/ )/ 在/ 该/ 场景/ 下越/ 有效/ (/ 因为/ 式/ (/ 5/ )/ 是/ 取/ ST/ 值/ 变化/ 范围/ 间/ 的/ 某值/ 来/ 近似/ 平均/ 逗留/ 时间/ )/ ./ 其中/ ,/ 未/ 命中率/ 的/ 变化/ 范围/ 绝对/ 差/ 可/ 表示/ 为/ ST/ 值/ 的/ 变化/ 范围/ 绝对/ 差/ 可/ 表示/ 为/ μ/ lower/ λ/ k1/ -/ μ/ upper/ 图/ 9/ (/ a/ )/ 中/ ,/ 当/ α/ >/ 1/ 时/ ,/ 前/ 5/ 个/ 最/ 流行/ 的/ 内容/ 的/ 未/ 命中率/ 的/ 变化/ 范围/ 绝对/ 差/ 都/ 在/ x/ =/ 10/ 下/ 小于/ x/ =/ 50/ 的/ 情况/ ;/ 当/ α/ </ 1/ 时/ ,/ 除了/ 第/ 1/ 个/ 最/ 流行/ 的/ 内容/ 外/ ,/ 都/ 有/ 未/ 命中率/ 在/ x/ =/ 10/ 下/ 小于/ x/ =/ 50/ 的/ 情况/ ./ 而/ 在/ x/ 相同/ 的/ 情况/ 下/ ,/ α/ </ 1/ 的/ 未/ 命中率/ 变化/ 范围/ 绝对/ 差/ 小于/ α/ >/ 1/ ./ 因此/ ,/ 由图/ 9/ (/ a/ )/ 我们/ 得到/ α/ </ 1/ ,/ x/ =/ 10/ 是/ 最佳/ 的/ 参数/ 取值/ ./ 图/ 9/ (/ b/ )/ 也/ 显示/ α/ </ 1/ ,/ x/ =/ 10/ 是/ 最佳/ 的/ 参数/ 取值/ ./ 该/ 结论/ 与/ 3.2/ 节/ 的/ 分析/ 相符/ ./ 5/ 小结/ 本文/ 提出/ 了/ 一个/ 新/ 的/ 基于/ 逗留/ 时间/ 的/ 缓存/ 决定/ 策略/ ,/ 该/ 策略/ 的/ 目标/ 是/ 缓存/ 决策/ 时/ 尽可能/ 地/ 选择/ 逗留/ 时间/ 较长/ 的/ 内容/ ,/ 从而/ 有效/ 地/ 减少/ 了/ 内容/ 的/ 复制/ 次数/ ,/ 增加/ 了域/ 内/ 命中/ 次数/ 和/ 减少/ 域间/ 带宽/ 使用/ ./ 本/ 策略/ 充分/ 地/ 考虑/ 了/ 缓存/ 器/ 容量/ 及/ 内容/ 的/ 流行/ 度/ ,/ 并/ 适用/ 于/ 所有/ 网络拓扑/ 结构/ ./ 然而/ ,/ 该/ 策略/ 也/ 带来/ 了/ 一定/ 的/ 处理/ 负担/ ,/ 即/ 节点/ 需要/ 读取/ 与/ 更新/ 比较/ 兴趣/ 包/ 或/ 数据包/ 携带/ 的/ 平均/ 逗留/ 时间/ 的/ 信息/ ./ 本文/ 在/ 系统/ 实现/ 时/ 采用/ 了/ 在/ 数据包/ 或/ 兴趣/ 包中/ 添加/ 一个/ 逐跳/ 更新/ 数/ 的/ 方法/ 来/ 达到/ 了/ 交互/ 的/ 目的/ ./ 事实上/ ,/ 对于/ CCN/ 这种/ 分布式/ 网络/ 架构/ ,/ 节点/ 间/ 信息/ 交互/ 是/ 很/ 自然/ 的/ ,/ 同时/ 也/ 可以/ 根据/ 实际/ 需求/ 合理/ 控制/ 节点/ 之间/ 的/ 交互/ 范围/ ./ 在/ 网络/ 鲁棒性/ 方面/ ,/ 由于/ 逗留/ 时间/ 会/ 随着/ 网络/ 状况/ 的/ 变化/ 而/ 变化/ ,/ 因此/ 在/ 动态变化/ 的/ 网络/ 中/ ,/ 可以/ 增加/ 设计/ 逗留/ 时间/ 的/ 更新/ ,/ 按照/ 不断更新/ 的/ 逗留/ 时间/ 来/ 动态/ 地/ 选择/ 所/ 缓存/ 的/ 内容/ ,/ 从而/ 保证/ 网络/ 的/ 鲁棒性/ ./ 本文/ 的/ 策略/ 在/ 缓存/ 容量/ 较/ 小/ 、/ 请求/ 分布/ 较/ 均匀/ 的/ 场景/ 下/ 更/ 有效/ ,/ 后续/ 我们/ 将/ 通过/ 给/ 每个/ 内容/ 计时/ 的/ 方法/ ,/ 估算/ 内容/ 的/ 平均/ 逗留/ 时间/ ,/ 这样/ 该/ 策略/ 就/ 能够/ 应用/ 到/ 任何/ 场景/ 下/ 了/ ./ 此外/ ,/ 我们/ 将/ 在/ 后续/ CCN/ 网内/ 缓存/ 机制/ 的/ 研究/ 中/ ,/ 尝试/ 考虑/ 拓扑/ 结构/ 、/ 带宽/ 等/ 因素/ ,/ 从而/ 进一步/ 提升/ 缓存/ 机制/ 的/ 效率/ 和/ 命中率/ ./ 

