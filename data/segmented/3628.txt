Page1/ 自/ 适应/ 的/ 未来/ 网络体系/ 架构/ 林闯/ 1/ )/ 贾子/ 骁/ 1/ )/ 孟坤/ 1/ )/ ,/ 2/ )/ 1/ )/ (/ 清华大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100084/ )/ 2/ )/ (/ 北京科技大学/ 计算机/ 与/ 通信/ 工程学院/ 北京/ 100083/ )/ 摘要/ 随着/ 计算技术/ 和/ 互联网/ 业务/ 的/ 蓬勃发展/ ,/ 用户/ 对/ 网络应用/ 提出/ 了/ 越来越/ 高/ 的/ 要求/ ,/ 多样化/ 的/ 需求/ 使得/ 现有/ Internet/ 架构/ 难以/ 适用/ ,/ 成为/ 了/ 网络/ 业务/ 进一步/ 发展/ 的/ 瓶颈/ ./ 文中/ 在/ 分析/ 当前/ Internet/ 网络/ 存在/ 的/ 问题/ 、/ 总结/ 本源/ 性/ 因素/ 的/ 基础/ 上/ ,/ 指出/ 了/ 自/ 适应/ 是/ 未来/ 网络/ 的/ 发展/ 方向/ ,/ 可控/ 、/ 可管/ 、/ 可/ 扩展/ 和/ 可信/ 是/ 实现/ 自/ 适应/ 特性/ 应/ 满足/ 的/ 基本/ 指标/ ./ 在/ 介绍/ 和/ 分析/ 现有/ 自/ 适应/ 未来/ 网络/ 关键技术/ 和/ 体系/ 架构/ 的/ 同时/ ,/ 深入/ 讨论/ 了/ 相关/ 技术/ 和/ 体系结构/ 的/ 优势/ 和/ 兼容性/ ,/ 并/ 在/ 此基础/ 上/ 提出/ 了/ 自/ 适应/ 的/ 未来/ 网络体系/ 架构/ ,/ 为/ 未来/ 网络/ 的/ 研究/ 提供/ 了/ 参考/ ./ 关键词/ 未来/ 网络/ ;/ 架构/ ;/ 自/ 适应/ ;/ 可控/ ;/ 可管/ ;/ 可/ 扩展/ ;/ 可信/ ;/ 下一代/ 互联网/ 1/ 引言/ 以/ IP/ 技术/ 为/ 核心/ 的/ Internet/ 网络/ 将/ 大量/ 的/ 网/ Page2/ 走向/ 了/ 世界/ ,/ 已/ 成为/ 了/ 人们/ 生活/ 必不可缺/ 的/ 一部分/ ./ 随着/ 互联网/ 业务/ 在/ 近几年来/ 蓬勃发展/ ,/ 以/ Google/ 搜索/ 业务/ 、/ YouTube/ 视频/ 业务/ 为/ 代表/ 的/ 网络/ 新/ 技术/ 和/ 新/ 业务/ 不断涌现/ ./ 伴随/ 着/ 不断/ 提升/ 的/ 软硬件/ 水平/ ,/ 网络/ 业务/ 的/ 发展/ 经历/ 了/ 从/ 简单/ 单机/ 程序/ 、/ 集中式/ 客户端/ // 服务器/ 的/ 请求/ 服务/ 模式/ (/ C/ // S/ )/ 、/ 分布式/ 点对点/ (/ P2P/ )/ 资源共享/ 模式/ 等/ ,/ 到/ 大规模/ 云/ 计算/ 服务/ 模式/ 的/ 转换/ ,/ 由此/ 对/ 互联网/ 的/ 基础/ 硬件/ 设施/ 及/ 运行/ 其上/ 的/ 网络/ 控制/ 体系/ 提出/ 了/ 更/ 高/ 的/ 要求/ :/ 对/ 运算/ 节点/ 资源/ 和/ 网络/ 传输/ 资源/ 实现/ 细粒度/ 的/ 调度/ 和/ 管理/ ,/ 以/ 获得/ 较/ 高/ 的/ 用户/ 体验/ 质量/ (/ QualityofExperi/ -/ ence/ ,/ QoE/ )/ [/ 1/ ]/ ./ 然而/ ,/ 在/ 现有/ 的/ 网络体系/ 架构/ 中/ ,/ 网络/ 控制/ 层/ 和/ 数据/ 层紧/ 耦合/ ,/ 但/ 混合式/ 的/ 网络/ 控制/ 逻辑/ 与/ 网络/ 数据/ 层松/ 耦合/ ,/ 使得/ 应用/ 服务提供商/ (/ ApplicationServiceProviders/ ,/ ASP/ )/ 无法/ 根据/ 用户服务/ 的/ 需求/ 分布/ 对/ 网络资源/ 进行/ 按/ 需/ 调度/ ,/ 只能/ 通过/ 增加/ 额外/ 的/ 计算资源/ 和/ 冗余/ 的/ 服务/ 部署/ 来/ 满足/ 服务/ 需求/ ;/ 网络/ 用户/ (/ NetworkUsers/ ,/ NUS/ )/ 无法/ 与/ 应用/ 服务提供商/ 进行/ 有效/ 的/ 交互/ ,/ 盲目/ 地/ 探寻/ 服务/ 资源/ ;/ 网络服务/ 运营商/ (/ InternetServiceProviders/ ,/ ISP/ )/ 依赖/ 扩充/ 网络设备/ 规模/ 应对/ 网络服务/ 的/ 需求/ ./ 这些/ “/ 补丁/ 式/ ”/ 的/ 措施/ 导致/ 现在/ 的/ 互联网/ 已经/ 成为/ 一个/ 规模/ 臃肿/ 、/ 结构/ 繁杂/ 、/ 不/ 可靠/ 的/ 确定性/ 系统/ [/ 2/ ]/ ,/ 进一步/ 加剧/ 了/ 网络/ 数据/ 层/ 和/ 网络/ 控制/ 层/ 的/ 压力/ ,/ 使得/ 网络/ 控制/ 层/ 越来越/ 复杂/ ,/ 难以/ 适应/ 目前/ 网络/ 业务/ 的/ 发展/ ./ 现有/ 网络体系/ 难以/ 适应/ 目前/ 业务/ 应用/ 需求/ 的/ 突出/ 矛盾/ 表现/ 在/ 以下/ 方面/ :/ (/ 1/ )/ 有限/ 的/ IP/ 资源/ 与/ 无限/ 增长/ 的/ 服务/ 资源/ 需求/ 间/ 的/ 矛盾/ ,/ 地址/ 与/ 服务/ 资源/ 难以实现/ 一一/ 绑定/ ,/ 阻碍/ 了/ 资源/ 的/ 优化/ 调度/ ;/ (/ 2/ )/ 业务/ 模式/ 革命性/ 转变/ 与/ 网络/ 架构/ 局限性/ 的/ 矛盾/ ,/ 现有/ 网络协议/ 难以/ 承担/ 以/ 大规模/ 数据传输/ 为/ 重点/ 的/ 网络/ 传输/ 的/ 任务/ ;/ (/ 3/ )/ 数据/ 来源/ 多样性/ 、/ 突发性/ 与/ 网络管理/ 机制/ 滞后/ 的/ 矛盾/ ,/ 多样性/ 数据/ 给/ 网络/ 带来/ 更/ 多/ 的/ 威胁/ ,/ 管理/ 的/ 滞后/ 助长/ 了/ 安全事件/ 的/ 蔓延/ ;/ (/ 4/ )/ 服务质量/ 要求/ 提升/ 与/ 网络/ 性能/ 提升/ 不/ 成正比/ ,/ 计算/ 模式/ 与/ 存储技术/ 发展/ 加速/ 了/ 对/ 服务质量/ 要求/ 的/ 提升/ ,/ 网络/ 性能/ 成为/ 满足/ 服务质量/ 的/ 瓶颈/ ./ 针对/ 上述/ 问题/ ,/ 我们/ 认为/ 未来/ 的/ 网络/ 应/ 具备/ 主动/ 发现/ 、/ 识别/ 网络/ 主体/ 和/ 网络应用/ 的/ 特性/ ,/ 能/ 根据/ 不同/ 网络/ 要求/ 进行/ 自主/ 调节/ 网络/ 配置/ 的/ 能力/ ,/ 能够/ 满足/ 各种/ 角度/ 用户/ 使用/ 友好/ 性/ 的/ 要求/ ./ 简单/ 地/ ,/ 我们/ 称之为/ 自/ 适应/ 网络/ ,/ 并/ 把/ 相应/ 的/ 实现/ 技术/ 称为/ 自/ 适应/ 网络/ 技术/ ./ 下述/ 方法/ 为/ 构建/ 自/ 适应/ 网络/ 提供/ 了/ 方向/ :/ 将/ 网络/ 控制/ 层/ 与/ 网络/ 数据/ 层解/ 耦/ ,/ 建立/ 控制/ 逻辑/ 与/ 网络/ 数据/ 层/ 之间/ 的/ 紧/ 耦合/ 关系/ ;/ 实现/ 控制/ 逻辑/ 可以/ 根据/ 准确/ 、/ 完整/ 的/ 网络/ 状态/ 信息/ ,/ 直接/ 作用/ 于/ 网络/ 数据/ 层/ ,/ 依照/ 网络/ 业务/ 的/ 需求/ 从/ 较/ 高层次/ 上/ 配置/ 网络/ 或者/ 修改/ 网络/ 决策层/ 的/ 相关/ 算法/ 优化/ 网络/ 运行/ 的/ 技术/ ./ 已有/ 的/ 自/ 适应/ 网络/ 技术/ 主要/ 包括/ 设备/ 主动/ 管理/ 和/ 网络/ 控制技术/ (/ 如/ OpenFlow/ 、/ NOX/ )/ 、/ 服务/ 资源/ 识别/ 和/ 定制/ 技术/ (/ 如/ NDN/ 、/ PSIRP/ )/ 、/ 网络体系/ 架构/ (/ 如/ 4D/ 、/ GENI/ )/ 等/ ,/ 为/ 实现/ 网络/ 控制权/ 从/ 路由器/ // 交换机/ 及/ 网络协议/ 中/ 分离/ 、/ 网络/ 的/ 按/ 需/ 控制/ 、/ 新型/ 网络/ 业务/ 与/ 网络/ 控制/ 的/ 自主/ 匹配/ 提供/ 了/ 可能/ ./ 本文/ 在/ 分析/ 当前/ 以/ IP/ 技术/ 为/ 核心/ 的/ 网络体系/ 架构/ 存在/ 的/ 根本性/ 问题/ 的/ 基础/ 上/ ,/ 对/ 自/ 适应/ 网络/ 技术/ 和/ 体系结构/ 进行/ 了/ 系统/ 调研/ ,/ 全面/ 对比/ 分析/ 了/ 各种/ 技术/ 的/ 侧重点/ 和/ 兼容性/ ,/ 并/ 提出/ 了/ 自/ 适应/ 的/ 未来/ 网络体系/ 架构/ (/ AdaptiveFutureInternetFramework/ ,/ AFIF/ )/ ./ 本文/ 第/ 2/ 节/ 分析/ 当前/ Internet/ 网络体系结构/ 存在/ 的/ 问题/ ;/ 第/ 3/ 节/ 阐述/ 未来/ Internet/ 网络/ 的/ 发展/ 要求/ 和/ 设计/ 原则/ ;/ 第/ 4/ 节至/ 第/ 6/ 节/ 分别/ 对/ 目前/ 自/ 适应/ 网络/ 技术/ 和/ 自/ 适应/ 网络体系/ 框架/ 的/ 研究进展/ 进行/ 综合/ 对比/ 分析/ ;/ 第/ 7/ 节/ 提出/ 一种/ 自/ 适应/ 的/ 未来/ 网络/ 架构/ AFIF/ ;/ 第/ 8/ 节对/ 全文/ 进行/ 总结/ ./ 2/ 互联网/ 现状/ 与/ 存在/ 的/ 问题/ 大/ 流量/ 网络/ 业务/ 的/ 流行/ 与/ 网络/ 用户/ 的/ 急剧/ 增加/ 、/ 用户/ 个性化/ 的/ 服务质量/ 需求/ 使得/ 现有/ 以/ IP/ 技术/ 为/ 核心/ 的/ Internet/ 难堪/ 重负/ ./ 本节/ 深入分析/ 了/ 当前/ Internet/ 的/ 现状/ 和/ 存在/ 的/ 问题/ ,/ 并/ 总结/ 出/ 导致/ 这些/ 问题/ 的/ 本源/ 性/ 因素/ ,/ 为/ 自/ 适应/ 的/ 未来/ 网络体系/ 架构设计/ 指明/ 了/ 方向/ ./ 2.1/ Internet/ 体系/ 现状/ 2.1/ ./ 1/ 小/ 核心/ 和/ 大/ 边缘/ 现在/ 的/ 互联网/ 依然/ 是/ 以/ IP/ 技术/ 为/ 核心/ ,/ IP/ 技术/ 采用/ 了/ 基于/ 无/ 连接/ 的/ 分组/ 交换/ 结构/ 、/ 存储转发/ 的/ 路由/ 机制/ 和/ 尽力而为/ 的/ 服务/ 模式/ [/ 3/ ]/ ,/ 保证/ 了/ 异构/ 网络/ 之间/ 的/ 互连/ 互通/ ./ Internet/ 创始人/ 之一/ DavidClark/ 将/ 这种/ 模式/ 总结/ 为/ “/ 边缘/ 论/ (/ End/ -/ to/ -/ endArgument/ )/ ”/ :/ 应用/ 功能/ 作为/ 通信/ 系统/ 内在/ 的/ 性质/ 是/ 不/ 可能/ 的/ ,/ 只有/ 被/ 放置/ 于/ 系统/ 的/ 边缘/ 才能/ 被/ 完全/ 和/ 正确/ 地/ 实现/ [/ 4/ ]/ ./ “/ 边缘/ 论/ ”/ 设计模式/ 的/ 采用/ ,/ 形成/ 了/ 简洁/ 、/ 高效/ 的/ 网络/ 核心/ ,/ 仅/ 实现/ 了/ 通用/ 的/ 数据/ 路由/ 转发/ 功能/ ;/ 大量/ Page3/ 高层/ 网络应用/ 服务/ 被/ 放置/ 在/ 网络/ 边缘/ ,/ 推/ 给/ 传输层/ 及其/ 之上/ 的/ 各层/ 来/ 实现/ ./ 这种/ 核心/ 简单/ 、/ 边缘/ 复杂/ 的/ 设计模式/ 便于/ 异构/ 网络/ 的/ 接入/ 与/ 新/ 业务/ 的/ 部署/ ,/ 保证/ 了/ 网络/ 良好/ 的/ 扩展性/ ,/ 但/ 增加/ 了/ 边缘/ 管理/ 的/ 复杂度/ ./ 2.1/ ./ 2/ 业务/ 需求/ 多样化/ 随着/ 软硬件/ 水平/ 的/ 不断/ 提升/ ,/ 网络/ 业务/ 的/ 发展/ 经历/ 了/ 从/ 简单/ 单机/ 程序/ 、/ 集中式/ 客户端/ // 服务器/ 的/ 请求/ 服务/ 模式/ (/ C/ // S/ )/ 、/ 分布式/ 点对点/ (/ P2P/ )/ 资源共享/ 模式/ 等/ ,/ 到/ 大规模/ 云/ 计算/ 服务/ 模式/ 的/ 转换/ ./ 为/ 应对/ 网络服务/ 计算/ 密集/ 性/ 的/ 需求/ ,/ 实现/ 硬件资源/ 的/ 高效/ 利用/ ,/ 虚拟化/ 技术/ 被/ 广泛应用/ ,/ 代表性/ 的/ 如/ Google/ 数据/ 搜索/ 和/ YouTube/ 视频/ 业务/ ./ 这些/ 业务/ 都/ 采用/ 了/ 以/ 大规模/ 数据中心/ 为/ 支撑/ 的/ 云/ 计算/ 架构/ ,/ 数据中心/ 和/ 云/ 计算技术/ 推动/ 虚拟化/ 技术/ 发展/ 到/ 了/ 一个/ 新/ 的/ 阶段/ ./ 虚拟化/ 技术/ 从/ 单机/ 虚拟化/ 发展/ 到/ 现在/ 的/ 以云/ 计算/ 为/ 代表/ 的/ 服务/ 虚拟化/ ,/ 虚拟化/ 程度/ 得到/ 了/ 提高/ ,/ 同时/ 加速/ 了/ 网络资源/ 一体化/ 进展/ ./ 服务/ 虚拟化/ 技术/ 需要/ 调度/ 的/ 资源/ 除了/ 众多/ 运算/ 节点/ 所/ 拥有/ 的/ 硬件资源/ 之外/ ,/ 还/ 包括/ 节点/ 之间/ 的/ 网络/ 传输/ 资源/ ,/ 其/ 调度/ 的/ 重要性/ 不亚于/ 运算/ 节点/ 资源/ ./ 节点/ 之间/ 网络/ 传输/ 资源/ 的/ 虚拟化/ 成为/ 了/ 目前/ 领域/ 研究/ 的/ 重点/ ./ 2.1/ ./ 3/ 网络/ 社会性/ 凸现/ 展/ ,/ Internet/ 的/ 社会性/ 正/ 逐步/ 凸现/ ./ 首先/ ,/ 以/ iPhone/ 、/ iPad/ 为/ 代表/ 的/ 智能/ 终端/ 的/ 出现/ 和/ 3G/ 网络/ 的/ 广泛应用/ ,/ 极大丰富/ 了/ 网络/ 的/ 接入/ 方式/ ,/ 计算机网络/ 的/ 使用/ 变得/ 更为/ 廉价/ 和/ 便捷/ ,/ 互联网/ 已经/ 融入/ 到/ 了/ 人们/ 的/ 生活/ 当中/ ,/ 它/ 所/ 承载/ 的/ 社会/ 功能/ 越来越/ 多/ ./ 其次/ ,/ 互联网/ 中/ 的/ 虚拟/ 关系/ 正/ 与/ 真实/ 的/ 社会/ 人际关系/ 相互/ 融合/ ,/ 信息/ 在/ 网络/ 中/ 的/ 传播/ 和/ 反馈/ 呈现出/ 社会性/ 特点/ ,/ 网络/ 行为/ 折射/ 了/ 用户/ 的/ 价值/ 取向/ ./ 同时/ ,/ 互联网/ 中/ 的/ 隐私/ 与/ 安全/ 问题/ 成为/ 各方/ 关注/ 的/ 重点/ ,/ CSDN/ 和/ 人人/ 网/ 账户/ 信息/ 的/ 泄漏/ 为/ 互联网安全/ 敲响/ 了/ 警钟/ ./ 如何/ 利用/ 社会科学/ 的/ 理论/ 成果/ 引导/ 和/ 管理/ 互联网/ 成为/ 了/ 网络/ 领域/ 重要/ 的/ 研究课题/ ./ 2.1/ ./ 4/ 混合式/ 网络管理/ 互联网/ “/ 边缘/ 论/ ”/ 和/ 无/ 连接/ 分组/ 交换/ 的/ 互联网/ 设计/ 使得/ 借助/ 分布式/ 路由/ 协议/ 间接/ 控制/ 网络/ 核心/ 区域/ 成为/ 必需/ ./ 网络/ 的/ 控制/ 逻辑/ 与/ 数据/ 转发/ 通道/ 以/ 分布式/ 路由/ 协议/ (/ BGP/ 、/ OSPF/ 等/ )/ 的/ 方式/ 在/ 网络/ 节点/ 上/ 进行/ 了/ 捆绑/ 实现/ ,/ 这些/ 路由/ 协议/ 同时/ 兼顾/ 了/ 数据/ 转发/ 和/ 网/ 随着/ 社交/ 网络/ 、/ 电子商务/ 和/ 电子政务/ 的/ 不断/ 发络/ 控制/ 的/ 功能/ :/ 一方面/ 学习/ 网络拓扑/ ,/ 根据/ 网络/ 的/ 实时/ 状态/ 转发/ 数据/ ;/ 另一方面/ 执行/ 网管/ 配置/ 的/ 协议/ 规则/ 实现/ 网络/ 控制/ ,/ 如/ BGP/ 域间/ 路由/ 策略/ 等/ ,/ 网络/ 控制/ 与/ 数据/ 层/ 构成/ 了/ 紧/ 耦合/ 关系/ ./ 网管/ 人员/ 直接参与/ 节点/ 级/ 的/ 网络协议/ ,/ 实现/ 对/ 数据/ 层/ 的/ 控制/ ,/ 网络/ 节点/ 执行/ 流量/ 工程/ 等/ 人为/ 配置/ 规则/ 和/ 最/ 短/ 路径/ 规则/ 的/ 混合体/ ,/ 在/ 处理/ 数据包/ 时/ 根据/ 链路/ 负载/ 均衡/ 、/ 流量/ 控制/ 等/ 机制/ 自主/ 调控/ ,/ 使得/ 网络/ 控制/ 呈现出/ 混合式/ 的/ 特征/ ./ 2.2/ 互联网/ 存在/ 的/ 问题/ 当前/ 互联网/ 所处/ 的/ 网络/ 环境/ 和/ 运行/ 的/ 网络/ 业务/ 都/ 发生/ 了/ 日新月异/ 的/ 变化/ ,/ 传统/ Internet/ 网络体系/ 不再/ 适应/ 未来/ 网络/ 的/ 发展/ ,/ 存在/ 的/ 突出/ 问题/ 可以/ 归纳/ 成/ 以下/ 几个/ 方面/ ./ 2.2/ ./ 1/ 信息/ 不/ 透明/ 和/ 资源/ 浪费/ 严重/ 在/ 云/ 计算/ 业务/ 模式/ 里/ ,/ 网络/ 中/ 节点/ 的/ 硬件资源/ 和/ 节点/ 之间/ 的/ 网络/ 传输/ 资源/ 分别/ 由/ 应用/ 服务提供商/ 和/ 网络/ 服务提供商/ 进行/ 管理/ ./ 以/ Google/ 为例/ ,/ Google/ 在/ 全球/ 多个/ 国家/ 部署/ 运行/ 着/ 40/ 个/ 数据中心/ ①/ ,/ 这些/ 数据中心/ 通过/ 本地/ 的/ 网络/ 运营商/ 接入/ 到/ 互联网/ ./ 这一/ 现状/ 为/ 实现/ 云/ 计算/ 的/ 细粒度/ 化/ 管理/ 和/ 可靠性/ 任务调度/ 造成/ 了/ 不可逾越/ 的/ 鸿沟/ ./ 一方面/ 应用/ 服务提供商/ 为了/ 弥补/ 该/ 性能/ 上/ 的/ ,/ 耗费/ 了/ 大量/ 的/ 节点/ 计算资源/ ,/ 雅虎公司/ 中央/ 数据库/ 的/ 拓扑/ 结构/ 发现/ 功能/ 通常/ 要花费/ 30/ %/ 以上/ 的/ CPU/ 处理/ 周期/ 来/ 进行/ 重复/ 的/ 计算/ ,/ 尽管/ 网络拓扑/ 的/ 变化/ 没有/ 那么/ 频繁/ ②/ ./ 另一方面/ 云/ 计算/ 架构/ 承载/ 了/ 越来越/ 多/ 的/ 复杂/ 业务/ 流量/ ,/ 使/ 网络/ 基础设施/ 不堪重负/ ./ 但/ 网络/ 运营商/ 对/ 网络/ 所/ 承载/ 的/ 应用层/ 业务/ 缺乏/ 感知/ ,/ 这种/ 盲目性/ 使得/ ISP/ 只能/ 单纯/ 依靠/ 购买/ 网络设备/ 、/ 扩充/ 网络/ 节点/ 规模/ 来/ 应对/ 不断/ 增加/ 的/ 业务/ 流量/ ./ 网络设备/ 和/ 虚拟化/ 节点/ 数目/ 成倍增加/ ,/ 造成/ 了/ 网络设备/ 利用率/ 低/ 、/ 网络资源/ 浪费/ ,/ 网络/ 数据传输/ 性能/ 并/ 没有/ 得到/ 相应/ 提高/ ./ 以/ IP/ 为/ 核心/ 的/ 网络体系结构/ 中/ ,/ 数据/ 层/ 对/ 应用程序/ 开发者/ 不/ 透明/ 和/ 硬/ 接入/ 的/ 实现/ 方式/ ,/ 无论/ 从/ 流量/ 规模/ 上/ ,/ 还是/ 从/ 功能/ 接口/ 上/ ,/ 都/ 不能/ 满足/ 当今/ 网络/ 业务/ 的/ 需求/ ./ 网络体系结构/ 束缚/ 了/ 网络/ 业务/ 的/ 发展/ ./ 渐进式/ 的/ 改良/ 方法/ 对/ 网络/ 进行/ 局部/ 改进/ ,/ 只能/ 暂时/ ①/ ②/ Page4/ 缓解/ 这一/ 矛盾/ ,/ 并/ 不能/ 从/ 问题/ 的/ 根源/ 处/ 解决/ ./ 2.2/ ./ 2/ 信息/ 交互/ 差/ 与/ 控制/ 日益/ 复杂/ 互联网/ 在/ 设计/ 之初/ 只/ 需要/ 简单/ 、/ 高效/ 的/ 数据传输/ 逻辑/ ,/ 如/ IP/ 网/ 和/ 以太网/ 的/ 分布式计算/ 路径/ 逻辑/ ,/ 网络/ 控制/ 功能/ 相应/ 的/ 也/ 只/ 需/ 维护/ 包转发/ 表/ 这/ 一/ 简单/ 的/ 分布式/ 路由/ 协议/ ./ 但/ 随着/ 互联网/ 业务/ 的/ 发展/ ,/ 尽力而为/ 的/ 数据传输/ 服务/ 已/ 远远/ 无法/ 满足/ 当今/ 网络/ 业务/ 的/ 需求/ [/ 5/ ]/ :/ 不仅/ 是/ 简单/ 的/ 建立/ 下/ 一/ 跳/ 路由/ ,/ 还/ 需要/ 实现/ 隧道/ 、/ 访问控制/ 、/ 网络地址/ 翻译/ 、/ QoS/ 队列/ 、/ 流量/ 工程/ 等/ 越来越/ 多/ 的/ 控制/ 功能/ ./ 这些/ 功能/ 需要/ 大量/ 的/ 低层次/ 配置/ 命令/ 去/ 各个/ 网络/ 节点/ 上/ 单独/ 配置/ ./ 这些/ 配置/ 命令/ 和/ 控制/ 功能/ 之间/ 的/ 相关性/ ,/ 使/ 网络/ 控制/ 越来越/ 复杂/ ./ 一方面/ ,/ 目前/ 网络拓扑/ 呈现/ 规模/ 大/ 、/ 复杂度/ 高/ 、/ 不/ 稳定/ 的/ 特点/ ./ 网管/ 人员/ 部署/ 控制/ 逻辑/ 时/ 无法/ 准确/ 获知/ 网络/ 运行状况/ ,/ 为了/ 能/ 适应/ 网络/ 实时/ 状态/ 的/ 改变/ ,/ 不得不/ 部署/ 大量/ 的/ 路由器/ 检测/ 代码/ ./ 这种/ 适应/ 通过/ “/ 揣摩/ ”/ 网络/ 的/ 行为/ 来/ 实现/ ,/ 不但/ 没有/ 实现/ 网络/ 控制/ 逻辑/ 与/ 数据/ 层/ 的/ 无缝/ 融合/ ,/ 还/ 增加/ 了/ 网络/ 控制/ 逻辑/ 的/ 复杂性/ ./ 过于/ 分散/ 的/ 网络/ 状态/ 信息/ 分析/ 和/ 决策/ 容易/ 导致/ 控制/ 逻辑/ 与/ 控制/ 操作/ 的/ 不/ 一致/ ./ 另一方面/ ,/ 网络管理/ 需要/ 借助/ 分布式/ 网络协议/ 间接/ 实现/ ./ 当今/ 业务/ 对/ 网络/ 不断/ 提高/ 的/ 控制/ 功能/ 需求/ ,/ 受到/ 了/ 网络设备/ 交互/ 协议/ 可扩展性/ 的/ 制约/ ./ 控制/ 逻辑/ 的/ 分布式/ 实现/ 难以/ 协调/ ,/ 增加/ 了/ 引入/ 漏洞/ 和/ 脆弱性/ 的/ 几率/ ,/ 导致/ 网络故障/ 的/ 发生/ ,/ 如/ 网络/ 自治/ 系统/ 的/ BGP/ 域间/ 策略/ 冲突/ 导致/ 网络/ 抖动/ 和/ 慢/ 收敛/ 现象/ [/ 6/ ]/ ,/ 使/ 网络/ 复杂度/ 不断/ 增加/ ./ 网络/ 控制/ 与/ 数据/ 层/ 的/ 紧/ 耦合/ 关系/ ,/ 再/ 加上/ 混合式/ 的/ 网络/ 控制/ 模式/ ,/ 加剧/ 了/ 新/ 业务/ 需求/ 与/ 网络/ 控制/ 层/ 可扩展性/ 之间/ 的/ 矛盾/ ,/ 导致/ 网络/ 的/ 控制/ 和/ 管理/ 越来越/ 臃肿/ ./ 2.2/ ./ 3/ 信息/ 多元化/ 和/ 可信/ 保障/ 困难/ 随着/ 网络/ 技术/ 的/ 飞速发展/ 和/ 网络/ 新/ 应用/ 的/ 不断涌现/ ,/ 当前/ 的/ 互联网/ 面临/ 着/ 严峻/ 的/ 安全/ 挑战/ ./ 在/ 传统/ 的/ Internet/ 网络体系/ 中/ ,/ 假设/ 用户/ 是/ 友好/ 信任/ 的/ ,/ 所以/ 网络/ 只/ 需要/ 负责/ 数据/ 的/ 传输/ ,/ 而/ 不/ 需要/ 其它/ 控制/ 功能/ ./ 这一/ 假设/ 不再/ 适用/ 于/ 当今/ 网络/ 所/ 生存/ 的/ 环境/ ./ 目前/ 网络/ 所/ 面临/ 的/ 可信/ 问题/ 日益突出/ :/ 难以/ 识别/ 异常/ 的/ 网络/ 行为/ ,/ 对/ 网络/ 的/ 破坏活动/ 难以/ 遏制/ ;/ 网络/ 可信/ 与/ 安全/ 攻击/ 如/ 拒绝服务/ DDoS/ 攻击/ 、/ 间谍/ 软件/ 、/ 僵尸/ 网络/ 、/ 网络/ 钓鱼/ 等/ 手段/ 层出不穷/ ,/ 这些/ 问题/ 严重威胁/ 了/ 社会/ 和/ 经济/ 的/ 发展/ ./ 虽然/ 目前/ 人们/ 已经/ 认识/ 到/ 安全/ 问题/ 的/ 严重性/ ,/ 试图/ 通过/ 安全补丁/ 的/ 手段/ 加以解决/ ,/ 如/ 增强/ 网络层/ 安全性/ 的/ IPSec/ 、/ 防御/ Dos/ 攻击/ 的/ 互联网/ 业务/ 主动/ 过滤/ 机制/ (/ AITF/ )/ [/ 7/ ]/ 等/ 协议/ ,/ 但/ 目前/ 网络安全/ 控制/ 机制/ 存在/ 明显/ 的/ 局限性/ :/ 大多/ 采用/ 了/ 单一/ 的/ 防御/ 手段/ 、/ 信息安全/ 和/ 打补丁/ 附加/ 的/ 机制/ [/ 8/ ]/ ,/ 功能/ 上/ 的/ 分散化/ 和/ 单一化/ 难以/ 进行/ 有效/ 的/ 整合/ ;/ 这些/ 手段/ 附着/ 在/ 互联网/ 体系结构/ 上/ ,/ 不能/ 解决/ 可信/ 网络/ 的/ 本原/ 问题/ ./ 互联网/ 在/ 设计/ 之初/ 对/ 安全/ 问题/ 考虑/ 不足/ ./ 简单/ 的/ 核心/ 对/ 业务/ 过于/ 透明/ ,/ 控制/ 手段/ 相对/ 薄弱/ ,/ 难以/ 监测/ 到/ 业务/ 层面/ 存在/ 的/ 问题/ ./ 无法/ 区分/ 新/ 业务/ 和/ 网络攻击/ 行为/ [/ 9/ ]/ ./ 缺乏/ 可信/ 与/ 体系/ 架构/ 的/ 融合/ 设计/ ,/ 其中/ 僵化/ 和/ 脆弱/ 的/ 体系结构/ 是/ 导致/ 网络/ 众多/ 脆弱性/ 的/ 一个/ 重要/ 因素/ ./ 未来/ 互联网/ 需要/ 充分/ 的/ 可控/ 能力/ 来/ 解决/ 传统/ 互联网/ 所/ 面临/ 的/ 安全/ 问题/ ,/ 增强/ 系统/ 的/ 鲁棒性/ 并/ 提供/ 系统/ 的/ 安全/ 服务/ ,/ 实现/ 网络/ 的/ 高度/ 可信/ ./ 综上所述/ ,/ 我们/ 有/ 必要/ 对/ 未来/ 网络/ 所/ 应/ 具备/ 的/ 基本/ 属性/ 进行/ 重新/ 审视/ 和/ 总结/ ,/ 以此/ 勾勒/ 出/ 未来/ 网络/ 的/ 发展/ 需求/ 和/ 未来/ 网络/ 技术/ 的/ 研究/ 方向/ ./ 3/ 未来/ 网络/ 的/ 设计/ 要求/ 3.1/ 未来/ 网络/ 发展/ 需求/ 未来/ 网络/ 的/ 参与者/ 从/ 提供/ 服务/ 的/ 视角/ 来看/ ,/ 分为/ 应用/ 服务提供商/ (/ ASP/ )/ 、/ 网络/ 用户/ (/ NUS/ )/ 以及/ 网络服务/ 运营商/ (/ ISP/ )/ ./ 其中/ 应用/ 提供商/ 开发/ 、/ 调试/ 应用/ 程序运行/ 于/ 网络/ ;/ 网络/ 运营商/ 负责/ 维护/ 网络/ 、/ 保障/ 服务/ ;/ 网络/ 用户/ 享受/ 服务/ ./ 这种/ 角色/ 分工/ 模式/ 与/ 现在/ 的/ 网络/ 是/ 一致/ 的/ ,/ 但/ 各个/ 角色/ 的/ 要求/ 则/ 日趋/ 多样化/ :/ 应用/ 提供商/ 希望/ 网络平台/ 能够/ 自/ 适应/ 于/ 网络应用/ ;/ 网络/ 运营商/ 希望/ 能/ 对/ 网络/ 业务/ 充分/ 、/ 便捷/ 的/ 监管/ ;/ 网络/ 用户/ 则/ 希望/ 能够/ 更加/ 灵活/ 地/ 定制/ 自己/ 的/ 业务/ ./ 由此可见/ ,/ 未来/ 网络/ 应/ 具备/ 自/ 适应/ 多种/ 网络/ 主体/ 、/ 多种/ 网络应用/ 的/ 特性/ ,/ 满足/ 不同/ 使用/ 角度/ 用户/ 的/ 友好/ 要求/ ,/ 如图/ 1/ 所示/ ./ 应用/ 提供商/ 希望/ 能够/ 拥有/ 自己/ 的/ 网络/ 操作/ 视图/ ./ 通过/ 这个/ 视图/ 能够/ 便捷/ 、/ 实时/ 、/ 准确/ 地/ 获取/ 网络/ 运行状况/ 数据/ ,/ 在/ 此基础/ 上/ 实现/ 对/ 网络服务/ 资源/ 的/ 细粒度/ 化/ 管理/ 和/ 任务/ 的/ 可靠性/ 调度/ ,/ 同时/ 也/ 能够/ 对/ 网络服务/ 所/ 依托/ 的/ 网络/ 环境参数/ 进行/ 灵活/ 调整/ 、/ 针对性/ 定制/ 和/ 优化/ ./ 网络/ 运营商/ 希望/ 通过/ 自己/ 的/ 网络/ 操作/ 视图/ ,/ 能够/ 充分/ 、/ 实时/ 地/ 获取/ 整体/ 网络/ 的/ 运行状况/ ,/ 并/ 对/ 网络/ 业务/ 进行/ 充分/ 感知/ ,/ 如/ 链路/ 负载/ 率/ 、/ 路由/ 协议/ 收敛性/ 等/ 网络/ 参数/ 和/ 网络/ 业务/ 运行/ 数据/ ,/ 在/ 此基础/ 上/ 有/ 针/ Page5/ 对性/ 地/ 对/ 网络/ 业务/ 流/ 进行/ 调节/ 和/ 引导/ ,/ 以/ 充分发挥/ 网络/ 基础设施/ 和/ 网络资源/ 的/ 使用/ 效率/ ,/ 保证/ 网络/ 业务/ 开展/ 的/ 良好/ 性能/ ;/ 能够/ 从/ 高层次/ 的/ 网络管理/ 逻辑/ 入手/ ,/ 对/ 网络/ 进行/ 便捷/ 的/ 配置/ 和/ 管理/ ;/ 具有/ 一套/ 自动/ 处理/ 逻辑/ ,/ 保证/ 包括/ 应用/ 提供商/ 和/ 网络/ 用户/ 在内/ 的/ 网络/ 参与者/ 的/ 行为/ 始终/ 处于/ 可控/ 、/ 可管/ 和/ 可信/ 的/ 状态/ ,/ 网络/ 活动/ 参与者/ 的/ 任何/ 操作/ 都/ 不/ 影响/ 其它/ 业务/ 的/ 正常/ 运转/ ./ 网络/ 用户/ 希望/ 通过/ 自己/ 的/ 网络/ 操作/ 视图/ ,/ 能够/ 方便/ 地为/ 自己/ 定制/ 一套/ 个性化/ 的/ 产品/ 服务/ ,/ 包括/ 业务/ 名称/ 、/ 用户/ 访问/ 时间/ 、/ 上传/ // 下载/ 带宽/ 、/ 数据包/ 路径/ 要求/ 、/ 数据/ 加密/ 等级/ 和/ 备份/ 规格/ 等/ 一系列/ 在/ 直观/ 上/ 就/ 能够/ 体验/ 到/ 的/ 指标/ 参数/ ,/ 以/ 使/ 个性化/ 这一/ 真正/ 的/ 客户/ 价值/ 属性/ 得到/ 充分/ 满足/ ./ 为了/ 适应/ 上述/ 各个/ 视角/ 对/ 操作/ 自/ 适应/ 的/ 要求/ ,/ 未来/ 网络/ 的/ 体系/ 架构/ 应/ 提供方便/ 感知/ 、/ 操作/ 和/ 控制/ 的/ 接口/ ,/ 并/ 要求/ 这些/ 接口/ 具有/ 灵敏性/ 、/ 准确性/ 和/ 稳定性/ 的/ 自/ 适应/ 特点/ ,/ 保证/ 网络/ 信息/ 能为/ 各个/ 网络/ 主体/ 及时/ 准确/ 获取/ ./ 一方面/ 支持/ 单方/ 或/ 多方/ 联动/ 调整/ 网络/ 的/ 运行/ 状态/ ;/ 另一方面/ 要求/ 保证/ 网络/ 能/ 在/ 网络/ 遭受/ 恶意/ 行为/ 的/ 情况/ 下/ 具有/ 较/ 高/ 的/ 自愈/ 特性/ ./ 3.2/ 未来/ 网络/ 实现/ 指标/ 针对/ 未来/ 网络/ 的/ 设计/ ,/ 我们/ 认为/ 保证/ 网络/ 的/ 可控/ 、/ 可管/ 、/ 可/ 扩展/ 和/ 可信/ 构成/ 了/ 未来/ 网络/ 自/ 适应/ 特性/ 的/ 必要条件/ ,/ 接下来/ 我们/ 从/ 定义/ 和/ 内涵/ 上/ 对/ 上述/ 4/ 个/ 属性/ 进行/ 理论/ 上/ 的/ 讨论/ ./ 定义/ 1/ ./ 可控/ (/ Controllability/ )/ [/ 10/ ]/ ./ 对于/ 目标/ 系统/ ,/ 若/ 存在/ 手段/ 使得/ 系统/ 始终/ 运行/ 在/ 允许/ 状态/ ,/ 为/ 评价/ 可控/ 能力/ ,/ 可以/ 选择/ 相应/ 的/ 指标/ ,/ 如/ 状态/ 称该/ 系统/ 为/ 可控/ 系统/ ./ 形式化/ 定义/ :/ 假设/ 目标/ 系统/ T/ 的/ 状态/ 空间/ 为/ S/ ,/ 允许/ 状态/ 空间/ 为/ Sa/ ,/ 如果/ 存在/ 控制/ f/ 满足/ f/ :/ S/ →/ Sa/ ,/ 那么/ f/ 为/ 控制/ ,/ 目标/ 系统/ T/ 为/ 可控/ 的/ ./ 根据/ 允许/ 状态/ 的/ 不同/ ,/ 可控/ 可以/ 分为/ 状态/ 可控/ 、/ 输出/ 可控/ 和/ 操作/ 可控/ ./ 若/ 允许/ 空间/ 与/ 输入/ 状态/ 无关/ ,/ 称该/ 系统/ 为/ 状态/ 可控/ ;/ 若/ 允许/ 空间/ 与/ 输入/ 状态/ 有关/ ,/ 该/ 系统/ 为/ 输出/ 可控/ ;/ 若/ 允许/ 空间/ 不仅/ 与/ 输入/ 状态/ 有关/ ,/ 而且/ 还/ 与/ 其他/ 参数/ 变量/ (/ 这里/ 称为/ 操作/ )/ 有关/ ,/ 称该/ 系统/ 为/ 操作/ 可控/ ./ 平均/ 转换/ 时间/ 、/ 控制/ 耗费/ 成本/ 等/ ./ 可控/ 网络/ 的/ 可控/ 是/ 指/ 网管/ 人员/ 具有/ 对/ 网络/ 参与者/ 行为/ 、/ 网络/ 运行/ 和/ 网络资源/ 3/ 个/ 方面/ 进行/ 有效/ 控制/ 的/ 能力/ :/ 对/ 网络/ 参与者/ 行为/ 的/ 可控/ 保证/ 对/ 参与者/ 行为/ 的/ 有效/ 监测/ ,/ 及时发现/ 和/ 控制/ 异常/ 行为/ ;/ 对/ 网络/ 运行/ 的/ 可控/ 是/ 指/ 能够/ 对/ 网络/ 参数/ 进行/ 按/ 需/ 配置/ ,/ 及时/ 提取/ 、/ 分析/ 和/ 诊断/ 网络/ 运行/ 状态/ ,/ 对/ 网络/ 异常/ 做出/ 针对性/ 的/ 处理/ ;/ 对/ 网络资源/ 的/ 可控/ 是/ 指/ 对/ 网络/ 物理/ 资源/ 和/ 服务/ 资源/ 进行/ 有效/ 调度/ ,/ 最大化/ 满足用户/ 服务质量/ 需求/ ./ 定义/ 2/ ./ 可管/ (/ Manageability/ )/ ./ 对于/ 正常/ 运行/ 的/ 系统/ ,/ 若/ 存在/ 手段/ 管理/ 和/ 调度/ 系统资源/ ,/ 使得/ 系统/ 具有/ 不同/ 的/ 运行/ 性能/ ,/ 称该/ 系统/ 为/ 可管/ 系统/ ./ 形式化/ 定义/ :/ 假设/ F/ =/ {/ fi/ }/ 为/ 使/ 目标/ 系统/ T/ 正常/ 运行/ 的/ 控制策略/ 集合/ ,/ P/ (/ fi/ )/ 表示/ 策略/ fi/ 下/ 的/ 系统/ 性能/ ,/ 若/ 存在/ 函数/ M/ :/ F/ →/ F/ ,/ 若/ 存在/ M/ (/ f1/ )/ =/ f2/ ,/ 使得/ P/ (/ f1/ )/ ≠/ P/ (/ f2/ )/ ,/ 那么/ M/ 为/ 管理/ ,/ 目标/ 系统/ T/ 为/ 可管/ 的/ ./ 可管常/ 被/ 应用/ 于/ 商业/ 和/ 社会科学/ 领域/ ,/ 常见/ 的/ 有/ 商业/ 管理/ 、/ 人事管理/ 等/ ;/ 在/ 计算机网络/ 领域/ ,/ 文献/ [/ 11/ ]/ 从/ 实施/ 的/ 角度/ 较为/ 详细/ 地/ 讨论/ 了/ 网络管理/ 与/ 可/ 管理网络/ 的/ 关系/ ./ 根据/ 定义/ ,/ 对于/ 给定/ 的/ 考察/ 指标/ (/ 如/ 机密性/ 、/ 吞吐/ 率/ 等/ )/ ,/ 系统/ 关于/ 该/ 指标/ 的/ 可/ 管性/ 可用/ 下列/ 方法/ 评价/ :/ (/ 1/ )/ 极差/ 法/ :/ |/ maxf/ ∈/ F/ {/ P/ (/ f/ )/ }/ -/ minf/ ∈/ F/ {/ P/ (/ f/ )/ }/ |/ ./ (/ 2/ )/ 比值/ 法/ :/ maxf/ ∈/ F/ {/ P/ (/ f/ )/ }/ 对于/ 系统/ 的/ 可/ 管性/ ,/ 可以/ 用/ 下列/ 方法/ 评价/ :/ (/ 1/ )/ 支持/ 类别/ :/ |/ Ia/ |/ ,/ 其中/ I/ 为/ 指标/ 集合/ ,/ Ia/ 为/ 支持/ 的/ 指标/ 集合/ ,/ 且/ Ia/ ∈/ I/ ./ (/ 2/ )/ 加权/ 平均/ :/ 1Page6/ 其中/ Ia/ 为/ 支持/ 的/ 指标/ 集合/ ,/ PJ/ (/ f/ )/ 为/ 指标/ J/ 下/ 的/ 性能/ ./ 网络/ 的/ 可/ 管理/ 是/ 指/ 提供方便/ 、/ 灵活/ 的/ 管理手段/ ,/ 可以/ 对/ 网络/ 运行/ 的/ 各个方面/ 实施/ 全面/ 、/ 高效/ 的/ 管理/ [/ 3/ ]/ ./ 可管性/ 要/ 对/ 网络/ 运行/ 期间/ 的/ 各种/ 状态/ 进行/ 及时/ 、/ 充分/ 的/ 感知/ ,/ 在/ 网络/ 环境/ 和/ 资源/ 受到/ 内外/ 因素/ 干扰/ 的/ 情况/ 下/ ,/ 对/ 网络/ 运行/ 参数/ 和/ 网络/ 活动/ 参与者/ 的/ 行为/ 进行/ 持续性/ 的/ 监测/ 、/ 分析/ 和/ 决策/ ,/ 对/ 网络设备/ 和/ 网络协议/ 的/ 控制参数/ 进行/ 自/ 适应/ 优化/ 配置/ ,/ 保证/ 为/ 用户/ 提供/ 能够/ 达到/ 预期/ 服务质量/ 约定/ (/ Service/ -/ LevelAgreement/ ,/ SLA/ )/ 的/ 网络服务/ ./ 定义/ 3/ ./ 可/ 扩展/ (/ Scalability/ )/ [/ 12/ ]/ ./ 对于/ 目标/ 系统/ ,/ 如果/ 无论/ 设施/ 和/ 业务/ 规模/ 如何/ 变化/ ,/ 服务质量/ 和/ 系统/ 开销/ 始终保持/ 一定/ 关系/ ,/ 那么/ 称该/ 系统/ 为/ 可/ 扩展/ 的/ ./ 形式化/ 定义/ :/ 对于/ 目标/ 系统/ T/ ,/ Δ/ T/ 表示/ 系统/ 的/ 变化/ 量/ ,/ Q/ (/ / )/ 表示/ 系统/ / 的/ 服务质量/ ,/ C/ (/ / )/ 表示/ 系统/ / 的/ 系统/ 开销/ ,/ R/ (/ Q/ (/ / )/ ,/ C/ (/ / )/ )/ 表示/ 服务质量/ 与/ 系统/ 开销/ 的/ 关系/ 函数/ ,/ 令/ B/ 表示/ 关系/ 界限/ ,/ 若/ 对于/ 任意/ 的/ Δ/ T/ 都/ 有/ R/ (/ T/ +/ Δ/ T/ )/ / B/ ,/ 那么/ 称/ 系统/ T/ 为/ 可/ 扩展/ 的/ ,/ 相应/ 的/ R/ (/ T/ +/ Δ/ T/ )/ 可以/ 表示/ 系统/ 的/ 可扩展性/ ./ 特殊/ 地/ ,/ 可以/ 取/ R/ (/ Q/ (/ / )/ ,/ C/ (/ / )/ )/ =/ Q/ (/ / )/ max/ Δ/ T/ {/ R/ (/ T/ +/ Δ/ T/ )/ }/ 来/ 衡量/ 目标/ 系统/ T/ 的/ 可扩展性/ ./ 关于/ 服务质量/ 和/ 系统/ 开销/ 的/ 度量/ 可以/ 参阅/ 文献/ [/ 13/ ]/ ./ 定义/ 4/ ./ 可信/ (/ Trustworthy/ )/ ./ 对于/ 目标/ 系统/ T/ ,/ 其/ 输出/ 总能/ 达到/ 期望/ 的/ 目标/ 状态/ ,/ 且/ 独立/ 于/ 输入/ ,/ 称该/ 系统/ T/ 为/ 可信/ 的/ ./ 形式化/ 定义/ :/ 系统/ 可以/ 用/ 函数/ D/ :/ In/ →/ Out/ 来/ 表示/ ,/ 对于/ 输入/ i/ ∈/ In/ ,/ A/ (/ i/ )/ 为/ 状态/ i/ 对应/ 的/ 期望/ 状态/ ,/ 若/ 对于/ 任意/ 的/ 输入/ i/ ,/ 都/ 有/ D/ (/ i/ )/ ∈/ A/ (/ i/ )/ ,/ 那么/ 系统/ T/ 为/ 可信/ 的/ ./ 可信/ 的/ 定义/ 具有/ 较强/ 的/ 扩展性/ ,/ 例如/ 针对/ 安全/ 领域/ 可/ 被/ 规定/ 为/ 可/ 信任/ [/ 14/ ]/ ,/ 对/ 传统/ 的/ 安全/ 概念/ 在/ 内涵/ 和/ 外延/ 上/ 进行/ 较/ 好/ 的/ 拓展/ ;/ 针对/ 用户/ 行为/ ,/ 该/ 定义/ 又/ 可/ 被/ 特殊化/ 为/ 行为/ 可信/ [/ 15/ ]/ 等/ ./ 但是/ ,/ 上述/ 可信/ 的/ 定义/ 依赖于/ 系统/ 期望/ 状态/ ,/ 往往/ 需要/ 大量/ 的/ 测试/ 和/ 分析/ ,/ 增加/ 了/ 对系统/ 可信性/ 评价/ 的/ 难度/ ,/ 成为/ 了/ 该/ 领域/ 研究/ 的/ 重点/ ,/ 相应/ 的/ 模型/ 和/ 评价/ 方法/ 可以/ 参考文献/ [/ 14/ -/ 18/ ]/ ./ 对于/ 计算机网络/ 而言/ ,/ 可信/ 具有/ 更为/ 具体/ 的/ 定义/ ,/ 常/ 被/ 称为/ 可信/ 网络/ ,/ 指/ 的/ 是/ 网络/ 和/ 用户/ 的/ 行为/ 及其/ 结果/ 总是/ 可/ 预期/ 与/ 可/ 管理/ 的/ 计算机网络/ [/ 8/ ]/ ./ 重点/ 强调/ 了/ 两层/ 含义/ :/ 信任/ 是/ 可/ 预期/ 的/ 前提/ ;/ 可/ 预期/ 是/ 基于/ 信任/ 的/ ./ 通过/ 对/ 上述/ 定义/ 分析/ ,/ 我们/ 不难/ 发现/ 可控/ 保证/ 了/ 网络/ 的/ 可操作性/ ,/ 是/ 实现/ 自/ 适应/ 网络/ 的/ 基础/ ;/ 可管/ 为/ 网络资源/ 的/ 动态/ 管理/ 提供/ 可能/ ,/ 是/ 实现/ 自/ 适应/ 网络/ 的/ 条件/ ;/ 可/ 扩展/ 强调/ 了/ 系统/ 的/ 可/ 发展/ ,/ 保证/ 了/ 系统/ 能/ 在/ 保证/ 服务质量/ 的/ 情况/ 下/ 实现/ 系统/ 开销/ 最小/ ;/ 可信/ 通过/ 设置/ 可信/ 根/ 和/ 可信/ 链/ 的/ 方法/ 给出/ 了/ 实现/ 自/ 适应/ 网络/ 的/ 手段/ ./ 总之/ ,/ 设计/ 自/ 适应/ 的/ 未来/ 网络/ ,/ 可控/ 、/ 可管/ 、/ 可/ 扩展/ 和/ 可信/ 已/ 成为/ 了/ 必须/ 考虑/ 的/ 指标/ ./ 3.3/ 未来/ 网络/ 设计/ 方法论/ 针对/ 未来/ 网络/ 发展/ 的/ 需求/ 和/ 实现/ 的/ 指标/ 要求/ ,/ 用/ T1/ ,/ T2/ ,/ …/ ,/ Tn/ 表示/ 网络/ 设计所/ 需/ 实现/ 的/ 目标/ ,/ 并用/ OPT/ :/ Tx/ 表示/ 目标/ Tx/ 的/ 最优/ 值/ ;/ 用/ fij/ 表示/ 第/ i/ 种/ 主体/ 的/ 第/ j/ 种/ 需求/ ,/ 其中/ i/ ∈/ {/ ISP/ ,/ NUS/ ,/ ASP/ }/ ,/ j/ 为/ 整数/ ,/ 那么/ 网络/ 设计/ 等价/ 于/ 求解/ 如下/ 的/ 规划/ 问题/ :/ 针对/ 上述/ 问题/ ,/ 一个/ 可行/ 的/ 方法/ 是/ 转化/ 多/ 目标/ 规划/ 为/ 多个/ 单/ 目标/ 规划/ 并/ 的/ 问题/ ,/ 采用/ 分而治之/ 的/ 方法/ 实现/ ,/ 本文/ 将/ 从/ 目标/ 函数/ 的/ 可/ 分离/ 与/ 约束条件/ 可/ 分离/ 角度/ 来/ 探讨/ 未来/ 网络/ 的/ 可行/ 架构/ ./ 接下来/ ,/ 本文/ 首先/ 分析/ 现有/ 自/ 适应/ 网络/ 的/ 相关/ 技术/ ,/ 从/ 硬件/ 设备/ 支撑/ 和/ 体系/ 架构/ 等/ 方面/ 阐述/ 它们/ 在/ 未来/ 网络/ 中/ 的/ 应用/ ,/ 并/ 在/ 此基础/ 上/ 给/ 出自/ 适应/ 的/ 未来/ 网络体系结构/ 框架/ (/ AFIF/ )/ 和/ 实现/ 方式/ ./ 4/ 已有/ 自/ 适应/ 网络/ 的/ 实现/ 技术/ 4.1/ 主动/ 控制技术/ 通过/ 对/ 网络设备/ 增加/ 管理/ 接口/ ,/ 方便/ 使用者/ 根据/ 需要/ 对/ 网络设备/ 进行/ 管理/ ,/ 是/ 一种/ 较为/ 直观/ 的/ 主动/ 管理/ 技术/ ,/ 其中/ OpenFlow/ ①/ 是/ 较为/ 典型/ 的/ 代表/ ./ OpenFlow/ 由/ Nicira/ 公司/ 的/ 首席/ 技术/ 官/ MartinCasado/ 在/ 2007/ 年/ 提出/ ,/ 其/ 初衷/ 是/ 通过/ 对/ 交换机/ 或/ 路由器/ 定义/ 一套/ 软件/ 操作/ API/ ,/ 建立/ 可编程/ 的/ 、/ 开放式/ 的/ 虚拟化/ 设备/ 平台/ ./ 可以/ 方便/ 地/ 将/ 路由/ 协议/ 、/ 安全/ 模型/ 、/ 寻址/ 方案/ 等/ 策略/ 应用/ 于/ 网络/ ,/ 实现/ 网络/ 优化/ 目标/ ./ OpenFlow/ 体系结构/ 如图/ 2/ 所示/ ,/ 由/ 支持/ OpenFlow/ 协议/ API/ 的/ 交换机/ 、/ 路由器/ 和/ 中心/ 控制器/ (/ Controller/ )/ 组成/ ./ 操作/ 对象/ 被/ 定义/ 为/ 网络/ 中/ 的/ “/ 流/ ”/ ,/ 即/ 根据/ 过滤/ ①/ http/ :/ // // www/ ./ openflow/ ./ org/ // Page7/ 规则/ 筛选/ 出/ 的/ 一组/ 定义/ 的/ 数据/ 帧/ 或者/ 数据包/ (/ 如源/ // 目的/ 端口号/ 和/ IP地址/ 等/ )/ ,/ 以及/ 与/ 流/ 对应/ 的/ 一组/ 规范化/ 操作/ (/ 如/ 转发/ 数据包/ 、/ 打包/ 传送/ 给/ 控制器/ 、/ 丢弃/ 数据包/ 等/ )/ ./ OpenFlow/ 的/ 中央/ 控制器/ 与/ 交换机/ 之间/ 通过/ 建立/ 一对一/ 或者/ 多/ 对/ 一/ 的/ 安全/ 信息/ 传输/ 通道/ ,/ 将/ 网络/ 配置/ 信息/ 发送给/ 交换机/ 或/ 路由器/ 节点/ ;/ 节点/ 通过/ 配置/ 一组/ 规则/ 用来/ 定义/ 一个/ “/ 流/ ”/ 及其/ 附属/ 的/ 某些/ 操作/ 序列/ ,/ 并/ 根据/ 自己/ 的/ 类型/ 执行/ 这些/ 规则/ ./ OpenFlow/ 处理/ 网络/ 数据包/ 有/ 两种/ 方式/ :/ 第一种/ 通过/ 配置/ 网络/ 交换/ 节点/ ,/ 将/ 流经/ 交换/ 节点/ 的/ 所有/ 数据包/ 实时/ 路由/ 给/ 中央/ 控制器/ 或/ 网络/ 处理器/ 处理/ ①/ ;/ 第二种/ 是/ 中央/ 控制器/ 在/ 全网/ 节点/ 上/ 预先/ 配置/ 业务/ 流/ 逻辑/ ,/ 通过/ 修改/ 各个/ 节点/ 的/ 流/ 规则/ 定义/ 流/ 操作/ 序列/ ,/ 节点/ 通过/ 依次/ 匹配/ FlowTables/ 和/ GroupTables/ 流/ 规则/ ,/ 对/ 流量/ 数据包/ 进行/ “/ 管道/ ”/ (/ pipeline/ )/ 式/ 的/ 操作/ ②/ ,/ 实现/ 对/ 数据包/ 的/ 序列化/ 处理/ ./ 相/ 比较而言/ ,/ 前者/ 节点/ 不/ 需要/ 额外/ 注入/ 流/ 过滤/ 规则/ ,/ 易于/ 进行/ 部署/ 和/ 调试/ ,/ 适用/ 于/ 新/ 协议/ 的/ 功能/ 正确性/ 验证/ ;/ 后者/ 更/ 易/ 实现/ 节点/ 一致性/ 的/ 预先/ 部署/ ,/ 适用/ 于/ 大/ 范围/ 的/ 网络/ 业务/ 部署/ ./ OpenFlow/ 将/ 网络/ 控制权/ 与/ 网络/ 物理/ 底层/ 硬件/ 的/ 数据交换/ 分离/ 独立/ 实现/ ,/ 改变/ 了/ 传统/ 网络/ 中/ 交换机/ 和/ 路由器/ 控制数据/ 包转发/ 的/ 模式/ ;/ 控制/ 层/ 软件/ 通过/ 与/ 网络设备/ 标准接口/ 对/ 网络流量/ 进行/ 探针/ 式/ 抽取/ ,/ 建立/ 网络/ 实时/ 状态/ 和/ 历史/ 状态/ 信息/ 的/ 中央/ 视图/ ;/ 将/ 用户/ 管理/ 界面/ 与/ 网络设备/ 细节/ 分离/ ,/ 方便/ 了/ 用户/ 的/ 精细化/ 管理/ ./ 目前/ ,/ 随着/ 由谷歌/ 、/ 微软/ 、/ Verizon/ 、/ 雅虎/ 发起/ 建立/ 的/ OpenNetworkingFoundation/ (/ ONF/ )/ 机构/ 的/ 推动/ ,/ 包括/ Broadcom/ 、/ Cisco/ 、/ Ericsson/ 、/ Juniper/ 等/ 在内/ 的/ 几乎/ 所有/ 主流/ 网络设备/ 都/ 支持/ Openflow/ 规范/ ./ 但是/ OpenFlow/ 同样/ 面临/ 着/ 巨大/ 挑战/ ③/ :/ 一方面/ ,/ 目前/ 的/ 协议/ 规范/ 仅/ 实现/ 了/ 简单/ 的/ 、/ 低级/ 别的/ 底层/ 网络接口/ ,/ 对/ 操作/ 接口/ 的/ 更/ 高层次/ 包装/ 和/ 抽象/ 仍/ 具有/ 较大/ 难度/ ;/ 另一方面/ ,/ OpenFlow/ 未/ 经过/ 大规模/ 的/ 网络/ 部署/ 测试/ ,/ 其/ 可扩展性/ 和/ 安全/ 容错性/ 都/ 受到/ 质疑/ ./ 4.2/ 主动/ 管理/ 技术/ 通过/ 对/ 网络设备/ 管理/ 接口/ 进行/ 高层次/ 封装/ ,/ 方便/ 使用者/ 根据/ 需要/ 对/ 网络/ 整体/ 进行/ 统一/ 管理/ ,/ 其中/ NOX/ [/ 20/ ]/ 是/ 一个/ 具有/ 代表性/ 的/ 开源/ OpenFlow/ 管理器/ ./ NOX/ 实现/ 了/ 一个/ 提供/ 集中式/ 开发/ 环境/ 的/ 网络/ 操作/ 中间件/ ,/ 该/ 开发/ 环境/ 提供/ 了/ 针对/ 全网/ 的/ 通用/ 标准/ 开发/ 接口/ ,/ 这个/ 接口/ 具有/ 集中式/ 的/ 编程/ 模式/ 和/ 高层次/ 网络/ 抽象/ 两个/ 特性/ :/ (/ 1/ )/ 集中式/ 编程/ 模式/ 是/ 指/ 在/ 综合/ 处理/ 收集/ 到/ 网络/ 的/ 状态/ 信息/ 之后/ 再/ 进行/ 功能/ 实现/ ,/ 在/ 开发者/ 看来/ 整个/ 网络/ 就/ 像/ 一台/ 具有/ 统一/ 资源管理/ 和/ 接口/ 的/ 计算机/ ;/ (/ 2/ )/ 高层次/ 网络/ 抽象/ 是/ 指/ 在/ 以/ OpenFlow/ 作为/ 底层/ 网络接口/ 的/ 基础/ 上/ 对/ 网络/ 操作/ 进行/ 了/ 高层次/ 的/ 抽象/ 和/ 封装/ ,/ 为/ 应用程序/ 的/ 开发/ 提供/ 高层次/ 接口/ ./ NOX/ 系统/ 组成/ 如图/ 3/ 所示/ ,/ 包括/ 若干/ 支持/ OpenFlow/ 的/ 交换机/ 和/ 软件/ 控制系统/ ./ 软件/ 控制系统/ 包括/ 若干/ 分布/ 在/ 不同/ 服务器/ 上/ 的/ 控制器/ 进程/ 和/ 一个/ 存储/ 在/ 数据库/ 中/ 的/ 唯一/ 网络/ 视图/ ,/ 网络/ 视图/ 为/ 网络应用/ 程序/ 和/ 网络/ 控制程序/ 提供/ 了/ 包括/ 交换机/ 级/ 网络拓扑/ 、/ 网络/ 用户/ 位置/ 、/ 网络/ 终端/ 位置/ 在内/ 的/ 网络/ 物理/ 资源/ 的/ 高层次/ 视图/ ,/ 以及/ 对/ 网络设备/ 名称/ 和/ 地址/ 的/ 映射/ 绑定/ ./ NOX/ 编程/ 接口/ 采用/ 了/ 网络/ 事件驱动/ 的/ ①/ ②/ ③/ Page8/ 方式/ ,/ 除了/ 包括/ 交换机/ 加入/ 和/ 退出/ 、/ 数据包/ 接收/ 、/ 交换机/ 状态/ 更改/ 等/ 底层/ 网络/ 事件/ 之外/ ,/ NOX/ 应用/ 还/ 包括/ 一些/ 如/ 用户/ 权限/ 审核/ 、/ 网络服务/ 发现/ 、/ 重建/ 交换机/ 级/ 拓扑/ 等/ 较/ 高层次/ 的/ 应用/ 事件/ 提供/ 给/ 上层/ 程序/ 使用/ ./ NOX/ 还/ 提供/ 了/ 网络/ 开发/ 中/ 的/ 高层次/ 服务/ 库/ 模块/ ,/ 包括/ 路由/ 模块/ 、/ 快速/ 包/ 分类/ 、/ 标准/ 网络服务/ 以及/ 基于/ 策略/ 的/ 网络/ 过滤/ 模块/ 等/ ./ 采用/ NOX/ 接口/ 实现/ 的/ 网络应用/ 系统/ 可以/ 大大降低/ 工作量/ 和/ 加快/ 开发进度/ ,/ 如/ 全网/ 访问/ 控制系统/ Ethane/ [/ 21/ ]/ 使用/ C++/ 实现/ 需要/ 45000/ 多行/ 代码/ ,/ 而/ 采用/ NOX/ 实现/ 只/ 需/ 几千/ 行/ 代码/ ./ 但/ NOX/ 目前/ 的/ 应用/ 仅限于/ 实验室/ 网络/ ,/ 在/ 体系/ 架构/ 方面/ 并未/ 考虑/ 实际/ 网络/ 中/ 应用程序/ 大规模/ 并发/ 的/ 情形/ ,/ 在/ 任务/ 处理/ 方面/ 能否/ 支持/ 大规模/ 的/ 实际/ 网络/ 还有/ 待/ 验证/ ,/ 一个/ 运行/ 在/ 普通/ 计算机/ 上/ 的/ NOX/ 控制/ 进程/ 大约/ 能够/ 支持/ 每秒/ 100000/ 个流/ 的/ 初始化/ [/ 20/ ]/ ./ 与/ NOX/ 项目/ 类似/ ,/ SANE/ [/ 22/ ]/ 在/ 网络/ 控制/ 层上/ 定义/ 了/ 一个/ 保护层/ ,/ 用以/ 管理/ 大型/ 互联网/ 的/ 所有/ 连接/ ,/ 对/ 访问/ 服务/ 的/ 所有/ 路由/ 和/ 访问/ 控制策略/ 进行/ 集中式/ 的/ 统一/ 监管/ ,/ 提高/ 网络管理/ 的/ 鲁棒性/ 和/ 安全性/ ;/ Maestro/ [/ 23/ ]/ 将/ 网络管理/ 功能/ 通用/ 模块化/ ,/ 实现/ 了/ 并行处理/ 的/ OpenFlow/ 控制器/ ,/ 其/ 目标/ 是/ 将/ 网络/ 中/ 的/ 功能/ 抽象/ 为/ 便于/ 定制/ 和/ 组装/ 的/ 单一/ 模块/ ,/ 具有/ 易/ 维护/ 、/ 高可靠性/ 的/ 优势/ ,/ 在/ 多/ 核/ 处理器/ 系统/ 上/ 实现/ 近似/ 线性/ 的/ 任务/ 处理/ 复杂度/ ;/ Onix/ [/ 24/ ]/ 是/ 由/ Nicira/ 公司/ 维护/ 的/ ,/ 面向/ 产品/ 的/ 分布式/ NOX/ 实现/ ,/ 它/ 完成/ 了/ 一套/ 互联网/ 级/ 的/ OpenFlow/ 部署/ 方案/ ;/ DIFANE/ [/ 25/ ]/ 通过/ 对/ OpenFlow/ 的/ 底层/ 设备/ 接口/ 进行/ 高层次/ 的/ 功能/ 封装/ ,/ 为/ 交换机/ 提供/ 了/ 丰富/ 的/ 策略/ 配置/ 集/ ,/ 从而/ 提高/ 了/ 网络/ 控制器/ 的/ 性能/ ,/ 降低/ 了/ 任务/ 处理/ 复杂度/ ./ 4.3/ 服务/ 定制/ 技术/ 通过/ 重新/ 设计/ IP/ 网络体系结构/ ,/ 实现/ 对/ 网络服务/ 的/ 可/ 定制/ 和/ 可/ 管理/ ./ 其中/ NDN/ (/ NamedDataNet/ -/ working/ )/ [/ 26/ ]/ 是/ 一种/ 具有/ 代表性/ 的/ 开放式/ 网络/ 存储/ 资源管理/ 技术/ ./ NDN/ 也/ 称/ CCN/ (/ Content/ -/ CentricNetworks/ )/ ,/ 该/ 项目/ 来源于/ FutureInternetArchitecture/ (/ FIA/ )/ program/ ,/ 其/ 独特/ 的/ 以/ 数据/ 为/ 中心/ 的/ 思想/ 改变/ 了/ 当今/ 互联网/ 所/ 广泛/ 采用/ 的/ 数据传输/ 模式/ ./ IP地址/ 同时/ 包含/ 标识/ 和/ 位置/ 信息/ 的/ 双重/ 属性/ 是/ 导致/ 目前/ 互联网/ 路由/ 可扩展性/ 、/ 移动性/ 差/ 的/ 根本原因/ ./ IP/ 网络/ 采用/ 基于/ 网络地址/ 的/ 数据/ 传输方式/ ,/ 用户/ 请求/ 数据/ 时/ 首先/ 要/ 获知/ 拥有/ 数据/ 主机/ 的/ 网络地址/ ,/ 然后/ 再/ 与/ 该/ 网络地址/ 进行/ 数据/ 的/ 请求/ 和/ 传输/ ./ NDN/ 设计/ 人员/ 认为/ 网络/ 本来/ 的/ 属性/ 是/ 为了/ 数据/ 分发/ 而/ 不是/ 为了/ 节点/ 间/ 的/ 通信/ ,/ 因此/ 致力于/ 使/ 互联网/ 不/ 考虑/ 内容/ 存储/ 所在/ 的/ 物理/ 位置/ ,/ 直接/ 提供/ 面向/ 内容/ 的/ 功能/ ./ NDN/ 对/ 网络/ 信息/ 进行/ 了/ 命名/ ,/ 结构/ 可以/ 是/ 层次化/ 的/ 可/ 聚合/ 形式/ ,/ 也/ 可以/ 是/ 扁平化/ 的/ 方式/ ./ NDN/ 的/ 层次结构/ 如图/ 4/ 所示/ ,/ NDN/ 数据传输/ 对象/ 是/ 大小/ 固定/ 的/ 数据/ 分片/ (/ chunk/ )/ ,/ 由此/ 取代/ 了/ 传统/ 网络结构/ 中/ IP/ 的/ 细腰/ ./ 与/ 数据/ 分/ 片层/ 相邻/ 的/ 分别/ 是/ 负责/ NDN/ 策略/ 缓存/ 策略/ 、/ 数据/ 请求/ 策略/ 、/ 数据/ 转发/ 策略/ 的/ 策略/ 层/ 和/ 保证/ 数据完整性/ 、/ 可靠性/ 的/ 安全/ 层/ ./ NDN/ 网络/ 中有/ 两种/ 基本/ 的/ 包/ 格式/ :/ 数据/ 请求/ 包/ (/ Interestpackage/ )/ 和/ 数据/ 返回/ 包/ (/ Datapackage/ )/ ./ 客户/ 请求/ 数据/ 只/ 需要/ 在/ 数据/ 请求/ 包中/ 注明/ 数据/ 的/ 名称/ ,/ 而/ 不/ 需要/ 声明/ 去/ 哪里/ 获取/ ./ 路由器/ 节点/ 上/ 需要/ 维护/ 3/ 个表/ 结构/ :/ (/ 1/ )/ ContentStore/ (/ CS/ )/ 用来/ 缓存数据/ 以及/ 更新/ 缓存/ 策略/ ;/ (/ 2/ )/ ForwardingInformationBase/ (/ FIB/ )/ 用来/ 存储/ 下/ 一/ 跳/ 转发/ 接口/ 和/ 内容/ 名字/ 的/ 映射/ 表/ ,/ 由/ 基于/ 名称/ 的/ 路由/ 协议/ 来/ 生成/ ;/ (/ 3/ )/ PendingInterestTable/ (/ PIT/ )/ 用来/ 记录/ 数据/ 的/ 请求/ 接口/ 记录/ ,/ 从而/ 建立/ 数据/ 返回/ 包/ 的/ 传输/ 路径/ ,/ 同时/ 聚合/ 邻居/ 节点/ 对/ 相同/ 内容/ 的/ 请求/ ./ 路由/ 节点/ 在/ 收到/ 数据/ 请求/ 包后/ ,/ 首先/ 在/ CS/ 表中/ 进行/ 查找/ ,/ 如果/ 命中/ 就/ 返回/ 数据/ ,/ 若/ 没有/ 命中/ 就/ 查询/ PIB/ 表/ ,/ PIB/ 表中/ 没有/ 该/ 数据/ 的/ 请求/ 接口/ 记录/ 则/ 加入/ PIB/ 表/ ,/ 然后/ 再/ 根据/ FIB/ 表/ 和/ 策略/ 层/ 配置/ 选择/ 一个/ 或/ 多个/ 接口/ 转发/ 该/ 数据/ 请求/ ./ 当/ 数据/ 返回/ 包在/ 由/ PIB/ 表/ 建立/ 的/ 反向/ 路径/ 传输/ 时/ ,/ 各个/ 路由/ 节点/ 会/ 根据/ 一定/ 的/ 策略/ 对/ 数据/ 进行/ 缓存/ ,/ 然后/ 再/ 依照/ PIB/ 表中/ 的/ 请求/ 端口/ 记录/ ,/ 将/ 数据/ 复制/ 多份/ 转发给/ 各个/ 请求/ 接口/ ./ NDN/ 这种/ 独特/ 的/ 根据/ 命名/ 的/ 路由/ 和/ 转发/ 方式/ 具有/ 很多/ 天然/ 优势/ :/ 首先/ 数据/ 请求/ 与源/ // 目的/ 网络/ 地/ Page9/ 址/ 解/ 耦/ ,/ 有效/ 地/ 支持/ 网络/ 终端/ 的/ 移动性/ ,/ 在/ PIB/ 表/ 聚合/ 请求/ 以及/ 多个/ FIB/ 接口/ 转发/ 的/ 机制/ 支持/ 多路径/ 路由/ ,/ 从而/ 天然/ 支持/ 数据/ 分组/ 的/ 广播/ 和/ 组播/ ;/ 其次/ 客户/ 在/ 请求/ 数据服务/ 时/ 不/ 限定/ 提供/ 资源/ 的/ 服务器/ ,/ NDN/ 节点/ 上/ 的/ 策略/ 层/ 可以/ 针对/ 不同/ 数据业务/ 的/ 不同/ 服务质量/ 要求/ 分配/ 不同/ 的/ 服务器资源/ ,/ 策略/ 层/ 缓存/ 选取/ 策略/ 灵活/ 多变/ [/ 28/ ]/ ,/ 再/ 加上/ 内容/ 的/ 分布式/ 存储/ [/ 29/ ]/ ,/ 就/ 可以/ 方便/ 地/ 实现/ 网络/ 业务/ 的/ 灵活/ 定制/ 和/ 网络资源/ 的/ 灵活/ 配置/ ;/ 再次/ NDN/ 所/ 采用/ 无/ 连接/ 的/ 数据/ 传输方式/ ,/ 改变/ 了/ 传统/ 数据传输/ 中/ 只/ 保障/ 数据/ 容器/ (/ 网络/ 链路/ 、/ 服务器/ )/ 安全/ ,/ 而/ 不是/ 数据/ 本身/ 安全/ 的/ 方式/ ,/ 对/ 数据/ 本身/ 进行/ 数字签名/ 和/ 加密/ 来/ 保证/ 信息/ 的/ 完整性/ 和/ 可靠性/ ;/ 最后/ NDN/ 网络/ 技术/ 与/ 现有/ 网络体系结构/ 具有/ 较/ 好/ 的/ 兼容性/ ,/ 支持/ 渐进式/ 部署/ ./ 与/ NDN/ 类似/ 采用/ 以/ 信息/ 为/ 中心/ 的/ 网络/ (/ ICN/ )/ 技术/ 还有/ PSIRP/ (/ Publish/ -/ SubscribeInternetRou/ -/ tingParadigm/ )/ ①/ [/ 30/ ]/ 技术/ ,/ 它/ 采用/ 汇聚/ 点/ (/ Rendez/ -/ vous/ )/ 对/ 内容/ 进行/ 统一/ 管理/ ,/ 数据源/ 在/ 汇聚/ 点/ 发布/ 信元/ (/ Informationobject/ )/ ,/ 数据/ 接收者/ 在/ 汇聚/ 点/ 通过/ 层次化/ 的/ DHT/ 方法/ 查询/ 已/ 发布/ 的/ 信元/ ,/ 获得/ 可以/ 被/ 解析/ 和/ 路由/ 的/ 信元/ 标识符/ 来/ 标示/ 数据源/ 与/ 接收者/ 之间/ 的/ 通信/ 信道/ ,/ 接收者/ 以此/ 向/ 数据源/ 进行/ 消息/ 的/ 订阅/ 和/ 注册/ ;/ 4WARD/ -/ NetInf/ ②/ 为了/ 保证/ 命名/ 空间/ 的/ 持久性/ 和/ 内容/ 的/ 独立性/ 使用/ 了/ 平面/ 命名/ 空间/ ,/ 其/ 数据/ 的/ 请求/ 和/ 路由/ 方法/ 采用/ 了/ 基于/ 内容/ 名称/ 的/ DHT/ 解析/ 和/ IP/ 路由/ 协议/ ;/ TRIAD/ [/ 31/ ]/ 使用/ 了/ 与/ IP/ 体系/ 兼容/ 的/ 层次化/ 内容/ 命名/ 空间/ ,/ 采用/ 了/ 与/ NDN/ 一致/ 的/ 洪泛/ 查找/ 路由/ 策略/ ;/ DONA/ (/ Data/ -/ OrientedNetworkingArchitecture/ )/ [/ 32/ ]/ 的/ 内容/ 名称/ 解析/ 采用/ 了/ 层次化/ 的/ 体系/ 架构/ ,/ 数据/ 发布者/ 通过/ Register/ 消息/ 发布/ 和/ 注册/ 数据/ ,/ 数据/ 请求者/ 通过/ Find/ 消息/ 层层/ 查询/ 离/ 自己/ 最近/ 的/ 数据/ ,/ 在/ 返回/ 数据/ 时/ 数据源/ 既/ 可以/ 与/ 请求者/ 建立/ 基于/ IP/ 的/ 连接/ ,/ 也/ 可以/ 使用/ 基于/ 数据/ 的/ 路由/ 方法/ ,/ 依照/ 内容/ 名称/ 解析/ 出/ 的/ 路径/ 逐跳/ 转发/ ./ 5/ 已有/ 自/ 适应/ 网络/ 的/ 体系结构/ 5.1/ 控制/ 优先/ 的/ 层次化/ 网络体系/ 4D/ (/ Decision/ ,/ Dissemination/ ,/ Discovery/ ,/ Data/ )/ [/ 33/ -/ 34/ ]/ 由/ 美国/ 卡内基/ 梅隆/ 大学/ 的/ 研究/ 课题组/ 提出/ ,/ 该/ 体系/ 遵循/ 3/ 个/ 设计/ 原则/ :/ 第一个/ 是/ 满足/ 网络/ 级/ 的/ 控制目标/ ,/ 将/ 网络/ 如/ 性能/ 、/ 可靠性/ 、/ 策略/ 等/ 方面/ 的/ 配置/ 目标/ 与/ 具体/ 的/ 网络/ 元素/ 相/ 分离/ ,/ 实现/ 对/ 网络/ 的/ 可靠/ 配置/ ,/ 避免/ 使用/ 网络/ 节点/ 级/ 命令/ 分别/ 配置/ 各个/ 节点/ ,/ 网络/ 级/ 配置/ 目标/ 转/ 成特定/ 协议/ 或/ 机制/ 目标/ 时/ 容易/ 产生/ 的/ 语义/ 错误/ ;/ 第二个/ 是/ 提供/ 一个/ 准确/ 、/ 完整/ 的/ 网络/ 数据/ 层/ 视图/ ,/ 这个/ 网络/ 视图/ 包括/ 各个/ 网络/ 组件/ 的/ 物理/ 属性/ 快照/ 以及/ 拓扑/ 、/ 流量/ 信息/ 、/ 网络/ 事件/ 等/ 实时/ 信息/ ;/ 第三个/ 设计/ 原则/ 是/ 指/ 网络/ 的/ 控制/ 逻辑/ 具备/ 对/ 网络/ 数据/ 层/ 直接/ 控制/ 的/ 能力/ ,/ 网络/ 控制/ 逻辑/ 不再/ 与/ 运行/ 在/ 网络/ 节点/ 的/ 分布式/ 协议/ 紧/ 耦合/ ,/ 两者/ 相互之间/ 的/ 关联性/ 仅/ 存在/ 于/ 控制/ 逻辑/ 的/ 输出/ 接口/ ./ 组成/ :/ 如图/ 5/ 所示/ ,/ 4D/ 网络/ 的/ 体系/ 机构/ 由/ 4/ 个/ 层面/ (/ 1/ )/ 位于/ 最上层/ 的/ 是/ 决策层/ (/ Decision/ )/ ,/ 它/ 是/ 由/ 许多/ 决策/ 单元/ 组成/ ,/ 用来/ 接收/ 网络/ 管理者/ 发出/ 的/ 如/ 网络/ 可/ 达/ 矩阵/ 、/ 负载/ 均衡/ 目标/ 等/ 网络/ 级/ 的/ 控制/ 逻辑/ ,/ 通过/ 算法/ 运算/ 将/ 其/ 直接/ 转换成/ 数据/ 层/ 可/ 直接/ 执行/ 的/ 如转/ 发表/ 条目/ 、/ 包/ 过滤/ 规则/ 、/ 队列/ 参数/ 等/ 网络/ 配置/ 指令/ ;/ (/ 2/ )/ 体系结构/ 中枢/ 是/ 信令/ 分发/ 层/ (/ Dissemina/ -/ tion/ )/ ,/ 它/ 为/ 其它/ 三层/ 提供/ 了/ 高效/ 、/ 可靠/ 的/ 消息/ 传输/ 通道/ ,/ 这个/ 通道/ 与/ 数据/ 层面/ 共享/ 物理/ 通道/ ,/ 但/ 逻辑/ 上/ 与/ 数据/ 层面/ 独立/ ,/ 在/ 网络/ 路由/ 协议/ 还/ 未/ 建立/ 转/ 发表/ 或/ 发生/ 故障/ 时/ ,/ 4D/ 系统/ 的/ 配置/ 信令/ 依然/ 能够/ 完整/ 地/ 通过/ 信令/ 分发/ 层/ 到达/ 网络/ 节点/ ;/ (/ 3/ )/ 信息/ 发现/ 层/ (/ Discovery/ )/ 实时/ 发现/ 网络/ 物理/ 设备/ 及其/ 属性/ ,/ 包括/ 网络设备/ 属性/ (/ 设备/ 接口/ 、/ FIB/ 容量/ )/ 、/ 邻居/ 发现/ 、/ 网络/ 链路/ 属性/ (/ 设备/ 容量/ )/ 等/ ,/ 登记/ 网络/ 物理/ 设备/ 进行/ 统一/ 命名/ 管理/ ,/ 实时/ 更新/ 各个/ 物理/ 设备/ 的/ 状态/ 标志/ 位/ ,/ 这些/ 信息/ 提供/ 给/ 决策层/ 生成/ 准确/ 、/ 完整/ 的/ 网络/ 数据/ 层/ 视图/ ;/ (/ 4/ )/ 位于/ 体系结构/ 最底层/ 的/ 是/ 数据传输/ 层/ (/ DataTransportation/ )/ ,/ 这/ 一层/ 依照/ 决策层/ 输出/ 的/ 配置/ 指令/ 处理/ 网络/ 中/ 的/ 数据包/ ,/ 实现/ 在/ 网络/ 控制/ 逻辑/ 下/ 的/ 数据/ 转发/ 功能/ ,/ 同时/ 还/ 收集/ 网络/ 中/ 的/ 环境/ 信息/ 提供/ 给/ 信息/ 发现/ 层/ ./ ①/ ②/ Page104D/ 网络/ 将/ 网络/ 控制/ 逻辑/ 从/ 网络/ 分布式系统/ 中/ 彻底/ 剥离/ 出来/ ,/ 如/ 网络/ 路径/ 计算/ 功能/ 不再/ 由/ 路由/ 协议/ 生成/ ;/ 支持/ 网络/ 级/ 的/ 配置/ 目标/ ,/ 提升/ 了/ 网络管理/ 的/ 抽象/ 程度/ ,/ 使得/ 网管/ 人员/ 可以/ 专心/ 控制/ 逻辑设计/ ,/ 不必/ 顾及/ 分布式/ 网络协议/ 细节/ ,/ 简化/ 了/ 网络/ 控制/ ,/ 同时/ 也/ 保证/ 了/ 控制/ 逻辑/ 和/ 网络/ 运行/ 状态/ 的/ 一致性/ ,/ 大大降低/ 了/ 由于/ 配置/ 错误/ 造成/ 性能/ 、/ 安全/ 方面/ 的/ 风险/ ./ 4D/ 网络/ 受到/ 很大/ 挑战/ :/ 如今/ 互联网/ 节点/ 呈现/ 规模/ 大/ ,/ 层次/ 复杂/ 的/ 特征/ ,/ 网络/ 状态/ 不/ 稳定/ 、/ 变化/ 大/ ,/ 路由器/ 需要/ 处理/ 成千上万/ 的/ 前缀/ 信息/ ,/ 信息/ 发现/ 层/ 难以/ 生成/ 稳定/ 、/ 准确/ 的/ 全网/ 级/ 网络/ 视图/ 供/ 决策层/ 使用/ ;/ 信令/ 分发/ 层/ 需要/ 建立/ 独立/ 的/ 、/ 不/ 借助于/ 现有/ 网络协议/ 的/ 传输/ 体系/ ,/ 虽然/ 其/ 数据/ 流量/ 较/ 小/ ,/ 但/ 要/ 维护/ 这些/ 数据/ 连接/ 通道/ ,/ 又/ 不/ 影响/ 实际/ 网络/ 的/ 运行/ 难度/ 较大/ ;/ 4D/ 网络/ 架构/ 缺乏/ 安全/ 方面/ 的/ 考虑/ ,/ 采用/ 集中式/ 的/ 控制/ 方式/ ,/ 信令/ 分发/ 层/ 和/ 决策层/ 受到/ 攻击/ 会/ 对/ 网络/ 整体/ 的/ 控制权/ 造成/ 威胁/ ./ 5.2/ 管理/ 优先/ 的/ 并行/ 化/ 网络体系/ GENI/ 项目/ [/ 35/ ]/ 全/ 称为/ GlobalEnvironmentforNetworkingInnovation/ ,/ 即/ 全球化/ 网络/ 创新/ 环境/ 计划/ ,/ 由/ 美国/ 自然科学/ 基金/ 在/ 2005/ 年/ 发起/ ,/ 其/ 目标/ 在于/ 构建/ 一个/ 全新/ 、/ 安全/ 、/ 普/ 适于/ 所有/ 设备/ ,/ 支持/ 多种/ 新型/ 网络体系结构/ 进行/ 大规模/ 部署/ 、/ 实验/ 和/ 研究/ 的/ 基础/ 网络设施/ ,/ 特别/ 是/ 对/ 互联网/ 进行/ 革命/ 式/ 设计/ 及/ 体系结构/ 的/ 相关/ 研究/ ./ GENI/ 的/ 体系/ 架构/ 如图/ 6/ 所示/ ,/ 从上到下/ 依次/ 被/ 划分/ 成/ 3/ 个/ 层次/ :/ 用户服务/ 层/ 、/ GENI/ 管理/ 核心/ (/ GENIManagementCore/ ,/ GMC/ )/ 以及/ 物理层/ ./ 处于/ 体系/ 最底层/ 的/ 是/ 物理层/ ,/ 物理层/ 包括/ 路由器/ 、/ 处理器/ 、/ 数据链/ 路/ 、/ 无线/ 设备/ 等/ 物理/ 设施/ ,/ 其/ 设计/ 目标/ 是/ 为了/ 确保/ 物理/ 资源/ 、/ 布局/ 和/ 网络拓扑/ 能够/ 充分/ 支持/ GENI/ 的/ 研究/ 目标/ ./ 用户服务/ 层/ 位于/ 体系/ 的/ 最/ 顶部/ ,/ 为/ GENI/ 的/ 各类/ 用户/ 提供/ 一套/ 丰富/ 的/ 支撑/ 服务/ 集/ ./ 通过/ 这套/ 服务/ 集合/ ,/ 基础设施/ 所有者/ 可以/ 对/ 其/ 拥有/ 的/ 底层/ 设施/ 资源/ 进行/ 分配/ 或/ 制定/ 相应/ 的/ 分配/ 策略/ ;/ GENI/ 管理员/ 可以/ 对/ GENI/ 物理层/ 进行/ 管理/ ,/ 包括/ 部署/ 新/ 设备/ ,/ 淘汰/ 老损/ 设备/ ,/ 安装/ 或/ 更新/ 系统软件/ ,/ 监测/ GENI/ 网络/ 的/ 性能/ 、/ 功能/ 和/ 安全/ ;/ 为/ 研究/ 人员/ 提供/ 丰富/ 的/ 程序库/ 和/ 灵活/ 的/ 语言/ 执行/ 环境/ ,/ 使/ 之/ 可以/ 借助于/ GMC/ 接口/ 方便/ 地/ 创建/ 和/ 发布/ 实验/ 成果/ ,/ 自定义/ 资源分配/ 或者/ 调试/ 软件/ ;/ GENI/ 开发人员/ 可以/ 获得/ GENI/ 的/ 物理/ 底层/ 信息/ ,/ 部署/ 高层次/ 的/ 监控/ 、/ 测量/ 、/ 审计/ 和/ 资源/ 发现/ 服务/ ./ GENI/ 管理/ 核心/ 位于/ 物理层/ 和/ 用户服务/ 层/ 之间/ ,/ GMC/ 作为/ GENI/ 系统核心/ 目的/ 在于/ 定义/ 一个/ 稳定/ 、/ 前瞻/ 、/ 持久/ 的/ 系统/ 框架/ ,/ 通过/ 该/ 管理/ 服务/ 和/ 操作/ 的/ 框架/ ,/ 能够/ 实现/ 用户/ 和/ 高层/ 服务/ 对/ 底层/ GENI/ 资源/ 的/ 访问/ 和/ 控制/ ./ 该/ 框架/ 包括/ 组件/ 、/ 切片/ 和/ 集合体/ 3/ 个/ 概念/ :/ 组件/ 是/ 指/ 物理/ 资源/ (/ CPU/ 、/ 存储/ 、/ 硬盘/ 、/ 带宽/ )/ 、/ 逻辑/ 资源/ (/ 文件/ 描述/ 、/ 端口号/ )/ 和/ 综合性/ 资源/ (/ 包转发/ 路径/ )/ 的/ 封装/ 体/ ,/ GMC/ 通过/ 组件/ 管理/ 接口/ (/ CM/ )/ 将/ 组件/ 资源分配/ 给/ 不同/ 的/ 用户/ 任务/ ./ 组件/ 具备/ 4/ 个/ 特性/ :/ (/ 1/ )/ 多路复用/ ./ 支持/ 以/ 虚拟化/ 或/ 资源/ 分片/ 的/ 方式/ 供/ 多用户/ 使用/ ,/ 虚拟/ 接口/ (/ VirtualInter/ -/ face/ )/ 可以/ 根据/ 切片/ 定制/ 信息/ 与/ 网络资源/ 动态/ 绑定/ ;/ (/ 2/ )/ 可控/ ./ 组件/ 的/ 行为/ 可控/ ,/ 可以/ 限定/ 组件/ // 分片/ 的/ 数据/ 发送/ 速率/ 、/ 可/ 访问/ 的/ 组件/ // 分片/ 等/ 一系列/ 安全/ 保障机制/ ,/ 当/ 发生/ 异常/ 时能/ 迅速/ 切断/ 组件/ 与/ 网络/ 之间/ 的/ 联系/ ,/ 并/ 重置/ 组件/ 到/ 安全/ 状态/ ;/ (/ 3/ )/ 虚拟/ 接口/ ./ 虚拟/ 接口/ 是/ 指/ 任务/ 切片/ 访问/ 网络/ 的/ 接入/ 方式/ ,/ 包括/ Socket/ 接口/ 、/ 虚/ 链路/ 接口/ 、/ 虚拟/ 无线/ // 有线/ 接口/ ;/ (/ 4/ )/ 层次化/ 管理/ 授权/ ./ 切片/ 如图/ 7/ 所示/ 是/ 指/ 横跨/ GENI/ 组件/ 集合/ 由/ GMC/ 创建/ 和/ 管理/ 的/ 一系列/ 分片/ ,/ 研究/ 人员/ 在/ 这些/ 分片/ 上/ 配置/ 、/ 加载/ 和/ 执行/ 代码/ 来/ 运行/ 试验/ 程序/ ./ 集合体/ 是/ 指/ 由/ 一些/ 具有/ 共同/ 性质/ 的/ GENI/ 元素/ 构成/ 的/ 集合/ ,/ 这些/ 元素/ 可以/ 是/ 组件/ 或/ 集合体/ ,/ 它们/ 具有/ 如/ 在/ 同一个/ 物理/ 位置/ 的/ 、/ 共享/ 相同/ 物理/ 链接/ 、/ 被/ 同一/ 机构/ 管理/ 、/ 相同/ 配置/ 等/ 共同/ 性质/ ,/ 对/ 集合体/ 元素/ 的/ 操作/ 通过/ 集合体/ 管理/ 接口/ (/ AM/ )/ 完成/ ./ ①/ GENI/ -/ SE/ -/ SY/ -/ RQ/ -/ 01.9/ :/ GENISystemsRequirements/ ,/ Page11GMC/ 安全性/ 原则/ 包括/ 明确/ 灵活/ 的/ 定义/ 方式/ 、/ 最小/ 权限/ 原则/ (/ 只/ 给予/ 系统/ 组件/ 能/ 保证/ 其/ 履行/ 工作/ 的/ 最小/ 权限/ )/ 、/ 迅速/ 反应/ 原则/ (/ 当/ 系统/ 密钥/ 发生/ 泄露/ 或/ 被/ 篡改/ 后/ ,/ 能够/ 迅速/ 地/ 撤销/ 或/ 更换/ 密钥/ ,/ 重置/ 受/ 影响/ 的/ 节点/ )/ 、/ 问题/ 可/ 审计/ 性/ 、/ 安全/ 自治/ 性/ 、/ 安全/ 框架/ 的/ 可扩展性/ 和/ 易用性/ 、/ 低/ 安全/ 开销/ 等/ 原则/ ./ GENI/ 支持/ 在/ 管理/ 框架/ 下定义/ 的/ 操作/ 接口/ ,/ 其/ 可编程/ 性为/ 研究/ 人员/ 提供/ 了/ 必要/ 的/ 灵活性/ ,/ 开放式/ 体系结构/ 能够/ 同时/ 支持/ 多组/ 实验/ 和/ 多用户/ 应用/ ./ 多种/ 新型/ 网络体系结构/ 可以/ 同时/ 配置/ 运行/ ,/ 实现/ 了/ 同一个/ 物理/ 网络/ 承载/ 多个/ 不同/ 逻辑/ 网络/ 的/ 设计模式/ ./ GENI/ 安全/ 可控/ 的/ 体系结构/ 对/ 实验/ 进行/ 约束/ ,/ 消除/ 外/ 在/ 的/ 、/ 不/ 受控/ 的/ 因素/ 影响/ ,/ 避免/ 实验/ 本身/ 影响/ 到/ 网络/ 上/ 的/ 其它/ 业务/ 以及/ GENI/ 系统/ 本身/ 的/ 稳定性/ ,/ 确保/ 整个/ GENI/ 系统/ 运行/ 在/ 一个/ 安全/ 和/ 可控/ 的/ 状态/ ./ 5.3/ 侧重/ 可信/ 的/ 综合化/ 网络体系/ 文献/ [/ 36/ ]/ 提出/ 了/ 基于/ 信任/ 维护/ 与/ 行为/ 控制/ 的/ 可信/ 网络/ ,/ 认为/ 可信/ 网络/ 就是/ 一个/ 行为/ 可以/ 预期/ 的/ 网络/ ,/ 行为/ 状态/ 可/ 监测/ 、/ 行为/ 结果/ 可/ 评估/ 和/ 异常/ 行为/ 可/ 控制/ 作为/ 组成/ 可信/ 系统/ 的/ 三要素/ ,/ 通过/ 可信/ 网络/ 的/ 信任/ 维护/ 与/ 行为/ 机制/ ,/ 实现/ 了/ 可信/ 网络/ 行为/ 动态/ 过程/ 的/ 闭环/ 机制/ ./ 如图/ 8/ 所示/ ,/ 维护/ 信任/ 信息/ 的/ 过程/ 采用/ 了/ 流水线/ 式/ 的/ 处理/ 方式/ :/ 信任/ 信息/ 采集/ 提供/ 了/ 具体/ 的/ 采集/ 手段/ ,/ 按/ 采集/ 手段/ 划分/ 为/ 集中式/ 安全/ 检测/ 、/ 分布式/ 节点/ 自检/ 和/ 第三方/ 通告/ 三种/ ,/ 这/ 三种/ 方式/ 在/ 部署/ 成本/ 、/ 可行性/ 、/ 准确度/ 方面/ 相互/ 补充/ ;/ 信任/ 信息/ 在/ 经过/ 存储/ 、/ 传播/ 之后/ ,/ 到达/ 信任/ 分析/ 与/ 决策/ 部分/ ,/ 通过/ 行为/ 可信性/ 分析/ 之后/ 输出/ 行为/ 的/ 信任/ 等级/ 和/ 相应/ 的/ 处理/ 策略/ ,/ 以此/ 驱动/ 和/ 协调/ 需要/ 采取/ 的/ 行为/ 控制/ ;/ 行为/ 控制/ 的/ 手段/ 根据/ 处理/ 的/ 方式/ 包括/ 被动式/ 预警/ 处理/ 、/ 主动式/ 免疫/ 隔离/ 两种/ :/ 前者/ 通过/ 自/ 适应/ 的/ 调整/ 或/ 限制/ 全部/ 或/ 部分/ 网络资源/ 的/ 访问/ 权限/ ,/ 同时/ 报告/ 潜在/ 的/ 或/ 已/ 发生/ 的/ 破坏性/ 行为/ ,/ 后者/ 是/ 指/ 在/ 攻击/ 和/ 破坏/ 行为/ 出现/ 之前/ 的/ 一种/ 主动式/ 防御/ 措施/ ./ 文献/ [/ 37/ ]/ 提出/ 了/ 可信/ 控制/ 体系/ 模型/ ,/ 该/ 模型/ 如图/ 9/ 所示/ 将/ 网络/ 分为/ 数据传输/ 平面/ 和/ 可信/ 控制/ 平面/ ,/ 其中/ 数据传输/ 层面/ 负责/ 承载/ 网络/ 数据业务/ ,/ 同时/ 保障/ 网络协议/ 的/ 可信性/ ;/ 可信/ 控制/ 平面/ 包括/ 一组/ 可信/ 协议/ 和/ 控制/ 信令/ ,/ 采用/ 了/ 水平/ 分层/ 的/ 结构/ ,/ 包括/ 身份/ 管理/ 、/ 生存/ 管理/ 、/ 行为/ 管理/ 等/ 可信/ 管理/ ./ 在/ 该/ 模型/ 中/ 数据/ 平面/ 和/ 可信/ 控制/ 平面/ 相互依存/ :/ 可信/ 控制/ 平面/ 监控/ 数据/ 平面/ 的/ 同时/ ,/ 也/ 向/ 其/ 提供/ 例如/ 网络/ 可信度/ 的/ 查询/ 接口/ 和/ 业务/ 运行/ 模式/ 的/ 信任/ 定制/ 接口/ ./ 文献/ [/ 38/ ]/ 提出/ 了/ 一体化/ 可信/ 网络/ 的/ 架构/ ,/ 如图/ 10/ 所示/ ,/ 提出/ 了/ 两层/ 的/ 网络体系结构/ :/ 交换/ 路由/ 层/ 的/ 目标/ 是/ 在/ 一个/ 可信/ 的/ 网络平台/ 上/ 提供/ 多元化/ 的/ 网络/ 和/ 终端/ 接入/ ,/ 保证/ 信息/ 交互/ 的/ 可信性/ 和/ 移动性/ ./ 交换/ 路由/ 层/ 采用/ 了/ 接入/ 标识/ 和/ 交换/ 路由/ 标识/ 分离/ 的/ 方法/ ,/ 接入/ 层/ 使用/ 代表/ 用户/ 身份/ 的/ 接入/ 标识/ 转发/ 数据/ ,/ 以此/ 实现/ 网络/ 用户/ 的/ 接纳/ 控制/ ,/ 通过/ 网络/ 的/ 接纳/ 控制/ 对/ 接入/ 终端/ 进行/ 严格/ 的/ 鉴权/ ,/ 确保/ 网络/ 用户/ 的/ 身份/ 合法性/ 、/ 隐私/ 安全性/ 以及/ 行为/ 可/ 信任/ [/ 15/ ]/ ,/ 保证/ Page12/ 了/ 网络/ 的/ 可控性/ 和/ 可/ 管性/ ,/ 在/ 核心层/ 使用/ 代表/ 终端/ 地址/ 的/ 交换/ 路由/ 标识/ 进行/ 控制/ 管理/ 和/ 路由/ 交换/ ,/ 保证/ 了/ 用户/ 身份/ 的/ 隐私/ 性/ ;/ 普适/ 服务/ 层/ 使用/ 了/ 服务/ 标识/ 和/ 服务/ 描述/ 的/ 方法/ ,/ 实现/ 对/ 网络/ 中/ 的/ 资源/ 和/ 服务/ 进行/ 统一/ 的/ 描述/ 和/ 管理/ ,/ 同时/ 支持/ 多路径/ 的/ 传输/ 协议/ ./ 6/ 已有/ 技术/ 和/ 框架/ 的/ 对比/ 分析/ 本文/ 在/ 前两节/ 介绍/ 了/ 自/ 适应/ 网络/ 关键技术/ 和/ 体系/ 架构/ 的/ 研究进展/ ,/ 详细/ 阐述/ 和/ 分析/ 了/ 各种/ 技术/ 的/ 主要/ 研究/ 目标/ 、/ 研究/ 思路/ 以及/ 具体/ 的/ 框架/ 实现/ 模型/ ./ 表/ 1/ 自/ 适应/ 网络/ 关键技术/ 和/ 框架/ 对比/ 分析/ 分类/ 名称/ 关键技术/ 体系/ 框架/ 基于/ 信任/ 维护/ 与/ 一体化/ 可信/ 网络/ 从表/ 1/ 中/ 可以/ 看出/ ,/ 目前/ 对于/ 自/ 适应/ 网络体系/ 框架/ 的/ 研究/ 对/ 网络/ 控制/ 层/ 的/ 功能/ 进行/ 了/ 层次/ 上/ 的/ 重新/ 设计/ 和/ 划分/ ,/ 对/ 各种/ 网络/ 业务/ 具有/ 较/ 好/ 的/ 灵活性/ ,/ 表/ 1/ 对/ 现有/ 的/ 自/ 适应/ 网络/ 关键技术/ 和/ 体系/ 框架/ 进行/ 了/ 综合/ 对比/ 分析/ ./ 在/ 自/ 适应/ 网络/ 的/ 关键技术/ 以及/ 体系/ 框架/ 研究/ 中/ ,/ 将/ 网络/ 的/ 控制权/ 从/ 网络/ 数据/ 层/ 抽取/ 出来/ ,/ 实行/ 统一化/ 的/ 网络管理/ 体系/ ,/ 能够/ 获得/ 很/ 好/ 的/ 控制/ 交互性/ ,/ 但/ 对/ 网络/ 统一化/ 控制/ 管理/ 对于/ 抗击/ 网络/ 鲁棒性/ 、/ 抗击/ 网络/ 恶意/ 行为/ 攻击/ 方面/ 具有/ 天生/ 的/ 弱势/ ,/ 因此/ 控制/ 的/ 安全性/ 是/ 必须/ 考虑/ 的/ 一个/ 重要/ 方面/ ;/ 以/ 网络/ 控制权/ 作为/ 基础/ ,/ 对/ 网络/ 的/ 控制/ 业务/ 进行/ 合适/ 粒度/ 的/ 服务/ 封装/ 可以/ 大大提高/ 网络/ 维护/ 、/ 应用/ 业务/ 的/ 开发/ 和/ 部署/ 效率/ ,/ 减轻/ 网络管理/ 人员/ 和/ 应用程序/ 开发人员/ 的/ 负担/ ./ 研究/ 内容/ 网络/ 控制/ 接口/ 通用/ 规范/ 、/ 网络/ 中央/ 视图/ 网络资源/ 高层次/ 视图/ 、/ 高层次/ 网络服务/ 集/ √/ —/ √/ ×/ √/ —/ 内容/ 命名/ 体系/ 、/ 基于/ 内容/ 的/ 路由/ 算法/ 、/ 基于/ 内容/ 的/ 安全/ 、/ 网络/ 业务/ 的/ 策略/ 模型/ 统一/ 的/ 网络/ 高层/ 视图/ 、/ 网络/ 级/ 配置/ 目标/ 翻译/ 、/ 独立/ 于/ 网络/ 路由/ 的/ 信令/ 传输/ 可编程/ 技术/ 、/ 资源/ 虚拟化/ 切片/ 、/ 安全/ 可控/ 实验/ 可信/ 协议/ 、/ 控制/ 信令/ 设计/ 、/ 控制/ 平面/ 水平/ 分层/ 体系结构/ 设计/ 、/ 可控性/ 及/ 可/ 生存性/ 设计/ 、/ 建立/ 网络/ 用户/ 行为/ 可信/ 模型/ 接入/ 控制/ 管理/ 技术/ 、/ 可信/ 路由/ 及/ 服务质量/ 、/ 多流/ 传输技术/ 、/ 网络/ 监测/ 管理/ 技术/ 相比/ 于/ 目前/ 的/ IP/ 网络/ ,/ 大大降低/ 了/ 网络/ 控制/ 层/ 的/ 负担/ ,/ 但/ 也/ 存在/ 两个/ 突出/ 问题/ :/ 首先/ 缺乏/ 统一/ 的/ 框架/ 体系/ ,/ 如何/ 定义/ 一个/ 统一/ 的/ 、/ 基于/ 自/ 适应/ 网络/ 关键技术/ Page13/ 的/ 体系/ 框架/ ,/ 在/ 这个/ 框架/ 中/ 能够/ 把/ 现有/ 的/ 技术/ 进行/ 很/ 好/ 的/ 融合/ 是/ 本文/ 提出/ 并/ 解决/ 的/ 一个/ 问题/ ;/ 其次/ 如何/ 对/ 网络/ 控制/ 的/ 安全性/ 进行/ 衡量/ 和/ 评估/ ,/ 在/ 保证/ 网络/ 控制/ 统一/ 管理/ 的/ 优点/ 下/ ,/ 确保/ 网络/ 控制权/ 的/ 合法性/ 是/ 迫切需要/ 解决/ 的/ 另/ 一个/ 问题/ ./ 7/ 自/ 适应/ 的/ 未来/ 网络/ 架构/ 通过/ 以上/ 的/ 讨论/ ,/ 我们/ 认为/ 自/ 适应/ 的/ 未来/ 网络/ 不仅/ 应/ 满足/ 可控/ 、/ 可管/ 、/ 可/ 扩展/ 和/ 可/ 信任/ 的/ 要求/ ,/ 而且/ 还应/ 满足/ 建设/ 和/ 管理/ 成本/ 最优/ 的/ 要求/ ./ 因此/ ,/ 在/ 自/ 适应/ 未来/ 网络体系/ 架构设计/ 中/ ,/ 应/ 遵循/ 以下/ 几个/ 原则/ :/ (/ 1/ )/ 功能/ 分层/ 原则/ ./ 对/ 整个/ 框架/ 的/ 逻辑/ 功能/ 进行/ 分层/ 设计/ ,/ 能够/ 降低/ 整个/ 逻辑/ 功能/ 框架/ 的/ 复杂度/ ,/ 通过/ 各个/ 功能/ 层/ 之间/ 的/ 标准接口/ 进行/ 逻辑/ 上/ 的/ 重组/ ;/ (/ 2/ )/ 最小/ 模块/ 功能化/ 原则/ ./ 在/ 进行/ 模块/ 划分/ 时/ ,/ 在/ 保持/ 模块/ 功能/ 逻辑/ 的/ 基础/ 上/ ,/ 将/ 不可分割/ 的/ 原子/ 功能/ 独立/ 实现/ ,/ 加上/ 统一/ 的/ 外部/ 接口/ ,/ 以/ 通用化/ 的/ 原则/ 构建/ 模块/ ;/ (/ 3/ )/ 模块/ 独立化/ 原则/ ./ 各个/ 逻辑/ 功能/ 层里/ 的/ 具体/ 实现/ 要/ 模块化/ ,/ 根据/ 最小/ 模块/ 功能化/ 原则/ 进行/ 模块化/ 划分/ ,/ 对外/ 定义/ 通用/ 的/ 调用/ 接口/ 和/ 标准/ 调用/ 参数/ ,/ 内部/ 功能/ 实现/ 规范化/ 、/ 标准化/ ,/ 保证/ 功能模块/ 图/ 12AFIF/ 体系/ 框架/ 之间/ 的/ 独立性/ ./ 为了/ 帮助/ 未来/ 网络/ 的/ 研究/ 人员/ 清晰/ 地/ 划分/ 各/ 功能/ 组成/ 的/ 外延/ 和/ 内涵/ ,/ 集中精力/ 实现/ 各个/ 功能/ ,/ 我们/ 构建/ 了/ 一个/ 自/ 适应/ 的/ 未来/ 网络体系结构/ 框架/ (/ AFIF/ )/ ,/ 从/ 应用/ 服务提供商/ 、/ 网络/ 用户/ 和/ 网络服务/ 运营商/ 对/ 网络/ 需求/ 的/ 角度/ 出发/ ,/ 实现/ 可信/ 前提/ 下/ 网络/ 的/ 细粒度/ 控制/ 和/ 管理/ (/ 见图/ 11/ )/ ./ AFIF/ 体系结构/ 框架/ 如图/ 12/ 所示/ ,/ 由/ 开发/ 管理/ 服务/ 、/ 分布式/ 控制/ 服务/ 、/ 贯穿/ 其中/ 的/ 可信/ 中枢/ 层/ 以及/ 网络/ 环境/ 4/ 个/ 部分/ 组成/ ,/ 其中/ 点/ 线框/ 定义/ 了/ 完整/ 的/ 一套/ 从/ 网络/ 控制/ 逻辑/ 作用/ 到/ 网络设备/ 及其/ 存储/ 的/ 操/ Page14/ 作/ 框架/ ,/ 点/ 划线/ 框/ 定义/ 了/ 从/ 网络设备/ 和/ 网络/ 存储/ 中/ 采集/ 信息/ 生成/ 高层次/ 的/ 统一/ 网络/ 视图/ 功能/ ,/ 虚/ 线框/ 定义/ 了/ 自/ 适应/ 系统/ 中/ 的/ 自/ 维护/ 服务/ ./ 7.1/ 控制/ 管理/ 服务/ 开发/ 管理/ 服务/ 由/ 许多/ 开发/ 管理/ 终端/ 组成/ ,/ 这些/ 开发/ 管理/ 终端/ 自由/ 分布/ 在/ 网络/ 中/ ,/ 每个/ 管理/ 终端/ 都/ 需要/ 从/ 网络/ 运营商/ 处/ 购买/ 网络管理/ 服务/ ,/ 并/ 进行/ 相应/ 的/ 注册/ ,/ 获得/ 局限于/ 所/ 开发/ 应用/ 运行/ 范围/ 的/ 网络/ 参数/ 管理/ 授权/ ./ 每个/ 开发/ 管理/ 终端/ 包括/ 一个/ 用户/ 操作/ 接口/ ,/ 可以/ 接收/ 应用/ 开发/ 管理/ 的/ 高层次/ 网络/ 控制/ 逻辑/ ,/ 如/ 直观/ 的/ 网络/ 可/ 达/ 矩阵/ 、/ 流量/ 工程/ 等/ 控制/ 逻辑/ 以及/ 用户服务/ 需求/ ./ 网络服务/ 接口/ 为/ 用户/ 操作/ 接口/ 提供/ 开发/ 网络服务/ 需要/ 的/ 高层次/ 服务/ 库/ 模块/ ,/ 包括/ 路由/ 模块/ 、/ 快速/ 包/ 分类/ 模块/ 、/ 标准/ 网络服务/ 模块/ 以及/ 基于/ 策略/ 的/ 网络/ 过滤/ 模块/ 等/ ,/ 方便/ 网络应用/ 程序/ 的/ 开发/ 和/ 管理工作/ ./ 分布式/ 控制/ 服务/ 包括/ 应用/ 协调/ 层/ 、/ 资源/ 虚拟/ 层/ 、/ 设备/ 控制/ 层/ 和/ 设备/ 抽象/ 层/ 4/ 个/ 部分/ ./ 大量/ 的/ 分布式/ 网络/ 控制/ 逻辑/ 作用/ 在/ 同一个/ 网络/ 上/ ,/ 需要/ 在/ 多个/ 网络/ 控制/ 逻辑/ 之间/ 对/ 网络资源/ 进行/ 集中/ 协调/ 和/ 调度/ ,/ 优化/ 上层/ 应用服务/ 集/ 的/ 并发/ 执行/ ,/ 因此/ 在/ 应用/ 协调/ 层/ 对/ 网络/ 业务/ 的/ 应用层/ 业务/ 进行/ 多/ 目标/ 优化/ ①/ [/ 39/ ]/ ./ 访问/ 冲突检测/ 模块/ 和/ 并发/ 访问控制/ 模块/ 用来/ 检测/ 和/ 处理/ 上层/ 应用程序/ 对/ 相同/ 网络资源/ 并发/ 操作/ 时/ 产生/ 的/ 语义/ 冲突/ ,/ 最大化/ 满足/ 各个/ 网络/ 控制/ 逻辑/ 对/ 网络资源/ 的/ 需求/ ;/ 资源/ 虚拟/ 层/ 对/ 网络服务/ 进行/ 拆分/ 后/ ,/ 再/ 根据/ 规则/ 进行/ 重组/ ,/ 从而/ 充分/ 支持/ 细粒度/ 的/ 多/ 服务/ 并发/ 执行/ 、/ 实现/ 任务/ 的/ 最优化/ 融合/ ,/ 同时/ 网络/ 物理/ 设备/ 也/ 在/ 虚拟化/ 拆分/ 和/ 重组/ 后/ 提供/ 给/ 多个/ 应用服务/ ;/ 设备/ 控制/ 层/ 通过/ 对/ 已/ 有效/ 融合/ 的/ 网络/ 控制/ 逻辑/ 集/ 进行/ 层层/ 拆分/ 和/ 编译/ ,/ 将/ 其/ “/ 汇编/ 化/ ”/ 成可/ 直接/ 作用/ 于/ 网络/ 节点/ 、/ 在/ 网络/ 节点/ 上/ 直接/ 执行/ 的/ 控制指令/ ,/ 同时/ 确保/ 应用程序/ 的/ 运行/ 时间/ 、/ 开销/ 、/ 可靠性/ 等/ 性能指标/ ;/ 设备/ 抽象/ 层/ 用来/ 抽象/ 网络/ 中/ 的/ 各种/ 资源/ ,/ 通过/ 提供/ 高层次/ 名称/ 到/ 低层次/ 网络设备/ 地址/ 的/ 双向/ 映射/ 、/ 绑定/ 和/ 翻译/ 服务/ ,/ 建立/ 一个/ 高层次/ 的/ 命名/ 空间/ ,/ 为/ 网络管理/ 提供/ 易用/ 的/ 接口/ ,/ 这样/ 位于/ 网络/ 抽象/ 层/ 之上/ 的/ 程序/ 就/ 不/ 需要/ 耗费/ 大量/ 的/ 时间/ 和/ 资源/ 来/ 处理/ 繁杂/ 的/ 网络/ 底层/ 事件/ ./ 网络/ 环境/ 包括/ 用来/ 保障/ 控制/ 信令/ 可靠/ 传输/ 的/ 信令/ 传输/ 通道/ 和/ 部署/ 在/ 各个/ 网络/ 节点/ 上/ 的/ 设备/ 操作/ 接口/ ./ 控制/ 信令/ 传输/ 通道/ 共享/ 网络设备/ 之间/ 的/ 链路/ ,/ 但/ 在/ 逻辑/ 上/ 独立/ 于/ 分布式/ 网络/ 路由/ 协议/ ,/ 这样/ 可以/ 建立/ 更/ 可靠/ 的/ 监控/ 机制/ ,/ 及时/ 反映/ 网络/ 的/ 行为/ 状态/ ,/ 快捷/ 高效/ 地/ 实施/ 监控/ ;/ 设备/ 操作/ 接口/ 是/ 一个/ 简单/ 的/ 、/ 低层次/ 的/ 底层/ 网络/ 操作/ 接口/ ,/ 通过/ 该/ 接口/ 可以/ 直接/ 对/ 网络设备/ 进行/ 配置/ ,/ 如/ 添加/ // 修改/ 路由表/ 条目/ 、/ 添加/ // 修改/ 路由器/ 的/ 访问控制/ 表/ 或者/ 修改/ 网络/ 节点/ 端口/ 的/ 队列/ 缓存/ 参数/ 等/ ./ 以上/ 3/ 个/ 部分/ 中/ 都/ 嵌入/ 了/ 网络/ 状态/ 视图/ ,/ 如图/ 12/ 中点/ 划线/ 框/ 所示/ 数据/ 的/ 采集/ 和/ 传输/ 流程/ ,/ 这个/ 视图/ 在/ 低层次/ 的/ 网络/ 环境/ 中/ 对/ 网络/ 物理/ 设备/ 及其/ 设备/ 属性/ 进行/ 自动/ 发现/ ;/ 然后/ 在/ 设备/ 抽象/ 层/ 对/ 发现/ 的/ 网络/ 物理/ 设备/ 及其/ 属性/ 建立/ 统一/ 的/ 命名/ 空间/ ,/ 对/ 网络设备/ 名称/ 和/ 地址/ 进行/ 绑定/ ,/ 提供/ 命名/ 空间/ 到/ 实际/ 物理/ 设备/ 的/ 翻译/ 服务/ ;/ 并/ 在/ 设备/ 控制/ 层/ 实时/ 监测/ 网络资源/ 、/ 发现/ 网络服务/ ;/ 在/ 资源/ 虚拟/ 层/ 通过/ 虚拟化/ 网络设备/ 为/ 所有/ 的/ 开发/ 管理/ 终端/ 提供/ 一个/ 统一/ 的/ 、/ 完整/ 的/ 网络/ 视图/ 界面/ ,/ 避免/ 在/ 网络/ 配置/ 过程/ 中/ 出现/ 网络/ 状态/ 信息/ 分散/ 、/ 网络连接/ 状态/ 不/ 一致/ 的/ 情况/ ./ 7.2/ 可信/ 中枢/ 层/ AFIF/ 对/ 网络安全/ 的/ 外延/ 和/ 内涵/ 都/ 提出/ 了/ 更/ 大/ 的/ 挑战/ ./ 在/ 传统/ 网络/ 中/ ,/ 网络/ 软硬件/ 的/ 运行/ 模式/ 固定/ 、/ 单一/ ,/ 在/ 这种/ 环境/ 下仅/ 需要/ 实现/ 应用程序/ 对/ 用户/ 的/ 可信/ 就/ 能/ 保证/ 较/ 高/ 的/ 安全性/ ;/ 而/ 在/ AFIF/ 网络/ 中/ 网络/ 软硬件/ 的/ 运行/ 呈现/ 灵活/ 和/ 多元/ 的/ 特征/ ,/ 除了/ 要/ 保证/ 应用程序/ 对/ 用户/ 的/ 可信/ ,/ 还要/ 保证/ 各层/ 网络/ 环境/ 对/ 运行/ 其上/ 的/ 应用程序/ 可信/ ./ 同时/ 由于/ 存在/ 网络/ 环境/ 与/ 应用程序/ 之间/ 的/ 紧/ 耦合/ 可信/ 关系/ ,/ 用户/ 在/ 使用/ 应用程序/ 时/ ,/ 除了/ 担心/ 软件/ 是否/ 完整/ 没有/ 被/ 篡改/ 、/ 是否/ 安全/ 无/ 恶意代码/ 、/ 是否/ 正常/ 运行/ 之外/ ,/ 也/ 会/ 担心/ 应用程序/ 产生/ 的/ 数据/ 在/ 网络/ 中/ 是否/ 经过/ 了/ 可靠/ 的/ 路由/ 进行/ 完整/ 的/ 传输/ ,/ 因此/ 也/ 存在/ 各层/ 网络/ 环境/ 与/ 用户/ 间/ 的/ 间接/ 可信/ 关系/ ./ 由此可见/ ,/ 可控/ 、/ 可管/ 和/ 可信性/ 在/ AFIF/ 网络/ 中/ 占据/ 着/ 至关重要/ 的/ 地位/ ,/ 因此/ 有/ 必要/ 将/ 该/ 部分/ 功能/ 独立/ 于/ 其它/ 模块/ 实现/ ,/ 命名/ 为/ 可信/ 中枢/ 层/ ./ 可信/ 中枢/ 层/ 保证/ 了/ 应用/ 提供商/ 、/ 网络/ 环境/ 和/ 网络/ 用户/ 三者/ 之间/ 的/ 可信/ 关系/ ./ 可信/ 中枢/ 层/ 包括/ 3/ 个/ 部分/ :/ 信息/ 收集/ 、/ 处理/ 分析/ 和/ 措施/ 处理/ ./ 行为/ 跟踪/ 和/ 行为/ 分析/ 模块/ 实现/ 信息/ 收集/ 功能/ ,/ 通过/ 多样化/ 的/ 手段/ 来/ 获取/ 全面/ 、/ 合适/ 粒度/ 的/ 用户/ 证据/ ,/ 用于/ 对/ 网络应用/ 开发者/ 的/ 信任度/ 进行/ 评估/ ./ 收集/ 手段/ 包括/ 网络流量/ 监测/ 与/ 分析/ 、/ 审计/ 跟踪/ 系统日志/ 和/ 用户/ 日志/ 以及/ 专用/ 的/ 软硬件/ 数据/ 采集/ 等/ ./ ①/ IETFALTOWorkingGroup/ ./ http/ :/ // // datatracker/ ./ ietf/ ./ Page15/ 处理/ 分析/ 包括/ 信任/ 评估/ 和/ 可信/ 评价/ 两/ 部分/ ./ 信任/ 评估/ 是/ 指/ 对/ 网络应用/ 开发者/ 的/ 整体/ 行为/ 信任/ 进行/ 逐层/ 分解/ ,/ 将/ 综合/ 、/ 复杂/ 的/ 用户/ 行为/ 信任/ 评估/ 问题/ ,/ 通过/ 层层/ 细分/ ,/ 量化/ 成可/ 测量/ 、/ 可/ 计算/ 的/ 行为/ 证据/ 的/ 评估/ 问题/ ./ 用户/ 的/ 行为/ 信任/ 属性/ 包括/ 安全/ 信任/ 属性/ ,/ 性能/ 信任/ 属性/ 和/ 可靠性/ 信任/ 属性/ 3/ 个/ 组成部分/ [/ 40/ ]/ ./ 每个/ 信任/ 属性/ 均/ 包括/ 若干/ 证据/ 指标/ ,/ 通过/ 对/ 这些/ 证据/ 指标/ 进行/ 定量/ 的/ 归一化/ 和/ 规范化/ 处理/ ,/ 综合/ 考虑/ 信任/ 评估/ 的/ 历史性/ 累积/ 效应/ 和/ 局部性/ 效果/ ,/ 构建/ 出/ 信任/ 评估/ 模型/ ,/ 计算/ 出/ 用户/ 行为/ 的/ 信任/ 属性/ 值/ ./ 可信/ 评价/ 是/ 指/ 获得/ 和/ 保证/ 可信/ 网络系统/ 关键/ 性质/ 的/ 检测/ 理论/ 和/ 技术/ ,/ 避免/ 由于/ 网络/ 对/ 应用/ 的/ 自适应性/ 和/ 网络管理/ 开放性/ 所/ 导致/ 的/ 软件/ 错误/ ,/ 如/ 应用软件/ 的/ 设计/ 缺陷/ 、/ 开发/ 缺陷/ 或/ 外部/ 干扰/ 导致系统/ 的/ 软硬件/ 故障/ ./ 可信/ 评价/ 包括/ 系统/ 的/ 形式化/ 可信性/ 建图/ 13/ 可信/ 评价/ 指标体系/ 通过/ 免疫/ 隔离/ 实现/ 措施/ 处理/ 功能/ ,/ 通过/ 接收/ 处理/ 分析/ 结果/ ,/ 对/ 网络/ 节点/ 进行/ 隔离/ 操作/ 或/ 免疫/ 操作/ :/ 隔离/ 操作/ 通过/ 对/ 网络/ 节点/ 进行/ 针对性/ 的/ 操作/ ,/ 将/ 网络/ 节点/ 的/ 配置/ 信息/ 回滚/ 至/ 正常/ 状态/ ;/ 免疫/ 操作/ 是/ 一种/ 主动式/ 的/ 防护/ 措施/ ,/ 根据/ 历史/ 信息/ 进行/ 相应/ 的/ 修改/ ,/ 使得/ 网络/ 节点/ 获得/ 针对/ 特定/ 误操作/ 或/ 恶意程序/ 的/ 免疫/ 效果/ ,/ 避免/ 网络故障/ 的/ 再次发生/ ,/ 如/ 修改/ 路由器/ 访问控制/ 规则/ 或者/ 读写/ 权限/ ./ 通过/ 措施/ 处理/ 功能/ 消除/ 和/ 避免/ 外/ 在/ 的/ 、/ 不/ 受控/ 的/ 因素/ 对/ 网络/ 业务/ 以及/ 网络系统/ 本身/ 稳定性/ 的/ 影响/ ,/ 确保/ 其/ 始终/ 运行/ 在/ 一个/ 安全/ 和/ 可控/ 的/ 状态/ ./ 8/ 总结/ 本文/ 在/ 分析/ 现有/ 的/ Internet/ 网络/ 架构/ 的/ 基础/ 上/ ,/ 对/ 目前/ 互联网/ 存在/ 的/ 问题/ 进行/ 了/ 深入/ 剖析/ ;/ 从/ 应模/ 、/ 模型/ 检测/ 以及/ 可信性/ 量化/ 评价/ 3/ 个/ 阶段/ ,/ 其中/ 可信性/ 建模/ 包括/ 形式化/ 建模/ 技术/ 和/ 形式化/ 检测/ 技术/ 等/ ,/ 模型/ 方法/ 有/ 进程/ 代数/ 方法/ 、/ 模型/ 检测/ 方法/ 、/ 随机/ Petri/ 网/ 方法/ 等/ ./ 对/ 可信/ 进行/ 评价/ 需要/ 一套/ 完整/ 的/ 可信/ 评价/ 指标体系/ ,/ 根据/ 系统/ 不可/ 信/ 问题/ 的/ 来源/ 进行/ 划分/ 如图/ 13/ 所示/ :/ 安全性/ 用来/ 描述/ 系统/ 在/ 受到/ 恶意/ 攻击/ 时/ 安全/ 指标/ 发生/ 的/ 反应/ ;/ 可信赖/ 性/ 描述/ 了/ 系统/ 内部/ 故障/ 等/ 对系统/ 性能指标/ 的/ 影响/ ;/ 系统/ 的/ 可/ 生存性/ 描述/ 了/ 网络系统/ 在/ 遭到/ 攻击/ 入侵/ 、/ 内部/ 故障/ 和/ 操作/ 事故/ 等/ 安全/ 威胁/ 或/ 影响/ 时/ ,/ 仍/ 完成/ 关键/ 功能/ 或/ 恢复正常/ 服务/ 的/ 能力/ [/ 41/ -/ 42/ ]/ ./ 在/ 评价/ 时/ 需要/ 综合/ 考虑/ 各/ 属性/ 指标/ 之间/ 的/ 关系/ ,/ 多方面/ 多维度/ 刻画/ 系统/ 的/ 可信/ 特征/ 属性/ ,/ 然后/ 给出/ 包括/ 瞬态/ 定义/ 和/ 稳态/ 定义/ 在内/ 的/ 基于/ 概率/ 和/ 随机/ 模型/ 的/ 各/ 可信性/ 指标/ 的/ 量化/ 定义/ ,/ 文献/ [/ 43/ ]/ 从/ 系统/ 可信性/ 指标/ 计算/ 的/ 层面/ 给出/ 了/ 多种/ 安全/ 属性/ 计算方法/ 的/ 关系/ ./ 用/ 服务提供商/ 、/ 网络/ 用户/ 和/ 网络服务/ 运营商/ 的/ 需求/ 角度/ ,/ 指出/ 了/ 未来/ 网络/ 应/ 具备/ 自/ 适应/ 于/ 多种/ 网络/ 主体/ 、/ 多种/ 网络应用/ 和/ 多种/ 服务/ 要求/ 的/ 特性/ ,/ 满足/ 各种/ 角度/ 用户/ 友好/ 性/ 的/ 要求/ ./ 因此/ ,/ 提出/ 了/ 自/ 适应/ 未来/ 网络/ 的/ 概念/ ,/ 通过/ 讨论/ 可控/ 、/ 可管/ 、/ 可/ 扩展/ 和/ 可信/ 等/ 概念/ 的/ 内涵/ 与/ 外延/ ,/ 发现/ 可控/ 、/ 可管/ 、/ 可/ 扩展/ 和/ 可信/ 较/ 好/ 地/ 构成/ 了/ 自/ 适应/ 未来/ 网络/ 特性/ 的/ 指标体系/ ./ 在/ 此基础/ 上/ ,/ 我们/ 对/ 现有/ 自/ 适应/ 网络/ 关键技术/ 和/ 体系/ 架构/ 进行/ 了/ 详细/ 的/ 介绍/ 和/ 分析/ ,/ 总结/ 了/ 它们/ 的/ 优缺点/ 和/ 兼容性/ ,/ 并/ 提出/ 了/ 一种/ 自/ 适应/ 的/ 未来/ 网络体系/ 架构/ (/ AFIF/ )/ ./ 该/ 架构/ 将/ 对/ 未来/ 网络/ 的/ 研究/ 提供/ 参考/ ./ 

