Page1/ 面向/ 动态/ 环境/ 的/ 复合/ 服务/ 自/ 适应/ 方法/ 姜伟/ 3/ )/ 1/ )/ (/ 中国科学院计算技术研究所/ 前瞻/ 实验室/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 大学/ 北京/ 100149/ )/ 3/ )/ (/ 中国/ 石油/ 长城/ 钻探/ 工程/ 有限公司/ 测井技术/ 研究院/ 北京/ 100101/ )/ 摘要/ 质量/ 敏感/ 的/ 自动/ 服务/ 组合/ 技术/ 旨在/ 从/ 海量/ Web/ 服务/ 中/ 生成/ 满足用户/ 功能性/ 和/ 非/ 功能性/ 需求/ 的/ 复合/ 服务/ ./ 这类/ 技术/ 通常/ 假设/ 服务/ 环境/ 静态/ 不变/ ./ 然而/ ,/ 对/ 真实/ 网络/ 环境/ 下/ 服务/ 的/ 调研/ 结果表明/ ,/ 实际/ 情况/ 与/ 此/ 不符/ :/ 互联网/ 中/ 每天/ 都/ 会/ 新增/ 或/ 消失/ 大量/ 的/ Web/ 服务/ ,/ 出现/ 因/ 网络故障/ 、/ 延迟/ 等/ 原因/ 而/ 失效/ 或/ QoS/ 发生变化/ 的/ Web/ 服务/ ./ 该文/ 针对/ 动态/ 服务/ 导致/ 复合/ 服务/ 失效/ 或/ QoS/ 变差/ 的/ 问题/ ,/ 提出/ 了/ 一种/ 基于/ 事件驱动/ 机制/ 的/ 复合/ 服务/ 自/ 适应/ 方法/ ,/ 可/ 实时处理/ 多种不同/ 类型/ 的/ 动态/ 服务/ ,/ 自动/ 地/ 对/ 复合/ 服务/ 进行/ 检查和/ 更新/ ./ 最后/ ,/ 文中/ 对/ 自/ 适应/ 方法/ 进行/ 了/ 理论/ 分析/ 及/ 实验/ 验证/ :/ 与/ WS/ -/ Challenge2009/ 和/ 2010/ 的/ 冠军/ 系统/ QSynth/ 相比/ ,/ 文中/ 方法/ 在/ 人工/ 服务/ 数据/ 集/ 和/ 真实/ QoS/ 数据/ 集上/ 均/ 获得/ 更优/ 的/ 性能/ ./ 关键词/ 动态/ 服务/ ;/ 服务/ 组合/ ;/ 自/ 适应/ ;/ 服务/ 计算/ ;/ 云/ 计算/ 1/ 引言/ 随着/ 服务/ 计算/ 在/ 人类/ 生产/ 、/ 生活/ 领域/ 的/ 不断/ 普及/ 与/ 推广/ ,/ Web/ 服务/ 的/ 种类/ 和/ 数量/ 也/ 在/ 急剧/ 增多/ [/ 1/ ]/ ./ 为/ 满足用户/ 快速/ 、/ 准确/ 获取/ 相关/ 服务/ 的/ 需要/ ,/ 诸多/ 网站/ ,/ 如/ xmethods/ ./ net/ 、/ seekda/ ./ com/ 提供/ 了/ Web/ 服务/ 的/ 查询/ 与/ 注册/ 功能/ ./ 然而/ ,/ 单个/ Web/ 服务/ 的/ 功能/ 有限/ ,/ 多数/ 情况/ 下/ 需要/ 将/ 分布/ 在/ 互联网/ 上/ 松散/ 耦合/ 的/ 多个/ Web/ 服务/ 组合/ 成功/ 能/ 更加/ 丰富/ 的/ 复合/ 服务/ (/ ServiceComposition/ ,/ SC/ )/ ./ 由于/ Web/ 服务网络/ 的/ 规模/ 和/ 复杂度/ 持续/ 提升/ ,/ Web/ 服务/ 组合/ 已/ 成为/ 一个/ 典型/ 的/ NP/ (/ Non/ -/ DeterministicPolynomial/ )/ 难/ 问题/ [/ 2/ ]/ ./ 为此/ ,/ 相关/ 研究者/ 提出/ 自动/ 服务/ 组合/ (/ AutomaticServiceComposition/ ,/ ASC/ )/ 技术/ 来/ 重用/ 已/ 存在/ 的/ Web/ 服务/ ,/ 通过/ 对/ 其/ 进行/ 自动/ 组合/ 来/ 满足用户/ 的/ 功能性/ 需求/ ./ 目前/ ,/ ASC/ 已/ 受到/ 学术界/ 和/ 企业界/ 的/ 广泛/ 重视/ ,/ 并/ 涌现出/ 大量/ 成熟/ 的/ 应用/ ./ 例如/ ,/ Amazon/ [/ 3/ ]/ 和/ SAP/ [/ 4/ ]/ 公司/ 均/ 在/ 真实/ 场景/ 下/ 利用/ 自动/ 服务/ 组合/ 进行/ 建模/ ./ 同时/ ,/ 为/ 保证/ 复合/ 服务/ SC/ 的/ 服务/ QoS/ (/ QualityofService/ ,/ QoS/ )/ ,/ 近年来/ ,/ 质量/ 敏感/ 的/ 自动/ 服务/ 组合/ 受到/ 众多/ 研究/ 人员/ 的/ 关注/ ./ 但是/ 大部分/ 工作/ 往往/ 假设/ 服务/ 特性/ 静态/ 不变/ ./ 当前/ ,/ 已有/ 研究者/ 指出/ ,/ 基于/ 服务/ 的/ 系统/ 日益/ 受到/ 动态变化/ 的/ 服务/ 环境/ 带来/ 的/ 压力/ ,/ 需要/ 持续/ 增强/ 系统/ 的/ 可用性/ 、/ 可靠性/ 以及/ 可扩展性/ [/ 5/ ]/ ./ 此外/ ,/ 文献/ [/ 6/ ]/ 对/ 服务/ 功能性/ 演化/ (/ 如/ 接口/ 的/ 变化/ )/ 做/ 了/ 研究/ ./ 为了/ 对/ 真实/ 环境/ 下/ 服务/ 的/ 功能性/ 和/ 非/ 功能性/ 演化/ 进行/ 更为/ 广泛/ 和/ 全面/ 的/ 调研/ ,/ 在/ 2013/ 年/ 11/ 月/ 至/ 2014/ 年/ 2/ 月/ 期间/ ,/ 我们/ 对/ 网络/ 上/ 公开/ 的/ Web/ 服务/ 进行/ 了/ 总计/ 11/ 个/ 星期/ 的/ 监控/ ./ 这些/ Web/ 服务/ 分别/ 抓取/ 自/ seekda/ ./ com/ ,/ webservicelist/ ./ com/ 和/ xmethods/ ./ net/ ./ 表/ 1/ 给出/ 连续/ 两周/ 抓取/ 数据/ 的/ 对比/ 结果/ ,/ 其中/ 约/ 有/ 4/ %/ 至/ 8/ %/ 的/ Web/ 服务/ 发生/ 了/ 变化/ ./ 调研/ 结果显示/ ,/ 互联网/ 中/ 每天/ 都/ 会/ 新增/ 或/ 消失/ 大量/ 的/ Web/ 服务/ ,/ 出现/ 因/ 网络故障/ 、/ 延迟/ 等/ 原因/ 而/ 失效/ 或/ QoS/ 发生变化/ 的/ Web/ 服务/ ./ 与/ 我们/ 的/ 结论/ 类似/ 的/ 是/ ,/ 一些/ 更/ 早期/ 的/ 研究/ 工作/ [/ 1/ ,/ 7/ ]/ 揭示/ 出/ 在/ 2006/ 年/ 10/ 月/ 至/ 2007/ 年/ 10/ 月/ 期间/ ,/ 约/ 有/ 21/ %/ 的/ 被/ 监控/ 的/ Web/ 服务/ 失效/ ./ 这些/ 动态变化/ 的/ Web/ 服务/ 会/ 对/ 已/ 存在/ 的/ 复合/ 服务/ 产生/ 负面影响/ :/ (/ 1/ )/ 功能/ 失效/ ;/ (/ 2/ )/ 非/ 功能性/ 需求/ 难以/ 满足/ ./ 为了/ 消除/ 上述/ 负面影响/ ,/ 保证/ 复合/ 服务/ 相关/ 应用/ 的/ 可用性/ 和/ 可靠性/ ,/ 需要/ 处理/ Web/ 服务/ 发生/ 的/ 各种/ 变化/ ,/ 以便/ 复合/ 服务/ 能够/ 正确/ 的/ 反映/ 当前/ 的/ 服务/ 状态/ 并/ 实际/ 可用/ ./ 连续/ 两周/ 对比/ 1vs/ ./ 22vs/ ./ 33vs/ ./ 44vs/ ./ 55vs/ ./ 66vs/ ./ 77vs/ ./ 88vs/ ./ 99vs/ ./ 101222510vs/ ./ 1112370/ 本文/ 以表/ 2/ 所示/ Web/ 服务/ 为例/ ,/ 解释/ 并/ 说明/ 动态/ 服务/ 对/ 复合/ 服务/ 的/ 影响/ ./ 表/ 1/ 中/ 给出/ 8/ 个/ Web/ 服务/ 及其/ 相关/ 信息/ ./ 其中/ ,/ 服务/ 的/ QoS/ 表示/ 该/ 服务/ 的/ 响应/ 时间/ ./ 假设/ 某/ 用户/ 输入/ 的/ 查询/ 请求/ 为/ :/ 根据/ 所在地/ 地址/ 、/ 饮食/ 偏好/ (/ 如/ 火锅/ )/ 和/ 行程/ 要求/ (/ 如/ 目的地/ 距离/ 当前/ 地址/ 小于/ 20km/ )/ 等/ 信息/ ,/ 获取/ 相关/ 酒店/ 的/ 行车/ 路线/ ./ 为/ 满足用户/ 的/ 这/ 一/ 查询/ 请求/ (/ 功能性/ 需求/ )/ ,/ 程序/ 需要/ 自动/ 选择/ 合适/ 的/ 服务/ 构建/ 复合/ 服务/ ./ 此外/ ,/ 为了/ 快速/ 响应/ 用户/ 请求/ 并/ 返回/ 结果/ (/ 非/ 功能性/ 需求/ )/ ,/ 在/ 此/ 场景/ 下/ ,/ 我们/ 还/ 要求/ 复合/ 服务/ 的/ 总体/ 响应/ 时间/ 尽量/ 缩小/ ./ 根据/ 表/ 1/ 所示/ 服务/ ,/ 可/ 构建/ 复合/ 服务/ SC1/ :/ {/ w2/ →/ w4/ →/ w8/ →/ w7/ }/ 以/ 满足/ 上述/ 要求/ ./ 然而/ ,/ 当/ w8/ 失效/ 时/ ,/ 我们/ 无法/ 找出/ 一个/ 具备/ 相同/ 功能/ 的/ 服务/ 对/ w8/ 进行/ 替换/ ./ 此时/ ,/ 为了/ 仍然/ 满足用户/ 的/ 要求/ ,/ 需要/ 对/ 复合/ 服务/ 内部/ 的/ 组合/ 逻辑/ 进行/ 重新/ 调整/ ./ 例如/ ,/ 我们/ 可/ 构建/ 出/ 满足/ 需求/ 的/ 复合/ 服务/ SC2/ :/ {/ w2/ →/ w3/ →/ w7/ }/ ,/ 然而/ 其/ 逻辑/ 结构/ 与/ SC1/ 不同/ ./ 由此可见/ ,/ 动态/ 调整/ 复合/ 服务/ ,/ 不仅/ 需要/ 1/ -/ 1/ 替换/ ,/ 而且/ 需要/ n/ -/ m/ 替换/ ./ Web/ 服务/ 输入/ 参数/ 输出/ 参数/ W1W2W3W4W5W6W7W8/ 参数/ 含义/ :/ a/ :/ 所在地/ 地址/ ;/ b/ :/ 行程/ 要求/ ;/ c/ :/ 饮食/ 偏好/ ;/ d/ :/ 酒店/ 行车/ 路线/ ;/ e/ :/ 城市/ 名称/ ;/ f/ :/ 城市/ 邮编/ ;/ g/ :/ 酒店/ 邮编/ ;/ h/ :/ 酒店/ 地址/ ;/ i/ :/ 酒店/ 电话/ ;/ j/ :/ 酒店/ 名称/ ;/ k/ :/ 酒店/ 级别/ ./ 针对/ 动态变化/ 的/ 服务/ 环境/ ,/ 在/ 自/ 适应/ 服务/ 选择/ (/ AdaptiveServiceSelection/ )/ 领域/ ,/ 诸多/ 研究者/ 使用/ 整数/ 规划/ [/ 8/ -/ 9/ ]/ 、/ 启发性/ 算法/ [/ 10/ ]/ 、/ 马尔可夫/ 决策/ [/ 11/ ]/ 、/ 基于/ 区域/ 的/ 重/ 配置/ [/ 12/ ]/ 、/ 排队/ 论/ [/ 13/ ]/ 、/ 遗传算法/ [/ 14/ ]/ 、/ 部分/ 筛选/ (/ partialselection/ )/ [/ 15/ ]/ 和/ 服务/ 关联/ 分析/ [/ 16/ ]/ 等策/ Page3/ 略/ 对/ 运行/ 时/ 失效/ 的/ 服务/ 进行/ 替换/ ./ 通常/ ,/ 这些/ 自/ 适应/ 服务/ 选择/ 的/ 方法/ 首先/ 预定/ 义/ 组合/ 模板/ 来/ 描述/ 复合/ 服务/ 的/ 组合/ 逻辑/ ./ 然后/ ,/ 利用/ 模板/ 中/ 抽象/ 的/ 服务/ 类/ 在/ 运行/ 时/ 绑定/ 具体/ 的/ 服务/ 实例/ ./ 这类/ 方法/ 的/ 不足之处/ 在于/ :/ (/ 1/ )/ 依赖/ 预定/ 义/ 模板/ ,/ 无法/ 自动/ 搜索/ 出/ 复合/ 服务/ ;/ (/ 2/ )/ 受限于/ 模板/ 中/ 定义/ 的/ 组合/ 逻辑/ ,/ 难以/ 发现/ 新/ 的/ 具有/ 不同/ 逻辑/ 结构/ 的/ 复合/ 服务/ 作为/ 替代/ 方案/ ;/ (/ 3/ )/ 仅能/ 感知/ 和/ 处理/ 模板/ 内部/ 的/ 服务/ 类别/ ,/ 不能/ 利用/ 模板/ 所/ 包含/ 的/ 服务/ 类别/ 之外/ 的/ 服务/ 进一步/ 改善/ 复合/ 服务/ 的/ 服务/ QoS/ ;/ (/ 4/ )/ 采用/ 运行/ 时/ 被动/ 处理/ 的/ 方式/ ,/ 难以/ 对/ 失效/ 的/ 复合/ 服务/ 进行/ 主动/ 发现/ 和/ 更新/ ;/ (/ 5/ )/ 每次/ 只能/ 处理/ 一个/ 动态/ 服务/ ,/ 效率/ 较为/ 低下/ ./ 为了/ 克服/ 上述/ 不足/ 并/ 解决/ 动态/ 环境/ 下/ 自动/ 服务/ 组合/ 带来/ 的/ 挑战性/ 问题/ ,/ 基于/ 我们/ 之前/ 的/ 工作/ QSynth/ [/ 17/ -/ 18/ ]/ ,/ 本文/ 提出/ 了/ 一种/ 复合/ 服务/ 自/ 适应/ 方法/ 来/ 应对/ 动态变化/ 的/ 服务/ 环境/ ./ 基于/ 该/ 方法/ ,/ 我们/ 扩展/ 了/ 原有/ 系统/ 并/ 将/ 其/ 称为/ QSynth/ +./ QSynth/ +/ 基于/ 服务/ 依赖图/ (/ 图/ 1/ )/ 工作/ ./ 该/ 图用/ 反向/ 索引/ 表/ 表示/ ,/ 能够/ 准确/ 表达/ Web/ 服务/ 之间/ 的/ 依赖/ 关系/ ./ 基于/ 该图/ ,/ QSynth/ +/ 首先/ 检索/ 出/ 满足/ 查询/ 请求/ 且/ 服务/ QoS/ 最优/ 的/ 复合/ 服务/ ;/ 其次/ ,/ 从/ 发布/ // 订阅/ 网络/ 中/ 接收/ 动态/ 服务/ 事件/ ;/ 再次/ ,/ 根据/ 动态变化/ 的/ 服务/ 更新/ 服务/ 依赖图/ ;/ 最后/ ,/ 当/ 原有/ 最优/ 复合/ 服务/ 失效/ 或/ QoS/ 变差/ 时/ ,/ 基于/ 更新/ 后/ 的/ 服务/ 依赖图/ ,/ 利用/ 复合/ 服务/ 自/ 适应/ 算法/ 生成/ 新/ 的/ 复合/ 服务/ ./ 需要/ 指出/ ,/ QSynth/ 可/ 通过/ 重新/ 查询/ 获取/ 最新/ 的/ 复合/ 服务/ ./ 然而/ ,/ 利用/ 重新/ 查询/ 无法/ 直接/ 获取/ 哪些/ Web/ 服务/ 发生/ 了/ 变化/ 或/ 受到/ 了/ 影响/ ./ 因此/ ,/ 在/ 动态/ 环境/ 下/ ,/ 为/ 确保/ 复合/ 服务/ 的/ 正确性/ ,/ QSynth/ 需对/ 所有/ 的/ 请求/ 进行/ 重新/ 查询/ ,/ 这种/ 频繁/ 的/ 查询/ 操作/ 会/ 严重/ 影响/ 系统/ 的/ 效率/ ./ 与/ 之/ 相比/ ,/ QSynth/ +/ 能够/ 识别/ 出受/ 影响/ 的/ 复合/ 服务/ ,/ 同时/ 只/ 需/ 更新/ 少量/ 受/ 影响/ 的/ 服务/ 状态/ ,/ 无需/ 针对/ 同一/ 请求/ 进行/ 反复/ 或/ 重新/ 查询/ ,/ 因此/ 可/ 极大/ 地/ 提升/ 系统/ 的/ 性能/ ./ 本文/ 的/ 主要/ 贡献/ 包括/ :/ (/ 1/ )/ 引入/ 了/ 一种/ 新颖/ 的/ 复合/ 服务/ 自/ 适应/ 机制/ 进行/ 动态/ 环境/ 下/ 的/ 自动/ 服务/ 组合/ ,/ 并/ 通过/ 事件驱动/ 的/ 方法/ 主动/ 发现/ 和/ 处理/ 动态变化/ 的/ 服务/ ./ (/ 2/ )/ 提出/ 了/ 一种/ 高效/ 的/ 复合/ 服务/ 自/ 适应/ 算法/ ./ 该/ 算法/ 无需/ 预定/ 义/ 组合/ 模板/ ,/ 能够/ 感知/ 模板/ 内部/ 和/ 外部/ 的/ 所有/ 服务/ ,/ 不仅/ 支持/ 服务/ 的/ 一对一/ 置换/ ,/ 而且/ 支持/ 更为/ 复杂/ 的/ 逻辑/ 重构/ ./ 同时/ ,/ 该/ 算法/ 可/ 采用/ 批处理/ 的/ 方式/ 一次性/ 处理/ 多个/ 动态变化/ 的/ 服务/ ./ (/ 3/ )/ 实现/ 了/ QSynth/ +/ 系统/ ,/ 并/ 在/ 人工/ 和/ 真实/ 数据/ 集上/ 对系统/ 的/ 性能/ 和/ 准确性/ 进行/ 了/ 有效/ 评估/ ./ 本文/ 第/ 2/ 节/ 综述/ 与/ 本文/ 相关/ 的/ 研究/ 工作/ ;/ 第/ 3/ 节/ 介绍/ 预备/ 知识/ 并/ 给出/ 问题/ 定义/ ;/ 第/ 4/ 节/ 阐述/ 系统/ 的/ 工作/ 机理/ 和/ 相关/ 算法/ 细节/ ;/ 第/ 5/ 节对/ 核心/ 算法/ 的/ 复杂度/ 、/ 性质/ 和/ 开销/ 进行/ 分析/ ;/ 第/ 6/ 节/ 讨论/ 实验/ 结果/ ;/ 第/ 7/ 节/ 总结/ 全文/ ./ 2/ 相关/ 工作/ 服务/ 选择/ 和/ 服务/ 组合/ 是/ 与/ 本文/ 研究/ 内容/ 较为/ 相关/ 的/ 工作/ ./ 本节/ 从/ 两/ 方面/ 分别/ 阐述/ 相关/ 工作进展/ 并/ 进行/ 讨论/ ./ 2.1/ 服务/ 选择/ 服务/ 选择/ 是/ 服务/ 计算/ 领域/ 中/ 的/ 一个/ 重要/ 研究/ 方向/ ,/ 已经/ 吸引/ 了/ 众多/ 研究者/ 的/ 关注/ ,/ 并/ 取得/ 了/ 许多/ 显著/ 的/ 创新/ 成果/ [/ 6/ -/ 16/ ]/ ./ 服务/ 选择/ 以/ 某/ 一/ 预定/ 义/ 组合/ 模板/ 作为/ 输入/ ,/ 并/ 定义/ 模板/ 中/ 的/ 结点/ 为/ 抽象/ 服务/ 类别/ ./ 其/ 目的/ 是从/ 众多/ 功能属性/ 相同/ 但/ QoS/ 不同/ 的/ 候选/ 服务/ 中/ 选择/ 满足用户要求/ 的/ Web/ 服务/ ,/ 将/ 其/ 作为/ 服务/ 实例/ 与/ 模板/ 结点/ 对应/ 的/ 服务/ 类别/ 进行/ 绑定/ ,/ 使/ 组合/ 后/ 的/ 复合/ 服务/ 满足/ 局部/ 和/ 全局/ QoS/ (/ GlobalQoS/ ,/ GQ/ )/ 的/ 约束/ 要求/ ./ 针对/ 动态变化/ 的/ 服务/ 环境/ (/ 如当/ 服务/ 失效/ 或/ QoS/ 变化/ 时/ )/ ,/ 一些/ 服务/ 选择/ 的/ 研究/ 工作/ 提出/ 了/ 相应/ 的/ 服务/ 替换/ 策略/ ,/ 如/ 混合/ 整数/ 规划/ [/ 8/ ]/ 、/ 区域/ 重/ 配置/ [/ 12/ ]/ 、/ 整数/ 规划/ [/ 9/ ]/ 、/ 启发式/ 算法/ [/ 10/ ]/ 、/ 马尔可夫/ 决策/ [/ 11/ ]/ 、/ 排队/ 论/ [/ 13/ ]/ 、/ 遗传算法/ [/ 14/ ]/ 、/ 部分/ 筛选/ (/ partialselection/ )/ [/ 15/ ]/ 和/ 服务/ 关联/ 分析/ [/ 16/ ]/ 等/ 方法/ 重新/ 绑定/ 符合要求/ 的/ 新/ 服务/ ./ 但是/ ,/ 服务/ 选择/ 方法/ 受限于/ 预定/ 义/ 模板/ ,/ 其/ 包含/ 的/ 服务/ 类别/ 和/ 组合/ 逻辑/ 必须/ 事先/ 给出/ ,/ 因此/ 无法/ 根据/ 动态变化/ 的/ 服务/ 环境/ 进行/ 合理/ 更改/ ./ 与/ 之/ 相比/ ,/ 本文/ 提出/ 的/ 方法/ 能够/ 处理/ 模板/ 中/ 已/ 定义/ 服务/ 类别/ 之外/ 的/ 新增/ 服务/ ,/ 并/ 可/ 根据/ 当前/ 服务网络/ 的/ 状态/ 对/ 复合/ 服务/ 的/ 组合/ 逻辑/ 进行/ 调整/ ./ 此外/ ,/ 我们/ 对/ 动态/ 服务/ 进行/ 实时/ 监控/ ,/ 一旦/ 动态/ 服务/ 发生/ ,/ 就/ 主动/ 对/ 其/ 进行/ 处理/ ,/ 实现/ 满足用户/ 需求/ 的/ 复合/ 服务/ 的/ 主动/ 发现/ 和/ 更新/ ./ 2.2/ 自动/ 服务/ 组合/ 自动/ 服务/ 组合/ 通过/ 重用/ 互联网/ 上/ 来自/ 第/ 3/ 方/ 提供者/ 的/ Web/ 服务/ ,/ 对/ 多个/ 原子/ 服务/ 进行/ 组合/ 来/ 构建/ 功能丰富/ 、/ 多样化/ 以及/ 个性化/ 的/ 复合/ 服务/ ./ 每个/ 复合/ 服务/ 定义/ 了/ 若干/ 原子/ 服务/ 的/ 组合/ 逻辑/ 和/ 调用/ 次序/ ,/ 并/ 满足用户/ 的/ 功能性/ 和/ 非/ 功能性/ 需求/ ./ 面对/ 日益增长/ 的/ 服务/ 数量/ ,/ 相关/ 研究者/ 提出/ 了/ 众多/ 自动/ 服务组/ Page4/ 合/ 方法/ [/ 17/ -/ 22/ ]/ 以/ 解决/ 人工/ 服务/ 组合/ 所/ 带来/ 的/ 费时/ 、/ 低效/ 和/ 易错/ 等/ 问题/ ./ 上述/ 自动/ 服务/ 组合/ 方法/ 均/ 假定/ 在/ 服务/ 静态/ 不变/ 的/ 环境/ 下/ ,/ 如何/ 求取/ 满足/ 功能/ 或/ 服务/ QoS/ 最优/ 或/ 近似/ 最优/ 的/ 复合/ 服务/ ./ 例如/ ,/ QSynth/ [/ 17/ ]/ 旨在/ 解决/ QoS/ 最优/ 的/ 海量/ 语义/ 服务/ 快速/ 组合/ 问题/ ,/ 通过/ 输入/ 查询/ 请求/ ,/ 构建/ 相应/ 的/ 复合/ 服务/ ./ 然而/ ,/ 每当/ 服务/ 动态变化/ 时/ ,/ 这/ 类/ 方法/ 必须/ 对/ 所有/ 已/ 构建/ 的/ 复合/ 服务/ 进行/ 重新/ 求取/ ,/ 效率/ 十分/ 低下/ (/ 见/ 第/ 6/ 节/ 实验/ 部分/ )/ ,/ 因此/ 并/ 不/ 可取/ ./ 文献/ [/ 23/ -/ 24/ ]/ 提出/ 利用/ 人工智能/ 规划/ 的/ 方法/ 处理/ 动态/ 服务/ 并/ 对/ 复合/ 服务/ 进行/ 相应/ 更新/ ./ 然而/ ,/ 由于/ 未/ 考虑/ 服务/ 的/ QoS/ ,/ 这些/ 方法/ 通常/ 不能/ 保证/ 更新/ 后/ 的/ 复合/ 服务/ 依然/ 满足/ 非/ 功能性/ 需求/ ./ 文献/ [/ 25/ ]/ 提出/ 了/ 一种/ 面向/ 动态/ 服务/ 环境/ 的/ 服务/ 组合/ 方法/ ,/ 基于/ 最短/ 路径/ 的/ 图/ 搜索算法/ 搜索/ 出/ 链状/ 的/ 复合/ 服务/ ./ 但是/ ,/ 这种/ 方法/ 无法/ 搜索/ 出/ 实际/ 中/ 存在/ 的/ 非/ 链状/ 复合/ 服务/ ,/ 如可/ 建模/ 为/ 有/ 向/ 无/ 环图/ (/ DirectedAcyclicGraph/ ,/ DAG/ )/ 形式/ 的/ 复合/ 服务/ (/ 见/ 第/ 3.2/ 节/ )/ ./ 文献/ [/ 26/ -/ 27/ ]/ 分别/ 给出/ 了/ 面向/ 动态/ 环境/ 的/ 自动/ 服务/ 组合/ 方法/ ,/ 然而/ ,/ 这些/ 方法/ 只/ 关注/ 服务/ 功能性/ 因素/ 的/ 变化/ (/ 如/ 服务/ 接口/ 的/ 变化/ )/ ,/ 而/ 未/ 考虑/ 服务/ QoS/ 这类/ 非/ 功能性/ 因素/ 变化/ 的/ 影响/ ,/ 难以/ 推荐/ 出/ 满足/ QoS/ 最优/ 约束/ 的/ 复合/ 服务/ ./ 与/ 上述/ 两个/ 工作/ 相反/ ,/ 文献/ [/ 28/ -/ 29/ ]/ 专注/ 于/ 根据/ 原子/ 服务/ QoS/ 的/ 变化/ 改善/ 复合/ 服务/ 的/ 服务质量/ ,/ 而/ 未/ 对/ 服务/ 功能性/ 因素/ 变化/ 的/ 情形/ 给出/ 解决方案/ ./ 综合/ 以上/ 分析/ 可知/ ,/ 面向/ 动态/ 服务/ 环境/ 且/ 质量/ 敏感/ 的/ 自动/ 服务/ 组合/ 的/ 相关/ 研究/ 较/ 少/ ,/ 目前/ 尚/ 缺乏/ 成熟/ 完整/ 的/ 解决方案/ ,/ 需要/ 有/ 针对性/ 的/ 进行/ 专门/ 的/ 研究/ ./ 下节/ 将/ 介绍/ 必要/ 的/ 预备/ 知识/ ,/ 并/ 据此/ 定义/ 本文/ 要/ 解决/ 的/ 问题/ ./ 图/ 1/ 服务/ 依赖图/ 3/ 预备/ 知识/ 与/ 问题/ 定义/ 3.1/ 相关/ 术语/ 介绍/ 本文/ 使用/ 的/ 相关/ 术语/ 及其/ 定义/ 见表/ 3/ ./ 术语/ 服务/ QoSWeb/ 服务/ (/ wi/ )/ 查询/ 请求/ R/ 参数/ 匹配/ Web/ 服务/ 匹配/ 3.2/ 服务/ 依赖图/ 为/ 准确/ 地/ 表达/ Web/ 服务/ 集合/ 中/ 包含/ 的/ 依赖/ 关系/ 以及/ QoS/ 等/ 信息/ ,/ 我们/ 使用/ 服务/ 依赖图/ G/ =/ (/ W/ ,/ E/ )/ 对表/ 2/ 所示/ Web/ 服务/ 进行/ 建模/ ,/ 如图/ 1/ 所示/ ./ 本文/ 将/ 基于/ 此图/ 进行/ 质量/ 敏感/ 的/ 自/ 适应/ 服务/ 组合/ ./ 在/ G/ 中/ ,/ 节点/ 集/ W/ 表示/ Web/ 服务/ 集合/ ,/ / wk/ ∈/ W/ ,/ wk/ =/ (/ k/ ,/ I/ ,/ O/ ,/ Q/ )/ ./ 其中/ ,/ k/ 是/ 节点/ wk/ 的/ 标识/ ,/ I/ 和/ O/ 分别/ 表示/ wk/ 对应/ 的/ Web/ 服务/ 的/ 输入/ 参数/ 集合/ 和/ 输出/ 参数/ 集合/ ,/ Q/ 为/ wk/ 的/ QoS/ ./ 有/ 向/ 边集/ E/ 表示/ Web/ 服务/ 匹配/ 集合/ ,/ 该/ 集合/ 满足/ :/ / ek/ ∈/ E/ ,/ ek/ =/ (/ wu/ ,/ wv/ ,/ )/ ./ 其中/ ,/ wu/ 和/ wv/ 分别/ 是/ 边/ 的/ 头/ 结点/ (/ headtagekPage5node/ )/ 和/ 尾/ 节点/ (/ tailnode/ )/ ,/ wu/ 是/ wv/ 的/ 直接/ 前继/ ,/ wv/ 是/ wu/ 的/ 直接/ 后继/ ,/ wu/ 对应/ 的/ 方法/ 匹配/ wv/ 对应/ 的/ 方法/ ./ ek/ 的/ 标记/ tagek/ (/ 1/ )/ tagek/ ∈/ wu/ ./ O/ ;/ (/ 2/ )/ tagek/ ∈/ wv/ ./ I/ ./ 需要/ 特别/ 指出/ ,/ 当/ 查询/ 请求/ R/ 发起/ 时/ ,/ 图/ 中将/ 动态/ 生成/ 临时/ 的/ 起始/ 节点/ Start/ 和/ 终/ 节点/ End/ ,/ 如图/ 1/ 中/ 两个/ 椭圆形/ 节点/ 所示/ ,/ 它们/ 满足/ :/ (/ 1/ )/ (/ Start/ ./ I/ =/ / )/ ∧/ (/ Start/ ./ O/ =/ R/ ./ I/ )/ ;/ (/ 2/ )/ (/ End/ ./ I/ =/ R/ ./ O/ )/ ∧/ (/ End/ ./ O/ =/ / )/ ./ 我们/ 利用/ 反向/ 索引/ 表/ 存储/ 和/ 构建/ 服务/ 依赖图/ ./ 本文/ 将/ 在/ 4.1/ 节将/ 对此/ 进行/ 详述/ ./ 与/ 经典/ 图论/ 的/ 节点/ 可达性/ 不同/ ,/ G/ 的/ 节点/ 可达性/ 如下/ ./ 定义/ 1/ ./ 节点/ 的/ 可达性/ ./ 给定/ 服务/ 依赖图/ G/ =/ (/ W/ ,/ E/ )/ ,/ 在/ 一次/ 从/ 起始/ 节点/ Start/ 开始/ 的/ 搜索/ 过程/ 中/ ,/ / wi/ ∈/ W/ ,/ wi/ 可达/ 当且/ 仅/ 当/ / input/ ∈/ wi/ ./ I/ ,/ / pi/ =/ 〈/ Start/ ,/ …/ ,/ wi/ -/ 1/ ,/ wi/ 〉/ ,/ 使得/ 路径/ pi/ 中/ 的/ 边/ e/ =/ (/ wi/ -/ 1/ ,/ wi/ ,/ tage/ )/ 满足/ tage/ =/ input/ ./ 在/ 定义/ 1/ 中/ ,/ 一个/ 节点/ wi/ 可达/ ,/ 不仅/ 要求/ 从/ Start/ 到/ wi/ 存在/ 路径/ ,/ 而且/ 要求/ 存在/ 从/ Start/ 到/ wi/ 的/ 路径/ 集合/ ,/ 使得/ 该/ 路径/ 集合/ 必须/ 包含/ wi/ 的/ 全部/ 输入/ 参数/ 作为/ Tag/ 的/ 入边/ ./ 这/ 不同于/ 经典/ 图论/ 的/ 节点/ 可达性/ ./ 在/ 经典/ 图论/ 中/ ,/ 判断/ 一个/ 节点/ wi/ 是否/ 可/ 达/ ,/ 只/ 需/ 判断/ 从/ Start/ 到/ wi/ 是否/ 存在/ 路径/ 即可/ ./ 基于/ 节点/ 的/ 可达性/ 定义/ ,/ 本文/ 提出/ 的/ 搜索算法/ 在/ 访问/ 节点/ 时/ 遵循/ 如下/ 原则/ :/ 若/ 一个/ 节点/ wi/ 可达/ ,/ 则/ 可/ 访问/ wi/ 的/ 后继/ 节点/ ,/ 否则/ ,/ 不能/ 访问/ ./ 因此/ ,/ 当/ wi/ 输入/ 参数/ 还/ 未/ 被/ 全部/ 获取/ 时/ ,/ 定义/ 1/ 中/ 的/ 可达性/ 能够/ 避免/ 本文/ 算法/ 因/ 调用/ 该/ 服务/ 而/ 错误/ 地/ 获取/ 其/ 输出/ 参数/ ./ 例如/ ,/ 在/ 图/ 1/ 中/ ,/ 当/ 从/ Start/ 开始/ 搜索/ 时/ ,/ 首先/ 找到/ 路径/ p/ =/ 〈/ Start/ ,/ w4/ 〉/ ./ 然而/ ,/ 此时/ w4/ 并/ 不可/ 达/ ,/ 原因/ 在于/ w4/ 的/ 另外/ 一个/ 输入/ 参数/ f/ 作为/ Tag/ 的/ 入边/ 未/ 被/ p/ 包含/ ./ 3.3/ 问题/ 定义/ 基于/ 服务/ 依赖图/ ,/ 文献/ [/ 17/ ]/ 提出/ 质量/ 敏感/ 的/ 自动/ 服务/ 组合/ 问题/ ./ 定义/ 2/ ./ 最/ 优质/ 量/ 敏感/ 的/ 自动/ 服务/ 组合/ 问题/ ./ 给定/ 查询/ 请求/ R/ 和/ 服务/ 依赖图/ G/ =/ (/ W/ ,/ E/ )/ ,/ 加权/ 函数/ ω/ :/ M/ →/ R/ 表示/ 从/ 节点/ 集合/ 到/ 实数/ 集合/ 的/ 映射/ ./ 从/ G/ 中/ 找出/ 一个/ 子图/ SG/ 表示/ 满足/ R/ 的/ 复合/ 服务/ 对应/ 的/ 子/ 图/ ./ SG/ 定义/ 了/ 其/ 蕴含/ 的/ 服务/ (/ w1/ ,/ w2/ ,/ …/ ,/ wn/ )/ 的/ 调用/ 次序/ ,/ 这些/ 服务/ 满足/ 下述/ 条件/ :/ (/ 1/ )/ wi/ ./ I/ / ∪/ (/ 2/ )/ R/ ./ O/ / ∪/ 子图/ SG/ 的/ 权重/ 值/ 是/ 指/ SG/ 包含/ 节点/ 的/ 权重/ 值/ 的/ 聚合/ 值/ :/ ω/ (/ SG/ )/ =/ SG/ ./ GQoS/ ./ 若令/ SGAll/ 表示/ 所有/ 满足/ R/ 的/ 候选/ 复合/ 服务/ 集合/ ,/ 则/ 最优/ 复合/ 服务/ 的/ GQ/ (/ GlobalQoS/ )/ 定义/ 为/ δ/ =/ Min/ {/ ω/ (/ SGi/ )/ |/ SGi/ ∈/ SGAll/ }/ ./ SG/ 满足/ 下述/ 条件/ :/ (/ 3/ )/ ω/ (/ SG/ )/ =/ δ/ ./ 需要/ 指出/ ,/ 定义/ 1/ 中/ 的/ 条件/ (/ 1/ )/ 、/ (/ 2/ )/ 定义/ 了/ 复合/ 服务/ 需/ 满足/ 的/ 功能性/ 需求/ ,/ 即/ 满足/ 查询/ 请求/ ,/ 而/ 条件/ (/ 3/ )/ 则/ 定义/ 了/ 复合/ 服务/ 需/ 满足/ 的/ 非/ 功能性/ 需求/ ,/ 即/ 其/ GQ/ 为/ 最优/ ./ 为/ 解决/ 上述/ 问题/ ,/ QSynth/ 基于/ t1/ 时刻/ 的/ 服务/ 依赖图/ 搜索/ 出/ 复合/ 服务/ 以/ 满足/ 查询/ 请求/ ./ 当/ 服务/ 动态变化/ 时/ ,/ 我们/ 需对/ QSynth/ 系统/ 进行/ 扩展/ ,/ 根据/ 图中/ 服务/ 的/ 最新/ 状态/ 持续/ 更新/ 已有/ 的/ 复合/ 服务/ ,/ 保证/ 其/ 可用性/ ./ 为此/ ,/ 本文/ 提出/ 了/ 质量/ 敏感/ 的/ 复合/ 服务/ 自/ 适应/ 问题/ ./ 定义/ 3/ ./ 最/ 优质/ 量/ 敏感/ 的/ 复合/ 服务/ 自/ 适应/ 问题/ ./ 给定/ 查询/ 请求/ R/ ,/ 服务/ 依赖图/ G/ =/ (/ W/ ,/ E/ )/ 和/ 满足/ 定义/ 2/ 中/ 条件/ 的/ 复合/ 服务/ SG/ ./ 当/ G/ 被/ 动态/ 更新/ 为/ G/ =/ (/ W/ ,/ E/ )/ 时/ ,/ 自动更新/ SG/ 为/ SG/ ,/ 使/ SG/ 蕴含/ 的/ 服务/ 依然/ 满足/ 定义/ 1/ 中/ 的/ 条件/ (/ 1/ )/ 、/ (/ 2/ )/ ,/ 同时/ 保证/ SG/ 的/ GQ/ 最优性/ ./ 3.4/ 全局/ QoS/ 计算/ 规则/ 本/ 小节/ 将/ 进行/ 说明/ 服务/ 依赖图/ 中/ 的/ GQ/ 计算/ 规则/ ./ 该/ 计算/ 规则/ 与/ QoS/ 类型/ 和/ 图/ 的/ 组合/ 模式/ 相关/ ./ 3.4/ ./ 1QoS/ 类型/ 文献/ [/ 30/ -/ 31/ ]/ 将/ QoS/ 分为/ 两类/ :/ (/ 1/ )/ 否定/ 型/ ,/ 即/ QoS/ 值越/ 大/ ,/ 服务/ QoS/ 越差/ ,/ 比如/ 响应/ 时间/ 和/ 价格/ ;/ (/ 2/ )/ 肯定/ 型/ ,/ 即/ QoS/ 值越/ 大/ ,/ 服务/ QoS/ 越好/ ,/ 比如/ 吞吐量/ 和/ 声誉/ ./ 同时/ ,/ 为了/ 对/ 多个/ QoS/ 进行/ 统一/ 度量/ ,/ 按照/ 度量/ 方式/ 的/ 不同/ 又/ 可/ 把/ QoS/ 分为/ 以下/ 4/ 种/ 类型/ :/ (/ 1/ )/ 累加/ 型/ ,/ 如/ 响应/ 时间/ ./ 对于/ 两个/ 顺序调用/ 的/ 服务/ ,/ 其/ 全局/ 响应/ 时间/ 可/ 由/ 各/ 服务/ 的/ 响应/ 时间/ 累加/ 获得/ ;/ (/ 2/ )/ 最小值/ 型/ ,/ 如/ 吞吐量/ ,/ 两个/ 顺序调用/ 的/ 服务/ 的/ 全局/ 吞吐量/ ,/ 由/ 具有/ 最小/ 吞吐量/ 的/ 服务/ 决定/ ;/ (/ 3/ )/ 乘积/ 型/ ,/ 如/ 声誉/ 、/ 可靠性/ ;/ (/ 4/ )/ 最大值/ 型/ ./ 文献/ [/ 32/ -/ 33/ ]/ 给出/ 了/ 更/ 多/ 可供参考/ 的/ QoS/ 类型/ 及/ 分类/ 策略/ ,/ 本文/ 不再/ 赘述/ ./ 3.4/ ./ 2/ 组合/ 模式/ 本文/ 的/ 复合/ 服务/ 自/ 适应/ 算法/ 将/ 返回/ 相应/ 子图/ 表示/ 满足/ 需求/ 的/ 复合/ 服务/ ./ 多数/ 情况/ 下/ ,/ 这些/ 子图/ Page6/ 呈现/ 为/ 有/ 向/ 无/ 环图/ DAG/ 的/ 形式/ ./ DAG/ 中/ 主要/ 包含/ 3/ 种/ 组合/ 模式/ :/ 顺序/ (/ Sequence/ )/ 、/ 合并/ (/ Joint/ )/ 与/ 分叉/ (/ Split/ )/ ,/ 如图/ 2/ 所示/ ./ 对于/ 少量/ 含有/ 环/ 的/ 复合/ 服务/ ,/ 本文/ 将/ 使用/ Unfolding/ 方法/ [/ 21/ ]/ 对环/ 进行/ 剔除/ 操作/ ./ 3.4/ ./ 3GQ/ 计算/ 规则/ 服务/ 的/ GQ/ 计算/ 规则/ 由图/ 的/ 组合/ 模式/ (/ 见图/ 3/ )/ 和/ QoS/ 类型/ 共同/ 决定/ ./ 以/ 响应/ 时间/ 为例/ ①/ ,/ 其/ 作为/ 服务/ 的/ 第/ j/ 维/ QoS/ 时/ 的/ 全局/ 计算/ 规则/ 如表/ 4/ 所示/ ②/ ./ 模式/ 顺序/ 合并/ 分叉/ 首先/ ,/ 在/ 顺序/ 模式/ 中/ ,/ 因为/ 服务/ 依次/ 被/ 顺序调用/ ,/ 所以/ 采用/ 累加/ 型函数/ 计算/ 服务/ w/ 的/ 第/ j/ 维/ QoS/ 的/ 全局/ 聚合/ 值/ ,/ 即/ 最后/ 一个/ 被/ 调用/ 服务/ w/ 的/ 全局/ 响应/ 时间/ 由/ 其/ 所有/ 前驱/ 的/ 响应/ 时间/ 和/ w/ 自身/ 的/ 响应/ 时间/ 累加/ 获得/ ./ 其次/ ,/ 在/ 合并/ 模式/ 中/ ,/ 当/ 服务/ w1/ -/ wn/ 均/ 已/ 能够/ 被/ 调用/ 时/ ,/ 才/ 可/ 调用/ 服务/ w/ ./ 因此/ ,/ w/ 的/ 第/ j/ 维/ GQ/ 由/ w1/ -/ wn/ 中/ 第/ j/ 维/ GQ/ 最差/ 的/ 节点/ 决定/ ./ 同时/ 又/ 因为/ 响应/ 时间/ 属于/ 否定/ 型/ ,/ 所以/ 采用/ 最大值/ 函数/ 和/ 累加/ 型函数/ 计算/ 服务/ 响应/ 时间/ 的/ 全局/ 聚合/ 值/ ,/ 即/ 合并/ 节点/ w/ 的/ 全局/ 响应/ 时间/ 是/ 所有/ 前驱/ 响应/ 时间/ 的/ 最大值/ 与其/ 自身/ 响应/ 时间/ 之/ 和/ ./ 最后/ ,/ 在/ 分叉/ 模式/ 中/ ,/ 当/ w/ 能/ 被/ 调用/ 时/ ,/ 则/ 可/ 调用/ 其/ 分支/ 节点/ w1/ -/ wn/ 中/ 的/ 任一/ 节点/ ./ 因此/ 可/ 采用/ 累加/ 型函数/ 计算/ GQ/ 聚合/ 值/ ,/ 即/ 分支/ 节点/ 的/ 全局/ 响应/ 时间/ 由/ 其/ 分叉/ 节点/ m/ 的/ 全局/ 响应/ 时间/ 和/ 其/ 自身/ 的/ 响应/ 时间/ 累加/ 得到/ ./ 例/ 1/ ./ 以图/ 1/ 为例/ ,/ 利用/ 表/ 4/ 中/ 的/ GQ/ 计算/ 规则/ 可/ 得/ (/ Start/ 节点/ 的/ QoS/ —/ —/ —/ 响应/ 时间/ 设置/ 为/ 0/ )/ :/ w4/ ./ GQoS/ =/ ∑/ (/ max/ {/ Start/ ./ GQoS/ ,/ w2/ ./ GQoS/ }/ ,/ 需要/ 特别/ 指出/ ,/ 若/ w/ 的/ 同一/ 输入/ 参数/ 由/ 两个/ 以上/ 的/ 服务/ 提供/ ,/ 则/ 本文/ 选择/ 其/ 最优/ 提供者/ 作为/ 其/ 前驱/ 节点/ ./ 任一/ 可/ 达/ 节点/ 的/ 输入/ 参数/ 的/ 最优/ 提供者/ 定义/ 如下/ ./ 定义/ 4/ ./ 节点/ 输入/ 参数/ 的/ 最优/ 提供者/ ./ 即该/ 节点/ 所有/ 可/ 达/ 前驱/ 中/ ,/ 提供/ 该/ 输入/ 参数/ 且/ GQ/ 最小/ 的/ 前驱/ 结点/ ./ 其/ 形式化/ 定义/ 如下/ :/ 给定/ 服务/ 依赖图/ G/ =/ (/ W/ ,/ E/ )/ ,/ / wi/ ∈/ W/ ,/ / inputi/ ∈/ wi/ ./ I/ ,/ inputi/ 的/ 最优/ 提供者/ 为/ popt/ ,/ popt/ ∈/ W/ ,/ 当且/ 仅/ 当/ popt/ 满足/ :/ (/ 1/ )/ popt/ ./ status/ =/ enabled/ ;/ (/ 2/ )/ popt/ ./ o/ =/ inputi/ ;/ (/ 3/ )/ popt/ ./ GQoS/ =/ Min/ {/ w/ ./ GQoS/ |/ w/ ∈/ W/ ∧/ 例/ 2/ ./ 以图/ 1/ 为例/ ,/ 节点/ w7/ 的/ 输入/ 参数/ h/ 可/ 由/ w3/ (/ status/ =/ enabled/ ,/ GQ/ =/ 700/ )/ ,/ w5/ (/ status/ =/ disabled/ ,/ GQ/ =/ +/ )/ 和/ w8/ (/ status/ =/ enbbled/ ,/ GQ/ =/ 300/ )/ 提供/ ,/ 根据/ 定义/ 4/ ,/ w7/ 的/ 输入/ 参数/ h/ 的/ 最优/ 提供者/ 为/ w8/ ./ 因此/ ,/ w7/ ./ GQ/ =/ w8/ ./ GQ/ +/ w7/ ./ QoS/ =/ 300/ +/ 300/ =/ 600.4/ 质量/ 敏感/ 的/ 复合/ 服务/ 自/ 适应/ 为/ 处理/ 动态变化/ 的/ 服务/ ,/ 我们/ 将/ 复合/ 服务/ 自/ 适应/ 算法/ 集成/ 到/ QSynth/ 系统/ 中/ ,/ 设计/ 并/ 实现/ 质量/ 敏感/ 的/ 自/ 适应/ 服务/ 组合/ 系统/ —/ —/ —/ QSynth/ +./ 如图/ 3/ 所示/ ,/ 该/ 系统/ 主要/ 包含/ 4/ 个/ 主要/ 的/ 工作/ 步骤/ :/ (/ 1/ )/ 最优/ 复合/ 服务/ 构建/ ./ 解决/ 质量/ 敏感/ 的/ 自动/ 服务/ 组合/ 问题/ (/ 定义/ 1/ )/ ,/ 生成/ t1/ 时刻/ 满足用户/ 查询/ 请求/ 且/ 服务/ QoS/ 最优/ 的/ 复合/ 服务/ ./ 同时/ ,/ 保存/ 服务/ 的/ 中间状态/ 信息/ ,/ 例如/ ,/ 在/ 当前/ 查询/ 中/ ,/ 服务/ 是否/ 可/ 达/ 以及/ 服务/ 的/ GQ/ 等/ 信息/ ./ (/ 2/ )/ 动态/ 服务/ 监控/ 与/ 处理/ ./ 监控/ 发生变化/ 的/ 动态/ 服务/ ./ 同时/ ,/ 对/ 动态/ 服务/ 进行/ 分析/ ,/ 判断/ 动态/ 服务/ 是否/ 对/ 当前/ 已/ 构建/ 的/ 服务/ 依赖图/ 和/ t1/ 时刻/ 的/ 最优/ 复/ ①/ ②/ Page7/ 图/ 3/ 系统/ 工作/ 流程/ 合/ 服务/ 产生/ 影响/ ./ (/ 3/ )/ 服务/ 依赖图/ 结构/ 更新/ ./ 更新/ 因/ 动态/ 服务/ 的/ 影响/ 而/ 发生/ 结构/ 变化/ 的/ 服务/ 依赖图/ ./ 例如/ ,/ 根据/ 步骤/ 2/ 的/ 监控/ 结果/ ,/ 须/ 将/ 新增/ 服务/ w9/ 添加/ 到/ 图/ 3/ (/ 步骤/ 3/ )/ 所示/ 的/ 服务/ 依赖图/ 中/ ./ (/ 4/ )/ 复合/ 服务/ 自/ 适应/ ./ 解决/ 质量/ 敏感/ 的/ 复合/ 服务/ 自/ 适应/ 问题/ ,/ 根据/ 需要/ 自动更新/ 复合/ 服务/ ./ 其/ 基本/ 处理/ 流程/ 是/ :/ 首先/ ,/ 依据/ 更新/ 后/ 的/ 服务/ 依赖图/ ,/ 找出/ 图中受/ 动态/ 服务/ 影响/ 的/ 服务/ 并/ 按照/ 次序/ 更新/ 受/ 影响/ 服务/ 的/ 状态/ ,/ 例如/ GQ/ 等/ ;/ 其次/ ,/ 判断/ 复合/ 服务/ 是否/ 受到/ 动态/ 服务/ 环境/ 的/ 影响/ ,/ 即/ 是否/ 还/ 满足用户/ 查询/ 请求/ 和/ 服务/ QoS/ 最优/ ;/ 最后/ ,/ 利用/ 反向/ 搜索/ 仅/ 更新/ 受/ 影响/ 的/ 复合/ 服务/ ,/ 而/ 保留/ 未受/ 影响/ 的/ 复合/ 服务/ ./ 以图/ 3/ (/ 步骤/ 4/ )/ 所示/ 的/ 最优/ 复合/ 服务/ 为例/ ,/ 由于/ 新增/ 服务/ w9/ 亦/ 提供/ 其/ 包含/ 原子/ 服务/ w8/ 的/ 输入/ 参数/ g/ 且/ w9/ 在/ 更新/ 后/ 的/ 服务/ 依赖图/ 中可达/ ,/ w8/ 的/ GQ/ 可能/ 因/ w9/ 的/ 加入/ 而/ 发生/ 改变/ ./ 根据/ 表/ 4/ 中/ 的/ 规则/ 可知/ w9/ ./ GQ/ >/ w4/ ./ GQ/ (/ 400/ >/ 200/ )/ ./ 因此/ ,/ w9/ 为/ 非/ 参数/ g/ 的/ 最优/ 提供者/ ,/ 最终/ 不/ 影响/ w8/ 的/ GQ/ ./ 综上/ ,/ 最优/ 复合/ 服务/ 无需/ 更新/ ./ 下文/ 将/ 首先/ 介绍/ QSynth/ +/ 依赖/ 的/ 数据结构/ ,/ 然后/ 分别/ 对/ 上述/ 3/ 个/ 步骤/ 进行/ 详细/ 介绍/ ./ 4.1/ 数据结构/ 本文/ 使用/ 的/ 数据结构/ 包括/ 反向/ 索引/ 表/ (/ InvertedIndexTable/ ,/ IIT/ )/ ,/ 服务/ 节点/ (/ ServiceNode/ )/ ,/ 可/ 达/ 前置/ 表/ (/ ReachablePreconditionTable/ ,/ RPT/ )/ ,/ 如图/ 4/ 所示/ ./ 反向/ 索引/ 表/ ./ 表示/ 和/ 存储/ 服务/ 依赖图/ ./ 表中/ 的/ 项为/ 键值/ 对/ (/ 输入/ 参数/ ,/ 节点/ 列表/ )/ ./ 其中/ ,/ 键为/ 参数/ ,/ 其值/ 为/ 需要/ 该/ 参数/ 作为/ 输入/ 的/ 节点/ 列表/ ./ 利用/ 反向/ 索引/ 表/ ,/ 可/ 避免/ 传统/ 的/ 图/ 存储/ 结构/ (/ 如/ 邻接/ 表/ 和/ 邻接矩阵/ )/ 带来/ 的/ 计算/ 复杂度/ 较/ 高/ 的/ 问题/ ,/ 从而/ 能/ 有效/ 提升/ 最优/ 复合/ 服务/ 的/ 搜索/ 效率/ [/ 17/ ]/ ./ 服务/ 节点/ ./ 存储/ 节点/ 及其/ 相关/ 信息/ ./ 本文/ 使用/ 七元/ 组/ 表示/ 节点/ ,/ 具体/ 形式/ 为/ {/ wi/ ,/ Iwi/ ,/ Owi/ ,/ Q/ ,/ GQ/ ,/ Count/ ,/ Status/ }/ ./ 其中/ ,/ wi/ 是/ 节点/ 对应/ Web/ 服务/ 的/ 标识/ ./ Iwi/ 和/ Owi/ 分别/ 表示/ 节点/ 的/ 输入/ 和/ 输出/ 参数/ 集/ ./ Q/ 表示/ 节点/ 自身/ 的/ QoS/ ./ GQ/ 表示/ 从/ 起始/ 节点/ 到/ 当前/ Page8/ 节点/ 的/ GQ/ ./ Count/ 用来/ 记录/ 节点/ 需要/ 的/ 输入/ 参数/ 的/ 个数/ ,/ 初始值/ 设定/ 为/ 节点/ 输入/ 参数/ 集/ 的/ 大小/ ./ Status/ 表示/ 节点/ 的/ 状态/ ,/ 默认/ 状态/ 为/ 不可/ 达/ ,/ 记为/ disabled/ ./ 在/ 算法/ 执行/ 过程/ 中/ ,/ 如果/ Count/ 值/ 减为/ 0/ ,/ 则/ 令/ Status/ 为/ 可达态/ ,/ 记为/ enabled/ ./ 需要/ 特别/ 指出/ ,/ 在/ 执行/ 过程/ 中/ ,/ 算法/ 将/ 根据/ 实际/ 情况/ 对/ 相应/ 节点/ 的/ GQ/ ,/ Count/ 以及/ Status/ 进行/ 动态/ 更新/ ./ 可/ 触发/ 参数表/ ./ 存储/ 算法/ 执行/ 过程/ 中可达/ 节点/ 的/ 输入/ 参数/ 及其/ 最优/ 提供者/ 的/ 相关/ 信息/ ./ 需要/ 指出/ ,/ 由于/ 我们/ 采用/ 反向/ 索引/ 表/ 构建/ 服务/ 依赖图/ ./ 若记/ c/ 为/ 服务/ 输入/ 参数/ 的/ 平均/ 个数/ ,/ p/ 为/ 单个/ 输入/ 参数/ 服务提供者/ 的/ 平均/ 个数/ ,/ n/ 为/ 服务/ 依赖图/ 中/ 的/ 节点/ 总数/ ,/ 则/ 构建/ 服务/ 依赖图/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ ×/ c/ ×/ p/ )/ ./ 利用/ 反向/ 索引/ 表中/ 记录/ 的/ 键/ -/ 值/ 对/ 信息/ (/ 输入/ 参数/ -/ 服务/ 列表/ )/ ,/ 可知/ 与/ 某/ 服务/ 接口/ 参数/ 匹配/ 的/ 前/ 继/ 服务/ 和/ 后继/ 服务/ ./ 由于/ 服务/ 的/ 语义/ 不是/ 本文/ 研究/ 的/ 重点/ ,/ 所以/ 在/ 本文/ 的/ 服务/ 模型/ 中/ ,/ 按照/ 通常/ 自动/ 服务/ 组合/ 领域/ 的/ 惯例/ ,/ 我们/ 对/ 服务/ 参数/ 的/ 语义/ 进行/ 了/ 简化/ 处理/ ,/ 服务/ 接口/ 之间/ 的/ 匹配/ 是/ 按照/ 参数/ 类型/ 的/ 匹配/ 进行/ 判断/ ./ 例如/ ,/ 当/ 一个/ 服务/ A/ 的/ 输出/ 参数/ 是/ 另/ 一/ 服务/ B/ 的/ 输入/ 参数/ 时/ (/ 参见/ 本文/ 3.1/ 节/ “/ 参数/ 匹配/ ”/ 和/ “/ 服务/ 匹配/ ”/ )/ ,/ A/ 和/ B/ 就/ 被/ 视为/ 匹配/ ./ 此外/ ,/ 因为/ 服务/ 依赖图/ 由/ 数据结构/ 反向/ 索引/ 表/ 唯一/ 定义/ 和/ 表达/ ,/ 所以/ 服务/ 依赖图/ 也/ 唯一/ ./ 4.2/ 最优/ 复合/ 服务/ 构建/ 为/ 解决/ 质量/ 敏感/ 的/ 自动/ 服务/ 组合/ 问题/ ,/ 我们/ 利用/ 基于/ 前/ 向搜索/ 的/ Sim/ -/ Dijkstra/ 算法/ 生成/ 最优/ 复合/ 服务/ 的/ 中间/ 信息/ ,/ 然后/ 利用/ 后/ 向搜索/ 生成/ 最优/ 复合/ 服务/ ./ 4.2/ ./ 1Sim/ -/ Dijkstra/ 算法/ 为/ 求取/ 最优/ 复合/ 服务/ ,/ 我们/ 在/ 之前/ 的/ 工作/ [/ 18/ ]/ 中/ 提出/ 了/ Sim/ -/ Dijkstra/ 算法/ ./ 该/ 算法/ 的/ 基本/ 思想/ 是/ 根据/ 查询/ 请求/ ,/ 执行/ 一次/ 从/ 始发/ 端点/ Start/ 到/ 终止/ 端点/ End/ 的/ 前/ 向搜索/ ,/ 找出/ 位于/ 两端/ 点/ 之间/ 所有/ 状态/ 可达/ 的/ 节点/ ,/ 并/ 利用/ 可/ 达/ 前置/ 表/ 存储/ 和/ 记录/ 所有/ 可/ 达/ 节点/ 输入/ 的/ 最优/ 提供者/ ./ 例/ 3/ ./ 当/ 不/ 考虑/ 动态/ 服务/ 时/ ,/ 以图/ 3/ (/ 步骤/ 1/ )/ 为例/ 说明/ Sim/ -/ Dijkstra/ 算法/ 的/ 执行/ 过程/ ,/ 见表/ 5.4/ ./ 2.2/ 后/ 向搜索/ Sim/ -/ Dijkstra/ 算法/ 结束/ 后/ ,/ 将/ 获得/ 存储/ 在/ 可达/ 前置/ 表中/ 关于/ 可/ 达/ 节点/ 的/ 相关/ 信息/ ./ 利用/ 这些/ 信息/ ,/ 可/ 求取/ 满足/ 查询/ 请求/ 的/ 最优/ 复合/ 服务/ ./ 具体/ 过程/ 如下/ :/ 从/ End/ 到/ Start/ 发起/ 一次/ 后/ 向搜索/ ./ 在/ 搜索/ 过程/ 中/ ,/ 对于/ 当前/ 的/ 节点/ ,/ 选择/ 可/ 达/ 前置/ 表中/ 记录/ 的/ 该节/ 步骤/ 123w4/ (/ 200/ )/ ;/ w3/ (/ 700/ )/ ;/ w1/ (/ 800/ )/ e/ (/ 100/ ,/ w2/ )/ ;/ f/ (/ 100/ ,/ w2/ )/ 4w8/ (/ 300/ )/ ;/ w3/ (/ 700/ )/ ;/ w1/ (/ 800/ )/ 5w7/ (/ 600/ )/ ;/ w3/ (/ 700/ )/ ;/ w1/ (/ 800/ )/ 6End/ (/ 600/ )/ ;/ w3/ (/ 700/ )/ ;/ w1/ (/ 800/ )/ 点/ 输入/ 参数/ 的/ 最优/ 提供者/ ,/ 并/ 将/ 其/ 作为/ 当前/ 节点/ 的/ 前驱/ 节点/ ,/ 直至/ 反向/ 回溯/ 至/ Start/ 节点/ ./ 例/ 4/ ./ 利用/ 表/ 5/ 中/ 的/ RPT/ 项/ ,/ 可/ 构建/ 图/ 3/ 所示/ 的/ 最优/ 复合/ 服务/ ,/ 具体/ 过程/ 见表/ 6/ ./ 步骤/ 1234564.3/ 动态/ 服务/ 监控/ 与/ 处理/ 在/ QSynth/ +/ 系统/ 中/ ,/ 我们/ 采用/ soapUI/ ①/ 对/ Web/ 服务/ 及其/ QoS/ 进行/ 监控/ 和/ 获取/ ,/ 然后/ 按照/ 文献/ [/ 35/ ]/ 中/ 阐述/ 的/ 方法/ 从/ 发布/ // 订阅/ 的/ 网络/ 中/ 接收/ 关于/ 动态/ 服务/ 的/ 事件/ ./ 例如/ ,/ 当/ 某个/ 服务/ wi/ 的/ 响应/ 时间/ 超出/ 指定/ 阈值/ (/ 如/ 大于/ 4s/ )/ 时/ ,/ 相应/ 的/ 事件/ 将/ 动态/ 生成/ 并/ 路由/ 至/ 系统/ 中/ ./ 对于/ 接收/ 到/ 的/ 动态/ 服务/ ,/ QSynth/ +/ 按照/ 不同/ 的/ 处理/ 策略/ 将/ 其/ 可/ 分为/ 4/ 类/ ,/ 分别/ 为/ :/ (/ 1/ )/ 新增/ 服务/ (/ C1/ )/ :/ 服务/ 依赖图/ 中/ 新/ 加入/ 的/ 服务/ ;/ (/ 2/ )/ 失效/ 服务/ (/ C2/ )/ :/ 服务/ 依赖图/ 中/ 已/ 存在/ 但/ 当前/ 不可/ 用/ 的/ 服务/ ;/ (/ 3/ )/ 接口/ 变化/ 服务/ (/ C3/ )/ :/ 服务/ 依赖图/ 中/ 已/ 存在/ 但/ 接口/ 信息/ (/ 如/ 输入/ 、/ 输出/ 参数/ )/ 发生变化/ 的/ 服务/ ;/ (/ 4/ )/ QoS/ 发生变化/ 的/ 服务/ (/ C4/ )/ ./ 根据/ 分析/ 可知/ ,/ 这些/ 动态/ 服务/ 将会/ 产生/ 如下/ 影响/ :/ (/ 1/ )/ 动态/ 服务/ 将/ 引起/ 服务/ 依赖图/ 结构/ 的/ 改变/ ./ 因此/ ,/ 本文/ 将/ 相应/ 地/ 对/ 存储/ 服务/ 依赖图/ 的/ 反向/ 索引/ 表/ 和/ 服务/ 节点/ 进行/ 更新/ 操作/ ./ 例如/ ,/ 图/ 3/ 中/ 的/ 新增/ 服务/ w9/ ,/ 其/ 输入/ 参数/ 包括/ c/ 和/ e/ ./ 对于/ 该/ 服务/ ,/ 我们/ 首先/ 在/ 服务/ 节点/ 中/ 添加/ 新/ 表项/ ,/ 用于/ 注册/ w9/ 的/ 相关/ 信息/ ,/ 然后/ ,/ 根据/ 参数/ c/ 和/ e/ 查找/ 反向/ 索引/ 表中/ 相应/ 的/ 表项/ ,/ 将/ w9/ 添加/ 到/ c/ 和/ e/ 对应/ 的/ 节点/ 列表/ 中/ ./ ①/ http/ :/ // // www/ ./ soapui/ ./ org/ // Page9/ (/ 2/ )/ 动态/ 服务/ 将/ 引发/ 某些/ Web/ 服务/ 的/ 状态/ 变化/ ,/ 如/ GQ/ 或/ 可达/ 状态/ 的/ 变化/ ./ 例如/ ,/ 新增/ 服务/ w9/ 在/ 更新/ 后/ 的/ 服务/ 依赖图/ 中/ 的/ 状态/ 为/ 可达/ ,/ 因此/ w9/ 可能/ 影响/ 其可达/ 后继/ 节点/ 的/ GQ/ 或/ 可达/ 状态/ ./ (/ 3/ )/ 动态/ 服务/ 将/ 造成/ 某些/ 复合/ 服务/ 的/ 失效/ 或/ 服务/ QoS/ 下降/ ./ 此时/ ,/ 必须/ 对受/ 影响/ 的/ 复合/ 服务/ 进行/ 更新/ ,/ 以/ 满足用户/ 的/ 功能性/ 和/ 非/ 功能性/ 需求/ ./ 尽管/ 利用/ QSynth/ 重新/ 查询/ 一次/ 可/ 获取/ 当前/ 状态/ 下/ 最新/ 的/ 复合/ 服务/ ,/ 然而/ 每当/ 出现/ 新/ 的/ 动态/ 服务/ 时/ ,/ QSynth/ 就/ 需要/ 对/ 所有/ 存在/ 的/ 复合/ 服务/ 进行/ 重新/ 查询/ ,/ 效率/ 极为/ 低下/ ,/ 故/ 不能/ 采用/ ./ 本文/ 4.5/ 节将/ 给出/ 效率/ 更/ 高/ 的/ 方式/ 判断/ 缓存/ 中/ (/ 已/ 存在/ )/ 的/ 复合/ 服务/ 是否/ 受到/ 影响/ ,/ 从而/ 决定/ 是否/ 对/ 其/ 进行/ 更新/ ./ 4.4/ 服务/ 依赖图/ 结构/ 更新/ 算法/ 由/ 4.3/ 节/ 可知/ ,/ 4/ 类/ 动态/ 服务/ 会/ 对/ 服务/ 依赖图/ 产生/ 影响/ ./ 按照/ 动态/ 服务/ 的/ 类型/ ,/ 本文/ 分别/ 使用/ 如下/ 策略/ 进行/ 服务/ 依赖图/ 的/ 更新/ :/ 首先/ ,/ 对于/ 新增/ 服务/ ,/ 在/ 服务/ 依赖图/ 中/ 添加/ 相应/ 的/ 节点/ ;/ 其次/ ,/ 对于/ 失效/ 服务/ ,/ 从/ 服务/ 依赖图/ 中/ 删除/ 相应/ 的/ 节点/ ;/ 再次/ ,/ 对于/ QoS/ 发生变化/ 的/ 服务/ ,/ 更新/ 服务/ 依赖图/ 中/ 相应/ 节点/ 的/ QoS/ 值/ ;/ 最后/ ,/ 对于/ 接口/ 变化/ 的/ 服务/ ,/ 分为/ 两步/ 处理/ :/ (/ 1/ )/ 在/ 服务/ 依赖图/ 中/ 删除/ 原有/ 服务/ ;/ (/ 2/ )/ 将/ 服务/ 作为/ 新增/ 服务/ 处理/ ./ 因此/ ,/ 按照/ 上述/ 方式/ ,/ 我们/ 已/ 将/ 4/ 类/ 动态/ 服务/ 转换/ 为/ 3/ 类/ 动态/ 服务/ ./ 服务/ 依赖图/ 结构/ 更新/ 算法/ 见/ 算法/ 1/ ,/ 其/ 具体/ 过程/ 为/ :/ 首先/ ,/ 处理/ 接口/ 变化/ 服务/ ,/ 即将/ 原有/ 服务/ 归类/ 为/ 失效/ 服务/ ,/ 同时/ 将/ 接口/ 变化/ 后/ 的/ 服务/ 归类/ 为/ 新增/ 服务/ (/ 第/ 1/ ~/ 4/ 行/ )/ ./ 其次/ ,/ 处理/ 新增/ 服务/ ./ 算法/ 将/ 在/ 反向/ 索引/ 表/ 和/ 服务/ 节点/ 中/ 添加/ 其/ 对应/ 的/ 表项/ (/ 第/ 5/ ~/ 15/ 行/ )/ ./ 再次/ ,/ 处理/ 失效/ 服务/ ./ 算法/ 将/ 从/ 反向/ 索引/ 表/ 和/ 服务/ 节点/ 中/ 移除/ 相应/ 表项/ (/ 第/ 16/ ~/ 23/ 行/ )/ ./ 最后/ ,/ 处理/ QoS/ 发生变化/ 的/ 服务/ ./ 算法/ 将/ 更新/ 服务/ 节点/ 中/ 相应/ 节点/ 的/ QoS/ (/ 第/ 24/ ~/ 26/ 行/ )/ ./ 算法/ 1/ ./ 服务/ 依赖图/ 结构/ 更新/ 算法/ ./ 输入/ :/ 原始/ 服务/ 依赖图/ IIT/ &/ Nodes/ 输出/ :/ 新/ 服务/ 依赖图/ // // 处理/ 接口/ 变化/ 服务/ 集合/ C31/ ./ FOREACHServiceu/ ∈/ C32/ ./ C1/ ./ add/ (/ originalu/ )/ ;/ 3/ ./ C2/ ./ add/ (/ changedu/ )/ ;/ 4/ ./ ENDFOR/ // // 处理/ 新增/ 服务/ 集合/ C15/ ./ FOREACHServicev/ ∈/ C1do6/ ./ Nodes/ ./ add/ (/ v/ )/ ;/ 7/ ./ FOREACHpar/ ∈/ v/ ./ Ido8/ ./ entry/ / IIT/ ./ findByKey/ (/ par/ )/ ;/ 9/ ./ IFentry/ ≠/ / THEN10/ ./ list/ / entry/ ./ nodeList/ ;/ 11/ ./ list/ ./ add/ (/ v/ )/ ;/ 12/ ./ ELSE13/ ./ IIT/ ./ addNewEntry/ (/ par/ ,/ v/ )/ ;/ 14/ ./ ENDFOR15/ ./ ENDFOR/ // // 处理/ 失效/ 服务/ 集合/ C216/ ./ FOREACHServicew/ ∈/ C2do17/ ./ Nodes/ ./ remove/ (/ w/ )/ ;/ 18/ ./ FOREACHpar/ ∈/ w/ ./ Ido19/ ./ entry/ / IIT/ ./ findByKey/ (/ par/ )/ ;/ 20/ ./ list/ / entry/ ./ nodeList/ ;/ 21/ ./ list/ ./ remove/ (/ w/ )/ ;/ 22/ ./ ENDFOR23/ ./ ENDFOR/ // // 处理/ QoS/ 变化/ 服务/ 集合/ C424/ ./ FOREACHServicex/ ∈/ C4do25/ ./ x/ ./ updateQoS/ (/ )/ ;/ 26/ ./ ENDFOR4/ ./ 5/ 复合/ 服务/ 自/ 适应/ 算法/ 当/ 接收/ 到/ 动态/ 服务/ 事件/ 后/ ,/ QSynth/ +/ 利用/ 复合/ 服务/ 自/ 适应/ 算法/ 根据/ 实际/ 情况/ 生成/ 新/ 的/ 最优/ 复合/ 服务/ ./ 该/ 算法/ 的/ 基本/ 思想/ 是/ :/ 首先/ ,/ 判断/ 服务/ 依赖图/ 中/ 的/ 动态/ 服务/ 是否/ 影响/ 其他/ 服务/ 的/ 状态/ ./ 如果/ 动态/ 服务/ 的/ 加入/ 或/ 删除/ 不/ 影响/ 其他/ 服务/ 的/ 状态/ ,/ 则/ 无需/ 更新/ 其他/ 服务/ 的/ 状态/ ,/ 否则/ ,/ 需要/ 从/ 动态/ 服务/ 开始/ ,/ 在/ 服务/ 依赖图/ 中/ 依次/ 更新/ 受/ 影响/ 服务/ 的/ 状态/ ./ 其次/ ,/ 若/ 原有/ 复合/ 服务/ 包含/ 受/ 影响/ 的/ 服务/ ,/ 则/ 需要/ 对此/ 复合/ 服务/ 进行/ 更新/ ,/ 否则/ ,/ 可/ 维持/ 原有/ 复合/ 服务/ 不变/ ./ 复合/ 服务/ 自/ 适应/ 算法/ 见/ 算法/ 2/ ,/ 其/ 具体步骤/ 如下/ :/ (/ 1/ )/ 分析/ 动态/ 服务/ 的/ 影响/ ,/ 识别/ 出/ 可能/ 引起/ 其他/ 服务/ 状态/ 变化/ 的/ 动态/ 服务/ (/ 第/ 1/ ~/ 12/ 行/ )/ ./ 具体/ 而言/ ,/ 一方面/ ,/ 对于/ 新增/ 服务/ ,/ 当/ 服务/ 依赖图/ 添加/ 该/ 服务/ 后/ ,/ 重新/ 获取/ 其/ GQ/ ./ 新/ 的/ GQ/ 将/ 存储/ 到/ newGQ/ 变量/ 中/ ,/ newGQ/ 初始值/ 为/ +./ 若/ 新增/ 服务/ 的/ newGQ/ 不/ 等于/ +/ ,/ 则/ 该/ 服务/ 加入/ 服务/ 依赖图/ 后/ ,/ 将/ 可能/ 会/ 影响/ 其/ 后继/ 节点/ 的/ 状态/ ./ 例如/ ,/ 该/ 服务/ 不可/ 达/ 的/ 后继/ 节点/ 可能/ 因/ 新增/ 服务/ 节点/ 变为/ 可达/ ./ 另一方面/ ,/ 对于/ 失效/ 服务/ 与/ QoS/ 变化/ 的/ 服务/ ,/ 若/ 其/ 原始/ 的/ GQ/ 不/ 等于/ +/ ,/ 则/ 该/ 服务/ 节点/ 的/ 删除/ 或/ QoS/ 更新/ 会/ 影响/ 其可达/ 后继/ 节点/ 的/ 状态/ ./ 例如/ ,/ 当/ 失效/ 服务/ 节点/ 被/ 删除/ 后/ ,/ 其/ 原本/ 处于/ 可/ 达/ 状态/ 的/ 后继/ 节点/ 可能/ 变为/ 不可/ Page10/ 达/ ./ 当/ 服务/ QoS/ 变化/ 后/ ,/ 其可达/ 后继/ 节点/ 的/ GQ/ 将/ 可能/ 会/ 受到/ 影响/ ./ (/ 2/ )/ 更新/ 受/ 影响/ 服务/ 的/ 状态/ (/ 第/ 13/ ~/ 26/ 行/ )/ ./ 在/ 该步/ 中/ ,/ 算法/ 首先/ 利用/ 优先/ 队列/ PQ/ 存储/ 第一步/ 中/ 识别/ 出/ 的/ 可能/ 影响/ 其他/ 服务/ 状态/ 的/ 动态/ 服务/ ./ 然后/ ,/ 循环/ 弹出/ PQ/ 中/ 的/ 服务/ 并/ 进行/ 相应/ 处理/ ./ 定义/ pqQoS/ =/ min/ (/ newGQ/ ,/ GQ/ )/ ./ 受/ Dijkstra/ 算法/ 启发/ ①/ ,/ 算法/ 2/ 按照/ pqQoS/ 从小到大/ 顺序/ 依次/ 更新/ 服务/ 状态/ ,/ 即/ PQ/ 优先/ 弹出/ pqQoS/ 最小/ 的/ 节点/ ./ 这种/ 更新/ 顺序/ 可/ 避免/ 服务/ 状态/ 的/ 反复/ 更新/ ./ 以图/ 3/ 为例/ ,/ 假设/ w2/ 和/ w4/ 是/ 动态/ 服务/ ,/ 其/ QoS/ 发生/ 了/ 变化/ ./ 若先/ 更新/ w4/ ,/ 接着/ 处理/ w8/ ,/ w7/ 和/ End/ ,/ 则/ 当/ 更新/ w2/ 时/ ,/ 会/ 引起/ w4/ ,/ w8/ ,/ w7/ 和/ End/ 的/ 再次/ 更新/ ./ 一种/ 较/ 好/ 的/ 更新/ 次序/ 应为/ :/ 先/ 更新/ w2/ ,/ 然后/ 依次/ 处理/ w4/ ,/ w8/ ,/ w7/ 和/ End/ ./ 利用/ 优先/ 队列/ PQ/ ,/ 算法/ 2/ 可/ 有效/ 避免/ 上述/ 示例/ 中/ 服务/ 状态/ 的/ 冗余/ 更新/ ./ 本文/ 第/ 5/ 节将/ 对此/ 进行/ 详细/ 讨论/ ./ 对于/ 每个/ 弹出/ 的/ 服务/ ,/ 在/ 当前/ 服务/ 依赖图/ 中/ 重新/ 获取/ 其/ 输入/ 的/ 最优/ 提供者/ ./ 若/ 其/ 输入/ 的/ 最优/ 提供者/ 发生变化/ ,/ 则/ 更新/ 相关/ RPT/ 表项/ ./ 此时/ ,/ 由于/ 该/ 服务/ 的/ 直接/ 后继/ 节点/ 可能/ 受到/ 上述/ 更新/ 的/ 影响/ ,/ 算法/ 2/ 将/ 把/ 这些/ 后继/ 节点/ 放入/ PQ/ 中/ 等待/ 下次/ 处理/ ./ (/ 3/ )/ 当/ 优先/ 队列/ 中/ 所有/ 服务/ 处理完毕/ 时/ ,/ 根据/ 需要/ 生成/ 新/ 的/ 复合/ 服务/ (/ 第/ 27/ ~/ 32/ 行/ )/ :/ ①/ 若/ End/ 节点/ 的/ GQ/ 变为/ +/ ,/ 则/ 表明/ 查询/ 请求/ 已/ 不能/ 满足/ ./ 此时/ ,/ 算法/ 2/ 无法/ 生成/ 新/ 的/ 、/ 可/ 供/ 替换/ 的/ 复合/ 服务/ ;/ ②/ 若/ End/ 节点/ 的/ GQ/ 不/ 等于/ +/ ,/ 则/ 检查/ 原有/ 复合/ 服务/ 是否/ 包含/ 受/ 影响/ 的/ 服务/ (/ 即/ GQ/ 发生变化/ 的/ 服务/ )/ ./ 如果/ 包含/ ,/ 就/ 需要/ 反向/ 生成/ 新/ 的/ 复合/ 服务/ ,/ 否则/ 保留/ 原有/ 复合/ 服务/ 不变/ ./ 算法/ 2/ ./ 复合/ 服务/ 自/ 适应/ 算法/ ./ 输入/ :/ 新/ 服务/ 依赖图/ IIT/ &/ Nodes/ 输出/ :/ 新/ 最优/ 复合/ 服务/ SC/ // // 识别/ 可能/ 影响/ 其他/ 服务/ 的/ 动态/ 服务/ 1/ ./ FOREACHServiceu/ ∈/ C1do2/ ./ u/ ./ GQ/ / +/ ;/ 3/ ./ u/ ./ newGQ/ / u/ ./ getGQ/ (/ )/ ;/ 4/ ./ IFu/ ./ newGQ/ ≠/ +/ THEN5/ ./ PQ/ ./ add/ (/ u/ )/ ;/ 6/ ./ ENDIF7/ ./ ENDFOR8/ ./ FOREACHServicev/ ∈/ C2/ ∪/ C4do9/ ./ IFv/ ./ GQ/ ≠/ +/ THEN10/ ./ PQ/ ./ add/ (/ v/ )/ ;/ 11/ ./ ENDIF12/ ./ ENDFOR/ // // 更新/ 受/ 影响/ 服务/ 状态/ 13/ ./ WHILEPQ/ ≠/ / do14/ ./ w/ / PQ/ ./ popOpt/ (/ )/ ;/ 15/ ./ FOREACHpar/ ∈/ w/ ./ O16/ ./ newProvider/ / getOptP/ (/ par/ )/ ;/ 17/ ./ IFpar/ ./ provider/ ≠/ newProviderTHEN18/ ./ entry/ / RPT/ ./ findByKey/ (/ par/ )/ ;/ 19/ ./ IFentry/ ≠/ / THEN20/ ./ entry/ ./ optGQ/ / newProvider/ ./ GQ/ ;/ 21/ ./ entry/ :/ provider/ / newProvider/ ;/ 22/ ./ ENDIF23/ ./ PQ/ ./ add/ (/ w/ ./ directSuccessors/ )/ ;/ 24/ ./ ENDIF25/ ./ ENDFOR26/ ./ ENDWHILE/ // // 复合/ 服务/ 更新/ 27/ ./ IFEnd/ ./ GQ/ =/ +/ THEN28/ ./ Returnnoresults/ ;/ 29/ ./ ENDIF30/ ./ IFServicex/ ∈/ SCx/ ./ GQ/ ≠/ X/ ./ newGQTHEN31/ ./ ReturnSCbybackwardsearch/ ;/ 32/ ./ ENDIF/ 例/ 5/ ./ 如图/ 3/ (/ 步骤/ 4/ )/ 所示/ ,/ 当/ 新增/ 服务/ w9/ 加入/ 到/ 服务/ 依赖图/ 中/ 时/ ,/ 表/ 7/ 给出/ 了/ 复合/ 服务/ 自/ 适应/ 算法/ 的/ 具体/ 过程/ ./ 从表/ 7/ 中/ 可以/ 看出/ ,/ 尽管/ w9/ 也/ 提供/ 了/ 最优/ 复合/ 服务/ ,/ 包含/ 原子/ 服务/ w8/ 的/ 输出/ 参数/ g/ ,/ 但是/ 该/ 最优/ 复合/ 服务/ 未/ 受到/ 影响/ ,/ 因此/ 无需/ 更新/ ./ 步骤/ 1235/ 自/ 适应/ 算法/ 分析/ 本/ 节/ 首先/ 分析/ 了/ 复合/ 服务/ 自/ 适应/ 算法/ (/ 算法/ 2/ )/ ①/ 令/ v/ 为/ 始发/ 节点/ ,/ 为/ 解决/ 单源/ 最/ 短/ 路径/ 问题/ ,/ Dijkstra/ 算法/ Page11/ 的/ 时间/ 复杂度/ ,/ 然后/ 给出/ 算法/ 重要/ 性质/ 的/ 定义/ 及/ 证明/ ,/ 最后/ 讨论/ 了/ 算法/ 需要/ 的/ 额外/ 开销/ ./ 5.1/ 时间/ 复杂度/ 记/ c/ 为/ 服务/ 输入/ 参数/ 的/ 平均/ 个数/ ,/ m1/ 、/ m2/ 、/ m3/ 和/ m4/ 分别/ 为/ 新增/ 服务/ 数/ 、/ 失效/ 服务/ 数/ 、/ 接口/ 变化/ 服务/ 数/ 和/ QoS/ 变化/ 服务/ 数/ ,/ k/ 为/ 优先/ 队列/ PQ/ 中/ 服务/ 节点/ 的/ 最大/ 数目/ ./ 若记/ n/ 为/ 服务/ 依赖图/ 中/ 的/ 节点/ 总数/ ,/ 则/ 推断出/ nc/ 为/ 服务/ 依赖图/ 中边/ 的/ 数量/ ./ 算法/ 2/ 第/ 1/ 行到/ 第/ 12/ 行/ 的/ 时间/ 复杂度/ 是/ O/ (/ m1/ ×/ c/ +/ m2/ ×/ c/ +/ 2m3/ ×/ c/ +/ m4/ ×/ c/ )/ =/ O/ (/ m/ ×/ c/ )/ ,/ 其中/ m/ 为/ 动态/ 服务/ 总数/ ./ 算法/ 2/ 第/ 13/ 行到/ 第/ 26/ 行对/ PQ/ 中/ 服务/ 的/ 处理/ 操作/ 的/ 时间/ 复杂度/ 为/ O/ (/ klogk/ +/ kkc/ )/ ./ 其中/ O/ (/ klogk/ )/ 为/ 维护/ 优先/ 队列/ ①/ 的/ 开销/ ,/ O/ (/ kkc/ )/ 为/ 处理/ 每个/ 节点/ 的/ 开销/ ./ 算法/ 2/ 中/ 第/ 27/ 行到/ 32/ 行/ 调用/ 后/ 向搜索/ 的/ 时间/ 复杂度/ 为/ O/ (/ nc/ +/ n/ )/ ./ 综上/ ,/ 算法/ 2/ 的/ 时间/ 复杂度/ 为/ O/ (/ m/ ×/ c/ +/ klogk/ +/ kkc/ +/ nc/ +/ n/ )/ ./ 5.2/ 算法/ 性质/ 定理/ 1/ ./ 可/ 终止/ 性/ ./ 算法/ 经过/ 有限/ 步后/ 停止/ ./ 证明/ ./ 在/ 算法/ 2/ 中/ ,/ 当/ 优先/ 队/ 列为/ 空时/ ,/ 算法/ 将/ 终止/ ./ 因为/ 每个/ 服务/ 节点/ 最/ 多/ 放入/ 优先/ 队列/ 中/ 一次/ ,/ 所以/ 该/ 队列/ 最大值/ 为/ n/ ./ 每次/ 循环/ 算法/ 均会弹/ 出/ 队列/ 中/ 的/ 元素/ ,/ 故/ 最/ 多/ 经过/ n/ 步后/ ,/ 算法/ 将会/ 终止/ ./ 定理/ 2/ ./ 完整性/ ./ 在/ 动态/ 服务/ 环境/ 下/ ,/ 只要/ 存在/ 满足/ 查询/ 请求/ 的/ 复合/ 服务/ ,/ 复合/ 服务/ 自/ 适应/ 算法/ 就/ 能够/ 将/ 其/ 找出/ ./ 证明/ ./ 若/ 查询/ 请求/ 可/ 被/ 满足/ ,/ 则/ End/ 节点/ 可/ 达/ ,/ 即/ End/ 节点/ 的/ GQ/ 不/ 等于/ +./ 算法/ 2/ 依据/ 不同/ 类型/ 的/ 动态/ 服务/ 对/ 其受/ 影响/ 服务/ 的/ 状态/ 进行/ 相应/ 更新/ ,/ 仅/ 按照/ pqQoS/ 调整/ 可/ 达/ 服务/ 节点/ 的/ 更新/ 顺序/ ,/ 而/ 没有/ 剪枝/ 或/ 剔除/ 任一/ 可/ 达/ 服务/ 节点/ ./ 因此/ ,/ 只要/ End/ 节点/ 可/ 达/ ,/ 算法/ 2/ 就/ 可/ 找出/ 能够/ 抵达/ End/ 节点/ 的/ 复合/ 服务/ ./ 定理/ 3/ ./ 最优性/ ./ 复合/ 服务/ 自/ 适应/ 算法/ 得到/ 的/ 复合/ 服务/ SC/ 是/ GQ/ 最优/ 的/ ./ 证明/ ./ 假设/ 存在/ 一/ 复合/ 服务/ SC/ ,/ SC/ ./ GQ/ </ SC/ ./ GQ/ ,/ 即/ SC/ 优于/ SC/ ,/ 等价/ 于/ 至少/ 存在/ 参数/ par/ ,/ 其/ 提供者/ 为/ 服务/ w/ 和/ w/ ,/ 其中/ ,/ w/ ∈/ SC/ ,/ w/ ∈/ SC/ ,/ 且/ w/ ./ GQ/ </ w/ ./ GQ/ ./ 由题/ 设/ 可知/ 算法/ 2/ 返回/ SC/ 而/ 非/ SC/ ./ 同时/ ,/ 根据/ 算法/ 2/ 第/ 10/ 行/ ,/ 算法/ 总是/ 取/ par/ 的/ 最优/ 提供者/ ,/ 因此/ 算法/ 2/ 返回/ SC/ 表明/ w/ ./ GQ/ </ w/ ./ GQ/ ,/ 与/ 假设/ 矛盾/ ./ 定理/ 4/ ./ 单次/ 更新/ 性/ :/ 复合/ 服务/ 自/ 适应/ 算法/ 对受/ 影响/ 的/ 服务/ 只/ 进行/ 一次/ 状态/ 更新/ ./ 证明/ ./ 设/ 存在/ 两个/ 动态/ 服务/ w1/ 和/ w2/ ,/ 且/ w1/ ./ pqQoS/ </ w2/ ./ pqQoS/ ./ 根据/ 算法/ 2/ 第/ 8/ 行/ ,/ 算法/ 先/ 更新/ w1/ 的/ GQ/ ,/ 再/ 更新/ w2/ 的/ GQ/ ./ 假设/ 更新/ w2/ 后/ ,/ w1/ 的/ GQ/ 受到/ 影响/ ,/ 需要/ 再次/ 更新/ ,/ 则/ 表明/ w2/ 位于/ 某一/ 从/ Start/ 节点/ 到/ w1/ 的/ 路径/ 中/ ./ 因为/ 在/ 这种/ 情况/ 下/ ,/ w2/ 的/ GQ/ 更新/ 才/ 会/ 传播/ 影响/ 到/ w1/ 的/ GQ/ ./ 根据/ 算法/ 2/ 可知/ :/ 首先/ ,/ 对于/ 所有/ 新增/ 服务/ ,/ 根据/ 算法/ 2/ 第/ 2/ 行/ ,/ 其/ 对应/ 的/ GQ/ 原值/ —/ —/ —/ GQ/ =/ +/ ;/ 其次/ ,/ 对于/ 所有/ 失效/ 服务/ ,/ 由于/ 这些/ 服务/ 将/ 从/ 服务/ 依赖图/ 中/ 删除/ ,/ 其/ 对应/ 的/ GQ/ 新值/ —/ —/ —/ newGQ/ =/ +./ 综上/ ,/ 可/ 得/ (/ 1/ )/ 若/ w1/ ∈/ C1/ ,/ w2/ ∈/ C1/ ,/ 则/ (/ 2/ )/ 若/ w1/ ∈/ C1/ ,/ w2/ ∈/ C2/ ,/ 则/ :/ (/ 3/ )/ 若/ w1/ ∈/ C1/ ,/ w2/ ∈/ C3/ ,/ 则/ :/ (/ 4/ )/ 若/ w1/ ∈/ C2/ ,/ w2/ ∈/ C1/ ,/ 则/ :/ (/ 5/ )/ 若/ w1/ ∈/ C2/ ,/ w2/ ∈/ C2/ ,/ 则/ :/ (/ 6/ )/ 若/ w1/ ∈/ C2/ ,/ w2/ ∈/ C3/ ,/ 则/ :/ (/ 7/ )/ 若/ w1/ ∈/ C3/ ,/ w2/ ∈/ C1/ ,/ 则/ :/ (/ 8/ )/ 若/ w1/ ∈/ C3/ ,/ w2/ ∈/ C2/ ,/ 则/ :/ (/ 9/ )/ 若/ w1/ ∈/ C3/ ,/ w2/ ∈/ C3/ ,/ 则/ :/ 上述/ 9/ 种/ 情形/ 可/ 囊括/ 所有/ 动态/ 服务类型/ ./ 以/ 第/ 1/ 种/ 情形/ 为例/ ,/ 当/ w1/ ,/ w2/ 均/ 被/ 加入/ 到/ 服务/ 依赖图/ 中后/ ,/ 由于/ w2/ 位于/ 某一/ 从/ Start/ 节点/ 到/ w1/ 的/ 路径/ 中/ ,/ 根据/ 3.4/ 节中/ QoS/ 的/ 计算/ 规则/ 易得/ w1/ ./ newGQ/ >/ w2/ ./ newGQ/ ./ 因为/ ①/ 本文/ 采用/ Relaxedheap/ 实现/ 优先/ 队列/ ./ Page12w1/ ./ pqGQ/ =/ min/ {/ +/ ,/ w1/ ./ newGQ/ }/ =/ w1/ ./ newGQ/ ;/ w2/ ./ pqGQ/ =/ min/ {/ +/ ,/ w2/ ./ newGQ/ }/ =/ w2/ ./ newGQ/ ./ 所以/ 有/ w1/ ./ pqGQ/ >/ w2/ ./ pqGQ/ ,/ 与/ 假设/ 矛盾/ ./ 以此类推/ ,/ 易得/ 所有/ 9/ 种/ 情形/ 均/ 与/ 假设/ 矛盾/ ./ 证毕/ ./ 5.3/ 额外/ 开销/ 算法/ 2/ 的/ 额外/ 开销/ 包括/ :/ (/ 1/ )/ 不仅/ 要/ 存储/ Sim/ -/ Dijkstra/ 算法/ 返回/ 的/ 最优/ 提供者/ 信息/ ,/ 还/ 需要/ 存储/ 其他/ 非/ 最优/ 提供者/ 信息/ ./ 例如/ ,/ 当/ 最优/ 提供者/ 失效/ 时/ ,/ 自/ 适应/ 算法/ 可/ 利用/ 其他/ 提供者/ 生成/ 当前/ 状态/ 下/ 的/ 最优/ 结果/ ./ 总之/ ,/ 算法/ 2/ 需要/ 存储/ 额外/ 的/ 服务/ 节点/ 的/ 状态/ 信息/ 、/ RPT/ 表项/ 等/ ;/ (/ 2/ )/ 需在/ 数据结构/ 中/ 添加/ newGQ/ 和/ pqQoS/ 两个/ 新/ 变量/ ./ 尽管/ 上述/ 开销/ 使得/ 算法/ 2/ 需/ 占用/ 更/ 多/ 的/ 存储空间/ ,/ 但是/ 无需/ 从头开始/ 搜索/ 和/ 求取/ 满足用户/ 需求/ 的/ 复合/ 服务/ ./ 在/ 多数/ 情况/ 下/ ,/ 算法/ 2/ 只/ 需/ 更新/ 少量/ 受/ 影响/ 服务/ 的/ 状态/ ,/ 与/ 重新/ 查询/ 相比/ ,/ 效率/ 更高/ ,/ 从而/ 能够/ 满足/ 实时/ 响应/ 的/ 需要/ ./ 本文/ 第/ 6/ 节/ 对此/ 进行/ 了/ 实验/ 验证/ ./ 6/ 实验/ 6.1/ 实验/ 设置/ 为/ 应对/ 动态/ 服务/ ,/ 基于/ 复合/ 服务/ 自/ 适应/ 算法/ ,/ 本文/ 实现/ 了/ QSynth/ +/ 系统/ 来/ 进行/ 自/ 适应/ 服务/ 组合/ ./ 实验/ 设置/ 介绍/ 如下/ ./ 对比/ 系统/ :/ (/ 1/ )/ QSynth/ ,/ 每当/ 动态/ 服务/ 发生/ 时/ ,/ 表/ 8/ 测试数据/ 集/ 4/ (/ 5/ )/ ,/ 8/ (/ 4.4/ )/ ,/ 12/ (/ 4.3/ )/ ,/ 第/ 1/ 组/ :/ 不同/ 参数/ 类型/ 总数/ 第/ 2/ 组/ :/ 不同/ 复合/ 服务/ 层数/ 第/ 3/ 组/ :/ 不同/ 服务/ 总数/ 第/ 4/ 组/ :/ 不同/ 动态/ 服务/ 总数/ 评估/ 指标/ :/ 为了/ 对/ 相关/ 系统/ 进行/ 评估/ ,/ 本文/ 采用/ 如下/ 3/ 个/ 的/ 评价/ 指标/ 、/ 效率/ 、/ 敏感性/ 和/ 准确性/ 来/ 对系统/ 的/ 优劣/ 进行/ 统一/ 衡量/ ./ 具体/ 而言/ ,/ 效率/ 用来/ 评估/ 服务/ 依赖图/ 的/ 构建/ 时间/ 和/ 系统/ 的/ 响应/ 时间/ ,/ 即/ 系统/ 从/ 接收/ 到/ 动态/ 服务/ 到/ 生成/ 新/ 的/ 复合/ 服务/ 所/ 消耗/ 的/ 时间/ ./ 敏感性/ :/ 衡量/ 系统对/ QoS/ 变化/ 程度/ 是否/ 敏感/ ,/ 即/ QoS/ 变化/ 是否/ 对系统/ 效率/ 造成/ 剧烈/ 影响/ ./ 准确性/ 用来/ 测试/ 系统/ 返回/ 的/ 复合/ 服务/ 是否/ 满足/ 查询/ 请求/ 和/ 服务/ QoS/ 最优/ 的/ 要求/ ./ 实验/ 环境/ 为/ 2.4/ GHzCPU/ ,/ 4GBRAM/ ,/ Windows7/ 操作系统/ ./ 重新/ 执行/ 查询/ ;/ (/ 2/ )/ QSynth/ +/ ,/ 扩展/ 后/ 的/ QSynth/ 系统/ ,/ 使用/ 复合/ 服务/ 自/ 适应/ 算法/ 动态/ 更新/ 复合/ 服务/ ;/ (/ 3/ )/ QSynth/ +/ / ,/ 使用/ 无/ 优先/ 队列/ 版本/ 的/ 复合/ 服务/ 自/ 适应/ 算法/ 的/ 系统/ ,/ 以/ 不/ 考虑/ 服务/ 更新/ 次序/ 的/ 方式/ 执行/ 复合/ 服务/ 自/ 适应/ 算法/ ./ 测试数据/ 集/ :/ (/ 1/ )/ 人工/ 数据/ 集/ :/ 利用/ 公开/ 的/ WebServiceChallege/ 测试/ 集/ 生成器/ ①/ 生成/ 测试数据/ 集/ ./ 利用/ 该/ 测试/ 集/ 生成器/ 的/ 可调/ 参数/ ,/ 即/ 服务/ 数目/ ,/ 服务/ 输入/ 参数/ 类型/ 数目/ 和/ 复合/ 服务/ 层数/ (/ 一般而言/ ,/ 层数/ 越/ 多/ ,/ 则/ 复合/ 服务/ 越/ 复杂/ )/ ,/ 我们/ 生成/ 了/ 包含/ 不同/ 参数/ 类型/ 数量/ 、/ 不同/ 层数/ 、/ 不同/ 服务/ 数/ 和/ 不同/ 动态/ 服务/ 数/ 的/ 测试/ 集/ ,/ 见表/ 8/ ;/ (/ 2/ )/ 真实/ QoS/ 数据/ 集/ ,/ 采用/ 文献/ [/ 36/ ]/ 提供/ 的/ 数据源/ ,/ 我们/ 搜集/ 并/ 整理/ 了/ 2000/ 个/ 真实/ 服务/ 在/ 不同/ 时刻/ 的/ QoS/ ,/ 并/ 提取/ 其中/ 的/ 响应/ 时间/ 赋值/ 给/ 测试/ 集/ 生成器/ 生成/ 的/ 服务/ 集合/ ②/ ./ 实验/ 中/ ,/ 我们/ 将/ 在/ 每个/ 测试/ 集中/ 按照/ 随机/ 方式/ 生成/ 动态/ 服务/ ./ 在/ 真实/ QoS/ 数据/ 集中/ ,/ 我们/ 根据/ 真实/ 服务/ 的/ QoS/ 变化/ 设置/ 动态/ 服务/ 的/ QoS/ ./ 每个/ 测试/ 集/ 包含/ 如下/ 3/ 个/ 文件/ :/ WSDL/ (/ 描述/ 服务/ 及/ 接口/ 信息/ )/ ,/ OWL/ -/ S/ (/ 描述/ 概念/ (/ 参数/ 类型/ )/ 信息/ )/ ,/ WSLA/ (/ 描述/ 服务/ 的/ QoS/ 信息/ )/ ./ 上述/ 3/ 个/ 文件/ 是/ 描述/ Web/ 服务/ 的/ 国际标准/ ,/ 进行/ 实验/ 对比/ 的/ 3/ 个/ 系统/ 将/ 分别/ 读取/ 这些/ 文件/ 以及/ 描述/ 查询/ 请求/ 的/ 查询/ 文件/ ,/ 处理/ 动态/ 服务/ 并/ 求取/ 新/ 的/ 满足/ 查询/ 请求/ 且/ 服务/ QoS/ 最优/ 的/ 复合/ 服务/ ./ 8/ (/ 4.4/ )/ 8/ (/ 4.4/ )/ 8/ (/ 4.4/ )/ 实验/ 方法/ 在/ 表/ 8/ 给出/ 的/ 4/ 组/ 测试数据/ 集中/ ,/ 由于/ 数据/ 集中/ 的/ 动态/ 服务/ 是/ 按照/ 随机/ 方式/ 生成/ 的/ ,/ 实验/ 中/ 存在/ 随机因素/ ./ 为了/ 消除/ 最终/ 实验/ 结果/ 的/ 随机性/ ,/ 我们/ 在/ 不同/ 数据/ 集上/ 进行/ 了/ 多次/ 独立/ 地/ 实验/ ./ 具体/ 而言/ ,/ 针对/ 任意/ 一组/ 数据/ 集/ ,/ 我们/ 分别/ 对/ 不同/ 系统/ 进行/ 了/ 10/ 次测试/ ./ 每次/ 测试/ 中均/ 按照/ 随机/ 方式/ 生成/ ①/ ②/ Page13/ 动态/ 服务/ ./ 最终/ ,/ 实验/ 将/ 选取/ 10/ 次测试/ 结果/ 的/ 平均值/ 作为/ 最终/ 实验/ 结果/ ./ 6.2/ 效率/ 评估/ 6.2/ ./ 1/ 服务/ 依赖图/ 构建/ 时间/ 评估/ 本文/ 算法/ 基于/ 服务/ 依赖图/ 搜索/ 最优/ 的/ 复合/ 服务/ ./ 服务/ 依赖图/ 的/ 创建/ 是/ 算法/ 高效/ 运行/ 的/ 前提/ ./ 图/ 5/ (/ a/ )/ 和/ 图/ 5/ (/ b/ )/ 分别/ 给出/ 了/ 在/ 不同/ 参数/ 类型/ 总数/ 和/ 不同/ 服务/ 总数/ 下/ 的/ 服务/ 依赖图/ 的/ 创建/ 时间/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随着/ 参数/ 类型/ 总数/ 和/ 服务/ 总数/ 的/ 增加/ ,/ 服务/ 依赖图/ 的/ 创建/ 时间/ 也/ 在/ 不断/ 增大/ ./ 这/ 是因为/ 图/ 的/ 复杂性/ 与/ 服务/ 节点/ 和/ 参数/ 类型/ 的/ 数目/ 相关/ ./ 从图/ 5/ 中/ 可以/ 看出/ ,/ 当/ 参数/ 类型/ 总数/ 或/ 服务/ 总数/ 达到/ 万级/ 规模/ 时/ ,/ 图/ 的/ 创建/ 较为/ 高效/ ,/ 其/ 时间/ 消耗/ 均/ 在/ 6000ms/ 之内/ ./ 6.2/ ./ 2/ 系统/ 查询/ 响应/ 时间/ 的/ 评估/ 本文/ 实验/ 采用/ 人工/ 生成/ 服务/ 的/ QoS/ 和/ 真实/ 服务/ 的/ QoS/ ,/ 分别/ 在/ 表/ 8/ 所示/ 的/ 4/ 组/ 测试数据/ 集上/ 对/ QSynth/ 、/ QSynth/ +/ 和/ QSynth/ +/ / 进行/ 了/ 效率/ 评估/ ./ 由图/ 6/ 可知/ ,/ 总体/ 上/ ,/ QSynth/ +/ 性能/ 最优/ ,/ 其/ 查询/ 响应/ 时间/ 平均/ 仅为/ QSynth/ 查询/ 响应/ 时间/ 的/ 10/ %/ ~/ 40/ %/ ./ 这/ 是因为/ 每当/ 动态/ 服务/ 产生/ 时/ ,/ QSynth/ 均/ 需/ 重新/ 执行/ 查询/ ,/ 从头开始/ 搜索/ 整个/ 服务/ 空间/ ,/ 而/ QSynth/ +/ 只/ 需要/ 更新/ 部分/ 受/ 动态/ 服务/ 影响/ 的/ 服务/ 状态/ ,/ 无需/ 搜索/ 整个/ 服务/ 空间/ ./ 因此/ 节省/ 了/ 时间/ 消耗/ ./ 同时/ ,/ 相比/ 于/ QSynth/ +/ / ,/ QSynth/ 的/ 查询/ 响应/ 时间/ 平均/ 提升/ 了/ 4/ %/ ~/ 30/ %/ ./ 这/ 是因为/ QSynth/ +/ / 使用/ 的/ 复合/ 服务/ 自/ 适应/ 算法/ 未/ 考虑/ 服务/ 的/ 更新/ 次序/ 问题/ ,/ 因此/ 会/ 消耗/ 额外/ 的/ 时间/ 对受/ 影响/ 的/ 服务/ 进行/ 多次/ 、/ 反复/ 地/ 更新/ ./ 此外/ ,/ 我们/ 综合/ 图/ 6/ 所示/ 的/ 4/ 组/ 测试数据/ 集上/ 的/ 实验/ 结果/ 对系统/ 效率/ 依赖/ 的/ 4/ 个/ 重要/ 因素/ ,/ 即/ 参数/ 类型/ 总数/ 、/ 复合/ 服务/ 层数/ 、/ 服务/ 总数/ 以及/ 动态/ 服务/ 总数/ 的/ 影响/ 分别/ 进行/ 了/ 分析/ ./ 结果/ 如下/ :/ 如图/ 6/ (/ a/ )/ 所示/ ,/ 当/ 参数/ 类型/ 总数/ 由/ 1000/ 增长/ 到/ 25000/ ,/ 复合/ 服务/ 层数/ 、/ 服务/ 总数/ 和/ 动态/ 服务/ 总数/ 分别/ 固定/ 为/ 8/ 、/ 6000/ 和/ 100/ 时/ ,/ 3/ 个/ 系统/ 的/ 查询/ 时间/ 消耗/ 不随/ 参数/ 类型/ 总数/ 增长/ 而/ 呈现/ 线性/ 增长/ 的/ 趋势/ ,/ 这/ 表明/ 系统/ 相关/ 的/ 算法/ 复杂度/ 并/ 不/ 直接/ 依赖于/ 参数/ 类型/ 的/ 数量/ ./ 根据/ 本文/ 第/ 5/ 节/ 以及/ 文献/ [/ 18/ ]/ 中/ 关于/ 算法/ 复杂度/ 的/ 分析/ ,/ 文本/ 算法/ 的/ 时间/ 复杂度/ 主要/ 取决于/ 动态/ 服务/ 的/ 数量/ ,/ 而/ QSynth/ 的/ 算法/ 复杂度/ 则/ 与/ 图/ 中/ 服务/ 节点/ 的/ 总数/ 以及/ 边/ 的/ 数目/ 相关/ ./ 如图/ 6/ (/ b/ )/ 所示/ ,/ 当/ 复合/ 服务/ 层数/ 由/ 4/ 增长/ 到/ 24/ ,/ 参数/ 类型/ 总数/ 、/ 服务/ 总数/ 和/ 动态/ 服务/ 总数/ 分别/ 固定/ 为/ 15000/ 、/ 6000/ 和/ 100/ 时/ ,/ 3/ 个/ 系统/ 的/ 查询/ 时间/ 消耗/ 在/ 总体/ 上/ 呈现/ 增长/ 趋势/ ./ 因为/ 一般而言/ ,/ 层数/ 越/ 多/ ,/ 则/ 复合/ 服务/ 越/ 复杂/ ,/ 系统/ 耗费/ 的/ 查询/ 时间/ 也/ 应该/ 越多/ ./ 然而/ ,/ 当/ 复合/ 服务/ 层数/ 为/ 20/ 时/ ,/ 各/ 系统/ 查询/ 的/ 时间/ 消耗/ 反而/ 比/ 复合/ 服务/ 层数/ 为/ 12/ 和/ 16/ 时/ 更/ 低/ ./ 对此/ 我们/ 进行/ 了/ 分析/ ,/ 并/ 在/ 表/ 8/ 第/ 3/ 列/ 给出/ 了/ 各/ 复合/ 服务/ 每层/ 的/ 平均/ 服务/ 数/ (/ 四舍五入/ )/ ./ 由此/ 可/ 得/ ,/ 测试/ 集中/ 20/ 层/ 的/ 复合/ 服务/ 尽管/ 层数/ 较/ 多/ ,/ 但/ 相比/ 12/ 层/ 和/ 16/ 层/ 的/ 复合/ 服务/ ,/ 其/ 包含/ 的/ 服务/ 节点/ 总数/ 较少/ ./ 根据/ 本文/ 第/ 5/ 节/ 以及/ 文献/ [/ 18/ ]/ 中/ 关于/ 算法/ 复杂度/ 的/ 分析/ ,/ 3/ 个/ 对比/ 系统/ 的/ 时间/ 复杂度/ 分别/ 取决于/ 动态/ 服务/ 的/ 数量/ 和/ 图/ 中/ 服务/ 节点/ 的/ 总数/ 以及/ 边/ 的/ 数目/ ,/ 而/ 非/ 直接/ 取决于/ 复合/ 服务/ 层数/ ./ 因此/ ,/ 在/ 实验/ 中/ ,/ 尽管/ 复合/ 服务/ 层数/ 为/ 20/ ,/ 但是/ 其/ 包含/ 的/ 节点/ 总数/ 相对/ 较/ 少/ ,/ 因此/ 各/ 系统/ 查询/ 的/ 时间/ 消耗/ 相对/ 较/ 低/ ./ 如图/ 6/ (/ c/ )/ 所示/ ,/ 当/ 服务/ 总数/ 由/ 1000/ 增长/ 到/ 10000/ ,/ 参数/ 类型/ 总数/ 、/ 复合/ 服务/ 层数/ 和/ 动态/ 服务/ 总数/ 分别/ 固定/ 为/ 15000/ 、/ 8/ 、/ 100/ 时/ ,/ QSynth/ 的/ 查询/ 响应/ 时间/ 明显/ 依赖于/ Web/ 服务/ 集/ 的/ 规模/ —/ —/ —/ 服务/ 数量/ 越大则/ 查询/ 响应/ 时间/ 越长/ ./ 这/ 是因为/ 每当/ 动态/ 服/ Page14/ 务/ 产生/ 时/ ,/ QSynth/ 均/ 需/ 重新/ 执行/ 查询/ ,/ 从头开始/ 搜索/ 整个/ 服务/ 空间/ ,/ 因此/ 查询/ 的/ 响应/ 时间/ 主要/ 取决于/ 服务/ 数量/ 的/ 大小/ ./ 而/ 对于/ QSynth/ +/ 和/ QSynth/ +/ / ,/ 其/ 查询/ 响应/ 时间/ 不/ 明显/ 依赖于/ Web/ 服务/ 集/ 的/ 规模/ ./ 这/ 是因为/ 复合/ 服务/ 自/ 适应/ 算法/ 只/ 需要/ 更新/ 部分/ 受/ 动态/ 服务/ 影响/ 的/ 服务/ 状态/ ,/ 无需/ 搜索/ 整个/ 服务/ 空间/ ./ 因此/ ,/ 当/ 服务/ 数量/ 呈现/ 增长/ 趋势/ 时/ ,/ 其/ 响应/ 时间/ 未/ 随之/ 明显/ 增大/ ./ 如图/ 6/ (/ d/ )/ 所示/ ,/ 当/ 动态/ 服务/ 总数/ 由/ 50/ 增长/ 到/ 500/ ,/ 参数/ 类型/ 总数/ 、/ 复合/ 服务/ 层数/ 和/ 服务/ 总数/ 分别/ 固定/ 为/ 15000/ 、/ 8/ 、/ 6000/ 时/ ,/ 3/ 个/ 系统/ 的/ 查询/ 的/ 总体/ 时间/ 消耗/ 均/ 呈现/ 上升/ 的/ 趋势/ ./ 其中/ ,/ QSynth/ 的/ 增长幅度/ 较大/ ,/ 而/ QSynth/ +/ 和/ QSynth/ +/ / 的/ 增长幅度/ 较/ 小/ ./ 这/ 是因为/ 对于/ QSynth/ 而言/ ,/ 每/ 新增/ 一个/ 动态/ 服务/ ,/ 意味着/ 增加/ 一次/ 搜索/ 整个/ 服务/ 空间/ 的/ 时间/ ,/ 因此/ 时间/ 消耗/ 的/ 增长幅度/ 较/ 高/ ./ 与/ 之/ 相比/ ,/ 当/ 动态/ 服务/ 发生/ 时/ ,/ 由于/ QSynth/ +/ 和/ QSynth/ +/ / 可/ 避免/ 重新/ 搜索/ ,/ 消耗/ 时间/ 较/ 少/ ,/ 因此/ 增长幅度/ 也/ 较/ 低/ ./ 此外/ ,/ 从图/ 7/ 可以/ 看出/ ,/ 各/ 系统/ 在/ 真实/ QoS/ 服务/ 数据/ 集上/ 的/ 表现/ 与/ 上述/ 实验/ 结果/ 类似/ ./ 图/ 6/ 和/ 图/ 7/ 给出/ 的/ QSynth/ +/ 和/ QSynth/ +/ / 的/ 查询/ 时间/ 消耗/ 是/ 服务/ 依赖图/ 更新/ 与/ 自/ 适应/ 算法/ 执行/ 时间/ 的/ 总和/ ./ 实验/ 中/ ,/ 我们/ 还/ 跟踪/ 和/ 记录/ 了/ 不同/ 数据/ 集上/ 服务/ 依赖图/ 更新/ 的/ 性能/ ,/ 其/ 时间/ 消耗/ 稳定/ 在/ 1ms/ ~/ 5ms/ 之间/ ./ 相比/ 总体/ 时间/ 消耗/ ,/ 所/ 占/ 比例/ 很/ 低/ ./ 图/ 更新/ 的/ 低/ 耗时/ 与其/ 采用/ 的/ 存储/ 结构/ —/ —/ —/ 反向/ 索引/ 表/ 密切相关/ :/ 本文/ 的/ 图/ 更新/ 算法/ 的/ 执行/ 时间/ 主要/ 取决于/ 动态/ 服务/ 包含/ 的/ 参数/ 个数/ ,/ 而/ 访问/ 反向/ 索引/ 表中/ 参数/ 对应/ 数据项/ 的/ 时间/ 复杂度/ 仅为/ O/ (/ 1/ )/ ./ 因此/ ,/ 图/ 的/ 更新/ 较为/ 高效/ ./ 为了/ 分析/ 动态/ 服务/ 对/ 其他/ 服务/ 的/ 影响/ ,/ 当/ 层数/ 为/ 8/ 、/ 参数/ 类型/ 数为/ 15000/ 、/ 服务/ 数为/ 6000/ 、/ 动态/ 服务/ 数为/ 100/ 时/ ,/ 我们/ 在/ 图/ 8/ 中/ 给出/ 各/ 系统/ 处理/ 单个/ 动态/ 服务/ 的/ 查询/ 响应/ 时间/ ./ 从图/ 7/ 可以/ 看出/ ,/ QSynth/ 处理/ 每个/ 动态/ 服务/ 的/ 时间/ 较/ 多/ 而/ 总体/ 方差/ 较/ 小/ ,/ 而/ QSynth/ +/ 和/ QSynth/ +/ / 处理/ 每个/ 动态/ 服务/ 的/ 时间/ 较少/ 但/ 总体/ 波动/ 较大/ ./ 这一/ 结果表明/ :/ (/ 1/ )/ 每个/ 动态/ 服务/ 的/ 影响/ 区域/ 不同/ ,/ 因此/ 使用/ 复合/ 服务/ 自/ 适应/ 算法/ 系统/ 的/ 处理/ 时间/ 变化/ 较大/ ;/ (/ 2/ )/ 每个/ 动态/ 服务/ 的/ 影响/ 区域/ 有限/ ,/ 因此/ 使用/ 复合/ 服务/ 自/ 适应/ 算法/ 只/ 需/ 更新/ 相对/ 更少/ 的/ 受/ 影响/ 服务/ 的/ 状态/ ,/ 从而/ 获得/ 比/ 重新/ 查询/ 更/ 高/ 的/ 效率/ ./ 我们/ 还/ 考察/ 了/ QSynth/ +/ 在/ 批处理/ 方面/ 的/ 性能/ ./ 当/ 层数/ 为/ 8/ 、/ 参数/ 类型/ 数为/ 15000/ 、/ 服务/ 数为/ 6000Page15/ 时/ ,/ 如图/ 9/ 所示/ ,/ QSynth/ +/ 一次性/ 处理/ 50/ ~/ 600/ 个/ 动态/ 服务/ 时间/ 消耗/ 为/ 14ms/ ~/ 28ms/ ./ 这一/ 结果/ 远远/ 低于/ 每次/ 仅/ 处理/ 一个/ 动态/ 服务/ 的/ 处理/ 方式/ 所/ 耗费/ 的/ 时间/ (/ 2880ms/ ①/ )/ ./ 然而/ ,/ 当/ 一次/ 处理/ 的/ 动态/ 服务/ 数量/ 超过/ 500/ 时/ ,/ 使用/ QSynth/ 进行/ 重新/ 查询/ 反而/ 效率/ 更高/ ./ 这一/ 结果表明/ ,/ 当/ 一次性/ 处理/ 的/ 动态/ 服务/ 数量/ 超过/ 某一/ 阈值/ (/ 如/ 500/ )/ 时/ ,/ 可/ 选择/ 使用/ 重新/ 查询/ 的/ 方式/ ./ 然而/ ,/ 在/ 实际/ 中/ ,/ 同一/ 时刻/ 产生/ 大量/ 动态/ 服务/ 的/ 情况/ 并/ 不多见/ ,/ 因此/ 多数/ 情况/ 下/ 选择/ QSynth/ +/ 会/ 获得/ 更/ 高/ 的/ 效率/ ./ 6.3/ 敏感性/ 评估/ 本/ 节/ 我们/ 重点/ 针对/ QoS/ 变化/ 是否/ 对系统/ 的/ 查询/ 响应/ 时间/ 造成/ 影响/ 进行/ 了/ 分析/ 和/ 比较/ ./ 从图/ 10/ 中/ 可以/ 看出/ ,/ 当/ 层数/ 为/ 8/ 、/ 参数/ 类型/ 数为/ 15000/ 、/ 服务/ 数为/ 6000/ 、/ 动态/ 服务/ 数为/ 100/ 时/ ,/ 动态/ 服务/ 的/ QoS/ 分别/ 增加/ 10ms/ 、/ 50ms/ 、/ 100ms/ 、/ 200ms/ 和/ 300ms/ 时/ ,/ QSynth/ +/ 响应/ 时间/ 的/ 波动/ 范围/ 为/ 402ms/ ~/ 513ms/ ,/ ①/ 由图/ 7/ 可知/ ,/ Qsynth/ +/ 处理/ 单个/ 动态/ 服务/ 的/ 平均/ 时间/ 为/ Page16QSynth/ +/ / 响应/ 时间/ 的/ 波动/ 范围/ 为/ 484ms/ ~/ 591ms/ ,/ QSynth/ 响应/ 时间/ 的/ 波动/ 范围/ 为/ 2159ms/ ~/ 2297ms/ ./ 这一/ 结果表明/ ,/ 当/ QoS/ 发生变化/ 时/ ,/ 被/ 评估/ 的/ 3/ 个/ 系统/ 的/ 效率/ 均/ 未/ 产生/ 较大/ 波动/ ./ 因此/ ,/ 它们/ 对/ QoS/ 的/ 变化/ 并/ 不/ 敏感/ ./ 6.4/ 准确性/ 评估/ 本/ 节/ 评估/ 各/ 系统/ 的/ 准确性/ ,/ 即/ 其/ 返回/ 的/ 复合/ 服务/ 是否/ 满足/ 查询/ 请求/ 且/ 保证/ 全局/ QoS/ 最优/ ./ 一方面/ ,/ 我们/ 认真/ 检查/ 各/ 系统/ 返回/ 的/ 复合/ 服务/ ,/ 核对/ 复合/ 服务/ 中/ 包含/ 的/ 原子/ 服务/ 是否/ 均/ 可/ 触发/ ,/ 即/ 复合/ 服务/ 是否/ 可/ 执行/ 以/ 满足/ 查询/ 请求/ ./ 另一方面/ ,/ QSynth/ 系统/ 已/ 被/ 理论/ 和/ 实验/ 证明/ 其/ 返回/ 的/ 复合/ 服务/ 是/ 全局/ QoS/ 最优/ 的/ [/ 18/ ]/ ,/ 并且/ 在/ 动态/ 更新/ 后/ 的/ 图/ 中/ 搜索/ 不/ 影响/ 其/ 最优性/ ./ 因此/ ,/ 通过/ 比较/ QSynth/ 返回/ 结果/ 的/ 全局/ QoS/ 与/ 其他/ 系统/ 返回/ 结果/ 的/ 全局/ QoS/ 是否/ 相等/ ,/ 即可/ 判断/ 当前/ 系统/ 返回/ 的/ 复合/ 服务/ 是否是/ 全局/ QoS/ 最优/ 的/ 结果/ ./ 我们/ 对/ 6.3/ 节/ 实验/ 中/ 相关/ 系统/ 返回/ 的/ 所有/ 结果/ 都/ 进行/ 了/ 上述/ 两/ 方面/ 的/ 检验/ ./ 结果显示/ ,/ QSynth/ +/ 和/ QSynth/ +/ / 返回/ 的/ 复合/ 服务/ 与/ QSynth/ 的/ 返回/ 结果/ 一致/ 且/ 均/ 可/ 正确/ 执行/ ,/ 同时/ 全局/ QoS/ 相等/ ./ 这/ 表明/ 基于/ 复合/ 服务/ 自/ 适应/ 算法/ 的/ QSynth/ +/ 能够/ 应对/ 动态变化/ 的/ 服务/ 环境/ ,/ 根据/ 需要/ 自动/ 地/ 更新/ 复合/ 服务/ ,/ 保证/ 更新/ 后/ 的/ 结果/ 仍然/ 满足/ 查询/ 请求/ 且/ 全局/ QoS/ 最优/ ,/ 系统/ 准确率/ 为/ 100/ %/ ,/ 进一步/ 验证/ 了/ 第/ 5/ 节中/ 给出/ 的/ 算法/ 性质/ ./ 7/ 结论/ 针对/ 动态变化/ 的/ 服务/ 环境/ ,/ 本文/ 对/ 质量/ 敏感/ 的/ 自动/ 服务/ 组合/ 系统/ QSynth/ 进行/ 了/ 扩展/ ,/ 设计/ 并/ 实现/ 了/ 一个/ 新/ 的/ 复合/ 服务/ 自/ 适应/ 系统/ —/ —/ —/ QSynth/ +./ 在/ 该/ 系统/ 中/ ,/ 我们/ 引入/ 了/ 事件驱动/ 机制/ 并/ 提出/ 了/ 一种/ 新颖/ 的/ 复合/ 服务/ 自/ 适应/ 算法/ ,/ 使/ 其/ 能够/ 主动/ 地/ 处理/ 各种/ 不同/ 类型/ 的/ 动态/ 服务/ ,/ 同时/ 避免/ 搜索/ 整个/ 服务/ 集合/ 空间/ ,/ 仅/ 更新/ 部分/ 受/ 影响/ 服务/ 的/ 状态/ ,/ 有效/ 地/ 提升/ 了/ 系统/ 的/ 效率/ ./ 此外/ ,/ QSynth/ +/ 不仅/ 支持/ 服务/ 的/ 1/ -/ 1/ 替换/ ,/ 而且/ 能够/ 根据/ 需要/ 变更/ 复合/ 服务/ 的/ 组合/ 逻辑/ ,/ 以/ 支持/ 服务/ 的/ n/ -/ m/ 替换/ ./ 与/ 已有/ 方法/ 相比/ ,/ QSynth/ +/ 采用/ 的/ 数据结构/ 更加/ 复杂/ ,/ 并/ 需/ 存储/ 中间/ 的/ 搜索/ 结果/ (/ 参见/ 5.3/ 节/ )/ ,/ 这/ 是/ 它/ 的/ 代价/ ./ 然而/ ,/ 本文/ 提出/ 的/ 算法/ 具有/ 最优性/ 和/ 完整性/ ,/ 并且/ 通过/ 重用/ 已有/ 的/ 中间/ 搜索/ 结果/ ,/ 仅/ 对/ 局部/ 受/ 影响/ 服务/ 进行/ 更新/ ,/ 无需/ 重新/ 搜索/ 整个/ 服务/ 空间/ ./ 实验/ 结果表明/ ,/ 在/ 服务/ 总数/ 达到/ 万级/ 规模/ 时/ ,/ 其/ 依然/ 能够/ 保证/ 算法/ 的/ 执行/ 时间/ 在/ 500ms/ ~/ 600ms/ 之间/ ,/ 并且/ 在/ 不同/ 的/ 测试/ 集上/ 均/ 能/ 准确/ 反映/ 用户/ 的/ 功能性/ 和/ 非/ 功能性/ 需求/ ,/ 具有/ 较/ 高/ 的/ 系统/ 响应/ 速率/ 和/ 较/ 好/ 的/ 可扩展性/ ./ 本文/ 只/ 针对/ 统一/ 语义/ 框架/ 下/ 服务/ 的/ 自动/ 组合/ 问题/ 展开/ 相关/ 研究/ ./ 然而/ ,/ 现实/ 中/ 的/ 服务/ 匹配/ 往往/ 异常/ 复杂/ ./ 对于/ 同一个/ 意义/ ,/ 不同/ 服务/ 可能/ 存在/ 不同/ 的/ 表述/ 方式/ ./ 例如/ ,/ 在/ 描述/ 服务/ 信息/ 的/ WSDL/ 文件/ 中/ ,/ 关于/ “/ 城市/ ”/ 这个/ 概念/ ,/ 不同/ 的/ 服务提供者/ 可能/ 使用/ 形式/ 完全/ 不同/ 的/ 词汇/ (/ 例如/ “/ city/ ”/ 和/ “/ town/ ”/ )/ 进行/ 描述/ ./ 为了/ 避免/ 现实/ 问题/ 因/ 过于/ 复杂/ 而/ 无解/ ,/ 我们/ 采用/ 科学/ 问题/ 常用/ 的/ 研究/ 策略/ ,/ 在/ 某些/ 方面/ 做/ 了/ 一定/ 的/ 简化/ 处理/ ,/ 比如/ 本文/ 简化/ 了/ 语义/ 和/ 服务/ 匹配/ ,/ 然后/ 抽象/ 出/ 问题/ 模型/ ,/ 并/ 进一步/ 提出/ 解决/ 方法/ ./ 自动/ 服务/ 组合/ 是/ 学术界/ 较为/ 关注/ 且/ 算法/ 研究/ 较/ 多/ 的/ 领域/ ./ 在/ 这个/ 领域/ 中/ ,/ 相关/ 的/ 研究/ 工作/ 通常/ 都/ 对/ 现实/ 问题/ 进行/ 了/ 一定/ 程度/ 地/ 简化/ ,/ 例如/ 将/ 其/ 抽象/ 为/ “/ 最短/ 路径/ ”/ 或/ “/ 最优/ DAG/ ”/ 等/ 图论/ 问题/ ./ 此外/ ,/ 这些/ 抽象/ 出/ 的/ 问题/ 不仅/ 可/ 用于/ 服务/ 组合/ ,/ 也/ 可/ 应用/ 于/ 其他/ 领域/ ,/ 例如/ 供应链/ 领域/ ./ 在/ 供应链/ 领域/ ,/ 一个/ 相似/ 的/ 问题/ 是/ 如何/ 根据/ 不同/ 的/ 目标/ (/ 例如/ 最小/ 费用/ 、/ 最短/ 生产/ 周期/ )/ ,/ 选择/ 合适/ 的/ 原材料/ 和/ 加工厂/ 完成/ 产品/ 的/ 制造/ ./ 因此/ ,/ 本文/ 抽象/ 出/ 的/ 问题/ 模型/ 不仅/ 可以/ 用于/ 自动/ 服务/ 组合/ ,/ 也/ 可以/ 应用/ 于/ 其他/ 领域/ ./ 在/ 未来/ 的/ 工作/ 中/ ,/ 我们/ 将/ 主要/ 从/ 以下/ 两个/ 方面/ 进一步/ 加强/ 研究/ :/ (/ 1/ )/ 根据/ 实际/ 需要/ ,/ 在/ 算法/ 中/ 引入/ 更/ 多维度/ 的/ QoS/ ,/ 深入研究/ 多维/ QoS/ 场景/ 下/ 复合/ 服务/ 的/ 自/ 适应/ 机制/ ;/ (/ 2/ )/ 目前/ QSynth/ +/ 仅/ 针对/ 最优/ (/ Top1/ )/ 复合/ 服务/ 进行/ 自/ 适应/ 更新/ ./ 为了/ 在/ 动态/ 服务/ 环境/ 下/ 更好/ 的/ 满足用户/ 的/ 偏好/ (/ 如/ 中国/ 大陆/ 用户/ 通常/ 选择/ 百度/ 搜索/ 服务/ 而/ 非谷歌/ 搜索/ 服务/ )/ 以及/ 解决/ 负载/ 均衡/ (/ 避免/ 过分/ 使用/ 热门/ 复合/ 服务/ 或/ 原子/ 服务/ )/ 等/ 问题/ ,/ 我们/ 将/ 进一步/ 对/ 支持/ Top/ -/ k/ 查询/ 的/ Page17QSynth/ 系统/ [/ 18/ ]/ 进行/ 扩展/ ,/ 研究/ 并/ 解决/ 前/ k/ 个/ 最优/ 复合/ 服务/ 的/ 自/ 适应/ 问题/ ./ 

