Page1SOC/ 应用/ 系统/ 中/ 基于/ 信用/ 的/ QoS/ 保证/ 机制/ 殷宪振/ 蒋静/ 潘振宽/ 夏佰强/ (/ 青岛大学/ 信息/ 工程学院/ 山东/ 青岛/ 266071/ )/ 摘要/ 针对/ 目前/ 面向/ 服务/ 计算/ (/ SOC/ )/ 系统/ 中/ QoS/ 保证/ 机制/ 没有/ 充分考虑/ 系统/ 服务/ 组件/ 的/ 动态性/ 问题/ ,/ 提出/ 了/ SOC/ 系统/ 中/ 的/ 信用/ 模型/ 与/ 信用/ 函数/ ,/ 采用/ 信用/ 值/ 量化/ 系统/ 服务/ 组件/ 的/ 动态性/ ,/ 同时/ 提出/ 了/ 信用/ 值/ 驱动/ 的/ 服务/ 调度/ 、/ 服务/ 预留/ 和/ 服务/ 备份/ 的/ QoS/ 保证/ 机制/ ./ 最后/ 对/ QoS/ 保证/ 机制/ 中/ 的/ 主要/ 算法/ 进行/ 了/ 仿真/ 验证/ ,/ 结果显示/ 该/ QoS/ 保证/ 机制/ 可以/ 有效/ 地/ 降低/ 网络服务/ 组件/ 的/ 动态性/ 对/ QoS/ 的/ 影响/ ,/ 提升/ 了/ 系统/ 的/ 服务质量/ ./ 关键词/ 面向/ 服务/ 计算/ ;/ 信用/ 模型/ ;/ 服务/ 调度/ ;/ 服务/ 预留/ ;/ 服务/ 备份/ 1/ 引言/ 面向/ 服务/ 计算/ (/ ServiceOrientedComputing/ ,/ SOC/ )/ 是/ 将/ 动态/ 的/ 、/ 多/ 自治/ 域/ 的/ 虚拟/ 组织/ 中/ 的/ 信息/ 、/ 计算能力/ 等/ 各种/ 资源/ 封装/ 成为/ 具有/ 统一/ 的/ 外观/ 和/ 标准/ 调用/ 方法/ 的/ 服务/ ,/ 提供/ 给/ 系统/ 或/ 用户/ 使用/ ,/ 并/ 通过/ 对/ 独立/ 开发/ 、/ 部署/ 、/ 发布/ 的/ 各种/ 基本/ 服务/ 的/ 查询/ 、/ 调度/ 等/ 过程/ ,/ 将/ 所/ 需/ 的/ 服务/ 组合/ 成为/ 某一/ 任务量/ 身/ 定制/ 的/ 特定/ 应用/ [/ 1/ -/ 2/ ]/ ,/ 从而/ 整合/ 各种/ 动态/ 的/ 、/ 分布/ 的/ 、/ 多/ 自治/ 域/ 的/ 、/ 虚拟/ 组织/ 内/ 的/ 资源/ ,/ 以/ 达到/ 协同/ 进行/ 问题/ 求解/ 的/ 目的/ ./ 关于/ 面向/ 服务/ 计算/ (/ SOC/ )/ 的/ 研究/ 涉及/ 到/ 很多/ 方面/ ,/ 其中/ 一个/ 重要/ 的/ 问题/ 就是/ 服务质量/ 保证/ (/ QualityofService/ ,/ QoS/ )/ ./ 所谓/ 的/ QoS/ 保证/ 机制/ 就是/ 在/ 服务/ 计算/ 模式/ 下/ ,/ 协调/ 属于/ 不同/ 组织/ 与/ 机构/ 的/ 各种/ 服务/ ,/ 协同/ 进行/ 问题/ 求解/ 过程/ 中/ 保证/ 服务/ 的/ 质量/ ./ 这是/ 构建/ 一个/ 健壮/ 、/ 高效/ 的/ SOC/ 应用/ 系统/ 所/ 必需/ 解决/ 的/ 关/ Page2/ 键/ 问题/ ./ 如果/ SOC/ 应用/ 系统/ 的/ 服务质量/ 得不到/ 保证/ ,/ 那么/ 资源共享/ 的/ 意义/ 将会/ 大打折扣/ ./ 与/ 传统/ 的/ Web/ 服务/ 技术/ 相比/ ,/ 在/ 面向/ 服务/ 计算/ 的/ 应用/ 系统/ 中/ ,/ 用户/ 对/ QoS/ 的/ 要求/ 主要/ 包括/ 高效性/ 和/ 高可用性/ 两个/ 方面/ ./ 其中/ 高效性/ 主要/ 包括/ 任务/ 截止/ 时间/ 、/ 任务/ 结果/ 的/ 精度/ 等/ 服务/ 性能/ 上/ 的/ 要求/ ,/ 即/ 保证/ 服务/ 能够/ 按时/ 而且/ 高质量/ 地/ 完成/ ,/ 属于/ 对系统/ 性能/ 鲁棒性/ 的/ 要求/ [/ 3/ ]/ ./ 另一方面/ ,/ 高可用性/ 要求/ 服务/ 在/ 整个/ 服务/ 期限内/ 保持/ 较/ 高/ 的/ 可用性/ ,/ 不会/ 因为/ SOC/ 系统/ 动态性/ 引起/ 服务/ 组件/ 的/ 失效/ 而/ 影响/ 服务/ 的/ 连续性/ ,/ 即/ 要求/ 系统/ 具有/ 一定/ 的/ 稳定/ 鲁棒性/ ./ 目前/ 大多数/ 的/ QoS/ 保证/ 机制/ 都/ 把/ 主要/ 精力/ 放在/ 了/ 保证/ 服务/ 的/ 高效性/ 上/ ,/ 而/ 对系统/ 服务/ 动态性/ 引起/ 的/ 服务/ 可用性/ 的/ 问题/ 没有/ 太多/ 的/ 关注/ ./ 实际上/ ,/ 在/ 服务/ 生命/ 期内/ 任何/ 一个/ 服务/ 组件/ 的/ 失效/ 都/ 会/ 使/ 整个/ 服务/ 不再/ 可用/ ./ 同时/ 由于/ 构成/ 服务/ 的/ 各个/ 服务/ 组件/ 可能/ 来源于/ 不同/ 的/ 机构/ 或/ 虚拟/ 组织/ ,/ 导致/ 由此/ 引发/ 的/ 服务/ 失效/ 几率/ 会/ 远远/ 大于/ 传统/ 基于/ Web/ 环境/ 的/ 应用/ 系统/ ./ 所以/ 在/ 设计/ QoS/ 保证/ 机制/ 过程/ 中要/ 充分/ 地/ 考虑/ 系统/ 的/ 动态性/ ,/ 以/ 保证/ 服务/ 的/ 稳定/ 鲁棒性/ ./ 因此/ ,/ 本文/ 提出/ 了/ 一个/ 基于/ 信用/ 的/ 服务/ 调度/ 、/ 服务/ 预留/ 和/ 服务/ 备份/ 的/ QoS/ 保证/ 机制/ 模型/ ./ 在/ 该/ 模型/ 中/ ,/ 引入/ 与/ 量化/ 信誉度/ 的/ 信用/ 值/ 概念/ ,/ 建立/ 信用/ 值/ 在/ 服务/ 调度/ 过程/ 中/ 的/ 驱动/ 机制/ ,/ 将/ QoS/ 保证/ 机制/ 对/ 服务/ 性能/ 方面/ 的/ 要求/ 在/ 服务/ 调度/ 阶段/ 实现/ ,/ 采用/ 信用/ 函数/ 将/ 系统/ 服务/ 的/ 动态性/ 量化/ 为/ 信用/ 记录/ 中/ 的/ 信用/ 值/ ,/ 并/ 作为/ 服务/ 调度/ 过程/ 中/ 的/ 主要参数/ 用来/ 实现/ 风险/ 规避/ ./ 同时/ ,/ 提出/ 一种/ 通过/ 服务/ 预留/ 和/ 服务/ 备份/ 策略/ 实现/ 对/ 用户/ 透明/ 的/ 服务/ 组件/ 的/ 动态/ 重构/ ,/ 将/ 系统/ 动态性/ 对/ 服务/ 可用性/ 的/ 影响/ 降/ 至/ 最低/ ./ 本文/ 第/ 2/ 节/ 介绍/ 有关/ QoS/ 方面/ 的/ 研究/ 现状/ ,/ 详细分析/ 现有/ 的/ QoS/ 保证/ 机制/ 存在/ 的/ 缺陷/ 及其/ 对/ SOC/ 应用/ 系统/ 服务/ 管理/ 的/ 影响/ ;/ 第/ 3/ 节/ 系统/ 定义/ SOC/ 应用/ 系统/ 中/ 的/ 信用/ 模型/ 以及/ 信用/ 函数/ 如何/ 将/ 系统/ 动态性/ 对/ 服务/ 可用性/ 的/ 影响/ 进行/ 量化/ ,/ 并/ 在/ 信用/ 记录/ 中/ 体现/ ;/ 第/ 4/ 节/ 详细/ 阐述/ QoS/ 保证/ 机制/ 在/ 信用/ 记录/ 的/ 驱动/ 下/ 进行/ 服务/ 调度/ 而且/ 实现/ 风险/ 规避/ 以及/ 通过/ 服务/ 预留/ 和/ 服务/ 备份/ 算法/ 实现/ 服务/ 组件/ 动态/ 重构/ 的/ 详细/ 流程/ ;/ 第/ 5/ 节/ 设计/ 本文/ QoS/ 保证/ 机制/ 的/ 仿真/ 实验/ ,/ 并/ 分析/ 实验/ 结果/ ;/ 最后/ ,/ 对/ 本文/ 的/ 算法/ 和/ 模型/ 进行/ 总结/ ./ 2/ 相关/ 工作/ QoS/ 对于/ SOC/ 应用/ 系统/ 的/ 重要性/ ,/ 使该/ 问题/ 成为/ 当前/ 十分/ 热门/ 的/ 一个/ 研究/ 领域/ ./ 主流/ 观点/ 认为/ ,/ SOC/ 应用/ 系统/ 的/ QoS/ 需求/ 主要/ 包括/ 性能/ QoS/ 和/ 安全/ QoS/ ./ 性能/ QoS/ 主要/ 涉及/ 服务/ 是否/ 可用/ 以及/ 性能/ 能否/ 满足/ 任务/ 的/ 需求/ ,/ 如/ 服务/ 组件/ 的/ 连通性/ 、/ 网络/ 传输/ 状况/ 、/ 服务提供者/ 的/ 硬件/ 配置/ 和/ 软件/ 部署/ 等/ 内容/ ./ 安全/ QoS/ 则/ 重点/ 关注/ 服务/ 调用/ 过程/ 中/ 的/ 安全/ 问题/ ,/ 如/ 避免/ 服务提供者/ 的/ 服务/ 欺骗/ 和/ 服务/ 请求者/ 对/ 资源/ 的/ 恶意/ 使用/ 等/ 问题/ ./ 关于/ QoS/ 保证/ 机制/ ,/ 目前/ 存在/ 两种/ 比较/ 著名/ 的/ 体系结构/ ./ 一种/ 是/ Foster/ 等/ 人/ [/ 4/ -/ 6/ ]/ 提出/ 的/ Globus/ 预留/ 和/ 分配/ 体系结构/ GARA/ (/ GlobusArchitectureforReservationandAllocation/ )/ ./ 该/ 体系结构/ 采用/ 层次化/ 的/ 观念/ 利用/ 各级/ API/ 、/ Globus/ 网格/ 安全/ 体系/ 框架/ (/ GSI/ )/ 和/ 网格/ 资源管理/ 器/ (/ GRM/ )/ ,/ 通过/ 统一/ 的/ 接口/ 完成/ 对/ 服务/ 的/ 预留/ 、/ 控制/ 和/ 监视/ ,/ 从而/ 保证/ 端到/ 端的/ QoS/ ./ 另/ 一种/ 是/ 英国/ 的/ Cardiff/ 大学/ Al/ -/ Ali/ 等/ 人/ [/ 7/ ]/ 提出/ 的/ 网格/ QoS/ 管理/ 体系结构/ G/ -/ QoSM/ (/ GridQoSManagementArchitecture/ )/ ./ 它/ 提供/ 了/ 3/ 个/ 主要/ 的/ 功能/ 来/ 实现/ OGSA/ 环境/ 下/ 的/ 服务/ 预留/ 和/ 自/ 适应/ 调节/ 的/ QoS/ 管理/ :/ 基于/ QoS/ 属性/ 的/ 服务/ 发现/ ;/ SLA/ (/ ServiceLevelAgreement/ )/ 协议/ ;/ 已/ 分配/ 服务/ 的/ 自/ 适应/ 调节/ ./ 对于/ 这/ 两种/ QoS/ 保证/ 机制/ 的/ 体系结构/ ,/ GARA/ 使用/ Globus/ 安全/ 框架/ 增强/ 了/ 系统/ 安全性/ ,/ 而/ G/ -/ QoSM/ 则/ 更/ 侧重于/ 如何/ 在/ 服务/ 管理/ 和/ 调度/ 过程/ 中/ 实现/ QoS/ 保证/ 机制/ ./ 除了/ 上述/ 有关/ 体系结构/ 的/ 研究/ 外/ ,/ 其它/ 大部分/ 工作/ 都/ 集中/ 在/ 如何/ 量化/ 任务/ 对/ QoS/ 的/ 需求/ 以及/ 保证/ QoS/ 的/ 服务/ 调度/ 算法/ 方面/ ,/ Maheswaran/ 等/ 人/ [/ 8/ ]/ 提出/ 了/ QoS/ 驱动/ 的/ 资源管理/ 策略/ ,/ 利用/ 效益/ 函数/ 量化/ 服务质量/ 等级/ ,/ 采用/ 作业/ 级/ 动态/ 调度/ 算法/ 来/ 保证/ 性能/ QoS/ 中/ 最终/ 服务/ 期限/ 和/ 优先级/ ./ 为了/ 更好/ 地/ 适应/ 服务/ 计算环境/ 下/ 的/ 动态性/ 和/ 自治/ 性/ ,/ 丁/ 箐/ 等/ 人/ [/ 9/ -/ 10/ ]/ 在/ 文献/ 中/ 通过/ 定义/ 效益/ 函数/ ,/ 将/ 一组/ 相互/ 独立/ 作业/ 重复/ 映射/ 到/ 不同/ 的/ 服务/ 上以/ 保证/ 最终/ 服务/ 期限/ 等/ 性能/ QoS/ 需求/ ./ 文献/ [/ 11/ ]/ 通过/ 以/ 传统/ 的/ Min/ -/ Min/ 作业/ 调度/ 启发式/ 算法/ 为/ 基础/ ,/ 对/ 其/ 进行/ 了/ 改进/ 并/ 使/ 其/ 具有/ 自/ 适应/ 的/ 、/ 性能/ QoS/ 驱动/ 的/ 特性/ ./ 文献/ [/ 12/ -/ 13/ ]/ 深入研究/ 了/ 基于/ 性能/ QoS/ 的/ 服务/ 管理/ 与/ 调度/ 算法/ ,/ 探讨/ 了/ 多/ 服务质量/ 约束/ 的/ 复合/ 服务/ 调度/ 机制/ 在/ 工作/ 流/ (/ workflow/ )/ 中/ 的/ 应用/ ./ Azzedin/ 与/ Maheswaran/ 等/ 人/ [/ 14/ ]/ 针对/ 服务/ 计算/ 系统对/ 安全/ QoS/ 的/ 需求/ ,/ 将/ “/ 信任/ ”/ 引入/ 了/ 服务/ 管理系统/ ./ Humphrey/ 等/ 人/ [/ 15/ ]/ 则/ 对/ 具有/ 信任/ 意识/ 的/ 服务/ 计算/ 模型/ 进行/ 了/ 深入研究/ ./ 张伟哲/ 、/ 方滨兴/ 等/ 人/ [/ 16/ ]/ 兼顾/ 服务提供者/ 和/ 服务/ 请求者/ Page3/ 的/ 行为/ 对/ 系统安全/ QoS/ 的/ 影响/ 提出/ 了/ 一种/ 基于/ 信任/ QoS/ 增强/ 的/ 网格/ 服务/ 调度/ 算法/ ./ 综合/ 上述/ 理解/ 我们/ 认为/ ,/ 目前/ QoS/ 保证/ 机制/ 以及/ 基于/ QoS/ 的/ 服务/ 调度/ 算法/ 的/ 研究/ ,/ 对于/ 安全/ QoS/ 和/ 性能/ QoS/ 问题/ 中/ 的/ 服务/ 性能/ 、/ 最终/ 服务/ 期限/ 、/ 网络/ 传输/ 状况/ 等/ 问题/ 给予/ 了/ 大量/ 的/ 关注/ ,/ 但是/ 却/ 忽略/ 了/ 服务/ 稳定性/ 对/ 服务质量/ 的/ 影响/ ./ 在/ SOC/ 系统/ 中/ 服务/ 或/ 服务/ 组件/ 随时/ 可能/ 会/ 由于/ 某些/ 有/ 计划/ 的/ 或是/ 意外/ 的/ 原因/ 导致/ 下线/ 和/ 失效/ ,/ 而且/ 这种/ 行为/ 对/ 服务质量/ 的/ 影响/ 往往/ 是/ 灾难性/ 的/ ./ 例如/ :/ 系统/ 中/ 一个/ 正在/ 为/ 某个/ 任务/ 提供/ 服务/ 的/ 服务/ 组件/ 由于/ 自身/ 故障/ 等/ 原因/ 突然/ 掉线/ ,/ 并且/ 导致/ 任务/ 没/ 能/ 来得及/ 保存/ 现场/ 时/ ,/ 系统/ 就/ 必须/ 要/ 消耗/ 一定/ 资源/ 对/ 任务/ 进行/ 再次/ 调度/ ,/ 而且/ 更/ 重要/ 的/ 是/ 在/ 此/ 过程/ 中/ 造成/ 的/ 时间/ 损失/ 必将/ 影响/ 任务/ 能否/ 按时/ 交付/ ./ 3/ 相关/ 概念/ 及/ 问题/ 描述/ 基于/ 上述/ 分析/ ,/ 我们/ 提出/ 了/ 一个/ 根据/ 当前/ 和/ 过去/ 最近/ 一段时间/ 的/ 信用/ 记录/ 及其/ 变化趋势/ 来/ 量化/ 系统/ 服务/ 动态性/ 的/ 信用/ 模型/ ,/ 采用/ 信用/ 值/ 驱动/ 的/ 服务/ 调度/ 、/ 服务/ 预留/ 和/ 服务/ 备份/ 的/ 方法/ 降低/ 其/ 对系统/ QoS/ 影响/ 的/ 算法/ 模型/ ./ 下面/ 给出/ 相关/ 的/ 定义/ 和/ 假设/ 以及/ 问题/ 的/ 描述/ ./ 3.1/ 基本/ 定义/ 一般/ 由/ 以下/ 几个/ 方面/ 引发/ :/ 定义/ 1/ ./ 服务/ 组件/ 动态性/ ./ 服务/ 组件/ 的/ 动态性/ (/ 1/ )/ 服务提供者/ 提供/ 服务/ 的/ 意愿/ 动态变化/ ,/ 在/ SOC/ 系统/ 中/ 服务/ 分属/ 不同/ 的/ 组织/ 和/ 机构/ ,/ 随时/ 有/ 可能/ 撤离/ 系统/ ./ 设/ 该种/ 情形/ 导致/ 的/ 服务/ 下线/ 几率/ 为/ Pp/ ./ (/ 2/ )/ 服务/ 本身/ 动态变化/ ,/ 包括/ 服务器/ 负载/ 、/ 软硬件/ 配置/ 等/ 条件/ 的/ 变化/ 引发/ 服务/ 功能/ 、/ 性能/ 、/ 可用性/ 的/ 变化/ ./ 设/ 该种/ 情形/ 导致/ 的/ 服务/ 下线/ 几率/ 为/ Ps/ ./ 变化/ 等/ ./ 设/ 该种/ 情形/ 导致/ 的/ 服务/ 下线/ 几率/ 为/ Pn/ ./ (/ 3/ )/ 网络/ 环境/ 动态变化/ ,/ 包括/ 网络/ 传输速率/ 的/ 则/ 由/ 服务/ 组件/ 动态性/ 引发/ 的/ 服务/ 总/ 的/ 下线/ 几率/ 为/ 常规/ 的/ QoS/ 保证/ 机制/ 一般/ 采用/ 实时/ 监测/ 上述/ 具体/ 指标/ (/ Pp/ ,/ Ps/ ,/ Pn/ )/ ,/ 产生/ 可以/ 量化/ 各种/ 动态性/ 的/ 函数/ 值/ (/ Q/ (/ Pp/ )/ ,/ R/ (/ Ps/ )/ ,/ S/ (/ Pn/ )/ )/ ,/ 赋予/ 不同/ 的/ 权重/ (/ k/ ,/ l/ ,/ m/ )/ ,/ 并/ 计算/ 产生/ 可以/ 量化/ 服务/ QoS/ 的/ 参数/ V/ (/ QoS/ )/ ,/ 来/ 为/ 任务/ 选择/ 可以/ 保证/ QoS/ 的/ 服务/ ./ V/ (/ QoS/ )/ =/ k/ ·/ Q/ (/ Pp/ )/ +/ l/ ·/ R/ (/ Ps/ )/ +/ m/ ·/ S/ (/ Pn/ )/ ./ 此类/ QoS/ 管理策略/ 重点/ 关注/ 引发/ 服务/ 组件/ 动态性/ 的/ 原因/ ,/ 需要/ 耗费/ 大量/ 的/ 资源/ 用以/ 实时/ 监测/ 各种/ 具体/ 的/ QoS/ 指标/ 以及/ 计算/ QoS/ 的/ 量化/ 参数/ ,/ 而且/ 各类/ 具体/ 指标/ 在/ QoS/ 量化/ 参数/ 中所/ 占/ 权重/ 的/ 设定/ 也/ 比较/ 困难/ ./ 本文/ 设计/ 的/ QoS/ 保证/ 机制/ 则/ 重点/ 关注/ 生命/ 期内/ 调度/ 到/ 服务/ 上/ 的/ 任务/ 的/ 完成/ 情况/ 以及/ 服务/ 动态性/ 引发/ 的/ 后果/ ,/ 然后/ 采用/ 信用/ 模型/ 对/ 其/ 进行/ 量化/ ,/ 并/ 以/ 信用/ 记录/ 的/ 形式/ 表示/ ,/ 系统/ 根据/ 服务/ 的/ 历史/ 信用/ 状况/ 对/ 未来/ 生命/ 期内/ 的/ QoS/ 状况/ 进行/ 预测/ ./ 采用/ 信用/ 记录/ 这一/ 抽象层次/ 较/ 高/ 的/ 指标/ 衡量/ 服务/ 的/ QoS/ 状况/ ,/ 仅/ 关注/ 服务/ 组件/ 的/ 整体/ 动态性/ 所/ 引发/ 的/ 结果/ ,/ 而无须/ 了解/ 造成/ 动态性/ 的/ 具体/ 原因/ ,/ 可以/ 一定/ 程度/ 上/ 降低/ QoS/ 管理/ 的/ 难度/ 与/ 系统/ 开销/ ./ 定义/ 2/ ./ 信用/ ./ 在/ 服务/ 计算/ 系统/ 中/ 信用/ 包含/ 两个/ 方面/ :/ 其一/ 是/ SP/ (/ ServiceProvider/ )/ 信用/ ,/ 服务提供者/ 在/ 注册/ 服务/ 的/ 时候/ 实际上/ 做出/ 了/ 一种/ 可以/ 提供/ 某种/ 能力/ 的/ 承诺/ ,/ 所谓/ 信用/ 就是指/ 在/ 服务/ 生命/ 期内/ 服务提供者/ 能否/ 持续/ 、/ 安全/ 地/ 提供/ 这种/ 能力/ ./ 与/ 之/ 相对/ 应/ 的/ 另一方面/ 是/ SD/ (/ ServiceDemander/ )/ 信用/ ,/ 服务/ 请求者/ 能否/ 在/ 服务/ 生命/ 期内/ 以/ 申请/ 服务/ 时所/ 承诺/ 的/ 方式/ 调用/ 服务/ ,/ 并/ 在/ 随后/ 及时/ 地/ 支付/ 账单/ ./ 定义/ 3/ ./ 信用/ 记录/ 值/ CR/ (/ CreditRecord/ )/ ./ 是/ 服务提供者/ 和/ 服务/ 请求者/ 信用/ 状况/ 的/ 历史记录/ ,/ 初始化/ 时/ 所有/ 主体/ 的/ CR/ 值均/ 为/ 零/ ./ 我们/ 主要/ 关注/ SP/ 信用/ 中/ 的/ 服务/ 稳定性/ ,/ 即/ 服务提供者/ 能否/ 在/ 服务/ 生命/ 期内/ 保证/ 服务/ 的/ 持续/ 在线/ ./ 因此/ 本文/ 中/ 的/ 信用/ 记录/ 值/ 同样/ 被/ 用来/ 重点/ 反映/ 服务提供者/ 在/ 服务/ 稳定性/ 方面/ 的/ 信用/ 状况/ ./ 在/ 上述/ 定义/ 的/ 基础/ 上/ ,/ 给出/ 信用/ 模型/ 的/ 定义/ ./ 定义/ 4/ ./ 信用/ 模型/ ./ 服务/ 计算/ 系统/ 中/ 的/ 信用/ 模型/ 是/ 一个/ 四元组/ (/ P/ ,/ D/ ,/ R/ ,/ f/ )/ ,/ 其中/ P/ 是/ 所有/ 服务提供者/ 的/ 信用/ 记录/ 值/ 集合/ ;/ D/ 为/ 所有/ 服务/ 请求者/ 的/ 信用/ 记录/ 值/ 集合/ ;/ R/ 为/ 当前/ 系统/ 中/ 存在/ 的/ 服务/ 关系/ 集合/ R/ =/ {/ r1/ ,/ r2/ ,/ …/ ,/ ri/ ,/ …/ ,/ rn/ }/ ,/ 是从/ P/ 到/ D/ 的/ 映射/ 关系/ ;/ f/ 表示/ 信用/ 函数/ ,/ 对于/ R/ 中/ 每/ 一个/ 服务/ 关系/ 的/ 删除/ ,/ f/ 都/ 会/ 根据/ 服务质量/ 对/ 服务/ 关系/ 双方/ 的/ CR/ 进行/ 相应/ 的/ 调整/ ./ 定义/ 5/ ./ 服务/ 关系/ ./ R/ :/ P/ →/ D/ 是从/ 服务提供者/ 集合/ 到/ 服务/ 请求者/ 集合/ 的/ 映射/ ,/ 反映/ 当前/ 系统/ 中/ 存在/ 的/ 服务/ 关系/ ./ 每/ 一条/ 服务/ 关系/ 都/ 是/ 随着/ 服务/ 调度/ 系统/ 根据/ 特定/ 的/ 策略/ 为/ 服务/ 请求者/ 匹配/ 服务/ 成功/ 而/ 建立/ ,/ 并/ 随着/ 服务/ 生命期/ 的/ 结束/ 而/ 从/ R/ 中/ 删除/ ./ 信用/ 模型/ 根据/ R/ 可以/ 掌握/ 系统/ 中/ 所有/ 的/ 服务/ 关系/ ,/ 并/ Page4/ 对/ 服务/ 生命/ 期内/ 的/ 关系/ 双方/ 的/ 信用/ 状况/ 进行/ 记录/ ./ 定义/ 6/ ./ 信用/ 函数/ ./ 根据/ 服务/ 生命/ 期内/ ,/ 具有/ 服务/ 关系/ 双方/ 的/ 信用/ 状况/ 对/ 双方/ 的/ 信用/ 记录/ 做出/ 相应/ 的/ 调整/ ./ f/ :/ CR/ =/ CR/ +/ w/ ,/ w/ ∈/ W/ =/ {/ w1/ ,/ w2/ ,/ w3/ ,/ w4/ ,/ …/ }/ ./ 集合/ W/ 代表/ 信用/ 事件/ 集/ CE/ (/ CreditEvent/ )/ 相对/ 应/ 的/ 权值/ 集合/ ,/ CE/ 即/ 在/ 服务/ 生命/ 期内/ 可能/ 发生/ 的/ 所有/ 与/ SP/ 和/ SD/ 相关/ 的/ 信用/ 事件/ ./ 与/ 信用/ 事件/ 相对/ 应/ w/ 值/ 的/ 正负/ 和/ 大小/ 反映/ 了/ 该/ 信用/ 事件/ 对/ 服务/ 关系/ 双方/ 信用/ 记录/ 的/ 影响/ 权重/ ./ 当/ w/ >/ 0/ 时/ ,/ 表示/ 该/ 信用/ 事件/ 对/ 信用/ 记录/ 有/ 增益/ ;/ 相反/ 当/ w/ </ 0/ 时/ ,/ 表示/ 该/ 信用/ 事件/ 对/ QoS/ 有/ 不良影响/ ,/ 引发/ 该/ 事件/ 的/ 主体/ 应/ 受到/ 相应/ 处罚/ ;/ 当/ w/ =/ 0/ 时/ ,/ 表示/ 该/ 信用/ 事件/ 在/ 系统/ 稳定/ 鲁棒性/ 的/ 承受/ 范围/ 内/ ,/ 即/ 对/ QoS/ 没有/ 影响/ ./ 3.2/ 基于/ 服务/ 预留/ 和/ 服务/ 备份/ 的/ QoS/ 保证/ 机制/ 为了/ 提高/ SOC/ 应用/ 系统/ 的/ 稳定/ 鲁棒性/ ,/ 我们/ 采取/ 了/ 基于/ 信用/ 的/ 服务/ 调度/ 、/ 服务/ 预留/ 与/ 服务/ 备份/ 的/ QoS/ 保证/ 机制/ ./ 该/ 机制/ 基于/ 以下/ 基本原理/ 和/ 假设/ ./ 假设/ 1/ ./ 主体/ 的/ 信用/ 状况/ 在/ 一定/ 时期/ 内/ 具有/ 持续性/ ./ 假设/ 1/ 的/ 主要/ 依据/ 是/ :/ 导致/ 服务/ 组件/ 意外/ 失效/ 的/ 原因/ 主要/ 有/ 不/ 可靠/ 的/ 硬件/ 配置/ 、/ 软件/ 的/ 逻辑/ 错误/ 、/ 网络/ 传输/ 的/ 中断/ 等/ ./ 这些/ 因素/ 客观/ 上/ 来说/ 可能/ 具有/ 一定/ 的/ 重复性/ ,/ 即/ 某/ 一/ 服务/ 组件/ 一旦/ 失效/ ,/ 那么/ 在/ 未来/ 一段/ 时期/ 内/ 它/ 再次/ 失效/ 的/ 概率/ 将会/ 明显/ 增大/ ./ 因此/ ,/ 在/ QoS/ 保证/ 机制/ 中/ ,/ 我们/ 将/ 服务/ 生命/ 期内/ 可能/ 发生/ 的/ 所有/ 事件/ 均/ 纳入/ 信用/ 事件/ 集合/ CE/ 中/ ,/ 根据/ 其/ 对系统/ 稳定/ 鲁棒性/ 的/ 影响/ 大小/ 赋予/ 不同/ 的/ 权值/ 形成/ 权值/ 集合/ W/ ,/ 通过/ 信用/ 函数/ f/ 捕获/ 信用/ 事件/ 并/ 对/ SP/ 信用/ 记录/ 值/ 进行/ 相应/ 的/ 调整/ ,/ 使得/ SP/ 的/ 信用/ 记录/ 能/ 反映/ 该/ 服务/ 在/ 服务/ 生命期/ 内因/ 各种/ 原因/ 而/ 失效/ 的/ 几率/ 大小/ ./ 在/ 服务/ 调度/ 阶段/ 我们/ 参考/ 服务提供者/ 的/ 信用/ 记录/ 值/ 并/ 为/ 其/ 授予/ 不同/ 的/ 优先级/ ,/ 保证/ 高可靠性/ 的/ 服务/ 可以/ 得到/ 优先/ 的/ 调度/ ,/ 从而/ 实现/ 风险/ 规避/ ./ 定义/ 7/ ./ 服务/ 预留/ ./ 当/ 服务提供者/ 在/ 注册/ 服务/ 的/ 时候/ ,/ 明确/ 设定/ 预留/ 时间/ t/ (/ t/ / 0/ )/ ,/ 即/ SP/ 在/ 未来/ 的/ t/ 时间/ 内/ 保证/ 服务/ 的/ 可用性/ ;/ 当/ t/ =/ 0/ 时/ ,/ 表示/ 该/ 服务/ 不/ 提供/ 服务/ 预留/ 随时/ 可能/ 会/ 下线/ ./ 对于/ 支持/ 预留/ 的/ 服务/ ,/ 在/ 调度/ 过程/ 中会/ 被/ 优先/ 考虑/ 甚至/ 可以/ 在/ 价格/ 上/ 予以/ 奖励/ ./ 当然/ 如果/ 服务提供者/ 没有/ 保证/ 服务/ 在/ 预留/ 时间/ 内/ 可用/ ,/ 则/ 将/ 会/ 受到/ 相应/ 的/ 惩罚/ 并/ 反映/ 在/ 信用/ 记录/ 上/ ./ 采用/ 服务/ 预留/ 策略/ ,/ 可以/ 明显提高/ 对于/ 服务/ 持续性/ 比较/ 敏感/ 或者/ 服务/ 截止/ 时间/ 比较/ 严格/ 的/ 任务/ 的/ 服务质量/ ./ 服务/ 预留/ 主要/ 基于/ 以下/ 事实/ ./ 假设/ 2/ ./ 服务提供者/ 能够/ 准确/ 地/ 估计/ 可以/ 持续/ 、/ 稳定/ 的/ 提供/ 服务/ 的/ 时间/ ,/ 或者说/ 是/ 服务提供者/ 能够/ 确定/ 在/ 未来/ 多长时间/ 内/ 服务/ 不会/ 因为/ 个人/ 原因/ 而/ 下线/ ./ 假设/ 2/ 主要/ 依据/ :/ 面向/ 服务/ 的/ 计算/ 系统/ 中/ 服务/ 都/ 是/ 由/ 网络/ 中/ 的/ 资源/ 经过/ 封装/ 、/ 抽象/ 而/ 来/ ,/ 而/ 多数/ 情况/ 下/ 资源/ 的/ 拥有者/ 都/ 能/ 确定/ 资源/ 在/ 什么/ 时间/ 会/ 空闲/ ,/ 并/ 对外/ 提供/ 服务/ ./ 定义/ 8/ ./ 服务/ 备份/ ./ 当/ 正在/ 提供/ 服务/ 的/ 服务/ 组件/ 不/ 满足/ 该/ 任务/ 对/ 服务质量/ 的/ 要求/ 时/ ,/ 系统/ 会/ 选择/ 一个/ 可以/ 替换/ 当前/ 组件/ 的/ 新/ 服务/ 组件/ 作为/ 该/ 组件/ 的/ 备份/ ,/ 并/ 限制/ 该/ 组件/ 被/ 调度/ 给/ 其它/ 任务/ ./ 当前/ 组件/ 不能/ 继续/ 提供/ 服务/ 时/ ,/ 可以/ 将/ 任务/ 打包/ 并/ 进行/ 任务/ 迁移/ ,/ 第一/ 时间/ 在/ 备份/ 的/ 服务/ 组件/ 上/ 重新部署/ 该/ 任务/ ./ 下面/ 两种/ 情况/ 将会/ 引发/ 服务/ 备份/ :/ (/ 1/ )/ 支持/ 预留/ 的/ 服务/ 组件/ 的/ 预留/ 时间/ 已经/ 到期/ (/ 2/ )/ 对/ 服务质量/ 要求/ 很/ 高/ 的/ 任务/ ,/ 却/ 被/ 匹配/ 到/ 定义/ 9/ ./ 任务/ 迁移/ ./ 当/ 正在/ 提供/ 服务/ 的/ 服务/ 组件/ 性能/ 变得/ 不再/ 满足/ 该/ 任务/ 需求/ 或/ 服务提供者/ 向/ 服务/ 管理/ 、/ 调度/ 系统/ 申请/ 服务/ 下线/ 时/ ,/ 将会/ 引发/ 任务/ 迁移/ ./ 任务/ 的/ 执行/ 现场/ 将会/ 被/ 打包/ ,/ 并/ 迁移/ 到/ 备份/ 服务/ 或是/ 系统/ 重新/ 调度/ 的/ 服务/ 上/ 部署/ 并/ 继续执行/ ./ 信用/ 记录/ 驱动/ 的/ 服务/ 调度/ 实现/ 风险/ 规避/ ;/ 服务/ 预留/ 和/ 服务/ 备份/ 实现/ 风险/ 控制/ ;/ 任务/ 迁移/ 实现/ 风险/ 补救/ ./ 通过/ 上述/ 3/ 个/ 策略/ 以期/ 在/ 该/ QoS/ 保证/ 机制/ 中将/ 服务/ 组件/ 失效/ 引起/ 服务/ 中断/ 的/ 风险/ 降/ 至/ 最低/ ./ 4/ 服务/ 调度/ 、/ 预留/ 、/ 备份/ 算法/ (/ 倒计时/ t/ 变为/ 0/ 时/ )/ 而/ 任务/ 仍/ 未/ 完成/ ./ 信用/ 记录/ 较/ 低/ 的/ 服务/ ./ 为了/ 实现/ 本文/ 的/ QoS/ 保证/ 机制/ ,/ 我们/ 提出/ 了/ 支持/ 信用/ 机制/ 的/ 服务/ 调度/ 、/ 预留/ 、/ 备份/ 算法/ 的/ 服务/ 管理/ 模型/ ,/ 以便/ 实现/ 风险/ 规避/ 、/ 控制/ 和/ 补救/ ,/ 确保/ 系统/ 服务质量/ ./ 图/ 1/ 给出/ 支持/ 信用/ 管理/ 的/ 服务/ 调度/ 与/ 管理/ 模型/ ./ 该/ 信用/ 机制/ 由/ 3/ 部分/ 组成/ :/ (/ 1/ )/ 信用/ 记录/ 数据库/ ,/ 用于/ 记录/ 面向/ 服务/ 计算/ 系统/ 中/ 所有/ 服务提供者/ 和/ 服务/ 请求者/ 的/ 信用/ 记录/ ;/ (/ 2/ )/ 服务/ 关系数据库/ ,/ 记/ Page5/ 录/ 当前/ 系统/ 中/ 存在/ 的/ 所有/ 服务/ 关系/ ;/ (/ 3/ )/ 信用/ 管理/ 模块/ ,/ 为/ 系统/ 提供/ 信用/ 信息/ ,/ 并/ 根据/ 系统/ 中/ 主体/ 在/ 服务/ 生命/ 期内/ 的/ 信用/ 状况/ 对/ 信用/ 记录/ 进行/ 调整/ ./ 定义/ 10/ ./ 服务/ ./ 我们/ 将/ 面向/ 应用/ 系统/ 中/ 的/ 服务/ 定义/ 为/ 一个/ 五元/ 组/ (/ SP/ ,/ SFD/ ,/ SPD/ ,/ SCM/ ,/ t/ )/ ,/ 其中/ SP/ 表示/ 服务提供者/ ,/ 用于/ 对/ 服务/ 标识/ 和/ 定位/ ;/ SFD/ 表示/ 服务/ 功能性/ 描述/ ,/ 服务/ 调度/ 与/ 管理系统/ 根据/ 其/ 信息/ 对/ 服务/ 进行/ 分类/ ;/ SPD/ 表示/ 服务/ 性能/ 性/ 描述/ ,/ 服务/ 调度/ 系统/ 根据/ 其/ 信息/ 进行/ 服务/ 匹配/ ;/ SCM/ 表示/ 服务/ 调用/ 方式/ ,/ 说明/ 服务/ 的/ 具体/ 使用/ 方式/ (/ 如/ 服务/ 的/ 标准接口/ 与/ 底层/ 网络/ 端口/ 的/ 映射/ 关系/ 等/ )/ ;/ t/ 表示/ 服务/ 的/ 预留/ 时间/ ./ 所有/ 服务/ 都/ 具有/ 4/ 种/ 状态/ :/ State/ (/ s/ )/ =/ Unready/ (/ 未/ 就绪/ 状态/ )/ // Ready/ (/ 就绪/ 状态/ )/ // Serv/ (/ 服务/ 状态/ )/ // Backup/ (/ 预留/ 状态/ )/ ,/ 系统/ 中/ 所有/ 注册/ 的/ 服务/ 我们/ 以/ 集合/ S/ =/ {/ s1/ ,/ s2/ ,/ …/ ,/ sn/ }/ 表示/ ./ 定义/ 11/ ./ 服务/ 请求/ (/ 任务/ )/ ./ 相应/ 的/ 服务/ 请求/ 我们/ 也/ 定义/ 为/ 一个/ 四元组/ (/ SD/ ,/ DFD/ ,/ DPD/ ,/ SU/ )/ ,/ 其中/ SD/ 表示/ 服务/ 请求者/ ;/ DFD/ 表示/ 服务/ 请求/ 的/ 功能性/ 描述/ ,/ 服务/ 请求/ 分发/ 器/ 根据/ 其/ 信息/ 将/ 其分/ 发给/ 相应/ 的/ 服务/ 调度/ 器/ ;/ DPD/ 表示/ 服务/ 请求/ 的/ 性能/ 性/ 描述/ ;/ SU/ 表示/ 涉及/ 到/ 对/ 服务/ 调用/ 细节/ 的/ 具体/ 要求/ ./ 所有/ 的/ 服务/ 请求/ 都/ 具有/ 4/ 种/ 状态/ :/ State/ (/ d/ )/ =/ Unsub/ (/ 未/ 提交/ 状态/ )/ // Sub/ (/ 提交/ 状态/ )/ // Serv/ (/ 服务/ 状态/ )/ // Finish/ (/ 完成/ 状态/ )/ ,/ 系统/ 中/ 所有/ 已经/ 提交/ 的/ 服务/ 请求/ 我们/ 以/ 集合/ D/ =/ {/ d1/ ,/ d2/ ,/ …/ ,/ dn/ }/ 表示/ ./ 系列/ 算法/ ./ 下面/ ,/ 将/ 给出/ 基于/ 信用/ 的/ QoS/ 保证/ 机制/ 中/ 的/ 一/ 算法/ 1/ ./ 信用/ 记录/ 调整/ 算法/ ./ 由于/ 本文/ 主要/ 关注/ 服务提供者/ 的/ 行为/ 对/ QoS/ 的/ 影响/ ,/ 所以/ 这里/ 的/ 信用/ 记录/ 调整/ 算法/ 主要/ 针对/ 服务提供者/ ./ 设定/ 服务提供者/ 的/ 信用/ 事件/ 集/ CE/ 以及/ 与/ W/ 的/ 对应/ 关系/ :/ 其中/ 的/ 数值/ 表示/ 6/ 种/ 不同/ 的/ 事件/ ,/ 类似/ 于/ 操作系统/ 中/ 的/ 中断向量/ 表/ 用以/ 捕获/ 服务/ 组件/ 动态性/ 所/ 引发/ 的/ 结果/ ,/ 根据/ 不同/ 事件/ 对系统/ QoS/ 的/ 影响/ 程度/ 被/ 赋予/ 不同/ 的/ 权重/ :/ w/ ∈/ W/ =/ {/ w1/ =/ -/ 1/ ,/ w2/ =/ -/ 0.8/ ,/ w3/ =/ -/ 0.5/ ,/ 1/ ./ w1/ =/ -/ 1/ :/ t/ ≠/ 0/ ∩/ State/ (/ d/ )/ =/ Serv/ ∩/ (/ State/ (/ s/ )/ =/ Serv/ →/ State/ (/ s/ )/ =/ Unready/ )/ ./ 事件/ 类型/ 1/ ./ 当/ 一个/ 正在/ 提供/ 服务/ 而且/ 预留/ 时间/ 还/ 没有/ 到期/ 的/ 服务/ 组件/ ,/ 由于/ 某些/ 原因/ 突然/ 失效/ ,/ 而且/ 没有/ 留出/ 足够/ 的/ 时间/ 使/ 任务/ 保存/ 现场/ 并/ 进行/ 任务/ 迁移/ ./ 2/ ./ w2/ =/ -/ 0.8/ :/ t/ =/ 0/ ∩/ State/ (/ d/ )/ =/ Serv/ ∩/ (/ State/ (/ s/ )/ =/ Serv/ →/ State/ (/ s/ )/ =/ Unready/ )/ ./ 事件/ 类型/ 2/ ./ 一个/ 正在/ 提供/ 服务/ 但是/ 预留/ 时间/ 为/ 零/ 的/ 服务/ 组件/ ,/ 由于/ 某些/ 原因/ 突然/ 失效/ ,/ 而且/ 没有/ 留出/ 足够/ 的/ 时间/ 使/ 任务/ 保存/ 现场/ 并/ 进行/ 任务/ 迁移/ ./ 3/ ./ w3/ =/ -/ 0.5/ :/ t/ ≠/ 0/ ∩/ (/ State/ (/ d/ )/ =/ Serv/ →/ State/ (/ d/ )/ =/ Sub/ )/ ∩/ (/ State/ (/ s/ )/ =/ Serv/ →/ State/ (/ s/ )/ =/ Unready/ )/ ./ 事件/ 类型/ 3/ ./ 一个/ 正在/ 提供/ 服务/ 而且/ 预留/ 时间/ 还/ 没有/ 到期/ 的/ 服务/ 组件/ ,/ 向/ 服务/ 管理系统/ 申请/ 下线/ ,/ 并/ 留出/ 足够/ 的/ 时间/ 使/ 任务/ 完成/ 现场/ 保存/ 和/ 任务/ 迁移/ ./ 4/ ./ w4/ =/ 0/ :/ t/ =/ 0/ ∩/ (/ State/ (/ d/ )/ =/ Serv/ →/ State/ (/ d/ )/ =/ Sub/ )/ ∩/ (/ State/ (/ s/ )/ =/ Serv/ →/ State/ (/ s/ )/ =/ Unready/ )/ ./ 事件/ 类型/ 4/ ./ 一个/ 正在/ 提供/ 服务/ 而且/ 预留/ 时间/ 为/ 零/ 的/ 服务/ 组件/ ,/ 向/ 服务/ 管理系统/ 申请/ 下线/ ,/ 并/ 留出/ 足够/ 的/ 时间/ 使/ 任务/ 完成/ 现场/ 保存/ 、/ 打包/ 和/ 任务/ 迁移/ ./ 5/ ./ w5/ =/ 1/ :/ (/ State/ (/ d/ )/ =/ Serv/ →/ State/ (/ d/ )/ =/ Finish/ )/ ∩/ (/ State/ (/ s/ )/ =/ Serv/ →/ State/ (/ s/ )/ =/ Unready/ )/ ./ 事件/ 类型/ 5/ ./ 一个/ 提供/ 服务/ 的/ 服务/ 组件/ 在/ 保证/ 运行/ 于/ 其/ 上/ 的/ 任务/ 完成/ 以后/ ,/ 申请/ 下线/ 或/ 由于/ 意外/ 原因/ 而/ 失效/ ./ 6/ ./ w6/ =/ 1/ :/ (/ State/ (/ s/ )/ =/ Serv/ →/ State/ (/ s/ )/ =/ Finish/ )/ ∩/ (/ State/ (/ s/ )/ =/ Serv/ →/ State/ (/ s/ )/ =/ Ready/ )/ ./ 事件/ 类型/ 6/ ./ 一个/ 提供/ 服务/ 的/ 服务/ 组件/ 在/ 保证/ 运行/ 于/ 其/ 上/ 的/ 任务/ 完成/ 后/ ,/ 进入/ 服务/ 就绪/ 状态/ ./ 这里/ 主要/ 定义/ 了/ 6/ 个会/ 触发/ 服务/ 关系/ 改变/ 的/ 信用/ 事件/ 以及/ 相应/ 权值/ 集合/ ,/ 在/ 实际/ 应用/ 中/ 可以/ 根据/ 系统对/ 服务质量/ 具体/ 需求/ 进行/ 扩充/ 和/ 调整/ ./ 算法/ 过程/ 如下/ :/ 输入/ :/ 导致/ 服务/ 关系/ 被/ 撤销/ 的/ 信用/ 事件/ CE/ 输出/ :/ 返回/ 调整/ 后/ 的/ 服务提供者/ CR/ 值/ Page61/ ./ 持续/ 监听/ 服务/ 关系/ R/ 以/ 捕获/ 信用/ 事件/ ;/ 2/ ./ Repeat3/ ./ If/ (/ 捕获/ 到/ 一条/ 服务/ 关系/ ri/ 的/ 撤销/ )/ 4/ ./ 获取/ 其/ 信用/ 事件/ 代码/ CE/ ;/ 5/ ./ Switch/ (/ CE/ )/ 6/ ./ Case1/ :/ w/ =/ w17/ ./ 运行/ 信用/ 函数/ Break/ ;/ / 8/ ./ Case6/ :/ w/ =/ w69/ ./ 运行/ 信用/ 函数/ Break/ ;/ 10/ ./ EndSwitch11/ ./ 返回/ 调整/ 后/ 的/ SPi/ 的/ CR/ 值/ ,/ 并/ 对/ 信用/ 记录/ 数据/ 12/ ./ Endif13/ ./ UntilR/ =/ / 算法/ 首先/ 持续/ 监听/ 服务/ 关系/ R/ ,/ 确保/ 可以/ 捕获/ 所有/ 引起/ 服务/ 关系/ 变更/ 的/ 信用/ 事件/ ,/ 然后/ 查询/ 已经/ 定义/ 的/ 信用/ 事件/ 集合/ CE/ 并/ 确定/ 该/ 信用/ 事件/ 的/ 代码/ ;/ 步/ 5/ ~/ 13/ 根据/ 返回/ 的/ 信用/ 事件/ 代码/ 和/ 相对/ 应/ 的/ 权值/ 集合/ W/ 调用/ 信用/ 函数/ 对/ 引发/ 该/ 信用/ 事件/ 的/ SP/ 的/ CR/ 值/ 进行/ 调整/ ;/ 最后/ 更新/ 信用/ 记录/ 数据库/ 中/ 对应/ 的/ CR/ ./ 这样/ 信用/ 调整/ 算法/ 经过/ 一段时间/ 的/ 运行/ ,/ 随着/ 服务提供者/ 信用/ 记录/ 的/ 累积/ ,/ 服务/ 的/ 稳定性/ 将会/ 明显/ 地/ 在/ 服务/ 记录/ 值/ 的/ 大小/ 上/ 得到/ 体现/ ,/ 使得/ 服务/ 调度/ 系统/ 可以/ 轻松/ 地区/ 分/ 不能/ 提供/ 稳定/ 服务/ 的/ 服务/ 组件/ ./ 算法/ 2/ ./ 基于/ 信用/ 的/ 服务/ 管理/ 算法/ ./ 输入/ :/ 服务/ 注册/ 请求/ 、/ 任务/ 提交/ 请求/ 、/ 服务/ 行为/ 引发/ 的/ 输出/ :/ 服务/ 注册/ 、/ 服务/ 调度/ 方案/ 、/ 风险/ 处理/ 方案/ A/ ./ 服务/ 注册/ 算法/ :/ 1/ ./ 持续/ 监听/ 服务/ 注册/ 接口/ ;/ 2/ ./ Repeat3/ ./ For/ (/ 服务/ 注册/ 队列/ 中/ 的/ 每/ 一个/ 服务/ 注册/ 请求/ )/ 4/ ./ 根据/ 服务/ 描述/ 信息/ 中/ SPID/ 查询/ CRDDatabase5/ ./ SetState/ (/ s/ )/ =/ Ready/ ;/ 6/ ./ If/ (/ t/ >/ 0/ )/ 7/ ./ 设定/ 计时器/ RT/ =/ t/ 并/ 开始/ 倒计时/ ;/ 8/ ./ Endif9/ ./ Endfor10/ ./ Until/ 服务/ 注册/ 队/ 列为/ 空/ B/ ./ 任务/ 提交/ 及/ 服务/ 调度/ 算法/ :/ 1/ ./ 持续/ 监听/ 任务/ 提交/ 接口/ ;/ 2/ ./ For/ (/ 每/ 一个/ 任务/ 提交/ 请求/ )/ 3/ ./ 根据/ 任务/ 描述/ 信息/ 中/ DFD/ 将/ 其/ 插入/ 相应/ 服务/ 池/ 4/ ./ Endfor5/ ./ Repeat6/ ./ For/ (/ 每/ 一个/ 任务/ )/ 7/ ./ 获取/ 其/ DPD/ 信息/ ;/ 8/ ./ 对/ 服务/ 队列/ 中/ 按/ CRD/ 值/ 由/ 高到/ 低/ 的/ 顺序排列/ 服/ 9/ ./ If/ (/ SPD/ // DPD/ >/ Available/ )/ 10/ ./ SetState/ (/ s/ )/ =/ Serv/ ;/ 11/ ./ SetState/ (/ d/ )/ =/ Serv/ ;/ 12/ ./ 生成/ 一条/ 服务/ 关系/ r/ ,/ 并/ 将/ 其/ 加入/ R/ 中/ ;/ 13/ ./ 通知/ 服务/ 关系/ 的/ 双方/ 开始/ 任务/ 部署/ ;/ 14/ ./ Endif15/ ./ Endfor16/ ./ Until/ 任务/ 队/ 列为/ 空/ C/ ./ 服务/ 预留/ 和/ 服务/ 备份/ 算法/ :/ 1/ ./ 持续/ 监听/ 预留/ 行为/ 和/ 服务/ 调度/ 行为/ ;/ 2/ ./ For/ (/ t/ >/ 0/ →/ t/ =/ 0/ )/ 3/ ./ 探询/ SP/ 是否/ 延长/ 服务/ 时间/ ;/ 4/ ./ If/ (/ SPSett/ =/ NewT/ )/ 5/ ./ RT/ =/ t/ ,/ 重设/ 倒计时/ 器/ ;/ 6/ ./ Else/ // // SP/ 无/ 响应/ 或/ 不愿/ 延长/ 预留/ 时间/ 7/ ./ If/ (/ State/ (/ s/ )/ =/ =/ Serv/ )/ 8/ ./ 引发/ 服务/ 备份/ ;/ 9/ ./ Endif10/ ./ Endif11/ ./ Endfor12/ ./ For/ (/ R/ 中/ 每/ 一条/ 服务/ 关系/ 的/ 添加/ )/ 13/ ./ If/ (/ 服务/ 的/ CRD/ </ 任务/ 的/ CRD/ 需求/ )/ 14/ ./ 引发/ 服务/ 备份/ ;/ 15/ ./ Endif16/ ./ Endfor/ 服务/ 备份/ :/ 17/ ./ For/ (/ 每/ 一个/ 服务/ 备份/ 请求/ )/ 18/ ./ 查询/ 与/ 该/ 服务/ 对应/ 的/ 服务/ 队列/ ;/ 19/ ./ If/ (/ SPDi/ / SPD/ )/ 20/ ./ SetState/ (/ s/ )/ =/ Backup/ ;/ 21/ ./ Endif22/ ./ Endfor23/ ./ If/ (/ 任务/ 完成/ )/ 24/ ./ SetState/ (/ s/ )/ =/ Ready/ ;/ 25/ ./ EndifD/ ./ 任务/ 迁移/ 1/ ./ 持续/ 监听/ 服务/ 行为/ 引发/ 的/ 信用/ 事件/ ;/ Page72/ ./ For/ (/ 一个/ 服务/ 申请/ 下线/ )/ 3/ ./ If/ (/ 服务/ 上/ 有/ 任务/ 正在/ 运行/ )/ 4/ ./ 对/ 其/ 现场/ 进行/ 打包/ ;/ 5/ ./ If/ (/ 存在/ 一个/ 备份/ 的/ 服务/ )/ 6/ ./ Set/ (/ State/ (/ s/ )/ =/ Backup/ →/ State/ (/ s/ )/ =/ Serv/ )/ ;/ 7/ ./ 将/ 打包/ 的/ 任务/ 数据传输/ 过去/ 开始/ 任务/ 部署/ 以/ 8/ ./ Else/ // // 没有/ 备份/ 服务/ 9/ ./ 将/ 任务/ 插入/ 对应/ 服务/ 调度/ 器/ 任务/ 队列/ 的/ 队头/ ;/ 10/ ./ 任务调度/ 后/ 向/ 目的/ 服务/ 传输/ 打包/ 的/ 任务/ 数据/ ;/ 11/ ./ Endif12/ ./ Endif13/ ./ SetState/ (/ s/ )/ =/ Unready/ ./ 5/ 仿真/ 实验/ 结果/ 与/ 分析/ 我们/ 对/ 上述/ 基于/ 信用/ 的/ QoS/ 保证/ 机制/ 的/ 一系列/ 算法/ 进行/ 了/ 仿真/ 验证/ ./ 模拟/ 面向/ 服务/ 计算/ 应用/ 系统/ 中/ 的/ 服务/ 调度/ 过程/ ,/ 记录/ 系统/ 中/ 服务提供者/ 的/ CRD/ 变化/ ,/ 以/ 验证/ 信用/ 记录/ 算法/ 在/ 区分/ 不/ 稳定/ 服务/ 方面/ 的/ 有效性/ 和/ 成功率/ ./ 同时/ 通过/ 固定/ 系统/ 中/ 的/ 服务/ ,/ 设定/ 提交/ 的/ 任务/ 的/ 数量/ 和/ 规模/ ,/ 记录/ 每个/ 被/ 提交/ 任务/ 完成/ 时/ 所/ 被/ 调度/ 的/ 次数/ ,/ 以此/ 来/ 验证/ 算法/ 在/ 降低/ 服务/ 动态性/ 对/ QoS/ 影响/ 方面/ 的/ 效率/ ./ 仿真/ 实验/ 1/ ./ 本/ 实验/ 中/ 重点/ 验证/ 信用/ 模型/ 中/ 信用/ 记录/ 调整/ 算法/ 能否/ 准确/ 地/ 捕获/ 信用/ 事件/ ,/ 信用/ 记录/ 能否/ 真实/ 地/ 反映/ 服务/ 的/ QoSLevel/ ./ 因此/ 在/ 模拟/ 的/ 服务/ 计算/ 应用/ 系统/ 中/ 我们/ 定义/ 了/ 100/ 个/ 独立/ 的/ 服务/ ,/ 在/ 进行/ 服务/ 注册/ 时/ 由/ 系统/ 随机/ 地/ 将/ 它们/ 赋予/ 不同/ 的/ QoSLevel/ :/ 1/ 、/ 2/ 、/ 3/ ,/ 并/ 分别/ 对应/ 0.01/ 、/ 0.005/ 、/ 0.003/ 的/ 服务/ 下线/ 几率/ ,/ 由/ 系统/ 不断/ 地/ 随机/ 产生/ 一系列/ 的/ 服务/ 请求/ (/ 设/ 服务/ 请求/ 周期/ 为/ T/ )/ ,/ 并/ 将/ 其/ 调度/ 到/ 相应/ 的/ 服务/ 上/ 执行/ ,/ 最后/ 每隔/ 一段/ 时期/ 记录/ 系统/ 中/ 所有/ 服务提供者/ 的/ CRD/ 并/ 计算/ 对/ 不同/ QoSLevel/ 的/ 服务/ 组件/ 区分/ 的/ 成功率/ ./ 由于/ 在/ 正态分布/ 情况/ 下/ QoSLevel1/ 和/ QoSLevel3/ 的/ 样本/ 过少/ ,/ 从而/ 导致/ 信用/ 模型/ 对/ 少数/ 极端/ 样本/ 完全/ 识别/ 的/ 几率/ 过高且/ 所/ 需/ 的/ 时间/ 过/ 短/ ,/ 导致/ 仿真/ 实验/ 无法/ 准确/ 评估/ 算法/ 对/ 服务/ 组件/ QoSLevel/ 的/ 区分/ 成功率/ ./ 本/ 仿真/ 实验/ 中/ 所有/ 服务/ 的/ QoSLevel/ 的/ 概率分布/ 采用/ 了/ 平均/ 分布/ ,/ 而/ 非/ 更/ 符合/ 现实情况/ 的/ 正态分布/ ./ 如图/ 2/ 中/ 所示/ ,/ 系统/ 初始化/ 时/ 所有/ 服务/ 均/ 没有/ 任何/ 信用/ 历史/ ,/ 设定/ 初始值/ CRD/ =/ 0/ ,/ 因此/ 服务/ 调度/ 系统/ 现在/ 并/ 不能/ 区别/ 不/ 稳定/ 的/ 服务/ 组件/ ,/ 此时/ 的/ 信用/ 记录/ 驱动/ 的/ 服务/ 调度/ 算法/ 与非/ 信用/ 记录/ 驱动/ 的/ 没有/ 区别/ ./ 在/ 系统/ 运行/ 20/ 个/ 服务/ 请求/ 周期/ 后/ 我们/ 可以/ 看出/ ,/ 服务提供者/ 的/ CRD/ 值/ 已经/ 被/ 信用/ 记录/ 函数/ 根据/ 服务提供者/ 在/ 生命周期/ 内/ 的/ 表现/ 进行/ 了/ 相应/ 的/ 调整/ ./ 此时/ 的/ CRD/ 值/ 并/ 不能/ 精确/ 反映/ 服务/ 的/ QoSLevel/ ,/ 但是/ 已经/ 呈现出/ 一定/ 的/ 规律性/ ,/ 即/ 服务/ QoSLevel/ 较/ 高/ 其/ CRD/ 值/ 也/ 相对/ 较/ 高/ ./ 此时/ 系统对/ 不同/ QoSLevel/ 服务/ 组件/ 的/ 区分/ 成功率/ 较/ 低/ ,/ 仅为/ 37/ %/ ,/ 如图/ 3/ 所示/ ./ 随着/ 系统/ 的/ 继续/ 运行/ ,/ 服务提供者/ 的/ CRD/ 值/ 对/ 服务/ QoSLevel/ 的/ 反映/ 越来越/ 准确/ ./ 通过/ 图/ 4/ 可以/ 清楚/ 地/ 看到/ ,/ 系统/ 运行/ t/ =/ 60T/ 以后/ ,/ 服务/ 的/ CRD/ 值/ 基本上/ 分化/ 为/ 两个/ 明显/ 的/ 区间/ ,/ 而且/ 对/ 稳定性/ 低/ 的/ 服务/ ,/ 其/ 区分/ 成功率/ 达到/ 了/ 93/ %/ ./ 此时/ ,/ CRD/ 值/ 驱动/ 的/ 服务/ 调度/ 算法/ 在/ 进行/ 服务/ 匹配/ 的/ 时候/ ,/ 在/ 有/ 可选/ 服务/ 的/ 情况/ 下/ 基本上/ 可以/ 避免/ 给/ 服务/ 请求/ 分配/ 下线/ 几率/ 较大/ 的/ 服务/ ./ 系统/ 运行/ 到/ t/ =/ 280T/ 时/ (/ 图/ 5/ )/ ,/ 系统/ 通过/ CRD/ 值/ 对/ 不/ 稳定/ 的/ 服务/ 即/ QoSLevel/ =/ 1/ 的/ 服务/ 的/ 区分/ 成功率/ 达到/ 100/ %/ ,/ 当/ 服务/ 请求/ 与/ 注册/ 服务/ 匹配/ 时/ ,/ Page8/ 就/ 可以/ 规避/ 下线/ 几率/ 较/ 高/ 的/ 服务/ ./ 但是/ 对/ 普通/ 服务/ 和/ 优质服务/ 的/ 区分/ 还/ 不是/ 特别/ 的/ 明显/ ./ 图/ 5t/ =/ 280T/ 时/ ,/ QoSLevel/ 与/ CRD/ 对照/ 图/ 随着/ 时间/ 的/ 推移/ ,/ CRD/ 值较/ 高/ 的/ 优质服务/ 和/ 普通/ 服务/ 也/ 开始/ 逐渐/ 分化/ 为/ 两个/ 区间/ ./ 如图/ 6/ 所示/ ,/ 优质服务/ 的/ CRD/ 值比/ 普通/ 服务/ 的/ CRD/ 值/ 增加/ 趋势/ 更为/ 明显/ ./ 图/ 6t/ =/ 680T/ 时/ ,/ QoSLevel/ 与/ CRD/ 对照/ 图/ 在/ 图/ 7/ 中/ 可以/ 看到/ 当/ t/ =/ 1880T/ 时/ ,/ 系统/ 中/ 服务/ QoSLevel/ 的/ 不同/ 可以/ 在/ 服务提供者/ CRD/ 值上/ 得到/ 非常明显/ 的/ 体现/ ,/ 服务/ QoSLevel/ 的/ 3/ 个/ 不同/ 等级/ 直接/ 被/ 反映/ 到/ 了/ CRD/ 值/ 的/ 3/ 个/ 不同/ 区间/ ,/ 系统对/ 各种/ 不同/ QoSLevel/ 的/ 服务/ 区分/ 成功率/ 达到/ 100/ %/ ./ 此时/ 以/ CRD/ 驱动/ 的/ 服务/ 调度/ 程序/ 具有/ 可/ 选/ 服务/ 的/ 情况/ 下/ ,/ 将/ 任务/ 由于/ 服务/ 组件/ 下线/ 而/ 被/ 中断/ 的/ 几率/ 由/ 原来/ 的/ 8/ 降低/ 到/ 了/ 3/ ./ 图/ 7t/ =/ 1880T/ 时/ ,/ QoSLevel/ 与/ CRD/ 对照/ 图/ 结果表明/ :/ 随着/ 系统/ 运行/ 时间/ 的/ 增加/ ,/ 信用/ 记录/ 调整/ 算法/ 对/ 不同/ QoSLevel/ 的/ 服务/ 的/ 区分/ 成功率/ 不断/ 提高/ ./ 当/ 系统/ 运行/ 至/ t/ =/ 1880T/ 时/ ,/ 信用/ 模型/ 对/ 服务/ 的/ 区分/ 成功率/ 达到/ 100/ %/ ,/ 不仅/ 可以/ 区分/ 出/ 劣质/ 服务/ ,/ 而且/ 对于/ QoSLevel/ 等级/ 最高/ 的/ 优质服务/ 的/ 区分/ 成功率/ 也/ 达到/ 了/ 100/ %/ ,/ 尽管/ 优质服务/ 与/ 普通/ 服务/ 的/ 下线/ 几率/ 相差/ 很小/ ./ 仿真/ 实验/ 2/ ./ 本/ 实验/ 重点/ 验证/ 基于/ 信用/ 的/ 服务/ 调度/ 算法/ 能否/ 有效/ 降低/ 任务/ 由于/ 服务/ 动态性/ 而/ 引起/ 的/ 再/ 调度/ 次数/ ,/ 该/ 仿真/ 实验/ 分为/ 两个/ 仿真/ 过程/ ./ 仿真/ 过程/ 1/ ./ 固定/ 服务/ 数量/ 、/ 固定/ 任务/ 数量/ 、/ 不同/ 规模/ 的/ 任务/ ./ 在/ 模拟/ 的/ 服务/ 计算/ 系统/ 中/ 随机/ 生成/ 了/ 300/ 个/ 独立/ 的/ 服务/ ,/ 随机/ 赋予/ 不同/ 的/ 性能/ 和/ 功能/ 参数/ ,/ 由/ 系统/ 中/ 的/ 信用/ 模型/ 根据/ 它们/ 的/ 信用/ 状况/ ,/ 对/ 服务/ 的/ QoSLevel/ 进行/ 区分/ ,/ 并/ 将/ 它们/ 按照/ CRD/ 值/ 降序/ 排列/ ./ 通过/ 仿真/ 系统/ 在/ 一定/ 时期/ 内/ 随机/ 生成/ 100/ 个/ 不同/ 规模/ (/ 任务/ 完成/ 所/ 需/ 时间/ :/ 50T/ 、/ 100T/ 、/ 200T/ 、/ 500T/ 、/ 1000T/ ,/ T/ 为/ 仿真/ 实验/ 中/ 服务/ 行为/ 周期/ )/ 的/ 一系列/ 服务/ 请求/ ,/ 并/ 利用/ 基于/ 信用/ 的/ 服务/ 调度/ 算法/ 和/ 传统/ 的/ 非/ 信用/ 记录/ 驱动/ 的/ 调度/ 算法/ 将/ 其/ 调度/ 到/ 相应/ 的/ 服务/ 上/ 执行/ ,/ 最后/ 记录/ 系统/ 中/ 所有/ 提交/ 的/ 服务/ 请求/ 完成/ 时/ 被/ 调度/ 的/ 次数/ ./ 通过/ 对比/ 两种/ 服务/ 调度/ 算法/ 对/ 同样/ 的/ 任务/ 队列/ 中/ 每个/ 任务/ 的/ 调度/ 次数/ 来/ 分析/ 算法/ 的/ 效果/ ./ 由图/ 8/ ~/ 13/ 所示/ 的/ 6/ 个/ 图/ 中/ 可以/ 看出/ ,/ 本文/ 的/ CRD/ 驱动/ 的/ 服务/ 调度/ 算法/ 与/ 常规/ 的/ 非/ 信用/ 驱动/ 的/ 服务/ 调度/ 算法/ 相比/ ,/ 显著/ 降低/ 了/ 任务/ 的/ 调度/ 次数/ ./ 尤其/ 是/ 当/ 任务/ 规模/ 不是/ 特别/ 大时/ ,/ 从/ 1.40/ ~/ 1.82/ 降低/ 至/ 1.02/ ~/ 1.10/ ./ 但是/ 随着/ 每个/ 任务/ 完成/ 所/ 需/ 的/ 时间/ 即/ 任务/ 规模/ 的/ 不断/ 增加/ ,/ CRD/ 驱动/ 的/ 服务/ 调度/ 算/ Page9/ 图/ 12/ 任务/ 时间/ 为/ 1000T/ 时/ ,/ 调度/ 次数/ 对比/ 法/ 和/ 传统/ 服务/ 调度/ 算法/ 对于/ 任务/ 的/ 调度/ 次数/ 都/ 有所增加/ ./ 当/ 设定/ 的/ 任务/ 规模/ 特别/ 大时/ ,/ 常规/ 的/ 服务/ 调度/ 算法/ 的/ 调度/ 次数/ 变化/ 不/ 大/ ,/ 从/ 1.80/ (/ DT/ =/ 500T/ )/ 增加/ 到/ 1.82/ (/ DT/ =/ 1000T/ )/ ,/ CRD/ 驱动/ 的/ 服务/ 调度/ 算法/ 则/ 有/ 一个/ 明显/ 的/ 增加/ ,/ 从/ 1.10/ (/ DT/ =/ 500T/ )/ 增加/ 到/ 1.49/ (/ DT/ =/ 1000T/ )/ ./ 由图/ 12/ 我们/ 也/ 看出/ 调度/ 次数/ 的/ 增加/ 主要/ 来自/ 于/ 后面/ 的/ 任务调度/ 次数/ ./ 原因/ 在于/ 当/ 任务/ 规模/ 很大/ 时/ ,/ 每个/ 任务/ 完成/ 所/ 需/ 的/ 时间/ 很长/ ,/ 导致/ 已经/ 分配/ 出去/ 的/ 优质服务/ 持续/ 繁忙/ 无法/ 释放/ ,/ 所以/ 后面/ 的/ 任务/ 便/ 只能/ 被/ 调度/ 到/ QoSLevel/ 较/ 低/ 的/ 服务/ 上/ 运行/ ,/ 因此/ 导致/ 调度/ 次数/ 迅速/ 增加/ ./ 这/ 表明/ CRD/ 驱动/ 的/ 服务/ 调度/ 算法/ ,/ 只有/ 存在/ 一定/ 数量/ 可/ 选/ 服务/ 时/ 才能/ 达到/ 较/ 好/ 的/ 效果/ ./ 同时/ ,/ 也/ 表明/ 对于/ QoSLevel/ 较/ 低/ 的/ 服务/ ,/ 不会/ 由于/ 服务质量/ 得不到/ 保证/ 而/ 被/ 系统/ 拒绝/ 调度/ ,/ 从而/ 打击/ 服务提供者/ 提供/ 服务/ 的/ 积极性/ ,/ 只是/ 被/ 赋予/ 较/ 低/ 的/ 优先级/ ./ 仿真/ 过程/ 2/ ./ 固定/ 服务/ 数量/ 、/ 不同/ 数量/ 的/ 任务/ 、/ 不同/ 规模/ 的/ 任务/ ./ 在/ 模拟/ 的/ 服务/ 计算/ 系统/ 中/ 随机/ 生成/ 了/ 300/ 个/ 独立/ 的/ 服务/ ,/ 随机/ 赋予/ 不同/ 的/ 性能/ 和/ 功能/ 参数/ ,/ 由/ 系统/ 中/ 的/ 信用/ 模型/ 根据/ 它们/ 的/ 信用/ 状况/ ,/ 对/ 服务/ 的/ QoSLevel/ 进行/ 区分/ ,/ 并/ 将/ 它们/ 按照/ CRD/ 值/ 降序/ 排列/ ./ 通过/ 仿真/ 系统/ 在/ 一定/ 时期/ 内/ 生成/ 随机/ 规模/ 、/ 不同/ 数量/ (/ 任务/ 数量/ :/ 50/ 、/ 100/ 、/ 200/ 、/ 300/ 、/ 500/ )/ 的/ 一系列/ 服务/ 请求/ ,/ 并/ 利用/ 基于/ 信用/ 的/ 服务/ 调度/ 算法/ 和/ 传统/ 的/ 非/ 信用/ 记录/ 驱动/ 的/ 调度/ 算法/ 将/ 其/ 调度/ 到/ 相应/ 的/ 服务/ 上/ 执行/ ,/ 最后/ 记录/ 系统/ 中/ 所有/ 提交/ 的/ 服务/ 请求/ 完成/ 时/ 被/ 调度/ 的/ 次数/ ./ 通过/ 对比/ 两种/ 服务/ 调度/ 算法/ 对/ 同样/ 的/ 任务/ 队列/ 中/ 每个/ 任务/ 的/ 调度/ 次数/ 来/ 分析/ 算法/ 的/ 效果/ ./ Page10/ 通过/ 系统/ 随机/ 生成/ 固定/ 数量/ 的/ 随机/ 规模/ 任务/ 的/ 任务/ 队列/ ,/ 来/ 考察/ CRD/ 驱动/ 的/ 服务/ 调度/ 在/ 最/ 接近/ 现实/ 应用/ 的/ 情况/ 下/ ,/ 对/ 降低/ 系统/ 中/ 任务调度/ 次数/ 的/ 效率/ ./ 实验/ 结果显示/ ,/ 在/ 调度/ 不同/ 长度/ 任务/ 队列/ 时/ ,/ CRD/ 驱动/ 的/ 服务/ 调度/ 算法/ 对/ 任务/ 的/ 平均/ 调度/ 次数/ 均/ 保持/ 在/ 1.1/ ~/ 1.2/ 之间/ ,/ 而且/ 明显/ 地/ 低于/ 常规/ 的/ 服务/ 调度/ 算法/ ./ 在/ 设定/ 的/ 5/ 种/ 长度/ 的/ 队列/ 调度/ 过程/ 中/ ,/ 常规/ 调度/ 算法/ 的/ 平均/ 调度/ 次数/ 为/ 1.32/ (/ n/ =/ 50/ )/ 、/ 1.49/ (/ n/ =/ 100/ )/ 、/ 1.545/ (/ n/ =/ 200/ )/ 、/ 1.81/ (/ n/ =/ 300/ )/ 、/ 1.836/ (/ n/ =/ 500/ )/ ,/ 有/ 比较/ 明显/ 的/ 增加/ ,/ 最后/ 基本/ 稳定/ 在/ 1.85/ 附近/ ./ CRD/ 驱动/ 的/ 服务/ 调度/ 算法/ 的/ 平均/ 调度/ 次数/ 为/ 1.16/ (/ n/ =/ 50/ )/ 、/ 1.21/ (/ n/ =/ 100/ )/ 、/ 1.2/ (/ n/ =/ 200/ )/ 、/ 1.177/ (/ n/ =/ 300/ )/ 、/ 1.108/ (/ n/ =/ 500/ )/ ,/ 基本/ 维持/ 在/ 1.1/ ~/ 1.2/ 之间/ ./ 同时/ 我们/ 通过/ 图/ 19/ 也/ 发现/ ,/ 随着/ 提交/ 的/ 任务/ 队列/ 长度/ 的/ 增加/ ,/ CRD/ 驱动/ 服务/ 调度/ 算法/ 在/ 平均/ 服务/ 调度/ 次数/ 上/ 有/ 一个/ 很/ 缓慢/ 的/ 下降/ 趋势/ ./ 其/ 原因/ 主要/ 在于/ ,/ 调度/ 程序/ 的/ 服务/ 选择/ 策略/ 主要/ 依赖于/ 信用/ 模型/ 对/ 服务/ 的/ 区分/ 成功率/ ,/ 而/ 随着/ 任务/ 队列/ 长度/ 的/ 增加/ ,/ 系统/ 的/ 运行/ 时间/ 也/ 被/ 延长/ ,/ 同时/ 信用/ 模型/ 的/ 运行/ 时间/ 也/ 同步/ 增加/ ,/ 使得/ 信用/ 模型/ 对/ 服务/ 的/ 区分/ 成功/ Page11/ 率/ 越来越/ 高/ ,/ 因此/ CRD/ 驱动/ 的/ 服务/ 调度/ 算法/ 为/ 用户/ 选择/ 优质服务/ 的/ 成功率/ 也/ 相应/ 地/ 增加/ ./ 通过/ 上/ 面对/ 比较/ 接近/ 现实/ 应用环境/ 的/ 任务调度/ 过程/ 仿真/ ,/ 结果显示/ CRD/ 驱动/ 的/ 服务/ 调度/ 算法/ 在/ 系统/ 具有/ 可/ 选/ 服务/ 的/ 情况/ 下/ ,/ 可以/ 显著/ 降低/ 任务/ 的/ 平均/ 调度/ 次数/ ,/ 有效/ 降低/ 了/ 由于/ 服务/ 动态性/ 引发/ 的/ 任务/ 中断/ 所/ 发生/ 的/ 概率/ ,/ 提升/ 了/ 系统/ 的/ QoS/ ./ 本文/ 上述/ 的/ 仿真/ 实验/ 中/ 对系统/ 中/ 服务/ 组件/ 的/ 动态性/ 进行/ 了/ 较为/ 接近/ 实际/ 情况/ 的/ 模拟/ ,/ 服务/ 的/ QoSlevel/ 是/ 由/ 系统/ 随机/ 生成/ 但/ 在/ 整个/ 仿真/ 过程/ 中均/ 不再/ 变化/ ,/ 而/ 当/ 服务/ 的/ QoS/ 状况/ 发生变化/ 后/ ,/ 根据/ 服务/ 原始/ 信用/ 记录/ 的/ 累积/ 情况/ ,/ 系统/ 可能/ 需要/ 运行/ 相当/ 一段时间/ 以/ 对/ 服务/ 的/ 原始/ 信用/ 记录/ 进行/ 充抵/ 以后/ ,/ 其/ QoS/ 状况/ 才能/ 在/ 信用/ 记录/ 中/ 得以/ 体现/ ./ 为/ 进一步提高/ 算法/ 的/ 抗/ 扰动/ 能力/ ,/ 在/ 实现/ 时/ 可以/ 采用/ 以下/ 策略/ :/ (/ 1/ )/ 每当/ 服务/ 组件/ 撤离/ 系统/ 时/ 便/ 对/ 其/ 信用/ 记录/ 清零/ ,/ 当其/ 再次/ 加入/ 时/ 开始/ 重新/ 累积/ ;/ (/ 2/ )/ 每隔/ 一段时间/ 便/ 对系统/ 中/ 所有/ 服务/ 组件/ 的/ 信用/ 记录/ 进行/ 清零/ ;/ (/ 3/ )/ 对/ 信用/ 记录/ 进行/ 扩展/ :/ CRD/ →/ (/ CRD/ ,/ wquery/ )/ ,/ 其中/ wquery/ 为/ 一个/ 长度/ 为/ n/ (/ n/ 的/ 大小/ 可以/ 根据/ 算法/ 情况/ 设定/ )/ 的/ 循环/ 队列/ ,/ 用以/ 记录/ 该/ 服务/ 组件/ 最近/ n/ 次/ 触发/ 的/ 信用/ 事件/ 对应/ 的/ 权值/ ,/ 系统/ 可以/ 根据/ 该/ 队列/ 值/ 的/ 变化趋势/ 对/ 其/ CRD/ 值/ 进行/ 调整/ ,/ 以/ 按照/ 一定/ 的/ 倍数/ E/ 放大/ 服务/ 组件/ 某/ 一个/ 时期/ 内/ 的/ 动态性/ ,/ 即/ 按照/ 原有/ 的/ 权值/ 的/ 一定/ 倍数/ 对/ 服务/ 的/ 信用/ 记录/ 进行/ 增益/ 或/ 惩罚/ ,/ 使/ 其/ 在/ 尽量/ 短/ 的/ 时间/ 内/ 能够/ 反映/ 服务/ 变化/ 后/ 的/ QoS/ 状况/ ;/ (/ 4/ )/ 当/ 服务/ 的/ QoS/ 有/ 较大/ 的/ 变化/ 时/ (/ 例如/ 配置/ 了/ 高性能/ 的/ 硬件/ 等/ )/ ,/ 服务提供者/ 以向/ 系统/ 提出申请/ 注销/ 以前/ 的/ 信用/ 记录/ 值/ ,/ 初始化/ 以后/ 重新/ 开始/ 积累/ 信用/ 记录/ ./ 对于/ 上述/ 4/ 种/ 策略/ :/ 第/ 1/ 种/ 和/ 第/ 2/ 种/ 策略/ 实现/ 简单/ ,/ 适用/ 于/ 服务/ 组件/ QoS/ 变化/ 周期/ 较长/ 的/ 环境/ ,/ 对/ 动态性/ 过/ 强/ 系统/ 灵敏度/ 仍/ 不够/ 高/ ;/ 第/ 3/ 种/ 策略/ 需要/ 对/ 算法/ 中/ 的/ 信用/ 记录/ 表示/ 方式/ 进行/ 扩展/ ,/ 通过/ 加入/ 权值/ 队列/ 记录/ 服务/ 组件/ 最近/ 一段/ 时期/ 内/ 的/ QoS/ 变化趋势/ ,/ 实现/ 与/ 第/ 1/ 、/ 2/ 种/ 策略/ 相比/ 有/ 一定/ 复杂度/ ,/ 但是/ 通过/ n/ 值/ 的/ 大小/ 和/ 动态性/ 放大/ 倍数/ E/ 的/ 调整/ ,/ 算法/ 可以/ 获得/ 很/ 高/ 的/ 灵敏度/ 和/ 抗/ 扰动/ 能力/ ;/ 最后/ 一种/ 策略/ 实现/ 简单/ ,/ 但是/ 需要/ 用户/ 交互/ 提出/ 初始化/ 申请/ ./ 6/ 总结/ 考虑/ 到/ 现有/ 的/ QoS/ 保证/ 机制/ 没有/ 充分考虑/ 服务/ 组件/ 动态性/ 对/ 服务质量/ 影响/ 的/ 问题/ ,/ 本文/ 提出/ 了/ 一种/ 基于/ 信用/ 的/ 服务/ 预留/ 和/ 服务/ 备份/ 机制/ ,/ 定义/ 了/ SOC/ 系统/ 中/ 的/ 信用/ 模型/ 、/ 信用/ 记录/ 以及/ 对/ 信用/ 记录/ 进行/ 调整/ 的/ 信用/ 函数/ 、/ 信用/ 事件/ 集/ 和/ 对应/ 权值/ 集合/ ,/ 量化/ 服务/ 组件/ 行为/ 对系统/ 服务质量/ 的/ 影响/ ,/ 使/ 信用/ 记录/ 值/ 反映/ 服务/ 组件/ 的/ 稳定性/ ./ 设计/ 了/ 信用/ 记录/ 驱动/ 的/ 服务/ 调度/ 、/ 服务/ 预留/ 和/ 服务/ 备份/ 算法/ ,/ 并/ 进行/ 了/ 仿真/ 实验/ ./ 结果显示/ 该/ QoS/ 机制/ 可以/ 明显/ 地/ 提高/ SOC/ 应用/ 系统/ 的/ 服务质量/ ./ 今后/ 的/ 工作/ 将/ 在/ 此/ 研究/ 的/ 基础/ 上将/ 用户/ 行为/ 对/ 服务质量/ 的/ 影响/ 纳入/ 信用/ 模型/ ,/ 建立/ 高效/ 的/ 任务/ 迁移/ 算法/ ,/ 进一步/ 完善/ 该/ QoS/ 保证/ 机制/ ,/ 并/ 将/ 其/ 应用/ 到/ SOC/ 原型/ 系统/ 的/ 设计/ 工作/ 中/ ./ 

