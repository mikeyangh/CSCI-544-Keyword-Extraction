Page1/ 一种/ 新型/ 的/ 虫/ 孔/ 气泡/ 流控/ 实现/ 策略/ 肖灿文张/ 民选/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 摘要/ 气泡/ 流控/ 是/ 一种/ 实现/ 环内/ 无/ 死锁/ 路由/ 的/ 高效/ 方法/ ./ 该/ 方法/ 在/ 超级计算机/ Bluegene/ // L/ 中/ 得到/ 了/ 成功/ 应用/ ./ 然而/ 气泡/ 流控/ 只/ 适用/ 于/ 虚跨步/ (/ VCT/ )/ 切换/ 网络/ ./ 目前/ ,/ 研究/ 人员/ 提出/ 了/ 一些/ 方法/ 把/ 气泡/ 流控/ 策略/ 应用/ 到/ 虫/ 孔/ 切换/ 的/ 片/ 上/ 网络/ 中/ ./ 然而/ 这些/ 虫/ 孔/ 气泡/ 流控/ 策略/ 需要/ 复杂/ 的/ 控制/ 信息/ ./ 文中/ 提出/ 了/ 一种/ 新型/ 的/ 设计/ 方法/ 实现/ 高效/ 、/ 简洁/ 的/ 虫/ 孔/ 气泡/ 流控/ ./ 首先/ 采用/ 支持/ 非/ 原子/ 缓冲/ 分配/ 的/ 多/ 请求/ 缓冲/ 结构/ (/ MRIBO/ )/ 代替/ 传统/ 的/ FIFO/ 缓冲/ 结构/ 存储/ 报文/ ./ MRIBO/ 支持/ Flit/ 在/ 不同/ 报文/ 间/ 乱序/ 存储/ ,/ 缓冲区/ 中/ 的/ 每/ 一个/ Flit/ 能够/ 独立/ 路由/ ./ 在/ MRIBO/ 存储/ 方式/ 下/ ,/ 作者/ 设计/ 了/ 一种/ 类似/ VCT/ 网络/ 的/ 气泡/ 流控/ ,/ 适用/ 于虫/ 孔/ 网络/ 的/ 新型/ 气泡/ 流控/ 策略/ ./ 证明/ 了/ 在/ MRIBO/ 方式/ 下/ ,/ 新型/ 流控/ 策略/ 可以/ 保证/ 单向/ 环内/ 的/ Flit/ 总是/ 可以/ 流动/ ,/ 不会/ 出现/ 死锁/ ,/ 在/ 单向/ 环内/ 实现/ 了/ 无/ 死锁/ 路由/ ./ 基于/ 斯坦福大学/ 开发/ 的/ BookSim/ 模拟/ 平台/ ,/ 作者/ 测试/ 了/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 的/ 性能/ ./ 通过/ 修改/ 源代码/ ,/ 在/ BookSim/ 中/ 实现/ 了/ 基于/ 新型/ 虫/ 孔/ 气泡/ 的/ 维序/ 路由/ 算法/ (/ WBFC/ )/ 和/ 完全/ 适应性/ 路由/ 算法/ (/ Adapt/ -/ BF/ )/ ./ 作者/ 分别/ 比较/ 了/ 这/ 两种/ 算法/ 和/ 传统/ 的/ 基于/ 子午线/ (/ Dateline/ )/ 的/ 维序/ 路由/ 算法/ (/ DOR/ )/ 以及/ 完全/ 适应性/ 路由/ 算法/ (/ Adapt/ -/ DL/ )/ 在/ 不同/ 维度/ 的/ Torus/ 网络/ 中/ 的/ 报文/ 平均/ 延迟/ ./ 模拟/ 结果显示/ :/ 这种/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 的/ 性能/ 大大/ 优于/ 传统/ 的/ 虫/ 孔/ 切换/ ./ 其中/ ,/ 8/ -/ ary2/ -/ cubeTorus/ 网络/ 性能/ 测试/ 中/ ,/ 在/ uniform/ 通信/ 模式/ 下/ ,/ Adapt/ -/ BF/ 算法/ 的/ 报文/ 延迟/ 相对/ Adapt/ -/ DL/ 算法/ 有近/ 18/ %/ 的/ 减少/ ./ 文章/ 通过/ 新型/ 的/ 缓冲/ 组织/ 结构/ 打破/ 了/ 虫/ 孔/ 交换/ 中/ 报文/ 传输/ 的/ 原子/ 性/ ,/ 保证/ 了/ Flit/ 独立/ 路由/ ,/ 所以/ 就/ 可以/ 在/ 虫/ 孔/ 网络/ 中像/ VCT/ 网络/ 中/ 处理/ 报文/ 一样/ 处理/ Flit/ ./ 在/ 这种/ 情况/ 下/ ,/ VCT/ 网络/ 中/ 基于/ 局部/ 信息/ 的/ Bubble/ 流控/ 技术/ 可以/ 几乎/ 不/ 加/ 修改/ 地/ 应用/ 到/ 虫/ 孔/ 网络/ 中/ ./ 因此/ ,/ 这种/ 方法/ 简化/ 了/ 虫/ 孔/ 气泡/ 流控/ 的/ 实现/ ./ 关键词/ 虫/ 孔/ 气泡/ 流控/ ;/ 多/ 请求/ 缓冲/ 结构/ ;/ 非/ 原子/ 缓冲/ 分配/ ;/ 虫/ 孔/ 切换/ ;/ 死锁/ 避免/ 1/ 引言/ 互连/ 网络/ 是/ 当代/ 并行/ 计算机系统/ 的/ 关键/ 组成部分/ ./ 从/ 高端/ 的/ 超级计算机/ 系统/ 和/ 大规模/ 的/ 数据中心/ 到片/ 上/ 多处理器/ 系统/ ,/ 互连/ 网络连接/ 各个/ 处理器/ 和/ 存储/ 部件/ ,/ 决定/ 了/ 远程/ 存储/ 访问/ 的/ 带宽/ 和/ 延迟/ ,/ 极大/ 地/ 影响/ 整个/ 系统/ 的/ 性能/ 和/ 费用/ ./ 随着/ 处理器/ 和/ 存储器/ 的/ 性能/ 不断/ 提高/ ,/ 为了/ 实现/ 高/ 能效/ 和/ 高性价比/ 的/ 计算机系统/ ,/ 互连/ 网络/ 的/ 重要性/ 越来越/ 凸显/ ./ Torus/ 网络/ 对于/ 片间/ 互连/ 和/ 片/ 上/ 互连/ 都/ 是/ 一种/ 常用/ 的/ 互连/ 网络拓扑/ 结构/ ./ Torus/ 网络/ 的/ 环线/ (/ Wraparoundlink/ )/ 提高/ 了/ 网络带宽/ ,/ 减少/ 了/ 网络/ 的/ 平均/ 跳步/ 数/ ./ 同时/ ,/ Torus/ 网络/ 规整/ 的/ 结构/ 有助于/ 均衡/ 网络/ 的/ 利用率/ ./ 另一方面/ ,/ Torus/ 网络/ 的/ 环线/ 也/ 增加/ 了/ 路由/ 死锁/ 的/ 可能性/ ./ 如何/ 解决/ 路由/ 死锁/ 是/ 互连/ 网络/ 设计/ 的/ 一个/ 关键问题/ ./ 处理/ 不好/ 将会/ 给/ 互连/ 网络/ 乃至/ 整个/ 计算机系统/ 性能/ 带来/ 灾难性/ 后果/ ./ 处理/ 死锁/ 的/ 典型/ 技术/ 包括/ 死锁/ 阻止/ 、/ 死锁/ 恢复/ 和/ 死锁/ 避免/ ./ 死锁/ 阻止/ 策略/ 要求/ 在/ 报文/ 注入/ 前/ ,/ 先/ 预留/ 需要/ 的/ 资源/ ,/ 这/ 将/ 导致/ 资源/ 使用/ 很/ 低效/ ./ 死锁/ 恢复/ 策略/ 允许/ 临时/ 出现/ 死锁/ ,/ 一旦/ 检测/ 到/ 死锁/ 就/ 通过/ 重新分配/ 资源/ 来/ 解除/ 死锁/ ./ 这种/ 策略/ 需要/ 在/ 网络/ 中/ 建立/ 超时/ 机制/ 并/ 依赖于/ 精确/ 的/ 死锁/ 检测/ 机制/ 检测/ 网络/ 是否/ 存在/ 死锁/ ,/ 然而/ 由于/ 过于/ 复杂/ 在/ 实际/ 系统/ 中/ 并/ 不/ 实用/ ./ 在/ 死锁/ 避免/ 策略/ 中/ ,/ 网络/ 中/ 的/ 报文/ 按照/ 一定/ 策略/ 动态/ 地/ 请求/ 资源/ ,/ 避免/ 死锁/ ./ 死锁/ 避免/ 策略/ 既/ 解决/ 了/ 死锁/ 阻止/ 策略/ 资源/ 利用率/ 低/ 的/ 问题/ ,/ 也/ 避免/ 了/ 死锁/ 恢复/ 策略/ 的/ 复杂/ ,/ 因此/ 更/ 实用/ ./ 当前/ 实现/ 适应性/ 路由/ 算法/ 的/ 互连/ 网络系统/ 解决/ 死锁/ 方法/ 主要/ 采用/ Duato/ 在/ 20/ 世纪/ 90/ 年代/ 建立/ 的/ 死锁/ 理论/ [/ 1/ -/ 3/ ]/ ./ Duato/ 方法/ 采用/ 严谨/ 的/ 形式化/ 方法/ 针对/ 不同/ 切换/ 策略/ ,/ 证明/ 了/ 路由/ 无/ 死锁/ 的/ 充分/ 和/ 必要条件/ ,/ 为/ Duato/ 方法/ 提供/ 了/ 强大/ 的/ 理论/ 基础/ ,/ 这是/ Duato/ 方法/ 流行/ 的/ 一个/ 重要/ 原因/ ./ 采用/ Duato/ 方法/ 实现/ 完全/ 适应性/ 路由/ 策略/ 的/ 互连/ 网络/ 中/ ,/ 通常/ 需要/ 在/ 一个/ 虚/ 通道/ 上/ 采用/ 无环/ 的/ 路由/ 算法/ 确保/ 实现/ 无/ 死锁/ 的/ 路由/ ,/ 网络/ 中/ 这个/ 虚/ 通道/ 作为/ 在/ 其他/ 虚/ 通道/ 上/ 采用/ 完全/ 自/ 适应/ 路由/ 的/ 报文/ 的/ 逃逸/ 通道/ ./ Duato/ 方法/ 提供/ 网络/ 设计者/ 通过/ 路由/ 函数/ 实现/ 网络/ 路由/ 死锁/ 避免/ ,/ 许多/ 研究/ 人员/ 探索/ 采用/ 其他/ 方法/ 来/ 解决/ 网络/ 路由/ 死锁/ 问题/ ./ 一个/ 有/ 意义/ 的/ 思想/ 就/ 是从/ 流控/ 的/ 角度/ 出发/ ./ 网络/ 流控/ 策略/ 确定/ 由/ 路由/ 函数/ 决定/ 的/ 候选/ 通道/ 是否/ 可用/ ./ 其中/ ,/ 气泡/ 流控/ (/ Bubbleflowcontrol/ )/ [/ 4/ -/ 6/ ]/ 就是/ 一个/ 杰出/ 的/ 工作/ 成果/ ./ 气泡/ 流控/ 的/ 思想/ 可以/ 简单/ 描述/ 为/ :/ 在/ 网络/ 一个/ 维度/ 的/ 环中/ ,/ 只要/ 存在/ 一个/ 可用/ 的/ 缓冲/ 空间/ (/ 气泡/ )/ ,/ 那么/ 这个/ 环内/ 的/ 报文/ 就是/ 可以/ 移动/ 的/ ,/ 路由/ 不会/ 死锁/ ./ IBM/ 公司/ 著名/ 的/ BlueGene/ [/ 7/ ]/ 系列/ 巨型机/ 采用/ Duato/ 方法/ 实现/ 了/ 完全/ 适应性/ 路由/ 策略/ ./ 该/ 机器/ 在/ 路由/ 算法/ 的/ Page3/ 逃逸/ 通道/ 中/ 采用/ 气泡/ 流控/ 策略/ ,/ 使得/ 适应性/ 路由/ 算法/ 对/ 虚/ 信道/ 的/ 需要/ 由/ 传统/ 基于/ Dateline/ 方法/ [/ 8/ ]/ 需要/ 最少/ 3/ 个/ 减少/ 为/ 2/ 个/ ./ 气泡/ 流控/ 策略/ 是/ 一种/ 解决/ 互连/ 网络/ 中/ ,/ 环内/ 死锁/ 的/ 高效/ 方法/ ./ 气泡/ 流控/ 策略/ 在/ BlueGene/ 系列/ 巨型机/ 中/ 的/ 成功/ 应用/ ,/ 激发/ 了/ 人们/ 对该/ 流控/ 策略/ 的/ 扩展/ 研究/ ./ 其中/ ,/ 文献/ [/ 9/ -/ 10/ ]/ 提出/ 了/ 虫/ 孔/ 气泡/ 流控/ 策略/ ,/ 发展/ 了/ 传统/ 的/ 气泡/ 流控/ 理论/ ,/ 把/ 适用/ 于/ 报文/ 切换/ 的/ 气泡/ 流控/ 扩展/ 到/ 了/ 虫/ 孔/ 切换/ 网络/ ,/ 促进/ 了/ NOC/ 的/ 研究/ ./ 文献/ [/ 10/ ]/ 提出/ 实现/ 虫/ 孔/ 气泡/ 流控/ 策略/ 的/ 充分条件/ :/ 当/ 一个/ 报文/ 注入/ 单向/ 环后/ ,/ 单向/ 环内/ 至少/ 还有/ 一个/ 空闲/ 的/ 虫/ 孔/ 气泡/ (/ WB/ ,/ 最少/ 为/ 1/ 个/ 微片/ (/ Flit/ )/ )/ ./ 这个/ 充分条件/ 可以/ 理解/ 为/ :/ 报文/ 注入/ 单向/ 环后/ ,/ 只要/ 有/ 一个/ 空闲/ 空间/ (/ 虫/ 孔/ 气泡/ )/ ,/ 环内/ 报文/ 就/ 可以/ 流动/ ./ 然而/ ,/ 当/ 报文/ 注入/ 到/ 环内/ 需要/ 很/ 复杂/ 的/ 控制/ 过程/ ./ 如图/ 1/ 所示/ :/ 为了/ 保证/ 资源/ 的/ 原子/ 分配/ [/ 11/ ]/ (/ 当/ 一个/ 报文/ 的/ 头/ 进入/ 一个/ 缓冲/ 队列/ 后/ ,/ 必须/ 等/ 这个/ 报文/ 的/ 尾/ Flit/ 离开/ 缓冲/ 队列/ 后/ ,/ 其他/ 报文/ 才能/ 进入/ 该/ 缓冲/ 队列/ )/ ,/ 报文/ P1/ 和/ P2/ 不能/ 同时/ 注入/ 单向/ 环/ ,/ 并图/ 1/ 报文/ 等待/ 注入/ 单向/ 环/ 本文/ 第/ 2/ 节/ 介绍/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ ;/ 第/ 3/ 节/ 理论/ 分析/ 新型/ 流控/ 策略/ 在/ 环内/ 的/ 无/ 死锁/ 特性/ ;/ 第/ 4/ 节/ 评估/ 新型/ 流控/ 策略/ 的/ 性能/ ;/ 最后/ ,/ 在/ 第/ 5/ 节对/ 全文/ 进行/ 总结/ ./ 2/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 本节/ 中/ ,/ 我们/ 基于/ 多/ 请求/ 输入/ 缓冲/ 结构/ ,/ 设计/ 实现/ 新型/ 的/ 虫/ 孔/ 气泡/ 流控/ 策略/ ./ 2.1/ 多/ 请求/ 输入/ 缓冲/ 结构/ 在/ 文献/ [/ 12/ ]/ 中/ ,/ 提出/ 了/ 一种/ 称为/ 多/ 请求/ 输入/ 缓冲区/ 组织/ (/ MRIBO/ )/ 的/ 新型/ 缓冲/ 结构/ ./ 该/ 缓冲区/ 组织/ 如图/ 2/ 所示/ ./ 如图/ 2/ 中/ ,/ 当/ 一个/ 报文/ 进入/ 缓冲区/ 时/ ,/ 单独/ 采用/ 且/ 要/ 获取/ 整个/ 单向/ 环内/ 空闲/ 缓冲/ 大小/ 的/ 全局/ 信息/ ,/ 当环内/ 空闲/ 的/ Flit/ 数/ 大于/ 报文/ 的/ Flit/ 数时/ ,/ 报文/ 才能/ 注入/ ./ 即使/ 在/ 报文/ 的/ 尾/ Flit/ 进入/ 缓冲区/ 后/ ,/ 允许/ 其他/ 报文/ 进入/ 缓冲区/ 的/ 情况/ 下/ (/ 文献/ [/ 10/ ]/ 中/ 的/ 非/ 原子/ 缓冲区/ 分配/ 方法/ )/ ,/ 也/ 要/ 遵循/ 相同/ 的/ 规则/ ./ 这个/ 复杂/ 的/ 控制/ 过程/ 大大/ 限制/ 了/ 虫/ 孔/ 气泡/ 流控/ 的/ 应用/ ./ 这里/ 产生/ 一个/ 问题/ :/ 如果/ 我们/ 对/ 缓冲/ 资源/ 采用/ 新/ 的/ 组织/ 策略/ ,/ 实现/ 更/ 宽松/ 的/ 非/ 原子/ 分配/ 方法/ ,/ 是否/ 可以/ 简化/ 虫/ 孔/ 气泡/ 流控/ 的/ 实现/ ?/ 本文/ 沿着/ 这个/ 思路/ ,/ 基于/ 文献/ [/ 12/ ]/ 提出/ 的/ 允许/ 交叉/ 存储/ 的/ 多/ 请求/ 缓冲/ 结构/ ,/ 研究/ 一种/ 新型/ 虫/ 孔/ 气泡/ 流控/ 的/ 实现/ 策略/ ./ 文章/ 的/ 主要/ 贡献/ 如下/ :/ (/ 1/ )/ 基于/ 多/ 请求/ 缓冲/ 结构/ ,/ 设计/ 新型/ 的/ 虫/ 孔/ 气泡/ 流控/ ./ (/ 2/ )/ 理论/ 证明/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 能/ 保证/ 环内/ 无/ 死锁/ ./ (/ 3/ )/ 基于/ BookSim/ 模拟/ 工具/ ,/ 分析/ 比较/ 了/ 新型/ 虫/ 孔/ 气泡/ 流控/ 的/ 性能/ ./ 实验/ 表明/ :/ 新/ 的/ 流控/ 策略/ 结合/ 适应性/ 路由/ 算法/ 相对/ 于/ 传统/ 方法/ 的/ 性能/ 较/ 好/ ./ Page4/ 寄存器/ 保存/ 报文/ 路由/ 信息/ ,/ 这样/ 每个/ 报文/ 都/ 可以/ 提出/ 仲裁/ 申请/ ./ 具体/ 每次/ 允许/ 输入/ 端口/ 最多/ 的/ 仲裁/ 请求/ 数/ ,/ 可以/ 根据/ 实际/ 设计/ 的/ 需求/ 来/ 确定/ ./ 但/ 只要/ 保证/ 每个/ 报文/ 都/ 可能/ 提交/ 仲裁/ 请求/ ,/ 即使/ 每次/ 只/ 允许/ 端口/ 提出/ 一个/ 仲裁/ 请求/ (/ 报文/ 之间/ 采用/ 轮转/ 如/ :/ round/ -/ robbin/ 来/ 保证/ 每个/ 报文/ 机会均等/ )/ ,/ 在/ 输入/ 端口/ 也/ 不/ 存在/ 头/ 阻塞/ (/ HeadOfLine/ ,/ HOL/ )/ 现象/ ./ 缓冲区/ 采用/ 类似/ 链表/ 方式/ 存储/ 报文/ ./ 即/ 存储/ 报文/ Flit/ 的/ 存储单元/ 也/ 保存/ 报文/ 下/ 一个/ Flit/ 的/ 存储/ 地址/ (/ 当下/ 一个/ Flit/ 进入/ ,/ 并/ 分配/ 了/ 存储/ 地址/ )/ ,/ 直到/ 报文/ 尾/ Flit/ ./ 另外/ ,/ 为了/ 支持/ 不同/ 报文/ 的/ 微片/ 穿插/ 进入/ 缓冲区/ ,/ 每个/ 微片/ 带/ 一个/ 标示/ ,/ 以/ 确定/ 该/ 微片/ 所属/ 的/ 报文/ ./ 这种/ 新型/ 的/ 缓冲/ 结构/ 支持/ 报文/ 的/ 微片/ 交叉/ 存储/ ,/ 并/ 保证/ 缓冲区/ 中/ 的/ 每个/ 报文/ 都/ 有/ 仲裁/ 申请/ 的/ 机/ 这种/ 气泡/ 流控/ 策略/ 需要/ 获得/ 环内/ 空闲/ 空间/ 的/ 全局/ 信息/ ,/ 实际/ 系统/ 中/ ,/ 采用/ 图/ 4/ 所示/ 的/ 气泡/ 流控/ 策略/ ./ 图/ 3/ 基于/ 报文/ 切换/ 的/ 气泡/ 流控/ 如图/ 4/ 所示/ ,/ 当前/ 报文/ 只要/ 获得/ 邻居/ 结点/ 的/ 缓冲/ 信息/ ,/ 就/ 可以/ 决定/ 是否/ 可以/ 流入/ 下/ 一级/ ./ 而/ 邻居/ 结点/ 间/ 的/ 缓冲区/ 空闲/ 报文/ 空间信息/ ,/ 可以/ 通过/ 常用/ 的/ 信用/ 流控/ (/ Credit/ -/ basedFlowControl/ )/ 获得/ ./ 基于/ 局部/ 信息/ 的/ Bubble/ 流控/ 策略/ ,/ 相对/ 需要/ 全局/ 信息/ 的/ 气泡/ 流控/ ,/ 控制/ 简单/ 易于/ 工程/ 实现/ ./ BlueGene/ 系统/ 就/ 采用/ 了/ 这种/ 策略/ ./ 图/ 4/ 中/ 的/ 基于/ 局部/ 信息/ 的/ Bubble/ 流控/ 策略/ 适用/ 于/ 报文/ 切换/ 网络/ ./ 我们/ 把/ 这种/ 思路/ 应用/ 于虫/ 孔/ 切换/ 网络/ 可以/ 设计/ 如图/ 5/ 所示/ 的/ 基于/ 局部/ 信息/ 的/ 流控/ 策略/ ./ 图/ 5/ 描述/ 的/ 流控/ 策略/ 类似/ 图/ 4/ ,/ 该/ 策略/ 应用/ 在/ 虫/ 孔/ 切换/ 网络/ 中/ ,/ 是/ 一个/ 基于/ 局部/ 信息/ 的/ 流控/ 策略/ ./ 会/ ,/ 消除/ 了/ HOL/ 阻塞/ 现象/ ./ 多/ 请求/ 输入/ 缓冲/ 组织/ 结构/ 下/ ,/ 在/ 一个/ 报文/ 的/ 尾/ 还/ 没有/ 进入/ 缓冲区/ 之前/ ,/ 其他/ 报文/ 可以/ 进入/ 缓冲区/ ./ 并且/ ,/ 在/ 一个/ 报文/ 的/ 尾/ 流出/ 之前/ ,/ 允许/ 其他/ 报文/ 流出/ ./ 因此/ ,/ 这种/ 缓冲/ 组织/ 结构/ 支持/ 非/ 原子/ 分配/ ./ 下面/ ,/ 我们/ 基于/ 多/ 请求/ 输入/ 缓冲/ 结构/ ,/ 针对/ 虫/ 孔/ 切换/ 方式/ ,/ 设计/ 气泡/ 流控/ 策略/ ./ 2.2/ 虫/ 孔流控/ 策略/ 传统/ 的/ 气泡/ 流控/ (/ BubbleFlowControl/ ,/ BFC/ )/ 策略/ 适用/ 于/ 报文/ 切换/ 网络/ ./ 图/ 3/ 描述/ 了/ 报文/ 注入/ 单向/ 环/ 的/ 状态/ ./ 按照/ BFC/ ,/ 当/ 单向/ 环内/ 至少/ 有/ 2/ 个/ 空闲/ 报文/ 空间/ 时/ ,/ 报文/ 可以/ 注入/ ./ 在/ 图/ 3/ 中有/ 2/ 个/ 空闲/ 报文/ 空间/ ,/ 因此/ 报文/ P/ 可以/ 注入/ ./ 并且/ 注入/ 后/ ,/ 环内/ 还有/ 1/ 个/ 空闲/ 报文/ 空间/ (/ 气泡/ )/ 保证/ 了/ 环内/ 报文/ 的/ 流动/ ./ 而/ 其他/ 准备/ 注入/ 单向/ 环/ 的/ 报文/ 需要/ 等待/ 环内/ 至少/ 有/ 2/ 个/ 空闲/ 报文/ 空间/ ,/ 才能/ 注入/ ./ 首先/ ,/ 当/ Flit/ 当前/ 路由/ 维度/ 与/ 下/ 一步/ 路由/ 维度/ 相同/ 时/ ,/ 若下/ 一级/ 缓冲区/ 至少/ 有/ 1/ 个/ Flit/ 空闲/ 空间/ ,/ 那么/ 在/ 这个/ 维度/ 环内/ 肯定/ 至少/ 有/ 1/ 个/ Flit/ 空闲/ 空间/ ,/ 因此/ ,/ 环内/ 的/ Flit/ 可以/ 流动/ ./ 所以/ 当前/ Flit/ 可以/ 流入/ 下/ 一步/ 缓冲区/ ./ 对于/ 当前/ 维度/ 与/ 下/ 一步/ 维度/ 不同/ 或/ 当前/ 处于/ 注入/ 缓冲区/ 的/ Flit/ ,/ 如果/ 下/ 一步/ 缓冲区/ 只有/ 1/ 个/ Flit/ 空闲/ 空间/ ,/ Flit/ 不能/ 流入/ 下/ 一步/ 的/ 缓冲区/ ./ 这/ 是因为/ 倘若/ 下/ 一步/ 缓冲区/ 所在/ 的/ 维度/ 刚好/ 只有/ 1/ 个/ Flit/ 空闲/ 空间/ ,/ 一旦/ 当前/ Flit/ 流入/ ,/ 整个/ 维度/ 环内/ 不再/ 有/ 空闲/ 空间/ (/ 气泡/ )/ ,/ 环内/ 的/ Flit/ 无法/ 流动/ ,/ 这样/ 可能/ 导致/ 死锁/ ./ 因此/ 对于/ 这种/ 情况/ ,/ 下/ 一步/ 缓冲区/ 至少/ 要/ 2/ 个/ Flit/ 空闲/ 空间/ ./ 我们/ 知道/ ,/ 对于/ 原子/ 分配/ ,/ 2/ 个/ Flit/ 空闲/ 空间/ 也/ 不能/ 保证/ 报文/ Flit/ 能够/ 流入/ ./ 这/ 是因为/ 基于/ 邻居/ 缓冲区/ 空闲/ 空间信息/ ,/ 只能/ 获得/ 下/ 一步/ 缓冲区/ 信息/ ,/ 不能/ 得到/ 整个/ 环/ 的/ 空闲/ 空间信息/ ./ 若下/ 一/ Page5/ 步/ 缓冲区/ 的/ 空闲/ 空间/ 小于/ 准备/ 流入/ 报文/ 的/ Flit/ 数目/ ,/ 该报/ 文/ 不能/ 流入/ ./ 否则/ 无法/ 保证/ 存储/ 分配/ 的/ 原子/ 性/ ./ 由于/ 多/ 请求/ 输入/ 缓冲区/ 组织/ 结构/ 实现/ 了/ 交叉/ 存储/ 和/ 非/ 原子/ 分配/ ,/ 我们/ 可以/ 重新考虑/ 基于/ 局部/ 信息/ 的/ 虫/ 孔/ 气泡/ 流控/ 策略/ ./ 在/ 多/ 请求/ 输入/ 缓冲区/ 组织/ 结构/ 中/ ,/ 除了/ 用于/ 缓冲/ Flit/ 的/ 缓冲/ 空间/ 外/ ,/ 还有/ 用于/ 保存/ 路由/ 信息/ 的/ 寄存器/ 资源/ ./ 当/ Flit/ 流入/ 时/ ,/ 需要/ 同时/ 考虑/ 这/ 两种/ 资源/ 的/ 分配/ ./ 我们/ 设/ 存储/ 路由/ 信息/ 的/ 寄存器/ 数目/ 与/ 缓冲区/ 可/ 容纳/ 的/ Flit/ 数目/ 相等/ ./ 同时/ ,/ 把/ 缓冲区/ 中/ 1/ 个/ Flit/ 空间/ 和/ 1/ 个/ 保存/ 路由/ 信息/ 的/ 寄存器/ 捆绑/ 在/ 一起/ ,/ 称为/ 1/ 个/ 缓冲/ 资源/ ./ 另外/ ,/ 每个/ Flit/ 携带/ 报文/ 标示/ 和/ 目标/ 结点/ 号/ ,/ 网络/ 采用/ 分布/ 路由/ 方式/ ./ 这样/ ,/ 缓冲区/ 组织/ 不再/ 需要/ 链表/ ./ 多/ 请求/ 输入/ 缓冲/ 组织/ 结构/ 下/ 的/ 气泡/ 流控/ 策略/ 如图/ 6/ 所示/ ./ 图/ 6/ 所示/ 的/ 虫/ 孔/ 气泡/ 流控/ 策略/ 类似/ 图/ 5/ 描述/ 的/ 流控/ 策略/ ,/ 不/ 需要/ 全局/ 的/ 缓冲/ 空闲/ 空间信息/ ./ 相对/ 于/ 文献/ [/ 10/ ]/ 的/ 虫/ 孔/ 气泡/ 流控/ 策略/ ,/ 新型/ 的/ 流控/ 策略/ 具图/ 7/ 基于/ 多/ 请求/ 输入/ 缓冲区/ 的/ 单向/ 环/ 由于/ 单向/ 环内/ 不会/ 生成/ 新/ 的/ Flit/ ,/ 单向/ 环内/ 的/ Flit/ 都/ 是/ 由/ 外部/ 注入/ ./ 那么/ 单向/ 环内/ 最/ 多/ 有/ 多少/ Flit/ ?/ 从/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 可知/ :/ 1/ 个/ Flit/ 注入/ 环内/ ,/ 必须/ 满足/ 缓冲区/ 至少/ 有/ 2/ 个/ 空闲/ 存储资源/ ./ 可以/ 设想/ ,/ 当/ 最后/ 1/ 个/ Flit/ 注入/ 环内/ 后/ ,/ 对应/ 缓冲区/ 至少/ 还有/ 一个/ 空闲/ 资源/ ./ 在/ 其他/ 缓冲区/ 都/ 充满/ 的/ 情况/ 下/ ,/ 环内/ 最大/ 的/ Flit/ 数目/ 为/ m/ ×/ n/ -/ 1/ ,/ 而/ 环内/ 缓冲/ 资源/ 为/ m/ ×/ n/ ,/ 因此/ 环内/ 至少/ 有/ 1/ 个/ 空闲/ 的/ 缓冲/ 资源/ ./ 存在/ 1/ 个/ 空闲/ 的/ 缓冲/ 资源/ 的/ 情况/ 下/ ,/ 新/ 的/ Flit/ 不/ 可能/ 注入/ 环内/ ./ 按照/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ ,/ 这个/ 空闲/ 的/ 缓冲/ 资源/ 可以/ 保证/ 环内/ 的/ Flit/ 流动/ ,/ 不会/ 出现/ 死锁/ ./ 并且/ ,/ 准备/ 注入/ 该环/ 的/ Flit/ 必须/ 等待/ 在/ 下/ 一级/ 缓冲区/ 中/ 至少/ 出现/ 2/ 个/ 空闲/ 资源/ 才能/ 注入/ ./ 因此/ ,/ 新型/ 有/ 以下/ 特点/ :/ (/ 1/ )/ 只/ 需/ 获得/ 邻居/ 结点/ 的/ 缓冲/ 空闲/ 空间信息/ 就/ 可以/ 决定/ 报文/ 的/ Flit/ 是否/ 可以/ 流入/ 下/ 一级/ ,/ 不/ 需要/ 全局/ 信息/ ,/ 因此/ 流控/ 策略/ 的/ 控制/ 逻辑/ 相对/ 文献/ [/ 10/ ]/ 的/ 方法/ 更/ 简单/ ./ (/ 2/ )/ 缓冲/ 空间/ 支持/ 交叉/ 存储/ ,/ 采用/ 非/ 原子/ 分配/ ,/ 支持/ 多个/ Flit/ 同时/ 注入/ 单向/ 环内/ 因此/ 提高/ 了/ 网络通信/ 性能/ ./ (/ 3/ )/ 需要/ 额外/ 为/ 流入/ 的/ 每个/ Flit/ 增加/ 记录/ 路由/ 和/ 识别/ 信息/ 的/ 寄存器/ ,/ 增加/ 了/ 缓冲区/ 的/ 硬件/ 开销/ ./ 另外/ ,/ 为了/ 支持/ 报文/ 乱序/ 到达/ ,/ 因此/ 在/ 目标/ 点/ 需要/ 重新/ 排序/ ./ 另外/ ,/ 在/ 片/ 上/ 网络/ 中/ ,/ 由于/ 单个/ Flit/ 的/ 报文/ 比例/ 较大/ ,/ 例如/ 在/ PARSEC/ [/ 13/ ]/ 测试/ 集中/ ,/ 单个/ Flit/ 的/ 报文/ 所/ 占/ 的/ 比例/ 达到/ 78.7/ %/ [/ 14/ ]/ ./ 因此/ ,/ 我们/ 这种/ 基于/ Flit/ 组织/ 缓冲/ 资源/ 的/ 方法/ 是/ 有/ 意义/ 的/ ./ 3/ 环内/ 无死锁性/ 证明/ 本/ 节/ 我们/ 证明/ 基于/ 多/ 请求/ 输入/ 缓冲区/ 组织/ 结构/ 的/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 保证数据/ 在/ 单向/ 环内/ 流动/ 无/ 死锁/ ./ 设/ 单向/ 环内/ 有/ n/ 个/ 结点/ ,/ 如图/ 7/ 所示/ ./ 每个/ 结点/ 在/ 环上/ 的/ 端口/ 缓冲区/ 大小/ 为/ m/ 个/ 存储资源/ ,/ 每个/ 存储资源/ 包括/ 1/ 个/ Flit/ 存储空间/ 和/ 1/ 个/ 存储/ 路由/ 信息/ 的/ 寄存器/ ./ 虫/ 孔/ 气泡/ 流控/ 策略/ 可以/ 保证/ 单向/ 环/ 的/ 信息/ 流动/ ,/ 不会/ 出现/ 死锁/ ./ 4/ 实验/ 数据/ 及/ 分析/ 在/ 这部分/ ,/ 我们/ 基于/ Stanford/ 大学/ 开发/ 的/ 网络/ 模拟/ 工具/ BookSim/ [/ 15/ -/ 16/ ]/ 研究/ 新型/ 虫/ 孔/ 气泡/ 流控/ 的/ 性能/ ./ 通过/ 修改/ 源代码/ ,/ 我们/ 在/ BookSim/ 中/ 实现/ 了/ 基于/ 新型/ 虫/ 孔/ 气泡/ 的/ 维序/ 路由/ 算法/ (/ WBFC/ )/ 和/ 完全/ 适应性/ 路由/ 算法/ (/ Adapt/ -/ BF/ )/ ./ 我们/ 分别/ 比较/ 了/ 这/ 两种/ 算法/ 和/ 传统/ 的/ 基于/ 子午线/ (/ Dateline/ )/ 的/ 维序/ 路由/ 算法/ (/ DOR/ )/ 以及/ 完全/ 适应性/ 路由/ 算法/ (/ Adapt/ -/ DL/ )/ 在/ 不同/ 维度/ 的/ Torus/ 网络/ 中/ 的/ 报文/ 平均/ 延迟/ ./ Page64/ ./ 1/ 实验/ 建立/ 模拟/ 测试/ 中/ ,/ 我们/ 采用/ 不同/ 维度/ 的/ Torus/ 互连/ 拓扑/ 结构/ 测试/ 路由/ 算法/ 的/ 平均/ 报文/ 延迟/ ./ 实验/ 中/ ,/ 为了/ 保证/ 相对/ 的/ 公平性/ ,/ 我们/ 对/ 每个/ 路由/ 算法/ 所/ 设置/ 的/ 虚/ 信道/ 数目/ 以及/ 缓冲/ Flit/ 数目/ 都/ 保持一致/ ./ 模拟/ 设置/ 如表/ 1/ 所示/ ./ 报文/ 大小/ 设置/ 为/ 4/ 、/ 6/ 或/ 12/ 个/ Flit/ ./ 拓扑/ 结构/ (/ Torus/ )/ 表/ 1BookSim/ 参数设置/ 结点/ Flit/ 注入/ 率/ 0.1/ ~/ 0.654/ ./ 22D/ -/ Torus/ 网络/ 的/ 平均/ 延迟/ 图/ 8/ ~/ 图/ 12/ 描述/ 了/ 4/ -/ ary2/ -/ cubeTorus/ 网络/ 采用/ 4/ 种/ 路由/ 策略/ ,/ 在/ 不同/ 通信/ 模式/ 下/ ,/ 网络/ 中/ 报文/ 的/ 我们/ 设置/ 在/ 路由器/ 中/ ,/ 信用/ 处理/ 的/ 延迟/ 为/ 2/ 个/ 周期/ ;/ 通道/ 延迟/ 、/ 开关/ 分配/ 以及/ 虚/ 信道/ 分配/ 和/ 开关/ 处理/ 的/ 延迟/ 都/ 是/ 1/ 个/ 周期/ ./ 另外/ ,/ BookSim/ 模拟器/ 的/ warmedup/ 时间/ 是/ 10000/ 个/ 周期/ ,/ 性能/ 测试/ 在/ warmedup/ 后/ 的/ 100000/ 个/ 周期/ 中/ 进行/ ./ 当/ 报文/ 延迟/ 大于/ 1000/ 个/ 周期/ 时/ ,/ 认为/ 网络/ 不/ 稳定/ ,/ 不再/ 继续/ 测试/ ./ 平均/ 延迟/ ./ 图中/ 横轴/ 表示/ 网络/ 结点/ 1/ 个/ 周期/ 注入/ 1/ 个/ Flit/ 的/ 概率/ ,/ 单位/ 是/ %/ ./ 纵轴/ 表示/ 网络/ 中/ 报文/ 的/ 平均/ 延迟/ ,/ 单位/ 是/ 周期/ 数/ (/ cycle/ )/ ./ 在/ 图/ 8/ ~/ 图/ 12/ 中/ ,/ 由于/ WBFC/ 算法/ 在/ 注入/ 率为/ 23/ %/ 内/ 就/ 达到/ 了/ 饱和/ 带宽/ ,/ 再/ 提高/ 注入/ 率/ ,/ 对/ 比较/ 算法/ 性能/ 已/ 没有/ 意义/ ,/ 因此/ ,/ 只/ 模拟/ 测试/ 了/ 注入/ 率为/ 23/ %/ 内/ 的/ 算法/ 性能/ ./ 图/ 8/ ~/ 图/ 12/ 显示/ :/ 在/ 所有/ 的/ 通信/ 模式/ 下/ ,/ 适应性/ 路由/ 算法/ Adapt/ -/ BF/ 和/ Adapt/ -/ DL/ 的/ 平均/ 报文/ 延迟/ 都/ 比/ 确定性/ 路由/ 算法/ WBFC/ 和/ DOR/ 小/ ./ 不同/ 通信/ 模式/ 下/ ,/ 算法/ 达到/ 饱和/ 带宽/ 的/ 情况/ 各异/ ./ 例如/ :/ 在/ bitcomp/ 通信/ 模式/ 下/ ,/ WBFC/ 在/ 注入/ 率/ 达到/ 23/ %/ 时/ ,/ Page7/ 网络/ 达到/ 饱和/ 带宽/ ;/ 而/ 在/ bitrev/ 模式/ 下/ ,/ WBFC/ 在/ 注入/ 率/ 达到/ 20/ %/ 时/ ,/ 网络/ 达到/ 饱和/ 带宽/ ./ 另外/ ,/ 也/ 发现/ WBFC/ 算法/ 在/ 这/ 4/ 种/ 路由/ 算法/ 中/ 性能/ 最差/ ./ 而/ 对于/ 4/ -/ ary2/ -/ cubeTorus/ 网络/ ,/ 在/ 注入/ 率/ 不/ 超过/ 23/ %/ 的/ 情况/ 下/ ,/ 算法/ Adapt/ -/ BF/ 和/ Adapt/ -/ DL/ 的/ 报文/ 平均/ 延迟/ 在/ 各种/ 通信/ 模式/ 下/ 差别/ 不大/ ./ 图/ 13/ ~/ 图/ 17/ 描述/ 了/ 8/ -/ ary2/ -/ cubeTorus/ 网络/ 采用/ 4/ 种/ 路由/ 策略/ ,/ 在/ 不同/ 通信/ 模式/ 下/ 的/ 报文/ 平均/ 延迟/ ./ 图/ 13/ ~/ 图/ 17/ 也/ 显示/ 出/ :/ 适应性/ 路由/ 算法/ Adapt/ -/ BF/ 和/ Adapt/ -/ DL/ 的/ 平均/ 报文/ 延迟/ 在/ 各种/ 通信/ 模式/ 下/ 都/ 比/ 确定性/ 路由/ 算法/ WBFC/ 和/ DOR/ 的/ 小/ ,/ 并且/ 对于/ WBFC/ 和/ DOR/ 算法/ ,/ 在/ 注入/ 率/ 很/ 小时/ ,/ 网络/ 就/ 达到/ 了/ 饱和/ 带宽/ ./ 例如/ :/ 在/ bitrev/ 和/ shuffle/ 模式/ 下/ ,/ 当/ 注入/ 率为/ 10/ %/ 时/ ,/ 算法/ WBFC/ 和/ DOR/ 就/ 达到/ 了/ 饱和/ 带宽/ ./ 这/ 表明/ 随着/ 网络/ 结点/ 数目/ 的/ 增加/ ,/ 算法/ WBFC/ 和/ DOR/ 的/ 性能/ 迅速/ 恶化/ ,/ 算法/ 的/ 可扩展性/ 不好/ ./ 另外/ ,/ 实验/ 数据/ 也/ 表明/ WBFC/ 算法/ 在/ 实验/ 采用/ 的/ 5/ 种/ 通信/ 模式/ 下/ ,/ 在/ 这/ 4/ 种/ 路由/ 算法/ 中/ 性能/ 最差/ ./ 相对/ 4/ -/ ary2/ -/ cubeTorus/ 网络/ 不同/ 的/ 是/ ,/ 对于/ 一些/ 通信/ 模式/ ,/ 在/ 8/ -/ ary2/ -/ cubeTorus/ 网络/ 中/ ,/ 两种/ 适应性/ 路由/ 算法/ 的/ 性能/ 有/ 了/ 明显/ 区别/ ./ 其中/ ,/ Adapt/ -/ BF/ 算法/ 的/ 性能/ 更好/ ./ 例如/ 在/ shuffle/ 通信/ 模式/ 下/ ,/ 当/ 注入/ 率为/ 22/ %/ 时/ ,/ Adapt/ -/ DL/ 算法/ 的/ 报文/ 平均/ 延迟/ 已/ 达到/ 400/ 周期/ ,/ 而/ Adapt/ -/ BF/ 算法/ 的/ 报文/ 平均/ 延迟/ 为/ 23.6/ 周期/ ./ 4.33/ D/ -/ Torus/ 网络/ 中/ 的/ 平均/ 延迟/ 由于/ 两种/ 确定性/ 路由/ 算法/ 的/ 性能/ 较差/ ,/ 对于/ 3D/ -/ Torus/ 和/ 4D/ -/ Torus/ 网络/ ,/ 我们/ 只/ 比较/ 适应性/ 路由/ 算法/ Adapt/ -/ BF/ 和/ Adapt/ -/ DL/ 的/ 性能/ ./ 图/ 18/ 描述/ 了/ 4/ -/ ary3/ -/ cubeTorus/ 网络/ 采用/ 两种/ 路由/ 策略/ ,/ 在/ 不同/ 通信/ 模式/ 下/ ,/ 报文/ 的/ 平均/ 延迟/ ./ 图/ 18/ 中/ ,/ bc/ 代表/ bitcomp/ ;/ br/ 代表/ bitrev/ ;/ sf/ 代表/ shuffle/ ;/ tp/ 代表/ transpose/ ;/ uf/ 代表/ uniform/ ./ 例如/ Page8Adapt/ -/ DL/ -/ bc/ 表示/ 在/ bitcomp/ 通信/ 模式/ 下/ ,/ Adapt/ -/ DL/ 算法/ 的/ 性能/ ./ 其他/ 情况/ 类似/ ./ 图/ 18/ 显示/ :/ 两种/ 路由/ 算法/ 的/ 性能/ 差别/ 不大/ ./ 其中/ ,/ 对于/ bitrev/ 通信/ 模式/ ,/ Adapt/ -/ DL/ 算法/ 的/ 报文/ 平均/ 延迟/ 比/ Adapt/ -/ BF/ 小/ ./ 而/ 在/ 其他/ 4/ 种/ 通信/ 模式/ 下/ ,/ Adapt/ -/ BF/ 的/ 性能/ 好于/ Adapt/ -/ DL/ 算法/ ./ 图/ 19/ 描述/ 了/ 8/ -/ ary3/ -/ cubeTorus/ 网络/ 采用/ 两种/ 路由/ 策略/ ,/ 在/ 不同/ 通信/ 模式/ 下/ (/ 由于/ transpose/ 通信/ 模式/ 不/ 适用/ 8/ -/ ary3/ -/ cube/ 网络/ ,/ 因此/ 不/ 包括/ transpose/ 通信/ 模式/ )/ ,/ 报文/ 的/ 平均/ 延迟/ ./ 图/ 19/ 显示/ :/ 对于/ bitrev/ 通信/ 模式/ ,/ Adapt/ -/ DL/ 算法/ 的/ 性能/ 稍微/ 优于/ Adapt/ -/ BF/ ./ 而/ 对于/ 其他/ 4/ 种/ 通信/ 模式/ ,/ Adapt/ -/ BF/ 的/ 性能/ 明显/ 好于/ Adapt/ -/ DL/ 算法/ ./ 4.44/ D/ -/ Torus/ 网络/ 中/ 的/ 平均/ 延迟/ 图/ 20/ 描述/ 4/ -/ ary4/ -/ cubeTorus/ 网络/ 采用/ 两种/ 路由/ 策略/ ,/ 在/ 不同/ 通信/ 模式/ 下/ ,/ 报文/ 的/ 平均/ 延迟/ ./ 图/ 20/ 显示/ :/ 在/ 注入/ 率/ 不/ 超过/ 50/ %/ 的/ 情况/ 下/ ,/ 两种/ 路由/ 算法/ 的/ 性能/ 差别/ 不大/ ./ 其中/ ,/ 对于/ bitrev/ 通信/ 模式/ ,/ Adapt/ -/ DL/ 算法/ 的/ 性能/ 优于/ Adapt/ -/ BF/ ./ 而/ 在/ 其他/ 4/ 种/ 通信/ 模式/ 下/ ,/ Adapt/ -/ BF/ 的/ 性能/ 好于/ Adapt/ -/ DL/ 算法/ ./ 例如/ 在/ bitcomp/ 通信/ 模式/ 下/ ,/ 注入/ 率/ 不/ 超过/ 50/ %/ ,/ Adapt/ -/ BF/ 的/ 报文/ 平均/ 延迟/ 曲线/ 保持/ 平滑/ 缓慢/ 增长/ ,/ 远远/ 优于/ Adapt/ -/ DL/ 算法/ ./ 4.5/ 缓冲区/ 大小/ 的/ 影响/ 输入/ 缓冲区/ 的/ 大小/ 直接/ 影响/ 路由/ 算法/ 的/ 性能/ ./ 图/ 21/ 描述/ 对于/ 4/ -/ ary4/ -/ cubeTorus/ 网络/ 采用/ 两种/ 路由/ 策略/ ,/ 在/ 网络/ 性能/ 相对/ 较差/ 的/ 通信/ 模式/ bitrev/ 下/ ,/ 不同/ 缓冲/ 大小/ 下/ ,/ 报文/ 的/ 平均/ 延迟/ ./ 图/ 21/ 中/ ,/ Adapt/ -/ BF/ -/ 4vc/ 表示/ 在/ 缓冲区/ 为/ 4VC/ 情况/ 下/ ,/ Adapt/ -/ BF/ 算法/ 的/ 报文/ 平均/ 延迟/ ;/ 同样/ 地/ ,/ Adapt/ -/ BF/ -/ 6vc/ 表示/ 在/ 缓冲区/ 为/ 6VC/ 情况/ 下/ ,/ Adapt/ -/ BF/ 算法/ 的/ 报文/ 平均/ 延迟/ ;/ Adapt/ -/ BF/ -/ 8vc/ 表示/ 在/ 缓冲区/ 为/ 8VC/ 情况/ 下/ ,/ Adapt/ -/ BF/ 算法/ 的/ 报文/ 平均/ 延迟/ ./ 对于/ Adapt/ -/ DL/ 算法/ 采用/ 相同/ 的/ 表示/ 方法/ ./ 从图/ 21/ 中/ ,/ 可以/ 观察/ 到/ :/ 当/ 注入/ 率/ 小于/ 50/ %/ 时/ ,/ 两个/ 算法/ 在/ 不同/ 缓冲区/ 下/ 的/ 平均/ 报文/ 延迟/ 差别/ 不大/ ./ 同时/ 注意/ 到/ ,/ 对于/ Adapt/ -/ DL/ 算法/ ,/ 缓冲区/ 为/ 4VC/ 和/ 6VC/ 时/ ,/ 当/ 注入/ 率/ 达到/ 50/ %/ 时/ ,/ 网络/ 达到/ 了/ 饱和/ 带宽/ ;/ 而/ 缓冲区/ 为/ 8VC/ 时/ ,/ 当/ 注入/ 率/ 达到/ 60/ %/ 时/ ,/ 网络/ 达到/ 饱和/ 带宽/ ./ 对于/ Adapt/ -/ BF/ 算法/ ,/ 缓冲区/ 为/ 4VC/ 时/ ,/ 当/ 注入/ 率/ 达到/ 58/ %/ 时/ ,/ 网络/ 达到/ 了/ 饱和/ 带宽/ ;/ 缓冲区/ 为/ 6VC/ 时/ ,/ 当/ 注入/ 率/ 达到/ 62/ %/ 时/ ,/ 网络/ 达到/ 了/ 饱和/ 带宽/ ;/ 缓冲区/ 为/ 8VC/ 时/ ,/ 当/ 注入/ 率/ 达到/ 65/ %/ 时/ ,/ 网络/ 达到/ 了/ 饱和/ 带宽/ ./ 测试数据/ 表明/ :/ 随着/ 输入/ 缓冲区/ 的/ Page9/ 增大/ ,/ 算法/ Adapt/ -/ BF/ 和/ Adapt/ -/ DL/ 的/ 网络带宽/ 都/ 有所提高/ ,/ 而/ 算法/ Adapt/ -/ BF/ 的/ 网络带宽/ 提高/ 更/ 突出/ ./ 4.6/ 实验/ 分析/ 实验/ 测试/ 中/ ,/ 网络/ 都/ 采用/ 虫/ 孔/ 切换/ 策略/ ,/ 我们/ 采用/ 3/ 种/ 报文/ 长度/ :/ 4Flit/ ,/ 6Flit/ 和/ 12Flit/ 报文/ 分别/ 进行/ 了/ 测试/ ./ 获得/ 的/ 模拟/ 测试/ 结果/ 类似/ ./ 在/ 二维/ Torus/ 网络/ 中/ ,/ 针对/ 不同/ 的/ 网络/ 规模/ ,/ 在/ uniform/ 等/ 五种/ 合成/ 通信/ 模式/ 下/ ,/ 分别/ 测试/ 了/ 基于/ 新型/ 虫/ 孔/ 气泡/ 的/ 维序/ 路由/ 算法/ (/ WBFC/ )/ 和/ 完全/ 适应性/ 路由/ 算法/ (/ Adapt/ -/ BF/ )/ 以及/ 传统/ 的/ 基于/ 子午线/ (/ Dateline/ )/ 的/ 维序/ 路由/ 算法/ (/ DOR/ )/ 和/ 完全/ 适应性/ 路由/ 算法/ (/ Adapt/ -/ DL/ )/ 的/ 性能/ ./ 实验/ 数据/ 表明/ :/ 基于/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 的/ 确定性/ 路由/ 算法/ ,/ 性能比/ 基于/ 传统/ 子午线/ 的/ 维序/ 路由/ 算法/ 的/ 性能/ 差/ ./ 这是/ 由于/ 气泡/ 流控/ 策略/ 对/ 准备/ 注入/ 环/ 的/ 报文/ 相对/ 环内/ 流动/ 报文/ 要求/ 更/ 多/ 的/ 缓冲/ 空间/ ,/ 因此/ 潜在地/ 会/ 造成/ 网络/ 报文/ 的/ 饿死/ 现象/ [/ 5/ ]/ ,/ 导致/ 网络/ 中/ 一些/ 报文/ 长时间/ 等待/ ,/ 无法/ 到达/ 目标/ 结点/ ./ 这是/ 算法/ 性能/ 差/ 的/ 主要/ 原因/ ./ 另一方面/ ,/ 在/ 测试/ 中/ ,/ 我们/ 观察/ 到/ 两个/ 适应性/ 路由/ 算法/ 都/ 比/ 两个/ 确定性/ 路由/ 算法/ 的/ 性能/ 好/ ./ 这是/ 由于/ 适应性/ 路由/ 算法/ 相对/ 确定性/ 路由/ 算法/ 为/ 报文/ 提供/ 了/ 更/ 多/ 的/ 路由/ 选择/ ,/ 均衡/ 了/ 网络流量/ ./ 同时/ ,/ 无论是/ 在/ 二维/ Torus/ 网络/ ,/ 还是/ 更/ 高维/ 的/ 三维/ Torus/ 网络/ 以及/ 四维/ Torus/ 网络/ 性能/ 测试/ 中/ ,/ 基于/ 新型/ 虫/ 孔/ 气泡/ 的/ 完全/ 适应性/ 路由/ 算法/ (/ Adapt/ -/ BF/ )/ 相对/ 算法/ Adapt/ -/ DL/ 的/ 性能/ 更好/ ./ 这/ 是因为/ 当/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 结合/ 完全/ 适应性/ 路由/ 算法/ ,/ 报文/ 的/ 下/ 一步/ 路由/ 具有/ 多条/ 路径/ 可/ 选择/ 的/ 特性/ ,/ 从而/ 消除/ 了/ 气泡/ 流控/ 策略/ 可能/ 导致/ 的/ 饿死/ 现象/ ,/ 提升/ 了/ 路由/ 算法/ 性能/ ./ 另外/ ,/ 对于/ 基于/ 子午线/ 的/ 完全/ 适应性/ 路由/ 算法/ ,/ 由于/ 在/ 网络/ 的/ 逃逸/ 通道/ 中/ ,/ 在/ 任一/ 方向/ 上/ 只能/ 使用/ 一半/ 的/ 缓冲/ 资源/ ./ 而/ 基于/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 的/ 完全/ 适应性/ 路由/ 算法/ 可以/ 使用/ 所有/ 的/ 资源/ ./ 因此/ ,/ 我们/ 从/ 实验/ 中/ 可以/ 看出/ :/ 对于/ 不同/ 维度/ 的/ Torus/ 网络/ ,/ 当/ 网络/ 的/ k/ 值/ 较大/ (/ 结点/ 数较/ 多/ )/ ,/ 网络/ 中/ 单向/ 环内/ 报文/ 较多时/ ,/ Adapt/ -/ BF/ 算法/ 的/ 性能/ 突出/ ./ 同样/ 地/ ,/ 当/ 增加/ 输入/ 缓冲/ 空间/ 时/ ,/ Adapt/ -/ BF/ 算法/ 的/ 性能/ 相对/ Adapt/ -/ DL/ 的/ 性能/ 改善/ 更/ 明显/ ./ 5/ 总结/ 本文/ 基于/ 多/ 请求/ 输入/ 缓冲区/ 组织/ 结构/ ,/ 我们/ 设计/ 实现/ 了/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ ;/ 证明/ 了/ 这种/ 策略/ 保证/ 了/ 环内/ 数据/ 流动/ 的/ 无/ 死锁/ 特性/ ./ 基于/ BookSim/ 网络/ 模拟/ 平台/ ,/ 我们/ 测试/ 分析/ 了/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 的/ 性能/ ./ 实验/ 数据/ 表明/ :/ 基于/ 新型/ 虫/ 孔/ 气泡/ 流控/ 策略/ 的/ 完全/ 适应性/ 路由/ 算法/ 在/ k/ 值/ 较大/ 的/ Torus/ 网络/ 中/ 性能比/ 传统/ 基于/ Dateline/ 的/ 适应性/ 路由/ 算法/ 性能/ 优异/ ./ 后续/ 工作/ 中/ ,/ 我们/ 将/ 研究/ 基于/ 新型/ 虫/ 孔/ 气泡/ 流控/ 的/ 路由器/ 微/ 体系结构/ ./ 

