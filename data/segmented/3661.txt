Page1/ 多维/ 代价/ 图/ 模型/ 上/ 最优/ 路径/ 查询/ 问题/ 的/ 研究/ 杨雅君/ 高宏/ 李建中/ (/ 哈尔滨工业大学/ 计算机科学/ 与/ 工程学院/ 哈尔滨/ 150001/ )/ 摘要/ 近年来/ ,/ 图/ 数据模型/ 被/ 广泛/ 地/ 用于/ 刻画/ 现实/ 世界/ 中/ 各种各样/ 的/ 实体/ 间/ 的/ 复杂/ 关系/ ./ 最短/ 路径/ 查询/ 是/ 图/ 研究/ 领域/ 中/ 一类/ 非常/ 重要/ 的/ 查询/ 并/ 有着/ 广泛/ 的/ 应用/ ./ 然而/ ,/ 目前/ 大多数/ 关于/ 最短/ 路径/ 的/ 查询/ 都/ 是/ 定义/ 在/ 单/ 代价/ (/ 权重/ )/ 图/ 模型/ 下/ 的/ ./ 现实/ 世界/ 中/ ,/ 基于/ 单一/ 代价/ 所/ 选择/ 的/ 最/ 短/ 路径/ 并/ 不明智/ ,/ 比如/ 路程/ 最短/ 的/ 路径/ 需要/ 花费/ 极高/ 的/ 费用/ ./ 该文/ 中/ ,/ 作者/ 介绍/ 了/ 多维/ 代价/ 图/ 模型/ 的/ 概念/ ,/ 并/ 给出/ 了/ 多维/ 代价/ 图/ 模型/ 下/ 基于/ 函数/ 的/ 最优/ 路径/ 的/ 定义/ ./ 现有/ 的/ 计算/ 最短/ 路径/ 的/ 方法/ 都/ 利用/ 了/ 最/ 短/ 路径/ 的/ 子/ 路径/ 最优/ 的/ 性质/ :/ 最短/ 路径/ 上/ 的/ 任意/ 两点/ 间/ 的/ 子/ 路径/ 是/ 这两点/ 的/ 最/ 短/ 路径/ ./ 因此/ ,/ 在/ 计算/ 最短/ 路径/ 的/ 过程/ 中/ ,/ 对/ 访问/ 过/ 的/ 每个/ 顶点/ ,/ 只/ 需/ 保留/ 起点/ 到/ 该/ 点/ 的/ 最/ 短/ 路径/ 即可/ ./ 不幸/ 的/ 是/ ,/ 多维/ 代价/ 图/ 模型/ 下/ ,/ 当/ 评分/ 函数/ 是/ 非线性/ 的/ 时候/ ,/ 子/ 路径/ 最优/ 的/ 性质/ 并/ 不/ 成立/ ./ 因此/ ,/ 目前/ 的/ 方法/ 均/ 不能/ 应用/ 于/ 多维/ 代价/ 图/ 模型/ 下/ 基于/ 函数/ 的/ 最优/ 路径/ 查询/ 问题/ ./ 该文/ 给出/ 了/ 一个/ best/ -/ firstsearch/ 分支/ 界限/ 法/ 并/ 给出/ 3/ 种/ 优化/ 策略/ ./ 进一步/ ,/ 给出/ 了/ 一个/ 顶点/ 过滤/ 算法/ ,/ 该/ 算法/ 能/ 从/ 图/ 中/ 过滤/ 掉/ 大部分/ 不/ 属于/ 最优/ 路径/ 的/ 顶点/ ./ 最后/ ,/ 用/ 真实/ 数据/ 集上/ 的/ 实验/ 验证/ 了/ 算法/ 的/ 有效性/ ./ 关键词/ 多维/ 代价/ 图/ ;/ 最短/ 路径/ ;/ 目标/ 函数/ ;/ 路径/ 查询/ 1/ 引言/ 近年来/ ,/ 图/ 数据模型/ 被/ 广泛/ 地/ 用于/ 刻画/ 现实/ 世界/ 中/ 各种各样/ 实体/ 间/ 的/ 复杂/ 关系/ ,/ 如/ 交通网/ 、/ XML/ 数据库/ 以及/ 社交/ 网络/ 等等/ ./ 其中/ ,/ 最短/ 路径/ 查询/ 是/ 图/ 研究/ 领域/ 中/ 一类/ 非常/ 关键/ 的/ 问题/ 并/ 有着/ 重要/ 的/ 应用/ ./ 例如/ ,/ 在/ 交通网/ 中/ ,/ 顶点/ 代表/ 城市/ ,/ 两个/ 城市/ 之间/ 存在/ 边/ 意味着/ 它们/ 之间/ 存在/ 一条/ 公路/ ,/ 最短/ 路径/ 查询/ 返回/ 两座/ 城市/ 之间/ 最短/ 的/ 公路/ 里程/ ./ 社交/ 网络/ 中/ ,/ 顶点/ 代表人/ ,/ 边/ 代表人/ 和/ 人/ 之间/ 存在/ 直接/ 的/ 交往/ 关系/ ,/ 边/ 的/ 权值/ 反映/ 了/ 两人/ 直接/ 关系/ 的/ 亲密/ 程度/ ,/ 两点/ 之间/ 的/ 最/ 短/ 路径/ 则/ 反映/ 了/ 社交/ 网络/ 中/ 两人/ 联系/ 的/ 紧密度/ ./ 目前/ ,/ 大多数/ 工作/ 都/ 假设/ 图/ 模型/ 中边/ 的/ 代价/ (/ 权值/ )/ 是/ 单一/ 的/ ./ 事实上/ ,/ 不同/ 实体/ 之间/ 的/ 关系/ 可以/ 从/ 多个/ 角度/ 来/ 进行/ 考察/ ,/ 因而/ 描述/ 这些/ 关系/ 的/ 边/ 就/ 需要/ 用/ 多个/ 代价/ 来/ 进行/ 刻画/ ./ 比如/ 在/ 交通网/ 中/ ,/ 两座/ 城市/ 之间/ 建有/ 一条/ 高速公路/ ,/ 公路/ 的/ 长度/ 、/ 通过/ 该/ 公路/ 的/ 费用/ 以及/ 该/ 公路/ 的/ 拥挤/ 程度/ 分别/ 从/ 不同/ 角度/ 刻画/ 了/ 通行/ 这/ 条/ 公路/ 的/ 代价/ ./ 因此/ ,/ 在/ 描述/ 该/ 网络/ 的/ 图/ 模型/ 中/ ,/ 边上/ 的/ 代价/ 应该/ 是/ 多维/ 的/ ,/ 进而/ 任意/ 两个/ 顶点/ 间/ 路径/ 的/ 代价/ 也/ 是/ 多维/ 的/ ./ 现实生活/ 中/ ,/ 用户/ 对/ 最/ 短/ 路径/ 的/ 选择/ 应该/ 是/ 基于/ 多维/ 代价/ 的/ 综合/ 考虑/ ,/ 仅仅/ 依靠/ 某一/ 代价/ 做出/ 的/ 最/ 短/ 路径/ 选择/ 并/ 不明智/ ./ 比如/ ,/ 公路网/ 中/ ,/ 总/ 路程/ 最短/ 的/ 路径/ 有着/ 相当/ 高/ 的/ 经济/ 代价/ ./ 在/ 此/ 情况/ 下/ ,/ 用户/ 宁愿/ 选择/ 一条/ 路程/ 稍长/ 的/ 路径/ ,/ 但是/ 其/ 经济/ 代价/ 远远/ 小于/ 路程/ 最短/ 的/ 路径/ ./ 因此/ ,/ 如何/ 根据/ 用户/ 的/ 喜好/ ,/ 返回/ 给/ 用户/ 一个/ 综合/ 考虑/ 的/ 最优/ 路径/ 成为/ 了/ 一个/ 重要/ 的/ 问题/ ./ 本文/ 假设/ 用户/ 给出/ 一个/ 评分/ 函数/ f/ (/ ·/ )/ ,/ f/ (/ ·/ )/ 反映/ 了/ 用户/ 对/ 不同/ 类别/ 的/ 代价/ 的/ 重视/ 程度/ ,/ 不同/ 用户/ 给出/ 的/ 函数/ f/ (/ ·/ )/ 可能/ 不同/ ./ 函数/ f/ (/ ·/ )/ 根据/ 路径/ 在/ 多个/ 维度/ 上/ 的/ 代价/ 计算/ 出/ 一个/ 综合/ 代价/ 得分/ ./ 给定/ 起点/ 和/ 终点/ ,/ 本文/ 的/ 目的/ 是/ 找到/ 函数/ f/ (/ ·/ )/ 下/ 得分/ 最小/ 的/ 路径/ ,/ 我们/ 称之为/ 基于/ 函数/ f/ (/ ·/ )/ 的/ 最优/ 路径/ ./ Dijkstra/ 算法/ 是/ 求解/ 图上/ 两点/ 间/ 最/ 短/ 路径/ 的/ 经典/ 算法/ ./ Dijkstra/ 算法/ 的/ 核心思想/ 是/ 利用/ 了/ 最/ 短/ 路径/ 的/ 子/ 路径/ 最优/ 性质/ :/ 最短/ 路径/ 上/ 的/ 任意/ 一条/ 子/ 路径/ 也/ 是/ 最/ 短/ 路径/ ./ 因此/ ,/ 在/ 计算/ 最短/ 路径/ 的/ 过程/ 中/ ,/ 算法/ 对/ 访问/ 过/ 的/ 每个/ 顶点/ ,/ 只/ 需要/ 保存/ 起点/ 到/ 该/ 点/ 的/ 最/ 短/ 路径/ 即可/ ./ 目前/ 有关/ 最短/ 路径/ 的/ 工作/ 都/ 是/ 基于/ Dijkstra/ 算法/ 的/ 核心思想/ [/ 1/ -/ 6/ ]/ ./ 这些/ 工作/ 的/ 主要/ 方法/ 是/ :/ 在/ 图上/ 建立/ 索引/ ,/ 索引/ 内部/ 顶点/ 之间/ 的/ 最/ 短/ 路径/ 已经/ 被/ 计算/ 并且/ 保存起来/ ./ 当/ 一个/ 查询/ 到来/ ,/ 算法/ 先/ 检索/ 索引/ 内部/ 需要/ 访问/ 的/ 最/ 短/ 路径/ ,/ 然后/ 与/ 索引/ 外部/ 的/ 最/ 短/ 路径/ 进行/ 优化/ 连接/ ,/ 最终/ 得到/ 查询/ 结果/ ./ 索引/ 不同/ ,/ 算法/ 效率/ 也/ 就/ 不同/ ./ 然而/ ,/ 这些/ 方法/ ,/ 无论是/ 在/ 建立/ 索引/ 过程/ 中/ ,/ 还是/ 在/ 利用/ 索引/ 完成/ 最短/ 路径/ 查询/ 时/ ,/ 都/ 利用/ 了/ 子/ 路径/ 最优/ 的/ 性质/ :/ 即/ 只/ 需/ 维护/ 索引/ 内部/ 顶点/ 间/ 的/ 最/ 短/ 路径/ ,/ 同时/ ,/ 对/ 运算/ 过程/ 中/ 访问/ 过/ 的/ 节点/ ,/ 只/ 需/ 维护/ 起点/ 到/ 它/ 的/ 最/ 短/ 路径/ 即可/ ./ 不幸/ 的/ 是/ ,/ 当/ 用户/ 提供/ 的/ 评分/ 函数/ 是/ 非线性/ 的/ 时候/ ,/ 子/ 路径/ 最优/ 的/ 性质/ 在/ 多维/ 代价/ 图中/ 并/ 不/ 成立/ (/ 详见/ 2.2/ 节/ )/ ./ 因此/ ,/ 目前/ 关于/ 最短/ 路径/ 的/ 方法/ 都/ 不能/ 解决/ 本文/ 所/ 要/ 面对/ 的/ 问题/ ./ 运筹学/ 领域/ 中/ 的/ 相关/ 研究/ 表明/ ,/ 非线性/ 代价/ 函数/ 在/ 物流网/ 应用/ 中/ 广泛/ 存在/ ./ 在/ 物流网/ 中/ ,/ 运输/ 大量/ 货物/ 时/ ,/ 在/ 不同/ 时段/ 或/ 不同/ 地段/ 所/ 花费/ 的/ 运输/ 费用/ 随着/ 通行/ 距离/ 的/ 不同/ 而/ 发生变化/ ./ 如/ 文献/ [/ 7/ ]/ 所示/ ,/ 该/ 费用/ 是/ 与/ 距离/ 相关/ 的/ 分段/ 线性/ 函数/ 或者/ 分段/ 凹/ 函数/ ./ 这/ 说明/ ,/ 该/ 费用/ 代价/ 函数/ 是/ 与/ 距离/ 相关/ 的/ 非线性/ 函数/ ./ 进而/ ,/ 费用/ 与/ 距离/ 以/ 任何/ 形式/ 组合/ 得到/ 的/ 函数/ 也/ 是/ 非线性/ 的/ ./ 另外/ ,/ 在/ 某些/ 特殊/ 情况/ 下/ ,/ 如/ 自然灾害/ 中/ 急需/ 物资/ 的/ 运输/ 或者/ 战争/ 中/ 军需/ 物资/ 的/ 运输/ ,/ 运输网络/ 可能/ 遭到/ 破坏/ ./ 如/ 文献/ [/ 8/ ]/ 所示/ ,/ 此时/ 距离/ 和/ 费用/ 的/ 不同/ 度量/ 标准/ 导致/ 了/ 非线性/ 代价/ 函数/ 的/ 存在/ (/ 多项式/ 函数/ 或/ 凸函数/ )/ ./ 本文/ 中/ 所/ 给出/ 的/ 算法/ ,/ 可/ 适用/ 于/ 各种类型/ 的/ 代价/ 函数/ (/ 线性/ 的/ 和/ 非线性/ 的/ )/ ./ 多维/ 代价/ 图上/ 的/ 多/ 标准/ Pareto/ 最优/ 路径/ 计算/ (/ MCPP/ )/ 问题/ 在/ 运筹学/ 领域/ 被/ 广泛/ 研究/ [/ 9/ -/ 11/ ]/ ./ 给定/ 起点/ 和/ 终点/ ,/ MCPP/ 的/ 目的/ 是/ 找到/ 起点/ 到/ 终点/ 的/ 互不/ 支配/ 的/ 全部/ 路径/ ,/ 即/ Pareto/ 最优/ 路径/ ./ 显然/ ,/ 一条/ Pareto/ 最优/ 路径/ 也/ 是/ 一条/ skyline/ 路径/ ./ 大多数/ 解决/ MCPP/ 的/ 方法/ 都/ 基于/ Dijkstra/ 的/ 算法/ 思想/ ,/ 即/ 任意/ 一条/ Pareto/ 最优/ 路径/ 上/ 的/ 子/ 路径/ 也/ 应该/ 为/ 一条/ Pareto/ 最优/ 路径/ ./ 这些/ 方法/ 需/ 迭代/ 地/ 计算/ 出/ 目标/ Pareto/ 路径/ 所/ 经过/ 全部/ 顶点/ 的/ Pareto/ 最优/ 路径/ ,/ 并/ 扩展/ 出/ 起点/ 到/ 终点/ 的/ 全部/ Pareto/ 最优/ 路径/ ./ MCPP/ 与/ 本文/ 中/ 问题/ 的/ 主要/ 区别/ 在于/ ,/ MCPP/ 要/ 找到/ 起点/ 到/ 终点/ 的/ 全部/ Pareto/ 最优/ 路径/ ,/ 而/ 本文/ 中/ 的/ 问题/ 只/ 需/ 找到/ 一条/ 在/ 评分/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ 即可/ ./ 显然/ ,/ 找到/ 全部/ Pareto/ 最优/ 路径/ 之后/ 再/ 计算/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ 的/ 效率/ 十分/ 低下/ ,/ 因为/ 绝大部分/ Pareto/ 最优/ 路径/ 并非/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ ,/ 所以/ 这些/ 路径/ 无需/ 被/ 计算出来/ ./ 另一方面/ ,/ 这些/ 方法/ 只是/ Page3/ 从/ 理论/ 上/ 给出/ 计算/ Pareto/ 最优/ 路径/ 的/ 方法/ ,/ 并/ 没有/ 从/ 算法/ 实际/ 运行/ 效率/ 的/ 角度/ 设计/ 算法/ 和/ 优化/ 算法/ ,/ 也/ 没有/ 采用/ 数据处理/ 的/ 优化/ 技术/ ./ 因此/ ,/ 这些/ 方法/ 需要/ 承受/ 较/ 高/ 的/ 时间/ 和/ 空间/ 开销/ ./ 本文/ 的/ 主要/ 贡献/ 如下/ :/ 我们/ 首先/ 给出/ 了/ 一个/ 有效/ 的/ best/ -/ firstsearch/ 分支/ 界限/ 算法/ ,/ 该/ 算法/ 可以/ 裁剪/ 掉/ 大量/ 不是/ 最优/ 结果/ 的/ 路径/ ./ 我们/ 同时/ 给出/ 了/ 两个/ 优化/ 剪枝/ 策略/ 以及/ 快速/ 计算/ 和/ 更新/ 阈值/ 的/ 策略/ ,/ 这些/ 策略/ 均/ 有效/ 地/ 提高/ 了/ 算法/ 的/ 效率/ ./ 进一步/ 地/ ,/ 我们/ 给出/ 一个/ 过滤/ 算法/ ,/ 该/ 算法/ 可以/ 从图/ 中/ 过滤/ 掉/ 大部分/ 不/ 属于/ 最优/ 路径/ 的/ 顶点/ ,/ 从而/ 缩小/ 图/ 的/ 规模/ ./ 最后/ ,/ 我们/ 通过/ 真实/ 数据/ 集上/ 的/ 实验/ 验证/ 了/ 算法/ 的/ 有效性/ ./ 本文/ 第/ 2/ 节/ 介绍/ 多维/ 代价/ 图上/ 最优/ 路径/ 查询/ 问题/ 的/ 定义/ 以及/ 面临/ 的/ 挑战性/ 问题/ ;/ 第/ 3/ 节/ 给出/ best/ -/ firstsearch/ 分支/ 界限/ 算法/ 、/ 剪枝/ 策略/ 以及/ 快速/ 计算/ 和/ 更新/ 阈值/ 的/ 方法/ ;/ 第/ 4/ 节/ 给出/ 顶点/ 过滤/ 算法/ ;/ 第/ 5/ 节/ 通过/ 真实/ 数据/ 验证/ 算法/ 的/ 有效性/ ;/ 第/ 6/ 节/ 讨论/ 相关/ 工作/ ;/ 最后/ ,/ 我们/ 总结/ 本文/ ./ 2/ 问题/ 定义/ 及/ 面临/ 的/ 挑战性/ 问题/ 在/ 本节/ 中/ ,/ 我们/ 将/ 介绍/ 多维/ 代价/ 图/ 模型/ 以及/ 在/ 该/ 图/ 模型/ 中/ 最优/ 路径/ 查询/ 问题/ 的/ 定义/ ./ 2.1/ 多维/ 代价/ 图/ 的/ 概念/ 多维/ 代价/ 图是/ 一个/ 有向图/ ,/ 记为/ G/ =/ (/ V/ ,/ E/ )/ ,/ 其中/ V/ 是/ 图/ 上/ 的/ 顶点/ 集合/ ,/ E/ 是/ 图/ 上/ 的/ 边/ 集合/ ./ E/ 中/ 每/ 条边/ e/ 记为/ e/ =/ (/ u/ ,/ v/ )/ ,/ u/ ,/ v/ ∈/ V/ ,/ e/ 被/ 称为/ u/ 的/ 出边/ 或者/ v/ 的/ 入边/ ,/ v/ 称作/ u/ 的/ 出边/ 邻居/ ,/ u/ 称作/ v/ 的/ 入边/ 邻居/ ./ 每条/ 边/ e/ 被/ 赋予/ 一组/ d/ 维/ 代价/ 向量/ 犮/ 狅/ 狊/ 狋/ (/ e/ )/ ,/ 犮/ 狅/ 狊/ 狋/ (/ e/ )/ =/ (/ c1/ ,/ c2/ ,/ …/ ,/ cd/ )/ ,/ 表示/ 通过/ 该边/ 所/ 花费/ 的/ d/ 种/ 代价/ ,/ 其中/ ci/ (/ i/ =/ 1/ ,/ 2/ ,/ …/ ,/ d/ )/ 为/ 通过/ 该边/ 所/ 花费/ 的/ 第/ i/ 种/ 代价/ 的/ 取值/ ./ 举例说明/ ,/ 在/ 公路网/ 中/ ,/ 城市/ A/ 与/ 城市/ B/ 之间/ 存在/ 一条/ 有/ 向/ 边/ e/ ,/ 代表/ A/ 通过/ e/ 直接/ 可达/ B/ ./ 犮/ 狅/ 狊/ 狋/ (/ e/ )/ =/ (/ c1/ ,/ c2/ ,/ c3/ )/ 为边/ e/ 上/ 的/ 一组/ 三维/ 代价/ 向量/ ,/ 其中/ ,/ c1/ 表示/ A/ 与/ B/ 之间/ 的/ 欧氏/ 距离/ ,/ c2/ 表示/ 从/ A/ 到/ B/ 所/ 花费/ 的/ 时间/ ,/ c3/ 表示/ 从/ A/ 到/ B/ 所/ 要花费/ 的/ 费用/ ./ 在/ 本文/ 中/ ,/ 我们/ 合理/ 假设/ ci/ 取值/ 非负/ ,/ 因为/ 现实/ 世界/ 中/ 不/ 存在/ 小于/ 零/ 的/ 代价/ ./ 我们/ 的/ 方法/ 可以/ 方便/ 地/ 扩展/ 到/ 无/ 向/ 图上/ ,/ 对/ 一条/ 无向边/ e/ =/ (/ u/ ,/ v/ )/ ,/ 可/ 等价/ 地/ 看作/ 两条/ 有/ 向/ 边/ e1/ =/ (/ u/ ,/ v/ )/ 和/ e2/ =/ (/ v/ ,/ u/ )/ ,/ 且/ 犮/ 狅/ 狊/ 狋/ (/ e1/ )/ =/ 犮/ 狅/ 狊/ 狋/ (/ e2/ )/ =/ 犮/ 狅/ 狊/ 狋/ (/ e/ )/ ./ 简单/ 起/ 见/ ,/ 本文/ 只/ 针对/ 有向图/ 进行/ 讨论/ ./ 一条/ 路径/ p/ 是/ 一组/ 由图/ 上/ 顶点/ 所/ 构成/ 的/ 序列/ ,/ p/ =/ (/ v0/ ,/ v1/ ,/ …/ ,/ vl/ )/ ,/ 其中/ ,/ vi/ ∈/ V/ (/ 0/ / i/ / l/ )/ 并且/ ei/ =/ (/ vi/ -/ 1/ ,/ vi/ )/ ∈/ E/ (/ 0/ </ i/ / l/ )/ ./ 路径/ p/ 被称作/ 是/ 简单/ 的/ ,/ 当且/ 仅/ 当/ p/ 上/ 的/ 顶点/ 没有/ 重复/ 出现/ ,/ 即/ 对/ 任意/ 的/ 0/ / i/ ,/ j/ / l/ ,/ 满足/ vi/ ≠/ vj/ ./ 路径/ p/ 的/ 代价/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ 为/ p/ 所/ 经过/ 全部/ 边/ 的/ 代价/ 的/ 矢量/ 和/ ./ 令/ {/ e1/ ,/ e2/ ,/ …/ ,/ el/ }/ 为/ 路径/ p/ 所/ 经过/ 的/ 全部/ 边/ 的/ 集合/ ,/ 则/ 路径/ p/ 的/ 代价/ 为/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ =/ (/ c1/ (/ p/ )/ ,/ c2/ (/ p/ )/ ,/ …/ ,/ cd/ (/ p/ )/ )/ ,/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ 是/ 所有/ 犮/ 狅/ 狊/ 狋/ (/ ej/ )/ 的/ 矢量/ 和/ ,/ 即/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ =/ ∑/ lci/ (/ p/ )/ =/ ∑/ l/ 为/ 路径/ p/ 和/ 边/ ej/ 在/ 代价/ 向量/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ 和/ 犮/ 狅/ 狊/ 狋/ (/ ej/ )/ 中/ 第/ i/ 个/ 维度/ 上/ 的/ 取值/ ./ 评分/ 函数/ f/ (/ ·/ )/ 是/ 用户/ 在/ 多维/ 数据/ 空间/ 中/ 指定/ 的/ 一个/ 聚集/ 函数/ ,/ 它/ 反映/ 了/ 用户/ 对/ 不同/ 数据/ 对象/ 喜好/ 程度/ 的/ 得分/ ./ f/ (/ ·/ )/ 将/ 数据/ 对象/ 在/ 各个/ 维度/ 上/ 的/ 取值/ 聚合/ 成/ 一个/ 值/ ,/ 通过/ 每个/ 数据/ 的/ 得分/ 情况/ ,/ 返回/ 给/ 用户/ 一个/ 最/ 满意/ 的/ 结果/ ./ 一般/ 地/ ,/ 分值/ 越小/ ,/ 用户/ 满意度/ 越高/ ./ 本文/ 中/ ,/ f/ (/ ·/ )/ 根据/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ 计算/ 路径/ p/ 的/ 得分/ ./ 我们/ 假设/ 评分/ 函数/ f/ (/ ·/ )/ 是/ 单调/ 递增/ 的/ ,/ 即/ 对于/ 两条/ 不同/ 的/ 路径/ p/ 和/ p/ ,/ 如果/ 对/ / i/ ,/ 1/ / i/ / d/ ,/ 都/ 可/ 满足/ ci/ (/ p/ )/ / ci/ (/ p/ )/ ,/ 并且/ / i/ ,/ 1/ / i/ / d/ ,/ 可/ 满足/ ci/ (/ p/ )/ </ ci/ (/ p/ )/ ,/ 则/ 有/ f/ (/ p/ )/ =/ f/ (/ c1/ (/ p/ )/ ,/ c2/ (/ p/ )/ ,/ …/ ,/ cd/ (/ p/ )/ )/ </ f/ (/ c1/ (/ p/ )/ ,/ c2/ (/ p/ )/ ,/ …/ ,/ cd/ (/ p/ )/ )/ =/ f/ (/ p/ )/ ./ 这里/ ,/ f/ (/ p/ )/ 等同于/ f/ (/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ )/ ,/ 方便/ 起/ 见/ ,/ 我们/ 在下文/ 中将/ 统一/ 记为/ f/ (/ p/ )/ ./ 评分/ 函数/ 的/ 单调/ 性是/ 评分/ 函数/ 的/ 一个/ 普遍/ 性质/ ,/ 并/ 具有/ 其/ 合理性/ [/ 12/ ]/ ./ 其/ 直观/ 意义/ 为/ :/ 如果/ 在/ 各个/ 维度/ 上/ ,/ 数据/ 对象/ p/ 的/ 代价/ 都/ 不/ 大于/ 另/ 一/ 对象/ p/ ,/ 则/ 对/ p/ 的/ 评价/ 应不差/ 于/ p/ ./ 下面/ ,/ 我们/ 给出/ 多维/ 代价/ 图上/ 基于/ 函数/ f/ (/ ·/ )/ 的/ 最优/ 路径/ 的/ 定义/ ./ 定义/ 1/ ./ 基于/ 函数/ f/ (/ ·/ )/ 的/ 最优/ 路径/ ./ 给定/ 多维/ 代价/ 图/ G/ (/ V/ ,/ E/ )/ 及/ 评分/ 函数/ f/ (/ ·/ )/ ,/ s/ ,/ t/ ∈/ V/ 是/ 图上/ 任意/ 两点/ ,/ 令/ Ps/ ,/ t/ 表示/ s/ 到/ t/ 的/ 所有/ 路径/ 的/ 集合/ ./ s/ 到/ t/ 之间/ 基于/ 函数/ f/ (/ ·/ )/ 的/ 最优/ 路径/ ,/ 记为/ sp/ (/ s/ ,/ t/ )/ ,/ 定义/ 为/ Ps/ ,/ t/ 中/ 具有/ 最小/ 函数/ 值/ f/ (/ ·/ )/ 的/ 路径/ ,/ 即/ 对/ / p/ ∈/ Ps/ ,/ t/ ,/ 有/ f/ (/ sp/ (/ s/ ,/ t/ )/ )/ / f/ (/ p/ )/ ./ 多维/ 代价/ 图上/ 最优/ 路径/ 查询/ 问题/ 的/ 定义/ 为/ :/ 输入/ :/ 多维/ 代价/ 图/ G/ ,/ 起点/ s/ 和/ 终点/ t/ ,/ 函数/ f/ (/ ·/ )/ ;/ 输出/ :/ 基于/ 函数/ f/ (/ ·/ )/ 的/ s/ 到/ t/ 的/ 最优/ 路径/ sp/ (/ s/ ,/ t/ )/ ./ 如图/ 1/ 所示/ ,/ 在/ 本例/ 中/ ,/ 我们/ 选取/ 评分/ 函数/ 为/ f/ (/ x/ ,/ y/ )/ =/ x/ +/ y/ ./ 考虑/ 路径/ p/ :/ s/ →/ d/ →/ t/ ,/ 其/ 代价/ 向量/ Page4/ 为/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ =/ (/ 10/ ,/ 4/ )/ ,/ 综合/ 代价/ 得/ 分为/ f/ (/ p/ )/ =/ 14/ ./ 因此/ ,/ 路径/ p/ 在/ 所有/ s/ 到/ t/ 的/ 路径/ 中/ 综合/ 代价/ 最小/ ,/ 则/ 路径/ p/ 为/ s/ 到/ t/ 的/ 最优/ 路径/ sp/ (/ s/ ,/ t/ )/ ./ 2.2/ 挑战性/ 问题/ 几乎/ 目前/ 的/ 所有/ 工作/ 都/ 是/ 基于/ Dijkstra/ 算法/ 的/ 改进/ ,/ Dijkstra/ 算法/ 的/ 思想/ 是/ 利用/ 了/ 最/ 短/ 路径/ 的/ 子/ 路径/ 最优/ 的/ 性质/ ./ 我们/ 以/ Dijkstra/ 算法/ 为例/ ,/ 说明/ 最短/ 路径/ 的/ 子/ 路径/ 最优/ 的/ 性质/ 在/ 多维/ 代价/ 图中/ 并/ 不/ 成立/ ./ 因此/ ,/ 现有/ 的/ 计算/ 最短/ 路径/ 的/ 方法/ 不能/ 直接/ 应用/ 到/ 本文/ 所/ 要/ 解决/ 的/ 问题/ ./ 若/ 评分/ 函数/ f/ (/ ·/ )/ 是/ 线性/ 的/ ,/ 即/ 对/ 任意/ 边/ ei/ ,/ ej/ ,/ 满足/ f/ (/ ei/ +/ ej/ )/ =/ f/ (/ ei/ )/ +/ f/ (/ ej/ )/ ,/ 则/ 可/ 将/ Dijkstra/ 算法/ 扩展/ 到/ 本文/ 所/ 要/ 解决/ 的/ 问题/ ./ 对图/ 中/ 的/ 每/ 条边/ e/ ,/ 先对/ e/ 上/ 的/ d/ 维/ 代价/ 向量/ 计算/ 得分/ f/ (/ e/ )/ ,/ 并/ 将/ f/ (/ e/ )/ 记为/ 边/ e/ 上/ 的/ 权重/ ./ 根据/ 权重/ f/ (/ e/ )/ ,/ 在/ 图/ G/ 上/ 应用/ Dijkstra/ 算法/ 所/ 找到/ 的/ 最/ 短/ 路径/ p/ 即/ 为/ 本/ 问题/ 的/ 解/ ./ 否则/ ,/ 存在/ 另/ 一条/ 路径/ p/ ,/ 使得/ f/ (/ p/ )/ </ f/ (/ p/ )/ ./ 根据/ 函数/ f/ (/ ·/ )/ 的/ 线性/ 性质/ ,/ 得到/ f/ (/ p/ )/ =/ f/ (/ ∑/ l/ ∑/ lf/ (/ ei/ )/ </ f/ (/ p/ )/ =/ f/ (/ ∑/ ri/ =/ 1Dijkstra/ 算法/ 正确性/ 相/ 矛盾/ ./ 若/ 评分/ 函数/ f/ (/ ·/ )/ 是/ 非线性/ 的/ ,/ 即/ 函数/ f/ (/ ·/ )/ 满足/ f/ (/ ei/ +/ ej/ )/ ≠/ f/ (/ ei/ )/ +/ f/ (/ ej/ )/ ,/ 则/ 基于/ Dijkstra/ 算法/ 思想/ 的/ 方法/ 不可/ 应用/ 到/ 本/ 问题/ 中/ ./ 在/ 图/ 1/ 所示/ 例子/ 中/ ,/ 我们/ 选取/ f/ (/ x/ ,/ y/ )/ =/ x2/ +/ y2/ 为/ 评分/ 函数/ ./ 显然/ ,/ 该/ 函数/ 在/ {/ x/ / 0/ ,/ y/ / 0/ }/ 的/ 区域/ 内/ 满足/ 单调/ 递增/ 的/ 性质/ ./ 我们/ 的/ 目标/ 为/ 计算/ 出/ 基于/ 函数/ f/ (/ x/ ,/ y/ )/ 的/ 由/ s/ 到/ r/ 的/ 最优/ 路径/ ./ 我们/ 在/ 该/ 图上/ 运行/ Dijkstra/ 算法/ ./ 当/ 计算/ 到/ 顶点/ c/ 的/ 代价/ 时/ ,/ 发现/ 路径/ p/ :/ s/ →/ a/ →/ c/ 的/ 代价/ 为/ f/ (/ 1/ ,/ 6/ )/ =/ 37/ ,/ 大于/ 路径/ p/ :/ s/ →/ b/ →/ c/ 的/ 代价/ f/ (/ 4/ ,/ 4/ )/ =/ 32/ ./ 因此/ ,/ Dijkstra/ 算法/ 保存/ p/ 为/ s/ 到/ c/ 的/ 最优/ 路径/ ./ 当/ 计算/ 到/ 顶点/ r/ 的/ 最优/ 路径/ 时/ ,/ 因为/ 顶点/ r/ 只/ 连接/ 一条/ 由/ c/ 出发/ 的/ 入边/ (/ c/ ,/ r/ )/ ,/ 所以/ Dijkstra/ 算法/ 计算/ s/ 到/ r/ 的/ 最优/ 路径/ sp/ (/ s/ ,/ r/ )/ 为/ p/ 和/ (/ c/ ,/ r/ )/ 的/ 连接/ ,/ 即/ sp/ (/ s/ ,/ r/ )/ =/ p/ +/ (/ c/ ,/ r/ )/ =/ (/ 4/ ,/ 4/ )/ +/ (/ 3/ ,/ 3/ )/ =/ (/ 7/ ,/ 7/ )/ ,/ 其得/ 分为/ 98/ ./ 然而/ ,/ 正确/ 结果/ sp/ (/ s/ ,/ r/ )/ 应为/ s/ →/ a/ →/ c/ →/ r/ ,/ 得/ 分为/ f/ (/ 4/ ,/ 9/ )/ =/ 97/ </ f/ (/ sp/ (/ s/ ,/ r/ )/ )/ ./ 原因/ 是/ 多维/ 代价/ 图上/ 并/ 不/ 具有/ 最短/ 路径/ 的/ 子/ 路径/ 最优/ 的/ 性质/ ./ 显然/ ,/ 顶点/ s/ 到/ 顶点/ r/ 的/ 最优/ 路径/ s/ →/ a/ →/ c/ →/ r/ 中/ 的/ 子/ 路径/ s/ →/ a/ →/ c/ 并/ 不是/ 顶点/ s/ 到/ 顶点/ c/ 的/ 最优/ 路径/ ./ 此外/ ,/ Dijkstra/ 算法/ 不/ 更新/ 已/ 访问/ 过/ 顶点/ 的/ 代价/ ,/ 这/ 导致/ 无法/ 在/ 图/ G/ 上/ 找到/ 基于/ 非线性/ 函数/ 的/ 最优/ 结果/ ./ 同样/ 在/ 图/ 1/ 所示/ 例子/ 中/ ,/ 我们/ 的/ 目标/ 为/ 计算/ s/ 到/ t/ 的/ 基于/ 函数/ f/ (/ x/ ,/ y/ )/ =/ x2/ +/ y2/ 的/ 最优/ 路径/ ./ 我们/ 发现/ s/ 到/ d/ 的/ 代价/ 得分/ 小于/ s/ 到/ c/ 的/ 代价/ 得分/ ,/ 因此/ Dijkstra/ 算法/ 优先/ 访问/ 顶点/ d/ ./ 当/ 访问/ 顶点/ c/ 时/ ,/ 因为/ 顶点/ d/ 已/ 访问/ 过/ ,/ 算法/ 不会/ 更新/ s/ 到/ d/ 的/ 代价/ ,/ 所以/ Dijkstra/ 算法/ 计算/ 出/ s/ 到/ t/ 的/ 最优/ 路径/ 为/ s/ →/ d/ →/ t/ ,/ 其得/ 分为/ f/ (/ 10/ ,/ 4/ )/ =/ 116/ ./ 实际上/ ,/ s/ 到/ t/ 的/ 最优/ 路径/ 为/ s/ →/ a/ →/ c/ →/ d/ →/ t/ ,/ 其/ 得分/ f/ (/ 7/ ,/ 8/ )/ =/ 113/ </ f/ (/ 10/ ,/ 4/ )/ ./ 现有/ 方法/ 都/ 利用/ 了/ Dijkstra/ 算法/ 的/ 核心思想/ ,/ 即/ 最/ 短/ 路径/ 的/ 子/ 路径/ 最优/ 性质/ ./ 因此/ ,/ 它们/ 都/ 无法/ 解决/ 本文/ 要/ 面对/ 的/ 问题/ ./ 枚举法/ 是/ 计算/ 基于/ 非线性/ 函数/ f/ (/ ·/ )/ 最优/ 路径/ 的/ 一种/ 直接/ 方法/ :/ 给定/ 起点/ s/ 和/ 终点/ t/ ,/ 首先/ 找到/ s/ 到/ t/ 的/ 全部/ 路径/ 并/ 分别/ 计算/ 其/ 得分/ ,/ 最后/ 返回/ 给/ 用户/ 得分/ 最小/ 的/ 路径/ ./ 设/ λ/ 为/ 图/ G/ 的/ 最大/ 出/ 度/ ,/ 即/ λ/ =/ max/ {/ d/ +/ (/ v/ )/ |/ v/ ∈/ V/ }/ ,/ 其中/ d/ +/ (/ v/ )/ 为/ 顶点/ v/ 的/ 出度/ ,/ 则/ 该/ 方法/ 的/ 搜索/ 空间/ 为/ O/ (/ λ/ n/ )/ ,/ n/ 为/ 图/ 中/ 顶点/ 个数/ ./ 显然/ ,/ 该/ 方法/ 不/ 可行/ ./ 另外/ 一种/ 方法/ 为/ 预计/ 算/ :/ 我们/ 先/ 预计/ 算/ 得到/ 图上/ 任意/ 两点/ 之间/ 的/ 最优/ 路径/ ,/ 当/ 一个/ 查询/ 到来/ ,/ 可以/ 在/ 常数/ 时间/ 内/ 将/ 结果/ 返回/ 给/ 用户/ ./ 该/ 方法/ 的/ 主要/ 问题/ 是/ 无法/ 应对/ 用户/ 给出/ 不同/ 的/ 评分/ 函数/ f/ (/ ·/ )/ ./ 由于/ 用户/ 给出/ 的/ 评分/ 函数/ 千差万别/ ,/ 对/ 某个/ f/ (/ ·/ )/ 预计/ 算出/ 的/ 最优/ 路径/ 未必/ 是/ 在/ 另/ 一/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ ./ 多维/ 代价/ 图上/ 的/ 多/ 标准/ Pareto/ 最优/ 路径/ 计算/ (/ MCPP/ )/ 问题/ 在/ 运筹学/ 领域/ 被/ 广泛/ 研究/ ./ 给定/ 起点/ s/ 和/ 终点/ t/ ,/ MCPP/ 目的/ 是/ 找到/ s/ 到/ t/ 的/ 互不/ 支配/ 的/ 全部/ 路径/ ,/ 即/ Pareto/ 最优/ 路径/ ./ 显然/ ,/ 一条/ Pareto/ 最优/ 路径/ 即/ 是/ 一条/ skyline/ 路径/ ./ 解决/ MCPP/ 问题/ 的/ 主要/ 方法/ 为/ 标签/ 法/ ./ 其/ 主要/ 思想/ 是/ :/ 用/ 一个/ 优先/ 队列/ 维护/ 图中/ 顶点/ ,/ 并且/ 对图/ 中/ 每个/ 顶点/ v/ 维护/ 一组/ 标签/ list/ (/ v/ )/ ,/ list/ (/ v/ )/ 记录/ 了/ 起点/ s/ 到/ v/ 的/ Pareto/ 最优/ 路径/ ./ 当/ 一个/ 顶点/ u/ 从/ 队列/ 弹出/ 后/ ,/ 扩展/ 其/ 邻居/ 顶点/ v/ ,/ 并/ 根据/ list/ (/ u/ )/ 和/ 边/ (/ u/ ,/ v/ )/ 更新/ list/ (/ v/ )/ ./ 当/ list/ (/ v/ )/ 支配/ 队列/ 中/ 所有/ 顶点/ u/ 的/ list/ (/ u/ )/ 时/ ,/ 算法/ 结束/ ./ 这些/ 方法/ 的/ 主要/ 问题/ 在于/ :/ (/ 1/ )/ 这些/ 方法/ 基于/ Dijkstra/ 算法/ 的/ 思想/ ,/ 即/ Pareto/ 最优/ 路径/ 上/ 的/ 子/ 路径/ 也/ 一定/ 是/ Pareto/ 最优/ 路径/ ./ 因此/ ,/ 若/ 依据/ 路径/ p/ 的/ 函数/ 值/ Page5f/ (/ p/ )/ 来/ 扩展/ 优先/ 队列/ 中/ 的/ 顶点/ ,/ 会/ 遇到/ 与/ Dijkstra/ 算法/ 计算/ 最优/ 路径/ 相同/ 的/ 问题/ ,/ 即/ 无法/ 找到/ 最优/ 路径/ ./ (/ 2/ )/ 在/ 计算/ 起点/ s/ 到/ 终点/ t/ 所有/ Pareto/ 最优/ 路径/ 的/ 过程/ 中/ ,/ 对/ 所有/ Pareto/ 最优/ 路径/ 经过/ 的/ 所有/ 顶点/ v/ ,/ 这些/ 方法/ 都/ 需要/ 计算/ 并/ 维护/ 起点/ s/ 到/ 顶点/ v/ 的/ Pareto/ 最优/ 路径/ ./ 显然/ ,/ 这/ 导致/ 了/ 极/ 高/ 的/ 时间/ 开销/ 和/ 空间/ 开销/ ./ (/ 3/ )/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ 一定/ 是/ 一条/ Pareto/ 最优/ 路径/ ,/ 但/ 一条/ Pareto/ 最优/ 路径/ 未必/ 是/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ ./ 因此/ ,/ 找到/ 全部/ Pareto/ 路径/ 之后/ 再/ 计算/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ 的/ 效率/ 十分/ 低下/ ,/ 因为/ 绝大部分/ Pareto/ 最优/ 路径/ 并非/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ ,/ 所以/ 这些/ 路径/ 无需/ 被/ 计算/ 并且/ 被/ 维护/ 起来/ ./ (/ 4/ )/ 这些/ 方法/ 大多数/ 用于/ 解决/ 2/ 维/ 代价/ 图上/ 的/ MCPP/ 问题/ ,/ 在/ 高/ 维度/ 下/ ,/ 这些/ 方法/ 具有/ 极低/ 的/ 效率/ 甚至/ 无法/ 运行/ ./ 相反/ 地/ ,/ 本文/ 提出/ 的/ 算法/ ,/ 在/ 高/ 维度/ 下/ 具有/ 十分/ 优秀/ 的/ 效率/ 且/ 随着/ 维度/ 的/ 增高/ ,/ 算法/ 效率/ 不会/ 受到/ 明显/ 的/ 影响/ ./ 此外/ ,/ 这些/ 方法/ 只是/ 从/ 理论/ 上/ 给出/ 计算/ Pareto/ 最优/ 路径/ 的/ 方法/ ,/ 并/ 没有/ 从/ 提高/ 算法/ 实际/ 运行/ 效率/ 的/ 角度/ 来/ 设计/ 算法/ 和/ 优化/ 算法/ ,/ 也/ 没有/ 用到/ 数据处理/ 中/ 的/ 优化/ 技术/ ./ 因此/ ,/ 这些/ 方法/ 需要/ 承受/ 较/ 高/ 的/ 时间/ 开销/ 和/ 空间/ 开销/ ./ 下文/ 中/ ,/ 我们/ 将/ 给出/ 一种/ 有效/ 的/ best/ -/ firstsearch/ 分支/ 界限/ 算法/ ,/ 用于/ 搜索/ 非线性/ 评分/ 函数/ 下/ 起点/ 到/ 终点/ 的/ 最优/ 路径/ ./ 同时/ ,/ 我们/ 给出/ 3/ 种/ 优化/ 策略/ ,/ 这些/ 策略/ 可以/ 显著/ 地/ 提高/ 算法/ 效率/ ./ 最后/ ,/ 我们/ 给出/ 一个/ 顶点/ 过滤/ 算法/ ,/ 该/ 算法/ 可以/ 过滤/ 掉/ 图/ 中/ 大部分/ 不/ 属于/ 最优/ 路径/ 的/ 顶点/ ./ 3/ 分支/ 界限/ 算法/ 在/ 本节/ 中/ ,/ 我们/ 首先/ 提出/ 一个/ best/ -/ firstsearch/ 分支/ 界限/ 算法/ ,/ 该/ 算法/ 可以/ 有效/ 地/ 裁剪/ 掉/ 大量/ 不是/ 最优/ 解/ 的/ 路径/ ,/ 从而/ 加速/ 对/ 非线性/ 评分/ 函数/ 下/ 的/ 最优/ 路径/ 搜索/ ./ 我们/ 首先/ 给出/ 一个/ 基本/ 的/ 分支/ 界限/ 算法/ ,/ 然后/ 介绍/ 提高/ 算法/ 效率/ 的/ 优化/ 策略/ ./ 3.1/ 基本/ 分支/ 界限/ 算法/ 给定/ 图/ G/ (/ V/ ,/ E/ )/ ,/ 图中/ 所有/ 由/ 起点/ s/ 出发/ 的/ 路径/ 可以/ 组织/ 成/ 一棵/ 搜索/ 树/ ,/ 其根/ 节点/ 是/ 起点/ 集合/ {/ s/ }/ ,/ 任意/ 一个/ 非根/ 节点/ 代表/ 一条/ 从点/ s/ 出发/ 的/ 路径/ (/ 顶点/ 序列/ )/ ./ 设/ C/ 和/ C/ 为/ 搜索/ 树上/ 的/ 两个/ 节点/ ,/ 它们/ 分别/ 代表/ 两条/ 不同/ 的/ 路径/ ./ 节点/ C/ 是/ 节点/ C/ 的/ 父亲/ 节点/ ,/ 当且/ 仅/ 当/ 它们/ 满足/ 以下/ 条件/ :/ (/ i/ )/ C/ / C/ 且/ |/ C/ |/ =/ |/ C/ |/ +/ 1/ ;/ (/ ii/ )/ C/ \/ C/ 中/ 的/ 唯一/ 顶点/ v/ 满足/ v/ / C/ 且/ v/ ∈/ N/ +/ (/ u/ )/ ,/ u/ 为/ 路径/ C/ 的/ 终点/ ,/ N/ +/ (/ u/ )/ 表示/ u/ 的/ 出边/ 邻居/ 集合/ ./ 这里/ ,/ C/ / C/ 表示/ C/ 是/ C/ 的/ 路径/ 前缀/ ,/ |/ C/ |/ 表示/ 路径/ C/ 上/ 的/ 顶点/ 个数/ ,/ v/ / C/ 保证/ 了/ 将/ v/ 加入/ C/ 不会/ 出现/ 环路/ ,/ 即/ C/ 是/ 简单/ 的/ ./ 因此/ ,/ 起点/ s/ 到/ 终点/ t/ 基于/ 函数/ f/ (/ ·/ )/ 的/ 最优/ 路径/ 查询/ 问题/ ,/ 转化/ 为树/ 搜索/ 问题/ :/ 即/ 在/ 树上/ 找到/ 一个/ 节点/ C/ ,/ 其所/ 代表/ 路径/ 的/ 终点/ 为/ t/ ,/ 使得/ f/ (/ C/ )/ 小于/ 等于/ 任何/ 其他/ 以/ t/ 为/ 终点/ 路径/ C/ 的/ 评分/ f/ (/ C/ )/ ./ 下文/ 中/ ,/ 我们/ 直接/ 用/ C/ 来/ 指代/ C/ 所/ 代表/ 的/ 路径/ 和/ 相应/ 的/ 代价/ 向量/ ./ 图/ 2/ 展示/ 了/ 图/ 1/ 例子/ 中/ s/ 到/ t/ 路径/ 的/ 搜索/ 树/ ./ 我们/ 利用/ 一个/ 最小/ 堆/ H/ 来/ 维护/ 搜索/ 树上/ 待/ 搜索/ 的/ 节点/ ,/ 堆中/ 的/ 节点/ 根据/ 他们/ 在/ 函数/ f/ (/ ·/ )/ 下/ 的/ 得分/ 排序/ ./ 我们/ 初始化/ 堆/ H/ 为/ 只/ 包括/ 起点/ s/ 的/ 路径/ {/ s/ }/ ./ 我们/ 的/ 算法/ 在/ 搜索/ 树上/ 执行/ best/ -/ first/ 搜索/ ,/ 即/ 每次/ 弹出/ 堆/ 顶/ 路径/ C/ ,/ f/ (/ C/ )/ 取值/ 在/ 堆/ 中/ 最小/ ./ 我们/ 用/ τ/ 表示/ 目前/ 已/ 探索/ 到/ 的/ s/ 到/ t/ 最优/ 路径/ 的/ 得分/ ,/ 初始化/ 时/ ,/ τ/ =/ ./ 若/ 路径/ C/ 的/ 评分/ f/ (/ C/ )/ >/ τ/ ,/ 则/ 搜索/ 树上/ 以/ C/ 为根/ 的/ 子树/ 可以/ 被/ 安全/ 剪除/ ,/ 即/ 对/ 以/ C/ 为根/ 的/ 子/ 树上/ 的/ 任意/ 一个/ 节点/ C/ ,/ 都/ 有/ f/ (/ C/ )/ >/ τ/ ./ 引理/ 1/ 保证/ 了/ 该/ 剪枝/ 策略/ 的/ 正确性/ ./ 引理/ 1/ ./ 对于/ 搜索/ 树上/ 的/ 任意/ 两个/ 节点/ C/ 和/ C/ ,/ 如果/ C/ 是/ C/ 的/ 祖先/ ,/ 则/ 有/ f/ (/ C/ )/ / f/ (/ C/ )/ ./ 证明/ ./ 若/ C/ 是/ C/ 的/ 祖先/ ,/ 由/ 搜索/ 树/ 的/ 定义/ ,/ 则/ C/ 是/ C/ 的/ 路径/ 前缀/ ./ 根据/ 函数/ f/ (/ ·/ )/ 的/ 单调/ 性/ ,/ 可以/ 得到/ f/ (/ C/ )/ / f/ (/ C/ )/ ./ 当/ 路径/ C/ 从/ 最小/ 堆/ H/ 弹出/ 时/ ,/ 我们/ 假设/ 路径/ C/ 的/ 终点/ 为/ u/ ./ 对/ u/ 的/ 任一/ 以出/ 边/ 相连/ 的/ 邻居/ v/ ∈/ N/ +/ (/ u/ )/ ,/ 当/ v/ ≠/ t/ 时/ ,/ 我们/ 首先/ 判断/ 将/ v/ 添加/ 进/ 路径/ C/ 是否/ 会/ 形成/ 环路/ ,/ 即/ 是否/ v/ ∈/ C/ ./ 若/ v/ / C/ ,/ 我们/ 计算/ 新/ 路径/ C/ =/ C/ ∪/ {/ v/ }/ 在/ 函数/ f/ (/ ·/ )/ 下/ 的/ 得分/ ./ 路径/ C/ 的/ 代价/ 向量/ 为/ 犮/ 狅/ 狊/ 狋/ (/ C/ )/ =/ 犮/ 狅/ 狊/ 狋/ (/ C/ )/ +/ 犮/ 狅/ 狊/ 狋/ (/ u/ ,/ v/ )/ ,/ 这里/ 犮/ 狅/ 狊/ 狋/ (/ u/ ,/ v/ )/ 为边/ (/ u/ ,/ v/ )/ 的/ 代价/ 向量/ ./ 犮/ 狅/ 狊/ 狋/ (/ C/ )/ 已知/ ,/ 否则/ 因/ 无法/ 计算/ f/ (/ C/ )/ ,/ C/ 不会/ 被/ 加入/ 堆/ H/ ./ C/ 是/ C/ 的/ 孩子/ ,/ 若/ f/ (/ C/ )/ / τ/ ,/ 根据/ 引理/ 1/ ,/ 我们/ 可/ 将/ 以/ C/ 为根/ 的/ 子树/ 剪掉/ ,/ 否则/ 我们/ 将/ C/ 加入/ 堆/ H/ 以待/ 搜索/ ./ 当/ v/ =/ t/ 时/ ,/ C/ 是/ 一条/ 终点/ 为/ t/ 的/ 路径/ ./ 我们/ 根据/ f/ (/ C/ )/ 更新/ τ/ 的/ 取值/ ./ 若/ f/ (/ C/ )/ </ τ/ ,/ 我们/ 用/ 路径/ C/ 代/ Page6/ 本/ 小节/ 给出/ 两种/ 优化/ 剪枝/ 策略/ ,/ 在/ 给出/ 剪枝/ 策替/ 目前/ 找到/ 的/ 终点/ 为/ t/ 的/ 最优/ 路径/ ,/ 并/ 根据/ f/ (/ C/ )/ 更新/ τ/ 的/ 取值/ ./ 当/ v/ =/ t/ 时/ ,/ 算法/ 不会/ 将/ C/ 加入/ 堆/ H/ ./ 当/ 最小/ 堆/ H/ =/ / ,/ 或者/ 堆顶/ 元素/ C/ 的/ 评分/ f/ (/ C/ )/ / τ/ 时/ ,/ 算法/ 停止/ ./ 显然/ ,/ 对堆/ 中/ 任意/ 节点/ C/ ,/ 有/ f/ (/ C/ )/ / f/ (/ C/ )/ ,/ 而/ 以/ C/ 为/ 根子/ 树中/ 的/ 任意/ 节点/ C/ ,/ 有/ f/ (/ C/ )/ / f/ (/ C/ )/ ./ 此时/ ,/ τ/ 对应/ 的/ 路径/ 即/ 为/ 起点/ s/ 到/ 终点/ t/ 的/ 最优/ 路径/ ./ 3.2/ 优化/ 剪枝/ 策略/ 略/ 之前/ ,/ 我们/ 首先/ 介绍/ skyline/ 路径/ 的/ 概念/ ./ 定义/ 2/ ./ 路径/ 支配/ ./ 给定/ 多维/ 代价/ 图/ G/ (/ V/ ,/ E/ )/ ,/ 令/ p/ 和/ p/ 是/ G/ 上/ 两条/ 不同/ 的/ 路径/ ,/ 且/ 路径/ p/ 和/ 路径/ p/ 的/ 代价/ 向量/ 分别/ 为/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ =/ (/ c1/ (/ p/ )/ ,/ c2/ (/ p/ )/ ,/ …/ ,/ cd/ (/ p/ )/ )/ 和/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ =/ (/ c1/ (/ p/ )/ ,/ c2/ (/ p/ )/ ,/ …/ ,/ cd/ (/ p/ )/ )/ ./ 我们/ 称/ p/ 支配/ p/ ,/ 记作/ p/ / p/ ,/ 当且/ 仅/ 当/ 对/ / i/ ,/ 1/ / i/ / d/ ,/ 有/ ci/ (/ p/ )/ / ci/ (/ p/ )/ ,/ 且/ / i/ ,/ 1/ / i/ / d/ ,/ 有/ ci/ (/ p/ )/ </ ci/ (/ p/ )/ ./ 这里/ ,/ ci/ (/ p/ )/ 和/ ci/ (/ p/ )/ 为/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ 和/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ 中/ 第/ i/ 维/ 的/ 代价/ 取值/ ./ 定义/ 3/ ./ skyline/ 路径/ ./ 给定/ 多维/ 代价/ 图/ G/ (/ V/ ,/ E/ )/ 和/ 图上/ 两点/ u/ ,/ v/ ./ Pu/ ,/ v/ 为/ u/ 到/ v/ 所有/ 路径/ 的/ 集合/ ./ u/ 到/ v/ 的/ skyline/ 路径/ 集合/ ,/ 记为/ SKYPu/ ,/ v/ ,/ 定义/ 为/ 所有/ 不/ 被/ Pu/ ,/ v/ 中/ 其他/ 路径/ 支配/ 的/ u/ 到/ v/ 路径/ 的/ 集合/ ,/ 即/ 对/ / p/ ∈/ SKYPu/ ,/ v/ ,/ 不/ 存在/ p/ ∈/ Pu/ ,/ v/ ,/ 使得/ p/ / p/ ./ 显然/ SKYPu/ ,/ v/ / Pu/ ,/ v/ ./ 基于/ skyline/ 路径/ 的/ 剪枝/ 规则/ :/ 在/ 搜索/ 以/ {/ s/ }/ 为根/ 的/ 搜索/ 树/ 的/ 过程/ 中/ ,/ 对图/ 中/ 每/ 一个/ 顶点/ u/ 维护/ 一个/ s/ 到/ u/ 的/ 已/ 探索/ 到/ 的/ skyline/ 路径/ 集合/ SKYPs/ ,/ u/ ./ 初始化/ 阶段/ ,/ SKYPs/ ,/ u/ =/ / ./ 给定/ 节点/ C/ ,/ C/ 所/ 表示/ 路径/ 的/ 终点/ 为/ u/ ,/ 若/ / p/ ∈/ SKYPs/ ,/ u/ ,/ 使得/ p/ / C/ ,/ 则/ 以/ C/ 为根/ 的/ 子树/ 可以/ 被/ 安全/ 的/ 剪除/ ./ 否则/ ,/ 将/ 路径/ C/ 加入/ 集合/ SKYPs/ ,/ u/ ./ 同时/ ,/ 若/ / p/ ∈/ SKYPs/ ,/ u/ ,/ C/ / p/ ,/ 则/ 可/ 将/ p/ 从/ SKYPs/ ,/ u/ 中/ 删除/ ./ 引理/ 2/ 保证/ 了/ 该/ 剪枝/ 规则/ 的/ 正确性/ ./ 引理/ 2/ ./ 设/ C/ 和/ C/ 是/ 搜索/ 树上/ 两个/ 不同/ 的/ 节点/ ,/ 且/ 它们/ 所/ 代表/ 路径/ 的/ 终点/ 都/ 为/ u/ ./ 若/ C/ / C/ ,/ 则/ 起点/ s/ 到/ 终点/ t/ 的/ 最优/ 路径/ 不/ 可能/ 出现/ 在/ 以/ C/ 为根/ 的/ 子树中/ ./ 证明/ ./ 不失/ 一般性/ ,/ 设/ 珟/ C/ 为/ 在/ C/ 为根/ 的/ 子树中/ 终点/ 为/ t/ 的/ 路径/ ,/ 我们/ 只/ 需/ 证明/ 存在/ 另外/ 一条/ s/ 到/ t/ 的/ 路径/ p/ ,/ 满足/ f/ (/ p/ )/ </ f/ (/ 珟/ C/ )/ ./ 由/ 搜索/ 树/ 定义/ ,/ 得知/ C/ 为/ 珟/ C/ 的/ 路径/ 前缀/ ./ 令/ γ/ =/ 珟/ C/ \/ C/ 表示/ 珟/ C/ 中/ 去掉/ 前缀/ C/ 后/ 的/ 子/ 路径/ ,/ γ/ 的/ 起点/ 为/ u/ ./ 若/ // / v/ ∈/ γ/ \/ {/ u/ }/ ,/ 满足/ v/ ∈/ C/ ,/ 则/ 我们/ 可/ 连接/ C/ 和/ γ/ 得到/ 路径/ p/ (/ 因为/ C/ 的/ 终点/ 和/ γ/ 的/ 起点/ 都/ 为/ u/ )/ ,/ 且/ p/ 中/ 无/ 环路/ ./ 因为/ C/ / 可知/ f/ (/ p/ )/ </ f/ (/ 珟/ C/ )/ ./ 若/ / v/ ∈/ γ/ \/ {/ u/ }/ ,/ 满足/ v/ ∈/ C/ ,/ 令/ v/ 为/ 路径/ γ/ 中/ 最后/ 一个/ 出现/ 在/ C/ 的/ 顶点/ ./ 我们/ 考虑/ C/ 的/ 路径/ 前缀/ p/ ,/ p/ 的/ 终点/ 为/ v/ ,/ 则/ p/ / C/ ./ 又/ 因/ C/ / C/ ,/ 有/ p/ / C/ ./ 令/ γ/ 为/ γ/ 的/ 路径/ 后缀/ ,/ γ/ 的/ 起点/ 为/ v/ ./ 我们/ 连接/ p/ 和/ γ/ 得到/ 路径/ p/ ,/ p/ 中/ 无/ 环路/ ./ 因为/ p/ =/ p/ +/ γ/ / C/ +/ γ/ =/ 珟/ C/ ,/ 所以/ 有/ f/ (/ p/ )/ </ f/ (/ 珟/ C/ )/ ./ 在/ 介绍/ 第/ 2/ 个/ 剪枝/ 策略/ 前/ ,/ 我们/ 先/ 介绍/ 最优/ 路径/ 代价/ 下界/ 的/ 定义/ ./ 定义/ 4/ ./ 最优/ 路径/ 代价/ 下界/ ./ 给定/ 多维/ 代价/ 图/ G/ (/ V/ ,/ E/ )/ ,/ 图/ G/ 上/ 的/ 每/ 条边/ e/ 具有/ d/ 维/ 代价/ 向量/ 犮/ 狅/ 狊/ 狋/ (/ e/ )/ ,/ 这里/ ,/ 犮/ 狅/ 狊/ 狋/ (/ e/ )/ =/ (/ c1/ (/ e/ )/ ,/ c2/ (/ e/ )/ ,/ …/ cd/ (/ e/ )/ )/ ./ / 1/ ,/ / 2/ ,/ …/ ,/ / d/ 为/ d/ 张单/ 代价/ 加权/ 图/ ,/ / i/ =/ (/ V/ ,/ E/ )/ 称为/ 基于/ 图/ G/ 上/ 第/ i/ 维/ 代价/ 的/ 加权/ 图/ ,/ / i/ 中/ 任意/ 一条/ 边/ e/ 的/ 权值/ 为/ ci/ (/ e/ )/ ./ 对于/ 图/ G/ 中/ 任意/ 两点/ u/ ,/ v/ ∈/ V/ ,/ 我们/ 称/ / =/ / 1/ ,/ / 2/ ,/ …/ ,/ / {/ 集合/ ,/ 其中/ / i/ 为/ / i/ 上/ u/ 到/ v/ 的/ 加权/ 最短/ 路径/ ,/ 路径/ / i/ 的/ 代价/ 为/ φ/ i/ ./ 我们/ 称/ 代价/ 向量/ Φ/ u/ ,/ v/ =/ (/ φ/ 1/ ,/ φ/ 2/ ,/ …/ ,/ φ/ d/ )/ 为/ 多维/ 代价/ 图/ G/ 上/ u/ 到/ v/ 的/ 最优/ 路径/ 代价/ 下界/ ./ 对图/ G/ 上/ u/ 到/ v/ 的/ 任意/ 一条/ 路径/ p/ ∈/ Pu/ ,/ v/ ,/ 令其/ 代价/ 向量/ 为/ 犮/ 狅/ 狊/ 狋/ (/ p/ )/ =/ (/ c1/ (/ p/ )/ ,/ c2/ (/ p/ )/ ,/ …/ ,/ cd/ (/ p/ )/ )/ ,/ 则/ 我们/ 有/ Φ/ u/ ,/ v/ / p/ ,/ 即/ 对/ / i/ ,/ 1/ / i/ / d/ ,/ 有/ φ/ i/ / ci/ (/ p/ )/ ./ 引理/ 3/ 说明/ Φ/ u/ ,/ v/ 是/ 图/ G/ 上/ u/ 到/ v/ 最优/ 路径/ 的/ 一个/ 严格/ 下界/ ./ 引理/ 3/ ./ Φ/ u/ ,/ v/ 是/ 图/ G/ 上/ u/ 到/ v/ 的/ 最优/ 路径/ 的/ 一个/ 严格/ 下界/ ,/ 即/ 不/ 存在/ 另/ 一个/ 下界/ Φ/ u/ ,/ v/ ,/ 对/ / p/ ∈/ Pu/ ,/ v/ 和/ Φ/ u/ ,/ v/ ,/ 有/ Φ/ u/ ,/ v/ / p/ ∧/ Φ/ u/ ,/ v/ / Φ/ u/ ,/ v/ ./ 证明/ ./ 反证法/ ./ 假设/ 存在/ 一个/ Φ/ u/ ,/ v/ ,/ 其/ 满足/ Φ/ u/ ,/ v/ / Φ/ u/ ,/ v/ ,/ 则/ / i/ (/ 1/ / i/ / d/ )/ ,/ 使得/ φ/ i/ >/ φ/ i/ ./ 另一方面/ ,/ 因为/ / i/ ∈/ / 和/ Φ/ u/ ,/ v/ / / i/ ,/ 所以/ 有/ φ/ i/ / φ/ i/ ./ 矛盾/ ./ 证毕/ ./ 基于/ 最优/ 路径/ 代价/ 下界/ 的/ 剪枝/ 规则/ :/ 我们/ 预计/ 算出/ 图/ G/ 上/ 任意/ 两点/ u/ ,/ v/ 之间/ 的/ 最优/ 路径/ 代价/ 下界/ Φ/ u/ ,/ v/ ./ 给定/ 节点/ C/ ,/ C/ 的/ 终点/ 为/ u/ ,/ 我们/ 根据/ u/ 到/ t/ 的/ 最优/ 路径/ 代价/ 下界/ 估计/ 一个/ 下界/ LB/ (/ C/ )/ ,/ LB/ (/ C/ )/ =/ f/ (/ C/ +/ Φ/ u/ ,/ t/ )/ ,/ LB/ (/ C/ )/ 表示/ 在/ 以/ C/ 为根/ 的/ 子树中/ 终点/ 为/ t/ 的/ 路径/ 的/ 得分/ 下界/ ./ 若/ LB/ (/ C/ )/ / τ/ ,/ 以/ C/ 为根/ 的/ 子树/ 可以/ 被/ 安全/ 地/ 剪除/ ,/ 引理/ 4/ 保证/ 了/ 该/ 剪枝/ 规则/ 的/ 正确性/ ./ 引理/ 4/ ./ C/ 是/ 搜索/ 树上/ 的/ 节点/ 且/ LB/ (/ C/ )/ / τ/ ,/ 不失/ 一般性/ ,/ 令/ 珟/ C/ 为/ 在/ C/ 为根/ 的/ 子树中/ 终点/ 为/ t/ 的/ 路径/ ,/ 则/ f/ (/ 珟/ C/ )/ / τ/ ./ 证明/ ./ C/ 所/ 代表/ 路径/ 的/ 终点/ 为/ u/ ,/ C/ 为/ 珟/ C/ 的/ 路径/ 前缀/ ,/ 则/ γ/ =/ 珟/ C/ \/ C/ 表示/ 珟/ C/ 中/ 去掉/ 前缀/ C/ 后/ 的/ 子路/ Page7/ 径且/ γ/ 的/ 起点/ 为/ u/ ./ γ/ 是/ u/ 到/ t/ 的/ 一条/ 路径/ ./ 根据/ u/ 到/ t/ 的/ 最优/ 路径/ 代价/ 下界/ 的/ 定义/ ,/ 我们/ 有/ Φ/ u/ ,/ t/ / γ/ ./ 因此/ ,/ C/ +/ Φ/ u/ ,/ t/ / C/ +/ γ/ ./ 根据/ 函数/ f/ (/ ·/ )/ 的/ 单调/ 性/ ,/ f/ (/ 珟/ C/ )/ =/ f/ (/ C/ +/ γ/ )/ / f/ (/ C/ +/ Φ/ u/ ,/ t/ )/ =/ LB/ (/ C/ )/ / τ/ ./ 证毕/ ./ 算法/ 1/ 给出/ 了/ best/ -/ firstsearch/ 分支/ 界限/ 法/ 计算/ 最优/ 路径/ 的/ 流程/ ./ 实际上/ ,/ 图中会/ 存在/ 大量/ 不/ 属于/ 最优/ 路径/ 的/ 顶点/ ,/ 探索/ 这些/ 顶点/ 会/ 带来/ 不必要/ 的/ 时间/ 开销/ ./ 将/ 这些/ 顶点/ 从图/ 中/ 删除/ ,/ 不会/ 影响/ 查询/ 结果/ 的/ 正确性/ ./ 因此/ ,/ 如何/ 判定/ 一个/ 顶点/ 与/ 最优/ 路径/ 无关/ ,/ 成为/ 了/ 一个/ 关键/ 的/ 问题/ ./ 在/ 第/ 4/ 节/ ,/ 我们/ 介绍/ 一种/ 快速/ 顶点/ 过滤/ 技术/ ,/ 可以/ 有效/ 地/ 从/ 图/ 中/ 过滤/ 掉/ 大部分/ 不/ 属于/ 最优/ 路径/ 的/ 顶点/ ,/ 从而/ 缩减/ 图/ 的/ 规模/ ./ 3.3/ 快速/ 计算/ 和/ 更新/ 阈值/ 在/ 搜索/ 过程/ 中/ ,/ 阈值/ τ/ 是/ 一个/ 关键/ 的/ 参数/ ./ 显然/ ,/ τ/ 的/ 取值/ 越小/ ,/ 其/ 剪枝/ 能力/ 越强/ ./ 然而/ ,/ 在/ 算法/ 开始/ 阶段/ ,/ τ/ 被/ 初始化/ 为/ ,/ 直到/ 探索/ 到/ 一个/ 终点/ 为/ t/ 的/ 路径/ C/ 时/ ,/ 裁剪/ 规则/ 才/ 开始/ 生效/ ./ 因此/ ,/ 裁剪/ 规则/ 在/ 算法/ 开始/ 阶段/ 的/ 裁剪/ 能力/ 非常低/ ./ 下面/ ,/ 我们/ 将/ 给出/ 一个/ 预先/ 快速/ 计算/ τ/ 以及/ 搜索/ 过程/ 中/ 快速/ 更新/ τ/ 的/ 方法/ ./ 给定/ 多维/ 代价/ 图/ G/ (/ V/ ,/ E/ )/ 、/ 起点/ s/ 和/ 终点/ t/ ,/ 考虑/ s/ 到/ t/ 的/ 单/ 代价/ 最短/ 路径/ 集合/ / =/ {/ / 1/ ,/ / 2/ ,/ …/ ,/ / d/ }/ ./ 显然/ ,/ / i/ 也/ 是/ 多维/ 代价/ 图/ G/ (/ V/ ,/ E/ )/ 上/ 的/ 一条/ 路径/ ./ 此外/ ,/ 我们/ 找到/ s/ 到/ t/ 的/ 跳数/ 最少/ 的/ 路径/ / hop/ ,/ 即/ 对/ / p/ ∈/ Ps/ ,/ t/ ,/ 满足/ / hop/ / p/ ,/ |/ p/ |/ 为/ p/ 中/ 顶点/ 个数/ ./ 我们/ 初始化/ τ/ =/ minf/ / (/ )/ i/ ,/ f/ (/ / hop/ )/ |/ 1/ / i/ / 显然/ ,/ 最优/ 路径/ sp/ (/ s/ ,/ t/ )/ 的/ 评分/ 满足/ 如下/ 关系/ :/ f/ (/ Φ/ s/ ,/ t/ )/ / f/ (/ sp/ (/ s/ ,/ t/ )/ )/ / τ/ ,/ f/ (/ Φ/ s/ ,/ t/ )/ 为/ 代价/ 向量/ Φ/ s/ ,/ t/ 的/ 得分/ ./ 实验/ 证明/ ,/ 该/ 方法/ 给出/ 的/ 初始/ 阈值/ τ/ 具有/ 很强/ 的/ 剪枝/ 能力/ ./ 我们/ 同时/ 给出/ 一种/ 在/ 搜索/ 过程/ 中/ 快速/ 更新/ τ/ 的/ 方法/ ./ 当/ 路径/ C/ 从/ 最小/ 堆/ H/ 弹出/ 时/ ,/ 假设/ 其/ 终点/ 为/ u/ ,/ 同样/ 考虑/ u/ 到/ t/ 的/ 单/ 代价/ 最短/ 路径/ 集合/ / =/ / 1/ ,/ / 2/ ,/ …/ ,/ / {/ 一个/ 得分/ 上界/ UB/ (/ C/ )/ ,/ (/ )/ UBC/ =/ min/ {/ f/ (/ C/ +/ / i/ )/ |/ 1/ / i/ / d/ }/ ./ 若/ UB/ (/ C/ )/ </ τ/ ,/ 我们/ 可/ 将/ τ/ 更新/ 为/ UB/ (/ C/ )/ ./ 引理/ 5/ 保证/ 了/ 该/ 更新/ 规则/ 的/ 正确性/ ./ 算法/ 1/ ./ Find/ -/ sp/ (/ s/ ,/ t/ )/ -/ Best/ -/ First/ -/ Search/ (/ G/ ,/ s/ ,/ t/ ,/ f/ (/ ·/ )/ )/ ./ 输入/ :/ 多维/ 代价/ 图/ G/ ,/ 起点/ s/ ,/ 终点/ t/ ,/ 评分/ 函数/ f/ (/ ·/ )/ 输出/ :/ 最优/ 路径/ sp/ (/ s/ ,/ t/ )/ 1/ ./ τ/ ←/ ,/ sp/ (/ s/ ,/ t/ )/ ←/ / ,/ H/ ←/ {/ s/ }/ ,/ cost/ (/ {/ s/ }/ )/ ←/ 0/ ;/ 2/ ./ WHILEH/ ≠/ / DO3/ ./ letCbethepathbypoppingupthetopelementfrom4/ ./ IFf/ (/ C/ )/ / τ/ THEN5/ ./ BREAK/ ;/ 6/ ./ FOREACHvertexv/ ,/ v/ ∈/ N/ +/ (/ u/ )/ ∧/ v/ / CDO7/ ./ C/ ←/ C/ ∪/ {/ v/ }/ ;/ f/ (/ C/ )/ ←/ f/ (/ C/ +/ (/ u/ ,/ v/ )/ )/ ;/ 8/ ./ IFv/ =/ tTHEN9/ ./ IFf/ (/ C/ )/ </ τ/ THEN10/ ./ τ/ ←/ f/ (/ C/ )/ ;/ sp/ (/ s/ ,/ t/ )/ ←/ C/ ;/ continue/ ;/ 11/ ./ ELSE12/ ./ LB/ (/ C/ )/ ←/ f/ (/ C/ +/ Φ/ v/ ,/ t/ )/ ;/ 13/ ./ IFf/ (/ C/ )/ / τ/ THEN14/ ./ prunethesubtreerootedatC/ ;/ continue/ ;/ 15/ ./ IF/ / p/ ∈/ SKYPs/ ,/ v/ ,/ p/ / CTHEN16/ ./ prunethesubtreerootedatC/ ;/ continue/ ;/ 17/ ./ ELSE18/ ./ SKYPs/ ,/ v/ ←/ SKYPs/ ,/ v/ ∪/ {/ C/ }/ ;/ 19/ ./ FOREACHp/ ∈/ SKYPs/ ,/ vDO20/ ./ IFC/ / pTHEN21/ ./ SKYPs/ ,/ v/ ←/ SKYPs/ ,/ v/ -/ {/ p/ }/ ;/ 22/ ./ IFLB/ (/ C/ )/ / τ/ THEN23/ ./ prunethesubtreerootedatC/ ;/ continue/ ;/ 24/ ./ insertCintoHaccordingtof/ (/ C/ )/ ;/ 25/ ./ RETURNsp/ (/ s/ ,/ t/ )/ ,/ τ/ 引理/ 5/ ./ 设/ C/ 是/ 搜索/ 树上/ 的/ 一个/ 节点/ ,/ C/ 所/ 代表/ 路径/ 的/ 终点/ 为/ u/ ,/ C/ 的/ 最优/ 路径/ 得分/ 上界/ 为/ UB/ (/ C/ )/ ,/ 则/ 存在/ 一条/ s/ 到/ t/ 路径/ 的/ p/ ,/ f/ (/ p/ )/ / UB/ (/ C/ )/ ./ 证明/ ./ 设/ / min/ 为/ 使得/ f/ (/ C/ +/ / i/ )/ (/ 1/ / i/ / d/ )/ 取值/ 最小/ 的/ 路径/ / i/ ,/ 则/ / min/ 是/ u/ 到/ t/ 的/ 一条/ 路径/ ./ 若/ / min/ ∩/ C/ =/ {/ u/ }/ ,/ 则/ 连接/ C/ 和/ / min/ 得到/ 一条/ 路径/ p/ ,/ 其/ 代价/ 得分/ 即为/ UB/ (/ C/ )/ ./ 若/ / min/ ∩/ C/ ≠/ {/ u/ }/ ,/ 则/ {/ u/ }/ / / min/ ∩/ C/ ./ 令/ v/ 是/ 路径/ / min/ 中/ 最后/ 一个/ 出现/ 在/ C/ 中/ 的/ 顶点/ ,/ 即/ 对/ / v/ ∈/ / min/ ∩/ C/ ,/ v/ 在/ / min/ 中/ 位于/ v/ 之前/ ./ 令/ C/ 为/ C/ 中/ 的/ 终点/ 为/ v/ 的/ 路径/ 前缀/ ,/ / min/ 为/ / min/ 中/ 起点/ 为/ v/ 的/ 路径/ 后缀/ ./ 我们/ 连接/ C/ 和/ / min/ 得到/ 新/ 路径/ p/ ,/ p/ 中/ 无/ 环路/ ./ 因为/ p/ / C/ +/ / min/ ,/ 所以/ (/ )/ fp/ / fC/ +/ / (/ )/ min/ / (/ )/ UBC/ ./ 4/ 顶点/ 过滤/ 算法/ 本节/ 中/ ,/ 我们/ 提出/ 一个/ 顶点/ 过滤/ 算法/ ,/ 该/ 算法/ 可以/ 快速/ 地/ 从/ 多维/ 代价/ 图/ G/ (/ V/ ,/ E/ )/ 中/ 过滤/ 掉/ 大部分/ 不/ 属于/ 最优/ 路径/ 的/ 顶点/ ,/ 从而/ 有效/ 地/ 缩减/ 图/ G/ (/ V/ ,/ E/ )/ 的/ 规模/ ./ 我们/ 首先/ 介绍/ 过滤/ 索引/ ,/ 然后/ 给出/ 过滤/ 算法/ ./ 算法/ 2/ ./ Vertex/ -/ Filtering/ (/ G/ ,/ s/ ,/ t/ ,/ f/ (/ ·/ )/ )/ ./ 输入/ :/ 多维/ 代价/ 图/ G/ ,/ 起点/ s/ ,/ 终点/ t/ ,/ 评分/ 函数/ f/ (/ ·/ )/ 输出/ :/ 最优/ 路径/ sp/ (/ s/ ,/ t/ )/ Page81/ ./ τ/ ←/ minf/ / (/ )/ i/ ,/ f/ (/ / hop/ )/ |/ 1/ / i/ / 2/ ./ FOREACHu/ ∈/ VDO3/ ./ IF/ τ/ </ f/ (/ Φ/ s/ ,/ u/ +/ Φ/ u/ ,/ t/ )/ THEN4/ ./ V/ ←/ V/ -/ {/ u/ }/ ;/ 5/ ./ FIND/ -/ sp/ (/ s/ ,/ t/ )/ -/ Best/ -/ First/ -/ Search/ (/ G/ ,/ s/ ,/ t/ ,/ f/ (/ ·/ )/ )/ ;/ 6/ ./ RETURNsp/ (/ s/ ,/ t/ )/ ,/ τ/ 4.1/ 过滤/ 索引/ 过滤/ 索引/ 是/ 一个/ n/ ×/ n/ 的/ 矩阵/ ,/ n/ 是/ 图/ G/ 上/ 的/ 顶点/ 个数/ ./ 矩阵/ 中/ 的/ 行/ 代表/ 起点/ ,/ 列/ 代表/ 终点/ ./ 矩阵/ 中/ 每个/ 元素/ Au/ ,/ v/ 包括/ 两个/ 部分/ :/ (/ 1/ )/ 顶点/ u/ 到/ 顶点/ v/ 的/ 最优/ 路径/ 代价/ 下界/ Φ/ u/ ,/ v/ ;/ (/ 2/ )/ u/ 到/ v/ 的/ 单/ 代价/ 最短/ 路径/ 集合/ / =/ / 1/ ,/ / 2/ ,/ …/ ,/ / {/ 跳数/ 最少/ 的/ 路径/ ./ 过滤/ 索引/ 的/ 空间/ 开销/ 为/ O/ (/ n2/ )/ ./ 4.2/ 过滤/ 算法/ 当/ 查询/ 给定/ 起点/ s/ 、/ 终点/ t/ 以及/ 评分/ 函数/ f/ (/ ·/ )/ 后/ ,/ 根据/ 过滤/ 索引/ ,/ 可以/ 确定/ 图中/ 哪些/ 顶点/ 能够/ 在/ 本次/ 查询/ 中/ 被/ 安全/ 的/ 删除/ ./ 我们/ 首先/ 根据/ s/ 到/ t/ 的/ 单/ 代价/ 最短/ 路径/ 集合/ 和/ / hop/ 计算/ s/ 到/ t/ 的/ 最优/ 路径/ 得分/ 的/ 一个/ 上/ 界/ τ/ ,/ τ/ =/ min/ {/ f/ / (/ )/ i/ ,/ f/ (/ / hop/ )/ |/ 1/ / i/ / d/ }/ ./ 若/ / =/ / ,/ 则/ 算法/ 直接/ 返回/ s/ 不可/ 到达/ t/ ./ 对于/ 一个/ 顶点/ u/ ,/ 如果/ 有/ τ/ </ f/ (/ Φ/ s/ ,/ u/ +/ Φ/ u/ ,/ t/ )/ ,/ 则/ 顶点/ u/ 可/ 从/ 图/ G/ 中/ 删去/ ,/ 也就是说/ ,/ s/ 到/ t/ 的/ 最优/ 路径/ 一定/ 不会/ 经过/ 顶点/ u/ ./ 定理/ 1/ 保证/ 了/ 该/ 算法/ 的/ 正确性/ ./ 定理/ 1/ ./ 给定/ 多维/ 代价/ 图/ G/ 、/ 起点/ s/ 和/ 终点/ t/ 以及/ 评分/ 函数/ f/ (/ ·/ )/ ./ / 为/ 过滤/ 索引/ 中/ s/ 到/ t/ 的/ 单/ 代价/ 最短/ 路径/ 集合/ ,/ / ≠/ / ./ 令/ τ/ 为/ 根据/ / 计算/ 的/ 起点/ s/ 到/ 终点/ t/ 的/ 最优/ 路径/ 的/ 一个/ 得分/ 上/ 界/ ,/ 这里/ τ/ =/ minf/ / (/ )/ i/ ,/ f/ (/ / hop/ )/ |/ 1/ / i/ / 点/ u/ ,/ 如果/ τ/ </ f/ (/ Φ/ s/ ,/ u/ +/ Φ/ u/ ,/ t/ )/ ,/ Φ/ s/ ,/ u/ 和/ Φ/ u/ ,/ t/ 分别/ 为/ s/ 到/ u/ 和/ u/ 到/ t/ 的/ 最优/ 路径/ 代价/ 下界/ ,/ 则/ s/ 到/ t/ 的/ 最优/ 路径/ 必定/ 不/ 经过/ u/ ./ 证明/ ./ 只/ 需/ 证明/ 对/ 任何/ 一条/ 经过/ u/ 的/ 路径/ p/ ,/ 都/ 存在/ 一条/ 不/ 经过/ u/ 的/ 路径/ p/ ,/ 有/ f/ (/ p/ )/ </ f/ (/ p/ )/ ./ 不失/ 一般性/ ,/ 令/ p/ 是/ 一条/ 经过/ u/ 的/ 路径/ ,/ p/ 由/ 两个/ 片段/ 接/ 组成/ :/ (/ 1/ )/ s/ 到/ u/ 的/ 片段/ ps/ ,/ u/ ;/ (/ 2/ )/ u/ 到/ t/ 的/ 片段/ pu/ ,/ t/ ./ 根据/ 最优/ 路径/ 代价/ 下界/ 的/ 定义/ ,/ 我们/ 可知/ Φ/ s/ ,/ u/ / ps/ ,/ u/ 和/ Φ/ u/ ,/ t/ / pu/ ,/ t/ ./ 因此/ ,/ Φ/ s/ ,/ u/ +/ Φ/ u/ ,/ t/ / p/ ./ 由/ 函数/ f/ (/ ·/ )/ 的/ 单调/ 性/ ,/ 得到/ f/ (/ Φ/ s/ ,/ u/ +/ Φ/ u/ ,/ t/ )/ / f/ (/ p/ )/ ./ 令/ p/ 为/ / ∪/ / ho/ {/ }/ p/ 中/ 取得/ 最小/ 评分/ 值/ 的/ 路径/ ,/ 即/ f/ (/ p/ )/ =/ τ/ ./ p/ 是/ s/ 到/ t/ 的/ 一条/ 路径/ ,/ p/ 不/ 经过/ u/ ,/ 否则/ 与/ τ/ </ f/ (/ Φ/ s/ ,/ u/ +/ Φ/ u/ ,/ t/ )/ 矛盾/ ./ 显然/ ,/ 我们/ 有/ f/ (/ p/ )/ </ f/ (/ Φ/ s/ ,/ u/ +/ Φ/ u/ ,/ t/ )/ / f/ (/ p/ )/ ./ 在/ 图/ 1/ 中/ 所示/ 的/ 多维/ 代价/ 图/ G/ 中/ ,/ 我们/ 选取/ 评分/ 函数/ f/ (/ x/ ,/ y/ )/ =/ x2/ +/ y2/ ./ 目标/ 为/ 计算/ 出/ 基于/ 函数/ f/ (/ x/ ,/ y/ )/ 的/ 由/ s/ 到/ t/ 的/ 最优/ 路径/ ./ 我们/ 发现/ 路径/ p/ :/ s/ →/ {/ a/ →/ c/ →/ d/ →/ t/ 是/ s/ 到/ t/ 的/ 一条/ 单/ 代价/ 最短/ 路径/ ,/ 且/ 其/ 得分/ 113/ 在/ 所有/ 单/ 代价/ 最短/ 路径/ 中/ 最小/ ./ 因此/ ,/ 我们/ 选取/ τ/ =/ 113/ ./ 根据/ 定理/ 1/ ,/ 顶点/ b/ 和/ 顶点/ r/ 以及/ 它们/ 所/ 连接/ 的/ 边/ 可以/ 从图/ G/ 中/ 移除/ ./ 过滤/ 后/ 的/ 图/ G/ 只/ 包含/ 顶点/ s/ ,/ a/ ,/ c/ ,/ d/ ,/ t/ ./ 算法/ 2/ 给出/ 了/ 顶点/ 过滤/ 算法/ 的/ 流程/ ./ 顶点/ 过滤/ 算法/ 对图/ 中/ 每/ 一个/ 顶点/ u/ 都/ 要/ 计算/ f/ (/ Φ/ s/ ,/ u/ +/ Φ/ u/ ,/ t/ )/ ,/ 该/ 计算/ 过程/ 的/ 时间/ 复杂度/ 为/ O/ (/ 1/ )/ ./ 因此/ ,/ 顶点/ 过滤/ 算法/ 的/ 时间/ 复杂性/ 为/ O/ (/ n/ )/ ./ 算法/ 2/ 得到/ 新/ 的/ 顶点/ 集合/ 珟/ V/ / V/ ,/ 珟/ V/ 是/ V/ 中/ 所有/ 不可/ 被/ 过滤/ 掉/ 的/ 顶点/ 集合/ ./ 我们/ 计算/ 珟/ V/ 在/ G/ (/ V/ ,/ E/ )/ 上/ 的/ 诱导/ 子图/ G/ (/ 珟/ V/ )/ ,/ 并/ 在/ G/ (/ 珟/ V/ )/ 上/ 调用/ 算法/ 1/ ./ 实验/ 证明/ ,/ 过滤/ 算法/ 具有/ 十分/ 优秀/ 的/ 过滤/ 能力/ ./ 5/ 实验/ 结果/ 和/ 分析/ 5.1/ 数据/ 集/ 描述/ 和/ 实验/ 设置/ 我们/ 在/ 两个/ 真实/ 的/ 图/ 数据/ 集上/ 实现/ 了/ 本文/ 的/ 算法/ ,/ 并/ 与/ 目前/ 计算/ 多/ 标准/ Pareto/ 最优/ 路径/ 的/ 最/ 有效/ 方法/ 进行/ 了/ 比较/ ./ 所有/ 实验/ 均/ 在/ 主频/ 为/ 2.5/ GHz/ 的/ IntelCorei5CPU/ 和/ 内存/ 为/ 8GB/ 的/ PC机/ 上/ 完成/ ./ 我们/ 使用/ 的/ 操作系统/ 为/ Windows7/ ./ 我们/ 采用/ 两个/ 真实/ 数据/ 集/ 进行/ 算法/ 性能/ 测试/ ./ Californiaroadnetwork/ :/ 本/ 数据/ 集/ 描述/ 的/ 是/ 美国/ 加利福尼亚州/ 道路交通/ 网/ ,/ 包括/ 21047/ 个/ 顶点/ 和/ 21692/ 条边/ ./ 该/ 网络/ 是/ 一个/ 无向/ 图/ ./ 本/ 数据/ 来自/ http/ :/ // // www/ ./ maproom/ ./ psu/ ./ edu/ // dcw/ ./ Slashdotdataset/ :/ Slashdot/ 是/ 一个/ 技术/ 新闻/ 网站/ ./ 本/ 数据/ 集中/ ,/ 用户/ 代表/ 顶点/ ,/ 顶点/ u/ 到/ v/ 的/ 边/ 代表/ 用户/ u/ 赞同/ 用户/ v/ 的/ 评论/ ./ 本/ 数据/ 包括/ 20639/ 个/ 顶点/ 和/ 87627/ 条边/ ./ 该/ 网络/ 是/ 一个/ 有向图/ ,/ 本/ 数据/ 来自/ http/ :/ // // slashdot/ ./ org/ // ./ 针对/ 以上/ 数据/ 集中/ 的/ 每/ 一条/ 边/ ,/ 我们/ 随机/ 生成/ d/ (/ ∈/ {/ 2/ ,/ …/ ,/ 5/ }/ )/ 维/ 代价/ ./ 对/ 每/ 一组/ 数据/ 集/ ,/ 我们/ 分别/ 生成/ 规模/ 为/ 1000/ 的/ 查询/ 集合/ ,/ 实验/ 中/ 的/ 结果/ ,/ 是/ 每个/ 查询/ 集合/ 的/ 平均值/ ./ 我们/ 选取/ 评分/ 函数/ f/ (/ x/ ,/ y/ )/ =/ x2/ +/ y2/ ./ 我们/ 在/ 实验/ 中/ 主要/ 考察/ 了/ 以下/ 几/ 方面/ 的/ 内容/ :/ (/ 1/ )/ 图中/ 代价/ 维度/ d/ 对/ 算法/ 性能/ 的/ 影响/ ;/ (/ 2/ )/ 各个/ 优化/ 策略/ 对/ 算法/ 性能/ 的/ 影响/ ;/ (/ 3/ )/ 过滤/ 算法/ 对/ 算法/ 性能/ 的/ 影响/ ./ 算法/ 性能/ 考察/ 的/ 指标/ 为/ :/ (/ 1/ )/ 算法/ 运行/ 过程/ 中/ 访问/ 的/ 搜索/ 树/ 节点/ 个数/ ;/ (/ 2/ )/ 算法/ 执行/ 时间/ ;/ (/ 3/ )/ 过滤/ 算法/ 过滤/ 的/ 顶点/ 比例/ 和/ 运行/ 时间/ ./ 我们/ 与/ SHARC/ 算法/ 进行/ 了/ 比较/ ./ SHARC/ 算/ Page9/ 法是/ 目前/ 计算/ 多/ 标准/ Pareto/ 最优/ 路径/ 最/ 有效/ 的/ 方法/ [/ 10/ ]/ ./ 我们/ 先/ 利用/ SHARC/ 计算/ 出/ 起点/ 到/ 终点/ 的/ 全部/ Pareto/ 路径/ ,/ 再/ 分别/ 计算/ 这些/ Pareto/ 最优/ 路径/ 在/ 函数/ f/ (/ x/ ,/ y/ )/ 下/ 的/ 评分/ 并/ 找到/ 评分/ 最优/ 的/ 路径/ ./ 5.2/ 实验/ 结果/ Exp/ -/ 1/ :/ 代价/ 维度/ 对/ 算法/ 性能/ 的/ 影响/ ./ 我们/ 考察/ 了/ 搜索/ 树中/ 被/ 算法/ 访问/ 的/ 节点/ 数量/ 和/ 算法/ 运行/ 时间/ 与/ 代价/ 维度/ d/ 的/ 关系/ ./ 我们/ 考察/ 的/ 算法/ 有/ :/ BASIC/ 、/ OPT/ 和/ FILTER/ -/ OPT/ ./ BASIC/ 是/ 只/ 应用/ 了/ 基本/ 剪枝/ 策略/ 的/ 分支/ 界限/ 法/ ,/ OPT/ 是/ 应用/ 了/ 优化/ 剪枝/ 策略/ 以及/ 快速/ 计算/ 和/ 更新/ 阈值/ 策略/ 的/ 分支/ 界限/ 法/ ,/ 而/ FILTER/ -/ OPT/ 是/ 应用/ 了/ 顶点/ 过滤/ 算法/ 的/ OPT/ 算法/ ./ 图/ 3/ 给出/ 了/ Californiaroadnetwork/ 上/ 的/ 结果/ ./ 图/ 3/ (/ a/ )/ 中/ ,/ 我们/ 发现/ 搜索/ 节点/ 数量/ 随着/ d/ 的/ 增长/ 而/ 缓慢/ 增长/ ./ 其中/ ,/ OPT/ 增长/ 较/ 快/ ,/ 这/ 是因为/ 随着/ 维度/ 的/ 增加/ ,/ 基于/ skyline/ 路径/ 的/ 剪枝/ 规则/ 能力/ 变弱/ ./ 例如/ ,/ 2/ 维/ 代价/ 下/ ,/ 路径/ p/ 被/ p/ 支配/ ,/ 但/ 在/ 3/ 维/ 代价/ 下/ ,/ 该/ 支配/ 关系/ 未必/ 成立/ ./ FILTER/ -/ OPT/ 增长/ 较/ 小/ ,/ 这/ 是因为/ 过滤/ 算法/ 已经/ 过滤/ 掉/ 大量/ 的/ 顶点/ ./ 通过/ 图/ 3/ (/ a/ )/ ,/ 我们/ 发现/ OPT/ 搜索/ 的/ 节点/ 数量/ 比/ BASIC/ 减少/ 了/ 50/ %/ 以上/ ,/ 而/ FILTER/ -/ OPT/ 搜索/ 的/ 节点/ 数量/ 比/ OPT/ 减少/ 了/ 60/ %/ 以上/ ./ 因此/ ,/ 如图/ 3/ (/ b/ )/ 所示/ ,/ FILTER/ -/ OPT/ 的/ 运行/ 时间/ 比/ OPT/ 少/ 了/ 60/ %/ 以上/ ,/ 而/ OPT/ 的/ 运行/ 时间/ 比/ BASIC/ 少/ 50/ %/ 以上/ ./ 图/ 4/ 给出/ 了/ Slashdotdataset/ 上/ 的/ 结果/ ./ 同样/ 地/ ,/ 由于/ FILTER/ -/ OPT/ 采取/ 了/ 全部/ 优化/ 技术/ ,/ 它/ 搜索/ 的/ 节点/ 数量/ 最少/ ,/ 运行/ 时间/ 最短/ ,/ OPT/ 次之/ ,/ BASIC/ 的/ 性能/ 最差/ ./ Exp/ -/ 2/ :/ 各个/ 优化/ 策略/ 对/ 算法/ 性能/ 的/ 影响/ ./ 在/ 这部分/ 实验/ 中/ ,/ 我们/ 分析/ 了/ 各个/ 优化/ 策略/ 对/ 算法/ 性能/ 的/ 影响/ ./ 其中/ ,/ OPT/ 是/ 应用/ 了/ 全部/ 优化/ 策略/ 的/ 算法/ ,/ SP/ 是/ 指/ 从/ OPT/ 中/ 移除/ 基于/ skyline/ 路径/ 的/ 剪枝/ 规则/ 的/ 算法/ ,/ LB/ 是/ 指/ 从/ OPT/ 中/ 移除/ 基于/ 最优/ 路径/ 代价/ 下界/ 剪枝/ 规则/ 的/ 算法/ ,/ FT/ 是/ 指/ 从/ OPT/ 中/ 移除/ 快速/ 计算/ 和/ 更新/ 阈值/ 策略/ 的/ 算法/ ./ 我们/ 从/ 搜索/ 树上/ 被/ 访问/ 的/ 节点/ 数量/ 和/ 算法/ 运行/ 时间/ 两个/ 方面/ 考察/ 了/ 算法/ 的/ 性能/ ./ 图/ 5/ 给出/ 了/ Californiaroadnetwork/ 上/ 的/ 实验/ 结果/ ./ 我们/ 发现/ OPT/ 搜索/ 的/ 节点/ 数量/ 和/ 运行/ 时间/ 比/ 其它/ 算法/ 都/ 要/ 少/ ,/ 这/ 说明/ 各个/ 优化/ 策略/ 都/ 能/ 剪除/ 大量/ 的/ 非/ 最优/ 解/ 的/ 路径/ ./ 其中/ ,/ 基于/ 最优/ 路径/ 代价/ 下界/ 的/ 剪枝/ 规则/ (/ LB/ )/ 和/ 快速/ 计算/ 更新/ 阈值/ 的/ 策略/ (/ FT/ )/ 效果/ 最/ 明显/ ./ 在/ 图/ 5/ (/ c/ )/ 中/ ,/ 我们/ 比较/ 了/ 基本/ 剪枝/ 规则/ (/ BP/ )/ 、/ 基于/ skyline/ 路径/ 的/ 剪枝/ 规则/ (/ SP/ )/ 和/ 基于/ 最优/ 路径/ 代价/ 下界/ 剪枝/ 规则/ (/ LB/ )/ 裁剪/ 子树/ 的/ 能力/ ./ 我们/ 发现/ 基本/ 剪枝/ 规则/ (/ BP/ )/ 和/ 基于/ 最优/ 路径/ 代价/ 下界/ (/ LB/ )/ 的/ 剪枝/ 规则/ 裁剪/ 子树/ 的/ 能力/ 最强/ ./ 图/ 6/ 给出/ 了/ Slashdotdataset/ 上/ 的/ 实验/ 结果/ ./ 我们/ 同样/ 发现/ 基于/ 最优/ 路径/ 代价/ 下界/ 剪枝/ 规则/ (/ LB/ )/ 的/ 剪枝/ 能力/ 最强/ ./ 与/ Californiaroadnetwork/ 不同/ ,/ 快速/ 计算/ 和/ 更新/ 阈值/ 的/ 策略/ (/ FT/ )/ 的/ 效果/ 减弱/ ./ 这/ 是因为/ ,/ 与/ Californiaroadnetwork/ 相比/ ,/ Slashdotdataset/ 的/ 密度/ 更高/ ,/ 因此/ 算法/ 可以/ 快速/ 探索/ 到/ 一条/ 起点/ 到/ 终点/ 的/ 路径/ ./ 因此/ ,/ 即使/ 在/ 算法/ 开始/ 阶段/ 不计/ Page10/ 算出/ 一个/ 初始/ 阈值/ ,/ 也/ 不会/ 对/ 算法/ 性能/ 造成/ 明显/ 的/ 影响/ ./ 同样/ 地/ ,/ 在/ 图/ 6/ (/ c/ )/ 中/ ,/ 我们/ 发现/ 基本/ 剪枝/ 规则/ (/ BP/ )/ 和/ 基于/ 最优/ 路径/ 代价/ 下界/ (/ LB/ )/ 的/ 剪枝/ 规则/ 裁剪/ 子树/ 的/ 能力/ 最强/ ./ Exp/ -/ 3/ :/ 顶点/ 过滤/ 算法/ 的/ 性能/ ./ 图/ 7/ 给出/ 了/ 顶点/ 过滤/ 算法/ 的/ 效力/ 和/ 效率/ ./ 如图/ 7/ (/ a/ )/ 所示/ ,/ 对/ Californiaroadnetwork/ ,/ 算法/ 至少/ 可/ 过滤/ 掉/ 80/ %/ 的/ 顶点/ ,/ 对/ Slashdotdataset/ ,/ 算法/ 至少/ 可/ 过滤/ 掉/ 60/ %/ 的/ 顶点/ ./ 这/ 是因为/ ,/ Slashdotdataset/ 的/ 密度/ 较/ 高/ ,/ 所以/ 其/ 过滤/ 效果/ 减低/ ./ 我们/ 同时/ 发现/ ,/ 过滤/ 效果/ 与/ 维度/ d/ 无/ 明显/ 关系/ ./ 如图/ 7/ (/ b/ )/ 所示/ ,/ 顶点/ 过滤/ 算法/ 具有/ 十分/ 优秀/ 的/ 时间/ 效率/ ,/ 且/ 其/ 运行/ 时间/ 不/ 受/ 维度/ d/ 影响/ ./ Exp/ -/ 4/ :/ 与/ SHARC/ 算法/ 的/ 比较/ ./ 我们/ 分别/ 在/ Californiaroadnetwork/ 和/ Slashdot/ 上/ 与/ SHARC/ 算法/ 进行/ 了/ 比较/ ./ 如图/ 8/ (/ a/ )/ 所示/ ,/ 在/ d/ =/ 2/ 时/ ,/ 本文/ 算法/ 比/ SHARC/ 要/ 快/ 4/ 倍/ 以上/ ,/ 这/ 是因为/ SHARC/ 要/ 计算/ 出/ 起点/ 到/ 终点/ 的/ 全部/ Pareto/ 最优/ 路径/ ,/ 而/ 本文/ 的/ 算法/ 只/ 需要/ 计算/ 出/ 一条/ 路径/ ./ 同时/ ,/ 我们/ 发现/ SHARC/ 的/ 运行/ 时间/ 随着/ 维度/ d/ 的/ 增加/ 而/ 快速增长/ ./ 这/ 是因为/ ,/ 随着/ 维度/ 的/ 增加/ ,/ Pareto/ 最优/ 路径/ 的/ 数量/ 也/ 急剧/ 增长/ ,/ 因此/ 在/ 高/ 维度/ 下/ ,/ 计算/ Pareto/ 最优/ 路径/ 的/ 方法/ 的/ 效率/ 很/ 低/ ./ 相反/ 地/ ,/ 我们/ 的/ 方法/ 不/ 需要/ 找到/ 全部/ Pareto/ 最优/ 路径/ ./ 绝大多数/ Pareto/ 路径/ ,/ 在/ 搜索/ 过程/ 中/ 很早/ 地/ 从/ 搜索/ 树中/ 被/ 剪除/ ./ 因此/ ,/ 在/ d/ =/ 5/ 时/ ,/ 我们/ 的/ 算法/ 几乎/ 100/ 倍/ 的/ 快/ 于/ SHARC/ 算法/ ./ 同样/ 地/ ,/ 如图/ 8/ (/ b/ )/ 所示/ ,/ 在/ Slashdot/ 数据/ 集上/ ,/ d/ =/ 2/ 时/ ,/ SHARC/ 算法/ 与/ 本文/ 算法/ 性能/ 相近/ ,/ 但/ 随着/ 维度/ 增加/ ,/ SHARC/ 算法/ 的/ 运行/ 时间/ 急剧/ 增长/ ,/ 而/ 我们/ 算法/ 的/ 运行/ 时间/ 增长/ 十分/ 平缓/ ./ 该组/ 实验/ 说明/ ,/ 计算/ 两点/ 间/ Pareto/ 最优/ 路径/ 的/ 方法/ 并/ 不/ 适合/ 于/ 本文/ 所/ 要/ 解决/ 的/ 问题/ ./ Exp/ -/ 5/ :/ 可扩展性/ 测试/ ./ 我们/ 在/ 人工合成/ 数据/ 集上/ 测试/ 了/ 我们/ 算法/ 的/ 可扩展性/ ./ 我们/ 生成/ 了/ 4/ 个/ 人工合成/ 数据/ 集/ ,/ 其/ 顶点/ 规模/ 分别/ 为/ 20k/ ,/ 40k/ ,/ 60k/ 和/ 80k/ ./ 我们/ 分别/ 在/ d/ =/ 2/ 和/ d/ =/ 3/ 的/ 情况/ 下/ ,/ 测试/ 了/ 这/ 4/ 个/ 人工合成/ 数据/ 集上/ 算法/ 搜索/ 的/ 节点/ 数量/ 和/ 算法/ 的/ 运行/ 时间/ ./ 图/ 9/ 给出/ 了/ 可扩展性/ 测试/ 的/ 结果/ ./ 我们/ 发现/ ,/ 算法/ 搜索/ 的/ 节点/ 数量/ (/ 图/ 9/ (/ a/ )/ )/ 和/ 算法/ 的/ 运行/ 时间/ (/ 图/ 9/ (/ b/ )/ )/ 都/ 随着/ 顶点/ 规模/ 的/ 增大/ 而/ 增加/ ./ 在/ 顶点/ 规模/ 为/ 80k/ 的/ 情况/ 下/ ,/ 本文/ 算法/ 的/ 运行/ 时间/ 仍然/ 小于/ 1s/ ,/ 这/ 说明/ 本文/ 算法/ 在/ 大规模/ 数据/ 集上/ 仍然/ 具有/ 十分/ 高效/ 的/ 效率/ ./ 该组/ 实验/ 验证/ 了/ 本文/ 算法/ 具有/ 十分/ 优秀/ 的/ 可扩展性/ ./ Page116/ 相关/ 工作/ Dijkstra/ 算法/ 是/ 最/ 短/ 路径/ 查询/ 的/ 经典/ 算法/ ./ 当图/ 的/ 规模/ 很大/ 时/ ,/ Dijkstra/ 算法/ 有着/ 较大/ 的/ 时间/ 开销/ ./ 为了/ 减小/ 时间/ 开销/ ,/ 现有/ 工作/ 都/ 是/ 先/ 建立/ 索引/ ,/ 预计/ 算/ 索引/ 内部/ 顶点/ 间/ 的/ 最/ 短/ 路径/ ./ 当/ 查询/ 到来/ 后/ ,/ 利用/ 索引/ 完成/ 查询/ ./ 文献/ [/ 1/ ]/ 提出/ 了/ 一种/ 最短/ 路径/ quad/ -/ tree/ 机制/ ,/ 该/ 方法/ 预计/ 算图/ 中/ 所有/ 可能/ 顶点/ 之间/ 的/ 最/ 短/ 路径/ 并用/ quad/ -/ tree/ 将/ 这些/ 路径/ 组织/ 起来/ ./ 然而/ ,/ 该/ 方法/ 并/ 不适/ 用于/ 本文/ 所/ 要/ 解决/ 的/ 问题/ ./ 因为/ 不同/ 用户/ 所/ 给出/ 的/ 评分/ 函数/ 是/ 不同/ 的/ ,/ 针对/ 某一/ 用户/ 评分/ 函数/ 建立/ 的/ quad/ -/ tree/ 并/ 不能/ 正确/ 回答/ 另/ 一/ 用户/ 评分/ 函数/ 下/ 的/ 最优/ 路径/ 查询/ ./ 文献/ [/ 2/ ]/ 提出/ 了/ 压缩/ BFS/ -/ tree/ 的/ 概念/ ,/ 压缩/ BFS/ -/ tree/ 利用/ 图/ 的/ 对称性/ 建立/ 索引/ ./ 文献/ [/ 3/ ]/ 提出/ 了/ TEDI/ 方法/ ,/ 该/ 方法/ 利用/ 树/ 分解/ 理论/ 建立/ 索引/ 并/ 完成/ 最短/ 路径/ 查询/ ./ 文献/ [/ 4/ ]/ 基于/ 顶点/ 覆盖/ 建立/ 一个/ 树结构/ 索引/ ,/ 该/ 索引/ 能够/ 达到/ 较/ 高/ 的/ I/ // O/ 效率/ ./ 文献/ [/ 5/ ]/ 考虑/ 了/ 标签/ 限制/ 下/ 的/ 最/ 短/ 路径/ 查询/ 问题/ ./ 文献/ [/ 6/ ]/ 提出/ 了/ 一种/ 依赖/ 查询/ 的/ Landmark/ 机制/ ,/ 该/ 机制/ 可以/ 找到/ 与/ 查询/ 点/ 最/ 接近/ 的/ 局部/ Landmark/ ,/ 并/ 利用/ 以该/ Landmark/ 为根/ 的/ 最/ 短/ 路径/ 树来/ 完成/ 查询/ ./ 不幸/ 的/ 是/ ,/ 所有/ 这些/ 工作/ 都/ 利用/ 了/ 子/ 路径/ 最优/ 的/ 性质/ ,/ 即/ 最/ 短/ 路径/ 上/ 的/ 子/ 路径/ 也/ 是/ 最/ 短/ 路径/ ./ 因此/ ,/ 无论是/ 在/ 建立/ 索引/ 过程/ 中/ ,/ 还是/ 在/ 利用/ 索引/ 完成/ 最短/ 路径/ 查询/ 时/ ,/ 这些/ 方法/ 只/ 需/ 保存/ 索引/ 内部/ 顶点/ 间/ 的/ 最/ 短/ 路径/ 即可/ ,/ 再/ 利用/ 这些/ 最短/ 路径/ 进行/ 连接/ 组合/ 得到/ 结果/ ./ 然而/ ,/ 在/ 多维/ 代价/ 图中/ ,/ 最短/ 路径/ 子/ 路径/ 最优/ 的/ 性质/ 并/ 不/ 成立/ ,/ 所以/ ,/ 这些/ 方法/ 都/ 不能/ 解决/ 本文/ 所/ 提出/ 的/ 问题/ ./ 多维/ 代价/ 图上/ 的/ 多/ 标准/ Pareto/ 最优/ 路径/ 计算/ (/ MCPP/ )/ 问题/ 在/ 运筹学/ 领域/ 被/ 广泛/ 研究/ [/ 9/ -/ 11/ ]/ ./ 给定/ 起点/ s/ 和/ 终点/ t/ ,/ MCPP/ 目的/ 是/ 找到/ s/ 到/ t/ 的/ 互不/ 支配/ 的/ 全部/ 路径/ ,/ 即/ Pareto/ 最优/ 路径/ ./ 显然/ ,/ 一条/ Pareto/ 最优/ 路径/ 也/ 是/ 一条/ skyline/ 路径/ ./ 解决/ MCPP/ 的/ 方法/ 大多数/ 采用/ 的/ 是/ 标签/ 法/ [/ 9/ -/ 10/ ]/ ,/ 该类/ 方法/ 也/ 是/ 基于/ Dijkstra/ 算法/ 的/ 思想/ ,/ 即/ 任意/ 一条/ Pareto/ 最优/ 路径/ 上/ 的/ 子/ 路径/ 也/ 应该/ 为/ 一条/ Pareto/ 最优/ 路径/ ./ 后续/ 的/ 工作/ [/ 11/ ]/ 提出/ A/ / 搜索/ 方法/ 解决/ MCPP/ 问题/ ./ 这些/ 方法/ 需/ 迭代/ 地/ 计算/ 出/ 全部/ Pareto/ 最优/ 路径/ 所/ 要/ 经过/ 全部/ 顶点/ 的/ Pareto/ 最优/ 路径/ ,/ 并/ 据此/ 计算/ 出/ 起点/ 到/ 终点/ 的/ 全部/ Pareto/ 最优/ 路径/ ./ MCPP/ 与/ 本文/ 中/ 定义/ 问题/ 的/ 主要/ 区别/ 在于/ ,/ MCPP/ 要/ 找到/ 起点/ s/ 到/ 终点/ t/ 的/ 全部/ Pareto/ 最优/ 路径/ ,/ 而/ 本文/ 定义/ 的/ 问题/ 只/ 需/ 找到/ 一条/ 在/ 评分/ 函数/ f/ (/ ·/ )/ 下/ 最优/ 的/ 路径/ 即可/ ./ 显然/ ,/ 找到/ 全部/ Pareto/ 最优/ 路径/ 之后/ 再/ 计算/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ 的/ 效率/ 十分/ 低下/ ,/ 因为/ 绝大部分/ Pareto/ 最优/ 路径/ 并非/ 函数/ f/ (/ ·/ )/ 下/ 的/ 最优/ 路径/ ./ 此外/ ,/ 这些/ 方法/ 只是/ 从/ 理论/ 上/ 给出/ 计算/ Pareto/ 最优/ 路径/ 的/ 方法/ ,/ 并/ 没有/ 从/ 算法/ 实际/ 运行/ 效率/ 的/ 角度/ 设计/ 算法/ 和/ 优化/ 算法/ ,/ 也/ 没有/ 采用/ 数据处理/ 的/ 优化/ 技术/ ./ 因此/ ,/ 这些/ 方法/ 需要/ 承受/ 较/ 高/ 的/ 时间/ 和/ 空间/ 开销/ ./ 目前/ 许多/ 工作/ 研究/ 了/ 图上/ 基于/ 最短/ 路径/ 的/ skyline/ 查询/ 问题/ [/ 13/ -/ 14/ ]/ ./ 文献/ [/ 13/ ]/ 提出/ 了/ MSQ/ 算法/ 解决/ 动态/ skyline/ 查询/ 问题/ ./ 然而/ ,/ 该/ 工作/ 考虑/ 的/ 图/ 模型/ 仍然/ 是/ 单/ 代价/ 图/ 模型/ ./ 文献/ [/ 14/ ]/ 解决/ 了/ 多维/ 代价/ 物流网/ 中/ skyline/ 和/ Top/ -/ k/ 查询/ 问题/ ,/ 图中/ 每个/ 顶点/ 与/ 查询/ 点/ 在/ 不同/ 维度/ 上/ 的/ 最/ 短/ 路径/ 代价/ 作为/ 该/ 顶点/ 的/ 代价/ 向量/ ,/ 然后/ 根据/ 该/ 代价/ 向量/ 计算/ 出/ skyline/ 和/ Top/ -/ k/ 结果/ ./ 然而/ ,/ 该/ 工作/ 中/ 的/ 代价/ 向量/ 定义/ 与/ 本文/ 不同/ ,/ 且/ 查询/ 目标/ 不是/ 路径/ ,/ 因此/ 不能/ 用于/ 解决/ 本文/ 提出/ 的/ 问题/ ./ 7/ 结论/ 本文/ 中/ ,/ 我们/ 研究/ 了/ 多维/ 代价/ 图/ 模型/ 下/ 的/ 最优/ 路径/ 查询/ 问题/ ./ 我们/ 首先/ 给出/ 了/ 多维/ 代价/ 图/ 模型/ 下/ ,/ 基于/ 函数/ f/ (/ ·/ )/ 的/ 最优/ 路径/ 查询/ 的/ 定义/ ./ 然后/ ,/ 我们/ 提出/ 了/ 一个/ best/ -/ firstsearch/ 分支/ 界限/ 法/ 并/ 给出/ 3/ 个/ 优化/ 策略/ ./ 同时/ ,/ 我们/ 给出/ 一个/ 顶点/ 过滤/ 算法/ ,/ 该/ 算法/ 可以/ 从图/ 中/ 过滤/ 掉/ 大部分/ 不/ 属于/ 最优/ 路径/ 的/ 顶点/ ./ 最后/ ,/ 我们/ 通过/ 真实/ 数据/ 集上/ 的/ 实验/ 验证/ 了/ 算法/ 的/ 有效性/ ./ 

