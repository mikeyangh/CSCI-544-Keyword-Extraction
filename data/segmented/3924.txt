Page1/ 基于/ 直径/ 为/ 2/ 的/ 摩尔/ 图/ 网络/ 的/ 并行/ 矩阵/ 乘/ 算法/ 张冰/ (/ 深圳大学/ 计算机/ 与/ 软件/ 学院/ 广东/ 深圳/ 518060/ )/ 摘要/ 提出/ 了/ 一个/ 并行/ 矩阵/ 乘/ 算法/ IPBPMM/ (/ InterconnectedProcessor/ -/ BasedParallelMatrixMultiplication/ )/ ./ 该/ 算法/ 运行/ 在/ 以/ 五角形/ 、/ Petersen/ 图/ 和/ Hoffman/ -/ Singleton/ 图/ 等/ 直径/ 为/ 2/ 的/ 摩尔/ 图/ (/ 满足/ n/ =/ d2/ +/ 1/ ,/ n/ 为/ 节点/ 数/ ,/ d/ 为度/ )/ 为/ 拓扑/ 结构/ 的/ 由/ n/ 个/ 独立/ 处理器/ 构成/ 的/ 机群/ 并行计算/ 环境/ 中/ ./ 与/ 基于/ 二维/ 环绕/ 网孔/ 阵列/ 拓扑/ 结构/ 的/ Cannon/ 和/ Fox/ 等/ 并行/ 矩阵/ 乘法/ 算法/ 相/ 比较/ ,/ IPBPMM/ 算法/ 通信/ 开销/ 较/ 小/ ,/ 加速/ 比/ 更/ 高/ ,/ 同时/ 还/ 具有/ 矩阵/ 分块/ 可/ 随机/ 分布/ 在/ 各个/ 节点/ 中/ ,/ 无需/ 事先/ 按/ 一定/ 规律/ 装入/ 各/ 节点/ 中/ 的/ 特点/ ./ 同时/ IPBPMM/ 算法/ 也/ 能/ 很/ 好/ 地/ 扩充/ 到/ 由/ 多个/ 直径/ 为/ 2/ 的/ 摩尔/ 图为/ 拓扑/ 结构/ 组合/ 构成/ 的/ 并行计算/ 环境/ 中/ ,/ 且/ 随着/ 网络/ 的/ 扩大/ ,/ 算法/ 的/ 并行/ 加速/ 比/ 更/ 高/ ./ 关键词/ 并行算法/ ;/ 并行/ 矩阵/ 乘法/ ;/ 摩尔/ 图/ ;/ 网络拓扑/ 结构/ ;/ 并行/ 与/ 分布式计算/ ;/ 高性能/ 计算/ 1/ 引言/ 矩阵/ 运算/ 大量/ 用于/ 控制工程/ 、/ 图像/ 和/ 数字信号/ Page2/ 基本/ 过程/ 包括/ 装入/ 、/ 对准/ 、/ 循环/ 单步/ 移位/ 和/ 乘加/ 3/ 个/ 步骤/ ./ 装入/ 是/ 将/ 矩阵/ 犃/ ,/ 犅/ 按/ 棋盘/ 方式/ 进行/ 分块/ 后/ 按/ 一定/ 的/ 规定/ 将/ 各个/ 分块/ 矩阵/ ai/ ,/ j/ ,/ bi/ ,/ j/ 加载/ 到/ 处理器/ Pi/ ,/ j/ 中/ ./ Canon/ 算法/ 的/ 对准/ 步骤/ 是/ 将/ 矩阵/ 分块/ ai/ ,/ j/ 向/ 左/ 循环/ 移动/ i/ 步/ ,/ 将/ 矩阵/ 分块/ bi/ ,/ j/ 向上/ 循环/ 移动/ j/ 步/ ./ Fox/ 算法/ 的/ 对准/ 步骤/ 是/ 将/ 对角/ 矩阵/ 分块/ ai/ ,/ i/ 向/ 所在/ 行/ 的/ 其余/ 处理器/ 进行/ 一到/ 多/ 播送/ ./ 装入/ 和/ 对准/ 两个/ 步骤/ 占据/ 了/ Canon/ 和/ Fox/ 算法/ 的/ 很大/ 一部分/ 通信/ 开销/ ./ 本文/ 提出/ 一个/ 称之为/ IPBPMM/ (/ InterconnectedProcessor/ -/ BasedParallelMatrixMultiplication/ )/ 的/ 并行/ 矩阵/ 乘/ 算法/ ./ 该/ 算法/ 运行/ 在/ 如/ Petersen/ 图/ [/ 4/ ]/ 等/ 以/ 直径/ 为/ 2/ 的/ 摩尔/ 图/ (/ 满足/ n/ =/ δ/ 2/ +/ 1/ ,/ n/ 为/ 节点/ 数/ ,/ δ/ 为度/ )/ 为/ 拓扑/ 结构/ 的/ 由/ n/ 个/ 独立/ 处理器/ 构成/ 的/ 机群/ 并行计算/ 环境/ 中/ ./ 与/ Cannon/ 和/ Fox/ 算法/ 相/ 比较/ ,/ 采用/ 了/ 犃/ 矩阵/ 按/ 行/ 犅/ 矩阵/ 按列/ 划分/ 矩阵/ 分块/ 的/ 分块/ 方法/ ,/ 并/ 利用/ Petersen/ 图/ 拓扑/ 结构/ 的/ 特点/ 省去/ 了/ 装入/ 和/ 对准/ 的/ 步骤/ ,/ 矩阵/ 分块/ 可/ 随机/ 分布/ 在/ 各个/ 处理器/ 中/ ./ 同时/ IPBPMM/ 算法/ 还/ 具有/ 同步性/ 好/ 、/ 通信/ 开销/ 小/ 、/ 加速/ 比高/ 、/ 便于/ 扩展/ 等/ 特点/ ./ 2IPBPMM/ 算法/ 2.1/ 处理器/ 网络/ 不同于/ Canon/ 、/ Fox/ 和/ DNS/ 等/ 矩阵/ 并行/ 乘/ 算法/ 所/ 采用/ 的/ 二维/ 环绕/ 网孔/ 阵列/ 和/ 超/ 立方/ 拓扑/ 结构/ ,/ IPBPMM/ 算法/ 采用/ 直径/ 为/ 2/ 的/ 摩尔/ 图/ 作为/ 处理器/ 连接/ 的/ 拓扑/ 结构/ ./ 此时/ ,/ 图/ 的/ 直径/ 就是/ 某一/ 处理器/ 和/ 图/ 中/ 其他/ 处理器/ 进行/ 通信/ 所/ 需/ 的/ 最长/ 的/ 步数/ ./ 图/ 的/ 度/ 即/ 图/ 中/ 某个/ 处理器/ 邻接/ 的/ 处理器/ 的/ 最大/ 个数/ ./ 直径/ 为/ 2/ 的/ 摩尔/ 图/ 的/ 拓扑/ 结构/ 就是/ 在/ 直径/ 为/ 2/ 和/ 某个/ 给定/ 度/ 的/ 前提/ 下/ 包含/ 的/ 处理器/ 节点/ 数为/ 最/ 多/ 的/ 结构/ ./ 图/ 1/ 所示/ 的/ 3/ 种图/ 就是/ 直径/ 为/ 2/ ,/ 度/ 分别/ 为/ 2/ 、/ 3/ 和/ 7/ 时/ 的/ 最优/ 拓扑/ 结构/ ,/ 它们/ 分别/ 具有/ 5/ 、/ 10/ 和/ 50/ 个/ 节点/ ./ 如图/ 1/ (/ b/ )/ 所示/ 的/ Petersen/ 图可/ 如图/ 2/ 那样/ 连接/ 10/ 个/ 处理器/ ./ 每个/ 处理器/ 能/ 与/ 3/ 个/ 处理器/ 相连/ ,/ 且/ 每个/ 处理器/ 与/ 其他/ 任一/ 处理器/ 的/ 通信/ 可/ 在/ 两步/ 之内/ 完成/ ,/ 具有/ 正则/ 性/ 、/ 对称性/ 和/ 容错性/ 以及/ 并行/ 通信/ 能力/ 强/ 等/ 特点/ ./ Petersen/ 图/ 作为/ 计算机/ 互联网络/ 结构/ 受到/ 了/ 广泛/ 的/ 关注/ 与/ 研究/ [/ 5/ -/ 8/ ]/ ./ 在/ IPBPMM/ 算法/ 中/ 假设/ 处理器/ 的/ 个数/ 为/ p/ ,/ 输入/ 矩阵/ 犃/ M/ ×/ N/ 按行/ 分解/ 为/ p/ 个/ 大小/ 为/ M/ // p/ 行/ N/ 列/ 的/ 矩阵/ 分块/ ,/ 输入/ 矩阵/ 犅/ N/ ×/ Q/ 按列/ 分解/ 为/ p/ 个/ 大小/ 为/ N/ 行/ Q/ // p/ 列/ 的/ 矩阵/ 分块/ ,/ 乘积/ 矩阵/ 犆/ M/ ×/ Q/ 的/ 计算/ 由/ p/ 个/ 处理器/ 完成/ ,/ 其中/ 第/ i/ 个/ 处理器/ Pi/ ,/ 完成/ 矩阵/ 犆/ 第/ i/ 个/ 分块/ 的/ 计算/ ,/ 其/ 大小/ 为/ M/ // p/ 行/ Q/ // p/ 列/ ./ 图/ 2/ 基于/ Petersen/ 图/ 拓扑/ 结构/ 的/ 处理器/ 互联网络/ 2.2/ 算法/ 原理/ 假设/ IPBPMM/ 运行/ 在/ 以图/ 2/ 所示/ 的/ 摩尔/ 图为/ 拓扑/ 结构/ 组成/ 的/ 处理器/ 网络/ 上/ ,/ 处理器/ 的/ 个数/ 为/ 10/ ,/ 调整/ 矩阵/ 犃/ M/ ×/ N/ ,/ 犅/ N/ ×/ Q/ 的/ 行和列/ (/ 可/ 通过/ 添加/ 若干/ 值为/ 0/ 的/ 行和列/ )/ ,/ 使/ m/ =/ M/ // 10/ 和/ q/ =/ Q/ // 10/ 为/ 整数/ ./ 然后/ 将/ 矩阵/ 犃/ M/ ×/ N/ 按行/ 划分/ 成/ 10/ 个/ 大小/ 分别/ 为/ m/ ×/ N/ 的/ 矩阵/ 方块/ ,/ 将/ 矩阵/ 犅/ N/ ×/ Q/ 按列/ 划分/ 成/ 10/ 个/ 大小/ 分别/ 为/ N/ ×/ q/ 的/ 矩阵/ 方块/ ,/ 并/ 随机/ 分配/ 给/ 每个/ 处理器/ 一个/ 犃/ 矩阵/ 分块/ 和/ 一个/ 犅/ 矩阵/ 方块/ ./ IPB/ -/ PMM/ 算法/ 的/ 步骤/ 为/ :/ (/ 1/ )/ 每个/ 处理器/ 将/ 分配/ 给/ 自己/ 的/ 1/ 个/ 犃/ 子/ 矩阵/ 分块/ 传送/ 给/ 相邻/ 的/ 3/ 个/ 处理器/ ;/ (/ 2/ )/ 每个/ 处理器/ 收到/ 来自/ 相邻/ 处理器/ 传送/ 的/ 犃/ 矩阵/ 3/ 个/ 矩阵/ 分块/ 后/ ,/ 各/ 处理器/ Pi/ (/ i/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ 9/ )/ 检查/ 其中/ 及/ 本身/ 初始/ 分配/ 的/ 犃/ 矩阵/ 分块/ 中/ 是否/ 有/ 犃/ 矩阵/ 的/ 第/ i/ 个/ 分块/ ,/ 若/ 有/ 则/ 保存/ 到/ 处理器/ 相应/ 的/ 寄存器/ 中/ ;/ (/ 3/ )/ 每个/ 处理器/ 将/ 第/ (/ 2/ )/ 步/ 收到/ 的/ 犃/ 矩阵/ 3/ 个/ 矩阵/ 分块/ 中/ 除了/ 来自/ 要/ 发送/ 处理器/ 的/ 另外/ 2/ 个/ 分块/ 分别/ 传送/ 给/ 相邻/ 的/ 3/ 个/ 处理器/ ;/ (/ 4/ )/ 每个/ 处理器/ 收到/ 来自/ 相邻/ 处理器/ 传送/ 的/ 6/ 个/ 犃/ 矩阵/ 分块/ 后/ ,/ 各/ 处理器/ Pi/ (/ i/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ 9/ )/ 检查/ 其中/ 是否/ 有/ 犃/ 矩阵/ 的/ 第/ i/ 个/ 分块/ ,/ 若/ 有/ 则/ 保存/ 到/ 处理器/ 相应/ 的/ 寄存器/ 中/ ;/ Page3/ (/ 5/ )/ 每个/ 处理器/ 将/ 分配/ 给/ 自己/ 的/ 1/ 个/ 犅/ 子/ 矩阵/ 分块/ 传送/ 给/ 相邻/ 的/ 3/ 个/ 处理器/ ;/ (/ 6/ )/ 各/ 处理器/ Pi/ (/ i/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ 9/ )/ 将/ 保存/ 到/ 各自/ 寄存器/ 的/ 犃/ 矩阵/ 分块/ 分别/ 与/ 本身/ 初始/ 分配/ 的/ 犅/ 矩阵/ 分块/ ,/ 以及/ 每个/ 处理器/ 收到/ 来自/ 相邻/ 处理器/ 传送/ 的/ 犅/ 矩阵/ 3/ 个/ 矩阵/ 分块/ 相乘/ ,/ 得到/ 犆/ 矩阵/ 第/ i/ 个行/ 分块/ 的/ 4/ 个/ 列子/ 分块/ ;/ (/ 7/ )/ 每个/ 处理器/ 将/ 第/ (/ 6/ )/ 步/ 收到/ 的/ 犅/ 矩阵/ 3/ 个/ 矩阵/ 分块/ 中/ 除了/ 来自/ 要/ 发送/ 处理器/ 的/ 另外/ 2/ 个/ 分块/ 分别/ 传送/ 给/ 相邻/ 的/ 3/ 个/ 处理器/ ;/ (/ 8/ )/ 各/ 处理器/ Pi/ (/ i/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ 9/ )/ 将/ 保存/ 到/ 各自/ 寄存器/ 的/ 犃/ 矩阵/ 分块/ 与/ 每个/ 处理器/ 收到/ 来自/ 相邻/ 处理器/ 传送/ 的/ 犅/ 矩阵/ 的/ 6/ 个/ 矩阵/ 分块/ 相乘/ ,/ 得到/ 犆/ 矩阵/ 第/ i/ 个行/ 分块/ 的/ 剩余/ 的/ 6/ 个/ 列子/ 分块/ ./ 2.3/ 算法/ 描述/ 假设/ IPBPMM/ 运行/ 在/ 以度/ 为/ d/ 直径/ 为/ 2/ 的/ 摩尔/ 图为/ 拓扑/ 结构/ 组成/ 的/ 处理器/ 网络/ 上/ ,/ 处理器/ 的/ 个数/ 为/ p/ ,/ 调整/ 矩阵/ 犃/ M/ ×/ N/ ,/ 犅/ N/ ×/ Q/ 的/ 行和列/ ,/ 使/ m/ =/ M/ // p/ 和/ q/ =/ Q/ // p/ 为/ 整数/ ,/ 并/ 将/ 矩阵/ 犃/ 按/ 行/ 矩阵/ 犅/ 按/ 列/ 划分/ 的/ 方式/ 分别/ 划分/ 成/ p/ 个/ 大小/ 分别/ 为/ m/ ×/ N/ 和/ N/ ×/ q/ 的/ 子/ 方阵/ ai/ ,/ N/ 和/ bN/ ,/ j/ ./ 其中/ ,/ i/ ,/ j/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ p/ -/ 1/ ./ 每个/ 子/ 方阵/ 表示/ 为/ (/ z/ ,/ k/ )/ 的/ 二元/ 组/ 形式/ 随机/ 指派/ 给/ 一个/ 处理器/ Pi/ (/ i/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ p/ -/ 1/ )/ ,/ 其中/ ,/ z/ 表示/ 子/ 方阵/ a/ 或/ b/ ;/ k/ 表示/ 子/ 方阵/ 的/ 序号/ ./ 符号/ =/ >/ 表示/ 发送/ ,/ </ =/ 表示/ 接收/ ./ IPBPMM/ 算法/ 的/ 描述/ 见/ 算法/ 1/ ./ 算法/ 1/ ./ IPBPMM/ 并行/ 矩阵/ 乘/ 算法/ ./ 输入/ :/ 犃/ M/ ×/ N/ ,/ 犅/ N/ ×/ Q/ 输出/ :/ 犆/ M/ ×/ QBEGIN/ (/ 1/ )/ FORi/ =/ 0top/ -/ 1PARALLEL/ -/ DOFORPi/ ’/ sdneighborprocessorsPjDOxi/ =/ (/ au/ ,/ N/ ,/ u/ )/ =/ >/ PjENDFORENDFOR/ 其中/ ,/ xi/ 表示/ 初始/ 随机/ 指派/ 给/ 处理器/ Pi/ 的/ 犃/ 矩阵/ 分块/ a/ 的/ 二元/ 组/ ;/ u/ 为/ 矩阵/ 分块/ a/ 的/ 序号/ ./ (/ 2/ )/ FORi/ =/ 0top/ -/ 1PARALLEL/ -/ DOFORallxjbothreceivedbyPiandinitiallydistributedENDFORENDFOR/ 其中/ ,/ xj/ 表示/ 处理器/ Pi/ 接收/ 到/ 的/ 来自/ 邻接/ 处理器/ 的/ d/ 个/ 二元/ 组/ 以及/ 初始/ 指派/ 给/ Pi/ 的/ 二元/ 组/ ;/ Ria/ 为/ 处理器/ Pi/ 的/ 寄存器/ ,/ 用于/ 保存/ 第/ i/ 个/ 犃/ 矩阵/ 分块/ ./ (/ 3/ )/ FORi/ =/ 0top/ -/ 1PARALLEL/ -/ DOFORPi/ ’/ sdneighborprocessorsPjDOENDFORENDFOR/ (/ 4/ )/ FORi/ =/ 0top/ -/ 1PARALLEL/ -/ DOFORallxjreceivedbyPiDOENDFORENDFOR/ 其中/ ,/ xj/ 表示/ 处理器/ Pi/ 接收/ 到/ 的/ 来自/ 邻接/ 处理器/ 的/ d/ / (/ d/ -/ 1/ )/ 个/ 二元/ 组/ ./ (/ 5/ )/ FORi/ =/ 0top/ -/ 1PARALLEL/ -/ DO/ // // forallprocessorPiFORPi/ ’/ sdneighborprocessorsPjDOENDFORENDFOR/ 其中/ ,/ yi/ 表示/ 初始/ 随机/ 指派/ 给/ 处理器/ Pi/ 的/ 犅/ 矩阵/ 分块/ b/ 的/ 二元/ 组/ ./ v/ 为/ 矩阵/ 分块/ b/ 的/ 序号/ ./ (/ 6/ )/ FORi/ =/ 0top/ -/ 1PARALLEL/ -/ DOFORallyjbothreceivedbyPiandinitiallydistributedENDFORENDFOR/ (/ 7/ )/ FORi/ =/ 0top/ -/ 1PARALLEL/ -/ DOFORPi/ ’/ sdneighborprocessorsPjDOENDFORENDFOR/ (/ 8/ )/ FORi/ =/ 0top/ -/ 1PARALLEL/ -/ DOFORallyjreceivedbyPiDOENDFORENDFOREND2/ ./ 4/ 算法/ 举例/ 表/ 1/ ~/ 表/ 5/ 举例说明/ 了/ IPBPMM/ 矩阵/ 乘/ 算法/ 在/ Petersen/ 网络/ 的/ 执行/ 过程/ ./ 开始/ 时/ 矩阵/ 犃/ M/ ×/ N/ ,/ 犅/ N/ ×/ Q/ 划分/ 成/ 10/ 个/ 矩阵/ 分块/ ,/ 并/ 如表/ 1/ 所示/ 以/ 二元/ Page4/ 组/ 形式/ 随机/ 分布/ 在/ 各个/ 处理器/ 中/ ./ 表/ 5/ 为/ 乘积/ 矩阵/ 犆/ M/ ×/ Q/ 的/ 计算结果/ ,/ 其中/ 处理器/ Pi/ 完成/ ci/ ,/ j/ (/ i/ =/ 0/ ,/ 1/ ,/ 表/ 1/ 子/ 方阵/ 随机/ 分布/ 处理器/ 随机/ 分配/ 的/ 二元/ 组/ P0x0/ =/ (/ a1/ ,/ 1/ )/ ,/ y0/ =/ (/ b2/ ,/ 2/ )/ P1x1/ =/ (/ a2/ ,/ 2/ )/ ,/ y1/ =/ (/ b0/ ,/ 0/ )/ P2x2/ =/ (/ a0/ ,/ 0/ )/ ,/ y2/ =/ (/ b1/ ,/ 1/ )/ P3x3/ =/ (/ a9/ ,/ 9/ )/ ,/ y3/ =/ (/ b7/ ,/ 7/ )/ P4x4/ =/ (/ a4/ ,/ 4/ )/ ,/ y4/ =/ (/ b3/ ,/ 3/ )/ P5x5/ =/ (/ a3/ ,/ 3/ )/ ,/ y5/ =/ (/ b4/ ,/ 4/ )/ P6x6/ =/ (/ a5/ ,/ 5/ )/ ,/ y6/ =/ (/ b6/ ,/ 6/ )/ P7x7/ =/ (/ a8/ ,/ 8/ )/ ,/ y7/ =/ (/ b9/ ,/ 9/ )/ P8x8/ =/ (/ a6/ ,/ 6/ )/ ,/ y8/ =/ (/ b8/ ,/ 8/ )/ P9x9/ =/ (/ a7/ ,/ 7/ )/ ,/ y9/ =/ (/ b5/ ,/ 5/ )/ 表/ 4IPBPMM/ 算法/ 第/ (/ 6/ )/ 步/ 执行/ 结果/ 示例/ 处理器/ 接收/ 的/ 二元/ 组/ ci0ci1ci2ci3ci4ci5ci6ci7ci8ci9P0y1/ ,/ y4/ ,/ y7x2/ / y1P1y0/ ,/ y2/ ,/ y3x0/ / y1x0/ / y2x0/ / y0P2y1/ ,/ y5/ ,/ y8x1/ / y1x1/ / y2P3y1/ ,/ y6/ ,/ y9x5/ / y1P4y0/ ,/ y5/ ,/ y6P5y2/ ,/ y4/ ,/ y9P6y3/ ,/ y4/ ,/ y8P7y0/ ,/ y8/ ,/ y9P8y2/ ,/ y6/ ,/ y7P9y3/ ,/ y5/ ,/ y7x1/ / y5x4/ / y0x4/ / y4x4/ / y5x8/ / y4x3/ / y5x3/ / y9/ 表/ 5IPBPMM/ 算法/ 第/ (/ 8/ )/ 步/ 执行/ 结果/ 示例/ 处理器/ 接收/ 的/ 二元/ 组/ ci0ci1ci2ci3ci4ci5ci6ci7ci8ci9P0y2/ ,/ y3/ ,/ y5/ ,/ y6/ ,/ y8/ ,/ y9x2/ / y1x2/ / y2x2/ / y0x2/ / y4x2/ / y5x2/ / y9x2/ / y6x2/ / y3x2/ / y8x2/ / y7P1y4/ ,/ y7/ ,/ y5/ ,/ y8/ ,/ y6/ ,/ y9x0/ / y1x0/ / y2x0/ / y0x0/ / y4x0/ / y5x0/ / y9x0/ / y6x0/ / y3x0/ / y8x0/ / y7P2y0/ ,/ y3/ ,/ y4/ ,/ y9/ ,/ y6/ ,/ y7x1/ / y1x1/ / y2x1/ / y0x1/ / y4x1/ / y5x1/ / y9x1/ / y6x1/ / y3x1/ / y8x1/ / y7P3y0/ ,/ y2/ ,/ y4/ ,/ y8/ ,/ y5/ ,/ y7x5/ / y1x5/ / y2x5/ / y0x5/ / y4x5/ / y5x5/ / y9x5/ / y6x5/ / y3x5/ / y8x5/ / y7P4y1/ ,/ y7/ ,/ y2/ ,/ y9/ ,/ y3/ ,/ y8x4/ / y1x4/ / y2x4/ / y0x4/ / y4x4/ / y5x4/ / y9x4/ / y6x4/ / y3x4/ / y8x4/ / y7P5y1/ ,/ y8/ ,/ y0/ ,/ y6/ ,/ y3/ ,/ y7x6/ / y1x6/ / y2x6/ / y0x6/ / y4x6/ / y5x6/ / y9x6/ / y6x6/ / y3x6/ / y8x6/ / y7P6y1/ ,/ y9/ ,/ y0/ ,/ y5/ ,/ y2/ ,/ y7x8/ / y1x8/ / y2x8/ / y0x8/ / y4x8/ / y5x8/ / y9x8/ / y6x8/ / y3x8/ / y8x8/ / y7P7y1/ ,/ y4/ ,/ y2/ ,/ y6/ ,/ y3/ ,/ y5x9/ / y1x9/ / y2x9/ / y0x9/ / y4x9/ / y5x9/ / y9x9/ / y6x9/ / y3x9/ / y8x9/ / y7P8y1/ ,/ y5/ ,/ y3/ ,/ y4/ ,/ y0/ ,/ y9x7/ / y1x7/ / y2x7/ / y0x7/ / y4x7/ / y5x7/ / y9x7/ / y6x7/ / y3x7/ / y8x7/ / y7P9y1/ ,/ y6/ ,/ y2/ ,/ y4/ ,/ y0/ ,/ y8x3/ / y1x3/ / y2x3/ / y0x3/ / y4x3/ / y5x3/ / y9x3/ / y6x3/ / y3x3/ / y8x3/ / y73/ 性能/ 分析/ 假设/ M/ =/ N/ =/ Q/ =/ n/ ,/ d/ 为/ 图/ 的/ 度/ ,/ IPBPMM/ 算法/ 第/ (/ 1/ )/ 步/ 同步/ 传输/ 1/ 个/ 犃/ 矩阵/ 分块/ ,/ 其/ 数据传输/ 时间/ 为/ ts/ +/ twn/ // p/ ./ 其中/ ,/ ts/ 为/ 启动/ 时间/ (/ 包括/ 打包/ 、/ 执行/ 选路/ 算法/ 和/ 建立/ 通信/ 界面/ 的/ 时间/ )/ ,/ tw/ 是/ 传输/ 每个/ 字/ 的/ 时间/ ./ 算法/ 第/ (/ 3/ )/ 步/ 同步/ 传输/ d/ -/ 1/ 个/ 犃/ 矩阵/ 分块/ ,/ 其/ 数据传输/ 时间/ 为/ ts/ +/ (/ d/ -/ 1/ )/ twn/ // p/ ./ 算法/ 第/ (/ 2/ )/ 和/ 第/ (/ 4/ )/ 步/ 分别/ 为/ d/ +/ 1/ 次/ 和/ d/ / (/ d/ -/ 1/ )/ 次/ 比较/ 运算/ ,/ 该/ 运行/ 时间/ 可/ 忽略不计/ ./ 算法/ 第/ (/ 5/ )/ 步/ 和/ 第/ (/ 7/ )/ 步/ 分别/ 同步/ 传输/ 1/ 个/ 和/ d/ -/ 1/ 个/ 犅/ 矩阵/ 分块/ ,/ 其/ 数据传输/ 时间/ 分别/ 为/ ts/ +/ twn/ // p/ 和/ ts/ +/ (/ d/ -/ 1/ )/ twn/ // p/ ./ 算法/ 第/ (/ 6/ )/ 和/ 第/ (/ 8/ )/ 步/ 分别/ 执行/ d/ +/ 1/ 次/ 和/ d/ / (/ d/ -/ 1/ )/ 2/ ,/ …/ ,/ 9/ ;/ j/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ 9/ )/ 的/ 计算/ ,/ ci/ ,/ j/ 的/ 大小/ 为/ M/ // 10/ 行/ Q/ // 10/ 列/ ./ 次/ (/ n/ // p/ )/ ×/ n/ 和/ n/ ×/ (/ n/ // p/ )/ 子/ 矩阵/ 乘法/ 运算/ ,/ 其/ 计算/ 时间/ 为/ (/ d2/ +/ 1/ )/ ×/ n3/ // p2/ =/ n3/ // p/ ./ 因此/ ,/ IPBPMM/ 算法/ 总/ 的/ 并行/ 运行/ 时间/ 为表/ 6/ 分别/ 列出/ 了/ IPBPMM/ 算法/ (/ 处理器/ 个数/ p/ )/ 和/ 运行/ 在/ 由/ 槡/ p/ ×/ 槡/ p/ 个/ 处理器/ 构成/ 的/ 二维/ 网孔/ 上/ 的/ Canon/ 和/ Fox/ 算法/ 的/ 运行/ 时间/ ./ 算法/ IPBPMMCanonFox1/ 由表/ 6/ 可见/ ,/ IPBPMM/ 算法/ 的/ 计算/ 时间/ 与/ Page5Canon/ 和/ Fox/ 算法/ 基本相同/ ,/ 而/ 其/ 通信/ 时间/ 大约/ 是/ Cannon/ 和/ Fox/ 算法/ 的/ 1/ // 槡/ p/ 倍/ ,/ 这/ 是因为/ IPBPMM/ 算法/ 充分利用/ 处理器/ 多通道/ 同步/ 通信/ 的/ 能力/ 和/ 网络/ 互联/ 的/ 对称性/ 使/ 其/ 通信/ 开销/ 大大/ 小于/ 其它/ 2/ 种/ 算法/ ./ 因此/ IPBPMM/ 算法/ 更/ 适用/ 于/ 大规模/ 矩阵/ 的/ 乘法/ 运算/ ./ 另外/ ,/ Canon/ 和/ Fox/ 等/ 算法/ 要求/ 开始/ 时/ 矩阵/ 分块/ ai/ ,/ j/ 和/ bi/ ,/ j/ 要/ 装入/ 到/ 固定/ 的/ 处理器/ Pi/ ,/ j/ 中/ ,/ 表/ 6/ 所示/ 的/ Canon/ 和/ Fox/ 算法/ 的/ 运行/ 时间/ 并未/ 考虑/ 这部分/ 大小/ 为/ 2p/ ×/ (/ ts/ +/ twn2/ // p/ )/ 的/ 通信/ 开销/ ,/ 而/ IPB/ -/ PMM/ 算法/ 由于/ 矩阵/ 分块/ 可/ 随机/ 分布/ 在/ 各/ 处理器/ 中而/ 无此/ 开销/ ./ 4IPBPMM/ 算法/ 的/ 可扩展性/ 若/ 每个/ 处理器/ 有/ 多个/ 通道/ 同时/ 向/ 相邻/ 的/ 处理器/ 传输数据/ ,/ 并且/ 每个/ 处理器/ 有/ 足够/ 的/ 缓存/ 器/ 保存/ 接收/ 的/ 数据/ ,/ 则/ 由式/ (/ 1/ )/ 可见/ ,/ 随着/ 度/ 的/ 提高/ 通信/ 开销/ 反而/ 由于/ 同步/ 传输/ 能力/ 的/ 提高/ 有所/ 下降/ ,/ 加速/ 比越/ 趋近/ 于/ 理想/ 值/ ./ 在/ 图/ 1/ 所示/ 的/ 3/ 种/ 基本/ 的/ 直径/ 为/ 2/ 的/ 摩尔/ 图/ 的/ 基础/ 上/ ,/ 可/ 通过/ 对/ 其/ 在/ 维度/ 空间/ 上/ 进行/ 拓展/ 来/ 构造/ 更/ 多处理器/ 节点/ 的/ 并行计算/ 网络/ ./ 如图/ 3/ 为/ 将/ 2/ 个/ Petersen/ 图/ 拓展/ 构成/ 直径/ 为/ 3/ 度为/ 4/ 的/ 具有/ 20/ 个/ 处理器/ 的/ 并行计算/ 网络/ ./ 图/ 4/ 为/ 将/ 10/ 个/ Petersen/ 图/ 拓展/ 构成/ 直径/ 为/ 4/ 度为/ 6/ 的/ 具有/ 100/ 个/ 处理器/ 的/ 并行计算/ 网络/ ./ 图/ 3/ 直径/ 为/ 3/ 度为/ 4/ 的/ 具有/ 20/ 个/ 处理器/ 的/ 并行计算/ 网络图/ 4/ 直径/ 为/ 4/ 度为/ 6/ 的/ 具有/ 100/ 个/ 处理器/ 的/ 并行计算/ 网络/ 采用/ 图/ 3/ 所示/ 的/ 结构/ ,/ 处理器/ 间/ 的/ 数据通信/ 通过/ 3/ 步/ 传输/ 完成/ :/ 第/ (/ 1/ )/ 步/ 每个/ 处理器/ 接收/ 相邻/ 4/ 个/ 处理器/ 传输/ 的/ 4/ 个/ 矩阵/ 分块/ ,/ 如/ P0/ 收到/ 来自/ P1/ ,/ P4/ ,/ P7/ 和/ P10/ 的/ 4/ 个/ 矩阵/ 分块/ ;/ 第/ (/ 2/ )/ 步/ 每个/ 处理器/ 接收/ 来自/ 同一个/ Petersen/ 图/ 结构/ 相邻/ 的/ 3/ 个/ 处理器/ 接收/ 的/ 9/ 个/ 矩阵/ 分块/ (/ 不含/ 第/ 1/ 步/ 收到/ 的/ 来自/ 要/ 发送/ 的/ 处理器/ 的/ 数据/ )/ ,/ 如/ P0/ 收到/ 来自/ P1/ (/ 接力/ 传递/ 的/ P2/ 、/ P3/ 和/ P17/ 的/ 矩阵/ 分块/ )/ 、/ P4/ (/ 接力/ 传递/ 的/ P5/ 、/ P6/ 和/ P14/ 的/ 矩阵/ 分块/ )/ 和/ P7/ (/ 接力/ 传递/ 的/ P8/ 、/ P9/ 和/ P11/ 的/ 矩阵/ 分块/ )/ ;/ 第/ (/ 3/ )/ 步/ 每个/ 处理器/ 接收/ 来自/ 同一个/ Petersen/ 图/ 结构/ 相邻/ 的/ 3/ 个/ 处理器/ 中/ 与/ 另/ 一个/ Petersen/ 图/ 结构/ 处理器/ 相邻/ 的/ 3/ 个/ 处理器/ 接力/ 传输/ 的/ 6/ 个/ 矩阵/ 分块/ ,/ 如/ P0/ 收到/ 来自/ 与/ P7/ 相邻/ 的/ P11/ (/ 接力/ 传递/ 的/ P12/ 和/ P13/ 的/ 矩阵/ 分块/ )/ 、/ 与/ P4/ 相邻/ 的/ P14/ (/ 接力/ 传递/ 的/ P15/ 和/ P16/ 的/ 矩阵/ 分块/ )/ 和/ 与/ P1/ 相邻/ 的/ P17/ (/ 接力/ 传递/ 的/ P18/ 和/ P19/ 的/ 矩阵/ 分块/ )/ ./ 因此/ ,/ IPBPMM/ 算法/ 在/ 图/ 3/ 所示/ 的/ 20/ 个/ 处理器/ 上/ 的/ 运行/ 时间/ 为/ 4/ 个/ Petersen/ 图可/ 合并/ 构成/ 直径/ 为/ 3/ 度为/ 6/ 的/ 具有/ 40/ 个/ 处理器/ 的/ 并行计算/ 网络/ ./ 此时/ IPBPMM/ 算法/ 的/ 运行/ 时间/ 为/ 同理/ ,/ 可/ 分析/ 得出/ IPBPMM/ 算法/ 在/ 图/ 4/ 所示/ 的/ 100/ 个/ 处理器/ 上/ 的/ 运行/ 时间/ 为表/ 7/ 列出/ 了/ IPBPMM/ 算法/ 在/ 由/ 直径/ 为/ 2/ 的/ 摩尔/ 图及/ 由/ 其/ 组合/ 构成/ 的/ 并行计算/ 网络/ 上/ 的/ 加速/ 比/ 特性/ ./ 由表/ 7/ 可见/ ,/ 随着/ 处理器/ 个数/ p/ 的/ 增加/ ,/ 通信/ 开销/ 基本相同/ ,/ 在/ p/ 值/ 由/ 10/ 增加/ 到/ 50/ 时/ ,/ 通信/ 开销/ 反而/ 由于/ 同步/ 传输/ 能力/ 的/ 提高/ 有所/ 下降/ ,/ 而/ 计算/ 时间/ 降低/ 了/ 4/ 倍/ ./ 表明/ IPBPMM/ 算法/ 在/ 以/ 直径/ 为/ 2/ 的/ 摩尔/ 图/ (/ 满足/ n/ =/ d2/ +/ 1/ ,/ n/ 为/ 节点/ 数/ ,/ d/ 为度/ )/ 拓扑/ 结构/ 组建/ 的/ 并行计算/ 网络/ 上/ 具有/ 理想/ 的/ 加速/ 比/ 和/ 良好/ 的/ 可/ 扩展/ 特性/ ./ 处理器/ 个数/ 1510204050100Page65/ 结束语/ IPBPMM/ 算法/ 与/ 基于/ 二维/ 环绕/ 网孔/ 阵列/ 拓扑/ 结构/ 的/ Canon/ 和/ Fox/ 并行/ 矩阵/ 乘/ 算法/ 进行/ 了/ 比较/ ,/ 在/ 多/ 核/ 工作站/ Windows/ 平台/ 上/ 采用/ MPICH/ 对/ 3/ 种/ 算法/ 加以/ 编程/ 实现/ ,/ 主要/ 对/ IPBPMM/ 算法/ 的/ 同步/ 通信/ 性能/ 进行/ 了/ 评估/ ./ Canon/ 算法/ 在/ 实现/ 过程/ 中/ 首先/ 需要/ 对/ 犃/ 矩阵/ 分块/ 按行/ 移位/ ,/ 对/ 犅/ 矩阵/ 分块/ 按列/ 移位/ ,/ 这一/ 对准/ 过程/ 处理器/ 最/ 多/ 需要/ 调用/ 2/ (/ 槡/ p/ -/ 1/ )/ 次/ MPI/ _/ Sendrecv/ 函数/ ./ 在/ 乘加/ 阶段/ 每个/ 处理器/ 需要/ 进行/ 槡/ p/ 次/ 每次/ 使/ A/ 矩阵/ 分块/ 按行/ 向/ 左/ 移位/ 一步/ ,/ 犅/ 矩阵/ 分块/ 按列/ 向上/ 移位/ 一步/ ,/ 故/ Canon/ 算法/ 中/ 每个/ 处理器/ 共/ 需要/ 调用/ 4/ 槡/ p/ -/ 2/ 次/ MPI/ _/ Sendrecv/ 函数/ ./ Fox/ 算法/ 在/ 对准/ 阶段/ 需要/ 对/ 犃/ 矩阵/ 的/ 对角线/ 分块/ 按行/ 进行/ 一到/ 多/ 的/ 传送/ ,/ 每个/ 处理器/ 需要/ 调用/ 槡/ p/ -/ 1/ 次/ MPI/ _/ Sendrecv/ 函数/ ./ 在/ Fox/ 算法/ 的/ 乘加/ 阶段/ 每个/ 处理器/ 需要/ 进行/ 槡/ p/ 次/ 每次/ 使/ 一个/ 犃/ 矩阵/ 分块/ 向/ 所在/ 行/ 进行/ 一到/ 多/ 的/ 传送/ ,/ 犅/ 矩阵/ 分块/ 按列/ 向上/ 移位/ 一步/ ,/ 故/ Fox/ 算法/ 中/ 每个/ 处理器/ 共/ 需要/ 调用/ p/ +/ 槡/ p/ -/ 1/ 次/ MPI/ _/ Sendrecv/ 函数/ ./ IPBPMM/ 算法/ 无需/ 对准/ ,/ 运行/ 在/ Petersen/ 图/ 网络/ 上/ 每个/ 处理器/ 在/ 算法/ 的/ 第/ (/ 1/ )/ 步/ 和/ 第/ (/ 5/ )/ 步共/ 需要/ 调用/ 2/ 次/ ,/ 在/ 算法/ 的/ 第/ (/ 3/ )/ 步/ 和/ 第/ (/ 7/ )/ 步共/ 需要/ 调用/ 4/ 次/ ,/ 总共/ 6/ 次/ MPI/ _/ Sendrecv/ 函数/ ./ 表/ 8/ 列出/ 了/ 用/ MPI/ 实现/ Cannon/ ,/ Fox/ 和/ IPBPMM/ 算法/ 时/ 每个/ 处理器/ 需要/ 调用/ 的/ 通信/ 函数/ 次数/ ./ IPBPMM/ (/ p/ =/ 5/ )/ IPBPMM/ (/ p/ =/ 10/ )/ IPBPMM/ (/ p/ =/ 20/ )/ IPBPMM/ (/ p/ =/ 50/ )/ IPBPMM/ (/ p/ =/ 100/ )/ 理论/ 分析/ 和/ 实验/ 结果表明/ 基于/ Petersen/ 图/ 处理器/ 互联/ 拓扑/ 结构/ 的/ IPBPMM/ 算法/ 无需/ 事先/ 将/ 矩阵/ 分块/ 装入/ ,/ 矩阵/ 分块/ 可/ 随机/ 分布/ 在/ 各个/ 处理器/ 中/ ./ 同时/ IPBPMM/ 算法/ 还/ 具有/ 同步性/ 好/ 、/ 通信/ 开销/ 小/ 、/ 加速/ 比高/ 、/ 便于/ 扩展/ 、/ 便于/ 硬件/ 化/ 实现/ [/ 9/ ]/ 以及/ 可/ 对/ 任意/ 大小/ 的/ 矩阵/ 进行/ 分块/ 计算/ 等/ 特点/ ./ IPBPMM/ 算法/ 是/ 建立/ 在/ 图/ 1/ 所示/ 3/ 种/ 直径/ 为/ 2/ 的/ 摩尔/ 图/ 拓扑/ 结构/ 或是/ 由/ 这/ 3/ 种/ 结构/ 组合/ 构成/ 的/ 拓扑/ 结构/ 上/ 的/ ,/ 因此/ 要求/ 处理器/ 的/ 个数/ 必须/ 为/ 5/ 的/ 倍数/ ,/ 这/ 也/ 是/ IPB/ -/ PMM/ 算法/ 的/ 一个/ 局限性/ ./ 

