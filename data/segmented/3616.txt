Page1/ 模型/ 指导/ 的/ 多维/ GPU/ 软件/ 低功耗/ 优化/ 方法/ 王桂彬/ (/ 国防科学技术大学/ 计算机/ 学院/ 并行/ 与/ 分布/ 处理/ 国家/ 重点/ 实验室/ 长沙/ 410073/ )/ 摘要/ 作为/ 众核/ 体系结构/ 的/ 典型/ 代表/ ,/ GPU/ (/ GraphicsProcessingUnits/ )/ 芯片/ 集成/ 了/ 大量/ 并行处理/ 核心/ ,/ 其/ 功耗/ 开销/ 也/ 在/ 随之/ 增大/ ,/ 逐渐/ 成为/ 计算机系统/ 中/ 功耗/ 开销/ 最大/ 的/ 组成部分/ 之一/ ,/ 而/ 软件/ 低功耗/ 优化/ 技术/ 是/ 降低/ 芯片/ 功耗/ 的/ 有效/ 方法/ ./ 文中/ 提出/ 了/ 一种/ 模型/ 指导/ 的/ 多维/ 低功耗/ 优化/ 技术/ ,/ 通过/ 结合/ 动态/ 电压/ // 频率/ 调节/ 和/ 动态/ 核心/ 关闭/ 技术/ ,/ 在/ 不/ 影响/ 性能/ 的/ 情况/ 下/ 降低/ GPU/ 功耗/ ./ 首先/ ,/ 针对/ GPU/ 多线程/ 执行/ 模型/ 的/ 特点/ ,/ 建立/ 了/ 访存/ 受限/ 程序/ 的/ 功耗/ 优化/ 模型/ ;/ 然后/ ,/ 基于/ 该/ 模型/ ,/ 分别/ 分析/ 了/ 动态/ 电压/ // 频率/ 调节/ 和/ 动态/ 核心/ 关闭/ 技术/ 对/ 程序执行/ 时间/ 和/ 能量消耗/ 的/ 影响/ ,/ 进而/ 将/ 功耗/ 优化/ 问题/ 归纳/ 为/ 一般/ 整数/ 规划/ 问题/ ;/ 最后/ ,/ 通过/ 对/ 9/ 个/ 典型/ GPU/ 程序/ 的/ 评测/ 以及/ 与/ 已有/ 方法/ 的/ 对比/ 分析/ ,/ 验证/ 了/ 该文/ 提出/ 的/ 低功耗/ 优化/ 技术/ 可以/ 在/ 不/ 影响/ 性能/ 的/ 情况/ 下/ 有效/ 降低/ 芯片/ 功耗/ ./ 关键词/ 低功耗/ 优化/ ;/ GPU/ ;/ 动态/ 核心/ 关闭/ ;/ 动态/ 电压/ // 频率/ 调节/ 1/ 引言/ 作为/ 众核/ 体系结构/ 的/ 典型/ 代表/ ,/ 图形/ 处理器/ (/ GraphicsProcessingUnit/ ,/ GPU/ )/ 具有/ 相对/ 简单/ 的/ 控制/ 逻辑/ ,/ 集成/ 有/ 大量/ 并行处理/ 核心/ ,/ 具有/ 较/ 高/ 的/ 峰值/ 效能/ (/ 单位/ 功耗/ 的/ 计算/ 性能/ )/ ./ 随着/ 芯片/ 集成度/ 不断/ 提高/ ,/ GPU/ 功耗/ 开销/ 逐渐/ 增大/ ./ 当前/ 主流/ 高性能/ GPU/ 的/ 功耗/ 普遍/ 超过/ 200Watts/ ,/ 成为/ 计算机系统/ 中/ 功耗/ 开销/ 最大/ 的/ 组成部分/ 之一/ ;/ 与此同时/ ,/ GPU/ 的/ 运行/ 温度/ 也/ 在/ 不断/ 攀升/ ,/ 降低/ 了/ 芯片/ 的/ 可靠性/ ,/ 增加/ 了/ 系统维护/ 成本/ ./ 因此/ ,/ 面向/ GPU/ 的/ 低功耗/ 优化/ 技术/ 研究/ 具有/ 重要/ 的/ 实际意义/ ./ 程序执行/ 时间/ 取决于/ 关键/ 路径/ 上/ 功能/ 单元/ 的/ 执行/ 速度/ ;/ 而/ 降低/ 非关键/ 路径/ 上/ 功能/ 单元/ 的/ 运行/ 频率/ 或/ 关闭/ 部分/ 功能/ 单元/ 可以/ 在/ 较/ 小/ 的/ 性能/ 损失/ 下/ 有效/ 降低功耗/ ,/ 相应/ 实现/ 技术/ 可以/ 分为/ 动态/ 电压/ // 频率/ 调节/ (/ DynamicVoltageandFrequencyScaling/ ,/ DVFS/ )/ 和/ 动态/ 核心/ 关闭/ 技术/ (/ DynamicConcurrency/ -/ Throttling/ ,/ DCT/ )/ ./ 随着/ GPU/ 核心/ 数量/ 的/ 不断/ 增加/ ,/ 平均/ 每个/ 核心/ 分得/ 的/ 访存/ 带宽/ 在/ 逐渐/ 减少/ ,/ 导致/ 计算/ 性能/ 与/ 访存/ 性能/ 的/ 差距/ 逐渐/ 增大/ ,/ 因此/ 存储系统/ 逐渐/ 成为/ GPU/ 性能/ 的/ 主要/ 瓶颈/ [/ 1/ ]/ ./ 本文/ 的/ 功耗/ 优化/ 研究/ 主要/ 针对/ 访存/ 受限/ 程序/ ./ 针对/ 传统/ 多核/ 体系结构/ ,/ 文献/ [/ 2/ -/ 3/ ]/ 提出/ 了/ 结合/ DCT/ 与/ DVFS/ 的/ 多维/ 低功耗/ 优化/ 方法/ ,/ 包括/ 基于/ 启发式/ 搜索/ 方法/ [/ 2/ ]/ 和/ 基于/ 采样/ 预测/ 方法/ [/ 3/ ]/ ./ 其中/ 搜索/ 方法/ 是/ 在/ 给定/ 程序执行/ 时间/ 约束/ 下/ 搜索/ 不同/ 活跃/ 核心/ 数/ 和/ 运行/ 频率/ 的/ 组合/ (/ 称为/ 配置/ )/ ,/ 通过/ 采样/ 实际/ 能耗/ 开销/ 求得/ 能耗/ 最优/ 的/ 配置/ ;/ 而/ 预测/ 方法/ 通过/ 采样/ 部分/ 配置/ 下/ 的/ 程序执行/ 性能/ 以及/ 硬件/ 事件/ 计数器/ 信息/ ,/ 预测/ 其余/ 配置/ 下/ 的/ 执行/ 情况/ ,/ 在/ 达到/ 性能/ 最优/ 的/ 同时/ 降低/ 能耗/ ./ 不难/ 分析/ ,/ 上述/ 方法/ 存在/ 以下/ 不足/ :/ (/ 1/ )/ 已有/ 方法/ 均/ 以/ 程序执行/ 时间/ 而/ 不是/ 能耗/ 开销/ 作为/ 搜索/ 或/ 预测/ 的/ 目标/ 函数/ ,/ 无法/ 充分/ 发掘/ 功耗/ 优化/ 的/ 潜能/ ;/ (/ 2/ )/ 已有/ 方法/ 需要/ 对/ 配置/ 空间/ 进行/ 采样/ ,/ 其/ 方法/ 引入/ 的/ 额外/ 开销/ 以及/ 方法/ 的/ 有效性/ 与/ 配置/ 空间/ 的/ 大小/ 密切相关/ ,/ 而/ GPU/ 体系结构/ 集成/ 有/ 大量/ 并行处理/ 核心/ ,/ 这/ 将/ 大大增加/ 方法/ 本身/ 引入/ 的/ 额外/ 开销/ ./ 基于/ 此/ ,/ 本文/ 提出/ 了/ 模型/ 指导/ 的/ 多维/ 低功耗/ 优化/ 方法/ ,/ 通过/ 结合/ GPU/ 多线程/ 执行/ 模型/ 特点/ ,/ 建立/ 了/ 访存/ 受限/ 程序/ 的/ 功耗/ 优化/ 模型/ ,/ 在/ 该/ 模型/ 的/ 指导/ 下/ 求解/ 能耗/ 最优/ 的/ 活跃/ 核心/ 数/ 及其/ 运行/ 频率/ ./ 本文/ 的/ 主要/ 创新/ 包括/ :/ (/ 1/ )/ 针对/ GPU/ 多线程/ 执行/ 模型/ 的/ 特点/ ,/ 建立/ 了/ 访存/ 受限/ 程序/ 的/ 功耗/ 优化/ 模型/ ./ (/ 2/ )/ 面向/ 访存/ 受限/ 的/ GPU/ 程序/ ,/ 提出/ 了/ 结合/ DCT/ 与/ DVFS/ 的/ 多维/ 低功耗/ 优化/ 方法/ ,/ 并/ 将/ 该/ 优化/ 问题/ 归纳/ 为/ 一般/ 整数/ 规划/ 问题/ ./ (/ 3/ )/ 实验/ 结果表明/ 本文/ 提出/ 的/ 多维/ 低功耗/ 优化/ 方法/ 可以/ 有效/ 降低/ GPU/ 功耗/ ,/ 在/ 性能/ 损失/ 不/ 超过/ 0.6/ %/ 的/ 情况/ 下/ 节省/ 能耗/ 17.5/ %/ ;/ 与/ 已有/ 的/ 搜索算法/ 相比/ ,/ 本文/ 提出/ 的/ 方法/ 可以/ 进一步/ 节省/ 能耗/ 9/ %/ ./ 本文/ 第/ 2/ 节/ 提出/ 本文/ 研究/ 问题/ ,/ 并/ 给/ 出访/ 存/ 受限/ 程序/ 的/ 功耗/ 优化/ 问题/ 描述/ ;/ 第/ 3/ 节/ 介绍/ 结合/ DCT/ 与/ DVFS/ 的/ 多维/ 低功耗/ 优化/ 方法/ ;/ 第/ 4/ 节/ 介绍/ 相关/ 实验/ 平台/ 与/ 测试用例/ ;/ 第/ 5/ 节对/ 本文/ 提出/ 的/ 功耗/ 优化/ 方法/ 进行/ 详细/ 评测/ 与/ 分析/ ;/ 第/ 6/ 节/ 介绍/ 低功耗/ 优化/ 问题/ 的/ 最新/ 研究进展/ ;/ 最后/ ,/ 我们/ 在/ 第/ 7/ 节/ 总结/ 全文/ ./ 2GPU/ 执行/ 模型/ 与/ 问题/ 提出/ 2.1/ 节/ 首先/ 简要/ 介绍/ CUDA/ 编程/ 模型/ 及其/ 多线程/ 执行/ 机制/ ;/ 2.2/ 节/ 给出/ 了/ 面向/ 访存/ 受限/ 程序/ 进行/ 功耗/ 优化/ 的/ 约束条件/ 以及/ 该/ 优化/ 问题/ 的/ 一般性/ 描述/ ./ 2.1/ CUDA/ 编程/ 模型/ 与/ 多线程/ 执行/ 机制/ 在/ CUDA/ 模型/ 中/ ,/ GPU/ 上/ 执行/ 的/ 程序/ 称为/ Kernel/ 程序/ [/ 4/ ]/ ,/ CPU/ 对/ GPU/ 的/ 调用/ 过程/ 通过/ 一系列/ 的/ Kernel/ 调用/ 实现/ ,/ 因此/ 本文/ 以/ Kernel/ 的/ 一次/ 调用/ 作为/ 功耗/ 优化/ 操作/ 的/ 基本/ 单位/ ./ Kernel/ 程序/ 由/ 多个/ 线程/ 块/ (/ ThreadBlock/ )/ 组成/ ,/ 每个/ 线程/ 块/ 由/ 许多/ 线程/ 组成/ ./ 在/ Kernel/ 执行/ 过程/ 中/ ,/ GPU/ 上/ 的/ 线程/ 调度/ 器以/ 线程/ 块/ 为/ 粒度/ ,/ 动态/ 地/ 将/ 计算/ 任务分配/ 给/ 空闲/ 流/ 多处理器/ (/ StreamMultiProcessor/ ,/ SM/ )/ ,/ 如图/ 1/ (/ a/ )/ 所示/ ./ 由于/ 不同/ SM/ 独立/ 完成/ 计算/ 任务/ ,/ 本文/ 将/ SM/ 看作/ 处理器/ 核心/ ./ 线程/ 块/ 中/ 的/ 线程/ 以/ Warp/ 为/ 单位/ 组织/ 并/ 调度/ 到/ SM/ 上/ 执行/ ,/ 并行执行/ 的/ 多个/ Warp/ 通过/ 时间/ 重用/ 的/ 方式/ 占用/ SM/ ./ 记/ Warp/ 的/ 大小/ 为/ Swarp/ ,/ 处理器/ 核心/ 内/ 的/ SIMD/ 宽度/ (/ 即/ 标量/ 核心/ 数/ )/ 为/ Ssimd/ ,/ 则/ Warp/ 发射/ 一条/ 指令/ 的/ 延迟/ 为/ SwarpSsimd2/ ./ 2/ 面向/ 访存/ 受限/ 程序/ 的/ 功耗/ 优化/ 2.2/ ./ 1/ 问题/ 提出/ 文献/ [/ 5/ ]/ 对/ GPU/ 体系结构/ 建立/ 了/ 详细/ 的/ 性能/ 模型/ ,/ 本文/ 的/ 功耗/ 优化/ 研究/ 以该/ 模型/ 为/ 基础/ 展开/ ./ 根据/ 该/ 性能/ 模型/ ,/ 程序执行/ 时间/ 由/ 运算/ 操作/ 延迟/ 和/ 访存/ 操作/ 延迟/ 组成/ ,/ 其中/ 访存/ 操作/ 延迟/ 又/ 细分/ 为/ 由/ 存储器/ 带宽/ 不足/ 而/ 引发/ 的/ 延迟/ 和/ 由/ 绝对/ 访存/ 时间/ 而引/ ,/ 如图/ 1/ (/ b/ )/ 所示/ ./ Page3/ 图/ 1Kernel/ 调度/ 与/ 执行/ 图发/ 的/ 延迟/ ,/ 其中/ 绝对/ 访存/ 时间/ 是/ 一次/ 访存/ 操作/ 的/ 最/ 短时间/ ./ 记/ 一个/ Warp/ 的/ 平均/ 运算/ 操作/ 延迟/ 为/ Tcomp/ ,/ 访存/ 带宽/ 延迟/ 为/ Tbw/ ,/ 绝对/ 访存/ 延迟/ 为/ Tlat/ ,/ 则/ 平均/ 每次/ 访存/ 操作间/ 的/ 运算/ 操作/ 延迟/ 为/ Tcomp/ // Nmem/ ,/ 访存/ 带宽/ 延迟/ 为/ Tbw/ // Nmem/ ,/ 其中/ Nmem/ 为/ Warp/ 的/ 平均/ 访存/ 次数/ ./ 图/ 2/ 给出/ 了/ 并行/ Warp/ 执行/ 中/ 运算/ 操作/ 与/ 访存/ 操作/ 的/ 关系/ 图/ ,/ 其中/ C/ 表示/ 运算/ 操作/ ,/ M/ 表示/ 访存/ 操作/ ./ 图中/ 灰色/ 框/ 表示/ 访存/ 带宽/ 引发/ 的/ 延迟/ ,/ 虚线/ 表示/ 绝对/ 访存/ 延迟/ ./ 需要/ 注意/ 的/ 是/ ,/ 不同/ 访存/ 操作/ 的/ 访存/ 带宽/ 延迟/ 不能/ 相互/ 隐藏/ ./ 通过/ 分析/ 可以/ 发现/ ,/ 平均/ 一次/ 访存/ 带宽/ 延迟/ 可以/ 被/ 一次/ 运算/ 操作/ 所/ 隐藏/ ;/ 因此/ 如果/ 满足/ Tcomp/ / Tbw/ ,/ 则/ 处理器/ 核心/ 不是/ 制约/ 程图/ 2/ 计算/ 操作/ 与/ 访存/ 操作/ 关系/ 图序/ 性能/ 的/ 关键/ 路径/ ,/ 降低/ 核心/ 运行/ 频率/ 或/ 关闭/ 部分/ 核心/ 都/ 可以/ 在/ 不/ 影响/ 性能/ 的/ 情况/ 下/ 降低功耗/ ./ 对比/ 图/ 2/ (/ a/ )/ 和/ (/ b/ )/ 可以/ 看出/ ,/ 在/ 一定/ 范围/ 内/ 增大/ 运算/ 时间/ 不会/ 增加/ Kernel/ 总/ 执行/ 时间/ (/ 与/ 原/ 执行/ 过程/ 相比/ ,/ 图/ 2/ (/ b/ )/ 中/ 只/ 增加/ 了/ 一次/ 启动/ 开销/ ,/ 因此/ 该/ 影响/ 可以/ 忽略/ )/ ./ 从图/ 2/ (/ b/ )/ 中/ 可以/ 看出/ ,/ 此时/ 优化/ 后/ 的/ 运算/ 时间/ (/ 记为/ Tcomp/ )/ 不/ 等于/ 访存/ 带宽/ 延迟/ ,/ 即/ Tcomp/ ≠/ Tbw/ ./ 其/ 原因/ 是/ ,/ 在/ 考虑/ 访存/ 操作/ 延迟/ 时/ 不仅/ 需要/ 考虑/ 访存/ 带宽/ 不足/ 引发/ 的/ 延迟/ 也/ 应/ 注意/ 绝对/ 访存/ 时间/ 的/ 影响/ ./ 对比/ 图/ 2/ (/ c/ )/ 可以/ 看出/ ,/ 如果/ 进一步/ 增大/ 计算/ 时间/ Tcomp/ ,/ 由于/ 绝对/ 访存/ 延迟/ 的/ 影响/ ,/ 访存/ 带宽/ 无法/ 被/ 充分利用/ ,/ 增大/ 了/ 程序/ 总/ 执行/ 时间/ ./ 需要/ 注意/ 的/ Page4/ 是/ ,/ 图中/ 未/ 被/ 重叠/ 的/ 空闲/ 部分/ 在/ 每次/ 访存/ 操作/ 中/ 都/ 会/ 存在/ ,/ 因此/ 该/ 影响/ 无法/ 忽略/ ./ 综上所述/ ,/ 对于/ 访存/ 受限/ 程序/ ,/ 在/ 功耗/ 优化/ 过程/ 中/ 不仅/ 需要/ 考虑/ 访存/ 带宽/ 的/ 影响/ ,/ 也/ 应该/ 考虑/ 绝对/ 访存/ 时间/ 的/ 影响/ ./ 通过/ 对图/ 2/ (/ b/ )/ 的/ 执行/ 过程/ 分析/ 可知/ ,/ 优化/ 后/ 的/ 计算/ 时间/ Tcomp/ 应/ 同时/ 满足/ 以下/ 条件/ ,/ 即可/ 在/ 不/ 影响/ 性能/ 的/ 情况/ 下/ 降低功耗/ :/ Tcomp/ / Tbw/ ∧/ Tlat/ +/ TcompNmem/ / WLPeffTbwNmem/ 其中/ WLPeff/ 表示/ 一个/ SM/ 上/ 并发/ 执行/ 的/ Warp/ 数/ ,/ 图/ 2/ 中/ 示例/ 程序/ 的/ WLPeff/ 为/ 3.2/ ./ 2.2/ 问题/ 描述/ 不失/ 一般性/ ,/ 访存/ 受限/ 程序/ 的/ 功耗/ 优化/ 问题/ 定义/ 为/ :/ 在/ 不/ 影响/ 程序/ 性能/ 的/ 情况/ 下/ ,/ 确定/ 活跃/ 处理器/ 个数/ N/ 和/ 运行/ 频率/ F/ ,/ 使/ GPU/ 完成/ Kernel/ 执行/ 的/ 总/ 能耗/ E/ 最小/ ./ 文中/ 活跃/ 处理器/ 核心/ 指/ 实际/ 参与/ 计算/ 的/ 处理器/ 核心/ ./ 根据/ 文献/ [/ 6/ ]/ 对/ 同构/ 多核/ 处理器/ 的/ 分析/ 结论/ 可知/ ,/ 将/ 计算/ 任务/ 平均分配/ 给/ 所有/ 处理器/ 核心/ ,/ 且/ 处理器/ 以/ 相同/ 的/ 运行/ 速度/ 完成/ 任务/ 时/ 总/ 能耗/ 达到/ 最优/ ./ 我们/ 假设/ Kernel/ 中/ 的/ 计算/ 任务/ 可以/ 均匀/ 分配/ 到/ 所有/ 核心/ ,/ 因此/ 在/ 分析模型/ 中/ 认为/ 所有/ 处理器/ 核心/ 的/ 频率/ 相同/ ;/ 作为/ 特例/ 我们/ 在/ 3.2/ 节中/ 也/ 讨论/ 了/ 负载/ 不/ 平衡/ 的/ 情况/ ./ 按照/ 物理学/ 定律/ ,/ 能耗/ E/ 是/ 芯片/ 功耗/ P/ 与/ 执行/ 时间/ T/ 的/ 乘积/ ./ 下面/ 首先/ 讨论/ 芯片/ 功耗/ 的/ 影响/ 因素/ ./ CMOS/ 电路/ 的/ 总/ 功耗/ 由/ 动态/ 功耗/ Pd/ 和/ 静态/ 功耗/ Ps/ 组成/ ,/ 即/ 总/ 功耗/ P/ =/ Pd/ +/ Ps/ ./ 动态/ 电压/ // 频率/ 调节/ 技术/ 是/ 降低/ 动态/ 功耗/ Pd/ 的/ 有效/ 方法/ ./ 在/ 工艺/ 尺度/ 大于/ 90nm/ 时/ ,/ 动态/ 功耗/ 在/ 总/ 功耗/ 中/ 占/ 较大/ 比重/ ;/ 随着/ 工艺/ 尺度/ 不断/ 缩小/ ,/ 静态/ 功耗/ 的/ 比重/ 不断/ 增大/ ,/ 在/ 45nm/ 尺度/ 下/ 两者/ 比重/ 已经/ 相当/ [/ 7/ ]/ ./ 动态/ 处理器/ 核心/ 关闭/ 技术/ 是/ 针对/ 静态/ 功耗/ Ps/ 的/ 主要/ 优化/ 方法/ ./ 下面/ 分别/ 介绍/ 影响/ 动态/ 功耗/ 和/ 静态/ 功耗/ 的/ 因素/ ./ 根据/ CMOS/ 电路/ 的/ 功耗/ 公式/ ,/ 处理器/ 动态/ 功耗/ 与/ 电压/ 和/ 频率/ 的/ 关系/ 为/ 其中/ A/ 是/ 切换/ 因子/ ,/ C/ 是/ 切换/ 电容/ ,/ V/ 是/ 核心/ 电压/ ,/ F/ 是/ 运行/ 频率/ ./ 处理器/ 核心/ 电压/ 与/ 该/ 电压/ 下/ 的/ 最高/ 运行/ 频率/ 有/ 如下/ 关系/ :/ 其中/ VT/ 为/ 阈值电压/ ,/ K/ 和/ γ/ 是/ 与/ 工艺/ 相关/ 的/ 参数/ ./ 一般/ VT/ 很小/ ,/ 因此/ 上/ 式/ 简化/ 为/ 在/ 本文/ 中/ ,/ 我们/ 假设/ 处理器/ 工作/ 在/ 核心/ 电压/ 允许/ 的/ 最高/ 频率/ ,/ 因此/ 在/ 后/ 文中/ 省略/ 下标/ max/ ./ 为/ 便于/ 描述/ ,/ 记/ Kd/ =/ ACK/ ,/ 则/ Pd/ =/ KdV/ γ/ +/ 1/ ./ 根据/ 文献/ [/ 8/ ]/ 建立/ 的/ 静态/ 功耗/ 模型/ ,/ 处理器/ 静态/ 功耗/ Ps/ 为/ 其中/ n/ 是/ 晶体管/ 个数/ ,/ Kdesign/ 是/ 与/ 设计/ 相关/ 的/ 参数/ ,/ I/ ^/ leak/ 是/ 与/ 工艺/ 温度/ 相关/ 的/ 参数/ ./ 本文/ 假定/ GPU/ 在/ 执行/ Kernel/ 程序/ 的/ 过程/ 中/ 温度/ 恒定/ ,/ 即/ I/ ^/ leak/ 为定值/ ./ 为/ 便于/ 描述/ ,/ 记/ Ks/ =/ nKdesignI/ ^/ leak/ ,/ 则/ Ps/ =/ KsV/ ./ 记/ Kernel/ 中/ 包含/ 的/ 线程/ 块/ 数为/ NTB/ ,/ 每个/ 线程/ 块/ 中/ 包含/ Warp/ 数为/ NWarp/ ,/ 则/ 平均/ 每个/ 处理器/ 核心/ 执行/ NWarpNTBN/ 个/ Warp/ ./ 根据/ 2.2/ ./ 1/ 节/ 的/ 分析/ ,/ 对于/ 访存/ 受限/ 程序/ Kernel/ 总/ 执行/ 时间/ 取决于/ 访存/ 操作/ 时间/ ,/ 即/ 需要/ 注意/ 的/ 是/ ,/ 动态/ 功耗/ 只/ 发生/ 在/ 处理器/ 核心/ 的/ 运算/ 过程/ 中/ ,/ 而/ 静态/ 功耗/ 在/ Kernel/ 执行/ 过程/ 中/ 始终/ 存在/ ,/ 则/ Kernel/ 执行/ 的/ 总/ 能耗/ 为/ E/ =/ NKdV/ γ/ +/ 1/ ×/ NWarpNTB/ =/ NWarpNTBKdV/ γ/ +/ 1Tcomp/ +/ KsVT/ 综合/ 式/ (/ 1/ )/ 和/ 式/ (/ 3/ )/ ,/ 访存/ 受限/ 程序/ 的/ 功耗/ 优化/ (/ 问题/ 可以/ 描述/ 为/ minE/ =/ NWarpNTB/ (/ KdV/ γ/ +/ 1Tcomp/ +/ KsVTbw/ )/ 烄/ s/ ./ t/ ./ Tcomp/ / Tbw/ 烅/ 烆/ 其中/ ,/ Vlow/ 和/ Vhigh/ 分别/ 为/ 处理器/ 核心/ 电压/ 的/ 最低值/ 和/ 最高值/ ;/ 与/ 之/ 相应/ 的/ Flow/ 和/ Fhigh/ 分别/ 为/ 处理器/ 核心/ 频率/ 的/ 最低值/ 和/ 最高值/ ;/ Nmax/ 为/ GPU/ 包含/ 的/ 核心/ 总数/ ./ 3/ 模型/ 指导/ 的/ 多维/ GPU/ 功耗/ 优化/ 方法/ 由式/ (/ 4/ )/ 可知/ ,/ 降低/ 运行/ 频率/ F/ 可以/ 有效/ 降低/ 能耗/ E/ ,/ 同时/ 在/ 不/ 影响/ 程序/ 性能/ 的/ 约束/ 下/ ,/ 活跃/ 处理器/ 数量/ N/ 对/ 处理器/ 运行/ 频率/ F/ 有着/ 直接/ 的/ 影响/ ,/ 因此/ 问题/ 的/ 关键/ 是/ 确定/ 活跃/ 核心/ 数量/ 与/ 运行/ 频率/ 对/ 程序执行/ 时间/ 和/ 能耗/ 的/ 影响/ ./ 3.1/ 节/ 首先/ 分析/ 核心/ 间/ Page5/ 负载平衡/ 情况/ 下/ 的/ 功耗/ 优化/ 问题/ ;/ 作为/ 特例/ ,/ 3.2/ 节中/ 分析/ 了/ 负载/ 不/ 平衡/ 的/ 情况/ ./ 为/ 便于/ 推导/ ,/ 在/ 本节/ 中/ 所有/ 与/ 时间/ 有关/ 的/ 变量/ 都/ 以/ 核心/ 单元/ 周期/ 数为/ 单位/ ./ 3.1/ 负载平衡/ 下/ 模型/ 参数/ 求解/ 通常/ ,/ CUDA/ 程序/ 中线/ 程块数/ 远远/ 大于/ 处理器/ 核心/ 数量/ ,/ 即/ NTB/ / Nmax/ ,/ 因此/ 本/ 节/ 假设/ 核心/ 间/ 负载平衡/ ./ 根据/ 文献/ [/ 5/ ]/ 建立/ 的/ GPU/ 性能/ 模型/ ,/ Warp/ 中/ 每条/ 指令/ 的/ 平均/ 延迟/ 为/ LcompSWarp/ 程中/ 指令/ 的/ 平均/ 延迟/ ,/ 故/ 一个/ Warp/ 的/ 指令/ 延迟/ Ccomp/ =/ Ninst/ 要/ 注意/ 的/ 是/ ,/ 访存/ 指令/ 同样/ 需要/ 发射/ 周期/ ,/ 故令/ 访存/ 指令/ 延迟/ 为/ 1/ ./ 进一步/ ,/ 考虑/ 由/ 访存/ 带宽/ 引起/ 的/ 延迟/ Cbw/ ./ 记/ 一个/ Warp/ 访问/ 片/ 外存储器/ 的/ 字节数/ 为/ Nbytes/ ,/ GPU/ 片/ 外存储器/ 带宽/ 为/ Membw/ ./ 由于/ 片/ 外存储器/ 带宽/ 由/ 所有/ 处理器/ 核心/ 共享/ ,/ 因此/ 每个/ 核心/ 分得/ 的/ 带宽/ 为/ MembwN/ ,/ 则/ Warp/ 平均/ 访存/ 带宽/ 延迟/ Cbw/ =/ NbytesFMembw/ // N/ =/ NbytesNF/ 对于/ 访存/ 受限/ 程序/ ,/ Warp/ 的/ 执行/ 时间/ 取决于/ 访存/ 延迟/ Cbw/ ./ 由式/ (/ 4/ )/ 可知/ ,/ Kernel/ 程序/ 的/ 能耗/ E/ 为/ E/ =/ NWarpNTBKdV/ γ/ +/ 1Ccomp/ 由式/ (/ 4/ )/ 可知/ ,/ 功耗/ 优化/ 过程/ 需/ 满足/ 不等式/ Tcomp/ / Tbw/ 和/ NmemTlat/ +/ Tcomp/ / WLPeffTbw/ ,/ 将/ Ccomp/ 和/ Cbw/ 的/ 表达式/ 代入/ 上述/ 不等式/ ,/ 可/ 得/ 综合/ 式/ (/ 5/ )/ ~/ (/ 7/ )/ ,/ 在/ 式/ (/ 4/ )/ 的/ 基础/ 上访/ 存/ 受限/ 程序/ 的/ 功耗/ 优化/ 问题/ 可以/ 进一步/ 描述/ 为/ minE/ =/ NWarpNTBKdKV2Ccomp/ +/ KsKV2/ -/ γ/ C/ 烄/ s/ ./ t/ ./ NV/ γ/ -/ 1/ / CcompMembw/ 烅/ NmemTlatKV/ γ/ -/ 1/ +/ Ccomp/ / WLPeffNbytes1/ / N/ / Nmax/ ,/ Vlow/ / V/ / Vhigh/ ,/ N/ ∈/ N/ 烆/ 3.2/ 负载/ 不/ 平衡/ 下/ 模型/ 参数/ 求解/ 3.1/ 节中/ 假设/ NTB/ / Nmax/ ,/ 即/ 有/ 足够/ 多/ 的/ 并行任务/ 占/ 满/ 所有/ 处理器/ 核心/ ./ 此时/ ,/ 式/ (/ 8/ )/ 中/ 核心/ 数量/ N/ 的/ 取值/ 范围/ 是/ 1/ / N/ / Nmax/ ,/ 且/ WLPeff/ =/ WLPmax/ ,/ WLPmax/ 表示/ 硬件资源/ 允许/ 的/ 最大/ 并发/ 执行/ 的/ Warp/ 数量/ ,/ 由/ 处理器/ 核心/ 的/ 硬件资源/ 和/ Kernel/ 程序/ 对/ 硬件资源/ 的/ 使用量/ 决定/ ./ 但是/ 在/ 部分/ 应用/ 中/ ,/ 由于/ 问题/ 规模/ 或/ 应用/ 并发/ 度/ 等/ 因素/ 的/ 影响/ ,/ 实际/ 运行/ 的/ 线程/ 数/ 可能/ 少于/ 处理器/ 核心/ 可以/ 允许/ 的/ 最大值/ ./ 如果/ NTB/ </ Nmax/ ,/ 则/ 必有/ Nmax/ -/ NTB/ 个/ 处理器/ 核心/ 处于/ 空闲/ 状态/ ,/ 显然/ 关闭/ 空闲/ 处理器/ 核心/ 可以/ 降低/ 静态/ 功耗/ 开销/ ./ 因此/ 当/ NTB/ </ Nmax/ 时式/ (/ 8/ )/ 中/ N/ 的/ 取值/ 范围/ 应/ 修正/ 为/ 1/ / N/ / NTB/ ,/ 而/ 参数/ WLPeff/ 与/ N/ 的/ 取值/ 有关/ ,/ 不难/ 分析/ 得到/ WLPeff/ =/ minWLPmax/ ,/ NwarpNTB4/ 实验/ 方法/ 由于/ 目前/ 商用/ GPU/ 芯片/ 尚/ 不/ 支持/ 动态/ 核心/ 关闭/ 技术/ ,/ 因此/ 我们/ 基于/ 一款/ 时钟/ 精确/ 的/ GPU/ 模拟器/ 扩展/ 了/ 功耗/ 模拟/ 模块/ ,/ 以此/ 验证/ 本文/ 提出/ 的/ 功耗/ 优化/ 方法/ ./ 4.1/ 节/ 和/ 4.2/ 节将/ 分别/ 介绍/ 测试/ 平台/ 和/ 相关/ 测试用例/ ./ 4.1/ 测试/ 平台/ 介绍/ 实验/ 平台/ 的/ 配置/ 参数/ ./ 4.1/ ./ 1/ 功耗/ 模型/ 扩展/ 本/ 节/ 依次/ 介绍/ GPU/ 功耗/ 模型/ 的/ 扩展/ 方法/ 以及/ 为了/ 验证/ 本文/ 提出/ 的/ 低功耗/ 优化/ 方法/ ,/ 我们/ 基于/ 一个/ 开源/ GPU/ 模拟器/ GPGPU/ -/ sim/ 扩展/ 了/ Wattch/ [/ 9/ ]/ 和/ Orion/ [/ 10/ ]/ 功耗/ 模型/ ./ GPGPU/ -/ sim/ 是/ 一款/ 时钟/ 精确/ 的/ 统一/ 框架/ GPU/ 模拟器/ [/ 11/ ]/ ,/ 该/ 模拟器/ 支持/ CU/ -/ DAPTX/ (/ ParallelThreadExecution/ )/ 指令集/ ,/ 可以/ 运行/ CUDA/ 和/ OpenCL/ 程序/ ./ Wattch/ 是/ 目前/ 模拟/ 平台/ 中/ 使用/ 较为/ 广泛/ 的/ 处理器/ 动态/ 功耗/ 模型/ ,/ 它/ 基于/ CMOS/ 电路/ 动态/ 功耗/ 公式/ ,/ 通过/ 参数/ 化/ 方法/ 评估/ 动态/ 功耗/ 值/ ./ Wattch/ 功耗/ 模型/ 将/ 所有/ 硬件/ 结构/ 分为/ 四类/ :/ Array/ 结构/ (/ Array/ )/ 、/ 全/ 相连/ 内容/ 寻址/ 存储器/ (/ CAM/ )/ 、/ 组合/ 逻辑/ 与/ 线路/ (/ CLW/ )/ 和/ 时钟/ (/ Clocking/ )/ ./ 我们/ 参考/ 了/ SimpleScalar/ 中/ 功耗/ 模型/ 的/ 扩展/ 方法/ 实现/ GPGPU/ -/ sim/ 的/ 功耗/ 模型/ ,/ 表/ 1/ 给出/ 了/ GPGPU/ -/ sim/ 中/ 功能/ 部件/ 与/ Wattch/ 功耗/ 模型/ 中/ 定义/ 的/ 硬件/ 结构/ 的/ 对应/ 关系/ ./ Page6/ 类别/ ArrayCAMInstructionwindowCLWALUandInstructionselectionunitClockingGlobalclockWattch/ 中/ 不/ 包含/ 互联网络/ 的/ 功耗/ 模型/ ,/ 而/ 随着/ 核心/ 数量/ 的/ 不断/ 增加/ ,/ 互联网络/ 的/ 功耗/ 日益/ 增大/ ,/ 因此/ 我们/ 扩充/ 了/ Orion/ [/ 10/ ]/ 网络/ 功耗/ 模型/ ./ Orion/ 功耗/ 模型/ 对/ 网络/ 中/ 时钟/ 、/ 链路/ 、/ 仲裁/ 器/ 等/ 部件/ 都/ 有/ 较为/ 准确/ 的/ 建模/ ./ 表/ 1/ 中/ 各/ 主要/ 硬件/ 结构/ 的/ 工艺/ 尺度/ 参考/ 了/ Orion2/ ./ 0/ 版本/ 中/ 关于/ 65nm/ 工艺/ 下/ 的/ 参数/ 定义/ ./ 对于/ 静态/ 功耗/ 的/ 模拟/ ,/ 我们/ 采用/ 文献/ [/ 2/ ]/ 中/ 的/ 方法/ ,/ 按照/ 动态/ 功耗/ 值/ 的/ 一定/ 比例/ 估计/ 静态/ 功耗/ 值/ ./ 记/ 最高/ 频率/ 下/ 静态/ 功耗/ 与/ 动态/ 功耗/ 的/ 比值/ 为/ λ/ =/ Ps/ // Pd/ ,/ 则/ 可/ 计算/ Ks/ =/ λ/ KdV/ γ/ +/ 1/ 我们/ 通过/ 调整/ 不同/ 的/ 数值/ 反应/ 不同/ 温度/ 下/ 功耗/ 优化/ 的/ 情况/ ./ 4.1/ ./ 2/ 测试/ 平台/ 配置/ GPGPU/ -/ sim/ 提供/ 了/ 灵活/ 的/ 体系结构/ 级/ 配置/ 方法/ ,/ 如/ 核心/ 数量/ 、/ 核心/ 频率/ 、/ 访存/ 带宽/ 等/ 重要/ 结构/ 参数/ ./ 实验/ 中/ 的/ 参数/ 配置/ 参考/ 了/ NVIDIAQuadroFX5800GPU/ 的/ 硬件/ 参数/ ./ FX5800GPU/ 是/ 目前/ 主流/ 高端/ GPU/ ,/ 其/ 单精度/ 峰值/ 性能/ 达到/ 624GFlops/ ,/ 访存/ 带宽/ 102GB/ // s/ ./ 表/ 2/ 给出/ 了/ 硬件/ 配置/ 参数/ ,/ 其中/ 对/ 核心/ 频率/ 和/ 电压/ 的/ 设置/ 参考/ 了/ 当前/ GPU/ 芯片/ 参表/ 3/ 测试程序/ 描述/ 应用/ 类别/ SpeckleReducingAnisotropicDiffusion5/ 实验/ 结果/ 与/ 分析/ 5.1/ 访存/ 操作/ 对/ 程序/ 性能/ 的/ 影响/ 分析/ 图/ 3/ 给出/ 了/ 所有/ Kernel/ 程序/ 中/ 存储器/ 处于/ 忙/ 状态/ 的/ 时间/ 占/ Kernel/ 总/ 执行/ 时间/ 的/ 百分比/ ,/ 该值/ 体现/ 了/ Kernel/ 程序/ 对/ 存储器/ 的/ 使用/ 密集/ 性/ ./ 从图/ 中/ 可数/ ./ 由于/ 真实/ 处理器/ 只/ 支持/ 离散/ 的/ 频率/ 调节/ ,/ 因此/ 我们/ 以/ 100MHz/ 为/ 跨步/ ,/ 定义/ 了/ 9/ 个/ 离散/ 频率/ 值/ ./ 硬件/ #/ ShaderCore/ #/ SIMDPipelineWidth/ #/ registerpercore/ #/ sharedmemory/ #/ memorychipBandwidthpermemorychipMemorycontrollerCore/ // Interconnection/ // MemoryFrequencyInterconnectionShaderCoreFrequency0/ ./ 5/ ~/ 1.3/ GHz/ ,/ step/ =/ 100MHzShaderCoreVoltage4/ ./ 2/ 测试用例/ 介绍/ 我们/ 选取/ 了/ 9/ 个/ 科学计算/ 应用/ 作为/ 测试用例/ ,/ 其中/ 2/ 个/ 应用/ 选自/ SPECOMP2001/ 测试/ 集/ ,/ 5/ 个/ 应用/ 选自/ Rodinia/ 测试/ 集/ [/ 1/ ]/ ,/ 另外/ 一个/ 应用/ 出自/ CUDASDK2/ ./ 3/ ./ Rodinia/ 测试/ 集是/ 由/ 弗吉尼亚/ 大学/ 开发/ 的/ 一套/ 面向/ 异构/ 系统/ 性能/ 评估/ 的/ 基准/ 测试程序/ 集/ ,/ 目前/ 提供/ OpenMP/ 和/ CUDA/ 两种/ 实现/ 版本/ ./ 我们/ 选择/ 了/ 其中/ 的/ 5/ 个/ 程序/ ,/ 并/ 尽可能/ 覆盖/ 更/ 多/ 的/ 应用/ 类型/ ,/ 如表/ 3/ 所示/ ./ 此外/ ,/ 我们/ 选取/ 了/ SPECOMP2001/ 测试/ 集中/ 的/ 312/ ./ SWIM/ 和/ 314/ ./ MGRID/ 两个/ 应用/ ,/ 并/ 通过/ CUDA/ 语言/ 映射/ 在/ GPU/ 平台/ [/ 12/ ]/ ./ 表/ 3/ 中/ 给出/ 了/ 所有/ 应用/ 的/ 简要/ 描述/ ,/ 包括/ 每个/ 应用/ 中/ 所有/ Kernel/ 的/ 并发/ 线程/ 块/ 数等/ ,/ 其中/ ki/ 表示/ 应用/ 中/ 的/ 第/ i/ 个/ Kernel/ 程序/ ./ StructureGridSWIMk15/ ;/ k27/ ;/ k36UnstructuredGridBPStructuredGridStructuredGridSRAD/ 以/ 看出/ ,/ 除/ HS/ 、/ SRAD/ 和/ NW/ 以外/ ,/ 其它/ Kernel/ 程序/ 都/ 对/ 存储器/ 有/ 很/ 高/ 的/ 使用率/ ./ 其中/ HS/ 和/ SRAD/ 是/ 计算/ 受限/ 的/ 应用程序/ ;/ 而/ NW/ 中访存/ 部件/ 的/ 利用率/ 低/ 的/ 原因/ 是/ 该/ 程序/ 对/ GPU/ 的/ 占用率/ 较/ 低/ ,/ 而且/ 其/ 对/ 不同/ 存储体/ 的/ 访问/ 存在/ 不/ 平衡/ ,/ 导致/ 整体/ 利用率/ 不高/ ./ 与/ 之/ 相反/ 的/ 是/ ,/ MG/ 和/ SWIM/ 中/ 所有/ Kernel/ 程序/ 的/ 存储器/ 利用率/ 都/ 很/ 高/ ,/ 访存/ 带宽/ 成为/ 程序/ 的/ 性/ Page7/ 能/ 瓶颈/ ;/ 而/ BP/ 中/ 存在/ 一个/ Kernel/ 程序/ 对/ 存储器/ 的/ 使用率/ 较/ 高/ ./ 通过/ 对比/ 存储器/ 利用率/ 均值/ 和/ 最大值/ 的/ 差距/ ,/ 可以/ 发现/ 部分/ Kernel/ 程序/ 对/ 存储体/ 的/ 使用率/ 存在/ 不平衡性/ (/ 如/ BP/ 、/ SC/ )/ ,/ 这/ 必然/ 加剧/ 对/ 存储系统/ 的/ 压力/ ./ 同时/ ,/ 图/ 3/ 也/ 给出/ 了/ 平均/ 每个/ 周期/ 完成/ 的/ 图/ 3DRAMBank/ 忙/ 状态/ 时间/ 比例/ 与/ 处理器/ 核心/ 实际/ IPC5/ ./ 2/ 模型/ 指导/ 的/ 功耗/ 优化/ 推演/ 过程/ 示例/ 本节/ 以/ 一个/ 具体/ 的/ 程序/ 为/ 案例/ ,/ 详细/ 介绍/ 本文/ 提出/ 的/ 基于/ 模型/ 的/ 功耗/ 优化/ 推演/ 过程/ ./ 由式/ (/ 8/ )/ 可知/ ,/ 模型/ 求解/ 的/ 关键/ 参数/ 可/ 分为/ 系统/ 参数/ 和/ 程序/ 参数/ ./ 系统/ 参数/ 主要/ 包括/ SM/ 的/ SIMD/ 宽度/ 、/ Warp/ 大小/ 以及/ 流水线/ 深度/ 等/ ./ 如表/ 2/ 所示/ ,/ 模拟/ GPU/ 的/ SIMD/ 宽度/ Ssimd/ =/ 8/ ,/ Warp/ 大/ 小S/ Warp/ =/ 32/ ;/ 因此/ Warp/ 发射/ 一条/ 指令/ 的/ 延迟/ 为/ 4/ 个/ 周期/ ./ 根据/ 文献/ [/ 11/ ]/ ,/ 模拟/ GPU/ 的/ 流水线/ 深度/ 为/ 24/ ,/ 因此/ 当/ 一个/ SM/ 上/ 执行/ 的/ Warp/ 数/ 大于/ 6/ (/ 24/ // 4/ =/ 6/ )/ 时/ ,/ 可以/ 有效/ 隐藏/ 线程/ 内/ 由于/ 指令/ 间/ 真/ 依赖/ 关系/ 引发/ 的/ 流水线/ 延迟/ [/ 11/ ]/ (/ 这里/ 不/ 考虑/ 长访存/ 延迟/ ,/ 访存/ 延迟/ 通过/ Cbw/ 描述/ )/ ./ 在/ 程序/ 参数/ 方面/ ,/ 主要/ 包括/ 运算/ 延迟/ Ccomp/ 和/ 访/ 存量/ Nbytes/ ./ 下面/ 以/ SWIM/ 应用/ 中/ 的/ k3/ 程序/ 为例/ ,/ 介绍/ 程序/ 参数/ 的/ 计算方法/ ./ 如图/ 4/ 所示/ ,/ 该/ 程序/ 中/ 每个/ 线程/ 需要/ 从/ 9/ 个/ 数组/ 中/ 各/ 读入/ 1/ 个/ 数据/ 元素/ ,/ 在/ 完成/ 相关/ 计算/ 后/ ,/ 将/ 结果/ 写入/ 其中/ 6/ 个/ 数组/ (/ 图中/ 只/ 给出/ 了/ 代码/ 片段/ )/ ./ CUDA/ 编程语言/ 提供/ 了/ 一种/ 与/ 平台/ 无关/ 的/ 中间代码/ PTX/ 指令/ ,/ 模拟器/ 的/ 执行/ 是/ 通过/ PTX/ 指令/ 驱动/ 的/ ,/ 因此/ 我们/ 以/ PTX/ 指令/ 分析程序/ 参数/ ./ 通过/ 分析/ ,/ 该/ 程序/ 中/ 每个/ 线程/ 执行/ 的/ 指令/ 数/ Ninst/ =/ 37/ ,/ 其中/ 包含/ 15/ 条访存/ 指令/ ./ 根据/ 硬件资源/ 约束/ ,/ 该/ 程序/ 在/ 一个/ SM/ 上/ 的/ 并发/ Warp/ 数为/ 24/ (/ 大于/ 6/ )/ ,/ 此时/ 可/ 完全/ 隐藏/ 线程/ 内/ 由于/ 指令/ 间/ 真/ 依赖/ 关系/ 引发/ 的/ 流水线/ 延迟/ ,/ 因此/ 平均/ 每条/ 运算/ 指令/ 的/ 延迟/ Lcomp/ =/ 1/ ./ 如果/ 并发/ Warp/ 数/ 不足以/ 隐藏/ 流水线/ 延迟/ ,/ 则/ 需/ 在/ 此基础/ 上/ 增加/ 未/ 被/ 隐藏/ 的/ 延迟/ 开销/ ;/ 根据/ 指令/ 数/ (/ InstructionPerCycle/ ,/ IPC/ )/ ./ 模拟/ GPU/ 的/ 峰值/ IPC/ 可以/ 达到/ 240/ ,/ 但是/ 由于/ 受限于/ 访存/ 带宽/ ,/ 大量/ Kernel/ 程序/ 的/ 实际/ IPC/ 都/ 远/ 低于/ 理论/ 峰值/ ,/ 因此/ 对于/ 大量/ GPU/ 程序/ ,/ 面向/ 处理器/ 核心/ 的/ 功耗/ 优化/ 具有/ 较大/ 潜能/ ./ 文献/ [/ 5/ ]/ 建立/ 的/ GPU/ 性能/ 分析模型/ ,/ 可以/ 分析/ 得出/ 任意/ Kernel/ 程序/ 的/ 平均/ 运算/ 指令/ 延迟/ ,/ 因此/ 本文/ 不再/ 赘述/ .__/ global/ __/ voidk3/ (/ float/ / gUNEW/ ,/ float/ / gUOLD/ ,/ float/ / gU/ ,/ …/ )/ {/ …/ unew/ =/ gUNEW/ [/ idx/ ]/ ;/ // // idxisthearrayindexuold/ =/ gUOLD/ [/ idx/ ]/ ;/ u/ =/ gU/ [/ idx/ ]/ ;/ gUOLD/ [/ idx/ ]/ =/ u/ +/ alpha/ / (/ unew/ -/ u/ -/ u/ +/ uold/ )/ ;/ gU/ [/ idx/ ]/ =/ unew/ ;/ …/ }/ 根据/ Lcomp/ 可知/ 每个/ Warp/ 的/ 运算/ 指令/ 延迟/ Ccomp/ =/ Ninst/ 作/ 对象/ 为/ 单精度/ 浮点/ 数据/ ,/ 因此/ 每个/ Warp/ 的/ 访/ 存量/ Nbytes/ =/ 15/ ×/ 4/ ×/ Swarp/ =/ 1920/ ./ 将/ Ccomp/ 和/ Nbytes/ 代入/ 式/ (/ 8/ )/ ,/ 可知/ 该/ 程序/ 为/ 访存/ 受限/ 程序/ ;/ 同时/ ,/ 在/ 以上/ 参数/ 的/ 基础/ 上/ ,/ 通过/ 式/ (/ 8/ )/ 即可/ 求得/ 最优/ 活跃/ 核心/ 数量/ 及其/ 运行/ 频率/ ./ 5.3/ 优化/ 效果/ 评估/ 与/ 分析/ 根据/ 2.2/ ./ 1/ 节中/ 对/ 访存/ 受限/ 程序/ 边界条件/ 的/ 分析/ ,/ 我们/ 区分/ 出/ 测试用例/ 中/ 的/ 访存/ 受限/ 程序/ ./ 为了/ 体现/ 芯片/ 温度/ 对/ 静态/ 功耗/ 的/ 影响/ ,/ 我们/ 调节/ 参数/ λ/ 的/ 大小/ 以/ 反应/ 不同/ 静态/ 功耗/ 下/ 的/ 功耗/ 优化/ 效果/ ./ 图/ 5/ 和/ 图/ 6/ 给出/ 了/ 优化/ 前后/ 的/ 执行/ 时间/ 和/ 能耗/ 对比/ 图/ ,/ 分别/ 对应/ 静态/ 功耗/ 与/ 动态/ 功耗/ 比/ λ/ 为/ 0.2/ 和/ 0.5/ 两种/ 情况/ ./ 图中/ 尖括号/ 中/ 数值/ 依次/ 表示/ 活跃/ 处理器/ 核/ Page8/ 心/ 数量/ 和/ 运行/ 级别/ (/ 取值/ 范围/ 是/ 0/ ~/ 8/ ,/ 数字/ 越小/ 频率/ 越低/ )/ ./ 当/ λ/ 为/ 0.2/ 时/ ,/ 本文/ 提出/ 的/ 方法/ 可以/ 在/ 性能/ 损失/ 平均/ 不/ 超过/ 0.6/ %/ 的/ 情况/ 下/ 节省/ 能耗/ 17.5/ %/ ./ 其中/ MG/ 中/ 的/ k1/ 程序/ 和/ FWT/ 中/ 的/ k2/ 程序/ 在/ 频率/ 图/ 5/ 功耗/ 优化/ 效果图/ (/ λ/ =/ 0.2/ )/ 图/ 6/ 功耗/ 优化/ 效果图/ (/ λ/ =/ 0.5/ )/ 当/ 静态/ 功耗/ 与/ 动态/ 功耗/ 比/ λ/ 为/ 0.5/ 时/ ,/ 静态/ 功耗/ 在/ 总/ 功耗/ 中/ 的/ 比例/ 增大/ ./ 由/ 2.2/ ./ 2/ 节/ 的/ 分析/ 可知/ ,/ 当/ 静态/ 功耗/ 增大/ 时/ ,/ 与/ 降低/ 运行/ 频率/ 相比/ ,/ 关闭/ 处理器/ 核心/ 可以/ 获得/ 更大/ 的/ 能耗/ 节省/ ./ 对比/ 图/ 5/ 和/ 图/ 6/ 中/ 分析方法/ 给出/ 的/ 最优/ 配置/ ,/ 我们/ 可以/ 发现/ ,/ 图/ 6/ 中/ Kernel/ 程序/ 的/ 运行/ 级别/ 提高/ ,/ 但是/ 活跃/ 核心/ 数量/ 相应/ 减少/ ;/ 可以/ 看出/ 本文/ 提出/ 的/ 方法/ 可以/ 有效/ 适应/ 不同/ 的/ 硬件/ 特征/ 或/ 运行/ 环境/ ./ 当/ λ/ 为/ 0.5/ 时/ ,/ 本文/ 提出/ 的/ 方法/ 平均/ 可以/ 在/ 不/ 影响/ 性能/ 的/ 情况/ 下/ 节省/ 能耗/ 22.7/ %/ ./ 因此/ ,/ 对于/ 以/ GPU/ 为/ 代表/ 的/ 众核/ 体系/ 结图/ 7/ 与/ 单独/ 使用/ DVFS/ 或/ DCT/ 的/ 优化/ 效果/ 对比/ (/ λ/ =/ 0.2/ )/ 降低/ 的/ 情况/ 下/ ,/ 性能/ 反而/ 提高/ ./ 通过/ 对/ 模拟器/ 输出/ 结果/ 的/ 分析/ 发现/ ,/ 在/ 运行/ 频率/ 较/ 低/ 的/ 情况/ 下/ ,/ 处理器/ 核心/ 对/ 网络/ 的/ 竞争/ 明显降低/ ,/ 减少/ 网络/ 拥塞/ 带来/ 的/ 额外/ 开销/ ,/ 提高/ 了/ 系统/ 吞吐/ 率/ ./ 构/ ,/ 处理器/ 核心/ 动态/ 关闭/ 技术/ 将/ 是/ 降低功耗/ 的/ 重要/ 手段/ ./ 图/ 7/ 给出/ 了/ 结合/ DVFS/ 和/ DCT/ 的/ 多维/ 低功耗/ 优化/ 方法/ 与/ 单独/ 使用/ 任一/ 方法/ 下/ 的/ 优化/ 效果/ 对比/ ./ 除/ BP/ 程序/ 外/ ,/ 其余/ 所有/ 测试程序/ 中/ 多维/ 优化/ 方法/ 都/ 优于/ 单一/ 优化/ 方法/ ./ 伴随/ 处理器/ 芯片/ 工艺/ 的/ 发展/ ,/ 处理器/ 静态/ 功耗/ 比例/ 不断/ 增大/ ,/ 处理器/ 运行/ 电压/ 的/ 不断/ 降低/ ,/ 单纯/ 依靠/ DVFS/ 方法/ 已经/ 难以获得/ 有效/ 的/ 能耗/ 节省/ ./ 与此同时/ ,/ DCT/ 方法/ 将/ 随着/ 核心/ 数量/ 的/ 增加/ 变得/ 尤为重要/ ./ 本文/ 提出/ 的/ DVFS/ 与/ DCTPage9/ 多维/ 优化/ 方法/ 可以/ 有效/ 结合/ 两种/ 优化/ 方法/ 的/ 优势/ ,/ 综合/ 考虑/ 静态/ 功耗/ 与/ 动态/ 功耗/ 的/ 影响/ 以/ 选择/ 最优/ 配置/ ./ 5.4/ 与/ 搜索算法/ 的/ 比较/ 为了/ 检验/ 本文/ 提出/ 的/ 功耗/ 优化/ 方法/ ,/ 我们/ 实现/ 了/ 文献/ [/ 2/ ]/ 中/ 的/ 启发式/ 搜索/ 方法/ ./ 该/ 方法/ 以/ 最高/ 配置/ (/ 所有/ 核心/ 参与/ 计算/ 且/ 运行/ 在/ 最高/ 频率/ )/ 为/ 起点/ ,/ 通过/ 二分法/ 在/ 处理器/ 核心/ 数量/ 一维/ 进行/ 搜索/ ,/ 按照/ 顺序/ 方法/ 由/ 高/ 至/ 低/ 在/ 频率/ 一维/ 进行/ 搜索/ ./ 如果/ 遇到/ 某图/ 8/ 与/ 搜索算法/ 的/ 优化/ 效果/ 对比/ (/ λ/ =/ 0.2/ )/ 6/ 相关/ 工作/ (/ 1/ )/ 多核/ 通用/ 处理器/ 功耗/ 优化/ 研究/ 面向/ 多核/ 处理器/ 的/ 功耗/ 优化/ 技术/ 研究/ 已久/ ./ Li/ 等/ 人/ [/ 2/ ]/ 首次/ 提出/ 多核/ 处理器/ DVFS/ 与/ DCT/ 两/ 维空间/ 优化/ 方法/ ./ 作者/ 提出/ 一种/ 基于/ 经验/ 结果/ 的/ 启发式/ 策略/ 以/ 缩小/ 优化/ 空间/ ,/ 该/ 策略/ 并未/ 定量分析/ 动态/ 功耗/ 与/ 静态/ 功耗/ 的/ 关系/ ,/ 而且/ 该/ 方法/ 的/ 执行/ 时间/ 随着/ 处理器/ 核心/ 数量/ 与/ 核心/ 调频/ 级数/ 的/ 增大/ 而/ 增大/ ,/ 难以/ 应用/ 于/ 众核/ 体系结构/ ./ Curtis/ -/ Maury/ 等/ 人/ 提出/ 了/ 基于/ 采样/ 的/ 优化/ 方法/ [/ 3/ ]/ ,/ 该/ 方法/ 需要/ 采样/ 部分/ 配置/ 下/ 的/ 执行/ 时间/ 与/ 功耗/ 开销/ ,/ 因此/ 同样/ 引入/ 无法/ 忽略/ 的/ 运行/ 开销/ ,/ 影响/ 执行/ 性能/ ./ 文献/ [/ 6/ ]/ 为/ 同构/ 系统/ 的/ 功耗/ 优化/ 方法/ 建立/ 了/ 基础理论/ 模型/ ,/ 并/ 基于/ 该/ 模型/ 评估/ 了/ 不同/ 任务调度/ 方法/ 对系统/ 功耗/ 的/ 影响/ ,/ 文章/ 指出/ 在/ 同构/ 多核/ 处理器/ 中/ ,/ 所有/ 核心/ 以/ 相同/ 的/ 频率/ 完成/ 等量/ 的/ 计算/ 任务/ 可以/ 使/ 总/ 能耗/ 达到/ 最优/ ,/ 该/ 结论/ 对/ 指导/ 多核/ 处理器/ 功耗/ 优化/ 具有/ 重要/ 意义/ ./ (/ 2/ )/ GPU/ 功耗/ 评估/ 与/ 优化/ 研究/ 随着/ GPU/ 进入/ 通用/ 计算/ 领域/ ,/ 乃至/ 高性能/ 计算/ 领域/ ,/ 面向/ GPU/ 的/ 功耗/ 优化/ 技术/ 逐渐/ 被/ 各大/ 厂商/ 和/ 相关/ 研究者/ 关注/ ./ 在/ 产业/ 领域/ ,/ NVIDIA/ 公司/ 提出/ 了/ PowerMizer/ [/ 13/ ]/ 功耗/ 管理/ 方法/ ,/ PowerMizer/ 可以/ 根据/ 显卡/ 的/ 负载/ 情况/ 动态/ 调整/ 运行/ 频率/ ,/ 但是/ 只/ 配置/ 采样/ 性能/ 低于/ 第一个/ 采样/ 结果/ ,/ 则/ 在/ 更/ 高/ 的/ 配置/ 空间/ 继续/ 搜索/ ./ 需要/ 注意/ 的/ 是/ ,/ 搜索/ 次数/ 不仅/ 受限于/ 配置/ 空间/ 大小/ 而且/ 受限于/ 程序/ 迭代/ 次数/ ./ 如图/ 8/ 所示/ ,/ 由于/ GPU/ 体系结构/ 搜索/ 空间/ 巨大/ ,/ 而且/ 大量/ 真实/ 程序/ 的/ 迭代/ 次数/ 较/ 少/ ,/ 不足以/ 抵消/ 搜索/ 过程/ 本身/ 带来/ 的/ 时间/ 和/ 能耗/ 开销/ ;/ 搜索算法/ 的/ 优化/ 效果/ 明显/ 低于/ 本文/ 提出/ 的/ 分析方法/ ./ 随着/ 单芯片/ 核心/ 数量/ 和/ 运行/ 级别/ 数/ 的/ 不断/ 增加/ ,/ 搜索算法/ 的/ 效率/ 将/ 随之/ 降低/ ,/ 基于/ 模型/ 的/ 分析方法/ 优势/ 将/ 更为/ 突出/ ./ 支持/ 相对/ 简单/ 的/ 管理策略/ ,/ 难以/ 根据/ 应用/ 的/ 需求/ 进行/ 有/ 针对性/ 的/ 调频/ 操作/ ./ AMD/ 公司/ 的/ 类似/ 功耗/ 管理/ 方法/ 称为/ PowerPlay/ ./ 在/ 学术/ 领域/ ,/ 一些/ 面向/ GPU/ 的/ 功耗/ 统计/ 研究/ 也/ 逐渐/ 出现/ ./ 文献/ [/ 14/ ]/ 以/ 一个/ 典型/ 的/ 生物/ 计算/ 应用/ 为/ 案例/ ,/ 详细/ 对比/ 了/ CPU/ 和/ GPU/ 的/ 执行/ 性能/ 和/ 能量消耗/ ,/ 同时/ 指出/ GPU/ 高效能/ 的/ 发挥/ 与/ 程序/ 特征/ 和/ 优化/ 策略/ 有/ 密切关系/ ./ 文献/ [/ 15/ ]/ 评测/ 了/ GPU/ 在/ 一些/ 典型/ 应用/ 中/ 的/ 功耗/ 开销/ ,/ 详细分析/ 多处理器/ 和/ 存储/ 层次/ 等/ 关键/ 部分/ 对/ 功耗/ 的/ 影响/ ./ 与/ 本文/ 思路/ 接近/ 的/ 最新/ 研究/ [/ 16/ ]/ 针对/ 访存/ 带宽/ 受限/ 的/ 程序/ 提出/ 了/ 关闭/ 冗余/ 处理器/ 核心/ 的/ GPU/ 功耗/ 优化/ 方法/ ;/ 而/ 本文/ 提出/ 的/ 方法/ 综合/ 考虑/ 了/ 动态/ 电压/ // 频率/ 调节/ 和/ 关闭/ 技术/ ,/ 而且/ 详细/ 区分/ 了/ 访存/ 带宽/ 和/ 绝对/ 访存/ 时间/ 对/ 功耗/ 优化/ 的/ 影响/ ./ 目前/ ,/ 在/ 已有/ 的/ GPU/ 功耗/ 优化/ 方法/ 中/ ,/ 尚未/ 出现/ 基于/ DVFS/ 的/ 编译/ 级/ 功耗/ 优化/ 方法/ ./ (/ 3/ )/ GPU/ 性能/ 模型/ 研究/ 与/ 传统/ 通用/ 处理器/ 结构/ 相比/ ,/ GPU/ 体系结构/ 更为/ 简单/ ,/ 不/ 包含/ 分支/ 预测/ 、/ 乱序执行/ 等/ 复杂/ 控制/ 逻辑/ ,/ 因此/ 一些/ 研究者/ 建立/ 了/ 简单/ 高效/ 的/ 性能/ 模型/ [/ 5/ ,/ 17/ ]/ ./ 在/ 文献/ [/ 17/ ]/ 中/ ,/ 作者/ 提出/ 了/ 一个/ 简化/ 的/ GPU/ 性能/ 分析模型/ ./ 作者/ 认为/ 访存/ 操作/ 是/ 性能/ 模型/ 的/ 关键/ ,/ 因此/ 模型/ 主要/ 描述/ 了/ 访存/ 操作/ 的/ 并行度/ ,/ 而/ 访存/ 操作/ 的/ 并行度/ 主要/ 取决于/ 并行执行/ 的/ 线程/ 数和访/ 存/ 带宽/ ./ 通过/ 对/ 访存/ 并行度/ 的/ 分析/ 得/ 出访/ 存/ 操作/ 的/ 平/ Page10/ 均/ 开销/ ,/ 进而/ 得以/ 预测/ 程序/ 的/ 执行/ 时间/ ;/ 但是/ 该/ 模型/ 忽略/ 了/ 流水线/ 延迟/ 、/ 分支/ 操作/ 等/ 因素/ ,/ 因此/ 影响/ 了/ 模型/ 的/ 准确性/ ./ 文献/ [/ 5/ ]/ 建立/ 了/ 更为/ 准确/ 的/ 性能/ 模型/ ,/ 通过/ 建立/ 程序/ 工作/ 流图/ (/ WorkFlowGraph/ )/ ,/ 描述/ 了/ 运算/ 操作/ 、/ 访存/ 操作/ 和/ 同步操作/ 的/ 依赖/ 关系/ 和/ 执行/ 延迟/ ./ 该/ 模型/ 中/ 充分考虑/ 了/ 线程/ 组间/ 、/ 线程/ 组内/ 和/ 线程/ 内/ 指令/ 级/ 三级/ 并行性/ 对/ 执行/ 时间/ 的/ 影响/ ;/ 同时/ 考虑/ 了/ 流水线/ 延迟/ 、/ 分支/ 操作/ 等/ 文章/ [/ 17/ ]/ 中未/ 涉及/ 的/ 因素/ ./ 因此/ ,/ 本文/ 中/ 对/ GPU/ 性能/ 的/ 分析/ 参考/ 了/ 该/ 文献/ [/ 5/ ]/ ,/ 并/ 进而/ 讨论/ 了/ 处理器/ 核心/ 频率/ 调节/ 和/ 关闭/ 对/ 性能/ 和/ 功耗/ 的/ 影响/ ./ 7/ 结论/ 随着/ GPU/ 集成度/ 的/ 不断/ 提高/ ,/ 其/ 功耗/ 开销/ 日益/ 增大/ ,/ 因此/ 面向/ GPU/ 体系结构/ 的/ 功耗/ 优化/ 研究/ 将/ 成为/ 该/ 领域/ 的/ 研究/ 热点/ ./ 本文/ 提出/ 了/ 模型/ 指导/ 的/ 动态/ 电压/ // 频率/ 调节/ 与/ 并发/ 度/ 控制/ 多维/ 功耗/ 优化/ 方法/ ./ 通过/ 对/ 9/ 个/ 典型/ 应用/ 的/ 评测/ 表明/ ,/ 本文/ 提出/ 的/ 方法/ 在/ 性能/ 损失/ 不/ 超过/ 0.6/ %/ 的/ 情况/ 下/ 节省/ 能耗/ 17.5/ %/ ;/ 与/ 已有/ 的/ 搜索算法/ 相比/ ,/ 该/ 方法/ 可以/ 进一步/ 节省/ 能耗/ 9/ %/ ./ 

