Page1/ 犎/ -/ Tree/ :/ 一种/ 面向/ 大/ 数据流/ 在线/ 监测/ 的/ 层次/ 索引/ 臧文羽/ 1/ )/ ,/ 2/ )/ 李军/ 1/ )/ ,/ 3/ )/ 方滨兴/ 1/ )/ ,/ 2/ )/ ,/ 3/ )/ 谭建龙/ 2/ )/ 1/ )/ (/ 中国科学院计算技术研究所/ 信息安全/ 研究/ 中心/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 信息工程/ 研究所/ 信息内容/ 安全/ 技术/ 国家/ 工程/ 实验室/ 北京/ 100093/ )/ 3/ )/ (/ 北京邮电大学/ 计算机/ 学院/ 北京/ 100876/ )/ 摘要/ 随着/ 计算机网络/ 的/ 迅猛发展/ 和/ 大/ 数据/ 时代/ 的/ 到来/ ,/ 数据/ 越来越/ 频繁/ 地/ 呈现出/ 多/ 属性/ 异构/ 的/ 特点/ ./ 这种/ 包含/ 多种不同/ 类型/ 属性/ 的/ 大/ 数据流/ 称为/ 异构/ 大/ 数据流/ (/ HeterogeneousBigDataStreams/ )/ ./ 在/ 面向/ 大规模/ 数据/ 在线/ 监测/ 分析/ 的/ 应用/ 中/ ,/ 通常/ 需要/ 在/ 异构/ 大/ 数据流/ 上/ 注册/ 大规模/ 监测/ 规则/ ./ 因此/ ,/ 对于/ 每/ 一个/ 数据流/ 元组/ ,/ 必须/ 用/ 最小/ 的/ 计算/ 开销/ 满足/ 所有/ 的/ 规则/ ./ 同时/ ,/ 由于/ 大/ 数据流/ 上/ 监测/ 规则/ 集/ 异常/ 庞大/ ,/ 提高/ 规则/ 监测/ 的/ 性能/ 是/ 大规模/ 数据流/ 在线/ 监测/ 的/ 关键/ ./ 基于/ 此/ ,/ 该文/ 提出/ 一种/ 层次化/ 的/ 索引/ 结构/ H/ -/ Tree/ 及其/ 在线/ 规则/ 匹配/ 算法/ ./ 具体/ 的/ ,/ H/ -/ Tree/ 将/ 大/ 数据流/ 上/ 的/ 属性/ 集/ 划分/ 为/ 离散/ 型/ 属性/ 和/ 连续型/ 属性/ ./ 基于/ 不同/ 的/ 属性/ 集/ ,/ 构建/ 两层/ 索引/ 结构/ :/ 在/ 第/ 1/ 层/ ,/ 通过/ 改进/ 的/ 红/ 黑树/ 对/ 离散/ 型/ 谓词/ 构建/ 触发/ 索引/ ;/ 在/ 第/ 2/ 层/ ,/ 通过/ 量化/ 连续型/ 谓词/ 构建/ 多维/ 索引/ 结构/ ./ H/ -/ Tree/ 的/ 在线/ 规则/ 匹配/ 算法/ 利用/ 关联/ 关系/ 表对/ 两层/ 索引/ 的/ 监测/ 结果/ 进行/ 融合/ 过滤/ ./ 实验/ 分析表明/ ,/ 与/ 经典/ 的/ R/ +/ 方法/ 相/ 比较/ ,/ H/ -/ Tree/ 通过/ 层次化/ 的/ 索引/ 结构/ ,/ 在/ 不/ 降低/ 准确度/ 的/ 前提/ 下/ ,/ 显著/ 提升/ 了/ 大/ 数据流/ 的/ 监测/ 效率/ ./ 关键词/ 异构/ 大/ 数据流/ ;/ 监测/ 规则/ ;/ 索引/ 1/ 引言/ 伴随/ 着/ 大/ 数据/ 时代/ 的/ 到来/ ,/ 企业/ 信息化/ 水平/ 不断/ 提升/ ,/ 企业/ 信息/ 运营/ 系统/ 数据流/ 的/ 种类/ 和/ 规模/ 也/ 持续增长/ ./ 利用/ 大/ 数据/ 技术/ 实现/ 大型/ 集团/ 企业/ 的/ 运营/ 状态/ 在线/ 监测/ 具有/ 广泛/ 的/ 应用/ 前景/ ./ 对于/ 大/ 数据/ 环境/ 下/ ,/ 包含/ 不同/ 媒体格式/ 的/ 数据流/ ,/ 通过/ 传统/ 的/ 数据流/ 监测/ [/ 1/ -/ 2/ ]/ 方法/ (/ 对/ 监测/ 规则/ 进行/ 线性/ 计算/ )/ 已经/ 不能/ 满足/ 在线/ 监测/ 的/ 要求/ ./ 面对/ 运营/ 大/ 数据/ 在线/ 监测/ 需求/ ,/ 通过/ 对/ 监测/ 规则/ 构建/ 索引/ ,/ 可以/ 提升/ 规则/ 计算/ 的/ 判别/ 速度/ ,/ 大大提高/ 异构/ 大/ 数据流/ 在线/ 监测/ 的/ 效率/ ./ 将/ 这种/ 包含/ 不同/ 类型/ 属性/ 且/ 具有/ 高/ 维度/ 的/ 大/ 数据流/ 称为/ 异构/ 数据流/ ./ 异构/ 数据流/ 包含/ 文本/ 、/ 图片/ 、/ 音视频/ 等/ 不同/ 属性/ 的/ 元/ 信息/ ,/ 属性/ 间/ 存在/ 较大/ 的/ 差异/ ./ 近来/ ,/ 随着/ 基于/ 内容/ 的/ 大规模/ 多媒体/ 大/ 数据流/ 监测/ 需求/ 的/ 不断/ 增加/ ,/ 大/ 数据流/ 实时/ 监测/ 已经/ 成为/ 研究/ 热点/ ./ 然而/ 在/ 实际/ 的/ 监测/ 过程/ 中/ ,/ 由于/ 监测/ 规则/ 集/ 规模/ 大/ 、/ 关联/ 维度/ 高/ ,/ 使得/ 大规模/ 数据流/ 上/ 的/ 监测/ 计算/ 量/ 大/ ,/ 效率/ 低下/ ./ 因此/ ,/ 如何/ 高效/ 地/ 匹配/ 数据流/ 元组/ 与/ 大规模/ 监测/ 规则/ 成为/ 提高/ 异构/ 大/ 数据流/ 监测/ 效率/ 的/ 关键/ ./ 对/ 监测/ 规则/ 构建/ 索引/ 是/ 解决问题/ 的/ 有效途径/ ,/ 相关/ 研究成果/ 包括/ :/ 针对/ 单一/ 属性/ 的/ 数据流/ ,/ CEI/ -/ Index/ [/ 3/ ]/ 使用/ 区域/ 划分/ 的/ 思路/ ,/ 以/ 空间/ 换/ 时间/ 提高/ 谓词/ 匹配/ 效率/ ;/ 针对/ 离散/ 型/ 属性/ 简单/ 且/ 数量/ 较少/ 的/ 发布/ 订阅/ 系统/ 中/ 的/ 数据流/ ,/ 一般/ 通过/ 哈希/ 表/ 以及/ Cache/ 技术/ [/ 4/ ]/ 提升/ 离散/ 型/ 属性/ 集上/ 的/ 匹配/ 效率/ ;/ 针对/ 单纯/ 的/ 连续型/ 属性/ ,/ R/ -/ Tree/ [/ 5/ ]/ 将/ 多个/ 连续型/ 属性/ 映射/ 到/ 高维/ 向量/ 空间/ 并/ 进行/ 合理/ 的/ 划分/ ,/ 为/ 每个/ 划分/ 建立/ 覆盖/ 区域/ ./ R/ / -/ Tree/ [/ 6/ ]/ 通过/ 优化/ R/ 树/ 的/ 空间/ 划分/ 策略/ 来/ 减少/ 节点/ 的/ 访问/ 次数/ ,/ 从而/ 提高/ 了/ 监测/ 效率/ ./ 上述/ 研究/ 大多/ 是/ 针对/ 单一/ 类型/ 的/ 数据流/ 进行/ 优化/ 索引/ ,/ 而且/ 规则/ 集/ 的/ 数量/ 也/ 相对/ 较/ 少/ ,/ 因而/ 很难/ 直接/ 应用/ 到/ 异构/ 大/ 数据流/ 监测/ 中/ ./ 具体来说/ ,/ 面对/ 异构/ 大/ 数据流/ 的/ 在线/ 监测/ 应用/ ,/ 传统/ [/ 5/ -/ 7/ ]/ 的/ 索引/ 技术/ 都/ 是/ 假定/ 数据流/ 的/ 所有/ 维度/ 都/ 具有/ 相同/ 或者/ 相似/ 的/ 性质/ ;/ 传统/ 的/ 索引/ 方法/ 没有/ 充分利用/ 异构/ 数据流/ 中/ 不同/ 属性/ 之间/ 的/ 关系/ ,/ 需要/ 做/ 很多/ 属性/ 维度/ 的/ 转换/ ,/ 直接/ 影响/ 了/ 监测/ 性能/ ./ 然而/ ,/ 异构/ 数据流/ 包含/ 的/ 属性/ 之间/ 尽管/ 存在/ 较大/ 的/ 差别/ ,/ 但/ 不同/ 属性/ 之间/ 也/ 存在/ 共享/ 度/ 较/ 高/ 的/ 关联性/ ./ 如果/ 能够/ 合理/ 的/ 将/ 不同/ 属性/ 的/ 谓词/ 集/ 结合/ 起来/ ,/ 可以/ 有效/ 提升/ 监测/ 的/ 性能/ ./ 由此/ ,/ 结合/ 面临/ 的/ 挑战/ 以及/ 异构/ 大/ 数据流/ 的/ 自身/ 特点/ ,/ 本文/ 从/ 异构/ 大/ 数据流/ 监测/ 的/ 应用/ 背景/ 出发/ ,/ 针对/ 传统/ 高维索引/ 对/ 异构/ 大/ 数据流/ 处理/ 的/ 性能/ 瓶颈/ 问题/ ,/ 提出/ 了/ 一种/ 层次化/ 的/ 索引/ 结构/ H/ -/ Tree/ ./ 本文/ 的/ 主要/ 贡献/ 包括/ :/ (/ 1/ )/ 在/ 高维索引/ 的/ 基础/ 上/ ,/ 引入/ 了/ 层次化/ 索引/ 的/ 思想/ ./ 考虑/ 异构/ 大/ 数据流/ 本身/ 的/ 特点/ ,/ 将/ 数据流/ 包含/ 的/ 属性/ 划分/ 为/ 离散/ 型/ 属性/ 和/ 连续型/ 属性/ ./ 考虑/ 到/ 离散/ 型/ 属性/ 上/ 的/ 谓词/ 共享/ 度高/ 的/ 特点/ ,/ 提出/ 了/ 一种/ 两层/ 的/ 索引/ 结构/ H/ -/ Tree/ ,/ 给出/ 了/ 索引/ 构建/ 和/ 监测/ 匹配/ 算法/ ./ (/ 2/ )/ 对/ 提出/ 的/ H/ -/ Tree/ 索引/ 构建/ 和/ 监测/ 匹配/ 算法/ 进行/ 详细/ 的/ 算法/ 复杂度/ 分析/ ./ (/ 3/ )/ 在/ 大量/ 公开/ 数据/ 集上/ ,/ 对/ H/ -/ Tree/ 进行/ 了/ 大量/ 的/ 测试/ 实验/ ,/ 结果表明/ :/ H/ -/ Tree/ 结构/ 的/ 匹配/ 算法/ 在/ 不/ 降低/ 监测/ 准确率/ 的/ 情况/ 下/ ,/ 较/ R/ -/ Tree/ 的/ 性能/ 有/ 了/ 大幅度/ 的/ 提升/ ./ 本文/ 第/ 2/ 节/ 形式化/ 定义/ 异构/ 大/ 数据流/ 监测/ 问题/ 并/ 提出/ 简单/ 的/ 解决/ 算法/ ;/ 第/ 3/ 节/ 详细/ 介绍/ H/ -/ Tree/ 的/ 索引/ 框架/ 和/ 核心/ 算法/ ;/ 第/ 4/ 节/ 给出/ H/ -/ Tree/ 的/ 评估/ 模型/ ;/ 第/ 5/ 节是/ 实验/ 结果/ 的/ 对比/ 与/ 分析/ ;/ 第/ 6/ 节是/ 对/ 论文/ 工作/ 的/ 一个/ 总结/ ./ 2/ 问题/ 描述/ 对/ 异构/ 数据流/ 进行/ 内容/ 监测/ 时/ ,/ 首先/ 在/ 数据流/ 上/ 注册/ 大量/ 的/ 监测/ 规则/ ./ 然后/ 将/ 数据流/ 中/ 的/ 每/ 一个/ 实时/ 到达/ 的/ 元组/ 与/ 注册/ 的/ 监测/ 规则/ 逐一/ 匹配/ ./ 这里/ ,/ 监测/ 规则/ 和/ 数据流/ 元组/ 的/ 定义/ 如下/ :/ 定义/ 1/ ./ 监测/ 规则/ ./ 令/ Q/ 表示/ 注册/ 的/ 监测/ 规则/ 集合/ ./ S/ 代表/ 一个/ 异构/ 数据流/ ./ 每个/ 监测/ 规则/ q/ ∈/ Q/ 是/ 多个/ 谓词/ 的/ “/ 与/ ”/ ./ 每个/ 谓词/ 关联/ 着/ 相应/ 的/ 属性/ ,/ 这些/ 属性/ 主要/ 分为/ 两类/ :/ 连续型/ 属性/ 和/ 离散/ 型/ 属性/ ,/ 相/ Page3/ 应地/ ,/ 监测/ 规则/ q/ 包含/ 的/ 谓词/ 分为/ :/ 连续型/ 谓词/ (/ vi/ </ p/ </ vj/ )/ 和/ 离散/ 型/ 谓词/ (/ p/ =/ =/ vk/ )/ ./ 若/ 任意/ 谓词/ 的/ 结果/ 是/ 布尔/ 型/ 变量/ ./ 则/ q/ 可/ 表示/ 为/ 定义/ 2/ ./ 数据流/ 元组/ ./ 令/ t/ 表示/ 当前/ 的/ 数据流/ 项/ ,/ 元组/ t/ 是/ 由/ 不同/ 属性/ 上/ 的/ 键值/ 对/ 组成/ 的/ 集合/ ./ t/ =/ (/ ki/ ,/ vi/ )/ ,/ 其中/ ki/ 对应/ 着/ 第/ i/ 个/ 属性/ ./ 若/ 连续型/ 属性/ i/ 对应/ 的/ 值域/ 为/ [/ si/ ,/ ti/ ]/ ,/ 离散/ 型/ 属性/ j/ 对应/ 的/ 值域/ 为/ S/ =/ ∪/ vj/ ,/ 则/ 元组/ t/ 对应/ 监测/ 规则/ q/ 的/ 计算/ 可/ 表示/ 为/ q/ (/ t/ )/ =/ ∪/ i/ (/ si/ ,/ tt/ )/ =/ ∏/ i/ 因此/ ,/ 在/ 判断/ 监测/ 规则/ 的/ 过程/ 中/ ,/ 如果/ 谓词/ pi/ 对于/ 当前/ 数据流/ 项/ t/ 的/ 结果/ 为/ 真/ ,/ 就/ 认为/ 数据流/ 项/ t/ 满足/ 属性/ 谓词/ pi/ ;/ 如果/ 数据流/ 项/ t/ 满足/ 一条/ 监测/ 规则/ q/ 中/ 的/ 所有/ 谓词/ ,/ 就/ 说/ 数据流/ 项/ t/ 满足/ 监测/ 规则/ q/ ./ 对于/ 异构/ 数据流/ 项/ t/ ,/ 监测/ 计算/ 具有/ 如下/ 2/ 个/ 性质/ :/ (/ 1/ )/ 如果/ t/ 满足/ 监测/ 规则/ q/ ,/ 那么/ 监测/ 规则/ q/ 中/ 所有/ 的/ 谓词/ 都/ 会/ 出现/ 在/ 已经/ 计算/ 为/ “/ 真/ ”/ 的/ 序列/ 中/ ./ 也就是说/ ,/ q/ 中/ 所有/ 的/ 属性/ 谓词/ 都/ 必须/ 经过/ 计算/ 且/ 返回值/ 为/ 真/ ./ (/ 2/ )/ 如果/ t/ 不/ 满足/ 监测/ 规则/ q/ ,/ 那么/ q/ 中/ 至少/ 存在/ 一个/ 属性/ 谓词/ 在/ 已经/ 完成/ 的/ 计算/ 序列/ 中/ ,/ 且/ 计算结果/ 为/ 假/ ./ 由/ 以上/ 2/ 个/ 性质/ 可以/ 看出/ ,/ 对/ 数据流/ 元组/ 监测/ 的/ 过程/ 就是/ 元组/ 在/ 属性/ 域/ 包含/ 的/ 谓词/ 集上/ 的/ 检索/ 过程/ ./ 因此/ ,/ 如何/ 提升/ 检索/ 效率/ 是/ 监测/ 算法/ 的/ 关键/ ./ 如表/ 1/ 所示/ ,/ 数据流/ S/ 上/ 注册/ 的/ 监测/ 规则/ 集/ Q/ 包括/ 5/ 个/ 监测/ 规则/ ,/ 每个/ 监测/ 规则/ 的/ 含义/ 如表/ 所示/ ./ 其中/ 每个/ 监测/ 规则/ q/ ∈/ Q/ 都/ 是/ 不同/ 谓词/ 的/ “/ 与/ ”/ 运算/ ./ 将/ 连续型/ 属性/ Atime/ ,/ Alen/ 映射/ 为/ 两/ 维空间/ ,/ 那么/ q1/ ,/ q2/ ,/ q3/ ,/ q4/ ,/ q5/ 的/ 关系/ 如图/ 1/ 所示/ ./ 不同/ 的/ 监测/ 规则/ 之间/ 的/ 共享/ ,/ 对应/ 着/ 图/ 1/ 中/ 两/ 维空间/ 上/ 的/ 矩形/ 块/ 之间/ 的/ 交叠/ ./ 监测/ 规则/ IDq1q2q3q4q5/ 图/ 1/ 表/ 1/ 中/ 5/ 个/ 监测/ 规则/ 在/ 对应/ 的/ 连续型/ 高/ 维空间/ 中/ 的/ 关系/ 2.1/ 经典/ 的/ 解决/ 方法/ 针对/ 异构/ 数据流/ 下/ 的/ 内容/ 监测/ 问题/ ,/ 本文/ 首先/ 来/ 介绍/ 两个/ 简单/ 的/ 解决办法/ ./ (/ 1/ )/ 监测/ 规则/ 顺序/ 检查/ 算法/ (/ QuerySequenceInspect/ )/ :/ 这种/ 算法/ [/ 8/ -/ 10/ ]/ 广泛应用/ 于/ 面向/ 数据流/ 的/ 挖掘/ 中/ ,/ 其/ 核心思想/ 是/ 针对/ 监测/ 规则/ 不/ 建立/ 索引/ ,/ 根据/ 训练/ 好/ 的/ 分类器/ ,/ 对于/ 每/ 一个/ 数据流/ 元组/ t/ ,/ 依次/ 取得/ 其/ 相应/ 属性/ 的/ 键值/ 对/ (/ k/ ,/ v/ )/ ,/ 然后/ 将/ (/ k/ ,/ v/ )/ 键值/ 对/ 依次/ 与/ 分类器/ 中/ 的/ 规则/ 进行/ 比较/ ,/ 将/ 所有/ 谓词/ 结果/ 都/ 为/ “/ 真/ ”/ 的/ 监测/ 规则/ 作为/ 结果/ 输出/ ./ 这种/ 算法/ 效率/ 低/ ,/ 性能/ 差/ :/ 基于/ 集成/ 分类器/ [/ 8/ ]/ 提出/ 的/ 数据流/ 监测/ 算法/ 在/ 规则/ 少于/ 1000/ 的/ 情况/ 下/ ,/ 元组/ 的/ 监测/ 时间/ 接近/ 1s/ ,/ 这/ 远远/ 达/ 不到/ 我们/ 的/ 大规模/ 内容/ 监测/ 的/ 应用/ 要求/ ./ (/ 2/ )/ 统一/ 高维索引/ (/ Uniformhigh/ -/ DimensionIndex/ )/ :/ 这种/ 方法/ [/ 5/ ]/ 广泛应用/ 于/ 空间/ 数据库/ 监测/ 规则/ 相关/ 的/ 应用/ 系统/ 中/ ,/ 核心思想/ 是/ 不/ 对/ 谓词/ 关联/ 的/ 属性/ 本身/ 的/ 性质/ 进行/ 区分/ ,/ 将/ 所有/ 的/ 属性/ 依次/ 对应/ 为/ 空间/ 对象/ 的/ 维度/ ,/ 每/ 一个/ 监测/ 规则/ 对应/ 于/ 属性/ 空间/ 中/ 的/ 一个/ 区域/ 块/ ,/ 然后/ 根据/ 所有/ 的/ 监测/ 规则/ 构建/ 高维索引/ ,/ 该/ 算法/ 可以/ 把/ 每/ 一个/ 数据流/ 元组/ 看作/ 高/ 维空间/ 中/ 的/ 一个点/ ,/ 因此/ ,/ 数据流/ 元组/ 的/ 监测/ 过程/ 就/ 变成/ 了/ 高维索引/ 中/ 的/ 点/ 监测/ 规则/ ./ 这种/ 算法/ 与/ H/ -/ Tree/ 最大/ 的/ 不同之处/ 在于/ 它/ 不/ 对/ 属性/ 集合/ 进行/ 分类/ ,/ 而是/ 统一/ 的/ 映射/ 到/ 多维度/ 空间/ 构建/ 高维索引/ ,/ 当/ 异构/ 数据流/ 的/ 属性/ 数量/ 在/ 80/ 以上/ ,/ 监测/ 规则/ 大于/ 2000/ 时/ ,/ 性能/ 下降/ 明显/ [/ 11/ ]/ ./ 数据流/ 监测/ 的/ 目标/ 是/ :/ 针对/ 每/ 一个/ 数据流/ 元组/ ,/ 用/ 最小/ 的/ 开销/ 计算/ 出/ 所有/ 满足/ 的/ 监测/ 规则/ ./ 本文/ 的/ 索引/ 结构/ 针对/ 异构/ 数据流/ 实时/ 监测/ 的/ 特点/ ,/ 充分利用/ 属性/ 间/ 的/ 关联性/ ,/ 将/ 规则/ 集/ 按照/ 属性/ 分类/ 构建/ 层次化/ 的/ 索引/ 结构/ ,/ 最大/ 限度/ 地/ 利用/ 不同/ 属性/ 索引/ 的/ 特点/ ,/ 大大的/ 提升/ 了/ 实时/ 监测/ 效率/ ./ 3/ 犎/ -/ Tree/ 的/ 结构/ 和/ 算法/ 本/ 节/ 重点/ 介绍/ H/ -/ Tree/ 的/ 索引/ 结构/ 及/ 核心/ 算/ Page4/ 法/ ./ H/ -/ Tree/ 是/ 一种/ 面向/ 异构/ 数据流/ 上/ 大规模/ 监测/ 规则/ 计算/ 的/ 动态/ 索引/ ,/ 支持/ 监测/ 规则/ 的/ 实时/ 更新/ ,/ 其/ 主体/ 流程/ 包括/ 索引/ 构建/ 和/ 实时/ 匹配/ 计算/ ./ 如图/ 2/ 所示/ ,/ 构建/ 索引/ 时/ ,/ 首先/ 对/ 异构/ 数据流/ 的/ 属性/ 集/ 进行/ 分类/ :/ 连续型/ 属性/ 和/ 离散/ 型/ 属性/ ./ 然后/ ,/ 根据/ 属性/ 类型/ 将/ 输入/ 的/ 监测/ 规则/ 集/ 划分/ 为/ 不同/ 的/ 谓词/ 集/ ,/ 基于/ 不同/ 的/ 谓词/ 集/ 构建/ 层次化/ 的/ 索引/ 结构/ :/ 根据/ 离散/ 型/ 属性/ 上/ 的/ 谓词/ 构建/ Treap/ 树/ 作为/ 第/ 1/ 层/ 索引/ ;/ 在/ 第/ 2/ 层/ ,/ 将/ 所有/ 连续型/ 属性/ 映射/ 为/ 多维/ 空间/ ,/ 根据/ 连续性/ 属性/ 相关/ 的/ 谓词/ 构建/ 高维索引/ ./ 由于/ 离散/ 型/ 属性/ 上/ 的/ 谓词/ 都/ 是/ 离散/ 值/ ,/ 所以/ 构建/ 的/ 第/ 1/ 层/ 索引/ 可以/ 快速/ 定位/ 到/ 监测/ 规则/ 上/ ,/ 而且/ 空间/ 开销/ 也/ 比较/ 小/ ./ 在/ H/ -/ Tree/ 的/ 第/ 2/ 层/ ,/ 本文/ 将/ 性质/ 相同/ 的/ 属性/ 谓词/ 按照/ 维度/ 划分/ 构建/ 索引/ ,/ 尽可能/ 的/ 提升/ 监测/ 规则/ 处理速度/ ./ 对/ 实时/ 到达/ 的/ 数据流/ 元组/ t/ 进行/ 监测/ 计算/ 时/ ,/ 首先/ 对/ t/ 进行/ 向量/ 抽取/ 和/ 裁剪/ 计算/ ;/ 量化/ 后/ 的/ 向量/ 经过/ 谓词/ 属性/ 分类/ 处理/ 后/ 得到/ 不同/ 的/ 谓词/ 向量/ ;/ 运用/ H/ -/ Tree/ 的/ 监测/ 规则/ 算法/ 通过/ 两层/ 索引/ 结构/ 过滤/ 得到/ 满足条件/ 的/ 监测/ 规则/ 集/ ./ 在/ 本/ 节余/ 下/ 的/ 部分/ 中/ ,/ 首先/ 在/ 3.1/ 节/ 给出/ H/ -/ Tree/ 索引/ 框架/ 的/ 基本/ 结构/ ;/ 在/ 3.2/ 节/ ,/ 给出/ H/ -/ Tree/ 的/ 动态/ 构建/ 算法/ ;/ 在/ 3.3/ 节/ ,/ 描图/ 3H/ -/ Tree/ 树结构/ (/ 主要/ 有/ 3/ 个/ 部分/ 组成/ ./ 左边/ 是/ H/ -/ Tree/ 中/ 存储/ 监测/ 规则/ 与/ 谓词/ 的/ 关联/ 表/ ./ 右边/ 是/ H/ -/ Tree/ 的/ 两层/ 索引/ 框架/ ./ 第/ 1/ 层/ 是/ Treap/ 树/ ,/ 是/ 根据/ 离散/ 型/ 属性/ 上/ 的/ 谓词/ 集/ 构建/ ./ 第/ 2/ 层/ 是/ 高维索引/ 树/ ,/ 是/ 根据/ 连续/ H/ -/ Tree/ 中/ 的/ 节点/ 可以/ 分为/ 3/ 类/ :/ 首层/ 节点/ top/ _/ node/ ,/ 第/ 2/ 层/ 的/ 中间/ 节点/ mid/ _/ node/ 和/ 叶子/ 节点/ leaf/ _/ node/ ./ 节点/ 的/ 主要/ 定义/ 和/ 主要/ 包含/ 元素/ 如图/ 4/ 所示/ ./ 其中/ ,/ attr/ 为首/ 层/ Treap/ 树/ 节点/ 对应/ 的/ 离散/ 型/ 属性/ ,/ value/ 为/ 该/ Treap/ 节点/ 对应/ 的/ 离散/ 值/ ,/ weight/ 为/ 该/ 节点/ 代表/ 的/ 谓词/ 的/ 优先级/ ,/ left/ ,/ right/ 为/ 该/ 节点/ 的/ 左述/ H/ -/ Tree/ 的/ 实时/ 监测/ 流程/ ./ 3.1/ 犎/ -/ Tree/ 的/ 索引/ 结构/ 从/ 结构/ 上/ 来讲/ ,/ H/ -/ Tree/ 包括/ 3/ 个/ 重要/ 组成部分/ 以及/ 3/ 个/ 重要/ 操作/ ./ 其中/ ,/ 3/ 个/ 组成部分/ 分别/ 是/ :/ (/ 1/ )/ 第/ 1/ 层/ 的/ Treap/ 索引/ 结构/ ;/ (/ 2/ )/ 第/ 2/ 层/ 的/ 高维/ 向量/ 索引/ 结构/ ;/ (/ 3/ )/ 监测/ 规则/ 和/ 谓词/ 的/ 关联/ 表/ ./ 基于/ H/ -/ Tree/ 的/ 3/ 个/ 主要/ 操作/ 分别/ 是/ :/ (/ 1/ )/ 搜索/ ;/ (/ 2/ )/ 插入/ ;/ (/ 3/ )/ 删除/ ./ H/ -/ Tree/ 总体/ 上/ 是/ 1/ 个/ 两层/ 的/ 索引/ 结构/ ./ 图/ 3/ 给出/ 了/ 基于/ 表/ 1/ 中/ 的/ 监测/ 规则/ 构建/ 的/ H/ -/ Tree/ ./ 如图/ 3/ 所示/ ,/ 其/ 第/ 1/ 层/ 是/ 由/ 离散/ 型/ 谓词/ 构建/ 的/ Treap/ 树/ 索引/ ;/ 第/ 2/ 层/ 是/ 根据/ 连续型/ 谓词/ 对应/ 的/ 多维/ 向量/ 构建/ 的/ 高/ 维空间/ 树/ ;/ 另外/ 1/ 个/ 很/ 重要/ 的/ 组成部分/ 是/ 监测/ 规则/ 与/ 谓词/ 的/ 关联/ 表/ ,/ 用来/ 完成/ 两层/ 索引/ 监测/ 规则/ 结果/ 的/ 快速/ 融合/ ./ Page5/ 右/ 孩子/ 节点/ ./ branch/ 代表/ 着/ 第/ 2/ 层/ 索引/ 对应/ 的/ 高维/ 树结构/ 的/ 中间/ 节点/ 指针/ ./ mbr/ 为/ 第/ 2/ 层/ 叶子/ 节点/ 对应/ 的/ 高维/ 向量/ ./ 3.2/ 犎/ -/ Tree/ 的/ 动态/ 构建/ 基于/ H/ -/ Tree/ 的/ 层次化/ 索引/ 结构/ ,/ 提出/ 一种/ 可行/ 的/ 索引/ 构建/ 算法/ ,/ 共/ 分为/ 3/ 个/ 步骤/ :/ 规则/ 预处理/ 、/ 谓词/ 集合/ 划分/ 和/ 层次化/ 索引/ 构建/ ./ 先对/ 预处理/ 后/ 的/ 规则/ 集/ 按照/ 属性/ 分类/ 进行/ 一定/ 的/ 划分/ ,/ 在/ 此基础/ 上/ 再/ 对/ 划分/ 后/ 的/ 数据/ 集/ 分层/ 构建/ 索引/ ./ 规则/ 集/ 划分/ 时/ ,/ 对于/ 预处理/ 后/ 的/ n/ 条/ 规则/ ,/ 按照/ 属性/ 类别/ 和/ 值域/ 划分/ 了/ 离散/ 型/ 谓词/ 集/ 犃/ 和/ 连续型/ 谓词/ 集/ 犅/ ./ 其中/ ∑/ A/ +/ B/ =/ ∑/ q/ ∈/ Q1/ 维上/ 的/ 谓词/ 集/ 分为/ 了/ s/ 个/ 区间/ I1/ ,/ I2/ ,/ …/ ,/ Is/ ,/ 其中/ 每个/ 区间/ 只有/ 离散/ 型/ 谓词/ 或者/ 连续型/ 谓词/ ./ 由于/ 经过/ 了/ 预处理/ 的/ 维度/ 转换/ ,/ 使得/ I1/ ,/ I2/ ,/ …/ ,/ Is/ 的/ 区间/ 内/ 含有/ 的/ 谓词/ 性质/ 基本相同/ 或者/ 相似/ ,/ 便于/ 分/ 层次/ 索引/ 的/ 构建/ ./ 同时/ ,/ 异构/ 数据流/ 注册/ 的/ 规则/ 集/ 通常/ 包含/ 着/ 优先级/ 信息/ ,/ 规则/ 的/ 优先级/ 越高/ ,/ 表示/ 其/ 被/ 监测/ 计算/ 的/ 需求/ 越/ 紧迫/ ./ 当/ 一个/ 新/ 的/ 监测/ 规则/ 注册/ 到/ 系统/ 中/ ,/ H/ -/ Tree/ 首先/ 预处理/ 模块/ 将/ 监测/ 规则/ 按照/ 属性/ 类型/ 划分/ 为/ 离散/ 型/ 谓词/ pd/ 和/ 连续型/ 谓词/ pc/ ./ 然后/ 将/ 离散/ 型/ 谓词/ pd/ 插入/ 到/ H/ -/ Tree/ 的/ 第/ 1/ 层/ 索引/ 中/ ,/ 也/ 就是/ 插入/ 到/ 离散/ 型/ 属性/ 对应/ 的/ Treap/ 树/ 索引/ 中/ ;/ 最后/ 将/ 连续型/ 谓词/ pc/ 插入/ 到/ H/ -/ Tree/ 的/ 第/ 2/ 层/ 索引/ 中/ ./ 当/ 将/ pd/ 插入/ 到/ 第/ 1/ 层/ 的/ Treap/ 树/ 的/ 时候/ ,/ 首先/ 按照/ 排序/ 二叉树/ 的/ 标准/ 插入法/ 进行/ 插入/ ,/ 但/ 这时/ 可能/ 违反/ Treap/ 树/ 的/ 堆/ 性质/ ,/ 因此/ 需要/ 自/ 底向上/ 进行/ 旋转/ ,/ 直到/ 堆/ 性质/ 得到/ 满足/ ./ 删除/ 是/ 相反/ 的/ ,/ 先/ 把/ 优先级/ 设置/ 为/ 最低/ ,/ 自上而下/ 转移/ 到/ 叶子/ ,/ 然后/ 删除/ ./ H/ -/ Tree/ 的/ 第/ 2/ 层/ 插入/ 算法/ 与/ R/ -/ Tree/ 的/ 插入/ 过程/ 类似/ :/ 首先/ 利用/ searchLeaf/ (/ pc/ )/ 去/ 定位/ 到/ 要/ 插入/ 的/ 目标/ 叶子/ 节点/ ,/ 定位/ 的/ 过程/ 本身/ 是/ 个/ 递归/ 过程/ ./ 第/ 2/ 层/ 索引/ 插入/ pc/ 的/ 过程/ 从/ 第/ 2/ 层/ 的/ 根/ 节点/ 开始/ ,/ 顺次/ 按照/ 广度/ 优先/ 搜索/ ,/ 按照/ 多维/ 空间/ 的/ 包含/ 关系/ 进行/ 搜索/ ,/ 当/ 找到/ 一个/ 叶子/ 节点/ n/ 以后/ ,/ 检查/ n/ 的/ 分支/ 数/ ./ 如果/ 发现/ 已经/ 超过/ 分支/ 阈值/ M/ ,/ 则/ 直接/ 进行/ 节点/ 分裂/ ,/ 产生/ 新/ 节点/ ,/ 并/ 将/ n/ 已有/ 的/ 节点/ 和/ Pc/ 的/ 向量/ 利用/ 启发式/ 策略/ 平均/ 分派/ 到/ 两个/ 节点/ 中/ ,/ 最后/ 依次/ 更新/ 父亲/ 节点/ 信息/ ./ 如果/ n/ 的/ 分支/ 数/ 没有/ 超过/ 阈值/ M/ ,/ 则/ 直接/ 调用/ updateParentNode/ (/ L/ )/ 来/ 完成/ 插入/ 操作/ ./ H/ -/ Tree/ 插入/ 和/ 删除/ 的/ 具体/ 细节/ 如/ 算法/ 1/ 和/ 算法/ 2/ 所示/ ./ 算法/ 1/ ./ H/ -/ Tree/ 的/ 插入/ 算法/ ./ 输入/ :/ 监测/ 规则/ q/ ,/ 离散/ 型/ 谓词/ pd/ ,/ 连续型/ 谓/ pc/ ,/ H/ -/ Tree/ 输出/ :/ NULL1/ ./ IFn/ =/ =/ NULLTHEN2/ ./ DirectInsert/ (/ pd/ )/ ;/ 3/ ./ rt/ ←/ GetRoot/ (/ T/ )/ ./ 4/ ./ IFleftbranchofLlessthanMTHEN5/ ./ UpdateParentNodeofL6/ ./ ELSE7/ ./ SplitNodeL/ ;/ 8/ ./ AdjustchildtreeofL/ ;/ 9/ ./ ENDIF10/ ./ ELSE11/ ./ IFthevalueofpdislessthann/ :/ valueTHEN12/ ./ Insert/ (/ n/ :/ leftChild/ ,/ p/ )/ ;/ 13/ ./ ELSE14/ ./ Insert/ (/ n/ :/ rightChild/ ,/ p/ )/ ;/ 15/ ./ ENDIF16/ ./ ENDIF/ ;/ 算法/ 2/ ./ H/ -/ Tree/ 的/ 实时/ 监测/ 算法/ ./ 输入/ :/ 数据流/ 元组/ 狋/ ,/ 索引/ H/ ,/ 检索/ 结果/ res/ 输出/ :/ NULL1/ ./ FORall/ 针对/ 当前/ 滑动/ 窗口/ 中/ 的/ 元组/ tDO2/ ./ r/ ←/ Hfirst/ :/ TreapSearch/ (/ 狋/ )/ ./ 3/ ./ IFrisnotemptyTHEN4/ ./ Hsecond/ :/ Search/ (/ 狋/ ;/ res/ )/ ;/ 5/ ./ ELSE6/ ./ 狋/ ←/ GetNextTuple/ 狋/ ;/ 7/ ./ ENDIF8/ ./ IFresisnotemptyTHEN9/ ./ res/ ←/ Combine/ (/ res/ ;/ r/ )/ 10/ ./ ELSE11/ ./ 狋/ ←/ GetNextTuple/ 狋/ ;/ 12/ ./ ENDIF13/ ./ ENDFOR/ ;/ 需要/ 注意/ 的/ 是/ :/ 基于/ 离散/ 型/ 谓词/ 的/ 特点/ ,/ H/ -/ Tree/ 的/ 第/ 1/ 层/ 索引/ 用/ Treap/ 树/ 构建/ ,/ 加快/ 离散/ 型/ 谓词/ 的/ 快速/ 监测/ 规则/ 计算/ ./ 我们/ 假设/ 空树/ 的/ 优先级/ 为/ 无穷大/ ,/ 则/ 上面/ 的/ 添加/ 和/ 删除/ 算法/ 可以/ 正确处理/ 只有/ 一个/ 儿子/ 的/ 情形/ ./ 第/ 1/ 层/ 索引/ 的/ 添加/ 和/ 删除/ 操作/ 的/ 期望/ 时间/ 复杂度/ 均/ 为/ O/ (/ logn/ )/ ./ 从/ 编程/ 复杂度/ 来说/ ,/ Treap/ 是/ 工程/ 上/ 最/ 容易/ 实现/ 的/ 数据结构/ ,/ 不仅/ 没有/ 任何/ 特例/ 需要/ 考虑/ ,/ 而且/ 在/ 期望/ O/ (/ logn/ )/ 时间/ 内/ 同时/ 支持/ 插入/ 、/ 删除/ 、/ 分离/ 和/ 合并/ ./ 插入/ 过程/ 最/ 重要/ 的/ 问题/ 是/ 第/ 2/ 层/ 索引/ 中/ 节点/ 的/ 分裂/ 策略/ ./ 在/ 这里/ 本文/ 采用/ 类似/ R/ -/ Tree/ 的/ 启发式/ 策略/ ./ 详细/ 来讲/ ,/ 首先/ 取出/ 所有/ 要/ 分裂/ 的/ 块/ ./ 然后/ 选择/ Page6/ 交叠/ 面积/ 最小/ 、/ 同时/ 覆盖/ 两个/ 块/ 的/ 面积/ 最大/ 的/ 两个/ 块/ ./ 最后/ 将/ 剩余/ 的/ 块/ 按照/ 面积/ 交叠/ 差异/ 依次/ 划归/ 到/ 不同/ 的/ 节点/ 中/ ./ 由于/ 删除/ 操作/ 与/ 构建/ 操作/ 都/ 比较简单/ ,/ 在/ 此/ ,/ 本文/ 不再/ 赘述/ ./ 3.3/ 实时/ 监测/ 算法/ 在/ 这/ 一节/ 重点/ 介绍/ 数据流/ 元组/ 在/ H/ -/ Tree/ 的/ 监测/ 过程/ 如图/ 5/ 所示/ ./ 针对/ 元组/ t/ ,/ H/ -/ Tree/ 充分/ 挖掘/ 面向/ 大/ 数据流/ 监测/ 上/ 规则/ 集/ 的/ 特征/ ,/ 首先/ 扫描/ 第/ 1/ 层图/ 5H/ -/ Tree/ 的/ 实时/ 监测/ 过程/ 在/ 算法/ 2/ 中/ ,/ 对于/ 任意/ 的/ 数据流/ 元组/ t/ ,/ 首先/ 把/ 离散/ 型/ 属性/ 值/ 在/ 多/ 属性/ Treap/ 树/ 索引/ 中/ 扫描/ ,/ 如果/ 命中/ ,/ 表示/ 有/ 离散/ 型/ 谓词/ 命中/ ,/ 这种/ 情况/ 下才/ 进行/ 第/ 2/ 层/ 索引/ 的/ 监测/ 规则/ 过程/ ./ 否则/ 直接/ 返回/ ./ 通过/ 构建/ 第/ 1/ 层/ 触发/ 索引/ ,/ 大大/ 加快/ 了/ H/ -/ Tree/ 数据流/ 元组/ 的/ 监测/ 规则/ 过程/ ./ 如果/ 命中/ 了/ 离散/ 型/ 谓词/ ,/ 则/ 接下来/ 进行/ 第/ 2/ 层/ 索引/ 的/ 并行/ 监测/ 规则/ 过程/ ./ 即/ 对于/ 第/ 1/ 层中/ 的/ 每/ 一个/ 高维索引/ 依次/ 进行/ 属性/ 值/ 键值/ 对/ 的/ 监测/ 规则/ ,/ 并/ 将/ 监测/ 规则/ 结果/ 存入/ vRes/ 中/ ./ 本文/ 根据/ 获得/ 的/ vRes/ 运行/ 结果/ 融合/ 算法/ ,/ 最终/ 获得/ 命中/ 的/ 监测/ 规则/ 结果/ 集/ Qr/ ./ 4/ 算法/ 复杂度/ 分析/ 本/ 节/ 针对/ 提出/ 的/ H/ -/ Tree/ 中/ 的/ 实时/ 监测/ 算法/ 和/ 插入/ 、/ 删除/ 算法/ 的/ 时间/ 和/ 空间/ 开销/ 进行/ 分析/ ./ 在/ 这里/ ,/ 监测/ 规则/ 集合/ 本文/ 用/ Q/ 来/ 表示/ ,/ 监测/ 规则/ 和/ 谓词/ 的/ 映射/ 结构/ 用/ C/ 表示/ ,/ H/ 用来/ 表示/ 多/ 属性/ 哈希/ 索引/ ./ 如/ 算法/ 2/ 所示/ ,/ 对于/ 每个/ 实时/ 到来/ 的/ 数据流/ 元组/ t/ ,/ 监测/ 规则/ 处理/ 的/ 时间/ 开销/ 可以/ 分为/ 4/ 个/ 部分/ :/ 的/ Treap/ 树/ 索引/ 来/ 计算/ 满足/ 的/ 离散/ 谓词/ 集/ ./ 由于/ 离散/ 型/ 谓词/ 共享/ 度/ 很/ 高/ ,/ 这/ 就/ 大大/ 提升/ 了/ 扫描/ 速度/ ,/ 加快/ 了/ 监测/ 规则/ 的/ 整个/ 处理过程/ ./ 然后/ ,/ 根据/ 第/ 1/ 层/ 索引/ 命中/ 的/ 有效/ 节点/ ,/ 搜索/ 谓词/ 关联/ 表/ ,/ 找到/ 第/ 2/ 层/ 索引/ 的/ 节点/ 指针/ ,/ 进入/ 第/ 2/ 层/ 高维索引/ 中/ 继续/ 查找/ ,/ 最后/ ,/ 融合/ 第/ 1/ 层/ 和/ 第/ 2/ 层/ 命中/ 的/ 结果/ ,/ 将/ 最终/ 命中/ 的/ 规则/ 集/ 进行/ 快速/ 融合/ 计算/ ./ 算法/ 2/ 给出/ 了/ 数据流/ 元组/ 的/ 监测/ 规则/ 处理/ 的/ 具体/ 细节/ ./ (/ 1/ )/ 计算/ 每个/ 谓词/ 结果/ 的/ 时间/ ;/ (/ 2/ )/ 检查/ 监测/ 规则/ 和/ 谓词/ 映射/ 关系/ 的/ 时间/ ;/ (/ 3/ )/ 检索/ 哈希/ 索引/ 的/ 时间/ ;/ (/ 4/ )/ 检索/ 第/ 2/ 层/ 高维索引/ 树/ 的/ 时间/ ./ 为此/ ,/ 本文/ 设计/ 了/ 评估/ 方程/ ,/ 对/ 监测/ 规则/ 处理过程/ 的/ 时间/ 开销/ 进行/ 评估/ ./ 因此/ ,/ 时间/ 开销/ 的/ 评估/ 方程/ 如下/ :/ idx/ _/ searching/ (/ H/ )/ +/ sum/ =/ ∑/ p/ ∈/ TP/ (/ C/ )/ v/ (/ p/ )/ ×/ scanning/ (/ p/ ,/ Q/ )/ +/ multi/ _/ dim/ (/ t/ )/ (/ 3/ )/ 其中/ ,/ idx/ _/ searching/ (/ H/ )/ 是/ 多/ 属性/ Treap/ 树/ 的/ 搜索/ 开销/ ,/ scanning/ (/ p/ ,/ Q/ )/ 代表/ 着/ 对/ 谓词/ p/ 对应/ 的/ 关联/ 表/ 计算/ 的/ 开销/ ,/ multi/ _/ dim/ (/ t/ )/ 代表/ 着/ t/ 在/ H/ -/ Tree/ 的/ 第/ 2/ 层/ 连续/ 高维索引/ 的/ 检索/ 开销/ ./ 在/ 算法/ 2/ 中/ ,/ 本文/ 做/ 了/ 以下/ 假设/ :/ (/ 1/ )/ 多/ 属性/ Treap/ 树/ 索引/ 的/ 搜索/ 开销/ idx/ _/ searching/ (/ H/ )/ 与/ 离散/ 型/ 属性/ 个数/ 成正比/ ;/ (/ 2/ )/ scanning/ (/ p/ ,/ Q/ )/ 的/ 大小/ 与/ Q/ 的/ 数量/ 成正比/ ./ 基于/ 以上/ 假设/ ,/ 式/ (/ 3/ )/ 可以/ 转换/ 为式/ (/ 4/ )/ ./ sum/ =/ H/ ×/ logCidx/ +/ ∑/ p/ ∈/ TP/ (/ C/ )/ v/ (/ p/ )/ ×/ λ/ p/ ×/ κ/ p/ ×/ n/ (/ 4/ )/ Cidx/ 代表/ 多/ 属性/ Treap/ 树/ 的/ 节点/ 数量/ ./ λ/ p/ 代表/ 着/ 谓词/ P/ 在/ 监测/ 规则/ 集/ Q/ 的/ 频率/ ,/ κ/ p/ 是/ 谓词/ p/ 的/ 宽度/ ./ n/ 表示/ 监测/ 规则/ 集/ Q/ 的/ 数量/ ./ 同时/ ,/ 我们/ 用式/ (/ 5/ )/ 对/ Page7H/ -/ Tree/ 的/ 空间/ 开销/ 进行/ 评估/ ,/ 空间/ 开销/ 主要/ 由/ 以下/ 3/ 个/ 部分/ 组成/ :/ (/ 1/ )/ 第/ 1/ 层/ 索引/ 即/ 多/ 属性/ Treap/ 索引/ 的/ 空间/ ;/ (/ 2/ )/ 存储/ 谓词/ 与/ 监测/ 规则/ 关系/ 的/ 空间/ 开销/ ;/ (/ 3/ )/ 连续型/ 高维索引/ 的/ 开销/ ./ sum/ =/ ∑/ h/ ∈/ H/ ∑/ p/ ∈/ TP/ (/ H/ )/ Mmapping/ (/ Q/ )/ +/ Mdim/ 其中/ ,/ Mtreap/ 构建/ 多/ 属性/ Treap/ 树/ 索引/ 所/ 需要/ 的/ 空间/ ,/ Mbitmap/ 是/ 被/ 用来/ 对/ 所有/ 的/ 监测/ 规则/ 结果/ 进行/ 融合/ 计算/ 的/ 空间/ ./ Mmapping/ 是/ 用来/ 对/ 所有/ 的/ 谓词/ 与/ 监测/ 规则/ 集/ Q/ 的/ 关系/ 进行/ 缓存/ 的/ 空间/ ./ Mdim/ 是/ H/ -/ Tree/ 的/ 第/ 2/ 层/ 高维索引/ 的/ 内存/ 开销/ ./ 5/ 实验/ 结果/ 为了/ 验证/ H/ -/ Tree/ 的/ 性能/ ,/ 本文/ 基于/ 公开/ 数据/ 集/ 和/ 人工/ 数据/ 集/ 进行/ 了/ 属性/ 数量/ 变化/ 、/ 谓词/ 数量/ 变化/ 、/ 规则/ 数量/ 变化/ 下/ 的/ 性能/ 比较/ 实验/ ./ 在/ 实验/ 中/ ,/ 既/ 实现/ 了/ 提出/ 的/ 层次化/ 索引/ 框架/ H/ -/ Tree/ ,/ 又/ 实现/ 了/ 算法/ QSI/ 和/ 算法/ UDI/ ,/ 实验/ 结果表明/ ,/ 无论/ 在/ 何种/ 参数设置/ 情况/ 下/ ,/ 由于/ 采用/ 了/ 层次化/ 的/ 索引/ 结构/ ,/ H/ -/ Tree/ 的/ 性能/ 都/ 远远/ 优于/ QSI/ 算法/ 和/ UDI/ 算法/ 的/ ./ 在/ 这/ 一部分/ ,/ 本文/ 首先/ 描述/ 对/ 结果/ 的/ 评估/ 办法/ ,/ 然后/ 再/ 具体/ 阐述/ 实验/ 结果/ ./ 5.1/ 结果/ 评估/ 办法/ 在/ 实验/ 的/ 监测/ 规则/ 部分/ ,/ 用表/ 2/ 所示/ 的/ 3/ 种/ 人工/ 数据/ 集/ 分别/ 进行/ 实验/ ./ 所有/ 的/ 谓词/ 与/ 监测/ 规则/ 之间/ 的/ 关系/ 服从/ Zipf/ 分布/ ,/ Zipf/ 分布/ 广泛/ 使用/ 在/ 基于/ 内容/ 的/ 关键字/ 检索/ 中/ ./ 测试/ 数据流/ 是从/ 网关/ 上/ 捕获/ 图/ 6/ 本文/ 将/ 监测/ 规则/ 数量/ 从/ 100/ 增加/ 到/ 1000/ 的/ 过程/ 中/ 3/ 种/ 算法/ 的/ 表现/ (/ 从图/ 中/ 可以/ 明显/ 看出/ 3/ 个/ 算法/ 的/ 时间/ 开销/ 都/ 明显增加/ ,/ 但是/ H/ -/ Tree/ 的/ 增加/ 幅度/ 明显/ 比/ 其他/ 两个/ 算法/ 的/ 要/ 小得多/ )/ 5.2/ ./ 2/ 离散/ 型/ 谓词/ 规模/ 的/ 影响/ 图/ 7/ 和/ 图/ 8/ 显示/ 在/ 离散/ 型/ 谓词/ 不同/ 的/ 情况/ 下/ 3/ 个/ 算法/ 的/ 表现/ ./ 本文/ 用/ 离散/ 型/ 属性/ 的/ 数量/ 和/ 离散/ 型/ 谓词/ 的/ 数量/ 这/ 两个/ 指标/ 来/ 衡量/ 离散/ 型/ 谓词/ 对/ 监测/ 规则/ 性能/ 的/ 影响/ ./ 依据/ 这/ 两个/ 指标/ ,/ 本文/ 在/ 监测/ 规则/ 的/ 实时/ 多媒体/ 数据流/ ,/ 然后/ 按照/ 已经/ 选定/ 的/ 属性/ 和/ 维度/ 进行/ 内容/ 抽取/ ,/ 将/ 抽取/ 的/ 内容/ 以/ 异构/ 数据流/ 的/ 形式/ 推送/ 到/ 监测/ 算法/ 中/ ./ 实验/ 部署/ 在/ 处理器/ 为/ Duo2/ ./ 66GHzCPU/ ,/ 内存/ 为/ 2GB/ ,/ LinuxAS5/ 的/ 机器/ 上/ ./ 其中/ ,/ 实验/ 最/ 关心/ 的/ 是/ 监测/ 规则/ 计算/ 的/ 时间/ 开销/ ./ 这个/ 时间/ 开销/ 定义/ 为/ :/ 对于/ 任意/ 一个/ 数据流/ 元组/ ,/ 完成/ 所有/ 监测/ 规则/ 的/ 计算所/ 花费/ 的/ 时间/ 均值/ ./ 本文/ 将/ H/ -/ Tree/ ,/ QSI/ ,/ UDI/ 这/ 3/ 种/ 算法/ 的/ 表现/ 做/ 对比/ ./ 为了/ 使/ 比较/ 更有意义/ 、/ 更/ 公平/ ,/ 本文/ 在/ 每组/ 实验/ 中/ 仅仅/ 改变/ 一个/ 参数/ ,/ 其他/ 参数均/ 设置/ 为/ 固定值/ ./ 所有/ 实验/ 结果/ 都/ 是/ 连续/ 重复/ 运行/ 20/ 次后/ 求得/ 平均值/ ./ 名称/ 连续型/ 属性/ 集/ 监测/ 规则/ 集/ 离散性/ 属性/ 集/ stockdataanalysis401000000017spamdetection701000000021Intrusiondetection8010000000205/ ./ 2/ 实验/ 结果/ 5.2/ ./ 1/ 监测/ 规则/ 规模/ 的/ 影响/ 首先/ ,/ 我们/ 最/ 关心/ 的/ 是/ 监测/ 规则/ 规模/ 不同/ 的/ 情况/ 下/ 3/ 个/ 算法/ 的/ 表现/ ./ 其中/ ,/ 本文/ 用/ 监测/ 规则/ 的/ 数量/ 这个/ 指标/ 来/ 衡量/ 监测/ 规则/ 的/ 规模/ ./ 依据/ 该/ 指标/ 本文/ 进行/ 实验/ :/ 将/ 监测/ 规则/ 的/ 数量/ 从/ 100/ 增加/ 到/ 1000/ ./ 图/ 6/ 显示/ 了/ 实验/ 的/ 结果/ ./ 从/ 实验/ 结果/ 中/ 可以/ 看到/ 无论/ 在/ 何种/ 参数/ 情况/ 下/ ,/ H/ -/ Tree/ 都/ 远远/ 优于/ QSI/ 以及/ UDI/ ./ 另外/ H/ -/ Tree/ 比/ QSI/ 优秀/ 的/ 一个/ 重要/ 原因/ 是/ 本文/ 通过/ 多/ 属性/ 触发/ 索引/ 的/ 扫描/ 淘汰/ 了/ 大量/ 的/ 元组/ ,/ 很多/ 数据流/ 元组/ 假如/ 经过/ 多/ 属性/ 触发/ 索引/ 的/ 扫描/ 过程/ 以后/ 发现/ 不/ 命中/ ,/ 那么/ 元组/ 中/ 剩余/ 属性/ 上/ 的/ 键值/ 对/ 就/ 根本/ 不/ 需要/ 进行/ 扫描/ ./ 的/ 数量/ 固定/ 在/ 10000/ 条/ ,/ 连续性/ 谓词/ 的/ 数量/ 固定/ 在/ 120/ 个/ 的/ 情况/ 下/ 进行/ 了/ 两组/ 实验/ ,/ 第/ 1/ 组是/ 在/ 将/ 离散/ 型/ 属性/ 的/ 数量/ 固定/ 在/ 5/ 的/ 情况/ 下/ 进行/ ,/ 本文/ 将/ 离散/ 型/ 谓词/ 的/ 数量/ 从/ 10/ 渐增/ 到/ 800/ ./ 第/ 2/ 组/ 实验/ 是/ 在/ 将/ 离散/ 型/ 谓词/ 的/ 数量/ 固定/ 在/ 100/ 的/ 情况/ 下/ 展开/ ,/ 本/ Page8/ 文/ 依次/ 将/ 离散/ 型/ 属性/ 的/ 数量/ 从/ 1/ 增加/ 到/ 10/ ./ 从图/ 7/ 和/ 图/ 8/ 的/ 两组/ 结果/ 中/ 可以/ 看到/ 无论/ 在/ 何种/ 参数/ 情况/ 下/ ,/ H/ -/ Tree/ 都/ 远远/ 优于/ 另外/ 两种/ 算法/ ./ 而且/ ,/ 在/ 随着/ 离散/ 型/ 属性/ 数量/ 的/ 增加/ ,/ H/ -/ Tree/ 的/ 表现/ 更加/ 优秀/ ,/ 主要/ 是因为/ 本文/ 利用/ 了/ 并行性/ 的/ 处理/ 算法/ ,/ 将/ 监图/ 7/ 本文/ 将/ 离散/ 型/ 谓词/ 从/ 10/ 增加/ 到/ 800/ 的/ 过程/ 中/ 3/ 种/ 算法/ 的/ 表现/ (/ 从图/ 中/ 可以/ 明显/ 看出/ 由于/ H/ -/ Tree/ 采用/ 了/ 层次化/ 的/ 索引/ ,/ 利用/ 第/ 1/ 层/ 的/ 触发/ 索引/ 可以/ 保证/ 基本/ 不/ 受/ 离散/ 型/ 属性/ 数量/ 的/ 影响/ )/ 图/ 8/ 本文/ 将/ 离散/ 型/ 属性/ 从/ 1/ 增加/ 到/ 10/ 的/ 过程/ 中/ 3/ 种/ 算法/ 的/ 表现/ (/ 从图/ 中/ 可以/ 明显/ 看出/ 离散/ 型/ 属性/ 的/ 增加/ 几乎/ 对/ H/ -/ Tree/ 没有/ 影响/ ,/ 因为/ 多/ 属性/ 触发/ 索引/ 本身/ 的/ 扫描/ 速度/ 基本/ 不会/ 增加/ )/ 5.2/ ./ 3/ 连续型/ 谓词/ 规模/ 的/ 影响/ 本文/ 比较关心/ 连续性/ 谓词/ 规模/ 不同/ 的/ 情况/ 下/ 3/ 种/ 算法/ 的/ 表现/ ./ 图/ 9/ 和/ 图/ 10/ 显示/ 了/ 两组/ 实验/ 的/ 结果/ ./ 其中/ 分别/ 用/ 连续型/ 属性/ 的/ 数量/ 和/ 连续型/ 谓词/ 的/ 数量/ 这/ 两个/ 指标/ 来/ 衡量/ 连续性/ 谓词/ 对/ 监测/ 规则/ 的/ 影响/ ./ 依据/ 这/ 两个/ 指标/ 本文/ 进行/ 了/ 相应/ 的/ 两组/ 实验/ ./ 其中/ 第/ 1/ 组是/ 将/ 监测/ 规则/ 数量/ 固定/ 在/ 2000/ ,/ 连续性/ 属性/ 数量/ 固定/ 在/ 3/ 维/ 的/ 情况/ 下/ ,/ 将/ 连续性/ 谓词/ 的/ 数量/ 图/ 9/ 本文/ 将/ 连续型/ 谓词/ 数量/ 从/ 10/ 增加/ 到/ 800/ 的/ 过程/ 中/ 3/ 种/ 算法/ 的/ 表现/ (/ 从图/ 中/ 可以/ 明显/ 看出/ 3/ 种/ 算法/ 的/ 开销/ 都/ 明显增加/ ,/ 只是/ 由于/ H/ -/ Tree/ 对/ 每个/ 元组/ 都/ 进行/ 命中/ 扫描/ ,/ 所以/ 开销/ 增加/ 幅度/ 不如/ 其他/ 2/ 种/ 算法/ 大/ )/ 测/ 规则/ 更好/ 地/ 分布/ 到/ 不同/ 的/ 触发/ 索引/ 上/ ./ 另外/ ,/ 本文/ 发现/ ,/ 在/ 离散/ 型/ 属性/ 不变/ 的/ 情况/ 下/ ,/ 增加/ 离散/ 型/ 谓词/ 的/ 数量/ 对/ H/ -/ Tree/ 几乎/ 没有/ 影响/ ,/ 是因为/ 触发/ 索引/ 的/ 检索/ 速度/ 基本/ 不/ 受/ 谓词/ 数量/ 的/ 影响/ ,/ 这/ 与/ 本文/ 最初/ 的/ 设想/ 基本相同/ ./ 从/ 10/ 渐增/ 到/ 800/ ./ 第/ 2/ 组/ 实验/ 是/ 在/ 将/ 连续型/ 谓词/ 的/ 数量/ 固定/ 在/ 200/ ,/ 监测/ 规则/ 固定/ 在/ 2000/ 的/ 情况/ 下/ ,/ 依次/ 将/ 连续型/ 属性/ 的/ 数量/ 从/ 2/ 增加/ 到/ 34/ ./ 从/ 两组/ 结果/ 中/ 本文/ 可以/ 看到/ 无论/ 在/ 何种/ 参数/ 情况/ 下/ ,/ H/ -/ Tree/ 都/ 远远/ 优于/ 另外/ 两种/ 算法/ ./ 另外/ H/ -/ Tree/ 和/ UDI/ 都/ 比/ QSI/ 优秀/ 的/ 一个/ 重要/ 原因/ 是/ 他们/ 都/ 对/ 监测/ 规则/ 构建/ 了/ 索引/ ,/ 这样/ 监测/ 规则/ 起来/ 的/ 速度/ 要/ 比/ QSI/ 快得多/ ./ Page9/ 图/ 10/ 本文/ 将/ 连续型/ 属性/ 从/ 2/ 增加/ 到/ 34/ 的/ 过程/ 中/ 3/ 种/ 算法/ 的/ 表现/ (/ 从图/ 中/ 可以/ 明显/ 看出/ 由于/ H/ -/ Tree/ 采用/ 了/ 层次化/ 的/ 索引/ ,/ 虽然/ 高维索引/ 的/ 维度/ 增加/ 会/ 带来/ 开销/ 的/ 增加/ ,/ 但/ 对/ H/ -/ Tree/ 的/ 开销/ 影响/ 不/ 大/ )/ 5.2/ ./ 4/ 公开/ 数据/ 集上/ 的/ 实验/ 结果/ 最后/ ,/ 本文/ 通过/ 公开/ 的/ 数据/ 集/ (/ 表/ 3/ 所示/ )/ 来/ 对/ H/ -/ Tree/ 和/ R/ -/ Tree/ 的/ 性能/ 进行/ 比较/ ./ 实验/ 方法/ 如下/ :/ 将/ 公开/ 的/ 数据/ 集/ 的/ 规则/ 作为/ 监测/ 规则/ 注册/ 到/ 系统/ 中/ ,/ 然后/ 区分/ 出/ 所有/ 的/ 离散/ 型/ 属性/ 和/ 连续型/ 属性/ ./ 然后/ 构造/ 10000/ 条/ 数据流/ 元组/ 推送/ 到/ 系统/ 中/ ,/ 比较/ 两个/ 算法/ 的/ 时间/ ./ 表/ 3/ 显示/ 了/ 实验/ 结果/ ./ 通过/ 表/ 3/ 本文/ 可以/ 观察/ 到/ ,/ 在/ 所有/ 公开/ 的/ 数据/ 集上/ ,/ 本文/ 的/ H/ -/ Tree/ 性能/ 也/ 比/ R/ -/ Tree/ 的/ 优秀/ ,/ 尽管/ 内存/ 开销/ 比/ R/ -/ Tree/ 要/ 高/ 一些/ ./ 综上所述/ ,/ 由于/ 采用/ 了/ 层次化/ 的/ 索引/ 框架/ 以及/ 高效/ 的/ 监测/ 规则/ 算法/ ,/ H/ -/ Tree/ 性能/ 较/ 传统/ 的/ 解决/ 算法/ 有/ 了/ 大幅度/ 的/ 提升/ ,/ 非常适合/ 大/ 数据/ 背景/ 下/ 的/ 运营/ 数据流/ 在线/ 监测/ 系统/ ./ 表/ 3/ 公开/ 数据/ 集上/ 的/ 数据流/ 监测/ 规则/ 效率/ 比较/ 数据流/ H/ -/ Treesyn/ -/ 528171215.670/ ./ 389123600012.290/ ./ 376syn/ -/ 1021166812.630/ ./ 291103712510.250/ ./ 054Spam33322631/ ./ 150.013141740626/ ./ 290.055/ Intrusion28195320/ ./ 930.134898213718/ ./ 040.169/ Adult30652326/ ./ 370.135122503121/ ./ 080.172/ Magic29314523/ ./ 070.032103625022/ ./ 450.097/ Winered29365723/ ./ 570.057113125020/ ./ 150.121/ Winewhite28303122/ ./ 950.133133812018/ ./ 150.182/ Census27978220/ ./ 760.964138360016/ ./ 170.8176/ 结束语/ 和/ 下/ 一步/ 工作/ 在/ 以/ 实现/ 大型/ 集团/ 企业/ 的/ 运营/ 状态/ 在线/ 监测/ 为/ 背景/ 的/ 大/ 数据流/ 环境/ 中/ ,/ 尤其/ 是/ 多媒体/ 数据流/ 环境/ 下/ ,/ 数据流/ 包含/ 的/ 属性/ 越来越/ 多/ ,/ 不同/ 属性/ 之间/ 存在/ 差异/ 的/ 异构/ 大/ 数据流/ 也/ 日益壮大/ ,/ 由于/ 监测/ 规则/ 规模/ 异常/ 庞大/ ,/ 传统/ 的/ 高维索引/ 方法/ 对/ 监测/ 规则/ 集合/ 构建/ 的/ 索引/ 性能/ 无法/ 满足/ 实时性/ 的/ 要求/ ./ 为了/ 解决/ 这个/ 问题/ ,/ 从/ 异构/ 大/ 数据流/ 本身/ 的/ 特点/ 出发/ ,/ 结合/ 不同/ 属性/ 上/ 谓词/ 的/ 特点/ ,/ 本文/ 提出/ 了/ 一种/ 层次化/ 的/ 索引/ 结构/ (/ H/ -/ Tree/ )/ ./ 在/ H/ -/ Tree/ 中/ ,/ 首先/ 根据/ 离散/ 型/ 谓词/ 构建/ Treap/ 树/ 作为/ 第/ 1/ 层/ 索引/ ;/ 在/ 第/ 2/ 层/ ,/ 将/ 每/ 一个/ 连续型/ 谓词/ 映射/ 为/ 多维/ 空间/ 中/ 一维/ ,/ 进而/ 构建/ 多维/ 索引/ ./ 当/ 数据流/ 元组/ 到来/ 时/ ,/ 首先/ 扫描/ H/ -/ Tree/ 的/ 第/ 1/ 层/ 触发/ 索引/ ,/ 完成/ 离散/ 型/ 谓词/ 的/ 监测/ 规则/ ;/ 当/ 命中/ 触发/ 索引/ 以后/ 再/ 搜索/ 第/ 2/ 层/ 索引/ ./ 文中/ 方法/ 既/ 充分利用/ 了/ 第/ 1/ 层/ 离散/ 型/ 触发/ 索引/ 的/ 快速/ 扫描/ 能力/ ,/ 又/ 借助/ 第/ 2/ 层/ 连续型/ 谓词/ 的/ 高维/ 区块/ 划分/ ,/ 将/ 连续型/ 谓词/ 映射/ 为/ 不同/ 的/ 区间/ 块/ ,/ 进一步/ 加快/ 检索/ 速度/ ./ 在/ 公开/ 数据/ 集/ 和/ 人工/ 数据/ 集上/ 的/ 实验/ 结果表明/ ,/ 在/ 不/ 降低/ 准确率/ 的/ 情况/ 下/ ,/ H/ -/ Tree/ 的/ 性能/ 优于/ 已有/ 的/ 解决/ 方法/ ./ 

