Page1/ 基于/ 范/ 德蒙/ 码/ 的/ HDFS/ 优化/ 存储/ 策略/ 研究/ 宋宝燕/ 王俊陆/ 王妍/ (/ 辽宁大学/ 信息科学/ 与/ 技术/ 学院/ 沈阳/ 110036/ )/ 摘要/ 随着/ 大/ 数据/ 时代/ 的/ 到来/ ,/ 新型/ 文件系统/ HDFS/ (/ Hadoop/ 分布式文件系统/ )/ 的/ 应用/ 越来越/ 广泛/ ./ 但/ 其/ 本身/ 也/ 存在/ 着/ 整体/ 存储/ 成本/ 过高/ 、/ 可扩展性/ 低/ 、/ 节点/ 负载/ 均衡/ 能力/ 不足/ 等/ 问题/ ./ 因此/ ,/ 该文/ 提出/ 了/ 一种/ 基于/ 范/ 德蒙/ 码/ 的/ HDFS/ 分散式/ 动态/ 副本/ 存储/ 优化/ 策略/ ,/ 针对/ HDFS/ 大多/ 部署/ 在/ 大量/ 的/ 廉价/ 硬件/ 集群/ 上/ 的/ 实际/ 情况/ ,/ 在/ 范/ 德蒙/ 码/ 优化/ 策略/ 的/ 基础/ 上/ ,/ 采用/ 分散式/ 动态/ 副本/ 控制/ 的/ 思想/ 对/ HDFS/ 文件/ 操作/ 的/ 计算/ 过程/ 、/ 计算/ 模式/ 以及/ 译码/ 触发/ 策略/ 进行/ 系统/ 的/ 改进/ ,/ 并/ 通过/ 校验码/ 动态/ 设置/ 的/ 方式/ 将/ 容错/ 度/ 控制/ 在/ 一个/ 理想/ 的/ 范围/ 之内/ ,/ 此外/ ,/ 结合/ 伽罗华/ 有限/ 域/ 理论/ 对范/ 德蒙/ 码/ 的/ 编译/ 码/ 操作/ 及/ 计算方法/ 进行/ 全面/ 优化/ ,/ 在/ 不/ 影响/ HDFS/ 存储/ 结构/ 的/ 前提/ 下/ ,/ 降低/ 了/ 范/ 德蒙/ 码/ 编译/ 码/ 的/ 时间/ 代价/ 和/ 计算/ 的/ 内存/ 压力/ ,/ 节约/ 了/ HDFS/ 约/ 30/ %/ 的/ 存储/ 开销/ ,/ 数据/ 可靠性/ 提高/ 了/ 约/ 200/ %/ ,/ 均衡/ HDFS/ 系统/ 节点/ 负载/ 能力/ ,/ 译码/ 恢复/ 效率/ 平均/ 提升/ 约/ 40/ %/ ,/ 形成/ 了/ 一套/ 完整/ 的/ 、/ 系统/ 的/ 优化/ 方案/ ,/ 为/ 未来/ HDFS/ 的/ 发展/ 提供/ 了/ 一条/ 有效途径/ ./ 关键词/ 大/ 数据/ ;/ HDFS/ ;/ 范/ 德蒙/ 码/ ;/ 分散式/ 动态/ 副本/ ;/ 优化/ 存储/ 1/ 引言/ 随着/ IT/ 技术/ 迅猛发展/ 以及/ 信息化/ 的/ 深入/ ,/ 数据/ 的/ 生成量/ 大约/ 每/ 两年/ 就/ 会上/ 翻/ 一倍/ ,/ 几乎/ 达到/ 了/ 电子/ 领域/ 中/ 摩尔定律/ 的/ 标准/ ./ 据统计/ ,/ 平均/ 每秒/ 有/ 200/ 万/ 用户/ 在/ 使用/ 谷歌/ 搜索/ ,/ Facebook/ 用户/ 每天/ 共享/ 的/ 内容/ 超过/ 40/ 亿/ ,/ Twitter/ 每天/ 处理/ 的/ 推特/ 数量/ 超过/ 3.4/ 亿/ [/ 1/ ]/ ./ 大/ 数据/ 时代/ 下/ ,/ 数据量/ 的/ 增长速度/ 会/ 超过/ 存储/ 数据/ 介质/ 容量/ 的/ 增长速度/ [/ 2/ ]/ ,/ 即/ 存储/ 代价/ 会/ 不断/ 上升/ ,/ 存储介质/ 的/ 成本/ 在/ 不断/ 增加/ ./ 面对/ 这种/ 巨大/ 的/ 数据/ 生成量/ ,/ 传统/ 数据/ 管理系统/ 中/ 的/ 数据处理/ 技术/ 受到/ 了/ 极大/ 挑战/ [/ 3/ ]/ ,/ 如何/ 更/ 高效/ 、/ 稳定/ 的/ 存储/ 这些/ 数据/ ,/ 成为/ 数据处理/ 等/ 许多/ 领域/ 研究/ 的/ 热点/ [/ 4/ ]/ ./ 目前/ 人们/ 往往/ 采用/ HDFS/ (/ Hadoop/ 分布式文件系统/ )/ 来/ 存储/ 这些/ 大/ 数据/ ./ HDFS/ 是/ 一种/ 可靠/ 的/ 、/ 容错/ 的/ 文件系统/ ,/ 适合/ 低廉/ 地/ 存放/ 大规模/ 的/ 数据/ ./ 但/ 随着/ HDFS/ 被/ 广泛/ 使用/ ,/ 其/ 固有/ 的/ 如/ 整体/ 存储/ 成本/ 过高/ 、/ 可扩展性/ 低/ 、/ 节点/ 负载/ 均衡/ 能力/ 不足/ 等/ 问题/ 也/ 越来越/ 突显/ ./ 针对/ 这些/ 问题/ ,/ 许多/ 专家学者/ 进行/ 了/ 深入/ 广泛/ 的/ 研究/ ,/ 取得/ 了/ 卓有成效/ 的/ 进展/ ,/ 如/ 针对/ 云端/ 存储/ 优化/ 的/ HDFS/ 存储/ 传输/ 策略/ [/ 5/ ]/ 、/ 以/ 高效/ 存储/ 为/ 目的/ 基于/ XOR/ 码/ 的/ HDFS/ 优化/ 策略/ [/ 6/ -/ 7/ ]/ 等/ ./ 在/ 此基础/ 上/ ,/ 本文/ 亦/ 对/ 大/ 数据/ 的/ 有效/ 存储/ 问题/ 进行/ 了/ 研究/ ,/ 提出/ 了/ 一种/ 基于/ 范/ 德蒙/ 码/ 的/ HDFS/ 优化/ 存储/ 方法/ :/ (/ 1/ )/ 针对/ HDFS/ 存储/ 成本/ 过高/ 的/ 问题/ ,/ 采用/ 了/ 基于/ 范/ 德蒙/ 码/ 的/ 编译/ 码/ 操作/ 对/ HDFS/ 进行/ 数据/ 优化/ ,/ 摒弃/ HDFS/ 原本/ 的/ 多/ 副本/ 镜像/ 复制/ 策略/ ;/ (/ 2/ )/ 加入/ 分散式/ 动态/ 副本/ 控制/ 思想/ ,/ 改进/ 单纯/ 范/ 德蒙/ 码/ 策略/ 无法/ 应对/ 灾难性/ 机架/ 和/ 节点/ 失效/ 的/ 问题/ ;/ (/ 3/ )/ 采用/ 分组/ 分列/ 策略/ 以及/ 有限/ 域/ 理论/ 对/ 译码/ 操作/ 的/ 计算/ 过程/ 、/ 计算/ 模式/ 和/ 计算方法/ 进行/ 改进/ ,/ 精简/ 矩阵/ 运算/ 的/ 步骤/ ;/ (/ 4/ )/ 根据/ 范/ 德蒙/ 码/ 输出/ 矩阵/ 的/ 特点/ ,/ 改进/ 译码/ 触发/ 操作/ 的/ 时机/ ,/ 降低/ 译码/ 操作/ 触发/ 的/ 频率/ ./ 2/ 相关/ 工作/ 2.1/ HDFSHDFS/ 有别于/ 已有/ 的/ 分布式文件系统/ ./ 其/ 核心/ 设计/ 思想/ 为/ “/ 一次/ 写入/ ,/ 多次/ 读取/ [/ 8/ ]/ ”/ 的/ 高效/ 访问/ 方式/ ,/ 且/ 系统/ 不/ 需要/ 架设/ 在/ 价格/ 高昂/ 、/ 性能/ 稳定/ 的/ 硬件/ 设备/ 上/ [/ 9/ ]/ ./ HDFS/ 采用/ Master/ // Slave/ 架构/ [/ 10/ ]/ 设计/ ,/ 目的/ 是/ 对/ 大量/ 数据/ 的/ 吞吐/ 应用/ 进行/ 优化/ [/ 11/ ]/ ./ 同时/ ,/ 与/ 磁盘/ 存储/ 默认/ 的/ 数据/ 块/ 概念/ 类似/ ,/ HDFS/ 上/ 的/ 文件/ 被/ 划分/ 为/ 多个/ Block/ 分块/ [/ 12/ ]/ ,/ 且/ 每个/ Block/ 分块/ 都/ 作为/ 独立/ 的/ 存储单元/ ,/ 以多/ 副本/ 备份/ 策略/ 进行/ 存储/ 工作/ ./ 2.1/ ./ 1HDFS/ 架构/ HDFS/ 由/ 两类/ 节点/ 构成/ :/ 管理者/ Namenode/ 和/ 工作者/ Datanode/ [/ 13/ ]/ ./ 这/ 两类/ 节点/ 相互/ 分工/ 又/ 共同/ 协作/ ,/ 分别/ 以/ 不同/ 的/ 模式/ 运行/ ,/ 完成/ 各自/ 的/ 任务/ ./ 图/ 1/ 为/ HDFS/ 的/ 组织/ 结构图/ ./ 如图/ 1/ 所示/ ,/ HDFS/ 中/ 管理者/ Namenode/ 暂存/ 所有/ 存储/ Block/ 文件/ 块/ 的/ Datanode/ 节点/ 的/ 信息/ ,/ 并/ 负责/ 数据/ 块/ 的/ 备份/ 操作/ ,/ 周期性地/ 从/ 集群/ 中/ 的/ 各个/ 节点/ 接收/ 反馈/ 心跳/ 信号/ 以及/ Block/ 分块/ 的/ 反馈/ 状态/ 报告/ Blockreport/ ,/ Namenode/ 会/ 根据/ 这些/ 反馈/ 信息/ 来/ 检测/ HDFS/ 系统/ 中/ Block/ 分块/ 数据/ 映射/ 的/ 状况/ 信息/ ./ 工作者/ Datanode/ 是/ HDFS/ 分布式文件系统/ 的/ 实际操作/ 节点/ ./ 这些/ 节点/ 由/ 管理者/ Namenode/ 统一/ 调度/ ,/ 根据/ 实际/ 需要/ 进行/ 文件/ 的/ 存储/ 操作/ 或者/ 数据/ 块/ 的/ 检索/ 操作/ ./ 同时/ ,/ Datanode/ 节点/ 还/ 负责/ 执行/ 管理者/ Namenode/ 发出/ 的/ 对/ 数据/ 块/ 的/ 增删/ 查改/ 等/ 操作/ 的/ 指令/ ,/ 并/ 周期性地/ 向/ 管理者/ Namenode/ 提交/ Block/ 数据/ 块/ 的/ 反馈/ 心跳/ 信号/ 以及/ Block/ 分块/ 的/ 反馈/ 状态/ 报告/ ./ 2.1/ ./ 2HDFS/ 的/ 主要/ 优势/ HDFS/ 是/ 通过/ 多/ 副本/ 镜像/ 复制/ 策略/ 来/ 实现/ 备份/ 操作/ 的/ ,/ 默认/ 情况/ 下/ 副本/ 系数/ 为/ 3/ ,/ 即/ HDFS/ 的/ 副本/ 策略/ 是/ 将/ 1/ // 3/ 的/ 备份/ 数据/ 存储/ 在/ 本地/ 机架/ 的/ 某个/ 节点/ 中/ ,/ 另/ 1/ // 3/ 的/ 备份/ 数据/ 存储/ 在/ 同一个/ 机架/ 的/ 另/ 一个/ Datanode/ 节点/ 中/ ,/ 最后/ 1/ // 3/ 的/ 备份/ 数据/ 是/ 存储/ 在/ 不同/ 机架/ 上/ 的/ 某个/ Datanode/ 节点/ 中/ 的/ ./ 该/ 策略/ 确保/ 了/ HDFS/ 的/ 数据/ 移动/ 与/ 安全/ 机制/ ./ Page3/ 首先/ ,/ HDFS/ 是/ 一种/ 容错/ 的/ 分布式文件系统/ ./ HDFS/ 所有/ 数据/ 经由/ 源/ 数据/ 生成/ 后/ 会/ 立即/ 进行/ 副本/ 的/ 备份/ 操作/ ,/ 并/ 将/ 副本/ 分别/ 存储/ 到/ 集群/ 的/ 各个/ 节点/ 中/ 执行/ 数据/ 的/ 管理/ 调度/ 和/ 数据/ 的/ 分析/ 请求/ [/ 14/ ]/ ,/ 允许/ 节点/ 数据/ 出现/ 灾难性/ 崩溃/ 的/ 情况/ ./ 其次/ ,/ HDFS/ 可以/ 部署/ 在/ 大量/ 廉价/ 设备/ 集群/ 上以/ 节约/ 存储/ 成本/ ./ HDFS/ 采用/ 的/ 多/ 副本/ 镜像/ 复制/ 策略/ 保证/ 了/ 数据/ 存储/ 的/ 安全性/ 和/ 可靠性/ ,/ 通过/ 增加/ 数据/ 的/ 副本/ 数量/ 弥补/ 硬件/ 设备/ 的/ 不足/ ,/ 同时/ 也/ 减少/ 了/ 本地/ 机架/ 与/ 异地/ 机架/ 之间/ 数据传输/ 的/ 时间/ 开销/ ./ 最后/ ,/ 在/ 实际/ 的/ 数据/ 读写操作/ 过程/ 中/ ,/ HDFS/ 的/ 多/ 副本/ 复制/ 策略/ 实现/ 了/ 多/ 节点/ 传输/ ,/ 降低/ 了/ 对/ 网络/ 传输/ 总/ 带宽/ 的/ 依赖/ ,/ 在/ 不/ 损害/ 数据/ 可靠性/ 和/ 读取/ 操作/ 效率/ 的/ 前提/ 下/ ,/ 提高/ 了/ 对/ 文件/ 高效/ 写入/ 操作/ 的/ 支持/ ./ 2.1/ ./ 3HDFS/ 存在/ 的/ 不足/ 在/ HDFS/ 这种/ 多/ 副本/ 镜像/ 复制/ 策略/ 中/ ,/ 各个/ 机架/ 上/ 所/ 存储/ 的/ 备份/ 数据/ 的/ 实际/ 分布/ 状态/ 并/ 不是/ 均匀/ 的/ ./ 因此/ ,/ 这种/ 多/ 副本/ 镜像/ 复制/ 的/ 策略/ 也/ 使得/ HDFS/ 产生/ 了/ 诸多/ 问题/ ./ 首先/ ,/ HDFS/ 的/ 整体/ 存储/ 成本/ 过高/ [/ 15/ ]/ ./ 在/ 默认/ 情况/ 下/ ,/ HDFS/ 实际/ 存储/ 数据/ 所/ 需/ 的/ 空间/ 开销/ 为/ 原始/ 存储/ 数据/ 容量/ 的/ 3/ 倍/ ./ 以/ 此种/ 方式/ 对/ PB/ 至/ ZB/ 数据/ 级/ 的/ 数据/ 进行/ 操作/ 时/ ,/ 增加/ 的/ 数据/ 冗余/ 量会/ 使得/ 实际/ 物理/ 存储介质/ 无法/ 适应/ ,/ 且/ 过/ 大/ 的/ 数据/ 规模/ 也/ 会/ 直接/ 增加/ 存储设备/ 的/ 硬件/ 成本/ 预算/ 以及/ 建立/ 文件/ 索引/ 的/ 时间/ 代价/ ./ 其次/ ,/ HDFS/ 的/ 可扩展性/ 低/ [/ 16/ ]/ ./ 在/ HDFS/ 的/ 多/ 副本/ 镜像/ 复制/ 策略/ 中/ ,/ 所有/ 系统/ 中/ 的/ 数据/ 都/ 要/ 保持/ 相同/ 的/ 副本/ 数目/ ,/ 且/ 系统/ 无法/ 根据/ 外界/ 实际/ 需求/ 的/ 改变/ 动态/ 调度/ 已有/ 的/ 副本/ ,/ 这/ 就/ 导致/ 了/ 系统/ 的/ 灵活性/ 及/ 可扩展性/ 降低/ ./ 最后/ ,/ HDFS/ 的/ 节点/ 负载/ 均衡/ 能力/ 不足/ [/ 17/ ]/ ./ 由于/ 所有/ 的/ Block/ 分块/ 数据/ 的/ 位置/ 信息/ 都/ 必须/ 要/ 存储/ 在/ 管理者/ Namenode/ 的/ 运行/ 内存/ 中/ ,/ Block/ 文件/ 块/ 数量/ 的/ 不断/ 增加/ 会/ 导致/ 管理者/ Namenode/ 的/ 运行/ 内存/ 压力/ 不断/ 变/ 大/ ,/ 超出/ 系统/ 有限/ 的/ 负载/ 均衡/ 能力/ ./ 2.2/ HDFS/ 的/ 优化/ 随着/ 对/ 数据处理/ 技术/ 要求/ 越来越/ 高/ ,/ HDFS/ 的/ 这些/ 缺点/ 会/ 产生/ 越来越/ 多/ 的/ 问题/ ./ 各/ 领域/ 的/ 专家学者/ 通过/ 对/ HDFS/ 文件系统/ 存储/ 框架/ 的/ 不断/ 研究/ 与/ 拓展/ ,/ 各类/ 存储/ 备份/ 策略/ 的/ 优化/ 方案/ 已经/ 逐步/ 展现出/ 雏形/ ./ 典型/ 优化/ 方案/ 如/ 基于/ GE/ 码/ 的/ HDFS/ 存储/ 优化/ 策略/ 、/ 基于/ FEC/ 码/ 的/ HDFS/ 云/ 存储/ 优化/ 策略/ 、/ 以及/ 企业级/ 应用/ 基于/ XOR/ 码/ 的/ HDFS/ 优化/ 存储/ 策略/ 等/ ./ 文献/ [/ 15/ ,/ 18/ ]/ 提出/ 了/ 一种/ 基于/ GE/ 码/ 的/ HDFS/ 存储/ 优化/ 策略/ ./ GE/ 码是/ 一种/ 垂直/ 码/ 的/ 编码方式/ ,/ 该/ 策略/ 能够/ 通过/ 引入/ 较少/ 的/ 冗余/ 校验/ 块/ 而/ 对/ 数据/ 的/ 传输/ 和/ 数据/ 的/ 存储/ 提供/ 可靠保证/ ,/ 其/ 容错/ 度/ 可以/ 控制/ 在/ [/ 0.30/ ,/ 0.35/ ]/ 的/ 范围/ 内/ ,/ 在/ 确保/ 数据/ 的/ 可靠性/ 和/ 存储/ 效率/ 的/ 同时/ ,/ 很大/ 程度/ 上/ 也/ 降低/ 了/ 系统/ 的/ 存储/ 开销/ ,/ 并/ 提供/ 了/ 更为/ 灵活/ 的/ 数据/ 负载/ 均衡/ 技术/ ./ 但是/ ,/ 基于/ GE/ 码/ 的/ HDFS/ 优化/ 策略/ 也/ 存在/ 着/ 不足之处/ ,/ 如/ 编码/ 分片/ 的/ 方式/ 需要/ 重构/ HDFS/ 分块/ ,/ 译码/ 操作/ 时/ 需要/ 进行/ 大量/ 的/ 动态/ 计算/ ,/ 复杂度/ 较/ 高/ ,/ 这/ 导致/ 了/ 译码/ 的/ 效率/ 较/ 低/ 、/ 后期/ 维护/ 升级/ 难度/ 较大/ 等/ 问题/ ./ 文献/ [/ 5/ ]/ 中/ 讨论/ 了/ 一种/ 基于/ FEC/ 码/ 的/ HDFS/ 优化/ 策略/ ,/ 该/ 策略/ 是/ 针对/ 云端/ 存储/ 文件系统/ 占用/ 空间/ 大/ ,/ 负载/ 均衡/ 能力差/ 等/ 问题/ 进行/ 改进/ 的/ ./ 其/ 设计/ 思想/ 是/ 把/ 需要/ 上传/ 的/ 文件/ 先/ 进行/ 编码/ 分块/ 的/ 操作/ ,/ 然后/ 整合/ 编码/ 后/ 的/ 输出/ 数据/ ,/ 最后/ 再/ 把/ 数据传输/ 至/ 云端/ 的/ HDFS/ 的/ 分布式系统/ 集群/ 中/ ./ 整个/ 过程/ 不/ 进行/ 数据/ 副本/ 的/ 备份/ 操作/ 或者/ 只/ 进行/ 少量/ 的/ 数据/ 副本/ 备份/ ,/ 降低/ 了/ 整个/ 文件系统/ 操作过程/ 的/ 空间/ 开销/ 和/ 传输/ 代价/ ./ 此外/ ,/ 基于/ FEC/ 码/ 的/ HDFS/ 优化/ 策略/ 中/ 加入/ 了/ 数据传输/ 的/ 完成/ 性/ 检测/ 工作/ ,/ 因此/ ,/ 该/ 策略/ 更/ 适用/ 于/ 远程/ 文件/ 的/ 传输/ ./ 基于/ FEC/ 码/ 的/ 优化/ 策略/ 优势/ 是/ 存储/ 代价/ 较/ 小/ ,/ 与/ 基于/ GE/ 码/ 优化/ 策略/ 相比/ ,/ 更/ 有利于/ 云端/ 数据/ 上传/ 和/ 下载/ 等/ 传输/ 操作/ ;/ 但是/ ,/ 该/ 策略/ 也/ 存在/ 着/ 计算/ 较为/ 复杂/ ,/ 灵活性/ 较/ 低/ ,/ 本地/ 数据/ 存储/ 效率/ 较/ 低/ 的/ 缺点/ ./ 文献/ [/ 6/ -/ 7/ ]/ 中/ 提到/ 的/ 一种/ 基于/ XOR/ 码/ 的/ 优化/ 策略/ ,/ 其/ 编码/ 和/ 译码/ 的/ 方式/ 相对/ 简单/ ,/ 采用/ 单一/ 的/ 异或/ 运算/ 生成/ 奇偶校验/ 码/ Parity/ ,/ 原始数据/ 是/ 按照/ Stripe/ 进行/ 分/ 条目/ 存储/ 的/ ,/ 且/ 每/ 一个/ Stripe/ 条目/ 只会/ 生成/ 一个/ Parity/ ,/ 当/ 某个/ Stripe/ 条目/ 中/ 丢失/ 或者/ 损坏/ 了/ 一个/ Block/ 数据/ 块/ 时/ ,/ XOR/ 码/ 优化/ 策略/ 能够/ 通过/ 异或/ 校验/ 的/ 译码/ 运算/ 过程/ 进行/ 数据/ 的/ 恢复/ 操作/ ./ 相比/ 上述/ 优化/ 方案/ ,/ 基于/ XOR/ 码/ 的/ HDFS/ 优化/ 存储/ 策略/ 执行/ 效率/ 更高/ ,/ 但/ 由于/ 译码/ 操作/ 只能/ 恢复/ 单一/ Block/ 数据/ 块/ 的/ 数据/ ,/ 即/ XOR/ 码/ 的/ 优化/ 策略/ 中/ 只/ 允许/ 出现/ 一个/ 数据/ 块/ 失效/ 的/ 情况/ ,/ 所以/ ,/ 基于/ XOR/ 码/ 的/ HDFS/ 优化/ 策略/ 对/ 文件系统/ 的/ 纠错/ 能力/ 比较/ 弱/ ./ Page43/ 基于/ 范/ 德蒙/ 码/ 的/ 优化/ 策略/ 由/ 上文/ 分析/ 可知/ ,/ 随着/ 数据/ 生成量/ 的/ 逐渐/ 增大/ ,/ HDFS/ 的/ 应用/ 将会/ 越来越/ 广泛/ ,/ 还有/ 很多/ 问题/ 有待/ 进一步/ 探讨/ ./ 本文/ 对/ HDFS/ 文件系统/ 及/ 现有/ 的/ 几种/ 优化/ 策略/ 进行/ 了/ 深入研究/ ,/ 提出/ 了/ 一种/ 空间/ 开销/ 更优/ ,/ 稳定性/ 和/ 可靠性/ 更好/ 的/ 优化/ 策略/ :/ 基于/ 范/ 德蒙/ 码/ 的/ HDFS/ 优化/ 存储/ 策略/ (/ VanHDFS/ )/ ./ 3.1/ 范/ 德蒙/ 码范/ 德蒙/ 码/ 也/ 被/ 称为/ 范/ 德蒙/ 阵列/ 纠/ 删码/ [/ 19/ ]/ ,/ 目前/ ,/ 关于/ 纠/ 删码/ 的/ 研究/ 大致/ 上/ 可以/ 分为/ 两个/ 方向/ :/ 一种/ 是/ 低密度/ 级联/ 纠/ 删码/ ,/ 如/ LT/ 码/ (/ LubyTransformCodes/ )/ 、/ LDPC/ 码/ 等/ ;/ 另/ 一种/ 是/ 最大/ 距离/ 可分/ 纠/ 删码/ ,/ 如/ RS/ 码/ (/ Reed/ -/ SolomonCodes/ )/ 等/ ./ 其中/ ,/ 低密度/ 级联/ 纠/ 删码/ 的/ 研究/ 虽然/ 取得/ 了/ 很多/ 进展/ ,/ 但/ 还/ 存在/ 很多/ 的/ 问题/ ,/ 并/ 不/ 适合/ 大规模/ 应用/ 到/ 生产/ 和/ 生活/ 中/ 去/ ;/ 而/ 最大/ 距离/ 可分/ 纠/ 删码/ 的/ 编译/ 码/ 方案/ 具有/ 优秀/ 的/ 存储空间/ 代价/ 和/ 良好/ 的/ 容灾/ 能力/ ,/ 能够/ 平衡/ 整体/ 效率/ 和/ 编译/ 码/ 性能/ 的/ 问题/ ,/ 通过/ 对/ 原始数据/ 块/ 添加/ 校验码/ 的/ 方法/ 来/ 减少/ 数据/ 存储/ 过程/ 中/ 的/ 副本/ 备份/ 操作/ ,/ 在/ 保证数据/ 可靠性/ 的/ 前提/ 下/ 很大/ 程度/ 上/ 降低/ 存储/ 开销/ ,/ 提高/ 存储/ 效率/ ./ 范/ 德蒙/ 码/ 隶属于/ 里德/ -/ 所罗门/ 码/ (/ Reed/ -/ SolomonCodes/ )/ 的/ 类别/ ,/ 是/ 一种/ 最大/ 距离/ 可分/ 纠/ 删码/ ./ 在/ 继承/ 了/ 最大/ 距离/ 可分/ 纠/ 删码/ 优点/ 的/ 同时/ ,/ 范/ 德蒙/ 码/ 的/ 编译/ 码/ 方案/ 还/ 具有/ 更/ 低/ 的/ 迭代/ 算法/ 复杂度/ 、/ 更/ 优秀/ 的/ 空间/ 代价/ 及/ 容错/ 能力/ ./ 所以/ ,/ 范/ 德蒙/ 码/ 也/ 被/ 公认/ 为/ 是/ 一种/ 可以/ 充分利用/ 信道/ 带宽/ 的/ 优秀/ 编译/ 码/ 解决方案/ 之一/ ./ 范/ 德蒙/ 码/ 与/ 其他/ 编码/ 策略/ 既有/ 相似之处/ ,/ 又/ 有所不同/ ./ 从/ 数学/ 的/ 角度/ 进行/ 分析/ ,/ 目前/ 被/ 广泛/ 使用/ 的/ RAID5/ 、/ RAID6/ 等/ 编码/ 都/ 可以/ 看作/ 是范/ 德蒙/ 码/ 阵列/ 算法/ 的/ 一个/ 子集/ ./ 当/ 冗余/ 校验码/ 有且/ 只有/ 一个/ 的/ 时候/ ,/ 范/ 德蒙/ 码/ 就/ 退化/ 成/ 了/ RAID5/ 算法/ ,/ 在/ 伽/ 罗华域/ 上将/ 源/ 数据/ 进行/ XOR/ 逻辑运算/ 以/ 得到/ 冗余/ 校验码/ ./ 同理/ ,/ 当/ 同时/ 产生/ 两个/ 冗余/ 校验码/ 数据/ 的/ 时候/ ,/ 范/ 德蒙/ 码/ 就/ 退化/ 成/ 了/ RAID6/ 算法/ ,/ 在/ 伽/ 罗华域/ 上/ 通过/ XOR/ 码/ 等/ 方法/ 进行/ 运算/ ./ 因此/ ,/ 范/ 德蒙/ 码/ 也/ 可以/ 看成/ 是/ 已有/ RAID5/ 、/ RAID6/ 编码/ 基础/ 上/ 的/ 一种/ 延伸/ ./ 现阶段/ ,/ 为/ 提高/ 数据传输/ 的/ 实时性/ 和/ 可靠性/ ,/ 大量/ 利用/ 范/ 德蒙/ 码同/ 卷积码/ 、/ 数字/ 喷泉/ 码/ 等/ 编码/ 级联/ 使用/ 的/ 方案/ 已经/ 被/ 广泛/ 地/ 应用/ 到/ 了/ 数字/ 视频信号/ 、/ 远程/ 文件/ 存储/ 、/ 数据传输/ 等/ 实际/ 项目/ 中/ ./ 如/ 在/ 网络通信/ 领域/ 中/ ,/ 信息/ 传输/ 的/ 过程/ 常常/ 会/ 由于/ 网络/ 拥塞/ 或/ 受到/ 其他/ 原因/ 影响/ 而/ 造成/ 数据传输/ 成功率/ 低/ 的/ 问题/ ./ 虽然/ 很多/ 利用/ 检错码/ 、/ 纠错码/ 的/ 方式/ 对/ 失效/ 数据/ 进行/ 重传/ 的/ 策略/ 可以/ 改善/ 网络/ 的/ 可靠性/ ,/ 但/ 反复/ 传输/ 相同/ 数据/ 也/ 造成/ 了/ 额外/ 的/ 网络/ 开销/ 和/ 巨大/ 的/ 传输/ 时间/ 代价/ ./ 因此/ ,/ 为了/ 平衡/ 传输/ 开销/ 和/ 数据/ 可靠性/ 之间/ 的/ 矛盾/ ,/ 范/ 德蒙/ 码及/ 类范/ 德蒙/ 码/ 的/ 纠/ 删码/ 策略/ 被/ 广泛应用/ 到/ 网络/ 传输/ 、/ 数据通信/ 等/ 领域/ ,/ 对/ 传输数据/ 进行/ 纠/ 删码/ 编码/ 提高/ 数据/ 可靠性/ 的/ 同时/ 也/ 不会/ 影响/ 传输/ 效率/ ./ 此外/ ,/ 如/ 磁盘/ 存储/ (/ RAID/ )/ 、/ 文件系统/ 中/ 也/ 会/ 采用/ 类似/ 的/ 容错/ 技术/ 来/ 增强/ 数据/ 的/ 可靠性/ ./ 3.2/ VanHDFS/ 与/ HDFS/ 存储/ 策略/ 范/ 德蒙/ 码以/ 其/ 优秀/ 的/ 编译/ 码/ 效率/ 和/ 存储空间/ 代价/ ,/ 被/ 广泛应用/ 于/ 电子/ 通信/ 、/ 互联网/ 数据安全/ 、/ 磁盘/ 介质/ 存储/ 等/ 领域/ 的/ 纠错/ 技术/ 中/ ./ 考虑/ 到/ HDFS/ 存储/ 策略/ 的/ 优势/ 、/ 不足/ 以及/ 范/ 德蒙/ 码/ 的/ 编译/ 码/ 操作/ 特性/ ,/ 本文/ 将范/ 德蒙/ 码/ 编译/ 码/ 引入/ 到/ HDFS/ 存储/ 策略/ 中/ ,/ 提出/ 采用/ “/ 数据/ 块/ +/ 校验码/ ”/ 存储/ 方式/ 的/ VanHDFS/ 替代/ HDFS/ 的/ 多/ 副本/ 备份/ 存储/ 策略/ ./ HDFS/ 存储/ 框架/ 大多/ 是/ 建立/ 在/ 大量/ 廉价/ 硬件/ 存储设备/ 集群/ 基础/ 之上/ 的/ ,/ 硬件/ 环境/ 的/ 执行/ 效率/ 和/ 整体/ 的/ 稳定性/ 都/ 较/ 低/ ,/ 节点/ 数据/ 丢失/ 或/ 损坏/ 的/ 情况/ 是/ 不可避免/ 的/ ./ VanHDFS/ 改变/ 了/ HDFS/ 需要/ 存储/ 大量/ 的/ 冗余/ 数据/ 来/ 确保/ 数据/ 可靠性/ 的/ 传统/ 方式/ ,/ 在/ 适当/ 的/ 容错/ 度/ 设置/ 下/ ,/ 只/ 需/ 额外/ 存储/ 较少/ 的/ 校验码/ 块/ ./ 当/ HDFS/ 中/ 一个/ 或者/ 多个/ 数据/ 块/ 中/ 的/ 数据/ 失效/ 时/ ,/ 通过/ VanHDFS/ 策略/ 的/ 译码/ 操作/ 即可/ 将/ 数据/ 直接/ 进行/ 恢复/ ./ 因此/ ,/ VanHDFS/ 策略/ 可以/ 在/ 确保/ HDFS/ 存储/ 数据/ 可靠性/ 的/ 同时/ 节约/ 大量/ 的/ 存储/ 成本/ ./ 在/ VanHDFS/ 策略/ 中/ ,/ 设/ 存入/ HDFS/ 的/ 原始/ 数据包/ 的/ 数量/ 为/ k/ ,/ 对/ 这/ k/ 包/ 数据/ 进行/ 范/ 德蒙/ 码/ 的/ 编码/ 操作/ ,/ 此时/ ,/ 根据/ 容错/ 度/ 设置/ 的/ 不同/ ,/ 生成/ 的/ q/ 包/ 数据/ 中/ 需要/ 有/ 相应/ 的/ 额外/ 数量/ 的/ 冗余/ 校验码/ 块/ l/ (/ 其中/ ,/ q/ =/ k/ +/ l/ )/ ./ 在/ HDFS/ 的/ 读写操作/ 中/ ,/ 当/ 任意/ 包/ 的/ 数据/ 发生/ 丢失/ 或者/ 失效/ 的/ 时候/ (/ 失效/ 数据包/ 的/ 数目/ 要/ 小于/ q/ -/ k/ )/ ,/ 范/ 德蒙/ 码/ 的/ 译码/ 策略/ 就/ 能够/ 选取/ 生成/ 的/ q/ 包/ 数据/ 中/ 其他/ 有效/ 的/ k/ 包/ 数据/ 来/ 恢复/ 构建/ 原始/ 的/ q/ 包/ 数据/ ./ 图/ 2/ 为/ VanHDFS/ 策略/ 优化/ 过程/ 示意图/ ./ 如图所示/ ,/ 数据包/ a/ 到/ 数据包/ e/ 中/ 的/ 数据/ 为/ 原始数据/ ,/ 而/ 数据包/ a/ 到/ 数据包/ G/ 中/ 的/ 数据/ 为/ 编码/ 后/ 的/ 输出/ 数据/ ,/ 其中/ ,/ 数据包/ F/ 和/ 数据包/ G/ 为/ 校验码/ Page5/ 包/ ,/ 生成/ 编码/ 后/ 数据/ q/ 的/ 过程/ 可/ 表示/ 为/ q/ =/ 犘/ (/ a/ ,/ b/ ,/ c/ ,/ d/ ,/ e/ )/ ,/ 其中/ ,/ 犘/ 为/ 编码/ 操作/ 的/ 构造/ 矩阵/ ./ 范/ 德蒙/ 码/ 的/ 译码/ 过程/ 为/ q/ =/ 犘/ -/ 1/ (/ a/ ,/ b/ ,/ c/ ,/ d/ ,/ e/ )/ ,/ 其中/ ,/ 犘/ -/ 1/ 为/ 犘/ 的/ 求/ 逆运算/ ./ VanHDFS/ 策略/ 可以/ 在/ 一定/ 范围/ 内/ 最大/ 程度/ 降低/ HDFS/ 的/ 存储空间/ 代价/ ,/ 节约/ 存储/ 成本/ ,/ 这是/ HDFS/ 的/ 多/ 副本/ 镜像/ 复制/ 策略/ 无法比拟/ 的/ ./ 此外/ ,/ 与/ 其他/ 存储/ 优化/ 策略/ 不同/ ,/ 范/ 德蒙/ 码/ 的/ 编码/ 和/ 译码/ 操作/ 均/ 是/ 基于/ 范/ 德蒙/ 矩阵/ 进行/ 的/ ,/ 故/ 采用/ 范/ 德蒙/ 码对/ HDFS/ 文件系统/ 进行/ 优化/ 可以/ 避免/ 对/ HDFS/ 的/ 整体/ 结构/ 和/ 内部/ 的/ Block/ 分块/ 进行/ 重构/ ,/ 与/ HDFS/ 的/ 存储/ 模式/ 保持/ 最大/ 程度/ 的/ 相似性/ ./ 3.3/ VanHDFS/ 的/ 编译/ 码/ 策略/ VanHDFS/ 策略/ 中/ 使用/ 的/ 范/ 德蒙/ 码/ 本质/ 上/ 是/ 基于/ 数学/ 上范/ 德蒙/ 矩阵/ 转换/ 而来/ 的/ ,/ 故范/ 德蒙/ 码/ 本身/ 并/ 不会/ 完全/ 适用/ 于/ HDFS/ 的/ 存储/ ,/ 需要/ 进一步/ 有/ 针对性/ 的/ 改进/ ./ 在/ VanHDFS/ 编码/ 策略/ 中/ ,/ 范/ 德蒙/ 码/ 需要/ 生成/ 系统/ 码/ 矩阵/ 以/ 优化/ HDFS/ 的/ 读取/ 操作/ ;/ 而/ 在/ 译码/ 策略/ 中/ ,/ 根据/ HDFS/ 数据/ 的/ 存储/ 特点/ ,/ VanHDFS/ 采取/ 整行/ 译码/ 的/ 方式/ ,/ 确保/ HDFS/ 的/ 可靠性/ ./ 3.3/ ./ 1/ 编码/ 策略/ 单从/ 数学/ 角度/ 分析/ ,/ 设/ 本源/ 根/ α/ 的/ 幂级数/ 为/ w/ ,/ 本源/ 多项式/ 为/ P/ (/ 狓/ )/ =/ 1/ +/ 狓/ +/ 狓/ 2/ +/ 狓/ 3/ +/ …/ +/ 狓/ w/ ,/ 那么/ ,/ 这个/ 给定/ 的/ 伽/ 罗华域/ GF/ (/ 2w/ )/ 就/ 可以/ 由/ 多项式/ P/ (/ 狓/ )/ 的/ 解集/ α/ 来/ 生成/ :/ GF/ (/ 2w/ )/ =/ {/ 0/ ,/ 1/ ,/ α/ ,/ α/ 2/ ,/ …/ ,/ α/ 254/ ,/ …/ }/ ;/ 构造/ n/ ×/ k/ 阶的范/ 德蒙/ 矩阵/ 犅/ (/ 其中/ ,/ n/ >/ k/ )/ ,/ 设/ 犅/ n/ ×/ k/ 为/ 编码/ 生成/ 矩阵/ ,/ 则/ 由/ 矩阵/ 犅/ 中/ 任意/ k/ 行/ 组成/ 的/ 子/ 矩阵/ 犅/ / 都/ 满足/ 犅/ / ≠/ 0/ 的/ 特性/ ,/ 故子/ 矩阵/ 犅/ / 可逆/ ,/ 矩阵/ 犅/ 同时/ 满足/ 纠/ 删码/ 的/ 生成/ 矩阵/ 的/ 特性/ ./ 设/ 输入/ 数据/ 为/ D/ (/ d1/ 到/ dk/ )/ ,/ 则/ 范/ 德蒙/ 码/ 编码/ 后/ 的/ 输出/ 数据/ 为/ c1/ 到/ cn/ ,/ 那么/ ,/ 输入/ 数据/ 和/ 编码/ 后/ 输出/ 数据/ 之间/ 的/ 关系/ 如式/ (/ 1/ )/ 所示/ ./ 犅/ ×/ 犇/ =/ 构造/ 辅助/ 矩阵/ 狔/ ,/ 令/ 矩阵/ 狔/ =/ 犅/ 狓/ ,/ 且/ 其中/ 狓/ =/ (/ x0/ ,/ x1/ ,/ …/ ,/ xk/ -/ 1/ )/ T/ ./ 可以/ 发现/ 生成/ 矩阵/ 犅/ 属于/ 原始/ 范/ 德蒙/ 矩阵/ ,/ 符合/ 纠/ 删码/ 生成/ 矩阵/ 的/ 固有/ 特点/ ,/ 可以/ 直接/ 用来/ 进行/ 数据/ 的/ 编码/ 操作/ ./ 但是/ ,/ 考虑/ 到/ 对/ HDFS/ 文件系统/ 的/ 应用/ ,/ 如果/ 使用/ 该范/ 德蒙/ 生成/ 矩阵/ 对/ HDFS/ 中/ 的/ 原始数据/ 进行/ 编码/ ,/ 那么/ ,/ 编码/ 后/ 的/ 数据/ 矩阵/ 和/ 原始数据/ 矩阵/ 将会/ 完全/ 不同/ ,/ 即/ 数据/ 部分/ 不是/ 系统/ 码/ ,/ 得到/ 的/ 编码/ 矩阵/ 中将/ 无原/ 数据/ 块/ ./ 这/ 对于/ 通信/ 领域/ 中/ 数据传输/ 的/ 加密/ 有/ 很大/ 益处/ ,/ 但/ 在/ 实际/ 的/ HDFS/ 文件/ 操作/ 中/ ,/ 这样/ 的/ 编码/ 矩阵/ 会/ 导致用户/ 每次/ 从/ HDFS/ 节点/ 读取数据/ 都/ 要/ 进行/ 范/ 德蒙/ 码/ 译码/ 操作/ ,/ 大大增加/ 对于/ 数据/ 读写操作/ 的/ 计算/ 代价/ 和/ 文件系统/ 的/ 时间/ 开销/ ,/ 故/ 并/ 不适/ 用于/ HDFS/ 的/ 大规模/ 数据/ 集/ 操作/ ./ 因此/ ,/ 必须/ 对/ 矩阵/ 犅/ 进行/ 转化/ ,/ 使/ 编码/ 后/ 的/ 矩阵/ 生成/ 系统/ 码/ 矩阵/ ,/ 保证/ HDFS/ 的/ 存储/ 数据/ 中/ 存在/ 原始数据/ ./ 使用/ 高斯消/ 元法/ 对/ 矩阵/ 犅/ 的/ 前/ k/ 行和前/ k/ 列/ 进行/ 消元/ 运算/ ./ 转换/ 后/ 的/ 矩阵/ 犅/ 上半部/ 分为/ k/ 阶/ 的/ 单位矩阵/ 犐/ k/ ,/ 余下/ 部分/ 即为/ 消元/ 运算/ 后/ 的/ 冗余/ 校验码/ 生成/ 行/ ./ 在/ 矩阵/ 变换/ 的/ 过程/ 中/ ,/ 所有/ 的/ 运算/ 均/ 采用/ 标准/ 的/ 模/ 2/ 消元/ 方式/ ,/ 范/ 德蒙/ 码/ 的/ 生成/ 矩阵/ 犅/ 使用/ k/ 阶/ 单位矩阵/ 与/ (/ n/ -/ k/ )/ ×/ k/ 阶的范/ 德蒙/ 变形/ 矩阵/ 联合/ 构成/ ,/ 如式/ (/ 2/ )/ 所示/ ./ 犌/ =/ 犅/ =/ 设/ 矩阵/ 犇/ 为/ 原始/ 数据包/ 矩阵/ ,/ 使用/ 编码/ 矩阵/ 犌/ 和/ 原始数据/ 犇/ 进行/ 矩阵/ 乘法/ 运算/ ,/ 输出/ 矩阵/ 犈/ 上半/ 部分/ k/ ×/ m/ 包/ 数据/ 和/ 原始数据/ 犇/ 完全相同/ ,/ 即/ 犈/ k/ ×/ m/ 为/ 系统/ 码/ 矩阵/ ,/ 且/ 整个/ 矩阵/ 的/ 转换/ 过程/ 不会/ 破坏/ 纠/ 删码/ 生成/ 矩阵/ 的/ 特性/ ,/ 如式/ (/ 3/ )/ 所示/ ./ Page6/ 犈/ =/ 犌/ ×/ 犇/ =/ 熿/ 100/ …/ 0010/ …/ 0/ / / / 000/ …/ 1y1y2y3/ …/ yk/ / / / 燀/ yn/ -/ k1y/ 至此/ ,/ 采用/ 范/ 德蒙/ 码/ 生成/ 矩阵/ 犈/ 对/ HDFS/ 的/ 原始数据/ 进行/ 编码/ ,/ 实际操作/ 中/ 读取/ 的/ 数据/ 都/ 为/ 原始数据/ ,/ 省去/ 了/ 每次/ 读取/ 都/ 需要/ 进行/ 范/ 德蒙/ 码/ 译码/ 操作/ 的/ 步骤/ ,/ 符合/ 用户/ 对/ HDFS/ 的/ 实际/ 应用/ 需求/ ./ 3.3/ ./ 2/ 译码/ 策略/ 由/ 上文/ 可知/ ,/ VanHDFS/ 策略/ 编码/ 后/ 的/ 输出/ 矩阵/ 属于/ 系统/ 码/ 矩阵/ ,/ 当/ 系统/ 中/ 的/ 源/ 数据/ d1/ 到/ dk/ 或者/ 校验码/ 数据/ L1/ 到/ Ln/ -/ k/ 中/ 发生/ 数据/ 失效/ 问题/ 时/ ,/ 就/ 需要/ 对/ HDFS/ 进行/ 范/ 德蒙/ 码/ 的/ 译码/ 操作/ ./ 从/ 数学/ 的/ 角度/ 进行/ 分析/ ,/ 即/ 只要/ 将/ 读取/ 的/ 有效/ 数据/ 和/ 生成/ 矩阵/ 的/ 逆/ 矩阵/ 相乘/ 就/ 可以/ 恢复/ 丢失/ 的/ 数据/ ./ 根据/ HDFS/ 以/ Block/ 文件/ 块/ 方式/ 存储/ 数据/ 的/ 特点/ ,/ 在/ VanHDFS/ 策略/ 中/ ,/ 如果/ HDFS/ 数据/ 块/ 单行/ 的/ 错误/ 比特/ 数/ 大于/ 1/ 或者/ 等于/ 1/ ,/ 那么/ 就/ 对/ 整行/ 都/ 添加/ 错误/ 标识/ ,/ 这样/ 就/ 可以/ 确保/ 当/ 失效/ 块/ 所/ 占/ 的/ 行数/ 小于/ 或/ 等于/ HDFS/ 系统/ 编码/ 容错/ 度/ 设置/ 的/ 范围/ 时/ ,/ VanHDFS/ 策略/ 经过/ 一次/ 译码/ 操作/ 即可/ 对/ HDFS/ 系统/ 中/ 全部/ 的/ 失效/ 数据/ 块/ 进行/ 恢复/ ,/ 且/ 在/ 此/ 过程/ 中/ 无需/ 考虑/ 编码/ 输出/ 矩阵/ 中/ 的/ 各个/ 行列/ 的/ 数据/ 块/ 的/ 具体/ 失效/ 情况/ ./ 设/ 编码/ 后/ HDFS/ 的/ 输出/ 矩阵/ 中/ 第/ 3/ 行/ 与/ 第/ k/ 行/ 数据/ 块/ 同时/ 发生/ 错误/ ,/ 且/ k/ / n/ ,/ 则/ 从/ 冗余/ 校验码/ 矩阵/ 部分/ 中/ 选取/ 第/ 1/ 行/ 与/ 第/ 2/ 行/ 参与/ 恢复/ 运算/ (/ 设/ 第/ 1/ 行/ 与/ 第/ 2/ 行/ 冗余/ 校验码/ 正常/ )/ ,/ 同/ 原始数据/ 矩阵/ 一并/ 构造/ 辅助/ 矩阵/ 犇/ ./ 辅助/ 矩阵/ 形/ 可用/ 如式/ (/ 4/ )/ 所示/ 的/ 矩阵/ 表示/ ./ 构造/ 译码/ 还原/ 矩阵/ 犃/ ,/ 通过/ 对/ 单位矩阵/ 和/ 冗余/ 校验码/ 矩阵/ 组合/ 后/ 进行/ 消元/ 运算/ 可/ 得/ ,/ 矩阵/ 犃/ 可用/ 如式/ (/ 5/ )/ 所示/ 的/ 矩阵/ 表示/ ./ 对/ 译码/ 还原/ 矩阵/ 犃/ 求/ 逆/ ,/ 设其/ 逆/ 矩阵/ 为/ 犃/ -/ 1/ ./ 将/ 矩阵/ 犃/ -/ 1/ 与/ 矩阵/ 犇/ 作为/ 译码/ 恢复/ 操作/ 输入/ 参数/ ,/ 则/ 恢复/ 数据/ 的/ 表达式/ 可用/ 如式/ (/ 6/ )/ 所示/ 的/ 矩阵/ 运算/ 表示/ ./ 数据/ 矩阵/ 犇/ 为/ 译码/ 恢复/ 后/ 的/ 输出/ 矩阵/ ,/ 即/ HDFS/ 的/ 原始数据/ 矩阵/ ,/ 失效/ 数据恢复/ 完成/ ./ 4VanHDFS/ 动态/ 副本/ 分散/ 存储/ 策略/ 由/ VanHDFS/ 编译/ 码/ 过程/ 可知/ ,/ 对于/ HDFS/ 系统/ 中/ 的/ 数据/ 块/ 失效/ 情况/ ,/ VanHDFS/ 策略/ 通过/ 一次/ 译码/ 操作/ 即可/ 恢复/ 全部/ 的/ 失效/ 数据/ ,/ 且/ 无需/ 考虑/ HDFS/ 存储/ 中/ 实际/ 数据/ 块/ 的/ 具体/ 失效/ 情况/ ./ 由于/ 需要/ 进行/ 矩阵/ 运算/ ,/ 因此/ ,/ VanHDFS/ 更/ 适合/ 在/ 系统/ 环境/ 相对/ 较/ 稳定/ 、/ 处理/ 能力/ 较/ 好/ 的/ 硬件/ 集群/ 上/ 部署/ ,/ 实现/ 最优/ 的/ 存储/ 开销/ ./ 随着/ 硬件/ 设备/ 的/ 发展/ ,/ 硬件/ 环境/ 部署/ 的/ 成本/ 必然/ 会/ 不断/ 降低/ ,/ 设备/ 的/ 稳定性/ 和/ 处理/ 能力/ 也/ 会/ 随之/ 提高/ ,/ 故/ VanHDFS/ 策略/ 在/ 未来/ HDFS/ 的/ 发展/ 过程/ 中会/ 有/ 一个/ 很/ 好/ 的/ 前景/ ./ 但/ 在/ 目前/ 的/ 实际/ 情况/ 中/ ,/ 对于/ 执行/ 效率/ 不高/ 、/ 稳定性/ 差/ 的/ 廉价/ 硬件/ 设备/ 集群/ 环境/ 来说/ ,/ VanHDFS/ 策略/ 在/ 时间/ 开销/ 和/ 计算/ 内存/ 方面/ 的/ 压力/ 都/ 是/ 巨大/ 的/ ./ 同时/ ,/ 单纯/ 的/ VanHDFS/ 策略/ 没有/ 办法/ 应对/ 节点/ 或/ 整个/ 机架/ 完全/ 崩溃/ 的/ 状况/ ,/ 会/ 导致/ 数据/ 完全/ 丢失/ 的/ 状况/ 发生/ ,/ 不能/ 很/ 好/ 的/ 适用/ 于/ 实际/ 的/ 使用/ 环境/ ,/ 因此/ ,/ 本文/ 对/ VanHDFS/ 策略/ 进行/ 进一步/ 改进/ ,/ 提出/ VanHDFS/ 动态/ 副本/ 分散/ 存储/ 策略/ (/ D/ -/ VanHDFS/ )/ ./ 图/ 3/ 所示/ 的/ 为/ D/ -/ VanHDFS/ 策略/ 架构图/ ./ 如图所示/ ,/ 针对/ 上文/ 提出/ 的/ 实际/ 因素/ 考虑/ ,/ 在/ VanHDFS/ 的/ 基础/ 上/ ,/ D/ -/ VanHDFS/ 策略/ 进行/ 了/ 系统/ 的/ 、/ 完整/ 的/ 改进/ 设计/ ,/ 使/ 优化/ 策略/ 更/ 适用/ 于/ 实际/ 的/ 应用/ 操作/ ./ Page74/ ./ 1/ 分散式/ 动态/ 副本/ 策略/ 针对/ 单纯/ 的/ VanHDFS/ 没有/ 办法/ 应对/ 节点/ 或/ 整个/ 机架/ 完全/ 崩溃/ 的/ 状况/ ,/ D/ -/ VanHDFS/ 策略/ 中/ 引入/ 了/ 动态/ 副本/ 分散控制/ 的/ 思想/ ./ 由于/ 范/ 德蒙/ 码/ 策略/ 本身/ 是/ 基于/ 矩阵/ 进行/ 的/ ,/ 编码/ 和/ 译码/ 操作/ 都/ 需要/ 多个/ 辅助/ 矩阵/ 和/ 构造/ 矩阵/ 共同/ 参与/ 进行/ 恢复/ 计算/ ./ 因此/ ,/ 如果/ 对/ 全部/ 的/ 数据/ 块/ 进行/ 一次性/ 编译/ 码/ 操作/ ,/ 虽然/ 可以/ 保证/ 当/ 存在/ 多个/ 失效/ 数据/ 块/ 时/ ,/ 通过/ 一次/ 矩阵/ 译码/ 计算/ 就/ 能/ 将/ 所有/ 失效/ 的/ 数据/ 块/ 全部/ 恢复/ ,/ 但/ 编码/ 和/ 译码/ 操作/ 的/ 计算/ 代价/ 以及/ 对/ 硬件/ 设备/ 的/ 性能/ 、/ 可靠性/ 要求/ 都/ 会/ 大幅提高/ ./ 鉴于/ 目前/ HDFS/ 都/ 是/ 架设/ 在/ 大量/ 的/ 廉价/ 硬件/ 设备/ 环境/ 中/ 的/ ,/ 如果/ 需要/ 在/ 性能/ 和/ 稳定性/ 都/ 较/ 低/ 的/ 硬件平台/ 上/ 采用/ VanHDFS/ 策略/ ,/ 大量/ 的/ 矩阵/ 计算/ 会/ 增加/ 译码/ 操作/ 的/ 时间/ 开销/ 和/ 系统/ 的/ 整体/ 效率/ ./ 因此/ ,/ 基于/ 并行性/ 和/ 编译/ 码/ 时间/ 代价/ 的/ 考虑/ ,/ 需要/ 将/ 原/ 数据/ 块/ 进行/ Group/ 分组/ 操作/ ,/ 每个/ 数据/ 块/ 中要/ 添加/ 一个/ 分组/ 标志/ 位/ ,/ 用来/ 标记/ 该/ 数据/ 块/ 是/ 属于/ 哪个/ Group/ 分组/ ./ 图/ 4/ 为/ D/ -/ VanHDFS/ 分组/ 策略/ 的/ 示意图/ ./ 如图所示/ ,/ 由于/ 分组/ 大小/ 的/ 设置/ 均/ 为/ 统一/ 的/ 矩阵/ 形式/ ,/ 故/ 在/ 系统/ 容错/ 度/ 设置/ 一定/ 的/ 情况/ 下/ ,/ 每个/ Group/ 分组/ 都/ 具有/ 完全相同/ 的/ 性质/ ,/ 系统/ 的/ 译码/ 矩阵/ 就/ 只有/ 一个/ ,/ 可以/ 通用/ 于/ 文件系统/ 的/ 所有/ 数据/ 分组/ ,/ 降低/ 了/ 系统/ 设计/ 的/ 复杂度/ ,/ 提高/ 了/ 系统/ 的/ 灵活性/ 和/ 可操作性/ ./ 此外/ ,/ 在/ D/ -/ VanHDFS/ 策略/ 存储/ 过程/ 中/ ,/ 将/ 每个/ Group/ 分组/ 的/ 编码/ 后/ 矩阵/ 按照/ 纵列/ Column/ 进行/ 标记/ ,/ 即/ 所有/ 数据/ 块/ 被/ 分为/ 若干个/ Group/ 分组/ ,/ 每个/ Group/ 分组/ 又/ 由/ 若干个/ Column/ 数据/ 列/ 构成/ ./ Column/ 数据/ 列/ 包含/ 两/ 部分/ 内容/ :/ 数据/ 块/ 部分/ 和/ 校验码/ 部分/ ./ 当/ 编码/ 输出/ 数据/ 中/ 的/ 数据/ 块/ 或者/ 冗余/ 校验码/ 块/ 失效/ 时/ ,/ D/ -/ VanHDFS/ 的/ 译码/ 操作/ 将/ 不再/ 进行/ 矩阵/ 与/ 矩阵/ 之间/ 的/ 运算/ ,/ 转换/ 为/ 矩阵/ 行列/ 之间/ 的/ 计算/ ./ HDFS/ 的/ 多/ 副本/ 镜像/ 复制/ 策略/ 本质/ 上/ 是/ 通过/ 增加/ 副本/ 复制/ 的/ 数量/ 来/ 提高/ 可靠性/ 的/ ./ 通常/ 状况/ 下/ ,/ 系统/ 默认/ 的/ 三/ 副本/ 策略/ 就/ 可以/ 满足/ 数据/ 存储/ 及/ 读写操作/ 的/ 需求/ ./ 故/ 对于/ D/ -/ VanHDFS/ 策略/ ,/ 可/ 将/ 动态/ 副本/ 数目/ 设置/ 为/ N/ // 2/ (/ 其中/ N/ 为原/ HDFS/ 的/ 镜像/ 副本/ 数量/ )/ ,/ 在/ 要/ 保证/ 优秀/ 的/ 存储空间/ 开销/ 外/ ,/ 兼顾/ 整个/ HDFS/ 的/ 可靠性/ ./ 与此同时/ ,/ 加入/ 了/ 范/ 德蒙/ 码/ 编码/ 后/ 的/ Column/ 数据/ 列/ 的/ 副本/ 对于/ 机架/ 和/ 节点/ 的/ 崩溃/ 状况/ 有/ 了/ 很/ 好/ 的/ 控制/ ,/ 但/ 对于/ 单纯/ 的/ 节点/ 失效/ 状况/ 不能/ 很/ 好/ 的/ 应对/ ,/ 当/ 存储/ 某/ Column/ 列/ 数据/ 的/ 节点/ 完全/ 失效/ ,/ 该/ 动态/ 副本/ 策略/ 的/ 可靠性/ 上/ 就/ 会/ 低于/ HDFS/ 的/ 多/ 副本/ 镜像/ 复制/ 策略/ ./ 因此/ ,/ 还/ 需要/ 采用/ 分散/ 存储/ 策略/ ./ 在/ 同一/ 机架/ 上/ ,/ 当/ 容错/ 度/ 一定/ 时/ ,/ 需要/ 将/ 每个/ Column/ 数据/ 列中/ 包含/ 的/ 数据/ 块/ 部分/ 以/ 容错/ 度为/ 单位/ 进行/ 分散式/ 存储/ ,/ 各个/ 节点/ 中/ 只/ 保留/ 对应/ 容错/ 度/ 的/ 数据/ 块/ 信息/ ./ 图/ 5/ 所示/ 的/ 为/ 分散式/ 动态/ 副本/ 策略/ 示意图/ ./ 如图所示/ ,/ 此时/ 若/ 出现/ 节点/ 失效/ 的/ 情况/ ,/ 在/ 逻辑/ 上/ 只是/ 丢失/ 了/ D/ -/ VanHDFS/ 译码/ 容错/ 范围/ 内/ 的/ 部分/ 数据/ 块/ ,/ 可/ 通过/ 译码/ 操作/ 快速/ 恢复/ ,/ 不会/ 对/ 文件/ 产生/ 影响/ ./ Page84/ ./ 2/ 计算/ 过程/ 的/ 改进/ 通过/ 对/ VanHDFS/ 译码/ 操作过程/ 的/ 研究/ 发现/ ,/ 还原/ 矩阵/ 和/ 构造/ 矩阵/ 在/ 计算/ 的/ 过程/ 中/ ,/ 只有/ 部分/ 矩阵/ 参与/ 实际/ 的/ 运算/ 过程/ ,/ 并且/ 都/ 是/ 基于/ 行/ 或者/ 列来/ 计算/ 的/ ,/ 因此/ 在/ 进行/ 译码/ 操作/ 之前/ ,/ 就/ 必须/ 对/ 还原/ 矩阵/ 和/ 构造/ 矩阵/ 进行/ 变形/ ,/ 这/ 又/ 增加/ 了/ 计算/ 的/ 时间/ 代价/ ./ 基于/ 这/ 一点/ 考虑/ ,/ D/ -/ VanHDFS/ 策略/ 利用/ Column/ 分列/ 操作/ 进行/ 计算/ ,/ 将/ 数据/ 部分/ 和/ 校验码/ 部分/ 当成/ 统一/ 的/ 整体/ ,/ 这样/ 便/ 省去/ 了/ 建立/ 构造/ 矩阵/ 的/ 过程/ ,/ 对于/ 提高/ 运算/ 效率/ 有/ 重要/ 作用/ ./ 建立/ 辅助/ 矩阵/ 犌/ ,/ 则/ 矩阵/ 犌/ 和/ 原始数据/ 矩阵/ 犇/ 之/ 积/ 为/ 去掉/ 失效/ 数据/ 块/ 的/ Column/ 数据/ 列中/ 有效/ 数据/ 构成/ 的/ 矩阵/ 犛/ ,/ 即/ 犌/ ×/ 犇/ =/ 犛/ ./ 将/ 矩阵/ 犌/ 进行/ 求/ 逆运算/ ,/ 求/ 出/ 矩阵/ 犌/ 的/ 逆/ 矩阵/ 为/ 犌/ -/ 1/ ,/ 如图/ 6/ 所示/ ,/ 在/ 等式/ 两边/ 同时/ 左/ 乘以/ 矩阵/ 犌/ -/ 1/ ,/ 矩阵/ 运算/ 后/ 的/ 输出/ 结果/ 犇/ 即/ 为/ 原始数据/ Column/ 数据/ 列/ ./ 矩阵/ 犌/ -/ 1/ 和/ 矩阵/ 犌/ 之/ 积/ 为/ k/ ×/ k/ 阶/ 的/ 单位矩阵/ 犈/ ,/ 故/ 等式/ 左侧/ 即/ 为/ 原始数据/ ./ 这样/ ,/ 通过/ 余下/ 的/ 数据/ 矩阵/ 犛与/ 对应/ 矩阵/ 犌/ 的/ 系数/ 组成/ 的/ 矩阵/ 的/ 逆/ 做/ 矩阵/ 乘法/ 操作/ 就/ 可以/ 得到/ 源/ 数据/ 列/ ,/ 也/ 就/ 得到/ 了/ 原始数据/ ./ 译码/ 过程/ 描述/ 如下/ 所示/ :/ 1/ ./ 获取/ 失效/ 块/ 所在/ Column/ 数据/ 列/ 的/ 信息/ Failure/ -/ Column/ [/ m/ ]/ ,/ 包括/ 分组/ 号/ Groupno/ ,/ 队列/ 号/ Columnno/ 以及/ 失效/ 数据/ 块/ 号/ Blockno/ ;/ 其中/ ,/ 失效/ Block/ 分块/ 的/ 数量/ 为/ m/ ,/ 且/ m/ / parity/ _/ length/ ;/ 构造/ 辅助/ 矩阵/ AuxiliaryArray/ [/ k/ ]/ [/ n/ ]/ ,/ 其中/ 辅助/ 矩阵/ 的/ 行数/ 为/ k/ =/ n/ +/ parity/ _/ length/ -/ m/ ,/ 且/ k/ 对应/ 的/ 行为/ 失效/ Block/ 分块/ 所在/ Column/ 数据/ 列/ 的/ 有效/ 数据/ 行/ ;/ 2/ ./ 构造/ 译码/ 操作/ 的/ 辅助/ 数据/ 列/ Validcolumn/ [/ k/ ]/ ,/ 其中/ ,/ k/ =/ n/ +/ parity/ _/ length/ -/ m/ ./ 选取/ 的/ 数据/ 块/ 为/ 失效/ Block/ 分块/ 所在/ 的/ Column/ 数据/ 列/ 的/ 有效/ 数据/ 块/ ./ Validcolumn/ [/ k/ ]/ 为/ 译码/ 操作/ 的/ 输入/ 参数/ ;/ 3/ ./ 使用/ ErasuredCode/ 编码/ 生成器/ 构造/ 范/ 德蒙/ 码/ 的/ 译码/ 矩阵/ ./ 对/ 矩阵/ AuxiliaryArray/ [/ k/ ]/ [/ n/ ]/ 进行/ 逆运算/ 操作/ InverseOperation/ (/ AuxiliaryArray/ )/ ,/ 生成/ 范/ 德蒙/ 码/ 的/ 译码/ 矩阵/ DecodeArray/ [/ n/ ]/ [/ k/ ]/ ;/ 4/ ./ 使用/ ErasuredCode/ 编码/ 生成器/ 对/ 输入/ 的/ 数组/ 进行/ 编码/ 操作/ ,/ 输入/ 参数/ 为/ Encoder/ ./ encode/ (/ AuxiliaryArray/ ,/ ValidColumn/ )/ ,/ 输出/ 结果/ 为/ Column/ 数据/ 列/ 的/ 源/ 数据/ OutputColumn/ [/ n/ +/ parity/ _/ length/ ]/ ./ 4.3/ 计算/ 模式/ 的/ 改进/ 在/ D/ -/ VanHDFS/ 译码/ 过程/ 中/ ,/ 由于/ 将/ 分组/ 矩阵/ 进一步/ 划分/ 为/ 多个/ Column/ 数据/ 列/ ,/ 使/ 数据/ 的/ 计算/ 范围/ 进一步/ 减小/ ,/ 因此/ ,/ 每个/ Column/ 数据/ 列中/ 的/ 数据/ 块/ 失效/ 的/ 情况/ 也/ 变为/ 了/ 可控/ 状态/ ,/ 且/ 该/ 失效/ 情况/ 只/ 和/ 优化/ 策略/ 的/ 容错/ 度/ 设置/ 相关/ ;/ 而范/ 德蒙/ 码/ 编码/ 时/ 设置/ 的/ 容错/ 度/ 通常/ 都/ 是/ 一定/ 的/ ,/ 故/ 还原/ 矩阵/ 的/ 总/ 变形/ 矩阵/ 数/ 也/ 是/ 一定/ 的/ ,/ 总数/ 为/ CmColumn/ 数据/ 列中/ 数据/ 部分/ 和/ 冗余/ 校验码/ 部分/ 的/ 总和/ ,/ m/ 为/ 编码/ 容错/ 度/ ./ 所以/ ,/ 可以/ 将/ 所有/ 的/ 变形/ 还原/ 矩阵/ 都/ 提前/ 进行/ 计算/ ,/ 并存/ 统一/ 存储/ 到/ 计算/ 中间/ 过程/ 索引/ 表中/ ,/ 当/ 进行/ 范/ 德蒙/ 码/ 的/ 译码/ 操作/ 时/ ,/ 可以/ 直接/ 查询/ 索引/ 表/ ,/ 将/ 矩阵/ 作为/ 中间/ 结果/ 参与/ 运算/ ./ 在/ 此/ 过程/ 中/ ,/ 由于/ 各个/ 相关/ 的/ 参数/ 都/ 是/ 在/ 编码/ 过程/ 的/ 时候/ 就/ 提前/ 计算/ 好/ 的/ ,/ 且/ 中间/ 参数均/ 为/ 通用/ 形式/ ,/ 在/ 需要/ 进行/ 译码/ 操作/ 的/ 情况/ 下/ ,/ 将/ 原本/ 的/ 动态/ 还原/ 计算/ 模式/ 转化/ 成为/ 了/ 查表/ 计算/ 的/ 静态/ 计算/ 模式/ ,/ 一次/ 矩阵/ 运算/ 即刻/ 恢复/ 原始数据/ ./ 因此/ ,/ 在/ 商用/ 的/ 大量/ 廉价/ 硬件/ 集群/ 环境/ 下/ ,/ D/ -/ VanHDFS/ 策略/ 可以/ 极大/ 程度/ 的/ 弥补/ 廉价/ 硬件/ 设备/ 执行/ 效率/ 不高/ 、/ 计算能力/ 不足/ 的/ 缺陷/ ,/ 降低/ 运算/ 内存/ 的/ 压力/ ,/ 从而/ 提高/ 整个/ 分布式文件系统/ 的/ 存储/ 效率/ ./ 译码/ 过程/ 如下/ 所示/ :/ 1/ ./ 获取/ 失效/ 块/ 所在/ Column/ 数据/ 列/ 的/ 信息/ Failure/ -/ Column/ [/ m/ ]/ ,/ 包括/ 分组/ 号/ Groupno/ ,/ 队列/ 号/ Columnno/ 以及/ 失效/ 数据/ 块/ 号/ Blockno/ ;/ 其中/ ,/ 失效/ Block/ 分块/ 的/ 数量/ 为/ m/ ,/ 且/ m/ / parity/ _/ length/ ;/ 获取/ 计算/ 过程/ 中间/ 索引/ 表/ 的/ 数据/ AuxiliaryArray/ [/ n/ +/ parity/ _/ length/ -/ m/ ]/ [/ n/ ]/ ;/ Page92/ ./ 构造/ 译码/ 操作/ 的/ 辅助/ 数据/ 列/ Validcolumn/ [/ k/ ]/ ,/ 其中/ ,/ k/ =/ n/ +/ parity/ _/ length/ -/ m/ ./ 选取/ 的/ 数据/ 块/ 为/ 失效/ Block/ 分块/ 所在/ 的/ Column/ 数据/ 列/ 的/ 有效/ 数据/ 块/ ./ Validcolumn/ [/ k/ ]/ 为/ 译码/ 操作/ 的/ 输入/ 参数/ ;/ 3/ ./ 使用/ ErasuredCode/ 编码/ 生成器/ 对/ 输入/ 的/ 数组/ 进行/ 编码/ 操作/ ,/ 输入/ 参数/ 为/ Encoder/ ./ encode/ (/ AuxiliaryArray/ ,/ ValidColumn/ )/ ,/ 输出/ 结果/ 为/ Column/ 数据/ 列/ 的/ 源/ 数据/ OutputColumn/ [/ n/ +/ parity/ _/ length/ ]/ ./ 4.4/ 计算方法/ 的/ 改进/ 由/ 上文/ 叙述/ 可知/ ,/ 在/ VanHDFS/ 策略/ 的/ 编译/ 码/ 运算/ 过程/ 中/ ,/ 最/ 主要/ 的/ 计算/ 量/ 是/ 来自/ 范/ 德蒙/ 矩阵/ 和/ 构造/ 矩阵/ 之间/ 的/ 加法/ 与/ 乘法/ 运算/ ./ 因此/ ,/ 为了/ 降低/ 矩阵/ 运算/ 的/ 计算/ 复杂度/ ,/ 减少/ 内存/ 压力/ ,/ D/ -/ VanHDFS/ 策略/ 将/ 二进制/ 矩阵/ 与/ 伽/ 罗华域/ 上/ 的/ 元素/ 建立/ 一个/ 映射/ 关系/ ,/ 将/ 矩阵/ 运算/ 中/ 的/ 加法/ 运算/ 转换/ 成为/ 伽罗华域/ 上/ 的/ 逻辑/ “/ 与/ ”/ 运算/ ,/ 将/ 乘法/ 运算/ 转换/ 为/ 逻辑/ “/ 异或/ ”/ 运算/ ,/ 进而/ 大幅提高/ 范/ 德蒙/ 码/ 的/ 编译/ 码/ 效率/ ./ 图/ 7/ 二进制/ 矩阵/ 转换/ 过程/ 示意图/ 通过/ 矩阵/ 转换/ ,/ 很大/ 程度/ 上/ 简化/ 了/ GF/ (/ 2w/ )/ 域/ 中/ 的/ 乘法/ 运算/ ,/ 将/ 矩阵/ 运算/ 转换成/ 伽罗华/ 有限/ 域/ 上/ 的/ “/ AND/ ”/ 和/ “/ XOR/ ”/ 逻辑/ 与/ 运算/ ,/ 降低/ 了/ VanHDFS/ 策略/ 运算/ 复杂度/ 和/ 内存/ 的/ 运算/ 压力/ ./ 4.5/ 译码/ 触发/ 时机/ 选取/ 范/ 德蒙/ 码/ 编码/ 后/ 的/ Group/ 分组/ 被/ 分成/ 了/ 若干/ Column/ 数据/ 列/ ,/ 每个/ Column/ 数据/ 列/ 同样/ 都/ 由/ 原数/ 从/ 数学/ 上/ 有限/ 域/ 理论/ 的/ 角度/ 分析/ ,/ 若/ w/ 次/ 本源/ 多项式/ P/ (/ x/ )/ =/ a0/ +/ a1x/ +/ a2x2/ +/ …/ +/ awxw/ 的/ 系数/ 全部/ 取自/ 于/ 二进制/ 域/ GF/ (/ 2/ )/ 中/ ,/ 那么/ 伽罗华域/ 中/ 任意/ 一个/ GF/ (/ 2w/ )/ 域/ 上/ 的/ 元素/ 都/ 可以/ 映射/ 到/ GF/ (/ 2/ )/ 二进制/ 域/ ,/ 对应/ 的/ w/ ×/ w/ 阶/ 二元/ 矩阵/ 犠/ 可以/ 用式/ (/ 7/ )/ 所示/ 的/ 矩阵/ 表示/ ./ 矩阵/ 犠/ 称为/ 伽罗华域/ GF/ (/ 2w/ )/ 的/ 本源/ 二进制/ 镜像/ 矩阵/ ./ 通过/ 镜像/ 矩阵/ 犠/ 可以/ 将范/ 德蒙/ 码/ 矩阵/ 转换成/ 二进制/ 生成/ 矩阵/ ,/ 即将/ k/ (/ k/ +/ m/ )/ 的/ 生成/ 矩阵/ 转换/ 为/ (/ w/ ·/ k/ )/ (/ w/ (/ k/ +/ m/ )/ )/ 二进制/ 矩阵/ ./ 转换/ 过程/ 示意图/ 如图/ 7/ 所示/ ./ 据/ 部分/ 和/ 校验码/ 部分/ 构成/ ./ 在/ 实际/ 的/ 操作/ 中/ ,/ 用户/ 最/ 关心/ 的/ 是/ 原始数据/ 部分/ ,/ 因为/ 原/ 数据/ 部分/ 是/ 直接/ 需要/ 进行/ 操作/ 的/ 部分/ ,/ 所以/ ,/ 当原/ 数据/ 部分/ 中/ 的/ Block/ 数据/ 块/ 存在/ 信息/ 丢失/ 或者/ 数据/ 失效/ 时/ ,/ 必须/ 立刻/ 进行/ 数据恢复/ 操作/ ./ 校验码/ 部分/ 的/ 作用/ 是/ 当/ 数据/ 块/ 的/ 数据/ 损坏/ 或者/ 丢失/ 时/ ,/ 通过/ 范/ 德蒙/ 码/ 译码/ 操作/ 进行/ 数据恢复/ ,/ 因此/ ,/ 校验码/ 部分/ 本身/ 并/ 不是/ 我们/ 真正/ 需/ Page10/ 要/ 进行/ 读写操作/ 的/ 数据/ ,/ 故当/ 校验码/ 部分/ 的/ 数据/ 失效/ 时/ ,/ 可以/ 延迟/ 进行/ 恢复/ 操作/ ./ D/ -/ VanHDFS/ 策略/ 不同于/ VanHDFS/ 策略/ ,/ 当/ 一个/ Block/ 数据/ 块/ 文件/ 损坏/ 时/ ,/ D/ -/ VanHDFS/ 可以/ 采取/ 两种/ 恢复/ 方式/ ,/ 即/ 副本/ 复制/ 恢复/ 方式/ 和范/ 德蒙/ 码/ 译码/ 恢复/ 方式/ ./ 因此/ 需要/ 恰当/ 的/ 选择/ 两种/ 恢复/ 策略/ 进行/ 的/ 时机/ 来/ 提升/ 整个/ 系统/ 的/ 效率/ ./ 图/ 8/ 所示/ 的/ 为/ 系统/ 译码/ 时机/ 选取/ 的/ 整体/ 过程/ 流程图/ ./ 4.5/ ./ 1/ 校验码/ 部分/ 译码/ 时机/ 的/ 选取/ 校验码/ 部分/ 实质/ 上/ 是/ 恢复/ 操作/ 的/ 冗余/ 编码/ ,/ 与/ 实际/ 的/ 数据/ 操作/ 无关/ ,/ 因此/ ,/ 需要/ 优先/ 考虑/ 系统/ 效率/ 的/ 问题/ ./ 触发/ 规则/ :/ 在/ 机架/ m/ (/ 机架/ n/ )/ 中/ ,/ 当/ 节点/ x/ (/ 节点/ z/ )/ 上/ 的/ Group/ 分组/ 中/ 产生/ R/ 个/ 失效/ 校验码/ 块/ ,/ 先/ 检测/ 机架/ n/ (/ 机架/ m/ )/ 上/ 对应/ 的/ 节点/ z/ (/ 节点/ x/ )/ ,/ 若/ 对应/ 校验码/ 块/ 有效/ ,/ 则/ 直接/ 进行/ 副本/ 恢复/ 方式/ ;/ 若/ 对应/ 校验码/ 块/ 失效/ ,/ 则/ 触发器/ 只/ 记录/ 下/ 失效/ 的/ 校验码/ 块/ 的/ 信息/ ,/ 不/ 进行/ 任何/ 恢复/ 操作/ ./ 当/ 数据/ 块/ 部分/ 进行/ 译码/ 操作/ 时/ ,/ 通过/ 查询/ 之前/ 记录/ 的/ 校验码/ 块/ 失效/ 的/ 信息/ ,/ 以该/ 失效/ 记录/ 为/ 标志/ ,/ 对/ 存在/ 校验码/ 块/ 失效/ 的/ Column/ 数据/ 列/ 进行/ 范/ 德蒙/ 码/ 译码/ 恢复/ 操作/ ,/ 同样/ ,/ 对于/ 对应/ 的/ Column/ 数据/ 列/ ,/ 只/ 进行/ 数据/ 块/ 部分/ 的/ 副本/ 恢复/ 策略/ ,/ 校验码/ 块/ 不/ 进行/ 其他/ 操作/ ./ 4.5/ ./ 2/ 数据/ 块/ 部分/ 译码/ 时机/ 的/ 选取/ 数据/ 块/ 部分/ 的/ 数据/ 是/ 实际/ 使用/ 的/ 真实/ 数据/ ,/ 因此/ ,/ 必须/ 优先/ 考虑/ 数据/ 的/ 正确性/ ./ 触发/ 规则/ :/ 在/ 机架/ m/ (/ 机架/ n/ )/ 中/ ,/ 当/ 节点/ x/ (/ 节点/ z/ )/ 上/ 的/ Group/ 分组/ 中/ 产生/ R/ 个/ 失效/ 数据/ 块/ ,/ 先/ 检测/ 机架/ n/ (/ 机架/ m/ )/ 上/ 对应/ 的/ 节点/ z/ (/ 节点/ x/ )/ 上/ 的/ 数据/ 块/ 信息/ ,/ 若/ 对应/ 数据/ 块/ 有效/ ,/ 则/ 直接/ 进行/ 副本/ 恢复/ 方式/ ,/ 并/ 同时/ 恢复/ 失效/ 的/ 冗余/ 校验码/ 块/ ;/ 若/ 对应/ 数据/ 块/ 失效/ ,/ 则/ 触发器/ 记录/ 下该/ 数据/ 块/ 信息/ ,/ 并/ 查询/ 冗余/ 校验码/ 块/ 失效/ 记录/ ,/ 选取/ 其中/ 一个/ 存在/ 冗余/ 校验码/ 失效/ 记录/ 的/ Column/ 数据/ 列/ 进行/ 范/ 德蒙/ 码/ 译码/ 恢复/ 方式/ ,/ 之后/ 再/ 对/ 对应/ 的/ Column/ 数据/ 列/ 的/ 失效/ 数据/ 块/ 部分/ 进行/ 副本/ 复制/ 恢复/ 策略/ ./ 综上所述/ ,/ D/ -/ VanHDFS/ 策略/ 这种/ 数据/ 块/ // 校验码/ 块/ 分别/ 进行/ 触发/ 恢复/ 操作/ 的/ 方式/ ,/ 增加/ 了/ HDFS/ 的/ 灵活性/ ,/ 并且/ 在/ 极大/ 程度/ 上/ 减少/ 了/ 译码/ 操作/ 触发/ 的/ 频率/ ,/ 降低/ 了/ 文件系统/ 存储/ 时间/ 开销/ ,/ 提高/ 了/ 系统/ 整体/ 的/ 存储/ 效率/ ./ 5/ 范/ 德蒙/ 码/ 优化/ 策略/ 评测/ 与/ 分析/ 实验/ 平台/ 依托/ 搭载/ 了/ Hadoop/ 的/ 主机/ 构成/ 的/ 小型/ 集群/ 环境/ ,/ Hadoop/ 的/ 版本/ 为/ 0.20/ ./ 203/ ,/ 操作系统/ 为/ Ubuntu/ -/ 11.10/ ,/ JDK/ 版本/ 为/ 6u30/ -/ linux/ -/ i586/ ./ 5.1/ 存储/ 开销/ 表/ 1/ 所示/ 的/ 为/ 各/ 备份/ 策略/ 存储/ 开销/ 情况/ 的/ 数据/ 对比/ ,/ HDFS/ 采用/ 默认/ 的/ 3/ 副本/ 复制/ 策略/ ,/ Block/ 分块/ 的/ 大小/ 为/ 默认/ 的/ 64M/ ./ 数据/ 列/ 容错/ 度/ D/ -/ VanHDFSFECGEXORHDFS6464128128256256/ 由表/ 1/ 所示/ 的/ 存储空间/ 开销/ 比率/ 可知/ ,/ D/ -/ VanHDFS/ 策略/ 同/ 其他/ 优化/ 策略/ 的/ 存储/ 开销/ 情况/ 相近/ ,/ 与/ 原/ HDFS/ 系统/ 的/ 3/ 副本/ 策略/ 相比/ 可以/ 节约/ 30/ %/ ~/ 32/ %/ 的/ 存储空间/ 开销/ ./ 但/ 随着/ 数据量/ 的/ 持续/ 增大/ ,/ D/ -/ VanHDFS/ 策略/ 相比/ 其他/ 策略/ 存储/ 开销/ 的/ 节约/ 程度/ 会/ 逐渐/ 增高/ ,/ 优势/ 也/ 越来越/ 明显/ ,/ 这/ 符合/ HDFS/ 海量/ 数据/ 存储/ 的/ 特征/ ./ 5.2/ 可靠性/ 表/ 2/ 所示/ 的/ 为/ 各/ 备份/ 策略/ 的/ 数据/ 可靠性/ 对比/ ./ 其中/ ,/ D/ -/ VanHDFS/ 策略/ 的/ 动态/ 副本/ 数/ 设置/ 为/ 2/ ,/ 容错/ 度/ 设置/ 为/ 3/ ,/ HDFS/ 采用/ 默认/ 的/ 3/ 副本/ 复制/ 策略/ ,/ 表格/ 中/ “/ √/ ”/ 代表/ 可/ 正常/ 工作/ ,/ “/ ×/ ”/ 代表/ 有/ 概率/ 出现/ 失效/ 情况/ ./ Page11/ 失效/ 类型/ 失效/ 数目/ D/ -/ VanHDFSFECGEXORHDFS/ 机架/ 机架/ 节点/ 节点/ 节点/ 节点/ 数据/ 块/ 数据/ 块/ 数据/ 块/ 数据/ 块/ 数据/ 块/ 数据/ 块/ 数据/ 块/ 由表/ 2/ 所示/ 的/ 对比/ 数据/ 可知/ ,/ D/ -/ VanHDFS/ 策略/ 采用/ 的/ 是/ 译码/ 恢复/ 和/ 副本/ 恢复/ 的/ 双重/ 恢复/ 策略/ ,/ 大幅/ 降低/ 了/ 数据/ 失效/ 问题/ ,/ 与/ 原/ HDFS/ 策略/ 相比/ 数据/ 可靠性/ 提高/ 了/ 约/ 200/ %/ ,/ 在/ 各种/ 情况/ 下/ 的/ 可靠性/ 也/ 均/ 优于/ 其他/ 副本/ 备份/ 策略/ ./ 同时/ ,/ D/ -/ VanHDFS/ 策略/ 还/ 可以/ 在/ 保证/ 存储/ 开销/ 变动/ 极小/ 的/ 情况/ 下/ ,/ 通过/ 控制/ 冗余/ 校验/ 行/ 的/ 数目/ 来/ 动态/ 提升/ 可靠性/ ,/ 很大/ 程度/ 上/ 增加/ 了/ 文件系统/ 的/ 灵活性/ ./ 5.3/ 负载/ 均衡/ 能力/ D/ -/ VanHDFS/ 策略/ 可以/ 显著/ 改善/ HDFS/ 的/ 负载/ 均衡/ 能力/ ./ 图/ 9/ 所示/ 的/ 为/ 各/ 备份/ 策略/ 的/ 节点/ 资源/ 负载/ 均衡/ 能力/ 对比/ 图/ ./ 其中/ ,/ 横坐标/ 表示/ 的/ 为/ 在/ 系统/ 集群/ 中/ 选取/ 的/ 10/ 个/ Datanode/ 节点/ 组成/ 的/ 小型/ 集群/ 环境/ ,/ 纵坐标/ 表示/ 的/ 为/ 随机/ 读取/ 500/ 次/ 数据/ 的/ 节点/ 资源/ 负载/ 标准差/ 的/ 绝对值/ ./ D/ -/ VanHDFS/ 中/ 采用/ 了/ 分散式/ 动态/ 副本/ 的/ 策略/ ,/ 所有/ 的/ 文件/ 都/ 分散/ 的/ 存储/ 在/ 各个/ 节点/ 上/ ,/ 负载/ 被/ 平均分配/ 到/ 整个/ 集群/ 中/ ,/ 故/ 各个/ 节点/ 的/ 资源/ 利用率/ 浮动/ 范围/ 很小/ ,/ 负载/ 均衡/ ./ 如图/ 9/ 所示/ ,/ D/ -/ VanHDFS/ 策略/ 拥有/ 最佳/ 的/ 负载/ 均衡/ 能力/ ,/ 而/ 其他/ 备份/ 策略/ 的/ 系统资源/ 负载/ 波动/ 比较/ 大/ ,/ 即会/ 产生/ 某些/ 节点/ 负载/ 过重/ ,/ 而/ 另/ 一些/ 节点/ 却/ 几乎/ 没有/ 负载/ 的/ 问题/ ,/ 这/ 直接/ 影响/ 了/ 系统/ 运行/ 的/ 稳定性/ ./ 5.4/ 译码/ 恢复/ 效率/ D/ -/ VanHDFS/ 策略/ 的/ 译码/ 操作/ 中/ ,/ 计算/ 模式/ 变为/ 了/ 静态/ 计算/ ,/ 其/ 时间/ 复杂度/ 远/ 低于/ 矩阵/ 的/ 运算/ ./ 图/ 10/ 所示/ 的/ 为/ 实验/ 环境/ 下/ 各/ 备份/ 策略/ 进行/ 数据恢复/ 的/ 时间/ 对比/ ./ 其中/ ,/ D/ -/ VanHDFS/ 策略/ 的/ 动态/ 副本/ 数/ 设置/ 为/ 2/ ,/ 容错/ 度/ 设置/ 为/ 3/ ,/ HDFS/ 采用/ 默认/ 的/ 3/ 副本/ 复制/ 策略/ ./ 由图/ 10/ 所示/ 的/ 系统/ 译码/ 效率/ 对比/ 图/ 可知/ ,/ 与/ 原/ HDFS/ 存储/ 策略/ 相比/ ,/ D/ -/ VanHDFS/ 的/ 译码/ 恢复/ 效率/ 平均/ 提升/ 约/ 40/ %/ 左右/ ./ 随着/ 数据/ 规模/ 的/ 不断/ 增大/ ,/ 各/ 备份/ 策略/ 在/ 数据/ 的/ 恢复/ 时间/ 上/ 都/ 是/ 以/ 线性/ 递增/ 的/ ./ 其中/ ,/ XOR/ 码/ 优化/ 策略/ 的/ 数据恢复/ 效率/ 最高/ ,/ 但/ 在/ 数据量/ 达到/ 一定/ 程度/ 时/ ,/ 数据/ 概率/ 性/ 丢失/ 的/ 问题/ 就/ 会/ 愈发/ 明显/ ;/ 除此之外/ ,/ D/ -/ VanHDFS/ 在/ 数据/ 的/ 恢复/ 效率/ 上均/ 略高于/ 其他/ 优化/ 策略/ ,/ 在/ 降低/ 存储/ 开销/ 的/ 同时/ 也/ 保证/ 了/ 系统/ 的/ 存储/ 效率/ ./ 综上所述/ ,/ 本文/ 提出/ 的/ D/ -/ VanHDFS/ 策略/ 在/ 存储/ 开销/ 程度/ ,/ 数据/ 的/ 可靠性/ ,/ 系统资源/ 负载/ 均衡/ 能力/ 及/ 数据/ 的/ 恢复/ 效率/ 等/ 方面/ 的/ 综合/ 表现/ 均/ 优于/ 其他/ 备份/ 策略/ ./ 6/ 结论/ 伴随/ 着/ 大/ 数据/ 概念/ 逐渐/ 成为/ 研究/ 的/ 热点/ ,/ 各个领域/ 的/ 相关/ 技术/ 都/ 会/ 产生/ 很大/ 的/ 变革/ ./ HDFS/ 作为/ 新型/ 文件/ 存储系统/ ,/ 以其高/ 容错性/ 和/ 低成本/ 的/ 特点/ 广泛/ 受到/ 人们/ 的/ 关注/ 并/ 迅速/ 发展/ ./ 基于/ 范/ 德蒙/ 码/ 的/ HDFS/ 优化/ 存储/ 策略/ 改进/ 了/ HDFS/ 自身/ 存在/ 的/ 缺陷/ ,/ 通过/ 范/ 德蒙/ 码/ 编译/ 码/ 操作/ 很大/ 程度/ 上/ 降低/ 了/ 存储/ 的/ 空间/ 开销/ ,/ 节约/ 了/ HDFS/ 整体/ 的/ 存储/ 成本/ ,/ 配合/ 分组/ 分列/ 策略/ 和/ 有限/ 域/ 理论/ ,/ 改进/ 计算/ 方案/ ,/ 提高/ 存储/ 操作/ 的/ 灵活性/ ,/ 降低/ 矩阵/ 计算/ 的/ 时间/ 开销/ 和/ 计算/ 内存/ 的/ 压力/ ,/ 同时/ ,/ 引入/ 动态/ 副本/ 分散控制/ 的/ 思想/ ,/ 使/ 数据/ 的/ 可靠性/ 以及/ 负载/ 均衡/ 能力/ 有/ 了/ 显著/ 提升/ ,/ 为/ 未来/ HDFS/ 的/ 发展/ 提供/ 了/ 一条/ 有效途径/ ./ Page12/ 

