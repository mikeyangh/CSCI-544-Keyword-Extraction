Page1/ 海量/ 高维/ 向量/ 的/ 并行/ Top/ -/ 犽/ 连接/ 查询/ 马友忠/ 1/ )/ ,/ 2/ )/ 慈祥/ 1/ )/ 孟小峰/ 1/ )/ 1/ )/ (/ 中国人民大学/ 信息/ 学院/ 北京/ 100872/ )/ 2/ )/ (/ 洛阳/ 师范学院/ 信息技术/ 学院/ 河南/ 洛阳/ 471022/ )/ 摘要/ 在/ 很多/ 应用领域/ 中/ ,/ 向量/ 的/ Top/ -/ k/ 连接/ 查询/ 是/ 一种/ 很/ 重要/ 的/ 操作/ ,/ 给定/ 两个/ 向量/ 集合/ 犚/ 和/ 犛/ ,/ Top/ -/ k/ 连接/ 查询/ 要求/ 从/ 犚/ 和/ 犛中/ 返回/ 距离/ 最小/ 的/ 前/ k/ 个/ 向量/ 对/ ./ 由于/ 数据/ 的/ 海量/ 性/ 和/ 高维/ 特性/ ,/ 传统/ 的/ 集中式/ 算法/ 已经/ 无法/ 在/ 可/ 接受/ 的/ 时间/ 内/ 完成/ 连接/ 查询/ 任务/ ./ MapReduce/ 作为/ 一个/ 并行处理/ 框架/ ,/ 能够/ 有效/ 地/ 处理/ 大规模/ 数据/ ./ 由于/ 其高/ 可扩展性/ 、/ 高可用性/ 等/ 特点/ ,/ MapReduce/ 已经/ 成为/ 海量/ 数据处理/ 的/ 首选/ 实现/ 方案/ ,/ 在/ 很多/ 领域/ 都/ 得到/ 了/ 广泛/ 的/ 应用/ ./ 文中/ 基于/ 分段/ 累积/ 近似/ 法对/ 高维/ 向量/ 进行/ 降维/ ,/ 然后/ 利用/ 符号/ 累积/ 近似/ 法对/ 高维/ 向量/ 进行/ 分组/ ;/ 在/ 此基础/ 上/ ,/ 结合/ MapReduce/ 框架/ ,/ 提出/ 了/ 基于/ SAX/ 的/ 并行/ Top/ -/ k/ 连接/ 查询/ 算法/ ./ 实验/ 表明/ ,/ 文中/ 所提/ 方案/ 具有/ 良好/ 的/ 性能/ 和/ 扩展性/ ./ 关键词/ 高维/ 向量/ ;/ MapReduce/ 框架/ ;/ Top/ -/ k/ 连接/ 查询/ ;/ 大/ 数据/ 1/ 引言/ 在/ 很多/ 应用/ 中/ ,/ 为了/ 便于/ 数据分析/ ,/ 处理/ 对象/ 经/ Page2/ 要/ 的/ 操作/ ,/ 在/ 很多/ 任务/ 中/ 都/ 有/ 广泛应用/ ,/ 如聚类/ 、/ 副本/ 检测/ 、/ 去/ 重/ 等/ ./ 高维/ 向量/ 的/ 相似性/ 连接/ 查询/ 有/ 两大/ 挑战/ :/ 一是/ 数据/ 的/ 规模/ 在/ 不断扩大/ ,/ 传统/ 的/ 集中式/ 处理/ 方式/ 已/ 不再/ 适用/ ;/ 二是/ 向量/ 的/ 维度/ 比较/ 高/ ,/ 可以/ 达到/ 成千上万/ 维/ ,/ 由于/ 维度/ 灾难/ 的/ 存在/ ,/ 基于/ 索引/ 的/ 算法/ 已/ 无法/ 奏效/ ./ 相似性/ 连接/ 查询/ 需要/ 用户/ 事先/ 提供/ 一个/ 相似/ 度/ 阈值/ ,/ 然而/ 在/ 实际/ 应用/ 当中/ ,/ 用户/ 往往/ 很难/ 知道/ 准确/ 的/ 阈值/ ./ Top/ -/ k/ 连接/ 查询/ 无需/ 用户/ 提供/ 相似/ 度/ 阈值/ ,/ 直接/ 返回/ 最/ 相似/ 的/ (/ 距离/ 最小/ 的/ )/ 前/ k/ 个/ 向量/ 对/ ./ Top/ -/ k/ 连接/ 查询/ 在/ 空间/ 数据库/ 中/ 已经/ 进行/ 了/ 深入/ 的/ 研究/ [/ 1/ -/ 2/ ]/ ,/ 现有/ 的/ 算法/ 大都/ 是/ 基于/ 某种/ 高效/ 的/ 空间/ 索引/ (/ 如/ R/ 树/ )/ ,/ 只/ 适合/ 于/ 小规模/ 的/ 低维/ 数据/ ,/ 无法/ 处理/ 大规模/ 的/ 高维/ 数据/ ./ MapReduce/ [/ 3/ ]/ 是/ 谷歌/ 公司/ 提出/ 的/ 一个/ 并行处理/ 框架/ ,/ 由于/ 其高/ 可扩展性/ 、/ 容错性/ 和/ 高可用性/ ,/ 得到/ 了/ 学术界/ 和/ 企业界/ 的/ 广泛/ 关注/ ,/ 已经/ 成为/ 海量/ 数据处理/ 的/ 首选/ 方案/ ./ 本文/ 的/ 主要/ 工作/ 就是/ 基于/ MapRedcue/ 框架/ ,/ 设计/ 并/ 实现/ 了/ 海量/ 高维/ 向量/ 的/ 并行/ Top/ -/ k/ 连接/ 查询/ 算法/ ,/ 实验/ 结果表明/ ,/ 本文/ 所提/ 方案/ 具有/ 较/ 好/ 的/ 性能/ 和/ 扩展性/ ./ 本文/ 主要/ 贡献/ 如下/ :/ (/ 1/ )/ 提出/ 了/ 一种/ 基于/ 符号/ 累积/ 近似/ 法/ (/ SymbolicAggregateApproximationtechnique/ )/ 的/ 高维/ 向量/ 阈值/ 连接/ 方法/ ,/ 该/ 方法/ 具有/ 较/ 好/ 的/ 过滤/ 效果/ ;/ (/ 2/ )/ 提出/ 了/ 一种/ 基于/ 采样/ 的/ Top/ -/ k/ 阈值/ 估计/ 方法/ ,/ 并/ 基于/ 估计/ 的/ 阈值/ ,/ 提出/ 了/ 基于/ SAX/ 的/ Top/ -/ k/ 连接/ 查询/ 算法/ ;/ (/ 3/ )/ 针对/ 真实/ 数据/ 集/ 和/ 模拟/ 数据/ 集做/ 了/ 丰富/ 的/ 实验/ ,/ 对/ 基础/ 方案/ 和/ 本文/ 提出/ 的/ 方案/ 进行/ 了/ 对比/ ,/ 实验/ 结果表明/ ,/ 本文/ 所提/ 方案/ 具有/ 较/ 好/ 的/ 性能/ 和/ 扩展性/ ./ 本文/ 第/ 2/ 节对/ 相似性/ 连接/ 查询/ 相关/ 工作/ 进行/ 综述/ ;/ 第/ 3/ 节/ 给出/ Top/ -/ k/ 连接/ 查询/ 的/ 定义/ ,/ 并/ 介绍/ 相关/ 基础知识/ ;/ 第/ 4/ 节/ 给出/ 基于/ SAX/ 的/ 向量/ 阈值/ 连接/ 查询/ 算法/ ;/ 第/ 5/ 节/ 介绍/ 基于/ 阈值/ 的/ Top/ -/ k/ 连接/ 查询/ 算法/ ;/ 第/ 6/ 节/ 介绍/ 基于/ SAX/ 的/ Top/ -/ k/ 连接/ 查询/ 算法/ ;/ 第/ 7/ 节/ 进行/ 实验/ 分析/ ;/ 最后/ 对/ 本文/ 进行/ 总结/ ./ 2/ 相关/ 工作/ 相似性/ 连接/ 查询/ 是/ 一种/ 很/ 重要/ 的/ 操作/ ,/ 目前/ 已经/ 有/ 大量/ 的/ 研究/ 工作/ ./ 庞俊/ 等/ 人/ [/ 4/ ]/ 对/ 相似性/ 连接/ 查询/ 技术/ 进行/ 了/ 综述/ ,/ 按照/ 不同/ 的/ 分类/ 标准/ ,/ 相似性/ 连接/ 可以/ 分为/ 不同/ 的/ 类别/ ./ 按照/ 数据类型/ 来分/ ,/ 可以/ 分为/ 字符串/ 相似性/ 连接/ 、/ 集合/ 相似性/ 连接/ 、/ 向量/ 相似性/ 连接/ 等/ ;/ 按照/ 返回/ 结果/ 的/ 不同/ ,/ 可以/ 分为/ 所有/ 对/ 相似性/ 连接/ 、/ 阈值/ 相似性/ 连接/ 、/ Top/ -/ k/ 相似性/ 连接/ 和/ KNN/ 相似性/ 连接/ 等/ ./ EpsilonGridOrder/ [/ 5/ ]/ 、/ KDB/ -/ tree/ 、/ Quickjoin/ [/ 6/ ]/ 等/ 主要/ 研究/ 了/ 在/ 欧氏/ 空间/ 中/ ,/ 给定/ 距离/ 阈值/ 的/ 情况/ 下/ ,/ 如何/ 快速/ 地/ 计算/ 出/ 满足/ 距离/ 要求/ 的/ 所有/ 相似/ 对/ ./ 然而/ ,/ 在/ 很多/ 应用/ 中/ ,/ 无法/ 事先/ 知道/ 距离/ 阈值/ ,/ 此时/ ,/ 如何/ 快速/ 找到/ 距离/ 最近/ 的/ 前/ k/ 个/ 向量/ 对/ 就/ 具有/ 重要/ 的/ 意义/ ./ 文献/ [/ 7/ ]/ 充分利用/ R/ -/ tree/ 索引/ 结构/ 的/ 过滤/ 效果/ ,/ 从而/ 快速/ 找到/ 最近/ 的/ 前/ k/ 个/ 向量/ 对/ ./ 为了/ 降低/ 时间/ 复杂度/ ,/ 文献/ [/ 8/ -/ 9/ ]/ 在/ 空间/ 填充/ 曲线/ 技术/ 的/ 基础/ 上/ ,/ 针对/ 高维/ 向量/ 集合/ ,/ 提出/ 了/ 相应/ 的/ 近似算法/ ./ 上述/ 算法/ 大都/ 是/ 单机/ 环境/ 下/ 的/ 算法/ ,/ 针对/ 低维/ 、/ 小规模/ 数据/ 集/ ,/ 其/ 性能/ 还/ 可以/ 接受/ ./ 但是/ 其/ 时间/ 复杂度/ 随着/ 维度/ 的/ 增加/ 往往/ 呈现/ 指数/ 级/ 增长/ ,/ 无法/ 在/ 可/ 接受/ 的/ 时间/ 范围/ 内/ 处理/ 大规模/ 、/ 高维/ 数据/ 集合/ 的/ 相似性/ 连接/ 查询/ 问题/ ./ 大规模/ 数据/ 的/ 连接/ 操作/ 是/ 一个/ 计算/ 代价/ 很/ 高/ 的/ 操作/ ,/ 目前/ 有/ 一些/ 研究/ 工作/ 尝试/ 利用/ MapReduce/ 框架/ 来/ 解决/ 该/ 问题/ ,/ 主要/ 包括/ 集合/ 相似性/ 连接/ [/ 10/ -/ 14/ ]/ 、/ 向量/ 相似性/ 连接/ [/ 15/ -/ 16/ ]/ 、/ Top/ -/ k/ 连接/ [/ 17/ -/ 18/ ]/ 等/ ./ 从/ 采用/ 的/ 主要/ 技术/ 来分/ ,/ 海量/ 集合/ 相似性/ 连接/ 可以/ 分为/ 3/ 类/ ,/ 前缀/ 过滤/ [/ 10/ -/ 11/ ]/ 、/ Word/ -/ Count/ -/ Like/ [/ 12/ -/ 13/ ]/ 和/ 混合/ 方案/ [/ 14/ ]/ ./ Vernica/ 等/ 人/ [/ 10/ ]/ 提出/ 了/ 一种/ 基于/ 前缀/ 过滤/ 技术/ 的/ 海量/ 集合/ 数据/ 相似性/ 连接/ 方案/ ,/ 该/ 方案/ 主要/ 由/ 3/ 个/ 阶段/ 完成/ ,/ 每个/ 阶段/ 由/ 一个/ MapReduejob/ 负责/ 实现/ ./ 其/ 核心思想/ 是/ :/ 如果/ 两个/ 集合/ 的/ 前缀/ 没有/ 公共/ 元素/ ,/ 那么/ 这/ 两个/ 集合/ 肯定/ 不/ 可能/ 相似/ ./ 基于/ 该/ 规则/ ,/ 就/ 可以/ 大大减少/ 候选/ 集合/ 的/ 规模/ ./ 为了/ 进一步/ 减少/ 候选/ 集合/ 的/ 数量/ ,/ Rong/ 等/ 人/ [/ 11/ ]/ 提出/ 了/ 一种/ 基于/ 多/ 前缀/ 的/ 集合/ 相似性/ 连接/ 方案/ ./ 通过/ 多个/ 前缀/ 进行/ 过滤/ ,/ 可以/ 减少/ 伪正例/ 的/ 个数/ ,/ 从而/ 进一步/ 减少/ 候选/ 对/ 数量/ ./ 但是/ 基于/ 前缀/ 过滤/ 技术/ 的/ 方案/ 也/ 存在/ 一些/ 固有/ 的/ 不足之处/ ./ 一是/ 网络/ 传输/ 代价/ 较大/ :/ 每个/ 集合/ 都/ 要/ 复制/ 多次/ ,/ 复制/ 的/ 次数/ 等于/ 前缀/ 的/ 长度/ ,/ 因此/ 对于/ 较长/ 的/ 集合/ 来讲/ ,/ 数据/ 复制/ 率太高/ ,/ 会/ 导致/ 网络/ 传输/ 代价/ 比较/ 大/ ;/ 二是/ 重复/ 比较/ 次数/ 比较/ 多/ :/ 对于/ 任意/ 两个/ 集合/ ,/ 如果/ 它们/ 的/ 前缀/ 中有/ k/ 个/ 公共/ 元素/ ,/ 则/ 会/ 重复/ 比较/ k/ 次/ ./ 为了/ 解决/ 前缀/ 过滤/ 技术/ 存在/ 的/ 问题/ ,/ 文献/ [/ 12/ -/ 13/ ]/ 提出/ 了/ Word/ -/ Count/ -/ Like/ 的/ 解决方案/ ,/ 该/ 方案/ 充分利用/ 了/ MapReduce/ 框架/ 的/ 基本/ 特性/ ,/ 基本思路/ 类似/ 于/ Word/ -/ Count/ 程序/ 的/ 思路/ ./ 该/ 方案/ 的/ 优点/ 是/ 避免/ 了/ 重复/ 比较/ ,/ 任何/ 一个/ 集合/ 对/ 只/ Page3/ 需要/ 比较/ 一次/ ./ 但是/ 存在/ 一些/ 局限性/ :/ 任何/ 两个/ 集合/ 只要/ 包含/ 一个/ 公共/ 元素/ ,/ 都/ 需要/ 比较/ 一次/ ,/ 因此/ 候选/ 集合/ 的/ 数量/ 特别/ 大/ ./ 通过/ 对/ 上述/ 两种/ 方案/ 的/ 分析/ ,/ 文献/ [/ 14/ ]/ 提出/ 了/ 一种/ 混合/ 解决方案/ ,/ 将/ 前缀/ 过滤/ 技术/ 和/ Word/ -/ Count/ -/ Like/ 方案/ 进行/ 了/ 结合/ ,/ 从而/ 进一步提高/ 了/ 集合/ 相似性/ 连接/ 的/ 效率/ ./ 基于/ 集合/ 的/ 相似性/ 连接/ 技术/ 不能/ 直接/ 应用/ 于/ 欧氏/ 空间/ 下/ 的/ 相似性/ 连接/ 问题/ ./ MR/ -/ DSJ/ [/ 15/ ]/ 提出/ 了/ 一种/ 基于/ 网格/ 划分/ 的/ 大规模/ 向量/ 相似性/ 连接/ 方法/ ./ 该/ 方法/ 具有/ 很/ 好/ 的/ 并行/ 特性/ ,/ 很/ 容易/ 在/ MapReduce/ 框架/ 下/ 实现/ ./ 其/ 不足之处/ 是/ 该/ 方法/ 只/ 适合/ 于/ 维度/ 较/ 低/ 的/ 情况/ ,/ 一旦/ 维度/ 比较/ 高时/ ,/ 其/ 性能/ 急剧下降/ ./ 为了/ 解决/ 更高/ 维度/ 向量/ 的/ 相似性/ 连接/ 问题/ ,/ Fries/ 等/ 人/ [/ 16/ ]/ 在/ MR/ -/ DSJ/ 的/ 基础/ 上/ 提出/ 了/ 一种/ 新/ 的/ 基于/ MapReduce/ 的/ 连接/ 方案/ PHiDJ/ ,/ PHiDJ/ 方案/ 主要/ 通过/ 对/ 维度/ 分组/ 和/ 变长/ 的/ 网格/ 划分/ 来/ 提高/ 连接/ 速度/ ./ Lu/ 等/ 人/ [/ 17/ ]/ 提出/ 了/ 一种/ 基于/ 泰森/ 多边形/ 的/ KNN/ 连接/ 解决方案/ ./ 其/ 基本/ 思想/ 是/ :/ 给定/ 两个/ 向量/ 集合/ 犚/ 、/ 犛/ ,/ 首先/ 基于/ 泰森/ 多边形/ 将/ 集合/ 犚/ 划分/ 成/ k/ 个/ 子集/ ,/ 犚/ 1/ ,/ 犚/ 2/ ,/ …/ ,/ 犚/ k/ ,/ 然后/ 按照/ 一定/ 的/ 规则/ ,/ 将/ 集合/ 犛也/ 划分/ 成/ k/ 个/ 子集/ ,/ 犛/ 1/ ,/ 犛/ 2/ ,/ …/ ,/ 犛/ k/ ./ 但是/ 对/ 犛的/ 划分/ 要/ 满足/ 一个/ 要求/ :/ / r/ ∈/ R1/ ,/ KNN/ (/ r/ ,/ 犛/ )/ / 犛/ 1/ ./ 在/ 这种/ 情况/ 下/ ,/ 集合/ 犚/ 中/ 的/ 每/ 一个/ 子集/ 只/ 需要/ 与/ 对应/ 的/ 犛的/ 子集/ 进行/ 比较/ 就/ 可以/ 了/ ,/ 从而/ 节省/ 大量/ 的/ 网络/ 传输/ 代价/ 和/ 计算/ 代价/ ./ Zhang/ 等/ 人/ [/ 18/ ]/ 基于/ 线性化/ 技术/ ,/ 在/ MapReduce/ 框架/ 下/ 提出/ 了/ 一种/ 近似/ 的/ KNN/ 连接/ 查询/ 方案/ ./ Liu/ 等/ 人/ [/ 19/ ]/ 针对/ 海量/ 空间数据/ 提出/ 了/ 一种/ 新颖/ 的/ 、/ 基于/ MapReduce/ 框架/ 的/ 并行/ Top/ -/ k/ 连接/ 查询/ 方案/ ,/ 该/ 工作/ 分别/ 在/ 空间/ 连接/ 阶段/ 和/ Top/ -/ k/ 结果/ 获取/ 阶段/ 进行/ 了/ 优化/ ./ 雷斌/ 等/ 人/ [/ 20/ ]/ 提出/ 了/ 一种/ 大规模/ 概率/ 数据/ 上/ 基于/ EMD/ 距离/ 的/ 并行/ Top/ -/ k/ 相似性/ 连接/ 算法/ ./ 文献/ [/ 21/ ]/ 在/ MapReduce/ 框架/ 下/ ,/ 针对/ 直方图/ 概率/ 数据/ 提出/ 了/ 一种/ 基于/ EMD/ 距离/ 的/ 阈值/ 相似性/ 连接/ 方案/ ./ 文献/ [/ 22/ ]/ 是/ 最早/ 尝试/ 在/ MapReduce/ 框架/ 下/ 解决/ 海量/ 向量/ Top/ -/ k/ 连接/ 查询/ 问题/ 的/ 研究/ 工作/ ,/ 首先/ 提出/ 了/ 两种/ 串行化/ 算法/ :/ divide/ -/ and/ -/ conquer/ 和/ branch/ -/ and/ -/ bound/ ;/ 然后/ 又/ 提出/ 了/ 两种/ 基于/ MapReduce/ 框架/ 的/ 并行/ 化/ 算法/ ,/ 分别/ 是/ 所有/ 对/ 划分算法/ (/ TopK/ -/ P/ -/ MR/ :/ AllpairPartitioningAlgorithm/ )/ 和/ 关键/ 对/ 划分算法/ (/ TopK/ -/ F/ -/ MR/ :/ EssentialPairPartitioningAlgorithm/ )/ ./ 但是/ ,/ 文献/ [/ 22/ ]/ 中/ 的/ 算法/ 一般/ 比较/ 适合/ 于/ 中/ 低/ 维度/ 的/ 向量/ ,/ 无法/ 高效/ 处理/ 超高/ 维度/ 向量/ 的/ Top/ -/ k/ 连接/ 查询/ 问题/ ./ 3/ 问题/ 定义/ 与/ 基础知识/ 3.1/ 问题/ 定义/ 定义/ 1/ ./ 向量/ 阈值/ 连接/ 查询/ ./ 给定/ 两个/ 向量/ 集合/ 犚/ 和/ 犛/ ,/ 距离/ 函数/ dist/ ,/ 距离/ 阈值/ ε/ ,/ 集合/ 犚/ 和/ 犛的/ 连接/ 查询/ 犚/ / / 犛的/ 结果/ 就是/ 返回/ 所有/ 距离/ 小于/ ε/ 的/ 向量/ 对/ ,/ 即/ 犚/ / / 犛/ =/ {/ 〈/ 狉/ ,/ 狊/ 〉/ |/ 狉/ ∈/ 犚/ ,/ 狊/ ∈/ 犛/ ,/ dist/ (/ 狉/ ,/ 狊/ )/ / ε/ }/ ./ 其中/ 犚/ =/ {/ 狉/ 1/ ,/ 狉/ 2/ ,/ …/ ,/ 狉/ |/ 犚/ |/ }/ ,/ 犛/ =/ {/ 狊/ 1/ ,/ 狊/ 2/ ,/ …/ ,/ 狊/ |/ 犛/ |/ }/ ,/ 狉/ i/ (/ 狊/ j/ )/ 是/ d/ 维/ 向量/ :/ 狉/ i/ =/ 〈/ ri1/ ,/ ri2/ ,/ …/ ,/ rid/ 〉/ ,/ 距离/ 函数/ dist/ 采用/ 欧几里得/ 距离/ ./ 定义/ 2/ ./ Top/ -/ k/ 向量/ 连接/ 查询/ ./ 给定/ 两个/ 向量/ 集合/ 犚/ 和/ 犛/ ,/ 距离/ 函数/ dist/ ,/ 集合/ 犚/ 和/ 犛的/ Top/ -/ k/ 连接/ 查询/ 的/ 结果/ 就是/ 返回/ 距离/ 最小/ 的/ 前/ k/ 个/ 向量/ 对/ ./ 即/ Top/ _/ k/ (/ 犚/ / / 犛/ )/ =/ {/ 〈/ ri1/ ,/ sj1/ 〉/ ,/ …/ ,/ 〈/ rik/ ,/ sjk/ 〉/ }/ ,/ 并/ 满足/ 如下/ 要求/ :/ (/ 1/ )/ rik/ ∈/ 犚/ ,/ sjk/ ∈/ 犛/ ;/ (/ 2/ )/ dist/ (/ ri1/ ,/ sj1/ )/ / dist/ (/ ri2/ ,/ sj2/ )/ / …/ / dist/ (/ rik/ ,/ sjk/ )/ ;/ (/ 3/ )/ 对于/ 任意/ 一对/ 〈/ rim/ ,/ sjm/ 〉/ ,/ 如果/ 〈/ rim/ ,/ sjm/ 〉/ / Top/ _/ k/ (/ 犚/ / / 犛/ )/ ,/ 则/ dist/ (/ rik/ ,/ sjk/ )/ / dist/ (/ rim/ ,/ sjm/ )/ ./ 3.2/ 分段/ 累积/ 近似/ 法/ 分段/ 累积/ 近似/ 法/ (/ PiecewiseAggregateApproxi/ -/ mation/ ,/ PAA/ )/ 是/ 由/ Keogh/ 等/ 人/ [/ 23/ ]/ 最先/ 提/ 的/ 一种/ 有效/ 的/ 时间/ 序列/ 降维/ 方法/ ,/ 后来/ 被/ 广泛应用/ 于/ 时间/ 序列/ 相似性/ 查询/ 、/ 模式/ 发现/ 、/ 相似/ 轨迹/ 查询/ 等/ 多个/ 领域/ ./ PAA/ 的/ 核心思想/ 是/ :/ 将/ 原有/ 的/ 时间/ 序列/ 从/ 高/ 维空间/ (/ n/ 维/ )/ 降到/ 低/ 维空间/ (/ m/ 维/ )/ ,/ m/ / n/ ,/ 通过/ 在/ 低/ 维空间/ 的/ 距离/ 计算/ 来/ 实现/ 高维/ 空间数据/ 的/ 过滤/ ,/ 从而/ 提高/ 计算/ 效率/ ./ 具体/ 如下/ :/ 给定/ 一个/ 长度/ 为/ n/ 的/ 时间/ 序列/ T/ =/ 〈/ t1/ ,/ t2/ ,/ …/ ,/ tn/ 〉/ ,/ 把/ T/ 划分/ 成/ m/ 个/ 等/ 宽/ 的/ 块/ ,/ 得到/ 长度/ 为/ m/ 的/ 序列/ T/ -/ =/ 〈/ t/ -/ 列中/ 第/ i/ 块/ 内/ 所有/ 元素/ 的/ 平均值/ ,/ 即/ 1/ ,/ t/ -/ 给定/ 两个/ 时间/ 序列/ T/ 和/ Q/ ,/ 它们/ 的/ 欧几里得/ 距离/ 是/ 降维/ 之后/ 的/ T/ -/ 和/ Q/ -/ 距离/ 是/ 其中/ D/ (/ T/ -/ ,/ Q/ -/ )/ 是/ D/ (/ T/ ,/ Q/ )/ 的/ 下界/ ,/ 即/ D/ (/ T/ -/ ,/ Q/ -/ )/ / Page4D/ (/ T/ ,/ Q/ )/ ,/ 在/ 文献/ [/ 19/ ]/ 中/ 已经/ 得到/ 证明/ ./ 3.3/ 符号/ 累积/ 近似/ 法在/ PAA/ 的/ 基础/ 上/ ,/ 文献/ [/ 24/ ]/ 中/ 提出/ 了/ 一种/ 符号化/ 方法/ :/ 符号/ 累积/ 近似/ 法/ (/ SymbolicAggregateApproximation/ ,/ SAX/ )/ ./ 通过/ 将/ PAA/ 中/ 的/ 每/ 一个/ 值/ 与/ 某个/ 符号/ 集合/ 中/ 一个/ 符号/ 相对/ 应/ ,/ 最终/ 可以/ 将/ PAA/ 用/ 一个/ 字符串/ 来/ 表示/ ./ 文献/ [/ 24/ ]/ 中/ 证明/ SAX/ 的/ 距离/ 也/ 是/ 原始/ 时间/ 序列/ 欧氏/ 距离/ 的/ 下界/ ,/ 即/ D/ (/ T/ -/ ,/ Q/ -/ )/ / D/ (/ T/ ,/ Q/ )/ ./ 其中/ d/ (/ t/ ~/ 一个/ 查找/ 表/ 直接/ 获得/ ,/ 查找/ 表/ 一般/ 比较/ 小/ ,/ 可以/ 直接/ 放在/ 内存/ 中/ ./ 关于/ SAX/ 的/ 详细信息/ 可以/ 参考文献/ [/ 24/ ]/ ./ 图/ 1/ 展示/ 了/ 一个/ 原始/ 向量/ 到/ PAA/ 和/ SAX/ 的/ 转换/ 示意图/ :/ 犞/ 是/ 一个/ 长度/ 为/ 20/ 维/ 的/ 向量/ ,/ 每/ 4/ 维/ 分成/ 一段/ ,/ 可以/ 转换成/ 一个/ 5/ 维/ 的/ 向量/ PAA/ (/ 图/ 1/ (/ a/ )/ )/ ;/ 图/ 2/ 基于/ SAX/ 的/ 向量/ 阈值/ 连接/ 查询/ 框架/ 然后/ 通过/ 符号化/ 的/ 方法/ ,/ 可以/ 将/ PAA/ 再/ 转换成/ 一个/ 长度/ 为/ 5/ 的/ 字符串/ :/ SAX/ (/ 犞/ ,/ 4/ ,/ 4/ )/ =/ a1a2a3a4a3/ (/ 图/ 1/ (/ b/ )/ )/ ./ 4/ 基于/ SAX/ 的/ 向量/ 阈值/ 连接/ 查询/ 已有/ 的/ 向量/ 阈值/ 连接/ 查询/ 工作/ 中/ ,/ 为了/ 提高效率/ ,/ 大都/ 采用/ 了/ 某种/ 索引/ 结构/ ,/ 如/ KD/ -/ 树/ 、/ R/ -/ 树/ 等/ ./ 这些/ 方案/ 大都/ 是/ 单机/ 环境/ 下/ 的/ 算法/ ,/ 无法/ 有效/ 地/ 处理/ 海量/ 数据/ ;/ 并且/ 这些/ 方案/ 只/ 适合/ 于/ 低维/ 向量/ ,/ 一旦/ 维度/ 较/ 高时/ ,/ 会/ 出现/ 维度/ 灾难/ ,/ 其/ 性能/ 会/ 急剧下降/ ,/ 接近/ 于/ 穷举/ 比较/ 的/ 代价/ ./ 为了/ 解决/ 高维/ 向量/ 的/ 阈值/ 连接/ 查询/ 问题/ ,/ 基于/ PAA/ 技术/ ,/ Luo/ 等/ 人/ [/ 25/ ]/ 提出/ 了/ 一种/ 新/ 的/ 维度/ 聚集/ 近似/ (/ DimensionAggregateApproximation/ ,/ DAA/ )/ 方法/ ./ 通过/ 降维/ ,/ 把/ 原有/ 的/ 高维/ 向量/ 用/ DAA/ 来/ 表示/ ,/ 在/ DAA/ 的/ 基础/ 上/ ,/ 结合/ MapReduce/ 框架/ 提出/ 了/ 两种/ 并行/ 化/ 方法/ :/ 一/ 阶段/ 过滤/ -/ 验证/ 算法/ 和/ 两/ 阶段/ 过滤/ -/ 验证/ 算法/ ,/ 从而/ 大大提高/ 了/ 阈值/ 连接/ 查询/ 的/ 效率/ ./ 虽然/ 通过/ DAA/ 技术/ 可以/ 以较/ 低/ 的/ 代价/ 对/ 原有/ 高维/ 向量/ 进行/ 过滤/ ,/ 但是/ 该/ 方案/ 仍然/ 没有/ 减少/ 比较/ 的/ 次数/ ,/ 每/ 一对/ 向量/ 至少/ 需要/ 比较/ 一次/ ,/ 比较/ 的/ 总/ 次数/ 仍然/ 等于/ 两个/ 集合/ 中/ 向量/ 数量/ 的/ 乘积/ ,/ 计算/ 的/ 代价/ 仍然/ 比较/ 大/ ./ 实际上/ ,/ 有/ 很多/ 向量/ 根本/ 不/ 需要/ 进行/ 比较/ ./ 为了/ 进一步/ 减少/ 比较/ 的/ 次数/ ,/ 本文/ 在/ DAA/ 的/ 基础/ 上/ ,/ 结合/ 符号/ 累积/ 近似/ 法/ ,/ 提出/ 了/ 一种/ 基于/ SAX/ 的/ 阈值/ 连接/ 查询方法/ ./ 其/ 基本/ 框架/ 如图/ 2/ 所示/ ,/ 主要/ 包括/ 4/ 个/ 阶段/ :/ 数据/ 划分/ 、/ 利用/ 进行/ 分组/ 、/ 计算/ SAX/ 相似/ 对/ 、/ 结果/ 验证/ ./ 详细/ 执行/ 过程/ 如/ 算法/ 1/ 所示/ ./ Page5/ 算法/ 1/ ./ 基于/ SAX/ 的/ 相似性/ 连接/ ./ 输入/ :/ ε/ ,/ n/ ,/ paaSize/ // // 距离/ 阈值/ ,/ 块/ 编号/ ,/ PAA/ 大小/ 输出/ :/ 相似/ 向量/ 对/ 和/ 距离/ 1/ ./ map/ (/ k1/ ,/ v1/ )/ 2/ ./ paav1/ ←/ getPaa/ (/ v1/ )/ ;/ saxv1/ ←/ getSax/ (/ v1/ )/ ;/ 3/ ./ StringnewVal/ ←/ paav1/ +/ “/ ,/ ”/ +/ saxv1/ +/ “/ ,/ ”/ +/ 4/ ./ ReplicatenewValntimes/ ;/ // // n/ :/ thenumberof5/ ./ reduce/ (/ k2/ ,/ v2/ )/ 6/ ./ LinkedListsaxList1/ ,/ saxList2/ ,/ saxVecMap1/ ,/ 7/ ./ saxList1/ ,/ saxList2/ ←/ getUniqueSax/ (/ v2/ )/ ;/ 8/ ./ saxVecMap1/ ,/ saxVecMap2/ ←/ 9/ ./ canSaxPairs/ ←/ getSaxPairs/ (/ ε/ ,/ saxList1/ ,/ saxList2/ )/ ;/ 10/ ./ ForeachsaxPair/ :/ canSaxPairsdo11/ ./ finalVecPairs/ ←/ refineVecPairs/ (/ saxPair/ ,/ 12/ ./ ForeachvecPair/ :/ finalVecPairsdo13/ ./ Output/ (/ vecPair/ ./ vectors/ ,/ vecPair/ ./ dist/ )/ ;/ (/ 1/ )/ 数据/ 划分/ 由于/ 算法/ 采取/ 的/ 是/ 嵌套循环/ 连接/ 方法/ ,/ 所以/ 在/ Map/ 阶段/ ,/ 整个/ 数据/ 集合/ 被/ 近似/ 均匀/ 地/ 划分/ 成/ 若干个/ 块/ ,/ 然后/ 对/ 任意/ 两个/ 块/ 进行/ 比较/ ./ 假设/ 共/ 分成/ n/ 个块/ ,/ 则/ 共有/ (/ n/ ×/ (/ n/ +/ 1/ )/ )/ // 2/ 个块/ 对/ 需要/ 进行/ 比较/ ,/ 每/ 一对/ 由/ 一个/ reducetask/ 负责/ ./ 同时/ 对/ 每/ 一个/ 向量/ 狏/ ,/ 需要/ 计算/ 出/ 向量/ 的/ PAA/ 、/ SAX/ 值/ ,/ 然后/ 把/ PAA/ 、/ SAX/ 信息/ 和/ 原始/ 向量/ 信息/ 组合/ 在/ 一起/ ,/ 复制/ n/ 份/ ./ PAA/ 、/ SAX/ 的/ 信息/ 在/ reducetask/ 中/ 进行/ 比较/ 时会/ 用到/ (/ 第/ 1/ ~/ 4/ 行/ )/ ./ (/ 2/ )/ 利用/ SAX/ 进行/ 分组/ 根据/ PAA/ 和/ SAX/ 的/ 定义/ 我们/ 可以/ 发现/ ,/ 不同/ 的/ 向量/ 经过/ 转换/ 之后/ 可能/ 具有/ 相同/ 的/ SAX/ 字符串/ ,/ 因此/ 可以/ 利用/ SAX/ 对/ 原始/ 向量/ 进行/ 分组/ ./ 在/ 每/ 一个/ reducetask/ 中/ ,/ 对/ 分配/ 到/ 该/ task/ 上/ 的/ 所有/ 向量/ ,/ 首先/ 统计/ 出/ 所有/ 不同/ 的/ SAX/ (/ 第/ 7/ 行/ )/ ,/ 然后/ 再/ 基于/ SAX/ 对/ 向量/ 进行/ 分组/ ,/ 即/ 记录/ 下/ 每/ 一个/ SAX/ 所/ 包含/ 的/ 向量/ 集合/ (/ 第/ 8/ 行/ )/ ./ (/ 3/ )/ 计算/ SAX/ 相似/ 对/ 在/ 每/ 一个/ reducetask/ 中/ ,/ 针对/ 分配/ 到/ 其/ 上面/ 的/ 所有/ SAX/ ,/ 利用/ 嵌套循环/ 连接/ 的/ 方法/ ,/ 计算/ 出/ 任意/ 两个/ SAX/ 之间/ 的/ 距离/ ,/ 如果/ 两个/ SAX/ 之间/ 的/ 距离/ 大于/ 阈值/ ε/ ,/ 则/ 对应/ 的/ 原始/ 向量/ 之间/ 的/ 距离/ 肯定/ 大于/ ε/ ,/ 该/ SAX/ 对/ 可以/ 过滤/ 掉/ ,/ 其所/ 对应/ 的/ 所有/ 原始/ 向量/ 都/ 不/ 需要/ 再/ 进行/ 比较/ (/ 第/ 9/ 行/ )/ ./ 因为/ 不同/ 的/ 向量/ 可能/ 具有/ 相同/ 的/ SAX/ ,/ 所以/ SAX/ 的/ 数量/ 一般/ 会远/ 小于/ 原始/ 向量/ 的/ 个数/ ,/ 因此/ ,/ 即使/ 使用/ 嵌套循环/ 连接/ 方法/ 来/ 计算/ 相似/ 的/ SAX/ 对/ ,/ 其/ 比较/ 次数/ 也/ 将/ 远/ 少于/ 原有/ 的/ 向量/ 比较/ 次数/ ,/ 因此/ 可以/ 大大提高/ 计算/ 效率/ ./ (/ 4/ )/ 结果/ 验证/ 计算/ 出/ 相似/ 的/ SAX/ 候选/ 对/ 以后/ ,/ 需要/ 对/ 其/ 对应/ 的/ 原始/ 向量/ 进行/ 进一步/ 验证/ ,/ 计算/ 出/ 向量/ 之间/ 的/ 实际/ 距离/ 值/ ,/ 如果/ 其/ 实际/ 距离/ 小于/ 或/ 等于/ 距离/ 阈值/ ε/ ,/ 则/ 可以/ 作为/ 结果/ 输出/ ,/ 否则/ 就/ 过滤/ 掉/ (/ 第/ 10/ ~/ 13/ 行/ )/ ./ 4.1/ 代价/ 分析/ 这/ 一节/ 主要/ 对/ 基于/ SAX/ 的/ 向量/ 阈值/ 连接/ 查询/ 算法/ (/ SAX/ -/ HDSJ/ )/ 的/ 代价/ 进行/ 分析/ ,/ 代价/ 与/ 文献/ [/ 25/ ]/ 中/ 的/ 定义/ 一样/ ,/ 主要/ 包括/ 通信/ 代价/ Ct/ 和/ 计算/ 代价/ Cc/ ./ 主要/ 对/ SAX/ -/ HDSJ/ 算法/ 和/ 文献/ [/ 25/ ]/ 中/ 的/ B/ -/ DAAOSFR/ 算法/ 的/ 代价/ 进行/ 比较/ ./ 表/ 1/ 显示/ 了/ 代价/ 分析/ 中/ 用到/ 的/ 一些/ 标识符/ ./ 标识符/ ddNLMKPPAAPSAXctd/ 传递/ 一个/ 向量/ 的/ 通信/ 代价/ Ctccd/ 一个/ 向量/ 对/ 的/ 计算/ 代价/ CcCB/ -/ DAACSAXSAX/ -/ HDSJ/ 与/ B/ -/ DAA/ 的/ 比较/ ./ 因为/ 在/ 进行/ 数据/ 划分/ 的/ 时候/ ,/ 每个/ 向量/ 随机/ 地/ 分配/ 到/ 不同/ 的/ 块/ 中/ ,/ 每/ 一个/ 块/ 的/ 大小/ 基本上/ 是/ 一样/ 的/ ./ 块/ 的/ 数量/ 一般/ 可以/ 根据/ 每个/ Reduce/ 任务/ 的/ 计算能力/ 进行/ 估算/ :/ K/ =/ N/ 如下/ :/ CB/ -/ DAA/ =/ Ct/ +/ N/ (/ N/ +/ 1/ )/ 其中/ ,/ Ct/ 是/ 总/ 的/ 通信/ 代价/ ,/ N/ (/ N/ +/ 1/ )/ 对/ 之间/ 距离/ 的/ 总/ 计算/ 代价/ ,/ N/ (/ N/ +/ 1/ )/ 是/ 经过/ DAA/ 过滤/ 之后/ ,/ 向量/ 原始/ 距离/ 计算/ 的/ 总/ 代价/ ./ 按照/ 前面/ 的/ 分析方法/ ,/ 我们/ 可以/ 得到/ SAX/ -/ HDSJ/ 算法/ 的/ 代价/ 如下/ :/ CSAX/ =/ Ct/ +/ M/ (/ M/ +/ 1/ )/ Page6N/ (/ N/ +/ 1/ )/ 其中/ ,/ Ct/ 是/ SAX/ -/ HSDSJ/ 算法/ 的/ 总/ 通信/ 代价/ ,/ 与/ B/ -/ DAA/ 算法/ 相比/ ,/ 除了/ 需要/ 传输/ DAA/ 和/ 原始/ 向量/ 信息/ 之外/ ,/ SAX/ -/ HSDSJ/ 算法/ 还/ 需要/ 传输/ SAX/ 字符串/ 信息/ ,/ 然而/ 由于/ SAX/ 字符串/ 的/ 长度/ 一般/ 要/ 比/ 原始/ 向量/ 低/ 很多/ ,/ 并且/ 数量/ 也/ 比/ 原始/ 向量/ 少/ 很多/ ,/ 因此/ 我们/ 可以/ 近似/ 认为/ Ct/ 和/ Ct/ 是/ 一样/ 的/ ./ M/ (/ M/ +/ 1/ )/ SAX/ 字符串/ 距离/ 的/ 总/ 计算/ 代价/ ;/ N/ (/ N/ +/ 1/ )/ PSAX/ )/ 是/ 经过/ SAX/ 过滤/ 之后/ ,/ PAA/ 距离/ 的/ 总/ 计算/ 代价/ ;/ N/ (/ N/ +/ 1/ )/ 滤/ 之后/ ,/ 原始/ 向量/ 距离/ 的/ 总/ 计算/ 代价/ ./ SAX/ -/ HDSJ/ 算法/ 的/ 核心/ 是/ 通过/ SAX/ 减少/ PAA/ 距离/ 的/ 计算/ 次数/ ,/ 所以/ SAX/ 字符串/ 的/ 数量/ 不能/ 太/ 多/ ,/ 否则/ 会/ 得不偿失/ ./ 因此/ ,/ 我们/ 有/ 如下/ 定理/ ./ 定理/ 1/ ./ 如果/ M/ </ PSAX/ 槡/ 2/ ·/ N/ ,/ 那么/ CSAX/ </ CB/ -/ DAA/ ,/ 即/ SAX/ -/ HDSJ/ 算法/ 的/ 代价/ 小于/ B/ -/ DAAOSFR/ 算法/ 的/ 代价/ ./ M/ </ PSAX/ 槡/ 2/ ·/ N/ / M2/ </ PSAX/ ·/ N2/ / 2M2N2/ </ PSAXN2/ =/ M/ (/ M/ +/ M/ )/ 2M2M/ (/ M/ +/ 1/ )/ N/ (/ N/ +/ 1/ )/ </ PSAX/ / M/ (/ M/ +/ 1/ )/ / M/ (/ M/ +/ 1/ )/ N/ (/ N/ +/ 1/ )/ 如前所述/ ,/ 假设/ Ct/ 和/ Ct/ 大小/ 相等/ ,/ 可以/ 得到/ 证明/ ./ 2ccd/ (/ 1/ -/ PPAA/ )/ Ct/ +/ M/ (/ M/ +/ 1/ )/ N/ (/ N/ +/ 1/ )/ </ Ct/ +/ N/ (/ N/ +/ 1/ )/ / CSAX/ </ CB/ -/ DAA/ ./ 5/ 基于/ 阈值/ 的/ Top/ -/ 犽/ 连接/ 查询/ 如果/ 事先/ 能够/ 知道/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ ε/ ,/ 那么/ 就/ 可以/ 用/ ε/ 作为/ 距离/ 阈值/ ,/ 直接/ 采用/ 文献/ [/ 25/ ]/ 提出/ 的/ 基于/ 阈值/ 的/ 连接/ 查询/ 算法/ 来/ 进行/ 计算/ ,/ 具体/ 计算/ 流程/ 在/ 第/ 4/ 节/ 第/ 1/ 段/ 已经/ 进行/ 了/ 描述/ ./ 然而/ 事实上/ 我们/ 无法/ 准确/ 知道/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ ./ 一种/ 直观/ 的/ 方法/ 就是/ 可以/ 预先/ 选定/ 一系列/ 距离/ 阈值/ ε/ 1/ ,/ ε/ 2/ ,/ ε/ 3/ ,/ …/ ,/ 其中/ :/ / i/ </ j/ ,/ ε/ i/ </ ε/ j/ ./ 针对/ 每/ 一个/ 阈值/ ε/ i/ 都/ 执行/ 一次/ 阈值/ 连接/ 查询/ 算法/ ,/ 如果/ 在/ ε/ i/ 情况/ 下/ 满足条件/ 的/ 结果/ 数量/ 小于/ k/ ,/ 则/ 以/ ε/ i/ +/ 1/ 为/ 新/ 的/ 距离/ 阈值/ 再/ 重新/ 执行/ 一次/ 阈值/ 连接/ 查询/ ,/ 直到/ 满足/ 距离/ 阈值/ 的/ 结果/ 对/ 的/ 数量/ 大于/ 或者/ 等于/ k/ ,/ 则/ 结束/ ./ 阈值/ 的/ 选择/ 一般/ 根据/ 向量/ 集合/ 中距离/ 的/ 分布/ 情况/ 人为/ 确定/ ,/ 如/ 可以/ 以/ 某/ 一个/ 区间/ 递增/ 为例/ :/ vi/ =/ 0.05/ ×/ i/ ,/ i/ =/ 1/ ,/ 2/ ,/ …/ ./ 该/ 算法/ 实现/ 起来/ 比较简单/ ,/ 但是/ 因为/ 每次/ 都/ 需要/ 重新/ 执行/ 阈值/ 连接/ 查询/ ,/ 所以/ 会/ 带来/ 大量/ 的/ 冗余/ 、/ 重复性/ 的/ 计算/ 工作/ ,/ 效率/ 较/ 低/ ./ 为了/ 避免/ 冗余/ 计算/ ,/ 后面/ 提出/ 了/ 基于/ SAX/ 的/ Top/ -/ k/ 连接/ 查询/ 算法/ ./ 6/ 基于/ SAX/ 的/ Top/ -/ 犽/ 连接/ 查询/ 第/ 5/ 节/ 针对/ 事先/ 选择/ 的/ 不同/ 距离/ 阈值/ 分别/ 执行/ 阈值/ 连接/ 查询/ 算法/ ,/ 虽然/ 比较/ 直观/ ,/ 但是/ 会/ 出现/ 大量/ 的/ 冗余/ 计算/ ./ 如果/ 我们/ 能够/ 准确/ 确定/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ ε/ ,/ 则/ 执行/ 一次/ 阈值/ 连接/ 查询/ 即可/ 得到/ 需要/ 的/ 结果/ ./ 由于/ 距离/ 阈值/ ε/ 的/ 大小/ 直接/ 影响/ 到/ 算法/ 的/ 执行/ 时间/ ,/ ε/ 越小/ ,/ 算法/ 的/ 执行/ 时间/ 越短/ ,/ ε/ 越大/ ,/ 算法/ 的/ 执行/ 时间/ 越长/ ./ 因此/ ,/ 如何/ 估计/ 出/ 第/ k/ 对/ 的/ 距离/ ,/ 并/ 使/ 其/ 尽可能/ 接近/ 真实/ 的/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ ,/ 就/ 成/ 了/ 一个/ 核心/ 的/ 问题/ ./ 在/ 进行/ 阈值/ 估计/ 的/ 时候/ ,/ 最/ 简单/ 的/ 方法/ 是从/ 原始数据/ 集中/ 随机/ 采样/ 一部分/ 数据/ (/ 如/ 10/ %/ )/ ,/ 然后/ 对/ 采集/ 到/ 的/ 样本/ 进行/ 两/ 两/ 比较/ ,/ 求/ 出/ 距离/ 最小/ 的/ 前/ k/ 个/ 向量/ 对/ ,/ 用/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ 作为/ 估计/ 的/ 距离/ 阈值/ ,/ 该/ 阈值/ 肯定/ 是/ Top/ -/ k/ 结果/ 的/ 距离/ 下界/ ./ 此/ 方法/ 虽然/ 简单/ ,/ 但是/ 得到/ 的/ 阈值/ 往往/ 会/ 比较/ 大/ ,/ 导致/ 后面/ 的/ 计算/ 开销/ 也/ 会/ 比较/ 大/ ./ 为了/ 使/ 估计/ 出/ 的/ ε/ 更加/ 接近/ 真实/ 的/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ 阈值/ ,/ 在/ 采样/ 之前/ ,/ 我们/ 先对/ 所有/ 的/ 向量/ 基于/ SAX/ 进行/ 分组/ ,/ 然后/ 针对/ 每/ 一个/ SAX/ 分组/ 中/ 对应/ 的/ 向量/ 进行/ 采样/ ,/ 这样/ 得到/ 的/ 采样/ 数据/ 之间/ 的/ 距/ Page7/ 离/ 一般/ 会/ 比较/ 小/ ,/ 因为/ 距离/ 越/ 小/ 的/ 向量/ 越/ 倾向/ 于/ 分配/ 到/ 同一个/ SAX/ 分组/ 中/ ./ 估计/ 出/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ 阈值/ ε/ 以后/ ,/ 接下来/ 就/ 可以/ 利用/ 我们/ 在/ 第/ 4/ 节中/ 提出/ 的/ “/ 基于/ SAX/ 的/ 向量/ 阈值/ 连接/ 查询/ ”/ 方法/ 来/ 进行/ 计算/ ,/ 因为/ 只/ 需/ 要求/ 出前/ k/ 个/ 向量/ 对/ ,/ 所以/ 需要/ 对/ 第/ 4/ 节中/ 的/ 算法/ 进行/ 稍微/ 修改/ ./ 图/ 3/ 基于/ SAX/ 的/ Top/ -/ k/ 连接/ 查询/ 框架/ 算法/ 2/ 描述/ 了/ Job1/ 的/ 执行/ 过程/ ,/ 在/ map/ 阶段/ ,/ 主要/ 负责/ 计算/ 出/ 每个/ 向量/ 的/ SAX/ ,/ 然后/ 以/ SAX/ 作为/ key/ 值/ ,/ 以/ 原始/ 向量/ 作为/ value/ 传送/ 到/ reduce/ 端/ (/ 第/ 1/ ~/ 4/ 行/ )/ ;/ 在/ reduce/ 端/ ,/ 首先/ 对/ 每/ 一个/ SAX/ 分组/ 里面/ 的/ 所有/ 向量/ 进行/ 随机/ 采样/ ,/ 得到/ 样本/ 集合/ (/ 第/ 7/ ~/ 11/ 行/ )/ ,/ 然后/ 在/ 样本/ 集合/ 中/ ,/ 计算/ 出/ 两/ 两/ 之间/ 的/ 距离/ (/ 第/ 12/ 行/ )/ ;/ 最后/ 把/ 每个/ 距离/ 输出/ (/ 第/ 13/ ~/ 14/ 行/ )/ ./ 算法/ 2/ ./ 数据/ 采样/ 和/ 距离/ 计算/ (/ Job1/ )/ ./ 输入/ :/ ε/ ,/ paaSize/ // // 距离/ 阈值/ 和/ PAA/ 大小/ 输出/ :/ 相似/ 向量/ 对/ 和/ 距离/ 1/ ./ map/ (/ k1/ ,/ v1/ )/ 2/ ./ paav1/ ←/ getPaa/ (/ v1/ )/ ;/ 3/ ./ saxv1/ ←/ getSax/ (/ v1/ )/ ;/ 4/ ./ emit/ (/ saxv1/ ,/ v1/ )/ ;/ 5/ ./ reduce/ (/ k2/ ,/ v2/ )/ 6/ ./ LinkedListsamples/ ,/ vectorsPairs/ ;/ 7/ ./ Foreachvector/ :/ v2do8/ ./ j/ ←/ Math/ ./ abs/ (/ random/ ./ nextInt/ (/ )/ )/ %/ rate/ ;/ 9/ ./ If/ (/ j/ =/ =/ 1/ )/ 10/ ./ samples/ ./ add/ (/ vec/ )/ ;/ 11/ ./ Endif12/ ./ vectorsPairs/ ←/ loopJoin/ (/ samples/ ,/ ε/ )/ ;/ 13/ ./ ForeachvecPair/ :/ finalVecPairsdo14/ ./ emit/ (/ vecPair/ ./ vectors/ ,/ vecPair/ ./ dist/ )/ ;/ 基于/ 上述/ 思想/ ,/ 我们/ 提出/ 了/ 基于/ SAX/ 的/ Top/ -/ k/ 连接/ 查询方法/ ,/ 图/ 3/ 给出/ 了/ 该/ 方案/ 的/ 执行/ 框架/ ./ 该/ 方案/ 主要/ 由/ 4/ 个/ MapReduceJobs/ 组成/ ,/ 其中/ Job1/ 和/ Job2/ 主要/ 是/ 用于/ 阈值/ 估计/ ,/ Job3/ 是/ 执行/ 基于/ 阈值/ 的/ Top/ -/ k/ 连接/ 查询/ ,/ 从而/ 得到/ 局部/ 的/ Top/ -/ k/ 结果/ ,/ Job4/ 主要/ 是/ 负责/ 从/ 所有/ 局部/ 的/ Top/ -/ k/ 结果/ 中/ 计算/ 出/ 全局/ 的/ Top/ -/ k/ ./ 算法/ 3/ 描述/ 了/ Job2/ 的/ 执行/ 流程/ ,/ 其/ 主要/ 目的/ 是从/ Job1/ 的/ 计算结果/ 中/ 找出/ 距离/ 最小/ 的/ 前/ k/ 个/ 向量/ 对/ ,/ 并/ 以此/ 作为/ 估计/ 的/ 距离/ 阈值/ ./ 算法/ 3/ ./ Top/ -/ k/ 距离/ 阈值/ 估计/ (/ Job2/ )/ ./ 输入/ :/ 相似/ 向量/ 对/ 和/ 距离/ 输出/ :/ ε/ // // 估计/ 的/ Top/ -/ k/ 距离/ 阈值/ 1/ ./ map/ (/ k1/ ,/ v1/ )/ 2/ ./ newKey/ ←/ “/ one/ ”/ ;/ 3/ ./ newValue/ ←/ v1/ ;/ 4/ ./ emit/ (/ newKey/ ./ newValue/ )/ ;/ 5/ ./ reduce/ (/ k2/ ,/ v2/ )/ 6/ ./ PriorityQueuepq/ =/ newPriorityQueue/ (/ k/ )/ ;/ 7/ ./ intcountTotal/ =/ 0/ ;/ doubledist/ =/ 0.0/ ;/ 8/ ./ For/ (/ Textval/ :/ values/ )/ 9/ ./ countTotal/ ++/ ;/ 10/ ./ dist/ ←/ Double/ ./ parseDouble/ (/ val/ ./ toString/ (/ )/ )/ ;/ 11/ ./ if/ (/ countTotal/ </ =/ k/ )/ 12/ ./ pq/ ./ add/ (/ dist/ )/ ;/ 13/ ./ elseif/ (/ dist/ </ Double/ ./ parseDouble/ (/ pq/ ./ peek/ (/ )/ ./ 14/ ./ pq/ ./ poll/ (/ )/ ;/ 15/ ./ pq/ ./ add/ (/ dist/ )/ ;/ 16/ ./ Endif17/ ./ EndforPage818/ ./ context/ ./ write/ (/ newText/ (/ "/ thre/ :/ "/ )/ ,/ 算法/ 4/ 描述/ 了/ Job3/ 的/ 执行/ 流程/ :/ 基于/ 阈值/ 的/ Top/ -/ k/ 连接/ 查询/ ,/ 其/ 基本/ 思想/ 是/ 基于/ 第/ 4/ 节/ 的/ “/ 基于/ SAX/ 的/ 向量/ 阈值/ 连接/ 查询/ ”/ ./ 不同之处/ 在于/ ,/ 由于/ 只/ 需要/ 得到/ 距离/ 最小/ 的/ 前/ k/ 个/ 向量/ 对/ ,/ 所以/ 满足/ ε/ 要求/ 的/ 并不一定/ 都/ 是/ 需要/ 的/ 结果/ ./ 因此/ 在/ 执行/ 阈值/ 连接/ 的/ 时候/ ,/ 可以/ 维护/ 一个/ 长度/ 为/ k/ 的/ 队列/ (/ 第/ 8/ 行/ )/ ,/ 把/ 目前为止/ 、/ 距离/ 最小/ 的/ k/ 个/ 向量/ 对/ 及其/ 距离/ 存放/ 其中/ ./ 同时/ 在/ 计算/ 的/ 过程/ 中/ ,/ 可以/ 根据/ 队列/ 中/ 结果/ 的/ 情况/ 对/ 阈值/ ε/ 进行/ 及时/ 更新/ ,/ 如果/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ 小于/ ε/ ,/ 则/ 把/ ε/ 更新/ 为/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ (/ 第/ 35/ ~/ 37/ 行/ )/ 以/ 更新/ 后/ 的/ ε/ 值/ 进行/ 后面/ 的/ 计算/ ,/ 从而/ 加快/ 执行/ 速/ ./ 同时/ ,/ 对于/ 候选/ 的/ SAX/ 相似/ 对/ ,/ 也/ 可以/ 利用/ ε/ 进行/ 过滤/ ,/ 如果/ 某/ 一个/ SAX/ 对/ 的/ 距离/ 大于/ ε/ ,/ 则/ 其/ 对应/ 的/ 所有/ 向量/ 之间/ 的/ 距离/ 肯定/ 大于/ ε/ ,/ 所以/ 可以/ 直接/ 过滤/ 掉/ (/ 第/ 17/ 行/ )/ ./ 随着/ 计算/ 的/ 进行/ ,/ ε/ 的/ 值会/ 越来越/ 小/ ,/ 其/ 过滤/ 效果/ 也/ 会/ 越来越/ 好/ ,/ 从而/ 可以/ 减少/ 很多/ 不必要/ 的/ 计算/ ,/ 提高/ 计算/ 的/ 效率/ ./ 算法/ 4/ ./ 基于/ SAX/ 的/ 局部/ Top/ -/ k/ 计算/ (/ Job3/ )/ ./ 输入/ :/ ε/ ,/ n/ ,/ paaSize/ // // 距离/ 阈值/ ,/ 块/ 编号/ ,/ PAA/ 大小/ 输出/ :/ Top/ -/ k/ 向量/ 对/ 1/ ./ map/ (/ k1/ ,/ v1/ )/ 2/ ./ paav1/ ←/ getPaa/ (/ v1/ )/ ;/ 3/ ./ saxv1/ ←/ getSax/ (/ v1/ )/ ;/ 4/ ./ StringnewVal/ ←/ 5/ ./ ReplicatenewValntimes/ ;/ // // n/ :/ thenumberof6/ ./ reduce/ (/ k2/ ,/ v2/ )/ 7/ ./ LinkedListsaxList1/ ,/ saxList2/ ,/ saxVecMap1/ ,/ 8/ ./ PriorityQueuepq/ ←/ newPriorityQueue/ (/ k/ )/ ;/ 9/ ./ String/ [/ ]/ vecList1/ ,/ vecList2/ ;/ 10/ ./ Stringsax1/ ,/ sax2/ ;/ 11/ ./ DoubledistTemp/ ←/ 0.0/ ;/ 12/ ./ IntcountTotal/ ←/ 0/ ;/ 13/ ./ saxList1/ ,/ saxList2/ ←/ getUniqueSax/ (/ v2/ )/ ;/ 14/ ./ saxVecMap1/ ,/ saxVecMap2/ ←/ 15/ ./ canSaxPairs/ ←/ getSaxPairs/ (/ ε/ ,/ saxList1/ ,/ saxList2/ )/ ;/ 16/ ./ ForeachsaxPair/ :/ canSaxPairsdo17/ ./ IfsaxPair/ ./ dist/ >/ ε/ 18/ ./ continue/ ;/ 19/ ./ Endif20/ ./ sax1/ ←/ saxPair/ [/ 0/ ]/ ;/ sax2/ ←/ saxPair/ [/ 1/ ]/ ;/ 21/ ./ vecList1/ ←/ saxVecMap1/ ./ get/ (/ sax1/ )/ ;/ 22/ ./ vecList2/ ←/ saxVecMap2/ ./ get/ (/ sax2/ )/ ;/ 23/ ./ Foreachv1/ :/ vecList1do24/ ./ Foreachv2/ :/ vecList2do25/ ./ distTemp/ ←/ getDist/ (/ v1/ ,/ v2/ )/ 26/ ./ IfdistTemp/ >/ ε/ 27/ ./ continue/ ;/ 28/ ./ Endif29/ ./ countTotal/ ++/ ;/ 30/ ./ If/ (/ countTotal/ </ =/ k/ )/ 31/ ./ pq/ ./ add/ (/ dist/ )/ ;/ 32/ ./ Elseif/ (/ dist/ </ Double/ ./ parseDouble/ (/ pq/ ./ peek/ (/ )/ ./ 33/ ./ pq/ ./ poll/ (/ )/ ;/ 34/ ./ pq/ ./ add/ (/ dist/ )/ ;/ 35/ ./ if/ (/ ε/ </ Double/ ./ parseDouble/ (/ pq/ ./ peek/ (/ )/ ./ 36/ ./ ε/ ←/ thre/ =/ Double/ ./ parseDouble/ (/ pq/ ./ peek/ (/ )/ ./ 37/ ./ Endif38/ ./ Endif39/ ./ Emitallthepairsinpq/ ;/ 7/ 实验/ 评估/ 本/ 节/ 我们/ 对/ 所/ 提出/ 的/ 基于/ SAX/ 的/ Top/ -/ k/ 连接/ 查询/ 方案/ (/ SAX/ -/ Top/ -/ k/ )/ 进行/ 实验/ 验证/ ,/ 并/ 与/ 基准/ 方案/ :/ 基于/ 阈值/ 的/ Top/ -/ k/ 连接/ 查询/ (/ Baseline/ -/ Top/ -/ k/ )/ 进行/ 性能/ 对比/ ,/ Baseline/ -/ Top/ -/ k/ 采用/ 的/ 基本/ 算法/ 是/ 基于/ 文献/ [/ 25/ ]/ 提出/ 的/ 一种/ 基于/ MapReduce/ 框架/ 的/ 算法/ ./ 同时/ 测试/ 了/ 两种/ 算法/ 在/ 单机/ 环境/ 下/ 的/ 性能/ 对比/ (/ SAX/ -/ Top/ -/ k/ -/ Serialvs/ ./ Baseline/ -/ Top/ -/ k/ -/ Serial/ )/ ./ 主要/ 测试/ 不同/ k/ 值/ 对/ 执行/ 时间/ 的/ 影响/ 、/ 不同/ 数据/ 集/ 大小/ 对/ 执行/ 时间/ 的/ 影响/ 、/ 不同/ 维度/ 对/ 执行/ 时间/ 的/ 影响/ 以及/ 阈值/ 估计/ 所/ 消耗/ 的/ 时间/ ./ 7.1/ 实验/ 环境/ 实验/ 是/ 在/ 一个/ 由/ 19/ 个/ 节点/ 组成/ 的/ 集群/ 上/ 进行/ 的/ ,/ 其中/ 1/ 个/ 作为/ master/ 节点/ ,/ 16/ 个/ 作为/ slave/ 节点/ ./ 节点/ 配置/ 如下/ :/ CPU/ :/ Q96503/ ./ 00GHz/ ,/ Memory/ :/ 8GB/ ,/ Disk/ :/ 500GB/ ,/ OS/ :/ 64bitUbuntu9/ ./ 10server/ ./ 其他/ 参数/ 如表/ 2/ 所示/ ./ k/ 集群/ 节点/ map/ 任务/ 个数/ // 节点/ reduce/ 任务/ 个数/ // 节点/ 4/ 数据量/ (/ 万/ )/ Page9/ 实验/ 中/ 所/ 采用/ 的/ 数据/ 集/ 来自/ 于/ 文献/ [/ 25/ ]/ 中/ 所用/ 到/ 的/ 数据/ 集/ ,/ 可以/ 从/ 网站/ 下载/ ①/ ,/ 具体/ 参数/ 如表/ 3/ 所示/ ./ 数据/ 集/ 类型/ 数量/ 维度/ 大小/ image/ -/ 128/ 真实/ 500000128423Mimage/ -/ 128/ -/ 2w/ 真实/ 2000012818Mimage/ -/ 960/ 真实/ 5000009603.92/ GImage/ -/ 128/ -/ syn/ -/ 1/ 模拟/ 200000128175.4/ MImage/ -/ 128/ -/ syn/ -/ 2/ 模拟/ 300000128262.7/ MImage/ -/ 128/ -/ syn/ -/ 3/ 模拟/ 400000128347.9/ MImage/ -/ 960/ -/ syn/ -/ 1/ 模拟/ 2000009601.64/ GImage/ -/ 960/ -/ syn/ -/ 2/ 模拟/ 3000009602.46/ GImage/ -/ 960/ -/ syn/ -/ 3/ 模拟/ 4000009603.28/ G7/ ./ 2/ 实验/ 结果/ 与/ 分析/ 7.2/ ./ 1/ 不同/ k/ 对/ 执行/ 时间/ 的/ 影响/ 图/ 4/ 展示/ 了/ 针对/ image/ -/ 128/ 数据/ 集/ ,/ 不同/ 的/ k/ 对/ 执行/ 时间/ 的/ 影响/ ./ 在/ 执行/ Baseline/ -/ Top/ -/ k/ 时/ ,/ 阈值/ 依次/ 选择/ 为/ 0.05/ ,/ 0.1/ ,/ 0.15/ ,/ 0.2/ ,/ 0.25/ ,/ 0.3/ ,/ 0.35/ ,/ 0.45/ ,/ 0.5/ ./ 在/ k/ 较/ 小/ 的/ 情况/ 下/ ,/ SAX/ -/ Top/ -/ k/ 与/ Baseline/ -/ Top/ -/ k/ 的/ 执行/ 时间/ 差不多/ ,/ 因为/ 在/ k/ 比较/ 小/ 的/ 情况/ 下/ ,/ Baseline/ -/ Top/ -/ k/ 只/ 需要/ 执行/ 一次/ 就/ 可以/ 达到/ 要求/ ;/ 但是/ 随着/ k/ 的/ 增加/ ,/ Baseline/ -/ Top/ -/ k/ 往往/ 需要/ 执行/ 多次/ 才/ 可以/ 返回/ 所/ 需要/ 的/ k/ 个/ 相似/ 对/ ,/ 因此/ 执行/ 时间/ 增长/ 很快/ ./ SAX/ -/ Top/ -/ k/ 的/ 执行/ 时间/ 虽然/ 也/ 有所增加/ ,/ 但是/ 针对/ 所有/ 的/ k/ 只/ 需要/ 执行/ 一次/ ,/ 所以/ SAX/ -/ Top/ -/ k/ 的/ 性能比/ Baseline/ -/ Top/ -/ k/ 好/ 很多/ ./ 并且/ k/ 越大/ ,/ SAX/ -/ Top/ -/ k/ 相对/ 性能/ 越好/ ./ 图/ 4/ 不同/ k/ 对/ 执行/ 时间/ 的/ 影响/ (/ image/ -/ 128/ )/ 图/ 5/ 展示/ 了/ 针对/ image/ -/ 960/ 数据/ 集/ ,/ 不同/ 的/ k/ 对/ 执行/ 时间/ 的/ 影响/ ./ 其/ 变化规律/ 与/ image/ -/ 128/ 数据/ 集/ 基本一致/ ,/ 不过/ 在/ image/ -/ 960/ 数据/ 集中/ ,/ 当/ k/ 为/ 15000/ 和/ 20000/ 时/ ,/ Baseline/ -/ Top/ -/ k/ 的/ 执行/ 时间/ 是/ 一样/ 的/ ,/ 这/ 是因为/ 在/ 阈值/ 为/ 0.1/ 时/ ,/ 返回/ 结果/ 的/ 对数/ 是/ 10566/ ,/ 阈值/ 为/ 0.15/ 时/ ,/ 返回/ 结果/ 的/ 对数/ 是/ 30486/ ,/ 15000/ 和/ 20000/ 都/ 在/ 两者之间/ ,/ 所以/ 在/ 阈值/ 为/ 0.15/ 时/ 可以/ 同时/ 满足/ 15000/ 和/ 20000/ 的/ 要求/ ,/ 故/ 两种/ 情况/ 下/ 的/ 时间/ 相同/ ./ 图/ 6/ 单机/ 环境/ 下/ 的/ 执行/ 时间/ 对比/ (/ image/ -/ 128/ -/ 2w/ )/ 图/ 6/ 展示/ 了/ 在/ 单机/ 环境/ 下/ 两种/ 算法/ 的/ 性能/ 对比/ 情况/ ./ 因为/ 是/ 在/ 单机/ 下/ 执行/ ,/ 所以/ 选择/ 的/ 是/ 较/ 小/ 的/ 数据/ 集/ (/ image/ -/ 128/ -/ 2w/ )/ ,/ k/ 的/ 取值/ 分别/ 为/ 50/ 、/ 100/ 、/ 200/ 、/ 400/ 和/ 800/ ./ 在/ 执行/ Baseline/ -/ Top/ -/ k/ -/ Serial/ 时/ ,/ 阈值/ 依次/ 选择/ 为/ 0.05/ ,/ 0.1/ ,/ 0.15/ ,/ 0.2/ ,/ 0.25/ ,/ 0.3/ ,/ 0.35/ ,/ 0.45/ 和/ 0.5/ ./ 从图/ 7/ 可以/ 看出/ ,/ SAX/ -/ Top/ -/ k/ -/ Serial/ 的/ 性能/ 优于/ Baseline/ -/ Top/ -/ k/ -/ Serial/ 的/ 性能/ ,/ 并且/ 随着/ k/ 的/ 增大/ ,/ SAX/ -/ Top/ -/ k/ -/ Serial/ 的/ 相对/ 性能/ 更好/ ./ 7.2/ ./ 2/ 不同/ 数据/ 集/ 大小/ 对/ 执行/ 时间/ 的/ 影响/ 图/ 7/ 展示/ 了/ 数据/ 集/ image/ -/ 128/ 在/ 不同/ 规模/ 下/ 的/ 执行/ 时间/ ,/ 图/ 7/ (/ a/ )/ 和/ (/ b/ )/ 分别/ 表示/ k/ =/ 1000/ 和/ k/ =/ 5000/ 情况/ 下/ 的/ 执行/ 时间/ 对比/ ./ 从图/ 7/ (/ a/ )/ 中/ 可以/ 看出/ ,/ 在/ 所有/ 数据/ 规模/ 情况/ 下/ ,/ SAX/ -/ Top/ -/ k/ 的/ 执行/ 时间/ 都/ 要/ 小于/ Baseline/ -/ Top/ -/ k/ 方法/ ./ 当/ 数据/ 集/ 超过/ 30/ 万/ 的/ 时候/ ,/ 随着/ 数据/ 集/ 规模/ 的/ 增加/ ,/ SAX/ -/ Top/ -/ k/ 的/ 性能/ 越来越/ 好/ ./ 从图/ 7/ (/ a/ )/ 中/ 我们/ 还/ 可以/ 看到/ 一个/ 特殊/ 变化/ :/ Baseline/ -/ Top/ -/ k/ 在/ 数据/ 集为/ 30/ 万时/ 的/ 执行/ 时间/ 小于/ 20/ 万时/ 的/ 执行/ 时间/ ,/ 主要/ 原因/ 在于/ 当/ 数据/ 集为/ 20/ 万/ 的/ 时候/ ,/ 要/ 想得到/ 预期/ 数量/ 的/ 相似/ 对/ ,/ Baseline/ -/ Top/ -/ k/ 就/ 需要/ 执行/ 4/ 次/ 计算/ ,/ 而/ 在/ 30/ 万/ 的/ ①/ http/ :/ // // corpus/ -/ texmex/ ./ irisa/ ./ frPage10/ 时候/ ,/ 只/ 需要/ 执行/ 一次/ 计算/ 就/ 可以/ 了/ ,/ 所以/ 前者/ 消耗/ 的/ 时间/ 相对/ 较长/ ./ 图/ 7/ (/ b/ )/ 显示/ 了/ k/ =/ 5000/ 时/ 的/ 执行/ 图/ 7/ 不同/ 数据/ 集/ 大小/ 对/ 执行/ 时间/ 的/ 影响/ (/ image/ -/ 128/ )/ 图/ 8/ 展示/ 了/ 数据/ 集/ image/ -/ 960/ 在/ 不同/ 数据/ 规模/ 下/ 的/ 执行/ 时间/ ,/ 总体/ 来看/ ,/ 随着/ 数据/ 集/ 规模/ 的/ 增大/ ,/ 两种/ 算法/ 的/ 执行/ 时间/ 都/ 有所增加/ ,/ 但是/ SAX/ -/ Top/ -/ k/ 的/ 执行/ 时间/ 一直/ 都/ 小于/ Baseline/ -/ Top/ -/ k/ 的/ 执行/ 时间/ ,/ 并且/ 增加/ 速度/ 也/ 较/ 小/ ./ Baseline/ -/ Top/ -/ k/ 的/ 执行/ 时间/ 有时/ 会/ 出现/ 波动/ (/ 图/ 8/ (/ b/ )/ :/ 30/ 万/ vs/ ./ 40/ 万/ )/ ,/ 其/ 原图/ 8/ 不同/ 数据/ 集/ 大小/ 对/ 执行/ 时间/ 的/ 影响/ (/ image/ -/ 960/ )/ 7.2/ ./ 3/ 不同/ 维度/ 对/ 执行/ 时间/ 的/ 影响/ 图/ 9/ 展示/ 了/ 在/ 不同/ 维度/ 下/ 两种/ 算法/ 的/ 执行/ 时间/ 图/ 9/ 不同/ 维度/ 对/ 执行/ 时间/ 的/ 影响/ (/ k/ =/ 5000/ ,/ n/ =/ 50/ 万/ )/ 时间/ 对比/ ,/ 其/ 变化规律/ 与/ k/ =/ 1000/ 时/ 基本一致/ ,/ 不过/ 总/ 的/ 执行/ 时间/ 要/ 大于/ k/ =/ 1000/ 时/ 的/ 执行/ 时间/ ./ 因/ 在于/ Baseline/ -/ Top/ -/ k/ 的/ 执行/ 时间/ 既/ 与/ 每次/ 的/ 执行/ 时间/ 相关/ ,/ 又/ 与/ 执行/ 的/ 次数/ 相关/ ,/ 而/ 执行/ 的/ 次数/ 则/ 与/ 具体/ 的/ 数据/ 集/ 的/ 分布/ 有关/ ,/ 所以/ 就/ 可能/ 会/ 出现/ 在/ 数据/ 集/ 比较/ 大/ 的/ 情况/ 下/ ,/ 执行/ 次数/ 比较/ 少/ ,/ 相应/ 的/ 总/ 的/ 执行/ 时间/ 就/ 比较/ 短/ ./ 对比/ ,/ 其中/ k/ 为/ 5000/ ,/ 向量/ 规模/ 为/ 50/ 万/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随着/ 维度/ 的/ 增大/ ,/ 两种/ 算法/ 的/ 执行/ 时间/ 都/ 不断/ 增加/ ,/ 但是/ SAX/ -/ Top/ -/ k/ 算法/ 的/ 时间/ 增长速度/ 比较/ 平缓/ ,/ 并且/ ,/ 维度/ 越高/ ,/ SAX/ -/ Top/ -/ k/ 算法/ 的/ 性能/ 优势/ 越/ 明显/ ./ 7.2/ ./ 4/ 阈值/ 估计/ 时间/ 及/ 效果图/ 10/ 展示/ 了/ 不同/ 的/ 采样/ 规模/ 下/ 阈值/ 估计/ 所/ 需要/ 的/ 时间/ ,/ 从图/ 中/ 可以/ 看出/ ,/ 随着/ 采样/ 数量/ 的/ 增加/ ,/ 阈值/ 估计/ 所/ 需要/ 的/ 时间/ 也/ 会/ 逐渐/ 增加/ ;/ image/ -/ 960/ 所/ 需要/ 的/ 时间/ 比/ image/ -/ 128/ 所/ 需要/ 的/ 时间/ 长/ ,/ 这/ 是因为/ 在/ 同样/ 的/ 采样/ 规模/ 下/ ,/ image/ -/ 960/ 数据/ 集/ 的/ 维度/ 比/ image/ -/ 128/ 数据/ 集/ 的/ 维度/ 高/ ,/ 所以/ 计算/ 距离/ 时/ Page11/ 所/ 需要/ 的/ 时间/ 比较/ 长/ ,/ 因此/ 总/ 的/ 阈值/ 估计/ 时间/ 也/ 会/ 比较/ 长/ ./ 图/ 11/ 展示/ 了/ 在/ 不同/ 的/ 采样/ 规模/ 下/ ,/ 所/ 得到/ 的/ 估计/ 阈值/ 的/ 大小/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随着/ 采样/ 规模/ 的/ 增大/ ,/ 估计/ 的/ 阈值/ 会/ 逐渐/ 减小/ ,/ 这/ 说明/ 采样/ 规模/ 越大/ ,/ 得到/ 的/ 估计/ 阈值/ 越/ 接近/ 真实/ 的/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ 阈值/ ./ 而/ image/ -/ 128/ 的/ 阈值/ 比/ image/ -/ 960/ 的/ 阈值/ 要/ 大/ 一些/ ,/ 这/ 主要/ 是/ 与/ 数据/ 集/ 的/ 数据分布/ 有关/ ,/ 与/ 维度/ 没有/ 直接/ 的/ 关系/ ./ 8/ 结论/ 本文/ 基于/ 分段/ 累积/ 近似/ 法/ (/ PAA/ )/ 和/ 符号/ 累积/ 近似/ 法/ (/ SAX/ )/ ,/ 对/ 高维/ 向量/ 进行/ 降维/ 、/ 分组/ ,/ 然后/ 根据/ 原始/ 向量/ 的/ SAX/ 分组/ 信息/ 对/ 原始/ 向量/ 进行/ 抽样/ ,/ 从而/ 估计/ 出/ 距离/ 最小/ 的/ 第/ k/ 个/ 向量/ 对/ 的/ 距离/ ε/ ,/ 然后/ 将/ Top/ -/ k/ 连接/ 查询/ 转换成/ 以/ ε/ 为/ 阈值/ 的/ 阈值/ 连接/ 查询/ ./ 结合/ MapReduce/ 框架/ ,/ 提出/ 了/ 基于/ SAXTop/ -/ k/ 连接/ 查询/ 算法/ ,/ 实验/ 表明/ ,/ 所提/ 方案/ 具有/ 良好/ 的/ 性能/ ./ 未来/ 将/ 对/ 现有/ 的/ 方案/ 做/ 进一步/ 的/ 优化/ :/ 在/ MapReducejob/ 执行/ 计算/ 的/ 时候/ ,/ 在/ reduce/ 端/ ,/ 每/ 一个/ reduce/ 任务/ 结束/ 之后/ ,/ 第/ k/ 个/ 向量/ 对/ 的/ 相似/ 度/ 阈值/ 可能/ 会/ 发生/ 改变/ ,/ 如果/ 能够/ 让/ 后面/ 的/ reduce/ 任务/ 在/ 执行/ 的/ 过程/ 利用/ 更新/ 后/ 的/ 阈值/ ,/ 则/ 可以/ 进一步提高/ 过滤/ 效果/ ,/ 加快/ 计算速度/ ./ 

