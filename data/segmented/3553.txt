Page1/ 参数/ 配对/ 及狀/ -/ way/ 组合/ 覆盖/ 算法/ 研究/ 黄陇/ 1/ )/ 杨/ 宇航/ 1/ )/ 李虎/ 2/ )/ 1/ )/ (/ 总参/ 陆航/ 研究所/ 北京/ 101121/ )/ 2/ )/ (/ 中国/ 软件/ 评测/ 中心/ 北京/ 100044/ )/ 摘要/ 组合/ 测试/ 是/ 软件测试/ 数据/ 生成/ 研究/ 的/ 一个/ 重要/ 领域/ ,/ 其中/ 参数/ 配对/ 组合/ 测试/ 的/ 应用/ 最为/ 广泛/ ./ 对/ 常用/ 的/ 参数/ 配对/ 组合/ 覆盖/ 方法/ 进行/ 了/ 综述/ 分析/ ./ 目前/ 主流/ 的/ 配对/ 覆盖/ 算法/ AETG/ 和/ IPO/ 所/ 存在/ 的/ 主要/ 问题/ 是/ 在/ 确定/ 水平/ 取值/ 时/ ,/ 具有/ 盲目性/ 和/ 随机性/ ,/ 从而/ 难以/ 控制/ 测试用例/ 的/ 规模/ ./ 为此/ 提出/ 了/ 改进/ 的/ AETG/ 算法/ 和/ IPO/ 算法/ ,/ 改进/ 算法/ 通过/ 对/ 参数/ 进行/ 预处理/ 以及/ 综合/ 考虑/ 各/ 因素/ 的/ 水平/ 组合/ 等/ 手段/ ,/ 对/ 测试用例/ 的/ 规模/ 进行/ 控制/ ,/ 采用/ 更加/ 完备/ 的/ 方法/ 尽早/ 确定/ 水平/ 取值/ ./ 为/ 验证/ 新/ 算法/ 的/ 有效性/ ,/ 进行/ 了/ 仿真/ 实验/ 和/ 实际/ 测试/ ,/ 结果表明/ ,/ 改进/ 算法/ 所/ 生成/ 的/ 测试用例/ 数量/ 要/ 少于/ 原/ 算法/ ,/ 测试用例/ 约/ 减/ 效果/ 更为/ 明显/ ;/ 测试用例/ 数/ 与/ 配对/ 数/ 之间/ 、/ 测试用例/ 数/ 与/ 因素/ 水平/ 数/ 之间/ 存在/ 着/ 某些/ 规律性/ 的/ 联系/ ,/ 分析/ 得出/ 了/ 一系列/ 相关/ 的/ 结论/ ./ 在/ 配对/ 覆盖/ 的/ 基础/ 上/ ,/ 提出/ 了/ 遗传算法/ 与/ AETG/ 算法/ 相结合/ 的/ n/ -/ way/ 组合/ 覆盖/ 算法/ ,/ 证明/ 了/ 其/ 时间/ 复杂性/ 较/ 已有/ 算法/ 得到/ 了/ 改善/ ./ 关键词/ 组合/ 测试/ ;/ 配对/ 测试/ ;/ n/ -/ way/ 覆盖/ ;/ 算法/ 1/ 引言/ 问题/ Q/ :/ 在/ 软件/ 功能测试/ 中/ ,/ 针对/ 测试/ 场景/ 中/ 的/ 某个/ 被测/ 方法/ ,/ 当该/ 方法/ 中/ 各个/ 参数/ 的/ 初始/ 取值/ 确定/ 后/ ,/ 如何/ 进行/ 各/ 参数/ 取值/ 的/ 组合/ 以/ 生成/ 测试用例/ ,/ 从而/ 驱动/ 该/ 方法/ 能够/ 执行/ ,/ 并/ 达到最佳/ 的/ 测试/ 效果/ ./ 解决/ Q/ 的/ 核心/ 在于/ 选取/ 方法/ 参数/ 的/ 哪些/ 取值/ 组合/ 进行/ 实际/ 测试/ ,/ 亦/ 即/ 如何/ 从/ 大量/ 的/ 参数/ 数据/ 组合/ 中/ (/ 完全/ 组合/ 在/ 实际/ 测试/ 中/ 通常/ 不/ 可行/ )/ 挑选/ 适量/ 的/ 具有/ 代表性/ 、/ 典型性/ 的/ 数据/ 组合/ ,/ 使得/ 用/ 较/ 少/ 的/ 测试用例/ 即可/ 对/ 被/ 测/ 方法/ 进行/ 较为/ 全面/ 和/ 客观/ 的/ 测试/ ./ 这种/ 通过/ 检查/ 系统/ 参数/ 的/ 取值/ 组合/ 来/ 进行/ 充分/ 的/ 测试/ 就是/ 组合/ 测试/ ,/ 组合/ 测试/ 已/ 被/ 软件业/ 公认/ 为/ 是/ 一种/ 行之有效/ 的/ 测试方法/ [/ 1/ ]/ ./ 根据/ 观察/ ,/ 对于/ 很多/ 应用程序/ 来说/ ,/ 很多/ 错误/ 都/ 是/ 由/ 少数几个/ 参数/ 的/ 相互作用/ 导致/ 的/ ./ 例如/ Kuhn/ 和/ Reilly/ 分析/ 了/ Mozilla/ 浏览器/ 的/ 错误报告/ 记录/ ,/ 发现/ 超过/ 70/ %/ 的/ 错误/ 是/ 由/ 某/ 两个/ 参数/ 的/ 相互作用/ 触发/ 的/ [/ 2/ ]/ ./ 因此/ 在/ Q/ 中/ 应用/ 最为/ 广泛/ 的/ 是/ 配对/ 组合/ 测试/ ,/ 即/ 保证/ 任意/ 2/ 个/ 参数/ 的/ 所有/ 可能/ 取值/ 的/ 组合/ 至少/ 被/ 一个/ 测试用例/ 覆盖/ ./ 目前/ ,/ 学术界/ 从/ 不同/ 角度/ 提出/ 了/ 一些/ 解决/ 该/ 问题/ 的/ 方法/ ,/ 下面/ 先对/ 这些/ 方法/ 进行/ 评述/ ,/ 然后/ 讨论/ 改进/ 的/ AETG/ 、/ IPO/ 算法/ ,/ 在/ 此基础/ 上/ ,/ 进一步/ 提出/ 一种/ n/ -/ way/ 组合/ 覆盖/ 算法/ ./ 2/ 常用/ 的/ 参数/ 配对/ 组合/ 覆盖/ 方法/ 综述/ 从/ 算法/ 设计/ 的/ 基本原理/ 上/ 看/ ,/ 目前/ 常用/ 的/ 参数/ 配对/ 组合/ 方法/ 可以/ 分为/ 试验/ 设计/ 方法/ 、/ 直接/ 搜索/ 方法/ 和/ 代数/ 方法/ 3/ 大类/ ./ 2.1/ 试验/ 设计/ 方法/ 在/ 试验/ 设计/ (/ DOE/ )/ 中/ ,/ 将/ 方法/ 调用/ 中/ 的/ 各个/ 参数/ 称为/ 因素/ ,/ 而/ 将/ 各个/ 参数/ 的/ 所有/ 可能/ 的/ 取值/ 称为/ 水平/ ./ DOE/ 方法/ 最早/ 是/ 针对/ 硬件/ 系统/ 的/ 测试/ 而/ 提出/ 的/ [/ 3/ ]/ ,/ 但/ 同样/ 可以/ 将/ 其/ 思想/ 应用/ 于/ 软件测试/ ./ (/ 1/ )/ 全面/ 试验/ 全面/ 试验/ 即/ 对/ 所有/ 因素/ 的/ 所有/ 水平/ 之间/ 的/ 各种/ 组合/ 情形/ 均/ 进行/ 相应/ 的/ 试验/ ./ 对于/ 有/ k/ 个/ 因素/ ,/ 每个/ 因素/ 有/ li/ (/ 1/ / i/ / k/ )/ 个/ 取值/ 的/ 情况/ ,/ 全面/ 试验/ 需要/ ∏/ kli/ 个/ 测试用例/ ./ 全面/ 试验/ 的/ 优点/ 是/ 各/ 参数/ 的/ 所有/ i/ =/ 1/ 取值/ 组合/ 情况/ 都/ 能/ 得到/ 测试/ ,/ 可以/ 发现/ 任何/ 和/ 参数/ 组合/ 相关/ 的/ 错误/ ./ 但是/ 当/ k/ 和/ li/ 都/ 较大/ 时/ ,/ 所/ 需要/ 的/ 测试用例/ 的/ 数量/ 将会/ 非常/ 庞大/ ,/ 这/ 对于/ 资源/ 有限/ 的/ (/ 2/ )/ 单/ 因素/ 轮换/ 试验/ 为了/ 减少/ 全面/ 试验/ 的/ 次数/ ,/ 出现/ 了/ 单/ 因素/ 轮换/ 试验/ ./ 它/ 只/ 考虑/ 单个/ 因素/ 的/ 不同/ 取值/ 的/ 变化/ 情况/ ,/ 其它/ 因素/ 则/ 固定/ 不变/ ./ 此/ 方法/ 虽然/ 产生/ 的/ 测试用例/ 数量/ 较/ 少/ ,/ 但/ 它/ 存在/ 着/ 以下/ 局限性/ :/ 首先/ 变化/ 因素/ 的/ 选择/ 具有/ 随机性/ ,/ 且/ 取决于/ 人/ 的/ 主观/ 判断/ ;/ 其次/ 当/ 因素/ 个数/ 比较/ 多时/ ,/ 不能/ 有效/ 地/ 覆盖/ 那些/ 固定/ 因素/ 之间/ 的/ 取值/ 组合/ 情况/ ,/ 而/ 这些/ 组合/ 情况/ 却是/ 数量/ 众多/ 的/ ./ 此/ 方法/ 通常/ 适用/ 于/ 某/ 一/ 因素/ 在/ 执行/ 时起/ 决定/ 作用/ 的/ 情形/ ./ (/ 3/ )/ 正交/ 试验/ 设计/ 正交/ 试验/ 设计/ 是/ 一种/ 基于/ 正交/ 表/ 的/ 试验/ 方法/ [/ 4/ ]/ ./ 正交/ 表是/ 一个二维/ 阵列/ ,/ 其行/ 表示/ 测试用例/ ,/ 每/ 一列/ 表示/ 一个/ 因素/ ,/ 行列/ 交叉点/ 表示/ 因素/ 的/ 某个/ 取值/ ./ 通常/ 用/ Ln/ (/ qs/ )/ 表示/ 一个/ 等/ 水平/ 的/ 正交/ 表/ ,/ 其中/ L/ 表示/ 正交/ 设计/ ,/ n/ 为/ 测试用例/ 数/ ,/ 即行数/ ;/ q/ 表示/ 水平/ 数/ ;/ s/ 为/ 因素/ 个数/ ,/ 即列数/ ./ 例如/ L9/ (/ 34/ )/ 表示/ 有/ 4/ 个/ 因素/ ,/ 每个/ 因素/ 有/ 3/ 个/ 水平/ ,/ 则/ 需要/ 安排/ 9/ 次/ 试验/ 即可/ ./ 正交/ 试验/ 设计/ 的/ 优点/ 是/ 满足/ 配对/ 组合/ 覆盖/ 的/ 要求/ ,/ 有/ 大量/ 已知/ 的/ 表可/ 直接/ 使用/ ;/ 其/ 局限性/ 是/ 等/ 概率/ 覆盖/ 使得/ 测试用例/ 的/ 数量/ 增多/ ;/ 此/ 方法/ 适用/ 于/ 水平/ 数不多且/ 能够/ 构造/ 出/ 相应/ 的/ 正交/ 表/ 的/ 情形/ ./ 软件测试/ 来说/ ,/ 通常/ 是/ 不/ 可行/ 的/ ./ (/ 4/ )/ 均匀/ 试验/ 设计/ 均匀/ 设计/ 是/ 由/ 中国科学院/ 应用/ 数学/ 研究所/ 方/ 开泰/ 教授/ 和/ 中国科学院/ 王元/ 院士/ 共同/ 提出/ 的/ 一种/ 试验/ 设计/ 方法/ [/ 5/ ]/ ./ 均匀/ 设计/ 的/ 基本/ 思想/ 就是/ 在/ 确定/ 试验/ 布点/ 时/ ,/ 只/ 考虑/ 试验/ 点/ 的/ “/ 均匀/ 分散/ ”/ 性/ ,/ 而/ 不/ 考虑/ 其/ “/ 整齐/ 可比/ ”/ 性/ ,/ 从而/ 大大减少/ 了/ 试验/ 次数/ ./ 均匀/ 设计/ 的/ 试验/ 方案/ 是/ 通过/ 均匀/ 设计/ 表来/ 实现/ 的/ ,/ 通常/ 表示/ 为/ Un/ (/ qs/ )/ ,/ 其中/ U/ 表示/ 均匀/ 设计/ ,/ n/ 为/ 测试用例/ 数/ ,/ 即行数/ ;/ q/ 表示/ 水平/ 数/ ;/ s/ 为/ 因素/ 个数/ ,/ 即列数/ ./ 在/ 实施/ 均匀/ 设计/ 时/ ,/ 首先/ 根据/ 因素/ 数/ 和/ 水平/ 数/ 选择/ 合适/ 的/ 均匀/ 设计/ 表/ ,/ 然后/ 填写/ 该表/ ,/ 以/ 生成/ 相对/ 应/ 的/ 参数/ 数据/ 组合/ 表/ ./ 当/ 各个/ 因素/ 的/ 水平/ 数/ 不/ 完全相同/ 时/ ,/ 称之为/ 混合/ 水平/ 的/ 均匀/ 设计/ ./ 对于/ 这种/ 情形/ ,/ 可以/ 采用/ 两种/ 方法/ 加以解决/ :/ 一是/ 直接/ 选用/ 合适/ 的/ 混合/ 水平/ 均匀/ 设计/ 表/ ;/ 二是/ 采用/ 拟水平/ 技术/ ./ 此/ 方法/ 的/ 优点/ 是/ 测试用例/ 数量/ 比较/ 少/ ,/ 而/ 其/ 局限性/ 是/ 不能/ 保证/ 满足/ 配对/ 组合/ 覆盖/ ,/ 并且/ 所/ 需要/ 的/ 均匀/ 设计/ 表/ 可能/ 不/ 存在/ ./ 2.2/ 直接/ 搜索/ 方法/ (/ 1/ )/ AETG/ 方法/ AETG/ (/ AutomaticEfficientTestGenerator/ )/ [/ 6/ ]/ Page3/ 是/ 美国贝尔实验室/ 的/ Cohen/ 和/ Dalal/ 等/ 人/ 提出/ 的/ 一种/ 启发式/ 两/ 两/ 组合/ 覆盖/ (/ 也/ 可/ 扩展/ 至/ n/ 维/ 组合/ 覆盖/ )/ 测试数据/ 生成/ 工具/ ./ 其/ 基本/ 思想/ 是/ 每次/ 生成/ 一个/ 测试用例/ ,/ 以/ 覆盖/ 最多/ 的/ 未/ 被/ 覆盖/ 的/ 配对/ 组合/ ,/ 直到/ 覆盖/ 所有/ 的/ 配对/ 组合/ ./ 因此/ 该/ 方法/ 实际上/ 是/ 一种/ 贪心/ 算法/ ./ (/ 2/ )/ IPO/ 方法/ IPO/ (/ In/ -/ Parameter/ -/ Order/ )/ 方法/ [/ 7/ ]/ ,/ 是/ 由/ 美国/ 北卡罗来纳/ 大学/ 计算机系/ 的/ Lei/ 和/ Tai/ 提出/ 的/ 一种/ 启发式/ 配对/ 组合/ 覆盖/ 生成/ 算法/ ,/ 也/ 是/ 一种/ 贪心/ 算法/ ./ 其/ 基本/ 思想/ 是/ 首先/ 生成/ 任意/ 两个/ 参数/ 的/ 所有/ 配对/ ,/ 然后/ 依次/ 进行/ 水平/ 扩展/ 和/ 垂直/ 扩展/ ./ 水平/ 扩展/ 即/ 每次/ 新/ 加入/ 一个/ 参数/ ,/ 并/ 确定/ 其/ 取值/ ;/ 在/ 水平/ 扩展/ 之后/ ,/ 通过/ 垂直/ 扩展/ 来/ 补充/ 尚未/ 被/ 覆盖/ 的/ 配对/ 组合/ ./ 它/ 与/ AETG/ 的/ 根本/ 区别/ 是/ 它/ 不是/ 同时/ 考虑/ 所有/ 参数/ ,/ 而是/ 每次/ 渐进/ 考虑/ 一个/ 参数/ ./ (/ 3/ )/ 解/ 空间/ 树/ 方法/ 文献/ [/ 8/ ]/ 提出/ 了/ 一种/ 新/ 的/ 启发式/ 配对/ 组合/ 覆盖/ 测试数据/ 生成/ 方法/ ,/ 称之为/ 基于/ 解/ 空间/ 树/ 模型/ 算法/ ./ 解/ 空间/ 树/ 的/ 第一层/ 树根/ 结点/ 有/ b1/ 个/ 分支/ ,/ 分别/ 表示/ 参数/ p1/ 的/ b1/ 个/ 取值/ ,/ 第/ 2/ 层/ 的/ 每个/ 树根/ 结点/ 有/ b2/ 个/ 分支/ ,/ 分别/ 表示/ 第/ 2/ 个/ 参数/ p2/ 有/ b2/ 个/ 取值/ ,/ 依次/ 类推/ ,/ 第/ n/ 层/ 的/ 每个/ 树根/ 结点/ 有/ bn/ 个/ 分支/ ,/ 分别/ 表示/ 第/ n/ 个/ 参数/ pn/ 有/ bn/ 个/ 取值/ ./ 这样/ 从/ 树根/ 开始/ 到/ 底层/ 叶/ 结点/ 的/ 所有/ 路径/ 即/ 构成/ 了/ 配对/ 覆盖/ 测试/ 集/ TSn/ ./ (/ 4/ )/ 人工智能/ 方法/ 采用/ 遗传算法/ (/ GA/ )/ 、/ 模拟退火/ 算法/ (/ SAA/ )/ 等/ 人工智能/ 方法/ 来/ 求解/ 配对/ 组合/ 覆盖/ 测试数据/ 生成/ 问题/ ,/ 也/ 是/ 近年来/ 学术界/ 的/ 一个/ 研究/ 方向/ ./ 该类/ 方法/ 的/ 典型/ 代表/ 有/ :/ 文献/ [/ 9/ ]/ 使用/ 模拟退火/ 算法/ 产生/ 交互/ 测试用例/ ,/ 其/ 过程/ 是/ 首先/ 任意/ 选择/ 一个/ 初始/ 可行/ 的/ 覆盖/ 矩阵/ 犛/ N/ ×/ K/ (/ N/ 为/ 初始/ 选择/ 的/ 测试用例/ 数/ ,/ K/ 为/ 因素/ 个数/ )/ ;/ 然后/ 改变/ 犛中/ 某个/ 元素/ 的/ 值/ ,/ 生成/ 犛/ ;/ 若/ cost/ (/ 犛/ )/ </ cost/ (/ 犛/ )/ ,/ 则/ 接受/ 犛/ ,/ 否则/ 按/ e/ -/ (/ cost/ (/ 犛/ )/ -/ cost/ (/ 犛/ )/ )/ // T/ 的/ 概率/ 接受/ 犛/ (/ 其中/ ,/ cost/ (/ )/ 为/ 未/ 覆盖/ 的/ n/ -/ way/ 组合/ 数/ ,/ T/ 为/ 控制/ 温度/ ,/ 其值/ 缓慢/ 变化/ T/ ·/ ·/ =/ α/ T/ (/ 0/ </ α/ </ 1/ )/ )/ ;/ 当/ cost/ (/ 犛/ )/ =/ 0/ 时/ ,/ 算法/ 停止/ ./ 该/ 方法/ 综合/ 考虑/ 了/ 运算/ 效率/ 和/ 运算/ 结果/ 之间/ 的/ 关系/ ,/ 但/ 只/ 对/ 规模较/ 小/ 的/ 组合/ 覆盖/ 问题/ 可行/ ,/ 当/ 3/ -/ way/ 覆盖/ 时/ 效果/ 即/ 欠佳/ ;/ 同时/ 初始/ 覆盖/ 矩阵/ 构造/ 困难/ ,/ 并且/ 较为/ 费时/ ./ Shiba/ 等/ 人/ [/ 10/ ]/ 提出/ 将/ 遗传算法/ 和/ 蚁/ 群/ 算法/ (/ AntColonyAlgorithm/ )/ 应用/ 于/ 组合/ 覆盖/ 测试数据/ 生成/ ./ 对于/ 遗传算法/ ,/ 该文/ 描述/ 了/ 编码/ 、/ 适应性/ 函数/ 、/ 遗传操作/ 等/ 在/ 组合/ 覆盖/ 问题/ 中/ 的/ 可/ 应用性/ ,/ 但/ 并未/ 进行/ 详细/ 的/ 讨论/ ,/ 也/ 没有/ 给出/ 具体/ 的/ 实现/ 算法/ ;/ 对于/ 蚁群/ 算法/ ,/ 实际上/ 是/ 一种/ 图论/ 遍历/ 方法/ ,/ 即/ 每次/ 选择/ 启发/ 值/ 和/ 生物/ 信息/ 值高/ 的/ 线路/ 作为/ 测试用例/ ./ 2.3/ 代数/ 方法/ (/ 1/ )/ 正交/ 矩阵/ 方法/ 正交/ 矩阵/ 方法/ 的/ 理论/ 基础/ 是/ 拉丁/ 方/ 和/ 正交/ 拉丁/ 方/ [/ 11/ ]/ ./ 对于/ r/ 个/ n/ 阶/ 的/ 正交/ 拉丁/ 方/ ,/ 可以/ 构成/ 一个/ 复合矩阵/ (/ 即/ 正交/ 矩阵/ )/ ,/ 矩阵/ 中/ 的/ 元素/ 是/ 由/ r/ 个/ n/ 阶/ 方阵/ 的/ 对应/ 元素/ 构成/ 的/ 数组/ ,/ 则/ 根据/ 该/ 矩阵/ ,/ 可以/ 得到/ 有/ r/ +/ 2/ 个/ 参数/ 、/ 每个/ 参数/ 有/ n/ 个/ 取值/ 的/ 配对/ 覆盖/ 组合/ 测试用例/ ./ 通常/ 将/ 正交/ 矩阵/ 表示/ 为/ 犗/ 犃/ λ/ (/ N/ ;/ t/ ,/ k/ ,/ v/ )/ [/ 9/ ]/ ,/ 该/ 矩阵/ 是/ N/ ×/ k/ 矩阵/ ,/ 任何/ N/ ×/ t/ 的/ 子阵/ 中/ t/ 列/ 的/ 所有/ 组合/ 都/ 出现/ λ/ 次/ ,/ 对于/ 软件测试/ 而言/ ,/ 只/ 需/ λ/ =/ 1/ 即可/ ./ 也就是说/ ,/ N/ 表示/ 组合/ 测试用例/ 的/ 个数/ ,/ t/ 表示/ t/ -/ way/ 覆盖/ ,/ k/ 表示/ 参数/ 的/ 个数/ ,/ v/ 表示/ 各/ 参数/ 的/ 取值/ 个数/ ./ Bose/ [/ 12/ ]/ 最早/ 提出/ 了/ 犗/ 犃/ (/ n2/ ;/ 2/ ,/ n/ +/ 1/ ,/ n/ )/ 的/ 构造方法/ ,/ 在/ 此基础/ 上/ ,/ Bush/ [/ 13/ ]/ 又/ 进一步/ 构造/ 出/ 了/ 正交/ 矩阵/ 犗/ 犃/ (/ nd/ ;/ d/ ,/ n/ +/ 1/ ,/ n/ )/ ./ 正交/ 矩阵/ 方法/ 有/ 以下/ 局限性/ :/ (/ 1/ )/ 并/ 不是/ 对于/ 所有/ 的/ 因素/ 和/ 水平/ 组合/ 情形/ ,/ 都/ 存在/ 正交/ 矩阵/ ,/ 特别/ 是/ 对于/ 存在/ 的/ n/ 阶/ (/ 参数/ 的/ 取值/ 个数/ )/ 的/ 正交/ 拉丁/ 方/ (/ 最多/ 有/ n/ -/ 1/ 个/ )/ ,/ 通过/ 构造/ 正交/ 矩阵/ ,/ 最/ 多/ 可以/ 解决/ n/ +/ 1/ (/ n/ -/ 1/ +/ 2/ )/ 个/ 参数/ 的/ 配对/ 组合/ 覆盖/ 测试数据/ 生成/ 问题/ ;/ (/ 2/ )/ 任/ 两个/ 因素/ 的/ 各/ 水平/ 组合/ 等/ 概率/ 出现/ ,/ 这/ 对于/ 试验/ 设计/ 是/ 必须/ 的/ ,/ 但/ 对于/ 软件测试/ 并/ 不是/ 必须/ 的/ ,/ 造成/ 了/ 测试用例/ 数量/ 的/ 增长/ ;/ (/ 3/ )/ 正交/ 矩阵/ 的/ 构造/ 比较复杂/ ,/ 工作量/ 大/ ;/ (/ 4/ )/ 要求/ 各/ 参数/ 的/ 取值/ 个数/ 相同/ ,/ 使/ 其/ 不/ 具有/ 应用/ 的/ 广泛性/ ./ 此/ 方法/ 适用/ 于阶数/ (/ 取值/ 个数/ )/ 为/ 素数/ 幂/ 的/ 情形/ ./ (/ 2/ )/ 整数/ 线性规划/ 方法/ 根据/ 运筹学/ 的/ 基本原理/ ,/ 可以/ 采用/ {/ 0/ ,/ 1/ }/ 整数/ 规划/ 方法/ 来/ 求解/ 配对/ 组合/ 覆盖/ 问题/ [/ 14/ -/ 15/ ]/ ./ 其/ 基本/ 思想/ 是/ :/ 设有/ k/ 个/ 因素/ ,/ 每个/ 因素/ 有/ n/ 个/ 取值/ ,/ 其/ 测试用例/ 总数/ 为/ T/ =/ nk/ ,/ 分别/ 用/ xi/ (/ i/ =/ 1/ ,/ …/ ,/ T/ )/ 表示/ ;/ 配对/ 组合/ 数目/ 为/ T/ =/ k/ (/ )/ 2n2/ ,/ 构造/ 整数/ 线性规划/ 表/ ,/ 该表/ 共有/ k/ (/ )/ 2n2/ +/ 1/ 行/ ,/ nk/ +/ 1/ 列/ ./ 其中/ ,/ 令/ xj/ =/ 1/ ,/ j/ =/ 0/ ,/ 1/ ,/ …/ ,/ T/ -/ 1/ ,/ 测试用例/ j/ 被/ 选中/ 烄/ xj/ =/ 0/ ,/ j/ =/ 0/ ,/ 1/ ,/ …/ ,/ T/ -/ 1/ ,/ 测试用例/ j/ 未/ 被/ 选中/ aij/ =/ 1/ ,/ i/ =/ 0/ ,/ 1/ ,/ …/ ,/ T/ -/ 1/ ,/ 第/ i/ 个成/ 对/ 组合/ 被/ 测试/ 烅/ aij/ =/ 0/ ,/ i/ =/ 0/ ,/ 1/ ,/ …/ ,/ T/ -/ 1/ ,/ 第/ i/ 个成/ 对/ 组合/ 未/ 被/ 烆/ Page4j/ =/ 0/ 则/ 已/ 选择/ 的/ 所有/ 测试用例/ 为/ ∑/ T/ -/ 1/ 被/ 覆盖/ 的/ 次数/ 为/ ∑/ T/ -/ 1/ 标/ ,/ ∑/ T/ -/ 1aijxj/ 必须/ 大于/ 或/ 等于/ 1/ ,/ 即/ 每个/ 成/ 对/ 组合/ 至少/ 被/ 覆盖/ 1/ 次/ ./ 因此/ ,/ 就/ 将/ 成/ 对/ 组合/ 覆盖/ 转化/ 为/ 整数/ 线性规划/ 求解/ 问题/ ./ 其/ 约束条件/ 为/ ∑/ T/ -/ 10/ ,/ 1/ ,/ …/ ,/ T/ -/ 1/ ,/ 目标/ 函数/ 为/ Min/ ∑/ T/ -/ 1/ 该/ 方法/ 虽然/ 构思/ 较为/ 巧妙/ ,/ 但/ 实际/ 求解/ 时/ ,/ 例如/ 有/ 5/ 个/ 参数/ ,/ 每个/ 参数/ 取/ 3/ 个值/ ,/ 则/ 求解/ 时间/ 就/ 超过/ 6.5/ 个/ 小时/ [/ 14/ ]/ ,/ 因此/ 该/ 方法/ 不/ 实用/ ./ (/ 3/ )/ 基于/ 正交/ 表/ 的/ 方法/ 日本/ 大阪/ 大学/ 的/ Kobayashi/ 和/ Tsuchiya/ 等/ 人/ [/ 16/ ]/ 提出/ 了/ 一种/ 基于/ 正交/ 表/ 的/ 代数/ 方法/ ./ 该/ 方法/ 的/ 基本/ 思想/ 是/ 通过/ 正交/ 表/ 、/ 具有/ 块/ 结构/ 的/ 表/ 和/ 通过/ 近似/ 方法/ 构成/ 出来/ 的/ 混合/ 覆盖/ 表等/ 基本成分/ 之间/ 的/ 交叉/ 重叠/ 算法/ 来/ 构造/ 新/ 的/ 配对/ 组合/ 覆盖/ 表/ [/ 8/ ]/ ./ 由于/ 正交/ 表和块/ 结构/ 的/ 表/ 都/ 是/ 通过/ 有限/ 域来/ 构造/ 的/ ,/ 因此/ 该/ 方法/ 主要/ 考虑/ 的/ 是/ 当/ 因素/ 的/ 取值/ 个数/ d/ 为/ 素数/ 幂/ 的/ 情形/ ,/ 对于/ 不是/ 素数/ 幂/ 的/ 情况/ ,/ 则/ 选择/ 大于/ d/ 且/ 和/ d/ 距离/ 最小/ 的/ 素数/ 幂/ 做/ 近似/ 处理/ ./ 但/ 某些/ 情况/ 下/ ,/ 近似/ 处理/ 的/ 误差/ 是/ 比较/ 大/ 的/ ./ (/ 4/ )/ TConfig/ 方法/ [/ 13/ -/ 14/ ]/ 加拿大/ 渥太华/ 大学/ 的/ Williams/ 提出/ 了/ 用/ 覆盖/ 矩阵/ (/ 覆盖/ 矩阵/ 犆/ 犃/ 与/ 正交/ 矩阵/ 犗/ 犃/ 的/ 区别/ 在于/ 前者/ 只/ 要求/ 各/ 配对/ 组合/ 出现/ 1/ 次/ ,/ 但/ 不/ 要求/ 等/ 概率/ 出现/ ,/ 而/ 后者/ 则/ 需要/ 等/ 概率/ 出现/ )/ 方法/ 构造/ 满足/ 成/ 对/ 覆盖/ 要求/ 测试用例/ 的/ 算法/ ./ 该/ 算法/ 以/ 正交/ 矩阵/ 为/ 基础/ ,/ 采用/ 递归/ 构造方法/ ,/ 通过/ 不断扩大/ 因素/ 的/ 值来/ 构造/ 覆盖/ 矩阵/ ./ TConfig/ 方法/ 具有/ 代数/ 推导/ 的/ 精确性/ ,/ 并且/ 已有/ 了/ 相应/ 的/ 自动化/ 工具/ 的/ 支撑/ ./ 但/ 该/ 方法/ 的/ 局限性/ 在于/ 由于/ 它/ 使用/ 的/ 是/ 添加/ 构造/ 块/ 的/ 模式/ ,/ 而/ 构造/ 块/ 是/ 基于/ 正交/ 矩阵/ 的/ ,/ 因此/ 它/ 适用/ 于/ 各个/ 因素/ 的/ 水平/ 数/ 相同/ 的/ 情形/ ,/ 对于/ 其它/ 情况/ 则/ 采取/ 比较/ 粗糙/ 的/ 近似/ 方法/ ./ 2.4/ 小结/ 由于/ 配对/ 组合/ 覆盖/ 测试数据/ 生成/ 问题/ 是/ NP/ 问题/ ,/ 在/ 某些/ 情况/ 下/ 只能/ 得到/ 近似/ 最优/ 解/ ,/ 因此/ 需要/ 根据/ 实际/ 情况/ 灵活/ 选择/ 不同/ 的/ 方法/ ./ 试验/ 设计/ 方法/ 的/ 技术/ 基础/ 是/ 已经/ 存在/ 的/ 正交/ 设计/ 表/ 和/ 均匀/ 设计/ 表/ ,/ 但/ 对于/ 很多/ 情况/ 仍然/ 没有/ 构造/ 出/ 相应/ 的/ 试验/ 设计/ 表/ ,/ 因此/ 该/ 方法/ 实际/ 应用/ 的/ 局限性/ 较大/ ./ 而/ 直接/ 搜索/ 方法/ 与/ 代数/ 方法/ 相/ 比较/ ,/ 具有/ 以下/ 优点/ :/ (/ 1/ )/ 灵活性/ 强/ ./ 对于/ 增加/ 或/ 减少/ 因素/ 以及/ 因素/ 取值/ 个数/ 的/ 变化/ 等/ 情况/ ,/ 直接/ 搜索/ 方法/ 可以/ 通过/ 在/ 原来/ 求解/ 结果/ 的/ 基础/ 上/ 进行/ 适当/ 调整/ 与/ 附加/ 运算/ 即可/ 得到/ 新解/ ,/ 而/ 代数/ 方法/ 一般/ 则/ 需要/ 依据/ 新/ 的/ 参数信息/ 重新/ 进行/ 计算/ ;/ (/ 2/ )/ 运算/ 简便/ ./ 直接/ 搜索/ 方法/ 大多/ 是/ 通过/ 基础/ 的/ 组合/ 数学方法/ 即可/ 得到/ 解/ ,/ 而/ 代数/ 方法/ 通常/ 需要/ 复杂/ 的/ 矩阵/ 运算/ 方/ 能/ 完成/ ,/ 并且/ 计算/ 量/ 较大/ ;/ (/ 3/ )/ 适应性/ 广/ ./ 直接/ 搜索/ 方法/ 可以/ 适用/ 于/ 各种因素/ 与/ 水平/ 相/ 组合/ 的/ 情形/ ,/ 但/ 代数/ 方法/ 由于/ 受到/ 正交/ 矩阵/ 的/ 限制/ ,/ 不/ 具有/ 通用性/ ,/ 只/ 对/ 某些/ 特定/ 类型/ 的/ 因素/ 和/ 水平/ 情形/ 才/ 可解/ ,/ 目前/ 对于/ 水平/ 为/ 素数/ 幂/ 的/ 正交/ 矩阵/ 有着/ 比较/ 好/ 的/ 构造方法/ ,/ 虽然/ 可以/ 通过/ 它/ 来/ 生成/ 新/ 的/ 覆盖/ 矩阵/ ,/ 但/ 与/ 最小/ 覆盖/ 矩阵/ 之间/ 通常/ 有/ 较大/ 的/ 误差/ ;/ (/ 4/ )/ 从/ 实现/ 原理/ 上/ 来看/ ,/ 直接/ 搜索/ 方法/ 比/ 代数/ 方法/ 更/ 贴近/ 于/ 软件测试/ 的/ 基本/ 思想/ ,/ 即用/ 尽可能少/ 的/ 测试用例/ 覆盖/ 尽可能/ 多/ 的/ 配对/ 组合/ ./ 在/ 直接/ 搜索/ 方法/ 中/ ,/ AETG/ 和/ IPO/ 是/ 两种/ 最为/ 经典/ 、/ 实际/ 应用/ 最为/ 广泛/ 的/ 配对/ 组合/ 覆盖/ 方法/ ./ 相对/ 于/ 其他/ 搜索/ 方法/ ,/ 贪心/ 算法/ 的/ 处理速度/ 是/ 最快/ 的/ ,/ 在/ 工业界/ 中/ 的/ 实用性/ 是/ 最强/ 的/ ,/ 并且/ 很多/ 贪心/ 算法/ 都/ 能/ 支持/ 部分/ 非/ 经典/ 的/ 组合/ 测试/ ./ 那么/ 在/ 继承/ 良好/ 执行/ 性能/ 的/ 前提/ 下/ ,/ 如何/ 尽可能/ 地/ 减少/ 测试用例/ 的/ 数量/ ,/ 从而/ 减少/ 测试/ 成本/ ,/ 是/ 一个/ 值得/ 深入研究/ 的/ 问题/ ./ 而/ AETG/ 和/ IPO/ 算法/ 在/ 生成/ 测试用例/ 时/ ,/ 均/ 具有/ 盲目性/ 和/ 随机性/ ,/ 未/ 从/ 整体/ 上/ 充分/ 地/ 考虑/ 所有/ 因素/ 的/ 各/ 水平/ 之间/ 的/ 组合/ 情形/ ,/ 造成/ 了/ 对/ 测试用例/ 数量/ 的/ 控制/ 效果/ 不佳/ ,/ 并且/ 难以/ 得出/ 规律性/ 、/ 指导性/ 的/ 结论/ ./ 为此/ ,/ 本文/ 在/ AETG/ 和/ IPO/ 方法/ 的/ 基础/ 上/ ,/ 分别/ 提出/ 了/ 改进/ 的/ 配对/ 组合/ 覆盖/ 测试数据/ 生成/ 算法/ ./ 3/ 改进/ 的/ AETG/ 算法/ 3.1/ 算法/ 的/ 基本/ 思想/ 改进/ 的/ AETG/ 算法/ 仍然/ 属于/ 贪心/ 算法/ ,/ 但/ 其/ 生成/ 参数值/ 的/ 策略/ 发生/ 了/ 变化/ ./ 原/ 算法/ 在/ 依据/ 配对/ 组合/ 生成/ 参数值/ 的/ 过程/ 中/ 所/ 存在/ 的/ 最大/ 问题/ 是/ 具有/ 一定/ 的/ 盲目性/ 和/ 随机性/ ,/ 进而/ 影响/ 到/ 了/ 测试用例/ 的/ 约/ 减/ 效果/ 及/ 算法/ 的/ 效率/ ./ 每/ 一组/ 测试用例/ 中首/ 参数/ 的/ 选择/ 对于/ 该组/ 测试用例/ 的/ 生成/ 具有/ 重要/ 的/ 影响/ ,/ 遵循/ 贪心/ 算法/ 中/ 最大/ 覆盖/ 的/ 原则/ ,/ 应当/ 将/ 所有/ 参数/ 的/ 各个/ 取值/ 进行/ 综合/ 考虑/ ,/ 得到/ 全局/ 最优/ 解/ 作为/ 首/ 参数/ ,/ 而/ 不是/ 随机/ 选择/ ,/ 这样/ 就/ 可以/ 尽早/ 地/ 覆盖/ 更/ 多/ 的/ 配对/ 组合/ ,/ 将/ 个别/ 的/ 未/ 覆盖/ 配对/ 进行/ 后续/ 处理/ ,/ 能够/ 更快/ 地/ 实现/ 全/ 配对/ 覆盖/ ;/ 对于/ 每/ 一组/ 测试用例/ 而言/ ,/ 某个/ 参数/ 取值/ 的/ 确定/ ,/ 也/ 应当/ 将/ 其/ 各个/ 水平/ 在/ 未/ 覆/ Page5/ 盖/ 配对/ 中/ 出现/ 的/ 次数/ 进行/ 综合/ 考查/ ,/ 即/ 不仅/ 要/ 考虑/ 其/ 与/ 已/ 确定/ 取值/ 的/ 参数/ 的/ 水平/ 的/ 组合/ 情况/ ,/ 也/ 要/ 考虑/ 其/ 与/ 未确定/ 取值/ 的/ 参数/ 的/ 水平/ 的/ 组合/ 情况/ ,/ 这样/ 才能/ 保证/ 每/ 一组/ 测试用例/ 真正/ 实现/ 对/ 最/ 多/ 配对/ 的/ 覆盖/ ./ 3.2/ 改进/ 点新/ AETG/ 算法/ 同原/ 算法/ 相比/ ,/ 主要/ 作/ 了/ 3/ 个/ 方面/ 的/ 改进/ ,/ 如表/ 1/ 所示/ ./ 改进/ 点/ 1/ 初始/ 时/ ,/ 各/ 参数/ 未/ 排序/ ,/ 2/ 每次/ 随机/ 选择/ 参数/ 作为/ 3/ 确定/ 新/ 参数值/ 时/ ,/ 只/ 执行/ 3.3/ 算法/ 描述/ 输入/ :/ k/ 个/ 参数/ ,/ 每个/ 参数/ 有/ li/ (/ 1/ / i/ / k/ )/ 个/ 取值/ ,/ 未/ 被/ 输出/ :/ 配对/ 组合/ 覆盖/ 测试用例/ 集/ PC/ 算法/ :/ 对/ k/ 个/ 参数/ 依其/ li/ (/ 1/ / i/ / k/ )/ 值/ 的/ 大小/ 进行/ 降序/ 排列/ ,/ 当/ 取值/ 个数/ 相同/ 时/ ,/ 按/ 字典/ 序/ 排列/ // // 将/ 取值/ 个数/ 多/ 的/ 参数/ 排/ 在/ 前面/ ,/ 使/ 其/ 能够/ 较快/ 地收/ s/ =/ 1/ ;/ WhileUP/ ≠/ / do/ {/ Ifs/ =/ =/ 1thendo/ {/ 选择/ 序列/ 中/ 第一个/ 参数/ p1/ 及其/ 一个/ 水平/ 值表/ 2/ 改进/ AETG/ 算法/ 与/ 原/ 算法/ 的/ 实验/ 比较/ 原/ AETG/ 算法/ 序号/ 1k/ =/ 4/ ,/ l1/ =/ l2/ =/ l3/ =/ l4/ =/ 32k/ =/ 5/ ,/ li/ =/ 3/ (/ 1/ / i/ / 5/ )/ 3k/ =/ 5/ ,/ li/ =/ 6/ (/ 1/ / i/ / 5/ )/ )/ 4k/ =/ 10/ ,/ li/ =/ 2/ (/ 1/ / i/ / 10/ )/ 5k/ =/ 13/ ,/ li/ =/ 3/ (/ 1/ / i/ / 13/ )/ 6k/ =/ 3/ ,/ l1/ =/ l2/ =/ 2/ ,/ l3/ =/ 37k/ =/ 6/ ,/ l1/ =/ 2/ ;/ l2/ =/ l5/ =/ 3/ ;/ 8k/ =/ 8/ ,/ l1/ =/ l5/ =/ 3/ ;/ l2/ =/ l7/ =/ 5/ ;/ 9k/ =/ 11/ ,/ l3/ =/ l5/ =/ 2/ ;/ l6/ =/ 5/ ;/ 10/ 注/ :/ k/ 为/ 因素/ 个数/ ,/ li/ (/ 1/ / i/ / k/ )/ 为/ 各/ 因素/ 的/ 水平/ 数/ ./ Ifs/ </ >/ 1thendo/ {/ 假设/ 参数/ p1/ ,/ …/ ,/ pj/ 的/ 值/ 已经/ 确定/ ,/ 对于/ 1/ / i/ / j/ ,/ pi/ 的/ 取值/ 为/ vi/ ,/ 则/ 按照/ 下面/ 的/ 方法/ 确定/ pj/ +/ 1/ 的/ 取值/ vj/ +/ 1/ :/ 首先/ 执行/ 向前/ 匹配/ ;/ // // 向前/ 匹配/ 将/ p1/ ,/ p2/ ,/ …/ ,/ pk/ 的/ 一组/ 取值/ 作为/ 一个/ 元素/ 加入/ UP/ =/ UP/ -/ {/ 加入/ pj/ +/ 1/ 所新/ 覆盖/ 的/ 配对/ 组合/ 集/ }/ ;/ s/ ++/ ;/ }/ EndwhileReturnPC/ ./ 3.4/ 实验/ 方案/ 与/ 结果/ 针对/ 等/ 水平/ 和/ 混合/ 水平/ 的/ 不同/ 情形/ ,/ 分别/ 采用/ 原/ AETG/ 算法/ 和/ 改进/ 的/ AETG/ 算法/ 进行/ 了/ 10/ 组/ 实验/ ,/ 生成/ 了/ 相应/ 的/ 测试用例/ ,/ 见表/ 2/ ./ Page63/ ./ 5/ 算法/ 分析/ 未/ 被/ 覆盖/ 的/ 配对/ 组合/ 集/ Uncover/ 的/ 初始/ 大小/ 为/ |/ Uncover/ |/ =/ C2/ 考虑/ 最/ 内层/ 的/ 循环/ 操作/ ,/ / Pi/ (/ 1/ / i/ / k/ )/ (/ P/ 表示/ 参数/ )/ ,/ 确定/ 其/ 每个/ 取值/ vj/ (/ vj/ ∈/ Pi/ )/ 所/ 覆盖/ 的/ Uncover/ 中/ 的/ 元素/ 的/ 个数/ 这一/ 操作/ 的/ 时间/ 复杂性/ 为/ O/ (/ |/ Uncover/ |/ )/ ,/ 因此/ 对于/ 一个/ 参数/ Pi/ 的/ 取值/ 的/ 确定/ 需/ 时间/ O/ (/ |/ Uncover/ |/ ×/ d/ )/ ,/ 故/ 在/ 一个/ 测试用例/ 中/ ,/ 确定/ 所有/ k/ 个/ 参数/ 的/ 取值/ 的/ 时间/ 复杂性/ 为/ O/ (/ |/ Uncover/ |/ ×/ d/ ×/ k/ )/ ,/ 由/ 文献/ [/ 17/ ]/ 可知/ ,/ 配对/ 组合/ 覆盖/ 的/ 测试用例/ 数/ 的/ 上界/ 是/ -/ log/ (/ k/ (/ k/ -/ 1/ )/ d2/ // 2/ )/ // log/ (/ 1/ -/ 1/ // d2/ )/ +/ 1/ ,/ 因此/ ,/ 确定/ 参数/ 取值/ 操作/ 阶段/ 的/ 时间/ 复杂性/ 为/ O/ (/ |/ Uncover/ |/ ×/ d/ ×/ k/ ×/ -/ log/ (/ k/ (/ k/ -/ 1/ )/ d2/ // 2/ )/ // log/ (/ 1/ -/ 1/ // d2/ )/ +/ 1/ )/ ./ 算法/ 在/ 执行/ 确定/ 参数/ 取值/ 操作/ 之前/ ,/ 首先/ 进行/ 了/ k/ 个/ 参数/ 的/ 排序/ ,/ 该/ 操作/ 耗时/ O/ (/ klogk/ )/ ,/ 因此/ 改进/ AETG/ 算法/ 的/ 总/ 时间/ 复杂性/ 为/ O/ (/ |/ Uncover/ |/ ×/ d/ ×/ k/ ×/ -/ log/ (/ k/ (/ k/ -/ 1/ )/ d2/ // 2/ )/ // log/ (/ 1/ -/ 1/ // d2/ )/ +/ 1/ +/ klogk/ )/ ,/ 即/ O/ (/ C2/ -/ log/ (/ k/ (/ k/ -/ 1/ )/ d2/ // 2/ )/ // log/ (/ 1/ -/ 1/ // d2/ )/ +/ 1/ +/ klogk/ )/ ./ 另一方面/ ,/ 该/ 算法/ 生成/ 配对/ 组合/ 覆盖/ 测试用例/ 集所/ 依赖/ 的/ 是/ 参数/ 个数/ 及/ 各/ 参数/ 的/ 取值/ 个数/ ,/ 在/ 实际/ 情况/ 中/ 这些/ 值/ 都/ 是/ 有限/ 的/ ,/ 即/ 未/ 被/ 覆盖/ 的/ 配对/ 组合/ 集/ UP/ 总能/ 执行/ 到/ 空集/ ,/ 因此/ 该/ 算法/ 是/ 能/ 终止/ 的/ ./ 4/ 改进/ 的/ IPO/ 算法/ 4.1/ 算法/ 的/ 基本/ 思想/ 改进/ IPO/ 算法/ 仍然/ 采用/ 逐个/ 考虑/ 各个/ 参数/ 的/ 递增/ 策略/ ./ 设有/ k/ 个/ 参数/ ,/ 每个/ 参数/ 有/ li/ (/ 1/ / i/ / k/ )/ 个/ 取值/ ,/ 则/ 满足/ 配对/ 覆盖/ 的/ 测试用例/ 的/ 下界/ 为/ max/ (/ li/ ×/ lj/ )/ (/ 1/ / i/ ./ j/ / k/ )/ ,/ 因此/ 按照/ 水平/ 数将/ 各/ 参数/ 进行/ 排序/ ,/ 可以/ 有效/ 提高/ 算法/ 的/ 执行/ 效率/ ;/ 根据/ 水平/ 数最多/ 的/ 两个/ 因素/ p1/ 、/ p2/ 建立/ 起/ 的/ 配对/ 组合/ 测试用例/ 集/ PC/ 的/ 基数/ 要/ 大于/ pi/ (/ i/ >/ 2/ )/ 的/ 水平/ 数/ ,/ 若/ 每次/ 加入/ 新/ 因素/ 后/ 都/ 进行/ 垂直/ 扩展/ ,/ 则/ 会/ 引入/ 大量/ 的/ 无关/ 值/ ,/ 不利于/ 后续/ 因素/ 的/ 加入/ ,/ 因此/ 应当/ 先/ 水平/ 扩展/ 至/ 所有/ 参数/ ,/ 再/ 进行/ 一次性/ 垂直/ 扩展/ ,/ 最大/ 限度/ 地/ 减少/ 无关/ 值/ ;/ 在/ 参数/ pi/ (/ 1/ / i/ / k/ )/ 的/ 水平/ 扩展/ 阶段/ ,/ 对于/ pi/ 之前/ 的/ 无关/ 值/ ,/ 考查/ 其/ 与/ pi/ 的/ 配对/ 覆盖/ 情况/ ,/ 用/ 未/ 覆盖/ 的/ 配对/ 值/ 取代/ 无关/ 值/ ;/ 在/ 参数/ pi/ (/ 1/ / i/ / k/ )/ 的/ 垂直/ 扩展/ 阶段/ ,/ 可以/ 将/ 其/ 看作/ 是/ AETG/ 算法/ 实施/ 的/ 初始/ 环境/ ,/ 采用/ 改进/ 的/ AETG/ 算法/ 可以/ 进一步/ 约/ 减/ 测试用例/ ./ 4.2/ 改进/ 点新/ IPO/ 算法/ 同原/ 算法/ 相比/ ,/ 主要/ 作/ 了/ 3/ 个/ 方面/ 的/ 改进/ ,/ 如表/ 3/ 所示/ ./ 改进/ 点原/ 算法/ 1/ 初始/ 时/ ,/ 各/ 参数/ 未/ 排序/ ,/ 2/ 针对/ 每个/ 参数/ ,/ 都/ 进行/ 3/ 在/ 垂直/ 扩展/ 阶段/ 处理/ 4.3/ 算法/ 描述/ 输入/ :/ p1/ …/ pn/ 共/ n/ 个/ 参数/ ,/ 每个/ 参数/ 的/ 取值/ 集合/ T1/ …/ Tn/ 输出/ :/ 配对/ 组合/ 覆盖/ 测试用例/ 集/ PC/ 算法/ :/ 对/ n/ 个/ 参数/ 依/ 其/ |/ Ti/ |/ (/ 1/ / i/ / n/ )/ 值/ 的/ 大小/ 进行/ 降序/ 排列/ ,/ 当/ 取值/ 个数/ 相同/ 时/ ,/ 按/ 字典/ 序/ 排列/ ;/ 对于/ 前/ 两个/ 参数/ p1/ ,/ p2/ ,/ 建立/ 配对/ 组合/ 测试用例/ 集/ PC/ ;/ PC/ =/ {/ (/ v1/ ,/ v2/ )/ |/ v1/ ∈/ T1/ ,/ v2/ ∈/ T2/ 分别/ 是/ 参数/ p1/ ,/ p2/ 的/ Ifn/ =/ =/ 2thenReturnPC/ ;/ // / 依次/ 加入/ 新/ 因素/ ,/ 只/ 考虑/ 水平/ 扩展/ ,/ 不/ 考虑/ 垂直/ // // 当/ 所有/ 因素/ 当/ 加入/ 后/ ,/ 进行/ 一次性/ 垂直/ 扩展/ PC/ =/ callIPO/ _/ V/ (/ PC/ ,/ UP/ )/ ;/ // // 垂直/ 扩展/ FunctionIPO/ _/ H/ (/ PC/ ,/ pi/ )/ {/ UP/ =/ {/ pi/ 和/ p1/ ,/ p2/ …/ pi/ -/ 1/ 的/ 各/ 参数/ 取值/ 所/ 构成/ 的/ 配/ s/ =/ min/ (/ |/ Ti/ |/ ,/ |/ PC/ |/ )/ ;/ forj/ =/ 1tosdo/ {/ Ifs/ =/ =/ |/ PC/ |/ thenReturn/ ;/ Page7/ }/ EndforUP/ =/ UP/ -/ {/ 扩展/ 后/ 所/ 新/ 覆盖/ 的/ 配对/ 组合/ }/ ;/ // // 当新/ 加入/ 参数/ pi/ 的/ 各/ 水平/ 值/ 都/ 已/ 追加/ 到/ |/ PC/ |/ 个测/ // // 试用/ 例后/ ,/ 对于/ pi/ 前面/ 的/ 元素/ pj/ (/ 1/ / j/ / i/ )/ 中/ 的/ 无/ // // 关值/ 做/ 处理/ Ifpi/ 是/ 最后/ 一个/ 参数/ ,/ then/ 用/ pj/ 值域/ 中/ 的/ 随机/ 值代/ Elseif/ (/ pj/ ./ w/ ,/ pi/ ./ u/ )/ 出现/ 在/ UP/ 中/ thenEndifReturn/ (/ PC/ ,/ UP/ )/ ;/ EndifEndfunction/ ./ FunctionIPO/ _/ V/ (/ PC/ ,/ UP/ )/ {/ PC/ =/ / ;/ 表/ 4/ 改进/ IPO/ 算法/ 与/ 原/ 算法/ 的/ 实验/ 比较/ 序号/ 1n/ =/ 4/ ,/ |/ Ti/ |/ =/ 7/ (/ 1/ / i/ / 4/ )/ 2n/ =/ 7/ ,/ |/ Ti/ |/ =/ 4/ (/ 1/ / i/ / 7/ )/ 3n/ =/ 7/ ,/ |/ Ti/ |/ =/ 2/ (/ 1/ / i/ / 7/ )/ 4n/ =/ 8/ ,/ |/ Ti/ |/ =/ 2/ (/ 1/ / i/ / 8/ )/ 5n/ =/ 10/ ,/ |/ Ti/ |/ =/ 3/ (/ 1/ / i/ / 10/ )/ 6n/ =/ 3/ ,/ |/ T1/ |/ =/ |/ T2/ |/ =/ 2/ ,/ |/ T3/ |/ =/ 37n/ =/ 6/ ,/ |/ T1/ |/ =/ |/ T6/ |/ =/ 3/ ,/ |/ T2/ |/ =/ 2/ ;/ |/ T3/ |/ =/ 5/ ;/ 8n/ =/ 6/ ,/ |/ T1/ |/ =/ |/ T6/ |/ =/ 3/ ,/ |/ T2/ |/ =/ |/ T3/ |/ =/ 4/ ;/ 9n/ =/ 7/ ,/ |/ T1/ |/ =/ |/ T6/ |/ =/ 5/ ,/ |/ T2/ |/ =/ |/ T5/ |/ =/ 3/ ;/ 10n/ =/ 8/ ,/ |/ T1/ |/ =/ 2/ ,/ |/ T2/ |/ =/ 4/ ;/ |/ T3/ |/ =/ |/ T4/ |/ =/ 3/ ;/ 配对/ 总数/ 29433684112405162492385071674.5/ 算法/ 分析/ 未/ 被/ 覆盖/ 的/ 配对/ 组合/ 集/ Uncover/ 的/ 初始/ 大小/ 为/ |/ Uncover/ |/ =/ C2/ 在/ 水平/ 扩展/ 阶段/ ,/ 产生/ 的/ 测试用例/ 数为/ d2/ 个/ ,/ / Pi/ (/ 3/ / i/ / n/ )/ (/ P/ 表示/ 参数/ )/ ,/ 确定/ Pi/ 取值/ 这一/ 操作/ 最多/ 可/ 耗时/ O/ (/ |/ Uncover/ |/ ×/ (/ d2/ -/ 1/ )/ )/ (/ 最多/ 需/ 进行/ PC/ =/ PC/ ∪/ PC/ ;/ Endfunction/ ./ 4.4/ 实验/ 方案/ 与/ 结果/ 针对/ 等/ 水平/ 和/ 混合/ 水平/ 的/ 不同/ 实例/ ,/ 分别/ 采用/ 原/ IPO/ 算法/ 和/ 改进/ 的/ IPO/ 算法/ ,/ 进行/ 了/ 10/ 组/ 实验/ ,/ 生成/ 了/ 相应/ 的/ 测试用例/ ,/ 见表/ 4/ ./ d2/ -/ 1/ 次/ 不同/ 取值/ 能/ 覆盖/ Uncover/ 中/ 元素/ 个数/ 的/ 比较/ )/ ./ 因此/ 对于/ k/ 个/ 参数/ 而言/ ,/ 其/ 时间/ 复杂性/ 为/ O/ (/ |/ Uncover/ |/ ×/ (/ d2/ -/ 1/ )/ ×/ (/ n/ -/ 2/ )/ )/ ,/ 在/ 垂直/ 扩展/ 阶段/ ,/ 需要/ 新/ 生成/ 的/ 测试用例/ 数量/ 最多为/ -/ log/ (/ n/ (/ n/ -/ 1/ )/ d2/ // 2/ )/ // log/ (/ 1/ -/ 1/ // d2/ )/ +/ 1/ -/ d2/ 个/ ,/ 因此/ 确定/ 参数/ 取值/ 操作/ 阶段/ 的/ 时间/ 复杂性/ 为/ O/ (/ |/ Uncover/ |/ ×/ d/ ×/ Page8n/ ×/ (/ -/ log/ (/ n/ (/ n/ -/ 1/ )/ d2/ // 2/ )/ // log/ (/ 1/ -/ 1/ // d2/ )/ +/ 1/ -/ d2/ )/ )/ ./ 算法/ 在/ 执行/ 确定/ 参数/ 取值/ 操作/ 之前/ ,/ 首先/ 进行/ 了/ n/ 个/ 参数/ 的/ 排序/ ,/ 该/ 操作/ 耗时/ O/ (/ nlogn/ )/ ,/ 因此/ 改进/ 的/ IPO/ 算法/ 的/ 总/ 时间/ 复杂性/ 为/ O/ (/ |/ Uncover/ |/ ×/ (/ d2/ -/ 1/ )/ ×/ (/ n/ -/ 2/ )/ +/ |/ Uncover/ |/ ×/ d/ ×/ n/ ×/ (/ -/ log/ (/ n/ (/ n/ -/ 1/ )/ d2/ // 2/ )/ // log/ (/ 1/ -/ 1/ // d2/ )/ +/ 1/ -/ d2/ )/ +/ nlogn/ )/ ,/ 即/ nd2/ (/ d2n/ -/ 2d2/ -/ k/ +/ 2/ +/ dn/ )/ ×/ (/ -/ log/ (/ n/ (/ n/ -/ 1/ )/ O/ (/ C2d2/ // 2/ )/ // log/ (/ 1/ -/ 1/ // d2/ )/ +/ 1/ -/ d2/ )/ +/ nlogn/ )/ ./ 另一方面/ ,/ 该/ 算法/ 生成/ 配对/ 组合/ 覆盖/ 测试用例/ 集所/ 依赖/ 的/ 是/ 参数/ 个数/ 及/ 各/ 参数/ 的/ 取值/ 个数/ ,/ 在/ 实际/ 情况/ 中/ 这些/ 值/ 都/ 是/ 有限/ 的/ ,/ 即/ 在/ 水平/ 扩展/ 和/ 垂直/ 扩展/ 阶段/ 所/ 执行/ 的/ 循环/ 都/ 是/ 可以/ 终止/ 的/ ,/ 因此/ 该/ 算法/ 是/ 能/ 终止/ 的/ ./ 5/ 实验/ 结果/ 分析/ 及/ 结论/ 通过/ 以上/ 实验/ 可以/ 直观/ 地/ 看出/ ,/ 改进/ 的/ AETG/ 和/ IPO/ 算法/ 所/ 生成/ 的/ 测试用例/ 的/ 数量/ 在/ 总体/ 上要/ 优于/ 原/ 算法/ ,/ 虽然/ 在/ 某些/ 情形/ 下约/ 减/ 的/ 测试用例/ 数量/ 不是/ 很多/ ,/ 但/ 对于/ 软件测试/ 而言/ ,/ 即使/ 约简/ 数量/ 很少/ 的/ 测试用例/ ,/ 对/ 测试/ 成本/ 的/ 节约/ 和/ 效率/ 的/ 提高/ 也/ 具有/ 不可/ 忽视/ 的/ 作用/ [/ 18/ ]/ ./ 同时/ ,/ 由于/ 改进/ 算法/ 仍然/ 属于/ 贪心/ 算法/ ,/ 其/ 实际/ 执行/ 性能/ 的/ 优越性/ 得到/ 了/ 保证/ ./ 即/ 改进/ 算法/ 在/ 保持/ 原/ 算法/ 良好/ 执行/ 性能/ 的/ 基础/ 上/ ,/ 提高/ 了/ 计算结果/ 的/ 精确度/ ./ 另一方面/ ,/ 改进/ AETG/ 算法/ 直到/ 未/ 被/ 覆盖/ 配对/ 组合/ 集为/ 空才/ 停止/ 执行/ ,/ 而/ 改进/ IPO/ 算法/ 在/ 最终/ 的/ 垂直/ 扩展/ 阶段/ 也/ 直到/ 未/ 被/ 覆盖/ 配对/ 组合/ 集为/ 空才/ 停止/ 执行/ ,/ 因此/ 两种/ 算法/ 都/ 保证/ 了/ 所/ 生成/ 的/ 测试用例/ 实现/ 了/ 对/ 所有/ 配对/ 组合/ 的/ 覆盖/ ,/ 即/ 改进/ 算法/ 的/ 测试/ 覆盖/ 充分性/ 与/ 原/ 算法/ 是/ 等价/ 的/ ,/ 因此/ 其/ 揭示/ 错误/ 的/ 能力/ 也/ 保持/ 等价/ ./ 5.1/ 测试用例/ 数量/ 约/ 减/ 效果/ 根据上述/ 实验/ 结果/ ,/ 得到/ 两个/ 改进/ 算法/ 与/ 原/ 算法/ 对于/ 测试用例/ 数量/ 的/ 约/ 减/ 情况/ ,/ 如图/ 1/ 和/ 图/ 2/ 所示/ ./ 图/ 1/ 改进/ AETG/ 算法/ 与/ 原/ 算法/ 测试用例/ 数量/ 比较/ 图/ 2/ 改进/ IPO/ 算法/ 与/ 原/ 算法/ 测试用例/ 数量/ 比较/ 改进/ AETG/ 算法/ 在/ 等/ 水平/ 和/ 非/ 等/ 水平/ 两种/ 情形/ 对/ 测试用例/ 的/ 约/ 减/ 效果/ 见图/ 3/ 和/ 图/ 4/ ./ 图/ 4/ 非/ 等/ 水平/ 时/ 改进/ AETG/ 算法/ 的/ 约/ 减/ 效果/ 改进/ IPO/ 算法/ 在/ 等/ 水平/ 和/ 非/ 等/ 水平/ 两种/ 情形/ 对/ 测试用例/ 的/ 约/ 减/ 效果/ 见图/ 5/ 和/ 图/ 6/ ./ Page9/ 图/ 6/ 非/ 等/ 水平/ 时/ 改进/ IPO/ 算法/ 的/ 约/ 减/ 效果/ 通过/ 分析/ ,/ 可以/ 得出/ 下述/ 结论/ :/ 结论/ 1/ ./ 对于/ AETG/ 算法/ ,/ 当/ 满足/ 等/ 水平/ 情形/ 时/ ,/ 水平/ 数越/ 多/ ,/ 则/ 改进/ 算法/ 与/ 原/ 算法/ 相比/ 对/ 测试用例/ 数量/ 的/ 约/ 减/ 效果/ 越/ 明显/ ,/ 因素/ 数越/ 多/ ,/ 约/ 减/ 效果/ 越/ 明显/ ;/ 当/ 满足/ 非/ 等/ 水平/ 时/ ,/ 因素/ 数越/ 多/ ,/ 则/ 约/ 减/ 效果/ 越/ 明显/ ./ 结论/ 2/ ./ 对于/ IPO/ 算法/ ,/ 当/ 满足/ 等/ 水平/ 情形/ 时/ ,/ 因素/ 数越/ 多/ ,/ 约/ 减/ 效果/ 越/ 明显/ ,/ 水平/ 数越/ 少/ ,/ 则/ 约/ 减/ 效果/ 越/ 明显/ :/ 当/ 满足/ 非/ 等/ 水平/ 时/ ,/ 各/ 因素/ 水平/ 相差/ 越小/ ,/ 或/ 各/ 因素/ 的/ 水平/ 总数/ 越/ 多/ ,/ 则/ 约/ 减/ 效果/ 越/ 明显/ ,/ 因素/ 数越/ 多/ ,/ 约/ 减/ 效果/ 越/ 明显/ ./ 5.2/ 测试用例/ 数/ 与/ 配对/ 总数/ 的/ 关系/ 通过/ 对图/ 7/ ~/ 10/ 进行/ 分析/ ,/ 可以/ 得出/ 如下/ 结论/ :/ 结论/ 3/ ./ 对于/ AETG/ 算法/ ,/ 当/ 满足/ 等/ 水平/ 情形/ 时/ ,/ 在/ 一般/ 情况/ 下/ ,/ 配对/ 总数/ 增长/ ,/ 则/ 测试用例/ 的/ 数量/ 也/ 增长/ ,/ 二者/ 成正比/ 关系/ ;/ 当/ 满足/ 非/ 等/ 水平/ 时/ ,/ 测试用例/ 数/ 与/ 配对/ 总数/ 无/ 固定/ 的/ 正/ 反比/ 关系/ ,/ 测试用例/ 的/ 数量/ 关键/ 取决于/ 因素/ 水平/ 的/ 个数/ ./ 结论/ 4/ ./ 对于/ IPO/ 算法/ ,/ 当/ 满足/ 等/ 水平/ 情形/ 时/ ,/ 测试用例/ 数/ 与/ 配对/ 总数/ 无/ 固定/ 的/ 正/ 反比/ 关系/ ,/ 测试用例/ 的/ 数量/ 关键/ 取决于/ 因素/ 水平/ 的/ 个数/ ;/ 当/ 满足/ 非/ 等/ 水平/ 时/ ,/ 在/ 一般/ 情况/ 下/ ,/ 配对/ 总数/ 增长/ ,/ 则/ 测试用例/ 的/ 数量/ 也/ 增长/ ,/ 二者/ 成正比/ 关系/ ./ 5.3/ 测试用例/ 数/ 与/ 因素/ 数/ 水平/ 数/ 的/ 关系/ 依据/ 图/ 1/ ~/ 图/ 6/ ,/ 从/ 另/ 一个/ 角度/ 进行/ 分析/ ,/ 即可/ 得到/ 改进/ 算法/ 生成/ 的/ 测试用例/ 数/ 与/ 不同/ 因素/ 数/ 水平/ 数/ 组合/ 之间/ 的/ 关系/ ,/ 有/ 以下/ 结论/ :/ 结论/ 5/ ./ 对于/ AETG/ 算法/ ,/ 当/ 满足/ 等/ 水平/ 情形/ 时/ ,/ 首先/ 考虑/ 水平/ 数/ ,/ 水平/ 数越/ 少/ ,/ 则/ 生成/ 的/ 测试用例/ 越/ 少/ ,/ 当/ 水平/ 数/ 相同/ 时/ ,/ 因素/ 数越/ 少/ ,/ 则/ 测试用例/ Page10/ 越少/ ;/ 当/ 满足/ 非/ 等/ 水平/ 时/ ,/ 不同/ 水平/ 的/ 个数/ 越/ 少/ (/ 即越/ 接近/ 于/ 等/ 水平/ )/ ,/ 测试用例/ 越/ 少/ ,/ 当/ 不同/ 水平/ 的/ 个数/ 相同/ 时/ ,/ 因素/ 数越/ 多/ ,/ 则/ 测试用例/ 越多/ ./ 结论/ 6/ ./ 对于/ IPO/ 算法/ ,/ 当/ 满足/ 等/ 水平/ 情形/ 时/ ,/ 水平/ 数/ 增多/ ,/ 则/ 生成/ 的/ 测试用例/ 明显/ 增多/ ,/ 当/ 因素/ 数/ 相同/ 时/ ,/ 水平/ 数/ 微小/ 变化/ ,/ 则/ 测试用例/ 将/ 大幅/ 增长/ ,/ 而/ 当/ 水平/ 数/ 相同/ 时/ ,/ 因素/ 数/ 小幅/ 增加/ ,/ 则/ 测试用例/ 也/ 小幅/ 增加/ ;/ 当/ 满足/ 非/ 等/ 水平/ 时/ ,/ 在/ 一般/ 情形/ 下/ ,/ 各/ 因素/ 的/ 水平/ 总数/ 越/ 多/ ,/ 则/ 测试用例/ 也/ 越/ 多/ ./ 6/ 实例/ 验证/ 在/ 对/ 某/ 遥控/ 软件/ [/ 19/ ]/ 的/ 测试/ 过程/ 中/ ,/ 分别/ 应用/ 原/ AETG/ 、/ IPO/ 算法/ 以及/ 改进/ 的/ AETG/ 和/ IPO/ 算法/ 生成/ 了/ 测试用例/ ./ 该软件/ 的/ 定时/ 开/ 功能/ 的/ 执行/ 需要/ 3/ 个/ 参数/ :/ 时钟/ 类型/ 、/ 受控/ 设备/ 类型/ 以及/ 开启/ 时间/ ./ 其中/ 各/ 参数/ 的/ 类型/ 和/ 取值/ 如下/ :/ 时钟/ 类型/ :/ 字符/ 型/ ,/ 取值/ 为/ 系统/ 时钟/ 和/ 自定义/ 时钟/ ;/ 受控/ 设备/ 类型/ :/ 字符/ 型/ ,/ 取值/ 为/ 电器设备/ 、/ 工控/ 设备/ 、/ 包装/ 设备/ 、/ 检测/ 设备/ 和/ 照明设备/ ;/ 开启/ 时间/ :/ 数值/ 型/ ,/ 取值/ 为/ 10s/ ,/ 99s/ ,/ 100s/ ,/ 101s/ ,/ 600s/ ./ 上述/ 3/ 个/ 参数/ 的/ 配对/ 总数/ 为/ 45/ ,/ 使用/ 原/ AETG/ 方法/ 生成/ 了/ 28/ 个/ 测试用例/ ,/ 而/ 应用/ 改进/ 的/ AETG/ 算法/ 则/ 只/ 需要/ 25/ 个/ 测试用例/ ;/ 虽然/ 使用/ 原/ IPO/ 方法/ 和/ 改进/ 的/ IPO/ 算法/ 均/ 生成/ 了/ 25/ 个/ 测试用例/ ,/ 但/ 由于/ 后者/ 无需/ 进行/ 垂直/ 扩展/ ,/ 因此/ 生成/ 测试用例/ 的/ 速度/ 要/ 优于/ 前者/ ./ 使用/ 改进/ 算法/ 生成/ 的/ 测试用例/ 进行/ 实际/ 测试/ ,/ 取得/ 了/ 较/ 好/ 的/ 效果/ ./ 值得/ 指出/ 的/ 是/ ,/ 改进/ 的/ AETG/ 和/ IPO/ 算法/ 对于/ 参数/ 配对/ 组合/ 覆盖/ 测试/ 而言/ ,/ 各有/ 其/ 不同/ 的/ 适用/ 场合/ ./ 改进/ 的/ AETG/ 算法/ 适用/ 于/ 参数/ 个数/ 比较稳定/ 的/ 情形/ ,/ 而/ 对于/ 参数/ 个数/ 经常/ 变化/ 的/ 情形/ ,/ 则/ 使用/ 改进/ 的/ IPO/ 算法/ 效果/ 较/ 好/ ./ 7/ 犖/ -/ way/ 组合/ 覆盖/ 算法/ 按照/ Nair/ 等/ 人/ [/ 20/ ]/ 的/ 观点/ ,/ 对于/ 规模较/ 小/ 的/ 问题/ ,/ 配对/ 覆盖/ 就/ 能够/ 发现/ 大多数/ 错误/ ,/ 并且/ AETG/ 的/ 测试/ 实践/ 也/ 给予/ 了/ 证明/ [/ 21/ ]/ ./ Dunietz/ 等/ 人/ ①/ [/ 22/ ]/ 认为/ 3/ -/ way/ 覆盖/ 可以/ 有效/ 地/ 进行/ 代码/ 块/ 覆盖/ ,/ 而/ 更/ 高阶/ 的/ 覆盖/ 可以/ 实现/ 代码/ 路径/ 的/ 覆盖/ ./ 因此/ ,/ 在/ 前面/ 分析/ 了/ 配对/ 组合/ 覆盖/ 的/ 基础/ 上/ ,/ 有/ 必要/ 进一步/ 讨论/ n/ -/ way/ 组合/ 覆盖/ 测试数据/ 生成/ 问题/ ./ 目前/ 针对/ n/ -/ way/ 组合/ 覆盖/ 算法/ 的/ 研究/ 大多/ 是/ 以/ 现有/ 的/ 配对/ 组合/ 覆盖/ 算法/ 为/ 基础/ ,/ 将/ 其/ 进行/ 扩展/ ,/ 以/ 推广/ 到/ n/ -/ way/ 的/ 情形/ ./ 但/ 随着/ 参数/ 个数/ 的/ 增多/ ,/ 其/ 算法/ 的/ 时间/ 复杂性/ 也/ 急剧/ 增加/ ./ Williams/ [/ 14/ ]/ 在/ 其/ 博士论文/ 中/ 提出/ 可/ 采用/ 正交/ 阵列/ 犗/ 犃/ (/ ρ/ d/ ,/ n/ +/ 1/ ,/ n/ ,/ d/ )/ 作为/ 初始/ 构造/ 块/ ,/ 通过/ 水平/ 和/ 垂直/ 方向/ 的/ 矩阵/ 连接/ 运算/ 来/ 建立/ d/ -/ way/ 的/ 覆盖/ 测试用例/ 矩阵/ ./ 但/ 当/ 使用/ 犗/ 犃/ (/ 8/ ,/ 3/ ,/ 2/ ,/ 3/ )/ 时/ ,/ 实验/ 结果表明/ 丢失/ 了/ 72/ 个/ 3/ -/ way/ 覆盖/ 测试用例/ ,/ 造成/ 误差/ 较大/ ./ 因此/ 该/ 方法/ 需要/ 进一步/ 完善/ ./ 文献/ [/ 8/ ]/ 基于/ AETG/ 和/ IPO/ 方法/ ,/ 分别/ 将/ 其/ 推广/ 到/ n/ -/ way/ 组合/ 覆盖/ 的/ 情形/ ,/ 提出/ 了/ 两种/ n/ -/ way/ 组合/ 覆盖/ 测试数据/ 生成/ 算法/ ,/ 并/ 进行/ 了/ 实验/ 分析/ ./ 但是/ 随着/ 维数/ n/ 的/ 增长/ ,/ 该文/ 所/ 提出/ 的/ 两种/ 算法/ 生成/ 测试用例/ 所/ 耗费/ 的/ 时间/ 也/ 迅速/ 的/ 增长/ ,/ 因此/ 需要/ 进一步/ 研究/ 时间/ 复杂性/ 更/ 低/ 的/ 新/ 算法/ ./ Ahmed/ [/ 22/ ]/ 在/ 其/ 博士论文/ 中/ 系统地/ 讨论/ 了/ DOE/ 方法/ 在/ 软件测试/ 中/ 的/ 应用/ ,/ 但/ 该文/ 未/ 解决/ n/ -/ way/ 参数/ 交互/ 及/ 混合/ 水平/ 参数/ 组合/ 的/ 问题/ ./ 通过/ 分析/ 可以/ 看出/ ,/ 目前/ n/ -/ way/ 组合/ 覆盖/ 算法/ 存在/ 的/ 主要/ 问题/ 是/ 时间/ 复杂性/ 过高/ ,/ 因此/ 在/ 保证/ n/ -/ way/ 组合/ 覆盖/ 目标/ 的/ 前提/ 下/ ,/ 需要/ 降低/ 算法/ 的/ 时间/ 复杂性/ ./ 对于/ n/ -/ way/ 覆盖/ 问题/ ,/ 从/ 另/ 一个/ 角度/ ,/ 我们/ 可以/ 将/ k/ 个/ 参数/ 的/ 不同/ 取值/ 组合/ 看作/ 是/ 对/ k/ 个/ 数值/ 的/ 一个/ 编码/ 排序/ 问题/ ,/ 因此/ 可以/ 借鉴/ 遗传算法/ 的/ 基本/ 思想/ 来/ 解决/ 该/ 问题/ ./ 由于/ n/ -/ way/ 覆盖/ 问题/ 是/ 一个/ NPC/ 问题/ [/ 23/ ]/ ,/ 因此/ 在/ 使用/ 遗传算法/ 时/ ,/ 为了/ 提高/ 搜索/ 速度/ 和/ 精度/ ,/ 还/ 需要/ 采用/ 启发式/ 方法/ 加以/ 补充/ ./ 为此/ ,/ 本文/ 提出/ 了/ 一种/ 将/ 遗传算法/ 和/ AETG/ 方法/ 相结合/ 的/ 算法/ ,/ 较/ 好地解决/ 了/ n/ -/ way/ 覆盖/ 测试数据/ 生成/ 问题/ ,/ 并/ 通过/ 与/ 文献/ [/ 8/ ]/ 中/ 的/ 方法/ 进行/ 比较/ ,/ 说明/ 新/ 方法/ 的/ 时间/ 复杂性/ 得到/ 了/ 改善/ ./ 7.1/ 算法/ 描述/ 输入/ :/ 设有/ k/ 个/ 参数/ ,/ P1/ ,/ P2/ ,/ …/ ,/ Pi/ (/ 1/ / i/ / k/ )/ ,/ 每个/ 参/ 输出/ :/ n/ -/ way/ 组合/ 覆盖/ 测试用例/ 集/ T/ 算法/ :/ 确定/ 初始/ 种群/ 规模/ N/ =/ d/ ,/ 形式/ 为/ NS/ =/ SS/ …/ S/ (/ 1/ / S/ / d/ )/ ,/ Pi/ =/ S/ (/ 1/ / i/ / k/ )/ ;/ ①/ DunietzIS/ ,/ EhrlichWK/ ,/ SzablakBD/ ,/ MallowsCL/ ,/ Ian/ -/ Page11/ 将/ d/ 个/ 染色体/ 放入/ T/ 中/ ;/ 初始化/ 染色体/ 组/ 规模/ g/ =/ d/ ;/ GA/ :/ Whileg/ </ dndo/ {/ // // dn/ 是/ 使用/ 确定性/ 遗传算法/ 生/ EndwhileAETG/ :/ WhileUncover/ </ >/ / do/ {/ Endwhile7/ ./ 2/ 时间/ 复杂性/ 分析/ 文献/ [/ 8/ ]/ 中/ 提出/ 的/ n/ -/ way/ 覆盖/ 算法/ ,/ 是/ 将/ AETG/ 算法/ 由/ 配对/ 覆盖/ 扩展/ 而成/ 的/ ./ 下面/ 将/ 本文/ 所提/ n/ -/ way/ 覆盖/ 算法/ (/ GA/ -/ AETG/ )/ 的/ 时间/ 复杂性/ (/ 记为/ O/ (/ G/ )/ )/ 与/ 文献/ [/ 8/ ]/ 中/ n/ -/ way/ 覆盖/ 算法/ 的/ 时间/ 复杂性/ (/ 记为/ O/ (/ A/ )/ )/ 进行/ 分析/ 比较/ ./ Uncover/ =/ Cn/ 在/ GA/ -/ AETG/ 中/ ,/ 通过/ 先/ 执行/ GA/ 算法/ ,/ 使/ ×/ d2n/ +/ 1/ ×/ k/ ./ Uncover/ 得到/ 减少/ :/ 继续执行/ AETG/ 过程/ 后/ ,/ O/ (/ G/ )/ 为/ O/ (/ G/ )/ =/ (/ Uncover/ )/ 2/ ×/ k/ ×/ d/ =/ [/ Cn/ 则/ 时间/ 复杂性/ 减少/ 量/ 为/ O/ (/ A/ )/ -/ O/ (/ G/ )/ =/ (/ Cnd3/ )/ 操作/ ,/ 造成/ 新/ 增加/ 的/ 时间/ 复杂性/ 为/ 只要/ 证明/ O/ (/ G/ )/ >/ O/ (/ G/ )/ 即可/ ./ 变异/ 操作/ 均/ 要/ 进行/ 两个/ 染色体/ 适应/ 值/ 的/ 比较/ )/ ./ 另一方面/ ,/ 由于/ 在/ GA/ -/ AETG/ 中/ 首先/ 执行/ GAO/ (/ G/ )/ =/ Cn/ 因为/ n/ / 2/ ,/ 所以/ O/ (/ A/ )/ -/ O/ (/ G/ )/ / (/ Cn/ 下面/ 采用/ 数学/ 归纳法/ 加以/ 证明/ ./ 当/ n/ =/ 2/ 时/ :/ O/ (/ G/ )/ =/ (/ C2/ 因为/ k/ / 2/ ,/ 显然/ 有/ O/ (/ G/ )/ >/ O/ (/ G/ )/ ./ 设当/ n/ =/ p/ 时/ ,/ 有/ O/ (/ G/ )/ >/ O/ (/ G/ )/ ,/ 则/ 当/ n/ =/ p/ +/ 1/ 时/ ,/ 由于/ (/ Cp/ 所以/ ,/ Cp/ (/ p/ +/ 1/ )/ Cp/ +/ 1/ (/ p/ +/ 1/ )/ Cp/ +/ 12d2p/ ×/ (/ p/ +/ 1/ )/ d3Cp/ +/ 1kkd/ 由于/ 要/ 保证/ 对/ 任意/ 随机/ 变化/ 的/ d/ ,/ k/ ,/ p/ 均/ 成立/ ,/ 因此/ 必有/ Cp/ +/ 1Page12/ 即/ Cp/ +/ 1/ 有/ (/ Cp/ +/ 1/ 即/ O/ (/ G/ )/ >/ O/ (/ G/ )/ 得证/ ./ 通过/ 以上/ 分析/ 可以/ 看出/ ,/ 本文/ 所提/ n/ -/ way/ 覆盖/ 算法/ (/ GA/ -/ AETG/ )/ 在/ 满足/ 参数/ n/ -/ way/ 组合/ 覆盖/ 的/ 基础/ 上/ ,/ 其/ 时间/ 复杂性/ 较/ 文献/ [/ 8/ ]/ 中/ 算法/ 的/ 时间/ 复杂性/ 得到/ 了/ 优化/ 与/ 改善/ ./ 8/ 结束语/ 本文/ 首先/ 对/ 常用/ 的/ 参数/ 配对/ 组合/ 覆盖/ 方法/ 进行/ 了/ 归纳/ 与/ 整理/ ,/ 分析/ 比较/ 了/ 各种/ 方法/ 的/ 优缺点/ 及/ 使用/ 时机/ ,/ 用于/ 指导/ 实际/ 的/ 组合/ 测试/ 工作/ ;/ 对/ AETG/ 算法/ 和/ IPO/ 算法/ 分别/ 进行/ 了/ 改进/ ,/ 实验/ 结果表明/ 新/ 算法/ 所/ 生成/ 的/ 测试用例/ 的/ 数量/ 要/ 优于/ 原有/ 算法/ ,/ 即/ 在/ 保持/ 原/ 算法/ 良好/ 执行/ 性能/ 的/ 基础/ 上/ ,/ 提高/ 了/ 计算结果/ 的/ 精确度/ ;/ 基于/ 实验/ 结果/ ,/ 分析/ 了/ 测试用例/ 数/ 与/ 配对/ 组合/ 总数/ 、/ 测试用例/ 数/ 与/ 因素/ 水平/ 数/ 之间/ 存在/ 的/ 联系/ ;/ 在/ 配对/ 组合/ 覆盖/ 的/ 基础/ 上/ ,/ 进一步/ 提出/ 了/ 基于/ 遗传算法/ 和/ AETG/ 的/ n/ -/ way/ 覆盖/ 算法/ ,/ 证明/ 了/ 其/ 时间/ 复杂性/ 较/ 已有/ 算法/ 得到/ 了/ 改善/ ./ 需要/ 进一步/ 研究/ 的/ 问题/ 包括/ :/ 考虑/ 参数/ 之间/ 具有/ 相互作用/ 的/ 情形/ ,/ 如何/ 生成/ 组合/ 测试用例/ ;/ 开发/ 相应/ 的/ 自动化/ 组合/ 测试工具/ 等/ ./ 

