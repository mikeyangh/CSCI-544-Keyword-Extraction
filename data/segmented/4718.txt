Page1TrustZone/ 技术/ 的/ 分析/ 与/ 研究/ 1/ )/ (/ 信息内容/ 安全/ 技术/ 国家/ 工程/ 实验室/ 北京/ 100093/ )/ 2/ )/ (/ 中国科学院/ 信息工程/ 研究所/ 北京/ 100093/ )/ 3/ )/ (/ 中国科学院/ 大学/ 北京/ 100049/ )/ 摘要/ 互联网/ 时代/ 的/ 到来/ 给/ 嵌入式应用/ 系统/ 带来/ 了/ 前所未有/ 的/ 发展/ 机遇/ ,/ 但是/ 随之而来/ 的/ 网络应用/ 安全/ 问题/ 也/ 使得/ 嵌入式应用/ 系统/ 面临/ 着/ 越来越/ 严重/ 的/ 威胁/ ,/ 安全性/ 已经/ 成为/ 嵌入式/ 系统/ 设计/ 中/ 一项/ 极为重要/ 的/ 需求/ ./ 为此/ ,/ ARM/ 公司/ 提出/ 了/ 基于/ TrustZone/ 技术/ 的/ 一套/ 系统/ 级/ 安全/ 解决方案/ ,/ 该/ 技术/ 是/ 在/ 尽量/ 不/ 影响/ 系统/ 的/ 功耗/ 、/ 性能/ 和/ 面积/ 的/ 前提/ 下/ 通过/ 硬件/ 来/ 实现/ 安全/ 环境/ 与/ 普通/ 环境/ 的/ 隔离/ ,/ 而/ 软件/ 提供/ 基本/ 的/ 安全/ 服务/ 和/ 接口/ ,/ 由/ 软硬件/ 相结合/ 而/ 构建/ 系统安全/ ,/ 也/ 正/ 因为/ 这些/ 特点/ 而/ 受到/ 国内外/ 研究者/ 的/ 广泛/ 关注/ ./ 文中/ 重点/ 分析/ 了/ TrustZone/ 技术/ 提供/ 的/ 安全/ 隔离/ 系统/ 基本/ 架构/ 、/ 安全/ 机制/ 的/ 实现/ 方式/ 及/ 如何/ 构建/ 可信/ 执行/ 环境/ ./ 在/ 此基础/ 上将/ 该/ 技术/ 与/ 其他/ 提高/ 嵌入式/ 安全/ 的/ 技术/ 作/ 了/ 分析/ 对比/ ,/ 也/ 进一步/ 探讨/ 了/ 其/ 优势/ 与/ 不足之处/ ,/ 并/ 针对/ 不足之处/ 提出/ 了/ 可能/ 的/ 解决方案/ ./ 最后/ ,/ 深入/ 讨论/ 了/ 该/ 技术/ 在/ 学术/ 领域/ 的/ 相关/ 研究/ 工作/ 和/ 商业/ 应用/ 情况/ ,/ 同时/ 结合/ 当前/ 嵌入式应用/ 领域/ 存在/ 的/ 安全/ 问题/ 展望/ 了/ 该/ 技术/ 的/ 未来/ 发展/ 方向/ 和/ 应用/ 需求/ ./ 关键词/ 嵌入式/ 系统/ ;/ TrustZone/ 技术/ ;/ 系统安全/ ;/ ARM/ ;/ 系统结构/ 1/ 引言/ 随着/ 网络应用/ 在/ 嵌入式/ 系统/ 应用/ 中/ 的/ 日益/ 深入/ ,/ 使得/ 嵌入式应用/ 和/ 设备/ 变得/ 越来越/ 复杂/ ,/ 另外/ 很多/ 开发者/ 都/ 基于/ 此/ 平台/ 进行/ 开发/ ,/ 使/ 系统/ 极易/ 受到/ 恶意/ 攻击/ [/ 1/ ]/ ,/ 因此/ 提供/ 一套/ 嵌入式/ 系统安全/ 解决方案/ 的/ 需求/ 变得/ 越发/ 紧迫/ ,/ 也/ 成为/ 系统/ 功能/ 必备/ 的/ 要求/ ./ 在/ 安全/ 支付/ 、/ 数字/ 版权/ 管理/ (/ DigitalRightsManagement/ ,/ DRM/ )/ [/ 2/ ]/ 、/ 企业/ 服务/ 和/ 基于/ Web/ 的/ 服务/ 等/ 嵌入式应用/ 中/ ,/ 安全性/ 是/ 消费者/ 保护/ 和/ 商业价值/ 内容/ 保护/ 的/ 强制性/ 要求/ ./ 如何/ 避免/ 设计/ 上/ 的/ 缺陷/ 变得/ 越来越/ 困难/ ,/ 不仅/ 是因为/ 系统/ 复杂性/ 给/ 安全/ 缺陷/ 带来/ 了/ 机会/ ,/ 更是/ 因为/ 无法/ 完全/ 信任/ 基于/ 这个/ 平台/ 进行/ 开发/ 的/ 众多/ 开发者/ ./ 此外/ ,/ 由于/ 互联网/ 上/ 存在/ 各种各样/ 的/ 安全性/ 威胁/ ,/ 当/ 嵌入式/ 设备/ 连接/ 到/ 网络/ 上时/ ,/ 它们/ 难免会/ 遇到/ 极具/ 威胁/ 的/ 网络攻击/ ./ 嵌入式/ 产品/ 在/ 受到/ 恶意/ 攻击/ 时/ 能否/ 保证/ 安全/ 是/ 整个/ 系统/ 设计/ 需要/ 考虑/ 的/ 问题/ ,/ 设备/ 中/ 的/ 硬件/ 和/ 软件/ 必须/ 相互配合/ 才能/ 保证/ 在/ 面对/ 恶意/ 攻击/ 时/ 能够/ 实施/ 行之有效/ 的/ 安全/ 对策/ ./ 这/ 是因为/ 单纯/ 依靠/ 硬件/ 的/ 安全性/ 解决方案/ 是/ 固定/ 的/ ,/ 无法/ 满足/ 新/ 的/ 安全性/ 要求/ ,/ 且/ 设计/ 时会/ 增加/ 硬件/ 的/ 开销/ ,/ 增加/ 系统/ 的/ 功耗/ 和/ 复杂度/ ./ 而/ 基于/ 软件/ 的/ 安全/ 方案/ 则/ 是/ 通过/ 数据/ 加密/ 或/ 在/ 操作系统/ 中/ 植入/ 安全/ 特性/ 等/ 方法/ 实现/ 系统安全/ ,/ 这样/ 会/ 大大增加/ 系统/ 的/ 复杂性/ 和/ 成本/ ,/ 又/ 因/ 其/ 数据/ 交互/ 的/ 实时性/ 和/ 开放性/ ,/ 使/ 之/ 无法/ 从根本上/ 实现/ 真正/ 的/ 系统安全/ [/ 3/ ]/ ./ 因此/ ,/ 有/ 必要/ 在/ 嵌入式/ 产品/ 的/ 软硬件/ 设计/ 中/ 同时/ 加入/ 安全性/ 措施/ ,/ 只有/ 一个/ 良好/ 的/ 系统/ 硬件/ 结构/ 和/ 适宜/ 的/ 安全/ 软件设计/ 才能/ 确保安全/ 产品/ 不/ 受/ 外部/ 恶意/ 攻击/ ,/ 得以/ 实现/ 保护/ 敏感数据/ 的/ 安全/ ./ 且/ 增强/ 系统安全/ 的/ 措施/ 必须/ 从/ 整个/ 系统/ 设计/ 一/ 开始/ 就/ 着手/ 实施/ ,/ 即/ 从/ CPU/ 内核/ 和/ SoC/ 基础架构/ 设计/ 开始/ 时/ 就/ 需要/ 考虑/ 加入/ 安全/ 机制/ 并/ 将/ 其/ 集成/ 到/ 系统/ 的/ 整体/ 设计/ 中/ ,/ 使/ 安全/ 理念/ 贯穿/ 整个/ 系统/ 设计/ 过程/ ,/ 而/ 不是/ 针对/ 单个/ 子系统/ 提出/ 一种/ 安全/ 机制/ ./ 嵌入式/ 系统/ 的/ 安全性/ 已经/ 成为/ 当前/ 信息安全/ 领域/ 的/ 关注/ 热点/ ,/ 业界/ 主流/ 嵌入式/ 处理器/ IP/ 供应商/ ARM/ 公司/ 提出/ 的/ TrustZone/ 技术/ 实现/ 了/ 一套/ 系统/ 级/ 安全/ 解决方案/ ,/ 它/ 是/ 在/ 尽量/ 不/ 影响/ 原有/ 处理器/ 设计/ 的/ 情况/ 下/ 提高/ 了/ 系统/ 的/ 安全性/ ,/ 引起/ 了/ 业界/ 和/ 学术界/ 广泛/ 关注/ ./ 它/ 通过/ 将/ 保护措施/ 集成/ 到/ ARM/ 处理器/ 、/ 总线/ 架构/ 和/ 系统/ 外设/ IP/ 等/ 措施/ 来/ 保证系统/ 的/ 安全性/ ,/ 并/ 提供/ 安全/ 软件平台/ 保证/ 半导体/ 厂商/ 、/ 原始/ 设备/ 制造商/ (/ OEM/ )/ 和/ 操作系统/ 合作/ 商可/ 在/ 一个/ 共用/ 的/ 框架/ 上/ 扩展/ 和/ 开发/ 自己/ 的/ 安全/ 解决方案/ ./ 也/ 正是/ 通过/ 硬件/ 和/ 软件/ 组件/ 的/ 合理/ 配合/ ,/ 该/ 技术/ 提供/ 了/ 一个/ 具有/ 高度/ 安全性/ 的/ 系统/ 架构/ ,/ 而/ 对于/ 内核/ 的/ 功耗/ 、/ 性能/ 和/ 面积/ 的/ 影响/ 微乎其微/ ./ 此/ 系统/ 方法/ 可以/ 保护/ 安全/ 内存/ 、/ 加密/ 块/ 、/ 键盘/ 和/ 显示器/ 等/ 外设/ ,/ 确保/ 它们/ 免遭/ 软件/ 攻击/ ,/ 并且/ 能够/ 建立/ 一个/ 隔离/ 的/ 可信/ 执行/ 环境/ (/ TrustedExecutionEnvironment/ ,/ TEE/ )/ [/ 4/ ]/ 为/ 安全/ 敏感/ 应用/ 提供/ 安全/ 服务/ [/ 5/ ]/ ./ 本文/ 重点/ 分析/ 了/ TrustZone/ 技术/ 提供/ 的/ 安全/ 隔离/ 系统/ 基本/ 架构/ ,/ 安全/ 机制/ 的/ 实现/ 方式/ 及/ 如何/ 构建/ 可信/ 执行/ 环境/ ,/ 接着/ 将/ 该/ 技术/ 与/ 其他/ 提高/ 嵌入式/ 系统/ 安全性/ 技术/ 进行/ 了/ 分析/ 对比/ ,/ 也/ 着重/ 分析/ 了/ 其/ 优势/ 与/ 不足/ ,/ 并/ 进一步/ 讨论/ 了/ 该/ 技术/ 的/ 相关/ 学术研究/ 工作/ 和/ 商业/ 应用/ 情况/ ,/ 最后/ 结合/ 当前/ 嵌入式应用/ 领域/ 存在/ 的/ 安全/ 问题/ 和/ 该/ 技术/ 在/ 安全/ 方面/ 的/ 优势/ ,/ 展望/ 了/ 该/ 技术/ 的/ 未来/ 发展/ 方向/ 和/ 应用/ 需求/ ./ 2TrustZone/ 安全/ 架构/ 概述/ 该/ 部分/ 将/ 首先/ 介绍/ TrustZone/ 的/ 软硬件/ 架构/ 及/ 安全/ 机制/ 的/ 实现/ 方式/ ,/ 并/ 在/ 此基础/ 上/ 总结/ 出该/ 安全/ 架构/ 所/ 面临/ 的/ 挑战/ ./ 2.1/ TrustZone/ 硬件/ 架构/ TrustZone/ 硬件/ 架构/ 如图/ 1/ 所示/ ,/ 它/ 将/ CPU/ 内核/ 隔离/ 成/ 安全/ 和/ 普通/ 两个/ 区域/ ,/ 即/ 单个/ 的/ 物理/ 处理/ Page3/ 器/ 包含/ 了/ 两个/ 虚拟/ 处理器/ 核/ :/ 安全/ 处理器/ 核/ 和/ 普通/ 处理器/ 核/ ./ 这样/ 单个/ 处理器/ 内核/ 能够/ 以/ 时间/ 片/ 的/ 方式/ 安全/ 有效/ 地/ 同时/ 从/ 普通/ 区域/ 和/ 安全/ 区域/ 执行/ 代码/ ./ 这种/ 虚拟化/ 技术/ 是/ 在/ CPU/ 设计/ 时/ 通过/ 硬件/ 扩展/ 实现/ 的/ ,/ 这些/ 扩展/ 可以/ 保证/ 安全/ 内存/ 和/ 安全/ 外设/ 能够/ 拒绝/ 非/ 安全/ 事务/ 的/ 访问/ ./ 因此/ ,/ 它们/ 可以/ 在/ 正常/ 操作系统/ 中/ 很/ 好/ 地/ 隐藏/ 和/ 隔离/ 自己/ ,/ 从而/ 实现/ 真正/ 意义/ 上/ 的/ 系统安全/ ./ 这样/ ,/ 便/ 无需/ 使用/ 专用/ 安全/ 处理器/ 内核/ ,/ 从而/ 节省/ 了/ 芯片/ 面积/ 和/ 功耗/ ,/ 并且/ 允许/ 高性能/ 安全软件/ 与/ 普通/ 区域/ 操作/ 环境/ 一起/ 运行/ ./ 并/ 引入/ 一个/ 特殊/ 的/ 机制/ —/ —/ —/ 监控/ 模式/ ,/ 监控/ 模式/ 是/ 管理/ 安全/ 与/ 普通/ 处理器/ 状态/ 切换/ 的/ 一个/ 强大/ 的/ 安全/ 网关/ ./ 在/ 大多数/ 设计/ 中/ ,/ 它/ 的/ 功能/ 类似/ 传统/ 操作系统/ 的/ 上下文/ 切换/ ,/ 确保/ 切换/ 时能/ 安全/ 的/ 保存/ 处理器/ 切换/ 前/ 的/ 环境/ ,/ 并且/ 能够/ 在/ 切换/ 后/ 的/ 环境/ 正确/ 的/ 恢复/ 系统/ 运行/ ./ 普通/ 环境/ 想要/ 进入/ 监控/ 模式/ 是/ 严格/ 被/ 控制/ 的/ ,/ 仅能/ 通过/ 以下/ 的/ 方式/ :/ 中断/ 、/ 外部/ 中断/ 或/ 直接/ 调用/ SMC/ (/ SecureMonitorCall/ )/ 指令/ ./ 而/ 安全/ 环境/ 进入/ 监控/ 模式/ 则/ 更加/ 灵活/ 些/ ,/ 可以/ 直接/ 通过/ 写/ 程序/ 状态/ 寄存器/ (/ CurrentProgramStatusRegister/ ,/ CPSR/ )/ ,/ 另外/ 也/ 可/ 通过/ 异常/ 机制/ 切换/ 到/ 普通/ 环境/ ./ 为了/ 隔离/ 所有/ SoC/ 的/ 软硬件/ 资源/ ,/ 使/ 它们/ 分/ 属于/ 两个/ 区域/ :/ 用于/ 安全/ 子系统/ 的/ 安全/ 区域/ 和/ 用于/ 存储/ 其他/ 所有/ 内容/ 的/ 普通/ 区域/ ,/ 它/ 在/ 硬件/ 架构/ 上作/ 了/ 充分/ 扩展/ ./ 首先/ 对/ 内存/ 进行/ 了/ 隔离/ ,/ CPU/ 在/ 安全/ 环境/ (/ TEE/ )/ 和/ 普通/ 环境/ (/ RichExecutionEnvironment/ ,/ REE/ )/ [/ 6/ ]/ 下/ 执行/ 进程/ 时有/ 各自/ 独立/ 的/ 物理地址/ 空间/ ,/ REE/ 仅仅/ 能/ 访问/ 自身/ 对应/ 的/ 空间/ ,/ 而/ TEE/ 有/ 权限/ 访问/ 两个/ 环境/ 的/ 物理地址/ 空间/ ./ 这样/ ,/ 软件/ 在/ CPU/ 处于/ REE/ 下/ 执行/ 时/ ,/ 会/ 被/ 阻止/ 查看/ 或/ 篡改/ TEE/ 内存空间/ [/ 7/ ]/ ./ 而/ 负责/ 对/ 物理/ 内存/ 进行/ 安全/ 区域/ 划分/ 的/ 是/ 地址/ 空间/ 控制器/ (/ TrustZoneAddressSpaceController/ ,/ TZASC/ )/ 和/ 存储/ 适配器/ (/ TrustZoneMemoryAdapter/ ,/ TZMA/ )/ ,/ 前者/ 是/ AXI/ 总线/ 的/ 一个/ 主/ 设备/ ,/ 用来/ 将/ 它/ 从/ 设备/ 的/ 地址/ 空间/ 划分/ 为/ 一系列/ 内存/ 区间/ ,/ 通过/ 运行/ 在/ 安全/ 环境/ 的/ 安全软件/ 可以/ 将/ 这些/ 区间/ 配置/ 为/ 安全/ 或非/ 安全/ ;/ 后者/ 则/ 负责/ 对片/ 上/ 静态/ 内存/ RAM/ 或片/ 上/ ROM/ 进行/ 安全/ 分区/ ./ 并/ 扩展/ 了/ 一些/ 协处理器/ ,/ 协处理器/ 可以/ 通过/ 扩展/ 指令集/ 或/ 提供/ 配置/ 寄存器/ 来/ 扩展/ 内核/ 的/ 功能/ ./ 其中/ 最/ 重要/ 的/ 是/ CP15/ 协处理器/ ,/ 它/ 用来/ 控制/ Cache/ 、/ 可信/ 加密/ 模块/ (/ TCM/ )/ [/ 8/ ]/ 和/ 存储器/ 管理/ ./ 协处理器/ 的/ 某些/ 寄存器/ 在/ 普通/ 环境/ 和/ 安全/ 环境/ 各有/ 一个/ ,/ 对/ 这种/ 寄存器/ 的/ 修改/ 只能/ 对/ 所在/ 的/ 执行/ 环境/ 起/ 作用/ ./ 有/ 的/ 寄存器/ 则/ 会/ 影响/ 全局/ ,/ 比如/ 控制/ 对/ Cache/ 进行/ 锁定/ 操作/ 的/ 寄存器/ ,/ 对/ 这类/ 寄存器/ 必须/ 严格控制/ ,/ 一般/ 只/ 对/ 安全/ 环境/ 提供/ 读写/ 权限/ ,/ 而/ 对/ 普通/ 环境/ 提供/ 只读/ 权限/ [/ 5/ ]/ ./ 中断/ 是/ 保证/ 安全/ 环境/ 的/ 重要一环/ ,/ 可以/ 防止/ 恶意软件/ 通过/ 进入/ 中断向量/ 的/ 方法/ 来/ 对系统/ 进行/ 一系列/ 的/ 破坏/ ./ 为此/ ,/ 对/ 中断/ 控制/ 进行/ 了/ 扩展/ ,/ 普通/ 环境/ 和/ 安全/ 环境/ 分别/ 采用/ 中断/ 输入/ IRQ/ 和/ FIQ/ 作为/ 中断/ 源/ ,/ 因/ 大多数/ 操作系统/ 都/ 采用/ IRQ/ 作为/ 中断/ 源/ ,/ 故/ 采用/ FIQ/ 作为/ 安全/ 中断/ 源/ 对/ 普通/ 环境/ 操作系统/ 的/ 改动/ 最少/ ./ 如果/ 中断/ 发生/ 在/ 相应/ 的/ 执行/ 环境/ ,/ 则/ 不/ 需要/ 进行/ 执行/ 环境/ 的/ 切换/ ./ 否则/ ,/ 由/ 监控器/ 来/ 切换/ 执行/ 环境/ ,/ 且/ 执行/ 监控器/ 代码/ 时/ 应该/ 将/ 中断/ 关闭/ ./ 在/ CP15/ 协处理器/ 中/ 包含/ 了/ 一个/ 只能/ 被/ 安全/ 环境/ 软件/ 访问/ 的/ 控制/ 寄存器/ ,/ 能够/ 用来/ 阻止/ 普通/ 环境/ 软件/ 修改/ CPSR/ 的/ F/ 位/ (/ 屏蔽/ FIQ/ )/ 和/ A/ 位/ (/ 屏蔽/ 外部/ 中断/ )/ ,/ 这样/ 可以/ 防止/ 普通/ 环境/ 的/ 恶意软件/ 屏蔽/ 安全/ 环境/ 的/ 中断/ ./ 而/ 外设/ 的/ 安全/ 主要/ 由/ AXI/ -/ to/ -/ APB/ 桥/ 负责/ ,/ 比如/ 中断/ 控制器/ 、/ 计数器/ 和/ 用户/ I/ // O/ 设备/ 等/ ./ 这/ 使得/ 其/ 能够/ 解决/ 比/ 仅仅/ 提供/ 一个/ 安全/ 的/ 数据处理/ 环境/ 更加/ 广泛/ 的/ 安全/ 问题/ ./ 该桥/ 包含/ 一个/ 输入/ 信号/ TZPCDECPORT/ 决定/ 外设/ 是否/ 配置/ 为/ 安全/ ,/ 该/ 信号/ 可以/ 在/ SoC/ 设计/ 时/ 静态/ 地/ 设置/ ,/ 也/ 可以/ 在/ 程序运行/ 时/ 通过/ 对/ TrustZone/ 保护/ 控制器/ (/ TrustZoneProtectionController/ ,/ TZPC/ )/ 进行/ 编程/ 动态/ 地/ 进行/ 设置/ ./ 而/ TZPC/ 的/ 安全/ 状态/ 是/ 在/ SoC/ 设计/ 时/ 确定/ 的/ ,/ 它/ 被/ 设置/ 为/ 安全设备/ ,/ 只能/ 被/ 安全/ 的/ 软件/ 环境/ 使用/ ./ 上述/ 硬件/ 扩展/ 是/ TrustZone/ 系统/ 架构/ 的/ 安全/ 基础/ ,/ 可以/ 看出/ 它/ 是/ 在/ 设计/ 开始/ 时/ 就/ 将/ 安全措施/ 集成/ 到/ SoC/ 中/ ,/ 并/ 在/ 尽量/ 不/ 影响/ 原有/ 处理器/ 设计/ 的/ 情况/ 下/ 提高/ 了/ 安全性/ ./ 类似/ 硬件安全/ 技术/ 主要/ 有/ Stanford/ 的/ XOM/ [/ 9/ ]/ 和/ MIT/ 提出/ 的/ AEGIS/ [/ 10/ ]/ ./ 其中/ XOM/ 是/ Page4/ 假定/ 处理器/ 内部/ 单元/ 能/ 防御/ 各种/ 攻击/ 且/ 应用/ 在/ CPU/ 可信/ 区/ 而/ 不是/ 整个/ 操作系统/ ,/ 它/ 为/ 阻止/ 恶意软件/ 攻击/ 提供/ 一个/ 强有力/ 的/ 解决方案/ ;/ AEGIS/ 是/ 一个/ 安全/ 启动/ 结构/ ,/ 为/ 系统启动/ 到/ 应用/ 提供/ 多级/ 验证/ ./ 相对/ 这/ 两种/ 安全/ 处理器/ 技术/ ,/ TrustZone/ 技术/ 在/ 硬件安全/ 扩展/ 具有/ 较/ 明显/ 的/ 优势/ ,/ 它/ 能够/ 为/ 在/ 其/ 上/ 运行/ 的/ 操作系统/ ,/ 比如/ PalmOS/ 、/ Linux/ 、/ SymbianOS/ 和/ WindowsCE/ 等/ ,/ 提供/ 一个/ 系统/ 范围/ 的/ 安全/ 硬件/ 架构/ 基础/ ,/ 而/ 对系统/ 的/ 功耗/ 、/ 性能/ 和/ 面积/ 的/ 影响/ 很小/ ,/ 并/ 已/ 作为/ 一个/ 开放式/ 安全/ 架构/ 和/ 可信/ 硬件平台/ 受到/ 业界/ 的/ 广泛/ 认可/ ./ 2.2/ TrustZone/ 软件架构/ TrustZone/ 硬件/ 架构/ 扩展/ 将/ 安全性/ 植入/ 处理器/ 中/ ,/ 这样/ 为/ 将/ 安全性/ 从/ 普通/ 操作系统/ (/ RichOS/ ,/ ROS/ )/ [/ 7/ ]/ 中/ 分离出来/ 提供/ 了/ 基础/ ,/ 即/ 可以/ 实现/ 一个/ 新/ 的/ 安全/ 操作系统/ (/ TrustedOS/ ,/ TOS/ )/ [/ 11/ ]/ ,/ 并/ 加入/ 监控/ 代码/ 区/ 实现/ ROS/ 和/ TOS/ 之间/ 的/ 切换/ ./ TOS/ 和/ ROS/ 同时/ 运行/ 在/ 同一个/ 物理/ CPU/ 上/ ,/ 它们/ 之间/ 的/ 交互/ 限制/ 在/ 消息传递/ 和/ 共享内存/ 传递数据/ ./ TOS/ 有/ 独立/ 的/ 异常/ 处理/ 、/ 中断/ 处理/ 、/ 调度/ 、/ 应用程序/ 、/ 进程/ 、/ 线程/ 、/ 驱动程序/ 和/ 内存/ 管理/ 页表/ [/ 7/ ]/ ./ 监控/ 代码/ 区/ 提供/ 将/ 两个/ 系统/ 衔接/ 在/ 一起/ 的/ 虚拟/ 管理程序/ ,/ 并/ 在/ 两个/ 系统/ 过渡/ 期间/ 存储/ 和/ 恢复/ 两个/ 环境/ 下/ 寄存器/ 的/ 状态/ ,/ 并/ 保证/ 过渡/ 到/ 新/ 环境/ 下/ 系统/ 能够/ 重新/ 执行/ ./ 为了/ 保证/ 整个/ 系统/ 的/ 安全/ ,/ 必须/ 从/ 系统/ 引导/ 启动/ 开始/ 就/ 保证/ 其/ 安全性/ ./ 许多/ 攻击者/ 都/ 会/ 尝试/ 在/ 系统/ 断电/ 的/ 时候/ 进行/ 攻击/ 以便/ 擦除/ 或者/ 修改/ 存放/ 在/ FLASH/ 中/ 的/ 系统/ 镜像/ ./ 因此/ ,/ TrustZone/ 实行/ 安全/ 启动/ ,/ 大概/ 流程/ 是/ :/ 设备/ 上电/ 复位/ 后/ ,/ 一个/ 安全/ 引导/ 程序/ 从/ SoC/ 的/ ROM/ 中/ 运行/ ,/ 该/ 引导/ 程序/ 将/ 首先/ 进入/ TEE/ 初始化/ 阶段/ 并/ 启动/ TOS/ ,/ 逐级/ 核查/ TOS/ 启动/ 过程/ 中/ 的/ 各个/ 阶段/ 的/ 关键/ 代码/ 以/ 保证/ TOS/ 的/ 完整性/ ,/ 也/ 防止/ 未/ 授权/ 或/ 受/ 恶意/ 篡改/ 的/ 软件/ 的/ 运行/ [/ 12/ ]/ ,/ 随后/ 运行/ REE/ 的/ 引导/ 程序/ 并/ 启动/ ROS/ ,/ 至此/ 完成/ 整个/ 系统/ 的/ 安全/ 引导/ 过程/ ./ ARM/ 公司/ 也/ 定义/ 了/ 标准/ 的/ 应用/ 程序接口/ (/ TrustZoneAPI/ ,/ TZAPI/ )/ [/ 13/ ]/ ,/ 这/ 保证/ 了/ 软件/ 和/ 硬件/ 开发者/ 编写/ 的/ 应用程序/ 可以/ 被/ 应用/ 于/ 不同/ 安全/ 平台/ 的/ 设备/ 中/ ,/ 并/ 允许/ 客户端/ 应用/ 能够/ 访问/ TOS/ 以/ 达到/ 管理/ 和/ 使用/ 安全/ 服务/ 的/ 目的/ ./ 2.3/ TrustZone/ 安全/ 机制/ 的/ 实现/ 方式/ TrustZone/ 技术/ 通过/ 对/ CPU/ 架构/ 和/ 内存/ 子系统/ 的/ 硬件/ 设计/ 升级/ ,/ 引入/ 安全/ 区域/ 的/ 概念/ ./ NS/ (/ Non/ -/ Secure/ )/ 位是/ 其/ 对系统/ 的/ 关键/ 扩展/ ,/ 以/ 指明/ 当前/ 系统/ 是否/ 处于/ 安全/ 状态/ ./ NS/ 位/ 不仅/ 影响/ CPU/ 内核/ 和/ 内存/ 子系统/ ,/ 还/ 能/ 影响/ 片/ 内外/ 设/ 的/ 工作/ ./ Monitor/ 用来/ 控制系统/ 的/ 安全/ 状态/ 和/ 指令/ 、/ 数据/ 的/ 访问/ 权限/ ,/ 通过/ 修改/ NS/ 位来/ 实现/ 安全/ 状态/ 和/ 普通/ 状态/ 的/ 切换/ ./ Monitor/ 不仅/ 作为/ 系统安全/ 的/ 网关/ ,/ 还/ 负责/ 保存/ 当前/ 的/ 上下文/ 状态/ ./ 并/ 通过/ 对/ 内存/ 子系统/ Cache/ 和/ MMU/ (/ MemoryManagementUnit/ )/ 增加/ 相应/ 的/ 控制/ 逻辑/ 来/ 实现/ 增强/ 的/ 内存/ 管理/ ./ 其中/ ,/ Cache/ 的/ 每个/ Tag/ 域/ 都/ 增加/ 了/ 一个/ NS/ 位/ ,/ 这样/ ,/ Cache/ 中/ 的/ 数据/ 可以/ 标记/ 为/ 安全/ 和/ 普通/ 两类/ 数据/ ./ 有/ 两个/ 虚拟/ 的/ MMU/ [/ 14/ ]/ 分别/ 对应/ 两个/ 虚拟/ 的/ 处理器/ 核/ ./ 页表/ 项/ 增加/ 了/ 一个/ NS/ 位/ ,/ 相对/ 应/ TLB/ 的/ 每个/ Tag/ 域/ 也/ 增加/ 了/ 一个/ NS/ 位/ ,/ 所有/ 的/ NS/ 位/ 联合/ 来/ 进行/ 动态/ 验证/ ,/ 以/ 确保/ 仅/ 得到/ 授权/ 的/ 操作/ 可以/ 访问/ 标记/ 为/ 安全/ 的/ 数据/ ./ 根据/ 应用/ 需求/ ,/ 该/ 技术/ 还/ 可以/ 将/ 安全性/ 扩展/ 到/ 系统/ 其他/ 层次/ 的/ 内存/ 和/ 外设/ 上/ ./ 为了/ 确保安全/ 环境/ 中/ 的/ 资源/ 不能/ 都/ 被/ 普通/ 环境/ 下/ 的/ 组件/ 访问/ ,/ 保证/ 两个/ 环境/ 具备/ 强大/ 的/ 安全/ 边界/ ,/ 相应/ 对/ AXI/ 总线/ 上/ 每个/ 读写/ 信道/ 增加/ 了/ 额外/ 的/ 控制/ 信号/ ,/ 分别/ 是/ 总线/ 写/ 事务/ 控制/ 信号/ (/ AWPROT/ )/ 和/ 总线/ 读/ 事务/ 控制/ 信号/ (/ ARPROT/ )/ ./ 这样/ ,/ 在/ CPU/ 请求/ 访问/ 内存/ 时/ ,/ 除了/ 将/ 内存地址/ 发送到/ AXI/ 总线/ 上/ ,/ 还/ 需要/ 将/ AWPROT/ 和/ ARPROT/ 控制/ 信号/ 发送到/ 总线/ 上/ ,/ 以/ 表明/ 本次/ 访存/ 是/ 安全/ 事务/ 还/ 是非/ 安全/ 事务/ [/ 5/ ]/ ./ AXI/ 总线/ 协议/ 会/ 将/ 安全/ 状态/ 信息/ 加载/ 在/ 两个/ 读写/ 信道/ 控制/ 信号/ AWPROT/ 和/ ARPROT/ 上/ ,/ 然后/ 系统/ 的/ 地址/ 译码器/ 会/ 根据/ CPU/ 的/ 安全/ 状态/ 使用/ 这些/ 信号/ 来/ 产生/ 不同/ 的/ 地址映射/ ./ 比如/ ,/ 含有/ 密钥/ 的/ 寄存器/ 仅仅/ 能/ 被/ 处于/ 安全/ 状态/ 的/ CPU/ 访问/ ,/ 实现/ 访问/ 操作/ 是/ 通过/ 译码器/ 将/ AWPROT/ 或/ ARPROT/ 置成/ 低电平/ 实现/ 的/ ./ 如果/ CPU/ 处于/ 非/ 安全/ 状态/ 试着/ 访问/ 这个/ 密钥/ 时/ ,/ AWPROT/ 或/ ARPROT/ 置成/ 高电平/ ,/ 并且/ 地址/ 译码器/ 将会/ 产生/ 访问/ 失败/ ,/ 产生/ “/ 外设/ 不/ 存在/ 于/ 这个/ 地址/ ”/ 的/ 错误/ [/ 7/ ]/ ./ 而/ AXI/ -/ APB/ 桥则/ 负责/ 保护/ 外设/ 的/ 安全性/ ,/ 普通/ 环境/ 不/ 能够/ 访问/ 安全/ 外设/ ,/ 这样/ 就/ 为/ 外设/ 安全/ 筑起/ 了/ 强有力/ 的/ 安全/ 壁垒/ ./ 将/ 敏感数据/ 放在/ 安全/ 环境/ 中/ ,/ 并/ 在/ 安全/ 处理器/ 内核/ 中/ 运行/ 软件/ ,/ 可/ 确保/ 敏感数据/ 能够/ 抵御/ 各种/ 恶意/ 攻击/ ,/ 同时/ 在/ 硬件/ 中/ 隔离/ 安全/ 敏感/ 外设/ ,/ 可/ 确保/ 系统/ 能够/ 抵御/ 平常/ 难以/ 防护/ 的/ 潜在/ 攻击/ ,/ 比如/ 使用/ 键盘/ 或/ 触摸屏/ 输入/ 密码/ ./ TrustZone/ 技术/ 所/ 实现/ 的/ 运行/ 环境/ 使得/ 安全性/ 措施/ 能/ 应用/ 于/ 一个/ 复杂/ 嵌入式/ 系统/ 的/ 很多/ 层/ ./ 普通/ 操作/ 将/ 完全/ 地/ 运行/ 在/ ROS/ 内/ ,/ 无需/ 该/ 技术/ 的/ 协助/ ./ 而/ 为/ 在/ ROS/ 中/ 实现/ 安全性/ ,/ 该/ 技术/ 针对/ 攻击方式/ 提/ Page5/ 供/ 3/ 种/ 方式/ 的/ 完整性/ 安全策略/ :/ 首先/ ,/ 它会/ 先/ 从片/ 内/ 执行/ 引导/ 程序/ 完成/ 系统安全/ 状态/ 的/ 配置/ 才/ 启动/ 操作系统/ ,/ 只有/ 通过/ 安全/ 验证/ 的/ 模块/ 才/ 允许/ 被/ 加载/ ;/ 其次/ ,/ 在/ 系统/ 运行/ 期间/ ,/ 由/ TrustZone/ 技术/ 提供/ 的/ 安全/ 代码/ 区会/ 处理/ 普通/ 代码/ 区/ 的/ 安全/ 请求/ ,/ 在/ 处理/ 之前/ 把/ 安全/ 请求/ 保存/ 在/ 共享内存/ 中/ ,/ 当/ 安全/ 检测/ 通过/ 后/ 请求/ 会/ 被/ 处理/ ;/ 最后/ ,/ 一组/ 受限/ 的/ 、/ 可信/ 的/ 进程/ 可以/ 在/ 远离/ ROS/ 的/ 私有/ 空间/ 内/ 安全/ 地/ 执行/ ./ 3TrustZone/ 构建/ 的/ 可信/ 执行/ 环境/ GlobalPlatform/ (/ 文后/ 统一/ 简称/ “/ GP/ ”/ )/ 基于/ Trust/ -/ 图/ 2GlobalPlatform/ 可信/ 执行/ 环境/ 系统/ 架构/ 该/ 系统/ 架构/ 中/ ,/ TEE/ 是/ 与/ 设备/ 上/ 的/ ROS/ 并行/ 运行/ 的/ 独立/ 执行/ 环境/ ,/ 并且/ 给/ ROS/ 提供/ 安全/ 服务/ ,/ TEE/ 内部/ 由/ 可信/ 操作系统/ (/ TOS/ )/ 和/ 运行/ 其上/ 的/ 应用程序/ ,/ 即可/ 信/ 应用/ (/ TA/ )/ 组成/ ./ TOS/ 用来/ 管理/ TEE/ 的/ 软硬件/ 资源/ ,/ 并/ 包含/ 负责/ REE/ 和/ TEE/ 两种/ 执行/ 环境/ 切换/ 的/ 监控器/ ./ TEE/ 所能/ 访问/ 的/ 软硬件/ 资源/ 与/ ROS/ 是/ 分开/ 的/ ,/ TEE/ 提供/ TA/ 的/ 安全/ 执行/ 环境/ ,/ 同时/ 也/ 保护/ TA/ 的/ 资源/ 和/ 数据/ 保密性/ 、/ 完整性/ 和/ 访问/ 权限/ ./ TEE/ 中/ 的/ 每个/ TA/ 是/ 相互/ 独立/ 的/ ,/ 不/ 经/ 授权/ 不能/ 互相/ 访问/ ./ TEE/ 自身/ 在/ 启动/ 过程/ 中/ 必须/ 要/ 通过/ 安全/ 验证/ 并且/ 保证/ 与/ ROS/ 隔离/ ./ TEE/ 客户/ API/ [/ 16/ ]/ 则/ 是/ 让/ 运行/ 在/ ROS/ 中/ 的/ 客户端/ 应用/ (/ CA/ )/ 访问/ TA/ 服务/ 和/ 数据/ 的/ 底层/ 通信接口/ ./ TEE/ 功能/ API/ 是/ 对/ 客户/ API/ 的/ 封装/ ,/ 封装/ 了/ 客户端/ 与/ 具体/ 安全/ 服务/ 的/ 通信协议/ ,/ 使得/ 客户端/ 能够/ 以/ 开发者/ 熟悉/ 的/ 编程/ 模式/ 来/ 访问/ 安全/ 服务/ ,/ 比如/ 加密/ 或/ 可信/ 存储/ [/ 15/ ]/ ./ TEE/ 内部/ API/ [/ 17/ ]/ 提供/ 给/ 其/ TA/ 的/ 编程/ 接口/ ,/ 内部/ API/ 主要/ 包括/ 密钥/ 管理/ 、/ 密码/ 算法/ 、/ 安全/ 存储/ 、/ 安全/ 时钟/ 资源/ Zone/ 技术/ 制定/ 了/ 可信/ 执行/ 环境/ (/ TEE/ )/ 的/ 标准/ ./ TrustZone/ 是/ 一种/ 软硬件/ 结合/ 的/ 系统/ 范围/ 的/ 安全/ 解决方案/ ,/ 通过/ 硬件/ 架构/ 将/ 资源/ 隔离/ 成/ 安全/ 环境/ 与/ 普通/ 环境/ 两个/ 并行/ 的/ 执行/ 环境/ ,/ 软件架构/ 则/ 提供/ 能够/ 支持/ 完全/ 可信/ 的/ 执行/ 环境/ 、/ 安全/ 敏感/ 应用程序/ 和/ 安全/ 服务/ 的/ 平台/ ./ 正是/ 由于/ TrustZone/ 技术/ 从/ 处理器/ 内核/ 设计/ 时/ 就/ 通过/ 硬件/ 对/ 资源/ 进行/ 了/ 安全/ 隔离/ ,/ 才/ 有/ 了/ 实现/ GPTEE/ 系统/ 架构/ 的/ 基础/ ./ GP/ 制定/ 的/ 可信/ 执行/ 环境/ 可/ 作为/ 一个/ 独立/ 的/ 执行/ 环境/ 驻留/ 在/ 其/ 所/ 连接/ 的/ 支持/ TrustZone/ 主/ 处理器/ 上/ 的/ 安全/ 区域/ ,/ 以/ 确保/ 在/ 可信/ 执行/ 环境/ 中/ 实现/ 敏感数据/ 的/ 存储/ 、/ 处理/ 和/ 保护/ ,/ 其/ TEE/ 系统/ 架构/ 如图/ 2/ 所示/ [/ 15/ ]/ ./ 和/ 服务/ 及/ 扩展/ 的/ 可信/ UI/ [/ 18/ ]/ 等/ API/ ./ 可信/ UI/ 是/ 指/ 在/ 关键/ 信息/ 的/ 显示/ 和/ 用户/ 关键/ 数据/ (/ 如/ 口令/ )/ 输入/ 时/ ,/ 屏幕显示/ 和/ 键盘/ 灯/ 等/ 硬件资源/ 完全/ 由/ TEE/ 控制/ 和/ 访问/ ,/ 而/ ROS/ 中/ 的/ 软件/ 则/ 不能/ 访问/ ./ RE/ E通/ 讯/ 代理/ 提供/ 了/ CA/ 与/ TA/ 之间/ 通信/ 的/ 桥梁/ ./ 基于/ TrustZone/ 系统安全/ 平台/ 构建/ 的/ 可信/ 执行/ 环境/ ,/ 一般/ 都/ 根据/ GPTEE/ 系统/ 架构/ 标准/ ./ 电子科技/ 大学/ 的/ 王熙友/ 将/ Android/ 系统/ 作为/ ROS/ ,/ 搭建/ 了/ 如图/ 3/ 所示/ 的/ 可信/ 执行/ 环境/ 系统/ 架构/ [/ 19/ ]/ ./ 运行/ 在/ 安全/ 状态/ 的/ TOS/ 管理/ TEE/ 的/ 软硬件/ 资源/ ,/ 它/ 在/ Android/ 系统启动/ 之前/ 启动/ ,/ 启动/ 后会/ 对/ 设备/ 的/ 安全/ 属性/ 进行/ 配置/ ,/ 并/ 分配/ 安全/ 存储空间/ ./ REE/ 的/ 通信/ 代理/ 以/ TrustZone/ 驱动/ 的/ 形式/ 实现/ ,/ TEE/ 的/ 通信/ 代理/ 是/ 一个/ 守护/ 进程/ ,/ REE/ 与/ TEE/ 的/ 数据交换/ 是/ 通过/ 共享内存/ 进行/ 的/ ./ 共享内存/ 是/ 在/ REE/ 的/ 内存/ 区/ 分配/ 的/ 内存/ ,/ 用于/ REE/ 和/ TEE/ 之间/ 传递数据/ ,/ 主要/ 是/ 向/ TEE/ 传递/ 命令/ 、/ 参数/ 及/ 接受/ TEE/ 返回/ 的/ 数据/ ./ Android/ 系统/ 在/ REE/ 下/ 运行/ ,/ 不能/ 访问/ 存储/ Page6/ 图/ 3/ 基于/ TrustZone/ 的/ 可信/ 执行/ 环境/ 系统/ 架构/ 在/ TEE/ 中/ 的/ 敏感数据/ 和/ 配置/ 为/ 安全/ 的/ 外设/ ,/ 这样/ 可以/ 很/ 好/ 地/ 保护/ 用户/ 敏感数据/ 的/ 安全/ ,/ 并/ 可以/ 保护/ 安全/ 内存/ 、/ 加密/ 块/ 、/ 键盘/ 和/ 屏幕/ 等/ 外设/ ,/ 从而/ 确保/ 它们/ 免遭/ 恶意软件/ 的/ 攻击/ ,/ 因此/ 基于/ 该/ 安全/ 隔离/ 技术/ 构建/ 的/ TEE/ 系统/ 架构/ 能/ 很/ 好地解决/ Android/ 系统/ 目前/ 存在/ 的/ 诸多/ 安全/ 问题/ ./ 上海交通大学/ 利文/ 浩/ 等/ 人/ 基于/ TrustZone/ 技术/ 实现/ 了/ 具备/ TEE/ 的/ 可信/ 内核/ T6/ [/ 20/ ]/ ,/ 如图/ 4/ 所示/ ,/ T6/ 采用/ ARM/ 设备/ 的/ 硬件安全/ 特性/ 为/ 移动/ 操作系统/ 提供/ 较/ 高/ 的/ 安全/ 保障/ ,/ ROS/ 支持/ Linux/ 和/ Android/ ./ 利用/ T6/ 可以/ 实现/ 诸如/ 移动/ 安全/ 支付/ 、/ DRM/ 视频/ 保护/ 、/ ROS/ 内核/ 防护/ 及/ 企业级/ BYOD/ 保护/ 等/ 解决方案/ ,/ 即/ 为/ 用户/ 设备/ 程序/ 的/ 安全/ 执行/ 和/ 隐私/ 数据保护/ 提供/ 系统/ 级/ 的/ 保护/ [/ 21/ ]/ ./ 在/ 国外/ ,/ 格/ 兰茨/ 技术/ 大学/ 的/ AndreasFitzek/ 等/ 人/ 基于/ TrustZone/ 技术/ 也/ 开发/ 了/ 一款/ TOS/ 并/ 命名/ 为/ ANDIXOS/ ,/ 它/ 是/ 一款/ 支持/ 多任务/ 、/ 非/ 抢占/ 式/ 的/ 操作系统/ [/ 22/ ]/ ./ 在/ 商业界/ ,/ Trustonic/ 公司/ 是/ 提供/ 支持/ TrustZone/ 安全/ 扩展/ 处理器/ 的/ TEE/ 供应商/ ,/ 能为/ 智能/ 移动/ 设备/ 提供/ 可/ 独立/ 于/ OS/ 的/ 安全/ 应用/ ,/ 它/ 也/ 执行/ GP/ 标准/ ./ 捷德/ 公司/ (/ Giesecke/ &/ Devrient/ )/ 研发/ 的/ MobiCore/ 是/ 一款/ 基于/ 该/ 技术/ 构建/ 的/ 可信/ 内核/ ,/ 它/ 能/ 为/ 程序执行/ 和/ 数据/ 存储/ 提供/ 安全/ 的/ 执行/ 环境/ ./ 其/ 安全性/ 也/ 是/ 建立/ 在/ 隔离/ 原理/ 基础/ 上/ ,/ 即将/ TEE/ 中/ 的/ 数据处理/ 与/ REE/ 中/ 的/ 数据处理/ 隔离开/ ./ 其中/ ,/ 关键/ 代码/ 、/ 加密/ 密钥/ 和/ 敏感/ I/ // O/ 等/ 对/ 安全/ 敏感/ 的/ 应用/ 运行/ 在/ 安全/ 环境/ ,/ 而/ 诸如/ 用户/ IO/ 等/ 普通/ 应用/ 则/ 运行/ 在/ 普通/ 环境/ ,/ 这样/ 做/ 有效/ 地/ 保证/ 了/ 恶意软件/ 对/ 敏感数据/ 实施/ 的/ 一些/ 未/ 授权/ 访问/ ./ 欧版/ 三星/ 手机/ GALAXYSIII/ 是/ 第一款/ 集成/ 了/ MobiCore/ 系统/ 的/ 智能机/ ,/ 它/ 就是/ 通过/ 其/ 在/ 应用/ 处理器/ 中/ 设置/ 保护区/ 的/ 方式/ 来/ 实现/ 安全/ 运行/ 并/ 动态/ 地/ 下载/ 对/ 安全/ 敏感/ 的/ 应用/ [/ 23/ ]/ ./ 另外/ ,/ OpenVirtualization/ (/ OV/ )/ 提供/ 开源/ 的/ 基于/ TrustZone/ 的/ 安全/ 内核/ (/ SierraTEE/ )/ 和/ 监控器/ (/ SierraVisor/ )/ ,/ 前者/ 提供/ 了/ 一个/ 隔离/ 执行/ 环境/ ,/ 使得/ 安全/ 敏感/ 的/ 代码/ 与/ ROS/ 系统/ 完全/ 隔离/ ,/ 它/ 兼容/ GPTEEAPI/ 规范/ 并/ 支持/ 第三方/ 可信/ 代码/ 载入/ 执行/ ./ 但/ 它/ 不/ 包含/ 很多/ 重要/ 的/ 功能/ ,/ 比如/ 用户/ 空间/ 任务/ 隔离/ 、/ 内核/ 和/ 用户/ 空间隔离/ ,/ 多任务/ 、/ 动态/ 载入/ 应用/ 、/ 安全/ 启动/ 和/ POSIX/ 兼容/ 的/ 库函数/ 等/ [/ 24/ ]/ ./ 4TrustZone/ 技术/ 的/ 优势/ 与/ 不足/ 该/ 部分/ 通过/ 将/ 该/ 技术/ 与/ 研究/ 领域/ 的/ 其他/ 提高/ 系统安全/ 的/ 相关/ 技术/ 相/ 比较/ ,/ 重点/ 分析/ 了/ TrustZone/ 技术/ 的/ 优势/ 与/ 不足/ ,/ 并/ 针对/ 不足/ 提出/ 了/ 可能/ 的/ 解决方案/ ./ 4.1/ TrustZone/ 安全/ 架构/ 分析/ TrustZone/ 技术/ 为/ 系统/ 构造/ 了/ 一个/ 安全/ 的/ 隔离/ 运行/ 环境/ ,/ 使/ 其/ 既/ 能/ 隔离/ 不可/ 信/ 软件/ 的/ 潜在/ 安全/ 威胁/ ,/ 又/ 能/ 有效/ 地/ 运行/ 被/ 隔离/ 软件/ ,/ 还/ 能够/ 监控/ 其/ 行为/ ,/ 从根本上/ 解决/ 了/ 系统/ 抵御/ 不可/ 信/ 软件/ 的/ 安全/ 威胁/ ./ 目前/ 主流/ 嵌入式/ 系统/ 中/ 建立/ 安全措施/ 的/ 方法/ 主要/ 有/ 3/ 种/ :/ SoC/ 设计/ 外置/ 硬件安全/ 模块/ 、/ SoC/ 设计/ 内置/ 硬件安全/ 模块/ 和/ 软件/ 虚拟化/ 技术/ ./ 以下/ 对/ 3/ 种/ 解决方案/ 的/ 优劣势/ 作/ 详细分析/ ,/ 并/ 与/ TrustZone/ 进行/ 比较/ 分析/ ./ 系统/ 设计/ 中外/ 置/ 一个/ 专用/ 的/ 安全/ 硬件/ 模块/ ,/ 比如/ 手机/ 中/ 的/ SIM卡/ 或/ 机顶盒/ 中/ 设置/ 访问/ 条件/ 的/ 智能卡/ ./ 该/ 方法/ 可以/ 将/ 敏感数据/ 保护/ 在/ 一个/ 安全/ 设计/ 十分/ 牢靠/ 的/ 物理/ 设备/ 中/ ,/ 也/ 因为/ 独立/ 模块/ 可以/ 使用/ Page7/ 完全/ 独立/ 的/ 设计/ 和/ 制造/ 流程/ ,/ 所以/ 在/ 设计/ 和/ 制造/ 过程/ 中/ 可以/ 充分考虑/ 使用/ 更/ 先进/ 的/ 防/ 篡改/ 、/ 物理/ 安全/ 技术/ 和/ 硅/ 工艺/ ./ 但/ 它/ 加重/ 了/ SoC/ 设计/ 开销/ ,/ 增加/ 系统/ 的/ 功耗/ 和/ 降低/ 了/ 处理器/ 的/ 性能/ ,/ 它/ 也/ 仅仅/ 是/ 提供/ 了/ 一个/ 安全/ 处理/ 和/ 安全/ 存储/ 的/ 功能/ ,/ 当/ 软件/ 运行/ 在/ 安全/ 硬件/ 模块/ 之外/ 处理/ 敏感数据/ 时/ ,/ 很/ 容易/ 使/ 数据/ 受到/ 外来/ 的/ 攻击/ ./ 第/ 2/ 种/ 是/ 系统/ 设计/ 中/ 内置/ 一个/ 硬件安全/ 模块/ ,/ 主要/ 有/ 两种/ 形式/ :/ 一是/ 管理/ 加密/ 操作/ 和/ 密钥/ 存储/ 的/ 硬件/ 模块/ ,/ 二是/ 内置在/ 主/ 处理器/ 中/ 的/ 通用/ 处理/ 引擎/ ./ 前者/ 是/ 通过/ 使用/ 内置/ 安全/ 硬件/ 逻辑/ 来/ 阻止/ 未/ 授权/ 的/ 应用/ 和/ 进程/ 对/ 敏感/ 资源/ 的/ 访问/ ,/ 相对/ 第/ 1/ 种/ 方法/ 牺牲/ 了/ 部分/ 硬件安全/ ,/ 却/ 降低/ 了/ 设计/ 成本/ ,/ 提高/ 了/ 系统/ 性能/ 而且/ 便于/ 集成/ ./ 该/ 方式/ 也/ 存在/ 第/ 1/ 种/ 方法/ 中/ 所述/ 的/ 安全/ 作用/ 范围/ 受到限制/ ,/ 即/ 在/ 硬件安全/ 作用/ 之外/ ,/ 敏感数据/ 也/ 极易/ 受到/ 各种/ 攻击/ ./ 后者/ 是/ 为/ 安全/ 子系统/ 提供/ 专用/ 的/ 通用/ 处理器/ ,/ 该/ 方式/ 与/ TrustZone/ 技术/ 的/ 硬件安全/ 解决方案/ 比较/ 类似/ ,/ 但/ 也/ 有/ 不足之处/ ./ 一是/ 设计/ 时/ 需要/ 一个/ 单独/ 的/ 物理/ 安全/ 处理器/ 会/ 增加/ 系统/ 的/ 功耗/ 和/ 硅/ 面积/ ,/ 同时/ 因为/ 安全/ 处理器/ 和/ 通用/ 处理器/ 之间/ 通信/ 时/ 需要/ 及时/ 刷新/ 共享内存/ 中/ 的/ 数据/ ,/ 而/ 共享内存/ 通常/ 是/ 外置/ 的/ ,/ 因此/ 需要/ 占用/ 大量/ 的/ 执行/ 时间/ ./ 另外/ ,/ 资源/ 分离/ 需要/ 在/ SoC/ 设计/ 中/ 进行/ 专门/ 的/ 硬件/ 扩展/ 从而/ 大大增加/ 了/ 设计/ 和/ 测试/ 工作/ ,/ 使得/ 系统/ 扩展/ 变得/ 非常/ 困难/ ./ 况且/ 内置/ 硬件安全/ 模块/ 的/ 方法/ 只能/ 保证系统/ 功能/ 方面/ 的/ 安全/ ,/ 而/ 完全/ 没有/ 考虑/ SoC/ 在/ 调试/ 和/ 测试/ 模式/ 下/ 的/ 系统安全/ ,/ 然而/ 此时/ 又/ 极易/ 受到/ 攻击/ ./ 如果/ 关闭/ 调试/ 和/ 测试/ 模式/ ,/ 必然/ 又/ 使/ 诊断/ 软件/ 问题/ 变得/ 非常/ 困难/ [/ 5/ ]/ ./ 第/ 3/ 种/ 是/ 软件/ 虚拟化/ (/ VMM/ )/ ,/ 它/ 提供/ 了/ 隔离/ 的/ 执行/ 环境/ ,/ 且/ VMM/ 具有/ 软件/ 层中/ 最高/ 特权/ 级/ ,/ 为/ 安全/ 带来/ 多方面/ 优势/ ./ VMM/ 管理/ 的/ 多个/ 虚拟机/ 独立/ 运行/ 在/ 隔离/ 环境/ 中/ ,/ 不会/ 被/ 其他/ 虚拟机/ 的/ 干扰/ 和/ 破坏/ ./ 带/ MMU/ 的/ 任何/ 处理器/ 能/ 实现/ 虚拟化/ 的/ 解决方案/ ,/ 不/ 需要/ 额外/ 的/ 硬件/ 来/ 实现/ VMM/ ,/ 安全/ 敏感/ 的/ 软件/ 可以/ 移植/ 到/ 运行/ 在/ VMM/ 的/ 安全/ 环境中运行/ ,/ 而/ 普通/ 操作系统/ 则/ 在/ 非/ 安全/ 环境/ 中/ ./ 但/ 系统/ 虚拟化/ 忽略/ 了/ 与/ 硬件/ 攻击/ 相关/ 的/ 攻击/ ,/ 比如/ 调试/ 和/ 测试/ 模式/ 下/ 遭受/ 的/ 攻击/ ./ 此时/ 要/ 保证/ 虚拟/ 系统安全/ ,/ 必须/ 禁用/ 调试/ 并且/ 保证/ 测试/ 完全/ 不/ 可见/ ,/ 而/ 这/ 又/ 使得/ 软件开发/ 和/ 诊断/ 软件/ 的/ 缺陷/ 变得/ 非常/ 困难/ ./ 另外/ ,/ 有些/ 总线/ Master/ ,/ 比如/ DMA/ 引擎/ 和/ GPU/ 等/ ,/ 能/ 绕过/ VMM/ 提供/ 的/ 保护/ 机制/ ./ 同时/ ,/ 虚拟化/ 技术/ 因为/ 需要/ 在/ 系统管理/ 和/ 资源分配/ 方面/ 做/ 大量/ 工作/ ,/ 因此/ 它们/ 自身/ 也/ 面对/ 许多/ 漏洞/ ,/ 它/ 也/ 因为/ 需要/ 模拟/ 关键/ 指令/ 而/ 增加/ 了/ 系统/ 执行/ 负载/ ./ TrustZone/ 技术/ 相比/ 这/ 3/ 种/ 提高/ 嵌入式/ 安全性/ 的/ 方案/ 具有/ 明显/ 的/ 优势/ ,/ 它/ 是/ 在/ 尽量/ 不/ 影响/ 系统/ 的/ 功耗/ 、/ 面积/ 和/ 性能/ 的/ 前提/ 下/ 提出/ 的/ ,/ 它/ 也/ 是/ 在/ 整个/ 系统/ 设计/ 中/ 扩展/ 了/ 安全/ 基础架构/ ,/ 包括/ 系统/ 的/ 功能/ 单元/ 和/ 调试/ 的/ 安全/ ,/ 而/ 不是/ 用/ 一个/ 只能/ 保护/ 敏感/ 资源/ 的/ 专门/ 安全/ 硬件/ 模块/ ,/ 它/ 可以/ 保护/ 整个/ 系统/ 的/ 安全/ ,/ 是/ 一个/ 彻底/ 的/ 安全/ 解决方案/ ./ 基于/ 其/ 硬件/ 扩展/ 架构/ 有/ 与/ 之/ 相配套/ 的/ 安全/ 软件架构/ ,/ 能够/ 保证/ 安全/ 启动/ ,/ 在/ 受到/ 黑客/ 和/ 木马/ 等/ 攻击/ 时/ 都/ 会/ 有/ 相对/ 应/ 的/ 安全/ 应对/ 机制/ ,/ 调试模式/ 只有/ 在/ 得到/ 授权/ 以后/ 才/ 会/ 开启/ ./ 4.2/ TrustZone/ 与/ 其他/ 类似/ 技术/ 对比/ 分析/ 目前/ ,/ 针对/ 移动/ 和/ 嵌入式/ 领域/ ,/ TI/ 推出/ 了/ 类似/ TrustZone/ 技术/ 的/ 安全/ 隔离/ 技术/ M/ -/ Shield/ [/ 25/ ]/ ,/ 如图/ 5/ 所示/ ,/ 它/ 也/ 是/ 一种/ 系统/ 级/ 的/ 安全/ 解决方案/ ,/ 紧密/ 地/ 结合/ 了/ 硬件/ 和/ 软件/ 组件/ ,/ 能为/ 各种/ 利益/ 相关者/ 提供/ 高级/ 别的/ 安全/ ./ M/ -/ Shield/ 技术/ 为/ 移动/ 平台/ 安全/ 提供/ 了/ 安全/ 的/ 基础架构/ ,/ 可以/ 进行/ 高/ 价值/ 内容/ 传送/ 或/ 存储/ ./ 敏感/ 应用/ 的/ 安全/ 执行/ 和/ 数据/ 的/ 安全/ 存储/ 由/ 硬件/ 增强/ 的/ 安全/ 环境/ 进行/ 保证/ ,/ 它/ 定义/ 了/ 安全/ 的/ ROM/ 和/ RAM/ 并/ 嵌入/ 了/ 一个/ 安全/ 状态机/ (/ SecureStateMachine/ ,/ SSM/ )/ ,/ SSM/ 负责/ 应用/ 和/ 管理/ 在/ 进入/ 、/ 执行/ 和/ 退出/ 安全/ 环境/ 时/ 的/ 安全策略/ ,/ 且/ 消除/ 了/ 芯片/ 互连/ 及/ DMA/ 数据传输/ 的/ 脆弱性/ ./ 安全/ 的/ 芯片/ 互连/ 允许/ 安全/ 环境/ 和/ 安全/ DMA/ 通道/ 对外/ 设/ 和/ 内存/ 进行/ 访问/ ,/ 这样/ 有效/ 地/ 保证/ 了/ 敏感数据/ 在/ 整个/ 数据通道/ 传送/ 过程/ 中/ 的/ 可信性/ ./ 为了/ 补充/ 该/ 技术/ ,/ TI/ 开发/ 了/ 一种/ 安全/ 中间/ 组件/ ,/ 包括/ 安全/ 框架/ 和/ 基于/ TrustZone/ 标准/ API/ ./ 它们/ 提供/ 了/ 开放/ 的/ 移动/ 安全/ 框架/ ,/ 从而/ 为/ 使用/ OMAP/ 与/ OMAP/ -/ Vox/ 处理器/ 的/ 手机/ 创造/ 了/ 可靠/ 而/ 灵活/ 的/ 应用环境/ ./ 而/ 针对/ PC/ 端/ ,/ 限于/ 文章/ 篇幅/ ,/ 这里/ 作/ 简要/ 介绍/ ./ Page8Intel/ 和/ AMD/ 就/ 通过/ 扩展/ x86/ 指令集/ 推出/ 了/ LateLaunch/ 技术/ ,/ 分别/ 为/ TXT/ [/ 26/ ]/ (/ TrustedExecutionTechnology/ )/ 和/ SVM/ [/ 27/ ]/ (/ SecureVirtualMachine/ )/ ,/ 它们/ 允许/ 软件/ 模块/ 运行/ 在/ 与/ ROS/ 隔离/ 的/ 安全/ 环境/ 中/ ,/ Flicker/ 和/ TrustVisor/ 都/ 是/ 基于/ 这些/ 技术/ 建立/ 起来/ 的/ 可信/ 系统/ ./ 他们/ 指定/ TPM/ 作为/ LateLaunch/ 的/ 可信/ 根/ ,/ 一旦/ LateLaunch/ 启动/ ,/ 运行/ 在/ CPU/ 隔离/ 环境/ 的/ 软件/ 代码/ 被/ 度量/ ,/ 度量/ 值/ 被/ 存储/ 在/ TPM/ 中/ ,/ 程序运行/ 结束/ 后/ ,/ TPM/ 的/ AIK/ 密钥/ 对此/ 度量/ 值/ 进行/ 签名/ 以向/ 外界/ 证明/ 运行/ 在/ 隔离/ 环境/ 中/ APP/ 的/ 完整性/ ,/ 但/ TPM/ 硬件/ 模块/ 是/ 针对/ PC/ 端/ ,/ 并/ 不/ 适合/ 对/ 体积/ 和/ 功耗/ 要求/ 苛刻/ 的/ 嵌入式/ 领域/ ./ 另外/ ,/ Intel/ 近期/ 推出/ 了/ 一项/ 新/ 的/ 处理器/ 技术/ SGX/ [/ 28/ ]/ (/ SoftwareGuardExtensions/ )/ ,/ 它/ 是/ 一种/ 旨在/ 通过/ 逆向/ 沙箱/ 的/ 机制/ 以/ 提高/ 软件/ 安全性/ ./ 这种/ 方法/ 并/ 不是/ 试图/ 识别/ 并/ 隔离/ 平台/ 上/ 所有/ 恶意软件/ ,/ 而是/ 将/ 合法/ 软件/ 封闭/ 在/ 一个/ 地点/ ,/ 保护/ 其不受/ 恶意软件/ 攻击/ ,/ 不论/ 恶意软件/ 有/ 何种/ 特权/ 级别/ ./ 它/ 能/ 将/ 安全/ 应用/ 依赖/ 的/ TCB/ (/ TrustedComputingBase/ )/ 减小/ 到/ 仅/ 包含/ CPU/ 和/ 安全/ 应用/ 本身/ ,/ 将/ 不可/ 信/ 的/ 复杂/ OS/ 和/ 虚拟机/ 监控器/ VMM/ 排除/ 在/ 安全/ 边界/ 外/ ,/ 然而/ 目前/ 市场/ 上/ 还/ 没有/ 支持/ SGX/ 的/ CPU/ 出现/ ,/ 而且/ 模拟器/ 也/ 很/ 难/ 找到/ ./ 4.3/ TrustZone/ 技术/ 的/ 优势/ 与/ 不足/ TrustZone/ 技术/ 是/ 通过/ 对/ 硬件/ 和/ 软件/ 部分/ 的/ 合理/ 组合/ 而/ 设计/ 的/ 具有/ 高度/ 安全性/ 的/ 系统/ 架构/ ,/ 而/ 对于/ 功耗/ ,/ 性能/ 和/ 面积/ 影响/ 微乎其微/ ./ 因此/ ,/ 该/ 技术/ 在/ 提高/ 嵌入式/ 系统安全/ 方面/ 拥有/ 大量/ 的/ 技术/ 和/ 商业/ 上/ 的/ 优势/ ,/ 主要/ 分为/ 以下/ 几个/ 方面/ 进行/ 阐述/ ./ 首先/ ,/ 它/ 可以/ 为片/ 上/ 的/ 保密/ 数据/ 提供/ 安全/ 的/ 隔离/ 环境/ ,/ 而/ 这种/ 处理/ 方式/ 也/ 是/ 目前/ 保密/ 的/ 最佳/ 途径/ ./ 例如/ ,/ 如果/ 想用/ SoC/ 上/ 的/ 一个/ CPU/ 来/ 处理/ SIM卡/ 中/ 的/ 密钥/ ,/ 必须/ 确保/ 在/ SoC/ 环境/ 中有/ 个/ 完全/ 安全/ 的/ 区域/ ,/ 一个/ 不怎么/ 安全/ 的/ OS/ 是/ 不/ 可以/ 做/ 这些/ 操作/ 的/ [/ 3/ ]/ ./ 其次/ ,/ 性能/ 一直/ 是/ 某些/ 保密/ 系统/ 中/ 难以克服/ 的/ 问题/ ,/ 特别/ 是/ 在/ 片/ 上/ 处理器/ 和/ 片/ 外存储器/ 之间/ 需要/ 频繁/ 传递信息/ 时/ ,/ 这些/ 信息/ 必须/ 经过/ 加密/ ./ 此时/ TrustZone/ 便/ 可/ 发挥作用/ ,/ 因为/ 它/ 对/ 整个/ 存储空间/ 都/ 可以/ 保证/ 完全/ 的/ 总线/ 带宽/ ,/ 而/ 在/ 其/ 安全/ 缓冲区/ 数据/ 却/ 可以/ 以/ 明文/ 的/ 形式/ 存储/ 从而/ 实现/ 快速访问/ ./ 加密/ 过/ 的/ 数据/ 则/ 可以/ 以/ 普通/ 方式/ 存放/ 在/ FLASH/ 存储器/ 中/ ,/ 这样/ 可以/ 使用/ 一些/ 便宜/ 的/ ,/ 容量/ 大/ 的/ ,/ 灵活/ 的/ 存储/ 方式/ [/ 3/ ]/ ./ 另外/ ,/ TrustZone/ 系统/ 架构/ 是/ 软硬件/ 的/ 合理/ 组合/ ,/ 即使/ 在/ SoC/ 设计/ 完成/ 后/ ,/ 它/ 依然/ 可以/ 保证/ 用户/ 能够/ 灵活/ 地/ 定制/ 和/ 升级/ 保密/ 系统/ ./ 最后/ ,/ TrustZone/ 在/ 嵌入式/ 系统/ 中/ 定义/ 了/ 一个/ 安全/ 的/ 隔离/ 环境/ ,/ 该/ 独立/ 环境/ 中/ 包含/ 一些/ 直接/ 的/ 外设/ 通道/ ,/ 用户界面/ ,/ SIM卡/ ,/ 智能卡/ 及/ 音频/ 输出/ 等/ ./ 对于/ 非保密/ 部分/ ,/ TrustZone/ 可以/ 通过/ 完整性检查/ 机制/ 为/ SoC/ 器件/ 中/ 的/ 所有/ 部分/ 提供/ 安全/ 保护/ ./ 例如/ ,/ 解码/ 后/ 的/ DRM/ 音频/ 数据/ 被/ 传送/ 到/ 非保密/ 区域/ 中/ 时/ 可以/ 通过/ 操作系统/ 有关/ 部件/ 的/ 完整性/ 检测/ 来/ 受到/ 保护/ [/ 3/ ]/ ./ 虽然/ TrustZone/ 技术/ 是/ 提高/ 嵌入式/ 系统/ 安全性/ 比较/ 行之有效/ 的/ 系统/ 级/ 安全/ 解决方案/ ,/ 体现/ 了/ 很多/ 的/ 安全/ 特性/ :/ 平台/ 的/ 识别/ 和/ 认证/ ,/ 密钥/ 管理/ ,/ 底层/ 加密技术/ ,/ I/ // O/ 访问控制/ ,/ 安全/ 数据/ 存储/ ,/ 智能卡/ 控制/ 及/ 代码/ // 完整性/ 核查/ 等/ [/ 3/ ]/ ./ 然而/ ,/ 它/ 也/ 不是/ 万能/ 的/ ,/ 自身/ 也/ 存在/ 许多/ 不足/ ,/ 主要/ 体现/ 在/ 以下/ 几个/ 方面/ ./ 首先/ ,/ 它/ 只能/ 很/ 好/ 地/ 防御/ 各种/ 软件/ 攻击/ ,/ 难以/ 防止/ 物理攻击/ ,/ 比如/ 物理/ 篡改/ 设备/ 的/ 主存/ ./ 另外/ ,/ 虽然/ 它/ 可以/ 通过/ 度量/ 机制/ 保证/ 安全/ 隔离/ 内核/ 代码/ 的/ 安全性/ ,/ 也/ 会/ 定期/ 对/ ROS/ 内核/ 做/ 完整性检查/ ,/ 但/ 此时/ 攻击/ 已经/ 发生/ ,/ 因此/ 无法/ 真正/ 防御/ 对系统/ 的/ 恶意/ 攻击/ ./ 其次/ ,/ 它/ 仅仅/ 提供/ 了/ 一个/ 隔离/ 的/ 执行/ 环境/ ,/ 而/ 没有/ 向/ 用户/ 或/ 远程/ 者/ 证明/ 这个/ 环境/ 是/ 可信/ 的/ ./ 最后/ ,/ 为/ 系统/ 平台/ 提供/ 一个/ 可靠/ 的/ 可信/ 根是/ 整个/ 系统安全/ 的/ 基石/ ,/ 而/ 目前/ 该/ 技术/ 是/ 通过/ 在/ 片/ 上/ 系统/ 固化/ 设备/ 密钥/ 作为/ 可信/ 根/ ,/ 这种/ 方法/ 会/ 存在/ 密钥/ 更新/ 困难/ ,/ 一旦/ 泄露/ 会/ 导致/ 整个/ 平台/ 无法/ 使用/ 的/ 弊端/ ./ 且/ 这种/ 方式/ 需要/ 将/ 设备/ 密钥/ 长期/ 存储/ 在/ 设备/ 上/ ,/ 其/ 安全/ 很难/ 保证/ ,/ 比如/ 如何/ 防御/ 旁道/ 攻击/ 、/ 故障/ 攻击/ 和/ 逆向/ 工程/ 等/ 类型/ 的/ 攻击/ ./ 因此/ ,/ 如何/ 在/ 不/ 需要/ 在/ TrustZone/ 现有/ 硬件安全/ 基础架构/ 内/ 增加/ 硬件/ 的/ 前提/ 下/ 提供/ 一个/ 可/ 同时/ 防御/ 物理攻击/ 和/ 软件/ 攻击/ 的/ 信任/ 根/ ,/ 保证系统/ 从/ 设备/ 上电到/ 运行/ 都/ 在/ 可信/ 的/ 执行/ 环境/ 下/ ,/ 也/ 必须/ 要/ 重点/ 考虑/ ./ 当然/ ,/ 面对/ 嵌入式/ 领域/ 日益/ 严峻/ 的/ 安全/ 需求/ ,/ 如何/ 保证/ 基于/ TrustZone/ 安全/ 隔离/ 的/ 执行/ 环境/ 在/ 提供/ 各种/ 敏感/ 数据处理/ 和/ 安全/ 服务/ 的/ 同时/ 保证/ 其/ TCB/ 尽量/ 小/ ,/ 使/ TOS/ 安全性/ 得到/ 足够/ 保障/ 也/ 显得/ 非常/ 关键/ ./ 虽然/ 可信计算/ 组织/ (/ TrustedComputingGroup/ ,/ TCG/ )/ 结合/ 硬件/ 和/ 软件/ ,/ 为/ 实现/ 更/ 安全/ 的/ 计算环境/ ,/ 发布/ 了/ 适合/ PC/ 平台/ 的/ 可信/ 平台/ 模块/ (/ TPM/ )/ [/ 29/ ]/ ,/ Intel/ 和/ AMD/ 都/ 指定/ TPM/ 作为/ LateLaunch/ 的/ 可信/ 根/ ,/ 但/ TPM/ 硬件/ 模块/ 并/ 不/ 适合/ 对/ 面积/ 和/ 功耗/ 要求/ 苛刻/ 的/ 嵌入式/ 领域/ ./ 随后/ TCG/ 针对/ 嵌入式/ 和/ 移动/ 应用/ 又/ 发布/ 了/ 移动/ 可信/ 模块/ (/ MobileTrustedModule/ ,/ Page9MTM/ )/ ,/ 并/ 引入/ 可信/ 启动/ ,/ 但/ 遗憾/ 的/ 是/ MTM/ 是/ 功能/ 而/ 非/ 硬件/ 实现/ [/ 30/ ]/ ./ 有/ 文献/ 研究/ 也/ 对/ MTM/ 的/ 性能/ 进行/ 了/ 重新/ 评估/ ,/ 认定/ MTM/ 会/ 增加/ 系统/ 的/ 功耗/ 并/ 降低/ 加密/ 功能/ 的/ 性能/ [/ 31/ ]/ ./ 因此/ ,/ 目前/ 将/ MTM/ 作为/ 嵌入式/ 系统/ 的/ 可信/ 根/ 还/ 不是/ 一种/ 理想/ 的/ 选择/ ./ 而/ 基于/ SRAMPUF/ (/ PhysicalUnclonableFunctions/ )/ 技术/ 提取/ 密钥/ 作为/ 可信/ 根/ 的/ 方式/ 会/ 是/ 一种/ 比较/ 行之有效/ 的/ 方法/ ,/ 它/ 直接/ 集成/ 设备/ SRAM/ 的/ 物理/ 特性/ ,/ 因此/ 不/ 需要/ 额外/ 的/ 硬件资源/ ,/ 可以/ 降低/ 设备/ 的/ TCB/ ./ 另外/ ,/ SRAMPUF/ 技术/ 作为/ 密钥/ 提取/ 和/ 安全/ 存储/ ,/ 可以/ 抵御/ 各种/ 软硬件/ 攻击/ ,/ 比如/ 抵御/ 逆向/ 工程/ 和/ 有效/ 防止/ 克隆/ 等/ ,/ 从而/ 在/ 一定/ 程度/ 上/ 解决/ TrustZone/ 难以/ 防/ 物理攻击/ 的/ 弊端/ ./ 另外/ ,/ 它/ 也/ 可以/ 用于/ 构造/ 随机数/ 发生器/ ,/ 免去/ 硬件/ 构造/ 带来/ 的/ 成本/ 、/ 性能/ 和/ 功耗/ 的/ 影响/ ./ 而/ 针对/ TrustZone/ 技术/ 隔离/ 的/ TEE/ 没有/ 向/ 用户/ 或/ 远程/ 者/ 提供/ 证明/ 运行/ 在/ TEE/ 的/ 软件/ 没有/ 被/ 恶意代码/ 篡改/ 的/ 证据/ ,/ 可以/ 将/ 该/ 技术/ 结合/ 软件/ MTM/ 提供/ 的/ 远程/ 证明/ 功能/ 实现/ ./ TrustZone/ 可以/ 保证/ 软件/ MTM/ 运行/ 在/ 一个/ 安全/ 的/ 隔离/ 环境/ 中/ ,/ 而/ 软件/ MTM/ 可以/ 远程/ 证明/ TOS/ 是/ 可信/ 的/ ./ 除此之外/ ,/ 它/ 还/ 可以/ 为/ 系统/ 平台/ 提供/ 丰富/ 的/ 可信计算/ 功能/ ,/ 比如/ 安全/ 存储/ 、/ 身份/ 认证/ 、/ 平台/ 安全/ 保护/ 等/ ./ 当然/ ,/ 在/ 考虑/ 系统安全/ 的/ 同时/ ,/ 必须/ 充分考虑/ 应用/ 需求/ ,/ 针对/ 具体/ 应用/ 场景/ 进行/ 设计/ 以/ 保证/ TOS/ 的/ TCB/ 足够/ 小/ ,/ 实现/ 真正/ 意义/ 上/ 的/ 系统安全/ ./ 5/ 基于/ TrustZone/ 的/ 相关/ 研究/ 工作/ 针对/ 嵌入式/ 系统/ 及其/ 应用/ 的/ 安全/ 问题/ 日益突出/ 的/ 现状/ ,/ 业界/ 成功/ 推出/ 了/ 基于/ TrustZone/ 技术/ 的/ 安全/ 解决方案/ ,/ 学术界/ 也/ 围绕/ 该/ 技术/ 展开/ 相关/ 研究/ ./ 通过/ 归纳/ 总结/ ,/ 其/ 相关/ 研究/ 工作/ 主要/ 分为/ 以下/ 几个/ 方面/ ./ 5.1/ 基于/ TrustZone/ 构建/ 安全/ 平台/ TrustZone/ 技术/ 提供/ 了/ 一个/ 安全/ 的/ 基础架构/ ,/ 开发者/ 可/ 利用/ 此/ 技术/ 构建/ 自己/ 的/ 安全/ 平台/ 以/ 满足/ 各种/ 安全/ 需求/ ,/ 比如/ 安全/ 支付/ 、/ 指纹识别/ 、/ DRM/ 等/ ./ Samsung/ 公司/ 基于/ 开源/ 的/ Android/ 系统/ 和/ TrustZone/ 技术/ 推出/ 了/ 全新/ 全方位/ 的/ 移动/ 安全/ 平台/ KNOX/ ,/ 它/ 是/ 利用/ 安卓/ 安全/ 增强/ (/ AndroidSE/ )/ [/ 32/ -/ 33/ ]/ 执行/ 强制/ 访问/ 控制策略/ 来/ 隔离/ 平台/ 内/ 的/ 应用程序/ 和/ 数据/ ,/ 从而/ 为/ 平台/ 和/ 应用/ 都/ 提供/ 安全/ 保障/ [/ 34/ ]/ ,/ 其/ 系统/ 框架/ 如图/ 6/ 所示/ ./ AndroidSE/ 安全/ 机制/ 需要/ 保证/ 操作系统/ 内核/ 完整/ ,/ 否则/ 会/ 失效/ ./ KNOX/ 系统/ 架构/ 中/ 基于/ Trust/ -/ Zone/ 的/ 完整性/ 测量/ 结构/ (/ TrustZone/ -/ basedIntegrityMeasurementArchitecture/ ,/ TIMA/ )/ 就是/ 为了/ 关闭/ 这个/ 漏洞/ ,/ 它/ 使用/ TrustZone/ 硬件/ 架构/ 有效/ 地/ 将/ 内存/ 和/ CPU/ 资源/ 划/ 为/ 安全区/ 和/ 普通/ 区/ ,/ 其中/ TIMA/ 运行/ 在/ 安全区/ ,/ 不能/ 被/ 禁用/ ,/ 而/ Linux/ 内核/ 的/ AndroidSE/ 运行/ 在/ 普通/ 区/ ./ TIMA/ 实时/ 对/ Linux/ 内核/ 进行/ 连续/ 完整性/ 监测/ ,/ 当/ TIMA/ 检测/ 到/ 内核/ 的/ 完整性/ 受到/ 攻击/ 时/ ,/ 它会/ 通过/ 移动/ 设备/ 管理/ (/ MDM/ )/ 通知/ 企业/ IT/ ,/ 企业/ IT/ 能/ 采取相应/ 的/ 策略/ 来/ 保护/ 内核/ 的/ 完整性/ ./ 这样/ ,/ 安全/ 启动/ 和/ AndroidSE/ 及/ TIMA/ 形成/ 防御/ 恶意/ 攻击/ 内核/ 和/ 核心/ 辅助/ 进程/ 的/ 第一道/ 安全/ 防线/ ./ AMD/ 公司/ 提供/ 内/ 置于/ AMDAPU/ 中/ 的/ 专门/ 平台/ 安全/ 处理器/ (/ PlatformSecuritycoProcessor/ ,/ PSP/ )/ ,/ 它/ 是/ AMD64/ 核/ 的/ 集成/ 协处理器/ ,/ 如图/ 7/ 所示/ ,/ 它/ 通过/ 利用/ TrustZone/ 技术/ 将/ CPU/ 分为/ 两个/ 虚拟/ 区域/ 来/ 打造/ 安全/ 环境/ ,/ 敏感/ 任务/ 运行/ 在/ PSP/ 上/ ,/ 即/ 在/ 安全/ 区域/ 运行/ ,/ 而/ 其他/ 任务/ 则/ 在/ 普通/ 模式/ 下/ 运行/ ./ 这样/ 能够/ 确保安全/ 存储/ 以及/ 处理/ 敏感数据/ 和/ 可信赖/ 的/ 应用程序/ ,/ 并/ 能/ 很/ 好/ 地/ 保护/ 关键/ 资源/ 的/ 完整性/ 和/ 机密性/ [/ 35/ ]/ ./ Page102014/ 年/ 1/ 月/ AMD/ 推出/ 首款/ ARM/ 架构/ 服务器/ 处理器/ OpteronA1100/ ,/ 它/ 是/ 一款/ 完整/ 的/ SoC/ ,/ 而/ 不是/ CPU/ ,/ 具备/ 完整/ 的/ 功能设计/ ./ OpteronA1100/ 基于/ ARM/ 的/ Seattle/ 架构/ 核心/ 设计/ ,/ 芯片/ 内核/ 架构/ 为/ 64/ 位/ Cortex/ -/ A57/ ,/ 四/ 核心/ 设计/ ,/ 芯片/ 的/ 默认/ 频率/ 为/ 2GHz/ ,/ 功耗/ 低于/ 20W/ ,/ 拥有/ 4MB/ 的/ 二级缓存/ 和/ 8MB/ 的/ 三级/ 缓存/ ,/ 支持/ 双/ DDR3/ 或/ DDR4/ 存储/ 通道/ 和/ 双万兆/ 以太网/ 接口/ ,/ 它/ 是/ 第一个/ 支持/ TrustZone/ 安全/ 模块/ 的/ 服务器/ 处理器/ ,/ 充分利用/ 了/ 该/ 技术/ 在/ 安全/ 方面/ 的/ 优势/ ,/ 为/ 提高/ 此类/ 服务器/ 的/ 安全/ 起到/ 了/ 非常/ 重要/ 的/ 作用/ ./ Apple/ 公司/ 定制/ 了/ 一个/ 高度/ 优化/ 过/ 的/ TrustZone/ 安全/ 框架/ ,/ 并/ 以此/ 为/ 基础/ 推出/ 了/ SecureEnclave/ 模块/ ,/ 能够/ 很/ 好地解决/ 如何/ 加密/ 、/ 存储/ 和/ 保护/ 用户/ 指纹/ 类/ 这些/ 极/ 重要/ 的/ 生物学/ 信息/ ,/ 并/ 负责/ 验证/ 来自/ TouchID/ 的/ 指纹/ 数据/ ,/ 如果/ 数据/ 匹配/ 则/ 启动/ 访问/ 或/ 购买/ ./ SecureEnclave/ 模块/ 是/ 内置在/ AppleA7/ 芯片/ 中/ 的/ 协处理器/ ,/ 具有/ 独立/ 于主/ 处理器/ 的/ 安全/ 启动/ 和/ 软件/ 更新/ 机制/ ./ A7/ 通过/ 串行/ 外围/ 接口/ 总线/ (/ SPI/ )/ 与/ TouchID/ 通信/ 来/ 获取/ 指纹/ 数据/ 但/ 不能/ 读取数据/ 的/ 内容/ 并/ 将/ 数据/ 传递/ 给/ SecureEnclave/ ,/ 由/ 其/ 负责/ 数据/ 的/ 加密/ 操作/ 和/ 完整性/ 保护/ [/ 36/ ]/ ./ 业界/ 推出/ 的/ 安全/ 平台/ 都/ 是/ 基于/ TrustZone/ 提供/ 的/ 硬件安全/ 隔离/ 环境/ 进行/ 敏感/ 信息处理/ 和/ 安全/ 存储/ 及/ 设计/ 安全/ 服务/ 来/ 服务/ 于/ 应用/ 需求/ ./ 以上/ 三星/ 的/ TIMA/ 完成/ Linux/ 内核/ 的/ 完整性/ 核查/ ,/ AMD/ 的/ PSP/ 负责/ 应用/ 敏感/ 信息/ 的/ 处理/ 和/ Apple/ 的/ SecureEnclave/ 负责/ 处理/ 指纹/ 类/ 生物/ 信息/ 的/ 处理/ 都/ 是/ 基于/ 此/ 思想/ ./ 由于/ 敏感/ 信息处理/ 和/ 安全/ 存储/ 及/ 安全/ 服务/ 都/ 在/ 一个/ 受到/ TrustZone/ 硬件/ 隔离/ 的/ 保护/ 且/ 与/ ROS/ 完全/ 隔离/ 的/ 环境/ 中/ ,/ 其/ 安全性/ 能够/ 得到/ 足够/ 保证/ ./ 5.2/ 基于/ TrustZone/ 构建/ 安全/ 系统/ 环境/ 系统/ 功能/ 越来越/ 复杂/ ,/ 代码/ 量/ 越来越/ 大/ ,/ 无法/ 避免/ 存在/ 各种/ 漏洞/ ,/ 黑客/ 可以/ 利用/ 这些/ 漏洞/ 实施/ 攻击/ 从而/ 获取/ 系统/ 的/ 敏感/ 信息/ ./ 利用/ TrustZone/ 的/ 硬件安全/ 隔离/ 优势/ 可以/ 保障/ ROS/ 系统/ 的/ 安全/ ./ 文献/ [/ 37/ ]/ 提出/ 了/ 基于/ 该/ 技术/ 的/ 实时/ 内核/ 保护/ (/ TZ/ -/ RKP/ )/ 机制/ ,/ 如图/ 8/ 所示/ ,/ ROS/ 内核/ 中/ 控制指令/ 和/ 页表/ 更新/ 功能/ 会/ 放到/ TOS/ 中/ 审核/ 后/ 执行/ 而/ 不/ 允许/ ROS/ 对/ 其/ 直接/ 修改/ ./ 它/ 主要/ 强制/ 对/ 内核/ 中/ 某些/ 特权/ 系统/ 功能/ 放到/ 安全/ 环境/ 中/ 进行/ 核查/ 和/ 授权/ 后/ 才/ 允许/ 执行/ ,/ 从而/ 有效/ 的/ 阻止/ 修改/ 和/ 添加/ 内核/ 文件/ 的/ 攻击/ ./ 但/ 此文/ 针对/ 诱骗/ 内核/ 修改/ 自身/ 数据/ 类/ 攻击/ 没有/ 在/ TZ/ -/ KRP/ 内/ 实现/ 相应/ 的/ 检测/ 机制/ 和/ 处理/ 机制/ ,/ 而/ 这类/ 攻击/ 能/ 劫持/ 内核/ 控制流/ 使/ 其/ 严重/ 损坏/ ./ 文献/ [/ 38/ ]/ 针对/ 嵌入式/ 系统/ 提出/ 了/ 一种/ 高/ 安全/ 系统/ 原语/ 平台/ ,/ 主要/ 将/ TrustZone/ 、/ TPM/ 和/ 可编程/ 安全控制/ 逻辑/ (/ PSCL/ )/ 结合/ 在/ 一起/ ,/ 该/ 平台/ 改善/ 了/ 嵌入式/ 系统/ 性能/ 并/ 提高/ 了/ 系统/ 安全性/ ./ 其中/ ,/ PSCL/ 主要/ 包括/ 以下/ 组件/ :/ 安全/ 有限/ 状态机/ (/ SFSM/ )/ 、/ 可编程/ 安全/ 数据通路/ (/ PSD/ )/ 及/ 可编程/ 安全/ 处理/ 模块/ (/ PSPM/ )/ ./ TPM/ 仅仅/ 与/ 安全/ 内核/ 交互/ ,/ 主要/ 提供/ 安全/ 存储/ 、/ 内核/ 完整性/ 度量/ 和/ 系统安全/ 完整性/ 报告/ ./ 当/ 系统/ 运行/ 可信/ 应用/ 时会/ 先/ 配置/ SFSM/ ,/ SFSM/ 将/ 核查/ 需要/ 使用/ 什么/ 外设/ ,/ 并/ 基于/ 此/ SFSM/ 定义/ PSD/ 告知/ 安全/ CPU/ ,/ 安全/ CPU/ 选择/ 合适/ 的/ 参数/ 并/ 将/ 其/ 写入/ 配置/ 寄存器/ ,/ 同时/ SFSM/ 基于/ 这些/ 参数/ 构建/ PSPM/ ./ 当/ PSD/ 和/ PSPM/ 被/ 构建/ ,/ SFSM/ 会/ 继续/ 通过/ 安全/ CPU/ 监测/ 系统/ 当前/ 所处/ 的/ 状态/ 是否/ 安全/ ,/ 一旦/ 系统/ 不/ 安全/ ,/ 安全/ CPU/ 会/ 复位/ SFSM/ 并会/ 刷新/ PSD/ 和/ PSPM/ ./ 但/ 此文/ 对/ 该/ 设计/ 的/ 安全策略/ 、/ 性能/ 及/ 安全/ CPU/ 与/ SFSM/ 之间/ 的/ 安全/ 通讯/ 协议/ 没有/ 作/ 深入分析/ ./ 文献/ [/ 39/ ]/ 基于/ TrustZone/ 和/ 安全/ Linux/ 系统/ 为/ 嵌入式/ 系统/ 构建/ 了/ 一个/ 安全/ 增强/ 框架/ ,/ 该/ 框架/ 由/ 多/ 策略/ 访问控制/ 机制/ 和/ 一种/ 安全/ 增强/ 方法/ 组成/ ./ 其中/ ,/ 多/ 策略/ 访问控制/ 机制/ 通过/ 利用/ DTE/ (/ DomainandTypeEnforcement/ )/ 模型/ 和/ 改善/ 的/ BLP/ (/ Bell/ -/ LaPadula/ )/ 模型/ 实现/ ;/ 而/ 安全/ 增强/ 方法/ 通过/ 雇佣/ Linux/ 安全/ 模块/ (/ LSM/ )/ 框架/ 从而/ 为/ 系统/ 提供/ 强有力/ 的/ 防护/ ./ 普通/ 环境/ 利用/ 安全/ Linux/ 提供/ 的/ BLP/ 和/ DTE/ 策略/ 避免/ 恶意/ 攻击/ ,/ 保证系统/ 的/ 完整性/ 和/ 机密性/ ,/ 而/ 安全/ 应用/ 通过/ 调用/ 基于/ TrustZone/ 隔离/ 的/ 安全/ 环境/ 内/ 的/ 安全/ 服务/ 进行/ 处理/ ./ 该/ 原型/ 设计/ 能够/ 为/ 开放/ 的/ 嵌入式/ 系统/ 和/ 各种/ 应用/ 提供/ 安全/ 的/ 执行/ 环境/ ,/ 但/ 本文/ 没有/ 结合/ 具体/ 的/ 应用/ 场景/ ,/ 也/ 没有/ 具体/ 实现/ 的/ 安全/ 服务/ ./ 文献/ [/ 40/ ]/ 针对/ 抗/ 恶意/ 攻击/ 工具/ 为了/ 监测/ 到/ 最新/ 的/ 恶意/ 攻击/ 需要/ 持续/ 更新/ 提出/ 了/ 基于/ TrustZonePage11/ 的/ 内存/ 获取/ 机制/ TrustDump/ ,/ 它/ 能够/ 获取/ ROS/ 中/ RAM/ 和/ CPU/ 寄存器/ 的/ 数据/ ./ 即使/ ROS/ 受到/ 损坏/ ,/ TrustDump/ 也/ 能/ 保证/ 自身/ 的/ 安全/ ,/ 该/ 方法/ 很/ 好/ 地/ 实现/ 了/ 恶意/ 进程/ 检测/ 和/ 内核/ 完整性/ 度量/ ,/ 从而/ 保障/ 了/ 系统/ 的/ 安全/ ./ 然而/ ,/ 此文/ 对/ 获取/ 的/ 数据/ 只/ 做/ 了/ 相对/ 简单/ 的/ 在线/ 分析/ ,/ 且/ 没有/ 针对/ 检测/ 到/ 的/ 攻击/ 实现/ 的/ 具体/ 处理/ 方案/ ./ 5.3/ 基于/ TrustZone/ 构建/ 可信计算/ 环境/ TrustZone/ 的/ 隔离/ 环境/ 需要/ 一个/ 可信计算/ 环境/ 为/ 系统/ 平台/ 提供/ 丰富/ 的/ 可信计算/ 功能/ ./ 基于/ 该/ 技术/ 构建/ MTM/ 是/ 一种/ 常见/ 的/ 构建/ 可信/ 移动/ 平台/ 的/ 方法/ ,/ 为/ MTM/ 的/ 运行/ 提供/ 安全/ 保障/ ./ 文献/ [/ 41/ ]/ 融合/ TCG/ 的/ 可信计算/ 概念/ 和/ 该/ 技术/ 建立/ 起/ 一个/ 开源/ 的/ 基于/ Linux/ 嵌入式/ 可信计算/ 平台/ ./ 具体/ 是/ 在/ TrustZone/ 的/ 安全/ 区域/ 构建/ 了/ 一个/ 虚拟化/ 框架/ ,/ 并/ 基于/ 此基础/ 上/ 设计/ 了/ 一个/ 可信/ 移动/ 平台/ 原型/ ,/ 并/ 实现/ 了/ 安全/ 启动/ ,/ 这个/ 原型/ 实现/ 了/ 纯/ 软件/ 的/ MTM/ ,/ 而/ 不/ 需要/ 增加/ 额外/ 的/ 硬件/ ./ 该文/ 也/ 证实/ 了/ 利用/ 硬件安全/ 机制/ 实现/ 嵌入式/ 可信计算/ 软件平台/ 的/ 可行性/ ./ 但/ 此文/ 基于/ 开源/ 操作系统/ Linux/ 作为/ 基础/ 安全/ 部件/ 构建/ MTM/ 软件/ ,/ 存在/ TCB/ 过大/ 的/ 弊端/ ,/ 安全性/ 得不到/ 足够/ 保证/ ./ 文献/ [/ 42/ ]/ 分别/ 讨论/ 了/ 基于/ TrustZone/ 和/ 具体/ 安全/ 组件/ (/ 如/ 智能卡/ JavaCard/ )/ 提供/ 的/ 隔离/ 环境/ 构建/ 软件/ MTM/ ,/ 分析/ 得出/ 基于/ TrustZone/ 能/ 提供/ 类似/ 硬件/ MTM/ 的/ 保护/ 能力/ ,/ 基于/ 智能卡/ 实现/ 的/ 软件/ MTM/ 能/ 匹配/ 硬件/ TPM/ 的/ 保护/ 机制/ ,/ 但/ 本文/ 对/ 这/ 两种/ 实现/ 方式/ 的/ 区别/ 没有/ 具体/ 的/ 论述/ ,/ 也/ 因为/ 当时/ 没有/ 具体/ 公开/ 有效/ 的/ MTM/ 测试/ 套件/ 而/ 不能/ 确认/ 他们/ 的/ 实现/ 是否/ 完全符合/ TCG/ 规范/ ./ 文献/ [/ 43/ ]/ 提出/ 一种/ 便携式/ 的/ 可信计算/ 模块/ TEEM/ ,/ 它/ 能/ 为/ 各种/ 计算/ 平台/ ,/ 比如/ 桌面/ 机和/ 移动/ 设备/ ,/ 提供/ 各种/ 可信计算/ 功能/ ,/ TEEM/ 设计/ 成/ 一个/ TPM/ 服务/ 运行/ 在/ TrustZone/ 的/ 安全区/ ./ 然而/ ,/ 此文/ 的/ 实现/ 没有/ 将/ TEEM/ 与/ ROS/ 隔离/ ,/ 事实上/ TEEM/ 运行/ 在/ 整个/ LinuxOS/ 上/ ,/ 这/ 导致/ TCB/ 非常/ 大/ ,/ 且/ 没有/ 在/ 开发板/ 上/ 进行/ 验证/ ,/ 也/ 没有/ 结合/ 具体/ 可信/ 应用/ 场景/ ./ 5.4/ 基于/ TrustZone/ 构建/ 安全/ 服务/ 嵌入式/ 系统/ 日益/ 丰富/ 的/ 需求/ ,/ 各种/ 需求/ 的/ 应用/ 应运而生/ ,/ 其中/ 对/ 安全/ 敏感/ 的/ 应用/ 会/ 涉及/ 大量/ 用户/ 隐私/ 信息/ ,/ 基于/ TrustZone/ 提供/ 的/ 安全/ 隔离/ 环境/ 构建/ 安全/ 服务/ 来/ 为/ 这类/ 应用/ 提供/ 敏感/ 数据处理/ 以/ 防止/ 恶意/ 攻击/ 是/ 一种/ 比较/ 可行/ 的/ 方案/ ./ 文献/ [/ 44/ ]/ 利用/ 该/ 技术/ 实现/ 了/ 一个/ 全新/ 的/ 移动/ 在线/ 购票/ 系统/ ,/ 在线/ 交易过程/ 中/ 的/ 敏感数据/ 会/ 保存/ 在/ TrustZone/ 硬件安全/ 区/ ,/ 从而/ 很/ 好/ 地/ 保证/ 了/ 交易过程/ 中/ 敏感数据/ 的/ 安全/ ./ 客户/ 购票/ 在线/ 支付/ 完成/ 后/ ,/ 商家/ 会/ 发送/ 一个/ 加密/ 的/ 电子/ 票/ 给/ 客户/ ,/ 然后/ 客户/ 会/ 给/ 商家/ 发送/ 一个/ 加密/ 密钥/ ,/ 商家/ 收到/ 该/ 密钥/ 会/ 反馈/ 一个/ 加密/ 密钥/ 到/ 客户/ 移动/ 终端/ 的/ TrustZone/ 安全区/ ,/ 这样/ 客户/ 就/ 能/ 通过/ 该/ 反馈/ 密钥/ 打开/ 并/ 查看/ 电子/ 票/ 详情/ ./ 因为/ 整个/ 操作过程/ 敏感数据/ 都/ 有效/ 地被/ 保护/ 在/ 独立/ 的/ 安全/ 执行/ 环境/ 下/ ,/ 从而/ 确保/ 交易过程/ 中/ 电子/ 票/ 敏感/ 信息/ 的/ 安全/ ./ 文献/ [/ 30/ ]/ 针对/ 目前/ 支付/ 系统/ 中/ 没有/ 较/ 好/ 地/ 考虑/ 隐私/ 保护/ 的/ 问题/ ,/ 于是/ 结合/ 当前/ 的/ 支付/ 机制/ 提出/ 了/ 基于/ TrustZone/ 的/ 隐私/ 保护/ 平台/ ,/ 它/ 适用/ 于/ 在线/ 远程/ 支付/ 时/ (/ 如/ NFC/ )/ ,/ 需要/ 隐私/ 保护/ 的/ 各种/ 应用程序/ ,/ 如图/ 9/ 所示/ ./ 具体/ 实现/ 是/ :/ 在线/ 支付/ 时/ 支付/ 应用/ 可以/ 通过/ 平台/ 内部/ TrustZoneAPI/ 机制/ 与/ 可信/ 应用/ 通信/ ,/ 将/ 支付/ 时/ 的/ 隐私/ 等/ 敏感数据/ 存储/ 在/ TrustZone/ 隔离/ 的/ 安全/ 环境/ 中/ ,/ 同时/ 这些/ 数据/ 在/ 流动/ 时会/ 受到/ 安全/ 监控器/ 的/ 监控/ ,/ 防止/ 遭到/ 恶意/ 攻击/ 导致/ 的/ 隐私/ 泄露/ ./ 文献/ [/ 45/ ]/ 分析/ 了/ 目前/ 典型/ 云/ 存储/ 服务/ Dropbox/ 存在/ 的/ 弊端/ :/ 所有/ 加密/ 密钥/ 由/ 软件/ 管理/ ,/ 无法/ 对/ 客户端/ 软件/ 的/ 完整性/ 进行/ 认证/ 及/ 基于/ ID/ 和/ 密码/ 的/ 用户/ 登录/ 认证/ 机制/ 容易/ 受到/ 攻击/ ./ 为了/ 克服/ 这些/ 弊端/ 而/ 提出/ 了/ 一种/ 安全/ 的/ 数据/ 访问控制/ 方法/ DFClound/ ,/ 它/ 依赖/ 设计/ 在/ 安全/ 隔离/ 环境/ 的/ TPM/ 服务/ 管理/ 所有/ 加密/ 密钥/ 并/ 在/ 合法/ 用户/ 之间/ 定义/ 了/ 密钥/ 共享/ 协议/ ./ 该/ 原型/ 设计/ 实现/ 是/ 使用/ ARMFastmodel/ 软件/ 模拟/ ARMCotex/ -/ A15/ 核/ ,/ 并/ 利用/ OpenVirtualization/ (/ OV/ )/ [/ 24/ ]/ 提供/ 基于/ TrustZone/ 的/ 可信/ 执行/ 环境/ ,/ 它/ 给/ 数据/ 的/ 云/ 存储/ 和/ 访问/ 提供/ 了/ 一个/ 安全/ 环境/ ./ 但/ 此文/ 提出/ 的/ 原型/ 设计/ 没有/ 在/ 具体/ 开发板/ 上/ 实现/ ,/ 且/ 性能/ 负载/ 非常/ 大/ ./ 文献/ [/ 46/ ]/ 通过/ 将/ SymbianDRM/ 和/ TrustZone/ 技术相结合/ 了/ 实现/ 移动/ 设备/ 上/ 的/ 数据/ 版权保护/ ./ 文献/ [/ 47/ ]/ 针对/ TrustZone/ 技术/ 不能/ 阻止/ 离线/ 回滚攻/ Page12/ 击/ ,/ 即/ 在/ 闪存/ 中/ 用/ 先前/ 的/ 值/ 替代/ 当前/ 的/ 值/ ,/ 提出/ 了/ 一种/ 能够/ 防御/ 此类/ 攻击/ 的/ 解决方案/ ./ 该/ 方案/ 主要/ 是/ 依赖/ TrustZone/ 技术/ 能够/ 为/ 安全/ 存储/ 提供/ 的/ 一块/ FLASH/ 逻辑/ 分区/ 和/ 为/ 可信/ 应用软件/ 提供/ 的/ 一个/ 安全/ 的/ 执行/ 环境/ 实现/ 的/ ./ 这些/ 文献/ 研究/ 的/ 思路/ 都/ 是/ 将/ 敏感/ 应用/ 涉及/ 的/ 敏感/ 数据处理/ 过程/ 放置/ 在/ 由/ TrustZone/ 提供/ 的/ 硬件/ 隔离/ 环境/ 构建/ 的/ 安全/ 服务/ 来/ 完成/ ,/ 这样/ 可以/ 有效/ 地/ 保证/ 敏感数据/ 的/ 处理/ 是/ 在/ 一个/ 安全/ 的/ 环境/ 中/ 完成/ 的/ ./ 5.5/ 基于/ TrustZone/ 构建/ 安全/ 启动/ 要/ 实现/ 系统安全/ ,/ 安全/ 启动/ 是/ 基石/ ,/ 只有/ 这样/ 才能/ 保证系统/ 的/ 运行/ 环境/ 真正/ 可信/ ./ 因此/ ,/ 基于/ TrustZone/ 构建/ 安全/ 启动/ 的/ 研究/ 也/ 非常/ 多/ ./ 文献/ [/ 48/ ]/ 基于/ SRAM/ 的/ 物理/ 不可/ 克隆/ 特性/ (/ SRAMPUF/ )/ [/ 49/ ]/ 为/ TrustZone/ 平台/ 重构/ 可信/ 根以/ 保证/ 启动/ 安全/ ,/ 如图/ 10/ 所示/ ./ 具体/ 实现/ 是/ :/ 首先/ 在/ 片/ 上/ SRAM/ 内/ 实现/ 构建/ 块/ ,/ 主要/ 负责/ 从/ SRAM/ 初始/ 响应/ 提取/ 原始/ 种子/ (/ PS/ )/ 和/ 随机数/ 种子/ (/ TRS/ )/ ,/ 其中/ PS/ 用于/ 产生/ 唯一/ 的/ 设备/ 密钥/ ,/ TRS/ 用于/ 为/ TOS/ 建立/ 一个/ 安全/ 随机数/ 产生器/ (/ RNG/ )/ ,/ 它们/ 都/ 是/ 建立/ 可信/ 根/ 的/ 基础/ ,/ 同时/ 构建/ 块/ 也/ 提供/ TOS/ 和/ 安全/ 服务/ 的/ 安全/ 启动/ ./ 随后/ ,/ 利用设备/ 密钥/ 提供/ 密封/ // 解密/ 原语/ 服务/ 于/ TEE/ 中/ 的/ 安全/ 服务/ ,/ 并/ 在/ TEE/ 环境/ 集成/ 纯/ 软件/ 的/ TPM/ 服务/ 为/ ROS/ 提供/ 丰富/ 的/ TPM/ 服务/ ,/ 这样/ 有效/ 的/ 保证/ 了/ ROS/ 免受/ 软件/ 袭击/ ,/ 它/ 作为/ ROS/ 的/ 可信/ 根/ ./ 由此/ ,/ 在/ 系统启动/ 到/ 正常/ 运行/ 形成/ 了/ 一个/ 可信/ 链/ ,/ 而且/ ROS/ 的/ 应用/ 可以/ 利用/ TPM/ 服务/ 将/ 信任/ 链/ 扩展/ 到/ 应用层/ ,/ 整体/ 设计/ 有效/ 地/ 保护/ 了/ 系统/ 的/ 安全性/ ./ 此文/ 基于/ TrustZone/ 提供/ 的/ 内存/ 隔离/ 机制/ 将/ 信任/ 根与/ ROS/ 完全/ 隔离/ ,/ 避免/ 了/ 来自/ ROS/ 的/ 软件/ 攻击/ ,/ 然而/ ,/ 其主/ 内存/ 没有/ 实现/ 而/ 在/ SoC/ 外/ ,/ 所以/ 该/ 设计/ 的/ 信任/ 根/ 不能/ 抵抗/ 直接/ 攻击/ 硬件平台/ 的/ 物理攻击/ ./ 随着/ 无线/ 传感/ 网络应用/ 越来越/ 广泛/ ,/ 比如/ 智能家居/ 系统/ 、/ 运输系统/ 及/ 军事/ 领域/ 等/ ,/ 其/ 安全/ 问题/ 变得/ 日益突出/ ,/ 最/ 重要/ 的/ 就是/ 设备/ 启动/ 阶段/ 所/ 受到/ 的/ 物理攻击/ ./ 基于/ 此/ ,/ 文献/ [/ 50/ ]/ 分析/ 了/ 当前/ 大多数/ 无线/ 传感/ 节点/ 依靠/ 软件/ 来/ 保护/ 系统安全/ ,/ 但/ 随着/ 它/ 在/ 军事/ 和/ 健康/ 监测/ 等/ 敏感/ 领域/ 的/ 应用/ ,/ 基于/ 软件/ 的/ 安全/ 防护/ 已经/ 捉襟/ 见忖/ ./ 于是/ ,/ 基于/ TrustZone/ 提供/ 的/ 硬件/ 隔离/ 安全/ 和/ 安全/ 内存/ 配置/ 等/ 特性/ 提出/ 了/ 无线/ 传感/ 节点/ 的/ 安全/ 启动/ 系统/ ,/ 然而/ ,/ 此文/ 没有/ 具体/ 实现/ 也/ 没有/ 进行/ 安全性/ 分析/ ./ 文献/ [/ 51/ ]/ 分析/ 了/ 安全/ 启动/ 和/ 可信/ 启动/ 存在/ 的/ 问题/ ,/ 前者/ 定制/ 于/ 特定/ 设备/ ,/ 用户/ 不能/ 自由选择/ 软件/ ;/ 后者/ 缺少/ 运行/ 时/ 验证/ 的/ 机制/ ./ 并/ 在/ 此基础/ 上/ 基于/ TrustZone/ 技术/ 提供/ 安全/ 硬件/ 隔离/ 提出/ 了/ 二次/ 启动/ 验证/ 架构/ ,/ 它/ 很/ 好地解决/ 了/ 上述/ 两者/ 的/ 缺点/ ./ 具体/ 是/ :/ 第/ 1/ 阶段/ 启动/ 时/ 验证/ 引导/ 程序/ 和/ OS/ 镜像/ 并/ 进行/ 登记/ ;/ 第/ 2/ 阶段/ 运行/ 的/ 应用/ 能/ 核查/ 启动/ 痕迹/ 并/ 能/ 验证/ 运行/ 软件/ 是否/ 满足/ 安全/ 条件/ ./ 5.6/ 基于/ TrustZone/ 构建/ 虚拟化/ 平台/ 系统/ 虚拟化/ (/ VMM/ // hypervisor/ )/ [/ 52/ -/ 54/ ]/ 为/ 各类/ 应用/ 能够/ 提供/ 很/ 好/ 的/ 隔离/ 执行/ 环境/ ,/ 然而/ ,/ 它/ 自身/ 存在/ 许多/ 的/ 问题/ ,/ 本文/ 前面/ 章节/ 已/ 做/ 深入分析/ ./ TrustZone/ 从/ 广义/ 角度/ 也/ 是/ 一种/ 虚拟化/ 技术/ ,/ 相对/ 于/ VMM/ ,/ 它/ 提供/ 了/ 硬件/ 隔离/ 和/ 内存保护/ 机制/ ./ 因此/ ,/ 基于/ TrustZone/ 可以/ 增强/ 现有/ 的/ 软件/ 虚拟化/ 技术/ 的/ 安全性/ ,/ 克服/ 其/ 本身/ 存在/ 的/ 不足/ ./ 文献/ [/ 55/ ]/ 针对/ 目前/ 虚拟化/ 技术/ 中/ 因为/ 需要/ 模拟/ 关键/ 指令/ 而/ 给/ 带来/ 较重/ 的/ 负载/ ,/ 基于/ TrustZone/ 的/ 普通/ 环境/ 和/ 安全/ 环境/ 拥有/ 各自/ 的/ 特权/ 模式/ 和/ 用户/ 模式/ 的/ 特点/ 提出/ 了/ ViMoExpress/ ,/ 它/ 是/ 嵌入式/ 系统/ 的/ 轻量级/ 虚拟化/ 解决方案/ ./ 两个/ 系统/ 分别/ 运行/ 在/ TrustZone/ 隔离/ 的/ 普通/ 区/ 和/ 安全区/ ,/ ViMoExpress/ 运行/ 在/ Monitor/ 模式/ ,/ 这样/ ViMoExpress/ 产生/ 很少/ 的/ 负载/ ,/ 该/ 设计/ 在/ 单核/ ARM/ 处理器/ 上/ 实现/ 的/ ViMoExpress/ 加速/ 了/ 两个/ 系统/ ,/ ViMoExpress/ 仅仅/ 的/ 负载/ 是/ 两个/ 系统/ 切换/ 的/ 中断/ 时间/ ,/ 且/ 添加/ 的/ 代码/ 量/ 非常/ 小/ ./ 然而/ ,/ 此文/ 没有/ 针对/ 设计/ 进行/ 具体/ 的/ 性能/ 分析/ 和/ 安全性/ 分析/ ./ 文献/ [/ 56/ ]/ 基于/ TrustZone/ 安全/ 扩展/ 实现/ 了/ 非对称/ 虚拟化/ 层/ ,/ 它/ 支持/ 在/ 单个/ 处理器/ 上/ 同时/ 运行/ RTOS/ 和/ GPOS/ ,/ 该/ 实现/ 不/ 需要/ 修改/ GPOS/ 且/ 因/ 不/ 需要/ 特权/ 指令/ 模拟/ 使/ 执行/ 负载/ 很小/ ./ 此文/ 也/ 强调/ VMM/ 代码/ 需要/ 进一步/ 优化/ ,/ 考虑/ 为/ GPOS/ 设计/ 专门/ 的/ 设备/ 驱动/ 的/ 方式/ 扩展/ VMM/ 以使/ RTOS/ 和/ GPOS/ 之间/ 支持/ 多路/ 通讯/ 通道/ ./ 文献/ [/ 57/ ]/ 在/ 没有/ 修改/ 通用/ 操作/ 系/ Page13/ 统/ (/ GPOS/ )/ 的/ 前提/ 下/ 基于/ TrustZone/ 虚拟化/ 提出/ 一个/ 软件架构/ SafeG/ 作为/ Monitor/ ,/ 如图/ 11/ 所示/ ./ 该/ 框架/ 实现/ 了/ GPOS/ 和/ 实时/ 系统/ (/ RTOS/ )/ 同时/ 运行/ 于/ 单个/ 处理器/ 上/ ,/ 其中/ RTOS/ 用于/ 处理/ 实时性/ 要求/ 较/ 高/ 的/ 任务/ ,/ 而/ GPOS/ 处理/ 用户/ 普通/ 任务/ ./ SafeG/ 对外/ 设/ 进行/ 了/ 隔离/ ,/ 使/ 其/ 能够/ 按照/ 需求/ 将/ 硬件/ 外设/ 实时/ 分配/ 给/ 需要/ 的/ 操作系统/ ,/ 同时/ 减少/ 了/ RTOS/ 的/ 隔离/ 负载/ 并/ 提高/ 了/ 其/ 运行/ 可靠性/ ./ 正是/ 由于/ 这些/ 特点/ ,/ 该/ 实现/ 很/ 适合/ 于/ 汽车/ 导航系统/ 、/ 移动电话/ 或/ 机床/ 等/ 应用/ 场景/ ./ 然而/ ,/ 此文/ 也/ 提到/ 要/ 增加/ TrustZone/ 作为/ 一个/ 虚拟化/ 硬件/ 的/ 一个/ 机制/ 是/ 可信/ 区/ 和/ 普通/ 区/ 必须/ 有/ 独立/ 的/ Caches/ ,/ 而/ 当前/ Caches/ 没有/ 这样/ 设计/ ,/ 这样/ 普通/ 区/ 刷新/ Caches/ 时会/ 影响/ 可信/ 区/ 的/ 性能/ ./ 另外/ ,/ 从/ 普通/ 区/ 切换/ 到/ 可信/ 区有/ 38/ 个/ 寄存器/ 需要/ 持续/ 保存/ 和/ 恢复/ ,/ 引入/ 保存/ 和/ 恢复/ 这些/ 寄存器/ 的/ 指令/ 能/ 改善/ 它/ 的/ 性能/ ./ 且/ 此文/ 设计/ 不/ 支持/ TrustZone/ 扩展/ 的/ 多/ 核/ 处理器/ 当中/ ./ 5.7/ 小结/ 基于/ TrustZone/ 技术/ 的/ 商业/ 应用/ 和/ 学术研究/ 已经/ 涉及/ 到/ 嵌入式/ 系统/ 的/ 方方面面/ ,/ 为/ 嵌入式/ 系统/ 的/ 系统安全/ 提供/ 了/ 可靠/ 的/ 保证/ ./ 基于/ 其/ 的/ 研究/ 和/ 开发/ 工作/ ,/ 无论是/ 商业/ 应用/ 还是/ 学术研究/ 对/ 解决目前/ 嵌入式/ 系统/ 存在/ 的/ 安全/ 问题/ 是/ 至关重要/ 的/ ,/ 可以/ 基于/ 该/ 技术/ 提供/ 的/ 系统/ 级/ 安全/ 框架/ 开发/ 满足/ 特定/ 需求/ 的/ 安全/ 平台/ 及/ 设计/ 全新/ 的/ 安全策略/ ./ 6TrustZone/ 研究/ 和/ 应用/ 需求/ 展望/ 目前/ 基于/ TrustZone/ 技术/ 在/ 系统安全/ 中/ 的/ 应用/ 研究/ 工作/ 还/ 处于/ 初始/ 阶段/ ,/ 在/ 上述/ 多个/ 方面/ 还/ 存在/ 许多/ 挑战/ 未能/ 解决/ ./ 展望未来/ ,/ 针对/ 目前/ 该/ 技术/ 在/ 系统安全/ 方面/ 的/ 应用/ 所/ 面临/ 的/ 问题/ ,/ 以下/ 3/ 个/ 方面/ 的/ 应用/ 仍然/ 需要/ 不断/ 探索/ 和/ 研究/ ./ 6.1/ 利用/ TrustZone/ 技术/ 作/ 系统/ 级/ 防护/ ROS/ 因/ 代码/ 量/ 大/ 、/ 功能丰富/ 和/ 开发/ 应用环境/ 复杂/ 等/ 原因/ 而/ 无法/ 避免/ 存在/ 各种/ 漏洞/ ,/ 其/ 安全性/ 问题/ 已经/ 普遍存在/ ./ 如何/ 利用/ TrustZone/ 技术/ 的/ 硬件安全/ 隔离/ 优势/ 实现/ ROS/ 的/ 系统/ 级/ 防护/ 并/ 保障/ 其/ 敏感/ 应用/ 的/ 安全/ ,/ 已经/ 成为/ 解决/ 此类/ 安全/ 问题/ 的/ 比较/ 行之有效/ 的/ 方法/ ./ 以/ 开放/ 的/ Android/ 系统/ 为例/ ,/ 它/ 给/ 用户/ 带来/ 了/ 许多/ 便利/ ,/ 比如/ 允许/ 用户/ 下载/ 来自/ 不同/ 开发者/ 提供/ 的/ 应用/ 和/ 服务/ ,/ 但/ 这/ 也/ 使得/ 一些/ 对/ 安全/ 敏感/ 的/ 应用/ 很难/ 保证/ 其/ 在/ 执行/ 时/ 的/ 安全/ [/ 58/ ]/ ./ 尽管/ Android/ 系统/ 通过/ 集成/ Linux2/ ./ 6/ 内核/ 的/ 安全/ 机制/ 实现/ 系统安全/ ,/ 又/ 通过/ 自身/ 的/ permission/ 机制/ 实现/ 数据安全/ [/ 59/ ]/ ./ 但/ 面对/ 复杂/ 的/ 安全/ 环境/ ,/ 依靠/ 系统/ 本身/ 的/ 安全/ 机制/ 是/ 远远不够/ 的/ ,/ 这/ 大大降低/ 了/ 该/ 系统/ 的/ 可用性/ ./ 因此/ ,/ 需要/ 为/ 该/ 系统/ 提供/ 一个/ 硬件/ 隔离/ 出来/ 的/ 独立/ 可信/ 的/ 执行/ 环境/ ,/ 从/ 系统/ 的/ 底层/ 检测/ 和/ 控制系统/ 的/ 运行/ 行为/ ,/ 才能/ 真正/ 意义/ 上/ 实现/ 整个/ 系统/ 的/ 安全/ ./ 而/ TrustZone/ 技术/ 不仅/ 可以/ 在/ 尽量/ 不/ 影响/ 系统/ 性能/ 的/ 前提/ 下/ 利用/ 其/ 提供/ 的/ 安全/ 隔离/ 环境/ 来/ 处理/ Android/ 系统/ 中/ 对/ 安全/ 敏感/ 的/ 应用/ ,/ 为/ 这类/ 应用/ 提供/ 各种/ 安全/ 服务/ ,/ 比如/ 安全/ 支付/ 、/ 安全/ 输入/ 和/ 安全/ 显示/ 等/ ,/ 还/ 可以/ 利用/ 其/ 对/ 该/ 系统/ 进行/ 防护/ ,/ 比如/ 采用/ 系统/ 运行/ 内核/ 度量/ 机制/ 、/ 敏感/ 操作/ 核查/ 及/ 敏感数据/ 加密/ 等/ ,/ 以/ 增强/ ROS/ 在/ 复杂/ 嵌入式/ 环境/ 下/ 的/ 抵抗/ 恶意/ 攻击能力/ ./ 6.2/ TrustZone/ 技术/ 作用/ 于/ 封闭式/ 系统/ TrustZone/ 技术/ 的/ 安全/ 保护/ 机制/ 并非/ 只/ 可/ 用于/ 使用/ 操作系统/ 的/ 开放式系统/ 中/ ,/ 也/ 适用/ 于/ 深层/ 嵌入/ 的/ 或/ 封闭/ 的/ 系统/ 当中/ ,/ 在/ 这些/ 系统/ 当中/ 也/ 能/ 得到/ 充分/ 应用/ ,/ 如何/ 基于/ 该/ 技术/ 保证/ 封闭式/ 系统/ 的/ 安全/ 也/ 变得/ 非常/ 关键/ ./ 比如/ 目前/ 汽车/ 系统/ 正/ 发展/ 基于/ 控制软件/ 的/ 集成/ 扩展/ 软件/ ,/ 软件/ 集成/ 增加/ 了/ 软件/ 的/ 复杂度/ ,/ 这/ 可能/ 导致/ 系统故障/ 而/ 威胁/ 汽车/ 的/ 安全/ ./ 为了/ 解决/ 这个/ 问题/ ,/ 文献/ [/ 60/ ]/ 就/ 提出/ 扩展/ 软件/ 应/ 与/ 控制软件/ 必须/ 真正/ 隔离/ 起来/ ,/ 于是/ 基于/ TrustZone/ 安全/ 架构设计/ 了/ 一个/ 安全/ 的/ 汽车/ 软件平台/ ,/ 该/ 平台/ 实现/ 了/ 安全/ 的/ 设备/ 访问/ ,/ 它/ 限制/ 直接/ 访问/ 扩展/ 软件/ 并/ 支持/ 多核/ 处理器/ ./ 而/ 该/ 技术/ 的/ 应用/ 场景/ 也/ 远非/ 是/ 汽车/ 系统/ 等/ 封闭式/ 系统/ 当中/ ,/ 任何/ 嵌入式应用/ 都/ 能/ 受益/ 于/ 其/ 提供/ 的/ 系统/ 级/ 安全/ 架构/ ,/ 比如/ 消费/ 娱乐/ 系统/ 、/ 硬盘驱动器/ 等/ ,/ 它/ 能/ 为/ 系统/ 各个环节/ 提供/ 安全/ 增强/ ./ 然/ Page14/ 而/ ,/ 虽然/ 该/ 技术/ 被/ 设计/ 用于/ 在/ 复杂/ 开放/ 的/ 系统/ 中/ 提供/ 更/ 高级/ 别的/ 安全性/ ,/ 而/ 有/ 严格/ 安全性/ 要求/ 的/ 简单/ 系统/ 也/ 能/ 受益/ 于/ 该/ 技术/ ./ 也/ 正是/ 由于/ 其能/ 为/ 各种/ 系统/ 和/ 系统/ 中/ 各个环节/ 的/ 安全/ 需求/ 提供/ 支持/ 的/ 这些/ 特点/ ,/ 基于/ 其/ 在/ 系统安全/ 中/ 的/ 研究/ 和/ 应用/ 还有/ 许多/ 工作/ 要/ 做/ ./ 6.3/ TrustZone/ 应用/ 于/ 其他/ 系统/ 架构/ TrustZone/ 安全/ 架构/ 并非/ 局限于/ ARM/ 架构/ 的/ 处理器/ ,/ x86/ 、/ MIPS/ 等/ 架构/ 也/ 可以/ 引入/ 该/ 安全/ 技术/ ,/ 可以/ 利用/ 其/ 安全/ 优势/ 来/ 支持/ 这些/ 架构/ 设备/ 的/ 系统/ 级/ 安全/ ./ 如何/ 实现/ 该/ 技术/ 与/ 其他/ 系统/ 架构/ 结合/ ,/ 充分利用/ 两者/ 各自/ 的/ 优势/ 保障/ 系统安全/ 也/ 变得/ 势在必行/ ./ AMD/ 就/ 将/ x86/ 架构/ 与/ 该/ 技术/ 融合/ 在/ 一起/ 推出/ 了/ 其/ 相应/ 的/ 应用/ 产品/ ,/ 其/ 2014/ 年/ 4/ 月/ 推出/ 了/ 第三代/ 主流/ 与/ 低功耗/ APUBeema/ // Mullins/ ,/ Beema/ 偏/ 主流/ ,/ Mullins/ 则/ 主打/ 超/ 低功耗/ ,/ 其/ 系统/ 架构/ 如图/ 12/ 所示/ ./ 图/ 12AMDBeema/ // MullinsAPU/ 系统/ 架构/ 该/ 架构/ 融入/ 了/ Cortex/ -/ A5/ 架构/ 的/ TrustZone/ 技术/ ,/ 也/ 是/ 第一台/ 匹配/ ARM/ 硬件/ 加密/ 安全/ 模块/ 的/ x86/ 处理器/ ,/ AMD/ 称/ 其/ 之/ 为/ 平台/ 安全/ 处理器/ (/ PSP/ )/ ,/ PSP/ 的/ 使用/ 原理/ 在/ 本文/ 之前/ 章节/ 也/ 已作/ 了/ 详细分析/ ./ 因此/ ,/ 不同/ 系统/ 架构/ 结合/ 该/ 安全/ 技术/ 在/ 安全/ 隔离/ 方面/ 的/ 优势/ 来/ 保障/ 系统安全/ ,/ 虽然/ 不同/ 架构/ 技术/ 融合/ 过程/ 中/ 会/ 存在/ 很多/ 技术难题/ ,/ 但/ 深究/ 其/ 的/ 研究/ 对/ 增强/ 其他/ 系统/ 架构/ 的/ 系统安全/ 有着/ 非常/ 重要/ 的/ 意义/ ./ 此外/ ,/ 该/ 技术/ 在/ 开源/ 软件/ 方面/ 的/ 研究/ 工作/ 也/ 是/ 广泛/ 且/ 切实可行/ 的/ ./ 文献/ [/ 61/ ]/ 中/ Winter/ 认为/ 目前/ 基于/ TrustZone/ 系统/ 开源/ 软件开发/ 工作/ 相对/ 较少/ 的/ 原因/ 是/ 由于/ 缺乏/ 支持/ 该/ 技术/ 的/ 低成本/ 的/ 开发板/ ,/ 于是/ 分享/ 了/ 使用/ 支持/ TrustZone/ 廉价/ 的/ 开发板/ 进行/ 开发/ 工作/ 的/ 经验/ ,/ 并且/ 证实/ 这项/ 成果/ 适合/ 学术研究/ 和/ 教学/ ./ 他/ 也/ 在/ 另/ 一/ 文献/ [/ 62/ ]/ 中/ 证实/ 了/ 使用/ 开源/ 模拟/ 处理器/ 软件/ 实现/ 该/ 安全/ 技术/ 的/ 软件开发/ 可行性/ ,/ 如/ 支持/ TrustZone/ 的/ QEMU/ 模拟器/ ./ 总之/ ,/ 随着/ 嵌入式/ 系统/ 的/ 发展/ 及/ 应用/ 需求/ 不断/ 扩展/ ,/ 安全/ 问题/ 已经/ 迫在眉睫/ ,/ 基于/ 该/ 技术/ 的/ 开发/ 研究/ 工作/ 与/ 商业/ 应用/ 会/ 深入/ 到/ 嵌入式/ 系统安全/ 领域/ 的/ 方方面面/ ,/ 而/ 在/ 其他/ 封闭式/ 系统/ 或/ 系统/ 架构/ 中/ 引入/ 该/ 技术/ 以/ 保障系统/ 的/ 安全/ 也/ 是/ 一种/ 必然/ 的/ 趋势/ ./ 7/ 结论/ 本文/ 立足于/ TrustZone/ 技术/ 特性/ 、/ 学术研究/ 及其/ 应用/ 研究/ 3/ 个/ 方面/ ,/ 对/ 该/ 技术/ 作/ 了/ 系统/ 的/ 概述/ ./ 首先/ 介绍/ 了/ 该/ 技术/ 的/ 硬件/ 和/ 软件架构/ ,/ 并且/ 对/ 其/ 安全/ 扩展/ 作/ 了/ 详细分析/ ./ 接着/ 对/ 其/ 安全/ 机制/ 作/ 了/ 深入/ 的/ 剖析/ ,/ 指出/ 其/ 如何/ 基于/ 硬件/ 和/ 软件架构/ 实现/ 系统/ 范围/ 的/ 安全/ ./ 基于/ 此基础/ 上将/ 该/ 技术/ 的/ 优势/ 与/ 不足/ 进行/ 了/ 分析/ ,/ 并/ 针对/ 不足/ 给出/ 了/ 解决方案/ ./ 文中/ 也/ 将/ 该/ 技术/ 与/ 其他/ 提高/ 嵌入式/ 系统/ 安全性/ 技术/ 进行/ 了/ 分析/ 对比/ ,/ 同时/ 对/ 如何/ 基于/ 该/ 技术/ 的/ 系统安全/ 架构/ 构建/ 符合/ GP/ 标准/ 的/ 可信/ 执行/ 环境/ 作/ 了/ 整体/ 概述/ ,/ 接下来/ 从/ 应用/ 的/ 角度/ 出发/ ,/ 总结/ 概括/ 了/ 基于/ 该/ 技术/ 的/ 现有/ 国内外/ 研究/ 和/ 商业/ 应用/ 情况/ ./ 最后/ ,/ 本文/ 结合/ 业界/ 现有/ 的/ 基于/ 该/ 技术/ 的/ 研究成果/ ,/ 展望/ 该/ 技术/ 应用/ 发展/ 方向/ ./ 致谢/ 评审/ 专家/ 和/ 编辑部/ 老师/ 为/ 本文/ 提出/ 了/ 宝贵意见/ 和/ 建议/ ,/ 作者/ 在/ 此/ 表示/ 衷心/ 的/ 感谢/ !/ 

