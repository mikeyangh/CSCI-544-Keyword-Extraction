Page1/ 一种/ 基于/ 索引/ 的/ 高效/ 犽/ -/ 支配/ Skyline/ 算法/ 印鉴/ 姚树宇/ 薛少锷/ 杨文新/ 刘玉葆/ (/ 中山大学/ 信息科学/ 与/ 技术/ 学院/ 广州/ 510006/ )/ 摘要/ 由于/ 在/ 多/ 标准/ 决策/ 支持/ 等/ 应用/ 上/ 具有/ 重要/ 的/ 意义/ ,/ skyline/ 查询/ 成为/ 近年来/ 数据库/ 和/ 数据挖掘/ 领域/ 的/ 一个/ 研究/ 热点/ ./ 然而/ 随着/ 数据/ 集维数/ 的/ 增加/ ,/ 数据/ 点/ 之间/ 形成/ 支配/ 关系/ 的/ 可能性/ 越来越/ 小/ ,/ 导致/ 了/ skyline/ 点/ 数目/ 过多/ 而/ 无法/ 提供/ 任何/ 有效/ 信息/ ./ 为了/ 在/ 高维/ 数据/ 集中/ 找到/ 更/ 重要/ 和/ 更有意义/ 的/ skyline/ 点/ ,/ 人们/ 提出/ 了/ k/ -/ 支配/ skyline/ 的/ 定义/ ./ 但/ 现有/ 的/ 用于/ k/ -/ 支配/ skyline/ 的/ 算法/ 在/ 时间/ 效率/ 、/ 空间/ 复杂度/ 和/ 渐进/ 输出/ 性上/ 都/ 有待/ 提高/ ./ 该文/ 提出/ 了/ 一种/ 基于/ 索引/ 的/ 高效/ k/ -/ 支配/ skyline/ 算法/ ,/ 通过/ 为/ 数据/ 集/ 建立/ 两个/ 索引/ ,/ 算法/ 可以/ 高效/ 地/ 进行/ 计算/ ,/ 在/ 时间/ 、/ 空间/ 和/ 渐进性/ 上均/ 优于/ 现有/ 的/ 算法/ ./ 关键词/ skyline/ ;/ 决策/ 支持/ ;/ k/ -/ 支配/ skyline/ ;/ 基于/ 索引/ 1/ 引言/ 助/ 用户/ 做出/ 决策/ 的/ 一个/ 新/ 的/ 应用/ ,/ 由/ Borzsonyi/ 、/ Kossmann/ 、/ Stocker/ 等/ 在/ 2001/ 年/ 的/ ICDE/ 上/ 提出/ [/ 1/ ]/ ,/ 近年来/ 已/ 成为/ 数据库/ 和/ 数据挖掘/ 领域/ 的/ 研究/ Skyline/ 查询/ 是从/ 数据库/ 中/ 抽取/ 有趣/ 信息/ 以帮/ 热点/ 之一/ ./ Skyline/ 查询/ 从/ 数据/ 集中/ 抽取/ 不/ 被/ 其他/ 任/ Page2/ 何/ 数据/ 点/ 支配/ (/ dominate/ )/ 的/ 数据/ 点/ 集合/ ./ 一个/ 数据/ 点/ p/ 支配/ 另/ 一个/ 数据/ 点/ q/ ,/ 当且/ 仅/ 当点/ p/ 在/ 所有/ 维上/ 的/ 取值/ 都/ 不/ 比/ q/ 差/ ,/ 并且/ 在/ 至少/ 一个/ 维上/ 的/ 值/ 比/ q/ 好/ ./ 而/ 一个/ 多维/ 数据/ 集/ 的/ skyline/ 则/ 是/ 该/ 数据/ 集上/ 不/ 被/ 任何/ 其它/ 数据/ 点/ 支配/ 的/ 点/ 所/ 组成/ 的/ 集合/ ./ 在/ 实际/ 应用/ 中/ ,/ 查询/ 对象/ 往往/ 是/ 高维/ 数据/ 集/ ,/ 随着/ 数据/ 集维数/ 的/ 增加/ ,/ 一个点/ 支配/ 另/ 一个点/ 的/ 概率/ 变得/ 非常/ 小/ ,/ 这/ 导致/ 计算出来/ 的/ skyline/ 数据/ 集/ 规模/ 太/ 大/ ,/ 甚至/ 接近/ 原/ 数据/ 集/ 的/ 大小/ ,/ 无法/ 提供/ 给/ 用户/ 有/ 意义/ 的/ 信息/ ./ 为了/ 在/ 高/ 维空间/ 中/ 寻找/ 出/ 更/ 重要/ 和/ 更有意义/ 的/ skyline/ 点集/ ,/ Chan/ 等/ [/ 2/ ]/ 提出/ 了/ 在/ 数据/ 集中/ 计算/ k/ -/ 支配/ skyline/ 的/ 概念/ ./ 通过/ 弱化/ “/ 支配/ ”/ 的/ 定义/ ,/ 来/ 提高/ 数据/ 点/ 之间/ 形成/ “/ k/ -/ 支配/ ”/ 关系/ 的/ 概率/ ,/ 使得/ 查询/ 出来/ 的/ 结果/ 数据/ 集/ 规模/ 更/ 小/ ,/ 具有/ 更好/ 的/ 决策/ 支持/ 作用/ ./ 由于/ k/ -/ 支配/ skyline/ 的/ 特殊性/ ,/ 传统/ skyline/ 算法/ [/ 3/ -/ 7/ ]/ 等/ 不适/ 用于/ k/ -/ 支配/ skyline/ 查询/ ./ 目前/ 在/ k/ -/ 支配/ skyline/ 的/ 计算/ 上/ 主要/ 有/ 3/ 种/ 算法/ ,/ 在/ 时间/ 效率/ 、/ 空间/ 复杂度/ 和/ 渐进性/ 上/ 都/ 存在/ 不足/ ./ 本文/ 提出/ 一种/ 基于/ 索引/ 的/ 高效/ 算法/ ,/ 通过/ 预处理/ 建立/ 数据/ 集/ 的/ 两个/ 索引/ ,/ 在/ 计算/ 过程/ 中/ 依靠/ 索引/ 让/ 数据/ 集中/ 最有/ 可能/ 属于/ k/ -/ 支配/ skyline/ 的/ 数据/ 点/ 被/ 优先/ 处理/ ,/ 迅速/ 返回/ 部分/ 查询/ 结果/ ,/ 而/ 不/ 属于/ 结果/ 的/ 数据/ 点则/ 能/ 尽快/ 被/ 淘汰/ 掉/ ,/ 减少/ 多余/ 的/ 比较/ ,/ 从而/ 使/ 算法/ 在/ 时间/ 效率/ 和/ 渐进/ 输出/ 性上/ 有/ 较大/ 提高/ ,/ 与此同时/ 算法/ 还/ 降低/ 了/ 计算/ 需要/ 的/ 空间/ 开销/ ./ 实验/ 结果表明/ 其/ 性能比/ 现有/ 3/ 种/ 算法/ 都/ 好/ ./ 本文/ 第/ 2/ 节/ 介绍/ k/ -/ 支配/ skyline/ 的/ 定义/ ;/ 第/ 3/ 节/ 介绍/ 现有/ 3/ 种/ 算法/ 的/ 基本/ 思想/ 以及/ 存在/ 的/ 不足/ ;/ 第/ 4/ 节/ 提出/ 基于/ 索引/ 的/ k/ -/ 支配/ skyline/ 算法/ ,/ 介绍/ 算法/ 的/ 基本思路/ 和/ 具体/ 实现/ ;/ 第/ 5/ 节是/ 对/ 本文/ 提出/ 的/ 算法/ 与/ 现有/ 3/ 种/ 算法/ 进行/ 实验/ 比较/ 和/ 分析/ ;/ 第/ 6/ 节是/ 小结/ ./ 2/ 概念/ 描述/ 在/ 解决/ 高/ 维空间/ 中/ skyline/ 数据/ 集过/ 大/ 的/ 问题/ 上/ ,/ 目前/ 有/ 几种/ 主要/ 的/ 方法/ ,/ 如/ 文献/ [/ 8/ -/ 9/ ]/ 通过/ 挖掘/ 更/ 严格/ 定义/ 的/ skyline/ 来/ 降低/ 结果/ 数据/ 集/ 的/ 规模/ ./ 更为/ 直观/ 和/ 有/ 意义/ 的/ 是/ k/ -/ 支配/ skyline/ 的/ 挖掘/ ,/ 本节/ 将/ 首先/ 介绍/ k/ -/ 支配/ skyline/ 的/ 相关/ 定义/ ,/ 下/ 一节/ 介绍/ 并/ 分析/ 现有/ 算法/ 的/ 缺点/ ./ 给定/ 一个/ d/ 维空间/ S/ =/ {/ s1/ ,/ s2/ ,/ …/ ,/ sd/ }/ ,/ 称/ 数据/ 集/ D/ =/ {/ p1/ ,/ p2/ ,/ …/ ,/ pd/ }/ 是/ S/ 上/ 的/ 数据/ 集/ ,/ 如果/ D/ 中/ 的/ 每/ 一个/ 数据/ 点/ pi/ ∈/ D/ 是/ S/ 空间/ 中/ 的/ 一个/ d/ 维/ 数据/ 点/ ./ 用/ pi/ ./ sj/ 表示/ 数据/ 点/ pi/ 的/ 第/ j/ 个/ 维度/ 的/ 值/ ./ 对于/ 每个/ 维度/ si/ ,/ 假设/ 在/ 它/ 的/ 整个/ 值域/ 上/ 存在/ 一个/ 全序/ 关系/ ,/ 表示/ 为/ / i/ ./ 这里/ / i/ 根据/ 不同/ 情况/ 或者/ 用户/ 的/ 不同/ 选择/ 可以/ 是/ >/ 或/ </ 的/ 关系/ ./ 为了/ 简便/ ,/ 不失/ 一般性/ ,/ 本文/ 后面/ 都/ 假设/ / i/ 代表/ >/ 关系/ ,/ 并且/ 用/ 符号/ >/ 代替/ 符号/ / i/ ./ 定义/ 1/ ./ k/ -/ 支配/ (/ k/ -/ dominate/ )/ [/ 2/ ]/ ./ 称/ 一个点/ pi/ 在/ 空间/ S/ 上/ k/ -/ 支配/ 另外/ 一个点/ pj/ ,/ 当且/ 仅/ 当/ / S/ / S/ ,/ |/ S/ |/ =/ k/ ,/ 使得/ / sr/ ∈/ S/ ,/ 有/ pi/ ./ sr/ / pj/ ./ sr/ ,/ 并且/ / st/ ∈/ S/ 使得/ pi/ ./ st/ >/ pj/ ./ st/ ./ 定义/ 2/ ./ k/ -/ 支配/ skyline/ (/ k/ -/ dominantskyline/ )/ [/ 2/ ]/ ./ 一个点/ pi/ 成为/ 空间/ S/ 上/ 关于/ 数据/ 集/ D/ 的/ 一个/ k/ -/ 支配/ 的/ skyline/ 点/ ,/ 当且/ 仅/ 当/ 不/ 存在/ 任何/ 点/ pj/ ,/ 满足/ pi/ ∈/ D/ ,/ pj/ ≠/ pi/ ,/ 并且/ 使得/ pjk/ -/ 支配/ pi/ ./ 用/ DSP/ (/ k/ ,/ D/ ,/ S/ )/ 代表/ 空间/ S/ 上/ 关于/ 数据/ 集/ D/ 的/ k/ -/ 支配/ skyline/ 点集/ ./ 显然/ ,/ 当/ k/ =/ d/ 时/ ,/ k/ -/ 支配/ 关系/ 等同于/ 传统/ sky/ -/ line/ 支配/ 关系/ ./ 定理/ 1/ ./ 对于/ 一个/ 给定/ 空间/ S/ 上/ 的/ 任意/ 数据/ 集/ D/ ,/ 其/ k/ -/ 支配/ skyline/ 数据/ 点/ 的/ 数量/ 随着/ k/ 的/ 取值/ 变小/ 而/ 呈/ 单调/ 递减/ [/ 2/ ]/ ,/ 即/ |/ DSP/ (/ k/ ,/ D/ ,/ S/ )/ |/ / |/ DSP/ (/ k/ +/ 1/ ,/ D/ ,/ S/ )/ ./ 为了/ 证明/ 上面/ 定理/ ,/ 我们/ 先证/ 两个/ 引理/ ./ 引理/ 1/ ./ 对于/ 任意/ 两个/ 点/ pi/ 和/ pj/ ,/ 如果/ 点/ pi/ (/ k/ +/ 1/ )/ 维/ -/ 支配/ 点/ pj/ ,/ 则/ 点/ pi/ 必定/ k/ 维/ -/ 支配/ 点/ pj/ ./ 证明/ ./ 根据/ k/ -/ 支配/ 的/ 定义/ ,/ 若点/ pi/ (/ k/ +/ 1/ )/ 维/ -/ 支配/ 点/ pj/ ,/ 则/ 存在/ S/ =/ {/ s1/ ,/ s2/ ,/ …/ ,/ sk/ +/ 1/ }/ / S/ 使得/ 对于/ 任意/ st/ ∈/ S/ ,/ 有/ pi/ ./ st/ / pj/ ./ st/ ,/ 并且/ 至少/ 存在/ 一个/ sr/ ∈/ S/ 满足/ pi/ ./ sr/ >/ pj/ ./ sr/ ./ 显然/ ,/ 取/ sr/ ∈/ S/ ,/ 并/ 任取/ 另外/ k/ -/ 1/ 个/ st/ ∈/ S/ 组成/ k/ 个/ 维度/ ,/ 则/ 在/ 这/ k/ 个维上/ pi/ ./ st/ / pj/ ./ st/ 且/ pi/ ./ sr/ >/ pj/ ./ sr/ ./ 因此/ pik/ -/ 维/ 支配/ 点/ pj/ ./ 引理/ 得证/ ./ 引理/ 2/ ./ 如果/ 一个点/ 是/ k/ 维/ -/ 支配/ 的/ skyline/ 点/ ,/ 则/ 它/ 也/ 是/ (/ k/ +/ 1/ )/ 维/ -/ 支配/ 的/ skyline/ 点/ ./ 即/ 如果/ pi/ ∈/ DSP/ (/ k/ ,/ D/ ,/ S/ )/ ,/ 则/ pi/ ∈/ DSP/ (/ k/ +/ 1/ ,/ D/ ,/ S/ )/ ./ 证明/ ./ 用/ 反证法/ ./ 假设/ 存在/ 一个点/ pi/ ∈/ D/ ,/ 满足/ pi/ ∈/ DSP/ (/ k/ ,/ D/ ,/ S/ )/ ,/ 但/ pi/ / DSP/ (/ k/ +/ 1/ ,/ D/ ,/ S/ )/ ,/ 则/ 必然/ 存在/ 另外/ 一个点/ pj/ ∈/ D/ ,/ 使得/ 点/ pj/ (/ k/ +/ 1/ )/ 维/ -/ 支配/ 点/ pi/ ./ 又/ 由/ 引理/ 1/ 我们/ 可以/ 得出/ ,/ 点/ pjk/ 维/ -/ 支配/ 点/ pi/ ,/ 由此/ 推出/ 点/ pi/ / DSP/ (/ k/ ,/ D/ ,/ S/ )/ ,/ 与/ 假设/ 矛盾/ ./ 定理/ 得证/ ./ Page3/ 由/ 上述/ 两个/ 引理/ ,/ 定理/ 1/ 得证/ ./ 根据/ 定理/ 1/ ,/ 可以/ 得出/ 对于/ 一个/ 数据/ 集/ ,/ 只要/ 给定/ 足够/ 小/ 的/ k/ ,/ 则/ 能够/ 将/ 最终/ k/ -/ 支配/ skyline/ 点/ 的/ 数量/ 控制/ 在/ 一个/ 有效/ 的/ 范围/ 里/ ,/ 以便/ 于/ 向/ 用户/ 展现/ 结果/ ,/ 这/ 保证/ 了/ k/ -/ 支配/ skyline/ 查询/ 的/ 有效性/ ./ k/ -/ 支配/ skyline/ 具有/ 一个/ 特殊/ 的/ 性质/ :/ 对于/ 一个/ 数据/ 集中/ 的/ 数据/ 点/ ,/ 它们/ 之间/ 可能/ 形成/ 循环/ 的/ k/ -/ 支配/ 关系/ ./ 表/ 1/ 的/ 例子/ 说明/ 了/ 这种/ 循环/ 的/ k/ -/ 支配/ 关系/ ./ 当/ k/ =/ 3/ 时/ ,/ 数据/ 点/ ak/ -/ 支配/ 点/ b/ ,/ 点/ bk/ -/ 支配/ 点/ c/ ,/ 点/ ck/ -/ 支配/ 点/ d/ ,/ 而点/ d/ 则/ 反过来/ k/ -/ 支配/ 点/ a/ ,/ 4/ 个点/ 之间/ 形成/ 了/ 循环/ 的/ k/ -/ 支配/ 关系/ ./ 这种/ 循环/ 的/ 支配/ 关系/ 给/ k/ -/ 支配/ skyline/ 的/ 计算/ 带来/ 了/ 困难/ ,/ 传统/ 的/ skyline/ 算法/ 不适/ 用于/ k/ -/ 支配/ skyline/ 的/ 计算/ ./ 3/ 相关/ 研究/ 现有/ 的/ k/ -/ 支配/ skyline/ 查询/ 算法/ 主要/ 有/ 3/ 种/ :/ One/ -/ Scan/ 算法/ 、/ Two/ -/ Scan/ 算法/ 还有/ SortedRe/ -/ trieval/ 算法/ [/ 2/ ]/ ,/ 下面/ 简要/ 介绍/ 这/ 3/ 种/ 算法/ ,/ 详细/ 细节/ 可/ 参看/ 文献/ [/ 2/ ]/ ./ One/ -/ Scan/ 算法/ 使用/ 与/ 传统/ 的/ 循环/ 嵌套/ 算法/ (/ BNL/ )/ 相似/ 的/ 思想/ ,/ 它/ 主要/ 基于/ 以下/ 两个/ 特性/ ./ 它/ 是/ 在/ 假设/ 一个/ 数据/ 点/ p/ ∈/ D/ 不是/ 一个/ k/ -/ 支配/ 的/ skyline/ 点/ 的/ 前题/ 下/ ./ 性质/ 1/ ./ 数据/ 集/ D/ 中/ 必定/ 存在/ 一个/ 传统/ 的/ skyline/ 点/ q/ ,/ 满足/ 点/ qk/ -/ 支配/ 点/ p/ ./ 性质/ 2/ ./ 数据/ 点/ p/ 有/ 可能/ 不/ 被/ D/ 中/ 的/ 任一/ k/ -/ 支配/ skyline/ 点/ 所/ k/ -/ 支配/ ./ 根据/ 性质/ 2/ ,/ 要/ 判定/ 数据/ 集/ D/ 中/ 的/ 一个点/ p/ 是否/ 被/ 数据/ 集/ k/ -/ 支配/ ,/ 仅仅/ 用点/ p/ 与/ D/ 中/ 所有/ k/ -/ 支配/ skyline/ 点去/ 比较/ 是/ 不够/ 的/ ./ 而/ 根据/ 性质/ 1/ ,/ 只要/ 再/ 将/ p/ 与/ 数据/ 集/ D/ 中/ 所有/ 传统/ skyline/ 点/ 进行/ 比较/ 就/ 能/ 判定/ 它/ 是否是/ 一个/ k/ -/ 支配/ 的/ skyline/ 点/ ./ 基于/ 以上/ 两个/ 性质/ ,/ One/ -/ Scan/ 算法/ 通过/ 计算/ 出/ 数据/ 集/ D/ 的/ 传统/ skyline/ 点集/ ,/ 并用/ 它们/ 来/ 淘汰/ D/ 中/ 的/ 非/ k/ -/ 支配/ 数据/ 点/ ,/ 从而/ 求解/ 出/ 结果/ ./ 一般/ 在/ 算法/ 的/ 进行/ 过程/ 中/ ,/ 会/ 维护/ 两个/ 中间/ 数据/ 集/ :/ (/ 1/ )/ 候选/ k/ -/ 支配/ skyline/ 数据/ 点集/ R/ ./ (/ 2/ )/ 候选/ 非/ k/ -/ 支配/ skyline/ 点/ 的/ 传统/ skyline/ 数据/ 点集/ T/ ./ 对/ 每个/ 新/ 处理/ 的/ 数据/ 点/ ,/ 首先/ 与/ T/ 中/ 的/ 点/ 进行/ 比较/ ,/ 如果/ 数据/ 点/ 被/ T/ 中/ 的/ 点/ 所/ 支配/ 则/ 直接/ 丢弃/ ./ 如果/ 不/ 被/ 支配/ 则/ 再/ 与/ R/ 中/ 的/ 点/ 比较/ ,/ 判断/ 其/ 是否是/ 候选/ k/ -/ 支配/ skyline/ 点/ ,/ 如果/ 是/ 则/ 将/ 其/ 插入/ R/ 中/ ,/ 否则/ 插入/ T/ 中/ ./ 虽然/ One/ -/ Scan/ 算法/ 不/ 需要/ 任何/ 的/ 预处理/ ,/ 并且/ 只/ 需要/ 对/ 数据/ 集/ 进行/ 一次/ 扫描/ ,/ 然而/ 为此/ 算法/ 必须/ 在/ 整个/ 处理过程/ 中/ 保留/ 所有/ 的/ 传统/ skyline/ 数据/ 点/ ,/ 在/ 高维/ 的/ 数据/ 集/ ,/ 尤其/ 是/ 高维/ 反/ 相关/ 的/ 数据/ 集中/ ,/ 传统/ skyline/ 数据/ 集/ 几乎/ 接近/ 于原/ 数据/ 集/ 的/ 大小/ ./ 在/ 这种/ 最坏/ 情况/ 下/ ,/ 算法/ 需要/ 多于/ 原/ 数据/ 集/ 一倍/ 的/ 额外/ 空间/ 来/ 记录/ 两个/ 中间/ 数据/ 集/ ./ 与此同时/ ,/ 算法/ 的/ 时间/ 开销/ 也/ 非常/ 大/ ,/ 经过/ 分析/ 其/ 计算/ 时间/ 与/ 数据/ 集中/ 的/ 传统/ skyline/ 点数/ 成正比/ ./ Two/ -/ Scan/ 算法/ 为了/ 降低/ 计算/ 对于/ 空间/ 的/ 要求/ ,/ 通过/ 对/ 输入/ 数据/ 集/ 的/ 两次/ 扫描/ ,/ 算法/ 可以/ 不/ 需要/ 维护/ 中间/ 数据/ 集/ T/ ./ 在/ 第一次/ 对/ 数据/ 集/ 的/ 扫描/ 中/ ,/ 循环/ 地/ 将/ D/ 中/ 的/ 每/ 一个点/ p/ 与/ 候选/ k/ -/ 支配/ skyline/ 数据/ 集/ R/ 中/ 的/ 每/ 一个点/ 进行/ 比较/ ,/ 如果/ p/ 被/ R/ 中/ 任意/ 点/ k/ -/ 支配/ ,/ 则/ 丢弃/ p/ ,/ 否则/ 将/ 其/ 插入/ R/ 中/ ,/ 并且/ 将/ R/ 中/ 被/ pk/ -/ 支配/ 的/ 点/ 删除/ 掉/ ./ 在/ 第一次/ 扫描/ 处理/ 结束/ 后/ ,/ 根据/ 性质/ 2/ ,/ R/ 中/ 包含/ 了/ 非/ k/ -/ 支配/ skyline/ 的/ 点/ ./ 因此/ 算法/ 通过/ 第二次/ 扫描/ 去除/ R/ 中/ 的/ 错误/ 结果/ ,/ 将/ R/ 中/ 的/ 点/ 与/ D/ 中/ 的/ 每个/ 点/ 进行/ 比较/ ./ 如果/ R/ 中/ 的/ 一个点/ p/ 被/ D/ 中/ 的/ 任意/ 点/ k/ -/ 支配/ ,/ 则/ 将/ p/ 丢弃/ ./ 经过/ 第二轮/ 扫描/ 后/ 得到/ 的/ 数据/ 集/ R/ 就是/ D/ 中/ 的/ k/ -/ 支配/ skyline/ 点集/ ./ Two/ -/ Scan/ 算法/ 的/ 效率/ 主要/ 取决于/ 在/ 第一次/ 扫描/ 过程/ 中/ ,/ 保存/ 在/ R/ 中/ 的/ 候选/ k/ -/ 支配/ skyline/ 数据/ 点/ 能否/ 有效/ 地/ 淘汰/ 掉/ 大部分/ 不/ 属于/ 结果/ 的/ 数据/ 点/ ./ 如果/ 在/ 第一次/ 扫描/ 过后/ ,/ R/ 中/ 的/ 非/ k/ -/ 支配/ skyline/ 点/ 数量/ 很少/ ,/ 则/ 第二次/ 扫描/ 的/ 代价/ 很小/ ,/ 从而/ 整个/ 算法/ 的/ 性能/ 会/ 比较/ 好/ ./ 但是/ ,/ 由于/ 存在/ 着/ 循环/ k/ -/ 支配/ 的/ 关系/ ,/ 算法/ 可能/ 在/ 第一次/ 扫描/ 过后/ 在/ 数据/ 集/ R/ 中/ 保留/ 了/ 大量/ 非/ k/ -/ 支配/ skyline/ 数据/ 点/ ,/ 使得/ 第二轮/ 扫描/ 的/ 计算/ 开销/ 会/ 很大/ ,/ 在/ 最坏/ 情况/ 下/ 算法/ 的/ 总/ 时间/ 复杂度/ 会/ 超过/ One/ -/ Scan/ 算法/ ,/ 并且/ 空间/ 开销/ 上/ 也/ 体现/ 不/ 出/ 优势/ ./ 对于/ 大规模/ 的/ 数据/ 集/ ,/ 计算/ 时间/ 可能/ 很长/ ,/ 用户/ 往往/ 希望/ 算法/ 能够/ 在/ 计算/ 过程/ 中/ 快速/ 地/ 返回/ 部分/ 结果/ ,/ 实现/ 渐进/ 输出/ ./ 前/ 两种/ 算法/ 都/ 必须/ 在/ 计算/ 结束/ 后/ Page4/ 才能/ 返回/ 查询/ 结果/ ,/ 因此/ 不/ 具备/ 渐进性/ ./ SortedRetrieval/ 算法/ 可以/ 实现/ 结果/ 的/ 渐进/ 输出/ ,/ 它/ 的/ 思想/ 来源于/ 文献/ [/ 3/ ]/ ./ 首先/ 算法/ 将/ 数据/ 集/ D/ 中/ 的/ 点/ 根据/ 每/ 一个/ 维度/ si/ ∈/ S/ 分别/ 进行/ 排序/ (/ 降序/ 排序/ )/ ,/ 将/ 每个/ 维度/ 的/ 排序/ 结果/ 存储/ 在/ |/ S/ |/ 个/ 数组/ 中/ ./ 在/ 具体/ 的/ 实现/ 过程/ 中/ ,/ 为了/ 节省/ 存储空间/ ,/ 一般/ 用/ 指针/ 代替/ 实际/ 存储/ 的/ 数据/ 点/ ./ 算法/ 在/ 处理过程/ 中/ 维护/ 一个/ 数据/ 集/ T/ ,/ 一/ 开始/ 将/ T/ 初始化/ 为/ D/ ./ 不同于/ 前/ 两个/ 算法/ 顺序/ 地/ 对/ 数据/ 集/ D/ 进行/ 扫描/ ,/ SortedRetrieval/ 算法/ 反复/ 地用/ 一个/ 选择函数/ 在/ 这/ |/ S/ |/ 个/ 数组/ 中/ 选择/ 一个/ 数组/ ,/ 对/ 该/ 数组/ 上/ 未/ 被/ 处理/ 的/ 具有/ 最小值/ 的/ 一堆/ 数据/ 点/ 进行/ 计算/ ,/ 将/ 被/ k/ -/ 支配/ 的/ 数据/ 点/ 从/ T/ 中/ 丢弃/ ,/ 同时/ 将/ 被/ 确定/ 为/ 属于/ k/ -/ 支配/ skyline/ 的/ 数据/ 点/ 输出/ ./ 这个/ 过程/ 反复/ 循环/ ,/ 直到/ 数据/ 集/ T/ 为空/ ./ 在/ 算法/ 的/ 处理过程/ 中/ ,/ 一个/ 数据/ 点/ p/ 只要/ 满足/ 以下/ 两个/ 条件/ ,/ 就/ 可以/ 被/ 判定/ 为/ 是/ k/ -/ 支配/ 的/ skyline/ 点/ :/ (/ 1/ )/ p/ 没有/ 被/ 已经/ 处理/ 过/ 的/ 数据/ 点/ 所/ k/ -/ 支配/ (/ 即/ p/ 仍然/ 留在/ 数据/ 集/ T/ 中/ )/ ;/ (/ 2/ )/ p/ 已经/ 被/ 算法/ 处理/ 过/ d/ -/ k/ +/ 1/ 次/ ./ 根据/ 以上/ 条件/ ,/ 算法/ 不/ 需要/ 完成/ 全部/ 计算/ 就/ 可以/ 提前/ 输出/ 部分/ 结果/ ./ 由于/ SortedRetrieval/ 算法/ 根据/ 各个/ 维度/ 对/ 数据/ 进行/ 了/ 预/ 排序/ ,/ 因此/ 在/ 计算/ 过程/ 中/ 具有/ 支配/ 能力/ 的/ 数据/ 点有/ 较/ 高/ 的/ 概率/ 被/ 提前/ 处理/ 并/ 用于/ 快速/ 淘汰/ 其它/ 不/ 属于/ 结果/ 的/ 数据/ 点/ ./ 同时/ 算法/ 具备/ 了/ 渐进性/ ./ 然而/ ,/ 由于/ SortedRetrieval/ 算法/ 需要/ 记录/ 每个/ 维度/ 的/ 预/ 排序/ 结果/ 数组/ ,/ 在/ 具体/ 实现/ 中/ 虽然/ 用/ 指针/ 可以/ 避免/ 冗余/ 存储/ 数据/ 点/ ,/ 但是/ |/ D/ |/ 个/ 指针/ 数组/ 也/ 使得/ 算法/ 需要/ 的/ 额外/ 空间/ 开销/ 很大/ ./ 同时/ ,/ 预/ 排序/ 的/ 开销/ 并不一定/ 能/ 保证/ 算法/ 在/ 性能/ 上/ 比/ 另外/ 的/ 算法/ 有/ 更好/ 的/ 表现/ ./ 尤其/ 在/ 反/ 相关/ 的/ 数据/ 集中/ ,/ 大部分/ 数据/ 点/ 只能/ 在/ 算法/ 的/ 结束/ 阶段/ 才/ 被/ 输出/ ,/ 这时/ 算法/ 在/ 计算/ 效率/ 上/ 并不比/ Two/ -/ Scan/ 算法/ 高/ ,/ 再/ 加上/ 预/ 排序/ 的/ 开销/ ,/ 性能/ 反而/ 更差/ 了/ ./ 这种/ 不/ 理想/ 效果/ 很大/ 程度/ 上/ 是因为/ 每个/ 维度/ 的/ 预/ 排序/ 结果/ 数组/ 只/ 保留/ 了/ 单个/ 维度/ 的/ 信息/ ,/ 而/ 没有/ 根据/ k/ 值/ 对/ 数据/ 点/ 进行/ 一个/ 综合/ 的/ 考虑/ ./ 4/ 基于/ 索引/ 的/ 高效/ 犽/ -/ 支配/ Skyline/ 算法/ 4.1/ 算法/ 的/ 基本/ 思想性/ 3/ 个/ 方面/ 进行/ 考虑/ ./ (/ 1/ )/ 时间/ 效率/ 的/ 改进/ 为了/ 提高/ 算法/ 的/ 时间/ 效率/ ,/ 应该/ 尽可能/ 地/ 减少/ 我们/ 的/ 算法/ 从/ 时间/ 效率/ 、/ 空间/ 开销/ 和/ 渐进/ 输出/ 点/ 与/ 点/ 之间/ 的/ 比较/ 次数/ ./ 在/ 对/ 数据/ 集/ D/ 进行/ k/ -/ 支配/ skyline/ 查询/ 的/ 过程/ 中/ ,/ 如果/ 算法/ 在/ 判定/ 一个/ 数据/ 点/ p/ ∈/ D/ 是否/ 属于/ k/ -/ 支配/ skyline/ 数据/ 集时/ ,/ 能够/ 将/ p/ 优先/ 与/ D/ 中/ 具有/ 较强/ k/ -/ 支配/ 能力/ 的/ 数据/ 点/ 进行/ 比较/ ,/ 则/ 对于/ 大部分/ 非/ k/ -/ 支配/ skyline/ 数据/ 点/ ,/ 算法/ 可以/ 快速/ 地/ 将/ 它们/ 淘汰/ 掉/ ,/ 从而/ 节省/ 了/ 大量/ 比较/ ,/ 提高/ 了/ 效率/ ./ 为了/ 实现/ 这一/ 优化/ 目标/ ,/ 算法/ 需要/ 建立/ 一个/ 关于/ 数据/ 集/ D/ 中/ 各个/ 数据/ 点/ k/ -/ 支配/ 能力/ 的/ 索引/ ./ (/ 2/ )/ 提高/ 渐进/ 输出/ 性/ 一个/ 渐进性/ 良好/ 的/ 算法/ 必须/ 能够/ 在/ 计算/ 初期/ 快速/ 返回/ 部分/ 结果/ ./ 为了/ 尽快/ 输出/ 结果/ ,/ 在/ 对/ 数据/ 点/ 的/ 处理过程/ 中/ 算法/ 应该/ 优先选择/ 那些/ 有/ 较/ 高/ 概率/ 属于/ 结果/ 数据/ 集/ 的/ 点/ 进行/ 处理/ ./ 在/ 算法/ 对/ 数据/ 点/ 进行/ 处理/ 时/ ,/ 如果/ 能够/ 在/ 未/ 被/ 处理/ 的/ 数据/ 点中/ 优先选择/ 具有/ 较大/ 可能/ 成为/ k/ -/ 支配/ skyline/ 的/ 点/ ,/ 则/ 可以/ 更快/ 地/ 找到/ 大部分/ 目标/ 数据/ 点/ ,/ 从而/ 减少/ 算法/ 需要/ 维护/ 的/ 中间/ 数据/ 集/ 的/ 大小/ ,/ 并且/ 能够/ 较/ 快/ 地/ 返回/ 部分/ 计算结果/ ,/ 保证/ 算法/ 良好/ 的/ 渐进性/ ./ 为此/ ,/ 算法/ 还/ 需要/ 建立/ 一个/ 关于/ 数据/ 集/ D/ 中/ 各个/ 数据/ 点/ 成为/ k/ -/ 支配/ skyline/ 点/ 能力/ 的/ 索引/ ./ 通过/ 建立/ 以上/ 的/ 两个/ 索引/ 表/ ,/ 算法/ 在/ 处理过程/ 可以/ 根据/ 第/ 2/ 个/ 索引/ 来/ 选择/ 要/ 处理/ 的/ 数据/ 点/ ,/ 再/ 将/ 当前/ 处理/ 的/ 数据/ 点/ 根据/ 第/ 1/ 个/ 索引/ 的/ 顺序/ 与/ 其它/ 数据/ 点/ 进行/ 比较/ ,/ 这样/ 算法/ 就/ 能够/ 快速/ 识别/ 并/ 返回/ 真正/ 的/ k/ -/ 支配/ skyline/ 点/ ,/ 同时/ 快速/ 淘汰/ 其它/ 的/ 非/ 结果/ 数据/ 点/ ,/ 实现/ 高效率/ 和/ 良好/ 渐进性/ 的/ 计算/ ./ (/ 3/ )/ 减少/ 空间/ 开销/ 空间/ 开销/ 的/ 优化/ 目标/ 是/ 减少/ 计算/ 过程/ 中/ 需要/ 的/ 额外/ 空间/ ,/ 并且/ 保持/ 开销/ 大小/ 的/ 稳定/ ./ 由于/ 我们/ 只/ 为/ 数据/ 集/ 建立/ 两个/ 索引/ ,/ 比起/ 需要/ 建立/ |/ S/ |/ 个预/ 排序/ 数组/ 的/ SortedRetrieval/ 算法/ ,/ 能够/ 大大降低/ 建立/ 索引/ 的/ 空间/ 开销/ ./ 同时/ 改进/ 算法/ 使得/ 计算/ 过程/ 中/ 不/ 需要/ 保留/ 中间/ 结果/ ,/ 这样/ 与/ 需要/ 暂存/ 中间/ 数据/ 集/ 的/ One/ -/ Scan/ 和/ Two/ -/ Scan/ 算法/ 相比/ 不仅/ 空间/ 开销/ 减少/ 了/ ,/ 而且/ 开销/ 的/ 大小/ 也/ 保持稳定/ ./ 4.2/ 算法/ 的/ 具体/ 设计/ 1/ )/ 建立/ 两个/ 索引/ 表/ :/ Ability/ 表/ 和/ Possibility/ 表/ 根据/ 优化/ 的/ 基本/ 思想/ ,/ 我们/ 要/ 为/ 数据/ 集/ 建立/ 索引/ ,/ 首先/ 要/ 对/ 一个/ 数据/ 点/ p/ ∈/ D/ ,/ 定义/ 它/ k/ -/ 支配/ 其它/ 数据/ 点/ 的/ 能力/ 和/ 成为/ k/ -/ 支配/ skyline/ 数据/ 点/ 可能性/ 的/ 形式/ 描述/ ./ 这里/ 假设/ D/ 所在/ 的/ 空间/ S/ 上/ 每个/ 维度/ 都/ 具有/ 相同/ 的/ 取值/ 范围/ ,/ 并且/ 取值/ 都/ 不/ 为/ 负数/ (/ 实际/ 应用/ 中/ 可/ Page5/ 以/ 通过/ 对/ 数据/ 集/ 的/ 规范化/ 预处理/ 来/ 满足/ 这一/ 条件/ )/ ./ (/ 1/ )/ 根据/ k/ -/ 支配/ skyline/ 的/ 定义/ ,/ 一个/ 数据/ 点/ 只要/ 在/ 任意/ k/ 个/ 维度/ 上/ 取值/ 优于/ 另/ 一个/ 数据/ 点/ ,/ 则/ k/ -/ 支配/ 的/ 关系/ 成立/ ./ 如果/ 一个点/ 在/ k/ 个维上/ 取值/ 很/ 好/ ,/ 则/ 它/ k/ -/ 支配/ 其它/ 点/ 的/ 能力/ 就/ 会/ 比较/ 强/ ./ 因此/ ,/ 一个点/ 的/ k/ -/ 支配/ 能力/ 直观/ 上/ 可以/ 用/ 它/ 取值/ 最优/ 的/ k/ 个维上/ 的/ 数值/ 之/ 和/ 来/ 表示/ ./ 对于/ 一个/ D/ 中/ 的/ 数据/ 点/ p/ ∈/ D/ ,/ 关于/ 参数/ k/ ,/ 它/ 的/ k/ -/ 支配/ 能力/ 用/ bestKDim/ (/ p/ ,/ k/ )/ 表示/ :/ 其中/ maxdim/ (/ p/ ,/ i/ )/ 为/ 数据/ 点/ p/ 所有/ 维上/ 取值/ 第/ i/ 大/ 的/ 值/ ./ 式/ (/ 1/ )/ 直接/ 对/ 数据/ 点/ 取值/ 最优/ 的/ k/ 个维/ 求和/ ,/ 对于/ 各个/ 维上/ 数值/ 差别/ 很大/ 的/ 数据/ ,/ 会/ 造成/ 数据/ 点/ 的/ 某些/ 维在/ 总和/ 中/ 具有/ 过高/ 的/ 权重/ ,/ 因此/ 直接/ 用/ k/ 个维/ 之/ 和/ 不能/ 很/ 好/ 地/ 反应/ 数据/ 点/ 的/ k/ -/ 支配/ 能力/ ./ 考虑/ 下面/ 的/ 例子/ ,/ 表/ 2/ 中/ 分别/ 是/ 数据/ 点/ p/ 和/ q/ 的/ 两个/ 最优/ 维度/ (/ k/ =/ 2/ )/ ./ 如果/ 使用/ 式/ (/ 1/ )/ 来/ 表示/ 数据/ 点/ 的/ k/ -/ 支配/ 能力/ ,/ 则/ 点/ q/ 的/ k/ -/ 支配/ 能力/ 强于/ 点/ p/ ./ 然而/ 实际上/ ,/ 点/ p/ 比点/ q/ 具有/ 更大/ 可能/ 支配/ 其它/ 数据/ 点/ ./ 如图/ 1/ 所示/ :/ 在/ 各自/ 取值/ 最优/ 的/ 2/ 维空间/ 上点/ p/ 比点/ q/ 具有/ 更大/ 的/ k/ -/ 支配/ 面积/ ./ 图/ 1/ 的/ 例子/ 同样/ 可以/ 扩展/ 到/ k/ 大于/ 2/ 的/ 情况/ ,/ 因此/ 为了/ 更/ 客观/ 地/ 反应/ 数据/ 点/ 的/ k/ -/ 支配/ 能力/ ,/ 应该/ 用/ 数据/ 点/ 最优/ 的/ k/ 个维/ 的/ 乘积/ 来/ 表示/ ,/ 将/ bestKDim/ (/ p/ ,/ k/ )/ 修改/ 为/ 考虑/ 到/ 当/ k/ 的/ 取值/ 较大/ 时/ ,/ 式/ (/ 2/ )/ 在/ 算法/ 的/ 实际/ i/ =/ 1/ 实现/ 中/ 容易/ 导致/ 溢出/ ./ 为了/ 解决/ 这一/ 问题/ ,/ 我们/ 可以/ 引入/ 对数函数/ ln/ (/ x/ )/ ,/ 注意/ 到/ 有/ (/ 假设/ 对于/ 任意/ 的/ p/ 和/ i/ ,/ maxdim/ (/ p/ ,/ i/ )/ >/ 0/ )/ (/ ln/ ∏/ k/ 再/ 考虑/ 到/ 取值/ 为/ 0/ 的/ 情况/ ,/ 在/ 算法/ 中/ 对/ 每个/ maxdim/ (/ p/ ,/ i/ )/ 先加/ 1/ 再求/ 相应/ 的/ 对数函数/ 值/ (/ 根据/ 前面/ 的/ 假设/ ,/ 每个/ 维度/ 的/ 取值/ 均/ 非负/ )/ ./ 对于/ 一个/ D/ 中/ 的/ 数据/ 点/ p/ ∈/ D/ ,/ 关于/ 参数/ k/ ,/ 它/ 的/ k/ -/ 支配/ 能力/ 最后/ 表示/ 为/ bestKDim/ (/ p/ ,/ k/ )/ =/ ∑/ k/ 即/ bestKDim/ (/ p/ ,/ k/ )/ 为点/ p/ 所有/ 维中/ 取值/ 最大/ 的/ k/ 个维上/ 数值/ 加/ 1/ 关于/ 对数函数/ ln/ (/ x/ )/ 的/ 值/ 之/ 和/ ./ 表/ 3/ 中/ 分别/ 是/ 数据/ 点/ p/ 和/ q/ 的/ 两个/ 最优/ 维度/ 用式/ (/ 1/ )/ 与/ 使用/ 式/ (/ 4/ )/ 做/ 度量/ 的/ 数值/ ./ 可以/ 看出/ ,/ 在/ 直接/ 求和/ 的/ 情况/ 下/ q/ 优于/ p/ ,/ 而/ 在/ 使用/ 对数函数/ 之后/ ,/ p/ 优于/ q/ ./ 显然/ ,/ 从图/ 1/ 直观/ 上/ 我们/ 知道/ p/ 在/ 大部分/ 情况/ 下比/ q/ 具有/ 更强/ 的/ k/ -/ 支配/ 能力/ ,/ 在/ 直接/ 求和/ 的/ 情况/ 下/ ,/ q/ 只要/ 在/ 一个/ 维上/ 有/ 非常/ 好/ 的/ 取值/ ,/ 就/ 可以/ 弥补/ 另外/ 一个/ 维上/ 的/ 缺陷/ ,/ 这/ 使得/ 总和/ 不能/ 客观/ 反映/ 各个/ 维/ 的/ 情况/ ./ 而/ 通过/ 使用/ ln/ (/ x/ )/ 之后/ 的/ 总和/ 则/ 可以/ 防止/ 单个/ 维度/ 权重/ 过高/ ,/ 从而/ 更/ 全面/ 地/ 反映/ 数据/ 点/ 的/ k/ -/ 支配/ 能力/ ./ pq/ 根据/ 式/ (/ 4/ )/ 对/ bestKDim/ 的/ 定义/ ,/ 为/ 数据/ 集中/ 的/ 每/ 一个/ 数据/ 点/ p/ 计算/ 其/ bestKDim/ (/ p/ ,/ k/ )/ 值/ ,/ 然后/ 根据/ 该值/ 由/ 高到/ 低/ 建立/ 所有/ 数据/ 点/ k/ -/ 支配/ 能力/ 的/ 索引/ Ability/ 表/ ./ (/ 2/ )/ 一个/ 数据/ 点要/ 成为/ k/ -/ 支配/ skyline/ ,/ 必须/ 保证/ 不/ 被/ 数据/ 集中/ 任意/ 其它/ 数据/ 点/ 所/ k/ -/ 支配/ ./ 如果/ 一个点/ 在/ 最差/ 的/ k/ 个维上/ 的/ 取值/ 仍然/ 比较/ 好/ ,/ 则/ 它/ 很/ 难/ 被/ 其它/ 点/ 所/ k/ -/ 支配/ ,/ 有/ 很大/ 的/ 可能/ 成为/ k/ -/ 支配/ skyline/ 点/ ./ 因此/ ,/ 一个/ 数据/ 点/ 成为/ k/ -/ 支配/ skyline/ 点/ 的/ 可能性/ 可以/ 直观/ 地用/ 它/ 取值/ 最差/ 的/ k/ 个维上/ 的/ 数值/ 之/ 和/ 来/ 表示/ ./ 与/ (/ 1/ )/ 同理/ ,/ 对于/ 一个/ D/ 中/ 的/ 数据/ 点/ p/ ∈/ D/ ,/ 关于/ 参数/ k/ ,/ 它/ 成为/ k/ -/ 支配/ skyline/ 数据/ 点/ 的/ 能力/ 用/ worstKDim/ (/ p/ ,/ k/ )/ 表示/ :/ Page6worstKDim/ (/ p/ ,/ k/ )/ =/ ∑/ k/ 其中/ mindim/ (/ p/ ,/ i/ )/ 为/ 数据/ 点/ p/ 所有/ 维上/ 取值/ 第/ i/ 小/ 的/ 值/ ,/ 即/ worstKDim/ (/ p/ ,/ k/ )/ 为点/ p/ 所有/ 维度/ 中/ 取值/ 最小/ 的/ k/ 个维上/ 数值/ 加/ 1/ 关于/ 对数函数/ ln/ (/ x/ )/ 的/ 值/ 求和/ ./ 根据/ worstKDim/ 的/ 定义/ ,/ 为/ 数据/ 集中/ 的/ 每个/ 数据/ 点/ p/ 计算/ 其/ worstKDim/ (/ p/ ,/ k/ )/ 值/ ,/ 然后/ 根据/ 该值/ 由/ 高到/ 低/ 建立/ 所有/ 数据/ 点/ 成为/ k/ -/ 支配/ skyline/ 可能性/ 的/ 索引/ Possibility/ 表/ ./ 2/ )/ 根据/ 索引/ 进行/ 计算/ 在/ 建立/ 完/ 数据/ 集/ 的/ 两个/ 索引/ 之后/ ,/ 算法/ 根据/ 索引/ 进行/ 计算/ ./ 按照/ Possibility/ 表/ 的/ 索引/ 顺序/ 选择/ 数据/ 集中/ 的/ 点/ 进行/ 处理/ ./ 对/ 每个/ 处理/ 的/ 数据/ 点/ p/ ,/ 将/ 它/ 按照/ Ability/ 表/ 的/ 索引/ 顺序/ 与/ 其它/ 数据/ 点/ 进行/ 比较/ ,/ 一旦/ p/ 在/ 计算/ 过程/ 中/ 被/ 其它/ 点/ k/ -/ 支配/ ,/ 则/ 立即/ 将/ 其/ 淘汰/ ./ 若点/ p/ 与/ Ability/ 表中/ 的/ 所有/ 点/ 比较/ 后/ 仍/ 未/ 被/ 淘汰/ ,/ 则/ p/ 成为/ k/ -/ 支配/ skyline/ 点/ ,/ 可以/ 立即/ 输出/ ./ 接着/ 算法/ 再/ 从/ Possibility/ 表中取/ 下/ 一个点/ 进行/ 判断/ ,/ 如此/ 迭代/ 直到/ 所有/ 点/ 都/ 被/ 处理/ 过则/ 算法/ 结束/ ./ 3/ )/ 计算/ 过程/ 中/ 的/ 进一步/ 优化/ 对于/ 数据/ 集中/ 每/ 一个/ k/ -/ 支配/ skyline/ 点/ ,/ 算法/ 必须/ 将/ 它/ 与/ 所有/ 点/ 都/ 进行/ 比较/ ./ 这/ 是因为/ 只有/ 与/ 所有/ 的/ 数据/ 点/ 都/ 进行/ 比较/ 之后/ ,/ 算法/ 才能/ 确定/ 一个点/ 属于/ k/ -/ 支配/ skyline/ ./ 然而/ ,/ 在/ Ability/ 表/ 中排/ 在/ 后面/ 的/ 那些/ 点/ 其/ k/ -/ 支配/ 能力/ 很/ 弱/ ,/ 对于/ 在/ Possibility/ 表中/ 排名/ 很前/ 的/ 数据/ 点/ ,/ 将/ 它们/ 进行/ 比较/ 是/ 多余/ 的/ ,/ 算法/ 应该/ 尽可能减少/ 这种/ 无/ 意义/ 的/ 比较/ ./ 实际上/ 在/ 计算/ 过程/ 中/ 依靠/ 索引/ 不仅/ 可以/ 提高/ 对非/ 结果/ 数据/ 点/ 的/ 淘汰/ 效率/ ,/ 而且/ 在/ 判断/ 一个/ k/ -/ 支配/ skyline/ 点时/ 也/ 可以/ 减少/ 不必要/ 的/ 比较/ ./ 为此/ 在/ 算法/ 中/ 我们/ 需要/ 用到/ 一个/ 定理/ 以/ 实现/ 进一步/ 的/ 优化/ ,/ 下面/ 我们/ 提出/ 并/ 证明/ 这个/ 定理/ ./ 定理/ 2/ ./ 对于/ 数据/ 集/ D/ 中/ 的/ 两个/ 数据/ 点/ p/ 和/ q/ ,/ 关于/ 参数/ k/ ,/ 如果/ 满足/ worstKDim/ (/ p/ ,/ k/ )/ / bestKDim/ (/ q/ ,/ k/ )/ ,/ 则/ 点/ p/ 不会/ 被点/ q/ 所/ k/ -/ 支配/ ./ 证明/ ./ 用/ 反证法/ ./ 假设/ 数据/ 集/ D/ 中/ 存在/ 两个/ 数据/ 点/ p/ 和/ q/ ,/ 关于/ 参数/ k/ ,/ 满足/ worstKDim/ (/ p/ ,/ k/ )/ / bestKDim/ (/ q/ ,/ k/ )/ ,/ 又/ 点/ qk/ -/ 支配/ 点/ p/ ./ 由于/ 点/ qk/ -/ 支配/ 点/ p/ ,/ 根据/ k/ -/ 支配/ 的/ 定义/ ,/ 则/ 存在/ S/ =/ {/ s1/ ,/ s2/ ,/ …/ ,/ sk/ }/ / S/ ,/ 满足/ / st/ ∈/ S/ ,/ 有/ p/ ./ st/ / q/ ./ st/ ,/ 且/ 存在/ st/ ∈/ S/ ,/ 使得/ p/ ./ st/ </ q/ ./ st/ ./ 由于/ 对数函数/ ln/ (/ x/ )/ 是/ (/ 0/ ,/ +/ )/ 上/ 的/ 单调/ 递增/ 函数/ ,/ 因此/ ,/ ∑/ st/ ∈/ Sln/ (/ p/ ./ st/ +/ 1/ )/ </ ∑/ st/ ∈/ S/ 同时/ ,/ 根据/ worstKDim/ (/ p/ ,/ k/ )/ 的/ 定义/ ,/ 有/ worst/ -/ KDim/ (/ p/ ,/ k/ )/ / ∑/ st/ ∈/ S/ 的/ 定义/ 有/ ∑/ st/ ∈/ S/ 以/ 推出/ 这/ 与/ 前面/ 的/ 假设/ worstKDim/ (/ p/ ,/ k/ )/ / bestKDim/ (/ q/ ,/ k/ )/ 矛盾/ ,/ 结论/ 得证/ ./ 根据/ 以上/ 定理/ ,/ 在/ 算法/ 的/ 计算/ 过程/ 中/ ,/ 如果/ 正在/ 处理/ 的/ 数据/ 点/ p/ 的/ worstKDim/ 值/ 大于/ 或/ 等于/ Ability/ 表中/ 未/ 与/ p/ 比较/ 的/ 数据/ 点/ 的/ bestKDim/ 值/ ,/ 则/ 可以/ 提前/ 判定/ 点/ p/ 是/ k/ -/ 支配/ skyline/ 点/ ,/ 不/ 需要/ 继续/ 与/ Ability/ 表中/ 的/ 剩余/ 点/ 进行/ 比较/ ./ 4/ )/ 算法/ 的/ 伪/ 代码/ 描述/ 算法/ 具体/ 实现/ 的/ 伪/ 代码/ 描述/ 如/ 算法/ 1/ ./ 算法/ 1/ ./ Index/ -/ Based/ (/ D/ ,/ S/ ,/ k/ )/ ./ ;/ 算法/ 输入/ 包括/ 3/ 个/ 参数/ ,/ D/ 代表/ 查询/ 的/ 数据/ 集/ ,/ S/ 代表/ 数据/ 集/ 所在/ 的/ 空间/ ,/ k/ 代表/ 查询/ k/ -/ 支配/ skyline/ ./ ;/ 算法/ 输出/ D/ 中/ 的/ k/ -/ 支配/ skyline/ 数据/ 集/ R/ ./ 1/ ./ foreverypointp/ ∈/ Ddo2/ ./ computethebestKDim/ (/ p/ ,/ k/ )/ andworstKDim/ (/ p/ ,/ 3/ ./ initializethemarkerforp/ ,/ isDominated/ =/ false4/ ./ sortDinnon/ -/ ascendingorderofeachpoint/ ’/ s5/ ./ sortDinnon/ -/ ascendingorderofeachpoint/ ’/ s6/ ./ initializethesetofk/ -/ dominantskylinepointsR/ =/ / 7/ ./ initializethecursorforPossibility/ ,/ cworst/ =/ 18/ ./ while/ (/ cworst/ / |/ D/ |/ )/ do9/ ./ letpbethepointpointedbyPossibility/ [/ cworst/ ]/ 10/ ./ if/ (/ p/ ./ isDominanted/ =/ false/ )/ then11/ ./ initializethecursorforAbility/ ,/ cbest/ =/ 112/ ./ while/ (/ cbest/ / |/ D/ |/ )/ do13/ ./ letqbethepointpointedbyAbility/ [/ cbest/ ]/ 14/ ./ if/ (/ worstKDim/ (/ p/ ,/ k/ )/ / bestKDim/ (/ q/ ,/ k/ )/ )/ then15/ ./ breakoutoftheinnerwhile/ -/ loop16/ ./ if/ (/ pk/ -/ dominatesq/ )/ then17/ ./ q/ ./ isDominanted/ =/ true18/ ./ if/ (/ qk/ -/ dominatesp/ )/ then19/ ./ p/ ./ isDominated/ =/ truePage720/ ./ breakoutoftheinnerwhile/ -/ loop21/ ./ cbest/ =/ cbest/ +/ 122/ ./ if/ (/ p/ ./ isDominanted/ =/ false/ )/ then23/ ./ insertpintoR24/ ./ cworst/ =/ cworst/ +/ 125/ ./ returnR/ 在/ 算法/ 的/ 开始/ 阶段/ ,/ 首先/ 为/ 每个/ 数据/ 集/ D/ 中/ 的/ 数据/ 点/ p/ ∈/ D/ ,/ 根据/ 参数/ k/ 计算/ 其/ worstKDim/ (/ p/ ,/ k/ )/ 和/ bestKDim/ (/ p/ ,/ k/ )/ 值/ ,/ 并/ 为/ 每个/ 点/ 初始化/ 一个/ 标识/ 变量/ isDominated/ =/ false/ ,/ 用来/ 记录/ 该/ 数据/ 点/ 是否/ 已经/ 被/ 其它/ 数据/ 点/ 所/ k/ -/ 支配/ (/ 步/ 2/ ~/ 3/ )/ ./ 接着/ 根据/ D/ 中/ 数据/ 点/ 的/ worstKDim/ (/ p/ ,/ k/ )/ 值/ ,/ 按照/ 单调/ 递增/ 顺序/ 来/ 建立/ 关于/ D/ 中/ 数据/ 点/ 成为/ k/ -/ 支配/ skyline/ 点/ 能力/ 的/ 索引/ 表/ Possibility/ [/ 1/ …/ |/ D/ |/ ]/ ./ 再/ 根据/ 所有/ 点/ 的/ bestKDim/ (/ p/ ,/ k/ )/ 值/ ,/ 按照/ 单调/ 递增/ 顺序/ 建立/ 关于/ 数据/ 点/ k/ -/ 支配/ 能力/ 的/ 索引/ 表/ Ability/ [/ 1/ …/ |/ D/ |/ ]/ (/ 步/ 4/ ~/ 5/ )/ ./ 建立/ 完/ 索引/ 后/ ,/ 算法/ 按照/ Possibility/ [/ 1/ …/ |/ D/ |/ ]/ 表/ 的/ 索引/ 顺序/ 选择/ 要/ 处理/ 的/ 数据/ 点/ (/ 步/ 8/ ~/ 9/ )/ ./ 对/ 每个/ 处理/ 的/ 数据/ 点/ p/ ,/ 按照/ Ability/ [/ 1/ …/ |/ D/ |/ ]/ 表/ 的/ 索引/ 顺序/ 选择/ 数据/ 点/ q/ 跟/ p/ 进行/ 比较/ ,/ 并/ 根据/ 比较/ 的/ 结果/ 更新/ 点/ p/ 和/ 点/ q/ 的/ 标识/ 变量/ isDominated/ (/ 步/ 11/ ~/ 20/ )/ ./ 注意/ 到/ 在/ 处理/ 每个/ 数据/ 点/ p/ 之前/ ,/ 算法/ 都/ 先/ 判断/ p/ 的/ 标识/ isDominated/ ,/ 如果/ 为/ true/ 则/ 可以/ 直接/ 忽略/ (/ 步/ 10/ )/ ./ 因为/ 点/ p/ 有/ 可能/ 在/ 被/ Possibility/ [/ 1/ …/ |/ D/ |/ ]/ 表/ 索引/ 之前/ 就/ 被/ Ability/ [/ 1/ …/ |/ D/ |/ ]/ 表/ 索引/ 用来/ 与/ 被/ 处理/ 的/ 数据/ 点/ 进行/ 比较/ ,/ 算法/ 通过/ isDominated/ 值/ 便/ 可以/ 尽可能/ 避免/ 重复/ 的/ 比较/ ./ 此外/ ,/ 在/ 处理/ 一个/ 数据/ 点/ p/ 时/ ,/ 如果/ 对于/ Ability/ [/ 1/ …/ |/ D/ |/ ]/ 中/ 剩余/ 的/ 任意/ 数据/ 点/ q/ ,/ worstKDim/ (/ p/ ,/ k/ )/ 值/ 不/ 小于/ bestKDim/ (/ q/ ,/ k/ )/ 值/ ,/ 则/ 根据/ 定理/ 2/ ,/ p/ 可以/ 被/ 确认/ 为/ k/ -/ 支配/ skyline/ 点/ ,/ 因此/ 不/ 需要/ 再/ 继续/ 比较/ 下去/ (/ 步/ 14/ ~/ 15/ )/ ./ 这一/ 优化/ 步骤/ 可以/ 进一步/ 避免/ 计算/ 中/ 多余/ 的/ 比较/ ,/ 提高/ 算法/ 性能/ ./ 在/ 每/ 一轮/ 循环/ 结束/ 后/ ,/ 算法/ 可以/ 直接/ 判定/ 该轮/ 循环/ 中/ 所/ 处理/ 的/ 数据/ 点/ 是否是/ k/ -/ 支配/ 的/ skyline/ 点/ ,/ 因此/ 能够/ 在/ 每/ 一轮/ 循环/ 结束/ 后/ 立即/ 返回/ 已经/ 计算/ 的/ 结果/ (/ 步/ 22/ ~/ 23/ )/ ,/ 从而/ 具有/ 比/ SortedRetrieval/ 算法/ 更好/ 的/ 渐进性/ ./ 5/ 分析/ 与/ 实验/ 5.1/ 空间/ 开销/ 和/ 渐进性/ 分析/ (/ 1/ )/ 空间/ 开销/ 设/ 数据/ 集/ D/ 的/ 维数/ 为/ d/ ,/ 包含/ 的/ 点数/ 为/ n/ ,/ 设/ 算法/ 的/ 参数/ 为/ k/ ./ 对于/ 给定/ 的/ 数据/ 集/ D/ 和/ 参数/ k/ ,/ 本文/ 提出/ 的/ Index/ -/ Based/ 算法/ 的/ 空间/ 开销/ 是/ 稳定/ 的/ ./ 它/ 需要/ 建立/ 两个/ 索引/ ,/ 所/ 需要/ 的/ 空间/ 大小/ 与/ 数据/ 集/ 的/ 维数/ d/ 无关/ ,/ 只受/ 数据/ 集/ 点数/ n/ 的/ 影响/ ,/ 建立/ 索引/ 需要/ 的/ 空间/ 开销/ 为/ Ο/ (/ 2n/ )/ ./ 此外/ ,/ 算法/ 在/ 执行/ 过程/ 中/ 没有/ 中间/ 结果/ 需要/ 存储/ ,/ 因此/ 算法/ 总/ 的/ 空间/ 复杂度/ 也/ 为/ Ο/ (/ 2n/ )/ ./ 在/ 高/ 维空间/ 中/ ,/ 随着/ 维数/ d/ 的/ 增加/ ,/ Index/ -/ Based/ 算法/ 相对/ 于/ 其它/ 3/ 种/ 算法/ 在/ 空间/ 复杂度/ 上/ 的/ 优势/ 会/ 更加/ 明显/ ,/ 显示/ 出/ 良好/ 的/ 可扩展性/ ./ 并且/ 在/ 输入/ 数据/ 集/ 大小/ 超过/ 可用内存/ 空间/ 的/ 情况/ 下/ ,/ 这一/ 优势/ 显得/ 更为重要/ ,/ 能/ 避免/ 算法/ 的/ 大量/ IO/ 操作/ ./ (/ 2/ )/ 渐进/ 输出/ 性/ Index/ -/ Based/ 算法/ 根据/ 索引/ 优先选择/ 具有/ 最大/ 可能/ 成为/ 结果/ 的/ 数据/ 点/ 进行/ 处理/ ,/ 因此/ 在/ 算法/ 的/ 执行/ 初期/ 就/ 能/ 返回/ 大部分/ 的/ 执行/ 结果/ ,/ 具有/ 良好/ 的/ 渐进性/ ./ 表/ 4/ 对/ 4/ 种/ 算法/ 在/ 空间/ 开销/ 和/ 渐进性/ 这/ 两个/ 方面/ 进行/ 了/ 总结/ ./ One/ -/ Scan/ 不/ 稳定/ Ο/ (/ dn/ )/ 差/ 没有/ Two/ -/ Scan/ 不/ 稳定/ Ο/ (/ dn/ )/ 差/ 没有/ SortRetrieval/ 稳定/ Ο/ (/ dn/ )/ 差差/ Index/ -/ Based/ 稳定/ Ο/ (/ 2n/ )/ 好好/ 5.2/ 时间/ 效率/ 实验/ 为了/ 评估/ 算法/ 的/ 时间/ 效率/ ,/ 将/ 本文/ 提出/ 的/ 算法/ 与/ 现有/ 的/ 3/ 种/ k/ -/ 支配/ skyline/ 算法/ 进行/ 对比/ ./ 对/ 4/ 种/ 算法/ 均/ 采用/ 相同/ 的/ 编程语言/ 和/ 运行/ 环境/ (/ 表/ 5/ )/ ./ 编程语言/ 运行/ 环境/ C++/ ,/ 用/ VC6/ ./ 0/ 开发/ 和/ 编译/ (/ 1/ )/ 实验/ 参数/ 说明/ 实验/ 中/ 合成/ 数据/ 集所/ 使用/ 的/ 数据/ 生成器/ 由/ 香港中文大学/ 提供/ ,/ 合成/ 数据/ 集/ 需要/ 用到/ 如表/ 6/ 的/ 参数/ ./ Distribution/ 用于/ skyline/ 算法/ 测试/ 的/ 数据/ 集/ 一般/ 有/ 以下/ 3/ 种/ 分布/ :/ 正/ 相关/ (/ correlated/ )/ 、/ 独立/ (/ independent/ )/ 和/ 反/ Page8/ 相关/ (/ anti/ -/ correlated/ )/ ./ 在/ 正/ 相关/ 的/ 数据/ 集中/ ,/ 各个/ 维度/ 的/ 数值/ 大小/ 之间/ 呈/ 正/ 相关/ 的/ 关系/ ./ 在/ 独立/ 分布/ 的/ 数据/ 集中/ ,/ 各个/ 维度/ 在/ 取值/ 上/ 互不/ 相关/ ./ 在/ 反/ 相关/ 数据/ 集中/ ,/ 由于/ 各/ 维度/ 的/ 数值/ 之间/ 是/ 反/ 相关/ 的/ 关系/ ,/ 任意/ 一个/ 数据/ 点/ 在/ 某个/ 维度/ 上/ 数值/ 很/ 高/ ,/ 则/ 会/ 在/ 另外/ 一个/ 维度/ 上/ 数值/ 较/ 低/ ./ 在/ 下面/ 的/ 实验/ 中/ ,/ 将/ 对/ 4/ 种/ 算法/ 在/ 表/ 6/ 中/ 各个/ 参数/ 变化/ 下/ 的/ 性能/ 进行/ 比较/ ./ 在/ 默认/ 的/ 情况/ 下/ ,/ 各个/ 参数设置/ 为/ d/ =/ 15/ ,/ Size/ =/ 100000/ ,/ Distribution/ =/ Independent/ ,/ k/ =/ 11/ ./ 为了/ 便于/ 描述/ ,/ 对/ 各个/ 算法/ 及其/ 扩展/ 算法/ ,/ 下文/ 中将/ 使用/ 如下/ 简称/ :/ OSA/ 代表/ One/ -/ Scan/ 算法/ ,/ TSA/ 代表/ Two/ -/ Scan/ 算法/ ,/ SRA/ 代表/ SortedRetrieval/ 算法/ ,/ IBA/ 代表/ IndexBased/ 算法/ ./ (/ 2/ )/ 合成/ 数据/ 集/ 测试/ 结果/ 图/ 2/ 是/ 4/ 种/ 算法/ 在/ 参数/ k/ 变化/ 下/ 的/ 性能/ 比较/ ,/ 从图/ 中/ 可以/ 看出/ ,/ OSA/ 的/ 性能/ 总体/ 上/ 是/ 最差/ 的/ ./ TSA/ 在/ 参数/ k/ 较/ 小/ 的/ 情况/ 下/ ,/ 性能比/ SRA/ 更优/ ,/ 这是/ 由于/ k/ 越小则/ 数据/ 点/ 形成/ k/ -/ 支配/ 关系/ 的/ 可能性/ 越大/ ,/ 在/ 第一轮/ 扫描/ 中/ TSA/ 能够/ 淘汰/ 掉/ 大部分/ 的/ 数据/ 点/ ./ 但是/ 随着/ k/ 的/ 增长/ ,/ TSA/ 性能/ 下降/ 很快/ ,/ 在/ 反/ 相关/ 数据/ 集/ 测试/ 中当/ k/ =/ 14/ 时/ TSA/ 的/ 计算/ 时间/ 甚至/ 超过/ 了/ OSA/ ./ SRA/ 的/ 性能/ 相对/ 比较稳定/ ./ 在/ 4/ 种/ 算法/ 中/ ,/ IBA/ 性能/ 稳定/ ,/ 并且/ 计算速度/ 始终保持/ 最快/ ./ 图/ 3/ 是/ 关于/ 数据/ 集维数/ 变化/ 的/ 测试/ 结果/ (/ 其中/ 10D6K/ 表示/ d/ =/ 10/ ,/ k/ =/ 6/ )/ ./ OSA/ 的/ 性能/ 虽然/ 受维数/ 增加/ 的/ 影响/ 不/ 大/ ,/ 但/ 总体/ 上/ 仍/ 是/ 最差/ 的/ ./ TSA/ 受维数/ 变化/ 的/ 影响/ 最大/ ,/ 在/ 维数/ d/ =/ 20/ 的/ 独立/ 分布/ 和/ 反/ 相关/ 分布/ 数据/ 集上/ TSA/ 的/ 时间/ 开销/ 甚至/ 是/ 两倍/ 于/ OSA/ ./ SRA/ 和/ IBA/ 算法/ 表现/ 稳定/ ,/ 而/ IBA/ 比/ SRA/ 受维数/ 增加/ 的/ 影响/ 更/ 小/ ,/ 在/ 所有/ 算法/ 中是/ 最优/ 的/ ./ 图/ 4/ 是/ 在/ 数据/ 集大/ 小S/ ize/ 变化/ 下/ 的/ 算法/ 性能/ 比较/ ,/ 随着/ 数据/ 集/ 规模/ 的/ 增加/ ,/ OSA/ 的/ 性能/ 严重/ 下降/ ./ 另外/ 3/ 种/ 算法/ 的/ 表现/ 是/ IBA/ 最好/ 、/ TSA/ 其次/ ,/ 然后/ 是/ SRA/ ./ 这/ 表明/ IBA/ 算法/ 比/ 其它/ 3/ 种/ 算法/ 有/ 更好/ 的/ 可扩展性/ ./ Page9/ 图/ 4/ 在/ 数据/ 集大/ 小S/ ize/ 变化/ 下/ 的/ 算法/ 性能/ (/ 3/ )/ 真实/ 数据/ 集/ 测试/ 结果/ NBA/ 球员/ 统计数据/ 集/ ①/ 包含/ 了/ NBA/ 所有/ 球员/ 在/ 各个/ 赛季/ 表现/ 的/ 统计/ ,/ 包括/ 得分/ 、/ 篮板/ 、/ 抢断/ 等等/ 共/ 17/ 项/ 技术/ 统计/ ,/ 整个/ 数据/ 集共/ 17801/ 个/ 数据/ 点/ ./ 对/ 数据/ 集/ 的/ 测试/ 主要/ 测试/ k/ -/ 支配/ 算法/ 在/ 不同/ 的/ k/ 值下/ 的/ 性能/ 表现/ ./ 从图/ 5/ 的/ 实验/ 结果/ 看/ ,/ 在/ NBA/ 统计数据/ 集中/ ,/ 由于/ 数据量/ 不是/ 很大/ ,/ 在/ 参数/ k/ 小于/ 12/ 的/ 时候/ ,/ k/ -/ 支配/ skyline/ 点/ 非常少/ ,/ 不/ 需要/ 预计/ 算/ 的/ TSA/ 速度/ 是/ 最快/ 的/ ./ 不过/ 随着/ k/ 的/ 增加/ ,/ TSA/ 的/ 时间/ 开销/ 迅速/ 增加/ ,/ 很快/ 超过/ 了/ 平均/ 性能/ 最差/ 的/ OSA/ ./ 而/ IBA/ 性能/ 非常/ 稳定/ ,/ 在/ 总体/ 表现/ 上/ 明显/ 优于/ 另外/ 3/ 种/ 算法/ ./ 6/ 结论/ k/ -/ 支配/ skyline/ 通过/ 降低/ 对于/ “/ 支配/ ”/ 的/ 定义/ ,/ 使得/ 挖掘/ 出来/ 的/ k/ -/ 支配/ skyline/ 数据/ 集/ 具有/ 更/ 重要/ 的/ 意义/ 和/ 作用/ ./ 然而/ 由于/ k/ -/ 支配/ skyline/ 的/ 特殊/ 性质/ ,/ 传统/ 的/ 算法/ 无法/ 适应/ 其/ 计算/ 要求/ ,/ 而/ 现有/ 根据/ k/ -/ 支配/ skyline/ 定义/ 提出/ 的/ 算法/ 在/ 时间/ 效率/ 、/ 空间/ 复杂度/ 和/ 渐进性/ 上/ 都/ 存在/ 不足/ ./ 本文/ 提出/ 一种/ 基于/ 索引/ 的/ k/ -/ 支配/ skyline/ 算法/ ,/ 通过/ 建立/ 两个/ 有效/ 的/ 索引/ ,/ 算法/ 可以/ 尽量减少/ 数据/ 点/ 之间/ 的/ 比较/ 次数/ ,/ 提高/ 了/ 时间/ 效率/ ;/ 尽可能/ 快地/ 返回/ 查询/ 结果/ ,/ 具有/ 良好/ 的/ 渐进性/ ;/ 只/ 使用/ 两个/ 索引/ ,/ 并且/ 不/ 需要/ 保存/ 中间/ 结果/ ,/ 节省/ 了/ 计算/ 的/ 空间/ 开销/ ./ 实验/ 证明/ 本文/ 提出/ 的/ 算法/ 比/ 现有/ 的/ 3/ 种/ 算法/ 有/ 更好/ 的/ 性能/ ./ k/ -/ 支配/ skyline/ 研究/ 方面/ 还有/ 很多/ 改进/ 和/ 扩展/ 的/ 空间/ ,/ 如/ :/ 能否/ 通过/ 建立/ 更加/ 复杂/ 有效/ 的/ 索引/ ,/ 使得/ 算法/ 能够/ 具有/ 更好/ 的/ 效率/ 和/ 可扩展性/ ./ 与此同时/ ,/ 子/ 空间/ skyline/ 的/ 挖掘/ 是/ skyline/ 的/ 另/ 一个/ 研究/ 热点/ ,/ 而/ k/ -/ 支配/ skyline/ 算法/ 的/ 特殊/ 性质/ 使得/ 其在子/ 空间/ skyline/ 计算/ 上/ 具有/ 重要/ 意义/ ,/ 如何/ 将/ 两者/ 进行/ 结合/ 是/ 一个/ 值得/ 深入探讨/ 的/ 问题/ ./ 

