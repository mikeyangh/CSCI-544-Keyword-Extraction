Page1/ 基于/ MapReduce/ 快速/ 犽/ NNJoin/ 方法/ 戴健/ 1/ )/ ,/ 2/ )/ 丁治明/ 2/ )/ 1/ )/ (/ 中国科学院/ 大学/ 北京/ 100049/ )/ 2/ )/ (/ 中国科学院/ 软件/ 研究所/ 基础/ 软件/ 国家/ 工程/ 研究/ 中心/ 北京/ 100190/ )/ 摘要/ kNN/ 连接/ 是/ 空间/ 数据库/ 领域/ 里/ 一个/ 基本/ 而/ 又/ 重要/ 的/ 问题/ ,/ 被/ 广泛/ 地/ 应用/ 于/ 多个/ 其他/ 领域/ ./ 它/ 对/ 提高/ 众多/ 实际/ 应用/ 的/ 性能/ 有着/ 重要/ 意义/ ./ 随着/ 目前/ 参加/ kNN/ 连接/ 的/ 数据/ 集/ 的/ 增大/ 和/ 要求/ 的/ 响应/ 时间/ 的/ 缩短/ (/ 尤其/ 在/ 一些/ 应急/ 环境/ 中/ )/ ,/ 作者/ 实际上/ 对/ kNN/ 连接/ 的/ 效率/ 要求/ 更高/ ./ 然而/ ,/ 目前/ 的/ 方法/ 大多/ 基于/ 单个/ 进程/ 或者/ 单台/ 机器/ ,/ 并/ 不/ 具有/ 很/ 好/ 的/ 伸缩性/ ./ 为了/ 解决/ 这个/ 问题/ ,/ 作者/ 引入/ 了/ map/ -/ reduce/ 框架/ 来/ 运行/ kNNjoin/ 并/ 提出/ 了/ 两种/ 新/ 的/ 方法/ :/ 基于/ map/ -/ reduce/ 的/ 分布式/ 网格/ 概略/ 化/ kNNjoin/ (/ DSGMP/ -/ J/ )/ 和/ 基于/ map/ -/ reduce/ 的/ voronoidiagram/ 下/ kNNjoin/ (/ VDMP/ -/ J/ )/ ./ 并/ 把/ 它们/ 和/ 最新/ 的/ 方法/ H/ -/ BNLJ/ 进行/ 了/ 实验/ 对比/ ./ 实验/ 结果/ 证明/ 了/ 作者/ 提出/ 的/ DSGMP/ -/ J/ 和/ VDMP/ -/ J/ 方法/ 具有/ 较优/ 的/ 伸缩性/ ./ 关键词/ kNN/ 连接/ ;/ 大/ 数据/ ;/ MapReduce1/ 引言/ 对/ 很多/ 应用/ 而言/ ,/ K/ 最近/ 邻/ 连接/ (/ kNNjoin/ )/ 是/ 一个/ 非常/ 基本/ 和/ 关键/ 的/ 操作/ ./ 这些/ 应用/ 可能/ 来自/ 于/ 知识/ 发现/ ,/ 数据挖掘/ 和/ 空间/ 数据库/ 等/ ./ 近些年/ 随着/ 移动/ 应用/ 的/ 广泛/ 发展/ ,/ 相应/ 地/ ,/ kNNjoin/ 具有/ 下面/ 两个/ 趋势/ :/ 一方面/ ,/ 参与/ kNN/ 连接/ 的/ 数据/ 集/ 越来越/ 大/ ;/ 另一方面/ ,/ 需要/ kNN/ 返回/ 结果/ 的/ 响应/ 时间/ 越来越/ 短/ ./ 传统/ 地/ ,/ 很多/ K/ 最近/ 邻/ 连接/ 的/ 算法/ 是/ 在/ 单个/ 进程/ 或者/ 单台/ 机器/ 上/ 执行/ ./ 一般/ 要求/ 是/ 用/ 其中/ 一个/ 集合/ S/ 的/ 每个/ 元素/ 扫描/ 一次/ 另/ 一个/ 集合/ R/ 的/ 全部/ 元素/ ,/ 这样/ ,/ 很/ 容易/ 导致/ 计算/ 复杂度/ 为/ O/ (/ |/ S/ |/ ·/ |/ R/ |/ )/ ./ 虽然/ 这样/ 的/ 算法/ 在/ 单/ 进程/ 或者/ 单/ CPU/ 上/ 运行/ 很/ 好/ ,/ 然而/ ,/ 随着/ K/ 最近/ 邻/ 连接/ 的/ 规模/ 的/ 增大/ 和/ 要求/ 相应/ 时间/ 的/ 缩短/ ,/ 这些/ 算法/ 不能/ 很/ 好/ 的/ 伸缩/ ,/ 不能/ 满足/ 海量/ 动态数据/ 场景/ 下/ 应用/ 的/ 需求/ ./ 归根到底/ ,/ 为了/ 能够/ 快速/ 响应/ 大规模/ 的/ K/ 最近/ 邻/ 连接/ ,/ 我们/ 需要/ 一个/ 具有/ 很/ 好/ 伸缩性/ ,/ 能够/ 并行/ 的/ 集群/ 来/ 进行/ K/ 最近/ 邻/ 连接/ 的/ 计算/ ./ MapReduce/ 体系结构/ 的/ 设计/ 采用/ 了/ divide/ -/ conquer/ 的/ 方法/ ,/ 这是/ 一个/ 简单/ 但/ 功能强大/ 的/ 并行/ 和/ 分布式计算/ 架构/ ./ 同时/ ,/ MapReduce/ 充分考虑/ 到/ 可扩展性/ ./ 近年来/ ,/ MapReduce/ 得到/ 了/ 来自/ 工业界/ 和/ 学术界/ 的/ 众多/ 支持/ ./ 在/ 工业界/ ,/ Google/ 公司/ 内部/ ,/ 通过/ 大规模/ 集群/ 和/ MapReduce/ 软件/ ,/ 每天/ 有/ 超过/ 20PB/ 的/ 数据/ 得到/ 处理/ ,/ 每个/ 月/ 处理/ 的/ 数据量/ 超过/ 400PB/ ./ 在/ 数据分析/ 的/ 基础/ 上/ ,/ Google/ 提供/ 了/ 围绕/ 互联网/ 搜索/ 的/ 一系列/ 服务/ (/ 包括/ 地图/ 服务/ 、/ 定向/ 广告/ 服务/ 等/ )/ ./ 如此/ 大规模/ 的/ 在线/ 数据管理/ 和/ 分析/ ,/ 是/ 传统/ 的/ 关系/ 数据管理/ 技术/ 所/ 无法/ 完成/ 的/ ./ 与此同时/ ,/ 在/ 学术界/ ,/ 一些/ 数据库/ 相关/ 的/ 重要/ 国际/ 会议/ 上/ 近年来/ 也/ 越来越/ 多/ 的/ 出现/ 使用/ MapReduce/ 来/ 进行/ 大/ 数据处理/ 的/ 方法/ ./ MapReduce/ 已经/ 成为/ 了/ 一个/ 充满/ 生命力/ 的/ 大/ 数据处理/ 框架/ ./ 出于/ 这些/ 考虑/ ,/ 本文/ 中/ 我们/ 用/ MapReduce/ 贯穿/ 了/ 所/ 涉及/ 到/ 的/ 3/ 个/ kNN/ 连接/ 处理/ 方法/ ./ 首先/ ,/ 我们/ 介绍/ 了/ 局部/ 暴力/ 方法/ ,/ 即/ H/ -/ BNLJ/ (/ HadoopBlockNestedLoopJoin/ )/ 方法/ ,/ 并/ 把/ 它/ 作为/ 了/ 我们/ 的/ baseline/ 方法/ ./ 然而/ ,/ 由于/ 2/ 次/ 的/ MapReduce/ 和/ 过/ 多/ 的/ 传输/ 代价/ ,/ 随着/ 数据/ 集/ 规模/ 的/ 增大/ ,/ 通讯/ 代价/ 显著/ 增加/ ,/ H/ -/ BNLJ/ 的/ 伸缩性/ 并/ 不好/ ./ 然后/ ,/ 我们/ 思考/ 并/ 尝试/ 了/ 使用/ 基于/ 栅格/ 的/ 数据/ 划分/ 方式/ ,/ 同时/ 使用/ 分布式/ 栅格/ 索引/ 对/ 局部/ 数据/ 进行/ 索引/ ,/ 提出/ 了/ DSGMR/ -/ J/ (/ DistributedSketchedGridJoin/ )/ 方法/ ./ 实验/ 证明/ ,/ 这个/ 栅格/ 的/ 划分/ 方法/ 加上/ 分布式/ 索引/ 的/ 方式/ 可以/ 加速/ kNN/ 连接/ 的/ 处理过程/ ./ 但是/ ,/ 由于/ 数据/ 的/ 分布/ 可能/ 呈现出/ 除/ 均匀分布/ 外/ 的/ 多种形式/ ,/ 因此/ ,/ 栅/ 格式/ 划分/ 并/ 不能/ 保证/ kNN/ 连接/ 结果/ 的/ 局部性/ ./ 换句话说/ ,/ 在/ 大多数/ 情况/ 下/ ,/ 我们/ 仍然/ 需要/ 2/ 次/ 的/ MapReduce/ 才能/ 得到/ kNN/ 的/ 结果/ ./ 最后/ ,/ 我们/ 设计/ 了/ 一种/ 基于/ VoronoiDiagram/ 的/ 数据/ 划分/ 方式/ ,/ 在/ 此/ 划分/ 基础/ 上/ ,/ 我们/ 证明/ 了/ 合适/ 的/ 参数/ 选择/ 可以/ 提供/ 一个/ 很/ 好/ 的/ 近似/ kNN/ 连接/ 结果/ ./ 从而/ ,/ 通过/ 1/ 次/ MapReduce/ 可以/ 得到/ kNN/ 近似/ 连接/ 结果/ ./ 在/ 第/ 2/ 节/ ,/ 我们/ 形式化/ 定义/ 了/ 本文/ 要/ 解决/ 的/ 问题/ kNNJoin/ ;/ 第/ 3/ 节/ ,/ 我们/ 介绍/ 本文/ 所/ 涉及/ 到/ 的/ 相关/ 技术/ ;/ 第/ 4/ 节/ 详细/ 给出/ 我们/ 为了/ 解决/ 快速/ 大规模/ kNN/ 连接/ 所/ 采用/ 的/ 3/ 个/ 方法/ ;/ 这/ 3/ 个/ 方法/ 的/ 对比/ 分析/ 在/ 第/ 5/ 节/ 通过/ 实验/ 结果/ 进行/ 展示/ ;/ 最后/ ,/ 我们/ 在/ 第/ 6/ 节/ 总结/ 全文/ ./ 2/ 问题/ 定义/ 形式化/ 地/ ,/ 设/ 两个/ 定义/ 在/ / S/ ./ 这/ 两个/ 集合/ 中/ 的/ 每个/ 记录/ / r/ ∈/ R/ (/ / s/ ∈/ S/ )/ 都/ 是/ 一个/ d/ 维空间/ 的/ 点/ ./ 本文/ 中/ ,/ 为了/ 简单/ 起见/ 并/ 不失/ 一般性/ ,/ 我们/ 考察/ d/ =/ 2/ 的/ 情况/ ;/ 同时/ ,/ 两个/ 点/ 之间/ 的/ 距离/ 使用/ 它们/ 的/ 欧式/ 距离/ 来/ 表示/ d/ (/ r/ ,/ s/ )/ ./ 这样/ knn/ (/ r/ ,/ S/ )/ 返回/ k/ 个/ 属于/ S/ 集合/ 的/ 最近/ 邻/ r/ 的/ 点/ ./ 我们/ 定义/ knnJ/ (/ R/ ,/ S/ )/ 为/ R/ 和/ S/ 的/ 连接/ :/ knnJ/ (/ R/ ,/ S/ )/ =/ {/ (/ r/ ,/ knn/ (/ r/ ,/ S/ )/ )/ |/ forallr/ ∈/ R/ }/ ./ 3/ 相关/ 技术/ 介绍/ 3.1/ MapReduce/ 作为/ 一种/ 广受/ 关注/ 和/ 欢迎/ 的/ 编程/ 模型/ ,/ Map/ -/ Reduce/ 已经/ 被/ 成功/ 地用/ 在/ 众多/ 大/ 数据/ 集/ 的/ 并行处理/ 程序/ 中/ [/ 1/ -/ 6/ ]/ ./ 这些/ 并行程序/ 甚至/ 可以/ 很/ 好/ 地/ 扩展/ 到/ 上千/ 台/ 普通/ 机器/ 上/ ./ Hadoop/ 是/ 一个/ 流行/ 的/ 开源/ MapReduce/ 实现/ ./ 它/ 运行/ 在/ Hadoop/ 文件系统/ (/ HDFS/ )/ :/ 一种/ 分布式/ 的/ 存储系统/ 之上/ ./ 在/ HDFS/ 中/ ,/ 一个/ 大/ 文件/ 被/ 拆/ 分成/ 很多/ 大小/ 固定/ 的/ 块/ (/ 不能/ 整除/ 的/ 情况/ 下会/ 有/ 一块/ 碎片/ )/ 并/ 在/ 计算机/ 之间/ 进行/ 分配/ ./ 而/ MapReduce/ 是/ 一种/ 可以/ 直接/ 对/ 这些/ 文件/ 进行/ 操作/ 的/ 框架/ ./ 一般/ 地/ ,/ MapReduce/ 包含/ 两个/ 由/ 用户/ 自定义/ 的/ 函数/ ,/ 即/ map/ 函数/ 和/ reduce/ 函数/ ./ Map/ 函数/ 用于/ 把/ 输入/ 分块/ 对应/ 地/ 转化/ 为/ 中间/ 结果/ ,/ 而/ Page3reduce/ 函数/ 用于/ 把/ 中间/ 结果/ 进行/ 提取/ ,/ 并/ 进行/ 归纳/ 合并/ 计算/ 得到/ 最终/ 的/ 结果/ ./ MapReduce/ 技术/ 是/ 一种/ 简洁/ 的/ 并行计算/ 模型/ ,/ 它/ 在/ 系统/ 层面/ 解决/ 了/ 扩展性/ 、/ 容错性/ 等/ 问题/ ,/ 通过/ 接受/ 用户/ 编写/ 的/ Map/ 函数/ 和/ Reduce/ 函数/ ,/ 自动/ 地/ 在/ 可/ 伸缩/ 的/ 大规模/ 集群/ 上/ 并行执行/ ,/ 从而/ 可以/ 处理/ 和/ 分析/ 大规模/ 的/ 数据/ ./ 形式化/ 地/ ,/ 3.2/ DSTR/ -/ Tree/ 从/ 抽象/ 模型/ 的/ 角度/ 来看/ ,/ 移动/ 对象/ 的/ 时空/ 轨迹/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 的/ 一条/ 曲线/ ./ 在/ 移动/ 对象/ 数据库/ 中/ 往往/ 需要/ 对/ 轨迹/ 曲线/ 进行/ 离散/ 化/ 才能/ 进行/ 进一步/ 操作/ 和/ 处理/ ./ 网络/ 受限/ 移动/ 对象/ 的/ 动态/ 概略/ 化/ 轨迹/ R/ 树/ 索引/ (/ DynamicSketched/ -/ TrajectoryR/ -/ TreeforNetworkconstrainedMovingObjects/ ,/ DSTR/ -/ Tree/ )/ 就是/ 一种/ 采用/ 概率/ 化/ 方法/ 对/ 空间/ 轨迹/ 进行/ 处理/ 的/ 灵活/ 方法/ ./ 这里/ ,/ 设/ 移动/ 对象/ 的/ 时空/ 轨迹/ 对应/ 于/ 时空/ 空间/ Ix/ ×/ Iy/ ×/ It/ ,/ 其中/ ,/ Ix/ =/ [/ x0/ ,/ x1/ ]/ ,/ Iy/ =/ [/ y0/ ,/ y1/ ]/ ,/ 并且/ It/ =/ [/ t0/ ,/ T/ ]/ (/ T/ 代表/ 不断/ 增长/ 的/ 时间/ )/ ./ DSTR/ -/ Tree/ 将/ 此/ 三维空间/ 的/ 投影/ 空间/ Ix/ ×/ Iy/ 栅格/ 化为/ n/ ×/ m/ 个/ 栅格/ ,/ 其中/ ζ/ x/ =/ x1/ -/ x0n/ ,/ ζ/ y/ =/ y1/ -/ y0m/ ./ 由于/ It/ 的/ 不断/ 增长/ ,/ 它/ 被/ 划分/ 为/ 等/ 间距/ Δ/ t/ 的/ 时间段/ ,/ ζ/ t/ =/ Δ/ t/ ./ DSTR/ -/ Tree/ 是/ 一个/ 非常灵活/ 的/ 移动/ 对象/ 轨迹/ 索引/ ./ 它/ 的/ 灵活性/ 体现/ 在/ 两个/ 方面/ :/ (/ 1/ )/ 它/ 在/ Ix/ ×/ Iy/ 的/ 投影/ 为/ 栅格/ ,/ 而/ 栅格/ 被/ 认为/ 是/ 一种/ 非常/ 高效/ 的/ 二维/ 空间/ 索引/ 结构/ ,/ 并/ 被/ 经常/ 应用/ 于/ 各种/ 实际/ 应用/ 中/ ;/ (/ 2/ )/ 它/ 的/ 概率/ 化/ 算法/ 可以/ 有效/ 地/ 把/ 空间/ 轨迹/ 转化成/ 栅格/ 内/ 的/ 线段/ 集合/ ,/ 避免/ 了/ 路网/ 匹配/ 中/ 不能/ 把/ 轨迹/ 匹配/ 到/ 路上/ 的/ 个别情况/ ,/ 从而/ 快速/ 进行/ 处理/ 一些/ 查询/ (/ 如/ 最近/ 邻/ 查询/ )/ ./ 3.3/ 沃罗诺/ 伊图/ 沃罗诺/ 伊图/ (/ VoronoiDiagram/ ,/ 也/ 称作/ Dirichlettessellation/ ,/ 狄利克/ 雷/ 镶嵌/ )/ 是/ 由/ 俄国/ 数学家/ GeorgyFedoseevichVoronoi/ 建立/ 的/ 空间/ 分割/ 算法/ ./ 最初/ 来源于/ 笛卡尔/ 用/ 凸域/ 分割/ 空间/ 的/ 思想/ ./ Voronoi/ 图是/ 根据/ 目标/ 的/ 最/ 邻近/ 原则/ 而/ 对/ 空间/ 目标/ 所在/ 的/ 整个/ 空间/ 的/ 一种/ 剖分/ ,/ 其中/ 的/ 每/ 一个/ 目标/ 均/ 与其/ 最近/ 的/ 邻近/ 区域/ 即/ Voronoi/ 区域/ 相连/ ./ 通常/ 地/ ,/ 一个点/ 目标/ 的/ Voronoi/ 区域/ 可以/ 定义/ 为/ 由/ 距/ 该点/ 目标/ 比/ 其他/ 所有/ 目标/ 距离/ 近/ 的/ 目标/ 构成/ :/ i/ =/ {/ x/ |/ d/ (/ x/ ,/ pi/ )/ / d/ (/ x/ ,/ pj/ )/ ,/ pi/ ,/ pj/ ∈/ P/ ,/ i/ ≠/ j/ }/ ,/ pv/ 其中/ ,/ pv/ 集/ ,/ x/ 为/ 空间/ 中/ 任意/ 一点/ ,/ d/ 为/ 距离/ 函数/ ./ 对/ 组成/ Voronoi/ 图/ 的/ 每/ 一个/ Voronoi/ 区域/ 而言/ ,/ 它/ 不仅/ 获取/ 了/ 考察点/ 的/ 空间/ 邻域/ ,/ 反映/ 了/ 它/ 与/ 周围/ 考察点/ 的/ 空间/ 关系/ ,/ 而且/ Voronoi/ 区域/ 对于/ 不同/ 的/ 空间/ 关系/ 是/ 敏感/ 的/ ,/ 因此/ 相应/ 地/ ,/ 有限/ 的/ Voronoi/ 内部/ 区域/ 起到/ 了/ 一个/ 无限/ 的/ 外部/ 区域/ 的/ 类似/ 作用/ ,/ 而/ Voronoi/ 的/ 范围/ 却/ 比/ 目标/ 的/ 补/ 空间/ 大大/ 缩小/ ,/ 易于/ 我们/ 的/ kNN/ 连接/ 操作/ ./ 4/ 快速/ 犽/ NNJoin4/ ./ 1Baseline/ :/ H/ -/ BNLJ/ 文献/ [/ 7/ ]/ 提出/ 了/ 一种/ H/ -/ BNLJ/ (/ HadoopBlockNestedLoopJoin/ )/ 的/ 方法/ ,/ 如图/ 1/ 所示/ ./ 本文/ 把/ 它/ 作为/ 我们/ 的/ 基准/ 对比/ 方法/ ./ 这里/ ,/ H/ -/ BNLJ/ 是/ 一种/ 直接/ 的/ 局部/ 暴力/ 解决/ kNN/ 连接/ 的/ 算法/ ,/ 它/ 利用/ 了/ MapReduce/ 的/ 嵌套循环/ 算法/ ./ 基本/ 思想/ 是/ 把/ 待/ 连接/ 的/ 两个/ 集合/ R/ 和/ S/ 分割/ 成/ 大小/ 相等/ 的/ n/ 块/ ,/ 这里/ 可以/ 通过/ 线性/ 扫描/ 的/ 方法/ 来/ 进行/ ,/ 每个/ 块/ 中/ 分别/ 含有/ |/ R/ |/ n/ (/ 或/ |/ S/ |/ 块/ 包含/ 一个/ 来自/ 于/ R/ 的/ 分割/ 块/ 和/ 一个/ 来自/ S/ 的/ 分割/ Page4/ 块/ (/ 也/ 就是/ 总共/ 有/ n2/ 个/ 连接/ 块/ )/ ./ 在/ Reduce/ 阶段/ ,/ 采用/ 了/ n2/ 个/ reducer/ 来/ 处理/ 每个/ mapper/ 生成/ 的/ 中间/ 结果/ ./ 每个/ reducer/ 在/ 本地/ 嵌套/ 执行/ 局部/ R/ 和/ S/ 的/ kNN/ 连接/ ,/ 也/ 就是/ 对/ 每个/ 局部/ 块/ 中/ 的/ S/ 通过/ 嵌套循环/ 找到/ 在/ 局部/ 块/ 中/ R/ 的/ kNN/ ./ 所有/ 来自/ reducer/ 的/ 结果/ 写入/ (/ n2/ )/ DFS/ 文件/ 中/ ./ 然而/ ,/ 注意/ 到/ 在/ 上面/ 的/ MapReduce/ 过程/ 中/ ,/ 每个/ 记录/ r/ ∈/ R/ 出现/ 在/ 一个/ |/ R/ |/ n/ 个/ 与/ 它/ 相连接/ 的/ 连接/ 块/ 中/ (/ 与/ 每个/ 来自/ |/ S/ |/ 个/ 连接/ 块/ )/ ./ 在/ reduce/ 阶段/ ,/ 只有/ 本地/ 的/ kNN/ 被/ 发现/ 出来/ ./ 因此/ ,/ 为了/ 得到/ 全局/ 的/ kNN/ 连接/ 结果/ ,/ 还/ 需要/ 对/ 每个/ r/ ∈/ R/ 通过/ 第/ 1/ 次/ MapReduce/ 所/ 产生/ 的/ n/ ×/ k/ 个/ 候选/ 结果/ 进行/ 筛选/ ./ 也/ 就是/ 要求/ 对/ 形如/ (/ rid/ ,/ sid/ ,/ d/ (/ rid/ ,/ sid/ )/ )/ 的/ 元组/ 进行/ 排序/ ,/ 其中/ ,/ rid/ 为/ r/ ∈/ R/ 中/ r/ 的/ id/ ,/ sid/ 为/ s/ ∈/ S/ 中/ s/ 的/ id/ ,/ d/ (/ rid/ ,/ sid/ )/ 为/ r/ 和/ s/ 的/ 距离/ ./ 这样/ ,/ 第/ 2/ 次/ MapReduce/ 在/ map/ 阶段/ ,/ 需要/ 把/ 第一次/ MapReduce/ 的/ 结果/ 按照/ rid/ 作为/ 划分/ 划分/ 主键/ (/ partitioningkey/ )/ ./ 同时/ ,/ 第/ 2/ 次/ MapReduce/ 的/ reducer/ 遍历/ (/ rid/ ,/ list/ (/ sid/ ,/ d/ (/ r/ ,/ s/ )/ )/ )/ ,/ 对/ 其中/ 的/ list/ (/ sid/ ,/ d/ (/ r/ ,/ s/ )/ )/ 进行/ 按照/ d/ (/ r/ ,/ s/ )/ 的/ 升序/ 排序/ ,/ 然后/ 为/ 每个/ rid/ 得出/ top/ -/ k/ 的/ 结果/ ./ 4.2/ DSGMR/ -/ JH/ -/ BNLJ/ 本质/ 上/ 作为/ 一种/ 暴力/ 解法/ ,/ 虽然/ 使用/ 了/ 两次/ MapReduce/ ,/ 但/ 并/ 不是/ 一种/ 高效/ 的/ 方法/ ./ 首先/ ,/ 它/ 划分/ 的/ 依据/ 是/ 线性/ 扫描/ ,/ 如果/ 原本/ 的/ R/ 和/ S/ 并/ 没有/ 排序/ (/ 二维/ 的/ 排序/ 诸如/ Z/ -/ Value/ 等/ )/ ,/ 那么/ 由于/ 不能/ 保证/ R/ 中/ 元素/ 的/ 全局/ kNN/ 结果/ 和/ 它/ 被/ 分配/ 到/ n2/ 个/ 连接/ 块/ 中/ 的/ 某/ 一个/ (/ 对称/ 地/ ,/ 对/ S/ 也/ 一样/ )/ ,/ 它/ 在/ 第一步/ MapReduce/ 得到/ 的/ 结果/ 可能/ 和/ 最后/ 的/ kNN/ 连接/ 结果/ 偏离/ 很大/ ./ 其次/ ,/ 由于/ 没有/ 采取/ 索引/ 的/ 方法/ ,/ 将会/ 导致/ 在/ R/ 或者/ S/ 很大/ 的/ 时候/ ,/ H/ -/ BNLJ/ 不能/ 有效/ 地/ 从/ 外存/ (/ DFS/ )/ 数据/ 加载/ 内存/ 中/ ./ 通常/ 来说/ ,/ 索引/ 的/ 本质/ 是/ 排序/ 和/ 内容摘要/ ./ 为了/ 弥补/ H/ -/ BNLJ/ 的/ 不足/ ,/ 我们/ 引入/ 分布式/ 概略/ 化/ 网格/ 索引/ (/ DistributedSketchedGrid/ ,/ DSG/ )/ 来/ 对/ 数据/ 进行/ 划分/ 和/ 索引/ ,/ DSG/ 是/ DSTR/ -/ Tree/ [/ 8/ ]/ 的/ 变种/ ./ DSTR/ -/ Tree/ 原本/ 是/ 一种/ 用于/ 移动/ 对象/ 轨迹/ 概略/ 化/ 索引/ 的/ 树形/ 结构/ ,/ 在/ 本文/ 中/ ,/ 我们/ 使用/ 它/ 来/ 进行/ 空间/ 区域/ 的/ 划分/ 和子/ 区域/ 数据/ 的/ 索引/ ./ 采用/ DSG/ 而/ 不是/ 简单/ 基于/ 简单/ 栅格/ 的/ 索引/ 的/ 原因/ 在于/ 两个/ 方面/ ./ 一方面/ ,/ DSTR/ -/ Tree/ [/ 8/ -/ 10/ ]/ 很/ 容易/ 将/ 我们/ 的/ 方法/ 扩展/ 到/ 路网/ 空间/ 进行/ kNN/ 连接/ ./ 另一方面/ ,/ DSTR/ -/ Tree/ 很/ 容易/ 将/ 我们/ 的/ 应用/ 范围/ 扩展/ 到/ 移动/ 对象/ (/ MovingObject/ )/ 的/ 连续/ kNN/ 查询/ ./ 这是/ 我们/ 的/ 下/ 一步/ 工作/ ,/ 超出/ 了/ 本文/ 的/ 内容/ ,/ 但是/ 本文/ 仍/ 将/ 采用/ DSG/ 来/ 进行/ 索引/ ./ 为了/ 对/ 数据/ 集/ R/ 和/ S/ 进行/ 划分/ ,/ 首先/ 需要/ 对/ R/ 和/ S/ 所在/ 空间/ 范围/ 进行/ 栅格/ 化/ 划分/ ./ 设/ R/ 所在/ 的/ 空间/ 区间/ 为/ [/ Rxmin/ ,/ Rxmax/ ]/ ×/ [/ Rymin/ ,/ Rymax/ ]/ ,/ S/ 所在/ 的/ 空间/ 区域/ 为/ [/ Sxmin/ ,/ Sxmax/ ]/ ×/ [/ Symin/ ,/ Symax/ ]/ ./ 在/ 进行/ 栅/ 格化处理/ 时/ ,/ 将/ 相应/ 地/ 需要/ 对/ 空间/ [/ min/ (/ Rxmin/ ,/ Sxmin/ )/ ,/ max/ (/ Rxmax/ ,/ Sxmax/ )/ ]/ ×/ [/ min/ (/ Rymin/ ,/ Symin/ )/ ,/ max/ (/ Rymax/ ,/ Symax/ )/ ]/ 进行/ 等/ 大小/ m/ ×/ m/ 划分/ ,/ 如图/ 2/ 所示/ ./ 算法/ 1/ ./ DSG/ 划分/ (/ DSGpartition/ )/ ./ 输入/ :/ R/ ,/ S/ ,/ m/ 输出/ :/ DSG/ 索引/ 及/ 相应/ 数据/ 块/ 1/ ./ xmax/ =/ Rxmax/ >/ Sxmax/ ?/ Rxmax/ :/ Sxmax2/ ./ xmin/ =/ Rxmin/ </ Sxmin/ ?/ Rxmin/ :/ Sxmin3/ ./ ymax/ =/ Rymax/ >/ Symax/ ?/ Rymax/ :/ Symax4/ ./ xmax/ =/ Rxmax/ >/ Sxmax/ ?/ Rxmax/ :/ Sxmax5/ ./ ζ/ x/ =/ xmax/ -/ xminm6/ ./ ζ/ y/ =/ ymax/ -/ yminm7/ ./ Intervali/ =/ [/ xmin/ +/ ζ/ x/ (/ i/ -/ 1/ )/ ,/ xmin/ +/ ζ/ x/ ×/ i/ ]/ ×/ 8/ ./ distributethecorrespondingdataandindex/ 算法/ 1/ 描述/ 了/ 根据/ R/ ,/ S/ 的/ 变化/ 范围/ 生成/ 的/ m2/ 个/ 栅格/ 的/ 过程/ ./ 其中/ 每个/ 栅格/ 的/ x/ 和/ y/ 变化/ 范围/ 为/ intervalx/ 和/ intervaly/ ./ 每个/ R/ 或/ S/ 中/ 的/ 元素/ 根据/ 它/ 的/ x/ 和/ y/ 坐标/ 确定/ 所属/ 的/ 栅格/ ./ 对/ 每个/ 栅格/ 而言/ ,/ 我们/ 分布/ 地/ 构建/ 了/ 对应/ 于/ 此/ 栅格/ 的/ 分布式/ 索引/ DSG/ ./ 这样/ ,/ 每个/ reducer/ 可以/ 快速/ 地/ 通过/ 本地/ DSG/ 索引/ 来/ 发现/ 本地/ kNN/ 从而/ 避免/ 了/ 嵌套循环/ ./ 这里/ ,/ 使用/ 本地/ DSG/ 索引/ 来/ 发现/ 本地/ kNN/ 是/ 一个/ filter/ -/ refine/ 的/ 过程/ ./ 显然/ 地/ ,/ 如果/ 当前/ 栅格/ 中/ 的/ 元素/ RDSG/ (/ i/ )/ / k/ 或者/ SDSG/ (/ i/ )/ / k/ (/ 我们/ 总是/ 栅格/ 化/ 含有/ 元素/ 较/ 多/ 的/ 那个/ 集合/ )/ ,/ 并且/ 查询/ 点/ 位于/ 栅格/ 的/ 中央/ 附近/ 的/ 时候/ (/ 即/ x/ -/ xmin/ +/ ζ/ x/ ×/ i/ -/ ζ/ xPage5/ 并且/ y/ -/ ymin/ +/ ζ/ y/ ×/ i/ -/ ζ/ yRDSG/ (/ i/ )/ 或者/ SDSG/ (/ i/ )/ 均/ 分别/ 为/ 对方/ 的/ kNN/ ./ 当且/ 仅/ 当/ RDSG/ (/ i/ )/ </ k/ 或者/ SDSG/ (/ i/ )/ </ k/ 时候/ ,/ 在/ 本地/ 的/ kNN/ 才/ 无法/ 发现/ 所有/ 的/ k/ 个/ 元素/ ,/ 从而/ 需要/ 进行/ 扩展/ ./ 这里/ ,/ 我们/ 定义/ x/ -/ xmin/ +/ ζ/ x/ ×/ i/ -/ ζ/ x/ 且/ y/ -/ ymin/ +/ ζ/ y/ ×/ i/ -/ ζ/ y/ 邻域/ ,/ 其中/ i/ 为/ 栅格/ 的/ 编号/ ./ 当点/ 不/ 在/ gridi/ (/ δ/ )/ 邻域/ 的/ 时候/ ,/ 我们/ 这里/ 需要/ 对/ 当前/ 栅格/ 进行/ 扩展/ ./ 我们/ 的/ 扩展/ 方式/ 有/ 4/ 种/ :/ 左/ 上/ 扩展/ ,/ 左/ 下/ 扩展/ ,/ 右/ 上/ 扩展/ 和/ 右/ 下/ 扩展/ ./ 具体/ 地/ ,/ 当/ x/ -/ xmin/ +/ ζ/ x/ ×/ i/ -/ ζ/ x/ (/ y/ -/ ymin/ +/ ζ/ y/ ×/ i/ -/ ζ/ y/ 合并/ 原有/ 栅格/ 和/ 相邻/ 左/ 上/ ,/ 上/ 和/ 左边/ 的/ 栅格/ 形成/ 一个/ 新/ 的/ 栅格/ ;/ 当/ x/ -/ xmin/ +/ ζ/ x/ ×/ i/ -/ ζ/ x/ (/ y/ -/ ymin/ +/ ζ/ y/ ×/ i/ -/ ζ/ y/ 合并/ 原有/ 栅格/ 和/ 相邻/ 右/ 上/ ,/ 上/ 和/ 右边/ 的/ 栅格/ 形成/ 一个/ 新/ 的/ 栅格/ ;/ 当/ x/ -/ xmin/ +/ ζ/ x/ ×/ i/ -/ ζ/ x/ (/ y/ -/ ymin/ +/ ζ/ y/ ×/ i/ -/ ζ/ y/ 展/ ,/ 合并/ 原有/ 栅格/ 和/ 相邻/ 右/ 上/ ,/ 上/ 和/ 右边/ 的/ 栅格/ 形成/ 一个/ 新/ 的/ 栅格/ ;/ 当/ x/ -/ xmin/ +/ ζ/ x/ ×/ i/ -/ ζ/ x/ (/ y/ -/ ymin/ +/ ζ/ y/ ×/ i/ -/ ζ/ y/ 展/ ,/ 合并/ 原有/ 栅格/ 和/ 相邻/ 右/ 上/ ,/ 上/ 和/ 右边/ 的/ 栅格/ 形成/ 一个/ 新/ 的/ 栅格/ ./ 定理/ 1/ ./ 当/ δ/ >/ max/ ζ/ y4/ ,/ ζ/ x/ (/ )/ 4/ 时候/ ,/ 根据/ 当前/ 点/ 的/ 坐标/ ,/ 我们/ 可以/ 通过/ 一次/ 相应/ 的/ 扩展/ 调整/ 后/ 得到/ ,/ (/ x/ ,/ y/ )/ ∈/ gridi/ (/ δ/ )/ ./ 证明/ ./ 以/ 左上/ 扩展/ 为例/ ,/ 我们/ 有/ x/ -/ xmin/ +/ ζ/ x/ ×/ i/ -/ ζ/ x/ 即/ x/ -/ xmin/ -/ ζ/ x/ ×/ i/ +/ ζ/ x2/ </ -/ δ/ ,/ 也/ 就是/ x/ -/ xmin/ -/ ζ/ x/ ×/ i/ +/ ζ/ x2/ +/ 2/ δ/ </ δ/ ,/ 因为/ δ/ >/ max/ ζ/ y4/ ,/ ζ/ x/ (/ )/ 4/ ,/ 所以/ x/ -/ (/ xmin/ +/ ζ/ x/ ×/ (/ i/ -/ 1/ )/ )/ </ x/ -/ xmin/ -/ ζ/ x/ ×/ i/ +/ ζ/ x2/ +/ 2/ δ/ </ δ/ ,/ 得到/ |/ x/ -/ (/ xmin/ +/ ζ/ x/ ×/ (/ i/ -/ 1/ )/ )/ |/ </ δ/ ,/ 同样/ 地/ ,/ |/ y/ -/ (/ ymin/ +/ ζ/ y/ ×/ (/ i/ +/ 1/ )/ )/ |/ </ δ/ ./ 综上/ ,/ 当/ δ/ >/ max/ ζ/ y4/ ,/ ζ/ x/ (/ )/ 4/ 时候/ ,/ 通过/ 左/ 上/ 扩展/ 将/ 得到/ (/ x/ ,/ y/ )/ ∈/ gridi/ (/ δ/ )/ ./ 同法/ ,/ 其余/ 3/ 种/ 扩展/ 也/ 可以/ 证明/ ./ 证毕/ ./ 然而/ ,/ 即使/ 在/ 扩展/ 后/ 可能/ 仍然/ 无法/ 得到/ 全部/ 的/ kNN/ 结果/ 集/ ,/ 这时/ 我们/ 仍然/ 需要/ 两遍/ MapReduce/ 过程/ 来/ 进行/ kNN/ 连接/ 的/ 结果/ 计算/ ,/ 但是/ 这里/ 的/ kNN/ 连接/ 的/ 集合/ 为/ R/ ,/ 其中/ R/ 为/ 已经/ 完成/ kNN/ 连接/ 的/ 属于/ 集合/ R/ 的/ 子集/ ,/ R/ 为/ R/ 的/ 补集/ (/ 这里/ 设/ |/ R/ |/ </ |/ S/ |/ )/ ./ 我们/ 注意/ 到/ 在/ 不/ 预先/ 知道/ 数据/ 集/ R/ 和/ S/ 的/ 数据分布/ 的/ 情况/ 下/ ,/ 在/ 某/ 一个/ m/ ×/ m/ 子/ 区域/ mi/ 内/ 的/ R/ 和/ S/ 的/ 数据/ 可能/ 很多/ ,/ 然而/ 在/ 另外/ 一个/ 子/ 区域/ mj/ 的/ 数据/ 可能/ 很少/ ,/ 即/ mi/ / mj/ ./ 这种/ 不/ 均衡/ 的/ 情况/ 会/ 大大/ 影响/ 我们/ 的/ 两/ 阶段/ MapReduce/ 过程/ ./ 由于/ 存在/ 平凡/ 的/ 划分/ mj/ ,/ 第一次/ MapReduce/ 中/ map/ 的/ 结果/ 将会/ 有/ 很多/ 空值/ ./ 换句话说/ ,/ 极端/ 的/ 情况/ 下/ ,/ 由于/ R/ 和/ S/ 的/ 数据分布/ 为/ / r/ ∈/ R/ ,/ r/ / grid/ (/ i/ )/ ,/ DSGMP/ -/ J/ 将会/ 退化/ 成/ H/ -/ BNLJ/ ./ 4.3/ VDMR/ -/ J/ 对应/ 我们/ 的/ kNNJoin/ 而言/ ,/ DSGMP/ -/ J/ 的/ 不足之处/ 在于/ ,/ 它/ 均匀/ 地/ 划分/ 了/ 空间/ 区域/ ./ 换句话说/ ,/ 在/ (/ XYT/ )/ 的/ 投影/ 空间/ (/ XY/ )/ 上/ ,/ DSGMP/ -/ J/ 并/ 没有/ 考虑/ R/ 或者/ S/ 的/ 原始/ 分布/ 情况/ ./ 由于/ VoronoiDiagram/ [/ 11/ -/ 12/ ]/ 充分考虑/ 了/ 空间/ 的/ 相互/ 位置/ 关系/ ,/ 基于/ VoronoiDiagram/ ,/ 对于/ kNNPage6Join/ 问题/ ,/ 我们/ 可以/ 通过/ 单遍/ MapReduce/ 来/ 近似/ 完成/ ./ 我们/ 把/ 方法/ 命名/ 为/ VDMR/ -/ J/ (/ VoronoiDiagrambasedkNNJoinusingMapReduce/ )/ ./ 为了/ 说明/ 我们/ 的/ 近似/ 方法/ ,/ 我们/ 需要/ 证明/ 下面/ 的/ 两个/ 定理/ 及/ 两个/ 相关/ 推论/ ./ 定理/ 2/ ./ 凸多边形/ 外/ 的/ 点/ 到/ 该/ 凸多边形/ 各/ 顶点/ 的/ 距离/ 之/ 和/ 大于/ 凸多边形/ 内/ (/ 上/ )/ 的/ 点/ 到/ 该/ 凸多边形/ 各/ 顶点/ 的/ 距离/ 之/ 和/ ./ 证明/ ./ 不失/ 一般性/ ,/ 设/ q1/ ,/ …/ ,/ qn/ 是/ 凸多边形/ V/ 的/ n/ 个/ 顶点/ ,/ d/ (/ r/ ,/ V/ )/ 表示/ 点/ r/ 到/ 凸多边形/ V/ 的/ 各个/ 顶点/ 的/ 距离/ 之/ 和/ ,/ 且/ d/ (/ r/ ,/ V/ )/ =/ ∑/ nV/ 外/ 一点/ ,/ 我们/ 可以/ 分/ 两种/ 情况/ 进行/ 讨论/ :/ (/ 1/ )/ 如果/ p/ 在/ V/ 的/ 某/ 一条/ 边旁/ ./ 设/ p/ 在/ 边/ qiqj/ (/ i/ ≠/ j/ )/ 旁/ ,/ d/ (/ p/ ,/ V/ )/ =/ |/ pq1/ |/ +/ …/ +/ |/ pqn/ |/ ./ 则/ 在/ 凸多边形/ V/ 内/ ,/ 必然/ 存在/ 一点/ p/ ,/ 有/ |/ pq1/ |/ </ |/ pq1/ |/ ,/ …/ ,/ |/ pqn/ |/ </ |/ pqn/ |/ ,/ 使得/ d/ (/ p/ ,/ V/ )/ =/ |/ pq1/ |/ +/ …/ +/ |/ pqn/ |/ </ d/ (/ p/ ,/ V/ )/ ./ (/ 2/ )/ 如果/ p/ 在/ V/ 的/ 某/ 一个/ 顶点/ 旁/ ./ 设/ p/ 在/ 边/ qi/ 旁/ ,/ 则/ 有/ |/ qiq1/ |/ </ |/ pq1/ |/ ,/ …/ ,/ |/ qiqn/ |/ </ |/ pqn/ |/ ./ 使得/ d/ (/ qi/ ,/ V/ )/ =/ |/ qiq1/ |/ +/ …/ +/ |/ qiqn/ |/ </ d/ (/ p/ ,/ V/ )/ ./ i/ =/ 1/ 综上/ 可知/ 命题/ 正确/ ./ 推论/ 1/ ./ 设/ kNNJoin/ 的/ 两个/ 点集/ 分别/ 为/ R/ =/ {/ r1/ ,/ r2/ ,/ …/ ,/ rm/ }/ 和/ S/ =/ {/ s1/ ,/ s2/ ,/ …/ ,/ sm/ }/ ,/ 其中/ R/ 的/ 凸壳/ 边界/ 为/ 凸多边形/ CR/ (/ 相应/ 地/ ,/ S/ 的/ 为/ CS/ )/ ,/ 其/ 顶点/ 分别/ 为/ R/ 和/ S/ 中/ 的/ 点/ ,/ 同时/ ,/ 记/ S/ 所在/ 的/ Voronoi/ 图记/ 作/ ∪/ ni/ =/ 1VDi/ (/ S/ )/ (/ 设/ |/ R/ |/ </ |/ S/ |/ )/ ,/ 则/ 对/ Rj/ 所/ 对/ 在/ 的/ VDi/ (/ S/ )/ ,/ 我们/ 有/ Rj/ 到/ VDi/ (/ S/ )/ 各/ 顶点/ 距离/ 之/ 和/ 小于/ 任何/ Rj/ 到/ VDi/ (/ S/ )/ 各/ 顶点/ 距离/ 之/ 和/ ./ 的/ 凸多边形/ 一一对应/ ./ 证明/ ./ VDi/ (/ S/ )/ 和/ 以/ 当前/ VDi/ (/ S/ )/ 的/ 点/ 为/ 定点/ 由于/ Rj/ 在/ VDi/ (/ S/ )/ 内部/ ,/ 由/ 定理/ 2/ 可知/ ,/ Rj/ 到/ VDi/ (/ S/ )/ 各/ 顶点/ 距离/ 之/ 和/ 小于/ 任何/ Rj/ 到/ VDi/ (/ S/ )/ 各/ 顶点/ 距离/ 之/ 和/ ./ 定理/ 3/ ./ 设/ 集合/ S/ =/ {/ S1/ ,/ S2/ ,/ …/ ,/ SN/ }/ / S/ ,/ 而且/ kNN/ (/ Rj/ )/ / S/ ,/ 我们/ 从/ 这些/ 点中/ 按照/ 一定/ 的/ 概率/ p/ =/ 1/ ε/ 2N/ 随机/ 均匀/ 抽样/ N/ ^/ 次/ ,/ 这样/ 我们/ 可以/ 得到/ 集合/ S/ ^/ =/ {/ S/ ^/ 1/ ,/ S/ ^/ 2/ ,/ …/ ,/ S/ ^/ N/ ^/ }/ (/ 其中/ ε/ ∈/ [/ 0/ ,/ 1/ ]/ )/ ./ 定义/ r/ (/ N/ ,/ ψ/ )/ =/ ∑/ N/ 足/ di/ </ ψ/ ./ 定义/ s/ (/ N/ ^/ ,/ ψ/ )/ =/ ∑/ N/ ^/ 应地/ ,/ [/ di/ </ ψ/ ]/ =/ 1/ ,/ 如果/ 满足/ di/ </ ψ/ ./ 那么/ ,/ r/ ^/ (/ N/ ^/ ,/ ψ/ )/ =/ 1ps/ (/ N/ ^/ ,/ ψ/ )/ 是/ r/ (/ N/ ,/ ψ/ )/ 的/ 无偏/ 估计/ ,/ 且/ 标准差/ sd/ / ε/ N/ ,/ / ε/ ∈/ [/ 0/ ,/ 1/ ]/ ./ 证明/ ./ 首先/ ,/ S/ 的/ 存在/ 性/ ,/ 我们/ 通过/ 构造/ 的/ 方法/ 可以/ 获得/ ./ 由/ 定理/ 2/ 和/ 推理/ 2.1/ 我们/ 可以/ 知道/ ,/ 通过/ 扩展/ Rj/ 所在/ 的/ VD/ (/ S/ )/ ,/ 我们/ 可以/ 不断/ 得到/ 离/ Rj/ 较近/ 的/ 点集/ ,/ 从而/ 直到/ kNN/ (/ Rj/ )/ / ∪/ n/ 这些/ Sj/ ∈/ ∪/ n/ 得到/ S/ =/ {/ S1/ ,/ S2/ ,/ …/ ,/ SN/ }/ / S/ ,/ 而且/ kNN/ (/ Ri/ )/ / S/ ./ 其次/ ,/ 我们/ 定义/ N/ 个/ 独立/ 同/ 分布/ 的/ 随机变量/ ,/ 他们/ 分别/ 为/ X1/ ,/ X2/ ,/ …/ ,/ XN/ ,/ 其中/ Xi/ 以/ 概率/ p/ 的/ 可能性/ 为/ 1/ ,/ 1/ -/ p/ 为/ 0/ ./ 我们/ 把/ 这些/ 随机变量/ 和/ 相应/ 的/ [/ di/ </ ψ/ ]/ =/ 1/ 对应/ 起来/ ,/ 就/ 有/ s/ (/ N/ ^/ ,/ ψ/ )/ =/ ∑/ N/ ^/ 根据/ 定义/ ,/ Xi/ 是/ 概率/ 为/ p/ =/ 1/ 验/ ./ 这样/ ,/ s/ (/ N/ ^/ ,/ ψ/ )/ 就是/ 一个/ 可以/ 表示/ 为/ B/ (/ r/ (/ N/ ,/ ψ/ )/ ,/ p/ )/ 的/ 二项分布/ ./ 根据/ 二项分布/ 的/ 性质/ ,/ 我们/ 可以/ 得到/ E/ [/ r/ ^/ (/ N/ ^/ ,/ ψ/ )/ ]/ =/ E1/ 并且/ Var/ [/ r/ ^/ (/ N/ ^/ ,/ ψ/ )/ ]/ =/ Vars/ (/ N/ ^/ ,/ ψ/ )/ [/ ]/ p/ =/ 1/ </ N/ 计/ s/ ∈/ N/ 的/ r/ (/ N/ ,/ ψ/ )/ ,/ 则/ 有/ 下面/ 的/ 推论/ ./ 如果/ 我们/ 使用/ 随机/ 采样/ 的/ s/ ∈/ N/ ^/ 的/ r/ ^/ (/ N/ ^/ ,/ ψ/ )/ 来估/ 推论/ 2/ ./ 通过/ s/ =/ arg/ 烐/ 烏/ 烑/ min/ 得到/ 的/ s/ 满足/ Pr/ [/ |/ r/ (/ N/ ,/ ψ/ )/ -/ r/ |/ / ε/ N/ ]/ / 1/ -/ e/ -/ 2/ // ε/ ./ 证明/ ./ 具体/ 地/ ,/ 推理/ 3.1/ 的/ 目标/ 是/ 证明/ 使用/ r/ ^/ (/ N/ ^/ ,/ ψ/ )/ 估计/ 出来/ 的/ kNN/ 结果/ 集/ 和/ 真实/ kNN/ 结果/ 集/ 的/ 差值/ 以/ 大于/ 1/ -/ e/ -/ 2/ // ε/ 的/ 概率/ 小于/ ε/ N/ ./ Pr/ [/ |/ r/ (/ N/ ,/ ψ/ )/ -/ r/ |/ >/ ε/ N/ ]/ =/ (/ 1/ -/ p/ )/ 2/ ε/ N/ =/ 1/ -/ 1/ 也/ 就是/ Pr/ [/ |/ r/ (/ N/ ,/ ψ/ )/ -/ r/ |/ / ε/ N/ ]/ / 1/ -/ e/ -/ 2/ // ε/ ./ 证毕/ ./ Pre/ -/ processing/ ./ 使用/ Fortune/ ’/ salgorithm/ 生成/ 相应/ 的/ 具有/ 标签/ 的/ voronoidiagram/ ./ 这里/ ,/ 如果/ |/ R/ |/ </ |/ S/ |/ ,/ 则/ 生成/ S/ 相应/ 的/ voronoidiagram/ ,/ 反之/ ,/ Page7/ 则/ 生成/ R/ 相应/ 的/ voronoidiagram/ ./ 需要/ 说明/ 的/ 是/ ,/ 一方面/ Fortune/ 算法/ 是/ 一个/ 增量/ 扫描线/ 算法/ ,/ 这样/ 有/ 2/ 个/ 好处/ ,/ 一个/ 是/ 可以/ 实现/ 对/ 大规模/ 数据/ 的/ 一边/ 加载/ 一边/ 编号/ ,/ 不/ 需要/ 一次性/ 加载/ 所有/ 数据/ 到/ 内存/ 中/ ,/ 另/ 一个/ 是/ Fortune/ 算法/ 的/ 时间/ 复杂度/ 是/ O/ (/ nlogn/ )/ ,/ 保证/ 了/ 预处理/ 的/ 时间/ 是/ 可以/ 接受/ 的/ ;/ 另一方面/ ,/ 我们/ 使用/ 了/ 改进/ 的/ Fortune/ 算法/ ,/ 在/ 扫描/ 的/ 同时/ 按照/ 扫描/ 顺序/ 加上/ 了/ 标签/ (/ L/ )/ ,/ L/ ∈/ N/ 是/ 一个/ 从/ 1/ 开始/ 的/ 递增/ 自然数/ ./ Partition/ ./ 对/ 生成/ 的/ voronoidiagram/ 的/ 按照/ L/ 值/ 的/ 大小/ ,/ 进行/ N/ 分割/ (/ N/ >/ 2k/ )/ ,/ 也/ 就是/ 每/ N/ 个/ 元素/ 放入/ 一个/ 分割/ 块/ 中/ ,/ 从而/ 得到/ max/ (/ |/ R/ |/ ,/ |/ S/ |/ )/ 分割/ 块/ ./ Map/ ./ 假设/ 我们/ 对/ 如图/ 3/ 所示/ 的/ 数据/ 集/ 进行/ 3/ -/ NNJoin/ 操作/ ,/ 我们/ 可以/ 采用/ 2/ 个/ mapper/ 和/ 1/ 个/ reducer/ ./ 首先/ ,/ 每个/ mapper/ (/ mapperi/ )/ 读取/ 它/ 相应/ 的/ 分割/ (/ spliti/ )/ ./ 所有/ 的/ 在/ spliti/ 的/ 元素/ 被/ 放入/ 一个/ hashmap/ 中/ ,/ 其中/ 每个/ 元素/ 的/ 形式/ 为/ 〈/ rid/ ,/ VN/ (/ r/ )/ 〉/ ,/ rid/ 为/ R/ 中/ 元素/ 的/ id/ ,/ VN/ (/ r/ )/ / VDi/ (/ S/ )/ ,/ ∪/ nS/ 为/ S/ 的/ 第/ i/ 个/ 包含/ r/ 的/ voronoidiagram/ 分割/ ./ 如果/ / r/ ∈/ R/ ,/ 我们/ 都/ 有/ |/ VN/ (/ r/ )/ |/ / k/ ,/ 其中/ ,/ VNk/ (/ r/ )/ 为/ r/ 的/ k/ 邻域/ ./ 根据/ 定理/ 2/ ,/ 我们/ 有/ kNN/ (/ r/ )/ =/ VNk/ (/ r/ )/ ./ 因此/ ,/ 对/ 多个/ R/ 中/ 元素/ 可以/ 同时/ 求解/ 它们/ 的/ kNN/ ./ Reduce/ ./ 得到/ mapper/ 的/ 〈/ rid/ ,/ VN/ (/ r/ )/ 〉/ 作为/ 输入/ ,/ 然后/ 进行/ VN/ (/ r/ )/ 作为/ 搜索/ 空间/ 进行/ kNNjoin/ ./ 由/ 定理/ 3/ 可知/ ,/ 在/ 进行/ N/ 分割/ 后/ 的/ s/ =/ arg/ 烐/ 烏/ 烑/ minr/ (/ N/ ,/ ψ/ )/ |/ 在/ N/ 足够/ 大/ 的/ 时候/ ,/ 是/ 以/ 较大/ 的/ 概率/ 逼近/ 于/ 真实/ kNN/ 连接/ 结果/ 的/ ./ 因此/ ,/ 我们/ 只要/ 通过/ reducer/ 找出/ VN/ (/ r/ )/ 的/ kNN/ 结果/ 即可/ 近似/ 地/ 表示/ 为/ 真实/ kNN/ 连接/ 结果/ ./ 需要/ 注意/ Map/ 函数/ 开始/ 产生/ 输出/ 结果/ 时/ ,/ 并/ 不是/ 简单/ 地/ 把/ 结果/ 直接/ 写/ 到/ 磁盘/ ./ 每个/ map/ 任务/ 都/ 有/ 一个/ 环形/ 内存/ 缓冲区/ ./ 默认/ 情况/ 下/ ,/ 输出/ 会/ 被/ 先/ 写/ 到/ 环形/ 内存/ 缓冲区/ 中/ ,/ 当/ 缓冲/ 内容/ 达到/ 指定/ 比率/ (/ 一般/ 默认/ 为/ 0.8/ )/ 时/ ,/ map/ 任务/ 会/ 把/ 内容/ 溢出/ 写/ 到/ 磁盘/ 中/ (/ 而/ 不是/ DFS/ 中/ )/ ./ 这样/ ,/ map/ 任务/ 如果/ 还有/ 输出/ 结果/ ,/ 那么/ 它/ 需要/ 进行/ 阻塞/ 直到/ 溢写/ 过程/ 结束/ ./ 在/ 我们/ 的/ kNN/ 连接/ 中/ ,/ 如果/ 数据/ 集/ 非常/ 大/ (/ 即/ |/ R/ |/ ,/ |/ S/ |/ 都/ 非常/ 大/ )/ 的/ 时候/ ,/ 我们/ 通过/ 配置/ ,/ 采用/ 了/ 两个/ 优化/ 方法/ ./ 首先/ ,/ 由于/ 数据/ 集/ 非常/ 大/ ,/ 溢写/ 文件/ 的/ 合并/ 是/ 频繁/ 发生/ 的/ ./ 我们/ 需要/ 根据/ 具体/ 数据/ 集/ 的/ 大小/ 来/ 调整/ 溢写/ 文件/ 的/ 合并/ 值/ (/ 例如/ ,/ 在/ hadoop/ 中/ 就是/ io/ ./ sort/ ./ factor/ )/ 来/ 进行/ 调优/ ./ 其次/ ,/ 当溢/ 写/ 频繁/ 发生/ 时/ ,/ 我们/ 需要/ 对/ map/ 的/ 中间/ 输出/ 结果/ 进行/ 压缩/ 来/ 减少/ 频繁/ 溢写/ 带来/ 的/ 代价/ ./ 相应/ 地/ ,/ 在/ hadoop/ 中/ ,/ 我们/ 需要/ 设置/ mapred/ ./ compress/ ./ map/ ./ output/ 为/ true/ ,/ 并/ 定义/ 或者/ 重写/ 相应/ 的/ 压缩/ 方法/ ./ 在/ 我们/ 的/ kNN/ 连接/ 中/ ,/ 当/ k/ 非常/ 大/ 的/ 时候/ ,/ 显然/ map/ 的/ 输出/ 结果/ 非常/ 大/ ,/ 我们/ 可以/ 在/ map/ 的/ 基础/ 上/ 定义/ 它/ 的/ 优化/ 函数/ combiner/ 来/ 限制/ 可用/ 的/ reduce/ 输入/ ,/ 从而/ 减少/ 对/ 可用/ 带宽/ 的/ 消耗/ ,/ 保证/ 我们/ 程序/ 的/ 健壮性/ ,/ 防止/ 频繁/ 的/ map/ 任务/ 重/ 分配/ ./ 当/ |/ R/ |/ ,/ |/ S/ |/ 都/ 非常/ 大/ ,/ 但是/ |/ S/ |/ 在/ 有限/ 的/ 机器/ 节点/ 的/ 情况/ 下/ ,/ 我们/ 可以/ 通过/ 配置/ combiner/ 合并/ 的/ 溢/ 写/ 次数/ 来/ 进行/ 调优/ ./ 相应/ 地/ ,/ 在/ hadoop/ 里/ ,/ 我们/ 需要/ 配置/ min/ ./ num/ ./ spills/ ./ for/ ./ combine/ 属性/ 的/ 值/ ,/ 并且/ 此值/ 必须/ 大于/ 等于/ 3/ ./ 在/ 本文/ 我们/ 的/ 方法/ 主要/ 适用/ 于/ |/ k/ |/ / |/ S/ |/ 5/ 实验/ 分析/ 为了/ 验证/ 我们/ 方法/ 的/ 有效性/ 和/ 高效性/ ,/ 证明/ 我们/ 的/ 方法/ 能够/ 胜任/ 快速/ 大规模/ 的/ kNN/ 连接/ 操作/ ./ 我们/ 在/ 不同/ 的/ 实验/ 环境/ 下/ 进行/ 了/ 详细/ 的/ 实验/ 及/ 分析/ ,/ 包括/ 不同/ 的/ 数据/ 集/ ,/ 不同/ 的/ 节点/ 数目/ ,/ 不同/ 的/ 连接/ 参数设置/ ./ 在/ 相同/ 的/ 实验/ 条件/ 下/ 将/ 本文/ 提出/ 的/ 方法/ 和/ baseline/ 方法/ 进行/ 了/ 对比/ 分析/ ./ 5.1/ 实验/ 条件/ 实验/ 使用/ 平台/ 配置/ :/ DellPowerEdgeR720/ ,/ 处理器/ 类型/ Intel/ ?/ Xeon/ ?/ CPUE5/ -/ 26200/ @/ 2.00/ GHz/ ,/ 网卡/ 6/ 个/ ,/ 内存/ 60907MB/ ,/ 硬盘/ 9.09/ TB/ ./ 通过/ VMwarevSphere5EnterprisePlus/ 进行/ 管理/ ./ 在/ 虚拟机/ 上/ 我们/ 使用/ 的/ CentOS5/ ./ 9/ 的/ 64/ 位/ 系统/ ,/ 使用/ 的/ Hadoop/ 版本/ 是/ 0.20/ ./ 2/ ,/ DFS/ 的/ 块/ 大小/ 是/ 64MB/ ./ 实验/ 中/ 使用/ 的/ 数据/ 集/ 来源于/ 两个/ 数据源/ ,/ 一个/ 数据源/ 是/ 我们/ 随机/ 生成/ 的/ 数据/ 集/ D1/ ,/ 另外/ 一个/ 数据源/ 是/ 北京市/ 出租车/ 的/ 数据源/ D2/ ./ D1/ 中/ 我们/ 随机/ 生成/ 了/ 200000000/ 个/ 二维/ 点/ ,/ 然后/ 随机/ 抽取/ 了/ 20000/ 个点/ 作为/ R/ 中/ 元素/ ,/ 其余/ 作为/ 了/ S/ 中/ 的/ 元素/ ./ D2/ 中/ 包含/ 了/ 北京市/ 的/ 60258/ 辆/ 出租车/ 7/ 天中/ 的/ 运动/ 轨迹/ 数据/ ,/ 我们/ 从中/ 选取/ 了/ 260000/ 条/ 数据/ 记录/ ,/ 并/ 在/ 其中/ 随机/ 选择/ 了/ 10000/ 个点/ 作为/ R/ 中/ 的/ 元素/ ,/ 其余/ 作为/ 了/ S/ 中/ 的/ 元素/ ./ 整个/ 系统/ 的/ 配置图/ 如图/ 4/ 所示/ ./ Page85/ ./ 2/ 实验/ 结果/ 与/ 分析/ 5.2/ ./ 1/ 不同/ 的/ 数据/ 集及/ k/ 的/ 影响/ 图/ 5/ (/ a/ )/ 和/ (/ b/ )/ 分别/ 展示/ 了/ 我们/ 在/ 不同/ 的/ 数据/ 集/ (/ D1/ 和/ D2/ )/ 不同/ 的/ k/ 取值/ (/ k/ =/ {/ 2/ ,/ 4/ ,/ 6/ }/ )/ 上/ 运行/ 3/ 个/ 方法/ (/ VDMP/ -/ J/ ,/ H/ -/ BNLJ/ 和/ DSGMP/ -/ J/ )/ 的/ 运行/ 时间/ ./ 关于/ 运行/ 时间/ 这里/ 有/ 两点/ 说明/ ,/ 一是/ 所有/ 的/ 运行/ 时间/ 均/ 为/ 多次/ 实验/ 的/ 平均值/ ;/ 二是/ 这里/ 的/ 运行/ 时间/ 包含/ 建立/ 索引/ 和/ 预处理/ 的/ 时间/ ./ 另外/ ,/ 本/ 实验/ 的/ 目的/ 在于/ 考察/ 不同/ 的/ 数据/ 集/ 和/ k/ 对于/ 运行/ 时间/ 的/ 影响/ ,/ 因此/ ,/ 我们/ 设置/ 节点/ 数目/ 均/ 为/ 6/ ./ 总体/ 上/ ,/ 从图/ 5/ (/ a/ )/ 和/ (/ b/ )/ 中/ 我们/ 可以/ 看出/ 随着/ k/ 的/ 增加/ ,/ 3/ 个/ 方法/ 的/ 运行/ 时间/ 都/ 在/ 增加/ ./ 其中/ ,/ H/ -/ BNLJ/ 图/ 5/ 不同/ 数据/ 集/ 不同/ 的/ k/ 下/ kNNJoin/ 运行/ 时间/ 的/ 时间/ 增加/ 最为/ 迅速/ ,/ VDMP/ -/ J/ 和/ DSGMP/ -/ J/ 的/ 增加/ 较为/ 缓慢/ ./ 这/ 说明/ 了/ VDMP/ -/ J/ 和/ DSGMP/ -/ J/ 方法/ 的/ 有效性/ ,/ 通过/ DSG/ 索引/ 划分/ 和/ VD/ 划分/ ,/ 和/ 没有/ 进行/ 局部/ 索引/ 的/ 暴力/ 方法/ H/ -/ BNLJ/ 相比/ ,/ 可以/ 有效/ 地/ 减少/ 运行/ 时间/ ./ 另一方面/ ,/ 在/ k/ 较/ 小/ 的/ 时候/ ,/ DSGMP/ -/ J/ 往往/ 优于/ VDMP/ -/ J/ ,/ 原因/ 在于/ DSGMP/ -/ J/ 建立/ 索引/ 的/ 时间/ 较/ 短/ ,/ 而且/ 在/ k/ 较/ 小/ 的/ 时候/ ,/ DSGMP/ -/ J/ 的/ filter/ -/ refine/ 可以/ 有效/ 获取/ kNN/ 连接/ 的/ 结果/ ./ 往往/ 并不需要/ 进行/ 第二次/ MapReduce/ ./ 5.2/ ./ 2/ 不同/ 的/ 节点/ 数/ 的/ 影响/ 本/ 实验/ 的/ 目的/ 在于/ 比较/ 采用/ MapReduce/ 框架/ 的/ 不同/ 方法/ 的/ 伸缩性/ ,/ 即/ 随着/ 节点/ 数目/ 的/ 增加/ 运行/ 时间/ 的/ 变化/ 情况/ ./ 实验/ 中/ ,/ 对于/ 同一个/ 数据/ 集/ (/ D1/ 和/ D2/ )/ ,/ 我们/ 设置/ 了/ 相同/ 的/ k/ 值/ (/ k/ =/ 6/ )/ ,/ 并/ 把/ 节点/ 数目/ (/ DataNodenumber/ )/ 从/ 4/ 增加/ 到/ 了/ 6/ ,/ 最后/ 进一步/ 增加/ 到/ 了/ 10/ ,/ 分别/ 运行/ 了/ VDMP/ -/ J/ ,/ H/ -/ BNLJ/ 和/ DSGMP/ -/ J/ ,/ 得到/ 的/ 实验/ 结果/ 如图/ 6/ (/ a/ )/ 和/ (/ b/ )/ 所示/ ./ 注意/ 由于/ 一次/ 实验/ 结果/ 可能/ 存在/ 一定/ 的/ 随机性/ ,/ 这里/ ,/ 我们/ 的/ 运行/ 时间/ 均/ 为/ 平均/ 时间/ ./ 而且/ ,/ 我们/ 的/ 时间/ 单位/ 为/ 102s/ ./ Page9/ 从图/ 6/ (/ a/ )/ 可以/ 看出/ ,/ 从总体上/ 讲/ ,/ 一方面/ ,/ 随着/ 节点/ 数目/ 的/ 增加/ ,/ 3/ 个/ 方法/ 的/ 运行/ 时间/ 都/ 呈现/ 下降/ 趋势/ ,/ 这/ 说明/ MapReduce/ 框架/ 本身/ 保证/ 了/ 3/ 种/ 方法/ 的/ 伸缩性/ 都/ 比较/ 好/ ,/ 但是/ 需要/ 指出/ 的/ 是/ 随着/ 节点/ 数目/ 的/ 增多/ ,/ 同时/ 带来/ 的/ 也/ 有/ 通讯/ 代价/ 的/ 增多/ ,/ 因此/ 下降/ 率/ 并/ 不是/ 线性/ 的/ ;/ 另一方面/ ,/ 在/ 运行/ 时间/ 上/ ,/ H/ -/ BNLJ/ 的/ 运行/ 时间/ 一直/ 长于/ DSGMP/ -/ J/ 的/ 运行/ 时间/ ,/ 并且/ VDMP/ -/ J/ 的/ 运行/ 时间/ 最少/ ,/ 这/ 说明/ VDMP/ -/ J/ 的/ 执行/ 效率/ 最高/ ./ 但是/ 需要/ 指出/ VDMP/ -/ J/ 是/ 一种/ 近似算法/ ,/ 就/ DSGMP/ -/ J/ 和/ H/ -/ BNLJ/ 而言/ ,/ DSGMP/ -/ J/ 较优/ ./ 另外/ ,/ 需要/ 说明/ 的/ 是/ ,/ H/ -/ BNLJ/ 的/ 下降/ 较为/ 缓慢/ ,/ DSGMP/ -/ J/ 次之/ ,/ 而/ VDMP/ -/ J/ 下降/ 的/ 最为/ 迅速/ ./ 这里/ 也/ 说明/ 了/ DSGMP/ -/ J/ 采用/ 栅格/ 化/ 的/ 有效性/ 和/ VDMP/ -/ J/ 使用/ 一遍/ MapRedcue/ 的/ 高效性/ ./ 图/ 6/ (/ b/ )/ 给出/ 了/ 在/ 数据/ 集/ D2/ 上/ 运行/ 结果/ ,/ 同样/ 验证/ 了/ 我们/ 上面/ 的/ 两个/ 结论/ :/ (/ 1/ )/ MapReduce/ 可以/ 保证/ 方法/ 具有/ 较/ 好/ 的/ 伸缩性/ ;/ (/ 2/ )/ 在/ 近似/ 的/ 情况/ 下/ ,/ VDMP/ -/ J/ 较优/ ,/ 在/ 精确/ 的/ 情况/ 下/ ,/ DSGMP/ -/ J/ 较优/ ./ 我们/ 同时/ 也/ 通过/ 实验/ 分析/ 了/ 在/ 不同/ k/ 下/ VDMP/ -/ J/ 的/ 精度/ ,/ 实验/ 结果/ 如图/ 7/ 所示/ ./ 可以/ 看出/ 相/ 比较/ 数据/ 集/ D2/ ,/ 数据/ 集/ D1/ 的/ VDMP/ -/ J/ 具有/ 较/ 高/ 的/ 精度/ ,/ 这/ 也/ 同时/ 验证/ 了/ 在/ N/ 足够/ 大/ 的/ 时候/ ,/ VDMP/ -/ J/ 是/ 以/ 较大/ 的/ 概率/ 逼近/ 于/ 真实/ kNN/ 连接/ 结果/ 的/ ./ 6/ 结论/ kNN/ 连接/ 是/ 空间/ 数据库/ 领域/ 里/ 一个/ 基本/ 而/ 又/ 重要/ 的/ 问题/ ,/ 它/ 对/ 提高/ 众多/ 实际/ 应用/ 的/ 性能/ 有着/ 重要/ 意义/ ./ 随着/ 目前/ 参加/ kNN/ 连接/ 的/ 数据/ 集/ 的/ 增大/ 和/ 要求/ 的/ 响应/ 时间/ 的/ 缩短/ (/ 尤其/ 在/ 一些/ 应急/ 环境/ 中/ )/ ,/ kNN/ 连接/ 的/ 效率/ 要求/ 越来越/ 高/ ./ 传统/ 的/ 方法/ 大多/ 基于/ 单个/ 进程/ 或者/ 单台/ 机器/ ,/ 并/ 不/ 具有/ 很/ 好/ 的/ 伸缩性/ ./ 我们/ 发现/ :/ 一方面/ ,/ 有效/ 的/ 过滤/ 可以/ 减少/ 待/ 比较/ 的/ 两个/ 集合/ 中/ 元素/ 的/ 对数/ (/ candidatepair/ )/ ;/ 另一方面/ ,/ 在/ 执行/ map/ -/ reduce/ 的/ 时候/ ,/ 良好/ 的/ 划分/ 策略/ 可以/ 达到/ 较/ 好/ 的/ 负载/ 均衡/ ./ 基于/ 这/ 两个/ 观察/ ,/ 本文/ 在/ H/ -/ BNLJ/ 两次/ MapReduce/ 框架/ 的/ 基础/ 上/ ,/ 提出/ 了/ 精确/ 的/ DSGMP/ -/ J/ 和/ 近似/ 的/ VDMP/ -/ J/ 方法/ ,/ 充分利用/ 了/ 局部/ 索引/ 和/ 划分/ 来/ 求解/ kNN/ 连接/ 问题/ ./ 实验/ 证明/ 了/ 我们/ 提出/ 的/ DSGMP/ -/ J/ 和/ VDMP/ -/ J/ 方法/ 的/ 有效性/ 和/ 具有/ 较优/ 的/ 伸缩性/ ./ 

