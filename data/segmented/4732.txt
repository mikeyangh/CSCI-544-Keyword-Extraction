Page1/ 微/ 函数/ 依赖/ 及其/ 推理/ 1/ )/ (/ 哈尔滨工业大学/ 计算机科学/ 与/ 技术/ 学院/ 哈尔滨/ 150001/ )/ 2/ )/ (/ 哈尔滨工业大学/ 软件/ 学院/ 哈尔滨/ 150001/ )/ 摘要/ 起初/ ,/ 作为/ 一个/ 数据库/ 模式/ 设计/ 的/ 工具/ ,/ 函数/ 依赖/ 理论/ 得到/ 了/ 很多/ 的/ 关注/ ,/ 而/ 在/ 数据/ 修复/ 中/ ,/ 该/ 理论/ 并/ 不是/ 十分/ 有效/ ./ 近年来/ ,/ 针对/ 不/ 一致/ 数据/ 的/ 检测/ 和/ 修复/ 问题/ ,/ 更/ 多/ 的/ 约束/ 被/ 提出/ 来/ ,/ 包括/ 条件/ 函数/ 依赖/ 、/ 修复/ 规则/ 以及/ 编辑/ 规则/ 等/ ./ 然而/ ,/ 这些/ 方法/ 都/ 只/ 关注/ 了/ 属性/ 整体/ 之间/ 的/ 依赖/ 关系/ ,/ 而/ 实际/ 应用/ 中/ 的/ 数据/ 通常/ 有/ 属性/ 部分/ 之间/ 的/ 依赖/ 关系/ ./ 例如/ ,/ 某/ 单位/ 员工/ 的/ 工号/ 前/ 两位/ 决定/ 了/ 其/ 所属/ 的/ 部门/ ,/ 而/ 此类/ 依赖/ 信息/ 就/ 被/ 已有/ 方法/ 忽略/ ./ 该文/ 首先/ 提出/ 了/ 一类/ 更/ 一般化/ 的/ 约束/ —/ —/ —/ 微/ 函数/ 依赖/ ,/ 微/ 函数/ 依赖/ 引入/ 提取/ 函数/ ,/ 用来/ 表示/ 属性/ 的/ 部分/ 信息/ ./ 利用/ 提取/ 函数/ 之间/ 的/ 依赖/ 关系/ ,/ 能够/ 检测/ 出/ 更/ 多/ 的/ 不/ 一致/ 数据/ ./ 理论/ 方面/ ,/ 该文/ 首先/ 研究/ 了/ 微/ 函数/ 依赖/ 的/ 可/ 满足/ 性/ 问题/ 和/ 蕴含/ 问题/ ,/ 然后/ 提供/ 了/ 一个/ 正确/ 且/ 完备/ 的/ 推理/ 系统/ ./ 最后/ ,/ 通过/ 实验/ 证实/ 了/ 微/ 函数/ 依赖/ 能够/ 在/ 可/ 接受/ 的/ 时间/ 开销/ 内/ 检测/ 出/ 更/ 多/ 的/ 错误/ 数据/ ./ 关键词/ 微/ 函数/ 依赖/ ;/ 提取/ 函数/ ;/ 可/ 满足/ 性/ 问题/ ;/ 蕴含/ 问题/ ;/ 推理/ 系统/ 1/ 引言/ 相关/ 资料/ 表明/ ,/ 脏/ 数据/ 正在/ 变得/ 越来越/ 普遍/ 且/ 不可避免/ ,/ 例如/ ,/ 在/ 信息产业/ 还/ 没有/ 特别/ 发达/ 的/ 1998/ 年/ 就/ 已经/ 有/ 1/ %/ ~/ 5/ %/ 的/ 商业/ 数据/ 存在/ 错误/ ,/ 在/ 有些/ 企业/ 中/ 甚至/ 达到/ 了/ 30/ %/ [/ 1/ ]/ ;/ 国际/ 著名/ 科技咨询/ 机构/ Gartner/ 的/ 调查/ 显示/ ,/ 全球/ 财富/ 1000/ 强/ 企业/ 中/ 超过/ 25/ %/ 的/ 企业/ 信息系统/ 中/ 的/ 数据/ 不/ 正确/ 或/ 不/ 准确/ [/ 2/ ]/ ./ 这些/ 脏/ 数据/ 通常/ 带来/ 很/ 严重/ 的/ 后果/ [/ 3/ ]/ ,/ 而且/ 由于/ 数据量/ 庞大/ ,/ 数据/ 问题/ 种类/ 繁多/ ,/ 要/ 想/ 解决/ 数据/ 质量/ 问题/ 带来/ 的/ 严重后果/ ,/ 也/ 是/ 一项/ 消耗/ 巨大/ 的/ 工作/ ./ 美国公司/ 每年/ 花/ 在/ 处理/ 脏/ 数据/ 上/ 的/ 资金/ 就/ 高达/ 6/ 千亿美元/ [/ 4/ ]/ ;/ 目前/ 数据/ 质量/ 工具/ 的/ 市场/ 以/ 每年/ 17/ %/ 的/ 速度/ 增长/ ,/ 远超/ IT/ 行业/ 平均/ 增长率/ 7/ %/ ;/ 一项/ 近期/ 统计/ 显示/ ,/ 在/ 大多数/ 的/ 数据仓库/ 项目/ 中/ ,/ 数据/ 修复/ 工作/ 占/ 开发/ 时间/ 和/ 预算/ 的/ 30/ %/ ~/ 80/ %/ [/ 5/ ]/ ./ 近年来/ ,/ 数据库/ 领域/ 广泛/ 研究/ 了/ 处理/ 脏/ 数据/ 的/ 问题/ ./ 不一致性/ 是/ 脏/ 数据/ 的/ 最/ 重要/ 方面/ 之一/ ./ 如果/ 一个/ 数据库/ 违反/ 了/ 某些/ 数据/ 质量/ 规则/ 如/ 函数/ 依赖/ [/ 6/ ]/ 、/ 条件/ 函数/ 依赖/ [/ 7/ -/ 8/ ]/ 、/ 扩展/ 的/ 条件/ 函数/ 依赖/ [/ 9/ ]/ 、/ 编辑/ 规则/ [/ 10/ ]/ 、/ 修复/ 规则/ [/ 11/ ]/ 等/ ,/ 则/ 称/ 它/ 是/ 不/ 一致/ 的/ ./ 起初/ ,/ 检测/ 和/ 修复/ 脏/ 数据/ 的/ 依据/ 是/ 传统/ 的/ 函数/ 依赖/ (/ FDs/ )/ [/ 6/ ]/ ,/ 而/ 函数/ 依赖/ 主要/ 用于/ 数据库/ 的/ 模式/ 设计/ ,/ 在/ 处理/ 不/ 一致/ 数据/ 时/ ,/ 往往/ 不够/ 充分/ ./ 实际上/ ,/ 在/ 一个/ 精心设计/ ①/ 的/ 数据库/ 中/ ,/ 所有/ 的/ 函数/ 依赖/ 都/ 是/ 主键/ 约束/ ,/ 即/ 约束/ 前件/ 都/ 是/ 候选/ 键/ ./ 同时/ ,/ 所有/ 的/ 主流/ 数据库/ 都/ 支持/ SQL/ 语句/ 中/ 的/ UNIQUE/ 和/ KEY/ 关键字/ ,/ 来/ 避免/ 插入/ 和/ 修改/ 数据/ 时/ 违反/ 函数/ 依赖/ ,/ 如例/ 1/ ./ 例/ 1/ ./ 考虑/ 数据库/ 模式/ Employee/ (/ Eid/ ,/ Name/ ,/ Dept/ ,/ Position/ ,/ EntryDate/ ,/ Salary/ )/ 以及/ 一个/ 相应/ 的/ 实例/ r/ ,/ 如表/ 1/ 所示/ ./ 带有/ 下划线/ 的/ 属性/ Eid/ 是/ 主键/ ,/ 由/ 主键/ 定义/ 知/ ,/ Eid/ 的/ 值/ 可以/ 确定/ 其他/ 属性/ 的/ 值/ ./ 另外/ ,/ 来自/ 同一/ 部门/ 的/ 员工/ 不能/ 重名/ ,/ 因此/ Name/ 和/ Dept/ 也/ 构成/ 了/ 一个/ 候选/ 键/ ./ 这/ 两条/ 约束/ 可以/ 形式化/ 为/ 两条/ 函数/ 依赖/ / 1/ :/ [/ Eid/ ]/ →/ [/ Name/ ,/ Dept/ ,/ Position/ ,/ EntryDate/ ,/ Salary/ ]/ 和/ / 2/ :/ [/ Name/ ,/ Dept/ ]/ →/ [/ Eid/ ,/ Position/ ,/ EntryDate/ ,/ Salary/ ]/ ./ 由于/ 底层/ 数据库/ 管理系统/ 的/ 约束/ 检查/ 机制/ ,/ r/ 中/ 的/ 所有/ 元组/ 在/ [/ Eid/ ]/ 以及/ 在/ [/ Name/ ,/ Dept/ ]/ 上/ 的/ 值/ 都/ 不/ 相同/ (/ 在/ [/ Eid/ ]/ 或/ [/ Name/ ,/ Dept/ ]/ 上/ 具有/ 相同/ 值/ 的/ 元组/ 会/ 被/ 禁止/ 插入/ 数据库/ )/ ,/ 因此/ 上述/ 两条/ 约束/ 也/ 不会/ 被/ 违反/ ./ 从例/ 1/ 可以/ 看到/ ,/ 函数/ 依赖/ 能够/ 阻止/ 不/ 一致/ 数据/ 进入/ 数据库/ ,/ 但是/ 对/ 检测/ 错误/ 是/ 不/ 充分/ 的/ ./ 为此/ ,/ Fan/ 等/ 人/ 对/ 函数/ 依赖/ 进行/ 了/ 扩展/ ,/ 把/ 语义/ 相关/ 的/ 值/ 绑定/ 到/ 约束/ 中/ 去/ ,/ 即/ 条件/ 函数/ 依赖/ (/ CFDs/ )/ [/ 7/ -/ 8/ ]/ ./ 条件/ 函数/ 依赖/ 的/ 主要/ 特点/ 就是/ 它/ 可以/ 只/ 对表中/ 部分/ 满足/ 一定/ 条件/ 的/ 元组/ 起/ 作用/ ,/ 而/ 函数/ 依赖/ 则/ 对/ 整个/ 表中/ 的/ 所有/ 元组/ 起/ 作用/ ./ 在/ 例/ 1/ 中/ ,/ 如果/ 每个/ 部门/ 只能/ 有/ 一个/ 管理者/ ,/ 就/ 可以/ 得到/ 以下/ 的/ 条件/ 函数/ 依赖/ :/ φ/ 1/ [/ position/ =/ Manager/ ,/ Dept/ ]/ →/ [/ Eid/ ,/ Name/ ,/ Entry/ -/ Date/ ,/ Salary/ ]/ 表示/ 当/ 一个/ 员工/ 是/ 管理者/ 的/ 时候/ ,/ 通过/ 他/ 所在/ 的/ 部门/ ,/ 能够/ 知道/ 他/ 的/ 员工/ 号/ 、/ 姓名/ 等/ 信息/ ./ 函数/ 依赖/ 对此/ 是/ 无法/ 表示/ 的/ ./ 然而/ ,/ 根据/ IDEF1X/ ①/ ,/ 如果/ 数据库/ 模式/ 设计/ 得/ 很/ 完善/ ,/ Employee/ 将会/ 按照/ 分类/ 属性/ Position/ 被/ 分成/ 表/ Staff/ (/ Eid/ ,/ Name/ ,/ Dept/ ,/ EntryDate/ ,/ Salary/ )/ 和/ Manager/ (/ Eid/ ,/ Name/ ,/ Dept/ ,/ EntryDate/ ,/ Salary/ )/ ./ 这样/ ,/ φ/ 1/ 函数/ 依赖/ / 3/ :/ [/ Dept/ ]/ →/ [/ Eid/ ,/ Name/ ,/ EntryDate/ ,/ Salary/ ]/ ./ 由/ 前述/ 内容/ 可知/ ,/ / 3/ 不易/ 被/ 违反/ ./ 另外/ ,/ 每个/ 条件/ 函数/ 依赖/ 在/ 每个/ 属性/ 上/ 至多/ 绑定/ 一个/ 数值/ ,/ 导致/ 它/ 的/ 表达能力/ 有限/ ./ 为了/ 增加/ 其/ 表达能力/ ,/ Fan/ 等/ 人/ 又/ 提出/ 了/ 内置/ 谓词/ 的/ 条件/ 函数/ 依赖/ (/ CFDps/ )/ [/ 12/ ]/ 以及/ 扩展/ 的/ 条件/ 函数/ 依赖/ (/ eCFDs/ )/ [/ 9/ ]/ ./ 前者/ 把/ 条件/ 函数/ 依赖/ 中/ 的/ ‘/ =/ ’/ 扩展/ 到/ ‘/ ≠/ ’/ ,/ ‘/ </ ’/ ,/ ‘/ / ’/ ,/ ‘/ >/ ’/ 和/ ‘/ / ’/ ,/ 而/ 后者/ 是/ 把/ 条件/ 函数/ 依赖/ 中/ 的/ “/ 单值/ 条件/ ”/ 扩展/ 到/ “/ 有限/ 集合/ 条件/ ”/ ,/ 即/ 只有/ 属性/ 值/ 在/ (/ 或者/ 不/ 在/ )/ 集合/ 中时/ 才/ 满足条件/ ./ 这/ 两种/ 扩展/ 都/ 很大/ 程度/ 上/ 增加/ 了/ 条件/ 函数/ 依赖/ 的/ 表达能力/ ./ 然而/ ,/ CFDps/ 主要/ 针对/ 数值/ 型/ 属性/ 而/ eCFDs/ 不/ 能够/ 处理/ “/ 无穷/ 集合/ ”/ 的/ 情况/ ./ 此外/ ,/ 其他/ 研究/ 工作/ 提出/ 来/ 的/ 约束/ 包括/ 编辑/ 规则/ [/ 10/ ]/ 、/ 修复/ 规则/ [/ 11/ ]/ 、/ 差分/ 约束/ [/ 13/ ]/ 和/ 可/ 比较/ 约束/ [/ 14/ ]/ 等/ ./ 但是/ ,/ 所有/ 这些/ 约束/ 都/ 只/ 关注/ 了/ 整个/ 属性/ 值/ 之间/ 的/ 关系/ ,/ 忽略/ 了/ 这样/ 一个/ 事实/ :/ 两个/ 属性/ 值/ 的/ 部分/ 信息/ 相等/ 也/ 能够/ 确定/ 一些/ 相等/ 关系/ ./ 比如/ ,/ 两个/ 电话号码/ 的/ 前/ 几位/ 相同/ ,/ 则/ 它们/ 可能/ 来自/ 同一/ 地区/ ./ 而/ 在/ 之前/ 的/ 工作/ 中/ ,/ 完全相同/ 的/ 两个/ 电话号码/ 才/ 被/ 认为/ 来自/ 同一/ 地区/ ./ 在/ 例/ 1/ 中/ ,/ 如果/ Eid/ 的/ 长度/ 为/ 2/ 的/ 前缀/ 表示/ 员工/ 所在/ 的/ 部门/ ,/ 可以/ 将/ 其/ 表示/ 为/ [/ prefix/ (/ Eid/ ,/ 2/ )/ ]/ →/ [/ Dept/ ]/ ,/ 本文/ 中表/ 1/ 中/ 的/ 第一/ ①/ DataModelingMethod/ (/ IDEF/ )/ ./ http/ :/ // // www/ ./ idef/ ./ com/ // idef1x/ -/ data/ -/ modeling/ -/ method/ // Page3/ 条/ 和/ 最后/ 一条/ 元组/ 的/ Eid/ 前缀/ 相同/ ,/ 表示/ 员工/ 来自/ 相同/ 部门/ ,/ 但是/ 他们/ 的/ Dept/ 属性/ 又/ 不/ 相同/ ,/ 说明/ 数据/ 不/ 一致/ ,/ 而/ 之前/ 的/ 工作/ 都/ 没有/ 检测/ 出/ 这类/ 不/ 一致/ ./ EidNameDeptPositionEntryDateSalary/ // %/ 01M00001AliceR/ &/ DManager2007/ -/ 09/ -/ 0101S00002BobR/ &/ D02M00001CarolTestManager2009/ -/ 08/ -/ 2902S00010DavidTest03M00001EricO/ &/ MManager2012/ -/ 08/ -/ 2503S00002FrankO/ &/ M01S00003GaryO/ &/ M/ 针对/ 这些/ 实际/ 情况/ ,/ 本文/ 的/ 主要/ 贡献/ 包括/ :/ (/ 1/ )/ 提出/ 微/ 函数/ 依赖/ (/ MDs/ )/ 的/ 概念/ ,/ 它/ 是/ 对/ FDs/ 、/ CFDs/ 、/ CFDps/ 和/ eCFDs/ 的/ 进一步/ 扩展/ ,/ 以/ 在/ 数据/ 修复/ 中/ 发现/ 更/ 全面/ 的/ 不/ 一致/ 数据/ ./ 这里/ 之所以/ 用/ “/ 微/ 函数/ 依赖/ ”/ 而/ 不用/ “/ 部分/ 函数/ 依赖/ ”/ 的/ 名称/ ,/ 是因为/ 后者/ 已经/ 在/ 关系数据库/ 的/ 函数/ 依赖/ 理论/ [/ 6/ ]/ 中/ 被/ 占用/ ,/ 并且/ 表示/ 了/ 完全/ 不同/ 的/ 意思/ ./ 通过/ 引入/ 提取/ 函数/ ,/ 来/ 提取/ 属性/ 中/ 的/ 部分/ 信息/ ,/ MDs/ 能够/ 检测/ 出/ 更/ 多/ 的/ 不/ 一致/ 数据/ ./ 这部分/ 内容/ 主要/ 在/ 第/ 2/ 节/ 介绍/ ;/ (/ 2/ )/ 研究/ 了/ 关于/ MDs/ 的/ 静态/ 分析/ 问题/ ,/ 包括/ 两/ 部分/ ,/ 分别/ 是/ 可/ 满足/ 性/ 问题/ 和/ 蕴含/ 问题/ ./ 可/ 满足/ 性/ 问题/ 是/ 指/ ,/ 给定/ 一个/ 微/ 函数/ 依赖/ 集/ Σ/ (/ 根据/ 惯例/ ,/ Σ/ 在/ 本文/ 中/ 表示/ 依赖/ 集/ ,/ 并非/ 求和/ 符号/ )/ ,/ 判断/ 是否/ 存在/ 一个/ 满足/ Σ/ 的/ 非空/ 实例/ ./ 蕴含/ 问题/ 是/ 指/ ,/ 给定/ 一个/ 微/ 函数/ 依赖/ 集/ Σ/ 和/ 单条/ 微/ 函数/ 依赖/ φ/ ,/ 判断/ “/ 任一/ 实例/ 满足/ Σ/ ”/ 是否/ 蕴含/ “/ 该/ 实例/ 也/ 满足/ φ/ ”/ ,/ 即/ 判断/ :/ 满足/ Σ/ 的/ 实例/ 是否/ 也/ 一定/ 满足/ φ/ ./ 这部分/ 内容/ 主要/ 在/ 第/ 3/ 节中/ 介绍/ ./ (/ 3/ )/ 针对/ MDs/ ,/ 给出/ 了/ 若干/ 推理/ 规则/ ,/ 构成/ 一个/ 推理/ 系统/ ,/ 并且/ 证明/ 了/ 该/ 推理/ 系统/ 的/ 正确性/ 和/ 完备/ 性/ ./ 这部分/ 内容/ 主要/ 在/ 第/ 4/ 节/ 介绍/ ./ (/ 4/ )/ 介绍/ 了/ 用/ 微/ 函数/ 依赖/ 检测/ 数据/ 错误/ 的/ 算法/ ,/ 首先/ 给出/ 基于/ SQL/ 查询/ 的/ 方法/ ,/ 然后/ 给出/ 基于/ 排序/ 的/ 方法/ ,/ 并/ 在/ 多条/ 依赖/ 的/ 情况/ 下/ 对/ 其/ 进行/ 优化/ ./ 这部分/ 内容/ 在/ 第/ 5/ 节/ 进行/ 介绍/ ./ (/ 5/ )/ 进行/ 了/ 充分/ 的/ 实验/ ,/ 实验/ 结果表明/ MDs/ 确实/ 能够/ 比/ 之前/ 方法/ 检测/ 出/ 更/ 多/ 的/ 错误/ 数据/ ./ 这部分/ 内容/ 主要/ 在/ 第/ 6/ 节/ 介绍/ ./ 最后/ ,/ 第/ 7/ 节/ 介绍/ 了/ 相关/ 工作/ ,/ 第/ 8/ 节对/ 本文/ 工作/ 进行/ 了/ 总结/ ./ 2/ 微/ 函数/ 依赖/ R/ 是/ 一个/ 关系/ 模式/ ,/ {/ A1/ ,/ A2/ ,/ …/ ,/ An/ }/ 是/ R/ 上/ 的/ 属性/ 集合/ ,/ 记作/ attr/ (/ R/ )/ ./ 对于/ attr/ (/ R/ )/ 中/ 的/ 每个/ 属性/ Ai/ ,/ 都/ 有/ 相应/ 的/ 域/ dom/ (/ Ai/ )/ ./ R/ 上/ 的/ 一个/ 实例/ r/ 是/ 指/ 一个/ 有限/ 的/ 元组/ 集合/ :/ r/ / dom/ (/ A1/ )/ ×/ …/ ×/ dom/ (/ An/ )/ ./ 元组/ t/ 和/ 属性/ A/ 构成/ 一个/ 元组/ -/ 属性/ 对/ ,/ 表示/ t/ 在/ A/ 上/ 的/ 值/ ,/ 称之为/ 单元格/ ,/ 记作/ t/ [/ A/ ]/ ./ 函数/ 依赖/ 是/ 形如/ X/ →/ Y/ 的/ 规则/ ,/ 其中/ X/ ,/ Y/ 均/ 为/ 属性/ 集合/ ,/ 其/ 语义/ 为/ R/ 上/ 的/ 实例/ r/ 应/ 满足/ :/ 对于/ r/ 中/ 的/ 任意/ 两条/ 元组/ s/ ,/ t/ ,/ 如果/ s/ [/ X/ ]/ =/ t/ [/ X/ ]/ ,/ 则/ 应该/ 有/ s/ [/ Y/ ]/ =/ t/ [/ Y/ ]/ ./ 在下文/ 中/ ,/ 将/ 称/ “/ →/ ”/ 之前/ 的/ 部分/ (/ 即/ X/ )/ 为/ 约束/ 前/ 件/ ,/ 之后/ 的/ 部分/ (/ 即/ Y/ )/ 为/ 约束/ 后件/ ./ 条件/ 函数/ 依赖/ 是/ 在/ 函数/ 依赖/ 的/ 基础/ 上/ ,/ 增加/ 了/ 常量/ 条件/ ,/ 比如/ [/ A/ =/ a/ ,/ B/ ]/ →/ C/ 表示/ ,/ 如果/ r/ 中有/ 两条/ 元组/ 在/ A/ 属性/ 上/ 的/ 值/ 相等/ 且/ 都/ 为/ a/ ,/ 在/ B/ 属性/ 上值/ 也/ 相等/ ,/ 那么/ 这/ 两条/ 元组/ 在/ C/ 上/ 也/ 应/ 相等/ ,/ 否则/ 说/ r/ 不/ 满足/ 该条/ 约束/ ./ 下面/ ,/ 将/ 介绍/ 提取/ 函数/ 的/ 概念/ ,/ 并/ 定义/ 两种/ 类型/ 的/ 微/ 函数/ 依赖/ :/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ 和/ 固有/ 微/ 函数/ 依赖/ ./ 2.1/ 提取/ 函数/ 为了/ 表示/ 部分/ 属性/ 之间/ 的/ 关系/ ,/ 本文/ 引入/ 提取/ 函数/ 的/ 概念/ ./ 对/ attr/ (/ R/ )/ 中/ 的/ 每个/ 属性/ A/ ,/ 都/ 有/ 一个/ 相应/ 的/ 提取/ 函数/ 集/ FA/ =/ {/ f/ 每个/ 提取/ 函数/ 都/ 可以/ 看成/ 是/ 由/ 属性/ A/ 得到/ 的/ 新/ 的/ 属性/ ,/ 称之为/ A/ 上/ 的/ 导出/ 属性/ ,/ 其/ 属性/ 值/ 由/ 相应/ 元组/ 、/ 函数/ 语义/ 以及/ 属性/ A/ 共同/ 确定/ :/ 元组/ t/ 在/ f/ 的/ 值/ 为/ f/ 一/ ,/ 本文/ 将/ f/ 中/ 的/ 每个/ 提取/ 函数/ f/ 都/ 定义/ 在/ A/ 的/ 域/ 的/ 子集/ 上/ ,/ 即/ dom/ (/ f/ )/ / dom/ (/ A/ )/ ./ 特别/ 的/ ,/ iA/ 是/ dom/ (/ A/ )/ 上/ 的/ 恒等/ 函数/ ,/ 也/ 就是/ iA/ =/ A/ ,/ 即/ 对于/ 所有/ 的/ a/ ∈/ dom/ (/ A/ )/ ,/ iA/ (/ a/ )/ =/ a/ ./ 如果/ a/ / dom/ (/ f/ )/ ,/ f/ (/ a/ )/ 上/ 无/ 定义/ ,/ 用/ 空值/ 来/ 表示/ 此/ 语义/ :/ f/ (/ a/ )/ =/ null/ ./ 不失/ 一般性/ ,/ 对于/ 两个/ 不同/ 的/ 属性/ A/ 和/ B/ ,/ 可以/ 认为/ FA/ ∩/ FB/ =/ / ./ 将/ R/ 中/ 涉及/ 到/ 的/ 所有/ 提取/ 函数/ 记/ 为/ 简便/ 起/ 见/ ,/ 在/ 不/ 引起/ 歧义/ 的/ 前提/ 下/ ,/ 可以/ 省略/ 上下/ 标/ ./ 对于/ 一个/ 提取/ 函数/ f/ ∈/ FA/ ,/ 其/ 相应/ 的/ 属性/ A/ 被/ 记作/ Att/ (/ f/ )/ ./ 为了/ 与/ 主流/ 数据库/ 中/ 函数/ 的/ 用法/ 相一致/ ,/ 本文/ 允许/ 函数/ 的/ 参数/ 为/ 一个/ 属性/ ,/ 或者/ 具体/ 的/ 值/ ./ 当/ 函数参数/ 是/ 一个/ 属性/ 的/ 时候/ ,/ 其/ 输出/ 是/ 一个/ 新/ Page4/ 的/ 属性/ ,/ 即/ 导出/ 属性/ ;/ 当/ 函数参数/ 是/ 一个/ 具体/ 值/ 的/ 时候/ ,/ 函数/ 输出/ 也/ 是/ 一个/ 具体/ 值/ ./ 例如/ SQL/ 中有/ 字符串/ 函数/ reverse/ (/ str/ )/ ,/ 表示/ 把/ str/ 中/ 的/ 所有/ 字符/ 反序/ ./ 例如/ ,/ 在/ 表/ 1/ 中/ 所示/ 的/ 数据库/ 上/ 执行/ 查询/ 语句/ :/ Q1/ :/ SelectEid/ ,/ Name/ ,/ reverse/ (/ Name/ )/ FromEmployee/ ;/ 得到/ 的/ 结果/ 如表/ 2/ 所示/ ./ Eid01M0000101S0000202M0000102S0001003M0000103S0000201S00003/ 查询/ 结果/ 仍然/ 是/ 一个/ 关系/ ,/ reverse/ (/ Name/ )/ 是/ 其中/ 一个/ 属性/ ,/ 而/ 每条/ 元组/ 在/ reverse/ (/ Name/ )/ 属性/ 上/ 对应/ 的/ 值/ ,/ 等于/ Name/ 属性/ 上/ 的/ 值取/ 反转/ 操作/ 得到/ ./ 例如/ reverse/ (/ Name/ )/ 在/ 第/ 1/ 条/ 元组/ 上/ 的/ 值/ 为/ reverse/ (/ Alice/ )/ ,/ 即/ ecilA/ ./ 实际上/ ,/ 每个/ 提取/ 函数/ f/ 都/ 从/ 相应/ 的/ 属性/ 中/ 提取/ 了/ 一部分/ 信息/ ,/ 它/ 可以/ 被/ 看做/ 一个/ 新/ 的/ 导出/ 属性/ ./ 微/ 函数/ 依赖/ 就是/ 定义/ 在/ 这些/ 导出/ 属性/ 上/ ,/ 从而/ 表示/ 部分/ 属性/ 之间/ 的/ 关系/ ./ 2.2/ 微/ 函数/ 依赖/ 和/ 函数/ 依赖/ 相比/ ,/ 微/ 函数/ 依赖/ 的/ 主要/ 区别/ 在于/ 它/ 定义/ 在/ 提取/ 函数/ 上/ ,/ 而/ 不是/ 直接/ 定义/ 在/ 属性/ 上/ ./ 类似/ 于/ 函数/ 依赖/ ,/ 一个/ 微/ 函数/ 依赖/ φ/ 具有/ 如下/ 的/ 形式/ :/ 其中/ fi/ ∈/ / 只有/ 恒等/ 函数/ 的/ 微/ 函数/ 依赖/ ./ 给定/ R/ 上/ 的/ 关系/ 实例/ r/ ,/ 如果/ 对于/ r/ 中/ 的/ 任意/ 两条/ 元组/ t1/ ,/ t2/ 都/ 满足/ :/ (/ 1/ )/ t1/ [/ f1/ ,/ f2/ ,/ …/ ,/ fk/ ]/ ≠/ t2/ [/ f1/ ,/ f2/ ,/ …/ ,/ fk/ ]/ ;/ 或/ (/ 2/ )/ t1/ [/ f0/ ]/ =/ t2/ [/ f0/ ]/ ./ 则/ 称/ r/ 关于/ φ/ 一致/ ,/ 或/ r/ 满足/ φ/ ,/ 记作/ r/ / φ/ ;/ 否则/ 称/ r/ 关于/ φ/ 不/ 一致/ ,/ 或/ r/ 不/ 满足/ φ/ ,/ 记作/ r/ / // φ/ ./ 对于/ 微/ 函数/ 依赖/ 集合/ Σ/ 来说/ ,/ 如果/ 对/ / φ/ ∈/ Σ/ ,/ r/ / φ/ 都/ 成立/ ,/ 则/ 称/ r/ 关于/ Σ/ 一致/ ,/ 或/ r/ 满足/ Σ/ ,/ 记作/ r/ / Σ/ ;/ 否则/ 称/ r/ 关于/ Σ/ 不/ 一致/ ,/ 或/ r/ 不/ 满足/ Σ/ ,/ 记作/ r/ / // Σ/ ./ 根据/ 语义/ 的/ 不同/ ,/ 微/ 函数/ 依赖/ 被/ 分为/ 两类/ :/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ (/ UMDs/ )/ 和/ 固有/ 微/ 函数/ 依赖/ (/ IMDs/ )/ ./ 前者/ 是/ 由/ 用户/ 定义/ 的/ ,/ 可能/ 会/ 被/ 违反/ ,/ 而/ 后者/ 是/ 由/ 提取/ 函数/ 的/ 定义/ 决定/ 的/ ,/ 永远/ 不会/ 被/ 违反/ ./ 2.2/ ./ 1/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ 顾名思义/ ,/ 此类/ 依赖/ 是/ 指/ 用户/ 希望/ 数据库/ 应该/ 满足/ 的/ 微/ 函数/ 依赖/ ./ 在/ 例/ 1/ 中/ ,/ Eid/ 的/ 前/ 两位/ 用来/ 识别/ 员工/ 所在/ 部门/ Dept/ ,/ 接下来/ 两位/ 表示/ 入职/ 日期/ EntryDate/ ,/ 第/ 5/ 位/ 表示/ 职位/ Position/ ./ 这些/ 规则/ 可以/ 分别/ 用微/ 函数/ 依赖/ 表示/ 为/ [/ prefix/ (/ Eid/ ,/ 2/ )/ ]/ →/ [/ Dept/ ]/ ,/ [/ substr/ (/ Eid/ ,/ 3/ ,/ 2/ )/ ]/ →/ [/ EntryDate/ ]/ 以及/ [/ charAt/ (/ Eid/ ,/ 5/ )/ ]/ →/ [/ Position/ ]/ ./ prefix/ (/ str/ ,/ len/ )/ 函数/ 返回/ str/ 串/ 的/ 前/ len/ 位/ ,/ substr/ (/ str/ ,/ begin/ ,/ len/ )/ 函数/ 返回/ str/ 串/ 从/ begin/ 位置/ 开始/ 且/ 长度/ 为/ len/ 的/ 子串/ ,/ charAt/ (/ str/ ,/ idx/ )/ 函数/ 返回/ str/ 串/ 第/ idx/ 位/ 的/ 字符/ ./ 这些/ 约束/ 都/ 是/ 由/ 用户/ 定义/ 的/ ,/ 属于/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ ,/ 当/ 数据/ 产生/ 错误/ 时/ ,/ 它们/ 有/ 可能/ 被/ 违反/ ./ 例/ 1/ 中/ 第/ 1/ 条/ 元组/ 和/ 最后/ 一条/ 元组/ 的/ Eid/ 前/ 两位/ 相同/ ,/ 应该/ 属于/ 同一/ 部门/ ,/ 但/ 两条/ 元组/ 的/ Dept/ 属性/ 值/ 不/ 相等/ ,/ 约束/ [/ prefix/ (/ Eid/ ,/ 2/ )/ ]/ →/ [/ Dept/ ]/ 被/ 违反/ ./ 另外/ ,/ 函数/ 依赖/ 和/ 条件/ 函数/ 依赖/ 都/ 可以/ 用微/ 函数/ 依赖/ 来/ 表示/ ./ 对于/ 函数/ 依赖/ ,/ 只/ 需要/ 把/ 其中/ 所有/ 的/ 属性/ 用/ 相应/ 恒等/ 函数/ 代替/ 即可/ ,/ 只是/ 形式/ 发生/ 了/ 变化/ ,/ 语义/ 未变/ ./ 例如/ [/ Name/ ,/ Dept/ ]/ →/ [/ Eid/ ]/ 可/ 表示/ 为/ [/ i1/ (/ Name/ )/ ,/ i2/ (/ Dept/ )/ ]/ →/ [/ i3/ (/ Eid/ )/ ]/ ,/ 其中/ i1/ ,/ i2/ ,/ i3/ 分别/ 为/ 相应/ 属性/ 上/ 的/ 恒等/ 函数/ ,/ 简便/ 起/ 见/ ,/ 本文/ 将/ 省略/ 这些/ 恒等/ 函数/ ,/ 例如/ [/ Name/ ,/ Dept/ ]/ →/ [/ Eid/ ]/ 就/ 可以/ 被/ 看作/ 一个/ 合法/ 的/ 微/ 函数/ 依赖/ ./ 为/ 表示/ 条件/ 函数/ 依赖/ ,/ 则/ 需要/ 利用/ 空值/ ,/ 并/ 认为/ “/ 空值/ 不/ 等于/ 任何/ 值/ ”/ ./ 例如/ 为了/ 用微/ 函数/ 依赖/ 表示/ 规则/ [/ Position/ =/ Manager/ ,/ Dept/ ]/ →/ [/ Eid/ ]/ ,/ 引入/ 提取/ 函数/ isManager/ (/ str/ )/ :/ isManager/ (/ str/ )/ =/ 等价/ 的/ 微/ 函数/ 依赖/ 就/ 可以/ 写成/ 如果/ 元组/ 的/ Position/ 属性/ 不/ 等于/ Manager/ ,/ 约束/ 前/ 件/ 出现/ 空值/ null/ ,/ 因为/ 空值/ 不/ 等于/ 任何/ 值/ ,/ 所以/ 该/ 元组/ 和/ 其它/ 元组/ 在/ 约束/ 前件/ 上/ 都/ 不会/ 相等/ ,/ 从而/ 不会/ 违反/ 该/ 约束/ ,/ 使得/ 该/ 约束/ 只/ 在/ 一部分/ 元组/ 上/ 起/ 作用/ ,/ 和/ 对应/ 的/ 条件/ 函数/ 依赖/ 是/ 等价/ 的/ ./ 在/ 例/ 1/ 中/ ,/ 上述/ 的/ 函数/ 依赖/ 和/ 条件/ 函数/ 依赖/ 都/ 未/ 被/ 违反/ ./ 而微/ 函数/ 依赖/ [/ prefix/ (/ Eid/ ,/ 2/ )/ ]/ →/ [/ Dept/ ]/ 被/ 违反/ ,/ 因为/ Alice/ ,/ Bob/ 和/ Gary/ 的/ Eid/ 属性/ 前缀/ 都/ 是/ 01/ ,/ 他们/ 应该/ 属于/ 同一个/ 部门/ ,/ 但是/ Gary/ 却/ 来自/ 不同/ 的/ 部门/ O/ &/ M/ ,/ 由此/ 可以/ 看出/ ,/ 微/ 函数/ 依赖/ 能够/ 检测/ 出/ 一些/ 已有/ 方法/ 忽略/ 掉/ 的/ 错误/ 数据/ ./ 至于/ 为什么/ 不/ 直接/ 把/ Page5/ 性/ fA/ ,/ 这样一来/ 微/ 函数/ 依赖/ 实际上/ 就/ 变成/ 了/ 普通/ 的/ 函数/ 依赖/ ,/ 本文/ 不/ 这样/ 做/ 的/ 原因/ 有/ 如下/ 几点/ :/ 首先/ ,/ 属性/ A/ 和/ fA/ 之间/ 的/ 映射/ 关系/ 由/ 函数/ f/ 的/ 定义/ 确定/ ,/ 如果/ 简单/ 的/ 把/ f/ (/ A/ )/ 看作/ 新/ 的/ 属性/ ,/ 这个/ 映射/ 信息/ 就/ 会/ 丢失/ ;/ 第二/ ,/ 引入/ 新/ 的/ 函数/ 依赖/ φ/ :/ A/ →/ f/ (/ A/ )/ ,/ 并/ 不能/ 彻底/ 地/ 表达/ A/ 和/ fA/ 之间/ 的/ 紧密/ 关系/ ,/ 因为/ f/ 把/ A/ 映射/ 到/ 一个/ 确定/ 的/ 值/ 上/ ,/ 而/ φ/ 仅仅/ 是/ 说/ 两条/ 元组/ 在/ 属性/ A/ 上/ 相等/ 也/ 应该/ 在/ fA/ 上/ 相等/ ,/ 而/ 不/ 知道/ 应该/ 等于/ 何值/ ,/ 例如/ ,/ 单条/ 元组/ 可能/ 不会/ 违反/ φ/ ,/ 却/ 有/ 可能/ 违反/ f/ 的/ 定义/ ;/ 最后/ ,/ 即使/ 可以/ 用/ 条件/ 函数/ 依赖/ [/ A/ =/ a/ ]/ →/ [/ fA/ =/ f/ (/ a/ )/ ]/ 表达/ 相同/ 的/ 语义/ ,/ 但/ 需要/ 对/ dom/ (/ A/ )/ 中/ 的/ 所有/ 值/ 分别/ 给出/ 条件/ 函数/ 依赖/ ,/ 这/ 是/ 不/ 可行/ 的/ ,/ 因为/ dom/ (/ A/ )/ 可能/ 很大/ ,/ 甚至/ 是/ 无穷的/ ,/ 这时/ 需要/ 用/ 无穷/ 多个/ 条件/ 函数/ 依赖/ 表达/ 相同/ 的/ 语义/ ,/ 是/ 不/ 现实/ 的/ ./ 本/ 小节/ 中/ 提到/ 的/ 规则/ 都/ 是/ 用户/ 定义/ 的/ ,/ 被/ 称为/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ (/ UMDs/ )/ ./ 从/ 例子/ 中/ 可知/ ,/ 当/ 数据/ 出现/ 错误/ 时/ ,/ 这些/ 约束/ 可能/ 被/ 违反/ ,/ 根据/ 违反/ 情况/ ,/ 可以/ 检测/ 出/ 数据/ 中/ 的/ 不/ 一致/ ./ 2.2/ ./ 2/ 固有/ 微/ 函数/ 依赖/ 考虑/ 单个/ 属性/ A/ ,/ 定义/ 在/ A/ 上/ 的/ 提取/ 函数/ 保留/ 了/ A/ 的/ 部分/ 信息/ ,/ 例如/ 字符串/ 属性/ A/ 的/ 前/ 两位/ 子串/ 保留/ 在/ prefix/ (/ A/ ,/ 2/ )/ 中/ ./ 如果/ 有/ 多个/ 提取/ 函数/ 定义/ 在/ A/ 上/ ,/ 这些/ 函数/ 保留/ 的/ 信息/ 之间/ 可能/ 互不/ 相交/ ,/ 或者/ 会/ 有/ 重叠/ ,/ 甚至/ 相互/ 包含/ ./ 这/ 就/ 导致/ 了/ 同一个/ 属性/ 上/ ,/ 不同/ 提取/ 函数/ 之间/ 的/ 依赖/ 关系/ ./ 例如/ 容易/ 得到/ 如下/ 依赖/ 关系/ :/ [/ i/ (/ A/ )/ ]/ →/ [/ prefix/ (/ A/ ,/ 4/ )/ ]/ 以及/ [/ prefix/ (/ A/ ,/ 4/ )/ ]/ →/ [/ prefix/ (/ A/ ,/ 2/ )/ ]/ ./ 两条/ 约束/ 分别/ 是/ 说/ ,/ 整个/ 属性/ 的/ 值/ 能够/ 确定/ 该/ 属性/ 值/ 的/ 前缀/ ,/ 长度/ 为/ 4/ 的/ 前缀/ 能/ 确定/ 长度/ 为/ 2/ 的/ 前缀/ ./ 对于/ 一个/ 整数/ 属性/ B/ ,/ 有/ [/ mod/ (/ B/ ,/ 2/ )/ ,/ mod/ (/ B/ ,/ 3/ )/ ]/ →/ [/ mod/ (/ B/ ,/ 6/ )/ ]/ 等/ ,/ 该/ 约束/ 的/ 含义/ 是/ ,/ 如果/ 整数/ 能/ 被/ 2/ 和/ 3/ 同时/ 整除/ ,/ 则/ 它/ 也/ 能够/ 被/ 6/ 整除/ ./ 另外/ ,/ 如果/ f1/ ,/ f2/ ∈/ FA/ ,/ dom/ (/ f1/ )/ ∩/ dom/ (/ f2/ )/ =/ / ,/ 即/ 对于/ 任意/ 元组/ t/ ,/ t/ (/ f1/ )/ 和/ t/ (/ f2/ )/ 至少/ 有/ 一个/ 为/ 空值/ ./ 为/ 表示/ 这/ 类/ 约束/ ,/ 为/ 每个/ 提取/ 函数/ f/ 引入/ 两个/ 域/ 函数/ f/ 定义/ 如下/ :/ 容易/ 看出/ 这/ 两个/ 域/ 函数/ 总是/ 取/ 不同/ 的/ 值/ ,/ 前面/ f1/ 和/ f2/ 的/ 关系/ 就/ 可以/ 表示/ 为/ [/ f/ 表示/ 如果/ f1/ 和/ f2/ 有/ 一个/ 不/ 为/ 空值/ ,/ 那么/ 另/ 一个/ 就/ 一定/ 是/ 空值/ ./ 本文/ 用/ 符号/ 即/ / / =/ {/ f/ 容易/ 看出/ ,/ 本/ 小节/ 的/ 所有/ 约束/ 都/ 是/ 由/ 函数/ 的/ 定义/ 决定/ 的/ ,/ 与/ 数据/ 无关/ ,/ 也就是说/ ,/ 不管/ 数据/ 的/ 不/ 一致/ 程度/ 有/ 多/ 高/ ,/ 这些/ 约束/ 都/ 不会/ 被/ 违反/ ./ 由于/ 这些/ 约束/ 的/ 固有/ 特性/ ,/ 本文/ 称之为/ 固有/ 微/ 函数/ 依赖/ (/ IMDs/ )/ ./ 和/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ 不同/ ,/ 固有/ 微/ 函数/ 依赖/ 永远/ 不会/ 被/ 违反/ ,/ 因此/ 并/ 不/ 能够/ 直接/ 用来/ 发现/ 数据/ 中/ 的/ 错误/ ,/ 其/ 主要/ 作用/ 在于/ 对微/ 函数/ 依赖/ 的/ 推理/ 中/ ,/ 具体/ 用法/ 详见/ 第/ 3/ 、/ 4/ 节/ ./ 值得注意/ 的/ 是/ ,/ 一个/ 提取/ 函数/ 可以/ 定义/ 成/ 数学/ 表达式/ 、/ 字符串/ 表达式/ 或/ 甚至/ 一段/ 程序代码/ 等/ ,/ 自动/ 判断/ 固有/ 微/ 函数/ 依赖/ 的/ 工作/ 变得/ 几乎/ 不/ 可能/ 实现/ ./ 本文/ 重点/ 在于/ 分析/ 微/ 函数/ 依赖/ 的/ 性质/ ,/ 因此/ 在/ 后续/ 章节/ 中/ ,/ 若/ 无/ 特别/ 说明/ ,/ 都/ 假定/ 已经/ 知道/ 了/ 完备/ 的/ 固有/ 微/ 函数/ 依赖/ 集/ ./ 为了/ 加以/ 区分/ ,/ UMDs/ 集合/ 和/ IMDs/ 集合/ 被/ 分别/ 标记/ 为/ Σ/ U/ 和/ Σ/ I/ ./ 3/ 微/ 函数/ 依赖/ 的/ 静态/ 分析/ 微/ 函数/ 依赖/ 的/ 提出/ ,/ 是/ 为了/ 检测/ 出/ 更/ 多/ 的/ 错误/ 数据/ ./ 为了/ 更好/ 的/ 利用/ 已有/ 微/ 函数/ 依赖/ 集/ Σ/ ,/ 有/ 必要/ 判断/ Σ/ 自身/ 是否/ 存在/ 不/ 一致/ 和/ 冗余/ ,/ 即本节/ 将/ 讨论/ 的/ 可/ 满足/ 性/ 分析/ 以及/ 蕴含/ 性/ 分析/ ,/ 统称/ 为/ 静态/ 分析/ ./ 本节/ 重点/ 研究/ 了/ 可/ 满足/ 性/ 问题/ 和/ 蕴含/ 性/ 问题/ 各自/ 的/ 复杂性/ ./ 3.1/ 微/ 函数/ 依赖/ 的/ 可/ 满足/ 性/ 给定/ 关系/ 模式/ R/ 上/ 的/ Σ/ U/ 以及/ 完备/ 的/ Σ/ I/ ,/ 微/ 函数/ 依赖/ 的/ 可/ 满足/ 问题/ 是/ 指/ ,/ 判断/ 是否/ 存在/ 一个/ 非空/ 关系/ 实例/ r/ ,/ 使得/ r/ / Σ/ U/ ,/ 记作/ MD/ -/ SAT/ 问题/ ./ 为/ 便于/ 分析/ ,/ 用/ Σ/ d/ 表示/ 把/ Σ/ U/ 中/ 涉及/ 到/ 的/ 所有/ 提取/ 函数/ f/ 替换成/ 相应/ 的/ 域/ 函数/ f/ 集/ ./ 一个/ 直观/ 的/ 结论/ 就是/ Σ/ U/ 的/ 可/ 满足/ 性/ 与/ 其中/ 的/ 提取/ 函数/ 的/ 定义域/ 有关/ ,/ 而/ 与/ 具体/ 函数/ 值/ 无关/ ./ 引理/ 1/ ./ Σ/ U/ 可/ 满足/ 当且/ 仅/ 当/ Σ/ d/ 可/ 满足/ ./ 另外/ ,/ Σ/ d/ 可/ 满足/ 当且/ 仅/ 当/ 存在/ 一个/ 单元/ 组/ 关系/ 实例/ r/ ,/ 使得/ r/ / Σ/ d/ ./ 证明/ ./ 首先/ 证明/ Σ/ U/ 可/ 满足/ 当且/ 仅/ 当/ Σ/ d/ 可/ 满足/ :/ →/ :/ 需证/ 如果/ Σ/ U/ 可/ 满足/ ,/ 则/ Σ/ d/ 可/ 满足/ ./ 因/ Σ/ U/ 可/ 满足/ ,/ 一定/ 存在/ 一个/ 关系/ r/ ,/ 使得/ r/ / Σ/ U/ ./ 只要/ 证明/ r/ / Σ/ d/ ,/ 就/ 可以/ 得出/ Σ/ d/ 可/ 满足/ ./ 考虑/ r/ 中/ 的/ 任意/ 两条/ 元组/ t1/ 和/ t2/ 以及/ Σ/ d/ 中/ 的/ 任意/ 一条/ 约束/ φ/ dPage6/ ~/ 1/ ,/ f/ Σ/ U/ 中/ 对应/ 的/ 约束/ 为/ φ/ Ut1/ [/ f/ 不/ 等于/ 任何/ 值/ ,/ 所以/ 两条/ 元组/ 在/ f/ 的/ 值/ 均/ 不/ 为/ 空/ ./ 由/ 2.2/ ./ 2/ 节中/ 对域/ 函数/ 的/ 定义/ ,/ 容易/ 得出/ 元组/ t1/ 和/ t2/ 在/ f1/ ,/ f2/ ,/ …/ ,/ fl/ 上/ 的/ 值/ 也/ 都/ 不/ 为/ 空/ ./ 所以/ 有/ t1/ [/ f1/ ,/ f2/ ,/ …/ ,/ fl/ ]/ =/ t1/ [/ f1/ ,/ f2/ ,/ …/ ,/ fl/ ]/ ,/ 且/ t2/ [/ f1/ ,/ f2/ ,/ …/ ,/ fl/ ]/ =/ t2/ [/ f1/ ,/ f2/ ,/ …/ ,/ fl/ ]/ ,/ 又/ 因为/ r/ / Σ/ U/ ,/ 容易/ 得出/ t1/ [/ f0/ ]/ =/ t1/ [/ f0/ ]/ ,/ t2/ [/ f0/ ]/ =/ t2/ [/ f0/ ]/ ,/ 即/ t1/ 和/ t2/ 在/ f0/ 上/ 不/ 为/ 空/ ,/ 进而/ t1/ 和/ t2/ 在/ f/ 据/ 2.2/ ./ 2/ 节/ 的/ 定义/ ,/ 域/ 函数/ 只有/ null/ 和/ 1/ 两种/ 取值/ ,/ 所以/ t1/ [/ f/ 论/ :/ 如果/ Σ/ U/ 可/ 满足/ ,/ 则/ Σ/ d/ 可/ 满足/ ./ ←/ :/ 证/ 如果/ Σ/ d/ 可/ 满足/ ,/ 则/ Σ/ U/ 可/ 满足/ ./ 因/ Σ/ d/ 可/ 满足/ ,/ 一定/ 存在/ 一个/ 关系/ r/ ,/ 使得/ r/ / Σ/ d/ ./ 只要/ 构造/ 一个/ 关系/ r/ ,/ 并/ 证明/ r/ / Σ/ U/ ,/ 就/ 可以/ 得出/ Σ/ U/ 可/ 满足/ 的/ 结论/ ./ 令/ r/ 为/ r/ 的/ 一个/ 单/ 元素/ 子集/ ,/ 即/ r/ / r/ 且/ |/ r/ |/ =/ 1/ ./ 不失/ 一般性/ ,/ 可/ 假设/ r/ =/ {/ t/ }/ ./ 考虑/ Σ/ U/ 中/ 任意/ 一/ 条约/ :/ [/ f1/ ,/ f2/ ,/ …/ ,/ fl/ ]/ →/ f0/ ,/ 如果/ t/ [/ f1/ ,/ f2/ ,/ …/ ,/ fl/ ]/ =/ 束/ φ/ Ut/ [/ f1/ ,/ f2/ ,/ …/ ,/ fl/ ]/ ,/ 则/ 说明/ t/ 在/ f1/ ,/ f2/ ,/ …/ ,/ fl/ 上均/ 不为/ null/ ,/ 根据/ 2.2/ ./ 2/ 节中/ 对域/ 函数/ 的/ 定义/ ,/ 进而/ 得出/ t/ 在/ f/ ~/ ~/ ~/ ft/ [/ f1/ ,/ ft/ [/ f0/ ]/ =/ 1/ ,/ 可知/ t/ [/ f0/ ]/ 不为/ null/ ,/ 因此/ t/ [/ f0/ ]/ 是/ 一个/ 非空/ 的/ 确定/ 值/ ,/ 即/ 有/ t/ [/ f0/ ]/ =/ t/ [/ f0/ ]/ ,/ 得出/ r/ / Σ/ U/ ,/ 进而/ 得出结论/ :/ 如果/ Σ/ d/ 可/ 满足/ ,/ 则/ Σ/ U/ 可/ 满足/ ./ 1/ ,/ f2/ ,/ …/ ,/ f/ ~/ ~/ 然后/ 证明/ Σ/ d/ 可/ 满足/ 当且/ 仅/ 当/ 存在/ 一个/ 单元/ 组/ 关系/ r/ ,/ 使得/ r/ / Σ/ d/ ./ 如果/ 存在/ 一个/ 单元/ 组/ 关系/ r/ ,/ 使得/ r/ / Σ/ d/ ,/ 可以/ 直接/ 根据/ 可/ 满足/ 性/ 的/ 定义/ 得出结论/ :/ Σ/ d/ 可/ 满足/ ./ 如果/ Σ/ d/ 可/ 满足/ ,/ 则/ 一定/ 存在/ 关系/ r/ ,/ 使得/ r/ / Σ/ d/ ,/ 因此/ 对于/ r/ 中/ 任意/ 一条/ 元组/ t/ 和/ Σ/ d/ 中/ 的/ 任意/ 一条/ 约束/ φ/ d/ ~/ l/ ]/ =/ t/ [/ ff/ 造/ 单元/ 组/ 关系/ r/ =/ {/ t/ }/ ,/ 直接/ 得出/ r/ / Σ/ d/ ,/ 即/ 存在/ 一个/ 单元/ 组/ 关系/ r/ ,/ 使得/ r/ / Σ/ d/ ./ 综上/ 可/ 得/ ,/ Σ/ U/ 可/ 满足/ 当且/ 仅/ 当/ Σ/ d/ 可/ 满足/ ./ 另外/ ,/ Σ/ d/ 可/ 满足/ 当且/ 仅/ 当/ 存在/ 一个/ 单元/ 组/ 关系/ r/ ,/ 使得/ r/ / Σ/ d/ ./ 接下来/ 讨论/ ,/ 如果/ 有/ 一个/ 完备/ 的/ 固有/ 微/ 函数/ 依赖/ 集/ Σ/ I/ ,/ MD/ -/ SAT/ 问题/ 的/ 复杂性/ ./ 定理/ 1/ ./ 给定/ 完备/ 的/ Σ/ I/ ,/ MD/ -/ SAT/ 问题/ 是/ NP/ -/ 完全/ 的/ ./ 证明/ ./ 首先/ ,/ 微/ 函数/ 依赖/ 是/ 对/ 条件/ 函数/ 依赖/ 的/ 一般化/ ,/ 而/ 条件/ 函数/ 依赖/ 的/ 可/ 满足/ 性/ 问题/ 已经/ 被/ 证明/ 是/ NP/ -/ 完全/ 的/ ,/ 因此/ MD/ -/ SAT/ 问题/ 是/ NP/ -/ 难/ 的/ ./ 然后/ 证明/ MD/ -/ SAT/ 属于/ NP/ ,/ 为此/ ,/ 给出/ 一个/ 不/ 确定/ 算法/ 生成/ 只有/ 一个/ 虚拟/ 元组/ t/ 的/ 关系/ r/ ,/ 猜测/ t/ 在/ 每个/ 域/ 函数/ f/ 满足/ Σ/ d/ 和/ Σ/ I/ ,/ 若/ 满足/ ,/ 则/ 输出/ “/ 是/ ”/ ,/ 否则/ 输出/ “/ 否/ ”/ ./ 上述/ 工作/ 在/ 多项式/ 时间/ 内/ 完成/ ,/ 并/ 枚举/ 了/ 所有/ 的/ 可能/ 情况/ ,/ 因此/ MD/ -/ SAT/ 属于/ NP/ ./ 综上/ 可/ 得/ ,/ MD/ -/ SAT/ 是/ NP/ -/ 完全/ 的/ ./ 证毕/ ./ 上述/ 证明/ 并/ 没有/ 直接/ 猜测/ t/ 的/ 各/ 属性/ 上/ 的/ 值/ ,/ 因为/ 属性/ 域/ 可能/ 是/ 无穷的/ ,/ 不/ 满足/ 不/ 确定/ 图灵机/ 的/ 要求/ ./ 因此/ 对域/ 函数/ 随机/ 赋值/ ,/ 并/ 根据/ 来/ Σ/ I/ 验证/ 赋值/ 是否/ 合法/ ./ 不难看出/ ,/ 如果/ 的/ 赋值/ 就/ 有/ 2/ |/ / |/ 种/ ,/ 可以/ 在/ 常数/ 时间/ 内/ 枚举/ 完全/ ,/ 直接/ 可/ 得到/ 如下/ 结论/ ./ 定理/ 2/ ./ 如果/ 问题/ 是/ P/ 问题/ ./ 如果/ 一个/ 微/ 函数/ 依赖/ 集合/ Σ/ U/ 是/ 不可/ 满足/ 的/ ,/ 有/ 必要/ 给出/ 有效/ 算法/ 来/ 找出/ Σ/ U/ 的/ 一个/ 子集/ Σ/ U/ ,/ 并/ 使/ |/ Σ/ U/ |/ 最大化/ ./ 本文/ 将/ 该/ 问题/ 称为/ “/ 微/ 函数/ 依赖/ 的/ 最大/ 可/ 满足/ 子集/ ”/ 问题/ ,/ 记为/ MAXMSAT/ 问题/ ./ 由于/ MD/ -/ SAT/ 本身/ 是/ NP/ -/ 完全/ 的/ ,/ 属于/ 难解/ 问题/ ,/ 因此/ MAXMSAT/ 问题/ 更加/ 困难/ ,/ 因此/ 需要/ 考虑/ 近似算法/ ./ 只要/ 找到/ 一个/ 保留/ 近似/ 因子/ 的/ 归约/ 方法/ ,/ 从/ MAXMSAT/ 归约/ 到/ 已有/ 的/ 可/ 近似/ 问题/ ,/ 就/ 能够/ 说明/ MAXMSAT/ 是/ 可/ 近似/ 的/ ./ 本文/ 将/ 其/ 归约/ 到/ MAXGSAT/ 问题/ ,/ 即/ 一般化/ 的/ 极大/ 可/ 满足/ 问题/ (/ MaximumGeneralizedSatisfiability/ )/ ,/ 而/ 对于/ 该/ 问题/ ,/ 已经/ 有/ 近似算法/ ./ MAXGSAT/ 问题/ 简单/ 描述/ 如下/ :/ 给定/ 一个/ 布尔/ 表达式/ 的/ 集合/ Φ/ =/ {/ / 1/ ,/ / 2/ ,/ …/ ,/ / n/ }/ ,/ 找出/ 一个/ 变量/ 赋值/ ,/ 使得/ Φ/ 中为/ 真的/ 表达式/ 数量/ 最大/ ./ 归约/ 过程/ 包含/ 两个/ 多项式/ 时间/ 可/ 计算/ 的/ 函数/ g/ 和/ h/ ,/ 使得/ 对/ 任意/ 一个/ 微/ 函数/ 依赖/ 集合/ Σ/ U/ ,/ 满足/ :/ (/ 1/ )/ g/ (/ Σ/ U/ )/ 是/ MAXGSAT/ 问题/ 的/ 一个/ 实例/ Φ/ Σ/ ,/ 即/ 一个/ 根据/ Σ/ U/ 计算/ 得到/ 的/ 一个/ 布尔/ 表达式/ 集合/ ,/ 且/ (/ 2/ )/ 如果/ Φ/ m/ 是/ Φ/ Σ/ 的/ 一个/ 可/ 满足/ 子集/ ,/ 则/ h/ (/ Φ/ m/ )/ 是/ Σ/ U/ 的/ 一个/ 可/ 满足/ 子集/ ,/ 且/ (/ 3/ )/ |/ OPTg/ (/ g/ (/ Σ/ U/ )/ )/ |/ / |/ OPTm/ (/ Σ/ U/ )/ |/ ,/ 且/ (/ 4/ )/ |/ h/ (/ Φ/ m/ )/ |/ / |/ Φ/ m/ |/ 其中/ OPTg/ (/ g/ (/ Σ/ U/ )/ )/ 是/ MAXGSAT/ 问题/ 的/ 最优/ 解/ ,/ OPTm/ (/ Σ/ U/ )/ 是/ MAXMSAT/ 问题/ 的/ 最优/ 解/ ,/ 结合/ 第/ (/ 3/ )/ 、/ (/ 4/ )/ 条中/ 的/ 不等式/ ,/ 很/ 显然/ 如果/ MAXGSAT/ 有/ 一个/ 近似/ 比/ 为/ ε/ 的/ 算法/ ,/ 通过/ 归约/ ,/ 也/ 能够/ 得到/ Page7MAXMSAT/ 问题/ 的/ 近似/ 比/ 为/ ε/ 的/ 算法/ ./ 首先/ 考虑/ 如何/ 根据/ 给定/ 的/ Σ/ U/ ,/ 以及/ 完备/ 的/ 固有/ 函数/ 依赖/ 集/ Σ/ I/ ,/ 构造/ g/ (/ Σ/ U/ )/ ./ 对/ 每/ 一个/ 导出/ 函数/ f/ ,/ 引入/ 一个/ 布尔/ 变量/ xf/ 来/ 表示/ f/ 是否/ 实例/ 化为/ 空值/ null/ ./ 对/ Σ/ I/ 中/ 的/ 每/ 一个/ 微/ 函数/ 依赖/ φ/ ,/ 则/ 可以/ 用/ 一个/ 析取/ 式/ / φ/ 来/ 表示/ φ/ 是否/ 被/ 满足/ ./ 如果/ f/ 的/ 左边/ ,/ 或者/ f/ 入到/ / φ/ 中/ ./ 如果/ f/ 在/ “/ →/ ”/ 的/ 右边/ ,/ 则/ 将/ 变量/ xf/ 加入/ 到/ / φ/ 中/ ./ 例如/ ,/ 对于/ 固有/ 的/ 微/ 函数/ 依赖/ f/ 件/ 之一/ ,/ 约束/ 即/ 被/ 满足/ :/ (/ 1/ )/ f1/ 被/ 实例/ 化为/ 空/ ,/ 或/ (/ 2/ )/ f2/ 被/ 实例/ 化为/ 空/ ,/ 或/ (/ 3/ )/ f3/ 被/ 实例/ 化为/ 非空/ ,/ 或/ (/ 4/ )/ f4/ 被/ 实例/ 化为/ 非空/ ./ 对应/ 的/ 布尔/ 表达式/ / φ/ 就是/ :/ x/ -/ 特别/ 的/ ,/ 固有/ 微/ 函数/ 依赖/ 集/ Σ/ I/ 是/ 永远/ 不会/ 被/ 违反/ 的/ ,/ 用/ 布尔/ 表达式/ 来/ 表示/ Σ/ I/ 是否/ 被/ 满足/ ./ 对于/ 每/ 一个/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ φ/ ∈/ Σ/ U/ ,/ 其/ 构造/ 方式/ 和/ 固有/ 微/ 函数/ 依赖/ 类似/ ,/ 不同之处/ 在于/ 要/ 给/ 整个/ 布尔/ 表达式/ 和/ ψ/ I/ 作/ ,/ 例如/ 有/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ f/ 其/ 对应/ 的/ 布尔/ 表达式/ / φ/ 为/ (/ x/ -/ ,/ 这样/ ,/ 得到/ ψ/ Ih/ 函数/ 和/ g/ 函数/ 相反/ ,/ 是/ 把/ 布尔/ 表达式/ 映射/ 为/ 微/ 函数/ 依赖/ ,/ 对于/ 一个/ 布尔/ 表达式/ 集合/ Φ/ m/ / Φ/ Σ/ ,/ h/ (/ Φ/ m/ )/ 定义/ 为/ 集合/ {/ φ/ |/ / φ/ ∈/ Φ/ m/ }/ ./ 很/ 显然/ ,/ 函数/ g/ 和/ h/ 都/ 能够/ 在/ 多项式/ 时间/ 内/ 计算/ 出/ ./ 且/ 通过/ 归约/ 过程/ 可知/ ,/ g/ (/ Σ/ U/ )/ 是/ MAXGSAT/ 问题/ 的/ 一个/ 实例/ ,/ 条件/ (/ 1/ )/ 被/ 满足/ ./ 如果/ / φ/ ∈/ Φ/ m/ 被/ 某个/ 赋值/ 满足/ ,/ 则/ 在/ 对应/ 的/ 微/ 函数/ 依赖/ 中/ ,/ 要么/ “/ →/ ”/ 左边/ 的/ 提取/ 函数/ 不/ 满足要求/ ,/ 要么/ “/ →/ ”/ 右边/ 的/ 提取/ 函数/ 满足要求/ ,/ 而且/ 所有/ 固有/ 微/ 函数/ 依赖/ 都/ 被/ 满足/ ,/ 从而/ 使得/ 存在/ 一个/ 元组/ 满足/ 该微/ 函数/ 依赖/ ,/ 条件/ (/ 2/ )/ 被/ 满足/ ./ 另外/ ,/ 从/ 归约/ 过程/ 可以/ 看出/ 每/ 一条/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ 都/ 对应/ 一个/ 不同/ 的/ 布尔/ 表达式/ ,/ 二者/ 是/ 一一对应/ 的/ ,/ 且/ 布尔/ 表达式/ 被/ 满足/ 当且/ 仅/ 当/ 对应/ 的/ 微/ 函数/ 依赖/ 被/ 满足/ ,/ 因此/ MAXGSAT/ 和/ MAXMSAT/ 问题/ 的/ 最优/ 解/ 大小/ 是/ 相等/ 的/ ,/ 条件/ (/ 3/ )/ 被/ 满足/ ./ 同时/ 由于/ 二者/ 的/ 一一对应/ 关系/ 可知/ |/ h/ (/ Φ/ m/ )/ |/ =/ |/ Φ/ m/ |/ ,/ 条件/ (/ 4/ )/ 被/ 满足/ ./ 综上/ 可知/ ,/ 上述/ 归约/ 过程/ 是/ 保留/ 近似/ 比/ 的/ ,/ 因此/ 对于/ MAXMSAT/ 问题/ 存在/ 一个/ 多项式/ 时间/ 的/ 近似算法/ ./ 3.2/ 微/ 函数/ 依赖/ 的/ 蕴含/ 性/ 不同于/ 可/ 满足/ 性/ 分析/ ,/ 蕴含/ 性/ 分析/ 的/ 目的/ 是/ 为了/ 消除/ 冗余/ ./ 给定/ R/ 上微/ 函数/ 依赖/ 集/ Σ/ =/ Σ/ U/ ∪/ Σ/ I/ 以及/ 一条/ 微/ 函数/ 依赖/ φ/ ,/ 其中/ Σ/ I/ 是/ 完备/ 的/ 固有/ 函数/ 依赖/ 集/ ,/ 判断/ Σ/ 是否/ 蕴含/ φ/ ./ Σ/ 蕴含/ φ/ 当且/ 仅/ 当/ 对于/ R/ 上/ 的/ 任意/ 实例/ r/ ,/ 如果/ r/ / Σ/ ,/ 一定/ 有/ r/ / φ/ ./ 记作/ Σ/ / φ/ ./ 记微/ 函数/ 依赖/ 的/ 蕴含/ 问题/ 为/ IMP/ -/ MD/ 问题/ ./ 为了/ 研究/ 其/ 复杂性/ 类/ ,/ 首先/ 给出/ 如下/ 引理/ ./ 引理/ 2/ ./ 给定/ Σ/ 和/ φ/ ,/ 存在/ 一个/ 实例/ r/ 使得/ r/ / Σ/ 且/ r/ / // φ/ ,/ 当且/ 仅/ 当/ 存在/ 一个/ 不/ 超过/ 两条/ 元组/ 的/ 实例/ r/ 使得/ r/ / Σ/ 且/ r/ / // φ/ ./ 证明/ ./ 从/ 两个/ 方向/ 分别/ 证明/ ./ ←/ :/ 显然/ ,/ 如果/ 存在/ 一个/ 不/ 超过/ 两元/ 组/ 的/ 实例/ r/ 满足/ r/ / Σ/ 且/ r/ / // φ/ ,/ 直接/ 令/ r/ =/ r/ ,/ 立即/ 得到/ r/ / Σ/ 且/ r/ / // φ/ ./ →/ :/ 假设/ 存在/ 一个/ 实例/ r/ 满足/ r/ / Σ/ 且/ r/ / // φ/ ,/ 因为/ r/ / // φ/ ,/ 由/ / // 符号/ 的/ 含义/ 可知/ r/ 中/ 一定/ 存在/ 两条/ 元组/ t1/ ,/ t2/ 共同/ 违反/ φ/ ,/ 即/ {/ t1/ ,/ t2/ }/ / // φ/ ./ 另外/ ,/ 因为/ r/ / Σ/ ,/ 不难/ 得出/ r/ 的/ 任意/ 一个/ 子集/ 仍然/ 满足/ Σ/ ,/ 所以/ {/ t1/ ,/ t2/ }/ / Σ/ ./ 直接/ 令/ r/ =/ {/ t1/ ,/ t2/ }/ ,/ 此/ 部分/ 得证/ ./ 证毕/ ./ 因此/ ,/ 要/ 判断/ Σ/ / φ/ 是否/ 成立/ ,/ 只/ 需要/ 考虑/ 所有/ 不/ 超过/ 两条/ 元组/ 的/ 实例/ 即可/ ./ 定理/ 3/ ./ IMP/ -/ MD/ 问题/ 是/ CoNP/ -/ 完全/ 的/ ./ 证明/ ./ 由于/ 已知/ 微/ 函数/ 依赖/ 是/ 对/ 条件/ 函数/ 依赖/ 的/ 一般化/ ,/ 而且/ 条件/ 函数/ 依赖/ 的/ 蕴含/ 问题/ 是/ CoNP/ -/ 完全/ 的/ ,/ 可/ 直接/ 得出/ IMP/ -/ MD/ 问题/ 是/ CoNP/ -/ 难/ 的/ ./ 接下来/ 证明/ IMP/ -/ MD/ 问题/ 属于/ CoNP/ ,/ 给出/ 一个/ 不/ 确定/ 算法/ 生成/ 有/ 两条/ 虚拟/ 元组/ t1/ ,/ t2/ 的/ 关系/ r/ ,/ 对/ 每个/ 提取/ 函数/ f/ ,/ 算法/ 猜测/ t1/ ,/ t2/ 在/ f/ 取值/ 的/ 不同/ 组合/ :/ (/ 1/ )/ t1/ (/ f/ )/ =/ t2/ (/ f/ )/ ,/ 或/ (/ 2/ )/ t1/ (/ f/ )/ ≠/ t2/ (/ f/ )/ 且/ 二者/ 都/ 不/ 为/ 空值/ ,/ 或/ (/ 3/ )/ t1/ (/ f/ )/ ≠/ null/ 且/ t2/ (/ f/ )/ =/ null/ ,/ 或/ (/ 4/ )/ t1/ (/ f/ )/ =/ null/ 且/ t2/ (/ f/ )/ ≠/ null/ ,/ 或/ (/ 5/ )/ t1/ (/ f/ )/ =/ null/ 且/ t2/ (/ f/ )/ =/ null/ ./ 赋值/ 结束/ 后/ ,/ 算法/ 分别/ 判断/ r/ 是否/ 满足/ Σ/ 和/ φ/ ,/ 如果/ 在/ 不/ 确定/ 算法/ 的/ 所有/ 猜测/ 路径/ 上/ 都/ 有/ :/ (/ 1/ )/ r/ / // Σ/ ,/ 或/ (/ 2/ )/ r/ / φ/ ./ 则/ 输出/ “/ 是/ ”/ ,/ 否则/ 输出/ “/ 否/ ”/ ./ 上述/ 过程/ 在/ 多项式/ 时间/ 内/ 枚举/ 了/ 所有/ 可能/ 组合/ ,/ 所以/ IMP/ -/ MD/ 属于/ CoNP/ ./ Page8/ 综上/ 可/ 得/ ,/ IMP/ -/ MD/ 是/ CoNP/ -/ 完全/ 的/ ./ 证毕/ ./ 不难看出/ ,/ 如果/ 合/ 就/ 有/ 5/ |/ / |/ 种/ ,/ 可以/ 在/ 常数/ 时间/ 内/ 枚举/ 完全/ ,/ 直接/ 可/ 得到/ 如下/ 结论/ ./ 定理/ 4/ ./ 如果/ 题/ 是/ P/ 问题/ ./ 4/ 微/ 函数/ 依赖/ 的/ 公理/ 系统/ Armstrong/ 公理/ 是/ 函数/ 依赖/ 中/ 蕴含/ 分析/ 的/ 基础/ 工具/ ./ 类似/ 的/ ,/ 本文/ 给出/ 微/ 函数/ 依赖/ 的/ 推理/ 系统/ ,/ 记/ ,/ 如表/ 3/ 所示/ ./ 给定/ 一个/ 微/ 函数/ 依赖/ 集/ Σ/ 和/ 一条/ 为/ 微/ 函数/ 依赖/ φ/ ,/ 如果/ 能够/ 从/ Σ/ 根据/ 为/ Σ/ ├/ I/ φ/ ./ / 规则/ 名/ 规则/ 1/ ./ 如果/ f/ ∈/ F/ ,/ 则/ F/ →/ f/ ./ 规则/ 2/ ./ 规则/ 3/ ./ 规则/ 4/ ./ 规则/ 5/ ./ [/ f/ 规则/ 1/ 和/ 2/ 分别/ 对应/ Armstrong/ 公理/ 中/ 的/ 自反律/ 和/ 传递/ 律/ ./ 规则/ 3/ 是/ 指/ 约束/ 后件/ 是/ 一个/ 域/ 函数/ ,/ 那么/ 约束/ 前件/ 中/ 的/ 函数/ 都/ 能/ 简化/ 为域/ 函数/ ./ 规则/ 4/ 是/ 指/ ,/ 在/ g/ 空/ 与非/ 空/ 的/ 情况/ 下/ ,/ F/ 都/ 能够/ 决定/ f/ ,/ 那么/ F/ 可以/ 和/ g/ 对应/ 的/ 属性/ 共同/ 决定/ f/ ./ 规则/ 5/ 是/ 指/ ,/ 如果/ 约束/ 前件/ 中/ 有/ 矛盾/ ,/ 那么/ 它/ 可以/ 决定/ 任意/ 函数/ ./ 接下来/ 讨论/ 定理/ 5/ ./ 微/ 函数/ 依赖/ 的/ 推理/ 系统/ 即/ 若/ 有/ Σ/ ├/ / φ/ ,/ 则/ 有/ Σ/ / φ/ ./ 证明/ ./ / 规则/ 都/ 是/ 正确/ 的/ ,/ 因此/ 只/ 需/ 分别/ 证明/ 各条/ 推理/ 规则/ 的/ 正确性/ ./ 规则/ 1/ ./ 对于/ r/ 中/ 任意/ 两条/ 元组/ s/ ,/ t/ ,/ 如果/ s/ [/ F/ ]/ =/ t/ [/ F/ ]/ ,/ 已知/ f/ ∈/ F/ ,/ 一定/ 有/ s/ [/ f/ ]/ =/ t/ [/ f/ ]/ ./ 得出/ r/ / (/ F/ →/ f/ )/ ./ 规则/ 2/ ./ 对/ 任一/ 实例/ r/ ,/ 如果/ r/ / {/ F/ →/ f1/ ,/ …/ ,/ F/ →/ fk/ ,/ [/ f1/ ,/ …/ ,/ fk/ ]/ →/ f/ }/ ,/ 需/ 证明/ r/ / (/ F/ →/ f/ )/ ./ 对/ r/ 中/ 的/ 任意/ 两条/ 元组/ s/ 和/ t/ ,/ 如果/ s/ [/ F/ ]/ =/ t/ [/ F/ ]/ ,/ 则/ 有/ s/ [/ fi/ ]/ =/ t/ [/ fi/ ]/ ,/ i/ =/ 1/ ,/ 2/ ,/ …/ ,/ k/ ./ 即/ s/ [/ f1/ ,/ f2/ ,/ …/ ,/ fk/ ]/ =/ t/ [/ f1/ ,/ f2/ ,/ …/ ,/ fk/ ]/ ,/ 从而/ 可以/ 得出/ s/ [/ f/ ]/ =/ t/ [/ f/ ]/ ./ 得证/ r/ / (/ F/ →/ f/ )/ ./ 规则/ 3/ ./ 对于/ 任意/ 实例/ r/ / (/ [/ F/ ,/ g/ ]/ →/ f/ 中/ 任意/ 元组/ t/ 使得/ t/ [/ F/ ,/ 珟/ g/ ]/ 不/ 含/ 空值/ ,/ 一定/ 有/ t/ [/ 珟/ f/ ]/ 不/ 为/ 空值/ ,/ 否则/ t/ [/ F/ ,/ g/ ]/ =/ t/ [/ F/ ,/ g/ ]/ 而/ t/ [/ fr/ / (/ [/ F/ ,/ g/ ]/ →/ f/ 总是/ 1/ ./ 因此/ r/ 中/ 任意/ 两条/ 元组/ ,/ 若/ 在/ [/ F/ ,/ 珟/ g/ ]/ 上/ 相等/ ,/ 也/ 必然/ 在/ f/ 过程/ 类似/ ./ 规则/ 4/ ./ 根据/ 域/ 函数/ 的/ 定义/ 可知/ ,/ f/ 二者/ 有且/ 仅/ 有/ 一个/ 等于/ 1/ ./ 对/ 任意/ 实例/ r/ ./ 如果/ r/ / {/ [/ F/ ,/ 珟/ g/ ]/ →/ f/ ,/ [/ F/ ,/ 珚/ g/ ]/ →/ f/ }/ ./ 对于/ r/ 中/ 任意/ 两条/ 元组/ t/ ,/ s/ ./ 如果/ t/ [/ F/ ,/ Att/ (/ g/ )/ ]/ =/ s/ [/ F/ ,/ Att/ (/ g/ )/ ]/ ,/ 有/ t/ [/ 珘/ g/ ]/ =/ s/ [/ 珘/ g/ ]/ =/ 1/ 或/ t/ [/ 珚/ g/ ]/ =/ s/ [/ 珚/ g/ ]/ =/ 1/ ./ 如果/ 是/ 第/ 1/ 种/ 情况/ ,/ 可/ 由/ r/ 满足/ [/ F/ ,/ 珘/ g/ ]/ →/ f/ 得出/ t/ [/ f/ ]/ =/ s/ [/ f/ ]/ ,/ 否则/ ,/ 可/ 由/ r/ 满足/ [/ F/ ,/ 珔/ g/ ]/ →/ f/ 得出/ t/ [/ f/ ]/ =/ s/ [/ f/ ]/ ./ 得证/ r/ / (/ [/ F/ ,/ Att/ (/ g/ )/ ]/ →/ f/ )/ ./ 规则/ 5/ ./ 实例/ r/ 中/ 的/ 任何/ 两条/ 元组/ s/ ,/ t/ 在/ [/ f/ 上/ 都/ 不会/ 相等/ ,/ 因为/ f/ 依赖/ [/ f/ ~/ ,/ f/ 综上/ ,/ MDs/ 的/ 推理/ 系统/ 在/ 证明/ 完备/ 性/ 之前/ ,/ 先/ 定义/ 合法/ 集/ 的/ 概念/ ,/ 如果/ 一个/ 域/ 函数/ 集合/ S/ 满足/ :/ 对于/ 任意/ f/ ∈/ / 仅/ 有/ 一个/ 属于/ S/ ,/ 则/ 称/ S/ 是/ 合法/ 的/ ,/ 记/ 所有/ 合法/ 集/ 的/ 集合/ 为/ VC/ ./ 给定/ 一个/ 函数/ 集合/ W/ ,/ VC/ 在/ W/ 上/ 的/ 投影/ 记/ 为/ 表示/ 已知/ W/ 中/ 的/ 值/ 全部/ 取非/ 空值/ 时/ ,/ 剩余/ 的/ 所有/ 域/ 函数/ 所/ 构成/ 的/ 全部/ 可能/ 赋值/ ./ 算法/ 1/ ./ m/ -/ CLOSURE/ 算法/ ./ 输入/ :/ 一个/ 微/ 函数/ 依赖/ 集/ Σ/ 和/ 一个/ 函数/ 集/ F/ ./ 输出/ :/ F/ 关于/ Σ/ 的/ 闭包/ Σ/ / 1/ ./ result/ ·/ ·/ =/ F/ ;/ 2/ ./ REPEAT3/ ./ cf/ +/ ·/ ·/ =/ / ∩/ 4/ ./ cd/ +/ ·/ ·/ =/ / / ∩/ ∩/ 5/ ./ result/ ·/ ·/ =/ result/ ∪/ cf/ +/ ∪/ cd/ +/ 6/ ./ UNTILresult/ 不再/ 发生变化/ 7/ ./ RETURNresult/ ;/ 过程/ 1/ ./ closure/ 过程/ ./ 输入/ :/ 一个/ 微/ 函数/ 依赖/ 集/ Σ/ 和/ 一个/ 函数/ 集/ F/ ./ 输出/ :/ F/ 关于/ Σ/ 的/ 单步/ 闭包/ 1/ ./ result/ ·/ ·/ =/ F/ ;/ 2/ ./ IFresult/ 包含/ 冲突/ THEN3/ ./ result/ ·/ ·/ =/ / ∪/ / / 4/ ./ ELSE5/ ./ REPEAT6/ ./ IF/ (/ G/ →/ g/ )/ ∈/ Σ/ ANDg/ 不是/ 域/ 函数/ THENPage97/ ./ IFG/ / resultTHEN8/ ./ result/ ·/ ·/ =/ result/ ∪/ {/ g/ }/ ;/ 9/ ./ ENDIF10/ ./ ELSEIF/ (/ G/ →/ g/ )/ ∈/ Σ/ ANDg/ 是域/ 函数/ THEN11/ ./ IF/ 对/ G/ 中/ 的/ 每个/ h/ 都/ 有/ 珘/ h/ ∈/ resultTHEN12/ ./ result/ ·/ ·/ =/ result/ ∪/ {/ g/ }/ ;/ 13/ ./ ENDIF14/ ./ ENDIF15/ ./ UNTILresult/ 不再/ 发生变化/ 16/ ./ ENDIF17/ ./ RETURNresult/ ;/ 定理/ 6/ ./ 微/ 函数/ 依赖/ 的/ 推理/ 系统/ 即/ 若/ 有/ Σ/ / φ/ ,/ 则/ 有/ Σ/ ├/ I/ φ/ ./ 证明/ ./ 类似/ 于/ 函数/ 依赖/ ,/ 首先/ 给出/ 一个/ 算法/ m/ -/ CLOSURE/ ,/ 以/ Σ/ 和/ F/ 为/ 输入/ ,/ 输出/ 一个/ 提取/ 函数/ 集/ ,/ 记/ 为/ Σ/ / 数/ 的/ 集合/ (/ 称为/ F/ 的/ 闭包/ )/ ./ 算法/ 1/ 的/ 第/ 3/ ,/ 4/ 行是/ 枚举/ 域/ 函数/ 的/ 所有/ 可能/ 取值/ ,/ 并/ 把/ 闭包/ 集合/ 求交/ ./ 是/ 为了/ 模拟/ 规则/ 4/ ,/ 不断/ 把/ 符合/ 规则/ 4/ 里/ 的/ f/ 添加/ 到/ 闭/ 包里/ ./ 注意/ 这里/ 枚举/ 的/ 数量/ 是/ 指数/ 级/ 的/ ,/ 虽然/ 效率/ 很/ 低/ ,/ 但是/ 该/ 算法/ 只是/ 为了/ 辅助/ 证明/ ,/ 并/ 不/ 真是/ 为了/ 计算/ 闭包/ 而/ 设计/ 的/ ./ 为/ 证明/ 完备/ 性/ ,/ 先/ 证明/ 如果/ Σ/ / φ/ ,/ 那么/ f/ ∈/ m/ (/ F/ )/ ,/ 再/ 证明/ 如果/ f/ ∈/ Σ/ / Σ/ / 等于/ F/ →/ f/ ./ m/ (/ F/ )/ 有/ s/ [/ g/ ]/ ≠/ t/ [/ g/ ]/ ./ 对于/ 每个/ 微/ 函数/ 依赖/ 对于/ 第/ 1/ 步/ ,/ 等价/ 于/ 证明/ 其/ 逆反/ 命题/ :/ 如果/ f/ / m/ (/ F/ )/ ,/ 那么/ Σ/ / // φ/ ./ 考虑/ 一个/ 实例/ r/ =/ {/ s/ ,/ t/ }/ ,/ 使得/ 对/ Σ/ / 于/ 所有/ 的/ g/ ∈/ Σ/ / g/ / Σ/ / G/ →/ g/ ∈/ Σ/ ,/ 如果/ G/ ∈/ Σ/ / 也/ 会/ 被/ 加入/ 到/ Σ/ / 函数/ 依赖/ ,/ 即/ r/ / Σ/ ./ 同时/ ,/ 算法/ m/ -/ CLOSURE/ 的/ 初始化/ 步骤/ 保证/ 了/ F/ / Σ/ / m/ (/ F/ )/ ,/ 得出/ r/ / // φ/ 进而/ Σ/ / // φ/ ./ Σ/ / 对于/ 第/ 2/ 步/ ,/ 首先/ 证明/ 对于/ 所有/ 的/ f/ ∈/ closure/ (/ Σ/ ,/ F/ )/ ,/ Σ/ ├/ / 3/ ,/ 8/ 和/ 12/ 行/ 加入/ 到/ closure/ (/ Σ/ ,/ F/ )/ 中/ ./ 如果/ 是/ 在/ 第/ 1/ 行/ 加入/ ,/ 规则/ 1/ 可以/ 保证/ Σ/ ├/ / 行/ ,/ 规则/ 5/ 保证/ Σ/ ├/ / 可/ 保证/ Σ/ ├/ / 保证/ Σ/ ├/ / 接下来/ ,/ 证明/ 对于/ 所有/ 的/ f/ ∈/ Σ/ / 这里/ 简单/ 介绍/ 大概/ 证明/ 思路/ ./ 一个/ 函数/ f/ 只会/ 在/ 算法/ 1/ 的/ 第/ 1/ ,/ 3/ ,/ 4/ 行/ 进入/ Σ/ / 则/ 1/ 可以/ 保证/ Σ/ ├/ / 的/ 使用/ 规则/ 4/ 可以/ 将/ 被/ 加入/ 到/ result/ 中/ 的/ 函数/ 被/ 推出/ ,/ 并/ 最终/ 保证/ Σ/ ├/ / 的/ 使用/ 规则/ 3/ 和/ 4/ 将/ 加入/ 到/ result/ 的/ 域/ 函数/ 被/ 推出/ ,/ 并/ 最终/ 保证/ Σ/ ├/ / 5/ 不/ 一致/ 数据/ 检测/ 数据/ 清洗/ 的/ 第一步/ ,/ 就是/ 快速/ 有效/ 的/ 检测/ 出/ 数据/ 中/ 的/ 不/ 一致/ ./ 本节/ 简要/ 介绍/ 检测/ 数据/ 违反/ 微/ 函数/ 依赖/ 的/ 技术/ ./ 给定/ R/ 上/ 的/ 一个/ 关系/ 实例/ r/ ,/ 一个/ 微/ 函数/ 依赖/ 集/ Σ/ ,/ 需要/ 检测/ 出/ r/ 中/ 违反/ Σ/ 的/ 所有/ 元组/ ./ 本节/ 首先/ 讨论/ 如何/ 利用/ SQL/ 查询/ 检测/ 不/ 一致/ 元组/ ,/ 然后/ 给出/ 更/ 有效/ 的/ 、/ 基于/ 排序/ 的/ 检测/ 方法/ ./ 5.1/ 基于/ SQL/ 查询/ 的/ 方法/ 给定/ 一个/ 微/ 函数/ 依赖/ φ/ :/ [/ f1/ ,/ f2/ ,/ …/ ,/ fl/ ]/ →/ f0/ ,/ 可以/ 通过/ SQL/ 语句/ Q1/ 选择/ 出/ 所有/ 违反/ φ/ 的/ 元组/ :/ Q1/ :/ SELECTf1/ ,/ f2/ ,/ …/ ,/ fl/ 例如/ 在/ Employee/ 关系/ 中/ ,/ Eid/ 的/ 前/ 两位/ 决定/ 员工/ 所在/ 部门/ ,/ 即/ prefix/ (/ Eid/ ,/ 2/ )/ →/ dept/ ,/ 查询/ 语句/ 就/ 可以/ 写成/ :/ Q2/ :/ SELECTprefix/ (/ Eid/ ,/ 2/ )/ asPrefix/ ,/ Employee/ 关系/ 中/ 第/ 1/ 、/ 2/ 、/ 7/ 条/ 元组/ 的/ 两位/ 前缀/ 都/ 相同/ ,/ 聚集/ 到/ 同一个/ 组/ 里/ ,/ 而且/ 3/ 条/ 元组/ 在/ dept/ 属性/ 上/ 有/ 2/ 个/ 不同/ 值/ :/ R/ &/ D/ 和/ O/ &/ M/ ./ 这/ 3/ 条/ 元组/ 被/ 检测/ 出来/ ./ 5.2/ 基于/ 排序/ 的/ 方法/ SQL/ 语句/ 检测/ 不/ 一致/ 的/ 方法/ 简单易行/ ,/ 但/ 其/ 缺点/ 是/ 需要/ 先/ 将/ 数据/ 导入到/ 数据库/ 中/ ./ 而且/ 上述/ 语句/ 只能/ 找到/ 违反/ 约束/ 的/ 元组/ ,/ 并/ 不/ 能够/ 准确/ 定位/ 到/ 是/ 元组/ 上/ 的/ 哪个/ 属性/ 值/ 违反/ 了/ 约束/ ./ 本文/ 提出/ 基于/ 排序/ 的/ 方法/ ,/ 很/ 容易/ 地/ 避免/ 了/ 这些/ 问题/ ./ 其/ 大致/ 思想/ 是/ 把/ 所有/ 的/ 元组/ 按照/ 约束/ 前/ 件/ 排序/ ,/ 在/ 约束/ 前件/ 上/ 相等/ 的/ 元组/ 被/ 聚集/ 到/ 了/ 一起/ ,/ 然后/ 检查/ 这些/ 在/ 前件/ 上/ 相等/ 的/ 元组/ 在/ 约束/ 后件/ 上/ 是否/ 全都/ 相等/ ./ 利用/ 排序/ 的/ 方法/ 还有/ 一个/ 好处/ ,/ 就是/ 在/ 检测/ 多/ Page10/ 条/ 约束/ 的/ 时候/ ,/ 在/ 一定/ 条件/ 下/ 可以/ 进行/ 约束/ 之间/ 共享/ 排序/ 操作/ 的/ 优化/ ./ 假设/ 有/ 关系/ 实例/ r/ =/ {/ t1/ ,/ t2/ ,/ …/ ,/ tn/ }/ ,/ 用户/ 定义/ 的/ 微/ 函数/ 依赖/ φ/ 1f2/ ,/ 固有/ 微/ 函数/ 依赖/ φ/ I/ 的/ 依赖/ 关系/ ,/ 只/ 需要/ 进行/ 一次/ 排序/ ,/ 就/ 可以/ 完成/ 对/ φ/ 1/ :/ f1/ →/ f1/ 和/ φ/ 2/ 定理/ 7/ ./ 已知/ R/ 上/ 有/ 固有/ 函数/ 依赖/ φ/ / f2/ ,/ 对于/ R/ 上/ 的/ 任意/ 一个/ 实例/ r/ ,/ 存在/ 对/ r/ 中/ 所有/ 元组/ 的/ 一种/ 排序/ ,/ 使得/ 在/ f1/ 和/ f2/ 上值/ 相等/ 的/ 元组/ 都/ 连续/ ./ 证明/ ./ 只/ 需要/ 构造/ 一种/ 排序/ ,/ 使得/ r/ 满足/ 在/ f1/ 和/ f2/ 上值/ 相等/ 的/ 元组/ 都/ 相邻/ :/ 以/ f2/ 为/ 第/ 1/ 关键字/ ,/ f1/ 为/ 第/ 2/ 关键字/ ,/ 将/ 所有/ 元组/ 从小到大/ 排序/ ./ 因为/ f2/ 是/ 第一/ 排序/ 关键字/ ,/ 因此/ 在/ f2/ 上/ 相等/ 的/ 所有/ 元组/ 一定/ 是/ 连续/ 的/ ./ 另外/ ,/ 对于/ r/ 中/ 任意/ 两条/ 在/ f1/ 上值/ 相等/ 的/ 两条/ 元组/ t1/ 和/ t2/ ,/ 排序/ 之后/ 的/ 元组/ 如下/ 所示/ :/ 因为/ t1/ 和/ t2/ 在/ f1/ 上/ 的/ 值/ 相等/ ,/ 即/ a1/ =/ a2/ ,/ 由/ 固有/ 微/ 函数/ 依赖/ φ/ I/ 等/ ,/ 即/ b1/ =/ b2/ ./ 又/ 由于/ f2/ 是/ 第/ 1/ 排序/ 关键字/ ,/ 所以/ 对/ 任意/ 位于/ t1/ 和/ t2/ 之间/ 的/ 元组/ t/ 来说/ ,/ 其/ 在/ f2/ 上/ 的/ 值/ 也/ 和/ t1/ 和/ t2/ 相等/ ,/ 即/ b/ =/ b1/ =/ b2/ ,/ 因此/ t1/ 到/ t2/ 之间/ 的/ 所有/ 元组/ 在/ f2/ 上值/ 相等/ ./ 同时/ 因为/ f1/ 是/ 第/ 2/ 排序/ 关键字/ ,/ 所以/ t1/ 到/ t2/ 之间/ 的/ 所有/ 元组/ 在/ f1/ 上/ 是/ 有序/ 的/ ./ 由/ a1/ =/ a2/ 可知/ ,/ a/ =/ a1/ =/ a2/ ,/ 即/ 证明/ 了/ 在/ f1/ 上值/ 相等/ 的/ 所有/ 元组/ ,/ 也/ 都/ 是/ 连续/ 的/ ./ 元组/ 在/ f1/ 和/ f2/ 有序/ 之后/ ,/ 只/ 需/ 一遍/ 顺序/ 扫描/ ,/ 就/ 能/ 检测/ 出/ 违反/ φ/ 1/ 组/ :/ 对于/ 相邻/ 元组/ t1/ 和/ t2/ ,/ 如果/ 它们/ 在/ f1/ (/ 或/ f2/ )/ 上值/ 相等/ ,/ 只/ 需要/ 判断/ 它们/ 在/ f1/ (/ 或/ f2/ )/ 上/ 的/ 值/ 是否/ 也/ 相等/ ,/ 如果/ 不/ 等/ ,/ 则/ 输出/ 在/ f1/ (/ 或/ f2/ )/ 上值/ 等于/ t1/ [/ f1/ ]/ (/ 或/ t1/ [/ f2/ ]/ )/ 的/ 所有/ 元组/ ./ 6/ 实验/ 结果/ 及/ 分析/ 本文/ 在/ 真实/ 数据/ 上/ 进行/ 试验/ ,/ 验证/ 微/ 函数/ 依赖/ 与/ 函数/ 依赖/ 以及/ 条件/ 函数/ 依赖/ 相比/ 在/ 检测/ 数据/ 错误/ 时/ 的/ 覆盖率/ 以及/ 性能/ ./ 6.1/ 实验/ 环境/ 和/ 数据/ 集/ 实验/ 环境/ :/ 英特尔/ 酷睿/ 双核/ E7500/ @/ 2.93/ GHz/ 处理器/ ,/ 金士顿/ DDR32GB1333MHz/ 内存/ ,/ 日立/ 320GB7200/ 转/ 硬盘/ ./ 采用/ MicrosoftWindows7/ 操作系统/ ,/ 开发/ 环境/ 为/ MicrosoftVisualStudio2008/ ./ 实验/ 数据/ 集/ 采用/ 一个/ 扩展/ 的/ Employee/ 表/ (/ 见表/ 1/ )/ ,/ 包括/ 10/ 万条/ 元组/ ,/ 8/ 个/ 属性/ :/ Eid/ (/ 员工/ 编号/ )/ ,/ Name/ (/ 员工/ 姓名/ )/ ,/ Dept/ (/ 所在/ 部门/ )/ ,/ Position/ (/ 职位/ )/ ,/ EntryDate/ (/ 入职/ 日期/ )/ ,/ Salary/ (/ 薪水/ )/ ,/ Phone/ (/ 电话号码/ )/ 和/ City/ (/ 所在城市/ )/ ./ 在/ Employee/ 上/ ,/ 有/ 10/ 条微/ 函数/ 依赖/ φ/ 0/ ~/ φ/ 9/ 其中/ 前/ 3/ 条是/ 函数/ 依赖/ ,/ φ/ 3/ 所示/ ./ 函数/ SubStr/ (/ str/ ,/ idx/ ,/ len/ )/ 用来/ 从/ str/ 中/ 的/ idx/ 位置/ 开始/ ,/ 提取/ 长度/ 为/ len/ 的/ 子串/ ./ AreaCode/ 用来/ 从/ 电话号码/ 中/ 提取/ 区/ 号/ ./ LessThanOneYear/ (/ date/ )/ 是/ 判断/ 日期/ date/ 距今/ 是否/ 小于/ 一年/ ./ 所有/ 的/ 这些/ 函数/ 都/ 能够/ 在/ 常数/ 时间/ 内/ 计算出来/ ./ φ/ 4/ ~/ φ/ 7/ 不同/ 位置/ 的/ 子串/ 具有/ 不同/ 的/ 含义/ ./ φ/ 8/ 的/ 部分/ 信息/ (/ 区/ 号/ )/ 可以/ 决定/ 员工/ 所在城市/ ./ φ/ 9/ 所有/ 工作/ 不满/ 一年/ 的/ 员工/ 只能/ 获得/ 相同/ 的/ 基本工资/ ./ 为了/ 进行/ 错误/ 检测/ ,/ 首先/ 往/ Employee/ 表中/ 引入/ 错误/ ,/ 并/ 得到/ 脏/ 数据表/ errEmp/ ./ 对/ 每/ 一个/ 单元格/ ,/ 其值/ 以/ 概率/ ep/ (/ 5/ %/ ~/ 10/ %/ )/ 发生/ 改变/ ,/ 这种/ 改变/ 可以/ 是/ 用表中/ 已有/ 值/ 替换/ ,/ 也/ 可以/ 随机/ 变化/ (/ 字符串/ 的/ 插入/ 删除/ 或/ 替换/ 字符/ 操作/ ,/ 数值/ 的/ 增加/ 误差/ 操作/ )/ ,/ 两种/ 方式/ 各/ 占/ 一半/ 的/ 概率/ ./ :/ [/ Eid/ ]/ →/ [/ Name/ ,/ Dept/ ,/ Position/ ,/ EntryDate/ ,/ Salary/ ,/ Phone/ ,/ City/ ]/ ;/ :/ [/ Dept/ ,/ City/ ,/ Name/ ]/ →/ [/ Eid/ ,/ Position/ ,/ EntryDate/ ,/ Salary/ ,/ Phone/ ]/ ;/ :/ [/ Phone/ ]/ →/ [/ City/ ]/ ;/ :/ [/ IsManeger/ (/ Position/ )/ ,/ Dept/ ,/ City/ ]/ →/ [/ Eid/ ,/ Name/ ,/ Entry/ -/ Date/ ,/ Salary/ ,/ Phone/ ]/ ;/ :/ [/ Substr/ (/ Eid/ ,/ 1/ ,/ 2/ )/ ]/ →/ [/ City/ ]/ ;/ :/ [/ Substr/ (/ Eid/ ,/ 3/ ,/ 2/ )/ ]/ →/ [/ EntryDate/ ]/ ;/ :/ [/ Substr/ (/ Eid/ ,/ 5/ ,/ 2/ )/ ]/ →/ [/ Dept/ ]/ ;/ :/ [/ Substr/ (/ Eid/ ,/ 7/ ,/ 1/ )/ ]/ →/ [/ Position/ ]/ ;/ :/ [/ AreaCode/ (/ Phone/ )/ ]/ →/ [/ City/ ]/ ;/ :/ [/ LessThanOneYear/ (/ EntryDate/ )/ ]/ →/ [/ Salary/ ]/ ;/ φ/ 0/ φ/ 1/ φ/ 2/ φ/ 3/ φ/ 4/ φ/ 5/ φ/ 6/ φ/ 7/ φ/ 8/ φ/ 96.2/ 覆盖率/ errEmp/ 中/ 发生/ 错误/ 的/ 单元格/ 集合/ 记作/ ERRORs/ ./ 如果/ 几个/ 单元格/ 共同/ 违反/ 了/ 一个/ 约束/ φ/ ,/ 称/ 这/ 几个/ 单元格/ 被/ 约束/ φ/ 检测/ 出来/ ,/ φ/ 能够/ 检测/ 出来/ 的/ 所有/ 单元格/ 记为/ Detected/ φ/ ,/ 则/ φ/ 的/ 覆盖率/ 为/ Coverage/ φ/ =/ |/ Detected/ φ/ ∩/ ERRORs/ |/ // |/ ERRORs/ |/ ./ 类似/ 的/ ,/ 对于/ 一个/ 依赖/ 集/ Σ/ :/ Page11Coverage/ Σ/ =/ 经过/ 10/ 次/ 独立/ 的/ 运行/ ,/ 得到/ 函数/ 依赖/ 、/ 条件/ 函数/ 依赖/ 和/ 微/ 函数/ 依赖/ 各自/ 覆盖率/ 平均值/ ,/ 结果/ 如图/ 2/ 、/ 图/ 3/ 所示/ ,/ 可以/ 看出/ 微/ 函数/ 依赖/ 可以/ 检测/ 出/ 多得多/ 的/ 错误/ ./ 注意/ 在/ 本文/ 中/ ,/ FDs/ / CFDs/ / MDs/ ,/ 意味着/ φ/ 4/ ~/ φ/ 9/ 到/ 函数/ 依赖/ 和/ 条件/ 函数/ 依赖/ 覆盖率/ 的/ 曲线/ 几乎/ 是/ 重合/ 的/ ,/ 这/ 是因为/ 二者/ 只/ 相差/ 一个/ φ/ 3/ 的/ 元组/ 很少/ ./ 图/ 3/ 覆盖率/ 随/ 出错/ 概率/ 的/ 变化/ ,/ 元组/ 条数/ =/ 5/ ×/ 1046.3/ 性能/ 为/ 检测/ 错误/ 数据/ ,/ 本文/ 采用/ 基于/ 排序/ 的/ 方法/ 检测/ 约束/ 被/ 违反/ 的/ 情况/ ./ 对比/ 了/ 不同/ 类型/ 约束/ 下/ 的/ 时间/ 开销/ ,/ 并/ 对比/ 了/ 优化/ 前后/ 的/ 时间/ 效率/ ./ 给定/ 一个/ 微/ 函数/ 依赖/ φ/ ,/ 首先/ 以/ φ/ 的/ 约束/ 前件/ 为/ 排序/ 键/ ,/ 并/ 检查/ 相邻/ 的/ 所有/ 元组/ ./ 不难/ 得出/ 此/ 方法/ 能够/ 正确/ 地/ 检测/ 出/ 所有/ 不/ 一致/ 数据/ ,/ 且/ 复杂度/ 为/ O/ (/ nlog/ (/ n/ )/ )/ ,/ 其中/ n/ 是/ 元组/ 条数/ ./ 图/ 4/ 和/ 图/ 5/ 描述/ 了/ 每/ 检测/ 一条/ 约束/ 所花/ 的/ 平均/ 时间/ ./ 可以/ 看出/ 微/ 函数/ 依赖/ 比/ 函数/ 依赖/ 的/ 代价/ 稍/ 高/ ,/ 主要/ 是因为/ 计算/ 提取/ 函数/ 的/ 时候/ 稍微/ 耗时/ ./ 注意/ 到/ 条件/ 函数/ 依赖/ 的/ 时间/ 开销/ 比较/ 低/ ,/ 主要/ 是因为/ 唯一/ 的/ 条件/ 函数/ 依赖/ φ/ 3/ 匹配/ 到/ 很少/ 的/ 数据/ ./ 图/ 4/ 检测/ 一条/ 约束/ 平均/ 时间/ 随/ 元组/ 数/ 的/ 变化/ ,/ 错误率/ =/ 5/ %/ 图/ 5/ 检测/ 一条/ 约束/ 平均/ 时间/ 随/ 出错/ 概率/ 的/ 变化/ ,/ 图/ 6/ 描述/ 了/ 每/ 发现/ 一个/ 错误/ 数据/ ,/ 所花/ 的/ 平均/ 时间/ ,/ 从图/ 中/ 可以/ 看出/ ,/ 微/ 函数/ 依赖/ 在/ 单个/ 错误/ 上/ 的/ 平均/ 时间/ 开销/ 和/ 条件/ 函数/ 依赖/ 接近/ ,/ 远/ 低于/ 函数/ 依赖/ ./ 即微/ 函数/ 依赖/ 均摊/ 到/ 每个/ 错误/ 上/ 的/ 时间/ 成本/ 是/ 远远/ 低于/ 函数/ 依赖/ 和/ 条件/ 函数/ 依赖/ 的/ ./ 图/ 6/ 发现/ 一个/ 错误/ 的/ 平均/ 运行/ 时间/ 随/ 元组/ 数/ 的/ 变化/ ,/ Page12/ 在/ 共享/ 排序/ 的/ 实验/ 中/ ,/ 约束/ φ/ 0/ 之间/ 是/ 可以/ 进行/ 排序/ 共享/ 的/ ./ 图/ 7/ 和/ 图/ 8/ 显示/ 了/ φ/ 8/ 在/ 微/ 函数/ 依赖/ 的/ 冲突检测/ 中/ ,/ 共享/ 排序/ 的/ 优化/ 策略/ 对/ 时间/ 开销/ 的/ 影响/ ,/ 可以/ 看出/ 优化/ 效果/ 还是/ 十分/ 明显/ 的/ ,/ 大约/ 节省/ 20/ %/ 的/ 时间/ ./ 图/ 7/ 优化/ 技术/ 对/ 运行/ 速度/ 的/ 影响/ :/ 检测/ 一条/ 约束/ 平均/ 时间/ 随/ 元组/ 数/ 的/ 变化/ ,/ 错误率/ =/ 5/ %/ 图/ 8/ 优化/ 技术/ 对/ 运行/ 速度/ 的/ 影响/ :/ 检测/ 一条/ 约束/ 平均/ 时间/ 随/ 出错/ 概率/ 的/ 变化/ ,/ 元组/ 条数/ =/ 50000/ 从/ 上述/ 实验/ 结果/ 可以/ 看到/ ,/ 在/ 可/ 接受/ 的/ 时间/ 代价/ 内/ ,/ 微/ 函数/ 依赖/ 能够/ 检测/ 出比/ 以前/ 方法/ 多得多/ 的/ 错误/ 数据/ ./ 而且/ 本文/ 提出/ 的/ 基于/ 排序/ 的/ 方法/ 在/ 经过/ 排序/ 操作/ 共享/ 的/ 优化/ 之后/ ,/ 时间/ 效率/ 有/ 很/ 明显/ 的/ 提高/ ./ 7/ 相关/ 工作/ 为了/ 解决/ 数据/ 的/ 不/ 一致/ 问题/ ,/ 已有/ 研究/ 主要/ 有/ 两个/ 方向/ ,/ 第一个/ 方向/ 是/ 找出/ 一个/ 满足/ 依赖/ 的/ 最小/ 修复/ [/ 15/ ]/ ,/ 此处/ “/ 最小/ ”/ 的/ 含义/ 是/ ,/ 删除/ 或/ 插入/ 最少/ 的/ 元组/ ,/ 或者/ 更改/ 最少/ 的/ 属性/ 值/ ,/ 或者/ 产生/ 最小/ 的/ 修复/ 代价/ ./ 这些/ 方法/ 都/ 被/ 证明/ 是/ 难解/ 问题/ ./ 另一类/ 方法/ 是/ 一致/ 查询/ [/ 16/ ]/ ,/ 其/ 含义/ 是/ :/ 给定/ 一个/ 查询/ ,/ 找出/ 该/ 查询/ 在/ 所有/ 极小/ 修复/ 上/ 查询/ 结果/ 的/ 交集/ ./ 很/ 显然/ ,/ 这种/ 方法/ 比/ 前者/ 的/ 复杂性/ 更高/ ./ 为了/ 解决/ 传统/ 函数/ 依赖/ 和/ 条件/ 函数/ 依赖/ 修复/ 数据/ 的/ 难点/ ,/ 文献/ [/ 10/ ,/ 17/ -/ 18/ ]/ 主要/ 研究/ 了/ 基于/ 编辑/ 规则/ 和/ 主/ 数据/ 的/ 编辑/ 距离/ 的/ 数据/ 修复/ 方法/ ,/ 这种/ 规则/ 假定/ 主/ 数据/ 是/ 完整/ 而且/ 正确/ 的/ ,/ 如果/ 一条/ 元组/ 与/ 主/ 数据/ 中/ 的/ 某条/ 元组/ 在/ 某些/ 特定/ 属性/ 上/ 的/ 值/ 满足/ 一定/ 的/ 距离/ 限制/ ,/ 那么/ 它/ 在/ 另外/ 某/ 属性/ 上/ 也/ 应该/ 和/ 主/ 数据/ 相同/ ./ 基于/ 主/ 数据/ 和/ 编辑/ 距离/ 的/ 方法/ 不仅/ 能够/ 方便/ 快速/ 地/ 发现/ 数据/ 错误/ ,/ 还/ 能够/ 直观/ 地/ 指导/ 数据/ 修复/ ,/ 避免/ 了/ (/ 条件/ )/ 函数/ 依赖/ 方法/ 中/ 的/ 修复/ 难解/ 问题/ ./ 然而/ ,/ 这种/ 方法/ 的/ 假定/ 场景/ 比较/ 强/ ,/ 它/ 需要/ 存在/ 一个/ 完全/ 可靠/ 的/ 高质量/ 主/ 数据/ ,/ 而/ 在/ 实际/ 应用/ 中/ ,/ 这样/ 的/ 条件/ 是/ 未必/ 能够/ 满足/ 的/ ./ 此外/ ,/ 同一/ 研究组/ 又/ 提出/ 了/ 能够/ 得到/ 可靠/ 修复/ 的/ 修复/ 规则/ [/ 11/ ]/ ,/ 并/ 对/ 其/ 可/ 满足/ 性/ 做/ 了/ 分析/ ./ 修复/ 规则/ 在/ 包含/ 约束/ 语义/ 的/ 同时/ ,/ 还/ 包含/ 了/ 如何/ 进行/ 修复/ 的/ 信息/ ,/ 比如/ ,/ 关系/ 模式/ (/ 国家/ ,/ 首都/ )/ 上/ 的/ 规则/ (/ “/ 中国/ ”/ ,/ {/ “/ 上海/ ”/ ,/ “/ 香港/ ”/ }/ ,/ “/ 北京/ ”/ )/ 表示/ 的/ 语义/ 是/ ,/ 如果/ 国家/ 名称/ 为/ “/ 中国/ ”/ ,/ 首都/ 名称/ 为/ “/ 上海/ ”/ 或者/ “/ 香港/ ”/ ,/ 那么/ 这/ 条/ 记录/ 是/ 错误/ 的/ ,/ 因为/ 可以/ 看出/ 该/ 记录/ 是/ 关于/ 中国/ 的/ ,/ 那么/ 首都/ 应该/ 被/ 修改/ 成/ “/ 北京/ ”/ ./ 修复/ 依赖/ 同/ 基于/ 主/ 数据/ 的/ 编辑/ 规则/ 类似/ ,/ 也/ 是/ 把/ 大量/ 的/ 可靠/ 信息/ 引入/ 规则/ 中/ ,/ 从而/ 保障/ 能够/ 得到/ 确定/ 可靠/ 的/ 修复/ 结果/ ./ 除此之外/ ,/ 还有/ 更/ 多/ 的/ 约束/ 类型/ 被/ 提出/ 来/ :/ 文献/ [/ 13/ ]/ 提出/ 了/ “/ 差分/ 依赖/ ”/ ,/ 它/ 描述/ :/ 如果/ 两个/ 元组/ 在/ 某/ 一个/ 属性/ 上值/ 的/ 距离/ 足够/ 近/ ,/ 那么/ 在/ 另外/ 一个/ 属性/ 上/ ,/ 它们/ 的/ 值/ 也/ 足够/ 接近/ ,/ 例如/ :/ 约束/ [/ Date/ (/ / 7/ )/ ]/ →/ [/ Price/ (/ </ 100/ )/ ]/ 表示/ 7/ 天/ 之内/ 物品/ 的/ 价格/ 波动/ 不/ 能够/ 超过/ 100/ 元/ ./ 文章/ 首先/ 解决/ 了/ 几个/ 理论/ 问题/ :/ 差分/ 函数/ 之间/ 的/ 包含/ 关系/ 、/ 蕴含/ 问题/ 、/ 闭包/ 、/ 正确/ 且/ 完备/ 的/ 推理/ 系统/ 、/ 极小/ 覆盖/ 等/ ./ 并/ 证明/ 了/ 这类/ 依赖/ 的/ 挖掘/ 问题/ 属于/ 难解/ 问题/ ,/ 给出/ 启发式/ 搜索算法/ 以及/ 有效/ 的/ 剪枝/ 策略/ ./ 为了/ 研究/ 数据/ 空间/ 中/ 异构/ 数据/ 之间/ 的/ 数据/ 依赖/ ,/ 文献/ [/ 14/ ]/ 定义/ 了/ 一个/ 一般化/ 的/ 约束/ 形式/ :/ 可/ 比较/ 约束/ ./ 它/ 制定/ 了/ 可比/ 属性/ 之间/ 的/ 约束/ ./ 它/ 包含/ 了/ 一个/ 数据库/ 领域/ 的/ 一个/ 广泛/ 约束/ 类/ ./ 包括/ 函数/ 依赖/ ,/ 度量/ 函数/ 依赖/ 等/ ./ 文章/ 研究/ 了/ 约束/ 的/ 可/ 满足/ 性/ ,/ 证明/ 它/ 是/ 难解/ 问题/ ,/ 并/ 给出/ 贪心/ 和/ 随机/ 算法/ 计算/ 最大/ 可/ 满足/ 性子/ 集/ ./ 文献/ [/ 19/ ]/ 针对/ 异构/ 数据源/ 中/ 由/ 数据格式/ 不/ 一致/ 引发/ 的/ 一致性/ 错误/ ,/ 利用/ 描述/ 属性/ 值/ 相似性/ 测度/ 扩充/ 了/ 函数/ 依赖/ ,/ 用来/ 描述/ 异构/ 数据/ 的/ 一致性/ 约束/ ,/ 发现/ 和/ 修复/ 异构/ 数据/ 的/ 一致性/ 错误/ ./ 文献/ [/ 20/ ]/ 提出/ 了/ 空间/ 语义/ 完整性/ 约束/ 形式化/ 定义/ ,/ 能/ Page13/ 够/ 对/ 现实/ 中/ 的/ 约束/ 进行/ 统一/ 描述/ ,/ 是/ 对/ 传统/ 函数/ 依赖/ 和/ 包含/ 依赖/ 的/ 扩展/ ,/ 更/ 重要/ 的/ 是/ 考虑/ 了/ 空间/ 属性/ ,/ 对/ 空间/ 特征/ 之间/ 加上/ 了/ 拓扑/ 关系/ ./ 文章/ 研究/ 了/ 该种/ 约束/ 的/ 可/ 满足/ 性/ ,/ 证明/ 该/ 问题/ 属于/ 难解/ 问题/ ,/ 也/ 给出/ 了/ 非/ 难解/ 情况/ 下/ 的/ 算法/ ,/ 来/ 检查/ 约束/ 集/ 的/ 可/ 满足/ 性/ ,/ 对于/ 难解/ 情况/ ,/ 给出/ 近似算法/ 存在/ 的/ 条件/ ./ 文献/ [/ 21/ ]/ 在/ 有/ 时间/ 戳/ 的/ 数据/ 上/ 提出/ 了/ 序列/ 依赖/ 语义/ 规则/ ,/ 用来/ 描述/ 随/ 时间/ 变化/ 数据/ 的/ 一致性/ 约束/ ,/ 试图/ 解决/ 随/ 时间/ 变化/ 数据/ 的/ 一致性/ 错误/ 的/ 发现/ 和/ 修复/ 问题/ ./ 此外/ ,/ 对于/ 实体/ 也/ 有/ 一类/ 一致性/ 描述/ 方法/ ,/ 即/ 实体/ 同一性/ 或/ 实体/ 识别/ (/ 又称/ 记录/ 匹配/ ,/ 元组/ 匹配/ )/ ,/ 它/ 是/ 信息/ 质量/ 方面/ 研究/ 最多/ 的/ 领域/ ./ 针对/ 存储/ 在/ 关系数据库/ 中/ 的/ 信息/ ,/ 人们/ 已/ 提出/ 了/ 多个/ 实体/ 识别/ 算法/ [/ 22/ -/ 30/ ]/ ./ 这些/ 工作/ 大多/ 偏重于/ 如何/ 提高/ 信息/ 中/ 识别/ 实体/ 的/ 效率/ ,/ 如/ 分块/ 技术/ [/ 31/ ]/ 和/ 滑动/ 窗口/ 技术/ [/ 32/ ]/ ./ 市场/ 上/ 的/ 信息/ 清洗/ 商业系统/ 也/ 大多/ 支持/ 实体/ 识别/ 的/ 功能/ ./ 然而/ ,/ 实体/ 识别方法/ 仍然/ 存在/ 如下/ 问题/ :/ (/ 1/ )/ 需要/ 相关/ 领域专家/ 的/ 人工/ 参与/ ,/ 或/ 依赖于/ 概率/ 式/ 启发式/ 规则/ 或/ 学习/ 式/ 的/ 启发式/ 规则/ ,/ 工作量/ 大/ ,/ 自动化/ 程度/ 低/ ;/ (/ 2/ )/ 现有/ 的/ 实体/ 识别/ 算法/ 大多/ 缺乏/ 理论/ 基础/ ,/ 很难/ 与/ 解决/ 信息/ 质量/ 其他/ 问题/ 的/ 技术/ 融合/ ;/ (/ 3/ )/ 现有/ 实体/ 识别/ 技术/ 多/ 专注/ 于/ 存储/ 在/ 关系数据库/ 中/ 的/ 信息/ ,/ 鲜有/ 针对/ 复杂/ 结构/ 信息/ 的/ 实体/ 识别/ 技术/ ./ 为/ 解决/ 前/ 两个/ 问题/ ,/ Fan/ 等/ 人/ [/ 33/ -/ 34/ ]/ 也/ 提出/ 了/ 一个/ 匹配/ 约束/ 理论/ ,/ 包括/ 描述/ 匹配/ 规则/ 的/ 约束/ 语言/ 、/ 推理/ 机制/ 、/ 公理/ 系统/ 和/ 匹配/ 键/ 的/ 推导/ 算法/ ,/ 有效/ 地/ 自动/ 确定/ 匹配/ 键/ ,/ 并/ 使/ 信息/ 匹配/ 操作/ 能够/ 与/ 基于/ 约束/ 的/ 其他/ 信息/ 质量/ 问题/ 的/ 处理/ 方法/ 有效/ 地/ 结合/ ./ 人们/ 已/ 开发/ 了/ 自动/ 发现/ 匹配/ 约束/ 的/ 算法/ [/ 35/ ]/ ./ 8/ 结论/ 及/ 未来/ 工作/ 文章/ 将/ 已有/ 的/ 函数/ 依赖/ 和/ 条件/ 函数/ 依赖/ 进行/ 了/ 扩展/ ,/ 提出/ 更/ 一般化/ 的/ 微/ 函数/ 依赖/ ./ 静态/ 分析/ 方面/ ,/ 证明/ 了/ 微/ 函数/ 依赖/ 的/ 可/ 满足/ 问题/ 是/ NP/ -/ 完全/ 的/ ,/ 蕴含/ 问题/ 是/ CoNP/ -/ 完全/ 的/ ./ 另外/ ,/ 给出/ 了/ 由/ 五条/ 推理/ 规则/ 构成/ 的/ 推理/ 系统/ ,/ 并/ 证明/ 了/ 该/ 系统/ 的/ 正确性/ 以及/ 完备/ 性/ ./ 最后/ ,/ 文章/ 通过/ 实验/ 验证/ 了/ 微/ 函数/ 依赖/ 能够/ 检测/ 出/ 更/ 多/ 的/ 错误/ 数据/ ,/ 而/ 时间/ 开销/ 的/ 增加/ 在/ 可/ 接受/ 的/ 范围/ 内/ ./ 本文/ 主要/ 从/ 理论/ 上/ 讨论/ 了/ 微/ 函数/ 依赖/ 的/ 性质/ ./ 除此之外/ ,/ 还有/ 如下/ 几个/ 方面/ 需要/ 进一步/ 研究/ :/ (/ 1/ )/ 微/ 函数/ 依赖/ 的/ 挖掘/ 问题/ ,/ 为了/ 充分发挥/ 其/ 在/ 数据/ 修复/ 中/ 的/ 作用/ ,/ 有/ 必要/ 给出/ 足够/ 的/ 微/ 函数/ 依赖/ ./ 仅仅/ 靠/ 用户/ 手动/ 给出/ 是/ 不/ 现实/ 的/ ,/ 应该/ 针对/ 不同/ 类别/ 的/ 函数/ 给出/ 不同/ 的/ 挖掘/ 方法/ ;/ (/ 2/ )/ 本文/ 假设/ 固有/ 函数/ 依赖/ 都/ 由/ 用户/ 给出/ ,/ 假设/ 条件/ 略强/ ,/ 可以/ 针对/ 不同/ 类别/ 的/ 函数/ ,/ 分别/ 研究/ 其/ 固有/ 函数/ 依赖/ 集/ 是否/ 能够/ 自动/ 生成/ ,/ 如果/ 可以/ ,/ 是否/ 存在/ 有效/ 算法/ 等/ ;/ (/ 3/ )/ 在/ 本文/ 基于/ 排序/ 的/ 算法/ 中/ ,/ 约束/ 之间/ 的/ 排序/ 共享/ 是/ 直接/ 人工/ 给出/ 的/ ,/ 当/ 约束/ 个数/ 很多/ 时/ ,/ 不同/ 的/ 共享/ 策略/ 之下/ 是否/ 有/ 不同/ 的/ 排序/ 次数/ ./ 如果/ 排序/ 次数/ 受/ 共享/ 策略/ 的/ 影响/ ,/ 则/ 需要/ 研究/ 如何/ 找出/ 最优/ 的/ 排序/ 共享/ 策略/ ,/ 使得/ 排序/ 次数/ 最少/ ,/ 检测/ 错误/ 所花/ 的/ 时间/ 最低/ ;/ (/ 4/ )/ 提出/ 微/ 函数/ 依赖/ 的/ 最终/ 目的/ ,/ 是/ 为了/ 进行/ 数据/ 修复/ ,/ 本文/ 实验/ 中/ 只/ 给出/ 了/ 最/ 直观/ 的/ 方法/ ,/ 面临/ 日益/ 严峻/ 的/ 大/ 数据/ 问题/ ,/ 如何/ 快速/ 有效/ 地/ 利用微/ 函数/ 依赖/ 发现/ 并/ 修复/ 数据库/ 中/ 的/ 不/ 一致/ ,/ 也/ 是/ 值得/ 进一步/ 研究/ 的/ 问题/ ./ 

