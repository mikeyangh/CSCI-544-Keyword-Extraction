Page1/ 一种/ 适合/ 于/ 频繁/ 位置/ 更新/ 的/ 网络/ 受限/ 移动/ 对象/ 轨迹/ 索引/ 丁治明/ (/ 中国科学院/ 软件/ 研究所/ 基础/ 软件/ 国家/ 工程/ 研究/ 中心/ 北京/ 100190/ )/ 摘要/ 移动/ 对象/ 索引/ 是/ 支持/ 海量/ 移动/ 对象/ 管理/ 的/ 一项/ 关键技术/ ./ 目前/ 的/ 移动/ 对象/ 时空/ 轨迹/ 索引/ 方法/ 如/ STR/ -/ Tree/ 、/ TB/ -/ Tree/ 、/ FNR/ -/ Tree/ 、/ MON/ -/ Tree/ 等/ 均/ 直接/ 以/ 轨迹/ 单元/ 作为/ 基本/ 的/ 索引/ 记录/ 单位/ ,/ 在/ 位置/ 更新/ 时/ 需要/ 频繁/ 地/ 在/ 索引/ 中/ 插入/ 新/ 的/ 记录/ ,/ 从而/ 严重/ 地/ 影响/ 了/ 数据库/ 的/ 总体/ 性能/ ./ 为了/ 解决/ 上述/ 问题/ ,/ 文中/ 提出/ 一种/ 网络/ 受限/ 移动/ 对象/ 的/ 动态/ 概略/ 化/ 轨迹/ R/ 树/ 索引/ (/ DSTR/ -/ Tree/ )/ ./ DSTR/ -/ Tree/ 将/ 索引/ 空间/ 划分/ 成/ 等距/ 格栅/ ,/ 并/ 通过/ 格栅/ 单元/ 对/ 每/ 一条/ 移动/ 对象/ 轨迹/ 进行/ 概略/ 化/ ,/ 然后/ 以/ 概略/ 化/ 轨迹/ 单元/ 为/ 基本/ 索引/ 记录/ 单位/ 建立/ R/ 树/ 索引/ ./ 由于/ 概略/ 化/ 轨迹/ 的/ 粒度/ 大大/ 粗于/ 原始/ 轨迹/ ,/ 因此/ 移动/ 对象/ 不/ 需要/ 在/ 每次/ 位置/ 更新/ 的/ 同时/ 触发/ 索引/ 更新/ ,/ 而仅/ 需要/ 在/ 轨迹/ 跨越/ 当前/ 格栅/ 单元/ 时才/ 进行/ 索引/ 更新/ ,/ 从而/ 显著/ 地/ 降低/ 了/ 索引/ 更新/ 的/ 代价/ ./ 实验/ 结果表明/ ,/ DSTR/ -/ Tree/ 在/ 移动/ 对象/ 数据库/ 频繁/ 位置/ 更新/ 的/ 实际/ 运行/ 条件/ 下/ ,/ 提供/ 了/ 良好/ 的/ 索引/ 维护/ 及/ 总体/ 查询处理/ 性能/ ./ 关键词/ 移动/ 对象/ ;/ 数据库/ ;/ 时空/ 轨迹/ ;/ 概略/ 化/ ;/ 索引/ 1/ 引言/ 近年来/ ,/ 移动/ 对象/ 数据库/ (/ MovingObjectsDatabases/ ,/ MOD/ )/ 成为/ 了/ 一个/ 热点/ 研究/ 领域/ 并/ 得到/ 了/ 国内外/ 研究/ 人员/ 的/ 广泛/ 关注/ ./ 移动/ 对象/ 数据库/ 属于/ 时空/ 数据库/ (/ Spatio/ -/ TemporalDatabase/ )/ 的/ 范畴/ ,/ 是/ 指/ 对/ 位置/ 不断/ 移动/ 的/ 物体/ 或/ 目标/ (/ 如/ 汽车/ 、/ 飞机/ 、/ 轮船/ 、/ 行人/ 等/ )/ 的/ 动态/ 位置/ 及其/ 它/ 相关/ 属性/ 进行/ 表示/ 与/ 管理/ 的/ 数据库/ [/ 1/ ]/ ./ 越来越/ 多/ 的/ 应用/ 要求/ 对/ 移动/ 对象/ 进行/ 管理/ ,/ 而/ 定位/ 技术/ 和/ 无线通信/ 技术/ 的/ 发展/ 使得/ 跟踪/ 和/ 记录/ 移动/ 对象/ 的/ 位置/ 成为/ 可能/ ./ 在/ 典型/ 的/ 移动/ 对象/ 数据库系统/ 中/ ,/ 通常/ 存放/ 着/ 海量/ 移动/ 对象/ 的/ 时空/ 数据/ ./ 例如/ ,/ 一个/ 大中型/ 城市/ 的/ 移动/ 对象/ 数目/ 可以/ 达到/ 数百万/ 甚至/ 更/ 多/ ./ 为了/ 支持/ 对/ 这些/ 移动/ 对象/ 过去/ 及/ 当前/ 位置/ 的/ 查询/ ,/ 有效/ 的/ 索引/ 手段/ 是/ 需要/ 解决/ 的/ 关键问题/ ./ 在/ 移动/ 对象/ 索引/ 方面/ ,/ 人们/ 已经/ 进行/ 了/ 大量/ 的/ 工作/ ,/ 这些/ 工作/ 可以/ 分为/ 两大类/ :/ 针对/ 移动/ 对象/ 当前/ 位置/ 的/ 索引/ 和/ 针对/ 移动/ 对象/ 完整/ 时空/ 轨迹/ 的/ 索引/ ./ 移动/ 对象/ 当前/ 位置/ 索引/ 的/ 典型/ 代表/ 是/ TPR/ -/ Tree/ [/ 2/ ]/ ,/ 其/ 基本/ 思想/ 是/ 在/ R/ / 树/ 索引/ 的/ 基础/ 上/ ,/ 允许/ 最小/ 包容/ 矩形/ (/ MBR/ )/ 包含/ 速度/ 和/ 方向/ 等/ 参数信息/ ,/ 从而/ 使/ MBR/ 能/ 随/ 时间/ 参数/ 进行/ 变化/ ,/ 而/ 不/ 需要/ 随着/ 移动/ 对象/ 位置/ 的/ 变化/ 频繁/ 地/ 修改/ 索引/ 记录/ ./ TPR/ -/ Tree/ 提出/ 后/ ,/ 人们/ 在/ 此基础/ 上/ 进行/ 了/ 大量/ 的/ 改进/ 工作/ ,/ 提出/ 了/ 许多/ TPR/ -/ Tree/ 的/ 变种/ 树如/ REXP/ -/ Tree/ [/ 3/ ]/ 、/ TPR/ / -/ Tree/ [/ 4/ ]/ 、/ Bulk/ -/ loadingTPR/ -/ Tree/ [/ 5/ ]/ 、/ HTPR/ -/ Tree/ [/ 6/ ]/ 等/ ./ 此外/ ,/ 文献/ [/ 7/ -/ 9/ ]/ 还/ 针对/ 移动/ 对象/ 当前/ 位置/ 索引/ 中/ 由于/ 频繁/ 位置/ 更新/ 所/ 导致/ 的/ 写/ 代价/ 过高/ 问题/ 进行/ 了/ 优化/ ./ 但是/ ,/ 所有/ 上述/ 索引/ 均/ 只能/ 支持/ 对/ 移动/ 对象/ 当前/ 时刻/ 位置/ 的/ 查询/ ,/ 而/ 不能/ 支持/ 对/ 过去/ 位置/ 的/ 查询/ ./ 移动/ 对象/ 完整/ 时空/ 轨迹/ 的/ 索引/ 包含/ 了/ 移动/ 对象/ 过去/ 及/ 当前/ 的/ 位置/ 信息/ ,/ 因此/ 比/ 移动/ 对象/ 当前/ 位置/ 索引/ 具有/ 更为/ 广泛/ 的/ 用途/ ./ 这方面/ 的/ 研究/ 工作/ 又/ 可以/ 分为/ 两大类/ :/ 基于/ Euclidean/ 空间/ 的/ 轨迹/ 索引/ 和/ 基于/ 交通网络/ 的/ 轨迹/ 索引/ ./ 基于/ Euclidean/ 空间/ 的/ 轨迹/ 索引/ 以/ Euclidean/ 轨迹/ 单元/ 为/ 索引/ 记录/ 的/ 基本/ 单位/ 进行/ 索引/ 的/ 组织/ [/ 10/ -/ 13/ ]/ ,/ 其中/ 每个/ Euclidean/ 轨迹/ 单元/ 是/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一个/ 直线/ 段/ ,/ 这些/ 直线/ 段/ 可以/ 组织/ 成/ R/ 树/ 、/ Quad/ 树/ 、/ GridFile/ 等/ 形式/ ,/ 从而/ 支持/ 对/ 移动/ 对象/ 的/ 快速/ 搜索/ ./ 上述/ 方法/ 的/ 缺点/ 在于/ Euclidean/ 轨迹/ 单元/ 是/ 直线/ ,/ 因此/ 需要/ 大量/ 的/ 轨迹/ 单元/ 来/ 刻画/ 复杂/ 的/ 移动/ 对象/ 轨迹/ 曲线/ ,/ 效率/ 较/ 低/ ./ 为了/ 进一步提高/ 效率/ ,/ 人们/ 越来越/ 多地/ 转向/ 基于/ 交通网络/ 的/ 移动/ 对象/ 轨迹/ 索引/ ,/ 并/ 提出/ 了/ 多种/ 方法/ [/ 14/ -/ 17/ ]/ ./ 基于/ 交通网络/ 的/ 移动/ 对象/ 轨迹/ 索引/ 一般/ 采用/ 双层结构/ ,/ 其中/ 上层/ 是/ 一个/ 2/ 维/ 的/ R/ 树/ ,/ 用于/ 对/ 固定/ 的/ 道路/ 网络/ 进行/ 索引/ ;/ 下层/ 是/ 一系列/ 的/ R/ 树/ ,/ 每个/ 下层/ R/ 树/ 与/ 一条/ 道路/ 相对/ 应/ ,/ 用于/ 对/ 移动/ 对象/ 在/ 该条/ 道路/ 中/ 提交/ 的/ 轨迹/ 单元/ 进行/ 索引/ ./ 其中/ ,/ 每个/ 轨迹/ 单元/ 对应/ 于/ 移动/ 对象/ 在/ 曲线/ 道路/ 上/ 的/ 一段/ 匀速/ 行驶/ 过程/ ,/ 可以/ 刻画/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一个/ 曲线/ 段/ ./ 与/ 基于/ Euclidean/ 空间/ 的/ 轨迹/ 索引/ 相比/ ,/ 基于/ 交通网络/ 的/ 轨迹/ 索引/ 减少/ 了/ 轨迹/ 单元/ 的/ 数目/ 并/ 降低/ 了/ 存储/ 开销/ ./ 尽管/ 在/ 移动/ 对象/ 轨迹/ 索引/ 方面/ 人们/ 已经/ 取得/ 了/ 一些/ 重要/ 的/ 进展/ ,/ 但是/ 目前/ 的/ 索引/ 方法/ 还/ 存在/ 着/ 诸多/ 缺陷/ :/ (/ 1/ )/ 几乎/ 所有/ 的/ 移动/ 对象/ 轨迹/ 索引/ 均/ 以/ 轨迹/ 单元/ 作为/ 索引/ 记录/ 的/ 基本/ 单位/ ,/ 由于/ 索引/ 记录/ 的/ 粒度/ 太细/ ,/ 每次/ 当/ 移动/ 对象/ 发生/ 位置/ 更新/ 并/ 产生/ 新/ 的/ 轨迹/ 单元/ 时/ ,/ 均/ 需要/ 在/ 索引/ 中/ 插入/ 相应/ 的/ 索引/ 记录/ ,/ 因此/ 索引/ 更新/ 的/ 频率/ 等同于/ 位置/ 更新/ 的/ 频率/ ,/ 从而/ 造成/ 极大/ 的/ 索引/ 更新/ 开销/ ;/ (/ 2/ )/ 目前/ 已经/ 提出/ 的/ 基于/ 网络/ 的/ 移动/ 对象/ 轨迹/ 索引/ 方法/ 均/ 采用/ 了/ 双层/ 索引/ 结构/ ,/ 这种/ 结构/ 缺乏/ 通用性/ ,/ 仅/ 适合/ 于/ 在/ 专用/ 系统/ 中/ 实现/ ,/ 很难/ 在/ 通用/ 的/ 可/ 扩充/ 数据库系统/ (/ 如/ PostgreSQL/ )/ 中/ 实现/ ;/ (/ 3/ )/ 基于/ 网络/ 的/ 移动/ 对象/ 轨迹/ 索引/ 仅能/ 处理/ 移动/ 对象/ 与/ 路网/ 匹配/ 的/ 情况/ ,/ 不能/ 表示/ 移动/ 对象/ 与/ 路网/ 匹配/ 不上/ (/ 如/ 移动/ 对象/ 在/ 电子地图/ 之外/ 的/ 小/ 路上/ 行驶/ )/ 的/ 情况/ ,/ 缺乏/ 灵活性/ ./ 为了/ 解决/ 上述/ 问题/ ,/ 本文/ 提出/ 一种/ 新/ 的/ 移动/ 对象/ 轨迹/ 索引/ 方法/ :/ 网络/ 受限/ 移动/ 对象/ 的/ 动态/ 概略/ 化/ 轨迹/ R/ 树/ 索引/ (/ DynamicSketched/ -/ TrajectoryR/ -/ TreeforNetwork/ -/ constrainedMovingObjects/ ,/ 简称/ DSTR/ -/ Tree/ )/ ./ DSTR/ -/ Tree/ 将/ 索引/ 空间/ X/ ×/ Y/ ×/ T/ 划分/ 成/ 等距/ 格栅/ ,/ 通过/ 格栅/ 单元/ 对/ 每/ 一条/ 时空/ 轨迹/ 进行/ 概略/ 化/ ,/ 并/ 以/ 概略/ 化/ 轨迹/ 单元/ 为/ 基本/ 索引/ 记录/ 单位/ 建立/ R/ 树/ 索引/ ./ 这种/ 方法/ 实际上/ 对/ 移动/ 对象/ 时空/ 轨迹/ 进行/ 了/ 粒度/ 粗化/ ./ 当/ 发生/ 位置/ 更新/ 时/ ,/ 如果/ 新/ 产生/ 的/ 轨迹/ 单元/ 没有/ 跨越/ 移动/ 对象/ 上次/ 位置/ 更新/ 时所/ 对应/ 的/ 格栅/ 单元/ (/ 该格/ 栅/ 单元/ 称为/ 移动/ 对象/ 的/ “/ 活动/ 格栅/ 单元/ ”/ )/ ,/ 则/ 不/ 需要/ 对/ 索引/ 进行/ 任何/ 修改/ ;/ 仅/ 当/ 新/ 产生/ 的/ 轨迹/ 单元/ 跨越/ 了/ 活动/ 格栅/ 单元/ 时才/ 需要/ 在/ Page3/ 索引/ 中/ 插入/ 新/ 的/ 记录/ ,/ 因此/ 极大/ 地/ 降低/ 了/ 索引/ 更新/ 的/ 代价/ ,/ 符合/ 移动/ 对象/ 频繁/ 位置/ 更新/ 的/ 现实情况/ ./ 此外/ ,/ DSTR/ -/ Tree/ 采用/ 了/ 一种/ 典型/ 的/ 单层/ 树型/ 结构/ ,/ 可以/ 轻易/ 地/ 在/ 通用/ 数据库系统/ 如/ PostgreSQL/ 中/ 实现/ ./ 最后/ ,/ DSTR/ -/ Tree/ 可以/ 兼容/ 移动/ 对象/ 在/ 路网/ 中/ 和/ 路网/ 之外/ 行驶/ 的/ 情况/ ,/ 具有/ 充分/ 的/ 灵活性/ 和/ 实用性/ ./ 本文/ 第/ 2/ 节/ 给出/ 网络/ 受限/ 移动/ 对象/ 通用/ 时空/ 轨迹/ 数据模型/ ;/ 第/ 3/ 节/ 描述/ DSTR/ -/ Tree/ 的/ 基本/ 结构/ 及/ 相关/ 算法/ ;/ 第/ 4/ 节对/ 实验/ 结果/ 进行/ 分析/ ;/ 第/ 5/ 节/ 给出/ 相关/ 结论/ ./ 2/ 网络/ 受限/ 移动/ 对象/ 的/ 通用/ 时空/ 轨迹/ 模型/ 从/ 抽象/ 模型/ 的/ 角度/ 来看/ ,/ 移动/ 对象/ 的/ 时空/ 轨迹/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一条/ 曲线/ ./ 在/ 移动/ 对象/ 数据库/ 中/ ,/ 需要/ 对/ 上述/ 曲线/ 进行/ 离散/ 化/ 才能/ 被/ 计算机/ 处理/ ./ 本节/ 讨论/ 时空/ 轨迹/ 的/ 离散/ 化/ 表示/ 方法/ ./ 在/ 移动/ 对象/ 轨迹/ 的/ 模型/ 化/ 方面/ ,/ 早期/ 的/ 工作/ 采用/ 的/ 是/ 直接/ 基于/ Euclidean/ 空间/ 的/ 表示/ 方法/ [/ 10/ ,/ 18/ ]/ ,/ 即/ 通过/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一系列/ 直线/ 线段/ 来/ 表示/ 轨迹/ ./ 为了/ 刻画/ 复杂/ 的/ 轨迹/ 曲线/ ,/ 通常/ 需要/ 大量/ 的/ 直线/ 线段/ ,/ 这/ 意味着/ 移动/ 对象/ 数据库/ 需要/ 更/ 多/ 的/ 位置/ 更新/ 和/ 更/ 多/ 的/ 存储空间/ 来/ 生成/ 和/ 管理/ 这些/ 轨迹/ ./ 近几年来/ ,/ 越来越/ 多/ 的/ 工作/ 转向/ 了/ 基于/ 路网/ 的/ 轨迹/ 表示/ 方法/ [/ 15/ ,/ 19/ -/ 20/ ]/ ,/ 即/ 通过/ 一系列/ 基于/ 路网/ 的/ 轨迹/ 单元/ 来/ 表示/ 轨迹/ ,/ 每个/ 基于/ 路网/ 的/ 轨迹/ 单元/ 刻画/ 移动/ 对象/ 在/ 曲线/ 道路/ 上/ 的/ 一段/ 匀速/ 行使/ 过程/ ./ 由于/ 基于/ 路网/ 的/ 轨迹/ 单元/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一段/ 曲线/ ,/ 因此/ 与/ 基于/ Euclidean/ 的/ 表示/ 方法/ 相比/ ,/ 上述/ 方法/ 极大/ 地/ 降低/ 了/ 轨迹/ 单元/ 的/ 数量/ 和/ 位置/ 更新/ 的/ 代价/ ./ 其/ 缺点/ 是/ 无法/ 表示/ 移动/ 对象/ 与/ 路网/ 匹配/ 不上/ 的/ 情况/ ,/ 如当/ 移动/ 对象/ 在/ 电子地图/ 之外/ 的/ 小路/ 或/ 广场/ 上/ 行驶/ ,/ 或者/ 当/ 电子地图/ 没有/ 及时/ 更新/ 导致/ 与/ 实际/ 道路/ 不符/ 时/ ,/ 均/ 有/ 可能/ 出现/ 移动/ 对象/ 与/ 路网/ 匹配/ 不上/ 的/ 情况/ ./ 为了/ 克服/ 目前/ 移动/ 对象/ 轨迹/ 模型/ 化/ 方法/ 的/ 缺陷/ ,/ 增加/ 轨迹/ 表示/ 的/ 通用性/ 和/ 灵活性/ ,/ 我们/ 在/ 本节/ 给出/ 一种/ 通用/ 的/ 移动/ 对象/ 轨迹/ 模型/ ,/ 作为/ DSTR/ -/ Tree/ 索引/ 的/ 基础/ ./ 该/ 模型/ 在/ 主要/ 考虑/ 移动/ 对象/ 路网/ 受限/ 运动/ 的/ 前提/ 下/ ,/ 兼容/ 与/ 路网/ 匹配/ 不上/ 的/ 特殊/ 情况/ ./ 为了/ 讨论/ 方便/ ,/ 我们/ 假设/ 移动/ 对象/ 在/ 与/ 路网/ 匹配/ 时/ 采用/ 文献/ [/ 21/ ]/ 提出/ 的/ 基于/ 路网/ 的/ 位置/ 更新/ 策略/ ,/ 即当/ 移动/ 对象/ 跨越/ 不同/ 的/ 道路/ 时/ 触发/ IDTLU/ 位置/ 更新/ ;/ 当/ 移动/ 对象/ 的/ 计算/ 位置/ 与/ GPS/ 位置/ 的/ 差值/ 达到/ 规定/ 的/ 距离/ 阈值/ ξ/ d/ 时/ 触发/ DTTLU/ 位置/ 更新/ ;/ 当/ 移动/ 对象/ 的/ 行驶/ 速度/ 与/ 上次/ 位置/ 更新/ 时/ 的/ 速度/ 差值/ 达到/ 规定/ 的/ 速度/ 阈值/ ξ/ s/ 时/ 触发/ STTLU/ 位置/ 更新/ ;/ 当/ 移动/ 对象/ 与/ 路网/ 不能/ 匹配/ 时/ ,/ 采用/ 基于/ 固定/ 时间/ 间隔/ 的/ 位置/ 更新/ 策略/ (/ FTLU/ )/ ,/ 即/ 每隔/ 规定/ 的/ 时间/ 阈值/ ξ/ t/ 触发/ 一次/ 位置/ 更新/ ./ 此外/ ,/ 当/ 移动/ 对象/ 的/ 路网/ 匹配/ 状态/ 发生/ 改变/ (/ 由/ 匹配/ 状态/ 变成/ 不/ 匹配/ 状态/ ,/ 或/ 反之/ )/ 时/ 需要/ 立刻/ 进行/ 位置/ 更新/ ./ 定义/ 1/ (/ 交通网络/ )/ ./ 交通网络/ N/ 定义/ 为/ 其中/ ,/ R/ 是/ 道路/ 的/ 集合/ ,/ J/ 是/ 交叉路口/ 的/ 集合/ ./ 定义/ 2/ (/ 道路/ )/ ./ 道路/ r/ 定义/ 为/ 如下/ 形式/ :/ 其中/ ,/ rid/ 是/ 道路/ 标识/ ;/ geo/ 是/ 该/ 道路/ 的/ 地理/ 几何/ 形状/ ;/ len/ 是/ 道路/ 的/ 长度/ ;/ (/ jidj/ ,/ posj/ )/ m/ 所/ 包含/ 的/ 各个/ 交叉路口/ (/ 见/ 定义/ 3/ )/ 的/ 标识/ 以及/ 它们/ 在/ 道路/ 中/ 的/ 相对/ 位置/ (/ 设/ 每条/ 道路/ 的/ 总长度/ 为/ 1/ ,/ 则/ 该条/ 道路/ 中/ 的/ 任一/ 相对/ 位置/ pos/ 可以/ 用/ [/ 0/ ,/ 1/ ]/ 之间/ 的/ 一个/ 实数/ 表示/ )/ ./ 在/ 上述/ 定义/ 中/ ,/ 道路/ 的/ 几何/ 形状/ geo/ 用/ 一条/ 折线/ pl/ 表示/ ,/ pl/ 是/ 由/ X/ ×/ Y/ 平面/ 中/ 的/ 一组/ 点/ 所/ 组成/ 的/ 序列/ ,/ 即/ 其中/ ,/ (/ x1/ ,/ y1/ )/ 为/ pl/ 的/ 起点/ ,/ 称为/ r/ 的/ “/ 0/ -/ 端点/ ”/ ,/ (/ xn/ ,/ yn/ )/ 为/ pl/ 的/ 终点/ ,/ 称为/ r/ 的/ “/ 1/ -/ 端点/ ”/ ./ 定义/ 3/ (/ 交叉路口/ )/ ./ 交叉路口/ j/ 与/ 实际/ 交通网络/ 中/ 的/ 交叉路口/ 、/ 道路/ 出入口/ 或/ 道路/ 端点/ 相对/ 应/ ,/ 定义/ 为/ 如下/ 形式/ :/ 其中/ jid/ 是/ 交叉路口/ 的/ 标识/ ;/ loc/ 是/ j/ 的/ 地理位置/ ,/ 用/ 其/ (/ x/ ,/ y/ )/ 坐标/ 表示/ ;/ (/ ridi/ ,/ posi/ )/ (/ 1/ / i/ / n/ )/ 描述/ j/ 所/ 连接/ 的/ 第/ i/ 条/ 道路/ ,/ 其中/ ridi/ 是/ 道路/ 标识/ ,/ posi/ ∈/ [/ 0/ ,/ 1/ ]/ 是/ j/ 在/ 该条/ 道路/ 中/ 的/ 相对/ 位置/ ;/ m/ 是/ j/ 的/ 连接/ 矩阵/ ,/ 用以/ 描述/ 该/ 交叉路口/ 的/ 各/ 交通流/ 之间/ 的/ 连通/ 关系/ [/ 19/ ]/ ./ 定义/ 4/ (/ 网络/ 位置/ )/ ./ 交通网络/ N/ 中/ 的/ 任意/ 一个/ 网络/ 位置/ npos/ 可以/ 包括/ 两种/ 情况/ :/ ①/ 位于/ 某个/ 交叉路口/ ,/ 此时/ 可以/ 直接/ 以/ 交叉路口/ 的/ 标识/ jid/ 表示/ ;/ ②/ 位于/ 道路/ 中/ ,/ 此时/ 可以/ 用/ 其/ 所在/ 的/ 道路/ 标识/ rid/ 及/ 在/ 该/ 道路/ 中/ 的/ 相对/ 位置/ pos/ 表示/ ./ 因此/ 网络/ 位置/ npos/ 定义/ 为/ Page4npos/ =/ jid/ ,/ npos/ 位于/ 交叉路口/ 定义/ 5/ (/ 移动/ 对象/ 的/ 运行/ 矢量/ )/ ./ 移动/ 对象/ mo/ 在/ t/ 时刻/ 的/ 运行/ 矢量/ 犿/ 狏/ 定义/ 为/ 其中/ ,/ t/ 是/ 采集/ 该/ 运行/ 矢量/ 的/ 时刻/ ;/ (/ x/ ,/ y/ )/ 、/ v/ 、/ d/ 分别/ 是/ 移动/ 对象/ 在/ t/ 时刻/ 的/ 位置/ 、/ 速度/ 、/ 方向/ ;/ npos/ 是/ 犿/ 狏/ 对应/ 的/ 网络/ 位置/ (/ 当/ 移动/ 对象/ 的/ 位置/ 与/ 道路/ 网络/ 匹配/ 不上/ 时/ ,/ npos/ 取/ 空值/ )/ ./ 在/ 犿/ 狏/ 的/ 各个/ 参数/ 中/ ,/ t/ ,/ (/ x/ ,/ y/ )/ ,/ v/ ,/ d/ 是/ 由/ GPS/ 采样/ 得到/ 的/ ,/ 而/ npos/ 是/ 通过/ 路网/ 匹配/ 得到/ 的/ ./ 如果/ npos/ 为空/ ,/ 则/ 犿/ 狏/ 称为/ Eulidean/ 运行/ 矢量/ ;/ 如果/ npos/ 有/ 具体/ 的/ 网络/ 位置/ 匹配/ 值/ ,/ 则/ 犿/ 狏/ 称为/ 路网/ 匹配/ 的/ 运行/ 矢量/ ./ 定义/ 6/ (/ 移动/ 对象/ 的/ 时空/ 轨迹/ )/ ./ 移动/ 对象/ mo/ 的/ 时空/ 轨迹/ traj/ 是/ mo/ 在/ 行驶/ 过程/ 中/ 通过/ 位置/ 更新/ 操作/ 所/ 生成/ 的/ 一组/ 运行/ 矢量/ 的/ 序列/ ,/ 用以/ 描述/ mo/ 的/ 位置/ 随着/ 时间/ 变化/ 的/ 过程/ ,/ 定义/ 为/ 如下/ 形式/ traj/ =/ (/ 犿/ 狏/ i/ )/ n/ 一条/ 时空/ 轨迹/ 可以/ 看成/ 是/ 若干个/ 轨迹/ 单元/ (/ 见/ 定义/ 7/ )/ 所/ 组成/ 的/ 序列/ ,/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一条/ 曲线/ ./ 图/ 1/ 给出/ 了/ 一个/ 移动/ 对象/ 在/ 路网/ 中/ 的/ 行驶/ 过程/ 及/ 对应/ 得/ 时空/ 轨迹/ 曲线/ ./ 图/ 1/ 移动/ 对象/ 的/ 行驶/ 过程/ 以及/ 对应/ 的/ 时空/ 轨迹/ 移动/ 对象/ 的/ 轨迹/ 是/ 通过/ 位置/ 更新/ 操作/ 得到/ 的/ ./ 目前/ 已经/ 提出/ 了/ 多种不同/ 的/ 位置/ 更新/ 方法/ [/ 21/ -/ 24/ ]/ ./ 在/ 位置/ 更新/ 中/ ,/ 移动/ 对象/ 原始/ 提交/ 的/ 参数/ 一般/ 包含/ 运行/ 矢量/ 中/ 的/ t/ 、/ (/ x/ ,/ y/ )/ 、/ v/ 、/ d/ ,/ 而/ npos/ 的/ 匹配/ 可以/ 在/ 移/ 实际/ 的/ 当前/ 位置/ 及/ 历史/ 行驶/ 过程/ ;/ 动/ 对象/ 端/ 或者/ 在/ 服务器端/ 完成/ ./ 移动/ 对象/ 在/ 行驶/ 的/ 过程/ 中/ 不断/ 采集/ 新/ 的/ 运行/ 矢量/ 并/ 将/ 之/ 发送给/ 服务器/ ,/ 因此/ 服务器/ 上/ 保存/ 的/ 轨迹/ 是/ 不断/ 增长/ 的/ ./ 每隔/ 一段时间/ (/ 如/ 两个/ 星期/ )/ ,/ 数据库/ 需要/ 对/ 轨迹/ 数据/ 进行/ 转储/ ,/ 并/ 生成/ 新/ 的/ 移动/ 对象/ 关系/ 表/ ./ 一个/ 理想/ 的/ 位置/ 更新/ 方法/ 需要/ 同时/ 保证/ 如下/ 两个/ 条件/ :/ (/ 1/ )/ 所/ 生成/ 的/ 时空/ 轨迹/ 应/ 精确/ 地/ 刻画/ 移动/ 对象/ (/ 2/ )/ 所/ 生成/ 的/ 时空/ 轨迹/ 应/ 包含/ 尽可能少/ 的/ 运行/ 矢量/ (/ 或/ 轨迹/ 单元/ )/ ,/ 并/ 在/ 其/ 生成/ 过程/ 中/ 采用/ 尽可能少/ 的/ 位置/ 更新/ 操作/ ./ 定义/ 7/ (/ 移动/ 对象/ 的/ 轨迹/ 单元/ )/ ./ 时空/ 轨迹/ traj/ =/ (/ 犿/ 狏/ i/ )/ n/ 的/ 任意/ 两个/ 相邻/ 的/ 运行/ 矢量/ 犿/ 狏/ i/ 和/ 犿/ 狏/ i/ +/ 1/ (/ 1/ / i/ </ n/ )/ 构成/ 一个/ 轨迹/ 单元/ ,/ 记/ 为/ μ/ (/ 犿/ 狏/ i/ ,/ 犿/ 狏/ i/ +/ 1/ )/ ./ 此外/ ,/ traj/ 的/ 最后/ 一个/ 运行/ 矢量/ 犿/ 狏/ n/ 也/ 对应/ 着/ 一个/ 轨迹/ 单元/ ,/ 记/ 为/ μ/ (/ 犿/ 狏/ n/ )/ (/ 我们/ 称/ μ/ (/ 犿/ 狏/ n/ )/ 为/ 该/ 移动/ 对象/ 的/ 活动/ 轨迹/ 单元/ )/ ./ 根据/ 不同/ 的/ 路网/ 匹配/ 情况/ ,/ 轨迹/ 单元/ μ/ (/ 犿/ 狏/ i/ ,/ 犿/ 狏/ i/ +/ 1/ )/ (/ 1/ / i/ </ n/ )/ 可以/ 被/ 解析/ 成/ 不同/ 的/ 几何/ 形态/ :/ (/ 1/ )/ 如果/ 犿/ 狏/ i/ 和/ 犿/ 狏/ i/ +/ 1/ 均/ 为/ 路网/ 匹配/ 的/ 运行/ 矢量/ ,/ 则/ μ/ (/ 犿/ 狏/ i/ ,/ 犿/ 狏/ i/ +/ 1/ )/ 称为/ 路网/ 匹配/ 的/ 轨迹/ 单元/ ,/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一条/ 曲线/ 线段/ ,/ 该/ 曲线/ 线段/ 反映/ 移动/ 对象/ 沿着/ 路网/ 从/ 犿/ 狏/ i/ 到/ 犿/ 狏/ i/ +/ 1/ 匀速/ 行驶/ 的/ 时空/ 过程/ (/ 如图/ 1/ (/ b/ )/ 中/ 的/ μ/ (/ 犿/ 狏/ 1/ ,/ 犿/ 狏/ 2/ )/ 、/ μ/ (/ 犿/ 狏/ 4/ ,/ 犿/ 狏/ 5/ )/ )/ ;/ (/ 2/ )/ 如果/ 犿/ 狏/ i/ 和/ 犿/ 狏/ i/ +/ 1/ 之一/ 或/ 二者/ 皆/ 为/ Eulidean/ 运行/ 矢量/ ,/ 则/ μ/ (/ 犿/ 狏/ i/ ,/ 犿/ 狏/ i/ +/ 1/ )/ 称为/ Euclidean/ 轨迹/ 单元/ ,/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一条/ 直线/ 线段/ ,/ 该/ 直线/ 线段/ 反映/ 移动/ 对象/ 从/ 犿/ 狏/ i/ 到/ 犿/ 狏/ i/ +/ 1/ 匀速直线/ 行驶/ 的/ 时空/ 过程/ (/ 如图/ 1/ (/ b/ )/ 中/ 的/ μ/ (/ 犿/ 狏/ 2/ ,/ 犿/ 狏/ 3/ )/ 、/ μ/ (/ 犿/ 狏/ 3/ ,/ 犿/ 狏/ 4/ )/ )/ ./ 对于/ 活动/ 轨迹/ 单元/ μ/ (/ 犿/ 狏/ n/ )/ ,/ 其/ 几何/ 形状/ 可以/ 通过/ 如下/ 方式/ 求得/ (/ 设/ 每个/ 移动/ 对象/ 有/ 一个/ 活动状态/ 标记/ activeFlag/ ,/ 表示/ 其/ 是否/ 处于/ 联机/ 行驶/ 状态/ )/ :/ (/ 1/ )/ 如果/ activeFlag/ =/ false/ ,/ 则/ 移动/ 对象/ 处于/ 离线/ 关闭/ 状态/ ,/ 此时/ μ/ (/ 犿/ 狏/ n/ )/ 为/ 空值/ ;/ (/ 2/ )/ 如果/ activeFlag/ =/ true/ ,/ 则/ 移动/ 对象/ 处于/ 活动/ 行驶/ 状态/ ,/ 此时/ 可以/ 进一步/ 细分/ 为/ 两种/ 情况/ :/ (/ 2.1/ )/ 如果/ 犿/ 狏/ n/ 是/ 路网/ 匹配/ 的/ 运行/ 矢量/ ,/ 则/ μ/ (/ 犿/ 狏/ n/ )/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一条/ 曲线/ 线段/ ,/ 该/ 曲线/ 线段/ 反映/ 移动/ 对象/ 沿/ 当前/ 道路/ 按照/ 犿/ 狏/ n/ 中/ 描述/ 的/ 速度/ 、/ 方向/ 匀速/ 行驶/ 至/ 道路/ 终点/ (/ 见图/ 2/ (/ a/ )/ 中/ μ/ (/ 犿/ 狏/ n/ )/ 的/ 灰色/ 曲线/ 部分/ )/ ,/ 并/ 继续/ 停留/ 在/ 道路/ 终点/ τ/ Page5/ 时间/ (/ 见图/ 2/ (/ a/ )/ 中/ μ/ (/ 犿/ 狏/ n/ )/ 的/ 黑色/ 垂直线/ 部分/ ./ τ/ 的/ 计算方法/ 将/ 在/ 下面/ 进一步/ 分析/ )/ 的/ 行驶/ 过程/ ./ 上述/ μ/ (/ 犿/ 狏/ n/ )/ 的/ 几何/ 曲线/ 反映/ 的/ 是/ 移动/ 对象/ 在/ 犿/ 狏/ n/ 之后/ 的/ 计算/ 位置/ ./ 根据/ 文献/ [/ 21/ -/ 22/ ]/ 的/ 分析/ ,/ 移动/ 对象/ 的/ 计算/ 位置/ 在/ 按照/ 犿/ 狏/ n/ 中/ 的/ 行驶/ 参数/ 到达/ 当前/ 道路/ 终点/ 之后/ ,/ 将/ 继续/ 停留/ 在/ 道路/ 终点/ ./ (/ 2.2/ )/ 如果/ 犿/ 狏/ n/ 是/ Euclidean/ 运行/ 矢量/ ,/ 则/ μ/ (/ 犿/ 狏/ n/ )/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一条/ 直线/ 线段/ ,/ 该/ 直线/ 线段/ 反映/ 移动/ 对象/ 从/ 犿/ 狏/ n/ 开始/ ,/ 按照/ 犿/ 狏/ n/ 中/ 的/ 速度/ 、/ 方向/ 等/ 运行/ 参数/ 匀速直线/ 行驶/ ξ/ t/ 时间/ 的/ 行驶/ 过程/ (/ 见图/ 2/ (/ b/ )/ )/ ./ 图/ 2/ 活动/ 轨迹/ 单元/ μ/ (/ 犿/ 狏/ n/ )/ 对应/ 的/ 几何/ 曲线/ 通过/ 分析/ 可知/ ,/ μ/ (/ 犿/ 狏/ n/ )/ 所/ 对应/ 的/ 上述/ 几何/ 曲线/ 的/ 时间跨度/ 能够/ 保证/ 下/ 一次/ 位置/ 更新/ 之前/ 的/ 所有/ 计算/ 位置/ 都/ 包含/ 在/ 该/ 曲线/ 中/ 了/ ./ 如果/ 犿/ 狏/ n/ 为/ 路网/ 匹配/ 的/ 运行/ 矢量/ (/ 见/ 上述/ (/ 2.1/ )/ )/ ,/ 则/ μ/ (/ 犿/ 狏/ n/ )/ 几何/ 曲线/ 的/ 时间跨度/ 为/ 按照/ 最慢/ 可能/ 的/ 速度/ 到达/ 道路/ 终点/ 所/ 需要/ 的/ 时间/ ;/ 如果/ 犿/ 狏/ n/ 为/ Euclidean/ 运行/ 矢量/ (/ 见/ (/ 2.2/ )/ )/ ,/ 则/ μ/ (/ 犿/ 狏/ n/ )/ 几何/ 曲线/ 的/ 时间跨度/ 为/ FTLU/ 位置/ 更新/ 的/ 时间/ 间隔/ ./ 因此/ 可以/ 保证/ ,/ 在/ 上述/ 时间跨度/ 用/ 完/ 之前/ ,/ 必然/ 会/ 有/ 新/ 的/ 位置/ 更新/ 产生/ ./ 下面/ 讨论/ 上述/ (/ 2.1/ )/ 中/ τ/ 的/ 计算方法/ ./ 如图/ 2/ (/ a/ )/ 所示/ ,/ 活动/ 运行/ 矢量/ 犿/ 狏/ n/ 为/ 路网/ 匹配/ 的/ 运行/ 矢量/ ./ 设/ 犿/ 狏/ n/ =/ (/ tn/ ,/ (/ xn/ ,/ yn/ )/ ,/ vn/ ,/ dn/ ,/ nposn/ )/ ,/ 且/ nposn/ =/ (/ ridn/ ,/ posn/ )/ ./ 根据/ 犿/ 狏/ n/ 中/ 的/ 参数/ ,/ 可以/ 计算/ 出/ 移动/ 对象/ 在/ tn/ 时刻/ 离/ 道路/ 终点/ 的/ 距离/ 为/ (/ 1/ -/ posn/ )/ ×/ length/ (/ ridn/ )/ ,/ 其中/ length/ (/ ridn/ )/ 为/ 道路/ ridn/ 的/ 长度/ ./ 移动/ 对象/ 按照/ vn/ 的/ 速度/ 行驶/ 至/ 道路/ 终点/ 所/ 需要/ 的/ 时间/ 为/ tnorm/ =/ (/ (/ 1/ -/ posn/ )/ ×/ length/ (/ ridn/ )/ )/ // vn/ ,/ 而/ 移动/ 对象/ 在/ 不/ 触发/ STTLU/ 的/ 情况/ 下/ 的/ 最慢/ 可能/ 速度/ 为/ (/ vn/ -/ ξ/ s/ )/ ,/ 因此/ 在/ 不/ 触发/ 位置/ 更新/ 的/ 前提/ 下/ 最晚/ 到达/ 道路/ 终点/ 的/ 时间/ 为/ tslow/ =/ (/ (/ 1/ -/ posn/ )/ ×/ length/ (/ ridn/ )/ )/ // (/ vn/ -/ ξ/ s/ )/ ,/ 所以/ 有/ 3DSTR/ -/ Tree/ 索引/ 的/ 结构/ 及/ 相关/ 算法/ 本/ 节/ 首先/ 讨论/ DSTR/ -/ Tree/ 的/ 基本/ 结构/ ,/ 然后/ 给出/ DSTR/ -/ Tree/ 索引/ 的/ 初始/ 建立/ 、/ 动态/ 维护/ 及/ 查询处理/ 算法/ ./ 3.1/ 移动/ 对象/ 轨迹/ 的/ 概略/ 化及/ DSTR/ -/ Tree/ 索引/ 的/ 结构/ 为了/ 对/ 轨迹/ 进行/ 概略/ 化/ ,/ 首先/ 需要/ 对/ X/ ×/ Y/ ×/ T/ 空间/ 进行/ 格栅化/ ./ 设/ 移动/ 对象/ 数据库/ 的/ 应用/ 时空/ 空间/ 为/ Ix/ ×/ Iy/ ×/ It/ ,/ 其中/ ,/ Ix/ =/ [/ x0/ ,/ x1/ ]/ ,/ Iy/ =/ [/ y0/ ,/ y1/ ]/ ,/ It/ =/ [/ t0/ ,/ ⊥/ ]/ (/ It/ 的/ 终点/ 为/ ⊥/ (/ 未定义/ )/ ,/ 因为/ 当前/ 时刻/ 是/ 不断/ 增长/ 的/ )/ ./ 在/ 进行/ 格栅化/ 时/ ,/ 可以/ 将/ Ix/ 划分/ 成/ n/ 个/ 等/ 大小/ 的/ 子/ 区域/ ,/ 每个/ 子/ 区域/ 的/ 大小/ 为/ 同理/ 可以/ 将/ Iy/ 划分/ 成/ m/ 个/ 等/ 大小/ 的/ 子/ 区域/ ,/ 每个/ 子/ 区域/ 的/ 大小/ 为/ 对于/ It/ ,/ 由于/ 其/ 终点/ 未定义/ ,/ 可以/ 将/ 之/ 划分/ 成/ 大小/ 为/ Δ/ t/ 的/ 等/ 长/ 时间段/ ,/ 即/ 通过/ 上述/ 方法/ ,/ Ix/ ×/ Iy/ ×/ It/ 空间/ 被/ 划分/ 成/ 了/ 等距/ 格栅/ ./ 格栅/ 单元/ 用/ 其/ 编号/ (/ Nx/ ,/ Ny/ ,/ Nt/ )/ 来/ 表示/ ,/ 其中/ Nx/ ,/ Ny/ ,/ Nt/ 分别/ 为/ 该/ 单元/ 在/ X/ ,/ Y/ ,/ T/ 轴/ 所/ 对应/ 的/ 子/ 区域/ 编号/ ,/ 例如/ 图/ 3/ 中/ 右上角/ 标记/ 灰色/ 的/ 单元/ 编号/ 为/ (/ 4/ ,/ 3/ ,/ 2/ )/ ./ 将/ Ix/ ×/ Iy/ ×/ It/ 空间/ 进行/ 格栅化/ 之后/ ,/ 接下来/ 需要/ 对/ 轨迹/ 进行/ 概略/ 化/ ,/ 从而/ 形成/ 概略/ 化/ 的/ 轨迹/ (/ SketchedTrajectory/ )/ ./ 为了/ 方便/ 叙述/ ,/ 称/ 进行/ 概略/ 化/ 之前/ 的/ 轨迹/ 为/ “/ 原始/ 轨迹/ ”/ ./ 定义/ 8/ (/ 移动/ 对象/ 的/ 概略/ 化/ 轨迹/ )/ ./ 设/ traj/ =/ (/ (/ ti/ ,/ (/ xi/ ,/ yi/ )/ ,/ vi/ ,/ di/ ,/ nposi/ )/ )/ n/ 其/ 概略/ 化/ 轨迹/ sketch/ (/ traj/ )/ 是/ 将/ traj/ 轨迹/ 曲线/ 所/ 穿/ Page6/ 行/ 的/ 格栅/ 单元/ 的/ 中心点/ 通过/ 直线/ 线段/ 连接起来/ 所/ 形成/ 的/ 轨迹/ ,/ 定义/ 为/ 如下/ 形式/ :/ sketch/ (/ traj/ )/ =/ (/ cj/ )/ k/ 其中/ cj/ =/ (/ tj/ ,/ xj/ ,/ yj/ )/ (/ 1/ / j/ / k/ )/ 是/ traj/ 所/ 穿行/ 的/ 第/ j/ 个格/ 栅/ 单元/ 的/ 中心点/ 的/ 坐标/ ./ sketch/ (/ traj/ )/ 中/ 两个/ 相邻/ 的/ 中心点/ cj/ 和/ cj/ +/ 1/ 构成/ 一个/ 概略/ 化/ 轨迹/ 单元/ (/ Sketched/ -/ TrajectoryUnit/ )/ ,/ 记/ 为/ μ/ ^/ (/ cj/ ,/ cj/ +/ 1/ )/ ,/ 它/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一条/ 连接/ cj/ 和/ cj/ +/ 1/ 的/ 直线/ 线段/ ./ 注意/ ,/ 概略/ 化/ 轨迹/ sketch/ (/ traj/ )/ 中/ 已经/ 包含/ 了/ traj/ 的/ 活动/ 轨迹/ 单元/ μ/ (/ 犿/ 狏/ n/ )/ 的/ 概略/ 化/ 信息/ ./ 图/ 3/ 给出/ 了/ 对/ Ix/ ×/ Iy/ ×/ It/ 空间/ 进行/ 格栅化/ 及/ 对/ 原始/ 轨迹/ 进行/ 概略/ 化/ 的/ 例子/ ./ 图/ 3/ 时空/ 应用/ 区域/ Ix/ ×/ Iy/ ×/ It/ 的/ 格栅化/ 及/ 原始/ 轨迹/ 的/ 概略/ 化如图/ 3/ 所示/ ,/ 概略/ 化/ 轨迹/ 用/ 大为/ 减少/ 的/ 线段/ 近似/ 表示/ 了/ 原始/ 轨迹/ 的/ 几何/ 形状/ ./ 同/ 一条/ 原始/ 时空/ 轨迹/ 所/ 对应/ 的/ 概略/ 化/ 轨迹/ 的/ 单元/ 数目/ 取决于/ 格栅/ 单元/ 的/ 大小/ :/ 格栅/ 单元/ 越大/ ,/ 则/ 概略/ 化/ 轨迹/ 的/ 单元/ 数目/ 越/ 少/ ,/ 反之亦然/ ./ 算法/ 1/ 描述/ 了/ 根据/ 移动/ 对象/ 的/ 原始/ 时空/ 轨迹/ 生成/ 概略/ 化/ 轨迹/ 的/ 过程/ ./ 其中/ ,/ 函数/ getCellLocated/ (/ 犿/ 狏/ )/ 计算/ 运行/ 矢量/ 犿/ 狏/ 所/ 位于/ 的/ 格栅/ 单元/ ,/ getCellsTrav/ -/ elled/ (/ μ/ )/ 计算/ 轨迹/ 单元/ μ/ 所/ 穿行/ 的/ 格栅/ 单元/ 序列/ ,/ extractCell/ (/ cellseq/ ,/ i/ )/ 从格/ 栅/ 单元/ 序列/ cellseq/ 中/ 提取/ 第/ i/ 个格/ 栅/ 单元/ ,/ getCenter/ (/ cell/ )/ 计算/ 格栅/ 单元/ cell/ 的/ 中心点/ 坐标/ ,/ |/ cellseq/ |/ 返回/ 格栅/ 单元/ 序列/ cellseq/ 中所/ 包含/ 的/ 格栅/ 单元/ 数目/ ,/ apppend/ (/ sketchTraj/ ,/ center/ )/ 将/ 中心点/ 坐标/ center/ 添加/ 到/ sketchTraj/ 的/ 最后/ ,/ doNothing/ (/ )/ 不/ 做/ 任何/ 事情/ 而/ 直接/ 返回/ 到/ 主程序/ ./ 算法/ 1/ ./ 移动/ 对象/ 概略/ 化/ 轨迹/ 生成/ 算法/ ./ 全局变量/ :/ Ix/ ×/ Iy/ ×/ It/ // // 应用/ 空间/ 区域/ 输入/ :/ traj/ =/ (/ 犿/ 狏/ i/ )/ n/ 输出/ :/ sketchTraj/ =/ (/ (/ tj/ ,/ xj/ ,/ yj/ )/ )/ k1/ ./ sketchTraj/ =/ NULL/ ;/ 2/ ./ startingCell/ =/ getCellLocated/ (/ 犿/ 狏/ 1/ )/ ;/ 3/ ./ apppend/ (/ sketchTraj/ ,/ getCenter/ (/ startingCell/ )/ )/ ;/ 4/ ./ IFn/ =/ 1THEN5/ ./ IFactiveflag/ =/ FALSETHEN6/ ./ Return/ (/ sketchTraj/ )/ ;/ 7/ ./ ELSE8/ ./ cellsTravelled/ =/ getCellsTravelled/ (/ μ/ (/ 犿/ 狏/ 1/ )/ )/ ;/ 9/ ./ IF/ (/ |/ cellsTravelled/ |/ =/ 1/ )/ AND10/ ./ Return/ (/ sketchTraj/ )/ ;/ 11/ ./ ELSE12/ ./ FORj/ =/ 2to/ |/ cellsTravelled/ |/ DO13/ ./ apppend/ (/ sketchTraj/ ,/ getCenter14/ ./ ENDFOR15/ ./ ENDIF16/ ./ ENDIF17/ ./ ELSE/ // // n/ >/ 118/ ./ currentCell/ =/ startingCell/ ;/ 19/ ./ FORi/ =/ 1ton/ -/ 1DO20/ ./ cellsTravelled/ =/ getCellsTravelled/ (/ μ/ (/ 犿/ 狏/ i/ ,/ 犿/ 狏/ i/ +/ 1/ )/ )/ ;/ 21/ ./ IF/ (/ |/ cellsTravelled/ |/ =/ 1/ )/ AND22/ ./ doNothing/ (/ )/ ;/ 23/ ./ ELSE/ // // μ/ (/ 犿/ 狏/ i/ ,/ 犿/ 狏/ i/ +/ 1/ )/ 穿越/ 了/ 多个/ 格栅/ 单元/ 24/ ./ FORj/ =/ 2to/ |/ CellsTravelled/ |/ DO25/ ./ apppend/ (/ sketchTraj/ ,/ getCenter26/ ./ ENDFOR/ ;/ 27/ ./ currentCell/ =/ extactCell/ (/ cellsTravelled/ ,/ 28/ ./ ENDIF29/ ./ ENDFOR30/ ./ IFactiveflag/ =/ TRUETHEN31/ ./ cellsTravelled/ =/ getCellsTravelled/ (/ μ/ (/ 犿/ 狏/ n/ )/ )/ ;/ 32/ ./ IF/ (/ |/ cellsTravelled/ |/ =/ 1/ )/ AND33/ ./ doNothing/ (/ )/ ;/ 34/ ./ ELSE35/ ./ FORj/ =/ 2to/ |/ CellsTravelled/ |/ DO36/ ./ apppend/ (/ sketchTraj/ ,/ getCenter37/ ./ ENDFOR38/ ./ ENDIF39/ ./ ENDIF40/ ./ Return/ (/ sketchTraj/ )/ ;/ 41/ ./ ENDIFPage7/ 在/ 算法/ 1/ 中/ ,/ 函数/ getCellsTravelled/ (/ μ/ )/ 的/ 返回值/ 可以/ 包含/ 一个/ 或/ 多个/ 格栅/ 单元/ ,/ 这些/ 格栅/ 单元/ 的/ 中心点/ 被/ 依次/ 添加/ 到/ sketchTraj/ 中/ ./ 通过/ 算法/ 1/ 可以/ 看出/ ,/ 当/ 移动/ 对象/ 的/ 原始/ 轨迹/ 单元/ 不/ 跨越/ 格栅/ 单元/ 时/ ,/ 可以/ 直接/ 跳过/ 该/ 单元/ 而/ 不/ 需要/ 做/ 任何/ 处理/ ;/ 仅当/ 原始/ 轨迹/ 单元/ 跨越/ 一个/ 或/ 多个/ 格栅/ 单元/ 时/ ,/ 才/ 需要/ 生成/ 相应/ 的/ 概略/ 化/ 轨迹/ 单元/ ./ 在/ 特殊/ 情况/ 下/ (/ 如/ 移动/ 对象/ 沿/ 某条/ 道路/ 长时间/ 匀速/ 行驶/ 时/ )/ ,/ 原始/ 轨迹/ 单元/ 可能/ 跨越/ 多个/ 格栅/ 单元/ ,/ 此时/ 需要/ 将/ 这些/ 格栅/ 单元/ 的/ 中心/ 连线/ 依次/ 加入/ 到/ 概略/ 化/ 轨迹/ 中/ (/ 见图/ 4/ (/ b/ )/ 中/ 的/ 情况/ (/ 3/ )/ )/ ./ 由于/ 算法/ 对/ 活动/ 轨迹/ 单元/ 也/ 进行/ 了/ 相同/ 的/ 处理/ (/ 见/ 算法/ 1/ 第/ 30/ ~/ 39/ 行/ ,/ 其中/ 活动/ 轨迹/ 单元/ μ/ (/ 犿/ 狏/ n/ )/ 是/ 根据/ 移动/ 对象/ 最后/ 一次/ 位置/ 更新/ 时/ 提交/ 的/ 行驶/ 参数/ 进行/ 预测/ 并/ 实体化/ 所/ 得到/ 的/ 单元/ ,/ 如图/ 2/ 所示/ )/ ,/ 从而/ 使得/ 移动/ 对象/ 即使/ 长时间/ 不/ 进行/ 位置/ 更新/ 时/ ,/ DSTR/ -/ Tree/ 中/ 也/ 预先/ 包含/ 了/ 相应/ 的/ 概略/ 化/ 轨迹/ 单元/ ./ 这些/ 预先/ 计算/ 的/ 、/ 与/ μ/ (/ 犿/ 狏/ n/ )/ 相对/ 应/ 的/ 概略/ 化/ 轨迹/ 单元/ 需要/ 在/ 下/ 一次/ 位置/ 更新/ 时/ 进行/ 调整/ 和/ 重新/ 预测/ (/ 见/ 算法/ 3/ )/ ./ 图/ 4/ 分析/ 了/ 在/ 处理/ 一个/ 新/ 的/ 轨迹/ 单元/ μ/ 时会/ 出现/ 的/ 3/ 种/ 典型/ 情况/ ,/ 其中/ 标记/ 灰色/ 的/ 单元/ 是/ currentCell/ 所/ 对应/ 的/ 格栅/ 单元/ ./ 在/ 3/ 种/ 典型/ 情况/ 中/ ,/ (/ 1/ )/ 和/ (/ 2/ )/ 较为/ 常见/ ,/ 而/ (/ 3/ )/ 仅/ 在/ 偶然/ 的/ 情况/ 下/ 才/ 会/ 出现/ ,/ 这/ 是因为/ 格栅/ 单元/ 的/ 粒度/ 通常/ 远大于/ 轨迹/ 单元/ 的/ 粒度/ ,/ 所以/ 不会/ 经常出现/ μ/ 跨越/ 3/ 个/ 或/ 更/ 多格/ 栅/ 单元/ 的/ 情况/ ./ 通过/ 图/ 4/ 可以/ 看出/ ,/ 在/ DSTR/ -/ Tree/ 中/ ,/ 选取/ 合适/ 的/ 格栅/ 单元/ 大小/ 是/ 至关重要/ 的/ ./ 如果/ 格栅/ 单元/ 过/ 小/ ,/ 则/ 会/ 频繁/ 地/ 出现/ 一个/ 原始/ 轨迹/ 单元/ 跨越/ 多个/ 格栅/ 单元/ 的/ 情况/ ,/ 从而/ 使得/ 格栅化/ 得不偿失/ ;/ 反之/ ,/ 如果/ 格栅/ 单元/ 过大/ ,/ 又/ 会/ 导致/ 索引/ 块/ 中/ 无用/ 记录/ 增多/ ,/ 并/ 进一步/ 导致/ 元组/ 求精/ 时间/ 的/ 增加/ ./ 为了/ 获得/ 良好/ 的/ 总体/ 性能/ ,/ 在/ 确定/ 格栅/ 单元/ 大/ 小时/ ,/ 可以/ 参照/ 原始/ 轨迹/ 单元/ 的/ 大小/ 按/ 比例/ 放大/ ,/ 使得/ 一个/ 格栅/ 单元/ 能够/ 平均/ 容纳/ φ/ 个/ 原始/ 轨迹/ 单元/ ./ 根据/ 具体/ 的/ 系统/ 情况/ ,/ φ/ 可以/ 取/ 不同/ 的/ 值/ (/ φ/ 还/ 可以/ 取/ 小数/ ,/ 如/ 1.5/ )/ ,/ 见/ 本文/ 的/ 实验/ 部分/ ./ 例如/ ,/ 设/ 系统/ 中/ 移动/ 对象/ 的/ 平均/ 位置/ 更新/ 时间/ 间隔/ 为/ 30s/ ,/ 平均速度/ 为/ 60km/ // h/ ,/ 30s/ 对应/ 的/ 行驶/ 距离/ 为/ 500m/ ,/ 所以/ 原始/ 轨迹/ 单元/ 的/ 平均/ 大小/ 为/ 500m/ ×/ 500m/ ×/ 30s/ ./ 如果/ 取/ φ/ =/ 5/ ,/ 则/ 格栅/ 单元/ 的/ 大小/ 可以/ 确定/ 为/ 2500m/ ×/ 2500m/ ×/ 150s/ ./ 在/ 完成/ Ix/ ×/ Iy/ ×/ It/ 空间/ 的/ 格栅化/ 和/ 原始/ 时空/ 轨迹/ 的/ 概略/ 化/ 之后/ ,/ 以/ 每个/ 概略/ 化/ 轨迹/ 的/ 各个/ 轨迹/ 单元/ 为/ 基本/ 索引/ 记录/ 单位/ 建立/ R/ 树/ 索引/ ,/ 即可/ 得到/ DSTR/ -/ Tree/ ./ 图/ 5/ 给出/ 了/ DSTR/ -/ Tree/ 的/ 结构/ ./ 在/ 图/ 5/ 中/ ,/ DSTR/ -/ Tree/ 叶子/ 结点/ 中/ 的/ 记录/ 项/ 结构/ 为/ 〈/ MBR/ ,/ PTmo/ ,/ stu/ 〉/ ,/ 其中/ stu/ 为/ 概略/ 化/ 轨迹/ 单元/ ,/ MBR/ 为/ 该/ 概略/ 化/ 轨迹/ 单元/ 的/ 最小/ 包容/ 矩形/ ,/ PTmo/ 为/ 指向/ 实际/ 移动/ 对象/ 记录/ 的/ 指针/ 或/ 记录/ 标识/ ./ 中间/ 结点/ 的/ 记录/ 项为/ 〈/ MBR/ ,/ PTnode/ 〉/ ,/ 其中/ MBR/ 包含/ 下层/ 结点/ 所有/ 记录/ 的/ 最小/ 包容/ 矩形/ ,/ PTnode/ 是/ 指向/ 下层/ 结点/ 的/ 指针/ ./ 3.2/ DSTR/ -/ Tree/ 索引/ 的/ 初始/ 建立/ 算法/ 在/ 移动/ 对象/ 数据库/ 中/ 初始/ 建立/ DSTR/ -/ Tree/ 索引/ 时/ ,/ 需要/ 对/ 数据库/ 中/ 的/ 每条/ 时空/ 轨迹/ 进行/ 概略/ 化/ ,/ 并/ 将/ 概略/ 化/ 轨迹/ 中/ 的/ 每个/ 轨迹/ 单元/ 逐一/ 插入/ 到/ DSTR/ -/ Tree/ 中/ ./ 算法/ 2/ 给出/ 了/ DSTR/ -/ Tree/ 的/ 初始/ 建立/ 算法/ ./ 在/ DSTR/ -/ Tree/ 对/ 数据库/ 中/ 的/ 轨迹/ 数据/ 进行/ 处理/ 的/ 同时/ ,/ 移动/ 对象/ 数据库/ 还会/ 继续/ 接收/ 到/ 新/ 的/ 位置/ 更新/ 消息/ ./ 这些/ 新/ 位置/ 更新/ 消息/ 被/ 暂时/ 缓存/ 在/ buffer/ 中/ ,/ 等/ 数据库/ 中/ 的/ 轨迹/ 数据/ 被/ 处理完毕/ 之后/ ,/ 再/ 调用/ 动态/ 维护/ 算法/ (/ 算法/ 3/ )/ 处理/ 这些/ 新/ 收到/ Page8/ 的/ 位置/ 更新/ 消息/ ./ 算法/ 2/ ./ DSTR/ -/ Tree/ 的/ 初始/ 建立/ 算法/ ./ 输入/ :/ MObjs/ // // 移动/ 对象/ 的/ 集合/ 输出/ :/ dstrTree/ // // DSTR/ -/ Tree1/ ./ dstrTtree/ =/ NULL/ ;/ 2/ ./ buffer/ =/ / ;/ 3/ ./ asynExec/ (/ receiveLUMsg/ (/ buffer/ )/ )/ ;/ 4/ ./ FOREACHmo/ ∈/ MObjsDO5/ ./ sketchTraj/ =/ skecth/ (/ mo/ ./ traj/ ,/ mo/ ./ actviveflag/ )/ ;/ 6/ ./ FOREACHskecthTrajUnit/ ∈/ getUnits/ (/ sketchTraj/ )/ 7/ ./ insert/ (/ dstrTree/ ,/ indexRec/ (/ mo/ ./ id/ ,/ 8/ ./ ENDFOR9/ ./ ENDFOR10/ ./ WHILEbuffer/ ≠/ / DO11/ ./ lumsg/ =/ getLUMsg/ (/ buffer/ )/ ;/ 12/ ./ IFnotIndexed/ (/ lumsg/ )/ THEN13/ ./ 调用/ 算法/ 3/ 根据/ lumsg/ 对/ dstrTree/ 进行/ 维护/ ;/ 14/ ./ ENDIF15/ ./ ENDWHILE16/ ./ Return/ (/ dstrTree/ )/ ./ 在/ 算法/ 2/ 中/ ,/ 函数/ asynExec/ (/ func/ )/ 通过/ 启动/ 另/ 一线/ 程/ 异步/ 地/ 执行/ 函数/ func/ ,/ receiveLUMsg/ (/ buffer/ )/ 接收/ 位置/ 更新/ 消息/ 并/ 存入/ 到/ buffer/ 中/ ,/ getUnits/ (/ sketchTraj/ )/ 返回/ sketchTraj/ 中/ 的/ 所有/ 轨迹/ 单元/ 所/ 组成/ 的/ 集合/ ,/ indexRec/ (/ moid/ ,/ stu/ )/ 根据/ 移动/ 对象/ 标识/ moid/ 和/ 概略/ 化/ 轨迹/ 单元/ stu/ 生成/ 相应/ 的/ 索引/ 记录/ ,/ getLUMsg/ (/ buffer/ )/ 从/ buffer/ 中/ 取出/ (/ 同时/ 从/ buffer/ 中/ 删除/ )/ 一个/ 位置/ 更新/ 消息/ ,/ notIndexed/ (/ lumsg/ )/ 判断/ lumsg/ 是否/ 在/ 相应/ 的/ 移动/ 对象/ 被/ 处理/ 之前/ 已经/ 写入/ 其/ 原始/ 轨迹/ 中/ 了/ ,/ 这种/ 情况/ 下/ lumsg/ 的/ 信息/ 已经/ 包含/ 在/ dstrTree/ 中/ 了/ ,/ 不/ 需要/ 再/ 进行/ 处理/ ./ 需要/ 注意/ 的/ 是/ ,/ 概略/ 化/ 轨迹/ 及/ 概略/ 化/ 轨迹/ 单元/ 仅/ 在/ 建立/ 索引/ 和/ 维护/ 索引/ 的/ 过程/ 中/ 使用/ ,/ 并不需要/ 永久/ 地/ 保存/ 在/ 数据库/ 中/ ./ 3.3/ DSTR/ -/ Tree/ 索引/ 在/ 位置/ 更新/ 时/ 的/ 动态/ 维护/ 算法/ 在/ DSTR/ -/ Tree/ 索引/ 初始/ 建立/ 之后/ ,/ 当/ 发生/ 位置/ 更新/ 时/ ,/ 不仅/ 需要/ 在/ 数据库/ 中将/ 新/ 的/ 运行/ 矢量/ 附加/ 到/ 轨迹/ 中/ ,/ 而且/ 还/ 需要/ 对/ DSTR/ -/ Tree/ 进行/ 动态/ 维护/ ./ 由于/ 移动/ 对象/ 在/ 行驶/ 过程/ 中/ 不断/ 地/ 通过/ 位置/ 更新/ 操作/ 向/ 数据库/ 服务器发送/ 新/ 的/ 运行/ 矢量/ ,/ 因此/ 其/ 时空/ 轨迹/ 是/ 随着/ 新/ 的/ 运行/ 矢量/ 的/ 加入/ 而/ 不断/ 增长/ 的/ ./ 当/ 原始/ 轨迹/ 的/ 增长/ 导致/ 概略/ 化/ 轨迹/ 的/ 变化/ 时/ ,/ 就/ 需要/ 同时/ 对/ DSTR/ -/ Tree/ 索引/ 进行/ 相应/ 的/ 修改/ ./ 更/ 具体地说/ ,/ 对于/ 一个/ 活动/ 移动/ 对象/ mo/ ,/ 设其/ 原始/ 时空/ 轨迹/ 为/ traj/ =/ (/ 犿/ 狏/ i/ )/ ndi/ ,/ nposi/ )/ )/ n/ (/ (/ tj/ ,/ xj/ ,/ yj/ )/ )/ k/ 行/ 矢量/ 犿/ 狏/ u/ 时/ ,/ 需要/ 将/ 犿/ 狏/ u/ 附加/ 到/ traj/ 中/ ./ 上述/ 过程/ 对应/ 着/ 原始/ 轨迹/ 的/ 几何/ 曲线/ 的/ 变化/ (/ 见图/ 6/ )/ ,/ 部分/ 情况/ 下/ 原始/ 轨迹/ 的/ 变化/ 也/ 导致/ 概略/ 化/ 轨迹/ 的/ 变化/ ,/ 此时/ 需要/ 对/ DSTR/ -/ Tree/ 进行/ 相应/ 的/ 修改/ ./ 但/ 由于/ 概略/ 化/ 轨迹/ 单元/ 的/ 粒度/ 远大于/ 原始/ 轨迹/ 移动/ 单元/ 的/ 粒度/ ,/ 大部分/ 情况/ 下/ 犿/ 狏/ u/ 加入/ 到/ traj/ 中/ 不会/ 对/ sketch/ (/ traj/ )/ 造成/ 任何/ 改变/ ,/ 此时/ 就/ 不/ 需要/ 对/ 索引/ 进行/ 任何/ 修改/ ./ 图/ 6/ 在/ 发生/ 位置/ 更新/ 时/ 移动/ 对象/ 原始/ 轨迹/ 几何/ 曲线/ 的/ 改变/ 数据库/ 服务器/ 在/ 接收/ 到/ 一个/ 位置/ 更新/ 消息/ 时/ 对/ DSTR/ -/ Tree/ 索引/ 进行/ 维护/ 的/ 过程/ 如/ 算法/ 3/ 所示/ ./ 在/ 该/ 算法/ 中/ ,/ 函数/ getTrajectory/ (/ moid/ )/ 根据/ 移动/ 对象/ 的/ 标识/ 在/ 数据库/ 中/ 检索/ 指定/ 移动/ 对象/ 的/ 轨迹/ (/ 为了/ 加快/ 检索/ 速度/ ,/ 可以/ 基于/ 轨迹/ 数据/ 建立/ 以/ moid/ 为/ 关键字/ 的/ B/ +/ 树/ 索引/ )/ ,/ final/ (/ traj/ )/ 提取/ 轨迹/ traj/ 的/ 最后/ 一个/ 运行/ 矢量/ ,/ getCellsTravelledExt/ (/ μ/ 1/ ,/ μ/ 2/ ,/ …/ )/ 计算/ 轨迹/ 单元/ 序列/ μ/ 1/ ,/ μ/ 2/ ,/ …/ 所/ 穿行/ 的/ 格栅/ 单元/ 序列/ ,/ getSTUnits/ (/ cellseq/ )/ 返回/ 格栅/ 单元/ 序列/ cellseq/ 对应/ 的/ 所有/ 轨迹/ 单元/ 所/ 组成/ 的/ 集合/ ./ 在/ 算法/ 3/ 中/ ,/ cellsTravelledold/ 是/ 原/ 活动/ 轨迹/ 单元/ μ/ (/ 犿/ 狏/ n/ )/ 所/ 穿过/ 的/ 格栅/ 单元/ 的/ 序列/ ,/ 如/ 〈/ cell3/ ,/ Page9cell4/ 〉/ ./ cellsTravellednew/ 是/ μ/ (/ 犿/ 狏/ n/ ,/ 犿/ 狏/ u/ )/ 和/ μ/ (/ 犿/ 狏/ u/ )/ 所/ 穿行/ 的/ 格栅/ 单元/ 序列/ ,/ 如/ 〈/ cell3/ ,/ cell5/ ,/ cell4/ 〉/ 如果/ 二者/ 不/ 相等/ ,/ 则/ 需要/ 对/ DSTR/ -/ Tree/ 进行/ 调整/ ,/ 通过/ 插入/ unitsInsert/ ,/ 并/ 删除/ unitsDelete/ ,/ 可以/ 将/ DSTR/ -/ Tree/ 调整/ 为/ 与/ 新/ 概略/ 化/ 轨迹/ 相对/ 应/ 的/ 状态/ ./ 算法/ 3/ ./ 位置/ 更新/ 时/ DSTR/ -/ Tree/ 索引/ 的/ 维护/ 算法/ ./ 输入/ :/ LUMsg/ =/ (/ moid/ ,/ t/ ,/ (/ x/ ,/ y/ )/ ,/ v/ ,/ d/ ,/ npos/ )/ ;/ 1/ ./ 犿/ 狏/ u/ =/ (/ t/ ,/ (/ x/ ,/ y/ )/ ,/ v/ ,/ d/ ,/ npos/ )/ ;/ 2/ ./ 犿/ 狏/ n/ =/ final/ (/ getTrajectory/ (/ moid/ )/ )/ ;/ 3/ ./ cellsTravelledold/ =/ getCellsTravelled/ (/ μ/ (/ 犿/ 狏/ n/ )/ )/ ;/ 4/ ./ cellsTravellednew/ =/ getCellsTravelledExt/ (/ μ/ (/ 犿/ 狏/ n/ ,/ 犿/ 狏/ u/ )/ ,/ 5/ ./ IFcellsTravelledold/ =/ cellsTravellednewTHEN6/ ./ doNothing/ (/ )/ ;/ 7/ ./ ELSE/ // // 概略/ 化/ 轨迹/ 发生/ 了/ 变化/ 8/ ./ unitsInsert/ =/ getSTUnits/ (/ cellsTravellednew/ )/ -/ 9/ ./ unitsDelete/ =/ getSTUnits/ (/ cellsTravelledold/ )/ -/ 10/ ./ FORskecthUnit/ ∈/ unitsDeleteDO11/ ./ delete/ (/ dstrTree/ ,/ indexRec/ (/ moid/ ,/ skecthUnit/ )/ )/ ;/ 12/ ./ ENDFOR13/ ./ FORskecthUnit/ ∈/ unitsInsertDO14/ ./ insert/ (/ dstrTree/ ,/ indexRec/ (/ moid/ ,/ skecthUnit/ )/ )/ ;/ 15/ ./ ENDFOR16/ ./ ENDIF/ 在/ 移动/ 对象/ 数据库/ 中/ ,/ 每次/ 收到/ 一个/ 新/ 的/ 位置/ 更新/ 消息/ LUMsg/ 时/ ,/ 均/ 需要/ 将/ LUMsg/ 插入/ 到/ 相应/ 移动/ 对象/ 的/ 轨迹/ 中/ ,/ 同时/ 调用/ 算法/ 3/ 对/ 索引/ 进行/ 维护/ ./ 由于/ 概略/ 化/ 轨迹/ 的/ 粒度/ 远大于/ 原始/ 轨迹/ 的/ 粒度/ ,/ 大部分/ 情况/ 下/ 算法/ 3/ 并不需要/ 对/ 索引/ 作/ 任何/ 修改/ (/ 见/ 第/ 5/ ~/ 6/ 行/ )/ ,/ 从而/ 有效/ 地/ 降低/ 了/ 索引/ 更新/ 的/ 代价/ ./ 3.4/ 基于/ DSTR/ -/ Tree/ 的/ 移动/ 对象/ 查询处理/ 算法/ 理/ 方法/ ./ 设有/ 任一/ 查询/ Q/ ,/ 其/ 查询/ 区域/ 为/ 本节/ 分析/ 基于/ DSTR/ -/ Tree/ 的/ 移动/ 对象/ 查询/ 处/ 其中/ Qx/ =/ [/ q0x/ ,/ q1x/ ]/ ,/ Qy/ =/ [/ q0/ 在/ 处理/ 上述/ 查询/ 时/ ,/ 需要/ 首先/ 对/ 查询/ 区域/ range/ (/ Q/ )/ 进行/ 格栅化/ ,/ 即要/ 将/ 查询/ 区域/ 修正/ 为/ 以格/ 栅/ 单元/ 的/ 中心/ 作为/ 区域/ 的/ 起止点/ ,/ 如图/ 7/ 所示/ (/ 为了/ 方便/ 叙述/ ,/ 称/ range/ (/ Q/ )/ 为/ 原始/ 查询/ 区域/ )/ ./ 在/ 图/ 7/ 中/ ,/ 移动/ 对象/ 的/ 原始/ 轨迹/ 和/ 原始/ 查询/ 区域/ range/ (/ Q/ )/ 相交/ ,/ 因此/ 该/ 移动/ 对象/ 理应/ 作为/ 索引/ 的/ 查询/ 结果/ 输出/ ./ 但是/ ,/ 由于/ 在/ DSTR/ -/ Tree/ 中/ 存放/ 的/ 是/ 概略/ 化/ 轨迹/ ,/ 且/ 该/ 概略/ 化/ 轨迹/ 与/ 查询/ 区域/ range/ (/ Q/ )/ 并/ 不/ 相交/ ,/ 因此/ 如果/ 不/ 对/ 查询/ 区域/ 进行/ 格栅化/ ,/ 则/ 会/ 漏检/ 该/ 移动/ 对象/ ./ 通过/ 分析/ 可知/ ,/ 由于/ 所有/ 经过/ 相应/ 格栅/ 单元/ 的/ 原始/ 轨迹/ 都/ 被/ 映射/ 到格/ 栅/ 单元/ 的/ 中心/ 了/ ,/ 因此/ 只要/ 查询/ 区域/ 包含/ 了/ 格栅/ 单元/ 的/ 中心/ 即/ 不会/ 产生/ 漏检/ ./ 对/ 查询/ 区域/ 格栅化/ 的/ 目标/ 即/ 是/ 保证/ 所有/ 其/ 原始/ 轨迹/ 与/ 原始/ 查询/ 区域/ 相交/ 的/ 移动/ 对象/ ,/ 必然/ 有/ 其/ 概略/ 轨迹/ 与/ 格栅化/ 查询/ 区域/ 相交/ ./ 下面/ 以/ Qx/ =/ [/ q0x/ ,/ q1x/ ]/ 的/ 变换/ 为例/ ,/ 分析/ 查询/ 区域/ 格栅化/ 的/ 过程/ ./ 对/ q0x/ 和/ q1x/ 分别/ 进行/ 如下/ 变换/ ,/ 可以/ 将/ 其/ 起始/ 点/ 分别/ 对应/ 到/ 相应/ 格栅/ 单元/ 的/ 中心/ :/ 相应/ 的/ 变换/ ,/ 从而/ 得到/ 格栅化/ 之后/ 的/ 查询/ 区域/ ./ 类似/ 地/ ,/ 可以/ 对/ Qy/ =/ [/ q0/ 注意/ ,/ 格栅化/ 之后/ 的/ 查询/ 区域/ 尽管/ 在/ 形式/ 上/ 表示/ 为/ 一个/ 矩形/ 区域/ ,/ 但/ 由于/ 区域/ 的/ 起始/ 点/ 可以/ 相等/ ,/ 因此/ 实际上/ 可以/ 对应/ 于/ X/ ×/ Y/ ×/ T/ 空间/ 中/ 的/ 一条/ 直线/ 或者/ 一个点/ ./ Page10/ 在/ 完成/ 上述/ 变换/ 之后/ ,/ 可以/ 根据/ 格栅化/ 后/ 的/ 查询/ 区域/ 对/ DSTR/ -/ Tree/ 进行/ 查询/ ,/ 得到/ 一组/ 候选/ 移动/ 对象/ 的/ 集合/ (/ 见/ 算法/ 4/ 中/ 的/ filterResult/ )/ ./ 然后/ 系统对/ filterResult/ 中/ 的/ 移动/ 对象/ 按照/ 查询/ 条件/ 逐个/ 进行/ 计算/ ,/ 并/ 输出/ 满足/ 查询/ 条件/ 的/ 移动/ 对象/ 作为/ 最终/ 查询/ 结果/ ./ 基于/ DSTR/ -/ Tree/ 的/ 查询处理/ 算法/ 如/ 算法/ 4/ 所示/ ./ 在/ 该/ 算法/ 中/ ,/ 函数/ gridCenterAlign/ (/ range/ )/ 对/ 查询/ 区域/ range/ 进行/ 格栅化/ ,/ evaluate/ (/ moTuple/ ,/ Q/ )/ 根据/ 查询/ Q/ 对/ 元组/ moTuple/ 进行/ 计算/ ,/ 如果/ 元组/ 不/ 满足/ 查询/ 条件/ 则/ 返回/ NULL/ ;/ 否则/ 返回/ 查询/ 计算/ 的/ 结果/ ./ 算法/ 4/ ./ 基于/ DSTR/ -/ Tree/ 的/ 移动/ 对象/ 查询处理/ 算法/ ./ 输入/ :/ 查询/ Q/ ,/ 其/ 查询/ 区域/ 为/ range/ (/ Q/ )/ =/ Qx/ ×/ Qy/ ×/ Qt/ ;/ 输出/ :/ refineResult/ // // Q/ 的/ 查询处理/ 结果/ 1/ ./ filterResult/ ←/ Search/ (/ dstrTree/ ,/ 2/ ./ refineResult/ =/ / ;/ 3/ ./ FOREACHPTmo/ ∈/ filterResultDO4/ ./ moTuple/ =/ getTuple/ (/ PTmo/ )/ ;/ 5/ ./ IFevaluate/ (/ moTuple/ ,/ Q/ )/ ≠/ NULLTHEN6/ ./ refineResult/ =/ refineResult/ ∪/ 个/ 阶段/ :/ 7/ ./ ENDIF8/ ./ ENDFOR9/ ./ Return/ (/ refineResult/ )/ ./ 如/ 算法/ 4/ 所示/ ,/ 基于/ DSTR/ -/ Tree/ 的/ 查询/ 分为/ 两/ (/ 1/ )/ 索引/ 筛选/ (/ Filtering/ )/ 阶段/ ,/ 通过/ DSTR/ -/ Tree/ 索引/ 筛选/ 出/ 查询/ 区域/ 所/ 对应/ 的/ 移动/ 对象/ 集合/ filterResult/ (/ 该/ 集合/ 大于/ 实际/ 满足/ 查询/ 条件/ 的/ 移动/ 对象/ 集合/ )/ ;/ (/ 2/ )/ 元组/ 求精/ (/ Refinement/ )/ 阶段/ ,/ 对/ filterResult/ 集合/ 中/ 包含/ 的/ 移动/ 对象/ 的/ 数据库/ 元组/ 进行/ 查询/ 计算/ ,/ 并/ 将/ 最终/ 结果/ refineResult/ 返回/ 给/ 查询/ 用户/ ./ 通过/ 算法/ 4/ 可以/ 看出/ ,/ 数据库系统/ 查询处理/ 的/ 总/ 时间/ 却/ 取决于/ 索引/ 筛选/ 时间/ 和/ 元组/ 求精/ 时间/ ./ 其中/ ,/ 索引/ 筛选/ 时间/ 又/ 受到/ 索引/ 更新/ 代价/ 及/ 索引/ 查询/ 代价/ 的/ 双重/ 影响/ ./ 通过/ 分析/ 可知/ ,/ 系统/ 中格/ 栅/ 单元/ 的/ 粒度/ 越大/ ,/ 则/ 索引/ 更新/ 的/ 代价/ 越低/ ,/ 而/ filterResult/ 中/ 包含/ 的/ 无用/ 记录/ 越/ 多/ ,/ 导致/ 元组/ 求精/ 的/ 代价/ 越大/ ;/ 反之/ ,/ 系统/ 中格/ 栅/ 单元/ 的/ 粒度/ 越小/ ,/ 则/ filterResult/ 中/ 包含/ 的/ 无用/ 记录/ 越/ 少/ ,/ 元组/ 求精/ 的/ 代价/ 也/ 越/ 小/ ,/ 但是/ 索引/ 更新/ 的/ 代价/ 却/ 越/ 高/ ,/ 也/ 会/ 间接/ 影响/ 总体/ 查询/ 性能/ ./ 由此可见/ ,/ 为了/ 达到最佳/ 的/ 总体/ 查询/ 性能/ ,/ 需要/ 选择/ 合适/ 的/ 格栅/ 单元/ 粒度/ ./ 4/ 实验/ 比较/ 与/ 分析/ 在/ “/ 基于/ 路网/ 的/ 移动/ 对象/ 数据库/ 及/ 交通流/ 统计分析/ 系统/ (/ NMOD/ -/ TFSA/ )/ ”/ [/ 25/ ]/ 中/ ,/ 我们/ 实现/ 了/ 本文/ 提出/ 的/ DSTR/ -/ Tree/ 索引/ 模块/ ./ NMOD/ -/ TFSA/ 是/ 在/ PostgreSQL8/ ./ 2.4/ 数据库/ 内核/ 及其/ 空间数据/ 扩展/ PostGIS/ 的/ 基础/ 上/ 实现/ 的/ 一个/ 移动/ 对象/ 数据库系统/ ,/ 支持/ 完整/ 的/ 空间/ 数据类型/ 、/ 交通网络/ 数据类型/ 、/ 移动/ 对象/ 时空/ 轨迹/ 数据类型/ 以及/ 丰富/ 的/ 时空/ 查询/ 与/ 位置/ 更新/ 操作/ ./ NMOD/ -/ TFSA/ 系统/ 的/ 结构/ 如图/ 8/ 所示/ ./ 图/ 8NMOD/ -/ TFSA/ 移动/ 对象/ 数据库系统/ 的/ 结构/ DSTR/ -/ Tree/ 是/ 在/ PostgreSQL/ 所/ 提供/ 的/ 通用/ 索引/ 框架/ GIST/ 的/ 基础/ 上/ 实现/ 的/ ./ GIST/ 是/ 一个/ 可/ 扩充/ 的/ 通用/ 树形/ 索引/ 框架/ ,/ 通过/ 开放/ 相应/ 的/ 索引/ 记录/ 结构/ 定义/ 以及/ 排序/ 、/ 插入/ 、/ 删除/ 、/ 查询/ 等/ 函数/ ,/ 可以/ 实现/ 用户/ 自定义/ 的/ 单层/ 树形/ 索引/ 结构/ ,/ 如/ R/ 树/ 、/ R/ / 树/ 等/ ./ 由于/ DSTR/ -/ Tree/ 是/ 一种/ 典型/ 的/ 单层/ 树形/ 结构/ ,/ 因此/ 可以/ 通过/ GIST/ 无缝/ 地/ 在/ PostgreSQL/ 中/ 实现/ ,/ 这/ 是/ 与/ 其它/ 基于/ 路网/ 的/ 移动/ 对象/ 索引/ 相比/ 所/ 具有/ 的/ 优点/ 之一/ ./ MON/ -/ Tree/ [/ 15/ ]/ 、/ FNR/ -/ Tree/ [/ 14/ ]/ 、/ NDTR/ -/ Tree/ [/ 17/ ]/ 等/ 均/ 采用/ 了/ 双层结构/ ,/ 因此/ 无法/ 直接/ 在/ GIST/ 中/ 实现/ ./ 为了/ 分析/ 相关/ 索引/ 的/ 性能/ ,/ 我们/ 将/ DSTR/ -/ Tree/ 与/ 目前/ 主流/ 的/ 移动/ 对象/ 轨迹/ 索引/ 方法/ 进行/ 了/ 比较/ ./ 由于/ 已经/ 提出/ 的/ 移动/ 对象/ 轨迹/ 索引/ 方法/ 如/ STR/ -/ Tree/ 、/ TB/ -/ Tree/ 、/ MON/ -/ Tree/ 、/ NDTR/ -/ Tree/ 等/ 均/ 以/ 原始/ 轨迹/ 单元/ 作为/ 索引/ 记录/ 的/ 基本/ 单位/ ,/ 因此/ 它们/ 在/ 位置/ 更新/ 时/ 具有/ 相同/ 量级/ 的/ 索引/ 更新/ 频率/ ;/ 此外/ ,/ 由于/ MON/ -/ Tree/ 和/ NDTR/ -/ Tree/ 采用/ 双层结构/ ,/ 不能/ Page11/ 在/ PostgreSQL/ 中/ 基于/ GIST/ 直接/ 实现/ ,/ 而/ DSTR/ -/ Tree/ 的/ 主要/ 设计/ 目的/ 之一/ 即/ 通过/ 单层/ 通用/ 的/ 索引/ 数据结构/ (/ 详见/ 第/ 1/ 节/ )/ ,/ 来/ 克服/ 双层/ 索引/ 结构/ 不易/ 在/ 通用/ DBMS/ 中/ 实现/ 且/ 无法/ 兼容/ 路网/ 之外/ 移动/ 对象/ 的/ 局限/ ,/ 因此/ 本文/ 选择/ 上述/ 方法/ 中/ 最/ 具有/ 代表性/ 的/ 单层/ 索引/ TB/ -/ Tree/ 作为/ 比较/ 对象/ ./ 由于/ TB/ -/ Tree/ 是/ 基于/ Euclidean/ 空间/ 的/ ,/ 而/ DSTR/ -/ Tree/ 可以/ 同时/ 兼容/ Euclidean/ 运行/ 矢量/ 和/ 基于/ 路网/ 的/ 运行/ 矢量/ 两种/ 情况/ ,/ 为了/ 保证/ 实验/ 结果/ 的/ 公正性/ ,/ 在/ 实验/ 中/ 强制/ 规定/ DSTR/ -/ Tree/ 和/ TB/ -/ Tree/ 均/ 处理/ 完全相同/ 的/ 基于/ Euclidean/ 的/ 轨迹/ ,/ 从而/ 使得/ 二者/ 在/ 相同/ 的/ 位置/ 更新/ 频率/ 下/ 进行/ 比较/ 和/ 分析/ ./ 此外/ ,/ TB/ -/ Tree/ 只能/ 处理/ 移动/ 对象/ 的/ 历史/ 轨迹/ 信息/ ,/ 不能/ 依据/ 活动/ 轨迹/ 单元/ 信息/ 对/ 当前/ 位置/ 进行/ 估算/ ./ 为了/ 使之能/ 对/ 当前/ 位置/ 进行/ 预测/ 计算/ 处理/ ,/ 将/ 活动/ 轨迹/ 单元/ 的/ 插入/ 与/ 修正/ 过程/ (/ 见/ 第/ 3.3/ 节/ )/ 也/ 加入/ 到/ TB/ -/ Tree/ 中/ ./ 实验/ 中/ 的/ 交通网络/ 数据/ 采用/ 的/ 是/ 北京市/ 的/ 真实/ GIS/ 地图/ 数据/ (/ 为了/ 实验/ 方便/ ,/ 我们/ 仅/ 选择/ 了/ 三级/ 以上/ 的/ 道路/ )/ ,/ 并/ 通过/ 一个/ 数据/ 转换/ 程序/ ,/ 将/ GIS/ 数据/ 转换成/ 了/ 本文/ 所/ 定义/ 的/ 格式/ ./ 移动/ 对象/ 的/ 轨迹/ 数据/ 则/ 采用/ 了/ 北京/ 星通/ 联华/ 交通/ 科技/ 有限公司/ 提供/ 的/ 北京市/ 出租汽车/ GPS/ 历史数据/ ,/ 通过/ 一个/ 回放/ 程序/ 重新/ 再现/ 移动/ 对象/ 的/ 位置/ 更新/ 及/ 轨迹/ 生成/ 过程/ ./ 实验/ 的/ 硬件平台/ 是/ GenuineIntel/ (/ R/ )/ CPU2140/ 处理器/ ,/ 1.6/ GHz/ 主频/ ,/ 1GB/ 内存/ ,/ 运行/ Linux/ 操作系统/ ./ 表/ 1/ 列出/ 了/ 实验/ 中/ 的/ 主要参数/ ./ 参数/ 名称/ 参数值/ (/ 单位/ )/ Nmo1000/ ~/ 9000NroutesNjunctsLon/ -/ range116/ ./ 125/ ~/ 116.625/ 地图/ 的/ 经度/ 范围/ Lat/ -/ range39/ ./ 75/ ~/ 40.083/ Duration10800/ (/ s/ )/ 每/ 一轮/ 模拟/ 持续/ 的/ 时间/ ξ/ 65/ (/ s/ )/ tuSize1000m/ ×/ 1000m/ ×/ 65s/ 原始/ 轨迹/ 单元/ 平均/ 大小/ φ/ 2/ ~/ 10cellSizetuSize/ ×/ φ/ (/ φ/ =/ 2/ ~/ 10/ )/ DSTR/ -/ Tree/ 进行/ 空间/ 划分/ 时/ 的/ 在/ 实验/ 数据/ 集中/ ,/ 原始/ 轨迹/ 单元/ 的/ 平均/ 大小/ 大约/ 为/ tuSize/ =/ 1km/ ×/ 1km/ ×/ 65s/ ./ DSTR/ -/ Tree/ 格栅/ 单元/ 的/ 大小/ 取其/ φ/ 倍/ ,/ 如当/ φ/ =/ 5/ 时/ ,/ 格栅/ 单元/ 的/ 大小/ 为/ cellSize/ =/ 5km/ ×/ 5km/ ×/ 325s/ ./ 为了/ 实验/ 方便/ ,/ 统一/ 取/ φ/ 为/ 2/ 、/ 4/ 、/ 6/ ,/ 即/ 比较/ cellSize/ 分别/ 取值/ 为/ 2km/ ×/ 2km/ ×/ 130s/ 、/ 4km/ ×/ 4km/ ×/ 260s/ 、/ 6km/ ×/ 6km/ ×/ 390s/ 时/ 的/ 实验/ 结果/ ./ 总/ 操作数/ 来/ 表示/ )/ ;/ 在/ 实验/ 中/ 比较/ 的/ 性能指标/ 包括/ :/ (/ 1/ )/ 索引/ 更新/ 代价/ (/ 以/ 索引/ 记录/ 插入/ 和/ 删除/ 的/ (/ 2/ )/ 索引/ 所/ 占用/ 的/ 存储空间/ 大小/ ;/ (/ 3/ )/ 数据库/ 的/ 查询处理/ 时间/ ;/ (/ 4/ )/ 数据库/ 的/ 查询处理/ 时间/ 与格/ 栅/ 单元/ 大小/ 之间/ 的/ 关系/ ./ 索引/ 更新/ 代价/ 的/ 实验/ 结果/ 如图/ 9/ 所示/ ./ 从图/ 中/ 可以/ 看出/ ,/ DSTR/ -/ Tree/ 在/ 各种/ 参数/ 条件/ 下/ 的/ 索引/ 更新/ 代价/ 都/ 低于/ TR/ -/ Tree/ ./ 由于/ DSTR/ -/ Tree/ 加大/ 了/ 索引/ 记录/ 的/ 粒度/ ,/ 不/ 需要/ 像/ TB/ -/ Tree/ 那样/ 在/ 每次/ 位置/ 更新/ 时/ 都/ 要/ 往/ 索引/ 中/ 写入/ 新/ 记录/ ,/ 因此/ 减少/ 了/ 索引/ 更新/ 的/ 次数/ ./ 另外/ 可以/ 看出/ ,/ DSTR/ -/ Tree/ 的/ 格栅/ 粒度/ 越大其/ 索引/ 更新/ 代价/ 越低/ ,/ 因为/ 移动/ 对象/ 仅/ 在/ 其/ 时空/ 轨迹/ 跨越/ 格栅/ 单元/ 时才/ 需要/ 进行/ 索引/ 更新/ ./ 图/ 10/ 给出/ 了/ 索引/ 存储空间/ 消耗/ 的/ 实验/ 结果/ ./ 从图/ 中/ 可以/ 看出/ ,/ DSTR/ -/ Tree/ 在/ 各种/ 参数/ 条件/ 下/ 的/ 索引/ 存储空间/ 普遍/ 低于/ TB/ -/ Tree/ ./ 这/ 是因为/ DSTR/ -/ Tree/ 索引/ 以/ 概略/ 化/ 轨迹/ 单元/ 为/ 索引/ 记录/ 的/ 基本/ 单位/ ,/ 而/ TB/ -/ Tree/ 以/ 原始/ 轨迹/ 单元/ 为/ 索引/ 的/ 记录/ 单位/ ./ 对于/ 同一个/ 移动/ 对象/ ,/ 其/ 概略/ 化/ 轨迹/ 单元/ 的/ 数目/ 远/ 小于/ 原始/ 轨迹/ 单元/ 的/ 数目/ ,/ 因此/ DSTR/ -/ Tree/ 的/ 记录/ 数比/ TB/ -/ Tree/ 要少/ ,/ 索引/ 存储空间/ 也/ 小于/ TB/ -/ Tree/ ./ 图/ 11/ 是/ 移动/ 对象/ 数据库/ 在/ 频繁/ 位置/ 更新/ 的/ 动态/ 运行/ 条件/ 下/ 进行/ 查询处理/ 的/ 时间/ ./ 如前所述/ ,/ 查询处理/ 时间/ 由/ 索引/ 查找时间/ 和/ 元组/ 求精/ 时间/ 组成/ ./ 为了/ 显示/ 查询处理/ 各/ 阶段/ 时间/ 的/ 细节/ ,/ 在/ 图/ 11/ (/ a/ )/ 和/ 图/ 11/ (/ b/ )/ 分别/ 给出/ 索引/ 查询/ 时间/ 和/ 元组/ 求精/ 时间/ 的/ 实验/ 结果/ ,/ 在/ 图/ 11/ (/ c/ )/ 中/ 给出/ 总体/ 查询处理/ 时间/ ./ Page12/ 从图/ 11/ (/ a/ )/ 可以/ 看出/ ,/ DSTR/ -/ Tree/ 的/ 索引/ 查找时间/ 总体/ 上/ 低于/ TB/ -/ Tree/ ,/ 这/ 是因为/ 一方面/ TB/ -/ Tree/ 比/ DSTR/ -/ Tree/ 要/ 大/ ,/ 因此/ 索引/ 查找/ 需要/ 扫描/ 图/ 11DSTR/ -/ Tree/ 与/ TB/ -/ Tree/ 的/ 性能/ 比较/ 为了/ 更好/ 地/ 分析/ 查询/ 响应/ 时间/ 与格/ 栅/ 单元/ 大小/ 的/ 关系/ ,/ 变化/ φ/ 的/ 取值/ ,/ 从而/ 得到/ 格栅/ 大小/ 与/ 查询/ 响应/ 时间/ 的/ 关系/ 如图/ 12/ 所示/ (/ 实验/ 中/ 移动/ 对象/ 的/ 个数/ 固定/ 为/ 5000/ 个/ )/ ./ 更/ 多/ 的/ 记录/ ;/ 另一方面/ ,/ TB/ -/ Tree/ 在/ 索引/ 查找/ 的/ 同时/ 需要/ 处理/ 频繁/ 的/ 索引/ 更新/ 操作/ ,/ 而/ DSTR/ -/ Tree/ 的/ 索引/ 更新/ 代价/ 要/ 小得多/ ./ 如图/ 11/ (/ b/ )/ 所示/ ,/ 总体/ 上/ 讲/ ,/ DSTR/ -/ Tree/ 的/ 元组/ 求精/ 时间/ 也/ 少于/ TB/ -/ Tree/ ./ 尽管/ TB/ -/ Tree/ 比/ DSTR/ -/ Tree/ 具有/ 更/ 高/ 的/ 准确率/ (/ 即/ filterResult/ 中/ 包含/ 的/ 无用/ 记录/ 少/ )/ ,/ 但是/ 这一/ 优势/ 被/ 频繁/ 的/ 索引/ 更新/ 操作/ 抵消/ 掉/ 了/ ./ 从图/ 11/ (/ c/ )/ 可以/ 看出/ ,/ 在/ 频繁/ 位置/ 更新/ 的/ 条件/ 下/ ,/ DSTR/ -/ Tree/ 比/ TB/ -/ Tree/ 具有/ 更快/ 的/ 动态/ 查询处理/ 时间/ ./ 查询处理/ 时间/ 是/ 索引/ 查找时间/ 与/ 元组/ 求精/ 时间/ 之/ 和/ ,/ 再/ 加上/ 一些/ 额外/ 的/ 开销/ ,/ 它/ 同样/ 极大/ 地/ 受到/ 索引/ 更新/ 代价/ 的/ 影响/ ./ 此外/ ,/ 从图/ 中/ 还/ 可以/ 看出/ ,/ DSTR/ -/ Tree/ 的/ 查询/ 响应/ 时间/ 与格/ 栅/ 的/ 大小/ 不/ 呈/ 单调/ 关系/ ./ 从图/ 中/ 可以/ 出看/ ,/ 在/ 本文/ 的/ 实验/ 环境/ 下/ ,/ 当格/ 栅/ 大小/ 是/ 原始/ 轨迹/ 单元/ 大小/ 的/ 4/ 倍/ (/ 即/ φ/ =/ 4/ )/ 时/ ,/ 系统/ 能/ 达到最佳/ 的/ 总体/ 查询/ 性能/ ./ 格栅/ 单元/ 大小/ 的/ 选择/ 与/ 实验/ 环境/ 密切相关/ ,/ 通常/ 的/ 影响/ 因素/ 包括/ 数据库/ Page13/ 图/ 12/ 查询/ 响应/ 时间/ 与格/ 栅/ 单元/ 大小/ 的/ 关系/ 服务器/ 的/ 读写/ 负荷/ 比例/ 、/ 元组/ 求精/ 计算速度/ 、/ 数据库/ 写/ 速度/ 等/ ./ 综合/ 以上/ 分析/ ,/ 与/ TB/ -/ Tree/ 等/ 以/ 移动/ 对象/ 原始/ 轨迹/ 单元/ 为/ 基本/ 索引/ 单位/ 的/ 索引/ 方法/ 相比/ ,/ DSTR/ -/ Tree/ 在/ 移动/ 对象/ 数据库/ 频繁/ 位置/ 更新/ 的/ 现实/ 动态/ 运行/ 条件/ 下/ 具有/ 更好/ 的/ 总体/ 性能/ ./ 5/ 结论/ 移动/ 对象/ 索引/ 是/ 支持/ 海量/ 移动/ 对象/ 管理/ 的/ 一项/ 关键技术/ ./ 然而/ ,/ 目前/ 的/ 移动/ 对象/ 轨迹/ 索引/ 方法/ 如/ STR/ -/ Tree/ 、/ TB/ -/ Tree/ 、/ FNR/ -/ Tree/ 、/ MON/ -/ Tree/ 、/ NDTR/ -/ Tree/ 等/ 均/ 以/ 轨迹/ 单元/ 作为/ 索引/ 的/ 基本/ 记录/ 单位/ ,/ 每次/ 位置/ 更新/ 的/ 同时/ 需要/ 进行/ 一次/ 索引/ 更新/ ,/ 从而/ 极大/ 地/ 增加/ 了/ 索引/ 更新/ 的/ 代价/ ,/ 限制/ 了/ 数据库系统/ 所/ 能/ 支持/ 的/ 移动/ 对象/ 的/ 规模/ ./ 此外/ ,/ 现有/ 的/ 网络/ 受限/ 移动/ 对象/ 的/ 轨迹/ 索引/ 只能/ 支持/ 移动/ 对象/ 与/ 路网/ 完全/ 匹配/ 的/ 情况/ ,/ 且/ 采用/ 双层结构/ ,/ 缺乏/ 必要/ 的/ 灵活性/ ,/ 影响/ 了/ 它们/ 在/ 实际/ 应用/ 系统/ 中/ 的/ 广泛/ 使用/ ./ 为了/ 解决/ 上述/ 问题/ ,/ 本文/ 提出/ 了/ 一种/ 网络/ 受限/ 移动/ 对象/ 的/ 动态/ 概略/ 化/ 轨迹/ R/ 树/ 索引/ (/ DSTR/ -/ Tree/ )/ ./ DSTR/ -/ Tree/ 以/ 移动/ 对象/ 的/ 概略/ 化/ 轨迹/ 单元/ 作为/ 索引/ 记录/ 的/ 基本/ 单位/ ,/ 当/ 移动/ 对象/ 不/ 跨越/ 格栅/ 单元/ 时/ 不/ 需要/ 对/ 索引/ 进行/ 更新/ ,/ 因此/ 降低/ 了/ 索引/ 更新/ 的/ 代价/ ,/ 有效/ 地/ 提高/ 了/ 移动/ 对象/ 数据库/ 的/ 动态/ 查询/ 性能/ ./ 此外/ ,/ DSTR/ -/ Tree/ 采用/ 典型/ 的/ 单层/ 树形/ 结构/ ,/ 可以/ 无缝/ 地/ 在/ 通用/ 数据库/ 框架/ 如/ PostgreSQL/ 中/ 实现/ ./ 最后/ ,/ DSTR/ -/ Tree/ 能够/ 同时/ 支持/ 移动/ 对象/ 在/ 路网/ 内/ 和/ 在/ 路网/ 之外/ 移动/ 的/ 情况/ ,/ 具有/ 充分/ 的/ 灵活性/ 和/ 实用性/ ./ 实验/ 结果表明/ ,/ DSTR/ -/ Tree/ 在/ 实际/ 移动/ 对象/ 数据库/ 频繁/ 位置/ 更新/ 的/ 现实/ 条件/ 下/ ,/ 提供/ 了/ 优秀/ 的/ 索引/ 维护/ 及/ 总体/ 查询处理/ 性能/ ./ 致谢/ 感谢/ 中国科学院/ 软件/ 研究所/ 的/ 郭黎敏/ 博士/ 在/ NMOD/ -/ TFSA/ 系统/ 实现/ 及/ DSTR/ -/ Tree/ 索引/ 实验/ 方面/ 所作/ 的/ 大量/ 工作/ !/ 

