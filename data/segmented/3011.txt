Page1/ 面向/ 时延/ 优化/ 的/ Overlay/ 路由/ 策略/ 研究/ 叶/ 枰/ 1/ )/ ,/ 2/ )/ 李益忠/ 1/ )/ ,/ 2/ )/ 夏勤/ 1/ )/ ,/ 2/ )/ 1/ )/ (/ 东南大学/ 计算机网络/ 和/ 信息/ 集成/ 教育部/ 重点/ 实验室/ 南京/ 210096/ )/ 2/ )/ (/ 东南大学/ 计算机科学/ 与/ 工程学院/ 南京/ 210096/ )/ 摘要/ 路由/ 扩展性/ 是/ Overlay/ 网络/ 的/ 研究/ 热点/ ,/ 其中/ 网络/ 时延/ 作为/ Overlay/ 路由/ 性能/ 的/ 一个/ 关键/ 指标/ 已/ 成为/ 重点/ 研究/ 内容/ 之一/ ./ 文中/ 对/ Overlay/ 路由/ 及其/ 扩展性/ 问题/ 进行/ 描述/ ,/ 并/ 在/ 此基础/ 上/ 进行/ 数学/ 建模/ 和/ 分析/ ./ 针对/ 时延/ 优化/ 目标/ ,/ 提出/ 一种/ 基于/ 蚁群/ 算法/ 的/ 单/ 跳/ 路由/ 路径/ 策略/ 来/ 处理/ 邻居/ 节点/ 集合/ 维护/ 的/ 问题/ :/ 通过/ 蚂蚁/ 爬行/ 的/ 过程/ 建立/ 邻居/ 节点/ 集合/ ,/ 并/ 根据/ 设定/ 的/ 质量/ 评估/ 函数/ 进行/ 修剪/ 来/ 控制/ 每个/ 节点/ 上/ 维护/ 的/ 邻居/ 节点/ 集合/ 大小/ ./ 通过/ 仿真/ 实验/ 对/ Overlay/ 路由/ 性能/ 进行/ 的/ 分析/ ,/ 证实/ 了/ Overlay/ 路由/ 在/ 时延/ 优化/ 方面/ 的/ 可行性/ ,/ 同时/ 实验/ 结果表明/ 了/ ACOHPR/ 在/ 对/ 平均/ 时延/ 影响/ 很小/ 的/ 情况/ 下/ 能够/ 有效/ 地/ 降低/ 每个/ 节点/ 的/ 邻居/ 节点/ 集合/ 大小/ ./ 关键词/ 时延/ 优化/ ;/ 单跳/ 路径/ 路由/ ;/ Overlay/ 路由/ ;/ 蚁群/ 算法/ ;/ 邻居/ 节点/ 集合/ 1/ 引言/ Overlay/ 思想/ 在/ 计算机网络/ 发展/ 过程/ 中/ 起到/ 了/ Page2/ 提供/ 了/ 有力/ 的/ 保障/ ./ 近年来/ 网络/ 研究/ 人员/ 进一步/ 拓展/ 了/ Overlay/ 的/ 概念/ ,/ 通过/ 在/ 现有/ 网络/ 的/ 应用层/ 构建/ Overlay/ 网络/ 来/ 实现/ 新/ 应用/ ,/ 满足用户/ 的/ 新/ 需求/ ./ 这些/ 系统/ 的/ 快速/ 发展/ 和/ 普及/ ,/ 不仅/ 改变/ 了/ 网络应用/ 的/ 形式/ 和/ 内容/ ,/ 同时/ 也/ 促进/ 了/ 互联网/ 本身/ 的/ 变化/ 和/ 发展/ ./ Overlay/ 路由/ 是/ Overlay/ 网络/ 研究/ 的/ 重要/ 组成部分/ ,/ 通过/ 在/ 现有/ 网络/ 的/ 基础/ 上/ 组织/ 起/ 虚拟/ 的/ 通信/ 结构/ 可以/ 有效/ 地/ 增强/ 现有/ 网络/ 路由/ 的/ 可靠性/ ,/ 提高/ 网络/ 对/ 不同/ 应用/ 需求/ 的/ 服务/ 能力/ ,/ 文献/ [/ 1/ -/ 3/ ]/ 通过/ 对/ Overlay/ 网络拓扑/ 连通性/ 及/ 节点/ 之间/ 的/ 通信/ 距离/ 的/ 建模/ 说明/ 了/ Overlay/ 路由/ 相对/ 于/ 原有/ IP/ 路由/ 的/ 优势/ ./ Overlay/ 路由/ 的/ 性能/ 问题/ 更是/ 研究/ 重点/ ,/ 文献/ [/ 4/ ]/ 提出/ 了/ 一种/ 基于/ 代价/ 的/ 模型/ 来/ 评估/ Overlay/ 网络/ 中/ 资源/ 使用/ 代价/ ,/ 包括/ 时延/ 、/ 带宽/ 和/ 节点/ 计算能力/ 等/ ,/ 并且/ 为/ 一些/ 针对/ 该/ 网络/ 的/ 拓扑/ 结构/ 进行/ 评定/ ,/ 而/ 文献/ [/ 5/ ]/ 则/ 对/ 网络/ 中/ 的/ 可用/ 带宽/ 实时/ 监控/ 以/ 实施/ 动态/ 的/ Overlay/ 路由/ ./ 作为/ 考察/ Overlay/ 路由/ 性能/ 的/ 一个/ 重要/ 方面/ ,/ 网络/ 时延/ 参数/ [/ 6/ -/ 7/ ]/ 被/ 定义/ 为/ 数据/ 从源端/ 经过/ 网络/ 到达/ 目的/ 端/ 所/ 花费/ 的/ 时间/ ./ Detour/ [/ 8/ ]/ 研究/ 人员/ 已经/ 发现/ :/ 网络通信/ 过程/ 中/ ,/ 在/ 网络/ 中/ 找到/ 一个/ 或者/ 多个/ 节点/ 来/ 转发/ 数据/ ,/ 实现/ 通信/ 对/ 端的/ 数据/ “/ 绕行/ ”/ ,/ 可以/ 获得/ 比/ IP/ 路由/ 提供/ 路径/ 更好/ 的/ 通信/ 效果/ ./ 研究/ 结果/ 发现/ 通过/ “/ 绕行/ ”/ 的/ 方式/ ,/ 约/ 15/ %/ 的/ 通信/ 链接/ 可以/ 缩短/ 时延/ 达/ 25/ %/ ,/ 大于/ 15/ %/ 的/ 链路/ 可以/ 将/ 通信/ 时延/ 降低/ 25ms/ ./ 此外/ ,/ 这种/ 工作/ 方式/ 还/ 对/ 通信/ 吞吐/ 率/ 、/ 丢/ 包率/ 等/ 性能/ 有/ 明显/ 的/ 提高/ ./ 文献/ [/ 9/ ]/ 对/ 从/ Planetlab/ 上/ 收集/ 的/ 时延/ 数据/ 进行/ 分析/ 比较/ ,/ 结果显示/ Overlay/ 方式/ 最短/ 路径/ 路由/ 策略/ 可以/ 将/ 现有/ 网络/ 中/ 不可/ 达/ 节点/ 对/ 比例/ 从/ 9/ %/ 减少/ 到/ 2/ %/ ,/ 同时/ 77/ %/ 的/ 节点/ 对/ 能够/ 改善/ 其/ 平均/ 时延/ ,/ 从/ 220ms/ 减少/ 到/ 181ms/ ./ 随后/ 的/ 研究/ 中/ ,/ 人们/ 开始/ 希望/ Overlay/ 网络/ 可以/ 在/ 通过/ “/ 绕行/ ”/ 提供/ 更好/ 通信/ 性能/ 同时/ 为/ 不同/ 应用/ 提供/ 不同/ 的/ 性能/ 满足/ 支持/ ./ MIT/ 研究/ 人员/ 开发/ 的/ RON/ [/ 10/ ]/ 系统/ 是/ 对/ Overlay/ 路由/ 系统/ 的/ 最早/ 实现/ 方案/ ,/ 它/ 主要/ 通过/ 实时/ 的/ 链路/ 状态/ 检测/ 与/ 状态/ 信息/ 维护/ ,/ 动态/ 地/ 在/ Overlay/ 网络/ 中/ 找到/ 一个/ 中间/ 节点/ 转发/ 数据/ ,/ 实现/ 系统对/ 网络/ 链路/ 失效/ 的/ 快速/ 的/ 检测/ 和/ “/ 绕行/ ”/ ./ 在/ 选取/ 中间/ 转发/ 节点/ 的/ 过程/ 中/ ,/ 路由表/ 项/ 的/ 组织/ 和/ 查询/ 会/ 对系统/ 工作效率/ 产生/ 直接/ 的/ 影响/ ./ 最短/ 路径/ 路由/ (/ OverlaybasedShortestPathRouting/ ,/ OSPR/ )/ [/ 11/ -/ 12/ ]/ 策略/ 给出/ 了/ 一个/ 理想/ 情况/ 下/ 的/ Overlay/ 路由/ 方案/ ,/ 系统/ 中/ 的/ 每个/ 节点/ 通过/ 交互/ 获取/ 相关/ 的/ 路由/ 信息/ ,/ 计算/ 整个/ 网络/ 中点/ 对/ 之间/ 最短/ 路径/ ,/ 构建/ 自己/ 的/ 路由表/ ./ 该/ 策略/ 虽然/ 能够/ 保证/ 获得/ 整个/ 网络/ 节点/ 对/ 之间/ 最优/ 时延/ ,/ 但/ 对/ 网络/ 本身/ 提出/ 了/ 很/ 高/ 要求/ :/ 节点/ 之间/ 有/ 很/ 好/ 的/ 同步/ 能力/ ,/ 系统/ 在/ 特定/ 时刻/ 只/ 对/ 单一/ 节点/ 发出/ 的/ 消息/ 进行/ 处理/ ;/ 链路/ 有/ 较/ 强/ 的/ 容错/ 能力/ ,/ 不会/ 突然/ 失效/ 或/ 长时间/ 出错/ ./ 这/ 两个/ 条件/ 由于/ 在/ 网络/ 环境/ 下/ 很/ 难/ 满足/ ,/ 极大/ 地/ 限制/ 了/ 该/ 算法/ 在/ Overlay/ 网络/ 中/ 的/ 应用/ ./ 本文/ 首先/ 对/ Overlay/ 路由/ 及其/ 扩展性/ 问题/ 进行/ 描述/ ,/ 并/ 在/ 此基础/ 上/ 进行/ 数学/ 建模/ 和/ 分析/ ./ 其次/ 提出/ 一种/ 改进/ 的/ 蚁/ 群/ 算法/ 来/ 处理/ 单跳/ 路由/ 转发/ 策略/ 中/ 邻居/ 节点/ 维护/ 的/ 问题/ ,/ 通过/ 在/ 单/ 跳/ 路由/ 系统/ 中/ 控制/ 每个/ 节点/ 上/ 维护/ 的/ 邻居/ 节点/ 集合/ 大小/ 来/ 降低/ 整个/ Overlay/ 网络/ 路由/ 的/ 管理/ 开销/ 以及/ 查询/ 开销/ ./ 最后/ 通过/ 仿真/ 实验/ 对/ Overlay/ 路由/ 扩展/ 性能/ 进行/ 分析/ ,/ 证实/ 了/ Overlay/ 路由/ 在/ 时延/ 优化/ 方面/ 的/ 有效性/ ,/ 同时/ 实验/ 结果表明/ 了/ ACOHPR/ 在/ 降低/ 维护/ 开销/ 和/ 运行/ 开销/ 的/ 可行性/ 和/ 有效性/ ./ 2/ 面向/ 时延/ 优化/ 的/ Overlay/ 路由/ 2.1/ 问题/ 描述/ Overlay/ 路由/ 是/ 建立/ 在/ 现有/ 网络/ 基础/ 上/ 满足/ 不同/ 通信/ 需求/ 的/ 路径/ 选择/ 过程/ ./ Overlay/ 路由/ 系统/ 的/ 性能/ 取决于/ 两个/ 很/ 重要/ 的/ 因素/ :/ 用户/ 的/ 应用/ 需求/ 和/ 网络/ 的/ 具体/ 工作/ 状况/ ./ 本文/ 从/ 时延/ 性能/ 的/ 角度/ 讨论/ Overlay/ 路由/ 对/ 现有/ 互联网/ 中/ 网络/ 连通/ 性能/ 的/ 影响/ ,/ 首先/ 引入/ 系统/ 工作/ 的/ 几点/ 基本/ 假设/ ./ 假设/ 1/ ./ IP/ 路由/ 次优/ 性/ 在/ 广域网/ 环境/ 下/ 客观存在/ ./ 本文/ 假设/ Overlay/ 路由/ 系统/ 工作/ 在/ 一个/ 足够/ 复杂/ 的/ 广域网/ 环境/ 下/ ,/ 具体表现/ 为/ :/ IP/ 路由/ 提供/ 的/ 单播/ 路径/ 在/ 时延/ 上/ 未必/ 为/ 最优/ 路径/ ,/ 可以/ 通过/ Overlay/ 方式/ 的/ 中间/ 节点/ 转发/ 进行/ 优化/ (/ 减小/ 通信/ 时延/ )/ ./ 假设/ 2/ ./ Overlay/ 网络/ 中/ 的/ 节点/ 具有/ 足够/ 的/ 数据处理/ 和/ 数据/ 转发/ 能力/ ./ 本文/ 假设/ Overlay/ 网络/ 中/ 节点/ 具有/ 足够/ 能力/ 来/ 对/ 数据/ 进行/ 处理/ 和/ 转发/ ,/ 系统/ 性能/ 的/ 瓶颈/ 主要/ 存在/ 于/ 传输/ 链路/ 上/ ,/ 表现/ 为/ 不合理/ 的/ 路由/ 结构/ 以及/ 路由/ 控制策略/ ./ 针对/ Overlay/ 网络/ 中/ 通信/ 性能/ 的/ 时延/ 参数/ ,/ 假定/ 在/ 节点/ 上/ 进行/ 数据处理/ 和/ 数据/ 转发/ 的/ 开销/ 是/ 很小/ 的/ ,/ 相对/ 于/ 链路/ 传输/ 性能/ 造成/ 的/ 影响/ 可以/ 忽略不计/ ./ Overlay/ 路由/ 系统/ 的/ 主要/ 目标/ 就是/ 利用/ Overlay/ 网络/ 中/ 节点/ 的/ 处理/ 能力/ 来/ 选择/ 合理/ 的/ 通信/ 路径/ ,/ 让/ 数据通信/ 沿着/ 时延/ 较/ 小/ 的/ 路径/ 进行/ ,/ 进而/ 优化/ 通信/ 时延/ ./ Page3/ 假设/ 3/ ./ Overlay/ 网络/ 可以/ 通过/ 一定/ 的/ 检测/ 机制/ 来/ 对/ 网络/ 链路/ 时延/ 状况/ 进行/ 评估/ ./ 本文/ 假设/ 链路/ 时延/ 状态/ 可以/ 通过/ 多次/ 实时/ 测量/ 中/ 的/ 最小值/ 反映/ 出来/ ,/ 随着/ 通信/ 路径/ 上路/ 由/ 结构/ 的/ 变化/ 而/ 变化/ ./ 在/ 上述/ 假设/ 基础/ 上/ ,/ 考虑/ 这样/ 一个/ 部署/ 在/ 现有/ 互联网/ 上/ 的/ Overlay/ 路由/ 系统/ 工作/ 场景/ :/ Overlay/ 网络/ 中/ 的/ 节点/ 通过/ 一定/ 策略/ 的/ 检测/ 来/ 估量/ 到/ 网络/ 中/ 其他/ 节点/ 之间/ 的/ 通信/ 时延/ 状况/ ,/ 并且/ 通过/ 一定/ 的/ 方式/ 来/ 发送/ 这些/ 路由/ 信息/ 给/ 其他/ 节点/ ./ 当/ 节点/ 接受/ 其他/ 节点/ 发出/ 的/ 路由/ 通告/ 后/ ,/ 就/ 可以/ 根据/ 这些/ 通告/ 来/ 计算/ 本地/ 的/ 路由/ 信息/ ./ 节点/ 根据/ 这些/ 信息/ 来/ 动态/ 地/ 更新/ 和/ 维护/ 链路/ 信息库/ ,/ 通信/ 之前/ 通过/ 查询/ 来/ 选择/ 合适/ 的/ 转发/ 节点/ 进行/ 数据传输/ ./ 定义/ 1/ ./ 单跳/ 路径/ 路由/ (/ OneHopPathRou/ -/ ting/ ,/ OHPR/ )/ ./ Overlay/ 网络/ 中/ 任意/ 两点/ 之间/ 的/ 通信/ 最/ 多只/ 通过/ 一个/ 节点/ 作为/ 中间/ 节点/ 进行/ 数据/ 转发/ ./ 定义/ 2/ ./ 邻居/ 节点/ 集合/ (/ NeighbourSet/ )/ ./ 每个/ 节点/ 维护/ 的/ 一个/ 相对/ 较/ 小/ 的/ 节点/ 集合/ ,/ 集合/ 中/ 的/ 元素/ 根据/ 自己/ 的/ 网络/ 状况/ 从/ 整个/ 网络/ 节点/ 中/ 选取/ ./ 定义/ 3/ ./ 时延/ 优化/ (/ DelayOptimization/ )/ ./ 对/ 任意/ 两点/ 之间/ 的/ 通信/ 时延/ 进行/ 优化/ ./ 在/ 本文/ 中/ ,/ 时延/ 优化/ 的/ 策略/ 是/ 采用/ Overlay/ 路由/ 对/ IP/ 路由/ 方式/ 进行/ 优化/ ./ 单跳/ 路径/ 路由/ 作为/ Overlay/ 路由/ 方式/ 的/ 一种/ 特例/ ,/ 实现/ 了/ 通信/ 的/ “/ 绕行/ ”/ ,/ 有效/ 地/ 减少/ 传统/ 多条/ 转发/ 路由/ 策略/ 中慢/ 收敛/ 、/ 摆动/ 等/ 问题/ ,/ 但/ 同时/ 也/ 意味着/ 每个/ 节点/ 都/ 需要/ 实时/ 地/ 维护/ 一个/ 与/ 网络/ 规模/ 同样/ 大小/ 的/ 路由/ 信息库/ 支持/ 路由/ 选择/ ,/ 路径/ 选择/ 时/ 需要/ 查询/ 一个/ 与/ 网络/ 规模/ 相当/ 的/ 路由表/ ,/ 这种/ 工作/ 方式/ 使得/ 整个/ 系统/ 在/ 扩展性/ 上/ 受到/ 了/ 很大/ 的/ 限制/ ./ 近年来/ 的/ 一些/ 研究/ 人员/ 提出/ 了/ 使用/ k/ 随机/ 选择/ 算法/ [/ 6/ ]/ 来/ 提高/ 系统/ 的/ 扩展性/ ,/ 通过/ 在/ 一个/ 小/ 范围/ 内/ 进行/ 选择/ 转发/ 来/ 提高/ 系统对/ 失效/ 链路/ 的/ 快速反应/ ./ 但/ 这种/ 方式/ 不/ 能够/ 完全/ 满足/ 对/ 通信/ 质量/ (/ 时延/ 、/ 带宽/ 等/ )/ 有/ 要求/ 的/ 情况/ ./ 邻居/ 节点/ 集合/ 的/ 方式/ 缩小/ 了/ 每个/ 节点/ 的/ 查询/ 范围/ ,/ 即/ 每个/ 节点/ 只/ 需要/ 根据/ 网络/ 状况/ 维护/ 一个/ 相对/ 较/ 小/ 的/ 节点/ 集合/ ./ 发送数据/ 前/ ,/ 首先/ 查询/ 邻居/ 接/ 节点/ 集合/ 中/ 是否/ 有/ 节点/ 可以/ 对/ 本次/ 通信/ 进行/ 时延/ 优化/ ,/ 如果/ 有/ ,/ 则/ 使用/ 该/ 节点/ 进行/ 数据/ 转发/ ;/ 否则/ ,/ 使用/ 原有/ IP/ 路由/ 进行/ 通信/ ./ 这样/ 只/ 需要/ 为/ 每个/ 节点/ 找到/ 最合适/ 的/ 邻居/ 节点/ 集合/ 就/ 可以/ 对/ 整个/ Overlay/ 路由/ 通信/ 性能/ 以及/ 维护/ 开销/ 进行/ 改善/ ./ 因此/ Overlay/ 系统/ 中/ 每个/ 节点/ 维护/ 的/ 邻居/ 节点/ 集合/ 的/ 大小/ 可以/ 作为/ 考察/ 系统维护/ 开销/ 的/ 一个/ 指标/ ,/ 系统/ 扩展性/ 问题/ 就/ 可以/ 转变/ 为/ 考虑/ 如何/ 在/ 保证/ 时延/ 优化/ 效果/ 的/ 基础/ 上/ 降低/ 节点/ 维护/ 邻居/ 节点/ 集合/ 的/ 大小/ ./ 在/ 仿真/ 实验/ 中将/ 对/ 该/ 参数/ 以及/ Overlay/ 路由/ 系统/ 实现/ 的/ 时延/ 优化/ 作/ 进一步/ 的/ 比较/ ./ 2.2/ 数学模型/ 将/ 上述/ 描述/ 抽象/ 成/ 一个/ 具体/ 问题/ :/ 在/ 一个/ 基于/ OHPR/ 工作/ 方式/ 的/ Overlay/ 路由/ 系统/ 中/ ,/ 如何/ 在/ 保证/ 网络通信/ 时延/ 优化/ 最大化/ 的/ 情况/ 下/ ,/ 使得/ 每个/ 节点/ 维护/ 最小/ 代价/ 的/ 邻居/ 节点/ 集合/ ./ 由于/ 整个/ 网络/ 的/ 维护/ 开销/ 可以/ 看作/ 每个/ 节点/ 上/ 维护/ 开销/ 的/ 代数/ 累加/ ,/ 首先/ 考虑/ 某/ 一个/ 节点/ s/ 上/ 的/ 工作/ 情况/ :/ 假设/ Overlay/ 系统/ 中/ 的/ 节点/ 集合/ 为/ N/ =/ {/ 1/ ,/ 2/ ,/ …/ ,/ i/ ,/ …/ ,/ n/ }/ 中/ ,/ 用/ 一个/ n/ ×/ n/ 的/ 矩阵/ 犃/ =/ (/ aij/ )/ 表示/ Overlay/ 系统/ 工作/ 时/ 选取/ 节点/ i/ 作为/ 中间/ 转发/ 节点/ 对/ 节点/ s/ 和/ 节点/ j/ 之间/ 通信/ 的/ 时延/ 优化/ 程度/ ,/ 犃/ 中/ 所有/ 元素/ 非负/ ;/ n/ 维非/ 负/ 向量/ 犮/ 狅/ 狊/ 狋/ =/ (/ ci/ )/ 表示/ 将/ 节点/ i/ 放入/ 本地/ 邻居/ 节点/ 集合/ 中/ 的/ 代价/ ./ 那么/ 根据/ 工作/ 场景/ 描述/ ,/ 希望/ 在/ 节点/ s/ 上/ 找到/ 这样/ 一个/ 子集/ NeighborSets/ ,/ 使/ 下面/ 两个/ 目标/ 可以/ 达到/ 最优/ :/ (/ 1/ )/ 通过/ 邻居/ 节点/ 实现/ 对/ 网络通信/ 时延/ 优化/ 最大/ ,/ 即/ 满足/ 目标/ 函数/ 定义/ :/ (/ 2/ )/ 邻居/ 节点/ 的/ 维护/ 代价/ 最小/ ,/ 用/ 目标/ 函数/ 形式/ 表示/ 为/ 采用/ 限定/ 法来/ 对/ 这个/ 多/ 目标/ 优化/ 问题/ 的/ 求解/ 复杂度/ 是/ 满足/ NP/ -/ hard/ 的/ ./ 证明/ ./ 设/ 通信/ 优化/ 矩阵/ 犅/ =/ (/ bij/ )/ n/ ×/ n/ ,/ bij/ ∈/ {/ 0/ ,/ 1/ }/ ./ bij/ 表示/ 节点/ i/ 是否/ 可以/ 对/ 通信/ 路径/ s/ -/ j/ 进行/ 优化/ ,/ 其中/ bij/ =/ 1/ (/ i/ ≠/ j/ )/ 对应/ 原/ 问题/ 中/ aij/ >/ 0/ 情况/ ./ 在/ 这里/ 假定/ 对于/ 所有/ 节点/ i/ 有/ bii/ =/ 1/ ,/ 表示/ 节点/ 可以/ 对/ 自己/ 进行/ 优化/ ./ 设/ 代价/ 矩阵/ 犆/ =/ (/ ci/ )/ 1/ ×/ n/ ,/ ci/ >/ 0/ ./ ci/ 表示/ 将/ 节点/ i/ 放入/ 本地/ 邻居/ 节点/ 集合/ 中/ 的/ 代价/ ,/ 则/ 原/ 问题/ 的/ 第一个/ 目标/ 要求/ Z1/ =/ n/ ,/ 原/ 问题/ 就/ 可以/ 相应/ 地/ 转换成/ 一个/ 在/ 0/ -/ 1/ 矩阵/ 犅/ 上/ 集合/ 覆盖/ SCP/ [/ 14/ ]/ 的/ 问题/ ,/ 即/ 在/ 0/ -/ 1/ 矩阵/ 犅/ 上/ 找到/ 一个/ 列/ 的/ 集合/ 使得/ 矩阵/ 的/ 每/ 一行/ 都/ 能/ 被/ “/ 覆盖/ ”/ 且/ 选取/ 列/ 的/ 代价/ 总和/ 最小/ ./ 其中/ 第/ i/ 行/ 被/ 第/ j/ 列/ 覆盖/ 当且/ 仅/ 当/ bij/ =/ 1/ ./ 转换/ 后/ 的/ 问题/ 可以/ 用/ 数学/ 规划/ 的/ 模型/ 来/ 表示/ :/ Page4/ 其中/ xj/ =/ 1/ 表示/ 解中/ 包含/ 第/ j/ 列/ ,/ 对应/ 原/ 问题/ 在/ 邻居/ 节点/ 集合/ 中/ ,/ 否则/ xj/ =/ 0/ ./ 由于/ SCP/ 问题/ 的/ 求解/ 复杂度/ 是/ 已/ 被/ 证明/ NP/ 难/ 的/ ,/ 而/ SCP/ 问题/ 对应/ 了/ 原/ 问题/ 的/ 一个/ 特例/ ,/ 由/ 限制/ 法/ 就/ 可以/ 证明/ 原/ 问题/ 为/ NP/ 难/ 问题/ ,/ 无法/ 在/ 多项式/ 时间/ 里/ 求解/ ./ 3/ 基于/ 蚁群/ 算法/ 的/ Overlay/ 路由/ 策略/ 3.1/ 蚁群/ 算法/ 简介/ 及/ 特性/ 分析/ 蚂蚁/ 系统/ (/ AntSystem/ ,/ AS/ )/ [/ 15/ ]/ 最早/ 是/ 由/ 意大利人/ Doringo/ 等/ 人/ 提出/ 的/ ,/ 该/ 算法/ 是从/ 蚁群/ 觅食/ 过程/ 中/ 得到/ 启发/ 而/ 构造/ 出/ 的/ 一种/ 模拟/ 进化/ 算法/ ./ 蚁群/ 算法/ 最早/ 被/ 应用/ 在/ 图论/ 中/ 求解/ 旅行/ 商/ 问题/ (/ Trave/ -/ lingSalemanProblem/ ,/ TSP/ )/ [/ 16/ ]/ ./ 随着/ 人们/ 对/ 蚂蚁/ 系统/ 的/ 深入研究/ 和/ 讨论/ ,/ 蚁群/ 算法/ 被/ 广泛应用/ 于/ 优化/ 问题/ 的/ 求解/ 中/ :/ 组合/ 优化/ 问题/ ,/ 数据挖掘/ 中/ 的/ 规则/ 提取/ 、/ 聚类分析/ 以及/ 解决/ 网络/ 中/ 的/ QoS/ 路由/ 问题/ 等/ ,/ 这些/ 工作/ 为/ 许多/ NP/ 难/ 问题/ 的/ 近似/ 求解/ 提供/ 了/ 可行/ 的/ 工程/ 解决方案/ ./ 从蚁/ 群/ 算法/ 的/ 原理/ 分析/ 可以/ 看到/ 蚁群/ 算法/ 在/ 处理/ 组合/ 优化/ 问题/ 中/ 体现/ 出来/ 的/ 几点/ 优势/ ./ (/ 3/ )/ 较/ 好/ 的/ 健壮性/ 相对/ 于/ 其它/ 算法/ ,/ 蚁群/ 算法/ 对/ 初始/ 路线/ 的/ 要求/ 不高/ ,/ 初始条件/ 的/ 设置/ 对/ 将来/ 结果/ 的/ 取得/ 不会/ 有太大/ 的/ 影响/ ,/ 蚁群/ 算法/ 的/ 搜索/ 结果/ 不/ 依赖于/ 初始/ 线路/ 的/ 选择/ ./ 在/ 不/ 需要/ 对/ 蚂蚁/ 的/ 爬行/ 进行/ 人工/ 的/ 干预/ 情/ (/ 1/ )/ 正反馈/ 特性/ 蚁群/ 算法/ 与/ 其他/ 进化/ 算法/ 的/ 一个/ 很大/ 区别/ 就/ 在于/ 算法/ 自身/ 是/ 通过/ 正反馈/ 的/ 方式/ 来/ 实现/ 对/ 问题/ 的/ 逐步/ 优化/ 和/ 求解/ ./ 前面/ 的/ 蚂蚁/ 通过/ 在/ 经过/ 路径/ 上/ 留下/ 信息/ 素来/ 指导/ 后面/ 蚂蚁/ 的/ 工作/ ,/ 后面/ 的/ 蚂蚁/ 依据/ 前面/ 蚂蚁/ 留下/ 的/ 信息/ 素/ 作为/ 自己/ 选择/ 路径/ 的/ 参考/ ./ 这种/ 工作/ 方式/ 一方面/ 可以/ 通过/ 信息/ 素/ 的/ 不断/ 叠加/ 加快/ 结果/ 的/ 收敛/ ,/ 另一方面/ 需要/ 防止/ 蚁群/ 算法/ 中/ 的/ 由于/ 信息/ 素过/ 多/ 产生/ 的/ 凝滞/ 问题/ ./ (/ 2/ )/ 较/ 高/ 的/ 并行度/ 由于/ 蚁群/ 算法/ 很/ 好/ 地/ 模拟/ 了/ 现实生活/ 中蚁/ 群/ 寻食/ 的/ 过程/ ,/ 因此/ 算法/ 本身/ 的/ 并行度/ 较/ 高/ ,/ 有利于/ 系统/ 在/ 分布式/ 的/ 环境/ 下/ 的/ 实现/ 和/ 应用/ ./ 本文/ 使用/ 蚁群/ 算法/ 在/ 每个/ 独立/ 节点/ 上/ 可以/ 实现/ 互不/ 干扰/ 的/ 计算/ ./ 针对/ 本文/ 中所/ 需/ 处理/ 的/ 问题/ ,/ 蚁群/ 算法/ 的/ 这/ 一/ 特性/ 可以/ 很/ 好/ 地/ 适应/ 单跳/ 路由/ 方式/ ,/ 同时/ 并行/ 地/ 对/ 网络/ 路由/ 信息/ 进行/ 计算/ ./ 况下/ 可以/ 完成/ 从/ 初始化/ 到/ 得到/ 搜索/ 结果/ 的/ 整个/ 计算/ 过程/ ,/ 对于/ 不同/ 的/ 网络/ 环境/ 只/ 需要/ 调整/ 几个/ 控制变量/ 就/ 可以/ 很/ 容易/ 地/ 实现/ 蚁群/ 算法/ 对/ 环境/ 的/ 快速/ 适应/ ./ 3.2/ 算法/ 伪/ 代码/ 描述/ 针对/ 文中/ 2.1/ 节/ 的/ 分析/ ,/ 本文/ 提出/ 了/ 一种/ 基于/ 蚁群/ 算法/ 的/ 单/ 跳/ 路由/ 路径/ 算法/ (/ AntColonyOptimiza/ -/ tionbasedone/ -/ HopPathRouting/ ,/ ACOHPR/ )/ ,/ 在/ 详细/ 介绍/ 蚁群/ 算法/ 工作/ 流程/ 之前/ ,/ 首先/ 介绍/ 算法/ 中/ 几个/ 重要/ 的/ 数据结构/ 和/ 参数/ ./ (/ 1/ )/ 启发/ 因子/ 矩阵/ η/ 规模/ 为/ N/ ×/ N/ 的/ 启发/ 因子/ 矩阵/ 是/ 蚂蚁/ 选择/ 邻居/ 节点/ 时/ 的/ 启发/ 因子/ 依据/ ./ η/ ij/ (/ t/ )/ 表示/ t/ 时刻/ 邻居/ 节点/ 中/ 已经/ 有/ 节点/ i/ ,/ 考虑/ 加入/ 节点/ j/ 的/ 权重/ ./ 这个/ 值/ 主要/ 用于/ 节点/ i/ 和/ 节点/ j/ 共同/ 出现/ 在/ 邻居/ 节点/ 集合/ 中时/ 的/ 收益/ 程度/ ,/ 为/ 人工/ 蚂蚁/ 选择/ 邻居/ 节点/ 作出/ 参考/ ./ 在/ 传统/ 的/ TSP/ 问题/ 求解/ 过程/ 中/ 启发/ 因子/ 参数/ 通常/ 都/ 是/ 不变/ 参数/ ,/ 而/ 本文/ 考虑/ 的/ 网络/ 时延/ 状态/ 会/ 随着/ 时间/ 的/ 变化/ 而/ 产生/ 扰动/ 和/ 跳跃/ ,/ 并/ 把/ 网络/ 的/ 这/ 一/ 影响/ 体现/ 在/ 启发/ 因子/ 的/ 改变/ 中/ ./ (/ 2/ )/ 信息/ 素/ 矩阵/ τ/ 规模/ 为/ N/ ×/ N/ 的/ 信息/ 素/ 矩阵/ ./ 和/ 启发/ 因子/ 一样/ ,/ 信息/ 因子/ 也/ 是/ 用于/ 指导/ 蚂蚁/ 寻找/ 路径/ ,/ 并且/ 由/ 蚂蚁/ 根据/ 自己/ 的/ 路径/ 信息/ 来/ 对/ 信息/ 素/ 因子/ 进行/ 更新/ ./ τ/ ij/ (/ t/ )/ 表示/ 系统/ 在/ t/ 时刻/ 蚂蚁/ 经过/ 节点/ i/ 和/ 节点/ j/ 后/ 留下/ 的/ 与/ 质量/ 相关/ 信息/ ,/ 用于/ 启发/ 后面/ 蚂蚁/ 在/ 组合/ 路径/ 时/ 选择/ 下/ 一/ 跳/ 节点/ ./ (/ 3/ )/ 优化/ 度/ 矩阵/ 犻/ 犿/ 狆/ 狉/ 狅/ 狏/ 犲/ 犿/ 犲/ 狀/ 狋/ 规模/ 为/ N/ ×/ N/ 的/ 优化/ 度/ 矩阵/ 用于/ 辅助/ 系统/ 工作/ 时/ 对/ 优化/ 性能/ 和/ 优化/ 质量/ 的/ 计算/ ./ improvementij/ (/ t/ )/ 表示/ 通过/ 节点/ i/ 进行/ 数据/ 转发/ 对/ 通信/ 对端/ (/ s/ ,/ j/ )/ 之间/ 通信/ 的/ 优化/ 程度/ ,/ 该/ 参数/ 是/ 可以/ 随着/ Overlay/ 网络/ 路由/ 信息/ 的/ 更新/ 而/ 更新/ 的/ ./ (/ 4/ )/ 覆盖度/ 矩阵/ 犻/ 犿/ 狆/ 狉/ 狅/ 狏/ 犪/ 犫/ 犾/ 犲/ 规模/ 为/ N/ ×/ N/ 的/ 覆盖度/ 矩阵/ 为/ 一个/ 0/ -/ 1/ 矩阵/ ,/ 反映/ 节点/ 转发/ 对/ 路径/ 优化/ 的/ 可行性/ ./ improvableij/ (/ t/ )/ 表示/ t/ 时刻/ 中间/ 转发/ 节点/ i/ 对/ 通信/ 对端/ (/ s/ ,/ j/ )/ 进行/ 通信/ 优化/ 的/ 可行性/ ,/ 可行/ 则/ 值/ 为/ 1/ ./ 根据/ 矩阵/ 的/ 数学/ 含义/ ,/ 若/ 对/ 矩阵/ 的/ 第/ i/ 行/ 求和/ 表示/ 节点/ i/ 作为/ 中间/ 节点/ 对源/ 节点/ s/ 优化/ 的/ 覆盖度/ ./ 该/ 矩阵/ 内容/ 与/ 优化/ 度/ 矩阵/ 相对/ 应/ ,/ 因此/ ,/ 可以/ 直接/ 根据/ 犻/ 犿/ 狆/ 狉/ 狅/ 狏/ 犲/ 犿/ 犲/ 狀/ 狋/ 矩阵/ 计算出来/ ./ (/ 5/ )/ 禁忌/ 搜索/ 节点/ 集合/ allowset/ 用于/ 记录/ 系统/ 当前/ 状态/ 下/ 蚂蚁/ 尚未/ 访问/ 的/ 节点/ Page5/ 集合/ ,/ 在/ 系统/ 工作/ 时/ 主要/ 用于/ 实现/ 对/ 节点/ 选择/ 范围/ 的/ 控制/ ./ 每个/ 节点/ 上/ 详细/ 的/ 算法/ 流程/ 如下/ :/ 1/ ./ 根据/ 系统/ 测量/ 的/ 网络/ 时延/ 信息/ 来/ 初始化/ 计算/ 辅助/ 信息/ (/ 启发/ 因子/ 矩阵/ η/ 和/ 信息/ 素/ 矩阵/ τ/ )/ ./ 同时/ 设置/ 两个/ 全局变量/ NeighborSetRec/ 和/ QualityRec/ 分别/ 用于/ 记录/ 最优/ 邻居/ 节点/ 集合/ 和/ 最优/ 邻居/ 节点/ 集合/ 评估/ 质量/ ,/ 初始/ 两者/ 皆/ 为/ 空/ ./ 2/ ./ 每个/ 节点/ 上/ 生成/ 一定/ 数量/ 的/ 人工/ 蚂蚁/ ,/ 即将/ m/ 只/ 蚂蚁/ 置于/ 节点/ n/ 上/ ,/ 禁忌/ 搜索/ 节点/ 集合/ allowset/ 设置/ 为/ 整个/ 节点/ 集合/ ,/ 表明/ 初始/ 情况/ 下/ 尚未/ 访问/ 任何/ 节点/ ./ 3/ ./ 每/ 只/ 蚂蚁/ 按照/ 一定/ 的/ 策略/ 构建/ 一个/ 备份/ 邻居/ 节点/ 集合/ NeighborSet/ ,/ 主要/ 通过/ 计算/ t/ 时刻/ 蚂蚁/ 所选/ 的/ 备份/ 邻居/ 节点/ 集合/ 中/ 加入/ 节点/ i/ 后/ 再/ 加入/ 节点/ j/ 的/ 概率/ Pij/ (/ t/ )/ 来/ 进行/ 构建/ ./ 邻居/ 节点/ 加入/ 过程/ 的/ 控制/ 是/ 通过/ 禁忌/ 列表/ allowset/ 来/ NeighborSets/ =/ GetNeighborSet/ (/ )/ ;/ // // 通过/ 蚂蚁/ 爬行/ 建立/ 一个/ 邻居/ 节点/ 集合/ NeighborSet/ =/ Pruning/ (/ NeighborSets/ )/ ;/ // // 对/ 建立/ 起/ 的/ 邻居/ 节点/ 集合/ 根据/ 质量/ 公式/ 进行/ 修剪/ if/ (/ Quality/ (/ NeighborSet/ )/ >/ Quality/ (/ NeighborSetRec/ )/ )/ {/ // // 更新/ 最优/ 邻居/ 节点/ 记录/ 图/ 1/ 蚁群/ 算法/ 伪/ 代码/ 描述/ 3.3/ 启发/ 因子/ 及/ 信息/ 素/ 的/ 初始化/ 在/ 人工/ 蚂蚁/ 选择/ 爬行/ 路径/ 、/ 构建/ 邻居/ 节点/ 集合/ 的/ 过程/ 中/ ,/ 启发/ 因子/ 和/ 信息/ 素是/ 影响/ 计算结果/ 的/ 重要/ 因素/ ./ 通常/ 启发/ 因子/ 的/ 设定/ 主要/ 考虑/ 的/ 是/ 环境因素/ 对/ 路径/ 选择/ 过程/ 所/ 产生/ 的/ 直接/ 影响/ ,/ 如/ TSP/ 问题/ 求解/ 中/ 采用/ 与/ 路径/ 长短/ 相关/ 的/ 参数/ 来/ 作为/ 启发/ 因子/ 参数/ ./ 而/ 针对/ 本文/ 所/ 考虑/ 问题/ 的/ 特殊性/ ,/ 启发/ 因子/ 的/ 设定/ 主要/ 是从/ 两个/ 方面/ 来/ 作为/ 权衡/ ./ 定义/ 4/ ./ t/ 时刻/ 节点/ j/ 对/ 节点/ i/ 的/ 相对/ 优化/ 率/ (/ relativeimprovementrate/ )/ ,/ 为/ 系统/ 引入/ 节点/ i/ 作为/ 邻居/ 节点/ 后/ 再/ 引入/ 节点/ j/ 所/ 获得/ 的/ 相对/ 优化/ 性/ 增加率/ ./ 记作/ RIRij/ (/ t/ )/ :/ RIRij/ (/ t/ )/ (/ =/ ∑/ k/ ∈/ N/ 实现/ 的/ ,/ allowset/ 可以/ 防止/ 向/ 邻居/ 节点/ 集合/ 中/ 加入/ 重复/ 的/ 节点/ 并且/ 保证/ 加入/ 过程/ 的/ 结束/ ./ 4/ ./ 在/ 备份/ 邻居/ 节点/ 集合/ NeighborSet/ 形成/ 之后/ ,/ 系统/ 按照/ 一定/ 的/ 质量/ 控制/ 要求/ 对/ 该/ 集合/ 进行/ 修剪/ ,/ 从而/ 优化/ 邻居/ 节点/ 集合/ 的/ 结构/ 并/ 减少/ 邻居/ 节点/ 集合/ 中/ 的/ 重复/ 覆盖/ 情况/ ./ 5/ ./ 对/ 所/ 形成/ 的/ 邻居/ 节点/ 集合/ 进行/ 质量/ 评估/ Quality/ ,/ 以此/ 更新/ 对应/ 节点/ 的/ 信息/ 素/ 矩阵/ τ/ ,/ 用于/ 指导/ 后继/ 蚂蚁/ 的/ 邻居/ 节点/ 集/ 构建/ 工作/ ./ 6/ ./ 重复/ 步/ 3/ 直至/ 步/ 5/ ,/ 直到/ 该/ 节点/ 上/ 的/ 所有/ 蚂蚁/ 完成/ 遍历/ ./ NeighborSetRec/ ,/ 算法/ 结束/ ./ 7/ ./ 系统/ 记录/ 质量/ 最高/ 的/ 邻居/ 节点/ 集合/ 作为/ 近似/ 最优/ 解图/ 1/ 简单/ 描述/ 了/ 在/ 一个/ 节点/ s/ 上/ 蚂蚁/ 系统/ 工作/ 的/ 主要/ 流程/ ./ 定义/ 5/ ./ 节点/ j/ 对/ 节点/ i/ 的/ 相对/ 覆盖率/ (/ rela/ -/ tivecoveragerate/ )/ ,/ 为/ 系统/ 引入/ 节点/ i/ 作为/ 邻居/ 节点/ 后/ 再/ 引入/ 节点/ j/ 所/ 获得/ 的/ 相对/ 优化/ 覆盖范围/ 增加率/ ./ 记作/ RCRij/ (/ t/ )/ ./ RCRij/ (/ t/ )/ =/ |/ (/ improvablei/ (/ t/ )/ ∪/ improvablej/ (/ t/ )/ )/ -/ 式/ (/ 1/ )/ 和/ (/ 2/ )/ 分别/ 从/ 优化/ 程度/ 和/ 覆盖/ 程度/ 两个/ 方面/ 来/ 对/ 两个/ 节点/ 在/ 同一个/ 邻居/ 节点/ 集合/ 中/ 出现/ 的/ 性能/ 进行/ 评估/ ./ 采用/ 两者/ 的/ 乘积/ 来/ 表示/ t/ 时刻/ 从/ 节点/ i/ 到/ 节点/ j/ 的/ 启发/ 因子/ η/ ij/ (/ t/ )/ 的/ 取值/ 大小/ :/ 式/ (/ 3/ )/ 中/ 主要/ 考虑/ 了/ 节点/ i/ 、/ j/ 同时/ 出现/ 在/ 邻居/ 节点/ 集合/ 中时/ 的/ 收益/ 期望/ ./ 这个/ 参数/ 的/ 求解/ 通过/ 归一化/ 方法/ 来/ 减小/ 取值/ 范围/ 对/ 最后/ 结果/ 的/ 影响/ ./ 初始/ 时刻/ ,/ 系统/ 中/ 所有/ 信息/ 素/ 参数/ 都/ 设置/ 为/ τ/ ij/ (/ 0/ )/ =/ 1/ ./ Page63/ ./ 4/ 邻居/ 节点/ 集合/ 的/ 创建/ 人工/ 蚂蚁/ 创建/ 邻居/ 节点/ 集合/ 的/ 过程/ 可以/ 看作/ 是/ 一个/ 选择/ 优化组合/ 的/ 过程/ ,/ 采用/ 类似/ TSP/ 的/ 方法/ 来/ 描述/ 蚂蚁/ 的/ 工作/ :/ 蚂蚁/ 从/ 源点/ s/ 出发/ ,/ 不断/ 地/ 选择/ 新/ 节点/ 加入/ 到/ 自己/ 的/ 邻居/ 节点/ 集合/ ./ 当/ 蚂蚁/ 向/ 邻居/ 节点/ 集合/ 中/ 加入/ 节点/ i/ 后/ ,/ 蚂蚁/ 的/ 当前/ 状态/ 就/ 转变/ 为/ Si/ ./ t/ 时刻/ 蚂蚁/ 选择/ 下/ 一个/ 邻居/ 节点/ j/ 进入状态/ Sj/ 的/ 转移/ 概率/ 由/ Pij/ (/ t/ )/ 来/ 决定/ ,/ 直到/ 蚂蚁/ 邻居/ 节点/ 集合/ 加入/ 过程/ 结束/ ./ 采用/ 如下/ 的/ 公式/ 来/ 指导/ 人工/ 蚂蚁/ 进行/ 路径/ 选择/ ,/ 当/ 蚂蚁/ 所选/ 的/ 邻居/ 节点/ 集合/ 中/ 加入/ 节点/ i/ 后/ 再/ 加入/ 节点/ j/ 的/ 概率/ 为/ Pij/ (/ t/ )/ =/ 式/ (/ 4/ )/ 通过/ 两个/ 方面/ 来/ 帮助/ 蚂蚁/ 寻找/ 好/ 的/ 邻居/ 节点/ :/ (/ 1/ )/ 局部/ 性质/ 的/ 启发/ 因子/ ,/ 查看/ 当前/ 状态/ 下/ 局部/ 比较/ 好/ 的/ 选择/ ;/ (/ 2/ )/ 信息/ 素/ 因子/ ,/ 为/ 前面/ 蚂蚁/ 全局/ 计算/ 后/ 留下/ 的/ 参考/ 信息/ ./ 其中/ 权重/ 因子/ α/ ,/ β/ / 0/ ,/ 用于/ 调节/ 启发/ 因子/ 和/ 信息/ 素/ 在/ 节点/ 选择/ 过程/ 中/ 的/ 相对/ 重要性/ ./ 这/ 两个/ 参数/ 的/ 选择/ 主要/ 是/ 根据/ 网络/ 变化/ 情况/ 来/ 调整/ 的/ ,/ 在/ 网络/ 状况/ 变化/ 剧烈/ 的/ 情况/ 可以/ 适当/ Temp/ =/ NeighborSets/ ./ removeItem/ (/ i/ )/ ;/ // // 每次/ 尝试/ 去掉/ 一个/ 引起/ 质量/ 增加/ 最大/ 的/ 元素/ if/ (/ Quality/ (/ Temp/ )/ >/ QualityRec/ )/ {/ // // 记录/ 产生/ 最大/ 质量/ 的/ 元素/ 以及/ 下/ 标图/ 2/ 邻居/ 节点/ 修剪/ 算法/ 伪/ 代码/ 描述/ 这一/ 修剪/ 过程/ 反映/ 了/ 系统/ 在/ 邻居/ 节点/ 集合/ 大小/ 与/ 整个/ 邻居/ 节点/ 集合/ 优化/ 质量/ 之间/ 的/ 权衡/ 考虑/ :/ 系统/ 每轮/ 删除/ 一个/ 使/ 邻居/ 节点/ 集合/ 质量/ 下降/ 最快/ 的/ 节点/ ,/ 直到/ 节点/ 集合/ 不能/ 再/ 被/ 修剪/ 时/ 返回/ ./ 地调/ 高/ α/ 值来/ 让/ 网络/ 快速/ 适应/ 网络/ 时延/ 变化/ ,/ β/ 主要/ 作用/ 是/ 突出/ 信息/ 素/ 的/ 作用/ ,/ 促进/ 计算/ 的/ 快速/ 收敛/ ./ 邻居/ 节点/ 加入/ 过程/ 的/ 控制/ 是/ 通过/ 禁忌/ 列表/ allowset/ 来/ 实现/ 的/ ./ allowset/ 可以/ 防止/ 向/ 邻居/ 节点/ 集合/ 中/ 加入/ 重复/ 的/ 节点/ 并且/ 保证/ 加入/ 过程/ 的/ 结束/ ./ 此外/ ,/ 为了/ 防止/ 系统/ 产生/ 过大/ 的/ 邻居/ 节点/ 集合/ ,/ 采用/ 限定/ 邻居/ 节点/ 集合/ 大小/ 方式/ 缩短/ 蚂蚁/ 的/ 爬行/ 过程/ ./ 3.5/ 邻居/ 节点/ 集合/ 的/ 修剪/ 当/ 系统/ 中/ 的/ 一只/ 蚂蚁/ 完成/ 爬行/ 后/ ,/ 需要/ 对/ 所/ 得到/ 的/ 邻居/ 节点/ 集合/ 进行/ 适当/ 修剪/ ./ 修剪/ 的/ 作用/ 主要/ 体现/ 在/ 两个/ 方面/ :/ 集合/ 进行/ 修剪/ ./ (/ 1/ )/ 优化/ 邻居/ 节点/ 集合/ 的/ 结构/ ./ 由于/ 所求/ 目标/ 为/ 一个/ 无序/ 集合/ ,/ 而/ 在/ 蚂蚁/ 系统/ 中/ 却是/ 按照/ 一定/ 的/ 次序/ 加入/ 邻居/ 节点/ ,/ 需要/ 通过/ 对/ 所得/ 邻居/ 节点/ 集合/ 的/ 修剪/ 产生/ 更/ 多种/ 的/ 组合/ 情况/ ,/ 并/ 根据/ 其/ 质量/ 影响/ 系统/ 信息/ 素/ 矩阵/ ,/ 最终/ 指导/ 后继/ 蚂蚁/ 的/ 爬行/ 过程/ ./ (/ 2/ )/ 减少/ 邻居/ 节点/ 集合/ 中/ 的/ 重复/ 覆盖/ 情况/ ./ 修剪/ 工作/ 另外/ 的/ 一个/ 重要/ 作用/ 就是/ 降低/ 邻居/ 节点/ 中/ 的/ 重复/ 覆盖/ 情况/ ,/ 通过/ 在/ 覆盖/ 质量/ (/ 覆盖率/ 以及/ 优化/ 效果/ )/ 和/ 节点/ 集合/ 大小/ 之间/ 的/ 权衡/ 来/ 进一步/ 优化/ 计算结果/ ./ 采用/ 如图/ 2/ 中/ 所示/ 的/ 算法/ 对/ 所/ 得到/ 的/ 邻居/ 节点/ 3.6/ 邻居/ 节点/ 集合/ 质量/ 评估/ 从/ 算法/ 描述/ 中/ 可以/ 看到/ ,/ 邻居/ 节点/ 质量/ 函数/ 的/ 选择/ 会/ 对/ 结果/ 产生/ 很大/ 的/ 影响/ ./ 为了/ 使/ 邻居/ 节点/ 质量/ 函数/ 可以/ 有效/ 地/ 表达/ 问题/ 求解/ 的/ 目标/ ,/ 设计/ 质量/ Page7/ 评估/ 函数/ 时/ 重点/ 考虑/ 以下几点/ 因素/ 给/ 质量/ 带来/ 的/ 影响/ :/ 邻居/ 节点/ 可/ 覆盖/ 的/ 节点/ 数/ 、/ 邻居/ 节点/ 集合/ 提供/ 时延/ 优化/ 的/ 程度/ 和/ 邻居/ 节点/ 的/ 规模/ ./ 采用/ 式/ (/ 5/ )/ 来/ 对/ 邻居/ 节点/ 集合/ 的/ 质量/ 进行/ 评估/ :/ Quality/ (/ S/ )/ =/ CoverageEva/ (/ S/ )/ [/ K1/ ×/ improvementEva/ (/ S/ )/ +/ K2/ ×/ SizeEva/ (/ S/ )/ ]/ (/ 5/ )/ 其中/ CoverageEva/ 表示/ 对/ 邻居/ 节点/ 集合/ 覆盖/ 程度/ 的/ 评估/ ,/ improvementEva/ 为/ 邻居/ 节点/ 集合/ 时延/ 改进/ 状况/ 的/ 评估/ ,/ SizeEva/ 为/ 节点/ 集合/ 大小/ 的/ 评估/ ,/ K1/ ,/ K2/ 为/ 权重/ 因子/ ./ 3.7/ 信息/ 素/ 更新/ 策略/ 按照/ 修剪/ 规则/ 对/ 蚂蚁/ 获得/ 的/ 邻居/ 节点/ 集合/ 进行/ 修剪/ 后/ ,/ 根据/ 集合/ 质量/ 对/ 蚂蚁/ 走过/ “/ 路径/ ”/ 上/ 的/ 信息/ 素/ 进行/ 局部/ 的/ 更新/ ./ 在/ 计算/ 过程/ 中/ 采用/ 了/ 简化/ 的/ 更新/ 方式/ :/ 把/ “/ 路径/ ”/ 理解/ 为/ 邻居/ 节点/ 集合/ 中/ 节点/ 的/ 顺序排列/ ,/ 并/ 依照/ 这/ 条/ 路径/ 上/ 节点/ 的/ 次序/ ,/ 采用/ 式/ (/ 6/ )/ 按照/ 邻居/ 节点/ 集合/ 的/ 顺序/ 依次/ 对/ 信息/ 素/ 进行/ 更新/ ./ τ/ ij/ (/ t/ )/ =/ ρ/ ×/ τ/ ij/ (/ t/ -/ 1/ )/ +/ Q/ 其中/ ρ/ 为/ 信息/ 素/ 的/ 挥发/ 系数/ ,/ Q/ 为/ 邻居/ 节点/ 集合/ 的/ 评估/ 质量/ ./ 4/ 仿真/ 实验/ 及/ 结果/ 分析/ Meridian/ ①/ 数据/ 集是/ 由/ Cornell/ 大学/ 计算机科学/ 系/ Meridian/ 项目组/ 采集/ 并/ 发布/ 的/ ,/ 主要/ 用于/ 通过/ 网络/ 时延/ 测量/ 实现/ 轻量级/ 网络/ 定位系统/ 的/ 研究/ ./ 数据/ 记录/ 了/ 随机/ 选取/ 的/ 2500/ 个/ 节点/ 之间/ 从/ 2004/ 年/ 5/ 月/ 5/ 日到/ 13/ 日/ 的/ 链路/ 时延/ 值/ ,/ 采集/ 过程/ 重复/ 10/ 次/ ,/ 数据/ 采用/ 上/ 三角/ 矩阵/ 方式/ 组织/ ,/ 数据/ 单位/ 为/ μ/ s/ ./ 该/ 数据/ 集/ 测量/ 了/ 大规模/ 节点/ 之间/ 的/ 相互/ 时延/ ,/ 能/ 代表/ 足够/ 复杂/ 的/ 网络连接/ 情况/ ./ 实验/ 数据分析/ 如表/ 1/ 所示/ ./ Meridian2500/ ×/ 2500167.306889204/ // 5/ // 5/ ~/ 随机/ 选择/ Meridian/ 数据/ 中/ 100/ 个/ 节点/ ,/ 共计/ 10000/ 条/ 链路/ 进行/ 仿真/ 实验/ ,/ 比较/ 根据/ OHPR/ 构建/ 路由/ 后/ 整体/ 网络/ 链路/ 时延/ (/ 统计/ 区间/ 增量/ 为/ 10ms/ )/ 的/ 分布/ 情况/ ./ 横轴/ 表示/ 链路/ 时延/ ,/ 纵轴/ 表示/ 链路/ 的/ 计数/ ./ 从图/ 3/ 中/ 可以/ 看出/ 在/ Meridian/ 数据表示/ 的/ 网络/ 环境/ 中/ ,/ 和/ 原有/ 网络/ 链路/ 时延/ 分布/ 状况/ (/ 图/ 中实/ 面积/ 标出/ 部分/ )/ 相比/ ,/ Overlay/ 路由/ 系统/ (/ 图中/ 线条/ 标出/ 部分/ )/ 可以/ 有效/ 地/ 增加/ 通信/ 时延/ 在/ 80ms/ 左右/ 的/ 链路/ 数目/ ./ 为了/ 验证/ 本文/ 所/ 提出/ 算法/ 的/ 有效性/ 与/ 合理性/ ,/ 在/ Meridian/ 数据/ 集合/ 上/ 选择/ 500/ 个/ 节点/ 构成/ Overlay/ 网络/ 进行/ 仿真/ 实验/ ./ 假定/ Meridian/ 数据/ 提供/ 的/ 时延/ 数据/ 为/ 某/ 一/ 时刻/ 网络/ 检测/ 到/ 各条/ 链路/ 的/ 时延/ 状态/ ,/ 在/ 此基础/ 上/ 各个/ 节点/ 开始/ 构建/ 邻居/ 节点/ 集合/ ./ 实验/ 中蚁/ 群/ 算法/ 参数/ 选择/ 如下/ :/ (/ 1/ )/ 蚂蚁/ 数量/ :/ m/ =/ 40/ ;/ (/ 2/ )/ 信息/ 素/ 挥发/ 系数/ :/ ρ/ =/ 0.1/ ;/ (/ 3/ )/ 权重/ 因子/ α/ =/ 1/ ,/ β/ =/ 2/ ;/ (/ 4/ )/ 权重/ 因子/ K1/ ,/ K2/ 分别/ 为/ 0.3/ ,/ 0.8/ ./ 实验/ 过程/ 使用/ 蚁群/ 算法/ 计算/ 了/ Overlay/ 网络/ 中/ 每个/ 节点/ 的/ 邻居/ 节点/ 集合/ 大小/ 以及/ 邻居/ 节点/ 集合/ 对/ 整个/ 网络通信/ 时延/ 优化/ 情况/ ,/ 并/ 将/ OHPR/ 的/ 计算结果/ 在/ 同/ 一张/ 图中/ 进行/ 比较/ ,/ 结果/ 如图/ 4/ 、/ 图/ 5/ 所示/ ./ 图/ 4/ 比较/ 了/ Overlay/ 网络/ 中/ 每个/ 节点/ 在/ 两种/ 路由/ 策略/ 下/ 对应/ 维护/ 的/ 节点/ 集合/ 规模/ 大小/ ,/ 横轴/ 为/ 节点/ 编号/ ,/ 纵轴/ 为/ 该/ 节点/ 上/ 维护/ 的/ 邻居/ 节点/ 集合/ 大小/ ,/ 其中/ 方块/ 点/ 代表/ 了/ 在/ 单/ 跳/ 路径/ 路由/ 方式/ OHPR/ 中/ 每个/ 节点/ 需要/ 维护/ 的/ 节点/ 集合/ 大小/ ,/ 叉/ 状点/ 代表/ 了/ 本文/ 提出/ 的/ 基于/ 蚁群/ 算法/ 的/ 单/ 跳/ 路由/ 路径/ 策略/ 中/ 每个/ 节点/ 需要/ 维护/ 的/ 节点/ 集合/ 大小/ ./ 从中/ 可以/ 看出/ 使用/ 蚁群/ 算法/ 的/ 系统优化/ 可以/ 有效/ 地/ 降低/ OHPR/ 策略/ 的/ 邻居/ 节点/ 大小/ ,/ 即/ 对于/ 规模/ 为/ 500/ 个/ 节点/ 的/ Overlay/ 路由/ 系统/ ,/ 大多数/ 节点/ 只/ 需要/ 维护/ 小于/ 30/ 个/ 的/ 邻居/ 节点/ 就/ 可以/ 支持/ 在/ 整个/ Overlay/ 网络/ 的/ 通信/ 优化/ 查询/ ./ ①/ CornellUniversity/ ./ Meridiandata/ [/ OL/ ]/ ./ http/ :/ // // www/ ./ cs/ ./ Page8/ 在/ 图/ 5/ 中/ 描绘/ 了/ 每个/ 节点/ 在/ 两种/ 路由/ 策略/ 下/ 获得/ 网络通信/ 时延/ 的/ 平均值/ 的/ 差值/ 情况/ ,/ 横轴/ 为/ 节点/ 编号/ ,/ 纵轴/ 为/ 两种/ 路由/ 方式/ 下/ 获得/ 平均/ 通信/ 时延/ 改进/ 的/ 差值/ ./ 由于/ OHPR/ 为单/ 跳/ 转发/ 情况/ 下/ 的/ 时延/ 优化/ 最优/ 解/ ,/ 因此/ 时延/ 差值/ 取值/ 非负/ ./ 从中/ 可以/ 看到/ OHPR/ 与/ 本文/ 提出/ 的/ 基于/ 蚁群/ 算法/ 的/ 单/ 跳/ 路由/ 路径/ 策略/ 所/ 获得/ 的/ 网络/ 平均/ 通信/ 时延/ 差别/ 很小/ ,/ 最大/ 为/ 9.483/ ms/ ,/ 即图/ 中/ 黑色/ 点/ 坐标/ (/ 416/ ,/ 9.483/ )/ 处/ ,/ 85/ %/ 的/ 节点/ 在/ 两种/ 路由/ 策略/ 下/ 的/ 通信/ 时延/ 介于/ [/ 2ms/ ,/ 6ms/ ]/ 区间/ 中/ ,/ 平均值/ 只有/ 3.4/ ms/ 左右/ ./ 从/ 实验/ 结果/ 比较/ 来看/ ,/ 本文/ 提出/ 的/ 基于/ 蚁群/ 算法/ 的/ 单/ 跳/ 路由/ 路径/ 策略/ 基本/ 实现/ 了/ 预期/ 目标/ ,/ 即/ 在/ 在/ 保证/ 时延/ 优化/ 效果/ 的/ 基础/ 上/ ,/ 本/ 算法/ 维护/ 更/ 小/ 的/ 邻居/ 节点/ 集合/ ,/ 降低/ 系统/ 整体/ 的/ 运行/ 开销/ ./ 5/ 结束语/ 面向/ 时延/ 优化/ 的/ 扩展性/ 问题/ 一直/ 是/ Overlay/ 路由/ 系统/ 设计/ 的/ 关键问题/ 之一/ ./ 本文/ 首先/ 对/ Overlay/ 路由/ 过程/ 进行/ 了/ 描述/ ,/ 分析/ 了/ 其中/ 存在/ 的/ 扩展性/ 问题/ ,/ 随后/ 对/ 该/ 问题/ 进行/ 数学/ 建模/ ./ 在/ 此基础/ 上/ 本文/ 提出/ 了/ 一种/ 基于/ 蚁群/ 算法/ 的/ 单/ 跳/ 路由/ 路径/ 策略/ 来/ 处理/ 邻居/ 节点/ 集合/ 大小/ 的/ 问题/ ,/ 通过/ 控制/ 每个/ 节点/ 上/ 维护/ 的/ 邻居/ 节点/ 集合/ 大小/ 来/ 降低/ 整个/ Overlay/ 网络/ 路由/ 的/ 管理/ 开销/ 以及/ 查询/ 开销/ ./ 仿真/ 实验/ 首先/ 验证/ 了/ Overlay/ 路由/ 在/ 时延/ 优化/ 方面/ 的/ 有效性/ ,/ 同时/ 结果表明/ 在/ 500/ 个/ 节点/ 的/ Overlay/ 系统/ 中/ ,/ 在/ 与/ OHPR/ 算法/ 获得/ 的/ 网络通信/ 时延/ 平均值/ 差别/ 很小/ 的/ 情况/ 下/ ,/ 本文/ 提出/ 的/ ACOHPR/ 算法/ 能够/ 大幅/ 降低/ 每个/ 节点/ 维护/ 的/ 邻居/ 节点/ 集合/ 大小/ ,/ 大约/ 在/ 22/ 个/ 左右/ ./ 未来/ 的/ 工作/ 包括/ 以下/ 两个/ 方面/ :/ 一方面/ 是/ 要/ 考虑/ ACOHPR/ 在/ 真实/ 互联网/ 环境/ 中/ 的/ 部署/ ,/ 并/ 对/ 其/ 性能/ 及/ 优化/ 效果/ 进行/ 评估/ ,/ Planetlab/ 为/ 下/ 一步/ 工作/ 提供/ 了/ 很/ 好/ 的/ 实验/ 平台/ ./ 另一方面/ ,/ 下/ 一步/ 工作/ 需要/ 综合/ 考虑/ 时延/ 、/ 带宽/ 、/ 节点/ 处理/ 能力/ 等/ 因素/ ,/ 对/ Overlay/ 路由/ 扩展性/ 问题/ 进行/ 多方位/ 权衡/ ,/ 使得/ 在/ 改进/ 系统/ 性能/ 的/ 同时/ 获得/ 良好/ 的/ 可扩展性/ ./ 

