Page1/ 一种/ 递归/ 定义/ 的/ 可/ 扩展/ 片上/ 网络拓扑/ 结构/ 朱晓静/ (/ 中国科学院计算技术研究所/ 计算机系统/ 结构/ 重点/ 实验室/ 北京/ 100190/ )/ (/ 北京/ 龙芯/ 中科/ 技术/ 服务中心/ 有限公司/ 北京/ 100190/ )/ 摘要/ 晶体管/ 工艺/ 的/ 持续/ 发展/ 导致/ 片上/ 处理器/ 数/ 的/ 逐渐/ 增多/ ,/ 片上/ 系统/ 的/ 核/ 间通信/ 要求/ 吞吐量/ 高/ 、/ 延时/ 低/ 、/ 可扩展性/ 好/ ,/ 传统/ 的/ 片/ 上/ 总线/ 和/ crossbar/ 互连/ 结构/ 已/ 无法/ 满足/ 片上/ 系统/ 的/ 通信/ 需求/ ,/ 为此/ 研究者/ 提出/ 新/ 的/ 片/ 上/ 互连/ 结构/ ,/ 称为/ 片上/ 网络/ ./ 为/ 满足/ 片上/ 网络/ 的/ 特有/ 通信/ 需求/ ,/ 提出/ 了/ 一种/ 可/ 扩展/ 的/ 拓扑/ 结构/ Rgrid/ 及其/ 路由/ 算法/ DR/ ,/ 它/ 缩短/ 了/ 片/ 上/ 处理器/ 间/ 的/ 平均/ 距离/ 并且/ 比/ Torus/ 结构/ 容易/ 实现/ ./ 作者/ 在/ 龙芯/ 用户/ 级/ 模拟器/ 上/ 分别/ 实现/ Mesh/ 和/ Rgrid/ 结构/ ,/ 运行/ Splash2/ 并行/ 测试程序/ 集/ 比较/ 这/ 两种/ 结构/ 的/ 性能/ 优劣/ ./ 运行/ 程序/ 结果表明/ ,/ Splash2/ 程序/ 在/ Rgrid/ 结构/ 中/ 运行/ 得到/ 的/ IPC/ 比/ 在/ Mesh/ 结构/ 增加/ 了/ 0.5/ %/ ~/ 148/ %/ ,/ Rgrid/ 结构/ 的/ 平均/ 延时/ 比/ Mesh/ 小/ 5/ %/ ~/ 81/ %/ ./ 关键词/ 拓扑/ 结构/ ;/ 片上/ 网络/ ;/ 可/ 扩展/ ;/ 性能/ 优化/ 1/ 引言/ 由于/ 晶体管/ 工艺/ 的/ 发展/ 和/ 处理器/ 主频/ 的/ 快速增长/ ,/ 片上/ 总线/ 的/ 带宽/ 和/ 延时/ 已/ 满足/ 不了/ 片上/ 多核/ 通信/ 的/ 要求/ ,/ 总线/ 的/ 长/ 连线/ 延时/ 成为/ 片上/ 系统/ 性能/ 进一步提高/ 的/ 瓶颈/ ./ 为了/ 更好/ 地/ 组织/ 片上/ 数目/ 众多/ 的/ 处理器/ 核/ ,/ 设计者/ 需要/ 一个/ 模块化/ 、/ 扩展性/ 好/ 、/ 可/ 重用/ 、/ 高性能/ 的/ 互连/ 结构/ ./ 2001/ 年/ ,/ Dally/ 、/ Sgroi/ 等/ [/ 1/ -/ 2/ ]/ 分别/ 提出/ 了/ 片/ 上/ 网络/ (/ NetworkonChip/ )/ 互连/ 结构/ ,/ 简称/ Page2NoC/ ./ 基于/ Switch/ 结构/ 的/ 片/ 上/ 网络/ 能克服/ 片上/ 总线/ 吞吐量/ 低/ 、/ 连线/ 长/ 的/ 缺点/ ,/ 在/ 片/ 上/ 网络/ 中/ 可以/ 有/ 多个/ 核/ 同时/ 传输/ 多条/ 信息/ ,/ 提高/ 了/ 通信/ 带宽/ ,/ 使得/ 片上/ 资源/ 利用率/ 更高/ ./ 片上/ 网络/ 技术/ 可以/ 提高/ 系统/ 的/ 性能/ 和/ 可扩展性/ 并/ 降低/ 片上/ 系统/ 的/ 面积/ 和/ 功耗/ ./ 近年来/ 片上/ 网络/ 的/ 研究/ 包括/ 拓扑/ 结构/ 的/ 性能/ 分析/ 、/ 低功耗/ 设计/ 、/ 路由器/ 结构设计/ 、/ 容错/ 算法/ 设计/ 、/ 测试/ 与/ 实现/ 方法/ 等等/ ./ 片上/ 网络/ 的/ 性能/ 标准/ 有/ 吞吐量/ 、/ 传输/ 延时/ 、/ 功耗/ 、/ 面积/ 等/ ./ 在/ 设计/ 片上/ 网络/ 时/ ,/ 除了/ 要/ 选择/ 拓扑/ 结构/ 、/ 路由/ 算法/ ,/ 还要/ 考虑/ 路由/ switch/ 的/ 结构/ ,/ 如/ 端口/ 的/ FIFO/ 、/ arbiter/ 、/ MUX/ 、/ 虚/ 通道/ 等/ ./ 如何/ 在/ 设计/ 时/ 选择/ 合适/ 的/ 结构/ 和/ 算法/ ,/ 需要/ 大量/ 的/ 性能/ 分析/ ./ 常用/ 的/ 网络拓扑/ 结构/ 有/ 2D/ -/ mesh/ 、/ Torus/ 、/ Ring/ 、/ Hypercube/ 、/ Star/ 、/ Fat/ -/ tree/ 等/ ./ 这些/ 结构/ 以前/ 主要/ 应用/ 于/ 大规模/ 并行机/ 的/ 互联/ 系统/ ,/ 近年来/ 研究者/ 将/ 这些/ 结构/ 在/ 片/ 上/ 网络/ 中/ 实现/ 并/ 对/ 其/ 进行/ 性能/ 分析/ [/ 3/ ]/ ./ 片上/ 系统/ 与/ 大规模/ 并行/ 系统/ 的/ 设计标准/ 差异/ 很大/ ,/ 设计/ 时要/ 考虑/ 功耗/ 、/ 面积/ 、/ 硬件/ 实现/ 难度/ 等/ 问题/ ./ 由于/ 片上/ 连线/ 更细/ ,/ 片上/ 系统/ 可以/ 在/ 同样/ 面积/ 内/ 布置/ 更/ 多线/ ,/ 得到/ 更/ 高/ 的/ 带宽/ ;/ 片上/ 系统/ 要求/ 通信/ 延时/ 跟/ 时钟/ 周期/ 处于/ 同一/ 数量级/ ,/ 需要/ 更/ 低/ 的/ 通信/ 延时/ ,/ 同时/ switch/ 结构/ 不能/ 过于/ 复杂/ ,/ 拓扑/ 结构/ 的/ 设计/ 要/ 充分考虑/ 布线/ 的/ 实现/ 难度/ ./ 目前/ 在/ 经典/ 拓扑/ 结构/ 基础/ 上/ 进行/ 性能/ 分析/ 的/ 研究/ 较/ 多/ ,/ 有/ 研究者/ 提出/ 新/ 的/ 网络拓扑/ 结构/ [/ 4/ ]/ ,/ 但/ 很少/ 有人/ 专门/ 为片/ 上/ 系统/ 提出/ 新/ 的/ 拓扑/ 结构/ ./ Pavlidis/ 等/ 提出/ 在/ 片/ 上/ 系统/ 中/ 使用/ 3/ -/ D/ 拓扑/ 结构/ [/ 5/ ]/ ,/ 这样/ 做/ 无疑/ 可以/ 减小/ 节点/ 之间/ 的/ 跳数/ (/ hop/ )/ ,/ 但/ 却/ 给/ 物理/ 设计/ 带来/ 了/ 极大/ 挑战/ ./ 片上/ 系统/ 跟/ 大规模/ 并行/ 系统/ 的/ 特征/ 存在/ 较大/ 差异/ ,/ 设计/ 一个/ 适用/ 于片/ 上/ 网络/ ,/ 能够/ 提供/ 低/ 延时/ 、/ 高带宽/ 、/ 硬件/ 实现/ 难度/ 不高/ 的/ 拓扑/ 结构/ 是/ 很/ 有/ 意义/ 的/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节/ 给出/ Rgrid/ 拓扑/ 结构/ 的/ 定义/ 、/ 结构特征/ 及/ 硬件/ 实现/ 难度/ ;/ 第/ 4/ 节/ 定义/ Rgrid/ 的/ 路由/ 算法/ DR/ ;/ 第/ 5/ 节在/ 龙芯/ 用户/ 级/ 模拟器/ 上/ 分析/ Splash2/ 程序/ 在/ Rgrid/ 与/ Mesh/ 结构/ 的/ 性能/ 优劣/ ;/ 最后/ 是/ 总结/ ./ 2/ 拓扑/ 结构/ 和/ 路由/ 算法/ 拓扑/ 结构/ 和/ 路由/ 算法/ 的/ 选择/ 对于/ 片上/ 网络系统/ 性能/ 影响/ 很大/ ./ Switch/ 间/ 的/ 联线/ 共同/ 组成/ 片上/ 网络/ 的/ 拓扑/ 结构/ ,/ 拓扑/ 结构/ 的/ 选择/ 不仅/ 影响/ 延时/ 与/ 吞吐量/ ,/ 还会/ 影响/ 片上/ 面积/ 和/ 功耗/ ./ 拓扑/ 结构/ 可以/ 分为/ 二维/ 结构/ 和/ 多维/ 结构/ ,/ 二维/ 结构/ 在/ 片/ 上/ 实现/ 更/ 容易/ 些/ ,/ 但/ 多维/ 结构/ 的/ 节点/ 间/ 距离/ (/ 以/ hop/ 计数/ )/ 通常/ 小/ 一些/ ./ 在/ 片/ 上/ 系统/ 研究/ 中/ 最/ 常用/ 的/ 拓扑/ 结构/ 是/ Mesh/ 结构/ ,/ 这种/ 结构/ 通常/ 采用/ XY/ 路由/ 算法/ ,/ XY/ 是/ 一种/ 无/ 死锁/ 的/ 最/ 短/ 路径/ 路由/ 算法/ ,/ 实现/ 简单/ ,/ 路由/ 的/ 硬件/ 开销/ 较/ 小/ ,/ 本文/ 的/ 性能/ 分析/ 部分/ Mesh/ 结构/ 就/ 采用/ 了/ 这种/ 算法/ ./ 研究/ 结果表明/ [/ 6/ ]/ ,/ 同样/ 的/ 网络/ 规模/ 下/ ,/ Mesh/ 结构/ 的/ 网络/ 面积/ 较大/ ./ Mesh/ 结构/ 虽然/ 实现/ 简单/ ,/ 但是/ 节点/ 间/ 平均/ 距离/ (/ hop/ )/ 比较/ 大/ ,/ 因此/ 直接/ 导致/ Mesh/ 结构/ 的/ 通信/ 延时/ 比较/ 长/ ./ Pande/ [/ 3/ ]/ 详细分析/ 了/ 几种/ 拓扑/ 结构/ 的/ 性能/ ,/ 这些/ 结构/ 包括/ SPIN/ [/ 7/ ]/ 、/ CLICH/ ?/ [/ 8/ ]/ 、/ Torus/ [/ 2/ ]/ 、/ Foldedtorus/ 、/ Octagon/ [/ 9/ ]/ 和/ BFT/ [/ 10/ ]/ ./ 可扩展性/ 是/ 衡量/ 片上/ 系统/ 性能/ 的/ 一个/ 重要/ 标准/ ,/ Farahabady/ 提出/ 了/ 一种/ 金字塔/ 形/ 的/ 可/ 扩展/ 拓扑/ 结构/ ,/ 称为/ WK/ -/ Pyra/ -/ mid/ [/ 4/ ]/ ,/ 这是/ 一个/ 可以/ 递归/ 定义/ 的/ 三维/ 拓扑/ 结构/ ,/ 该/ 结构/ 的/ 优点/ 是/ 网络/ 直径/ 和/ 节点/ 间/ 平均/ 距离/ 较/ 小/ 从而/ 路由/ 速度/ 比较/ 快/ ,/ 但/ 三维/ 的/ 拓扑/ 结构/ 和/ 密集/ 的/ 节点/ 间/ 连线/ 使得/ 物理布局/ 布线/ 难度/ 增大/ ,/ 因而/ 难以/ 在/ 片/ 上/ 系统/ 实现/ ./ 路由/ 算法/ 可以/ 分为/ 健忘/ 性/ 算法/ 和/ 自适应性/ 算法/ 两类/ ,/ 其中/ 健忘/ 性/ 算法/ 在/ 路由/ 过程/ 中/ 完全/ 不/ 考虑/ 当前状况/ ,/ 只/ 根据/ 源/ 节点/ 和/ 目标/ 节点/ 的/ 位置/ 确定/ 所/ 走/ 的/ 路径/ ,/ 自适应性/ 算法/ 又/ 分为/ 确定性/ 和/ 随机/ 算法/ 两类/ ./ DaehoSeo/ [/ 11/ ]/ 为/ 2D/ -/ mesh/ 提出/ 了/ 一种/ 新/ 的/ 路由/ 算法/ O1TURN/ ,/ 并/ 将/ 其/ 与/ DOR/ 、/ VALIANT/ 、/ ROMM/ 一系列/ 健忘/ 性/ 算法/ 作/ 比较/ ./ 因此/ 设计/ 新/ 的/ 路由/ 算法/ 对于/ 片上/ 网络/ 的/ 性能/ 优化/ 有/ 一定/ 的/ 帮助/ ./ 3Rgrid/ 结构/ 的/ 定义/ 、/ 结构特征/ 、/ 本文/ 提出/ 一种/ 新/ 的/ 可/ 扩展/ 的/ 网络拓扑/ 结构/ ,/ 命/ 硬件/ 实现/ 难度/ 3.1/ Rgrid/ 结构/ 定义/ 名为/ recursive/ -/ grid/ ,/ 简称/ Rgrid/ ,/ 如图/ 1/ 所示/ ./ 定义/ 1/ (/ Rgrid/ )/ ./ Rgrid/ 的/ 形式化/ 定义/ 为/ Ri/ +/ 1/ =/ Ri/ ∪/ (/ 4i/ ×/ R1/ )/ ./ 意思/ 即为/ i/ +/ 1/ 层/ 结构/ Ri/ +/ 1/ 是/ 由/ i/ 层/ 结构/ Ri/ 和/ 4i/ 个/ 基本块/ 组成/ 的/ ./ 可见/ Rgrid/ 是/ 递归/ 定义/ 的/ ,/ 它/ 的/ 基本/ 结构/ R1/ 如图/ 1/ (/ a/ )/ 所示/ ,/ 由/ 4/ 个/ 全/ 相连/ 的/ 节点/ 组成/ ,/ 这是/ 拓扑/ 结构/ 定义/ 的/ 基本块/ ,/ 2/ 层/ 结构/ R2/ 的/ 定义/ 如图/ 1/ (/ b/ )/ 所示/ ,/ 分别/ 在/ R1/ 的/ 4/ 个/ 顶点/ 上/ 再/ 添加/ 4/ 个/ 基本块/ ,/ 3/ 层/ 结构/ R3/ 的/ 定义/ 如图/ 1/ (/ c/ )/ 所示/ ,/ 在/ R2/ 的/ 所有/ 外部/ 顶点/ 上/ 共/ 添加/ 8/ 个/ 基本块/ ./ Page33/ ./ 2Rgrid/ 结构特征/ 节点/ 数/ N/ (/ n/ )/ ./ 基本/ 结构/ 的/ 节点/ 数为/ 4/ =/ (/ 2/ ×/ 1/ )/ 2/ ,/ 2/ 层/ 结构/ 的/ 节点/ 数为/ 16/ =/ (/ 2/ ×/ 2/ )/ 2/ ,/ 3/ 层/ 结构/ 的/ 节点/ 数为/ 36/ =/ (/ 2/ ×/ 3/ )/ 2/ ./ 因此/ 可以/ 归纳/ 得出结论/ :/ 对于/ n/ 层/ 结构/ ,/ 节点/ 总数/ N/ (/ n/ )/ =/ (/ 2/ ×/ n/ )/ 2/ ./ 边数/ E/ (/ n/ )/ ./ 基本/ 结构/ 的/ 边数/ 为/ 6/ ,/ 2/ 层/ 结构/ 的/ 边数/ 为/ 6/ ×/ 5/ =/ 30/ ,/ 3/ 层/ 结构/ 的/ 边数/ 为/ 6/ ×/ 13/ =/ 78/ ,/ 归纳/ 可知/ ,/ 对于/ n/ 层/ 结构/ ,/ 边/ 的/ 总数/ 为/ E/ (/ n/ )/ =/ (/ 2n/ +/ 1/ -/ 3/ )/ ×/ 6/ ./ 基本块/ 数/ B/ (/ n/ )/ ./ 基本/ 结构/ 的/ 基本块/ 的/ 个数/ 为/ 1/ =/ 22/ -/ 3/ ,/ 2/ 层/ 结构/ 的/ 基本块/ 的/ 个数/ 为/ 5/ =/ 23/ -/ 3/ ,/ 3/ 层/ 结构/ 的/ 基本块/ 的/ 个数/ 为/ 13/ =/ 24/ -/ 3/ ,/ 归纳/ 可知/ ,/ 对于/ n/ 层/ 结构/ 基本块/ 的/ 个数/ 为/ B/ (/ n/ )/ =/ 2n/ +/ 1/ -/ 3/ ./ 直径/ D/ (/ n/ )/ ./ 基本块/ 直径/ 为/ 1/ ,/ 2/ 层/ 结构/ 的/ 直径/ 为/ 3/ ,/ 3/ 层/ 结构/ 的/ 直径/ 为/ 5/ ,/ 归纳/ 可知/ ,/ n/ 层/ 结构/ 的/ 直径/ D/ (/ n/ )/ =/ 2n/ -/ 1/ ./ 节点/ 间/ 平均/ 距离/ H/ (/ n/ )/ ./ H/ (/ n/ )/ 的/ 定义/ 是/ ,/ H/ (/ n/ )/ =/ ∑/ distance/ (/ i/ ,/ j/ )/ // N2/ ,/ 意思/ 即/ 为/ 节点/ 间/ 平均/ 距离/ 是/ 所有/ 的/ 节点/ 间/ 距离/ 之/ 和/ 除以/ 节点/ 对/ 的/ 个数/ ,/ 其中/ i/ ,/ j/ 表示/ 节点/ ,/ distance/ (/ i/ ,/ j/ )/ 表示/ 节点/ i/ 和/ j/ 之间/ 的/ 距离/ ,/ N/ 表示/ 节点/ 总数/ ./ 对于/ 1/ 层/ 结构/ ,/ 所有/ 节点/ 间/ 距离/ 都/ 是/ 1/ ,/ 因此/ H/ (/ 1/ )/ =/ 1/ ;/ 2/ 层/ 结构/ 中/ ,/ 共有/ 两种/ 不同/ 位置/ 的/ 节点/ ,/ H/ (/ 2/ )/ =/ (/ (/ 1/ ×/ 6/ +/ 2/ ×/ 9/ )/ ×/ 4/ +/ (/ 1/ ×/ 3/ +/ 2/ ×/ 3/ +/ 3/ ×/ 9/ )/ ×/ 12/ )/ // (/ 16/ ×/ 16/ )/ =/ (/ 96/ +/ 36/ ×/ 12/ )/ // 256/ =/ 528/ // 256/ =/ 2.06/ ;/ 3/ 层/ 结构/ 中/ ,/ 有/ 5/ 种/ 不同/ 位置/ 的/ 节点/ ,/ H/ (/ 3/ )/ =/ (/ (/ 1/ ×/ 3/ +/ 2/ ×/ 3/ +/ 3/ ×/ 9/ +/ 4/ ×/ 7/ +/ 5/ ×/ 13/ )/ ×/ 12/ +/ (/ 1/ ×/ 6/ +/ 2/ ×/ 9/ +/ 3/ ×/ 7/ +/ 4/ ×/ 13/ )/ ×/ 4/ +/ (/ 1/ ×/ 6/ +/ 2/ ×/ 11/ +/ 3/ ×/ 10/ +/ 4/ ×/ 8/ )/ ×/ 8/ +/ (/ 1/ ×/ 3/ +/ 2/ ×/ 6/ +/ 3/ ×/ 14/ +/ 4/ ×/ 4/ +/ 5/ ×/ 8/ )/ ×/ 8/ +/ (/ 1/ ×/ 6/ +/ 2/ ×/ 16/ +/ 3/ ×/ 13/ )/ ×/ 4/ )/ // (/ 36/ ×/ 36/ )/ =/ (/ 129/ ×/ 12/ +/ 97/ ×/ 4/ +/ 90/ ×/ 8/ +/ 113/ ×/ 8/ +/ 77/ ×/ 4/ )/ // (/ 36/ ×/ 36/ )/ =/ 2.98/ ./ 综合/ 上述/ 结果/ ,/ 对于/ N/ ×/ N/ 的/ Mesh/ ,/ 节点/ 间/ 的/ 平均/ 距离/ Hm/ =/ 2N/ // 3/ [/ 12/ ]/ ,/ 边数/ 为/ Em/ =/ 2N2/ -/ 2N/ ,/ 直径/ Dm/ =/ 2N/ -/ 1/ ;/ 对于/ N/ ×/ N/ 的/ Torus/ ,/ 若/ N/ 是/ 偶数/ ,/ 那么/ 节点/ 间/ 平均/ 距离/ Ht/ =/ N/ // 2/ [/ 12/ ]/ ,/ 边数/ Et/ =/ 2N2/ ,/ 直径/ Dt/ =/ N/ ./ 2/ 层/ Rgrid/ 的/ 节点/ 数为/ (/ 2/ ×/ 2/ )/ 2/ ,/ 与/ 4/ ×/ 4/ 的/ Mesh/ // Torus/ 规模/ 相等/ ,/ 3/ 层/ Rgrid/ 的/ 节点/ 数为/ (/ 2/ ×/ 3/ )/ 2/ ,/ 与/ 6/ ×/ 6/ 的/ Mesh/ // Torus/ 规模/ 相等/ ./ 比较/ 这/ 3/ 种/ 拓扑/ 结构/ 的/ 参数/ ,/ 当/ N/ =/ 4/ 时/ ,/ Mesh/ 、/ Torus/ 与/ 2/ 层/ Rgrid/ 的/ 节点/ 数同/ 为/ 16/ ,/ 比较/ 三者/ 的/ 平均/ 距离/ :/ Hm/ =/ 8/ // 3/ ,/ Ht/ =/ 2/ ,/ Hr/ =/ 2.06/ ;/ 比较/ 直径/ :/ Dm/ =/ 6/ ,/ Dt/ =/ 4/ ,/ Dr/ =/ 3/ ;/ 比较/ 边数/ :/ Em/ =/ 24/ ,/ Et/ =/ 32/ ,/ Er/ =/ 30/ ./ 当/ N/ =/ 6/ 时/ ,/ Mesh/ 、/ Torus/ 、/ 3/ 层/ Rgrid/ 的/ 节点/ 数同/ 为/ 36/ ,/ 比较/ 三者/ 的/ 平均/ 距离/ :/ Hm/ =/ 4/ ,/ Ht/ =/ 3/ ,/ Hr/ =/ 2.98/ ;/ 比较/ 直径/ :/ Dm/ =/ 10/ ,/ Dt/ =/ 6/ ,/ Dr/ =/ 5/ ;/ 比较/ 边数/ :/ Em/ =/ 60/ ,/ Et/ =/ 72/ ,/ Er/ =/ 78/ ./ 由此可见/ ,/ 当/ 网络/ 规模/ 相同/ 时/ ,/ Rgrid/ 的/ 网络/ 直径/ 最小/ ,/ 节点/ 间/ 平均/ 距离/ 小于/ Mesh/ 结构/ ,/ 略大于/ Torus/ 结构/ ,/ 当/ 网络/ 规模/ 小于/ 等于/ 10/ ×/ 10/ ,/ 3/ 种/ 结构/ 的/ 边数/ 基本/ 属于/ 同一/ 数量级/ ,/ 仅当/ 网络/ 规模/ 大于/ 5/ 层/ Rgrid/ 时/ ,/ Rgrid/ 的/ 边数/ 才/ 会/ 远远/ 超出/ Mesh/ 和/ Torus/ 结构/ ./ 图/ 2/ 对/ Mesh/ 、/ Torus/ 、/ Rgrid3/ 种/ 结构/ 的/ 理论/ 特性/ 作/ 了/ 直观/ 比较/ ./ 综合/ 来看/ ,/ Rgrid/ 增加/ 了/ 结构/ 中/ 的/ 连线/ 个数/ 从而/ 缩短/ 节点/ 间/ 距离/ ./ Rgrid/ 的/ 节点/ 间/ 平均/ 距离/ 和/ 直径/ 跟/ Torus/ 相近/ ,/ 都/ 比/ Mesh/ 结构/ 小/ ./ 下面/ 一/ 小节/ 给出/ 说明/ ,/ Rgrid/ 的/ 硬件/ 实现/ 难度/ 比/ Torus/ 低/ ,/ 更/ 容易/ 实现/ ./ 3.3/ Rgrid/ 硬件/ 实现/ 难度/ 与/ 开销/ 分析/ 3.3/ ./ 1/ 连线/ 延时/ 分析/ 对于/ 片上/ 网络/ ,/ 拓扑/ 结构/ 的/ 物理/ 布线/ 直接/ 影响/ 处理器/ 间/ 的/ 线/ 延时/ ,/ 如果/ 互连/ 结构/ 的/ 线/ 延时/ 太长会/ 使得/ 在/ 一/ 拍/ 内/ 数据/ 无法/ 从/ 一个/ 节点/ 传输/ 到/ 下/ 一个/ 节点/ ./ 文献/ [/ 3/ ]/ 中/ 给出/ 图/ 3/ 所示/ 几种/ 拓扑/ 结构/ ,/ 布线/ 最/ 方便/ 的/ 应该/ 是/ Mesh/ 结构/ ,/ 在/ Mesh/ 结构/ 中/ 所有/ 边/ 的/ 长度/ 都/ 相等/ ,/ 由于/ 有/ 较/ 长/ 的/ 回边/ ,/ Torus/ 结构/ 的/ 布线/ 变得/ 困难/ ,/ 因此/ 在/ 互连/ 结构/ 中/ 通常/ 使用/ Torus/ 结构/ 的/ 另外/ 一种/ 形式/ :/ Folded/ -/ torus/ ./ Folded/ -/ torus/ 可以/ 缩短/ 最长/ 的/ 线/ 长度/ ,/ 从而/ 它/ 的/ 线/ 延时/ 比/ Torus/ 结构/ 小/ ./ 片上/ 系统/ 的/ 物理/ 布线/ 通常/ 都/ 是/ 水平/ 和/ 垂直/ 布线/ ,/ 因此/ 在/ Rgrid/ 结构/ 中/ ,/ 斜边/ 要/ 经过/ 水平/ 和/ 垂直/ 两个/ 方向/ ,/ 它/ 的/ 长度/ 是/ 水平/ 或/ 垂直/ 边/ 的/ 二倍/ ,/ 这样/ 长度/ Page4/ 的/ 线/ 延时/ 可以/ 在/ 一/ 拍/ 之内/ 完成/ ,/ 如图/ 1/ 所示/ ,/ 网络/ 规模/ 扩大/ 不会/ 引起/ Rgrid/ 中/ 的/ 边/ 增长/ ,/ 而/ Torus/ 结构/ 中/ 最长/ 边/ 的/ 长度/ 跟/ 网络/ 节点/ 数/ 的/ 平方根/ 成正比/ ,/ Rgrid/ 的/ 扩展性/ 很/ 好/ ./ 因此/ Rgrid/ 的/ 硬件/ 实现/ 难度/ 跟/ Mesh/ 结构/ 相近/ ,/ 比/ Torus/ 结构/ 容易/ 实现/ ./ 3.3/ ./ 2/ 面积/ 和/ 功耗/ 分析/ 片上/ 网络/ 中/ ,/ 功耗/ 面积/ 开销/ 较大/ 的/ 部分/ 主要/ 是/ buffer/ 模块/ 和/ 路由器/ 间/ 连线/ ./ Alpha21364/ 的/ 路由器/ 和/ 连线/ 功耗/ 共有/ 23W/ [/ 13/ ]/ ,/ 其中/ 58/ %/ 是/ 由/ 连线/ 电路/ 消耗/ 的/ ./ Rgrid/ 增加/ 了/ 路由器/ 间/ 端口数/ ,/ 也/ 增加/ 了/ 路由器/ 间/ 连线/ 数目/ ,/ 从而/ 增加/ 了/ 片/ 上/ 的/ 功耗/ 和/ 面积/ ,/ 每个/ 路由器/ 的/ 端口/ 数目/ 从/ 原来/ 的/ 5/ (/ 本地/ 端口/ 加上/ 4/ 个/ 外部/ 方向/ )/ 增加/ 到/ 7/ (/ 本地/ 端口/ 加上/ 6/ 个/ 外部/ 方向/ )/ ,/ 路由器/ 间/ 连线/ 数/ 大约/ 增加/ 了/ 40/ %/ ,/ 输入输出/ 端口/ 间/ 的/ 连线/ 数目/ 大约/ 增加/ 了/ 一倍/ (/ 连线/ 数从/ 52/ =/ 25/ 增加/ 到/ 72/ =/ 49/ )/ ,/ 因此/ 路由器/ 本身/ 的/ 连线/ 功耗/ 和/ 面积/ 大约/ 增加/ 了/ 一倍/ ./ 从/ 这个/ 方面/ 进行/ 分析/ ,/ Rgrid/ 比/ Mesh/ 结构/ 增加/ 了/ 大量/ 的/ 片/ 上/ 功耗/ 与/ 面积/ 开销/ ,/ 但/ 增加/ 的/ 开销/ 不会/ 超出/ 原来/ 的/ 一倍/ ./ 4Rgrid/ 的/ 路由/ 算法/ DRDR/ (/ DeterministicroutingalgorithmofRgrid/ )/ 算法/ ,/ 即/ Rgrid/ 的/ 确定性/ 算法/ ./ 其/ 实现/ 如图/ 4/ 所示/ ,/ 该/ 算法/ 不是/ 最短/ 路径/ 算法/ ,/ 但/ 所得/ 路径/ 长度/ 最多/ 是/ 最/ 短/ 路径/ 算法/ 长度/ 加/ 1/ ,/ 如图/ 3/ (/ b/ )/ 所示/ ,/ 从源/ 节点/ S/ (/ 2/ ,/ 2/ )/ 到/ 目标/ 节点/ D/ (/ 3/ ,/ 0/ )/ ,/ 路径/ 长度/ 为/ 最/ 短/ 路径/ 长度/ 加/ 1/ ,/ 而/ 从源/ 节点/ S/ (/ 3/ ,/ 5/ )/ 到/ 目标/ 节点/ D/ (/ 5/ ,/ 2/ )/ 走/ 的/ 路径/ 则/ 是/ 最/ 短/ 路径/ ./ 如图/ 1/ 所示/ ,/ Rgrid/ 结构/ 的/ 边/ 有/ 4/ 个/ 路由/ 坐标轴/ ,/ 分别/ 记为/ X/ ,/ Y/ ,/ XY/ (/ 沿着/ 这个/ 方向/ x/ ++/ ,/ y/ ++/ 或者/ x/ -/ -/ ,/ y/ -/ -/ )/ ,/ YX/ (/ 沿着/ 这个/ 方向/ x/ ++/ ,/ y/ -/ -/ 或者/ x/ -/ -/ ,/ y/ ++/ )/ ./ 在/ Rgrid/ 拓扑/ 结构/ 中/ ,/ 内部/ 节点/ 的/ 度数/ 都/ 是/ 6/ ,/ 即/ 每个/ 节点/ 有/ 6/ 个/ 邻/ 节点/ ,/ X/ ,/ Y/ ,/ XY/ 或者/ YX/ 三个/ 方向/ 各/ 两条/ 边/ ./ 设/ 当前/ 节点/ 为/ C/ (/ cx/ ,/ cy/ )/ ,/ 目标/ 节点/ 为/ D/ (/ dx/ ,/ dy/ )/ ,/ 若/ (/ cx/ +/ cy/ )/ %/ 2/ =/ =/ 0/ 则/ 表示/ 当前/ 节点/ 有/ XY/ 方向/ 上/ 的/ 边/ ,/ 若/ (/ cx/ +/ cy/ )/ %/ 2/ =/ =/ 1/ 表示/ 当前/ 节点/ 有/ YX/ 方向/ 的/ 边/ ./ 有/ 一点/ 需要/ 注意/ ,/ 外围/ 节点/ 跟/ 内部/ 节点/ 不同/ ,/ 它们/ 只有/ 3/ 条/ 邻边/ ,/ 因此/ 当前/ 节点/ 或者/ 目标/ 节点/ 在/ 外围/ 时要/ 格外/ 注意/ 有些/ 边/ 是/ 不/ 存在/ 的/ ./ 举例说明/ ,/ 在/ 2/ 层/ Rgrid/ 结构/ 上/ ,/ 节点/ (/ 1/ ,/ 0/ )/ 和/ (/ 2/ ,/ 0/ )/ 不/ 相邻/ ,/ 若要/ 从/ 节点/ (/ 1/ ,/ 0/ )/ 到/ (/ 2/ ,/ 0/ )/ 路由/ ,/ 就/ 只能/ 先走/ Y/ +/ 方向/ ,/ 路经/ (/ 1/ ,/ 0/ )/ -/ >/ (/ 1/ ,/ 1/ )/ -/ >/ (/ 2/ ,/ 1/ )/ -/ >/ (/ 2/ ,/ 0/ )/ ./ DR/ 算法/ 包括/ 两个/ 函数/ ./ 其中/ DR/ 函数/ 先/ 处理/ 目标/ 节点/ 的/ 边缘/ 情况/ ,/ 然后/ 调用/ MIN/ 函数/ ,/ 赋给/ MIN/ 函数/ 的/ 参数/ 可以/ 保证/ 目标/ 节点/ 是/ 内部/ 节点/ ,/ 这样/ MIN/ 函数/ 只/ 需要/ 处理/ 当前/ 节点/ 位于/ 边缘/ 的/ 情况/ ,/ 然后/ 作出/ 路由/ 选择/ ./ 这/ 两个/ 函数/ 的/ 伪/ 代码/ 如图/ 4/ 和/ 图/ 5/ 所示/ ./ DR/ 算法/ 的/ 路由/ 过程/ 如图/ 6/ 所示/ ./ Page5/ 不动/ ,/ 那么/ 先走/ Y/ 方向/ MIN/ (/ cx/ ,/ cy/ ,/ dx/ ,/ dy/ )/ {/ // // 调用/ 本/ 函数/ 之前/ ,/ 已经/ 保证/ 源/ 节点/ 跟/ 目标/ 节点/ 绝对/ 不/ 相同/ ,/ 且/ 目标/ 节点/ 是/ 内部/ 节点/ if/ (/ (/ cy/ =/ =/ 0/ ‖/ cy/ =/ =/ mesh/ _/ width/ -/ 1/ )/ (/ (/ cx/ %/ 2/ =/ =/ 1dx/ >/ cx/ )/ ‖/ (/ cx/ %/ 2/ =/ =/ 0/ &&/ dx/ </ cx/ )/ )/ {/ // // 若/ 当前/ 节点/ 在/ 最/ 上面/ 或/ 最/ 下面/ 的/ 水平线上/ ,/ 并且/ 在/ X/ 方向/ 走/ If/ (/ dy/ >/ cy/ )/ 走/ Y/ +/ 方向/ ;/ else/ 走/ Y/ -/ 方向/ ;/ }/ elseif/ (/ (/ cx/ =/ =/ 0/ ‖/ cx/ =/ =/ mesh/ _/ width/ -/ 1/ )/ &&/ // // 若/ 当前/ 节点/ 在/ 最/ 左边/ 或者/ 最/ 右边/ 的/ 垂直线/ 上/ ,/ 并且/ 在/ Y/ 方向/ if/ (/ dx/ >/ cx/ )/ 走/ X/ +/ 方向/ ;/ else/ 走/ X/ -/ 方向/ ;/ }/ elseif/ (/ cx/ </ dxcy/ </ dy/ (/ cx/ +/ cy/ )/ %/ 2/ =/ =/ 0/ )/ 走/ XY/ +/ 方向/ ;/ elseif/ (/ cx/ >/ dxcy/ >/ dy/ (/ cx/ +/ cy/ )/ %/ 2/ =/ =/ 0/ )/ 走/ XY/ -/ 方向/ ;/ elseif/ (/ cx/ </ dxcy/ >/ dy/ (/ cx/ +/ cy/ )/ %/ 2/ =/ =/ 1/ )/ 走/ YX/ +/ 方向/ ;/ elseif/ (/ cx/ >/ dxcy/ </ dy/ (/ cx/ +/ cy/ )/ %/ 2/ =/ =/ 1/ )/ 走/ YX/ -/ 方向/ ;/ elseif/ (/ abs/ (/ cx/ -/ dx/ )/ >/ =/ abs/ (/ cy/ -/ dy/ )/ )/ 走/ X/ 方向/ ;/ else/ 走/ Y/ 方向/ ;/ }/ 走不动/ ,/ 那么/ 先走/ X/ 方向/ elseMIN/ (/ cx/ ,/ cy/ ,/ mesh/ _/ width/ -/ 2/ ,/ 1/ )/ ;/ DR/ (/ cx/ ,/ cy/ ,/ dx/ ,/ cy/ )/ {/ if/ (/ cx/ =/ =/ dxcy/ =/ =/ dy/ )/ HOME/ ;/ // // 判断/ 是否/ 已/ 到达/ 目的/ elseif/ (/ abs/ (/ cx/ -/ dx/ )/ +/ abs/ (/ cy/ -/ dy/ )/ =/ =/ 1/ )/ 走/ X/ 或/ Y/ 方向/ ;/ // // 若/ 与/ 目标/ 节点/ 坐标/ 距离/ 为/ 1/ ,/ 直接/ 走/ X/ 方向/ 或者/ Y/ 方向/ elseif/ (/ dx/ =/ =/ 0dy/ =/ =/ 0/ )/ {/ // // 若/ 目标/ 节点/ 是/ 4/ 个/ 顶点/ 之一/ if/ (/ cx/ =/ =/ 1cy/ =/ =/ 1/ )/ 走/ XY/ -/ 方向/ ;/ // // 若/ 与/ 目标/ 节点/ 在/ XY/ 方向/ 上/ 距离/ 为/ 1/ ,/ 走/ XY/ 方向/ elseMIN/ (/ cx/ ,/ cy/ ,/ 1/ ,/ 1/ )/ ;/ // // 否则/ 调用/ MIN/ 函数/ }/ elseif/ (/ dx/ =/ =/ 0dy/ =/ =/ mesh/ _/ width/ -/ 1/ )/ {/ if/ (/ cx/ =/ =/ 1cy/ =/ =/ mesh/ _/ width/ -/ 2/ )/ 走/ YX/ -/ 方向/ ;/ // // 若/ 与/ 目标/ 节点/ 在/ XY/ 方向/ 上/ 距离/ 为/ 1/ ,/ 走/ YX/ 方向/ elseMIN/ (/ cx/ ,/ cy/ ,/ 1/ ,/ mesh/ _/ width/ -/ 2/ )/ ;/ }/ elseif/ (/ dx/ =/ =/ mesh/ _/ width/ -/ 1dy/ =/ =/ 0/ )/ {/ if/ (/ cx/ =/ =/ mesh/ _/ width/ -/ 2cy/ =/ =/ 1/ )/ 走/ YX/ +/ 方向/ ;/ }/ elseif/ (/ dx/ =/ =/ mesh/ _/ width/ -/ 1dy/ =/ =/ mesh/ _/ width/ -/ 1/ )/ {/ if/ (/ cx/ =/ =/ mesh/ _/ width/ -/ 2cy/ =/ =/ mesh/ _/ width/ -/ 2/ )/ 走/ XY/ +/ 方向/ ;/ elseMIN/ (/ cx/ ,/ cy/ ,/ mesh/ _/ width/ -/ 2/ ,/ mesh/ _/ width/ -/ 2/ )/ ;/ }/ elseif/ (/ dx/ =/ =/ 0/ )/ {/ if/ (/ dy/ %/ 2/ =/ =/ 1cx/ -/ dx/ =/ =/ 1dy/ -/ cy/ =/ =/ 1/ )/ 走/ YX/ -/ 方向/ ;/ elseif/ (/ dy/ %/ 2/ =/ =/ 0cx/ -/ dx/ =/ =/ 1cy/ -/ dy/ =/ =/ 1/ )/ elseMIN/ (/ cx/ ,/ cy/ ,/ 1/ ,/ dy/ )/ ;/ }/ elseif/ (/ dx/ =/ =/ mesh/ _/ width/ -/ 1/ )/ {/ if/ (/ dy/ %/ 2/ =/ =/ 1dx/ -/ cx/ =/ =/ 1dy/ -/ cy/ =/ =/ 1/ )/ elseif/ (/ dy/ %/ 2/ =/ =/ 0dx/ -/ cx/ =/ =/ 1cy/ -/ dy/ =/ =/ 1/ )/ elseMIN/ (/ cx/ ,/ cy/ ,/ mesh/ _/ width/ -/ 2/ ,/ dy/ )/ ;/ }/ elseif/ (/ dy/ =/ =/ 0/ )/ {/ if/ (/ dx/ %/ 2/ =/ =/ 0cx/ -/ dx/ =/ =/ 1cy/ -/ dy/ =/ =/ 1/ )/ 走/ XY/ -/ 方向/ ;/ elseif/ (/ dx/ %/ 2/ =/ =/ 1dx/ -/ cx/ =/ =/ 1cy/ -/ dy/ =/ =/ 1/ )/ elseMIN/ (/ cx/ ,/ cy/ ,/ dx/ ,/ 1/ )/ ;/ }/ elseif/ (/ dy/ =/ =/ mesh/ _/ width/ -/ 1/ )/ {/ if/ (/ dx/ %/ 2/ =/ =/ 0cx/ -/ dx/ =/ =/ 1dy/ -/ cy/ =/ =/ 1/ )/ elseif/ (/ dx/ %/ 2/ =/ =/ 1dx/ -/ cx/ =/ =/ 1dy/ -/ cy/ =/ =/ 1/ )/ MIN/ (/ cx/ ,/ cy/ ,/ dx/ ,/ mesh/ _/ width/ -/ 2/ )/ ;/ }/ elseMIN/ (/ cx/ ,/ cy/ ,/ dx/ ,/ dy/ )/ ;/ }/ 走/ YX/ -/ 方向/ ;/ 走/ XY/ +/ 方向/ ;/ 5/ 实验/ 结果/ 分析/ 5.1/ 模拟/ 环境/ 使用/ 龙芯/ 用户/ 级/ 模拟器/ 作为/ 本文/ 的/ 模拟/ 工具/ [/ 14/ ]/ ./ 该/ 模拟器/ 采用/ CMP/ 结构/ ,/ 访存/ 结构/ 为/ 分布式/ 共享/ 存储/ ,/ 各/ 处理器/ 核/ 的/ 二级/ Cache/ 分别/ 映射/ 到/ 不同/ 的/ 访存/ 地址/ 空间/ 段/ ,/ 增大/ 二级/ Cache/ 空间/ ,/ 同时/ 也/ 带来/ 更多核/ 间通信/ 开销/ ./ 该/ 模拟器/ 的/ 特点/ 还/ 包括/ :/ L1cache/ 和/ L2Cache/ 具有/ 包含/ 关系/ ;/ 使用/ 基于/ 目录/ 的/ Cache/ 一致性/ 协议/ ,/ 目录/ 包含/ 在/ L2Cache/ 中/ ;/ 支持/ 路由器/ 使用/ 多个/ 虚/ 通道/ ;/ 使用/ RoundRobin/ 的/ 仲裁/ 策略/ ;/ 使用/ 基于/ Credit/ 的/ 流控/ 策略/ ,/ 可/ 选择/ 使用/ 虫/ 孔/ 或/ 存储转发/ 流控/ 机制/ ./ 5.2/ Benchmark/ 常用/ 的/ 计算机系统/ 测试程序/ 有/ MiBench/ 、/ Medi/ -/ abench/ 、/ DhryStone/ 等/ ./ 其中/ MiBench/ 和/ Mediabench/ 对应/ 多媒体/ 应用/ ,/ DhryStone/ 是/ 一种/ 综合/ 测试程序/ 集/ ,/ 没有/ 特别/ 针对/ 什么/ 应用/ ,/ 比较/ 均衡/ ./ 本文/ 使用/ Splash2/ 并行程序/ 集/ 作为/ 测试程序/ ,/ 是/ Stanford/ 大学/ 开发/ 的/ 用于/ 数值/ 计算/ 的/ 基准/ 测试程序/ ,/ 包含/ 8/ 个/ 完整/ 的/ 应用程序/ 和/ 4/ 个/ 计算/ 核心/ 程序/ ,/ 都/ 是/ 科学/ 与/ 工程/ 计算/ 和/ 计算机/ 图形学/ 方面/ 的/ 并行程序/ ,/ 主要/ 用于/ 评价/ SMP/ 、/ CC/ -/ NUMA/ 、/ DSM/ 等/ 共享/ 存储/ 类/ 体系结构/ 的/ 计算机系统/ 的/ 性能/ ./ Splash2/ 的/ 程序/ 名/ 分别/ 为/ Barnes/ 、/ Cholesky/ 、/ FFT/ 、/ FMM/ 、/ Page6LU/ 、/ Ocean/ 、/ Radiosity/ 、/ Radix/ 、/ Raytrace/ 、/ Volrend/ 、/ Water/ -/ Nsquared/ 、/ Water/ -/ Spatial/ 等/ ./ 这些/ 程序/ 主要/ 解决/ 下列/ 问题/ ./ Barnes/ :/ 解决/ 天体/ 物理/ 中/ 的/ n/ -/ body/ 问题/ ;/ Fmm/ :/ 模拟/ 二维/ 空间/ 中/ 物体/ 运动/ ;/ Water/ :/ 水分子/ 模拟/ ;/ Cholesky/ :/ 把/ 一个/ 稀疏/ 矩阵/ 分解成/ 一个/ 下/ 三角/ 矩阵/ 与/ 它/ 的/ 转置/ 矩阵/ 的/ 乘积/ ;/ Radix/ 是/ 一个/ 迭代/ 开/ r/ 次方/ 的/ 数学计算/ 程序/ ;/ Fft/ :/ 计算/ 迭代/ 开/ r/ 次/ 方根/ 的/ 倒数/ ;/ Lu/ :/ 把/ 一个/ 密集/ 矩阵/ 分解成/ 一个/ 下/ 三角/ 矩阵/ 和/ 一个/ 上/ 三角/ 矩阵/ 的/ 乘积/ ./ 文献/ [/ 15/ ]/ 中/ 给出/ 了/ Splash2/ 各/ 程序/ 通信量/ 与/ 处理器/ 个数/ 的/ 关系/ :/ Radix/ 的/ 通信量/ 与/ 处理器/ 个数/ 基本/ 无关/ ,/ 只/ 跟/ 输入/ 数据/ 集/ 的/ 大小/ 有关/ ;/ Barnes/ 、/ Fmm/ 、/ Lu/ 、/ Ocean/ 、/ Water/ -/ sp/ 的/ 核间/ 通信量/ 跟/ 处理器/ 数目/ 的/ 开平方/ 成正比/ ;/ Water/ -/ nsq/ 的/ 通信量/ 跟/ 处理器/ 数目/ 成正比/ ;/ Radiosity/ 、/ Raytrace/ 、/ Volrend/ 、/ Cholesky/ 的/ 通信量/ 较难/ 预测/ ,/ 跟/ 数据/ 的/ 具体/ 分布/ 有关/ ./ 5.3/ 性能/ 分析/ 由于/ Splash2/ 中/ 的/ 个别/ 程序/ 在/ 多/ 核/ 模拟器/ 上/ 的/ 运行/ 时间/ 较长/ ,/ 这里/ 选择/ Splash2/ 中/ 的/ Ocean/ 、/ Ocean/ _/ nc/ 、/ Fft/ 、/ Fmm/ 、/ Lu/ 、/ Lu/ _/ nc/ 、/ Radix/ 、/ Water/ _/ ns/ 等/ 运行/ 时间/ 较/ 短/ 的/ 程序/ 进行/ 分析/ ,/ 比较/ Mesh/ 结构/ 和/ Rgrid/ 的/ 性能/ 优劣/ ,/ 其中/ Mesh/ 结构/ 使用/ Dor/ 算法/ 进行/ 路由/ ,/ Rgrid/ 使用/ 上面/ 提供/ 的/ DR/ 路由/ 算法/ ,/ Lu/ 与/ Lu/ _/ nc/ 的/ 区别/ ,/ 以及/ Ocean/ 与/ Ocean/ _/ nc/ 的/ 区别/ 主要/ 在于/ 输入/ 数据/ 的/ 分配/ 方式/ 不同/ ./ 设/ 处理器/ 数为/ 16/ ,/ Mesh/ 结构/ 选用/ DOR/ 算法/ 进行/ 路由/ ,/ Rgrid/ 结构/ 使用/ DR/ 算法/ 路由/ ,/ 在/ 模拟器/ 上/ 运行/ Splash2/ 中/ 的/ Ocean/ 、/ Ocean/ _/ nc/ 、/ Fft/ 、/ Fmm/ 、/ Radix/ 、/ Lu/ 、/ Lu/ _/ nc/ 、/ Water/ _/ ns/ 等/ 几个/ 程序/ ./ 表/ 1/ 和/ 图/ 7/ 、/ 图/ 8/ 是/ 运行/ 结果/ 在/ 两种/ 拓扑/ 结构/ 中/ 关于/ 通信/ 数量/ 、/ 平均/ 延时/ 以及/ IPC/ 三/ 方面/ 的/ 比较/ 结果/ ./ 表/ 1Mesh/ 和/ Rgrid/ 结构/ 上/ 关于/ 包/ 总数/ 的/ 比较/ OceanOcean/ _/ ncFftFmmRadixLuLu/ _/ ncWater/ _/ ns/ 每个/ 程序运行/ 过程/ 中/ 发送/ 的/ 数据包/ 总量/ 并非/ 确定/ 不变/ ,/ 等待/ 应答/ 的/ 请求/ 方/ 如果/ 在/ 规定/ 的/ 时间/ 内/ 没有/ 收到/ 应答/ ,/ 请求/ 方会/ 重新/ 发包/ ,/ 因此/ 不同/ 的/ 运行/ 环境/ 对应/ 的/ 信息量/ 是/ 不/ 等/ 的/ ,/ 延时/ 较小会/ 相应/ 减少/ 重复/ 发包/ 的/ 次数/ ,/ 从而/ 减少/ 数据包/ 的/ 总数/ ,/ 如表/ 1/ 中/ Lu/ _/ nc/ 程序/ ,/ 在/ Rgrid/ 结构/ 中/ 的/ 数据包/ 总数/ 比/ Mesh/ 结构/ 的/ 包/ 总数/ 少将/ 近/ 50/ %/ ./ 各/ 程序/ 的/ 通信/ 数据包/ 总图/ 7Mesh/ 与/ Rgrid/ 结构/ 关于/ 平均/ 延时/ 的/ 比较/ 数/ 与/ 发送/ 的/ 密集/ 程度/ 不/ 一致/ ,/ 延时/ 的/ 减小/ 未必/ 与/ IPC/ 的/ 增大/ 成正比/ ,/ 但/ IPC/ 会/ 随着/ 延时/ 的/ 减小/ 而/ 增大/ ,/ 或/ 随着/ 延时/ 的/ 增大/ 而/ 减小/ ./ Radix/ 程序/ 在/ Mesh/ 结构/ 中/ 性能/ 好些/ ,/ 原因/ 在于/ Rgrid/ 中有/ 4/ 对/ 结点/ 间/ 的/ 距离/ 大于/ Mesh/ 中/ 的/ 距离/ ,/ 如图/ 1/ 所示/ ,/ 这/ 4/ 对/ 节点/ 分别/ 是/ :/ (/ 0/ ,/ 1/ )/ 和/ (/ 0/ ,/ 2/ )/ ,/ (/ 3/ ,/ 1/ )/ 和/ (/ 3/ ,/ 2/ )/ ,/ (/ 1/ ,/ 0/ )/ 和/ (/ 2/ ,/ 0/ )/ ,/ (/ 1/ ,/ 3/ )/ 和/ (/ 2/ ,/ 3/ )/ ,/ 这/ 4/ 对/ 节点/ 距离/ 较远/ 的/ 劣势/ 中/ 和/ 了/ Rgrid/ 总体/ 节点/ 间/ 距离/ 偏小/ 的/ 优势/ ./ Lu/ _/ nc/ 程序/ 的/ 性能/ 提高/ 最/ 明显/ ,/ Rgrid/ 结构/ 上/ 所得/ IPC/ 是/ 在/ Mesh/ 结构/ 所得/ IPC/ 的/ 2.48/ 倍/ ,/ 由此可见/ 片/ 间通信/ 对于/ Lu/ _/ nc/ 程序/ 的/ 性能/ 影响/ 很大/ ./ 究其原因/ ,/ 应该/ 是/ Mesh/ 结构/ 中/ Lu/ _/ nc/ 程序/ 的/ 某些/ 数据包/ 一直/ 没有/ 到达/ 目标/ 节点/ ,/ 造成/ 处理器/ 长时间/ 等待/ 响应/ ,/ 从而/ 导致/ 处理器/ 利用率/ 降低/ ,/ 这样/ 的/ 连锁反应/ 导致/ 它/ 原来/ 的/ IPC/ 非常低/ ,/ 提高/ 通信/ 效率/ 能够/ 大幅度/ 减小/ Lu/ _/ nc/ 程序/ 的/ 执行/ 时间/ ,/ 从而/ 增大/ IPC/ ./ 将/ Rgrid/ 结构/ 与/ Mesh/ 结构/ 得到/ 的/ 模拟/ 结果/ 作/ 比较/ :/ Ocean/ 的/ IPC/ 增加/ 了/ 6/ %/ ,/ 平均/ 延时/ 降低/ 了/ 约/ 5.2/ %/ ;/ Ocean/ _/ nc/ 的/ IPC/ 增加/ 了/ 8/ %/ ,/ 平均/ 延时/ 降低/ 了/ 9.5/ %/ ;/ Fft/ 的/ IPC/ 增加/ 了/ 2.7/ %/ ,/ 平均/ 延时/ 降低/ 了/ 约/ 15/ %/ ;/ Fmm/ 的/ IPC/ 增加/ 了/ 约/ 0.5/ ,/ 平均/ 延时/ 降低/ 了/ 25/ %/ ;/ Radix/ 的/ IPC/ 减小/ 了/ 约/ 1.2/ %/ ,/ 平均/ 延时/ 提高/ 了/ 约/ 9/ %/ ;/ Lu/ 的/ IPC/ 增加/ 了/ 约/ 0.6/ %/ ,/ 平均/ 延时/ 降低/ 了/ 20/ %/ ;/ Lu/ _/ nc/ 的/ IPC/ 增加/ 了/ 约/ 148/ %/ ,/ 平均/ 延/ Page7/ 时/ 降低/ 了/ 81/ %/ ./ 上述/ 各个/ 程序/ 中/ 平均/ 延时/ 的/ 降低/ 跟/ IPC/ 的/ 增加/ 比例/ 并/ 不/ 一致/ ,/ 原因/ 在于/ 各/ 程序/ 的/ 通信/ 负载/ 总量/ 和/ 密集/ 程度/ 并不相同/ ,/ 因此/ 通信/ 延时/ 的/ 降低/ 对/ 总体/ 性能/ 的/ 影响/ 也/ 不/ 一致/ ,/ 但/ 总的来说/ ,/ Rgrid/ 结构/ 所得/ IPC/ 比/ Mesh/ 结构/ 提高/ 了/ 0.6/ %/ ~/ 148/ %/ ,/ Rgrid/ 所得/ 平均/ 延时/ 比/ Mesh/ 结构/ 降低/ 了/ 约/ 5/ %/ ~/ 81/ %/ ./ 6/ 总结/ Rgrid/ 结构/ 具有/ 扩展性/ 好/ 、/ 带宽/ 高/ 、/ 节点/ 间距/ 小/ 以及/ 硬件/ 实现/ 难度/ 低等/ 优点/ ./ 从/ 模拟/ 结果/ 可以/ 看出/ ,/ 对于/ Splash2/ 中/ 的/ 大多数/ 程序/ ,/ Rgrid/ 结构/ 性能比/ Mesh/ 结构/ 的/ 性能优越/ ,/ 两种/ 结构/ 相/ 比较/ ,/ 使用/ Rgrid/ 结构/ 时/ 程序/ IPC/ 最多/ 可以/ 提高/ 148/ %/ ,/ 平均/ 延时/ 可以/ 降低/ 81/ %/ ./ 目前/ 在/ C语言/ 实现/ 的/ 用户/ 级/ 多/ 核/ 处理器/ 模拟器/ 上/ 进行/ 实验/ 分析/ ,/ 接下来/ 计划/ 详细分析/ 这种/ 结构/ 的/ 面积/ 、/ 功耗/ 等/ 其它/ 影响/ 具体/ 实现/ 的/ 相关/ 因素/ ,/ 最终/ 将/ Rgrid/ 结构/ 应用/ 到片/ 上/ 网络系统/ 中/ ./ 

