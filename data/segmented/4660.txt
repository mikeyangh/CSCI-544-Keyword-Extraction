Page1ADN/ :/ 地址/ 驱动/ 的/ 网络体系结构/ 1/ )/ (/ 清华大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100084/ )/ 2/ )/ (/ 清华大学/ 网络/ 科学/ 与/ 网络空间/ 研究院/ 北京/ 100084/ )/ 摘要/ 以/ TCP/ // IP/ 架构/ 为/ 基础/ 的/ 互联网/ ,/ 在/ 可扩展性/ 、/ 高效性/ 、/ 安全性/ 和/ 灵活性/ 等/ 诸多方面/ 面临/ 着/ 重大/ 挑战/ ./ 究其根源/ 是因为/ 在/ 现有/ 的/ 大部分/ 解决方案/ 下/ ,/ IP地址/ 的/ 多重/ 属性/ 没有/ 得到/ 充分体现/ 和/ 应用/ ./ 文中/ 提出/ 了/ 一种/ 以/ 地址/ 为/ 驱动/ 的/ 网络体系结构/ ADN/ (/ AddressDrivenNetwork/ )/ ./ ADN/ 的/ 核心思想/ 是/ 以/ IP地址/ 的/ 创新/ 管理/ 和/ 使用/ 方法/ 为/ 驱动/ ,/ 充分利用/ IP地址/ 的/ 多重/ 属性/ ,/ 包括/ 长度/ 属性/ 、/ 逻辑/ 属性/ 、/ 拓扑/ 属性/ 、/ 时间/ 属性/ 、/ 空间/ 属性/ 、/ 所有者/ 属性/ 等/ ,/ 来/ 解决/ 当前/ 互联网/ 面临/ 的/ 规模/ 扩展/ 、/ 平滑/ 移动/ 、/ 安全/ 可信/ 、/ 服务质量/ 、/ 网络/ 虚拟化/ 等/ 问题/ ./ ADN/ 在/ IP地址/ 多重/ 属性/ 得到/ 应用/ 的/ 基础/ 上/ ,/ 能够/ 实现/ 多种/ 技术/ 或/ 应用/ ,/ 包括/ 真实/ IP地址/ 、/ 二维/ 路由/ 、/ 动态/ IP/ 等/ ./ 其中/ ,/ 二维/ 路由/ 将/ IP/ 报文/ 的/ 源地址/ 和/ 目的/ 地址/ 一齐/ 作为/ 路由/ 的/ 依据/ ,/ 在/ 保持/ 纯/ IP/ 路由/ 的/ 前提/ 下/ 能够/ 完成/ 许多/ 现有/ 扩展/ 协议/ 在/ 牺牲/ 一定/ 性能/ 和/ 可管理性/ 的/ 基础/ 上/ 才/ 能够/ 完成/ 的/ 复杂/ 路由/ ;/ 真实/ IP地址/ 和/ 动态/ IP/ 则/ 分别/ 对/ 报文/ 的/ 源地址/ 和/ 目的/ 地址/ 的/ 真实/ 有效性/ 进行/ 验证/ ,/ 防止/ 恶意/ 终端/ 通过/ 伪造/ 源地址/ 的/ 方式/ 发起/ 规避/ 追踪/ 的/ 网络攻击/ ,/ 或者/ 对/ 其他/ 终端/ 发起/ 未/ 得到/ 授权/ 的/ 访问/ ./ 关键词/ 地址/ 驱动/ 网络/ ;/ 真实/ IP地址/ ;/ 二维/ 路由/ ;/ 动态/ IP/ ;/ 下一代/ 互联网/ ;/ 互联网/ 体系结构/ 1/ 引言/ 1.1/ IP/ 协议/ 与/ IP地址/ TCP/ // IP/ 架构/ 被/ 广泛/ 认为/ 是/ 互联网/ (/ Internet/ )/ 取得/ 巨大成功/ 的/ 关键/ 原因/ 所在/ ./ 作为/ 协调/ 无限/ 的/ 用户/ 需求/ 和/ 有限/ 的/ 网络资源/ 之间/ 的/ 矛盾/ 的/ 传输/ 协议/ ,/ TCP/ 协议/ 通过/ 其/ 拥塞/ 控制/ 机制/ 实现/ 了/ 全网/ 效率/ 与/ 用户/ 公平性/ 之间/ 的/ 有效/ 折衷/ ./ 作为/ 无/ 连接/ 的/ 分组/ 交换/ 协议/ ,/ IP/ 协议/ 不但/ 实现/ 了/ 网络资源/ 的/ 充分/ 复用/ ,/ 而且/ 可以/ 支持/ 任意/ 类型/ 的/ 应用/ ./ 由于/ IP/ 模型/ 对/ 应用/ 类型/ 不/ 作/ 限定/ ,/ 互联网/ 上/ 的/ 应用/ 创新/ 得以/ 以/ 前所未有/ 的/ 速度/ 发展/ ,/ 大大提高/ 了/ 社会/ 生产力/ 并/ 便利/ 了/ 大众/ 生活/ ./ IP/ 协议/ 的/ 模型/ 主要/ 包括/ 两/ 大部分/ ./ 第一/ 是/ 无/ 连接/ 的/ 分组/ 转发/ 模型/ ./ 与/ 基于/ 电路/ 的/ 交换/ 方式/ 不同/ ,/ 无/ 连接/ 分组/ 转发/ 不用/ 在/ 通信/ 之前/ 建立/ 固定/ 的/ 通信/ 信道/ ,/ 因此/ 也/ 不用/ 把/ 通信/ 信道/ 与/ 特定/ 的/ 会/ 话/ 相关联/ ,/ 从而/ 使得/ 不同/ 的/ 数据/ 分组/ 可以/ 充分/ 复用/ 网络/ 信道/ 资源/ ,/ 并且/ 可以/ 在/ 网络/ 上/ 进行/ 灵活/ 的/ 路由/ ./ 第二/ 是/ 基于/ IP地址/ 的/ 寻址/ 模型/ ./ IP地址/ 是/ IP/ 协议/ 为了/ 统一/ 标识/ 网络层/ 的/ 所有/ 通信/ 实体/ 而/ 引入/ 的/ 命名/ 空间/ ./ 为了/ 实现/ 对/ 异构/ 物理/ 网络/ (/ 如/ 以太网/ 、/ FDDI/ 、/ 令牌环/ 等/ 不同/ 网络/ )/ 的/ 互联/ ,/ 必须/ 有/ 一层/ 与/ 物理/ 网络/ 的/ 链路层/ 技术/ 无关/ 的/ 网络/ 实体/ 命名/ 空间/ ,/ 这/ 也/ 是/ IP地址/ 诞生/ 和/ 存在/ 的/ 根本原因/ 之一/ ./ 当前/ 互联网/ 体系结构/ 非常/ 依赖于/ IP地址/ ,/ 主要/ 表现/ 在/ 两个/ 方面/ ./ 首先/ ,/ 从/ 互联网/ 命名/ 空间/ 来看/ ./ 互联网/ 的/ 主要/ 命名/ 空间/ 包括/ 链路层/ 地址/ (/ 如/ MAC/ 地址/ )/ 、/ IP地址/ 和/ 域名/ ./ 其中/ 链路层/ 地址/ 与/ 传输/ 介质/ 有关/ ,/ 全局/ 通用/ 的/ 命名/ 空间/ 主要/ 是/ IP地址/ 和/ 域名/ ./ IP地址/ 不但/ 用来/ 标识/ 网络接口/ 的/ 位置/ ,/ 而且/ 被/ 用来/ 标识/ 主机/ 的/ 身份/ ,/ 而/ 域名/ 是/ 用/ 一种/ 易于/ 记忆/ 的/ 方式/ 来/ 标识/ 访问/ 对象/ (/ 主机/ 或/ 服务器/ )/ ./ DNS/ (/ 域名解析/ 系统/ )/ 负责/ 把/ 域名解析/ 为/ IP地址/ ./ 可以/ 说/ ,/ IP地址/ 是/ 整个/ 互联网/ 命名/ 空间/ 的/ 核心/ ,/ 也/ 是/ 最/ 不可或缺/ 的/ 命名/ 空间/ ./ 互联网/ 是/ 对/ 大规模/ 主机/ 、/ 服务器/ 和/ 网络设备/ 进行/ 互联/ 的/ 巨大/ 系统/ ,/ 所有/ 通信/ 和/ 访问/ 归根结底/ 需要/ 转化/ 为/ “/ 点到点/ ”/ 的/ 信息/ 传输/ ,/ 而/ IP地址/ 就是/ 对/ 这些/ “/ 点/ ”/ 的/ 全球/ 统一/ 标识/ ./ 其次/ ,/ 从/ 互联网/ 路由/ 转发/ 体系/ 来看/ ./ 互联网/ 路由/ 转发/ 系统/ 主要/ 解决/ 的/ 问题/ 是/ 网络/ 访问/ 的/ “/ 可达性/ ”/ 问题/ ,/ 即/ 如何/ 正确/ 地/ 将/ 数据/ 报文/ 逐跳/ 转发/ 到/ 目的/ 地址/ ./ 为了/ 实现/ 这一/ 目的/ ,/ 必须/ 在/ 报文/ 中/ 携带/ 目的/ IP地址/ ,/ 由/ 中间/ 路由器/ 以/ 查找/ 路由表/ 的/ 方式/ 将/ 数据/ 报文/ 向/ 目的地/ 转发/ ./ 同时/ ,/ 为了/ 使得/ 报文/ 请求/ 的/ 内容/ 能够/ 被/ 正确/ 返回/ 给/ 请求者/ ,/ 报文/ 中/ 还/ 携带/ 了/ 源/ IP地址/ ./ 数据/ 接收/ 方/ 收到/ 报文/ 之后/ ,/ 将/ 目的/ IP地址/ 与源/ IP地址/ 交换/ 位置/ ,/ 返回/ 回复/ 的/ 数据/ 报文/ ./ 而/ 中间/ 路由器/ 的/ 转/ 发表/ 也/ 是/ 以/ IP地址/ 为/ 对象/ 进行/ 构建/ 的/ ./ 1.2/ 当前/ 互联网/ 面临/ 的/ 主要/ 问题/ 当前/ 互联网/ 在/ 许多/ 方面/ 面临/ 新/ 的/ 挑战/ ,/ 从/ 互联网/ 用户/ 的/ 角度看/ ,/ 比较/ 重要/ 的/ 问题/ 包括/ 联网/ IP地址/ 匮乏/ 、/ 服务质量/ 缺乏/ 保障/ 、/ 安全/ 问题/ 日益严重/ 等等/ ./ 下面/ 一一/ 介绍/ ./ (/ 1/ )/ “/ 联网/ ”/ 需求/ 是/ 用户/ 使用/ 互联网/ 最/ 基本/ 的/ 需求/ ./ 如果/ 不能/ 让/ 用户/ 以/ 方便/ 易用/ 的/ 方式/ 连接/ 互联网/ ,/ 其他/ 的/ 问题/ 更/ 无从谈起/ ./ 随着/ 互联网/ 用户数量/ 的/ 飞速/ 增长/ 甚至/ 物/ 联网/ 节点/ 在内/ 的/ “/ 物物/ ”/ 相联/ 的/ 需求/ 出现/ ,/ 传统/ IPv4/ 的/ 地址/ 格式/ 已经/ 无法/ 满足/ 更/ 多/ 互联网/ 用户/ 的/ 接入/ ./ NAT/ 等/ 地址/ 转换/ 设备/ 为/ 互联网/ 引入/ 了/ 许多/ middlebox/ ,/ 破坏/ 了/ 互联网/ 的/ 端/ 到/ 端/ 特性/ ./ 随着/ 32/ 位/ 的/ IPv4/ 地址/ 空间/ 已经/ 分配/ 完毕/ ,/ 采用/ 128/ 位/ 的/ IPv6/ 地址/ 格式/ 进行/ 互联网/ 联网/ 和/ 通信/ ,/ 已经/ 刻不容缓/ ./ (/ 2/ )/ 在/ 基于/ IP/ 模型/ 的/ 互联网/ 体系结构/ 下/ ,/ 并/ 不/ “/ 严格/ ”/ 保证/ 每个/ 数据流/ 的/ 服务质量/ ./ 用户/ 服务质量/ 体验/ 的/ 提升/ ,/ 依靠/ 物理/ 带宽/ 的/ 提升/ 和/ 充分利用/ 物理/ Page3/ 带宽/ 的/ 分组/ 交换/ 技术/ 来/ 保证/ ./ 从/ 体系结构/ 的/ 角度看/ ,/ 路由/ 体系/ 的/ 设计/ 应该/ 在/ 保证/ 可达性/ 的/ 基础/ 上/ ,/ 尽可能/ 充分/ 地/ 利用/ 互联网/ 的/ 网络带宽/ ./ 但/ 由于/ 当前/ 的/ 互联网/ 路由/ 系统/ 是/ 基于/ 目的/ IP地址/ 进行/ “/ 最短/ 路径/ ”/ 路由/ 的/ ,/ 所有/ 到达/ 同一/ 目的地/ 的/ 流量/ 将/ 被/ 聚合/ 到/ 相同/ 的/ 链路/ 上/ ,/ 无法/ 充分利用/ 互联网/ 的/ 丰富/ 链路/ 资源/ ,/ 当/ 存在/ 流量/ 热点/ 使此/ 问题/ 更加/ 明显/ ./ 要/ 实现/ 对/ 网络带宽/ 资源/ 的/ 均衡/ 使用/ ,/ 需要/ 设计/ 粒度/ 更细/ 的/ 路由/ 方式/ ./ 此外/ ,/ 随着/ 互联网/ 已/ 成为/ 公众/ 基础设施/ ,/ 对/ 不同/ 的/ 应用/ 、/ 不同/ 的/ 用户/ 进行/ 区分/ 路由/ ,/ 也/ 是/ 提高/ 服务质量/ 的/ 一种/ 方式/ ./ (/ 3/ )/ 安全/ 问题/ 是/ 互联网/ 长期存在/ 且/ 广受/ 关注/ 的/ 问题/ ./ 当前/ 的/ 互联网安全/ 解决方案/ ,/ 大多/ 是/ 针对/ 不同/ 的/ 网络应用/ 或/ 网络/ 场景/ 下/ 的/ 安全/ 攻击行为/ 而/ 设计/ ./ 但/ 本质/ 上/ 讲/ ,/ 与/ 人类/ 社会/ 一样/ ,/ 网络攻击/ 行为/ 是/ 难以/ 从根本上/ 杜绝/ 的/ ./ 从/ 互联网/ 体系结构/ 的/ 角度看/ ,/ 实现/ IP地址/ 的/ 可/ 信任/ ,/ 并且/ 尽可能/ 降低/ 网络/ 被/ 攻击/ 的/ 概率/ ,/ 是/ 实现/ 安全/ 可信/ 互联网/ 的/ 通用/ 技术/ ./ 保证/ 源/ IP地址/ 的/ 真实性/ ,/ 从而/ 互联网/ 上/ 每个/ 数据包/ 都/ 有/ “/ 责任人/ ”/ ,/ 使得/ 任何/ 互联网/ 攻击行为/ 都/ 可追溯/ ,/ 是/ 对/ 网络攻击/ 行为/ 进行/ 震慑/ 和/ 追查/ 的/ 重要/ 手段/ ./ IPv6/ 的/ 巨大/ 地址/ 空间/ 也/ 使得/ 我们/ 能够/ 对/ 主机/ 和/ 路由器/ 分配/ 一个/ 巨大/ 的/ 地址/ 空间/ 前缀/ ,/ 如果/ 能/ 让/ 主机/ 或/ 路由器/ 的/ 具体/ IP地址/ 在/ 这个/ 大/ 地址/ 前缀/ 下/ 进行/ 动态变化/ ,/ 那么/ 将/ 可以/ 极大/ 地/ 保护/ 主机/ 和/ 路由器/ 的/ IP地址/ 隐私/ ,/ 减少/ 主机/ 和/ 路由器/ 地址/ 泄漏/ 的/ 机会/ (/ 因为/ 在/ 巨大/ IP地址/ 前缀/ 空间/ 中/ 进行/ 地址/ 扫描/ 的/ 成本/ 非常/ 高/ )/ ,/ 降低/ 被/ 攻击/ 或/ 被/ 控制/ 为/ 僵尸/ 网络/ 的/ 风险/ ./ (/ 4/ )/ 移动/ 通信/ 过程/ 中/ IP地址/ 切换/ 带来/ 的/ 通信/ 中断/ 问题/ ,/ 一直/ 是/ IP/ 模型/ 面临/ 的/ 主要/ 挑战/ 之一/ ./ 在/ 互联网/ 体系结构/ 中/ ,/ IP地址/ 事实上/ 承载/ 了/ 多重/ 语义/ ,/ 既/ 被/ 用来/ 标识/ 主机/ 身份/ ,/ 又/ 被/ 用来/ 标识/ 主机/ 位置/ ./ 在/ 移动/ 过程/ 中/ ,/ 主机/ 的/ 位置/ 发生/ 了/ 变化/ ,/ 而/ 身份/ 并未/ 改变/ ./ 如果/ 用/ 同一个/ IP地址/ 来/ 作为/ 主机/ 身份/ 和/ 位置/ 标识/ ,/ 必然/ 会/ 引起/ TCP/ 连接/ 中断/ ./ 但/ 在/ IPv6/ 地址/ 提供/ 的/ 巨大/ 空间/ 中/ ,/ 可以/ 把/ 部分/ IP地址/ 块/ 用来/ 固定/ 作为/ 主机/ 身份/ 标识/ ,/ 而/ 部分/ IP地址/ 块/ 可以/ 用来/ 固定/ 作为/ 主机/ 位置/ 标识/ ./ 在/ 主机/ 位置/ 移动/ 之后/ ,/ 只是/ 作为/ 主机/ 位置/ 标识/ 的/ IP地址/ 发生/ 了/ 改变/ ,/ 而/ 主机/ 身份/ 标识/ 并未/ 改变/ ./ 这样/ ,/ 我们/ 在/ 不/ 引入/ 新/ 的/ 命名/ 空间/ 的/ 前提/ 下/ ,/ 避免/ 主机/ 移动/ 过程/ 中/ 的/ TCP/ 连接/ 中断/ 问题/ ./ 1.3/ 从/ “/ 地址/ ”/ 入手/ 解决/ 互联网/ 面临/ 的/ 问题/ 基于/ 以上/ 分析/ ,/ 当前/ 互联网/ 面临/ 的/ 一系列/ 问题/ ,/ 从/ 本质/ 上/ 讲/ ,/ 大多/ 与/ “/ IP地址/ ”/ 的/ 管理/ 和/ 使用/ 方法/ 有关/ ./ 事实上/ ,/ 对于/ 任何/ 一个/ 分布式/ 复杂/ 巨/ 系统/ ,/ 其/ 命名/ 和/ 寻址/ 问题/ 都/ 是/ 一大/ 根本性/ 难题/ ;/ 而/ 由于/ 互联网/ 已经/ 广泛/ 服务/ 于/ 大众/ 生活/ ,/ 这一/ 问题/ 显得/ 尤为/ 突出/ ./ 任何/ 试图/ 解决/ 互联网/ 面临/ 问题/ 的/ 体系/ 架构/ 和/ 技术/ ,/ 从根本上/ 讲/ ,/ 最终/ 都/ 需要/ 落地/ 到/ 围绕/ “/ IP地址/ ”/ 的/ 一系列/ 问题/ :/ 地址/ 空间/ 的/ 扩展/ 和/ 管理/ 、/ 地址/ (/ 及其/ 所/ 表示/ 身份/ )/ 的/ 安全性/ 和/ 隐私/ 性/ 、/ 以/ 地址/ 为/ 标识/ 进行/ 高效/ 的/ 路由/ 、/ 地址/ 的/ 移动/ 等等/ ./ 针对/ 互联网/ 面临/ 的/ 以上/ 问题/ ,/ 我们/ 从/ IP地址/ 的/ 使用/ 和/ 管理/ 着手/ ,/ 提出/ 了/ “/ 地址/ 驱动/ 的/ 互联网/ 体系结构/ (/ ADN/ )/ ”/ ./ 2/ 相关/ 工作/ 下面/ 介绍/ 最近/ 几年/ 受/ 关注/ 较/ 多/ 的/ 国际/ 上/ 的/ 一些/ 新型/ 网络体系结构/ 研究/ ,/ 主要/ 包括/ 美国/ NSF/ 资助/ 的/ 下一代/ 互联网/ 项目/ 以及/ 软件/ 定义/ 网络/ (/ SoftwareDefinedNetworking/ ,/ SDN/ )/ ./ 2.1/ NDNNDN/ (/ NamedDataNetworking/ )/ [/ 1/ ]/ 认为/ ,/ 传统/ 的/ 面向/ 主机/ 地址/ 的/ 通信/ 方式/ 已经/ 越来越/ 不能/ 满足/ 丰富/ 的/ 应用/ 需求/ ,/ 同时/ 面临/ 着/ 严重/ 的/ 可扩展性/ 问题/ 和/ 安全/ 问题/ ./ 因此/ NDN/ 改变/ 网络/ 沙漏/ 结构/ 中以/ IP地址/ 为/ 核心/ 的/ 设计/ 方法/ ,/ 将/ 数据/ 的/ 名称/ 标签/ 代替/ IP/ 作为/ 网络体系结构/ 的/ 核心层/ ,/ 即/ “/ 窄/ 腰/ 结构/ ”/ ./ 用户/ 在/ 网络/ 上/ 的/ 数据通信/ 不再/ 以/ “/ 点对点/ ”/ 的/ 方式/ 进行/ ,/ 而是/ 以/ 数据/ 内容/ 为/ 核心/ 来/ 进行/ ./ 用户/ 只用/ 想要/ 什么/ 数据/ ,/ 而/ 不用/ 关心/ 数据/ 在/ 哪里/ ./ NDN/ 把/ 数据传输/ 过程/ 分为/ “/ 请求/ ”/ 和/ “/ 响应/ ”/ 两个/ 阶段/ [/ 2/ ]/ ./ 通讯/ 是/ 通过/ 接受方/ 主动/ 发出请求/ 来/ 完成/ 的/ ./ 在/ 发起/ 请求/ 的/ Interest/ 包中/ 包含/ 有所/ 请求/ 数据/ 的/ 名称/ ./ 而/ 路由器/ 会/ 根据/ 转/ 发表/ 中/ 对应/ 名称/ (/ 或者/ 最长/ 匹配/ 前缀/ )/ 的/ 接口/ 来/ 转发/ 请求/ ./ 一旦/ 找到/ 了/ 所/ 请求/ 的/ 内容/ ,/ 会/ 沿着/ 转发/ 的/ 路径/ 返回/ 内容/ 报文/ ./ 为了/ 提高效率/ ,/ 路由器/ 会/ 维护/ 一个/ 最近/ 转发/ 的/ 请求/ 列表/ 和/ 转发/ 数据/ 缓存/ ./ 如果/ 收到/ 的/ 请求/ 存在/ 于/ 请求/ 列表/ 中/ ,/ 路由器/ 不会/ 重复/ 转发/ 请求/ ,/ 而是/ 在/ 之前/ 发出/ 的/ 相同/ 请求/ 得到/ 响应/ 后/ 一并/ 发送数据/ ./ NDN/ 对于/ 传统/ 网络层/ 结构/ 的/ 颠覆性/ 改变/ ,/ 虽然/ 为/ 适应/ 其/ 应用/ 模式/ 的/ 上层/ 应用/ 提供/ 了/ 便利/ ,/ 但/ 也/ 存在/ 一定/ 的/ 问题/ ./ 一方面/ ,/ NDN/ 是/ 改变/ 了/ 当前/ IP/ 网络/ 无/ 连接/ 的/ 转发/ 结构/ ,/ 加重/ 了/ 交换机/ 和/ 路由器/ 的/ 负担/ ,/ Page4/ 在/ 大规模/ 部署/ 的/ 扩展性/ 方面/ 有待/ 验证/ ;/ 另一方面/ ,/ NDN/ 对于/ 围绕/ 点对点/ 通讯/ 模式/ 设计/ 的/ 现有/ 应用/ 来说/ ,/ 其/ 全新/ 的/ 通讯/ 模式/ 需要/ 后者/ 花费/ 相当/ 多/ 的/ 时间/ 和/ 精力/ 来/ 适应/ ,/ 其/ 部署/ 的/ 渐进性/ 受到/ 挑战/ ./ 2.2/ MobilityFirstMobilityFirst/ [/ 3/ ]/ 主要/ 解决/ 互联网/ 的/ 移动性/ 问题/ ./ MobilityFirst/ 项目/ 认为/ ,/ 传统/ IP/ 网络结构/ 下/ 的/ 路由/ 是/ 通过/ 最长/ 前缀/ 匹配/ 的/ 方式/ 来/ 进行/ 的/ ,/ 而/ 当/ 移动/ 终端/ 切换/ 位置/ 时/ ,/ 为了/ 继续/ 保证/ 通讯/ 能够/ 继续/ 进行/ ,/ 只能/ 在/ 所/ 需要/ 经过/ 的/ 路由器/ 上/ 加入/ 新/ 的/ 路由/ 项/ ,/ 或者/ 为/ 终端/ 分配/ 新/ 的/ 路由/ 地址/ ./ 但/ 这些/ 现有/ 的/ 方案/ 都/ 不能/ 提供/ 较/ 好/ 的/ QoS/ 保证/ ,/ 也/ 影响/ 了/ 网络/ 的/ 可扩展性/ ./ MobilityFirst/ 的/ 主要/ 思想/ 是/ ,/ 今后/ 的/ 互联网/ 中/ ,/ 移动/ 平台/ 必将/ 取代/ 固定/ 终端/ // 服务器/ 应用/ 成为/ 最/ 主要/ 的/ 接入/ 设备/ ./ 同时/ 移动/ 应用/ 的/ 模式/ 也/ 会/ 有/ 更/ 全面/ 的/ 发展/ ,/ 从以/ 手机/ 和/ 笔记本/ 移动/ 应用/ 为/ 主流/ 的/ 现状/ 发展/ 到/ 移动/ 传感器/ 、/ 车载/ 移动/ 设备/ 等/ 方向/ ./ 因此/ ,/ 下一代/ 互联网/ 体系结构/ 的/ 设计/ 必须/ 要/ 以/ 可/ 移动性/ 作为/ 最/ 主要/ 的/ 考虑/ 因素/ ./ 在/ 覆盖率/ 、/ 服务/ 稳定性/ 和/ 可靠性/ 等/ 要求/ 得到/ 满足/ 的/ 前提/ 下/ ,/ MobilityFirst/ 将/ 架构设计/ 的/ 主要/ 目标/ 总结/ 为/ 以下/ 6/ 点/ :/ 终端/ 和/ 网络/ 的/ 可/ 移动性/ 、/ 不/ 需要/ 以/ 单个/ 固定/ 的/ 可信/ 根/ 节点/ 作为/ 基础/ 、/ 传输/ 必须/ 符合/ 策略/ 要求/ 、/ 必须/ 具备/ 拜占庭/ 鲁棒性/ 、/ 网络/ 上/ 的/ 内容/ 必须/ 可以/ 寻址/ 和/ 同时/ 对/ 可能/ 产生/ 的/ 新/ 应用/ 要/ 有/ 兼容性/ ./ 2.3/ NebulaNebula/ [/ 4/ ]/ 主要/ 解决/ 互联网/ 如何/ 适应/ 云/ 计算/ 模式/ 的/ 问题/ ./ Nebula/ 项目/ 认为/ ,/ 云/ 计算/ 应用/ 的/ 诞生/ 和/ 日益/ 推广/ ,/ 实现/ 数十年/ 来/ 计算机/ 工作者/ 的/ 一个/ 梦想/ :/ 让/ 计算/ 就/ 像/ 电话/ 系统/ 那样/ 时刻/ 在线/ ,/ 可以/ 满足/ 多种/ 服务/ 需求/ ,/ 同时/ 还要/ 与时俱进/ ,/ 适应/ 未来/ 所有/ 可能/ 出现/ 的/ 新/ 的/ 应用/ ./ 这种/ 新/ 的/ 应用/ 模式/ 在/ 经济效益/ 、/ 节能/ 、/ 安全/ 和/ 统一/ 管理/ 方面/ 都/ 体现/ 了/ 其/ 优势/ ./ 然而/ 云/ 计算/ 依然/ 缺乏/ 一个/ 有效/ 支持/ 的/ 网络/ 架构/ ./ Nebula/ 的/ 主要/ 设计/ 目标/ 是/ 一个/ 能够/ 更好/ 地/ 符合/ 云/ 计算/ 需求/ 的/ 下一代/ 互联网/ 体系/ 架构/ ./ 这个/ 网络/ 架构/ 除了/ 需要/ 在/ 解决/ 现有/ 网络/ 架构/ 的/ 安全性/ 、/ 移动性/ 等/ 问题/ 以外/ ,/ 还/ 必须/ 满足/ 数据中心/ 网络/ 的/ 高带宽/ 低/ 延时/ 等/ 特点/ ./ 这个/ 架构/ 本身/ 必须/ 具备/ 安全性/ 、/ 灵活性/ 和/ 可扩展性/ ,/ 以及/ 对/ 多种/ 策略/ 机制/ 的/ 包容性/ 等等/ ./ 未来/ 的/ 云/ 计算/ 系统/ 要/ 能/ 应对/ 现有/ 的/ 和/ 即将/ 出现/ 的/ 网络/ 威胁/ ,/ 支持/ 不断更新/ 的/ 应用/ 模式/ ,/ 同时/ 在/ 分配/ 上/ 还要/ 做到/ 可以/ 兼顾/ 技术/ 可行性/ 、/ 经济效益/ 和/ 其他/ 规章制度/ ./ Nebula/ 的/ 设计/ 和/ 实现/ 主要/ 包含/ 3/ 个/ 部分/ :/ 网络层/ 协议/ NDP/ 和/ 对应/ 的/ 报头/ 格式/ 、/ 可/ 扩展/ 的/ 控制策略/ NVENT/ 以及/ 高速/ 核心/ 路由器/ NCore/ ./ NDP/ 报头/ 的/ 设计/ 加入/ 了/ 进行/ 路由/ 验证/ 所/ 可能/ 需要/ 的/ 所有/ 信息/ ,/ 并/ 使用/ 类似/ MPLS/ 标签/ 的/ 结构/ 提供/ 了/ 多条/ 备选/ 路径/ ./ 当/ 终端/ 需要/ 开始/ 通信/ 时/ ,/ NDP/ 会/ 将/ 路径/ 查询/ 需求/ 和/ 参数/ 一并/ 发送给/ NVENT/ ,/ 而/ NVENT/ 会/ 通过/ 一个/ 类似/ BGP/ 的/ 协议/ 来/ 找到/ 一条/ 或者/ 多条/ 拓扑/ 和/ 协商/ 策略/ 上/ 都/ 可行/ 的/ 路径/ ,/ 并且/ 连同/ 需要/ 经过/ 的/ 域/ 的/ 授权/ 证明/ 一并/ 返回/ 给/ NDP/ ./ 这样/ ,/ 在/ 经过/ 每个/ 域时/ ,/ 都/ 可以/ 对/ 当前/ 流/ 经过/ 自己/ 的/ 合法性/ 进行/ 验证/ ./ 然而/ 在/ 大规模/ 的/ 云/ 计算/ 系统/ 下/ ,/ 普通/ 的/ 路由器/ CPU/ 可能/ 无法/ 负载/ 顶级/ ISP/ 所/ 需要/ 处理/ 的/ 流量/ ./ 为了/ 支持/ 所/ 设计/ 的/ 协议/ ,/ NEBULA/ 还/ 开发/ 了/ 高可用性/ 核心/ 路由器/ NCore/ ./ 2.4/ XIAXIA/ [/ 5/ ]/ 项目/ 认为/ ,/ 未来/ 网络体系结构/ 的/ 设计/ 依然/ 需要/ 延续/ 沙漏/ 结构/ ,/ 但是/ 将/ 以/ 新/ 的/ 要素/ 作为/ 中心/ ./ 许多/ 设计/ 根据/ 需求/ 将/ 内容/ 、/ 服务/ 或是/ 用户/ 等/ 要素/ 取代/ IP/ 作为/ 新/ 体系结构/ 的/ 中心/ ,/ 之前/ 提到/ 的/ NDN/ 就是/ 一例/ ./ 这些/ 架构/ 在/ 自己/ 面向/ 的/ 应用/ 模式/ 上/ 都/ 能/ 达到/ 很/ 高/ 的/ 效率/ ,/ 因此/ 都/ 有/ 自己/ 的/ 可取之处/ ,/ 但/ 在/ 其他/ 应用/ 模式/ 上/ 则/ 难以/ 发挥作用/ ,/ 因此/ 没有/ 一个/ 有/ 充分/ 的/ 优势/ 可以/ 取代/ 其他/ 的/ 架构/ 成为/ 互联网/ 的/ 主宰/ ./ XIA/ 的/ 主要/ 设计/ 目的/ 是/ ,/ 能够/ 像/ 今天/ 的/ 基于/ IP/ 的/ 互联网/ 体系结构/ 一样/ 完美/ 地/ 承载/ 和/ 过渡/ 到/ 上面/ 这些/ 面向/ 各种/ 中心/ 设计/ 的/ 架构/ ,/ 适应/ 不同/ 的/ 应用/ 模式/ ,/ 同时/ 克服/ 传统/ 网络体系结构/ 下/ 可扩展性/ 和/ 安全性/ 等/ 方面/ 的/ 问题/ ./ 为了/ 达成/ 这一/ 目标/ ,/ XIA/ 从/ 更/ 广泛/ 的/ 层面/ 上/ 定义/ 了/ 一个/ 要素/ 作为/ 整个/ 网络结构/ 的/ 核心/ ,/ 而/ 实际/ 通讯/ 应用/ 可以/ 根据/ 自己/ 的/ 需求/ 将/ 这个/ 要素/ 指定/ 为/ 具体/ 的/ 一个/ 或者/ 多个/ 实例/ ,/ 例如/ 内容/ 、/ 服务/ 等等/ ,/ 只要/ 这些/ 实例/ 符合/ XIA/ 提出/ 的/ 可/ 表达/ 性/ 、/ 可扩展性/ 和/ 安全性/ 三大/ 要求/ ,/ 从而/ 实现/ 对于/ 多种不同/ 中心/ 架构/ 的/ 网络协议/ 的/ 支持/ ./ 在/ 路由/ 方面/ ,/ XIA/ 用/ 表达/ 型/ 互联网/ 路由/ 协议/ XIP/ 取代/ 了/ 现有/ 的/ IP/ 路由/ 协议/ ,/ 定义/ 了/ 报头/ 的/ 格式/ 和/ 如何/ 对/ 用户/ 指定/ 的/ 实例/ 进行/ 操作/ ./ XIA/ 支持/ 在/ 同一个/ 网络/ 中/ 采用/ 多个/ 实例/ ,/ 并且/ 在/ 每个/ 路由/ 节点/ 都/ 根据/ 得到/ 用户/ 描述/ 的/ 实例/ 信息/ 来/ 进行/ 选路/ ./ 尽管/ XIA/ 给/ 网络/ 在/ 可扩展性/ 和/ 安全性/ 上/ 可以/ 带来/ 显著/ 的/ 改善/ ,/ 但/ 代价/ 却是/ 采用/ 了/ 相对/ 于/ 今天/ 基/ Page5/ 于/ IP/ 的/ 互联网/ 架构/ 差别/ 较大/ 的/ 基于/ 语义/ 标签/ 的/ 路由/ 模式/ ./ 因此/ ,/ XIA/ 想要/ 融入/ 互联网/ 的/ 实际/ 应用/ ,/ 若非/ 在/ 短时间/ 内/ 得到/ 大/ 范围/ 部署/ ,/ 就/ 必须/ 构建/ 在/ 覆盖/ 网络/ 之上/ ./ 无论是/ 通过/ 何种/ 方式/ 实现/ ,/ XIA/ 和/ 现有/ 网络/ 的/ 兼容性/ 是/ 不够/ 的/ ./ 因此/ 实际/ 推行/ 过程/ 中要/ 如何/ 兼容/ 现有/ 的/ 网络/ 模式/ 和/ 应用/ ,/ 保持/ 和/ 未/ 部署/ 地区/ 之间/ 的/ 互联/ ,/ 是/ XIA/ 难以解决/ 的/ 问题/ ./ 2.5/ SDNSDN/ [/ 6/ ]/ 的/ 倡导者/ 们/ 认为/ ,/ 当前/ 互联网/ 设备/ 的/ 实现/ 方式/ 是/ 封闭式/ 和/ 分布式/ 的/ ,/ 造成/ 控制协议/ 过于/ 复杂/ ,/ 路由器/ 的/ 软件设计/ 开销/ 太/ 大/ ,/ 不但/ 增加/ 了/ 路由器/ 的/ 成本/ 、/ 限制/ 了/ 更/ 灵活/ 的/ 路由/ 和/ 传输/ 策略/ ,/ 而且/ 无法/ 向/ 上层/ 应用/ 开放/ 网络/ 功能/ ./ 因此/ ,/ SDN/ 提出/ 把/ 控制/ 层面/ 和/ 转发/ 层面/ 分离/ ,/ 通过/ 在/ 一个/ 集中式/ 的/ 控制器/ (/ Controller/ )/ 上来/ 实现/ 更/ 灵活/ 的/ 路由/ 策略/ 计算/ ,/ 并/ 把/ 结果/ 通过/ 标准/ 的/ 通信协议/ 配置/ 到/ 路由器/ // 交换机/ 上/ ./ SDN/ 体系/ 架构/ 主要/ 包括/ 3/ 个/ 方面/ ,/ 即/ 控制器/ 、/ 路由器/ // 交换机/ 转发/ 层面/ 以及/ 控制器/ 和/ 路由器/ // 交换机/ 之间/ 的/ 通信/ 机制/ ./ SDN/ 的/ 优点/ 是/ 把/ 控制/ 层面/ 从/ 传统/ 路由器/ 中/ 剥离/ 出来/ ,/ 使得/ 研究/ 人员/ 或者/ 运营商/ 能/ 更/ 灵活/ 地/ 配置/ 和/ 控制/ 路由/ ,/ 并/ 降低/ 了/ 路由器/ 本身/ 的/ 复杂性/ 和/ 成本/ ./ 此外/ ,/ 将/ 网络/ 功能/ 开放/ 给/ 上层/ 应用/ ,/ 使得/ 网络/ 管理者/ 可以/ 按照/ 自身/ 需求/ 对/ 网络/ 功能/ 进行/ 按/ 需/ 编程/ ./ 从/ 本质/ 上/ 而言/ SDN/ 实际上/ 是/ 一种/ 技术手段/ ,/ 而/ 非/ 网络/ 架构/ ./ 近些年来/ 集中/ 在/ SDN/ 上/ 的/ 研究/ 虽然/ 很多/ ,/ 但/ 大多/ 都/ 是/ 解决/ 网络/ 中/ 一些/ 局部性/ 或者/ 针对性/ 较强/ 的/ 问题/ ./ 同时/ ,/ SDN/ 集中控制/ 的/ 属性/ 也/ 有碍于/ 跨域/ 部署/ ,/ 其/ 应用/ 更/ 多/ 局限于/ 域/ 内/ 或者/ 企业级/ 数据中心/ 等/ 局域网/ 环境/ 中/ ./ 3ADN/ 体系结构/ 3.1/ IP地址/ 的/ 属性/ IP地址/ 具有/ 多重/ 属性/ ,/ 包括/ 长度/ 属性/ 、/ 逻辑/ 属性/ 、/ 拓扑/ 属性/ 、/ 空间/ 属性/ 、/ 时间/ 属性/ 、/ 所有者/ 属性/ 等/ ./ 下面/ 将作/ 一一/ 叙述/ ./ 长度/ 属性/ 的/ 含义/ 非常简单/ ,/ 即/ IP地址/ 的/ 比特/ 位/ 长度/ ,/ 它/ 意味着/ IP地址/ 可以/ 标识/ 的/ 物理/ 或/ 逻辑/ 实体/ 的/ 数量/ ./ 逻辑/ 属性/ 指/ 的/ 是/ IP地址/ 的/ 逻辑/ 含义/ ./ 在/ 一般/ 情况/ 下/ ,/ IP地址/ 表达/ 一个/ 网络接口/ 在/ 巨大/ 网络空间/ 中/ 的/ 位置/ ./ 在/ 现有/ 的/ 传输/ 协议/ (/ 如/ TCP/ )/ 设计/ 中/ ,/ IP地址/ 也/ 用来/ 标识/ 一个/ 终端/ 的/ 身份/ ,/ 即/ 传输层/ 会话/ 的/ 连接/ 实体/ ./ 在/ 组播/ 通信/ 中/ ,/ IP地址/ 还/ 被/ 用来/ 作为/ 一组/ 会话/ 的/ 逻辑/ 标识/ ,/ 即/ 表示/ 一个组/ 播组/ (/ 或者说/ 一组/ 数据/ 发送者/ 和/ 数据/ 接收者/ 的/ 集合/ )/ ./ 事实上/ ,/ 我们/ 还/ 可以/ 对/ IP地址/ 进行/ 更加/ 灵活/ 的/ 使用/ 以/ 支持/ 更加/ 丰富/ 的/ 逻辑/ 语义/ ./ 拓扑/ 属性/ 指/ 的/ 是/ IP地址/ 所/ 标识/ 的/ 网络接口/ 在/ 整个/ 网络拓扑/ 中/ 的/ 层次化/ 位置/ ./ 由于/ 互联网/ 拓扑/ 结构/ 是/ 层次化/ 的/ ,/ 每个/ IP地址/ 都/ 表示/ 其/ 在/ 全球/ 互联网/ 拓扑/ 中/ 的/ 特定/ 位置/ ./ 这个/ 特定/ 位置/ 决定/ 了/ 任意/ 两个/ IP地址/ 之间/ 的/ 路由/ 路径/ 、/ 路由/ 跳数/ (/ 而/ 不/ 一定/ 是/ 物理/ 距离/ 远近/ )/ 、/ 传输/ 延迟/ 等/ 性质/ ./ 空间/ 属性/ 指/ 的/ 是/ 一个/ IP地址/ 表示/ 的/ 网络接口/ 所在/ 的/ 物理/ 空间/ ,/ 可以/ 用/ 经纬度/ 来/ 表示/ ./ IP地址/ 的/ 空间/ 属性/ 可以/ 为/ 很多/ 在线/ 服务/ 提供/ 支持/ ,/ 比如/ 与/ 地理位置/ 有关/ 的/ 广告/ 、/ 天气预报/ 等等/ ./ 也/ 有/ 研究/ 人员/ 利用/ IP地址/ 的/ 空间/ 特性/ 提出/ “/ 地理位置/ 路由/ ”/ (/ GeographicalRouting/ )/ [/ 7/ ]/ ./ 时间/ 属性/ 是/ 指/ 一个/ IP地址/ 的/ 时间/ 有效性/ ./ IP地址/ 是/ 由/ “/ 国际域名/ 与/ IP地址/ 管理机构/ ”/ ICANN/ 统一/ 进行/ 分配/ 的/ ./ 从/ 分配/ 的/ 那/ 一刻起/ ,/ IP地址/ 就/ 开始/ 有效/ ,/ 但/ 目前/ IP地址/ 的/ 回收/ 很少/ 进行/ ./ 但/ 对/ 某/ 一个/ 具体/ 的/ 主机/ 而言/ ,/ 如果/ 通过/ DHCP/ 协议/ 得到/ 动态分配/ 的/ IP地址/ ,/ 则/ 其/ IP地址/ 的/ 生命周期/ 就是/ 被/ DHCP/ 协议/ 分配/ 地址/ 到/ 主机/ 下线/ 这/ 段时间/ ./ 所有者/ 属性/ 是/ 指/ IP地址/ 的/ 所有者/ ./ 当前/ 互联网/ 是/ 一个/ 全球/ 分布式/ 巨/ 系统/ ,/ 由/ 许多/ 运营商/ 通过/ 自治/ 域/ 的/ 形态/ 分别/ 运营/ ./ 一旦/ 一个/ IP地址/ (/ 段/ )/ 被/ 分配/ 成功/ ,/ 从/ 管理/ 角度/ 而言/ 其/ 所有者/ (/ 某个/ 运营商/ ,/ 或/ 某个/ 机构/ ,/ 或/ 某个/ 终端用户/ )/ 就是/ 确定/ 的/ ./ 3.2/ 地址/ 驱动/ 网络/ 架构/ 经过/ 研究/ ,/ 我们/ 认为/ 当前/ 互联网/ 体系结构/ 并未/ 充分利用/ IP地址/ 的/ 多重/ 属性/ ./ 具体/ 而言/ ,/ 对/ IP地址/ 的/ 拓扑/ 属性/ 使用/ 较为/ 充分/ [/ 8/ ]/ (/ 主要/ 用于/ 路由/ 转发/ 体系/ )/ ,/ 对/ IP地址/ 的/ 长度/ 属性/ 预计/ 不足/ (/ 已/ 提出/ IPv6/ 协议/ 解决/ 这一/ 问题/ )/ ,/ 对/ IP地址/ 的/ 逻辑/ 属性/ 有/ 一定/ 程度/ 的/ 使用/ 但/ 并/ 不/ 充分/ (/ 主要/ 是/ 用/ IP地址/ 来/ 表示/ 组播/ 会/ 话/ 、/ 广播/ 通信/ 等/ )/ ,/ 对/ IP地址/ 的/ 所有者/ 属性/ 、/ 时间/ 属性/ 、/ 空间/ 属性/ 等/ 利用/ 并/ 不/ 充分/ ./ 而/ 对/ IP地址/ 多重/ 属性/ 的/ 开发/ 和/ 使用/ ,/ 是/ 解决/ 当前/ 互联网/ 面临/ 问题/ 的/ 重要/ 手段/ 之一/ ./ 如图/ 1/ 所示/ ,/ 地址/ 驱动/ 网络/ ADN/ (/ AddressDrivenNetwork/ )/ 的/ 核心思想/ ,/ 就是/ 通过/ 对/ IP地址/ 属性/ 的/ 高效/ 灵活/ 使用/ ,/ 来/ 解决/ 当前/ 互联网/ 面临/ 的/ 主要/ 挑战/ ./ ADN/ 并未/ 改变/ 互联网/ 的/ 五层/ (/ 七层/ )/ 体系结构/ ,/ 但/ 对/ Page6/ 图/ 1ADN/ 体系结构/ 示意/ 网络层/ IP地址/ 的/ 使用/ 、/ 管理/ 以及/ 基于/ IP地址/ 的/ 路由/ 和/ 安全/ 隐私/ 机制/ 进行/ 了/ 大大/ 增强/ ./ IPv6/ 提供/ 的/ 巨大/ IP地址/ 空间/ 是/ ADN/ 的/ 基础/ ./ ADN/ 体系结构/ 包含/ 的/ 关键技术/ 阐述/ 如下/ :/ (/ 1/ )/ 把/ IP地址/ 空间/ 分解/ 为/ 身份/ IP地址/ 空间/ 和/ 位置/ IP地址/ 空间/ ./ IPv6/ 提供/ 了/ 2128/ 大小/ 的/ 地址/ 空间/ ./ 在/ 可以/ 预见/ 的/ 未来/ 互联网/ 环境/ 下/ ,/ IP地址/ 的/ 总/ 数量/ 是/ 远远/ 大于/ 实际/ 可/ 联网/ 的/ 节点/ 数量/ 的/ ./ 因此/ 可以/ 预见/ ,/ 在/ 未来/ 我们/ 不仅/ 不用/ 担忧/ IP地址/ 空间/ 不足/ 带来/ 可扩展性/ 问题/ ,/ 甚至/ 可以/ 去/ 达成/ 之前/ 的/ 网络/ 架构/ 中受/ 地址/ 空间/ 所限所/ 不能/ 达成/ 的/ 目的/ ./ 具体来说/ ,/ 在/ IPv6/ 下/ 提供/ 的/ 128/ 位/ 大小/ 的/ 地址/ 空间/ 中/ ,/ 我们/ 只/ 需要/ 利用/ 前/ 64/ 位/ 地址/ 空间/ 就/ 可以/ 完美/ 地/ 完成/ 路由/ 的/ 工作/ ,/ 同时/ 还/ 能/ 保证/ IP地址/ 具有/ 相当/ 丰富/ 的/ 拓扑/ 属性/ 和/ 空间/ 属性/ 等/ ./ 那么/ ,/ 我们/ 完全/ 可以/ 自由/ 利用/ 剩下/ 的/ 64/ 位/ 空间/ 去/ 实现/ 更加/ 丰富/ 的/ 语义/ ./ 例如/ ,/ 我们/ 可以/ 将/ IP地址/ 后/ 64/ 位/ 作为/ 每个/ 节点/ 的/ 身份/ 标识/ ,/ 和/ 64/ 位/ 前缀/ 构成/ 的/ 位置/ 标识/ 可能/ 随着/ 节点/ 的/ 移动/ 而/ 改变/ 不同/ ,/ 身份/ 标识/ 在/ 节点/ 的/ 生命周期/ 不会/ 轻易/ 改变/ ./ 这/ 就/ 可以/ 为/ 节点/ 的/ 平滑/ 移动/ 提供/ 一定/ 的/ 支持/ ./ (/ 2/ )/ 保证/ 源/ IP地址/ 的/ 真实性/ ./ 把/ 每个/ 分组/ 的/ 源/ IP地址/ (/ 前缀/ )/ 作为/ 其/ 责任人/ ./ 当/ 互联网/ 攻击行为/ 或/ 危害/ 安全/ 的/ 行为/ 发生/ 时/ ,/ 通过/ 真实/ 源/ IP地址/ 追溯到/ 责任人/ ;/ 同时/ ,/ 通过/ 端口/ 过滤/ 及时/ 将/ 伪造/ 了/ 源地址/ 的/ 报文/ 阻断/ 在/ 互联网/ 的/ 入口处/ ./ 保证/ 源/ IP地址/ 的/ 真实性/ 非常/ 重要/ ./ 在/ 子网/ 内/ ,/ 通过/ 将源/ IP地址/ 与/ 交换机/ 端口/ 绑定/ ,/ 避免/ 源地址/ 假冒/ 现象/ 发生/ [/ 9/ ]/ ./ 在/ 自治/ 域/ 之间/ ,/ 通过/ 建立/ 信任/ 联盟/ ,/ 避免/ 假冒/ 其他/ 自治/ 域源/ IP地址/ 的/ 分组/ ./ 这一/ 技术/ 主要/ 利用/ IP地址/ 的/ 所有者/ 属性/ ./ (/ 3/ )/ 基于/ 源/ IP地址/ 和/ 目的/ IP地址/ 进行/ “/ 二维/ ”/ 路由/ 转发/ [/ 10/ -/ 11/ ]/ ./ 路由器/ 对/ 数据包/ 进行/ 路由/ 转发/ 时/ ,/ 不/ 只/ 考虑/ 目的/ IP地址/ ,/ 还/ 考虑/ 源/ IP地址/ ./ 这样/ ,/ 通往/ 同一个/ 目的/ IP地址/ 的/ 来自/ 于/ 不同/ 源/ IP地址/ 的/ 流量/ 可以/ 被/ 分散/ 到/ 不同/ 的/ 路径/ 上/ ,/ 不仅/ 能/ 更/ 灵活/ 地/ 利用网络/ 链路/ 资源/ ,/ 还/ 能够/ 根据/ 源地址/ 所/ 附带/ 的/ 属性/ 信息/ 进行/ 精确/ 的/ 调整/ ./ 二维/ 路由/ 也/ 可以/ 代替/ 通道/ 技术/ 成为/ 网络/ 虚拟化/ 的/ 主要/ 实现/ 手段/ ./ 这一/ 技术/ 主要/ 利用/ IP地址/ 的/ 拓扑/ 属性/ 和/ 所有者/ 属性/ ./ (/ 4/ )/ IP地址/ 动态化/ ./ 每个/ 主机/ 或者/ 路由器/ 接口/ 的/ 位置/ IP地址/ 在/ 264/ -/ 1/ 的/ 巨大/ 空间/ 中/ 进行/ 动态变化/ ./ 位置/ IP地址/ 动态变化/ 的/ 目的/ ,/ 在于/ 尽可能/ 地使/ 主机/ 或/ 路由器/ 的/ 位置/ 信息/ 匿名/ 化/ ,/ 从而/ 降低/ 主机/ 和/ 路由器/ 被/ 攻击/ 的/ 风险/ ./ 一般/ 情况/ 下/ 主机/ 收到/ 的/ 发往/ 当前/ 不再/ 使用/ 的/ 位置/ IP地址/ 的/ 数据包/ 被/ 自动/ 丢弃/ ,/ 但/ 在/ 位置/ IP地址/ 动态变化/ 过程/ 中/ ,/ 保证/ 通信/ 对端/ 通过/ 旧/ 位置/ IP地址/ 发来/ 的/ 数据包/ 能/ 正常/ 接收/ ./ 这/ 主要/ 利用/ IP地址/ 的/ 时间/ 属性/ 和/ 所有者/ 属性/ ./ (/ 5/ )/ 基于/ IP地址/ 的/ 地理位置/ 服务/ (/ LocationbasedService/ )/ ./ 基于/ 地理位置/ 的/ 互联网服务/ 越来越/ 重要/ ./ 虽然/ 很多/ 设备/ 如/ 手机/ 都/ 采用/ GPS/ 进行/ 物理/ 位置/ 定位/ ,/ 但/ 一来/ 并非/ 所有/ 设备/ 都/ 有/ GPS/ (/ 比如/ 桌面/ 电脑/ 或/ 网络设备/ )/ ,/ 二来/ GPS/ 定位/ 无法/ 应用/ 于/ 室内/ ,/ 因此/ 对/ IP地址/ 进行/ 准确/ 物理/ 定位/ 并/ 提供/ 基于/ IP地址/ 地理位置/ ,/ 是/ 提高/ 互联网/ 服务质量/ 的/ 一个/ 重要/ 技术手段/ ./ 该/ 技术/ 主要/ 利用/ IP地址/ 的/ 空间/ 属性/ ./ 下面/ 重点/ 对/ 真实/ IP地址/ 、/ 二维/ IP地址/ 路由/ 和/ 动态/ IP地址/ 技术/ 进行/ 论述/ ./ 3.3/ 真实/ IP地址/ IP/ 报文/ 所/ 携带/ 的/ IP地址/ 字/ 段/ 包括/ 目的/ IP地址/ 和源/ IP地址/ ./ 目的/ IP地址/ 是/ 进行/ 路由/ 转发/ 的/ 基础/ ,/ 因此/ 一般而言/ ,/ 目的/ IP地址/ 是/ 真实可信/ 的/ ./ 但源/ IP地址/ 在/ 当前/ 的/ 互联网/ 路由/ 转发/ 体系/ 中/ 并/ 没有/ 得到/ 非常/ 有效/ 的/ 真实性/ 检查/ ./ 事实上/ ,/ 源/ IP地址/ 表示/ 分组/ 的/ 发出/ 地/ ,/ 也/ 是/ 一个/ 分组/ 的/ 直接/ “/ 责任人/ ”/ ./ 在/ 现有/ 互联网/ 体系结构/ 下/ ,/ 分组/ 转发/ 过程/ 中/ ,/ 并/ 不/ 对源/ IP地址/ 进行/ 检查/ ,/ 因此/ 可以/ 很/ 轻易/ 地/ 假冒/ 源/ IP地址/ ./ 这样/ ,/ 对于/ 大量/ 网络攻击/ 报文/ 或者/ 危害/ 网络安全/ 的/ 报文/ ,/ 将/ 难以/ 溯源/ ,/ 也/ 因而/ 很难/ 对/ 网络/ 攻击者/ 形成/ 威慑力/ ./ 真实/ IP地址/ 技术/ ,/ 其/ 核心思想/ 就是/ 使得/ 网络/ 中/ 传输/ 的/ 每个/ 报文/ 的/ 源地址/ 都/ 是/ 真实可信/ 的/ ,/ 保证/ 可以/ Page7/ 对/ 每个/ 分组/ 进行/ 溯源/ ./ 尽管/ 在/ 当前/ 的/ 网络/ 技术/ 条件/ 下/ ,/ 对/ 每个/ 分组/ 进行/ 线速/ 存储/ 代价/ 较/ 高/ ,/ 但/ 对/ 分组/ 的/ 抽样/ 缓存/ 并/ 溯源/ ,/ 仍然/ 可以/ 保证/ 对/ 绝大多数/ 网络/ 行为/ 找到/ 其/ 责任人/ ./ 事实上/ ,/ 与/ 人类/ 社会/ 类似/ ,/ 任意/ 的/ 安全/ 解决方案/ 都/ 不/ 可能/ 杜绝/ 所有/ 的/ 攻击行为/ ,/ 总会/ 有/ 新/ 的/ 危害/ 安全/ 的/ 主体/ 和/ 行为/ 发生/ ./ “/ 让/ 每个/ 行为/ 有/ 其/ 责任人/ ”/ ,/ 这是/ 人类/ 社会/ 中/ 解决/ 安全/ 问题/ 所/ 采取/ 的/ 根本/ 和/ 共性/ 技术手段/ ,/ 也/ 同样/ 适用/ 于/ 互联网/ 环境/ 中/ ./ 实现/ 真实/ IP地址/ ,/ 防御/ 地址/ 伪造/ 攻击/ 的/ 方法/ 有/ 多种/ ,/ 根据/ 检测/ 伪造/ 地址/ 机制/ ,/ 可以/ 分为/ 密码/ 检测/ 、/ 特征/ 匹配/ 检测/ 和/ 路由/ 信息/ 检测/ 等等/ ./ 其中/ ,/ 密码/ 检测/ 安全性/ 好/ 但/ 部署/ 开销/ 较大/ ;/ 特征/ 匹配/ 检测/ 只能/ 根据/ 大量/ 历史/ 信息/ 建立/ 的/ 特征/ 库来/ 检测/ 可能/ 来自/ 伪造/ 源/ 的/ 报文/ ,/ 因此/ 不能/ 从/ 根本/ 意义/ 上/ 解决/ 地址/ 伪造/ 攻击/ 的/ 问题/ ,/ 其/ 精确度/ 也/ 不/ 高/ ;/ 而/ 路由/ 信息/ 检测/ 在/ 效果/ 和/ 部署/ 难度/ 上/ 相对/ 较为/ 均衡/ ,/ 成为/ 真实/ IP地址/ 研究/ 中/ 广为/ 采用/ 的/ 一种/ 机制/ ./ 用/ 路由/ 信息/ 检测/ 来/ 验证/ 地址/ 的/ 真实性/ ,/ 其/ 基本原理/ 在于/ 根据/ 流量/ 来源/ 路径/ 的/ 合理性/ 来/ 判断/ 报文/ 的/ 源地址/ 是否/ 被/ 伪造/ ./ 这一/ 原理/ 在/ 互联网/ 中/ 已经/ 得到/ 了/ 相当/ 的/ 应用/ ./ 比较/ 有/ 代表性/ 的/ 包括/ 反向/ 路径/ 转发/ 机制/ RPF/ [/ 12/ ]/ ./ RPF/ 假设/ 报文/ 对于/ 来自/ 某个/ 源地址/ 的/ 流量/ ,/ 其入/ 端口/ 应该/ 和/ 转发/ 向/ 该/ 地址/ 流量/ 的/ 出/ 端口/ 是/ 一致/ 的/ ,/ 否则/ 就/ 可以/ 认为/ 该/ 流量/ 的/ 源地址/ 是/ 被/ 伪造/ 的/ ./ 然而/ ,/ RPF/ 的/ 缺点/ 在于/ 无法/ 兼顾/ 到/ 互联网/ 在域/ 间/ 路由/ 上/ 的/ 不对称性/ ,/ 无法/ 在/ 多个/ 自治/ 域间/ 得到/ 广泛/ 的/ 应用/ ./ 2008/ 年/ 清华大学/ 提出/ 了/ IPv6/ 真实/ 源地址/ 验证/ 架构/ SAVA/ [/ 13/ -/ 14/ ]/ ,/ 根据/ IPv6/ 地址/ 分配/ 的/ 特点/ 进行/ 了/ 更加/ 系统/ 和/ 有效/ 的/ 分层/ 真实/ 地址/ 验证/ ./ 如图/ 2/ 所示/ ,/ SAVA/ 提出/ 了/ 保证/ 源/ IP地址/ 的/ 真实性/ 需要/ 从/ 子网/ 、/ 域/ 内/ 、/ 域间/ 3/ 个/ 层次/ 进行/ 验证/ ./ 在/ 子网/ 内部/ ,/ 通过/ 分组/ 源/ IP地址/ 、/ 分组/ 源/ MAC/ 地址/ 、/ 交换机/ 端口号/ 、/ DHCP/ 服务器/ 相互合作/ 的/ 方式/ ,/ 保证/ 每个/ 源/ IP地址/ 不/ 但是/ 已经/ 真实/ 分配/ 存在/ 的/ IP地址/ ,/ 而且/ 要/ 跟/ 实际/ 发出/ 报文/ 的/ 主机/ 相匹配/ ./ 如果/ 每个/ 子网/ 都/ 进行/ 了/ 真实/ IP地址/ 部署/ ,/ 那么/ 一般/ 情况/ 下域/ 内/ 路由/ 转发/ 可以/ 认为/ 是/ 真实可信/ 的/ ;/ 否则/ ,/ 需要/ 在域/ 内/ 路由器/ 上/ 进行/ 反向/ 接口/ 检查/ 来/ 降低/ 源地址/ 假冒/ 的/ 概率/ ./ 在/ 全网/ 范围/ 内/ ,/ 如果/ 某些/ 自治/ 域/ 部署/ 了/ 真实/ IP地址/ 技术/ ,/ 而/ 其他/ 自治/ 域/ 并未/ 部署/ ,/ 可以/ 让/ 部署/ 了/ 真实/ IP地址/ 的/ 自治/ 域/ 之间/ 组成/ 可/ 信任/ 联盟/ ,/ 从而/ 以/ 激励/ 的/ 方式/ 促使/ 真实/ IP地址/ 技术/ 的/ 增量/ 部署/ ,/ 同时/ 防御/ 来自/ 其他/ AS/ 的/ 诸如/ BGP/ 劫持/ 之类/ 的/ 恶意/ 攻击/ ./ 3.4/ 二维/ IP地址/ 路由/ 传统/ 的/ 路由/ 转发/ 体系/ 中/ ,/ 路由/ 路径/ 的/ 生成/ 仅仅/ 依赖于/ 目的/ 地址/ ./ 因而/ 对于/ 某个/ 特定/ 的/ 目的/ 地址/ ,/ 其/ 路由/ 生成/ 图/ 具有/ 树形/ 结构/ 的/ 特点/ ,/ 如图/ 3/ 所示/ ./ 在/ 其/ 路由/ 生成/ 图中/ 来自/ 任意/ 点/ 的/ 流量/ 一旦/ 在/ 某个/ 网络/ 节点/ 汇聚/ 在/ 一起/ 后/ ,/ 不/ 借助/ 其他/ 转发/ 系统/ (/ 如/ MPLS/ [/ 15/ ]/ ,/ 源/ 路由/ )/ 和/ 应用/ (/ 如/ 负载/ 均衡器/ ,/ loadbalancer/ )/ 的/ 帮助/ 就/ 无法/ 再/ 进行/ 分流/ ./ 虽然/ MPLS/ 和源/ 路由/ 技术/ 也/ 可以/ 灵活/ 地/ 确定/ 路由/ 路径/ ,/ 但/ 它们/ 都/ 存在/ 各自/ 的/ 问题/ ./ 源/ 路由/ 需要/ 由/ 终端/ 系统/ 来/ 决定/ 每个/ 报文/ 的/ 路由/ 方案/ 并且/ 植入/ 到/ 报头/ 内/ ,/ 因此/ 将/ 路由/ 的/ 任务/ 和/ 权限/ 暴露/ 给/ 了/ 端系统/ ,/ 不仅/ 加重/ 了/ 端系统/ 的/ 负担/ 、/ 不能/ 得到/ 全局/ 最优/ 的/ 路由/ 方案/ ,/ 而且/ 还/ 具有/ 一定/ 的/ 安全隐患/ ./ MPLS/ 多/ 部署/ 在/ 自治/ 域/ 内部/ ,/ 将/ 包/ 的/ 转发/ 策略/ 映射/ 为域/ 内/ 节点/ 可/ 识别/ 的/ 二层/ 标签/ ,/ 在/ 自治/ 域/ 的/ 边界/ 进行/ 转译/ ,/ 而在域/ 内/ 通过/ 标签/ 进行/ 高速/ 转发/ ./ 虽然/ MPLS/ 映射/ 规则/ 的/ 灵活性/ 给/ 其/ 带来/ 相当/ 高/ 的/ 自由度/ 和/ 效率/ ,/ 但/ MPLS/ 系统/ 的/ 封闭性/ 也/ 给/ 网络/ 测量/ 、/ 管理/ 和/ 安全/ 方面/ 的/ 工作/ 带来/ 了/ 相当/ 的/ 不便/ ,/ 特别/ 是/ 对于/ 基于/ 纯/ IP/ 网络/ 的/ 协议/ 和/ 应用/ ,/ 例如/ 路径/ 追踪/ 等等/ 的/ 支持性/ 很差/ ./ 基于/ 二维/ IP地址/ 的/ 路由/ 转发/ 方案/ 则/ 在/ 解决/ 分流/ 问题/ 的/ 基础/ 上/ ,/ 很/ 好/ 地/ 克服/ 了/ 上述/ 转发/ 系统/ 的/ 缺点/ ./ 二维/ 路由/ 的/ 基本思路/ 在于/ ,/ 生成/ 转发/ 规则/ 时/ 不仅/ 要/ 考虑/ 报文/ 的/ 目的/ 地址/ ,/ 也/ 要/ 考虑/ 源地址/ 信息/ ./ 如/ Page8/ 图/ 4/ 所示/ ,/ 二维/ 路由/ 的/ 转/ 发表/ 结构/ 为/ 源地址/ 、/ 目的/ 地址/ 对/ 到/ 转发/ 接口/ 的/ 映射/ ./ 在/ 我们/ 的/ 现实生活/ 中/ ,/ 尽管/ 对于/ 某个/ 特定/ 目的/ 地址/ 可能/ 存在/ 规模/ 较大/ 或者/ 分类/ 繁杂/ 的/ 流量/ ,/ 但/ 这些/ 流量/ 来自/ 相同/ 的/ 源地址/ 或者/ 前缀/ 的/ 可能性/ 是/ 几乎/ 不/ 存在/ 的/ ./ 对于/ 以/ 某个/ 特定/ 地址/ 为/ 目的地/ 的/ 流量/ ,/ 即便/ 在/ 网络/ 中/ 的/ 某个/ 节点/ 被/ 汇聚/ 在/ 一起/ ,/ 在/ 此后/ 依然/ 可以/ 依据/ 其/ 不同/ 的/ 源地址/ 进行/ 分流/ ./ 这种/ 分流/ 既/ 可以/ 是/ 为了/ 均衡/ 链路/ 负载/ ,/ 也/ 可以/ 是/ 为了/ 能够/ 根据/ 源地址/ 的/ 身份/ 信息/ 提供/ 不同/ 级别/ 的/ 服务/ ./ 因此/ ,/ 二维/ 路由/ 相对/ 于/ 传统/ 的/ 一维/ 路由/ 来说/ 更加/ 灵活/ ,/ 也/ 可以/ 支持/ 更/ 多/ 的/ 自定义/ 路由/ 策略/ ./ 同时/ ,/ 二维/ 路由/ 依然/ 是/ 纯/ IP/ 转发/ 系统/ ,/ 其/ 报头/ 格式/ 和/ 传统/ 一维/ 路由/ 并无二致/ ,/ 其/ 报文/ 在/ 仅/ 支持/ 一维/ 路由/ 的/ 系统/ 上/ 也/ 可以/ 正常/ 转发/ ,/ 并且/ 完美/ 支持/ 任何/ 基于/ IP/ 转发/ 设计/ 的/ 应用/ ./ 这种/ 纯/ 网络层/ 实现/ 的/ 分流/ 系统/ 能够/ 继续/ 保有/ 原纯/ 目的/ IP/ 路由/ 的/ 高效性/ 和/ 兼容性/ ./ 二维/ 路由/ 因为/ 其/ 灵活性/ ,/ 相对/ 于/ 传统/ 路由/ 来说/ 可以/ 支持/ 更/ 多/ 自定义/ 的/ 路由/ 策略/ 和/ 应用/ ./ 包括/ :/ (/ 1/ )/ 分级/ 服务/ 根据/ 端/ 采用/ 的/ 不同/ 源地址/ 所/ 体现/ 的/ 用户/ 身份/ 信息/ ,/ 可以/ 识别/ 流量/ 的/ 优先级/ 和/ 需求/ 信息/ ,/ 从而/ 为/ 不同/ 的/ 流量/ 提供/ 分级/ 服务/ ./ 不仅/ 不同/ 的/ 用户/ 可以/ 依据/ 其/ 源地址/ 被/ 识别/ 出来/ ,/ 同一个/ 用户/ 也/ 可以/ 合理/ 利用/ 自己/ 分配/ 得到/ 的/ 数个/ IP地址/ 去/ 请求/ 不同/ 等级/ 的/ 服务/ ./ (/ 2/ )/ 流量/ 均衡/ 传统/ 路由/ 下/ ,/ 流量/ 均衡/ 多/ 通过/ MPLS/ 的/ 方式/ 来/ 实现/ ./ 而/ 二维/ 路由/ 完全/ 可以/ 给/ 来自/ 不同/ 源地址/ 的/ 流量/ 选择/ 不同/ 的/ 通路/ ,/ 从/ 网络层/ 完成/ 流量/ 均衡/ 的/ 任务/ ./ 在/ 图/ 2/ 中/ 的/ 示例/ 就/ 体现/ 了/ 二维/ 路由/ 充分利用/ 多路径/ 实现/ 流量/ 均衡/ 避免/ 拥塞/ 的/ 特点/ ./ (/ 3/ )/ 多路/ 和/ 反向/ 代理/ 在/ 二维/ 路由/ 的/ 帮助/ 下/ ,/ 多路/ 和/ 服务器/ 反向/ 代理/ 可以/ 完全/ 实现/ 在/ 网络层/ ,/ 直接/ 通过/ 报文/ 的/ 源地址/ 进行/ 重定向/ ./ 相对/ 于/ 传统/ 的/ 重定向/ 来说/ ,/ 二维/ 路由/ 的/ 吞吐/ 率/ 和/ 精确度/ 都/ 更/ 高/ ./ (/ 4/ )/ 快速/ 故障/ 恢复/ 在/ 基于/ 一维/ 路由/ 的/ 转发/ 系统/ 中/ ,/ 快速/ 故障/ 恢复/ 仅仅/ 能够/ 对于/ 单点故障/ 保证/ 百分之百/ 的/ 保护率/ ./ 而/ 在/ 二维/ 路由/ 中/ ,/ 快速/ 故障/ 机制/ 可以/ 根据/ 报文/ 的/ 源地址/ 和/ 目的/ 地址/ 推测/ 报文/ 在/ 转发/ 过程/ 中/ 所/ 经过/ 的/ 节点/ ,/ 从而/ 能以/ 更/ 高/ 的/ 几率/ 让/ 报文/ 在/ 接下来/ 的/ 转发/ 过程/ 中/ 绕开/ 故障/ 节点/ 并/ 避免/ 环路/ 的/ 出现/ ./ 3.5/ 动态/ IP地址/ 和/ 一般/ 服务器/ 的/ IP地址/ 信息/ 不同/ ,/ 对/ 主机/ 而言/ ,/ 其/ IP地址/ 作为/ 重要/ 的/ 身份/ 和/ 位置/ 信息/ ,/ 隐私/ 性/ 需要/ 得到/ 保护/ ./ 这/ 是因为/ 从/ 效率/ 和/ 安全/ 的/ 角度/ 考虑/ ,/ 主机/ 没有/ 必要/ 响应/ 来自/ 匿名/ 主机/ 和/ 服务器/ 主动/ 建立/ 的/ 连接/ ,/ 因此/ 也/ 就/ 不/ 需要/ 将/ IP地址/ 透露/ 给/ 未/ 授权/ 的/ 对/ 端/ ./ 相反/ ,/ 一旦/ 主机/ 的/ IP地址/ 被/ 恶意/ 攻击者/ 获取/ ,/ 将会/ 带来/ 各种/ 安全隐患/ :/ 攻击者/ 既/ 可以/ 直接/ 对/ 主机/ 发动/ 攻击/ ,/ 也/ 可以/ 通过/ 反射/ 拒绝/ 攻击/ 的/ 方式/ 间接/ 对/ 主机/ 发动/ 攻击/ ./ IPv6/ 提供/ 了/ 巨大/ 的/ IP地址/ 空间/ ,/ 也/ 降低/ 了/ 主机/ 暴露/ IP地址/ 的/ 概率/ ./ 但/ 一旦/ 攻击者/ 通过/ 地址/ 扫描/ 成功/ 找到/ 主机/ 的/ IP地址/ ,/ 仍然/ 可以/ 建立/ 连接/ 并/ 进行/ 攻击/ ./ 真实/ 地址/ 验证/ 可以/ 防御/ 来自/ 伪造/ 地址/ 攻击者/ 的/ 反射/ 拒绝/ 攻击/ ,/ 但/ 对于/ 没有/ 经过/ 源地址/ 伪造/ ,/ 或者/ 通过/ 隧道/ 来/ 进行/ 的/ 攻击/ 却/ 束手无策/ ./ 因此/ ,/ 要/ 从/ 根本/ 意义/ 上/ 解决/ 地址/ 泄露/ 引发/ 的/ 安全/ 问题/ ,/ 最/ 直接/ 的/ 方法/ 是/ 提供/ 一个/ 访问/ 控制系统/ ./ 而/ 动态/ IP地址/ 则/ 可以/ 很/ 好/ 地/ 实现/ 访问控制/ 的/ 功能/ ./ 在/ IPv6/ 环境/ 下/ ,/ 为/ 每个/ 主机/ 动态/ 或者/ 静态/ 分配/ 的/ 地址/ 实际上/ 为/ 前/ 64/ 位/ 地址/ 构成/ 的/ 前缀/ ,/ 而后/ 64/ 位/ 地址/ 需要/ 在/ 主机/ 接入/ 互联网/ 时/ 自行/ 动态/ 生成/ ./ 这种/ 地址/ 分配模式/ 给/ 了/ 主机/ 一定/ 的/ 选择/ 自由/ ,/ 但/ 就/ 目前/ 而言/ 地址/ 的/ 后/ 64/ 位/ 一般/ 是/ 通过/ 主机/ 的/ MAC/ 地址/ 或者/ 随机/ 的/ 方式/ 生成/ ,/ 其/ 自由度/ 几乎/ 没有/ 得到/ 应用/ ./ 而/ 动态/ IP地址/ 技术/ 则/ 利用/ 了/ 这/ 一/ 特性/ ./ 如图/ 5/ 所示/ ,/ 动态/ IP地址/ 技术/ 允许/ 主机/ 以/ 主动/ (/ 主机/ 自由/ 决定/ 并/ 向/ DHCP/ 服务器/ 注册/ )/ 或者/ 被动/ (/ DHCP/ 服务器/ 决定/ 主机/ 跳变/ 的/ 地址/ )/ 的/ 方式/ 在/ 短/ 周期/ (/ 10/ 秒/ 级别/ )/ 内/ ,/ 改变/ IPv6/ 地址/ 中后/ 64/ 位/ 的/ 可变/ 部分/ ./ 一旦/ 地址/ 发生/ 跳变/ 后/ ,/ 旧有/ 地址/ 只能/ 在/ 限定/ 时间/ 内/ 由/ 已经/ 以此/ 地址/ 建立/ 的/ TCP/ 连接/ 使用/ ,/ 主机/ 不再/ 接受/ 已过期/ 地址/ 发起/ 的/ 新/ 连接/ ./ IPv6/ 地址/ 空间/ 的/ 庞大/ ,/ 加之/ 跳变/ 周期/ 较/ 短且/ 可控/ ,/ 攻击者/ 很/ 难以/ 扫描/ 的/ 方式/ 快速/ 定位/ 主机/ 跳变/ 之后/ 的/ 地址/ ,/ 从而/ 大大/ Page9/ 增加/ 了/ 主机/ IP地址/ 的/ 匿名性/ ./ 只有/ 主机/ 主动/ 连接/ 、/ 知晓/ 正确/ 地址/ 的/ 对/ 端/ 才能/ 和/ 主机/ 建立/ 连接/ ;/ 而/ 其他/ 对端/ 即便/ 得到/ 了/ 正确/ 的/ 主机/ IPv6/ 地址/ 前/ 64/ 位/ 前缀/ ,/ 也/ 会/ 因为/ 后/ 64/ 位/ 动态/ 地址/ 错误/ 而/ 导致/ 报文/ 在/ 转发/ 过程/ 中/ 被/ 丢弃/ ./ 利用/ 动态/ IP地址/ 技术/ 来/ 防御/ 拒绝服务/ 攻击/ 等/ 流量/ 攻击/ ,/ 相对/ 于/ 传统/ 方案/ 来说/ 更/ 具备/ 灵活性/ ./ 在/ 传统/ 的/ 解决方案/ 中/ ,/ 识别/ 合法/ 和/ 非法/ 流量/ 必须/ 放在/ 应用层/ 进行/ ,/ 非法/ 流量/ 虽然/ 得到/ 丢弃/ 但/ 依然/ 会/ 造成/ 网络/ 拥塞/ ./ 这是/ 地址/ 暴露/ 带来/ 攻击/ 隐患/ 的/ 根源/ 所在/ ./ 动态/ IP地址/ 下/ 对于/ 流量/ 的/ 识别/ 完全/ 可以/ 在/ 交换机/ 或/ 路由器/ 的/ 数据/ 层面/ 进行/ ,/ 未/ 被/ 授权/ 的/ 流量/ 在/ 未/ 达到/ 主机/ 之前/ 就/ 可以/ 被/ 路由器/ 识别/ 、/ 过滤/ 和/ 丢弃/ ./ 这样/ ,/ 同时/ 到达/ 的/ ,/ 甚至/ 是/ 来自/ 同一个/ 源地址/ 的/ 流量/ ,/ 其/ 合法/ 流量/ 和/ 非法/ 流量/ 也/ 可以/ 在/ 网络层/ 被/ 区分/ 开来/ ,/ 在/ 过滤/ 非法/ 流量/ 的/ 同时/ 不会/ 影响/ 合法/ 流量/ 的/ 传输/ ./ 同时/ ,/ 在/ IPv6/ 的/ 架构/ 下/ ,/ 同一个/ 主机/ 可以/ 同时/ 使用/ 多个/ 合法/ 的/ IP地址/ ./ 通过/ 为/ 使用/ 中/ 的/ 不同/ IP地址/ 进行/ 分组/ 并/ 设定/ 更换/ 周期/ ,/ 主机/ 可以/ 将/ 自己/ 的/ 通信/ 对象/ ,/ 特别/ 是/ 需要/ 在/ 一定/ 时限/ 内/ 被动/ 与/ 之/ 建立/ 连接/ 的/ 对象/ 进行/ 分级/ ,/ 为/ 其/ 提供/ 不同/ 的/ 访问/ 周期/ ./ 而/ 目前/ 我们/ 为/ 动态/ IP地址/ 系统/ 设计/ 的/ 分层/ 地址/ 动态/ 机制/ ,/ 能够/ 在/ 保证/ 可扩展性/ 的/ 前提/ 下/ 提供/ 较为/ 广泛/ 的/ 非法/ 访问/ 阻隔/ 半径/ ./ 目前/ 现存/ 的/ 动态/ IP地址/ 系统/ ,/ 为了/ 能够/ 真正/ 达到/ 不/ 影响/ 路由/ 和/ 应用/ 的/ 动态/ 连接/ 效果/ ,/ 需要/ 借助/ NAT/ 等/ 中间件/ 或者/ 通过/ SDN/ 的/ 方式/ 来/ 实现/ ./ 这种/ 实现/ 方法/ 存在/ 一定/ 的/ 扩展性/ 问题/ ,/ 因为/ 无论是/ NAT/ 的/ 地址映射/ 表/ 还是/ SDN/ 的/ 转/ 发表/ 大多/ 都/ 是/ 扁平/ 结构/ 的/ ,/ 一旦/ 项目/ 增多/ 就/ 会/ 导致/ 存储空间/ 紧张/ ./ 而/ 分层/ 地址/ 动态/ 机制/ 则/ 利用/ IPv6/ 丰富/ 的/ 地址/ 空间/ 去/ 满足/ 可扩展性/ ./ 如图/ 6/ 所示/ ,/ 在/ 分层/ 地址/ 动态/ 机制/ 中/ ,/ IPv6/ 地址/ 中/ 的/ 可变/ 部分/ 被/ 分为/ 多段/ ./ 网络/ 中/ 的/ 主机/ 和/ 路由器/ 根据/ 配置/ 协议/ 定义/ 的/ 层级/ 负责/ 所属/ 段落/ 地址/ 的/ 动态变化/ ,/ 将/ 动态变化/ 结果/ 通知/ 配置/ 服务器/ ,/ 并且/ 对/ 直属/ 子网/ 段/ 的/ 动态/ 地址/ 负责/ 过滤/ ./ 在/ 长达/ 64/ 位/ 的/ 可变/ IPv6/ 地址/ 空间/ 中/ ,/ 以/ 8/ 位为/ 单位/ 可以/ 最/ 多/ 负载/ 多达/ 8/ 层/ 的/ 层次化/ 域/ 内/ 网络结构/ ,/ 而/ 路由器/ 只/ 需要/ 对/ 与其/ 直连/ 的/ 路由器/ 或者/ 终端/ 进行/ 其/ 所属/ 层级/ 动态/ 地址/ 的/ 过滤/ ,/ 完全/ 可以/ 在/ 端口/ 过滤器/ 上/ 实现/ 而/ 不/ 需要/ 涉及/ 复杂/ 的/ 过滤/ 机制/ 和/ 匹配/ 表/ 结构/ ./ 这种/ 设计模式/ 使得/ 动态/ 地址/ 系统/ 可以/ 提供/ 的/ 服务/ 终端/ 数目/ 以/ 指数/ 级/ 增长/ ,/ 完全/ 可以/ 满足/ 现有/ 以及/ 近/ 未来/ 的/ 网络/ 扩展/ 需求/ ./ 4ADN/ 与/ SDN/ 和/ NDN/ 的/ 关系/ 及/ 区别/ 如/ 第/ 2/ 节/ 所述/ ,/ 近年来/ 学术界/ 提出/ 了/ 许多/ 针对/ 未来/ 互联网/ 架构/ 的/ 方案/ ,/ 其中/ 最为/ 广泛/ 接受/ 的/ 是/ SDN/ 和/ NDN/ ./ SDN/ 的/ 核心思想/ 是/ 把/ 网络/ 的/ 控制/ 层面/ 与/ 数据/ 层面/ 分离/ ,/ 并/ 把/ 网络/ 功能/ 开放/ 给/ 上层/ 应用/ ./ 因此/ ,/ SDN/ 本质/ 上/ 是/ 一种/ 新型/ 的/ 互联网/ 体系结构/ 实现/ 技术/ ,/ 而/ 不是/ 互联网/ 体系结构/ 本身/ ./ SDN/ 作为/ 一种/ 平台/ ,/ 为/ 解决/ 互联网/ 所/ 面临/ 的/ 规模/ 扩展/ 、/ 平滑/ 移动/ 、/ 服务质量/ 、/ 安全/ 可信/ 等/ 问题/ 提供/ 了/ 新/ 的/ 实现/ 手段/ ,/ 但/ 并未/ 提出/ 解决/ 这些/ 问题/ 的/ 具体/ 方案/ ./ 从/ 这个/ 角度/ 讲/ ,/ 与/ SDN/ 对应/ 的/ 是/ 传统/ 的/ 分布式/ 、/ 封闭式/ 的/ 互联网/ 体系结构/ 实现/ 方式/ ,/ 而/ 不是/ 某种/ 体系结构/ 方案/ ./ ADN/ 、/ NDN/ 甚至/ 其他/ 的/ 互联网/ 体系结构/ 既/ 可以/ 用/ Page10SDN/ 来/ 实现/ ,/ 也/ 可以/ 用/ 传统/ 方式/ 来/ 实现/ ./ NDN/ 的/ 核心/ ,/ 在于/ 以/ “/ 标识/ 内容/ 的/ 名字/ ”/ 代替/ “/ 标识/ 节点/ 的/ 地址/ ”/ 来/ 作为/ 互联网/ 体系结构/ 的/ 基本要素/ 、/ 以及/ 路由/ 和/ 传输/ 的/ 基本/ 单元/ ./ 每个/ 内容/ 都/ 用/ 一个/ 名字/ 来/ 表示/ ,/ 一个/ 接收者/ 想/ 接收数据/ ,/ 需要/ 先/ 发送/ 对/ 内容/ 名字/ 的/ 请求/ ;/ 路由器/ 维护/ 一个/ 请求/ 列表/ ,/ 并且/ 通过/ 缓存/ 内容/ 把/ 数据/ 发送到/ 所有/ 发送/ 过/ 请求/ 的/ 接口/ ./ 从/ 本质/ 上/ 讲/ ,/ NDN/ 的/ 工作/ 过程/ ,/ 与/ IP/ 组播/ 非常/ 类似/ ./ 主要/ 不同/ 的/ 地方/ 在于/ ,/ IP/ 组播/ 是/ 通过/ 把/ IP地址/ 空间/ 中/ 的/ 一部分/ 拿/ 出来/ 作为/ 会话/ 或/ 数据/ 的/ 标识/ ,/ 而/ NDN/ 则/ 引入/ 全新/ 的/ 名字/ 空间/ 对/ 内容/ 进行/ 标识/ ./ 除此之外/ ,/ NDN/ 提出/ 在/ 路由器/ 上/ 进行/ 泛/ 在/ 缓存/ ,/ 但/ 这种/ 方案/ 与/ IP/ 网络/ 中/ 的/ “/ 内容/ 分布/ 网络/ (/ CDN/ )/ ”/ [/ 16/ ]/ 的/ 思想/ 非常/ 类似/ ,/ 也/ 可以/ 在/ IP/ 网络/ 中/ 进行/ 支持/ ./ ADN/ 是/ 一种/ 通过/ 对/ IP地址/ 的/ 管理/ 和/ 使用/ 方式/ 的/ 增量/ 式/ 改进/ 和/ 创新/ ,/ 来/ 解决/ 当前/ 互联网/ 面临/ 的/ 一系列/ 挑战/ 的/ 体系结构/ 方案/ ./ 通过/ 对/ IP地址/ 语义/ 的/ 灵活/ 定义/ ,/ 完全/ 可以/ 实现/ NDN/ 所/ 希望/ 达到/ 的/ 大部分/ 目标/ (/ 比如/ 上面/ 所举/ 的/ IP/ 组播/ 的/ 例子/ )/ ./ ADN/ 既/ 可以/ 用/ SDN/ 实现/ ,/ 也/ 可以/ 基于/ 现有/ 网络/ 的/ 分布式/ 架构/ 来/ 实现/ ./ 而/ ADN/ 的/ 最大/ 特点/ 在于/ 其/ 没有/ 改变/ 当前/ 互联网/ 成功/ 的/ “/ 基因/ ”/ 即/ IP/ 协议/ ,/ 可以/ 在/ 现有/ 互联网/ 上往/ 未来/ 互联网/ 进行/ 平滑/ 过渡/ [/ 17/ -/ 18/ ]/ ./ 5/ 结论/ 本文/ 提出/ 了/ 地址/ 驱动/ 的/ 网络体系结构/ ADN/ ./ ADN/ 的/ 核心思想/ 是/ 保留/ 当前/ 互联网/ 成功/ 的/ 基因/ ,/ 即/ TCP/ // IP/ 体系结构/ ,/ 并/ 以/ IP地址/ 的/ 创新/ 管理/ 和/ 使用/ 为/ 驱动/ ,/ 来/ 解决/ 当前/ 互联网/ 面临/ 的/ 一系列/ 问题/ ,/ 并/ 以/ 平滑/ 的/ 方式/ 从/ 当前/ 互联网/ 过渡/ 到/ 下一代/ 互联网/ ./ ADN/ 充分利用/ 了/ IP地址/ 的/ 多重/ 属性/ ,/ 包含/ 了/ 真实/ IP地址/ 、/ 二维/ 路由/ 、/ 动态/ IP/ 等/ 多种/ 创新/ 技术/ ./ ADN/ 体系结构/ 不但/ 可以/ 用于/ 互联网/ 的/ 演进/ ,/ 还/ 可以/ 用于/ 互联网/ 、/ 移动/ 通信网/ 、/ 空间/ 网络/ 等/ 多种/ 网络/ 的/ 融合/ ./ 

