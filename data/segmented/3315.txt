Page1MANETs/ 稳定性/ 路由/ 的/ 移动/ 自/ 适应/ 策略/ 研究/ 胡曦/ 汪晋/ 宽/ 王翠荣/ (/ 东北大学/ 信息科学/ 与/ 工程学院/ 沈阳/ 110819/ )/ 摘要/ 在/ 移动/ AdHoc/ 网络/ 中/ ,/ 节点/ 移动/ 造成/ 网络拓扑/ 实时/ 变化/ ,/ 并/ 增加/ 了/ 路由/ 的/ 复杂性/ ./ 已有/ 稳定性/ 路由/ 算法/ 往往/ 关注/ 于/ 建立/ 一条/ 相对/ 稳定/ 的/ 路由/ ,/ 而/ 忽略/ 了/ 路由/ 建立/ 后/ 稳定/ 路由/ 对于/ 节点/ 移动/ 的/ 适应性/ ./ 针对/ 这一/ 问题/ ,/ 首先/ 提出/ 了/ 一种/ 针对/ 稳定性/ 路由/ 的/ 移动/ 自/ 适应/ 策略/ ,/ 该/ 策略/ 主要/ 包括/ 3/ 个/ 关键技术/ :/ 路由/ 建立/ 过程/ 中/ 稳定性/ 参数/ 的/ 双向/ 评估/ 、/ 节点/ 移动/ 状态/ 改变/ 时/ 的/ 异步/ 通告/ 和/ 链路/ 稳定性/ 更新/ 以及/ 基于/ 链路/ 稳定性/ 的/ 多/ 径路/ 由/ 维护/ ./ 然后/ 在/ 此基础/ 上/ ,/ 设计/ 了/ 一种/ 具有/ 移动/ 自/ 适应/ 特性/ 的/ 稳定性/ 路由/ 算法/ ./ 仿真/ 结果表明/ :/ 提出/ 的/ 移动/ 自/ 适应/ 策略/ 及/ 稳定性/ 路由/ 算法/ 能/ 进一步提高/ 路由/ 性能/ ,/ 更好/ 地/ 适应/ 动态/ 多变/ 的/ 移动/ AdHoc/ 网路/ 环境/ ./ 关键词/ 移动/ AdHoc/ 网络/ ;/ 稳定性/ 路由/ ;/ 移动/ 自/ 适应/ 1/ 引言/ 移动/ AdHoc/ 网络/ (/ MobileAdHocNetworks/ ,/ MANETs/ )/ 是/ 由/ 移动/ 节点/ 自/ 组织/ 形成/ 的/ 一种/ 无线网/ 为了/ 满足/ 应用/ 的/ 需求/ ,/ 研究/ 人员/ 提出/ 了/ 许多/ 支持/ 服务质量/ 的/ MANETs/ 路由/ 算法/ [/ 1/ ]/ ./ 面向/ 稳定/ 的/ Page2/ 路由/ 算法/ 是/ 其中/ 的/ 重要/ 一类/ [/ 2/ -/ 12/ ]/ ,/ 其/ 目的/ 是/ 提高/ 数据传输/ 过程/ 的/ 稳定性/ 和/ 连续性/ ,/ 减小/ 节点/ 移动/ 对于/ 路由/ 过程/ 的/ 影响/ ./ NSR/ [/ 2/ ]/ 路由/ 算法/ 认为/ ,/ 那些/ 邻居/ 变化/ 最小/ 的/ 节点/ 具有/ 较/ 好/ 的/ 稳定性/ ,/ 因此/ 算法/ 根据/ 邻居/ 节点/ 间/ 的/ 历史/ 信息/ 选择/ 稳定/ 的/ 节点/ 构建/ 路由/ ./ 在/ 该/ 算法/ 中/ ,/ 网络/ 中/ 的/ 所有/ 节点/ 根据/ 节点/ 移动/ 速度/ 的/ 大小/ 设置/ 分组/ 的/ 交换/ 周期/ ,/ 通过/ 这个/ 周期/ 交换/ ,/ 每个/ 节点/ 能够/ 维护/ 最新/ 的/ 邻居/ 列表/ 并/ 评估/ 稳定性/ ./ 在/ 路由/ 请求/ (/ RouteRequest/ ,/ RREQ/ )/ 转发/ 过程/ 中/ 记录/ 经过/ 路径/ 上/ 的/ 稳定性/ ,/ 由/ 目的/ 节点/ 根据/ RREQ/ 记录/ 的/ 稳定性/ 选择/ 最优/ 的/ 路径/ 应答/ (/ RouteReply/ ,/ RREP/ )/ ./ 在/ 发生/ 路径/ 中断/ 后/ ,/ NSR/ 通知/ 源/ 节点/ 重新/ 建立/ 路由/ ./ 文献/ [/ 3/ ]/ 提出/ 了/ 一种/ MANETs/ 中/ 的/ 稳定/ 路由/ 选择/ 算法/ ,/ 作者/ 利用/ 节点/ 间/ 运动/ 产生/ 的/ 多普勒/ 频移/ ,/ 按照/ 节点/ 间/ 相对运动/ 的/ 关系/ (/ 靠近/ 或者/ 远离/ )/ 得到/ 一个/ DV/ 值来/ 评估/ 链路/ 稳定性/ ./ 在/ 该/ 算法/ 中/ ,/ 节点/ 间/ 需要/ 周期性地/ 交换/ 分组/ 以/ 获得/ 节点/ 间/ 的/ 多普勒/ 频移/ ,/ 路由/ 建立/ 时/ 根据/ 其/ 定义/ 的/ 链路/ 稳定性/ 寻找/ 具有/ 更优/ 稳定性/ 的/ 路径/ 作为/ 备选/ 路径/ ./ 目的/ 节点/ 在/ 备选/ 路径/ 中/ 选择/ 最优/ 的/ 路径/ 进行/ 应答/ ./ 但/ 该/ 算法/ 没有/ 设计/ 路由/ 维护/ 策略/ ./ 文献/ [/ 5/ ]/ 中/ ,/ 作者/ 通过/ 推导/ 链路/ 有效性/ 模型/ 得到/ 节点/ 通信/ 范围/ 内/ 形成/ 链路/ 的/ 有效性/ 最高/ 的/ 区域/ ,/ 在/ AODV/ [/ 13/ ]/ 的/ 基础/ 上/ 通过/ 修改/ RREQ/ 分组/ 的/ 转发/ 规则/ 来/ 获得/ 稳定性/ 较/ 好/ 的/ 路由/ ,/ 路由/ 中断/ 后/ 采用/ AODV/ 的/ 路由/ 维护/ 方案/ ./ 文献/ [/ 7/ ]/ 提出/ 了/ 一种/ 面向/ 链路/ 稳定性/ 的/ 路由/ 机制/ ,/ 节点/ 根据/ 少量/ 接收/ 信号强度/ 样本/ 值/ 建立/ 牛顿/ 插值/ 多项式/ 描述/ 连续/ 时间/ 域/ 上/ 的/ 信号强度/ ,/ 进而/ 估计/ 链路/ 生存/ 时间/ ,/ 以/ AODV/ 为/ 基础/ 按照/ 链路/ 生存/ 时间/ 和/ 跳数/ 作为/ RREQ/ 约束条件/ 建立/ 稳定/ 的/ 端/ 到/ 端/ 路径/ ,/ 路由/ 中断/ 后/ 采用/ AODV/ 的/ 路由/ 维护/ 方案/ ./ 文献/ [/ 8/ ]/ 也/ 在/ AODV/ 的/ 基础/ 上/ ,/ 通过/ 评估/ 得到/ 的/ 链路/ 平均/ 维持/ 时间/ ,/ 控制/ RREQ/ 分组/ 的/ 转发/ ,/ 建立/ 稳定/ 路由/ ./ 在/ 路由/ 中断/ 后/ 采用/ 本地/ 路由/ 维护/ 或者/ 由源/ 节点/ 重新/ 建立/ 路由/ ./ 文献/ [/ 9/ -/ 10/ ]/ 以/ 链路/ 有效/ 时间/ (/ LinkExpirationTime/ ,/ LET/ )/ [/ 14/ ]/ 作为/ 链路/ 稳定性/ 参数/ 建立/ 稳定/ 路由/ ,/ 其中/ 文献/ [/ 9/ ]/ 的/ 路由/ 建立/ 和/ 维护/ 操作/ 与/ DSR/ [/ 15/ ]/ 基本相同/ ,/ 只是/ 通过/ 对/ LET/ 、/ 链路/ 中断/ 数目/ 以及/ 跳数/ 的/ 加权/ 平均值/ 进行/ 路由/ 选择/ ;/ 而/ 在/ 文献/ [/ 10/ ]/ 中/ ,/ 路由/ 建立/ 操作/ 与/ DSR/ 基本相同/ ,/ 但是/ 在/ 路由/ 维护/ 中/ 如果/ 存在/ 可/ 替换/ 路由/ 则/ 按照/ DSR/ 中/ 的/ 路由/ 抢修/ 机制/ 进行/ 操作/ ;/ 如果/ 没有/ 可/ 替换/ 路由/ ,/ 则/ 采用/ 本地/ 修复/ 机制/ 进行/ 维护/ ./ 总结/ 已有/ 的/ 面向/ 稳定/ 的/ 路由/ 算法/ ,/ 存在/ 的/ 主要/ 问题/ 有/ 以下/ 3/ 种/ :/ 首先/ ,/ 评估/ 路由/ 稳定性/ 所/ 选用/ 的/ 计算/ 参数/ 和/ 方法/ 会/ 影响/ 评估/ 结果/ 的/ 准确/ 程度/ ,/ 例如/ 文献/ [/ 9/ -/ 10/ ]/ 中/ 利用/ GPS/ 数据/ 得到/ 的/ LET/ 和/ 文献/ [/ 7/ -/ 8/ ]/ 中/ 利用/ 信号强度/ 得到/ 的/ 稳定性/ 度量/ ;/ 其次/ ,/ 为了/ 获得/ 评估/ 路由/ 稳定性/ 的/ 参数/ ,/ 一些/ 算法/ 需要/ 周期性地/ 进行/ 节点/ 信息/ 交换/ ,/ 例如/ 文献/ [/ 2/ ,/ 7/ -/ 8/ ]/ ./ 这/ 就/ 带来/ 了/ 两个/ 问题/ :/ (/ 1/ )/ 交换/ 周期/ 的/ 确定/ ,/ 若/ 周期/ 较长/ ,/ 则/ 不能/ 及时/ 反映/ 节点/ 移动/ 变化/ ,/ 若/ 周期/ 较/ 短/ ,/ 会/ 增加/ 网络/ 开销/ ./ (/ 2/ )/ 消耗/ 网络资源/ ,/ 增加/ 分组/ 碰撞/ 的/ 几率/ ;/ 最后/ ,/ 建立/ 的/ 稳定/ 路由/ 缺乏/ 对/ 节点/ 移动/ 的/ 适应性/ ,/ 导致/ 处理/ 此类/ 路由/ 中断/ 的/ 滞后性/ ,/ 例如/ 前面/ 提到/ 的/ 路由/ 算法/ 都/ 存在/ 这个/ 问题/ ./ 针对/ 面向/ 稳定/ 的/ 路由/ 算法/ 中/ 存在/ 的/ 以上/ 问题/ ,/ 本文/ 首先/ 提出/ 了/ 一种/ 移动/ 自/ 适应/ 策略/ ,/ 然后/ 在/ 此基础/ 上/ 设计/ 了/ 一种/ 具有/ 移动/ 自/ 适应/ 特性/ 的/ 稳定性/ 路由/ (/ Motion/ -/ AdaptiveStableRouting/ ,/ MASR/ )/ 算法/ ./ 完成/ 的/ 主要/ 工作/ 有/ :/ (/ 1/ )/ 路由/ 建立/ 过程/ 中/ LET/ 的/ 双向/ 评估/ ;/ (/ 2/ )/ 节点/ 移动/ 触发/ 的/ 异步/ 通告/ 及/ LET/ 更新/ ;/ (/ 3/ )/ 定义/ 关键/ LET/ 域/ ,/ 并/ 基于/ 该域/ 决定/ 路由/ 维护/ 策略/ ;/ (/ 4/ )/ 通过/ 仿真/ 实验/ 研究/ 分析/ 了/ MASR/ 及其/ 移动/ 自/ 适应/ 策略/ 对于/ 路由/ 性能/ 的/ 影响/ ./ 2/ 链路/ 有效/ 时间/ LET/ 的/ 计算/ 随着/ GPS/ 的/ 普及/ ,/ 移动/ AdHoc/ 网络/ 节点/ 配备/ GPS/ 设备/ 不再/ 是/ 一种/ 经济负担/ ./ 利用/ GPS/ ,/ 节点/ 可以/ 获得/ 准确/ 的/ 位置/ 和/ 移动信息/ ,/ 由此/ 文献/ [/ 11/ ]/ 给出/ 了/ 两/ 节点/ 间/ 链路/ 有效/ 时间/ 的/ 计算方法/ ./ 如图/ 1/ 所示/ ,/ 令/ 两个/ 节点/ i/ 和/ j/ 的/ 传输/ 半径/ 为/ r/ ,/ 移动/ 速率/ 和/ 方向/ 分别/ 为/ (/ vi/ ,/ θ/ i/ )/ 和/ (/ vj/ ,/ θ/ j/ )/ ,/ 当前/ 坐标/ 分别/ 为/ (/ xi/ ,/ yi/ )/ 和/ (/ xj/ ,/ yj/ )/ ,/ 则/ LET/ 的/ 计算/ 如式/ (/ 1/ )/ 所示/ ./ LET/ =/ -/ (/ ab/ +/ cd/ )/ +/ (/ a2/ +/ c2/ )/ r2/ -/ (/ ad/ -/ bc/ )/ 这里/ Page33/ 移动/ 自/ 适应/ 关键技术/ 本文/ 提出/ 的/ 移动/ 自/ 适应/ 策略/ 主要/ 包括/ 3/ 个/ 关键技术/ :/ LET/ 的/ 双向/ 评估/ 、/ 异步/ 移动/ 通告/ 及/ LET/ 更新/ 和/ 基于/ 关键/ LET/ 域/ 的/ 多/ 径路/ 由/ 维护/ ./ 3.1/ LET/ 的/ 双向/ 评估/ 在/ 已有/ 的/ 利用/ LET/ 建立/ 稳定/ 路由/ 的/ 算法/ 中/ ,/ 通过/ RREQ/ 携带/ 转发/ 节点/ 的/ 移动信息/ ,/ 每个/ 接收/ 节点/ 计算/ 其/ 上游/ 链路/ 的/ LET/ ,/ 并/ 记录/ 经过/ 路径/ 上/ 的/ 最小/ LET/ ./ 在/ 本文/ 的/ 讨论/ 中/ ,/ 把/ 路径/ 上/ 的/ 最小/ LET/ 作为/ 这/ 条/ 路径/ 维持/ 时间/ 的/ 评价/ 参数/ ,/ 称为/ 路由/ 有效/ 时间/ (/ RouteExpirationTime/ ,/ RET/ )/ ./ 目的/ 节点/ 通过/ 比较/ 多个/ RREQ/ 记录/ 的/ RET/ ,/ 选择/ 其中/ RET/ 最大/ 的/ 路径/ 应答/ RREP/ ./ 而/ RREP/ 只是/ 沿着/ 相反/ 路径/ 逐跳/ 转发/ ,/ 当/ 到达/ 源/ 节点/ 后/ 即/ 建立/ 起/ 一条/ 相对/ 稳定/ 的/ 路由/ ./ 但是/ 为了/ 使/ 稳定/ 路由/ 自/ 适应/ 节点/ 的/ 移动/ ,/ 路径/ 上/ 的/ 每个/ 节点/ 都/ 需要/ 监测/ 其/ 下游/ 链路/ 的/ LET/ ,/ 因此/ 提出/ 了/ 一种/ 路由/ 建立/ 过程/ 中/ 的/ LET/ 双向/ 评估/ 策略/ ./ 基于/ RREQ/ 和/ RREP/ 的/ 转发/ 方向/ ,/ 此/ 策略/ 可以/ 分为/ 两个/ 过程/ :/ LET/ 的/ 前/ 向/ 评估/ 和/ LET/ 的/ 反向/ 评估/ ./ 其中/ LET/ 的/ 前/ 向/ 评估/ ,/ 是/ 为了/ 目的/ 节点/ 根据/ 最小/ LET/ 选择/ 最优/ 路径/ 应答/ RREP/ ;/ 而/ LET/ 的/ 反向/ 评估/ 是/ 为了/ 所/ 选/ 路径/ 上/ 的/ 节点/ 能够/ 获得/ 其/ 下游/ 链路/ 的/ LET/ (/ 这里/ 从源/ 节点/ 到/ 目的/ 节点/ 的/ 方向/ 为/ 下游/ 方向/ ,/ 反之/ 则/ 为/ 上游/ 方向/ )/ ./ 3.1/ ./ 1LET/ 的/ 前/ 向/ 评估/ 如图/ 2/ 所示/ ,/ 源/ 节点/ S/ 广播/ RREQ/ ,/ 此/ RREQ/ 中/ 记录/ 了/ 发送/ 节点/ S/ 的/ 移动信息/ (/ 位置/ 坐标/ 、/ 移动/ 的/ 速度/ 和/ 方向/ 角/ )/ 、/ 经过/ 路径/ 的/ RET/ (/ 初始/ RET/ =/ 0/ )/ 和/ 经过/ 的/ 路径/ 信息/ ./ 当/ 节点/ A/ 收到/ 此/ RREQ/ 后/ 获得/ 节点/ S/ 的/ 移动信息/ ,/ 按照/ 式/ (/ 1/ )/ 计算/ 其/ 上游/ 链路/ 1/ 的/ LET/ ,/ 然后/ 更新/ RREQ/ 中/ 的/ RET/ 域/ 和/ 移动信息/ 域/ ,/ 并/ 继续/ 广播/ 更新/ 后/ 的/ RREQ/ ./ 其它/ 中间/ 节点/ 接收/ RREQ/ 后/ 进行/ 相同/ 的/ 操作/ ./ 当/ 目的/ 节点/ D/ 收到/ 此/ RREQ/ ,/ 计算/ 其/ 上游/ 链路/ 4/ 的/ LET/ ,/ 然后/ 更新/ RET/ ,/ 并/ 缓存/ 此/ RREQ/ ./ 3.1/ ./ 2LET/ 的/ 反向/ 评估/ 如图/ 2/ 所示/ ,/ 目的/ 节点/ D/ 应答/ RREP/ ,/ 此/ RREP/ 中/ 记录/ 了/ 发送/ 节点/ D/ 的/ 移动信息/ 和/ 完整/ 的/ 路径/ 信息/ {/ S/ →/ A/ →/ B/ →/ C/ →/ D/ }/ ./ 当/ 节点/ C/ 收到/ 此/ RREP/ 后/ ,/ 按照/ 式/ (/ 1/ )/ 计算/ 其/ 下游/ 链路/ 4/ 的/ LET/ ,/ 然后/ 保存/ 其/ 下游/ 节点/ D/ 的/ 移动信息/ 和/ 下游/ 链路/ 4/ 的/ LET/ ,/ 最后/ 更新/ RREP/ 中/ 的/ 移动信息/ 域/ ,/ 并/ 根据/ 路径/ 信息/ 进行/ 转发/ ./ 其它/ 转发/ 节点/ 接收/ RREP/ 后/ 进行/ 相同/ 的/ 操作/ ./ 当源/ 节点/ S/ 收到/ 此/ RREP/ 后/ ,/ 计算/ 并/ 保存/ 其/ 下游/ 链路/ 1/ 的/ LET/ ,/ 同时/ 得到/ 可用/ 的/ 最优/ 路径/ ./ 3.2/ 异步/ 移动/ 通告/ 及/ LET/ 更新/ 在/ 已有/ 面向/ 稳定/ 的/ 路由/ 算法/ 中/ ,/ 研究/ 人员/ 或者/ 是/ 关注/ 于/ 如何/ 建立/ 稳定/ 路由/ 而/ 忽略/ 了/ 之后/ 节点/ 移动/ 对/ 路由/ 稳定性/ 的/ 影响/ ,/ 或者/ 是/ 采用/ 双向/ 周期/ 信息/ 交换/ 的/ 方式/ 获得/ 邻居/ 节点/ 变化/ 信息/ ./ 在/ 前/ 一/ 做法/ 中/ 稳定/ 路由/ 不能/ 适应/ 节点/ 的/ 移动/ ,/ 造成/ 路由/ 有效性/ 下降/ ;/ 而后/ 一种/ 做法/ 中/ ,/ 信息/ 的/ 交换/ 需要/ 同步/ ,/ 而且/ 在/ 不同/ 的/ 节点/ 移动/ 程度/ 下/ 交换/ 周期/ 难以确定/ ./ 因此/ ,/ 利用/ 节点/ 通过/ GPS/ 能够/ 获得/ 自己/ 移动/ 状态/ 的/ 特点/ ,/ 提出/ 了/ 一种/ 异步/ 移动/ 通告/ 及/ LET/ 更新/ 机制/ ./ 该/ 机制/ 的/ 基本/ 思想/ 是/ :/ 节点/ 自身/ 移动/ 状态/ 的/ 变化/ 触发/ 该/ 节点/ 向/ 其/ 邻居/ 节点/ 广播/ 通告/ ,/ 同时/ 若该/ 节点/ 是/ 某条/ 路由/ 的/ 构成/ 节点/ ,/ 则/ 还/ 需要/ 重新/ 计算/ 、/ 更新/ 其/ 下游/ 链路/ 的/ LET/ ./ 邻居/ 广播/ 通告/ 中/ 记录/ 了/ 通告/ 节点/ 最新/ 的/ 移动信息/ ,/ 当/ 邻居/ 节点/ 收到/ 通告/ 后/ ,/ 按照/ 式/ (/ 1/ )/ 重新/ 评估/ 和/ 更新/ 与/ 通告/ 节点/ 间/ 的/ LET/ ./ 如图/ 3/ (/ a/ )/ 所示/ ,/ 节点/ {/ 7/ ,/ 12/ }/ 在/ 某/ 一/ 时刻/ 发生/ 移动/ 状态/ 的/ 改/ Page4/ 变/ ,/ 则/ 分别/ 向/ 其/ 邻居/ 节点/ {/ 3/ ,/ 4/ ,/ 6/ ,/ 8/ }/ 和/ {/ 9/ ,/ 13/ }/ 广播/ 通告/ ./ 由于/ 节点/ 7/ 是/ 路由/ 15/ →/ 8/ →/ 7/ →/ 6/ →/ 13/ 的/ 构成/ 节点/ 之一/ ,/ 因此/ 需要/ 利用/ 保存/ 的/ 下游/ 节点/ 6/ 的/ 移动信息/ 重新/ 计算/ 其/ 下游/ 链路/ 7/ →/ 6/ 的/ LET/ 并/ 进行/ 更新/ ./ 在/ 收到/ 通告/ 后/ ,/ 这些/ 邻居/ 节点/ 分别/ 重新/ 计算/ 、/ 更新/ 与/ 通告/ 节点/ 间/ 的/ LET/ ,/ 并/ 保存/ 或/ 更新/ 通告/ 节点/ 的/ 移动信息/ ./ 而/ 实际上/ ,/ 只有/ 正在/ 被/ 路由/ 使用/ 的/ 节点/ 的/ 移动/ 改变/ 才/ 会/ 对/ 路由/ 稳定性/ 产生/ 影响/ ,/ 并且/ 每个/ 节点/ 只/ 负责/ 监测/ 其/ 下游/ 链路/ 的/ LET/ ./ 因此/ 进一步/ 给出/ 4/ 个/ 必要条件/ :/ (/ 1/ )/ 该/ 节点/ 发生/ 了/ 移动/ 状态/ 的/ 改变/ ;/ (/ 2/ )/ 该/ 节点/ 是/ 某条/ 路由/ 的/ 构成/ 节点/ ;/ (/ 3/ )/ 该/ 节点/ 是/ 通告/ 节点/ 在/ 路由/ 上/ 的/ 上游/ 节点/ :/ (/ 4/ )/ 该/ 节点/ 保持/ 最新/ 的/ 移动/ 状态/ 超过/ 某一/ 预设/ 时长/ T/ ./ 其中/ ,/ 必要条件/ (/ 4/ )/ 是/ 考虑/ 到/ 节点/ 在/ 移动/ 过程/ 中/ 可能/ 发生/ 暂时性/ 的/ 抖动/ ,/ 从而/ 引起/ 错误/ 的/ 通告/ 及/ LET/ 更新/ ./ 在/ 本文/ 后面/ 的/ 讨论/ 和/ 分析/ 中/ 暂时/ 没有/ 考虑/ 节点/ 的/ 移动/ 抖动/ ,/ 因此/ 设置/ T/ =/ 0s/ ./ 只有/ 同时/ 满足条件/ (/ 1/ )/ 、/ (/ 2/ )/ 、/ (/ 4/ )/ 的/ 节点/ 才/ 可以/ 向/ 其/ 邻居/ 广播/ 移动/ 通告/ ./ 并/ 重新/ 计算/ 、/ 更新/ 其/ 下游/ 链路/ 的/ LET/ ;/ 同样/ ,/ 只有/ 同时/ 满足条件/ (/ 2/ )/ 、/ (/ 3/ )/ 的/ 邻居/ 节点/ 才/ 接收/ 通告/ ,/ 并/ 重新/ 计算/ 、/ 更新/ 与/ 通告/ 节点/ 间/ 的/ LET/ ./ 如图/ 3/ (/ b/ )/ 所示/ ,/ 节点/ {/ 7/ ,/ 12/ }/ 改变/ 移动/ 状态/ ,/ 但是/ 只有/ 节点/ 7/ 是/ 路由/ 15/ →/ 8/ →/ 7/ →/ 6/ →/ 13/ 的/ 构成/ 节点/ ,/ 因此/ 只有/ 节点/ 7/ 进行/ 广播/ 通告/ ,/ 并/ 重新/ 计算/ 、/ 更新/ 其/ 下游/ 链路/ 7/ →/ 6/ 的/ LET/ ./ 而/ 节点/ 7/ 的/ 邻居/ 节点/ {/ 3/ ,/ 4/ ,/ 6/ ,/ 8/ }/ 都/ 会/ 监听/ 到/ 广播/ 通告/ ,/ 但是/ 由于/ 只有/ 节点/ 8/ 是/ 节点/ 7/ 在/ 路由/ 15/ →/ 8/ →/ 7/ →/ 6/ →/ 13/ 上/ 的/ 上游/ 节点/ ,/ 因此/ 只有/ 节点/ 8/ 重新/ 计算/ 、/ 更新/ 其/ 下游/ 链路/ 8/ →/ 7/ 的/ LET/ ,/ 同时/ 更新/ 保存/ 的/ 节点/ 7/ 的/ 移动信息/ ./ 通过/ 以上/ 描述/ 可以/ 看出/ ,/ 该/ 机制/ 具有/ 反应式/ 触发/ 、/ 主动/ 通告/ 、/ 资源/ 消耗/ 小/ 的/ 特点/ ./ 3.3/ 基于/ 关键/ LET/ 域/ 的/ 多/ 径路/ 由/ 维护/ 在/ 已有/ 的/ 多/ 径路/ 由/ 算法/ 中/ ,/ 源/ 节点/ 能够/ 获得/ 多条/ 路由/ ,/ 从而/ 可以/ 基于/ 主备/ 路由/ 策略/ ,/ 在/ 主要/ 路由/ 发生/ 中断/ 后/ ,/ 立即/ 启用/ 备份/ 路由/ 进行/ 维护/ ./ 而/ 面向/ 稳定/ 的/ 路由/ 算法/ 往往/ 选择/ 稳定性/ 最优/ 的/ 路径/ 作为/ 主要/ 路由/ ,/ 使得/ 传统/ 的/ 基于/ 主/ 备份/ 策略/ 的/ 多/ 径路/ 由/ 维护/ 失效/ ./ 因此/ ,/ 本文/ 提出/ 了/ 基于/ 关键/ LET/ 域/ 的/ 多/ 径路/ 由/ 维护/ 机制/ ,/ 该/ 机制/ 利用/ LET/ 的/ 可预测性/ 按/ 需地/ 建立/ 备份/ 路由/ ,/ 保证/ 了/ 主要/ 路由/ 失效/ 后/ 数据传输/ 的/ 稳定性/ 和/ 连续性/ ./ 3.3/ ./ 1/ 关键/ LET/ 域式/ 如下/ 关键/ LET/ 域/ (/ CriticalLETZone/ ,/ CLZ/ )/ 的/ 定义/ 通过/ CLZ/ 的/ 定义/ ,/ 将/ 整个/ LET/ 域/ (/ 0/ ,/ +/ )/ 分为/ 3/ 个/ 区间/ :/ (/ 0/ ,/ LETmin/ )/ 、/ [/ LETmin/ ,/ LETmax/ ]/ 和/ (/ LETmax/ ,/ +/ )/ ,/ 分别/ 称为/ 失效/ 区间/ 、/ 触发/ 区间/ (/ 即/ CLZ/ )/ 和/ 稳定/ 区间/ ./ 其中/ LETmin/ 的/ 取值/ 最少/ 应该/ 能够/ 保证/ 完成/ 一次/ 路由/ 建立/ 过程/ ,/ 而/ LETmax/ 的/ 取值/ 应该/ 限制/ 在/ 区间/ (/ LETmin/ ,/ 2/ ×/ LETmin/ ]/ 内/ ,/ 因为/ LETmax/ 越大/ ,/ 触发/ 备份/ 路由/ 建立/ 的/ 频率/ 就/ 越/ 高/ ,/ 造成/ 的/ 网络/ 开销/ 越大/ ./ 3.3/ ./ 2/ 基于/ CLZ/ 的/ 备份/ 路由/ 按/ 需/ 建立/ 机制/ 当/ 主要/ 路由/ 建立/ 过程/ 完成/ 后/ ,/ 路径/ 上除/ 目的/ 节点/ 外/ 的/ 其它/ 节点/ 开始/ 周期/ 监测/ 其/ 下游/ 链路/ 的/ LET/ ./ 一般/ 情况/ 下/ ,/ 各条/ 链路/ 的/ LET/ 都/ 应该/ 处于/ 稳定/ 区间/ ,/ 因此/ 如果/ 各个/ 节点/ 不/ 改变/ 移动/ 状态/ ,/ 则/ LET/ 会/ 随着/ 时间/ 的/ 推移/ 逐渐/ 变化/ ./ 当/ LET/ 逐渐/ 减小/ 进入/ 触发/ 区间/ 后/ ,/ 发现/ 此/ 状况/ 的/ 节点/ 要/ 通知/ 源/ 节点/ ,/ 由源/ 节点/ 启动/ 备份/ 路由/ 建立/ 过程/ (/ 与/ 主要/ 路由/ 建立/ 过程/ 相同/ )/ ./ 这里/ 有/ 两种/ 特殊/ 情况/ 需要/ 考虑/ :/ (/ 1/ )/ 若/ 节点/ 移动/ 速度/ 较/ 快/ ,/ 路由/ 中/ 某条/ 链路/ 的/ LET/ (/ LET/ / RET/ >/ 0/ )/ 可能/ 在/ 路由/ 建立/ 时/ 就/ 处于/ 触发/ 区间/ 或者/ 失效/ 区间/ ,/ 这/ 说明/ 在/ 当前/ 网络/ 状态/ 下/ 无法/ 建立/ 满足/ 稳定/ 区间/ 的/ 可用/ 路径/ ./ 此时/ 若/ 仍然/ 触发/ 备份/ 路由/ 建立/ ,/ 则/ 可能/ 造成/ 备份/ 路由/ 的/ 频繁/ 建立/ ,/ 因此/ 发生/ 这种/ 情况/ 时/ ,/ 不/ 允许/ 触发/ 备份/ 路由/ 的/ 建立/ ./ (/ 2/ )/ 若/ 节点/ 移动/ 状态/ 发生变化/ ,/ 可能/ 导致/ 与其/ 相关/ 的/ 链路/ 的/ LET/ 发生/ 跳变/ ./ 当/ LET/ 跳变/ 后/ 如果/ 处于/ 触发/ 区间/ ,/ 则/ 触发/ 源/ 节点/ 启动/ 备份/ 路由/ 建立/ ;/ 若/ 处于/ 失效/ 区间/ ,/ 则/ 不/ 触发/ 备份/ 路由/ 的/ 建立/ ,/ 当/ 路由/ 失效/ 后/ 按照/ 突发/ 路由/ 中断/ 进行/ 维护/ ./ 4MASR/ 算法/ 描述/ MASR/ 算法/ 采用/ 按/ 需/ 路由/ 的/ 方式/ ,/ 主要/ 包括/ 两个/ 部分/ :/ 路由/ 建立/ 和/ 路由/ 维护/ ./ 4.1/ 路由/ 建立/ 当/ 某个/ 节点/ 有/ 数据/ 要/ 发送/ 且/ 没有/ 有效/ 路由/ 时/ ,/ 此/ 节点/ (/ 源/ 节点/ )/ 广播/ 路由/ 请求/ (/ RREQ/ )/ 分组/ ,/ 开始/ 路由/ 建立/ 过程/ ./ 中间/ 节点/ 按照/ 转发/ 规则/ 继续/ 广播/ 此/ RREQ/ 分组/ ,/ 当/ 目的/ 节点/ 收到/ 此/ RREQ/ 后/ ,/ 按照/ RREQ/ 中/ 包含/ 的/ 路径/ 回送/ 路由/ 应答/ (/ RREP/ )/ 分组/ ./ Page5RREP/ 分组/ 以/ 单播/ 的/ 方式/ 逐跳/ 转发/ 至源/ 节点/ ,/ 当源/ 节点/ 收到/ 此/ RREP/ 后/ 获得/ 一条/ 有效/ 路由/ ,/ 完成/ 路由/ 建立/ ./ 算法/ 1/ 描述/ 了/ 一对/ 通信/ 节点/ 间/ 的/ 路由/ 建立/ 过程/ ./ 算法/ 1/ ./ 路由/ 建立/ 过程/ ./ Precondition/ :/ Neighborhoodsetofnodei/ :/ NiMinimumLETrecordedbynode/ :/ min/ _/ LETWaitingtimerforRREQ/ :/ RQ/ _/ TimerBEGIN/ :/ ThesourcenodesgeneratesandinitializesanewRREQ/ ,/ thensbroadcaststheRREQtoitsneighbornodesIFnoden/ (/ n/ ∈/ Nm/ )/ receivestheRREQfromnodemTHENrreq/ ./ RET/ =/ min/ (/ RET/ ,/ LETmn/ )/ ENDIFIFanodej/ (/ j/ ∈/ Ni/ )/ receivestheRREPfromnodeiTHENENDIFEND4/ ./ 2/ 路由/ 维护/ MASR/ 算法/ 的/ 路由/ 维护/ 过程/ 主要/ 包括/ 3/ 个/ 部分/ :/ 移动/ 通告/ 及/ LET/ 更新/ 、/ 突发性/ 的/ 路由/ 中断/ 维护/ 以及/ 可/ 预测/ 的/ 路由/ 中断/ 维护/ ./ 其中/ 突发性/ 的/ 路由/ 中断/ 维护/ 采用/ 本地/ 修复/ 和源/ 节点/ 路由/ 重建/ 的/ 维护/ 策略/ ;/ 而/ 可/ 预测/ 的/ 路由/ 中断/ 维护/ 则/ 采用/ 本文/ 提出/ 的/ 基于/ CLZ/ 的/ 多/ 径路/ 由/ 维护/ 策略/ ./ 算法/ 2/ 描述/ 了/ 以上/ 两种/ 路由/ 维护/ 的/ 具体/ 过程/ ./ 算法/ 2/ ./ 路由/ 维护/ 过程/ ./ Precondition/ :/ Neighborhoodsetofnodei/ :/ NiAcommunicationpairofnodes/ :/ s/ -/ dCriticalLETzone/ :/ [/ LETmin/ ,/ LETmax/ ]/ BEGIN/ // / 异步/ 移动/ 通告/ 及/ LET/ 更新/ / // IFnodenchangeitsmotionANDitisoncurrentac/ -/ tiverouteTHENENDIFIFnodem/ (/ m/ ∈/ Nn/ )/ receivestheMOTION/ _/ INFfromnodenANDitistheupstreamneighbornodeofnoncurrentactiverouteTHENENDIF/ // / 基于/ CLZ/ 的/ 备份/ 路由/ 建立/ / // nodekcheckstheLETofitsdownstreamlinkperi/ -/ odicallyIFLET/ ∈/ [/ LETmin/ ,/ LETmax/ ]/ THENENDIFIFnodelreceivesthePRE/ _/ DISCOVERYTHENforwardsthePRE/ _/ DISCOVERYtospre/ -/ discoversanalternativerouteENDIF/ // / 突发性/ 路由/ 中断/ 的/ 维护/ ,/ 假设/ 节点/ h/ 发现/ 链路/ IFDistance/ (/ h/ ,/ d/ )/ </ Distance/ (/ h/ ,/ s/ )/ THENPage6ELSEENDIFIFnodejreceivestheRRERTHENENDIFEND5/ 仿真/ 分析/ 本文/ 中/ 使用/ ns/ -/ 2.29/ 作为/ 仿真/ 工具/ ,/ 通过/ 仿真/ 实验/ 研究/ MASR/ 路由/ 算法/ 的/ 性能/ 以及/ 提出/ 的/ 移动/ 自/ 适应/ 策略/ 对/ 稳定性/ 路由/ 性能/ 的/ 影响/ ./ 仿真/ 中/ 分别/ 实现/ 了/ SWORP/ 、/ SWORP/ -/ C/ 和/ MASR3/ 种/ 基于/ 不同/ 策略/ 的/ 稳定性/ 路由/ 算法/ ,/ 并/ 根据/ 仿真/ 结果/ 对/ 它们/ 的/ 性能/ 进行/ 了/ 比较/ 分析/ ./ (/ 1/ )/ SWORP/ [/ 9/ ]/ 是/ 一种/ 基于/ 稳定性/ 加权/ 的/ 按/ 需/ 路由/ 算法/ ,/ 在/ 路由/ 建立/ 过程/ 中源/ 节点/ 广播/ RREQ/ 寻找/ 到达/ 目的/ 节点/ 的/ 有效/ 路由/ ,/ 并/ 通过/ 广播/ RREQ/ 统计/ 经过/ 路径/ 上/ 的/ 3/ 个/ 参数/ :/ RET/ 、/ EC/ (/ ErrorCount/ )/ 和/ HC/ (/ HopCount/ )/ ./ 当/ 目的/ 节点/ 收到/ 第一个/ RREQ/ 后/ 得到/ 第一条/ 有效/ 路径/ 并/ 计算/ 此/ 路径/ 上/ 的/ 参数/ 加权/ 平均值/ ,/ 同时/ 启动/ 等待/ 定时器/ ./ 当/ 等待/ 定时器/ 超时/ 后/ ,/ 从/ 收到/ 的/ 多个/ 条/ 路径/ 中/ 选择/ 其中/ 具有/ 最大/ 加权/ 平均值/ 的/ 路径/ 应答/ RREP/ ./ 当源/ 节点/ 收到/ 此/ RREP/ 后/ 完成/ 路由/ 建立/ 过程/ ./ 在/ 维护/ 过程/ 中/ 由/ 发现/ 链路/ 中断/ 的/ 节点/ 向源/ 节点/ 发送/ RERR/ ,/ 当源/ 节点/ 收到/ 此/ RERR/ 后/ 重新启动/ 路由/ 建立/ 过程/ ./ 在/ 仿真/ 中/ ,/ 分别/ 设置/ RET/ 、/ EC/ 和/ HC/ 的/ 加权/ 系数/ 为/ 1/ 、/ 0/ 和/ 0/ ./ (/ 2/ )/ SWORP/ -/ C/ 是/ 基于/ SWORP/ 实现/ 的/ ,/ 其/ 路由/ 建立/ 过程/ 与/ SWORP/ 相同/ ,/ 但是/ 在/ 路由/ 维护/ 中/ 使用/ 了/ 本文/ 提出/ 的/ 基于/ CLZ/ 的/ 多/ 径路/ 由/ 维护/ 策略/ ./ 仿真/ 中/ CLZ/ 设置/ 为/ [/ 1.5/ ,/ 2.5/ ]/ s/ ./ (/ 3/ )/ MASR/ 是/ 本文/ 提出/ 的/ 具有/ 移动/ 自/ 适应/ 特性/ 的/ 稳定性/ 路由/ 算法/ ./ 5.1/ 仿真/ 设置/ 仿真/ 中/ 设计/ 了/ 两组/ 实验/ 来/ 研究/ MASR/ 算法/ 的/ 性能/ :/ (/ 1/ )/ 网络/ 中/ 布置/ 50/ 个/ 移动/ 节点/ ,/ 设置/ 节点/ 最大/ 移动/ 速度/ 以/ 10m/ // s/ 为/ 步长/ 从/ 10m/ // s/ 逐渐/ 增加/ 到/ 50m/ // s/ ;/ (/ 2/ )/ 设置/ 节点/ 最大/ 移动/ 速度/ 为/ 50m/ // s/ ,/ 移动/ 节点/ 数目/ 以/ 10/ 个/ 为/ 步长/ 从/ 40/ 个/ 逐渐/ 增加/ 到/ 80/ 个/ ./ 因为/ 在/ RWP/ (/ RandomWayPoint/ )/ 移动/ 模型/ 中/ ,/ 随着/ 节点/ 移动/ 速度/ 的/ 增加/ ,/ 节点/ 移动/ 状态/ 的/ 变化/ 越/ 频繁/ ,/ 所以/ 选择/ RWP/ 来/ 模拟/ 节点/ 的/ 移动/ ./ 具体/ 的/ 仿真/ 参数设置/ 如表/ 1/ 所示/ ./ 节点/ 最小/ 移动/ 速度/ [/ 16/ ]/ 节点/ 最大/ 移动/ 速度/ 5.2/ 性能指标/ (/ 1/ )/ 分组/ 递交/ 率/ —/ —/ —/ 目的/ 节点/ 成功/ 接收/ 的/ 数据/ 分组/ 数目/ 与源/ 节点/ 发送/ 的/ 数据/ 分组/ 数目/ 的/ 比值/ ./ (/ 2/ )/ 控制/ 分组/ 总数/ —/ —/ —/ 在/ 一次/ 仿真/ 过程/ 中路/ 由/ 算法/ 使用/ 的/ 所有/ 控制/ 分组/ 的/ 总和/ ,/ 反映/ 了/ 网络/ 控制/ 开销/ 的/ 大小/ ./ 这些/ 控制/ 分组/ 分别/ 应用/ 于/ 路由/ 建立/ 过程/ ,/ 路由/ 维护/ 过程/ 以及/ 移动/ 通告/ 过程/ ./ (/ 3/ )/ 端到/ 端/ 时延/ —/ —/ —/ 所有/ 被/ 目的/ 节点/ 成功/ 接收/ 的/ 数据/ 分组/ 从源/ 节点/ 传输/ 到/ 目的/ 节点/ 经历/ 的/ 时延/ 的/ 期望值/ ./ 5.3/ 性能/ 分析/ 仿真/ 结果/ 中/ 的/ 每个/ 数据/ 点/ 都/ 是/ 取/ 10/ 次/ 仿真/ 的/ 平均值/ ,/ 同时/ 给出/ 了/ 置信度/ 为/ 0.95/ 时/ 的/ 置信区间/ ./ (/ 1/ )/ 分组/ 递交/ 率图/ 4/ 分别/ 给出/ 了/ 不同/ 最大/ 节点/ 移动/ 速度/ 和/ 节点/ 数目/ 时/ 3/ 种/ 路由/ 算法/ 分组/ 递交/ 率/ 的/ 比较/ ./ 如图/ 4/ (/ a/ )/ 所示/ ,/ 两种/ 稳定性/ 路由/ 算法/ 的/ 分组/ 递交/ 率/ 都/ 在/ 随着/ 节点/ 移动/ 速度/ 的/ 增大/ 而/ 下降/ ,/ 这/ 是因为/ 节点/ 移动/ 速度/ 的/ 增大/ 增加/ 了/ 链路/ 中断/ 的/ 概率/ ./ 同时/ 可以/ 看到/ SWORP/ 的/ 分组/ 递交/ 率/ 最低/ ,/ 下降/ 趋势/ 最/ 明显/ ,/ 而/ 能够/ 移动/ 自/ 适应/ 的/ MASR/ 的/ 分组/ 递交/ 率/ 最高/ ,/ 下降/ 趋势/ 最/ 平缓/ ,/ 这/ 是因为/ SWORP/ 只/ 在/ 路由/ 中断/ 后/ 才/ 进行/ 路由/ 维护/ ,/ 而且/ 如果/ 本地/ 维护/ 不/ 成功/ 就/ 只能/ 丢弃/ 缓存/ 的/ 数据/ ;/ SWORP/ -/ C/ 根据/ 路由/ 建/ Page7/ 立时/ 保存/ 的/ LET/ 可以/ 提前/ 建立/ 可用/ 路由/ ,/ 减少/ 了/ 因/ 路由/ 中断/ 造成/ 的/ 数据/ 丢失/ ;/ MASR/ 更进一步/ 地/ 使得/ LET/ 能够/ 自/ 适应/ 节点/ 移动/ 的/ 变化/ ,/ 在/ 移动/ 速度/ 逐渐/ 增加/ 的/ 情况/ 下/ 保证/ 了/ LET/ 的/ 准确性/ ,/ 增强/ 了/ 可/ 多/ 径路/ 由/ 维护/ 的/ 有效性/ ,/ 因此/ 更好/ 地/ 保证/ 了/ 数据传输/ 的/ 连续性/ ,/ 提高/ 了/ 数据/ 分组/ 的/ 递交/ 率/ ./ 如图/ 4/ (/ b/ )/ 所示/ ,/ 不同/ 路由/ 算法/ 的/ 分组/ 递交/ 率/ 随着/ 节点/ 数目/ 的/ 增加/ 而/ 增大/ ./ 当/ 节点/ 密度/ 较/ 小时/ (/ 图中/ 为/ 小于/ 50/ )/ ,/ 网络/ 的/ 连通率/ 不能/ 得到/ 很/ 好/ 的/ 保证/ ,/ 增加/ 了/ 路由/ 建立/ 不/ 成功/ 的/ 概率/ ,/ 因此/ 造成/ 了/ 分组/ 递交/ 率/ 的/ 快速/ 下降/ ./ 而/ 在/ 节点/ 密度/ 较大/ 时/ 随着/ 节点/ 数目/ 增加/ ,/ 分组/ 递交/ 率/ 的/ 增加/ 较缓/ ./ 同样/ ,/ MASR/ 获得/ 了/ 最好/ 的/ 分组/ 递交/ 率/ ,/ 而/ SWORP/ 的/ 分组/ 递交/ 率/ 是/ 最低/ 的/ ,/ 从而/ 说明/ 了/ MASR/ 可以/ 在/ 不同/ 节点/ 密度/ 的/ 网络/ 环境/ 中较/ 好/ 地/ 保证/ 传输/ 的/ 稳定性/ 和/ 连续性/ ./ (/ 2/ )/ 控制/ 分组/ 总数/ 图/ 5/ 分别/ 给出/ 了/ 不同/ 最大/ 节点/ 移动/ 速度/ 和/ 节点/ 数目/ 时/ 3/ 种/ 路由/ 算法/ 控制/ 分组/ 总数/ 的/ 比较/ ./ 如图/ 5/ (/ a/ )/ 所示/ ,/ 3/ 种/ 稳定性/ 路由/ 算法/ 的/ 控制/ 分组/ 都/ 在/ 随着/ 节点/ 移动/ 速度/ 的/ 增大/ 而/ 增加/ ./ 当/ 移动/ 速度/ 较/ 小时/ (/ 图中/ 为/ 小于/ 20m/ // s/ )/ ,/ 3/ 种/ 稳定性/ 路由/ 具有/ 相近/ 的/ 控制/ 分组/ 总数/ ,/ 这/ 是因为/ 移动/ 速度/ 较/ 小时/ ,/ 节点/ 移动/ 状态/ 的/ 变化/ 也/ 较/ 少/ ,/ 因此/ 移动/ 自/ 适应/ 策略/ 的/ 优势/ 没有/ 得到/ 体现/ ./ 但是/ 随着/ 节点/ 移动/ 速度/ 的/ 增大/ ,/ 具有/ 移动/ 自/ 适应/ 的/ 稳定性/ 路由/ MASR/ 使用/ 了/ 最/ 多/ 的/ 控制/ 分组/ ./ 而/ SWORP/ -/ C/ 则/ 使用/ 了/ 最少/ 的/ 控制/ 分组/ ,/ 但是/ 随着/ 节点/ 移动/ 速度/ 的/ 增加/ ,/ 节点/ 移动/ 的/ 变化/ 也/ 随之/ 增多/ ,/ 造成/ 路由/ 建立/ 时/ 节点/ 保存/ 的/ LET/ 不能/ 准确/ 反映/ 当前/ 链路/ 稳定性/ 情况/ ,/ 一定/ 程度/ 上/ 削弱/ 了/ 基于/ CLZ/ 的/ 多/ 径路/ 由/ 维护/ 的/ 有效性/ ./ 如图/ 5/ (/ b/ )/ 所示/ ,/ 3/ 种/ 路由/ 算法/ 的/ 控制/ 分组/ 随着/ 节点/ 数目/ 的/ 增加/ 而/ 增多/ ,/ 这/ 是因为/ 路由/ 建立/ 及/ 维护/ 中/ 使用/ 了/ 泛洪/ 操作/ ,/ 节点/ 数目/ 越多/ 被/ 转发/ 的/ 控制/ 分组/ 数目/ 就/ 越/ 大/ ./ 但是/ 随着/ 节点/ 密度/ 的/ 增加/ ,/ MASR/ 使用/ 了/ 最/ 多/ 的/ 控制/ 分组/ ,/ 而/ SWORP/ -/ C/ 使用/ 的/ 控制/ 分组/ 数目/ 比/ SWORP/ 略少/ ,/ 原因/ 分析/ 如下/ :/ 首先/ ,/ 虽然/ MASR/ 由于/ 更好/ 地/ 保证/ 了/ 路由/ 的/ 稳定性/ ,/ 从而/ 一定/ 程度/ 上/ 减少/ 了/ 维护/ 路由/ 中断/ 所/ 需/ 的/ 控制/ 分组/ 数目/ ,/ 但是/ 这种/ 提高/ 是/ 以/ 广播/ 移动/ 通告/ 为/ 代价/ 的/ ,/ 并且/ 这种/ 触发式/ 移动/ 通告/ 的/ 频率/ 随着/ 节点/ 速度/ 的/ 增加/ 而/ 增加/ ,/ 因此/ 在/ 移动/ 速度/ 较大/ 时/ 从/ 图/ 5/ 中/ 可以/ 看出/ 增加/ 的/ 控制/ 分组/ 数目/ 高于/ 减少/ 的/ 控制/ 分组/ 数目/ ;/ 其次/ ,/ SWORP/ -/ C/ 没有/ 使用/ 移动/ 通告/ 更新/ LET/ ,/ 反而/ 在/ SWORP/ 的/ 基础/ 上/ 采用/ 了/ 基于/ CLZ/ 的/ 多/ 径路/ 由维/ Page8/ 护/ 策略/ ,/ 由此/ 减少/ 了/ 路由/ 维护/ 的/ 次数/ ,/ 从而/ 减少/ 了/ 维护/ 分组/ 数目/ ./ (/ 3/ )/ 端到/ 端/ 时延/ 图/ 6/ 分别/ 给出/ 了/ 不同/ 最大/ 节点/ 移动/ 速度/ 和/ 节点/ 数目/ 时/ 3/ 种/ 路由/ 算法/ 端到/ 端/ 时延/ 的/ 比较/ ./ 如图/ 6/ (/ a/ )/ 所示/ ,/ 3/ 种/ 稳定性/ 路由/ 算法/ 的/ 端/ 到/ 端/ 时延/ 都/ 在/ 随着/ 节点/ 移动/ 速度/ 的/ 增大/ 而/ 增加/ ./ 但是/ 具有/ 移动/ 自/ 适应/ 的/ 稳定性/ 路由/ 算法/ MASR/ 获得/ 了/ 最小/ 的/ 时延/ ,/ 而/ SWORP/ 则/ 获得/ 了/ 最大/ 的/ 时延/ ,/ 这/ 是因为/ MASR/ 最好/ 地/ 保证/ 了/ 数据传输/ 的/ 稳定性/ 和/ 连续性/ ,/ 即使/ 随着/ 节点/ 移动/ 速度/ 的/ 增加/ 导致/ 了/ 节点/ 移动/ 变化/ 频繁/ ,/ MASR/ 也/ 能够/ 及时/ 地/ 更新/ LET/ ,/ 使得/ 基于/ CLZ/ 的/ 多/ 径路/ 由/ 维护/ 能够/ 有效/ 地/ 实施/ ,/ 保证/ 了/ 在/ 路由/ 中断/ 前能/ 把/ 数据/ 逐渐/ 转移/ 到/ 新路/ 由/ 上/ ;/ SWORP/ 虽然/ 在/ 路由/ 建立/ 时/ 考虑/ 了/ LET/ ,/ 但是/ 在/ 数据传输/ 过程/ 中/ 没有/ 采用/ 任何/ 增强/ 传输/ 连续性/ 和/ 稳定性/ 的/ 策略/ ,/ 因此/ 当/ 路由/ 中断/ 时/ ,/ 造成/ 了/ 大量/ 的/ 数据/ 等待/ 建立/ 替换/ 路由/ ,/ 而/ SWORP/ -/ C/ 在/ SWORP/ 基础/ 上/ 使用/ 了/ 基于/ CLZ/ 的/ 多/ 径路/ 由/ 维护/ ,/ 能够/ 一定/ 程度/ 上/ 提高/ 数据传输/ 时/ 的/ 连续性/ ,/ 减小/ 因为/ 路由/ 中断/ 造成/ 的/ 数据/ 等待/ ./ 如图/ 6/ (/ b/ )/ 所示/ ,/ 3/ 种/ 稳定性/ 路由/ 算法/ 的/ 端/ 到/ 端/ 时延/ 都/ 随着/ 节点/ 数目/ 的/ 增加/ 而/ 减小/ ./ 当/ 节点/ 数目/ 较/ 少时/ ,/ 会/ 影响/ 网络/ 的/ 连通性/ ,/ 造成/ 数据/ 需要/ 等待/ 有效/ 路由/ 的/ 建立/ ,/ 从而/ 增加/ 端到/ 端/ 时延/ ,/ 而/ 随着/ 节点/ 数目/ 的/ 增加/ ,/ 端到/ 端/ 时延/ 的/ 减少/ 趋势/ 逐渐/ 变缓/ ./ 同时/ ,/ 由于/ MASR/ 对于/ 节点/ 移动/ 变化/ 的/ 自适应性/ ,/ 获得/ 了/ 最小/ 的/ 端/ 到/ 端/ 时延/ ,/ SWORP/ -/ C/ 次之/ ,/ 而/ SWORP/ 由于/ 在/ 路由/ 建立/ 完成/ 后/ ,/ 就/ 不再/ 考虑/ 路由/ 的/ 稳定性/ 问题/ ,/ 所以/ 获得/ 了/ 最大/ 的/ 端/ 到/ 端/ 时延/ ./ 6/ 结束语/ 节点/ 移动/ 是/ 影响/ MANETs/ 路由/ 性能/ 的/ 主要/ 因素/ 之一/ ,/ 本文/ 在/ 分析/ MANETs/ 中/ 已有/ 稳定性/ 路由/ 的/ 基础/ 上/ ,/ 针对/ 节点/ 移动/ 对于/ 路由/ 稳定性/ 产生/ 的/ 影响/ ,/ 提出/ 了/ 一种/ 具有/ 移动/ 自/ 适应/ 的/ 稳定性/ 路由/ 算法/ MASR/ ./ 该/ 算法/ 通过/ 3/ 个/ 关键技术/ 保证/ 了/ 路由/ 在/ 数据传输/ 的/ 稳定性/ 和/ 连续性/ ./ 通过/ 大量/ 的/ 仿真/ 实验/ 验证/ 了/ 提出/ 的/ MASR/ 算法/ 及其/ 关键技术/ 能够/ 在/ 节点/ 移动/ 变化/ 频繁/ 的/ 网络/ 环境/ 中/ 进一步提高/ 分组/ 递交/ 率/ ,/ 减少/ 分组/ 传输/ 延迟/ ./ 虽然/ MASR/ 的/ 控制/ 开销/ 有所增加/ ,/ 但是/ 却/ 使/ 路由/ 的/ 性能/ 得到/ 了/ 整体/ 的/ 提高/ ,/ 验证/ 了/ MASR/ 算法/ 的/ 有效性/ ./ 在/ 下/ 一步/ 工作/ 中/ ,/ 我们/ 将/ 针对/ 如何/ 有效/ 控制/ MASR/ 算法/ 的/ 路由/ 开销/ 进行/ 研究/ ,/ 希望/ 能够/ 在/ 不/ 降低/ 路由/ 稳定性/ 和/ 连续性/ 的/ 同时/ ,/ 获得/ 更少/ 的/ 路由/ 开销/ ./ 

