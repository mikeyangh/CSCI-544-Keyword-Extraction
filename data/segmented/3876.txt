Page1/ 面向/ CGRA/ 循环/ 流水/ 映射/ 的/ 数据/ 并行/ 优化/ 杨子煜/ 1/ )/ 严明/ 2/ )/ 王/ 大伟/ 1/ )/ 李思昆/ 1/ )/ 1/ )/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 2/ )/ (/ 西北/ 核技术/ 研究所/ 西安/ 710024/ )/ 摘要/ 数据/ 密集型/ 应用/ 中/ 的/ 核心/ 循环/ 消耗/ 了/ 程序/ 的/ 大量/ 执行/ 时间/ ./ 如何/ 实现/ 核心/ 循环/ 在/ 粗粒度/ 可/ 重构/ 体系结构/ (/ CGRA/ )/ 上/ 的/ 有效/ 映射/ 仍/ 是/ 当前/ 研究/ 领域/ 的/ 难点/ ./ 为了/ 在/ CGRA/ 上/ 最大/ 程度/ 开发/ 应用/ 并行性/ ,/ 降低/ 循环/ 访存/ 开销/ ,/ 提高/ 硬件资源/ 利用率/ ,/ 文中/ 提出/ 一种/ 新颖/ 的/ 面向/ CGRA/ 循环/ 流水/ 映射/ 的/ 数据/ 并行/ 优化/ 方法/ ./ 通过/ 定义/ 一种/ 新/ 的/ 可/ 重构/ 计算/ 模型/ TMGC2/ 以/ 实现/ 对/ 循环/ 的/ 多条/ 数据/ 流水线/ 并行/ 加速/ ./ 为/ 避免/ 并行/ 化/ 执行/ 带来/ 的/ 额外/ 存储体/ 冲突/ 问题/ 影响/ CGRA/ 执行/ 性能/ ,/ 为/ 后续/ 循环/ 映射/ 创造/ 良好/ 的/ 数据/ 条件/ ,/ 引入/ 存储体/ 消除/ 策略/ 对/ 数据/ 进行/ 重组/ ,/ 并/ 结合/ 数据/ 重用/ 图/ 实现/ 数据/ 并行/ 优化/ ./ 实验/ 表明/ ,/ 采用/ 文中/ 方法/ 对/ 已有/ CGRA/ 循环/ 流水/ 映射/ 方法/ 进行/ 优化/ ,/ 可以/ 提高/ 37.2/ %/ 的/ 数据/ 吞吐量/ 及/ 41.3/ %/ 的/ 资源/ 利用率/ ./ 关键词/ 可/ 重构/ 计算/ ;/ 数据/ 密集型/ 应用/ ;/ 数据/ 重组/ ;/ 数据/ 重用/ ;/ 循环/ 映射/ ;/ 粗粒度/ 可/ 重构/ 体系结构/ 1/ 引言/ 可/ 重构/ 计算/ 体系结构/ 现已/ 在/ 嵌入式/ 系统/ 领域/ 被/ Page2/ 结构/ 所/ 不/ 具备/ 的/ 可编程/ 能力/ ./ 相对/ 于/ 传统/ 计算/ 模式/ ,/ 可/ 重构/ 体系结构/ 具有/ 高性能/ 、/ 高效率/ 和/ 可编程/ 特性/ ,/ 非常/ 适于/ 对/ 性能/ 和/ 功耗/ 要求/ 均/ 比较/ 苛刻/ 的/ 嵌入式/ 数据/ 密集型/ 应用/ 的/ 处理/ ,/ 如/ 图像压缩/ 、/ 模式识别/ 和/ 数字/ 信号处理/ 等/ ./ 与/ 细粒度/ 可/ 重构/ 体系结构/ (/ 如/ FPGA/ )/ 相比/ ,/ 粗粒度/ 可/ 重构/ 体系结构/ (/ Coarse/ -/ GrainedReconfigurableArchitecture/ ,/ CGRA/ )/ 采用/ 存储/ 与/ 计算/ 分离/ 的/ 思想/ ./ 在/ 计算/ 方面/ ,/ CGRA/ 由大/ 粒度/ 的/ 处理单元/ (/ ProcessingElement/ ,/ PE/ )/ 阵列/ 构成/ ,/ 实行/ 集中式/ 功能/ 配置管理/ ,/ 提供/ 强大/ 的/ 计算能力/ ,/ 可/ 实现/ 更快/ 的/ 配置/ 速度/ 和/ 更好/ 的/ 执行/ 加速/ ./ 在/ 存储/ 方面/ ,/ 采用/ 层次化/ 的/ 存储/ 结构/ ,/ 对/ 应用/ 加速/ 执行/ 时/ 可/ 实行/ 3/ 个/ 层次/ 的/ 并行/ :/ 指令/ 级/ 并行/ 、/ 数据/ 级/ 并行/ 和/ 任务/ 级/ 并行/ ,/ 提供/ 了/ 更/ 大/ 的/ 应用/ 映射/ 优化/ 空间/ [/ 1/ ]/ ./ 但/ 由于/ 数据/ 密集型/ 应用/ 通常/ 包含/ 大量/ 循环/ ,/ CGRA/ 处理/ 这些/ 循环/ 时/ 存在/ 大量/ PE/ 与/ 数据/ 存储体/ (/ DataMemoryBank/ ,/ DMB/ )/ ,/ 以及/ 数据/ 存储体/ 间/ 的/ 通信/ 操作/ 和/ 访存/ 冲突/ ,/ 从而/ 严重/ 影响/ CGRA/ 的/ 执行/ 性能/ ,/ 降低/ 了/ 应用/ 加速/ 效率/ ./ 已有/ 大量/ 研究/ 工作/ 针对/ CGRA/ 应用/ 映射/ 进行/ 优化/ [/ 2/ -/ 5/ ]/ ,/ 但/ 主要/ 通过/ 对/ 应用/ 本身/ 进行/ 复杂/ 的/ 循环/ 转换/ 和/ 调度/ 实现/ 并行/ 和/ 加速/ ,/ 映射/ 过程/ 较为/ 繁琐/ 且/ 资源/ 利用率/ 不高/ ./ 为了/ 在/ CGRA/ 上/ 最大/ 程度/ 开发/ 应用/ 并行性/ ,/ 降低/ 循环/ 访存/ 开销/ ,/ 提高/ 硬件资源/ 利用率/ ,/ 本文/ 提出/ 一种/ 新颖/ 的/ 面向/ CGRA/ 循环/ 流水/ 映射/ 的/ 数据/ 并行/ 优化/ 方法/ ./ 文中/ 首先/ 借鉴/ 单指令/ 多数据流/ (/ SIMD/ )/ 思想/ ,/ 利用/ 数据流/ 驱动/ ,/ 构建/ 多个/ 可/ 重构/ 数据/ 流水线/ (/ DataPipeline/ ,/ DP/ )/ 灵活/ 组合/ 的/ 可变/ 宏/ 粒度/ CGRA/ 计算/ (/ TransformableMacroGranularityCGRAComputing/ ,/ TMGC2/ )/ 模型/ ,/ 以/ 实现/ 不同/ 领域/ 数据/ 密集型/ 应用/ 的/ 多/ 粒度/ 映射/ ./ 随后/ 针对/ 循环/ 映射/ 过程/ 中/ 的/ 访存/ 问题/ ,/ 根据/ 循环/ 迭代/ 的/ 数据/ 复用/ 关系/ 进行/ 数据/ 重组/ (/ DataReorgani/ -/ zation/ ,/ DR/ )/ 以/ 避免/ 存储体/ 冲突/ ./ 该/ 方法/ 通过/ 对/ 循环/ 数据/ 进行/ 重组/ 以/ 实现/ CGRA/ 应用/ 映射/ 时/ 的/ 数据/ 并行/ 优化/ ,/ 改进/ 了/ CGRA/ 存储体/ 局部性/ ,/ 有利于/ 消除/ 数据/ 密集型/ 应用/ 的/ 访存/ 瓶颈/ ,/ 同时/ 支持/ 后续/ 循环/ 流水/ 化/ 映射/ ,/ 提高/ 了/ CGRA/ 计算/ 及/ 存储/ 效率/ ./ 本文/ 的/ 主要/ 创新/ 点/ 如下/ :/ (/ 1/ )/ 提出/ 了/ 一种/ 可变/ 的/ 宏/ 粒度/ CGRA/ 计算/ 模型/ TMGC2/ ./ 与/ 已有/ 可/ 重构/ 计算/ 模型/ 面向/ 整个/ PE/ 阵列/ 考虑/ 应用/ 映射/ 不同/ ,/ 该/ 模型/ 支持/ 根据/ 不同/ 应用/ 的/ 映射/ 方案/ ,/ 构建/ 相应/ 数目/ 的/ 多条/ PE/ 数据/ 流水线/ ,/ 实现/ 了/ CGRA/ 灵活/ 的/ 配置/ ./ 通过/ 多条/ 流水线/ 并行执行/ ,/ 可/ 支持/ 循环/ 迭代/ 间/ 并行处理/ ,/ 从而/ 提高/ 资源/ 利用率/ ./ (/ 2/ )/ 提出/ 了/ 一种/ 发掘/ 循环/ 迭代/ 数据/ 重用/ 的/ 存储体/ 冲突/ 消除/ (/ MemoryBankConflictsEliminate/ ,/ MBCE/ )/ 算法/ ./ 结合/ 数据/ 重组/ DR/ 和/ 数据/ 重用/ 图/ 等/ 方法/ 重新/ 组织/ 循环/ 的/ 数据/ 访问/ 方式/ 实现/ 存储/ 感知/ 的/ 数据/ 并行/ (/ Memory/ -/ awareDataParallelism/ ,/ MDP/ )/ 优化/ ,/ MDP/ 方法/ 实现/ 了/ CGRA/ 循环/ 映射/ 的/ 数据/ 并行/ 优化/ ,/ 消除/ 了/ CGRA/ 访存/ 瓶颈/ ,/ 提高/ 了/ 数据处理/ 的/ 吞吐量/ ./ (/ 3/ )/ 结合/ TMGC2/ 模型/ ,/ 文中/ 提出/ 的/ 数据/ 并行/ 优化/ 方法/ 可以/ 有效/ 改善/ 后续/ CGRA/ 循环/ 流水/ 映射/ 性能/ ./ 结合/ 已有/ 循环/ 自流水/ LPKM/ 映射/ 方法/ [/ 6/ ]/ ,/ 采用/ 文中/ 数据/ 优化/ 方法/ 后/ 的/ CGRA/ 应用/ 映射/ 的/ 资源/ 利用率/ 提高/ 了/ 41.3/ %/ ,/ 同时/ 数据/ 吞吐量/ 提高/ 了/ 26.7/ %/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 研究/ 工作/ ;/ 第/ 3/ 节/ 讲述/ 了/ TMGC2/ 模型/ 及/ 应用/ 映射/ 过程/ ;/ 第/ 4/ 节/ 分析/ 了/ CGRA/ 存储/ 冲突/ 并/ 给出/ 数据/ 并行/ 优化/ 方法/ MDP/ ;/ 第/ 5/ 节/ 给出/ 了/ 结合/ MDP/ 的/ 循环/ 流水/ 映射/ 实现/ 并/ 进行/ 了/ 实验/ 评测/ ;/ 最后/ 在/ 第/ 6/ 节对/ 本文/ 进行/ 了/ 总结/ ./ 2/ 相关/ 工作/ 随着/ 半导体/ 制造/ 工艺/ 的/ 发展/ ,/ 处理器/ 芯片/ 的/ 性能/ 提升/ 由/ 依靠/ 深度/ 流水/ 来/ 提升/ 流水线/ 工作频率/ 转向/ 依靠/ 片上/ 资源/ 扩展/ 来/ 增加/ 内核/ 数量/ ./ 处理器/ 片内/ 并行性/ 也/ 因此/ 在/ 传统/ 的/ 指令/ 级/ 并行/ 基础/ 上/ ,/ 增加/ 了/ 多/ 核/ 线程/ 级/ 并行/ 和/ 数据/ 级/ 并行/ ./ 对于/ 数据/ 密集型/ 应用/ 如/ 多媒体/ 处理/ 、/ 科学计算/ 等/ 程序/ ,/ 主要/ 考虑/ 针对/ 其中/ 的/ 循环/ 进行/ 加速/ 以/ 扩展/ 数据/ 并行性/ 来/ 获得/ 程序执行/ 性能/ 的/ 提升/ ./ 在/ 体系结构/ 方面/ ,/ 现已/ 有/ 大量/ 采用/ SIMD/ 技术/ 的/ 嵌入式/ 系统/ ,/ 通过/ 对/ 硬件/ 运算/ 单元/ 进行/ 并行/ 扩充/ ,/ 提高/ 流水线/ 的/ 数据处理/ 能力/ ,/ 如/ ARMNEONTM/ ①/ 、/ EStarIII/ [/ 7/ ]/ 等/ ./ 但/ 在/ 可/ 重构/ 计算/ 领域/ 类似/ SIMD/ 执行/ 机制/ 的/ 体系结构/ 则/ 有/ ADRES/ [/ 5/ ]/ 、/ MorphoSys/ [/ 8/ ]/ 和/ IMAPCAR/ [/ 9/ ]/ 等/ ./ 其中/ ADRES/ 包括/ 一个二维/ 可/ 重构/ PE/ 阵列/ 和/ 一个/ VLIW/ 主控/ 处理器/ ./ 在/ 对/ 应用程序/ 进行/ 处理/ 时/ ,/ 首先/ 对/ 程序/ 进行/ 划分/ ,/ 随后/ 进行/ 模/ 调度/ 以便/ 将/ 核心/ 计算/ 任务/ 映射/ 到/ 可/ 重构/ 阵列/ 上/ 各个/ PE/ 并行执行/ ./ 和/ ADRES/ 相似/ ,/ MorphoSys/ 采用/ 主控/ RISC/ 处理器/ 与/ 可/ 重构/ 阵列/ 紧/ 耦合/ 的/ 方式/ ,/ 其/ 可/ 重构/ 单元/ 阵列/ 可/ 通过/ 更改/ 软件/ 配置/ ,/ 使得/ 多个/ 单元/ 按照/ SIMD/ 方式/ 执行/ ,/ 而/ 单元/ 间通/ ①/ ARM/ ./ Neon/ [/ EB/ // OL/ ]/ ./ http/ :/ // // www/ ./ arm/ ./ com/ // products/ // Page3/ 过/ 可/ 配置/ 网络/ 实现/ 多种/ 数据交换/ 模式/ ./ IMAPCAR/ 包括/ 128/ 个/ 处理单元/ ,/ 采用/ 4/ 路/ VLIW/ 架构/ 对/ 数据/ 进行/ 并行处理/ ,/ 通过/ 严格/ 限制/ 单元/ 与/ 存储体/ 间/ 的/ 数据/ 传输方式/ 来/ 实现/ 一对一/ 访存/ 从而/ 实现/ SIMD/ 并行执行/ ./ 但/ 这些/ 结构/ 在/ 应用/ 映射/ 时均/ 需要/ 复杂/ 的/ 循环/ 转换/ 优化/ 方法/ 以/ 适应/ 目标/ 硬件/ ,/ 且/ 由于/ 重构/ 粒度/ 固定/ ,/ 对于/ 不同/ 数据/ 驱动/ 特征/ 的/ 应用/ 需要/ 更换/ 不同/ 的/ 映射/ 优化/ 方法/ ,/ 难以实现/ 应用/ 自动/ 映射/ ./ 而/ LEAP/ [/ 10/ ]/ 将/ 流水线/ 并行执行/ 和/ 数据/ 驱动/ 执行/ 紧密结合/ ./ 其/ 采用/ 分布式/ 循环/ 控制/ ,/ 实现/ 固定/ 指令/ 多数据流/ 的/ 执行/ 模式/ ,/ 同时/ 充分考虑/ 循环/ 时/ 的/ 数据/ 重用/ ,/ 减轻/ 高/ 流水线/ 吞吐/ 率/ 对/ 存储/ 带宽/ 的/ 压力/ ./ 但/ LEAP/ 结构/ 假设/ 处理单元/ 所/ 需/ 数据/ 已/ 存在/ 于/ 对应/ 的/ 数据/ 存储体/ 中/ ,/ 未/ 考虑/ 存储/ 延迟/ ,/ 因而/ 本文/ 主要/ 基于/ 对/ 其/ 计算/ 模型/ 进行/ 扩展/ 得到/ TMGC2/ 模型/ 以/ 解决/ 存储体/ 冲突/ 等/ 问题/ ,/ 实现/ 数据/ 并行/ 优化/ ./ 在/ 映射/ 策略/ 方面/ ,/ 大多数/ 已有/ 方法/ 只/ 考虑/ 了/ 计算/ 映射/ [/ 5/ -/ 6/ ,/ 11/ -/ 12/ ]/ ./ 如王/ 大伟/ 等/ 人/ [/ 6/ ]/ 针对/ LEAP/ 采用/ LKPM/ 方法/ 实现/ 循环/ 的/ 流水/ 化/ 自动/ 执行/ 并/ 在/ 映射/ 目标/ 函数/ 中/ 考虑/ 了/ 存储资源/ 约束/ ,/ 但/ 未能/ 考虑/ 循环/ 依赖/ 关系/ 对/ 数据/ 访问/ 的/ 影响/ ;/ Yoon/ 等/ 人/ [/ 11/ ]/ 采用/ SPKM/ 方法/ 支持/ CGRA/ 上/ 应用/ 的/ 自动/ 映射/ ,/ 并/ 获得/ 了/ 较/ 高/ 资源/ 利用率/ ,/ 但/ 其/ 并未/ 考虑/ 通过/ 优化/ 存储/ 提升/ 数据/ 密集型/ 应用/ 性能/ ;/ Cardoso/ [/ 12/ ]/ 讨论/ 了/ 循环/ 自流水/ 在/ 可/ 重构/ 硬件/ 上/ 的/ 实现/ ,/ 提高/ 了/ 循环/ 吞吐/ 率/ ,/ 但/ 尚未/ 考虑/ 循环/ 中/ 的/ 数组/ 依赖/ 关系/ ./ 目前/ 针对/ CGRA/ 存储系统/ 的/ 数据/ 优化/ 研究/ 得/ 还/ 较/ 少/ ./ Dimitroulakos/ 等/ 人/ [/ 13/ ]/ 提出/ 了/ 一种/ 在/ PE/ 间/ 重用/ 数据/ 的/ 路由/ 转发/ 机制/ ,/ 以/ 减少/ PE/ 对/ CGRA/ 局部/ 存储/ 的/ 访问/ ;/ Kim/ 等/ 人/ [/ 14/ ]/ 改进/ 了/ 文献/ [/ 13/ ]/ 中/ 方法/ ,/ 在/ 循环/ 粒度/ 的/ 数据流/ 图上/ 添加/ 数据/ 重用/ 边/ 并/ 减少/ 访存/ 节点/ 数量/ ,/ 随后/ 采用/ 启发式/ 模/ 调度/ 算法/ 进行/ 映射/ ./ 同时/ Kim/ 等/ 人/ [/ 15/ ]/ 提出/ 了/ 以/ SIMD/ 思想/ 实现/ CGRA/ 数据/ 映射/ 的/ 方法/ 图/ 1CGRA/ 传统/ 计算/ 模型/ 与/ TMGC2/ 模型/ 映射/ 比较/ 并/ 比较/ 了/ 数据/ 不同/ 存储/ 方式/ 对/ 循环/ 迭代/ 映射/ 的/ 影响/ ,/ 但/ 其/ 仅限于/ 定性描述/ ,/ 未/ 考虑/ CGRA/ 存储/ 层次/ 且/ 缺乏/ 具体/ 的/ 数据/ 并行/ 化/ 算法/ 细节/ ./ 本文/ 所/ 提出/ 的/ MDP/ 算法/ 着眼于/ 循环/ 数据/ 并行/ 优化/ ,/ 通过/ 对/ CGRA/ 存储体/ 冲突/ 的/ 判别/ 和/ 消除/ ,/ 在/ 不/ 影响/ 计算/ 映射/ 性能/ 的/ 前提/ 下/ 实现/ 高效/ 的/ 数据/ 映射/ ./ 3TMGC2/ 模型/ 下/ 的/ 应用/ 映射/ 数据/ 密集型/ 应用/ 通常/ 有/ 较/ 高/ 的/ 数据/ 吞吐量/ 要求/ ./ 有效/ 映射/ 这些/ 应用/ ,/ 尤其/ 是/ 对/ 循环/ 等/ 一些/ 关键/ 代码/ 块/ 进行/ 并行/ 优化/ ,/ 是/ CGRA/ 能否/ 高效/ 执行/ 的/ 关键/ ./ 由于/ CGRA/ 的/ 性能/ 主要/ 取决于/ 其/ 计算/ 模型/ 和/ 应用/ 映射/ 策略/ ,/ 因此/ 不仅仅/ 需要/ 对/ 应用/ 的/ 关键/ 代码/ 块/ 进行/ 转换/ 与/ 优化/ ,/ 更/ 需要/ 定义/ 高效/ 的/ 计算/ 模型/ ,/ 以/ 充分利用/ CGRA/ 有限/ 的/ 计算/ 及/ 存储资源/ ,/ 以/ 满足/ 系统/ 约束/ 和/ 应用/ 需求/ ./ 3.1/ 面向/ CGRA/ 的/ 应用/ 映射/ 如图/ 1/ (/ a/ )/ 所示/ ,/ CGRA/ 体系结构/ 主要/ 由/ 处理单元/ (/ PE/ )/ 阵列/ 、/ 存储系统/ 和/ 接口/ 控制器/ 3/ 部分/ 构成/ ./ 以/ LEAP/ 为例/ ,/ 其/ 计算/ 映射/ 主要/ 由/ 具有/ 数据流/ 计算/ 特征/ 的/ PE/ 二维/ 阵列/ 完成/ ./ 阵列/ 内部/ 单元/ 分为/ 用于/ 循环/ 控制/ 和/ 存储/ 访问控制/ 的/ mPE/ (/ memoryProcessingElement/ )/ 和/ 用于/ 计算/ 加速/ 的/ cPE/ (/ com/ -/ putingProcessingElement/ )/ ,/ 各/ 单元/ 由/ 互联网络/ 相连/ ;/ 数据/ 映射/ 由/ 外部/ 存储/ (/ ExternalMemory/ ,/ EM/ )/ 、/ 多个/ 数据/ 存储体/ (/ DataMemoryBank/ ,/ DMB/ )/ 和/ 若干/ 局部/ 配置/ 存储/ (/ LocalMemory/ ,/ LM/ )/ 组成/ 的/ 存储系统/ 配合/ mPE/ 实现/ ;/ 接口/ 控制器/ 则/ 负责/ 连接/ 主控/ 处理器/ 核/ 、/ 外部/ 存储/ 和/ 可/ 重构/ 处理单元/ 阵列/ ,/ 用于/ 加载/ 配置/ 信息/ 、/ 传输数据/ 以及/ 传递/ 主控/ 处理器/ 指令/ ./ cPE/ 由/ 配置/ 存储器/ 和/ 指令寄存器/ 指导/ 完成/ 特定/ 功能/ 的/ 计算/ 操作/ 并/ 将/ 结果/ 输出/ 至/ 指定/ 目标/ ./ mPE/ 与/ DMB/ 连接/ ,/ Page4/ 负责/ 将/ 数据/ 从/ DMB/ 载入/ 并/ 传送/ 至/ cPE/ 或/ 将/ 计算结果/ 存储/ 至/ DMB/ ./ 具体/ 的/ 体系结构/ 细节/ 参见/ 文献/ [/ 10/ ]/ ./ 传统/ 模型/ 计算/ 过程/ 首先/ 由/ 配置/ 控制/ 逻辑/ 对/ 配置/ 信息/ 进行/ 解释/ ,/ 通过/ LM/ 经/ 配置/ 总线/ 传递/ 至/ 各/ PE/ ,/ PE/ 完成/ 功能/ 与/ 互联/ 配置/ 后/ 即/ 实现/ 硬件/ 电路/ 结构/ 的/ 重构/ ./ 待/ 重构/ 完成/ ,/ PE/ 阵列/ 内部/ 构成/ 特定/ 的/ 数据/ 映射/ 域/ (/ Mappingdomain/ )/ ,/ 如图/ 1/ (/ a/ )/ 阴影/ 部分/ 所示/ ./ 随后/ 从/ EM/ 经/ DMB/ 加载/ 待/ 运算/ 数据/ 至/ 各/ 流水线/ ,/ 进行/ 数据/ 驱动/ 的/ 计算/ ,/ 最后/ 将/ 执行/ 结果/ 再次/ 由/ mPE/ 返回/ 至/ DMB/ 和/ EM/ ./ 若/ 从/ 应用/ 的/ 循环/ 映射/ 角度/ 来看/ ,/ 循环/ 执行/ 时其/ 计算/ // 访存/ 操作/ 分别/ 映射/ 至/ CGRA/ 的/ 各个/ cPE/ 和/ mPE/ 上/ ;/ 所/ 需/ 数据/ 从/ EM/ 经/ 接口/ 控制器/ 导入/ 各/ DMB/ 上/ 并/ 根据/ 一定/ 策略/ 放置/ 以供/ mPE/ 快速访问/ ./ 数据/ 密集型/ 应用/ 的/ 循环/ 映射/ 即/ 是/ 找到/ CGRA/ 执行/ 时/ 存储体/ 冲突/ 最小/ 、/ 资源/ 利用率/ 最大/ 以及/ 数据/ 吞吐量/ 最高/ 的/ 最优/ 或/ 局部/ 最优/ 的/ 映射/ 域/ 方案/ ./ 3.2/ TMGC2/ 模型/ 由图/ 1/ (/ a/ )/ 可知/ ,/ 传统/ 的/ CGRA/ 计算/ 模式/ 通常/ 面向/ 整个/ PE/ 阵列/ 进行/ 计算/ 及/ 存储/ 映射/ ,/ 因此/ CGRA/ 的/ PE/ 阵列/ 规模/ 越大/ ,/ 其/ 资源/ 利用率/ 越低/ ,/ 映射/ 域/ 搜索/ 空间/ 过大/ 的/ 问题/ 越/ 严重/ ./ 考虑/ 到/ 数据/ 密集型/ 应用/ 的/ 核心/ 代码/ 块/ 大多/ 为/ 关键/ 循环/ ,/ 通过/ 循环展开/ 可/ 将/ 同一/ 循环/ 的/ 多个/ 迭代/ 实例/ 映射/ 至/ PE/ 阵列/ 上/ 并行执行/ ,/ 以单/ 配置/ 流/ 多数据流/ 的/ 方式/ 加速/ 循环/ ./ 定义/ 1/ ./ Kernel/ ./ 循环/ 体内/ 可/ 在/ DP/ 上/ 进行/ 加速/ 流水/ 执行/ 的/ 若干/ 计算/ 操作/ 的/ 集合/ ./ 循环/ 的/ 一次/ 迭代/ 实例/ 所/ 包含/ 的/ 计算/ 操作/ ,/ 视为/ Kernel/ 的/ 一个/ 实例/ ./ 若/ 循环/ 体内/ 包括/ 访存/ 操作/ 时/ ,/ 则/ 应/ 将/ 其/ 划分/ 为/ 多个/ Kernel/ ,/ 分别/ 映射/ 至/ 不同/ DP/ 上/ ./ 与/ 已有/ 的/ 类似/ SIMD/ 形式/ 加速/ CGRA/ 计算/ 方式/ 不同/ ,/ TMGC2/ 模型/ 可/ 将/ CGRA/ 的/ PE/ 阵列/ 视为/ 由/ 多条/ 同构/ 数据/ 流水线/ DP/ 组成/ ,/ 可/ 同时/ 并行/ 地/ 对/ 多个/ Kernel/ 实例/ 进行/ 流水/ 处理/ ./ 对于/ 不同/ 的/ 待/ 加速/ 应用/ ,/ 其/ DP/ 的/ cPE/ 数目/ 也/ 可/ 随/ Kernel/ 映射/ 需求/ 而/ 改变/ ./ 对于/ PE/ 阵列/ 为/ n/ ×/ m/ 的/ CGRA/ ,/ DP/ 构成/ 形/ 如/ “/ i/ 个/ mPE/ +/ j/ 个/ cPE/ ”/ ,/ 其中/ 1/ / i/ / m/ ,/ 1/ / j/ / n/ ./ 图/ 1/ (/ b/ )/ 与/ 图/ 1/ (/ c/ )/ 为/ n/ ×/ m/ 阵列/ 的/ 两种/ TMGC2/ 构成/ 形式/ ,/ 其中/ 深色/ 阴影/ 框/ 表示/ DP/ 中/ 负责/ 与/ DMB/ 通信/ 的/ 活跃/ mPE/ (/ ActivemPE/ )/ ,/ 其/ 数目/ 根据/ 不同/ 映射/ 需要/ 灵活/ 设置/ ./ 循环/ 开始/ 执行/ 时/ ,/ 由/ 配置/ 管理器/ 统一/ 发出/ 配置/ 信号/ 至/ 各条/ 流水线/ ./ 当/ 流水线/ 注入/ 启动/ 信号/ 后/ ,/ 由/ mPE/ 从/ DMB/ 载入/ 所/ 需/ 运算/ 数据/ ,/ 各/ cPE/ 由/ 数据/ 驱动/ 进行/ 独立/ 计算/ ./ 每次/ 完成/ 一个/ Kernel/ 实例/ 时/ ,/ 由/ mPE/ 发出/ 循环/ 迭代/ 终止/ 判断/ 信号/ ,/ 与/ 其它/ 流水线/ 的/ mPE/ 进行/ 同步/ ./ 若/ mPE/ 收到/ 主控/ 循环/ 终止/ 的/ 信号/ ,/ 则/ 向/ cPE/ 发出/ 运算/ 停止/ 信号/ ,/ 待/ cPE/ 返回/ 计算结果/ 后/ ,/ 将/ 当前/ 所/ 存储/ 的/ 数据/ 返回/ 至/ DMB/ ./ 为/ 保证/ 流水线/ 存储/ // 计算/ 配置/ 一致/ ,/ DP/ 只能/ 通过/ mPE/ 访问/ DMB/ ,/ 各/ 流水线/ PE/ 连接/ 方式/ 相同/ ./ 以图/ 1/ (/ b/ )/ 的/ 流水线结构/ 为例/ ./ 将/ n/ ×/ m/ 的/ PE/ 阵列/ 划分/ 为/ m/ 条/ DP/ 使得/ 配置/ 搜索/ 空间/ 规模/ 由/ n/ ×/ m/ 降至/ n/ ×/ 1/ ./ 对/ 循环/ 进行/ 加速/ 时/ ,/ 可/ 将/ 其/ 不同/ 迭代/ 分配/ 至/ 不同/ DP/ 并行执行/ ,/ 在/ 单条/ DP/ 内/ 对于/ Kernel/ 则/ 是/ 流水/ 执行/ 方式/ ,/ 因此/ TMGC2/ 可/ 实现/ 应用/ 的/ 循环/ 并行/ 流水/ 映射/ ,/ 提高/ PE/ 资源/ 利用率/ ./ 当/ 需要/ 加速/ 不同/ 循环/ 时/ ,/ 例如/ Kernel/ 内/ 操作/ 改变/ 、/ 操作/ 数目/ 增加/ 时/ ,/ 只/ 需/ 改变/ cPE/ 功能/ 和/ 连接/ 方式/ ,/ 加大/ 流水线/ 规模/ 即可/ ,/ 如图/ 1/ (/ c/ )/ ./ 由于/ TMGC2/ 模型/ 将/ 循环/ 迭代/ 映射/ 至/ 多条/ DP/ 进行/ 加速/ ,/ 改变/ 了/ 原有/ 循环/ 数据/ 访问/ 方式/ ./ 因此/ 相较/ 于/ 传统/ 的/ CGRA/ 应用/ 映射/ 仅/ 包含/ 计算/ 映射/ 和/ 数据/ 映射/ ,/ TMGC2/ 映射/ 需要/ 进一步/ 考虑/ 循环/ 的/ 迭代/ 映射/ ./ 迭代/ 映射/ 与/ 数据/ 映射/ 紧密/ 相关/ ,/ 由图/ 1/ 可知/ ,/ TMGC2/ 可能/ 导致/ 对/ 存储体/ 访问/ 次数/ 的/ 增加/ ,/ 从而/ 引发/ 更/ 多/ 的/ 存储体/ 冲突/ (/ BankConflict/ )/ 问题/ ./ 因此/ 在/ 文中/ 第/ 4/ 节/ 引入/ MBCE/ 算法/ 以/ 解决/ 这些/ 问题/ ./ 4/ 数据/ 并行/ 优化/ 方法/ 进行/ 循环/ 迭代/ 并行/ 加速/ 时/ ,/ mPE/ 主要/ 完成/ 以下/ 任务/ :/ (/ 1/ )/ 负责/ 从/ DMB/ 中/ 获取数据/ 供/ cPE/ 使用/ ;/ (/ 2/ )/ 存放/ cPE/ 执行/ 完/ 循环/ 单次/ 迭代/ 后/ 所/ 产生/ 的/ 临时/ 数据/ ;/ (/ 3/ )/ 循环/ 终止/ 时/ 将/ DP/ 执行/ 结果/ 输出/ 至/ DMB/ ./ 由于/ 在/ DP/ 执行/ 过程/ 中/ cPE/ 只能/ 通过/ mPE/ 获得/ 所/ 需/ 计算/ 数据/ ,/ 若/ 存在/ 循环/ 迭代/ 间/ 依赖/ ,/ 需要/ 访问/ 其它/ DP/ 中/ mPE/ 内/ 数据/ 时/ ,/ 只能/ 通过/ DMB/ 将/ 数据/ 传至/ 本地/ mPE/ ,/ 才能/ 对/ 这些/ 数据/ 进行/ 访问/ ./ 循环/ 迭代/ 间/ 依赖/ 将/ 导致/ 大量/ DMB/ 通信/ 访问/ ,/ 从而/ 引起/ DMB/ 的/ 存储体/ 冲突/ 问题/ ./ 因此/ 为/ 避免/ 迭代/ 映射/ 改变/ 访存/ 顺序/ 所/ 导致/ 的/ 冲突/ 问题/ ,/ 有/ 必要/ 根据/ 循环/ 迭代/ 映射/ 至/ DP/ 的/ 方式/ 针对性/ 地/ 对/ DMB/ 内/ 数据/ 进行/ 重组/ ./ 4.1/ 数据/ 重组/ TMGC2/ 的/ 局部/ 数据/ 存储/ 分为/ 多个/ 数据/ 存储体/ DMB/ ,/ 每个/ DMB/ 向/ 与/ 之/ 相连/ 的/ 数据/ 流水线/ DP/ 提供数据/ ./ 通常/ 在/ CGRA/ 内/ 数据/ 的/ 存储管理/ 方式/ 可/ 分为/ 交叉/ 存放/ (/ InterleavedDataPlacement/ )/ 和/ 顺序/ 存/ Page5/ 放/ (/ SequentialDataPlacement/ )/ [/ 15/ ]/ ./ 考虑/ 到/ TMGC2/ 流水/ 并行/ 的/ 执行/ 方式/ ,/ 为/ 避免/ 多条/ DP/ 对/ 同一/ DMB/ 进行/ 频繁/ 访问/ ,/ 本文/ 只/ 考虑/ 数据/ 交叉/ 存放/ 方式/ ./ 图/ 2/ (/ a/ )/ 上半部/ 分为/ 计算/ 一阶/ 差分/ 代码/ ,/ 其/ 循环/ 迭代/ 次数/ N/ 为/ 256/ ,/ 数组/ A/ [/ i/ ]/ 和/ A/ [/ i/ +/ 1/ ]/ 存在/ 迭代/ 间/ 依赖/ ./ 假设/ CGRA/ 的/ PE/ 阵列/ 按照/ TMGC2/ 配置/ 为/ m/ 条/ 数据/ 流水/ DP/ ,/ 与/ m/ 个/ 存储体/ DMB/ 一一对应/ ,/ 将/ 循环/ 的/ 不同/ 迭代/ 交叉/ 分配/ 至/ 各/ DP/ ,/ 如图/ 2/ (/ b/ )/ 所示/ ,/ 其中/ 流水线/ 上/ 的/ 数字/ 表示/ 处理/ 循环/ 迭代/ 序号/ ,/ 图/ 2TMGC2/ 下/ 循环/ 迭代/ 映射/ 与/ 数据/ 重组/ 定义/ 2/ ./ 重用/ 距离/ ./ 数组/ 引用/ a/ 若/ 在/ 迭代/ i/ 中/ 引用/ 的/ 数据/ 被/ 数组/ 引用/ b/ 在/ 迭代/ i/ +/ d/ 中/ 使用/ ,/ 则/ 迭代/ 间隔/ d/ 被/ 称为/ 重用/ 距离/ ./ 如图/ 2/ (/ a/ )/ 中/ A/ [/ i/ ]/ 与/ A/ [/ i/ +/ 1/ ]/ 的/ 重用/ 距离/ 为/ 1/ ./ 由图/ 2/ (/ c/ )/ 示例/ 可知/ ,/ 若/ 重用/ 距离/ d/ 不为/ DMB/ 数目/ m/ 的/ 整数倍/ 时/ ,/ 这/ 两个/ 数组/ 引用/ 将/ 分布/ 在/ 不同/ DMB/ 中/ ./ 若要/ 实现/ 对/ 数据/ 的/ 重用/ ,/ 则/ 需要/ 对/ 数据/ 在/ DMB/ 上/ 的/ 分布/ 进行/ 重组/ ,/ 使得/ 重用/ 数据分布/ 在/ 同一/ DWB/ 上/ ,/ 有效/ 避免/ 了/ DMB/ 间/ 的/ 频繁/ 通信/ ./ 假设/ CGRA/ 中/ DMB/ 数目/ 为/ M/ ,/ 循环/ 体内/ 存在/ 迭代/ 依赖/ 的/ 数组/ A/ [/ i/ ]/ ,/ 迭代/ 次数/ 为/ N/ ./ DMB/ 中/ 数据/ 重组/ 前/ 数组/ A/ [/ i/ ]/ 访问/ 跨步/ 为/ M/ ,/ 存储/ 长度/ 为/ N/ // M/ ./ 对于/ A/ [/ i/ ]/ 和/ A/ [/ i/ +/ d/ ]/ 间/ 存在/ 重用/ 距离/ 为/ d/ ,/ 数据/ 重组/ 后/ 生成/ 数组/ 为/ A/ [/ i/ ]/ ./ A/ [/ i/ ]/ 的/ 访问/ 跨步/ 定为/ N/ // M/ ,/ 存储/ 长度/ 定义/ 为/ N/ // M/ +/ d/ ./ 可知/ A/ [/ i/ ]/ 所/ 访问/ 的/ 从/ 第/ N/ // M/ ×/ k/ 个/ 到/ 第/ N/ // M/ ×/ (/ k/ +/ 1/ )/ -/ 1/ 个/ 数据/ ,/ A/ [/ i/ +/ d/ ]/ 所/ 访问/ 的/ 第/ N/ // M/ ×/ k/ +/ d/ 个/ 到/ 第/ N/ // M/ ×/ (/ k/ +/ 1/ )/ +/ d/ -/ 1/ 个/ 数据/ 均/ 分布/ 于/ 第/ k/ 个/ DMB/ 上/ ./ 因而/ 重组/ 前/ DMB/ 间/ 的/ 数据/ 重用/ 均/ 已/ 转换成/ 同一/ DMB/ 内/ 的/ 数据/ 重用/ ./ 若/ 对于/ 同一/ 数组/ 内/ 存在/ 多个/ 跨/ 迭代/ 重用/ (/ d1/ ,/ d2/ ,/ …/ ,/ dn/ )/ ,/ 令/ D/ =/ max/ (/ d1/ ,/ d2/ ,/ …/ ,/ dn/ )/ ,/ 数组/ 在/ DMB/ 中/ 的/ 存储/ 长度/ 定为/ N/ // M/ +/ D/ ./ 图/ 2/ (/ d/ )/ 显示/ 了/ 数据/ 重组/ 后/ A/ [/ i/ ]/ 在/ DMB/ 中/ 的/ 分布/ 情况/ ,/ 其中/ M/ =/ 8/ ,/ N/ =/ 256/ ,/ 重用/ 距离/ 为/ 1/ ./ 下面/ 给出/ 数据/ 重组/ 算法/ DR/ ./ m/ 值为/ 8/ ./ 数组/ A/ [/ i/ ]/ 在/ 8/ 个/ DMB/ 中/ 的/ 交叉/ 分布/ 如图/ 2/ (/ c/ )/ 所示/ ,/ 图中/ 数字/ 代表/ 数组/ 元素/ 在/ 外存/ 的/ 地址/ 顺序/ ./ 相应/ 地/ ,/ 在/ DMB/ 中/ 数字/ 代表/ 该/ 数组/ 元素/ 分布/ 在/ 此/ DMB/ 中/ ./ 由于/ 数组/ A/ [/ i/ ]/ 与/ A/ [/ i/ +/ 1/ ]/ 存在/ 依赖/ ,/ 因此/ A/ [/ i/ ]/ 可以/ 重用/ A/ [/ i/ +/ 1/ ]/ 在/ 前/ 一次/ 迭代/ 生成/ 且/ 保存/ 在/ DMB/ 上/ 的/ 数据/ ./ 但/ 由于/ TMGC2/ 实行/ DP/ 间/ 交叉/ 迭代/ 映射/ ,/ 因此/ 仅/ 对/ 数据/ 进行/ 重用/ 将/ 导致/ 频繁/ 的/ DMB/ 间通信/ ./ 因而/ 有/ 必要/ 改变/ 对/ 数组/ 在/ DMB/ 交叉/ 放置/ 的/ 方式/ ,/ 进行/ 数据/ 重组/ ./ 算法/ 1/ ./ 数据/ 重组/ DR/ 算法/ ./ 输入/ :/ 循环/ L/ ,/ TMGC2/ 硬件/ 描述/ 输出/ :/ 数据/ 重组/ 后/ 生成/ 的/ 与/ L/ 等价/ 的/ 循环/ L/ 配置/ 信息/ 1/ ./ 扫描/ 循环/ L/ 代码/ ,/ 找到/ 所有/ 与/ 数组/ 引用/ a/ 存在/ 跨/ 最/ 内层/ 迭代/ 依赖/ 的/ 数组/ 引用/ ,/ 求/ 出/ 重用/ 距离/ d/ ,/ 存入/ 临时/ 数组/ 集合/ ASet0/ ;/ 2/ ./ 求出/ ASet/ 的/ 最大/ 复用/ 距离/ D0/ ,/ D0/ =/ max/ (/ d1/ ,/ d2/ ,/ …/ ,/ dn/ )/ ,/ 若/ ASet0/ 中/ 只有/ 一个/ 数组/ 引用/ ,/ 则/ D0/ =/ 0/ ;/ 3/ ./ 记录/ a/ 的/ 迭代/ 次数/ N/ ,/ 设置/ a/ 的/ 访问/ 跨步/ 为/ N/ // M/ ,/ 存储/ 长度/ 为/ N/ // M/ +/ D0/ ;/ 4/ ./ 构建/ 新/ 的/ 数组/ a/ ,/ 标记/ 至/ 各/ DMB/ ;/ 5/ ./ 对/ ASet0/ 中/ 所有/ 数组/ 引用/ 重复/ 2/ ~/ 4/ 步/ ;/ 6/ ./ 若/ L/ 中/ 存在/ 其它/ 数组/ 引用/ 依赖/ ,/ 构建/ 新/ 的/ ASet1/ ,/ 直到/ 处理完毕/ ,/ 输出/ 循环/ L/ ;/ 的/ 数据处理/ 顺序/ 对/ L/ 进行/ 流水/ 化/ 映射/ ./ 7/ ./ 将/ 数据/ 重组/ 信息/ 输出/ 至/ TMGC2/ 数据/ 管理器/ ,/ 按照/ 新/ DR/ 算法/ 对图/ 2/ (/ a/ )/ 中/ 代码/ 进行/ 处理/ 时/ 将/ 生成/ 两个/ 数组/ 集合/ ASet0/ =/ {/ A/ [/ i/ ]/ ,/ A/ [/ i/ +/ 1/ ]/ }/ 和/ ASet1/ =/ {/ B/ [/ i/ ]/ }/ ,/ 且/ D0/ =/ 1/ ,/ D1/ =/ 0/ ./ 重组/ 后/ A/ [/ i/ ]/ 访问/ 跨步/ 为/ 32/ ,/ 存储/ 长度/ 为/ 33/ ;/ B/ [/ i/ ]/ 的/ 访问/ 跨步/ 为/ 32/ ,/ 存储/ 长度/ 为/ 32/ ./ 图/ 2/ (/ c/ )/ 和/ (/ d/ )/ 比较/ 了/ A/ [/ i/ ]/ 和/ A/ [/ i/ ]/ 在/ DMB/ 的/ 分布/ 情况/ ./ 数据/ 重组/ 前/ 同一/ DP/ 每次/ 循环/ 迭代/ 所/ 访问/ 数据/ 均/ 分布/ 在/ 相邻/ DMB/ 上/ ,/ 而/ 重组/ 后/ 存在/ 重用/ 关系/ 的/ 数组/ 分布/ 在/ 同一/ DMB/ 上/ ,/ 因此/ 各/ DP/ 计算/ 图/ 2/ (/ a/ )/ 代码/ 中/ 循环/ 迭代/ 时/ 无需/ 进行/ DMB/ 间通信/ ,/ 实现/ 了/ 多/ 流水线/ 并行执行/ ,/ 提高/ 了/ 计算/ 吞吐量/ ./ 但/ 由于/ 数据/ 重组/ 改变/ 了/ 程序/ 原有/ 的/ 访存/ 顺序/ ,/ Page6/ 生成/ 新/ 数组/ 访问/ 跨步/ 大于/ 1/ ,/ 从而/ 导致/ 多个/ 连续/ 的/ 访存/ 地址/ 落/ 在/ 同一/ 存储体/ DMB/ 上/ ,/ 导致/ 了/ 存储体/ 冲突/ ./ 因此/ 在/ 进行/ 数据/ 重组/ 前/ 必须/ 进行/ 存储体/ 冲突/ 消除/ 处理/ ./ 定理/ 1/ ./ 假设/ 循环/ 中/ 数组/ 引用/ a/ 的/ 起始/ 地址/ 为/ 0/ ,/ DR/ 算法/ 生成/ 数组/ a/ 的/ 访问/ 跨步/ 大小/ s/ 若/ 满足/ 则/ a/ 的/ 访存/ 序列/ 将/ 产生/ 存储体/ 冲突/ ,/ 且/ 从/ 第/ k/ ×/ sizeSA/ ×/ numDP/ 至/ (/ k/ +/ 1/ )/ ×/ sizeSA/ ×/ (/ numDP/ -/ 1/ )/ 个/ 引用/ 地址/ 均/ 在/ 同一/ 存储体/ 中/ ,/ k/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ./ 其中/ sizeSA/ 为/ DP/ 执行/ 时/ 一次/ 载入/ 数组/ a/ 的/ 数据量/ (/ 以字/ 为/ 单位/ )/ ,/ numDP/ 为/ DP/ 数目/ ,/ M/ 为/ DMB/ 数目/ ./ 证明/ ./ 数据/ 重组/ 后/ a/ 的/ 长度/ 为/ s/ ×/ numDP/ 的/ 访存/ 序列/ 应为/ 0/ ,/ s/ ,/ 2/ ×/ s/ ,/ …/ ,/ (/ numDP/ -/ 1/ )/ ×/ s/ ,/ 1/ ,/ s/ +/ 1/ ,/ …/ ,/ (/ numDP/ -/ 1/ )/ ×/ s/ +/ 1/ ,/ …/ ,/ (/ numDP/ -/ 1/ )/ ×/ s/ +/ (/ sizeSA/ -/ 1/ )/ ./ 可知/ 前/ numDP/ 个/ 相邻/ 地址/ 间隔/ 为/ s/ ./ 因/ s/ 为/ M/ ×/ sizeSA/ 的/ 整数倍/ 且/ sizeSA/ / 2/ ./ 又/ 因/ 在/ TMGC2/ 模型/ 中/ DP/ 数目/ 为/ DMB/ 数目/ 整数倍/ ,/ 所以/ 前/ numDP/ 个/ 地址/ 将/ 落/ 在/ 同一/ 存储体/ 中/ ,/ 产生/ 冲突/ ./ 考虑/ 到访/ 存/ 序列/ 0/ ,/ 1/ ,/ …/ ,/ s/ -/ 1/ 属于/ 同/ 一次/ 载入/ ,/ 所以/ 第/ k/ ×/ sizeSA/ ×/ numDP/ 到/ (/ k/ +/ 1/ )/ ×/ sizeSA/ ×/ (/ numDP/ -/ 1/ )/ 的/ 引用/ 在/ 同一/ 存储体/ 中/ ,/ 得证/ ./ 证毕/ ./ 由/ 定理/ 1/ 可知/ 产生/ 存储体/ 冲突/ 的/ 原因/ 在于/ 数据/ 重组/ 后/ 数组/ a/ 的/ 访问/ 跨步/ 大小/ 为/ M/ ×/ sizeSA/ 的/ 整数倍/ ./ 因此/ 我们/ 考虑/ 引入/ 存储体/ 冲突/ 消除/ MBCE/ 算法/ 对/ 循环/ 进行/ 分割/ ,/ 改变/ 数组/ 访问/ 跨步/ 大小/ ,/ 以/ 避免/ 上述/ 问题/ ./ 定理/ 2/ ./ 若/ 采用/ DR/ 算法/ 对/ 循环/ 中/ 数组/ a/ 进行/ 处理/ ,/ 生成/ 的/ 访问/ 跨步/ 大小/ 为/ s/ ,/ 将/ 产生/ 存储体/ 冲突/ ./ 令/ s0/ =/ s/ // 2/ -/ 1/ ,/ s1/ =/ s/ // 2/ +/ 1/ ,/ 若/ DR/ 算法/ 分别/ 以/ s0/ 和/ s1/ 为/ 访问/ 跨步/ 构建/ 数组/ a/ ,/ 则/ 不会/ 产生/ 存储体/ 冲突/ ./ 证明/ ./ 由/ 定理/ 1/ 可知/ s/ =/ i/ ×/ (/ M/ ×/ sizeSA/ )/ ,/ 则/ 有/ s0/ // (/ M/ ×/ sizeSA/ )/ =/ i/ // 2/ -/ 1/ // (/ M/ ×/ sizeSA/ )/ ./ 因/ M/ ×/ sizeSA/ / 2/ ,/ s0/ 不能/ 被/ M/ ×/ sizeSA/ 整除/ ./ 同理/ s1/ 亦/ 不能/ 被/ M/ ×/ sizeSA/ 整除/ ./ 因此/ 以/ s0/ 和/ s1/ 为/ 访问/ 跨步/ 构建/ 数组/ a/ ,/ 不会/ 产生/ 存储体/ 冲突/ ,/ 得证/ ./ 证毕/ ./ 定理/ 3/ ./ 若/ 对/ 迭代/ 次数/ 为/ N/ 的/ 循环/ L/ 采用/ DR/ 算法/ 生成/ 数组/ 引用/ a/ 产生/ 了/ 存储体/ 冲突/ ,/ 其/ 访问/ 跨步/ 为/ s/ ./ 若/ 将/ L/ 拆/ 分为/ 子/ 循环/ L0/ 和/ L1/ ,/ 其/ 迭代/ 次数/ 分别/ 为/ N0/ =/ N/ // 2/ -/ numDP/ ,/ N1/ =/ N/ // 2/ +/ numDP/ ,/ 则/ DR/ 算法/ 对/ L0/ 和/ L1/ 进行/ 数据/ 重组/ 不会/ 2/ ./ 根据/ 定理/ 1/ 判断/ DR/ 处理/ 的/ L/ 是否/ 存在/ 存储体/ 冲突/ ;/ 3/ ./ 若/ 不/ 存在/ 冲突/ ,/ 则/ 转向/ 步/ 7/ ;/ 4/ ./ 若/ 存在/ 冲突/ ,/ 则/ :/ 5/ ./ 令/ 迭代/ 次数/ N0/ =/ N/ // 2/ -/ numDP/ ,/ 以/ L/ 循环体/ 为/ 6/ ./ 令/ 迭代/ 次数/ N1/ =/ N/ // 2/ +/ numDP/ ,/ 以/ L/ 循环体/ 为/ 循环体/ 子/ 循环/ L0/ ;/ 循环体/ 子/ 循环/ L1/ ;/ 产生/ 存储体/ 冲突/ ./ 证明/ ./ 由/ 定理/ 1/ 可知/ 且/ N0/ =/ N/ // 2/ -/ numDP/ ,/ N1/ =/ N/ // 2/ +/ numDP/ ,/ 因此/ DR/ 算法/ 为/ L0/ 和/ L1/ 生成/ 数组/ 引用/ 访问/ 跨步/ 分别/ 为/ s0/ =/ s/ // 2/ -/ 1/ ,/ s1/ =/ s/ // 2/ +/ 1/ ./ 由/ 定理/ 2/ 可知/ DR/ 算法/ 处理/ L0/ 和/ L1/ 中/ 数组/ 引用/ 将/ 不/ 产生/ 存储体/ 冲突/ ,/ 得证/ ./ 下面/ 我们/ 考虑/ 引入/ 存储体/ 冲突/ 消除/ (/ Memory/ 算法/ 2/ ./ 存储体/ 冲突/ 消除/ MBCE/ 算法/ ./ 输入/ :/ 循环/ L/ 输出/ :/ L/ 的/ 子/ 循环/ L0/ 和/ L11/ ./ 扫描/ 循环/ L/ 代码/ ,/ 采用/ DR/ 算法/ 对/ 其中/ 数组/ 引用/ 进/ BankConflictsEliminate/ )/ 算法/ MBCE/ ./ 行/ 初步/ 处理/ ;/ 7/ ./ 将/ 当前/ 产生/ 循环/ 返回/ ,/ 并/ 作为/ DR/ 算法/ 的/ 输入/ ;/ 8/ ./ 否则/ ,/ 返回/ 0/ ,/ 数据/ 重组/ 将/ 不/ 产生/ 存储体/ 冲突/ ./ 图/ 2/ (/ a/ )/ 下/ 半部/ 分为/ 循环/ 通过/ MBCE/ 算法/ 拆分/ 后/ 所/ 生成/ 的/ 代码/ ./ 实际/ 情况/ 中/ ,/ 若/ 循环/ 数组/ 规模/ 较大/ ,/ DMB/ 容量/ 不足/ 时/ ,/ 则/ 考虑/ 对/ 循环/ 进行/ 进一步/ 划分/ ,/ 以免/ DMB/ 溢出/ ./ 通过/ 合理/ 设置/ 划分/ 参数/ (/ 如/ 划分/ 级数/ 、/ 循环/ 子块/ 大小/ 等/ )/ ,/ 降低/ 数组/ 存储/ 需求/ 规模/ 并/ 避免/ 引入/ 新/ 的/ 迭代/ 间/ 依赖/ ,/ 提高/ 数据/ 局部性/ ./ 4.2/ 数据/ 重用/ 4.1/ 节/ 主要/ 研究/ 如何/ 避免/ 单个/ DP/ 执行/ 循环/ 迭代/ 时/ 访问/ 所/ 对应/ DMB/ 的/ 数据/ 缺失/ 问题/ ,/ 通过/ 数据/ 重组/ 优化/ 单个/ DMB/ 的/ 局部性/ ./ 对于/ n/ ×/ m/ 规模/ PE/ 阵列/ 的/ CGRA/ 而言/ ,/ 当/ 循环体/ Kernel/ 数目/ 多于/ 1/ 个/ ,/ 或/ Kernel/ 内部/ 计算/ 操作/ 较多时/ ,/ n/ 个/ cPE/ 构成/ 的/ DP/ 无法/ 完成/ 一次/ 完整/ 的/ 迭代/ 执行/ ,/ 此时/ 应/ 考虑/ 采用/ 如图/ 1/ (/ c/ )/ 所示/ 较大/ 粒度/ 的/ DP/ 构成/ 形式/ ,/ 通过/ 多条/ DP/ 共同完成/ 计算/ ./ 若/ 循环/ 存在/ 数据/ 跨/ 迭代/ 依赖/ ,/ 则/ 会/ 导致/ 不同/ Kernel/ 对/ 同一/ 数组/ 引用/ 的/ 访问/ ./ 为/ 保证/ DP/ 并行计算/ 时/ 数据/ 一致性/ ,/ 有/ 必要/ 在/ 单个/ DMB/ 数据/ 重组/ 基础/ 上/ 进一步/ 考虑/ 数据/ 重用/ ./ 以图/ 3/ (/ a/ )/ 所示/ 代码/ 为/ 一个/ 典型/ 的/ 迭代/ 间/ 存在/ 相关性/ 的/ 嵌套循环/ ./ 将/ 其/ 迭代/ 内部/ 各/ 操作/ 向/ DP/ 进行/ 映射/ 时/ ,/ 构成/ 的/ 数据流/ 图/ (/ Data/ -/ flowGraph/ ,/ Page7DFG/ )/ 如图/ 3/ (/ b/ )/ 方框/ 内/ 所示/ ,/ 包括/ 两个/ Kernel/ :/ K0/ 和/ K1/ ,/ Kernel/ 内部/ 为/ cPE/ 计算/ 节点/ ,/ 外部/ 为/ mPE/ 存储/ 节点/ ./ 两类/ 节点/ 之间/ 的/ 边/ 反映/ 了/ 存储/ 流/ ,/ 计算/ 节图/ 3/ 循环/ 迭代/ 映射/ 的/ 数据/ 重用/ 对于/ 循环/ 内/ 访问/ 同一/ 数组/ 的/ 引用/ ai/ 和/ aj/ ,/ 假设/ ai/ 涉及/ 的/ 数据/ (/ 若/ ai/ 为读/ 引用/ ,/ 即/ 载入/ 数据/ ,/ 或/ ai/ 为/ 写/ 引用/ ,/ 即/ 生成/ 数据/ )/ 在/ aj/ 引用/ 前/ 保持/ 不变/ ,/ 则/ ai/ 和/ aj/ 存在/ 数据/ 重用/ 的/ 可能/ ,/ 无需/ 访问/ 外部/ 存储/ ./ 数据/ 复用/ 存在/ 两种/ 类型/ :/ (/ 1/ )/ 迭代/ 内/ 复用/ ,/ 即/ ai/ 和/ aj/ 对/ 同一/ 数据/ 的/ 访问/ 发生/ 在/ 同一/ 迭代/ 内/ ;/ (/ 2/ )/ 跨/ 迭代/ 复用/ ,/ 即/ ai/ 和/ aj/ 处于/ 不同/ 迭代/ 中/ ,/ 此时/ 仅当/ ai/ 和/ aj/ 间/ 的/ 相对/ 地址/ 间隔/ 不变/ ,/ 即/ 重用/ 距离/ 保持/ 不变/ 时/ ,/ 采用/ 数据/ 重用/ 才能/ 减少/ 存储/ 访问/ 数量/ ./ 以图/ 3/ (/ a/ )/ 为例/ ,/ 可知/ 嵌套循环/ 内层/ j/ 迭代/ 间/ 数组/ B/ [/ i/ ,/ j/ ]/ 和/ B/ [/ i/ ,/ j/ -/ 1/ ]/ 以及/ 外层/ i/ 迭代/ 间/ 数组/ A/ [/ i/ ,/ j/ ]/ 和/ A/ [/ i/ -/ 1/ ,/ j/ ]/ 可/ 采用/ 数据/ 重用/ ./ 通过/ 遍历/ 已有/ DFG/ ,/ 发现/ 所有/ 在/ 同一/ 数组/ 引用/ 上/ 存在/ 读后/ 读及/ 写/ 后/ 读/ 相关/ 的/ 访存/ 操作/ 节点/ 对/ ,/ 如图/ 3/ (/ b/ )/ 中/ DFG/ 中/ 节点/ 对/ (/ 0/ ,/ 2/ )/ 与/ (/ 1/ ,/ 7/ )/ ./ 通过/ 消除/ 这些/ 节点/ 对/ 中/ 的/ 后续/ 节点/ (/ 2/ 和/ 7/ )/ ,/ 并/ 在/ 这些/ 节点/ 对/ 的/ 前导/ 节点/ (/ 0/ 和/ 1/ )/ 与/ 后续/ 节点/ 的/ 原有/ 后继/ 间/ 添加/ 重用/ 边/ ,/ 即可/ 生成/ 数据/ 重用/ 图/ (/ DataReuseGraph/ ,/ DRG/ )/ ./ 图/ 3/ (/ c/ )/ 显示/ 了/ 对/ 图/ 2/ 中/ DFG/ 进行/ 数据/ 重用/ 转换/ 后/ 的/ DRG/ ,/ 可以/ 发现/ 通过/ 数据/ 重用/ 循环体/ 仅/ 包括/ 一个/ KernelK0/ ,/ 从而/ 降低/ 了/ DP/ 规模/ 和/ 配置/ 难度/ ./ 图/ 3/ (/ d/ )/ 则/ 显示/ 了/ 经过/ 转换/ 后/ 循环/ 单次/ 迭代/ 在/ PE/ 阵列/ 上/ 的/ 数据流/ 向/ ,/ 其中/ 虚线/ 边/ 代表/ 了/ 重用/ 边/ ,/ 用以/ 表示/ 存储/ 流/ 的/ 跨/ 迭代/ 重用/ ./ 重用/ 边/ 的/ 权值/ 为/ 其/ 数组/ 引用/ 的/ 最大/ 重用/ 距离/ D/ ./ 由此可知/ D/ 越大/ ,/ 数据/ 重用/ 的/ 时间/ 耗费/ 越长/ ./ 在/ 实际/ 应用/ 中/ 我们/ 可以/ 综合/ 考虑/ 目标/ 体系结构/ 的/ 可用/ 存储/ 数/ 、/ 访存/ 操作/ 延迟/ 以及/ 目标/ 启动/ 间距/ II/ 来/ 设定/ 重用/ 距离/ D/ 的/ 上限/ ,/ 从而/ 保证/ 数点/ 间/ 的/ 边/ 则/ 反映/ 了/ 计算/ 流/ ./ mPE/ 节点/ 是/ 数据流/ 的/ 阀门/ ./ 两个/ mPE/ 控制数据/ 的/ 流入/ ,/ 最后/ 一个/ mPE/ 则/ 控制数据/ 的/ 流出/ ./ 据/ 重用/ 有效/ ./ 5/ 实验/ 与/ 分析/ 5.1/ 实验/ 环境/ 本/ 节/ 实验所/ 采用/ 粗粒度/ 可/ 重构/ SoC/ 平台/ 包括/ 一个/ 嵌入式/ 通用/ RISC/ 处理器/ 核/ EstarIII/ 以及/ 一个/ 可/ 重构/ 阵列/ LEAP/ ./ EstarIII/ 用作/ 主/ 处理器/ 核/ ,/ LEAP/ 作为/ 协处理器/ 进行/ 关键/ 循环/ 映射/ 加速/ ./ 通过/ 扩展/ LEAP/ 结构/ 以/ 符合/ TMGC2/ 模型/ 特征/ ,/ 采用/ 循环/ 自流水/ 技术/ 将/ 循环/ 控制/ 表达式/ 映射/ 至/ mPE/ ,/ 并/ 将/ 循环体/ 映射/ 至/ cPE/ 阵列/ ./ LEAP/ 通过/ 接口/ 控制器/ 与/ EstarIII/ 互联/ ,/ 完成/ 配置/ 信息/ 和/ 数据/ 的/ 加载/ 、/ 结果/ 的/ 返回/ 以及/ 反馈/ 循环/ 运行/ 状态/ ./ 实验/ 环境/ 配置/ 采用/ AMDAthlon4400/ +/ (/ 2.31/ GHz/ )/ 和/ 2GB/ 内存/ ,/ 操作系统/ 为/ RedHatEnterpriseLinuxAS4/ ./ 7/ (/ kernel2/ ./ 69/ )/ ,/ 采用/ LooPo/ -/ 20081008/ 工具/ 对/ 循环/ 内部/ 数组/ 间/ 的/ 数据/ 依赖/ 关系/ 进行/ 分析/ ./ 采用/ 的/ 应用/ 实例/ 包括/ 一些/ 典型/ 的/ 数据/ 密集型/ 算法/ 核心/ ,/ 面向/ LEAP/ 采用/ 文中/ 方法/ 首先/ 对/ 循环/ 进行/ 数据/ 并行/ 优化/ ,/ 随后/ 利用/ 文献/ [/ 6/ ]/ 中/ 循环/ 自流水/ LPKM/ 方法/ 进行/ 映射/ ,/ 并/ 测试/ 各/ 典型/ 算法/ 的/ 运行/ 时间/ 和/ 映射/ 性能/ ./ 比较/ 的/ 指标/ 包括/ 各/ 算法/ 所/ 占用/ 的/ 计算/ // 存储资源/ 数目/ 、/ 存储/ 需求/ 、/ 执行/ 时间/ 、/ 吞吐量/ 和/ 资源/ 占用率/ ./ 包括/ :/ (/ 1/ )/ 基本/ 算法/ 核心/ :/ 离散/ 余弦/ 变换/ DCT/ 、/ 矩阵/ 响亮/ 转置/ MVT/ 和/ 矩阵/ LU/ 分解/ ;/ (/ 2/ )/ 典型/ 算法/ :/ 矩阵/ 乘/ (/ MatrixMultiply/ ,/ MM/ )/ 、/ 运动/ 检测/ (/ MotionDetection/ ,/ MD/ )/ 和/ 中值/ 滤波/ (/ MedianFilter/ ,/ MF/ )/ ./ Page85/ ./ 2/ 实验/ 结果/ 与/ 分析/ 表/ 1/ 给出/ 了/ 在/ 应用/ TMGC2/ 模型/ 前后/ 采用/ MDP/ 方法/ 对/ 各/ 算法/ 映射/ 性能/ 的/ 影响/ ,/ 包括/ 应用/ TMGC2/ 前后/ 占用/ cPE/ // mPE/ // DM/ 数目/ 、/ 应用/ MDP/ 后/ 访存/ 操作/ 降低/ 比率/ (/ LoadsReduction/ )/ 、/ 存储/ // 访问/ 时间/ 比/ (/ DCR/ )/ 以及/ 执行/ 时间/ (/ Runtime/ ,/ 以/ 时钟/ 周期/ 为/ 单位/ )/ ./ LoadsReduction/ 列/ 表示/ 应用/ MDP/ 方法/ 后/ ,/ 减少/ 的/ 数据/ 加载/ 表/ 1TMGC2/ 模型/ 和/ MDP/ 方法/ 对/ CGRA/ 映射/ 性能/ 的/ 影响/ 算法/ 名称/ (/ 算法/ 规模/ )/ DCT/ (/ 2000/ )/ 4/ // 4/ // 46/ // 4/ // 4/ -/ 40.3/ %/ 1.4910/ ./ 63076207358034877320754MVT/ (/ 10000/ )/ 3/ // 3/ // 36/ // 6/ // 3/ -/ 63.6/ %/ 1.4090/ ./ 422173299482126516522LU/ (/ 2000/ )/ 9/ // 3/ // 410/ // 4/ // 4/ -/ 50.3/ %/ 1.3810/ ./ 31748239337592797919580MD/ (/ 4/ ,/ 32/ )/ 6/ // 10/ // 58/ // 16/ // 8/ -/ 40.1/ %/ 1.3691/ ./ 065190862170553166049102881MD/ (/ 8/ ,/ 120/ )/ 6/ // 12/ // 410/ // 16/ // 8/ -/ 43.2/ %/ 1.5151/ ./ 064391223374348352100306913MM/ (/ 64/ ×/ 64/ )/ 10/ // 8/ // 210/ // 10/ // 5/ -/ 20.7/ %/ 1.4270/ ./ 75365293416724113423253MM/ (/ 128/ ×/ 128/ )/ 10/ // 8/ // 210/ // 12/ // 4/ -/ 22.6/ %/ 1.6640/ ./ 632413038318901335641224583MF/ (/ 320/ ×/ 240/ )/ 8/ // 8/ // 420/ // 10/ // 5/ -/ 21.3/ %/ 1.5581/ ./ 232213932182010158309121547MF/ (/ 480/ ×/ 360/ )/ 8/ // 8/ // 420/ // 10/ // 5/ -/ 22.5/ %/ 1.6211/ ./ 302428467379792338488286035/ 从表/ 1/ 中/ 可知/ ,/ TMGC2/ 模型/ 的/ 应用/ 有效/ 提高/ 了/ 硬件资源/ ,/ 特别/ 是/ 计算/ 单元/ cPE/ 的/ 利用率/ ./ 由于/ DP/ 流水线/ 并行执行/ ,/ 大幅/ 减少/ 了/ 运行/ 时间/ ./ 同时/ 由于/ 进一步/ 采用/ MDP/ 方法/ 挖掘/ 数据/ 并行度/ 并/ 进行/ 了/ 数据/ 重组/ ,/ 使得/ LEAP/ 执行/ 时访存/ 操作/ 大大减少/ ,/ 降低/ 了/ 数据/ 加载/ 量/ ,/ 改善/ 了/ 存储/ // 访问/ 时间/ 比/ ,/ 亦/ 进一步/ 改善/ 了/ 算法/ 映射/ 效果/ ./ 注意/ 到/ MDP/ 对于/ 包含/ 较为简单/ 的/ 循环体/ 算法/ 优化/ 效果/ 更好/ ./ 由于/ MDP/ 中/ 避免/ 存储体/ 冲突/ 的/ MBCE/ 算法/ 仅/ 是/ 对/ 循环/ 进行/ 分段/ ,/ 因此/ 对于/ 较为/ 复杂/ 的/ 程序/ 在/ 数据/ 重组/ 时/ 仍/ 包含/ 未/ 消除/ 的/ 数据/ 依赖/ 从而/ 影响/ 了/ 优化/ 效果/ ./ 图/ 4/ 则/ 给出/ 了/ LKPM/ +/ MDP/ 方法/ 进行/ 映射/ 的/ 资源/ 利用率/ UoR/ 和/ 吞吐量/ ThO/ ./ 此时/ 我们/ 未/ 采用/ TMGC2/ 模型/ 对/ 计算/ 阵列/ 进行/ 流水线/ 并行/ 化/ ./ 对比/ 已有/ LKPM/ 和/ SPKM/ 方法/ ,/ 将/ SPKM/ 方法/ 的/ 数据/ 标准化/ 为/ 1/ ,/ 可以/ 看到/ 在/ 图/ 4/ (/ a/ )/ 和/ 图/ 4/ (/ b/ )/ 中/ ,/ 由于/ 对/ 算法/ 核心/ 进行/ 映射/ 时/ 充分考虑/ 了/ 存储/ 影响/ ,/ 并/ 预先/ 对/ 矩阵/ 乘/ 、/ 运动/ 检测/ 等/ 具有/ 较/ 多/ 数据/ 依赖/ 的/ 算法/ 核心/ 进行/ 了/ 数据/ 重用/ ,/ 节省/ 了/ 存储资源/ ,/ 较之/ 仅/ 采用/ LKPM/ 方法/ 显著/ 提高/ 了/ 资源/ 利用率/ UoR/ ,/ 且/ 提高/ 了/ 数据/ 吞吐量/ ThO/ ./ 其/ 计算方法/ 为/ ,/ 假设/ 将/ 循环/ L/ 映射/ 至/ PE/ 阵列/ 上/ ,/ 此/ PE/ 阵列/ 包括/ CPE/ 数目/ 为/ m/ ×/ (/ n/ -/ 1/ )/ ,/ MPE/ 数目/ 为/ m/ ,/ 数据/ 存储/ DM/ 数目/ 为/ dmn/ ./ 假设/ 执行/ 循环/ L/ 占用/ 了/ i/ 个/ cPE/ ,/ j/ 个/ mPE/ 以及/ s/ 个/ DM/ ,/ 执行/ 时间/ 为/ TL/ ,/ 包含/ NumL/ 个/ 计算/ 及/ 存量/ 与/ 优化/ 前/ 总/ 数据/ 加载/ 量/ 之间/ 的/ 比值/ ,/ 即/ (/ MDP/ -/ MDP/ -/ off/ )/ // MDP/ -/ off/ ×/ 100/ %/ ./ Original/ 表示/ 仅/ 采用/ LKPM/ 方法/ 面向/ 整个/ LEAP/ 处理/ 阵列/ 进行/ 循环/ 映射/ ,/ MDP/ -/ off/ 表示/ 不/ 对/ 算法/ 进行/ 数据/ 并行/ 优化/ ./ MD/ (/ 4/ ,/ 32/ )/ 表示/ MD/ 算法/ 参数/ 为/ m/ =/ n/ =/ 4/ ,/ M/ =/ N/ =/ 32/ ,/ MM/ (/ 64/ ×/ 64/ )/ 表示/ 计算/ MM/ 时/ 矩阵/ 规模/ 为/ 64/ ×/ 64/ ,/ MF/ (/ 320/ ×/ 240/ )/ 表示/ MF/ 所/ 采用/ 图像/ 大小/ 为/ 320/ ×/ 240/ ./ 储/ 操作/ ,/ 则/ 此/ 循环/ 的/ UoR/ 、/ ThO/ 分别/ 为/ 图/ 4/ 典型/ 算法/ 映射/ 效果/ 比较/ (/ 以/ SPKM/ 方法/ 的/ 数据/ 作/ 归一化/ )/ Page9/ 综合/ 表/ 1/ 及图/ 4/ 的/ 实验/ 结果/ 可知/ ,/ 采用/ 文中/ 方法/ 对/ 已有/ CGRA/ 循环/ 流水/ 映射/ 方法/ 进行/ 优化/ ,/ 平均/ 提高/ 了/ 37.2/ %/ 的/ 数据/ 吞吐量/ 及/ 41.3/ %/ 的/ 资源/ 利用率/ ./ 6/ 结论/ CGRA/ 提供/ 了/ 高效/ 和/ 灵活/ 的/ 配置/ 来/ 加速/ 复杂/ 的/ 数据/ 密集型/ 应用/ ,/ 但/ 如何/ 有效/ 映射/ 这些/ 应用/ 中/ 的/ 计算/ 核心/ 部分/ ,/ 尤其/ 是/ 关键/ 循环/ ,/ 仍/ 是/ 一个/ 挑战性/ 任务/ ./ 我们/ 针对/ CGRA/ 的/ 资源/ 利用率/ 不足/ 的/ 问题/ ,/ 定义/ 了/ TMGC2/ 模型/ 以/ 实现/ 循环/ 到/ CGRA/ 映射/ 的/ 并行/ 映射/ 加速/ ./ 其中/ 针对/ 在/ CGRA/ 映射/ 关键/ 循环/ 时/ 由于/ 频繁/ 的/ 存储/ 访问/ 带来/ 的/ 延迟/ 问题/ ,/ 我们/ 将/ 数组/ 进行/ 重组/ ,/ 并/ 对/ 数据/ 进行/ 重用/ ,/ 实现/ 了/ 数据/ 的/ 并行/ 优化/ ,/ 以/ 消除/ CGRA/ 访存/ 瓶颈/ ,/ 提高/ 了/ 数据处理/ 的/ 吞吐量/ ./ 文中/ 提出/ 的/ MDP/ 方法/ 可以/ 有效/ 改善/ 后续/ CGRA/ 循环/ 流水/ 映射/ 性能/ ./ 通过/ 结合/ 已有/ LPKM/ 映射/ 方法/ ,/ 几种/ 典型/ 应用/ 算法/ 的/ 映射/ 实验/ 表明/ ,/ 引入/ MDP/ 方法/ 后/ 的/ TMGC2/ 并行/ 映射/ 的/ 资源/ 利用率/ 有/ 了/ 显著/ 提高/ ,/ 对/ 接近/ 于/ 手工/ 映射/ 方法/ 的/ 性能/ ./ 在/ 未来/ 工作/ 中/ 我们/ 将/ 进一步/ 考虑/ CGRA/ 存储/ 层次/ 以/ 实现/ 对/ 应用/ 中/ 循环/ 映射/ 的/ 更/ 多/ 优化/ ./ 

