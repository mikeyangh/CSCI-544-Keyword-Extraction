Page1/ 基于/ 路网/ 的/ 三维/ 虚拟现实/ 场景/ 间接/ 可视/ 查询/ 框架/ 瀚/ 刘永山/ (/ 燕山大学/ 信息科学/ 与/ 工程学院/ 河北/ 秦皇岛/ 066000/ )/ 摘要/ 针对/ 现有/ 网络/ 环境/ 下/ 的/ B/ \/ S/ 模式/ 下/ 三维/ 虚拟现实/ 场景/ 在/ 加载/ 过程/ 中因/ 加载/ 大量/ 的/ 不可/ 视/ 的/ 对象/ 而/ 引起/ 资源/ 消耗/ 过高/ 、/ 加载/ 速度/ 过慢/ 的/ 问题/ ,/ 文中/ 提出/ 了/ 一种/ 基于/ 路网/ 的/ 可视/ 动态/ 加载/ 框架/ ./ 该/ 框架/ 对/ 三维/ 虚拟现实/ 场景/ 内/ 的/ 静态/ 对象/ 和/ 动态/ 对象/ 的/ 可视/ 查询/ 分别/ 进行/ 处理/ ./ 设计/ 了/ 框架/ 内/ 的/ 路网/ 、/ 移动/ 对象/ 、/ 静态/ 对象/ 可视/ 关系/ 表/ 和/ 动态/ 对象/ 可视/ 关系/ 表/ 的/ 数据模型/ ,/ 并/ 给出/ 了/ 可视/ 关系/ 表/ 的/ 维护/ 算法/ ./ 对于/ 场景/ 内/ 的/ 静态/ 对象/ 的/ 可视/ 查询/ ,/ 给出/ 基于/ 静态/ 对象/ 可视/ 关系/ 表/ 的/ 静态/ 可视/ 查询/ 框架/ 及/ 算法/ ,/ 避免/ 了/ 复杂/ 的/ 在线/ 可视/ 计算/ ;/ 对于/ 场景/ 内/ 的/ 动态/ 对象/ 的/ 可视/ 查询/ ,/ 则/ 给出/ 基于/ 动态/ 对象/ 可视/ 关系/ 表/ 的/ 连续/ 可视/ 范围/ 查询/ 框架/ 及/ 算法/ ./ 实验/ 结果表明/ ,/ 在/ 保持/ 三维/ 虚拟现实/ 场景/ 观测/ 效果/ 不变/ 的/ 情况/ 下/ ,/ 可视/ 动态/ 加载/ 框架/ 能够/ 大幅度降低/ 虚拟现实/ 场景/ 中/ 的/ 静态/ 和/ 动态/ 对象/ 的/ 加载/ 数据量/ 和/ 更新/ 数据量/ ,/ 降低/ 对于/ 网络带宽/ 和/ 客户端/ 硬件/ 的/ 需求/ ./ 关键词/ 三维/ 互联网/ ;/ 路网/ ;/ 连续/ 可视/ 范围/ 查询/ ;/ 可视/ 关系/ 表/ 1/ 引言/ 随着/ “/ 三维/ 互联网/ ”/ 时代/ 的/ 来临/ ,/ 网络/ 环境/ 下/ 大规模/ 三维/ 虚拟现实/ 场景/ 得到/ 越来越/ 广泛/ 的/ 应用/ ,/ 如/ 虚拟/ 旅游/ 、/ 虚拟/ 教育/ 、/ 虚拟/ 城市/ 等/ ./ 但是/ 三维/ 模型/ 本身/ 极为/ 复杂/ ,/ 其/ 在/ 大规模/ 场景/ 或/ 高精度/ 模型/ 等/ 方面/ 的/ 应用/ 受到/ 了/ 极大/ 的/ 限制/ ./ 例如/ ,/ 现有/ 的/ 三维/ 游戏/ 其/ 模型/ 文件/ 动辄/ 十几/ GB/ 乃至/ 几十/ GB/ ,/ 移动/ 客户端/ 很难/ 满足/ 其/ 硬件/ 需求/ ./ 在/ 大规模/ 的/ B/ \/ S/ 结构/ 的/ 三维/ 虚拟现实/ 场景/ 中/ ,/ 客户端/ 所/ 需要/ 加载/ 的/ 模型/ 数量/ 和/ 质量/ 的/ 需求/ 很/ 难以/ 整体/ 加载/ 的/ 静态/ 方式/ 满足/ ./ 因此/ ,/ 动态/ 的/ 空间/ 查询/ 技术/ 广泛应用/ 于/ “/ 三维/ 互联网/ ”/ 应用/ 中/ ./ 但是/ ,/ 在/ 三维/ 虚拟现实/ 场景/ 中/ ,/ 用户/ 可能/ 只/ 对/ 可视/ 的/ 对象/ 感兴趣/ ,/ 不可/ 视/ 的/ 对象/ 对于/ 观察者/ 而言/ 就是/ 无效/ 数据/ ./ 因此/ 基于/ 可视性/ 的/ 三维/ 虚拟现实/ 场景/ 动态/ 加载/ 框架/ 也/ 就/ 成为/ 在/ 科研/ 和/ 商业/ 领域/ 都/ 具有/ 极高/ 价值/ 的/ 热点/ 研究/ ./ 在/ 三维/ 场景/ 的/ 加载/ 过程/ 中/ ,/ 现在/ 通用/ 的/ 加载/ 方式/ 是/ 以/ 观察者/ 为/ 圆心/ ,/ 整体/ 加载/ 一定/ 半径/ 内/ 的/ 所有/ 静态/ 或/ 动态/ 对象/ ./ 在/ 这/ 一/ 过程/ 中/ 不/ 考虑/ 这些/ 对象/ 是否/ 可视/ 的/ 问题/ ,/ 对/ 他们/ 的/ 可视性/ 计算/ 是/ 在/ 读入/ 客户端/ 内存/ 后/ 进行/ 的/ ./ 这种/ 先/ 传输/ 后/ 计算/ 的/ 模式/ 对于/ 网络带宽/ 和/ 客户端/ 硬件/ 的/ 要求/ 都/ 很/ 高/ ,/ 不/ 符合/ 现在/ 移动式/ 互联网/ 终端/ 和/ 云/ 计算/ 发展/ 的/ 趋势/ ./ 因此/ ,/ 先/ 计算/ 后/ 传输/ 的/ 方式/ 成为/ 网络/ 环境/ 下/ 三维/ 虚拟现实/ 场景/ 在/ 低/ 性能/ 客户端/ 加载/ 的/ 必然选择/ ./ 在/ 虚拟现实/ 场景/ 中/ ,/ 对/ 客户端/ 的/ 化身/ 所/ 能/ 看到/ 的/ 对象/ 进行/ 可视性/ 查询/ 后/ 生成/ 需/ 加载/ 对象/ 列表/ ,/ 并/ 结合/ LOD/ 技术/ 和/ 渐进式/ 传输技术/ 向/ 客户端/ 传输/ 模型/ ,/ 可以/ 有效/ 地/ 减少/ 单位/ 时间/ 内/ 需要/ 传输/ 的/ 模型/ 数据量/ ,/ 降低/ 对于/ 网络/ 和/ 硬件/ 的/ 压力/ ./ 在/ 三维/ 虚拟现实/ 场景/ 中/ ,/ 决定/ 一个/ 对象/ 是否/ 需要/ 被/ 传输/ 的/ 关键/ 就是/ 这个/ 对象/ 是否是/ 用户/ 所/ 能/ 看到/ 的/ ./ 这/ 就/ 涉及/ 到/ 了/ 对/ 三维空间/ 对象/ 的/ 可视性/ 查询/ ./ 在/ 三维/ 虚拟现实/ 场景/ 中/ ,/ 涉及/ 到/ 静态/ 对象/ 和/ 动态/ 对象/ 这/ 两类/ 对象/ 的/ 可视性/ 查询/ ./ 这/ 两种/ 可视性/ 查询/ 随着/ 用户/ 的/ 移动/ 就/ 会/ 转变/ 为/ 对/ 静态/ 对象/ 的/ 连续/ 可视/ 查询/ 和/ 对/ 动态/ 对象/ 的/ 连续/ 可视/ 查询/ ./ 这/ 两种/ 查询/ 的/ 复杂性/ 会/ 随着/ 场景/ 内/ 三维空间/ 对象/ 数量/ 的/ 增加/ 和/ 查询/ 区间/ 的/ 增加/ 而/ 增加/ ,/ 效率/ 急剧/ 恶化/ ./ 一个/ B/ \/ S/ 模式/ 下/ 的/ 大规模/ 三维/ 虚拟现实/ 场景/ ,/ 必然/ 拥有/ 众多/ 的/ 用户/ 所/ 代表/ 的/ 查询/ 线程/ ,/ 采用/ 现有/ 的/ 可视/ 查询/ 框架/ 必然/ 无法/ 满足/ 需求/ ./ 根据/ 对/ 以往/ 的/ 三维/ 虚拟现实/ 场景/ 的/ 应用/ 观察/ ,/ 发现/ 用户/ 的/ 移动/ 轨迹/ 并/ 不/ 像/ 最初/ 所/ 设想/ 的/ 那样/ 是/ 在/ 欧式/ 空间/ 内/ 的/ 自由/ 移动/ ,/ 而是/ 依托/ 于/ 路网/ 的/ ,/ 其/ 行动/ 轨迹/ 受限于/ 路网/ ./ 因此/ 对于/ 用户/ 的/ 可视/ 查询/ 请求/ ,/ 完全/ 可以/ 以/ 其/ 所在/ 路网/ 路段/ 替换/ 其/ 真实/ 移动/ 轨迹/ 进行/ 可视/ 查询/ 计算/ ./ 而/ 路段/ 和/ 静态/ 对象/ 都/ 是/ 固定/ 数据/ ,/ 这样/ 就/ 存在/ 离线/ 计算/ 的/ 可能/ ./ 而/ 对于/ 动态/ 对象/ ,/ 由于/ 其/ 移动/ 轨迹/ 也/ 都/ 限制/ 于/ 路网/ 路段/ 之中/ ,/ 因此/ 完全/ 可以/ 以/ 路段/ 间/ 的/ 固态/ 可视性/ 替代/ 移动/ 对象/ 间/ 的/ 动态/ 可视性/ ,/ 从而/ 有/ 了/ 离线/ 计算/ 的/ 可能/ ./ 基于/ 这样/ 的/ 想法/ ,/ 本文/ 提出/ 一种/ 基于/ 路网/ 的/ 三维/ 场景/ 可视/ 查询/ 加载/ 框架/ ,/ 将/ 静态/ 对象/ 的/ 可视/ 查询/ 与/ 动态/ 对象/ 的/ 可视/ 查询/ 分离/ 处理/ 、/ 将/ 可视/ 计算/ 与/ 查询/ 分离/ 处理/ ,/ 实现/ 对于/ 三维/ 场景/ 的/ 动态/ 可视性/ 加载/ ./ 本文/ 的/ 主要/ 贡献/ 如下/ :/ (/ 1/ )/ 提出/ 三维/ 虚拟/ 场景/ 基于/ 可视性/ 查询/ 的/ 动态/ 加载/ 框架/ ,/ 以/ 路网/ 路段/ 作为/ 数据/ 存储/ 、/ 查询/ 结构/ 的/ 核心/ ,/ 以此/ 为/ 基础/ 设计/ 了/ 包括/ 离线/ 预计/ 算/ 和/ 在线/ 查询处理/ 算法/ 两/ 部分/ 的/ 可视性/ 查询处理/ 策略/ ,/ 实现/ 对于/ 静态/ 对象/ 和/ 动态/ 对象/ 的/ 间接/ 可视/ 查询/ ,/ 首次/ 针对/ 大规模/ 三维/ 场景/ 的/ 实时/ 可视性/ 查询/ 加载/ 问题/ 提出/ 可行/ 的/ 解决方案/ ;/ (/ 2/ )/ 提出/ 三维/ 场景/ 内/ 的/ 静态/ 对象/ 与/ 路网/ 间/ 的/ 静态/ 对象/ 可视/ 关系/ 表/ ,/ 实现/ 对于/ 静态/ 对象/ 可视/ 查询/ 的/ 离线/ 预处理/ ,/ 避免/ 现有/ 可视/ 查询/ 模式/ 的/ 计算/ 时间/ 过长/ 的/ 缺陷/ ,/ 满足/ 对于/ 三维/ 场景/ 内/ 静态/ 对象/ 的/ 实时/ 可视/ 查询/ 的/ 时间/ 要求/ ;/ (/ 3/ )/ 通过/ 动态/ 对象/ 可视/ 关系/ 表/ 建立/ 路网/ 路段/ 间/ 的/ 可视/ 关系/ ,/ 将/ 三维/ 场景/ 内/ 的/ 移动/ 对象/ 间/ 的/ 可视/ 查询/ 转化/ 为/ 针对/ 可视/ 路段/ 的/ 范围/ 查询/ ,/ 避免/ 现有/ 可视/ 查询/ 模式/ 中/ 计算/ 开销/ 随/ 移动/ 对象/ 数量/ 增加/ 而/ 急剧/ 增加/ 的/ 缺陷/ ./ 本文/ 第/ 2/ 节/ 介绍/ 可视性/ 查询/ 和/ 移动/ 对象/ 路网/ 连续/ 查询/ 工作/ 的/ 相关/ 研究进展/ ;/ 第/ 3/ 节/ 给出/ 三维/ 场景/ 可视/ 查询/ 框架/ 及/ 数据模型/ ;/ 第/ 4/ 节/ 给出/ 静态/ 对象/ 可视/ 关系/ 表/ 和/ 动态/ 对象/ 可视/ 关系/ 表/ 的/ 原理/ 、/ 维护/ 算法/ ;/ 第/ 5/ 节/ 给出/ 基于/ 可视/ 关系/ 表/ 的/ 可视/ 查询/ 算法/ ,/ 并/ 分别/ 给出/ 对/ 静态/ 对象/ 和/ 动态/ 对象/ 的/ 可视/ 查询/ 算法/ ;/ 第/ 6/ 节/ 利用/ 实验/ 对/ 本文/ 所提/ 的/ 框架/ 、/ 模型/ 和/ 算法/ 进行/ 验证/ ;/ 第/ 7/ 节/ 总结/ 全文/ 并/ 提出/ 下/ 一步/ 的/ 研究/ 方向/ ./ 2/ 相关/ 工作/ 对/ 三维/ 虚拟现实/ 场景/ 进行/ 基于/ 可视/ 查询/ 的/ 动态/ Page3/ 加载/ ,/ 主要/ 的/ 难点/ 在于/ 进行/ 快速/ 、/ 准确/ 的/ 三维空间/ 对象/ 的/ 可视/ 查询/ ./ 由于/ 三维/ 虚拟现实/ 场景/ 的/ 特殊性/ ,/ 因此/ 其/ 主要/ 面对/ 的/ 就是/ 静态/ 对象/ 的/ 连续/ 可视/ 查询/ 和/ 移动/ 对象/ 的/ 连续/ 可视/ 查询/ ./ 最初/ ,/ 三维/ 可视/ 计算方法/ 在/ 仿真/ 领域/ 得到/ 广泛应用/ ,/ 如/ JANUS/ 通视性/ 算法/ [/ 1/ ]/ 、/ DYNTACS/ 通视性/ 算法/ [/ 2/ ]/ 和/ ModSAF/ 通视性/ 算法/ [/ 3/ ]/ 等/ ,/ 以及/ 后期/ 的/ 改进/ 算法/ 如/ Bresenham/ 通视性/ 算法/ 等/ ./ 这些/ 算法/ 都/ 是/ 在/ 网格/ 的/ 基础/ 上/ 进行/ 可视性/ 计算/ ,/ 要求/ 三维/ 场景/ 是/ 一个/ 整体/ ,/ 面对/ 独立/ 的/ 三维空间/ 对象/ 模型/ 时/ 并/ 不/ 适用/ ./ 对于/ 独立/ 存储/ 的/ 空间/ 对象/ 的/ 静态/ 可视/ 查询/ 研究/ 仍然/ 集中/ 于/ 二维/ 空间/ 中/ ./ 早/ 在/ 2004/ 年/ ,/ Zhang/ 等/ 人/ 就/ 在/ 文献/ [/ 4/ ]/ 中/ ,/ 针对/ 空间/ 中/ 存在/ 障碍/ 的/ 条件/ 下/ 的/ 查询/ ,/ 给出/ 了/ 第一个/ 综合性/ 的/ 处理/ 方法/ ,/ 对于/ 障碍/ 空间/ 下/ 的/ 范围/ 查询/ 、/ 最近/ 邻/ 查询/ 、/ 最近/ 对/ 查询/ 分别/ 给出/ 了/ 解决/ 算法/ ./ 到/ 了/ 2007/ 年/ ,/ Nutanong/ 等/ 人/ 在/ 文献/ [/ 5/ ]/ 中/ 定义/ 了/ 一种/ 不/ 需要/ 预先/ 计算/ 可视/ 区域/ 的/ VkNN/ 查询/ ,/ 利用/ 最近/ 可视/ 距离/ (/ MinViDist/ )/ 进行/ 可视/ 最近/ 邻/ 查找/ ./ Gao/ 等/ 人/ 在/ 可视/ 反/ k/ 近邻/ 查询/ [/ 6/ ]/ 和/ 连续/ 可视/ k/ 近邻/ 查询/ [/ 7/ ]/ 上/ 做/ 了/ 大量/ 的/ 工作/ ./ 在/ 文献/ [/ 6/ ]/ 中/ ,/ 提出/ VRkNN/ 查询/ ,/ 将/ 可视性/ 引入/ 反向/ k/ 近邻/ 查询/ 中/ ./ 在/ 2011/ 年/ 的/ 文献/ [/ 7/ ]/ 中/ ,/ 对/ 连续/ 可视/ k/ 近邻/ 进行/ 研究/ ,/ 将/ 连续/ 查询/ 的/ 查询/ 对象/ 抽象/ 为/ 一条/ 查询/ 线段/ ,/ 在/ 一次/ 查询/ 中/ 完成/ 整个/ CVkNN/ 查询/ ./ Lu/ 等/ 人/ 在/ 文献/ [/ 8/ ]/ 中/ 应用/ Voronoi/ 图对/ 潜在/ 可视/ 对象/ 进行/ 存储/ 和/ 查询/ ,/ 提高/ 了/ 查询/ 的/ 速度/ ;/ 但是/ 在/ 实际/ 的/ 三维/ 虚拟现实/ 场景/ 中/ 静态/ 对象/ 的/ 连续/ 可视/ 查询/ 中/ ,/ 随着/ 查询/ 区间/ 的/ 增大/ ,/ 参与/ 可视/ 计算/ 的/ 对象/ 数量/ 增加/ ,/ 可视/ 查询/ 的/ 性能/ 急剧/ 恶化/ ./ 而且/ 当/ 出现/ 查询/ 轨迹/ 接近/ 的/ 查询/ 点/ ,/ 如同/ 一条/ 道路/ 上/ 顺序/ 前进/ 的/ 用户/ 时/ ,/ 近似/ 的/ 连续/ 可视/ 查询/ 进程/ 也/ 浪费/ 了/ 大量/ 的/ 资源/ ./ 这些/ 问题/ 使得/ 三维/ 虚拟现实/ 场景/ 的/ 应用/ 规模/ 和/ 场景/ 内/ 用户数量/ 受到/ 极大/ 的/ 限制/ ./ 在/ 对/ 移动/ 对象/ 的/ 连续/ 查询/ 研究/ 方面/ ,/ 现有/ 的/ 研究/ 主要/ 分为/ 欧式/ 空间/ 内/ 的/ 查询/ 和/ 网络空间/ 内/ 的/ 查询/ 两个/ 分支/ ./ 在/ 欧式/ 空间/ 的/ 移动/ 对象/ 可视性/ 查询/ 方面/ ,/ 2007/ 年/ Kusakari/ 等/ 人/ 在/ 文献/ [/ 9/ ]/ 中/ 就/ 进行/ 了/ 研究/ ,/ 给出/ 了/ 两种/ 新/ 的/ 索引/ 结构/ ./ 王艳秋/ 等/ 人/ 在/ 2010/ 年/ 的/ 文献/ [/ 10/ ]/ 中/ ,/ 给出/ 了/ 一种/ 基于/ 概率/ 的/ 不/ 确定/ 对象/ 的/ 可视/ k/ 近邻/ 查询/ 机制/ ./ 2011/ 年/ Guo/ 等/ 人/ 在/ 文献/ [/ 11/ ]/ 中/ 定义/ 了/ 一种/ 新/ 的/ 空间/ 查询/ DBS/ 并/ 给出/ 了/ DBS/ 算法/ ,/ 在/ 欧式/ 空间/ 及/ 路网/ 空间/ 内/ 都/ 能/ 给出/ 更好/ 的/ 结果/ ./ 2012/ 年/ ,/ Cheema/ 等/ 人/ 在/ 文献/ [/ 12/ ]/ 中/ 提出/ 在/ 欧式/ 空间/ 和/ 路网/ 空间/ 中/ 的/ 连续/ 反向/ k/ 近邻/ 查询/ ,/ 该/ 方法/ 不仅/ 提高/ 了/ 计算速度/ 还/ 降低/ 了/ 计算/ 消耗/ ./ 2010/ 年/ G/ ü/ ting/ 等/ 人/ 在/ 文献/ [/ 13/ ]/ 中/ 对/ 基于/ 路径/ 的/ 移动/ 对象/ k/ 近邻/ 查询/ 做/ 了/ 研究/ ,/ 利用/ 路径/ 来/ 简化/ 查询/ 在/ 不同/ 时间段/ 内/ 移动/ 对象/ 的/ K/ 最近/ 邻/ 查询/ ;/ 2014/ 年/ ,/ 王艳秋/ 等/ 人/ 在/ 文献/ [/ 14/ ]/ 中/ 提出/ 一种/ 连续/ 反/ k/ 近邻/ 查询/ ,/ 利用/ 一种/ 过滤/ 和/ 提纯/ 的/ 框架/ 来/ 处理/ 移动/ 对象/ 的/ 连续/ 查询/ 问题/ ./ 而/ 在/ 网络空间/ 的/ 查询/ 方面/ ,/ Papadias/ 等/ 人/ 早/ 在/ 2003/ 年/ 就/ 在/ 文献/ [/ 15/ ]/ 中/ 对/ 移动/ 对象/ 在/ 路网/ 环境/ 下/ 的/ 查询/ 进行/ 了/ 详尽/ 的/ 研究/ ,/ 给出/ 了/ 范围/ 查询/ 、/ 最近/ 邻/ 查询/ 和/ K/ 近邻/ 查询/ 的/ 算法/ ,/ 但是/ 对于/ 路网/ 内/ 移动/ 对象/ 的/ 可视性/ 则/ 完全/ 没有/ 涉及/ ,/ 将/ 该/ 方法/ 应用/ 于/ 网络/ 虚拟/ 场景/ 中/ 时会/ 产生/ 大量/ 的/ 不可/ 视/ 的/ 无效/ 数据/ ;/ 赵亮/ 等/ 人/ 在/ 文献/ [/ 16/ ]/ 中/ 对于/ 路网/ 中/ 移动/ 对象/ 的/ 连续/ K/ 近邻/ 查询/ 进行/ 了/ 研究/ ,/ 提出/ 一种/ 多线程/ 的/ 处理/ 框架/ ,/ 将/ 连续/ 查询/ 转化/ 为/ 周期性/ 查询/ ,/ 并/ 将/ 数据/ 更新/ 与/ 查询处理/ 分开/ 进行/ ,/ 该/ 方法/ 具有/ 良好/ 的/ 路网/ 扩展/ 性能/ ,/ 但是/ 同样/ 会/ 由于/ 对/ 路网/ 内/ 对象/ 的/ 可视性/ 没有/ 涉及/ 而/ 产生/ 大量/ 无效/ 数据/ ,/ 本文/ 借鉴/ 了/ 其/ 数据/ 更新/ 的/ 模式/ ,/ 并/ 通过/ 定义/ 路网/ 间/ 可视性/ 实现/ 了/ 对/ 路网/ 内/ 动态/ 对象/ 的/ 可视性/ 查询/ ./ Jeung/ 等/ 人/ 在/ 文献/ [/ 17/ ]/ 中/ 利用/ 轨迹/ 预测/ 在/ 路网/ 中/ 进行/ 范围/ 查询/ ,/ 该/ 方法/ 预测/ 移动/ 对象/ 的/ 行进/ 轨迹/ ,/ 并/ 利用/ 该/ 轨迹/ 对/ 查询/ 结果/ 进行/ 筛选/ 和/ 排序/ ./ 对/ 轨迹/ 预测/ 的/ 准确率/ 影响/ 着/ 查询/ 的/ 效率/ ,/ 而/ 在/ 人机交互/ 性较/ 高/ 的/ 虚拟/ 场景/ 内/ ,/ 动态/ 对象/ 的/ 轨迹/ 基本/ 不可/ 预测/ ,/ 因此/ 该/ 方法/ 不/ 可行/ ./ 2014/ 年/ Lin/ 和/ Wu/ 在/ 文献/ [/ 18/ ]/ 中/ 分析/ 路网/ 中/ 移动/ 对象/ 的/ 运动/ 关系/ ,/ 利用/ 路径/ 提出/ 一种/ 范围/ 查询/ 机制/ ,/ 该/ 方法/ 利用/ 轨迹/ 与/ 移动/ 速度/ 确定/ 最小/ 更新/ 时间/ 间隔/ 来/ 降低/ 查询/ 的/ 频率/ ,/ 同样/ 当/ 虚拟/ 场景/ 内/ 的/ 移动/ 对象/ 的/ 运动/ 轨迹/ 不/ 确定/ 、/ 不可/ 预知/ 时/ ,/ 该/ 方法/ 就/ 失效/ 了/ ,/ 而且/ 同样/ ,/ 在/ 该/ 文章/ 内/ 对于/ 路网/ 内/ 动态/ 对象/ 的/ 可视性/ 也/ 没有/ 涉及/ ./ 事实上/ ,/ 现有/ 的/ 对于/ 移动/ 对象/ 的/ 可视/ 查询/ ,/ 都/ 没有/ 考虑/ 过/ 路网/ 内/ 移动/ 对象/ 间/ 的/ 可视性/ 问题/ ./ 因此/ ,/ 当前/ 对于/ 三维/ 虚拟现实/ 场景/ 内/ 移动/ 对象/ 的/ 可视/ 查询/ 问题/ 存在/ 明显/ 的/ 不足/ :/ 在/ 欧式/ 空间/ 内/ ,/ 移动/ 对象/ 的/ 可视/ 查询/ 计算/ 过于/ 复杂/ 且/ 耗时/ ,/ 无法/ 满足/ 实时性/ 的/ 需求/ ;/ 而/ 在/ 路网/ 空间/ 中/ ,/ 各种/ 扩张/ 查询/ 的/ 方式/ 使得/ 查询/ 的/ 时间/ 要求/ 可以/ 得到/ 满足/ ,/ 但/ 却/ 完全/ 没有/ 考虑/ 移动/ 对象/ 间/ 的/ 可视性/ 关系/ ,/ 得到/ 的/ 无效/ 数据/ 过多/ ,/ 对/ 带宽/ 和/ 客户端/ 的/ 硬件/ 造成/ 的/ 压力/ 过大/ ,/ 也/ 不/ 满足/ 实际/ 需求/ ./ 此前/ 的/ 研究/ 认为/ 观察者/ 在/ 三维/ 场景/ 中/ 的/ 移动/ 是/ 在/ 欧式/ 空间/ 内/ 进行/ 的/ ,/ 所以/ 采用/ 了/ 简单/ 的/ 范围/ 查询/ 来/ 获取/ 需/ 加载/ 的/ 对象/ ,/ 因此/ 产生/ 了/ 大量/ 的/ 无效/ 数据/ ./ 采用/ 可视/ 查询/ 对/ 数据/ 进行/ 过滤/ 时/ 又/ 因为/ 计算/ 复杂/ 的/ Page4/ 原因/ 而/ 需要/ 限制/ 移动/ 对象/ 的/ 数量/ ,/ 使得/ 三维/ 场景/ 的/ 应用/ 规模/ 和/ 范围/ 受到/ 极大/ 的/ 限制/ ./ 在/ 实际/ 的/ B/ \/ S/ 模式/ 的/ 三维/ 虚拟现实/ 场景/ 的/ 应用/ 中/ 可以/ 观察/ 到/ 这样/ 一个/ 现象/ ,/ 观察者/ 的/ 行动/ 受到/ 路网/ 的/ 限制/ ./ 因此/ 可以/ 采用/ 用户/ 所在/ 的/ 路段/ 来/ 代替/ 用户/ 实际/ 的/ 查询/ 区间/ ,/ 使/ 对/ 静态/ 对象/ 的/ 可视/ 查询/ 可以/ 在/ 离线/ 情况/ 下/ 计算/ ./ 而/ 对于/ 移动/ 对象/ ,/ 路段/ 上/ 的/ 移动/ 对象/ 间/ 的/ 可视/ 关系/ 也/ 可以/ 用/ 路段/ 间/ 的/ 可视/ 关系/ 近似/ 表示/ ./ 这样/ 就/ 将/ 移动/ 对象/ 间/ 的/ 实时/ 可视/ 计算/ 转化/ 为/ 路段/ 间/ 的/ 可视/ 关系/ 这样/ 的/ 静态/ 对象/ 的/ 可视/ 关系/ 计算/ ,/ 也/ 可以/ 在/ 离线/ 阶段/ 进行/ ./ 3/ 基于/ 路网/ 的/ 间接/ 查询/ 加载/ 框架/ 与/ 模型/ 3.1/ 动态/ 加载/ 框架/ 因为/ 在/ 三维/ 虚拟/ 场景/ 中/ ,/ 用户/ 所/ 控制/ 的/ 观察者/ 必然/ 是/ 一个/ 动态/ 对象/ ,/ 而/ 动态/ 对象/ 的/ 运动/ 轨迹/ 又/ 被/ 路网/ 所/ 限制/ ,/ 因此/ 将/ 静态/ 对象/ 和/ 动态/ 对象/ 以/ 路网/ 路段/ 为主/ 键/ 分别/ 建立/ 索引/ 是/ 可行/ 的/ ./ 在/ 现有/ 的/ 商业/ 开源/ 软件/ 中/ ,/ 这一/ 结构/ 也/ 得到/ 了/ 应用/ ./ 但是/ 现有/ 的/ 结构/ 中距离/ 因素/ 是/ 建立/ 索引/ 的/ 条件/ ,/ 在/ 加载/ 时/ 只/ 考虑/ 对象/ 与/ 路段/ 间/ 的/ 距离/ 而/ 不/ 考虑/ 加载/ 对象/ 是否/ 可视/ 的/ 问/ 在/ 现有/ 的/ GIS/ 系统/ 中/ ,/ 基于/ 路网/ 路段/ 的/ 存储/ 和/ 动态/ 加载/ 的确/ 有/ 应用/ ,/ 但是/ 主要/ 仍然/ 是/ 基于/ 距离/ 条图/ 1/ 基于/ 路网/ 的/ 可视/ 动态/ 加载/ 框架/ 题/ ./ 这样/ 在/ 生成/ 索引/ 时/ 的/ 速度/ 较/ 快/ ,/ 维护/ 也/ 较为/ 方便/ ./ 但/ 缺点/ 是/ 在/ 加载/ 时会/ 产生/ 大量/ 的/ 无效/ 数据/ ,/ 浪费/ 带宽/ 和/ 客户端/ 硬件资源/ ./ 因此/ 提出/ 一种/ 基于/ 可视性/ 的/ 动态/ 加载/ 框架/ ,/ 以/ 路网/ 路段/ 代替/ 动态/ 对象/ 的/ 实际/ 位置/ 进行/ 可视/ 查询/ 和/ 加载/ ./ 对于/ 静态/ 对象/ ,/ 可以/ 计算/ 固定/ 的/ 路段/ 与/ 固定/ 的/ 静态/ 对象/ 之间/ 的/ 可视/ 关系/ ,/ 给出/ 每个/ 路段/ 可视/ 的/ 静态/ 对象/ 列表/ ;/ 对于/ 动态/ 对象/ ,/ 因为/ 所有/ 的/ 动态/ 对象/ 都/ 是/ 在/ 路网/ 路段/ 上/ 的/ ,/ 所以/ 互相/ 不可/ 视/ 的/ 路段/ 上/ 的/ 动态/ 对象/ 也/ 一定/ 互相/ 不可/ 视/ ,/ 所以/ 计算/ 固定/ 的/ 路段/ 间/ 的/ 可视/ 关系/ 也/ 可以/ 代替/ 实际/ 的/ 动态/ 对象/ 间/ 的/ 可视/ 关系/ ./ 这一/ 框架/ 的/ 好处/ 是/ ,/ 路网/ 路段/ 和/ 静态/ 对象/ 都/ 是/ 固定/ 的/ 数据/ ,/ 因此/ 其/ 可视/ 计算/ 可以/ 离线/ 进行/ ,/ 从而/ 避免/ 复杂/ 的/ 在线/ 计算/ ./ 同时/ ,/ 对于/ 三维/ 虚拟现实/ 场景/ 内/ 大量/ 用户/ 的/ 并发/ 可视/ 查询/ 请求/ 可以/ 根据/ 路段/ 属性/ 进行/ 线性/ 查询/ 的/ 批处理/ ,/ 而/ 不是/ 进行/ 近似/ 的/ 在线/ 可视/ 计算/ ,/ 这样/ 极大/ 减轻/ 了/ 服务器/ 的/ 压力/ ./ 根据/ 这一/ 思路/ 在/ 三维/ 场景/ 的/ 可视性/ 查询/ 中/ ,/ 提出/ 一种/ 基于/ 路网/ 的/ 可视/ 动态/ 加载/ 框架/ ,/ 如图/ 1/ 所示/ ./ 该/ 框架/ 的/ 主要/ 思想/ 是/ ,/ 以/ 路网/ 作为/ 索引/ ,/ 将/ 三维/ 场景/ 内/ 的/ 对象/ 分为/ 静态/ 对象/ 和/ 动态/ 对象/ 两/ 部分/ 分别/ 进行/ 处理/ ;/ 建立/ 路网/ 路段/ 与/ 对象/ 间/ 的/ 可视性/ 关系/ ,/ 将/ 可视性/ 计算/ 与/ 在线/ 查询/ 分离/ 进行/ ./ 件/ 的/ 查询/ 和/ 加载/ ,/ 而/ 在/ 本文/ 所提/ 框架/ 中/ ,/ 是/ 针对/ 三维/ 虚拟现实/ 场景/ 的/ 动态/ 加载/ ,/ 可见/ 性是/ 首要/ 的/ 加载/ 条/ Page5/ 件/ ./ 为了/ 避免/ 复杂/ 的/ 三维/ 可视/ 计算/ ,/ 尤其/ 是/ 动态/ 对象/ 的/ 可视/ 计算/ 耗时/ 过长/ 的/ 问题/ ,/ 提出/ 了/ 静态/ 对象/ 可视/ 关系/ 表/ 和/ 动态/ 对象/ 可视/ 关系/ 表/ ,/ 将/ 计算/ 过程/ 放在/ 离线/ 预计/ 算/ 阶段/ 进行/ ,/ 从而/ 满足/ 了/ 在线/ 查询/ 的/ 时间/ 要求/ ./ 在/ 预处理/ 阶段/ 对/ 可视性/ 进行/ 计算/ ./ 对于/ 静态/ 对象/ ,/ 建立/ 其/ 与/ 路网/ 中/ 的/ 路段/ 之间/ 的/ 可视/ 对应/ 关系/ ;/ 对于/ 动态/ 对象/ ,/ 则/ 通过/ 计算/ 路网/ 中/ 路段/ 间/ 的/ 可视/ 关系/ ,/ 并/ 根据/ 这一/ 关系/ 对/ 移动/ 对象/ 进行/ 可视/ 范围/ 查询/ ./ 在/ 数据/ 更新/ 阶段/ ,/ 为/ 每个/ 路段/ 建立/ 一个/ 列表/ 保存/ 该/ 路段/ 上/ 的/ 动态/ 对象/ ,/ 对/ 动态/ 对象/ 进行/ 维护/ 和/ 更新/ ./ 生成/ 一个/ 以/ 路段/ 为/ 索引/ 的/ 可视/ 数据表/ ./ 在/ 动态/ 加载/ 阶段/ ,/ 则/ 根据/ 用户/ 所处/ 的/ 位置/ 信息/ 在/ 可视/ 数据表/ 中/ 进行/ 线性/ 查询/ ,/ 获取/ 需要/ 加载/ 的/ 静态/ 对象/ 和/ 动态/ 对象/ 列表/ 后/ 进行/ 数据/ 的/ 传输/ 和/ 加载/ ./ 不必/ 进行/ 在线/ 的/ 可视/ 计算/ 以/ 节省时间/ ./ 下面/ 将/ 分别/ 说明/ 各个/ 阶段/ 在/ 框架/ 中/ 的/ 作用/ 、/ 处理/ 方法/ 和/ 其中/ 使用/ 的/ 数据结构/ ./ 3.2/ 数据模型/ 在/ 对/ 数据/ 的/ 预处理/ 阶段/ ,/ 需要/ 建立/ 两个/ 可视/ 关系/ 表/ ,/ 分别/ 是/ 路网/ 与/ 静态/ 对象/ 间/ 的/ 静态/ 对象/ 可视/ 关系/ 表/ 和/ 路网/ 中/ 路段/ 之间/ 的/ 动态/ 对象/ 可视/ 关系/ 表/ ./ 通过/ 这/ 两个/ 关系/ 表/ ,/ 分别/ 将/ 三维/ 场景/ 内/ 的/ 静态/ 对象/ 和/ 图/ 2/ 最小/ 距离/ MinDist/ 和/ 投影/ 角度/ θ/ 定义/ 5/ (/ 投影/ 角度/ )/ ./ 设/ 路段/ 在/ XOY/ 平面/ 上/ 的/ 投影/ 为/ S1/ ,/ 静态/ 对象/ O/ 到/ 路段/ S1/ 的/ 最小/ 距离/ 为/ 线段/ L/ ,/ L/ 与/ S1/ 垂直/ 相交/ 于点/ J/ ,/ 垂直/ 投影面/ VJZ/ 垂直/ 平面/ XOY/ 于/ L/ ,/ 即/ {/ VJZ/ |/ (/ VJZ/ ⊥/ XOY/ )/ ∩/ (/ VJZ/ ∩/ XOY/ =/ L/ )/ }/ ,/ 如图/ 2/ (/ b/ )/ 所示/ ./ 静态/ 对象/ O/ 在/ 平面/ VJZ/ 上/ 的/ 投影/ 的/ MBR/ 为/ B/ ,/ 则/ 投影/ 角度/ θ/ 为/ ∠/ MJN/ ,/ 如图/ 2/ (/ c/ )/ 所示/ ./ 定义/ 6/ (/ 路段/ 可视/ 距离/ )/ ./ 设/ 两个/ 路段/ n1/ 和/ n2/ ,/ 则/ 路段/ 可视/ 距离/ D/ :/ D/ =/ 烄/ 烅/ 烆/ 动态/ 对象/ 与/ 路网/ 路段/ 间/ 的/ 可视/ 关系/ 固化/ ./ 将/ 复杂/ 的/ 可视/ 计算/ 在/ 预处理/ 阶段/ 完成/ ,/ 加快/ 在线/ 查询/ 的/ 反应速度/ ./ 因此/ 下面/ 先/ 给出/ 在/ 本文/ 中/ 所/ 涉及/ 到/ 的/ 定义/ 及/ 相应/ 的/ 数据结构/ ,/ 以便/ 更好/ 地/ 理解/ 本文/ 的/ 思路/ ./ 定义/ 1/ (/ 道路网/ )/ ./ 一个/ 道路网/ 路/ 可以/ 表示/ 为/ 一个/ 无向/ 图/ G/ =/ (/ N/ ,/ E/ )/ ,/ 其中/ ,/ N/ 是/ 顶点/ (/ 结点/ )/ 的/ 集合/ ;/ E/ 是/ 路段/ 边/ 的/ 集合/ ./ 定义/ 2/ (/ 静态/ 对象/ )/ ./ 一个/ 静态/ 对象/ 在/ 三维空间/ 中/ 可以/ 表示/ 为/ 一个/ 方向/ 包围/ 盒/ OBB/ ,/ OBB/ =/ (/ p1/ ,/ p2/ ,/ θ/ )/ ,/ 其中/ p1/ (/ xmin/ ,/ ymin/ ,/ zmin/ )/ 和/ p2/ (/ xmax/ ,/ ymax/ ,/ zmax/ )/ 分别/ 是/ 包围/ 盒/ 的/ 对称/ 顶角/ ,/ θ/ 为/ 该/ OBB/ 在/ 水平面/ 与/ 坐标轴/ 的/ 夹角/ ./ 定义/ 3/ (/ 动态/ 对象/ )/ ./ 在/ 到/ 路网/ 中/ 的/ 一个/ 动态/ 对象/ 位于/ 网路/ 对应/ 的/ 无/ 向/ 图/ 中/ 的/ 路段/ 边/ e/ (/ e/ ∈/ E/ )/ 上/ ,/ 移动/ 对象/ 在/ 图/ 中/ 的/ 位置/ 可以/ 表示/ 为/ 一个/ 四元组/ (/ n1/ ,/ n2/ ,/ speed/ ,/ e/ )/ ,/ 其中/ ,/ n1/ 和/ n2/ 是/ 移动/ 对象/ 所在/ 路段/ 边/ 的/ 两个/ 结点/ ,/ speed/ 是/ 当前/ 运动/ 速度/ ,/ e/ (/ e/ ∈/ E/ )/ 是/ 移动/ 对象/ 当前/ 所在/ 的/ 路段/ 边/ ./ 定义/ 4/ (/ 最小/ 距离/ )/ ./ 设/ 路段/ 在/ XOY/ 平面/ 上/ 投影/ 为/ S1/ ,/ 静态/ 对象/ O/ 在/ XOY/ 平面/ 上/ 投影/ 的/ MBR/ 为/ A/ ,/ 则/ 最小/ 距离/ MinDist/ 为/ A/ 到/ S1/ 的/ 最小/ 欧氏/ 距离/ ,/ 如图/ 2/ (/ a/ )/ 所示/ ./ 其中/ length/ (/ n1/ ,/ n2/ )/ 即为/ n1/ 和/ n2/ 的/ 最小/ 欧式/ 距离/ ./ 根据/ 静态/ 对象/ 和/ 动态/ 对象/ 的/ 定义/ ,/ 可以/ 给出/ 对象/ 与/ 路网/ 的/ 路段/ 间/ 的/ 可视性/ 的/ 定义/ ./ 定义/ 7/ (/ 可视性/ )/ ./ 给定/ 一个/ 数据/ 集/ P/ 、/ 一个/ 障碍/ 集/ O/ 和/ 查询/ 点/ q/ ,/ p/ 和/ q/ 是/ 可视/ 的/ ,/ 当且/ 仅/ 当/ 存在/ p/ 和/ q/ 之间/ 的/ 连线/ 不/ 穿过/ O/ 的/ 内部/ ,/ 即/ 任意/ o/ ∈/ O/ ,/ p/ ,/ [/ ]/ q/ ∩/ o/ =/ / ./ 由于/ 在/ 三维/ 虚拟/ 场景/ 中/ ,/ 查询/ 点/ 必然/ 是/ 一个/ 移动/ 对象/ ,/ 因此/ 根据/ 定义/ 3/ ,/ 每个/ 查询/ 点/ 必然/ 在/ 路网/ 中/ 的/ 一个/ 路段/ 上/ ,/ 所以/ 可以/ 得出/ 以下/ 两个/ 定理/ ./ 定理/ 1/ ./ 对于/ 某/ 查询/ 点/ q/ 可视/ 的/ 静态/ 对象/ ,/ 则/ Page6/ 一定/ 对/ 该/ 查询/ 点/ 所在/ 路段/ n/ 可视/ ;/ 反之/ ,/ 当/ 查询/ 点/ q/ 在/ 路段/ n/ 上/ 任意/ 点间/ 移动/ 时/ ,/ 对于/ n/ 可视/ 的/ 静态/ 对象/ 也/ 必将/ 对/ q/ 可视/ ./ 证明/ ./ 设/ 静态/ 对象/ o1/ 对/ q/ 所见/ ,/ 则/ 存在/ 线/ s/ 使/ [/ q/ ,/ o1/ ]/ ∩/ O/ =/ / ,/ 使/ o1/ 对/ q/ 所在/ 路段/ n/ 可视/ ;/ 当/ o1/ 对/ 路段/ n/ 可视/ 时/ ,/ 存在/ o1/ 与/ n/ 之间/ 的/ 连线/ s/ 交/ n/ 于/ a/ 点/ ,/ 因为/ q/ 在/ n/ 上/ 任意/ 行动/ ,/ 则/ q/ 必/ 通过/ a/ 点/ ,/ 使/ o1/ 对/ n/ 可视/ ./ 定理/ 2/ ./ 当/ 两个/ 路段/ 上/ 的/ 移动/ 对象/ o1/ (/ o1/ ∈/ n1/ )/ 与/ o2/ (/ o2/ ∈/ n2/ )/ 互相/ 可视/ 时/ ./ n1/ 和/ n2/ 同样/ 互相/ 可视/ ;/ 反之/ ,/ n1/ 和/ n2/ 两个/ 路段/ 互相/ 可视/ ,/ 则/ 在/ 两个/ 路段/ 上/ 任意/ 移动/ 的/ 动态/ 对象/ 必然/ 互相/ 可视/ ./ 证明/ ./ o1/ 与/ o2/ 可视/ ,/ 则/ 存在/ 一条线/ o1o2/ 使/ [/ n1/ ,/ n2/ ]/ ∩/ O/ =/ / ,/ 则/ n1/ 与/ n2/ 互相/ 可视/ ./ 当/ n1/ 与/ n2/ 互相/ 可视/ 时/ ,/ 则/ 至少/ 存在/ 一点/ a/ (/ a/ ∈/ n1/ )/ 和/ 点/ b/ (/ b/ ∈/ n2/ )/ ,/ 使/ ab/ ∩/ O/ =/ / ./ 因为/ 动态/ 对象/ o1/ (/ o1/ ∈/ n1/ )/ 与/ o2/ (/ o2/ ∈/ n2/ )/ 在/ n1/ 与/ n2/ 上/ 任意/ 行动/ ,/ 则/ 必有/ 一/ 时刻/ 使/ o1o2/ 与/ ab/ 重合/ ,/ 则/ o1o2/ 互相/ 可视/ ./ 根据/ 定理/ 1/ ,/ 可以/ 为/ 路网/ 中/ 的/ 每/ 一个/ 路段/ 建立/ 一个/ 静态/ 对象/ 可视/ 关系/ 表/ (/ StaticObjectVisibleRelationship/ ,/ SOVR/ )/ 记录/ 对于/ 该/ 路段/ 可视/ 的/ 静态/ 对象/ ./ 从而/ 将/ 静态/ 对象/ 的/ 可视/ 关系/ 通过/ 路网/ 固化/ 下来/ ,/ 不必/ 再/ 进行/ 在线/ 的/ 可视/ 计算/ ./ 该表是/ 一个/ Hash/ 表/ ,/ 存储/ 的/ 内容/ 包括/ :/ (/ 1/ )/ 静态/ 对象/ id/ ;/ (/ 2/ )/ 静态/ 对象/ 与/ 路段/ 间/ 的/ 最小/ 距离/ ;/ (/ 3/ )/ 静态/ 对象/ 与/ 路段/ 间/ 的/ 投影/ 角度/ ./ 通过/ 查询/ 该表/ ,/ 可以/ 避免/ 进行/ 在线/ 的/ 可视/ 计算/ 并/ 对/ 在/ 同一/ 路段/ 的/ 多个/ 查询/ 进行/ 批处理/ 以/ 降低/ 服务器/ 压力/ ./ 虽然/ 降低/ 了/ 可视/ 查询/ 的/ 精度/ ,/ 额外/ 增加/ 了/ 一些/ 静态/ 对象/ 结果/ ,/ 但是/ 避免/ 了/ 在线/ 计算/ ,/ 满足/ 了/ 可视/ 查询/ 的/ 时间/ 需求/ ./ 根据/ 定理/ 2/ ,/ 可以/ 为/ 路网/ 中/ 每/ 一个/ 路段/ 建立/ 一个/ 动态/ 对象/ 可视/ 关系/ 表/ (/ DynamicObjectVisibleRelationship/ ,/ DOVR/ )/ 来/ 描述/ 各个/ 路段/ 间/ 的/ 可视/ 关系/ ,/ 通过/ 该表/ 将/ 移动/ 对象/ 间/ 的/ 复杂/ 的/ 可视/ 计算/ ,/ 转化/ 为/ 对/ 可视/ 路段/ 的/ 范围/ 查询/ ./ 该表/ 包括/ 如下/ 信息/ :/ (/ 1/ )/ 路段/ id/ ;/ (/ 2/ )/ 路段/ 间/ 的/ 可视/ 距离/ D/ ./ 通过/ 动态/ 对象/ 可视/ 关系/ 表对/ 移动/ 对象/ 进行/ 可视/ 查询/ ,/ 虽然/ 精度/ 有所/ 下降/ ,/ 增加/ 了/ 一些/ 无效/ 数据/ ,/ 但/ 却/ 可以/ 满足/ 可视/ 查询/ 的/ 时间/ 需求/ ./ 3.3/ 数据/ 存储/ 与/ 更新/ 对于/ 三维/ 场景/ 中/ 的/ 相对/ 不变/ 的/ 静态/ 对象/ 和/ 路网/ 数据/ ,/ 在/ 离线/ 预处理/ 阶段/ 进行/ 复杂/ 的/ 可视/ 计算/ ,/ 建立/ 静态/ 对象/ 可视/ 关系/ 表及/ 动态/ 对象/ 可视/ 关系/ 表/ ,/ 可以/ 避免/ 在线/ 查询/ 阶段/ 进行/ 长时间/ 的/ 计算/ ./ 而/ 对于/ 路网/ 中/ 的/ 动态/ 对象/ ,/ 首先/ 按照/ 路网/ 路段/ 为/ 索引/ 为/ 每/ 一个/ 路段/ 维护/ 一个/ 列表/ 保存/ 指向/ 移动/ 对象/ 的/ 指针/ ./ 当/ 移动/ 对象/ 所在/ 路段/ 发生变化/ 时/ ,/ 对/ 该/ 列表/ 进行/ 更新/ 维护/ ,/ 确保/ 在/ 每/ 一个/ 路段/ 的/ 移动/ 对象/ 数据/ 的/ 实时性/ ,/ 以便/ 于/ 在线/ 查询处理/ ./ 因此/ ,/ 对于/ 一个三维/ 场景/ ,/ 如/ 路网/ 中有/ n/ 个/ 路段/ ,/ m/ 个/ 静态/ 对象/ ,/ 则/ 需要/ 建立/ n/ 个/ 静态/ 对象/ 可视/ 关系/ 表/ ,/ 每个/ 表/ 的/ 长度/ 较为/ 稳定/ ./ 设/ 建筑/ 密度/ 为/ k/ ,/ 如/ 在/ 城市/ 环境/ 中/ ,/ 建筑/ 密度/ k/ 会/ 较大/ ,/ 则/ 单个/ 路段/ 的/ 可视/ 范围/ 较/ 小/ ;/ 而/ 在/ 野外/ 环境/ 中/ ,/ 虽然/ 视野/ 较为/ 开阔/ ,/ 但是/ 建筑/ 密度/ k/ 较/ 小/ ./ 因此/ 在/ 一般/ 情况/ 下/ ,/ 单个/ 路段/ 的/ 静态/ 对象/ 可视/ 关系/ 表/ 的/ 长度/ 比较稳定/ ./ 而/ 对于/ 动态/ 对象/ 的/ 存储/ ,/ 为/ 每/ 一个/ 路段/ 维护/ 一个/ 列表/ 保存/ 指向/ 动态/ 对象/ 的/ 指针/ ,/ 因此/ 需要/ 建立/ n/ 个/ 列表/ ,/ 列表/ 长度/ 与/ 动态/ 对象/ 的/ 数量/ 及/ 密度/ 有关/ ./ 3.4/ 在线/ 查询/ 阶段/ 在/ 在线/ 查询/ 阶段/ ,/ 首先/ 获取/ 查询/ 点/ 所在/ 路段/ id/ ./ 根据/ 路段/ id/ 分别/ 对/ 需/ 加载/ 的/ 可视/ 的/ 静态/ 对象/ 和/ 动态/ 对象/ 进行/ 查询/ ,/ 获取/ 结果/ 集后/ 再/ 进行/ 加载/ ./ 借助/ 静态/ 对象/ 可视/ 关系/ 表/ 进行/ 的/ 线性/ 查询/ 可以/ 获取/ 对于/ 该/ 路段/ 可见/ 的/ 静态/ 对象/ 集/ ;/ 在/ 动态/ 对象/ 可视/ 关系/ 表中/ 的/ 线性/ 查询/ 可以/ 获取/ 与/ 查询/ 点/ 所在/ 路段/ 可见/ 的/ 路段/ 的/ id/ ,/ 并/ 根据/ 路段/ id/ 检索/ 移动/ 对象/ ,/ 获取/ 可视/ 动态/ 对象/ 结果/ 集/ ./ 将/ 这/ 两个/ 结果/ 集/ 汇总/ 便/ 可以/ 不/ 进行/ 复杂/ 的/ 可视/ 计算/ 而/ 得出/ 对于/ 查询/ 点/ 而言/ 可视/ 的/ 静态/ 和/ 动态/ 对象/ ,/ 从而/ 实现/ 对于/ 大规模/ 三维/ 虚拟/ 场景/ 的/ 动态/ 加载/ ./ 3.5/ 性能/ 分析/ 在/ 基于/ 路网/ 的/ 可视性/ 查询/ 框架/ 中/ ,/ 通过/ 提取/ 并/ 抽象/ 查询/ 点/ 的/ 位置/ 属性/ ,/ 将/ 查询/ 点/ 个体/ 的/ 动态/ 的/ 可视性/ 计算/ 转化/ 为/ 所在/ 路段/ 的/ 静态/ 的/ 可视性/ 计算/ ./ 以/ 静态/ 的/ 路段/ 作为/ 索引/ ,/ 将/ 所有/ 的/ 数据/ 的/ 可视性/ 计算/ 放在/ 离线/ 预处理/ 阶段/ ,/ 避免/ 了/ 在线/ 的/ 复杂/ 计算/ ./ 将/ 在线/ 查询/ 转变/ 为/ 一次/ 线性/ 的/ Hash/ 查询/ ./ 原有/ 的/ 可视性/ 查询/ 模式/ ,/ n/ 个/ 不同/ 位置/ 的/ 查询/ 点/ 需要/ 进行/ n/ 次/ 复杂/ 的/ 可视性/ 计算/ ,/ 需要/ 对/ 静态/ 对象/ 数据/ 集及/ 动态/ 对象/ 数据/ 集/ 进行/ 重复/ 的/ 读取/ 和/ 计算/ ./ 而/ 在/ 本文/ 提出/ 的/ 框架/ 中/ ,/ 只/ 需要/ 在/ 建立/ 、/ 维护/ 可视/ 关系/ 表时/ 进行/ 一次/ 可视性/ 计算/ ,/ n/ 个/ 查询/ 点/ 就/ 可以/ 按照/ 位置/ 属性/ 划分/ 成/ m/ (/ m/ </ n/ )/ 组/ ,/ 进行/ m/ 次/ 复杂度/ 为/ O/ (/ 1/ )/ 的/ 线性/ 查询/ ,/ 在/ 查询/ 阶段/ 不/ 需要/ 进行/ 可视性/ 计算/ ,/ 也/ 就/ 不/ 需要/ 进行/ 频繁/ 的/ 数据/ 读取/ 和/ 计算/ ,/ 降低/ 了/ 查询/ 数量/ 对于/ 服务器/ 的/ 压力/ ,/ 加快/ 了/ 在线/ 查询/ 的/ 反应速度/ ./ 在/ 面对/ 大规模/ 的/ 三维/ 虚拟/ 场景/ 时/ ,/ 基于/ 路网/ 的/ 可视性/ 查/ Page7/ 询/ 框架/ 明显/ 具有/ 更好/ 的/ 性能/ ./ 当/ 三维/ 虚拟/ 场景/ 的/ 数据/ 规模/ 增加/ 时/ ,/ 静态/ 可见/ 关系/ 表/ 和/ 动态/ 可见/ 关系/ 表/ 的/ 查询/ 效率/ 并/ 不会/ 发生/ 显著/ 地/ 下降/ ./ 这/ 是因为/ 对于/ 静态/ 对象/ 的/ 可见/ 性/ 受到/ 建筑/ 密度/ 和/ 可视/ 距离/ 的/ 约束/ ,/ 因此/ 静态/ 可见/ 关系/ 表/ 的/ 长度/ 是/ 存在/ 上限/ 的/ ./ 而/ 动态/ 对象/ 需要/ 再/ 路网/ 路段/ 中/ 行动/ ,/ 因此/ 对于/ 任意/ 路段/ ,/ 对于/ 动态/ 对象/ 的/ 容纳/ 数量/ 也/ 是/ 有限/ 的/ ,/ 而/ 在线/ 查询/ 是/ 线性/ 查询/ ,/ 因此/ 查询/ 效率/ 不会/ 发生/ 较大/ 的/ 改变/ ./ 4/ 基于/ 路网/ 的/ 间接/ 可视/ 关系/ 表/ 按照/ 前/ 文/ 给出/ 的/ 定义/ 和/ 定理/ ,/ 可以/ 通过/ 构建/ 以/ 路网/ 路段/ 为/ 检索/ 核心/ 的/ 间接/ 可视/ 关系/ 表/ ./ 将/ 原有/ 可视/ 查询/ 中/ 最为/ 耗时/ 的/ 可视/ 计算/ 部分/ 剥离/ 出来/ ,/ 放在/ 离线/ 计算/ 阶段/ ,/ 以/ 保证/ 在线/ 查询/ 的/ 反应速度/ ./ 在/ 这/ 一/ 过程/ 中/ ,/ 利用/ 静态/ 对象/ 可视/ 关系/ 表/ 固化/ 静态/ 对象/ 与/ 图/ 3/ 三维空间/ 内/ 的/ 可视性/ 计算/ 在/ 进行/ 可视/ 关系/ 计算/ 时/ ,/ 按照/ “/ 远/ 的/ 对象/ 不能/ 影响/ 近/ 的/ 对象/ ”/ 和/ “/ 低/ 的/ 对象/ 不能/ 影响/ 高/ 的/ 对象/ ”/ 的/ 原则/ ,/ 按照/ 最小/ 距离/ 和/ 投影/ 角度/ 的/ 顺序/ 进行/ 计算/ ./ 如果/ 一个/ 对象/ (/ 无论是/ 静态/ 对象/ 还是/ 另/ 一个/ 路段/ )/ 对/ 路段/ 是/ 可视/ 的/ ,/ 则/ 将/ 其/ 加入/ 可视/ 关系/ 表/ 的/ 同时/ 加入/ 障碍/ 集对/ 下/ 一/ 对象/ 进行/ 判断/ 计算/ ;/ 一个/ 对/ 路段/ 不可/ 视/ 的/ 对象/ ,/ 必然/ 已经/ 被/ 遮挡/ ,/ 因此/ 不/ 需要/ 加入/ 障碍/ 集/ ./ 4.2/ 静态/ 对象/ 可视/ 关系/ 表/ 构建/ 与/ 维护/ 静态/ 对象/ 可视/ 关系/ 表/ 描述/ 的/ 是/ 静态/ 对象/ 与/ 路网/ 路段/ 之间/ 的/ 可视/ 关系/ ,/ 即/ 在/ 某/ 一路/ 段/ 上/ 所能/ 看到/ 的/ 静态/ 对象/ ./ 根据/ 这一/ 关系/ 表/ ,/ 在/ 获取/ 查询/ 点/ 所在/ 路段/ id/ 的/ 情况/ 下/ 不必/ 进行/ 可视/ 计算/ 即可/ 获取/ 对/ 其/ 可见/ 的/ 静态/ 对象/ ./ 在/ 新增/ 或/ 删除/ 静态/ 对象/ 时/ ,/ 需要/ 对/ 该表/ 进行/ 维护/ ./ 如果/ 路段/ 发生变化/ ,/ 也/ 需要/ 进行/ 相应/ 的/ 维护/ ./ 4.2/ ./ 1/ 插入/ 静态/ 对象/ 显而易见/ 的/ 是/ ,/ 一个/ 新/ 的/ 对象/ 加入/ 到/ 已有/ 的/ 地/ 路段/ 之间/ 的/ 可视/ 关系/ ,/ 这样/ 对于/ 静态/ 对象/ 的/ 可视/ 查询/ 就/ 变成/ 了/ 对于/ 该表/ 的/ 线性/ 查询/ ;/ 利用/ 动态/ 对象/ 可视/ 关系/ 表/ 固化/ 路段/ 间/ 的/ 可视/ 关系/ ,/ 这样/ 对于/ 动态/ 对象/ 的/ 可视/ 查询/ 就/ 变成/ 获取/ 可视/ 路段/ 后/ 按/ 路段/ 范围/ 查询/ 的/ 间接/ 可视/ 查询/ ,/ 同样/ 避免/ 了/ 复杂/ 的/ 实时/ 可视/ 计算/ ./ 在/ 本节/ 中/ ,/ 将/ 给出/ 静态/ 对象/ 可视/ 关系/ 表/ 和/ 动态/ 对象/ 可视/ 关系/ 表/ 的/ 构建/ 和/ 维护/ 方法/ ./ 4.1/ 三维/ 场景/ 中/ 的/ 可视/ 计算/ 首先/ 给出/ 在/ 三维/ 场景/ 中/ ,/ 对于/ 三维空间/ 对象/ 进行/ 可视/ 计算/ 的/ 基本/ 方法/ ./ 静态/ 对象/ 对/ 路段/ 的/ 可视性/ 计算/ 与/ 现有/ 的/ 二维/ 场景/ 不同/ ,/ 涉及/ 到/ 了/ 高度/ 的/ 影响/ ./ 即/ 对于/ 三维空间/ 数据/ ,/ 不仅/ 要/ 考虑/ 到/ 剪切/ 角度/ 的/ 问题/ ,/ 也/ 要/ 考虑/ 到/ 投影/ 角度/ 的/ 问题/ ./ 如图/ 3/ 所示/ ,/ 静态/ 对象/ O1/ 和/ O2/ ,/ O2/ 与/ O3/ 都/ 在/ O1/ 形成/ 的/ 不可视区/ 域/ 内/ ,/ 但是/ 对应/ 的/ 投影/ 角度/ θ/ 2/ </ θ/ 1/ </ θ/ 3/ ,/ 即/ de/ ∩/ O1/ =/ / ,/ 所以/ O3/ 对于/ 路段/ s/ 可视/ ./ 因此/ 可以/ 得出结论/ :/ 对于/ 路段/ s/ ,/ 静态/ 对象/ O1/ ,/ O3/ 是/ 可视/ 的/ ,/ O2/ 是/ 不可/ 视/ 的/ ./ 图中时/ ,/ 必然/ 会/ 对/ 附近/ 对象/ 的/ 可视/ 关系/ 产生/ 影响/ ,/ 但/ 该/ 影响/ 范围/ 将/ 只/ 局限/ 在/ 离/ 它/ 最近/ 的/ 一组/ 节点/ 范围/ 内/ ./ 如图/ 4/ (/ a/ )/ 所示/ ,/ 在/ 静态/ 对象/ O1/ 加入/ 到/ 地图/ 中后/ ,/ 其/ 对/ 节点/ P1/ ,/ P2/ ,/ P3/ ,/ P4/ ,/ P5/ 及/ 相应/ 的/ 路段/ S1/ ,/ S2/ ,/ S3/ ,/ S4/ ,/ S5/ ,/ S6/ 产生/ 了/ 影响/ ,/ 而/ 对/ 节点/ P6/ 及/ 对应/ 的/ 路段/ S7/ 并/ 不/ 产生/ 影响/ ./ 因此/ ,/ 在/ 插入/ 一个/ 新/ 的/ 静态/ 对象/ 时/ ,/ 应该/ 首先/ 找出/ 其/ 可能/ 影响/ 的/ 路段/ 列表/ 集/ Sset/ =/ {/ S1/ ,/ S2/ ,/ …/ ,/ Sn/ }/ ,/ 然后/ 根据/ 该/ 列表/ 计算/ 新/ 的/ 静态/ 对象/ 对于/ 各个/ 路段/ S1/ ,/ S2/ ,/ …/ ,/ Sn/ 的/ 可视/ 关系/ ,/ 然后/ 将/ 该/ 静态/ 对象/ 按照/ 可视/ 关系/ 分别/ 加入/ 到/ SOVR/ 中/ ./ 在/ 插入/ 新/ 的/ 数据/ 后/ ,/ 需要/ 更新/ 插入/ 数据/ 对于/ 原有/ 数据/ 的/ 影响/ ./ 如图/ 4/ (/ a/ )/ 中/ 新/ 插入/ 对象/ O3/ 对于/ 路段/ S2/ 的/ 最小/ 距离/ c/ 大于/ 原有/ 对象/ O1/ 对于/ 路段/ S2/ 的/ 最小/ 距离/ b/ ,/ 或图/ 4/ (/ b/ )/ 中/ 新/ 插入/ 对象/ O2/ 对于/ 路段/ S2/ 的/ 投影/ 角度/ θ/ 1/ 小于/ 原有/ 对象/ O1/ 对/ 路段/ S2/ 的/ 投影/ 角度/ θ/ 2/ ,/ 则/ 原有/ 对象/ 不/ 受影/ Page8/ 图/ 4/ 插入/ 静态/ 对象/ 对/ 可视/ 关系/ 表/ 的/ 影响/ 响/ ./ 否则/ 要/ 重新/ 计算/ 该/ 对象/ 的/ 可视/ 关系/ ./ 在/ 插入/ 的/ 过程/ 中/ ,/ 如果/ 由于/ O1/ 的/ 原因/ 使/ O3/ 变得/ 相对/ 于/ S2/ 不可/ 视/ ,/ 则/ 需要/ 将/ S2/ 邻接/ 表中/ 的/ 相应/ 数据/ 删除/ ./ 按照/ 这样/ 的/ 步骤/ 将/ 所有/ 受到/ 影响/ 的/ 路段/ 对应/ 的/ 邻接/ 表/ 的/ 更新/ 后/ ,/ 完成/ 新/ 的/ 静态/ 对象/ 的/ 插入/ 处理过程/ ./ 对于/ 每/ 一条/ 受到/ 影响/ 的/ 路段/ S/ ,/ 其/ 插入/ 算法/ 如/ 算法/ 1/ 描述/ ./ 算法/ 1/ ./ InsertStaticVR/ (/ )/ ./ 输入/ :/ InsertObjectIO/ ,/ effectedSegmentS/ 输出/ :/ StaticVisibleRelationSOVR1/ ./ getMinDistand/ θ/ fromIO2/ ./ getVisibleRelationfromS3/ ./ FOReachelementinVR4/ ./ IF/ (/ IO/ ./ MinDist/ </ element/ ./ MinDistand5/ ./ THENinsertIOintoVisibleRelation6/ ./ recalculatetheVRbetweenelementandSegment7/ ./ IFVisible/ (/ Object/ ,/ Segment/ )/ =/ true8/ ./ THENsetTinSOVRastrue9/ ./ ELSEsetTinSOVRasfalse10/ ./ returnSOVR/ 插入/ 算法/ ,/ 受/ 影响/ 的/ 应为/ 离/ 插入/ 点/ 距离/ 最近/ 的/ 一组/ 结点/ 及/ 路段/ ./ 这/ 一组/ 结点/ 及/ 路段/ 应/ 能/ 围绕/ 插入/ 点行成/ 包围/ 结构/ ./ 在/ 第/ 2/ 行对/ 受到/ 影响/ 的/ 静态/ 对象/ 进行/ 更新/ 静态/ 对象/ 可视/ 关系/ 表时/ ,/ 可以/ 利用/ 欧式/ 空间/ 内/ 的/ 反/ k/ 近邻/ 查询/ 来/ 确定/ 受/ 影响/ 的/ 点/ 的/ 集合/ ,/ 然后/ 利用/ 点/ 集合/ 确定/ 受/ 影响/ 的/ 路段/ 的/ 集合/ ./ 第/ 6/ 行对/ 可视/ 关系/ 的/ 计算/ ,/ 则/ 是/ 利用/ 三维/ 投影/ 进行/ 几何/ 计算/ ./ 4.2/ ./ 2/ 删除/ 静态/ 对象/ 当/ 一个/ 静态/ 对象/ 被/ 从/ 地图/ 中/ 删除/ 时/ ,/ 不仅仅/ 要/ 删除/ 对象/ 本身/ ,/ 还要/ 对/ 其他/ 受到/ 该/ 对象/ 影响/ 的/ 静态/ 对象/ 状态/ 进行/ 更新/ ./ 如图/ 4/ 中/ 对象/ O1/ 被/ 删除/ 后/ ./ 原本/ 对/ S2/ 不可/ 视/ 的/ 对象/ O3/ 重新/ 变得/ 对/ S2/ 可视/ ./ 因此/ 在/ 删除/ 一个/ 静态/ 对象/ 后/ ,/ 需要/ 对/ 该/ 静态/ 对象/ 所/ 能/ 影响/ 的/ 路段/ 的/ 可视/ 对象/ 进行/ 重新/ 计算/ ./ 对于/ MinDist/ 小于/ O1/ 或/ 投影/ 角度/ θ/ 大于/ O1/ 的/ 物体/ ,/ 其/ 可视性/ 不会/ 随着/ O1/ 的/ 消失/ 而/ 改变/ ;/ 对/ MinDist/ 大于/ O1/ 的/ 物体/ ,/ 原有/ 可视/ 的/ 静态/ 对象/ 不会/ 发生/ 改变/ ,/ 原有/ 不可/ 视/ 的/ 对象/ 则/ 有/ 可能/ 变得/ 可视/ ,/ 所以/ 需要/ 重新/ 计算/ 其/ 可视性/ ./ 对于/ 每/ 一条/ 受到/ 影响/ 的/ 路段/ ,/ 对于/ 该/ 路段/ 的/ VR/ 表/ 的/ 删除/ 算法/ 如/ 算法/ 2/ 所示/ ./ 算法/ 2/ ./ Delete/ (/ )/ ./ 输入/ :/ deleteObjectDO/ ,/ effectSegmentS/ 输出/ :/ StaticVisibleRelationSOVR1/ ./ deleteDOfromS/ ./ SOVR2/ ./ FOReachelementinS/ ./ SOVR3/ ./ IFDO/ ./ MinDist/ </ element/ ./ MinDistand4/ ./ THENrecalculatethevisible/ (/ element/ ,/ segment/ )/ 5/ ./ IFvisible/ (/ element/ ./ S/ )/ =/ true6/ ./ THENsetelement/ ./ Flag/ =/ true/ ;/ 7/ ./ ELSEsetelement/ ./ Flag/ =/ false/ ;/ 8/ ./ returnSOVR/ 与/ 插入/ 静态/ 对象/ 一样/ ,/ 在/ 删除/ 静态/ 对象/ 时/ ,/ 也/ 需要/ 对受/ 影响/ 路段/ 进行/ 处理/ ./ 通过/ 反/ K/ 近邻/ 查询/ 找出/ 受/ 影响/ 路段/ 并/ 进行/ 可视/ 关系/ 更新/ ./ 算法/ 2/ 描述/ 了/ 在/ 确定/ 了/ 受/ 影响/ 路段/ 列表/ 后/ ,/ 对/ 单一/ 路段/ 的/ 可视/ 关系/ 表/ 维护/ ./ 当/ 插入/ 一个/ 新/ 的/ 路段/ 时/ ,/ 就是/ 一个/ 构建/ 静态/ 对象/ 可视/ 关系/ 表/ 的/ 新/ 数据/ 行/ 的/ 过程/ ./ 删除/ 一个/ 原有/ 路段/ ,/ 就是/ 在/ 静态/ 对象/ 可视/ 关系/ 表中/ 删除/ 对应/ 的/ 数据/ 行/ ./ 通过/ 对/ 静态/ 对象/ 可视/ 关系/ 表/ 的/ 维护/ ,/ 在/ 三维/ 场景/ 内/ 的/ 静态/ 对象/ 与/ 路网/ 间/ 建立/ 可视/ 关系/ ./ 将/ 整体/ 的/ 三维/ 场景/ ,/ 按照/ 路网/ 中/ 的/ 不同/ 路段/ 拆分/ ./ 将/ 在线/ 可视/ 查询/ 中/ 的/ 查询/ 点/ 的/ 位置/ 与/ 静态/ 对象/ 的/ 可视/ 关系/ 固定/ 下来/ ,/ 将/ 可视性/ 计算/ 转移/ 到/ 预处理/ 阶段/ 进行/ ./ 避免/ 长时间/ 的/ 在线/ 计算/ ,/ 加快/ 静态/ 可视/ 查询/ 的/ 速度/ ./ 4.2/ ./ 3/ 静态/ 对象/ 可视/ 查询/ 利用/ 静态/ 对象/ 可视/ 关系/ 表/ ,/ 可以/ 批量/ 的/ 处理/ 移动/ 对象/ 对/ 静态/ 对象/ 的/ 可视/ 查询/ ./ 具体/ 的/ 做法/ 就是/ 首先/ 确定/ 查询/ 者/ 所在/ 的/ 路段/ ;/ 然后/ 根据/ 该/ 路段/ 在/ 静态/ 对象/ 可视/ 关系/ 表中/ 查询/ 该/ 路段/ 所/ 对应/ 的/ 静态/ 对象/ ./ Page9/ 既/ 不/ 需要/ 进行/ 在线/ 的/ 可视/ 计算/ ,/ 又/ 可以/ 避免/ 同一/ 路段/ 内/ 的/ 多个/ 重复/ 查询/ ./ 具体/ 的/ 算法/ 将/ 在/ 后文/ 给出/ ./ 4.3/ 动态/ 对象/ 关系/ 表/ 构建/ 与/ 维护/ 对于/ 三维/ 场景/ 内/ 的/ 动态/ 对象/ 的/ 可视/ 查询/ ,/ 也/ 是/ 通过/ 动态/ 对象/ 可视/ 关系/ 表/ 进行/ 的/ 间接/ 可视/ 查询/ ./ 动态/ 可视/ 关系/ 表/ 存储/ 的/ 并/ 不是/ 动态/ 对象/ 本身/ 的/ 数据/ ,/ 而是/ 路段/ 与/ 路段/ 之间/ 的/ 可视/ 关系/ ,/ 只/ 在/ 路段/ 数据/ 发生变化/ 时/ 进行/ 维护/ ,/ 也/ 是/ 一个/ 相对/ 静态/ 的/ 表/ ./ 通过/ 这一/ 关系/ 表/ ,/ 将/ 动态/ 对象/ 间/ 的/ 间接/ 可视/ 关系/ 固化/ ./ 4.3/ ./ 1/ 动态/ 对象/ 数据/ 存储/ 对于/ 三维/ 场景/ 内/ 的/ 动态/ 对象/ ,/ 以/ 路段/ 为主/ 键为/ 动态/ 对象/ 建立/ 索引/ ./ 为/ 每/ 一个/ 路段/ 建立/ 一个/ 列表/ 保存/ 指向/ 在/ 该/ 路段/ 上/ 的/ 动态/ 对象/ 的/ 指针/ ,/ 当/ 动态/ 对象/ 的/ 路段/ 信息/ 发生变化/ 时/ 更新/ 该/ 列表/ ,/ 确保/ 对于/ 动态/ 对象/ 的/ 位置/ 的/ 实时/ 监控/ ./ 4.3/ ./ 2/ 动态/ 对象/ 可视/ 关系/ 表/ 动态/ 对象/ 可视/ 关系/ 表/ ,/ 存储/ 的/ 是/ 路网/ 路段/ 间/ 的/ 可视/ 关系/ ,/ 因此/ 也/ 是/ 一个/ 静态/ 表/ ./ 在/ 构建/ 该表时/ ,/ 其实质/ 为/ 线段/ 与/ 线段/ 之间/ 的/ 、/ 在/ 存在/ 静态/ 对象/ 作为/ 障碍/ 集/ 情况/ 下/ 的/ 可视/ 关系/ 计算/ ./ 如图/ 5/ 所示/ ,/ 在/ 一个/ 城市/ 环境/ 中/ ,/ 路网/ 路段/ 间/ 的/ 可视性/ 计算/ 就/ 转化/ 为/ 这样/ 静态/ 空间数据/ 中/ 的/ 线段/ 与/ 线段/ 间/ 的/ 可视性/ 计算/ ./ 图中/ 路段/ S8/ 受到/ 静态/ 建筑/ 的/ 影响/ ,/ 使/ 路段/ S1/ ,/ S4/ ,/ S5/ ,/ S7/ ,/ S3/ 和/ S6/ 都/ 对/ 其/ 不可/ 视/ ./ S10/ 对/ 其/ 可视/ 的/ 可视性/ 受到/ 距离/ 的/ 影响/ ./ 路段/ S2/ 和/ S9/ 由于/ 与/ S8/ 共享/ 一个/ 端点/ ,/ 所以/ 可以/ 定义/ 为/ 绝对/ 可视/ ./ 根据/ 这一/ 原理/ ,/ 给出/ 绝对/ 可视/ 路段/ 的/ 定义/ 8/ ./ 图/ 6/ 新增/ 路段/ 对于/ 可视性/ 的/ 影响/ 在/ 处理/ 新增/ 路段/ 时/ ,/ 首先/ 要/ 确定/ 其/ 影响/ 范围/ ./ 路段/ 的/ 新增/ 不会/ 凭空/ 而/ 来/ ,/ 必然/ 与/ 原有/ 路网/ 结合/ ./ 如图/ 6/ 所示/ ,/ 无论是/ 哪/ 种/ 新增/ 路段/ ,/ 都/ 可以/ 以/ 端点/ 来/ 确定/ 影响/ 范围/ ./ 如图/ 6/ (/ a/ )/ 中/ ,/ 受到/ 影响/ 的/ 端点/ 为/ P3/ 和/ P5/ ,/ 于是/ 受到/ 影响/ 的/ 路段/ 为/ 这两点/ 所/ 链接/ 的/ 所有/ 路段/ ,/ {/ S8/ ,/ S9/ ,/ S2/ ,/ S7/ ,/ S4/ ,/ S5/ ,/ S6/ }/ ,/ 需要/ 对/ 这些/ 路段/ 的/ 可视/ 关系/ 和/ 可视/ 距离/ 进行/ 重新/ 计算/ ;/ 在/ 图/ 6/ (/ b/ )/ 中/ ,/ 新增/ 了/ 两个/ 端点/ Pn1/ 和/ Pn2/ ,/ 这/ 两个/ 端点/ 在/ 路段/ S2/ 定义/ 8/ (/ 绝对/ 可视/ 路段/ )/ ./ 查询/ 路段/ Sq/ =/ {/ Ps/ ,/ Pe/ }/ ,/ Ps/ 和/ Pe/ 分别/ 是/ 路段/ Sq/ 的/ 起始/ 端点/ 和/ 终止/ 端点/ ,/ 则/ 对于/ 与其/ 共享/ 这/ 两个/ 端点/ 中/ 的/ 任意/ 一点/ 的/ 线段/ ,/ 对于/ Sq/ 可视/ ./ 即/ 绝对/ 可视/ 路段/ 集/ Sv/ =/ {/ S/ (/ P1/ ,/ P2/ )/ |/ {/ P1/ =/ Ps/ ∪/ P1/ =/ Pe/ ∪/ P2/ =/ Ps/ ∪/ P2/ =/ Pe/ }/ ∩/ S/ ≠/ Sq/ }/ ./ 除了/ 绝对/ 可视/ ,/ 还有/ 一些/ 路段/ 间/ 的/ 关系/ 属于/ 条件/ 可视/ ./ 如图/ 5/ 中/ 路段/ S10/ 与/ S8/ 虽然/ 不/ 属于/ 绝对/ 可视/ ,/ 但/ 进行/ 可视/ 计算/ 却/ 仍然/ 可视/ ./ 只是/ 这一/ 可视性/ 属于/ 带有/ 条件/ 的/ 可视/ ./ 当/ 查询/ 半径/ 较/ 小时/ ,/ S10/ 可能/ 对/ S8/ 不可/ 视/ ./ 因此/ 在/ 定义/ 6/ 中/ 定义/ 了/ 路段/ 可视/ 距离/ D/ 用于/ 描述/ 这/ 一类/ 条件/ 可视/ ,/ 在/ 图/ 5/ 中/ ,/ S10/ 与/ S8/ 之间/ 的/ 可视/ 距离/ D/ =/ Length/ (/ S9/ )/ ./ 对于/ 动态/ 对象/ 可视/ 关系/ 表/ ,/ 当/ 路段/ 数据/ 发生变化/ 时/ 需要/ 进行/ 维护/ ./ 4.3/ ./ 3/ 新增/ 路段/ 新增/ 一个/ 路段/ 时/ ,/ 有/ 3/ 种/ 情况/ :/ (/ 1/ )/ 在/ 原有/ 端点/ 上/ 新增/ 路段/ ,/ 如图/ 6/ (/ a/ )/ 所示/ ;/ (/ 2/ )/ 在/ 原有/ 路段/ 中间/ 新增/ 路段/ ,/ 如图/ 6/ (/ b/ )/ 所示/ ;/ (/ 3/ )/ 两者/ 结合/ ,/ 如图/ 6/ (/ c/ )/ 所示/ ./ 和/ S7/ 上/ ,/ 间接/ 影响/ 了/ 端点/ {/ P3/ ,/ P8/ ,/ P2/ ,/ P5/ }/ ,/ 由此/ 可以/ 确定/ 受/ 影响/ 的/ 路段/ 为/ {/ S1/ ,/ S2/ ,/ S3/ ,/ S4/ ,/ S5/ ,/ S6/ ,/ S7/ ,/ S8/ ,/ S9/ ,/ S10/ }/ ,/ 需要/ 对/ 这些/ 路段/ 的/ 可视性/ 关系/ 和/ 可视/ 距离/ 重新/ 计算/ ;/ 而/ 在/ 图/ 6/ (/ c/ )/ 中/ ,/ 受到/ 影响/ 的/ 端点/ 为/ {/ P3/ ,/ P5/ ,/ P8/ }/ ,/ 受到/ 影响/ 的/ 路段/ 为/ {/ S4/ ,/ S5/ ,/ S6/ ,/ S7/ ,/ S8/ ,/ S9/ ,/ S10/ }/ ./ 4.3/ ./ 4/ 删除/ 路段/ 当/ 删除/ 一个/ 路段/ 时/ ,/ 不仅/ 要/ 删除/ 与/ 该/ 路段/ 有关/ Page10/ 的/ 数据/ ,/ 还要/ 计算/ 该/ 路段/ 消失/ 对于/ 其他/ 路段/ 可视/ 距离/ 的/ 影响/ ./ 由于/ 可视性/ 是/ 一种/ 受/ 距离/ 影响/ 的/ 概念/ ,/ 因此/ 路段/ 的/ 增加/ 或/ 删除/ ,/ 其/ 影响/ 范围/ 是/ 有限/ 的/ ./ 如图/ 7/ 所示/ ,/ 路段/ S7/ 被/ 删除/ ,/ 对/ S7/ 的/ 端点/ {/ P5/ ,/ P8/ }/ 产生/ 影响/ ,/ 进而/ 影响/ 了/ {/ S4/ ,/ S5/ ,/ S6/ ,/ S8/ ,/ S9/ }/ 的/ 路段/ 间/ 的/ 可视性/ 和/ 可视/ 距离/ ./ 因此/ 需要/ 对/ 这些/ 路段/ 间/ 的/ 可视性/ 和/ 可视/ 距离/ 进行/ 重新/ 计算/ ./ 通过/ 对于/ 动态/ 对象/ 可视/ 关系/ 表/ 的/ 维护/ ,/ 将/ 移动/ 对象/ 间/ 的/ 在线/ 的/ 实时/ 可视/ 计算/ 变成/ 可以/ 在/ 预处理/ 阶段/ 完成/ 的/ 路段/ 间/ 可视/ 关系/ 计算/ ,/ 将/ 复杂/ 的/ 计算/ 过程/ 在/ 预处理/ 阶段/ 进行/ ,/ 避免/ 长时间/ 在线/ 计算/ ./ 同时/ ,/ 对于/ 同一/ 路段/ 的/ 所有/ 查询/ 点/ 的/ 重复/ 查询/ ,/ 可以/ 通过/ 批处理/ 进行/ ,/ 降低/ 了/ 服务器/ 压力/ ./ 4.3/ ./ 5/ 动态/ 对象/ 可视/ 查询/ 动态/ 可视/ 查询/ 算法/ 是/ 基于/ 动态/ 对象/ 可视/ 关系/ 表/ 的/ 线性/ 查询/ ./ 在/ 进行/ 查询/ 时/ ,/ 根据/ 主/ 函数/ 传递/ 来/ 的/ 查询/ 点/ 所在/ 的/ 路段/ id/ 参数/ ,/ 在/ 动态/ 对象/ 可视/ 关系/ 表中/ 找到/ 对于/ 该/ 路段/ 可视/ 的/ 所有/ 路段/ id/ ./ 最后/ 根据/ 这些/ 路段/ id/ 再/ 去/ 动态/ 对象/ 数据/ 中/ 线性/ 查找/ 在/ 这些/ 路段/ 上/ 运动/ 的/ 所有/ 动态/ 对象/ ./ 这样/ 对于/ 动态/ 对象/ 的/ 可视/ 查询/ ,/ 就/ 不必/ 具体/ 计算/ 两个/ 移动/ 对象/ 之间/ 的/ 可视性/ ,/ 而是/ 直接/ 进行/ 基于/ 路段/ 的/ 范围/ 查询/ ./ 在/ 对/ 路网/ 移动/ 对象/ 进行/ 范围/ 查询/ 或/ 扩展/ 路径/ 计算/ 时/ ,/ 对/ 路径/ 的/ 选择/ 做出/ 限制/ ./ 排除/ 不可/ 视/ 路段/ ,/ 以此/ 来/ 排除/ 范围/ 查询/ 中/ 的/ 不可/ 视/ 对象/ ./ 具体/ 的/ 查询/ 算法/ 将/ 在/ 后文/ 给出/ ./ 4.4/ 性能/ 分析/ 在/ 现有/ 的/ 商业/ GIS/ 系统/ 中/ ,/ 也/ 有/ 其它/ 的/ 以/ 路网/ 为/ 中心/ 的/ 动态/ 加载/ 模式/ ,/ 但是/ 一般/ 都/ 是/ 以/ 路段/ 为/ 中心/ 进行/ 的/ 范围/ 加载/ ./ 建筑/ 密度/ 越高/ ,/ 其/ 加载/ 的/ 不可/ 视/ 的/ 、/ 无效/ 的/ 静态/ 对象/ 比例/ 就/ 越/ 高/ ,/ 整体/ 性能/ 就/ 越/ 差/ ./ 本文/ 所/ 提出/ 静态/ 对象/ 可视/ 关系/ 表/ 的/ 意义/ 在于/ :/ (/ 1/ )/ 通过/ 静态/ 对象/ 可视/ 关系/ 表/ ,/ 可以/ 将/ 三维/ 场景/ 内/ 的/ 静态/ 对象/ 与/ 路网/ 之间/ 的/ 可视/ 关系/ 固化/ ,/ 将/ 移动/ 的/ 观察者/ 对/ 静态/ 对象/ 的/ 连续/ 可视/ 查询/ 转化/ 为/ 观察者/ 所在/ 路段/ 的/ 可视/ 静态/ 对象/ 的/ 查询/ ;/ (/ 2/ )/ 对于/ 场景/ 内/ 的/ 静态/ 对象/ 的/ 可视性/ 变化/ 也/ 可以/ 通过/ 静态/ 对象/ 可视/ 关系/ 表/ 固定/ 下来/ ,/ 如/ 新建/ 或/ 拆除/ 一栋/ 建筑/ 对/ 周围/ 建筑/ 的/ 可视性/ 影响/ ;/ (/ 3/ )/ 原有/ 的/ 可视/ 查询/ 需要/ 进行/ 复杂/ 的/ 可视/ 计算/ ,/ 响应/ 时间/ 较长/ ,/ 而/ 通过/ 静态/ 对象/ 可视/ 关系/ 表则/ 将/ 查询/ 转变/ 为/ 简单/ 的/ 线性/ 查询/ ,/ 处理速度/ 更/ 快/ ;/ (/ 4/ )/ 可以/ 批处理/ 在/ 同一/ 路段/ 上/ 的/ 所有/ 观察者/ 的/ 静态/ 可视/ 查询/ ,/ 降低/ 服务器/ 压力/ ./ 通过/ 静态/ 对象/ 可视/ 关系/ 表/ ,/ 在/ 对/ 大规模/ 的/ 三维/ 场景/ 中/ 的/ 静态/ 对象/ 进行/ 更新/ 时/ ,/ 不再/ 需要/ 像/ 现有/ 模式/ 一样/ 强制/ 所有/ 用户/ 进行/ 更新/ ,/ 而是/ 在/ 后台/ 完成/ 更新/ ,/ 提高/ 了/ 场景/ 的/ 维护/ 性能/ 和/ 灵活性/ ./ 而/ 在/ 用户/ 进行/ 在线/ 查询/ 时/ ,/ 只/ 需要/ 对/ 静态/ 对象/ 可视/ 关系/ 表/ 进行/ 线性/ 查询/ ,/ 提高/ 了/ 反应速度/ ./ 由于/ 动态/ 对象/ 的/ 运动/ 轨迹/ 是/ 被/ 限制/ 于/ 路网/ 之上/ 的/ ,/ 因此/ 本文/ 根据/ 前文/ 所/ 提出/ 并/ 证明/ 的/ 定理/ 2/ ,/ 动态/ 对象/ 间/ 的/ 可视性/ 可以/ 由/ 动态/ 对象/ 所在/ 路段/ 之间/ 的/ 可视性/ 代替/ ./ 通过/ 这一/ 方式/ 将/ 动态/ 对象/ 间/ 的/ 动态/ 可视性/ 转化/ 为/ 静态/ 的/ 路段/ 间/ 的/ 静态/ 可视性/ ./ 在/ 离线/ 预计/ 算/ 阶段/ 完成/ 对于/ 路网/ 路段/ 间/ 的/ 可视性/ 计算/ ,/ 确定/ 对于/ 任意/ 路段/ 的/ 可视/ 路段/ 列表/ ,/ 在/ 在线/ 查询/ 阶段/ ,/ 不再/ 计算/ 具体/ 的/ 动态/ 对象/ 之间/ 的/ 可视/ 关系/ ,/ 而是/ 查询/ 对于/ 查询/ 点/ 所在/ 路段/ 可视/ 的/ 路段/ 上/ 的/ 动态/ 对象/ ./ 将/ 动态/ 对象/ 的/ 可视/ 计算/ 转变/ 为/ 路网/ 内/ 可视/ 路段/ 内/ 的/ 范围/ 查询/ ./ 这一/ 间接/ 可视/ 查询方法/ 虽然/ 降低/ 了/ 查询/ 的/ 精度/ ,/ 却/ 满足/ 了/ 实时性/ 的/ 需求/ ,/ 同时/ 使/ 框架/ 可以/ 批处理/ 动态/ 对象/ 的/ 可视/ 查询/ ,/ 对于/ 动态/ 对象/ 的/ 数量/ 增加/ 也/ 有/ 很/ 好/ 的/ 适应能力/ ./ 主要/ 的/ 可视/ 计算/ 过程/ 在/ 离线/ 预处理/ 阶段/ ,/ 即/ 生成/ 静态/ 对象/ 可视/ 关系/ 表/ 和/ 动态/ 对象/ 可视/ 关系/ 表时/ 进行/ ./ 生成/ 静态/ 对象/ 可视/ 关系/ 表/ 的/ 计算/ 只/ 需要/ 进行/ 一次/ ,/ 其后/ 静态/ 对象/ 再/ 发生变化/ 时/ 只/ 需要/ 进行/ 相应/ 的/ 更新/ 维护/ 即可/ ./ 对于/ 单个/ 路段/ ,/ 在/ 生成/ 静态/ 对象/ 可视/ 关系/ 表/ 的/ 过程/ 中/ ,/ 首先/ 进行/ 一次/ 范围/ 查询/ ,/ 确定/ 涉及/ 到/ 的/ n/ 个/ 静态/ 对象/ 并/ 排序/ ,/ 然后/ 对/ n/ 个/ 静态/ 对象/ 进行/ 比较/ 计算/ ,/ 如果/ 可视/ ,/ 加入/ 静态/ 对象/ 可视/ 关系/ 表并/ 加入/ 障碍/ 集/ ,/ 直至/ 完成/ 循环/ ./ 因此/ 对于/ 拥有/ m/ 个/ 路段/ 的/ 整体/ 地图/ 而言/ ,/ 在/ 生成/ 静态/ 对象/ 可视/ 关系/ 表时/ 时间/ 复杂度/ 为/ O/ (/ mnlogn/ +/ mn2/ )/ ;/ 在/ 插入/ 和/ 删除/ 对象/ 阶段/ 都/ 需要/ 遍历/ 可视/ 表和对/ 影响/ 到/ 的/ 静态/ 对象/ 进行/ 可视/ 计算/ ,/ 因此/ 时间/ 复杂度/ 为/ O/ (/ logT/ ×/ logn/ )/ ./ 动态/ 对象/ 可视/ 关系/ 表在/ 本质/ 上/ 与/ 静态/ 对象/ 可视/ 关系/ 表/ 一样/ 是/ 静态/ 表/ ,/ 只是/ 存储/ 的/ 是/ 路段/ 之间/ 的/ 可视/ 关系/ ,/ 是/ 为/ 处理/ 动态/ 对象/ 而/ 存在/ 的/ ./ 因此/ 其/ 维护/ 的/ 时间/ 复杂度/ 与/ 静态/ 对象/ 可视/ 关系/ 表/ 一致/ ./ Page115/ 基于/ 路网/ 的/ 可视/ 查询/ 5.1/ 基于/ 路网/ 的/ 间接/ 可视/ 查询/ 算法/ 在/ 本文/ 所提/ 的/ 框架/ 中/ ,/ 对于/ 三维/ 场景/ 内/ 的/ 静态/ 对象/ 和/ 动态/ 对象/ 的/ 可视/ 查询/ 都/ 是/ 在/ 在线/ 查询/ 阶段/ 进行/ 了/ 线性/ 查询/ ./ 由于/ 其是/ 间接/ 可视/ 查询/ ,/ 因此/ 避免/ 了/ 复杂/ 的/ 在线/ 计算/ ,/ 从而/ 满足/ 框架/ 的/ 时间/ 要求/ ./ 总体/ 的/ 基于/ 路网/ 的/ 间接/ 可视/ 查询/ 算法/ (/ IndirectVisibleQuerybasedonRoadSection/ ,/ IVQRS/ )/ 如/ 算法/ 3/ 所示/ ./ 算法/ 3/ ./ IVQRS/ (/ )/ ./ 输入/ :/ QueryPointp/ ,/ SOVR/ ,/ DOVR/ 输出/ :/ loadVisibleSetLVS1/ ./ sectionId/ =/ p/ ./ sectionId2/ ./ StaticSetS1/ =/ staticVisibleQuery/ (/ sectionId/ )/ {/ 3/ ./ id/ =/ sectionId/ ,/ 4/ ./ FORid/ // // 5/ ./ RS/ +/ =/ SOVR/ ./ get/ (/ sectionId/ )/ 6/ ./ ReturnRS/ }/ 7/ ./ DynamiSetS2/ =/ dynamicVisibleQuery/ (/ sectionId/ )/ {/ 8/ ./ VisibleSegmentVS/ =/ QO/ ./ DOVR/ (/ sectionId/ ,/ R/ )/ 9/ ./ rs/ =/ RangeQuery/ (/ VS/ )/ inMOS10/ ./ FOReachelementeinrs11/ ./ IFeisnotinLRS12/ ./ eaddtoMO13/ ./ ReturnMO/ }/ 14/ ./ LOS/ =/ S1/ +/ S2/ ;/ 静态/ 对象/ 可视/ 关系/ 表/ SOVR/ 和/ 动态/ 对象/ 可视/ 关系/ 表/ DOVR/ 作为/ 全局变量/ 在/ 离线/ 预处理/ 阶段/ 完成/ ./ 在/ 第/ 2/ 行/ 和/ 第/ 7/ 行/ 分别/ 调用/ 静态/ 对象/ 可视/ 查询/ 算法/ staticVisibleQuery/ (/ )/ 和/ 动态/ 对象/ 可视/ 查询/ 算法/ dynamicVisibleQuery/ (/ )/ ,/ 获取/ 静态/ 对象/ 可视/ 结果/ 集/ S1/ 和/ 动态/ 对象/ 可视/ 结果/ 集/ S2/ ./ 将/ 这/ 两个/ 结果/ 集/ 汇总/ 即/ 得到/ 对于/ 查询/ 点/ 可视/ 的/ 、/ 需要/ 加载/ 的/ 对象/ 集/ LVS/ ./ 对于/ 静态/ 对象/ 的/ 可视/ 查询/ 主要/ 是/ 基于/ 静态/ 对象/ 可视/ 关系/ 表/ 进行/ ,/ 在/ staticVisibleQuery/ (/ )/ 中/ ,/ 静态/ 对象/ 可视/ 关系/ 表/ 作为/ 全局变量/ ,/ 不/ 需要/ 从主/ 函数/ 传递/ ./ 第/ 3/ 行/ 接受/ 从主/ 函数/ 传递/ 而来/ 的/ 查询/ 点/ 所在/ 路段/ id/ 信息/ ./ 从/ 第/ 4/ 行/ 开始/ ,/ 当从主/ 函数/ 传递/ 而来/ 的/ 查询/ 点/ 所述/ 路段/ id/ 为/ 多个/ 路段/ 时/ ,/ 如站/ 在/ 某个/ 路口/ ,/ 进行/ 一次/ for/ 循环/ 顺次/ 获取/ 所有/ 路段/ 所/ 对应/ 的/ 静态/ 可视/ 对象/ ./ 在/ 第/ 5/ 行/ ,/ 根据/ 路段/ id/ 在/ 静态/ 对象/ 可视/ 关系/ 表中/ 查询/ 对应/ 数据/ 行/ ./ 最后/ 返回/ 可视/ 静态/ 对象/ 结果/ 集/ ./ 对于/ 动态/ 对象/ 的/ 可视/ 查询/ 时/ 调用/ dynamicVisible/ -/ Query/ (/ )/ ./ 首先/ ,/ 在/ 第/ 8/ 行/ 进行/ Hash/ 查询/ ,/ 根据/ 查询/ 点/ 所在/ 的/ 路段/ 及/ 查询/ 半径/ ,/ 在/ 动态/ 对象/ 可视/ 关系/ 表/ DOVR/ 中/ 找出/ 对于/ 该/ 路段/ 可视/ 的/ 路段/ id/ 集合/ ,/ 缩小/ 查询/ 范围/ ;/ 第/ 9/ 行是/ 在/ 每个/ 路段/ 所/ 保存/ 的/ 移动/ 对象/ 数据表/ 中/ 进行/ 线性/ 查询/ ,/ 获取/ 该/ 路段/ 中/ 动态/ 对象/ 的/ 指针/ ,/ 通过/ 该/ 指针/ 确定/ 动态/ 对象/ 候选/ 集/ ;/ 在/ 第/ 10/ 行/ 开始/ 进行/ 判断/ 过滤/ 重复/ 结果/ ;/ 第/ 13/ 行/ 返回/ 过滤/ 后/ 的/ 移动/ 对象/ 结果/ 集/ ,/ 客户端/ 按照/ 该/ 结果/ 集/ 加载/ 更新/ 可视/ 移动/ 对象/ ./ 第/ 14/ 行/ 汇总/ 静态/ 对象/ 与/ 动态/ 对象/ 作为/ 可视/ 查询/ 结果/ 集/ 返回/ ./ 可以/ 明显/ 看出/ ,/ 在/ 进行/ 可视/ 查询/ 时/ ,/ 并/ 不是/ 以/ 个体/ 进行/ 直接/ 的/ 可视/ 计算/ 并/ 查询/ ,/ 而是/ 以/ 路段/ 为/ 单位/ 进行/ 间接/ 可视/ 查询/ ,/ 从而/ 避免/ 了/ 长时间/ 的/ 在线/ 可视/ 计算/ ,/ 以/ 精度/ 为/ 代价/ 换取/ 查询/ 反应速度/ 和/ 低/ 资源/ 消耗/ ./ 5.2/ 性能/ 分析/ 对/ 静态/ 对象/ 的/ 可视/ 查询/ 已经/ 转变/ 成为/ 了/ 根据/ 路段/ id/ 在/ 一个/ 静态/ 表中/ 时间/ 复杂度/ 为/ O/ (/ 1/ )/ 的/ Hash/ 查询/ ./ 因此/ 根据/ 传递/ 而来/ 的/ 路段/ 数量/ n/ ,/ 单个/ 查询/ 点/ 的/ 在线/ 静态/ 可视/ 查询/ 的/ 时间/ 复杂度/ Ts/ =/ O/ (/ n/ )/ ./ 在/ 动态/ 对象/ 可视/ 查询/ 中/ ,/ 首先/ 根据/ 主/ 函数/ 传递/ 而来/ 的/ 路段/ id/ 在/ 动态/ 对象/ 可视/ 关系/ 表中/ 进行/ 线性/ 查询/ 获取/ 可视/ 路段/ id/ 集合/ ,/ 这一/ 过程/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ )/ ./ 然后/ 根据/ id/ 集合/ 获取/ 该/ 路段/ 中/ 动态/ 对象/ 的/ 指针/ 来/ 确定/ 动态/ 对象/ 候选/ 集/ ,/ 该/ 部分/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ ×/ logn/ )/ ./ 在/ 排除/ 重复/ 结果/ 的/ 过程/ 中/ 采用/ 快速/ 排序/ 法/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ ×/ logn/ )/ ./ 因此/ 整个/ 动态/ 对象/ 可视/ 查询/ 的/ 时间/ 复杂度/ Td/ =/ O/ (/ n/ +/ n/ ×/ logn/ +/ n/ ×/ logn/ )/ ./ 基于/ 路网/ 的/ 间接/ 可视/ 查询/ 算法/ 包括/ 静态/ 对象/ 可视/ 查询/ 和/ 动态/ 对象/ 可视/ 查询/ 两/ 部分/ ,/ 所以/ 其/ 整体/ 时间/ 复杂度/ T/ =/ Ts/ +/ Td/ ./ 场景/ 内/ 路段/ 数量/ 为/ n/ ,/ 场景/ 内/ 动态/ 对象/ (/ 观察者/ )/ 数量/ 为/ m/ ,/ m/ / n/ ./ 场景/ 内/ 动态/ 对象/ ,/ 即/ 观察者/ 都/ 是/ 固定/ 于/ 路段/ 范围/ 内/ ,/ 因此/ 他们/ 的/ 查询/ 请求/ 可以/ 按照/ 路网/ 路段/ 分组/ 获取/ ./ 由于/ 基于/ 路段/ 的/ 可视/ 查询/ 是/ 以/ 路网/ 路段/ 为/ 关键字/ 进行/ 的/ 线性/ 查询/ ./ 因此/ 对于/ 整个/ 场景/ 服务器/ 而言/ ,/ 同时/ 的/ 查询/ 请求/ 进程/ 数/ 最大/ 等于/ n/ ,/ 所以/ 本文/ 提出/ 的/ 基于/ 路网/ 的/ 可视/ 查询/ 框架/ 能够/ 有效/ 处理/ 动态/ 对象/ 数量/ 增加/ 所/ 带来/ 的/ 压力/ ./ 6/ 实验/ 验证/ 实验/ 在/ Intel/ (/ R/ )/ Core/ (/ TM/ )/ i5/ -/ 4200UCPU/ 、/ Page124GBRAM/ 、/ Windows7/ -/ 64bitOS/ 、/ AMDRadeonHD8670M2GB/ 显存/ 、/ 网络/ 传输速度/ 300KB/ // s/ 环境/ 下/ 进行/ ./ 实验/ 程序/ 使用/ C++/ 语言/ 在/ VisualStudio/ ./ net2010/ 开发/ 环境/ 下/ 编写/ ./ 对/ 本文/ 提出/ 框架/ 的/ 验证/ ,/ 将/ 从/ 静态/ 对象/ 和/ 动态/ 对象/ 两个/ 方面/ 进行/ ./ 6.1/ 静态/ 对象/ 可视/ 查询/ 实验/ 对于/ 三维/ 虚拟现实/ 场景/ 内/ 静态/ 对象/ 的/ 可视/ 查询/ 实验/ ,/ 从/ 单位/ 时间/ 加载/ 模型/ 数量/ 、/ 资源/ 消耗/ 情况/ 、/ 对于/ 网络带宽/ 等/ 硬件/ 压力/ 方面/ 做/ 比较/ 实验/ ,/ 以/ 验证/ 本文/ 所提/ 框架/ 对/ 静态/ 对象/ 的/ 动态/ 可视/ 查询/ 的/ 有效性/ ./ 首先/ 根据/ 实际/ 地图/ 特意/ 选取/ 并/ 制作/ 了/ 一份/ 5km/ ×/ 3km/ 的/ 三维/ 场景/ 如图/ 8/ 所示/ ./ 该/ 场景/ 包括/ 9/ 个/ 街区/ 、/ 462/ 栋/ 建筑/ ./ 其中/ 包括/ 一个/ 较为/ 开阔/ 的/ 学校/ 区/ 、/ 1/ 个/ 建筑物/ 密集/ 的/ 商业区/ 、/ 5/ 个/ 建筑风格/ 统一/ 分布/ 均匀/ 的/ 住宅区/ 和/ 2/ 个/ 视野/ 开阔/ 占地面积/ 较大/ 的/ 工业区/ ./ 该/ 模型/ 的/ 规模/ 并不大/ ,/ 但是/ 功能/ 分区/ 和/ 建筑/ 分布/ 具有/ 各种/ 代表性/ ,/ 因此/ 采用/ 这一/ 三维/ 虚拟现实/ 场景/ 作为/ 框架/ 中/ 对于/ 静态/ 对象/ 可视/ 查询/ 的/ 实验/ 数据/ ./ 在/ 预处理/ 阶段/ 建立/ 静态/ 对象/ 可视/ 关系/ 表/ ,/ 包括/ 24/ 条道/ 路边/ ,/ 462/ 栋/ 建筑/ ./ 当/ 观察者/ 进入/ 场景/ 后/ ,/ 整体式/ 加载/ 需要/ 加载/ 整个/ 场景/ ,/ 范围/ 加载/ 需要/ 以/ 观察者/ 为/ 圆心/ 无差别/ 加载/ 半径/ 内/ 的/ 建筑/ ,/ 而/ 本文/ 提出/ 框架/ 中/ 的/ 可视/ 加载/ 则/ 是/ 获取/ 观察者/ 所在/ 路段/ ID/ 后/ ,/ 根据/ 静态/ 关系/ 表对/ 静态/ 对象/ 有/ 选择/ 的/ 加载/ ./ 整体式/ 加载/ 不/ 受/ 观察者/ 所在位置/ 的/ 影响/ ,/ 每次/ 加载/ 的/ 数据量/ 是/ 一定/ 的/ ;/ 范围/ 加载/ 和/ 可视/ 加载/ 都/ 受到/ 观察者/ 所在位置/ 的/ 影响/ ,/ 因此/ 对/ 它们/ 在/ 不同/ 半径/ 下/ 的/ 加载/ 数量/ 做/ 比较/ 实验/ ./ 对/ 范围/ 查询/ 和/ 可视/ 查询/ 在/ 不同/ 的/ 半径/ 下/ 分别/ 做/ 100/ 次/ 随机/ 查询/ 点/ 的/ 实验/ 后/ ,/ 取/ 每次/ 加载/ 静态/ 对象/ 数量/ 的/ 平均值/ 对比/ 数据/ 如图/ 9/ 所示/ ./ 图/ 9/ 静态/ 对象/ 在/ 不同/ 查询/ 半径/ 下/ 的/ 加载/ 数量/ 对比/ 图/ 9/ 中能/ 清楚/ 地/ 看出/ ,/ 加载/ 的/ 静态/ 对象/ 的/ 数量/ 随/ 查询/ 半径/ 的/ 增加/ 而/ 增加/ ,/ 但是/ 可视/ 查询/ 的/ 加载/ 数量/ 和/ 增加/ 速度/ 都/ 远远/ 小于/ 范围/ 查询/ ./ 这/ 是因为/ 范围/ 加载/ 模式/ 下会/ 加载/ 大量/ 的/ 不可/ 视/ 静态/ 对象/ ,/ 查询/ 半径/ 越大则/ 不可/ 视/ 对象/ 越多/ ./ 而/ 可视/ 查询/ 中/ 可视/ 对象/ 与/ 半径/ 不是/ 正比/ 关系/ ,/ 而是/ 存在/ 一个/ 极限/ ./ 因此/ 当/ 查询/ 半径/ 增加/ 时/ ,/ 可视/ 查询/ 的/ 结果/ 数量/ 远远/ 小于/ 范围/ 查询/ 的/ 结果/ 数量/ ./ 这/ 是/ 由/ 可视性/ 本身/ 的/ 特性/ 所/ 决定/ 的/ ./ 这/ 也/ 就/ 意味着/ ,/ 当/ 观察者/ 处于/ 运动/ 状态/ 时/ ,/ 本文/ 所提/ 框架/ 相较/ 于/ 现有/ 的/ 基于/ 范围/ 加载/ 的/ 商业软件/ 在/ 加载/ 数据量/ 优化/ 方面/ 具有/ 更大/ 的/ 优势/ ./ 当/ 观察者/ 移动/ 时/ ,/ 移动/ 距离/ 越/ 远/ ,/ 则/ 框架/ 对于/ 数据/ 的/ 加载/ 量/ 优化/ 性能/ 越好/ ./ 为了/ 验证/ 这/ 一点/ ,/ 观察者/ 选择/ 如图/ 8/ (/ a/ )/ 中灰线/ 所示/ 的/ 移动/ 轨迹/ ,/ 分别/ 进行/ 整体/ 场景/ 加载/ 、/ 范围/ 查询/ 加载/ 和/ 可视/ 查询/ 加载/ 3/ 种/ 加载/ 方式/ 的/ 对比/ 实验/ ./ 对于/ 观察者/ 的/ 效果/ 对/ 比如/ 图/ 10/ 所示/ ./ 在/ 3/ 种/ 不同/ 加载/ 模式/ 下/ ,/ 对于/ 场景/ 内/ 的/ 观察者/ 而言/ ,/ 其/ 视觉/ 感受/ 并/ 无/ 区别/ ;/ 但/ 这/ 3/ 种/ 模式/ 所/ 需要/ 传输/ 和/ 加载/ 的/ 数据量/ 则/ 存在/ 极大/ 的/ 不同/ ,/ 对于/ 客户端/ 的/ 硬件/ 压力/ 也/ 完全/ 不同/ ,/ 数据/ 对/ 比如/ 表/ 1/ 所示/ ./ 加载/ 模式/ 建筑/ 数量/ // 个/ 数据量/ // MB/ 传输/ 时间/ // s/ 加载/ 时间/ // s/ 整体/ 加载/ 范围/ 查询/ 加载/ 可视/ 查询/ 3/ 种/ 不同/ 加载/ 方式/ 中/ ,/ 整体式/ 加载/ 的/ 速度/ 最慢/ ,/ 数据/ 从/ 服务器端/ 到/ 客户端/ 的/ 传输/ 时间/ 就/ 超过/ 可视/ 查询/ 的/ 传输/ 时间/ 91.5/ %/ ./ 加载/ 时间/ 也/ 超过/ 了/ 105.6/ %/ ./ 而且/ ,/ 由于/ 硬件/ 显卡/ 的/ 限制/ ./ 当/ 模型/ 加载/ 的/ 数量/ 越/ 多/ ,/ 场景/ 内/ 的/ 面片/ 数越/ 多/ ,/ CPU/ 占用/ 越/ 多/ ,/ 场景/ 的/ 交互性/ 能/ 下降/ 越/ 严重/ ./ 在/ 本/ 实验/ 中/ ,/ 在/ 尽量/ 使用/ 简单/ 的/ Page13/ 图/ 10/ 不同/ 加载/ 方式/ 视觉效果/ 对比/ 三维/ 模型/ 以/ 降低/ 场景/ 面片/ 数/ 的/ 情况/ 下/ ,/ 进行/ 整体/ 加载/ 的/ 场景/ 仍然/ 占用/ 了/ 65/ %/ 的/ 客户端/ CPU/ 资源/ ./ 而/ 采用/ 静态/ 可视/ 加载/ 模式/ 后/ ,/ 虽然/ 在/ 服务器端/ 进行/ 了/ 长时间/ 的/ 离线/ 预处理/ 以/ 生成/ 静态/ 对象/ 可视/ 关系/ 表/ ,/ 但/ 在线/ 查询/ 加载/ 阶段/ ,/ 从/ 服务器端/ 需要/ 传输/ 的/ 数据量/ 只有/ 整体/ 加载/ 模式/ 的/ 51.8/ %/ ,/ 传输/ 时间/ 也/ 相应/ 地降/ 至/ 52.2/ %/ ,/ 客户端/ CPU/ 占用/ 平均/ 只有/ 35/ %/ ./ 在/ 本文/ 所提/ 框架/ 中/ ,/ 针对/ 静态/ 对象/ 的/ 可视/ 查询/ 加载/ 模式/ 被/ 证明/ 具有/ 极为/ 优良/ 的/ 性能/ ./ 从/ 模型/ 加载/ 情况/ 来看/ ,/ 在/ 实际/ 的/ 应用/ 中/ ,/ 对于/ 不同/ 的/ 街区/ ,/ 静态/ 可视/ 加载/ 的/ 效率/ 是/ 不同/ 的/ ./ 对于/ 学校/ 区/ 和/ 工业区/ ,/ 由于/ 建筑/ 低矮/ ,/ 存在/ 大片/ 的/ 空旷/ 区域/ ,/ 其/ 加载/ 量/ 变化/ 不大/ ./ 而/ 对于/ 高楼/ 林立/ 的/ 住宅区/ 和/ 商业区/ ,/ 加载/ 量/ 变化/ 极大/ ./ 表/ 1/ 中/ 的/ 数据/ 差异/ 主要/ 也/ 是/ 来源于/ 此/ ./ 在/ 以后/ 的/ 研究/ 中将/ 根据/ 这些/ 情况/ 做/ 进一步/ 的/ 细分/ ,/ 以/ 满足/ 更/ 大规模/ 、/ 更/ 多/ 模式/ 下/ 三维/ 场景/ 的/ 实时/ 可视/ 查询/ 加载/ ./ 6.2/ 动态/ 对象/ 可视/ 查询/ 实验/ 对于/ 三维/ 虚拟/ 场景/ 内/ 动态/ 对象/ 的/ 可视/ 查询/ 实验/ ,/ 主要/ 目的/ 是/ 验证/ 采用/ 动态/ 对象/ 可视/ 关系/ 表后/ ,/ 利用/ 路段/ 间/ 的/ 可视性/ 对/ 移动/ 对象/ 查询/ 的/ 结果/ 数量/ 与/ 范围/ 查询/ 结果/ 数量/ 的/ 对比/ ./ 因此/ 可以/ 采用/ 二维/ 的/ 移动/ 对象/ 数据/ 进行/ 计算/ ,/ 在/ 本文/ 中/ 路网/ 移动/ 对象/ 数据/ 采用/ 德国/ Oldenburg/ 的/ 道路网/ 及/ 对应/ 的/ 移动/ 对象/ 生成器/ ./ 该/ 路网/ 拥有/ 6105/ 个/ 道路/ 节点/ 、/ 7035/ 条边/ 、/ 平均/ 路段/ 长度/ 184/ ,/ 是/ 移动/ 对象/ 研究/ 中/ 广泛/ 采用/ 的/ 测试数据/ 集/ ./ 利用/ 标准/ 移动/ 对象/ 生成器/ 生成/ 10K/ 、/ 100K/ 和/ 200K/ 这/ 3/ 个/ 不同/ 规模/ 的/ 移动/ 对象/ 数据/ 集/ ./ 范围/ 查询/ 的/ 半径/ 分别/ 设为/ 200m/ 、/ 500m/ 和/ 1000m/ ./ 由于/ 没有/ 具体/ 的/ Oldenburg/ 的/ 建筑/ 三维/ 地图/ ,/ 无法/ 真实/ 确定/ Oldenburg/ 路网/ 中/ 的/ 动态/ 可视/ 表/ ,/ 因此/ 默认/ 只有/ 相邻/ 路段/ 即/ 拥有/ 相同/ 道路/ 节点/ 的/ 路段/ 间/ 可视/ ./ 本文/ 所/ 提出/ 的/ 动态/ 可视/ 查询/ ,/ 是/ 通过/ 高速度/ 、/ 低/ 精度/ 的/ 间接/ 可视/ 查询/ 取代/ 高精度/ 、/ 低/ 速度/ 的/ 直接/ 可视/ 查询/ ,/ 其本质/ 是/ 一种/ 范围/ 查询/ ,/ 因此/ 为了/ 表现/ 框架/ 在/ 进行/ 移动/ 对象/ 查询/ 时/ 与/ 现有/ 模式/ 下/ 的/ 范围/ 查询/ 在/ 数据量/ 方面/ 的/ 性能/ 优势/ ,/ 采用/ 本文/ 间接/ 可视/ 查询/ 与/ 范围/ 查询/ 的/ 对比/ 实验/ ./ 首先/ 进行/ 在/ 相同/ 的/ 查询/ 半径/ 、/ 不同/ 规模/ 数据/ 集中/ 对/ 范围/ 查询/ 与/ 可视/ 查询/ 进行/ 对比/ 实验/ ,/ 重复/ 实验/ 500/ 次取/ 均值/ ,/ 结果/ 随/ 时间/ 变化/ 如图/ 11/ 所示/ ./ 从/ 实验/ 结果/ 对比/ 明显/ 能够/ 看出/ ,/ 随着/ 数据/ 集/ 规模/ 的/ 增大/ ,/ 路网/ 中/ 的/ 移动/ 对象/ 密度/ 相应/ 增加/ ,/ 范围/ 查询/ 和/ 可视/ 查询/ 的/ 查询/ 结果/ 数量/ 都/ 在/ 增加/ ./ 但是/ 可视/ 查询/ 的/ 结果/ 集在/ 总/ 数量/ 上/ 小于/ 范围/ 查询/ 的/ 结果/ 集/ ./ 查询/ 结果/ 数量/ 对/ 比如/ 图/ 12/ 所示/ ./ 平均/ 查询/ 时间/ 对/ 比如/ 图/ 13/ 所示/ ./ 范围/ 查询/ 与/ 可视/ 查询/ 的/ 查询/ 时间/ 相差无几/ ,/ 但是/ 仍然/ 可以/ 看到/ 的/ 趋势/ 是/ ,/ 随着/ 移动/ 对象/ 集/ 规模/ 的/ 扩大/ ,/ 可视/ 查询/ 的/ 增长率/ 要/ 低于/ 范围/ 查询/ ./ 这/ 是因为/ 移动/ 对象/ 的/ 可视/ 查询/ 的/ 本质/ 就是/ 在/ 范围/ 查询/ 的/ 基础/ 上/ 利用/ 可视/ 关系/ 表对/ 查询/ 的/ 路段/ 做/ 可见/ 性/ 方面/ 的/ 过滤/ ,/ 所以/ 二者/ 在/ 查询/ 机理/ 上/ 并/ 不/ 存在/ 根本性/ 的/ 差别/ ./ 但是/ 因为/ 在/ 进行/ Page14/ 图/ 11/ 相同/ 半径/ 下/ 的/ 范围/ 查询/ 与/ 可视/ 查询/ 结果/ 变化趋势/ 对比/ 路网/ 的/ 范围/ 查询/ 时/ ,/ 可视/ 查询/ 首先/ 排除/ 了/ 不可/ 视/ 的/ 路段/ ,/ 因此/ 其/ 需要/ 计算/ 的/ 路段/ 数量/ 小于/ 等于/ 正常/ 范围/ 查询/ 的/ 比较/ 范围/ ,/ 所以/ 可视/ 查询/ 的/ 速度/ 仍然/ 要/ 快/ 于/ 范围/ 查询/ ./ 通过/ 现有/ 的/ 数据/ 可以/ 看到/ ,/ 在/ 不同/ 规模/ 的/ 数据/ 集中/ ,/ 可视/ 查询/ 的/ 速度/ 优于/ 范围/ 查询/ ,/ 结果/ 集/ 规模/ 也/ 小于/ 范围/ 查询/ ./ 随着/ 移动/ 对象/ 数据/ 集/ 规模/ 的/ 增长/ ,/ 可视/ 查询/ 的/ 结果/ 数量/ 增加/ 速度/ 也/ 小于/ 范围/ 查询/ 结果/ 数量/ 的/ 增加/ 速度/ ./ 接下来/ 我们/ 验证/ 不同/ 的/ 查询/ 半径/ 对于/ 可视/ 查询/ 的/ 影响/ ./ 在/ 移动/ 对象/ 为/ 200K/ 的/ 数据/ 集中/ ,/ 分别/ 进行/ 半径/ 为/ 200m/ 、/ 500m/ 和/ 1000m/ 的/ 可视/ 查询/ ./ 实验/ 结果/ 如图/ 14/ 所示/ ./ 由于/ 在/ 本次/ 实验/ 中/ 设定/ 只有/ 共享/ 某/ 路段/ 结点/ 的/ 路段/ 间/ 才/ 可视/ ,/ 因此/ 可视/ 查询/ 对于/ 查询/ 半径/ 的/ 变化/ 没有/ 反应/ ,/ 这/ 是因为/ 无论/ 查询/ 半径/ 如何/ 变化/ ,/ 对于/ 查询/ 点/ 所在/ 的/ 路段/ 可视/ 的/ 对象/ 只有/ 那么/ 多/ ,/ 除非/ 查询/ 半径/ 小于/ 路段/ 长度/ ,/ 否则/ 结果/ 数量/ 不会/ 随/ 查询/ 半径/ 变化/ 而/ 发生变化/ ./ 在/ 真实/ 的/ 三维/ 场景/ 中/ ,/ 随着/ 查询/ 半径/ 的/ 增加/ ,/ 某些/ 可视/ 距离/ D/ 小于/ 查询/ 半径/ 的/ 路段/ 也/ 会/ 加入/ 到/ 可视/ 查询/ 结果/ 中/ ,/ 因此/ 数据量/ 应/ 会/ 随着/ 查询/ 半径/ 的/ 增加/ 而/ 增加/ ,/ 但是/ 由于/ 可视/ 路段/ 本身/ 的/ 限制/ ,/ 其/ 增加率/ 将/ 小于/ 范围/ 查询/ ./ 图/ 14/ 范围/ 查询/ 与/ 可视/ 查询/ 在/ 不同/ 半径/ 下/ 结果/ 数量/ 对比/ 接下来/ 对/ 范围/ 查询/ 与/ 可视/ 查询/ 的/ 数据/ 更新/ 量/ 进行/ 对比/ 实验/ ./ 实验/ 结果/ 如图/ 15/ 所示/ ./ 从图/ 15/ 中/ 可以/ 看出/ ,/ 随着/ 数据/ 规模/ 的/ 扩大/ 和/ 查询/ 半径/ 的/ 增加/ ,/ 范围/ 查询/ 和/ 可视/ 查询/ 在/ 每/ 一次/ 查询/ 周期/ 的/ 数据/ 改变/ 量/ 也/ 在/ 增加/ ./ 但是/ 可视/ 查询/ 的/ 数据/ 改变/ 量/ 明显/ 小于/ 范围/ 查询/ 的/ 改变/ 量/ ./ 这/ 是因为/ 在/ 范围/ 查询/ 结果/ 集中/ ,/ 有/ 很多/ 动态/ 对象/ 在/ 不/ 在/ 可视/ 路段/ 上/ ,/ 所以/ 在/ 这些/ 路段/ 上/ 的/ 动态/ 对象/ 的/ 变化/ 情况/ 不会/ 在/ 可视/ 查询/ 结果/ 集中体现/ 出来/ ,/ 于是/ 可视/ 查询/ 的/ 结果/ 集在/ 每/ 一个/ 查询/ 周期/ 内/ 的/ 变化/ 量/ 就/ 远远/ 小于/ 范围/ 查询/ 结果/ 集/ 的/ 变化/ 量/ ./ 在/ 同一/ 数据/ 规模/ 下/ ,/ 不同/ 查询/ 半径/ 的/ 查询/ 结果/ 集/ 的/ 数据/ 改变/ 量/ 如图/ 16/ 所示/ ./ 在/ 同样/ 规模/ 的/ 数据/ 集中/ ,/ 随着/ 查询/ 半径/ 的/ 增加/ ,/ 范围/ 查询/ 和/ 可视/ 查询/ 在/ 每个/ 查询/ 周期/ 内/ 的/ 数据/ 更新/ 量/ 都/ 在/ 增加/ ./ 但是/ 非常明显/ 的/ 是/ ,/ 可视/ 查询/ 不仅仅/ 在/ 数据/ 更新/ 量/ 上/ 小于/ 范围/ 查询/ 的/ 数据/ 更新/ 量/ ,/ 而且/ 其/ 变化趋势/ 也/ 明显/ 小于/ 范围/ 查询/ 更新/ 量/ 的/ 变化趋势/ ./ 在/ 三维/ 虚拟/ 场景/ 的/ 动态/ 加载/ 中/ ,/ 每/ 一个/ 动态/ 对象/ 都/ 意味着/ 一/ Page15/ 组/ 或/ 多组/ 模型/ ,/ 因此/ 查询/ 结果/ 或/ 更新/ 对象/ 数目/ 的/ 减少/ 将/ 直接/ 减少/ 更/ 大规模/ 的/ 数据传输/ 量/ ,/ 对于/ 大规模/ 三维/ 虚拟/ 场景/ 的/ 实时/ 加载/ 具有/ 重要/ 意义/ ./ 通过/ 实验/ 验证/ 在/ 本文/ 所提/ 的/ 可视/ 查询/ 框架/ 下/ ,/ 对于/ 三维/ 场景/ 图/ 15/ 范围/ 查询/ 与/ 可视/ 查询/ 更新/ 结果/ 量/ 对比/ 图/ 16/ 不同/ 查询/ 半径/ 对于/ 更新/ 数据量/ 的/ 影响/ 7/ 总结/ 在/ 基于/ 可视/ 查询/ 的/ 大规模/ 三维/ 场景/ 的/ 实时/ 加载/ 中有/ 两个/ 难点/ :/ (/ 1/ )/ 可视/ 计算/ 复杂/ 且/ 耗时/ ,/ 计算/ 时间/ 开销/ 随着/ 查询/ 数量/ 增多/ 而/ 急剧/ 增加/ ,/ 服务器/ 压力/ 过大/ ;/ (/ 2/ )/ 对于/ 动态/ 对象/ 的/ 可视/ 计算/ 随着/ 动态/ 对象/ 数量/ 的/ 增加/ 而/ 变得/ 过于/ 复杂/ ,/ 耗时/ 过长/ ,/ 不能/ 满足/ 在线/ 查询/ 的/ 时间/ 要求/ ./ 本文/ 针对/ 这些/ 困难/ ,/ 提出/ 大规模/ 三维/ 场景/ 的/ 可视/ 查询/ 加载/ 框架/ ./ 通过/ 设计/ 静态/ 对象/ 可视/ 关系/ 表/ 和/ 动态/ 对象/ 可视/ 关系/ 表将/ 三维/ 场景/ 的/ 可视性/ 与/ 路网/ 路段/ 建立/ 对应/ 关系/ ,/ 批量/ 处理/ 查询/ ,/ 降低/ 服务器/ 压力/ ;/ 同时/ ,/ 通过/ 静态/ 对象/ 可视/ 关系/ 表与/ 动态/ 对象/ 可视/ 关系/ 表将/ 动态/ 的/ 在线/ 可视/ 计算/ 查询/ 转化/ 为/ 静态/ 的/ 线性/ 查询/ ,/ 满足/ 了/ 在线/ 查询/ 的/ 时间/ 要求/ ./ 在/ 大规模/ 的/ 三维/ 场景/ 实际/ 应用/ 中/ ,/ 该/ 框架/ 在/ 不同/ 类型/ 的/ 场景/ 中/ 的/ 效果/ 不同/ ./ 在/ 城市/ 类/ 环境/ 中/ ,/ 尤其/ 是/ 高楼/ 林立/ 的/ 商业区/ 中/ ,/ 基于/ 可视性/ 的/ 查询/ 性能/ 比较/ 优异/ ./ 但是/ 在/ 自然/ 类/ 环境/ 中/ ,/ 尤其/ 是/ 在/ 复杂/ 地形/ 环境/ 中/ ,/ 现有/ 模型/ 仍/ 存在/ 较大/ 的/ 改进/ 空间/ ./ 在/ 进一步/ 的/ 研究/ 中/ ,/ 对于/ 城市道路/ 环境/ 下/ 的/ 静态/ 对象/ 的/ 可视性/ 推理/ 和/ 基于/ 移动/ 对象/ 运动/ 方向/ 推理/ 的/ 查询/ 算法/ 以及/ 内/ 的/ 静态/ 对象/ 和/ 动态/ 对象/ 的/ 可视/ 查询/ ,/ 可以/ 有效/ 避免/ 复杂/ 的/ 在线/ 可视/ 计算/ ,/ 满足/ 对于/ 静态/ 对象/ 查询/ 和/ 动态/ 对象/ 查询/ 的/ 实时性/ 需求/ ,/ 从而/ 满足/ 对于/ 大规模/ 三维/ 虚拟/ 场景/ 的/ 动态/ 实时/ 可视/ 加载/ ./ 脱离/ 道路/ 束缚/ 的/ 自由/ 动态/ 对象/ 间/ 的/ 关系/ 推理/ 查询/ 将/ 是/ 研究/ 的/ 重点/ ./ 致谢/ 衷心感谢/ 提供/ 修改意见/ 的/ 审稿/ 专家/ 和/ 编辑/ !/ 

