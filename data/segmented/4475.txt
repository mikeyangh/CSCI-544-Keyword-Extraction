Page1/ 一种/ 云/ 存储/ 环境/ 下/ 的/ 安全/ 存储系统/ 薛矛/ 1/ )/ 薛巍/ 1/ )/ ,/ 2/ )/ 舒/ 继武/ 1/ )/ ,/ 2/ )/ 刘洋/ 2/ )/ 1/ )/ (/ 清华大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100084/ )/ 2/ )/ (/ 清华大学/ 信息科学/ 与/ 技术/ 国家/ 实验室/ 北京/ 100084/ )/ 摘要/ 如今/ ,/ 数据/ 越来越/ 多/ 地被/ 选择/ 存放/ 在/ 云/ 存储/ 环境/ ,/ 而/ 非/ 个人电脑/ 中/ ./ 这/ 使得/ 用户/ 失去/ 了/ 对/ 数据/ 的/ 完全/ 控制/ ,/ 从而/ 难以/ 保证数据/ 的/ 安全性/ ./ 为了/ 解决/ 此/ 问题/ ,/ 文中/ 提出/ 了/ 一种/ 新/ 的/ 安全/ 云/ 存储系统/ 架构/ ./ 基于/ 这套/ 架构/ ,/ 文中/ 设计/ 并/ 实现/ 了/ 一个/ 安全/ 云/ 存储系统/ —/ —/ —/ Corslet/ ./ Corslet/ 可以/ 直接/ 架/ 在/ 已有/ 的/ 云/ 存储系统/ 之上/ 而/ 无需/ 对/ 其/ 进行/ 任何/ 改变/ ,/ 同时/ 提供/ 端到/ 端的/ 数据/ 私密性/ 保护/ 、/ 完整性/ 保护/ 以及/ 访问/ 权限/ 控制/ 等/ 功能/ ./ Corslet/ 使用/ 简单/ ,/ 用户/ 只/ 需/ 在/ 客户端/ 存放/ 他们/ 的/ 身份证/ 书/ 即可/ ./ 对/ Corslet/ 的/ 测试/ 结果显示/ ,/ Corslet/ 架/ 在/ NFSv4/ 集群/ 之上/ I/ // O/ 性能/ 下降/ 不到/ 5/ %/ ,/ 证明/ Corslet/ 在/ 提高/ 用户/ 数据/ 安全性/ 的/ 同时/ ,/ 其/ 性能/ 也/ 是/ 可以/ 接受/ 的/ ./ 关键词/ 安全/ 存储系统/ ;/ 加密/ 文件系统/ ;/ 私密性/ ;/ 完整性/ ;/ 访问控制/ 1/ 引言/ 在/ 这个/ 数据/ 爆炸性/ 增长/ 的/ 时代/ ,/ 随着/ 云/ 存储/ 的/ 迅猛发展/ ,/ 越来越/ 多/ 的/ 人/ 或/ 服务/ 开始/ 选择/ 使用/ 云/ 存储/ 环境/ 来/ 存放/ 自己/ 的/ 资料/ [/ 1/ -/ 2/ ]/ ./ 云/ 存储/ 环境/ 一般/ 采用/ 按/ 使用/ 付费/ 的/ 方式/ ,/ 给/ 使用者/ 带来/ 了/ 不少/ 好处/ :/ 无/ 前期/ 投入/ ,/ 节省/ 了/ 管理/ 开销/ ,/ 良好/ 的/ 可扩展性/ 和/ 很/ 高/ 的/ 存储资源/ 利用率/ ./ 然而/ ,/ 云/ 存储/ 环境/ 让/ 数据/ 的/ 拥有者/ 失去/ 了/ 对/ 数据/ 的/ 完全/ 控制/ ,/ 这/ 使得/ 数据/ 的/ 安全性/ 面临/ 一系列/ 的/ 威胁/ [/ 3/ ]/ ./ 例如/ ,/ 云/ 存储/ 环境/ 中/ 的/ 数据/ 一般/ 都/ 是/ 以/ 明文/ 方式/ 存储/ ,/ 缺少/ 完整性/ 保护/ 、/ 可靠/ 的/ 用户/ 身份/ 校验/ 和/ 访问控制/ 机制/ ./ 如果/ 把/ 敏感数据/ (/ 如/ 经济/ 类/ 文档/ 、/ 个人/ 医疗/ 记录/ 等/ )/ 存放/ 在/ 由/ 他人/ 控制/ 的/ 云/ 存储/ 环境/ 中/ ,/ 随着/ 云/ 存储/ 的/ 使用者/ 增多/ ,/ 以上/ 问题/ 将/ 变得/ 越发/ 严重/ ./ 对/ 数据/ 进行/ 加密/ 是/ 当前/ 保护/ 数据/ 私密性/ 的/ 主流/ 方法/ [/ 4/ -/ 5/ ]/ ./ 但是/ ,/ 大多数/ 的/ 云/ 存储/ 服务提供商/ 都/ 要求/ 用户/ 信任/ 他们/ 的/ 存储/ 服务器/ 和/ 系统管理员/ ./ 部分/ 服务提供商/ 声称/ 自己/ 提供/ 了/ 一套/ 优秀/ 的/ 安全/ 机制/ 来/ 确保/ 用户/ 数据/ 的/ 安全性/ ,/ 然而/ ,/ Verizon/ 在/ 2010/ 年度/ 数据/ 泄露/ 调查报告/ 中/ 指出/ ,/ 有/ 49/ %/ 的/ 数据/ 泄漏/ 是/ 由/ 内部/ 人士/ 造成/ 的/ ,/ 权限/ 滥用/ 占/ 到/ 了/ 数据/ 泄露/ 的/ 很大/ 一部分/ ,/ 48/ %/ 的/ 数据/ 泄漏/ 是/ 由于/ 用户/ 恶意/ 滥用/ 访问/ 企业/ 信息/ 的/ 权利/ 而/ 造成/ 的/ ①/ ./ 由此看来/ ,/ 使用/ 云/ 存储/ 的/ 用户/ 实在/ 很难/ 有/ 理由/ 完全/ 地/ 信任/ 服务提供商/ ./ 在/ 一些/ 存储系统/ 中/ ,/ 数据/ 的/ 访问/ 控制权/ 交给/ 数据/ 拥有者/ 来/ 完成/ ,/ 其他/ 用户/ 想要/ 访问/ 数据/ ,/ 需要/ 先/ 与/ 数据/ 拥有者/ 联系/ ,/ 这/ 在/ 一定/ 程度/ 上/ 减轻/ 了/ 安全/ 威胁/ ./ 但是/ 这种/ 方案/ 却/ 引入/ 了/ 新/ 的/ 问题/ :/ 第一/ ,/ 数据/ 拥有者/ (/ 用户/ )/ 需要/ 提供/ 较/ 复杂/ 的/ 数据管理/ 服务/ ,/ 并且/ 可能/ 需要/ 提供/ 在线/ 服务/ ;/ 第二/ ,/ 当/ 用户数量/ 庞大/ 、/ 共享/ 用户数/ 很多/ 时/ ,/ 管理/ 起来/ 并非易事/ ./ 针对/ 以上/ 问题/ ,/ 本文/ 主要/ 考虑/ 了/ 一种/ 多用户/ 共享/ 云/ 存储/ 环境/ ./ 在/ 该/ 环境/ 中/ ,/ 数据/ 拥有者/ 将/ 共享/ 数据/ 存放/ 在/ 不可/ 信/ 的/ 云/ 存储/ 服务提供商/ 处/ ,/ 而/ 其他/ 用户/ 则/ 在/ 不可/ 信/ 的/ 网络/ 环境/ 中/ 可/ 根据/ 自身/ 所/ 被/ 赋予/ 的/ 访问/ 权限/ 对/ 该/ 数据/ 进行/ 操作/ ./ 在/ 数据/ 存储/ 和/ 访问/ 的/ 过程/ 中/ ,/ 假设/ 云/ 存储/ 服务提供商/ 和/ 网络/ 中/ 的/ 恶意/ 用户/ 有/ 可能/ 对/ 数据/ 采取/ 窥探/ 甚至/ 篡改/ 等/ 行为/ ,/ 而/ 用户/ 也/ 将/ 可能/ 尝试/ 超出/ 其/ 合法/ 权限/ 之外/ 的/ 数据/ 操作/ ./ 在/ 这个/ 前提/ 假设/ 下/ ,/ 本文/ 提出/ 了/ 一套/ 新/ 的/ 安全/ 云/ 存储系统/ 架构/ ./ 该/ 架构/ 使得/ 用户/ 在/ 不可/ 信/ 的/ 云/ 存储/ 服务提供商/ 、/ 不可/ 信/ 的/ 网络/ 环境/ 下/ ,/ 依然/ 能够/ 得到/ 对/ 数据/ 安全性/ 与/ 完整性/ 的/ 保护/ ,/ 并/ 使/ 数据/ 的/ 访问控制/ 更加/ 高效/ 可靠/ ,/ 同时/ 保证/ 用户/ 无法/ 进行/ 超出/ 其/ 权限/ 的/ 操作/ ./ 依据/ 这套/ 安全/ 系统/ 架构/ ,/ 文中/ 实现/ 了/ 一个/ 安全/ 云/ 存储系统/ 原型/ —/ —/ —/ Corslet/ ./ Corslet/ 是/ 一个/ 具有/ 栈式/ 加密/ 文件系统/ 的/ 安全/ 云/ 存储系统/ ,/ 它/ 可以/ 架/ 在/ 任何/ 提供/ POSIX/ 标准接口/ 的/ 文件系统/ 之上/ ,/ 而/ 无需/ 对/ 已有/ 的/ 文件系统/ 做/ 任何/ 改变/ ./ Corslet/ 以/ 独立/ 于/ 一切/ 云/ 存储/ 服务提供商/ 的/ 第三方/ 身份/ 存在/ ,/ 为/ 用户/ 提供数据/ 私密性/ 、/ 完整性/ 保护/ 及/ 访问控制/ 服务/ ,/ 让/ 用户/ 消除/ 对/ 数据安全/ 问题/ 的/ 担忧/ ./ 本文/ 第/ 2/ 节/ 介绍/ 系统/ 设计/ 的/ 原则/ 与/ 预设/ ;/ 第/ 3/ 节/ 介绍/ 系统/ 设计/ 中/ 的/ 关键技术/ 与/ 系统/ 实现/ ;/ 第/ 4/ 节/ 给出/ 系统/ 的/ 性能/ 测试/ 结果/ 与/ 分析/ ;/ 第/ 5/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 6/ 节/ 进行/ 总结/ ./ 2/ 设计/ 原则/ 与/ 底层/ 文件系统/ 相互/ 独立/ ./ Corslet/ 的/ 设计/ 目的/ 是/ 为/ 已有/ 的/ 云/ 存储系统/ 提供/ 安全/ 机制/ ,/ 因此/ 必须/ 做到/ 与/ 底层/ 文件系统/ 相互/ 独立/ ,/ 保证/ 在/ 使用/ Corslet/ 的/ 时候/ ,/ 不/ 需要/ 对/ 底层/ 文件系统/ 进行/ 任何/ 修改/ ./ 文件共享/ 与/ 访问控制/ ./ Corslet/ 必须/ 向/ 用户/ 提供/ 安全/ 易用/ 的/ 文件/ 级/ 共享/ 与/ 访问控制/ 机制/ ./ 文件/ 拥有者/ 可以/ 指定/ 文件/ 能够/ 被/ 哪些/ 用户/ 进行/ 怎样/ 的/ 访问/ ./ 端到/ 端的/ 私密性/ 与/ 完整性/ 保护/ ./ Corslet/ 必须/ 保证/ 只有/ 被/ 合法/ 授权/ 的/ 用户/ 才能/ 获得/ 数据/ 明文/ ,/ 非法/ 的/ 用户/ 以及/ 底层/ 文件系统/ 的/ 管理员/ 均/ 无法/ 获得/ 数据/ 明文/ ./ 对/ 数据/ 的/ 非法/ 篡改/ 必须/ 能/ 被/ 发现/ ,/ 从而/ 保证/ 用户/ 得到/ 的/ 数据/ 是/ 正确/ 的/ ./ 密钥/ 管理/ ./ Corslet/ 的/ 密钥/ 管理机制/ 的/ 设计/ 原则/ 是/ :/ 用户/ 在/ 使用/ Corslet/ 时/ ,/ 不/ 需要/ 在/ 本地/ 存放/ 任何/ 文件/ 密钥/ ./ 也就是说/ ,/ Corslet/ 的/ 密钥/ 管理机制/ 对/ 用户/ 来说/ 是/ 透明/ 的/ ,/ 增加/ 了/ 易用性/ 和/ 安全性/ ./ 密钥/ 分发/ ./ Corslet/ 需要/ 有/ 一套/ 合理/ 高效/ 的/ 密钥/ 分发/ 机制/ ,/ 来/ 保证/ 合法/ 用户/ 能/ 获得/ 他/ 想/ 访问/ 的/ 文件/ 的/ 密钥/ ./ 懒惰/ 撤销/ ./ 在/ Corslet/ 中/ 引入/ 懒惰/ 撤销/ 机制/ [/ 6/ ]/ 来/ 减少/ 这部分/ 的/ 性能/ 开销/ ./ 当/ 权限/ 撤销/ 发生/ 时/ ,/ Corslet/ ①/ Verizon2010/ 年度/ 数据/ 泄露/ 调查报告/ 概述/ ./ http/ :/ // // netse/ -/ Page3/ 并/ 不/ 马上/ 对/ 文件/ 重新/ 加密/ ,/ 而是/ 等到/ 文件/ 被/ 修改/ 时才/ 对/ 被/ 修改/ 的/ 内容/ 重新/ 加密/ ./ 性能/ ./ Corslet/ 中/ 涉及/ 到/ 的/ 一切/ 加解密/ (/ 除/ PKI/ 身份/ 认证/ 体系/ 外/ )/ ,/ 都/ 使用/ 对称/ 加解密/ ./ 同时/ ,/ Corslet/ 还/ 需要/ 引入/ 缓存/ 机制/ 来/ 避免/ 重复/ 的/ 计算/ 开销/ 和/ I/ // O/ 开销/ ./ 另外/ Corslet/ 必须/ 尽量减少/ 由于/ 安全/ 机制/ 引入/ 所/ 带来/ 的/ 磁盘空间/ 和/ 网络带宽/ 的/ 消耗/ ./ 3/ 系统/ 设计/ 与/ 实现/ 3.1/ 总体设计/ 为/ 下文/ 描述/ 方便/ ,/ 本文/ 所用/ 术语/ 的/ 缩写/ 及/ 含义/ 见表/ 1/ ./ Corslet/ 安全/ 云/ 存储系统/ 由/ 三/ 部分/ 组成/ :/ 存储/ 服务器/ (/ StorageServer/ )/ 、/ 客户端/ (/ Client/ )/ 和/ 验证/ 服务器/ AS/ (/ AuthenticationServer/ )/ ./ 如图/ 1/ 所示/ ./ 缩写/ AS/ 验证/ 服务器/ (/ AuthenticationServer/ )/ AEK/ 验证/ 服务器/ 加密/ 密钥/ (/ ASEncryptionKey/ )/ ASK/ 验证/ 服务器/ 签名/ 密钥/ (/ ASSignatureKey/ )/ ACL/ 访问控制/ 列表/ (/ AccessControlList/ )/ EALG/ 加密算法/ (/ EncryptionAlgorithm/ )/ EMOD/ 加密/ 模式/ (/ EncryptionMode/ )/ LBK/ 锁/ 盒子/ 密钥/ (/ LockboxKey/ )/ FSK/ 文件/ 签名/ 密钥/ (/ FileSignatureKey/ )/ HMACACB/ 内容/ 验证码/ (/ Hash/ -/ basedMessageACB/ 访问控制/ 块/ (/ AccessControlBlock/ )/ RHi/ 根/ 哈希/ (/ ithRootHashintheroothashlist/ )/ 存储/ 服务器/ 负责/ 存放/ 文件/ ,/ 用户/ 视图/ 中/ 的/ 一个/ 文件/ ,/ 在/ 存储/ 服务器/ 中/ 被/ 分成/ 两个/ 文件/ 来/ 存放/ ,/ 分别/ 称之为/ 数据文件/ (/ datafile/ ,/ 或/ d/ -/ file/ )/ 和/ 安全/ 元/ 数据文件/ (/ securemetadatafile/ ,/ 或/ smd/ -/ file/ )/ ./ 数据文件/ 中/ 存放/ 的/ 是/ 文件/ 密文/ ,/ 安全/ 元/ 数据文件/ 中/ 存放/ 了/ 与/ 此/ 文件/ 相关/ 的/ 安全/ 信息/ ,/ 例如/ 访问控制/ 块/ (/ AccessControlBlock/ ,/ 或/ ACB/ )/ 、/ 根/ 哈希/ 链表/ (/ RootHashList/ ,/ 或/ RHL/ )/ 、/ MerkleTree/ 等/ ,/ 具体内容/ 将/ 在/ 后面/ 进行/ 详细/ 叙述/ ./ 验证/ 服务器/ AS/ 是/ 整个/ 系统/ 信任/ 的/ 根/ ./ AS/ 的/ 逻辑/ 非常简单/ ,/ 它/ 负责/ 验证/ 用户/ 身份/ 、/ 处理/ 用户/ 的/ 文件/ 访问/ 请求/ 、/ 将/ 相关/ 密钥/ 分/ 发给/ 合法/ 用户/ 等/ ./ AS/ 端/ 只/ 需要/ 储存/ 两个/ 对称/ 密钥/ AEK/ 和/ ASK/ ,/ 而/ 不/ 需要/ 储存/ 其他/ 任何/ 信息/ ,/ 所/ 涉及/ 到/ 的/ 操作/ 只是/ 少量/ 的/ 对称/ 密钥/ 加解密/ 、/ 计算/ MAC/ 等/ ./ 这种/ 简单/ 的/ 设计/ 能够/ 带来/ 以下/ 好处/ :/ (/ 1/ )/ 低/ 开销/ ./ 由于/ 计算/ 简单/ 、/ 无/ 磁盘/ I/ // O/ 开销/ ,/ AS/ 可以/ 轻松/ 地/ 同时/ 响应/ 多个/ 请求/ ./ (/ 2/ )/ 让/ 系统/ 更/ 可靠/ ,/ 可用性/ 更强/ ./ 由于/ AS/ 除了/ 两个/ 对称/ 密钥/ 外/ ,/ 无需/ 储存/ 其他/ 信息/ ,/ 因此/ 如果/ 一台/ AS/ 崩溃/ 了/ ,/ 另外/ 一台/ 具有/ 相同/ AEK/ 和/ ASK/ 的/ 服务器/ 可以/ 立即/ 接替/ 它/ 的/ 工作/ ,/ 无需/ 进行/ 复杂/ 的/ 数据恢复/ 和/ 状态/ 恢复/ 以/ 保持/ 一致性/ ./ (/ 3/ )/ 可扩展性/ 强/ ./ 简单/ 的/ 逻辑/ 使得/ AS/ 服务器/ 可以/ 轻松/ 地/ 扩展/ 为/ 验证/ 服务器/ 集群/ ,/ 消除/ 性能/ 瓶颈/ ./ 客户端/ 负责/ 处理/ 用户/ 的/ 请求/ ,/ 执行/ 文件/ 的/ 各种/ 操作/ ./ 同时/ ,/ 文件/ 数据/ 加解密/ 、/ 完整性/ 检验/ 也/ 是/ 在/ 客户端/ 完成/ 的/ ./ 必要/ 的/ 时候/ ,/ 客户端/ 还/ 需要/ 与/ 验证/ 服务器/ 通信/ 来/ 获取/ 密钥/ ./ 而/ 这/ 一切/ 对/ 用户/ 来说/ 都/ 是/ 透明/ 的/ ./ 另外/ Corslet/ 客户端/ 只/ 需要/ 存放/ 用户/ 的/ 身份证/ 书/ ,/ 除此之外/ 无需/ 储存/ 其他/ 信息/ ,/ 这/ 也/ 增加/ 了/ 系统/ 的/ 易用性/ 和/ 安全性/ ./ 在/ 技术/ 选型/ 上/ ,/ Corslet/ 是/ 一个/ 基于/ FUSE/ 实现/ 的/ 用户/ 态/ 文件系统/ ,/ 因此/ 它/ 可以/ 架设/ 在/ 任意/ 一个/ 提供/ 标准/ POSIX/ 接口/ 的/ 文件系统/ 之上/ ,/ 为/ 用户/ 提供/ 安全/ 功能/ ./ 这/ 也/ 使得/ Corslet/ 与/ 底层/ 文件系统/ 完全/ 相互/ 独立/ ,/ 适用范围/ 广泛/ ./ 3.2/ 对称/ 密钥/ 层级/ 管理/ 在/ 安全/ 云/ 存储系统/ 中/ ,/ 密钥/ 管理/ 有/ 两个/ 关键问题/ :/ 如何/ 减少/ 需要/ 维护/ 的/ 密钥/ 数量/ 以及/ 权限/ 撤销/ 发生/ 时/ 如何/ 处理/ 密钥/ 的/ 更新/ ./ 如图/ 2/ 所示/ ,/ 在/ Corslet/ 中/ ,/ 密钥/ 分为/ 3/ 个/ 层级/ 来/ 组织/ :/ 文件/ 密钥/ 、/ 安全/ 元/ 数据文件/ 和/ 验证/ 服务器/ ./ 文件/ 密钥/ ./ 密钥/ 层级/ 的/ 第/ 1/ 层/ 是/ 文件/ 密钥/ ./ 为了/ 更/ 高效/ 安全/ 地/ 处理/ 大/ 文件/ ,/ Corslet/ 以/ 分块/ 加密/ 的/ 形式/ 来/ 加密/ 文件/ 数据/ ./ 每/ 一个/ 文件/ 块/ FBi/ 采用/ 单独/ 的/ 对称/ 密钥/ FBKi/ 来/ 进行/ 加解密/ ,/ FBKi/ 的/ 计算方法/ 如下/ :/ 其中/ 符号/ “/ ‖/ ”/ 表示/ 拼接/ (/ concatenate/ )/ ,/ HASH/ 表示/ 计算/ 文件/ 块/ 的/ 哈希/ 值/ (/ 例如/ 使用/ SHA/ -/ 1/ 算法/ )/ ,/ offseti/ 是/ 块/ i/ 在/ 文件/ 中/ 的/ 偏移量/ ./ 也就是说/ ,/ 文件/ 块/ 的/ 加密/ 密钥/ ,/ 是/ 由/ 它/ 明文/ 的/ 哈希/ 值/ 与/ 它/ 的/ 偏移量/ 拼接/ 而成/ 的/ ,/ 这种/ 密钥/ 的/ 选择/ 方式/ 能够/ 带来/ 以下/ 3/ 点/ 好处/ :/ (/ 1/ )/ 由于/ 要/ 保护/ 文件/ 的/ 完整性/ ,/ 就/ 免不了/ 要计/ Page4/ 算/ 文件/ 内容/ 的/ 哈希/ ,/ 而/ 采用/ 明文/ 的/ 哈希/ 作为/ 密钥/ ,/ 就/ 能/ 使/ 这部分/ 信息/ 得到/ 重用/ ,/ 很大/ 程度/ 上/ 节省/ 了/ 密钥/ 存储空间/ ;/ (/ 2/ )/ 由于/ 相同/ 内容/ 的/ 文件/ 块/ 会/ 得出/ 相同/ 的/ 哈希/ 值/ ,/ 因此/ 在/ 哈希/ 值后/ 拼接/ 上/ 偏移量/ 来/ 作为/ 密钥/ ,/ 就/ 能够/ 使/ 相同/ 内容/ 的/ 文件/ 块/ 产生/ 不同/ 的/ 密文/ ,/ 增强/ 了/ 保密性/ ;/ (/ 3/ )/ 以/ 这种/ 方式/ 来/ 选择/ 密钥/ ,/ 将/ 使得/ 文件/ 块/ 内容/ 发生/ 改变/ 时/ ,/ 密钥/ 也/ 随之/ 发生/ 改变/ ,/ 这/ 对系统/ 的/ 安全性/ 和/ 权限/ 撤销/ (/ 后面/ 会/ 详细/ 叙述/ )/ 都/ 有/ 好处/ ./ 安全/ 元/ 数据文件/ ./ 密钥/ 层级/ 的/ 第/ 2/ 层/ 是/ 安全/ 元/ 数据文件/ ./ 如图/ 2/ 所示/ ,/ 在/ smd/ -/ file/ 的/ 访问控制/ 块/ ACB/ 中/ ,/ 有/ 一个/ 锁/ 盒子/ 密钥/ LBK/ ./ 从图/ 中/ 可以/ 看出/ ,/ 所有/ 的/ 文件/ 块/ 密钥/ FBKi/ 都/ 用/ LBK/ 进行/ 了/ 加密/ ,/ 并/ 以/ MerkleTree/ [/ 7/ ]/ 的/ 形式/ 存放/ 在/ 安全/ 元/ 数据文件/ (/ smd/ -/ file/ )/ 中/ ./ 只有/ 拿到/ 了/ LBK/ 的/ 用户/ ,/ 才/ 可以/ 解密/ 得到/ 文件/ 块/ 密钥/ ,/ 进而/ 对/ 数据文件/ 进行/ 解密/ ,/ 得到/ 明文/ 内容/ ./ ACB/ 中/ 还有/ 一个/ 文件/ 签名/ 密钥/ FSK/ ,/ 只有/ 获取/ 了/ FSK/ 的/ 用户/ 才/ 具有/ 对/ 文件/ 进行/ 合法/ 修改/ 的/ 能力/ ,/ 即/ 具有/ 写/ 操作/ 权限/ ,/ 这部分/ 内容/ 在/ 3.3/ 节将/ 进行/ 详细/ 叙述/ ./ 验证/ 服务器/ ./ 密钥/ 层级/ 的/ 第/ 3/ 层/ 是/ 验证/ 服务器/ ./ 如图/ 2/ 所示/ ,/ 验证/ 服务器/ AS/ 中/ 存放/ 了/ 两个/ 对称/ 密钥/ :/ AEK/ 和/ ASK/ ./ 前者/ 是/ 验证/ 服务器/ 加密/ 密钥/ (/ ASEncryptionKey/ )/ ,/ 后者/ 是/ 验证/ 服务器/ 签名/ 密钥/ (/ ASSignatureKey/ )/ ./ 这/ 两个/ 密钥/ 只有/ AS/ 自己/ 知道/ ,/ 是/ 对/ 其他/ 的/ 任何/ 实体/ 保密/ 的/ ./ 从图/ 2/ 可以/ 看出/ ,/ 在/ smd/ -/ file/ 的/ ACB/ 中/ ,/ 锁/ 盒子/ 密钥/ (/ LBK/ )/ 和/ 文件/ 签名/ 密钥/ (/ FSK/ )/ 都/ 被/ AS/ 用/ AEK/ 加密/ 过/ ./ 也就是说/ ,/ 用户/ 想要/ 获得/ LBK/ 或/ FSK/ ,/ 只能/ 通过/ 与/ AS/ 进行/ 通信/ 来/ 获取/ ./ 签名/ 密钥/ ASK/ 则/ 用来/ 计算/ 访问控制/ 块/ ACB/ 的/ HMAC/ 值/ ./ 利用/ smd/ -/ file/ 中/ 的/ HMAC/ 值/ ,/ AS/ 就/ 能够/ 判断/ ACB/ 的/ 完整性/ 是否/ 遭到/ 破坏/ ,/ 而/ 其他/ 实体/ 由于/ 无法/ 得到/ ASK/ ,/ 所以/ 不/ 具备/ 合法/ 修改/ ACB/ 内容/ 的/ 能力/ ./ 通过/ 这样/ 的/ 3/ 层/ 密钥/ 管理/ 结构/ ,/ 数目/ 众多/ 的/ 密钥/ 可以/ 被/ 高效/ 地/ 组织/ 起来/ ,/ 在/ 保证数据/ 私密性/ 与/ 完整性/ 的/ 同时/ ,/ 提高/ 了/ 密钥/ 管理/ 的/ 效率/ ,/ 并且/ 对/ 用户/ 的/ 身份/ 认证/ 、/ 访问/ 授权/ 以及/ 权限/ 撤销/ 都/ 是/ 很/ 有/ 好处/ 的/ ,/ 这/ 将/ 在/ 3.5/ 节/ 详细/ 叙述/ ./ 3.3/ 完整性/ 保护/ Corslet/ 通过/ 为/ 文件/ 的/ 每/ 一个/ 块/ 计算/ 明文/ 哈希/ 值来/ 保证/ 它/ 的/ 完整性/ (/ 如前/ 文所/ 叙述/ 的/ ,/ 该/ 哈希/ 值/ 也/ 是/ 其/ 加解密/ 密钥/ FBK/ 的/ 一部分/ )/ ,/ 进一步/ 地/ 把/ 这些/ 哈希/ 值/ 组成/ 一棵/ 或/ 多棵/ MerkleTree/ ./ 传统/ 的/ MerkleTree/ 的/ 叶子/ 结点/ 存放/ 文件/ 块/ 哈希/ ,/ 非/ 叶子/ 结点/ 用来/ 保证/ 儿子/ 的/ 完整性/ ,/ 存放/ 的/ 是/ 所有/ 儿子/ 拼接/ 后/ 的/ 哈希/ 值/ ./ 这样/ 的/ 方式/ 对于/ 不变/ 文件/ 来说/ 比较/ 适合/ ,/ 但是/ 如果/ 文件/ 被/ 频繁/ 修改/ ,/ 那么/ MerkleTree/ 的/ 维护/ 和/ 存储/ 就/ 比较/ 麻烦/ 了/ ./ 在/ Corslet/ 中/ ,/ 使用/ 改进/ 的/ MerkleTree/ ,/ 非/ 叶子/ 结点/ 也/ 参与/ 存放/ 文件/ 块/ 哈希/ ,/ 其/ 结构/ 如图/ 3/ 所示/ ./ 其中/ ,/ 图/ 3/ 中/ bHashi/ 的/ 内容/ 为/ HASH/ (/ FBi/ )/ 20BytenHashi/ 的/ 计算方法/ :/ nHashi/ =/ HASH/ (/ bHashm/ / i/ +/ 1/ ‖/ nHashm/ / i/ +/ 1/ ‖/ …/ Corslet/ 中/ 的/ MerkleTree/ (/ 以下/ 简称/ 为/ M/ -/ Tree/ )/ 是/ 一棵/ m/ 叉/ 树/ ,/ 除/ 叶子/ 结点/ 外/ ,/ 每个/ 结点/ 有/ m/ 个子/ 结点/ ./ 结点/ i/ 中/ 的/ bHashi/ 其实/ 就是/ 文件/ 块/ i/ 的/ 密钥/ FBKi/ ./ nHashi/ 是/ 结点/ i/ 的/ 所有/ 子/ 节点/ 内容/ 拼接/ 后/ ,/ 再/ 计算出来/ 的/ 哈希/ 值/ ./ 另外/ 还/ 使用/ 了/ “/ 块/ 存在/ 标记/ ”/ 来/ 标识/ 文件/ 块/ i/ 是否/ 存在/ (/ 文件/ 有/ 可能/ 存在/ 空洞/ )/ ,/ 以及/ 用/ “/ 结点/ 存在/ 标记/ ”/ 来/ 标识/ M/ -/ Tree/ 中/ 结点/ i/ 是/ Page5/ 否/ 存在/ (/ 如果/ bHashi/ 存在/ 或者/ nHashi/ 存在/ ,/ 就/ 认为/ 结点/ i/ 存在/ )/ ,/ 这/ 两个/ 标记/ 可以/ 帮助/ 识别/ 文件/ 空洞/ ,/ 以及/ 提高/ 完整性/ 校验/ 的/ 效率/ (/ 不/ 存在/ 的/ M/ -/ Tree/ 结点/ 可以/ 不/ 参与/ 计算/ )/ ./ 最后/ 对/ M/ -/ Tree/ 的/ 根用/ 文件/ 签名/ 密钥/ FSK/ 加密/ 并存/ 放在/ smd/ -/ file/ 的/ 根/ 哈希/ 链表/ 中/ ,/ 为了/ 提供/ 并发/ 写/ 的/ 可能/ ,/ 用/ 多棵/ M/ -/ Tree/ 和/ 一个/ 将/ 这些/ M/ -/ Tree/ 的/ 根/ 哈希/ 串/ 起来/ 的/ 链表/ 来/ 保证/ 一个/ 文件/ 的/ 完整性/ ./ 在/ Corslet/ 中/ ,/ 用/ bHashi/ 保证/ 了/ 文件/ 块/ i/ 的/ 完整性/ ,/ 用/ nHashi/ 保证/ 了/ 以/ 结点/ i/ 为根/ 的/ 子树/ 的/ 完整性/ ,/ 所以/ M/ -/ Tree/ 的/ 根/ 就/ 保证/ 了/ 整棵/ M/ -/ Tree/ 的/ 完整性/ ./ 由于/ 只有/ 具有/ 文件/ 写/ 权限/ 的/ 合法/ 用户/ 才能/ 获取/ 到/ 文件/ 签名/ 密钥/ FSK/ (/ 这/ 将/ 在/ 3.5/ 节中/ 详细/ 叙述/ )/ ,/ 因此/ 在/ smd/ -/ file/ 中/ 存放/ 的/ 根/ 哈希/ 保证/ 了/ 非法/ 用户/ 一旦/ 篡改/ 了/ 文件/ 内容/ 就/ 能/ 被/ 发现/ ./ 总的来说/ ,/ 用/ FSK/ 加密/ 的/ 根/ 哈希/ 来/ 保证/ 了/ M/ -/ Tree/ 的/ 完整性/ ,/ 而/ M/ -/ Tree/ 中/ 存放/ 了/ 所有/ 文件/ 块/ 的/ 明文/ 哈希/ ,/ 进而/ 保护/ 了/ 整个/ 文件/ 数据/ 的/ 完整性/ ./ 采用/ M/ -/ Tree/ 来/ 保护/ 文件/ 完整性/ 的/ 好处/ 是/ 显而易见/ 的/ ./ 当/ 合法/ 地/ 修改/ 文件/ 某个/ 或/ 某些/ 块/ 的/ 内容/ 时/ ,/ 只/ 需要/ 重新/ 计算/ 这些/ 块/ 的/ bHash/ ,/ 以及/ 这些/ 块/ 通往/ 根/ 结点/ 的/ 路径/ 上/ 所/ 经过/ 结点/ 的/ nHash/ ./ 最后/ 对/ 更新/ 后/ 的/ 根/ 哈希/ 用/ FSK/ 重新/ 加密/ 存放/ 在/ smd/ -/ file/ 中/ ./ 这样/ 的/ 修改/ 复杂度/ 是/ log/ 级/ 的/ ./ 如果/ 不/ 使用/ M/ -/ Tree/ ,/ 而是/ 把/ 所有/ 的/ FBK/ 拼接/ 在/ 一起/ 计算/ 出/ 一个/ 哈希/ 值/ ,/ 进而/ 保证/ 所有/ FBK/ 的/ 完整性/ ,/ 那么/ 哪怕/ 只是/ 修改/ 一个/ 块/ ,/ 也/ 需要/ 重新/ 对/ 所有/ FBK/ 进行/ 拼接/ 并/ 计算/ 哈希/ 值/ ,/ 这样/ 的/ 开销/ 对大/ 文件/ 来说/ 是/ 难以/ 接受/ 的/ ./ 另外/ ,/ 采用/ 文件/ 块/ 明文/ 的/ 哈希/ 值/ 而/ 非/ 密文/ 的/ 哈希/ 值/ 作为/ 完整性/ 校验/ 的/ 方式/ ,/ 一来/ 可以/ 重用/ 明文/ 哈希/ 值/ 作为/ 密钥/ ,/ 节省/ 了/ 空间/ ;/ 二来/ 可以/ 确保/ 用户/ 获得/ 的/ 信息/ 的的确确/ 是/ 他/ 想要/ 的/ (/ 因为/ 仅仅/ 保证/ 密文/ 的/ 完整性/ 是/ 不够/ 的/ ,/ 如果/ 完整性/ 保护/ 机制/ 不够/ 健全/ 的话/ ,/ 密钥/ 有/ 可能/ 被/ 篡改/ ,/ 解密/ 出来/ 的/ 明文/ 就/ 不/ 对/ 了/ )/ ./ 在/ Corslet/ 中/ ,/ 对/ 文件/ 的/ 每次/ 读写访问/ 都/ 会/ 先/ 检查/ 访问/ 内容/ 的/ 完整性/ ./ 先/ 检查/ M/ -/ Tree/ 根/ 哈希/ 的/ 完整性/ ,/ 然后/ 检查/ 访问/ 所/ 涉及/ 到/ 的/ M/ -/ Tree/ 结点/ 以及/ 这些/ 结点/ 通往/ 根/ 结点/ 的/ 路径/ 上/ 所/ 经过/ 的/ 结点/ 的/ 完整性/ ,/ 这样/ 可以/ 确保/ 这些/ 结点/ 的/ bHash/ ,/ 也/ 就/ 文件/ 块/ 密钥/ FBK/ 的/ 完整性/ ./ 检查/ M/ -/ Tree/ 结点/ 完整性/ 的/ 方法/ 是/ 根据/ 它/ 的/ 子/ 结点/ 重新/ 计算/ 它/ 的/ nHash/ 值/ ,/ 并/ 与/ smd/ -/ file/ 存放/ 的/ nHash/ 值/ 进行/ 比较/ ,/ 最后/ 检查/ 每/ 一个/ 文件/ 块/ 的/ 完整性/ (/ 对/ 解密/ 出来/ 的/ 明文/ 计算/ 哈希/ 值/ ,/ 与/ FBK/ 中/ 的/ 明文/ 哈希/ 进行/ 比较/ )/ ./ 3.4/ 懒惰/ 权限/ 撤销/ 在/ 用户数/ 较/ 多/ 的/ 云/ 存储系统/ 中/ ,/ 权限/ 撤销/ 经常/ 发生/ [/ 4/ ]/ ./ 大多数/ 云/ 存储系统/ 主要/ 依靠/ 存储/ 服务器/ 来/ 管理文件/ 的/ 访问/ 权限/ ,/ 权限/ 撤销/ 的/ 开销/ 很小/ ,/ 但是/ 这/ 要求/ 用户/ 完全/ 信任/ 存储/ 服务器/ ,/ 而/ 这/ 对/ 用户/ 的/ 数据/ 是/ 不/ 安全/ 的/ ./ 相对/ 的/ ,/ 在/ 加密/ 存储系统/ 里/ ,/ 权限/ 撤销/ 所/ 带来/ 的/ 性能/ 开销/ 要/ 大得多/ ,/ 因为/ 要/ 避免/ 权限/ 被/ 撤销/ 的/ 用户/ 继续/ 对/ 文件/ 进行/ 访问/ ,/ 需要/ 重新/ 生成/ 文件/ 的/ 相关/ 密钥/ ,/ 重新/ 加密/ ,/ 并/ 将/ 新/ 的/ 密钥/ 分/ 发给/ 依然/ 具有/ 访问/ 权限/ 的/ 用户/ ./ 其中/ 对/ 文件/ 的/ 重新/ 加密/ 将会/ 较/ 严重/ 地/ 影响/ 系统/ 性能/ ,/ 并/ 导致/ 在/ 此/ 过程/ 中/ 文件/ 无法/ 被/ 访问/ ./ 为了/ 减少/ 权限/ 撤销/ 所/ 带来/ 的/ 额外/ 开销/ ,/ Corslet/ 采用/ 了/ 懒惰/ 权限/ 撤销/ 技术/ [/ 6/ ]/ ./ 对于/ 每/ 一个/ 文件/ 块/ 而言/ ,/ 在/ 权限/ 撤销/ 后/ ,/ 只有/ 当/ 它/ 的/ 内容/ 发生/ 改变/ 时/ ,/ 它/ 才/ 被/ 重新/ 加密/ ,/ 这/ 在/ 很大/ 程度/ 上/ 降低/ 了/ 权限/ 撤销/ 对/ 性能/ 的/ 影响/ ./ 而/ 对于/ smd/ -/ file/ 而言/ 则/ 不然/ ,/ 一旦/ 权限/ 撤销/ 发生/ ,/ 就/ 需要/ 为/ 该/ 文件/ 重新/ 生成/ 锁/ 盒子/ 密钥/ LBK/ 和/ 文件/ 签名/ 密钥/ FSK/ ,/ 然后/ 用/ 新/ 的/ LBK/ 对/ 所有/ 的/ 文件/ 块/ 密钥/ FBKi/ 重新/ 加密/ ,/ 用/ 新/ 的/ FSK/ 对/ 所有/ 的/ 根/ 哈希/ RHi/ 重新/ 加密/ ./ 由于/ Corslet/ 只/ 对/ 所有/ 的/ FBK/ 和/ RH/ 进行/ 重新/ 加密/ ,/ 并/ 没有/ 对/ 文件/ 块/ 进行/ 重新/ 加密/ ,/ 相比之下/ ,/ 数据量/ 减少/ 了/ 非常/ 多/ ,/ 性能/ 开销/ 也/ 大大降低/ ,/ 由此/ 也/ 可/ 体现/ 出/ 密钥/ 层次/ 管理机制/ 的/ 优越性/ ./ 另外/ ,/ 当/ 文件/ 块/ 的/ 内容/ 被/ 修改/ 后/ ,/ 它/ 的/ 哈希/ 值/ 也/ 会/ 随之/ 改变/ ,/ 于是/ 文件/ 块/ 密钥/ FBK/ 也/ 就/ 自动/ 的/ 发生/ 了/ 改变/ ,/ 因此/ Corslet/ 无需/ 像/ 已有/ 的/ 懒惰/ 权限/ 撤销/ 机制/ 那样/ ,/ 用/ 一套/ 复杂/ 的/ 方法/ 和/ 额外/ 的/ 空间/ 来/ 记录/ 文件/ 的/ 历史/ 密钥/ 和/ 历史/ 状态/ 等/ 信息/ [/ 4/ ,/ 8/ ]/ ,/ 这/ 又/ 进一步/ 地/ 节省/ 了/ 时间/ 和/ 空间/ 开销/ ./ 另外/ ,/ 已有/ 的/ 一些/ 权限/ 撤销/ 机制/ 需要/ 对/ 整个/ 文件/ 重新/ 加密/ ,/ 而/ Corslet/ 是/ 精确/ 到/ 文件/ 块/ 级别/ 的/ ,/ 这/ 也/ 在/ 一定/ 程度/ 上/ 提高/ 了/ 性能/ ./ 3.5/ 访问/ 协议/ Corslet/ 的/ 文件/ 访问/ 协议/ 与/ 已有/ 加密/ 文件系统/ 中/ 的/ 访问/ 协议/ 比/ 起来/ ,/ 具有/ 更/ 安全/ 、/ 更/ 简单/ 、/ 更快/ 等/ 特点/ ./ 在/ 这套/ 协议/ 里/ ,/ 客户端/ 与/ 认证/ 服务器/ 间/ 的/ 通信/ 均/ 采用/ 了/ SSL/ 加密/ ,/ 能/ 有效/ 解决/ 网络/ 不可/ 信/ 的/ 问题/ ./ 另外/ ,/ 验证/ 服务器/ AS/ 只/ 需要/ 维护/ 两个/ 对称/ 密钥/ ,/ 而/ 客户端/ 只/ 需要/ 维护/ 自己/ 的/ 身份证/ 书/ ,/ 不/ 需要/ 维护/ 任何/ 密钥/ ,/ 这/ 不仅/ 简单/ 高效/ ,/ 而且/ 还/ 减少/ 了/ 密钥/ 泄露/ 的/ 风险/ ,/ 更为/ 安全/ ./ Corslet/ 能够/ 做到/ 这/ 一点/ ,/ 与/ 它/ 独特/ 的/ 文件/ 访问/ 协议/ 是/ 密不可分/ 的/ ,/ 接下来/ 将/ 详细/ 叙述/ 这套/ 协议/ ./ Page6/ 身份/ 认证/ ./ 在/ Corslet/ 中/ 采用/ X509/ 标准/ 来/ 实现/ 身份/ 认证/ ./ 每个/ 用户/ 都/ 需要/ 向/ CA/ 申请/ 一个/ 证书/ ,/ 用以/ 唯一/ 标识/ 自己/ 的/ 身份/ ./ 当/ 客户端/ 与/ 验证/ 服务器/ AS/ 通信/ 时/ ,/ 会/ 尝试/ 与/ AS/ 建立/ 一个/ SSL/ 连接/ ①/ ./ 连接/ 建立/ 的/ 时候/ ,/ 客户端/ 会/ 将/ 用户/ 的/ 身份证/ 书/ 发送给/ AS/ ,/ 该/ 证书/ 通过/ AS/ 的/ 验证/ 后/ ,/ AS/ 也/ 会/ 将/ 自己/ 的/ 证书/ 发送给/ 客户端/ ./ 在/ 双方/ 都/ 确认/ 对方/ 的/ 身份/ 信息/ 无误/ 后/ ,/ SSL/ 连接/ 正式/ 建立/ ./ 也就是说/ ,/ 在/ 验证/ 服务器/ AS/ 端/ ,/ 每/ 一个/ 连接/ 都/ 是/ 与/ 用户/ 证书/ 绑定/ 的/ ,/ 即/ 所有/ 的/ 通信/ 都/ 是/ 身份/ 可/ 识别/ 的/ 通信/ ./ 创建/ 文件/ ./ 创建/ 文件/ 的/ 流程/ 如下/ :/ (/ 1/ )/ 客户端/ 初始化/ 一个/ 创建/ 文件/ 请求/ ,/ 其中/ 包括/ 文件名/ 、/ 加密算法/ 、/ 加密/ 模式/ 、/ 访问控制/ 列表/ 等/ 信息/ ,/ 然后/ 将/ 此/ 请求/ 发送给/ 验证/ 服务器/ AS/ ./ (/ 3/ )/ 客户端/ 用/ LBK/ 把/ 需要/ 访问/ 到/ 的/ 文件/ 块/ 的/ 块/ 密钥/ FBK/ 解密/ 出来/ ,/ 验证/ M/ -/ Tree/ 及其/ 根/ 哈希/ 的/ 完整性/ ./ 接着/ 从/ d/ -/ file/ 中/ 读出/ 相关/ 的/ 文件/ 块/ 并用/ 对应/ 的/ FBK/ 解密/ 得到/ 明文/ ,/ 并/ 对/ 明文/ 计算/ 哈希/ 来/ 检验/ 文件/ 块/ 的/ 完整性/ ./ 写/ 文件/ ./ 写/ 文件/ 的/ 流程/ 如下/ :/ (/ 1/ )/ 客户端/ 从/ 存储/ 服务器/ 中/ 找到/ 安全/ 元/ 数据文件/ smd/ -/ file/ ,/ 从中/ 读出/ ACB/ 的/ 内容/ ,/ 并/ 将/ 写/ 请求/ 与/ ACB/ 发送给/ 验证/ 服务器/ AS/ ./ (/ 2/ )/ AS/ 首先/ 检查/ ACB/ 的/ 完整性/ ,/ 然后/ 通过/ ACL/ 访问控制/ 列表/ 判断/ 用户/ 是否/ 有/ 写/ 权限/ ,/ 接着/ 用/ (/ 2/ )/ AS/ 收到/ 请求/ 后/ 为/ 文件/ 生成/ 锁/ 盒子/ 密钥/ LBK/ 和/ 文件/ 签名/ 密钥/ FSK/ ,/ 并/ 对/ 这/ 两个/ 密钥/ 用/ 验证/ 服务器/ 加密/ 密钥/ AEK/ 进行/ 加密/ ,/ 创建/ 出/ ACB/ (/ 参考/ 图/ 2/ )/ ,/ 接着/ 用/ 验证/ 服务器/ 签名/ 密钥/ ASK/ 计算/ 出/ ACB/ 的/ HMAC/ 值/ ./ 最后/ 初始化/ 根/ 哈希/ 链表/ ,/ 并/ 将/ 生成/ 好/ 的/ ACB/ 返回/ 给/ 客户端/ ./ (/ 3/ )/ 客户端/ 根据/ AS/ 返回/ 的/ ACB/ 在/ 存储/ 服务器/ 上/ 创建/ 两个/ 文件/ :/ 数据文件/ d/ -/ file/ 和/ 安全/ 元/ 数据文件/ smd/ -/ file/ ./ 读/ 文件/ ./ 读/ 文件/ 的/ 流程/ 如下/ :/ (/ 1/ )/ 客户端/ 从/ 存储/ 服务器/ 中/ 找到/ 安全/ 元/ 数据文件/ smd/ -/ file/ ,/ 从中/ 读出/ ACB/ 的/ 内容/ ,/ 并/ 将/ 读/ 请求/ 与/ ACB/ 发送给/ 验证/ 服务器/ AS/ ./ (/ 2/ )/ AS/ 首先/ 检查/ ACB/ 的/ 完整性/ ,/ 然后/ 通过/ ACL/ 访问控制/ 列表/ 判断/ 用户/ 是否/ 有读/ 权限/ ,/ 接着/ 用/ AEK/ 将/ LBK/ 和/ FSK/ 解密/ 出来/ ,/ 并用/ FSK/ 解密/ 根/ 哈希/ 链表/ (/ 用于/ 验证/ M/ -/ Tree/ 的/ 完整性/ )/ ,/ 最后/ 把/ LBK/ 和/ 根/ 哈希/ 链表/ 返回/ 给/ 客户端/ ./ AEK/ 将/ LBK/ 和/ FSK/ 解密/ 出来/ ,/ 并用/ FSK/ 解密/ 根/ 哈希/ 链表/ ,/ 最后/ 把/ LBK/ 、/ FSK/ 和/ 根/ 哈希/ 链表/ 返回/ 给/ 客户端/ ./ (/ 3/ )/ 客户端/ 用/ LBK/ 把/ 需要/ 访问/ 到/ 的/ 文件/ 块/ 的/ 块/ 密钥/ FBK/ 解密/ 出来/ ,/ 验证/ M/ -/ Tree/ 及其/ 根/ 哈希/ 的/ 完整性/ ./ 然后/ 对要/ 写入/ 的/ 数据/ 以/ 文件/ 块/ 为/ 粒度/ 计算/ 哈希/ 和/ 新/ 的/ FBK/ ,/ 并用/ 新/ 的/ FBK/ 对/ 数据/ 进行/ 加密/ ,/ 写入/ d/ -/ file/ 中/ ./ 同时/ ,/ 还/ 需要/ 更新/ M/ -/ Tree/ ,/ 重新/ 计算/ 根/ 哈希/ 并用/ FSK/ 加密/ ,/ 写入/ smd/ -/ file/ 中/ ./ 共享/ 文件/ ./ 共享/ 文件/ 的/ 流程/ 如下/ :/ (/ 1/ )/ 文件/ 拥有者/ 从/ 存储/ 服务器/ 中/ 找到/ smd/ -/ file/ ,/ 读出/ ACB/ ./ 把/ 文件共享/ 请求/ 和/ ACB/ 发送给/ AS/ ./ 文件共享/ 请求/ 中/ 包括/ 要/ 在/ 访问控制/ 列表/ ACL/ 中/ 加入/ 哪些/ 用户/ 、/ 每个/ 用户/ 具有/ 哪些/ 权限/ 等/ 信息/ ./ (/ 2/ )/ AS/ 首先/ 检查/ ACB/ 的/ 完整性/ ,/ 并/ 检查/ 该/ 用户/ 是否/ 为/ 文件/ 拥有者/ ./ 接着/ 将/ 客户端/ 请求/ 中/ 的/ 访问控制/ 项/ 插入/ 到/ ACL/ 中/ ,/ 并用/ 验证/ 服务器/ 签名/ 密钥/ ASK/ 重新/ 计算/ ACB/ 的/ HMAC/ 值/ ./ 最后/ 将/ 更新/ 后/ 的/ ACB/ 返回/ 给/ 客户端/ ./ (/ 3/ )/ 客户端/ 将/ 新/ 的/ ACB/ 写入/ 到/ smd/ -/ file/ 中/ ./ 权限/ 撤销/ ./ 权限/ 撤销/ 的/ 流程/ 如下/ :/ (/ 1/ )/ 客户端/ 从/ 存储/ 服务器/ 中/ 找到/ smd/ -/ file/ ,/ 读出/ ACB/ ./ 把/ 权限/ 撤销/ 请求/ 和/ ACB/ 发送给/ AS/ ./ 权限/ 撤销/ 请求/ 中/ 包括/ 要/ 对/ 哪些/ 用户/ 进行/ 权限/ 撤销/ 、/ 每个/ 用户/ 被/ 权限/ 撤销/ 后/ 所/ 应该/ 拥有/ 的/ 权限/ (/ 例如/ 从/ 读写/ 权限/ 降级/ 为/ 只读/ 权限/ )/ 等/ 信息/ ./ (/ 2/ )/ AS/ 首先/ 检查/ ACB/ 的/ 完整性/ ,/ 并/ 检查/ 该/ 用户/ 是否/ 为/ 文件/ 拥有者/ ./ 接着/ 根据/ 客户端/ 的/ 请求/ 更新/ 访问控制/ 列表/ ACL/ ,/ 然后/ 重新/ 生成/ 锁/ 盒子/ 密钥/ LBK/ 和/ 文件/ 签名/ 密钥/ FSK/ ,/ 并用/ 验证/ 服务器/ 加密/ 密钥/ AEK/ 对/ 新/ 的/ LBK/ 和/ FSK/ 进行/ 加密/ ,/ 写入/ ACB/ 中/ ./ 最后/ 用/ 验证/ 服务器/ 签名/ 密钥/ ASK/ 重新/ 计算/ ACB/ 的/ HMAC/ 值/ ,/ 将/ 更新/ 后/ 的/ ACB/ 、/ 旧/ 的/ LBK/ 和/ FSK/ 、/ 新/ 的/ LBK/ 和/ FSK/ 返回/ 给/ 客户端/ ./ (/ 3/ )/ 客户端/ 用旧/ 的/ LBK/ 将/ 所有/ 的/ 文件/ 块/ 密钥/ FBK/ 解密/ ,/ 并用/ 新/ 的/ LBK/ 对/ 它们/ 进行/ 加密/ ,/ 写入/ smd/ -/ file/ 中/ ./ 再用/ 旧/ 的/ FSK/ 对/ 所有/ 的/ 根/ 哈希/ 进行/ 解密/ ,/ 并用/ 新/ 的/ FSK/ 对根/ 哈希/ 进行/ 加密/ ,/ 写入/ smd/ -/ file/ 中/ ./ 最后/ 将/ 更新/ 后/ 的/ ACB/ 写入/ smd/ -/ file/ 中/ ./ 3.6/ 正确性/ 保证/ 与/ 性能/ 调优本/ 研究/ 在/ Corslet/ 中/ 实现/ 了/ 一套/ 独立/ 的/ 锁/ 机制/ ①/ SSL/ // TLS/ ./ http/ :/ // // tools/ ./ ietf/ ./ org/ // html/ // rfc5246Page7/ (/ 包括/ 文件/ 读写/ 锁/ 和/ 线程/ 互斥/ 锁/ )/ 来/ 实现/ 读写/ 互斥/ ,/ 保证/ 文件/ 数据/ 的/ 一致性/ ./ Corslet/ 支持/ 多线程/ 并发/ 读/ 同一个/ 文件/ ./ 为了/ 提高/ Corslet/ 的/ 性能/ ,/ 本/ 研究/ 使用/ 了/ 缓存/ 机制/ 来/ 降低/ 加解密/ 、/ 完整性/ 校验/ 的/ 开销/ ./ 例如/ 将/ 访问/ 到/ 的/ M/ -/ Tree/ 的/ 前/ 三层/ 结点/ 的/ 明文/ 缓存/ 在/ 内存/ 中/ ,/ 直到/ 需要/ 的/ 时候/ (/ 例如/ 文件/ 关闭/ 时/ )/ 才/ 把/ 它们/ 重新/ 加密/ 写回/ smd/ -/ file/ ,/ 这样/ 可以/ 减少/ 在/ 完整性/ 校验/ 过程/ 中/ 对/ M/ -/ Tree/ 前/ 三层/ 结点/ 多次/ I/ // O/ 访问/ 和/ 加解密/ 的/ 开销/ ./ 相应/ 地/ ,/ 可以/ 为/ 被/ 缓存/ 的/ M/ -/ Tree/ 结点/ 设立/ 一个/ “/ 是否/ 已/ 检查/ 完整性/ ”/ 标记/ ,/ 这样/ 可以/ 避免/ 对/ 缓存/ 的/ M/ -/ Tree/ 结点/ 重复/ 校验/ 完整性/ ./ 如果/ 用户/ 对/ 某/ 一段/ 数据/ 进行/ 重复/ 读写/ ,/ 每次/ 读/ 操作/ 都/ 需要/ 从/ 加密/ 的/ 数据文件/ 中/ 读出/ 对应/ 内容/ ,/ 进行/ 完整性/ 校验/ ,/ 然后/ 从/ 安全/ 元/ 数据/ 中/ 读入/ 相关/ 的/ 文件/ 数据/ 加密/ 密钥/ (/ 密文/ 形式/ )/ ,/ 然后/ 用/ 文件/ 根/ 密钥/ FBK/ 对/ 这些/ 密钥/ 进行/ 解压/ ,/ 再/ 利用/ 这些/ 密钥/ 解密/ 数据文件/ 得到/ 明文/ 数据/ ,/ 写/ 操作/ 也/ 是/ 类似/ 的/ ./ 为了/ 提高/ 性能/ ,/ 本/ 研究/ 在/ Corslet/ 中/ 实现/ 了/ 一套/ 独立/ 的/ 缓存/ 系统/ ,/ 对/ 最近/ 访问/ 的/ 文件/ 块/ 明文/ 进行/ 缓存/ ,/ 这/ 使得/ 以上/ 的/ 步骤/ 都/ 能/ 被/ 省略/ ,/ 减少/ 了/ 不必要/ 的/ I/ // O/ 操作/ 、/ 完整性/ 校验/ 以及/ 加解密/ 开销/ ./ 在/ 具体/ 实现/ 中/ ,/ 本/ 研究/ 使用/ 了/ RadixTree/ [/ 9/ ]/ 来/ 组织/ 文件/ 块/ 缓存/ ,/ 这/ 可以/ 高效/ 地/ 对/ 缓存/ 块/ 进行/ 查找/ 、/ 插入/ 和/ 删除/ ,/ 同时/ 使用/ 了/ LRU/ 链表/ 来/ 管理/ 缓存/ 池/ ,/ 提高/ 缓存/ 的/ 命中率/ ./ 另外/ 还/ 使用/ 了/ 完善/ 的/ 锁/ 机制/ 来/ 保证/ 缓存/ 系统/ 的/ 正确性/ ./ 4/ 功能/ 及/ 性能/ 测试/ 文中/ 对/ Corslet/ 的/ 功能/ 和/ 性能/ 进行/ 了/ 一系列/ 的/ 测试/ ,/ 包括/ 验证/ Corslet/ 在/ 不可/ 信/ 的/ 网络/ 及/ 存储/ 环境/ 下所能/ 提供/ 的/ 安全/ 功能/ ,/ 测出/ 加解密/ 、/ 完整性/ 检验/ 、/ 文件共享/ 与/ 权限/ 撤销/ 等/ 部分/ 的/ 开销/ ,/ 以及/ 使用/ Bonnie/ ++/ ①/ 和/ IOzone/ ②/ 来/ 测试/ Corslet/ 的/ 整体/ 性能/ ./ 4.1/ 功能测试/ 文中/ 用/ 3/ 台/ 服务器/ 对/ Corslet/ 进行/ 了/ 功能测试/ ./ 其中/ 一台/ 服务器/ 作为/ Corslet/ 的/ 验证/ 服务器/ AS/ ,/ 同时/ 也/ 是/ NFSv4/ 的/ 服务器端/ ;/ 另外/ 两台/ 服务器/ 作为/ NFSv4/ 的/ 客户端/ 以及/ Corslet/ 的/ 客户端/ ,/ 分别/ 以/ 用户/ A/ 和/ 用户/ B/ 的/ 身份/ 将/ Corslet/ 挂载/ 在/ NFSv4/ 之上/ ./ 测试/ 内容/ 如表/ 2/ 所示/ ./ 数据/ 私密性/ 保护/ :/ 绕过/ Corslet/ 查看/ 用户/ 文件/ 内容/ 数据完整性/ 保护/ :/ 绕过/ Corslet/ 篡改/ 数据文件/ 或者/ 元/ 数据文件/ 权限/ 管理/ :/ 测试/ 文件/ 的/ 访问者/ 在/ 其/ 被/ 授予/ 读/ // 写/ 权限/ 之前/ ,/ 被/ 授予/ 读/ // 写/ 权限/ 后/ ,/ 以及/ 被/ 撤销/ 权限/ 后/ 对/ 文件/ 进行/ 读/ // 写/ 操作/ 的/ 结果/ 4.2/ 性能/ 测试环境/ 与/ 参数/ 选择/ 性能/ 测试/ 的/ 硬件/ 环境/ 是/ 两台/ 配置/ 相同/ 服务器/ ,/ 型号/ 为/ SunSunFireTMV20z/ ,/ 1.8/ GHz/ 的/ AMD/ 双核/ CPU/ ,/ 4GB/ 内存/ ,/ 两台/ 服务器/ 间/ 以/ 千兆/ 局域网/ 连接/ ,/ 一台/ 做/ 验证/ 服务器/ ,/ 一台/ 做/ 客户端/ ./ 软件/ 环境/ 是/ DebianLinux2/ ./ 6.30/ 内核/ ,/ fuse2/ ./ 8.1/ ,/ openssl0/ ./ 9.8/ k/ ./ 在/ 安全/ 机制/ 的/ 选择/ 上/ ,/ 使用/ 了/ SHA/ -/ 1/ 函数/ 来/ 计算/ 哈希/ ,/ 用/ 基于/ SHA/ -/ 1/ 的/ MAC/ 算法/ HMAC/ 来/ 计算/ MAC/ ,/ AES/ -/ 256/ 系列/ 函数/ 为/ 默认/ 的/ 加解密/ 函数/ ,/ cfb/ 为/ 默认/ 的/ 加密/ 模式/ (/ 用户/ 也/ 可以/ 通过/ 配置文件/ 来/ 选择/ 加密算法/ 和/ 加密/ 模式/ )/ ,/ 用/ X509/ 系列/ 函数/ 来/ 实现/ 身份验证/ ./ 设置/ Corslet/ 文件/ 块/ 大小/ 为/ 64KB/ ,/ 这是/ 由于/ 测试/ 场景/ 以大/ 文件/ 应用/ 为主/ ./ 如果/ 需要/ 将/ Corslet/ 应用/ 在/ 小/ 文件/ 的/ 云/ 存储/ 环境/ 中/ ,/ 也/ 可以/ 很/ 方便/ 地/ 对/ 文件/ 块/ 大小/ 进行/ 调整/ ./ 在/ M/ -/ Tree/ 的/ 结构/ 上/ ,/ 选择/ 了/ M/ -/ Tree/ 的/ 叉/ 数为/ 64/ ,/ 并/ 规定/ 一棵/ M/ -/ Tree/ 高度/ 不/ 超过/ 4/ 层/ ./ 这样/ 的/ 选择/ 是/ 为了/ 在/ M/ -/ Tree/ 的/ 完整性/ 校验/ 时/ 减少/ 磁盘/ I/ // O/ ./ M/ -/ Tree/ 的/ 层数/ 越/ 少/ 需要/ 进行/ 的/ I/ // O/ 操作/ 就/ 越少/ ./ 实际上/ 在/ 具体/ 实现/ 中/ 采用/ 了/ 缓存/ 机制/ 来/ 保证/ 每次/ M/ -/ Tree/ 完整性/ 校验/ 最/ 多只/ 会/ 出现/ 1/ 次/ I/ // O/ 操作/ ./ 另外/ 单个/ 文件/ 最大/ 支持/ 512/ 棵/ M/ -/ Tree/ ,/ 所以/ Corslet/ 最大/ 可以/ 支持/ 大小/ 为/ 8TB/ 的/ 文件/ ./ 4.3/ 加解密/ 开销/ 先/ 创建/ 一个/ 文件/ ,/ 随后/ 以/ 读写/ 模式/ 打开/ 此/ 文件/ ,/ 以/ 每次/ 64KB/ 的/ 粒度/ 写入/ 500MB/ 的/ 内容/ ,/ 再/ 将/ 这/ 500MB/ 的/ 内容/ 读取/ 出来/ ,/ 最后/ 关闭/ 文件/ ./ 表/ 3/ 列出/ 了/ 测试/ 过程/ 中/ 各种/ 文件/ 操作/ 中/ 的/ 加解密/ 开销/ ./ 从表/ 3/ 可以/ 看出/ ,/ 加解密/ 的/ 开销/ 绝大部分/ 都/ 在/ 文件/ 数据/ 的/ 加解密/ 中/ ,/ 另外/ 写/ 操作/ 中/ 的/ “/ 计算/ M/ -/ Tree/ 结点/ 值/ ”/ 与/ 读/ 操作/ 中/ 的/ “/ 验证/ 文件/ 块/ 哈希/ ”/ 也/ 消耗/ 了/ ①/ ②/ Page8/ 文件/ 操作/ 加解密/ 操作/ 总开销/ // ms/ 执行者/ 操作/ 频率/ createOpenClose/ 加密/ M/ -/ TreeWriteRead/ 部分/ 时间/ ,/ 这/ 是/ 两/ 部分/ 属于/ 完整性/ 校验/ 的/ 开销/ ./ 以上/ 开销/ 跟/ 读写/ 内容/ 的/ 大小/ 是/ 成正比/ 的/ ./ 另外/ 还/ 可以/ 看出/ 验证/ 服务器/ AS/ 所/ 参与/ 的/ 操作/ 由于/ 逻辑/ 简单/ ,/ 耗时/ 非常/ 短/ ./ 为了/ 测试/ 文件共享/ 与/ 权限/ 撤销/ 方面/ 的/ 开销/ ,/ 进行/ 了/ 如下/ 测试/ :/ 文件/ A/ 的/ 拥有者/ 先/ 赋予/ 500/ 个/ 不同/ 的/ 用户/ 对/ 文件/ A/ 的/ 只读/ 权限/ ,/ 接着/ 将/ 这/ 500/ 个/ 用户/ 的/ 权限/ 升级/ 为/ 读写/ 权限/ ,/ 最后/ 将/ 他们/ 的/ 权限/ 全部/ 撤销/ ./ 记录/ 了/ 每/ 一步/ 的/ 时间/ 开销/ (/ 从/ 用户/ 开始/ 执行/ 操作/ 到/ 操作/ 完成/ 的/ 用/ 时/ )/ ,/ 如表/ 4/ 所示/ ./ 从表/ 4/ 可以/ 看出/ ,/ 由于/ 文件/ 的/ 共享/ 或者/ 权限/ 升级/ 只/ 需/ 简单/ 地/ 修改/ 文件/ 的/ 访问控制/ 列表/ ACL/ 并/ 重新/ 计算/ ACB/ 的/ HMAC/ 即可/ ,/ 因此/ 速度/ 很快/ ./ 而/ 权限/ 撤销/ 需要/ 重新/ 生成/ LBK/ 和/ FSK/ ,/ 并/ 对/ 已有/ 的/ 文件/ 块/ 密钥/ 以及/ 根/ 哈希/ 链表/ 重新/ 加密/ ,/ 因此/ 相对来说/ 耗时/ 较长/ ,/ 但/ 由于/ 没有/ 立刻/ 对/ 文件/ 块/ 内容/ 进行/ 重新/ 加密/ ,/ 速度/ 还是/ 非常/ 快/ 的/ ./ 4.4/ 文件/ 读写/ 测试/ 4.4/ ./ 1/ 大/ 文件/ 读写/ 测试/ 在/ 与/ 4.2/ 节/ 相同/ 的/ 测试环境/ 下/ ,/ 使用/ Bonnie/ ++/ 1.03/ e/ 对/ Ext3/ 和/ Corslet/ 进行/ 了/ 测试/ ./ 先/ 在/ 客户端/ 的/ 本地/ 文件系统/ Ext3/ 上/ 运行/ Bonnie/ ++/ 测试/ 性能/ ,/ 然后/ 将/ Corslet/ 架/ 在/ Ext3/ 上/ ,/ 再/ 运行/ Bonnie/ ++/ 测试/ Corslet/ 的/ 性能/ ./ 测试/ 结果/ 如图/ 4/ 所示/ ./ 由图/ 4/ 可以/ 看出/ ,/ Corslet/ 与/ Ext3/ 相比/ ,/ 文件/ 块/ 粒度/ 的/ 读写操作/ 性能/ 分别/ 下降/ 了/ 31.3/ %/ 和/ 17.4/ %/ ,/ 主要/ 原因/ 是/ 文件/ 内容/ 加解密/ 引入/ 的/ 开销/ ./ 而/ 字节/ 粒度/ 的/ 读写/ 性能/ 分别/ 下降/ 了/ 53.6/ %/ 和/ 55.6/ %/ ./ 字节/ 粒度/ 的/ 读写/ 性能/ 下降/ 更/ 严重/ 的/ 原因/ 是/ 每次/ 的/ 读写操作/ ,/ Corslet/ 都/ 需要/ 检验/ 完整性/ ,/ 包括/ 访问/ 涉及/ 到/ 的/ 文件/ 块/ 的/ 完整性/ ,/ 以及/ M/ -/ Tree/ 的/ 完整性/ ./ 又/ 由于/ 在/ 实现/ 中/ Corslet/ 选择/ 了/ 64KB/ 作为/ 文件/ 块/ 大小/ ,/ 哪怕/ 是/ 访问/ 文件/ 块/ 中/ 的/ 一个/ 字节/ ,/ 也/ 需要/ 对/ 整个/ 文件/ 块/ 的/ 内容/ 计算/ 哈希/ 来/ 检验/ 完整性/ ,/ 因此/ 字节/ 粒度/ 的/ 读写/ 会/ 引入/ 更/ 多/ 的/ 完整性/ 校验/ 开销/ ./ 接着/ 在/ NFSv4/ 环境/ 下/ 对/ Corslet/ 进行/ 了/ 测试/ ,/ 仍然/ 采用/ 了/ 相同/ 的/ 测试环境/ ,/ 使用/ Bonnie/ ++/ 来/ 测试/ ./ 两台/ 服务器/ ,/ 其中/ 一台/ 做/ 验证/ 服务器/ AS/ ,/ 同时/ 也/ 作为/ NFSv4/ 服务器/ 提供/ 存储/ 服务/ ./ 另一台/ 服务器/ 既/ 是/ NFSv4/ 客户端/ ,/ 也/ 是/ Corslet/ 客户端/ (/ 将/ Corslet/ 挂载/ 在/ NFSv4/ 之上/ )/ ./ 先后/ 在/ Corslet/ 挂载/ 点/ 和/ NFSv4/ 挂载/ 点上/ 运行/ Bonnie/ ++/ 进行/ 测试/ ,/ 测试/ 结果/ 如图/ 5/ 所示/ ./ 对比/ 图/ 4/ 和/ 图/ 5/ 可以/ 发现/ ,/ NFSv4/ 和/ Ext3/ 相比/ ,/ 写/ 性能/ 略降/ 了/ 10/ %/ 左右/ ,/ 但读/ 性能/ 下降/ 了/ 40/ %/ 以上/ ,/ 这/ 主要/ 是/ 由/ NFSv4/ 引入/ 的/ 网络/ 开销/ 和/ 协议/ 开销/ 导致/ 的/ ./ 而/ Corslet/ 的/ 性能/ 变化/ 很小/ ,/ 只有/ 略微/ 下降/ ,/ 这/ 是因为/ Corslet/ 引入/ 的/ 文件/ 内容/ 加解密/ 和/ 完整性/ 校验/ 等/ 开销/ ,/ 是/ 性能/ 下降/ 的/ 主要/ 原因/ ./ 由于/ 这些/ Page9/ 操作/ 是/ 计算/ 密集型/ 的/ ,/ CPU/ 的/ 性能/ 会/ 成为/ 瓶颈/ ,/ 因此/ NFSv4/ 虽然/ 削弱/ 了/ 底层/ 存储/ 的/ I/ // O/ 能力/ ,/ 但/ 并/ 没有/ 削弱/ 到/ 使/ 其/ 成为/ 瓶颈/ 的/ 程度/ ,/ 也就是说/ CPU/ 的/ 性能/ 依然/ 是/ 瓶颈/ ./ 所以/ Corslet/ 的/ 性能/ 只有/ 略微/ 的/ 下降/ ./ 由此/ 推测/ ,/ 在/ 云/ 存储/ 环境/ 下/ ,/ 随着/ 用户/ 的/ 增多/ ,/ 也/ 就/ 意味着/ 客户端/ 的/ 增多/ ,/ 计算能力/ 的/ 增强/ ,/ 计算/ 部分/ 将/ 不再/ 成为/ 瓶颈/ ,/ Corslet/ 的/ 性能/ 开销/ 会/ 越来越/ 不/ 明显/ ./ 为了/ 验证/ 该/ 想法/ ,/ 对/ Corslet/ 进行/ 了/ 集群/ 测试/ ./ 在/ 集群/ 测试/ 中/ ,/ 硬件/ 环境/ 采用/ 了/ 5/ 台/ 配置/ 相同/ 的/ 服务器/ ,/ 型号/ 是/ DellPowerEdgeTMM605/ ,/ 服务器/ 拥有/ 两个/ 2.8/ GHz/ 的/ AMD/ 四核/ CPU/ ,/ 8GB/ 内存/ ./ 软件/ 环境/ 与/ 配置/ 和/ 之前/ 的/ 测试/ 相同/ ./ 测试/ 文件/ 的/ 大小/ 选择/ 为/ 16GB/ ./ 这/ 5/ 台/ 服务器/ 中/ ,/ 有/ 1/ 台/ 作为/ NFSv4/ 的/ 服务器/ ,/ 将/ 本地/ 磁盘/ 的/ 一个/ Ext3/ 分区/ 导出/ ,/ 对外/ 提供/ 存储/ 服务/ ,/ 1/ 台/ 作为/ 验证/ 服务器/ ,/ 其余/ 3/ 台/ 作为/ 客户端/ ,/ 均/ 挂载/ 了/ NFSv4/ ,/ 并/ 在/ 其/ 上/ 挂载/ Corslet/ ./ 这次/ 采用/ 了/ IOzone3/ ./ 347/ 进行/ 测试/ ,/ 因为/ IOzone/ 具有/ 集群/ 测试/ 功能/ ./ 先/ 让/ 3/ 台/ 客户端/ 同时/ 在/ 本机/ 的/ NFSv4/ 挂载/ 点上/ 进行/ IOzone/ 集群/ 测试/ ,/ 然后/ 类似/ 地/ 改为/ 在/ Corslet/ 挂载/ 点上/ ,/ 得到/ 的/ 结果/ 如图/ 6/ 所示/ ./ 由图/ 6/ 可以/ 看出/ ,/ Corslet/ 架/ 在/ NFSv4/ 之上/ 的/ 聚合/ 访问速度/ 达到/ 了/ NFSv4/ 的/ 95/ %/ 以上/ ,/ 且/ 达到/ 了/ 单块/ 磁盘/ 的/ 性能/ 极限/ ./ 由此可见/ 当/ 客户端/ 增多/ 时/ ,/ 存储/ 服务/ 成为/ 了/ 瓶颈/ ,/ Corslet/ 引入/ 的/ 计算/ 开销/ 就/ 很/ 不/ 明显/ 了/ ./ 实验/ 结果表明/ ,/ 在/ 云/ 存储/ 环境/ 中/ ,/ Corslet/ 将/ 能/ 得到/ 很/ 好/ 的/ 应用/ ./ 4.4/ ./ 2/ 大批量/ 小/ 文件/ 读写/ 测试/ 针对实际/ 环境/ 中/ 所/ 存在/ 对/ 大规模/ 小/ 文件/ 操作/ 需求/ ,/ 分别/ 测试/ 了/ Corslet/ 和/ NFS/ 在/ 网络/ 环境/ 下/ 对/ 大规模/ 小/ 文件/ 操作/ 的/ 性能/ 对比/ ./ 该/ 测试/ 选用/ 了/ 3/ 台/ 服务器/ 分别/ 作为/ 云/ 存储/ 的/ 文件/ 服务器/ 、/ 认证/ 服务器/ 和/ 客户端/ ,/ 其/ 硬件/ 环境/ 和/ 软件/ 环境/ 与/ 配置/ 和/ 之前/ 所/ 测试/ IOzone/ 的/ 服务器/ 相同/ ./ 在/ 对/ NFS/ 和/ Corslet/ 测试/ 的/ 过程/ 中/ ,/ 客户端/ 分别/ 在/ 相应/ 的/ 挂载/ 点下/ 对/ 1000/ 个/ 小/ 文件/ 进行/ 创建/ 、/ 写/ 操作/ 和/ 读/ 操作/ ,/ 其中/ 每个/ 文件/ 的/ 大小/ 设置/ 为/ 512KB/ ./ 测试/ 的/ 结果/ 如图/ 7/ 所示/ ./ 由图/ 7/ 可以/ 看出/ ,/ Corslet/ 系统/ 和/ NFSv4/ 相比/ ,/ 小/ 文件/ 的/ 读写操作/ 性能/ 分别/ 下降/ 了/ 50.7/ %/ 和/ 43.1/ %/ ,/ 这/ 是因为/ Corslet/ 在/ 每次/ 访问/ 数据文件/ 的/ 同时/ ,/ 还/ 需要/ 访问/ 安全/ 元/ 数据文件/ ./ 在/ 处理/ 小/ 文件/ 时/ ,/ 处理/ 安全/ 元/ 数据/ 所/ 占/ 的/ 时间/ 比例/ 比大/ 文件/ 所/ 占/ 的/ 比例/ 要/ 大/ ,/ 从而/ 导致/ Corslet/ 的/ 小/ 文件/ 处理/ 性能/ 不如/ 大/ 文件/ ./ 在/ 实际/ 访问/ 中/ ,/ 为了/ 优化/ 性能/ ,/ Corslet/ 提供/ 了/ 缓存/ 机制/ ,/ 能够/ 在/ 很大/ 程度/ 上/ 改善/ 小/ 文件/ 读写/ 的/ 性能/ ./ 例如/ ,/ 当/ Corslet/ 系统/ 再次/ 访问/ 某个/ 文件/ 时/ ,/ 由于/ 其/ 内容/ 已/ 在/ 内存/ 中/ ,/ 因此/ 访问速度/ 会/ 大大的/ 提升/ ./ 5/ 相关/ 工作/ 本文/ 工作/ 与/ 相关/ 研究/ 工作/ 的/ 对/ 比如/ 表/ 5/ ./ 其中/ :/ CFS/ [/ 10/ ]/ 是/ 最早/ 的/ 加密/ 文件系统/ 之一/ ./ CFS/ 是/ 一个/ 虚拟/ 的/ 加密/ 文件系统/ ,/ 在/ 把/ 数据/ 写/ 到/ 磁盘/ 之前/ ,/ 对/ 文件名/ 和/ 文件/ 数据/ 进行/ 加密/ ./ CFS/ 用/ 一个/ 密钥/ 来/ 加解密/ 整个/ 目录/ 中/ 的/ 文件/ ./ 访问控制/ 则/ 是/ 通过/ 把/ 密钥/ 共享/ 给/ 其他/ 用户/ ,/ 这/ 决定/ 了/ CFS/ 只/ 允许/ 在/ 一台/ 机器/ 上/ 进行/ 粗粒度/ 的/ 共享/ ,/ 并且/ 不/ 区分/ 读/ 权限/ 和/ 读写/ 权限/ ./ Cryptfs/ [/ 11/ ]/ 、/ ECFS/ ①/ 、/ Cepheus/ [/ 6/ ]/ 和/ TCFS/ [/ 12/ ]/ 都/ 是/ CFS/ 的/ 著名/ 变种/ ./ Cryptfs/ 赋予/ 文件/ 组/ 对称/ 密钥/ ,/ 允许/ 组/ 文件共享/ ./ Cepheus/ 则/ 引入/ 了/ 锁/ 盒子/ 来/ 实现/ 用户组/ 间/ 的/ 共享/ 管理/ ,/ 依赖/ 一个/ 可信/ 的/ 密钥/ 服务器/ 来/ 存储用户/ 组成员/ 信息/ 来/ 进行/ 身份/ 认证/ ,/ 同时/ 依赖/ 存储/ 服务器/ 实现/ 访问控制/ ,/ 它/ 是/ 第一个/ 提出/ 懒惰/ 权/ ①/ BindelD/ ,/ ChewM/ ,/ WellsC/ ./ ExtendedcryptographicfilePage10/ 表/ 5/ 加密/ 文件系统/ 相关/ 工作/ 对比/ 在/ 扩展/ 属性/ 中/ FARSITE/ [/ 14/ ]/ 文件/ 块/ 明文/ RTP/ -/ NFSv4/ [/ 15/ ]/ 文件/ 块/ 随机/ 公私/ 钥无/ 文件/ 密钥/ 用/ 用户/ 主/ 密钥/ 加密/ 后存/ CRUST/ [/ 8/ ]/ 文件/ 块/ 随机/ 对称/ 密钥/ MerkleTahoe/ [/ 16/ ]/ 文件/ 特殊/ SiRiUS/ [/ 17/ ]/ 文件/ 特殊/ Plutus/ [/ 4/ ]/ 文件/ 块/ 随机/ 公私/ 钥/ MerkleCorslet/ 文件/ 块/ 明文/ 用户/ 使/ 之/ 能算出/ 文件/ 密钥/ 限/ 撤销/ 的/ 安全/ 文件系统/ ./ ECFS/ 和/ Cepheus/ 都/ 实现/ 了/ 完整性/ 保护/ ./ TCFS/ 为/ 每个/ 用户/ 颁发/ 一个/ 主/ 密钥/ 来/ 保护/ 该/ 用户/ 的/ 文件/ 的/ 密钥/ ./ 这/ 4/ 个/ 文件系统/ 都/ 不能/ 区分/ 读/ 共享/ 和/ 读写/ 共享/ ./ NCryptfs/ [/ 13/ ]/ 是/ 一个/ 在/ 内核/ 态/ 实现/ 的/ 安全/ 文件系统/ ,/ 可以/ 支持/ 一台/ 机器/ 上/ 的/ 多用户/ 文件共享/ ,/ 但是/ 无法/ 支持/ 大规模/ 的/ 文件共享/ ./ Tahoe/ [/ 14/ ]/ 是/ 一个/ 分布式/ 安全/ 文件系统/ ,/ 包括/ 访问控制/ 、/ 加密/ 、/ 完整性检查/ 等/ 功能/ ,/ 以及/ 采用/ 了/ 纠/ 删码/ 来/ 实现/ 容错/ ./ 它/ 被/ 部署/ 在/ 一个/ 商业/ 的/ 备份/ 服务/ 中/ ./ Round/ -/ TripPrivacywithNFSv4/ [/ 15/ ]/ 是/ 在/ NFSv4/ 上/ 的/ 一个/ 改进/ ,/ 修改/ 了/ NFSv4/ 中/ 的/ RPCSEC/ _/ GSS/ 协议/ ,/ 使得/ 文件/ 服务器/ 上/ 的/ 文件/ 以/ 密文/ 方式/ 存放/ ./ 但/ RTP/ -/ NFSv4/ 并/ 没有/ 对/ 文件/ 进行/ 完整性/ 保护/ ,/ 密钥/ 机制/ 过于/ 简单/ ./ Farsite/ [/ 16/ ]/ 是/ 一个/ 安全/ 文件系统/ ,/ 提供/ 一个/ 集中式/ 的/ 文件/ 服务器/ 功能/ ,/ 但/ 实际上/ 是/ 由/ 多台/ 分布式/ 的/ 不可/ 信/ 计算机/ 组成/ ./ Farsite/ 通过/ 多/ 副本/ 机制/ 提供/ 文件/ 可用性/ 和/ 可靠性/ ,/ 通过/ 加密/ 来/ 保证/ 文件/ 内容/ 保密性/ ,/ 通过/ 一个/ 能/ 防止/ 拜占庭/ 错误/ 的/ 协议/ 来/ 保证/ 文件/ 和/ 目录/ 数据/ 的/ 完整性/ ./ Tahoe/ 、/ RTP/ -/ NFSv4/ 、/ Farsite/ 三者/ 的/ 访问/ 权限/ 控制/ 机制/ 对/ 大量/ 用户/ 的/ 频繁/ 文件共享/ 与/ 权限/ 撤销/ 支持/ 得/ 不好/ ./ CryptosFS/ [/ 17/ ]/ 和/ SNAD/ [/ 18/ ]/ 都/ 使用/ 了/ 公私/ 钥/ 加密/ 体系/ 来/ 实现/ 访问控制/ ,/ 并且/ 通过/ 文件/ 服务器/ 来/ 验证/ 用户/ 的/ 访问/ 权限/ ,/ 因此/ 需要/ 完全/ 信任/ 文件/ 服务器/ ./ CryptosFS/ 的/ 用户/ 需要/ 使用/ 非对称/ 密钥/ 从/ 安全/ 元/ 数据文件/ 中/ 解密/ 出/ 相应/ 的/ 对称/ 密钥/ ,/ 再用/ 这些/ 对称/ 密钥/ 去/ 解密/ 数据文件/ ,/ 因此/ 它/ 的/ 密钥/ 管理机制/ 是/ 带外/ 的/ ./ SiRiUS/ [/ 19/ ]/ 是/ 一个/ 栈式/ 文件系统/ ,/ 为/ 已有/ 的/ 文件系统/ 提供/ 安全/ 机制/ ./ SiRiUS/ 使用/ 了/ 大量/ 的/ 非对称/ 密钥/ 进行/ 权限/ 控制/ ,/ 还/ 需要/ 一个/ 专门/ 的/ 公私/ 钥/ 服务器/ ./ 在/ SiRiUS/ 中/ ,/ 文件/ 是/ 整个/ 被/ 加解密/ 的/ ,/ 完整性/ 校验/ 也/ 是/ 对/ 整个/ 文件/ 计算/ 哈希/ 的/ ,/ 权限/ 撤销/ 时/ 马上/ 重新/ 加密/ ,/ 性能/ 开销/ 较大/ ./ Plutus/ [/ 4/ ]/ 同样/ 使用/ 了/ 公私/ 钥/ 加密/ 体系/ ,/ 提供/ 了/ 组/ 共享/ 和/ 懒惰/ 撤销/ 、/ 随机/ 访问/ 、/ 文件名/ 加密/ 等/ 功能/ ./ Plutus/ 采用/ 了/ 用户/ 间/ 共享/ 文件/ 密钥/ 的/ 密钥/ 管理机制/ ,/ 当/ 其他/ 用户/ 想/ 访问/ 文件/ 时/ ,/ 需要/ 向/ 文件/ 拥有者/ 索要/ 密钥/ ,/ 这种/ 机制/ 要求/ 文件/ 拥有者/ 实时/ 在线/ ./ CRUST/ [/ 8/ ]/ 和/ SiRiUS/ 一样/ ,/ 也/ 是/ 一个/ 栈式/ 文件系统/ ,/ 但/ 它/ 没有/ 使用/ 公私/ 钥/ 加密/ 体系/ ,/ 所有/ 的/ 加解密/ 都/ 使用/ 了/ 对称/ 密钥/ ./ CRUST/ 依赖/ 一些/ 公共/ 的/ 数据结构/ 来/ 实现/ 分布式/ 密钥/ 管理/ 、/ 密钥/ 回滚/ 和/ 权限/ 撤销/ 等等/ ,/ 这会/ 导致/ 随着/ 用户数/ 增多/ ,/ 需要/ 维护/ 的/ 信息/ 将/ 以/ 平方/ 级/ 增长/ ,/ 不/ 适合/ 在/ 用户数/ 较/ 多/ 的/ 环境/ 下/ 使用/ ./ CRUST/ 和/ Plutus/ 都/ 使用/ 了/ MerkleTree/ [/ 7/ ]/ 来/ 保证/ 文件/ 完整性/ ./ 与/ 以上/ 工作/ 相比/ ,/ Corslet/ 具有/ 较/ 明显/ 的/ 优势/ ./ Corslet/ 是/ 一个/ 具有/ 栈式/ 加密/ 文件系统/ 的/ 安全/ 云/ 存储系统/ ,/ 可以/ 架/ 在/ 已有/ 文件系统/ 之上/ ./ Corslet/ 有/ 一套/ 自己/ 的/ 权限/ 控制/ 机制/ ,/ 不/ 依赖于/ 云/ 存储/ 服务器/ ./ 除/ X509/ 身份/ 认证/ 外/ ,/ Corslet/ 中/ 涉及/ 到/ 的/ 所有/ 加解密/ 均/ 使用/ 了/ 对称/ 密钥/ ,/ 与/ 公私/ 钥/ 加密/ 体系/ 比/ 起来/ 开销/ 更/ 小/ ./ Corslet/ 对/ 文件/ 分块/ 加解密/ ,/ 使用/ 了/ 层级/ 密钥/ 管理机制/ 和/ 带/ 内/ 的/ 密钥/ 分发/ 机制/ ,/ 用户/ 无需/ 维护/ 任何/ 密钥/ 信息/ ,/ 使得/ 密钥/ 管理/ 更加/ 安全/ 高效/ ./ Corslet/ 采用/ 了/ 比/ 已有/ 实现/ 更/ 高效/ 的/ 懒惰/ 权限/ 撤销/ 机制/ ,/ 无需/ 存储/ 密钥/ 历史/ 信息/ ,/ 节省/ 了/ 时间/ 和/ 空间/ 上/ 的/ 开销/ ./ Page11Corslet/ 采用/ 了/ 改进/ 后/ 的/ MerkleHashTree/ 和/ 缓存/ 机制/ ,/ 使/ 完整性检查/ 更加/ 快速/ ,/ 并/ 为/ 并发/ 写/ 提供/ 可能/ ./ 6/ 总结/ 文中/ 介绍/ 了/ 一种/ 新/ 的/ 安全/ 云/ 存储系统/ 架构/ ,/ 确保/ 用户/ 在/ 不可/ 信/ 的/ 网络/ 环境/ 和/ 云/ 存储/ 环境/ 下/ 得到/ 数据/ 的/ 安全/ ./ 通过/ 引入/ 可信/ 的/ 验证/ 服务器/ ,/ 这套/ 系统/ 架构/ 消除/ 了/ 对/ 云/ 存储/ 服务器/ 的/ 依赖/ ,/ 非常适合/ 越来越/ 流行/ 的/ 云/ 存储/ 应用/ 场景/ ,/ 同时/ ,/ 验证/ 服务器/ 因为/ 逻辑/ 简单/ 而/ 具备/ 较/ 高/ 的/ 可扩展性/ ./ 本文/ 提出/ 的/ 安全/ 云/ 存储系统/ Corslet/ ,/ 为/ 已有/ 的/ 云/ 存储/ 环境/ 下/ 的/ 用户/ 提供/ 安全/ 保护/ ,/ 包括/ 私密性/ 保护/ 、/ 完整性/ 保护/ 以及/ 文件/ 访问控制/ 等/ ./ 同时/ ,/ Corslet/ 较/ 好/ 地/ 支持/ 了/ 随机/ 访问/ 与/ 并发/ 访问/ ./ 对/ Corslet/ 的/ 性能/ 测试/ 结果表明/ Corslet/ 挂载/ 在/ NFSv4/ 集群/ 之上/ 带来/ 的/ 性能/ 下降/ 不足/ 5/ %/ ,/ 由此可见/ ,/ Corslet/ 在/ 提供/ 强大/ 的/ 安全性/ 保护/ 的/ 同时/ ,/ 所/ 带来/ 的/ 额外/ 性能/ 开销/ 是/ 可以/ 接受/ 的/ ./ 

