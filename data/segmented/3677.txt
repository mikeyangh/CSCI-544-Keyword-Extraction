Page1/ 基于/ 固态/ 硬盘/ 内部/ 并行/ 的/ 数据库/ 表/ 扫描/ 与/ 聚集/ 范玉雷赖/ 文豫/ 孟小峰/ (/ 中国人民大学/ 信息/ 学院/ 北京/ 100872/ )/ 摘要/ 随着/ 基于/ 闪存/ 的/ 固态/ 硬盘/ 在/ 个人/ 计算机/ 和/ 企业/ 服务器/ 上/ 的/ 广泛应用/ ,/ 固态/ 硬盘/ 受到/ 学术界/ 和/ 工业界/ 越来越/ 多/ 的/ 关注/ ./ 除了/ 具有/ 闪存/ 存储器/ 的/ 优良/ 特性/ 之外/ ,/ 固态/ 硬盘/ 内部/ 还/ 具有/ 丰富/ 的/ 并行/ 特性/ ./ 传统/ 数据库系统/ 的/ 物理/ 操作/ 表/ 扫描/ 和/ 上层/ 聚集/ 操作/ 是/ 针对/ 磁盘/ 的/ 机械/ 特性/ 和/ 对称/ 读写/ 特性/ 而/ 设计/ 的/ ,/ 并/ 不能/ 发挥/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 的/ 优势/ ./ 文中/ 首先/ 将/ 固态/ 硬盘/ 作为/ 一个/ 黑盒/ 进行/ 探测/ 以/ 了解/ 其/ 内部/ 的/ 并行/ 特性/ ./ 在/ 此基础/ 上/ ,/ 对/ 传统/ 数据库/ 表/ 扫描/ 操作/ 进行/ 相应/ 的/ 改进/ ,/ 提出/ 一种/ 并行/ 表/ 扫描/ 模型/ ParaSSDScan/ 以/ 充分利用/ 固态/ 硬盘/ 内部/ 丰富/ 的/ 并行/ 特性/ ./ 其次/ ,/ 基于/ 并行/ 表/ 扫描/ 模型/ ,/ 文中/ 还/ 提出/ 一种/ 高效/ 的/ 并行/ 聚集/ 操作/ 模型/ ParaSSDAggr/ ,/ 并/ 利用/ 该/ 聚集/ 操作/ 模型/ 实现/ 几种/ 常见/ 聚集/ 操作/ ./ 最后/ ,/ 通过/ 实验/ 表明/ 并行/ 表/ 扫描/ 和/ 并行/ 聚集/ 操作/ 的/ 性能/ 较之/ 传统/ 数据库/ 表/ 扫描/ 和/ 聚集/ 操作/ 的/ 性能/ 分别/ 提高/ 了/ 3/ 倍/ 和/ 4/ 倍/ ,/ 同时/ 实验/ 结果/ 还/ 表明/ 并行/ 聚集/ 操作/ 对/ 内存/ 的/ 需求/ 不大/ ./ 并行/ 表/ 扫描/ 和/ 并行/ 聚集/ 操作/ 大大提高/ 了/ 表/ 扫描/ 和/ 聚集/ 操作/ 的/ 性能/ ,/ 充分说明/ 了/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 的/ 优越性/ ./ 关键词/ 固态/ 硬盘/ ;/ 闪存/ 数据库/ ;/ 并行/ 表/ 扫描/ ;/ 并行/ 聚集/ 1/ 引言/ 随着/ 闪存/ 技术/ 的/ 飞速发展/ ,/ 闪存/ 设备/ 凭借/ 其/ 小巧/ 轻便/ 、/ 抗震/ 、/ 耐高/ // 低温/ 、/ 耗电量/ 小/ 、/ 读写/ 速度/ 快/ 等/ 优良/ 特性/ 在/ 各种/ 场景/ 中/ 都/ 得到/ 极大/ 的/ 发展/ 与/ 应用/ ,/ 小到/ 传感器/ ,/ 大到/ 服务器/ 都/ 能/ 看到/ 它/ 的/ 影子/ ./ 近几年/ ,/ 固态/ 硬盘/ 作为/ 一种/ 大容量/ 、/ 非易失/ 、/ 可/ 替代/ 磁盘/ 的/ 闪存/ 设备/ ,/ 受到/ 了/ 学术界/ 和/ 工业界/ 的/ 热烈/ 追捧/ ./ 固态/ 硬盘/ 是/ 一种/ 由/ 闪存/ 存储器/ 、/ 闪存/ 转换/ 层/ 和/ 控制器/ 组成/ 的/ 块/ 设备/ [/ 1/ ]/ ,/ 因此/ 固态/ 硬盘/ 具有/ 很多/ 闪存/ 存储器/ 的/ 优良/ 特性/ ./ 随着/ 固态/ 硬盘/ 技术/ 的/ 发展/ ,/ 固态/ 硬盘/ 在/ 个人/ 计算机/ 和/ 企业/ 服务器/ 上/ 都/ 得到/ 了/ 广泛应用/ ./ 在/ 个人/ 计算机/ 中/ 固态/ 硬盘/ 可以/ 作为/ 二级/ 存储设备/ 部分/ 或者/ 完全/ 替代/ 传统/ 磁盘/ ,/ 比如/ 苹果/ 笔记本/ MacBookAir/ 以及/ 一些/ 超级/ 本中/ ./ 在/ 企业/ 服务器/ 领域/ ,/ 固态/ 硬盘/ 可以/ 作为/ 磁盘/ 的/ 缓冲区/ ,/ 例如/ 微软/ 在/ 多/ 人/ 在线/ 游戏/ 和/ 数据/ 去/ 重/ 等/ 系统/ 中均/ 使用/ 固态/ 硬盘/ 作为/ 磁盘/ 的/ 写/ 缓冲/ [/ 2/ -/ 4/ ]/ ,/ 从而/ 大大提高/ 了/ 系统/ 的/ 处理/ 能力/ ./ 此外/ ,/ 固态/ 硬盘/ 还/ 可/ 和/ 磁盘/ 一起/ 做/ 二级/ 存储设备/ [/ 5/ ]/ ./ 除了/ 具有/ 闪存/ 存储器/ 的/ 优势/ 之外/ ,/ 固态/ 硬盘/ 还/ 具有/ 丰富/ 的/ 内部/ 并行/ 特性/ [/ 6/ ]/ ./ 固态/ 硬盘/ 内部/ 并行/ 特性/ 使得/ 存储设备/ 支持/ 并行处理/ 成为/ 可能/ ,/ 而/ 磁盘/ 的/ 请求/ 处理/ 主要/ 是/ 通过/ 磁盘/ 关键/ 组件/ 磁头/ 来/ 完成/ ,/ 磁头/ 同一/ 时刻/ 只能/ 为/ 一个/ 请求/ 进行/ 寻/ 道/ 、/ 定位/ 和/ 读取数据/ ,/ 不能/ 支持/ 存储设备/ 上/ 的/ 并行处理/ ./ 传统/ 数据库/ 是/ 根据/ 磁盘/ 的/ 机械运动/ 和/ 读写/ 对称/ 等/ 特性/ 而/ 设计/ ,/ 所以/ 直接/ 把/ 传统/ 数据库/ 移植/ 到/ 固态/ 硬盘/ 之上/ ,/ 很难/ 充分发挥/ 固态/ 硬盘/ 的/ 优势/ ,/ 尤其/ 是/ 固态/ 硬盘/ 内部/ 丰富/ 的/ 并行/ 特性/ ./ 扫描/ 操作/ 是/ 数据库系统/ 中/ 一个/ 最/ 基本/ 的/ 物理/ 操作/ ./ 扫描/ 操作/ 分为/ 两类/ [/ 7/ ]/ :/ 表/ 扫描/ 和/ 索引/ 扫描/ ./ 针对/ 磁盘/ 机械/ 特性/ 设计/ 的/ 表/ 扫描/ 从/ 磁盘/ 上/ 一块/ 接/ 一块/ 的/ 读取/ 指定/ 表/ 的/ 数据/ [/ 7/ ]/ ./ 数据库系统/ 提供/ 的/ 部分/ 查询处理/ 过程/ 被/ 转化/ 为/ 底层/ 的/ 表/ 扫描/ 这个/ 物理/ 操作/ [/ 7/ ]/ ,/ 例如/ 排序/ 、/ 聚集/ 和/ 连接/ ,/ 因为/ 它们/ 都/ 需要/ 读取/ 整个/ 表/ 的/ 数据/ 块/ ,/ 所以/ 物理/ 操作/ 表/ 扫描/ 对/ 查询处理/ 有着/ 重要/ 影响/ ./ 聚集/ 操作/ [/ 7/ ]/ 主要/ 有/ 求和/ 、/ 求/ 最大/ // 最小/ 、/ 计数/ 和/ 求/ 平均值/ 等/ ,/ 在/ OLTP/ 系统/ 和/ OLAP/ 系统/ 中/ 都/ 有着/ 十分/ 重要/ 的/ 作用/ ./ 本文/ 针对/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 设计/ 高效/ 的/ 物理/ 操作/ 表/ 扫描/ 和/ 聚集/ 操作/ 模型/ ,/ 并且/ 利用/ 该/ 模型/ 实现/ 求和/ 、/ 求/ 平均值/ 、/ 计数/ 和/ 求/ 最大/ // 最小/ ./ 总体/ 来说/ ,/ 本文/ 的/ 主要/ 贡献/ 如下/ :/ (/ 1/ )/ 通过/ 测试/ 研究/ 了/ 不同/ 厂家/ 不同/ 型号/ 固态/ 硬盘/ 的/ 内部/ 并行/ 特性/ ./ (/ 2/ )/ 设计/ 高效/ 的/ 物理/ 操作/ 表/ 扫描/ 模型/ ParaSSD/ -/ Scan/ ,/ 使/ 其/ 充分利用/ 固态/ 硬盘/ 内部/ 并行/ 特性/ ,/ 从而/ 大大提高/ 表/ 扫描/ 性能/ ./ (/ 3/ )/ 针对/ ParaSSDScan/ 设计/ 高效/ 的/ 聚集/ 操作/ 模型/ ParaSSDAggr/ ,/ 使/ 其/ 充分利用/ 固态/ 硬盘/ 内部/ 并行/ 特性/ ,/ 并/ 基于/ 该/ 模型/ 实现/ 了/ 几种/ 聚集/ 操作/ ./ 本文/ 第/ 2/ 节/ 介绍/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 、/ 问题/ 描述/ 和/ 相关/ 工作/ ;/ 第/ 3/ 节/ 主要/ 从/ 测试/ 角度/ 分析/ 固态/ 硬盘/ 内部/ 并行/ 特性/ ;/ 第/ 4/ 节/ 提出/ 一种/ 新/ 的/ 基于/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 的/ 扫描/ 操作/ 模型/ ;/ 第/ 5/ 节/ 描述/ 基于/ 并行/ 表/ 扫描/ 操作/ 的/ 聚集/ 操作/ 模型/ 以及/ 一些/ 聚集/ 操作/ 的/ 实现/ ;/ 第/ 6/ 节/ 通过/ 实验/ 对比/ 分析/ 阐述/ 基于/ 固态/ 硬盘/ 并行/ 特性/ 的/ 表/ 扫描/ 操作/ 和/ 聚集/ 操作/ 的/ 性能/ 优势/ ;/ 最后/ ,/ 总结/ 本文/ ./ 2/ 问题/ 定义/ 及/ 相关/ 工作/ 固态/ 硬盘/ 具有/ 磁盘/ 所/ 不/ 具有/ 的/ 丰富/ 的/ 内部/ 并行/ 特性/ ,/ 然而/ 传统/ 数据库/ 却/ 不能/ 充分发挥/ 固态/ 硬盘/ 的/ 这种/ 特性/ ,/ 因此/ 越来越/ 多/ 的/ 研究者/ 开始/ 关注/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 在/ 数据库/ 中/ 的/ 应用/ ./ 2.1/ 固态/ 硬盘/ 结构/ 和/ 内部/ 并行/ 结构/ 相对/ 于/ 磁盘/ 的/ 盘片/ 和/ 磁头/ 等/ 机械/ 构造/ ,/ 固态/ 硬盘/ 没有/ 机械/ 组件/ ,/ 主要/ 由/ 接口/ 逻辑/ 、/ 内置/ 缓冲区/ 、/ 控制器/ 和/ 闪存/ 存储器/ 组成/ [/ 8/ ]/ ,/ 如图/ 1/ 所示/ ./ 接口/ 逻辑/ 把/ 闪存/ 存储器/ 封装/ 成类/ 磁盘/ 的/ 块/ 设备/ ./ 内置/ 缓冲区/ 的/ 作用/ 主要/ 有/ 两个/ :/ (/ 1/ )/ 缓冲/ 逻辑/ 地址/ 和/ 物理地址/ 之间/ 的/ 映射/ 信息/ ;/ (/ 2/ )/ 缓冲/ 用户/ 读写/ 数据/ ./ 内置/ 缓冲区/ 可以/ 使用/ DRAM/ ,/ 但是/ 掉电/ 会/ 丢失/ 数据/ ./ 为了/ 防止/ 掉电/ 时/ 丢失/ 数据/ ,/ 一般/ 都/ 会/ 采用/ 非易失/ Page3/ 存储器/ 或者/ 带电池/ 的/ DRAM/ [/ 9/ ]/ 作为/ 内置/ 缓冲区/ ./ 控制器/ 是/ 固态/ 硬盘/ 的/ 核心/ 组件/ ,/ 主要/ 包括/ 处理器/ 、/ 缓冲区/ 管理/ 单元/ 和/ 闪存/ 存储器/ 控制器/ ./ 缓冲区/ 管理/ 单元/ 主要/ 负责管理/ 内置/ 缓冲区/ ./ 处理器/ 主要/ 实现/ 闪存/ 转换/ 层/ 和/ 错误/ 校验/ 等/ 功能/ ./ 闪存/ 转换/ 层/ 负责/ 闪存/ 存储器/ 的/ 物理地址/ 和/ 接口/ 接收/ 的/ 逻辑/ 地址/ 之间/ 的/ 映射/ 、/ 闪存/ 存储器/ 空间/ 回收/ 以及/ 闪存/ 存储器/ 的/ 磨损/ 平衡/ ./ 闪存/ 转换/ 层/ 按照/ 地址映射/ 模式/ 可以/ 分为/ 4/ 类/ :/ 页级/ 映射/ 、/ 块级/ 映射/ 、/ 混合/ 映射/ 和/ 其它/ 映射/ 模式/ [/ 10/ ]/ ./ 闪存/ 存储器/ 控制器/ 主要/ 负责/ 闪存/ 存储器/ 的/ 连接/ 、/ 控制/ 、/ 读写/ 命令/ 传输/ 、/ 地址/ 传输/ 和/ 数据传输/ 等等/ ./ 闪存/ 存储器/ 控制器/ 通过/ 通道/ 与/ 闪存/ 存储器/ 相连/ ./ 通道/ 是/ 闪存/ 存储器/ 和/ 闪存/ 存储器/ 控制器/ 之间/ 的/ 一个/ 桥梁/ ,/ 负责/ 命令/ 、/ 地址/ 和/ 数据/ 的/ 传输/ ./ 如图/ 1/ 所示/ 的/ 闪存/ 存储器/ 控制器/ 连接/ 有/ 两个/ 通道/ ./ 两个/ 通道/ 是/ 可以/ 并行操作/ 的/ ,/ 故/ 第/ 1/ 级/ 并行/ 的/ 并行度/ 是/ 2/ ./ 闪存/ 存储器/ 在/ 通道/ 上/ 的/ 组织/ 方式/ 可用/ 图/ 2/ (/ a/ )/ 来/ 表示/ ./ 按照/ 并行/ 粒度/ 从大到/ 小/ 的/ 顺序/ 它们/ 分别/ 是/ 通道/ 级/ 并行/ 、/ 包级/ 并行/ 、/ 芯片级/ 并行/ 、/ 晶粒/ 级/ 并行/ 和/ 面板/ 级/ 并行/ ./ Q/ 个/ 可以/ 并行/ 访问/ 的/ 包被/ 连接/ 到/ 同一个/ 通道/ 上/ ;/ 包是/ 由/ P/ 个/ 可以/ 并行/ 访问/ 的/ 芯片/ 构成/ ;/ 芯片/ 是/ 由/ K/ 个/ 可以/ 并行/ 访问/ 的/ 晶粒/ 构成/ ;/ 晶粒/ 是/ 由/ L/ 个/ 可以/ 并行/ 访问/ 的/ 面板/ 构成/ ./ 面板/ 是/ 最小/ 的/ 并行操作/ 单元/ ,/ 即/ 第/ 5/ 级/ 并行/ ./ 图/ 1/ 和/ 图/ 2/ (/ a/ )/ 所示/ 的/ 固态/ 硬盘/ 中/ ,/ 每/ 一级/ 的/ 并行度/ 均/ 为/ 2/ ,/ 即/ L/ =/ K/ =/ P/ =/ Q/ =/ 2/ ./ 如图/ 2/ (/ b/ )/ 所示/ ,/ 面板/ 又/ 是/ 由/ M/ 个/ 闪存/ 块/ 、/ 数据/ 寄存器/ 和/ 缓存/ 寄存器/ 通过/ 串联/ 的/ 方式/ 构成/ ./ 块/ 是/ 由/ N/ 个页/ 以/ 串联/ 的/ 方式/ 构成/ 的/ 最/ 基本/ 的/ 擦除/ 操作/ 单元/ ./ 页/ 是/ 最/ 基本/ 的/ 读写操作/ 单元/ ./ 如图/ 2/ (/ b/ )/ 所示/ ,/ N/ =/ 64/ ,/ M/ =/ 4096.2/ ./ 2/ 问题/ 定义/ 磁盘/ 的/ 关键/ 组件/ 是/ 盘片/ 与/ 磁头/ ,/ 通过/ 盘片/ 的/ 旋转/ 和/ 磁头/ 的/ 寻道/ 来/ 找到/ 指定/ 位置/ ,/ 然后/ 读取/ 或者/ 写入/ 数据/ ./ 当/ 读写/ 数据/ 时/ ,/ 盘片/ 的/ 旋转/ 和/ 磁头/ 的/ 寻道/ 开销/ 很大/ 程度/ 上/ 制约/ 了/ 磁盘/ 系统/ 的/ 性能/ ./ 此外/ ,/ 磁盘/ 的/ 磁头/ 在/ 任何/ 时候/ 都/ 不/ 可能/ 实现/ 真正/ 的/ 并行/ ,/ 即/ 在/ 同/ 时刻/ 不能/ 为/ 两个/ 线程/ 定位/ 和/ 读写/ 数据/ ./ 传统/ 数据库/ 是/ 基于/ 磁盘/ 特性/ 设计/ 的/ ,/ 所以/ 主要/ 还是/ 利用/ 盘片/ 旋转/ 和/ 磁头/ 寻道/ 来/ 定位/ 读写/ 数据/ 所在/ 的/ 位置/ ./ 在/ 传统/ 数据库系统/ 中/ ,/ 扫描/ 操作/ 分为/ 表/ 扫描/ 和/ 索引/ 扫描/ 两类/ ./ 表/ 扫描/ 是/ 一种/ 关键/ 的/ 物理/ 操作/ ,/ 尤其/ 是/ 对于/ 需要/ 读取/ 整个/ 表/ 的/ 上层/ 操作/ —/ —/ —/ 聚集/ 、/ 排序/ 和/ 连接/ 等等/ ./ 在/ 传统/ 数据库系统/ 中/ ,/ 表/ 扫描/ 采用/ 一个/ 数据/ 块/ 接着/ 一个/ 数据/ 块/ 的/ 方式/ 读取数据/ ./ 在/ 固态/ 硬盘/ 上/ 也/ 可以/ 采用/ 同样/ 的/ 方式/ 读取数据/ ,/ 但是/ 不能/ 充分发挥/ 固态/ 硬盘/ 内部/ 并行/ 的/ 优势/ ./ 所以/ 我们/ 遇到/ 的/ 新/ 问题/ 是/ :/ 如何/ 让/ 表/ 扫描/ 操作/ 和/ 上层/ 的/ 聚集/ 操作/ 充分利用/ 固态/ 硬盘/ 的/ 内部/ 并行/ 特性/ 使/ 其/ 最大/ 限度/ 地/ 提高/ 性能/ ?/ 2.3/ 相关/ 工作/ 对于/ 固态/ 硬盘/ 内部/ 并行/ ,/ 研究者/ 主要/ 从/ 3/ 个/ 角度/ 进行/ 考虑/ :/ (/ 1/ )/ 固态/ 硬盘/ 内部/ 并行/ 结构/ 设计者/ 的/ 角度/ ;/ (/ 2/ )/ 固态/ 硬盘/ 内部/ 并行/ 结构/ 探测/ 者/ 的/ 角度/ ;/ (/ 3/ )/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 应用/ 者/ 的/ 角度/ ./ 固态/ 硬盘/ 内部结构/ 的/ 设计/ 主要/ 包括/ 闪存/ 存储器/ 连接/ 方式/ 、/ 固态/ 硬盘/ 内置/ 缓冲区/ 管理/ 和/ 固态/ 硬盘/ 内/ 请求/ 调度/ 处理/ ./ 文献/ [/ 11/ -/ 13/ ]/ 从/ 闪存/ 存储器/ 的/ 连接/ 方式/ 入手/ ,/ 分别/ 设计/ 了/ 页/ 级/ 、/ 芯片级/ 和/ 通道/ 级/ 并行/ 连接/ 方式/ ,/ 并且/ 针对/ 不同/ 的/ 并行/ 连接/ 粒度/ 设计所/ 需/ 的/ 内存/ 数据结构/ 和/ 操作/ 处理/ 方法/ ./ 文献/ [/ 14/ ]/ 重新/ 设计/ 了/ 基于/ 并行/ 结构/ 的/ 固态/ 硬盘/ 内置/ 缓冲区/ 管理策略/ ,/ 提高/ 固态/ 硬盘/ 的/ 整体/ 性能/ ./ 文献/ [/ 8/ ]/ 通过/ 设计/ 有效/ 的/ 固态/ 硬盘/ 内/ 请求/ 调度/ 处理/ 方法/ ,/ 提高/ 固态/ 硬盘/ 的/ 写/ 性能/ ./ 在/ 文献/ [/ 15/ -/ 17/ ]/ 中/ ,/ 作者/ 把/ 固态/ 硬盘/ 作为/ 黑盒/ ,/ 探测/ 固态/ 硬盘/ 的/ 特性/ ./ 文献/ [/ 16/ ]/ 根据/ 目前/ 公开/ 的/ 固态/ 硬盘/ 物理/ 结构/ 提出/ 了/ 一种/ 抽象/ 的/ 固态/ 硬盘/ 组织/ 结构/ ,/ 该/ 结构/ 的/ 3/ 个/ 关键/ 部分/ 分别/ 为/ 最合适/ 操作/ 单元/ (/ 数据/ 块/ )/ 、/ 并行/ 粒度/ 以及/ 固态/ 硬盘/ 内/ 采用/ 的/ 地址映射/ 策略/ (/ 详见/ 3.1/ 节/ )/ ./ 文献/ [/ 17/ ]/ 阐述/ 了/ 固态/ 硬盘/ 支持/ 的/ 高级/ 命令/ 、/ 空间/ 分配/ 和/ 数据/ 粒度/ 与/ 固态/ 硬盘/ 并/ Page4/ 行/ 特性/ 的/ 相互影响/ ./ 固态/ 硬盘/ 之上/ 的/ 数据库系统/ 需要/ 重新/ 设计/ 使/ 其/ 充分利用/ 固态/ 硬盘/ 内部/ 并发/ 特性/ ./ 在/ 文献/ [/ 18/ ]/ 中/ ,/ 作者/ 根据/ 探测/ 得到/ 的/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 修改/ 操作系统/ 的/ IO/ 调度/ 提交/ 策略/ ,/ 为/ 上层/ 应用/ 提供/ 一种/ 更好/ 的/ 并行处理/ 方式/ ./ 然后/ 在/ 此基础/ 之上/ 提出/ 新/ 的/ B/ +/ 树/ 索引/ —/ —/ —/ PIOB/ 树/ ,/ 同时/ 提出/ 针对/ PIOB/ 树/ 的/ 更新/ 策略/ 和/ 日志/ 恢复/ 策略/ ./ 文献/ [/ 19/ ]/ 采用/ 分块/ 排序/ 策略/ 来/ 提高/ 索引/ 扫描/ 的/ 性能/ ./ 3/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 探测/ 固态/ 硬盘/ 内部/ 的/ 架构/ 细节/ 作为/ 生产商/ 的/ 一种/ 核心/ 知识产权/ ,/ 通常/ 是/ 不会/ 公布/ 的/ ./ 因此/ ,/ 要/ 了解/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 的/ 最/ 直接/ 最/ 有效/ 的/ 方式/ 就是/ 探测/ ./ 3.1/ 探测/ 模型/ 文献/ [/ 16/ ]/ 基于/ 公开/ 的/ 文档/ 定义/ 了/ 一个/ 通用/ 模型/ 来/ 抽象/ 固态/ 硬盘/ 的/ 组织/ 结构/ ./ 其中/ ,/ 一个/ “/ 域/ ”/ 代表/ 共享/ 一组/ 特定/ 资源/ (/ 如/ 通道/ )/ 的/ 闪存/ 芯片/ 集合/ ,/ 一个/ “/ 块/ ”/ 是/ 一个/ 域/ 中/ 连续/ 分配/ 的/ 数据/ 单元/ ,/ 依照/ 映射/ 策略/ ,/ 不同/ 块/ 被/ 交错/ 地/ 放置/ 在/ 了/ N/ 个域/ 中/ ./ 本文/ 测试/ 与/ 固态/ 硬盘/ 内部/ 并行/ 相关/ 的/ 两个/ 关键/ 参数/ :/ 块/ 大小/ 和域/ 个数/ ./ 把/ 固态/ 硬盘/ 看做/ 一个/ 黑盒/ ,/ 通过/ 注入/ 精心设计/ 的/ I/ // O/ 访问/ 模式/ ,/ 可以/ 观察/ 到/ 固态/ 硬盘/ 的/ 一些/ 反应/ ,/ 并/ 记录/ 一些/ 关键/ 性能指标/ ,/ 例如/ 延迟/ 和/ 带宽/ ./ 利用/ 这些/ 探测/ 信息/ 就/ 可以/ 推测/ 出/ 固态/ 硬盘/ 的/ 一些/ 内部/ 细节/ ./ 我们/ 试图/ 以/ 一种/ 简单/ 但/ 却/ 有效/ 的/ 方式/ 来/ 了解/ 固态/ 硬盘/ 的/ 关键/ 架构/ 特征/ 而/ 非/ 固态/ 硬盘/ 内部/ 的/ 所有/ 细节/ ./ 固态/ 硬盘/ 块/ 大小/ 和域/ 个数/ 探测/ 伪/ 代码/ 如/ 算法/ 1/ 和/ 2/ 所示/ ./ 算法/ 1/ ./ 固态/ 硬盘/ 块/ 大小/ 探测/ 伪/ 代码/ ./ Max/ :/ 最大/ 可能/ 块/ 大小/ init/ _/ SSD/ (/ )/ ;/ // // 初始化/ 固态/ 硬盘/ (/ 顺序/ 写满/ 硬盘/ )/ for/ (/ i/ =/ 512B/ ;/ I/ </ =/ Max/ ;/ i/ +/ =/ 512B/ )/ // // I/ // O/ 请求/ 大小/ for/ (/ j/ =/ 0/ ;/ j/ </ 2/ / Max/ ;/ j/ +/ =/ 512B/ )/ // // I/ // O/ 请求/ 偏移/ for/ (/ k/ =/ 0/ ,/ latency/ =/ 0/ ;/ k/ </ 1000/ ;/ k/ ++/ )/ latency/ +/ =/ read/ _/ data/ (/ )/ ;/ // // 读取数据/ 并/ 计时/ latency/ =/ latency/ // 1000/ ;/ // // 计算/ 请求/ 响应/ 延迟/ 算法/ 2/ ./ 固态/ 硬盘/ 域/ 个数/ 探测/ 伪/ 代码/ ./ Dom/ :/ 最大/ 可能/ 域/ 个数/ stride/ _/ read/ (/ n/ )/ :/ 两个/ 并发/ 线程/ ,/ 一个/ 线程/ 从/ 偏移/ 为/ 0/ 处读/ 一块/ ;/ 另/ 一个/ 线程/ 从/ 偏移/ n/ 块/ 后/ 的/ 位置/ 读/ 一块/ init/ _/ SSD/ (/ )/ ;/ for/ (/ j/ =/ 1/ ;/ j/ </ =/ 4/ / Dom/ ;/ j/ ++/ )/ // // 跳读/ 距离/ bw/ =/ stride/ _/ read/ (/ j/ )/ ;/ // // 跳读/ 两块/ 数据/ 并/ 返回/ I/ // O/ 带宽/ 测试/ 时/ 需要/ 注意/ 的/ 事项/ :/ (/ 1/ )/ 主板/ BIOS/ 需/ 开启/ AHCI/ ①/ (/ SerialATAAdvancedHostControllerInterface/ ,/ 串行/ ATA/ 高级/ 主控/ 接口/ // 高级/ 主机/ 控制器/ 接口/ )/ 模式/ ,/ 以/ 支持/ 固态/ 硬盘/ 接口/ 逻辑/ 中/ 最新/ 融入/ 的/ NCQ/ ②/ 技术/ ,/ 该/ 技术/ 对/ 挖掘/ 利用/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 至关重要/ ;/ (/ 2/ )/ 固态/ 硬盘/ 文件/ 访问/ 需/ 设置/ 为/ DirectIO/ 模式/ 以/ 避免/ 操作系统/ 文件/ 缓冲区/ 的/ 影响/ ./ 3.2/ 探测/ 结果/ 本文/ 选择/ 了/ 3/ 款/ 具有/ 代表性/ 的/ 固态/ 硬盘/ 作为/ 实验/ 对象/ ,/ 规格/ 参数/ 详见/ 表/ 1/ ./ 其中/ 两款/ 建立/ 在/ 多层/ 单元/ (/ MLC/ )/ 闪存/ 芯片/ 的/ 基础/ 上/ ,/ 主要/ 针对/ 大容量/ 市场/ ;/ 另/ 一款/ 则/ 是/ 针对/ 高端/ 市场/ ,/ 它/ 建立/ 在/ 速度/ 更/ 快/ 、/ 使用寿命/ 更长/ 的/ 单层/ 单元/ (/ SLC/ )/ 闪存/ 芯片/ 的/ 基础/ 上/ ./ 出于/ 商业/ 保密/ 的/ 原因/ ,/ 我们/ 暂且/ 将/ 这/ 3/ 款/ SSD/ 分别/ 命名/ 为/ SSD/ -/ 1/ ,/ SSD/ -/ 2/ 和/ SSD/ -/ 3/ ./ 特别/ 说明/ 一点/ 就是/ :/ 这/ 3/ 款/ SSD/ 均/ 支持/ NCQ/ 技术/ ./ 它们/ 的/ 设计/ 与/ 主流/ 的/ SSD/ 设计/ 一致/ ,/ 是/ 市场/ 上/ 主流/ 技术/ 趋势/ 的/ 典型/ 代表/ ./ SSD/ -/ 1IntelSLC32SATA232SSD/ -/ 2IntelMLC160SATA232SSD/ -/ 3OCZMLC60SATA232/ 首先/ ,/ 让/ 我们/ 分析/ 一下/ SSD/ 块/ 大小/ 测试/ 结果/ ./ 图/ 3/ (/ a/ )/ ~/ (/ c/ )/ 显示/ 了/ 3/ 款/ SSD/ 的/ 请求/ 响应/ 延迟/ 随/ 请求/ 偏移/ (/ 单位/ 是/ sector/ ,/ 1sector/ =/ 0.5/ K/ )/ 位置/ 的/ 变化/ 而/ 变化/ 的/ 情况/ ./ 图中/ 3/ 条线/ 分别/ 展示/ 了/ 请求/ 大小/ 为/ 0.5/ K/ 、/ 4K/ 和/ 8K3/ 种/ 情况/ ./ 类似/ 于/ 文献/ [/ 16/ ]/ ,/ 图/ 3/ (/ a/ )/ 和/ (/ b/ )/ 中/ 请求/ 大小/ 为/ 0.5/ K/ 的/ 时候/ ,/ 请求/ 偏移/ 位置/ 的/ 变化/ 不会/ 影响/ 请求/ 响应/ 延迟/ 的/ 变化/ ,/ 趋近/ 于/ 平线/ ,/ 说明/ 每/ 一次/ 请求/ 都/ 落/ 在/ 一个/ 块/ 内/ 并且/ 不会/ 跨/ 多个/ 块/ ,/ 同时/ 也/ 说明/ 每/ 一块/ 的/ 读写/ 时间/ 是/ 相同/ 的/ ./ 对于/ SSD/ -/ 1/ 来说/ ,/ 当/ 请求/ 大小/ 为/ 4K/ 的/ 时候/ ,/ 请求/ 响应/ 延迟/ 随着/ 请求/ 偏移/ 位置/ 的/ 增加/ 呈现出/ 周期性/ 的/ 上下/ 波动/ ,/ 且/ 没有/ 出现/ 平稳/ 状态/ ,/ 一个/ 周期/ 的/ 大小/ 即/ 4K/ ./ 当/ 请求/ 大小/ 为/ 8K/ 的/ 时候/ ,/ 请求/ 响应/ 延迟/ 近似/ 为/ 一/ 恒定/ 值/ ,/ 分析/ 其/ 原因/ 有/ 两个/ :/ 固态/ 硬盘/ 的/ 内部/ 并行/ 特性/ 和/ 8K/ 已经/ 超过/ 一个/ 周期/ 的/ 大小/ 4K/ ./ 对于/ SSD/ -/ 2/ 来说/ ,/ 请求/ 大小/ 为/ 4K/ 和/ 8K/ 的/ 时候/ ,/ 请求/ 响应/ 延迟/ 随着/ 请求/ 偏移/ 位置/ 的/ 增加/ 成/ 周期性/ 的/ 上下/ 波动/ 变化/ ,/ 周期/ 大小/ 为/ 固定/ 的/ 16K/ ,/ 请求/ 大小/ 4K/ 和/ 8K/ 小/ ①/ ②/ Page5/ 于/ 16K/ ,/ 所以/ 在/ 图/ 3/ (/ b/ )/ 中/ 与/ SSD/ -/ 1/ 不同/ 的/ 是/ 在/ 一个/ 周期/ 内会/ 出现/ 相对/ 稳定/ 状态/ ./ 文献/ [/ 16/ ]/ 指出/ 一个/ 周期/ 的/ 跨度/ 就是/ 块/ 大小/ ./ 可见/ SSD/ -/ 1/ 和/ SSD/ -/ 2/ 的/ 块/ 大小/ 分别/ 为/ 4K/ 和/ 16K/ ./ 在/ 图/ 3/ (/ c/ )/ 中/ ,/ 无论/ 请求/ 大小/ 是/ 0.5/ K/ ,/ 还是/ 4K/ ,/ 还是/ 8K/ ,/ 请求/ 响应/ 延迟/ 都/ 随着/ 请求/ 偏移/ 位置/ 的/ 增加/ 呈现出/ 周期性/ 的/ 变化/ ,/ 周期/ 大小/ 恒定/ 为/ 8K/ ./ 根据/ 文献/ [/ 16/ ]/ 可知/ SSD/ -/ 3/ 的/ 块/ 大图/ 3/ 固态/ 硬盘/ 内部/ 并行/ 测试/ 然后/ ,/ 我们/ 再/ 来/ 分析/ 域/ 个数/ 测试/ 结果/ ./ 图/ 3/ (/ d/ )/ ~/ (/ f/ )/ 显示/ 了/ 3/ 款/ SSD/ 带宽/ 随/ 跳读/ 距离/ (/ 单位/ 是/ 块/ )/ 大小/ 的/ 变化/ 而/ 变化/ 的/ 情况/ ./ 图/ 3/ (/ d/ )/ ~/ (/ f/ )/ 中/ 每/ 条线/ 的/ 请求/ 大小/ 分别/ 为/ 4K/ 、/ 16K/ 和/ 8K/ ,/ 即/ 上面/ 测试/ 得到/ 的/ 块/ 大小/ ./ 通过/ 图/ 3/ (/ d/ )/ ~/ (/ f/ )/ 可以/ 观察/ 到/ 带宽/ 大小/ 随着/ 跳读/ 距离/ 大小/ 的/ 增长/ 呈现出/ 周期性/ 的/ 变化/ ./ 对于/ SSD/ -/ 1/ 和/ SSD/ -/ 2/ ,/ 通过/ 测试/ 结果/ 可知/ SSD/ -/ 1/ 和/ SSD/ -/ 2/ 都/ 具有/ 两层/ 的/ 并行/ 结构/ ,/ 即/ “/ 域/ ”/ 和/ “/ 子域/ [/ 16/ ]/ ”/ ,/ 分别/ 对应/ 着/ 图/ 3/ (/ d/ )/ ~/ (/ e/ )/ 的/ 大/ 周期/ 和/ 小/ 周期/ ,/ 大/ 周期/ 为/ 20/ ,/ 小/ 周期/ 为/ 10/ ,/ 所以/ 域/ 的/ 个数/ 为/ 20/ ./ 由于/ SSD/ -/ 3/ 具有/ 快慢/ 块/ 的/ 现象/ ,/ 所以/ SSD/ -/ 3/ 的/ 测试/ 结果显示/ 出/ 了/ 非/ 平稳/ 现象/ ,/ 即/ 一直/ 处于/ 上下/ 波动/ 状态/ ,/ 但是/ 可以/ 观察/ 到/ 带宽/ 较/ 小/ 的/ 点/ (/ 跳读/ 距离/ 为/ 21/ 、/ 41/ 和/ 61/ )/ 之间/ 也/ 呈现/ 了/ 周期/ 为/ 20/ 的/ 规律/ ,/ 所以/ SSD/ -/ 3/ 的/ 域/ 个数/ 也/ 为/ 20/ ./ 通过/ 上面/ 的/ 测试/ 可知/ :/ 对于/ 某些/ 厂家/ (/ Intel/ 和/ OCZ/ )/ 的/ 产品/ ,/ 虽然/ 他们/ 的/ 制作/ 工艺/ 上会/ 有/ 很大/ 区别/ (/ 芯片/ 类型/ 等/ )/ ,/ 但是/ 通过/ 测试/ 可知/ ,/ 这些/ 固态/ 硬盘/ 具小为/ 8K/ ./ 但是/ 请求/ 大小/ 为/ 0.5/ K/ 的/ 时候/ ,/ 随着/ 请求/ 偏移/ 的/ 大小/ 一个/ 周期/ 内/ 出现/ 快慢/ 两个/ 阶段/ ,/ 这/ 就/ 说明/ SSD/ -/ 3/ 具有/ 快慢/ 块/ 的/ 现象/ ,/ 即/ 不是/ 所有/ 块/ 的/ 读写/ 速度/ 都/ 一样/ ./ 这/ 就/ 使得/ 请求/ 大小/ 为/ 4K/ 和/ 8K/ 的/ 时候/ ,/ 请求/ 响应/ 延迟/ 也/ 具有/ 两个/ 阶段/ ,/ 即/ 快慢/ 两个/ 阶段/ ./ 综上/ 可知/ ,/ SSD/ -/ 1/ 、/ SSD/ -/ 2/ 和/ SSD/ -/ 3/ 的/ 块/ 大小/ 分别/ 是/ 4K/ 、/ 16K/ 和/ 8K/ ./ 有/ 很多/ 相似/ 的/ 特性/ ,/ 其中/ 最/ 主要/ 的/ 就是/ 内部/ 并行/ 特性/ ./ 内部/ 并行/ 特性/ 主要/ 有/ 3/ 个/ 指标/ :/ 块/ 大小/ 、/ 域/ 个数/ 和/ 映射/ 方式/ (/ 本文/ 给出/ 了/ 块/ 大小/ 和域/ 个数/ 的/ 测试/ 结果/ )/ ./ 对于/ 不同/ 种类/ 的/ 产品/ ,/ 它们/ 的/ 块/ 大小/ 和域/ 个数/ 可能/ 不同/ ./ 有些/ 产品/ 可能/ 还/ 具有/ 其它/ 特性/ ,/ 比如/ OCZ/ 产品/ 的/ 快慢/ 块/ 现象/ ./ 可见/ 在/ 使用/ 固态/ 硬盘/ 之前/ ,/ 通过/ 探测/ 了解/ 固态/ 硬盘/ 的/ 特性/ 是/ 首要/ 的/ 也/ 是/ 最/ 重要/ 的/ ,/ 了解/ 固态/ 硬盘/ 之后/ 可以/ 针对/ 其/ 特性/ 进行/ 合理配置/ 和/ 优化/ ./ 4/ 并行/ 表/ 扫描/ ParaSSDScan/ 首先/ ,/ 基于/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 优化/ 数据/ 存储/ ./ 然后/ ,/ 提出/ 利用/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 的/ 并行/ 表/ 扫描/ ParaSSDScan/ ./ 4.1/ 数据/ 存储/ 模型/ 传统/ 关系数据库/ 多/ 采用/ 行/ 存储/ 模式/ [/ 7/ ]/ 进行/ 数据/ 存储/ ,/ 本文/ 数据/ 块/ 内/ 数据/ 仍然/ 采用/ 行/ 存储/ 模式/ ./ 数据/ Page6/ 块/ 对应/ 传统/ 关系数据库/ 的/ 数据/ 页/ ,/ 块/ 内/ 数据组织/ 结构/ 类似/ 于/ 传统/ 关系数据库/ 的/ 数据/ 页/ 的/ 逻辑/ 结构/ ./ 但是/ ,/ 与/ 传统/ 关系数据库/ 的/ 数据/ 页/ 有/ 一点/ 不同/ ,/ 即/ 数据/ 块/ 内/ 需要/ 维护/ 一个/ 指针/ ,/ 用以/ 指向/ 同一/ 域/ 内/ 的/ 同一/ 关系/ 表/ 的/ 下/ 一/ 数据/ 块/ ./ 通过/ 指针/ 可以/ 快速/ 查找/ 到/ 同一/ 关系/ 表在/ 同一/ 域/ 内/ 的/ 下/ 一/ 数据/ 块/ ./ 数据/ 块/ 顺序/ 的/ 导入到/ 固态/ 硬盘/ ,/ 数据/ 在/ 固态/ 硬盘/ 上/ 的/ 分布/ 状况/ 类似/ 于/ 磁盘阵列/ RAID/ -/ 0/ ①/ ,/ 即/ 条带/ 化/ 存储/ 模式/ ,/ 如图/ 4/ 所示/ ,/ 此时/ 数据/ 平均分配/ 到/ 不同/ 的/ 域/ 中/ ,/ 性能/ 可以/ 达到/ 最优/ ./ 如果/ 数据分布/ 不均/ ,/ 单次/ 操作/ 的/ 性能/ 就/ 完全/ 取决于/ 数据/ 块/ 最/ 多/ 的/ 域/ 内/ 数据/ 大小/ ./ 本文/ 主要/ 关注/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 对/ 查询/ 的/ 影响/ ,/ 对于/ 更新/ 的/ 影响/ 将/ 作为/ 下/ 一步/ 工作/ 进行/ 研究/ ./ 4.2/ ParaSSDScan/ 概述/ 根据/ 3.1/ 节/ 提出/ 的/ 模型/ 可知/ ,/ 域/ 是/ 固态/ 硬盘/ 的/ 并行/ 单元/ ,/ 即域/ 之间/ 可以/ 并行/ 访问/ ,/ 每个/ 域/ 都/ 是/ 由/ 若干个/ 数据/ 块/ 组成/ ./ 表/ 扫描/ 操作/ 主要/ 是/ ./ 5/ 描/ 一张/ 表/ 的/ 所有/ 数据/ 块/ ./ 在/ 传统/ 数据库/ 中/ ,/ 表/ 扫描/ 采用/ 的/ 是/ 一块/ 接着/ 一块/ 地/ 把/ 数据/ 页/ 从/ 磁盘/ 读出/ ,/ 但是/ 受限于/ 磁盘/ 的/ 磁头/ 不能/ 并行操作/ 磁盘/ ,/ 而/ 固态/ 硬盘/ 没有/ 这种/ 机械/ 组件/ ,/ 并且/ 固态/ 硬盘/ 具有/ 丰富/ 的/ 内部/ 并行/ 特性/ ,/ 所以/ 提出/ 基于/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 的/ 并行/ 表/ 扫描/ ParaSSDScan/ 来/ 提高/ 扫描/ 的/ 效率/ ./ 如图/ 5/ 所示/ ,/ ParaSSDScan/ 中/ 最/ 基本/ 的/ 操作/ 单元/ 是/ “/ 单域/ 扫描/ ”/ ./ 单域/ 扫描/ 把/ 数据/ 从/ 单个/ 域/ 中/ 一块/ 接着/ 一块/ 地/ 扫描/ 放到/ 缓冲区/ 中/ ./ 为/ 减少/ 资源共享/ 带来/ 的/ 性能/ 损失/ ,/ 让/ 每个/ 单域/ 扫描/ 都/ 有/ 独享/ 的/ 缓冲区/ ,/ 把/ 一个/ 单域/ 扫描/ 对应/ 的/ 缓冲区/ 叫做/ “/ 缓冲/ 子/ 区/ ”/ ./ 这样/ ,/ 多个/ 单域/ 扫描/ 可以/ 无/ 干扰/ 地/ 并行执行/ ,/ 因为/ 每个/ 单域/ 扫描/ 对应/ 一个/ 属于/ 自己/ 的/ 缓冲/ 子区/ ./ 由/ 多个/ 单域/ 扫描/ 和/ 多个/ 缓冲/ 子/ 区/ 构成/ “/ 多域/ 并行/ 扫描/ ”/ ./ 域/ 是/ 固态/ 硬盘/ 上/ 的/ 并行/ 单元/ ,/ 故表/ 数据/ 存储/ 时要/ 考虑/ :/ 为/ 尽可能/ 发挥/ 固态/ 硬盘/ 内部/ 并行/ 特性/ ,/ 单个/ 表/ 所有/ 数据/ 块/ 应/ 尽可能/ 地/ 分散/ 到/ 不同/ 的/ 域/ 内/ ./ 4.3/ 单域/ 扫描/ 和/ 多域/ 并行/ 扫描/ 单域/ 扫描/ 与/ 传统/ 数据库/ 中/ 的/ 表/ 扫描/ 类似/ ./ 传统/ 数据库/ 中/ 的/ 表/ 扫描/ 把/ 指定/ 表从/ 数据库/ 中/ 一块/ 接着/ 一块/ 地/ 读出/ 到/ 缓冲区/ 进行/ 处理/ ./ 单域/ 扫描/ 与/ 传统/ 表/ 扫描/ 的/ 不同点/ 在于/ 读取数据/ 不同/ ,/ 单域/ 扫描/ 是从/ 一个/ 域/ 中/ 把/ 数据/ 一块/ 接着/ 一块/ 读取/ 到/ 指定/ 的/ 缓冲/ 子区/ 中/ ./ 每个/ 单域/ 扫描/ 都/ 有/ 一个/ 缓冲/ 子/ 区/ 与其/ 对应/ ./ 缓冲/ 子/ 区/ 用以/ 缓冲/ 单域/ 扫描/ 读取/ 的/ 数据/ ./ 由于/ 内存容量/ 有限/ ,/ 一个/ 域/ 内/ 存储/ 的/ 被/ 扫描/ 表/ 的/ 数据/ 大小/ 很/ 可能/ 超过/ 该/ 单域/ 扫描/ 对应/ 的/ 缓冲/ 子/ 区/ 大小/ ,/ 那么/ 在/ 处理过程/ 中/ ,/ 为了/ 读取/ 未/ 被/ 处理/ 的/ 数据/ ,/ 缓冲/ 子区/ 中/ 的/ 被/ 处理/ 过/ 的/ 内容/ 需要/ 被/ 替换/ 掉/ ./ 因为/ 我们/ 这里/ 不/ 考虑/ 数据/ 的/ 写/ 操作/ ,/ 所以/ 缓冲/ 子区/ 的/ 管理/ 就/ 相对/ 简单/ 很多/ —/ —/ —/ 只有/ 换入/ 没有/ 换/ 出/ ,/ 即/ 读取/ 未/ 处理/ 的/ 数据/ 块/ 覆盖/ 缓冲/ 子区/ 中/ 的/ 已/ 被/ 处理/ 数据/ 块/ ./ 多域/ 并行/ 扫描/ ,/ 根据/ 域/ 个数/ 和/ 处理器/ 支持/ 最大/ 线程/ 数/ 产生/ 若干/ 线程/ ,/ 每个/ 线程/ 对应/ 一个/ 单域/ 扫描/ ,/ 然后/ 让/ 这些/ 线程/ 无/ 干扰/ 地/ 并行执行/ ./ 整个/ 缓冲区/ 根据/ 线程/ 个数/ 被/ 平均化/ 分为/ 若干个/ 缓冲/ 子/ 区/ ,/ 每个/ 缓冲/ 子/ 区/ 采用/ 相同/ 的/ 管理/ 方式/ —/ —/ —/ 只有/ 换入/ 没有/ 换出/ ./ 多域/ 并行/ 扫描/ 的/ 性能/ 取决于/ 其/ 并行度/ ,/ 并行度/ 不但/ 与域/ 的/ 个数/ 有关/ ,/ 还/ 与/ 处理器/ 物理/ 线程/ 数/ 和/ 固态/ 硬盘/ 支持/ 的/ NCQ/ 有关/ ./ 5/ 并行/ 聚集/ ParaSSDAggr/ 聚集/ 操作/ 被/ 查询/ 计划/ 解析器/ 转化/ 为/ 物理/ 操作/ 表/ 扫描/ ,/ 表/ 扫描/ 性能/ 对/ 聚集/ 操作/ 性能/ 有/ 直接/ 影响/ ./ 本文/ 对此/ 提出/ 基于/ 并行/ 表/ 扫描/ 的/ 并行/ 聚集/ 模型/ ParaSS/ -/ DAggr/ ,/ 并/ 实现/ 几种/ 简单/ 的/ 聚集/ 操作/ ./ 5.1/ 并行/ 聚集/ 模型/ ParaSSDAggr/ 基于/ 传统/ 表/ 扫描/ 的/ 聚集/ 操作/ 主要/ 过程/ 如下/ :/ 扫描/ 指定/ 表/ 的/ 数据/ 块/ 并/ 一块/ 接着/ 一块/ 地/ 读取/ 到/ 缓冲区/ ①/ http/ :/ // // en/ ./ wikipedia/ ./ org/ // wiki/ // RAIDPage7/ 中/ ,/ 然后/ 进行/ 聚集/ 计算/ ./ 如果/ 内存/ 不够/ 大/ ,/ 不能/ 存储/ 指定/ 表/ 的/ 所有/ 数据/ 块/ ,/ 那么/ 只能/ 一次/ 读取/ 一部分/ 数据/ 块/ 到/ 缓冲区/ 中/ ,/ 进行/ 聚集/ 计算/ ,/ 然后/ 再/ 读取/ 一部分/ ,/ 再/ 进行/ 聚集/ 计算/ ,/ 依/ 此/ 重复/ 执行/ 直到/ 指定/ 表/ 的/ 数据/ 块/ 全部/ 读取/ 到/ 缓冲区/ 并/ 进行/ 聚集/ 计算/ ./ 对于/ 聚集/ 操作/ 模型/ ,/ 则/ 需要/ 针对/ ParaSSDScan/ 进行/ 适当/ 的/ 改进/ ./ 如图/ 6/ 所示/ ,/ 改进/ 后/ 的/ 并行/ 聚集/ 模型/ ParaSSDAggr/ 把/ 聚集/ 操作/ 分成/ 3/ 个/ 阶段/ :/ 单域/ 扫描/ 从域/ 中/ 读取数据/ 写入/ 到/ 相应/ 缓冲/ 子区/ 中/ ,/ “/ 单/ 聚集/ ”/ 从/ 缓冲/ 子区/ 中/ 读取数据/ 进行/ 单/ 聚集/ 计算/ 并/ 把/ 计算结果/ 写入/ 到/ “/ 单/ 聚集/ 结果/ ”/ 中/ ,/ “/ 总/ 聚集/ ”/ 从单/ 聚集/ 结果/ 中/ 读取数据/ 并/ 进行/ 总/ 聚集/ 计算/ 并/ 把/ 结果/ 写入/ 到/ “/ 总/ 聚集/ 结果/ ”/ 中/ ./ 单域/ 扫描/ 和/ 单/ 聚集/ 都/ 需要/ 操作/ 缓冲/ 子/ 区/ ,/ 缓冲/ 子/ 区/ 不能/ 使用/ 简单/ 的/ 覆盖/ 策略/ ./ 缓冲/ 子区/ 的/ 所有/ 页/ 采用/ 环状/ 组织/ 形式/ ./ 缓冲/ 子区/ 有/ 两个/ 指针/ ,/ 分别/ 是/ 读/ 指针/ 和/ 写/ 指针/ ./ 单域/ 扫描/ 使用/ 写/ 指针/ 确定/ 向/ 缓冲/ 子区/ 中/ 写/ 数据/ 的/ 位置/ ./ 单/ 聚集/ 使用/ 读/ 指针/ 确定/ 从/ 缓冲/ 子区/ 中/ 读数据/ 的/ 位置/ ,/ 读取数据/ 之后/ 进行/ 单/ 聚集/ 计算/ (/ 由/ 具体/ 聚集/ 操作/ 决定/ )/ ,/ 并/ 把/ 计算结果/ 写入/ 到/ 单/ 聚集/ 结果/ 中/ ./ 单/ 聚集/ 与/ 传统/ 的/ 聚集/ 很/ 相近/ ,/ 不同点/ 在于/ 读取数据/ 的/ 方式/ 不同/ ./ 因为/ 固态/ 硬盘/ 域间/ 的/ 并行性/ ,/ 单域/ 扫描/ 可以/ 并行执行/ ;/ 不同/ 域/ 对应/ 缓冲/ 子/ 区/ 之间/ 没有/ 数据/ 交互/ ,/ 不同/ 单/ 聚集/ 之间/ 也/ 没有/ 互相/ 影响/ ,/ 所以/ 单/ 聚集/ 操作/ 也/ 可以/ 并行执行/ ./ 总/ 聚集/ ,/ 即/ 对/ 多个/ 单/ 聚集/ 结果/ 进行/ 总/ 聚集/ 计算/ (/ 由/ 具体/ 聚集/ 操作/ 决定/ )/ ,/ 产生/ 总/ 聚集/ 结果/ 的/ 过程/ ./ 获得/ 单/ 聚集/ 结果/ 的/ 方式/ 有/ 两种/ :/ “/ 单/ 聚集/ 上推/ ”/ 和/ “/ 总/ 聚集/ 下/ 拉/ ”/ ./ 单/ 聚集/ 上推/ ,/ 指/ 的/ 就是/ 单/ 聚集/ 对/ 串行/ 组内/ 所有/ 数据/ 进行/ 完/ 聚集/ 计算/ 之后/ 产生/ 单/ 聚集/ 结果/ ,/ 主动/ 传递/ 给/ 总/ 聚集/ 使用/ ./ 总/ 聚集/ 下/ 拉/ ,/ 指/ 的/ 是/ 总/ 聚集/ 向单/ 聚集/ 操作/ 索取/ 所/ 需/ 的/ 单/ 聚集/ 结果/ ./ 并行/ 聚集/ ParaSSDAggr/ 的/ 性能/ 取决于/ 并行/ 扫描/ 处理/ 能力/ 和/ 处理器/ 物理/ 线程/ 数/ ,/ 而/ 并行/ 扫描/ 与域/ 个数/ 、/ 处理器/ 物理/ 线程/ 数/ 和/ 固态/ 硬盘/ 支持/ 的/ NCQ/ 都/ 有关/ ./ 综上/ 分析/ 可知/ ,/ 并行/ 聚集/ 模型/ ParaSSDAggr/ 的/ 性能/ 与域/ 个数/ 、/ 处理器/ 物理/ 线程/ 数/ 和/ 固态/ 硬盘/ 支持/ 的/ NCQ/ 有关/ ./ 5.2/ 聚集/ 操作/ 实现/ 聚集/ 操作/ 中/ 比较/ 典型/ 且/ 常用/ 的/ 有/ 求和/ 、/ 求/ 最大/ 、/ 求/ 最小/ 、/ 计数/ 和/ 求/ 平均值/ ./ 本/ 部分/ 详细描述/ 这/ 几种/ 常用/ 聚集/ 操作/ 的/ 实现/ ./ 根据/ 单/ 聚集/ 和/ 总/ 聚集/ 的/ 聚集/ 计算/ 是否/ 相同/ 以及/ 单/ 聚集/ 产生/ 结果/ 的/ 个数/ 可以/ 分为/ 3/ 类/ :/ (/ 1/ )/ 求和/ 、/ 求/ 最大/ 和/ 求/ 最小/ ./ 对于/ 该类/ 聚集/ 操作/ ,/ 聚集/ 模型/ ParaSSDAggr/ 中/ 的/ 单/ 聚集/ 计算/ 过程/ 和/ 总/ 聚集/ 计算/ 过程/ 采用/ 相同/ 的/ 聚集/ 计算/ ,/ 并且/ 单/ 聚集/ 结果/ 均/ 为/ 单个/ 数据/ ./ 首先/ 利用/ 单域/ 扫描/ 读取/ 指定/ 域/ 中/ 数据/ 到/ 缓冲/ 子区/ 中/ ,/ 然后/ 使用/ 单/ 聚集/ 对/ 读入/ 到/ 缓冲/ 子区/ 中/ 的/ 数据/ 进行/ 求和/ 、/ 求/ 最大/ 或者/ 求/ 最小/ ,/ 然后/ 把/ 计算结果/ 写入/ 到/ 单/ 聚集/ 结果/ 中/ ./ 当单/ 聚集/ 计算/ 完/ 单个/ 域/ 内/ 的/ 聚集/ 结果/ 之后/ ,/ 把/ 单/ 聚集/ 结果/ 传递/ 给/ 总/ 聚集/ ,/ 总/ 聚集/ 对/ 所有/ 单/ 聚集/ 结果/ 进行/ 求和/ 、/ 求/ 最大/ 或求/ 最小/ ,/ 把/ 结果/ 作为/ 总/ 聚集/ 结果/ 反馈/ 给/ 上层/ 用户/ ./ (/ 2/ )/ 计数/ ./ 对于/ 该/ 聚集/ 操作/ ,/ 单/ 聚集/ 结果/ 也/ 是/ 单个/ 数据/ ,/ 不过/ 聚集/ 模型/ ParaSSDAggr/ 中/ 的/ 单/ 聚集/ 计算/ 和/ 总/ 聚集/ 计算/ 采用/ 不同/ 的/ 聚集/ 计算/ ./ 单/ 聚集/ 从/ 指定/ 缓冲/ 子区/ 中/ 读取数据/ 并/ 进行/ 计数/ ,/ 最后/ 获得/ 单/ 聚集/ 计数/ 结果/ 并/ 存入/ 单/ 聚集/ 结果/ ./ 然后/ ,/ 把/ 单/ 聚集/ 结果/ 传递/ 到/ 总/ 聚集/ 中/ ,/ 总/ 聚集/ 对/ 所有/ 单/ 聚集/ 结果/ 进行/ “/ 求和/ ”/ 计算/ 获得/ 总/ 聚集/ 结果/ ,/ 也/ 就是/ 最终/ 的/ 计数/ 结果/ ,/ 反馈/ 给/ 用户/ ./ (/ 3/ )/ 求/ 平均值/ ./ 对于/ 该/ 聚集/ 操作/ ,/ 聚集/ 模型/ ParaSSDAggr/ 中/ 的/ 单/ 聚集/ 和/ 总/ 聚集/ 采用/ 不同/ 的/ 聚集/ 计算/ ,/ 且/ 单/ 聚集/ 结果/ 为/ 两个/ 数据/ ./ 单/ 聚集/ 读取/ 指定/ 缓冲/ 子/ 区/ 数据/ 并/ 进行/ 求和/ 和/ 计数/ 两种/ 聚集/ 计算/ ,/ 即单/ 聚集/ 结果/ 为/ 两个/ 值/ (/ 分别/ 称为/ “/ 单/ 聚集/ 和/ ”/ 和/ “/ 单/ 聚集/ 计数/ ”/ )/ ./ 单/ 聚集/ 计算/ 完成/ 后/ ,/ 把/ 单/ 聚集/ 结果/ 传递/ 给/ 总/ 聚集/ ,/ 总/ 聚集/ 分别/ 对/ “/ 单/ 聚集/ 和/ ”/ 和/ “/ 单/ 聚集/ 计数/ ”/ 进行/ 求和/ ,/ 结果/ 分别/ 记/ 为/ “/ 总/ 聚集/ 和/ ”/ 和/ “/ 总/ 聚集/ 计数/ ”/ ,/ 那么/ 总/ 聚集/ 结果/ 就/ 为/ “/ 总/ 聚集/ 和/ ”/ 和/ “/ 总/ 聚集/ 计数/ ”/ 相除/ ,/ 也/ 就是/ 最终/ 的/ 平均值/ ./ 6/ 实验/ 结果/ 及/ 分析/ 6.1/ 实验/ 环境/ 实验/ 平台/ 为/ Lenovo/ 昭阳/ K46A/ ,/ 其/ 处理器/ 为/ Page8Intel/ 酷睿/ i5450MHz/ ,/ 双核心/ 四/ 线程/ ,/ 内存大小/ 2GB/ ,/ 硬盘/ 为/ 一块/ 5400RPM500GBSATA/ 接口/ 西部数据/ 磁盘/ ./ 操作系统/ 使用/ 的/ 是/ Fedora14/ ,/ 内核/ 版本/ 为/ Linux2/ ./ 6.35/ ./ 待测/ 3/ 款/ 固态/ 硬盘/ 参数/ 详见/ 表/ 1/ ./ 为了/ 能够/ 充分利用/ 固态/ 硬盘/ 的/ 内部/ 并行/ 特性/ ,/ 还/ 需要/ 对系统/ 进行/ 一些/ 额外/ 的/ 配置/ ./ 在/ BIOS/ 下/ 开启/ AHCI/ 模式/ ,/ 当其/ 开启/ 后/ 固体/ 硬盘/ 支持/ 的/ NCQ/ 才能/ 发挥/ 效用/ ./ ParaSSDScan/ (/ 物理/ 操作/ :/ 从/ 固态/ 硬盘/ 读取数据/ 到/ 内存/ )/ 和/ ParaSSDAggr/ (/ 基于/ ParaSSDScan/ 的/ 上层/ 聚集/ 操作/ :/ 针对/ 主键/ 的/ 求和/ 、/ 求/ 最大/ 、/ 求/ 最小/ 、/ 计数/ 和/ 求/ 平均/ 5/ 种/ 聚集/ 操作/ )/ 采用/ 标准/ C语言/ 编写/ ,/ 为了/ 尽可能/ 体现/ 算法/ 性能/ ,/ 避免/ 文件系统/ 缓冲区/ 的/ 干扰/ ,/ 打开/ 文件/ 时要/ 以/ DirectIO/ 方式/ 打开/ ,/ 同时/ 还/ 需要/ 设置/ 对齐/ 访问/ 方式/ ,/ 用以/ 保证数据/ 对齐/ 访问/ ./ 本文/ 主要/ 测试/ 物理/ 操作/ 表/ 扫描/ 和/ 聚集/ 操作/ 在/ 磁盘/ 和/ 固态/ 硬盘/ 上/ 的/ 性能/ 表现/ ,/ 采用/ 4.1/ 节/ 的/ 方式/ 顺序/ 地/ 存储/ 数据/ 到/ 磁盘/ 和/ 固态/ 硬盘/ 之上/ ./ ParaSSD/ -/ Scan/ 和/ ParaSSDAggr/ 的/ 性能/ 可以/ 完全/ 由/ 数据/ 大小/ 验证/ ,/ 而/ 无需/ 考虑/ 数据类型/ ,/ 故本/ 实验/ 数据/ 集/ 采用/ TPC/ -/ C/ 标准/ 数据/ 集/ Customer/ 表/ 的/ 数据/ (/ 87/ 万条/ 记录/ ,/ 1G/ 数据/ )/ ./ 性能/ 衡量/ 指标/ 采用/ 完成/ 扫描/ 或者/ 聚集/ 操作/ 的/ 运行/ 时间/ ,/ 即/ 请求/ 响应/ 延迟/ (/ 单位/ :/ ms/ )/ ./ 测试/ 平台/ CPU/ 具有/ 4/ 线程/ ,/ 所以/ 测试/ 4/ 线程/ 下/ 的/ 性能/ ./ 由/ 3.2/ 节中/ 的/ 测试/ 结果/ 可知/ 固态/ 硬盘/ SSD/ -/ 1/ 、/ SSD/ -/ 2/ 和/ SSD/ -/ 3/ 都/ 有/ 20/ 个域/ ,/ 所以/ 测试/ 20/ 个/ 线程/ 下/ 的/ 性能/ ./ 另外/ ,/ 测试/ 10/ 个/ 线程/ 情况/ 下/ 的/ 性能/ 用于/ 对比/ 分析/ ./ 为/ 方便/ 解释/ ,/ 定义/ 符号/ ParaSSDScan/ -/ N/ 和/ ParaSSDAggr/ -/ N/ 分别/ 代表/ 使用/ N/ 线程/ 运行/ ParaSSDScan/ 和/ ParaSSDAggr/ ./ 传统/ 表/ 扫描/ TraScan/ 的/ 主要/ 过程/ 是/ 一块/ 数据/ 接着/ 一块/ 数据/ 从/ 外存/ 介质/ 读取数据/ ,/ 采用/ 的/ 是/ 单线程/ 的/ 处理/ 方式/ ,/ 即/ TraScan/ 等同于/ ParaSSDScan/ -/ 1/ ./ 传统/ 的/ 聚集/ 操作/ TraAggr/ 主要/ 是/ 基于/ 传统/ 表/ 扫描/ TraScan/ 实现/ 的/ ,/ 故/ TraAggr/ 等同于/ ParaSSDAggr/ -/ 1.6/ ./ 2ParaSSDScan/ 的/ 性能/ 分析/ 表/ 扫描/ 性能/ 测试/ 结果/ 如图/ 7/ 所示/ ./ 我们/ 测试/ 了/ TraScan/ (/ ParaSSDScan/ -/ 1/ )/ 以及/ ParaSSDScan/ -/ 4/ 、/ ParaSSDScan/ -/ 10/ 和/ ParaSSDScan/ -/ 20/ 在/ 磁盘/ 和/ 固态/ 硬盘/ 上/ 的/ 运行/ 性能/ ./ 通过/ 图/ 7/ 可知/ ,/ 在/ 磁盘/ 上/ 运行/ TraScan/ 和/ ParaSSDScan/ -/ 4/ // 10/ // 20/ ,/ ParaSSDScan/ -/ 4/ // 10/ // 20/ 并不一定/ 比/ 传统/ 方法/ 具有/ 优势/ ,/ 例如/ ParaSSDScan/ -/ 20/ 运行/ 时间/ 比/ TraScan/ 还要/ 长/ ./ 图/ 7/ 还/ 指出/ TraScan/ 在/ 磁盘/ 上/ 的/ 运行/ 时间/ 要/ 比/ ParaSSDScan/ -/ 4/ // 10/ // 20/ 在/ 3/ 款/ 固态/ 硬盘/ 上/ 运行/ 时间/ 长/ 很多/ ,/ 基本/ 前者/ 是/ 后者/ 的/ 2/ ~/ 3/ 倍/ ,/ 所以/ ParaSSDScan/ -/ 4/ // 10/ // 20/ 要/ 比/ TraScan/ 具有/ 更好/ 的/ 时间/ 性能/ ./ ParaSSDScan/ 在/ 固态/ 硬盘/ 上/ 的/ 运行/ 时间/ 在/ 随着/ 线程/ 数/ 的/ 增大/ 而/ 减小/ ./ 虽然/ CPU/ 物理/ 线程/ 数/ 只有/ 4/ 个/ ,/ 但是/ 固态/ 硬盘/ 可以/ 支持/ 更/ 多/ 的/ 并行操作/ ,/ 所以/ 当/ 并行/ 线程/ 数为/ 10/ 和/ 20/ 的/ 时候/ ,/ ParaSSDScan/ 的/ 运行/ 时间/ 仍然/ 减小/ ,/ 但是/ 减小/ 的/ 程度/ 已经/ 有限/ ,/ 这/ 主要/ 是/ 由于/ 大量/ 线程/ 之间/ 的/ 切换/ 开销/ 的/ 影响/ ./ ParaSSDScan/ -/ 20/ 在/ 固态/ 硬盘/ 上/ 的/ 运行/ 时间/ 大概/ 是/ TraScan/ 在/ 磁盘/ 上/ 运行/ 时间/ 的/ 三分之一/ ./ 6.3/ ParaSSDAggr/ 的/ 性能/ 分析/ 本文/ 实现/ 了/ 针对/ 主键/ 的/ 聚集/ 操作/ ,/ 即/ 对/ 主键/ 进行/ 求和/ 、/ 求/ 平均/ 、/ 求/ 最大/ // 最小/ 和/ 计数/ ./ 因为/ 该/ 5/ 种/ 聚集/ 操作/ 相对/ 都/ 很/ 简单/ ,/ 本文/ 将/ 它们/ 集中/ 实现/ 在/ 一起/ 作为/ 一种/ 集中/ 聚集/ 操作/ 处理/ ,/ 类似/ 于/ 执行/ 了/ 形如/ “/ Selectcount/ (/ / )/ ,/ sum/ (/ ID/ )/ ,/ avg/ (/ ID/ )/ ,/ max/ (/ ID/ )/ ,/ min/ (/ ID/ )/ fromCustomer/ ;/ ”/ 的/ SQL/ 语句/ ./ 对于/ 每/ 一个/ 缓冲/ 子/ 区/ ,/ 默认设置/ 其/ 大小/ 为/ 16KB/ ./ 图/ 8/ 所示/ 运行/ 时间/ 是/ 5/ 种/ 聚集/ 操作/ 的/ 总/ 运行/ 时间/ ./ 本文/ 测试/ 了/ TraAggr/ (/ ParaSSDAggr/ -/ 1/ )/ 以及/ ParaSSDAggr/ -/ 4/ 、/ ParaSSDAggr/ -/ 10/ 和/ ParaSSDAggr/ -/ 20/ 在/ 磁盘/ 和/ 固态/ 硬盘/ 上/ 的/ 运行/ 性能/ ./ 如图/ 8/ 所示/ ,/ ParaSSDAggr/ -/ 4/ // 10/ // 20/ 在/ 磁盘/ 上/ 运行/ 的/ 时间/ 都/ 比/ TraAggr/ 在/ 磁盘/ 上/ 的/ 运行/ 时间/ 要长/ ,/ 所以/ ParaSSDAggr/ -/ 4/ // 10/ // 20/ 不/ 适合/ 磁盘/ 数据库系统/ ,/ 主要/ 是/ 磁盘/ 硬件/ 不/ 具有/ 并行/ 特性/ ./ 无论/ 在/ 哪款/ 固态/ 硬盘/ 上/ 运行/ ParaSSDAggr/ -/ 4/ // 10/ // 20/ 都/ 要/ 比/ 在/ 磁盘/ 上/ 运行/ TraAggr/ 节省/ 很多/ 时间/ ./ 同时/ ,/ ParaSSDAggr/ -/ 4/ // 10/ // 20/ 在/ 固态/ 硬盘/ 上/ 的/ 运行/ 时间/ 也/ 是/ 随着/ 线程/ 数/ 的/ 增大/ 而/ 下降/ ,/ 但是/ 下降/ 程度/ 在/ 减少/ ,/ 这点/ 类似/ 于/ ParaSSDScan/ -/ 4/ // 10/ // 20/ ,/ 主要/ 是因为/ ParaSSDAggr/ 的/ 底层/ 物理/ 操作/ 采用/ ParaSSDScan/ ./ Page9ParaSSDAggr/ -/ 20/ 在/ 固态/ 硬盘/ 上/ 的/ 运行/ 时间/ 大概/ 是/ TraAggr/ 在/ 磁盘/ 上/ 运行/ 时间/ 的/ 四分之一/ ./ 缓冲/ 子区/ 在/ 上面/ 的/ 测试/ 中/ 默认设置/ 为/ 16KB/ ,/ 但是/ 同时/ 也/ 希望/ 通过/ 增加/ 内存/ 提高/ 操作/ 性能/ ./ 但是/ 内存/ 有限/ 且/ 成本/ 较/ 高/ ,/ 故/ 本文/ 测试/ 聚集/ 操作/ 性能/ 和/ 缓冲区/ 大小/ 之间/ 的/ 关系/ ./ 聚集/ 操作/ 性能/ 随/ 缓冲/ 子/ 区/ 大小/ 变化/ 的/ 性能/ 如图/ 9/ 所示/ ./ 图中/ SSD/ -/ 1/ (/ 4/ )/ 中/ 的/ 4/ 表示/ ParaSSDAggr/ 并行/ 运行/ 的/ 线程/ 数/ ,/ 其它/ 类同/ ./ 由图/ 9/ 可见/ ,/ 缓冲/ 子/ 区/ 增大/ 对/ 聚集/ 操作/ 的/ 运行/ 时间/ 并/ 没有/ 太/ 大/ 影响/ ./ 由此可见/ ,/ ParaSSDAggr/ 不但/ 节省/ 了/ 时间/ 还/ 节省/ 了/ 内存/ ./ 7/ 结论/ 随着/ 固态/ 硬盘/ 的/ 应用/ 越来越/ 广泛/ ,/ 使得/ 固态/ 硬盘/ 受到/ 学术界/ 和/ 工业界/ 越来越/ 多/ 的/ 关注/ ./ 由于/ 采用/ 类似/ 磁盘/ 冗余/ 阵列/ 的/ 组织/ 结构/ ,/ 使得/ 并行/ 特性/ 成为/ 固态/ 硬盘/ 固有/ 的/ 特性/ ./ 本文/ 探测/ 了/ 3/ 款/ 不同/ 厂家/ 型号/ 的/ 固态/ 硬盘/ 的/ 内部/ 并行/ 特性/ ,/ 同时/ 还/ 发现/ 了/ 某些/ 固态/ 硬盘/ 具有/ 快慢/ 块/ 的/ 现象/ ./ 针对/ 固态/ 硬盘/ 内部/ 并行/ 特性/ 提出/ 了/ 优化/ 的/ 并行/ 表/ 扫描/ 和/ 并行/ 聚集/ 操作/ 模型/ ./ 通过/ 实验/ 证明/ 并行/ 表/ 扫描/ 模型/ ParaSSDScan/ 和/ 聚集/ 操作/ 模型/ ParaSSDAggr/ 较之/ 传统/ 数据库/ 表/ 扫描/ 和/ 聚集/ 操作/ 的/ 性能/ 分别/ 提高/ 了/ 3/ 倍/ 和/ 4/ 倍/ ./ 固态/ 硬盘/ 内部/ 并行/ 特性/ 还/ 可/ 用于/ 优化/ 数据库/ 的/ 其它/ 模块/ ,/ 比如/ 缓冲区/ 管理/ 、/ 索引/ 、/ 事务处理/ 、/ 查询处理/ 和/ 查询/ 优化/ 等等/ ./ 

