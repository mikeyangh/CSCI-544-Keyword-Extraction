Page1/ 支持/ 运行/ 监控/ 的/ 可信/ 软件体系结构/ 设计/ 方法/ 文静/ 1/ )/ 王怀民/ 2/ )/ 应时/ 1/ )/ 倪友聪/ 1/ )/ 王涛/ 2/ )/ 1/ )/ (/ 武汉大学/ 软件工程/ 国家/ 重点/ 实验室/ 武汉/ 430072/ )/ 2/ )/ (/ 国防科学技术大学/ 计算机/ 学院/ 网络/ 与/ 信息安全/ 研究所/ 长沙/ 410073/ )/ 摘要/ 近年来/ ,/ 软件/ 的/ 可信性/ 成为/ 软件/ 质量/ 的/ 焦点/ ,/ 对/ 软件/ 可信性/ 的/ 分析/ 、/ 度量/ 和/ 应用/ 支撑/ 成为/ 热点问题/ ./ 对/ 软件/ 实施/ 有效/ 的/ 监控/ 是/ 提升/ 软件/ 可信性/ 的/ 一种/ 重要途径/ ./ 然而/ 目前/ 的/ 研究/ 工作/ 主要/ 集中/ 在/ 软件/ 编码/ 以及/ 相关/ 技术/ 的/ 实现/ 层/ ,/ 缺乏/ 一套/ 系统/ 的/ 软件体系结构/ 设计/ 方法/ 以/ 指导/ 、/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 的/ 分析/ 和/ 设计/ ./ 通过/ 引入/ 面向/ 侧面/ 的/ 软件体系结构/ 设计/ 方法/ 及其/ 相关/ 概念/ ,/ 文中/ 提出/ 一种/ 支持/ 运行/ 监控/ 的/ 可信/ 软件体系结构/ 设计/ 方法/ ./ 在/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 构造/ 模型/ TSCM/ 的/ 基础/ 上/ ,/ 利用/ 一种/ 面向/ 侧面/ 的/ 体系结构/ 描述语言/ AC2/ -/ ADL/ 描述/ 具有/ 监控/ 能力/ 的/ 软件体系结构/ ,/ 试图/ 为/ 分析/ 和/ 设计/ 具有/ 监控/ 能力/ 的/ 系统/ 的/ 软件体系结构/ 提供/ 一种/ 有效/ 的/ 解决方案/ ./ 通过/ 结合/ 网上/ 拍卖/ 系统/ 的/ 案例/ 展示/ 该/ 方法/ 的/ 主要/ 步骤/ 和/ 结果/ ,/ 讨论/ 了/ 研究/ 中/ 存在/ 的/ 问题/ 和/ 进一步/ 的/ 工作/ ./ 关键词/ 面向/ 侧面/ 的/ 体系结构/ 描述语言/ ;/ 面向/ 侧面/ 的/ 软件开发/ 方法/ ;/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 构造/ 模型/ ;/ 软件/ 工/ 1/ 引言/ 软件/ 无所不在/ ./ 然而/ ,/ 软件/ 的/ 应用/ 需求/ 愈来愈多/ ,/ 复杂度/ 愈来愈/ 高/ ,/ 可用性/ 要求/ 愈来愈/ 强/ ,/ 日趋/ 庞大/ 的/ 软件系统/ 并/ 不/ 总是/ 可以/ 让/ 人/ 信任/ ./ 随着/ 对/ 软件/ 质量/ 要求/ 的/ 日益/ 提高/ ,/ “/ 可信/ ”/ 成为/ 了/ 当前/ 软件/ 质量/ 研究/ 和/ 实践/ 的/ 关键/ 特性/ ./ 可以/ 把/ “/ 软件/ 可信性/ ”/ 定义/ 为/ 软件/ 的/ 行为/ 和/ 结果/ 符合/ 使用者/ 预期/ 的/ 程度/ ,/ 而/ 可信/ 软件/ 生产/ 技术/ 则/ 是/ 以/ 提高/ 软件/ 可信性/ 为/ 主要/ 目的/ 的/ 软件/ 生产/ 技术/ ./ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 构造/ 模型/ TSCM/ (/ TrustedSoftwareConstitutionModelbasedonMonitoring/ )/ [/ 1/ ]/ 是/ 一种/ 提高/ 软件/ 可信性/ 的/ 软件/ 生产/ 技术/ ./ 该/ 模型/ 认为/ 对/ 软件/ 实施/ 有效/ 的/ 监控/ 以/ 获得/ 软件/ 的/ 运行/ 状态/ ,/ 并/ 通过/ 将/ 监控/ 结果/ 与/ 预期/ 行为/ 进行/ 比较/ ,/ 可以/ 有效/ 地/ 掌握/ 软件/ 行为/ 的/ 可信/ 程度/ ,/ 且/ 有助于/ 准确/ 分析/ 和/ 定位/ 软件/ 故障/ ./ 因此/ 在/ 软件/ 中以/ 适当/ 的/ 方式/ 注入/ 监控/ 能力/ ,/ 将/ 是/ 提升/ 软件/ 可信性/ 的/ 一种/ 重要途径/ ./ 但是/ 软件/ 的/ 可信性/ 是/ 贯穿/ 软件/ 生产/ 和/ 运行/ 全过程/ 的/ 质量/ 属性/ ,/ 通常/ 是/ 软件系统/ 的/ 全局/ 约束/ ,/ 需要/ 伴随/ 着/ 软件开发/ 过程/ 逐步/ 地/ 设计/ 出来/ [/ 2/ ]/ ./ 而/ 目前/ 的/ 研究/ 工作/ 主要/ 集中/ 在/ 软件/ 编码/ 以及/ 相关/ 技术/ 的/ 实现/ 层/ [/ 3/ -/ 5/ ]/ ,/ 缺乏/ 一套/ 系统/ 的/ 软件体系结构/ 设计/ 方法/ 以/ 指导/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 的/ 分析/ 和/ 设计/ ./ 近年来/ ,/ 软件体系结构/ (/ SoftwareArchitecture/ ,/ SA/ )/ 的/ 研究/ 受到/ 了/ 广泛/ 的/ 关注/ 和/ 重视/ ./ 在/ SA/ 的/ 研究/ 中/ ,/ 通过/ 显式/ 地/ 表示/ 系统/ 的/ 体系结构/ 以及/ 其中/ 的/ 组成/ 元素/ ,/ 如/ 构件/ 、/ 连接件/ 等/ ,/ 可以/ 在/ 高/ 抽象层次/ 处理/ 诸如/ 全局/ 组织/ 和/ 控制结构/ 、/ 功能/ 到/ 计算/ 单元/ 的/ 分配/ 、/ 计算/ 单元/ 间/ 的/ 高层/ 交互/ 等/ 设计/ 问题/ [/ 6/ ]/ ./ 然而/ 常规/ 的/ 软件体系结构/ 设计/ 方法/ 几乎/ 都/ 是/ 以/ 业务/ 过程/ 和/ 用例/ 脚本/ 为/ 主要/ 关注点/ ,/ 设计/ 出/ 软件体系结构/ 的/ 基本/ 结构/ ./ 然后/ 在/ 软件体系结构/ 中以/ 直接/ 横切/ 构件/ 和/ 连接件/ 的/ 形式/ ,/ 将/ 与/ 系统/ 相关/ 的/ 可信性/ 设计方案/ 加入/ 到/ 基本/ 结构/ 中去/ ./ 由于/ 没有/ 简单/ 规范/ 地/ 考虑/ 满足/ 系统/ 可信性/ 的/ 设计/ 步骤/ ,/ 使得/ 设计/ 过程/ 变得复杂/ 起来/ ./ 此外/ 由于/ 非/ 规范/ 地/ 加入/ 满足/ 这些/ 设计方案/ ,/ 模糊/ 了/ 构件/ 和/ 连接件/ 的/ 角色/ 与/ 边界/ ,/ 使得/ 设计/ 结果/ 也/ 变得/ 难以/ 理解/ ./ 因此/ ,/ 运用/ 分而治之/ 的/ 策略/ ,/ 构建/ 可信/ 软件系统/ 的/ 体系结构/ ,/ 是/ 设计/ 可信/ 软件/ 的/ 关键/ ./ 随着/ 面向/ 侧面/ 的/ 软件开发/ (/ AOSD/ )/ 方法/ 的/ 出现/ 以及/ 相关/ 技术/ 的/ 不断/ 发展/ 与/ 成熟/ ,/ 该/ 方法/ 成为/ 可信/ 软件/ 生产/ 技术/ 发展/ 的/ 契机/ ./ 该/ 方法/ 充分体现/ 了/ 关注点/ 分离/ (/ SeparationofConcerns/ ,/ SoC/ )/ 的/ 思想/ ,/ 通过/ 使用/ 侧面/ (/ aspect/ )/ 及其/ 相关/ 概念/ 封装/ 和/ 管理/ 分布/ 在/ 软件/ 开发周期/ 各个/ 阶段/ 的/ 横切/ 属性/ ,/ 有利于/ 提高/ 软件产品/ 的/ 质量/ ,/ 并/ 减少/ 适配/ 、/ 演化/ 和/ 维护/ 的/ 开销/ ./ 因此/ ,/ 在/ 软件体系结构/ 层/ ,/ 使用/ 侧面/ 建模/ 和/ 管理软件/ 的/ 可信性/ ,/ 可/ 进一步提高/ 软件体系结构/ 设计方案/ 的/ 可/ 理解/ 性/ 、/ 可/ 演化/ 性/ 和/ 重用/ 性/ ./ 本文/ 为/ 分析/ 和/ 设计/ 具有/ 监控/ 能力/ 的/ 软件系统/ 的/ 软件体系结构/ 提供/ 了/ 一种/ 有效/ 的/ 解决方案/ ./ 在/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 构造/ 模型/ 的/ 基础/ 上/ ,/ 该/ 方法/ 利用/ 一种/ 面向/ 侧面/ 的/ 体系结构/ 描述语言/ AC2/ -/ ADL/ 描述/ 具有/ 监控/ 能力/ 的/ 软件系统/ ,/ 并/ 研究/ 结合/ 电子商务/ 领域/ 的/ 网上/ 拍卖/ 系统/ ,/ 讨论/ 了/ 主要/ 设计/ 过程/ ,/ 对/ 可信/ 软件/ 的/ 体系结构/ 设计/ 具有/ 一定/ 的/ 参考/ 作用/ ./ 2/ 相关/ 研究/ 工作/ 首先/ 介绍/ 面向/ 侧面/ 的/ 软件体系结构/ 设计/ 领域/ 中/ 主要/ 的/ 研究/ 工作/ ,/ 然后/ 给出/ TSCM/ 模型/ 的/ 基本/ 思想/ ./ 2.1/ 面向/ 侧面/ 的/ 软件体系结构/ 设计/ 方法/ 随着/ 面向/ 侧面/ 的/ 程序设计/ AOP/ (/ Aspect/ -/ Orien/ -/ tedProgramming/ )/ [/ 7/ ]/ 技术/ 的/ 成熟/ ,/ 在/ 软件/ 生命周期/ 早期/ 阶段/ 进一步/ 研究/ 和/ 开发/ 侧面/ 技术/ [/ 8/ ]/ ,/ 逐渐/ 引起/ 人们/ 的/ 重视/ ./ 在/ 软件体系结构/ 设计阶段/ 以及/ 在/ 软件体系结构/ 的/ 抽象层次/ 上/ ,/ 研究/ 和/ 应用/ 侧面/ 技术/ 对/ 研究/ 关注点/ 的/ 建模/ 具有/ 重要/ 意义/ ./ 首先/ ,/ 利用/ 面向/ 侧面/ 的/ 设计/ 方法/ 设计/ 出/ 的/ 软件体系结构/ 可以/ 解决/ 软件体系结构/ 设计方案/ 中/ 各种/ 设计/ 决策/ 、/ 行为/ 和/ 特征/ 混杂/ 与/ 分散/ 在/ 软件体系结构/ 层/ 多个/ 构件/ 和/ 连接件/ 中/ 的/ 问题/ ./ 这些/ 横切/ 的/ 内容/ 可以/ 单独/ 地被/ 模块化/ ,/ 使/ 软件体系结构/ 关注点/ 能/ 被/ 直接/ 和/ 明确/ 地/ 体现/ 和/ 跟踪/ ,/ 可以/ 提高/ 软件体系结构/ 的/ 可/ 理解/ 性/ 和/ 可维护性/ ,/ 有利于/ 软件体系结构/ 的/ 演化/ 和/ 重用/ ./ 其次/ ,/ 利用/ 面向/ 侧面/ 的/ 设计/ 方法/ 设计/ 出/ 的/ 软件体系结构/ ,/ 可以/ 为/ 后续/ 阶段/ 使用/ AOP/ 实现/ 技术/ 提/ Page3/ 供/ 获取/ 和/ 标识/ 代码/ 层/ 侧面/ 的/ 线索/ ,/ 有利于/ AOP/ 编码/ 技术/ 的/ 高效/ 应用/ ,/ 有利于/ AOP/ 编码/ 阶段/ 与/ 软件体系结构/ 设计阶段/ 更/ 顺利/ 地/ 衔接/ ./ 目前/ ,/ 面向/ 侧面/ 的/ 软件体系结构/ 研究/ 已有/ 了/ 一些/ 代表性/ 的/ 工作/ ./ Garcia/ [/ 9/ ]/ 等/ 人/ 提出/ 了/ 一个/ 面向/ 侧面/ 设计/ 与/ 特殊/ 领域/ 相结合/ 的/ 典型/ 案例/ ./ 他们/ 将/ 面向/ 侧面/ 的/ 体系结构/ 引入/ 到/ 多/ agent/ 的/ 系统/ 设计/ 中/ ,/ 使用/ 侧面/ 来/ 表达/ 那些/ 正交和/ 横切/ 于/ 系统/ 的/ agent/ 的/ 功能/ ./ 此外/ ,/ Pinto/ [/ 10/ ]/ 等/ 人/ 提出/ 了/ 基于/ 构件/ 和/ 侧面/ 的/ 软件体系结构/ 描述语言/ DAOP/ -/ ADL/ ./ 该/ 语言/ 根据/ 组成/ 软件系统/ 的/ 构件/ 、/ 侧面/ 及其/ 交互/ 关系/ ,/ 描述/ 一个/ 应用/ 系统/ 的/ 软件体系结构/ ,/ 并/ 通过/ 动态/ 的/ 面向/ 侧面/ 平台/ DAOP/ 支持/ 构件/ 中/ 侧面/ 的/ 动态/ 织入/ ./ Batista/ [/ 11/ ]/ 等/ 人/ 则/ 通过/ 扩展/ ACME/ 语言/ 来/ 描述/ 侧面/ 连接件/ 以/ 呈现/ 体系结构/ 层/ 侧面/ 与/ 构件之间/ 复杂/ 的/ 交互/ ./ 北京大学/ 的/ 梅宏/ 教授/ [/ 12/ ]/ 等/ 人于/ 2003/ 年/ 4/ 月/ 在/ 《/ 软件/ 学报/ 》/ 上/ 发表/ 了/ 论文/ “/ ABC/ :/ 基于/ 体系结构/ 、/ 面向/ 构件/ 的/ 软件开发/ 方法/ ”/ ./ 该/ 论文/ 为了/ 更好/ 地/ 基于/ 构件/ 描述/ 软件体系结构/ ,/ 应用/ 了/ 面向/ 侧面/ 的/ 方法/ 和/ 技术/ ./ 广东/ 工业/ 大学/ 的/ 张立臣/ 教授/ [/ 13/ ]/ 等/ 人/ 从/ 结构/ 建模/ 、/ 行为/ 建模/ 、/ 侧面/ 织入/ 及/ 代码/ 产生/ 等/ 几个/ 方面/ 研究/ 了/ 面向/ 侧面/ 的/ 建模/ 方法/ ./ 在/ 这些/ 研究/ 工作/ 的/ 基础/ 上/ ,/ 本文/ 引入/ 一种/ 面向/ 侧面/ 的/ 体系结构/ 设计/ 方法/ ,/ 并/ 利用/ 面向/ 侧面/ 的/ 描述语言/ AC2/ -/ ADL/ 描述/ 面向/ 侧面/ 的/ 软件体系结构/ ./ 该/ 方法/ 既/ 为/ 后续/ 阶段/ 的/ 软件开发/ 提供/ 有力/ 的/ 线索/ 和/ 保证/ ,/ 也/ 为/ 最终/ 软件/ 在/ 运行/ 时/ 的/ 监控/ 结果/ 的/ 分析/ 和/ 验证/ 提供/ 可追踪/ 的/ 依据/ ./ 2.2/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 构造/ 模型/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 构造/ 模型/ TSCM/ 是/ 由/ 国防科学技术大学/ 可信/ 软件/ 研究组/ 研发/ 的/ 一种/ 可信/ 软件/ 生产/ 方法/ :/ 通过/ 注入/ 机制/ 为/ 软件/ 注入/ 监控/ 能力/ ,/ 并/ 以此/ 为/ 基础/ 通过/ 软件/ 运行/ 监控/ 机制/ 提供/ 软件/ 运行/ 的/ 监控/ 能力/ ./ TSCM/ 可以/ 为/ 一类/ 原本/ 没有/ 监控/ 能力/ 的/ 软件系统/ 注入/ 监控/ 能力/ ,/ 并/ 能/ 在/ 系统/ 运行/ 时/ 有效/ 地/ 对系统/ 的/ 行为/ 、/ 状态/ 进行/ 监控/ ./ 此外/ TSCM/ 还/ 利用/ 源代码/ 表示/ 技术/ 和/ AOP/ 技术/ ,/ 依靠/ 一系列/ 软件/ 开发工具/ ,/ 帮助/ 编程人员/ 表达/ 监控/ 需求/ ,/ 自动/ 生成/ 实现/ 监控/ 的/ 侧面/ 代码/ ,/ 并/ 最终/ 将/ 监控/ 代码/ 织入/ 软件系统/ 内部/ ,/ 使得/ 软件系统/ 具备/ 监控/ 能力/ ./ 图/ 1/ 展示/ 了/ 该/ 模型/ 的/ 总体/ 结构/ ,/ TSCM/ 分为/ 两/ 大部分/ 共/ 5/ 个/ 模块/ :/ 源代码/ 分析/ 模块/ 、/ 监控/ 需求/ 表达/ 模块/ 、/ 监控/ 代码生成/ 模块/ 和/ 监控/ 代码/ 织入/ 模块/ 组成/ 第一/ 部分/ ,/ 主要/ 完成/ 监控/ 能力/ 注入/ 的/ 功能/ ;/ 支撑/ 工具/ 为/ 第二/ 部分/ ,/ 主要/ 为/ 其它/ 4/ 个/ 模块/ 功能/ 的/ 实现/ 提供/ 模板/ 和/ 工具/ 支持/ :/ (/ 1/ )/ 源代码/ 分析/ 模块/ ./ 负责/ 提取/ 待/ 监控/ 软件系统/ 的/ 源代码/ 信息/ ./ 通过/ 利用/ 代码/ 表示/ 工具/ 对原/ 系统/ 代码/ 进行/ 分析/ ,/ 源代码/ 分析/ 模块/ 将/ 其/ 转化/ 为/ XML/ 的/ 中间/ 形式/ ,/ 并/ 利用/ XML/ 解析器/ 将/ 代码/ 中/ 的/ 类/ 、/ 函数/ 、/ 变量/ 等/ 信息提取/ 出来/ ./ 最后/ 以/ 比较/ 直观/ 的/ 方式/ 将/ 代码/ 信息/ 完整/ 地/ 展现/ 出来/ ,/ 为/ 监控/ 需求/ 表达/ 模块/ 功能/ 的/ 实现/ 提供/ 支持/ ./ (/ 2/ )/ 监控/ 需求/ 表达/ 模块/ ./ 在/ 源代码/ 分析/ 模块/ 的/ 支持/ 下/ ,/ 确定/ 所/ 需要/ 监控/ 的/ 对象/ 如/ 函数/ 变量/ 等/ 内容/ ,/ 并/ 根据/ 支撑/ 工具/ 模块/ 提供/ 的/ 监控/ 需求/ 表达式/ 模板/ 帮助/ 编程人员/ 完成/ 监控/ 需求/ 表达式/ 的/ 描述/ ,/ 将/ 监控/ 需求/ 保存/ 为/ XML/ 需求/ 文档/ ,/ 为/ 监控/ 代码/ 的/ 生成/ 提供/ 依据/ ./ (/ 3/ )/ 监控/ 代码生成/ 模块/ ./ 在/ 监控/ 需求/ 表达/ 模块/ 以及/ 软件体系结构/ 的/ 支持/ 下/ ,/ 负责/ 根据/ 监控/ 需求/ 表达式/ 的/ 描述/ ,/ 调用/ 监控/ 代码生成/ 工具/ 和/ 通用/ 模块/ 库中/ 的/ 监控/ 代码/ 模板/ ,/ 生成/ 适合/ 所/ 选用/ 的/ AOP/ 编织/ 器所/ 需/ 的/ 侧面/ 监控/ 代码/ ./ (/ 4/ )/ 监控/ 代码/ 织入/ 模块/ ./ 在/ 监控/ 代码/ 织入/ 模块/ 的/ 支持/ 下/ ,/ 负责/ 根据/ 原/ 系统/ 的/ 类型/ 和/ 待/ 监控/ 软件系统/ 的/ 类型/ ,/ 从/ 支撑/ 工具/ 模块/ 中/ 选用/ 合适/ 的/ 监控/ 服务/ 和/ 监控/ 客户/ ./ 并/ 调用/ 监控/ 代码生成/ 模块/ 选用/ 的/ AOP/ 编织/ 器/ ,/ 将/ 侧面/ 代码/ 中/ 的/ 监控/ 探针/ 和/ 监控/ 服务/ 一起/ 织入/ 到/ 待/ 监控/ 的/ 软件系统/ 内部/ ,/ 使/ 其/ 具备/ 可/ 监控/ 的/ 能力/ ./ (/ 5/ )/ 支撑/ 工具/ 模块/ ./ 负责/ 为/ 其它/ 模块/ 功能/ 的/ 实现/ 提供/ 工具/ 和/ 模板/ 支持/ ./ 如/ 可以/ 分别/ 为/ 源代码/ 分析/ 、/ 监控/ 需求/ 表达/ 、/ 监控/ 代码生成/ 和/ 监控/ 代码/ 织入/ 模块/ 提供/ 代码/ 分析/ 工具/ 、/ 监控/ 需求/ 描述/ 工具/ 、/ 监控/ 代码生成/ 工具/ 和/ AOP/ 编织/ 器/ ./ 通用/ 模板/ 库/ 不仅/ 可以/ 为/ 描述/ 监控/ 需求/ 和/ 生成/ 监控/ 代码/ 提供/ 标准/ 的/ 格式/ 模板/ ,/ 还/ 可以/ 为/ 不同/ 类型/ 的/ 目标/ 系统/ 提供/ 监控/ 服务/ 和/ 监控/ 客户/ ./ Page4/ 当/ 注入/ 了/ 监控/ 能力/ 的/ 软件系统/ 运行/ 时/ ,/ 可以/ 通过/ 织入/ 的/ 监控/ 探针/ 获取/ 该/ 软件系统/ 的/ 实时/ 状态/ 和/ 行为/ ,/ 由/ 监控/ 服务/ 对/ 监控/ 到/ 的/ 信息/ 进行/ 统一/ 存储/ 和/ 管理/ ,/ 并/ 通过/ 监控/ 客户端/ 向/ 用户/ 展示/ 系统/ 的/ 状态/ ./ TSCM/ 在/ 监控/ 技术/ 的/ 基础/ 上/ ,/ 为/ 可信/ 软件/ 的/ 构造/ 提供/ 了/ 一种/ 可行/ 的/ 方法/ ./ 然而/ ,/ 目前/ 该/ 工作/ 仍停留/ 在/ 软件开发/ 的/ 实现/ 阶段/ ,/ 缺乏/ 一套/ 系统/ 的/ 软件体系结构/ 设计/ 方法/ 以/ 指导/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 的/ 分析/ 和/ 设计/ ./ 因此/ ,/ 本文/ 采用/ 面向/ 侧面/ 体系结构/ 设计/ 方法/ 描述/ 与/ 分析/ 具有/ 监控/ 系统/ 能力/ 的/ 软件体系结构/ ,/ 形成/ 一套/ 面向/ 侧面/ 的/ 可信/ 软件体系结构/ 设计/ 方法/ ,/ 从而/ 为/ 生产/ 可信/ 软件/ 提供/ 可靠/ 的/ 保证/ ,/ 使得/ 所/ 生成/ 的/ 具有/ 监控/ 能力/ 的/ 软件系统/ ,/ 反过来/ 又/ 能/ 为/ 软件/ 的/ 可信性/ 提供/ 有力/ 的/ 证据/ ./ 下面/ ,/ 本文/ 将/ 重点/ 介绍/ 该/ 设计/ 方法/ 以及/ 根据/ 该/ 方法/ 定义/ 的/ 一种/ 面向/ 侧面/ 的/ 体系结构/ 描述语言/ AC2/ -/ ADL/ ,/ 并/ 结合/ 电子商务/ 领域/ 中/ 的/ 网上/ 拍卖/ 系统/ ,/ 说明/ 该/ 方法/ 的/ 实施/ 过程/ ./ 3/ 面向/ 侧面/ 的/ 可信/ 软件体系结构/ 设计/ 方法/ 下面/ 首先/ 阐述/ 面向/ 侧面/ 的/ 软件体系结构/ 设计/ 方法/ 的/ 基本/ 思想/ 以及/ 面向/ 侧面/ 的/ 体系结构/ 描述语言/ AC2/ -/ ADL/ 的/ 概念/ 框架/ 以及/ 主要/ 的/ 语法/ 元素/ ,/ 然后/ 给出/ 面向/ 侧面/ 的/ 可信/ 软件体系结构/ 设计/ 方法/ ./ 3.1/ 基本/ 思想/ 根据/ 关注点/ 分离/ 认为/ :/ 区分/ 、/ 捕获/ 和/ 建模/ 小/ 的/ 软件/ 实体/ 的/ 功能/ 比作/ 用于/ 整个/ 应用程序/ 要/ 容易/ 得/ 多/ ./ 可以/ 把/ 整个/ 软件系统/ 的/ 设计/ 作为/ 一个/ 较大/ 的/ 单个/ 关注点/ ,/ 它/ 由/ 不同/ 的/ 小/ 的/ 关注点/ 组合而成/ ./ 每个/ 小/ 的/ 关注点/ 是/ 不同/ 的/ 涉众/ 根据/ 自己/ 的/ 兴趣/ 所/ 关注/ 的/ 某/ 一个/ 方面/ ./ 在/ 这些/ 关注点/ 中/ ,/ 有些/ 关注点/ 只/ 关注/ 于/ 自身/ 的/ 业务/ 逻辑/ 和/ 功能/ ,/ 而/ 另/ 一些/ 关注点/ ,/ 如非/ 功能性/ 关注点/ ,/ 往往/ 趋向于/ 分散/ 和/ 混杂/ 在/ 系统/ 其它/ 的/ 关注点/ 之中/ ./ 这种/ 横切/ 的/ 结构/ 不但/ 造成/ 体系结构/ 层中/ 构件/ 和/ 连接件/ 之间/ 的/ 紧/ 耦合/ ,/ 而且/ 还/ 使得/ 构件/ 和/ 连接件/ 中/ 的/ 内容/ 变得/ 混杂/ ./ 它们/ 所/ 代表/ 的/ 概念/ 变得复杂/ ,/ 它们/ 的/ 边界/ 也/ 变得/ 模糊起来/ ./ 如何/ 使用/ 适当/ 的/ 体系结构/ 元素/ 描述/ 和/ 建模/ 这些/ 不同/ 性质/ 的/ 关注点/ 以及/ 如何/ 提供/ 有效/ 的/ 组合/ 方式/ 将/ 这些/ 体系结构/ 元素/ 组装/ 成/ 最终/ 的/ 系统/ 软件体系结构/ 是/ 本文/ 研究/ 体系结构/ 设计/ 方法/ 的/ 重点/ ./ 传统/ 的/ 体系结构/ 设计/ 方法/ 缺乏/ 相应/ 的/ 机制/ 显式/ 地/ 描述/ 这些/ 横切/ 的/ 关注点/ 以及/ 各种/ 关注点/ 之间/ 的/ 组合/ 关系/ ./ 本文/ 基于/ AOSD/ 以及/ EA/ (/ EarlierAspect/ ,/ 早期/ 侧面/ )/ 的/ 思想/ ,/ 在/ 软件/ 的/ 体系结构/ 层/ 引入/ 一种/ 新/ 的/ 构件/ 类型/ —/ —/ —/ 侧面/ 构件/ 可/ 对/ 横切/ 关注点/ 功能/ 进行/ 建模/ ,/ 同时/ 保留/ 传统/ 的/ 构件/ 概念/ 以/ 建模/ 系统/ 的/ 功能性/ 关注点/ (/ 这里/ 称之为/ 系统/ 的/ 主/ 关注点/ )/ ./ 通过/ 抽象/ 出/ 编织/ 机制/ 中/ 编织/ 器/ 的/ 功能/ ,/ 将/ 其/ 作为/ 体系结构/ 中/ 的/ 一种/ 新/ 的/ 连接件/ 类型/ —/ —/ —/ 侧面/ 连接件/ ,/ 来/ 呈现/ SA/ 元素/ 之间/ 复杂/ 的/ 交互/ ,/ 以/ 解决/ 不同/ 关注点/ 的/ 混杂/ 和/ 散列/ 等/ 问题/ ./ 最后/ ,/ 通过/ 显式/ 地/ 表达/ 软件体系结构/ 语境/ 中/ 的/ 注入/ 点/ ,/ 从而/ 在/ 体系结构/ 的/ 配置/ // 拓扑/ 层中/ 表达/ 各/ 元素/ 实例/ 的/ 组合/ 关系/ ./ 尽管/ 同时/ 引入/ 体系结构/ 侧面/ 构件/ 、/ 侧面/ 连接件/ 及其/ 相关/ 概念/ 既会/ 增加/ 体系结构/ 中/ 的/ 基本/ 元素/ ,/ 也/ 会/ 增加/ 元素/ 之间/ 关系/ 的/ 复杂性/ ,/ 但/ 这样/ 做/ 可以/ 极大地提高/ 软件体系结构/ 的/ 设计/ 效率/ 并/ 改进/ 其/ 质量/ ./ 因此/ 这样/ 做/ 是/ 十分必要/ 的/ ,/ 其/ 理由/ 是/ :/ 侧面/ 构件/ 与/ 传统/ 构件/ 类型/ 的/ 本质区别/ 在于/ 侧面/ 构件/ 的/ 批量/ 注入/ 特性/ (/ quantification/ )/ 和/ 不/ 知觉/ 注入/ 特性/ (/ oblivi/ -/ ousness/ )/ [/ 14/ ]/ ,/ 即/ 侧面/ 构件/ 能以/ 一种/ 不/ 知觉/ 的/ 方式/ 影响/ 系统/ 中/ 多种/ 构件/ 的/ 结构/ 和/ 行为/ ./ 而/ 传统/ 构件/ 只能/ 通过/ 明确/ 的/ 接口定义/ ,/ 向/ 外部/ 发布/ // 定制/ 相应/ 的/ 服务/ ./ 此外/ ,/ 抽象/ 出/ 侧面/ 连接件/ 的/ 目的/ 在于/ 将/ 注入/ 规则/ 从/ 侧面/ 构件/ 规范/ 中/ 分离出来/ ,/ 使得/ 侧面/ 构件/ 只/ 关注/ 于/ 自身/ 的/ 横切/ 功能/ 而/ 无需/ 考虑/ 注入/ 的/ 位置/ 和/ 注入/ 的/ 时机/ ,/ 有利于/ 侧面/ 构件/ 的/ 重用/ 并/ 为/ 实现/ 层/ 的/ 编织/ 机制/ 提供/ 明确/ 的/ 线索/ ,/ 因而/ 不会/ 给/ 构造/ 和/ 理解/ 体系结构/ 设计方案/ 增添/ 负担/ ./ 图/ 2/ 展现/ 了/ 该/ 方法/ 的/ 基本/ 过程/ ./ Page53/ ./ 2/ 面向/ 侧面/ 的/ 体系结构/ 描述语言/ 体系结构/ 描述语言/ 为/ 体系结构/ 的/ 设计/ 提供/ 一种/ 规范化/ 的/ 描述/ ,/ 是/ 基于/ 体系结构/ 软件开发/ 的/ 基础/ ./ 为了/ 刻画/ 面向/ 侧面/ 的/ 体系结构/ ,/ AC2/ -/ ADL/ 除了/ 传统/ 的/ ADL/ 中所/ 包含/ 的/ 概念/ 元素/ 以外/ ,/ 还/ 引入/ 了/ 侧面/ 构件/ (/ aspectualcomponent/ )/ 和/ 侧面/ 连接件/ (/ aspectualconnector/ )/ 作为/ 体系结构/ 层/ 的/ 第一类/ 元素/ ./ 然而/ ,/ 一个/ 好/ 的/ ADL/ (/ ArchitectureDescriptionLanguage/ )/ 不仅/ 要/ 有/ 较/ 好/ 的/ 抽象/ 表达能力/ ,/ 还应/ 能够/ 在/ 体系结构/ 设计阶段/ 对/ 有关/ 性质/ 进行/ 分析/ 和/ 推理/ ./ 因此/ ,/ AC2/ -/ ADL/ 结合/ 一种/ 时序/ 逻辑/ 语言/ XYZ/ // E/ [/ 15/ ]/ 对/ 各种/ 构件/ 的/ 行为/ 进行/ 逐步求精/ ,/ 并/ 结合/ 面向/ 侧面/ 的/ 软件开发/ 中/ 特有/ 的/ 性质/ 和/ 概念/ ,/ 扩展/ 了/ XYZ/ // E/ 中类/ 其中/ 主要/ 元素/ 的/ 相关/ 语法/ ./ 侧面/ 构件/ ./ 不同于/ 传统/ 构件/ ,/ 侧面/ 构件/ 作为/ 一种/ 新/ 的/ 元素/ ,/ 在/ 属性/ 和/ 功能/ 上/ 有/ 了/ 较大/ 的/ 改变/ ./ 为了/ 体现/ 自身/ 的/ 横切/ 特征/ ,/ 侧面/ 构件/ 定义/ 一种/ 特殊/ 的/ 接口/ 称其为/ 横切/ 接口/ (/ crosscuttinginterfaces/ )/ ,/ 它/ 用于/ 规范/ 侧面/ 构件/ 能够/ 提供/ 的/ 计算/ 委托/ 及其/ 用途/ 上/ 的/ 约束/ ./ 通过/ 不同/ 的/ 横切/ 接口/ ,/ 侧面/ 构件/ 可以/ 对/ 不同/ 的/ 构件/ 进行/ 行为/ 和/ 结构/ 上/ 的/ 影响/ ./ 在/ AC2/ -/ ADL/ 中/ ,/ 侧面/ 构件/ 的/ 基本/ 语法/ 由图/ 3/ 以/ 扩展/ BNF/ 形式/ 给出/ ,/ 其中/ 加粗/ 的/ 符号/ 为/ 终结符/ ./ aspectComponent/ ∷/ =/ %/ aspectComponentcomponent/ _/ name/ =/ =/ [/ [/ SharedItemDeclPart/ ;/ ]/ [/ methodDeclPart/ ;/ ]/ [/ crosscuttingInterfaces/ ;/ ]/ [/ %/ subArchtecturesubArchtecture/ _/ name/ =/ =/ [/ architetureDeclPart/ |/ null/ ;/ ]/ ]/ [/ %/ mappingDecl/ =/ =/ [/ [/ mapping/ _/ expression/ |/ null/ ;/ ]/ ]/ ]/ [/ %/ internalProcess/ =/ =/ □/ [/ conditionalelement/ _/ expression/ ;/ ]/ ]/ [/ %/ constrains/ =/ =/ [/ WherePart/ |/ null/ ;/ ]/ ]/ ]/ 根据/ 该/ 语法/ ,/ 下面/ 给出/ 侧面/ 构件/ 的/ 一些/ 设计/ 规则/ :/ (/ 1/ )/ 侧面/ 构件/ 由/ 横切/ 接口/ 、/ 侧面/ 构件/ 内部/ 行为/ 的/ 描述/ 、/ 数据类型/ 定义/ 和/ 方法/ 以及/ 相关/ 约束/ 等/ 元素/ 组成/ ./ (/ 2/ )/ 构件/ 内部/ 和/ 方法/ 中/ 的/ 行为/ 以及/ 约束条件/ 都/ 由/ XYZ/ // E/ 中/ 的/ 条件/ 元/ 表达式/ (/ conditionalelementexpression/ )/ 描述/ ./ (/ 3/ )/ 根据/ 系统/ 的/ 复杂性/ ,/ 侧面/ 构件/ 可/ 由/ 多个/ 不同/ 的/ 功能/ 单一/ 的/ 侧面/ 构件/ 复合/ 而成/ ,/ 因此/ 可以/ 含有/ 相应/ 的/ 子/ 体系结构/ ./ 通过/ 映射/ 声明/ (/ mappingdecla/ -/ ration/ )/ ,/ 外部/ 的/ 横切/ 接口/ 可以/ 委托/ 子/ 体系结构/ 中/ 元素/ 提供/ 的/ 相应/ 横切/ 服务/ ./ (/ 4/ )/ AC2/ -/ ADL/ 的/ 构件/ 以及/ 侧面/ 构件/ 的/ 接口/ 由/ 一组/ 端口/ (/ port/ )/ 和/ 操作/ (/ operation/ )/ 组成/ ,/ 操作/ 定义/ 了/ 构件/ 可以/ 提供/ 或/ 定制/ 所/ 需要/ 的/ 服务/ ,/ 可/ 由/ 构件/ 中/ 定义/ 的/ 方法/ 和/ 条件/ 元/ 表达式/ 组合/ 来/ 完成/ ,/ 端口/ 是/ 操作/ 和/ 外部环境/ 的/ 交互/ 点/ ./ 图/ 4/ 描述/ 了/ AC2/ -/ ADL/ 中/ 3/ 种/ 接口类型/ 的/ 定义/ ./ 其中/ 横切/ 接口/ 中/ 操作/ 被/ 分为/ 两种/ 不同/ 的/ 类型/ ,/ 它们/ 分别/ 被/ 表示/ 为/ add/ _/ Operation/ 和/ introduce/ _/ Operation/ ./ 其/ 语义/ 可/ 解释/ 为/ :/ 通过/ add/ _/ Operation/ 操作/ ,/ 横切/ 接口/ 可以/ 把/ 该/ 操作/ 中/ 的/ 方法/ 添加/ 到/ 目标/ 构建/ 中/ ,/ 以/ 增强/ 目标/ 构件/ 行为/ ;/ 而/ introduce/ _/ Operation/ 操作/ 体现/ 了/ 侧面/ 构件/ 的/ 静态/ 横切/ 的/ 特性/ ,/ 即/ 侧面/ 构件/ 可以/ 通过/ 该/ 操作/ 为/ 目标/ 构建/ 引入/ 相关/ 的/ 属性/ 、/ 方法/ 、/ 甚至/ 接口/ ,/ 从而/ 影响/ 目标/ 构建/ 的/ 结构/ ./ 这种/ 面向/ 侧面/ 所/ 特有/ 的/ 特征/ 使得/ 软件架构/ 师能/ 用/ 一种/ 真正/ 面向对象/ 的/ 方法/ 有效/ 地/ 建立/ 复杂/ 系统/ 的/ 模型/ ,/ 以/ 一种/ 本质/ 上/ 更/ 优雅/ 、/ 更/ 逼真/ 于/ 现实/ 结构/ 的/ 方式/ ,/ 注入/ 跨越/ 整个/ 系统/ 的/ 公共/ 行为/ ./ crosscuttingInterfaces/ ∷/ =/ %/ crosscuttingInterfacename/ =/ =/ [/ [/ %/ portport/ _/ name/ :/ PortType/ ]/ [/ %/ add/ _/ OperationOperation/ _/ name/ =/ =/ □/ [/ conditionalelement/ _/ expression/ ;/ ]/ ]/ ]/ requiredinterfaces/ ∷/ =/ %/ requiredInterfacename/ =/ =/ [/ [/ %/ portport/ _/ name/ :/ PortType/ ]/ [/ %/ OperationOperation/ _/ name/ =/ =/ □/ [/ providedInterfaces/ ∷/ =/ %/ providedInterfacename/ =/ =/ [/ [/ %/ portport/ _/ name/ :/ PortType/ ]/ [/ %/ OperationOperation/ _/ name/ =/ =/ □/ [/ method/ ∷/ =/ %/ methodname/ =/ =/ □/ [/ conditionalelement/ _/ expression/ ;/ ]/ 侧面/ 连接件/ ./ 随着/ 侧面/ 构件/ 的/ 出现/ ,/ 如何/ 表达/ 侧面/ 构件/ 对/ 软件体系结构/ 中/ 元素/ 的/ 影响/ 是/ 面向/ 侧面/ 的/ 体系结构/ 设计/ 中/ 一个/ 重要/ 的/ 需要/ 解决/ 的/ 问题/ ./ 通过/ 定义/ 侧面/ 连接件/ 、/ 建模/ 侧面/ 构件/ 与/ 基本/ 构件/ 间/ 的/ 横切/ 关系/ ,/ 进而/ 可以/ 在/ 体系结构/ 层中/ 显示/ 地/ 表达/ 出面/ 向侧面/ 技术/ 中/ 编织/ 器/ 的/ 功能/ ./ 图/ 5/ 提供/ 了/ 侧面/ 连接件/ 的/ 主要/ 语法/ ,/ 其/ 相应/ 的/ 主要/ 设计/ 规则/ 如下/ :/ (/ 1/ )/ 与/ 构件/ 相似/ ,/ 侧面/ 连接件/ 也/ 由/ 一组/ 接口/ 组成/ ,/ 这些/ 接口/ 通常/ 被/ 称之为/ 角色/ ./ (/ 2/ )/ 侧面/ 连接件/ 包括/ 两种/ 角色/ ,/ 分别/ 为/ 注入/ 点/ 角色/ (/ pointcutRole/ )/ 和/ 横切/ 角色/ (/ crosscuttingRole/ )/ ./ 它们/ 定义/ 了/ 该/ 连接件/ 所/ 表示/ 交互/ 的/ 参与者/ ,/ 如/ 注入/ 点/ 角色/ 对应/ 一系列/ 被/ 横切/ 的/ 对象/ ,/ 而/ 横切/ 角色/ 的/ 扮演者/ 往往/ 是/ 侧面/ 构件/ 的/ 横切/ 接口/ ./ Page6/ (/ 3/ )/ 为了/ 保证/ 体系结构/ 中/ 的/ 构件/ 连接/ 以及/ 它们/ 之间/ 通信/ 的/ 正确/ ,/ 并/ 能够/ 推导/ 出所/ 期待/ 的/ 连接/ 服务/ ,/ 每个/ 角色/ 由/ 一组/ 端口/ 和/ 行为/ (/ behavior/ )/ 组成/ 了/ 该/ 角色/ 的/ 扮演者/ 需要/ 参与/ 的/ 活动/ ./ 在/ 实际/ 的/ 连接/ 中/ ,/ 角色/ 中/ 的/ 每个/ 行为/ 可/ 由/ 接口/ 中/ 的/ 操作/ 所/ 对应/ 的/ 方法/ 来/ 扮演/ ./ (/ 4/ )/ 通过/ 连接/ 协议/ (/ crosscuttingprotocol/ )/ ,/ 连接件/ 可以/ 定义/ 角色/ 中/ 行为/ 之间/ 交互/ 的/ 规范/ ./ 在/ AC2/ -/ ADL/ 中/ 分别/ 有/ 4/ 种/ 横切/ 交互/ 协议/ 类型/ ,/ 它们/ 分别/ 为/ before/ 、/ after/ 、/ around/ 以及/ replace/ ./ aspectConnector/ ∷/ =/ %/ aspectConnectorname/ =/ =/ [/ %/ pointcutRolename/ =/ =/ [/ [/ %/ portport/ _/ name/ :/ PortType/ ]/ [/ %/ behaviorsname/ ;/ ]/ ]/ %/ crosscuttingRolename/ =/ =/ [/ [/ %/ portport/ _/ name/ :/ PortType/ ]/ [/ %/ behaviorsname/ ;/ ]/ [/ %/ constrains/ =/ =/ [/ [/ WherePart/ |/ null/ ;/ ]/ ]/ %/ crosscuttingProtocols/ =/ =/ [/ [/ crosscuttingProtocol/ _/ expressions/ ;/ ]/ ]/ crosscuttingProtocol/ _/ expressions/ ∷/ =/ crosscuttingRole/ _/ name/ ./ behavior/ _/ namecrosscuttingProtocol/ _/ typespointcutRole/ _/ name/ ./ behavior/ _/ namecrosscuttingProtocol/ _/ types/ ∷/ =/ before/ |/ after/ |/ around/ |/ replace/ ]/ 体系结构/ 层中/ 的/ 注入/ 点/ ./ 在/ 面向/ 侧面/ 的/ 实现/ 阶段/ ,/ 注入/ 点/ (/ joinpoint/ )/ 是/ 程序执行/ 中/ 的/ 一组/ 精确/ 执行/ 点/ ,/ 例如/ 类中/ 的/ 方法/ 调用/ ./ 而/ 在/ 体系结构/ 层/ ,/ 对/ 注入/ 点/ 的/ 描述/ 将会/ 比/ 在/ 实现/ 层中/ 的/ 描述/ 更加/ 抽象/ ,/ 并且/ 所/ 囊括/ 的/ 概念/ 也/ 更加/ 广泛/ ./ 它/ 可以/ 是/ 接口/ 中/ 的/ 操作/ ,/ 也/ 可以/ 是/ 构件/ 的/ 接口/ ,/ 甚至/ 是/ 体系结构/ 中/ 的/ 某个/ 连接件/ 或/ 构件/ ,/ 这/ 也/ 意味着/ 侧面/ 不仅/ 可以/ 影响/ 构件/ 还/ 能/ 影响/ 构件/ 间/ 的/ 交互/ ./ 因此/ ,/ AC2/ -/ ADL/ 明确/ 地/ 定义/ 了/ 注入/ 点/ 的/ 类型/ ,/ 此外/ 为了/ 体现/ 横切/ 接口/ 的/ 批量/ 注入/ 机制/ ,/ 该/ 语言/ 定义/ 了/ 一组/ 切点/ 指示/ (/ PointcutDesigner/ ,/ PCD/ )/ ./ 下面/ 给出/ PCD/ 的/ 定义/ :/ (/ 1/ )/ PCD/ 可/ 分为/ 原子/ PCD/ 和/ 复合/ PCD/ ,/ 前者/ 是/ 不/ 含/ 任何/ 逻辑/ 操作符/ 的/ PCD/ ,/ 后者/ 是/ 用/ “/ and/ ”/ 、/ “/ not/ ”/ 将/ 其它/ PCD/ 连接起来/ 所/ 形成/ 的/ PCD/ ./ (/ 2/ )/ PCD/ 有/ ComPCD/ 、/ ConPCD/ 和/ and/ (/ ComPCD/ ,/ ConPCD/ )/ 三种/ 形式/ ./ ComPCD/ 由/ 构件/ 级/ (/ compo/ -/ nentJP/ )/ 、/ 接口/ 级/ (/ interfaceJP/ )/ 、/ 操作/ 级/ (/ operation/ -/ JP/ )/ 三种/ 不同/ 抽象层次/ 及/ 由/ 它们/ 所/ 形成/ 的/ 复合/ PCD/ (/ and/ (/ ComPCD/ ,/ ComPCD/ )/ )/ 所/ 组成/ ./ (/ 3/ )/ ConPCD/ 由/ 连接件/ 级/ (/ connectiorJP/ )/ 、/ 角色/ 级/ (/ roleJP/ )/ 、/ 行为/ 级/ (/ behaviorJP/ )/ 三种/ 不同/ 抽象层次/ 及/ 由/ 它们/ 所/ 形成/ 的/ 复合/ PCD/ (/ and/ (/ ComPCD/ ,/ ComPCD/ )/ )/ 所/ 组成/ ./ and/ (/ ComPCD/ ,/ ConPCD/ )/ 表示/ 一种/ 既/ 横切/ 构件/ 又/ 横切/ 连接件/ 的/ 混合/ PCD/ ./ 图/ 6/ 展示/ 了/ PCD/ 基本/ 语法/ ,/ 其中/ 符号/ comInst/ -/ Name/ 、/ intfName/ 、/ optName/ 分别/ 表示/ 构件/ 实例/ 名/ 、/ 接口/ 名/ 、/ 操作/ 名/ ;/ conInstName/ 、/ roleName/ 、/ behaName/ 分别/ 表示/ 连接件/ 实例/ 名/ 、/ 角色/ 名/ 、/ 行为/ 名/ ;/ 保留字/ PROINTF/ 、/ REQINTF/ 、/ PROROLE/ 、/ REQROLE/ 分别/ 表示/ 提供/ 类型接口/ 、/ 请求/ 类型接口/ 、/ 提供/ 类型/ 角色/ 、/ 请求/ 类型/ 角色/ ./ 通过/ 引入/ 逻辑/ 操作符/ 、/ 保留字/ 及/ 通配符/ “/ / ”/ 来/ 方便/ 、/ 精确/ 地/ 描述/ 扮演/ 侧面/ 连接件/ 的/ 同一/ 基本/ 角色/ ./ 例如/ :/ PCD/ :/ and/ (/ comInstName/ ./ PROINTF/ ,/ / ./ REQROLE/ )/ 表示/ 名为/ comInstName/ 的/ 构件/ 实例/ 所有/ 提供/ 接口/ 以及/ 所有/ 连接件/ 实例/ 的/ 请求/ 角色/ 都/ 为/ SA/ 层/ 的/ 注入/ 点/ ,/ 在/ 这些/ 位置/ 上/ 都/ 要/ 受到/ 横切/ 影响/ ./ PCD/ ∷/ =/ ComPCD/ |/ ConPCD/ |/ and/ (/ ComPCD/ ,/ ConPCD/ )/ ComPCD/ ∷/ =/ operationJP/ |/ interfaceJP/ |/ componentJP/ |/ operationJP/ ∷/ =/ comInstName/ ./ intfName/ ./ optName/ |/ not/ (/ operationJP/ )/ interfaceJP/ ∷/ =/ comInstName/ ./ intfName/ |/ comInstName/ ./ PROINTF/ |/ componentJP/ ∷/ =/ comInstName/ |/ / |/ not/ (/ componentJP/ )/ ConPCD/ ∷/ =/ behaviorJP/ |/ roleJP/ |/ connectorJP/ |/ and/ (/ ConPCD/ ,/ ConPCD/ )/ behaviorJP/ ∷/ =/ conInstName/ ./ roleName/ ./ beharName/ |/ not/ (/ behaviorJP/ )/ roleJP/ ∷/ =/ conInstName/ ./ roleName/ |/ conName/ ./ PROROLE/ |/ connectorJP/ ∷/ =/ conInstName/ |/ / |/ not/ (/ connectorJP/ )/ 面向/ 侧面/ 的/ 体系结构/ 配置/ ./ 体系结构/ 配置/ 描述/ 了/ 运行/ 时刻/ 各种/ 构件/ 和/ 连接件/ 之间/ 的/ 拓扑/ 结构/ ./ 如图/ 7/ 所示/ ,/ AC2/ -/ ADL/ 在/ 配置/ (/ configuration/ )/ 中/ 指明/ :/ (/ 1/ )/ 系统/ 中/ 的/ 哪些/ 注入/ 点/ (/ 通过/ 保留字/ play/ -/ PCD/ )/ 扮演/ 了/ 侧面/ 连接件/ 中/ 的/ 哪些/ 注入/ 点/ 角色/ ;/ (/ 2/ )/ 哪些/ 横切/ 接口/ (/ 通过/ 保留字/ play/ )/ 扮演/ 了/ 侧面/ 连接件/ 中/ 的/ 哪些/ 横切/ 角色/ ;/ (/ 3/ )/ 系统/ 元素/ 中/ 的/ 操作/ 与/ 哪些/ 角色/ 中/ 的/ 哪些/ 行为/ 绑定/ 关系/ (/ 通过/ 保留字/ attachment/ )/ 来/ 完整/ 地/ 描述/ 系统/ 的/ 拓扑/ 结构/ ./ Configuration/ ∷/ =/ %/ configuration/ =/ =/ [/ [/ ConfigurationBody/ ;/ ]/ ]/ ConfigurationBody/ ∷/ =/ pcdplayPCDaspectConr/ _/ Instance/ _/ name/ ./ baseRole/ _/ name/ |/ aspectCompt/ _/ Instance/ _/ name/ ./ crosscutting/ _/ Interfaces/ _/ nameplaysaspectConr/ _/ Instance/ _/ name/ ./ crosscuttingRole/ _/ name/ [/ %/ attachment/ =/ =/ [/ attachment/ _/ Expressions/ ;/ ]/ ]/ attachment/ _/ Expressions/ ∷/ =/ method/ _/ nameattachesbehavior/ _/ namePage7/ 连/ 的/ 连接件/ 的/ 接口/ 的/ 类型/ 必须/ 一致/ ;/ 该/ 与其/ 相连/ 的/ 连接件/ 角色/ 的/ 行为/ 保持一致/ 此外/ ,/ 在/ 设计/ 系统/ 的/ 配置/ 时/ ,/ 也/ 需要/ 遵循/ 下面/ 的/ 规则/ :/ (/ 1/ )/ 类型/ 的/ 一致性/ ,/ 即/ 各种/ 构件/ 的/ 接口/ 与其/ 相/ (/ 2/ )/ 行为/ 的/ 一致性/ ,/ 即/ 各/ 构件/ 接口/ 中/ 的/ 行为/ 应/ 最后/ ,/ 图/ 8/ 给出/ 了/ 面向/ 侧面/ 的/ 体系结构/ 描述/ 规范/ ,/ 包括/ 其/ 定义/ 的/ 各种/ 构件/ 以及/ 这些/ 构件/ 的/ 实例/ 和/ 实例/ 之间/ 的/ 配置/ 等/ 元素/ ./ 综合/ 上述/ ,/ 本文/ 认为/ 将/ 这种/ 面向/ 侧面/ 的/ 软件体系结构/ 设计/ 方法/ 引入/ 到/ 支持/ 运行/ 监控/ 的/ 可信/ 软件体系结构/ 的/ 设计/ 之中/ ,/ 为/ 指导/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 的/ 分析/ 和/ 设计/ 是/ 行之有效/ 的/ ./ 下面/ 我们/ 给出/ 了/ 一种/ 基于/ 侧面/ 的/ ,/ 支持/ 运行/ 监控/ 的/ 可信/ 软件体系结构/ 设计/ 方法/ ./ Architecture/ ∷/ =/ %/ architecturearchitecture/ _/ name/ =/ =/ [/ [/ component/ _/ list/ ]/ [/ aspectComponent/ _/ list/ ]/ [/ connector/ _/ list/ ]/ [/ aspectConnector/ _/ list/ ]/ …/ %/ component/ _/ instances/ =/ =/ [/ component/ _/ instance/ _/ list/ ]/ %/ aspectCompt/ _/ instances/ =/ =/ [/ aspectComponent/ _/ instance/ _/ list/ ]/ %/ connector/ _/ instances/ =/ =/ [/ connector/ _/ instance/ _/ list/ ]/ aspectContr/ _/ instances/ =/ =/ [/ aspectConnector/ _/ instance/ _/ list/ ]/ [/ %/ architectural/ _/ Configuration/ =/ =/ [/ Configuration/ ]/ ]/ ]/ component/ _/ list/ ∷/ =/ [/ component/ ;/ ]/ component/ _/ instance/ _/ list/ ∷/ =/ [/ instance/ _/ name/ :/ component/ _/ name/ ;/ ]/ aspectComponent/ _/ list/ ∷/ =/ [/ aspectComponent/ ;/ ]/ aspectComponent/ _/ instance/ _/ list/ ∷/ =/ [/ aspectComponentInstance/ _/ name/ :/ aspectComponent/ _/ name/ ;/ ]/ connector/ _/ list/ ∷/ =/ [/ connector/ ;/ ]/ aspectConnector/ _/ list/ ∷/ =/ [/ aspectConnector/ _/ name/ ;/ ]/ …/ 3.3/ 基于/ 侧面/ 的/ 、/ 支持/ 运行/ 监控/ 的/ 可信/ 软件体系结构/ 设计/ 方法/ 监控/ 在/ 可信/ 方面/ 的/ 目的/ 更多地/ 集中/ 在/ 验证/ 程序/ 的/ 安全性/ 、/ 正确性/ 、/ 可靠性/ 以及/ 软件/ 质量/ 和/ 信任/ 评估/ 上/ ./ 为了/ 监控/ 软件系统/ ,/ 首先/ 应该/ 清楚/ 地/ 知道/ 需要/ 针对/ 系统/ 的/ 哪些/ 与/ 可信/ 相关/ 的/ 关注点/ 进行/ 监控/ ,/ 然后/ 根据/ 这些/ 关注点/ 确定/ 系统/ 的/ 监控/ 目标/ ,/ 最后/ 归纳/ 出/ 系统/ 中/ 需要/ 监控/ 的/ 对象/ ./ 下面/ 对/ 该/ 过程/ 进行/ 详细/ 的/ 阐述/ ./ 该/ 方法/ 归纳/ 了/ 近/ 70/ 个/ 关注点/ ,/ 分离/ 关注点/ 的/ 方法/ 及/ 过程/ 可以/ 参照/ 我们/ 用于/ 体系结构/ 设计/ 的/ 关注点/ 多维/ 分离/ 模型/ [/ 16/ ]/ 的/ 相关/ 工作/ ./ 通过/ 研究/ 软件/ 需求/ 工程/ 及其/ 相关/ 研究/ [/ 17/ -/ 18/ ]/ ,/ 以/ 分组/ 的/ 方式/ 将/ 关注点/ 之间/ 关系/ 较为/ 紧密/ 的/ 归/ 为/ 一个/ 维度/ ,/ 目前/ 共/ 归纳/ 出/ 13/ 个/ 维度/ ./ 在/ 此基础/ 之上/ 建立/ 通用/ 多维/ 模型/ 以及/ 管理/ 这些/ 关注点/ 之间/ 的/ 若干/ 维度/ ./ 该/ 模型/ 可/ 为/ 体系结构/ 设计/ 人员/ 建立/ 特定/ 软件体系结构/ 基本/ 的/ 体系结构/ 模型/ 提供/ 指导/ ./ 根据/ 该/ 方法/ ,/ 首先/ 可以/ 建立/ 与/ 可信/ 相关/ 的/ 通用/ 关注点/ 集合/ ./ 沿着/ 与/ 软件/ 可信/ 性质/ 相关/ 维度/ 可/ 分析/ 出/ 以下/ 4/ 个/ 的/ 主要/ 横切/ 关注点/ :/ ①/ 可靠性/ (/ reliability/ )/ ;/ ②/ 可靠/ 安全性/ (/ safety/ )/ ;/ ③/ 保密/ 安全性/ (/ security/ )/ ;/ ④/ 生存性/ (/ survivability/ )/ ./ 这些/ 横切/ 关注点/ 被/ 建模/ 为/ 侧面/ 构件/ ./ 每个/ 侧面/ 构件/ 封装/ 了/ 与/ 之/ 相关/ 的/ 监控/ 目标/ 和/ 监控/ 方法/ ./ 通过/ 相应/ 的/ 横切/ 接口/ 以及/ 其中/ 的/ 操作/ ,/ 侧面/ 构件/ 可以/ 根据/ 与/ 之/ 相连/ 的/ 侧面/ 连接件/ 将/ 相应/ 的/ 监控/ 方法/ 编织/ 到/ 目标/ 构件/ 中/ 去/ ,/ 从而/ 完成/ 自身/ 的/ 监控/ 任务/ ./ 根据/ 这些/ 关注点/ ,/ TSCM/ 模型/ 能够/ 确定/ 所/ 需/ 完成/ 的/ 监控/ 任务/ ,/ 并/ 把/ 它们/ 分为/ 以下/ 几个/ 主要/ 部分/ :/ (/ 1/ )/ 系统优化/ ./ 系统/ 的/ 性能/ 和/ 资源/ 在/ 大多数/ 情况/ 下会/ 相互/ 冲突/ ./ 通过/ 监控/ 搜集/ 到/ 原始数据/ 并/ 生成/ 有关/ 状态/ 报告/ ,/ 从而/ 显示/ 出/ 对于/ 当前/ 系统/ 性能/ 状况/ 以及/ 资源/ 消耗/ 情况/ 的/ 综合性/ 描述/ ,/ 再/ 通过/ 深入/ 的/ 分析/ ,/ 可以/ 及时/ 准确/ 地/ 发现/ 系统/ 的/ 性能/ 瓶颈/ 或/ 资源/ 缺乏/ 等/ 问题/ ./ (/ 2/ )/ 系统可靠性/ ./ 软件可靠性/ 不仅/ 与/ 软件/ 中/ 存在/ 的/ 缺陷/ 有关/ ,/ 而且/ 与/ 系统/ 输入/ 和/ 系统/ 的/ 使用/ 有关/ ./ 通过/ 监控/ 的/ 手段/ ,/ 对于/ 软件系统/ 中/ 发生/ 的/ 各种/ 由/ 以上/ 原因/ 引起/ 的/ 异常/ 事件/ 进行/ 监视/ ,/ 并且/ 采用/ 安全/ 报告/ 、/ 实时处理/ 等/ 方式/ 消除/ 危害/ ./ (/ 3/ )/ 质量/ 评估/ ./ 软件/ 自身/ 质量/ 的/ 评估/ 是/ 一个/ 比较复杂/ ,/ 而且/ 难以解决/ 的/ 问题/ ./ 通过/ 在/ 现有/ 监控/ 技术/ 的/ 基础/ 上/ 建立/ 一个/ 质量/ 评估/ 的/ 平台/ ,/ 对于/ 构件/ 库中/ 的/ 各种/ 实体/ (/ 如/ 构件/ 和/ 服务/ )/ 用/ 相对/ 统一/ 的/ 方式/ 来/ 进行/ 质量/ 方面/ 的/ 评估/ ,/ 为/ 每个/ 实体/ 建立/ 相应/ 的/ 质量/ 评估/ 或者/ 信任/ 等级/ ,/ 最终/ 为/ 可信/ 构件/ 库/ 建立/ 的/ 信任/ 机制/ 奠定/ 一定/ 的/ 基础/ ./ (/ 4/ )/ 系统控制/ ./ 通过/ 各种/ 监控/ 手段/ ,/ 能够/ 掌握/ 系统/ 的/ 具体/ 状态/ ./ 掌握/ 特定/ 模块/ (/ 线程/ 、/ 接口/ 等/ )/ 的/ 当前/ 状态/ ,/ 从而/ 能够/ 把握/ 整个/ 系统/ 的/ 历史/ 和/ 实时/ 状态/ ,/ 并/ 进一步/ 决策/ 出/ 对系统/ 的/ 控制/ 操作/ ./ 尤其/ 是/ 在/ 系统/ 出现/ 某些/ 错误/ 或者/ 性能/ 降低/ 等/ 事件/ 的/ 时候/ ,/ 监控/ 机制/ 应该/ 能够/ 通过/ 系统/ 运行/ 参数/ 的/ 调节/ 而/ 达到/ 系统控制/ 、/ 管理/ 的/ 目的/ ./ 总之/ ,/ 可信/ 的/ 概念/ 赋予/ 了/ 监控/ 技术/ 更/ 多/ 的/ 内涵/ 和/ 思想/ ,/ 也/ 极大/ 地/ 增大/ 了/ 监控/ 的/ 应用领域/ ./ 随着/ 监控/ 技术/ 的/ 发展/ 和/ 不断完善/ ,/ TSCM/ 模型/ 在/ 可信/ 软件/ 领域/ 也/ 将/ 发挥/ 越来越/ 大/ 的/ 作用/ ./ 然而/ 抽象/ 的/ 监控/ 任务/ 难以/ 自动/ 地/ 映射/ 到/ 软件/ 开/ Page8/ 发/ 后续/ 阶段/ ./ 因此/ 为/ 适应/ 开发/ 可信/ 软件/ 的/ 需要/ 并/ 提供/ 具体/ 的/ 监控/ 需求/ 表达/ 机制/ 以及/ 尽量/ 保证系统/ 具有/ 较/ 好/ 的/ 通用性/ 和/ 可扩展性/ ,/ 本文/ 在/ 以前/ 的/ 工作/ 基础/ 上/ [/ 19/ -/ 20/ ]/ 总结/ 出/ 4/ 种/ 主要/ 的/ 监控/ 类型/ :/ 进程/ 监控/ 类型/ (/ process/ )/ 、/ 线程/ 监控/ 类型/ (/ thread/ )/ 、/ 方法/ 监控/ 类型/ (/ method/ )/ 和域/ 监控/ 类型/ (/ field/ )/ ./ 在/ 实现/ 层/ ,/ 每/ 一种/ 监控/ 类型/ 与/ 一组/ 实际/ 的/ 监控/ 对象/ 相对/ 应/ ./ 例如/ 域/ 监控/ 类型/ 对应/ 着/ 应用程序/ 中/ 一组/ 实际/ 的/ 变量/ 字段/ ./ 根图/ 9/ 监控/ 目标/ 结构图/ 根据/ 可信/ 软件体系结构/ 设计/ 的/ 需要/ ,/ 设计/ 人员/ 可以/ 为/ 每个/ 与/ 软件/ 可信性/ 监控/ 相关/ 的/ 侧面/ 添加/ 这/ 四类/ 方法/ ,/ 以/ 获得/ 系统/ 运行/ 的/ 相关/ 信息/ ,/ 如/ 当前/ 进程/ 的/ 名称/ 、/ 进程/ ID/ 、/ 进程/ 开始/ 执行/ 时间/ 、/ 进程/ 执行/ 时间/ 、/ 运行/ 线程/ 信息/ 、/ 执行/ 函数/ 信息/ 、/ 线程/ 数量/ 等等/ ./ 根据/ 这些/ 信息/ ,/ 监控/ 侧面/ 构件/ 可以/ 及时/ 做出/ 相应/ 的/ 判断/ ,/ 采用/ 恰当/ 的/ 策略/ 完成/ 自身/ 的/ 监控/ 目标/ 或/ 任务/ ,/ 从而/ 提高/ 系统/ 的/ 可信性/ ./ 需要/ 注意/ 的/ 是/ ,/ 本文/ 所/ 归纳/ 的/ 监控/ 目标/ 和/ 监控/ 属性/ 是/ 监控/ 范畴/ 的/ 一个/ 基本/ 集合/ ,/ 并/ 不能/ 涵盖/ 所有/ 的/ 监控/ 需求/ ./ 因此/ ,/ 针对/ 不同/ 的/ 需求/ 分析/ 和/ 设计规范/ ,/ 设计/ 人员/ 可/ 根据/ 3.3/ 节/ 提出/ 的/ 设计/ 方法/ ,/ 为/ 不同/ 的/ 侧面/ 构件/ 添加/ 额外/ 的/ 监控/ 目标/ 、/ 监控/ 属性/ 以及/ 相应/ 的/ 监控/ 方法/ ./ 下面/ 结合/ 基于/ 侧面/ 的/ 、/ 支持/ 运行/ 监控/ 的/ 可信/ 软件体系结构/ 设计/ 方法/ ,/ 讨论/ 电子商务/ 领域/ 中/ 网上/ 拍卖/ 系统/ 支持/ 运行/ 监控/ 的/ 可信/ 软件体系结构/ 设计/ 过程/ ,/ 为/ 该/ 方法/ 的/ 应用/ 提供/ 一定/ 参考/ ./ 据/ 这/ 四种/ 主要/ 的/ 监控/ 类型/ ,/ 设计者/ 可以/ 针对/ 目标/ 系统/ 的/ 进程/ 、/ 线程/ 、/ 函数/ 和/ 关键/ 变量/ 进行/ 监控/ ,/ 并/ 对/ 监控/ 到/ 的/ 关键/ 信息/ 记录/ 日志/ ./ 在/ 软件/ 的/ 体系结构/ 层/ ,/ 不同/ 的/ 监控/ 类型定义/ 了/ 对应/ 的/ 监控/ 方法/ ,/ 如/ 监控/ 进程/ 、/ 监控/ 线程/ 、/ 监控/ 方法/ 调用/ 和/ 监控/ 关键/ 域/ 字/ 段/ 等/ 方法/ ./ 每个/ 监控/ 方法/ 将/ 抽象/ 的/ 监控/ 任务/ 转化/ 为/ 具体/ 的/ 监控/ 目标/ 和/ 相应/ 的/ 监控/ 属性/ ./ 图/ 9/ 列出/ 了/ 主要/ 的/ 监控/ 目标/ 与/ 相应/ 的/ 监控/ 属性/ ./ 4/ 案例/ 应用/ 案例/ 研究/ 的/ 是/ 一个/ 基于/ 英式/ 风格/ 的/ 网上/ 拍卖/ 系统/ :/ 系统/ 为/ 每个/ 买家/ 、/ 卖家/ 设立/ 虚拟/ 账户/ ,/ 提供/ 银行帐号/ 资金/ 和/ 虚拟/ 账户/ 钱币/ 之间/ 的/ 划拨/ ./ 游客/ 可以/ 注册/ 成为/ 买家/ 或/ 卖家/ ./ 卖家/ 拍卖/ 自己/ 的/ 物品/ ,/ 买家/ 参与/ 物品/ 的/ 竞拍/ ./ 针对/ 每/ 一轮/ 的/ 拍卖/ ,/ 系统对/ 拍卖/ 过程/ 中/ 买家/ 的/ 叫价/ 进行/ 仲裁/ ./ 一旦/ 拍卖/ 结束/ ,/ 系统/ 计算/ 最高/ 竞标/ 价/ ,/ 然后/ 将/ 扣除/ 了/ 最高价/ 中/ 拍卖/ 系统/ 委托/ 服务费/ 之后/ 的/ 部分/ ,/ 存入/ 卖家/ 的/ 信用卡/ 中/ ,/ 并/ 从/ 买家/ 的/ 虚拟/ 账户/ 上/ 扣除/ 成交价/ 与/ 佣金/ 的/ 总和/ ./ 根据/ 本文/ 提出/ 的/ 方法/ ,/ 首先/ 应/ 识别/ 出/ 相应/ 的/ 与/ 软件/ 可信性/ 相关/ 的/ 横切/ 关注点/ ,/ 并且/ 针对/ 每个/ 横切/ 关注点/ 分析/ 其/ 监控/ 的/ 目的/ ,/ 然后/ 分别/ 描述/ 系统/ 中/ 各种/ 体系结构/ 元素/ ,/ 最后/ 给出/ 系统/ 的/ 软件体系结构/ ./ Page94/ ./ 1/ 识别/ 与/ 软件/ 可信性/ 相关/ 的/ 横切/ 关注点/ 通过/ 分析/ 网上/ 拍卖/ 系统软件/ 的/ 需求/ 描述/ ,/ 可以/ 确定/ 系统/ 是/ 一个/ 大型/ 的/ 分布式/ 的/ 软件系统/ ,/ 来自/ Internet/ 上/ 的/ 不同/ 位置/ ,/ 有着/ 不同/ 需要/ 的/ 用户/ ,/ 都/ 可以/ 进入/ 该/ 系统/ ./ 此外/ ,/ 就/ 拍卖/ 领域/ 本身/ 的/ 要求/ 而言/ ,/ 系统/ 也/ 要/ 保证/ 公平性/ 和/ 实时性/ ./ 因此/ 参考/ 电子商务/ 领域/ 的/ 相关/ 工作/ [/ 21/ ]/ 以及/ 前面/ 所/ 确定/ 的/ 与/ 可信/ 相关/ 的/ 通用/ 关注点/ 集合/ ,/ 建立/ 一个/ 具体/ 的/ 网上/ 拍卖/ 系统/ 的/ 多维/ 关注点/ 模型/ ./ 由于/ 篇幅/ 的/ 限制/ ,/ 本文/ 的/ 重点/ 主要/ 集中/ 在/ 体系结构/ 的/ 设计/ 层/ 与/ 可信性/ 相关/ 的/ 部分/ ,/ 详细/ 的/ 多维/ 关注点/ 模型/ 方法/ 可/ 参看/ 文献/ [/ 16/ ]/ ./ 下面/ 仅/ 给出/ 了/ 网上/ 拍卖/ 系统/ 中/ ,/ 与/ 可信性/ 相关/ 的/ 主要/ 横切/ 关注点/ 以及/ 相关/ 描述/ :/ (/ 1/ )/ 安全性/ 监控/ 关注点/ ./ 由于/ 互联网/ 上/ 的/ 买家/ 和/ 卖家/ 是/ 相互/ 透明/ 的/ ,/ 安全性/ 监控/ 关注点/ 是/ 网上/ 拍卖/ 系统/ 的/ 一个/ 重要/ 的/ 关注点/ ./ 它/ 既/ 要/ 验证/ 用户/ 的/ 合法性/ ,/ 也/ 要/ 确保/ 在/ Internet/ 上/ 数据/ 的/ 安全性/ ./ (/ 2/ )/ 性能/ 监控/ 关注点/ ./ 主要/ 用来/ 协调/ 网上/ 拍卖/ 系统/ 中/ 各种/ 资源/ 和/ 性能/ 之间/ 的/ 冲突/ ./ 如以/ 系统/ 的/ 数据库/ 为例/ ,/ 性能/ 调整/ 主要/ 包括/ 内存/ 的/ 优化/ 与/ 调整/ 、/ 数据库/ Cache/ 的/ 调整/ 、/ SQL/ 语句/ 的/ 优化/ 与/ 调整/ 以及/ 数据库/ 动态/ 参数/ 的/ 调整/ 等/ ./ 通过/ 对系统/ 整体/ 的/ 全局/ 监图/ 10/ 支持/ 运行/ 监控/ 的/ 网上/ 拍卖/ 系统/ 软件体系结构/ 该/ 系统/ 的/ 核心/ 功能/ 构件/ 分别/ 由/ 提供/ 网上/ 拍卖/ 系统/ 的/ 用户/ 图形界面/ 接口/ 构件/ AuctionGUI/ 、/ 封装/ 了/ 拍卖/ 业务/ 逻辑/ 功能/ 的/ 构件/ AuctionBusiness/ 和/ 账户/ 管理/ 构件/ AccountManagement/ 以及/ 数据库/ 构件/ Database/ 和/ 银行/ 提供/ 的/ 代理/ 构件/ BankDelegate/ 所/ 组成/ ./ 而/ 侧面/ 构件/ MonitorAspect/ 封装/ 了/ 需要/ 对系统/ 注入/ 监控/ 能力/ 的/ 相关/ 横切/ 功能/ ./ 为了/ 能/ 满足/ 各种/ 监控/ 并/ 进行/ 性能/ 调整/ ,/ 可/ 使/ 数据库/ 达到最佳/ 性能/ 以/ 满足用户/ 的/ 需要/ ./ (/ 3/ )/ 可靠性/ 监控/ 关注点/ ./ 该/ 关注点/ 是/ 本/ 系统/ 的/ 重点/ ,/ 涉及/ 到/ 与其/ 相关/ 的/ 很多/ 方面/ ,/ 如/ 通过/ 同步/ 对象/ 的/ 状态/ ,/ 确保/ 拍卖/ 系统/ 从/ 客户端/ 接收/ 的/ 数据/ 的/ 一致性/ ;/ 针对/ 各种/ 异常情况/ ,/ 如/ 通信/ 、/ 数据/ 存取/ 、/ 输入输出/ 等/ 问题/ 采取相应/ 的/ 处理/ 措施/ 等等/ ./ (/ 4/ )/ 并发/ 和/ 并行性/ 监控/ 关注点/ ./ 用户/ 可能/ 同时/ 参与/ 多个/ 商品/ 的/ 拍卖/ ,/ 也/ 可/ 同时/ 对/ 同一个/ 商品/ 投标/ ./ 在/ 这种/ 多线程/ 并行/ 环境/ 中/ ,/ 由于/ 资源/ 竞争/ 以及/ 调度/ 等/ 原因/ ,/ 并发程序/ 的/ 各个/ 并行执行/ 语句/ 之间/ 的/ 相对/ 执行/ 次序/ 是/ 不/ 确定/ 的/ ,/ 导致/ 不同/ 的/ 执行/ 结果/ ./ 通过/ 监控/ 能够/ 及时发现/ 运行/ 时/ 的/ 错误/ ./ 当然/ ,/ 不同/ 的/ 需求/ ,/ 其/ 关注点/ 也/ 是/ 的/ 不同/ 的/ ./ 设计/ 人员/ 可以/ 根据/ 具体/ 的/ 需求/ ,/ 确定/ 系统/ 所/ 需要/ 监控/ 的/ 关注点/ ./ 针对/ 案例/ 中/ 与/ 可信/ 相关/ 的/ 横切/ 关注点/ ,/ 本文/ 利用/ AC2/ -/ ADL/ 描述/ 网上/ 拍卖/ 系统/ 的/ 软件体系结构/ ,/ 并/ 给出/ 该/ 体系结构/ 的/ 设计/ 过程/ ./ 4.2/ 网上/ 拍卖/ 系统/ 的/ 软件体系结构/ 根据/ 第/ 3/ 节/ 给出/ 的/ 面向/ 侧面/ 的/ 软件体系结构/ 设计/ 方法/ ,/ 可以/ 得出/ 如图/ 10/ 所示/ 的/ 面向/ 侧面/ 的/ 网上/ 拍卖/ 系统/ 的/ 软件体系结构/ ./ 控/ 目标/ ,/ 该/ 侧面/ 构件/ 由/ 多个/ 监控/ 侧面/ 构件/ 复合/ 而成/ ,/ 其中/ 包括/ 安全监控/ 侧面/ SecurityMonitorAspect/ 、/ 性能/ 监控/ 侧面/ PerformanceMonitorAspect/ 、/ 可靠性/ 监控/ 侧面/ ReliabilityMonitorAspect/ 等/ ./ 每个/ 侧面/ 构件/ 都/ 有/ 相应/ 的/ 横切/ 接口/ ./ 如图/ 10/ 所示/ ,/ 安全监控/ 侧面/ SecurityMonitorAspect/ 提供/ 了/ 安全监控/ 横切/ 接口/ SecurityMonitorCrosscutInt/ 对系统/ 某些/ 敏感点/ 注/ Page10/ 入/ 相应/ 的/ 监控/ 探针/ 以/ 监控/ 系统/ 的/ 安全/ ./ 这些/ 内部/ 模块/ 的/ 接口/ 可以/ 通过/ 与/ 复合/ 构件/ 外部/ 的/ 接口/ 进行/ 相应/ 的/ 绑定/ ,/ 从而/ 和/ 该/ 复合/ 构件/ 以外/ 的/ 元素/ 交互/ ./ 由于/ 篇幅/ 的/ 限制/ 下面/ 只/ 呈现/ 了/ 由/ AC2/ -/ ADL/ 描述/ 的/ 部分/ 体系结构/ 元素/ ,/ 并/ 以/ 安全监控/ 侧面/ SecurityMonitor/ -/ Aspect/ 作为/ 案例/ ,/ 来/ 说明/ 面向/ 侧面/ 的/ 体系结构/ 设计/ 方法/ 在/ 开发/ 过程/ 中/ 的/ 应用/ ./ 详细/ 的/ 描述/ 可/ 参看/ 相关/ 文献/ [/ 22/ ]/ ./ 首先/ 需要/ 用/ AC2/ -/ ADL/ 建模/ 体系结构/ 中/ 的/ 各种/ 元素/ 如/ 构件/ 、/ 侧面/ 构件/ 等/ ;/ 然后/ 将/ 它们/ 按照/ 一定/ 的/ 规范/ 组合/ 起来/ 如/ 体系结构/ 的/ 配置/ ,/ 从而/ 得到/ 最终/ 的/ 具有/ 监控/ 能力/ 的/ 网上/ 拍卖/ 系统/ 的/ 软件体系结构/ 蓝图/ ./ 图/ 11/ 给出/ SecurityMonitorAspect/ 的/ 相关/ 描述/ ./ 这里/ 需要/ 对/ 时序/ 逻辑/ 语言/ XYZ/ // E/ 做/ 一个/ 简要/ 的/ 介绍/ ,/ XYZ/ // E/ 中/ 的/ 表达式/ 有/ 条件/ 元/ 组成/ ,/ 其/ 表现形式/ 主要/ 有/ 两种/ :/ 形式/ (/ 1/ )/ 所示/ 的/ 条件/ 元/ 直接/ 定义/ 了/ 程序/ 相邻/ 状态/ 之间/ 的/ 转换/ 关系/ ,/ 形式/ (/ 2/ )/ 所示/ 条件/ 元/ 表示/ 程序/ 抽象/ 规范/ ,/ 其中/ 符号/ @/ 可以/ 是/ 下/ 一/ 时刻/ 算子/ $/ O/ 或/ 最终/ 时刻/ 算子/ ◇/ ;/ 两种/ 形式/ 的/ 条件/ 元/ 都/ 是/ 时序/ 逻辑/ 公式/ ,/ 其/ 语义/ 即/ 为/ 此时/ 序/ 逻辑/ 式/ 的/ 语义/ 模型/ ./ 此外/ ,/ XYZ/ // E/ 也/ 提供/ 输入/ 命令/ 和/ 输出/ 命令/ :/ 其中/ “/ ChNm/ ”/ 是/ 通道/ 名/ ,/ x/ 是/ 变量/ ,/ e/ 是/ 表达式/ ./ “/ ChNm/ ?/ x/ ”/ 表示/ 通过/ 通道/ ChNm/ 将/ 数据/ 送入/ 变量/ x/ ;/ “/ ChNm/ !/ e/ ”/ 表示/ 将/ e/ 的/ 值/ 经过/ 通道/ ChNm/ 送出/ ./ 从图/ 11/ 可以/ 看到/ SecurityMonitorAspect/ 主要/ 包含/ 的/ 方法/ ,/ 由于/ 篇幅/ 的/ 限制/ ,/ 这里/ 结合/ XYZ/ // E/ 中/ 条件/ 元/ 表达式/ 主要/ 描述/ 了/ 线程/ 监控/ 方法/ threadMonitoring/ (/ )/ 和/ 权限/ 验证/ 方法/ verification/ (/ )/ 部分/ 行为/ ./ 其中/ threadMonitoring/ (/ )/ 能/ 获得/ 线程/ 当前/ 的/ 状态/ ,/ 并/ 为/ 新/ 运行/ 的/ 线程/ 的/ 状态/ 信息/ 的/ 存储/ 分配/ 一定/ 内存空间/ ,/ 以便/ 后续/ 的/ 工具/ 可以/ 对/ 其/ 进行/ 管理/ 或/ 分析/ ./ 而/ verification/ (/ )/ 是/ 系统/ 安全性/ 必不可少/ 的/ 一个/ 组成部分/ ,/ 该/ 方法/ 为/ 新/ 开启/ 的/ 线程/ 赋予/ 相应/ 的/ 权限/ ,/ 并/ 通过/ check/ (/ )/ 方法/ 检查/ 当前/ 运行/ 的/ 线程/ 是否/ 在/ 其/ 相应/ 的/ 权限/ 之内/ ,/ 以/ 确保/ 系统/ 的/ 安全性/ ./ 图/ 11/ 也/ 给出/ 该/ 构件/ 体内/ 部分/ 处理过程/ ,/ 通过/ 时序/ 逻辑/ 语言/ 中/ 通道/ 以及/ 消息/ 的/ 输入/ // 输出/ 命令/ ,/ 构件/ 中/ 的/ 方法/ 按照/ 相应/ 的/ 交互/ 协议/ 有续/ 的/ 联系/ 构成/ 构件/ 的/ 总体/ 行为/ ./ □/ [/ i/ =/ currThread/ ∧/ $/ OLB/ =/ L2/ ;/ / setPermission/ (/ currID/ )/ ∧/ $/ OLB/ =/ L2/ ;/ %/ aspectComponentSecurityMonitorAspect/ =/ =/ [/ TYPETHREADSTATE/ :/ RECORD/ [/ name/ :/ STRING/ ;/ ID/ :/ INT/ ;/ …/ ]/ THREADSTATElist/ :/ RECORD/ [/ threadState/ :/ THREADSTATE/ ;/ %/ MethodsthreadMonitoring/ (/ %/ IOPTState/ :/ THREADSTATE/ )/ =/ =/ %/ LOC/ [/ i/ :/ THREADSTATE/ ]/ ;/ LB/ =/ Start/ / currState/ =/ getThreadState/ (/ )/ ∧/ $/ OLB/ =/ L1/ ;/ LB/ =/ L1/ ∧/ (/ currThread/ =/ =/ NewThread/ )/ / LB/ =/ L1/ ∧/ ~/ (/ currThread/ =/ =/ NewThread/ )/ / $/ OLB/ =/ L3/ ;/ LB/ =/ L2/ / threadStateList/ ./ add/ (/ i/ )/ ∧/ $/ OLB/ =/ L3/ ;/ LB/ =/ L3/ / TState/ =/ currState/ ∧/ $/ OLB/ =/ EXIT/ ;/ ]/ ;/ %/ methodsverification/ (/ %/ INPthreadState/ :/ THREADSTATE/ ;/ %/ OUTPverificationResult/ :/ BOOL/ )/ =/ =/ □/ [/ LB/ =/ Start/ / currID/ =/ getID/ (/ threadState/ )/ ∧/ $/ OLB/ =/ L1/ ;/ LB/ =/ L1/ ∧/ (/ currID/ =/ =/ NewThreadID/ )/ LB/ =/ L1/ ∧/ ~/ (/ currSID/ =/ =/ NewThreadID/ )/ / $/ OLB/ =/ L2/ ;/ LB/ =/ L2/ / perm/ =/ getPermission/ (/ currID/ )/ ∧/ $/ OLB/ =/ L3/ ;/ LB/ =/ L3/ / result/ =/ check/ (/ perm/ )/ ∧/ $/ OLB/ =/ EXIT/ ;/ ]/ ;/ %/ methodsprocessMonitoring/ =/ =/ □/ [/ …/ ]/ ;/ %/ methodsfunctionMonitoring/ =/ =/ □/ [/ …/ ]/ ;/ %/ methodsvariableMonitoring/ =/ =/ □/ [/ …/ ]/ ;/ …/ %/ CrosscuttingInterfaceSecurityMonitorCrosscutInt/ =/ =/ □/ [/ %/ porttStatePort/ ;/ THREADSTATE/ ;/ %/ portverificationPort/ ;/ THREADSTATE/ ;/ %/ portresultPort/ :/ BOOL/ ;/ …/ %/ add/ _/ OperationthreadMonitoring/ =/ =/ □/ [/ LB/ =/ Start/ / tStatePort/ ?/ TState/ $/ OLB/ =/ L1/ ;/ LB/ =/ L1/ ∧/ ~/ (/ TState/ =/ =/ null/ )/ / threadMonitoring/ (/ )/ ∧/ $/ OLB/ =/ L1/ ;/ LB/ =/ L2/ ∧/ (/ TState/ =/ =/ null/ )/ / $/ OLB/ =/ EXIT/ ]/ ;/ processMonitoring/ =/ =/ □/ [/ …/ ]/ ;/ fieldMonitoring/ =/ =/ □/ [/ …/ ]/ ;/ methodMonitoring/ =/ =/ □/ [/ …/ ]/ ;/ …/ ]/ %/ internalProcess/ =/ =/ □/ [/ |/ |/ [/ LB/ =/ Start/ / tStatePort/ ?/ TState/ ∧/ $/ OLB/ =/ L11/ ;/ LB/ =/ L11/ ∧/ ~/ (/ TState/ =/ =/ null/ )/ / LB/ =/ L12/ / tStatePort/ ?/ TState/ $/ OLB/ =/ ∧/ L11/ ;/ LB/ =/ L11/ ∧/ (/ TState/ =/ =/ null/ )/ / $/ OLB/ =/ EXIT/ ]/ ;/ [/ LB/ =/ L21/ / verificationPort/ !/ threadState/ ∧/ $/ OLB/ =/ L22/ ;/ LB/ =/ L22/ / verification/ (/ )/ ∧/ $/ OLB/ =/ L23/ ;/ LB/ =/ L23/ / resultPort/ !/ verificationResult/ ∧/ $/ OLB/ =/ L21/ ]/ …/ ]/ %/ constrains/ =/ =/ □/ [/ TState/ =/ =/ threadState/ ;/ …/ ]/ …/ ]/ 图/ 11SecurityMonitorAspect/ 的/ AC2/ -/ ADL/ 描述/ 对于/ 侧面/ 连接件/ 的/ 描述/ ,/ 图/ 12/ 给出/ 了/ 安全监控/ 侧面/ 连接件/ (/ SecurityAspectConnector/ )/ 的/ 模型/ ./ 如图/ 12/ 所示/ ,/ 该/ 连接件/ 注入/ 点/ 角色/ 包括/ 用户/ 登录/ 角色/ (/ LoginRole/ )/ 、/ 消息/ 传输/ 角色/ (/ TransmissionRole/ )/ 等/ ,/ 而/ 横切/ 角色/ 有/ 安全监控/ 角色/ (/ SecurityMonitor/ -/ Role/ )/ 等/ ,/ 其中/ 它们/ 分别/ 含有/ 各自/ 的/ 一系列/ 行为/ ,/ 如/ SecurityMonitorRole/ 可能/ 具有/ 监控/ 变量/ 、/ 监控/ 函数/ 、/ 监控/ 线程/ 等/ 行为/ ./ 在/ 横切/ 协议/ (/ crosscuttingPro/ -/ tocol/ )/ 中/ SecurityMonitorRole/ 的/ 监控/ 函数/ 和/ 监控/ 变量/ 的/ 行为/ 必须/ 在/ 用户/ 登录/ 行为/ 发生/ 之前/ 先/ 发生/ (/ 由/ 保留字/ before/ 说明/ )/ ,/ 从而/ 可以/ 在/ 用户/ 登陆/ 时/ 对/ 用/ Page11/ 户/ 的/ 登录/ 和/ 输入/ 的/ 数据/ 进行/ 监控/ ;/ 另一方面/ ,/ 监控/ 线程/ 行为/ 可能/ 需要/ 对系统/ 中/ 的/ 各种/ 线程/ (/ 如/ 买家/ 或/ 买家/ 线程/ 等/ )/ 中/ 的/ 各种/ 接收/ 或/ 发送/ 行为/ (/ 如/ 发出/ 叫价/ 消息/ 或/ 接收/ 商品/ 当前/ 信息/ 等/ )/ 进行/ 监控/ ./ aspectConnectorSecurityAspectConnector/ =/ =/ [/ %/ pointcutRoleLoginRole/ =/ =/ [/ %/ portloginPort/ :/ THREADSTATE/ ;/ …/ %/ behaviorslogging/ ;/ …/ ]/ %/ pointcutRoleTransmissionRole/ =/ =/ [/ %/ porttransmissionPort/ :/ Data/ ;/ …/ %/ behaviorssendMassage/ ,/ receiveMassage/ ;/ …/ ]/ …/ %/ crosscuttingRoleSecurityMonitorRole/ =/ =/ [/ …/ %/ behaviorsmonitorVar/ ,/ monitorFun/ ,/ …/ ;/ ]/ %/ crosscuttingProtocol/ =/ =/ [/ (/ SecurityMonitorRole/ ./ monitorFunandmonitorVar/ )/ beforeLogin/ ./ logging/ ;/ SecurityMonitorRole/ ./ monitorThreadbefore/ (/ Transmission/ ./ sendMassageandreceiveMassage/ )/ ;/ …/ ]/ ]/ 图/ 12SecurityAspectConnector/ 的/ AC2/ -/ ADL/ 描述/ 在/ 侧面/ 构件/ 以及/ 相应/ 的/ 侧面/ 连接件/ 设计/ 完成/ 之后/ ,/ 随之而来/ 的/ 问题/ 就是/ 如何/ 合理/ 地/ 组合/ 这些/ 体系结构/ 元素/ ./ 根据/ 面向/ 侧面/ 的/ 软件体系结构/ 设计/ 方法/ ,/ 首先/ 需要/ 确定/ 软件体系结构/ 层/ 的/ 注入/ 点/ ,/ 并/ 定义/ 注入/ 点/ 表达式/ PCD/ ./ 然后/ 根据/ 这些/ PCD/ 定位/ 与/ 之/ 相应/ 的/ 侧面/ 构件/ ,/ 并用/ 适合/ 的/ 侧面/ 连接件/ 将/ 侧面/ 构件/ 与/ PCD/ 所/ 指定/ 的/ 构件/ 组合/ 起来/ ,/ 形成/ 体系结构/ 的/ 配置/ ./ 换句话说/ ,/ 这些/ PCD/ 是/ 侧面/ 连接件/ 中/ 注入/ 点/ 角色/ 的/ 扮演者/ ,/ 而/ 侧面/ 构件/ 以及/ 它们/ 的/ 横切/ 接口/ ,/ 则/ 是/ 相关/ 横切/ 角色/ 的/ 扮演者/ ./ 下面/ 给出/ 一个/ 定义/ PCD/ 的/ 例子/ :/ 由于/ 在/ 基于/ internet/ 的/ 网上/ 拍卖/ 系统/ 中/ ,/ 各个/ 构件之间/ 的/ 交互/ 往往/ 与/ 安全性/ 密切相关/ ,/ 每个/ 请求/ 接口/ 中/ 的/ 方法/ 都/ 应该/ 是/ 被/ 监控/ 的/ 对象/ ,/ 当/ 它们/ 向/ 外界/ 请求/ 服务/ 的/ 过程/ 中/ ,/ 它们/ 的/ 行为/ 、/ 状态/ 等/ 应该/ 受到/ 监控/ ./ 因此/ 一个/ 与/ 安全监控/ 侧面/ 有关/ 的/ PCD/ 可以/ 定义/ 为/ 如下/ 形式/ :/ AuctionGUI/ _/ instances/ ./ AllrequestInterface/ ./ / andAuctionBusiness/ _/ instances/ ./ AllrequestInterface/ ./ / andAccountManagement/ _/ instances/ ./ AllrequestInterface/ ./ / 最后/ ,/ 在/ 确定/ 了/ 体系结构/ 层/ 的/ 注入/ 点/ 、/ 安全/ 侧面/ 构件/ 以及/ 安全/ 侧面/ 连接件/ 后/ ,/ 一段/ 与/ 安全监控/ 相关/ 的/ 配置/ 可/ 描述/ 为/ 如图/ 13/ 所示/ ./ 其中/ 复合/ 侧面/ 构建/ MonitorAspect/ 的/ 外部/ 横切/ 接口/ extra/ _/ SecurityMonitorCrosscutInt/ ,/ 通过/ 将/ 其/ 横切/ 功能/ 委托/ 给/ 内部/ 的/ 侧面/ 构建/ SecurityMonitorAspect/ 的/ 实例/ securityMAspect/ _/ instances/ 中/ 的/ 横切/ 接口/ 来/ 完成/ 自身/ 的/ 任务/ (/ 由/ 关键字/ mappingDeclaration/ 给出/ )/ ,/ 另一方面/ 在/ 配置/ 中/ ,/ 接口/ 中/ 的/ 方法/ 和/ 角色/ 中/ %/ architectureOAS/ =/ =/ [/ %/ componentAuction/ _/ GUI/ =/ =/ [/ …/ ]/ ;/ %/ componentAuction/ _/ Business/ =/ =/ [/ …/ ]/ ;/ …/ %/ aspectComponentSecurityMonitorAspect/ =/ =/ [/ …/ ]/ ;/ %/ aspectComponentMonitorAspect/ =/ =/ [/ …/ %/ crosscuttingInterfaceextra/ _/ SecurityMonitorCrosscutInt/ ;/ …/ %/ subArchtecturesecurityMonitor/ _/ SubStructure/ =/ =/ [/ …/ %/ aspectComponent/ _/ instancessecurityMAspect/ _/ instances/ :/ SecurityMonitorAspect/ ;/ …/ ]/ %/ mappingDeclarationSecurityMonitorCrosscutIntbindsextra/ _/ SecurityMonitorCrosscutInt/ ;/ …/ ]/ …/ %/ aspectConnectorSecurityAspectConnector/ =/ =/ [/ …/ ]/ ;/ …/ %/ component/ _/ instancesAuctionGUI/ _/ instances/ :/ AuctionGUI/ ;/ %/ aspectComponent/ _/ instancesmonitorAspect/ _/ instances/ :/ MonitorAspect/ ;/ …/ %/ aspectConnector/ _/ instancessecurityAConr/ _/ instances/ :/ SecurityAspectConnector/ ;/ …/ %/ configuration/ =/ =/ [/ AuctionGUI/ _/ instances/ ./ AllrequestInterface/ ./ / andAuctionBusiness/ _/ instances/ ./ AllrequestInterface/ ./ / andAccountManagement/ _/ instances/ ./ AllrequestInterface/ ./ / playPCDsecurityAConr/ _/ instances/ ./ TransmissionRole/ ;/ monitorAspect/ _/ instances/ ./ extra/ _/ SecurityMonitorCrosscutIntplayssecurityAConr/ _/ instances/ ./ SecurityMonitorRole/ ;/ attachmentthreadMonitoringattachesmonitorThread/ ;/ 的/ 行为/ 的/ 粘合/ 可/ 在/ attachment/ 段/ 由/ 关键字/ attaches/ 进一步/ 细化/ ,/ 以/ 确保/ 构建/ 中/ 的/ 方法/ 能够/ 按照/ 连接件/ 中/ 规定/ 的/ 行为/ 进行/ 交互/ ./ 按照/ 上面/ 的/ 方式/ ,/ 一个/ 完整/ 网上/ 拍卖/ 系统/ 的/ 软件体系结构/ 可以/ 逐步/ 地/ 设计/ 出来/ ,/ 它/ 将/ 指导/ 软件/ 后续/ 阶段/ 的/ 开发/ ./ 4.3/ 基于/ 软件体系结构/ 的/ 可信/ 软件开发/ 设计/ 良好/ 的/ 体系结构/ 设计/ 文档/ 既/ 为/ 后续/ 阶段/ 的/ 软件开发/ 提供/ 有力/ 的/ 线索/ 和/ 保证/ ,/ 也/ 为/ 最终/ 软件/ 在/ 运行/ 时/ 的/ 监控/ 结果/ 的/ 分析/ 和/ 验证/ 提供/ 相关/ 的/ 依据/ ./ 基于/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 构造/ 模型/ TSCM/ ,/ 开发人员/ 根据/ 体系结构/ 设计/ 文档/ ,/ 在/ 网上/ 拍卖/ 系统/ 的/ 源码/ 中/ 确定/ 所/ 需要/ 监控/ 的/ 对象/ 如/ 方法/ 、/ 域/ 字/ 段/ 等/ 内容/ ./ 这里/ 系统/ 采用/ Java/ 语言/ 的/ 实现/ 方式/ ./ 根据/ TSCM/ 支撑/ 工具/ 模块/ 提供/ 的/ 监控/ 需求/ 表达式/ 模板/ ,/ 可以/ 采用/ Java5/ ./ 0/ 的/ 注释/ 机制/ (/ annotation/ )/ 的/ 描述/ 具体/ 的/ 监控/ 需求/ 表达式/ ./ 该/ 模板/ 包括/ 四类/ 监控/ annotation/ :/ @/ monitor/ _/ process/ ,/ @/ monitor/ _/ thread/ ,/ @/ monitor/ _/ method/ 和/ @/ monitor/ _/ field/ ./ 并/ 通过/ annotation/ 的/ 参数/ 来/ 对/ 监控/ 目标/ 或/ 属性/ 的/ 监控点/ 进行/ 选择/ ./ 当/ 参数/ 的/ 真值/ 为/ TRUE/ 时/ ,/ 表示/ 要/ 对/ 该/ 监控点/ 进行/ 监控/ ,/ 为/ FALSE/ 时则/ 表示/ 不/ 进行/ 监控/ ./ 如/ 进程/ 监控/ annotation/ 可/ 表示/ 为/ :/ @/ monitor/ _/ process/ (/ BooleanResources/ ,/ BooleanThread/ ,/ BooleanTime/ ,/ StringDescription/ )/ ,/ 其中/ Resources/ 表示/ 进程/ 占用/ Page12/ 资源/ 的/ 监控/ ,/ Thread/ 表示/ 进程/ 内/ 运行/ 线程/ 信息/ 的/ 监控/ ,/ Time/ 表示/ 进程/ 运行/ 时间/ 监控/ ,/ Description/ 参数/ 提供/ 给/ 开发人员/ 来/ 对/ 要/ 监控/ 的/ 进程/ 进行/ 描述/ ./ 对/ 进程/ ID/ 的/ 监控/ 是/ 默认/ 进行/ 的/ ,/ Resources/ ,/ Thread/ 和/ Time/ 的/ 缺省值/ 为/ FALSE/ ./ 如/ 在/ 本例/ 中/ ,/ 针对/ 构件/ AuctionBusiness/ 中/ 的/ 用户/ 登录/ ,/ 需/ 监控/ 系统/ 的/ 访问者/ ,/ 登录/ 方法/ 的/ 调用/ 信息/ 等/ ,/ 可以/ 用来/ 分析/ 用户/ 权限/ 等/ 与/ 安全性/ 相关/ 的/ 可信/ 属性/ ./ 图/ 14/ 给出/ 部分/ 监控/ 注释/ 应用/ 代码/ 示例/ ./ // / importcodesegment/ / // publicclassuserLogin/ {/ @/ monitor/ _/ field/ (/ RealValue/ =/ TRUE/ ,/ …/ ,/ UpdateInfor/ =/ TRUE/ ,/ Description/ =/ “/ Thisisakeyfactorofthesystem/ ”/ )/ publicstaticstringuserName/ ;/ …/ (/ Javacode/ )/ …/ @/ monitor/ _/ method/ (/ CallInfor/ =/ TRUE/ ,/ State/ =/ FALSE/ ,/ Description/ =/ “/ Thisisthemethodneedtobeverified/ ”/ )/ publicvoidlogin/ (/ stringuserName/ ,/ …/ )/ {/ …/ }/ …/ (/ Javacode/ )/ …/ }/ 在/ 监控/ 代码生成/ 模块/ 的/ 支持/ 下/ ,/ 监控/ 需求/ 表达式/ 中/ 的/ annotation/ 被/ 抽取/ 出来/ ,/ 编译成/ 与/ 原/ 系统/ 兼容/ 的/ 侧面/ 代码/ ./ 随后/ 监控/ 代码/ 织入/ 模块/ 使用/ 对应/ 的/ AOP/ 编织/ 器/ 进行/ 编织/ ,/ 将/ 侧面/ 代码/ 注入/ 原/ 网上/ 拍卖/ 系统/ ,/ 使/ 其/ 具备/ 运行/ 时/ 可/ 自我/ 监控/ 的/ 能力/ ./ 图/ 15/ 给出/ 监控/ 需求/ 表达式/ 编译/ 后/ 生成/ 的/ 部分/ AspectJ/ 代码/ 框架/ ./ publicaspectSecurityAspect/ {/ pointcutuserCreateTime/ (/ )/ :/ within/ (/ User/ )/ &&/ execution/ (/ new/ (/ ../ )/ )/ ;/ pointcutuserRun/ (/ )/ :/ execution/ (/ voiduser/ ./ run/ (/ )/ )/ ;/ pointcutuserNameChange/ (/ )/ :/ set/ (/ stringuserName/ )/ ;/ pointcutmethodCall/ (/ )/ :/ call/ (/ voidlogin/ (/ stringuserName/ ,/ …/ )/ )/ ;/ pointcutprocess/ (/ )/ :/ execution/ (/ voidTest/ ./ main/ (/ ../ )/ )/ ;/ …/ before/ (/ )/ :/ process/ (/ )/ {/ // // startathreadtodetectsystemresourceusageandsendinforma/ -/ tiontothemonitorservice/ }/ before/ (/ stringuserName/ ,/ …/ )/ :/ methodCall/ (/ )/ &&/ args/ (/ userName/ ,/ …/ )/ {/ // // recordthetimewhilestartingtocall/ “/ login/ (/ )/ ”/ ,/ gettheparam/ -/ eterofit/ ,/ // // acquirethethreadcontext/ ,/ andsendittothemonitorservice/ }/ before/ (/ )/ :/ userCreateTime/ (/ )/ {/ // // recordthetimewhenaProducerthreadbecreatedandsendthese/ // // informationtothemonitorservice/ }/ after/ (/ )/ :/ userRun/ (/ )/ {/ // // recordthetimewhenaProducerthreadstoppedandsendthese/ // // informationtothemonitorservice/ }/ before/ (/ )/ :/ userNameChange/ (/ )/ {/ // // recordthevalueof/ “/ user/ ./ name/ ”/ beforechange/ ,/ acquirethethreadand/ // // functioncontextandsendtheseinformationtothemonitorservice/ }/ after/ (/ )/ :/ userNameChange/ (/ )/ {/ // // recordthetimewhen/ “/ user/ ./ name/ ”/ bechangedandrecordthevalueafter/ // // change/ ,/ sendtheseinformationtothemonitorservice/ }/ …/ …/ }/ 图/ 15/ 编译/ 后/ 生成/ 的/ 部分/ AspectJ/ 代码/ 框架/ 5/ 结束语/ 本文/ 在/ 支持/ 运行/ 监控/ 的/ 可信/ 软件/ 构造/ 模型/ TSCM/ 的/ 基础/ 上/ ,/ 引入/ 了/ 面向/ 侧面/ 的/ 软件体系结构/ 设计/ 方法/ 以及/ 相关/ 的/ 面向/ 侧面/ 的/ 软件设计/ 语言/ AC2/ -/ ADL/ ,/ 提出/ 了/ 一种/ 面向/ 侧面/ 的/ 可信/ 软件设计/ 方法/ ;/ 讨论/ 了/ 该/ 方法/ 的/ 基本/ 过程/ ,/ 并/ 以/ 网上/ 拍卖/ 系统/ 为/ 实例/ 展示/ 了/ 该/ 过程/ 的/ 主要/ 步骤/ 和/ 实现/ 层/ 的/ 结果/ ./ 与/ 已有/ 的/ 工作/ 相比/ ,/ 我们/ 的/ 工作/ 支持/ 基于/ 软件体系结构/ 的/ 可信/ 软件系统/ 的/ 分析/ 、/ 设计/ 和/ 实现/ ,/ 并且/ 将/ 面向/ 侧面/ 的/ 思想/ 及其/ 相关/ 技术/ 应用/ 于/ 软件开发/ 的/ 各个/ 阶段/ ,/ 对/ 可信/ 软件/ 的/ 开发/ 是/ 一种/ 新/ 的/ 尝试/ ./ 然而/ ,/ 我们/ 的/ 研究/ 工作/ 仍/ 存在/ 着/ 许多/ 不足/ ,/ 控制/ 作为/ 监控/ 的/ 一个/ 重要/ 部分/ ,/ 仍然/ 是/ 下/ 一步/ 工作/ 的/ 重点/ ./ 拟/ 解决/ 的/ 方案/ 包括/ :/ 进一步/ 地/ 完善/ AC2/ -/ ADL/ ,/ 研究/ 软件/ 可信/ 保障机制/ ,/ 通过/ 结合/ 命题/ 投影/ 时序/ 逻辑/ (/ PropositionalProjectionTemporalLogic/ ,/ PPTL/ )/ 形式化/ 方法/ [/ 23/ -/ 24/ ]/ ,/ 分析/ 和/ 验证/ 软件/ 的/ 可信性/ ,/ 以/ 确保/ 软件/ 的/ 健康/ 运行/ ./ 

