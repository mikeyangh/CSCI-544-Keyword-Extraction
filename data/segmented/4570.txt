Page1/ 基于/ 变异/ 分析/ 和/ 集合/ 进化/ 的/ 测试用例/ 生成/ 方法/ 巩敦卫/ 2/ )/ 1/ )/ (/ 中国矿业大学/ 计算机科学/ 与/ 技术/ 学院/ 江苏/ 徐州/ 221116/ )/ 2/ )/ (/ 中国矿业大学/ 信息/ 与/ 电气/ 工程学院/ 江苏/ 徐州/ 221116/ )/ 3/ )/ (/ 江苏/ 师范大学/ 计算机科学/ 与/ 技术/ 学院/ 江苏/ 徐州/ 221116/ )/ 4/ )/ (/ 中国矿业大学/ 理学院/ 江苏/ 徐州/ 221116/ )/ 摘要/ 变异/ 分析/ 能够/ 辅助/ 生成/ 有效/ 的/ 测试用例/ 集/ ,/ 然而/ ,/ 高昂/ 的/ 测试/ 代价/ ,/ 严重/ 影响/ 了/ 这/ 一/ 技术/ 在/ 实际/ 软件测试/ 中/ 的/ 广泛应用/ ./ 文中/ 基于/ 弱/ 变异/ 分析/ ,/ 研究/ 求解/ 测试用例/ 生成/ 问题/ 的/ 新/ 方法/ ,/ 以/ 高效/ 地/ 生成/ 具有/ 很/ 高/ 缺陷/ 检测/ 能力/ 的/ 测试用例/ 集/ ./ 该/ 方法/ 首先/ 利用/ 变异/ 前后/ 的/ 语句/ ,/ 构造/ 变异/ 分支/ ,/ 并/ 将/ 所有/ 变异/ 分支/ 集成/ 到/ 原程序/ ,/ 形成/ 新/ 的/ 被/ 测/ 程序/ ;/ 然后/ ,/ 以/ 测试用例/ 集/ 作为/ 决策/ 变量/ ,/ 根据/ 该/ 测试用例/ 集对/ 变异/ 分支/ 的/ 覆盖/ 信息/ ,/ 构造/ 目标/ 函数/ ,/ 建立/ 新/ 的/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ;/ 最后/ ,/ 采用/ 集合/ 进化/ 优化/ 方法/ 求解/ 上述/ 模型/ 时/ ,/ 设计/ 具有/ 针对性/ 的/ 适应度/ 函数/ 和/ 进化/ 策略/ ,/ 使得/ 一次/ 求解/ 该/ 模型/ ,/ 生成/ 杀死/ 所有/ 变异/ 体/ 的/ 测试用例/ ./ 将/ 所/ 提/ 方法/ 应用/ 于/ 13/ 个/ 基准/ 和/ 工业/ 程序/ 的/ 测试/ ,/ 并/ 与/ 传统/ 的/ 遗传算法/ 进行/ 了/ 比较/ ./ 实验/ 结果表明/ ,/ 所提/ 方法/ 能够/ 高效/ 地/ 生成/ 测试用例/ ,/ 且/ 生成/ 的/ 测试用例/ 具有/ 更/ 高/ 的/ 缺陷/ 检测/ 能力/ ./ 关键词/ 软件测试/ ;/ 变异/ 测试/ ;/ 变异/ 分支/ ;/ 测试用例/ 生成/ ;/ 集合/ 进化/ 1/ 引言/ 变异/ 测试通过/ 向/ 原程序/ 人为/ 地/ 注入/ 缺陷/ [/ 1/ ]/ ,/ 以/ 模拟/ 软件/ 中/ 的/ 实际/ 缺陷/ ./ 被/ 注入/ 缺陷/ 的/ 程序/ 副本/ 称为/ 变异/ 体/ ./ 采用/ 相同/ 的/ 测试/ 输入/ ,/ 分别/ 执行/ 原程序/ 和/ 变异/ 体/ ,/ 如果/ 某/ 测试用例/ 能够/ 从/ 执行/ 结果/ 上/ 区分/ 某/ 变异/ 体/ 和/ 原程序/ ,/ 则/ 称/ 该/ 变异/ 体/ 被/ 杀死/ ;/ 如果/ 任何/ 测试用例/ 都/ 不能/ 杀死/ 某/ 变异/ 体/ ,/ 则/ 称/ 该/ 变异/ 体为/ 等价/ 变异/ 体/ ./ 变异/ 测试/ 常/ 被/ 用于/ 评价/ 现有/ 测试用例/ 集/ 的/ 质量/ ;/ 也/ 被/ 用于/ 辅助/ 生成/ 单元/ 测试用例/ ,/ 其/ 准则/ 为/ 所/ 生成/ 的/ 测试用例/ 集/ 能够/ 杀死/ 所有/ 变异/ 体/ ./ 对于/ 给定/ 的/ 测试用例/ 集/ ,/ 其/ 杀死/ 的/ 变异/ 体/ 数量/ 占/ 所有/ 非/ 等价/ 变异/ 体/ 的/ 百分比/ ,/ 称为/ 该/ 测试用例/ 集/ 的/ 变异/ 得分/ ./ 变异/ 得分/ 是/ 衡量/ 测试用例/ 缺陷/ 检测/ 能力/ 的/ 重要/ 指标/ [/ 2/ ]/ ./ 因此/ ,/ 基于/ 变异/ 分析/ ,/ 能够/ 生成/ 具有/ 更高/ 缺陷/ 检测/ 能力/ 的/ 单元/ 测试用例/ 集/ ./ 变异/ 测试/ 不仅/ 可以/ 模拟/ 现实/ 中/ 的/ 各种/ 缺陷/ ,/ 还/ 能够/ 选择/ 缺陷/ 发生/ 的/ 位置/ [/ 3/ ]/ ./ 但是/ ,/ 实际/ 的/ 软件/ 规模/ 大/ 、/ 复杂度/ 高/ [/ 4/ ]/ ,/ 从而/ 产生/ 的/ 变异/ 体/ 为数众多/ ./ 此时/ ,/ 为了/ 生成/ 有效/ 的/ 测试用例/ 集/ ,/ 以/ 最大/ 限度/ 地/ 杀死/ 变异/ 体/ ,/ 必须/ 反复/ 执行/ 原程序/ 和/ 变异/ 体/ ,/ 这/ 显著/ 增加/ 了/ 测试用例/ 生成/ 的/ 成本/ ,/ 从而/ ,/ 严重/ 影响/ 了/ 这/ 一/ 测试用例/ 生成/ 技术/ 的/ 实用性/ ./ 变异/ 体/ 约简/ 是/ 减小/ 变异/ 测试/ 代价/ 的/ 有效途径/ ,/ 然而/ ,/ 现有/ 变异/ 体/ 约简/ 方法/ ,/ 其/ 约简/ 力度/ 和/ 有效性/ 仍/ 需/ 进一步提高/ ./ 弱/ 变异/ 测试/ 能够/ 降低/ 程序/ 的/ 执行/ 代价/ ,/ 但是/ ,/ 其/ 降低/ 幅度/ 仅为/ 50/ %/ 左右/ ./ 更/ 重要/ 的/ 是/ ,/ 现有/ 基于/ 变异/ 分析/ 的/ 测试用例/ 生成/ 方法/ ,/ 每次/ 仅以/ 杀死/ 一个/ 变异/ 体/ 作为/ 目标/ ,/ 生成/ 测试用例/ ,/ 使得/ 测试用例/ 生成/ 的/ 效率/ 降低/ ./ 这/ 表明/ ,/ 研究/ 新/ 的/ 方法/ ,/ 以/ 提高/ 基于/ 变异/ 分析/ 的/ 测试用例/ 生成/ 效率/ ,/ 是/ 非常/ 必要/ 的/ ./ 迄今为止/ ,/ 相关/ 的/ 研究/ 仍/ 非常少/ ./ 本文/ 基于/ 弱/ 变异/ 测试/ 准则/ ,/ 研究/ 新/ 的/ 测试用例/ 生成/ 方法/ ,/ 以/ 高效/ 地/ 生成/ 具有/ 很/ 高/ 缺陷/ 检测/ 能力/ 的/ 测试用例/ ./ 所提/ 方法/ 根据/ 弱/ 变异/ 测试/ 转化/ 思想/ [/ 5/ ]/ ,/ 将/ 所有/ 变异/ 体/ 转化/ 为/ 变异/ 分支/ ,/ 并/ 集成/ 到/ 原程序/ 中/ ,/ 形成/ 新/ 的/ 被/ 测/ 程序/ 之后/ ,/ 建立/ 新/ 的/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ,/ 并/ 采用/ 集合/ 进化/ 优化/ 方法/ 求解/ 上述/ 优化/ 模型/ ,/ 以/ 生成/ 杀死/ 所有/ 变异/ 体/ 的/ 测试用例/ ./ 13/ 个/ 基准/ 和/ 工业/ 程序/ 的/ 测试/ 结果表明/ ,/ 所提/ 方法/ 能够/ 有效/ 提高/ 测试用例/ 的/ 生成/ 效率/ ./ 本文/ 第/ 2/ 节/ 综述/ 相关/ 的/ 研究/ 工作/ ,/ 并/ 说明/ 本文/ 的/ 研究/ 动机/ ;/ 第/ 3/ 节/ 详细/ 阐述/ 所提/ 方法/ ,/ 包括/ 变异/ 测试/ 转化/ 、/ 问题/ 的/ 表示/ 以及/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ;/ 所/ 建/ 模型/ 的/ 集合/ 进化/ 求解/ 方法/ ,/ 将/ 在/ 第/ 4/ 节/ 给出/ ;/ 第/ 5/ 节/ 通过/ 对比/ 实验/ ,/ 评价/ 所提/ 方法/ 的/ 性能/ ;/ 最后/ ,/ 第/ 6/ 节/ 总结/ 本文/ 所/ 做/ 的/ 工作/ ,/ 并/ 提出/ 后续/ 的/ 研究/ 问题/ ./ 2/ 相关/ 工作/ 本/ 节/ 首先/ 简述/ 变异/ 测试/ 的/ 思想/ ;/ 然后/ ,/ 综述/ 现有/ 基于/ 变异/ 分析/ 的/ 单元/ 测试用例/ 生成/ 方法/ ;/ 考虑/ 到/ 进化/ 优化/ 在/ 测试用例/ 生成/ 中/ 已经/ 取得/ 丰硕/ 的/ 研究成果/ ,/ 并/ 对/ 基于/ 变异/ 分析/ 的/ 测试用例/ 生成/ 问题/ 具有/ 很强/ 的/ 指导作用/ ,/ 最后/ ,/ 阐述/ 已有/ 的/ 基于/ 进化/ 优化/ 的/ 测试用例/ 生成/ 方法/ ./ 2.1/ 变异/ 测试/ 变异/ 测试/ 最早/ 由/ DeMillo/ 等/ 人/ [/ 6/ ]/ 和/ Hamlet/ [/ 7/ ]/ 提出/ ,/ 目前/ ,/ 已/ 广泛应用/ 于/ C/ 、/ Java/ 、/ SQL/ 等/ 各种/ 语言/ 以及/ 单元/ 、/ 集成/ 等/ 软件测试/ 的/ 各个/ 层次/ ./ 变异/ 测试/ 已经/ 取得/ 丰硕/ 的/ 研究成果/ ,/ 并/ 应用/ 于/ 工业/ 程序/ 的/ 测试/ [/ 8/ ]/ ./ 然而/ ,/ 高昂/ 的/ 测试/ 代价/ ,/ 始终/ 是/ 变异/ 测试/ 难以/ 回避/ 的/ 问题/ ./ 研究/ 合适/ 的/ 方法/ ,/ 降低/ 变异/ 测试/ 代价/ ,/ 成为/ 该/ 领域/ 的/ 热点/ 方向/ 之一/ ./ 通过/ 抽样/ 和/ 选择/ 变异/ 测试方法/ ,/ 以/ 减少/ 所/ 需/ 杀死/ 的/ 变异/ 体/ 数量/ ,/ 是/ 降低/ 变异/ 测试/ 代价/ 的/ 有效/ 方法/ ./ 其中/ ,/ 抽样/ 方法/ 仅/ 选择/ 一定/ 比例/ 的/ 变异/ 体/ 执行/ 测试/ [/ 9/ -/ 10/ ]/ ,/ 但是/ ,/ 随着/ 抽样/ 比例/ 的/ 减少/ ,/ 变异/ 测试/ 的/ 充分/ 度/ 将/ 明显/ 下降/ [/ 11/ ]/ ./ 选择/ 方法/ 通过/ 舍弃/ 某些/ 变异/ 算子/ ,/ 减少/ 生成/ 的/ 变异/ 体/ 数量/ [/ 12/ -/ 13/ ]/ ,/ 然而/ ,/ 被/ 舍弃/ 变异/ 算子/ 的/ 增多/ ,/ 将/ 导致/ 变异/ 得分/ 显著/ 降低/ ./ 此外/ ,/ 高阶/ Page3/ 变异/ 体/ 虽然/ 也/ 能够/ 有效/ 减少/ 变异/ 体/ 的/ 数量/ [/ 14/ -/ 16/ ]/ ,/ 可是/ ,/ 高阶/ 变异/ 体/ 生成/ 的/ 代价/ ,/ 将/ 随着/ 阶次/ 的/ 增多/ 而/ 急剧/ 攀升/ ./ 弱/ 变异/ 测试/ 是/ 另一类/ 降低/ 测试/ 代价/ 的/ 有效/ 方法/ [/ 17/ ]/ ./ 弱/ 变异/ 测试/ 要求/ 测试用例/ 必须/ 能够/ 执行/ 到/ 变异/ 语句/ ,/ 且/ 执行/ 变异/ 语句/ 后/ 的/ 状态/ 发生/ 改变/ ,/ 即/ 满足/ 可达性/ 和/ 必要性/ 条件/ [/ 18/ ]/ ./ 而强/ 变异/ 测试/ 则/ 进一步/ 要求/ 改变/ 的/ 状态/ 必须/ 影响/ 程序/ 的/ 执行/ 结果/ ,/ 即/ 满足/ 充分性/ 条件/ ./ 研究/ 表明/ ,/ 满足/ 必要性/ 条件/ 的/ 测试用例/ ,/ 能够/ 在/ 很大/ 程度/ 上/ 满足/ 充分性/ 条件/ [/ 19/ -/ 20/ ]/ ./ 绝大多数/ 情况/ 下/ ,/ 弱/ 变异/ 测试/ 是/ 强/ 变异/ 测试/ 的/ 有效/ 替代/ ,/ 且/ 弱/ 变异/ 测试/ 能够/ 节省/ 一半/ 的/ 测试/ 成本/ [/ 21/ -/ 22/ ]/ ./ 基于/ 弱/ 变异/ 测试/ 准则/ ,/ Durelli/ 等/ 人/ [/ 23/ ]/ 利用/ 现有/ 托管/ 执行/ 环境/ 和/ 底层/ 虚拟/ 指令集/ ,/ 构建/ 虚拟机/ 集成/ 的/ 弱/ 变异/ 测试环境/ ,/ 能够/ 显著/ 提高/ 变异/ 测试/ 效率/ ./ Kim/ 等/ 人/ [/ 24/ ]/ 针对/ 非/ 解释性/ 系统/ 执行/ 速度/ 快/ 的/ 特点/ ,/ 建立/ 新/ 的/ 弱/ 变异/ 测试方法/ ,/ 该/ 方法/ 降低/ 了/ 非/ 解释性/ 变异/ 测试/ 系统/ 的/ 执行/ 代价/ ./ 把/ 变异/ 体/ 转化/ 为/ 变异/ 分支/ ,/ Papadakis/ 等/ 人/ [/ 5/ ]/ 将/ 弱/ 变异/ 测试/ 问题/ ,/ 转化/ 为/ 分支/ 覆盖/ 问题/ ,/ 从而/ 进一步提高/ 弱/ 变异/ 测试/ 的/ 效率/ ./ Papadakis/ 等/ 人/ [/ 25/ ]/ 还/ 分析/ 变异/ 体/ 所在/ 的/ 路径/ ,/ 以/ 选择/ 变异/ 体/ 执行/ 弱/ 变异/ 测试/ ,/ 从而/ 增强/ 了/ 所/ 生成/ 的/ 测试用例/ 的/ 有效性/ ./ 2.2/ 基于/ 变异/ 分析/ 的/ 测试用例/ 生成/ 测试用例/ 生成/ 是/ 指/ 根据/ 特定/ 的/ 测试/ 准则/ ,/ 例如/ 分支/ 覆盖/ ,/ 产生/ 满足/ 需求/ 的/ 测试用例/ ./ 作为/ 直接/ 面向/ 缺陷/ 的/ 测试/ 技术/ ,/ 变异/ 测试/ 能够/ 辅助/ 生成/ 具有/ 很/ 高/ 缺陷/ 检测/ 能力/ 的/ 单元/ 测试用例/ ./ 但是/ ,/ 基于/ 变异/ 测试/ ,/ 如何/ 高效/ 地/ 生成/ 测试用例/ ,/ 相关/ 的/ 研究成果/ 却/ 很少/ ./ 基于/ 约束/ 的/ 测试用例/ 生成/ (/ Constraint/ -/ BasedTestdatageneration/ ,/ CBT/ )/ 方法/ 是/ 较/ 早/ 基于/ 变异/ 分析/ 生成/ 测试用例/ 的/ 研究/ 之一/ ,/ 该/ 方法/ 将/ 杀死/ 变异/ 体/ 的/ 条件/ 转化/ 为/ 约束/ ,/ 并/ 通过/ 约束/ 求解/ 的/ 方法/ ,/ 生成/ 测试用例/ [/ 26/ ]/ ./ 实验/ 表明/ ,/ CBT/ 生成/ 的/ 测试用例/ ,/ 能够/ 杀死/ 约/ 90/ %/ 的/ 变异/ 体/ [/ 19/ ]/ ./ 动态/ 域/ 约简/ (/ DynamicDomainReduction/ ,/ DDR/ )/ 方法/ 对/ CBT/ 进行/ 改进/ ,/ 并/ 通过/ 回溯/ 搜索/ ,/ 生成/ 测试用例/ [/ 27/ -/ 28/ ]/ ./ 但是/ ,/ DDR/ 和/ CBT/ 由于/ 采用/ 符号执行/ 方法/ ,/ 导致/ 生成/ 测试用例/ 的/ 代价/ 高/ 、/ 适应/ 范围/ 窄/ ./ 动态/ 符号执行/ (/ DynamicSymbolicExecution/ ,/ DSE/ )/ 方法/ 虽然/ 改进/ 了/ 传统/ 符号执行/ 方法/ [/ 29/ -/ 30/ ]/ ,/ 但是/ ,/ 由于/ 过分/ 依赖/ 约束/ 求解/ 器/ ,/ 使得/ DSE/ 生成/ 测试用例/ 的/ 效率/ 尚需/ 进一步提高/ ./ 上述/ 方法/ 都/ 基于/ 程序/ 的/ 控制流/ 图/ (/ ControlFlowGraph/ )/ ,/ 仅/ 考虑/ 程序/ 语句/ 之间/ 的/ 控制/ 依赖/ 关系/ ,/ 而/ 忽略/ 了/ 它们/ 之间/ 的/ 数据/ 依赖/ 关系/ ./ 同时/ 考虑/ 这/ 两种/ 关系/ ,/ 对/ DDR/ 方法/ 进行/ 改进/ ,/ 能够/ 提高/ 测试用例/ 的/ 生成/ 效率/ [/ 31/ ]/ ./ 此外/ ,/ 根据/ 同一/ 位置/ 变异/ 语句/ 之间/ 的/ 相似性/ ,/ 将/ 这些/ 变异/ 体/ 组合成/ 少数/ 复合/ 变异/ 体/ ,/ 进一步/ 降低/ 了/ 测试用例/ 生成/ 的/ 代价/ [/ 32/ ]/ ./ 但是/ ,/ 上述/ 研究/ 在/ 问题/ 的/ 求解/ 方法/ 上/ ,/ 仍/ 局限于/ 传统/ 的/ 约束/ 求解/ 方法/ ,/ 导致/ 测试用例/ 生成/ 的/ 效率/ 难以/ 显著/ 提高/ ./ 2.3/ 进化/ 优化/ 的/ 测试用例/ 生成/ 近年来/ ,/ 进化/ 优化/ 方法/ 广泛应用/ 于/ 软件测试/ ,/ 尤其/ 用于/ 解决/ 传统/ 结构化/ 测试用例/ 的/ 生成/ [/ 33/ -/ 41/ ]/ 问题/ ./ 在/ 传统/ 的/ 结构化/ 测试/ 中/ ,/ Harman/ 等/ 人/ [/ 38/ ]/ 利用/ 多/ 目标/ 优化/ 方法/ 搜索/ 测试用例/ ,/ 但是/ ,/ 每次/ 仅/ 针对/ 一个/ 测试/ 目标/ ,/ 生成/ 相应/ 的/ 测试用例/ ./ Fraser/ 等/ 人/ [/ 39/ ]/ 利用/ 遗传算法/ (/ GeneticAlgorithm/ ,/ GA/ )/ ,/ 生成/ 高质量/ 的/ 测试用例/ 集/ ,/ 然而/ ,/ 该/ 方法/ 目前/ 仅/ 应用/ 于/ 传统/ 的/ 结构化/ 测试/ ./ Jia/ 等/ 人/ [/ 14/ -/ 15/ ]/ 利用/ 进化/ 优化/ 方法/ ,/ 生成/ 更难/ 杀死/ 的/ 高阶/ 变异/ 体/ ,/ 以/ 反映/ 实际/ 软件/ 中/ 的/ 复杂/ 缺陷/ ./ Fraser/ 等/ 人/ [/ 3/ ]/ 利用/ 进化/ 优化/ 方法/ ,/ 提高/ 测试用例/ 生成/ 的/ 自动化/ 程度/ ./ Souza/ 等/ 人/ [/ 42/ ]/ 统计/ 了/ 基于/ 变异/ 分析/ 生成/ 测试用例/ 的/ 相关/ 19/ 篇/ 主要/ 论文/ ,/ 发现/ 采用/ GA/ 的/ 就/ 有/ 6/ 篇/ ./ 可见/ ,/ 在/ 基于/ 变异/ 分析/ 的/ 测试用例/ 生成/ 问题/ 上/ ,/ 进化/ 优化/ 已经/ 成为/ 主要/ 方法/ ./ 尽管如此/ ,/ 与/ 传统/ 结构化/ 测试用例/ 生成/ 相比/ ,/ 对/ 基于/ 变异/ 分析/ 的/ 测试用例/ 生成/ 问题/ 的/ 研究/ 仍然/ 很少/ ;/ 而且/ ,/ 现有/ 的/ 这类/ 方法/ ,/ 其/ 测试用例/ 生成/ 效率/ 仍/ 有待于/ 更进一步/ 提高/ ./ 由于/ 弱/ 变异/ 测试/ 效率/ 明显/ 高于/ 强/ 变异/ 测试/ ,/ Papadakis/ 等/ 人/ [/ 5/ ]/ 基于/ 弱/ 变异/ 测试/ 准则/ ,/ 构建/ 变异/ 分支/ ,/ 将/ 弱/ 变异/ 测试/ 问题/ 转化/ 为/ 分支/ 覆盖/ 测试/ 问题/ ,/ 从而/ ,/ 进一步提高/ 弱/ 变异/ 测试/ 效率/ ./ 然而/ ,/ 在/ 生成/ 测试用例/ 时/ ,/ 仍/ 采用/ 符号执行/ 等/ 复杂/ 且/ 低效/ 的/ 方法/ ;/ 尽管/ 也/ 使用/ 了/ 进化/ 优化/ 方法/ ,/ 但是/ ,/ 每次/ 仅以/ 一个/ 分支/ 作为/ 目标/ ,/ 生成/ 一个/ 测试用例/ ./ Papadakis/ 等/ 人/ 的/ 弱/ 变异/ 测试/ 转化/ 方法/ 非常/ 实用/ ,/ 然而/ ,/ 为数众多/ 的/ 变异/ 体/ 导致/ 过多/ 的/ 测试/ 目标/ ./ 采用/ 进化/ 优化/ 方法/ 生成/ 测试用例/ 时/ ,/ 一个/ 个体/ 仅/ 表示/ 一个/ 测试用例/ ;/ 当/ 一个/ 个体/ 包含/ 多个/ 测试用例/ 时/ ,/ 相应/ 的/ 进化/ 优化/ 方法/ 称为/ 集合/ 进化/ [/ 43/ -/ 44/ ]/ ./ 集合/ 进化/ 非常适合/ 于/ 生成/ 杀死/ 多个/ 变异/ 体/ 的/ 测试用例/ ./ 鉴于/ 此/ ,/ 本文/ 为了/ 提高/ 测试用例/ 的/ 生成/ 效率/ ,/ 基于/ 弱/ 变异/ 测试/ 转化/ 方法/ ,/ 建立/ 新/ 的/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ,/ 并/ 通过/ 集合/ 进化/ ,/ 生成/ 杀死/ 所有/ 变异/ Page4/ 体/ 的/ 测试用例/ ./ 3/ 问题/ 建模/ 本/ 节/ 基于/ 弱/ 变异/ 测试/ 转化/ 方法/ ,/ 将/ 变异/ 体/ 杀死/ 问题/ 转化/ 为/ 分支/ 覆盖/ 问题/ ;/ 基于/ 转化/ 后/ 的/ 分支/ 覆盖/ 问题/ ,/ 建立/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ./ 3.1/ 变异/ 测试/ 转化/ 记/ 被/ 测/ 程序/ 为/ P/ ,/ s/ 为/ P/ 的/ 一条/ 语句/ (/ 取其/ 主要/ 表达式/ )/ ,/ 对/ s/ 实施/ 某/ 变异/ 算子/ ,/ 得到/ 相应/ 的/ 变异/ 语句/ s/ ,/ 用/ s/ 替换/ P/ 中/ 的/ s/ ,/ 生成/ 变异/ 体/ m/ ./ 根据/ 弱/ 变异/ 测试/ 准则/ ,/ 对于/ 变异/ 体/ m/ ,/ 如果/ 存在/ 测试用例/ 能够/ 执行/ 到/ 变异/ 语句/ s/ ,/ 且/ 执行/ 该/ 语句/ 后/ 的/ 状态/ 发生/ 改变/ ,/ 即/ s/ !/ =/ s/ ,/ 那么/ ,/ 变异/ 体/ m/ 被/ 杀死/ ./ 如果/ 将/ s/ !/ =/ s/ 作为/ 条件/ ,/ 构建/ 分支/ 语句/ b/ ,/ 那么/ ,/ 覆盖/ b/ 真/ 分支/ 的/ 测试用例/ ,/ 必然/ 满足/ 杀死/ m/ 的/ 必要条件/ ,/ 即/ 以弱/ 变异/ 测试/ 准则/ 杀死/ m/ ./ 表/ 1/ 变异/ 分支/ 构建/ 原/ 语句/ (/ s/ )/ 变异/ 算子/ AORBAORSAOIUAOISAODUAODSRORCORCODCOISORLORLOILODASRS/ 将/ B/ 的/ 变异/ 分支/ ,/ 依次/ 插入/ 到/ P/ 的/ 相应/ 位置/ ,/ 使得/ 被/ 插入/ 的/ 分支/ ,/ 与/ 变异/ 前/ 语句/ 具有/ 相同/ 的/ 可达性/ ./ 这样/ ,/ 所有/ 变异/ 体/ 转化/ 为/ 等量/ 的/ 变异/ 分支/ ,/ 并/ 全部/ 融入/ 到/ P/ 中/ ,/ 即可/ 得到/ 一个/ 新/ 的/ 被/ 测/ 程序/ P/ ./ 鉴于/ 变异/ 分支/ 在/ P/ 中/ 不/ 执行/ 任何/ 实质性/ 的/ 操作/ ,/ 因仅/ 需/ 通过/ “/ !/ =/ ”/ 组合/ 变异/ 前后/ 的/ 语句/ s/ 和/ s/ ,/ 就/ 能够/ 构建/ 新/ 的/ 分支/ b/ ,/ 其中/ ,/ s/ 为/ 变异/ 前/ 语句/ ,/ s/ 则/ 为/ s/ 的/ 一条/ 变异/ 语句/ ./ 因此/ ,/ 新/ 分支/ 的/ 构建/ 方法/ 非常容易/ ./ 可见/ ,/ 每个/ 分支/ b/ 对应/ 一个/ 变异/ 体/ m/ ,/ 每个/ m/ 可以/ 产生/ 一个/ b/ ,/ 分支/ b/ 和/ 变异/ 体/ m/ 一一对应/ ,/ 因此/ ,/ b/ 称为/ 变异/ 分支/ ./ 对于/ P/ ,/ 将/ 所有/ 变异/ 前后/ 的/ 语句/ 进行/ 上述/ 组合/ ,/ 得到/ 一个/ 变异/ 分支/ 集/ B/ ,/ 对应/ 的/ 变异/ 体集/ 为/ M/ ./ 为了/ 更/ 清晰/ 说明/ 变异/ 分支/ 的/ 构建/ 方法/ ,/ 采用/ MuClipse/ [/ 45/ ]/ 的/ 全部/ 15/ 类/ 方法/ 级/ (/ Method/ -/ Level/ )/ 变异/ 算子/ ,/ 针对/ 各种/ 语句/ ,/ 列出/ 所/ 构造/ 的/ 变异/ 分支/ ,/ 如表/ 1/ 所列/ ./ 例如/ ,/ 表/ 1/ 中/ 对/ 原/ 语句/ s/ ,/ a/ +/ b/ ,/ 实施/ AORB/ 变异/ 算子/ ,/ 得到/ 一条/ 变异/ 后/ 语句/ s/ ,/ a/ / b/ ,/ 组合/ 得到/ 变异/ 分支/ b/ ,/ if/ (/ (/ a/ +/ b/ )/ !/ =/ (/ a/ / b/ )/ )/ ./ 当然/ ,/ 对/ a/ +/ b/ 实施/ AORB/ 变异/ 算子/ ,/ 还/ 可以/ 产生/ 其他/ 3/ 条/ 变异/ 语句/ :/ a/ -/ b/ 、/ a/ // b/ 和/ a/ %/ b/ ,/ 相应/ 地/ ,/ 还/ 可以/ 构建/ 3/ 个/ 变异/ 分支/ ,/ 表/ 1/ 中仅/ 列出/ 1/ 条/ ./ a/ +/ ba/ +/ ba/ +/ b/ -/ a/ +/ ba/ >/ b/ !/ (/ a/ >/ b/ )/ a/ >/ ba/ >/ >/ ba/ |/ ba/ +/ b/ ~/ a/ +/ ba/ +/ =/ b/ 此/ ,/ 对/ 原程序/ 的/ 执行/ 不会/ 构成/ 任何/ 影响/ ./ 对于/ 转化/ 后/ 的/ 程序/ P/ ,/ 覆盖/ B/ 的/ 测试用例/ 集/ ,/ 必然/ 能够/ 以弱/ 变异/ 测试/ 准则/ 杀死/ M/ ./ 至此/ ,/ 杀死/ P/ 的/ 所有/ 变异/ 体/ M/ 的/ 变异/ 测试/ 问题/ ,/ 转化/ 为/ 以/ P/ 的/ 变异/ 分支/ 集/ B/ 为/ 目标/ 分支/ 的/ 覆盖/ 测试/ 问题/ ./ Page5/ 图/ 1/ 以/ 三角形/ 分类程序/ Triangle/ [/ 14/ ]/ 为例/ ,/ 说明/ 弱/ 变异/ 测试/ 的/ 转化/ 过程/ ./ 其中/ ,/ (/ a/ )/ 为/ Triangle/ 的/ 部分/ 代码/ ;/ 利用/ 变异/ 测试工具/ MuClipse/ ,/ 对/ 语句/ 5/ 实施/ ROR/ 变异/ 算子/ ,/ 得到/ 的/ 变异/ 分支/ 如/ (/ b/ )/ 所示/ ;/ 对/ 语句/ 6/ 实施/ AORB/ 变异/ 算子/ ,/ 得到/ 的/ 变异/ 分支/ 如/ (/ c/ )/ 所示/ ./ 将/ (/ b/ )/ 和/ (/ c/ )/ 的/ 分支/ 植入/ 到/ 原程序/ 中/ ,/ 其中/ ,/ (/ b/ )/ 所示/ 的/ 分支/ 被/ 植入/ 到/ (/ a/ )/ 的/ 语句/ 5/ 之前/ ,/ (/ c/ )/ 所示/ 的/ 分支/ 被/ 植入/ 到/ 语句/ 6/ 之前/ ./ 将/ Triangle/ 的/ 所有/ 可/ 变异/ 语句/ ,/ 都/ 进行/ 上述/ 操作/ ,/ 即可/ 得到/ 转化/ 后/ 的/ 新/ 程序/ P/ ./ …/ 1/ ./ if/ (/ a/ </ =/ 0/ ‖/ b/ </ =/ 0/ ‖/ c/ </ =/ 0/ )/ {/ 2/ ./ return4/ ;/ 3/ ./ }/ 4/ ./ inttrian/ =/ 0/ ;/ 5/ ./ if/ (/ a/ =/ =/ b/ )/ {/ 6/ ./ trian/ =/ trian/ +/ 1/ ;/ 7/ ./ }/ 8/ ./ if/ (/ a/ =/ =/ c/ )/ {/ 9/ ./ trian/ =/ trian/ +/ 2/ ;/ 10/ ./ }/ 11/ ./ if/ (/ b/ =/ =/ c/ )/ {/ 12/ ./ trian/ =/ trian/ +/ 3/ ;/ 13/ ./ }/ …/ (/ a/ )/ Triangle/ 的/ 部分/ 代码/ 这种/ 转化/ 方法/ 能够/ 进一步/ 减少/ 弱/ 变异/ 测试/ 代价/ ./ 覆盖/ P/ 中/ 所有/ 变异/ 分支/ 的/ 测试用例/ 集/ ,/ 必然/ 能够/ 以弱/ 变异/ 测试/ 准则/ 杀死/ 所有/ 变异/ 体/ ./ 但是/ ,/ P/ 中/ 融入/ 大量/ 的/ 变异/ 分支/ ,/ 使得/ 被测/ 程序/ 异常/ 复杂/ ./ 事实上/ ,/ 选择/ MuClipse/ 的/ 所有/ 方法/ 级/ 变异/ 算子/ ,/ 对/ Triangle/ 实施/ 变异/ ,/ 共/ 产生/ 325/ 个/ 变异/ 体/ ,/ 即/ P/ 新增/ 了/ 325/ 个/ 变异/ 分支/ ./ 可见/ ,/ 该/ 转化/ 方法/ 显著/ 增加/ 了/ 转化/ 后/ 问题/ 求解/ 的/ 难度/ ./ 尽管/ 进化/ 优化/ 方法/ 能够/ 生成/ 期望/ 的/ 测试用例/ 集/ ,/ 但是/ ,/ 一次/ 运行/ 仅/ 生成/ 一个/ 测试用例/ ,/ 使得/ 测试用例/ 生成/ 的/ 效率/ 大大降低/ ./ 鉴于/ 此/ ,/ 建立/ 合适/ 的/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ,/ 以/ 提高/ 测试用例/ 生成/ 的/ 效率/ ,/ 是/ 非常/ 必要/ 的/ ./ 3.2/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ 通过/ 变异/ 测试/ 转化/ ,/ 不/ 需要/ 同时/ 执行/ 变异/ 体/ 和/ 原程序/ ,/ 仅/ 需/ 分析/ P/ 中/ 每个/ 变异/ 分支/ 是否/ 被/ 覆盖/ ,/ 根据/ 弱/ 变异/ 测试/ 准则/ ,/ 即可/ 判定/ 某/ 变异/ 体/ 是否/ 被/ 杀死/ ./ 因此/ ,/ 覆盖/ B/ 的/ 测试用例/ 集/ ,/ 就是/ 所/ 要/ 生成/ 的/ 测试用例/ 集/ ./ 然而/ ,/ 对于/ 转化/ 后/ 的/ 新/ 程序/ P/ ,/ 由于/ 融入/ 太多/ 的/ 变异/ 分支/ ,/ 使得/ 测试用例/ 生成/ 的/ 效率/ 显著/ 降低/ ./ 对于/ 转化/ 后/ 的/ 被/ 测/ 程序/ P/ ,/ 需要/ 覆盖/ 的/ 分支/ 集为/ B/ ,/ 包含/ |/ B/ |/ 个/ 变异/ 分支/ ./ 设/ 测试/ 输入/ x/ / ∈/ D/ ,/ D/ 为/ 输入/ 域/ ,/ 对于/ 变异/ 分支/ bi/ ∈/ B/ ,/ 设/ x/ / 对/ bi/ 真/ 分支/ 的/ 分支/ 距离/ 为/ fi/ (/ x/ / )/ [/ 34/ ]/ ./ 以/ x/ / 为/ 决策/ 变量/ ,/ 分支/ 距离/ fi/ (/ x/ / )/ 为/ 目标/ 函数/ ,/ 记为/ yi/ ,/ 那么/ ,/ yi/ 取得/ 最小值/ 的/ 充要条件/ 是/ x/ / 覆盖/ bi/ 的/ 真/ 分支/ ./ 对于/ 简单/ 谓词/ 的/ 分支/ 距离/ ,/ 其/ 计算方法/ 如表/ 2/ 所列/ ;/ 而/ 复合/ 谓词/ 的/ 计算方法/ 则/ 如表/ 3/ 所列/ ./ 表/ 3/ 中/ distA/ (/ x/ / )/ (/ distB/ (/ x/ / )/ )/ 表示/ ,/ 以/ x/ / 作为/ 测试/ 输入/ ,/ 复合/ 谓词/ A/ (/ B/ )/ 的/ 分支/ 距离/ ./ 对于/ 本文/ 如果/ 采用/ “/ !/ =/ ”/ 连接/ 的/ 是/ 两个/ 复合/ 谓词/ ,/ 例如/ A/ !/ =/ B/ ,/ 可以/ 转化/ 为/ (/ !/ A/ &&/ B/ )/ ‖/ (/ A/ &&/ !/ B/ )/ 的/ 形式/ ./ 分支/ 条件/ a/ >/ =/ ba/ >/ ba/ </ =/ ba/ </ ba/ =/ =/ ba/ !/ =/ b/ 复合/ 形式/ 这样/ ,/ 覆盖/ 分支/ bi/ 的/ 测试用例/ 生成/ 问题/ ,/ 就/ 转化/ 为/ 函数/ fi/ (/ x/ / )/ 的/ 最小化/ 问题/ ./ 由于/ 共有/ |/ B/ |/ 个/ 变异/ 分支/ ,/ 因此/ ,/ 共有/ |/ B/ |/ 个/ 最小化/ 问题/ ,/ 其/ 数学/ 表示/ 为/ 例如/ ,/ 变异/ 分支/ bi/ 为/ “/ if/ (/ (/ a/ =/ =/ b/ )/ !/ =/ (/ a/ </ b/ )/ )/ ”/ (/ 如图/ 1/ (/ b/ )/ 所示/ )/ ./ 该/ 分支/ 条件/ 为/ 复合/ 谓词/ ,/ 等价/ 于/ “/ (/ a/ =/ =/ b/ )/ ‖/ (/ a/ </ b/ )/ ”/ ./ 因此/ ,/ 以/ x/ / 为/ 输入/ ,/ 其/ 分支/ 距离/ fi/ (/ x/ / )/ ,/ 为/ 两个/ 简单/ 谓词/ “/ (/ a/ =/ =/ b/ )/ ”/ 和/ “/ (/ a/ </ b/ )/ ”/ 分支/ 距离/ 的/ 复合/ 形式/ :/ 式/ (/ 2/ )/ 中/ ,/ dist1/ 分支/ 距离/ ,/ dist2fi/ (/ x/ / )/ =/ 0/ 时/ ,/ x/ / 覆盖/ “/ if/ (/ (/ a/ =/ =/ b/ )/ !/ =/ (/ a/ </ b/ )/ )/ ”/ 的/ 真/ 分支/ ./ 覆盖/ bi/ 的/ 测试/ 输入/ ,/ 可能/ 同时/ 覆盖/ B/ 的/ 其他/ Page6/ 分支/ ./ 因此/ ,/ 选取/ 未/ 被/ 覆盖/ 的/ 变异/ 分支/ bi/ ∈/ B/ ,/ 作为/ 下/ 一个/ 目标/ 分支/ ,/ 生成/ 覆盖/ bi/ 真/ 分支/ 的/ 测试用例/ ,/ 同时/ 记录/ B/ 中/ 其他/ 被/ 覆盖/ 的/ 分支/ ,/ 直至/ B/ 中/ 所有/ 分支/ 都/ 被/ 覆盖/ ./ 对于/ 式/ (/ 1/ )/ 中/ 的/ 每/ 一个/ 最小化/ 问题/ ,/ 仅/ 生成/ 一个/ 测试用例/ ./ 为了/ 生成/ 覆盖/ B/ 的/ 测试用例/ 集/ ,/ 必须/ 反复/ 执行/ 优化/ 过程/ ./ 下/ 一/ 小节/ 将/ 建立/ 一个/ 新/ 的/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ,/ 通过/ 求解/ 该/ 模型/ ,/ 能够/ 生成/ 覆盖/ B/ 的/ 测试用例/ 集/ ./ 3.3/ 测试用例/ 集/ 生成/ 问题/ 的/ 数学模型/ 鉴于/ 式/ (/ 1/ )/ 中/ 的/ 决策/ 变量/ x/ / 仅/ 表示/ 一个/ 测试/ 输入/ ,/ 因此/ ,/ 每次/ 求解/ 仅能/ 生成/ 一个/ 测试用例/ ./ 如果/ 期望/ 生成/ 覆盖/ B/ 中/ 所有/ 变异/ 分支/ 的/ 测试用例/ 集/ ,/ 需要/ 对式/ (/ 1/ )/ 进行/ 多次/ 求解/ ./ 为了/ 提高/ 测试用例/ 生成/ 效率/ ,/ 本节/ 将/ 建立/ 一个/ 新/ 的/ 数学模型/ ,/ 使得/ 一次/ 求解/ 能够/ 得到/ 覆盖/ B/ 的/ 所有/ 变异/ 分支/ 的/ 测试用例/ 集/ ./ 令/ X/ =/ (/ x/ / 1/ / m/ / |/ B/ |/ ,/ 那么/ ,/ X/ 为/ 一个/ 测试/ 输入/ 集/ ./ 对于/ 变异/ 分支/ bi/ ∈/ B/ ,/ 我们/ 期望/ 存在/ 能够/ 覆盖/ bi/ 的/ x/ / fi/ (/ x/ / fi/ (/ x/ / 的/ 充要条件/ 为/ Fi/ (/ X/ )/ =/ 0/ ./ k/ )/ =/ 0/ ./ 令/ Fi/ (/ X/ )/ =/ min/ (/ fi/ (/ x/ / m/ )/ )/ ,/ 那么/ ,/ / x/ / 对于/ 变异/ 分支/ 集/ B/ ,/ 令/ F/ (/ X/ )/ 为/ 反映/ 测试/ 输入/ 集/ X/ 覆盖/ B/ 的/ 函数/ ./ 以/ X/ 为/ 决策/ 变量/ ,/ F/ (/ X/ )/ 为/ 目标/ 函数/ ,/ 那么/ ,/ F/ (/ X/ )/ 取得/ 最小值/ 的/ 充要条件/ 是/ X/ 覆盖/ B/ 中/ 的/ 所有/ 变异/ 分支/ ,/ 即/ F1/ (/ X/ )/ ,/ F2/ (/ X/ )/ ,/ …/ ,/ F/ |/ B/ |/ (/ X/ )/ 同时/ 取得/ 最小值/ ./ 因此/ ,/ 基于/ 变异/ 测试/ 的/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ 可以/ 表示/ 为/ minF/ (/ X/ )/ =/ (/ F1/ (/ X/ )/ ,/ F2/ (/ X/ )/ ,/ …/ ,/ F/ |/ B/ |/ (/ X/ )/ )/ s/ ./ t/ ./ X/ =/ (/ x/ / 比较/ 式/ (/ 1/ )/ 和/ (/ 3/ )/ 可知/ ,/ ①/ 式/ (/ 3/ )/ 的/ 决策/ 变量/ 包含/ 若干/ 测试/ 输入/ ,/ 而式/ (/ 1/ )/ 的/ 决策/ 变量/ 仅/ 表示/ 一个/ 测试/ 输入/ ;/ ②/ 式/ (/ 3/ )/ 以/ X/ 覆盖/ B/ 的/ 所有/ 变异/ 分支/ 的/ 情况/ ,/ 作为/ 优化/ 目标/ ,/ 而式/ (/ 1/ )/ 仅以/ x/ / 覆盖/ 变异/ 分支/ bi/ 的/ 情况/ ,/ 作为/ 优化/ 目标/ ;/ ③/ 对式/ (/ 3/ )/ 的/ 一次/ 求解/ ,/ 将/ 生成/ 一个/ 覆盖/ B/ 的/ 测试用例/ 集/ ,/ 而/ 对式/ (/ 1/ )/ 的/ 一次/ 求解/ ,/ 仅/ 生成/ 覆盖/ bi/ 的/ 一个/ 测试用例/ ,/ 这样一来/ ,/ 为了/ 生成/ 覆盖/ B/ 的/ 测试用例/ 集/ ,/ 需要/ 多次/ 求解/ 式/ (/ 1/ )/ ./ 由此可知/ ,/ 通过/ 求解/ 式/ (/ 3/ )/ ,/ 能够/ 生成/ 覆盖/ 所有/ 变异/ 分支/ 的/ 测试用例/ 集/ ,/ 它们/ 即可/ 杀死/ 所有/ 的/ 变异/ 体/ ./ 下/ 一节/ 将/ 给出/ 通过/ 集合/ 进化/ 求解/ 式/ (/ 3/ )/ ,/ 生成/ 测试用例/ 的/ 方法/ ./ 4/ 基于/ 集合/ 进化/ 的/ 测试用例/ 生成/ 本/ 节/ 阐述/ 用于/ 求解/ 式/ (/ 3/ )/ 的/ 集合/ 进化/ 优化/ 方法/ ,/ 包括/ 适应度/ 函数/ 、/ 进化/ 算子/ 以及/ 算法/ 步骤/ ./ 4.1/ 适应度/ 函数/ 根据/ 程序/ 输入/ 的/ 类型/ ,/ 采用/ 合适/ 方法/ ,/ 得到/ 与/ 某/ 一/ 决策/ 变量/ 取值/ 对应/ 的/ 个体/ 编码/ ./ 不失/ 一般性/ ,/ 仍记/ 决策/ 变量/ X/ =/ (/ x/ / 覆盖/ B/ 的/ 所有/ 变异/ 分支/ 的/ 情况/ ,/ 可以/ 通过/ ∑/ 反映/ ./ 考虑/ 到/ ∑/ 价/ X/ 的/ 性能/ ,/ 对/ ∑/ 要/ 的/ ./ 记/ 归一化/ ∑/ 此/ 作为/ X/ 的/ 适应度/ 函数/ ,/ 那么/ ,/ Fit/ (/ X/ )/ 可以/ 表示/ 为/ 由式/ (/ 4/ )/ 可知/ ,/ X/ 中/ 某/ 一/ 分量/ 越/ 接近/ 于/ 覆盖/ B/ 的/ 某/ 一/ 变异/ 分支/ ,/ 那么/ ,/ Fit/ (/ X/ )/ 越小/ ;/ 当/ X/ 中/ 的/ 某/ 一/ 或/ 多个/ 分量/ 覆盖/ B/ 的/ 所有/ 变异/ 分支/ 时/ ,/ Fit/ (/ X/ )/ =/ 0/ ./ 需要/ 说明/ 的/ 是/ ,/ 在/ 变异/ 测试/ 中/ ,/ 对于/ 某一/ 被/ 测/ 程序/ ,/ 往往/ 存在/ 一/ 或/ 多个/ 等价/ 变异/ 体/ ./ 利用/ 第/ 3.1/ 节/ 的/ 转化/ 方法/ ,/ 得到/ 的/ 转化/ 后/ 程序/ 中/ ,/ 也/ 存在/ 一定/ 数量/ 的/ 变异/ 分支/ ,/ 使得/ 任何/ 测试用例/ 都/ 不/ 可能/ 覆盖/ 它们/ ,/ 这/ 类/ 变异/ 分支/ 称为/ 不可/ 覆盖/ 变异/ 分支/ ./ 对于/ 不可/ 覆盖/ 变异/ 分支/ ,/ 不/ 存在/ X/ ,/ 使得/ Fit/ (/ X/ )/ =/ 0/ ./ 为了/ 避免/ 不可/ 覆盖/ 变异/ 分支/ 对/ 测试用例/ 生成/ 的/ 影响/ ,/ 在/ 生成/ 测试用例/ 之前/ ,/ 我们/ 通过/ 静态/ 分析方法/ ,/ 排除/ 这些/ 变异/ 分支/ ./ 4.2/ 进化/ 算子/ 本/ 小节/ 将/ 设计/ 集合/ 进化/ 算子/ ,/ 包括/ 交叉/ 、/ 变异/ 以及/ 选择/ 算子/ ./ (/ 1/ )/ 交叉/ 算子/ 交叉/ 是/ 产生/ 新/ 个体/ 的/ 主要/ 来源/ ./ 鉴于/ 式/ (/ 3/ )/ 的/ 决策/ 变量/ 包含/ 若干/ 测试用例/ ,/ 因此/ ,/ 不仅/ 考虑/ 个体/ 之间/ 的/ 交叉/ ,/ 还/ 考虑/ 个体/ 内部/ 的/ 交叉/ ,/ 以/ 提高/ 测试用例/ 的/ 性能/ ./ 对于/ 个体/ X1/ =/ (/ x/ / 12/ ,/ …/ ,/ x/ / 2x/ / 22/ ,/ …/ ,/ m/ ./ 选择/ x/ / 1/ 的/ 交叉/ 如图/ 2/ 所示/ ,/ 图中/ ,/ 通过/ 交叉/ 产生/ 的/ 新/ 个体/ 分别/ 记为/ X1/ 和/ X2/ ./ Page7X1/ =/ (/ x/ / 11/ ,/ x/ / 1X2/ =/ (/ x/ / 21/ ,/ x/ / 2/ 对于/ 个体/ X1/ =/ (/ x/ / 1i/ ,/ …/ ,/ x1lx12/ 两个/ 测试/ 输入/ ./ 选择/ x1k/ 部/ 的/ 交叉/ 如图/ 3/ 所示/ ./ 记/ 通过/ 交叉/ 产生/ 的/ 两个/ 新/ 的/ 测试/ 输入/ 分别/ 为/ x/ / 1i/ 和/ x/ / 1x/ / 1j/ ,/ 得到/ 的/ 新/ 个体/ 分别/ 为/ X1/ 和/ X1/ ./ x/ / 1i/ =/ (/ x/ / 11i/ ,/ x/ / 12x/ / 1j/ =/ (/ x/ / 11j/ ,/ x/ / 12/ (/ 2/ )/ 变异/ 算子/ 在/ 集合/ 进化/ 中/ ,/ 变异/ 是/ 产生/ 新/ 个体/ 的/ 辅助/ 手段/ ./ 对于/ 个体/ X1/ ,/ 首先/ ,/ 选择/ 测试/ 输入/ x/ / 1/ 作/ ,/ 即/ 生成/ 新/ 的/ 测试/ 输入/ x/ / 1/ 用/ x/ / 1i/ 代替/ X1/ 中/ 的/ x/ / 1/ (/ 3/ )/ 选择/ 算子/ 在/ 集合/ 进化/ 中/ ,/ 通过/ 选择/ 算子/ ,/ 确定/ 遗传/ 到/ 下一代/ 的/ 个体/ ./ 交叉/ 和/ 变异/ 操作/ 不断/ 产生/ 新/ 的/ 个体/ ,/ 并/ 加入/ 到/ 当前/ 种群/ 中/ ./ 选择/ 这些/ 个体/ 进入/ 下一代/ 的/ 方法/ 是/ :/ 首先/ ,/ 计算/ 这些/ 个体/ 的/ 适应/ 值/ ;/ 然后/ ,/ 对/ 种群/ 中/ 个体/ 按照/ 适应/ 值/ 大小/ 排序/ ;/ 最后/ ,/ 选择/ 适应/ 值/ 最小/ 的/ 若干/ 个体/ ,/ 形成/ 下一代/ 种群/ ./ 4.3/ 算法/ 步骤/ 本文/ 提出/ 的/ 测试用例/ 生成/ 过程/ ,/ 如/ 算法/ 1/ 所示/ ./ 算法/ 1/ ./ 基于/ 集合/ 进化/ 的/ 测试用例/ 生成/ ./ 输入/ :/ 集合/ 进化/ 参数/ 输出/ :/ 测试用例/ 集/ BEGINsetParameters/ (/ )/ ;/ // // 参数设置/ initialize/ (/ pop/ )/ ;/ // // 初始化/ 种群/ generation/ ←/ 0/ ;/ // // 进化/ 代数/ DOWHILE/ (/ generation/ </ max/ _/ allow/ _/ evolve/ )/ ENDWHILEEND5/ 实验/ 本/ 节/ 通过/ 实验/ 评价/ 所提/ 方法/ 的/ 性能/ ,/ 首先/ ,/ 列出/ 需要/ 解决/ 的/ 问题/ ;/ 然后/ ,/ 介绍/ 采用/ 的/ 基准/ 与/ 工业/ 程序/ ;/ 接着/ ,/ 说明/ 实验/ 过程/ ;/ 最后/ ,/ 分析/ 实验/ 结果/ ./ 5.1/ 需要/ 解决/ 的/ 问题/ 本文/ 提出/ 一种/ 基于/ 变异/ 分析/ 和/ 集合/ 进化/ 的/ 测试用例/ 生成/ 方法/ ,/ 为了/ 评价/ 该/ 方法/ 的/ 性能/ ,/ 需要/ 回答/ 如下/ 4/ 个/ 问题/ :/ (/ 1/ )/ 所提/ 方法/ 能否/ 降低/ 测试用例/ 生成/ 的/ 成本/ ?/ 这里/ ,/ 通过/ 生成/ 测试用例/ 需要/ 的/ 迭代/ 次数/ 和/ 时间/ ,/ 反映/ 测试用例/ 生成/ 的/ 成本/ ./ (/ 2/ )/ 生成/ 的/ 测试用例/ 能否/ 基于/ 弱/ 变异/ 测试/ 准则/ 有效/ 杀死/ 变异/ 体/ ?/ 这里/ ,/ 通过/ 基于/ 弱/ 变异/ 测试/ 准则/ ,/ 被/ 杀死/ 的/ 变异/ 体/ 个数/ 与非/ 等价/ 变异/ 体/ 个数/ 的/ 比/ ,/ 反映/ 测试用例/ 杀死/ 变异/ 体/ 的/ 有效性/ ./ (/ 3/ )/ 生成/ 的/ 测试用例/ 能否/ 基于/ 强/ 变异/ 测试/ 准则/ 有效/ 杀死/ 变异/ 体/ ?/ 这里/ ,/ 通过/ 基于/ 强/ 变异/ 测试/ 准则/ ,/ 被/ 杀死/ 的/ 变异/ 体/ 个数/ 与非/ 等价/ 变异/ 体/ 个数/ 的/ 比/ ,/ 反映/ 测试用例/ 杀死/ 变异/ 体/ 的/ 有效性/ ./ (/ 4/ )/ 集合/ 进化/ 参数/ 的/ 取值/ 是否/ 影响/ 所提/ 测试用例/ 生成/ 方法/ 的/ 性能/ ?/ 鉴于/ 集合/ 规模/ 是/ 集合/ 进化/ 特有/ 的/ 参数/ ,/ 因此/ ,/ 这里/ 通过/ 集合/ 规模/ 的/ 取值/ 对/ 生成/ 测试用例/ 的/ 性能/ ,/ 反映/ 集合/ 进化/ 参数/ 对/ 所/ 提/ 方法/ 的/ 影响/ ./ 5.2/ 被测/ 程序/ 本/ 节/ 选择/ 13/ 个/ Java/ 源程序/ ,/ 作为/ 被测/ 程序/ ,/ 如表/ 4/ 所列/ ,/ 表中/ J1/ 、/ J2/ 和/ J3/ 选自/ 文献/ [/ 5/ ]/ 的/ 变异/ 测试/ 实验/ 程序/ ;/ J4/ 不/ 但是/ [/ 5/ ]/ 的/ 实验/ 程序/ ,/ 也/ 是/ 文献/ [/ 14/ -/ 15/ ]/ 的/ 案例/ 分析程序/ ;/ J5/ 是/ 文献/ [/ 46/ ]/ 的/ 变异/ 测试/ 实验/ 程序/ ;/ J6/ ~/ J12/ 是/ Apache/ 开源/ 项目/ 的/ 程序/ 类/ ①/ ,/ 其中/ ,/ J6/ 、/ J8/ 、/ J9/ 、/ J12/ 和/ J13/ 曾/ 作为/ 文献/ [/ 3/ ]/ 的/ 部分/ 实验/ 程序/ ./ 在/ 所有/ 13/ 个/ 实验/ 程序/ 中/ ,/ J1/ ~/ J5/ 是/ 变异/ 测试/ 常用/ 的/ 基准/ 程序/ ;/ J6/ ~/ J13/ 常/ 作为/ 变异/ 测试/ 或/ 其他/ 软件测试/ 的/ 部分/ 程序/ ./ 利用/ Metrics1/ ./ 3.6/ 统计/ 程序/ 的/ 基本/ 信息/ ②/ ,/ 可以/ 得到/ ,/ 这/ 13/ 个/ 程序/ 共/ 包含/ 2412/ 行/ 代码/ ,/ 其中/ ,/ J1/ ~/ J5/ 包含/ 166/ 行/ ,/ 而后/ 8/ 个/ 程序/ 类/ 占/ 90/ %/ 以上/ 的/ 代码/ 行数/ ./ 此外/ ,/ 这些/ 实验/ 程序/ 共/ 包含/ 151/ 个/ 方法/ ./ 鉴于/ 这些/ 方法/ 中/ 的/ 多数/ 为/ 形如/ “/ getXXX/ (/ )/ ”/ 、/ “/ setXXX/ (/ )/ ”/ 的/ 简单/ 方法/ ,/ 因此/ ,/ 仅/ 测试/ 46/ 个/ 较/ 复杂/ 的/ 方法/ ./ 采用/ MuClipse1/ ./ 3/ 的/ 所有/ 方法/ 级/ (/ Method/ -/ Level/ )/ 变异/ 算子/ ,/ 共/ 生成/ 4320/ 个/ 变异/ 体/ ./ ①/ ②/ Page8/ 表/ 4/ 被测/ 程序/ 被/ 测试/ 个数/ IDJ1J2J3J4J5J6J7J8J9J10J11J12J135/ ./ 3/ 实验/ 过程/ 实验/ 的/ 运行/ 环境/ 为/ Intel/ (/ R/ )/ Core/ (/ TM/ )/ 2DuoCPUE7400/ @/ 208GHz2/ ./ 79GHz/ ,/ 2.00/ GB/ 内存/ ,/ MicrosoftWindowsXPSP3/ 操作系统/ ,/ 以及/ EclipseSDK4/ ./ 2.2/ 集成/ 开发/ 环境/ ./ 变异/ 体/ 的/ 执行/ 和/ 强/ 变异/ 测试/ 结果/ 的/ 统计/ ,/ 都/ 采用/ MuClipse/ 工具/ ./ 基于/ JUnit4/ ①/ 框架/ ,/ 每个/ 测试/ 类/ 封装/ 若干/ 测试方法/ ,/ 每个/ 测试方法/ 包含/ 多个/ 形/ 如/ “/ assertXXX/ (/ )/ ”/ 的/ 测试用例/ ./ 基于/ 弱/ 变异/ 测试/ 转化/ 方法/ ,/ 首先/ ,/ 对/ 每个/ 被测/ 程序运行/ MuClipse/ ,/ 以/ 生成/ 所有/ 的/ 变异/ 体/ ;/ 然后/ ,/ 对/ 变异/ 体/ 生成/ 过程/ 中/ 的/ 日志/ 文件/ “/ mutation/ _/ log/ ”/ 自动/ 解析/ ,/ 并/ 构造/ 相应/ 的/ 变异/ 分支/ ,/ 得到/ 变异/ 分支/ 集/ B/ ;/ 最后/ ,/ 将/ B/ 中/ 所有/ 分支/ 依次/ 插入/ 到/ 原程序/ P/ 中/ ,/ 得到/ 转化/ 后/ 的/ 新/ 程序/ P/ ./ 基于/ 第/ 4/ 节/ 的/ 方法/ ,/ 开发/ 实验/ 的/ 原型/ 系统/ ,/ 以生/ if/ (/ (/ a/ =/ =/ b/ )/ !/ =/ (/ a/ </ b/ )/ )/ {/ FX/ [/ 22/ ]/ =/ 0/ ;/ trian/ =/ trian/ +/ 1/ ;/ 图/ 4/ 实例/ 代码/ 2111221252213346/ 成/ 期望/ 的/ 测试用例/ ./ 该/ 原型/ 系统/ 包含/ 10/ 个/ 基本/ 类/ 和/ 36/ 个/ 方法/ ,/ 分别/ 实现/ 基于/ GA/ 和/ 本文/ 方法/ 的/ 测试用例/ 生成/ ./ 鉴于/ GA/ 是/ 一种/ 常用/ 的/ 优化/ 方法/ ,/ 而且/ ,/ 目前/ GA/ 已经/ 作为/ 基于/ 变异/ 分析/ 的/ 测试用例/ 生成/ 的/ 主要/ 方法/ [/ 3/ ,/ 47/ -/ 51/ ]/ ,/ 因此/ ,/ 利用/ 本文/ 方法/ 和/ GA/ 分别/ 生成/ 测试用例/ ,/ 并/ 进行/ 相应/ 的/ 实验/ 分析/ 和/ 比较/ ./ 为此/ ,/ 将式/ (/ 1/ )/ 中/ 的/ 目标/ 函数/ 归一化/ 为/ fiti/ (/ x/ / )/ =/ 1/ -/ e/ 以此/ 作为/ GA/ 中/ 进化/ 个体/ x/ / 的/ 适应度/ 函数/ ./ 图/ 4/ 以/ 分支/ 语句/ “/ if/ (/ a/ =/ =/ b/ )/ {/ trian/ =/ trian/ +/ 1/ ;/ }/ ”/ (/ 图/ 1/ 中/ (/ a/ )/ 的/ 5/ ~/ 7/ 行/ )/ 为例/ ,/ 列出/ 实验/ 的/ 部分/ 实例/ 代码/ ./ 其中/ ,/ (/ a/ )/ 为/ 利用/ GA/ 生成/ 测试用例/ 的/ 部分/ 实例/ 代码/ ;/ (/ b/ )/ 为/ 采用/ 本/ 方法/ 生成/ 测试用例/ 的/ 部分/ 实例/ 代码/ ./ (/ a/ )/ 中/ 数组/ fx/ [/ i/ ]/ 与/ 3.2/ 节中/ 的/ fi/ (/ x/ / )/ 相对/ 应/ ,/ 用于/ 记录/ 对应/ 变异/ 分支/ 的/ 分支/ 距离/ ;/ (/ b/ )/ 中/ FX/ [/ i/ ]/ 与/ 3.3/ 节中/ 的/ Fi/ (/ X/ )/ 相对/ 应/ ,/ 用于/ 记录/ 对应/ 变异/ 分支/ 的/ 分支/ 距离/ ./ (/ b/ )/ 本文/ 方法/ 生成/ 测试用例/ ①/ http/ :/ // // www/ ./ junit/ ./ orgPage9/ 采用/ GA/ 生成/ 测试用例/ 时/ ,/ 设/ 当前/ 目标/ 分支/ 为/ fx/ [/ 11/ ]/ 所/ 对应/ 的/ 变异/ 真/ 分支/ ,/ 当/ 测试/ 输入/ 为/ x/ / =/ (/ 3/ ,/ 2/ ,/ 4/ )/ 时/ ,/ fx/ [/ 11/ ]/ =/ 1/ ,/ 适应度/ 函数/ fit11/ (/ x/ / )/ =/ 1/ -/ e/ -/ 1/ ;/ 通过/ 相应/ 的/ 遗传操作/ 后/ ,/ 当/ x/ / =/ (/ 3/ ,/ 3/ ,/ 4/ )/ 时/ ,/ fx/ [/ 11/ ]/ =/ 0/ ,/ 适应度/ 函数/ fit11/ (/ x/ / )/ =/ 1/ -/ e/ -/ 0/ =/ 0/ ;/ 此时/ ,/ fit11/ (/ x/ / )/ 取得/ 最小值/ ,/ 即/ fx/ [/ 11/ ]/ 所/ 对应/ 的/ 变异/ 真/ 分支/ 被/ 覆盖/ ./ 采用/ 本文/ 方法/ 生成/ 测试用例/ 时/ ,/ 由于/ X/ 包含/ 若干/ 测试/ 输入/ ,/ 依次/ 运行/ 这些/ 测试/ 输入/ ,/ 如果/ ,/ X/ 能够/ 使/ 所有/ FX/ [/ i/ ]/ 都/ 取/ “/ 0/ ”/ ,/ 那么/ ,/ ∑/ FX/ [/ i/ ]/ =/ 0/ ,/ 适应度/ 函数/ Fit/ (/ X/ )/ =/ 1/ -/ e/ -/ 0/ =/ 0/ ,/ 取得/ 最小值/ ,/ 即/ X/ 覆盖/ 了/ 所有/ 变异/ 真/ 分支/ ./ GA/ 和/ 本文/ 方法/ 相关/ 参数/ 的/ 取值/ 如表/ 5/ 所列/ ,/ 表中/ ,/ pcr/ _/ inter/ _/ set/ 表示/ 个体/ 之间/ 的/ 交叉/ 概率/ ,/ pcr/ _/ inner/ _/ set/ 表示/ 个体/ 内部/ 的/ 交叉/ 概率/ ;/ pcross/ 表示/ GA/ 的/ 交叉/ 概率/ ;/ pmutation/ 表示/ GA/ 和/ 集合/ 的/ 变异/ 概率/ ./ 此外/ ,/ 这/ 两种/ 方法/ 的/ 种群/ 规模/ 均/ 为/ 100/ ./ 为了/ 得到/ 性能优越/ 的/ 算法/ 参数/ ,/ 经过/ 多次/ 实验/ 运行/ 确定/ 一组/ 优化/ 的/ 参数/ 取值/ ,/ 如表/ 5/ 所列/ ./ 当然/ 这些/ 算法/ 的/ 取值/ 并非/ 最优/ ,/ 事实上/ ,/ 对/ 该/ 方法/ 参数/ 取值/ 的/ 优化/ ,/ 已经/ 超出/ 本文/ 的/ 研究/ 范围/ ./ 表/ 6/ 生成/ 测试用例/ 需要/ 的/ 迭代/ 次数/ 和/ 时间/ IDJ1J2J3J4J5J6J7J8J9J10J11J12J13Sum/ ./ 36383.2132670/ ./ 80/ 由表/ 6/ 可知/ ,/ ①/ 对于/ 所有/ 被测/ 程序/ ,/ 采用/ 本文/ 方法/ ,/ 共/ 生成/ 233/ 个/ 测试用例/ ,/ 迭代/ 次数/ 为/ 3258.0/ ,/ 耗时/ 为/ 50304.44/ ms/ ;/ 采用/ GA/ 共/ 生成/ 247.8/ 个/ 测试用例/ ,/ 迭代/ 次数/ 为/ 36383.2/ ,/ 耗时/ 132670.8/ ms/ ,/ 迭代/ 次数/ 和/ 耗时/ 分别/ 为/ 本文/ 方法/ 的/ 16.3/ 和/ 2.13/ 倍/ ;/ ②/ 迭代/ 次数/ 比/ 最大/ 的/ 程序/ 是/ J10/ ,/ 为/ 50.2/ ,/ 说明/ 采用/ 本文/ 方法/ ,/ 能够/ 大幅度降低/ 生成/ 测试用例/ 需要/ 的/ 迭代/ 次数/ ;/ ③/ 时间/ 比/ 最大/ 的/ 程序/ 是/ J7/ ,/ 将近/ 7/ ,/ 说明/ 采用/ 本/ 参数/ pcrosspmutationpcr/ _/ inter/ _/ setpsel/ _/ cr/ _/ inner/ _/ setpcr/ _/ inner/ _/ setsizepopulation5/ ./ 4/ 结果/ 与/ 分析/ 对/ 转化/ 后/ 的/ 实验/ 程序/ ,/ 利用/ GA/ 和/ 本文/ 方法/ ,/ 分别/ 生成/ 测试用例/ ,/ 并/ 回答/ 第/ 5.1/ 小节/ 提出/ 的/ 4/ 个/ 问题/ ./ (/ 1/ )/ 测试用例/ 生成/ 的/ 成本/ 为了/ 评价/ 不同/ 方法/ 生成/ 测试用例/ 的/ 成本/ ,/ 分别/ 采用/ GA/ 与/ 本文/ 方法/ ,/ 生成/ 测试用例/ ,/ 统计/ 生成/ 这些/ 测试用例/ 需要/ 的/ 迭代/ 次数/ 和/ 时间/ (/ 单位/ :/ ms/ )/ ./ 实验/ 中/ ,/ 根据/ GA/ 生成/ 的/ 测试用例/ 数量/ ,/ 设置/ 本文/ 方法/ 中/ 集合/ 的/ 规模/ ./ 10/ 次/ 实验/ 结果/ 的/ 平均值/ ,/ 如表/ 6/ 所列/ ,/ 表中/ ,/ 迭代/ 次数/ (/ 时间/ )/ 比是/ GA/ 生成/ 测试用例/ 需要/ 的/ 迭代/ 次数/ (/ 时间/ )/ 与/ 本文/ 方法/ 的/ 比值/ ./ 本文/ 方法/ 时间/ // ms27/ ./ 1743.39116/ ./ 373504.415128/ ./ 57499.898634/ ./ 918887.48325/ ./ 89233.6122699/ ./ 5552.64150/ ./ 5650304.44/ 文/ 方法/ ,/ 能够/ 显著/ 减少/ 生成/ 测试用例/ 需要/ 的/ 时间/ ./ 上述/ 实验/ 结果表明/ ,/ 采用/ 本文/ 方法/ 生成/ 测试用例/ ,/ 需要/ 的/ 成本/ 明显/ 低于/ GA/ ./ (/ 2/ )/ 测试用例/ 对弱/ 变异/ 测试/ 的/ 有效性/ 根据/ 弱/ 变异/ 测试/ 转化/ 方法/ ,/ 测试用例/ 对/ 变异/ 分支/ 的/ 覆盖率/ ,/ 能够/ 反映/ 对弱/ 变异/ 测试/ 的/ 有效性/ ./ 表/ 7/ 列出/ 了/ 不同/ 程序/ 的/ 变异/ 分支/ ,/ 以及/ 不同/ 方法/ 生成/ 的/ 测试用例/ 对/ 变异/ 分支/ 的/ 覆盖/ 情况/ ./ Page10/ 表/ 7/ 测试用例/ 对/ 变异/ 分支/ 的/ 覆盖/ 情况/ IDJ1J2J3J4J5J6J7J8J9J10J11J12J13Sum/ ./ 由表/ 7/ 可知/ ,/ ①/ 13/ 个/ 被/ 测/ 程序/ 共有/ 4320/ 个/ 变异/ 分支/ ,/ 其中/ ,/ 不可/ 覆盖/ 变异/ 分支/ 有/ 390/ 个/ ;/ ②/ 采用/ GA/ 生成/ 的/ 测试用例/ ,/ 覆盖/ 了/ 4320/ -/ 390/ =/ 3930/ 个/ 可/ 覆盖/ 变异/ 分支/ 中/ 的/ 3892.6/ 个/ ,/ 平均/ 覆盖率/ 为/ 99.47/ %/ ;/ ③/ 采用/ 本文/ 方法/ 生成/ 的/ 测试用例/ ,/ 覆盖/ 了/ 3893.9/ 个/ 变异/ 分支/ ,/ 平均/ 覆盖率/ 为/ 99.49/ %/ ./ 这/ 说明/ ,/ 基于/ 弱/ 变异/ 测试/ 准则/ ,/ 本文/ 方法/ 得到/ 变异/ 测试/ 有效性/ 不弱/ 于/ GA/ ./ 表/ 8/ 测试用例/ 对强/ 变异/ 测试/ 的/ 有效性/ GAIDJ1J2J3J4J5J6J7J8J9J10J11J12J13Sum/ ./ 由表/ 8/ 可知/ ,/ ①/ 采用/ 两种/ 方法/ 生成/ 的/ 测试用例/ ,/ 均/ 能/ 杀死/ 超过/ 95/ %/ 的/ 变异/ 体/ ,/ 其中/ ,/ GA/ 生成/ 的/ 测试用例/ ,/ 能够/ 杀死/ 3568.3/ 个/ 变异/ 体/ ,/ 变异/ 得/ 分为/ 97.64/ %/ ,/ 而/ 本文/ 方法/ 生成/ 的/ 测试用例/ ,/ 能够/ 杀死/ 3576.4/ 个/ 变异/ 体/ ,/ 变异/ 得/ 分为/ 97.92/ %/ ;/ ②/ 采用/ 本文/ 方法/ 生成/ 的/ 测试用例/ ,/ 对于/ 程序/ J1/ 、/ J3/ 和/ J6/ ,/ 得到/ 100/ %/ 的/ 变异/ 得分/ ,/ 对/ 程序/ J9/ 的/ 变异/ 得分/ 最低/ ,/ 为/ 95.25/ %/ ;/ ③/ 利用/ GA/ 生成/ 的/ 测试用例/ ,/ 对于/ 程序/ J1/ 和/ J6/ ,/ 得到/ 100/ %/ 的/ 变异/ 得分/ ,/ 对/ 程序/ J3/ 则/ 取得/ GAAvg/ ./ =/ 99.47/ (/ 3/ )/ 测试用例/ 对强/ 变异/ 测试/ 的/ 有效性/ 基于/ 强/ 变异/ 测试/ 准则/ ,/ 分别/ 采用/ GA/ 和/ 本文/ 方法/ 生成/ 的/ 测试用例/ ,/ 执行/ 变异/ 测试/ ,/ 根据/ 被/ 杀死/ 的/ 变异/ 体/ 个数/ 与非/ 等价/ 变异/ 体/ 个数/ 的/ 比/ ,/ 计算/ 变异/ 得分/ ,/ 如表/ 8/ 所列/ ./ 鉴于/ 强/ 变异/ 测试/ 准则/ 杀死/ 变异/ 体/ 的/ 条件/ ,/ 强于/ 弱/ 变异/ 测试/ 准则/ ,/ 因此/ ,/ 表/ 8/ 中/ 等价/ 变异/ 体/ 的/ 个数/ 为/ 642/ ,/ 多于/ 表/ 7/ 中/ 不可/ 覆盖/ 变异/ 分支/ 的/ 个数/ ./ 变异/ 得分/ // %/ 100.00100/ ./ 00Avg/ ./ =/ 97.6498/ ./ 17/ %/ 的/ 变异/ 得分/ ,/ 对/ 程序/ J9/ 的/ 变异/ 得分/ 最低/ ,/ 为/ 95.35/ %/ ./ 这/ 说明/ ,/ 基于/ 强/ 变异/ 测试/ 准则/ ,/ 采用/ 本文/ 方法/ 生成/ 的/ 测试用例/ ,/ 总体/ 上/ 其/ 有效性/ 不/ 低于/ GA/ ./ (/ 4/ )/ 集合/ 规模/ 对/ 本文/ 方法/ 性能/ 的/ 影响/ 测试用例/ 的/ 数量/ 和/ 质量/ 决定/ 测试/ 的/ 成本/ 和/ 有效性/ [/ 52/ ]/ ./ 第/ 1/ 部分/ 的/ 实验/ 结果表明/ ,/ 采用/ 本文/ 方法/ ,/ 能够/ 生成/ 更少/ 的/ 测试用例/ ,/ 从而/ 降低/ 了/ 变异/ 测试/ 的/ 成本/ ./ 鉴于/ 本文/ 方法/ 生成/ 测试用例/ 的/ 个数/ ,/ 与/ 集合/ 规模/ Page11/ 密切相关/ ,/ 因此/ ,/ 本/ 部分/ 考察/ 集合/ 规模/ 对/ 本文/ 方法/ 性能/ 的/ 影响/ ,/ 并/ 基于/ 此/ ,/ 设定/ 集合/ 规模/ 的/ 合理/ 取值/ ./ 通过/ 设置/ 集合/ 规模/ 的/ 不同/ 取值/ ,/ 生成/ 不同/ 个数/ 表/ 9/ 最小/ 测试用例/ 生成/ 成本/ 及其/ 有效性/ IDJ1J2J3J4J5J6J7J8J9J10J11J12J13Sum/ ./ 时间/ // ms28/ ./ 5651.4343244/ ./ 7811330.4031850/ ./ 14100424.63/ 由表/ 9/ 可知/ ,/ ①/ 对于/ 所有/ 13/ 个/ 被/ 测/ 程序/ ,/ 采用/ 本文/ 方法/ ,/ 生成/ 的/ 测试用例/ 最少/ 为/ 182/ 个/ ,/ 比表/ 6/ 中/ 的/ 本文/ 方法/ 减少/ 了/ 51/ 个/ ;/ ②/ 本文/ 方法/ 生成/ 测试用例/ 需要/ 的/ 迭代/ 次数/ 略高于/ 表/ 6/ 中/ 的/ 本文/ 方法/ ;/ ③/ 对于/ 所有/ 被测/ 程序/ ,/ 本文/ 方法/ 生成/ 最小/ 测试用例/ ,/ 需要/ 的/ 时间/ 略多于/ 表/ 6/ 中/ 的/ 本文/ 方法/ ;/ ④/ 采用/ 本文/ 方法/ 生成/ 的/ 最小/ 测试用例/ ,/ 虽然/ 能够/ 保持/ 与表/ 7/ 中/ 本文/ 方法/ 相同/ 的/ 变异/ 分支/ 覆盖率/ ,/ 但是/ ,/ 强/ 变异/ 得分/ 略低于/ 表/ 8/ 中/ 的/ 本文/ 方法/ ./ 这/ 说明/ ,/ 无论是/ 迭代/ 次数/ 还是/ 时间/ ,/ 集合/ 规模/ 确实/ 影响/ 本文/ 方法/ 生成/ 测试用例/ 的/ 性能/ ;/ 小/ 的/ 集合/ 规模/ 虽然/ 生成/ 的/ 测试用例/ 个数/ 少/ ,/ 但是/ ,/ 生成/ 这些/ 测试用例/ 需要/ 的/ 迭代/ 次数/ 和/ 时间/ 均/ 增加/ ,/ 使得/ 测试用例/ 生成/ 的/ 成本/ 也/ 增加/ ./ 通过/ 上述/ 实验/ 结果/ 与/ 分析/ ,/ 可以/ 得到/ 如下/ 结论/ :/ 采用/ 本文/ 方法/ 生成/ 测试用例/ ,/ 能够/ 有效/ 降低/ 测试用例/ 生成/ 的/ 成本/ ,/ 且/ 生成/ 的/ 测试用例/ 对于/ 弱/ 变异/ 和/ 强/ 变异/ 测试/ 准则/ 都/ 有效/ ./ 此外/ ,/ 集合/ 规模/ 也/ 影响/ 变异/ 测试/ 的/ 执行/ 成本/ 和/ 测试用例/ 生成/ 成本/ ./ 6/ 总结/ 尽管/ 弱/ 变异/ 测试/ 能够/ 降低/ 变异/ 测试/ 的/ 成本/ ,/ 但是/ ,/ 如何/ 借助/ 弱/ 变异/ 测试/ 准则/ ,/ 以/ 高效/ 生成/ 具有/ 很/ 高/ 缺陷/ 检测/ 能力/ 的/ 测试用例/ ,/ 至今/ 缺乏/ 有效/ 的/ 方法/ ./ 本文/ 基于/ 弱/ 变异/ 分析/ ,/ 研究/ 测试用例/ 生成/ 问题/ ,/ 建立/ 了/ 一种/ 新/ 的/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ,/ 并/ 的/ 测试用例/ ,/ 统计/ 生成/ 这些/ 测试用例/ 需要/ 的/ 迭代/ 次数/ 和/ 时间/ ,/ 此外/ ,/ 计算/ 这些/ 测试用例/ 的/ 分支/ 覆盖率/ 和/ 变异/ 得分/ ,/ 如表/ 9/ 所列/ ./ 287.165927/ ./ 556027.92747/ ./ 50410.54275/ ./ 9763.01179/ ./ 67/ 提出/ 了/ 用于/ 求解/ 上述/ 模型/ 的/ 集合/ 进化/ 方法/ ,/ 以/ 生成/ 期望/ 的/ 测试用例/ ./ 主要/ 贡献/ 包括/ :/ (/ 1/ )/ 以/ 若干/ 测试用例/ 形成/ 的/ 集合/ ,/ 作为/ 决策/ 变量/ ,/ 以/ 这些/ 测试用例/ 对/ 变异/ 分支/ 的/ 覆盖/ 情况/ ,/ 作为/ 目标/ 函数/ ,/ 建立/ 了/ 本文/ 测试用例/ 生成/ 问题/ 的/ 数学模型/ ,/ 使得/ 通过/ 对/ 该/ 模型/ 的/ 求解/ ,/ 能够/ 生成/ 杀死/ 所有/ 变异/ 体/ 的/ 测试用例/ ;/ (/ 2/ )/ 提出/ 了/ 采用/ 集合/ 进化/ 方法/ 求解/ 上述/ 模型/ 时/ ,/ 适应度/ 函数/ 和/ 进化/ 算子/ 的/ 设计/ 方法/ ,/ 其中/ ,/ 适应度/ 函数/ 与/ 归一化/ 后/ 的/ 目标/ 函数/ 密切相关/ ,/ 进化/ 算子/ 不但/ 包括/ 个体/ 之间/ 和/ 内部/ 的/ 交叉/ ,/ 还/ 包括/ 个体/ 变异/ ;/ (/ 3/ )/ 通过/ 将/ 所/ 提/ 方法/ 应用/ 于/ 13/ 个/ 基准/ 和/ 工业/ 程序/ 的/ 测试/ 中/ ,/ 并/ 与/ GA/ 进行/ 比较/ ,/ 从/ 测试用例/ 生成/ 成本/ 、/ 测试用例/ 对弱/ 变异/ 和/ 强/ 变异/ 测试/ 的/ 有效性/ 多方面/ ,/ 评价/ 所提/ 方法/ 的/ 性能/ ./ 此外/ ,/ 还/ 考察/ 了/ 集合/ 规模/ 对/ 本文/ 方法/ 生成/ 测试用例/ 性能/ 的/ 影响/ ./ 需要/ 说明/ 的/ 是/ ,/ 本文/ 方法/ 的/ 集合/ 规模/ 在/ 整个/ 进化/ 过程/ 中是/ 不变/ 的/ ,/ 而/ 集合/ 规模/ 却/ 影响/ 本文/ 方法/ 生成/ 测试用例/ 的/ 性能/ ./ 如果/ 采用/ 合适/ 的/ 策略/ ,/ 在/ 种群/ 进化/ 过程/ 中/ ,/ 变化/ 集合/ 规模/ ,/ 将/ 能够/ 进一步/ 降低/ 测试用例/ 生成/ 的/ 成本/ ,/ 从而/ 提高/ 本文/ 方法/ 的/ 性能/ ,/ 这是/ 需要/ 进一步/ 研究/ 的/ 问题/ ./ 此外/ ,/ 本文/ 方法/ 的/ 性能/ ,/ 仅/ 通过/ 较/ 小规模/ 的/ 被/ 测/ 程序/ 评价/ ,/ 在/ 规模/ 更大/ 、/ 更/ 复杂/ 程序/ 中/ 的/ 应用/ ,/ 也/ 是/ 需要/ 进一步/ 研究/ 的/ 问题/ ./ 致谢/ 各位/ 审稿/ 专家/ 对/ 本文/ 提出/ 了/ 宝贵/ 评审/ 意见/ ,/ 这些/ 评审/ 意见/ 对/ 提高/ 论文/ 水平/ 具有/ 很大/ 的/ 帮助/ ./ 编辑/ 付出/ 了/ 辛勤工作/ ./ 在/ 此/ 一并/ 致谢/ !/ Page12/ 

