Page1/ 异构/ 分布式系统/ DAG/ 可靠性/ 模型/ 与/ 容错/ 算法/ 谢国琪/ 李仁发/ 刘琳/ 杨帆/ (/ 湖南大学/ 嵌入式/ 与/ 网络/ 计算/ 湖南省/ 重点/ 实验室/ 国家/ 超级/ 计算/ 长沙/ 中心/ 长沙/ 410082/ )/ 摘要/ 异构/ 分布式系统/ 性能/ 得到/ 大幅度/ 提升/ 的/ 同时/ ,/ 却/ 造成/ 故障率/ 大增/ ,/ 以有/ 向/ 无/ 环图/ (/ DirectedAcyclicGraph/ ,/ DAG/ )/ 任务模型/ 研究/ 异构/ 分布式系统/ 的/ 容错/ 调度/ 成为/ 当前/ 的/ 研究/ 热点/ ./ 广泛/ 采用/ 的/ 基于/ 任务/ 复制/ 的/ 容错/ 算法/ 存在/ 以下/ 问题/ :/ (/ 1/ )/ DAG/ 任务/ 可靠性/ 需求/ 与/ DAG/ 可靠性/ 需求/ 的/ 约束/ 存在/ 缺陷/ 且/ 缺乏/ 严谨/ 的/ 理论/ 证明/ ;/ (/ 2/ )/ 每个/ 任务/ 仅/ 有/ 一个/ 副/ 版/ 任务/ ,/ 不足以/ 应对/ 任务/ 潜在/ 的/ 多次/ 发生/ 的/ 故障/ ;/ (/ 3/ )/ 盲目/ 地使/ 每个/ 任务/ 拥有/ ε/ +/ 1/ 个/ 副/ 版来/ 容忍/ 可能/ 的/ ε/ 个/ 故障/ ,/ 虽然/ 提高/ 了/ 系统/ 的/ 可靠性/ 但易/ 造成/ 系统/ 冗余度/ 过高/ ,/ 并/ 付出/ 昂贵/ 的/ 计算资源/ ./ 文中/ 首先/ 分析/ DAG/ 图中/ 任务/ 依赖/ 关系/ ,/ 确定/ DAG/ 任务/ 的/ 可靠性/ 概率模型/ ,/ 并/ 建立/ DAG/ 可靠性/ 模型/ ;/ 接着/ 提出/ 满足/ 可靠性/ 目标/ 的/ 任务/ 复制/ 下/ 限值/ 算法/ 、/ 经济/ 的/ 任务/ 复制/ 策略/ 算法/ 和/ 贪婪/ 的/ 任务/ 复制/ 策略/ 算法/ ,/ 精确/ 量化/ 各个/ 任务/ 需要/ 复制/ 的/ 次数/ ,/ 最后/ 在/ 上述/ 算法/ 的/ 基础/ 上/ 提出/ 可/ 选/ 策略/ 的/ DAG/ 容错/ 算法/ OPDFT/ (/ OptionalPolicyonDAGFault/ -/ Tolerant/ )/ ./ 实验/ 表明/ ,/ OPDFT/ 算法/ 的/ 经济/ 复制/ 策略/ 和/ 贪婪/ 复制/ 策略/ 的/ 可靠性/ 代价/ 分别/ 是/ 盲目/ 策略/ 算法/ 可靠性/ 代价/ 的/ 60/ %/ 和/ 70/ %/ 左右/ ./ 关键词/ 异构/ 分布式系统/ ;/ 可靠性/ ;/ 容错/ ;/ 有/ 向/ 无/ 环图/ ;/ 任务/ 复制/ 1/ 引言/ 计算机系统/ 日益/ 走向/ 异构化/ 与/ 分布式/ ./ 作为/ 与/ 人们/ 生活/ 息息相关/ 的/ 汽车/ ,/ 其/ 内部/ 的/ 总线/ 系统/ 是/ 典型/ 的/ 异构/ 分布式/ 嵌入式/ 计算/ 系统/ ,/ 部分/ 轿车/ 中/ 的/ 电子/ 控制/ 单元/ (/ ElectronicControlUnit/ ,/ ECU/ )/ 的/ 数量/ 超过/ 100/ 个/ ,/ 并/ 通过/ CAN/ 、/ FlexRay/ 、/ LIN/ 、/ MOST/ 等/ 多种/ 车辆/ 总线/ 互联/ [/ 1/ ]/ ,/ 系统/ 规模/ 和/ 复杂性/ 骤增/ ./ 近年来/ ,/ 将/ CPU/ 与/ 具有/ 超高/ 的/ 计算/ 性能/ 和/ 性能/ 功耗/ 比/ 的/ GPU/ 集成/ 构建/ 异构/ 分布式系统/ 已/ 成为/ 超级计算机/ 发展/ 的/ 新/ 趋势/ 之一/ [/ 2/ ]/ ./ 然而/ ,/ 处理器/ 制造/ 工艺/ 的/ 发展/ ,/ 使得/ 单芯片/ 上/ 集成/ 的/ 晶体管/ 尺寸/ 越来越/ 小且/ 晶体管/ 的/ 数量/ 呈/ 指数/ 性/ 增长/ ,/ 在/ 处理器/ 性能/ 得到/ 大幅度提高/ 的/ 同时/ ,/ 系统/ 的/ 故障率/ 急剧/ 增加/ ./ 汽车/ 行驶/ 过程/ 中/ 存在/ 的/ 各种/ 干扰/ 也/ 容易/ 出现/ 瞬时/ 故障/ ./ 安全/ 关键/ 系统/ (/ 如/ 防抱死/ 制动/ 系统/ )/ 如果/ 因为/ 故障/ 而/ 错过/ 截止/ 期限/ ,/ 则/ 会/ 造成/ 灾难性/ 的/ 后果/ [/ 3/ ]/ ./ 在/ 提供/ 强大/ 的/ 计算/ 性能/ 的/ 同时/ ,/ GPU/ 集成/ 了/ 大量/ 的/ 功能/ 部件/ 且/ 运行/ 时/ 温度/ 较/ 高/ ,/ 容易/ 出现/ 瞬时/ 故障/ ,/ 可靠性/ 大大/ 低于/ 传统/ CPU/ [/ 2/ ]/ ./ 因此/ 必须/ 采用/ 一定/ 的/ 容错/ 手段/ 来/ 保障/ 异构/ 分布式系统/ 的/ 可靠性/ ,/ 使得/ 在/ 出现/ 局部/ 故障/ 的/ 情况/ 下/ ,/ 仍然/ 能够/ 产生/ 正确/ 的/ 结果/ ./ 由于/ 异构/ 分布式系统/ 的/ 调度/ 在/ 各/ 处理器/ 上/ 执行/ 时间/ 不同/ 以及/ 处理器/ 间/ 存在/ 通信/ 开销/ ,/ 各/ 任务/ 之间/ 还/ 存在/ 优先级/ 约束/ 和/ 数据/ 依赖/ 关系/ ,/ 因而/ 可以/ 将/ 应用/ 映射/ 成有/ 向/ 无/ 环图/ DAG/ [/ 4/ ]/ ./ 以/ DAG/ 任务模型/ 研究/ 计算机系统/ 的/ 容错/ 问题/ 已/ 成为/ 当前/ 研究/ 的/ 热点/ [/ 5/ -/ 13/ ]/ ./ 2/ 相关/ 研究/ 在/ 异构/ 分布式系统/ 中/ ,/ 任务/ 复制技术/ 是/ 实现/ 容错/ 的/ 主要/ 手段/ ,/ 最具/ 代表性/ 的/ 主/ // 副/ 版/ 技术/ (/ Primary/ // BackupCopy/ ,/ P/ // B/ )/ 广泛应用/ 于/ 容错/ 调度/ 方法/ [/ 14/ ]/ ./ 它/ 通过/ 在/ 备份/ 处理器/ 上/ 执行/ 备份/ 任务/ 来/ 实现/ 容错/ ./ P/ // B/ 复制技术/ 有/ 3/ 种/ 执行/ 方式/ :/ 主动/ 复制/ 方式/ (/ ActiveBackupCopy/ )/ [/ 10/ -/ 13/ ]/ 、/ 被动/ 复制/ 方式/ (/ PassiveBackupCopy/ )/ [/ 5/ -/ 9/ ]/ 和/ 混合/ 复制/ 方式/ (/ P/ // BOverlappingBackupCopy/ )/ [/ 14/ ]/ ./ 目前/ 学术界/ 对/ DAG/ 任务/ 容错/ 调度/ 的/ 研究/ 也/ 都/ 是/ 基于/ 任务/ 复制/ 机制/ ,/ 针对/ 副/ 版数/ 复制/ 数量/ 来/ 区分/ ,/ 主要/ 有/ 2/ 种/ 复制/ 方式/ ./ (/ 1/ )/ 每个/ 任务/ 仅/ 有/ 一个/ 副/ 版/ ./ 文献/ [/ 5/ ]/ 提出/ 了/ DAG/ 可靠性/ 代价/ 驱动/ 的/ eFRCD/ (/ efficientFault/ -/ tolerantReliabilityCostDriven/ )/ 算法/ ,/ 该/ 算法/ 对/ DAG/ 中/ 的/ 每/ 一个/ 任务/ 都/ 有/ 一个/ 分配/ 在/ 不同/ 处理器/ 上/ 的/ 副/ 版/ 任务/ ./ 为了/ 提高/ 性能/ ,/ 对于/ 主版/ 不/ 在/ 同一个/ 处理器/ 上/ 的/ 多个/ 任务/ ,/ 系统/ 允许/ 在/ 同一个/ 处理器/ 上/ 的/ 这些/ 任务/ 的/ 副/ 版/ 可以/ 重叠/ ./ 然而/ ,/ 这种/ 方法/ 必须/ 假设/ 这些/ 任务/ 之间/ 是/ 相互/ 独立/ 的/ ,/ 不能/ 满足/ DAG/ 中有/ 优先级/ 约束/ 任务/ 的/ 需要/ ,/ 因此/ 在/ eFRCD/ 算法/ 基础/ 上/ ,/ 作者/ 在/ 文献/ [/ 6/ ]/ 又/ 提出/ 了/ 改进/ 的/ eFRD/ (/ efficientFault/ -/ tolerantReliabilityDriven/ )/ 算法/ ,/ 该/ 算法/ 采用/ 主副版/ 重叠/ 机制/ ,/ 即/ 允许/ 任务/ 的/ 副/ 版/ 与/ 此/ 任务/ 的/ 所有/ 后继/ 任务/ 的/ 主版/ 重叠/ ,/ 可以/ 进一步/ 降低/ 调度/ 长度/ ./ 文献/ [/ 7/ ]/ 在/ eFRD/ 算法/ 的/ 基础/ 上/ 提出/ 了/ 基于/ 最早/ 完成/ 时间/ 的/ 最小/ 复制/ 开销/ 的/ MRC/ -/ ECT/ (/ MinimumReplicationCostwithEarlyCompletionTime/ )/ 算法/ 和/ 基于/ 最小/ 复制/ 开销/ 的/ 最小/ 完成/ 时间/ 的/ MCT/ -/ LRC/ (/ MinimumCompletionTimewithLessReplicationCost/ )/ 算法/ 分别/ 对/ DAG/ 中/ 的/ 非/ 独立/ 任务/ 和/ 独立/ 任务/ 进行/ 容错/ 调度/ ./ 首先/ ,/ 上述/ 研究/ 针对/ 可靠性/ 问题/ ,/ 假设/ 某/ 一个/ 时刻/ 最/ 多/ 只有/ 一个/ 处理器/ 出现/ 故障/ ,/ 且/ 在/ 下个/ 故障/ 出现/ 时/ ,/ 前/ 一个/ 故障/ 已经/ 排除/ ,/ 假设/ 较为理想/ 导致/ 实用性/ 不强/ ./ 同时/ 也/ 只/ 考虑/ DAG/ 的/ 可/ 调度/ 性/ ,/ 没有/ 考虑/ 可靠性/ 目标/ ./ Lin/ 等/ 人/ 在/ 文献/ [/ 8/ ]/ 中/ 给出/ 了/ 可靠性/ 目标/ 的/ 定义/ ,/ 即/ 系统/ 任务/ 集里/ 的/ 每个/ 任务/ 都/ 有/ ε/ 个/ 副/ 版/ ,/ 一个/ 任务/ 成功/ 分配/ 的/ 条件/ 是/ 该/ 任务/ 的/ ε/ 个/ 副/ 版/ 分配/ 到/ 不同/ 的/ 处理器/ 上/ ,/ 且/ 没有/ 导致/ 这些/ 处理器/ 的/ 利用率/ 超过/ 1/ ,/ 在/ 满足/ 任务/ 副/ 版/ 时间/ 约束/ 和/ 系统/ 高可靠性/ 条件/ 的/ 基础/ 上/ ,/ 最大化/ 成功/ 的/ 分配任务/ ./ Page3/ 其次/ ,/ 上述/ 算法/ 都/ 是/ 采用/ 被动/ 复制/ 方式/ ,/ 只有/ 当主版/ 任务调度/ 失败/ 后/ 才能/ 启动/ 副/ 版/ 任务/ ,/ 被动/ 复制/ 在/ 主版/ 任务/ 失效/ 时/ ,/ 需要/ 选择/ 一个/ 新副版/ 任务/ 恢复/ 到/ 失效/ 前/ 状态/ ,/ 造成/ 失效恢复/ 时间/ 较长/ ./ 因此/ 从/ 截止/ 期限/ 和/ 失效恢复/ 时间/ 考虑/ ,/ 主动/ 复制/ 优于/ 被动/ 复制/ [/ 9/ ]/ ./ 主动/ 复制/ 能够/ 在/ 运行/ 失效/ 时/ 直接/ 屏蔽/ 失效/ 的/ 任务/ 版/ ,/ 失效恢复/ 时间/ 几乎/ 接/ 近于零/ ,/ 调度/ 长度/ 也/ 相对/ 较/ 短/ ./ (/ 2/ )/ 每个/ 任务/ 有/ 多个/ 副/ 版/ ./ 文献/ [/ 10/ ]/ 提出/ 基于/ 主动/ 复制/ 的/ FTSA/ (/ FaultTolerantSchedulingAlgorithm/ )/ 算法/ ,/ 此/ 算法/ 是/ 经典/ 的/ 非/ 任务/ 复制/ 的/ DAG/ 调度/ 算法/ HEFT/ (/ Hetero/ -/ geneousEarliestFinishTime/ )/ 的/ 扩展/ ./ FTSA/ 容忍/ ε/ 个/ 错误/ 的/ 发生/ ,/ 并且/ 有/ ε/ +/ 1/ 个/ 版本/ 允许/ 在/ 不同/ 的/ 处理器/ 上/ ,/ 但/ FTSA/ 算法/ 每次/ 只/ 选择/ 一个/ 优先级/ 最高/ 的/ 就绪/ 任务调度/ ./ 作者/ 又/ 在/ 文献/ [/ 11/ ]/ 中/ 提出/ 了/ 同样/ 基于/ 主动/ 复制/ 的/ CAFT/ (/ ContentionAwarenessandFault/ -/ Tolerant/ )/ 算法/ ,/ 与/ FTSA/ 算法/ 每次/ 只/ 选择/ 一个/ 优先级/ 最高/ 的/ 就绪/ 任务/ 不同/ ,/ CAFT/ 选择/ 一组/ 就绪/ 任务/ ,/ 在/ 同一/ 决策/ 过程/ 中/ 分配/ 其/ 所有/ 副/ 版/ 到/ 相应/ 的/ 处理器/ ,/ 这样/ 能够/ 产生/ 更好/ 的/ 负载/ 均衡/ ./ 但是/ FTSA/ 和/ CAFT/ 算法/ 为了/ 使/ 系统/ 能够/ 达到/ 容忍/ 多个/ 故障/ ,/ 采用/ 了/ 盲目/ 的/ 复制/ 策略/ ,/ 即/ 对于/ 每个/ 任务/ 需要/ 复制/ 的/ 版本/ 个数/ ,/ 并/ 没有/ 精确/ 的/ 量化/ ,/ 而是/ 盲目/ 地使/ 每个/ 任务/ 拥有/ ε/ +/ 1/ 个/ 副/ 版/ ,/ 容忍/ 系统/ 中/ 任务/ 可能/ 存在/ 的/ ε/ 个/ 故障/ ./ 虽/ 提高/ 了/ 系统/ 的/ 可靠性/ 却易/ 造成/ 任务/ 冗余/ 过高/ ,/ 使得/ 调度/ 过程/ 中/ 既/ 付出/ 了/ 昂贵/ 的/ 计算资源/ ,/ 又/ 造成/ 调度/ 长度/ 过长/ 而/ 可能/ 错过/ 任务/ 的/ 截止/ 期限/ ./ 文献/ [/ 12/ ]/ 则/ 将/ 盲目/ 的/ 复制/ 策略/ 应用/ 到/ 多个/ DAG/ ,/ 更/ 加剧/ 了/ 系统/ 的/ 冗余/ 程度/ 过高/ ./ 针对/ 主动/ 复制/ 采用/ ε/ +/ 1/ 个/ 副/ 版/ 容忍/ ε/ 个/ 故障/ 的/ 情况/ ,/ 文献/ [/ 13/ ]/ 首次/ 指出/ :/ 拥有/ 更/ 多/ 的/ 副/ 版/ 并/ 不/ 意味/ 更/ 高/ 的/ 可靠性/ ./ 其/ 提出/ 的/ MaxRe/ 算法/ 针对/ 不同/ 的/ 任务/ ,/ 基于/ 可靠性/ 目标/ 而/ 采用/ 不同/ 的/ 副/ 版/ 次数/ ,/ 在/ 满足/ 系统/ 的/ 可靠性/ 目标/ 的/ 前提/ 下/ ,/ 能够/ 最小化/ 资源/ 的/ 使用/ ./ 但是/ 该/ 算法/ 认为/ 每个/ 任务/ 的/ 可靠性/ 目标/ 为/ r/ =/ n/ 槡/ R/ ,/ 其中/ R/ 为/ DAG/ 的/ 可靠性/ 需求/ ,/ n/ 为/ 任务/ 个数/ ,/ 但是/ 由于/ DAG/ 中/ 的/ 任务/ 存在/ 优先级/ 约束/ ,/ 对于/ 有/ 前驱/ 的/ 任务/ ,/ 需要/ 考虑/ 其/ 直接/ 前驱/ 任务/ 的/ 影响/ ,/ 不能/ 依靠/ 简单/ 的/ 开方/ 就/ 能/ 断定/ ./ 本文/ 旨在/ 通过/ DAG/ 可靠性/ 概率模型/ 的/ 有效/ 建模/ 以及/ 在/ 可靠性/ 目标/ 的/ 约束条件/ 下/ ,/ 计算/ DAG/ 任务/ 复制/ 下/ 限值/ ,/ 提出/ 有效/ 的/ 任务/ 复制/ 选择/ 策略/ ,/ 精确/ 量化/ 分析/ 每个/ 任务/ 需要/ 的/ 版本/ 个数/ ,/ 在/ 满足/ 可靠性/ 目标/ 的/ 前提/ 下/ ,/ 减少/ 任务/ 冗余/ ,/ 最小化/ 可靠性/ 代价/ ,/ 降低/ 调度/ 长度/ 以/ 提高/ 性能/ ./ 3/ 可靠性/ 模型/ 3.1/ DAG/ 任务模型/ DAG/ 任务模型/ 中/ 的/ 结点/ 表示/ 任务/ ,/ 有/ 向/ 边/ 表示/ 任务/ 间/ 的/ 依赖/ 和/ 通信/ 关系/ [/ 15/ ]/ ./ 用/ G/ =/ {/ N/ ,/ E/ ,/ W/ ,/ C/ }/ 表示/ DAG/ ./ 其中/ N/ =/ {/ n1/ ,/ n2/ ,/ …/ ,/ ni/ }/ 表示/ 图中/ 结点/ 的/ 集合/ ,/ 也/ 就是/ 任务/ 的/ 集合/ ./ E/ =/ {/ e1/ ,/ 2/ ,/ e2/ ,/ 3/ ,/ …/ ,/ ei/ ,/ j/ }/ 表示/ 图中/ 有/ 向/ 边/ 的/ 集合/ ,/ 边/ 表示/ 任务/ 间/ 的/ 优先级/ 与/ 数据/ 依赖/ 关系/ ;/ P/ =/ {/ p1/ ,/ p2/ ,/ …/ ,/ pk/ }/ 表示/ 异构/ 处理器/ 的/ 集合/ ./ 犠/ 是/ 一个/ |/ N/ |/ ×/ |/ P/ |/ 的/ 矩阵/ ,/ wi/ ,/ k/ 表示/ 任务/ ni/ 在/ pk/ 上/ 的/ 计算/ 时间/ 开销/ ./ ci/ ,/ j/ 表示/ 任务/ ni/ 与/ nj/ 间/ 的/ 通信/ 开销/ ,/ 如果/ 将/ 2/ 个/ 任务分配/ 到/ 同一个/ 处理器/ ,/ 则/ 通信/ 开销/ 为/ 0/ ./ pred/ (/ ni/ )/ 表示/ 结点/ ni/ 的/ 直接/ 前驱/ 结点/ 集合/ ,/ ind/ (/ ni/ )/ 表示/ ni/ 的/ 入度/ ,/ 也/ 就是/ 其/ 直接/ 前驱/ 结点/ 集合/ 的/ 个数/ ,/ 当前任务/ 只有/ 在/ 它/ 全部/ 前驱/ 结点/ 的/ 数据/ 到达/ 后/ 才能/ 执行/ ./ succ/ (/ ni/ )/ 表示/ 结点/ ni/ 的/ 直接/ 后继/ 结点/ 集合/ ,/ outd/ (/ ni/ )/ 表示/ ni/ 的/ 出度/ ,/ 也/ 就/ 其/ 直接/ 后继/ 结点/ 集合/ 的/ 个数/ ./ 没有/ 前驱/ 结点/ 的/ 结点/ 为/ 入口/ 结点/ ,/ 记为/ nentry/ ./ 没有/ 后继/ 结点/ 的/ 结点/ 为/ 出口/ 结点/ ,/ 记为/ nexit/ ./ 如图/ 1/ 所示/ 为/ 一个/ 包含/ 7/ 个/ 任务/ 结点/ 的/ DAG/ ,/ 表/ 1/ 为/ 相应/ 的/ 计算/ 开销/ 矩阵/ ./ 任务/ n1n2n3n4n5n6n7Page43/ ./ 2DAG/ 任务/ 可靠性/ 模型/ 任务/ 的/ 可靠性/ 为/ 系统/ 中/ 任务/ 无故障/ 运行/ 的/ 概率/ ./ 一般/ 地/ ,/ DAG/ 任务/ 发生/ 故障/ 的/ 概率/ 服从/ 泊松/ 分布/ (/ PoissonDistribution/ )/ [/ 5/ -/ 14/ ]/ ./ 泊松/ 分布/ 是/ 一种/ 离散/ 型/ 概率分布/ ,/ 用以/ 描述/ 在/ 时间段/ [/ 0/ ,/ t/ ]/ 内/ γ/ (/ γ/ / 0/ )/ 个/ 事件/ 发生/ 的/ 概率/ ./ 它/ 假定/ 事件/ 以/ 一个/ 恒定/ 速率/ λ/ 到达/ 且/ 事件/ 是/ 相互/ 独立/ 的/ ,/ 那么/ 在/ 时间段/ [/ 0/ ,/ t/ ]/ 内/ ,/ 出现/ γ/ (/ γ/ / 0/ )/ 个/ 事件/ 的/ 概率/ 为/ 若/ γ/ =/ 0/ ,/ 即/ 在/ 时间段/ [/ 0/ ,/ t/ ]/ 内/ 事件/ 没有/ 发生/ ,/ 根据/ 式/ (/ 1/ )/ 可/ 得/ 事件/ 没有/ 发生/ 故障/ 的/ 概率/ 可/ 表示/ 为/ 若/ 任务/ ni/ 发生/ 故障/ 的/ 均值/ 为/ λ/ i/ ,/ 那么/ 运行/ 在/ 处理器/ pu/ 上/ 的/ 任务/ ni/ 在/ 其/ 执行/ 时间/ wi/ ,/ u/ 内/ 无故障/ 概率/ 可/ 表示/ 为/ 由于/ 任务/ 相互之间/ 存在/ 依赖/ 关系/ ,/ 且/ 当前任务/ 只有/ 在/ 它/ 全部/ 前驱/ 任务/ 结点/ 的/ 数据/ 到达/ 后/ 才能/ 执行/ ,/ 可/ 得出/ 任务/ 的/ 可靠性/ 不是/ 由式/ (/ 3/ )/ 所/ 能/ 表示/ 的/ ,/ 还/ 必须/ 与/ 它/ 所有/ 的/ 前驱/ 结点/ 相关/ ./ (/ 1/ )/ 无/ 容错/ 机制/ 下/ 的/ 任务/ 可靠性/ 在/ 无/ 容错/ 机制/ 下/ ,/ 系统/ 中/ 只有/ 每个/ 任务/ 的/ 主版/ 存在/ ,/ 对于/ 没有/ 前驱/ 结点/ 的/ 入口/ 结点/ nentry/ 而言/ ,/ 其/ 可靠性/ 仅由式/ (/ 3/ )/ 决定/ ;/ 对于/ 入度/ ind/ (/ ni/ )/ 不为/ 零/ 的/ 任务/ ni/ ,/ 其/ 可靠性/ 计算/ 还/ 需要/ 考虑/ 到/ 其/ 直接/ 前驱/ 结点/ 的/ 影响/ ,/ 因此/ 无/ 容错/ 机制/ 下/ ,/ DAG/ 任务/ ni/ 的/ 可靠性/ 计算公式/ 为/ CR/ (/ nentry/ ,/ pu/ )/ =/ e/ -/ λ/ entry/ ×/ wentry/ ,/ u/ 烄/ CR/ (/ ni/ ,/ pu/ )/ =/ 烅/ NError/ (/ ni/ ,/ pu/ )/ ×/ ∏/ nx/ ∈/ pred/ (/ ni/ )/ ,/ pu/ ∈/ P/ 烆/ (/ 2/ )/ 容错/ 机制/ 下/ 的/ 任务/ 可靠性/ 在/ 容错/ 机制/ 下/ ,/ 系统/ 中/ 不仅/ 有/ 每个/ 任务/ 对应/ 的/ 主版/ 任务/ ,/ 还有/ 它们/ 的/ 副/ 版/ 任务/ ./ 我们/ 定义/ ki/ 为/ 任务/ 复制/ 因子/ ,/ 表示/ 任务/ ni/ 拥有/ 的/ 副/ 版/ 任务/ 个数/ 为/ ki/ ,/ 相应/ 的/ 主副版/ 任务/ 集合/ 为/ {/ n0i/ ,/ n1i/ ,/ n2i/ ,/ …/ ,/ nkii/ }/ ,/ 其中/ n0i/ 为主/ 版/ 任务/ ,/ 剩余/ 的/ 为/ 副/ 版/ 任务/ ./ 在/ 主副版/ 任务/ 集合/ 中/ ,/ 只要/ 有/ 一个/ 主版/ 或/ 副/ 版/ 任务/ 执行/ 成功/ 就/ 代表/ 任务/ ni/ 在/ 其/ 运行/ 时间段/ 内/ 没有/ 发生/ 故障/ ,/ 那么/ 任务/ 的/ 无故障/ 概率/ 可/ 表示/ 为/ NError/ (/ ni/ )/ =/ 1/ -/ ∏/ ki/ 对于/ 没有/ 前驱/ 结点/ 的/ 入口/ 结点/ 任务/ nentry/ ,/ 其/ 可靠性/ 可由式/ (/ 5/ )/ 表示/ ;/ 对于/ 入度/ ind/ (/ ni/ )/ 不为/ 零/ 的/ 任务/ ni/ ,/ 可靠性/ 由/ NError/ (/ ni/ )/ 和/ 它/ 所有/ 的/ 直接/ 前驱/ 结点/ 任务/ 共同/ 决定/ ./ 因此/ 容错/ 机制/ 下/ ,/ DAG/ 中/ 任务/ ni/ 的/ 可靠性/ 计算/ 如下/ :/ CR/ (/ nentry/ )/ =/ 1/ -/ ∏/ ki/ 烄/ 烅/ CR/ (/ ni/ )/ =/ NError/ (/ ni/ )/ ×/ ∏/ nx/ ∈/ pred/ (/ ni/ )/ CR/ (/ nx/ 烆/ 3.3/ DAG/ 可靠性/ 模型/ 文献/ [/ 13/ ]/ 中/ 的/ DAG/ 可靠性/ 模型/ 中/ ,/ 任务/ 可靠性/ 需求/ 与/ DAG/ 可靠性/ 需求/ 的/ 约束/ 计算公式/ 忽略/ 了/ 对于/ 有/ 前驱/ 任务/ 的/ 任务/ ,/ 还/ 需要/ 考虑/ 其/ 前驱/ 任务/ 对此/ 任务/ 的/ 可靠性/ 造成/ 的/ 影响/ ./ 而/ DAG/ 任务模型/ 本身/ 以/ 任务/ 之间/ 优先级/ 约束/ 为/ 特点/ ,/ 因此/ 本/ 节/ 充分考虑/ DAG/ 的/ 任务/ 优先级/ 约束/ ,/ 创新性/ 地/ 从/ 理论/ 证明/ 和/ 实例/ 验证/ 2/ 个/ 方面/ 提出/ 和/ 验证/ DAG/ 可靠性/ 模型/ ./ 定理/ 1/ ./ DAG/ 可靠性/ 概率模型/ ./ 若/ DAG/ 中/ 每个/ 任务/ ni/ 拥有/ 副/ 版/ 任务/ 的/ 个数/ 为/ ki/ ,/ 那么/ 该/ DAG/ 可靠性/ 计算/ 的/ 概率模型/ 可/ 表示/ 为/ 其中/ Roadi/ 表示/ 从/ 任务/ 结点/ ni/ 到/ 出口/ 任务/ 结点/ nexit/ 所有/ 路径/ 的/ 个数/ ,/ Roadi/ 的/ 值/ 可以/ 通过/ 深度/ 优先/ 遍历/ (/ Depth/ -/ First/ -/ Search/ ,/ DFS/ )/ 算法/ [/ 16/ ]/ 计算/ 而/ 得/ ;/ NError/ (/ ni/ )/ Roadi/ 定义/ 为/ 可靠性/ 贡献/ 因/ 式/ ,/ 即/ DAG/ 可靠性/ 是/ 各个/ 任务/ 的/ 可靠性/ 贡献/ 因式/ 的/ 乘积/ ./ 证明/ ./ 在/ DAG/ 中/ ,/ 相关/ 任务/ 之间/ 存在/ 着/ 优先级/ 依赖/ 关系/ ./ 当前任务/ 只有/ 在/ 它/ 的/ 全部/ 前驱/ 结点/ 的/ 数据/ 完成/ 之后/ 才能/ 执行/ ./ 这/ 就/ 意味着/ 若/ 某个/ 任务/ 成功/ 执行/ 了/ ,/ 那么/ 它/ 所有/ 的/ 直接/ 前驱/ 结点/ 任务/ 也/ 执行/ 成功/ 了/ ./ 以此类推/ ,/ 可知/ 对/ 整个/ DAG/ 而言/ ,/ 只要/ 出口/ 结点/ 任务/ nexit/ 运行/ 成功/ ,/ 那么/ 此/ DAG/ 就是/ 可靠/ 的/ ./ 因此/ ,/ 出口/ 结点/ 任务/ nexit/ 的/ 可靠性/ 代表/ 着/ 整个/ DAG/ 的/ 可靠性/ ./ 若/ DAG/ 中/ 每个/ 任务/ ni/ 拥有/ 副/ 版/ 任务/ 的/ 个数/ 为/ ki/ ,/ 根据/ 式/ (/ 5/ )/ 可知/ ,/ DAG/ 的/ 可靠性/ 概率/ GRDAG/ 可/ 表示/ 为/ GRDAG/ =/ CR/ (/ nexit/ )/ 对式/ (/ 8/ )/ 逐步/ 进行/ 扩展/ :/ Page5GRDAG/ =/ NError/ (/ nexit/ )/ ×/ CR/ (/ ni/ -/ 1/ )/ ×/ =/ NError/ (/ nexit/ )/ ×/ NError/ (/ ni/ -/ 1/ )/ ×/ ∏/ nx1/ ∈/ pred/ (/ ni/ -/ 1/ )/ CR/ (/ nx1/ )/ ×/ NError/ (/ ni/ -/ 2/ )/ ×/ ∏/ nx2/ ∈/ pred/ (/ ni/ -/ 2/ )/ CR/ (/ nx2/ )/ ×/ …/ ×/ NError/ (/ ni/ -/ a/ )/ ×/ ∏/ nxa/ ∈/ pred/ (/ ni/ -/ a/ )/ CR/ (/ nxa/ )/ =/ NError/ (/ nexit/ )/ ×/ NError/ (/ ni/ -/ 1/ )/ ×/ NError/ (/ ni/ -/ b/ )/ ×/ ∏/ nxc/ ∈/ pred/ (/ ni/ -/ b/ )/ CR/ (/ nxc/ )/ ×/ …/ ×/ NError/ (/ ni/ -/ 2/ )/ ×/ NError/ (/ ni/ -/ d/ )/ ×/ ∏/ nxe/ ∈/ pred/ (/ ni/ -/ d/ )/ CR/ (/ nxe/ )/ ×/ …/ ×/ NError/ (/ ni/ -/ a/ )/ ×/ NError/ (/ ni/ -/ f/ )/ ×/ ∏/ nxg/ ∈/ pred/ (/ ni/ -/ f/ )/ CR/ (/ nxg/ )/ ×/ …/ ×/ NError/ (/ n3/ )/ ×/ …/ ×/ NError/ (/ n2/ )/ ×/ …/ ×/ NError/ (/ n1/ )/ =/ NError/ (/ nexit/ )/ ×/ NError/ (/ ni/ -/ 1/ )/ Roadi/ -/ 1/ ×/ NError/ (/ ni/ -/ 2/ )/ Roadi/ -/ 2/ ×/ …/ ×/ NError/ (/ ni/ -/ q/ )/ Roadi/ -/ q/ ×/ NError/ (/ ni/ -/ q/ -/ 1/ )/ Roadi/ -/ q/ -/ 1/ ×/ …/ ×/ NError/ (/ n4/ )/ Road4/ ×/ NError/ (/ n3/ )/ Road3/ ×/ NError/ (/ n2/ )/ Road2/ ×/ NError/ (/ n1/ )/ Road1/ =/ ∏/ ni/ ∈/ N/ 最终/ 得到/ 整个/ DAG/ 的/ 可靠性/ 计算/ 的/ 概率模型/ 为式/ (/ 7/ )/ 的/ 形式/ ./ 接下来/ 通过/ 图/ 1/ 所示/ 的/ DAG/ _/ 1/ 的/ 可靠性/ 计算/ 过程/ 实例/ 来/ 验证/ 上述/ 证明/ ./ 图/ 1/ 表明/ 了/ 任务/ 之间/ 的/ 依赖/ 关系/ ,/ 其中/ 任务/ 结点/ n1/ 为/ 入口/ 结点/ ,/ 任务/ 结点/ n7/ 为/ 出口/ 结点/ nexit/ ./ 由图/ 中/ 任务/ 结点/ 的/ 边/ 关系/ 可知/ ,/ 如果/ 出口/ 任务/ 结点/ n7/ 执行/ 成功/ ,/ 则/ 整个/ DAG/ 就/ 执行/ 成功/ ./ 一方面/ ,/ 假设/ 在/ 容错/ 模式/ 下/ 每个/ 结点/ 任务/ 拥有/ 一定/ 数量/ 的/ 副/ 版/ 任务/ ,/ 依据/ 式/ (/ 6/ )/ ,/ 其/ 可靠性/ 的/ 计算/ 过程/ 如表/ 2/ 所示/ ./ 如表中步/ 2/ ,/ n7/ 运行/ 成功/ 则/ 代表/ 它/ 的/ 前驱/ 任务/ 结点/ n5/ 和/ n6/ 也/ 执行/ 成功/ ;/ n5/ 依赖/ n2/ 和/ n3/ 执行/ 成功/ ,/ 如步/ 3/ ;/ 同样/ 如步/ 4/ ,/ n6/ 需要/ n3/ 和/ n4/ 执行/ 成功/ ,/ 步/ 5/ ~/ 7/ 表示/ 了/ n2/ 和/ n4/ 依赖于/ 入口/ 结点/ n1/ 执行/ 成功/ ,/ n3/ 依赖于/ 前驱/ n1/ 和/ n4/ ./ 步骤/ 结点/ DAG/ _/ 1/ 的/ 可靠性/ 1nexit/ =/ n72pred/ (/ n7/ )/ =/ 〈/ n5/ ,/ n6/ 〉/ NError/ (/ n7/ )/ ×/ CR/ (/ n5/ )/ ×/ CR/ (/ n6/ )/ 3pred/ (/ n5/ )/ =/ 〈/ n2/ ,/ n3/ 〉/ NError/ (/ n7/ )/ ×/ NError/ (/ n5/ )/ ×/ 4pred/ (/ n6/ )/ =/ 〈/ n3/ ,/ n4/ 〉/ 5pred/ (/ n2/ )/ =/ 〈/ n1/ 〉/ 6pred/ (/ n3/ )/ =/ 〈/ n1/ ,/ n4/ 〉/ 7pred/ (/ n4/ )/ =/ 〈/ n1/ 〉/ 另一方面/ ,/ DAG/ 中/ 各个/ 任务/ 结点/ 到/ 出口/ 结点/ n7/ 的/ 路径/ 以及/ 个数/ Roadi/ 可以/ 通过/ 深度/ 优先/ 遍历/ 算法/ 计算/ 得出/ ,/ 计算结果/ 如表/ 3/ 所示/ ./ 任务/ n1n2n2/ →/ n5/ →/ n7n3n4n5n5/ →/ n7n6n6/ →/ n7n7n7/ →/ n7/ 根据/ 定理/ 1/ ,/ 将/ 路径/ 个数/ Roadi/ 代入/ 可靠性/ 计算/ 式/ (/ 7/ )/ ,/ 即可/ 得到/ 实例/ DAG/ _/ 1/ 的/ 可靠性/ 为/ GRDAG/ _/ 1/ =/ (/ NError/ (/ n1/ )/ )/ 6/ ×/ NError/ (/ n2/ )/ ×/ 将/ 按照/ 定理/ 1/ 获知/ 的/ 可靠性/ GRDAG/ _/ 1/ 的/ 表达式/ 与表/ 2/ 中/ 实际/ 计算所/ 得到/ 的/ 可靠性/ 表达式/ 对比/ ,/ 计算结果/ 一样/ ./ 该/ 实例/ 的/ 验证/ 与/ 定理/ 1/ 得出/ 的/ 结论/ 一致/ ,/ 验证/ 完毕/ ./ Page64/ 容错/ 算法/ 4.1/ DAG/ 任务/ 复制/ 下/ 限值/ 算法/ (/ 1/ )/ 任务/ 复制/ 次数/ 下/ 限值/ 分析/ 定义/ 1/ ./ DAG/ 可靠性/ 约束/ (/ DAGReliabilityConstraint/ )/ ./ 假定/ 用户/ 对系统/ 的/ 可靠性/ 目标/ 为/ ω/ 且/ ω/ </ 1/ ./ 若/ GR/ / ω/ ,/ 则/ 表示/ 系统/ 的/ 容错/ 方法/ 已/ 达到/ 了/ 用户/ 的/ 可靠性/ 目标/ 需求/ ,/ 即可/ 认为/ 系统/ 是/ 可信/ 的/ ./ 那么/ 将/ DAG/ 的/ 可靠性/ 约束/ 定义/ 为/ GRDAG/ =/ ∏/ ni/ ∈/ N/ 为了/ 满足/ DAG/ 的/ 可靠性/ 目标值/ ,/ 采用/ 主动/ 任务/ 复制/ 的/ 方式/ ,/ 那么/ 必定/ 存在/ 一个/ 任务/ 复制/ 次数/ 的/ 下/ 限值/ kdown/ 满足/ ki/ / kdown/ ω/ 的/ 最小值/ ./ 定理/ 2/ ./ 若/ 系统/ 中/ 任意/ 一个/ 任务/ ni/ 的/ 复制/ 次数/ ki/ </ kdown/ 系统/ 中/ 其它/ 任务/ 复制/ 次数/ kj/ 取何值/ (/ i/ ≠/ j/ )/ ,/ 系统/ 的/ 可靠性/ 目标/ 难以达到/ ,/ 也/ 就是/ 会/ 造成/ DAG/ 的/ 可靠性/ 值/ ∏/ ni/ ∈/ N/ 证明/ ./ 已知/ 条件/ 为/ 任务/ ni/ 的/ 复制/ 次数/ ki/ </ i/ ,/ 那么/ NError/ (/ ni/ )/ Roadi/ </ ω/ ./ 在/ 此/ 条件/ 下/ ,/ DAGkdown/ 中/ 其它/ 任务/ 的/ nj/ ∈/ N/ (/ i/ ≠/ j/ )/ 对应/ 的/ NError/ (/ nj/ )/ Roadj/ 之积/ ∏/ nj/ ∈/ N/ 情况/ 1/ ./ 若/ ∏/ nj/ ∈/ N/ 两边/ 同时/ 乘以/ NError/ (/ ni/ )/ Roadi/ ,/ 可得/ GR/ </ ω/ ×/ NError/ (/ ni/ )/ Roadi/ ,/ 已知/ NError/ (/ ni/ )/ Roadi/ </ ω/ ,/ 则/ 即/ 在/ 第/ 1/ 种/ 情况/ 下/ DAG/ 的/ 可靠性/ GR/ 小于/ ω/ ./ 情况/ 2/ ./ 若/ ω/ / ∏/ nj/ ∈/ N/ (/ NError/ (/ nj/ )/ )/ Roadj/ ,/ 则/ 式/ 两边/ 同时/ 乘以/ NError/ (/ ni/ )/ Roadi/ ,/ 可/ 得/ ω/ ×/ NError/ (/ ni/ )/ Roadi/ / GR/ ./ 已知/ GR/ =/ NError/ (/ ni/ )/ Roadi/ ×/ ∏/ nj/ ∈/ N/ ω/ ×/ NError/ (/ ni/ )/ Roadi/ / GR/ </ NError/ (/ ni/ )/ Roadi/ ×/ 1/ </ ω/ 综合/ 以上/ 两种/ 情况/ 可知/ ,/ 如果/ 任务/ 复制/ 次数/ ki/ 小于/ 下/ 限值/ kdown/ ∏/ ni/ ∈/ N/ 目标/ ./ (/ NError/ (/ ni/ )/ )/ Roadi/ </ ω/ 无法/ 达到/ 系统/ 的/ 可靠性/ 由/ 定理/ 2/ 可知/ 复制/ 次数/ 下/ 限值/ kdownNError/ (/ ni/ )/ Roadi/ / ω/ 满足/ 的/ 最小值/ ,/ 可/ 推出/ 任务/ ni/ 的/ 可靠性/ NError/ (/ ni/ )/ / Roadi/ 槡/ ω/ ,/ 即/ 1/ -/ ∏/ ki/ (/ 2/ )/ 任务/ 复制/ 次数/ 下/ 限值/ 算法/ 接下来/ 根据/ 此/ 表达式/ 来/ 设计/ 获取/ 任务/ 复制/ 次数/ 下/ 限值/ kdown/ 需/ 引入/ 几种/ 优先级/ 队列/ 和/ 集合/ ,/ 依次/ 为/ ①/ 任务/ 无故障/ 概率/ 优先级/ 队/ NError/ _/ Quque/ ,/ 每个/ 任务/ 都/ 包含/ 一个/ 此/ 队列/ ./ 该/ 队列/ 是/ 任务/ ni/ 在/ 处理器/ pu/ 上/ 无故障/ 概率/ 值/ NError/ (/ ni/ ,/ pu/ )/ =/ e/ -/ λ/ iwi/ ,/ u/ 的/ 降序/ 排列/ ;/ ②/ Duplication/ _/ Set/ 集合/ =/ {/ k1/ ,/ k2/ ,/ …/ ,/ ki/ }/ ,/ 该/ 集合/ 包含/ 每个/ 任务/ 的/ 副/ 版/ 复制/ 个数/ ,/ 初始/ 默认/ 次数/ 都/ 为/ 0/ ;/ ③/ 集合/ Road/ _/ Set/ =/ {/ road1/ ,/ road2/ ,/ …/ ,/ roadi/ }/ ,/ 该/ 集合/ 包含/ 每个/ 任务/ 到/ 出口/ 任务/ nexit/ 的/ 路径/ 个数/ ;/ ④/ 任务/ 的/ 可靠性/ 贡献/ 因/ 式/ 优先级/ 队列/ Contri/ -/ bution/ _/ Quque/ ,/ 该/ 队列/ 是/ 任务/ ni/ 对/ DAG/ 可靠性/ 贡献/ 因式/ NError/ (/ ni/ )/ Roadi/ 的/ 降序/ 排列/ ./ 公理/ 1/ ./ 处理器/ 分配原则/ ./ 为了/ 使得/ 任务/ 复制/ 次数/ 最小化/ ,/ 需从/ 任务/ 的/ 无故障/ 概率/ 优先级/ 队列/ NError/ _/ Quque/ 中/ 选择/ 最大/ e/ -/ λ/ iwiu/ 且/ 未/ 分配任务/ ni/ 主版/ 及其/ 副/ 版/ 的/ 处理器/ 给/ 当前任务/ 版本/ ./ 算法/ 1/ ./ DAG/ 任务/ 复制/ 下/ 限值/ 算法/ ./ 输入/ :/ Duplication/ _/ Set/ ,/ Contribution/ _/ Quque/ 输出/ :/ Duplication/ _/ Set/ ,/ Contribution/ _/ Ququefor/ (/ vari/ =/ 0/ ;/ i/ </ |/ N/ |/ ;/ i/ ++/ )/ {/ // // 遍历/ 所有/ 任务/ 初始/ 任务/ ni/ 的/ 复制/ 个数/ kdown/ 获取/ 任务/ ni/ 发生/ 故障/ 的/ 概率/ while/ (/ 1/ -/ fail/ </ Roadi/ 槡/ ω/ )/ &/ (/ ki/ </ |/ U/ |/ )/ doendwhile/ 更新/ ni/ 对/ DAG/ 的/ 可靠性/ 的/ 贡献/ 因式/ NError/ (/ ni/ )/ Roadi/ =/ (/ 1/ -/ fail/ )/ Roadi/ ,/ 并/ 更新/ 到/ Contribution/ _/ Quque/ 中/ ;/ 更新/ ni/ 的/ 复制/ 次数/ kdown/ }/ // // endforreturnDuplication/ _/ Set/ ,/ Contribution/ _/ Quque/ ./ Page7/ 任务/ 复制/ 次数/ 下/ 限值/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ ×/ p2/ )/ ./ 其中/ ,/ n/ 为/ 任务/ 数/ ,/ p/ 为/ 处理器/ 数/ ./ 证明/ ./ 遍历/ 完/ 一个/ DAG/ 内/ 的/ 所有/ 任务/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ )/ ,/ 由于/ 任务/ 复制/ 次数/ 的/ 大小/ 不能/ 超过/ 处理器/ 的/ 数目/ p/ ,/ 所以/ 任务/ 复制/ 的/ 时间/ 复杂度/ 为/ O/ (/ p/ )/ ,/ 计算/ fail/ 值/ 需要/ 遍历/ 处理器/ ,/ 所以/ 其/ 复杂度/ 为/ O/ (/ p/ )/ ./ 那么/ ,/ 任务/ 复制/ 次数/ 下/ 限值/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ ×/ p2/ )/ ./ 4.2/ 贪婪/ 的/ 任务/ 复制/ 策略/ 算法/ 定义/ 2/ ./ 可靠性/ 代价/ (/ ReliabilityCost/ )/ [/ 17/ ]/ ./ 它/ 是/ 指因/ 任务/ 复制/ 冗余/ 执行/ 而/ 消耗/ 的/ 计算资源/ ,/ DAG/ 任务/ 每/ 复制/ 一次/ 都/ 会/ 产生/ 一定/ 的/ 可靠性/ 代价/ ./ 设/ 犡/ 是/ 一个/ |/ N/ |/ ×/ |/ P/ |/ 的/ 矩阵/ ,/ xi/ ,/ u/ 表示/ 任务/ ni/ 是否/ 存在/ 主版/ 任务/ 或者/ 副/ 版/ 任务分配/ 在/ 处理器/ pu/ 上/ 运行/ ./ 若/ 存在/ 任务/ 在/ 处理器/ pu/ 上/ 调度/ ,/ 则/ xi/ ,/ u/ =/ 1/ ;/ 否则/ xi/ ,/ u/ =/ 0/ ./ 在/ 对/ 任务分配/ 处理器/ 时/ ,/ 要求/ 任务/ 的/ 主版/ 任务/ 和/ 所有/ 的/ 副/ 版/ 任务/ 被/ 分配/ 到/ 不同/ 的/ 处理器/ 上/ 执行/ 以/ 保证/ 当主版/ 执行/ 失败/ 的/ 时候/ ,/ 副/ 版/ 仍/ 能/ 在/ 截止期/ 前/ 产生/ 正确/ 的/ 结果/ ./ wi/ ,/ u/ 是/ 任务/ ni/ 在/ 处理器/ pu/ 上/ 的/ 计算/ 时间/ 开销/ ./ 那么/ 在/ 一个/ DAG/ 图中/ 因为/ 任务/ 副/ 版/ 的/ 执行/ 而/ 增加/ 的/ 可靠性/ 代价/ 表示/ 为/ 因此/ ,/ 针对/ 文献/ [/ 10/ -/ 12/ ]/ 中/ 存在/ 的/ 高可靠性/ 代价/ 问题/ ,/ 即/ 为/ 容忍/ ε/ 个/ 故障/ 盲目/ 地使/ 每个/ 任务/ 拥有/ ε/ +/ 1/ 个/ 副/ 版/ ,/ 在/ 结合/ 以上/ 知识/ 的/ 基础/ 上/ ,/ 本文/ 接下来/ 提出/ 相应/ 策略/ 的/ 任务/ 复制/ 算法/ ,/ 算法/ 以/ 满足/ 系统可靠性/ 目标/ 和/ 降低/ 系统可靠性/ 代价/ 为/ 目的/ ,/ 在/ 系统可靠性/ 目标/ 的/ 驱使/ 下/ 动态/ 地/ 量化/ 各个/ 任务/ 需要/ 冗余/ 复制/ 的/ 次数/ ./ 定义/ 3/ ./ 可靠性/ 贡献/ 值/ ./ 假设/ 任务/ ni/ 当前/ 拥有/ 的/ 副/ 版数/ 为/ ki/ ,/ 那么/ 任务/ ni/ 可靠性/ 贡献/ 值/ Δ/ GRni/ 表示/ 任务/ ni/ 复制/ 一个/ 副/ 版/ 之后/ (/ 其副版数/ 变为/ knewi/ =/ ki/ +/ 1/ )/ 其/ DAG/ 的/ 可靠性/ 值/ GRiDAG/ 的/ 可靠性/ 值/ GRDAG/ ,/ 即/ 其中/ GRiDAG/ =/ ∏/ ni/ ∈/ NGRi/ =/ ∏/ ni/ ∈/ N/ 贪婪/ (/ Greedy/ )/ 的/ 任务/ 复制/ 策略/ (/ GreedyPolicy/ )/ 是/ 指/ 对/ 所有/ 任务/ 进行/ 一次/ 预/ 复制/ ,/ 并/ 从/ 计算/ 出/ 的/ 任务/ 可靠性/ 贡献/ 值/ 集合/ {/ Δ/ GRn1/ ,/ Δ/ GRn2/ ,/ …/ ,/ Δ/ GRn/ |/ N/ |/ }/ 中/ 找到/ 当前/ 贡献/ 值/ 最大/ 的/ 那个/ 任务/ ni/ ,/ 并/ 为/ 其/ 增加/ 一个/ 主动/ 方式/ 的/ 副/ 版/ 任务/ ./ 算法/ 2/ ./ 贪婪/ 的/ 任务/ 复制/ 策略/ 算法/ ./ 输入/ :/ Duplication/ _/ Set/ ,/ Contribution/ _/ Quque/ 输出/ :/ Duplication/ _/ Set/ ,/ Contribution/ _/ Quque/ 初始化/ :/ 通过/ 算法/ 1/ 获取/ Duplication/ _/ Set/ ,/ Contribution/ _/ Quque/ ,/ 其中/ Duplication/ _/ Set/ 存储/ 每个/ 任务/ 的/ 最小/ 复制/ 次数/ ki/ ,/ Contribution/ _/ Quque/ 存储/ 每个/ 任务/ 的/ 可靠性/ 贡献/ 因式/ NError/ (/ ni/ )/ Roadi/ ;/ 通过/ 式/ (/ 11/ )/ 计算/ DAG/ 的/ 初始/ 可靠性/ 值/ GRDAG/ ;/ whileGRDAG/ </ ω/ do/ 对/ 每个/ 任务/ 预/ 复制/ 一次/ (/ 已/ 达到/ 满/ 复制/ 的/ 任务/ 不再/ 复制/ )/ ,/ 并/ 通过/ 式/ (/ 16/ )/ 和/ 公理/ 1/ 得出/ 每个/ 任务/ 的/ 可靠性/ 贡献/ 值/ Δ/ GRni/ 和/ 相应/ 处理器/ ,/ 并/ 组成/ 可靠性/ 贡献/ 值/ 集合/ {/ Δ/ GRn1/ ,/ Δ/ GRn2/ ,/ …/ ,/ Δ/ GRn/ |/ N/ |/ }/ ;/ 从/ 可靠性/ 贡献/ 值/ 集合/ {/ Δ/ GRn1/ ,/ Δ/ GRn2/ ,/ …/ ,/ Δ/ GRn/ |/ N/ |/ }/ 中/ 选择/ 最大值/ ni/ ;/ 并/ 将/ GRi/ 为/ ni/ 增加/ 一个/ 副/ 版/ ,/ ki/ =/ ki/ +/ 1/ ;/ 依/ 处理器/ 分配原则/ ,/ 分配/ 处理器/ ;/ 更新/ ni/ 对/ DAG/ 的/ 可靠性/ 的/ 贡献/ 因式/ NError/ (/ ni/ )/ Roadi/ ,/ 并/ 更新/ 到/ Contribution/ _/ Quque/ 中/ ;/ 更新/ ni/ 的/ 复制/ 次数/ ki/ ,/ 并/ 更新/ 到/ Duplication/ _/ Set/ 中/ ;/ endwhile/ 贪婪/ 任务/ 复制/ 策略/ 的/ 时间/ 复杂度/ 为/ O/ (/ n2/ ×/ p2/ )/ ./ 其中/ ,/ n/ 为/ 任务/ 数/ ,/ p/ 为/ 处理器/ 数/ ./ 证明/ ./ 遍历/ 完/ 一个/ DAG/ 内/ 的/ 所有/ 任务/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ )/ ./ 计算/ GRi/ 制/ 任务/ 的/ 处理器/ ,/ 复杂度/ 为/ O/ (/ p/ )/ ;/ 其次/ 要/ 计算/ 预/ 复制/ 任务/ 的/ 可靠性/ 贡献/ 值/ ,/ 需要/ 遍历/ 处理器/ ,/ 复杂度/ 为/ O/ (/ p/ )/ ;/ 最后/ 得出/ GRi/ 杂度/ 为/ O/ (/ n/ )/ ./ 所以/ ,/ 贪婪/ 的/ 任务/ 复制/ 策略/ 的/ 时间/ 复杂度/ 为/ O/ (/ n2/ ×/ p2/ )/ ./ 4.3/ 经济/ 的/ 任务/ 复制/ 策略/ 算法/ 贪婪/ 的/ 任务/ 复制/ 策略/ 基于/ 可靠性/ 贡献/ 值来/ 复制/ 任务/ ,/ 没有/ 考虑/ 因/ 任务/ 复制/ 而/ 消耗/ 的/ 计算资源/ ,/ 因而/ 可以/ 进一步/ 优化/ ./ 定义/ 4/ ./ 可靠性/ 贡献/ 经济/ 比值/ ./ 假设/ 任务/ ni/ 当前/ 拥有/ 的/ 副/ 版数/ 为/ ki/ ,/ 那么/ 任务/ ni/ 可靠性/ 贡献/ 经济/ 比值/ Δ/ GREni/ 表示/ 任务/ ni/ 复制/ 一个/ 副/ 版/ 之后/ ,/ 其/ 可靠性/ 贡献/ 值/ Δ/ GRni/ 与/ 该/ 副/ 版/ 任务/ 消耗/ 的/ 计算资源/ wi/ ,/ ps/ 的/ 比值/ (/ s/ 为/ 选择/ 的/ 处理器/ 编号/ )/ ,/ 即/ 经济/ 的/ (/ Economic/ )/ 任务/ 复制/ 策略/ 是/ 指/ 对/ 所有/ 任务/ 进行/ 一次/ 预/ 复制/ ,/ 并/ 从/ 计算/ 出/ 的/ 任务/ 可靠性/ 贡献/ 经/ Page8/ 济/ 比值/ 集合/ {/ Δ/ GREn1/ ,/ Δ/ GREn2/ ,/ …/ ,/ Δ/ GREn/ |/ N/ |/ }/ 中/ 找到/ 当前/ 贡献/ 值/ 最大/ 的/ 那个/ 任务/ ni/ ./ 作为/ 选择/ 的/ 结果/ 任务/ ni/ 将/ 增加/ 一个/ 主动/ 方式/ 的/ 副/ 版/ 任务/ ./ 该/ 策略/ 不但/ 考虑/ 了/ 不同/ 的/ 任务/ 对系统/ 的/ 可靠性/ 贡献/ 大小/ 不同/ 外/ ,/ 还/ 将/ 任务/ 因/ 复制/ 冗余/ 而/ 消耗/ 的/ 计算资源/ 作为/ 指标/ ,/ 因此/ 相比/ 贪婪/ 的/ 任务/ 复制/ 策略/ ,/ 其/ 付出/ 的/ 可靠性/ 代价/ 更少/ ./ 算法/ 3/ ./ 经济/ 的/ 任务/ 复制/ 策略/ 算法/ ./ 输入/ :/ Duplication/ _/ Set/ ,/ Contribution/ _/ Quque/ 输出/ :/ Duplication/ _/ Set/ ,/ Contribution/ _/ Quque/ 通过/ 算法/ 1/ 获取/ Replication/ _/ Set/ ,/ Contribution/ _/ Quque/ ,/ 其中/ Replication/ _/ Set/ 存储/ 每个/ 任务/ 的/ 最小/ 复制/ 次数/ ki/ ,/ Contribution/ _/ Quque/ 存储/ 每个/ 任务/ 的/ 可靠性/ 贡献/ 因式/ NError/ (/ ni/ )/ Roadi/ ;/ 通过/ 式/ (/ 11/ )/ 计算/ 得出/ DAG/ 的/ 初始/ 可靠性/ 值/ GRDAG/ ;/ whileGRDAG/ </ ω/ then/ 对/ 每个/ 任务/ 预/ 复制/ 一次/ (/ 已/ 达到/ 满/ 复制/ 的/ 任务/ 不再/ 复制/ )/ ,/ 并/ 通过/ 式/ (/ 18/ )/ 和/ 公理/ 1/ 计算/ 得出/ 每个/ 任务/ 的/ 可靠性/ 经济/ 贡献/ 值/ 集合/ {/ Δ/ GREn1/ ,/ Δ/ GREn2/ ,/ …/ ,/ Δ/ GREn/ |/ N/ |/ }/ 和/ 相应/ 处理器/ ;/ 从/ 可靠性/ 经济/ 贡献/ 值/ 集合/ 中/ {/ Δ/ GREn1/ ,/ Δ/ GREn2/ ,/ …/ ,/ Δ/ GREn/ |/ N/ |/ }/ 中/ 选择/ 最大值/ ni/ ,/ 并/ 将/ GRi/ 靠/ 性值/ ,/ 即/ GR/ ←/ GRi/ 为/ ni/ 增加/ 一个/ 副/ 版/ ,/ ki/ =/ ki/ +/ 1/ ;/ 依/ 处理器/ 分配原则/ ,/ 分配/ 处理器/ ;/ 更新/ ni/ 对/ DAG/ 的/ 可靠性/ 的/ 贡献/ 因式/ NError/ (/ ni/ )/ Roadi/ ,/ 并/ 更新/ 到/ Contribution/ _/ Quque/ 中/ ;/ 更新/ ni/ 的/ 复制/ 次数/ ki/ ,/ 并/ 更新/ 到/ Duplication/ _/ Set/ 中/ ;/ endwhile/ 经济/ 的/ 任务/ 复制/ 策略/ 的/ 时间/ 复杂度/ 为/ O/ (/ n2/ ×/ p2/ )/ ./ 证明/ ./ 遍历/ 完/ 一个/ DAG/ 内/ 的/ 所有/ 任务/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ )/ ./ 计算/ Δ/ GREn1/ 值/ 首先/ 需要/ 选择/ 预/ 复制/ 任务/ 的/ 处理器/ ,/ 复杂度/ 为/ O/ (/ p/ )/ ;/ 其次/ 要/ 计算/ 预/ 复制/ 任务/ 的/ 可靠性/ 贡献/ 值/ ,/ 需要/ 遍历/ 处理器/ ,/ 复杂度/ 为/ O/ (/ p/ )/ ;/ 最后/ 得出/ Δ/ GREn1/ 需要/ 遍历/ 的/ 所有/ 任务/ ,/ 其/ 复杂度/ 为/ O/ (/ n/ )/ ./ 所以/ ,/ 经济/ 的/ 任务/ 复制/ 策略/ 的/ 时间/ 复杂度/ 为/ O/ (/ n2/ ×/ p2/ )/ ./ 4.4/ DAG/ 容错/ 算法/ 通过/ 理论/ 分析/ ,/ 得出/ DAG/ 的/ 可靠性/ 概率模型/ ;/ 明确/ 为了/ 达到/ DAG/ 的/ 可靠性/ 目标/ ,/ 任务/ 的/ 复制/ 次数/ 需/ 满足/ ki/ / kdown/ 值/ 算法/ 可/ 获知/ 下/ 限值/ kdown/ 任务/ 复制/ 策略/ 造成/ 的/ 高可靠性/ 代价/ 问题/ ,/ 提出/ 了/ 贪婪/ 的/ 任务/ 复制/ 策略/ 算法/ 和/ 经济/ 的/ 任务/ 复制/ 策略/ 算法/ ./ 基于/ 上述/ 模型/ 和/ 算法/ ,/ 提出/ 可/ 选/ 策略/ 的/ DAG/ 容错/ (/ OptionalPolicyonDAGFault/ -/ Tolerant/ ,/ OPDFT/ )/ 算法/ ./ 虽然/ 通过/ 任务/ 复制/ 策略/ 得出/ 了/ 任务/ 的/ 主/ 副/ 版本/ 和/ 相应/ 分配/ 的/ 处理器/ ,/ 但/ 必须/ 对/ 任务/ 的/ 优先级/ 进行/ 排序/ ,/ 本文/ 采用/ 在/ DAG/ 任务/ 容错/ 调度/ 中/ 常用/ 的/ 任务/ 向上/ 排序/ 值/ (/ upwardrankvalue/ )/ [/ 10/ -/ 11/ ]/ 的/ 降序/ 排列/ 作为/ 任务/ 优先级/ 排序/ 标准/ ,/ 其/ 计算公式/ 为/ ranku/ (/ nexit/ )/ =/ wexit/ 烅/ 烄/ ranku/ (/ ni/ )/ =/ wi/ +/ maxnj/ ∈/ succ/ (/ ni/ )/ {/ ci/ ,/ j/ +/ ranku/ (/ nj/ 烆/ 其中/ wi/ 表示/ 任务/ ni/ 的/ 平均/ 计算/ 开销/ ,/ OPDFT/ 算法/ 流程/ 如/ 算法/ 4/ 和/ 图/ 2/ 所示/ ./ 算法/ 4/ ./ OPDFT/ 算法/ ./ 输入/ :/ DAG/ 参数信息/ 输出/ :/ DAG/ 调度/ 结果/ 1/ ./ 读取/ DAG/ 的/ 相关/ 信息/ ,/ 如/ 任务/ 结点/ 、/ 任务/ 结点/ 之间/ 的/ 有/ 向/ 边/ 和/ 通信/ 开销/ 以及/ 在/ 处理单元/ 上/ 运行/ 的/ 计算/ 开销/ 等/ ,/ 确定/ 系统/ 参数/ 集/ ;/ 2/ ./ 按照/ 深度/ 优先/ 遍历/ 算法/ (/ DepthFirstSearch/ ,/ DFS/ )/ [/ 16/ ]/ ,/ 求取/ 各/ DAG/ 中/ 各/ 任务/ 到/ 出口/ 任务/ 的/ 路径/ 个数/ Roadi/ ;/ 3/ ./ 按照/ 式/ (/ 2/ )/ 计算/ DAG/ 中/ 各/ 任务/ 在/ 各个/ 处理器/ 上/ ,/ 在/ 其/ 执行/ 时间/ 内/ 无/ 瞬时性/ 故障/ 的/ 概率/ Nerror/ ,/ 并/ 放入/ 降序/ 的/ 优先级/ 队列/ NError/ _/ Quque/ ;/ 4/ ./ 调用/ 任务/ 复制/ 次数/ 下/ 限值/ 算法/ ;/ 5/ ./ 判断/ 当前/ 系统/ 的/ 可靠性/ 值/ 是否/ 已/ 满足/ 系统可靠性/ 目标/ ,/ 如果/ 满足/ ,/ 则/ 跳转/ 至步/ 8/ ;/ 如果/ 不/ 满足/ ,/ 则/ 进入/ 下/ 一步/ ./ 6/ ./ 若/ 系统/ 考虑/ 计算资源/ 消耗/ 的/ 经济性/ ,/ 则/ 采用/ 经济/ 的/ 任务/ 复制/ 选择/ 策略/ ,/ 继续/ 选择/ 任务/ 进行/ 复制/ ,/ 否则/ 采用/ 贪婪/ 的/ 任务/ 复制/ 策略/ 进行/ 复制/ ;/ 7/ ./ 获取/ 最终/ 各/ 任务/ 的/ 复制/ 和/ 所/ 分配/ 的/ 处理器/ ;/ 8/ ./ 基于/ 向上/ 排序/ 值/ 对/ 任务/ 优先级/ 排序/ 并/ 调度/ ;/ 9/ ./ 返回/ 调度/ 结果/ ,/ 算法/ 结束/ ./ OPDFT/ 算法/ 的/ 时间/ 复杂度/ 主要/ 考虑/ 任务/ 复制/ 下/ 限值/ 算法/ 和/ 任务/ 复制/ 策略/ 算法/ ,/ 如果/ 通过/ 任务/ 复制/ 次数/ 下/ 限值/ 算法/ 能够/ 满足/ DAG/ 的/ 可靠性/ 目标/ ,/ 那么/ 无需/ 调用/ 任务/ 复制/ 策略/ 算法/ ,/ OPDFT/ 算法/ 的/ 时间/ 复杂度/ 就/ 为/ O/ (/ n/ ×/ p2/ )/ ./ 否则/ 需/ 调用/ 任务/ 复制/ 策略/ 算法/ ,/ 使/ OPDFT/ 算法/ 的/ 时间/ 复杂度/ 达到/ O/ (/ n2/ ×/ p2/ )/ ./ 因此/ ,/ 这/ 也/ 说明/ 了/ 与/ 直接/ 调用/ 相关/ 任务/ 复制/ 策略/ 算法/ 相比/ ,/ 预先/ 调用/ 任务/ 复制/ 下/ 限值/ 算法/ ,/ 确定/ 每个/ 任务/ 的/ 复制/ 次数/ 下/ 限值/ ,/ 能够/ 为/ OPDFT/ 算法/ 产生/ 更好/ 的/ 效率/ ./ Page95/ 实验/ 5.1/ 实验/ 平台/ 及/ 样本/ 实验/ 的/ 硬件/ 环境/ 为/ 一台/ 具有/ 奔腾/ 双核/ 处理器/ (/ 3.2/ GHz/ // 2.0/ GBRAM/ )/ 的/ WindowsXP/ 机器/ ,/ 所/ 使用/ 的/ 软件工具/ 有/ V/ C++/ 6.0/ 和/ Highcharts/ ,/ DAG/ 任务/ 图/ 生成/ 工具/ TGFF3/ ./ 5/ (/ TaskGraphsforFree/ )/ [/ 18/ ]/ ./ 实验/ 流程/ 步骤/ 分为/ 系统/ 参数/ 生成/ 模块/ 、/ 算法/ 处理/ 模块/ 、/ 实验/ 数据分析/ 这/ 3/ 步/ ./ 本文/ 将/ 采用/ TGFF/ 随机/ 生成/ 具有/ 不同/ 特征/ 的/ 大量/ 随机/ DAG/ 作为/ 仿真/ 测试/ 中/ 的/ 任务/ 样本空间/ ,/ 并/ 在/ 一个/ 由/ 15/ 个/ 异构/ 处理器/ 构成/ 的/ 处理器/ 平台/ 上/ 进行/ 任务分配/ ,/ 任务/ 故障/ 概率/ 取值/ 范围/ 为/ (/ 2/ ~/ 10/ )/ ×/ 10/ -/ 3/ 中/ 的/ 随机数/ ./ 其中/ ,/ TGFF/ 中/ 生成/ DAG/ 随机/ DAG/ 的/ 参数设置/ 为/ :/ 任务/ 个数/ m/ =/ {/ 10/ ,/ 20/ ,/ 30/ ,/ 40/ ,/ 50/ ,/ 60/ ,/ 70/ ,/ 80/ ,/ 90/ ,/ 100/ ,/ 110/ ,/ 120/ ,/ 130/ ,/ 140/ ,/ 150/ }/ ,/ DAG/ 最大/ 出度/ 集/ β/ =/ {/ 2/ ,/ 3/ ,/ 4/ ,/ 5/ }/ ,/ DAG/ 最大/ 入度/ 集/ γ/ =/ {/ 2/ ,/ 3/ ,/ 4/ ,/ 5/ }/ ,/ 任务/ 在/ 不同/ 处理器/ 上/ 执行/ 时间/ 的/ 差异/ 度/ η/ =/ {/ 0.1/ ,/ 0.5/ ,/ 1.0/ }/ ,/ 平均/ 通信/ 时间/ 与/ 平均/ 计算/ 时间/ 的/ 比值/ CCR/ =/ {/ 0.1/ ,/ 0.5/ ,/ 1.0/ ,/ 5.0/ ,/ 10.0/ }/ ,/ 假设/ wi/ 表示/ 任务/ ni/ 的/ 平均/ 计算/ 开销/ ,/ 那么/ ni/ 在/ 处理器/ pk/ 上/ 的/ 计算/ 开销/ 可以/ 通过/ 公式/ 产生/ ,/ 即/ wi/ ×/ (/ 1/ -/ η/ // 2/ )/ / wi/ ,/ k/ / wi/ ×/ (/ 1/ +/ η/ // 2/ )/ (/ 20/ )/ 5.2/ 评价/ 指标/ 本文/ 采用/ DAG/ 的/ 可靠性/ (/ Reliability/ )/ 、/ 可靠性/ 代价/ (/ ReliabilityCost/ )/ 和/ 加速/ 比/ (/ Speedup/ )/ 作为/ 评价/ 指标/ ./ 可靠性/ 即/ DAG/ 的/ 可靠性/ 概率模型/ ,/ 采用/ 式/ (/ 7/ )/ 计算/ ,/ 通过/ 可靠性/ 与/ 可靠性/ 目标/ 之间/ 的/ 关系/ 来/ 衡量/ 容错/ 算法/ 的/ 有效性/ ./ 可靠性/ 代价/ 是/ 指因/ 任务/ 复制/ 冗余/ 执行/ 而/ 消耗/ 的/ 计算资源/ ,/ 采用/ 式/ (/ 15/ )/ 计算/ ./ DAG/ 的/ 可靠性/ 代价/ 越低/ ,/ 说明/ 冗余/ 任务/ 越/ 少/ ,/ 容错/ 算法/ 越/ 高效/ ./ 加速/ 比即/ 在/ 一个/ 处理器/ 上/ 串行/ 执行/ DAG/ 图中/ 的/ 所有/ 任务/ 时/ 使用/ 的/ 最少/ 时间/ 与/ 算法/ 实际/ 调度/ 长度/ 的/ 比值/ ./ 调度/ 算法/ 产生/ 的/ 加速/ 比越/ 大/ ,/ 说明/ 容错/ 算法/ 越/ 高效/ ,/ 加速/ 比/ 计算公式/ 为/ 5.3/ 实验/ 结果/ 及/ 分析/ 实验/ 1/ ./ 针对/ 多个/ DAG/ 样本/ ,/ 探究/ 它/ 在/ 不同/ 的/ 可靠性/ 目标/ ω/ 和/ 不同/ 的/ 任务/ 复制/ 策略/ 条件/ 下/ ,/ 系统/ 最终/ 所/ 获取/ 的/ 实际/ 可靠性/ 值/ 和/ 为此/ 而/ 付出/ 的/ 可靠性/ 代价/ ./ 本次/ 实验/ 从/ 样本空间/ 中/ 随机/ 选取/ 20/ 个/ DAG/ ,/ 并/ 设定/ 系统/ 的/ 可靠性/ 目标/ ω/ 在/ 0.80/ ~/ 0.99/ 区间/ 变化/ ,/ 以/ 0.01/ 递增/ ./ 取/ 100/ 次/ 实验所/ 得/ 数据/ 的/ 平均值/ 作为/ 最终/ 的/ 仿真/ 结果/ ./ 实验/ 结果/ 如图/ 3/ 和/ 图/ 4/ 所示/ ./ 图/ 33/ 种/ 复制/ 策略/ 的/ 可靠性/ 值/ 随/ 目标值/ 的/ 变化/ 比较/ Page10/ 图/ 43/ 种/ 复制/ 策略/ 的/ 可靠性/ 代价/ 随/ 可靠性/ 目标/ 的/ 变化/ 比较/ 图/ 3/ 表示/ 利用/ 3/ 种/ 任务/ 复制/ 策略/ 进行/ 容错/ 设计/ 之后/ 最终/ 所得/ 的/ 可靠性/ 值/ 与/ 用户/ 设定/ 的/ 可靠性/ 目标/ 之间/ 的/ 关系/ ./ 从图/ 中/ 可以/ 看出/ ,/ 运用/ 3/ 种/ 容错/ 策略/ 均/ 能/ 使/ 系统可靠性/ 目标/ 得到/ 满足/ ./ 其中/ ,/ 利用/ 盲目/ 的/ 复制/ 策略/ 最终/ 得到/ 的/ 可靠性/ 值/ 最大/ ,/ 这/ 是因为/ 较之/ 另外/ 两种/ 策略/ ,/ 它/ 缺乏/ 有效/ 的/ 分析/ 而/ 盲目/ 地/ 运用/ 了/ 大量/ 的/ 冗余/ 任务/ 副/ 版/ ./ 另外/ ,/ 经济/ 的/ 任务/ 复制/ 策略/ 与/ 贪婪/ 的/ 任务/ 复制/ 策略/ 得到/ 的/ 结果/ 较为/ 接近/ ./ 但/ 随着/ 系统可靠性/ 目标/ 的/ 不断/ 提高/ ,/ 运用/ 3/ 种/ 策略/ 所/ 得到/ 的/ 可靠性/ 值/ 之间/ 差距/ 逐渐/ 缩小/ ./ 也就是说/ ,/ 当对/ 系统可靠性/ 要求/ 较/ 高时/ ,/ 盲目/ 复制/ 策略/ 在/ 最终/ 得到/ 可靠性/ 值/ 较大/ 方面/ 的/ 优势/ 在/ 减弱/ ./ 图/ 4/ 表示/ DAG/ 在/ 不同/ 的/ 可靠性/ 目标/ 和/ 任务/ 复制/ 策略/ 下/ ,/ 为/ 满足/ 可靠性/ 目标/ 而/ 付出/ 的/ 可靠性/ 代价/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随着/ 系统可靠性/ 目标/ 的/ 变大/ ,/ 3/ 种/ 复制/ 策略/ 所/ 付出/ 的/ 可靠性/ 代价/ 都/ 在/ 增长/ ,/ 这/ 是因为/ 需/ 增加/ 任务/ 副/ 版/ 数目/ 以/ 满足/ 可靠性/ 需求/ 的/ 增长/ ./ 但是/ 在/ 同一个/ 可靠性/ 目标/ 下/ ,/ 本文/ 所/ 提出/ 的/ 经济/ 的/ 任务/ 复制/ 策略/ 所/ 付出/ 的/ 可靠性/ 代价/ 最低/ ,/ 贪婪/ 的/ 复制/ 策略/ 次之/ ,/ 盲目/ 的/ 任务/ 复制/ 策略/ 的/ 可靠性/ 代价/ 最大/ ./ 另外/ ,/ 对照/ 图/ 3/ 与/ 图/ 4/ ,/ 可以/ 看出/ 当/ 系统可靠性/ 目标值/ 较大/ 时/ ,/ 特别/ 是/ 当/ ω/ =/ 0.99/ 时/ ,/ 3/ 种/ 复制/ 策略/ 最终/ 所/ 得到/ 的/ 可靠性/ 值均/ 满足/ 目标/ 且/ 相差无几/ ,/ 但是/ 盲目/ 的/ 任务/ 复制/ 策略/ 付出/ 了/ 最大/ 的/ 可靠性/ 代价/ ,/ 而/ 本文/ 所/ 提出/ 的/ 经济/ 的/ 任务/ 复制/ 策略/ 可靠性/ 代价/ 最低/ ./ 这/ 是因为/ 它/ 是/ 在/ 对/ 系统可靠性/ 建模/ 的/ 基础/ 上/ ,/ 兼顾/ 不同/ 的/ 任务/ 对/ 系统可靠性/ 的/ 贡献/ 与/ 所/ 带来/ 的/ 可靠性/ 开销/ 之间/ 的/ 关系/ ,/ 然后/ 做出/ 任务/ 复制/ 选择/ ./ 可见/ 本文/ 所/ 提出/ 的/ 算法/ 较之/ 以往/ 算法/ 能够/ 在/ 一定/ 程度/ 上/ 降低/ 可靠性/ 代价/ ./ 实验/ 2/ ./ 假定/ 用户/ 对系统/ 的/ 可靠性/ 目标/ ω/ =/ 0.99/ ,/ 评估/ 任务/ 数量/ 规模/ 不同/ 的/ DAG/ 在/ 相同/ 的/ 可靠性/ 目标/ 条件/ 下/ ,/ 分别/ 采用/ 以上/ 3/ 种/ 任务/ 复制/ 策略/ 所/ 付出/ 的/ 可靠性/ 代价/ ./ 本次/ 实验/ 中/ 系统/ 规模/ ,/ 即/ DAG/ 任数/ 在/ 10/ ~/ 150/ 之间/ 变化/ ./ 实验/ 结果/ 如图/ 5/ 所示/ ./ 图/ 53/ 种/ 复制/ 策略/ 的/ 可靠性/ 代价/ 随/ DAG/ 任务/ 数/ 的/ 变化/ 比较/ 由图/ 5/ 可/ 看出/ 当/ DAG/ 任务/ 规模/ 增大/ 时/ ,/ 可靠性/ 代/ 价值/ 也/ 在/ 增大/ ./ 这是/ 由于/ 系统/ 中/ 含有/ 的/ 任务/ 数量/ 规模/ 增加/ ,/ 会/ 导致/ 任务/ 副/ 版/ 集合/ 的/ 增大/ ,/ 故而/ 需要/ 更/ 多/ 的/ 计算资源/ 来/ 运行/ 这些/ 任务/ ./ 但/ 从/ 图/ 中/ 可以/ 看出/ ,/ 无论/ DAG/ 规模/ 为/ 多少/ ,/ 本文/ 所/ 提出/ 的/ 基于/ 经济/ 任务/ 复制/ 策略/ 的/ 容错/ 算法/ 对应/ 的/ 可靠性/ 代价/ 最少/ ,/ 大约/ 是/ 盲目/ 的/ 任务/ 复制/ 策略/ 所/ 带来/ 的/ 可靠性/ 代价/ 的/ 60/ %/ ./ 实验/ 3/ ./ 假定/ 用户/ 对系统/ 的/ 可靠性/ 目标/ ω/ =/ 0.99/ ,/ 评估/ 任务/ 数量/ 规模/ 不同/ 的/ DAG/ 在/ 相同/ 的/ 可靠性/ 目标/ 条件/ 下/ ,/ 分别/ 采用/ 以上/ 3/ 种/ 任务/ 复制/ 策略/ 所/ 产生/ 的/ 的/ 加速/ 比/ ./ 本次/ 实验/ 中/ 系统/ 规模/ ,/ 即/ DAG/ 任务/ 数量/ 在/ 10/ ~/ 150/ 之间/ 变化/ ./ 实验/ 结果/ 如图/ 6/ 所示/ ./ 图/ 63/ 种/ 复制/ 策略/ 的/ 平均/ 加速/ 比随/ DAG/ 任务/ 数/ 的/ 变化/ 比较/ 由图/ 6/ 可/ 看出/ ,/ 当/ DAG/ 任务/ 规模/ 增大/ 时/ ,/ 加速/ 比/ 也/ 在/ 增大/ ,/ 本文/ 所/ 提出/ 的/ 基于/ 经济/ 任务/ 复制/ 策略/ 的/ 容错/ 算法/ 对应/ 的/ 加速/ 比/ 最大/ ,/ 贪婪/ 复制/ 策略/ 次之/ ,/ 大约/ 分别/ 是/ 盲目/ 的/ 任务/ 复制/ 策略/ 所/ 带来/ 的/ 加速/ 比/ 的/ 1.2/ 和/ 1.3/ 倍/ 左右/ ./ 这/ 是因为/ 随着/ DAG/ 任务/ 规模/ 增大/ ,/ 经济/ 任务/ 复制/ 策略/ 复制/ 的/ 副/ 版/ 任务/ 比/ 盲目/ 复制/ 策略/ 要少/ ,/ 因此/ 相比/ 调度/ 长度/ 更/ 短/ ,/ 从而/ 加速/ 比/ 更/ 高/ ./ Page11/ 实验/ 4/ ./ 随机/ 实验/ ./ 实验/ 目的/ 是/ 对/ 一个/ DAG/ 分别/ 运用/ 基于/ 以上/ 3/ 种/ 复制/ 策略/ 的/ 容错/ 算法/ ,/ 获取/ 它/ 在/ 可靠性/ 目标/ ω/ =/ 0.99/ 的/ 条件/ 下/ ,/ 各个/ 任务/ 对应/ 的/ 复制/ 次数/ 以及/ 所/ 选择/ 处理器/ 情况/ ./ 本次/ 实验/ 从/ 样本空间/ 中/ 随机/ 选择/ 3/ 个/ DAG/ ,/ 并/ 以/ 之/ 为例/ 验证/ 算法/ 功能/ 的/ 有效性/ ./ 本次/ 随机/ 实验/ 中/ ,/ 随机/ 从/ 样本空间/ 中/ 选择/ 了/ 分别/ 含有/ 8/ 个/ 、/ 5/ 个/ 和/ 12/ 个/ 任务/ 的/ DAG/ ./ 每个/ 任务/ 在/ 不同/ 的/ 策略/ 下/ 对应/ 的/ 任务/ 版本/ 数如图/ 7/ 、/ 图/ 8/ 和/ 图/ 9/ 所示/ ./ 这次/ 试验/ 中/ 盲目/ 的/ 任务/ 复制/ 策略/ 带来/ 的/ 可靠性/ 代价/ 为/ 4513/ ,/ 贪婪/ 的/ 任务/ 复制/ 策略/ 对应/ 的/ 可靠性/ 代价/ 是/ 3171/ ,/ 经济/ 的/ 任务/ 复制/ 策略/ 最少/ ,/ 可靠性/ 代价/ 是/ 3046/ ./ 各个/ DAG/ 内/ 采用/ 经济/ 任务/ 策略/ 情况/ 下/ ,/ 任务/ 所/ 分配/ 的/ 处理器/ 如表/ 4/ 所示/ ./ 任务/ 序号/ G1/ _/ 1G1/ _/ 2G1/ _/ 3/ √/ G1/ _/ 4/ √/ √/ √/ √/ G1/ _/ 5/ √/ G1/ _/ 6G1/ _/ 7G1/ _/ 8G2/ _/ 1/ √/ √/ √/ G2/ _/ 2G2/ _/ 3/ √/ √/ √/ √/ G2/ _/ 4G2/ _/ 5G3/ _/ 1G3/ _/ 2G3/ _/ 3G3/ _/ 4G3/ _/ 5G3/ _/ 6/ √/ G3/ _/ 7G3/ _/ 8G3/ _/ 9G3/ _/ 10G3/ _/ 11G3/ _/ 12/ 以上/ 4/ 次/ 实验/ 的/ 结果表明/ ,/ 本文/ 所/ 提出/ 的/ DAG/ 任务/ 启发式/ 动态/ 复制/ 容错/ 方法/ 可以/ 根据/ 用户/ 设定/ 的/ 可靠性/ 目标/ 有效/ 地为/ 任务/ 动态/ 地/ 生成/ 任务/ 版本/ 数/ ,/ 为/ 之/ 分配/ 处理器/ ;/ 并且/ 在/ 达到/ 可靠性/ 目标/ 的/ 同时/ ,/ 经济/ 任务/ 复制/ 策略/ 和/ 贪婪/ 任务/ 复制/ 策略/ 在/ 可靠性/ 代价/ 方面/ 分别/ 是/ 盲目/ 策略/ 算法/ 的/ 60/ %/ 和/ 70/ %/ 左右/ ./ 实验/ 5/ ./ 与/ MaxRe/ [/ 13/ ]/ 算法/ 的/ DAG/ 可靠性/ 模型/ 在/ 可靠性/ 及/ 可靠性/ 代价/ 方面/ 的/ 比较/ ./ 图/ 10/ 为/ 在/ 基于/ 经济/ 复制/ 策略/ 的/ 情况/ 下/ ,/ 可靠性/ 值/ 随/ 可靠性/ 目标/ 变化/ 的/ 趋势/ 图/ ./ 可以/ 看出/ ,/ 本文/ 提出/ 的/ OPDFT/ 算法/ 采用/ 的/ DAG/ 可靠性/ 模型/ 相比/ MaxRe/ 在/ 可靠性/ 目标/ 一定/ 的/ 情况/ 下/ ,/ 具有/ 更/ 高/ 的/ 可靠性/ 值/ ./ 图/ 10/ 经济/ 复制/ 策略/ 下/ 实际/ 可靠性/ 值/ 随/ 目标值/ 的/ 变化/ 比较/ Page12/ 图/ 11/ 表示/ 在/ 经济/ 复制/ 策略/ 下/ ,/ DAG/ 在/ 不同/ 的/ 可靠性/ 目标/ 下/ ,/ 为/ 满足/ 可靠性/ 目标/ 而/ 付出/ 的/ 可靠性/ 代价/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随着/ 系统可靠性/ 目标/ 的/ 增大/ ,/ 本文/ 所/ 提出/ 的/ DAG/ 可靠性/ 模型/ 所/ 付出/ 的/ 可靠性/ 代价/ 在/ 最坏/ 情况/ 也/ 仅/ 为/ MaxRe/ 算法/ 的/ 80/ %/ 左右/ ./ 图/ 11/ 经济/ 复制/ 策略/ 下/ 可靠性/ 代价/ 随/ 可靠性/ 目标值/ 的/ 变化/ 比较/ 由于/ 本文/ 从/ 任务/ 优先级/ 约束/ 和/ 可靠性/ 贡献/ 因/ 式/ 出发/ ,/ 建立/ 更加/ 精确/ 的/ 可靠性/ 模型/ ,/ 因而/ 具有/ 更好/ 的/ 系统可靠性/ 值/ 和/ 更/ 低/ 的/ 可靠性/ 代价/ ./ 实验/ 6/ ./ 考虑/ 真实/ 汽车/ 电子/ 环境/ 下/ ,/ 端到/ 端/ 最差/ 响应/ 时间/ (/ Worst/ -/ CaseResponseTime/ ,/ WCRT/ )/ [/ 19/ ]/ 随/ 消息/ 数/ 变化/ 的/ 情况/ ./ 在/ 汽车/ 电子系统/ 中/ ,/ 消息/ 集/ 的/ WCRT/ 定义/ 为/ 消息/ 集/ 的/ 第一个/ 消息/ 所/ 分配/ 的/ ECU/ 触发/ 就绪/ 到/ 传输/ 完毕/ 到达/ 最后/ 一个/ 消息/ 所在/ ECU/ 节点/ 之间/ 的/ 时间段/ ,/ WCRT/ 越短/ ,/ 说明/ 加速/ 比越/ 高/ ,/ 算法/ 越/ 高效/ ./ 本文/ 采用/ 日本/ 名古屋/ 大学/ 嵌入式/ 系统/ 研究/ 中心/ 提供/ 的/ 单个/ CAN/ 网络/ 环境/ 下/ 的/ 包括/ 65/ 个/ 消息/ 任务/ ,/ 并/ 被/ 分配/ 到/ 14/ 个/ ECU/ 之中/ 的/ 真实/ 消息/ 任务/ 集/ [/ 19/ ]/ ./ 基于/ 经济/ 复制/ 策略/ ,/ 实验/ 结果/ 如图/ 12/ 所示/ ,/ 从/ 结果/ 可以/ 看出/ ,/ OPDFT/ 的/ WRCT/ 相比/ MaxRe/ 要/ 短/ ,/ 最好/ 情况/ 下/ 优于/ MaxRe/ 算法/ 30/ %/ 以上/ ./ 图/ 12/ 经济/ 复制/ 策略/ 下/ WCRT/ 随/ 任务/ 消息/ 数/ 的/ 变化/ 比较/ 6/ 总结/ 本文/ 面向/ 异构/ 分布式计算/ 系统/ 领域/ 进行/ 容错/ 研究/ ,/ 以/ 经典/ DAG/ 任务模型/ 为/ 基础/ ,/ 在/ 对/ DAG/ 任务/ 进行/ 可靠性/ 分析/ 的/ 基础/ 上/ ,/ 提出/ 了/ DAG/ 的/ 可靠性/ 模型/ 并/ 进行/ 了/ 证明/ 和/ 实例/ 验证/ ;/ 然后/ 利用/ 主动/ 任务/ 复制/ 容错/ 方式/ ,/ 给出/ 了/ 系统可靠性/ 的/ 约束条件/ 以及/ 可靠性/ 代价/ 的/ 计算方法/ ,/ 并/ 提出/ 了/ 一种/ 计算/ DAG/ 任务/ 复制/ 次数/ 下/ 限值/ 算法/ ;/ 接着/ 分别/ 提出/ 以/ 降低/ 可靠性/ 代价/ 为/ 目标/ 的/ 贪婪/ 的/ 任务/ 复制/ 策略/ 和/ 经济/ 的/ 任务/ 复制/ 策略/ 算法/ ,/ 在/ 一定/ 程度/ 上/ 降低/ 了/ 对/ 任务/ 的/ 盲目/ 复制/ ;/ 接着/ 通过/ 结合/ 上述/ 3/ 个/ 算法/ ,/ 给出/ 了/ DAG/ 可选/ 策略/ 的/ 容错/ 调度/ 算法/ ;/ 最后/ 利用/ 仿真/ 实验/ 将/ 本文/ 提出/ 的/ 算法/ 与/ 盲目/ 复制/ 策略/ 进行/ 比较/ ,/ 结果表明/ 本文/ 所/ 提出/ 的/ 算法/ 可/ 精确/ 量化/ 任务/ 复制/ 个数/ ,/ 在/ 满足/ 系统/ 的/ 可靠性/ 目标/ 的/ 前提/ 下/ 付出/ 更少/ 的/ 可靠性/ 代价/ 并/ 具有/ 更好/ 的/ 调度/ 性能/ ./ 致谢/ 在/ 此/ ,/ 向/ 湖南大学/ 嵌入式/ 与/ 网络/ 计算/ 重点/ 实验室/ 李仁发/ 教授/ 领导/ 的/ 高性能/ 嵌入式/ 计算/ 讨论/ 班/ 和/ 国家/ 超级/ 计算/ 长沙/ 中心/ 异构/ 并行/ 系统/ 高性能/ 研究组/ 的/ 专家/ 、/ 老师/ 、/ 工程师/ 和/ 同学/ 所/ 提出/ 的/ 意见/ 和/ 建议/ 表示感谢/ ,/ 向/ 本文/ 的/ 审稿/ 专家/ 致以/ 深深/ 的/ 谢意/ !/ 

