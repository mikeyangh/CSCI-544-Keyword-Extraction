Page1/ 可信/ 固态/ 硬盘/ :/ 大/ 数据安全/ 的/ 新/ 基础/ 田/ 洪亮/ 张勇/ 许信辉/ 李超/ 邢/ 春晓/ (/ 清华大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100084/ )/ (/ 清华大学/ 信息技术/ 研究院/ 北京/ 100084/ )/ (/ 清华/ 信息科学/ 与/ 技术/ 国家/ 实验室/ (/ 筹/ )/ 北京/ 100084/ )/ 摘要/ 大/ 数据/ 平台/ ,/ 因/ 其/ 数据/ 多/ 、/ 价值/ 高/ 和/ 存储/ 集中/ 的/ 特点/ ,/ 已经/ 成为/ 对/ 攻击者/ 非常/ 有/ 吸引力/ 的/ 目标/ ./ 因此/ ,/ 大/ 数据安全/ 是/ 一个/ 非常/ 重要/ 的/ 研究课题/ ./ 然而/ ,/ 当前/ 保障/ 大/ 数据/ 平台/ (/ 如/ Hadoop/ )/ 数据安全/ 的/ 两种/ 常见/ 方法/ 各有/ 不足/ :/ (/ 1/ )/ 访问控制/ ./ 存在/ 被/ 外部/ 黑客/ 攻破/ 或/ 内部/ 管理员/ 绕过/ 的/ 风险/ ;/ (/ 2/ )/ 数据/ 加密/ ./ 虽然/ 安全性/ 较/ 高/ ,/ 但/ 加密/ 解密/ 海量/ 数据/ 会/ 增加/ 显著/ 开销/ ./ 为了/ 同时/ 满足/ 大/ 数据/ 应用/ 对/ 数据/ 存储/ 的/ 高/ 安全/ 和/ 高性能/ 要求/ ,/ 文中/ 提出/ 可信/ 固态/ 硬盘/ (/ TrustedSSD/ )/ ,/ 它/ 提供/ 安全/ 增强/ 的/ 存储设备/ 接口/ 和/ 协议/ ,/ 使得/ 用户/ 可以/ 对/ 存储/ 中/ 的/ 数据/ 施以/ 细粒度/ 的/ 访问控制/ ,/ 从而/ 保障/ 存储/ 中/ 数据/ 的/ 安全/ ./ 文中/ 深入分析/ 了/ 可信/ 固态/ 硬盘/ 的/ 安全性/ ,/ 并/ 详细/ 介绍/ 了/ 系统/ 设计/ 与/ 实现/ 中/ 的/ 挑战/ 和/ 应对/ ./ 实验/ 结果表明/ ,/ 无论是/ 在/ 合成/ 的/ 还是/ 真实/ 的/ 工作/ 负载/ 上/ ,/ 可信/ 固态/ 硬盘/ 的/ 运行/ 开销/ 不到/ 3/ %/ ./ 因此/ ,/ 可信/ 固态/ 硬盘/ 有望/ 成为/ 大/ 数据安全/ 的/ 新/ 基础/ ./ 关键词/ 大/ 数据/ ;/ 数据安全/ ;/ 固态/ 硬盘/ 1/ 引言/ 大/ 数据/ 时代/ 已经/ 来临/ ./ 为了/ 将/ 快速增长/ 的/ 信息/ 转换/ 为/ 价值/ ,/ 企业/ 和/ 组织/ 往往/ 将/ 各种类型/ 的/ 数据/ ,/ 包括/ 个人/ 、/ 财务/ 、/ 医疗/ 等/ 敏感/ 信息/ ,/ 整合/ 到/ 统一/ 的/ 大/ 数据系统/ ./ 这种/ 集中/ 存储/ 的/ 大量/ 敏感/ 信息/ ,/ 无疑/ 将/ 成为/ 攻击者/ 的/ 理想/ 目标/ ./ 因此/ ,/ 保护/ 大/ 数据/ 的/ 安全性/ ,/ 尤其/ 是/ 数据/ 机密性/ ,/ 是/ 一个/ 重要/ 的/ 研究课题/ ./ 在/ 典型/ 的/ 大/ 数据/ 平台/ (/ 比如/ ApacheHadoop/ )/ 中/ ,/ 海量/ 数据/ 是/ 存储/ 在/ 廉价/ 服务器/ 集群/ 中/ 各个/ 节点/ 的/ 本地/ 硬盘/ 中/ 的/ ./ 为了/ 保护/ 存储介质/ 中/ 的/ 数据/ ,/ 防止/ 敏感数据/ 泄露/ ,/ 目前/ 主要/ 使用/ 两种/ 手段/ :/ 访问控制/ 和/ 数据/ 加密/ ./ 但/ 这/ 两种/ 方法/ 都/ 各有/ 不足/ ./ 访问控制/ ,/ 通常/ 由/ 系统软件/ 实施/ ,/ 其/ 安全性/ 依赖于/ 代码/ 的/ 安全性/ 和/ 健壮性/ ./ 随着/ 系统/ 越来越/ 庞大/ 复杂/ ,/ 很难/ 保证/ 不/ 存在/ 软件/ 错误/ 或/ 安全/ 缺陷/ ,/ 即使/ 像/ Google/ 这样/ 技术/ 先进/ 的/ 公司/ 也/ 不能/ 幸免/ ①/ ./ 除了/ 软件/ 可能/ 存在/ 问题/ 外/ ,/ 企业/ 内部/ 的/ 管理员/ 也/ 可能/ 利用/ 特权/ 绕开/ 访问控制/ ,/ 窃取/ 隐私/ 数据/ ,/ 这/ 从/ 瑞士银行/ 员工/ 泄露/ 用户/ 资料/ 事件/ 可见一斑/ ②/ ./ 为了/ 弥补/ 系统软件/ 访问控制/ 的/ 不足/ ,/ 一个/ 常见/ 做法/ 是/ 数据/ 加密/ ./ 基于/ 密码学/ 的/ 方法/ 虽然/ 具有/ 更/ 高/ 的/ 安全性/ ,/ 但/ 对/ 海量/ 数据/ 加密/ 解密/ 不可避免/ 地/ 带来/ 了/ 显著/ 的/ 额外/ 开销/ ./ 以/ Hadoop/ 为例/ ,/ 其/ 在/ 设计/ 安全/ 机制/ 时/ 的/ 一大/ 考虑/ 因素/ 是/ 对/ 性能/ 的/ 影响/ (/ 不/ 超过/ 7/ %/ )/ [/ 1/ ]/ ./ 到/ 目前为止/ 最新/ 的/ 2.4/ 版本/ ,/ Hadoop/ 仍然/ 没有/ 提供/ 默认/ 的/ 加密/ 解密/ 框架/ ,/ 部分/ 原因/ 是/ 顾忌/ 加密/ 解密/ 的/ 开销/ ./ 综上所述/ ,/ 现有/ 方法/ 难以/ 在/ 保护/ 海量/ 数据/ 时/ 既/ 提供/ 较/ 高/ 的/ 机密性/ 保证/ ,/ 又/ 只/ 产生/ 可/ 忽略不计/ 的/ 额外/ 开销/ ./ 通常/ 来讲/ ,/ 服务器/ 的/ 本地/ 存储介质/ (/ 通常/ 是/ 硬盘/ )/ 可以/ 被/ 主机/ 任意/ 读写/ ,/ 因此/ 是/ 不可/ 信/ 的/ ,/ 需要/ 系统软件/ 的/ 访问控制/ 或/ 数据/ 加密/ 对/ 其/ 保护/ ;/ 但/ 理想/ 的/ 情况/ 是/ ,/ 硬盘/ 是/ 应该/ 且/ 可以/ 增加/ 安全/ 机制/ 的/ ./ 近些年/ ,/ 固态/ 硬盘/ ,/ 因/ 其/ 延迟/ 低/ 、/ 吞吐量/ 大/ 、/ 能耗/ 低/ 、/ 噪音/ 小/ ,/ 在/ 各种/ 应用/ 场景/ 正/ 逐渐/ 取代/ 传统/ 的/ 机械/ 硬盘/ ,/ 包括/ 企业/ 级服务器/ 市场/ ③/ ./ 而且/ ,/ 最近/ 的/ 一些/ 针对/ 固态/ 硬盘/ 的/ 存储/ 内/ 计算/ (/ In/ -/ StorageProcessing/ )/ 的/ 一系列/ 研究/ [/ 2/ -/ 5/ ]/ 表明/ ,/ 固态/ 硬盘/ 内有/ 充足/ 的/ 资源/ (/ 如/ CPU/ 和/ 内存/ 等/ )/ 支持/ 额外/ 的/ 功能/ ./ 基于/ 以上/ 观察/ ,/ 本文/ 提出/ 一种/ 解决/ 大/ 数据/ 平台/ 数据/ 存储/ 安全/ 的/ 新思路/ —/ —/ —/ 存储/ 内/ 安全/ (/ In/ -/ StorageSecurity/ )/ 把/ 对/ 数据/ 的/ 访问控制/ 从/ 主机/ 上/ 的/ 系统软件/ 下/ 放到/ 底层/ 存储/ 内部/ ./ 更/ 具体地说/ ,/ 我们/ 设计/ 并/ 实现/ 了/ 可信/ 固态/ 硬盘/ (/ TrustedSSD/ )/ ,/ 它/ 提供/ 安全/ 增强/ 的/ 存储设备/ 接口/ 和/ 协议/ ,/ 使得/ 用户/ 可以/ 对/ 存储/ 中/ 的/ 数据/ 施以/ 细粒度/ 的/ 访问控制/ ,/ 保护/ 存储/ 中/ 数据/ 的/ 安全性/ ./ 访问控制/ 层/ (/ AccessControlLayer/ ,/ ACL/ )/ 是/ 可信/ 固态/ 硬盘/ 的/ 安全/ 引擎/ ,/ 与/ 普通/ 固态/ 硬盘/ 具有/ 存储/ 引擎/ ,/ 即/ 闪存/ 转换/ 层/ (/ FlashTranslationLayer/ ,/ FTL/ )/ ,/ 紧密结合/ 在/ 一起/ ,/ 实现/ 高效/ 的/ 用户/ 认证/ 和/ 操作/ 授权/ ./ 结合/ 用户/ 库函数/ 和/ 操作系统/ 支持/ ,/ 可信/ 固态/ 硬盘/ 可以/ 为/ 数据/ 密集型/ 应用/ (/ 比如/ ApacheHadoop/ )/ 提供/ 安全/ 的/ 数据/ 存储/ 服务/ ./ 本/ 研究/ 的/ 主要/ 贡献/ 有/ :/ (/ 1/ )/ 我们/ 为/ 可信/ 固态/ 硬盘/ 设计/ 了/ 安全/ 增强/ 的/ 存储设备/ 接口/ 和/ 协议/ ,/ 详细分析/ 和/ 论证/ 了/ 其/ 安全性/ ,/ 展望/ 了/ 其/ 在/ 大/ 数据/ 平台/ 中/ 的/ 应用/ 前景/ (/ 见/ 第/ 3/ 节/ “/ 存储/ 内/ 安全/ ”/ )/ ./ (/ 2/ )/ 我们/ 在/ 可信/ 固态/ 硬盘/ 的/ 设计/ 与/ 实现/ 过程/ 中/ 解决/ 了/ 数项/ 技术/ 难点/ ,/ 包括/ 提高/ 硬件平台/ 的/ 基准/ 性能/ ,/ 设计/ 高效/ 的/ 访问控制/ 机制/ ,/ 修改/ 复杂/ 的/ 操作系统/ I/ // O/ 栈/ 以及/ 扩展/ 硬盘/ 接口/ (/ 见/ 第/ 4/ 节/ “/ 设计/ 与/ 实现/ ”/ )/ ./ (/ 3/ )/ 我们/ 在/ 商用/ 成功/ 的/ 固态/ 硬盘/ 控制器/ 上/ 实现/ 了/ 可信/ 固态/ 硬盘/ 的/ 原型/ 系统/ ./ 在/ 合成/ 的/ 和/ 实际/ 的/ 工作/ 负载/ 以及/ HDFS/ 上/ 测试/ 了/ 可信/ 固态/ 硬盘/ 的/ 性能/ ,/ 实验/ 结果表明/ 可信/ 固态/ 硬盘/ 的/ 安全/ 机制/ 带来/ 的/ 运行/ 开销/ 小于/ 3/ %/ (/ 见/ 第/ 5/ 节/ “/ 实验/ 结果/ ”/ )/ ./ 传统/ 的/ 观点/ 认为/ ,/ 存储/ 是/ 不可/ 信/ 的/ ,/ 大/ 数据/ 的/ 安全/ 保障/ 应该/ 由/ 系统软件/ 负责/ ./ 但/ 我们/ 在/ 可信/ 固态/ 硬盘/ 上/ 的/ 工作/ 表明/ ,/ 存储/ 不仅/ 可以/ 信任/ ,/ 而且/ 可以/ 有效/ 地/ 保障/ 数据安全/ ,/ 成为/ 大/ 数据安全/ 的/ 新/ 基础/ ./ 2/ 相关/ 工作/ 大/ 数据系统/ 的/ 研究/ 主要/ 有/ 3/ 个/ 方向/ :/ 存储/ 、/ 管理/ 和/ 分析/ [/ 6/ ]/ ./ 因而/ ,/ 其/ 安全/ 和/ 隐私/ 保护/ 也/ 可以/ 从/ 这/ 3/ 个/ 方面/ 着手/ ./ 数据分析/ 层面/ 的/ 隐私/ 保护/ 技术/ ,/ 如/ 匿名/ 化/ [/ 7/ ]/ 和/ 差分/ 隐私/ (/ DifferentialPrivacy/ )/ [/ 8/ ]/ 等/ ,/ 以及/ 数据管理/ 层面/ 的/ 安全/ 保护/ 技术/ ,/ 如/ 加密/ 数据/ 查询/ [/ 9/ ]/ 和/ lost/ -/ gmail/ -/ data/ // ,/ 2011/ -/ 02/ -/ 28/ ①/ ②/ ③/ Page3/ 可信/ 硬件/ [/ 10/ ]/ 等/ ,/ 可以/ 加强/ 大/ 数据系统/ 的/ 安全性/ 和/ 隐私/ 性/ ,/ 但/ 无法/ 完全/ 替代/ 在/ 存储/ 层面/ 的/ 安全措施/ 的/ 作用/ ./ 业界/ 对/ 系统安全/ 的/ 共识/ 是/ ,/ 没有/ 一种/ 安全措施/ 能够/ 防范/ 所有/ 安全/ 威胁/ ,/ 多层次/ 的/ 安全/ 机制/ 才能/ 最大/ 限度/ 地/ 保证/ 系统安全/ ./ 可信/ 固态/ 硬盘/ 位于/ 大/ 数据系统/ 最底层/ ,/ 即/ 存储/ 层/ ./ 本节/ 将/ 简述/ 存储/ 层面/ 的/ 各种/ 安全/ 技术/ ,/ 并/ 与/ 可信/ 固态/ 硬盘/ 做/ 比较/ ./ 目前/ ,/ 业界/ 针对/ 硬盘/ 本身/ 的/ 安全性/ 增强/ 技术/ 主要/ 有/ 两种/ :/ 全盘/ 加密/ (/ Full/ -/ DiskEncryption/ )/ ①/ 和/ 作为/ 硬盘/ 接口标准/ ATA/ 一部分/ 的/ 安全/ 特性/ 集/ [/ 11/ ]/ ./ 全盘/ 加密/ 是/ 一种/ 对/ 硬盘/ 上/ 所有/ 数据/ 的/ 、/ 对/ 用户/ 透明/ 的/ 加密技术/ ./ 全盘/ 加密/ 的/ 硬盘/ 在/ 启动/ 时会/ 要求/ 用户/ 输入/ 密码/ ,/ 密码/ 匹配/ 后/ ,/ 后续/ 的/ 读/ // 写/ 操作/ 都/ 以/ 用户/ 密码/ 对应/ 的/ 密钥/ 解密/ // 加密/ 硬盘/ 中/ 的/ 数据/ ./ 这样/ ,/ 若/ 硬盘/ 本身/ 不慎/ 丢失/ 或/ 被/ 恶意/ 窃取/ ,/ 硬盘/ 中/ 的/ 数据/ 由于/ 已/ 加密/ 就/ 不会/ 泄露/ ./ 除了/ 在/ 存储/ 中/ 做/ 数据/ 加密/ ,/ 存储/ 接口标准/ 也/ 可以/ 增强/ 安全性/ ./ 广泛/ 使用/ 的/ 存储/ 接口标准/ ATA/ 有/ 可选/ 的/ 安全/ 特性/ 集/ ,/ 能够/ 锁住/ 存储设备/ (/ 拒绝/ 任何/ 读写/ 请求/ )/ ,/ 直到/ 用户/ 用/ 密码/ 解除/ 锁定/ ./ 前述/ 的/ 全盘/ 加密/ 或/ ATA/ 安全/ 特性/ 集都/ 有助于/ 提升/ 硬盘/ 的/ 安全性/ ,/ 它/ 仍然/ 有/ 明显/ 不足/ ./ 这/ 是因为/ ,/ 这/ 两种/ 硬盘/ 保护/ 方法/ 在/ 用户/ 输入/ 完/ 密码/ 之后/ 就/ 在/ 安全性/ 方面/ 与/ 普通/ 硬盘/ 无异/ 了/ ,/ 入侵者/ 或/ 恶意程序/ 可以/ 在/ 用户/ 输入/ 密码/ 之后/ (/ 通常/ 就是/ 开机/ 之后/ )/ ,/ 窃取/ 、/ 篡改/ 或/ 删除/ 硬盘/ 中/ 数据/ ./ 此前/ ,/ 有/ 许多/ 针对/ 传统/ 硬盘/ 的/ 增强/ 安全性/ 的/ 研究/ 工作/ ,/ 但/ 它们/ 在/ 目的/ 、/ 方法/ 和/ 适用范围/ 上/ 都/ 与/ 本/ 研究/ 不同/ ./ 自/ 安全/ 存储/ (/ Self/ -/ SecuringStorage/ )/ [/ 12/ ]/ 在/ 一段时间/ 内/ 保留/ 数据/ 的/ 历史/ 版本/ ,/ 以/ 应对/ 入侵者/ 在/ 未/ 发觉/ 的/ 情况/ 下/ 篡改/ 或/ 删除/ 数据/ ./ 网络安全/ 硬盘/ (/ Network/ -/ AttachedSecureDisks/ )/ [/ 13/ ]/ 通过/ 把/ 访问控制/ 下/ 放到/ 各个/ 硬盘/ ,/ 从而/ 消除/ 了/ 在/ 传统/ 网络/ 文件系统/ 中/ 访问控制/ 完全/ 集中/ 在/ 文件/ 服务器/ 这一/ 系统/ 瓶颈/ ./ 可/ 存活/ 存储系统/ (/ SurvivableStorageSystem/ )/ [/ 14/ ]/ 把/ 一个/ 文件/ 的/ 每个/ 片段/ 打散/ 分布/ 到/ 多个/ 存储/ 节点/ ,/ 这样/ 即使/ 单个/ 存储/ 节点/ 被/ 入侵/ ,/ 也/ 可以/ 保证数据/ 的/ 隐私/ 性/ 、/ 可靠性/ 和/ 可用性/ ./ 前面/ 提到/ 的/ 硬盘/ 方面/ 的/ 研究/ 都/ 假设/ 存储设备/ 的/ 接口/ 是/ 基于/ 块/ 的/ ,/ 基于/ 块/ 的/ 接口/ 最早/ 可以/ 追溯到/ 20/ 世纪/ 50/ 年代/ ,/ 而/ 2000/ 年/ 左右/ 基于/ 对象/ 的/ 存储设备/ 接口/ 开始/ 得到/ 产业界/ 和/ 学术界/ 的/ 兴趣/ ,/ 继而/ 产生/ 了/ 一种/ 新/ 的/ 存储/ 类型/ ,/ 即/ 对象/ 存储/ (/ ObjectStorage/ )/ [/ 15/ ]/ ./ 就/ 本文/ 所/ 关注/ 的/ 安全/ 方面/ 而言/ ,/ 对象/ 存储/ 的/ 最大/ 优点/ 是/ 以/ 对象/ 为/ 单元/ 的/ 访问控制/ ./ 虽然/ 对象/ 存储/ 的/ 思想/ 被/ 广泛/ 接受/ ,/ 比如/ GoogleFileSystem/ 中/ 文件/ 元/ 数据/ 和/ 文件/ 数据/ 块/ 的/ 分开/ 存储/ 的/ 架构/ [/ 16/ ]/ ,/ 再/ 如/ AmazonWebServiceS3/ ②/ 的/ 基于/ 对象/ 的/ 存储/ 接口/ ,/ 但/ 在/ 硬盘/ 层面/ 基于/ 对象/ 的/ 接口/ 仅/ 停留/ 在/ 标准化/ 阶段/ [/ 17/ ]/ ,/ 没有/ 大规模/ 产品化/ ,/ 而/ 基于/ 块/ 的/ 接口/ 仍然/ 是/ 硬盘/ 设备/ 的/ 绝对/ 主流/ ./ 可信/ 固态/ 硬盘/ 在/ 保持/ 块/ 接口/ 的/ 前提/ 下/ 实现/ 了/ 数据/ 的/ 细粒度/ 访问控制/ ./ 无论是/ 分布式文件系统/ GoogleFileSystem/ ,/ 还是/ 云/ 存储系统/ AmazonWebServiceS3/ ,/ 这些/ 借鉴/ 了/ 对象/ 存储/ 思想/ 的/ 大/ 数据系统/ 均/ 可以/ 通过/ 采用/ 更/ 安全/ 的/ 底层/ 存储设备/ ,/ 如/ 可信/ 固态/ 硬盘/ ,/ 来/ 提高/ 系统/ 整体/ 的/ 安全性/ ./ 最近/ 几年/ ,/ 有/ 不少/ 研究/ 工作/ 探索/ 如何/ 为/ 固态/ 硬盘/ 增加/ 额外/ 的/ 功能/ ./ 文献/ [/ 2/ ]/ 在/ 固态/ 硬盘/ 内/ 增加/ 硬件/ 逻辑/ 以/ 更/ 高效/ 地/ 处理/ 数据/ 扫描/ 操作/ ./ 文献/ [/ 3/ ]/ 研究/ 把/ 关系/ 型/ 数据库/ 的/ 部分/ 运算/ 下推/ 到/ 固态/ 硬盘/ 内部/ 完成/ ./ 文献/ [/ 4/ ]/ 扩展/ 了/ Hadoop/ ,/ 使得/ 部分/ Map/ 任务/ 可以/ 在/ 固态/ 硬盘/ 内部/ 完成/ ./ 文献/ [/ 5/ ]/ 提出/ 了/ 事务/ 型/ 闪存/ 转换/ 层/ (/ TransactionFTL/ )/ ,/ 把/ SQLite/ 保证/ 事务/ 原子/ 性/ (/ TransactionAtomicity/ )/ 的/ 功能/ 放到/ 了/ 固态/ 硬盘/ 中/ ./ 与/ 上述/ 针对/ 固态/ 盘/ 的/ 存储/ 内/ 处理/ (/ In/ -/ StorageProcessing/ )/ 的/ 研究/ 工作/ 不同/ 的/ 是/ ,/ 可信/ 固态/ 盘/ 是/ 一种/ 存储/ 内/ 安全/ (/ In/ -/ StorageSecurity/ )/ 的/ 尝试/ ./ 伴随/ 着/ 闪存/ 技术/ 的/ 不断/ 成熟/ ,/ 固态/ 硬盘/ 得到/ 了/ 市场/ 越来越/ 广泛/ 的/ 接受/ ,/ 与其/ 有关/ 的/ 安全/ 方面/ 的/ 问题/ 也/ 引起/ 了/ 学术界/ 的/ 兴趣/ ./ 文献/ [/ 18/ ]/ 研究/ 了/ 固态/ 硬盘/ 特有/ 的/ 闪存/ 转换/ 层/ (/ FlashTranslationLayer/ )/ 对/ 实现/ 可靠/ 擦除/ (/ ReliableErasing/ )/ 的/ 挑战/ ./ 文献/ [/ 19/ ]/ 探讨/ 了/ 闪存/ 单元/ 的/ 允许/ 操作/ 次数/ 有限/ 而/ 带来/ 的/ 安全/ 风险/ (/ 如/ 拒绝服务/ 攻击/ )/ ./ 与/ 上述/ 研究/ 不同/ 的/ 是/ ,/ 本/ 研究/ 的/ 焦点/ 是/ 固态/ 硬盘/ 层面/ 的/ 访问控制/ ./ 从/ 思路/ 上/ 看/ ,/ 与/ 本/ 研究/ 最/ 接近/ 的/ 是/ Butler/ 等/ 人/ [/ 20/ -/ 21/ ]/ 的/ 工作/ ,/ 其中/ 也/ 涉及/ 了/ 基于/ 闪存/ 的/ 硬盘/ 访问控制/ 机制/ ,/ 但/ Bulter/ 等/ 人/ 的/ 工作/ 仅/ 停留/ 在/ 框架/ 性/ 描述/ 的/ 层面/ ,/ 缺乏/ 接口协议/ 的/ 完整/ 分析/ 、/ 系统/ 实现/ 的/ 详细/ 讨论/ ,/ 和/ 实验/ 数据/ 的/ 有效/ 支撑/ ./ 而/ 这些/ 正是/ 本/ 研究/ 工作/ 的/ 主要/ 贡献/ ./ 3/ 存储/ 内/ 安全/ 存储/ 内/ 安全/ (/ In/ -/ storageSecurity/ )/ 是/ 指/ 一种/ 在/ ①/ ②/ Page4/ 存储设备/ 内部/ 实现/ 安全/ 机制/ 的/ 做法/ ./ 安全/ 界/ 的/ 一项/ 共识/ 是/ ,/ 没有/ 一种/ 安全措施/ 能够/ 防范/ 所有/ 安全/ 威胁/ ,/ 多层次/ 的/ 安全/ 机制/ 才能/ 最大/ 限度/ 地/ 保证/ 系统安全/ ./ 传统/ 上/ ,/ 普通/ 存储介质/ (/ 如/ 硬盘/ )/ 被/ 认为/ 是/ 不可/ 信任/ 的/ ;/ 而/ 本文/ 认为/ ,/ 存储介质/ 的/ 不可/ 信/ 正是/ 大/ 数据安全/ 的/ 缺失/ 环节/ ./ 存储/ 内/ 安全/ 可以/ 有效/ 地/ 增强/ 存储/ 中/ 数据/ 的/ 安全性/ ./ 本文/ 主要/ 关注/ 于/ 利用/ 可信/ 固态/ 硬盘/ 保护/ 存储/ 中/ 数据/ 的/ 机密性/ ./ 本节/ 首先/ 介绍/ 可信/ 固态/ 硬盘/ 应对/ 的/ 安全/ 威胁/ ,/ 然后/ 讨论/ 如何/ 设计/ 可信/ 固态/ 硬盘/ 的/ 接口/ 和/ 协议/ 以/ 有效/ 地/ 保证数据/ 机密性/ ,/ 最后/ 以/ Hadoop/ 为例/ 说明/ 可信/ 固态/ 硬盘/ 在/ 大/ 数据/ 平台/ 中/ 的/ 应用/ ./ 3.1/ 安全/ 威胁/ 假设/ 攻击者/ :/ (/ 1/ )/ 可以/ 获得/ 主机/ 的/ 特权/ ./ 他们/ 既/ 可能/ 是/ 恶意/ 的/ 外部/ 入侵者/ ,/ 也/ 可能/ 是/ 好奇/ 的/ 内部/ 管理员/ ./ 他们/ 可能/ 在/ 服务器/ 上/ 运行/ 恶意程序/ 直接/ 读取数据/ 文件/ ,/ 也/ 可能/ 修改/ 操作系统/ 或/ 数据库/ 管理系统/ 的/ 权限/ ./ 无论/ 手段/ 如何/ ,/ 结果/ 都/ 是/ 他们/ 可以/ 成功/ 地/ 绕开/ 所有/ 系统软件/ 对/ 存储/ 中/ 数据/ 的/ 访问控制/ ./ (/ 2/ )/ 企图/ 获取/ 存储/ 中/ 的/ 敏感数据/ ,/ 但/ 对/ 篡改/ 或/ 销毁/ 数据/ 并/ 不感兴趣/ ./ 作者/ 认为/ 这个/ 假设/ 是/ 比较/ 符合实际/ 的/ ,/ 因为/ 读取数据/ 很难/ 被/ 检测/ 到/ ,/ 而/ 篡改/ 或/ 删除/ 数据/ 相对/ 容易/ 被/ 发现/ ,/ 作案/ 风险/ 大/ 、/ 利益/ 小/ ./ (/ 3/ )/ 只能/ 通过/ 定义/ 良好/ 接口/ 访问/ 存储/ 中/ 的/ 数据/ ,/ 即/ 假设/ 攻击者/ 不能/ 物理攻击/ (/ 比如/ 盗窃/ 或/ 拆解/ )/ ./ 可信/ 固态/ 硬盘/ 主要/ 是/ 用作/ 集群/ 中/ 数据/ 节点/ 上/ 的/ 直连/ 存储设备/ ,/ 通过/ 常见/ 的/ 存储/ 接口/ (/ SCSI/ 、/ SATA/ 和/ SAS/ 等/ )/ 与/ 主机/ 连接/ ./ 这个/ 定义/ 良好/ 的/ 存储/ 接口/ 是/ 存储/ 与/ 主机/ 交互/ 的/ 唯一/ 途径/ ,/ 也/ 是/ 对/ 存储设备/ 的/ 唯一/ 攻击面/ (/ AttackSurface/ )/ ./ (/ 4/ )/ 攻击者/ 无法/ 篡改/ 可信/ 固态/ 硬盘/ 的/ 固件/ 程序/ (/ Firmware/ )/ ,/ 因为/ 固件/ 程序/ 是/ 受到/ 保护/ 的/ ./ 一个/ 比较/ 理想/ 的/ 保护方式/ 是/ ,/ 可信/ 固态/ 硬盘/ 的/ 新/ 固件/ 必须/ 在/ 能/ 被/ 验证/ 是/ 合法/ 的/ (/ 比如/ 有/ 生产厂家/ 数字签名/ )/ 之后/ 才能/ 替换/ 原来/ 的/ 固件/ ./ 另/ 一个/ 可能/ 的/ 方式/ 是/ ,/ 由/ 可信/ 固态/ 硬盘/ 上/ 的/ 一个/ 物理/ 开关/ 决定/ 固件/ 是否/ 处于/ 可/ 更新/ 的/ 状态/ ./ 可信/ 固态/ 硬盘/ 的/ 原型/ 系统/ 采用/ 了/ 第/ 2/ 种/ 方式/ ./ 由于/ 攻击者/ 不能/ 物理/ 接触/ 可信/ 固态/ 硬盘/ ,/ 也/ 就/ 无法/ 篡改/ 固件/ ./ 3.2/ 安全/ 协议/ 本/ 小节/ 讨论/ 如何/ 设计/ 一个/ 安全/ 增强/ 的/ 存储/ 接口/ 和/ 协议/ ,/ 使得/ 在/ 不可/ 信/ 的/ 主机/ 上/ 对/ 存储/ 安全/ 地/ 访问/ 成为/ 可能/ ./ 可信/ 固态/ 硬盘/ 的/ 接口/ 是/ 主机/ 与/ 它/ 交互/ 的/ 唯一/ 途径/ ;/ 主机/ 必须/ 按照/ 这个/ 接口/ 的/ 协议/ 、/ 通过/ 发送/ 合法/ 命令/ ,/ 才能/ 读取/ 或/ 改变/ 存储/ 内部/ 的/ 状态/ ./ 我们/ 希望/ 扩展/ 普通/ 的/ 存储/ 接口/ ,/ 使/ 其/ 具备/ 用户/ 验证/ 、/ 操作/ 授权/ 等/ 功能/ ,/ 成为/ 一个/ 安全/ 增强/ 的/ 存储/ 接口/ ./ 然而/ ,/ 设计/ 安全/ 增强/ 的/ 存储/ 接口/ 和/ 协议/ 是/ 有/ 多重/ 挑战/ 的/ ./ 首先/ ,/ 攻击者/ 可以/ 监听/ 主机/ 和/ 存储/ 之间/ 的/ 所有/ 交互/ ;/ 重/ 放/ 攻击/ (/ Replayattack/ )/ 、/ 伪装/ 攻击/ (/ Impersonationattack/ )/ 和/ 中间人/ 攻击/ (/ Man/ -/ in/ -/ the/ -/ middleattack/ )/ 等/ 各种/ 攻击/ 都/ 是/ 可能/ 的/ ./ 其次/ ,/ 存储器/ 每秒钟/ 处理/ 的/ I/ // O/ 操作数/ 可以/ 高达/ 10000/ ,/ 而/ 其/ 内部/ 的/ 计算资源/ 有限/ ,/ 因此/ 协议/ 对/ 每个/ I/ // O/ 操作/ 的/ 验证/ 授权/ 开销/ 必须/ 很小/ ./ 最后/ ,/ 安全/ 增强/ 的/ 存储/ 协议/ 必须/ 与/ 原有/ 的/ 软硬件/ 接口/ 尽量/ 兼容/ ,/ 使得/ 驱动程序/ 的/ 改动/ 尽可能/ 的/ 小/ ,/ 并且/ 不/ 需要/ 任何/ 硬件/ 上/ 的/ 改动/ ./ 最终/ 设计/ 出来/ 的/ 可信/ 固态/ 硬盘/ 的/ 安全/ 增强/ 的/ 接口/ 和/ 协议/ 的/ 概况/ 如图/ 1/ 所示/ ./ 用户/ 对/ 存储/ 的/ 访问/ 分/ 两个/ 阶段/ :/ 第/ 1/ 阶段/ ,/ 身份验证/ ./ 这个/ 阶段/ 的/ 目的/ 是/ 认证/ 用户/ 身份/ ,/ 并/ 建立/ 会话/ ./ 每个/ 用户/ 都/ 有/ 一个/ ID/ (/ uid/ )/ 和/ 密钥/ (/ pkey/ )/ ,/ 在/ 用户/ 向/ 可信/ 固态/ 硬盘/ 注册/ 账号/ 的/ 时候/ 完成/ 分配/ ;/ 用户/ ID/ 是/ 公开/ 的/ ,/ 但/ 用户/ 密钥/ 只/ 由/ 用户/ 和/ 可信/ 固态/ 硬盘/ (/ 图/ 1/ (/ a/ )/ 中/ 的/ 用户/ 表/ )/ 掌握/ ./ 用户/ 的/ 身份验证/ 采用/ 密码学/ 的/ 经典/ 方法/ —/ —/ —/ 挑战/ -/ 应答/ 协议/ (/ 如图/ 1/ (/ b/ )/ )/ ./ 挑战/ -/ 应答/ 协议/ ,/ 简单/ 地说/ ,/ 就是/ 通过/ 让/ 用户/ 使用/ 他/ 的/ 密钥/ 加密/ 一个/ 随机数/ 来/ 证明/ 它/ 拥有/ 这个/ 密钥/ 的/ 事实/ ,/ 从而/ 让/ 服务/ 方/ 可以/ 认证/ 用户/ 的/ 身份/ ./ 完成/ 上述/ 身份验证/ 之后/ ,/ 用户/ 和/ 可信/ 固态/ 硬盘/ 之间/ 建立/ 起/ 了/ 一个/ 会话/ ,/ 用户/ 和/ 可信/ 固态/ 硬盘/ (/ 图/ 1/ (/ a/ )/ 中/ 的/ 会话表/ )/ 都/ 拥有/ 这个/ 会话/ 的/ 密钥/ ./ 第/ 2/ 阶段/ ,/ 授权/ 读写/ ./ 用户/ 凭借/ 会话/ 密钥/ 进行/ 读写操作/ ,/ 可信/ 固态/ 硬盘/ 只/ 授权/ 合法/ 的/ 读写操作/ ./ 普通/ 的/ 块/ 设备/ 的/ 读写操作/ ,/ 逻辑/ 上/ 可以/ 简化/ 地/ 看成/ 调用/ read/ (/ lpn/ ,/ num/ _/ sectors/ )/ 和/ write/ (/ lpn/ ,/ num/ _/ sectors/ ,/ data/ )/ 两个/ 函数/ ,/ 其中/ lpn/ 是/ 逻辑/ 页/ 地址/ (/ LogicalPageNumber/ )/ ,/ num/ _/ sectors/ 是/ 读写/ 的/ 扇区/ 数目/ ,/ 一个/ 逻辑/ 页/ 包含/ 数个/ 扇区/ (/ 比如/ 8/ 个/ )/ ,/ 一个/ 扇区/ 的/ 大小/ 是/ 512/ 字节/ ./ 为了/ 验证/ 读写操作/ 的/ 合法性/ ,/ 可信/ 固态/ 硬盘/ 为/ read/ 和/ write/ 扩充/ 了/ 两个/ 可/ 选/ 参数/ (/ 如图/ 1/ (/ b/ )/ )/ ,/ 会话/ ID/ (/ sid/ )/ 和/ 操作/ 令牌/ (/ token/ )/ ,/ 前者/ 是/ Page5/ 图/ 1/ 可信/ 固态/ 硬盘/ 的/ 安全/ 机制/ (/ 图/ 1/ (/ a/ )/ 中方/ 角/ 和/ 圆角/ 方框/ 分别/ 表示/ 模块/ 和/ 元/ 数据/ ;/ 灰色/ 的/ 方框/ 表示/ 与/ 安全/ 相关/ ;/ 圆角/ 方框/ 中/ 的/ 数值/ 表示/ 图/ 1/ (/ b/ )/ 所示/ 的/ 交互/ 完成/ 时/ 的/ 状态/ ./ 图/ 1/ (/ a/ )/ 中/ 的/ lpn/ 、/ ppn/ 、/ uid/ 、/ pkey/ 、/ rw/ 、/ sid/ 和/ skey/ 分别/ 表示/ 逻辑/ 页/ 地址/ 、/ 物理/ 页/ 地址/ 、/ 用户/ ID/ 、/ 用户/ 密钥/ 、/ 读写/ 权限/ 、/ 会话/ ID/ 和/ 会/ 话/ 密钥/ ./ 图/ 1/ (/ b/ )/ 中/ (/ 不/ 在/ 图/ 1/ (/ a/ )/ 中/ )/ 的/ lpn/ 、/ pkeys/ 、/ num/ _/ sectors/ 、/ rnd/ 、/ Epkey/ 和/ token/ 分别/ 表示/ 起始/ 逻辑/ 页/ 地址/ 、/ 用户/ 表/ 、/ 读/ // 写/ 扇区/ 数/ 、/ 随机数/ 、/ 对称/ 加密算法/ 和/ 操作/ 令牌/ )/ 公开/ 的/ ,/ 后者/ 是/ 根据/ 会话/ 密钥/ 生成/ (/ 生成/ 规则/ 见/ 下/ 一/ 小节/ “/ 安全/ 分析/ ”/ )/ ./ 可信/ 固态/ 硬盘/ 在/ 接收/ 到/ 读写/ 命令/ 后/ ,/ 根据/ 会话/ ID/ 和/ 操作/ 令牌/ 检查/ 操作/ 是否/ 属于/ 一个/ 合法/ 的/ 会/ 话/ ,/ 如果/ 不/ 合法/ ,/ 则/ 拒绝执行/ ;/ 如果/ 合法/ ,/ 则/ 用会/ 话表/ (/ 见图/ 1/ (/ a/ )/ )/ 查出/ 发出/ 这个/ 操作/ 的/ 用户/ ID/ ./ 对于/ 合法/ 的/ 写/ 操作/ ,/ 页/ 权限/ 表中/ 把/ 涉及/ 到/ 的/ 页/ 标记/ 成/ 属于/ 这个/ 用户/ ;/ 对于/ 合法/ 的/ 读/ 操作/ ,/ 则/ 检查/ 涉及/ 到/ 的/ 页/ 是否/ 全都/ 属于/ 这个/ 用户/ ,/ 如果/ 是/ ,/ 则/ 继续执行/ 这个/ 读/ 操作/ ;/ 否则/ ,/ 拒绝执行/ ./ 如上所述/ 的/ 根据/ 操作/ 用户/ 是否/ 为/ 扇区/ 拥有者/ 来/ 决定/ 扇区/ 是否/ 可以/ 访问/ 是/ 最/ 基本/ 的/ 访问/ 控制策略/ ./ 为了/ 允许/ 数据/ 更/ 大程度/ 的/ 共享/ ,/ 还有/ 多种/ 方法/ 可以/ 扩展/ 上述/ 访问/ 控制策略/ ./ 比如/ ,/ 维护/ 扇区/ 的/ 读写/ 权限/ (/ 图/ 1/ (/ a/ )/ 中/ 权限/ 表/ 的/ rw/ 字段/ ,/ 长度/ 是/ 2/ 个/ bit/ )/ :/ 当/ rw/ =/ 00/ 时/ ,/ 表示/ 只有/ 扇区/ 拥有者/ 可以/ 读写/ ;/ 当/ rw/ =/ 10/ 时/ ,/ 表示/ 其他/ 用户/ 也/ 可读/ ,/ 但/ 不可/ 写/ ;/ 当/ rw/ =/ 01/ 时/ ,/ 表示/ 其他/ 用户/ 可以/ 写/ ,/ 但/ 不可/ 读/ ;/ 而/ 当/ rw/ =/ 11/ 时/ ,/ 表示/ 所有/ 用户/ 都/ 可以/ 读写/ ,/ 相当于/ 没有/ 任何/ 访问控制/ ./ 除了/ 读写/ 权限/ 外/ ,/ 增加/ 用户组/ 的/ 概念/ 也/ 是/ 一种/ 可能性/ ,/ 类似/ 于/ UNIX/ 文件系统/ 的/ 访问/ 控制策略/ ,/ 这里/ 不再/ 赘述/ ./ 可信/ 固态/ 硬盘/ 的/ 访问控制/ 完全/ 与/ 普通/ 硬盘/ 的/ 使用/ 模式/ 兼容/ ./ 当/ 接收/ 到/ 普通/ 读写/ 命令/ ,/ 其会话/ ID/ 和/ 操作/ 令牌/ 等/ 参数/ 都/ 是/ 空/ ,/ 可信/ 固态/ 硬盘/ 会/ 认为/ 这种/ 读写/ 命令/ 来自/ 公共/ 用户/ (/ uid/ =/ 0/ )/ ./ 权限/ 表/ 的/ 用户/ ID/ 字段/ uid/ 的/ 初始值/ 都/ 是/ 0/ ,/ 读写/ 权限/ 字段/ rw/ 为/ 11/ ,/ 也就是说/ 所有/ 扇区/ 默认/ 属于/ 公共/ 用户/ ,/ 且/ 可以/ 被/ 任意/ 读写/ ./ 私有/ 用户/ (/ uid/ ≠/ 0/ )/ 可以/ 任意/ 读写/ 公共/ 用户/ 的/ 扇区/ ,/ 而/ 私有/ 用户/ 的/ 扇区/ 受到/ 访问控制/ 机制/ 的/ 保护/ ./ 3.3/ 安全/ 分析/ 采用/ 基于/ 会话/ 的/ 安全/ 机制/ 是/ 出于/ 两/ 方面/ 的/ 考虑/ ./ 一方面/ ,/ 大/ 数据/ 应用/ 的/ 数据处理/ 模式/ 往往/ 是/ 把/ 计算/ 任务/ 发送到/ 数据源/ (/ 在/ ApacheHadoop/ 中是/ Map/ // Reduce/ 任务/ 发到/ 数据/ 节点/ )/ ./ 计算/ 任务/ 为了/ 合法/ 地/ 读取/ 可信/ 固态/ 硬盘/ 中/ 的/ 数据/ 必然/ 需要/ 某种/ 凭证/ (/ 在/ 不可/ 信/ 主机/ 上/ )/ ,/ 如果/ 凭证/ 是/ 用户/ 密钥/ ,/ 则/ 一旦/ 丢失/ ,/ 危害/ 很大/ ;/ 如果/ 凭证/ 是/ 会/ 话/ 密钥/ ,/ 即使/ 被/ 窃取/ ,/ 攻击者/ 也/ 仅/ 能/ 在/ 相对/ 短暂/ 的/ 会/ 话/ 期间/ 内/ 冒充/ 合法/ 用户/ ./ 另一方面/ ,/ 密钥/ 越长/ 安全性/ 越/ 好/ ,/ 但/ 各种/ 密码学/ 操作/ 的/ 开销/ 越大/ ./ 把/ 验证/ 身份/ 的/ 密钥/ (/ 用户/ 密钥/ ,/ 使用/ 频率/ 低/ )/ 和/ 授权/ 读写操作/ 的/ 密钥/ (/ 会话/ 密钥/ ,/ 使用/ 频率/ 高/ )/ 区分/ 开/ ,/ 前者/ 使用/ 长/ 位数/ (/ 比如/ 128/ 个/ 比特/ )/ ,/ 后者/ 使用/ 短/ 位数/ (/ 比如/ 32/ 个/ 比特/ )/ ,/ 可以/ 在/ 保证/ Page6/ 安全性/ 的/ 前提/ 下/ ,/ 把/ 开销/ 降到/ 最低/ ./ 为了/ 防止/ 短/ 位数/ 的/ 会/ 话/ 密钥/ 被/ 暴力破解/ ,/ 可信/ 固态/ 硬盘/ 一旦/ 发现/ 读写操作/ 的/ 会/ 话/ 密钥/ 不/ 合法/ ,/ 则/ 终止/ 会话/ ./ 会话/ 建立/ 是/ 在/ 身份验证/ 阶段/ ./ 这里/ 采用/ 了/ 挑战/ -/ 应答/ 协议/ ,/ 一种/ 经典/ 的/ 密码学/ 身份验证/ 方法/ ,/ 其/ 安全性/ 得到/ 了/ 广泛/ 的/ 研究/ ./ 挑战/ -/ 应答/ 协议/ 保证/ 了/ 身份验证/ 的/ 安全性/ ,/ 因为/ :/ (/ 1/ )/ 用户/ 密钥/ 没有/ 被/ 明文/ 传输/ ,/ 不会/ 被/ 泄露/ ;/ (/ 2/ )/ 每次/ 用户/ 认证/ 的/ 应答/ 由/ 随机数/ 决定/ ,/ 不/ 受重/ 放/ 攻击/ 影响/ ;/ (/ 3/ )/ 会话/ 密钥/ 是/ 加密/ 的/ ,/ 并/ 只有/ 用户/ 可以/ 解密/ ./ 这样/ ,/ 身份验证/ 阶段/ 结束/ 时/ ,/ 只有/ 用户/ 和/ 可信/ 固态/ 硬盘/ 了解/ 会话/ 密钥/ ,/ 保证/ 了/ 读写操作/ 可以/ 在/ 会/ 话/ 中/ 安全/ 地/ 进行/ ./ 会话/ 建立/ 之后/ 就/ 进入/ 授权/ 读写/ 阶段/ ./ 读写操作/ 的/ 验证/ ,/ 是/ 以/ 其/ 附带/ 的/ 操作/ 令牌/ (/ token/ )/ 为/ 依据/ 的/ ./ 一个/ 最/ 直接/ 的/ 设计/ 是/ 把/ 会/ 话/ 密钥/ 作为/ 令牌/ ,/ 只要/ 查找/ 会话表/ (/ 图/ 1/ (/ a/ )/ )/ 就/ 可以/ 验证/ 操作/ 附带/ 的/ 会/ 话/ 密钥/ 是否/ 正确/ ,/ 从而/ 完成/ 操作/ 的/ 验证/ ./ 但/ 这样/ 并/ 不/ 安全/ ,/ 因为/ 任何/ 可以/ 监听/ 用户/ 进程/ 与/ 可信/ 固态/ 硬盘/ 交互/ 的/ 进程/ 都/ 可以/ 窃取/ 会话/ 密钥/ ,/ 从而/ 利用/ 会话/ 密钥/ 冒充/ 合法/ 用户/ ./ 最终/ 的/ 设计/ 是/ 令/ 操作/ 令牌/ token/ =/ MACskey/ (/ lpn/ ,/ num/ _/ sectors/ ,/ sid/ )/ 即/ 操作/ 令牌/ 是/ 用户/ 操作命令/ 的/ 消息/ 认证码/ (/ MessageAuthenticationCode/ ,/ MAC/ )/ ./ 这样/ 有/ 3/ 个/ 好处/ :/ (/ 1/ )/ 由于/ 操作/ 令牌/ 的/ 计算/ 需要/ 会话/ 密钥/ (/ skey/ )/ ,/ 因此/ 只有/ 合法/ 用户/ 的/ 操作/ 才/ 有/ 合法/ 的/ 令牌/ ;/ (/ 2/ )/ 根据/ 消息/ 认证码/ 的/ 性质/ ,/ 攻击者/ 是/ 无法/ 通过/ 令牌/ 的/ 值/ 推测/ 出会话/ 密钥/ 的/ 值/ 的/ ;/ (/ 3/ )/ 攻击者/ 无法/ 篡改/ 用户/ 发出/ 的/ 合法/ 命令/ ./ 从/ 上面/ 的/ 分析/ 可以/ 看出/ ,/ 可信/ 固态/ 硬盘/ 的/ 安全/ 协议/ 保证/ 只有/ 合法/ 用户/ 才能/ 被/ 授权/ 执行/ 的/ 合法/ 操图/ 2/ 基于/ 可信/ 固态/ 硬盘/ 的/ 安全/ 增强型/ HDFS/ 作/ ,/ 并且/ 在/ 这个/ 过程/ 中/ 不/ 泄露/ 任何/ 用户/ 密钥/ 的/ 信息/ ,/ 即使/ 攻击者/ (/ 如/ 拥有/ 特权/ 的/ 外部/ 黑客/ 者/ 或/ 内部/ 管理员/ )/ 可以/ 监听/ 所有/ 操作/ ./ 即使/ 设计/ 再/ 周全/ ,/ 如果/ 实现/ 有/ 漏洞/ ,/ 那么/ 最终/ 系统/ 也/ 是/ 不/ 安全/ 的/ ./ 虽然/ 可信/ 固态/ 硬盘/ 中/ 的/ 固件/ 程序/ 也/ 具有/ 相当/ 的/ 复杂性/ (/ 约/ 1/ 万行/ C/ 代码/ )/ ,/ 但/ 相比/ 操作系统/ (/ Linux/ 的/ 源代码/ 有/ 约/ 1500/ 万行/ )/ 和/ 关系/ 型/ 数据/ 管理系统/ 库/ (/ MySQL/ 的/ 源代码/ 有/ 约/ 150/ 万行/ )/ ,/ 可信/ 固态/ 硬盘/ 中/ 的/ 固件/ 程序/ 出现/ 软件/ 错误/ 或/ 安全漏洞/ 的/ 可能性/ 大大/ 低于/ 这些/ 大型/ 系统软件/ ./ 较/ 小/ 的/ 代码/ 量/ 使得/ 深入/ 的/ 代码/ 检查/ ,/ 或/ 形式/ 验证/ (/ FormalVerification/ )/ 更/ 可行/ [/ 22/ ]/ ./ 除了/ 担忧/ 固件/ 程序/ 的/ 正确性/ 外/ ,/ 用户/ 可能/ 还/ 对/ 信任/ 可信/ 固态/ 硬盘/ 的/ 厂商/ 有/ 疑虑/ ./ 这方面/ 可以/ 效法/ 密码/ 协处理器/ 的/ 做法/ ,/ 由/ 可信/ 权威/ 的/ 第三方/ 机构/ 评估/ 产品/ 的/ 安全性/ ,/ 并/ 对/ 合格/ 的/ 产品/ 授予/ 证书/ [/ 23/ ]/ ,/ 打消/ 或/ 缓解/ 用户/ 的/ 疑虑/ ./ 综上所述/ ,/ 可信/ 固态/ 硬盘/ 为/ 数据/ 提供/ 安全/ 、/ 有效/ 和/ 可靠/ 的/ 隐私/ 性/ 保护/ ,/ 有望/ 成为/ 大/ 数据安全/ 的/ 新/ 基础/ ./ 3.4/ 应用/ 举例/ 本/ 小节/ 以/ HDFS/ (/ HadoopDistributedFileSystem/ )/ 为/ 例子/ 简要/ 介绍/ 可信/ 固态/ 硬盘/ 如何/ 提高/ 大/ 数据系统/ 的/ 数据/ 安全性/ ./ HDFS/ 的/ 现有/ 安全/ 机制/ 需要/ 名字/ 节点/ 和/ 数据/ 节点/ 协作/ 保证/ (/ 如图/ 2/ 左边/ )/ ./ 名字/ 节点/ 首先/ 验证/ HDFS/ 客户端/ 发来/ 的/ 文件/ 操作/ (/ 比如/ 读/ 操作/ )/ 是否/ 来自/ 一个/ 权限/ 足够/ 的/ 用户/ ./ 核实/ 用户/ 身份/ 的/ 凭证/ 是/ 其/ 提供/ 的/ 代理/ 令牌/ (/ Delegationtoken/ )/ ./ 如果/ 用户/ 合法/ 、/ 权限/ 足够/ ,/ 则/ 把/ 操作/ 所要/ 块/ 的/ 块/ 令牌/ (/ Blocktoken/ )/ 返回/ 给/ 客户端/ ,/ 这个/ 块/ 令牌/ 是/ 加密/ 过/ 的/ ,/ 无法/ Page7/ 伪造/ ,/ 且/ 过期/ 即/ 失效/ ./ 随后/ 客户端/ 向/ 数据/ 节点/ 调用/ 块/ 操作/ 时/ ,/ 会/ 把/ 块/ 令牌/ 也/ 发送给/ 数据/ 节点/ ,/ 后者/ 检查/ 块/ 令牌/ 的/ 合法性/ ./ 如果/ 合法/ ,/ 才/ 授权/ 客户端/ 的/ 块/ 操作/ ./ 以上/ 就是/ HDFS/ 访问控制/ 的/ 基本原理/ ./ 但/ 上面/ 的/ 访问控制/ 是/ 有/ 不足/ 的/ ./ HDFS/ 块/ 是/ 在/ 数据/ 节点/ 上以/ 文件/ 的/ 方式/ 存放/ 的/ ./ 这/ 意味/ 数据/ 节点/ 的/ 内部/ 管理员/ 或/ 获得/ 特权/ 的/ 外部/ 攻击者/ ,/ 可以/ 绕开/ 上述/ 的/ HDFS/ 访问控制/ 机制/ ,/ 直接/ 读取/ 块/ 所在/ 的/ 文件/ ./ 可信/ 固态/ 硬盘/ 可以/ 防止/ 这种/ 情况/ 发生/ ./ 用户/ 的/ 可信/ 固态/ 硬盘/ 秘钥/ 可以/ 存储/ 在/ 名字/ 节点/ (/ 认为/ 是/ 可信/ 的/ )/ ,/ 当/ 他/ 需要/ 读取/ 受/ 可信/ 固态/ 硬盘/ 保护/ 的/ HDFS/ 块/ 时/ ,/ 按照/ 3.2/ 和/ 3.3/ 小节/ 所/ 描述/ 的/ 协议/ 完成/ 身份验证/ 和/ 操作/ 授权/ 即可/ (/ 如图/ 2/ 右边/ )/ ;/ 即使/ 是/ 拥有/ 特权/ 的/ 攻击者/ ,/ 没有/ 用户/ 的/ 可信/ 固态/ 硬盘/ 秘钥/ ,/ 也/ 无法/ 从/ 可信/ 固态/ 硬盘/ 中/ 非法/ 读取数据/ ./ 4/ 设计/ 与/ 实现/ 可信/ 固态/ 硬盘/ 的/ 原型/ 系统/ 主要/ 包括/ 固态/ 硬盘/ 的/ 固件/ 程序/ 、/ 操作系统/ 的/ 修改/ 和/ 用户/ 库函数/ 3/ 个/ 部分/ ./ 在/ 设计/ 和/ 实现/ 原型/ 系统/ 的/ 过程/ 中/ ,/ 本/ 工作/ 主要/ 解决/ 了/ 4/ 个/ 挑战/ :/ (/ 1/ )/ 提高/ 固态/ 硬盘/ 的/ 基准/ 性能/ ./ 可信/ 固态/ 硬盘/ 是/ 基于/ OpenSSDJasmine/ 平台/ ①/ 开发/ ,/ 而/ 后者/ 已有/ 的/ 开源/ 固件/ 实现/ 的/ 是/ 普通/ 的/ 页/ 映射/ 闪存/ 转换/ 层/ ,/ 存在/ 写/ 放大/ (/ Writeamplification/ )/ 、/ 并行/ 不/ 充分/ 等/ 问题/ ,/ 因而/ 性能/ 不佳/ ./ (/ 2/ )/ 设计/ 高效/ 的/ 访问控制/ 机制/ ./ 块/ 设备/ 最小/ 的/ 读写/ 单元/ 是/ 扇区/ (/ 512/ 个/ 字节/ )/ ,/ 因此/ 访问控制/ 应/ 精确/ 到/ 扇区/ ,/ 即/ 为/ 每个/ 扇区/ 都/ 记录/ 权限/ 信息/ ./ 然而/ ,/ OpenSSD/ 硬件/ 支持/ 的/ 带外/ 区域/ (/ Out/ -/ of/ -/ BandArea/ )/ 除了/ 纠错码/ (/ ErrorCorrectionCode/ )/ 外/ ,/ 无可/ 用于/ 记录/ 权限/ 信息/ 的/ 空闲/ 空间/ ./ 最/ 直接/ 的/ 解决/ 方法/ 是/ 用/ 一个/ 权限/ 表/ ,/ 但表/ 的/ 大小/ 很大/ ,/ 会/ 导致/ 很多/ 缓存/ 缺失/ ,/ 严重/ 影响/ 性能/ ./ (/ 3/ )/ 修改/ 复杂/ 的/ 操作系统/ I/ // O/ 栈/ ./ Linux/ 操作系统/ 的/ I/ // O/ 软件/ 栈/ ,/ 包括/ 系统/ 调用/ 、/ 虚拟/ 文件系统/ 、/ 缓冲区/ 、/ 通用/ 块/ 设备/ 层/ 和/ SCSI/ 驱动程序/ 层/ (/ 其中/ 又/ 包括/ 高层/ 、/ 中层/ 和/ 底层/ 驱动/ )/ 等等/ ,/ 是/ 一个/ 包含/ 诸多/ 组件/ 的/ 多层/ 架构/ ./ 这种/ 结构/ 虽然/ 具有/ 模块化/ 、/ 松/ 耦合/ 和/ 灵活性/ 等/ 优点/ ,/ 但/ 用户/ 传递/ 参数/ (/ 如会话/ ID/ 和/ 操作/ 令牌/ )/ 到/ 固态/ 硬盘/ 需要/ 经过/ 所有/ 这些/ 层次/ ./ 尽量少/ 改动/ 就要/ 达到/ 目的/ ,/ 是/ 很/ 有/ 挑战性/ 的/ ./ (/ 4/ )/ 扩展/ 现有/ 的/ 硬盘/ 命令集/ ./ 软件/ 的/ 数据结构/ 容易/ 扩展/ ,/ 硬件/ 的/ 物理/ 接口/ 却/ 难以/ 改动/ 了/ ./ 硬盘/ 的/ 物理/ 接口/ 、/ 协议/ 和/ 命令集/ 等/ 已经/ 形成/ 了/ 若干/ 既定/ 的/ 行业标准/ ./ 在/ 与/ 现有/ 硬盘/ 接口标准/ 兼容/ 的/ 情况/ 下/ ,/ 支持/ 可信/ 固态/ 硬盘/ 的/ 接口协议/ 所/ 需/ 的/ 新/ 命令/ (/ 如/ 挑战/ 和/ 应答/ )/ 也/ 是/ 一个/ 挑战/ ./ 这/ 4/ 项/ 挑战/ 的/ 解决/ 方法/ 接下来/ 将/ 分别/ 在/ “/ 闪存/ 转换/ 层/ ”/ 、/ “/ 访问控制/ 层/ ”/ 、/ “/ 操作系统/ I/ // O/ 栈/ ”/ 和/ “/ 硬盘/ 接口/ ”/ 等/ 4/ 个/ 小节/ 中/ 阐述/ ./ 在/ 详细/ 介绍/ 可信/ 固态/ 硬盘/ 的/ 设计/ 与/ 实现/ 之前/ ,/ 有/ 必要/ 对/ OpenSSD/ 固态/ 硬盘/ 开发/ 平台/ 做/ 一个/ 简略/ 的/ 介绍/ ./ OpenSSDJasmine/ 开发/ 平台/ 是/ 一个/ 开放/ 的/ 固态/ 硬盘/ 参考/ 实现/ ,/ 基于/ Indilinx/ 公司/ 的/ BarefootTM/ 控制器/ ,/ 后者/ 已经/ 成功/ 应用/ 于/ 众多/ 厂商/ 的/ 固态/ 硬盘/ 产品/ ./ OpenSSDJasmine/ 开发板/ ,/ 包括/ 基于/ ARM7/ 处理器/ 的/ 闪存/ 控制器/ ;/ 96KB/ 的/ SRAM/ ,/ 作为/ 程序/ 的/ 内存空间/ ,/ 存放程序/ 和/ 数据/ ;/ 64MB/ 的/ DRAM/ ,/ 主要/ 作为/ I/ // O/ 缓冲区/ ;/ 8/ 个/ MLCNAND/ 闪存/ 模块/ 插口/ ,/ 至多/ 达到/ 256GB/ 闪存/ 容量/ ./ 4.1/ 闪存/ 转换/ 层/ (/ FTL/ )/ 闪存/ 转换/ 层/ (/ FlashTranslationLayer/ ,/ FTL/ )/ 是/ 基于/ NAND/ 闪存/ 的/ 固态/ 硬盘/ 的/ 核心/ 控制/ 逻辑/ ./ FTL/ 将/ 来自/ 上层/ 的/ 块/ 设备/ 命令/ (/ 读/ 、/ 写/ 操作/ )/ 转换/ 为/ 对/ 下层/ 的/ NAND/ 闪存/ 单元/ 的/ 命令/ (/ 读/ 、/ 写/ 和/ 擦除/ 操作/ )/ ./ 这种/ 转换/ 的/ 必要性/ 是/ 源自/ 因/ NAND/ 闪存/ 的/ 物理/ 特性/ 而/ 导致/ 的/ 读写/ 不/ 对称/ :/ 闪存/ 的/ 读写操作/ 均/ 以页/ 为/ 单位/ (/ OpenSSD/ 的/ 页/ 大小/ 是/ 32KiB/ )/ ,/ 但/ 写/ 操作/ 只能/ 对/ 空白页/ ,/ 非/ 空白页/ 必须/ 擦除/ 后/ 才能/ 写/ ,/ 而/ 擦除/ 比/ 读写操作/ 的/ 时间/ 长得/ 多/ ,/ 且/ 是/ 以块/ 为/ 单位/ 的/ (/ OpenSSD/ 的/ 块/ 大小/ 是/ 4MiB/ ,/ 一个/ 块/ 包含/ 128/ 个页/ )/ ./ 因此/ ,/ 固态/ 硬盘/ 放弃/ 了/ 传统/ 硬盘/ 的/ 原地/ 更新/ 方式/ ,/ 而是/ 采用/ 异地/ 更新/ (/ Out/ -/ of/ -/ PlaceUpdate/ )/ 的/ 策略/ ,/ 即要/ 对/ 一个/ 逻辑/ 页/ (/ 或者/ 逻辑/ 块/ )/ 更新/ ,/ 首先/ 在/ 一个/ 空白页/ (/ 块/ )/ 写/ 新/ 数据/ ,/ 然后/ 把/ 旧/ 数据/ 所在/ 的/ 页/ 标记/ 为/ 无效/ ,/ 最后/ 更新/ 映射/ 表以/ 反映/ 逻辑/ 页/ (/ 块/ )/ 与/ 物理/ 页/ (/ 块/ )/ 之间/ 对应/ 关系/ 的/ 变化/ ,/ 至此/ 完成/ 更新/ 操作/ ./ FTL/ 的/ 实现/ ,/ 根据/ 映射/ 表/ 的/ 颗粒/ 度/ ,/ 可以/ 分为/ 页级/ FTL/ [/ 24/ -/ 25/ ]/ 、/ 块级/ FTL/ [/ 26/ ]/ 和/ 混合型/ FTL/ [/ 27/ -/ 28/ ]/ ./ 目前/ 学术界/ 普遍/ 看法/ 是/ 这/ 3/ 种/ 类型/ 的/ FTL/ 中页/ 级/ 映射/ 是/ 性能/ 最好/ 的/ ./ 顾名思义/ ,/ 页级/ FTL/ 允许/ 逻辑/ 页/ ①/ TheOpenSSDProject/ ./ http/ :/ // // www/ ./ openssd/ -/ project/ ./ org/ // Page8/ 地址/ (/ LogicalPageNumber/ ,/ LPN/ )/ 可以/ 直接/ 转换成/ 物理/ 页/ 地址/ (/ PhysicalPageNumber/ ,/ PPN/ )/ ./ 为此/ ,/ 页级/ FTL/ 需要/ 维护/ 一张/ 页级/ 映射/ 表/ ,/ 为/ 每个/ 逻辑/ 页/ 都/ 需要/ 保存/ 一条/ 记录/ ;/ 整张/ 表都/ 要/ 持久/ 地/ 保存/ 在/ 闪存/ 中/ ,/ 正在/ 使用/ 的/ 部分/ 载入/ 到/ DRAM/ 中/ 缓存/ 起来/ ,/ 以/ 加速/ 读取/ ./ 这/ 张表/ 的/ 大小/ 往往/ 超出/ 固态/ 硬盘/ 上/ 的/ DRAM/ 容量/ ,/ 但/ 由于/ 实际/ 负载/ 一般/ 都/ 具有/ 较/ 好/ 的/ 局部性/ ,/ 缓存/ 的/ 命中率/ 一般/ 都/ 很/ 高/ ./ OpenSSD/ 开源/ 固件/ 程序实现/ 了/ 页/ 级/ FTL/ ,/ 但/ 性能/ 不佳/ ./ OpenSSD/ 开发板/ 装有/ 128GB/ 闪存/ ,/ 写/ 操作/ 最高/ 能/ 达到/ 180MB/ // s/ 的/ 吞吐量/ ,/ 读能/ 达到/ 200MB/ // s/ ./ 然而/ ,/ 对/ 常见/ 的/ 4KiB/ ①/ 随机/ 读写/ 负载/ ,/ 性能/ 则/ 只有/ 10MB/ // s/ 左右/ ./ 最终/ 发现/ 性能/ 不佳/ 的/ 根源/ 是/ 写/ 扩大/ (/ WriteAmplification/ )/ 和/ 并行/ 不/ 充分/ ./ (/ 1/ )/ 写/ 扩大/ 考虑/ 更新/ 一个/ 扇区/ (/ 512B/ )/ 的/ 操作/ ,/ 根据/ 异地/ 更新/ 的/ 原理/ ,/ FTL/ 必须/ 首先/ 把/ 这个/ 扇区/ 原来/ 所在/ 的/ 物理/ 页/ 读出/ 到/ 内存/ 中/ 的/ 一个/ 页/ 缓冲区/ ,/ 然后/ 更新/ 这个/ 缓冲区/ 相应/ 扇区/ ,/ 最后/ 把/ 这个/ 页/ 缓冲区/ 写/ 回到/ 闪存/ ,/ 并/ 更新/ 映射/ 表/ ./ 这样/ ,/ 更新/ 一个/ 扇区/ 的/ 开销/ 等于/ 一次/ 图/ 3/ 子页/ 级/ 映射/ 和/ 归并/ 缓冲区/ (/ 图/ 3/ 展示/ 了/ 在/ 使用/ 子页/ 级/ 映射/ 和/ 加入/ 归并/ 缓冲区/ 之后/ 闪存/ 转换/ 层/ 更新/ 一个/ 扇区/ 的/ 流程/ ./ 图中/ 虚线/ 表示/ 逻辑/ 子页/ 到/ 物理/ 页/ 的/ 映射/ 关系/ ,/ 实线/ 表示/ 流程/ 中/ 的/ 每个/ 步骤/ ,/ 小/ 虚线/ 格子/ 表示/ 扇区/ ,/ 实/ 粗线/ 格子/ 表示/ 要/ 更新/ 的/ 扇区/ ./ lspn/ 表示/ 逻辑/ 子页/ 序号/ ,/ ppn/ 表示/ 物理/ 页/ 序号/ ./ 浅/ 灰色/ 格子/ 表示/ 未/ 更新/ 的/ 数据/ ,/ 深灰色/ 格子/ 表示/ 更新/ 的/ 数据/ ./ 更新/ 前/ ,/ 逻辑/ 子页/ 1/ 存储/ 于/ 物理/ 页/ 1/ ;/ 更新/ 后/ ,/ 于/ 物理/ 页/ 2/ ./ 由图/ 可见/ ,/ 更新/ 一个/ 扇区/ 相当于/ 需要/ 先读/ 再/ 写/ 4KiB/ 数据/ )/ (/ 2/ )/ 并行/ 不/ 充分/ 固态/ 硬盘/ 的/ 一大/ 优点/ 是/ 其/ 吞吐量/ 可以/ 随/ 闪存/ 模块/ 数量/ 的/ 扩充/ 而/ 线性/ 增加/ ./ 这要/ 得益于/ 其/ 内部/ 丰富/ 的/ 硬件/ 并行性/ ./ 以/ OpenSSDJasmine/ 开发板/ 为例/ ,/ 它/ 拥有/ 4/ 个/ 完全/ 独立/ 的/ 通道/ (/ Channel/ )/ ,/ 每个/ 通道/ 有/ 最/ 多/ 8/ 个/ 独立/ 的/ 库/ (/ Bank/ )/ ;/ 同一/ 通道/ 的/ 各个/ 库/ ,/ 在/ 任意/ 时刻/ 只能/ 有/ 一个/ 接收/ 闪存/ 指令/ ,/ 但/ 可以/ 各自/ 独页/ 读加/ 一次/ 页/ 写/ ,/ 即/ 为了/ 更新/ 512B/ 的/ 数据/ 不得不/ 先/ 闪存/ 读/ 32KiB/ 再/ 和/ 写/ 32KiB/ (/ OpenSSD/ 的/ 一个/ 物理/ 页/ 是/ 32KiB/ )/ ,/ 这/ 就是/ “/ 写/ 扩大/ ”/ ./ 为了/ 解决/ 写/ 扩大/ 的/ 问题/ ,/ 可信/ 固态/ 硬盘/ 改进/ 的/ FTL/ 引入/ 了/ 子页/ 级/ 映射/ 和/ 归并/ 缓冲区/ 两个/ 技术/ ./ 子页/ 级/ 映射/ ,/ 把/ 一个/ 32KiB/ 的/ 页/ 划分/ 为/ 8/ 个/ 4KiB/ 的/ 区域/ ,/ 后者/ 被/ 称为/ 子页/ (/ Sub/ -/ page/ )/ ./ 映射/ 表/ 负责/ 把/ 逻辑/ 子页/ (/ LogicalSub/ -/ page/ )/ 对应/ 到/ 物理/ 页/ ./ 引入/ 子页/ 之后/ ,/ 更新/ 数据/ 的/ 最小/ 单位/ 变为/ 了/ 子页/ ,/ 但/ 毕竟/ 最终/ 写入/ 闪存/ 时/ 还/ 必须/ 以页/ 为/ 单位/ ,/ 因此/ 又/ 引入/ 了/ 归并/ 缓冲区/ ,/ 可以/ 把/ 多个/ 独立/ 的/ 逻辑/ 子页/ 更新/ 操作/ 合并/ 为/ 一次/ 物理/ 页/ 写入/ 操作/ ./ 同时/ ,/ 多个/ 归并/ 缓冲区/ 一起/ 也/ 可以/ 起到/ 缓存/ 的/ 作用/ ,/ 减少/ 不必要/ 的/ 闪存/ 操作/ ./ 如图/ 3/ 所示/ ,/ 引入/ 子页/ 级/ 映射/ 和/ 归并/ 缓冲区/ 之后/ ,/ 更新/ 一个/ 扇区/ 并不需要/ 立刻/ 按页/ 写/ 回/ ,/ 而是/ 首先/ 写入/ 归并/ 缓冲区/ ,/ 这样/ 一次/ 物理/ 页/ 写/ 回/ 至少/ 有/ 8/ 次子/ 页/ 更新/ 分摊/ ,/ 因而/ 更新/ 一个/ 扇区/ 相当于/ 只/ 需要/ 写/ 1/ // 8/ 个/ 物理/ 页/ ;/ 也就是说/ ,/ 优化/ 后/ 的/ 效果/ 是/ 更新/ 512B/ 数据/ 的/ 开销/ 是/ 闪存/ 读/ ②/ 4KiB/ 加/ 闪存/ 写/ 4KiB/ 数据/ ,/ 只有/ 原/ 开销/ (/ 32KiB/ 先读/ 再/ 写/ )/ 的/ 1/ // 8/ ./ 立地/ 执行/ 其/ 已经/ 接收/ 到/ 的/ 闪存/ 命令/ (/ 读/ 、/ 写/ 和/ 擦/ 出/ )/ ./ 因此/ ,/ 固件/ 程序/ 应该/ 尽量/ 做好/ 调度/ 工作/ ,/ 充分发挥/ 这/ 32/ 个库/ 的/ 并行性/ ./ ①/ ②/ Page9/ 然而/ ,/ FTL/ 实现/ 中/ 不可避免/ 地要/ 遇到/ 等待/ I/ // O/ 完成/ 的/ 情况/ ./ 比如/ ,/ 物理/ 页/ 写/ 回/ 之前/ ,/ 必须/ 等待/ 物理/ 页/ 的/ 未/ 更改/ 部分/ 从/ 闪存/ 中/ 读出/ ./ 再/ 如/ ,/ 当/ 映射/ 表中/ 某个/ 记录/ 缓存/ 缺失/ 时/ ,/ 必须/ 先/ 等/ 需要/ 的/ 条目/ 从/ 闪存/ 载入/ 到/ 内存/ ./ 在/ OpenSSD/ 原/ FTL/ 实现/ 中/ ,/ CPU/ 需要/ 忙/ 等/ 在/ 这些/ 阻塞/ 的/ 闪存/ I/ // O/ 完成/ ;/ 在/ 完成/ 前/ ,/ 无法/ 接收/ 新/ 的/ 块/ 设备/ 命令/ 或/ 向/ 闲置/ 的/ 库/ 发送/ 新/ 的/ 闪存/ 命令/ ,/ 因而/ 硬件/ 的/ 并行性/ 也/ 没有/ 得到/ 充分利用/ ./ 提高/ 固件/ 程序/ 并行性/ 的/ 根本/ 解决办法/ 是/ 多线程/ 编程/ ./ 然而/ ,/ 开发/ 固件/ 是/ 在/ 嵌入式/ 编程/ 环境/ ,/ 直接/ 面向/ 底层/ 硬件/ ,/ 没有/ 操作系统/ ,/ 当然/ 也/ 没有/ 线程/ 这种/ 操作系统/ 提供/ 的/ 功能/ ./ 一个/ 最/ 直接/ 的/ 想法/ 是/ 引入/ 为/ 嵌入式/ 系统/ 而/ 设计/ 的/ 实时操作系统/ (/ Real/ -/ TimeOperatingSystem/ ,/ RTOS/ )/ ,/ 后者/ 可以/ 提供/ 轻量级/ 的/ 进程/ ,/ 以及/ 高效/ 的/ 进程/ 调度/ ./ 但/ OpenSSD/ 的/ SRAM/ 只有/ 96KB/ ,/ 容纳/ 现有/ 的/ 固件/ 程序/ 已然/ 稍显/ 不足/ ,/ 很难/ 再/ 支撑/ 一个/ 操作系统/ ./ 引入/ 现成/ 的/ 多线程/ 支持/ 不行/ ,/ 只好/ 自己/ 动手/ ,/ 自主/ 实现/ 了/ 进程/ 的/ 上下文/ 切换/ 、/ 进程/ 调度/ 和/ 进程/ 间/ 通讯/ 等/ 一系列/ 与/ 多线程/ 编程/ 有关/ 的/ 、/ 原本/ 由/ 操作系统/ 提供/ 的/ 编程/ 原语/ ./ 引入/ 多线程/ 后/ 的/ 一大/ 挑战/ 是/ 保证/ 乱序执行/ 的/ 用户/ 请求/ 的/ 最终/ 结果/ 保持/ 语义/ 的/ 正确性/ ./ 为此/ ,/ 又/ 引入/ 了/ 锁/ 机制/ ,/ 并/ 在/ 并发/ 编程/ 时/ 小心谨慎/ 地/ 使用/ 互斥/ 和/ 共享/ 锁/ ,/ 在/ 语义/ 正确/ 的/ 前提/ 下/ 最大化/ 各种/ 硬件资源/ 的/ 使用率/ ./ 4.2/ 访问控制/ 层/ (/ ACL/ )/ 访问控制/ 层/ (/ AccessControlLayer/ ,/ 后/ 简称/ ACL/ )/ 是/ 可信/ 固态/ 硬盘/ 的/ 安全/ 引擎/ ,/ 与/ FTL/ 紧密结合/ ,/ 确保/ 用户/ 请求/ 被/ 安全/ 地/ 接收/ 和/ 执行/ ./ ACL/ 主要/ 功能/ 有/ 两个/ :/ 一是/ 用户/ 验证/ ,/ 主要/ 涉及/ 到/ 的/ 数据结构/ 是/ 用户/ 表/ ;/ 二是/ 操作/ 授权/ ,/ 主要/ 用到/ 的/ 数据结构/ 是/ 会话表/ 和/ 权限/ 表/ (/ 见图/ 1/ (/ a/ )/ )/ ./ 用户/ 验证/ 的/ 原理/ 已经/ 在/ 3.2/ 节中/ 介绍/ ,/ 具体/ 实现/ 中/ 涉及/ 到/ 加密/ 和/ 安全/ 伪/ 随机数/ 生成/ 等/ 常见/ 密码学/ 操作/ 都/ 采用/ 了/ 广泛/ 验证/ 的/ 做法/ ,/ 在/ 此/ 不/ 赘述/ ./ 固态/ 硬盘/ 的/ 每秒/ 输入输出/ 数/ (/ IOPS/ )/ 可能/ 达到/ 10000/ 以上/ ,/ 操作/ 授权/ 伴随/ 每/ 一个/ 用户/ 读写/ 请求/ ./ 因此/ ,/ 高效/ 的/ 操作/ 授权/ 对/ 达到/ 可信/ 固态/ 硬盘/ 的/ “/ 高/ 安全/ 保证/ 、/ 低/ 运行/ 开销/ ”/ 的/ 目标/ 至关重要/ ./ 本/ 小节/ 下面/ 介绍/ 如何/ 设计/ 和/ 实现/ 高效/ 的/ 操作/ 授权/ ./ 操作/ 授权/ 首先/ 要/ 高效/ 地/ 验证/ 操作/ 密令/ ./ 3.3/ 小节/ 给出/ 了/ 一个/ 安全/ 的/ 操作/ 令牌/ 设计/ ,/ 即/ 使用/ 操作/ 的/ 消息/ 认证码/ (/ MessageAuthenticationCode/ ,/ MAC/ )/ ./ 常见/ 的/ MAC/ 实现/ 依赖于/ 块/ 加密算法/ 或/ 安全/ 哈希/ 函数/ ,/ 计算/ 开销/ 较/ 高/ ./ 为了/ 在/ 保证/ 安全性/ 的/ 前提/ 下/ 尽量/ 降低/ 开销/ ,/ 采用/ 了/ UMAC/ [/ 29/ ]/ ,/ 它/ 被/ 认为/ 是/ 最快/ 的/ MAC/ 算法/ ,/ 软件/ 实现/ 的/ 峰值/ 速度/ 可以/ 到/ 约/ 1/ 时钟/ 周期/ // 字节/ ./ 操作/ 授权/ 还要/ 高效/ 地/ 查看/ 或/ 修改/ 操作/ 所/ 涉及/ 页面/ 的/ 权限/ (/ 这里/ 权限/ 主要/ 指/ 数据/ 的/ 拥有者/ )/ ./ 由于/ 块/ 设备/ 的/ 最小/ 访问/ 单位/ 是/ 扇区/ ,/ 原则上/ 可信/ 固态/ 硬盘/ 应该/ 为/ 每个/ 扇区/ 维护/ 权限/ 信息/ ./ 闪存/ 上/ 的/ 每个/ 扇区/ 通常/ 会留/ 一些/ 额外/ 的/ 空间/ 存储系统/ 信息/ ,/ 这个/ 额外/ 空间/ 被/ 称为/ 带外/ 区域/ ./ 受/ OpenSSD/ 的/ 硬件/ 限制/ ,/ 带外/ 区域/ 仅能/ 用于/ 存放/ 纠错码/ ,/ 没有/ 额外/ 的/ 空间/ 可/ 供/ 存放/ 权限/ 信息/ ./ 所以/ ,/ 只能/ 在/ 闪存/ 上/ 专门/ 分配/ 一些/ 空间/ 以/ 保存/ 权限/ 信息/ ,/ 即/ 权限/ 表/ ./ 对于/ 128GB/ 的/ 固态/ 硬盘/ ,/ 扇区/ 数高达/ 256M/ ,/ 假设/ 每个/ 扇区/ 的/ 权限/ 信息/ 是/ 2/ 个/ 字节/ ,/ 那么/ 权限/ 表/ 的/ 大小/ 达到/ 512MB/ ;/ 相比之下/ ,/ 对于/ 同等/ 大小/ 的/ 固态/ 硬盘/ ,/ 页/ 映射/ 表/ 也/ 才/ 128MB/ ./ OpenSSD/ 拥有/ 64MB/ 的/ DRAM/ ,/ 其中/ 只有/ 不到/ 20MB/ 可以/ 作为/ 页/ 映射/ 表/ 和/ 权限/ 表/ 的/ 缓存/ ./ 如果/ 采用/ 512MB/ 权限/ 表/ 的/ 设计/ ,/ 无疑/ 会/ 导致/ 页/ 映射/ 表/ 和/ 权限/ 表/ 的/ 缓存/ 命中率/ 大幅/ 降低/ ,/ 增加/ 很多/ 额外/ 的/ 闪存/ 读写/ ,/ 显著/ 影响/ 性能/ ./ 因此/ ,/ 压缩/ 权限/ 表/ 的/ 大小/ 是/ 很/ 有/ 必要/ 的/ ./ 我们/ 使用/ 了/ 下面/ 两项/ 技术/ :/ 4KiB/ 对齐/ 的/ 文件系统/ ,/ 和/ 用户/ 觉察/ 的/ 归并/ 缓冲区/ ./ 如果/ 所有/ 磁盘/ 请求/ 都/ 是/ 4KiB/ 对齐/ 的/ (/ 起始/ 地址/ 和/ 请求/ 大小/ 都/ 是/ 4KiB/ 的/ 整数倍/ )/ ,/ 那么/ 就/ 不/ 用以/ 扇区/ 为/ 单元/ 记录/ 权限/ 信息/ ,/ 而是/ 以/ 4KiB/ 的/ 子页/ 为/ 单位/ ,/ 这样/ 权限/ 表/ 的/ 大小/ 就/ 降到/ 原来/ 的/ 1/ // 8/ ./ 而/ 幸运/ 的/ 是/ ,/ 让/ (/ 几乎/ )/ 所有/ 磁盘/ 请求/ 都/ 为/ 4KiB/ 对齐/ 是/ 容易/ 办到/ 的/ ,/ 只要/ (/ 1/ )/ 在/ 为/ 可信/ 固态/ 硬盘分区/ 的/ 时候/ 指定/ 分区/ 都/ 以/ 4KiB/ 对齐/ ,/ 比如/ 常见/ 的/ 分区/ 工具/ fdisk/ 就/ 支持/ 这个/ 功能/ ;/ (/ 2/ )/ 在/ 为/ 可信/ 固态/ 硬盘/ 上/ 的/ 分区/ 创建/ 文件系统/ 的/ 时候/ 指定/ 文件系统/ 的/ 块/ 大小/ 是/ 4KiB/ (/ 或/ 4KiB/ 的/ 倍数/ )/ ,/ 比如/ Linux/ 的/ 主流/ 文件系统/ Ext4/ 就/ 可以/ 设置/ 块/ 大小/ ./ 这样/ ,/ 用户/ 的/ 应用程序/ 经由/ 文件系统/ 向/ 可信/ 固态/ 硬盘/ 发出/ 的/ 磁盘/ 请求/ 就是/ 以/ 4KiB/ 对齐/ 的/ 了/ ./ 注意/ ,/ ACL/ 利用/ 4KiB/ 对齐/ 文件系统/ 的/ 特点/ 减少/ 权限/ 表/ 的/ 大小/ ,/ 但/ ACL/ 的/ 安全性/ 不/ 依赖/ 这点/ ,/ 即非/ 4KiB/ 对齐/ 的/ 磁盘/ 请求/ 也/ 可以/ 安全/ 地/ 处理/ ./ 为了/ 进一步/ 压缩/ 权限/ 表/ 的/ 大小/ ,/ ACL/ 引入/ 用户/ 察觉/ 的/ 归并/ 缓冲区/ ./ 4.1/ 小节/ 介绍/ 了/ 归并/ 缓冲区/ 如何/ 解决/ 写/ 放大/ 的/ 问题/ ,/ 以及/ 多个/ 归并/ 缓冲区/ 组成/ 读/ Page10/ 写/ 缓存/ 的/ 好处/ ./ 与/ 之前/ 的/ 缓冲区/ 不同/ 的/ 是/ ,/ 一个/ 用户/ 察觉/ 的/ 归并/ 缓冲区/ 只能/ 归并/ 属于/ 同一个/ 用户/ 的/ 子页/ ./ 这个/ 性质/ 可以/ 保证/ 由/ 用户/ 察觉/ 的/ 归并/ 缓冲区/ 写/ 回到/ 的/ 物理/ 页/ 中/ 都/ 是/ 同一个/ 用户/ 的/ 数据/ ./ 既然如此/ ,/ ACL/ 只/ 需以/ 物理/ 页/ 为/ 单位/ 记录/ 权限/ 信息/ ./ 这样/ ,/ 最终/ 得到/ 的/ 权限/ 表是/ 以/ 物理/ 页/ 为/ 单位/ 的/ ,/ 其/ 大小/ 是/ 8MB/ ,/ 只有/ 最初/ 估计/ 的/ 1/ // 64/ ,/ 完全/ 可以/ 全部/ 缓存/ 在/ DRAM/ 中/ ./ 综上所述/ ,/ 可信/ 固态/ 硬盘/ 的/ 访问控制/ 机制/ 经过/ 精心设计/ 后/ 是/ 可以/ 高效/ 实现/ 的/ ./ 4.3/ 操作系统/ I/ // O/ 栈/ 可信/ 固态/ 硬盘/ 完全/ 与/ 普通/ 硬盘/ 兼容/ ;/ 这/ 意味着/ 用户程序/ 、/ 操作系统/ 和/ 驱动程序/ 等/ 无需/ 任何/ 改动/ ,/ 就/ 把/ 可信/ 固态/ 硬盘/ 作为/ 普通/ 硬盘/ 正常/ 使用/ ./ 但/ 如果/ 用户/ 希望/ 读取/ 可信/ 固态/ 硬盘/ 中受/ 保护/ 的/ 数据/ ,/ 或/ 向/ 可信/ 固态/ 硬盘/ 写入/ 受/ 保护/ 的/ 数据/ ,/ 则/ 需要/ 有/ 操作系统/ 的/ 支持/ ./ 需要/ 指出/ 的/ 是/ ,/ 虽然/ 可信/ 固态/ 硬盘/ 的/ 功能/ 完整性/ 依赖于/ 操作系统/ ,/ 但/ 其/ 安全性/ 是/ 独立/ 于/ 主机/ 软硬件/ 的/ ./ 为了/ 读取/ 文件/ 中受/ 可信/ 固态/ 硬盘/ 保护/ 的/ 数据/ ,/ 或/ 向/ 文件/ 中/ 写入/ 受/ 保护/ 的/ 数据/ ,/ 除了/ 操作系统/ 的/ 支持/ 外/ ,/ 用户程序/ 还要/ 使用/ 可信/ 固态/ 硬盘/ 提供/ 的/ API/ ,/ 其中/ 最/ 重要/ 的/ 两个/ 函数/ (/ C语言/ )/ 是/ :/ inttssd/ _/ open/ (/ constchar/ / path/ ,/ intflags/ )/ ;/ inttssd/ _/ use/ _/ token/ (/ intfd/ ,/ tssd/ _/ token/ _/ ttoken/ )/ ;/ tssd/ _/ open/ 是/ 可信/ 固态/ 硬盘/ 提供/ 的/ 文件/ 打开/ 函数/ ,/ 其/ 特别之处/ 在于/ 它/ 强制/ 以/ 直接/ I/ // O/ (/ DirectI/ // O/ )/ 模式/ 打开/ 文件/ ./ 直接/ I/ // O/ 模式/ 常用/ 于/ 自主/ 管理/ 磁盘/ 缓存/ 、/ 无需/ 操作系统/ 缓存/ 的/ 数据/ 密集型/ 应用程序/ ,/ 如/ 数据库系统/ ./ 操作系统/ 高速/ 磁盘/ 缓存/ 使得/ 其中/ 缓存/ 的/ 页/ 可以/ 被/ 多个/ 不同/ 的/ 进程/ 共享/ 复用/ ,/ 省去/ 很多/ 磁盘/ I/ // O/ ./ 但/ 这个/ 高速/ 磁盘/ 缓存/ 的/ 优点/ 对于/ 访问控制/ 却是/ 安全隐患/ ,/ 因为/ 非/ 可信/ 固态/ 硬盘/ 授权/ 的/ 用户/ 有/ 可能/ 从/ 操作系统/ 的/ 磁盘/ 缓存/ 读取/ 到/ 属于/ 其他/ 用户/ 的/ 数据/ ./ 以/ 直接/ I/ // O/ 模式/ ,/ 跳过/ 操作系统/ 磁盘/ 缓存/ ,/ 可以/ 避免/ 上述/ 问题/ ./ 值得/ 指出/ 的/ 是/ ,/ 对/ 数据库系统/ 和/ Hadoop/ 这样/ 的/ 应用/ ,/ 直接/ I/ // O/ 模式/ 并/ 不会/ 因/ 绕过/ 操作系统/ 缓存/ 而/ 降低/ 性能/ ,/ 因为/ 数据库系统/ 本身/ 维护/ 了/ 独立/ 于/ 操作系统/ 的/ 缓存/ ,/ 而/ Hadoop/ 的/ 主要/ 读写/ 模式/ 是/ 顺序/ 的/ ,/ 缓存/ 作用/ 非常/ 有限/ ./ tssd/ _/ use/ _/ token/ 是/ 用于/ 向/ 可信/ 固态/ 硬盘/ 传递/ 本次/ 读写/ 请求/ 的/ 操作/ 令牌/ 的/ 函数/ ./ 操作/ 令牌/ 是/ 可信/ 固态/ 硬盘/ 授权/ 每个/ 读写/ 请求/ 的/ 凭据/ ./ Linux/ 操作系统/ 的/ I/ // O/ 软件/ 栈/ ,/ 包括/ 虚拟/ 文件系统/ 、/ 磁盘/ 缓冲/ 、/ 通用/ 块/ 设备/ 层/ 、/ SCSI/ 驱动程序/ (/ 其中/ 又/ 包括/ 高层/ 、/ 中层/ 和/ 底层/ 驱动/ )/ 等等/ ,/ 是/ 一个/ 包含/ 诸多/ 组件/ 的/ 多层/ 架构/ ./ 为了/ 把/ 操作/ 令牌/ 传递/ 到/ 最底层/ 的/ 可信/ 固态/ 硬盘/ ,/ 我们/ 修改/ 了/ Linux/ 操作系统/ I/ // O/ 子系统/ 和/ SCSI/ 子系统/ 中/ 各个/ 有关/ 组件/ ,/ 并/ 扩充/ 了/ 它们/ 之间/ 通信/ 的/ 数据结构/ (/ 如图/ 4/ )/ ./ 图/ 4/ 修改/ 的/ 操作系统/ I/ // O/ 栈/ (/ 图中/ 展示/ 了/ 为/ 向/ 可信/ 固态/ 硬盘/ 传递/ 额外/ 参数/ (/ 如会话/ ID/ 和/ 操作/ 令牌/ )/ 而/ 需要/ 修改/ 到/ 操作系统/ I/ // O/ 组件/ ./ 图中/ 灰色/ 方框/ 是/ 修改/ 的/ 组/ )/ )/ 4.4/ 硬件/ 接口/ 扩展/ 软件/ 的/ 数据结构/ 容易/ 扩展/ ,/ 硬件/ 的/ 物理/ 接口/ 却/ 难以/ 改动/ 了/ ./ 硬盘/ 的/ 物理/ 接口/ 、/ 协议/ 和/ 命令集/ 等/ 已经/ 形成/ 了/ 若干/ 既定/ 的/ 行业标准/ ,/ 如果/ 可信/ 固态/ 硬盘/ 的/ 接口/ 无法/ 与/ 现有/ 标准/ 兼容/ ,/ 那么/ 必然/ 会/ 提高/ 生产商/ 的/ 成本/ ,/ 增加/ 客户/ 采纳/ 的/ 难度/ ,/ 最终/ 难以/ 推广/ ./ 幸运/ 的/ 是/ ,/ 当今/ 使用/ 最/ 广泛/ 的/ 硬盘/ 接口标准/ ,/ 如/ SATA/ (/ OpenSSD/ 的/ 接口/ )/ 和/ SAS/ 等/ ,/ 都/ 是/ 基于/ SCSI/ 命令集/ ,/ 而/ SCSI/ 标准/ 具有/ 一定/ 的/ 扩展/ 空间/ ./ 可信/ 固态/ 硬盘/ 对/ 硬盘/ 接口/ 命令/ 的/ 扩充/ 包括/ 两种/ 形式/ :/ (/ 1/ )/ 定义新/ 的/ 命令/ ./ 为/ 完成/ 基于/ 挑战/ -/ 应答/ 的/ 用户/ 身份验证/ ,/ 可信/ 固态/ 硬盘/ 的/ 接口/ 需要/ 支持/ 两个/ 额外/ 的/ 命令/ ./ 第/ 1/ 个/ 是/ 挑战/ 命令/ ,/ 定义/ 为/ sid/ ,/ rnd/ ←/ Challenge/ (/ uid/ )/ ,/ 其中/ 参数/ uid/ 是/ 请求/ 建立/ 会话/ 的/ 用/ Page11/ 户/ ID/ ,/ 返回值/ sid/ 是/ 即将/ 建立/ 的/ 会/ 话/ 的/ ID/ ,/ rnd/ 是/ 一个/ 随机数/ ,/ 即/ 所谓/ 的/ “/ 挑战/ ”/ ./ 第/ 2/ 个/ 是/ 应答/ 命令/ ,/ 定义/ 为/ Response/ (/ sid/ ,/ resp/ )/ ,/ 其中/ 参数/ sid/ 是/ 即将/ 建立/ 的/ 会/ 话/ ID/ ,/ resp/ 是/ 对/ 随机数/ rnd/ 的/ 应答/ (/ 详见/ 3.2/ 小节/ )/ ./ SCSI/ 支持/ 最多/ 255/ 种/ 固定/ 长度/ 命令/ 以及/ 最多/ 255/ 种/ 变长/ 命令/ ,/ 而/ 标准/ 已/ 定义/ 的/ 命令/ 不/ 超过/ 100/ 种/ ,/ 因此/ Challenge/ 和/ Response/ 可以/ 作为/ 厂商/ 特定/ 功能/ (/ Vendor/ -/ specificfeature/ )/ 的/ 新/ 命令/ 而/ 加入/ ./ (/ 2/ )/ 扩展/ 现有/ 命令/ ./ 可信/ 固态/ 硬盘/ 的/ 授权/ 读写/ 要求/ 传入/ 会话/ ID/ 和/ 会/ 话/ 秘钥/ 等/ 两个/ 额外/ 的/ 参数/ ,/ 即/ sid/ 和/ token/ (/ 详见/ 3.2/ 小节/ )/ ./ 也就是说/ ,/ 可信/ 固态/ 硬盘/ 的/ 读/ 命令/ 为/ data/ ←/ Read/ (/ lpn/ ,/ num/ _/ sector/ [/ ,/ sid/ =/ 0/ ,/ token/ =/ 0/ ]/ )/ ,/ 写/ 命令/ 扩展/ 为/ Write/ (/ lpn/ ,/ num/ _/ sector/ ,/ data/ [/ ,/ sid/ =/ 0/ ,/ token/ =/ 0/ ]/ )/ ,/ 其中/ 的/ sid/ 和/ token/ 都/ 是/ 可选/ 参数/ ,/ 缺省值/ 是/ 0/ ./ 原则上/ 来说/ ,/ 可信/ 固态/ 硬盘/ 具有/ 访问控制/ 机制/ 的/ 读/ // 写/ 命令/ 也/ 是/ 可以/ 作为/ 新/ 命令/ 加入/ 的/ ;/ 但/ 实现/ 上/ 是/ 不/ 允许/ 这样/ 做/ 的/ ,/ 因为/ OpenSSD/ 的/ SATA/ 控制器/ 对/ SATA/ 的/ 读写/ 命令/ 有/ 特殊/ 的/ 处理/ (/ 比如/ 有/ 硬件/ 实现/ 的/ 请求/ 队列/ ,/ 还有/ 数据/ 缓冲区/ 的/ 支持/ )/ ,/ 而/ 这些/ 硬件/ 控制/ 逻辑/ 无法/ 通过/ 固件/ 程序/ 的/ 更改/ ./ 因此/ ,/ 只能/ 扩展/ 普通/ 的/ 读写/ 命令/ ,/ 并/ 把/ sid/ 和/ token/ 作为/ 可/ 选/ 参数/ ./ AHCI/ 层/ 向/ SATA/ 接口/ 的/ 固态/ 硬盘/ 发送/ 各种/ SATA/ 命令/ 的/ 数据格式/ 是/ 依据/ 一种/ 叫/ 帧/ 信息结构/ (/ FrameInformationStructure/ )/ 的/ ATA/ 标准/ [/ 30/ ]/ ./ 在/ 仔细/ 研究/ ATA/ 标准/ 之后/ ,/ 发现/ 帧/ 信息结构/ 有/ 40/ 个/ 未用/ 或/ 保留/ 的/ 比特/ 可以/ 使用/ ./ 通过/ 复用/ 帧/ 信息结构/ 已有/ 字段/ 的/ 闲置/ 空间/ ,/ 得以/ 把/ sid/ 和/ token/ 等/ 信息/ 随/ 读写/ 命令/ 的/ 其他/ 字/ 段/ 一起/ 发送给/ 可信/ 固态/ 硬盘/ ./ 由/ 上/ 可见/ ,/ 可信/ 固态/ 硬盘/ 需要/ 支持/ 的/ 新/ 命令/ 可以/ 通过/ 在/ 现有/ 硬盘/ 接口标准/ 之上/ 扩展/ 而/ 实现/ ,/ 并/ 保持/ 与/ 现有/ 标准/ 兼容/ ./ 5/ 实验/ 结果/ 本/ 节/ 给出/ 对/ 可信/ 固态/ 盘/ 的/ 初步/ 实验/ 结果/ ./ 实验/ 环境/ 是/ 一台/ Intel2/ ./ 4GHz/ 四核/ 处理器/ 、/ 8GB/ 内存/ 的/ 服务器/ ,/ 运行/ 64/ 位/ Ubuntu12/ ./ 04/ 的/ Linux/ 操作系统/ ./ 可信/ 固态/ 硬盘/ (/ OpenSSD/ 开发板/ )/ 与/ 主机/ 通过/ SATA2/ ./ 0/ 接口/ 连接/ ./ 实验/ 的/ 主要/ 目的/ 是/ 评估/ 在/ 固态/ 硬盘/ 中/ 加入/ 额外/ 的/ 安全/ 机制/ 对/ 整体/ 性能/ 的/ 影响/ ./ 为此/ ,/ 分别/ 在/ 合成/ 负载/ 、/ 真实/ 负载/ 和/ HDFS/ 上/ 做/ 了/ 测试/ ./ 5.1/ 合成/ 负载/ 的/ 实验/ 结果/ 合成/ 的/ 负载/ ,/ 按/ 操作/ 类型/ 分为/ 读/ 请求/ 和/ 写/ 请求/ ;/ 按/ 请求/ 块/ 大小/ 可/ 分为/ 2KB/ 、/ 4KB/ 、/ 8KB/ 、/ 16KB/ 、/ 32KB/ 和/ 64KB/ ;/ 按/ 访问/ 模式/ 可/ 分为/ :/ 顺序/ 和/ 随机/ ./ 为了/ 完全/ 控制/ 负载/ 的/ 模式/ ,/ 编写/ 了/ 专用/ 的/ 测试工具/ 用于/ 生成/ 合成/ 负载/ ./ 以/ 4KB/ 随机/ 读写/ 负载/ 为例/ ,/ 测试工具/ 发送给/ 固态/ 硬盘/ 的/ I/ // O/ 请求/ 都/ 是/ 读/ 请求/ ,/ 且/ 每个/ 读/ 请求/ 是/ 4KB/ 大小/ ,/ 起始/ 地址/ 是/ 随机/ 的/ ./ 图/ 5/ 中/ 展示/ 了/ 在/ 合成/ 负载/ 上/ 的/ 结果/ ,/ 可以/ 看出/ :/ (/ 1/ )/ 可信/ 固态/ 硬盘/ 大幅提高/ 了/ 原/ OpenSSD/ 固件/ 的/ 性能/ ,/ 尤其/ 是/ 随机/ 读写/ 的/ 情况/ ,/ 最高/ 达到/ 了/ 近/ 10/ 倍/ 的/ 性能/ 提升/ (/ 对/ 32KB/ 随机/ 写/ 的/ 情况/ )/ ;/ (/ 2/ )/ 可信/ 固态/ 硬盘/ 的/ 访问控制/ 只/ 增加/ 了/ 很小/ 的/ 开销/ ./ 这/ 说明/ 在/ 第/ 4/ 节/ “/ 设计/ 与/ 实现/ ”/ 中/ 介绍/ 对/ FTL/ 和/ ACL/ 的/ 优化/ 是/ 有效/ 的/ ./ 5.2/ 真实/ 负载/ 的/ 实验/ 结果/ 为了/ 进一步/ 验证/ 对/ ACL/ 优化/ 的/ 效果/ ,/ 又/ 在/ 真实/ 负载/ 上/ 做/ 了/ 实验/ ./ 真实/ 负载/ 是/ 靠/ 重现/ 收集/ 自/ 实际/ 生产/ 环境/ 的/ 存储/ 访问/ 日志/ 来/ 产生/ 的/ ./ 从/ SNIA/ ①/ 和/ UMASS/ ②/ 等/ 两个/ 公开/ 的/ 真实/ 存储/ 访问/ 记录/ 库中/ 选择/ 了/ Exchange/ 、/ BuildServer/ 、/ Financial/ 、/ TPC/ -/ C/ 和/ WebSearch/ 等/ 5/ 个/ 特点/ 不同/ 、/ 有/ 代表性/ 的/ 存储/ 访问/ 日志/ (/ 负载/ 特点/ 见表/ 1/ )/ ./ 我们/ 编写/ 了/ 专门/ 的/ 测试工具/ 用于/ 解析/ 和/ 重现/ 这些/ 负载/ 记录/ ./ 为了/ 更加/ 贴近/ 真实/ 的/ 使用/ 情景/ ,/ 在/ 真实/ 负载/ 的/ 实验/ 中/ ,/ 模拟/ 多个/ 不同/ 用户/ (/ 8/ 个/ 用户/ )/ 同时/ 登陆/ 可信/ 固态/ 硬盘/ 的/ 情况/ ./ 表/ 1/ 中/ 比较/ 了/ 平凡/ ACL/ 和/ 优化/ ACL/ 相对/ 于/ 禁用/ ACL/ 的/ 可信/ 固态/ 硬盘/ 的/ 性能/ ./ 可以/ 看到/ ,/ 平凡/ ACL/ 会/ 带来/ 显著/ 的/ 开销/ ,/ 而/ 优化/ 后/ 的/ ACL/ (/ 见/ 4.2/ 节/ “/ 访问控制/ 层/ ”/ )/ 的/ 开销/ 只有/ 不到/ 3/ %/ ./ 由此可见/ ,/ 我们/ 对/ ACL/ 的/ 优化/ 是/ 非常/ 有效/ 的/ ./ 5.3/ HDFS/ 的/ 实验/ 结果/ 在/ 不/ 牺牲/ 性能/ 的/ 条件/ 下/ ,/ 为/ 大/ 数据系统/ 中/ 的/ 海量/ 数据/ 提供/ 更加/ 安全/ 的/ 存储/ 服务/ ,/ 是/ 本/ 课题/ 的/ 目标/ ./ 3.4/ 节/ 介绍/ 了/ 一种/ 基于/ 可信/ 固态/ 硬盘/ 的/ 安全/ 增强型/ HDFS/ ./ 根据/ 这一/ 架构设计/ ,/ 我们/ 扩展/ 了/ HDFS/ 的/ 功能/ ,/ 在/ 名字/ 节点/ 实现/ 了/ 集群/ 环境/ 下/ 可信/ 固态/ 硬盘/ 所/ 需/ 的/ 用户/ 密钥/ 管理/ 和/ 分发/ 功能/ ,/ 在/ 数据/ 节点/ 上/ 实现/ 了/ 基于/ 可信/ 固态/ 硬盘/ 的/ 用户/ 验证/ 和/ 操作/ 授权/ ./ HDFS/ 的/ 实验/ 集群/ 包括/ 一台/ 名字/ 节点/ 和/ 一台/ 数据/ 节点/ ,/ 数据/ 节点/ 的/ 服务器/ 直连/ 一块/ 可信/ 固态/ 硬盘/ ,/ ①/ ②/ index/ ./ php/ // Storage/ // StoragePage12/ 图/ 5/ 合成/ 负载/ 的/ 测试/ 结果/ (/ 图/ 5/ 比较/ 了/ 3/ 个/ 固件/ 实现/ :/ OpenSSD/ 表示/ 自带/ 的/ 开源/ 固件/ ,/ TSSD/ -/ ACL/ 表示/ 可信/ 固态/ 硬盘/ 的/ 固件/ 但/ 禁用/ 访问控制/ 层/ (/ ACL/ )/ ,/ TSSD/ +/ ACL/ 表示/ 可信/ 固态/ 硬盘/ 的/ 固件/ (/ 带/ 访问控制/ )/ )/ 表/ 1/ 真实/ 负载/ 的/ 测试/ 结果/ (/ 表中/ 展示/ 了/ 在/ 多种不同/ 特点/ 的/ 真实/ 负载/ 下/ ,/ 可信/ 固态/ 硬盘/ 的/ 访问控制/ 层/ 对/ 性能/ 的/ 影响/ ./ 具体来说/ ,/ 它/ 比较/ 了/ 无/ 访问控制/ 层/ (/ TSSD/ -/ ACL/ )/ 、/ 平凡/ 的/ 访问控制/ 实现/ (/ TSSD/ +/ 平凡/ 的/ ACL/ )/ 和/ 优化/ 的/ 访问控制/ 层制/ (/ TSSD/ +/ 优化/ 的/ ACL/ )/ ./ 响应/ 时间/ 是/ 操作系统/ 向/ 可信/ 固态/ 硬盘/ 发送/ I/ // O/ 请求/ 的/ 平均/ 响应/ 时间/ ,/ 额外/ 开销/ 是/ 以/ 无/ 访问控制/ 的/ 可信/ 固态/ 硬盘/ 为/ 基准/ )/ 负载/ 名称/ ExchangeBuildServerFinancialTPC/ -/ CWebSearchN/ // AN/ // AN/ // AN/ // AN/ // A/ 作为/ 其上/ HDFS/ 数据/ 的/ 存储设备/ ./ 实验/ 目标/ 是/ 测试/ 基于/ 可信/ 固态/ 硬盘/ 的/ 安全/ 增强型/ HDFS/ 的/ 性能/ ,/ 测试工具/ 是/ DFSIO/ 基准/ 测试/ [/ 31/ ]/ ,/ 它/ 专门/ 用于/ 测量/ HDFS/ 集群/ 的/ 平均/ 读写/ 带宽/ ./ 实验/ 中/ ,/ 读/ 或/ 写/ 的/ 单个/ 文件大小/ 设为/ 4GB/ ,/ 文件/ 数量/ 是/ 8/ 个/ ,/ 且/ 对于/ 可信/ 固态/ 硬盘/ 来说/ 这些/ 文件/ 都/ 属于/ 同一个/ 用户/ 拥有/ ./ HDFS/ 集群/ 的/ 副本/ 因子/ (/ ReplicationFactor/ )/ 设为/ 1/ ./ 表/ 2/ 中/ 可以/ 看出/ 基于/ 可信/ 固态/ 硬盘/ 的/ 额外/ 安全/ 机制/ 对/ HDFS/ 的/ 性能/ 影响/ 很小/ ./ 由于/ 只/ 拥有/ 一块/ OpenSSD/ 开发板/ ,/ 我们/ 不/ 具备/ 在/ 更/ 多/ 的/ 数据/ 节点/ 上/ 响应/ 时间/ // μ/ s/ 额外/ 开销/ // %/ 进行/ 实验/ 的/ 条件/ ./ 但/ 这/ 并/ 不/ 影响/ 实验/ 数据/ 的/ 代表性/ 和/ 有效性/ ,/ 因为/ 以/ 可扩展性/ 强/ 著称/ 的/ HDFS/ 在/ 单个/ 节点/ 上/ 的/ 吞吐量/ 并/ 不/ 受到/ 集群/ 节点/ 数量/ 的/ 显著/ 影响/ [/ 31/ ]/ ./ 顺序/ 写/ 顺序/ 读/ 随机/ 读/ Page13/ 综合/ 合成/ 负载/ 、/ 真实/ 负载/ 和/ HDFS/ 等/ 的/ 实验/ 结果/ 可见/ ,/ 可信/ 固态/ 硬盘/ 的/ 安全/ 机制/ 仅/ 产生/ 了/ 很小/ 的/ 运行/ 开销/ ./ 6/ 结论/ 本文/ 提出/ 一种/ 解决/ 大/ 数据/ 平台/ 数据/ 存储/ 安全/ 的/ 新思路/ ,/ 存储/ 内/ 安全/ (/ In/ -/ StorageSecurity/ )/ 把/ 对/ 数据/ 的/ 访问控制/ 从/ 主机/ 上/ 的/ 系统软件/ 下/ 放到/ 底层/ 存储/ 内部/ ./ 更/ 具体地说/ ,/ 我们/ 设计/ 并/ 开发/ 可信/ 固态/ 硬盘/ (/ TrustedSSD/ )/ ,/ 它/ 提供/ 安全/ 增强/ 的/ 存储设备/ 接口/ 和/ 协议/ ,/ 使得/ 用户/ 可以/ 对/ 存储/ 中/ 的/ 数据/ 施以/ 细粒度/ 的/ 访问控制/ ,/ 从而/ 保障/ 存储/ 中/ 数据/ 的/ 安全/ ./ 文中/ 深入分析/ 了/ 可信/ 固态/ 硬盘/ 的/ 安全性/ ,/ 并/ 详细/ 介绍/ 了/ 系统/ 设计/ 与/ 实现/ 中/ 的/ 挑战/ 和/ 应对/ ./ 实验/ 结果表明/ ,/ 无论是/ 在/ 合成/ 的/ 、/ 还是/ 真实/ 的/ 工作/ 负载/ 上/ ,/ 可信/ 固态/ 硬盘/ 的/ 运行/ 开销/ 不到/ 3/ %/ ./ 因此/ ,/ 我们/ 认为/ 可信/ 固态/ 硬盘/ 有望/ 成为/ 大/ 数据安全/ 的/ 新/ 基础/ ./ 

