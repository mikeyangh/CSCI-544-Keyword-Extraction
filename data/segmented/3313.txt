Page1/ 雪花/ 结构/ :/ 一种/ 新型/ 数据中心/ 网络结构/ 刘晓茜/ 1/ )/ 杨寿保/ 1/ )/ 郭良敏/ 1/ )/ ,/ 2/ )/ 王淑玲/ 1/ )/ 宋浒/ 1/ )/ 1/ )/ (/ 中国/ 科学技术/ 大学/ 计算机科学/ 与/ 技术/ 学院/ 合肥/ 230026/ )/ 2/ )/ (/ 安徽师范大学/ 计算机科学/ 与/ 技术/ 系/ 安徽/ 芜湖/ 241003/ )/ 摘要/ 该文/ 分析/ 了/ 传统/ 数据中心/ 的/ 不足/ 以及/ 新型/ 数据中心/ 具备/ 的/ 新/ 特点/ ,/ 借鉴/ 已有/ 数据中心/ 结构/ ,/ 依据/ 著名/ 的/ 科赫/ 曲线/ (/ Kochcurve/ )/ ,/ 提出/ 了/ 新型/ 数据中心/ 网络结构/ —/ —/ —/ 雪花/ 结构/ ./ 该/ 结构/ 充分考虑/ 了/ 数据中心/ 的/ 可扩展性/ ,/ 在/ 保证/ 交换机/ 与/ 服务器/ 较/ 低/ 数量/ 比例/ (/ 0.125/ ~/ 0.333/ )/ 的/ 前提/ 下/ ,/ 可以/ 在/ 较/ 短/ 的/ 平均/ 路径/ 内/ 实现/ 节点/ 间/ 路由/ 机制/ ,/ 具有/ 较/ 小/ 的/ 网络/ 开销/ ./ 关键词/ 数据中心/ ;/ 网络结构/ ;/ 协议/ ;/ 路由/ 1/ 引言/ 过去/ 两年/ 里/ 随着/ 碳/ 排放/ 和/ 电费/ 的/ 不断/ 激增/ ,/ 使得/ 高/ 能效/ 数据中心/ 的/ 研究/ 已经/ 发展/ 成为/ 热点/ ./ 数据中心/ 是/ 提高/ 能源/ 效率/ 最/ 困难/ 的/ 商业/ 建筑/ ,/ 因为/ 安装/ 在/ 数据中心/ 的/ 计算机/ 需要/ 大量/ 的/ 电力/ 并且/ 排放/ 出/ 大量/ 的/ 热量/ ,/ 而/ 数据中心/ 消耗/ 的/ 一半/ 电力/ 都/ 用于/ 支持/ IT/ 设备/ 的/ 电力/ 和/ 制冷/ 空调/ 等/ 冷却/ 基础设施/ ./ 美国联邦/ 环境保护/ 署/ (/ EnvironmentalProtectionPage238/ %/ 和/ 9/ %/ ,/ 照明/ 系统/ 仅/ 占/ 1/ %/ ./ 因此/ 从/ 服务器/ 的/ 角度/ 出发/ ,/ 在/ 保证/ 数据中心/ 海量/ 服务器/ 的/ 前提/ 下/ 尽可能/ 降低/ 交换机/ 个数/ ,/ 提升/ 服务器/ 与/ 交换机/ 的/ 数量/ 比例/ ,/ 不仅/ 可以/ 有效/ 降低/ 能耗/ 达到/ 减排/ 目的/ ,/ 同时/ 还/ 可以/ 降低/ 交换机/ 的/ 成本/ 开销/ ./ 本文/ 借鉴/ 已有/ 的/ 数据中心/ 网络结构/ ,/ 依据/ 著名/ 科赫/ 曲线/ [/ 1/ ]/ ,/ 提出/ 新型/ 数据中心/ 结构/ —/ —/ —/ 雪花/ 结构/ (/ Snowflake/ ,/ Snow/ )/ ./ 该/ 结构/ 充分考虑/ 了/ 数据中心/ 的/ 可扩展性/ ,/ 在/ 保证/ 交换机/ 与/ 服务器/ 较/ 低/ 数量/ 比例/ 的/ 前提/ 下/ ,/ 可以/ 在/ 较/ 短时间/ 内/ 实现/ 节点/ 间/ 路由/ 机制/ ,/ 具有/ 较/ 小/ 的/ 网络/ 开销/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节是/ 全文/ 主体/ ,/ 详细/ 介绍/ 基于/ 雪花/ 结构/ 的/ 数据中心/ 网络/ 构建/ 方法/ 及其/ 属性/ 内容/ ;/ 第/ 4/ 节/ 阐述/ 该/ 结构/ 中/ 节点/ 间/ 的/ 路由/ 协议/ 和/ 算法/ ;/ 第/ 5/ 节/ 补充/ 说明/ 其它/ 方面/ 的/ 内容/ ,/ 例如/ 雪花/ 结构/ 不/ 完全/ 时/ 的/ 情况/ 等/ ;/ 第/ 6/ 节是/ 实验/ 模拟/ ,/ 将/ 雪花/ 结构/ 与/ DCell/ 结构/ 作/ 比较/ ;/ 最后/ ,/ 总结/ 全文/ ./ 2/ 相关/ 工作/ “/ 数据中心/ ”/ 是/ 上/ 世纪/ IT/ 界/ 的/ 一大/ 发明/ ,/ 标志/ 着/ IT/ 应用/ 的/ 规范化/ 和/ 组织化/ ./ 传统/ 数据中心/ 结构/ [/ 2/ ]/ 如图/ 1/ 所示/ ./ Internet/ 中/ 的/ 请求/ 经过/ 第/ 3/ 层/ 的/ 边界/ 路由器/ (/ BorderRouter/ ,/ BR/ )/ 和/ 接入/ 路由器/ (/ AccessRouter/ ,/ AR/ )/ 被/ 转发/ 到/ 基于/ 虚拟/ IP地址/ (/ VirtualIP/ ,/ VIP/ )/ 的/ 第/ 2/ 层/ ./ 处于/ 第/ 2/ 层/ 顶端/ 的/ 交换机/ 连接/ 了/ 两个/ 负载/ 均衡器/ ,/ 若/ 其中/ 一个/ 均衡器/ 失效/ ,/ 另/ 一个/ 仍然/ 可以/ 维持/ 工作/ ./ VIP/ 就/ 配置/ 在/ 这/ 两个/ 负载/ 均衡器/ 中/ ./ 此外/ ,/ 每个/ 负载/ 均衡器/ 配置/ 了/ 一组/ 目的/ IP/ (/ DestinationIP/ ,/ DIP/ )/ ,/ 因此/ 一组/ DIP/ 与/ 一个/ VIP/ 相对/ 应/ ./ DIP/ 是/ 机架/ 上/ 物理/ 服务器/ 的/ 私有/ 内部/ 地址/ ./ 这组/ VIP/ 就/ 定义/ 了/ 服务器资源/ 池/ ,/ 用以/ 解决/ 发送给/ VIP/ 的/ 请求/ ,/ 而/ 负载/ 均衡器/ 则/ 负责/ 在/ 资源/ 池中/ 的/ DIP/ 间/ 传播/ 请求/ ./ 然而/ 随着/ 科技/ 的/ 不断进步/ ,/ 传统/ 数据中心/ 的/ 局限性/ 也/ 逐步/ 显现出来/ ,/ 它/ 存在/ 以下/ 不足之处/ [/ 3/ ]/ :/ (/ 1/ )/ 可扩展性/ 差/ ./ 服务器/ 数量/ 限制/ 在/ 4000/ 台/ 左右/ ,/ 若/ 建立/ 百万/ 规模/ 的/ 数据中心/ 则/ 会/ 导致/ 高额/ 的/ 成本/ 和/ 低效/ 的/ 网络/ 性能/ ./ (/ 2/ )/ 静态/ 的/ 网络/ 分配/ [/ 2/ ]/ ./ 为/ 支持/ 数据中心/ 的/ 内部/ 流量/ ,/ 独立/ 的/ 应用/ 通常/ 被/ 映射/ 到/ 特定/ 的/ 物理/ 设备/ ./ 这种/ 方式/ 基于/ VLAN/ 及其/ 生成/ 算法/ 来/ 满足/ 服务器/ 与/ 特定/ 应用/ 映射/ ./ 虽然/ 直接/ 映射/ 服务/ 与/ 相关/ 物理/ 设备/ 可以/ 提供/ 一定/ 的/ 安全性/ 和/ 独立性/ ,/ 但是/ 在/ 执行/ 管理/ 和/ 安全性/ 维护/ 时/ 容易/ 造成/ VLAN/ 策略/ 超载/ ./ 另外/ VLAN/ 生成/ 算法/ 和/ 大/ 服务器/ 池会/ 将/ 流量/ 限制/ 在/ 树/ 的/ 顶端/ ,/ 易/ 造成/ 链路/ 流量/ 超载/ ./ (/ 3/ )/ 资源/ 分片/ [/ 2/ ]/ ./ 主流/ 的/ 负载/ 均衡/ 技术/ 通常/ 要求/ 同一个/ VIP/ 资源/ 池中/ 的/ 所有/ DIP/ 在/ 相同/ 的/ 两层/ 中/ ,/ 因此/ 应用/ 需要/ 更/ 多/ 服务器时/ ,/ 不能/ 利用/ 其它/ 两层/ 中/ 的/ 服务器/ ,/ 导致/ 资源/ 分片/ 和/ 低/ 利用率/ ./ 虽然/ 全/ NAT/ 负载/ 均衡/ 允许/ 利用/ 其它/ 两层/ 中/ 的/ 服务器/ ,/ 但/ 基于/ IP/ 的/ 应用/ 通常/ 要求/ 服务器/ 知道/ 客户端/ 的/ IP/ ,/ 而全/ NAT/ 无法/ 支持/ ./ (/ 4/ )/ 人力/ 成本/ 高/ ./ 当/ 服务/ 需要/ 在/ 服务器/ 间重/ 分配/ 时/ ,/ 传统/ 数据中心/ 网络/ 的/ 地址/ 空间/ 分片/ 会/ 导致/ 巨大/ 的/ 人工/ 配置/ 成本/ ,/ 且/ 人工/ 操作/ 出错/ 的/ 概率/ 很/ 高/ ./ (/ 5/ )/ 硬件/ 成本/ 高/ ./ 传统/ 数据中心/ 网络/ 使用/ 专用/ 的/ 交换机/ ,/ 位于/ 上层/ 的/ 交换机/ 成本/ 较/ 高/ ./ 此外/ ,/ 负载/ 均衡器/ 扩容/ 时/ 需要/ 成/ 对/ 更新/ ,/ 成本/ 较/ 高/ ./ 因此/ ,/ 针对/ 不断/ 出现/ 的/ 新/ 变化/ 和/ 新/ 需求/ ,/ 新型/ 数据中心/ 必须/ 满足/ 以下/ 特点/ [/ 3/ -/ 4/ ]/ :/ (/ 1/ )/ 模块化/ 的/ 标准/ 基础设施/ ./ 在/ 新一代/ 数据中心/ 中/ ,/ 为/ 使/ IT/ 基础设施/ 简化/ 和/ 具有/ 适应性/ 与/ 可扩展性/ ,/ 需要/ 对/ 服务器/ 、/ 存储设备/ 、/ 网络/ 等/ 基本/ 组成/ 按/ 标准/ 进行/ 模块化/ 配置/ 设计/ ,/ 以/ 使/ 这种/ 配置/ 更/ 易于/ 针对/ 数据中心/ 的/ 服务/ 需求量/ 身/ 打造/ ./ 基于/ 标准/ 的/ 模块化/ 系统/ 能够/ 简化/ 数据中心/ 的/ 环境/ ,/ 加强/ 对/ 成本/ 的/ 控制/ ,/ 进而/ 实现/ 使用/ 一套/ 可/ 扩展/ 、/ 灵活/ 的/ IT/ 系统/ 和/ 服务/ 来/ 构建/ 更具/ 适应性/ 的/ 基础设施/ 环境/ ,/ 从而/ 提高/ 数据中心/ 工作效率/ ,/ 降低/ 复杂性/ 和/ 风险/ ./ (/ 2/ )/ 虚拟化/ 的/ 资源/ 和/ 环境/ ./ 在/ 新一代/ 数据中心/ 中/ ,/ 广泛/ 采用/ 虚拟化/ 技术/ 将/ 物理/ 资源/ 集中/ 在/ 一起/ 形成/ 一个/ 共享/ 虚拟/ 资源/ 池/ ,/ 从而/ 更加/ 灵活/ 和/ 低成本/ 地/ 使用/ 资源/ ./ 通过/ 服务器/ 虚拟化/ 、/ 存储/ 虚拟化/ 、/ 数据/ 中/ Page3/ 心/ 虚拟化/ 等/ 解决方案/ ,/ 不仅/ 可以/ 降低/ 服务器/ 数量/ ,/ 还/ 可以/ 优化/ 资源/ 利用率/ ./ 虚拟化/ 是/ 新一代/ 数据中心/ 中/ 使用/ 最为/ 广泛/ 的/ 技术/ ,/ 也/ 是/ 与/ 传统/ 数据中心/ 的/ 最大/ 差异/ ./ (/ 3/ )/ 良好/ 的/ 扩展性/ ./ 数据中心/ 的/ 可扩展性/ 包括/ 3/ 个/ 方面/ :/ ①/ 物理/ 结构/ 必须/ 是/ 可/ 扩展/ 的/ ./ 理想/ 的/ 结构/ 必须/ 支持/ 十万/ 甚至/ 百万/ 台/ 服务器/ 的/ 低成本/ 扩展/ ,/ 每个/ 节点/ 的/ 链路/ 数/ 不宜/ 过多/ 或者/ 不/ 依赖/ 于高端/ 交换机/ ;/ ②/ 物理/ 结构/ 必须/ 支持/ 增量/ 扩展/ ./ 当/ 增加/ 新/ 的/ 服务器时/ ,/ 不会/ 影响/ 已有/ 服务器/ 的/ 运行/ ;/ ③/ 通信协议/ 设计/ 必须/ 是/ 可/ 扩展/ 的/ ,/ 例如/ 路由/ 协议/ ./ (/ 4/ )/ 良好/ 的/ 容错性/ ./ 在/ 当前/ 的/ 数据中心/ 中/ ,/ 故障/ 是/ 非常/ 普遍/ 的/ ./ 硬件/ 、/ 软件/ 和/ 能源/ 等/ 因素/ 可能/ 引起/ 各种各样/ 的/ 服务器/ 、/ 链路/ 、/ 交换机/ 和/ 机架/ 故障/ ./ 当/ 网络/ 规模/ 足够/ 大时/ ,/ 单独/ 的/ 服务器/ 和/ 链路/ 的/ 故障/ 甚至/ 比/ 异常/ 发生/ 的/ 频率/ 更高/ ,/ 因此/ 新型/ 数据中心/ 必须/ 具备/ 足够/ 的/ 物理/ 冗余/ 和/ 良好/ 的/ 容错性/ ./ (/ 5/ )/ 良好/ 的/ 服务器/ 间通信/ 性能/ ./ 部署/ 在/ 数据中心/ 的/ 许多/ 应用/ 在/ 服务器/ 间/ 的/ 流量/ 远大于/ 与/ 外部/ 客户/ 交互/ 的/ 流量/ ,/ 如/ 网页/ 检索/ 、/ 分布式文件系统/ 、/ 科学计算/ 等/ ./ 因此/ 良好/ 的/ 服务器/ 间通信/ 性能/ 是/ 保障/ 服务/ QoS/ 的/ 基础/ ./ (/ 6/ )/ 位置/ 无关/ 的/ 地址/ 结构/ ./ 服务/ 需要/ 采用/ 与/ 物理/ 位置/ 无关/ 的/ 地址/ 结构/ 来/ 解决/ 数据中心/ 对/ 服务器/ 地址/ 的/ 限制/ 问题/ ./ 这样/ 数据中心/ 的/ 任意/ 服务器/ 都/ 可以/ 成为/ 任意/ 资源/ 池/ 的/ 一部分/ ,/ 既保证/ 了/ 服务/ 的/ 可扩展性/ 又/ 可以/ 提高/ 资源/ 利用率/ ,/ 简化/ 管理/ 配置/ ./ (/ 7/ )/ 节省能源/ 和/ 空间/ ./ 传统/ 数据中心/ 设计/ 追求/ 的/ 是/ 性能/ ,/ 而/ 新一代/ 数据中心/ 在/ 当今/ 能源/ 紧缺/ 与/ 能源/ 成本/ 迅猛/ 增涨/ 的/ 情况/ 下/ 必然/ 需要/ 综合/ 考虑/ 能源/ 效率/ 问题/ ,/ 提高/ 数据中心/ 空间/ 利用率/ ,/ 解决/ 传统/ 数据中心/ 的/ 过量/ 制冷/ 和/ 空间/ 不足/ 的/ 问题/ ./ 目前/ 有/ 代表性/ 的/ 数据中心/ 网络结构/ 有/ Fat/ -/ Tree/ [/ 5/ ]/ 、/ DCell/ [/ 6/ ]/ 、/ BCube/ [/ 7/ ]/ 和/ VL2/ [/ 8/ ]/ 等/ ./ 我们/ 将/ 详细/ 介绍/ 这/ 几种/ 结构/ 并/ 分析/ 其/ 各自/ 的/ 特点/ [/ 3/ ]/ ./ Fat/ -/ Tree/ 结构/ 将/ 服务器/ 分为/ k/ 个子/ 群/ ,/ 每个/ 子群/ 包含/ 两层/ 端口数/ 为/ k/ 的/ k/ // 2/ 个/ 交换机/ ,/ 下层/ 每个/ 交换机/ 的/ k/ // 2/ 个/ 端口/ 连接/ 到/ k/ // 2/ 台/ 主机/ ,/ 其余/ k/ // 2/ 个/ 端口/ 分别/ 与/ 每个/ 聚/ 和/ 层交换机/ 连接/ ;/ 核心层/ 需要/ (/ k/ // 2/ )/ 2/ 个/ 端口数/ 为/ k/ 的/ 核心/ 交换机/ ,/ 最多能/ 支持/ k3/ // 4/ 台/ 主机/ ./ Fat/ -/ Tree/ 抛弃/ 了/ 传统/ 数据中心/ 采用/ 专用/ 交换机/ 的/ 模式/ ,/ 转而/ 采用/ 商业/ 以太网交换机/ ,/ 较大/ 提高/ 了/ 性价比/ ./ 它/ 能/ 为/ 包含/ 上/ 万台/ 服务器/ 的/ 数据中心/ 提供/ 高/ 聚合/ 带宽/ ,/ 不/ 需要/ 对/ 主机/ 网络接口/ 、/ 操作系统/ 进行/ 修改/ 便/ 可/ 构建/ ,/ 且/ 与/ 以太网/ 、/ TCP/ // IP/ 等/ 通信协议/ 兼容/ 良好/ ./ Fat/ -/ Tree/ 各层/ 的/ 链路/ 数/ 相等/ ,/ 使得/ 所有/ 服务器/ 产生/ 的/ 最大/ 流量/ 和/ 核心层/ 的/ 最大/ 吞吐量/ 相等/ ,/ 不/ 存在/ 网络/ 瓶颈/ ./ 而且/ 它/ 采用/ 两张/ 路由表/ 进行/ 两级/ 路由/ ,/ 并/ 采用/ 一定/ 的/ 链路/ 错误/ 检测/ 机制/ 来/ 实现/ 容错/ 路由/ ./ Fat/ -/ Tree/ 结构/ 解除/ 了/ 树形/ 结构/ 上层/ 链路/ 对/ 吞吐量/ 的/ 限制/ ,/ 并/ 能/ 为/ 内部/ 节点/ 间通信/ 提供/ 多条/ 并行/ 链路/ ./ 但是/ Fat/ -/ Tree/ 的/ 扩展性/ 受限于/ 核心/ 交换机/ 端口/ 数量/ ,/ 目前/ 比较/ 常用/ 的/ 是/ 48/ 端口/ 10GB/ 核心/ 交换机/ ,/ 在/ 三层/ 树结构/ 中/ 能够/ 支持/ 27648/ 台/ 主机/ ./ 长远/ 来讲/ ,/ 规模/ 在/ 十万/ 以内/ 的/ 数据中心/ 是/ 无法/ 满足/ 应用/ 需求/ 的/ ,/ 因此/ Fat/ -/ Tree/ 存在/ 扩展性/ 不足/ 的/ 缺点/ ./ Fat/ -/ Tree/ 的/ 另/ 一个/ 缺点/ 是/ 容错性/ 差/ ,/ 具体表现/ 为/ 处理/ 交换机/ 故障/ 能力/ 不足/ 及/ 路由/ 协议/ 容错性/ 不强/ ./ MSRA/ 研究/ 表明/ [/ 9/ ]/ :/ Fat/ -/ Tree/ 对/ 低/ 层交换机/ 故障/ 非常/ 敏感/ ,/ 严重/ 影响/ 系统/ 性能/ ./ 因为/ Fat/ -/ Tree/ 仍然/ 是/ 树结构/ ,/ 本质/ 上/ 具有/ 树结构/ 的/ 缺陷/ ./ DCell/ 是/ 一种/ 递归/ 定义/ 的/ 网络结构/ ,/ 使用/ 位于/ 第/ i/ -/ 1/ 层/ 的/ DCell/ 构建/ 第/ i/ 层/ 的/ DCell/ ./ 当/ 节点/ 度/ 增加/ 时/ DCell/ 的/ 规模/ 接近/ 以/ 2/ 的/ 指数/ 次方/ 扩展/ ./ 通常/ DCell0/ 内/ 包含/ 常数/ 服务器/ ,/ 一般/ 为/ 3/ ~/ 8/ 台/ ,/ 并/ 通过/ 微型/ 交换机/ 互连/ ./ DCell/ 容错性/ 较/ 好/ ,/ 没有/ 单点故障/ 并且/ 能够/ 在/ 严重/ 的/ 链路/ 和/ 节点/ 故障/ 的/ 情况/ 下/ 利用/ 其/ 分布式/ 协议/ 实现/ 接近/ 最短/ 路径/ 的/ 路由/ ./ DCell/ 还/ 能/ 为/ 各种各样/ 的/ 服务/ 提供/ 比/ 传统/ 树结构/ 更/ 高/ 的/ 网络/ 容量/ ./ 另外/ DCell/ 可以/ 增量/ 扩展/ 并且/ 在/ 不/ 完全/ 结构/ 的/ 情况/ 下/ 表现/ 出/ 上述/ 性能/ ./ 虽然/ DCell0/ 很小/ ,/ 但/ DCell/ 能/ 支持/ 的/ 服务器/ 数量/ 是/ 惊人/ 的/ ,/ 例如/ 当/ DCell0/ 包含/ 6/ 台/ 主机/ 时/ ,/ DCell3/ 可以/ 支持/ 326/ 万台/ 服务器/ ./ 由于/ DCell/ 连接/ 方式/ 接近/ 完全/ 图/ ,/ 并且/ DCell/ 路由/ 协议/ (/ DCellFault/ -/ tolerantRouting/ ,/ DFR/ )/ 利用/ 链路/ 状态/ 和/ 贪心/ 算法/ 来/ 实现/ 容错/ 路由/ ,/ 所以/ DCell/ 可以/ 在/ 服务器/ 、/ 链路/ 或/ 交换机/ 严重/ 故障/ 的/ 情况/ 下/ ,/ 实现/ 性能/ 较/ 好/ 的/ 路由/ ./ 然而/ ,/ DCell/ 也/ 有/ 不足之处/ ./ 首先/ ,/ 其/ 完全/ 图/ 的/ 连接/ 方式/ 可能/ 带来/ 巨大/ 花费/ ,/ 而且/ 实际/ 链路/ 规模/ 庞大/ ,/ 连接/ 和/ 维护/ 困难/ ./ 其次/ ,/ DCell/ 中/ 流量/ 在/ 不同/ 层次/ 分布/ 不/ 均匀/ ,/ level0/ 承担/ 了/ 过/ 多/ 流量/ ,/ 严重/ 影响/ 吞吐量/ ./ 最后/ ,/ 由于/ DCell/ 使用/ 服务器/ 执行/ 路由/ ,/ 增大/ 了/ 网络/ 延迟/ ,/ 而且/ 其/ 路由/ 协议/ 也/ 不/ 适于/ 在/ 链路/ 故障/ 时/ 发现/ 最短/ 路径/ ,/ 网络/ 延迟/ 较大/ ./ BCube/ 是/ DCell/ 的/ 模块化/ 版本/ [/ 10/ -/ 12/ ]/ ,/ 它/ 的/ 连接/ 方式/ 是/ 在/ BCube0/ 以外/ 的/ 层次/ 中/ 采用/ 微型/ 交换机/ 实现/ 连接/ ./ 它/ 在/ 每层/ 单元/ 的/ 数量/ 上/ 与/ DCell/ 不同/ ,/ 如果/ Page4DCell/ 在/ 第/ k/ 层有/ n/ 个/ DCellk/ -/ 1/ ,/ 那么/ 第/ k/ +/ 1/ 层则/ 有/ n/ +/ 1/ 个/ DCellk/ ;/ 而/ BCube/ 在/ 任/ 一级/ 都/ 具有/ 相同/ 的/ 单元/ 数/ n/ ,/ 易/ 得出/ BCubek/ 拥有/ nk/ +/ 1/ 台/ 服务器/ (/ n/ 为/ BCube0/ 中/ 的/ 服务器/ 数/ )/ ./ 交换机/ 作为/ 连接/ 媒介/ 使/ BCube/ 具有/ 很多/ 冗余/ 路径/ ,/ 这/ 可以/ 保证/ 容错/ 路由/ 并/ 方便/ 模块化/ 连接/ 而且/ 路由/ 速度/ 比/ DCell/ 快/ ./ 另外/ BCube/ 应用/ BSR/ (/ BCubeSourceRouting/ )/ 选取/ 路径/ ,/ 采用/ 路径/ 自/ 适应/ 协议/ ,/ 能够/ 很/ 好/ 地/ 开拓/ 网络/ 中/ 的/ 最/ 短/ 并行/ 路径/ ,/ 并/ 实现/ 可靠/ 数据传输/ ./ BCube/ 能够/ 高效/ 无/ 带宽/ 限制/ 地/ 执行/ OnetoOne/ 、/ OnetoAll/ 、/ OnetoSeveral/ 、/ AlltoAll/ 类型/ 的/ 通信/ ,/ 很/ 好/ 地/ 支持/ GFS/ ,/ MapReduce/ 类/ 应用/ ./ BCube/ 的/ 连接/ 方式/ 和/ 递归结构/ 使得/ 数据中心/ 可以/ 模块化/ 建设/ ,/ 实现/ 性好/ ./ BCube/ 在/ 结构/ 不/ 完整/ 的/ 情况/ 下/ 表现/ 出比/ DCell/ 具有/ 更好/ 的/ 性能/ ./ 实验/ 表明/ [/ 9/ ]/ 给定/ 2048/ 台/ 服务器/ ,/ 在/ Fat/ -/ Tree/ 、/ DCell/ 和/ BCube/ 结构/ 都/ 不/ 完整/ 的/ 情况/ 下/ ,/ BCube/ 的/ 网络/ 吞吐量/ 和/ 容错性/ 能/ 是/ 最好/ 的/ ,/ 这/ 是因为/ BCube/ 对/ 不/ 完整/ 结构/ 采用/ 完整/ 结构/ 的/ 交换机/ 连接/ 策略/ ./ BCube/ 的/ 不足/ 体现/ 在/ 可扩展性/ 上/ ,/ BCube/ 在/ k/ =/ 3/ 、/ n/ =/ 8/ 时/ (/ k/ 为/ BCube/ 层次/ ,/ n/ 为/ BCube0/ 中/ 服务器/ 数/ )/ ,/ 仅/ 支持/ 4096/ 台/ 服务器/ ,/ 与/ DCell/ 差距/ 较大/ ./ VL2/ 是/ 一种/ 可/ 扩展/ 的/ 灵活/ 的/ 数据中心/ 网络结构/ ,/ 它/ 能够/ 支持/ 超大规模/ 的/ 数据中心/ ,/ 为/ 服务器/ 间/ 提供/ 均衡/ 的/ 高带宽/ 通信/ 性能/ ,/ 服务/ 间/ 的/ 性能/ 隔离/ 及/ 以太网/ 第/ 2/ 层/ 语义/ ./ 第/ 2/ 层/ 语义/ 是/ 指/ 将/ 第/ 2/ 层/ 所有/ 的/ 域/ 虚拟化/ 为/ 统一/ 的/ 域/ ,/ 在/ 这个/ 层面/ 上/ 所有/ 主机/ 都/ 位于/ 同一个/ 域/ 中/ ./ VL2/ 在结构上/ 改变/ 的/ 是/ 第/ 3/ 层交换机/ 的/ 连接/ 方式/ ,/ 采用/ 特殊/ 协议/ 实现/ 虚拟/ 第/ 2/ 层/ ;/ 而/ 其它/ 结构/ 在/ 物理/ 连接/ 方面/ 的/ 改变/ 是/ 整体/ ./ 另外/ ,/ 地址/ 表示/ 和/ 路由/ 协议/ 在/ VL2/ 中/ 更为重要/ ,/ 直接/ 关系/ 到/ 虚拟/ 第/ 2/ 层/ 的/ 实现/ ./ VL2/ 中/ 采用/ VLB/ (/ ValiantLoadBalancing/ )/ 进行/ 路由/ ,/ 为/ 均衡/ 各路/ 径流量/ ,/ VL2/ 将/ 各/ 中间/ 交换机/ 设/ 为/ 相同/ IP/ ,/ 采用/ 随机/ 的/ 方式/ 选择/ 一个/ 中间/ 交换机/ 实现/ 路由/ ./ 3/ 新型/ 数据中心/ 网络结构/ —/ —/ —/ 雪花/ 结构/ 这/ 一部分/ 详细/ 介绍/ 雪花/ 结构/ 的/ 构建/ 方法/ 及其/ 特有/ 的/ 一些/ 属性/ ./ 之所以/ 称为/ 雪花/ 结构/ ,/ 是因为/ 这种/ 结构/ 依据/ 科赫/ 曲线/ ,/ 形似/ 科赫/ 雪花/ ./ 3.1/ 雪花/ 结构/ 及其/ 构建/ 方法/ 雪花/ 结构/ 包含/ 两个/ 组成部分/ :/ 服务器/ 和/ 微型/ 交换机/ ./ 前面/ 已经/ 介绍/ 了/ DCell/ 和/ BCube/ 结构/ ,/ 二者/ 均/ 采用/ 了/ 递归/ 的/ 方法/ 来/ 定义/ 各自/ 结构/ ./ 在/ 雪花/ 结构/ 中/ ,/ 我们/ 同样/ 采用/ 递归/ 定义/ 的/ 方法/ ,/ 在/ (/ n/ -/ 1/ )/ 级/ 雪花/ 结构/ 的/ 基础/ 上/ 添加/ 若干个/ 0/ 级/ 雪花/ 结构/ ,/ 构成/ n/ 级/ 雪花/ 结构/ ./ 这里/ 的/ “/ 若干个/ ”/ 我们/ 在/ 后面/ 会/ 详细/ 介绍/ ./ 这样/ 定义/ 的/ 好处/ 是/ ,/ 首先/ ,/ 我们/ 用/ 添加/ 某种/ 固定/ 结构/ 的/ 方式/ 尽可能/ 地/ 将/ 结构/ 模块化/ 处理/ ,/ 有利于/ 结构/ 的/ 模块化/ 连接/ ;/ 其次/ ,/ 当/ n/ 级/ 结构/ 没有/ 扩展/ 完全/ 时/ ,/ 继续/ 扩展/ (/ n/ +/ 1/ )/ 级/ 结构/ 也/ 较/ 容易/ ./ 此时/ ,/ 若/ 发现/ n/ 级/ 结构/ 没有/ 扩展/ 完全/ ,/ 可以/ 在/ 不/ 改变/ 已有/ (/ n/ +/ 1/ )/ 级/ 结构/ 的/ 情况/ 下/ ,/ 继续/ 补充/ 不/ 完全/ 的/ n/ 级/ 结构/ ,/ 有利于/ 结构/ 的/ 扩展/ ./ 下面/ 我们/ 来/ 详细/ 介绍/ 雪花/ 结构/ 的/ 构建/ 方法/ ./ 0/ 级/ 雪花/ 结构/ (/ Snow0/ )/ 由/ 一个/ 微型/ 交换机/ 和/ 若干个/ 服务器/ 组成/ ./ 借鉴/ 已有/ 数据中心/ 结构/ ,/ 设置/ 服务器/ 的/ 个数/ 最少/ 为/ 3/ 个/ ,/ 不/ 超过/ 8/ 个/ [/ 6/ -/ 7/ ]/ ./ 如图/ 2/ (/ a/ )/ 所示/ ,/ 我们/ 以/ 3/ 个/ 服务器/ 为例/ (/ k/ =/ 3/ )/ ,/ 将/ 3/ 个/ 服务器/ 连接/ 到/ 一个/ n/ 端口/ 的/ 微型/ 交换机/ 上/ ./ 如图/ 2/ (/ b/ )/ 所示/ ,/ 我们/ 调整/ 3/ 个/ 服务器/ 的/ 理论/ 位置/ ,/ 为/ 3/ 个/ 服务器/ 的/ 两/ 两/ 直接/ 互联/ 添加/ 了/ 3/ 条/ 虚线/ ./ 这/ 3/ 条/ 虚线/ 并非/ 实际/ 的/ 服务器/ 互联/ ,/ 而是/ 为了/ 方便/ 说明/ 构造/ 下/ 一级/ 雪花/ 结构/ ,/ 我们/ 称之为/ 虚/ 连接/ ,/ 即/ 不/ 存在/ 的/ 网络连接/ ,/ 只是/ 为了/ 方便/ 说明/ 结构/ 的/ 构建/ ./ 在/ Snow0/ 基础/ 上/ ,/ 我们/ 断开/ 3/ 条虚/ 连接/ (/ 如图/ 2/ (/ b/ )/ )/ ,/ 每/ 断开/ 一条/ 虚/ 连接/ ,/ 即/ 要/ 添加/ 一个/ 0/ 级/ 雪花/ 结构/ ,/ 将/ 该/ 新添/ 0/ 级/ 结构/ 中/ 的/ 微型/ 交换机/ 分别/ 与/ 虚/ 连接/ 的/ 两端/ 节点/ 相连/ ./ 相对/ 于/ 虚/ 连接/ ,/ 这样/ 的/ 连接/ 称为/ 实/ 连接/ ,/ 即/ 断开/ 虚/ 连接/ 重新/ 构建/ 的/ 连接/ ./ 这里/ 的/ 实/ 连接/ 是/ 实际/ 存在/ 的/ 连接/ ,/ 是/ 新/ 添加/ 结构/ 中/ 的/ 交换机/ 与/ 原有/ 结构/ 中/ 服务器/ 的/ 连接/ ./ 这样/ 得到/ 一个/ 1/ 级/ (/ Snow1/ )/ 雪花/ 结构/ ,/ 如图/ 3/ 所示/ ./ 由于/ 是/ 在/ 断开/ 的/ 虚/ 连接处/ 添加/ 0/ 级/ 雪花/ ,/ 此时/ 虚/ 连接/ 的/ 状态/ 已经/ 变为/ 实/ 连接/ (/ 1/ 条虚/ 连接/ 转化/ 为/ 2/ 条实/ 连接/ )/ ,/ 链接/ 状态/ 从无到有/ ,/ 因此/ 在/ 此处/ 不再/ 添加/ 虚/ 连接/ ./ 需要/ 特别/ 说明/ 的/ 是/ ,/ 实/ 连接/ 不/ 只是/ 实际/ 存在/ 的/ 连接/ ,/ 更/ 体现/ 了/ 由/ 虚/ 连接/ 到实/ 连接/ ,/ 这种/ 连接/ 从无到有/ 的/ 变化/ 状态/ ,/ 因此/ 在/ Snow0/ 中/ 服务器/ 与/ 交换机/ 相连/ 的/ 3/ 处/ 不/ 看作/ 是/ 实/ 连接/ ,/ 它/ 虽然/ 是/ 实际/ 存在/ 的/ 连接/ ,/ 但是/ 并/ 没有/ 状态/ 变化/ 的/ 体现/ ./ 仔细观察/ 可以/ Page5/ 发现/ ,/ 断开/ 虚/ 连接/ 添加/ 的/ 0/ 级/ 结构/ 与/ Snow0/ 是/ 有/ 区别/ 的/ ,/ 它/ 缺少/ 了/ 一条/ 虚/ 连接/ ,/ 并/ 不是/ 真正/ 意义/ 上/ 的/ Snow0/ 结构/ ./ 为了/ 区分/ 二者/ ,/ 不至于/ 混淆/ 读者/ ,/ 这种/ 后来/ 断开/ 虚/ 连接不断/ 添加/ 的/ 缺少/ 一条/ 虚/ 连接/ 的/ 0/ 级/ 结构/ ,/ 我们/ 称其为/ Cell/ ,/ 以/ 区分/ Snow0/ ./ Snow1/ 包含/ 6/ 条实/ 连接/ 和/ 6/ 条虚/ 连接/ ./ 在/ 之后/ 的/ 每/ 一级/ 雪花/ 结构/ 中/ ,/ 总是/ 断开/ 上/ 一级/ 中/ 包含/ 的/ 所有/ 实/ 连接/ 和/ 虚/ 连接/ ,/ 添加/ Cell/ ,/ 构成/ 新/ 的/ 高级/ 结构/ ./ 图/ 4/ 显示/ 了/ k/ 为/ 3/ 时/ 的/ 2/ 级/ (/ Snow2/ )/ 雪花/ 结构/ ./ 构建/ 雪花/ 结构/ 的/ 伪/ 代码/ 如/ 算法/ 1/ 所示/ ./ 算法/ 1/ ./ 构建/ 雪花/ 结构/ ./ 1/ ./ ConstructSnow/ (/ k/ ,/ n/ )/ 2/ ./ If/ (/ n/ =/ =/ 0/ )/ // // 构建/ 的/ 是/ Snow03/ ./ For/ (/ inti/ =/ 0/ ;/ i/ </ k/ ;/ i/ ++/ )/ 4/ ./ Connectithservertoswitch/ ;/ 5/ ./ 标记/ 两/ 两/ 相邻/ 的/ 服务器/ ;/ // // 虚/ 连接/ 标记/ 6/ ./ 将/ 标记/ 的/ 服务器/ 成/ 对/ 放入/ 队列/ ;/ 7/ ./ 记录/ 队列/ 长度/ queue/ _/ len/ ;/ 8/ ./ Return/ ;/ 9/ ./ Elsewhile/ (/ n/ !/ =/ 0/ )/ 10/ ./ {/ while/ (/ queue/ _/ len/ !/ =/ 0/ )/ 11/ ./ {/ 从/ 队列/ 中/ 取出/ 节点/ 对/ ,/ 添加/ Cell/ ,/ Cell/ 中/ 的/ 交/ 12/ ./ 将/ 添加/ Cell/ 产生/ 的/ 2/ 条新/ 的/ 虚/ 连接/ 和/ 2/ 条新/ 13/ ./ 记录/ 新/ 的/ 队列/ 长/ queue/ _/ new/ _/ len/ ;/ 14/ ./ queue/ _/ len/ -/ -/ ;/ // // 添加/ 一次/ Cell/ 队列/ 长减/ 一/ 15/ ./ }/ 16/ ./ n/ -/ -/ ;/ // // 当/ 队列/ 长为/ 0/ 时/ ,/ 表明/ 新/ 的/ 一级/ 雪花/ 17/ ./ queue/ _/ len/ =/ queue/ _/ new/ _/ len/ ;/ 18/ ./ }/ 在/ 这/ 一节/ ,/ 我们/ 介绍/ 并/ 证明/ 雪花/ 结构/ 的/ 特有/ 3.2/ 雪花/ 结构/ 的/ 属性/ 属性/ ./ 定理/ 1/ ./ 假设/ 第/ 0/ 级/ 雪花/ 结构/ 中/ 包含/ k/ 个/ 服务器/ (/ Cell/ 也/ 包含/ k/ 个/ 服务器/ )/ ,/ 则/ 第/ n/ 级/ 雪花/ 结构/ 包含/ SVn/ 个/ 服务器/ ,/ SWn/ 个/ 微型/ 交换机/ ./ 其中/ k/ ∈/ {/ 3/ ,/ 4/ ,/ 5/ ,/ 6/ ,/ 7/ ,/ 8/ }/ ,/ n/ / 0/ ./ SVn/ 和/ SWn/ 分别/ 满足/ 下列/ 条件/ :/ 证明/ ./ Snow0/ 包含/ k/ 个/ 服务器/ ,/ 因此/ Snow0/ 中/ ,/ SVnSWn/ =/ k1/ ./ Cell/ 包含/ k/ 个/ 服务器/ ,/ 因此/ Cell/ 中/ ,/ SVnSWn/ =/ k1/ ./ 每/ 一级/ 雪花/ 结构/ 都/ 是/ 在/ 前/ 一级/ 的/ 基础/ 上/ 不断/ 添加/ Cell/ ,/ 服务器/ 与/ 交换机/ 的/ 比例/ 没有/ 改变/ ,/ 因此/ SVnSWn/ =/ k1/ 是/ 显而易见/ 的/ ./ 变换/ 形式/ 即/ 得到/ 式/ (/ 1/ )/ 结论/ ./ 下面/ ,/ 我们/ 用/ 数学/ 归纳法/ 来/ 证明/ 式/ (/ 2/ )/ ./ 当/ n/ =/ 0/ 时/ ,/ SV0/ =/ k/ ,/ k/ ×/ (/ k/ +/ 1/ )/ n/ =/ k/ ,/ 此时/ ,/ SVn/ =/ k/ ×/ (/ k/ +/ 1/ )/ n/ ./ 当/ n/ =/ 1/ 时/ ,/ SV1/ =/ k/ +/ k/ ×/ k/ =/ k/ (/ k/ +/ 1/ )/ ,/ k/ ×/ (/ k/ +/ 1/ )/ n/ =/ k/ (/ k/ +/ 1/ )/ ,/ SVn/ =/ k/ ×/ (/ k/ +/ 1/ )/ n/ ./ 假设/ ,/ 当/ n/ =/ m/ 时/ ,/ 等式/ 成立/ ,/ 即/ SVm/ =/ k/ ×/ (/ k/ +/ 1/ )/ m/ ./ 则/ 当/ n/ =/ m/ +/ 1/ 时/ ,/ SVm/ +/ 1/ =/ SVm/ +/ k/ ×/ (/ 断开/ Snowm/ 中虚/ 连接/ 和/ 实/ 连接/ 添加/ 的/ Cell/ 个数/ )/ ./ 这里/ ,/ 断开/ Snowm/ 中虚/ 连接/ 和/ 实/ 连接/ 添加/ 的/ Page6Snowm/ 中虚/ 连接/ 和/ 实/ 连接/ 个数/ =/ (/ k/ +/ 1/ )/ ×/ Cell/ 个数/ =/ Snowm/ 中虚/ 连接/ 和/ 实/ 连接/ 个数/ ;/ [/ SVm/ -/ SVm/ -/ 1/ ]/ // k/ =/ k/ ×/ (/ k/ +/ 1/ )/ m/ ;/ 因此/ SVm/ +/ 1/ =/ k/ ×/ (/ k/ +/ 1/ )/ m/ +/ 1/ ./ 所以/ ,/ SVn/ =/ k/ ×/ (/ k/ +/ 1/ )/ n/ ,/ 等式/ (/ 2/ )/ 成立/ ./ 证毕/ ./ 从式/ (/ 1/ )/ 和/ (/ 2/ )/ 可以/ 得到/ ,/ 当/ k/ =/ 3/ 、/ n/ =/ 10/ 时/ ,/ 雪花/ 结构/ 可以/ 达到/ 314/ 万个/ 服务器/ ./ 该/ 结构/ 在/ 最初/ 阶段/ 扩展/ 较慢/ ,/ 但是/ 一旦/ 形成/ 即/ 迅速/ 增长/ ./ 当/ k/ =/ 6/ 、/ n/ =/ 4/ 时/ ,/ 雪花/ 结构/ 可以/ 达到/ 14406/ 个/ 服务器/ 、/ 2401/ 个/ 交换机/ ,/ 交换机/ 与/ 服务器/ 的/ 比例/ 为/ 0.167/ ./ 在/ BCube/ 中/ ,/ 当/ k/ =/ 6/ 、/ n/ =/ 4/ 时/ ,/ 只能/ 达到/ 7776/ 个/ 服务器/ ,/ 却/ 同时/ 包含/ 交换机/ 2850/ 个/ ./ 不仅/ 服务器/ 数量/ 减半/ ,/ 扩展性/ 较弱/ ,/ 而且/ 交换机/ 与/ 服务器/ 的/ 比例/ 达到/ 了/ 0.367/ ,/ 是/ 雪花/ 结构/ 的/ 2/ 倍/ 多/ ./ 当/ k/ =/ 4/ 、/ n/ =/ 4/ 时/ ,/ BCube/ 的/ 交换机/ 与/ 服务器/ 比例/ 甚至/ 达到/ 2.328/ ,/ 交换机/ 的/ 数量/ 是/ 服务器/ 的/ 2/ 倍/ 多/ ./ 考虑/ 到/ 数据中心/ 这种/ 大规模/ 结构/ 的/ 制冷/ 开销/ 以及/ 交换机/ 成本/ ,/ 这种/ 交换机/ 个数/ 的/ 较/ 高/ 比例/ 甚至/ 超过/ 服务器/ 同/ 比例/ 增长/ ,/ 显然/ 是/ 不利/ 的/ ./ 此外/ ,/ 雪花/ 结构/ 在/ 保证/ 交换机/ 的/ 低/ 数量/ 方面/ 也/ 是/ 很/ 有/ 优势/ 的/ ,/ 当/ k/ =/ 6/ 时/ ,/ 始终保持/ 交换机/ 与/ 服务器/ 的/ 比例/ 为/ 0.167/ ,/ 最坏/ 情况/ k/ =/ 3/ 时/ ,/ 也/ 可以/ 达到/ 0.333/ 的/ 低/ 比例/ ./ 3.3/ 雪花/ 结构/ 的/ 性能/ 分析/ 延时/ 3/ 个/ 方面/ 来/ 分析/ 雪花/ 结构/ 的/ 性能/ ./ 3.3/ ./ 1/ 网络/ 交换/ 容量/ 我们/ 假设/ 交换机/ 与/ 交换机/ 之间/ 的/ 带宽/ 为/ AMbps/ ,/ 交换机/ 与/ 服务器之间/ 的/ 带宽/ 为/ BMbps/ ,/ 一般/ 情况/ 下/ A/ 大于/ 等于/ B/ ./ 当/ 任意/ 2/ 个/ 服务器之间/ 需要/ 发送数据/ 时/ ,/ 这/ 2/ 个/ 服务器之间/ 的/ 带宽/ 受限于/ 二者之间/ 路径/ 上/ 的/ 最低/ 带宽/ 值/ ./ 雪花/ 结构/ 的/ 一大/ 特点/ 就是/ 用/ 较/ 少/ 的/ 交换机/ 连接/ 较/ 多/ 的/ 服务器/ ,/ 网络/ 扩展性/ 好/ ./ 同时/ ,/ 节点/ 之间/ 的/ 带宽/ 也/ 较大/ ./ 综合/ 以上/ 的/ 特点/ ,/ 该/ 结构/ 适合/ 于/ 节点/ 之间/ 有/ 频繁/ 通信/ ,/ 且/ 需要/ 较大/ 节点/ 规模/ 的/ 应用/ ./ 例如/ 在/ 该/ 结构/ 上/ 运行/ 大规模/ 数据挖掘/ 等/ ./ 3.3/ ./ 2/ 瓶颈/ 链路/ 在/ 这/ 一节/ ,/ 我们/ 从/ 网络/ 交换/ 容量/ 、/ 瓶颈/ 链路/ 以及/ 我们/ 将/ 瓶颈/ 分为/ 2/ 种/ :/ 节点/ 瓶颈/ 与/ 路径/ 瓶颈/ ./ 节点/ 瓶颈/ 是/ 指/ ,/ 某个/ 节点/ (/ 服务器/ 或者/ 交换机/ )/ 由于/ 数据流/ 量过大/ 成为/ 瓶颈/ ./ 越是/ 层级/ 低/ 的/ 节点/ 越/ 容易/ 成为/ 瓶颈/ 节点/ ./ 因此/ 我们/ 在/ 第/ 5/ 节/ 补充/ 问题/ 研究/ 里面/ 将/ 低/ 层级/ 中/ 的/ 一些/ 服务器/ 改进/ 为/ 交换机/ ,/ 其中/ 的/ 交换机/ 也/ 可以/ 换成/ 高/ 吞吐量/ 如万兆/ 交换机/ ,/ 以/ 减轻/ 数据传输/ 的/ 压力/ ./ 路径/ 瓶颈/ 是/ 指/ ,/ 2/ 个子/ 网/ 之间/ 有且/ 只有/ 一条/ 路径/ ,/ 当该/ 路径/ 断开/ 时/ ,/ 这/ 2/ 个子/ 网即/ 失去/ 连接/ ,/ 这样/ 的/ 路径/ 我们/ 称为/ 瓶颈/ 路径/ ./ 在/ 定理/ 5/ 中/ 我们/ 已经/ 证明/ ,/ Snow/ _/ n/ 中/ 任意/ 2/ 个/ 服务器/ 包含/ 并行/ 路径/ ,/ 至少/ 2/ 条/ 不/ 超过/ 22n/ 条/ ./ 因此/ 理论/ 上/ 雪花/ 结构/ 中/ 不/ 存在/ 路径/ 瓶颈/ 的/ 问题/ ./ 3.3/ ./ 3/ 延时/ RTT/ (/ Round/ -/ TripTime/ )/ 表示/ 从/ 发送/ 端/ 发送数据/ 开始/ ,/ 到/ 发送/ 端/ 收到/ 来自/ 接收端/ 的/ 确认/ (/ 接收端/ 收到/ 数据/ 后/ 便/ 立即/ 发送/ 确认/ )/ ,/ 总共/ 经历/ 的/ 时延/ ./ 当/ 2/ 点/ 之间/ 的/ RTT/ 值/ 较大/ 时/ 说明/ 这/ 2/ 点/ 之间/ 的/ 延时/ 较大/ ;/ 反之/ ,/ 则/ 说明/ 2/ 点/ 之间/ 延时/ 较/ 小/ ./ 从/ RTT/ 的/ 定义/ 可以/ 看出/ ,/ RTT/ 与/ 2/ 点/ 之间/ 的/ 最/ 短/ 路径/ 成正比/ ./ 当/ 2/ 点/ 之间/ 距离/ 较长/ 时/ ,/ RTT/ 较大/ ;/ 反之/ ,/ 则/ RTT/ 较/ 小/ ./ 我们/ 在/ 定理/ 4/ 及/ 推论/ 4/ 中/ 已经/ 得出/ 最长/ 最短/ 路径/ 为/ (/ 2n/ +/ 1/ )/ 跳/ ./ 因此/ ,/ 延时/ 为/ O/ (/ n/ )/ ./ 4/ 雪花/ 结构/ 中/ 协议/ 和/ 路由/ 策略/ 在/ 这/ 一/ 小节/ ,/ 首先/ 分析/ 雪花/ 结构/ 中/ 的/ 无/ 失效/ 路/ 前面/ 已经/ 说/ 到/ ,/ 当/ k/ =/ 3/ ,/ n/ =/ 10/ 时/ ,/ 雪花/ 结构/ 可以/ 达到/ 314/ 万个/ 服务器/ ,/ 由于/ 该/ 结构/ 中/ 的/ 服务器/ 个数/ 随着/ n/ 值/ 的/ 增加/ 呈/ 指数/ 次方/ 不断/ 增长/ ,/ 它/ 的/ 目标/ 是/ 扩展/ 连接/ 十万百万/ 量级/ 的/ 服务器/ ,/ 因此/ 基于/ 雪花/ 结构/ 的/ 数据中心/ 不/ 适合/ 使用/ 全局/ 的/ 链路/ 路由/ 机制/ ,/ 易/ 造成/ 带宽/ 瓶颈/ 和/ 单点/ 失效/ 的/ OSPF/ [/ 13/ ]/ 协议/ 自然/ 不/ 适合/ 这种/ 结构/ ./ 在/ 这/ 一节/ ,/ 我们/ 首先/ 介绍/ 无/ 失效/ 情况/ 下/ 节点/ 路由/ 情况/ ;/ 接着/ 提出/ 基于/ 雪花/ 结构/ 的/ 路由/ 协议/ ;/ 最后/ ,/ 详细/ 阐述/ 了/ 依据/ 路由/ 协议/ 的/ 节点/ 路由/ 情况/ ./ 4.1/ 无/ 失效/ 路由/ 由/ 情况/ ./ 假设/ 源/ 节点/ 为/ src/ ,/ 目的/ 节点/ 为/ des/ ./ 定理/ 2/ ./ Snow0/ 中/ 任意/ 2/ 个/ 服务器之间/ 仅/ 1/ 跳/ ./ 如图/ 2/ (/ a/ )/ 和/ (/ b/ )/ 所示/ ,/ Snow0/ 中/ 任意/ 两个/ 服务器/ 间/ 通过/ 交换机/ 即可/ 达/ ,/ 1/ 跳/ 显然/ ./ 定理/ 3/ ./ k/ =/ 3/ 时/ ,/ Snow1/ 中/ 任意/ 2/ 个/ 服务器之间/ 不/ 超过/ 2/ 跳/ ./ 当/ k/ ∈/ {/ 4/ ,/ 5/ ,/ 6/ ,/ 7/ ,/ 8/ }/ 时/ ,/ 任意/ 2/ 个/ 服务器之间/ 不/ 超过/ 3/ 跳/ ./ k/ =/ 3/ 时/ ,/ 如图/ 3/ 所示/ ,/ Snow1/ 中/ 节点/ 路由/ 可以/ 分为/ 以下/ 5/ 种/ 情况/ :/ Snow1/ 中/ 服务器/ →/ Snow0/ 中/ 服务器/ :/ 1/ 跳/ ;/ Snow0/ 中/ 服务器/ →/ Snow1/ 中/ 服务器/ :/ 1/ 跳/ ;/ Page7/ 服务器/ :/ 2/ 跳/ ;/ 服务器/ :/ 2/ 跳/ ;/ 服务器/ :/ 2/ 跳/ ./ Snow1/ 中/ 服务器/ →/ Snow0/ 中/ 服务器/ →/ Snow1/ 中/ Snow1/ 中/ 服务器/ →/ Snow0/ 中/ 服务器/ →/ Snow0/ 中/ Snow0/ 中/ 服务器/ →/ Snow0/ 中/ 服务器/ →/ Snow1/ 中/ 不/ 超过/ 2/ 跳/ 的/ 结论/ 是/ 很/ 容易/ 得到/ 的/ ./ 当/ k/ ∈/ {/ 4/ ,/ 5/ ,/ 6/ ,/ 7/ ,/ 8/ }/ 时/ ,/ 同理/ 可/ 得到/ 3/ 跳/ 结论/ ./ 定理/ 4/ ./ Snown/ 中/ 任意/ 2/ 个/ 服务器之间/ 最长/ 最短/ 路径/ 为/ (/ 2n/ +/ 1/ )/ 跳/ ./ 其中/ 最短/ 路径/ 是/ 指/ 2/ 个/ 服务器之间/ 路由/ 经过/ 的/ 最少/ 服务器/ 个数/ ./ 假设/ 源/ 节点/ src/ 位于/ Snowj/ 中/ ,/ 目的/ 节点/ des/ 位于/ Snowk/ 中/ ./ j/ 和/ k/ 都/ 小于/ 等于/ n/ ./ 此时/ ,/ 考虑/ 最长/ 最短/ 路径/ 情况/ ./ 源/ 节点/ src/ 从/ Snowj/ 逐级/ 向下/ 经由/ Snowj/ -/ 1/ ,/ Snowj/ -/ 2/ …/ 路由/ 到/ Snow0/ 中/ 的/ 服务器/ ,/ 最/ 多/ 需要/ j/ 跳/ ./ Snow0/ 中/ 的/ 服务器/ 经由/ Snow1/ ,/ Snow2/ …/ 路由/ 到/ Snowk/ 中/ 的/ 服务器/ 最/ 多/ 需要/ k/ 跳/ ./ 而/ Snow0/ 中/ 的/ 服务器/ 彼此之间/ 最多/ 1/ 跳/ ./ 因此/ Snowj/ 中/ 的/ 源/ 节点/ src/ 路由/ 到/ Snowk/ 中/ 的/ 目的/ 节点/ des/ 最长/ 最短/ 路径/ 为/ j/ +/ k/ +/ 1/ 跳/ ./ 当/ j/ 和/ k/ 都/ 取/ 最大值/ n/ 时/ ,/ src/ 与/ des/ 的/ 最长/ 最短/ 路径/ 达到/ 最大值/ 2n/ +/ 1/ 跳/ ./ 由/ 上述/ 分析/ 我们/ 还/ 可以/ 得到/ ,/ 当/ j/ 和/ k/ 不/ 同时/ 取到/ n/ 或者/ j/ 和/ k/ 不/ 相等/ 时/ ,/ src/ 与/ des/ 的/ 最长/ 最短/ 路径/ 必然/ 小于/ 等于/ 2n/ +/ 1/ 跳/ ./ 因此/ ,/ 我们/ 得到/ 推论/ 4/ ./ 推论/ 4/ ./ Snowj/ 与/ Snowk/ (/ j/ 不/ 等于/ k/ ,/ 且/ j/ 与/ k/ 均/ 小于/ 等于/ n/ )/ 中/ 任意/ 2/ 个/ 服务器之间/ 最长/ 最短/ 路径/ 上限/ 为/ 2n/ +/ 1/ 跳/ ./ 定理/ 5/ ./ Snown/ 中/ ,/ 任意/ 2/ 个/ 服务器/ 包含/ 并行/ 路径/ ,/ 至少/ 2/ 条/ ,/ 不/ 超过/ 22n/ 条/ ./ 并行/ 路径/ 是/ 指/ ,/ 2/ 个/ 服务器之间/ 同时/ 存在/ 的/ 路径/ ,/ 这些/ 路径/ 彼此之间/ 独立/ 无/ 依赖/ 关系/ ./ 我们/ 通过/ 在/ 前/ 一级/ 雪花/ 结构/ 的/ 基础/ 上/ 断开/ 所有/ 的/ 实/ 连接/ 和/ 虚/ 连接/ ,/ 添加/ Cell/ 来/ 构建/ 下/ 一级/ 雪花/ 结构/ ,/ 每/ 一个/ 添加/ 的/ Cell/ 都/ 是/ 通过/ 交换机/ 的/ 左右/ 两条/ 连接/ 才/ 加入/ 新/ 结构/ 中/ ,/ 因此/ ,/ 任意/ 2/ 个/ 服务器之间/ 至少/ 包含/ 2/ 条/ 并行/ 路径/ ./ 当/ Snowj/ 中源/ 节点/ src/ 路由/ 到/ Snowk/ 中/ 的/ 目的/ 节点/ des/ 时/ ,/ src/ 从/ Snowj/ 开始/ 经由/ Snowj/ -/ 1Snowj/ -/ 2/ …/ 路由/ 到/ Snow0/ ,/ 每/ 一次/ 从/ Snowp/ 到/ Snowq/ 总是/ 有/ 2/ 条/ 并行/ 路径/ ,/ 因此/ 至多/ 包含/ 2j/ 条/ 并行/ 路径/ ./ 同理/ ,/ Snow0/ 到/ Snowk/ 也/ 至多/ 包含/ 2k/ 条/ 路径/ ./ 因此/ ,/ 从/ Snowj/ 的/ 源/ 节点/ src/ 路由/ 到/ Snowk/ 的/ 目的/ 节点/ des/ 至多/ 有/ 2j/ +/ k/ 条/ 并行/ 路径/ ./ 当/ src/ 与/ des/ 都/ 处于/ Snown/ 时/ ,/ 两/ 节点/ 至多/ 包含/ 22n/ 条/ 并行/ 路径/ ./ 4.2/ 协议/ 4.2/ ./ 1/ 节点/ 唯一/ 标识/ 方法/ 我们/ 对/ 每/ 一个/ 服务器/ 和/ 交换机/ 进行/ 标记/ ,/ 标记/ 结构/ 为/ 〈/ 级别/ ,/ 度数/ 〉/ ./ 级别/ 表明/ 该/ 服务器/ 处于/ 雪花/ 结构/ 的/ 这个/ 级别/ 中/ ,/ 是/ 在/ 该/ 级别/ 被/ 添加/ 进/ 雪花/ 结构/ 的/ ./ 然而/ 由于/ 在/ 每个/ 级别/ 中/ 并非/ 只/ 添加/ 了/ 一个/ 节点/ ,/ 仅仅/ 级别/ 这一/ 度量/ 还/ 不足以/ 唯一/ 标识/ 雪花/ 结构/ 中/ 的/ 节点/ 位置/ ,/ 因此/ ,/ 我们/ 引入/ 度数/ 这个/ 度量/ ,/ 结合/ 级别/ 唯一/ 标识/ 雪花/ 结构/ 中/ 的/ 每/ 一个/ 服务器/ 和/ 交换机/ ./ 下面/ 详细/ 解释/ 节点/ 标识/ 的/ 方法/ ./ 如图/ 5/ 所示/ ,/ 标记/ Snow0/ 中/ 的/ 3/ 个/ 服务器/ 分别/ 为/ A/ 〈/ 0/ ,/ 0/ // 360/ 〉/ ,/ B/ 〈/ 0/ ,/ 120/ 〉/ ,/ C/ 〈/ 0/ ,/ 240/ 〉/ ./ 其中/ 第/ 1/ 位/ 表示/ 级别/ ,/ 即/ 这/ 3/ 个/ 服务器/ 均/ 处于/ Snow0/ 中/ ./ 第/ 2/ 位/ 表示/ 度数/ ,/ 这里/ 的/ 度数/ 表明/ 的/ 是/ 相对/ 位置/ ,/ 均/ 是/ 以/ Snow0/ 中/ 的/ 交换机/ 为/ 基础/ 参照物/ 得到/ 的/ 相对/ 位置/ ./ 因此/ Snow0/ 中/ 的/ 交换机/ 被/ 标记/ 为/ 〈/ 0/ ,/ 0/ 〉/ ,/ 服务器/ A/ 在/ 交换机/ 的/ 正上方/ ,/ 相对/ 度数/ 为/ 0/ °/ ,/ 依照/ 顺时针/ 方向/ ,/ 服务器/ B/ 为/ 120/ °/ ,/ 服务器/ C/ 为/ 240/ °/ ./ 这样/ Snow0/ 中/ 的/ 3/ 个/ 服务器/ 即/ 被/ 唯一/ 标识/ ./ 为了/ 区分/ 服务器/ 与/ 交换机/ ,/ 对/ 交换机/ 添加/ w/ 标记/ ,/ 即/ Snow0/ 中/ 的/ 交换机/ 标记/ 为/ S/ 〈/ 0/ ,/ 0/ ,/ w/ 〉/ ./ 需要/ 说明/ 的/ 是/ ,/ 对于/ 特殊/ 位置/ 的/ 服务器/ A/ ,/ 同时/ 标记/ 其/ 度数/ 为/ 360/ °/ ,/ 方便/ 构造/ 高级/ 雪花/ 结构/ 的/ 标识/ ./ 我们/ 在/ 3.1/ 节/ 已经/ 阐述/ 了/ 如何/ 构建/ Snow1/ ./ 这里/ ,/ 同样/ 利用/ 产生/ Snow1/ 的/ 3/ 个/ Snow0/ 服务器/ 来/ 产生/ Snow1/ 的/ 标识/ ./ 如图/ 6/ 所示/ ,/ Snow1/ 中/ 的/ 交换机/ D/ 所处/ Cell/ 添加/ 在/ 服务器/ A/ 、/ B/ 之间/ 并/ 与其/ 直接/ 相连/ ,/ 利用/ A/ 、/ B/ 来/ 产生/ D/ 的/ 标识/ ,/ 记/ D/ 的/ 标识/ 为/ 〈/ 1/ ,/ 60/ ,/ w/ 〉/ ,/ 即/ Snow0/ 构建/ 产生/ Snow1/ ,/ 级别/ 为/ 1/ ,/ 度数/ 为/ A/ 、/ B/ 和/ 的/ 一半/ ./ 用/ 这/ 一/ 位置/ 同时/ 标记/ 交换机/ D/ 的/ 正上方/ (/ 相对/ 于/ D/ 的/ 位置/ )/ 服务器/ E/ 为/ 〈/ 1/ ,/ 60/ 〉/ ./ 前面/ 说/ 到/ 服务器/ A/ 的/ 度数/ 同时/ 标记/ 为/ 360/ °/ ,/ 当/ A/ 、/ C/ 用以/ 标识/ 交换机/ M/ 时/ ,/ 采用/ A/ 的/ 360/ °/ 构造/ M/ 为/ 〈/ 1/ ,/ 300/ ,/ w/ 〉/ ./ 即/ A/ 与/ 180/ °/ 内/ 的/ 节点/ 构造/ 新/ 标识/ 时/ 采用/ 0/ °/ ,/ 与/ 180/ °/ ~/ 360/ °/ 内/ 的/ 节点/ 构造/ 新/ 标识/ 时/ 采用/ 360/ °/ ./ Page8/ 这样/ 做/ 的/ 好处/ 是/ 可以/ 形成/ 一个/ 规范化/ 的/ 节点/ 唯一/ 标识/ 方法/ ./ 4.2/ ./ 2/ 请求/ 数据包/ 的/ 结构/ 定义/ 定义/ 源/ 节点/ src/ 发送/ 的/ 请求/ 数据包/ 中/ ,/ 包含/ src/ 的/ 标识/ 信息/ ,/ 数据包/ ID/ 以及/ 目的/ 节点/ des/ 的/ 标识/ 信息/ ./ 这样/ 一个/ 请求/ 数据包/ 可以/ 通过/ 其/ 自身/ ID/ 与/ src/ 的/ 标识/ 来/ 唯一/ 标记/ ./ 当/ 转发/ 数据包/ 的/ 路由/ 节点/ 发现/ 已经/ 转发/ 过/ 某/ 一/ 数据包/ 时/ ,/ 即/ 放弃/ 该/ 数据包/ 不再/ 转发/ 以/ 降低/ 网络流量/ ./ 当/ 目标/ 节点/ des/ 收到/ 请求/ 数据包/ 后/ ,/ 也/ 可以/ 根据/ 包中/ 携带/ 的/ src/ 的/ 标识/ 信息/ 获得/ 请求/ 节点/ 的/ 相关/ 信息/ ./ 具体/ 的/ 路由/ 机制/ 在/ 4.3/ 节/ 详细/ 阐述/ ./ 4.3/ 路由/ 策略/ 我们/ 定义/ 源/ 节点/ src/ 〈/ j/ ,/ a/ 〉/ 和/ 目的/ 节点/ des/ 〈/ k/ ,/ b/ 〉/ ./ 当/ src/ 发送/ 请求/ 数据包/ 时/ ,/ 包内/ 携带/ 的/ 信息/ 包含/ (/ ID/ ,/ 〈/ j/ ,/ a/ 〉/ ,/ 〈/ k/ ,/ b/ 〉/ )/ ./ 如图/ 7/ 所示/ ,/ 在/ 该/ 雪花/ 结构/ 中/ ,/ 虚线/ 表示/ 中间/ 省略/ 的/ 若干/ 级别/ ./ 左/ 节点/ 标记/ 为/ src/ 〈/ j/ ,/ a/ 〉/ ,/ 右/ 节点/ 标记/ 为/ des/ 〈/ k/ ,/ b/ 〉/ ./ 当/ src/ 要/ 发送/ 数据包/ 给/ des/ 时/ ,/ 首先/ 查看/ des/ 的/ 度数/ b/ 的/ 所属/ 范围/ ./ 由于/ b/ 属于/ 0/ ~/ 120/ °/ 范围/ 则/ 通过/ 服务器/ A/ 或者/ C/ 路由/ 到/ B/ ,/ 再/ 经由/ 中间/ 若干/ 交换器/ 不断/ 地/ 接近/ des/ ,/ 最后/ 从/ 服务器/ G/ 到达/ des/ ./ 根据/ 度数/ b/ 可以/ 确定/ 路由/ 的/ 方向/ ,/ 根据/ 级别/ k/ 可以/ 确定/ 路由/ 的/ 大概/ 路径/ 长度/ ./ 以图/ 8/ 为例/ ,/ src/ 需要/ 发送/ 请求/ 包给/ des/ 时/ ,/ 首先/ 查看/ des/ 的/ 度数/ b/ ,/ 这里/ 为/ 45/ °/ ./ src/ 第/ 1/ 步/ 经由/ 交换机/ M/ 〈/ 1/ ,/ 300/ ,/ w/ 〉/ 可以/ 路由/ 到/ N/ 或者/ C/ ,/ 由于/ N/ 更/ 接近/ 服务器/ A/ 〈/ 0/ ,/ 0/ // 360/ 〉/ ,/ A/ 同时/ 为/ 0/ °/ 较/ C/ 更/ 靠近/ des/ ,/ 因此/ src/ 选择/ M/ —/ N/ —/ A/ 的/ 路径/ ./ A/ 可达/ H/ 〈/ 2/ ,/ 30/ ,/ w/ 〉/ ,/ 虽然/ 与/ des/ 同/ 层级/ ,/ 但是/ 度数/ 较/ 低/ ,/ 继续/ 路由/ 达/ 交换机/ D/ 〈/ 1/ ,/ 60/ ,/ w/ 〉/ ./ D/ 可达/ K/ 〈/ 2/ ,/ 90/ ,/ w/ 〉/ ,/ 虽然/ K/ 与/ des/ 同级/ 但是/ 度数/ 较大/ ,/ 进一步/ 发现/ D/ 连接/ 的/ 两个/ 服务器/ E/ 〈/ 1/ ,/ 60/ 〉/ 和/ G/ 〈/ 1/ ,/ 30/ 〉/ 均/ 属于/ Snow1/ ,/ E/ 和/ G/ 可/ 构建/ Snow2/ 级/ ,/ 且/ 45/ °/ 属于/ 30/ °/ ~/ 60/ °/ 之间/ ,/ 因此/ ,/ D/ 经由/ E/ 或者/ G/ 到/ 交换机/ F/ 〈/ 2/ ,/ 45/ ,/ w/ 〉/ ,/ 最后/ 达/ des/ ./ 5/ 补充/ 问题/ 研究/ 当/ 雪花/ 级别/ 不断扩大/ ,/ 结构/ 中/ 的/ 服务器/ 数目/ 不断/ 增多/ ,/ 达到/ 百万/ 级别/ 时/ ,/ 路由/ 的/ 消息/ 数量/ 剧增/ ,/ 此时/ Snow1/ 中/ 的/ 12/ 个/ 服务器/ 显然/ 会/ 负载/ 较重/ 的/ 信息/ 转发/ 任务/ ,/ 因此/ 我们/ 对/ 上述/ 提出/ 的/ 雪花/ 结构/ 略微/ 改进/ ,/ 将/ Snow1/ 中/ 的/ 12/ 台/ 服务器/ 替换/ 为/ 交换机/ ,/ 如图/ 9/ 所示/ ,/ 以/ 缓解/ 低级/ 雪花/ 结构/ 的/ 负载/ 强度/ ,/ 提高/ 消息/ 转发/ 速度/ ./ 我们/ 在/ Snown/ -/ 1/ 的/ 基础/ 上/ 添加/ 若干个/ Cell/ 形成/ Snown/ ./ 此时/ ,/ 若/ 新/ 添加/ 的/ Cell/ 中/ 的/ 交换机/ 发生/ 故障/ 时/ ,/ 会/ 导致/ 该/ 交换机/ 连接/ 的/ 3/ 台/ 服务器/ 完全/ 脱离/ 雪花/ 结构/ ./ 当/ 这种/ 情况/ 出现/ 较为/ 严重/ 时/ ,/ Snown/ 即/ 退化/ 为/ Snown/ -/ 1/ 级/ 结构/ ,/ 可用/ 服务器/ 数量/ 显著/ 受到/ 影响/ ./ 而/ 这种/ 影响/ 源于/ 交换机/ 并非/ 服务器/ 本身/ 造成/ ./ 为了/ 避/ Page9/ 免/ 这种/ 情况/ 的/ 出现/ ,/ 我们/ 补充规定/ ,/ 在/ 新/ 添加/ 的/ Cell/ 中/ ,/ 3/ 台/ 服务器/ 轮流/ 每/ 20s/ 发送/ 一个/ 查询/ 交换机/ 是否/ 存活/ 的/ 消息/ ,/ 这样/ 每个/ 服务器/ 平均/ 1min/ 发送/ 一次/ 消息/ ./ 当/ 3/ 台/ 服务器/ 不能/ 连通/ 时/ 表明/ 交换机/ 出现/ 故障/ ,/ 服务器/ 已经/ 脱离/ 雪花/ 结构/ ,/ 这时/ 需要/ 检查/ 该/ 交换机/ ,/ 确保/ 其/ 稳定/ 工作/ ./ 6/ 实验/ 模拟/ 在/ 这/ 一节/ ,/ 我们/ 采用/ 模拟/ 的/ 方法/ 来/ 评估/ 雪花/ 结构/ 的/ 性能/ ./ 模拟程序/ 采用/ Java/ 编写/ ,/ 开发工具/ 为/ Eclipse3/ ./ 5.0/ ,/ 在/ 一台/ 联想/ X200/ 笔记本/ 上/ 运行/ ./ 场景/ 1/ ./ 无/ 节点/ 失效/ 时/ ,/ 不同/ 层级/ 节点/ 总数/ 及/ 平均/ 最短/ 路径/ 长度/ ./ 首先/ 来看/ 无/ 节点/ 失效/ 情况/ ./ 表/ 1/ 显示/ 了/ 当/ k/ =/ 3/ 时/ ,/ Snow0/ 中/ 的/ 服务器/ 到/ 其余/ 节点/ 的/ 平均/ 最短/ 路径/ 情况/ ./ 由于/ 未/ 考虑/ 节点/ 失效/ 情况/ ,/ 因此/ 不可/ 达/ 节点/ 数均/ 为/ 0/ ./ 由/ 平均/ 最短/ 路径/ 长度/ 可以/ 发现/ ,/ 在/ Snow4/ 的/ 范围/ 内/ ,/ 平均/ 路径/ 可以/ 保持/ 在/ 3/ 跳内/ ,/ 与/ 4.1/ 节中/ 的/ 定理/ 4/ 相符/ ,/ 但是/ 实验/ 结果/ 优于/ 定理/ 4/ 的/ 理论/ 推导/ 结果/ ./ 表/ 1/ 无/ 节点/ 失效/ 情况/ 下/ ,/ 各个/ 节点/ 到/ Snow0/ 中/ 雪花/ 级别/ Snow24816470801/ ./ 702Snow31926419104162/ ./ 178Snow4768256767020482/ ./ 670/ 场景/ 2/ ./ 有/ 节点/ 失效/ 时/ ,/ 平均/ 最短/ 路径/ 长度/ 与/ 路径/ 失效率/ ./ 这里/ 的/ 节点/ 失效/ 是/ 指/ 服务器/ 故障/ ./ 当/ k/ =/ 3/ 时/ ,/ 我们/ 详细/ 设置/ 了/ 节点/ 失效/ 比例/ ,/ 测试/ 了/ Snow4/ 中/ ,/ 随着/ 节点/ 失效/ 比例/ 的/ 增加/ ,/ 平均/ 最短/ 路径/ 长度/ 变化/ 情况/ ./ 从图/ 10/ 可以/ 看出/ ,/ 当/ 节点/ 失效/ 保持/ 在/ 0.05/ ~/ 0.30/ 时/ ,/ 平均/ 路径/ 长度/ 波动/ 不/ 大/ ,/ 基本/ 处于/ 2.6/ ~/ 2.7/ 之间/ ./ 当/ k/ =/ 3/ 时/ ,/ 我们/ 测试/ 在/ 了/ Snow4/ 中/ 随着/ 节点/ 失效率/ 的/ 增加/ ,/ 路径/ 失效率/ 的/ 情况/ ,/ 并/ 与/ DCell/ [/ 6/ ]/ 中/ 的/ 实验/ 结果/ 做/ 了/ 对比/ ./ 图/ 11/ 所示/ 为/ Snow4/ 与/ DCell4/ 的/ 路径/ 失效/ 对比/ 图/ ./ 从图/ 中/ 可以/ 看出/ ,/ Snow/ 的/ 路径/ 失效率/ 围绕/ DCell/ 上下/ 波动/ ,/ 差别/ 不大/ ./ 场景/ 3/ ./ 有/ 链路/ 失效/ 时/ ,/ 平均/ 最短/ 路径/ 长度/ 与/ 路径/ 失效率/ ./ 这里/ 的/ 链路/ 失效/ 是/ 指/ 交换机/ 与/ 服务器之间/ 的/ 链接/ 断开/ ,/ 或者/ 交换机/ 故障/ ,/ 并非/ 服务器/ 本身/ 故障/ ./ 从图/ 12/ 可以/ 看出/ ,/ 随着/ 链路/ 失效率/ 的/ 增加/ ,/ 平均/ 最短/ 路径/ 长度/ 变化/ 幅度/ 不大/ ./ 链路/ 失效率/ 在/ 0.2/ 以内/ 时/ ,/ 平均/ 最短/ 路径/ 长度/ 始终/ 在/ 2.6/ ~/ 2.9/ 之间/ ./ Page10/ 当/ k/ =/ 3/ 时/ ,/ 我们/ 测试/ 在/ 了/ Snow4/ 中/ 随着/ 链路/ 失效率/ 的/ 增加/ ,/ 路径/ 失效率/ 的/ 变化/ 情况/ ,/ 同样/ 与/ DCell/ [/ 6/ ]/ 中/ 的/ 实验/ 结果/ 做/ 了/ 对比/ ./ 图/ 13/ 所示/ 为/ Snow4/ 与/ DCell4/ 的/ 路径/ 失效/ 对比/ 图/ ./ 从图/ 中/ 可以/ 看出/ ,/ Snow/ 的/ 路径/ 失效率/ 比较稳定/ ,/ 始终保持/ 0.001/ ~/ 0.004/ 之间/ ./ 最后/ ,/ 我们/ 综合/ 比较/ 了/ DCell/ 、/ BCube/ 以及/ Snow/ ,/ 如表/ 2/ 所示/ ./ 网络结构/ DCellBCubeSnow/ 交换机/ 与/ 服务器/ 的/ 比例/ 径/ 失效/ 的/ 关系/ 较/ 好/ 较/ 好/ 与/ DCell/ 效果/ 节点/ 失效/ 与/ 路/ 链路/ 失效/ 与/ 路径/ 失效/ 的/ 关系/ 较/ 好/ 较/ 好/ 较/ DCell/ 失效率/ 网络/ 吞吐量/ 7/ 结束语/ 本文/ 分析/ 了/ 传统/ 数据中心/ 的/ 不足/ 以及/ 新型/ 数据中心/ 具备/ 的/ 新/ 特点/ ,/ 借鉴/ 已有/ 数据中心/ 结构/ ,/ 依据/ 著名/ 科赫/ 曲线/ ,/ 提出/ 了/ 新型/ 数据中心/ 网络结构/ —/ —/ —/ 雪花/ 结构/ ./ 该/ 结构/ 充分考虑/ 了/ 数据中心/ 的/ 可扩展性/ ,/ 在/ 保证/ 交换机/ 与/ 服务器/ 较/ 低/ 数量/ 比例/ 的/ 前提/ 下/ ,/ 可以/ 在/ 较/ 短/ 的/ 平均/ 路径/ 内/ 实现/ 节点/ 路由/ 机制/ ,/ 具有/ 较/ 小/ 的/ 网络/ 开销/ ./ 

