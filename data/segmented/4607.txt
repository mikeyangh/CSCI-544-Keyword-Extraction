Page1/ 可信/ 的/ 云/ 计算/ 运行/ 环境/ 构建/ 和/ 审计/ 1/ )/ (/ 北京邮电大学/ 软件/ 学院/ 北京/ 100876/ )/ 2/ )/ (/ 北京邮电大学/ 计算机/ 学院/ 北京/ 100876/ )/ 3/ )/ (/ 北京邮电大学/ 可信/ 分布式计算/ 与/ 服务/ 教育部/ 重点/ 实验室/ 北京/ 100876/ )/ 摘要/ 可信/ 的/ 云/ 计算/ 运行/ 环境/ 很大/ 程度/ 决定/ 了/ 云/ 服务/ 的/ 推广/ 和/ 有效/ 使用/ ./ 采用/ 可信计算/ 技术/ 的/ 基本/ 假设/ 是/ 所有/ 在/ 运行/ 环境/ 中/ 安装/ 的/ 内核模块/ 和/ 应用程序/ 都/ 需要/ 事先/ 指定/ 并/ 已知/ 其/ 执行/ 代码/ 的/ 完整性/ 信息/ ./ 这个/ 假设/ 在/ 云/ 用户/ 实际/ 使用/ 时/ 往往/ 是/ 不/ 可能/ 的/ ./ 所以/ 该文/ 提出/ 了/ 一种/ 将/ 虚拟/ 可信/ 根/ vTPM/ 和/ 可信/ 审计/ 技术/ 结合/ 起来/ 的/ 用户/ 可信/ 运行/ 环境/ 构建/ 与/ 审计/ 机制/ ./ 对于/ 体系结构/ 栈中/ 可/ 事先/ 固定/ 的/ 、/ 在/ 启动/ 和/ 运行/ 时/ 不变/ 的/ 组件/ ,/ 通过/ vTPM/ 作/ 可信/ 根/ 保证/ 可信/ 启动/ ;/ 对于/ 运行/ 过程/ 中/ 变化/ 的/ 、/ 无法/ 事先/ 确定/ 的/ 组件/ ,/ 文中/ 提出/ 了/ 一种/ 可信/ 审计/ 的/ 方法/ ,/ 即/ 对/ 用户/ 虚拟机/ 的/ 运行/ 态/ 环境/ 进行/ 证据/ 收集/ 和/ 证据/ 审计/ ,/ 监测/ 实际/ 使用/ 中/ 用户/ 运行/ 环境/ 的/ 可信性/ ./ 若/ 用户/ 运行/ 环境/ 处于/ 不可/ 信/ 状态/ ,/ 则/ 及时/ 通知/ 用户/ 采取相应/ 措施/ ./ 最后/ 文中/ 基于/ 该/ 可信/ 机制/ 的/ 原型/ 系统对/ 其/ 有效性/ 和/ 性能/ 代价/ 进行/ 定量/ 测试/ 和/ 评价/ ,/ 实验/ 结果表明/ :/ 该/ 机制/ 针对/ 典型/ 的/ 不可/ 信/ 威胁/ 是/ 有效/ 的/ ,/ 且/ 引入/ 的/ 性能/ 代价/ 对/ 用户/ 实际/ 使用/ 的/ 影响/ 可以/ 忽略/ ./ 关键词/ 云/ 计算/ ;/ 可信/ 审计/ ;/ 虚拟/ 可信/ 平台/ 模块/ ;/ 可信计算/ 1/ 引言/ 云/ 服务/ 的/ 推广/ 使用/ 需要/ 云/ 计算/ 的/ 可信性/ [/ 1/ -/ 2/ ]/ ./ 但云/ 计算/ 提供/ 给/ 用户/ (/ Tenant/ )/ 的/ 运行/ 环境/ 是/ 以/ 虚拟机/ 作为/ 载体/ 的/ [/ 3/ ]/ ,/ 用户/ 的/ 运行/ 环境/ 和/ 数据/ 都/ 存放/ 在/ 云端/ ,/ 从而/ 失去/ 了/ 对/ 物理/ 环境/ 的/ 直接/ 控制/ ,/ 云/ 计算/ 是否/ 可信/ 是/ 云/ 服务/ 需要/ 面对/ 的/ 重要/ 问题/ ./ 如何/ 为/ 用户/ 提供/ 可信/ 的/ 云/ 计算/ 服务/ ,/ 总结/ 起来/ 要/ 面临/ 的/ 技术/ 挑战/ 如下/ :/ (/ 1/ )/ 在/ 云/ 计算/ 模式/ 下/ ,/ 控制权/ 在/ 云/ 提供商/ (/ CloudProvider/ )/ 和/ 用户/ 之间/ 进行/ 了/ 分割/ ./ 云/ 提供商/ 单方面/ 申明/ 可信/ 很难/ 让/ 用户/ 信服/ ./ 所以/ 用户/ 运行/ 环境/ 的/ 可信性/ ,/ 对于/ 用户/ 或/ 独立/ 第三方/ 而言/ 应该/ 是/ 可验证/ 的/ ./ 云/ 提供商/ 为了/ 吸引/ 潜在用户/ ,/ 也/ 倾向/ 于/ 证明/ 自己/ 是/ 可信/ 的/ ./ 然而/ ,/ 用户/ 以/ 虚拟机/ 终端/ 远程/ 连接/ 虚拟机/ 进行/ 管理/ 和/ 使用/ ,/ 或/ 管理/ 运行/ 在/ 云/ 提供商/ 的/ 平台/ 之上/ 的/ 程序/ 或/ 任务/ ./ 其/ 对/ 运行/ 虚拟机/ 的/ 物理/ 硬件/ 或云/ 平台/ 信息/ 的/ 了解/ 是/ 有限/ 的/ ,/ 更/ 很/ 难/ 知晓/ 云/ 平台/ 是/ 怎样/ 组织/ 和/ 实现/ 的/ ./ (/ 2/ )/ 传统/ 的/ 可信计算/ (/ TrustedComputing/ )/ 技术/ 利用/ 可/ 信任/ 基和可/ 信任/ 链/ ,/ 通过/ 审计/ 验证/ 可/ 保证/ 服务器/ 的/ 启动/ 过程/ 是/ 安全/ 可信/ 的/ ./ 但云/ 计算/ 面临/ 的/ 问题/ 在于/ :/ 用户/ 的/ 运行/ 环境/ 以/ 虚拟机/ 为/ 载体/ ,/ 但/ 仅仅/ 保证/ 服务器/ 的/ 可信/ 启动/ 是/ 不够/ 的/ ,/ 还要/ 保证/ 虚拟机/ 运行/ 环境/ 安全/ 可信/ ,/ 没/ 受到/ 恶意/ 篡改/ 或/ 窃听/ ./ 为了/ 解决/ 此/ 问题/ ,/ 一种/ 方法/ 是/ 扩展/ 可/ 信任/ 链/ (/ TrustedChain/ )/ ,/ 将/ 其/ 扩展/ 到/ 虚拟机/ 内部/ ,/ 如/ vTPM/ (/ virtualTrustedPlatformModule/ )/ [/ 4/ ]/ ./ 然而/ ,/ 扩展/ 可/ 信任/ 链/ 的/ 方法/ 基于/ 一个/ 基本/ 假设/ ,/ 即/ 所有/ 在/ 用户/ 环境/ 中/ 安装/ 的/ 内核模块/ 和/ 应用程序/ 都/ 需要/ 事先/ 指定/ 并/ 已知/ 其/ 执行/ 代码/ 的/ 完整性/ 信息/ (/ 多/ 是/ 对/ 内核/ 或/ 应用程序/ 的/ 执行/ 代码/ 计算/ 其/ Hash/ 摘要/ 值/ )/ ./ 这个/ 假设/ 在/ 云/ 用户/ 实际/ 使用/ 中/ 往往/ 不/ 成立/ ./ 针对/ 以上/ 挑战/ ,/ 本文/ 提出/ 了/ 一种/ 将/ 虚拟/ 可信/ 根/ vTPM/ 和/ 可信/ 审计/ 技术/ 结合/ 起来/ 的/ 用户/ 可信/ 运行/ 环境/ 构建/ 与/ 审计/ 机制/ ./ 通过/ vTPM/ 可信/ 根/ ,/ 保证/ 虚拟机/ 在/ 启动/ 过程/ 中/ BIOS/ (/ BasicInputOutputSystem/ )/ 、/ 启动/ 程序/ 、/ 操作系统/ 内核/ 等/ 体系结构/ 栈/ 底层/ 的/ 完整性/ ;/ 通过/ 可信/ 审计/ 的/ 方法/ 对/ 用户/ 虚拟机/ 的/ 运行/ 态/ 环境/ 进行/ 证据/ 收集/ 和/ 证据/ 审计/ (/ 什么/ 时候/ 收集/ 证据/ 和/ 进行/ 可信/ 审计/ 可以/ 根据/ 实际/ 情况/ 制定/ 相应/ 策略/ ,/ 如/ 周期性/ 或/ 事件/ 触发/ 的/ 收集/ 和/ 审记/ )/ ,/ 及时/ 检测/ 在/ 实际/ 使用/ 中/ 无法/ 事先/ 固定/ 的/ 用户/ 运行/ 环境/ 的/ 可信性/ ./ 若/ 用户/ 运行/ 环境/ 处于/ 不可/ 信/ 状态/ ,/ 则/ 及时/ 通知/ 用户/ ,/ 并/ 采取相应/ 措施/ ./ 本文/ 第/ 2/ 节/ 介绍/ 和/ 分析/ 国内外/ 关于/ 云/ 计算/ 可信/ 运行/ 环境/ 的/ 相关/ 研究/ 工作/ ;/ 第/ 3/ 节/ 详细描述/ 本文/ 设计/ 的/ 可信/ 的/ 用户/ 运行/ 环境/ 的/ 构建/ 和/ 审计/ 机制/ ;/ 第/ 4/ 节/ 给出/ 基于/ 上述/ 机制/ 的/ 原型/ 系统/ 实现/ 过程/ 以及/ 对/ 上述/ 机制/ 的/ 有效性/ 和/ 引入/ 的/ 性能/ 代价/ 进行/ 实验/ 评价/ 和/ 分析/ ;/ 第/ 5/ 节对/ 本文/ 工作/ 进行/ 总结/ ./ 2/ 相关/ 工作/ 对于/ 如何/ 构建/ 可信/ 的/ 云/ 计算/ 运行/ 环境/ ,/ 目前/ 主要/ 有/ 两类/ 工作/ ./ 第/ 1/ 类/ 工作/ 是从/ 虚拟机/ 管理器/ 出发/ ,/ 设计/ TVMM/ (/ TrustedVirtualMachineMonitor/ )/ [/ 3/ ]/ ,/ 把/ 虚拟机/ 管理器/ 作为/ 可/ 信任/ 基/ TCB/ (/ TrustedCodeBase/ )/ ,/ 然后/ 扩展/ 可/ 信任/ 链/ (/ TrustedChain/ )/ ,/ 将/ 其/ 扩展/ 到/ 虚拟机/ 内部/ ./ Terra/ 系统/ [/ 5/ ]/ 在/ 可信/ 的/ 虚拟机/ 管理器/ 上/ 运行/ 不同/ 的/ 虚拟机/ 系统/ ,/ 使得/ 不同/ 应用程序/ 的/ 运行/ 环境/ 也/ 不/ 相同/ ./ 该/ 系统/ 由/ Garfinkel/ 等/ 人/ [/ 5/ ]/ 在/ 非/ 开源/ 商用/ 虚拟机/ 管理器/ VMwareGSX/ 上/ 设计/ 实现/ ,/ 不/ 开源/ ,/ 不利于/ 推广/ ./ PVI/ (/ PrivateVirtualInfrastructure/ )/ 是/ 一种/ 新/ 的/ 策略管理/ 安全/ 模型/ ,/ 由/ Krautheim/ [/ 6/ ]/ 主要/ 针对/ 云/ 计算/ 提出/ ,/ 这种/ 管理/ 与/ 安全/ 模型/ 通过/ 划分/ 云/ 计算/ 中/ 服务提供商/ 和/ 客户/ 的/ 安全/ 责任/ ,/ 降低/ 了/ 各自/ 的/ 安全/ 风险/ ./ Khan/ 等/ 人/ [/ 7/ ]/ 利用/ Eucalyptus/ 云/ 平台/ ,/ 通过/ 远程/ 验证/ 虚拟机/ 尤其/ 是/ 存储/ 控制器/ (/ SC/ )/ 的/ 完整性/ 来/ 保证/ 与/ VM/ (/ VirtualMachine/ )/ 绑定/ 的/ 虚拟存储/ 环境/ 也/ 是/ 可信/ 的/ ./ 这种/ 可信计算/ 机制/ 不/ 考虑/ 对/ 用户/ 数据/ 的/ 保护/ ,/ 并且/ 由于/ 数据/ 的/ 动态变化/ ,/ 从而/ 该/ 机制/ 无法/ 真正/ 保护/ 数据/ 的/ 完整性/ 、/ 隐私/ 性/ 等/ ./ Cheng/ 等/ 人/ [/ 8/ ]/ 基于/ Xen/ ,/ 在/ 假定/ 云/ 提供商/ 可信/ 、/ 云/ 的/ 服务提供商/ 不可/ 信/ 的/ 前提/ 下/ ,/ 设计/ 和/ 实现/ 了/ 一种/ 可信/ 的/ 虚拟机/ 运行/ 平台/ ./ 用户/ 可以/ 按照/ 完整性/ 要求/ 保存/ 敏感数据/ ,/ 只有/ 用户/ 信任/ 的/ 程序/ 才能/ 访问/ 敏感数据/ ,/ 并/ 提供/ 内存保护/ 机制/ ./ 但是/ 这种/ 方案/ 需要/ 修改/ VMM/ (/ VirtualMachineMonitor/ )/ ,/ 故/ 带来/ 很/ 高/ 的/ 复杂性/ ,/ 且/ 不/ 具有/ 通用性/ ./ 第/ 2/ 类/ 工作/ 是/ 扩展/ 可/ 信任/ 链/ (/ TrustedChain/ )/ ,/ 在/ 可信/ 的/ 服务器/ 基础/ 之上/ ,/ 将/ 可/ 信任/ 链/ 扩展/ 到/ 虚拟机/ 内部/ ,/ 如/ vTPM/ (/ virtualTrustedPlatformModule/ )/ ./ Berger/ 等/ 人/ [/ 4/ ]/ 通过/ Xen/ 虚拟机/ 管理器/ ,/ 利用/ 硬/ Page3/ 件/ 虚拟化/ 技术/ 在/ 虚拟化/ 平台/ 上/ 为/ 每个/ 虚拟机/ 创建/ 一个/ 虚拟/ 的/ TPM/ 实例/ ,/ 在/ dom0/ 端/ 通过/ 虚拟/ TPM/ 管理器/ 管理/ 虚拟机/ 中/ 虚拟/ 的/ TPM/ 实例/ ,/ 并/ 响应/ 其/ 发出/ 的/ 请求/ ./ Stumpf/ 等/ 人/ [/ 9/ ]/ 通过/ 硬件/ TPM/ (/ TrustedPlatformModule/ )/ 复用/ 的/ 方式/ ,/ 在/ 硬件/ TPM/ 上/ 为/ 每个/ 虚拟机/ 构建/ 各自/ 不会/ 相互/ 干扰/ 的/ TPM/ 使用/ 环境/ ./ 这种/ 方式/ 使/ 机制/ 关系/ 非常复杂/ ,/ 可/ 信任/ 链/ 加长/ ./ Paul/ 等/ 人/ [/ 10/ ]/ 采用/ 虚拟机/ 共享/ TPM/ 的/ 方式/ ,/ 通过/ 修改/ 虚拟机/ 管理器/ 实现/ ,/ 导致/ 可/ 信任/ 链较/ 长/ ,/ 其/ 验证/ 比较/ 繁琐/ ./ Kursawe/ 等/ 人/ [/ 11/ ]/ 指出/ 设计/ 和/ 实现/ TPM/ 应/ 尽量/ 简单/ ,/ 认证/ 方式/ 不能/ 过于/ 复杂/ ./ 他们/ 重新/ 定义/ 可信/ 边界/ ,/ 设计/ 和/ 实现/ 了/ uTPM/ ,/ 降低/ 了/ 使用/ 的/ 复杂度/ ,/ 并且/ 支持/ 不同/ 的/ 运行/ 环境/ ./ 但/ 这种/ 方式/ 中/ 部分/ 数据/ 容易/ 暴露/ uTPM/ 的/ 硬件/ 信息/ ,/ 如/ 远程/ 认证/ 签名/ 数据/ ./ 除/ 以上/ 工作/ 外/ ,/ 国内外/ 学者/ 还/ 做/ 了/ 其他/ 相关/ 的/ 研究/ 工作/ ,/ Liu/ 等/ 人/ [/ 12/ ]/ 基于/ 完整性/ 度量/ 架构/ 技术/ IMA/ (/ IntegrityMeasurementArchitecture/ )/ [/ 13/ ]/ 设计/ 了/ 一种/ 动态/ 度量/ 架构/ ,/ 可以/ 度量/ 虚拟机/ 运行/ 时/ 的/ 完整性/ ./ Bertholon/ 等/ 人/ [/ 14/ ]/ 基于/ TPM/ 模块/ 实施方案/ 应对/ IaaS/ 云/ 平台/ 中/ 的/ 可信/ 和/ 完整性/ 问题/ ,/ 提出/ 了/ 两个/ 协议/ ,/ 前者/ 协议/ 为/ 基于/ 硬件/ TPM/ 的/ 远程/ 资源/ 验证/ 协议/ TCRR/ (/ TPM/ -/ basedCertificationofaRemoteResource/ )/ ,/ 保证/ 虚拟机/ 管理器/ 的/ 完整性/ ;/ 后者/ 协议/ 为/ 基于/ 虚拟/ TPM/ 的/ VerifyMyVM/ 协议/ ,/ 验证/ 虚拟机/ 的/ 完整性/ ./ 但/ 上述/ 方法/ 需要/ 改动/ 虚拟机/ ,/ 在/ 虚拟机/ 中/ 安装/ 内核模块/ 和/ 用户程序/ ,/ 且/ 与/ 用户/ 虚拟机/ 操作系统/ 相关/ ,/ 不利于/ 推广/ ./ 3/ 用户/ 可信/ 运行/ 环境/ 构建/ 与/ 审计/ 机制/ 在/ 云/ 计算/ 模式/ 下/ ,/ 虚拟机/ 是/ 运行/ 用户程序/ 或/ 任务/ 的/ 主要/ 载体/ ,/ 所以/ 保证/ 虚拟机/ 运行/ 环境/ 的/ 可信性/ 才能/ 保证/ 云/ 计算/ 的/ 可信性/ ./ 影响/ 用户/ 运行/ 环境/ 可信性/ 的/ 典型/ 因素/ 如/ :/ 虚拟机/ 镜像/ 遭受/ 篡改/ 和/ 破坏/ ;/ 运行/ 的/ 虚拟机/ 实例/ 被/ 替换/ 或者/ 迁移/ ;/ 用户/ 虚拟机/ 中/ 安装/ 有/ 恶意/ 的/ 内核/ 级/ 或/ 用户/ 级/ 程序/ ;/ 虚拟机/ 实例/ 受到/ 外来/ 攻击/ 等/ ./ 而云/ 提供商/ 为了/ 争取/ 用户/ 而/ 趋向于/ 为/ 用户/ 环境/ 的/ 可信性/ 提供/ 支持/ 和/ 证据/ ,/ 所以/ 本文/ 跟/ 同类/ 工作/ 采用/ 同样/ 的/ 假设/ [/ 4/ ,/ 13/ ,/ 15/ ]/ ,/ 即/ :/ 云/ 提供商/ 的/ 物理/ 服务器/ 是/ 可信/ 的/ ,/ 不能/ 随意/ 安装/ 恶意程序/ ,/ 同时/ 云/ 提供商/ 的/ 物理/ 硬件/ 也/ 是/ 安全/ 可信/ 的/ ,/ 没有/ 被/ 恶意/ 篡改/ ,/ 并且/ 有/ 严格/ 的/ 控制策略/ 保护/ 其/ 完整性/ ,/ 防止/ 如/ 冷启动/ 攻击/ (/ Coldbootattack/ )/ 等/ 硬件/ 攻击/ ./ 3.1/ 体系结构/ 可信/ 的/ 云/ 用户/ 运行/ 环境/ 主要/ 涉及/ 两个/ 机制/ ,/ 即可/ 信/ 的/ 体系结构/ 栈/ 构建/ 和/ 运行/ 时/ 可信性/ 审计/ ./ 前者/ 通过/ 扩展/ 可/ 信任/ 链/ ,/ 在/ 可信/ 虚拟机/ 管理器/ VMM/ (/ VirtualMachineMonitor/ )/ 基础/ 之上/ ,/ 通过/ vTPM/ 将/ 可信/ 机制/ 传递/ 到/ 虚拟机/ 内部/ ,/ 即/ 用户/ 使用/ 的/ 虚拟机/ 运行/ 环境/ ;/ 后者/ 则/ 在/ 物理/ 服务器/ Host/ 中/ 部署/ 用户/ 信任/ 的/ 虚拟机/ 内省/ VMI/ (/ VirtualMachineIntro/ -/ spection/ )/ [/ 16/ ]/ 和/ 审计/ 策略/ 定制/ 模块/ ,/ 由/ VMI/ 将/ 被/ 审计/ 虚拟机/ 的/ 内存/ 内容/ 旁路/ 和/ 备份/ ,/ 并/ 由/ 审计/ 策略/ 定制/ 模块/ 进行/ 审计/ 分析/ ./ 图/ 1/ 以/ Xen/ [/ 17/ ]/ 虚拟机/ 管理器/ 为例/ ,/ 展示/ 了/ 用户/ 可信/ 运行/ 环境/ 构建/ 与/ 审计/ 的/ 体系结构/ ./ 其中/ ,/ 由/ 物理/ 服务器/ 中/ 部署/ 的/ TPM/ 芯片/ 作为/ 可/ 信任/ 根/ ,/ 通过/ 软件/ vTPM/ 将/ 可/ 信任/ 链/ 由/ 物理/ 服务器/ 扩展/ 到/ VMM/ ,/ 从而/ 进一步/ 延伸/ 到/ 虚拟机/ 体系结构/ 栈中/ ./ 但是/ 因为/ 用户/ 运行/ 环境/ 可能/ 是/ 动态/ 改变/ 的/ (/ 如/ 软件/ 升级/ 、/ 安装/ 新/ 软件/ 、/ 虚拟机/ 配置/ 改变/ 等/ )/ ,/ 所以/ 另一方面/ ,/ 用户/ 虚拟机/ 运行/ 时/ 的/ 环境/ 是否/ 可信/ 是/ 由/ 审计/ 策略/ 定制/ 模块/ Auditor/ 发起/ 对/ 用户/ 虚拟机/ 的/ 审计/ 请求/ ,/ 由/ 虚拟机/ 内省/ VMI/ 模块/ 通过/ 对/ 相应/ 虚拟机/ 内存/ 数据/ 进行/ 获取/ 和/ 拷贝/ ,/ 交由/ 审计/ 策略/ 定制/ 模块/ 进行/ 解析/ 和/ 分析/ 的/ ./ Page43/ ./ 2/ 基于/ 可/ 信任/ 链/ 的/ 用户/ 环境/ 启动/ 过程/ 使用/ TCG/ 规范/ 的/ 可信计算/ 技术/ [/ 18/ ]/ 保证/ 了/ 云/ 平台/ 物理/ 服务器/ 的/ 可信/ 启动/ ./ 如图/ 2/ 所示/ 为/ 用户/ 虚拟机/ 的/ 可信/ 启动/ 过程/ ,/ 首先/ 是/ 可信/ 的/ 基于/ 硬件/ TPM/ 的/ 服务器/ ,/ 扩展/ 可/ 信任/ 链到/ 虚拟机/ 内部/ ./ 可/ 信任/ 链/ 的/ 传递/ 依次/ 经过/ 物理/ 服务器/ 、/ 操作系统/ 内核/ 、/ 虚拟机/ 管理器/ ./ 用户/ 以/ 虚拟机/ 终端/ 远程/ 连接/ 虚拟机/ 进行/ 管理/ 和/ 使用/ ,/ 或/ 管理/ 运行/ 在/ 云/ 提供商/ 的/ 平台/ 之上/ 的/ 程序/ 或/ 任务/ ./ 为了/ 保证/ 用户/ 的/ 虚拟机/ 运行/ 环境/ 是/ 可信/ 的/ ,/ 使用/ 虚拟/ TPM/ 作为/ 虚拟机/ 的/ 可信/ 根/ ,/ 通过/ 哈希/ 度量/ 所有/ 涉及/ 的/ 可/ 执行/ 代码/ ,/ 将/ 度量/ 哈希/ 值/ 扩展/ 到/ 虚拟/ TPM/ 相应/ 的/ PCR/ (/ PlatformConfigurationRegister/ )/ 寄存器/ 中/ ./ 当/ 虚拟机/ 启动/ 后/ ,/ 核心/ 可信度/ 量根/ CRTM/ (/ CoreRootofTrustMeasurement/ )/ 首先/ 计算/ 自身/ 代码/ 的/ 哈希/ 值/ 并/ 存储/ 到/ PCR0/ 寄存器/ 中/ ,/ 然后/ 验证/ 操作系统/ 启动/ 程序/ (/ Bootloader/ )/ 的/ 完整性/ ,/ 计算/ 其/ 哈希/ 值/ 并/ 存储/ 到/ PCR4/ 寄存器/ 中/ ./ 系统/ 控制权/ 转/ 交给/ Bootloader/ 后/ ,/ 再/ 由/ 其/ 计算/ 整个/ 操作系统/ 内核/ 镜像/ 的/ 完整性/ ,/ 并/ 将/ 哈希/ 值/ 保存/ 到/ PCR5/ 寄存器/ 中/ ,/ 最后/ 加载/ 操作系统/ 内核/ ,/ 进入/ 运行/ 状态/ ./ 通过/ 以上/ 过程/ 也/ 就/ 保证/ 了/ 用户/ 虚拟机/ 的/ 可信/ 启动/ ./ 图/ 2/ 用户/ 虚拟环境/ 启动/ 过程/ 的/ 可/ 信任/ 链/ 依赖/ 与/ 控制/ 转移/ 过程/ 3.3/ 用户/ 环境/ 运行/ 时/ 可信/ 证据/ 的/ 收集/ 与/ 审计/ 当/ 需要/ 进行/ 可信/ 证据/ 收集/ 时/ ,/ 策略/ 定制/ 模块/ Auditor/ 发送/ 命令/ 给/ 虚拟机/ 内省/ 模块/ ,/ 获取/ 可信/ 证据/ ./ 如图/ 1/ 所示/ ,/ 该/ 流程/ 主要/ 包括/ 以下/ 步骤/ ./ (/ 1/ )/ 策略/ 定制/ 模块/ Auditor/ 发送/ 命令/ 给/ 虚拟机/ 内省/ 模块/ ./ (/ 2/ )/ 虚拟机/ 内省/ 模块/ 从/ 本地/ 的/ 内核/ 符号表/ 中/ 读取/ 内核/ 的/ 虚拟地址/ 信息/ ,/ 如果/ 本地/ 内核/ 符号表/ 与/ 虚拟机/ 的/ 内核/ 不/ 匹配/ ,/ 则/ 通过/ 网络/ 查询/ 对应/ 的/ 内核/ 符号表/ ./ (/ 3/ )/ 根据/ 虚拟机/ CR3/ 寄存器/ 的/ 内容/ 进行/ 寻址/ 转换/ 操作/ ,/ 映射/ 到/ 页表/ 目录/ (/ PageDirectory/ )/ ,/ 如图/ 3/ 所示/ ./ (/ 4/ )/ 由/ 页表/ 目录/ 映射/ 到/ 页表/ (/ PageTable/ )/ 最终/ 接入/ 虚拟机/ 管理器/ ,/ 从而/ 得到/ 所/ 需/ 的/ 内存/ 数据/ ./ (/ 5/ )/ 得到/ 的/ 内存/ 数据/ 以/ 二进制/ 的/ 形式/ 逐级/ 返回/ 给/ 虚拟机/ 内省/ 模块/ ./ (/ 6/ )/ 数据/ 传送/ 给/ 模块/ Auditor/ 并/ 保存/ 下来/ ,/ 作为/ 审计/ 时/ 的/ 证据/ ./ 图/ 3/ 虚拟机/ 内存地址/ 转换/ 涉及/ 的/ 主要/ 数据结构/ 用户/ 运行/ 环境/ 运行/ 时/ 的/ 可信性/ 可以/ 通过/ 5/ 个/ 方面/ 进行/ 审计/ ,/ 即/ 进程/ 、/ 模块/ 、/ 打开/ 的/ 文件/ 、/ 网络/ 以及/ 内存/ 结构/ 数据/ ./ 审计/ 方法/ 跟/ 用户/ 虚拟机/ 的/ 操作系统/ 相关/ ,/ 不失/ 一般性/ ,/ 本文/ 以/ Windows/ 操作系统/ 为例/ 进行/ 说明/ ./ 3.3/ ./ 1/ 进程/ 审计/ 进程/ 审计/ 主要/ 检测/ 和/ 查看/ 用户/ 态/ 恶意程序/ ./ 操作系统/ 内核/ 会/ 事先/ 分配内存/ 页/ 到/ 特定/ 的/ 内存/ 池中/ ./ 当/ 创建/ 一个/ 进程/ 时/ ,/ 操作系统/ 从/ 内存/ 池/ 中将/ 存储空间/ 以页/ 为/ 单位/ 分配/ 给/ 该/ 进程/ ./ 每个/ 进程/ 由/ 一个/ _/ EPROCESS/ 结构/ 维护/ 其/ 信息/ ,/ 如图/ 4/ 所示/ ./ Windows/ 提供/ 的/ 进程/ 列举/ 功能/ 和/ 常规/ 进程/ 扫描/ 工具/ 往往/ 通过/ 遍历/ 所有/ 活动/ 进程/ 连接起来/ 的/ ActiveProcessLinks/ 双向/ 链表/ 而/ 得到/ 系统/ 中/ 正在/ 运行/ 的/ 活跃/ 进程/ ./ 但是/ 经过/ 特别/ 设计/ 的/ 恶意程序/ 会/ 删除/ 某些/ 进程/ 在/ 该/ 链表/ 中/ 的/ 表项/ ,/ 从而/ 避开/ 扫描/ ,/ 起到/ 隐藏/ 进程/ 的/ 作用/ ,/ 如/ FURootkit/ ①/ ./ 本文/ 的/ 审计/ 方法/ 从/ 进程/ 的/ 内存/ 页/ 分配机制/ 出发/ ,/ “/ 盯住/ ”/ 创建/ 进程/ 时/ 分配内存/ 页/ 的/ 数据结构/ ,/ ①/ Virusandthreatsdescriptions/ ./ Rootkit/ ./ Win32/ ./ Fu/ ./ AccessedPage5/ 即/ 由/ POOL/ _/ HEADER/ 结构/ (/ 池头/ 结构/ )/ 保存/ 与/ 进程/ 分配/ 有关/ 的/ 信息/ ,/ 通过/ 分析/ POOL/ _/ HEADER/ 结图/ 4Windows/ 操作系统/ 进程/ 结构/ 3.3/ ./ 2/ 模块/ 扫描/ 模块/ 扫描/ 查看/ 虚拟机/ 运行/ 环境/ 加载/ 的/ 内核/ 态/ 驱动程序/ 和/ 动态链接库/ ./ Windows/ 操作系统/ 的/ 模块/ 结构/ 如图/ 5/ 所示/ ,/ 全局/ 结构/ TEB/ (/ ThreadEnviron/ -/ mentBlock/ )/ 含有/ 指向/ 进程/ 环境/ 块/ PEB/ (/ ProcessEnvironmentBlock/ )/ 的/ 指针/ ,/ 其中/ PEB/ 是/ 管理/ 所有/ 模块/ 信息/ 的/ 结构/ 体/ ./ 每个/ 模块/ 的/ 信息/ 由/ LDR/ _/ DATA/ _/ 图/ 5Windows/ 操作系统/ 模块/ 结构/ 本文/ 的/ 可信/ 机制/ 除了/ 进行/ 以上/ 链表/ 扫描/ 外/ ,/ 还/ 通过/ 分析/ POOL/ _/ HEADER/ 以/ 发现/ 针对/ 链表/ 指针/ 修改/ 的/ 模块/ 隐藏/ ./ 这/ 是因为/ Windows/ 操作系统/ 采用/ 池/ 标记/ 来/ 区分/ 不同/ 的/ 模块/ ,/ 当/ 模块/ 被/ 分配内存/ 时/ ,/ 系统/ 需要/ 指定/ 其池/ 标记/ ./ POOL/ _/ HEADER/ (/ 池头/ 结构/ )/ 含有/ 每个/ 分配/ 单元/ 的/ 信息/ 和/ 池/ 标记/ ,/ 所以/ 通过/ 扫描/ 物理/ 内存/ 的/ 池/ 标记/ 来/ 找出/ LDR/ _/ DATA/ _/ TABLE/ _/ ENTRY/ 构/ 不仅/ 可以/ 获得/ 系统/ 中/ 运行/ 的/ 进程/ ,/ 还/ 能/ 发现/ 隐藏/ 进程/ 的/ 信息/ ./ TABLE/ _/ ENTRY/ (/ 结构/ )/ 管理/ ,/ 所有/ 模块/ 通过/ 双向/ 链表/ InLoadOrderLink/ 连接起来/ ./ PEB/ 中/ 的/ 子结构/ PEB/ _/ LDR/ _/ DATA/ 含有/ 指向/ 所有/ 模块/ 的/ 双向/ 链表/ ,/ 所有/ 模块/ 通过/ 该/ 双向/ 链表/ 连接起来/ ./ 大多数/ 模块/ 扫描/ 工具/ 通过/ 遍历/ 该/ 链表/ ,/ 便/ 可/ 知道/ 系统/ 所/ 加载/ 的/ 模块/ ./ 恶意程序/ 也/ 往往/ 通过/ 修改/ 该/ 双向/ 链表/ 的/ 结构/ 来/ 实现/ 隐藏/ 模块/ 的/ 目的/ ,/ 如/ FURootkit/ ./ 结构/ ,/ 进而/ 能够/ 发现/ 隐藏/ 的/ 模块/ ./ 3.3/ ./ 3/ 文件/ 审计/ 文件/ 审计/ 是/ 为了/ 查看/ 用户/ 环境/ 在/ 运行/ 时/ 打开/ 了/ 哪些/ 文件/ ./ 在/ Windows/ 系统/ 中/ ,/ 每/ 一个/ 打开/ 的/ 文件/ 对应/ 一个/ FILE/ _/ OBJECT/ 内存/ 结构/ ,/ 该/ 结构/ 由/ 操作系统/ 的/ 分页/ 池/ 统一/ 进行/ 分配/ ./ 文件/ 的/ 创建/ 过程/ 如图/ 6/ 所示/ ./ 当要/ 打开/ 一个/ 文件/ 时/ ,/ 需要/ 两个/ 动态/ 链接/ Page6/ 库/ :/ C语言/ 运行/ 时/ 动态链接库/ 和/ Windows/ 动态链接库/ ./ 应用程序/ 的/ 打开/ 文件/ 操作/ 调用/ C语言/ 运行/ 时/ 的/ 库函数/ fopen/ ,/ fopen/ 接着/ 调用/ Windows/ 动态链接库/ 函数/ CreateFile/ ./ 之后/ ,/ Windows/ 动态链接库/ 会/ 调用/ Ntdll/ ./ dll/ 中/ 的/ 函数/ NtCreateFile/ ./ Ntdll/ ./ dll/ 含有/ 进入/ 内核/ 模式/ 的/ 系统/ 服务/ 调度/ 器/ 的/ 指令/ ,/ 系统/ 服务/ 调度/ 器/ 通知/ I/ // O/ 管理器/ 进行/ 文件创建/ ./ I/ // O/ 图/ 6Windows/ 操作系统/ 文件创建/ 流程/ 和/ 涉及/ 的/ 内存/ 数据结构/ 在/ 审计/ 过程/ 中/ ,/ 由于/ 文件/ 对象/ 的/ 创建/ 会/ 与/ POOL/ _/ HEADER/ 结构/ 相关联/ ,/ POOL/ _/ HEADER/ 中会/ 存放/ 文件/ 对象/ 的/ 池/ 标志/ 等/ 信息/ ,/ 所以/ 通过/ 确定/ 这种/ 池/ 标志/ 找到/ 相应/ 的/ FILE/ _/ OBJECT/ 结构/ ,/ 就/ 可以/ 扫描/ 出/ 系统/ 中/ 进程/ 打开/ 的/ 所有/ 文件/ ./ 3.3/ ./ 4/ 网络连接/ 扫描/ 网络连接/ 扫描/ 是/ 为了/ 查看/ 运行/ 环境/ 中/ 网络连接/ 和/ 活动状态/ ./ Windows/ 系统/ 的/ TCP/ // IP/ 体系结构/ 如图/ 7/ 所示/ ./ 以/ 数据包/ 发送/ 为例/ ,/ 应用程序/ 将要/ 发送/ 的/ 数据/ 通过/ Socket/ 接口/ 形成/ IP/ 数据包/ ,/ 交由/ TCP/ // IP/ 驱动程序/ Tcpip/ ./ sys/ 处理/ ,/ 处理过程/ 主要/ 有/ 3/ 个/ 部分/ :/ 首先/ ,/ Tcpip/ ./ sys/ 将/ 数据包/ 发送给/ 防火墙/ 驱动程序/ Ipnat/ ./ sys/ ,/ 防火墙/ 检查/ 该/ 数据包/ 是否是/ Internet/ 控制/ 消息/ 协议/ (/ ICMP/ )/ ,/ 如果/ ICMP/ 设定/ 为/ 阻止/ ,/ 那么/ 防火墙/ 就/ 丢弃/ 该/ 数据包/ ./ 然后/ ,/ 防火墙/ 检查/ 数据包/ 是否是/ 点到点/ 隧道/ 协议/ (/ PPTP/ )/ ,/ 如果/ 是/ ,/ 就/ 分析/ 数据包/ 以/ 确定/ 通用/ 路由/ 封装/ (/ GRE/ )/ 的/ 调用/ ID/ ,/ 使得/ GRE/ 数据包/ 能够/ 传入/ ./ 完成/ 之后/ 防火墙/ 将/ 数据包/ 发回/ 给/ Tcpip/ ./ sys/ ,/ 由/ IP/ 转发/ 组件/ 确定/ 下/ 一/ 跳/ IP地址/ 和/ 端口/ ./ 其次/ ,/ Tcpip/ ./ sys/ 将/ 数据包/ 发送给/ IP/ 过滤/ 驱/ 管理器/ 负责管理/ 文件系统/ 、/ 缓存/ 管理器/ 、/ 设备/ 驱动程序/ 、/ 网络/ 驱动程序/ ,/ 当其/ 收到/ 文件创建/ 命令/ 后/ ,/ 通知/ 对象/ 管理器/ 创建/ 文件/ 对象/ 的/ 操作/ ,/ 成功/ 创建/ 后/ ,/ 对象/ 管理器/ 将/ 对象/ 句柄/ 返回/ 给/ I/ // O/ 管理器/ ./ 最后/ I/ // O/ 管理器/ 将/ 文件/ 句柄/ 返回/ 给/ Windows/ 动态链接库/ ./ 因此/ ,/ 通过/ 文件/ 扫描/ 可以/ 发现/ 进程/ 所/ 打开/ 的/ 文件/ ./ 图/ 7Windows/ 操作系统/ 中/ TCP/ // IP/ 体系结构/ 动/ 程序/ Ipfltdrv/ ./ sys/ ,/ 通过/ 比较/ 下/ 一/ 跳/ IP地址/ 和/ 系统配置/ 的/ 出口/ IP/ 包/ 过滤器/ ,/ 如果/ 地址/ 是/ 允许/ 出口/ 的/ ,/ 就/ 将/ 数据包/ 返回/ 给/ Tcpip/ ./ sys/ ,/ 如果/ 地址/ 是/ 不/ 允许/ 的/ ,/ 就/ 丢弃/ ./ 最后/ ,/ Tcpip/ ./ sys/ 将/ 数据包/ 发送给/ Ipsec/ 驱动程序/ Ipsec/ ./ sys/ ,/ Ipsec/ 确定/ 是否/ 让/ 数据包/ Page7/ 通过/ 、/ 阻止/ 或/ 保护/ ./ 如果/ 让/ 数据包/ 通过/ ,/ 则/ 将/ 数据包/ 不/ 做/ 处理/ 返回/ 给/ Tcpip/ ./ sys/ ;/ 如果/ 阻止/ 数据包/ ,/ 则/ 将/ 数据包/ 丢弃/ ;/ 如果/ 保护/ 数据包/ ,/ 则/ 对/ 数据包/ 进行/ Ipsec/ 加密/ 后/ 返回/ 给/ Tcpip/ ./ sys/ ./ 以上/ 过程/ 中/ 的/ 相关/ 信息/ 将会/ 保存/ 在/ Tcpip/ ./ sys/ 驱动程序/ 某一/ 特定/ 符号/ 所/ 指向/ 的/ 单向/ 链表/ 结构/ 中/ ./ 因此/ ,/ 通过/ 扫描/ 该/ 单向/ 链表/ 可/ 审计/ 其/ 网络连接/ 信息/ ,/ 包括/ 进程/ 号/ 、/ 发送/ 端/ IP地址/ 、/ 端口/ IP地址/ 、/ 接收端/ IP地址/ 和/ 端口/ 等/ ./ 3.3/ ./ 5/ 内存/ 数据结构/ 审计/ 内存/ 中/ 特定/ 的/ 数据/ 可以/ 采用/ 字符串/ 搜索/ 的/ 方式/ 进行/ 审计/ ./ 字符串/ 的/ 搜索/ 位置/ 分为/ 内核/ 空间/ 和/ 进程/ 空间/ ,/ 通过/ 搜索/ 内核/ 空间/ 和/ 每个/ 进程/ 的/ 空间/ ,/ 将/ 符合/ 字符串/ 数值/ 的/ 二进制/ 数据/ 转换/ 为/ 字符串/ ,/ 同时/ 得到/ 一些/ 额外/ 的/ 审计/ 信息/ ,/ 包括/ 该/ 字符串/ 在/ 内存/ 中/ 的/ 物理地址/ 、/ 该/ 字串/ 处于/ 内核/ 空间/ 还是/ 进程/ 空间/ 、/ 该/ 字符串/ 的/ 虚拟地址/ 等/ ./ 4/ 实现/ 和/ 评价/ 4.1/ 实验/ 环境/ 基于/ 上述/ 机制/ 的/ 原型/ 系统/ 采用/ 软件/ libtpm/ [/ 19/ ]/ 模拟/ 硬件/ TPM/ ,/ 充当/ vTPM/ 的/ 后/ 端/ ,/ 虚拟机/ 管理器/ 使用/ 开源/ Xen/ 平台/ ,/ 在/ Xen/ 平台/ 中/ 实现/ vTPM/ 模块/ 仿真/ 硬件/ TPM/ ,/ 使/ 每个/ 虚拟机/ 拥有/ 一个/ vTPM/ ,/ 作为/ 虚拟机/ 的/ 可信/ 根/ ,/ 其/ 体系结构/ 如图/ 1/ 所示/ ./ TDD/ (/ TPMDeviceDriver/ )/ 模块/ 与/ TPM/ 硬件/ 交互/ ,/ 作为/ 硬件/ TPM/ 的/ 设备/ 驱动程序/ ,/ 该/ 驱动/ 在/ 目前/ 主流/ 操作系统/ 版本/ ,/ 如/ Windows/ ,/ Linux/ ,/ MacOS/ 中/ 默认/ 安装/ ./ 使用/ VMI/ 开源/ 工具/ VMITools/ [/ 20/ ]/ 旁路/ 和/ 获取/ 用户/ 虚拟机/ 内存/ 数据/ ./ 原型/ 系统/ 的/ 部署/ 配置/ 信息/ 如表/ 1/ 所示/ ./ 配置/ 项/ CPU/ 内存/ 二级缓存/ (/ L2Cache/ )/ 硬盘容量/ 4.2/ 实验/ 结果/ 及/ 分析/ 实验/ 和/ 评价/ 以/ 构建/ 可信/ 的/ 云/ 计算/ 运行/ 环境/ 机制/ 的/ 有效性/ 和/ 可信/ 机制/ 带来/ 的/ 额外/ 代价/ 作为/ 目标/ 进行/ 分析/ ./ 4.2/ ./ 1/ 有效性/ 实验/ 及/ 分析/ 与/ 传统/ 可信计算/ 的/ 假设/ 场景/ 不同/ ,/ 云/ 用户/ 的/ 行为/ 是/ 无法/ 事先/ 严格/ 规定/ 的/ ,/ 同时/ ,/ 用户/ 虚拟机/ 的/ 配置/ 、/ 安装/ 软件/ 、/ 自/ 定制/ 程序/ 等/ 都/ 可能/ 是/ 动态变化/ 的/ ,/ 所以/ 无法/ 采用/ 可/ 信任/ 链/ 的/ 方式/ 对/ 用户/ 虚拟机/ 的/ 所有/ 程序/ 都/ 事先/ 固定/ 其/ Hash/ 摘要/ 值/ ./ 因此/ ,/ 本文/ 的/ 机制/ 将/ 可/ 信任/ 链/ 的/ 方式/ 与/ 内存/ 审计/ 的/ 方式/ 结合/ 起来/ ,/ 通过/ vTPM/ 可信/ 根来/ 保证/ 用户/ 运行/ 环境/ 的/ 虚拟/ 硬件/ 、/ BIOS/ 等/ 的/ 可信性/ ,/ 通过/ 内存/ 审计/ 来/ 检测/ 和/ 仲裁/ 运行/ 时/ 的/ 不可/ 信/ 行为/ ./ 以/ Windows/ 环境/ 中/ 的/ 典型/ 内核/ 态/ 木马/ Win32/ ./ FuRootkit/ 为例/ ./ FURootkit/ 是/ 一种/ 可以/ 隐藏/ 进程/ 的/ 恶意程序/ ,/ 能够/ 将/ 自身/ 隐藏/ 起来/ 而/ 不/ 被/ 宿主机/ 发现/ ./ FURootkit/ 会/ 在/ 系统/ 中/ 安装/ 内核/ 态/ 驱动程序/ ,/ 通过/ 驱动程序/ 来/ 删除/ 活动/ 链表/ PsActiveProcessList/ 中/ 的/ 进程/ 信息/ ,/ 而/ 主流/ 安全/ 工具/ ,/ 如/ PoisonIvy/ ①/ ,/ 主要/ 通过/ 扫描/ PsActiveProcessList/ 链表/ 来/ 获取/ 当前/ 环境/ 的/ 进程/ 信息/ ,/ 因而/ 无法/ 检测/ 到/ 隐藏/ 的/ 进程/ ./ 如图/ 8/ (/ a/ )/ 所示/ ,/ 采用/ 主流/ 安全/ 工具/ 查看/ 系统/ 进程/ ,/ 并/ 不能/ 发现/ FURootkit/ 创建/ 的/ 进程/ ./ 而/ 通过/ 本文/ 提出/ 的/ 可信/ 机制/ 对/ 内存/ 信息/ 进行/ 审计/ ,/ 可/ 通过/ 判断/ 进程/ 的/ 内存/ 页/ 使用/ 情况/ 从而/ 检测/ 隐藏/ 进程/ ./ 进程/ 内存/ 页/ 的/ 分配/ 会/ 存储/ 在/ POOL/ _/ HEADER/ 中/ ,/ POOL/ _/ HEADER/ 是/ 一个/ 操作系统/ 分配内存/ 页/ 的/ 池子/ ,/ 进程/ 在/ 创建/ 时/ ,/ POOL/ _/ HEADER/ 就/ 存有/ 该/ 进程/ 的/ 相关/ 信息/ ,/ 即使/ Rootkit/ 将/ 进程/ 隐藏/ ,/ 该/ 进程/ 在/ POOL/ _/ HEADER/ 中/ 的/ 内存/ 页/ 分配/ 的/ 标志/ 也/ 不会/ 立即/ 消失/ ./ 所以/ 对/ POOL/ _/ HEADER/ 链表/ 进行/ 扫描/ ,/ 可以/ 发现/ 隐藏/ 的/ 进程/ 以及/ 目前/ 已经/ 结束/ 的/ 进程/ ,/ 如图/ 8/ (/ b/ )/ 所示/ ./ 与/ 此/ 类似/ ,/ FURootkit/ 通过/ 修改/ LDR/ _/ DATA/ _/ TABLE/ _/ ENTRY/ 指针/ ,/ 删除/ 模块/ 在/ 双向/ 链表/ InLoadOrderLink/ 中/ 的/ 对应/ 项/ ,/ 可/ 隐藏/ 系统/ 模块/ ,/ 从/ ①/ PoisonIvy/ [/ EB/ // OL/ ]/ ./ http/ :/ // // www/ ./ poisonivy/ -/ rat/ ./ comPage8/ 而/ 避开/ 采用/ 主流/ 安全/ 工具/ 的/ 扫描/ ,/ 如/ Icesword/ ①/ 无法/ 检测/ 被/ 隐藏/ 的/ 模块/ ,/ 其/ 结果/ 如图/ 9/ (/ a/ )/ 所示/ ./ 而/ 本文/ 提出/ 的/ 可信/ 机制/ 是/ 通过/ 扫描/ 和/ 审计/ POOL/ _/ HEADER/ 结构/ ,/ 所以/ 即使/ 模块/ 从/ InLoadOrderLink/ 链表/ 中/ 删除/ ,/ 其/ POOL/ _/ HEADER/ 结构/ 也/ 含有/ 该/ 模块/ 的/ 信息/ ,/ 如图/ 9/ (/ b/ )/ 所示/ ./ 4.2/ ./ 2/ 性能/ 实验/ 及/ 分析/ 性能/ 实验/ 包括/ 证据/ 收集/ 和/ 审计/ 的/ 性能/ 评价/ 以及/ 可信/ 机制/ 对/ 虚拟机/ 正常/ 用户/ 环境/ 的/ 性能/ 影响/ ./ 证据/ 收集/ 主要/ 有/ 同步/ 和/ 异步/ 2/ 种/ 方式/ ./ 同步/ 方式/ 是/ 把/ 用户/ 虚拟机/ 的/ 内存/ 转储/ (/ dump/ )/ 为/ 硬盘/ 文件/ ,/ 再/ 对/ 文件/ 进行/ 可信性/ 审计/ ;/ 异步/ 方式/ 则/ 不/ 需要/ 每次/ 审计/ 都/ 对/ 虚拟机/ 的/ 完整/ 内存/ 映像/ 进行/ 转储/ ,/ 而/ 可以/ 有/ 针对性/ 地/ 、/ 更/ 细粒度/ 地/ 访问/ 和/ 获取/ 特定/ 的/ 内存/ 内容/ ,/ 与此同时/ 并/ 进行/ 审计/ 分析/ ./ 一般来说/ ,/ 影响/ 证据/ 收集/ 性能/ 的/ 因素/ 主要/ 包括/ 用户/ 虚拟机/ 内存/ 的/ 大小/ ,/ 以及/ 用户/ 虚拟机/ 的/ 计算/ 性能/ ./ 首先/ ,/ 分析/ 用户/ 虚拟机/ 的/ 计算/ 配置/ 对/ 证据/ 收集/ 性能/ 的/ 影响/ ./ 图/ 10/ 展示/ 了/ 在/ 给定/ 虚拟机/ 内存大小/ ,/ 并/ 保持/ 虚拟机/ 其他/ 配置/ 不变/ 的/ 情况/ 下/ ,/ CPU/ 核数/ (/ Cores/ )/ 对/ 同步/ 证据/ 收集/ 完成/ 时间/ 的/ 影响/ ./ 从图/ 10/ 可以/ 发现/ ,/ 在/ 典型/ 的/ 内存/ 配置/ 下/ (/ 2GB/ ,/ 4GB/ ,/ 10GB/ ,/ 24GB/ )/ ,/ 内存/ 镜像/ 的/ 转储/ 时间/ 几乎/ 是/ 一条/ 直线/ ,/ 即/ 表明/ :/ 虚拟机/ 的/ 计算能力/ 对/ 可信/ 证据/ 的/ 收集/ 几乎/ 没有/ 影响/ ./ 不失/ 一般性/ ,/ 在/ 接下来/ 的/ 实验/ 中/ ,/ 用户/ 虚拟机/ 配置/ 为/ 6/ 核/ CPU/ ./ 另外/ 可以/ 看出/ ,/ 内存/ 镜像/ 的/ 转储/ 时间/ 是/ 随着/ 内存大小/ 增加/ 而/ 线性/ 增加/ 的/ ,/ 这/ 是因为/ 内存/ 镜像/ 转储/ 的/ 主要/ 时间/ 开销/ 在/ I/ // O/ 操作/ 上/ ./ 图/ 11/ 给出/ 了/ 在/ 同步/ 方式/ 下/ ,/ 进行/ 一次/ 可信/ 证据/ 收集/ 和/ 审计/ 操作/ (/ 以/ 列举/ 当前/ 系统/ 中/ 运行/ 的/ 所有/ 进程/ 为例/ )/ 所/ 完成/ 的/ 时间/ ./ 由此/ 可以/ 发现/ ,/ 完成/ 时间/ 跟/ 虚拟机/ 内存大小/ 基本/ 成正比/ 关系/ ,/ 这/ 是因为/ 绝大部分/ 的/ 时间/ 花费/ 在/ 将/ 内存/ 数据/ 转储/ 到/ 文件/ 中/ ./ 以/ 10GB/ 内存/ 配置/ 为例/ ,/ 证据/ 收集/ 花费/ 的/ 时间/ 是/ 155.05/ s/ ,/ 而/ 进程/ 审计/ 的/ 时间/ 花费/ 是/ 1.87/ s/ ,/ 只/ 占/ 前者/ 的/ 1.2/ %/ ./ 而/ 对于/ 审计/ 操作/ 来说/ ,/ 由于/ 其/ 主要/ 处理/ 字符串/ 匹配/ 和/ 数据结构/ 搜索/ 的/ 情况/ ,/ 跟/ 内存/ 转储/ 文件/ 的/ 大小/ 没有/ 关系/ ,/ 所以/ 审计/ 操作/ 的/ 完成/ 时间/ 并/ 不/ 随/ 内存大小/ 的/ 增加/ 而/ 线性/ 增加/ ,/ 如图/ 12/ 所示/ ./ 图/ 11/ 在/ 同步/ 方式/ 下/ ,/ 一次/ 可信/ 证据/ 收集/ 和/ 审计/ 操图/ 12/ 展示/ 了/ 在/ 异步/ 方式/ 下/ ,/ 可信/ 证据/ 收集/ 和/ 审计/ 的/ 性能/ ,/ 以及/ 在/ 典型/ 的/ 审计/ 操作/ 下/ ,/ 异步/ 方式/ 的/ 完成/ 时间/ 与/ 直接/ 对/ 转储/ 文件/ 进行/ 审计/ 的/ 时间/ 对比/ ./ 从图/ 12/ 可以/ 看出/ ,/ 因为/ 异步/ 方式/ 并不需要/ 先/ 把/ 整个/ 内存/ 映像/ 转储/ 到/ 文件/ 中/ ,/ 而/ 可以/ 直接/ 对/ 细粒度/ 获取/ 的/ 特定/ 内存/ 内容/ 进行/ 审计/ ,/ 所以/ 异步/ 方式/ 下/ 证据/ 收集/ 加上/ 审计/ 操作/ 的/ 总共/ 完成/ 时间/ 跟/ 同步/ 方式/ 下/ 的/ 审计/ 时间/ 是/ 相当/ 的/ ./ 而/ 从/ 具体/ 数值/ 来看/ ,/ 异步/ 方式/ 大大/ 节省/ 了/ 一次/ 证据/ 收集/ 和/ 审计/ 的/ 时间/ ./ 以/ 进程/ 审计/ 为例/ ,/ 在/ 10GB/ 内存/ 配置/ 下/ ,/ 同步/ 方式/ 的/ 完成/ 时间/ 是/ 156.92/ s/ ,/ 而/ 异步/ 方式/ 的/ 完成/ 时间/ 是/ 1.95/ s/ ./ 测试/ 引入/ 可信/ 机制/ 对/ 用户/ 虚拟机/ 运行/ 环境/ 带来/ ①/ Icesword/ [/ EB/ // OL/ ]/ ./ http/ :/ // // icesword/ ./ softonic/ ./ cnPage9/ 图/ 12/ 在/ 异步/ 方式/ 下/ ,/ 可信/ 证据/ 收集/ 和/ 审计/ 的/ 完成/ 时间/ 以及/ 与/ 同步/ 方式/ 的/ 审计/ 时间/ 的/ 对比/ 的/ 性能/ 损耗/ ,/ 可以/ 参照/ 未/ 引入/ 可信/ 机制/ 之外/ 的/ 硬件/ 设施/ 及/ 软件/ 设施/ 相同/ 的/ 普通/ 虚拟机/ 的/ 性能/ ./ 因为/ 可信/ 证据/ 的/ 审计/ 是/ 对/ 用户/ 虚拟机/ 内存/ 数据/ 的/ 旁路/ 操作/ ,/ 而且/ 跟/ 用户/ 对/ 虚拟机/ 的/ 操作/ 可以/ 异步/ 进行/ ,/ 所以/ 本文/ 的/ 性能/ 评价/ 主要/ 考虑/ 可/ 信任/ 链所/ 引入/ 的/ 代价/ ./ 名称/ IOZone/ 表/ 2/ 性能/ 测试/ 使用/ 工具/ 介绍/ BYTEmarkBYTEmark/ 基准/ 测试/ 套件/ 利用/ 不同/ 的/ 计算/ 密集型/ 算法/ ,/ 测试/ 系统/ 的/ 处理器/ 、/ 高速缓存/ 、/ 协处理器/ 、/ Memory/ 性能/ ./ PostMarkTPCC/ -/ UVa/ [/ 21/ ]/ 使用/ 表/ 2/ 的/ 性能/ 测试工具/ 对/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 与/ 未/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 作/ 性能/ 测试/ 和/ 对比/ ,/ 结果/ 如图/ 13/ 所示/ ./ 从图/ 13/ (/ a/ )/ 可以/ 看出/ ,/ 对于/ I/ // O/ 操作/ ,/ iozone/ 测试/ 结果表明/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 和/ 未/ 引入/ 可信/ 机制/ 的/ 虚/ 可信/ 用户/ 运行/ 环境/ 会/ 计算/ 涉及/ 的/ 可/ 执行/ 代码/ 的/ 哈希/ 值/ 并/ 扩展/ 到/ vTPM/ 的/ PCR/ 寄存器/ 中/ ,/ 这样/ 势必会/ 给/ 程序/ 带来/ 额外/ 的/ 执行/ 代价/ ./ 对/ 相同/ 机器配置/ 的/ 虚拟机/ ,/ 选用/ 不同/ 类型/ 的/ 测试工具/ 对/ 虚拟机/ 性能/ 进行/ 对比/ 测试/ ./ 测试工具/ 的/ 名称/ 和/ 说明/ 如表/ 2/ 所示/ ./ 功能/ 描述/ 拟机/ 运行/ 环境/ I/ // O/ 吞吐/ 率/ 基本一致/ ,/ 并且/ 随着/ 文件大小/ 的/ 增加/ ,/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 引入/ 的/ 性能/ 损耗/ 基本/ 可以/ 忽略/ ./ 这/ 是因为/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 的/ 额外/ 性能/ 代价/ 主要/ 在于/ 文件/ 打开/ 时/ 对/ 可信/ 证据/ 度量/ 哈希/ 和/ 对/ vTPM/ 的/ 扩展/ 操作/ ,/ Page10/ 图/ 13/ 使用性能/ 测试/ 工对/ 不同/ 类型/ 用户/ 虚拟机/ 运行/ 环境/ 进行/ 性能/ 对比/ 而/ 对/ 文件/ 的/ 读写/ 性能/ 影响/ 很小/ ,/ 但/ iozone/ 测试/ 并/ 不/ 考虑/ 文件/ 的/ 打开/ 时间/ ./ 图/ 13/ (/ b/ )/ 所示/ 为/ 对/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 和/ 未/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 关于/ 每秒/ 完成/ 文件/ 事务/ 型/ 数量/ 的/ 对比/ ,/ 可以/ 看出/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 比未/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 每秒/ 完成/ 的/ 事务/ 数量/ 有所/ 减少/ ./ 这/ 是因为/ 对于/ 文件/ 事务/ 型/ 处理/ 测试/ ,/ 如/ PostMark/ ,/ 由于/ 处理/ 每个/ 事务时/ ,/ 可信/ 机制/ 需要/ 对/ 事务/ 操作/ 进程/ 运行/ 代码/ 进行/ 哈希/ ,/ 获取/ 摘要/ 值/ ,/ 并/ 扩展/ 到/ vTPM/ 的/ PCR/ 寄存器/ 中/ ,/ 故/ 每个/ 事务/ 完成/ 时间/ 会/ 有所增加/ ./ 但是/ 可信/ 机制/ 对于/ 相同/ 的/ 事务/ 操作/ 不必/ 再次/ 获取/ 摘要/ ,/ 也/ 不用/ 将/ 摘要/ 保存/ 到/ 寄存器/ ,/ 所以/ ,/ 越是/ 大规模/ 的/ 文件/ 处理/ ,/ 文件/ 并发/ 数越/ 大/ ,/ 可信/ 机制/ 越/ 可以/ 节省/ 操作/ 时间/ ,/ 可信/ 机制/ 带来/ 的/ 额外/ 代价/ 相对/ 越小/ ,/ 因而/ 引入/ 可信/ 机制/ 与/ 未/ 引入/ 可信/ 机制/ 之间/ 的/ 差距/ 也/ 相对/ 越小/ ./ ①/ ②/ ③/ 对于/ 计算/ 密集型/ 操作/ ,/ 如图/ 13/ (/ c/ )/ 所示/ ,/ 一般而言/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 低于/ 半/ 可信/ 虚拟机/ 运行/ 环境/ ,/ 半/ 可信/ 虚拟机/ 运行/ 环境/ 低于/ 未/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ ./ 从图/ 13/ (/ c/ )/ 可以/ 看出/ 可信/ 机制/ 、/ 半/ 可信/ 机制/ 及/ 未/ 引入/ 可信/ 机制/ 之间/ 的/ 虚拟机/ 运行/ 环境/ 计算/ 性能/ 差别/ 不/ 大/ ,/ 性能/ 损耗/ 不足/ 2/ %/ ./ 这/ 是因为/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 只/ 在/ 计算/ 程序运行/ 前/ 执行/ 可信/ 机制/ 、/ 执行/ 可信/ 证据/ 收集/ 和/ 对/ vTPM/ 的/ 扩展/ 操作/ ,/ 而/ 当/ 程序运行/ 后/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 与/ 未/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 相同/ ,/ 性能/ 损耗/ 相对/ 更/ 小/ ./ 本文/ 还/ 利用/ TPCC/ -/ UVa/ 测试工具/ 评价/ 可信/ 机/ ①/ ②/ ③/ Page11/ 制/ 引入/ 的/ 数据分析/ 性能/ 损耗/ ./ TPCC/ -/ UVa/ [/ 21/ ]/ 是/ 一个/ 遵循/ TPC/ -/ C/ 的/ 开源/ 项目/ ./ 通过/ 在/ 一段时间/ 内向/ 系统/ 并发/ 发送/ 交易/ 请求/ ,/ 来/ 模拟/ 一系列/ 分布式/ 在线/ 交易/ (/ OLTP/ 系统/ )/ 的/ 执行/ ./ 在/ 此/ 实验/ 中/ TPCC/ -/ UVa/ 测试/ 时间/ 配置/ 为/ 1h/ ,/ 仓库/ 为/ 9/ 个/ ,/ 启动/ 时间/ 为/ 120s/ ./ 如图/ 13/ (/ d/ )/ 所示/ ,/ 前/ 120s/ 启动/ 时间/ 里/ ,/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 与/ 未/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 吞吐/ 率/ 在/ 到达/ 峰值/ 以前/ ,/ 引入/ 可信/ 机制/ 的/ 虚拟机/ 运行/ 环境/ 的/ 吞吐/ 率/ 相对/ 稍低/ ,/ 而/ 在/ 各自/ 吞吐/ 率/ 达到/ 峰值/ 之后/ ,/ 可信/ 机制/ 带来/ 的/ 额外/ 代价/ 相对/ 较/ 小/ ./ 5/ 总结/ 如何/ 为/ 用户/ 提供/ 可信/ 的/ 云/ 计算/ 服务/ 是/ 云/ 计算/ 模式/ 面临/ 的/ 重要/ 问题/ ./ 但/ 采用/ 可信计算/ 技术/ 的/ 基本/ 假设/ 是/ 所有/ 在/ 用户/ 虚拟机/ 中/ 安装/ 的/ 内核模块/ 和/ 应用程序/ 都/ 需要/ 事先/ 指定/ 并/ 已知/ 其/ 执行/ 代码/ 的/ 完整性/ 信息/ ./ 这个/ 假设/ 在/ 云/ 用户/ 实际/ 使用/ 时/ 往往/ 不/ 成立/ ./ 针对/ 该/ 问题/ ,/ 本文/ 提出/ 了/ 一种/ 将/ 虚拟/ 可信/ 根/ vTPM/ 和/ 可信/ 审计/ 技术/ 结合/ 起来/ 的/ 用户/ 可信/ 运行/ 环境/ 构建/ 与/ 审计/ 机制/ ./ 对于/ 体系结构/ 栈中/ 可/ 事先/ 固定/ 的/ 、/ 在/ 启动/ 和/ 运行/ 时/ 不变/ 的/ 组件/ ,/ 如/ BIOS/ 、/ 启动/ 程序/ 、/ 操作系统/ 内核/ ,/ 通过/ vTPM/ 可信/ 根/ 保证/ 可信/ 的/ 启动/ ;/ 对于/ 运行/ 过程/ 中/ 变化/ 的/ 、/ 无法/ 事先/ 确定/ 的/ 组件/ ,/ 如/ 内核模块/ 、/ 静态/ 或/ 动态链接库/ 、/ 用户/ 态/ 程序/ ,/ 本文/ 提出/ 了/ 一种/ 可信/ 审计/ 的/ 方法/ ,/ 对/ 用户/ 虚拟机/ 的/ 运行/ 状态/ 环境/ 进行/ 证据/ 收集/ 和/ 证据/ 审计/ ,/ 及时/ 检测/ 在/ 实际/ 使用/ 中/ 无法/ 事先/ 固定/ 的/ 用户/ 运行/ 环境/ 的/ 可信性/ ./ 若/ 用户/ 运行/ 环境/ 处于/ 不可/ 信/ 状态/ ,/ 则/ 及时/ 通知/ 用户/ ,/ 并/ 采取相应/ 措施/ ./ 本文/ 实现/ 了/ 基于/ 该/ 可信/ 机制/ 的/ 原型/ 系统/ ,/ 并用/ 实验/ 的/ 方法/ 进行/ 了/ 有效性/ 评价/ 和/ 性能/ 代价/ 评价/ ,/ 结果表明/ ,/ 该/ 机制/ 针对/ 典型/ 的/ 不可/ 信/ 攻击/ 是/ 有效/ 的/ ,/ 且/ 引入/ 的/ 性能/ 代价/ 对/ 用户/ 实际/ 使用/ 的/ 影响/ 可/ 忽略/ ./ 

