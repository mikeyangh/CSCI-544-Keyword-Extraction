Page1/ 道路网/ 中/ 的/ 移动/ 对象/ 连续/ 犓/ 近邻/ 查询/ 赵亮/ 1/ )/ 陈荦/ 1/ )/ 景宁/ 1/ )/ 廖巍/ 2/ )/ 1/ )/ (/ 国防科学技术大学/ 电子/ 科学/ 与/ 工程学院/ 长沙/ 410073/ )/ 2/ )/ (/ 海军工程大学/ 电子/ 工程学院/ 武汉/ 430033/ )/ 摘要/ 已有/ 道路网/ 中/ 的/ 连续/ k/ 近邻/ 查询处理/ 算法/ 采用/ 增量/ 式/ 的/ 查询处理/ 机制/ ,/ 当/ 数据/ 频繁/ 更新/ 时/ 性能/ 急剧下降/ ./ 结合/ 多核/ 多线程/ 技术/ ,/ 提出/ 了/ 一种/ 基于/ 多线程/ 的/ 连续/ 查询处理/ 框架/ ./ 该/ 框架/ 周期性/ 重/ 计算/ 所有/ 查询/ 结果/ ,/ 将/ 查询处理/ 分为/ 顺序/ 执行/ 的/ 数据/ 更新/ 阶段/ 和/ 查询/ 执行/ 阶段/ ,/ 分别/ 使用/ 任务/ 并行/ 和/ 数据/ 并行/ 的/ 方法/ 执行/ 各/ 阶段/ 的/ 操作/ ./ 设计/ 了/ 数据/ 更新/ 阶段/ 使用/ 的/ 数据结构/ ,/ 提出/ 了/ 查询处理/ 阶段/ 的/ k/ 近邻/ 查询处理/ 策略/ ,/ 包含/ 离线/ 预计/ 算/ 和/ 在线/ k/ 近邻/ 查询处理/ 算法/ 两个/ 部分/ ./ 对/ k/ 近邻/ 算法/ 复杂性/ 及/ 多线程/ 处理/ 框架/ 的/ 加速/ 比/ 进行/ 了/ 理论/ 分析/ ./ 实验/ 结果表明/ ,/ 提出/ 的/ 算法/ 在/ 数据/ 频繁/ 更新/ 下/ ,/ 串行/ 执行/ 时/ 性能/ 优于/ 已有/ 算法/ ,/ 而/ 基于/ 多线程/ 处理/ 框架/ 的/ 并行执行/ 在/ 任何/ 参数/ 配置/ 下/ 性能/ 均/ 优于/ 已有/ 算法/ ;/ 且/ 基于/ 多线程/ 处理/ 框架/ 的/ 并行执行/ 具有/ 较/ 好/ 的/ 性能/ 扩展性/ ,/ 加速/ 比/ 可以/ 达到/ 1.51/ ~/ 1.7/ ./ 关键词/ 移动/ 对象/ ;/ 道路网/ ;/ 连续/ k/ 近邻/ 查询/ ;/ 多线程/ ;/ 频繁/ 更新/ 1/ 引言/ 随着/ 无线通信/ 、/ 计算技术/ 、/ GPS/ 空间/ 定位/ 等/ 技术/ 的/ 快速/ 发展/ 以及/ 众多/ 具有/ 定位/ 功能/ 的/ 无线/ 手持/ 和/ 车载/ 设备/ 的/ 大量/ 普及/ ,/ 位置服务/ 目前/ 已经/ 成为/ 了/ 一个/ 独具特色/ 、/ 前景/ 无限/ 的/ 新兴产业/ ,/ 得到/ 了/ 越来越/ 多/ 的/ 关注/ ./ 位置服务/ 在/ 交通/ 调度/ 管理/ 、/ 救援/ 服务/ 、/ 战场/ 指挥/ 等/ 领域/ 有着/ 广泛/ 的/ 应用/ 前景/ [/ 1/ ]/ ./ 尤其/ 是/ 在/ 城市道路/ 网络/ 环境/ 下/ ,/ 许多/ 新型/ 应用/ 如/ 路边/ 协助/ 、/ 交通/ 导航/ 、/ 位置/ 感知/ 广告/ 服务/ 等/ 由于/ 切合/ 用户/ 的/ 实际/ 需求/ ,/ 引起/ 了/ 人们/ 广泛/ 的/ 兴趣/ ./ 其中/ 一个/ 典型/ 的/ 需求/ 是/ 对/ 道路网/ 中/ 的/ 移动/ 对象/ 进行/ 连续/ 查询/ ,/ 比如/ 连续/ 查询/ “/ 距/ 目前/ 位置/ 最近/ 的/ 10/ 辆/ 出租汽车/ ”/ ./ 移动/ 对象/ 的/ 连续/ 查询/ 是/ 近年来/ 移动/ 对象/ 数据库/ 领域/ 的/ 研究/ 热点/ ,/ 然而/ 其中/ 大多数/ 方法/ [/ 2/ -/ 6/ ]/ 都/ 假设/ 移动/ 对象/ 在/ 欧氏/ 空间/ 中/ 自由/ 运动/ ,/ 因而/ 以/ 欧氏/ 距离/ 来/ 判断/ 移动/ 对象/ 是否/ 在/ 查询/ 结果/ 集中/ ./ 这些/ 方法/ 虽然/ 有/ 其/ 特定/ 的/ 应用领域/ (/ 如/ 战场/ 监控/ 、/ 航空/ 管理/ 等/ )/ ,/ 但是/ 由于/ 现实/ 中/ 绝大多数/ 用户/ 和/ 移动/ 对象/ 的/ 运动/ 都/ 受限于/ 道路/ 网络/ ,/ 用户/ 和/ 移动/ 对象/ 之间/ 的/ 距离/ 通常/ 以/ 网络/ 距离/ 衡量/ ,/ 因而/ 如果/ 仍然/ 使用/ 欧氏/ 距离/ 来/ 计算/ 查询/ 结果/ ,/ 则/ 显然/ 不能/ 得出/ 正确/ 的/ 查询/ 结果/ ./ 目前/ 典型/ 的/ 道路网/ 中/ 移动/ 对象/ 并发/ 连续/ k/ 近邻/ 查询处理/ 算法/ 包括/ 文献/ [/ 7/ ]/ 中/ 提出/ 的/ IMA/ // GMA/ 算法/ 和/ 文献/ [/ 8/ ]/ 中/ 提出/ 的/ ER/ -/ CkNN/ 算法/ ./ 这/ 两种/ 算法/ 是/ 对/ 传统/ 的/ 道路网/ 中/ 静态/ 空间/ 对象/ 查询处理/ 算法/ [/ 9/ ]/ 的/ 时空/ 扩展/ ./ 然而/ ,/ 在/ 移动/ 对象/ 数据/ 频繁/ 更新/ 的/ 情况/ 下/ ,/ 上述/ 算法/ 性能/ 急剧/ 恶化/ ,/ 甚至/ 不如/ 采用/ 每个/ 周期/ 重复/ 计算/ 所有/ 查询/ 结果/ 的/ 方式/ ./ 目前/ ,/ 多核/ 处理器/ 逐渐/ 成为/ 市场/ 的/ 主流/ ./ 在/ 多/ 核/ 处理器/ 平台/ 上/ ,/ 上述/ 传统/ 的/ 单线程/ 算法/ 均/ 无法/ 充分利用/ 处理器/ 的/ 计算资源/ (/ 在/ 双核/ 平台/ 上/ 运行/ 已有/ 单线程/ 算法/ ,/ 处理器/ 的/ 使用率/ 最高/ 为/ 50/ %/ )/ ./ 本文/ 的/ 研究/ 旨在/ 利用/ 多核/ 处理器/ 的/ 多线程/ 并行计算/ 能力/ 提高/ 道路/ 网上/ 移动/ 对象/ 连续/ k/ 近邻/ 查询处理/ 的/ 性能/ ./ 因此/ ,/ 重点/ 提出/ 了/ 一种/ 基于/ 多线程/ 的/ 查询处理/ 框架/ ,/ 设计/ 了/ 包含/ 离线/ 预计/ 算及/ 在线/ 查询处理/ 算法/ 两/ 部分/ 的/ k/ 近邻/ 查询处理/ 策略/ ./ 2/ 相关/ 工作/ 及/ 问题/ 描述/ 2.1/ 相关/ 工作/ 目前/ 典型/ 的/ 道路网/ 中/ 移动/ 对象/ 连续/ k/ 近邻/ 查询处理/ 算法/ 有/ IMA/ // GMA/ 算法/ [/ 7/ ]/ 和/ ER/ -/ CkNN/ 算法/ [/ 8/ ]/ ./ IMA/ // GMA/ 算法/ 将/ 移动/ 对象/ 数据/ 、/ 多用户/ 并发/ 查询/ 、/ 道路网/ 数据/ 全部/ 组织/ 在/ 内存/ 中/ ./ 对于/ 每/ 一个/ 查询/ 来说/ 使用/ 网络/ 扩张/ 的/ 方法/ 获得/ 其/ 初始/ 结果/ 集/ ,/ 即/ 从/ 查询/ 所在/ 的/ 位置/ 开始/ ,/ 遍历/ 周围/ 的/ 边/ 及其/ 上/ 的/ 移动/ 对象/ ,/ 根据/ 到/ 移动/ 对象/ 的/ 网络/ 距离/ 不断/ 地/ 更新/ 查询/ 结果/ 集/ ./ 此外/ ,/ IMA/ 算法/ 将/ 网络/ 扩张/ 中/ 遍历/ 过/ 的/ 结点/ 组织/ 成/ 一个/ 称为/ 查询/ 扩张/ 树/ 的/ 数据结构/ ,/ 基于/ 这种/ 数据结构/ ,/ IMA/ 算法/ 通过/ 判断/ 边/ 权重/ 、/ 移动/ 对象/ 位置/ 、/ 查询/ 位置/ 的/ 变化/ ,/ 对/ 扩张/ 树/ 进行/ 修剪/ ,/ 从而/ 重用/ 扩张/ 树中/ 的/ 查询/ 结果/ ./ GMA/ 算法/ 则/ 将/ 路径/ (/ 起点/ 和/ 终点/ 的/ 度数/ 不/ 等于/ 2/ )/ 上/ 的/ 查询/ 组成/ 一组/ ,/ 同一/ 路径/ 上/ 查询/ 的/ 结果/ 集是/ 路径/ 两个/ 端点/ 的/ k/ 近邻/ 查询/ 结果/ 和/ 该/ 路径/ 上/ 移动/ 对象/ 并集/ 的/ 子集/ ./ 基于/ 这一/ 性质/ GMA/ 算法/ 利用/ IMA/ 算法/ 监控/ 每条/ 路径/ 两个/ 端点/ 的/ k/ 近邻/ 查询/ 结果/ ,/ 并/ 判断/ 数据/ 的/ 更新/ 会/ 影响/ 哪些/ 查询/ 的/ 结果/ ,/ 而后/ 重新/ 计算/ 这些/ 受/ 影响/ 的/ 查询/ ./ 通过/ 分析/ 和/ 实验/ ,/ 发现/ IMA/ // GMA/ 算法/ 的/ 不足/ 可以/ 概括/ 为/ :/ (/ 1/ )/ IMA/ // GMA/ 会/ 进行/ 大量/ 计算/ 以/ 判断/ 是否/ 需要/ 对/ 查询/ 重/ 计算/ ,/ 当/ 数据/ 频繁/ 更新/ 时/ ,/ 绝大多数/ 查询/ 都/ 需要/ 重/ 计算/ ,/ 因此/ 性能/ 急剧下降/ ;/ (/ 2/ )/ GMA/ 算法/ 不能/ 处理/ k/ 值/ 不同/ 情况/ 下/ 的/ 多用户/ 并发/ 查询/ ;/ (/ 3/ )/ 当/ 道路网/ 规模/ 较大/ 时/ ,/ 其/ 基本/ 的/ 网络/ 扩张/ 算法/ 性能/ 下降/ ./ ER/ -/ CkNN/ 算法/ 的/ 提出/ 者/ 注意/ 到/ 了/ IMA/ // GMA/ 算法/ 由于/ 网络/ 扩张/ 造成/ 的/ 性能/ 不佳/ ,/ 因而/ 提出/ 了/ 预计/ 算/ 一种/ 称为/ EdgeBitmapEncoding/ 的/ 数据结构/ ,/ 通过/ 这种/ 结构/ 能够/ 快速/ 计算/ 给定/ 两点/ 的/ 最/ 短/ 路径/ ./ 在/ 初始/ 结果/ 计算/ 时/ ,/ 除了/ 利用/ 这一/ 结构/ 外/ ,/ 还/ 采用/ 了/ 文献/ [/ 9/ ]/ 中/ 的/ 欧氏/ 距离/ 限制/ 的/ 思想/ ,/ 即/ 快速/ 找到/ 候选/ 结果/ 集/ ,/ 而后/ 利用/ 欧氏/ 范围/ 查询/ 不断/ 对/ 结果/ 集/ 精炼/ 得到/ 最终/ 结果/ ./ 在/ 维护/ 数据/ 更新/ 时/ ,/ 与/ IMA/ // GMA/ 算法/ 类似/ 需要/ 进行/ 大量/ 判断/ ,/ 实现/ 增量/ 式/ 的/ 结果/ 更新/ 机制/ ./ ER/ -/ CkNN/ 算法/ 的/ 不足/ 可以/ 概括/ 为/ :/ (/ 1/ )/ 当/ 移动/ 对象/ 数据/ 频繁/ 更新/ 时/ ,/ 性能/ 急剧下降/ ;/ (/ 2/ )/ EdgeBit/ -/ mapEncoding/ 数据结构/ 在/ 道路网/ 中边/ 权重/ 更新/ 时/ 需要/ 重新/ 计算/ ./ 此外/ ,/ 文献/ [/ 10/ ]/ 中/ 针对/ 自由/ 运动/ 移动/ 对象/ 的/ 连续/ k/ 近邻/ 查询处理/ 问题/ ,/ 提出/ 了/ 基于/ 流水线/ 式/ 多线程/ 的/ 查询处理/ 框架/ 和/ k/ 近邻/ 查询处理/ 算法/ ,/ 证明/ 了/ 多/ 核/ 平台/ 上/ 多线程/ 技术/ 能够/ 提高/ 连续/ 查询处理/ 的/ 性能/ ./ 但是/ ,/ 道路网/ 连续/ 查询/ 算法/ 中/ 的/ 数据/ 依赖/ 使得/ 流水线/ 式/ 多线程/ 处理/ 框架/ 难以/ 发挥/ 流水线/ 的/ 优势/ ,/ 而/ 正如/ 引言/ 中/ 所述/ ,/ 基于/ 欧氏/ 距离/ 的/ 算法/ 不适/ 用于/ 道路/ 网上/ 的/ 距离/ 计算/ ./ Page3/ 在/ 给出/ 本文/ 解决方案/ 之间/ ,/ 首先/ 对/ 道路网/ 中/ 的/ 正是/ 注意/ 到/ 了/ 已有/ 算法/ 在/ 面对/ 数据/ 频繁/ 更新/ 时/ 的/ 性能/ 低下/ 问题/ ,/ 且/ 多线程/ 技术/ 能够/ 带来/ 算法/ 性能/ 的/ 提高/ ,/ 开展/ 了/ 本文/ 的/ 研究/ ./ 2.2/ 问题/ 描述/ 连续/ k/ 近邻/ 查询/ 问题/ 做出/ 形式化/ 的/ 定义/ ./ 定义/ 1/ (/ 道路网/ )/ ./ 一个/ 道路/ 网络/ 可以/ 表示/ 为/ 一个/ 无向/ 带/ 权图/ G/ =/ (/ N/ ,/ E/ ,/ W/ )/ ,/ 其中/ ,/ N/ 是/ 顶点/ (/ 结点/ )/ 的/ 集合/ ;/ E/ 是/ 边/ 的/ 集合/ ;/ W/ 为/ 正/ 的/ 实数/ 集合/ (/ W/ :/ E/ →/ R/ +/ )/ ,/ 表示/ 边/ 所/ 对应/ 的/ 权值/ ./ 定义/ 2/ (/ 移动/ 对象/ )/ ./ 道路网/ 中/ 的/ 一个/ 移动/ 对象/ 位于/ 网络/ 对应/ 的/ 无/ 向/ 带/ 权图/ 中/ 的/ 边/ e/ (/ e/ ∈/ E/ )/ 上/ ,/ 移动/ 对象/ 在/ 图/ 中/ 的/ 位置/ 可以/ 表示/ 为/ 一个/ 三元组/ (/ ni/ ,/ nj/ ,/ pos/ )/ ,/ 其中/ ,/ ni/ 和/ nj/ 是/ 移动/ 对象/ 所在/ 边/ 的/ 两个/ 结点/ ;/ pos/ ∈/ [/ 0/ ,/ W/ (/ e/ )/ ]/ 是/ 移动/ 对象/ 与/ 结点/ ni/ 之间/ 的/ 距离/ ./ 定义/ 3/ (/ 网络/ 距离/ )/ ./ 道路网/ 中/ 任意/ 两个/ 对象/ p1/ =/ (/ n1i/ ,/ n1j/ ,/ pos1/ )/ ,/ p2/ =/ (/ n2i/ ,/ n2j/ ,/ pos2/ )/ 之间/ 的/ 网络/ 距离/ 定义/ 为/ dN/ (/ p1/ ,/ p2/ )/ =/ 烄/ min/ 烅/ W/ (/ e1/ )/ -/ pos1/ +/ dN/ (/ n1j/ ,/ n2j/ )/ +/ W/ (/ e2/ )/ -/ pos/ 烆/ 定义/ 4/ (/ 连续/ k/ 近邻/ 查询/ )/ ./ 道路网/ 中/ 的/ 连续/ k/ 近邻/ 查询/ q/ 位于/ 网络/ 对应/ 的/ 无/ 向/ 带/ 权图/ 中/ 的/ 边/ e/ (/ e/ ∈/ E/ )/ 上/ ,/ 查询/ 在/ 图/ 中/ 表示/ 为/ 一个/ 四元组/ (/ ni/ ,/ nj/ ,/ pos/ ,/ k/ )/ ,/ 其中/ ,/ ni/ 和/ nj/ 是/ 查询/ 所在/ 边/ 的/ 两个/ 结点/ ;/ pos/ ∈/ [/ 0/ ,/ W/ (/ e/ )/ ]/ 是/ 查询/ 与/ 结点/ ni/ 之间/ 的/ 距离/ ;/ k/ 表示/ 该/ k/ 近邻/ 查询/ 需要/ 返回/ 的/ 移动/ 对象/ 个数/ ./ 连续/ k/ 近邻/ 查询/ 的/ 含义/ 是/ 连续/ 地/ 给出/ 距离/ q/ 位置/ 最近/ 的/ k/ 个/ 移动/ 对象/ ./ 即/ ,/ 考虑/ 移动/ 对象/ 集合/ S/ =/ {/ p1/ ,/ p2/ ,/ …/ ,/ pn/ }/ ,/ 连续/ k/ 近邻/ 查询/ q/ 的/ 结果/ 集/ S/ / S/ ,/ 对于/ 任意/ p/ ∈/ S/ 以及/ p/ ∈/ S/ -/ S/ ,/ dN/ (/ p/ ,/ q/ )/ / dN/ (/ p/ ,/ q/ )/ ./ 其中/ dN/ 表示/ 查询/ 点/ 与/ 移动/ 对象/ 之间/ 的/ 网络/ 距离/ ,/ 其/ 计算方法/ 与/ 定义/ 3/ 相同/ ./ 3/ 基于/ 多线程/ 的/ 连续/ 查询处理/ 框架/ 解决/ 并发/ 连续/ 查询处理/ 的/ 一般/ 方法/ 是/ 以/ 批处理/ 的/ 形式/ ,/ 周期性地/ 给出/ 所有/ 查询/ 的/ 结果/ ./ 与/ 已有/ 的/ 移动/ 对象/ 增量/ 式/ 连续/ 查询处理/ 技术/ 相比/ ,/ 本文/ 采用/ 多线程/ 技术/ 在/ 每个/ 周期/ 重复/ 计算/ 所有/ 查询/ 结果/ ,/ 力求/ 利用/ 多核/ 处理器/ 的/ 并行处理/ 能力/ 提高/ 连续/ 查询处理/ 的/ 性能/ ./ 为此/ ,/ 提出/ 了/ 一种/ 基于/ 多线程/ 的/ 并发/ 连续/ 查询处理/ 框架/ ,/ 如图/ 1/ 所示/ ./ 该/ 框架/ 的/ 主要/ 思想/ 是/ :/ 在/ 多/ 核/ 处理器/ 平台/ 中/ ,/ 将/ 连续/ 查询/ 转换/ 为/ 周期性地/ 查询/ ,/ 在/ 每个/ 周期/ 将/ 包括/ 数据/ 更新/ 和/ 查询处理/ 在内/ 的/ 操作/ 分为/ 两个/ 阶段/ (/ 数据/ 更新/ 、/ 查询处理/ )/ ,/ 在/ 每个/ 阶段/ 针对/ 该/ 阶段/ 内/ 的/ 操作/ 采用/ 多线程/ 进行/ 处理/ ./ 需要/ 注意/ 的/ 是/ 该/ 框架/ 并非/ 基于/ 流水线/ 策略/ ,/ 而是/ 第一个/ 阶段/ 内/ 的/ 所有/ 多线程/ 操作/ 执行/ 完/ 才能/ 继续执行/ 下/ 一个/ 阶段/ 的/ 操作/ ./ 下面/ 将/ 分别/ 说明/ 各个/ 阶段/ 在/ 框架/ 中/ 的/ 作用/ 和/ 其中/ 使用/ 的/ 数据结构/ ./ 3.1/ 数据/ 更新/ 阶段/ 在/ 连续/ 查询处理/ 问题/ 中/ ,/ 移动/ 对象/ 位置/ 信息/ 和/ 查询/ 的/ 位置/ 信息/ 都/ 是/ 不断/ 变化/ 的/ ./ 因此/ ,/ 需要/ 对/ 这些/ 信息/ 在/ 查询处理/ 之前/ 进行/ 更新/ ,/ 保证/ 结果/ 的/ 即时性/ 和/ 正确性/ ./ 为此/ ,/ 在/ 数据/ 更新/ 阶段/ 采用/ 任务/ 并行/ 的/ 方式/ ,/ 分别/ 使用/ 对象/ 更新/ 线程/ 、/ 查询/ 更新/ 线程/ 和/ 边/ 更新/ 线程/ 更新/ 系统/ 中/ 的/ 3/ 种/ 数据/ ./ 由于/ 采用/ 周期性/ 的/ 查询处理/ 策略/ ,/ 因此/ 需要/ 对/ 一个/ 周期/ 内/ 发生/ 更新/ 的/ 数据/ 进行/ 缓存/ ,/ 如图/ 1/ 中/ 数据/ 更新/ 阶段/ 左侧/ 作为/ 输入/ 的/ 3/ 个/ 缓存/ 队列/ ./ 在/ 这/ 一/ 阶段/ 设计/ 了/ 如下/ 内存/ 数据结构/ 来/ 存储/ 各种/ 数据/ :/ 首先/ ,/ 使用/ 边表/ (/ EdgeTable/ ,/ ET/ )/ 存储/ 边/ 的/ 信息/ ./ 该/ 结构/ 是/ 一个/ 基于/ 内存/ 的/ Hash/ 表/ ,/ 存储/ 如下/ 信息/ :/ (/ 1/ )/ 边/ 的/ id/ ;/ (/ 2/ )/ 每条/ 边/ 的/ 起始/ 和/ 终止/ 结点/ ;/ (/ 3/ )/ 每条/ 边/ 的/ 权重/ ./ 其次/ ,/ 使用/ 格网/ 索引/ 存储/ 移动/ 对象/ 信息/ ./ 将/ 移动/ 对象/ 的/ 运动/ 空间/ 划分/ 为/ 均匀/ 的/ 单元格/ ,/ 按照/ 移动/ 对象/ 的/ 空间/ 位置/ 将/ 其/ 映射/ 到/ 对应/ 的/ 单元格/ 中/ ,/ 每个/ 单元格/ 维护/ 一个/ 列表/ 保存/ 指向/ 移动/ 对象/ 数据/ 的/ 指针/ ./ 移动/ 对象/ 真实/ 数据/ 存储/ 在/ 线性/ 数组/ 中/ ,/ 其中/ 每/ 一条/ 记录/ 包含/ 如下/ 信息/ :/ (/ 1/ )/ 移动/ 对象/ id/ ;/ (/ 2/ )/ 移动/ 对象/ 空间/ 位置/ ;/ (/ 3/ )/ 移动/ 对象/ 所在/ 边/ 的/ id/ ;/ (/ 4/ )/ 移动/ 对象/ 在/ 边上/ 的/ 位置/ ./ 最后/ ,/ 使用/ 查询/ 表/ (/ QueryTable/ ,/ QT/ )/ 存储/ 连续/ k/ 近邻/ 查询/ 的/ 信息/ ./ 该/ 结构/ 是/ 一个/ 基于/ 内存/ 的/ 线性/ 结构/ ,/ 存储/ 如下/ 信息/ :/ (/ 1/ )/ 查询/ 的/ id/ ;/ (/ 2/ )/ 查询/ 的/ 空间/ 坐标/ ;/ (/ 3/ )/ 查询/ 的/ k/ 值/ ;/ (/ 4/ )/ 查询/ 结果/ 集/ ;/ (/ 5/ )/ 查询/ 所在/ 的/ 边/ 的/ id/ ;/ (/ 6/ )/ 查询/ 在/ 边上/ 的/ 位置/ ./ 在/ 本/ 阶段/ 的/ 多线程/ 执行/ 中/ ,/ 移动/ 对象/ 格网/ 索引/ 更新/ 线程/ 、/ 边/ 更新/ 线程/ 和/ 查询/ 表/ 更新/ 线程/ 之间/ 由于/ Page4/ 操作/ 的/ 数据/ 不同/ ,/ 因此/ 不/ 存在/ 写/ 操作/ 的/ 同步/ 问题/ ./ 3.2/ 查询处理/ 阶段/ 查询处理/ 阶段/ 在/ 获得/ 前/ 一个/ 阶段/ 准备/ 的/ 数据/ 后/ ,/ 调用/ 查询处理/ 算法/ 计算/ 每个/ 查询/ 的/ 结果/ ,/ 如图/ 1/ 中/ 查询处理/ 阶段/ 及/ 右侧/ 查询/ 结果/ 列表/ ./ 为此/ ,/ 采用/ 数据/ 并行/ 的/ 方式/ 将/ 并发/ 的/ 多用户/ 查询/ 均匀/ 划分/ 给/ 多线程/ ,/ 每个/ 线程/ 调用/ k/ 近邻/ 查询处理/ 算法/ 依次/ 处理/ 每个/ 查询/ 得出/ 最终/ 的/ 查询/ 结果/ ./ 查询处理/ 阶段/ 使用/ 的/ 数据结构/ 在/ 第/ 4/ 节/ 具体/ 讲述/ ./ 由于/ 多线程/ 之间/ 针对/ 不同/ 的/ 查询/ 进行/ 计算/ ,/ 因此/ 不会/ 存在/ 对/ 相同/ 数据/ 同时/ 进行/ 写/ 操作/ 的/ 同步/ 问题/ ./ 4/ 犽/ 近邻/ 查询处理/ 策略/ 本/ 节/ 设计/ 了/ 包含/ 离线/ 预计/ 算/ 与/ 在线/ 查询处理/ 两/ 部分/ 的/ k/ 近邻/ 查询处理/ 策略/ ./ 4.1/ 离线/ 预计/ 算/ 离线/ 预计/ 算/ 首先/ 对/ 道路网/ 中/ 的/ 边/ 利用/ PMR/ -/ Quad/ 树/ 构建/ 索引/ ;/ 其次/ 对/ 移动/ 对象/ 的/ 运动/ 空间/ 用/ 格网/ 进行/ 划分/ ,/ 计算/ 每条/ 边/ 经过/ 的/ 单元格/ ,/ 形成/ 边/ 和/ 单元格/ 之间/ 的/ 映射/ 表/ ./ 经过/ 这些/ 预计/ 算/ 得到/ 的/ 辅助/ 数据结构/ 有助于/ 在/ 查询处理/ 算法/ 中/ 快速/ 地/ 定位/ 可能/ 的/ 查询/ 结果/ ./ 离线/ 预计/ 算/ 在/ 整个/ 框架/ 及/ 算法/ 应用/ 过程/ 中/ 只/ 需/ 执行/ 一次/ ,/ 无论是/ PMR/ -/ Quad/ 树/ 索引/ 还是/ 边/ 和/ 单元格/ 之间/ 的/ 映射/ 表都/ 不会/ 发生/ 改变/ ./ 利用/ PMR/ -/ Quad/ 树/ 构建/ 边/ 索引/ 的/ 方法/ 可见/ 文献/ [/ 11/ ]/ ,/ 这里/ 重点/ 给出/ 计算/ 每条/ 边/ 经过/ 的/ 单元格/ 的/ 算法/ ./ 给定/ 一条/ 网络/ 边/ e/ (/ n1/ ,/ n2/ )/ ,/ n1/ 和/ n2/ 的/ 空间/ 位置/ 分别/ 为/ (/ n1i/ ,/ n1j/ )/ ,/ (/ n2i/ ,/ n2j/ )/ ,/ 则/ 该/ 网络/ 经过/ 的/ 单元格/ 可用/ 算法/ 1/ 计算/ ./ 算法/ 1/ ./ 计算/ 交叉/ 的/ 单元格/ ./ Input/ :/ n1/ ,/ n2Output/ :/ cellList/ 图/ 2k/ 近邻/ 查询处理/ 算法/ 示意图/ 1/ ./ s/ =/ (/ n2j/ -/ n1j/ )/ // (/ n2i/ -/ n1i/ )/ ,/ b/ =/ n1j/ -/ s/ ×/ n1i2/ ./ beginX/ =/ n1i/ // l/ ,/ beginY/ =/ n1j/ // l3/ ./ endX/ =/ n2i/ // l/ ,/ endY/ =/ n2j/ // l4/ ./ whilebeginX/ !/ =/ endX5/ ./ ifendX/ >/ beginX6/ ./ nextX/ =/ beginX/ +/ 17/ ./ else8/ ./ nextX/ =/ beginX/ -/ 19/ ./ nextY/ =/ (/ s/ ×/ nextX/ ×/ l/ +/ b/ )/ // l10/ ./ fori/ =/ beginYtonextY11/ ./ cellList/ =/ cellList/ ∪/ c/ (/ beginX/ ,/ i/ )/ 12/ ./ beginX/ =/ nextX/ ,/ beginY/ =/ nextY13/ ./ fori/ =/ beginYtoendY14/ ./ cellList/ =/ cellList/ ∪/ c/ (/ endX/ ,/ i/ )/ 15/ ./ returncellList/ 算法/ 1/ 首先/ 计算/ 由边/ 两个/ 端点/ 组成/ 的/ 线段/ 的/ 斜率/ 和/ 截距/ (/ 第/ 1/ 行/ )/ ,/ 而后/ 计算/ 起点/ 和/ 终点/ 所在/ 的/ 单元格/ (/ 第/ 2/ ~/ 3/ 行/ )/ ./ 接下来/ 算法/ 在/ x/ 轴/ 方向/ 每次/ 推进/ 一个/ 单元格/ ,/ 在/ 每次/ 循环/ 中将/ y/ 轴/ 方向/ 所有/ 与/ 线段/ 相交/ 的/ 单元格/ 加入/ 结果/ 集中/ (/ 第/ 5/ ~/ 12/ 行/ )/ ./ 最后/ 算法/ 将/ 终点/ 所在/ 列/ 与/ 线段/ 相交/ 的/ 单元格/ 加入/ 结果/ 集/ (/ 第/ 13/ ~/ 14/ 行/ )/ ./ 通过/ 算法/ 1/ 可/ 构造/ 边/ 和/ 单元格/ 之间/ 的/ 映射/ 表/ ./ 4.2/ 在线/ 查询处理/ 算法/ 在线/ 处理/ 部分/ 提出/ 了/ 过滤/ 精炼/ 的/ 两步/ 查询处理/ 算法/ ./ 首先/ 在/ 过滤/ 阶段/ ,/ 使用/ 边/ 和/ 单元格/ 的/ 映射/ 表/ 快速/ 过滤/ 不/ 可能/ 的/ 查询/ 结果/ ,/ 并/ 确保/ 所有/ 可能/ 的/ 结果/ 都/ 在/ 候选/ 结果/ 集中/ ;/ 在/ 精炼/ 阶段/ ,/ 不断/ 利用/ 基于/ 欧氏/ 距离/ 的/ 范围/ 查询/ 排除/ 不/ 正确/ 的/ 结果/ ./ 具体来说/ ,/ 过滤/ 阶段/ 的/ 实现/ 可用/ 图/ 2/ (/ a/ )/ 进行/ 解释/ ./ 以/ q/ 为/ 2/ 近邻/ 的/ 查询/ 为例/ ,/ 首先/ 确定/ q/ 所在/ 的/ 单元格/ ,/ 并/ 判断/ 该/ 单元格/ 内/ 是否/ 存在/ k/ 个/ 对象/ ,/ 若/ 不/ 存在/ 则/ 在/ 该/ 单元格/ 周围/ 的/ 8/ 个/ 单元格/ 中/ 进行/ 搜索/ ,/ 直到/ 找到/ 至少/ k/ 个/ 为止/ ./ 而后/ 以/ 这些/ 对象/ 中距/ 查询/ qPage5/ 最远/ 的/ 网络/ 距离/ 为/ 半径/ 作圆/ ,/ 并/ 以/ 该/ 圆为/ 一个/ 空间/ 范围/ 查询/ ,/ 通过/ PMR/ -/ Quad/ 树/ 查找/ 与/ 该/ 圆/ 相交/ 的/ 边/ ,/ 通过/ 边/ 和/ 单元格/ 的/ 映射/ 关系/ 找到/ 格网/ 索引/ 中/ 的/ 移动/ 对象/ 作为/ 候选/ 结果/ 集/ ./ 此时/ 的/ 候选/ 结果/ 集/ 包含/ 了/ 全部/ 可能/ 的/ 查询/ 结果/ ./ 精炼/ 阶段/ 可用/ 图/ 2/ (/ b/ )/ 进行/ 解释/ ./ 在/ 得到/ 了/ 候选/ 结果/ 集后/ ,/ 依次/ 利用/ 候选/ 结果/ 集中/ 移动/ 对象/ 与/ 查询/ 的/ 网络/ 距离/ 进行/ 欧氏/ 范围/ 查询/ ,/ 并/ 排除/ 不/ 正确/ 的/ 结果/ ./ 即/ 在/ 图/ 2/ (/ b/ )/ 中用/ q/ 到/ p2/ 的/ 网络/ 距离/ 进行/ 范围/ 查询/ ,/ 得到/ 结果/ 集中/ 的/ 移动/ 对象/ 个数/ 为/ 2/ 时/ 停止/ ,/ 这/ 两个/ 移动/ 对象/ 即/ 为/ 最终/ 的/ 基于/ 道路网/ 距离/ 的/ k/ 近邻/ 查询/ 结果/ ./ 对于/ 每/ 一个/ 查询/ q/ 来说/ ,/ 其/ k/ 近邻/ 查询处理/ 算法/ 如/ 算法/ 2/ 所示/ ./ 算法/ 2/ ./ kNN/ 算法/ ./ Input/ :/ q/ ,/ EdgeCellTable/ ,/ GridIndex/ ,/ EdgeTable/ ,/ Output/ :/ ResultSet/ // // FilterStep1/ ./ TempCellList/ =/ CellExpansion/ (/ q/ )/ 2/ ./ kthNDT/ =/ maxNDT/ (/ TempCellList/ )/ 3/ ./ edgeList/ =/ euclideanRangeQuery/ (/ q/ ,/ kthNDT/ )/ 4/ ./ candidateResult/ =/ retrieveObjects/ (/ edgeList/ )/ // // RefinementStep5/ ./ if/ (/ candidateResult/ ./ length/ =/ k/ )/ 6/ ./ ResultSet/ =/ candidateResult7/ ./ else8/ ./ while/ (/ candidateResult/ ./ length/ >/ k/ )/ 9/ ./ p/ =/ nextEuclideanNN/ (/ candidateResult/ )/ 10/ ./ if/ (/ dN/ (/ q/ ,/ p/ )/ </ kthNDT/ )/ 11/ ./ updateResult/ (/ p/ )/ 12/ ./ kthNDT/ =/ dN/ (/ q/ ,/ p/ )/ 13/ ./ edgeList/ =/ eculideanRangeQuery/ (/ q/ ,/ kthNDT/ )/ 14/ ./ candidateResult/ =/ retrieveObjects/ (/ edgeList/ )/ 15/ ./ ResultSet/ =/ candidateResult16/ ./ returnResultSet/ 本文/ 提出/ 的/ k/ 近邻/ 查询处理/ 策略/ 中/ ,/ 离线/ 预计/ 算/ 阶段/ 只/ 需/ 进行/ 一次/ 计算/ ,/ 在/ 以后/ 的/ 查询处理/ 过程/ 中/ 不/ 需要/ 对/ 离线/ 预计/ 算/ 阶段/ 的/ 结果/ 进行/ 更改/ ;/ 而/ 在线/ k/ 近邻/ 查询处理/ 算法/ 则/ 通过/ 欧氏/ 距离/ 限制/ 过快/ 的/ 速度/ 得到/ 候选/ 结果/ 集/ ,/ 使得/ 在/ 计算/ 网络/ 距离/ 时/ 不必/ 在/ 整个/ 道路网/ 中/ 遍历/ ./ 5/ 理论/ 分析/ 5.1/ 犽/ 近邻/ 算法/ 复杂性/ 为了/ 简化/ 分析/ ,/ 假设/ 道路网/ 和/ 移动/ 对象/ 在/ 单位/ 正方形/ 空间/ 内/ 均匀分布/ ,/ 则/ 移动/ 对象/ 的/ 空间/ 位置/ 坐标/ 在/ [/ 0/ ,/ 1/ ]/ ×/ [/ 0/ ,/ 1/ ]/ 区间/ 内/ 取值/ ./ 格网/ 单元格/ 的/ 边长/ 为/ l/ ,/ 则/ 运动/ 空间/ 总计/ 包含/ 1/ // l/ ×/ 1/ // l/ 个/ 单元格/ ./ 道路网/ 的/ 边数/ 为/ E/ ,/ 移动/ 对象/ 总数/ 为/ M/ ./ 对/ 每个/ 查询/ q/ ,/ k/ 近邻/ 查询处理/ 算法/ 按/ 算法/ 2/ 所示/ 步骤/ 进行/ 处理/ ,/ 依次/ 来/ 分析/ 每条/ 语句/ 的/ 计算/ 复杂性/ ./ 第/ 1/ 行/ 进行/ 单元格/ 扩张/ 以/ 初选/ k/ 个/ 移动/ 对象/ ,/ 因此/ 包含/ k/ 个/ 对象/ 的/ 区域/ 面积/ 为/ kMl2/ 个/ 单元格/ ,/ 复杂度/ 为/ Ok/ 遍历/ k/ 单元格/ 中/ 移动/ 对象/ 与/ q/ 的/ 最大/ 网络/ 距离/ ,/ 相当于/ 在/ kEM/ 条边/ 组成/ 的/ 子/ 图/ 中/ 计算/ 两点/ 之间/ 的/ 最/ 短/ 路径/ ,/ 根据/ Dijkstra/ 算法/ 得到/ 其/ 复杂度/ 为/ OkE/ 行/ 进行/ 基于/ PMR/ -/ Quad/ 树/ 的/ 欧氏/ 范围/ 查询/ ,/ 其/ 复杂度/ 为/ O/ (/ 2E1/ // 2/ )/ [/ 12/ ]/ ./ 第/ 4/ 行/ 基于/ 边/ 和/ 单元格/ 映射/ 表/ 获取/ 候选/ 数据/ 集/ ,/ 由于/ 该表/ 已/ 预计/ 算/ 得出/ ,/ 因此/ 只/ 与/ 边/ 结果/ 集中/ 的/ 不/ 正确/ 结果/ ./ 在/ 最好/ 情况/ 下/ ,/ 候选/ 结果/ 集中/ 的/ 对象/ 个数/ 刚好/ 为/ k/ ,/ 算法/ 终止/ ./ 如果/ 个数/ 大于/ k/ ,/ 数/ 有关/ ,/ 其/ 复杂度/ 为/ OkE/ (/ )/ M/ ./ 第/ 5/ ~/ 15/ 行/ 排除/ 候选/ 由于/ 候选/ 结果/ 集中/ 最/ 多/ 包含/ k/ 槡/ M/ +/ (/ )/ l/ 所以/ 需要/ 进行/ k/ 槡/ M/ +/ (/ )/ l/ 况下/ 第/ 11/ ~/ 14/ 行/ 的/ 复杂度/ 等于/ 第/ 2/ ~/ 4/ 行/ ./ 综上所述/ ,/ 在/ 最好/ 情况/ 下/ ,/ k/ 近邻/ 算法/ 复杂度/ 为/ 在/ 最差/ 情况/ 下/ ,/ k/ 近邻/ 算法/ 复杂度/ 为/ {/ Ml2/ +/ kEOkk/ 槡/ M/ +/ (/ )/ l/ [/ 事实上/ ,/ 算法/ 计算/ 时间/ 主要/ 由/ 两/ 部分/ 决定/ ,/ 一是/ 单元格/ 扩张/ 时间/ (/ 第/ 1/ 行/ )/ ,/ 二是/ 计算/ 网络/ 距离/ 并/ 获取/ 移动/ 对象/ 时间/ (/ 第/ 2/ ~/ 4/ 行/ )/ ./ 相对来说/ 单元格/ 扩张/ 时间/ 对/ 算法/ 性能/ 影响/ 较/ 小/ ./ 因此/ ,/ 综上/ 由式/ (/ 2/ )/ 可以/ 得出/ 以下/ 结论/ :/ (/ 1/ )/ 算法/ 计算/ 时间/ 随/ k/ 、/ E/ 的/ 增大/ 而增/ 她/ 长/ ;/ (/ 2/ )/ l/ 较大/ 时/ ,/ 计算/ 时间/ 较长/ ;/ l/ 越小/ 计算/ 时间/ 越短/ ;/ 但是/ l/ 小到/ 一定/ 程度/ 后/ ,/ 由式/ (/ 2/ )/ 知/ 计算/ 网络/ 距离/ 并/ 获取/ 移动/ 对象/ 时间/ 变化/ 不/ 大/ ,/ 因此/ 算法/ 计算/ 时间/ 趋于平稳/ ./ (/ 3/ )/ M/ 较/ 小时/ ,/ 计算/ 时间/ 较长/ ;/ M/ 越大/ 计算/ 时间/ Page6/ 越短/ ;/ 但是/ M/ 大到/ 一定/ 程度/ 后/ ,/ 由式/ (/ 2/ )/ 知/ 计算/ 网络/ 距离/ 并/ 获取/ 移动/ 对象/ 时间/ 变化/ 不/ 大/ ,/ 因此/ 算法/ 计算/ 时间/ 趋于平稳/ ./ 5.2/ 多线程/ 处理/ 框架/ 的/ 加速/ 比行/ 系统/ 的/ 加速/ 比/ 可/ 表示/ 为/ 接下来/ 分析/ 多线程/ 处理/ 框架/ 的/ 加速/ 比/ ./ 通常/ 并/ 其中/ Ts/ 为/ 串行/ 算法/ 的/ 执行/ 时间/ ,/ Tp/ 为/ 并行算法/ 的/ 执行/ 时间/ ./ 在/ 本文/ 的/ 多线程/ 并行处理/ 框架/ 中/ ,/ 连续/ k/ 近邻/ 查询处理/ 算法/ 的/ 串行/ 执行/ 时间/ 可以/ 表示/ 为/ 其中/ ,/ Tou/ 、/ Teu/ 、/ Tqu/ 分别/ 表示/ 更新/ 移动/ 对象/ 、/ 更新/ 边/ 的/ 权重/ 、/ 更新/ 查询/ 的/ 执行/ 时间/ ,/ Tqe/ 表示/ 针对/ 所有/ 并发/ 的/ 查询/ 执行/ 查询处理/ 算法/ 的/ 时间/ ./ 基于/ 多线程/ 处理/ 框架/ 的/ 并行执行/ 时间/ 可以/ 表示/ 为/ 其中/ n/ 表示/ 处理器/ 核数/ ,/ Tc/ 表示/ 多线程/ 启动/ 、/ 通信/ 等/ 的/ 开销/ ./ 由于/ 数据/ 更新/ 阶段/ 使用/ 任务/ 并行/ 的/ 机制/ ,/ 所以/ 该/ 阶段/ 的/ 执行/ 时间/ 等于/ 最大/ 的/ 数据/ 更新/ 时间/ ;/ 而/ 由于/ 查询处理/ 阶段/ 使用/ 数据/ 并行/ 机制/ ,/ 所以/ 该/ 阶段/ 的/ 执行/ 时间/ 等于/ 原/ 执行/ 时间/ 除以/ 并行执行/ 的/ 线程/ 数/ (/ 一般/ 设置/ 为/ 处理器/ 核数/ )/ ;/ 此外/ ,/ 多线程/ 在/ 启动/ 、/ 终止/ 、/ 上下文/ 切换/ 、/ 访问共享/ 缓存/ 等/ 方面/ 存在/ 开销/ ./ 综上/ ,/ 框架/ 的/ 并行执行/ 时间/ 等于/ 上述/ 三者/ 之/ 和/ ./ 将式/ (/ 4/ )/ 、/ (/ 5/ )/ 代入/ 式/ (/ 3/ )/ 可/ 得/ ,/ 本文/ 提出/ 的/ 基于/ 多线程/ 的/ 并行执行/ 框架/ 的/ 加速/ 比/ 为/ 需要/ 特别/ 说明/ 的/ 是/ 在/ 传统/ 的/ 单核/ 处理器/ 平台/ 上/ ,/ 只能/ 将/ 多个/ 指令流/ 交错/ 执行/ ,/ 因此/ 多线程/ 一般/ 都/ 被/ 当做/ 是/ 一种/ 能够/ 实现/ 延迟/ 隐藏/ 的/ 编程/ 手段/ ./ 在/ 单核/ 平台/ 上/ 执行/ 本/ 框架/ 并/ 不能/ 提高/ 算法/ 性能/ ,/ 具体来说/ 在/ 单核/ 平台/ 上/ 式/ (/ 5/ )/ 中/ Tc/ 所/ 占/ 比例/ 会/ 大大增加/ ./ 在/ 多/ 核/ 平台/ 上/ ,/ 其/ 真正/ 的/ 多线程/ 执行/ 硬件/ 环境/ 能够/ 极大/ 降低/ Tc/ 的/ 值/ ,/ 因而/ 能够/ 提高/ 查询处理/ 性能/ ./ 但是/ 多核/ 平台/ 上/ 例如/ 双核/ 平台/ 上/ 通常/ 也/ 只/ 具备/ 2/ 个/ 线程/ 并行执行/ 的/ 能力/ ,/ 因此/ 在/ 执行/ 数据/ 并行任务/ 时/ ,/ 一般/ 设置/ 线程/ 数/ 等于/ 处理器/ 核数/ ./ 6/ 实验/ 结果/ 与/ 分析/ 实验/ 的/ 硬件/ 环境/ 为/ :/ IntelPentiumDualE22002/ ./ 2GHzCPU/ ,/ 1MBL2/ 高速缓存/ ,/ 1GB/ 内存/ ,/ 操作系统/ 采用/ WindowsXPSP2/ ./ 实验/ 中/ 分别/ 采用/ 上海市/ 和/ 德国/ Oldenburg/ [/ 13/ ]/ 两个/ 城市/ 的/ 道路网/ 来/ 生成/ 移动/ 对象/ 和/ 查询/ ./ 上海市/ 道路网/ 数据/ 为本/ 实验室/ 购买/ 的/ shapefile/ 文件/ ,/ 该/ 文件/ 经/ 处理/ 后/ 共有/ 175710/ 个/ 道路/ 结点/ 和/ 180660/ 条道/ 路边/ ./ 自行设计/ 了/ 道路/ 网上/ 移动/ 对象/ 生成/ 算法/ ,/ 随机/ 生成/ 移动/ 对象/ 和/ 查询/ ./ 德国/ 城市/ Oldenburg/ 的/ 道路网/ 数据/ 由/ 文献/ [/ 13/ ]/ 获得/ ,/ 该/ 道路网/ 为/ 移动/ 对象/ 研究/ 中/ 广泛/ 采用/ 的/ 测试数据/ 集/ ,/ 共有/ 6105/ 个/ 道路/ 结点/ 和/ 7035/ 条道/ 路边/ ./ 采用/ 标准/ 的/ 移动/ 对象/ 生成器/ 生成/ 移动/ 对象/ 和/ 查询/ ./ 表/ 1/ 列出/ 了/ 实验/ 中/ 采用/ 的/ 各种/ 参数/ 的/ 范围/ 及其/ 默认值/ ./ 其中/ 数据/ 的/ 灵敏性/ 是/ 指/ 每个/ 周期/ 发生变化/ 的/ 数据/ 占/ 总/ 数据量/ 的/ 比例/ ,/ 体现/ 了/ 数据/ 频繁/ 更新/ 的/ 程度/ ./ 实验/ 参数/ 默认值/ 移动/ 对象/ 数目/ (/ N/ )/ 100k10/ ,/ 50/ ,/ 100/ ,/ 150/ ,/ 200/ (/ k/ )/ 查询/ 数目/ (/ Q/ )/ 10k1/ ,/ 5/ ,/ 10/ ,/ 25/ ,/ 50/ (/ k/ )/ 对象/ 分布/ 查询/ 分布/ 移动/ 对象/ 灵敏性/ 50/ %/ 10/ %/ ,/ 30/ %/ ,/ 50/ %/ ,/ 70/ %/ ,/ 100/ %/ 查询/ 灵敏性/ 50/ %/ 10/ %/ ,/ 30/ %/ ,/ 50/ %/ ,/ 70/ %/ ,/ 100/ %/ 边/ 的/ 灵敏性/ 4/ %/ 1/ %/ ,/ 2/ %/ ,/ 4/ %/ ,/ 8/ %/ ,/ 16/ %/ 实验/ 中将/ 本文/ 提出/ 的/ 不/ 采用/ 多线程/ 执行/ (/ 即/ 仍/ 采用/ 两/ 阶段/ 的/ 重/ 计算/ 所有/ 查询/ 的/ 机制/ ,/ 但/ 在/ 每个/ 阶段/ 内/ 串行/ 执行/ 每个/ 操作/ )/ 的/ k/ 近邻/ 算法/ 称为/ S/ -/ kNN/ ,/ 将/ 基于/ 多线程/ 处理/ 框架/ 的/ k/ 近邻/ 查询处理/ 称为/ P/ -/ kNN/ ,/ 此外/ 为了/ 与/ 已有/ 算法/ 进行/ 比较/ ,/ 实现/ 了/ 第/ 2/ 节/ 分析/ 的/ IMA/ 和/ ER/ -/ CkNN/ 算法/ ./ 这些/ 算法/ 均/ 采用/ C++/ 语言/ 在/ VisualStudio/ ./ net2005/ 开发/ 环境/ 中/ 编程/ 实现/ ./ 由于/ 框架/ 和/ 算法/ 中/ 使用/ 的/ 全部/ 数据结构/ 都/ 是/ 基于/ 内存/ ,/ 因此/ 在/ 算法/ 比较/ 中以/ CPU/ 执行/ 时间/ 作为/ 评价/ 指标/ ,/ 该值/ 的/ 获取/ 采用/ 运行/ 10/ 个/ 周期/ 取/ 平均/ 的/ 方法/ ./ 6.1/ 数据分布/ 及/ 网格/ 划分/ 对/ 框架/ 性能/ 的/ 影响/ 首先/ 利用/ 上海市/ 道路网/ 和/ 默认/ 数据量/ 及/ 灵敏性/ ,/ 测试数据/ 分布/ 和/ 格网/ 划分/ 对/ 本文/ 提出/ 的/ 基于/ 多线程/ 的/ 连续/ 查询处理/ 框架/ 性能/ 的/ 影响/ ./ 本/ 实验/ 中/ k/ =/ 2/ ./ 图/ 3/ 显示/ 了/ 数据分布/ 对/ 框架/ 性能/ 的/ 影响/ ,/ 可见/ 当/ 查询/ 为/ 高斯分布/ 时/ 框架/ 性能/ 较/ 好/ ,/ 而/ 移动/ 对象/ 的/ 分布/ 对/ 框架/ 性能/ 影响/ 不大/ ./ 这/ 是因为/ ,/ 查询/ 比较/ 集中/ 时/ 计算/ 网络/ 距离/ 的/ 数据/ 重用/ 性较/ 高/ ./ 在/ 以后/ 的/ 实验/ 中/ 使用/ 均匀分布/ 的/ 移动/ 对象/ 和/ 高斯分布/ 的/ 查询/ ./ 需要/ 说明/ 的/ 是/ IMA/ 和/ ER/ -/ CkNN/ 算法/ 当/ 查询/ 为/ 高斯/ Page7/ 分布/ 时/ 同样/ 性能/ 达到/ 最优/ ./ 图/ 4/ 显示/ 了/ 随/ 单元格/ 数量/ 变化/ 框架/ 的/ 性能/ 变化/ 情况/ ./ 可见/ 随着/ 单元格/ 数量/ 的/ 增加/ 框架/ 性能/ 越来越/ 好/ ,/ 但是/ 当/ 单元格/ 数目/ 大于/ 一定/ 数目/ 时/ ,/ 性能/ 提高/ 不/ 明显/ ,/ 与/ 第/ 5/ 节/ 理论/ 分析/ 结果/ 相吻合/ ./ 在/ 以后/ 的/ 实验/ 中/ 设置/ 将/ 运动/ 空间/ 划分/ 为/ 400/ ×/ 400/ 个/ 单元格/ ./ 6.2/ 数据/ 灵敏性/ 对/ 性能/ 的/ 影响/ 接下来/ 利用/ 上海市/ 道路网/ 和/ 默认/ 数据量/ ,/ 测试数据/ 灵敏性/ 对/ 已有/ 算法/ 和/ 本文/ 提出/ 框架/ 性能/ 的/ 影响/ ./ 本/ 实验/ 中/ k/ =/ 2/ ./ 图/ 5/ 显示/ 了/ 实验/ 结果/ ./ 可以/ 看到/ 在/ 3/ 种/ 数据/ 的/ 灵敏性/ 逐渐/ 增大/ 时/ ,/ S/ -/ kNN/ 算法/ 性能/ 逐渐/ 优于/ 传图/ 5/ 数据/ 灵敏性/ 对/ 算法/ 性能/ 的/ 影响/ 6.3/ 数据量/ 对/ 性能/ 的/ 影响/ 最后/ ,/ 在/ 默认/ 数据/ 灵敏性/ 和/ 不同/ 数据量/ 下/ 测试/ 本文/ 提出/ 的/ k/ 近邻/ 查询处理/ 算法/ 在/ 串行/ 执行/ 和/ 多线程/ 并行执行/ 框架/ 下/ 的/ 性能/ 比较/ ./ 本/ 实验/ 中/ k/ =/ 10/ ./ 图/ 6/ (/ a/ )/ 、/ (/ b/ )/ 显示/ 了/ 采用/ 上海/ 道路网/ 的/ 实验/ 结果/ ./ 图/ 6/ (/ a/ )/ 显示/ 了/ 移动/ 对象/ 数目/ 对/ 框架/ 执行/ 性能/ 的/ 影响/ ./ 可以/ 看到/ ,/ 随着/ 移动/ 对象/ 数据量/ 的/ 增加/ ,/ 本文/ 提出/ 的/ 框架/ 执行/ 时间/ 越/ 少/ ,/ 且/ 在/ 数目/ 大到/ 一定/ 程度/ 后/ 性能/ 趋于平稳/ ./ 这/ 是因为/ 对象/ 较/ 少时/ ,/ 在/ k/ 近邻/ 算法/ 中/ 采用/ Dijkstra/ 算法/ 计算/ 网络/ 距离/ 时/ 的/ 代价/ 越统/ 的/ IMA/ 算法/ 和/ ER/ -/ CkNN/ 算法/ ,/ 其中/ 图/ 5/ (/ c/ )/ 所示/ 在/ 对象/ 和/ 查询/ 灵敏性/ 设置/ 为/ 默认/ 的/ 50/ %/ 时/ ,/ S/ -/ kNN/ 始终/ 优于/ 已有/ 的/ 算法/ ./ 这/ 是因为/ IMA/ 和/ ER/ -/ CkNN/ 算法/ 采用/ 了/ 增量/ 式/ 的/ 查询处理/ 机制/ ,/ 但是/ 当/ 数据/ 频繁/ 更新/ 时/ ,/ 判断/ 是否/ 需要/ 重新/ 计算/ 查询/ 结果/ 的/ 代价/ 越来越/ 高/ ,/ 抵消/ 了/ 结果/ 重用/ 带来/ 的/ 性能/ 提升/ ./ 此外/ ,/ 还/ 可以/ 看到/ ,/ 无论/ 在/ 何种/ 数据/ 设置/ 条件/ 下/ ,/ 基于/ 多线程/ 查询处理/ 框架/ 的/ P/ -/ kNN/ 性能/ 始终/ 优于/ 已有/ 算法/ ./ 在/ 3/ 种/ 情况/ 下/ ,/ 随着/ 灵敏性/ 的/ 提高/ S/ -/ kNN/ 和/ P/ -/ kNN/ 的/ CPU/ 执行/ 时间/ 略有/ 上升/ ,/ 这/ 是因为/ 灵敏性/ 越高/ 需要/ 更新/ 的/ 数据量/ 越/ 多/ ,/ 在/ 数据/ 更新/ 阶段/ 的/ 时间/ 代价/ 越大/ ,/ 但/ 由于/ 整个/ 框架/ 中/ 查询处理/ 阶段/ 的/ 时间/ 代价/ 占/ 很大/ 比例/ ,/ 因此/ 更新/ 代价/ 的/ 提高/ 并/ 不会/ 严重/ 影响/ 整个/ 框架/ 的/ 性能/ ./ 大/ ,/ 而/ 这种/ 代价/ 是/ 整个/ 框架/ 执行/ 中/ 代价/ 最大/ 的/ 部分/ ./ 相反/ 的/ ,/ 当/ 对象/ 数目/ 较多时/ ,/ 计算/ 网络/ 距离/ 的/ 代价/ 就/ 越/ 小/ ./ 在/ 图/ 6/ (/ a/ )/ 显示/ 的/ 实验/ 结果/ 中/ ,/ 在/ 不同/ 对象/ 数目/ 情况/ 下/ 加速/ 比/ 变化/ 不/ 大/ ,/ 平均/ 为/ 1.61/ ./ 图/ 6/ (/ b/ )/ 显示/ 了/ 查询/ 数目/ 对/ 框架/ 执行/ 性能/ 的/ 影响/ ./ 可以/ 看到/ 随着/ 查询/ 数目/ 的/ 增多/ 查询处理/ 的/ 时间/ 越大/ ,/ 且/ 并行执行/ 的/ 性能/ 加速/ 比/ 逐渐/ 变大/ ./ 这/ 是因为/ 在/ 基于/ 多线程/ 的/ 查询处理/ 框架/ 中/ 的/ 查询处理/ 阶段/ 将/ 查询/ 集合/ 均匀/ 划分/ 给/ 多线程/ 执行/ ,/ 查询/ 数目/ 越/ 多/ 查询处理/ 阶段/ 在/ 整个/ 框架/ 执行/ 代价/ 中/ 的/ 比重/ 越高/ ,/ 由式/ (/ 4/ )/ 知/ ,/ 加速/ Page8/ 比越/ 接近/ n/ ./ 在/ 图/ 6/ (/ b/ )/ 显示/ 的/ 实验/ 结果/ 中/ ,/ 平均/ 加速/ 比为/ 1.67/ ./ 在/ 图/ 6/ (/ a/ )/ 、/ (/ b/ )/ 中/ ,/ 加速/ 比/ 在/ 1.51/ ~/ 1.7/ 之间/ 变化/ ./ 图/ 6/ (/ c/ )/ 显示/ 了/ 在/ 不同/ 移动/ 对象/ 和/ 查询/ 数据量/ 设置/ 下/ ,/ 多线程/ 处理/ 框架/ 在/ 不同/ 道路网/ 规模/ 下/ 的/ 图/ 6/ 数据量/ 对/ 框架/ 性能/ 的/ 影响/ 7/ 结论/ 道路网/ 中/ 连续/ k/ 近邻/ 查询处理/ 的/ 难点/ 在于/ :/ (/ 1/ )/ 如何/ 对/ 并发/ 的/ 查询/ 进行/ 周期性/ 维护/ ;/ (/ 2/ )/ 如何/ 快速/ 有效/ 地/ 计算/ 两点/ 之间/ 的/ 网络/ 距离/ 或者/ 减少/ 距离/ 计算/ 的/ 次数/ ./ 本文/ 采用/ 基于/ 多线程/ 的/ 查询处理/ 框架/ 周期性地/ 重/ 计算/ 所有/ 查询/ 结果/ ,/ 解决/ 了/ 第/ 1/ 个/ 难点/ ;/ 通过/ 设计/ 了/ 包含/ 离线/ 预计/ 算/ 和/ 在线/ 查询处理/ 算法/ 两/ 部分/ 的/ k/ 近邻/ 查询处理/ 策略/ 解决/ 了/ 第/ 2/ 个/ 难点/ ./ 在/ 实际/ 道路/ 应用/ 中/ ,/ 道路网/ 往往/ 有/ 很多/ 约束/ ,/ 例如/ 单行/ 路/ 、/ 有些/ 路口/ 不/ 允许/ 左右/ 转弯/ 等/ ,/ 因此/ 如何/ 基于/ 更加/ 复杂/ 的/ 道路网/ 模型/ 进行/ 算法/ 设计/ ,/ 使/ 研究成果/ 更加/ 贴近/ 实际/ 应用/ ,/ 是/ 下/ 一步/ 重点/ 研究/ 的/ 内容/ ./ 此外/ ,/ 在/ 设计/ 时空/ 连续/ 查询处理/ 算法/ 时应/ 充分考虑/ 多核/ 体系结构/ 带来/ 的/ 并行计算/ 能力/ ./ 

