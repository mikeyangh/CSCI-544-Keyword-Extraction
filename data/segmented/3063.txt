Page1/ 广义/ 病毒/ 的/ 形式化/ 定义/ 及/ 识别/ 算法/ 何鸿君/ 1/ )/ 罗莉/ 1/ )/ 董/ 黎明/ 2/ )/ 何修雄/ 1/ )/ 侯方勇/ 1/ )/ 钟广军/ 1/ )/ 1/ )/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 2/ )/ (/ 后勤/ 指挥/ 学院/ 北京/ 100858/ )/ 摘要/ 恶意软件/ 的/ 定义/ 是/ 多年/ 来/ 安全/ 领域/ 的/ 研究/ 重点/ ./ 恶意软件/ 包括/ 病毒/ 、/ 蠕虫/ 和/ 木马/ ./ 目前/ 仅/ 有/ 病毒/ 的/ 形式化/ 定义/ ,/ 蠕虫/ 、/ 木马/ 没有/ 公认/ 的/ 形式化/ 定义/ ./ 按照/ 传统/ 病毒/ 的/ 定义/ ,/ 不/ 存在/ 准确/ 识别/ 病毒/ 的/ 算法/ ./ 文中/ 提出/ 代码/ 是否/ 为/ 病毒/ 是/ 相对/ 于/ 用户/ 而言/ 的/ ,/ 给/ 用户/ 带来/ 损害/ 的/ 代码/ 才/ 是/ 病毒/ ./ 据此/ 观点/ ,/ 文中/ 以/ 用户/ 意愿/ 为/ 标准/ ,/ 将/ 病毒/ 区分/ 为/ 显式/ 病毒/ 、/ 隐式/ 病毒/ ,/ 并/ 给出/ 了/ 显式/ 病毒/ 的/ 形式化/ 定义/ 和/ 识别/ 算法/ ./ 理论/ 分析表明/ ,/ 传统/ 病毒/ 以及/ 大部分/ 木马/ 、/ 蠕虫/ 均/ 属于/ 显式/ 病毒/ ,/ 实际/ 案例/ 分析/ 也/ 证实/ 了/ 这/ 一点/ ./ 关键词/ 病毒/ ;/ 蠕虫/ ;/ 木马/ ;/ 用户/ 意愿/ ;/ 显式/ 病毒/ ;/ 隐式/ 病毒/ 1/ 引言/ 病毒/ 的/ 定义/ 是/ 反病毒/ 技术/ 研究/ 的/ 基础/ ,/ 一直/ 是/ 计算机/ 安全/ 领域/ 的/ 重要/ 研究课题/ ,/ 相关/ 论文/ 很多/ [/ 1/ ]/ ./ 广义/ 病毒/ 包括/ 了/ 传统/ 病毒/ 、/ 蠕虫/ 、/ 木马/ 等/ 所有/ 恶意/ 程/ Page2/ 蠕虫/ 、/ 木马/ 的/ 定义/ 研究/ ,/ 情况/ 要/ 更/ 糟糕/ 些/ ,/ 有/ 个别/ 的/ 形式化/ 定义/ [/ 4/ ]/ ,/ 但/ 影响力/ 不大/ ./ 事实上/ ,/ 随着/ 病毒/ 技术/ 的/ 发展/ ,/ 很多/ 病毒/ 同时/ 具备/ 病毒/ 、/ 蠕虫/ 、/ 木马/ 的/ 特征/ ./ 例如/ ,/ 2001/ 年/ 9/ 月/ 8/ 日/ 发现/ 的/ Nimda/ 病毒/ ,/ NAI/ 公司/ 把/ 它/ 归/ 为/ 病毒/ ,/ CERT/ 把/ 它/ 归/ 为/ 蠕虫/ ,/ 而/ Incidents/ ./ Org/ 则/ 把/ 它/ 同时/ 归为/ 病毒/ 和/ 蠕虫/ ./ 从/ 这个/ 角度看/ ,/ 严格/ 区分/ 狭义/ 病毒/ 、/ 蠕虫/ 、/ 木马/ 的/ 意义/ 不大/ ./ 技术/ 是/ 中性/ 的/ ,/ 本身/ 不/ 存在/ 恶意/ ,/ 好人/ 用/ 它/ 来/ 造福/ 社会/ ,/ 坏人/ 用/ 它/ 来/ 损人利己/ ./ 因此/ ,/ 如果/ 定义/ 了/ 一种/ 称为/ “/ 病毒/ ”/ 的/ 技术/ ,/ 并/ 将/ 采用/ 该/ 技术/ 的/ 程序/ 称为/ 病毒/ ,/ 那么/ ,/ 这种/ 定义/ 肯定/ 是/ 不/ 严谨/ 的/ ./ 据此/ 观点/ ,/ 我们/ 以/ 是否/ 违背/ 用户/ 意愿/ 为/ 标准/ ,/ 将/ 广义/ 病毒/ 区分/ 为/ 显式/ 病毒/ 、/ 隐式/ 病毒/ ,/ 并/ 给出/ 了/ 显式/ 病毒/ 的/ 形式化/ 定义/ 和/ 识别/ 算法/ ./ 理论/ 分析表明/ ,/ 狭义/ 病毒/ 以及/ 大部分/ 木马/ 、/ 蠕虫/ 均/ 属于/ 显式/ 病毒/ ,/ 实际/ 案例/ 分析/ 也/ 证实/ 了/ 这/ 一点/ ./ 这些/ 工作/ 的/ 重要/ 价值/ 在于/ ,/ 指出/ 了/ 狭义/ 病毒/ 以及/ 大部分/ 木马/ 、/ 蠕虫/ 是/ 可以/ 准确/ 识别/ 的/ ./ 这一/ 结论/ 与/ “/ 不能/ 准确/ 识别/ 狭义/ 病毒/ ”/ 历史/ 结论/ 并不矛盾/ ,/ 因为/ 狭义/ 病毒/ 的/ 经典/ 定义/ 实质/ 上/ 是/ 定义/ 了/ 一种/ “/ 病毒/ ”/ 技术/ ,/ 而/ 不是/ 病毒/ 本身/ ./ 本文/ 第/ 2/ 节/ 提出/ 程序/ 是否/ 为/ 病毒/ 是/ 相对/ 的/ ,/ 若/ 对/ 用户/ 有/ 损害/ 则/ 为/ 病毒/ ,/ 否则/ 不是/ ,/ 并/ 简要/ 分析/ 传统/ 病毒/ 定义/ 的/ 不足/ ;/ 第/ 3/ 节/ 提出/ “/ 用户/ 意愿/ ”/ 概念/ ,/ 用以/ 描述/ 用户/ 操作/ 计算机/ 过程/ 中/ 的/ 意图/ ;/ 第/ 4/ 节/ 给出/ 广义/ 病毒/ 的/ 定义/ ,/ 并/ 讨论/ 定义/ 的/ 性质/ ;/ 第/ 5/ 节/ 给出/ 一种/ 准确/ 识别/ 显式/ 病毒/ 的/ 算法/ ,/ 并/ 指出/ 与/ 传统/ 结论/ 截然不同/ 的/ 原因/ 在于/ 对/ 病毒/ 的/ 定义/ 不同/ ;/ 最后/ ,/ 总结/ 全文/ ./ 2/ 病毒/ 本质/ 的/ 讨论/ 2.1/ 损害/ 的/ 相对性/ 一个/ 程序/ 之所以/ 被/ 称为/ “/ 病毒/ ”/ ,/ 是因为/ 它/ 具有/ 损害/ 性/ ./ 损害/ 性是/ 恶意程序/ 的/ 本质/ ,/ 而/ 是否/ 造成/ 损害/ 一定/ 是/ 对/ 用户/ 而言/ 的/ ./ 例如/ 病毒/ V/ ,/ 对于/ 用户/ 来说/ ,/ 如果/ 他/ 是/ 在/ 测试/ V/ ,/ 那/ V/ 对/ 他/ 而言/ 是/ 没有/ 损害/ 的/ ,/ 因为/ V/ 运行/ 的/ 结果/ 就是/ 他/ 所/ 需要/ 的/ ;/ 而/ 如果/ 他/ 在/ 不/ 知道/ 的/ 情况/ 下/ 运行/ 了/ V/ 或者/ 被/ V/ 感染/ 的/ 程序/ ,/ 则/ V/ 对/ 他/ 而言/ 是/ 有/ 损害/ 的/ ,/ 因为/ 运行/ 结果/ 不是/ 他/ 希望/ 的/ ./ 再/ 例如/ ,/ 用户/ 已经/ 知道/ 病毒/ V/ 的/ 功能/ 是/ 删除/ 当前目录/ 下/ 的/ 所有/ 文件/ ,/ 用户/ 经常/ 把/ 它/ 当作/ 一个/ 文件/ 删除/ 工具/ 使用/ ,/ 对/ 用户/ 来说/ V/ 是/ 一个/ 实用程序/ ./ 认识/ 可/ 表述/ 为/ 以下/ 公理/ ./ 可见/ ,/ 程序/ 是否/ 为/ 病毒/ 是/ 用户/ 的/ 主观/ 判断/ ,/ 这种/ 病毒/ 相对性/ 公理/ ./ 一个/ 程序/ 是否/ 为/ 病毒/ ,/ 是/ 相对/ 于/ 用户/ 而言/ 的/ ./ 如果/ 用户/ 认为/ 程序/ 给/ 自己/ 带来/ 了/ 损害/ 就是/ 病毒/ ,/ 否则/ 不是/ 病毒/ ./ 根据/ 病毒/ 相对性/ 公理/ ,/ 我们/ 可以/ 直接/ 得到/ 一个/ 非常/ 有趣/ 的/ 结论/ :/ 判断/ 某/ 程序/ 是否/ 为/ 病毒/ 的/ 算法/ ,/ 如果/ 不/ 引入/ 用户/ 的/ 意见/ ,/ 则/ 该/ 算法/ 是/ 不/ 可能/ 做出/ 准确/ 判断/ 的/ ./ 这种/ 认识/ 可/ 表述/ 为/ 以下/ 定理/ ./ 判/ 不准/ 定理/ ./ 通过/ 分析/ 程序代码/ 的/ 方法/ 准确/ 判断/ 一个/ 程序/ 是否/ 为/ 病毒/ ,/ 这样/ 的/ 判断/ 算法/ 是/ 不/ 存在/ 的/ ./ 2.2/ 传统/ 病毒/ 定义/ 的/ 不足/ 典/ 的/ 病毒/ 定义/ ./ 为/ 加深/ 对/ 病毒/ 相对性/ 的/ 理解/ ,/ 我们/ 回顾/ 一下/ 经/ Cohen1984/ 年/ 给出/ 了/ 广为/ 接受/ 的/ 病毒/ 定义/ ,/ “/ 计算机病毒/ 是/ 一种/ 程序/ ,/ 它/ 可以/ 感染/ 其它/ 程序/ ,/ 感染/ 的/ 方式/ 为/ 在/ 被/ 感染/ 程序/ 中/ 加入/ 计算机病毒/ 的/ 一个/ 副本/ ,/ 这个/ 副本/ 可能/ 是/ 在/ 原/ 病毒/ 基础/ 上/ 演变/ 过来/ 的/ ”/ [/ 2/ ]/ ./ 随后/ ,/ Cohen/ 给出/ 了/ 病毒/ 的/ 形式化/ 定义/ [/ 5/ ]/ ,/ 将/ 病毒/ 的/ 范围/ 扩大/ 到/ 了/ 所有/ 的/ 自我/ 复制/ 程序/ 以及/ 在/ 系统/ 或/ 网络/ 中/ 演化/ 和/ 移动/ 的/ 程序/ ./ 基于/ 上述/ 狭义/ 病毒/ 的/ 定义/ ,/ 有/ 两个/ 重要/ 结论/ :/ (/ 1/ )/ 很多/ 正常/ 程序/ 被/ 归结为/ 病毒/ ,/ 从而/ 病毒/ 有/ 了/ “/ 好/ ”/ 、/ “/ 坏/ ”/ 之分/ [/ 6/ -/ 7/ ]/ ./ 例如/ 自动/ 升级/ 程序/ ,/ 虽然/ 不是/ 病毒/ ,/ 但是/ 按照/ Cohen/ 给出/ 的/ 定义/ 它们/ 被/ 归结为/ 病毒/ ./ (/ 2/ )/ 按照/ 给定/ 的/ 病毒/ 定义/ ,/ 没有/ 算法/ 能够/ 准确/ 识别/ 病毒/ [/ 1/ -/ 2/ ,/ 4/ ]/ ./ Cohen/ 的/ 病毒/ 定义/ 没有/ 引入/ 用户/ 的/ 意见/ ,/ 因此/ ,/ 根据/ 判/ 不准/ 定理/ 有/ 结论/ :/ 不/ 存在/ 一个/ 算法/ 能够/ 准确/ 识别/ 病毒/ ./ 事实/ 确实/ 如此/ ,/ 下面/ 引用/ 的/ 是/ Cohen/ 关于/ 不能/ 检测/ 病毒/ 的/ 证明/ 过程/ [/ 2/ ]/ ./ “/ 为/ 断定/ 一个/ 给定/ 程序/ P/ 是/ 病毒/ ,/ 必须/ 断定/ P/ 感染/ 其他/ 程序/ ./ 这是/ 不可判定/ 的/ ,/ 因为/ P/ 能够/ 调用/ 判断/ 过程/ D/ 并且/ 感染/ 其他/ 程序/ ,/ 当且/ 仅/ 当/ D/ 断定/ P/ 不是/ 病毒/ ./ 我们/ 由此/ 断定/ 一个/ 程序/ 通过/ 检查/ 一个/ 病毒/ 的/ 外表/ 来/ 区分/ 病毒/ 与/ 其他/ 程序/ 是/ 不/ 可行/ 的/ ./ 下面/ 是/ 对/ 程序/ V/ 的/ 一个/ 修改/ ,/ 作为/ D/ 的/ 不/ 可判定性/ 例子/ ,/ 我们/ 使用/ 了/ 一个/ 假定/ 的/ 判断/ 过程/ D/ ,/ D/ 返回/ true/ 当且/ 仅/ 当/ 其/ 参数/ 是/ 一个/ 病毒/ ./ ”/ programcontradictory/ -/ virus/ ·/ ·/ =/ {/ …/ Page3/ }/ 记/ 上述/ 代码/ 为/ CV/ ./ 如果/ D/ 断定/ CV/ 是/ 病毒/ ,/ CV/ 将/ 不/ 感染/ 其他/ 程序/ ,/ 所以/ 不是/ 病毒/ ./ 如果/ D/ 断定/ CV/ 不是/ 病毒/ ,/ CV/ 将/ 感染/ 其他/ 程序/ ,/ 所以/ 是/ 病毒/ ./ 因此/ ,/ 假定/ 的/ 过程/ D/ 是/ 自相矛盾/ 的/ ,/ 通过/ 外表/ 来/ 准确/ 断定/ 病毒/ 是/ 不可判定/ 的/ ./ ”/ 3/ 用户/ 意愿/ 为/ 准确/ 描述/ 用户/ 的/ 意见/ ,/ 这里/ 提出/ “/ 用户/ 意愿/ ”/ 概念/ ./ 用户/ 意愿/ 代表/ 着/ 用户/ 的/ 想法/ ,/ 理论/ 上/ 我们/ 可以/ 根据/ 实际/ 需要/ ,/ 定义/ 各种各样/ 的/ 用户/ 意愿/ ./ 本文/ 仅/ 讨论/ 用户/ 对/ 程序/ 访问/ 文件/ 的/ 意愿/ ./ 用户/ 意愿/ 是/ 用户/ 发布/ 的/ 文件/ 访问/ 授权/ ,/ 表示同意/ 某/ 程序/ 以/ 某/ 模式/ 访问/ 某/ 文件/ ./ 例如/ ,/ 用户/ 操作程序/ Word/ ,/ 通过/ 打开/ 文件/ 对话框/ 选择/ 了/ 只读/ 文件/ doc/ ,/ 那么/ ,/ 用户/ 意愿/ 就是/ 允许/ 程序/ Word/ 以/ 只读/ 模式/ 访问/ 文件/ doc/ ./ 用户/ 意愿/ 强调/ 授权/ 信息/ 的/ 真实性/ ,/ 即/ 这种/ 访问/ 授权/ 确实/ 是/ 用户/ 本人/ 发布/ 的/ ,/ 而/ 不是/ 程序/ 伪造/ 的/ ./ 定义/ 1/ ./ 一个/ 用户/ 意愿/ 是/ 用户/ 发布/ 的/ 一个/ 文件/ 访问/ 授权/ ,/ 表示/ 授权/ 程序/ p/ 以/ 模式/ m/ 访问/ 文件/ f/ ,/ 记/ 为/ (/ p/ ,/ f/ ,/ m/ )/ ./ 用户/ 授予/ 程序/ 某种/ 访问/ 权/ ,/ 程序/ 可以/ 长期性/ 拥有/ 这种/ 访问/ 权/ ,/ 也/ 可以/ 只是/ 临时性/ 的/ 获得/ ./ 对应/ 的/ ,/ 将/ 用户/ 意愿/ 区分/ 为/ 静态/ 意愿/ 、/ 动态/ 意愿/ ./ 定义/ 2/ ./ 如果/ 用户/ 授权/ 程序/ p/ 以/ 模式/ m/ 访问/ 文件/ f/ ,/ 其/ 有效/ 时间/ 是/ 永久性/ 的/ ,/ 那么/ ,/ 用户/ 意愿/ (/ p/ ,/ f/ ,/ m/ )/ 称为/ 静态/ 意愿/ ./ 例如/ ,/ 用户/ 希望/ 系统启动/ 后/ 自动/ 运行/ 某/ 日程安排/ 程序/ MySchedule/ ,/ 那么/ 其/ 意愿/ “/ 授权/ 操作系统/ 只读/ 访问/ 文件/ MySchedule/ ”/ 就是/ 一种/ 静态/ 意愿/ ./ 除非/ 用户/ 后来/ 改变/ 了/ 这种/ 授权/ ,/ 否则/ ,/ 每次/ 系统启动/ 时/ 都/ 会/ 自动/ 运行/ MySchedule/ ./ 定义/ 3/ ./ 如果/ 用户/ 授权/ 程序/ p/ 以/ 模式/ m/ 访问/ 文件/ f/ ,/ 其/ 有效/ 时间/ 是/ 直到/ 文件/ 关闭/ ,/ 那么/ ,/ 用户/ 意愿/ (/ p/ ,/ f/ ,/ m/ )/ 称为/ 动态/ 意愿/ ./ 用户/ 与/ 程序/ 的/ 交互/ 过程/ 中/ ,/ 其/ 发布/ 的/ 文件/ 访问/ 授权/ 通常/ 是/ 动态/ 意愿/ ./ 例如/ ,/ 用户/ 操作程序/ Word/ 编辑文档/ doc/ ,/ 用户/ 希望/ 的/ 是/ 当/ 他/ 授权/ Word/ 打开/ doc/ 时/ ,/ Word/ 才能/ 访问/ doc/ ,/ 关闭/ doc/ 后/ ,/ Word/ 不能/ 访问/ doc/ ./ 定义/ 4/ ./ 用/ I/ 表示/ 用户/ 意愿/ 的/ 集合/ ,/ 用/ Fall/ 表示/ 计算机/ 上/ 所有/ 文件/ 的/ 集合/ ./ 称/ Fin/ =/ {/ f/ |/ / p/ / m/ (/ p/ ,/ f/ ,/ m/ )/ ∈/ I/ }/ 为/ 意愿/ 内/ 文件/ 集合/ ,/ Fout/ =/ Fall/ -/ Fin/ 为/ 意愿/ 外/ 文件/ 集合/ ./ 计算机/ 运行/ 过程/ 中/ ,/ 用户/ 意愿/ 的/ 集合/ 随/ 时间/ 在/ 变化/ ,/ 相应/ 地/ ,/ Fin/ 、/ Fout/ 也/ 在/ 变化/ ./ 根据/ 经验/ ,/ |/ Fout/ |/ >/ 10000/ ,/ |/ Fin/ |/ </ 10/ ,/ 并且/ Fin/ 随/ 时间/ 变化/ 的/ 幅度/ 很小/ ./ 特殊/ 情况/ 下/ ,/ 例如/ 扫描/ 文件系统/ ,/ Fin/ 可能/ 接近/ 或者/ 等于/ Fall/ ./ 读者/ 或许/ 从/ 字面上/ 理解/ “/ 用户/ 意愿/ ”/ ,/ 认为/ 意愿/ 是/ 一种/ 主观/ 想法/ ,/ 具有/ 强烈/ 的/ 不确定性/ :/ 对/ 不同/ 的/ 用户/ 来说/ ,/ 同/ 一件/ 事情/ 可能/ 有/ 不同/ 的/ 意愿/ ,/ 甚至/ 相反/ 的/ 意愿/ ./ 下面/ 作/ 进一步/ 澄清/ ./ 用户/ 意愿/ 是/ 由/ 用户/ 进行/ 的/ 工作/ 明确/ 决定/ 的/ ./ 例如/ ,/ 用户/ 运行/ 程序/ Word/ 编辑/ 文件/ f1/ ,/ 这/ 决定/ 了/ 一个/ 动态/ 意愿/ (/ Word/ ,/ f1/ ,/ 读写/ )/ ,/ 即/ 授权/ Word/ 以/ 读写/ 模式/ 访问/ 文件/ f1/ ;/ 随后/ ,/ 用户/ 关闭/ 了/ f1/ ,/ 这/ 决定/ 了/ 取消/ 一个/ 动态/ 意愿/ (/ Word/ ,/ f1/ ,/ 读写/ )/ ;/ 再/ 后来/ ,/ 用户/ 编辑/ 文件/ f2/ ,/ 这/ 决定/ 了/ 一个/ 动态/ 意愿/ (/ Word/ ,/ f2/ ,/ 读写/ )/ ./ 静态/ 意愿/ 也/ 是/ 明确/ 的/ ,/ 由/ 用户/ 的/ 需要/ 唯一/ 决定/ ,/ 前面/ 解释/ 静态/ 意愿/ 的/ 定义/ 时/ 已经/ 举/ 过/ 例子/ ./ 这/ 可/ 表述/ 为/ 以下/ 性质/ ./ 性质/ ./ 用户/ 意愿/ 是/ 明确/ 的/ ,/ 动态/ 意愿/ 由/ 用户/ 进行/ 的/ 工作/ 唯一/ 决定/ ,/ 静态/ 意愿/ 由/ 用户/ 的/ 需要/ 唯一/ 决定/ ./ 4/ 病毒/ 的/ 新/ 定义/ 及/ 性质/ 4.1/ 病毒/ 的/ 新/ 定义/ 有/ 了/ “/ 用户/ 意愿/ ”/ 概念/ ,/ 就/ 可以/ 准确/ 描述/ 用户/ 的/ 意图/ ,/ 而/ 从/ 代码/ 的/ 执行/ 行为/ 是否/ 符合/ 用户/ 意愿/ 角度/ 则/ 可以/ 定义/ 损害/ 性/ ./ 因此/ ,/ 可以/ 以/ 是否/ 遵循/ 用户/ 意愿/ 作为/ 病毒/ 判断/ 标准/ ./ 定义/ 以下/ 记号/ :/ p/ ,/ p/ :/ 任意/ 的/ 程序/ ./ m/ ,/ m/ :/ 任意/ 的/ 文件/ 访问/ 模式/ ./ ACCESSp/ :/ ACCESSp/ =/ {/ (/ f/ ,/ m/ )/ |/ 程序/ p/ 以/ 模式/ m/ 访问/ 了/ 文件/ f/ }/ ./ 定义/ 5/ ./ 一个/ 程序/ p/ 是/ 显式/ 病毒/ (/ 简称/ EV/ )/ ,/ 当且/ 仅/ 当/ ,/ / f/ / m/ (/ (/ f/ ,/ m/ )/ ∈/ ACCESSp/ ∧/ (/ p/ ,/ f/ ,/ m/ )/ / I/ )/ ./ 4.2/ 性质/ 根据/ EV/ 的/ 定义/ ,/ 有/ 以下/ 覆盖/ 能力/ 结论/ ./ 定理/ 1/ ./ EV/ 涵盖/ 了/ 所有/ 攻击/ Fout/ 中/ 文件/ 的/ 恶意程序/ 以及/ 攻击/ Fin/ 中/ 文件/ 的/ 两类/ 恶意程序/ :/ (/ 1/ )/ 不/ Page4/ 按照/ 用户/ 授权/ 的/ 模式/ 进行/ 访问/ ;/ (/ 2/ )/ 访问/ 其它/ 程序/ 被/ 授权/ 访问/ 的/ 文件/ ./ 中/ 的/ 文件/ ./ 文件/ 的/ 恶意程序/ ./ 证明/ ./ 先/ 证明/ 第/ 1/ 条/ 结论/ :/ EV/ 涵盖/ 了/ 所有/ 攻击/ Fout/ 中/ / p/ ,/ 假设/ p/ 攻击/ 了/ Fout/ 中/ 的/ 文件/ ./ →/ / f/ / m/ (/ (/ f/ ,/ m/ )/ ∈/ ACCESSp/ ∧/ f/ ∈/ Fout/ )/ →/ / f/ / m/ (/ (/ f/ ,/ m/ )/ ∈/ ACCESSp/ ∧/ f/ / Fin/ )/ ,/ →/ / f/ / m/ (/ (/ f/ ,/ m/ )/ ∈/ ACCESSp/ ∧/ (/ p/ ,/ f/ ,/ m/ )/ / I/ )/ →/ p/ 是/ EV/ ./ 下面/ 证明/ 第/ 2/ 条/ 结论/ ./ (/ 1/ )/ / p/ ,/ 假设/ p/ 不/ 按照/ 用户/ 授权/ 的/ 模式/ 访问/ Fin/ →/ / f/ / m/ / m/ (/ (/ f/ ,/ m/ )/ ∈/ ACCESSp/ ∧/ (/ p/ ,/ f/ ,/ m/ )/ / I/ ∧/ (/ p/ ,/ f/ ,/ m/ )/ ∈/ I/ ∧/ m/ ≠/ m/ )/ →/ / f/ / m/ (/ (/ f/ ,/ m/ )/ ∈/ ACCESSp/ ∧/ (/ p/ ,/ f/ ,/ m/ )/ / I/ )/ 所以/ p/ 是/ EV/ ./ (/ 2/ )/ / p/ ,/ 假设/ p/ 访问/ 程序/ p/ 被/ 授权/ 访问/ 的/ 文件/ ./ →/ / f/ / p/ / m/ (/ (/ f/ ,/ m/ )/ ∈/ ACCESSp/ ∧/ (/ p/ ,/ f/ ,/ m/ )/ / I/ ∧/ (/ p/ ,/ f/ ,/ m/ )/ ∈/ I/ ∧/ p/ ≠/ p/ )/ →/ / f/ / m/ (/ (/ f/ ,/ m/ )/ ∈/ ACCESSp/ ∧/ (/ p/ ,/ f/ ,/ m/ )/ / I/ )/ →/ p/ 是/ EV/ ./ 根据/ 传统/ 病毒/ 的/ 定义/ ,/ 病毒/ 的/ 感染/ 环节/ 一定/ 要/ 首先/ 分析程序/ 文件/ ,/ 发现/ 适合/ 感染/ 后/ 一定/ 要/ 修改/ 该/ 程序/ 文件/ ./ 由于/ 程序/ 文件/ 是/ 稳定/ 的/ 对象/ ,/ 用户/ 不会/ 授权/ 程序/ 对/ 它/ 进行/ 修改/ ,/ 狭义/ 病毒/ 的/ 这种/ 读/ // 写/ 文件/ 访问/ 不/ 属于/ 用户/ 授权/ 范围/ ./ 因此/ ,/ 狭义/ 病毒/ 属于/ EV/ ./ 同样/ 道理/ ,/ 蠕虫/ 、/ 木马/ 为了/ 能够/ 在/ 计算机/ 上/ 永久/ 驻留/ ,/ 必须/ 将/ 自身/ 以/ 单独/ 的/ 文件/ 形式/ 或者/ 寄生/ 在/ 其它/ 文件/ 中/ 的/ 形式/ 保存/ 在/ 系统/ 中/ ./ 大部分/ 的/ 蠕虫/ 、/ 木马/ 是/ 这样/ 的/ ,/ 也/ 属于/ EV/ ./ 这/ 可/ 表述/ 为/ 以下/ 结论/ ./ 定理/ 2/ ./ EV/ 涵盖/ 了/ 狭义/ 病毒/ 以及/ 涉及/ 文件/ 篡改/ 、/ 文件/ 窃取/ 的/ 蠕虫/ 、/ 木马/ ./ 为/ 验证/ 上述/ 结论/ ,/ 我们/ 随机/ 抽取/ 了/ TrendLab/ 提供/ 的/ 实际/ 病毒/ 案例/ 共/ 255/ 个/ 进行/ 分析/ ./ 结果表明/ ,/ 这些/ 病毒/ 在/ 执行/ 过程/ 中/ 都/ 包含/ 了/ 对/ 文件系统/ 的/ 访问/ 操作/ ,/ 特别/ 是/ 大多/ 具有/ 安装/ 环节/ ,/ 在/ 安装/ 环节/ 中/ 修改/ 注册表/ 以/ 保证/ 在/ 系统启动/ 时/ 能够/ 自动/ 运行/ ./ 这种/ 文件系统/ 访问/ 操作/ ,/ 是/ 违背/ 用户/ 意愿/ 偷偷/ 进行/ 的/ ,/ 因而/ 都/ 是/ EV/ ./ 定理/ 3/ ./ EV/ 扩大/ 了/ 传统/ 广义/ 病毒/ 的/ 内涵/ ,/ 涵盖/ 了/ 部分/ 有/ 设计/ 或/ 开发/ 缺陷/ 的/ 程序/ ,/ 如果/ 这种/ 缺陷/ 导致/ 程序/ 进行/ 非/ 授权/ 文件/ 访问/ ./ 上述/ 结论/ 可/ 由/ EV/ 的/ 定义/ 直接/ 得到/ ./ 这种/ 范围/ 扩大/ 的/ 重要/ 意义/ ,/ 就/ 在于/ 把/ 这类/ 有/ 缺陷/ 的/ 程序/ 纳入/ 到/ 了/ 需要/ 防御/ 的/ 范畴/ ,/ 更好/ 地/ 满足/ 了/ 用户/ 的/ 需求/ ./ 考虑/ 一个/ 例子/ ,/ 为/ 保证/ 机器/ 丢失/ 时/ 信息/ 不/ 泄密/ ,/ 设计/ 这样/ 一个/ 自毁/ 程序/ :/ 当/ 连续/ 10/ 次/ 输入/ 登录/ 密码/ 错误/ 时/ ,/ 删除/ 系统/ 中/ 的/ 所有/ 信息/ ./ 由于/ 程序设计/ 中/ 存在/ 有/ 缺陷/ ,/ 程序/ 在/ 非/ 预定/ 条件/ 下/ 激活/ 了/ 自毁/ 功能/ ,/ 毁掉/ 了/ 系统/ 的/ 信息/ ,/ 造成/ 了/ 损失/ ./ 这样/ 的/ 程序/ 是不是/ 病毒/ 是/ 有/ 争议/ 的/ ,/ 但是/ 需要/ 防御/ 它/ 却是/ 没有/ 争议/ 的/ ./ 为/ 覆盖/ 所有/ 的/ 病毒/ ,/ 我们/ 将/ EV/ 之外/ 的/ 病毒/ 定义/ 为/ 隐式/ 病毒/ (/ 简称/ HV/ )/ ./ 定义/ 6/ ./ 一个/ 病毒/ v/ 是/ HV/ ,/ 当且/ 仅/ 当/ ,/ v/ 不是/ EV/ ./ 从/ 文件系统/ 角度看/ ,/ HV/ 能够/ 带来/ 的/ 后果/ 是/ 有限/ 的/ ,/ 原因/ 在于/ :/ (/ 1/ )/ 只要/ 程序/ p/ 的/ 攻击/ 对象/ 超出/ Fin/ ,/ p/ 就/ 属于/ EV/ ./ (/ 2/ )/ 相比/ 整个/ 文件系统/ ,/ Fin/ 通常/ 非常/ 小/ ,/ HV/ 能够/ 造成/ 的/ 损失/ 也/ 就/ 限定/ 在/ 很小/ 的/ 范围/ 内/ ./ 参见/ 图/ 1/ ,/ 小/ 方格/ 区域/ 为/ Fout/ ,/ 小圆圈/ 区域/ 为/ Fin/ ./ 4.3/ 案例/ 分析/ 为/ 证实/ 大部分/ 病毒/ 为/ EV/ ,/ 我们/ 在/ 2004/ 、/ 2006/ 年/ 对/ TrendLab/ 提供/ 的/ 实际/ 病毒/ 案例/ 进行/ 了/ 3/ 次/ 随机/ 分析/ ,/ 共/ 分析/ 了/ 255/ 个/ 病毒/ ./ 分析/ 结果表明/ ,/ 这/ 255/ 个/ 病毒/ 全部/ 为/ EV/ ,/ 其中/ 传统/ 病毒/ 45/ 个/ ,/ 蠕虫/ 178/ 个/ ,/ 木马/ 32/ 个/ ./ 2009/ 年/ ,/ 我们/ 又/ 对/ 1998/ 年/ 以来/ 最具/ 影响力/ 、/ 破坏力/ 的/ 典型/ 病毒/ 进行/ 了/ 分析/ ,/ 共/ 分析/ 了/ 19/ 个/ 病毒/ ./ 分析/ 结果表明/ ,/ 17/ 个/ 病毒/ 属于/ EV/ ,/ 有/ 对/ 文件系统/ 的/ 读写操作/ 和/ 对/ 注册表/ 的/ 修改/ 操作/ ,/ 而/ CodeRed/ 、/ SQLSlammer/ 不/ 属于/ EV/ ./ 分析/ 结果/ 见表/ 1/ ,/ 考虑/ 到/ 篇幅/ 限制/ ,/ 仅/ 给出/ 个别/ 病毒/ 的/ 原理/ 分析/ ./ 图/ 2/ 给出/ 了/ 著名/ 的/ “/ 熊猫/ 烧香/ ”/ 病毒/ 的/ 感染/ 、/ 传播/ 流程/ ./ 该/ 病毒/ 于/ 2006/ 年/ 10/ 月/ 16/ 日/ 爆发/ ,/ 并/ 迅速/ 登上/ 年度/ 病毒/ 之王/ 的/ 宝座/ ,/ 被/ 评为/ 全球/ 病毒/ 史上/ 最/ Page5/ 具有/ 影响力/ 的/ 病毒/ 之一/ ./ 从/ 流程图/ 可以/ 看出/ ,/ 病毒/ 运行/ 会/ 对/ 磁盘/ 文件系统/ 进行/ 访问/ 操作/ (/ 图中以/ 灰色/ 背景/ 显示/ )/ ,/ 且/ 具有/ 安装/ 和/ 修改/ 注册表/ 的/ 环节/ ./ 序号/ 病毒/ 名/ 病毒/ 类型/ 主要/ 原理/ 分析/ 1CIH/ 文件/ 病毒/ 2WIN32/ ./ FunLove/ ./ 4099/ 文件/ 病毒/ 3Melissa/ 宏病毒/ 4ILOVEYOU/ 蠕虫/ 5RedCode/ 蠕虫/ 6SQLSlammer/ 蠕虫/ 7Blaster/ 蠕虫/ 8Sobig/ ./ F/ 蠕虫/ 9Bagle/ 蠕虫/ 10MyDoom/ 蠕虫/ 11Sasser/ 蠕虫/ 12HappyTime/ 蠕虫/ 13Nimda/ 蠕虫/ 14Want/ ./ Job/ 蠕虫/ 15WhBoy/ ./ h/ 蠕虫/ 16Trojan/ // QQPass/ 木马/ 17win32/ ./ hack/ ./ huigezi/ 木马/ 18Trojan/ // PSW/ ./ GamePass/ 木马/ 19Trojan/ // Agent/ ./ pgz/ 木马/ 综合/ 以上/ 案例/ 分析/ ,/ 可以/ 得出/ :/ 绝大多数/ 病毒/ 在/ 藏匿/ 、/ 感染/ 、/ 传播/ 和/ 破坏/ 等/ 过程/ 中/ ,/ 都/ 存在/ 着/ 对/ 文件/ 的/ 读写/ 和/ 对/ 注册表/ 的/ 修改/ ./ 其/ 原因/ 在于/ :/ 病毒/ 为/ 在/ 计算机/ 上/ 永久/ 保留/ 下来/ ,/ 必须/ 把/ 自身/ 的/ 拷贝/ 以/ 文件/ 形式/ 保存起来/ ;/ 病毒/ 为/ 达到/ 自动/ 启动/ 的/ 目的/ ,/ 必须/ 改写/ 注册表/ 文件/ ./ 上面/ 案例/ 中/ 的/ “/ RedCode/ ”/ 和/ “/ SQLSlammer/ ”/ 病毒/ 属于/ 例外/ ,/ 原因/ 是/ :/ 它们/ 都/ 是/ 利用/ 缓冲区/ 溢出/ 漏洞/ ,/ 借助于/ 服务器/ 的/ 网络连接/ (/ 通过/ 某些/ 开着/ 的/ 端口/ 对外/ 大量/ 地/ 发送/ 自己/ )/ 来/ 攻击/ 其它/ 的/ 服务器/ ,/ 将/ 病毒/ 自身/ 直接/ 从/ 一台/ 电脑内存/ 传播/ 到/ 另一台/ 电脑内存/ 中/ ,/ 它们/ 并/ 不往/ 被/ 攻击/ 服务器/ 的/ 硬盘/ 中/ 写入/ 病毒信息/ ./ 它们/ 攻击/ 的/ 对象/ 并非/ 终端/ 计算机用户/ ,/ 而是/ 网络/ 服务器/ ./ 5/ 病毒/ 识别/ 算法/ 及/ 讨论/ 5.1/ 算法/ 定义/ 病毒/ 识别/ 算法/ ./ 设/ UA/ 是/ 当前/ 登录/ 系统/ 的/ 用户/ ,/ p/ 为/ 任意/ 程序/ ,/ I/ 是/ 用户/ 意愿/ 的/ 集合/ ,/ IS/ 是/ 用户/ 的/ 静态/ 意愿/ ,/ (/ p/ ,/ f/ ,/ m/ )/ 表示/ “/ 用户/ 授权/ 了/ 程序/ p/ 以/ 模式/ m/ 访问/ 文件/ f/ ”/ ,/ op/ (/ p/ ,/ f/ ,/ m/ )/ 表示/ “/ 程序/ p/ 请求/ 以/ 模式/ m/ 访问/ 文件/ f/ ”/ ,/ 将/ 目录/ 当作/ 文件/ 看待/ ./ 算法/ 步骤/ 如下/ :/ 初始化/ IS/ ;/ while/ (/ true/ )/ do/ {/ 等待/ 事件/ E/ 的/ 发生/ ;/ if/ (/ E/ =/ UA/ 动态/ 授权/ p/ 以/ 模式/ m/ 打开/ 文件/ f/ )/ thenif/ (/ E/ =/ UA/ 静态/ 授权/ p/ 以/ 模式/ m/ 打开/ 文件/ f/ )/ thenif/ (/ E/ =/ p/ 关闭/ 了/ 文件/ f/ (/ p/ ,/ f/ ,/ m/ )/ ∈/ I/ )/ thenif/ (/ E/ =/ UA/ 取消/ 静态/ 授权/ (/ p/ ,/ f/ ,/ m/ )/ )/ thenif/ (/ E/ =/ UA/ 取消/ 动态/ 授权/ (/ p/ ,/ f/ ,/ m/ )/ )/ thenif/ (/ 犈/ =/ 狆/ 发出请求/ 狅/ 狆/ (/ 狆/ ,/ 犳/ ,/ 犿/ )/ )/ thenPage6/ }/ }/ 注意/ 算法/ 中/ 标记/ 为/ 黑体字/ 的/ 语句/ 块/ ,/ 它/ 监控/ 了/ 所有/ 的/ 文件/ 访问/ 请求/ op/ (/ p/ ,/ f/ ,/ m/ )/ ,/ 如果/ (/ p/ ,/ f/ ,/ m/ )/ / I/ ∪/ IS/ 就/ 被/ 认为/ 是/ 病毒/ ./ 而/ 这/ 正好/ 是/ EV/ 的/ 判断/ 条件/ ./ 因此/ ,/ 直接/ 有/ 以下/ 结论/ ./ 识别/ 能力/ 性质/ ./ 如果/ 程序/ p/ 是/ EV/ ,/ 那么/ p/ 一定/ 会/ 被/ 病毒/ 识别/ 算法/ 检测/ 出来/ ./ 5.2/ 识别/ 能力/ 的/ 讨论/ 识别/ 能力/ 性质/ 表明/ ,/ 包括/ 传统/ 病毒/ 在内/ 的/ 显式/ 病毒/ 可以/ 被/ 准确/ 检测/ 出来/ ./ 这/ 与/ “/ 病毒/ 不可/ 准确/ 检测/ ”/ 的/ 著名/ 论断/ 相/ 矛盾/ ./ 这/ 是否/ 意味着/ 前人/ 的/ 工作/ 存在/ 错误/ 呢/ ?/ 其实不然/ ,/ 原因/ 就/ 在于/ 对/ 病毒/ 的/ 定义/ 完全/ 不同/ ./ 传统/ 的/ 病毒/ 定义/ ,/ 实质/ 上/ 是/ 定义/ 了/ 一种/ 称为/ “/ 病毒/ ”/ 的/ 技术/ ,/ 这种/ 定义/ 肯定/ 是/ 不/ 完善/ 的/ ./ 原因/ 在于/ :/ 首先/ ,/ 技术/ 是/ 中性/ 的/ ,/ 本身/ 不/ 存在/ 善恶/ ,/ 有人/ 用/ 它/ 来/ 造福/ 社会/ ,/ 有人/ 用/ 它/ 来/ 损人利己/ ;/ 其次/ ,/ 病毒程序/ 设计/ 技术/ 是/ 发展/ 的/ ./ 对此/ ,/ Cohen/ 博士/ 也/ 意识/ 到/ 了/ ,/ 认为/ “/ 就/ 像/ 任意/ 的/ 新/ 技术/ 一样/ ,/ 病毒/ 是/ 一把/ 双刃剑/ ”/ [/ 6/ ]/ ./ 例如/ ,/ 钩子/ 函数/ 技术/ 被/ 许多/ 恶意软件/ 用来/ 窃取/ 用户/ 账户/ 、/ 密码/ 等/ ,/ 根据/ 狭义/ 病毒/ 定义/ ,/ 使用/ 该/ 技术/ 的/ 程序/ 可以/ 归结为/ 病毒/ ,/ 但是/ 许多/ 正常/ 软件/ 采用/ 该/ 技术/ 使/ 自身/ 功能强大/ ,/ 使/ 用户/ 使用/ 软件/ 更/ 方便/ ./ 6/ 未来/ 工作/ 应用/ 广义/ 病毒/ 定义/ 进行/ 病毒/ 防御/ ,/ 如果/ 频繁/ 向/ 用户/ 询问/ 其/ 意愿/ ,/ 会/ 造成/ 用户/ 反感/ ,/ 甚至/ 迫使/ 用户/ 放弃/ 该/ 方案/ ./ 因此/ ,/ 寻求/ 全面/ 准确/ 的/ 自动/ 获取/ 用户/ 意愿/ 的/ 方案/ 是/ 下/ 一步/ 研究/ 的/ 重点/ ./ LUOLi/ ,/ bornin1971/ ,/ Ph/ ./ D/ ./ ,/ associateprofessor/ ./ Herresearchinterestsincludeinformationsecurityandcom/ -/ puterarchitecture/ ./ 此外/ ,/ 广义/ 病毒/ 定义/ 虽然/ 在/ 安全/ 性质/ 、/ 识别/ 能力/ 上/ 比/ 传统/ 的/ 病毒/ 定义/ 有/ 较大/ 突破/ ,/ 但/ 仍然/ 存在/ 不足/ ./ 比如/ ,/ 隐式/ 病毒/ 没有/ 给出/ 准确/ 、/ 具体/ 的/ 形式化/ 定义/ ,/ 这/ 也/ 是/ 下/ 一步/ 的/ 努力/ 方向/ ./ 7/ 总结/ 本文/ 以/ 是否/ 违背/ 用户/ 意愿/ 为/ 标准/ ,/ 将/ 广义/ 病毒/ 区分/ 为/ 显式/ 病毒/ 、/ 隐式/ 病毒/ ,/ 并/ 给出/ 了/ 显式/ 病毒/ 的/ 形式化/ 定义/ 和/ 识别/ 算法/ ./ 理论/ 分析表明/ ,/ 狭义/ 病毒/ 以及/ 大部分/ 木马/ 、/ 蠕虫/ 均/ 属于/ 显式/ 病毒/ ,/ 实际/ 案例/ 分析/ 也/ 证实/ 了/ 这/ 一点/ ./ 本文/ 工作/ 的/ 意义/ 在于/ 从/ 用户/ 意愿/ 角度/ 给出/ 了/ 显式/ 病毒/ 、/ 隐式/ 病毒/ 的/ 定义/ ,/ 指出/ 传统/ 病毒/ 以及/ 大部分/ 木马/ 、/ 蠕虫/ 在/ 理论/ 上/ 是/ 可以/ 准确/ 识别/ 的/ ./ 

