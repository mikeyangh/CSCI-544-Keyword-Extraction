Page1/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 苟/ 鹏飞/ 喻/ 明艳/ 杨兵/ 李/ 清波/ 王诗博/ (/ 哈尔滨工业大学/ 微电子/ 中心/ 哈尔滨/ 150001/ )/ 摘要/ 高性能/ 的/ 甚块/ 预测器/ 是/ 保证/ EDGE/ 体系结构/ 性能/ 的/ 关键/ 手段/ ./ 为/ 研究/ 性能/ 更好/ 的/ 甚块/ 预测器/ ,/ 文中/ 通过/ 仿真/ 实验/ 发现/ 甚块/ 的/ 出口/ 类型/ 独立/ 于/ 甚块/ 的/ 出口/ 个数/ 和/ 甚块/ 的/ 动态/ 执行/ 结果/ 而/ 存在/ ./ 以此/ 为据/ ,/ 提出/ 了/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ ./ 该/ 预测器/ 摈弃/ 了/ 甚块/ 出口/ 号/ ,/ 直接/ 对/ 甚块/ 出口/ 类型/ 进行/ 预测/ ./ 随后/ ,/ 根据/ 对/ 甚块/ 出口/ 类型/ 可预测性/ 的/ 分析/ ,/ 通过/ 实验/ 证明/ 甚块/ 出口/ 类型/ 与/ 历史/ 和/ 路径/ 信息/ 相关/ ./ 仿真/ 结果显示/ ,/ 与/ 经典/ 的/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ 相比/ ,/ 文中/ 提出/ 的/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 能够/ 将/ 每/ 千条/ 指令/ 误/ 预测/ 次数/ 平均/ 降低/ 约/ 10/ %/ ./ 关键词/ 甚块/ 预测器/ ;/ 分支/ 预测器/ ;/ EDGE/ 体系结构/ ;/ 出口/ 类型/ 预测/ ;/ 可预测性/ 1/ 引言/ 近年来/ ,/ 诸多/ 文献/ 都/ 已/ 表明/ ,/ 多核/ // 众/ 核技术/ 实际上/ 是/ 微处理器/ 设计者/ 在/ 面临/ 处理器/ 发展/ 瓶颈/ 后/ 的/ 一种/ 无奈/ 之/ 举/ [/ 1/ -/ 2/ ]/ ,/ 其/ 是否/ 代表/ 未来/ 的/ 方向/ 还有/ 待时/ Page2/ 性能/ 的/ 下一代/ 体系结构/ ./ EDGE/ 体系结构/ 通过/ 块/ 执行/ (/ Block/ -/ atomicExecution/ )/ 和/ 指令/ 间/ 显式/ 通信/ (/ DirectInstructionCommunication/ )/ 的/ 方式/ ,/ 为/ 下一代/ 体系结构/ 提供/ 了/ 不同于/ 传统/ RISC/ // CISC/ 体系结构/ 的/ 思考/ 角度/ ./ EDGE/ 体系结构/ 的/ 基本概念/ [/ 8/ ]/ 、/ 微结构/ 细节/ [/ 9/ ]/ 、/ 实现/ 方式/ [/ 10/ ]/ 和/ 整体/ 性能/ 评估/ [/ 11/ ]/ 并/ 不是/ 本文/ 的/ 研究/ 范围/ ,/ 因此/ 不/ 作/ 详细/ 介绍/ ./ EDGE/ 体系结构/ 以/ 甚块/ (/ Hyperblock/ )/ 而/ 不是/ 单个/ 指令/ 为/ 基本/ 执行/ 单元/ [/ 6/ ]/ ,/ 所有/ 改变/ 机器/ 状态/ (/ 寄存器/ 和/ 存储器/ )/ 的/ 行为/ 都/ 以/ 甚块/ 为/ 单位/ 发生/ ./ 甚块/ [/ 12/ ]/ 是/ 一种/ 单/ 入口/ 、/ 多/ 出口/ (/ SingleEntry/ ,/ MultipleExits/ )/ 并且/ 包含/ 多个/ 基本块/ 的/ 指令/ 集合/ ./ 甚块/ 使用/ 谓词/ 化/ (/ Predication/ )/ 技术/ ,/ 将/ 甚块/ 内/ 基本块/ 之间/ 的/ 控制流/ 转化/ 为/ 数据流/ ,/ 从而/ 保证/ 甚块/ 中/ 能够/ 容纳/ 尽可能/ 多/ 的/ 指令/ ./ 甚块/ 执行/ 完毕/ 时/ ,/ 通过/ 出口/ (/ Exit/ )/ 处/ 的/ 跳转/ 指令/ ,/ 跳转/ 到/ 下/ 一个/ 甚块/ ./ 而/ 甚块/ 内部/ 的/ 指令/ 则/ 按照/ 纯粹/ 的/ 数据流/ 相关性/ 执行/ ./ 为/ 提高/ 性能/ ,/ EDGE/ 体系结构/ 通过/ 甚块/ 控制流/ 推测/ 技术/ ,/ 为/ 执行/ 引擎/ 同时/ 提供/ 多个/ 推测/ 的/ (/ Speculative/ )/ 甚块/ ,/ 实现/ 指令/ 窗口/ 的/ 充分/ 填充/ ,/ 从而/ 最大/ 限度/ 地/ 保证/ 对/ 指令/ 级/ 并行/ 的/ 发掘/ ./ 甚块/ 控制流/ 推测/ 技术/ 则/ 是/ 通过/ 甚块/ 预测器/ 对/ 下/ 一/ 甚块/ 地址/ 的/ 预测/ 来/ 完成/ 的/ ./ 在/ 之前/ 的/ 研究成果/ 中/ ,/ EDGE/ 处理器/ 使用/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ [/ 13/ ]/ ./ 该/ 方法/ 在/ 预测/ 时/ ,/ 首先/ 使用/ 出口/ 预测器/ 预测/ 当前/ 甚块/ 的/ 出口/ 号/ (/ ExitID/ )/ ,/ 随后/ 在/ 该/ 出口/ 号/ 基础/ 上/ 完成/ 目标/ (/ Target/ )/ 预测/ ./ 这种/ 基于/ 出口/ 预测/ 的/ 方法/ 同样/ 被/ Multiscalar/ [/ 14/ ]/ 等/ 处理器/ 使用/ ,/ 是/ 目前/ 学术界/ 对/ 指令/ 块/ 进行/ 预测/ 时/ 的/ 通行/ 方法/ ./ 该/ 方法/ 中/ 的/ 出口/ 预测/ 与/ 传统/ 分支/ 预测/ 技术/ 中/ 的/ 跳转/ 方向/ 预测/ 相/ 类似/ ,/ 因此/ ,/ 当前/ 的/ 研究/ 人员/ 将/ 绝大部分/ 精力/ 投入/ 到/ 了/ 设计/ 出口/ 预测器/ 中/ ./ 然而/ ,/ 由于/ 甚块/ 具备/ 单/ 入口/ 、/ 多/ 出口/ 特性/ ,/ 使得/ 出口/ 预测器/ 需要/ 解决/ “/ 多选/ 一/ ”/ 问题/ ,/ 而/ 不是/ 传统/ 分支/ 预测器/ 所/ 面临/ 的/ “/ 二选/ 一/ ”/ 问题/ ,/ 因此/ ,/ 诸多/ 应用/ 于/ 传统/ 预测器/ 的/ 二值/ 预测/ 技术/ 需要/ 经过/ 不同/ 程度/ 的/ 修改/ ,/ 才/ 能够/ 满足/ 甚块/ 出口/ 预测/ 的/ 需要/ [/ 13/ ,/ 15/ -/ 16/ ]/ ./ 从/ 实验/ 结果/ 来看/ ,/ 尽管/ 使用/ 了/ 诸多/ 激进/ 的/ 预测/ 技术/ ,/ 出口/ 预测器/ 仍然/ 导致/ 了/ 甚块/ 预测器/ 中约/ 50/ %/ 的/ 误/ 预测/ [/ 13/ ,/ 16/ ]/ ,/ 是/ 甚块/ 预测器/ 的/ 性能/ 瓶颈/ ./ 为/ 设计/ 性能/ 更佳/ 的/ 甚块/ 预测器/ ,/ 本文/ 在/ 对/ 甚块/ 行为/ 及其/ 出口/ 类型/ 进行/ 统计分析/ 后/ ,/ 提出/ 了/ 一种/ 不/ 使用/ 出口/ 预测器/ ,/ 直接/ 对/ 甚块/ 出口/ 类型/ 进行/ 预测/ 的/ 方案/ ,/ 称之为/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ (/ Type/ -/ onlyHyperblockPredictor/ )/ ./ 由于/ 不/ 使用/ 出口/ 预测器/ ,/ 简化/ 了/ 甚块/ 预测/ 步骤/ ,/ 从而/ 能够/ 提供/ 更好/ 的/ 甚块/ 预测/ 性能/ ./ 总体/ 来说/ ,/ 本文/ 有/ 如下/ 3/ 点/ 贡献/ :/ (/ 1/ )/ 针对/ EDGE/ 体系结构/ 中/ 的/ 甚块/ 预测/ 问题/ ,/ 根据/ 实验/ 分析/ 和/ 统计/ 结果/ ,/ 提出/ 了/ 一种/ 不/ 使用/ 出口/ 预测器/ ,/ 直接/ 对/ 甚块/ 出口/ 类型/ 进行/ 预测/ 的/ 方案/ ./ (/ 2/ )/ 对/ 甚块/ 出口/ 类型/ 的/ 可预测性/ 进行/ 了/ 研究/ ,/ 发现/ 甚块/ 出口/ 类型/ 与/ 历史/ 和/ 路径/ 信息/ 相关/ ./ (/ 3/ )/ 构建/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ ,/ 并/ 分析/ 了/ 其/ 性能/ ./ 实验/ 结果表明/ ,/ 在/ 针对/ 甚块/ 出口/ 类型/ 的/ 特点/ 使用/ TAGE/ 预测/ 技术/ 后/ ,/ 本文/ 提出/ 的/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 相对/ 于/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ ,/ 将/ 每/ 千条/ 指令/ 误/ 预测/ 数/ (/ MispredictsPerKiloInstructions/ ,/ MPKI/ )/ 平均/ 降低/ 了/ 约/ 10/ %/ ./ 本文/ 第/ 2/ 节将/ 对应/ 用于/ EDGE/ 体系结构/ 的/ 甚块/ 预测器/ 基本概念/ 及/ 研究/ 现状/ 进行/ 简单/ 介绍/ ;/ 第/ 3/ 节将/ 描述/ 甚块/ 出口/ 和/ 出口/ 类型/ 的/ 关系/ ,/ 分析/ 甚块/ 出口/ 类型/ 的/ 统计/ 特性/ ,/ 并/ 对/ 甚块/ 类型/ 预测/ 的/ 合理性/ 进行/ 阐述/ ;/ 第/ 4/ 节将/ 给出/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 结构/ ;/ 第/ 5/ 节将/ 介绍/ 本文/ 所/ 使用/ 的/ 仿真/ 方法/ 和/ 基本/ 实验/ 环境/ ;/ 在/ 第/ 6/ 节中/ ,/ 将/ 对/ 甚块/ 类型/ 的/ 可预测性/ 进行/ 分析/ ,/ 并/ 比较/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 与/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ 的/ 性能/ ./ 2/ 背景/ 知识/ 和/ 相关/ 工作/ 分支/ 预测器/ (/ BranchPredictor/ )/ 是/ 一种/ 为/ 高性能/ 处理器/ 提供/ 推测/ 执行/ 能力/ 的/ 部件/ ./ 分支/ 预测器/ 通过/ 预测/ 分支/ 指令/ 的/ 跳转/ 方向/ ,/ 并/ 配合/ 相应/ 的/ 分支/ 目标/ 预测/ 技术/ ,/ 在/ 分支/ 指令/ 执行/ 前/ 获取/ 其/ 跳转/ 结果/ ,/ 为/ 处理器/ 提供/ 了/ 无/ 停顿/ 的/ 推测/ 指令流/ ,/ 增大/ 了/ 处理器/ 的/ 取指/ 能力/ 、/ 指令/ 窗口/ 填充/ 能力/ ,/ 并/ 相应/ 地/ 保证/ 了/ 性能/ ./ 与/ 传统/ 的/ 、/ 工作/ 于/ 指令/ 粒度/ 上/ 的/ 分支/ 预测器/ 一样/ ,/ 指令/ 块/ 预测器/ (/ Next/ -/ blockPredictor/ )/ 是/ 一种/ 为/ 基于/ 块/ 的/ 处理器/ (/ Block/ -/ atomicProcessors/ )/ 提供/ 控制流/ 推测/ 能力/ 的/ 部件/ ./ 虽然/ 指令/ 块/ 预测器/ 有/ 不同/ 的/ 研究/ 背景/ [/ 13/ -/ 14/ ,/ 17/ -/ 20/ ]/ ,/ 但/ 其/ 基本/ 思想/ 是/ 一致/ 的/ ,/ 即/ 为/ 每个/ 指令/ 块/ 提供/ 跳转/ 目标/ 预测/ ,/ 使得/ 基于/ 块/ 的/ 处理器/ 可以/ 同时/ 取入/ 多个/ 推测/ 的/ 指令/ 块/ ./ 通常/ 来说/ ,/ 在/ 基于/ 块/ 的/ 处理器/ 中/ ,/ 指令/ 块/ 由/ 编译器/ 根据/ 特定/ 的/ 约束/ 将/ 多个/ 基本块/ 组合而成/ [/ 6/ ,/ 21/ ]/ ./ 类似/ 的/ ,/ EDGE/ 体系结构/ 为了/ 尽可能/ 地/ 增大/ 指令/ 块/ 大小/ ,/ 使用/ 了/ 甚块/ 技术/ ./ 甚块/ 是/ 编译器/ 生成/ 的/ 具有/ 谓词/ 化/ 指令/ (/ Predication/ )/ 的/ “/ 单/ 入口/ 、/ 多/ 出口/ ”/ 指令/ 块/ ./ 甚块/ 将/ 多个/ 传统/ 指令/ 集中/ Page3/ 的/ 基本块/ (/ BasicBlock/ )/ 集合/ 到/ 一起/ ,/ 因此/ 其/ 内部/ 通常/ 具有/ 多条/ 执行/ 路径/ ,/ 不同/ 的/ 执行/ 路径/ 对应/ 不同/ 的/ 出口/ ./ 执行/ 开始/ 时/ ,/ 控制流/ 从/ 甚块/ 唯一/ 的/ 入口/ 进入/ ,/ 触发/ 甚块/ 的/ 执行/ ./ 执行/ 结束/ 时/ ,/ 甚块/ 从/ 其/ 多个/ 出口/ 中/ ,/ 选择/ 且/ 仅/ 选择/ 一个/ 出口/ 作为/ 控制流/ 的/ 转移/ 点/ ,/ 开始/ 下/ 一/ 甚块/ 的/ 执行/ ./ 为了/ 区分/ 甚块/ 中/ 不同/ 的/ 出口/ ,/ 编译器/ 为/ 甚块/ 的/ 每个/ 出口/ 都/ 分配/ 唯一/ 的/ 出口/ 号/ (/ ExitID/ )/ ./ 出口/ 号/ 在/ 本质/ 上/ 是/ 编译器/ 对/ 甚块/ 内部/ 不同/ 执行/ 路径/ 的/ 近似/ [/ 22/ ]/ ,/ 用以/ 表征/ 构建/ 甚块/ 时/ 被/ 条件/ 转换/ (/ If/ -/ Conversion/ )/ 技术/ 湮没/ 的/ 相关性/ ./ 因此/ ,/ 从/ 这个/ 角度/ 来看/ ,/ 用/ 出口/ 号/ 能够/ 从/ 理论/ 上/ 还原/ 某条/ 执行/ 路径/ 的/ 历史/ ,/ 从而/ 使得/ 对/ 该/ 路径/ 的/ 跳转/ 结果/ 进行/ 预测/ 变得/ 可能/ ./ 由于/ 在/ 对/ 甚块/ 进行/ 预测/ 时/ ,/ 最终/ 的/ 执行/ 路径/ 还/ 未知/ ,/ 因此/ 需要/ 首先/ 对/ 出口/ 号/ 进行/ 预测/ ./ 甚块/ “/ 多/ 出口/ ”/ 的/ 特性/ 则/ 对/ 出口/ 号/ 预测/ 提出/ 了/ 与/ 传统/ 分支/ 预测器/ 不/ 一样/ 的/ 要求/ :/ (/ 1/ )/ 由于/ 具有/ 多个/ 出口/ ,/ 因此/ 传统/ 分支/ 预测器/ 的/ “/ 2/ 选/ 1/ ”/ 预测/ 技术/ 需要/ 被/ 修改/ 为/ “/ 多选/ 1/ ”/ 预测/ 技术/ ./ (/ 2/ )/ 由于/ 具有/ 多种/ 出口/ 类型/ ,/ 因此/ 甚块/ 预测器/ 需要/ 对/ 出口/ 类型/ 进行/ 预测/ ./ 目前/ 应用/ 于/ EDGE/ 体系结构/ 中/ 的/ 甚块/ 预测器/ 使用/ 了/ 如图/ 1/ 所示/ 的/ 结构/ ,/ 该/ 结构/ 在/ TRIPS/ 原型/ 芯片/ 中/ 得到/ 了/ 应用/ [/ 11/ ]/ ./ 图/ 1/ 中/ ,/ 预测/ 过程/ 由/ 两个/ 步骤/ 构成/ :/ 出口/ 预测/ 和/ 目标/ 地址/ 预测/ ./ 首先/ ,/ 使用/ 出口/ 预测器/ 预测/ 甚块/ 在/ 执行/ 完成/ 后/ 跳转/ 出口/ 的/ 出口/ 号/ ./ 随后/ ,/ 该/ 出口/ 号/ 与/ 指令/ 块/ 地址/ 一起/ ,/ 被/ 用于/ 预测/ 该/ 出口/ 的/ 类型/ ./ 紧接着/ ,/ 根据/ 出口/ 的/ 类型/ 访问/ 相应/ 的/ 分支/ 目标/ 缓存/ ,/ 产生/ 最终/ 的/ 跳转/ 地址/ ./ 图/ 1/ 中/ 的/ 出口/ 预测器/ 使用/ 了/ 能效/ 比较/ 高/ 的/ 全局/ // 本地/ 锦标赛/ 预测器/ ,/ 而/ 文献/ [/ 16/ ]/ 中则/ 评估/ 了/ 多种/ 二值/ 预测/ 技术/ 的/ 出口/ 预测/ 潜力/ ,/ 给出/ 了/ 多种不同/ 的/ 预测器/ 结构/ ./ 对于/ 目标/ 地址/ 预测/ 部分/ ,/ 除/ 基于/ 粘滞/ 位表/ (/ Hysteresis/ )/ 的/ 出口/ 类型/ 预测/ 图/ 1TRIPS/ 原型/ 芯片/ 中/ 使用/ 的/ 指令/ 块/ 预测器/ 结构/ [/ 13/ ]/ 器外/ ,/ 还有/ 3/ 种/ 针对/ 不同/ 出口/ 类型/ 的/ 跳转/ 目标/ 缓存/ ,/ 分别/ 为/ :/ 分支/ 目标/ 缓存/ (/ BTB/ )/ 、/ 函数调用/ 目标/ 缓存/ (/ CTB/ )/ 和/ 函数/ 返回/ 地址/ 缓存/ (/ RAS/ )/ ./ 此外/ ,/ 如果/ 跳转/ 地址/ 是/ 当前/ 甚块/ 的/ 下/ 一个/ 甚块/ (/ InProgramOrder/ )/ ,/ 则/ 是/ 顺序/ 跳转/ 目标/ ,/ 可以/ 直接/ 产生/ 跳转/ 地址/ ./ 这种/ 先/ 预测/ 出口/ ,/ 再/ 针对/ 特定/ 出口/ 预测/ 跳转/ 目标/ 的/ 策略/ ,/ 是/ 甚块/ 预测/ 中/ 应用/ 最/ 广泛/ ,/ 也/ 是/ 最/ 直观/ 的/ 结构/ 之一/ [/ 13/ -/ 14/ ,/ 20/ ]/ ./ 也/ 正/ 因为/ 如此/ ,/ 当前/ 针对/ 甚块/ 预测器/ 的/ 研究/ 几乎/ 都/ 将/ 目光/ 聚焦/ 到/ 了/ 出口/ 预测/ 上/ ,/ 而/ 仅仅/ 为/ 出口/ 类型/ 预测/ 提供/ 非常/ 有限/ 的/ 资源/ 和/ 极为/ 简单/ 的/ 结构/ ./ 本文/ 将/ 尝试/ 打破/ 这种/ 格局/ ,/ 将/ 目光/ 转移/ 到/ 甚块/ 出口/ 类型/ 预测/ 上/ ,/ 并/ 证明/ 这种/ 方法/ 相对/ 于/ 基于/ 出口/ 预测/ 的/ 方法/ 更加/ 有效/ ./ 3/ 甚块/ 出口/ 类型/ 预测/ 技术/ 出口/ 预测/ 是/ 当前/ 甚块/ 预测器/ 的/ 重要/ 组成部分/ ./ 甚块/ 预测器/ 将/ 出口/ 预测/ 得到/ 的/ 出口/ 号/ 与/ 指令/ 块/ 地址/ 相结合/ ,/ 预测/ 该/ 出口/ 的/ 类型/ ,/ 并/ 进一步/ 选择/ 相应/ 的/ 分支/ 类型/ 缓存/ ,/ 输出/ 甚块/ 的/ 跳转/ 地址/ ./ 由于/ 出口/ 号/ 本质/ 上/ 是/ 编译器/ 对/ 甚块/ 内部/ 执行/ 路径/ 的/ 近似/ ,/ 因此/ 对/ 出口/ 号/ 的/ 使用/ 实际上/ 是/ 利用/ 甚块/ 内部/ 的/ 执行/ 历史/ 来/ 预测/ 跳转/ 类型/ 和/ 跳转/ 目标/ ./ 但是/ ,/ 由于/ 出口/ 号/ 本身/ 需要/ 经过/ 预测/ 得到/ ,/ 因此/ 一旦/ 这种/ “/ 推测/ (/ Speculative/ )/ ”/ 的/ 出口/ 号/ (/ 或者说/ 推测/ 的/ 甚块/ 内部/ 执行/ 历史/ )/ 出现/ 误/ 预测/ ,/ 对/ 最终/ 跳转/ 目标/ 的/ 影响/ 将/ 呈现/ 错误/ 叠加/ 的/ 效果/ ./ 从/ 已/ 发表/ 的/ 文献/ 可以/ 看出/ ,/ 约/ 50/ %/ 左右/ 的/ 甚块误/ 预测/ 均/ 由/ 出口/ 误/ 预测/ 导致/ [/ 13/ ,/ 15/ -/ 16/ ]/ ,/ 体现/ 了/ 出口/ 预测器/ 的/ 低效/ 性/ ./ 本节/ 对/ 出口/ 预测/ 的/ 缺点/ 进行/ 了/ 分析/ ,/ 并/ 在/ 此基础/ 上/ ,/ 提出/ 了/ 一种/ 摈弃/ 出口/ 预测器/ ,/ 直接/ 进行/ 类型/ 预测/ 的/ 甚块/ 预测/ 方案/ ./ 3.1/ 出口/ 预测器/ 所/ 面临/ 的/ 问题/ 在/ 甚块/ 预测器/ 中/ ,/ 甚块/ 跳转/ 目标/ 最终/ 由/ 针对/ 不同/ 类型/ 的/ 分支/ 目标/ 缓冲/ 产生/ ./ 与/ 传统/ 的/ 二值/ 分支/ 预测/ 不同/ ,/ 出口/ 预测器/ 预测/ 得到/ 的/ 出口/ 号/ 并/ 不能/ 直接/ 给出/ 该/ 甚块/ 跳转/ 目标/ 的/ 信息/ ./ 其/ 原因/ 在于/ ,/ 传统/ 的/ 二值/ 分支/ 预测/ (/ 主要/ 是/ 针对/ 条件/ 分支/ 指令/ 的/ 预测/ )/ 如果/ 预测/ 结果/ 为/ “/ 不/ 跳转/ (/ Not/ -/ Taken/ )/ ”/ ,/ 则/ 跳转/ 目标/ 即/ 是/ 该/ 分支/ 指令/ 的/ 下/ 一条/ 指令/ ,/ 无需/ 访问/ 分支/ 目标/ 缓存/ ./ 因此/ ,/ 传统/ 的/ 二值/ 分支/ 预测器/ 在/ 解决/ “/ 2/ 选/ 1/ ”/ 问题/ 后/ 得到/ 的/ 答案/ 中/ ,/ 有/ 可能/ 直接/ 包含/ 分支/ 跳转/ 目标/ 信息/ ./ 而/ 对于/ 甚块/ 预测器/ 的/ 出口/ 预测/ 而言/ ,/ 解决/ “/ 多选/ 1/ ”/ 问题/ 后/ ,/ 仅仅/ 得到/ 了/ “/ 推测/ ”/ 的/ 出口/ 号/ 信息/ ,/ 除非/ 进一步/ 通过/ 出口/ 号/ 预测/ 该/ 出口/ 的/ 类型/ ,/ 否则/ 无法/ Page4/ 从/ 出口/ 号/ 本身/ 获得/ 甚块/ 的/ 跳转/ 目标/ ./ 正因如此/ ,/ 出口/ 预测/ 的/ 作用/ 体现/ 在/ 如下/ 两点/ 中/ :/ (/ 1/ )/ 使用/ 预测/ 得到/ 的/ 出口/ 号/ 区分/ 同一/ 甚块/ 中/ 不同/ 出口/ 的/ 分支/ 类型/ ;/ (/ 2/ )/ 使用/ 预测/ 得到/ 的/ 出口/ 号/ 区分/ 同一/ 甚块/ 中/ 不同/ 出口/ 的/ 跳转/ 目标/ ./ 结合/ 图/ 1/ 中/ 甚块/ 预测器/ 的/ 典型/ 结构/ ,/ 出口/ 预测器/ 的/ 功能/ 体现/ 在/ 下述/ 的/ 甚块/ 预测器/ 工作/ 步骤/ 中/ :/ 首先/ ,/ 出口/ 预测器/ 使用/ 甚块/ 地址/ 、/ 历史/ 信息/ 、/ 地/ 其次/ ,/ 将/ 预测/ 得到/ 的/ 出口/ 号/ 与/ 甚块/ 地址/ 相结合/ ,/ 址/ 路径/ 信息/ 等/ ,/ 预测/ 某一/ 甚块/ 的/ 出口/ 号/ ./ 访问/ 出口/ 类型/ 预测器/ ,/ 得到/ 该/ 出口/ 的/ 类型/ ./ 最后/ ,/ 根据/ 出口/ 的/ 类型/ ,/ 选择/ 相应/ 的/ 分支/ 目标/ 缓冲/ ,/ 并/ 使用/ 出口/ 号/ 和/ 甚块/ 地址/ 对/ 其/ 进行/ 索引/ ,/ 得到/ 最终/ 的/ 跳转/ 地址/ ./ 从/ 上述/ 步骤/ 中/ 可以/ 看到/ ,/ 出口/ 预测/ 虽然/ 无法/ 直接/ 产生/ 最终/ 的/ 甚块/ 跳转/ 地址/ ,/ 但/ 却/ 影响/ 着/ 出口/ 类型/ 预测/ 和/ 目标/ 预测/ 的/ 结果/ ./ 一旦/ 出口/ 预测器/ 性能/ 低下/ ,/ 将/ 极大/ 地/ 损害/ 甚块/ 预测器/ 的/ 整体/ 性能/ ./ 不幸/ 的/ 是/ ,/ 由于/ 出口/ 预测器/ 需要/ 完成/ “/ 多选/ 1/ ”/ 的/ 使命/ ,/ 其/ 性能/ 相对/ 于/ 传统/ 分支/ 预测器/ 的/ 下降/ ,/ 是/ 显而易见/ 的/ ./ 其/ 原因/ 在于/ 传统/ 的/ 二值/ 分支/ 预测/ 技术/ 需要/ 经过/ 一定/ 程度/ 的/ 修改/ 才能/ 被/ 应用/ 于/ 出口/ 预测器/ ./ 这些/ 修改/ 包括/ :/ 将/ 每次/ 预测/ 产生/ 的/ 历史/ 信息/ 从/ 1/ 位/ 变为/ 多位/ [/ 13/ -/ 14/ ,/ 17/ ]/ 、/ 改变/ 预测/ 结果/ 的/ 编码方式/ (/ 增加/ 计数器/ 位数/ [/ 13/ -/ 14/ ,/ 17/ ]/ 、/ 使用/ PPE/ 预测/ 方法/ [/ 16/ ]/ )/ 、/ 修改/ 预测器/ 的/ 决策/ 方案/ (/ 例如/ 将/ OGEHL/ 预测器/ 的/ 加法/ 树/ 更/ 改为/ 多数/ 投票/ [/ 16/ ]/ )/ 等/ ./ 最为/ 重要/ 的/ 是/ ,/ 由于/ 出口/ 预测器/ 的/ 相关/ 信息/ (/ 执行/ 历史/ 、/ 地址/ 路径/ 等/ )/ 需要/ 在/ 甚块/ 粒度/ 上/ 获取/ ,/ 相对/ 于/ 基于/ 基本块/ 的/ 分支/ 预测器/ ,/ 其/ 历史/ 信息/ 有/ 可能/ 会/ 丢失/ ./ 这些/ 因素/ 使得/ 出口/ 预测器/ 的/ 性能/ 变得/ 并/ 不/ 尽如人意/ ,/ 从而/ 使得/ 甚块/ 预测器/ 的/ 整体/ 性能/ 受到/ 影响/ ./ 值得注意/ 的/ 是/ ,/ 虽然/ “/ 多选/ 1/ ”/ 的/ 出口/ 预测器/ 存在/ 上述/ 弊端/ ,/ 但/ 之前/ 的/ 研究/ 人员/ 几乎/ 都/ 倾向/ 于/ 在/ 甚块/ 预测器/ 中/ 保留/ 出口/ 预测器/ ,/ 并/ 尝试/ 使用/ 各种/ 激进/ 的/ 预测/ 技术/ 来/ 改善/ 其/ 性能/ ./ 这些/ 尝试/ 建立/ 在/ 这样/ 的/ 事实/ 基础/ 之上/ :/ 甚块/ 中/ 的/ 每个/ 出口/ 分别/ 属于/ 其/ 内部/ 不同/ 的/ 执行/ 路径/ ,/ 由/ 不同/ 的/ 基本块/ 构成/ ,/ 出口/ 号/ 表征/ 了/ 这种/ 湮没/ 在/ 甚块/ 中/ 的/ 路径/ 历史/ 信息/ ./ 对/ 甚块/ 出口/ 的/ 预测/ 与/ 传统/ 分支/ 预测器/ 对/ 基本块/ 控制流/ 的/ 预测/ ,/ 在/ 本质/ 上/ 是/ 一致/ 的/ ,/ 因此/ 通过/ 改善/ 出口/ 预测/ 的/ 性能/ 来/ 提高/ 预测器/ 整体/ 性能/ ,/ 是/ 十分/ 合理/ 的/ ./ 结合/ 甚块/ 预测器/ 本身/ 的/ 工作/ 流程/ 可以/ 发现/ ,/ 即使/ 有/ 上述事实/ 的/ 存在/ ,/ 出口/ 预测器/ 仍然/ 需要/ 额外/ 的/ 条件/ 才能/ 高效/ 地/ 工作/ :/ 甚块/ 中/ 每个/ 出口/ 都/ 拥有/ 不同/ 的/ 出口/ 类型/ 和/ 不同/ 的/ 跳转/ 目标/ ,/ 通过/ 出口/ 号/ (/ 或者说/ 甚块/ 内部/ 的/ 执行/ 路径/ )/ 对/ 其/ 进行/ 区分/ 是/ 必要/ 的/ ./ 当前/ 的/ 研究/ 人员/ 通常/ 都/ 默认/ 该/ 条件/ 成立/ ,/ 但/ 事实上/ ,/ 由于/ 编译器/ 、/ 指令集/ 、/ 体系结构/ 等/ 诸多/ 因素/ 的/ 影响/ ,/ 情况/ 并非如此/ ./ 本文/ 将/ 说明/ 在/ EDGE/ 体系结构/ 中/ 甚块/ 的/ 出口/ 类型/ 与/ 出口/ 号/ 并/ 无/ 直接/ 联系/ ,/ 并且/ 能够/ 在/ 不/ 需要/ 出口/ 预测器/ 的/ 情况/ 下/ 直接/ 对/ 出口/ 类型/ 进行/ 预测/ ./ 3.2/ 甚块/ 出口/ 类型/ 特征/ 本节/ 将/ 对/ 甚块/ 的/ 出口/ 类型/ 进行/ 分析/ ,/ 以/ 所/ 使用/ 的/ TRIPS/ 指令集/ 为/ 基础/ 对/ 甚块/ 进行/ 分类/ ,/ 其/ 细节/ 以及/ 相应/ 的/ 仿真/ 方法/ 和/ 测试程序/ 集在/ 第/ 5/ 节中/ 有/ 详细描述/ ./ 由于/ 使用/ 了/ TRIPS/ 指令集/ ,/ 因此/ 每个/ 甚块/ 最多/ 拥有/ 4/ 种/ 出口/ 类型/ ,/ 分别/ 为/ :/ 顺序/ 目标/ (/ SequentialTarget/ )/ 、/ 普通/ 分支/ 目标/ (/ BranchTarget/ )/ 、/ 函数调用/ 目标/ (/ FunctionCallTarget/ )/ 和/ 函数/ 返回/ 目标/ (/ Func/ -/ tionReturnTarget/ )/ [/ 10/ ]/ ./ 某个/ 甚块/ 可能/ 具有/ 多个/ 出口/ ,/ 且/ 每个/ 出口/ 的/ 类型/ 可能/ 不同/ ./ 但/ 由于/ 在/ 执行/ 时/ ,/ 对该/ 甚块/ 的/ 每/ 一次/ 调用/ (/ 动态/ 实例/ )/ 都/ 只能/ 使用/ 一个/ 出口/ ,/ 并/ 产生/ 一种/ 特定/ 的/ 出口/ 类型/ ,/ 因此/ ,/ 为/ 分析/ EDGE/ 体系结构/ 中/ 甚块/ 的/ 出口/ 类型/ 特征/ ,/ 本文/ 首先/ 将/ 甚块/ 按照/ 其/ 动态/ 实例/ 所/ 使用/ 的/ 出口/ 类型/ 分为/ 6/ 大类/ ./ 分别/ 为/ 类型/ 1/ ~/ 4/ ./ 甚块/ 的/ 所有/ 动态/ 实例/ (/ DynamicIn/ -/ stances/ ,/ 即/ 执行/ 时/ 的/ 多次/ 调用/ )/ 都/ 只/ 产生/ 同/ 一种/ 类型/ 的/ 出口/ ./ 根据/ TRIPS/ 指令集/ [/ 10/ ]/ ,/ 这/ 将/ 定义/ 4/ 类/ 甚块/ ,/ 分别/ 为/ 只/ 产生/ 顺序/ 目标/ 的/ 甚块/ 、/ 只/ 产生/ 普通/ 分支/ 目标/ 的/ 甚块/ 、/ 只/ 产生/ 函数调用/ 目标/ 的/ 甚块/ 、/ 只/ 产生/ 函数/ 返回/ 目标/ 的/ 甚块/ ./ 类型/ 5/ ./ 甚块/ 的/ 动态/ 实例/ 既/ 可能/ 产生/ 顺序/ 目标/ ,/ 也/ 可能/ 产生/ 普通/ 分支/ 目标/ ./ 类型/ 6/ ./ 其它/ 的/ 情况/ ./ 图/ 2/ 展示/ 了/ 11/ 个/ SPECCPU2000/ 程序/ 中/ ,/ 对于/ 动态/ 实例/ 个数/ 排名/ 前/ 100/ 的/ 甚块/ ,/ 按照/ 上述/ 分类/ 方法/ 分类/ 后/ 不同/ 类型/ 甚块/ 所/ 占/ 的/ 比例/ ./ 从图/ 2/ 中/ ,/ 可以/ 得到/ (/ 1/ )/ 平均/ 约/ 有/ 近/ 80/ %/ 的/ 甚块/ 在/ 执行/ 过程/ 中/ 只/ 产生/ 某种/ 特定/ 的/ 出口/ 类型/ ./ 也就是说/ ,/ 无论/ 这些/ 甚块/ 从/ 哪个/ 出口/ 跳转/ ,/ 其/ 出口/ 类型/ 都/ 将/ 始终保持/ 一致/ ./ (/ 2/ )/ 平均/ 约/ 有/ 近/ 20/ %/ 的/ 甚块/ 在/ 执行/ 过程/ 中/ ,/ 即/ 可能/ 产生/ 顺序/ 目标/ ,/ 亦/ 可能/ 产生/ 普通/ 分支/ 目标/ ./ 这些/ 甚块/ 的/ 行为/ 与/ 普通/ 的/ 条件/ 分支/ 指令/ 非常/ 类似/ ./ 即/ 如果/ 这些/ 甚块/ 产生/ 顺序/ 目标/ ,/ 那么/ 其/ 跳转/ 地址/ 将/ 可以/ 直接/ 得到/ ,/ 无须/ 访问/ 任何/ 分支/ 目标/ 缓存/ ,/ 这/ 与/ 普通/ 条件/ 分支/ 指令/ 的/ “/ 不/ 跳转/ ”/ 情况/ 类似/ ;/ 如果/ 这些/ 甚块产/ Page5/ 生/ 普通/ 分支/ 目标/ ,/ 那么/ 最终/ 的/ 跳转/ 目标/ 地址/ 将/ 通过/ 访问/ BTB/ 得到/ ,/ 这/ 同样/ 与/ 普通/ 条件/ 分支/ 指令/ 的/ “/ 跳转/ ”/ 情况/ 类似/ ./ (/ 3/ )/ 其它/ 类型/ 的/ 甚块/ 数目/ 微乎其微/ ,/ 小于/ 1/ %/ ./ 图/ 2/ 甚块/ 的/ 出口/ 类型/ 特征/ 统计/ (/ 其中/ ,/ FULL/ _/ SEQ/ 、/ FULL/ _/ BR/ 、/ FULL/ _/ CALL/ 、/ FULL/ _/ RET/ 分别/ 表示/ 动态/ 实例/ 只/ 产生/ 某种/ 特定/ 类型/ 出口/ 的/ 甚块/ ;/ BR/ _/ SEQ/ 表示/ 动态/ 实例/ 中/ 既/ 产生/ 顺序/ 目标/ 又/ 产生/ 普通/ 分支/ 目标/ 的/ 甚块/ ;/ REST/ 为/ 其它/ 所有/ 情况/ )/ 从/ 上述/ 现象/ 能够/ 得出/ 这样/ 的/ 结论/ :/ 尽管/ 文献/ [/ 16/ ]/ 中/ 的/ 数据/ 说明/ 甚块/ 的/ 出口/ 号/ 分布/ 较为/ 均匀/ ①/ ,/ 但/ 其/ 出口/ 类型/ 具有/ 较强/ 的/ 特征/ ,/ 且/ 该/ 特征/ 自成体系/ ./ 进一步/ 观察/ 可以/ 看到/ ,/ 其中/ 大部分/ 甚块/ (/ 约/ 80/ %/ )/ 的/ 偏向/ 性极强/ ./ 由于/ 这种/ 极强/ 的/ 偏向/ 性/ ,/ 这些/ 甚块/ 的/ 出口/ 类型/ 在/ 不/ 需要/ 出口/ 预测器/ 的/ 情况/ 下/ ,/ 通过/ 简单/ 的/ 、/ 不/ 使用/ 相关/ 信息/ 的/ 粘滞/ 位表/ 就/ 能够/ 很/ 好/ 地/ 预测/ ./ 本文/ 设计/ 了/ 实验/ 来/ 初步/ 验证/ 上述/ 结论/ ./ 实验/ 中将/ TRIPS/ 原型/ 芯片/ 甚块/ 预测器/ 中/ 的/ 出口/ 预测器/ 删除/ ,/ 直接/ 使用/ 简单/ 粘滞/ 位表/ (/ 仅/ 使用/ 甚块/ 地址/ 来/ 索引/ 该表/ ,/ 不/ 使用/ 历史/ 信息/ )/ 来/ 预测/ 甚块/ 出口/ 类型/ ,/ 与/ 原有/ 的/ TRIPS/ 原型/ 芯片/ 预测器/ 进行/ 性能/ 比较/ ./ 原有/ 的/ TRIPS/ 原型/ 芯片/ 预测器/ 配置/ 与/ 文献/ [/ 13/ ]/ 中/ 相同/ ./ 两种/ 方案/ 均/ 为/ 出口/ 预测器/ 和/ 类型/ 预测器/ 分配/ 32KB/ 的/ 资源/ ,/ 并/ 使用/ 每/ 千条/ 指令/ 误/ 预测/ 数/ (/ MispredictionsPerKiloInstructions/ ,/ MPKI/ )/ 作为/ 量化/ 标准/ ,/ 这/ 也/ 是/ 评估/ 预测器/ 性能/ 的/ 常用/ 指标/ [/ 13/ ,/ 23/ ]/ ./ 比较/ 结果/ 如图/ 3/ 所示/ ,/ 图中/ 给出/ 了/ 对/ 11/ 个/ SPECCPU2000/ 整图/ 3/ 使用/ 简单/ 粘滞/ 位表对/ 甚块/ 进行/ 预测/ 的/ 结果/ (/ 其中/ T/ 为/ TRIPS/ 原型/ 芯片/ 甚块/ 预测器/ ;/ TOH/ 为/ 无/ 出口/ 预测器/ 且/ 仅/ 使用/ 简单/ 粘滞/ 位表/ 进行/ 出口/ 类型/ 预测/ 的/ 甚块/ 预测器/ )/ 型/ 程序/ 的/ MPKI/ 剖析/ ,/ 将/ MPKI/ 归结为/ 不同/ 的/ 来源/ ,/ 分别/ 为/ :/ 出口/ 预测器/ (/ EXIT/ )/ 、/ 出口/ 类型/ 预测器/ (/ TYPE/ )/ 、/ 普通/ 分支/ 缓存/ (/ BTB/ )/ 、/ 函数调用/ 目标/ 缓存/ (/ CTB/ )/ 和/ 函数/ 返回/ 缓存/ (/ RAS/ )/ ./ 从图/ 3/ 中/ 可以/ 看到/ ,/ 相对/ 于/ 原有/ 的/ TRIPS/ 原型/ 芯片/ 预测器/ 而言/ ,/ 删除/ 了/ 出口/ 预测器/ 且/ 只用/ 了/ 简单/ 粘滞/ 位表/ 进行/ 甚块/ 出口/ 类型/ 预测/ 的/ 方案/ ,/ 其/ MPKI/ 平均/ 仅仅/ 上升/ 了/ 8/ %/ 左右/ ./ 更为重要/ 的/ 是/ ,/ 原有/ 的/ TRIPS/ 原型/ 芯片/ 预测器/ 中/ 由/ 出口/ 预测器/ 和/ 类型/ 预测器/ 导致/ 的/ MPKI/ ,/ 在/ 无/ 出口/ 预测器/ 的/ 方案/ 中/ ,/ 转换/ 为了/ 几乎/ 等量/ 的/ 由/ 类型/ 预测器/ 导致/ 的/ MPKI/ ,/ 且/ 有/ 约/ 10/ %/ 的/ 下降/ ./ 该/ 现象/ 说明/ ,/ 甚块/ 的/ 出口/ 类型/ 在/ 无/ 出口/ 预测器/ 的/ 情况/ 下/ 就/ 能够/ 进行/ 预测/ ,/ 并且/ 凭借/ 简单/ 的/ 仅/ 用/ 甚块/ 地址/ 进行/ 索引/ 的/ 粘滞/ 位表/ 就/ 能够/ 获得/ 较/ 好/ 的/ 预测/ 效果/ ./ 这/ 与/ 前述/ EDGE/ 体系结构/ 中约/ 80/ %/ 甚块/ 的/ 出口/ 类型/ 具有/ 极强/ 的/ 偏向/ 性是/ 相符/ 的/ ./ 另外/ 约/ 20/ %/ 的/ 甚块/ 由于/ 其/ 行为/ 与/ 条件/ 分支/ 指令/ 行为/ 类似/ ,/ 因此/ ,/ 可以/ 大胆/ 假设/ 这些/ 甚块/ 的/ 出口/ 类型/ 与/ 甚块/ “/ 间/ ”/ 历史/ 或/ 地址/ 路径/ 信息/ (/ 而/ 不是/ 出口/ 号/ )/ 相关/ ,/ 使用/ 更为/ 复杂/ 的/ 相关性/ 预测/ 技术/ 能够/ 对/ 出口/ 类型/ 进行/ 较/ 好/ 的/ 预测/ ./ 本文/ 将/ 在/ 第/ 6/ 节中/ 通过/ 实验/ 结果/ 来/ 证明/ 这个/ 假设/ ./ 总而言之/ ,/ 本节/ 的/ 实验/ 数据/ 说明/ ,/ 甚块/ 的/ 出口/ 类型/ 呈现出/ 独立/ 于/ 出口/ 号/ 的/ 特征/ ,/ 这样/ 的/ 特征/ 使/ 其/ 可/ 在/ 不/ 使用/ 出口/ 号/ 时/ ,/ 直接/ 被/ 出口/ 类型/ 预测器/ 所/ 预测/ ./ 因此/ ,/ 前述/ 甚块/ 中/ 每个/ 出口/ 都/ 拥有/ 不同/ 的/ 出口/ 类型/ ,/ 通过/ 出口/ 号/ 对/ 其/ 进行/ 区分/ 是/ 必要/ 的/ 这个/ 假设/ ,/ 实际上/ 在/ EDGE/ 体系结构/ 中/ 并/ 不/ 成立/ ./ 进而/ 可以/ 认为/ ,/ 至少/ 对于/ 甚块/ 的/ 类型/ 预测/ 来说/ ,/ 出口/ 预测器/ 并/ 不是/ 必要/ 的/ ./ 值得注意/ 的/ 是/ ,/ 图/ 3/ 中/ ,/ 虽然/ 删除/ 出口/ 预测器/ 后/ 甚块/ 出口/ 和/ 出口/ 类型/ 的/ 预测/ 性能/ 提高/ 了/ ,/ 但/ 总体/ MPKI/ 还是/ 有/ 约/ 8/ %/ 的/ 上升/ ,/ 这/ 是/ 由/ BTB/ 所/ 导致/ 的/ ./ 由于/ 在/ 无/ 出口/ 预测器/ 的/ 方案/ 中/ ,/ 仅/ 使用/ 了/ 甚块/ 地址/ 来/ 索引/ BTB/ ,/ 因此/ BTB/ 无法/ 区分/ 同一个/ 甚块/ 产生/ 的/ 不同/ 跳转/ 目标/ ./ 这种/ 现象/ 说明/ ,/ 甚块/ 中/ 不同/ 的/ 出口/ 确实/ 会/ 产生/ 不同/ 的/ 跳转/ 目标/ ;/ 甚至/ 同一/ 出口/ ,/ 同样/ 的/ 出口/ 类型/ ,/ 也/ 会/ 由于/ 间接/ 跳转/ 指令/ 的/ 存在/ [/ 10/ ,/ 16/ ]/ ,/ 产生/ 不同/ 的/ 跳转/ 目标/ ./ 虽然/ 这个/ 现象/ 部分/ 说明/ 前述/ 甚块/ 中/ 每个/ 出口/ 都/ 拥有/ 不同/ 的/ 跳转/ 目标/ ,/ 通过/ 出口/ 号/ 对/ 其/ 进行/ 区分/ 是/ 必要/ 的/ 这个/ 假设/ 成立/ ,/ 但/ 该/ 问题/ 实际/ 可以/ 通过/ 使用/ 相关性/ 分支/ 目标/ 缓冲/ 技术/ 来/ 解决/ ①/ 实验/ 数据/ 也/ 说明/ 出口/ 号/ 的/ 分布/ 较为/ 均匀/ ./ Page6/ (/ CorrelativeBTB/ )/ [/ 14/ ,/ 24/ -/ 25/ ]/ ,/ 即将/ 甚块/ 地址/ 和/ 全局/ 历史/ 或/ 地址/ 路径/ 信息/ 结合/ 到/ 一/ 起来/ 索引/ BTB/ ./ 由于/ 这/ 并/ 不是/ 本文/ 的/ 研究/ 目标/ ,/ 因此/ 并/ 不/ 对/ 这个/ 问题/ 作/ 详细/ 阐述/ ./ 尽管如此/ ,/ 本文/ 随后/ 的/ 实验/ 将/ 证明/ 即使/ 不/ 使用/ 相关性/ 分支/ 目标/ 缓冲/ ,/ 本文/ 所/ 提出/ 的/ 方案/ 依然/ 具有/ 较/ 好/ 的/ 性能/ ./ 3.3/ 如何/ 看待/ 甚块/ 类型/ 预测/ 的/ 合理性/ 为/ 更/ 形象/ 和/ 深入/ 地/ 理解/ 无/ 出口/ 预测/ 的/ 甚块/ 类型/ 预测/ ,/ 需要/ 进一步/ 分析/ 甚块/ 的/ 跳转/ 行为/ ./ 实际上/ ,/ 可以/ 将/ 甚块/ 的/ 跳转/ 行为/ 看作/ 具有/ 间接/ 跳转/ 目标/ 的/ 条件/ 分支/ 指令/ ,/ 如图/ 4/ 所示/ ./ 从图/ 中/ 可以/ 看到/ ,/ 无论/ 甚块/ 拥有/ 多少/ 出口/ ,/ 从/ 哪个/ 出口/ 跳转/ ,/ 最终/ 呈现/ 的/ 结果/ 无外乎/ 两种/ 情况/ :/ (/ 1/ )/ 跳转/ 到/ 该/ 甚块/ 在/ 程序/ 上/ 的/ 下/ 一/ 甚块/ ;/ (/ 2/ )/ 跳转/ 到/ 其它/ 甚块/ ./ 前/ 一种/ 情况/ ,/ 即/ 是/ 出口/ 类型/ 预测/ 中/ 预测/ 到/ 顺序/ 分支/ 目标/ 的/ 情况/ ;/ 而后/ 一种/ 情况/ ,/ 可以/ 进一步/ 细分/ 为/ 3/ 种/ 不同/ 的/ 分支/ 类型/ ,/ 并/ 通过/ 不同/ 类型/ 的/ 分支/ 目标/ 缓冲/ (/ 在/ TRIPS/ 指令/ 集中/ ,/ 分别/ 是/ BTB/ 、/ CTB/ 、/ RAS/ )/ 来/ 得到/ 跳转/ 目标/ ./ 因此/ ,/ 从/ 甚块/ 是否/ 为/ 顺序/ 分支/ 目标/ 这个/ 角度/ 来看/ ,/ 可以/ 将/ 其/ 看作/ 具有/ “/ 跳转/ ”/ 或/ “/ 不/ 跳转/ ”/ 行为/ 的/ 条件/ 分支/ 指令/ ./ 而/ 从/ 甚块/ 跳转/ 时/ 需要/ 根据/ 不同/ 的/ 执行/ 上下文/ 来/ 确定/ 跳转/ 目标/ 的/ 角度/ 来看/ ,/ 则/ 可以/ 将/ 其/ 看作/ 间接/ 跳转/ 指令/ ./ 以/ 这样/ 的/ 角度/ 为/ 基础/ ,/ 直接/ 使用/ 甚块/ 出口/ 类型/ 构成/ 的/ 历史/ 则/ 与/ 条件/ 分支/ 指令/ 的/ 跳转/ 历史/ 相似/ ./ 该/ 历史/ 表征/ 了/ 甚块/ 的/ 跳转/ 行为/ ,/ 可/ 被/ 出口/ 类型/ 预测器/ 用于/ 更/ 准确/ 地/ 预测/ 甚块/ 出口/ 类型/ ,/ 从而/ 在/ 不/ 需要/ 出口/ 号/ 的/ 情况/ 下/ 完成/ 甚块/ 跳转/ 地址/ 的/ 预测/ 任务/ ./ 这/ 就/ 能够/ 避免/ 传统/ 甚块/ 预测器/ 中/ 低效/ 的/ 出口/ 预测器/ 对/ 出口/ 类型/ 预测/ 性能/ 的/ 影响/ ,/ 直接/ 将/ 重点/ 聚焦/ 到/ 甚块/ 类型/ 预测/ 上/ ,/ 实现/ 问题/ 的/ 简化/ ,/ 提供/ 更/ 多/ 的/ 性能/ 提升/ 可能/ ./ 从/ 分支/ 历史/ 相关性/ 角度/ 来看/ ,/ 取消/ 出口/ 预测/ 事实上/ 是/ 在/ 预测/ 过程/ 中/ 忽略/ 了/ 甚块/ “/ 内/ ”/ 的/ 相关/ 信息/ ,/ 这种/ 相关/ 信息/ 对/ 被/ 预测/ 的/ 甚块/ 而言/ 是/ “/ 推测/ ”/ 的/ ,/ 不/ 确定/ 的/ ;/ 而/ 直接/ 使用/ 甚块/ 的/ 出口/ 类型/ 构成/ 历史/ ,/ 则/ 是/ 使用/ 甚块/ “/ 间/ ”/ 的/ 相关/ 信息/ 来/ 指导/ 预测器/ 的/ 工作/ ,/ 这种/ 相关/ 信息/ 是/ 既有/ 的/ 、/ 确定/ 的/ ./ 本文/ 随后/ 的/ 实验/ 将/ 证明/ ,/ 使用/ 甚块/ “/ 间/ ”/ 的/ 相关/ 信息/ 能够/ 获得/ 更好/ 的/ 甚块/ 预测/ 性能/ ./ 本节/ 通过/ 上述/ 分析/ 得到/ 了/ 如下/ 3/ 点/ 结论/ ./ 首先/ ,/ 传统/ 甚块/ 预测器/ 中/ 的/ 出口/ 预测器/ 是/ 整体/ 性能/ 的/ 瓶颈/ ,/ 并且/ 仅仅/ 产生/ 预测/ 过程/ 的/ 中间/ 结果/ ,/ 不/ 包含/ 直接/ 的/ 甚块/ 跳转/ 目标/ 信息/ ;/ 其次/ ,/ 甚块/ 的/ 出口/ 类型/ 具有/ 独立/ 于/ 甚块/ 出口/ 号/ 的/ 特性/ ,/ 并/ 具备/ 被/ 出口/ 类型/ 预测器/ 直接/ 预测/ 的/ 潜力/ ;/ 再次/ ,/ 甚块/ 的/ 出口/ 类型/ 表示/ 了/ 甚块/ “/ 间/ ”/ 的/ 相关性/ ,/ 能够/ 在/ 没有/ 出口/ 号/ 的/ 情况/ 下/ 完备/ 地/ 描述/ 甚块/ 的/ 跳转/ 行为/ ./ 综合/ 这/ 3/ 点/ 因素/ ,/ 可以/ 认为/ ,/ 在/ 没有/ 出口/ 预测器/ 的/ 情况/ 下/ 直接/ 对/ 甚块/ 的/ 出口/ 类型/ 进行/ 预测/ ,/ 是/ 一种/ 可行/ 的/ 、/ 并/ 具有/ 性能/ 提升/ 潜力/ 的/ 方案/ ./ 鉴于/ 此/ ,/ 本文/ 将/ 在/ 该/ 思路/ 的/ 指导/ 下/ ,/ 提出/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 结构/ ./ 4/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 结构/ 4.1/ 总体/ 结构/ 本/ 节/ 根据上述/ 分析/ 结果/ ,/ 提出/ 一种/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 结构/ ./ 由于/ 甚块/ 出口/ 类型/ 也/ 有/ 多种/ 可能/ (/ TRIPS/ 指令集/ 定义/ 了/ 4/ 种/ )/ ,/ 因此/ 需要/ 使用/ 与/ 出口/ 预测器/ 类似/ 的/ 多值/ 预测器/ ./ 具体/ 的/ 做法/ 是/ ,/ 使用/ “/ 4/ 选/ 1/ ”/ 类型/ 预测器/ 从/ 顺序/ 目标/ 、/ 普通/ 分支/ 目标/ 、/ 函数调用/ 目标/ 和/ 函数/ 返回/ 目标/ 中/ 确定/ 当前/ 的/ 预测/ 结果/ ,/ 并/ 根据/ 预测/ 结果/ 访问/ 相应/ 的/ 分支/ 目标/ 缓存/ ,/ 得到/ 最终/ 的/ 跳转/ 目标/ ./ 这种/ 类型/ 预测器/ 所/ 使用/ 的/ 历史/ 信息/ 与/ 传统/ 分支/ 预测器/ 中/ 所/ 使用/ 的/ 二值/ 历史/ 信息/ 类似/ ,/ 由/ 每个/ 甚块/ 产生/ 的/ 出口/ 类型/ 组成/ ,/ 表征/ 了/ 甚块/ “/ 间/ ”/ 的/ 执行/ 历史/ ./ 与/ 传统/ 甚块/ 预测器/ 所/ 使用/ 的/ 出口/ 号/ 历史/ 信息/ 不同/ ,/ 这种/ 历史/ 信息/ 仅仅/ 保留/ 甚块间/ 的/ 相关性/ ,/ 忽略/ 了/ 甚块/ 内/ 的/ 执行/ 路径/ 信息/ ./ 由于/ 一共/ 需要/ 预测/ 4/ 种/ 类型/ ,/ 因此/ 每/ 一个/ 甚块/ 会/ 产生/ 2/ 位/ 历史/ ./ 地址/ 路径/ 则/ 是/ 由/ 执行/ 过程/ 中/ 甚块/ 的/ 地址/ 构成/ ,/ 表征/ 了/ 执行/ 轨迹/ 上/ 已/ 执行/ 的/ 甚块/ 地址/ ./ 该/ 方案/ 依然/ 使用/ 多值/ 预测/ 结构/ ,/ 可能/ 会/ 由于/ 多值/ 预测/ 本身/ 的/ 缺点/ 造成/ 性能/ 损失/ ,/ 但/ 由于/ 直接/ 使用/ 了/ 甚块/ “/ 间/ ”/ 相关/ 信息/ 对/ 出口/ 类型/ 进行/ 预测/ ,/ 因此/ 并/ 不会/ 受到/ 出口/ 预测器/ 的/ 干扰/ ./ 另一方面/ 可以/ 将/ 有限/ Page7/ 的/ 资源/ 全部/ 投入/ 到/ 出口/ 类型/ 预测器/ 中/ ,/ 提高/ 改善/ 性能/ 的/ 可能性/ ./ 具体/ 的/ 预测器/ 结构/ 如图/ 5/ 所示/ ./ 图中/ 使用/ 与/ 出口/ 预测器/ 类似/ 的/ 多值/ 预测器/ ,/ 在/ 历史/ 或/ 地址/ 路径/ 信息/ 的/ 帮助/ 下/ 直接/ 对/ 出口/ 类型/ 进行/ 预测/ ./ 如果/ 甚块/ 类型/ 预测器/ 预测/ 结果/ 为/ 顺序/ 目标/ ,/ 则/ 直接/ 产生/ 预测/ 的/ 跳转/ 目标/ ,/ 如果/ 是/ 其它/ 3/ 种/ 类型/ ,/ 则/ 根据/ 相应/ 的/ 分支/ 目标/ 缓冲/ 产生/ 预测/ 结果/ ./ 4.2/ 使用/ 历史/ 信息/ 和/ 甚块/ 地址/ 路径/ 的/ 甚块/ 类型/ 预测器/ 图/ 5/ 中/ 的/ 多值/ 预测器/ 可用/ 类似/ 经典/ gshare/ [/ 26/ ]/ 预测器/ 的/ 结构/ 实现/ ,/ 如图/ 6/ 所示/ ./ 该/ 结构/ 将/ 甚块/ 地址/ 和/ 全局/ // 本地/ 历史/ 信息/ (/ 或者/ 甚块/ 地址/ 路径/ 信息/ )/ 相结合/ 来/ 索引/ 相关性/ 表/ ,/ 是/ 一种/ 利用/ 历史/ 和/ 地址/ 路径/ 相关性/ 进行/ 分支/ 预测/ 的/ 经典/ 结构/ ./ 图/ 6/ (/ a/ )/ ~/ (/ c/ )/ 分别/ 为/ 全局/ 历史/ 、/ 全局/ 路径/ 和/ 本地/ 历史/ 预测器/ ,/ 分别/ 使用/ 相应/ 的/ 历史/ 和/ 地址/ 路径/ 信息/ 与/ 甚块/ 地址/ 按照/ 一定/ 的/ 方法/ (/ 通常/ 是/ 异或/ )/ 结合/ 后/ ,/ 对/ 样本/ 历史/ 表/ (/ PatternHistoryTable/ )/ 进行/ 索引/ ①/ ./ 表中/ 每一项/ 由/ 两/ 部分/ 组图/ 6/ 全局/ 历史/ 预测器/ 、/ 全局/ 路径/ 预测器/ 和/ 本地/ 历史/ 预测器/ 成/ ,/ 第一/ 部分/ 存储/ 出口/ 类型/ (/ TYPE/ )/ ,/ 即/ 当前/ 访问/ 该项/ 能够/ 得到/ 的/ 预测/ 结果/ ;/ 另/ 一部分/ 则/ 是/ 使用/ 饱和/ 计数器/ 实现/ 的/ 粘滞/ 位/ (/ HYST/ )/ ,/ 用于/ 更新/ 预测/ 结果/ ./ 值得注意/ 的/ 是/ ,/ 该/ 结构/ 中/ 历史/ 信息/ 由/ 每/ 一个/ 甚块/ 产生/ 的/ 出口/ 类型/ 构成/ ,/ 而/ 地址/ 路径/ 信息/ 则/ 由/ 执行/ 轨迹/ 上/ 的/ 甚块/ 地址/ 构成/ ./ 与/ 传统/ 分支/ 预测器/ 或/ 出口/ 预测器/ 一样/ ,/ 图中/ 的/ 3/ 种/ 预测器/ 方案/ 可以/ 两/ 两/ 组合/ 为/ 锦标赛/ 预测器/ ./ 另外/ ,/ 在/ 对/ 甚块/ 出口/ 类型/ 的/ 历史/ 和/ 路径/ 相关性/ 进行/ 研究/ 时/ ,/ 这/ 3/ 种/ 预测器/ 也/ 是/ 最具/ 代表性/ 的/ 结构/ ./ 4.3/ 使用/ TAGE/ 结构/ 的/ 甚块/ 类型/ 预测器/ 在/ 传统/ 的/ 二值/ 分支/ 预测器/ 中/ ,/ TAGE/ (/ TAggedGEometrichistory/ )/ 预测器/ [/ 23/ ]/ 是/ 硬件/ 可/ 实现/ 的/ 性能/ 最好/ 的/ 预测器/ 之一/ ./ 文献/ [/ 13/ ]/ 和/ 文献/ [/ 16/ ]/ 中/ 就/ 利用/ TAGE/ 预测/ 技术/ ,/ 实现/ 了/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ ./ 对/ 出口/ 类型/ 预测器/ 来说/ ,/ TAGE/ 预测/ 技术/ 同样/ 能够/ 提供/ 新/ 的/ 设计/ 思路/ ./ TAGE/ 预测/ 技术/ 使用/ 数个/ 不同/ 的/ 历史/ 样本/ 表/ ,/ 分别/ 由/ 呈/ 几何级数/ 增长/ 的/ 历史/ 长度/ 索引/ ,/ 并/ 通过/ 精巧/ 的/ 更新/ 机制/ 和/ 标签/ (/ TAG/ )/ 匹配/ 机制/ ,/ 使得/ 与/ 不同/ 历史/ 长度/ 相关/ 的/ 分支/ 指令/ 可以/ 被/ 相应/ 长度/ 的/ 历史/ 所/ 预测/ ,/ 从而/ 避免/ 不同/ 历史/ 样本/ 之间/ 的/ 别名/ 冲突/ ./ 根据/ TAGE/ 预测/ 技术/ 的/ 特点/ ,/ 针对/ 3.2/ 节中/ 描述/ 的/ 甚块/ 出口/ 类型/ 特性/ ,/ 本文/ 使用/ TAGE/ 预测/ 技术/ 设计/ 了/ 一种/ TAGE/ 甚块/ 出口/ 类型/ 预测器/ ,/ 可/ 用于/ 图/ 5/ 中/ 的/ 多值/ 预测/ ,/ 其/ 结构/ 如图/ 7/ 所示/ ./ 该/ TAGE/ 甚块/ 类型/ 预测器/ 由/ 简单/ 粘滞/ 位表/ T0/ (/ 仅/ 使用/ 甚块/ 地址/ 进行/ 索引/ ,/ 历史/ 长度/ 为/ 0/ )/ 以及/ 一组/ 历史/ 长度/ 呈/ 几何级数/ 增长/ 的/ 历史/ 样本/ 表/ T1/ …/ Tn/ 组成/ ,/ 该/ 几何级数/ 历史/ 长度/ 由/ L/ (/ j/ )/ =/ α/ (/ j/ -/ 1/ )/ L/ (/ 1/ )/ [/ 23/ ]/ 计算/ 得到/ ./ 与/ 经典/ TAGE/ 预测/ 技术/ 类似/ ,/ 表/ T1/ …/ Tn/ 中/ 每一项/ 由/ 3/ 部分/ 组成/ :/ 预测/ 结果/ (/ TYPE/ )/ 、/ 粘滞/ 位/ (/ HYST/ )/ 和/ 标签/ (/ TAG/ )/ ,/ T0/ 表中/ 则/ 没有/ 标签/ 位/ ./ 更新/ 机制/ 和/ 标签/ 匹配/ 机制/ 与/ 文献/ [/ 23/ ]/ 中/ 相同/ ./ 根据/ TAGE/ 预测/ 技术/ 的/ 特点/ ,/ 结合/ 图/ 2/ 中/ 给出/ 的/ 甚块/ 出口/ 类型/ 特性/ ,/ TAGE/ 甚块/ 类型/ 预测器/ 可以/ 达到/ 如下/ 效果/ :/ (/ 1/ )/ 甚块/ 中/ 80/ %/ 偏向/ 性极强/ 、/ 跟/ 历史/ 信息/ 无关/ 的/ 甚块/ ,/ 将/ 由/ 简单/ 粘滞/ 位表/ T0/ 来/ 预测/ ;/ (/ 2/ )/ 剩余/ 20/ %/ 与/ 历史/ 相关/ 的/ 甚块/ ,/ 将/ 分别/ 由/ T1/ …/ Tn/ 中/ 相应/ 的/ 表来/ 预测/ ./ 这/ 就/ 使得/ 不同/ 特性/ 甚块/ 之间/ 发生/ 别名/ 冲突/ 的/ 可能性/ 大大/ 减小/ ,/ 从而/ 提高/ 预测/ 性能/ ./ 随后/ 的/ 章节/ 中/ ,/ 将/ 对/ 本节/ 所/ 提出/ 的/ 甚块/ 类型/ 预测器/ 进行/ 性能/ 评估/ ./ ①/ 虽然/ 不同/ 预测器/ 结构/ 有所不同/ ,/ 但/ 通常/ 都/ 有/ 类似/ 样本/ 历史/ Page8/ 图/ 7/ 基于/ TAGE/ 技术/ 的/ 甚块/ 出口/ 类型/ 预测器/ 5/ 仿真/ 环境/ 和/ 评估/ 方法/ 由于/ 本文/ 的/ 诸多/ 分析/ 都/ 基于/ 实验/ 方法/ 得到/ ,/ 因此/ ,/ 在/ 进行/ 详细/ 的/ 性能/ 评估/ 前/ ,/ 本节/ 将/ 首先/ 描述/ 所/ 采用/ 的/ 仿真/ 环境/ 和/ 性能/ 评估/ 方法/ ./ 本文/ 所有/ 的/ 实验/ 数据/ 都/ 将/ 在/ 本节/ 所/ 描述/ 的/ 仿真/ 工具/ 、/ 基本/ 配置/ 参数/ 和/ 测试程序/ 集/ 基础/ 上/ 得到/ ./ 5.1/ 仿真/ 工具/ 本文/ 使用/ M5/ _/ EDGE/ [/ 27/ ]/ 模拟器/ 作为/ 仿真/ 工具/ ./ M5/ _/ EDGE/ 是/ 基于/ M5/ [/ 28/ ]/ 模拟器/ ,/ 使用/ C++/ // Python/ 构建/ 的/ EDGE/ 体系结构/ 仿真/ 工具/ ,/ 支持/ TRIPS/ 指令集/ [/ 10/ ]/ ,/ 具有/ 高层次/ 的/ 4/ 级/ 时序/ 模型/ ,/ 能够/ 在/ 微结构/ 层面/ 对/ EDGE/ 体系结构/ 进行/ 快速/ 的/ 设计/ 空间/ 探索/ ./ 得益于/ M5/ _/ EDGE/ 良好/ 的/ 面向对象/ 和/ 模块化/ 特性/ ,/ 本文/ 能够/ 方便/ 地/ 对/ 甚块/ 预测器/ 进行/ 建模/ ,/ 并/ 在/ 统一/ 的/ 仿真/ 框架/ 和/ 基准/ 配置/ 参数/ 下/ 进行/ 比较/ ./ 在/ 仿真/ 时/ ,/ 所/ 使用/ 的/ 基准/ 配置/ 如表/ 1/ 所示/ ,/ 文中/ 所/ 涉及/ 到/ 的/ 预测器/ 都/ 将/ 在/ 本/ 框架/ 下/ 实现/ ./ 为了/ 消除/ 处理器/ 其它/ 部分/ 对/ 预测器/ 的/ 影响/ ,/ 操作数/ 网络/ (/ OperandNetwork/ )/ 、/ 谓词/ 化/ 指令/ (/ PredicatedInstruction/ )/ 、/ Cache/ 和/ 访存/ 顺序/ (/ MemoryAccessOrder/ )/ 都/ 被/ 配置/ 为/ 理想/ 状态/ ,/ 即/ 仿真/ 时/ 操作数/ 网络/ 延迟/ 为/ 0/ 、/ 甚块/ 中/ 的/ 谓词/ 化/ 指令/ 在/ 执行/ 前/ 就/ 已经/ 获取/ 了/ 结果/ 、/ Cache/ 总是/ 命中/ 、/ 访存/ 顺序/ 在/ 执行/ 前/ 就/ 已经/ 获得/ ./ 取指/ 指令/ 映射/ 策略/ 静态/ 映射/ ,/ 并/ 有/ 1/ 个/ 周期/ 的/ 映射/ 延迟/ 指令/ 分派/ 开销/ 1/ 周期/ 指令/ 窗口/ 大小/ 1K/ 指令/ (/ 8/ 个/ TRIPS/ 的/ Hyperblock/ )/ 操作数/ 网络/ 延迟/ 完美/ 执行/ 引擎/ 谓词/ 化/ 提交/ 延迟/ CacheMemory/ 访问/ 顺序/ 完美/ 5.2/ 指令集/ 、/ 编译/ 策略/ 和/ 测试程序/ 本文/ 选择/ TRIPS/ 指令集/ 的/ 原因/ 在于/ :/ 其一/ ,/ TRIPS/ 指令集/ 是/ 开发/ 较为/ 完善/ 的/ EDGE/ 指令集/ ,/ 工具/ 链/ 较为/ 完善/ ;/ 其二/ ,/ TRIPS/ 指令集/ 在/ M5/ _/ EDGE/ 中有/ 较/ 好/ 的/ 支持/ ./ 在/ 编译/ 时/ ,/ 本文/ 使用/ 了/ TRIPS/ 工具/ 链中/ tcc/ 的/ -/ Omax/ 优化/ 选项/ [/ 29/ ]/ ./ 对于/ 有/ 出口/ 预测/ 的/ 仿真/ ,/ 编译器/ 将/ 为/ 每个/ 甚块/ 的/ 出口/ 按照/ 正常/ 的/ 策略/ 分配/ 出口/ 号/ ;/ 对于/ 只有/ 类型/ 预测/ 的/ 仿真/ ,/ 编译器/ 将/ 为/ 每个/ 甚块/ 的/ 出口/ 都/ 分配/ 出口/ 号/ 0/ ./ 本文/ 使用/ SPECCPU2000/ 中/ 能够/ 被/ TRIPS/ 工具/ 链/ 正确/ 编译/ 的/ 11/ 个/ 整形/ 测试程序/ 作为/ 测试/ 基准/ ./ 之所以/ 这样/ 选择/ 是因为/ 整形/ 程序/ 对于/ 控制流/ 推测/ 的/ 要求/ 较/ 高/ ,/ 能够/ 更好/ 地/ 体现/ 甚块/ 预测器/ 特性/ ,/ 而/ 浮点/ 程序/ 对于/ 甚块/ 预测器/ 的/ 性能/ 则/ 不是/ 那么/ 敏感/ ./ 在/ 仿真/ 时/ ,/ 选择/ 了/ ref/ 输入/ 集/ ,/ 并/ 使用/ Simpoint/ [/ 30/ ]/ 仿真/ 方法/ ,/ 以便/ 将/ 仿真/ 时间/ 缩短/ 到/ 可/ 接受/ 的/ 范围/ 之内/ ./ 6/ 实验/ 结果/ 分析/ 与/ 性能/ 评估/ 本节/ 将/ 在/ 第/ 5/ 节/ 所示/ 的/ 实验/ 方法/ 基础/ 上/ ,/ 使用/ 不同/ 方案/ 来/ 实现/ 甚块/ 出口/ 类型/ 预测器/ ,/ 并/ 观察/ 、/ 分析/ 和/ 比较/ 其/ 性能/ ./ 首先/ ,/ 本节/ 将/ 使用/ 无/ 冲突/ (/ Interference/ -/ free/ )/ 的/ 全局/ 预测器/ 、/ 地址/ 路径/ 预测器/ 和/ 本地/ 预测器/ 对/ 甚块/ 出口/ 类型/ 的/ 可预测性/ 及其/ 与/ 历史/ // 地址/ 路径/ 信息/ 的/ 相关性/ 进行/ 分析/ ./ 随后/ ,/ 将/ 比较/ 本文/ 提出/ 的/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 和/ 传统/ 的/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ 的/ 性能/ ./ 由于/ 本文/ 主要/ 关注/ 二者/ 性能/ 的/ 差异/ ,/ 因此/ 本/ 节/ 实验所/ 使用/ 的/ 分支/ 目标/ 缓冲/ 大小/ 均/ 固定/ ,/ 分别/ 为/ BTB/ 拥有/ 4096/ 个/ 入口/ 、/ CTB/ 拥有/ 128/ 个/ 入口/ 、/ RAS/ 拥有/ 64/ 个/ 入口/ ,/ 每个/ 入口/ 的/ 具体/ 实现/ 与/ 文献/ [/ 13/ ]/ 中/ 保持一致/ ./ 6.1/ 甚块/ 出口/ 类型/ 的/ 可预测性/ 分析/ 使用/ 无/ 冲突/ (/ Interference/ -/ free/ )/ 表对/ 分支/ 指令/ 的/ 可预测性/ 进行/ 研究/ 是/ 一种/ 由来已久/ 的/ 方法/ [/ 31/ -/ 32/ ]/ ./ Page9/ 文献/ [/ 16/ ]/ 中/ ,/ 作者/ 使用/ 类似/ 的/ 方法/ 对/ EDGE/ 体系结构/ 中/ 甚块/ 出口/ 的/ 可预测性/ 进行/ 了/ 研究/ ./ 通过/ 使用/ 无/ 冲突/ 表/ ,/ 预测器/ 可以/ 在/ 表中/ 为/ 每/ 一个/ 样本/ (/ pattern/ )/ 分配/ 独立/ 的/ 入口/ (/ Entry/ )/ ,/ 从而/ 使得/ 不同/ 的/ 样本/ 之间/ 不/ 存在/ 别名/ (/ Aliases/ )/ 冲突/ ,/ 将/ 历史/ 或/ 地址/ 路径/ 对/ 预测/ 能力/ 的/ 影响/ 最/ 纯粹/ 地/ 反映/ 出来/ ./ 图/ 8/ 中/ 给出/ 了/ 使用/ 图/ 6/ 中/ 3/ 种/ 预测器/ 时/ ,/ 11/ 个/ SPECCPU2000/ 整型/ 程序/ 在/ 历史/ // 地址/ 路径/ 信息/ 的/ 长度/ 从/ 0/ 比特/ 变化/ 到/ 63/ 比特/ 时/ 的/ 平均/ MPKI/ ,/ 其中/ 每种/ 预测器/ 都/ 使用/ 了/ 无/ 冲突/ 表/ ./ 对于/ 全局/ 历史/ 预测器/ 和/ 地址/ 路径/ 预测器/ ,/ 历史/ // 路径/ 和/ 甚块/ 地址/ 使用/ 了/ 两种/ 方式/ 进行/ 组合/ ./ 一种/ 为/ 使用/ gshare/ 中/ 给出/ 的/ 异或/ (/ XOR/ )/ 方式/ ,/ 另/ 一种/ 为/ 拼接/ (/ Concatenated/ )/ 方式/ ,/ 即/ 从/ 甚块/ 地址/ 和/ 历史/ // 路径/ 信息/ 中/ 各取/ 一部分/ ,/ 互不/ 干扰/ 地/ 组合/ 起来/ 形成/ 表/ 的/ 索引/ ./ 本地/ 预测器/ 中/ ,/ 历史/ 和/ 路径/ 按照/ 异或/ 方式/ 结合/ ./ 地址/ 路径/ 信息/ 使用/ 执行/ 轨迹/ 上/ 甚块/ 地址/ 的/ 低/ 4/ 位/ 组合而成/ ,/ 而/ 历史/ 信息/ 中/ 每个/ 甚块/ 产生/ 2/ 比特/ 历史/ ,/ 对应/ 着/ 甚块/ 出口/ 类型/ 的/ 2/ 位/ 编码/ (/ TRIPS/ 指令集/ 中共/ 4/ 种/ 出口/ 类型/ )/ ./ 图/ 8/ 对于/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ ,/ 使用/ 无/ 冲突/ 样本/ 表时/ 全局/ 历史/ 、/ 全局/ 路径/ 和/ 本地/ 预测器/ 的/ MPKI/ 变化/ 情况/ (/ 其中/ ,/ Global/ // CGlobal/ 分别/ 为/ 使用/ 异或/ 策略/ 和/ 拼接/ 策略/ 的/ 全局/ 历史/ 预测器/ ;/ Path/ // CPath/ 分别/ 为/ 使用/ 异或/ 策略/ 和/ 拼接/ 策略/ 的/ 地址/ 路径/ 预测器/ ;/ Local/ 为/ 本地/ 预测器/ )/ 图/ 8/ 中/ 的/ 结果显示/ :/ 当/ 历史/ 长度/ 为/ 0/ 时/ ,/ 即仅/ 使用/ 甚块/ 地址/ 对表/ 进行/ 索引/ 时/ ,/ 所有/ 预测器/ 的/ MPKI/ 相等/ ,/ 约/ 为/ 5.07/ ./ 由于/ 本/ 实验/ 中/ 的/ 预测器/ 使用/ 无/ 冲突/ 表/ ,/ 因此/ 这/ 也/ 是/ 使用/ 简单/ 粘滞/ 位表/ 进行/ 甚块/ 出口/ 类型/ 预测/ 的/ 极限值/ ./ 从/ 第/ 3.2/ 节中/ 对/ 甚块/ 出口/ 类型/ 分布/ 特征/ 的/ 分析/ 可知/ ,/ 当/ 历史/ 长度/ 为/ 0/ 时/ 预测器/ 主要/ 对/ 约/ 80/ %/ 具有/ 极强/ 偏向/ 性/ 的/ 甚块/ 提供/ 准确/ 预测/ ./ 而/ 与/ 图/ 3/ 中/ 使用/ 简单/ 粘滞/ 位表/ (/ 32KB/ )/ 进行/ 甚块/ 出口/ 类型/ 预测/ 的/ 结果/ (/ 平均/ MPKI/ 为/ 5.15/ )/ 相比/ ,/ 该/ 极限值/ 仅仅/ 下降/ 了/ 约/ 1.6/ %/ ./ 这/ 说明/ 使用/ 大小/ 为/ 32KB/ 的/ 粘滞/ 位表/ 已经/ 足够/ 对/ 约/ 80/ %/ 具有/ 极强/ 偏向/ 性/ 的/ 甚块/ 出口/ 类型/ 进行/ 预测/ ./ 如/ 希望/ 进一步/ 提升/ 预测/ 率/ ,/ 只能/ 寄望/ 于/ 改善/ 另外/ 约/ 20/ %/ 甚块/ 的/ 预测/ 性能/ ./ 随着/ 历史/ 长度/ 的/ 增长/ ,/ 有/ 两种/ 不同/ 的/ 趋势/ ./ 其一/ ,/ 对于/ 使用/ 拼接/ 方式/ 进行/ 索引/ 的/ 预测器/ ,/ MPKI/ 随着/ 历史/ 长度/ 的/ 增长/ 持续/ 而/ 稳定/ 地/ 下降/ ./ 这/ 说明/ 两层/ 含义/ :/ (/ 1/ )/ 甚块/ 出口/ 类型/ 与/ 全局/ 历史/ // 地址/ 路径/ 信息/ 相关/ ;/ (/ 2/ )/ 该/ 相关性/ 可以/ 被/ 出口/ 类型/ 预测器/ 捕捉/ ./ 其二/ ,/ 对于/ 使用/ 异或/ 方式/ 进行/ 索引/ 的/ 预测器/ ,/ MPKI/ 在/ 短暂/ 的/ 下降/ (/ 历史/ 长度/ 小于/ 约/ 2bit/ )/ 后/ ,/ 突然/ 上升/ ,/ 直到/ 历史/ 长度/ 继续/ 增加/ 到/ 一定/ 程度/ (/ 全局/ 历史/ 预测器/ 为/ 大于/ 13bit/ ,/ 地址/ 路径/ 预测器/ 为/ 大于/ 9bit/ ,/ 本地/ 历史/ 预测器/ 为/ 大于/ 5bit/ )/ ,/ MPKI/ 才/ 重新/ 下降/ 到/ 比/ 不/ 使用/ 历史/ // 路径/ 相关/ 信息/ (/ 0bit/ 历史/ 长度/ )/ 时/ 更/ 小/ 的/ 程度/ ./ 这/ 说明/ ,/ 使用/ 异或/ 索引/ 方式/ 时/ ,/ 在/ 历史/ // 地址/ 路径/ 长度/ 较/ 短/ 的/ 情况/ 下/ ,/ 预测器/ 能够/ 捕获/ 部分/ 甚块/ 的/ 历史/ // 地址/ 路径/ 相关性/ ./ 当/ 历史/ // 地址/ 路径/ 长度/ 增加/ 时/ ,/ 在/ 某个/ 区间/ 段/ 内/ ,/ 由/ 甚块/ 出口/ 类型/ 自身/ 特点/ 和/ 异或/ 索引/ 方式/ 共同/ 作用/ 导致/ 了/ 较/ 多/ 的/ 样本/ 重复/ (/ 即/ 虽然/ 历史/ 不同/ 且/ 甚块/ 地址/ 不同/ ,/ 但/ 异或/ 之后/ 的/ 索引/ 却/ 相同/ )/ ,/ 使得/ MPKI/ 出现/ 了/ 上升/ 趋势/ ./ 这样/ 的/ 上升/ 趋势/ 在/ 历史/ // 路径/ 长度/ 增大/ 到/ 一定/ 程度/ 时/ 得到/ 了/ 抑制/ ,/ 这/ 说明/ 当/ 历史/ 长度/ 足够/ 时/ ,/ 出口/ 类型/ 预测器/ 依然/ 有/ 能力/ 利用/ 历史/ // 地址/ 路径/ 相关性/ 获得/ 性能/ 提升/ ./ 当/ 历史/ 长度/ 继续/ 增加/ 时/ ,/ 所有/ 预测器/ 都/ 在/ 历史/ 长度/ 15bit/ 到/ 25bit/ 之间/ 达到/ 性能/ 极限/ ,/ MPKI/ 的/ 最小值/ 为/ 4.32/ (/ 使用/ 拼接/ 索引/ 的/ 全局/ 路径/ 预测器/ ,/ 历史/ 长度/ 20/ )/ ,/ 相对/ 于/ 历史/ 长度/ 为/ 0/ 时有/ 约/ 14/ %/ 的/ 下降/ ./ 之后/ ,/ 所有/ 预测器/ 的/ MPKI/ 都/ 出现/ 不同/ 程度/ 的/ 上升/ ,/ 且/ 全局/ 历史/ 预测器/ 相对/ 于/ 地址/ 路径/ 预测器/ 上升/ 更为/ 明显/ ./ 这/ 说明/ 甚块/ 出口/ 类型/ 在/ 本文/ 的/ 实验/ 条件/ 下/ ,/ 与/ 距离/ 太远/ 的/ 甚块/ (/ 对于/ 本地/ 预测器/ ,/ 则/ 是/ 相距/ 太久/ 的/ 动态/ 实例/ )/ 之间/ 的/ 相关性/ 并/ 不/ 明显/ ,/ 且/ 地址/ 路径/ 信息/ 相对/ 于/ 历史/ 信息/ 更能/ 反映/ 较/ 远距离/ 甚块/ 的/ 相关性/ ./ 另外/ ,/ 使用/ 拼接/ 方式/ 进行/ 索引/ 的/ 预测器/ 在/ 历史/ 长度/ 增加/ 到/ 60/ 之后/ ,/ MPKI/ 有/ 较为/ 明显/ 的/ 突然/ 增加/ ./ 这/ 主要/ 是/ 由于/ 最大/ 索引/ 长度/ 固定/ 为/ 64/ ,/ 从而/ 使得/ 甚块/ 地址/ 信息/ 在/ 历史/ 和/ 地址/ 路径/ 信息/ 太长/ 后/ 造成/ 了/ 丢失/ ,/ 导致/ 索引/ 样本/ 的/ 差异化/ 减弱/ ,/ 增加/ 了/ 误/ 预测/ 次数/ ./ 这/ 也/ 说明/ ,/ 甚块/ 类型/ 不能/ 单纯/ 使用/ 历史/ 或/ 地址/ 路径/ 信息/ 进行/ 预测/ ./ 总体/ 来看/ ,/ 对/ 全局/ 预测器/ 而言/ ,/ 使用/ 地址/ 路径/ 信息/ 比/ 使用/ 历史/ 信息/ 性能/ 更优/ ./ 地址/ 路径/ 预测器/ 的/ MPKI/ 最小/ 为/ 4.32/ (/ 使用/ 拼接/ 索引/ 的/ 全局/ 路径/ 预测/ Page10/ 器/ )/ ,/ 而/ 全局/ 历史/ 预测器/ 的/ MPKI/ 最小/ 为/ 4.39/ ,/ 上升/ 了/ 约/ 1.5/ %/ ./ 整体而言/ ,/ 地址/ 路径/ 预测器/ 的/ MPKI/ 亦/ 小于/ 全局/ 历史/ 预测器/ ./ 另外/ ,/ 本地/ 预测器/ 性能/ 则/ 介于/ 地址/ 路径/ 预测器/ 和/ 全局/ 历史/ 预测器/ 之间/ ./ 综上所述/ ,/ 本/ 节/ 通过/ 分析/ 使用/ 无/ 冲突/ 表/ 的/ 全局/ 历史/ // 地址/ 路径/ 预测器/ 和/ 本地/ 历史/ 预测器/ 在/ 不同/ 历史/ 长度/ 下/ 的/ 性能/ ,/ 能够/ 得出/ 如下/ 结论/ :/ (/ 1/ )/ 甚块/ 出口/ 类型/ 与/ 甚块/ “/ 间/ ”/ 的/ 历史/ // 地址/ 路径/ 信息/ (/ 全局/ // 本地/ )/ 相关/ ,/ 在/ 忽略/ 甚块/ “/ 内/ ”/ 的/ 相关/ 信息/ (/ 出口/ 号/ )/ 后/ ,/ 利用/ 这些/ 甚块/ “/ 间/ ”/ 的/ 相关/ 信息/ 能够/ 获得/ 预测/ 性能/ 的/ 提升/ ./ 这/ 证明/ 了/ 第/ 3.2/ 节/ 的/ 猜测/ :/ 对于/ 行为/ 与/ 条件/ 分支/ 指令/ 类似/ 的/ 甚块/ (/ 约/ 占/ 20/ %/ )/ ,/ 其/ 出口/ 类型/ 与/ 甚块/ “/ 间/ ”/ 的/ 历史/ // 地址/ 路径/ 信息/ 相关/ ./ (/ 2/ )/ 在/ 预测/ 甚块/ 出口/ 类型/ 时/ ,/ 使用/ 地址/ 路径/ 信息/ 比/ 使用/ 全局/ 历史/ 信息/ 更/ 有效/ ,/ 且/ 本地/ 历史/ 预测器/ 也/ 能够/ 获得/ 可观/ 的/ 预测/ 准确率/ ./ 6.2/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 与/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ 性能/ 比较/ 上节/ 的/ 分析/ 证实/ 了/ 甚块/ 出口/ 类型/ 与/ 甚块/ “/ 间/ ”/ 的/ 历史/ // 地址/ 路径/ 信息/ 相关/ ,/ 因而/ 可以/ 利用/ 这些/ 信息/ 来/ 提升/ 其/ 预测/ 性能/ ./ 本节/ 将/ 从/ 性能/ 的/ 角度/ 比较/ 传统/ 的/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ 和/ 本文/ 所/ 提出/ 的/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ ./ 比较/ 时/ ,/ 对于/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ ,/ 将/ 使用/ 文献/ [/ 13/ ]/ 中/ 所/ 提出/ 的/ 全局/ // 本地/ 锦标赛/ 出口/ 预测/ 方案/ ,/ 其/ 具体/ 结构/ 如图/ 1/ 所示/ ./ 这/ 也/ 是/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ 在/ 相对/ 简单/ 的/ 结构/ 下能/ 达到/ 较/ 好/ 性能/ 的/ 方案/ ./ 对于/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ ,/ 将/ 在/ 图/ 5/ 所示/ 结构/ 的/ 基础/ 上/ ,/ 使用/ 全局/ // 本地/ 锦标赛/ 预测器/ 实现/ 其中/ 的/ “/ 多选/ 1/ ”/ 类型/ 预测器/ ,/ 直接/ 对/ 4/ 种/ 甚块/ 出口/ 类型/ 进行/ 预测/ ./ 比较/ 时为/ 出口/ 预测器/ 和/ 类型/ 预测器/ 分配/ 的/ 资源/ 将/ 从/ 1KB/ 变化/ 到/ 512KB/ ,/ 资源/ 的/ 大小/ 根据/ 每个/ 表/ 的/ 入口/ 数/ 和/ 每个/ 入口/ 的/ 比特/ 数来/ 确定/ ,/ 具体/ 的/ 配置/ 信息/ 如表/ 2/ 所示/ ./ 表/ 2/ 中/ ,/ G/ // LEXIT/ 为/ 基于/ 出口/ 预测/ 的/ 全局/ // 本地/ 锦标赛/ 甚块/ 预测器/ ,/ 其中/ G/ // L/ // C/ 分别/ 为/ 其中/ 的/ 全局/ 历史/ 长度/ 、/ 本地/ 历史/ 长度/ 和/ 选择器/ 历史/ 长度/ ,/ 相应/ 的/ 样本/ 表/ 入口/ 数为/ 2G/ // L/ // C/ ,/ H/ 则/ 为/ 该/ 预测器/ 中/ 用于/ 在/ 出口/ 预测/ 后/ 进行/ 类型/ 预测/ 的/ 粘滞/ 位表/ 入口/ 数/ ;/ HTYPE/ 为/ 基于/ 类型/ 预测/ 的/ 仅/ 使用/ 简单/ 粘滞/ 位表/ 的/ 甚块/ 预测器/ ,/ 其中/ H/ 表示/ 其/ 粘滞/ 位表/ 的/ 入口/ 数/ ;/ P/ // LTYPE/ 为/ 基于/ 类型/ 预测/ 的/ 全局/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ ,/ 其中/ L/ // G/ // C/ 分别/ 为/ 本地/ 历史/ 长度/ 、/ 地址/ 路径/ 长度/ 和/ 选择器/ 历史/ 长度/ ,/ 相应/ 的/ 样本/ 表/ 入口/ 数为/ 2L/ // G/ // C/ ./ 另外/ ,/ 对于/ 预测/ 出口/ 的/ 样本/ 表/ 来说/ ,/ 其/ 1KB107105122KB810102KB118111K4KB911114KB129121K8KB1012128KB1310132K16KB11131316KB1411142K32KB12141432KB1512154K64KB13151564KB1613164K128KB141616128KB1714174K256KB151717256KB1815184K512KB161818512KB1916194K1MB171919/ 每个/ 入口/ 由/ 3/ 比特/ 出口/ 号/ 信息/ 和/ 1/ 比特/ 粘滞/ 位/ 构成/ ;/ 对于/ 预测/ 出口/ 类型/ 的/ 样本/ 表/ 来说/ ,/ 其/ 每个/ 入口/ 由/ 2/ 比特/ 出口/ 类型信息/ 和/ 1/ 比特/ 粘滞/ 位/ 构成/ ;/ 对于/ 选择器/ 样本/ 表/ 来说/ ,/ 每个/ 入口/ 由/ 3/ 比特/ 粘滞/ 位/ 构成/ ./ 图/ 9/ 中/ 给出/ 了/ 针对/ 11/ 种/ SPECCPU2000/ 测试程序/ 的/ 平均/ MPKI/ ./ 作为/ 对比/ ,/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 使用/ 了/ 两种/ 方案/ :/ (/ 1/ )/ 地址/ 路径/ (/ 使用/ 拼接/ 索引/ 方式/ )/ // 本地/ 预测器/ (/ PATH/ // LOCAL/ _/ TYPE/ )/ 锦标赛/ 方案/ ,/ 这/ 也/ 是/ 在/ 对/ 甚块/ 出口/ 类型/ 的/ 可预测性/ 进行/ 分析/ 后/ ,/ 得出/ 的/ 最优/ 组合/ ;/ (/ 2/ )/ 使用/ 简单/ 粘滞/ 位表/ (/ 即/ 历史/ 长度/ 为/ 0/ ,/ 仅/ 使用/ 甚块/ 地址/ 进行/ 索引/ )/ 进行/ 甚块/ 出口/ 类型/ 预测/ 的/ 方案/ (/ HYST/ _/ TYPE/ )/ ,/ 该/ 方案/ 用于/ 展示/ 无/ 相关/ 信息/ 时/ ,/ 甚块/ 出口/ 类型/ 预测/ 能力/ 的/ 变化/ ./ 另外/ ,/ 对于/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ ,/ 还/ 引入/ 了/ 使用/ 无/ 冲突/ 表/ (/ IF/ _/ PL/ _/ TYPE/ )/ 时/ 的/ 情况/ (/ 该/ 方案/ 中/ 历史/ 长度/ 与/ 图/ 9/ 中/ 普通/ 方案/ 相同/ ,/ 但/ 使用/ 无/ 冲突/ 表/ )/ ,/ 以便/ 观察/ 使用/ 锦标赛/ 预测器/ 时/ 甚块/ 出口/ 类型/ 预测/ 的/ 极限/ ./ 图/ 9/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 和/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ 性能/ 比较/ (/ 其中/ ,/ GLOBAL/ // LOCAL/ _/ EXIT/ 为/ 基于/ 出口/ 预测/ 的/ 全局/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ ;/ HYST/ _/ TYPE/ 为/ 基于/ 类型/ 预测/ 的/ 仅/ 使用/ 简单/ 粘滞/ 位表/ 的/ 甚块/ 预测器/ ;/ PATH/ // LOCAL/ _/ TYPE/ 为/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ ;/ PL/ _/ IF/ _/ TYPE/ 为/ 使用/ 无/ 冲突/ 表/ 的/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ )/ Page11/ 图/ 9/ 中/ 的/ 结果/ 说明/ :/ 首先/ ,/ 当/ 资源/ 从/ 1KB/ 变化/ 到/ 512KB/ 时/ ,/ 对/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ 而言/ ,/ 其/ MPKI/ 和/ 基于/ 出口/ 预测/ 的/ 全局/ 历史/ // 本地/ 锦标赛/ 甚块/ 预测器/ 几乎/ 相等/ ./ 除/ 在/ 1KB/ 时/ ,/ 基于/ 类型/ 预测/ 的/ 方案/ 能够/ 将/ MPKI/ 降低/ 约/ 8/ %/ 外/ ,/ 其余/ 情况/ 下/ ,/ 两者/ 性能/ 持平/ ./ 其次/ ,/ 在/ 资源/ 最小/ (/ 1KB/ )/ 时/ ,/ 基于/ 类型/ 预测/ 的/ 简单/ 粘滞/ 位表/ 甚块/ 预测器/ 性能/ 最好/ ,/ 相对/ 于/ 基于/ 出口/ 预测/ 的/ 全局/ 历史/ // 本地/ 锦标赛/ 甚块/ 预测器/ ,/ MPKI/ 降低/ 了/ 约/ 15/ %/ ,/ 相对/ 于/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ ,/ MPKI/ 降低/ 了/ 约/ 10/ %/ ./ 其/ 原因/ 在于/ ,/ 当/ 资源/ 受限/ 时/ ,/ 由于/ 甚块/ 出口/ 类型/ 本身/ 较强/ 的/ 偏向/ 性/ (/ 约/ 80/ %/ 的/ 甚块/ 只/ 产生/ 一种/ 特定/ 的/ 出口/ 类型/ )/ ,/ 无/ 历史/ 信息/ 、/ 仅/ 使用/ 甚块/ 地址/ 对/ 甚块/ 出口/ 类型/ 进行/ 预测/ 的/ 简单/ 粘滞/ 位表/ 依然/ 能够/ 获得/ 可观/ 的/ 预测/ 准确率/ ./ 而/ 此时/ ,/ 由于/ 资源/ 较/ 少/ ,/ 历史/ 样本/ 表/ 入口/ 数/ 受限/ ,/ 因此/ 如果/ 使用/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ 进行/ 出口/ 类型/ 预测/ ,/ 会/ 因为/ 相关/ 信息/ 的/ 加入/ 而/ 导致/ 太/ 多/ 不必要/ 的/ 别名/ 冲突/ ,/ 从而/ 增加/ 了/ 误/ 预测/ 次数/ ./ 对于/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ 而言/ ,/ 资源/ 受限/ 使得/ 出口/ 误/ 预测/ 次数/ 增多/ ,/ 并/ 因此/ 导致/ 更加/ 低效/ 的/ 出口/ 类型/ 预测/ 和/ 跳转/ 目标/ 预测/ ,/ 使得/ 其/ 总体/ 性能/ 在/ 资源/ 受限/ 时/ 最差/ ./ 但是/ ,/ 使用/ 简单/ 粘滞/ 位表/ 的/ 方案/ 由于/ 不/ 使用/ 相关/ 信息/ ,/ 因此/ 其/ 虽然/ 在/ 资源/ 很/ 小时/ 能够/ 提供/ 较/ 好/ 的/ 性能/ ,/ 但/ 随着/ 资源/ 的/ 增大/ 很快/ 就/ 陷入/ 饱和/ (/ 资源/ 大于/ 4KB/ 后/ )/ ,/ 从而/ 无法/ 提供/ 持续/ 的/ 性能/ 增长/ ./ 最后/ ,/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ 与/ 使用/ 无/ 冲突/ 表/ 的/ 方案/ 相比/ ,/ 其/ MPKI/ 还有/ 较大/ 差距/ ,/ 该/ 现象/ 在/ 资源/ 小于/ 128KB/ 时/ 极为/ 突出/ ./ 这/ 一方面/ 说明/ 在/ 资源/ 受限/ 时/ ,/ 地址/ 路径/ // 本地/ 锦标赛/ 方案/ 确实/ 由于/ 别名/ 冲突/ 的/ 增多/ 而/ 导致/ 性能/ 下降/ ;/ 另一方面/ ,/ 该/ 现象/ 也/ 说明/ ,/ 如果/ 能够/ 寻找/ 到/ 更/ 高效/ 的/ 结构/ ,/ 则/ 可能/ 将/ MPKI/ 进一步/ 降低/ ./ 6.3/ 使用/ TAGE/ 预测器/ 提升/ 甚块/ 类型/ 预测器/ 性能/ 正如/ 前述/ ,/ 对于/ 甚块/ 出口/ 类型/ 的/ 预测/ 而言/ ,/ 如果/ 能够/ 找到/ 更/ 优秀/ 的/ 方案/ ,/ 那么/ 其/ 性能/ 还有/ 较大/ 的/ 上升/ 空间/ ./ 图/ 7/ 中/ 给出/ 的/ TAGE/ 甚块/ 类型/ 预测器/ 正是/ 这样/ 一种/ 潜在/ 的/ 方案/ ./ 为/ 分析/ TAGE/ 甚块/ 出口/ 类型/ 预测器/ 的/ 性能/ ,/ 本节/ 在/ 图/ 5/ 中/ 所示/ 的/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 结构/ 基础/ 上/ ,/ 用/ TAGE/ 甚块/ 出口/ 类型/ 预测器/ 实现/ 其中/ 的/ “/ 多选/ 1/ ”/ 预测器/ ./ 另外/ ,/ 传统/ 的/ TAGE/ 预测器/ 通常/ 使用/ 全局/ 历史/ // 地址/ 路径/ 进行/ 索引/ ,/ 而/ 为了/ 利用/ 本地/ 历史/ 信息/ ,/ 本/ 节/ 仿照/ 锦标赛/ 预测器/ 的/ 方式/ ,/ 将/ TAGE/ 类型/ 预测器/ 和/ 本地/ 类型/ 预测器/ 结合/ 到/ 一起/ ./ 作为/ 对比/ ,/ 引入/ 了/ 在/ 文献/ [/ 13/ ]/ 中/ 使用/ 的/ 基于/ 出口/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ (/ 在/ 具体/ 实现/ 时/ ,/ 该/ 预测器/ 同样/ 将/ TAGE/ 出口/ 预测器/ 和/ 本地/ 出口/ 预测器/ 以/ 锦标赛/ 预测/ 的/ 方式/ 结合/ )/ ./ 这/ 两种/ 预测器/ 的/ 具体/ 配置/ 如表/ 3/ 所示/ ./ 其中/ ,/ 所有/ 的/ 配置/ 都/ 使用/ 了/ 典型/ 的/ 有/ 5/ 个表/ 的/ TAGE/ 结构/ [/ 23/ ]/ ./ 表中/ ,/ T/ // LTYPE/ 是/ 基于/ 类型/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ ,/ 其中/ L/ // C/ 分别/ 为/ 本地/ 历史/ 长度/ 和/ 选择器/ 历史/ 长度/ ,/ 相应/ 的/ 样本/ 表/ 入口/ 数为/ 2L/ // C/ ,/ α/ // l/ (/ 1/ )/ 分别/ 为/ TAGE/ 预测器/ 历史/ 长度/ 计算/ 参数/ ,/ 相应/ 样本/ 表/ T1/ …/ Tn/ 的/ 大小/ 由/ 计算/ 得到/ 的/ 历史/ 长度/ 按照/ 与/ 本地/ 历史/ 预测器/ 和/ 选择器/ 相同/ 的/ 方式/ 得到/ ,/ D/ 为/ TAGE/ 预测器/ 中/ 默认/ 表/ T0/ 的/ 入口/ 数/ ;/ T/ // LEXIT/ 是/ 基于/ 出口/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ ,/ 其中/ L/ // C/ // α/ // l/ (/ 1/ )/ // D/ 参数/ 之/ 含义/ 与/ T/ // LTYPE/ 中/ 一致/ ,/ 样本/ 表/ 的/ 入口/ 数/ 计算/ 方式/ 亦/ 相同/ ,/ H/ 为/ 在/ 出口/ 预测/ 之后/ ,/ 用于/ 类型/ 预测/ 的/ 简单/ 粘滞/ 位表/ 入口/ 数/ ./ 在/ 本/ 配置/ 中/ ,/ 本地/ 历史/ 预测器/ 和/ 选择器/ 的/ 样本/ 表/ 入口/ 配置/ 与表/ 2/ 中/ 一致/ ./ TAGE/ 预测器/ 的/ 样本/ 表中/ ,/ 如果/ 是/ 进行/ 出口/ 类型/ 预测/ ,/ 则/ 每个/ 入口/ 由/ 2/ 比特/ 出口/ 类型信息/ 、/ 2/ 比特/ 粘滞/ 位/ 和/ 9/ 比特/ 标签/ 位/ 构成/ ,/ 其中/ 表/ T0/ 无/ 标签/ 位/ ;/ 如果/ 进行/ 出口/ 预测/ ,/ 则/ 每个/ 入口/ 由/ 3/ 比特/ 出口/ 号/ 信息/ 、/ 2/ 比特/ 粘滞/ 位/ 和/ 9/ 比特/ 标签/ 位/ 构成/ ./ 1KB9101/ ./ 25993512781.20545125122/ KB10111/ ./ 25994512891.493835125124/ KB11121/ ./ 216451K9101/ ./ 54231K1K8KB12131/ ./ 54231K10111/ ./ 442241K1K16KB13141/ ./ 587432K11121/ ./ 37552K2K32KB14151/ ./ 481242K12131/ ./ 259972K2K64KB15161/ ./ 67134K13141/ ./ 233184K4K128KB16171/ ./ 442254K14151/ ./ 211494K4K256KB17181/ ./ 473658K15161/ ./ 1934108K8K512KB18191/ ./ 41568K16171/ ./ 1784118K8K/ 性能/ 比较/ 结果/ 如图/ 10/ 所示/ ./ 作为/ 参照/ ,/ 图中/ 引入/ 了/ 上节/ 中/ 基于/ 出口/ 预测/ 的/ 全局/ 历史/ // 本地/ 锦标赛/ 甚块/ 预测器/ 和/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ ./ 从图/ 10/ 中/ 可以/ 看到/ ,/ 基于/ 类型/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ 对/ 性能/ 的/ 提升/ 非常明显/ ./ 首先/ ,/ 相对/ 于/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 预测器/ ,/ 该/ 方案/ 将/ MPKI/ 在/ 资源/ 为/ 1KB/ 时/ 降低/ 了/ 约/ 18/ %/ ./ 虽然/ 该/ 差距/ 随着/ 资源/ 的/ 增多/ 而/ 逐渐/ 缩小/ ,/ 但/ 使用/ TAGE/ 技术/ 的/ 方案/ 一直/ 保持/ 着/ 优势/ ,/ 直到/ 512KB/ 时/ 两者/ 的/ MPKI/ 才/ 趋于/ 相等/ ./ 其次/ ,/ 相对/ 于/ 基于/ 出口/ 预测/ 的/ 全局/ 历史/ // 本地/ 锦标赛/ 甚块/ 预测/ Page12/ 器/ ,/ 总体/ 趋势/ 相同/ ./ 即/ 在/ 资源/ 为/ 1KB/ 时该/ 方案/ 能/ 将/ MPKI/ 降低/ 约/ 23/ %/ ,/ 直到/ 512KB/ 时/ ,/ 两者/ MPKI/ 才/ 趋于/ 相等/ ./ 最后/ ,/ 相对/ 于/ 基于/ 出口/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ ,/ 总体/ 趋势/ 亦/ 相同/ ./ 在/ 资源/ 大于/ 256KB/ 后/ ,/ 基于/ 出口/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ 略/ 占优势/ ,/ MPKI/ 低/ 4/ %/ 左右/ ./ 图/ 10/ 使用/ TAGE/ 技术/ 的/ 预测器/ 比较/ (/ 其中/ ,/ GLOBAL/ // LOCAL/ _/ EXIT/ 为/ 基于/ 出口/ 预测/ 的/ 全局/ 历史/ // 本地/ 锦标赛/ 甚块/ 预测器/ ;/ TAGE/ // LOCAL/ _/ EXIT/ 为/ 基于/ 出口/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ ;/ PATH/ // LOCAL/ _/ TYPE/ 为/ 基于/ 类型/ 预测/ 的/ 地址/ 路径/ // 本地/ 锦标赛/ 甚块/ 预测器/ ;/ TAGE/ // LOCAL/ _/ TYPE/ 为/ 基于/ 类型/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ )/ 总体/ 来说/ ,/ 基于/ 类型/ 预测/ 的/ TAGE/ // 本地/ 预测器/ 在/ 资源/ 较/ 小时/ 效果/ 较/ 好/ ,/ 平均/ 将/ MPKI/ 降低/ 了/ 约/ 10/ %/ ./ 随着/ 资源/ 的/ 增大/ ,/ 基于/ 类型/ 预测/ 的/ TAGE/ // 本地/ 预测器/ 一直/ 保持/ 优势/ ./ 基于/ 出口/ 预测/ 的/ TAGE/ // 本地/ 甚块/ 预测器/ 仅/ 在/ 资源/ 大于/ 256KB/ 后/ 才能/ 达到/ 更/ 低/ 的/ MPKI/ ./ 而/ 1KB/ 到/ 64KB/ 之间/ 通常/ 是/ 处理器/ 能够/ 为/ 甚块/ 预测器/ 分配/ 硬件资源/ 的/ 合理/ 范围/ ,/ 因此/ ,/ 基于/ 类型/ 预测/ 的/ TAGE/ // 本地/ 预测器/ 在/ 较/ 低/ 资源/ 时/ 的/ 性能/ 领先/ 具有/ 较强/ 的/ 现实意义/ ./ 总而言之/ ,/ 上述/ 试验/ 结果/ 说明/ TAGE/ 技术/ 能够/ 提供/ 更好/ 的/ 甚块/ 出口/ 类型/ 预测/ 性能/ ,/ 从而/ 是/ 一种/ 较/ 好/ 的/ 、/ 适用/ 于/ 直接/ 预测/ 甚块/ 出口/ 类型/ 的/ 技术/ ./ 这/ 是因为/ TAGE/ 技术/ 能够/ 很/ 好/ 地/ 与/ 甚块/ 出口/ 类型/ 的/ 特性/ 相/ 契合/ ,/ 能/ 根据/ 甚块/ 出口/ 类型/ 特性/ 的/ 不同/ 选择/ 相应/ 的/ 条件/ 进行/ 预测/ ./ 上述/ 试验/ 结果/ 也/ 说明/ ,/ 相对/ 于/ 基于/ 出口/ 预测/ 的/ 甚块/ 预测器/ ,/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 能够/ 提供/ 更/ 低/ 的/ MPKI/ ,/ 从而/ 是/ 一种/ 更好/ 的/ 保证/ 处理器/ 甚块/ 控制流/ 推测/ 能力/ 的/ 方案/ ./ 7/ 结论/ 简而言之/ ,/ 本文/ 所/ 提出/ 的/ 直接/ 对/ 甚块/ 出口/ 类型/ 进行/ 预测/ 的/ 方案/ ,/ 简化/ 了/ 甚块/ 预测/ 步骤/ ,/ 提高/ 了/ 甚块/ 的/ 预测/ 能力/ ./ 值得注意/ 的/ 是/ ,/ 虽然/ 本文/ 以/ EDGE/ 体系结构/ 作为/ 研究/ ,/ 但/ 本文/ 对/ 甚块/ 出口/ 类型/ 的/ 分析/ 和/ 结论/ 对/ 其它/ 甚块/ 体系结构/ 中/ 的/ 甚块/ 预测器/ 设计/ 来说/ ,/ 同样/ 具有/ 指导/ 和/ 借鉴/ 意义/ ./ 本文/ 后续/ 的/ 研究/ 工作/ 包括/ :/ (/ 1/ )/ 进一步/ 探索/ 甚块/ 出口/ 类型/ 的/ 特性/ ,/ 开发/ 性能/ 更优/ 的/ 甚块/ 预测器/ ;/ (/ 2/ )/ 将/ 基于/ 类型/ 预测/ 的/ 甚块/ 预测器/ 应用/ 到/ 实际/ 的/ EDGE/ 处理器/ 设计/ 中/ ,/ 提升/ 处理器/ 的/ 总体/ 性能/ ;/ (/ 3/ )/ 将/ 本文/ 的/ 研究成果/ 扩展/ 到/ 其它/ 甚块/ 体系结构/ 中/ ,/ 为/ 设计/ 下一代/ 处理器/ 提供/ 新/ 的/ 思路/ ./ 

