Page1/ 一种/ 共享资源/ 敏感/ 的/ 实时/ 任务分配/ 算法/ 杨/ 茂林/ 雷航/ 廖勇/ (/ 电子科技/ 大学/ 信息/ 与/ 软件工程/ 学院/ 成都/ 611731/ )/ 摘要/ 为/ 提高/ 多/ 核实/ 时/ 系统/ 分组/ 固定/ 优先级/ 调度/ 策略/ 下/ 的/ 任务分配/ 效率/ ,/ 该文/ 对/ FIFO/ (/ FirstInFirstOut/ )/ 自旋/ 机制/ 下/ 任务/ 阻塞/ 时间/ ,/ 以及/ 自旋/ 等待/ 造成/ 的/ 可/ 调度/ 性/ 损失/ 进行/ 了/ 定量分析/ ,/ 提出/ 了/ 一种/ 新/ 的/ 任务/ 相关度/ 评价/ 方法/ 以/ 衡量/ 核间/ 任务/ 的/ 相关性/ ,/ 并/ 基于/ 该/ 方法/ 提出/ 了/ 共享资源/ 敏感/ 的/ 任务分配/ 算法/ ./ 该/ 算法/ 包含/ 任务/ 分组/ 策略/ 和/ 任务/ 组/ 拆分/ 策略/ ./ 任务/ 分组/ 策略/ 将/ 存在/ 共享资源/ 冲突/ 的/ 任务/ 划分/ 为/ 相关/ 任务/ 子集/ ,/ 尽可能/ 将/ 相关/ 任务/ 子集/ 分配/ 到/ 同一/ 核上/ ,/ 以/ 避免/ 核间/ 任务/ 相互/ 阻塞/ 造成/ 可/ 调度/ 性/ 损失/ ;/ 任务/ 组/ 拆分/ 策略/ 则/ 根据/ 任务/ 相关度/ 评价/ 结果/ ,/ 对/ 无法/ 分配/ 到/ 同一/ 核上/ 的/ 相关/ 任务/ 子集/ 进行/ 拆分/ ,/ 并/ 将/ 拆分/ 出/ 的/ 任务分配/ 到/ 当前/ 负载/ 最轻/ 的/ 核上/ ,/ 以/ 减小/ 自旋/ 造成/ 的/ 可/ 调度/ 性/ 损失/ ./ 实验/ 结果表明/ ,/ 该/ 算法/ 任务/ 集合/ 接受/ 率/ 高于/ 同类/ 算法/ ,/ 而/ 系统/ 自旋/ 损失/ 低于/ 同类/ 算法/ ./ 关键词/ 多核/ 处理器/ ;/ 实时/ 系统/ ;/ 实时/ 调度/ ;/ 任务分配/ 算法/ ;/ 自旋/ 机制/ 1/ 引言/ 为了/ 充分发挥/ 多核/ 处理器/ 的/ 计算能力/ ,/ 不同/ 核上/ 的/ 任务/ 需要/ 高度/ 的/ 并行执行/ ./ 为此/ ,/ 应/ 尽量/ 减小/ 分配/ 到/ 不同/ 核上/ 的/ 任务/ 之间/ 的/ 依赖性/ ,/ 减少/ 核间/ 任务/ 相互/ 阻塞/ 造成/ 的/ 系统资源/ 浪费/ ./ 多/ 核实/ 时/ 调度/ 一般/ 分为/ :/ (/ 1/ )/ 全局/ 调度/ (/ GlobalScheduling/ ,/ GS/ )/ ,/ 即/ 操作系统/ 仅/ 维护/ 一个/ 全局/ 就绪/ 任务/ 队列/ ,/ 动态/ 地/ 分配/ 就绪/ 任务/ 执行/ ,/ 允许/ 任务/ 在/ 不同/ 的/ 核间/ 迁移/ ;/ (/ 2/ )/ 分组/ 调度/ (/ PartitionedScheduling/ ,/ PS/ )/ ,/ 即/ 操作系统/ 为/ 每个/ 核/ 维护/ 一个/ 就绪/ 任务/ 队列/ ,/ 任务/ 被/ 分配/ 到/ 固定/ 的/ 核上/ 后/ ,/ 仅/ 在/ 该/ 核上/ 调度/ 执行/ 而/ 不/ 允许/ 在/ 核间/ 迁移/ ./ GS/ 调度/ 理论/ 上/ 可/ 使/ 系统/ 利用率/ 达到/ 100/ %/ ,/ 然而/ 实验/ 研究/ 显示/ [/ 1/ -/ 3/ ]/ 支持/ 全局/ 调度/ 的/ 调度/ 器/ 计算/ 开销/ 大/ ,/ 且/ 任务/ 频繁/ 迁移/ 可能/ 导致/ Cache/ 效率/ 严重/ 降低/ ./ 相反/ ,/ 分组/ 调度/ 的/ 系统/ 开销/ 小/ ,/ 但是/ 其/ 固有/ 的/ 任务分配/ 难题/ 使得/ 系统/ 的/ 理论/ 利用率/ 相对/ 较/ 低/ [/ 4/ ]/ ./ 为了/ 缓解/ 调度/ 开销/ 与/ 系统/ 利用率/ 的/ 矛盾/ ,/ 出现/ 了/ 将/ GS/ 与/ PS/ 相结合/ 的/ 半分/ 组/ 调度/ [/ 5/ ]/ 和/ 集群/ 调度/ (/ ClusteringScheduling/ ,/ CS/ )/ [/ 6/ ]/ ./ 其中/ 半分/ 组/ 调度/ 允许/ 一部分/ 任务/ 拆/ 分成/ 多个/ 子/ 任务/ ,/ 并/ 允许/ 子/ 任务/ 在/ 不同/ 核间/ 迁移/ ;/ 而/ CS/ 将/ 处理器/ 核/ 进行/ 分组/ ,/ 允许/ 任务/ 在/ 属于/ 同一/ 分组/ 的/ 不同/ 核间/ 迁移/ ./ Brandenburg/ [/ 2/ ]/ 在/ 实时操作系统/ 上/ 对/ 分组/ 调度/ ,/ 全局/ 调度/ ,/ 以及/ 集群/ 调度/ 进行/ 比较/ 研究/ 并/ 指出/ ,/ 分组/ 调度/ 是/ 最/ 适合/ 于强/ 实时/ 系统/ 的/ 调度/ 策略/ ./ 在/ PS/ 调度/ 下/ ,/ 任务分配/ 是/ NP/ -/ hard/ 问题/ ./ 早期/ 的/ 任务分配/ 算法/ 假设/ 任务/ 相互/ 独立/ ,/ 采用/ 类似/ 求解/ “/ 装箱/ 问题/ ”/ 的/ 启发式/ 算法/ 进行/ 任务分配/ ,/ 如/ First/ -/ Fit/ -/ Decreasing/ (/ FFD/ )/ 、/ Best/ -/ Fit/ -/ Decreasing/ (/ BFD/ )/ 、/ Worst/ -/ Fit/ -/ Decreasing/ (/ WFD/ )/ 以及/ Next/ -/ Fit/ (/ NF/ )/ 等/ ./ 这类/ 算法/ 实现/ 开销/ 小/ ,/ 但/ 忽略/ 了/ 任务/ 间/ 同步/ 互斥/ 的/ 约束/ ./ 在/ 任务/ 间/ 具有/ 前驱/ 后继/ 约束/ 的/ 任务模型/ 中/ ,/ 任务/ 集合/ 通常/ 抽象/ 为/ 有向图/ 或树/ [/ 7/ -/ 8/ ]/ ./ Liu/ 等/ 人/ [/ 7/ ]/ 根据/ 图论/ 算法/ 中/ 分枝/ 与/ 绑定/ 的/ 方法/ 约束/ 解/ 空间/ ,/ 提出/ 了/ 一种/ 基于/ 布尔/ 可/ 满足/ 性/ 的/ 最优化/ 任务分配/ 算法/ ;/ Stavrinides/ 等/ 人/ [/ 8/ ]/ 结合/ 非/ 精确/ 计算/ 模型/ 和/ 装箱/ 算法/ ,/ 提出/ 了/ 基于/ 任务/ 复制/ 的/ 实时/ 调度/ 机制/ ./ 然而/ 这些/ 算法/ 均/ 没有/ 考虑/ 任务/ 互斥/ 访问共享/ 资源/ 的/ 情况/ ,/ 因此/ 忽略/ 了/ 任务/ 间/ 相互/ 阻塞/ 造成/ 的/ 调度/ 开销/ ./ 由于/ 任务/ 通常/ 需要/ 互斥/ 访问/ 共享内存/ ,/ 关键/ 数据/ 等/ 软硬件/ 资源/ ,/ 当某/ 任务/ 请求/ 访问/ 当前/ 被/ 其他/ 核上/ 的/ 任务/ 锁定/ 的/ 共享资源/ 时/ ,/ 将/ 被/ 阻塞/ 而/ 挂/ 起/ 或/ 循环/ 等待/ (/ 自旋/ )/ ./ Ras/ 等/ 人/ [/ 9/ ]/ 指出/ ,/ 与/ 挂/ 起/ 机制/ 相比/ ,/ 自旋/ 机制/ 实现/ 简单/ ,/ 任务/ 切换/ 次数/ 少/ ,/ 但/ 可能/ 造成/ 较大/ 的/ 处理器/ 时间/ 浪费/ ./ 由于/ 实时/ 系统/ 必须/ 确保/ 任务/ 最坏/ 情况/ 响应/ 时间/ 小于/ 任务/ 截止/ 时限/ ,/ 因此/ 更/ 关注/ 任务/ 被/ 阻塞/ 的/ 最长/ 时间/ ./ 文献/ [/ 10/ ]/ 分析/ 了/ 基于/ 优先级/ 等待/ 的/ 挂/ 起/ 机制/ 下/ ,/ 任务/ 最坏/ 阻塞/ 时间/ 与/ 响应/ 时间/ ./ 分析表明/ ,/ 挂/ 起/ 机制/ 下/ 任务/ 抢占/ 关系/ 变得/ 更加/ 复杂/ ,/ 任务/ 最长/ 阻塞/ 时间/ 的/ 估算/ 也/ 更加/ 保守/ ,/ 从而/ 使得/ 挂/ 起/ 机制/ 节约/ 处理器/ 时间/ 的/ 优势/ 减弱/ ./ 当/ 任务/ 频繁/ 被/ 其他/ 核上/ 的/ 任务/ 阻塞/ 时/ ,/ 系统/ 利用率/ 可能/ 急剧/ 降低/ ,/ 甚至/ 形成/ 系统/ 瓶颈/ [/ 11/ -/ 13/ ]/ ./ 为此/ ,/ Lakshmanan/ 等/ 人/ [/ 11/ ]/ 提出/ 将/ 访问/ 相同/ 共享资源/ 的/ 任务分配/ 到/ 同一/ 核上/ ,/ 并/ 结合/ BFD/ 提出/ 了/ 任务/ 同步/ 敏感/ 的/ 任务/ 组合/ 分配/ 策略/ ./ Nemati/ 等/ 人/ [/ 12/ ]/ 基于/ 任务/ 阻塞/ 时间/ 和/ Cache/ 亲和性/ 等/ 因素/ ,/ 提出/ 将/ 任务/ 相关性/ 大/ 的/ 任务/ 进行/ 分组/ 并/ 分配/ 到/ 同一/ 核上/ 的/ 分配/ 策略/ ./ 最近/ ,/ Han/ 等/ 人/ [/ 13/ ]/ 基于/ PS/ 和/ MSRP/ [/ 14/ ]/ 协议/ 提出/ 了/ 同步/ 敏感/ 的/ 能耗/ 与/ 松弛/ 度/ 管理机制/ ,/ 尽量/ 将/ 访问/ 相似/ 共享资源/ 的/ 任务分配/ 到/ 同一/ 核上/ ./ 然而/ 以上/ 算法/ 并/ 没有/ 对/ 任务/ 阻塞/ 造成/ 的/ 调度/ 开销/ 以及/ 任务/ 分组/ 尺度/ 进行/ 定量分析/ ,/ 也/ 没有/ 解决/ 如何/ 对/ 任务/ 分组/ 进行/ 适当/ 拆分/ 和/ 再/ 分配/ 的/ 问题/ ./ Bin/ 等/ 人/ [/ 15/ ]/ 提出/ 一种/ 分组/ 适度/ 算法/ ,/ 优先/ 对/ 可以/ 访问共享/ 资源/ 的/ 任务/ 进行/ 分组/ ,/ 当/ 任务/ 不/ 访问/ 资源/ 时/ 选择/ 最早/ 可用/ 时间/ 最小/ 的/ 处理器/ 进行/ 任务分配/ ./ 然而/ 该/ 算法/ 仅/ 适用/ 于/ 非/ 周期/ 任务/ 的/ 非/ 抢占/ 式调度/ ,/ 且/ 需要/ 在线/ 估计/ 处理器/ 及/ 共享资源/ 的/ 最早/ 可用/ 时间/ ,/ 因此/ 需要/ 较大/ 的/ 计算/ 开销/ ./ 为了/ 减少/ 分组/ 固定/ 优先级/ 调度/ 策略/ 下/ 核间/ 任务/ 相互/ 阻塞/ 造成/ 的/ 调度/ 开销/ ,/ 提高/ 系统/ 可/ 调度/ 性/ (/ Schedulability/ )/ ,/ 本文/ 针对/ 具有/ 互斥/ 访问共享/ 资源/ 约束/ 的/ 实时/ 周期/ 任务模型/ ,/ 对/ MSRP/ 协议/ 机制/ 下/ 核间/ 任务/ 阻塞/ 时间/ ,/ 以及/ 自旋/ 造成/ 的/ 系统资源/ 浪费/ 进行/ 了/ 定量分析/ ;/ 提出/ 了/ 任务/ 相关度/ 评价/ 方法/ ,/ 以及/ 共享资源/ 敏感/ 的/ 多/ 核实/ 时/ 任务分配/ 算法/ ./ 该/ 算法/ 将/ 访问/ 相同/ 共享资源/ 的/ 任务/ 划分/ 为/ 任务/ 子集/ (/ 以下/ 称为/ 相关/ 任务/ 子集/ )/ ,/ 将/ 同一/ 相关/ 任务/ 子/ 集中/ 的/ 任务分配/ 到/ 相同/ 核上/ ,/ 以/ 避免/ 核间/ 任务/ 阻塞/ ;/ 当/ 同一/ 相关/ 任务/ 子/ 集中/ 的/ 任务/ 无法/ 分配/ 到/ 相同/ 核上/ 时/ ,/ 根据/ 任务/ 相关度/ 评价/ 方法/ 对/ 相关/ 任务/ 子集/ 进行/ 拆分/ ,/ 以/ 减少/ 核间/ 任务/ 阻塞/ 对系统/ 利用率/ 的/ 影响/ ./ 最后/ ,/ 通过/ 实验/ 评估/ 验证/ 了/ 该/ 算法/ 的/ 优越性/ ./ 本文/ 第/ 2/ 节/ 介绍/ 系统/ 模型/ ;/ 第/ 3/ 节对/ MSRP/ 协议/ 机制/ 下/ 任务/ 阻塞/ 时间/ 进行/ 分析/ ;/ 第/ 4/ 节/ 详细/ 介绍/ Page3/ 任务/ 相关度/ 评价/ 方法/ 以及/ 共享资源/ 敏感/ 的/ 任务分配/ 算法/ ;/ 第/ 5/ 节对/ 所/ 提/ 算法/ 与/ 类似/ 算法/ 进行/ 性能/ 比较/ 分析/ ;/ 第/ 6/ 节对/ 全文/ 作/ 简要/ 总结/ ./ 2/ 系统/ 模型/ 周期/ 任务/ (/ Task/ )/ i/ 表示/ 为/ 三元组/ τ/ i/ =/ (/ Ti/ ,/ Ci/ ,/ π/ i/ )/ ,/ Ti/ 为/ 任务/ 周期/ ,/ Ci/ 为/ 任务/ 最坏/ 执行/ 时间/ ,/ π/ i/ 为/ 任务/ 优先级/ (/ π/ i/ 数值/ 越大/ 表示/ 优先级/ 越高/ )/ ./ 任务/ 优先级/ 固定/ 且/ 互不/ 相同/ ,/ 任务/ 间/ 无/ 前驱/ 后继/ 关系/ ./ τ/ i/ 在/ 每个/ 周期/ 开始/ 时/ 就绪/ ,/ 无/ 释放/ 抖动/ (/ ReleaseJitter/ )/ ,/ τ/ i/ 的/ 一次/ 执行/ 称为/ 一个/ 任务/ 实例/ (/ Instance/ 或/ Job/ )/ ,/ 表示/ 为/ Ji/ ./ 任务/ 相对/ 截止/ 时限/ 等于/ 任务/ 周期/ (/ ImplicitDeadline/ )/ ./ 定义/ 1/ ./ τ/ i/ 的/ CPU/ 利用率/ (/ ui/ )/ 为/ τ/ i/ 的/ 最坏/ 执行/ 时间/ 与/ 任务/ 周期/ 的/ 比值/ ,/ 即/ ui/ =/ Ci/ // Ti/ ./ 周期/ 任务/ 集合/ Γ/ =/ {/ τ/ 1/ ,/ τ/ 2/ ,/ …/ ,/ τ/ n/ }/ 在/ 由/ m/ 个/ 核/ 组成/ 的/ 同构/ (/ Homogeneous/ )/ 多核/ 处理器/ P/ =/ {/ p1/ ,/ p2/ ,/ …/ ,/ pm/ }/ 上/ 执行/ ./ p/ (/ τ/ i/ )/ 表示/ τ/ i/ 所在/ 的/ 核/ ,/ τ/ (/ pk/ )/ 表示/ 分配/ 到/ 核/ pk/ 上/ 的/ 任务/ 集合/ ./ 系统/ 中有/ q/ 个/ 共享资源/ Φ/ =/ {/ ρ/ 1/ ,/ ρ/ 2/ ,/ …/ ,/ ρ/ q/ }/ ,/ Θ/ i/ ∈/ Φ/ 表示/ τ/ i/ 所需/ 访问/ 的/ 共享资源/ 集合/ ,/ τ/ i/ 必须/ 互斥/ 访问/ / ρ/ s/ ∈/ Θ/ i/ ./ 若/ ρ/ s/ 仅/ 被/ 分配/ 到/ 同一/ 核上/ 的/ 任务/ 访问/ ,/ 则/ 称为/ 局部/ 资源/ ,/ 否则/ 称为/ 全局/ 资源/ ./ Ф/ 中/ 局部/ 资源/ 集合/ 表示/ 为/ Ф/ L/ ,/ 全局/ 资源/ 集合/ 表示/ 为/ Φ/ G/ ./ 任务/ 请求/ 共享资源/ 的/ 规则/ 符合/ MSRP/ [/ 14/ ]/ 协议/ ,/ 其中/ 全局/ 资源/ 请求/ 不可/ 互相/ 嵌套/ ./ 当/ τ/ i/ ∈/ Γ/ 与/ 其他/ 所有/ 任务/ 都/ 不/ 访问/ 相同/ 共享资源/ 时/ ,/ 称/ τ/ i/ 为/ 独立/ 任务/ ,/ Γ/ 中/ 所有/ 独立/ 任务/ 组成/ 的/ 任务/ 子集/ 表示/ 为/ Γ/ ./ 3/ 核间/ 任务/ 阻塞/ 分析/ 分组/ 固定/ 优先级/ 调度/ 策略/ 下/ ,/ 分配/ 到/ 不同/ 核上/ 的/ 任务/ 按照/ 单/ 处理器/ 调度/ 算法/ 调度/ 执行/ ./ 当某/ 任务/ 请求/ 访问/ 已/ 被/ 其他/ 核上/ 的/ 任务/ 锁定/ 的/ 全局/ 资源/ 时/ ,/ 该/ 任务/ 将/ 被/ 阻塞/ ./ 根据/ MSRP/ [/ 14/ ]/ 协议/ ,/ 任务/ 自旋/ 等待/ 全局/ 资源/ ./ 当/ 多个/ 任务/ 等待/ 同一/ 全局/ 资源/ 时/ ,/ 为了/ 避免/ 任务/ 饿死/ ,/ MSRP/ 中/ 采用/ 了/ FIFO/ 排队/ 的/ 机制/ ./ 下文/ 将/ 这种/ 机制/ 简称/ 为/ FIFO/ 自旋/ ./ 自旋/ 机制/ 下/ ,/ 被/ 阻塞/ 任务/ 所在/ 核/ 逻辑/ 上/ 处于/ 空闲/ 状态/ ,/ 因此/ 造成/ 了/ 系统资源/ 浪费/ ,/ 影响/ 了/ 系统/ 可/ 调度/ 性/ ./ 引理/ 1/ ./ 若/ τ/ j/ 访问/ 一次/ 全局/ 资源/ ρ/ s/ 的/ 最长/ 时间/ 为/ ξ/ j/ ,/ s/ ,/ 则/ 任意/ τ/ i/ ∈/ pk/ 请求/ 访问/ ρ/ s/ 而/ 等待/ 的/ 最长/ 时间/ 为/ 证明/ ./ FIFO/ 自旋/ 机制/ 下/ ,/ τ/ i/ 等待/ 全局/ 资源/ ρ/ s/ 期间/ 不/ 可能/ 被/ 其他/ 任务/ 抢占/ ,/ 其/ 等待时间/ 仅/ 取决于/ ρ/ s/ 的/ FIFO/ 等待/ 队列/ 中排/ 在/ τ/ i/ 前面/ 的/ 任务/ 访问/ ρ/ s/ 的/ 时间/ ./ 当/ τ/ i/ 请求/ ρ/ s/ 时/ ,/ 若/ 其他/ 所有/ 核上/ 访问/ ρ/ s/ 时间/ 最长/ 的/ 任务/ 也/ 恰好/ 请求/ 访问/ ρ/ s/ ,/ 且/ τ/ i/ 插入/ 到/ FIFO/ 队列/ 的/ 队尾时/ ,/ τ/ i/ 将/ 等待/ 这些/ 任务/ 依次/ 释放/ ρ/ s/ 后/ 才能/ 访问/ ρ/ s/ ,/ 其/ 等待时间/ 达到/ 最大值/ ,/ 如/ 等式/ (/ 1/ )/ 所示/ ./ 定义/ 2/ ./ 核/ pk/ 的/ 自旋/ 损失/ (/ Sk/ )/ 为/ 该/ 核上/ 所有/ 任务/ 在/ tLCM/ 时间/ 内/ 自旋/ 等待/ 的/ 最长/ 时间/ 之/ 和/ 与/ tLCM/ 之比/ ./ 其中/ ,/ tLCM/ 为/ 该/ 核上/ 所有/ 任务/ 的/ 周期/ 最小/ 公倍数/ ./ 由于/ 不同/ 核上/ 的/ 任务/ 并行执行/ ,/ τ/ i/ 每次/ 请求/ 访问/ 全局/ 资源/ ρ/ s/ 时/ 都/ 可能/ 插入/ 到/ 相应/ FIFO/ 队列/ 的/ 队尾/ ,/ 使得/ 其/ 等待时间/ 达到/ 最大值/ Wk/ ,/ s/ (/ 引理/ 1/ )/ ./ 当/ τ/ i/ 的/ 任务/ 实例/ 多次/ 访问共享/ 资源/ 时/ ,/ 其/ 自旋/ 等待/ 全局/ 资源/ 的/ 最长/ 时间/ 之/ 和/ 为/ ε/ i/ =/ ∑/ / ρ/ s/ ∈/ Θ/ i/ ∩/ Φ/ G/ τ/ i/ 的/ 一个/ 任务/ 实例/ 访问/ 全局/ 资源/ ρ/ s/ 的/ 次数/ )/ ./ 由此可知/ ,/ 核/ pk/ 在/ Ti/ 时间/ 内会/ 因/ τ/ i/ 自旋/ 等待/ 而/ 浪费/ ε/ i/ 个/ 时间/ 单位/ ./ 此外/ ,/ 核/ pk/ 上/ 所有/ 任务/ 在/ tLCM/ 时间/ 内/ 都/ 恰好/ 经历/ 一定/ 个数/ 的/ 完整/ 周期/ ,/ 所以/ Sk/ 反映/ 了/ 核/ pk/ 上/ 所有/ 任务/ 自旋/ 等待/ 而/ 对系统/ 利用率/ 造成/ 的/ 最大/ 累计/ 浪费/ ./ 为了/ 满足/ 实时/ 系统/ 的/ 可/ 调度/ 性/ ,/ 通常/ 需要/ 预留/ 一定/ 的/ 处理器/ 资源/ 以/ 确保/ 系统/ 在/ 最坏/ 情况/ 下/ 仍/ 能/ 满足/ 实时/ 任务/ 的/ 截止/ 时限/ 要求/ ,/ 引起/ 系统/ 可/ 调度/ 性/ 损失/ ./ 其中/ ,/ 自旋/ 损失/ 正好/ 刻画/ 了/ 最坏/ 情况/ 下/ 任务/ 自旋/ 等待/ 所/ 造成/ 的/ 可/ 调度/ 性/ 损失/ ,/ 因此/ 降低/ 自旋/ 损失/ 可/ 减小/ 系统资源/ 浪费/ ,/ 提高/ 系统/ 利用率/ ./ 失/ 等于/ τ/ i/ 对核/ pk/ 造成/ 的/ 自旋/ 损失/ Sk/ (/ i/ )/ ,/ 其中/ 定理/ 1/ ./ 调度/ τ/ i/ ∈/ pk/ 引起/ 的/ 系统/ 可/ 调度/ 性损/ 证明/ ./ 因为/ tLCM/ 为/ / τ/ i/ ∈/ τ/ (/ pk/ )/ 的/ 周期/ 最小/ 公倍数/ ,/ 所以/ τ/ i/ 在/ tLCM/ 时间/ 内/ 恰好/ 执行/ tLCM/ // Ti/ 次/ ./ 根据/ 定义/ 2/ 可知/ 任意/ τ/ i/ ∈/ pk/ 对/ 其/ 所在/ 核/ 造成/ 的/ 自旋/ 损失/ 为/ (/ tLCM/ // Ti/ )/ ·/ ∑/ / ρ/ s/ ∈/ Θ/ i/ ∩/ Φ/ G/ 由于/ 任务/ 自旋/ 等待/ 期间/ 独占/ 处理器/ 资源/ ,/ 因此/ 若/ 将/ 任/ Page4/ 务/ 自旋/ 等待时间/ 视为/ 任务/ 执行/ 时间/ ,/ 则/ 自旋/ 等待/ 所/ 占用/ 的/ CPU/ 利用率/ 为/ Sk/ (/ i/ )/ (/ 根据/ 定义/ 1/ )/ ./ 可见/ 调度/ τ/ i/ ∈/ pk/ 引起/ 的/ 系统/ 利用率/ 损失/ 恰好/ 等于/ Sk/ (/ i/ )/ ./ 证毕/ ./ 4/ 共享资源/ 敏感/ 的/ 任务分配/ 算法/ 为了/ 避免/ 或/ 减少/ FIFO/ 自旋/ 机制/ 下/ 核间/ 任务/ 阻塞/ 造成/ 的/ 系统资源/ 浪费/ ,/ 本文/ 提出/ 了/ 共享资源/ 敏感/ 的/ 任务分配/ 算法/ ./ 该/ 算法/ 包含/ 两种/ 策略/ :/ (/ 1/ )/ 任务/ 分组/ 策略/ ,/ 即将/ 存在/ 共享资源/ 冲突/ 的/ 任务/ 划分/ 为/ 相关/ 任务/ 子集/ ,/ 将/ 同一/ 相关/ 任务/ 子/ 集中/ 的/ 任务分配/ 到/ 相同/ 核上/ ;/ (/ 2/ )/ 任务/ 组/ 拆分/ 策略/ ,/ 即当/ 某些/ 相关/ 任务/ 子集/ 无法/ 分配/ 到/ 相同/ 核上/ 时/ ,/ 对/ 相关/ 任务/ 子集/ 进行/ 拆分/ ,/ 以/ 调整/ 任务分配/ ./ 为了/ 进行/ 相关/ 任务/ 子集/ 拆分/ ,/ 本文/ 提出/ 了/ 任务/ 相关度/ 评价/ 方法/ ,/ 将/ 任务/ 相关度/ 小/ 的/ 任务/ 从/ 相关/ 任务/ 子/ 集中/ 拆分/ 出/ ,/ 以/ 减小/ 分配/ 到/ 不同/ 核上/ 的/ 任务/ 间/ 的/ 依赖性/ ,/ 从而/ 减小/ 核间/ 任务/ 阻塞/ 造成/ 的/ 可/ 调度/ 性/ 损失/ ./ 本节/ 首先/ 介绍/ 任务/ 分组/ 策略/ ,/ 然后/ 介绍/ 任务/ 相关度/ 评价/ 方法/ ,/ 随后/ 给出/ 任务/ 组/ 拆分/ 策略/ ,/ 最后/ 给出/ 算法/ 整体/ 描述/ 与/ 算法/ 复杂度/ 分析/ ./ 4.1/ 任务/ 分组/ 策略/ 若/ 存在/ 一种/ 任务分配/ 结果/ ,/ 使得/ 不同/ 核上/ 的/ 任务/ 不/ 访问/ 相同/ 共享资源/ ,/ 则/ 各核/ 上/ 的/ 任务/ 子集/ 相互/ 独立/ ./ 从而/ ,/ 可/ 避免/ 核间/ 任务/ 自旋/ 等待/ 共享资源/ 所/ 造成/ 的/ 系统资源/ 浪费/ ./ 为此/ ,/ 提出/ 了/ 任务/ 分组/ 策略/ :/ 将/ Γ/ 中/ 所有/ 存在/ 共享资源/ 冲突/ 的/ 任务/ 划分/ 为/ 一个/ 相关/ 任务/ 子集/ ,/ 并/ 将/ 同一/ 相关/ 任务/ 子/ 集中/ 的/ 任务分配/ 到/ 相同/ 核上/ ./ 其中/ ,/ 若/ 任意/ 两个/ 任务/ τ/ 1/ 与/ τ/ 2/ 访问/ 资源/ ρ/ 1/ ,/ 而/ τ/ 2/ 与/ τ/ 3/ 访问/ 资源/ ρ/ 2/ ,/ 则/ 这/ 3/ 个/ 任务/ 将/ 划分/ 到/ 同一/ 相关/ 任务/ 子/ 集中/ ,/ 如图/ 1/ 中/ 相关/ 任务/ 子集/ 1/ 所示/ ./ 任务/ 分组/ 策略/ 将/ Γ/ 从/ 逻辑/ 上/ 被/ 划分/ 为/ 一系列/ 相关/ 任务/ 子集/ 和/ 一个/ 独立/ 任务/ 子集/ ./ 将/ 同一/ 相关/ 任务/ 子/ 集中/ 的/ 任务分配/ 到/ 同一/ 核上/ ,/ 则/ 可/ 避免/ 核间/ 任务/ 阻塞/ ./ 由于/ / τ/ i/ ∈/ Γ/ 为/ 独立/ 任务/ ,/ 因此/ 将/ Γ/ 中/ 的/ 任务分配/ 到/ 任意/ 核上/ 都/ 不会/ 引起/ 核间/ 任务/ 阻塞/ ./ 通过/ 如下/ 的/ 递归/ 算法/ 可/ 实现/ 任务/ 分组/ ./ 算法/ 1/ ./ 任务/ 分组/ 算法/ ./ 输入/ :/ Γ/ =/ {/ τ/ 1/ ,/ τ/ 2/ ,/ …/ ,/ τ/ n/ }/ 输出/ :/ 一系列/ 相关/ 任务/ 子集/ 1/ ./ / τ/ i/ ./ link/ ←/ NONE/ // // 标识/ τ/ i/ 属于/ 某/ 相关/ 任务/ 子集/ 2/ ./ / τ/ i/ ./ indep/ ←/ TRUE/ // // 标识/ τ/ i/ 是否/ 为/ 独立/ 任务/ 3/ ./ DefineIterative/ (/ τ/ i/ )/ // // 定义/ 递归函数/ 用于/ 子集/ 划分/ 4/ ./ FORj/ =/ 1/ :/ n5/ ./ IF/ (/ τ/ j/ ./ linkisNONE/ )/ 6/ ./ τ/ i/ ./ indep/ ←/ FALSE/ ∧/ τ/ j/ ./ indep/ ←/ FALSE7/ ./ τ/ j/ ./ link/ ←/ τ/ i/ ./ link8/ ./ Iterative/ (/ τ/ j/ )/ 9/ ./ EndDefine10/ ./ FORi/ =/ 1/ :/ n11/ ./ IF/ τ/ i/ ./ linkisNONE12/ ./ τ/ i/ ./ link/ ←/ i13/ ./ Iterative/ (/ τ/ i/ )/ 14/ ./ FORi/ =/ 1/ :/ n15/ ./ IF/ τ/ i/ ./ indepisTRUE/ // // 该/ 任务/ 为/ 独立/ 任务/ 16/ ./ Γ/ ←/ τ/ i/ // // 独立/ 任务/ τ/ i/ 的/ ./ link/ 值为/ i17/ ./ ELSEIF/ τ/ i/ / anySub/ -/ task/ -/ set18/ ./ Γ/ —/ ←/ Create/ _/ Sub/ _/ Set19/ ./ FORj/ =/ 1/ :/ n20/ ./ IF/ τ/ j/ ./ linkisthesameas/ τ/ i/ ./ link21/ ./ Γ/ —/ ←/ τ/ j/ // // τ/ j/ 与/ τ/ i/ 属于/ 同一/ 子集/ 该/ 算法/ 的/ 基本/ 思想/ 如下/ :/ (/ 1/ )/ 假设/ 所有/ 任务/ 的/ 初始状态/ 为/ 独立/ (/ ./ indep/ ←/ TRUE/ )/ 和/ 无/ 分组/ (/ ./ link/ ←/ NONE/ )/ ./ (/ 2/ )/ 若/ 所有/ 任务/ 的/ ./ link/ 均/ 不/ 为/ NONE/ ,/ 则/ 算法/ 结束/ ;/ 否则/ ,/ 选择/ 某个/ 未/ 经过/ 分组/ 的/ 任务/ τ/ i/ (/ τ/ i/ ./ linkisNONE/ )/ ,/ 修改/ 其/ 分组/ 状态/ τ/ i/ ./ link/ ←/ i/ ,/ 并/ 依此/ 判断/ τ/ i/ 是否/ 与/ 其他/ 任务/ 访问/ 相同/ 共享资源/ ./ (/ 3/ )/ 若/ τ/ i/ 与/ 其他/ 某个/ 任务/ τ/ j/ 访问/ 相同/ 共享资源/ ,/ 则/ 同时/ 将/ 这/ 两个/ 任务/ 的/ 状态/ ./ indep/ 置/ 为/ FALSE/ ,/ 将/ τ/ j/ 的/ 分组/ 状态/ 置/ 为/ τ/ i/ ./ link/ ,/ 并/ 将/ τ/ i/ ,/ τ/ j/ 划分/ 到/ 同一/ 相关/ 任务/ 子/ 集中/ ;/ 然后/ 以/ 递归/ 方式/ 从/ τ/ j/ 开始/ 重复/ 该/ 步骤/ ./ (/ 4/ )/ 判断/ τ/ i/ 与/ 后续/ 任务/ 是否/ 访问/ 相同/ 共享资源/ ,/ 若/ 访问/ 相同/ 共享资源/ 则/ 跳/ 到/ 步/ (/ 3/ )/ ;/ 否则/ 跳至步/ (/ 2/ )/ ./ 以上/ 步骤/ 结束/ 后/ ,/ 所有/ ./ indep/ 为/ TRUE/ 的/ 任务/ 为/ 独立/ 任务/ ,/ 这些/ 任务/ 组成/ 独立/ 任务/ 子集/ Γ/ 而/ 所有/ ./ link/ 值/ 相同/ 的/ 任务/ 划分/ 到/ 同一/ 相关/ 任务/ 子/ 集中/ ./ 从而/ 得到/ 一系列/ 相关/ 任务/ 子集/ ./ 4.2/ 任务/ 相关度/ 评价/ 方法/ 尽管/ 任务/ 分组/ 策略/ 可以/ 从/ 理论/ 上/ 避免/ 核间/ 任务/ Page5/ 阻塞/ ,/ 然而/ 当/ 算法/ 1/ 所得/ 的/ 某些/ 相关/ 任务/ 子集/ 无法/ 整体/ 分配/ 到/ 同一/ 核上/ 时/ ,/ 需要/ 将/ 这些/ 相关/ 任务/ 子/ 集中/ 的/ 任务分配/ 到/ 两个/ 或/ 多个/ 核上/ ./ 当/ 相关/ 任务/ 子/ 集中/ 访问/ 相同/ 共享资源/ 的/ 任务分配/ 到/ 不同/ 核上/ 时/ ,/ 将会/ 引起/ 核间/ 任务/ 阻塞/ ,/ 从而/ 造成/ 自旋/ 损失/ ./ 本/ 小节/ 提出/ 任务/ 相关度/ 评价/ 方法/ ,/ 以/ 衡量/ 相关/ 任务/ 子/ 集中/ 不同/ 任务/ 间/ 的/ 相关度/ 大小/ ./ 失/ 等于/ τ/ i/ 与/ τ/ j/ 分别/ 对/ pk/ 造成/ 的/ 自旋/ 损失/ 之/ 和/ 引理/ 2/ ./ 任意/ τ/ i/ ,/ τ/ j/ ∈/ τ/ (/ pk/ )/ 对/ pk/ 造成/ 的/ 自旋/ 损/ 证明/ ./ 不失/ 一般性/ ,/ 设/ 任意/ τ/ i/ ∈/ τ/ (/ pk/ )/ 的/ 每个/ 实例/ 等待/ 访问/ 所有/ 全局/ 资源/ 的/ 最大/ 时间/ 为/ bi/ ./ 根据/ 定理/ 1/ ,/ τ/ i/ 对核/ pk/ 造成/ 的/ 最大/ 自旋/ 损失/ 为/ bi/ // Ti/ ./ 又/ 根据/ 定义/ 2/ 可知/ ,/ Sk/ (/ i/ +/ j/ )/ =/ bi/ // Ti/ +/ bj/ // Tj/ ,/ 即/ Sk/ (/ i/ +/ j/ )/ =/ Sk/ (/ i/ )/ +/ Sk/ (/ j/ )/ ./ 证毕/ ./ 将/ x/ (/ 1/ / x/ / n/ )/ 个/ 任务/ 访问/ 所有/ 共享资源/ 的/ 最长/ 时间/ 用/ x/ ×/ q/ (/ q/ 为/ 共享资源/ 数/ )/ 阶/ 矩阵/ 犝/ x/ ×/ q/ 表示/ ./ 其中/ ,/ 任意/ 元素/ ui/ ,/ s/ 表示/ x/ 个/ 任务/ 中/ 的/ 第/ i/ 个/ 任务/ (/ 设/ 为/ τ/ c/ )/ 访问共享/ 资源/ ρ/ s/ 的/ 最长/ 时间/ ,/ 即/ ui/ ,/ s/ =/ ξ/ c/ ,/ s/ (/ 引理/ 1/ )/ ./ 若/ ui/ ,/ s/ =/ 0/ ,/ 则/ 表示/ τ/ c/ 没有/ 访问共享/ 资源/ ρ/ s/ ./ 定理/ 2/ ./ 设/ Γ/ —/ =/ {/ τ/ a/ ,/ τ/ b/ ,/ …/ ,/ τ/ z/ }/ (/ x/ =/ |/ Γ/ —/ |/ / n/ )/ 为/ 算法/ 1/ 得到/ 的/ 相关/ 任务/ 子集/ ,/ 用/ x/ ×/ q/ (/ q/ 为/ 共享资源/ 数/ )/ 阶/ 矩阵/ 犝/ x/ ×/ q/ 表示/ Γ/ —/ 访问共享/ 资源/ 的/ 时间/ ./ 若/ 将/ 任意/ τ/ i/ (/ 设/ 为/ 矩阵/ 犝/ x/ ×/ q/ 第/ c/ 行/ 对应/ 任务/ )/ 从/ Γ/ —/ 中/ 拆分/ 出/ 并/ 分配/ 到/ 核/ pr/ 上/ ,/ 而/ Γ/ —/ 中/ 其余/ 任务分配/ 到/ 核/ pk/ 上/ (/ r/ ≠/ k/ )/ ,/ 则/ Γ/ —/ 中/ 其余/ 任务/ 对核/ pk/ 造成/ 的/ 自旋/ 损失/ 为/ 其中/ ,/ Γ/ —/ i/ =/ Γ/ —/ —/ {/ τ/ i/ }/ ;/ f/ (/ d/ )/ 为/ 矩阵/ 犝/ x/ ×/ q/ 第/ d/ 行/ 对应/ 的/ 任务/ 序号/ ./ 证明/ ./ 根据/ 算法/ 1/ ,/ τ/ i/ 只/ 可能/ 与/ 某些/ τ/ j/ ∈/ Γ/ —/ i/ 访问/ 相同/ 共享资源/ ./ 因此/ ,/ / τ/ j/ ∈/ Γ/ —/ i/ 只/ 可能/ 由于/ 自旋/ 等待/ τ/ i/ ./ 当/ uc/ ,/ s/ ×/ ud/ ,/ s/ ≠/ 0/ ,/ 则/ uc/ ,/ s/ ≠/ 0/ 且/ ud/ ,/ s/ ≠/ 0/ ./ 此时/ τ/ i/ 与/ 矩阵/ 犝/ x/ ×/ q/ 第/ d/ 行所/ 对应/ 任务/ τ/ f/ (/ d/ )/ 都/ 会/ 访问共享/ 资源/ ρ/ s/ ./ 由于/ 任务/ τ/ i/ 与/ τ/ f/ (/ d/ )/ 在/ 不同/ 核上/ 并行执行/ ,/ 因此/ τ/ f/ (/ d/ )/ 每次/ (/ 一个/ 实例/ 需/ 访问/ nf/ (/ d/ )/ ,/ s/ 次/ )/ 请求/ 访问/ ρ/ s/ 都/ 可能/ 自旋/ 等待/ τ/ i/ 访问/ ρ/ s/ 的/ 最长/ 时间/ ξ/ i/ ,/ s/ (/ 等于/ uc/ ,/ s/ )/ ./ 由此可知/ ,/ τ/ f/ (/ d/ )/ 的/ 一个/ 实例/ 需/ 等待/ 全局/ 资源/ ρ/ s/ 的/ 最长/ 时间/ 为/ α/ c/ ,/ d/ ,/ s/ =/ uc/ ,/ s/ ×/ nf/ (/ d/ )/ ,/ s/ ./ 对/ α/ c/ ,/ d/ ,/ s/ 进行/ 累加/ 可/ 得/ τ/ f/ (/ d/ )/ 的/ 每个/ 实例/ 自旋/ 等待/ 的/ 时间/ 总和/ ∑/ q/ 可知/ ,/ τ/ f/ (/ d/ )/ 造成/ 的/ 自旋/ 损失/ 为/ Sk/ (/ f/ (/ d/ )/ )/ =/ ∑/ q/ 又/ 根据/ 引理/ 2/ 可知/ ,/ Sk/ (/ Γ/ —/ i/ )/ =/ ∑/ d/ ∈/ [/ 1/ ,/ x/ ]/ ∧/ d/ ≠/ c/ 定理/ 2/ 描述/ 的/ 自旋/ 损失/ 是/ 由/ Γ/ —/ 中/ 与/ τ/ i/ 访问/ 相同/ 共享资源/ 的/ 任务/ 引起/ 的/ ./ 因此/ ,/ Sk/ (/ Γ/ —/ i/ )/ 从/ 自旋/ 损失/ 的/ 角度/ 定量/ 描述/ 了/ τ/ i/ 与/ Γ/ —/ 中/ 其余/ 任务/ 的/ 一种/ 相关/ 关系/ ./ 本文/ 将/ Sk/ (/ Γ/ —/ i/ )/ 作为/ 衡量/ Γ/ —/ 中/ τ/ i/ 与/ 其余/ 任务/ 的/ 相关度/ 评价/ 指标/ ./ 4.3/ 任务/ 组/ 拆分/ 策略/ 根据/ 定理/ 2/ ,/ 将/ Sk/ (/ Γ/ —/ i/ )/ 最小/ 的/ 任务/ 从/ Γ/ —/ 中/ 拆分/ 出/ 可/ 最小化/ 自旋/ 损失/ ./ 然而/ ,/ 若/ 一次/ 拆分/ 后/ 相关/ 任务/ 子集/ 仍/ 不可/ 调度/ ,/ 则/ 需要/ 进一步/ 拆分/ ./ 当/ Γ/ —/ 被/ 拆分/ 后/ ,/ Γ/ —/ 中/ 包含/ 的/ 任务/ 以及/ 核间/ 任务/ 关系/ 均/ 发生变化/ ,/ 因此/ 需要/ 对/ 矩阵/ 犝/ 的/ 部分/ 元素/ 进行/ 变换/ ,/ 使得/ 从/ Γ/ —/ 中/ 拆分/ 出/ 多个/ 任务/ 时/ Γ/ —/ 所在/ 核/ 的/ 自旋/ 损失/ 仍/ 保持/ 最小/ ./ 为此/ ,/ 需要/ 解决/ 两/ 方面/ 问题/ :/ (/ 1/ )/ 拆分/ 出/ 的/ 多个/ 任务分配/ 到/ 哪里/ ;/ (/ 2/ )/ 选择/ 哪些/ 任务/ 进行/ 拆分/ ./ 设/ 初始/ 任务/ 子集/ 分配/ 到/ 核/ pk/ 上/ ,/ 且/ 第一次/ 拆分/ 将/ τ/ i/ ∈/ Γ/ —/ 分配/ 到/ pr/ (/ r/ ≠/ k/ )/ 上/ ./ 随后/ 被/ 拆分/ 出/ 的/ 任务/ τ/ u/ 可以/ 分配/ 到/ pr/ 或/ 其他/ 某个/ 核/ py/ 上/ (/ y/ ≠/ k/ ,/ y/ ≠/ r/ )/ ./ 根据/ 引理/ 1/ 可知/ ,/ 当/ τ/ u/ 与/ τ/ i/ 访问/ 任意/ 相同/ 共享资源/ ρ/ s/ 时/ ,/ 若/ 将/ τ/ u/ 分配/ 到/ pr/ 上/ ,/ 则/ 核/ pk/ 上/ 的/ 任务/ 访问/ ρ/ s/ 需/ 等待/ 的/ 最长/ 时间/ 为/ max/ (/ ξ/ i/ ,/ s/ ,/ ξ/ u/ ,/ s/ )/ ;/ 而/ 若/ 将/ τ/ u/ 分配/ 到/ py/ 上/ ,/ 则/ 核/ pk/ 上/ 的/ 任务/ 访问/ ρ/ s/ 需/ 等待/ 的/ 最长/ 时间/ 为/ ξ/ i/ ,/ s/ +/ ξ/ u/ ,/ s/ ./ 结合/ 引理/ 1/ 和/ 定理/ 1/ 可知/ ,/ 将/ Γ/ —/ 中/ 拆分/ 出/ 的/ 任务分配/ 到/ 相同/ 核上/ 可/ 减小/ 核间/ 任务/ 阻塞/ 时间/ ,/ 从而/ 减小/ 不必要/ 的/ 自旋/ 损失/ ./ 因此/ ,/ 当/ Γ/ —/ 作/ 进一步/ 拆分/ 时/ ,/ 将/ 新/ 拆分/ 出/ 的/ 任务分配/ 到/ 前/ 一个/ 被/ 拆分/ 出/ 的/ 任务/ 所在/ 的/ 核上/ ./ 当/ 拆分/ 出/ 的/ 任务分配/ 到/ 相同/ 核上/ 时/ ,/ 可/ 将/ 这些/ 任务/ 视为/ 一个/ 虚拟/ 任务/ ./ 将/ 当前/ 欲/ 拆分/ 出/ 的/ 任务/ 逻辑/ 上/ 合并/ 到/ 原有/ 虚拟/ 任务/ 中/ ,/ 从而/ 使得/ 每次/ 拆分/ 都/ 等同于/ 从/ 初始/ 相关/ 任务/ 子/ 集中/ 拆分/ 出/ 一个/ 虚拟/ 任务/ ./ 如图/ 2/ 所示/ ,/ 当/ 将/ τ/ 3/ 从/ 相关/ 任务/ 子/ 集中/ 拆分/ 出时/ Page6/ (/ 此时/ τ/ 1/ 已/ 被/ 拆分/ 出/ )/ ,/ 可/ 视为/ 将/ τ/ 1/ ,/ τ/ 3/ 逻辑/ 上/ 合并/ 为/ 一个/ 虚拟/ 任务/ τ/ / ,/ 再/ 将/ 虚拟/ 任务/ τ/ / 从/ 原始/ 相关/ 任务/ 子/ 集中/ 拆分/ 出/ ./ 由于/ 矩阵/ 犝/ 中/ 每个/ 行向量/ 描述/ 一个/ 任务/ ,/ 因此/ 可/ 通过/ 行向量/ 变换/ 实现/ 任务/ 的/ 逻辑/ 合并/ ./ 设/ Γ/ —/ =/ {/ τ/ a/ ,/ τ/ b/ ,/ …/ ,/ τ/ z/ }/ (/ x/ =/ |/ Γ/ —/ |/ / n/ )/ 为/ 算法/ 1/ 得到/ 的/ 相关/ 任务/ 子集/ ,/ 矩阵/ 犝/ x/ ×/ q/ 表示/ Γ/ —/ 访问共享/ 资源/ 的/ 时间/ (/ 见式/ (/ 4/ )/ )/ ./ 虚拟/ 任务/ τ/ / 的/ 构造方法/ 如下/ :/ (/ 1/ )/ 当/ τ/ i/ 为/ 第一个/ 被/ 拆分/ 出/ 的/ 任务/ 时/ ,/ 虚拟/ 任务/ τ/ / 指向/ 矩阵/ 犝/ x/ ×/ q/ 中/ 任务/ τ/ i/ 所在/ 行/ ;/ (/ 2/ )/ 当/ τ/ i/ 为/ 第/ c/ (/ c/ >/ 1/ )/ 个/ 被/ 拆分/ 出/ 的/ 任务/ 时/ ,/ 对/ 原有/ 虚拟/ 任务/ 所/ 指向/ 的/ 行/ 进行/ 相应/ 行/ 变换/ ,/ 并/ 将/ 矩阵/ 犝/ x/ ×/ q/ 中/ 任务/ τ/ i/ 所在/ 行/ 清零/ ./ 设/ 原有/ 虚拟/ 任务/ 指向/ 矩阵/ 犝/ x/ ×/ q/ 第/ v/ 行/ ./ 当/ τ/ i/ 为/ 第/ c/ (/ c/ >/ 1/ )/ 个/ 被/ 拆分/ 出/ 的/ 任务/ 时/ ,/ 依次/ 将/ 矩阵/ 犝/ x/ ×/ q/ 第/ v/ 行第/ s/ 列/ 元素/ (/ uv/ ,/ s/ )/ 变换/ 如下/ :/ 例如/ ,/ 设图/ 2/ 中/ τ/ 1/ ,/ …/ ,/ τ/ 4/ 依次/ 对应/ 如下/ 矩阵/ 犝/ 4/ ×/ 3/ 的/ 第/ 1/ ~/ 4/ 行/ ./ τ/ 1/ 被/ 拆分/ 出后/ ,/ 虚拟/ 任务/ τ/ / 指向/ 犝/ 4/ ×/ 3/ 的/ 第/ 1/ 行/ ./ 当/ τ/ 3/ 为/ 即将/ 被/ 拆分/ 出/ 的/ 第/ 2/ 个/ 任务/ 时/ ,/ 虚拟/ 任务/ 所/ 指向/ 行/ 的/ 各/ 元素/ 按行/ 变换/ 规则/ 依次/ 变为/ 2/ 、/ 0/ 、/ 2/ ,/ 同时/ 矩阵/ 第/ 3/ 行/ 清零/ ,/ 如/ 犝/ / 4/ ×/ 3/ 所示/ ./ 犝/ 4/ ×/ 3/ =/ 定理/ 3/ ./ 若/ 初始/ Γ/ —/ 分配/ 到/ 核/ pk/ 上/ ,/ 所有/ 从/ Γ/ —/ 中/ 拆分/ 出/ 的/ 任务/ 都/ 分配/ 到/ 核/ pr/ 上/ (/ r/ ≠/ k/ )/ ,/ 则/ Γ/ —/ 中/ 剩余/ 任务/ 因/ 等待/ 虚拟/ 任务/ τ/ / 而/ 对/ 核/ pk/ 造成/ 的/ 最大/ 自旋/ 损失/ 为/ Sk/ (/ Γ/ —/ / )/ ./ 证明/ ./ 当/ τ/ i/ 为/ 第一个/ 被/ 拆分/ 出/ 的/ 任务/ 时/ ,/ Sk/ (/ Γ/ —/ / )/ =/ Sk/ (/ Γ/ —/ i/ )/ ,/ 根据/ 定理/ 2/ ,/ 命题/ 成立/ ./ 当/ τ/ i/ 为/ 第/ c/ 个/ (/ 1/ </ c/ / x/ )/ 被/ 拆分/ 出/ 的/ 任务/ 时/ ,/ 根据/ 虚拟/ 任务/ 构造方法/ ,/ 虚拟/ 任务/ τ/ / 所/ 指向/ 的/ 行中/ 第/ s/ 列/ 元素/ (/ 设为/ uv/ ,/ s/ )/ ,/ 代表/ 所有/ 拆分/ 出/ 的/ 任务/ 需/ 访问共享/ 资源/ ρ/ s/ 的/ 最长/ 时间/ ./ 根据/ 引理/ 1/ 可知/ ,/ / τ/ j/ ∈/ Γ/ —/ ∩/ τ/ (/ pk/ )/ (/ 设/ 为/ 矩阵/ 犝/ x/ ×/ q/ 第/ d/ 行/ 对应/ 任务/ )/ 访问共享/ 资源/ ρ/ s/ 时/ 需要/ 等待/ 的/ 最长/ 时间/ 为/ Wk/ ,/ s/ =/ ∑/ pr/ ≠/ pkuv/ ,/ s/ ./ 当/ τ/ i/ 被/ 拆分/ 出后/ ,/ 犝/ x/ ×/ q/ 中/ 任务/ τ/ i/ 所在/ 行/ 被/ 清零/ ,/ 因此/ 不会/ 重复/ 计算/ τ/ i/ 对核/ pk/ 造成/ 的/ 自旋/ 损失/ ./ 所以/ ,/ / τ/ j/ ∈/ Γ/ —/ ∩/ τ/ (/ pk/ )/ 的/ 一个/ 实例/ 自旋/ 等待/ ρ/ s/ 的/ 最长/ 时间/ 可/ 按照/ 式/ (/ 6/ )/ 进行/ 计算/ ,/ 即/ τ/ j/ 的/ 一个/ 实例/ 需/ 自旋/ 等待/ 的/ 最长/ 时间/ 为/ ∑/ q/ 中/ 剩余/ 任务/ 造成/ 的/ 自旋/ 损失/ 为/ Sk/ (/ Γ/ —/ v/ )/ ./ 其中/ ,/ 犝/ x/ ×/ q/ 第/ v/ 行所/ 对应/ 的/ 任务/ 为/ 虚拟/ 任务/ τ/ / ,/ 即/ Sk/ (/ Γ/ —/ / )/ =/ Sk/ (/ Γ/ —/ v/ )/ ./ 根据/ 定理/ 3/ ,/ 可/ 将/ Sk/ (/ Γ/ —/ / )/ 作为/ 虚拟/ 任务/ τ/ / 与/ Γ/ —/ 中/ 剩余/ 任务/ 间/ 的/ 相关度/ 评价/ 指标/ ./ 由于/ 虚拟/ 任务/ 为/ 多个/ 任务/ 逐个/ 合并/ 而成/ ,/ 因此/ 若/ 每次/ 都/ 将/ 使得/ Sk/ (/ Γ/ —/ / )/ 取/ 最小值/ 的/ 任务/ 拆分/ 出/ ,/ 则/ 可/ 保证/ 每次/ 拆分/ 后/ Γ/ —/ 中/ 剩余/ 任务/ 对/ 其/ 所在/ 核/ 造成/ 的/ 自旋/ 损失/ 最小/ ./ 由此/ 得到/ 任务/ 组/ 拆分/ 策略/ :/ 首先/ 将/ Sk/ (/ Γ/ —/ i/ )/ 取/ 最小值/ 的/ 任务/ τ/ i/ 从/ Γ/ —/ 中/ 拆分/ 出/ 并/ 分配/ 到/ 其他/ 核上/ ,/ 判断/ 系统/ 的/ 可/ 调度/ 性/ ./ 若/ 系统/ 可/ 调度/ ,/ 则/ 拆分/ 过程/ 结束/ ,/ 否则/ ,/ 采用/ 虚拟/ 任务/ 构造方法/ 继续/ 拆分/ Γ/ —/ ,/ 逐个/ 将/ 使得/ Sk/ (/ Γ/ —/ / )/ 取/ 最小值/ 的/ 任务分配/ 到/ 第一个/ 被/ 拆分/ 出/ 的/ 任务/ 所在/ 的/ 核上/ ,/ 直至/ 系统/ 可/ 调度/ ./ 若/ Γ/ —/ 中/ 所有/ 任务/ 拆分/ 后/ 仍/ 不可/ 调度/ ,/ 则/ 表明/ 任务/ 组/ 拆分/ 策略/ 失败/ ./ 算法/ 2/ ./ 任务/ 组/ 拆分/ 算法/ ./ 输入/ :/ 犝/ x/ ×/ q/ // // |/ Γ/ —/ |/ =/ x/ ,/ Γ/ —/ 为/ 算法/ 1/ 所得/ 相关/ 任务/ 子集/ ,/ 输出/ :/ 任务分配/ 结果/ 1/ ./ τ/ v/ ←/ 犳/ (/ min/ {/ Sk/ (/ Γ/ —/ i/ )/ |/ i/ ∈/ [/ 1/ ,/ x/ ]/ }/ )/ // // 取/ Sk/ (/ Γ/ —/ i/ )/ 最小/ 的/ 2/ ./ pr/ ←/ Worst/ -/ Fit/ (/ τ/ v/ )/ // // 将/ τ/ v/ 分配/ 到/ 负载/ 最小/ 的/ 核/ pr/ 上/ 3/ ./ 虚拟/ 任务/ τ/ / 指向/ 矩阵/ 犝/ x/ ×/ q/ 第/ v/ 行/ 4/ ./ WHILESched/ (/ τ/ ,/ pr/ )/ =/ FLASE/ // // 该/ 分配/ 后/ 是否/ 可/ 5/ ./ 犫/ ←/ 狌/ v/ // // 将/ 犝/ x/ ×/ q/ 第/ v/ 行/ 暂存/ 至/ q/ 维/ 向量/ 犫/ 中/ 6/ ./ FORi/ ∈/ [/ 1/ ,/ x/ ]/ ∧/ i/ ≠/ v7/ ./ 犮/ ←/ 狌/ i/ // // 将/ 犝/ x/ ×/ q/ 第/ i/ 行/ 暂存/ 至/ 向量/ 犮/ 中/ 8/ ./ / s/ ∈/ [/ 1/ ,/ q/ ]/ ,/ uv/ ,/ s/ =/ max/ (/ uv/ ,/ s/ ,/ ui/ ,/ s/ )/ // // 行/ 变换/ 9/ ./ / j/ ∈/ [/ 1/ ,/ q/ ]/ ,/ ui/ ,/ j/ =/ 0/ // // 矩阵/ 犝/ x/ ×/ q/ 第/ i/ 行/ 清零/ 10/ ./ IFSk/ (/ Γ/ —/ / )/ </ Mins/ // // 设/ Mins/ 的/ 初值/ 大于/ 111/ ./ Mins/ ←/ Sk/ (/ Γ/ —/ / )/ Page712/ ./ tem/ ←/ i13/ ./ ENDIF14/ ./ 狌/ i/ ←/ 犮/ // // 恢复/ 矩阵/ 犝/ x/ ×/ q/ 第/ i/ 行/ 15/ ./ 狌/ v/ ←/ 犫/ // // 恢复/ 矩阵/ 犝/ x/ ×/ q/ 第/ v/ 行/ 16/ ./ ENDFOR/ // // 此时/ tem/ 指向/ 被/ 拆出/ 任务/ 所在/ 行/ 17/ ./ / s/ ∈/ [/ 1/ ,/ q/ ]/ ,/ uv/ ,/ s/ =/ max/ (/ uv/ ,/ s/ ,/ utem/ ,/ s/ )/ // // 更新/ 虚拟/ 任/ 18/ ./ / j/ ∈/ [/ 1/ ,/ q/ ]/ ,/ utem/ ,/ j/ =/ 0/ // // 矩阵/ 犝/ x/ ×/ q/ 第/ tem/ 行/ 清零/ 19/ ./ Alloc/ (/ τ/ tem/ ,/ pk/ )/ // // 将/ τ/ tem/ 分配/ 到/ 核/ pk/ 上/ 20/ ./ IF/ Γ/ —/ isempty/ // // 所有/ 任务/ 拆分/ 后/ 仍/ 不可/ 调度/ 21/ ./ RETURNFAILURE/ 算法/ 2/ 为/ 任务/ 组/ 拆分/ 策略/ 的/ 算法/ 实现/ ,/ 其中/ 第一个/ 被/ 拆分/ 出/ 的/ 任务/ 被/ 分配/ 到/ 当前/ 负载/ 最小/ 的/ 核上/ (/ Worst/ -/ Fit/ (/ τ/ v/ )/ )/ ./ 因为/ 该核/ 的/ 可用/ 空间/ 最大/ ,/ 是/ 最/ 有/ 可能/ 接受/ 全部/ 被/ 拆分/ 出/ 的/ 任务/ 的/ 核/ ,/ 因此/ 可/ 在/ 最大/ 限度/ 上/ 满足/ 被/ 拆分/ 出/ 的/ 任务分配/ 到/ 相同/ 核上/ 的/ 要求/ ./ 对于/ x/ ×/ q/ (/ |/ Γ/ —/ |/ =/ x/ ,/ q/ 为/ 共享资源/ 数/ )/ 阶/ 矩阵/ 犝/ x/ ×/ q/ ,/ 计算/ Sk/ (/ Γ/ —/ i/ )/ 的/ 时间/ 复杂度/ 为/ O/ (/ qx/ )/ ;/ 选择/ Sk/ (/ Γ/ —/ i/ )/ 最小/ 的/ 任务/ 最多/ 需/ 计算/ x/ 次/ Sk/ (/ Γ/ —/ i/ )/ ,/ 因此/ 从/ Γ/ —/ 中/ 拆分/ 出/ 一个/ 任务/ 的/ 时间/ 复杂度/ 为/ O/ (/ qx2/ )/ ;/ WHILE/ 语句/ 最/ 多/ 执行/ x/ 次/ ,/ 因此/ 算法/ 2/ 总体/ 时间/ 复杂度/ 为/ O/ (/ qx3/ )/ ./ 除/ 矩阵/ 犝/ x/ ×/ q/ 外/ ,/ 算法/ 2/ 在/ 行/ 变换/ 时/ 需要/ 两个/ q/ 维/ 行向量/ 暂存/ 矩阵/ 犝/ x/ ×/ q/ 的/ 相应/ 行/ ,/ 因此/ 算法/ 2/ 的/ 空间/ 复杂度/ 为/ O/ (/ qx/ )/ ./ 4.4/ 任务分配/ 算法/ 整体/ 描述/ 结合/ 以上/ 分析/ ,/ 本文/ 提出/ 了/ 共享资源/ 敏感/ 的/ 多/ 核实/ 时/ 任务分配/ 算法/ ,/ 该/ 算法/ 主要/ 包含/ 以下/ 3/ 个/ 步骤/ ./ (/ 1/ )/ 采用/ 任务/ 分组/ 策略/ ,/ 将/ 待/ 分配任务/ 集合/ 划分/ 为/ 一系列/ 相关/ 任务/ 子集/ 和/ 一个/ 独立/ 任务/ 子集/ ,/ 将/ 相关/ 任务/ 子集/ 按/ CPU/ 利用率/ (/ ∑/ ui/ )/ 排序/ ,/ 采用/ WFD/ 算法/ 分配/ 相关/ 任务/ 子集/ (/ 属于/ 同一/ 相关/ 任务/ 子集/ 的/ 任务/ 被/ 分配/ 到/ 相同/ 核上/ ,/ 否则/ 认为/ 该/ 相关/ 任务/ 子集/ 不可/ 分配/ )/ ./ (/ 2/ )/ 结合/ 任务/ 组/ 拆分/ 策略/ 和/ WFD/ 算法/ 进行/ 分配/ ./ 首先/ ,/ 采用/ WFD/ 算法/ 将/ 待/ 拆分/ 的/ 相关/ 任务/ 子集/ 分配/ 到/ 当前/ 负载/ 最小/ 的/ 核上/ ,/ 以/ 减少/ 需要/ 被/ 拆分/ 出/ 的/ 任务/ 个数/ ./ 然后/ ,/ 根据/ 任务/ 相关度/ 评价/ 结果/ ,/ 逐个/ 将/ 该/ 相关/ 任务/ 子/ 集中/ 的/ 任务/ 拆分/ 出来/ ,/ 直到/ 系统/ 满足/ 可/ 调度/ 性/ 要求/ ./ 若/ Γ/ —/ 中/ 所有/ 任务/ 拆分/ 后/ 仍/ 不可/ 调度/ ,/ 则/ 撤销/ 本轮/ 分配/ (/ 使/ 各核/ 上/ 所/ 分配/ 的/ 任务/ 恢复/ 到/ 本轮/ 任务/ 组/ 拆分/ 策略/ 实施/ 前/ 的/ 情况/ )/ ./ (/ 3/ )/ 采用/ WFD/ 算法/ 分配/ 独立/ 任务/ 和/ 第/ 2/ 阶段/ 未/ 分配/ 的/ 任务/ ./ 任务分配/ 算法/ 伪/ 代码/ 如下/ ./ 算法/ 3/ ./ SharedResouce/ -/ Aware/ 任务分配/ 算法/ ./ 输入/ :/ Γ/ =/ {/ τ/ 1/ ,/ τ/ 2/ ,/ …/ ,/ τ/ n/ }/ 输出/ :/ 任务分配/ 结果/ 1/ ./ 由/ 算法/ 1/ 得到/ g/ 个/ 相关/ 任务/ 子集/ :/ Γ/ —/ 1/ …/ Γ/ —/ g2/ ./ FORi/ =/ 1/ :/ g3/ ./ Γ/ —/ h/ ←/ Highest/ _/ U/ (/ )/ // // 未/ 分配/ 的/ 最大/ 相关/ 任务/ 子集/ 4/ ./ pk/ ←/ Iowest/ _/ Load/ (/ P/ )/ // // 当前/ 负载/ 最小/ 的/ 核/ pk5/ ./ IFSched/ (/ Γ/ —/ h/ ,/ pk/ )/ isTRUE/ // // Γ/ —/ h/ 在/ pk/ 上/ 可/ 调度/ 6/ ./ Alloc/ (/ Γ/ —/ h/ ,/ pk/ )/ // // 将/ Γ/ —/ h/ 分配/ 到/ pk/ 上/ 7/ ./ WHILE/ / Γ/ —/ i/ ∈/ {/ Γ/ —/ 1/ …/ Γ/ —/ g/ }/ 未/ 分配/ 8/ ./ Γ/ —/ h/ ←/ Highest/ _/ U/ (/ )/ // // 未/ 分配/ 的/ 最大/ 相关/ 任务/ 9/ ./ pk/ ←/ Iowest/ _/ Load/ (/ P/ )/ // // 当前/ 负载/ 最小/ 的/ 核/ pk10/ ./ IF/ 任务/ 组/ 拆分/ 算法/ 返回/ FAILURE11/ ./ Roll/ _/ Back/ (/ )/ // // 撤销/ 本轮/ 分配/ 12/ ./ Taskset/ _/ Broken/ (/ )/ // // 拆散/ Γ/ —/ i/ 留待/ 分配/ 13/ ./ WHILE/ / τ/ i/ 未/ 分配/ 14/ ./ τ/ h/ ←/ Highest/ _/ U/ (/ )/ // // 未/ 分配/ 的/ 最大/ 的/ 独立/ 任务/ 15/ ./ pk/ ←/ Iowest/ _/ Load/ (/ P/ )/ // // 当前/ 负载/ 最小/ 的/ 核/ pk16/ ./ IFSched/ (/ τ/ h/ ,/ pk/ )/ isTRUE/ // // 分配/ 后/ 可/ 调度/ 17/ ./ Alloc/ (/ τ/ h/ ,/ pk/ )/ // // 将/ τ/ h/ 分配/ 到/ pk/ 上/ 其中/ ,/ 算法/ 1/ 可/ 根据/ 形式/ 与/ 式/ (/ 4/ )/ 相同/ 的/ n/ ×/ q/ 阶/ 矩阵/ 犝/ n/ ×/ q/ 进行/ 任务/ 分组/ ./ 即/ 算法/ 1/ 可/ 通过/ 判断/ 矩阵/ 犝/ n/ ×/ q/ 第/ i/ 行/ 与/ 第/ j/ 行/ 的/ 同一/ 列/ 是否/ 有/ 同时/ 不为/ 零/ 的/ 元素/ ,/ 以/ 判断/ τ/ i/ 与/ τ/ j/ 是否/ 访问/ 相同/ 资源/ ./ 若/ 某些/ 列上/ 有/ 同时/ 不为/ 零/ 的/ 元素/ ,/ 则/ τ/ i/ 与/ τ/ j/ 访问/ 了/ 相同/ 的/ 资源/ ./ 本文/ 系统/ 模型/ 中有/ n/ 个/ 任务/ ,/ m/ 个/ 核/ 和/ q/ 个/ 共享资源/ ./ 采用/ 矩阵/ 犝/ 进行/ 任务/ 分组/ 的/ 时间/ 复杂度/ 为/ O/ (/ qn2/ )/ ;/ 采用/ WFD/ 算法/ 分配/ 相关/ 任务/ 子集/ (/ 算法/ 3/ 第/ 2/ ~/ 6/ 行/ )/ 的/ 时间/ 复杂度/ 为/ O/ (/ g2/ +/ mg/ )/ ,/ 其中/ g/ 为/ 相关/ 任务/ 子集/ 数/ ;/ 若/ 第/ 1/ 阶段/ 结束/ 后/ ,/ 有/ l/ 个/ 相关/ 任务/ 子集/ 无法/ 分配/ ,/ 各/ 相关/ 任务/ 子/ 集中/ 最多/ 有/ x/ 个/ 任务/ ,/ 则/ 采用/ 任务/ 组/ 拆分/ 策略/ (/ 算法/ 3/ 第/ 9/ ~/ 12/ 行/ )/ 的/ 时间/ 复杂度/ 为/ O/ (/ l2/ +/ lm/ +/ lqx3/ )/ ;/ 若/ 独立/ 任务/ 子集/ 包含/ h/ 个/ 任务/ ,/ 则/ WFD/ 算法/ (/ 算法/ 3/ 第/ 13/ ~/ 17/ 行/ )/ 的/ 时间/ 复杂度/ 为/ O/ (/ h2/ +/ hm/ )/ ./ 由于/ 以上/ 分析/ 中/ 2g/ </ n/ ,/ lx/ </ n/ ,/ h/ </ n/ ,/ 因此/ 对/ 最优/ 解/ 进行/ 求解/ 的/ 时间/ 复杂度/ 为/ O/ (/ mn/ +/ qn3/ )/ ./ 本/ 算法/ 需要/ 存储/ n/ ×/ q/ 阶/ 矩阵/ 犝/ n/ ×/ q/ 以及/ 2/ 个/ 额外/ 的/ q/ 维/ 行向量/ (/ 算法/ 2/ 中/ 临时/ 向量/ 犫/ 和/ 犮/ )/ ,/ 因此/ 空间/ 复杂度/ 为/ O/ (/ qn/ )/ ./ 此外/ ,/ 当/ 任务/ 参数/ 可/ 事先/ 确定/ 时/ ,/ 分组/ 调度/ 策略/ 下/ 的/ 任务分配/ 可/ 通过/ 离线/ 计算/ 确定/ ,/ 因此/ 以上/ 的/ 算法/ 过程/ 不/ 存在/ 系统/ 运行/ 时/ 开销/ ./ Page85/ 实验/ 评估/ 根据/ 实时/ 系统/ 中/ 常用/ 的/ 周期/ 任务模型/ ,/ 任务/ 周期性/ 到达/ 并/ 按照/ 优先级/ 进行/ 抢占/ 式调度/ ./ 其中/ ,/ 传统/ 的/ “/ 装箱/ ”/ 启发式/ 算法/ 对/ 任务/ 间/ 的/ 相互/ 关系/ 是/ 不/ 敏感/ 的/ ./ 文献/ [/ 11/ -/ 12/ ]/ 提出/ 了/ 任务/ 同步/ 敏感/ (/ Synchronization/ -/ aware/ ,/ 简记/ 为/ Syn/ -/ aware/ )/ 的/ 组合/ 分配/ 策略/ ,/ 尽量/ 将/ 访问/ 相同/ 共享资源/ 的/ 任务分配/ 到/ 同一/ 核上/ ./ 然而/ 这些/ 算法/ 均/ 未/ 考虑/ 组合/ 分配/ 失败/ 后/ 如何/ 进行/ 拆分/ 的/ 情况/ ,/ 因此/ 对/ 组合/ 拆分/ 造成/ 的/ 系统/ 损失/ 不/ 敏感/ ./ 本文/ 将/ 所/ 提出/ 的/ 共享资源/ 敏感/ 算法/ (/ SharedResource/ -/ aware/ ,/ 简记/ 为/ SR/ -/ aware/ )/ 与/ 传统/ 启发式/ 算法/ (/ WFD/ )/ 以及/ 基于/ 组合/ 分配/ 策略/ 的/ 算法/ (/ Syn/ -/ aware/ )/ [/ 11/ -/ 12/ ]/ 进行/ 比较/ ./ 由于/ Syn/ -/ aware/ 算法/ 没有/ 给出/ 完整/ 的/ 算法/ 实现/ ,/ 因此/ 当/ 访问/ 相同/ 共享资源/ 的/ 任务/ 无法/ 分配/ 到/ 同一/ 核上/ 时/ ,/ 本/ 实验/ 采用/ 随机/ 选取/ 的/ 方式/ 对/ 任务/ 组合/ 进行/ 拆分/ ./ 设计/ 实验/ 如下/ ./ 5.1/ 性能指标/ 本文/ 以/ 8/ 核/ 处理器/ 平台/ 上/ 任务/ 集合/ 接受/ 率/ 作为/ 任务分配/ 算法/ 的/ 性能指标/ ./ 设/ 每次/ 实验/ 随机/ 产生/ N/ =/ 10000/ 个/ 任务/ 集合/ ,/ 统计/ 任务分配/ 算法/ A/ 可/ 调度/ 的/ 任务/ 集合/ 数为/ M/ ,/ 则/ 算法/ A/ 的/ 任务/ 集合/ 接受/ 率为/ M/ // N/ ./ 任务/ 集合/ 接受/ 率越/ 大/ 表明/ 算法/ 效率/ 越高/ ./ 此外/ ,/ 对/ 各/ 算法/ 的/ 系统/ 平均/ 自旋/ 损失/ 进行/ 了/ 比较/ ,/ 其中/ ,/ 系统/ 自旋/ 损失/ 定义/ 如下/ :/ 自旋/ 损失/ 是/ 确保/ 系统/ 可/ 调度/ 而/ 造成/ 的/ 隐性/ 资源/ 任务/ 数/ n/ 由/ 各/ 任务/ 的/ CPU/ 利用率/ ui/ 分布/ 与/ 系/ 浪费/ ,/ 因此/ 与/ 系统/ 利用率/ 和/ 算法/ 效率/ 密切相关/ ./ 5.2/ 任务/ 模拟/ 统/ 利用率/ SU/ =/ ∑/ / τ/ i/ ∈/ Γ/ (/ 1/ )/ ui/ 根据/ UUnifast/ -/ Discard/ 算法/ [/ 16/ ]/ 在/ [/ 0.1/ ,/ 0.3/ ]/ 内/ 随机/ 取得/ ./ (/ 2/ )/ 任务/ 周期/ Ti/ 的/ 自然对数/ 服从/ 均匀分布/ ,/ 在/ [/ 100/ ,/ 1000/ ]/ 内/ 随机/ 产生/ ,/ 从而/ 模拟/ 大多数/ 实时/ 任务/ ./ (/ 3/ )/ 任务/ 执行/ 时间/ Ci/ 由/ 任务/ 周期/ 与/ 任务/ CPU/ 利用率/ 决定/ ,/ 且/ 满足/ Ci/ =/ Ti/ ×/ ui/ ./ (/ 4/ )/ 任务/ 优先级/ 与/ RateMonotonic/ (/ RM/ )/ [/ 17/ ]/ 算法/ 一致/ ,/ 即/ 任务/ 周期/ 越长/ ,/ 其/ 相对/ 优先级/ 越小/ ./ (/ 5/ )/ 每/ 16/ 个/ 共享资源/ 分为/ 一组/ ,/ 一组/ 共享资源/ 可/ 被/ 8/ 个/ 任务/ 随机/ 访问/ ./ (/ 6/ )/ 各/ 任务/ 包含/ 1/ ~/ 6/ 个/ 临界/ 区/ ,/ 各/ 临界/ 区/ 对应/ 的/ 共享资源/ 在/ 任务/ 所/ 访问/ 的/ 共享资源/ 分组/ 中/ 随机/ 选择/ ./ (/ 7/ )/ 任务/ 访问/ 各/ 共享资源/ 的/ 时间/ ,/ 即/ 临界/ 区/ 长度/ 在/ [/ 1/ ,/ 20/ ]/ 内/ 取值/ ./ 5.3/ 实验/ 结果/ (/ 1/ )/ 任务/ 集合/ 接受/ 率/ ./ 当/ 临界/ 区/ 长度/ 为/ 4/ ,/ 每个/ 任务/ 包含/ 2/ 个/ 临界/ 区时/ ,/ 任务/ 集合/ 接受/ 率/ 与/ 系统/ 利用率/ SU/ 的/ 关系/ 如图/ 3/ 所示/ ./ 各/ 算法/ 任务/ 集合/ 接受/ 率/ 随/ SU/ 增加/ 而/ 单调/ 下降/ ./ WFD/ 与/ Syn/ -/ aware/ 算法/ 在/ SU/ >/ 0.6/ 时/ 出现/ 任务/ 集合/ 不可/ 调度/ ,/ 而/ SR/ -/ aware/ 算法/ 在/ SU/ >/ 0.7/ 以后/ 才/ 出现/ 任务/ 集合/ 不可/ 调度/ ./ 其中/ Syn/ -/ aware/ 算法/ 的/ 任务/ 集合/ 接受/ 率/ 大于/ WFD/ 算法/ ,/ 这/ 是因为/ Syn/ -/ aware/ 算法/ 将/ 存在/ 访问共享/ 资源/ 冲突/ 的/ 任务/ 尽量/ 分配/ 到/ 同一/ 核上/ ,/ 在/ 一定/ 程度/ 上/ 减少/ 了/ 自旋/ 损失/ ./ 而/ WFD/ 对/ 任务/ 间/ 相互/ 阻塞/ 所/ 引起/ 的/ 系统资源/ 浪费/ 不/ 敏感/ ,/ 仅/ 根据/ 任务/ CPU/ 利用率/ 和/ 各核/ 负载/ 进行/ 分配/ ,/ 因此/ 当核间/ 任务/ 阻塞/ 造成/ 的/ 开销/ 不可/ 忽略/ 时/ ,/ WFD/ 算法/ 的/ 性能/ 会/ 急剧/ 降低/ ./ SR/ -/ aware/ 算法/ 在/ Syn/ -/ aware/ 算法/ 基础/ 上/ 增加/ 了/ 任务/ 组/ 拆分/ 策略/ ,/ 在/ 相关/ 任务/ 子集/ 拆分/ 时/ 可以/ 尽量/ 减小/ 自旋/ 损失/ ,/ 因此/ 其/ 任务/ 集合/ 接受/ 率/ 高于/ Syn/ -/ aware/ 算法/ ./ 图/ 3/ 任务/ 集合/ 接受/ 率/ 随/ 系统/ 利用率/ 增加/ 的/ 变化/ 图/ 4/ 给出/ 临界/ 区/ 长度/ 对/ 各/ 算法/ 性能/ 的/ 影响/ ,/ 其中/ 每个/ 任务/ 包含/ 2/ 个/ 临界/ 区/ ,/ SU/ =/ 0.65/ (/ 图/ 3/ 显示/ SU/ =/ 0.65/ 时/ 各/ 算法/ 任务/ 集合/ 接受/ 率/ 接近/ )/ ./ 由于/ 任务/ 自旋/ 等待/ 的/ 时间/ 随/ 临界/ 区/ 长度/ 增加/ 而/ 增加/ (/ 见/ 引理/ 1/ )/ ,/ 因此/ 各/ 算法/ 任务/ 集合/ 接受/ 率均/ 有所/ 降低/ ./ 当/ 相关/ 任务/ 子集/ 无法/ 分配/ 到/ 同一/ 核上/ 时/ ,/ SR/ -/ aware/ 算法/ 根据/ 任务/ 相关度/ 评价/ 方法/ 将/ 拆分/ 出/ 的/ 任务/ 尽量/ 分配/ 到/ 同一/ 核上/ ,/ 因此/ 任务/ 通常/ 只/ 需/ 自旋/ 等待/ 某/ 一个/ 核上/ 的/ 任务/ ,/ 自旋/ 损失/ 明显/ 减小/ (/ 详见/ 引理/ 1/ 、/ 定理/ 1/ )/ ./ 而/ Syn/ -/ aware/ 算法/ 对/ 任务/ 组合/ 进行/ 随机/ 拆分/ ,/ 对/ 拆分/ 出/ 的/ 任务/ 进行/ 随机/ 分配/ ,/ 因此/ 在/ 临界/ 区/ 长度/ 较长/ 时/ 所/ 引起/ 的/ 系统/ 利用率/ 损失/ 也/ 较大/ ./ 由于/ 在/ 相关/ 任/ Page9/ 务/ 子集/ 拆分/ 中/ 的/ 随机性/ ,/ Syn/ -/ aware/ 算法/ 的/ 性能/ 趋近/ 于/ WFD/ 算法/ ./ 图/ 4/ 任务/ 集合/ 接受/ 率/ 随/ 临界/ 区/ 长度/ 增加/ 的/ 变化/ 图/ 5/ 为/ SU/ =/ 0.65/ ,/ 临界/ 区/ 长度/ 为/ 4/ 时/ ,/ 任务/ 临界/ 区数/ 对/ 任务/ 集合/ 接受/ 率/ 的/ 影响/ ./ 随着/ 任务/ 临界/ 区数/ 增加/ ,/ 任务/ 自旋/ 等待/ 共享资源/ 所/ 造成/ 的/ 系统资源/ 损失/ 也/ 相应/ 增加/ ,/ 因此/ 各/ 算法/ 的/ 任务/ 集合/ 接受/ 率均/ 有所/ 下降/ ./ 同时/ ,/ 任务/ 间/ 通过/ 访问共享/ 资源/ 而/ 产生/ 的/ 关系/ 也/ 更加/ 紧密/ ,/ 容易/ 形成/ 较大/ 的/ 相关/ 任务/ 子集/ ./ 当/ 任务/ 临界/ 区数/ 较/ 多/ 时/ ,/ SR/ -/ aware/ 与/ Syn/ -/ aware/ 算法/ 需要/ 进行/ 频繁/ 的/ 相关/ 任务/ 子集/ 拆分/ ,/ SR/ -/ aware/ 算法/ 在/ 任务/ 组/ 拆分/ 策略/ 方面/ 的/ 优势/ 使得/ 其/ 任务/ 集合/ 接受/ 率/ 高于/ Syn/ -/ aware/ 算法/ ./ 图/ 5/ 任务/ 集合/ 接受/ 率/ 随/ 任务/ 临界/ 区数/ 增加/ 的/ 变化/ (/ 2/ )/ 系统/ 自旋/ 损失/ ./ 图/ 6/ 、/ 图/ 7/ 、/ 图/ 8/ 的/ 实验/ 参数/ 分别/ 对应/ 于图/ 3/ 、/ 图/ 4/ 、/ 图/ 5/ ./ 系统/ 自旋/ 损失/ 由/ 等式/ (/ 8/ )/ 计算/ 所得/ ,/ 其中/ 包含/ 了/ 各/ 算法/ 不可/ 调度/ 的/ 任务/ 集合/ 中/ 各/ 任务/ 的/ 自旋/ 损失/ ,/ 因此/ 实验/ 结果/ 中/ 出现/ 了/ 系统/ 自图/ 6/ 系统/ 平均/ 自旋/ 损失/ 随/ 系统/ 利用率/ 增加/ 的/ 变化/ 图/ 7/ 系统/ 自旋/ 损失/ 随/ 临界/ 区/ 长度/ 增加/ 的/ 变化/ 图/ 8/ 系统/ 自旋/ 损失/ 随/ 任务/ 临界/ 区数/ 增加/ 的/ 变化/ 旋/ 损失/ 大于/ 1/ 的/ 情况/ ./ 由于/ 各/ 算法/ 分配/ 相同/ 的/ 任务/ 集合/ ,/ 因此/ 将/ 各/ 算法/ 的/ 分配/ 结果/ 所/ 造成/ 的/ 自旋/ 损失/ (/ 包括/ 不可/ 调度/ 的/ 情况/ )/ 进行/ 统计/ 比较/ ,/ 更/ 能够/ 体现/ 不同/ 算法/ 的/ 性能/ 差异/ ./ 实验/ 结果显示/ ,/ 系统/ 自旋/ 损失/ 随/ 各/ 任务/ 参数/ 的/ 变化趋势/ 与/ 任务/ 集合/ 接受/ 率/ 的/ 变化趋势/ 基本/ 相反/ ./ 其中/ ,/ SR/ -/ aware/ 算法/ 系统/ 自旋/ 损失/ 最小/ ,/ WFD/ 算法/ 最大/ ,/ Syn/ -/ aware/ 算法/ 的/ 系统/ 自旋/ 损失/ 趋近/ 与/ WFD/ 算法/ ./ 由此/ 说明/ ,/ 将/ 自旋/ 损失/ 作为/ 衡量/ 任务/ 间/ 相关性/ 的/ 指标/ 具有/ 一定/ 的/ 现实意义/ ,/ 而/ 将/ 最小化/ 任务/ 自旋/ 损失/ 作为/ 任务分配/ 算法/ 的/ 优化/ 目标/ 可以/ 减小/ 系统资源/ 浪费/ ,/ 提高/ 系统/ 利用率/ ./ 6/ 结论/ 本文/ 研究/ 多/ 核实/ 时/ 系统/ 分组/ 固定/ 优先级/ 调度/ 策略/ 下/ ,/ 具有/ 互斥/ 访问共享/ 资源/ 约束/ 的/ 周期/ 任务分配/ 问题/ ./ 首先/ ,/ 对/ FIFO/ 自旋/ 机制/ 下/ 任务/ 阻塞/ 时间/ 以及/ 自旋/ 造成/ 的/ 可/ 调度/ 性/ 损失/ 进行/ 定量分析/ ,/ 提出/ 了/ 自旋/ 损失/ 的/ 概念/ 以/ 衡量/ 自旋/ 对系统/ 利用率/ 的/ 影响/ ./ 接着/ ,/ 从/ 任务/ 自旋/ 损失/ 的/ 角度/ ,/ 提出/ 了/ 一种/ 衡量/ 任务/ 间/ 相关度/ 的/ 评价/ 方法/ ,/ 并/ 基于/ 该/ 评价/ 方法/ 提出/ 了/ 一种/ 共享资源/ 敏感/ 的/ 实时/ 任务分配/ 算法/ ./ 该/ 算法/ 包括/ 任务/ 分组/ 策略/ 以及/ 任务/ 组/ 拆分/ 策略/ ,/ 可/ 避免/ 或/ 减少/ 核间/ 任务/ 阻塞/ ,/ 从而/ 减小/ 任务/ 自旋/ 所/ 造成/ 的/ 系统资源/ 浪费/ ,/ 提高/ 系统/ 利用率/ ./ 最后/ ,/ 将/ 所/ 提/ 算法/ 与/ 同类/ 算/ Page10/ 法/ 进行/ 性能/ 比较/ ,/ 实验/ 结果表明/ ,/ 新/ 算法/ 任务/ 集合/ 接受/ 率/ 高于/ WFD/ 和/ Syn/ -/ aware/ 系列/ 算法/ ,/ 而/ 系统/ 自旋/ 损失/ 低于/ 上述/ 算法/ ./ 

