Page1/ 一种/ 基于/ FPGA/ 的/ 高斯/ 随机数/ 生成器/ 的/ 设计/ 与/ 实现/ 谷晓忱/ 张/ 民选/ (/ 国防科学技术大学/ 计算机/ 学院/ PDL/ 重点/ 实验室/ 长沙/ 410073/ )/ 摘要/ 基于/ FPGA/ 的/ 高斯/ 随机数/ 生成器/ 需要/ 满足/ 可/ 重构/ 、/ 高/ 吞吐/ 率/ 和/ 高/ 硬件资源/ 使用/ 效率/ 等/ 要求/ ./ 文中/ 提出/ 了/ 一种/ 易于/ 硬件/ 实现/ 的/ 状态/ 转换/ 逻辑/ 结构/ ,/ 并/ 给出/ 了/ 均匀分布/ 随机数/ 周期/ 和/ 输出/ 位/ 宽/ 的/ 配置/ 方法/ 和/ 配置/ 原则/ ./ 文中/ 详细分析/ 了/ 应用/ “/ 最值/ 分析法/ ”/ 和/ “/ 静态/ 误差/ 分析法/ ”/ 求解/ BoxMuller/ 算法/ 实现/ 过程/ 中/ 各/ 操作数/ 位/ 宽/ 的/ 具体/ 过程/ ./ 硬件/ 实现/ 结果/ 在/ XilinxVertex5/ 上/ 的/ 工作/ 速度/ 为/ 491MHz/ ,/ 吞吐/ 率为/ 9.82/ ×/ 108samples/ // second/ ,/ 硬件资源/ 使用/ 效率/ 为/ 2.085/ ×/ 106samples/ // second/ // slice/ ./ 文中/ 作者/ 使用/ DIEHARD/ 测试/ 集/ 、/ χ/ 2/ 和/ K/ -/ S/ 方法/ 对/ 产生/ 的/ 随机数/ 质量/ 进行/ 了/ 检测/ ,/ 文中/ 给出/ 了/ 结果/ ./ 关键词/ 现场/ 可编程/ 门阵列/ ;/ 硬件/ 加速器/ ;/ 高斯/ 随机数/ 产生/ ;/ 均匀分布/ 随机数/ 产生/ ;/ 可/ 重构/ 计算/ 1/ 引言/ 随着/ FPGA/ 性能/ 的/ 不断/ 提高/ ,/ 基于/ FPGA/ 的/ 计算/ 加速/ 已经/ 逐渐/ 成为/ 提高/ 计算速度/ 和/ 计算/ 效率/ 的/ 重要/ 手段/ 之一/ ./ 近年来/ 的/ 很多/ 研究成果/ [/ 1/ -/ 2/ ]/ 表明/ ,/ 现阶/ Page2/ 近年来/ ,/ 有/ 很多/ 关于/ 在/ FPGA/ 上/ 实现/ 高斯/ 随机数/ 生成器/ 的/ 研究/ [/ 3/ -/ 5/ ]/ ./ Lee/ 等/ 人/ [/ 5/ ]/ 应用/ BoxMuller/ 方法/ 在/ XilinxV4FPGA/ 上/ 产生/ 高斯/ 随机数/ ,/ 并/ 对/ 设计/ 过程/ 进行/ 了/ 分析/ ;/ Cheung/ 等/ 人/ [/ 4/ ]/ 应用/ Inver/ -/ sion/ 方法/ 设计/ 高斯/ 随机数/ 生成器/ ,/ 并/ 在/ XilinxV4/ 和/ V2/ 两个/ 型号/ 的/ FPGA/ 上/ 进行/ 了/ 实现/ ;/ Thomas/ 等/ 人/ [/ 3/ ]/ 应用/ “/ Centrallimit/ ”/ 原理/ 设计/ 的/ 高斯/ 随机数/ 生成器/ (/ 在/ XilinxV5/ 上/ 实现/ )/ 可以/ 达到/ 397MHz/ 的/ 工作频率/ ./ 这些/ 研究/ 都/ 在/ 不同/ 方面/ 取得/ 了/ 相应/ 的/ 成果/ ,/ 为/ 后续/ 研究/ 提供/ 了/ 重要/ 的/ 参考/ ./ 但是/ ,/ 他们/ 的/ 研究/ 仍然/ 存在/ 很多/ 缺陷/ ,/ 其中/ 最/ 重要/ 的/ 一点/ 就是/ :/ 已有/ 的/ 研究/ 只/ 关注/ 对/ 高斯/ 随机数/ 产生/ 算法/ 的/ 设计/ 实现/ 过程/ ,/ 基本/ 不/ 关心/ 均匀分布/ 随机数/ 的/ 产生/ 过程/ ./ 除了/ Wallace/ 等/ 少数/ 方法/ 以外/ ,/ 大多数/ 高斯/ 随机数/ 产生/ 算法/ 都/ 是/ 基于/ “/ 转换/ ”/ 的/ 思想/ 得到/ 高斯/ 随机数/ 的/ ,/ 即/ 高斯/ 随机数/ 是/ 由/ 均匀分布/ 随机数/ 通过/ 某种/ 算法/ 转换/ 得到/ 的/ ./ 因此/ ,/ 这些/ 算法/ 的/ 实现/ 前提/ 是/ 需要/ 有/ 一组/ 满足/ 质量/ 要求/ 的/ 均匀分布/ 随机数/ ./ 上述/ 对/ 高斯/ 随机数/ 生成器/ 的/ 研究/ 中/ ,/ 大都/ 将/ 均匀分布/ 随机数/ 生成器/ 作为/ 已知/ 条件/ 看待/ ,/ 没有/ 将/ 均匀分布/ 随机数/ 生成器/ 的/ 设计/ 作为/ 高斯/ 随机数/ 产生/ 的/ 一部分/ 来/ 进行/ 深入/ 的/ 研究/ ./ 的/ 影响/ 主要/ 体现/ 在/ 以下/ 3/ 个/ 方面/ :/ (/ 1/ )/ 均匀分布/ 随机数/ 的/ 周期/ 决定/ 了/ 高斯/ 随机数/ 的/ 周期/ ,/ 基于/ FPGA/ 的/ 计算/ 加速/ 应用/ 中/ ,/ 需要/ 保证/ 随机数/ 的/ 周期/ 具有/ 可/ 配置/ 属性/ ,/ 这点/ 主要/ 体现/ 在/ 均匀分布/ 随机数/ 的/ 设计/ 中/ ;/ 均匀分布/ 随机数/ 生成器/ 对/ 高斯/ 随机数/ 产生/ 过程/ (/ 2/ )/ 均匀分布/ 随机数/ 的/ 位/ 宽/ 决定/ 了/ 可以/ 产生/ 的/ 高斯/ 随机数/ 的/ 范围/ ,/ 即/ 某些/ 小/ 概率/ 事件/ 的/ 产生/ 需要/ 依靠/ 对/ 均匀/ 随机数/ 位/ 宽/ 的/ 正确/ 配置/ 来/ 实现/ ;/ (/ 3/ )/ 均匀分布/ 随机数/ 生成器/ 的/ 工作/ 速度/ 不能/ 低于/ 高斯/ 随机数/ 产生/ 算法/ 的/ 硬件/ 工作/ 速度/ ,/ 为了/ 不/ 降低/ 最终/ 产生/ 高斯/ 随机数/ 的/ 吞吐/ 率/ ,/ 均匀分布/ 随机数/ 生成器/ 需要/ 具有/ 结构/ 简单/ 、/ 工作/ 速度/ 快/ 的/ 特点/ ./ 本文/ 的/ 研究/ 将/ 均匀分布/ 随机数/ 的/ 产生/ 过程/ 考虑/ 到/ 高斯/ 随机数/ 生成器/ 的/ 设计/ 过程/ 中/ ,/ 综合/ 考虑/ 均匀分布/ 随机数/ 生成器/ 对/ 高斯/ 随机数/ 产生/ 过程/ 的/ 影响/ ,/ 有/ 针对性/ 地/ 解决/ 了/ 上述/ 3/ 个/ 方面/ 的/ 问题/ ./ 本文/ 通过/ 对/ CombinedTausworthe/ 均匀分布/ 随机数/ 生成器/ 的/ 改进/ ,/ 提出/ 了/ 一种/ 基于/ 矩阵/ 思想/ 设计/ 转换/ 逻辑/ 犃/ s/ 的/ 硬件/ 结构/ ,/ 提高/ 了/ 均匀分布/ 随机数/ 的/ 产生/ 速度/ ./ 通过/ 对/ 均匀分布/ 随机数/ 生成器/ 的/ 周期/ 和/ 输出/ 位/ 宽/ 进行/ 配置/ ,/ 使得/ 高斯/ 随机数/ 的/ 周期/ 和/ 产生/ 范围/ 具有/ 可/ 配置/ 的/ 属性/ ,/ 可以/ 满足/ 不同/ 应用环境/ 的/ 需求/ ./ 2/ 随机数/ 产生/ 算法/ 2.1/ 均匀分布/ 随机数/ 产生/ 算法/ CombinedTausworthe/ [/ 6/ ]/ 本文/ 应用/ CombinedTausworthe/ 算法/ 产生/ 均匀分布/ 随机数/ ./ CombinedTausworthe/ 随机数/ 生成器/ 由/ 若干个/ Tausworthe/ 随机数/ 生成器/ 组成/ ,/ 每个/ Tausworthe/ 随机数/ 生成器/ 产生/ 的/ 随机数/ 可以/ 表示/ 成/ 如下/ 形式/ 其中/ ,/ L/ 和/ s/ 都/ 是非/ 零/ 正整数/ ,/ s/ 是/ 跳变/ 步长/ ,/ L/ 是/ 随机数/ 的/ 输出/ 位/ 宽/ ./ xj/ ,/ ns/ +/ i/ -/ 1/ 是/ 一个/ 随机/ 序列/ ,/ 其/ 递归/ 关系式/ 为/ xj/ ,/ n/ =/ a1xj/ ,/ n/ -/ 1/ / a2xj/ ,/ n/ -/ 2/ / …/ / akxj/ ,/ n/ -/ k/ (/ 2/ )/ 其中/ ,/ ai/ 是/ 特征/ 多项式/ P/ (/ z/ )/ =/ zk/ -/ a1zk/ -/ 1/ -/ …/ -/ ak/ 的/ 系数/ ./ 当/ P/ (/ z/ )/ 为/ 本原/ 多项式/ 时/ ,/ 输出/ 序列/ 的/ 周期/ 取得/ 最大值/ :/ 2k/ -/ 1/ ./ P/ (/ z/ )/ 通常/ 取/ 三项式/ :/ P/ (/ z/ )/ =/ zk/ -/ zq/ -/ 1/ ./ 由/ J/ 个/ Tausworthe/ 随机数/ 生成器/ 构成/ 的/ CombinedTausworthe/ 随机数/ 生成器/ 所/ 产生/ 的/ (/ 0/ ,/ 1/ )/ 区间/ 内/ 的/ 均匀分布/ 随机数/ 可以/ 表示/ 为/ un/ =/ ∑/ L/ 其中/ ,/ xj/ ,/ ns1/ +/ i/ -/ 1/ 是/ 第/ j/ 个/ Tausworthe/ 随机数/ 生成器/ 的/ 输出/ ./ 2.2/ 高斯/ 随机数/ 产生/ 方法/ Box/ -/ Muller/ [/ 7/ ]/ Box/ -/ Muller/ 方法/ 可以/ 将/ 均匀分布/ 随机数/ 转换/ 为/ 高斯分布/ 随机数/ ,/ 它/ 依据/ 的/ 原理/ 是/ :/ 两组/ 相互/ 独立/ 的/ 高斯分布/ 随机数/ 的/ 平方和/ 服从/ 指数分布/ ./ 其/ 转换/ 过程/ 可以/ 表示/ 为/ i/ =/ 1/ 其中/ ,/ u1/ 和/ u2/ 是/ 两路/ 均匀分布/ 随机数/ ,/ α/ 和/ β/ 是/ 得到/ 的/ 高斯分布/ 随机数/ ./ 3/ 硬件/ 结构/ 3.1/ 整体/ 架构图/ 1/ 所示/ 为/ 高斯/ 随机数/ 生成器/ 的/ 整体/ 架构/ ./ 该/ 架构/ 分为/ 两个/ 部分/ :/ 虚线/ 框内/ 为/ BoxMuller/ 算法/ 实现/ 部分/ ;/ 虚/ 线框/ 以外/ 为/ 均匀分布/ 随机数/ 产生/ 部分/ ./ BoxMuller/ 算法/ 实现/ 部分/ 需要/ 使用/ 到/ 指数函数/ 、/ 对/ Page3/ 数/ 函数/ 以及/ 三角函数/ 运算/ 模块/ ,/ 这些/ 模块/ 可以/ 采用/ 查表/ 和/ 函数/ 最佳/ 一致/ 逼近/ 等/ 方法/ 设计/ 实现/ ,/ 也/ 可以/ 采用/ Xilinx/ 公司/ 等/ 提供/ 的/ IP/ 核/ 实现/ ./ 由于/ BoxMuller/ 算法/ 需要/ 使用/ 两路/ 独立/ 的/ 均匀分布/ 随机数/ ,/ 所以/ 图/ 1/ 所示/ 架构/ 中/ 需要/ 使用/ 两个/ CombinedTausworthe/ 均匀分布/ 随机数/ 生成器/ ./ 图/ 2CombinedTausworthe/ 随机数/ 生成器/ 的/ 结构/ 3.2/ 转换/ 逻辑/ 犃/ 狊/ 的/ 设计/ 一般/ 情况/ 下/ ,/ 式/ (/ 2/ )/ 所示/ 的/ 递推/ 关系/ 大都/ 使用/ 线性/ 反馈/ 移位/ 寄存器/ 来/ 实现/ ./ 此时/ ,/ 每个/ 时钟/ 周期/ 只能/ 产生/ 一位/ 有效/ 的/ 数据/ 信息/ xj/ ,/ n/ ,/ 而/ 根据/ 式/ (/ 1/ )/ 的/ 约束/ 关系/ ,/ 产生/ 一个/ L/ 位/ 的/ 随机数/ un/ ,/ j/ 需要/ 使用/ s/ 位新/ 的/ 数据/ 信息/ ,/ 也就是说/ ,/ 需要/ s/ 个/ 时钟/ 周期/ 才能/ 产生/ 一个/ 随机数/ un/ ,/ j/ ./ 因此/ ,/ 为了/ 在/ 每个/ 时钟/ 周期/ 内/ 可以/ 产生/ 一个/ L/ 位/ 的/ 随机数/ un/ ,/ j/ ,/ 就/ 需要/ 改变/ 线性/ 反馈/ 移位/ 寄存器/ 的/ 反馈/ 逻辑/ ,/ 使/ 其/ 可以/ 在/ 一个/ 时钟/ 周期/ 内/ 产生/ s/ 位/ 有效/ 数据/ 信息/ ./ 式/ (/ 2/ )/ 的/ 递推/ 关系/ 可以/ 用/ 矩阵/ 形式/ 表示/ 为/ 其中/ ,/ Xj/ ,/ n/ 是/ 当前/ 时刻/ 的/ L/ 位/ 状态/ 信息/ ,/ Xj/ ,/ n/ +/ 1/ 是/ 下/ 一/ 时刻/ 的/ L/ 位/ 状态/ 信息/ ,/ 犃/ 是/ 状态/ 转换/ 矩阵/ ,/ 其/ 形式/ 为/ 图/ 2/ 所示/ 为/ CombinedTausworthe/ 随机数/ 生成器/ 的/ 结构/ ./ 由该/ 结构/ 产生/ 的/ 随机数/ 满足/ 式/ (/ 3/ )/ 的/ 约束/ 关系/ ./ 最终/ 的/ 输出/ un/ 是/ J/ 个/ Tausworthe/ 随机数/ 生成器/ 的/ 输出/ 的/ 异或/ 结果/ ./ 每个/ Tausworthe/ 随机数/ 生成器/ 由/ 一个/ L/ 位/ 的/ 寄存器/ 和/ 转换/ 逻辑/ 犃/ s/ 构成/ ./ 寄存器/ 中/ 的/ 每/ 一位/ 数据/ 都/ 满足/ 式/ (/ 2/ )/ 的/ 约束/ 关系/ ./ 转换/ 逻辑/ 犃/ s/ 根据/ 这一/ 约束/ 关系/ 以及/ 式/ (/ 1/ )/ 的/ 组合/ 关系/ 求出/ 下/ 一/ 时刻/ 的/ 输出/ un/ +/ 1/ ,/ j/ ./ 在/ 高斯/ 随机数/ 生成器/ 的/ 设计/ 过程/ 中/ ,/ BoxMuller/ 算法/ 实现/ 部分/ 的/ 难点/ 在于/ 如何/ 确定/ 各/ 操作数/ 的/ 位/ 宽/ ,/ 因为/ 各/ 操作数/ 的/ 位/ 宽/ 决定/ 了/ 最终/ 产生/ 的/ 高斯/ 随机数/ 的/ 正确性/ 和/ 精度/ ;/ 而/ 均匀分布/ 随机数/ 产生/ 部分/ 的/ 难点/ 在于/ 转换/ 逻辑/ 犃/ s/ 的/ 设计/ ,/ 因为/ 转换/ 逻辑/ 需要/ 保证/ 在/ 每个/ 时钟/ 周期/ 内/ 产生/ 一个/ 新/ 的/ 随机数/ un/ ,/ j/ ,/ 所以/ 犃/ s/ 的/ 硬件/ 复杂程度/ 和/ 工作/ 速度/ 就/ 决定/ 了/ 整个/ CombinedTausworthe/ 随机数/ 生成器/ 的/ 性能/ ./ 其中/ ,/ 犆/ 1/ ×/ L/ 是/ 特征/ 多项式/ P/ (/ z/ )/ 的/ 系数/ 向量/ ,/ 犐/ (/ L/ -/ 1/ )/ ×/ (/ L/ -/ 1/ )/ 是/ 一个/ 单位矩阵/ ,/ 0/ (/ L/ -/ 1/ )/ ×/ 1/ 是/ 一个零/ 向量/ ./ 根据/ 式/ (/ 6/ )/ 的/ 状态/ 转换/ 关系/ ,/ 包含/ s/ 位新/ 的/ 有效/ 数据位/ 的/ 状态/ 信息/ 可以/ 表示/ 为/ Xj/ ,/ n/ +/ s/ =/ 犃/ ×/ Xj/ ,/ n/ +/ s/ -/ 1/ 即/ 也就是说/ ,/ 如果/ 使用/ 转换/ 矩阵/ 犃/ s/ 对/ 当前/ 时刻/ 的/ 输出/ un/ ,/ j/ 进行/ 状态/ 转换/ ,/ 就/ 可以/ 直接/ 得到/ 下/ 一/ 时刻/ 的/ 输出/ un/ +/ 1/ ,/ j/ ./ 关于/ 转换/ 矩阵/ 犃/ s/ 的/ 求解/ 过程/ ,/ 本文/ 作者/ 在/ 文献/ [/ 8/ ]/ 中/ 已经/ 有/ 详细/ 说明/ ,/ 这里/ 不再/ 赘述/ ./ Page4/ 根据/ 式/ (/ 9/ )/ 的/ 状态/ 转换/ 关系/ ,/ 可以/ 得到/ 图/ 3/ 所示/ 的/ 硬件/ 结构/ ./ 转换/ 矩阵/ 犃/ s/ 中/ 每个/ “/ 1/ ”/ 都/ 对应/ 一个/ 异或门/ ./ P/ (/ z/ )/ 通常/ 取/ 三项式/ :/ P/ (/ z/ )/ =/ zk/ -/ zq/ -/ 1/ ./ 因此/ ,/ un/ +/ 1/ ,/ j/ 中新/ 产生/ 的/ s/ 位/ 数据/ 信息/ 都/ 是/ 由/ un/ ,/ j/ 中/ 的/ 某/ 两位/ 数据/ 异或/ 得到/ 的/ ./ 犃/ s/ 的/ 硬件/ 结构/ 中/ 只/ 包含/ s/ 个/ 异或/ 逻辑/ 门/ ,/ 同时/ 这/ s/ 个/ 异或/ 逻辑/ 门/ 都/ 是/ 并联/ 关系/ ,/ 因此/ ,/ 该/ 结构/ 可以/ 达到/ 较/ 高/ 的/ 工作/ 速度/ ./ 3.3/ 周期/ 的/ 配置/ 由/ J/ 个/ Tausworthe/ 生成器/ 构成/ 的/ CombinedTausworthe/ 随机数/ 生成器/ 所/ 产生/ 的/ 随机数/ 的/ 周期/ 为/ [/ 6/ ]/ T/ =/ (/ 2k1/ -/ 1/ )/ ×/ (/ 2k2/ -/ 1/ )/ ×/ …/ ×/ (/ 2kJ/ -/ 1/ )/ (/ 9/ )/ 其中/ ,/ kj/ 为/ Pj/ (/ z/ )/ 的/ 级数/ ./ 可见/ ,/ 当/ kj/ 和/ J/ 值/ 增加/ 时/ ,/ 周期/ T/ 也/ 随之/ 增加/ ./ 此处/ ,/ 均匀分布/ 随机数/ 的/ 周期/ T/ 也/ 就是/ 最终/ 产生/ 的/ 高斯分布/ 随机数/ 的/ 周期/ ,/ 因此/ ,/ 可以/ 根据/ 实际/ 需要/ 改变/ kj/ 和/ J/ 的/ 值/ ,/ 从而/ 达到/ 配置/ 周期/ 的/ 目的/ ./ 周期/ 的/ 配置/ 原则/ :/ 在/ 实际/ 的/ 应用/ 中/ ,/ 不同/ 的/ 需求/ 对/ 随机数/ 周期/ 的/ 要求/ 不同/ ./ 例如/ 在/ 蒙特卡罗/ 计算/ 中/ ,/ 当/ 随机数/ 周期/ 是/ 实际/ 使用/ 的/ 随机数/ 数量/ 的/ 2/ 次方/ 或者/ 3/ 次方/ 以上/ 时/ 就/ 能/ 保证/ 结果/ 的/ 正确性/ [/ 9/ ]/ ./ 过/ 短/ 的/ 周期/ 将/ 导致/ 计算结果/ 的/ 错误/ ,/ 但是/ 过长/ 的/ 周期/ 则/ 意味着/ 随机数/ 生成器/ 的/ 实现/ 需要/ 消耗/ 更/ 多/ 的/ 硬件资源/ ./ 所以/ ,/ 在/ 设计/ 高斯/ 随机数/ 生成器/ 时/ ,/ 应该/ 根据/ 实际/ 需要/ 选取/ J/ 和/ kj/ ,/ 在/ 保证/ 计算结果/ 正确/ 的/ 前提/ 下/ ,/ 达到/ 消耗/ 最少/ 硬件资源/ 的/ 目的/ ./ 3.4/ 均匀/ 随机数/ 位/ 宽/ 的/ 配置/ 输出/ 位/ 宽/ L/ 的/ 可/ 配置/ 性/ 表现/ 在/ 参数/ 组合/ (/ L/ ,/ kj/ ,/ qj/ ,/ sj/ )/ 的/ 选取/ 上/ ./ 设计/ CombinedTausworthe/ 随机数/ 生成器/ 时/ ,/ 可以/ 根据/ 设计/ 需求/ 选取/ 输出/ 位/ 宽/ L/ ,/ 然后/ 按照/ 文献/ [/ 6/ ]/ 中/ 给出/ 的/ 搜索算法/ 得到/ 满足/ “/ ME/ (/ MaximallyEquidistributed/ )/ 条件/ ”/ 的/ 参数/ 组合/ (/ kj/ ,/ qj/ ,/ sj/ )/ ./ 需要/ 指出/ 的/ 是/ ,/ 并/ 不是/ 所有/ 的/ L/ 都/ 能/ 找到/ 满足/ ME/ 条件/ 的/ (/ kj/ ,/ qj/ ,/ sj/ )/ 参数/ 组合/ ./ 当/ 没有/ 参数/ 组合/ 可以/ 满足/ ME/ 条件/ 时/ ,/ 文献/ [/ 6/ ]/ 中/ 也/ 给出/ 了/ 一个/ 折中/ 的/ 办法/ :/ 假设/ l/ >/ L/ ,/ 且/ (/ l/ ,/ kj/ ,/ qj/ ,/ sj/ )/ 对应/ 的/ CTRNG/ 满足/ ME/ 条件/ ,/ 那么/ 可以/ 选取/ 该/ CombinedTausworthe/ 随机数/ 生成器/ 输出/ 中/ 的/ L/ 位/ 作为/ 新/ 的/ 输出/ ,/ 构成/ L/ 位/ 输出/ 的/ RNG/ ./ 所以/ ,/ 在/ 设计/ CombinedTausworthe/ 随机数/ 生成器/ 时/ ,/ 总/ 可以/ 根据/ 实际/ 需要/ 来/ 选取/ 合适/ 的/ 输出/ 位/ 宽/ L/ ,/ 实现/ 硬件/ 设计/ 的/ 可/ 配置/ 性/ ./ 4/ 操作数/ 位/ 宽/ 选取/ 与/ 误差/ 分析/ 根据/ 图/ 1/ 所示/ 架构/ 进行/ 硬件/ 设计/ 时/ ,/ 另/ 一个/ 设计/ 难点/ 就是/ 如何/ 确定/ BoxMuller/ 算法/ 实现/ 部分/ 各/ 操作数/ 的/ 位/ 宽/ ./ 图/ 1/ 硬件/ 结构/ 中/ 的/ 所有/ 操作数/ 都/ 采用/ 定点数/ 的/ 表式/ 方式/ ./ 每/ 一个/ 定点数/ 都/ 可以/ 分成/ 3/ 个/ 组成部分/ :/ 符号/ 位/ 、/ 整数/ 部分/ 和/ 小数/ 部分/ ./ 本文/ 中/ ,/ 使用/ Ix/ 表示/ 操作数/ x/ 的/ 整数/ 部分/ 位/ 宽/ ,/ 使用/ Fx/ 表示/ 操作数/ x/ 的/ 小数/ 部分/ 位/ 宽/ ./ 以下内容/ 将/ 分别/ 给出/ 确定/ Ix/ 和/ Fx/ 的/ 具体方法/ ./ 4.1/ 整数/ 部分/ 位/ 宽/ 选取/ 本文/ 使用/ “/ 最值/ 分析法/ ”/ 确定/ 各/ 操作数/ 的/ 整数/ 部分/ 位/ 宽/ ,/ 即/ 根据/ CombinedTausworthe/ 生成器/ 的/ 输出/ u1/ 和/ u2/ 以及/ BoxMuller/ 算法/ 中/ 的/ 运算/ 关系/ ,/ 求解/ 每个/ 操作数/ 可能/ 取得/ 的/ 最大/ (/ 小/ )/ 值/ ,/ 进而/ 确定/ 每个/ 操作数/ 的/ 整数/ 部分/ 位/ 宽/ ./ 这里/ 以/ 求解/ I/ α/ 为例/ 进行/ 说明/ ./ 根据/ 式/ (/ 4/ )/ 以及/ 图/ 1/ 所示/ 结构/ 可知/ :/ 因为/ ,/ 所以/ 可以/ 得到/ 如下/ 关系/ ,/ 如图/ 1/ 所示/ ,/ 所以/ ,/ u1/ 是/ (/ 0/ ,/ 1/ )/ 区间/ 内/ 的/ 小数/ ,/ 因为/ CombinedTaus/ -/ worthe/ 生成器/ 的/ 输出/ 位/ 宽/ 为/ L/ ,/ 所以/ 可得/ 即/ Page5/ 将式/ (/ 16/ )/ 的/ 结论/ 代入/ 式/ (/ 12/ )/ 可以/ 得到/ 如下/ 结论/ ,/ |/ α/ |/ 的/ 最大值/ 与/ I/ α/ 的/ 关系/ 为/ 因此/ ,/ 为了/ 避免/ 计算/ 过程/ 中/ α/ 出现/ 溢出/ 现象/ ,/ I/ α/ 的/ 取值/ 应该/ 为/ 根据/ 式/ (/ 19/ )/ 就/ 可以/ 算出/ I/ α/ 的/ 值/ ./ 例如/ ,/ 当/ L/ =/ 32/ 时/ ,/ 上述/ 即/ 为/ 利用/ “/ 最值/ 分析法/ ”/ 确定/ 操作数/ α/ 的/ 整数/ 部分/ 位/ 宽/ I/ α/ 的/ 求解/ 过程/ ./ 根据/ 式/ (/ 10/ )/ ~/ 式/ (/ 19/ )/ 的/ 推导/ 过程/ ,/ 可以/ 确定/ 图/ 1/ 硬件/ 结构/ 中/ 所有/ 操作数/ 的/ 整数/ 部分/ 位/ 宽/ ./ 应用/ 该/ 方法/ ,/ 每个/ 操作数/ 的/ 整数/ 部分/ 位/ 宽/ 都/ 可以/ 与/ CombinedTausworthe/ 生成器/ 的/ 输出/ u1/ 和/ u2/ 建立/ 数值/ 运算/ 关系/ ./ 这/ 也/ 表明/ 了/ u1/ 和/ u2/ 的/ 位/ 宽/ 对/ 最终/ 产生/ 的/ 高斯/ 随机数/ 的/ 重要/ 影响/ ,/ 说明/ 了/ 3.4/ 小节/ 中/ 对/ 均匀/ 随机数/ 位/ 宽/ 的/ 配置/ 是/ 非常/ 重要/ 的/ ./ 4.2/ 小数/ 部分/ 位/ 宽/ 选取/ 整数/ 部分/ 位/ 宽/ Ix/ 决定/ 了/ 各/ 操作数/ 的/ 取值/ 范围/ ,/ 而/ 小数/ 部分/ 的/ 位/ 宽/ Fx/ 决定/ 了/ 各/ 操作数/ 的/ 计算精度/ ./ Fx/ 的/ 取值/ 越大/ ,/ 对应/ 的/ 计算精度/ 就/ 越/ 高/ ,/ 但/ 同时/ 对应/ 的/ 硬件/ 实现/ 结果/ 所/ 消耗/ 的/ 资源/ 也/ 就/ 越/ 多/ ./ 因此/ 合理/ 选取/ Fx/ 的/ 原则/ 就是/ :/ 在/ 满足/ 计算精度/ 要求/ 的/ 前提/ 下/ ,/ 通过/ 选取/ 各/ 操作数/ 的/ 小数/ 部分/ 位/ 宽/ Fx/ ,/ 使得/ 实现/ 结果/ 达到/ 消耗/ 最少/ 硬件资源/ 的/ 目的/ ./ 本文/ 采用/ “/ 静态/ 误差/ 分析法/ ”/ [/ 5/ ]/ 来/ 求解/ 各/ 操作数/ 的/ 小数/ 部分/ 位/ 宽/ Fx/ ,/ 即/ 应用/ 误差传递/ 原理/ ,/ 推导/ 出/ 各/ 操作数/ 的/ 量化/ 误差/ 对/ 最终/ 输出/ 结果/ 的/ 影响/ ,/ 而后/ 应用/ 组合/ 最优化/ 问题/ 的/ 求解/ 方法/ ,/ 得到/ 各/ 操作数/ 的/ 最优/ 小数位/ 宽/ 组合/ ./ 下面/ 将/ 以/ 求解/ Ff/ 、/ Fg1/ 和/ Fg2/ 的/ 过程/ 为例/ 进行/ 说明/ ./ 在/ 下面/ 的/ 分析/ 过程/ 中/ ,/ 将/ f/ 、/ g1/ 和/ g2/ 的/ 求解/ 模块/ 当做/ 一个/ IP/ 核/ 看待/ ,/ 其/ 计算精度/ 分别/ 可以/ 达到/ 2/ -/ Ff/ 、/ 2/ -/ Fg1/ 和/ 2/ -/ Fg2/ ./ 根据/ 计算精度/ 的/ 要求/ ,/ α/ 和/ β/ 的/ 最终/ 结果/ 需要/ 精确/ 到/ 2/ -/ F/ α/ ,/ β/ ./ 经过/ 量化/ 后/ 操作数/ 可以/ 表示/ 为/ 其中/ ,/ x/ ~/ 为/ 该/ 操作数/ 的/ 真实/ 值/ ,/ x/ 为/ 该/ 操作数/ 的/ 量化/ 值/ ,/ Ex/ 为/ 量化/ 误差/ ./ 如果/ 采用/ 截断/ 方式/ 对/ 操作数/ 进行/ 量化/ 处理/ ,/ 那么/ 量化/ 误差/ Ex/ 在/ 数值/ 上/ 等于/ 操作数/ 的/ 计算精度/ 2/ -/ Fx/ ./ 当/ 进行/ 乘法/ 操作/ 时/ ,/ 误差/ 的/ 传递/ 关系/ 可以/ 表示/ 为/ x/ ~/ ×/ y/ ~/ =/ (/ x/ +/ Ex/ )/ ×/ (/ y/ +/ Ey/ )/ 即/ 因此/ ,/ 根据/ 图/ 1/ 所示/ 的/ 硬件/ 结构/ 关系/ ,/ α/ 和/ β/ 的/ 计算误差/ 可以/ 表示/ 为/ 硬件/ 实现/ 中/ ,/ α/ 、/ β/ 以及/ g1/ 、/ g2/ 分别/ 取/ 相同/ 的/ 位/ 宽/ ,/ 将/ 各/ 操作数/ 的/ 计算精度/ 代入/ 式/ (/ 24/ )/ 中/ 可以/ 得到/ 如下/ 关系/ 2/ -/ F/ α/ ,/ β/ / fmax/ ×/ 2/ -/ Fg1/ ,/ 2/ +/ g1/ ,/ 2max/ ×/ 2/ -/ Ff/ +/ 2/ -/ Fg1/ ,/ 2/ ×/ 2/ -/ Ff/ 其中/ ,/ fmax/ 和/ g1/ ,/ 2max/ 可以/ 根据/ 4.1/ 小节/ 的/ “/ 最值/ 分析法/ ”/ 求得/ ./ 因此/ ,/ 根据/ 式/ (/ 11/ )/ 的/ 不等式/ 就/ 可以/ 计算/ 出/ Ff/ 、/ Fg1/ 和/ Fg2/ 的/ 取值/ 范围/ ./ 根据/ Ff/ 、/ Fg1/ 和/ Fg2/ 的/ 取值/ 范围/ ,/ 可以/ 有/ 多种/ 取值/ 组合/ ./ 位/ 宽/ 的/ 增加/ ,/ 意味着/ 对应/ 模块/ 消耗/ 硬件资源/ 的/ 增加/ ./ 根据/ 前面/ 提出/ 的/ Fx/ 选取/ 原则/ ,/ 应该/ 选取/ 硬件资源/ 消耗/ 最少/ 的/ 取值/ 组合/ ./ 对于/ 复杂/ 的/ 组合/ 最优化/ 问题/ ,/ 可以/ 采用/ 遗传算法/ 或者/ 模拟退火/ 算法/ 等/ 最优化/ 算法/ 寻找/ 最优/ 解/ ./ 对于/ 式/ (/ 25/ )/ 这样/ 相对/ 简单/ 的/ 问题/ ,/ 可以/ 采用/ 穷举法/ 获得/ 最优/ 组合/ ./ 例如/ ,/ 若/ α/ (/ β/ )/ 的/ 精度/ 要求/ 为/ 2/ -/ 16/ ,/ u1/ (/ u2/ )/ 的/ 位/ 宽/ L/ 等于/ 32/ ./ 根据/ 式/ (/ 25/ )/ 的/ 约束/ 关系/ 可以/ 得到/ 如下/ 不等式/ 2/ -/ 16/ / fmax/ ×/ 2/ -/ Fg1/ ,/ 2/ +/ g1/ ,/ 2max/ ×/ 2/ -/ Ff/ +/ 2/ -/ Fg1/ ,/ 2/ ×/ 2/ -/ Ff/ 根据/ “/ 最值/ 分析法/ ”/ 可以/ 计算/ 出/ fmax/ ≈/ 6.66/ ,/ g1/ ,/ 2max/ =/ 1/ ./ 而后/ 通过/ 穷举/ 所有/ 可能/ 的/ 最优/ 组合/ ,/ 可以/ 得到/ Ff/ =/ 17/ ,/ Fg1/ ,/ 2/ =/ 20/ ./ 应用/ 上述/ “/ 静态/ 误差/ 分析法/ ”/ 以及/ Fx/ 的/ 选取/ 原则/ ,/ 可以/ 确定/ 图/ 1/ 所示/ 硬件/ 结构/ 中/ 所有/ 操作数/ 的/ 小数/ 部分/ 位/ 宽/ ./ 5/ 硬件/ 实现/ 与/ 结果/ 分析/ 本文/ 的/ 设计/ 使用/ Verilog/ 语言/ 对/ 硬件/ 逻辑/ 进行/ 描述/ ,/ 综合/ 工具/ 选用/ Xilinx/ 公司/ 的/ ISE11/ ./ 5.5/ ./ 1/ 均匀分布/ 随机数/ 生成器/ 本文/ 实现/ 了/ 4/ 个/ CombinedTausworthe/ 随机/ Page6/ 数/ 生成器/ 的/ 硬件/ 设计/ ,/ 它们/ 具有/ 不同/ 的/ 周期/ 和/ 输出/ 位/ 宽/ ,/ 其/ 配置/ 参数/ 如表/ 1/ 所示/ ./ 表/ 1/ [/ 6/ ]/ CombinedTausworthe/ 随机数/ 生成器/ 的/ 配置/ 参数/ CombinedTausworthe1CombinedTausworthe2CombinedTausworthe3CombinedTausworthe4/ 这/ 4/ 个/ 随机数/ 生成器/ 在/ XilinxVertex6FPGA/ 上/ 的/ 硬件/ 实现/ 结果/ 如表/ 2/ 所示/ ./ 位/ 宽/ L/ 的/ 值/ 可以/ 根据/ 文献/ [/ 6/ ]/ 中/ 提供/ 的/ 参数/ 确定/ ./ 如表/ 2/ 所示/ ,/ 本文/ 分别/ 实现/ 了/ 两个/ 32/ 位/ 和/ 两个/ 64/ 位/ 的/ CombinedTausworthe/ 随机数/ 生成器/ ./ 根据/ 3.4/ 小节/ 给出/ 的/ 位/ 宽/ 配置/ 原则/ ,/ 表/ 2/ 所示/ 的/ 4/ 个/ 均匀/ 随机数/ 生成器/ 可以/ 被/ 配置/ 成/ 输出/ 位/ 宽/ 不/ 大于/ 32/ 位/ 和/ 不/ 大于/ 64/ 位/ 的/ 任意/ 输出/ 位/ 宽/ 的/ 均匀分布/ 随机数/ 生成器/ ./ 表/ 2CombinedTausworthe/ 随机数/ 生成器/ 的/ 硬件/ 实现/ 结果/ CombinedTausworthe1323288301113CombinedTausworthe23242113341113CombinedTausworthe36432176521113CombinedTausworthe46442223641113/ 根据/ 式/ (/ 9/ )/ 可知/ ,/ 周期/ 的/ 大小/ 由/ kj/ 和/ J/ 的/ 值确/ DesignMethodDeviceSlicesBlockRAMsDSPsFrequency/ // MHz/ 表/ 3/ 几种/ 高斯/ 随机数/ 生成器/ 的/ 实现/ 结果/ 比较/ 本文/ BoxMullerLee/ [/ 5/ ]/ BoxMullerV414523123752Cheung/ [/ 4/ ]/ InversionV4579143701Thomas/ [/ 3/ ]/ CentrallimitV5774403971/ 注/ :/ “/ Device/ ”/ 一栏/ 中/ 的/ V4/ 和/ V5/ 指/ 的/ 是/ XilinxVertex4/ 和/ Vertex5FPGA/ ./ 果/ 进行/ 分析/ :/ 本文/ 主要/ 从/ 以下/ 两个/ 方面/ 对表/ 3/ 的/ 硬件/ 实现/ 结/ (/ 1/ )/ 硬件/ 实现/ 方式/ 与/ 软件/ 实现/ 方式/ 的/ 性能/ 比较/ ./ 本文/ 用/ C语言/ 对图/ 1/ 的/ 硬件/ 结构/ 进行/ 了/ 编程/ ,/ 并/ 将/ 软件/ 运行/ 于/ 主频/ 为/ 3GHz/ 的/ Intel/ 处理器/ 上/ ./ 从表/ 3/ 列出/ 的/ 软/ // 硬件/ 运行/ 结果/ 可见/ ,/ 硬件/ 实现/ 方式/ 定/ ./ 结合/ 表/ 1/ 的/ 设计/ 参数/ ,/ 可以/ 得到/ 表/ 2/ 中所/ 列出/ 的/ 各/ CombinedTausworthe/ 随机数/ 生成器/ 的/ 周期/ ./ 文献/ [/ 6/ ]/ 中/ 提供/ 了/ 多种不同/ 的/ kj/ 和/ J/ 的/ 配置/ 组合/ ,/ 所以/ 在/ 不同/ 的/ 应用环境/ 中/ ,/ 根据/ 3.3/ 小节/ 给出/ 的/ 周期/ 配置/ 原则/ ,/ 可以/ 根据/ 实际/ 需求/ 对/ CombinedTausworthe/ 随机数/ 生成器/ 的/ 周期/ 进行/ 重新配置/ ./ 从表/ 2/ 的/ 硬件/ 实现/ 结果/ 可以/ 看出/ ,/ 所/ 设计/ 的/ 4/ 个/ CombinedTausworthe/ 随机数/ 生成器/ 消耗/ 的/ 硬件资源/ 都/ 非常少/ ,/ 而且/ 都/ 获得/ 了/ 很/ 高/ 的/ 工作频率/ ./ 这/ 主要/ 是因为/ 3.2/ 小节/ 中/ 提出/ 的/ 转换/ 逻辑/ 犃/ s/ 具有/ 非常简单/ 而且/ 易于/ 硬件/ 实现/ 的/ 结构/ ./ 根据/ 图/ 3/ 所示/ 的/ 结构/ ,/ 犃/ s/ 中仅/ 包含/ s/ 个/ 二/ 输入/ 异或门/ ,/ 而且/ 它们/ 都/ 是/ 并联/ 关系/ ./ 因此/ ,/ 无论/ L/ 与/ s/ 的/ 值/ 怎样/ 变化/ ,/ 犃/ s/ 的/ 硬件/ 实现/ 结果/ 都/ 只有/ 一级/ 异或/ 逻辑/ ./ 也/ 是/ 由于/ 这个/ 原因/ ,/ 表/ 2/ 中/ 所示/ 的/ 4/ 个/ CombinedTausworthe/ 随机数/ 生成器/ 才/ 会/ 有/ 相同/ 的/ 工作频率/ ./ 5.2/ 高斯分布/ 随机数/ 生成器/ 本文/ 使用/ 表/ 1/ 中所/ 列出/ 的/ CombinedTaus/ -/ worthe1/ 作为/ 均匀分布/ 随机数/ 生成器/ ,/ 应用/ BoxMuller/ 算法/ ,/ 在/ XilinxFPGA/ 上/ 实现/ 了/ 高斯/ 随机数/ 生成器/ 的/ 硬件/ 设计/ ./ 硬件/ 设计/ 中/ 采用/ 定点/ 方式/ 表示/ 各/ 操作数/ ,/ 最终/ 输出/ (/ α/ 和/ β/ )/ 需要/ 精确/ 到/ 2/ -/ 16/ ./ 设计/ 中/ 采用/ 4.1/ 和/ 4.2/ 小节/ 给出/ 的/ “/ 最值/ 分析法/ ”/ 和/ “/ 静态/ 误差/ 分析法/ ”/ 确定/ 各/ 操作数/ 的/ 位/ 宽/ ./ 硬件/ 设计/ 过程/ 中/ 对/ 复杂/ 的/ 运算/ 部件/ (/ 如/ 乘法/ 等/ )/ 进行/ 了/ 流水/ 化/ 处理/ ./ 表/ 3/ 是/ 高斯/ 随机数/ 生成器/ 的/ 硬件/ 实现/ 结果/ ./ 为了/ 便于/ 跟/ 其它/ 参考/ 设计/ 进行/ 比/ 对/ ,/ 本文/ 分别/ 给出/ 了/ 该/ 硬件/ 设计/ 在/ Vertex4/ 和/ Vertex5/ 上/ 的/ 综合/ 结果/ ,/ 该/ 综合/ 结果/ 在/ Modelsim/ 中/ 进行/ 了/ 功能/ 验证/ ./ 产生/ 随机数/ 的/ 吞吐/ 率/ 是/ 软件/ 实现/ 方式/ 产生/ 随机数/ 吞吐/ 率/ 的/ 400/ 多倍/ ./ 因为/ 硬件/ 运算/ 可以/ 保证/ 每个/ 时钟/ 周期/ 都/ 产生/ 一个/ 输出/ 结果/ ,/ 而/ 软件/ 运算/ 需要/ 经过/ 若干条/ 指令/ 的/ 运行/ 才能/ 得到/ 一个/ 最终/ 结果/ ,/ 因此/ 使用/ 硬件/ 运算/ 可以/ 获得/ 很/ 好/ 的/ 加速/ 效果/ ./ 文献/ [/ 5/ ]/ 中/ 甚至/ 获得/ 了/ 千余/ 倍/ 的/ 加速/ 比/ ./ 虽然/ 软件/ 运行/ 方式/ 也/ 可以/ Page7/ 通过/ 各种/ 手段/ 提高/ 其/ 运算/ 速度/ ,/ 但是/ 硬件/ 运算/ 还是/ 可以/ 保证/ 获得/ 1/ 至/ 2/ 个/ 数量级/ 的/ 加速/ 比/ [/ 5/ ]/ ./ 所以/ ,/ 使用/ 硬件/ 实现/ 方式/ 可以/ 更好/ 地/ 满足/ 高/ 吞吐/ 率/ 的/ 要求/ ./ (/ 2/ )/ 本文/ 实现/ 结果/ 与/ 其它/ 硬件/ 实现/ 结果/ 的/ 性能/ 比较/ ./ 表/ 3/ 中/ 列出/ 了/ 已/ 报道/ 的/ 其它/ 几种/ 高斯/ 随机数/ 生成器/ 的/ 硬件/ 实现/ 结果/ ./ 本文/ 主要/ 从/ 硬件资源/ 使用/ 情况/ (/ slices/ 、/ BRAMs/ 和/ DSPs/ )/ 、/ 吞吐/ 率/ (/ Frequency/ 、/ Throughput/ )/ 和/ 硬件资源/ 使用/ 效率/ (/ Throughput/ // slice/ )/ 3/ 个/ 方面/ 进行/ 比/ 对/ ./ 硬件资源/ 的/ 使用/ 情况/ 跟/ 所/ 使用/ 的/ 算法/ 有关/ ./ BoxMuller/ 算法/ 中/ 包含/ 较/ 多/ 的/ 算术/ 运算/ (/ 如/ 乘法/ 等/ )/ 过程/ ,/ 因此/ 从表/ 3/ 给出/ 的/ 结果/ 可见/ ,/ 本文/ 和/ Lee/ 等/ 人/ 设计/ 的/ BoxMuller/ 随机数/ 生成器/ 比/ 使用/ Inversion/ 和/ CentralLimit/ 方法/ 设计/ 的/ 随机数/ 生成器/ 要/ 消耗/ 更/ 多/ 的/ DSP/ 资源/ ./ 但是/ ,/ 本文/ 的/ 设计所/ 消耗/ 的/ 硬件资源/ 要/ 少于/ Lee/ 等/ 人/ 的/ 设计/ ,/ 尤其/ 是/ 逻辑运算/ 部分/ (/ slices/ 部分/ )/ ,/ 本文/ 的/ 设计所/ 消耗/ 的/ slice/ 资源/ 仅/ 是/ Lee/ 等/ 人/ 的/ 设计/ 的/ 2/ // 3/ ./ Lee/ 等/ 人/ 的/ 设计/ 也/ 是/ 采用/ CombinedTausworthe/ 方法/ 生成/ 均匀分布/ 随机数/ ,/ 但是/ 他们/ 的/ 硬件/ 设计/ 采用/ 的/ 是/ 文献/ [/ 6/ ]/ 中/ 给出/ 的/ 算法/ ./ 这种/ 算法/ 适合/ 于/ PC机/ 上/ 的/ 指令/ 运算/ ,/ 当/ 进行/ 硬件/ 设计/ 时/ ,/ 该/ 算法/ 就/ 需要/ 消耗/ 比较/ 多/ 的/ 硬件资源/ ./ 吞吐/ 率/ 是/ 衡量/ 随机数/ 生成器/ 性能/ 的/ 重要/ 指标/ 之一/ ./ 它/ 主要/ 取决于/ 随机数/ 生成器/ 的/ 工作/ 速度/ (/ 时钟/ 频率/ )/ ./ 但是/ ,/ 由于/ BoxMuller/ 算法/ 可以/ 在/ 每/ 拍/ 产生/ 两个/ 有效/ 输出/ ,/ 所以/ ,/ 它/ 在/ 算法/ 上/ 具有/ 独特/ 的/ 优势/ ./ 从表/ 3/ 中/ 列出/ 的/ 数据/ 可以/ 看出/ ,/ 采用/ BoxMuller/ 算法/ 所/ 获得/ 的/ 吞吐/ 率要/ 高于/ 其它/ 算法/ ./ 因为/ 其它/ 算法/ 的/ 工作频率/ 需要/ 达到/ BoxMuller/ 算法/ 的/ 两倍/ 以上/ 才能/ 具有/ 高于/ BoxMuller/ 算法/ 的/ 吞吐/ 率/ ,/ 而/ 在/ 同等/ 的/ 硬件/ 实现/ 环境/ 中/ ,/ 这/ 是/ 很/ 难/ 实现/ 的/ ./ 同样/ ,/ 本文/ 的/ 硬件/ 设计所/ 获得/ 的/ 吞吐/ 率要/ 高于/ Lee/ 等/ 人/ 的/ 设计/ ./ 这/ 同样/ 是因为/ 在/ 设计/ CombinedTausworthe/ 随机数/ 生成器/ 时/ 本文/ 采用/ 了/ 不同于/ Lee/ 等/ 人/ 的/ 设计/ 思路/ ./ 文献/ [/ 6/ ]/ 中/ 给出/ 的/ 实现/ 算法/ 需要/ 三次/ 移位/ 操作/ 、/ 两次/ 异或/ 操作/ 和/ 一次/ 与/ 操作/ 才能/ 得到/ 下/ 一/ 时刻/ 的/ 输出/ un/ +/ 1/ ,/ j/ ,/ 在/ 硬件/ 设计/ 时/ ,/ 其/ 逻辑/ 级数/ 要/ 远大于/ 3.2/ 小节/ 中/ 所/ 给出/ 的/ 转换/ 逻辑/ 犃/ s/ 的/ 逻辑/ 级数/ ./ 因此/ ,/ 其/ 工作/ 速度/ 要/ 低于/ 本文/ 的/ 设计/ ./ 硬件资源/ 使用/ 效率/ 是/ 衡量/ 基于/ FPGA/ 的/ 随机数/ 生成器/ 时所/ 使用/ 的/ 一个/ 特殊/ 的/ 指标/ ./ 它/ 使用/ 平均/ 到/ 每个/ slice/ 上/ 的/ 吞吐/ 率来/ 衡量/ 硬件/ 实现/ 结果/ 对/ 资源/ 的/ 使用/ 效率/ ./ 由于/ FPGA/ 中/ 包含/ 有/ slice/ 、/ BRAM/ 和/ DSP/ 等/ 多种/ 硬件资源/ ,/ 所以/ 使用/ 哪/ 种/ 类型/ 的/ 硬件资源/ 作为/ 衡量标准/ 一直/ 是/ 一个/ 比较/ 难以/ 达成/ 一致/ 的/ 问题/ ./ 根据/ 众多/ 参考文献/ 的/ 记录/ [/ 3/ -/ 5/ ,/ 8/ ]/ ,/ 一般/ 是/ 将/ 对/ DSP/ 和/ BRAM/ 等/ 硬件资源/ 的/ 使用/ 看做/ 是/ 对/ 运算/ 部件/ 和/ 存储/ 部件/ 的/ 一种/ 特殊/ 实现/ 方式/ ,/ 而/ 使用/ slice/ 资源/ (/ 逻辑/ 部件/ )/ 作为/ 衡量/ 硬件资源/ 使用/ 效率/ 的/ 参考/ 标准/ ,/ 即用/ 单位/ slice/ 资源/ 上/ 的/ 吞吐/ 率来/ 衡量/ 设计/ 随机数/ 生成器/ 时/ 对/ 硬件资源/ 的/ 使用/ 效率/ ./ 由于/ 本文/ 的/ 设计/ 对/ CombinedTausworthe/ 随机数/ 生成器/ 的/ 实现/ 结构/ 和/ BoxMuller/ 算法/ 实现/ 部分/ 各/ 操作数/ 位/ 宽/ 进行/ 了/ 合理/ 的/ 优化/ ,/ 因此/ 可以/ 在/ 消耗/ 比较/ 少/ 的/ slice/ 资源/ 的/ 前提/ 下/ 获得/ 较/ 高/ 的/ 工作频率/ ./ 从表/ 3/ 所/ 给出/ 的/ 数据/ 可以/ 看出/ ,/ 本文/ 的/ 设计/ 获得/ 了/ 明显/ 高于/ 其它/ 几种/ 实现/ 结果/ 的/ 硬件资源/ 使用/ 效率/ ./ 5.3/ 随机数/ 质量/ 检测/ 对/ 随机数/ 的/ 质量/ 检测/ 可以/ 分成/ 两/ 部分/ 进行/ :/ 一是/ 检测/ 由/ CombinedTausworthe/ 方法/ 产生/ 的/ 均匀/ 随机数/ 的/ 质量/ ;/ 二是/ 检测/ 最终/ 产生/ 的/ 高斯/ 随机数/ 的/ 质量/ ./ 本文/ 使用/ 著名/ 的/ 随机数/ 质量/ 检测/ 软件/ DIE/ -/ HARD/ ①/ 对/ CombinedTausworthe/ 方法/ 产生/ 的/ 均匀/ 随机数/ 的/ 质量/ 进行/ 了/ 测试/ ./ 测试/ 结果显示/ :/ CombinedTausworthe/ 方法/ 产生/ 的/ 均匀/ 随机数/ 可以/ 通过/ DIEHARD/ 测试/ 集/ [/ 10/ ]/ 中/ 所有/ 测试程序/ 的/ 检测/ ./ 图/ 4/ 所示/ 为/ 本文/ 设计/ 的/ 高斯/ 随机数/ 生成器/ 所/ 产生/ 的/ 100000/ 个/ 随机数/ 的/ 概率密度函数/ 图/ ,/ 可见/ 其实/ 测/ 结果/ 与/ 理论/ 结果/ 基本/ 保持一致/ ./ 同时/ ,/ 本文/ 使用/ χ/ 2/ 和/ K/ -/ S/ 两种/ 测试/ 方式/ 对/ 这/ 100000/ 个/ 随机数/ 的/ 质量/ 进行/ 检测/ [/ 11/ ]/ ./ 根据/ 计算/ 出/ 的/ p/ 值/ 可以/ 得出结论/ :/ 本文/ 设计/ 的/ 高斯/ 随机数/ 生成器/ 所/ 产生/ 的/ 随机数/ 符合/ (/ 0/ ,/ 1/ )/ 正态分布/ ./ ①/ http/ :/ // // stat/ ./ fsu/ ./ edu/ // ~/ geo/ // diehard/ ./ htmlPage86/ 总结/ 本文/ 首先/ 应用/ 矩阵/ 的/ 形式/ 分析/ 了/ CombinedTausworthe/ 随机数/ 生成器/ 中/ 的/ 核心部件/ —/ —/ —/ 状态/ 转换/ 逻辑/ 犃/ s/ 的/ 特征/ ,/ 提出/ 了/ 一种/ 只/ 需要/ 使用/ s/ 个/ 二/ 输入/ 异或门/ 来/ 实现/ 犃/ s/ 的/ 硬件/ 结构/ ./ 而后/ ,/ 给出/ 了/ CombinedTausworthe/ 随机数/ 生成器/ 中/ 周期/ 和/ 输出/ 位/ 宽/ 的/ 配置/ 方法/ 和/ 配置/ 原则/ ./ 在/ BoxMuller/ 算法/ 的/ 硬件/ 实现/ 部分/ ,/ 本文/ 给出/ 了/ 应用/ “/ 最值/ 分析法/ ”/ 和/ “/ 静态/ 误差/ 分析法/ ”/ 确定/ 各/ 操作数/ 位/ 宽/ 的/ 具体分析/ 过程/ ,/ 并/ 计算/ 出/ 了/ 均匀分布/ 随机数/ 的/ 位/ 宽/ L/ 与/ 高斯分布/ 随机数/ 输出/ 范围/ 的/ 关系/ ./ 在/ XilinxVertex6FPGA/ 上/ 的/ 硬件/ 实现/ 结果表明/ :/ 应用/ 本文/ 提出/ 的/ 转换/ 逻辑/ 犃/ s/ 所/ 设计/ 实现/ 的/ CombinedTausworthe/ 随机数/ 生成器/ 可以/ 在/ 消耗/ 较/ 少/ 硬件资源/ 的/ 前提/ 下/ 获得/ 较/ 高/ 的/ 工作/ 速度/ ./ 通过/ 与/ 其它/ 几种/ 高斯/ 随机数/ 生成器/ 的/ 硬件/ 实现/ 结果/ 进行/ 比/ 对/ ,/ 本文/ 设计/ 的/ 高斯/ 随机数/ 生成器/ 可以/ 实现/ 更/ 高/ 的/ 工作/ 速度/ 和/ 获得/ 更优/ 的/ 硬件资源/ 使用/ 效率/ ./ 本文/ 的/ 硬件/ 设计所/ 产生/ 的/ 高斯/ 随机数/ 可以/ 通过/ χ/ 2/ 和/ K/ -/ S/ 测试方法/ 的/ 检验/ ./ 

