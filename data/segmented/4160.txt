Page1VxBPELEngine/ :/ 一种/ 变化/ 驱动/ 的/ 适应性/ 服务/ 组装/ 引擎/ 孙昌爱/ 薛铁恒/ 胡长军/ (/ 北京科技大学/ 计算机/ 与/ 通信/ 工程学院/ 北京/ 100083/ )/ 摘要/ 近年来/ ,/ 面向/ 服务/ 的/ 架构/ (/ SOA/ )/ 正/ 逐渐/ 成为/ 分布式系统/ 开发/ 的/ 新/ 范型/ ./ 为了/ 满足/ 快速/ 变化/ 的/ 需求/ ,/ 服务/ 组装/ 应/ 具备/ 足够/ 的/ 适应性/ ./ 针对/ 目前/ 广泛/ 采纳/ 的/ 服务/ 组装/ 语言/ BPEL/ 在/ 适应性/ 支持/ 方面/ 存在/ 的/ 不足/ ,/ 对/ 标准/ BPEL/ 进行/ 扩展/ ,/ 开发/ 了/ VxBPEL/ ,/ 支持/ 服务/ 组装/ 中/ 的/ 可变性/ 设计/ ./ 为了/ 在/ 运行/ 时刻/ 解释/ 与/ 执行/ 服务/ 组装/ 中/ 的/ 可变性/ 定义/ 与/ 可变性/ 配置/ ,/ 基于/ 开源/ BPEL/ 引擎/ ActiveBPEL/ 开发/ 了/ VxBPEL/ 引擎/ VxBPELEngine/ ./ 通过/ 实例/ 系统验证/ 了/ 基于/ 可变性/ 设计/ 的/ 适应性/ 服务/ 组装/ 方法/ 的/ 可行性/ ,/ 评估/ 了/ VxBPELEngine/ 引擎/ 的/ 性能/ ./ 关键词/ Web/ 服务/ ;/ BPEL/ ;/ VxBPEL/ ;/ 可变性/ 管理/ ;/ 服务/ 组装/ 引擎/ 1/ 引言/ 近年来/ ,/ 面向/ 服务/ 的/ 架构/ (/ SOA/ )/ 逐渐/ 成为/ Internet/ 环境/ 下/ 的/ 应用/ 程序开发/ 的/ 一种/ 主流/ 范型/ 或/ 方法学/ [/ 1/ ]/ ./ Page2/ 的/ 软件开发/ 可以/ 较/ 好地解决/ 分布/ 、/ 动态/ 、/ 异构/ 环境/ 下/ ,/ 数据/ 、/ 应用/ 和/ 系统集成/ 等/ 问题/ ,/ 支持/ 快速/ 的/ 业务/ 重整/ 与/ 优化/ ./ 围绕/ Web/ 服务/ 及其/ 服务/ 组装/ ,/ 开发/ 了/ 一系列/ 的/ 标准/ 、/ 语言/ 与/ 支持/ 工具/ [/ 3/ ]/ ./ BPEL/ [/ 4/ ]/ 是/ 一个/ 遵循/ SOA/ 基本原理/ ,/ 支持/ 面向/ 过程/ 的/ 可/ 执行/ 服务/ 组装/ 语言/ ,/ 在/ 学术界/ 和/ 工业界/ 受到/ 广泛/ 重视/ ./ 基于/ SOA/ 的/ 系统/ 通常/ 部署/ 和/ 运行/ 于/ 一个/ 动态/ 、/ 开放/ 的/ 环境/ 中/ ,/ 实现/ 的/ 业务/ 过程/ 本身/ 往往/ 是/ 快速/ 变化/ 的/ ,/ 面向/ 差别/ 极大/ 的/ 用户群/ ./ 这/ 意味着/ ,/ 采用/ 服务/ 组装/ 实现/ 的/ SOA/ 系统/ ,/ 应/ 具备/ 足够/ 的/ 灵活性/ ,/ 能够/ 适应/ 快速/ 变化/ 的/ 需求/ ./ 围绕/ 着/ 适应性/ 服务/ 组装/ 的/ 相关/ 研究/ 工作/ 近年来/ 非常/ 活跃/ [/ 5/ ]/ ./ 特别/ 地/ ,/ 在/ 基于/ 服务/ 组装/ 语言/ BPEL/ 实现/ 适应性/ 服务/ 组装/ 方法/ 方面/ ,/ 已有/ 工作/ 探讨/ 了/ 如何/ 基于/ Aspect/ 技术/ 或/ 采用/ 代理/ 机制/ 解决/ 服务/ 组装/ 的/ 适应性/ 问题/ [/ 6/ -/ 9/ ]/ ./ 提出/ 的/ 适应性/ 服务/ 组装/ 方法/ ,/ 都/ 是/ 面向/ 运行/ 时/ 的/ 服务/ 组装/ 实例/ ,/ 仅/ 从/ 服务/ 组装/ 的/ 实现/ 层/ 考虑/ 适应性/ 问题/ ./ 这些/ 方法/ 存在/ 不易/ 维护/ 、/ 技术/ 实现/ 复杂/ 、/ 影响/ 了/ 服务/ 组装/ 性能/ 等/ 缺点/ ./ 前期工作/ 中/ ,/ 我们/ 探讨/ 了/ 如何/ 从/ 服务/ 组装/ 的/ 规格/ 说明/ 层/ 考虑/ 适应性/ 问题/ ,/ 提出/ 一种/ 基于/ 可变性/ 设计/ 的/ 适应性/ 服务/ 组装/ 方法/ [/ 10/ -/ 13/ ]/ ./ 该/ 方法/ 在/ 服务/ 组装/ 规格/ 说明/ 中/ 引入/ 可变性/ 设计/ ,/ 在/ 部署/ 和/ 运行/ 阶段/ 支持/ 可变性/ 设计/ 与/ 配置/ 的/ 解释/ 执行/ ;/ 通过/ 增强/ 服务/ 组装/ 在/ 设计/ 、/ 部署/ 和/ 运行/ 时/ 的/ 可变性/ ,/ 显式/ 地/ 表达/ 和/ 管理/ 服务/ 组装/ 中/ 不/ 稳定/ 或/ 可变/ 的/ 因素/ ,/ 即将/ 可变/ 因素/ 作为/ 第一类/ 设计/ 对象/ 并/ 实施/ 可变性/ 管理/ ./ 提出/ 的/ 方法/ 较/ 好地解决/ 了/ 已有/ 适应性/ 服务/ 组装/ 方法/ 中/ 存在/ 的/ 不易/ 维护/ 、/ 技术/ 实现/ 复杂/ 、/ 影响/ 了/ 服务/ 组装/ 性能/ 等/ 问题/ ./ 本文/ 讨论/ VxBPEL/ 引擎/ VxBPELEngine/ 的/ 设计/ 与/ 实现/ 关键问题/ ,/ 采用/ 实例/ 研究/ 的/ 方式/ 验证/ 所提/ 适应性/ 组装/ 方法/ 的/ 可行性/ ,/ 评估/ VxBPELEngine/ 性能/ ./ 主要/ 贡献/ 包括/ :/ (/ 1/ )/ 一种/ 适应性/ 服务/ 组装/ 引擎/ VxBPELEngine/ :/ 通过/ 复用/ 和/ 扩展/ ActiveBPEL/ 引擎/ ,/ 实现/ VxBPEL/ 引擎/ VxBPELEngine/ 的/ 开发/ ;/ VxBPELEngine/ 支持/ 多个/ BPEL/ 版本/ (/ 包括/ BPEL4WS1/ ./ 1/ 与/ WS/ -/ BPEL2/ ./ 0/ )/ ./ (/ 2/ )/ 采用/ 2/ 个/ 服务/ 组装/ 实例/ 系统/ ,/ 验证/ 了/ 基于/ 可变性/ 设计/ 的/ 适应/ 服务/ 组装/ 方法/ 的/ 可行性/ ,/ 评估/ 了/ VxBPELEngine/ 的/ 性能/ ./ 2/ 背景/ 介绍/ 本/ 节/ 介绍/ BPEL/ 与/ VxBPEL/ 的/ 基本原理/ 与/ 相关/ 概念/ ./ 2.1/ BPELSOA/ 定义/ 了/ Internet/ 环境/ 下/ 松散/ 耦合/ 的/ 、/ 基于/ 标准/ 的/ 、/ 面向/ 服务/ 的/ 应用/ 程序开发/ 模式/ [/ 2/ ]/ ./ 在/ 该/ 开发/ 模式/ 中/ ,/ 服务提供者/ 开发/ 并/ 拥有/ 服务/ ,/ 按照/ 一定/ 的/ 标准/ (/ 如/ WSDL/ [/ 3/ ]/ )/ 对/ 服务/ 进行/ 描述/ ,/ 通过/ UDDI/ [/ 3/ ]/ 将/ 服务/ 发布/ 到/ 服务/ 代理/ ;/ 服务/ 代理/ 包含/ 一个/ 可用/ 服务/ 的/ 存储/ 库/ ,/ 允许/ 感兴趣/ 的/ 服务/ 使用者/ 查找/ 相关/ 的/ 服务/ ;/ 服务/ 使用者/ 通过/ 对/ 服务/ 代理/ 的/ 查询/ ,/ 将/ 查询/ 到/ 的/ 服务/ 进行/ 绑定/ ,/ 根据/ 服务/ 描述/ 的/ 接口/ 调用/ 服务/ 功能/ ./ SOA/ 软件/ 的/ 基本/ 单元/ 为/ 服务/ ,/ 通过/ 对外/ 提供/ 一组/ 操作/ 参与/ 分布式计算/ ,/ 实现/ 一个/ 软件系统/ 或/ 软件系统/ 的/ 一部分/ ./ Web/ 服务/ 是/ SOA/ 基于/ Web/ 的/ 实现/ ,/ 由于/ 单个/ Web/ 服务/ 往往/ 无法/ 满足/ 实际/ 需求/ ,/ 需要/ 将/ 多个/ Web/ 服务/ 协调/ 与/ 组织/ 起来/ 支持/ 某个/ 业务/ 过程/ ,/ 上述/ 过程/ 称为/ 服务/ 组装/ ./ BPEL/ 是/ 一个/ 支持/ 面向/ 过程/ 、/ 可/ 执行/ 的/ Web/ 服务/ 组装/ 语言/ ./ BPEL/ 过程/ 包括/ 伙伴/ 链接/ (/ partner/ -/ Link/ )/ 声明/ 、/ 变量/ 声明/ 、/ 处理器/ (/ handler/ )/ 声明/ 以及/ 业务/ 过程/ 描述/ 4/ 个/ 部分/ ./ BPEL/ 描述/ 的/ 业务/ 过程/ 是/ 一组/ 活动/ 以及/ 活动/ 之间/ 的/ 控制流/ ./ 活动/ 分为/ 基本/ 活动/ 与/ 结构型/ 活动/ ./ 其中/ ,/ invoke/ 是/ 最常/ 使用/ 的/ 基本/ 活动/ 类型/ ,/ 刻画/ 了/ 业务/ 过程/ 与/ 外部/ Web/ 服务/ 之间/ 的/ 交互/ ./ 结构型/ 活动/ 由/ 基本/ 活动/ 与/ 结构型/ 活动/ 组成/ ,/ 其/ 描述/ 包含/ 了/ 顺序/ 、/ 分支/ 、/ 循环/ 等/ 常见/ 的/ 控制/ 逻辑/ 以及/ 条件/ 判断/ 和/ 并行/ 机制/ ./ 标准/ 版本/ 的/ BPEL/ 在/ 描述/ 动态/ 、/ 多变/ 的/ 业务/ 过程/ 时/ 存在/ 明显/ 不足/ [/ 12/ ]/ ./ 2.2/ VxBPEL/ 可变性/ 是/ 软件系统/ 能够/ 在/ 特定/ 环境/ 中/ 扩展/ 、/ 改变/ 、/ 定制/ 或/ 配置/ 的/ 能力/ [/ 10/ ]/ ./ 可变性/ 的/ 核心/ 概念/ 包括/ 变异/ 点/ (/ VariationPoint/ )/ 、/ 变体/ (/ Variant/ )/ 和/ 依赖/ 关系/ (/ Dependency/ )/ ./ 变异/ 点/ 是/ 软件系统/ 中/ 可能/ 存在/ 变化/ 的/ 部分/ ./ 通常/ ,/ 一个/ 变异/ 点/ 存在/ 多个/ 设计方案/ 可/ 供选择/ ,/ 其中/ 每/ 一个/ 选择/ 方案/ 称为/ 变体/ ./ 当/ 每个/ 变异/ 点/ 都/ 选择/ 一个/ 变体/ 后/ ,/ 选择/ 的/ 变体/ 集合/ 被称作/ 可变性/ 配置/ ./ 依赖/ 关系/ 规定/ 不同/ 变异/ 点/ 对应/ 的/ 变体/ 之间/ 的/ 约束/ 关系/ ./ 可变性/ 管理/ 包括/ 设计/ 、/ 使用/ 和/ 维护/ 可变性/ ./ 实现/ 适应性/ 服务/ 组装/ 的/ 关键在于/ 如何/ 识别/ 、/ 表达/ 与/ 执行/ 服务/ 组装/ 中/ 潜在/ 的/ 各种/ 变化/ ,/ 即将/ 变化/ 作为/ 第一类/ 设计/ 对象/ 进行/ 处理/ ./ 可变性/ 管理/ 最初/ 是/ 为了/ 解决/ 软件产品/ 线/ 领域/ 中/ 多个/ 软件产品/ 之间/ 的/ 复用/ 问题/ [/ 14/ ]/ ./ 借鉴/ 可变性/ 管理/ 框架/ COVAMOF/ [/ 15/ ]/ ,/ 我们/ 开发/ 了/ 面向/ 服务/ 组装/ 的/ 可变性/ 管理/ 框架/ ,/ 如图/ 1/ 所示/ :/ Page3/ 图/ 1/ 面向/ 服务/ 组装/ 的/ 可变性/ 管理/ 框架/ 元/ 模型/ (/ 1/ )/ 变异/ 点/ ./ 代表/ 提供/ 选择/ 的/ 位置/ ./ 变异/ 点有/ 很多/ 特征/ ,/ 如/ 变化/ 类型/ 、/ 抽象层次/ 、/ 绑定/ 时间/ 和/ 基本原理/ ./ (/ 2/ )/ 变体/ ./ 代表/ 变异/ 点中/ 可行/ 的/ 选项/ ./ (/ 3/ )/ 实现/ ./ 由于/ 变异/ 点/ 可/ 存在/ 于/ 不同/ 的/ 抽象层次/ 中/ ,/ 实现/ 关系/ 指明/ 了/ 如何/ 通过/ 低层/ 抽象/ 中/ 选择/ 变体/ ,/ 以/ 实现/ 高层/ 抽象/ 中/ 变异/ 点/ 的/ 选择/ 的/ 规则/ ./ (/ 4/ )/ 依赖/ ./ 代表/ 了/ 一种/ 系统/ 属性/ ,/ 并且/ 说明/ 变异/ 点/ 的/ 绑定/ 如何/ 影响/ 这个/ 属性/ 值/ ,/ 即/ 选择/ 特定/ 的/ 变体/ 如何/ 影响/ 该/ 属性/ 的/ 值/ ./ 依赖/ 包含/ 关联/ 和/ 参考/ 数据/ ,/ 细化/ 为/ 依赖/ 交互/ ./ (/ 5/ )/ 依赖/ 交互/ ./ 描述/ 依赖/ 关系/ 的/ 一个/ 条目/ ./ (/ 6/ )/ 关联/ ./ 指/ 影响/ 系统/ 属性/ 值/ 的/ 变异/ 点/ ./ 对于/ 与/ 某个/ 依赖/ 相关/ 的/ 每个/ 变异/ 点/ ,/ 关联/ 关系/ 是/ 依赖/ 关系/ 的/ 一部分/ ,/ 因此/ ,/ 关联/ 定义/ 了/ 与/ 变异/ 点/ 的/ 某种/ 联系/ ./ (/ 7/ )/ 参考/ 数据/ ./ 定义/ 了/ 诸如/ 变异/ 点/ 绑定/ 和/ 相应/ 的/ 系统/ 属性/ 值/ 等/ 实体/ 的/ 信息/ ./ 这些/ 系统/ 属性/ 的/ 值/ 是/ 通过/ 测试/ 获得/ 的/ ./ 依据/ 上述/ 可变性/ 管理/ 框架/ 的/ 元/ 模型/ ,/ 我们/ 开发/ 了/ VxBPEL/ [/ 10/ ]/ ./ VxBPEL/ 中/ 的/ 可变性/ 构造/ 子/ (/ 即/ 实现/ 可变性/ 管理/ 中/ 的/ 各种/ 概念/ )/ 采用/ XML/ 表示/ ,/ 与/ 现有/ 服务/ 组装/ 语言/ BPEL/ 表示法/ 一致/ ./ 这样/ 设计方案/ 有利于/ 继承/ SOA/ 在/ 解决/ 应用程序/ 集成/ 和/ 数据/ 集成/ 〈/ VXSpace/ :/ ConfigurableVariationPointid/ =/ $/ IDdefaultVariant/ =/ default/ _/ variant/ _/ name/ 〉/ 〈/ VXSpace/ :/ VPChoicevpname/ =/ $/ vpnamevariant/ =/ $/ variant/ _/ name/ // 〉/ 图/ 4VxBPEL/ 中/ 可变性/ 配置/ 定义/ 的/ 语法/ 格式/ 方面/ 的/ 突出/ 优点/ ./ 变体/ 是/ 可变性/ 设计/ 中/ 的/ 核心/ 概念/ 之一/ ,/ 其/ 定义/ 方式/ 如图/ 2/ 所示/ ./ 其中/ ,/ 〈/ VXSpace/ :/ Variant/ 〉/ 标识/ 了/ 变体/ ,/ “/ VXSpace/ ”/ 是/ 定义/ 了/ Variant/ 类型定义/ 的/ 名字/ 空间/ ./ 变体/ 通过/ 名字/ name/ 进行/ 引用/ 和/ 标识/ ./ 变异/ 点/ 是/ 可变性/ 管理/ 另/ 一/ 核心/ 概念/ ,/ 定义/ 方式/ 如图/ 3/ 所示/ ./ 变异/ 点/ 由/ 名字/ (/ name/ )/ 和/ 一组/ 变体/ (/ Variants/ )/ 组成/ ./ 其中/ ,/ 〈/ VXSpace/ :/ VariationPoint/ 〉/ 标识/ 了/ 变异/ 点/ ,/ “/ VXSpace/ ”/ 是/ 定义/ 了/ VariationPoint/ 类型定义/ 的/ 名字/ 空间/ ./ 变异/ 点/ 通过/ 名字/ name/ 进行/ 引用/ 和/ 标识/ ./ 实现/ 该/ 变异/ 点/ 的/ 变体/ 集合/ 由/ 〈/ VXSpace/ :/ Variants/ 〉/ 标识/ ,/ 包含/ 的/ 变体/ 由/ 〈/ VXSpace/ :/ Variant/ 〉/ 进一步/ 定义/ ./ 〈/ VXSpace/ :/ VariationPointname/ =/ $/ VariationPoint/ _/ name/ 〉/ 〈/ VXSpace/ :/ Variants/ 〉/ 〈/ !/ -/ -/ definevariantshere/ -/ -/ 〉/ 〈/ // VXSpace/ :/ Variants/ 〉/ 〈/ // VXSpace/ :/ VariationPoint/ 〉/ 复杂/ 的/ BPEL/ 流程/ 中/ 可能/ 包含/ 多个/ 变异/ 点/ ,/ 这些/ 变异/ 点/ 之间/ 存在/ 依赖/ 关系/ ./ 采用/ 可变性/ 配置/ 来/ 描述/ 这些/ 可变性/ 元素/ 之间/ 的/ 依赖/ 关系/ ./ 可变性/ 配置/ 的/ 定义/ 方式/ 如图/ 4/ 所示/ ./ 可变性/ 配置/ 由/ 名字/ (/ Name/ )/ 、/ 唯一/ 标识号/ (/ id/ )/ 、/ 初始化/ 缺省/ 变体/ (/ defaultVariant/ )/ 、/ 基本原理/ (/ Rationale/ )/ 、/ 一组/ 变体/ (/ Variants/ )/ 组成/ ./ 其中/ ,/ 可变性/ 配置/ 由/ 〈/ VXSpace/ :/ ConfigurableVaria/ -/ tionPoint/ 〉/ 标识/ ,/ ID/ 属性/ 唯一/ 标识/ 可变性/ 配置/ ,/ 通过/ Page4defaultVariant/ 属性/ 可/ 指定/ 缺省/ 的/ 实现/ 变体/ ./ 〈/ VXSpace/ :/ Rationale/ 〉/ 和/ 〈/ VXSpace/ :/ VariantInfo/ 〉/ 分别/ 说明/ 了/ 可/ 配置/ 变异/ 体/ 和/ 变体/ 的/ 相关/ 信息/ ./ 每个/ 变体/ 所/ 需要/ 的/ 配置/ 信息/ 由/ 〈/ VXSpace/ :/ RequiredCon/ -/ figuration/ 〉/ 标识/ ./ 可变性/ 配置/ 细化/ 为/ 一组/ 变体/ 的/ 选择/ ,/ 由/ 〈/ VXSpace/ :/ VPChoices/ 〉/ 标识/ ./ 对/ 每个/ 变体/ 选择/ 的/ 说明/ 由/ 〈/ VXSpace/ :/ VPChoice/ 〉/ 标识/ ,/ vpname/ 属性/ 指明/ 了/ 该/ 选择/ 的/ 名字/ ,/ variant/ 属性/ 通过/ 名字/ 引用/ 已/ 定义/ 的/ 变体/ ./ 通过/ 〈/ VXSpace/ :/ RequiredConfiguration/ 〉/ 和/ 〈/ VXSpace/ :/ VPChoices/ 〉/ 的/ 联合/ 使用/ ,/ 可以/ 实现/ 复杂/ 的/ 可变性/ 配置/ (/ 指明/ 各种/ 变体/ 之间/ 复杂/ 的/ 实现/ 与/ 依赖/ 关系/ )/ ./ 目前/ ,/ VxBPEL/ 支持/ 服务/ 组装/ 中/ 的/ 可变性/ 设计/ 类型/ 包括/ :/ (/ 1/ )/ 具有/ 相同/ 接口/ 的/ 服务/ 替换/ ;/ (/ 2/ )/ 具有/ 不同/ 接口/ 的/ 服务/ 替换/ ;/ (/ 3/ )/ 服务/ 调用/ 时/ 参数/ 的/ 改变/ ;/ (/ 4/ )/ 服务/ 组装/ 或/ 部分/ 活动/ 的/ 重组/ ./ 3VxBPELEngine/ 的/ 设计/ 与/ 实现/ 标准/ BPEL/ 引擎/ 无法解释/ 执行/ 包含/ 可变性/ 设计/ 的/ 服务/ 组装/ 规格/ 说明/ ./ 通过/ 对/ 标准/ BPEL/ 引擎/ ActiveBPEL/ [/ 16/ ]/ 的/ 复用/ 与/ 扩展/ ,/ 我们/ 开发/ 了/ 一个/ 支持/ VxBPEL/ 引擎/ VxBPELEngine/ ./ 下面/ 详细/ 讨论/ VxBPELEngine/ 设计/ 与/ 实现/ 的/ 关键问题/ ./ 3.1/ VxBPELEngine/ 的/ 基本原理/ 基于/ 可变性/ 设计/ 的/ 适应性/ 服务/ 组装/ 方法/ 的/ 基本原理/ 如图/ 5/ 所示/ ./ 首先/ ,/ 采用/ 标准/ 的/ BPEL/ 语言/ 描述/ 基本/ 的/ 业务/ 过程/ ,/ 得到/ 基本/ 的/ 服务/ 组装/ 规格/ 说明/ (/ BasicServiceCompositions/ )/ ;/ 然后/ ,/ 采用/ VxBPEL/ 中/ 的/ 可变性/ 构造/ 子/ 对/ 基本/ 的/ 服务/ 组装/ 规格/ 说明/ 实施/ 可变性/ 设计/ ,/ 得到/ 适应性/ 服务/ 组装/ 规格/ 说明/ (/ AdaptiveServiceCompositions/ )/ ./ 采用/ 该/ 方法/ 得到/ 的/ 服务/ 组装/ 规格/ 说明/ 中/ ,/ 不仅/ 包含/ 标准/ 的/ BPEL/ 元素/ ,/ 也/ 包含/ VxBPEL/ 设计/ 元素/ ./ 在/ 运行/ 时刻/ ,/ 适应性/ 服务/ 组装/ 引擎/ VxBPELEngine/ 根据/ 系统/ 可变性/ 配置/ ,/ 执行/ 不同/ 的/ 业务/ 过程/ ./ 图/ 5/ 基于/ 可变性/ 设计/ 的/ 适应性/ 服务/ 组装/ 方法/ 为了/ 解释/ 与/ 执行/ 服务/ 组装/ 规格/ 中/ 可变性/ 设计/ 构造/ 子/ ,/ 必须/ 对/ 已有/ BPEL/ 引擎/ 进行/ 扩展/ ./ 图/ 6/ 示意/ 了/ VxBPELEngine/ 解释/ 执行/ 含/ 可变性/ 设计/ 的/ 服务/ 组装/ 规格/ 说明/ 的/ 基本原理/ ./ 这里/ 我们/ 采用/ 了/ “/ 统一/ 存储/ ,/ 分别/ 解释/ ”/ 的/ 思想/ 解释/ 与/ 执行/ VxPBEL/ 元素/ ./ 其中/ ,/ BPEL/ 解释器/ 负责/ 解释/ 标准/ BPEL/ 元素/ ;/ VxBPEL/ 解释器/ 负责/ 解释/ VxBPEL/ 元素/ ./ VxBPE/ -/ LEngine/ 是/ 一个/ 解释/ 型/ 编译系统/ ,/ VxBPEL/ 解释器/ 的/ 设计/ 与/ 实现/ 遵循/ 了/ 图/ 1/ 所示/ 的/ 可变性/ 管理/ 框架/ 元/ 模型/ ./ 首先/ ,/ VxBPELEngine/ 构造/ 活动/ 定义/ 层次结构/ 图/ ,/ 解析/ 构成/ 过程/ 的/ 活动/ 以及/ 活动/ 之间/ 的/ 依赖/ 关系/ ./ 过程/ 定义/ 解析器/ 读取/ 过程/ 定义/ (/ 即/ VxBPEL/ 描述/ 的/ 服务/ 组装/ 规格/ 说明/ )/ ,/ 并/ 负责/ 解析/ 任务/ 的/ 分发/ ./ 具体说来/ ,/ 如果/ 当前/ 读取/ 的/ 过程/ 定义/ 元素/ 属于/ 标准/ 的/ BPEL/ 元素/ ,/ 则/ 分/ 发给/ 标准/ 的/ BPEL/ 解释器/ ;/ 如果/ 属于/ VxBPEL/ 定义/ 的/ 可变性/ 构造/ 子/ 元素/ ,/ 则/ 分/ 发给/ VxBPEL/ 解释器/ ./ 标准/ 的/ BPEL/ 解释器/ 和/ VxBPEL/ 解释器/ 依据/ 活动/ 定义/ 创建/ 相应/ 的/ 活动/ 对象/ ./ 过程/ 定义/ 解析/ 完成/ 后/ ,/ VxBPELEngine/ 将/ 存储/ 过程/ 的/ 活动/ 定义/ 层次结构/ ,/ 并/ 依此/ 进行/ 随后/ 的/ 过程/ 部署/ 、/ 执行/ 以及/ 运行/ 时/ 重新配置/ ./ 3.2/ VxBPELEngine/ 的/ 设计/ 目前/ 存在/ 多个/ 版本/ 的/ BPEL/ 引擎/ ,/ 具有/ 代表性/ 的/ 包括/ ActiveBPEL/ 、/ ApacheODE/ 、/ IBMWebSphereProcessServer/ 、/ MicrosoftBizTalkServer/ 、/ JBossjBPM/ 等/ ./ 其中/ ,/ ActiveBPEL/ 是/ 一个/ 支持/ BPEL/ 规范/ 的/ 开源/ 流程/ 引擎/ ,/ 具有/ 良好/ 的/ 结构/ 和/ 实现/ 方式/ ./ 我们/ 选择/ 基于/ ActiveBPEL/ 引擎/ 设计/ 与/ 实现/ VxBPE/ -/ LEngine/ ,/ 在/ 设计/ VxBPELEngine/ 时/ ,/ 遵循/ 的/ 设计/ 原则/ 是/ 在/ 不/ 改变/ 标准/ BPEL/ 引擎/ 结构/ 的/ 前提/ 下/ ,/ 最大/ 限度/ 保留/ 和/ 复用/ ActiveBPEL/ 引擎/ 机制/ ./ 图/ 7/ 示意/ 了/ VxBPELEngine/ 的/ 架构/ ./ (/ 1/ )/ 右侧/ 部分/ 包含/ 了/ 用于/ 存储/ 过程/ 的/ 相关/ 文件/ 和/ 信息/ ./ DeploymentPlans/ (/ 部署/ 计划/ )/ 保存/ 过程/ 部署/ 描述/ 文件/ (/ ./ pdd/ )/ 、/ 业务/ 过程/ 执行/ 文件/ (/ ./ bpel/ )/ 、/ WebPage5/ 服务/ 描述/ 文件/ (/ ./ wsdl/ )/ 以及/ Partner/ 文件/ ;/ ProcessState/ (/ 过程/ 状态/ )/ 记录/ 过程/ 的/ 状态/ ,/ 如所/ 需/ 消息/ 是否/ 到来/ 、/ 当前/ 活动/ 是否/ 执行/ 完毕/ 等/ ;/ Queues/ (/ 队列/ )/ 和/ Alarms/ (/ 警报/ )/ 用于/ 消息/ 的/ 管理/ ./ (/ 2/ )/ 核心/ 部分/ 是/ BPELProcessor/ ./ 该/ 模块/ 通过/ ProcessCreation/ &/ Management/ (/ 采用/ 易于/ 扩展/ 的/ 工厂/ 设计模式/ 实现/ ,/ 能够/ 支持/ 不同/ 版本/ 的/ BPEL/ 过程/ )/ 管理/ 引擎/ 的/ 创建/ 、/ 调用/ QueuesandAlarms/ (/ 队列/ 与/ 警报/ 管理/ 服务/ )/ 和/ TimerService/ (/ 计时/ 服务/ )/ 管理/ 相应/ 的/ 服务/ ,/ 采用/ 过程/ 配置/ 使得/ 引擎/ 的/ 各项/ 职责/ 互相/ 分离/ ./ BPELProcessor/ 首先/ 从/ DeploymentPlans/ 中/ 提取/ BPEL/ 文件/ ,/ 传递/ 给/ ProcessCreation/ &/ Management/ 单元/ ,/ 后者/ 依据/ BPEL/ 树形/ 结构/ 创建/ 数据结构/ ,/ 配置/ 相应/ 属性/ ./ 通过/ 读取/ aeEngineConfig/ ./ xml/ 文件/ 实现/ 引擎/ 的/ 配置/ 处理/ ./ 该/ 文件/ 描述/ 了/ 缓存/ 的/ 大小/ 和/ 日志/ 状态/ ,/ 决定/ 了/ 队列/ 和/ 警报/ 管理/ 服务/ 、/ 流程/ 管理器/ (/ Manager/ )/ 、/ 部署/ 日志/ 、/ 部署/ 处理器/ (/ DeploymentHandler/ )/ 等/ 启动/ 位置/ ./ (/ 3/ )/ 一些/ 辅助/ 模块/ 包括/ :/ AdminandEvent/ 图/ 7VxBPELEngine/ 架构/ VxBPELEngine/ 按照/ 特定/ 的/ 顺序/ 执行/ 过程/ 中/ 的/ 各个/ 活动/ ,/ 具体/ 的/ 运行/ 过程/ 如图/ 8/ 所示/ ./ 首先/ ,/ BPELProcessor/ 根据/ VxBPEL/ 活动/ 定义/ (/ Deploy/ -/ mentPlans/ )/ ,/ 开始/ 进行/ 过程/ 实例/ Process/ 的/ 创建/ (/ 步骤/ 1/ 和/ 2/ )/ ./ 活动/ 定义/ (/ 包含/ 活动/ 之间/ 的/ 层次/ 关系/ )/ 以/ 数据流/ 形式/ 传给/ ProcessCreation/ &/ Management/ (/ 步骤/ 3/ )/ ,/ BPEL/ 活动/ 依据/ 其/ 活动/ 定义/ 创建活动/ 执行/ 对象/ ,/ VxBPEL/ 活动/ 通过/ 查询/ 可变性/ 配置/ 信息/ Configuration/ (/ 步骤/ 4/ 和/ 5/ )/ ,/ 选取/ 执行/ 方案/ ,/ 调用/ VxBPELManagement/ 完成/ 含/ 可变性/ 过程/ 的/ 活动/ 执行/ 对象/ 的/ 生成/ (/ 步骤/ 6/ )/ ./ 已/ 创建/ 的/ VxBPEL/ 活动/ 执/ Handling/ 模块/ 用于/ 引擎/ 、/ 事件/ 等/ 管理/ ,/ 主要/ 任务/ 是/ 管理/ 和/ 控制/ 引擎/ 、/ 确保/ 部署/ 的/ 流程/ 正常/ 执行/ 等/ ;/ PartnerAddressing/ 模块/ 为/ 业务流程/ 中/ 交互/ 的/ 每个/ 伙伴/ (/ partner/ )/ 提供/ 寻址/ 信息/ (/ 即/ Endpointreference/ )/ ./ 寻址/ 信息/ 存储/ 在/ 部署/ 描述符/ 、/ 消息/ 上下文/ 或者/ 伙伴/ 定义/ 对象/ 中/ ;/ Manager/ 模块/ 管理/ 各种/ 存储/ 结构/ ,/ 包括/ 流程/ 管理者/ (/ 用于/ 管理/ 流程/ 的/ ,/ 如/ 获取/ 流程/ ID/ 、/ 创建/ 业务流程/ 等/ )/ 和/ 队列/ 管理者/ (/ 用于/ 管理/ 到来/ 的/ 数据/ 和/ 已经/ 被/ 执行/ 却/ 正在/ 等待/ 数据/ 的/ 活动/ )/ ./ (/ 4/ )/ 在/ ProcessCreation/ &/ Management/ 单元/ 中/ 加入/ VxBPELManagement/ 模块/ ,/ 用于/ 处理/ 变异/ 点/ 和/ 变体/ 等/ VxBPEL/ 元素/ ./ 由于/ 每个/ 变异/ 点/ 如何/ 选择/ 变体/ 取决于/ VxBPEL/ 文件/ 中/ 的/ 可变性/ 配置/ ,/ 为此/ ,/ 增加/ 一个/ Configuration/ 模块/ ./ 该/ 模块/ 负责/ 读取/ 与/ 分析/ VxBPEL/ 文件/ 中/ 的/ 可变性/ 配置/ 信息/ ./ VxBPELManagement/ 依据/ 可变性/ 配置/ 信息/ 选择/ 变体/ ,/ 创建/ 相应/ 的/ 过程/ ./ 创建/ 后/ 的/ BPEL/ 过程/ 是/ 标准/ 的/ BPEL/ 过程/ (/ VxBPEL/ 元素/ 已/ 被/ 消解/ )/ ./ 在/ 运行/ 时刻/ ,/ 通过/ Con/ -/ figuration/ 模块/ 更改/ 可变性/ 配置/ 实现/ 运行/ 时/ 可/ 配置/ ./ 行/ 对象/ 结合/ 已有/ BPEL/ 活动/ 执行/ 对象/ ,/ 完成/ 对/ Process/ 的/ 创建/ (/ 步骤/ 7/ )/ ./ Process/ 由/ 一组/ 活动/ 执行/ 对象/ Activity/ 组成/ ,/ Process/ 经过/ 分析/ 分解/ 为/ 特定/ 顺序/ 的/ 活动/ 队列/ (/ 步骤/ 8/ )/ ,/ 生成/ 的/ 活动/ 队列/ 存储/ 在/ Queues/ 和/ Alarms/ 中/ (/ 步骤/ 9/ )/ ./ 根据/ 过程/ 状态/ (/ ProcessState/ )/ (/ 如/ 要/ 判断/ 执行/ 活动/ 的/ 所/ 需/ 消息/ 是否/ 到来/ 、/ 该/ 活动/ 是否/ 执行/ 完毕/ 等/ )/ (/ 步骤/ 10/ 和/ 11/ )/ ,/ 选择/ BPELProcessor/ 执行/ 活动/ 的/ 下/ 一步/ 动作/ (/ 步骤/ 11/ )/ ./ 其中/ ,/ Alarms/ 存储/ pick/ 等/ 活动/ ,/ 该类/ 活动/ 需要/ 等待/ 某个/ 具体/ 事件/ 发生/ (/ 如/ 基于/ 计时器/ 的/ 警报/ 信号/ )/ ,/ 从而/ 处理/ 所/ 指定/ 的/ 活动/ ./ Page6/ 图/ 8VxBPELEninge/ 的/ 运行/ 过程/ 3.3/ VxBPELEngine/ 实现/ 的/ 关键问题/ 为了/ 不/ 改变/ ActiveBPEL/ 引擎/ 的/ 结构/ ,/ 增加/ 了/ 一个/ 可变性/ 处理/ 类/ (/ VarConfInfo/ )/ ,/ 记录/ VxBPEL/ 过程/ 定义/ 中/ 的/ 可变性/ 设计/ 与/ 配置/ 信息/ ./ 通过/ 修改/ ActiveBPEL/ 的/ 配置文件/ aeEngineConfig/ ./ xml/ ,/ 实现/ 对/ 相关/ 可变性/ 元素/ 的/ 管理/ ./ 可变性/ 元素/ 的/ 识别/ 可以/ 通过/ 名字/ 空间/ 进行/ 区分/ ./ 例如/ ,/ 〈/ VXSpace/ :/ Variant/ 〉/ 中/ “/ VXSpace/ ”/ 给出/ 了/ “/ Variant/ ”/ 类型定义/ 的/ 名字/ 空间/ ./ (/ 1/ )/ VxBPEL/ 元素/ 的/ 解释/ 与/ 部署/ 当/ ActiveBPEL/ 引擎/ 读入/ 一个/ 活动/ 后/ ,/ 调用/ 过程/ 模型/ 的/ 活动/ 定义/ (/ ActivityDefinition/ )/ ,/ 根据/ 过程/ 定义/ 为/ 其/ 创建/ 一个/ 对象/ ./ 活动/ 定义/ 包含/ 了/ BPEL/ 活动/ 的/ 执行/ 对象/ (/ 即/ 活动/ 定义/ 类/ 的/ 实例/ 化/ 对象/ )/ 所/ 需/ 的/ 相关/ 信息/ ./ 引擎/ 和/ 事件/ 监听/ 模块/ 在/ 必要/ 的/ 时候/ 访问/ 相应/ 的/ 活动/ 定义/ ./ 为了/ 能够/ 处理/ VxBPEL/ 元素/ ,/ 必须/ 扩展/ 相关/ 的/ 活动/ 定义/ 、/ 创建/ 阅读器/ (/ Reader/ )/ ./ VxBPEL/ 解释器/ 依据/ 该/ VxBPEL/ 元素/ 的/ 活动/ 定义/ 模型/ 创建/ 相应/ 的/ 执行/ 对象/ ./ 处理/ VxBPEL/ 变异/ 点时/ ,/ 根据/ 可变性/ 配置/ 信息/ 在/ 一次/ 执行/ 过程/ 中/ 选择/ 一图/ 9VxBPEL/ 过程/ 定义/ 的/ 读取/ 与/ 部署/ 原理图/ 个/ 变体/ ./ 在/ 扩展/ VxBPEL/ 元素/ 的/ 活动/ 定义/ 与/ 阅读器/ 时/ ,/ 遵循/ 了/ ActiveBPEL/ 的/ 设计/ 思想/ ,/ 即/ 采用/ 访问者/ (/ Visitor/ )/ 设计模式/ 为/ VxBPEL/ 元素/ 定义/ 活动/ 定义/ 与/ 创建/ 执行/ 对象/ ,/ 实现/ 对/ ActiveBPEL/ 引擎/ 的/ 无缝/ 扩展/ ./ (/ 2/ )/ VxBPEL/ 元素/ 的/ 正确性/ 验证/ 在/ 执行/ VxBPEL/ 规格/ 说明/ 之前/ ,/ VxBPELEngine/ 引擎/ 首先/ 验证/ VxBPEL/ 过程/ 定义/ 是否/ 正确/ 、/ 是否/ 遵循/ 规范/ ./ ActiveBPEL/ 引擎/ 中/ 提供/ 了/ 对/ 标准/ BPEL/ 过程/ 定义/ 的/ 检测/ 机制/ ,/ 包括/ 对/ 结构化/ 活动/ 首个/ 子/ 元素/ 的/ 检测/ 、/ 基本/ 活动/ 语法/ 是否/ 符合/ 规格/ 说明/ 、/ 是否/ 创建/ 实例/ 检测/ 等/ ./ VxBPELEngine/ 复用/ 了/ ActiveBPEL/ 引擎/ 检验/ 机制/ ,/ 增加/ 了/ 对/ 过程/ 定义/ 中/ 可变性/ 设计/ 与/ 配置/ 的/ 定义/ 是否/ 遵循/ VxBPEL/ 规范/ 的/ 检测/ ,/ 修改/ 了/ 对/ 结构化/ 活动/ 的/ 子/ 元素/ 的/ 检测/ 机制/ ./ 例如/ ,/ 〈/ VariationPoint/ 〉/ 能够/ 存在/ 于/ 〈/ flow/ 〉/ 、/ 〈/ sequence/ 〉/ 等/ 结构化/ 活动/ 中/ ,/ 通过/ 扩展/ 检测/ 结构化/ 活动/ 子/ 元素/ 的/ 检测/ 机制/ ,/ 实现/ 对/ VxBPEL/ 过程/ 定义/ 的/ 正确性/ 进行/ 验证/ ./ (/ 3/ )/ 运行/ 时/ 可变性/ 配置/ 实现/ 实现/ 运行/ 时/ 可变性/ 配置/ 的/ 关键/ 之/ 处/ 在于/ 如何/ 读取/ 与/ 部署/ VxBPEL/ 元素/ ,/ 其/ 原理/ 如图/ 9/ 所示/ ./ 首先/ ,/ Page7/ 读取/ VxBPEL/ 过程/ 定义/ ,/ 按照/ VxBPEL/ 规格/ 说明/ 的/ 层次/ 关系/ 创建/ 过程/ 实例/ 对象/ ,/ 即/ 活动/ 定义/ 层次结构/ (/ 图/ 中间/ 部分/ )/ ./ 初次/ 读取/ 与/ 部署/ 过程/ 时/ ,/ 可变性/ 处理/ 类/ (/ VarConfInfo/ )/ 记录/ 了/ 过程/ 实例/ 的/ 过程/ 定义/ 和/ 部署/ 信息/ ./ 部署/ 时/ ,/ VxBPEL/ 解释器/ 通过/ 解析/ 可变性/ 配置/ ,/ 将/ VxBPEL/ 扩展/ 部分/ 的/ 活动/ 定义/ 转换/ 为/ 标准/ BPEL/ 过程/ 的/ 执行/ 对象/ 形式/ (/ 图/ 右边/ 部分/ )/ ./ 为了/ 支持/ 用户/ 需求/ 的/ 改变/ ,/ 可以/ 借助/ MX4J/ 或者/ JConsole/ 技术/ 修改/ VxBPEL/ 过程/ 的/ 可变性/ 配置/ ./ 依据/ 新/ 的/ 配置/ 方案/ ,/ 重新部署/ VxBPEL/ 过程/ 定义/ ./ 这里/ 提出/ 的/ 适应性/ 方法/ ,/ 从/ 服务/ 组装/ 规格/ 说明/ 层次/ 上/ 解决/ 适应性/ 问题/ ,/ 具有/ “/ 一次/ 设计/ 、/ 多次/ 运行/ ”/ 等/ 优点/ ./ 4/ 实例/ 研究/ 通过/ 对/ ActiveBPEL5/ ./ 0.2/ 的/ 复用/ 与/ 扩展/ ,/ VxBPELEngine/ 支持/ BPEL4WS1/ ./ 1/ 与/ WS/ -/ BPEL2/ ./ 0/ ./ VxBPELEngine/ 可以/ 运行/ 在/ 任何/ JavaServlet/ 容器/ 中/ ,/ 包含/ 102270/ 行/ Java/ 代码/ (/ 其中/ VxBPEL/ 解释器/ 的/ 代码/ 行数/ 为/ 1224/ )/ ./ 下面/ ,/ 我们/ 采用/ 两个/ 实例/ 系统/ 示例/ 与/ 验证/ 基于/ 可变性/ 设计/ 的/ 适应性/ 服务/ 组装/ 方法/ 的/ 可行性/ ,/ 对/ VxBPELEngine/ 的/ 时间/ 性能/ 与/ 可扩展性/ 进行/ 评估/ ./ 4.1/ 贷款/ 核准/ LoanApproval/ 在/ 贷款/ 核准/ 场景/ 中/ [/ 4/ ]/ ,/ 用户/ 通过/ 一个/ 服务/ 端口/ partnerLink/ =/ "/ customer/ "/ portType/ =/ "/ apns/ :/ loanApprovalPT/ "/ variable/ =/ "/ request/ "/ 〉/ partnerLink/ =/ "/ customer/ "/ portType/ =/ "/ apns/ :/ loanApprovalPT/ "/ variable/ =/ "/ request/ "/ 〉/ 图/ 10/ 贷款/ 核准/ 服务/ 中/ 基于/ VxBPEL/ 的/ 可变性/ 设计/ 发送/ 贷款/ 请求/ (/ 包括/ 个人信息/ 与/ 贷款/ 数量/ )/ ./ 依据/ 贷款/ 请求/ 信息/ ,/ 贷款/ 核准/ 服务/ 执行/ 业务/ 审批/ 流程/ 后/ ,/ 返回/ “/ 贷款/ 成功/ ”/ 或者/ “/ 贷款/ 失败/ ”/ ./ 影响/ 贷款/ 请求/ 是否/ 通过/ 的/ 因素/ ,/ 包括/ 贷款/ 数量/ 与/ 客户/ 的/ 风险/ 值/ ./ 对于/ 贷款/ 数量/ 小/ (/ 低于/ 10000/ )/ 或/ 低/ 风险/ 客户/ ,/ 贷款/ 核准/ 自动/ 通过/ 贷款/ 请求/ ;/ 对于/ 贷款/ 数量/ 较大/ 且/ 高风险/ 客户/ ,/ 贷款/ 核准/ 程序/ 相对/ 复杂/ ./ 因此/ ,/ 处理/ 贷款/ 请求/ 时/ ,/ 贷款/ 核准/ 服务/ 首先/ 调用/ “/ 风险/ 评估/ ”/ 服务/ 快速/ 评估/ 客户/ 风险/ 值/ ;/ 对于/ 无法/ 自动/ 通过/ 核准/ 的/ 贷款/ 请求/ ,/ 需要/ 启动/ 全面/ 的/ 核准/ 程序/ ,/ 调用/ “/ 贷款/ 评审/ ”/ 服务/ 对/ 贷款/ 请求/ 进行/ 深度/ 评估/ ./ 采用/ Web/ 服务/ 组装/ 实现/ 上述/ 贷款/ 核准/ 服务/ 时/ ,/ 牵涉到/ 客户/ 一些/ 重要/ 个人信息/ ./ 该/ 服务/ 应该/ 提供/ 不同/ 的/ 访问/ 模式/ ,/ 例如/ ,/ 对于/ 普通/ 的/ 贷款/ 请求/ ,/ 提供/ 默认/ 访问/ 模式/ ;/ 对于/ 大/ 额度/ 的/ 贷款/ 请求/ ,/ 提供/ 加密/ 模式/ ./ 采用/ VxBPEL/ 实现/ 上述/ 服务/ 组装/ 时/ ,/ 可/ 将/ 访问/ 模式定义/ 为/ 变异/ 点/ ,/ 使用/ 〈/ vxbpel/ :/ VariationPoint/ 〉/ 进行/ 封装/ ./ 两个/ 变体/ 分别/ 为/ 默认/ 模式/ 与/ 加密/ 模式/ ,/ 使用/ 〈/ vxbpel/ :/ Variant/ 〉/ 定义/ ,/ 变体/ 名称/ 分别/ 为/ “/ default/ ”/ 和/ “/ encryption/ ”/ ./ 图/ 10/ 示意/ 了/ 含/ 可变性/ 设计/ 的/ 贷款/ 核准/ 服务/ 的/ 服务/ 组装/ 规格/ 说明/ ./ 通过/ JConsole/ (/ 图/ 11/ )/ 修改/ 可变性/ 配置/ (/ 图/ 12/ )/ ,/ 在/ 运行/ 时刻/ VxBPELEngine/ 执行/ 不同/ 的/ BPEL/ 过程/ 场景/ ./ 图/ 13/ 和/ 图/ 14/ 分别/ 示意/ 了/ 默认/ 访问/ 模式/ 和/ 加密/ 模式/ 下/ 的/ 执行/ 场景/ ./ Page8/ 图/ 11/ 借助/ JConsole/ 修改/ 运行/ 时/ 可变性/ 配置/ 示意图/ 〈/ vxbpel/ :/ ConfigurableVariationPointid/ =/ "/ encryption/ "/ defaultVariant/ =/ "/ unencrypted/ "/ 〉/ Itispossibletoconfiguretheloanapprovalprocesstosupportencryption/ ./ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ receive/ "/ variant/ =/ "/ default/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ approver/ "/ variant/ =/ "/ default/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ assessor/ "/ variant/ =/ "/ default/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ reply/ "/ variant/ =/ "/ default/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ assign/ "/ variant/ =/ "/ default/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ receive/ "/ variant/ =/ "/ encryption/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ approver/ "/ variant/ =/ "/ encryption/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ assessor/ "/ variant/ =/ "/ encryption/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ reply/ "/ variant/ =/ "/ encryption/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ assign/ "/ variant/ =/ "/ encryption/ "/ // 〉/ 图/ 12/ 贷款/ 核准/ 服务/ 中/ 可变性/ 配置/ 的/ VxBPEL/ 规格/ 说明/ Page94/ ./ 2/ 智能/ 货架/ SmartShelf/ 在/ 智能/ 货架/ 系统/ SmartShelf/ [/ 17/ ]/ 中/ ,/ 客户/ (/ Con/ -/ sumer/ )/ 向/ SmartShelf/ 发送/ 购物/ 请求/ (/ 包括/ 物品/ 名称/ 和/ 数量/ )/ ,/ 接受/ 请求/ 后/ SmartShelf/ 创建/ 服务/ 时间/ ,/ 记录/ 物品/ 数量/ ,/ 根据/ 物品/ 信息/ 读取/ 物品/ 所属/ 货物/ 类别/ 名称/ ,/ 读取/ 该/ 物品/ 的/ 保质期/ ./ 读取/ 结束/ 后/ ,/ 检查/ 物品/ 数量/ 、/ 位置/ 和/ 保质期/ ./ 具体说来/ ,/ (/ 1/ )/ 检查/ 物品/ 数量/ 时/ :/ 当/ 货架/ 物品/ 数量/ 满足要求/ 时/ ,/ 停止/ 数量/ 检查/ ;/ 当/ 货架/ 物品/ 数量/ 不足/ 时/ ,/ 通知/ WarehouseManager/ 检查/ 仓库/ 存货/ :/ ①/ 存货/ 充足/ 时/ ,/ 通知/ Carrier/ 将/ 物品/ 搬运/ 至/ 货架/ ;/ ②/ 存货/ 不足/ 时/ ,/ 通知/ Staff/ 进行/ 进货/ ;/ ③/ 更新/ 产品目录/ ;/ (/ 2/ )/ 检测/ 物品/ 位置/ 时/ :/ 如果/ 物品/ 位置/ 摆放/ 正确/ ,/ 停止/ 检测/ ;/ 否则/ ,/ 调整/ 物品/ 位置/ ;/ (/ 3/ )/ 检测/ 物品/ 保质期/ 时/ :/ 如果/ 没有/ 过期/ ,/ 停止/ 检测/ ;/ 否则/ ,/ 给/ Warehouse/ 发送/ 消息/ ,/ Warehouse/ 收到/ 消息/ 后/ 更换/ 货架/ 产品/ ./ 当/ 数量/ 、/ 位置/ 、/ 保质期/ 均/ 符合条件/ 时/ ,/ 系统/ 向/ Consumer/ 发送/ 确认/ 消息/ ;/ 否则/ ,/ 向/ Consumer/ 发送/ 相应/ 的/ 失败/ 消息/ ,/ 取消/ 订单/ ./ 与/ 贷款/ 核准/ 服务/ LoanApproval/ 相比/ ,/ 智能/ 货/ 〈/ invokename/ =/ "/ WarehouseManager/ "/ partnerLink/ =/ "/ WarehouseManagerPL/ "/ portType/ =/ "/ man/ :/ WarehouseManagerPT/ "/ operation/ =/ "/ WarehouseManager/ "/ 〈/ invokename/ =/ "/ AlertStaff/ "/ partnerLink/ =/ "/ SendOrderToStaffPL/ "/ 〈/ invokename/ =/ "/ UpdateInventory/ "/ partnerLink/ =/ "/ UpdateInventoryPL/ "/ portType/ =/ "/ update/ :/ UpdateInventoryPT/ "/ operation/ =/ "/ UpdateInventory/ "/ 图/ 15SmartShelf/ 系统/ 中/ 基于/ VxBPEL/ 的/ 可变性/ 设计/ 架/ 系统/ SmartShelf/ 中/ 的/ 业务流程/ 更加/ 复杂/ ./ 一般/ 情形/ 下/ ,/ 订单/ 的/ 处理/ 需要/ 进行/ 多方面/ 的/ 检测/ ;/ 当/ Ware/ -/ house/ 存货/ 不足/ 时/ ,/ 无需/ 进行/ 货物/ 位置/ 与/ 过期/ 方面/ 的/ 检测/ ./ 采用/ BPEL/ 进行/ 实现/ 上述/ 复杂/ 流程/ 时/ ,/ 服务/ 组装/ 规格/ 说明/ 中将/ 出现/ 多层/ 条件/ 语句/ 的/ 嵌套/ ,/ 存在/ 服务/ 组装/ 规格/ 说明/ 可读性/ 差/ 、/ 维护/ 困难/ 、/ 难于/ 适应/ 变化/ 的/ 业务/ 需求/ 等/ 缺点/ ./ 采用/ VxBPEL/ 实现/ SmartShelf/ 可以/ 有效/ 地/ 克服/ 上述/ 不足之处/ ./ 具体说来/ ,/ 将/ 条件/ 判断/ 地方/ 设置/ 为/ 变异/ 点/ ,/ 将/ 不同/ 情况/ 下/ 的/ 操作/ 设置/ 为/ 变体/ ,/ 采用/ 可变性/ 配置/ 指明/ 不同/ 变体/ 之间/ 的/ 依赖/ 关系/ ./ 采用/ 服务/ 组装/ 实现/ 系统/ 时/ ,/ 创建/ 服务/ 时间/ 、/ 记录/ 物品/ 交易/ 数量/ 、/ 根据/ 物品/ 信息/ 读取/ 物品/ 所属/ 货物/ 类别/ 名称/ 、/ 读取/ 物品/ 保质期/ 等/ 步骤/ 存在/ 不同/ 的/ 处理/ 方式/ ,/ 应/ 设置/ 为/ 变异/ 点/ ./ 例如/ ,/ 创建/ 服务/ 时间/ (/ 变异/ 点/ )/ 可以/ 有/ 系统/ 自动/ 设置/ (/ SetupTime/ )/ 或/ 人工/ 设置/ (/ StaffSetupTime/ )/ 两种/ 实现/ 方式/ (/ 即/ 变体/ )/ ./ 图/ 15/ 示意/ 了/ 该/ 系统/ 部分/ 变异/ 点/ 的/ VxBPEL/ 设计/ ,/ 其中/ 变异/ 点/ “/ CheckQuality/ ”/ 中/ 包含/ 了/ 变异/ 点/ Page10/ “/ sendorder/ ”/ ./ 作为/ 示例/ ,/ 设置/ 如下/ 4/ 种/ 可变性/ 配置/ 方案/ :/ (/ 1/ )/ “/ default/ ”/ ./ 货架/ 货物/ 充足/ 、/ 位置/ 摆放/ 正确/ 、/ (/ 2/ )/ “/ staff/ ”/ ./ 初始/ 4/ 个/ 服务/ 均/ 采用/ 手动/ 完成/ ,/ 货/ (/ 3/ )/ “/ insufficient/ ”/ ./ 仓库/ 货物/ 不/ 充足/ ,/ 不/ 进行/ 位未/ 过期/ ./ 架/ 货物/ 充足/ 、/ 位置/ 摆放/ 正确/ 、/ 未/ 过期/ ./ 〈/ vxbpel/ :/ ConfigurableVariationPointid/ =/ "/ smartshelf/ "/ defaultVariant/ =/ "/ default/ "/ 〉/ Itispossibletoconfigurethesmartshelfprocesstosupportvariability/ ./ 〈/ vxbpel/ :/ VariantInfo/ 〉/ DifferentvariationconfigurationofSmartshelf/ ./ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ setuptime/ "/ variant/ =/ "/ default/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ warehouse/ "/ variant/ =/ "/ quantity/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ sendorder/ "/ variant/ =/ "/ default/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ rearrange/ "/ variant/ =/ "/ empty/ "/ // 〉/ 〈/ vxbpel/ :/ VPChoicevpname/ =/ "/ returnstatus/ "/ variant/ =/ "/ empty/ "/ // 〉/ 图/ 16/ “/ insufficient/ ”/ 可变性/ 配置/ 方案/ 的/ VxBPEL/ 规格/ 说明/ 4.3/ VxBPELEngine/ 性能/ 评估/ 为了/ 便于/ 度量/ VxBPELEngine/ 时间/ 性能/ ,/ 对/ 实验/ 进行/ 了/ 简化/ :/ (/ 1/ )/ 为了/ 减少/ 通讯/ 对/ 过程/ 执行/ 时间/ 的/ 影响/ ,/ 服务/ 组装/ 中/ 调用/ 的/ 所有/ Web/ 服务/ 与/ 过程/ 部署/ 在/ 同一/ 台/ 计算机/ 上/ ;/ (/ 2/ )/ 为了/ 减少/ 业务/ 过程/ 的/ 复杂性/ 对/ 过程/ 执行/ 时间/ 的/ 影响/ ,/ 简化/ 了/ Web/ 服务/ 的/ 相关/ 操作/ 的/ 实现/ ./ 表/ 1/ 和表/ 2/ 分别/ 总结/ 了/ 实验/ 环境/ 配置/ 与/ 两个/ 实例/ 系统/ 的/ 规模/ ./ CPU/ 内存/ 硬盘/ 系统/ 类型/ 操作系统/ 2.93/ ×/ 2GHz2GBytes1TBytes32/ 位/ Win7/ 系统/ 名称/ VxBPEL/ 代码/ 行/ 服务/ 数量/ 贷款/ 核准/ 智能/ 货架/ 为了/ 进一步/ 定量/ 测试/ 与/ 分析/ 可变性/ 部分/ 对/ 引擎/ 置/ 检测/ 和/ 保质期/ 检测/ ./ (/ 4/ )/ “/ sufficient/ ”/ ./ 货架/ 货物/ 不足/ 、/ 仓库/ 货物/ 充足/ 、/ 位置/ 摆放/ 错误/ 、/ 过期/ 需/ 更换/ 货物/ ./ 图/ 16/ 示例/ 了/ 可变性/ 配置/ 方案/ 为/ “/ insufficient/ ”/ 的/ VxBPEL/ 规格/ 说明/ ./ 通过/ MX4J/ 修改/ 可变性/ 配置/ ,/ 依据/ 可变性/ 配置/ ,/ VxBPELEngine/ 执行/ 不同/ 的/ 工作/ 流/ 场景/ ./ 性能/ 开销/ ,/ 我们/ 采用/ 标准/ 的/ BPEL/ 与/ VxBPEL/ 分别/ 实现/ 上述/ 两个/ 系统/ 的/ 业务/ 过程/ ,/ 然后/ 比较/ ActiveB/ -/ PEL5/ ./ 0.2/ 与/ VxBPELEngine/ 执行/ 上述/ 过程/ 的/ 时间/ 开销/ ./ 这里/ 的/ 时间/ 开销/ 是/ 指/ 部署/ 时间/ 与/ 运行/ 时间/ 之/ 和/ ./ 运行/ 时间/ 与/ 部署/ 时间/ 都/ 取决于/ 服务/ 组装/ 规格/ 说明/ 的/ 复杂性/ ./ BPEL/ 与/ VxBPEL/ 的/ 规格/ 说明/ 的/ 部署/ 都/ 是/ 一次性/ 完成/ 的/ ,/ 部署/ 时间/ 包括/ 过程/ 定义/ 的/ 读取/ 时间/ 与/ 过程/ 部署/ 时间/ ./ 表/ 3/ 总结/ 与/ 比较/ 了/ ActiveBPEL5/ ./ 0.2/ 与/ VxB/ -/ PELEngine/ 执行/ 贷款/ 核准/ 系统/ LoanApproval/ 的/ 时间/ 开销/ ./ 该/ 系统/ 部署/ 了/ 3/ 个/ 服务/ ,/ 分别/ 为/ LoanApproval/ 、/ LoanAssessor/ 和/ Encryption/ ./ 在/ 不/ 加密/ (/ Unencryp/ -/ tion/ )/ 情形/ 下/ ,/ 风险/ 评估/ 的/ 起始值/ 为/ 1000/ ;/ 在/ 加密/ (/ Encryption/ )/ 情形/ 下/ ,/ 风险/ 评估/ 的/ 起始值/ 调整/ 为/ 10000/ ./ 在/ 不/ 加密/ 情形/ 下/ ,/ 当/ 贷款/ 金额/ 小于/ 1000/ 时/ ,/ 仅/ 调用/ LoanApproval/ 服务/ ;/ 当/ 贷款/ 金额/ 大于/ 等于/ 1000/ 时/ ,/ 调用/ LoanApproval/ 和/ LoanAssessor/ 服/ Page11/ 务/ ./ 在/ 加密/ 情形/ 下/ ,/ 当/ 贷款/ 金额/ 小于/ 10000/ 时/ ,/ 调用/ LoanApproval/ 和/ Encryption/ 服务/ ;/ 当/ 贷款/ 金额/ 大于/ 等于/ 10000/ 时/ ,/ 调用/ LoanApproval/ 、/ LoanAssessor/ 表/ 3/ 采用/ BPEL/ 与/ VxBPEL/ 实现/ LoanApproval/ 的/ 时间/ 开销/ 与/ 性能/ 比较/ 开销/ // ms/ 工作/ 流/ 场景/ 名称/ 服务/ unencryption/ _/ noAssessor1unencryption/ _/ Assessor2encryption/ _/ noAssessor2encryption/ _/ Assessor/ 表/ 4/ 总结/ 与/ 比较/ 了/ ActiveBPEL5/ ./ 0.2/ 与/ VxB/ -/ PELEngine/ 执行/ 智能/ 货架/ 系统/ SmartShelf/ 的/ 时间/ 开销/ ./ 该/ 系统/ 部署/ 了/ 19/ 个/ 服务/ ,/ 运行/ 时刻/ 按照/ 不表/ 4/ 采用/ BPEL/ 与/ VxBPEL/ 实现/ SmartShelf/ 的/ 时间/ 开销/ 与/ 性能/ 比较/ BPEL/ 时间/ 开销/ // msshelfsuff/ _/ rightlocation/ _/ goodstatus8564654632shelfsuff/ _/ wronglocation/ _/ goodstatus9556646622shelfsuff/ _/ rightlocation/ _/ badstatus10562652644shelfsuff/ _/ wronglocation/ _/ badstatus11569658665staff/ _/ shelfsuff/ _/ rightlocation/ _/ goodstatus8555645635staff/ _/ shelfsuff/ _/ wronglocation/ _/ goodstatus9561651622staff/ _/ shelfsuff/ _/ rightlocation/ _/ badstatus10558648631staff/ _/ shelfsuff/ _/ wronglocation/ _/ badstatus11575665669warehousesuff/ _/ rightlocation/ _/ goodstatus11571661633warehousesuff/ _/ wronglocation/ _/ goodstatus12577667631warehousesuff/ _/ rightlocation/ _/ badstatus13576666648warehousesuff/ _/ wronglocation/ _/ badstatus14577667663insufficient9561651640/ 通过/ 上述/ 两个/ 实例/ 系统/ ,/ 展示/ 了/ 基于/ 可变性/ 设计/ 实现/ 适应性/ 服务/ 组装/ 方法/ ,/ 并且/ 评估/ 了/ VxBPE/ -/ LEngine/ 的/ 性能/ ./ 实验/ 结果/ 不仅/ 验证/ 了/ 所/ 提/ 适应性/ 服务/ 组装/ 方法/ 的/ 可行性/ ,/ 还/ 表明/ 本文/ 开发/ 的/ VxBPELEngine/ 引擎/ 具备/ 良好/ 的/ 时间/ 性能/ 与/ 可扩展性/ ./ 具体说来/ :/ (/ 1/ )/ VxBPELEngine/ 在/ 处理/ 不同/ 类型/ 的/ 系统/ 时/ ,/ 均/ 表现/ 出/ 良好/ 的/ 性能/ ./ 具体说来/ ,/ 在/ 执行/ 贷款/ 核准/ 系统/ 时/ ,/ 可变性/ 引入/ 后/ 的/ 时间/ 开销/ 与/ 标准/ BPEL/ 过程/ 的/ 时间/ 开销/ 相当/ ;/ 在/ 执行/ 智能/ 货架/ 系统/ 时/ ,/ 可变性/ 引入/ 后/ 的/ 时间/ 开销/ 是/ 标准/ BPEL/ 过程/ 的/ 时间/ 开销/ 的/ 130/ %/ 左右/ ./ 进一步/ 分析/ 发现/ :/ VxBPELEngine/ 引擎/ 绝大部分/ 时间/ 用于/ 处理/ 标准/ 的/ BPEL/ 元素/ (/ 包括/ 读取/ 过程/ 定义/ 、/ 部署/ 过程/ 与/ 执行/ 活动/ )/ ./ 换言之/ ,/ VxBPELEngine/ 引擎/ 尽管/ 增加/ 了/ 可变性/ 定义/ 与/ 可变性/ 配置/ 的/ 读取/ 与/ 处理过程/ ,/ 与/ 标准/ 的/ BPEL/ 元素/ 的/ 处理/ 相比/ ,/ 相关/ 的/ 时间/ 开销/ 非常/ 小/ ./ (/ 2/ )/ VxBPELEngine/ 具有/ 良好/ 的/ 可扩展性/ ./ 一方面/ ,/ VxBPELEngine/ 可以/ 处理/ 简单/ 与/ 复杂/ 的/ 服务/ 和/ Encryption/ 服务/ ./ BPEL/ 过程/ 的/ 部署/ 时间/ 为/ 20ms/ ,/ 而/ VxBPEL/ 过程/ 的/ 部署/ 时间/ 为/ 37ms/ ./ VxBPEL/ 执行/ 时间/ // ms/ 同/ 情形/ 调用/ 相应/ 的/ Web/ 服务/ ./ BPEL/ 过程/ 的/ 部署/ 时间/ 为/ 90ms/ ,/ 而/ VxBPEL/ 过程/ 的/ 部署/ 时间/ 为/ 220ms/ ./ 组装/ 系统/ ./ 上述/ 实例/ 系统/ 中/ ,/ 简单/ 的/ 工作/ 流/ 场景/ 仅/ 调用/ 1/ 个/ Web/ 服务/ ,/ 复杂/ 的/ 工作/ 流/ 场景/ 调用/ 了/ 多达/ 14/ 个/ Web/ 服务/ ./ 另一方面/ ,/ 通过/ 扩展/ 最新/ 版本/ 的/ ActiveBPEL/ 引擎/ ,/ VxBPELEngine/ 能够/ 支持/ 多种/ BPEL/ 版本/ ./ (/ 3/ )/ ActiveBPEL/ 在/ 工业界/ 和/ 学术界/ 得到/ 广泛/ 认可/ 与/ 应用/ ,/ VxBPELEngine/ 是/ 通过/ 对/ ActiveB/ -/ PEL/ 的/ 复用/ 与/ 扩展/ 实现/ 的/ ,/ 继承/ 了/ ActiveBPEL/ 良好/ 的/ 结构/ 与/ 性能/ ,/ 因此/ VxBPELEngine/ 具备/ 较强/ 的/ 实用性/ ./ 5/ 相关/ 工作/ 下面/ 介绍/ 具有/ 代表性/ 的/ 适应性/ 服务/ 组装/ 方法/ 与/ 引擎/ ,/ 并/ 与/ 本文/ 工作/ 进行/ 比较/ ./ Charfi/ 和/ Mezini/ 对/ BPEL/ 进行/ 面向/ Aspect/ 的/ 扩充/ ,/ 开发/ 了/ AOBPEL/ [/ 18/ -/ 19/ ]/ ./ AOBPEL/ 借助/ 面向/ Aspect/ 的/ 编程/ 概念/ ,/ 将/ 业务/ 逻辑/ 作为/ 工作/ 流/ 的/ 主要/ 关注/ ,/ 而/ 将/ 相互/ 交错/ 的/ 其它/ 关注/ 说明/ 为/ 工作/ 流/ 的/ Page12Aspect/ ./ 由于/ 将/ 业务/ 逻辑/ 与/ 表达/ 不同/ 关注/ 的/ Aspect/ 分开/ 说明/ ,/ 在/ 编译/ 和/ 运行/ 时刻/ ,/ 必须/ 将/ 这些/ 分离/ 的/ 组装/ 规格/ 说明/ 编织/ 起来/ ./ AOBPEL/ 改进/ 了/ BPEL/ 的/ 模块化/ 支持/ ,/ 但/ 服务/ 组装/ 规格/ 说明/ 的/ 分散/ 和/ 杂乱/ 导致/ 维护/ 和/ 调试/ 非常/ 困难/ ./ Ezenwoye/ 和/ Sadjadi/ 提出/ 了/ 一个/ 在/ BPEL/ 过程/ 中/ 增加/ 自治/ 行为/ 的/ 框架/ TRAP/ // BPEL/ [/ 20/ ]/ ./ TRAP/ // BPEL/ 将/ 服务/ 组装/ 看成/ 是/ 一个/ 复合/ 服务/ ,/ 并/ 假设/ BPEL/ 用来/ 进行/ 组装/ 的/ 描述/ ./ 为了/ 增加/ 自治/ 能力/ ,/ 需要/ 对/ 已有/ 的/ BPEL/ 过程/ 进行/ 变换/ ,/ 并/ 增加/ 一个/ 通用/ 代理/ ./ 通用/ 代理/ 的/ 作用/ 是/ ,/ 当/ 一个/ 服务/ 失败/ 时/ ,/ 采用/ 一个/ 预先/ 定义/ 的/ 或/ 新/ 发现/ 的/ 服务/ 来/ 替换/ ./ TRAP/ // BPEL/ 通过/ 在/ 运行/ 时刻/ 监控/ 来自/ 通用/ 代理/ 的/ 错误/ 或/ 超时/ 事件/ ,/ 了解/ 对/ 各个/ 服务/ 的/ 调用/ 情况/ ./ 基于/ 代理/ 机制/ 可以/ 部分/ 解决/ 服务/ 组装/ 的/ 适应性/ ,/ 但/ 存在/ 一些/ 不足之处/ ,/ 如/ 导致/ 了/ 多个/ 版本/ 的/ 服务/ 组装/ 规格/ 说明/ 、/ 必须/ 为/ 各个/ Web/ 服务/ 配备/ 相应/ 的/ 代理/ ./ 李刚/ 等/ 人/ [/ 21/ ]/ 提出/ 了/ 一种/ 能够/ 透明/ 、/ 动态/ 地/ 按/ 需/ 使用/ 的/ 虚拟/ 服务/ 模型/ 及/ P2P/ 引擎/ ./ 通过/ 虚拟/ 服务/ 组装/ 运算/ 以及/ 服务/ 动态/ 查找/ 算法/ ,/ 虚拟/ 服务/ 模型/ 能够/ 较/ 好/ 地/ 适应/ 服务/ 失效/ 、/ 用户/ 位置/ 移动/ 等/ 网络/ 环境/ 的/ 变化/ ./ P2P/ 引擎/ 对/ 虚拟/ 服务/ 组装/ 提供/ 支持/ ,/ 实现/ 透明/ 地/ 、/ 按/ 需/ 使用/ 服务/ ./ 虚拟/ 服务/ 模型/ 及/ P2P/ 引擎/ 提升/ 了/ 动态/ 网络/ 环境/ 下/ 应用服务/ 适应性/ ,/ 但/ 受限于/ 对/ 未知/ 环境/ 中/ 服务/ 的/ 查找/ 与/ 组合/ ./ 成睿/ 星等/ 人/ [/ 22/ ]/ 提出/ 了/ 一种/ 基于/ 抽象/ 多重/ 服务/ 范例/ 的/ 适应/ 服务/ 组装/ 方法/ ./ 该/ 方法/ 用/ 阶层/ 式/ 抽象/ 服务/ 范例/ 的/ 概念/ 构造/ 多重/ 服务/ 范例/ ,/ 提供/ 一种/ 可/ 适应性/ 的/ 相似/ 度/ 测量/ 算法/ 来/ 选择/ 适合/ 调整/ 的/ 服务/ 范例/ ,/ 基于/ 调整/ 运算子/ 的/ 服务/ 范例/ 适应性/ 调整/ 方法/ 将/ 其/ 调整/ 成/ 满足用户/ 需求/ 的/ 服务/ 范例/ ./ 为了/ 提高/ 适应性/ 调整/ 成功率/ ,/ 服务/ 适应性/ 相似/ 度/ 测量方法/ 在/ 选择/ 服务/ 时/ 考虑/ 了/ 适应性/ 需求/ ,/ 降低/ 了/ 服务/ 调整/ 难度/ ./ 抽象/ 阶层/ 式/ 服务/ 减少/ 了/ 服务/ 组合/ 代价/ 和/ 人工/ 参与/ 程度/ ,/ 提升/ 了/ 服务/ 组合/ 自动化/ 程度/ ./ 在/ 服务/ 库/ 服务/ 数量/ 不足/ 、/ 服务/ 组合/ 成功/ 次数/ 有限/ 的/ 情形/ 下/ ,/ 服务/ 组合/ 成功率/ 会/ 大幅度降低/ ./ AdaptiveBPEL/ [/ 23/ ]/ 是/ 一个/ 将/ wsBus/ 和/ 面向/ Aspect/ 技术/ 结合/ 起来/ 的/ 适应性/ 服务/ 组装/ 框架/ ./ wsBus/ [/ 24/ ]/ 是/ 一个/ 消息中间件/ ,/ 引入/ 了/ 一个/ 虚拟/ 终端/ 的/ 概念/ ./ 由于/ 所有/ 的/ 消息/ 都/ 必须/ 经过/ 虚拟/ 终端/ 进行/ 路由/ 选择/ ,/ wsBus/ 可能/ 成为/ 了/ 服务/ 组装/ 运行/ 时刻/ 的/ 瓶颈/ ./ AdaptiveBPEL/ 将/ 不同/ QoS/ 关注/ 表达/ 为/ Aspect/ ,/ 运行/ 时刻/ 将/ Aspect/ 代码/ 和/ BPEL/ 过程/ 编织/ 起来/ ,/ 并/ 根据/ 事前/ 定义/ 的/ 策略/ ,/ 提供/ 不同/ QoS/ 的/ 服务/ 组装/ ./ AdaptiveBPEL/ 在/ 为/ 服务/ 组装/ 提供/ 了/ 灵活性/ 的/ 同时/ ,/ 也/ 继承/ 了/ 基于/ 代理/ 机制/ 和/ 基于/ Aspect/ 技术/ 的/ 不足之处/ ./ 文献/ [/ 25/ ]/ 对/ BPEL/ 引擎/ 进行/ 扩展/ ,/ 开发/ 了/ 一个/ 网格/ 服务/ 工作/ 流/ 引擎/ BPELFlowEngine/ ./ BPELFlowEngine/ 采用/ 分层/ 处理/ 机制/ ,/ 可以/ 调用/ Web/ 服务/ 、/ 网格/ 服务/ 以及/ 网格/ 调度/ 器/ ./ 引擎/ 执行/ 过程/ 实例/ 时/ 依据/ BPEL/ 标准/ 元素/ “/ invoke/ ”/ 属性/ 执行/ 相应/ 的/ 任务/ ./ VxBPELEngine/ 通过/ 名字/ 空间/ 区分/ 标准/ BPEL/ 元素/ 和/ VxBPEL/ 元素/ ,/ 采用/ 不同/ 的/ 解释器/ 对/ 过程/ 元素/ 进行/ 解释/ ./ 新增/ 的/ VxBPEL/ 解释器/ 负责/ VxBPEL/ 元素/ 的/ 读取/ 与/ 部署/ ,/ 经过/ VxBPEL/ 部署/ 后/ 的/ 过程/ 实例/ 为/ 标准/ BPEL/ 过程/ ./ 6/ 结束语/ 在/ 复用/ 与/ 扩展/ 标准/ BPEL/ 引擎/ ActiveBPEL/ 基础/ 上/ ,/ 开发/ 了/ 支持/ VxBPEL/ 过程/ 引擎/ VxBPE/ -/ LEngine/ ./ 为了/ 支持/ 服务/ 组装/ 中/ 的/ 可变性/ 设计/ ,/ VxB/ -/ PEL/ 对/ 标准/ 的/ 服务/ 组装/ 语言/ BPEL/ 进行/ 了/ 扩展/ ./ 由于/ VxBPEL/ 引入/ 新/ 的/ 活动/ 类型/ ,/ 标准/ 的/ BPEL/ 引擎/ 无法/ 执行/ 具有/ 可变性/ 设计/ 的/ BPEL/ 过程/ ,/ 本文/ 讨论/ 了/ VxBPELEngine/ 的/ 设计/ 与/ 实现/ 的/ 关键问题/ ,/ 通过/ 两个/ 实例/ 系统验证/ 了/ 基于/ 可变性/ 设计/ 的/ 适应性/ 服务/ 组装/ 方法/ 的/ 可行性/ ,/ 评估/ 了/ VxBPELEngine/ 的/ 性能/ ./ 围绕/ 适应性/ 服务/ 组装/ 方法/ 与/ 支持/ 平台/ 的/ 研究/ 比较/ 活跃/ ./ 已有/ 方法/ 试图/ 从/ 服务/ 组装/ 实现/ 层/ 探讨/ 服务/ 组装/ 实例/ 的/ 适应性/ 问题/ ,/ 存在/ 不易/ 实现/ 、/ 难于/ 维护/ 、/ 性能/ 差/ 等/ 缺点/ ./ 采用/ VxBPEL/ 设计/ 与/ 实现/ 的/ 适应性/ 服务/ 组装/ 时/ ,/ 首先/ 通过/ 使用/ VxBPEL/ 对/ 标准/ 的/ BPEL/ 过程/ 中/ 不/ 稳定/ 部分/ 实施/ 可变性/ 设计/ ,/ 并/ 设置/ 各种/ 可变性/ 配置/ 方案/ ./ VxBPELEngine/ 在/ 运行/ 时刻/ 解释/ 与/ 执行/ 可变性/ 配置/ ,/ 实现/ 灵活/ 的/ 业务/ 过程/ ./ 基于/ 可变性/ 设计/ 的/ 适应性/ 服务/ 组装/ 方法/ 从/ 服务/ 组装/ 规格/ 说明/ 层/ 出发/ ,/ 提供/ 了/ 适应性/ 问题/ 的/ 系统化/ 方案/ ,/ 能够/ 适应/ 开放/ 的/ 业务/ 环境/ 和/ 多变/ 的/ 用户/ 需求/ ,/ 具有/ 易于/ 理解/ 、/ 易于/ 维护/ 、/ 效率/ 高等/ 优点/ ./ 进一步/ 的/ 研究/ 工作/ 包括/ :/ (/ 1/ )/ 扩展/ 与/ 增强/ VxBPEL/ ,/ 支持/ 服务/ 组装/ 中/ 更/ 多/ 的/ 可变性/ 类型/ [/ 26/ ]/ 和/ 更/ 复杂/ 的/ 可变性/ 配置/ 方案/ ;/ (/ 2/ )/ 集成/ 可变性/ 分析/ 工具/ 、/ 设计/ 工具/ 与/ VxBPELEngine/ 引擎/ ,/ 提供/ 一个/ 完整/ 的/ 基于/ 可变性/ 设计/ 的/ 适应性/ 服务/ 组装/ 支持/ 平台/ ./ Page13/ 致谢/ 作者/ 感谢/ 荷兰/ 格罗宁根/ 大学/ MichielKoning/ 参与/ 了/ VxBPELEngine/ 早期/ 版本/ 的/ 开发/ 工作/ 、/ 北京科技大学/ 王可/ 参与/ 了/ 服务/ 组装/ 实例/ 的/ 部分/ 开发/ 工作/ !/ 

