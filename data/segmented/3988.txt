Page1/ 基于/ 多/ 尺度/ 描述/ 方法/ 的/ 移动/ 用户界面/ 生成/ 框架/ 杜一/ 1/ )/ ,/ 2/ )/ 田丰/ 1/ )/ 马翠霞/ 1/ )/ 戴国忠/ 1/ )/ 王宏安/ 1/ )/ 1/ )/ (/ 中国科学院/ 软件/ 研究所/ 人机交互/ 技术/ 与/ 智能/ 信息处理/ 实验室/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 大学/ 信息科学/ 与/ 工程学院/ 北京/ 100190/ )/ 摘要/ 用户界面/ 自动/ 生成/ 技术/ 随着/ 移动/ 设备/ 及/ 用户界面/ 的/ 多样化/ 而/ 变得/ 越来越/ 重要/ ./ 当前/ 用户界面/ 生成/ 技术/ 的/ 主要/ 问题/ 是/ 缺少/ 对/ 界面/ 进行/ 良好/ 描述/ 的/ 界面/ 描述语言/ ,/ 或者/ 生成/ 的/ 界面/ 依然/ 遵循/ 传统/ 的/ 图形用户界面/ 的/ 规范/ ./ 针对/ 上述/ 问题/ ,/ 文中/ 首先/ 提出/ 一种/ 多/ 尺度/ 的/ 界面/ 描述/ 方法/ ,/ 该/ 方法/ 能够/ 在/ 不同/ 的/ 层次/ 上/ 对/ 界面/ 进行/ 模块化/ 的/ 描述/ ;/ 然后/ 以该/ 描述/ 方法/ 为/ 基础/ ,/ 提出/ 一种/ 基于/ 该/ 方法/ 的/ 移动/ 界面/ 生成/ 框架/ ;/ 在/ 框架/ 中/ ,/ 该文/ 尝试/ 对/ 当前/ 移动/ 设备/ 的/ 界面/ 进行/ 控件/ 级别/ 的/ 分析/ ,/ 并/ 详细/ 介绍/ 了/ 框架/ 中/ 涉及/ 的/ 关键/ 算法/ ./ 该/ 方法/ 能够/ 提高/ 需求/ 分析/ 人员/ 、/ 界面设计/ 人员/ 及/ 界面/ 开发人员/ 的/ 工作效率/ ,/ 降低/ 因/ 不同/ 领域/ 知识/ 导致/ 的/ 额外/ 的/ 沟通/ 成本/ ./ 关键词/ 用户界面/ 描述语言/ ;/ 用户界面/ 生成/ ;/ 移动/ 计算/ ;/ 用户界面/ 开发/ ;/ 模型/ 驱动/ 的/ 开发/ ;/ 移动/ 互联网/ 1/ 引言/ 用户界面/ 是/ 指人/ 与/ 计算/ 设备/ 进行/ 信息/ 交换/ 的/ 媒介/ ,/ 主要/ 包括/ 软件/ 界面/ 和/ 硬件/ 界面/ [/ 1/ ]/ ./ 研究/ 表明/ ,/ 在/ 交互式/ 应用程序/ 中/ ,/ 有/ 48/ %/ 的/ 代码/ 与/ 用户界面/ 直接/ 相关/ ;/ 在/ 软件开发/ 过程/ 中/ ,/ 50/ %/ 的/ 时间/ 消耗/ 在/ 了/ 与/ 用户界面/ 有关/ 的/ 工作/ 中/ [/ 1/ -/ 3/ ]/ ./ 随着/ 移动/ 设备/ 的/ 普遍/ 应用/ 及/ 快速/ 发展/ ,/ 使得/ 移动/ 设备/ 的/ 用户界面/ 开发/ 越来越/ 重要/ ./ 相比/ 传统/ 的/ 个人电脑/ ,/ 移动/ 设备/ 的/ 用户界面/ 主要/ 有/ 几个/ 方面/ 的/ 不同/ :/ 第一/ ,/ 移动/ 设备/ 的/ 种类/ 多种多样/ ,/ 移动/ 设备/ 的/ 尺寸/ 也/ 各不相同/ ./ 这/ 使得/ 开发者/ 在/ 设计/ 与/ 开发/ 相关/ 的/ 用户界面/ 时/ 必须/ 考虑/ 各种/ 不同/ 的/ 设备/ 的/ 类型/ 、/ 尺寸/ 等/ 设备/ 特征/ ./ 第二/ ,/ 移动/ 操作系统/ 种类/ 繁多/ ,/ 同一/ 移动/ 操作系统/ 的/ 分支/ 多种多样/ ./ 不同/ 的/ 移动/ 操作系统/ 上/ 的/ 界面/ 表现/ 各不相同/ ./ 在/ 开发/ 时/ 必须/ 充分考虑/ 不同/ 的/ 目标/ 操作系统/ ./ 第三/ ,/ 移动/ 用户界面/ 由于/ 其/ 交互方式/ 从/ 传统/ 的/ 键盘/ 控制/ 发展/ 到/ 触控/ 、/ 笔控/ 、/ 动作/ 控制/ 等/ 多种/ 交互方式/ ,/ 其/ 组成/ 界面/ 的/ 各个/ 部分/ 相比/ 传统/ 的/ 用户界面/ ,/ 也/ 发生/ 了/ 变化/ ,/ 如/ 菜单/ (/ Menu/ )/ 在/ 移动/ 设备/ 上/ 的/ 使用/ 逐渐/ 减少/ ,/ 而且/ 形态/ 也/ 与/ 之前/ 有所不同/ ./ 随着/ 用户界面/ 特别/ 是/ 移动/ 设备/ 界面/ 的/ 不断/ 发展/ ,/ 不仅/ 用户界面/ 的/ 开发/ 越来越/ 复杂/ ,/ 其/ 分工/ 也/ 越来越/ 细致/ ./ 当前/ 与/ 界面/ 开发/ 相关/ 的/ 角色/ 包括/ 需求/ 分析/ 人员/ 、/ 界面设计/ 人员/ 、/ 界面/ 开发人员/ 等等/ ./ 移动/ 设备/ 界面/ 的/ 复杂性/ ,/ 使得/ 界面/ 相关/ 的/ 工作人员/ 的/ 工作量/ 迅速/ 增加/ ;/ 并且/ ,/ 各个/ 角色/ 的/ 专业技能/ 各不相同/ ,/ 其/ 使用/ 的/ 对/ 界面/ 进行/ 描述/ 的/ 工具/ 也/ 各有/ 差异/ ,/ 这/ 导致/ 了/ 各个/ 角色/ 之间/ 的/ 沟通/ 成本/ 的/ 提高/ ./ 使用/ 基于/ 模型/ 的/ 界面/ 开发方法/ ,/ 通过/ 对/ 界面/ 模型/ 的/ 定义/ ,/ 并/ 利用/ 相关/ 的/ 自动化/ 方法/ 生成/ 用户界面/ ,/ 是/ 解决/ 这种/ 问题/ 的/ 有效/ 方法/ ./ 基于/ 该/ 方法/ 的/ 研究/ ,/ 当前/ 主要/ 是/ 通过/ 设计/ 用户界面/ 描述语言/ 作为/ 对应/ 的/ 模型/ ,/ 并/ 以此/ 为/ 基础/ 设计/ 出/ 相应/ 的/ 界面/ 生成/ 工具/ ./ 通过/ 对/ 大量/ 的/ 界面/ 描述语言/ 及/ 界面/ 生成/ 工具/ 进行/ 分析/ ,/ 我们/ 发现/ 当前/ 的/ 方法/ 主要/ 有/ 以下/ 的/ 不足/ :/ 首先/ ,/ 界面/ 生成/ 工具/ 所/ 依赖/ 的/ 界面/ 描述语言/ 的/ 描述/ 能力/ 不够/ ,/ 在/ 一定/ 程度/ 上/ 阻碍/ 了/ 界面/ 生成/ 工具/ 的/ 发展/ ./ 需要/ 对/ 界面/ 进行/ 层次化/ 及/ 模块化/ 的/ 描述/ ,/ 并/ 以此/ 为/ 基础/ ,/ 不断/ 地/ 对/ 界面/ 生成/ 工具/ 进行/ 优化/ ./ 通过/ 界面/ 的/ 自动/ 生成/ ,/ 一方面/ ,/ 能够/ 降低/ 界面设计/ 人员/ 与/ 开发人员/ 为/ 不同/ 尺寸/ 、/ 不同/ 操作系统/ 设计/ 与/ 开发/ 用户界面/ 的/ 工作量/ ,/ 提高/ 界面/ 开发/ 的/ 效率/ ;/ 另一方面/ ,/ 通过/ 相对/ 统一/ 的/ 界面/ 描述语言/ 及/ 对应/ 的/ 工具/ ,/ 能够/ 减少/ 界面/ 开发/ 过程/ 中/ 各个/ 角色/ 之间/ 沟通/ 的/ 成本/ ./ 其次/ ,/ 由于/ 交互/ 设备/ 的/ 不断/ 变化/ ,/ 对/ 移动/ 设备/ 用户界面/ 的/ 生成/ 有/ 了/ 迫切/ 的/ 需求/ ,/ 虽然/ 有/ 相应/ 的/ 生成/ 工具/ 能够/ 生成/ 移动/ 设备/ 的/ 用户界面/ ,/ 如/ UNI/ -/ FORM/ [/ 4/ ]/ 、/ Huddle/ [/ 5/ ]/ 等等/ ./ 但是/ 生成/ 的/ 界面/ 全部/ 遵循/ 基于/ WIMP/ (/ Window/ ,/ Icon/ ,/ Menu/ ,/ Pointing/ )/ 范式/ 的/ OpenLook/ 界面/ 规范/ ./ 这种/ 界面/ 描述/ 规范/ ,/ 最初/ 由/ SunMicrosystems/ 与/ AT&T/ 公司/ 提出/ ,/ 主要/ 面向/ 基于/ WIMP/ 界面/ 范式/ 的/ 图形用户界面/ ,/ 对/ 组成/ 图形用户界面/ 的/ 各个/ 部分/ 都/ 进行/ 了/ 描述/ ,/ 并/ 在/ 相当/ 长/ 的/ 一段时间/ 内/ 指导/ 了/ 用户界面/ 的/ 开发/ ,/ 以致/ 基于/ 界面/ 描述语言/ 的/ 界面/ 生成/ 工具/ 大都/ 是/ 以/ OpenLook/ 规范/ 的/ 界面/ 作为/ 目标/ 界面/ ./ 但是/ 当前/ 的/ 各种/ 移动/ 操作系统/ 及/ 交互技术/ 的/ 发展/ ,/ 使得/ 用户界面/ 特别/ 是/ 移动/ 设备/ 上/ 的/ 用户界面/ 发生/ 了/ 很大/ 的/ 变化/ ,/ OpenLook/ 已经/ 不适/ 用于/ 对/ 移动/ 设备/ 用户界面/ 的/ 描述/ ./ 因此/ ,/ 需要/ 对/ 当前/ 移动/ 设备/ 的/ 用户界面/ 进行/ 分析/ ,/ 并/ 针对/ 其/ 特点/ 对/ 生成/ 工具/ 进行/ 优化/ ./ 针对/ 上述/ 问题/ ,/ 本文/ 首先/ 提出/ 一种/ 能够/ 从/ 不同/ 的/ 抽象层次/ 上/ 对/ 界面/ 进行/ 多/ 尺度/ 描述/ 的/ 用户界面/ 描述语言/ ,/ 该/ 描述语言/ 使用/ 了/ 层次化/ 、/ 模块化/ 的/ 描述/ 方法/ ,/ 可以/ 提高/ 界面/ 描述/ 的/ 可/ 复用/ 性/ ,/ 并/ 用来/ 辅助/ 界面/ 的/ 自动/ 生成/ ./ 在/ 此基础/ 上/ ,/ 进一步/ 提出/ 了/ 一种/ 基于/ 该/ 描述语言/ 的/ 界面/ 生成/ 框架/ ./ 在/ 对/ 界面/ 生成/ 框架/ 进行/ 介绍/ 的/ 过程/ 中/ ,/ 我们/ 尝试/ 在/ 控件/ 级别/ 对/ 当前/ 的/ 移动/ 用户界面/ 进行/ 分析/ ,/ 找出/ 移动/ 用户界面/ 与/ 传统/ 用户界面/ 在/ 控件/ 选择/ 上/ 的/ 不同/ ;/ 并/ 详细/ 介绍/ 了/ 界面/ 生成/ 框架/ 中/ 的/ 主要/ 部分/ —/ —/ —/ 布局/ 引擎/ 的/ 数据结构/ 和/ 关键/ 算法/ 的/ 实现/ ./ 最后/ ,/ 我们/ 给出/ 利用/ 该/ 框架/ 及/ 布局/ 算法/ 的/ 几个/ 应用/ 实例/ ./ 2/ 相关/ 工作/ 2.1/ 基于/ XML/ 的/ 用户界面/ 描述语言/ 用户/ 描述语言/ 是/ 一种/ 对/ 用户界面/ 进行/ 描述/ 的/ 通用/ 方法/ ,/ 它/ 通过/ 使用/ 规范化/ 的/ 描述/ ,/ 诸如/ XML/ 、/ 状态/ 转换/ 图/ 、/ 图表/ 等/ 方式/ ,/ 对/ 用户界面/ 进行/ 描述/ ./ 利用/ 基于/ 模型/ 的/ 界面/ 开发方法/ [/ 6/ -/ 7/ ]/ ,/ 将/ 界面/ 描述语言/ 作为/ 界面/ 模型/ 的/ 主要/ 部分/ ,/ 来/ 辅助/ 用户界面/ 的/ 开发/ ,/ 并/ 实现/ 用户界面/ 的/ 自动/ 生成/ ./ 由于/ XML/ 规范/ 的/ 自/ 描述性/ 、/ 灵活性/ 等/ 特点/ ,/ 使得/ 基于/ XML/ 的/ 界面/ 描述语言/ 的/ 应用/ 越来越/ 广泛/ ./ XAML/ ①/ 是/ 微软/ 推出/ 的/ 一种/ 界面/ 描述语言/ ,/ 它/ ①/ http/ :/ // // msdn/ ./ microsoft/ ./ com/ // en/ -/ us/ // library/ // ms752059/ ./ aspxPage3/ 能够/ 支持/ 对/ 界面/ 各个/ 组成部分/ 的/ 详细描述/ ,/ 并且/ 能够/ 通过/ 对/ 自定义/ 控件/ 描述/ 的/ 支持/ ,/ 来/ 扩展/ 界面/ 的/ 描述/ 能力/ ./ XUL/ ①/ 是/ 由/ Mozilla/ 支持/ 的/ 一种/ 基于/ XML/ 的/ 界面/ 描述语言/ ,/ 它/ 能够/ 对/ 基于/ Web/ 的/ 用户界面/ 进行/ 描述/ ,/ 与/ DHTML/ 很/ 类似/ ./ 这/ 两款/ 界面/ 描述语言/ 都/ 得到/ 了/ 广泛/ 的/ 应用/ ,/ 最大/ 的/ 好处/ 是/ 描述语言/ 均/ 由/ 特定/ 公司/ 提出/ ,/ 有/ 完善/ 的/ 商业/ 支持/ ./ 但是/ 这种/ 方式/ 存在/ 一定/ 的/ 问题/ :/ 首先/ ,/ 由于/ 有/ 固定/ 厂商/ 的/ 支持/ ,/ 描述语言/ 有/ 相当/ 大/ 的/ 局限性/ ,/ 大多数/ 此类/ 描述语言/ 只能/ 生成/ 特定/ 语言/ (/ 如/ C#/ )/ 的/ 界面/ ,/ 对/ 其它/ 语言/ 几乎/ 没有/ 支持/ ./ 其次/ ,/ 对/ 界面/ 的/ 描述/ 均/ 为/ 对/ 界面/ 具体/ 组成/ 的/ 描述/ ,/ 这/ 使得/ 通过/ 一套/ 界面/ 描述/ 生成/ 多个/ 平台/ 、/ 不同/ 设备/ 上/ 的/ 用户界面/ 成为/ 问题/ ./ 而/ 这个/ 问题/ 的/ 解决/ ,/ 由于/ 设备/ 的/ 多样化/ 而/ 变得/ 越来越/ 迫切/ ./ PUCSpecificationLanguage/ [/ 4/ -/ 5/ ,/ 8/ -/ 9/ ]/ 是/ 专门/ 为/ 描述/ 各种/ 电器/ 控制/ 设备/ 的/ 界面/ 而/ 设计/ 的/ 描述语言/ ,/ 它/ 能够/ 以/ 图形用户界面/ 和/ 语音/ 界面/ 两种/ 方式/ 描述/ 多达/ 30/ 多款/ 电器设备/ ./ 该/ 语言/ 从/ 功能/ 和/ 内容/ 两个/ 方面/ 对/ 基于/ 电器设备/ 的/ 用户界面/ 进行/ 描述/ ,/ 并/ 提出/ 了/ “/ 组树/ ”/ (/ GroupTree/ )/ 的/ 概念/ 来/ 辅助设计/ 界面/ ./ 除此之外/ ,/ PUC/ 还/ 针对/ 电器设备/ 界面/ 的/ 特性/ ,/ 提出/ 了/ “/ 智能/ 模板/ ”/ (/ SmartTemplates/ )/ 来/ 解决/ 电器/ 控制/ 设备/ 界面/ 的/ 特殊/ 展示/ 方式/ 的/ 问题/ ,/ 如/ 播放器/ 的/ 通用/ 界面/ 展示/ ./ 并/ 通过/ UNIFORM/ 与/ HUDDLE/ 两款/ 界面/ 生成/ 工具/ ,/ 解决/ 电器设备/ 界面/ 的/ 一致性/ 问题/ ./ UIML/ [/ 10/ -/ 11/ ]/ (/ UserInterfaceMarkupLanguage/ )/ 是/ 一种/ 扩展性/ 很强/ 的/ 界面/ 描述语言/ ,/ 它/ 使用/ 树状/ 结构/ 对/ 用户界面/ 进行/ 描述/ ,/ 通过/ 在/ 元语言/ 之外/ 的/ 各种/ 词汇表/ 描述/ 的/ 界面/ 元素/ 、/ 属性/ 和/ 事件/ 来/ 增强/ 自身/ 的/ 描述/ 能力/ ,/ 并且/ 能够/ 与/ 很多/ 通用/ 的/ 标准/ 同时/ 工作/ ,/ 如/ HTML/ 、/ VoiceXML/ 等/ ./ 其/ 显著特点/ 是/ 可以/ 在/ 语言/ 中/ 指定/ 界面/ 事件/ 对应/ 的/ 逻辑/ ./ 通过/ 将/ 用户界面/ 的/ 描述/ 和/ 与/ 外部/ UI/ 引擎/ 的/ 交互/ 规则/ 分别/ 描述/ ,/ 将/ 用户界面/ 进行/ 了/ 一定/ 程度/ 的/ 抽象/ ,/ 并且/ 将/ 与/ 平台/ 相关/ 的/ 部分/ 允许/ 开发者/ 通过/ 扩展/ 的/ 方式/ 来/ 实现/ ./ 这种/ 方式/ ,/ 一方面/ 降低/ 了/ UIML/ 本身/ 的/ 复杂度/ ,/ 使得/ 基于/ UIML/ 进行/ 界面/ 描述/ 只/ 需要/ 使用/ 最多/ 50/ 个/ 标签/ 就/ 能/ 完成/ ./ 另一方面/ ,/ 使得/ 在/ 使用/ UIML/ 对/ 界面/ 进行/ 描述/ 时/ ,/ 可以/ 忽略/ 具体/ 的/ 目标/ 代码/ 所用/ 的/ 平台/ ,/ 在/ 一定/ 程度/ 上/ ,/ 使得/ UIML/ 可以/ 一次/ 描述/ 而/ 应用/ 在/ 不同/ 的/ 平台/ 上/ ./ XIML/ [/ 12/ ]/ 定义/ 了/ 多种/ 模型/ ,/ 如/ 任务模型/ 、/ 对话/ 模型/ 、/ 用户/ 模型/ 、/ 展示/ 模型/ 等/ ,/ 并/ 通过/ 关系/ 和/ 属性/ 使得/ 各个/ 独立/ 的/ 模型/ 相互/ 联系/ ./ UsiXML/ (/ UserInterfaceeXtensibleMarkupLanguage/ )/ [/ 13/ ]/ ,/ 与/ XIML/ 类似/ ,/ 它/ 将/ 界面/ 描述/ 分成/ 领域/ 模型/ 、/ 抽象/ 界面/ 模型/ 、/ 具体/ 界面/ 模型/ 、/ 任务模型/ 、/ 转换/ 模型/ 、/ 上下文/ 模型/ 、/ 资源/ 模型/ 等/ ./ 在/ 该/ 语言/ 中/ ,/ 对/ 具体/ 界面/ 模型/ 中/ 的/ 界面/ 组件/ 的/ 描述/ 非常/ 丰富/ ,/ 但/ 对/ 领域/ 模型/ 、/ 上下文/ 模型/ 的/ 定义/ 相对/ 简单/ ./ MARIA/ [/ 14/ ]/ 以/ TERESA/ [/ 15/ ]/ 语言/ 为/ 基础/ ,/ 也/ 使用/ CTT/ 任务模型/ 、/ 抽象/ 界面/ 描述/ 及/ 具体/ 界面/ 描述/ ,/ 增加/ 了/ 对/ 面向/ 服务/ 的/ 架构/ 的/ 支持/ ,/ 通过/ 提供/ 一个/ 与/ WSDL/ (/ WebServiceDescriptionLanguage/ )/ 的/ 映射/ ,/ 允许/ 设计者/ 在/ 设计/ 界面/ 时/ 在/ 界面/ 中/ 增加/ 已经/ 存在/ 于/ 网络/ 的/ 各种/ 服务/ ./ 较/ 好/ 的/ 设计/ 工具/ 支持/ 以及/ CCT/ 任务模型/ 的/ 理论/ 支持/ ,/ 使得/ MARIA/ 与/ TERESA/ 两种/ 语言/ 有/ 一定/ 的/ 影响力/ ./ 此类/ 界面/ 描述语言/ 目标/ 能够/ 支持/ 对/ 界面/ 的/ 灵活/ 的/ 描述/ ,/ 但是/ 它们/ 也/ 存在/ 一些/ 不足/ ./ 首先/ ,/ 大多数/ 界面/ 描述语言/ 对/ 移动/ 设备/ 的/ 界面/ 描述/ 能力/ 不足/ ./ 在/ 这些/ 描述语言/ 中/ ,/ 只有/ PUCLanguage/ 明确指出/ 支持/ 对/ 移动/ 设备/ 上/ 的/ 用户界面/ 的/ 描述/ ,/ 但/ 一方面/ ,/ 其/ 遵循/ 的/ 依然/ 是/ OpenLook/ 的/ GUI/ 界面/ 规范/ ,/ 并/ 不/ 完全/ 适合/ 当前/ 的/ 移动/ 用户界面/ ;/ 另一方面/ ,/ 该/ 描述/ 面向/ 特定/ 领域/ 的/ 设备/ ,/ 如/ 电器设备/ 的/ 界面/ ,/ 其中/ 很多/ 内容/ 不/ 适合/ 当前/ 流行/ 的/ 智能手机/ 、/ 平板/ 电脑/ 的/ 界面/ ./ 其次/ ,/ 虽然/ 在/ 很多/ 描述语言/ 中/ ,/ 使用/ 了/ 层次化/ 及/ 模块化/ 的/ 界面/ 描述/ 方法/ ,/ 但/ 在/ 各种/ 界面/ 生成/ 工具/ 及/ 生成/ 算法/ 的/ 实现/ 上/ ,/ 并/ 没有/ 充分利用/ 层次化/ 及/ 模块化/ 的/ 描述/ ,/ 使得/ 在/ 界面/ 的/ 自动/ 生成/ 方面/ 与/ 依赖/ XAML/ 等/ 描述语言/ 的/ 界面/ 生成/ 没有/ 明显/ 的/ 区别/ ./ 2.2/ 用户界面/ 生成/ 以/ 用户界面/ 描述/ 为/ 基础/ ,/ 通过/ 工具/ 来/ 辅助/ 用户界面/ 的/ 自动/ 生成/ ,/ 可以/ 给/ 设计者/ 或/ 开发者/ 提供/ 建议/ ,/ 降低/ 界面/ 开发人员/ 的/ 开发/ 难度/ ,/ 并且/ 好/ 的/ 工具/ 还/ 能够/ 提高/ 界面/ 开发人员/ 与/ 界面设计/ 人员/ 之间/ 的/ 沟通/ 效率/ ./ 用户界面/ 生成/ 可以/ 从/ 生成/ 方式/ 及/ 生成/ 内容/ 两个/ 不同/ 的/ 维度/ 进行/ 划分/ ./ 从/ 用户界面/ 的/ 生成/ 方式/ 分/ ,/ 当前/ 的/ 用户界面/ 生成/ 分为/ 半自动/ 及/ 自动/ 生成/ ./ 其中/ ,/ 自动/ 生成/ 是/ 指/ 通过/ 工具/ 生成/ 的/ 目标/ 代码/ 可/ 直接/ 运行/ ,/ 或者/ 直接/ 生成/ 可执行程序/ ./ XAML/ 、/ AUIML/ 、/ UIML/ 、/ MARIA/ 、/ TERESA/ 、/ PUC/ 等/ 描述语言/ 的/ 工具/ 即/ 属于/ 自动/ 生成/ ./ 其中/ XAML/ 、/ AUIML/ 等/ 工具/ 生成/ 的/ 用户界面/ 不/ 包含/ 内部/ 逻辑/ ,/ 需要/ 编码/ 实现/ ./ 而/ PUC/ 、/ TUIML/ 等/ 描述语言/ 时因/ 在/ 设计/ 时/ 指定/ 了/ 内部/ 逻辑/ ,/ 因此/ 生成/ 的/ 代码/ 可以/ 直接/ 与/ 具体/ 的/ 功能/ 相/ ①/ https/ :/ // // developer/ ./ mozilla/ ./ org/ // en/ // XULPage4/ 关联/ ,/ 这种/ 方式/ 适用/ 于/ 面向/ 某些/ 特定/ 领域/ 的/ 用户界面/ 的/ 设计/ ,/ 并/ 不/ 具有/ 通用性/ ./ 半自动/ 生成/ 则/ 允许/ 在/ 使用/ 工具/ 生成/ 时/ ,/ 对/ 生成/ 的/ 代码/ 或/ 可执行程序/ 进行/ 配置/ ,/ 如/ 指定/ 目标/ 平台/ 或者/ 生成/ 描述/ 中/ 的/ 部分/ 界面/ ,/ UsiXML/ 则/ 属于/ 典型/ 的/ 半自动/ 生成/ 代码/ 机制/ ./ 从/ 用户界面/ 的/ 生成/ 内容/ 分/ ,/ 用户界面/ 生成/ 分为/ 生成/ 代码/ 和/ 直接/ 编译/ 两种/ ./ 其中/ ,/ 生成/ 代码/ 的/ 方式/ ,/ 最终/ 生成/ 某种/ 高级/ 语言/ 的/ 代码/ ,/ 如/ Java/ 、/ C/ 等/ ,/ 而/ 生成/ 的/ 代码/ 需要/ 进行/ 再次/ 编译/ ,/ 最后/ 生成/ 可以/ 运行/ 的/ 用户界面/ ./ 生成/ 代码/ 的/ 方式/ 多见于/ 实现/ 多/ 平台/ 和/ 多/ 目标/ 代码/ 的/ 界面/ 描述语言/ 中/ ./ 直接/ 编译/ 的/ 方式/ ,/ 因/ 最终/ 只/ 生成/ 某一/ 特定/ 平台/ 上/ 的/ 用户界面/ ,/ 因此/ 其/ 生成/ 工具/ 在/ 生成/ 时/ 将/ 代码/ 与/ 运行/ 平台/ 直接/ 进行/ 关联/ ,/ 生成/ 可执行程序/ ./ 这种/ 方式/ 多见于/ 商业/ 的/ 用户界面/ 描述语言/ (/ 如/ XAML/ 、/ XUL/ 等/ )/ 或者/ 为/ 某/ 一/ 特定/ 目标/ 平台/ 设计/ 的/ 界面/ 描述语言/ (/ 如/ TUIML/ 等/ )/ ./ 本文/ 提出/ 的/ 生成/ 框架/ ,/ 在/ 生成/ 方式/ 上/ ,/ 结合/ 了/ 半自动/ 生成/ 及/ 自动/ 生成/ 的/ 方式/ ,/ 在/ 生成/ 前/ 的/ 配置/ 阶段/ ,/ 可以/ 允许/ 界面/ 开发/ 中/ 的/ 各种/ 角色/ 对/ 诸如/ 目标/ 设备/ 类型/ 、/ 布局/ 类型/ 、/ 控件/ 选择/ 等/ 各个/ 级别/ 的/ 界面/ 特征/ 的/ 一种/ 或/ 几种/ 属性/ 进行/ 设定/ ,/ 根据/ 不同/ 的/ 设定/ ,/ 生成/ 对应/ 的/ 用户界面/ 推荐/ ;/ 在/ 此/ 过程/ 中/ ,/ 允许/ 使用者/ 使用/ 自动/ 的/ 方式/ ,/ 完全/ 由/ 算法/ 对/ 界面/ 进行/ 生成/ ./ 通过/ 两种/ 生成/ 方式/ 的/ 结合/ ,/ 可以/ 最大/ 限度/ 地/ 满足/ 不同/ 水平/ 、/ 不同/ 使用/ 习惯/ 的/ 用户/ 的/ 需求/ ./ 在/ 生成/ 内容/ 上/ ,/ 选择/ 了/ 直接/ 生成/ 代码/ 的/ 方式/ ,/ 这样/ 可以/ 通过/ 各种/ 不同/ 的/ 生成器/ ,/ 实现/ 不同/ 的/ 目标/ 平台/ 上/ 代码/ 的/ 生成/ ./ 3/ 多/ 尺度/ 界面/ 描述/ 方法/ 多/ 尺度/ 描述/ 方法/ 是/ 指/ 能够/ 从/ 不同/ 的/ 抽象层次/ 上/ 对/ 用户界面/ 进行/ 描述/ ,/ 除了/ 能够/ 在/ 用户界面/ 的/ 整体/ 布局/ 、/ 控件/ 位置/ 等/ 细节/ 上/ 的/ 描述/ ,/ 还要/ 能够/ 在/ 如/ 功能/ 描述/ 、/ 数据/ 描述/ 等/ 抽象层次/ 上/ 对/ 界面/ 进行/ 不同/ 粒度/ 的/ 描述/ ./ 对于/ 界面设计/ 与/ 生成/ 工具/ 而言/ ,/ 一方面/ ,/ 通过/ 使用/ 多/ 尺度/ 的/ 方法/ 对/ 界面/ 的/ 不同/ 粒度/ 进行/ 描述/ ,/ 可以/ 对/ 界面/ 进行/ 验证/ ,/ 从而/ 增加/ 了/ 界面设计/ 的/ 安全性/ ;/ 另一方面/ ,/ 通过/ 对/ 粗粒度/ 界面/ 描述/ 的/ 分析/ ,/ 可以/ 实现/ 用户界面/ 的/ 推荐/ 及/ 自动/ 生成/ ,/ 降低/ 了/ 开发/ 的/ 复杂度/ ,/ 提高/ 了/ 界面/ 开发/ 的/ 效率/ ./ 借鉴/ 当前/ 较为/ 成功/ 的/ 界面/ 描述语言/ ,/ 并/ 充分考虑/ 到/ 界面/ 的/ 自动/ 生成/ 以及/ 对/ 多/ 设备/ 的/ 支持/ ,/ 我们/ 设计/ 了/ 一种/ 新/ 的/ 界面/ 描述语言/ ./ 该/ 界面/ 描述语言/ 除了/ 要/ 具有/ 多/ 尺度/ 的/ 描述/ 能力/ 外/ ,/ 主要/ 目标/ 还/ 包括/ 以下/ 几个/ 方面/ :/ 第一/ ,/ 应该/ 使用/ 模块化/ 的/ 描述/ 方式/ 对/ 用户界面/ 进行/ 描述/ ./ 通过/ 这种/ 描述/ 方式/ ,/ 一方面/ 增加/ 了/ 描述语言/ 本身/ 的/ 可读性/ ,/ 降低/ 了/ 直接/ 对/ 描述语言/ 进行/ 编辑/ 开发/ 的/ 界面/ 开发人员/ 的/ 认知/ 困难/ ,/ 提高/ 了/ 开发/ 效率/ ;/ 另一方面/ ,/ 模块化/ 的/ 方式/ 可以/ 支持/ 对/ 组成/ 界面/ 的/ 各个/ 模块/ 进行/ 复用/ ,/ 而/ 对/ 模块/ 的/ 复用/ 能力/ 取决于/ 描述语言/ 本身/ 对/ 模块化/ 的/ 划分/ 粒度/ ./ 第二/ ,/ 应/ 具有/ 良好/ 的/ 可扩展性/ ./ 交互/ 设备/ 的/ 发展/ 日新月异/ ,/ 基于/ 不同/ 的/ 交互/ 设备/ 的/ 用户界面/ 的/ 发展/ 变化/ 很快/ ./ 因此/ 界面/ 描述语言/ 必须/ 有/ 很/ 好/ 的/ 扩展性/ ,/ 对/ 新/ 的/ 用户界面/ 形式/ 有/ 很/ 好/ 的/ 支持/ ./ 基于/ 提出/ 的/ 设计/ 原则/ ,/ 我们/ 给出/ 了/ 一种/ 用户界面/ 描述语言/ —/ —/ —/ E/ -/ UIDL/ (/ ExtensibleUserInterfaceDescriptionLanguage/ )/ ./ 图/ 1/ 至图/ 4/ 是/ E/ -/ UIDL/ 的/ 部分/ XMLSchema/ 描述/ ./ 在/ 这些/ 图中/ ,/ 我们/ 规定/ ,/ 每个/ 矩形框/ 表示/ 一个/ 节点/ 元素/ ,/ 矩形框/ 跟随/ 的/ 加号/ 和/ 减号/ 分别/ 表示/ 该/ 元素/ 是否/ 展开/ ,/ 矩形框/ 下方/ 的/ 数字/ 代表/ 节点/ 允许/ 出现/ 的/ 次数/ ./ 另外/ ,/ 我们/ 分别/ 使用/ 内容/ 为/ “/ S/ ”/ 、/ “/ C/ ”/ 、/ “/ A/ ”/ 的/ 矩形框/ 表示/ XMLSchema/ 描述/ 时/ 的/ ”/ Sequence/ ”/ 、/ “/ Choice/ ”/ 及/ “/ All/ ”/ 这/ 3/ 种/ 模式/ ./ 图/ 1/ 展示/ E/ -/ UIDL/ 的/ 主体/ 结构/ ,/ 它/ 包含/ 一个/ 根/ 节点/ ,/ 根/ 节点/ 包括/ 整个/ 界面/ 描述/ 文件/ 的/ 基本参数/ ,/ 如该/ 界面/ 文件/ 标识符/ 、/ 名称/ 、/ 版本信息/ 等等/ ./ 如图/ 1/ 所示/ ,/ 它/ 由/ 多个/ 子/ 模块/ 组成/ ,/ 这些/ 子/ 模块/ 包括/ 抽象/ 功能/ 界面/ 描述/ 模块/ (/ AFUI/ )/ 、/ 具体/ 用户界面/ 描述/ 模块/ (/ CUI/ )/ 、/ 抽象/ 数据/ 描述/ 模块/ (/ ADATAMODEL/ )/ 、/ 具体/ 数据/ 描述/ 模块/ (/ CDATAMODEL/ )/ 、/ UM2/ 模块/ 、/ 映射/ 模块/ (/ MAPPING/ )/ 及/ 资源/ 模块/ (/ RESOURCE/ )/ 等/ ./ EUIDL/ 与/ 每个/ 子/ 模块/ 都/ 是/ 一对/ 多/ 的/ 关系/ ,/ 即/ EUIDL/ 可以/ 包括/ 零个/ 或/ 多个/ 子/ 模块/ 的/ 实体/ ,/ 如/ 一个/ 界面/ 描述/ 文件/ 可能/ 包括/ 多个/ 上下文/ 模块/ 、/ 数据/ 模块/ 等等/ ./ 另外/ ,/ 我们/ 使用/ UIDLHEADER/ 来/ 表示/ 所有/ 子/ 模块/ 的/ 公用/ 的/ 数据结构/ ,/ 在结构上/ ,/ 它/ 是/ 所有/ 子/ 模块/ Page5/ 的/ 父类/ ,/ 包括/ 子/ 模块/ 标识符/ 、/ 名称/ 以及/ 对子/ 模块/ 的/ 描述/ 等/ ./ 其中/ ,/ 标识符/ 是/ 必须/ 选项/ ,/ 通过/ 使用/ 标识符/ 来/ 保证/ 子/ 模块/ 的/ 唯一性/ ,/ 既/ 可以/ 在子/ 模块/ 重用/ 时/ 通过/ 标识符/ 来/ 实现/ 外部/ 链接/ ,/ 也/ 降低/ 了/ 同一个/ 描述/ 文件/ 中子/ 模块/ 之间/ 的/ 耦合/ 程度/ ,/ 使得/ 子/ 模块/ 之间/ 相互/ 独立/ ./ 模块/ 之间/ 的/ 关联/ 方式/ 通过/ 独立/ 的/ 映射/ 模块/ 来/ 实现/ ./ AFUI/ [/ 16/ -/ 17/ ]/ 是/ 抽象/ 用户界面/ 描述/ 模块/ ,/ 它/ 从/ 一个/ 抽象/ 的/ 层次/ 对/ 界面/ 进行/ 描述/ ./ 该/ 模块/ 不/ 与/ 特定/ 的/ 界面/ 范式/ 有关/ ,/ 特定/ 的/ 界面/ 范式/ 包括/ 对/ 组成/ 用户/ 界图/ 2AFUI/ 与/ ADATAMODEL/ 模块/ 的/ XMLSchemaCUI/ 是/ 具体/ 用户界面/ 描述/ 模块/ ./ 与/ 抽象/ 用户界面/ 描述/ 模块/ 对应/ ,/ 具体/ 用户界面/ 描述/ 模块/ 是/ 对/ 用户界面/ 的/ 具体/ 描述/ ./ 该/ 模块/ 与/ 特定/ 的/ 界面/ 范式/ 有关/ ,/ 描述/ 了/ 基于/ 特定/ 范式/ 的/ 用户界面/ 的/ 各个/ 组成部分/ ./ 它/ 与/ 抽象/ 用户界面/ 描述/ 模块/ 是/ 一种/ 映射/ 关系/ ,/ 一种/ 抽象/ 用户界面/ 描述/ 模块/ 可以/ 有/ 多种/ 具体/ 用户界面/ 描述/ 模块/ 的/ 具体/ 实现/ ./ 使用/ 抽象/ 用户界面/ 描述/ 模块/ 与/ 具体/ 用户界面/ 描述/ 模块/ 两种/ 模块/ 来/ 对/ 界面/ 进行/ 描述/ ,/ 既/ 可以/ 保障/ 了/ 用户界面/ 在/ 一定/ 的/ 抽象层次/ 的/ 可/ 复用/ 性/ ,/ 也/ 可以/ 使/ 两种/ 界面/ 模块/ 相互/ 验证/ ,/ 保证/ 界面/ 的/ 正确性/ ./ 当前/ 能够/ 描述/ 的/ CUI/ 元素/ 的/ 集合/ 在/ 图/ 3/ 中/ 呈现/ ,/ 各个/ CUI/ 元素/ 之间/ 相对/ 独立/ ,/ 便于/ 添加/ 新/ 的/ CUI/ 元素/ 的/ 支持/ ./ E/ -/ UIDL/ 包含/ 了/ 对/ 数据/ 的/ 定义/ ,/ 这里/ 所/ 讲/ 的/ 数据/ 既/ 包括/ 界面/ 本身/ 的/ 输入输出/ 数据/ ,/ 也/ 包括/ 界面/ 描述语言/ 在/ 描述/ 界面/ 时/ 用到/ 的/ 数据/ ./ 其/ 定义数据/ 模块/ 的/ 方式/ 也/ 是/ 以/ 一种/ 分层/ 的/ 方式/ 实现/ ./ ADATAMODEL/ 是/ 抽象/ 数据/ 模块/ ,/ 它/ 是/ 在/ 一个/ 抽象/ 的/ 层次/ 上/ 对/ 数据/ 进行/ 的/ 定义/ ,/ 它/ 不/ 包括/ 数据/ 的/ 具体内容/ ./ 在/ 该层/ 模块/ 中/ ,/ 可以/ 对/ 数据/ 的/ 类型/ 及/ 结构/ 进行/ 定义/ ,/ 这样/ 可以/ 允许/ 在/ 数据/ 内容/ 未知/ 的/ 情况/ 下/ 根据/ 抽象/ 用户界面/ 描述/ 模块/ 或/ 具体/ 用户界面/ 描述/ 模块/ 快速/ 生成/ 界面/ ./ CDATAMODEL/ 是/ 具体/ 数据/ 描述/ 模块/ ./ 它/ 可以/ 面/ 的/ 各个/ 部分/ 的/ 具体/ 描述/ ,/ 如/ 图形用户界面/ 中/ 的/ 按钮/ 的/ 形状/ 、/ 位置/ 或者/ 实物/ 用户界面/ 的/ 实物/ 类型/ 等等/ ;/ 并且/ 该/ 模块/ 除了/ 一个/ 默认/ 的/ 实现/ 外/ ,/ 允许/ 对/ 抽象层次/ 自行/ 定义/ ./ 通过/ 这种/ 方式/ ,/ 一方面/ 可以/ 与/ 任务/ 树/ 等/ 各种/ 任务/ 建模/ 方法/ 很/ 好/ 的/ 结合/ ,/ 另一方面/ 可以/ 辅助/ 实现/ 设备/ 无关/ 及/ 多/ 尺度/ 的/ 用户界面/ 描述/ ./ 如图/ 2/ 所示/ ,/ 在/ 描述/ 抽象/ 用户界面/ 时/ ,/ 我们/ 使用/ 了/ 功能/ 组/ 模型/ 的/ 概念/ ,/ 它/ 由/ Group/ 、/ AtomGroup/ 、/ Input/ 、/ Output/ 以及/ Control/ 几个/ 部分/ 组成/ ./ 对/ 数据/ 进行/ 详细/ 具体/ 的/ 描述/ ./ 当前/ 版本/ 可以/ 描述/ 的/ 数据类型/ 包括/ 单一/ 的/ 值/ ,/ 如/ 二进制/ 数值/ 、/ 布尔/ 型/ 数值/ 、/ 整数/ 、/ 浮点数/ ,/ 以及/ 链表/ 、/ 表格/ 等/ ./ 在/ 每种/ 数据类型/ 的/ 定义/ 中/ ,/ 包括/ 了/ 数据/ 本身/ 的/ 属性/ 以及/ 获取数据/ 的/ 方式/ ./ 具体/ 数据/ 模块/ 与/ 抽象/ 数据/ 模块/ 也/ 可以/ 实现/ Page6/ 图/ 4CDATAMODEL/ 模块/ 的/ XMLSchema/ 相互/ 验证/ ,/ 来/ 保证/ 界面/ 所/ 使用/ 的/ 数据/ 的/ 准确性/ ./ UM2/ 模块/ 是/ 对/ 用户/ 行为/ 进行/ 描述/ 的/ 模块/ ,/ 图/ 5/ 用户界面/ 生成/ 框架结构/ 图/ (/ 1/ )/ 界面/ 描述/ ./ 基于/ E/ -/ UIDL/ ,/ 可以/ 通过/ 不同/ 模块/ 之间/ 的/ 组合/ ,/ 对/ 界面/ 进行/ 不同/ 抽象层次/ 上/ 的/ 描述/ ,/ 既/ 可以/ 通过/ 抽象/ 界面/ 模块/ 与/ 抽象/ 数据/ 模块/ 、/ 抽象/ 界面/ 模块/ 与/ 具体/ 数据/ 模块/ 的/ 组合/ ,/ 或者/ 抽象/ 界面/ 模块/ 、/ 抽象/ 数据/ 模块/ 对/ 界面/ 进行/ 相对/ 抽象/ 的/ 描述/ ,/ 并且/ 可以/ 以/ 这种/ 描述/ 为/ 基础/ ,/ 利用/ 界面/ 生成器/ 来/ 生成/ 原型/ 界面/ ;/ 也/ 可以/ 通过/ 具体/ 界面/ 模块/ 与/ 具体/ 数据/ 模块/ 、/ 具体/ 界面/ 模块/ 与/ 抽象/ 数据/ 模块/ 的/ 组合/ ,/ 对/ 界面/ 进行/ 相对/ 具体/ 的/ 描述/ ,/ 这种/ 界面/ 描述/ 能够/ 具体/ 地/ 描述/ 控件/ 级别/ 的/ 展示/ ,/ 可以/ 不需/ 经过/ 界面/ 自动/ 生成/ 而/ 直接/ 生成/ 依赖于/ 目标语言/ 的/ 用户界面/ 代码/ ./ 当前/ 主流/ 的/ 界面/ 生成/ 工具/ 均/ 基于/ 这种/ 生成/ 方法/ ./ (/ 2/ )/ 界面/ 生成/ ./ 主要/ 包括/ 两个/ 模块/ ,/ 分别/ 是/ 界面/ 生成器/ 及/ 代码生成/ 器/ ./ 其中/ ,/ 界面/ 生成器/ 的/ 主要/ 目的/ 是/ 利用/ 对/ 界面/ 的/ 抽象/ 描述/ ,/ 生成/ 统一/ 的/ 可以/ 被/ 代码/ UM2/ 是/ 我们/ 提出/ 的/ 一种/ 用户/ 模型/ ,/ 该/ 模型/ 基于/ 活动/ 理论/ ,/ 通过/ 分析/ 用户/ 日常/ 使用/ 交互/ 设备/ 的/ 场景/ ,/ 将/ 用户/ 、/ 上下文/ 环境/ 、/ 对象/ 及/ 行为/ 等/ 统一/ 纳入/ 活动/ 的/ 研究/ 框架/ ,/ 并/ 建立/ 用户/ 模型/ ./ 对于/ UM2/ 的/ 介绍/ 不/ 作为/ 本文/ 的/ 重点/ ,/ 文献/ [/ 18/ ]/ 对/ 其/ 进行/ 了/ 详细/ 的/ 阐述/ ./ 通过/ 在/ E/ -/ UIDL/ 中/ 对/ 用户/ 模型/ 的/ 支持/ ,/ 可以/ 辅助/ 自/ 适应/ 用户界面/ 的/ 描述/ 以及/ 生成/ ./ 4/ 界面/ 生成/ 框架/ 4.1/ 概述/ 基于/ 多/ 尺度/ 界面/ 描述/ 方法/ 的/ 界面/ 生成/ 框架/ 如图/ 5/ ./ 该/ 框架/ 主要/ 由/ 3/ 个/ 部分/ 组成/ ,/ 分别/ 是/ 界面/ 描述/ 、/ 界面/ 生成/ 及/ 界面/ 二次开发/ ./ 化/ 的/ 具体/ 描述/ ./ 该/ 模块/ 是/ 实现/ 界面/ 自动/ 生成/ 的/ 核心/ 部分/ ,/ 它/ 包括/ 控件/ 选择器/ 、/ 布局/ 引擎/ 以及/ 界面/ 规整/ 器/ 3/ 个/ 部分/ ./ 它们/ 利用/ 对/ 界面/ 的/ 描述/ 的/ 不同/ 模块/ 的/ 内容/ ,/ 并且/ 前/ 一部分/ 的/ 输出/ 作为/ 后/ 一部分/ 的/ 输入/ ./ 在/ 整个/ 界面/ 生成器/ 的/ 工作/ 过程/ 中/ ,/ 需要/ 随时/ 访问/ 约束/ 库来/ 获取/ 系统/ 预定/ 义/ 的/ 约束/ ,/ 通过/ 该/ 约束/ 库及/ E/ -/ UIDL/ 描述/ ,/ 来/ 实现/ 3/ 个/ 部分/ 的/ 功能/ ./ 对/ 约束/ 库/ 进行/ 定义/ 时/ ,/ 参考/ EBNF/ 的/ 规则/ ,/ 如/ 使用/ 大括号/ 代表/ 0/ 或/ 多次/ 出现/ ,/ 中括号/ 代表/ 0/ 或/ 1/ 次/ 出现/ ,/ 但/ 不/ 对/ 数值/ 类型/ 等/ 进行/ 详细/ 的/ 定义/ ,/ 而/ 在/ 描述/ 中/ 进行/ 说明/ ./ ConstraintBase/ =/ {/ SystemConstraint/ }/ ;/ SystemConstraint/ =/ {/ ID/ ,/ ControlSelectorGallary/ 约束/ 库/ (/ ConstraintBase/ )/ 存储/ 不同/ 类型/ 的/ 约束/ ,/ 包括/ 控件/ 选择/ 约束/ (/ ControlSelectorGallary/ )/ 、/ 单一/ Page7/ 控件/ 约束/ (/ ControlConstraint/ )/ 、/ 分屏/ 约束/ (/ Division/ -/ Constraint/ )/ 、/ 智能/ 布局/ 模板/ (/ LayoutSmartTemplete/ )/ 共/ 4/ 种/ ,/ 每种/ 约束/ 都/ 通过/ 一个/ 唯一/ 标识符/ 类/ 区别/ ./ 控件/ 选择/ 约束/ 主要/ 用于/ 控件/ 选择器/ ,/ 它/ 是/ 功能/ 组/ 类型/ 、/ 数据类型/ 、/ 目标/ 尺寸/ 、/ 目标/ 设备/ 及/ 控件/ 类型/ 构成/ 的/ 多元/ 组/ ./ 功能/ 组/ 类型/ 及/ 数据类型/ 都/ 与/ E/ -/ UIDL/ 中/ 抽象/ 界面/ 模块/ 及/ 抽象/ 数据/ 模块/ 、/ 具体/ 数据/ 模块/ 中/ 的/ 特定/ 属性/ 相对/ 应/ ,/ 如/ “/ Input/ ”/ 、/ “/ AtomGroup/ ”/ 等/ ./ 在/ 约束/ 库中/ ,/ 默认/ 定义/ 一系列/ 的/ 控件/ 选择/ 约束/ ,/ 控件/ 选择器/ 工作/ 时/ ,/ 通过/ E/ -/ UIDL/ 的/ 具体/ 描述/ 来/ 进行/ 控件/ 类型/ 的/ 匹配/ ./ 其/ 主要/ 部分/ 描述/ 如下/ ,/ 其中/ 功能/ 组/ 类型/ (/ FunctionType/ )/ 、/ 数据类型/ (/ DataType/ )/ 、/ 目标/ 操作系统/ (/ TargetOs/ )/ 以及/ 控件/ 类型/ 对应/ E/ -/ UIDL/ 中/ 抽象/ 界面/ 模块/ 、/ 具体/ 界面/ 模块/ 、/ 抽象/ 数据/ 模块/ 、/ 具体/ 数据/ 模块/ 中/ 相关/ 的/ 定义/ ./ Width/ 、/ Height/ 两个/ 符号/ 为/ 整数/ 类型/ ./ ControlSelectorGallary/ =/ {/ [/ FunctionType/ ,/ ]/ [/ DataType/ ,/ ]/ FunctionType/ =/ ‘/ Group/ ’/ |/ ‘/ AtomGroup/ ’/ |/ ‘/ Input/ ’/ |/ DataType/ =/ AData/ |/ CData/ ;/ AData/ =/ SimpleString/ ;/ CData/ =/ CBinary/ |/ CBool/ |/ CEnum/ |/ CInt/ |/ CFloatTargetSize/ =/ Width/ ,/ Height/ ;/ TargetOs/ =/ ‘/ Android2/ ’/ |/ ‘/ Android4/ ’/ |/ ‘/ IOS/ ’/ |/ ‘/ WindowsPC/ ’/ |/ ControlType/ =/ ‘/ IOSLabel/ ’/ |/ ‘/ AndroidStatic/ ’/ |/ 单一/ 控件/ 约束/ 用来/ 定义/ 各种/ 控件/ 自身/ 的/ 一些/ 呈现/ 时/ 的/ 约束/ ,/ 它/ 由/ 控件/ 类型/ 及/ 尺寸/ 约束/ 两/ 部分/ 组成/ ,/ 该/ 类型/ 约束/ 用于/ 分屏/ 策略/ 的/ 确定/ 以及/ 具体/ 的/ 布局/ 算法/ 中/ ./ 其/ 主要/ 部分/ 描述/ 如下/ ,/ 其中/ 控件/ 类型/ 的/ 定义/ 与/ 前述/ ControlType/ 描述/ 相同/ ./ ControlConstraint/ =/ {/ ControlType/ ,/ SizeConstraint/ }/ ;/ SizeConstraint/ =/ [/ MinWidth/ ]/ ,/ [/ MinHeight/ ]/ ,/ 分屏/ 约束/ 定义/ 是/ 预先/ 定义/ 的/ 分屏/ 策略/ ,/ 它/ 由/ 功能/ 组/ 类型/ 、/ 权重/ 类型/ 、/ 分屏/ 数目/ 、/ 分屏/ 细节/ 4/ 个/ 部分/ 组成/ ,/ 其中/ 功能/ 组/ 类型/ 与/ 权重/ 类型/ 与/ 抽象/ 界面/ 模块/ 两个/ 属性/ 对应/ ./ 该/ 约束/ 主要/ 用于/ 辅助/ 全自动/ 布局/ 时/ 的/ 分屏/ 策略/ 的/ 指定/ ./ 其/ 结构/ 的/ 描述/ 如下/ ,/ 其中/ 权重/ 类/ P/ (/ CS/ )/ =/ P/ (/ FT/ )/ ×/ w/ (/ FT/ )/ +/ P/ (/ DT/ )/ ×/ w/ (/ DT/ )/ +/ P/ (/ TS/ )/ ×/ w/ (/ TS/ )/ +/ P/ (/ TO/ )/ ×/ w/ (/ TO/ )/ 型/ (/ WeightType/ )/ 中/ 的/ 定义/ 与/ E/ -/ UIDL/ 中/ 抽象/ 界面/ 模块/ 的/ 参数/ 对应/ ,/ StartX/ 、/ StartY/ 、/ Width/ 、/ Height/ 这/ 4/ 个/ 符号/ 均/ 为/ 整数/ 类型/ ./ DivisionConstraint/ =/ {/ [/ FunctionType/ ,/ ]/ [/ WeightType/ ,/ ]/ WeightType/ =/ ‘/ SingleCenter/ ’/ |/ ‘/ DoubleCenter/ ’/ |/ ‘/ Fair/ ’/ DivisionDetail/ =/ DivisionIndex/ ,/ RectangleConstraint/ ;/ RectangleConstraint/ =/ StartX/ ,/ StartY/ ,/ Width/ ,/ Height/ ;/ 智能/ 布局/ 模板/ 是/ 预先/ 定义/ 的/ 模板/ 类型/ 的/ 约束/ ,/ 它/ 主要/ 描述/ 了/ 某个/ 布局/ 的/ 各种/ 属性/ ,/ 包括/ 抽象/ 界面/ 模块/ 的/ 权重/ 类型/ 、/ 各个/ 组成部分/ 的/ 位置/ 信息/ 以及/ 接受/ 的/ 控件/ 的/ 类型/ ./ 智能/ 布局/ 模板/ 主要/ 用于/ 通过/ 全局/ 或/ 局部/ 范围/ 内/ 的/ 布局/ 约束/ 来/ 辅助/ 界面/ 的/ 整体/ 布局/ ,/ 如/ “/ single/ _/ center/ ”/ 模板/ 是/ 一种/ 单/ 中心/ 类型/ 的/ 布局/ 模板/ ,/ 适用/ 于/ 以/ 单一/ 输入/ 作为/ 主体/ 功能/ 的/ 界面/ ,/ 如/ 绘图/ 、/ 笔记/ 等/ 软件/ 的/ 编辑/ 界面/ 等/ ;/ “/ ipad/ _/ common/ ”/ 模板/ ,/ 适用/ 于/ ipad/ 经典/ 的/ 布局/ 方式/ ,/ 即/ 整个/ 界面/ 分为/ 两个/ 主要/ 部分/ :/ 功能/ 导航/ 及/ 功能/ 浏览/ ./ 智能/ 布局/ 模板/ 的/ 描述/ 如下/ ,/ 其中/ 权重/ 类型/ (/ ControlType/ )/ 、/ 控件/ 类型/ (/ ControlType/ )/ 及/ 矩形/ 约束/ (/ RectangleConstraint/ )/ 与/ 前述/ 公式/ 组中/ 的/ 定义/ 相同/ ./ LayoutSmartTemplete/ =/ {/ TempleteDetail/ {/ ,/ TempleteDetail/ }/ }/ ;/ TempleteDetail/ =/ {/ WeighType/ ,/ RectangleConstraint/ ,/ ControlType/ {/ ,/ ControlType/ }/ }/ ;/ 控件/ 选择器/ 是/ 利用/ 界面/ 描述/ 中/ 界面/ 模块/ 及/ 数据/ 模块/ 的/ 定义/ ,/ 并/ 对照/ 移动/ 界面/ 中/ 控件/ 的/ 特性/ ,/ 确定/ 某一/ 具体/ 的/ 功能/ 或/ 功能/ 组所/ 使用/ 的/ 控件/ 类型/ ./ 在/ 该/ 过程/ 中/ ,/ 控件/ 选择器/ 通过/ 访问/ 约束/ 库中/ 预定/ 义/ 的/ 控件/ 选择/ 约束/ ,/ 计算/ 出/ 所有/ 的/ 控件/ 选择/ 及/ 对应/ 的/ 概率/ ./ 例如/ ,/ 在/ 表/ 1/ 中/ ,/ 界面/ 描述/ 使用/ 了/ 抽象/ 界面/ 模块/ 及/ 具体/ 数据/ 模块/ ,/ 那么/ 经过/ 控件/ 选择器/ 后/ ,/ “/ Label/ ”/ 会/ 被/ 作为/ 候选/ ,/ 成为/ 界面/ 布局/ 器/ 的/ 输入/ ;/ 如果/ 界面/ 仅/ 使用/ 了/ 具体/ 数据/ 模块/ 作为/ 数据模型/ 的/ 描述/ ,/ 如表/ 2/ 中/ 的/ 描述/ ,/ 那么/ 通过/ 控件/ 选择器/ 后/ ,/ “/ Switch/ ”/ 、/ “/ CheckBox/ ”/ 、/ “/ RadioButton/ ”/ 将会/ 被/ 作为/ 候选/ ,/ 成为/ 界面/ 布局/ 器/ 的/ 输入/ ./ 在/ 控件/ 选择/ 时/ ,/ 对应/ 的/ 选择/ 概率/ 计算公式/ 如下/ ,/ 其中/ ,/ P/ (/ CS/ )/ 代表/ 控件/ 在/ 当前/ 条件/ 下/ 被/ 选择/ 的/ 概率/ ,/ P/ (/ CGS/ )/ 代表/ 某/ 一个/ 界面/ 的/ 控件/ 组合/ 在/ 当前/ 条件/ 下/ 被/ 选择/ 的/ 概率/ ./ 使用/ 的/ 数据/ 来自/ 约束/ 库中/ 的/ 各种/ 控件/ 选择/ 约束/ ,/ w/ 为/ 预定/ 义/ 的/ 各种/ 控件/ 选择/ 约束/ 的/ 权值/ ./ Page8/ 表/ 1/ 使用/ CDATA/ 与/ AFUI/ 模块/ 描述/ 的/ 用户界面/ 片段/ …/ 〈/ atomgroupdatatype/ =/ "/ "/ hasOrder/ =/ "/ true/ "/ id/ =/ "/ g/ _/ psw/ "/ desc/ =/ "/ g/ _/ psw/ "/ weight/ =/ "/ 0/ "/ name/ =/ "/ text/ "/ orderIndex/ =/ "/ 1/ "/ weightType/ =/ "/ notDefined/ "/ 〉/ …/ 〈/ inputid/ =/ "/ ag/ _/ pswin/ "/ name/ =/ "/ ag/ _/ pswin/ "/ desc/ =/ "/ "/ 〈/ // atomgroup/ 〉/ …/ 〈/ cdataid/ =/ "/ cdata/ "/ desc/ =/ "/ cdata/ "/ name/ =/ "/ cdata/ "/ 〉/ 〈/ cstringid/ =/ "/ data/ _/ pswin/ "/ isfixed/ =/ "/ false/ "/ orderIndex/ =/ "/ 1/ "/ // 〉/ desc/ =/ "/ data/ _/ pswin/ "/ value/ =/ "/ "/ name/ =/ "/ data/ _/ pswin/ "/ source/ =/ "/ file/ "/ 〉/ 〈/ // cstring/ 〉/ 〈/ // cdata/ 〉/ …/ 表/ 2/ 仅/ 使用/ CDATA/ 模块/ 描述/ 的/ 用户界面/ 片段/ …/ 〈/ cdataid/ =/ "/ cdata/ "/ desc/ =/ "/ cdata/ "/ name/ =/ "/ cdata/ "/ 〉/ 〈/ cbinaryid/ =/ "/ isAutoLog/ "/ isfixed/ =/ "/ true/ "/ desc/ =/ "/ isAutoLog/ "/ value/ =/ "/ isAutoLog/ "/ name/ =/ "/ isAutoLog/ "/ source/ =/ "/ file/ "/ // 〉/ 〈/ // cdata/ 〉/ …/ 布局/ 引擎/ 是/ 在/ 确定/ 了/ 控件/ 的/ 候选/ 之后/ ,/ 对/ 界面/ 进行/ 布局/ ./ 该/ 部分/ 以/ 控件/ 选择器/ 的/ 控件/ 选择/ 结果/ 作为/ 输入/ ,/ 并且/ 利用/ 了/ 界面/ 的/ E/ -/ UIDL/ 描述/ 及/ 约束/ 库中/ 的/ 相关/ 的/ 约束/ ,/ 这/ 包括/ :/ ①/ 界面/ 描述语言/ 的/ 抽象/ 界面/ (/ 如果/ 存在/ )/ 描述/ 的/ 各/ 功能/ 组/ 的/ 排序/ 规则/ 以及/ 权重/ 规则/ ./ 这些/ 规则/ 在/ 抽象/ 界面/ 的/ 描述/ 中/ ,/ 以/ Group/ 或/ AtomGroup/ 的/ 属性/ 存在/ ,/ 该/ 规则/ 可以/ 作为/ 约束/ 库/ 的/ 部分/ 输入/ ./ ②/ 各个/ 控件/ 在/ 不同/ 移动/ 操作系统/ 上/ 的/ 尺寸/ 、/ 对齐/ 等/ 约束/ ./ 这些/ 约束/ 主要/ 从/ 各个/ 移动/ 平台/ 提供/ 的/ 界面/ 指导/ 准则/ 中/ 获得/ ,/ 并/ 以/ ControlConstraint/ 的/ 形式/ 存储/ 在/ 约束/ 库中/ ./ 如/ 在/ Android/ 平台/ 上/ ,/ 按钮/ (/ Button/ )/ 的/ 最小/ 尺寸/ 为/ 7mm/ ,/ 最优/ 尺寸/ 为/ 9mm/ ,/ 以/ dp/ 为/ 单位/ ,/ 为/ 48dp/ ./ ③/ 总体/ 的/ 布局/ 约束/ ./ 这/ 主要/ 指/ 应用程序/ 的/ 总体/ 约束/ ,/ 如/ 总/ 的/ 排版/ 规则/ 、/ 目标/ 用户/ 类型/ 等/ ,/ 这些/ 信息/ 除了/ 从/ 界面/ 描述/ 获得/ 外/ ,/ 还/ 从/ 目标/ 设备/ 的/ 软硬件/ 条件/ 获取/ 部分/ 信息/ ./ 将/ 以上/ 规则/ 作为/ 约束/ ,/ 并/ 使用/ 增加/ 了/ 约束/ 的/ 布局/ 算法/ 对/ 界面/ 进行/ 布局/ ,/ 形成/ 初步/ 的/ 界面/ 形态/ ./ 在/ 下面/ 的/ 章节/ 中/ ,/ 我们/ 会/ 介绍/ 一种/ 融合/ 了/ 自/ 底向上/ 与/ 自顶向下/ 方法/ 的/ 自动/ 布局/ 算法/ ,/ 该/ 算法/ 能够/ 充分利用/ 各种/ 规则/ ,/ 实现/ 对/ 界面/ 的/ 布局/ ./ 在/ 形成/ 了/ 初步/ 的/ 界面/ 形态/ 后/ ,/ 我们/ 利用/ 一些/ 规整/ 化/ 的/ 规则/ [/ 19/ ]/ ,/ 对/ 界面/ 进行/ 进一步/ 的/ 优化/ ,/ 这些/ 优化/ 主要/ 集中/ 在/ 对/ 布局/ 的/ 微调/ ,/ 该/ 部分/ 作为/ 界面/ 生成/ 部分/ 的/ 输出/ ,/ 为/ 代码生成/ 器/ 提供/ 输入/ ./ 代码生成/ 器/ 部分/ ,/ 利用/ 界面/ 生成器/ 生成/ 的/ 界面/ ,/ 或者/ 利用/ 具体/ 界面/ 模块/ 与/ 具体/ 数据/ 模块/ 、/ 具体/ 界面/ 模块/ 与/ 抽象/ 数据/ 模块/ 的/ 组合/ 描述/ ,/ 生成/ 特定/ 语言/ 的/ 界面/ ./ (/ 3/ )/ 界面/ 二次开发/ ./ 界面设计/ 人员/ 可以/ 根据/ 生成/ 的/ 界面/ ,/ 对/ 界面/ 进行/ 进一步/ 的/ 设计/ ,/ 并/ 形成/ 最终/ 的/ 用户界面/ ,/ 这样/ 大大简化/ 了/ 界面设计/ 人员/ 设计/ 界面/ 及/ 开发人员/ 开发/ 的/ 工作/ ,/ 一定/ 程度/ 上/ 屏蔽/ 了/ 不同/ 目标语言/ 的/ 差异/ ;/ 另外/ ,/ 该/ 部分/ 也/ 可以/ 为/ 前期/ 的/ 需求/ 分析/ 人员/ 提供/ 直观/ 的/ 展示/ ./ 4.2/ 移动/ 用户界面/ 特征/ 传统/ 的/ 基于/ PC/ 的/ 图形用户界面/ 使用/ 的/ 是/ 桌面/ 隐喻/ ,/ 遵循/ WIMP/ 范式/ ,/ 组成/ 界面/ 的/ 主要/ 部分/ 包括/ 窗口/ 、/ 图标/ 、/ 菜单/ ,/ 通过/ 点击/ 来/ 完成/ 界面/ 的/ 操作/ ./ 经典/ 的/ 图形用户界面/ 的/ 样子/ 是/ 这样/ 的/ ./ 当前/ 移动/ 设备/ 的/ 界面/ 并/ 没有/ 一个/ 公认/ 的/ 理论/ 上/ 的/ 界面/ 范式/ ,/ 但/ 基于/ iOS/ 及/ Android/ 的/ 界面/ 都/ 是/ 使用/ “/ 屏/ ”/ 的/ 概念/ ,/ 即/ 应用/ 的/ 界面/ 是/ 由/ 各个/ 相对/ 独立/ 的/ 屏/ 组成/ ,/ 每个/ 屏/ 根据/ 需求/ 包括/ 状态栏/ 、/ 工具栏/ 、/ 导航/ 栏/ 等/ 在/ 屏幕/ 边缘/ 的/ 栏目/ ,/ 以及/ 由/ 各种/ 控件/ 组成/ 的/ 屏/ 的/ 主体/ ./ 微软/ 提出/ 了/ MetroUI/ 的/ 概念/ ,/ 目标/ 是/ 尝试/ 将/ PC/ 界面/ 与/ 移动/ 设备/ 的/ 界面/ 进行/ 统一/ ,/ 强调/ 以/ 内容/ 为/ 中心/ ,/ 且/ 力求/ 界面/ 简洁/ ./ 其/ 定义/ 了/ 一些/ 界面设计/ 的/ 准则/ ,/ 也/ 是/ 一个/ 积极/ 的/ 尝试/ ./ 我们/ 从/ 控件/ 层/ 对/ 当前/ 流行/ 的/ 两个/ 主流/ 的/ 移动/ 操作系统/ 的/ 界面/ 控件/ (/ 移动/ 控件/ )/ 进行/ 分析/ ,/ 并/ 与/ 基于/ PC/ 的/ 图形用户界面/ 的/ 默认/ 控件/ (/ PC/ 控件/ )/ 进行/ 比较/ ./ 对于/ PC/ 控件/ ,/ 我们/ 主要/ 参考/ 了/ JDK/ 等/ 一些/ 开发/ 工具箱/ 的/ 一些/ 默认/ 实现/ ./ 主要/ 比较/ 了/ 3/ 种/ 平台/ 上/ 默认/ 提供/ 的/ 控件/ 的/ 类型/ ,/ 以及/ 其/ 接受/ 的/ 数据类型/ ./ 其中/ ,/ 控件/ 的/ 类型/ 与/ 数据/ 的/ 类型/ 使用/ 与/ E/ -/ UIDL/ 中/ 同样/ 的/ 描述/ 方法/ ,/ 数据类型/ 包括/ 简单/ 数据类型/ 与/ 复杂/ 数据类型/ 两个/ 主要/ 的/ 数据类型/ ./ 我们/ 发现/ ,/ 由于/ 移动/ 设备/ 本身/ 及/ 使用/ 环境/ 的/ 特点/ ,/ 移动/ 控件/ 呈现/ 了/ 一些/ 与/ PC/ 控件/ 不同/ 的/ 特点/ :/ (/ 1/ )/ 移动/ 控件/ 提供/ 了/ 更/ 多/ 的/ 默认/ 的/ 控件/ 实现/ ./ 相比/ PC/ 控件/ ,/ 两种/ 移动/ 操作系统/ 提供/ 的/ 默认/ 控件/ 相对/ 较/ 多/ ./ 而且/ 同/ 一种/ 类型/ 的/ 控件/ ,/ 移动/ 环境/ 下/ 的/ 控件/ 提供/ 了/ 更/ 多/ 的/ 默认/ 实现/ ./ 分析/ 其/ 原因/ ,/ 对/ 界面/ 开发者/ 而言/ ,/ 基于/ PC/ 的/ 界面/ 有/ 相当/ 大/ 的/ 自由度/ 用来/ 开发/ 自定义/ 控件/ ,/ 而/ 这/ 在/ 移动/ 环境/ 下/ 是/ 不/ 被/ 推荐/ 的/ ./ 例如/ ,/ PC/ 控件/ 中/ 并/ 没有/ 对/ 日期/ 选择/ 控件/ 进行/ 默认/ 实现/ ,/ 而/ 移动/ 控件/ 中则/ 有/ 其/ 详细/ 的/ 默认/ 实现/ ;/ 再/ 如/ ,/ 对于/ 从/ 几种/ 既定/ 选项/ 中/ 选择/ 一项/ 的/ 功能/ ,/ 在/ 移动/ 环境/ 下有/ Spinner/ 与/ Picker/ 两种/ 选择/ ,/ 而/ 在/ PC/ 控件/ 的/ Page9/ 默认/ 实现/ 中/ ,/ 只有/ ComboBox/ 一种/ 推荐/ 的/ 默认/ 实现/ ./ (/ 2/ )/ 同一/ 功能/ 的/ 控件/ ,/ 在/ 界面/ 中/ 的/ 呈现/ 形态/ 有所/ 差别/ ./ 比如/ ,/ 对于/ 二选/ 一/ 的/ 功能/ ,/ 即/ 接收/ 的/ 数据类型/ 为/ 布尔/ 型/ 的/ 数据/ 时/ ,/ PC/ 控件/ 与/ 移动/ 控件/ 有/ 不同/ 的/ 呈现/ 形态/ ./ 在/ 移动/ 界面/ 中/ ,/ 更/ 多/ 的/ 推荐/ 使用/ 一种/ “/ Switch/ ”/ 的/ 控件/ ;/ 而/ 在/ PC/ 控件/ 中/ ,/ 使用/ CheckBox/ 或/ RadioButton/ 较为/ 常见/ ./ 虽然/ 已经/ 在/ PC/ 上/ 有/ 模拟/ 移动/ 控件/ 的/ “/ Switch/ ”/ ,/ 但/ 其/ 在/ PC/ 上/ 使用/ 的/ 效果/ 并/ 不如/ 传统/ 的/ CheckBox/ 或/ RadioButton/ 好/ ./ (/ 3/ )/ 即使/ 同/ 为/ 移动/ 环境/ ,/ 不同/ 操作系统/ 提供/ 的/ 部分/ 控件/ 也/ 有/ 差别/ ./ 这/ 不仅/ 体现/ 在/ 各种/ 控件/ 的/ 呈现/ 形态/ 上/ ,/ 也/ 体现/ 在/ 各个/ 不同/ 的/ 移动/ 操作系统/ 下/ 的/ 控件/ 的/ 尺寸/ 约束/ 上/ ./ 4.3/ 界面/ 生成/ 框架/ 数据结构/ 及/ 关键/ 算法/ 我们/ 将/ 布局/ 引擎/ 的/ 输入/ 抽象/ 成/ 一个/ 改进/ 的/ 有/ 向/ 无/ 环图/ (/ E/ -/ DAG/ )/ ,/ 并/ 包含/ 根/ 节点/ 和/ 明显/ 的/ 层次结构/ ./ 其中/ ,/ E/ -/ DAG/ 的/ 节点/ 由/ 抽象/ 界面/ 模块/ 的/ 每个/ 元素/ 组成/ ;/ E/ -/ DAG/ 的/ 边/ ,/ 则/ 包括/ 两种/ 不同/ 的/ 类型/ ,/ 第/ 1/ 种/ 是/ 抽象/ 界面/ 模块/ 各个/ 元素/ 之间/ 的/ 父子关系/ ,/ 这种/ 关系/ 形成/ 了/ 一个/ 以/ RootGroupNode/ 为根/ 的/ 树/ ,/ 第/ 2/ 种/ 是/ 抽象/ 界面/ 模块/ 中/ GroupNode/ 与/ AtomGroup/ -/ Node/ 的/ 顺序/ 规则/ ,/ 这种/ 规则/ 在/ 界面/ 描述/ 中以/ 元素/ 属性/ 的/ 形式/ 存在/ ./ 除了/ 包括/ 节点/ 的/ 类型/ 属性/ 以外/ ,/ 对于/ 每个/ GroupNode/ 类型/ 的/ 节点/ ,/ 还/ 包括/ 同样/ 以/ 元素/ 属性/ 形式/ 存在/ 的/ 权重/ 规则/ ,/ 而/ 对于/ 叶/ 节点/ ,/ 还/ 包括/ 界面/ 描述语言/ 中/ 提到/ 的/ 各项/ 属性/ ./ 4.3/ ./ 1/ 分屏/ 决策/ 及/ 控件/ 分配/ 算法/ 由于/ 各种/ 交互/ 设备/ 特别/ 是/ 移动/ 设备/ 的/ 尺寸/ 的/ 限制/ ,/ 存在/ 在/ 一个/ 屏幕/ 中/ 不能/ 展示/ 全部/ 功能/ 控件/ 的/ 问题/ ./ 当前/ ,/ 解决/ 这个/ 问题/ ,/ 主要/ 由/ 交互/ 设计师/ 及/ 界面/ 设计师/ 通过/ 手工/ 方式/ 进行/ 界面/ 的/ 布局/ 及/ 设计/ ,/ 而/ 没有/ 自动化/ 的/ 工具/ 来/ 辅助/ 这一/ 过程/ ./ 我们/ 提出/ 一种/ 分屏/ 决策/ 及/ 控件/ 分配/ 的/ 算法/ ,/ 该/ 算法/ 融合/ 了/ 手工/ 指定/ 及/ 自动/ 生成/ 两种/ 方式/ ,/ 既/ 允许/ 通过/ 手工/ 指定/ 的/ 方式/ 决定/ 界面/ 的/ 分屏/ 决策/ 及/ 控件/ 分配/ 方式/ ,/ 也/ 支持/ 自动/ 及/ 半自动/ 的/ 方式/ 生成/ 决策/ ./ 该/ 算法/ 以/ 界面/ 的/ E/ -/ UIDL/ 描述/ 以及/ 通过/ 控件/ 选择器/ 计算/ 的/ 结果/ 作为/ 输入/ ,/ 算法/ 使用/ 递归/ 的/ 方法/ 求解/ 分屏/ 策略/ ,/ 其伪/ 代码/ 描述/ 如下/ ./ FunctionDivisionDecision/ (/ C/ )/ :/ isDivided/ =/ true/ ;/ numOfDivision/ =/ 1/ ;/ if/ (/ !/ isDivided/ )/ Outputthedivisionresult/ ;/ return/ ;/ P/ (/ D/ )/ =/ CalculateP/ (/ CG/ )/ ;/ CalculatetheoverallprobabilityP/ ;/ if/ (/ P/ >/ s/ )/ isDivided/ =/ false/ ;/ continue/ ;/ elsenumOfDivided/ =/ numOfDivision/ +/ DividedC/ (/ )/ -/ 1/ ;/ foreachDCiinresultofDividedC/ (/ )/ DivisionDecision/ (/ DCi/ )/ ;/ 在/ 代码/ 描述/ 中/ ,/ CalculateP/ (/ )/ 为/ 计算/ 某/ 一个/ 特定/ 的/ 控件/ 组合/ 是否/ 需要/ 分屏/ 布局/ 的/ 概率/ ,/ 计算/ 时/ 使用/ 约束/ 库中/ 的/ 控件/ 约束/ ,/ 结合/ 界面/ E/ -/ UIDL/ 的/ 数据/ 模块/ 的/ 描述/ 得出/ ./ DividedC/ (/ )/ 为/ 对/ 单一/ 界面/ 进行/ 分屏/ 操作/ ,/ 该/ 方法/ 使用/ 约束/ 库中/ 的/ 智能/ 布局/ 模板/ ,/ 结合/ E/ -/ UIDL/ 的/ 抽象/ 界面/ 模块/ 中/ 的/ 相关/ 属性/ 如/ Weight/ -/ Type/ 、/ Weight/ 得出/ ./ 在/ 计算/ 出/ 一个/ 控件/ 组合/ 的/ 概率/ P/ (/ D/ )/ 后/ ,/ 需要/ 计算/ 总体/ 的/ 分屏/ 概率/ P/ ,/ 使用/ 如下/ 公式/ :/ 4.3/ ./ 2/ 单屏/ 布局/ 算法/ 在/ 完成/ 了/ 分屏/ 决策/ 以后/ ,/ 需要/ 结合/ 定义/ 的/ 数据结构/ ,/ 对/ 分屏/ 后/ 的/ 界面/ 进行/ 布局/ ./ 我们/ 介绍/ 一种/ 布局/ 算法/ ,/ 该/ 布局/ 算法/ 结合/ 了/ 自/ 底向上/ 与/ 自顶向下/ 的/ 方法/ ./ 核心/ 算法/ 的/ 伪/ 代码/ 如下/ ./ 首先/ ,/ 通过/ 自/ 底向上/ 的/ 方法/ ,/ 计算/ 上层/ 节点/ 的/ 最小/ 尺寸/ 及/ 最优/ 尺寸/ 等/ 约束/ ,/ 并/ 将/ 计算/ 出/ 的/ GroupNode/ 的/ 最小/ 尺寸/ 及/ 最优/ 尺寸/ 两种/ 约束/ 添加/ 为/ 节点/ 的/ 约束/ ,/ 依次/ 更新/ 父/ 节点/ 的/ 尺寸/ 约束/ 直至/ RootGroupNode/ ./ 其中/ ,/ 最小/ 尺寸/ 的/ 自/ 底向上/ 的/ 计算/ 与/ 更新/ ,/ 与/ 文献/ [/ 20/ ]/ 所述/ 方法/ 相同/ ./ 然后/ ,/ 用/ 自顶向下/ 的/ 方法/ 利用/ 权重/ 、/ 顺序/ 、/ 尺寸/ 等/ 约束/ ,/ 根据/ 层级/ 的/ 先后顺序/ ,/ 依次/ 对/ 各个/ 层/ 布局/ ./ 对于/ 同/ 一层/ 的/ 节点/ ,/ 则/ 形成/ 了/ 很多/ 相互/ 独立/ 的/ 有/ 向/ 无/ 环图/ ,/ 该/ 有/ 向/ 无/ 环图/ 的/ 布局/ 方法/ ,/ 可以/ 利用/ 诸如/ Force/ -/ Directed/ 、/ LayeredDrawing/ 等/ 传统/ 图/ 布局/ 方法/ 布局/ ./ 布局/ 时/ 主要/ 利用/ 顺序/ 、/ 权重/ 规则/ 、/ 尺寸/ 等/ 约束/ ,/ 并/ 在/ 当前/ 层/ 布局/ 结束/ 后/ ,/ 依次/ 将/ 约束/ 向子/ 节点/ 更新/ ./ 整个/ 算法/ 是/ 一个/ 不断/ 迭代/ 寻找/ 最优/ 解/ 的/ 过程/ ./ 当/ 迭代/ 次数/ 超过/ 预设/ 的/ 阈值/ ,/ 或者/ 再次/ 优化/ 后/ 已经/ 不能/ 满足/ 各项/ 约束/ 时/ ,/ 算法/ 终止/ ,/ 并/ 返回/ 当前/ 布局/ 后/ 的/ 图/ ./ Page10FunctionLayout/ (/ EDAGraphg/ ,/ Rectanglec/ )/ ForeachLeafNodeingUpdateallminconstraintsfrombottomup/ ;/ ForeachNodeingUpdateallmaxconstraints/ ;/ DoPushRootNodetostack/ ;/ WhilestackisnotemptyPopnodenfromstack/ ;/ Layoutthesub/ -/ graphofnForeachGroupNoden2ofn/ ’/ soutnodePushn2tostack/ ;/ WhileenableoptimizeofallLeafNode/ &&/ unreachthethreadhold/ ;/ 5/ 应用/ 实例/ 利用/ 本文/ 提出/ 的/ 界面/ 生成/ 框架/ ,/ 给出/ 3/ 个/ 应用/ 实例/ ./ 这些/ 实例/ 对应/ 的/ 界面/ 都/ 使用/ E/ -/ UIDL/ 进行/ 不同/ 尺度/ 的/ 描述/ ./ 对于/ 传统/ 的/ 界面/ 开发/ 过程/ 来说/ ,/ 每/ 一个/ 实例/ 的/ 开发/ ,/ 都/ 需要/ 充分考虑/ 在/ 需求/ 分析/ 过程/ 中/ 获取/ 的/ 需求/ 内容/ 的/ 完备/ 程度/ ,/ 以及/ 具体/ 的/ 目标/ 设备/ 的/ 类型/ ,/ 通过/ 这些/ 界面设计/ 时/ 依赖/ 的/ 这些/ 前期/ 的/ 约束/ ,/ 为/ 每种/ 不同/ 类型/ 的/ 约束/ 都/ 生成/ 目标/ 界面/ ./ 这样/ 界面/ 设计师/ 需要/ 设计/ 多次/ (/ 需求/ 完备/ 程度/ 种类/ ×/ 目标/ 设备/ 种类/ )/ 界面/ ,/ 并且/ 界面/ 使用/ 设计/ 工具/ 进行/ 描述/ ,/ 需要/ 界面/ 开发人员/ 使用/ 目标/ 开发/ 语言/ 重新/ 开发/ 界面/ ./ 而/ 通过/ 模块化/ 、/ 多/ 尺度/ 的/ 界面/ 描述/ ,/ 我们/ 可以/ 仅/ 对/ 界面/ 进行/ 一次/ 模块化/ 的/ 描述/ ,/ 并/ 指定/ 其/ 目标/ 设备/ ,/ 通过/ 符合/ 我们/ 提出/ 的/ 界面/ 生成/ 框架/ 的/ 步骤/ ,/ 自动/ 生图/ 6/ 利用/ 框架/ 自动/ 生成/ 的/ 用户界面/ 截图/ 图/ 7/ 一种/ 移动/ 设备/ 上/ 邮件/ 客户端/ 界面/ 自动/ 生成/ 效果/ 成/ 符合要求/ 的/ 用户界面/ ,/ 将/ 生成/ 的/ 界面/ 提供/ 给/ 界面设计/ 人员/ ,/ 界面设计/ 人员/ 在/ 进行/ 进一步/ 的/ 修改/ 后/ ,/ 即/ 生成/ 目标/ 界面/ ./ 生成/ 的/ 界面/ 使用/ 目标/ 开发/ 语言/ 进行/ 描述/ ,/ 进一步/ 缩小/ 了/ 界面设计/ 人员/ 与/ 界面/ 开发人员/ 之间/ 沟通/ 的/ 成本/ ,/ 一定/ 程度/ 上/ ,/ 也/ 减少/ 了/ 界面/ 开发人员/ 的/ 工作量/ ./ 图/ 6/ 给出/ 3/ 个/ 实例/ ,/ NameInput/ 是/ 一个/ 仅/ 允许/ 进行/ 用户/ 输入/ 的/ 实例/ ,/ Login/ 是/ 一个/ 传统/ 的/ 登录/ 界面/ ,/ 这/ 两个/ 实例/ 的/ 界面/ 描述/ 均/ 使用/ 了/ 抽象/ 界面/ 模块/ 与/ 抽象/ 数据/ 模块/ 组合/ 、/ 抽象/ 界面/ 模块/ 与/ 具体/ 数据/ 模块/ 组合/ 两种/ 不同/ 的/ 描述/ 方法/ ,/ 并且/ 两个/ 实例/ 分别/ 有/ 不同/ 的/ 目标/ 设备/ (/ QVGA/ 与/ HVGA/ )/ ./ Form/ 是/ 一个/ 经典/ 的/ 表单/ 界面/ ,/ 主要/ 功能/ 是/ 填写/ 并/ 提交/ 表单/ ./ 该/ 实例/ 使用/ 了/ 抽象/ 界面/ 模块/ 与/ 具体/ 数据/ 模块/ 组合/ 的/ 界面/ 描述/ ,/ 并且/ 其/ 目标/ 设备/ 是/ WVGA/ 尺寸/ 的/ 屏幕/ ./ 3/ 个/ 实例/ 的/ 目标/ 平台/ 均/ 为/ Android/ ,/ 版本号/ 为/ 2.3/ ./ 3/ ./ 图/ 6/ 是/ 生成/ 的/ 部分/ 界面/ 的/ 截图/ ./ 其中/ 图/ 6/ (/ e/ )/ 至图/ 6/ (/ h/ )/ 是/ 经典/ 的/ 表单/ 输入/ 界面/ ,/ 这里/ 介绍/ 了/ 两种/ 不同/ 的/ 界面/ ,/ 两种/ 界面/ 的/ 差别/ 主要/ 在/ 具体/ 数据/ 模块/ 的/ 定义/ 上/ ,/ 在/ 具体/ 生成/ 界面/ 阶段/ ,/ 我们/ 使用/ 了/ 类似/ SmartTemplete/ [/ 9/ ]/ 的/ 方式/ ,/ 来/ 解决/ 目标语言/ 在/ 同一个/ 控件/ 接收/ 不同/ 数据/ 时/ 的/ 不同/ 呈现/ 问题/ ./ 图/ 7/ 介绍/ 了/ 一种/ 移动/ 设备/ 上/ 邮件/ 客户端/ 界面/ 自动/ 生成/ 效果/ ./ 其中/ ,/ 图/ 7/ (/ a/ )/ 至图/ 7/ (/ c/ )/ ,/ 图/ 7/ (/ d/ )/ 至图/ 7/ (/ f/ )/ 分别/ 是/ 两种/ 不同/ 的/ 设备/ 上下文/ 环境/ 下/ 生成/ 的/ 界面/ ,/ 从图/ 中/ 可以/ 看到/ 该/ 描述/ 下/ 的/ 分屏/ 策略/ 以及/ 布局/ 结果/ ./ Page116/ 总结/ 本文/ 针对/ 当前/ 移动/ 用户界面/ 自动/ 生成/ 遇到/ 的/ 问题/ ,/ 首先/ 提出/ 了/ 一种/ 多/ 尺度/ 的/ 界面/ 描述/ 方法/ ,/ 该/ 方法/ 实现/ 了/ 对/ 界面/ 进行/ 不同/ 层次/ 的/ 描述/ ,/ 并/ 使用/ 了/ 模块化/ 的/ 描述/ 方法/ ./ 以该/ 描述/ 方法/ 为/ 基础/ ,/ 提出/ 一种/ 基于/ 该/ 方法/ 的/ 移动/ 界面/ 生成/ 框架/ ,/ 详细/ 介绍/ 了/ 框架/ 中/ 界面/ 生成/ 部分/ 的/ 关键/ 算法/ ./ 最后/ ,/ 通过/ 实例/ 对/ 框架/ 进行/ 了/ 初步/ 验证/ ./ 这种/ 方法/ 能够/ 提高/ 需求/ 分析/ 人员/ 、/ 界面设计/ 人员/ 及/ 界面/ 开发人员/ 的/ 效率/ ,/ 降低/ 因/ 不同/ 领域/ 知识/ 导致/ 的/ 额外/ 沟通/ 成本/ ./ 本文/ 所述/ 界面/ 生成/ 框架/ 及/ 对应/ 的/ 布局/ 引擎/ ,/ 需要/ 依赖于/ 提出/ 的/ 界面/ 描述/ 方法/ ./ 该/ 界面/ 描述/ 方法/ 除了/ 能够/ 通过/ 对/ 界面/ 进行/ 多/ 尺度/ 的/ 描述/ ,/ 来/ 实现/ 如/ 本文/ 所述/ 的/ 界面/ 自动/ 生成/ 算法/ 外/ ,/ 还/ 能够/ 对/ 其它/ 多种/ Post/ -/ WIMP/ 范式/ 的/ 界面/ ,/ 尤其/ 是/ 笔式/ 用户界面/ 进行/ 描述/ ;/ 对/ 此项/ 特性/ 的/ 支持/ ,/ 我们/ 将/ 通过/ 单独/ 的/ 文章/ 介绍/ ./ 另外/ ,/ 我们/ 正在/ 尝试/ 将/ 通过/ 混合/ 自动机/ 来/ 描述/ 连续/ 交互/ 及/ 多通道/ 交互/ 的/ 方法/ [/ 21/ -/ 22/ ]/ 融入/ 到/ 当前/ 的/ 界面/ 描述/ 方法/ 中/ ./ 除此之外/ ,/ 本文/ 所述/ 的/ 方法/ 还有/ 以下/ 方面/ 需要/ 改进/ :/ 首先/ ,/ 在/ 本文/ 中/ 我们/ 对/ 移动/ 界面/ 进行/ 了/ 分析/ ,/ 主要/ 关注/ 在/ 移动/ 界面/ 中/ 与/ 传统/ 图形用户界面/ 在/ 控件/ 一级/ 的/ 比较/ ,/ 并/ 没有/ 将/ 它/ 作为/ 工作/ 的/ 重点/ ./ 但/ 移动/ 用户界面/ 与/ 传统/ 图形用户界面/ 的/ 区别/ 不仅/ 体现/ 在/ 控件/ 的/ 类型/ 及/ 控件/ 接收/ 的/ 数据/ 上/ ,/ 还/ 包括/ 屏/ 的/ 布局/ 以及/ 更/ 深层次/ 的/ 界面/ 隐喻/ 等/ ./ 对/ 当前/ 移动/ 界面/ 进行/ 深入分析/ ,/ 找到/ 其中/ 的/ 各种/ 规律/ ,/ 对于/ 下/ 一步/ 的/ 界面/ 生成/ 工作/ ,/ 有着/ 重要/ 的/ 意义/ ./ 其次/ ,/ 本文/ 提到/ 的/ 数据结构/ 及/ 对应/ 的/ 布局/ 引擎/ 有着/ 较强/ 的/ 适应性/ ,/ 正如/ 文中/ 所述/ ,/ 在/ 算法/ 中/ ,/ 子图/ (/ Sub/ -/ graph/ )/ 布局/ 算法/ 可以/ 使用/ 各种/ 经典/ 的/ 图/ 布局/ 算法/ 来/ 完成/ ./ 本文/ 选择/ 了/ 一种/ 较为简单/ 的/ 实现/ ,/ 在/ 今后/ 的/ 工作/ 中/ ,/ 我们/ 会/ 尝试/ 将/ Force/ -/ Directed/ 、/ LayeredDrawing/ 等/ 传统/ 图/ 布局/ 算法/ 用/ 在/ 子/ 图/ 的/ 布局/ 中/ ,/ 并/ 分析/ 各种/ 子图/ 布局/ 算法/ 对/ 整个/ 界面/ 布局/ 的/ 影响/ ./ 

