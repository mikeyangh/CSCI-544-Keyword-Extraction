Page1/ 基于/ 谓词/ 执行/ 序列/ 的/ 软件缺陷/ 定位/ 算法/ 李伟/ 郑征/ 郝鹏/ 高乙超/ 饶/ 培峰/ 宫成/ (/ 北京航空航天大学/ 自动化/ 科学/ 与/ 电气/ 工程学院/ 北京/ 100191/ )/ 摘要/ 谓词/ 执行/ 信息/ 收集/ 和/ 利用/ 的/ 程度/ 会/ 直接/ 影响/ 基于/ 谓词/ 的/ 统计学/ 缺陷/ 定位/ 方法/ (/ PBSD/ )/ 的/ 定位/ 效果/ ./ 文中/ 主要/ 围绕/ 两个/ 问题/ 进行/ 研究/ :/ (/ 1/ )/ 是否/ 可以/ 通过/ 增加/ 谓词/ 的/ 执行/ 信息量/ 来/ 提高/ 算法/ 的/ 定位精度/ ?/ (/ 2/ )/ 执行/ 信息量/ 与/ 算法/ 定位精度/ 有/ 什么/ 关系/ ?/ 在/ 此基础/ 上/ ,/ 设计/ 了/ 一种/ 基于/ 谓词/ 执行/ 序列/ 的/ 软件缺陷/ 定位/ 算法/ ,/ 通过/ 引入/ 谓词/ 执行/ 序列/ 增大/ 算法/ 使用/ 的/ 谓词/ 执行/ 信息量/ ./ 实验/ 表明/ ,/ 增大/ 谓词/ 执行/ 信息量/ 确实/ 可以/ 提高/ 缺陷/ 定位精度/ ,/ 且/ 当/ 程序/ 中/ 谓词/ 执行/ 信息量/ 充足/ 时/ ,/ 定位精度/ 会/ 随/ 信息量/ 的/ 增加/ 不断/ 提高/ ./ 关键词/ 软件缺陷/ 定位/ ;/ 软件/ 调试/ ;/ 统计学/ 调试/ ;/ 谓词/ ;/ 执行/ 序列/ 1/ 引言/ 软件缺陷/ 定位/ 是/ 指当/ 软件/ 发生/ 失效/ 时/ ,/ 程序员/ 通过/ 分析程序/ 源代码/ ,/ 找到/ 引发/ 该/ 失效/ 的/ 缺陷/ 代码/ 的/ 行为/ [/ 1/ ]/ ./ 传统/ 的/ 软件缺陷/ 定位/ 多/ 是/ 利用/ 交互式/ 的/ 调试/ 工具/ 人工/ 完成/ ,/ 调试/ 效率/ 低/ ,/ 很难/ 满足/ 和/ 适应/ 大型/ 复杂/ 软件/ 的/ 调试/ 需求/ ,/ 因此/ ,/ 相关/ 研究/ 人员/ 一直/ 致力于/ 研究/ 自动化/ 的/ 软件缺陷/ 定位/ 方法/ ./ 近年来/ ,/ 一类/ 基于/ 谓词/ 的/ 统计学/ 缺陷/ 定位/ 方法/ [/ 2/ -/ 7/ ]/ (/ PredicatesPage2/ 精度/ 之间/ 有/ 什么/ 关系/ ?/ 来/ 提高/ 算法/ 的/ 定位精度/ ?/ BasedStatisticalDebugging/ ,/ PBSD/ )/ 相继/ 被/ 提出/ ,/ 该类/ 方法/ 通过/ 收集/ 和/ 分析/ 程序运行/ 过程/ 中/ 谓词/ 的/ 执行/ 信息/ 来/ 确定/ 程序/ 中/ 谓词/ 与/ 缺陷/ 的/ 相关/ 程度/ ./ 具体/ 过程/ 为/ :/ (/ 1/ )/ 通过/ 对/ 谓词/ 进行/ 插桩/ ,/ 得到/ 程序运行/ 过程/ 中/ 谓词/ 的/ 执行/ 信息/ ./ 虽然/ 程序/ 任何/ 一次/ 单独/ 运行/ 所/ 输出/ 的/ 谓词/ 执行/ 信息/ 不/ 一定/ 能/ 反映/ 完整/ 的/ 程序执行/ 特征/ ,/ 但是/ 通过/ 多次/ 运行/ 可以/ 收集/ 到/ 谓词/ 的/ 多组/ 执行/ 信息/ ,/ 将/ 这些/ 信息/ 进行/ 统计学/ 分析/ 可以/ 得到/ 谓词/ 的/ 一个/ 较完整/ 执行/ 特征/ ./ (/ 2/ )/ 将/ 谓词/ 在/ 程序运行/ 成功/ 与/ 运行/ 失败/ 时所/ 得到/ 的/ 执行/ 特征/ 进行/ 一致性/ 比较/ ,/ 获得/ 谓词/ 与/ 缺陷/ 的/ 关联度/ ./ 上述/ 过程/ 表明/ ,/ 作为/ 从/ 程序/ 中/ 抽取/ 的/ 特征/ ,/ 谓词/ 执行/ 信息/ 的/ 类型/ 和/ 信息量/ 大小/ 是/ 这类/ 方法/ 的/ 核心/ 和/ 基础/ ./ 因此/ ,/ 本文/ 针对/ 现有/ PBSD/ 方法/ 所/ 利用/ 的/ 执行/ 信息/ 进行/ 分析/ ,/ 发现/ 关于/ 谓词/ 执行/ 信息/ 收集/ 存在/ 的/ 不足/ :/ 现有/ 方法/ 忽略/ 了/ 对于/ 谓词/ 判断/ 顺序/ 这一/ 重要/ 信息/ 的/ 收集/ ,/ 导致/ 其/ 对/ 某些/ 缺陷/ 的/ 定位精度/ 不够/ 准确/ ./ 据此/ ,/ 本文/ 围绕/ 以下/ 两个/ 问题/ 展开/ 研究/ :/ 问题/ 1/ :/ 是否/ 可以/ 通过/ 增加/ 谓词/ 的/ 执行/ 信息量/ 问题/ 2/ :/ 谓词/ 执行/ 信息量/ 的/ 增加/ 与/ 算法/ 的/ 定位/ 我们/ 首先/ 考虑/ 增加/ 算法/ 中/ 谓词/ 的/ 执行/ 信息量/ ,/ 将/ 谓词/ 判断/ 顺序/ 这一/ 有用/ 信息/ 加入/ 到/ 算法/ 的/ 设计/ 中/ ,/ 提出/ 了/ 一种/ 基于/ 谓词/ 执行/ 序列/ 的/ 软件缺陷/ 定位/ 算法/ (/ PredicateExecution/ -/ SequenceBasedFaultLocalizationAlgorithm/ ,/ 简称/ Pesla/ 算法/ )/ ,/ 并/ 通过/ 进一步/ 增大/ 谓词/ 执行/ 信息量/ 对/ 算法/ 进行/ 扩展/ ,/ 得到/ Nbit/ -/ Pesla/ 算法/ ./ 实验/ 表明/ ,/ 通过/ 增加/ 谓词/ 的/ 执行/ 信息量/ 的确/ 可以/ 有效/ 提高/ 算法/ 的/ 定位精度/ ,/ 但/ 同时/ 也/ 发现/ ,/ 单纯/ 增加/ 算法/ 中/ 使用/ 的/ 谓词/ 执行/ 信息量/ 并不一定/ 会/ 提高/ 算法/ 的/ 定位精度/ ,/ 因为/ 算法/ 的/ 定位精度/ 还/ 与/ 待测/ 程序/ 有关/ ./ 当待测/ 程序/ 中/ 所/ 蕴含/ 的/ 信息/ 可以/ 满足/ 算法/ 的/ 需求/ 时/ ,/ 算法/ 的/ 定位精度/ 会/ 随着/ 执行/ 信息量/ 的/ 增加/ 不断/ 提高/ ,/ 相反/ 则/ 会/ 下降/ ./ 基于/ 该/ 思想/ ,/ 本文/ 最后/ 讨论/ 了/ 如何/ 针对/ 不同/ 程序/ 的/ 执行/ 信息/ 为/ Nbit/ -/ Pesla/ 算法/ 选取/ 合适/ N/ 值/ 的/ 问题/ ./ 本文/ 第/ 2/ 节/ 简单/ 介绍/ 缺陷/ 定位/ 领域/ 的/ 研究/ 现状/ ;/ 第/ 3/ 节/ 给出/ Pesla/ 算法/ 的/ 研究/ 动机/ ;/ 第/ 4/ 节/ 给出/ Pesla/ 算法/ 的/ 基本/ 思想/ 和/ 详细/ 步骤/ ,/ 并/ 将/ 其/ 扩展/ 为/ Nbit/ -/ Pesla/ 算法/ ;/ 第/ 5/ 节/ 中将/ Pesla/ 算法/ 与/ Nbit/ -/ Pesla/ 算法/ 分别/ 在/ Siemens/ 、/ Space/ 软件包/ 中/ 进行/ 实验/ ,/ 将/ 实验/ 结果/ 与/ CBI/ 算法/ [/ 2/ -/ 3/ ]/ 、/ SOBER/ 算法/ [/ 4/ ]/ 、/ Mann/ -/ Whitney/ 算法/ 、/ Wilcoxon/ 算法/ 以及/ F/ -/ test/ 、/ t/ -/ test/ 算法/ [/ 5/ ]/ 进行/ 比较/ 分析/ ,/ 得出结论/ ;/ 第/ 6/ 节对/ 本文/ 进行/ 总结/ 和/ 展望/ ./ 2/ 相关/ 研究/ 软件缺陷/ 定位/ 的/ 研究/ 自/ 20/ 世纪/ 70/ 年代/ 起/ ,/ 至今/ 已/ 形成/ 几类/ 比较/ 有/ 代表性/ 的/ 方法/ ./ 本文/ 主要/ 介绍/ 其中/ 的/ 两类/ ./ 基于/ 程序/ 切片/ 的/ 方法/ [/ 8/ ]/ 是/ 最早/ 提出/ 的/ 一类/ 方法/ ,/ 该类/ 方法/ 将/ 可能/ 影响/ 同一/ 变量值/ 的/ 相关/ 语句/ 所/ 组成/ 的/ 集合/ 定义/ 为/ 一个/ 切片/ ,/ 通过/ 对比/ 程序运行/ 成功/ 与/ 失败/ 时/ ,/ 同一/ 变量/ 所/ 对应/ 切片/ 包含/ 语句/ 的/ 异同/ ,/ 推测/ 缺陷/ 可能/ 的/ 位置/ ./ 根据/ 所/ 使用/ 的/ 不同/ 程序/ 切片/ ,/ 基于/ 切片/ 的/ 方法/ 还/ 可/ 分为/ 基于/ 静态/ 切片/ 的/ 方法/ [/ 9/ ]/ 、/ 基于/ 动态/ 切片/ 的/ 方法/ [/ 8/ ,/ 10/ -/ 12/ ]/ 以及/ 基于/ 执行/ 切片/ [/ 13/ ]/ 的/ 方法/ ./ 另外/ 一类/ 重要/ 的/ 缺陷/ 定位/ 方法/ 是/ 基于/ 程序/ 谱/ 的/ 方法/ ,/ 该类/ 方法/ 最早/ 由/ Collofello/ 和/ Cousins/ 提出/ [/ 14/ ]/ ,/ 通过/ 插桩/ ,/ 收集/ 程序运行/ 过程/ 中/ 输出/ 的/ 执行/ 信息/ 来/ 定位/ 程序/ 中/ 的/ 缺陷/ ,/ 但是/ 早期/ 的/ 方法/ 仅/ 考虑/ 了/ 程序运行/ 失败/ 时/ 的/ 情况/ ,/ 直到/ Tarantula/ 算法/ [/ 15/ ]/ 的/ 提出/ ,/ 才/ 加入/ 了/ 程序运行/ 成功/ 时/ 的/ 执行/ 信息/ ./ 而/ 根据/ 所/ 使用/ 的/ 程序/ 谱/ 的/ 不同/ ,/ 该类/ 方法/ 可以/ 分为/ 基于/ 可/ 执行/ 语句/ 的/ 方法/ 和/ 基于/ 谓词/ 的/ 方法/ ./ 作为/ 一种/ 典型/ 的/ 基于/ 可/ 执行/ 语句/ 的/ 方法/ ,/ Tarantula/ 算法/ 利用/ 程序/ 中/ 可/ 执行/ 语句/ 在/ 失败/ 运行/ 时/ 出现/ 的/ 频率/ 来/ 估计/ 其/ 含有/ 缺陷/ 的/ 可能性/ ,/ 在/ 此基础/ 上/ ,/ 学者/ 们/ 又/ 相继/ 提出/ 了/ 另外/ 33/ 种/ 基于/ 可/ 执行/ 语句/ 的/ 方法/ ,/ Naish/ 等/ 人/ [/ 16/ ]/ 已/ 对/ 这/ 33/ 种/ 方法/ 进行/ 了/ 总结/ 和/ 系统/ 的/ 介绍/ ./ 本文/ 所提/ 算法/ 属于/ 基于/ 谓词/ 的/ 方法/ ./ CBI/ 和/ SOBER/ 作为/ 两种/ 代表性/ 算法/ ,/ 在/ 第/ 3/ 节/ 论述/ 本文/ 研究/ 动机/ 时会/ 有/ 介绍/ ./ Hu/ 和/ Zhang/ 等/ 人/ [/ 6/ ]/ 指出/ SOBER/ 所/ 使用/ 的/ 假设检验/ 方法/ 有/ 一个/ 基本前提/ ,/ 即/ 谓词/ 的/ “/ EvaluationBias/ ”/ [/ 4/ ]/ 符合/ 正态分布/ ,/ 但是/ 实验/ 表明/ ,/ 相当/ 一部分/ 谓词/ 的/ “/ EvaluationBias/ ”/ 并/ 不/ 符合/ 正态分布/ ,/ 因此/ ,/ 文献/ [/ 6/ ]/ 将/ 非/ 参数/ 假设检验/ 的/ 方法/ Mann/ -/ Whitney/ 检验/ 、/ Wilcoxon/ 检验/ 分别/ 应用/ 于/ 缺陷/ 定位/ [/ 5/ ]/ ,/ 实验/ 表明/ ,/ 非/ 参数/ 假设检验/ 方法/ 具有/ 更好/ 的/ 定位/ 效果/ ./ 此外/ ,/ 在/ CBI/ 和/ SOBER/ 的/ 基础/ 上/ ,/ Zhang/ 等/ 人/ [/ 7/ ]/ 还/ 提出/ 了/ 一种/ 基于/ 谓词/ “/ evaluationsequences/ ”/ 的/ 改良/ 方法/ ,/ 同样/ 提高/ 了/ 对/ 部分/ 缺陷/ 的/ 定位精度/ ./ 近年来/ ,/ 将/ 软件缺陷/ 定位/ 技术/ 与/ 机器/ 学习/ 、/ 数据挖掘/ 等/ 领域/ 相关/ 理论/ 融合/ 逐渐/ 成为/ 该/ 方向/ 研究/ 的/ 新/ 热点/ ,/ 一系列/ 算法/ 被/ 相继/ 提出/ :/ Wong/ 等/ 人/ [/ 17/ ]/ 提出/ 了/ Page3/ 基于/ BP/ 神经网络/ 的/ 缺陷/ 定位/ 算法/ ;/ 而/ Briand/ 等/ 人/ [/ 18/ ]/ 则/ 提出/ 使用/ C4/ ./ 5/ 决策树/ 算法/ 生成/ 规则/ 对/ 测试用例/ 进行/ 分类/ 进而/ 达到/ 缺陷/ 定位/ 的/ 目的/ ;/ 另外/ 还有/ 一些/ 基于/ 机器/ 学习/ 的/ 算法/ 在/ 文献/ [/ 19/ ]/ 中有/ 较/ 详细/ 介绍/ ./ 3/ 研究/ 动机/ 本节/ 对/ CBI/ 算法/ [/ 2/ -/ 3/ ]/ 和/ SOBER/ 算法/ [/ 4/ ]/ 中/ 谓词/ 执行/ 信息/ 的/ 收集/ 和/ 使用/ 进行/ 分析/ 比较/ ,/ 以/ 一个/ 实例/ 说明/ 本文/ 的/ 研究/ 动机/ ./ Liblit/ 等/ 人/ [/ 2/ -/ 3/ ]/ 首次/ 在/ 缺陷/ 定位/ 方法/ 中/ 引入/ 针对/ 谓词/ 的/ 插/ 桩/ ,/ 使用/ 谓词/ 执行/ 信息/ 构建/ CBI/ 算法/ ./ 该/ 算法/ 通过/ 比较/ 程序/ 在/ 运行/ 成功/ 与/ 运行/ 失败/ 时/ 谓词/ 是否/ 被/ 判断/ 为/ “/ 真/ ”/ 来/ 计算/ 各/ 谓词/ 与/ 缺陷/ 的/ 关联/ 程度/ ,/ 实验/ 结果表明/ 程序/ 中/ 的/ 缺陷/ 确实/ 与/ 谓词/ 的/ 执行/ 有关/ ,/ 这/ 也/ 证明/ 了/ 基于/ 谓词/ 进行/ 缺陷/ 定位/ 这种/ 思想/ 的/ 正确性/ 和/ 可行性/ ./ 鉴于/ CBI/ 算法/ 的/ 良好/ 定位/ 效果/ ,/ Liu/ 等/ 人/ [/ 4/ ]/ 提出/ 了/ SOBER/ 算法/ ,/ 该/ 算法/ 继承/ 了/ CBI/ 算法/ 的/ 基本/ 思想/ ,/ 同时/ 指出/ CBI/ 算法/ 中/ 谓词/ 执行/ 信息/ 的/ 收集/ 具有/ 局限性/ :/ 程序运行/ 一次/ ,/ 一个/ 谓词/ 只/ 执行/ 一次/ ,/ 这种/ 情况/ 与/ 绝大多数/ 程序/ 中/ 谓词/ 的/ 执行/ 情况/ 是/ 不/ 相符/ 的/ ,/ 实际上/ ,/ 大多数/ 谓词/ 在/ 程序/ 一次/ 运行/ 的/ 过程/ 中/ 被/ 多次/ 执行/ ./ 据此/ ,/ SOBER/ 算法/ 在/ CBI/ 算法/ 的/ 基础/ 上/ 细化/ 了/ 对/ 谓词/ 执行/ 信息/ 的/ 收集/ ,/ 用/ 程序/ 一次/ 运行/ 中/ 谓词/ 被/ 判断/ 为/ “/ 真/ ”/ 和/ 为/ “/ 假/ ”/ 的/ 次数/ 代替/ 是否/ 被/ 执行/ 为/ “/ 真/ ”/ 的/ 判断/ ,/ 并/ 提出/ “/ EvaluationBias/ ”/ 的/ 定义/ (/ 如式/ (/ 1/ )/ 所示/ ,/ 该/ 定义/ 用来/ 衡量/ 谓词/ P/ 在/ 程序/ 一次/ 运行/ 中/ 被/ 判断/ 为/ “/ 真/ ”/ 的/ 概率/ ,/ 其中/ ,/ Φ/ (/ P/ )/ 表示/ “/ Evalua/ -/ tionBias/ ”/ ;/ nt/ (/ P/ )/ 表示/ 程序运行/ 一次/ ,/ 谓词/ P/ 被/ 判断/ 为/ “/ 真/ ”/ 的/ 次数/ ;/ nf/ (/ P/ )/ 表示/ 程序运行/ 一次/ ,/ 谓词/ P/ 被/ 判断/ 为/ “/ 假/ ”/ 的/ 次数/ )/ ./ 根据/ 该/ 定义/ ,/ Liu/ 利用/ 假设检验/ 的/ 方法/ 构建/ 出/ 计算/ 谓词/ 与/ 缺陷/ 相关度/ 的/ 公式/ (/ 如式/ (/ 2/ )/ 所示/ ,/ 其中/ ,/ S/ (/ P/ )/ 表示/ 谓词/ 与/ 缺陷/ 的/ 相关/ 程度/ ;/ fs/ (/ P/ )/ 表示/ 在/ 所有/ 成功/ 测试用例/ 中/ ,/ P/ 被/ 判断/ 为/ “/ 真/ ”/ 的/ 概率/ ;/ ff/ (/ P/ )/ 表示/ 在/ 所有/ 失败/ 测试用例/ 中/ ,/ P/ 被/ 判断/ 为/ “/ 真/ ”/ 的/ 概率/ ;/ Sim/ 表示/ fs/ (/ P/ )/ 与/ ff/ (/ P/ )/ 的/ 相似/ 程度/ ,/ fs/ (/ P/ )/ 、/ ff/ (/ P/ )/ 和/ Sim/ 的/ 具体/ 计算/ 过程/ 详见/ 文献/ [/ 4/ ]/ )/ ./ SOBER/ 算法/ 首先/ 使用/ 式/ (/ 1/ )/ 分别/ 计算/ 出/ 程序/ 在/ 执行/ 一个/ 测试用例/ ,/ 运行/ 成功/ 或/ 失败/ 时/ ,/ 谓词/ P/ 被/ 判断/ 为/ “/ 真/ ”/ 的/ 概率/ Φ/ s/ (/ P/ )/ 或/ Φ/ f/ (/ P/ )/ ,/ 运行/ 全部/ 测试用例/ 后/ 统计/ 得到/ fs/ (/ P/ )/ 和/ ff/ (/ P/ )/ ;/ 最后/ 利用/ 式/ (/ 2/ )/ 计算/ 出/ P/ 与/ 缺陷/ 的/ 相关/ 程度/ S/ (/ P/ )/ ./ 实验/ 表明/ ,/ 由于/ SOBER/ 算法/ 加入/ 了/ 谓词/ 执行/ 次数/ 的/ 比较/ ,/ 其/ 定位/ 效果/ 在/ 一些/ 程序/ 上/ 的/ 表现/ 比/ CBI/ 更好/ ./ 然而/ ,/ 通过/ 分析/ 可以/ 发现/ SOBER/ 算法/ 依然/ 存在/ 不足/ ./ 图/ 1/ 是/ Replace/ 程序/ 中/ 第/ 26/ 个/ 版本/ 的/ 部分/ 代码/ ./ 图中/ 第/ 8/ 行为/ 缺陷/ 代码/ ,/ 第/ 9/ 行为/ 其/ 正确/ 版本/ ./ 可以/ 看出/ ,/ 该/ 缺陷/ 属于/ 逻辑/ 错误/ ,/ 即使/ 经验丰富/ 的/ 程序员/ 也/ 需要/ 一步步/ 调试/ 才/ 可能/ 定位/ ./ 我们/ 首先/ 尝试/ 用/ SOBER/ 算法/ 对/ 其/ 定位/ :/ 加载/ 该/ 程序/ 两个/ 测试用例/ ,/ 一个/ 运行/ 成功/ ,/ 一个/ 运行/ 失败/ ,/ 缺陷/ 所在/ 谓词/ P/ 的/ 执行/ 情况/ 如表/ 1/ 所示/ ,/ P/ 判断/ 为/ “/ 真/ ”/ 记/ 为/ “/ 1/ ”/ ,/ 判断/ 为/ “/ 假/ ”/ 记/ 为/ “/ 0/ ”/ ./ 将/ 这/ 两次/ 运行/ 所/ 输出/ 的/ 谓词/ 执行/ 信息/ 代入/ 式/ (/ 1/ )/ ,/ 得到/ 如下/ 结果/ :/ 在/ 这/ 两次/ 运行/ 中/ ,/ P/ 被/ 判断/ 为/ “/ 真/ ”/ 的/ 概率/ 是/ 相同/ 的/ ,/ 而/ 这/ 并/ 不能/ 发现/ P/ 上/ 的/ 缺陷/ ./ 为/ 确认/ 这一/ 结果/ ,/ 我们/ 加载/ 该/ 程序/ 所有/ 测试用例/ ,/ 将/ 执行/ 信息/ 分别/ 代入/ 式/ (/ 1/ )/ 后/ 进行/ 统计/ 处理/ 得到/ :/ 两者/ 仅仅/ 表现/ 出/ 微小/ 差别/ ,/ 进一步/ 将/ 其/ 代入/ 式/ (/ 2/ )/ 得到/ 该/ 谓词/ 可疑/ 度仅/ 为/ -/ 0.0013/ ,/ 排/ 在/ 所有/ 谓词/ 第/ 47/ 位/ ,/ 考虑/ 到/ 该/ 程序/ 共有/ 65/ 个/ 谓词/ ,/ 这/ 意味着/ 需要/ 检测/ 超过/ 72/ %/ 的/ 谓词/ 才/ 有/ 可能/ 发现/ 该/ 缺陷/ ./ 通过/ 分析/ 发现/ ,/ SOBER/ 算法/ 对/ 该/ 缺陷/ 定位精度/ 低下/ 的/ 原因/ 在于/ :/ 该/ 算法/ 仅/ 考虑/ 了/ 谓词/ 的/ 执行/ 次数/ ,/ 而/ 忽略/ 了/ 谓词/ 的/ 判断/ 顺序/ ./ 在/ 上述/ 两次/ 运行/ 中/ ,/ 谓词/ 判断/ 为/ “/ 真/ ”/ 和/ 判断/ 为/ “/ 假/ ”/ 的/ 次数/ 是/ 相同/ 的/ ,/ 但/ 其/ 判断/ 顺序/ 不同/ ,/ 分别/ 为/ “/ 真假/ 假真/ 真真假假/ ”/ 和/ “/ 真假/ 假/ Page4/ 假/ 真真假/ 真/ ”/ ./ SOBER/ 算法/ 虽然/ 比较/ 了/ 这/ 两次/ 执行/ 中/ P/ 被/ 判断/ 为/ “/ 真/ ”/ 和/ “/ 假/ ”/ 的/ 次数/ ,/ 但是/ 忽略/ 了/ 其/ 判断/ 顺序/ ,/ 从而/ 无法/ 找到/ 其中/ 的/ 差别/ ./ 对于/ 该/ 程序/ 的/ 其它/ 测试用例/ ,/ 这种/ 情况/ 同样/ 存在/ ,/ SOBER/ 算法/ 无法/ 捕捉/ 谓词/ 判断/ 顺序/ 上/ 的/ 差异/ ,/ 从而/ 影响/ 其/ 定位精度/ ./ 为/ 解决/ 这一/ 问题/ ,/ 一个/ 很/ 自然/ 的/ 想法/ 是/ 加入/ 谓词/ 的/ 判断/ 顺序/ ./ 由此/ 引出/ 本文/ 研究/ 的/ 两个/ 核心/ 问题/ :/ (/ 1/ )/ 是否/ 可以/ 通过/ 增加/ 谓词/ 的/ 执行/ 信息量/ 来/ 提高/ 算法/ 的/ 定位精度/ ?/ (/ 2/ )/ 谓词/ 执行/ 信息量/ 的/ 增加/ 与/ 算法/ 的/ 定位精度/ 为/ 回答/ 这/ 两个/ 问题/ ,/ 在/ 下/ 一节/ 中/ ,/ 本文/ 将/ 引入/ 谓词/ 执行/ 序列/ 的/ 概念/ ,/ 通过/ 定义/ 谓词/ 执行/ 序列/ 向量/ 来/ 表征/ 谓词/ 的/ 判断/ 顺序/ ,/ 从而/ 在/ 计算/ 谓词/ 缺陷/ 关联度/ 时/ 引入/ 谓词/ 的/ 判断/ 顺序/ ./ 之间/ 有/ 什么/ 关系/ ?/ 根据/ 本文/ 4.1/ 节/ 描述/ 的/ 定义/ 2/ ,/ 将表/ 3/ 所示/ 信息/ 代入/ ,/ 可/ 得到/ 成功/ 时/ 的/ 2/ 位/ 执行/ 序列/ 向量/ 为/ {/ 2/ ,/ 1/ ,/ 2/ ,/ 2/ }/ ,/ 失败/ 时/ 的/ 2/ 位/ 执行/ 序列/ 向量/ 为/ {/ 2/ ,/ 2/ ,/ 2/ ,/ 1/ }/ ,/ 可以/ 看出/ 这/ 两个/ 2/ 位/ 执行/ 序列/ 向量/ 有/ 明显/ 区别/ ,/ 进一步/ 将/ 所有/ 测试用例/ 代入/ ,/ 使用/ 本文/ 4.2/ 节/ 的/ 算法/ 1/ ,/ 可得/ 该/ 谓词/ 的/ 缺陷/ 关联度/ 在/ 所有/ 谓词/ 当中/ 排在/ 了/ 第/ 2/ 位/ ,/ 相比/ SOBER/ 算法/ 提高/ 了/ 45/ 位/ ./ 4/ 基于/ 谓词/ 执行/ 序列/ 的/ 软件缺陷/ 定位/ 算法/ 4.1/ 基本/ 定义/ 定义/ 1/ (/ 谓词/ 执行/ 序列/ )/ ./ 设/ Pi/ 是/ 程序/ 中/ 第/ i/ 个/ 桩/ 点/ 处/ 的/ 谓词/ ,/ 程序/ 在/ 第/ k/ 次/ 运行/ 中/ ,/ Pi/ 执行/ m/ 次/ ,/ 则/ 其/ 执行/ 序列/ 定义/ 为/ 其中/ ,/ esjPi/ 的/ 判断/ 结果/ ,/ 若/ 判断/ 为/ “/ 真/ ”/ 则/ esj/ 谓词/ 执行/ 序列/ 是/ 通过/ 在/ 程序/ 中/ 插/ 桩/ 所/ 获得/ 的/ 谓词/ 实际/ 执行/ 信息/ ,/ 表示/ 了/ 程序运行/ 过程/ 中/ 谓词/ 的/ 实际/ 执行/ 情况/ ,/ 包括/ 谓词/ 执行/ 的/ 次数/ 、/ 每次/ 的/ 判断/ 结果/ 以及/ 判断/ 为/ “/ 真/ ”/ 和/ “/ 假/ ”/ 的/ 先后顺序/ ./ 定义/ 2/ (/ N/ 位/ 执行/ 序列/ 向量/ )/ ./ 设/ Pi/ 是/ 程序/ 中/ 第/ i/ 个/ 桩/ 点/ 处/ 的/ 谓词/ ,/ 程序/ 第/ k/ 次/ 运行/ ,/ Pi/ 的/ N/ 位/ 执行/ 序列/ 向量/ 定义/ 为/ 犈/ NkPi/ =/ (/ n00/ …/ ︸/ 00/ 其中/ ,/ na1a2/ …/ aN/ 为/ 执行/ 序列/ ESk/ 的/ 个数/ ,/ al/ =/ 0/ 或/ 1/ ,/ l/ =/ 1/ ,/ 2/ ,/ …/ ,/ N/ ./ 由此/ 可/ 得/ 程序/ 第/ k/ 次/ 运行/ ,/ Pi/ 的/ 2/ 位/ 执行/ 序列/ 向量/ 为/ 犲/ k/ 列/ ESkPi/ 包含/ 子/ 序列/ a1a2/ 的/ 个数/ ,/ al/ =/ 0/ 或/ 1/ ,/ l/ =/ 1/ ,/ 2/ ./ N/ 位/ 执行/ 序列/ 向量/ 是从/ 谓词/ 执行/ 序列/ 中/ 提取/ 出/ 的/ 谓词/ 执行/ 信息/ ,/ 是/ 算法/ 直接/ 操作/ 和/ 使用/ 的/ 谓词/ 执行/ 信息/ ./ 定义/ 3/ (/ 缺陷/ 关联度/ )/ ./ 谓词/ Pi/ 的/ 缺陷/ 关联度/ 定义/ 为/ 程序运行/ 成功/ 时/ Pi/ 的/ N/ 位/ 执行/ 序列/ 向量/ Pi/ +/ 与/ 程序运行/ 失败/ 时/ Pi/ 的/ N/ 位/ 执行/ 序列/ 向量/ 犈/ NPi/ -/ 的/ 距离/ ,/ 用/ 2/ -/ 范数/ 表示/ :/ 犈/ N/ 当/ N/ =/ 2/ 时该/ 表达式/ 也/ 可/ 表示/ 为/ 其中/ ,/ 犲/ Pi/ +/ 是/ 程序运行/ 成功/ 时/ ,/ Pi/ 的/ 两位/ 执行/ 序列/ 向量/ ;/ 犲/ Pi/ -/ 是/ 程序运行/ 失败/ 时/ ,/ Pi/ 的/ 两位/ 执行/ 序列/ 向量/ ./ 4.2/ 算法/ 描述/ 本节/ 将/ 详细/ 介绍/ 基于/ 谓词/ 执行/ 序列/ 的/ 缺陷/ 定位/ 算法/ Pesla/ 的/ 基本/ 思想/ 和/ 实现/ 步骤/ ./ Pesla/ 算法/ 的/ 基本/ 思想/ 是/ :/ 对于/ 桩/ 点/ 处/ 的/ 谓词/ P/ ,/ 比较/ P/ 在/ 程序运行/ 成功/ 与/ 失败/ 时/ 的/ 执行/ 序列/ ,/ 根据/ 定义/ 3/ 算出/ 所有/ 桩/ 点/ 处/ 谓词/ 的/ 缺陷/ 关联度/ ,/ 将/ 谓词/ 按照/ 缺陷/ 关联度/ 进行/ 排序/ ./ P/ 的/ 缺陷/ 关联度/ 越大/ ,/ 则/ 认为/ P/ 以及/ 与/ P/ 有/ 数据/ 或/ 控制/ 关联/ 的/ 程序代码/ 含有/ 缺陷/ 的/ 概率/ 越大/ ./ 部分/ :/ Pesla/ 算法/ 的/ 实现/ 分为/ 数据/ 收集/ 和/ 数据/ 统计/ 两/ (/ 1/ )/ 数据/ 收集/ 部分/ ./ 传统/ 的/ 数据/ 收集/ 方式/ 是/ 通过/ 在/ 待测/ 程序/ 中/ 插入/ 桩/ 点/ ,/ 然后/ 输入/ 程序/ 的/ 测试用例/ 来/ 实现/ 的/ ./ 为/ 公平/ 比较/ 算法/ 的/ 定位/ 效果/ ,/ 本文/ 选择/ 与/ SOBER/ 相同/ 的/ 插/ 桩/ 方式/ ,/ 对/ if/ // while/ // for/ 这/ 3/ 类/ 分支/ 语句/ 以及/ 函数/ 返回值/ (/ return/ 语句/ )/ [/ 2/ ]/ 中/ 的/ 谓词/ 进行/ 插桩/ ;/ (/ 2/ )/ 数据/ 统计/ 部分/ ./ 对/ 收集/ 到/ 的/ 谓词/ 执行/ 信息/ 进行/ 统计/ 处理/ 是/ Pesla/ 算法/ 的/ 核心/ ./ 收集/ 到/ 的/ 谓词/ 执行/ 信息/ 分为/ 两类/ ,/ 一类/ 是/ 程序运行/ 成功/ 时/ 的/ 谓词/ 执行/ 序列/ 集/ INFOs/ ;/ 另一类/ 是/ 程序运行/ 失败/ 时/ 的/ 谓词/ 执行/ 序列/ 集/ INFOf/ (/ s/ 和/ f/ 分别/ 表示/ 成功/ 测试用例/ 和/ 失败/ 测试用例/ 的/ 个数/ )/ ./ 分别/ 从/ INFOs/ 和/ INFOf/ 中/ 统计/ 出/ 谓词/ Pi/ 的/ 2/ 位/ 执行/ 序列/ 向量/ 犲/ Pi/ +/ 和/ 犲/ Pi/ -/ ,/ 代入/ 式/ (/ 4/ )/ 即可/ 得到/ Pi/ 的/ 缺陷/ 关联度/ ./ 计算/ 出/ 所有/ 桩/ 点/ 处/ 谓词/ 的/ 缺陷/ 关联度/ 后/ ,/ 将/ 谓词/ 按照/ 缺陷/ 关联度/ 大小/ 排序/ 即可/ 得到/ 输出/ Report/ ./ 详细描述/ Page5/ 见/ Pesla/ 算法/ ./ 算法/ 1/ ./ Pesla/ 算法/ ./ 输入/ :/ INFOs/ ,/ INFOf/ 输出/ :/ Report/ :/ 最终/ 的/ 谓词/ 排序/ 结果/ 符号/ :/ Infok/ :/ 程序/ 第/ k/ 次/ 运行/ ,/ 待测/ 程序/ 中/ 所有/ 桩/ 点/ 处/ 1/ ./ ForallPi/ ∈/ Pdo2/ ./ ForallInfok/ ∈/ INFOsdo3/ ./ IfESk4/ ./ 犲/ k5/ ./ Endif6/ ./ Endfor7/ ./ ForallInfok/ ∈/ INFOfdo8/ ./ IfESk9/ ./ 犲/ k10/ ./ Endif11/ ./ Endfor12/ ./ 犲/ Pi/ +/ ←/ ∑/ s13/ ./ 犲/ Pi/ -/ ←/ ∑/ f14/ ./ RPi/ ←/ 犲/ Pi/ +/ -/ 犲/ Pi/ -/ 15/ ./ Endfor16/ ./ Compositor/ (/ )/ 值得注意/ 的/ 是/ 对于/ stat/ (/ ESk/ 形/ 需要/ 讨论/ :/ 情形/ 1/ ./ ESk/ 程中/ 没有/ 被/ 执行/ ,/ 则/ 犲/ k/ 情形/ 2/ ./ ESk/ 行/ 过程/ 中仅/ 执行/ 了/ 一次/ ,/ 若/ es10/ ./ 5/ ,/ 0.5/ )/ ;/ 否则/ 犲/ k/ 情形/ 3/ ./ ESk/ 即/ Pi/ 在/ 程序/ 第/ k/ 次/ 运行/ 过程/ 中/ 执行/ m/ 次/ ,/ 则/ 分别/ 统计/ n00/ 、/ n01/ 、/ n10/ 、/ n11/ 的/ 次数/ 分别/ 为/ 犲/ k/ 后/ 犲/ kPi/ ←/ 犲/ k/ 对于/ 情形/ 2/ ,/ 本文/ 采用/ 等/ 概率/ 处理/ 的/ 方法/ :/ 若/ 谓词/ 在/ 程序/ 一次/ 运行/ 中/ 只/ 执行/ 了/ 一次/ ,/ 则/ 假设/ 第/ 2/ 次/ 执行/ 判断/ 为/ “/ 真/ ”/ 和/ 为/ “/ 假/ ”/ 的/ 概率/ 各为/ 1/ // 2/ ,/ 然后/ 再/ 对/ 犲/ k4/ ./ 3/ 算法/ 扩展/ Pi/ 中/ 的/ 元素/ 赋值/ ./ Pesla/ 算法/ 是/ 基于/ 谓词/ 的/ 2/ 位/ 执行/ 序列/ 向量/ ,/ 这种/ 算法/ 同样/ 可以/ 扩展/ 到/ 3/ 位/ 、/ 4/ 位/ 以及/ 更/ 高位/ 的/ 执行/ 序列/ 向量/ ,/ 以/ 增加/ 更/ 多/ 执行/ 信息/ 的/ 比较/ ,/ 但是/ 这种/ 执行/ 信息/ 的/ 增加/ 可能/ 带来/ 两种/ 新/ 的/ 情况/ :/ 一种/ 是/ 由于/ 信息/ 更加/ 丰富/ ,/ 使/ 算法/ 定位精度/ 提高/ ;/ 另/ 一种/ 是/ 由于/ 信息/ 存在/ 冗余/ ,/ 使/ 算法/ 定位精度/ 下降/ ./ 这/ 就/ 引出/ 了/ 前面/ 提到/ 的/ 第/ 2/ 个/ 问题/ ,/ 即/ 谓词/ 执行/ 信息量/ 的/ 增加/ 与/ 算法/ 的/ 定位精度/ 之间/ 存在/ 什么/ 关系/ ?/ 为/ 回答/ 该/ 问题/ ,/ 本/ 节/ 首先/ 将/ 对/ Pesla/ 算法/ 进行/ 扩展/ ,/ 使/ 其/ 基于/ 更大/ 的/ 谓词/ 信息量/ 进行/ 计算/ ,/ 并且/ 对/ 扩展/ 后/ 的/ 算法/ 进行/ 时间/ 复杂度/ 分析/ ./ 后面/ 的/ 实验/ 部分/ 对/ 该/ 问题/ 进行/ 了/ 回答/ ./ 扩展/ 后/ 的/ 算法/ 命名/ 为/ Nbit/ -/ Pesla/ 算法/ (/ Nbit/ 表示/ 算法/ 使用/ N/ 位/ 执行/ 序列/ 向量/ )/ ,/ 其/ 基本/ 思想/ 与/ Pesla/ 算法/ 基本一致/ ./ 两者/ 的/ 不同/ 说明/ 如下/ ./ (/ 1/ )/ 对于/ 函数/ stat/ (/ ESk2/ 位/ 执行/ 序列/ 向量/ ,/ 所以/ 只/ 需/ 分为/ 3/ 种/ 情形/ 进行/ 讨论/ ;/ 在/ 扩展/ 后/ ,/ 由于/ 所/ 需/ 向量/ 位数/ 增加/ ,/ 谓词/ 执行/ 次数/ 小于/ 向量/ 位数/ 的/ 情形/ 也/ 相应/ 增加/ ,/ 对/ 这种/ 情况/ ,/ 我们/ 一律/ 采用/ 4.2/ 节/ 用到/ 的/ 等/ 概率/ 补齐/ 的/ 方法/ 对/ N/ 位/ 执行/ 序列/ 向量/ 的/ 元素/ 赋值/ ,/ 详细描述/ 见/ Nbit/ -/ Pesla/ 子/ 算法/ ./ 算法/ 2/ ./ Nbit/ -/ Pesla/ 子/ 算法/ ./ stat/ (/ ESk/ 位/ 执行/ 序列/ 向量/ 的/ 函数/ 输入/ :/ ESk/ 输出/ :/ 犈/ NkPi/ :/ N/ 位/ 执行/ 序列/ 向量/ 符号/ :/ a1a2/ …/ aN/ :/ 同/ 定义/ 2/ 中/ 的/ a1a2/ …/ aN1/ ./ Ifm/ =/ 0then/ // / Pi/ 没有/ 被/ 执行/ / // 2/ ./ 犈/ NkPi/ =/ (/ 0/ ,/ 0/ ,/ …/ ,/ 0/ )/ 3/ ./ Elseif1/ / m/ </ N/ // / Pi/ 执行/ 次数/ 小于/ N/ 次/ / // 4/ ./ nes15/ ./ 犈/ NkPi/ 中/ 其它/ 元素/ 赋值/ 为/ 06/ ./ Elseifm/ / N/ // / Pi/ 执行/ 次数/ 大于/ 等于/ N/ 次/ / // 7/ ./ Forallj/ ∈/ [/ 1/ ,/ m/ -/ N/ +/ 1/ ]/ do8/ ./ Ifesj9/ ./ na1a2/ …/ aN/ ←/ na1a2/ …/ aN/ +/ 110/ ./ Endif11/ ./ Endfor12/ ./ 犈/ NkPi/ ←/ 犈/ NkPi/ // (/ m/ -/ N/ -/ 1/ )/ 13/ ./ Endif/ (/ 2/ )/ 计算/ 缺陷/ 关联度/ 的/ 函数/ 由式/ (/ 4/ )/ 改为/ 了/ 式/ (/ 3/ )/ ./ Nbit/ -/ Pesla/ 算法/ 的/ 基本/ 思想/ 表明/ ,/ 若/ N/ 增大/ ,/ 算法/ 所/ 需/ 处理/ 的/ 谓词/ 执行/ 信息量/ 就/ 会/ 增加/ ,/ 并/ 导致/ 算法/ 的/ 计算/ 复杂度/ 提升/ ./ 设待测/ 程序/ 包含/ t/ 个/ 桩/ 点/ ,/ s/ 个运/ Page6/ 行/ 成功/ 的/ 测试用例/ ,/ f/ 个/ 运行/ 失败/ 的/ 测试用例/ ,/ 那么/ 对于/ Nbit/ -/ Pesla/ 算法/ ,/ 记录/ 所有/ 执行/ 序列/ 向量/ 需要/ t/ ×/ (/ s/ +/ f/ )/ ×/ 2N/ 个/ 存储单元/ ,/ 其/ 空间/ 复杂度/ 为/ O/ (/ t/ ×/ (/ s/ +/ f/ )/ ×/ 2N/ )/ ./ 计算/ 谓词/ 缺陷/ 关联度/ 的/ 过程/ 需要/ 做/ (/ 2N/ ×/ (/ s/ -/ 1/ )/ +/ 2N/ ×/ (/ f/ -/ 1/ )/ +/ 1/ )/ ×/ t/ 次/ 加法/ ,/ 2/ ×/ 2N/ 次/ 除法/ 和/ 乘法/ 运算/ ,/ 则/ Nbit/ -/ Pesla/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ t/ ×/ (/ s/ +/ f/ )/ ×/ 2N/ )/ ,/ 对于/ 同一/ 待测/ 程序/ ,/ 若/ t/ 、/ s/ 、/ f/ 都/ 不变/ ,/ 则/ 算法/ 的/ 空间/ 和/ 时间/ 复杂度/ 会/ 随/ N/ 的/ 增长/ 呈/ 级数/ 增长/ ./ 若待测/ 程序/ 规模/ 很大/ 且/ 测试用例/ 较/ 多/ ,/ 这种/ 增长速度/ 是/ 不可/ 接受/ 的/ ./ 我们/ 在/ 选择/ 算法/ 时/ ,/ 不仅/ 要/ 考虑/ 算法/ 的/ 定位精度/ ,/ 还/ 需要/ 权衡/ 所/ 付出/ 的/ 代价/ ./ 因此/ ,/ 有/ 必要/ 研究/ 算法/ 定位精度/ 与/ 谓词/ 执行/ 信息量/ 之间/ 的/ 规律/ ,/ 只有/ 探明/ 这/ 其中/ 的/ 规律/ ,/ 才能/ 合理/ 选择/ 算法/ 以/ 达到/ 定位精度/ 与/ 计算/ 代价/ 之间/ 的/ 平衡/ ./ 5/ 实验/ 及/ 结果/ 分析/ 本文/ 实验/ 由/ 3/ 部分/ 组成/ :/ (/ 1/ )/ Pesla/ 算法/ 与/ 现有/ 表/ 2/ 目标程序/ 的/ 主要/ 信息/ print/ -/ tokens/ (/ 2programs/ )/ schedule/ (/ 2programs/ )/ replacetot/ -/ infotcasSpaceSpace/ 软件/ 是/ 欧洲航天局/ 开发/ 的/ 一个/ 矩阵/ 描述语言/ (/ ADL/ )/ 解释器/ ,/ 它/ 可以/ 从文件/ 中/ 读取/ ADL/ 描述/ 语句/ 并/ 检查/ 文件/ 内容/ 是否/ 合乎/ 语法/ 规则/ ,/ 如果/ ADL/ 文件/ 正确/ ,/ Space/ 将/ 输出/ 一个/ 矩阵/ 数据文件/ ,/ 包含/ 矩阵/ 元素/ 信息/ 、/ 位置/ 、/ 激励/ ,/ 否则/ 将/ 输出/ 错误/ 提示/ ,/ Space/ 软件/ 包含/ 6218/ 行可/ 执行/ 语句/ ,/ 914/ 个/ 桩/ 点/ 谓词/ ,/ 13496/ 个/ 测试用例/ ,/ 38/ 个/ 缺陷/ 版本/ ,/ 每个/ 版本/ 中/ 包含/ 一个/ 真正/ 的/ 缺陷/ ,/ Space/ 软件/ 是/ 软件缺陷/ 定位/ 研究/ 领域/ 公认/ 的/ 典型/ 测试/ 对象/ ./ 5.2/ 犘/ -/ score/ 评价/ 方法/ 本文/ 选用/ P/ -/ score/ [/ 20/ ]/ 作为/ 比较/ 各/ 算法/ 定位精度/ 的/ 主要/ 评价/ 方法/ ./ P/ -/ score/ 由/ Zhang/ 等/ 人/ [/ 20/ ]/ 提出/ ,/ 相较/ T/ -/ score/ [/ 21/ ]/ ,/ 不/ 需要/ 假设/ “/ 有/ 一个/ 完美/ 的/ 程序调试/ 员/ ”/ ,/ 且/ 使用/ 更为/ 方便/ 、/ 直接/ ./ 下面/ 介绍/ P/ -/ score/ 的/ 使用/ 方法/ ./ 首先/ 给出/ P/ -/ score/ 的/ 计算公式/ :/ 算法/ 的/ 比较/ ,/ 包括/ 与/ CBI/ 、/ SOBER/ 、/ Mann/ -/ Whitney/ 、/ Wilcoxon/ 、/ F/ -/ test/ 、/ t/ -/ test/ 各种/ 基于/ 谓词/ 算法/ 的/ 比较/ (/ 其中/ SOBER/ 、/ Mann/ -/ Whitney/ 、/ Wilcoxon/ 、/ F/ -/ test/ 、/ t/ -/ test/ 算法/ 都/ 是/ 基于/ “/ EvaluationBias/ ”/ 所/ 提出/ 的/ 方法/ )/ ;/ (/ 2/ )/ 当/ N/ 取/ 不同/ 值时/ ,/ 各/ Nbit/ -/ Pesla/ 算法/ 之间/ 定位/ 效果/ 的/ 比较/ ;/ (/ 3/ )/ 根据/ 程序执行/ 信息/ 选择/ N/ 的/ 经验/ 公式/ 及其/ 效果/ 验证/ ./ 为了/ 更好/ 地/ 描述/ 实验/ ,/ 在/ 5.1/ ~/ 5.3/ 节中/ 我们/ 首先/ 对/ 目标程序/ 、/ 评价/ 方法/ 和/ 实验/ 设置/ 进行/ 介绍/ ./ 5.1/ 目标程序/ 参照/ 之前/ 的/ 研究/ ,/ 本文/ 选取/ Siemens/ 软件包/ 中/ 的/ 全部/ 7/ 段程序/ ,/ 和/ 一个/ 应用软件/ Space/ 作为/ 目标程序/ 进行/ 实验/ ./ Siemens/ 软件包/ 中/ 的/ 每个/ 程序/ 分别/ 包含/ 7/ ~/ 41/ 个/ 缺陷/ 版本/ ,/ 每个/ 缺陷/ 版本/ 中有/ 一个/ 人工/ 植入/ 的/ 缺陷/ ./ 表/ 2/ 中/ 列出/ 了/ 目标程序/ 的/ 主要/ 信息/ ./ 例如/ ,/ 对于/ tcas/ 程序/ 来说/ ,/ 共有/ 41/ 个/ 缺陷/ 版本/ ,/ 每个/ 版本/ 中/ 包含/ 133/ ~/ 137/ 行可/ 执行/ 语句/ ,/ 其中/ 有/ 11/ 个/ 桩/ 点/ 谓词/ ,/ 1608/ 个/ 测试用例/ ,/ 平均/ 有/ 23/ 个/ 失败/ 的/ 测试用例/ 和/ 1585/ 个/ 成功/ 的/ 测试用例/ ./ 834065471191413496/ 其中/ ,/ L/ 为/ 目标程序/ 中/ 的/ 谓词/ 数量/ ,/ P/ 表示/ 程序/ 中/ 与/ 缺陷/ 最/ 相关/ 的/ 谓词/ ,/ indexofP/ 是/ 谓词/ P/ 在/ 输出/ Report/ 中/ 的/ 排序/ 序号/ ./ 为/ 方便/ 理解/ ,/ 举例/ 如下/ ,/ 假设/ 一个/ 缺陷/ 程序/ 中/ 含有/ 10/ 个/ 谓词/ {/ P1/ ,/ P2/ ,/ P3/ ,/ …/ ,/ P10/ }/ ,/ 与/ 缺陷/ 最/ 相关/ 的/ 谓词/ 为/ P8/ ,/ 利用/ 算法/ 得到/ 的/ Report/ 中/ 谓词/ 的/ 排序/ 为/ {/ P3/ ,/ P7/ ,/ P10/ ,/ P8/ ,/ …/ ,/ P2/ }/ ,/ P8/ 排在/ 第/ 4/ 位/ ,/ 则/ P/ -/ score/ =/ 4/ // 10/ ×/ 100/ %/ =/ 40/ %/ ./ P/ -/ score/ 可以/ 解释/ 为/ 所/ 需/ 检查/ 的/ 谓词/ 数量/ 越/ 少/ ,/ 则/ 算法/ 对/ 缺陷/ 的/ 定位精度/ 越高/ ./ 5.3/ 实验/ 设置/ 为/ 公平/ 比较/ 各/ 算法/ 的/ 优劣/ ,/ 本文/ 需要/ 对/ 4/ 个/ 影响/ 实验/ 结果/ 的/ 主要/ 因素/ 进行/ 设置/ :/ 缺陷/ 版本/ 的/ 选择/ 、/ 缺陷/ 最/ 相关/ 谓词/ 的/ 确定/ 、/ 桩/ 点/ 位置/ 的/ 确定/ 和/ 测试用例/ 的/ 选择/ ./ 首先/ ,/ 根据/ 5.1/ 节中/ 的/ 介绍/ ,/ Siemens/ 软件包/ 一共/ 包含/ 132/ 个/ 缺陷/ 版本/ ,/ Space/ 软件/ 中/ 包含/ 38/ 个/ 缺陷/ 版本/ ,/ 但/ 本文/ 的/ 实验/ 并/ 没有/ 使用/ 全部/ 的/ 缺陷/ 版本/ ,/ 而是/ 根据/ 以下/ 两条/ 原则/ 对/ 缺陷/ 版本/ 进行/ 筛选/ :/ Page7/ (/ 1/ )/ 对于/ 一个/ 程序/ 的/ 缺陷/ 版本/ ,/ 其/ 测试用例/ 集中/ 既/ 要/ 包含/ 成功/ 的/ 测试用例/ ,/ 又/ 要/ 包含/ 失败/ 的/ 测试用例/ ;/ (/ 2/ )/ 缺陷/ 程序/ 中/ 与/ 缺陷/ 最/ 相关/ 的/ 谓词/ 要/ 能够/ 明确/ 地/ 确定/ ,/ 这/ 是因为/ 程序/ 中/ 与/ 缺陷/ 最/ 相关/ 谓词/ 的/ 确定/ 会/ 对/ 最终/ 的/ 实验/ 结果/ 产生/ 较大/ 影响/ ,/ 若/ 无法/ 清晰/ 地/ 确定/ 该/ 谓词/ 的/ 位置/ ,/ 则/ 将/ 此/ 缺陷/ 版本/ 从/ 实验/ 中/ 剔除/ ./ 根据/ 这/ 两条/ 原则/ ,/ 在/ Siemens/ 软件包/ 中共/ 排除/ 掉/ 21/ 个/ 缺陷/ 版本/ ,/ 在/ Space/ 软件/ 中/ 排除/ 掉/ 10/ 个/ 缺陷/ 版本/ ①/ ./ 本文/ 选择/ 文献/ [/ 5/ ]/ 中/ 使用/ 的/ 最/ 相关/ 谓词/ 选择/ 策略/ :/ 第/ 1/ 步/ ,/ 确定/ 缺陷/ 位置/ ./ 若/ 缺陷/ 在/ 可/ 执行/ 语句/ 上/ ,/ 标记/ 该/ 可/ 执行/ 语句/ ,/ 若/ 缺陷/ 为/ 可/ 执行/ 语句/ 的/ 缺失/ ,/ 则/ 标记/ 距离/ 缺失/ 语句/ 最近/ 的/ 下/ 一条/ 可/ 执行/ 语句/ ;/ 第/ 2/ 步/ ,/ 根据/ 第/ 1/ 步/ 标记/ 的/ 可/ 执行/ 语句/ ,/ 选择/ 距离/ 该/ 可/ 执行/ 语句/ 最近/ 的/ 谓词/ 作为/ 程序/ 中/ 与/ 缺陷/ 最/ 相关/ 的/ 谓词/ ,/ 如/ 有/ 两个/ 或/ 更/ 多/ 谓词/ 与/ 该/ 可/ 执行/ 语句/ 距离/ 一样/ 近/ ,/ 无法/ 确定/ 唯一/ 的/ 谓词/ ,/ 将/ 此/ 缺陷/ 版本/ 剔除/ (/ 在/ 实验所/ 选用/ 的/ 139/ 个/ 缺陷/ 版本/ 中/ ,/ 缺陷/ 最/ 相关/ 谓词/ 所在/ 语句/ 与/ 标记/ 的/ 可/ 执行/ 语句/ 之间/ 都/ 没有/ 超过/ 3/ 行/ 代码/ )/ ./ 与/ 以往/ 的/ 研究/ [/ 2/ -/ 7/ ]/ 相同/ ,/ 由于/ 本文/ 研究/ 不/ 涉及/ 缺陷/ 定位/ 的/ 效果/ 对/ 测试用例/ 的/ 依赖/ ,/ 因此/ ,/ 在/ 实验/ 中/ 同样/ 是/ 加载/ 程序/ 的/ 全部/ 测试用例/ ,/ 再/ 将/ 所得/ 结果/ 进行/ 比较/ ./ 在/ 选择/ 桩/ 点/ 位置/ 时/ ,/ 本文/ 选择/ 与/ SOBER/ 相同/ 的/ 设置/ ,/ 仅/ 对/ 程序代码/ 中/ 的/ 分支/ 语句/ (/ if/ 、/ for/ 、/ while/ )/ 以及/ 返回值/ (/ return/ )/ 中/ 的/ 谓词/ [/ 2/ ]/ 进行/ 插桩/ ./ 本/ 实验/ 所用/ 计算机/ 的/ CPU/ 是/ 两颗/ Xeon/ -/ E5630/ ,/ 主频/ 2.53/ GHz/ ,/ 内存/ 12GB/ ./ 本文/ 所/ 选用/ 的/ Siemens/ 软件包/ 与/ Space/ 软件/ 全部/ 在/ Software/ -/ artifactInfrastructureRepository/ (/ SIR/ )/ 网站/ 下载/ 获得/ ,/ 而/ Mann/ -/ Whitney/ 、/ Wilcoxon/ 、/ F/ -/ test/ 、/ t/ -/ test/ 假设检验/ 算法/ 也/ 是/ 在/ ALGLIB/ 网站/ 下载/ 获得/ ,/ CBI/ 、/ SOBER/ 算法/ 则/ 根据/ 文献/ [/ 2/ ,/ 4/ ]/ 中/ 的/ 描述/ 实现/ ./ 5.4/ Pesla/ 算法/ 与/ 各/ 算法/ 的/ 比较/ 本/ 节/ ,/ 我们/ 将/ 针对/ 各/ 算法/ 的/ 整体/ 定位/ 效果/ 、/ 不同/ 程序/ 的/ 定位/ 效果/ 以及/ 单个/ 缺陷/ 版本/ 的/ 定位/ 效果/ 3/ 个/ 方面/ 分别/ 进行/ 比较/ ,/ 最后/ 用/ 假设检验/ 来/ 证明/ Pesla/ 算法/ 在/ 定位精度/ 上/ 的/ 优越性/ ./ 首先/ ,/ 本文/ 给出/ 将/ 各种/ 算法/ 应用/ 在/ Siemens/ 软件包/ 的/ 各/ 缺陷/ 版本/ 后/ ,/ 所/ 得到/ 的/ 定位/ 效果/ 对比/ ,/ 如图/ 2/ 所示/ (/ 其中/ Wilcoxon/ 、/ Mann/ -/ Whitney/ 、/ SOBER/ 、/ CBI/ 、/ F/ -/ test/ ,/ t/ -/ test/ 的/ 数据/ 来源于/ 文献/ [/ 5/ ]/ )/ ./ 图中/ 横坐标/ 表示/ 所/ 需/ 检查/ 的/ 谓词/ 占/ 全部/ 谓词/ 的/ 百分比/ ,/ 纵坐标/ 为/ 所/ 发现/ 的/ 缺陷/ 占/ 全部/ 缺陷/ 的/ 百分比/ ./ 从图/ 2/ 中/ 可以/ 看出/ ,/ 在/ 10/ 个/ 统计/ 节点/ 处/ ,/ 相对/ 于/ 其它/ 算法/ ,/ Pesla/ 算法/ 都/ 表现/ 出/ 了/ 更好/ 的/ 定位/ 效果/ ,/ 尤其/ 是/ 当/ 检查/ 的/ 谓词/ 数量/ 相对/ 较/ 少时/ ,/ 这种/ 优势/ 更为/ 明显/ ,/ 例如/ ,/ 当/ 检查/ 10/ %/ 的/ 谓词/ 时/ ,/ Pesla/ 可以/ 定位/ 33.33/ %/ 的/ 缺陷/ ,/ 其它/ 算法/ 中/ 表现/ 最好/ 的/ Wilcoxon/ 也/ 仅/ 能/ 定位/ 17.11/ %/ ,/ Pesla/ 定位/ 到/ 的/ 缺陷/ 数量/ 接近/ Wilcoxon/ 的/ 2/ 倍/ ;/ Mann/ -/ Whitney/ 的/ 5/ 倍/ ,/ 是/ 其它/ 算法/ 的/ 7/ ~/ 30/ 倍/ ,/ 而/ 当/ 检查/ 30/ %/ 的/ 谓词/ 时/ ,/ 这种/ 优势/ 虽然/ 有所/ 下降/ ,/ 但/ Pesla/ 仍旧/ 表现/ 出/ 更好/ 的/ 定位/ 效果/ ./ 图/ 2/ 各/ 算法/ 在/ Siemens/ 软件包/ 上/ 的/ 定位/ 效果/ 对比/ 图/ 3/ 给出/ 了/ 各种/ 算法/ 在/ 各个/ 程序/ 上/ 的/ 定位/ 效果/ 对比/ ,/ 可以/ 看出/ ,/ 在/ 大多数/ 程序/ 上/ ,/ 相比/ 于/ 其它/ 算法/ ,/ Pesla/ 都/ 表现/ 出/ 了/ 更/ 高/ 的/ 定位精度/ ,/ 只有/ 在/ tcas/ 程序/ 上/ ,/ Wilcoxon/ 比/ Pesla/ 表现/ 得/ 更好/ ./ 为了/ 进一步/ 验证/ Pesla/ 算法/ 在/ 定位/ 单个/ 缺陷/ 时/ 同样/ 具有/ 更/ 高/ 的/ 定位精度/ ,/ 本文/ 又/ 对/ 各种/ 算法/ 在/ 定位/ 同一个/ 缺陷/ 时/ 的/ 表现/ 做/ 了/ 比较/ ,/ 如表/ 3/ 、/ 表/ 4/ 所示/ ./ 在/ 表/ 3/ 中/ ,/ “/ Min/ ”/ 表示/ 使用/ 该/ 算法/ 定位/ 一个/ 缺陷/ 所/ 得到/ 的/ 最小/ P/ -/ score/ ;/ “/ Max/ ”/ 表示/ 最大/ 的/ P/ -/ score/ ;/ “/ Median/ ”/ 表示/ P/ -/ score/ 的/ 中位数/ ;/ “/ Mean/ ”/ 表示/ P/ -/ score/ 的/ 均值/ ;/ “/ Stdev/ ”/ 表示/ P/ -/ score/ 的/ 标准差/ ./ 这/ 5/ 个/ 指标/ 中/ ,/ “/ Median/ ”/ 和/ “/ Stdev/ ”/ 体现/ 了/ 算法/ 在/ 定位/ 不同/ 缺陷/ 时所/ 表现/ 出/ 的/ 稳定性/ ,/ 其值/ 越/ 小/ ,/ 表明/ 该/ 算法/ 的/ 稳定性/ 越好/ ./ 从表/ 3/ 中/ 可以/ 看出/ ,/ 在/ 这/ 两个/ 指标/ 中/ ,/ Pesla/ 算法/ 都/ 是/ 表现/ 最好/ 的/ 那/ 一个/ ,/ 即/ 在/ 使用/ Pesla/ 算法/ 定位/ 不同/ 缺陷/ 时/ 具有/ 更/ 高/ 的/ 概率/ ,/ 能够/ 获得/ 更/ 高/ 的/ 定位精度/ ./ ①/ 本文/ 中/ 的/ 设置/ 与/ 文献/ [/ 5/ ]/ 中/ 完全相同/ ,/ 因此/ 所/ 排除/ 的/ 缺陷/ Page8/ 图/ 3/ 各种/ 算法/ 在/ 单个/ 程序/ 上/ 的/ 定位/ 效果/ 对比/ 表/ 3/ 各种/ 算法/ 在/ Siemens/ 软件包/ 上/ 定位/ 效果/ 的/ 详细/ 对比/ 表/ 4Pesla/ 算法/ 对/ 单个/ 缺陷/ 的/ 定位/ 效果/ 对比/ P/ -/ scorePesla/ -/ P/ -/ scoreSOBERMann/ -/ WhitneyWilcoxonSOBERF/ -/ testt/ -/ test/ 比较/ 范围/ // %/ -/ 1/ ~/ 1/ -/ 5/ ~/ 5/ </ -/ 10/ -/ 10/ ~/ 10/ </ -/ 20/ -/ 20/ ~/ 20/ 表/ 4/ 是/ Pesla/ 分别/ 与/ 其它/ 算法/ 进行/ 比较/ 的/ 结果/ ,/ 为/ 方便/ 理解/ 该表/ ,/ 用/ 一个/ 例子/ 来/ 说明/ :/ 对于/ 第/ 1/ 列/ “/ P/ -/ scorePesla/ -/ P/ -/ scoreWilcoxon/ ”/ 的/ “/ </ -/ 1/ %/ ”/ ,/ 它/ 表示/ ,/ 在/ 111/ 个/ 缺陷/ 中/ ,/ 有/ 61/ 个/ 缺陷/ ,/ 其/ P/ -/ scorePesla/ -/ P/ -/ scoreWilcoxon/ </ -/ 1/ %/ ,/ 也/ 可以/ 理解/ 为/ ,/ Pesla/ 算法/ 在/ 定位/ 61/ 个/ 缺陷/ 时/ ,/ 定位精度/ 比/ Wilcoxon/ 算法/ 高/ 1/ %/ 以上/ ./ “/ >/ 1/ %/ ”/ 则/ 表示/ ,/ 在/ 111/ 个/ 缺陷/ 中/ ,/ 有/ 46/ 个/ Median/ // %/ 24.5639/ ./ 8250.0063/ ./ 0663.6475/ ./ 8680.30/ 缺陷/ 个数/ 7433474829711228632820/ 缺陷/ ,/ 其/ P/ -/ scorePesla/ -/ P/ -/ scoreWilcoxon/ >/ 1/ %/ ,/ 可/ 理解/ 为/ Wilcoxon/ 算法/ 在/ 定位/ 46/ 个/ 缺陷/ 时/ ,/ 定位精度/ 比/ Pesla/ 算法/ 高/ 1/ %/ 以上/ ./ 从表/ 4/ 中/ 可以/ 看出/ ,/ 相比/ 于/ 其它/ 算法/ ,/ Pesla/ 算法/ 在/ 定位/ 绝大多数/ 缺陷/ 时/ 的/ 定位精度/ 更高/ ./ 下面/ 我们/ 给出/ 各种/ 算法/ 应用/ 在/ Space/ 软件/ 上/ 的/ 定位/ 效果/ 对比/ ,/ 如表/ 5/ 、/ 表/ 6/ 所示/ ./ Page9/ 谓词/ 检查/ 量/ // %/ 1100/ 表/ 5/ 各/ 算法/ 在/ Space/ 上/ 的/ 定位/ 效果/ 对比/ 表/ 6/ 各/ 算法/ 在/ Space/ 上/ 的/ 定位/ 效果/ 详细/ 对比/ WilcoxonMann/ -/ WhitneySOBERF/ -/ testt/ -/ test/ 由于/ Space/ 软件/ 较大/ ,/ 其中/ 包含/ 的/ 谓词/ 数量/ 较/ 多/ ,/ 本文/ 侧重/ 比较/ 当/ 检查/ 少量/ 谓词/ 时/ ,/ 各/ 算法/ 所/ 能/ 定位/ 到/ 的/ 缺陷/ 数量/ ./ 由表/ 5/ 可以/ 看出/ ,/ 只有/ 检验/ 少于/ 1/ %/ 的/ 谓词/ 时/ ,/ Pesla/ 定位/ 到/ 的/ 缺陷/ 数量/ 稍/ 少于/ Wilcoxon/ 和/ Mann/ -/ Whitney/ ,/ 而/ 在/ 其它/ 的/ 统计/ 节点/ 处/ ,/ Pesla/ 都/ 是/ 定位/ 到/ 最/ 多/ 缺陷/ 的/ 算法/ ./ 我们/ 进一步/ 对/ 各/ 算法/ 在/ 定位/ Space/ 软件/ 单个/ 缺陷/ 时/ 的/ 情况/ 进行/ 比较/ ,/ 从表/ 6/ 可以/ 看出/ ,/ 相比/ 于/ SOBER/ 、/ CBI/ 、/ F/ -/ test/ 、/ t/ -/ test/ 这/ 4/ 种/ 算法/ ,/ Pesla/ 算法/ 无论是/ 在/ 定位精度/ 还是/ 定位/ 缺陷/ 的/ 稳定性/ 上/ 都/ 有/ 很大/ 的/ 优势/ ;/ 而/ 相比/ 于/ Wilcoxon/ 和/ Mann/ -/ Whitney/ ,/ Pesla/ 则/ 在/ 定位/ 缺陷/ 的/ 稳定性/ 上/ 表现/ 更好/ ./ 综合/ 以上/ 分析/ ,/ 我们/ 可以/ 得到/ 以下/ 结论/ :/ Pesla/ 算法/ 相对/ 于/ 其它/ 算法/ 具有/ 更/ 高/ 的/ 定位精度/ 以及/ 更好/ 的/ 定位/ 稳定性/ ./ t/ 检验/ 来/ 证实/ 该/ 结论/ ,/ 设/ :/ H0/ :/ 利用/ P/ -/ score/ 进行/ 比较/ 时/ ,/ Pesla/ 算法/ 与/ X/ 算法/ 的/ 定位精度/ 没有/ 显著/ 差异/ ./ H1/ :/ 利用/ P/ -/ score/ 进行/ 比较/ 时/ ,/ Pesla/ 算法/ 与/ X/ 算法/ 的/ 定位精度/ 有/ 显著/ 差异/ ./ 表/ 7/ 为/ 当/ X/ 为/ 不同/ 算法/ 时/ ,/ 得到/ 的/ t/ 检验/ 的/ 检验/ 统计/ 量/ P/ -/ value/ ,/ 如/ Pesla/ 与/ Wilcoxon/ 比较/ ,/ 使用/ t/ 检验/ 可以/ 得到/ P/ -/ value/ </ 0.00005/ ./ 可以/ 看到/ ,/ 所有/ 的/ P/ -/ value/ 均/ 小于/ 0.05/ ./ 若/ 给定/ 显著性/ 水平/ α/ =/ 0.05/ ,/ 则/ 由表/ 8/ 中/ 的/ 结果/ 可以/ 得到/ :/ 在/ 显著性/ 水平/ α/ =/ 0.05/ 下/ ,/ 拒绝/ 原/ 假设/ H0/ ,/ 认为/ Pesla/ 算法/ 与/ X/ 算法/ 具有/ 显著/ 差异/ ,/ 即使/ 选择/ 显著性/ 水平/ α/ =/ 0.01/ ,/ 以上/ 结论/ 仍然/ 成立/ ./ 为/ 检验/ 以上/ 结论/ 在/ 统计/ 上/ 的/ 显著性/ ,/ 我们/ 使用/ 缺陷/ 个数/ 10111818212528Median/ // %/ 0.771/ ./ 551.373/ ./ 1146.0021/ ./ 1720.68/ Pesla/ </ 5.0/ ×/ 表/ 8/ 不同/ 犖/ bit/ -/ Pesla/ 算法/ 的/ 缺陷/ 定位/ 效果/ 比较/ 比较/ 范围/ // %/ =/ 022/ </ -/ 140/ -/ 1/ ~/ 122/ >/ 149/ </ -/ 531/ -/ 5/ ~/ 545/ >/ 535/ </ -/ 108/ -/ 10/ ~/ 1061/ >/ 1024/ </ -/ 201/ -/ 20/ ~/ 2096/ >/ 2010/ 因此/ ,/ 我们/ 对于/ 问题/ 1/ 的/ 回答/ 是/ :/ 通过/ 在/ 算法/ 中/ 增加/ 谓词/ 的/ 执行/ 信息量/ 确实/ 可以/ 有效/ 提高/ 算法/ 的/ 定位精度/ ./ 5.5/ 不同/ 犖/ bit/ -/ Pesla/ 算法/ 的/ 比较/ 上节/ 的/ 实验/ 结果表明/ Pesla/ 算法/ 相比/ 其它/ 算法/ 具有/ 更/ 高/ 的/ 定位精度/ ,/ 这/ 就/ 引出/ 了/ 问题/ 2/ :/ 谓词/ 执行/ 信息量/ 的/ 增加/ 与/ 算法/ 的/ 定位精度/ 之间/ 有/ 什么/ 关系/ ?/ 为此/ ,/ 本文/ 按照/ 递增/ 的/ 方式/ 选取/ N/ 值/ ,/ 设/ N/ =/ 3/ 、/ 4/ 、/ 5/ ,/ 将/ Nbit/ -/ Pesla/ 算法/ 应用/ 于/ Siemens/ 软件包/ 与/ Space/ 软件/ (/ 注/ :/ 当/ N/ 大于/ 等于/ 6/ 时/ ,/ 由于/ 算法/ 时间/ 复杂度/ 太高/ ,/ 对于/ Space/ 而言/ ,/ 需要/ 付出/ 的/ 代价/ 太/ 大/ ,/ 因此/ Page10/ 不予考虑/ )/ ./ 与/ 上节/ 相同/ ,/ 本/ 节/ 同样/ 针对/ 不同/ Nbit/ -/ Pesla/ 算法/ 的/ 整体/ 定位/ 效果/ 、/ 不同/ 程序/ 的/ 定位/ 效果/ 以及/ 单个/ 缺陷/ 版本/ 的/ 定位/ 效果/ 进行/ 比较/ 和/ 讨论/ ,/ 最后/ 对/ 问题/ 2/ 进行/ 回答/ ./ 图/ 4/ 和/ 图/ 5/ 是/ N/ 取/ 不同/ 值时/ ,/ Nbit/ -/ Pesla/ 算法/ 在/ Siemens/ 软件包/ 上/ 的/ 定位/ 效果/ 对比/ ./ 可以/ 看出/ ,/ 当/ 检验/ 的/ 谓词/ 数量/ 不变/ ,/ 而/ N/ 增大/ 时/ ,/ Nbit/ -/ Pesla/ 算法/ 并/ 没有/ 定位/ 出/ 更/ 多/ 的/ 缺陷/ ,/ 相反/ ,/ 定位/ 出/ 的/ 缺陷/ 数量/ 呈现出/ 递减/ 的/ 趋势/ ,/ 尤其/ 是/ 当/ 检验/ 的/ 谓词/ 数量/ 少于/ 20/ %/ 时/ ,/ 这种/ 趋势/ 表现/ 的/ 更/ 明显/ ./ 图/ 5/ 不同/ Nbit/ -/ Pesla/ 算法/ 对/ 单个/ 程序/ 的/ 定位/ 效果/ 对比/ 但是/ ,/ 这/ 并/ 不能/ 证明/ ,/ 随着/ N/ 的/ 增大/ ,/ Nbit/ -/ Pesla/ 对/ 每个/ 缺陷/ 的/ 定位精度/ 都/ 会/ 下降/ ./ 因此/ ,/ 我们/ 统计/ 了/ 不同/ Nbit/ -/ Pesla/ 对/ 单个/ 缺陷/ 的/ 定位/ 结果/ ,/ 如表/ 8/ 、/ 表/ 9/ 所示/ ./ 算法/ Min/ // %/ Max/ // %/ Median/ // %/ Mean/ // %/ Stdev/ // %/ Pesla1/ ./ 59100.0024/ ./ 5630.4526/ ./ 853bit/ -/ Pesla1/ ./ 59100.0025/ ./ 4032.5726/ ./ 164bit/ -/ Pesla1/ ./ 59100.0030/ ./ 0034.1724/ ./ 165bit/ -/ Pesla1/ ./ 59100.0031/ ./ 7535.5323/ ./ 36/ 从表/ 9/ 中/ 可以/ 看出/ ,/ 总体/ 上/ 来说/ ,/ “/ Mean/ ”/ 随着/ N/ 的/ 增大/ 而/ 增大/ ,/ “/ Stdev/ ”/ 却/ 越来越/ 小/ ,/ 这/ 表明/ Nbit/ -/ Pesla/ 算法/ 的/ 平均/ 定位精度/ 有/ 降低/ 的/ 趋势/ ,/ 但/ 针对/ 不同/ 缺陷/ ,/ 定位精度/ 的/ 波动性/ 越来越/ 小/ ./ 由表/ 8/ ,/ 我们/ 可以/ 看出/ ,/ 随着/ N/ 的/ 增大/ ,/ Nbit/ -/ Pesla/ 图/ 4/ 不同/ Nbit/ -/ Pesla/ 算法/ 在/ Siemens/ 软件包/ 的/ 定位/ 效果/ 对比/ 算法/ 并/ 不是/ 对/ 所有/ 缺陷/ 的/ 定位精度/ 都/ 会/ 降低/ ,/ 还有/ 相当/ 一部分/ 缺陷/ 的/ 定位精度/ 会/ 持续/ 提高/ ,/ 例如/ ,/ 3bit/ -/ Pesla/ 算法/ 对/ 22/ 个/ 缺陷/ 的/ 定位精度/ 与/ Pesla/ 算法/ 相同/ ,/ 对/ 40/ 个/ 缺陷/ 的/ 定位精度/ 要/ 高于/ Pesla/ 算法/ ,/ 仅/ 对/ 49/ 个/ 缺陷/ 的/ 定位精度/ 低于/ Pesla/ 算法/ ;/ 即使/ N/ 增大/ 至/ 5/ ,/ 仍然/ 有/ 19/ 个/ 缺陷/ 的/ 定位精度/ 在/ 提高/ ./ 经/ 统计/ 发现/ ,/ 这/ 19/ 个/ 缺陷/ 是/ 包含/ 在/ 之前/ 40/ 个/ 定位精度/ 提高/ 的/ 缺陷/ 中/ 的/ ,/ 即/ 这/ 19/ 个/ 缺陷/ 随着/ N/ 的/ 增大/ ,/ 其/ 定位精度/ 在/ 不断/ 提高/ ./ 表/ 10/ 、/ 表/ 11/ 列出/ 了/ Nbit/ -/ Pesla/ 算法/ 在/ Space/ 软件/ 上/ 对/ 缺陷/ 的/ 定位/ 效果/ ./ 与/ Siemens/ 软件包/ 中/ 得出/ 的/ 结论/ 相似/ ,/ 当/ 检验/ 的/ 谓词/ 数量/ 较/ 少/ ,/ 如/ 在/ 1/ %/ 、/ 2/ %/ 时/ ,/ 随着/ N/ 的/ 增大/ ,/ Nbit/ -/ Pesla/ 算法/ 定位/ 到/ 的/ 缺陷/ 数量/ 呈现出/ 了/ 比较/ 明显/ 的/ 下降/ 趋势/ ,/ 且/ 其/ 平均/ 定位精度/ 不断/ 降低/ ./ Page11/ 表/ 10/ 不同/ 犖/ bit/ -/ Pesla/ 算法/ 在/ Space/ 上/ 定位/ 效果/ 对比/ 谓词/ 检查/ 量/ // %/ 11514111010262425242026262525502828282810028282828/ 表/ 11/ 不同/ 犖/ bit/ -/ Pesla/ 算法/ 在/ Space/ 上/ 的/ 详细/ 对比/ 算法/ Min/ // %/ Max/ // %/ Median/ // %/ Mean/ // %/ stdev/ // %/ Pesla0/ ./ 1144.970/ ./ 774.7011/ ./ 553bit/ -/ Pesla0/ ./ 1144.751/ ./ 105.5011/ ./ 344bit/ -/ Pesla0/ ./ 1144.971/ ./ 706.3011/ ./ 235bit/ -/ Pesla0/ ./ 1144.752/ ./ 306.6011/ ./ 11/ 但是/ ,/ 与/ 先前/ 观察/ 到/ 的/ 结果/ 一样/ ,/ 并/ 不是/ 对/ Space/ 软件/ 中/ 的/ 所有/ 缺陷/ ,/ Nbit/ -/ Pesla/ 的/ 定位精度/ 都/ 会/ 下降/ ./ 我们/ 统计/ 得到/ ,/ 对于/ Space/ 软件/ v1/ 、/ v3/ 、/ v27/ 版本/ 中/ 的/ 缺陷/ ,/ 随着/ N/ 增大/ ,/ 其/ 定位精度/ 在/ 不断/ 提高/ ;/ 而/ 对于/ v7/ 、/ v10/ 、/ v12/ 、/ v16/ 、/ v18/ 、/ v20/ 、/ v21/ 版本/ 中/ 的/ 缺陷/ ,/ 其/ 定位精度/ 几乎/ 没有/ 变化/ ./ 究其原因/ ,/ 我们/ 发现/ :/ 一个/ 程序/ ,/ 其/ 缺陷/ 谓词/ 在/ 一个/ 测试用例/ 中/ 的/ 执行/ 次数/ m/ 是/ 固定/ 的/ ,/ 当/ m/ >/ N/ 时/ ,/ 采用/ 本文/ 算法/ 对/ 该/ 缺陷/ 进行/ 定位/ ,/ 总能/ 获得/ 较/ 好/ 的/ 定位精度/ ,/ 若/ N/ 增大/ 的/ 同时/ 始终/ 满足/ m/ >/ N/ ,/ 则/ Nbit/ -/ Pesla/ 算法/ 对/ 该/ 缺陷/ 的/ 定位精度/ 也/ 会/ 持续/ 提高/ 或/ 保持/ 不变/ ,/ 但/ 一旦/ 出现/ m/ </ N/ 的/ 情形/ ,/ 就/ 需/ 使用/ 4.3/ 节/ Nbit/ -/ Pesla/ 子/ 算法/ 中/ 所/ 介绍/ 的/ 等/ 概率/ 补齐/ 的/ 方法/ 来/ 对/ 该/ 谓词/ 的/ N/ 位/ 执行/ 序列/ 向量/ 赋值/ ./ 若/ N/ 持续/ 增大/ ,/ 所/ 需/ 补齐/ 的/ 位数/ 就/ 会/ 增多/ ,/ 这会/ 导致/ 该/ 缺陷/ 谓词/ 在/ 程序运行/ 成功/ 时/ 得到/ 的/ N/ 位/ 执行/ 序列/ 向量/ 与/ 运行/ 失败/ 时/ 得到/ 的/ N/ 位/ 执行/ 序列/ 向量/ 之间/ 的/ 区分度/ 越来越/ 小/ ,/ 最终/ 造成/ 对/ 该/ 缺陷/ 的/ 定位精度/ 下降/ ./ 由/ 4.3/ 节/ 分析/ 可知/ ,/ Nbit/ -/ Pesla/ 算法/ 的/ 计算/ 复杂度/ 随/ N/ 的/ 增大/ 呈/ 级数/ 增长/ ,/ 图/ 6/ 、/ 图/ 7/ 分别/ 给出/ 了/ N/ 取/ 不同/ 值时/ ,/ Nbit/ -/ Pesla/ 算法/ 定位/ Siemens/ 和/ 图/ 6Nbit/ -/ Pesla/ 算法/ 在/ Siemens/ 上/ 的/ 时间/ 开销/ 图/ 7Nbit/ -/ Pesla/ 算法/ 在/ Space/ 上/ 的/ 时间/ 开销/ Space/ 软件包/ 中/ 缺陷/ 时/ 的/ 时间/ 开销/ 变化/ ./ 图中/ 纵坐标/ 表示/ 定位/ 一个/ 缺陷/ ,/ 算法/ 的/ 平均/ 运行/ 时间/ ,/ 单位/ 是/ 秒/ ./ 可以/ 看出/ ,/ 随着/ N/ 的/ 增大/ ,/ 算法/ 的/ 运行/ 时间/ 越来越/ 大/ ,/ 与/ 之前/ 的/ 分析/ 一致/ ./ 同样/ ,/ 图/ 8/ 、/ 图/ 9/ 分别/ 给出/ 了/ N/ 取/ 不同/ 值时/ ,/ Nbit/ -/ Pesla/ 算法/ 定位/ Siemens/ 和/ Space/ 软件包/ 缺陷/ 时/ 的/ 空间/ 开销/ 变化/ ./ 图中/ 纵坐标/ 表示/ 定位/ 一个/ 缺陷/ ,/ 算法/ 平均/ 所/ 需/ 占用/ 的/ 内存大小/ ,/ 单位/ 是/ 兆/ 字节/ ./ 可以/ 看出/ ,/ 随着/ N/ 的/ 增大/ ,/ 算法/ 所/ 占用/ 的/ 内存空间/ 几乎/ 是/ 严格/ 按照/ 级数/ 增长/ ./ 图/ 8Nbit/ -/ Pesla/ 算法/ 在/ Siemens/ 上/ 的/ 空间/ 开销/ 图/ 9Nbit/ -/ Pesla/ 算法/ 在/ Space/ 上/ 的/ 空间/ 开销/ 综合/ 本/ 节/ 实验/ ,/ 可以/ 得到/ :/ 若待测/ 程序/ 在/ 运行/ 过程/ 中/ 谓词/ 的/ 执行/ 次数/ 较/ 多/ ,/ 所/ 输出/ 的/ 谓词/ 执行/ 信息量/ 可以/ 满足/ 算法/ 需求/ ,/ 增大/ N/ 的/ 取值/ 确实/ 可以/ 有效/ 提高/ 算法/ 的/ 定位精度/ ./ 然而/ ,/ 如果/ 无/ 限制/ 地/ 增大/ N/ ,/ 不仅/ 计算/ 复杂度/ 呈/ 级数/ 增长/ ,/ 而且/ 对于/ 某些/ 程序/ ,/ 还会/ 因为/ 待测/ 程序/ 信息/ 提供/ 能力/ 有限/ (/ 由于/ 大部分/ 谓/ Page12/ 词/ 的/ 执行/ 次数/ 较/ 少/ )/ ,/ 造成/ 算法/ 定位精度/ 下降/ ./ 因此/ ,/ 如何/ 根据/ 待测/ 程序/ 中/ 谓词/ 执行/ 信息/ 的/ 情况/ 来/ 选择/ 适合/ 该/ 程序/ 的/ N/ 是/ 一个/ 重要/ 的/ 问题/ ./ 5.6/ 犖/ bit/ -/ Pesla/ 算法/ 中犖/ 的/ 选择/ 在/ 本节/ 中/ ,/ 通过/ 大量/ 的/ 实验/ 分析/ 和/ 验证/ ,/ 我们/ 给出/ 了/ 根据/ 程序执行/ 信息/ 选择/ N/ 的/ 一种/ 方法/ ,/ 进而/ 对/ 该/ 问题/ 进行/ 初步/ 的/ 探讨/ ./ 假设/ 待测/ 程序/ 共有/ L/ 个/ 谓词/ ,/ Pi/ 为/ 第/ i/ 个/ 谓词/ (/ 1/ / i/ / L/ )/ ./ 在/ 一次/ 缺陷/ 定位/ 过程/ 中/ ,/ 待测/ 程序/ 共/ 运行/ 了/ W/ 次/ (/ 即/ 有/ W/ 个/ 测试用例/ )/ ./ ESk/ 次/ 运行/ 中/ Pi/ 的/ 执行/ 序列/ ,/ |/ ESk/ 度/ ./ 令/ meanPi/ =/ ∑/ W/ 词/ Pi/ 在/ 所有/ 测试用例/ 中/ 的/ 平均/ 执行/ 次数/ ,/ 并设/ 集合/ M/ =/ {/ meanPi/ |/ i/ ∈/ [/ 1/ ,/ L/ ]/ }/ ./ 我们/ 用/ MeanM/ 表示/ 集合/ M/ 中/ 所有/ 元素/ 的/ 均值/ ,/ 即/ 对待/ 测/ 程序/ 中/ 所有/ 谓词/ 的/ 平均/ 执行/ 次数/ 求/ 均值/ ./ 进而/ ,/ 我们/ 可以/ 用式/ (/ 6/ )/ 对/ N/ 进行/ 设定/ :/ 其中/ ·/ 表示/ 向下/ 取整/ ./ 该/ 公式/ 等价/ 于/ 例如/ ,/ 在/ schedule2/ 的/ 第/ 1/ 个/ 版本/ 中/ ,/ 通过/ 运行/ 程序/ 并/ 统计/ 执行/ 信息/ 可以/ 得到/ MeanM/ =/ 18/ ,/ 进而/ 根据/ 式/ (/ 6/ )/ 我们/ 可以/ 得到/ Ne/ =/ 3/ ./ 这/ 与/ 我们/ 在/ 5.5/ 节/ 实验/ 中/ 得到/ 的/ 能/ 取得/ 最优/ 定位/ 效果/ 的/ N/ 值/ 是/ 相同/ 的/ ./ 该/ 公式/ 的/ 设计/ 来源于/ 以下/ 两个/ 方面/ 的/ 基本/ 思想/ :/ (/ 1/ )/ 待测/ 程序/ 中/ 谓词/ 执行/ 次数/ 越/ 多则/ 选择/ 的/ N/ 值越/ 大/ ,/ 这/ 与/ 我们/ 在/ 5.5/ 节中/ 得到/ 的/ 结论/ 是/ 相/ 呼应/ 的/ ;/ (/ 2/ )/ 待测/ 程序/ 的/ 执行/ 信息/ 能够/ 较/ 好/ 地/ 满足/ Nbit/ -/ Pesla/ 算法/ 获取信息/ 的/ 要求/ ,/ 即/ 保证/ 执行/ 序列/ Pi/ (/ 参见/ 定义/ 2/ )/ 中/ 的/ 每/ 一个/ 元素/ 所/ 代表/ 的/ 序/ 向量/ 犈/ k/ 列/ 模式/ 都/ 能够/ 有/ 一定/ 数量/ 的/ 子/ 序列/ 与/ 之/ 匹配/ ./ 例如/ ,/ 当/ MeanM/ ∈/ [/ 2n/ +/ 1/ ,/ 2n/ +/ 2/ )/ ,/ 根据/ 式/ (/ 6/ )/ 得到/ Ne/ =/ n/ ,/ 则/ 执行/ 序列/ 向量/ 将/ 包含/ 2n/ 个/ 元素/ ./ 从而/ ,/ 每个/ 元素/ 所/ 代表/ 的/ 序列/ 模式/ 平均/ 至少/ 有/ 1/ 个/ 以上/ 的/ 子/ 序列/ 与/ 之/ 匹配/ ,/ 最/ 多/ 可能/ 存在/ 2n/ +/ 2/ -/ n/ 个/ 匹配/ 的/ 子/ 序列/ ;/ 表/ 12/ 显示/ 了/ 在/ Siemens/ 和/ Space/ 软件包/ 中/ 139/ 个/ 程序/ 上/ 式/ (/ 6/ )/ 对于/ Ne/ 的/ 选择/ 效果/ ./ 其中/ ,/ Nopt1/ 表示/ 能/ 取得/ 最优/ 定位/ 效果/ 的/ N/ 值/ ;/ Nopt2/ 表示/ 能/ 取得/ 次优/ 定位/ 效果/ 的/ N/ 值/ ;/ Nopt3/ 表示/ 能/ 取得/ 第/ 3/ 位/ 定位/ 效果/ 的/ N/ 值/ ./ 选择/ 效果/ Ne/ =/ Nopt1Ne/ =/ Nopt2Ne/ =/ Nopt3/ 其它/ 情况/ 从表/ 12/ 中/ 可以/ 看出/ ,/ 在/ 139/ 个/ 程序/ 版本/ 中/ ,/ Ne/ 对/ 其中/ 的/ 78/ 个/ 准确/ 选择/ 到/ Nopt1/ ;/ 选择/ Nopt2/ 的/ 占/ 所有/ 版本/ 数/ 的/ 17.3/ %/ ;/ 选择/ Nopt3/ 的/ 占/ 了/ 7.2/ %/ ./ 超过/ 80/ %/ 的/ 程序/ 版本/ 使用/ 式/ (/ 6/ )/ 都/ 可以/ 选择/ 到/ 最好/ 或者/ 较/ 好/ 的/ N/ 值/ (/ Ne/ 的/ 取值/ 位于/ 前/ 3/ 位/ )/ ./ 进一步/ ,/ 基于/ 式/ (/ 6/ )/ 我们/ 可以/ 通过/ 以下/ 步骤/ 对/ Nbit/ -/ Pesla/ 算法/ 进行/ 简单/ 改进/ ,/ 得到/ 的/ 算法/ 简称/ Nebit/ -/ Pesla/ 算法/ :/ 第/ 1/ 步/ ,/ 搜集/ 待测/ 程序/ 中桩/ 点/ 谓词/ 在/ 每个/ 测试用例/ 中/ 的/ 执行/ 信息/ ;/ 第/ 2/ 步/ ,/ 根据/ 执行/ 信息/ 统计/ 得到/ MeanM/ ,/ 并/ 使用/ 式/ (/ 6/ )/ 计算/ Ne/ ;/ 第/ 3/ 步/ ,/ 令/ N/ =/ Ne/ ,/ 然后/ 使用/ Nbit/ -/ Pesla/ 算法/ 对/ 该/ 程序/ 进行/ 缺陷/ 定位/ ./ 将/ Nebit/ -/ Pesla/ 算法/ 应用/ 于/ Siemens/ 和/ Space/ 软件包/ ,/ 并/ 与/ 每个/ 缺陷/ 版本/ 上/ 取得/ 最优/ 定位/ 效果/ 的/ Nbit/ -/ Pesla/ 算法/ (/ 即/ N/ =/ Nopt1/ 时所/ 选择/ 的/ Nbit/ -/ Pesla/ 算法/ ,/ 以下/ 简称/ 为/ 最优/ Nbit/ -/ Pesla/ )/ 进行/ 比较/ ./ 图/ 10/ 中/ 横坐标/ 表示/ 分别/ 使用/ Nebit/ -/ Pesla/ 和/ 最优/ Nbit/ -/ Pesla/ 定位/ 时/ ,/ P/ -/ score/ 的/ 差值/ ,/ 纵坐标/ 表示/ 版本/ 个数/ ./ 例如/ ,/ 图/ 6/ 中/ 左边/ 第/ 1/ 个/ 柱状图/ 表示/ :/ 在/ 119/ 个/ 缺陷/ 版本/ 上/ ,/ Nebit/ -/ Pesla/ 与/ 最优/ Nbit/ -/ Pesla/ 的/ 定位精度/ (/ P/ -/ score/ 计算结果/ )/ 相差/ 小于/ 10/ %/ ./ Nebit/ -/ Pesla/ 在/ 90/ %/ 以上/ 的/ 程序/ 都/ 可以/ 取得/ 与/ 最优/ 定位精度/ 接近/ 的/ 效果/ (/ 差别/ 小于/ 20/ %/ )/ ./ 图/ 10Nebit/ -/ Pesla/ 相比/ 最优/ Nbit/ -/ Pesla/ 的/ 定位/ 效果/ 通过/ 这/ 两/ 方面/ 的/ 实验/ ,/ 我们/ 可以/ 得到/ 如下/ 结论/ :/ 使用/ 式/ (/ 6/ )/ 计算/ 得到/ 的/ Ne/ 确实/ 可以/ 对/ Nbit/ -/ Pesla/ 算/ Page13/ 法中/ 的/ N/ 进行/ 最好/ 或/ 较/ 好/ 的/ 选择/ ./ 5.7/ 结论/ 的/ 有效性/ 讨论/ 影响/ 本文/ 结论/ 有效性/ 的/ 因素/ 主要/ 有/ 以下/ 3/ 个/ :/ (/ 1/ )/ 各/ 算法/ 的/ 复现/ 是否/ 正确/ ;/ (/ 2/ )/ P/ -/ score/ 评价/ 方法/ 是否/ 有效/ ;/ (/ 3/ )/ 目标软件/ 的/ 选取/ 是否/ 合适/ ./ 首先/ ,/ 对于/ SOBER/ 算法/ 和/ CBI/ 算法/ ,/ 本文/ 按照/ 文献/ [/ 2/ ,/ 4/ ]/ 所述/ 步骤/ 进行/ 复现/ ,/ 并用/ 文献/ [/ 4/ ]/ 中/ 所/ 列举/ 的/ 例子/ 验证/ 了/ 其/ 正确性/ ;/ 对于/ Wilcoxon/ 、/ Mann/ -/ Whitney/ 、/ F/ -/ test/ ,/ t/ -/ test/ 算法/ ,/ 我们/ 直接/ 利用/ ALGLIB/ 数理统计/ 软件/ 进行/ 实现/ ,/ 而/ 该/ 统计/ 软件/ 已/ 被/ 多位/ 学者/ 和/ 研究/ 人员/ 应用/ 于/ 研究/ 和/ 工程/ 实践/ 中/ ,/ 其/ 计算精度/ 和/ 正确性/ 可以/ 保证/ ./ 因此/ 可以/ 认为/ 本文/ 对于/ 各/ 算法/ 的/ 复现/ 应该/ 是/ 正确/ 的/ ,/ 所/ 得到/ 的/ 实验/ 结果/ 和/ 数据/ 也/ 是/ 有效/ 的/ ./ 当前/ 软件缺陷/ 定位/ 领域/ 使用/ 较/ 多/ 的/ 3/ 种/ 评价/ 方法/ 为/ T/ -/ score/ 、/ Expense/ 以及/ P/ -/ score/ ./ 每种/ 评价/ 方法/ 都/ 有/ 不足/ ,/ 但/ 都/ 有/ 一定/ 的/ 适用范围/ ,/ 其中/ T/ -/ score/ 由/ Renieris/ 和/ Reiss/ 提出/ [/ 22/ ]/ ,/ 该/ 方法/ 不但/ 适用/ 于/ 基于/ 语句/ 的/ 缺陷/ 定位/ 方法/ ,/ 还/ 适用/ 于/ 基于/ 谓词/ 的/ 缺陷/ 定位/ 方法/ ;/ Expense/ 则/ 由/ Jones/ 等/ 人/ [/ 21/ ]/ 提出/ ,/ 主要/ 适用/ 于/ 基于/ 语句/ 的/ 方法/ ,/ 而/ P/ -/ score/ 则/ 由/ Zhang/ 等/ 人/ [/ 20/ ]/ 于/ 近几年/ 提出/ ,/ 主要/ 适用/ 于/ 基于/ 谓词/ 的/ 方法/ ,/ 因此/ ,/ 选用/ 与/ 本文/ 研究/ 最/ 相关/ 的/ P/ -/ score/ 作为/ 评价/ 各/ 算法/ 定位精度/ 的/ 标准/ 也/ 是/ 合理/ 的/ ./ Siemens/ 软件包/ 一直/ 以来/ 就是/ 研究/ 软件缺陷/ 定位/ 的/ 必选/ 实验/ 对象/ 之一/ ,/ 但是/ 由于/ 其中/ 所/ 包含/ 的/ 缺陷/ 都/ 为/ 人工/ 植入/ ,/ 很难/ 代表/ 真实/ 的/ 软件缺陷/ ,/ 为此/ ,/ 本文/ 增加/ 了/ Space/ 软件/ 作为/ 实验/ 对象/ ,/ 得到/ 了/ 相同/ 的/ 结论/ ,/ 但/ 这/ 依旧/ 不能/ 排除/ 对于/ 其它/ 实验/ 对象/ ,/ 本文/ 的/ 研究会/ 得到/ 不同/ 实验/ 结果/ 的/ 情况/ ./ 因此/ ,/ 在/ 今后/ 的/ 研究/ 中/ ,/ 增加/ 更/ 大规模/ 的/ 软件/ 作为/ 实验/ 对象/ 仍旧/ 是/ 一个/ 重要/ 的/ 方面/ ./ 6/ 结束语/ 软件缺陷/ 定位/ 在/ 软件/ 调试/ 过程/ 中是/ 一项/ 异常/ 费时费力/ 的/ 工作/ ,/ 在/ 现有/ 方法/ 中/ ,/ 基于/ 谓词/ 的/ 统计学/ 缺陷/ 定位/ 方法/ 在/ 定位精度/ 上/ 已有/ 良好/ 表现/ ./ 本文/ 在/ 总结/ 前人/ 研究/ 的/ 基础/ 上/ 围绕/ 两个/ 问题/ 展开/ 研究/ ,/ 进一步/ 丰富/ 了/ 算法/ 所/ 需/ 的/ 谓词/ 执行/ 信息/ ,/ 设计/ 出/ 基于/ 谓词/ 执行/ 序列/ 的/ 缺陷/ 定位/ 算法/ ,/ 并/ 对/ 该/ 算法/ 进行/ 了/ 扩展/ ./ 最后/ 用/ 实验/ 证明/ 增大/ 谓词/ 执行/ 信息量/ 的确/ 可以/ 有效/ 提高/ 算法/ 的/ 定位精度/ ,/ 并且/ 当待测/ 程序/ 中/ 所/ 蕴含/ 的/ 谓词/ 执行/ 信息/ 可以/ 满足/ 算法/ 的/ 需求/ 时/ ,/ 算法/ 的/ 定位精度/ 会/ 随着/ 执行/ 信息量/ 的/ 增加/ 不断/ 提高/ ./ 同时/ 通过/ 本文/ 的/ 工作/ 也/ 发现/ ,/ 若/ 不/ 考虑/ 待测/ 程序运行/ 时/ 对/ 执行/ 信息/ 的/ 提供/ 能力/ ,/ 一味/ 增加/ 算法/ 中/ 处理/ 的/ 谓词/ 执行/ 信息量/ ,/ 反会/ 使/ 算法/ 的/ 定位精度/ 降低/ ./ 因此/ ,/ 本文/ 最后/ 讨论/ 了/ 如何/ 针对/ 不同/ 程序/ 的/ 执行/ 信息/ 为/ Nbit/ -/ Pesla/ 算法/ 选取/ 合适/ N/ 值/ 的/ 问题/ ./ 对/ N/ 值/ 设定/ 方法/ 的/ 进一步/ 分析/ 和/ 改进/ 将/ 是/ 我们/ 下/ 一步/ 的/ 工作/ 重点/ ./ 

