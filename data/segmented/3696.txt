Page1HybridHP/ :/ 一种/ 轻型/ 的/ 内核/ 完整性/ 监控/ 方案/ 及其/ 形式化/ 验证/ 钱振江/ 1/ )/ ,/ 2/ )/ ,/ 3/ )/ 刘苇/ 1/ )/ ,/ 2/ )/ 黄皓/ 1/ )/ ,/ 2/ )/ 1/ )/ (/ 南京大学/ 软件/ 新/ 技术/ 国家/ 重点/ 实验室/ 南京/ 210046/ )/ 2/ )/ (/ 南京大学/ 计算机科学/ 与/ 技术/ 系/ 南京/ 210046/ )/ 3/ )/ (/ 常熟/ 理工学院/ 计算机科学/ 与/ 工程学院/ 江苏/ 常熟/ 215500/ )/ 摘要/ 虽然/ 传统/ 的/ 虚拟化/ 监控/ 方法/ 可以/ 在/ 一定/ 程度/ 上/ 保障/ 操作系统/ 安全/ ./ 然而/ ,/ 虚拟/ 监控器/ VMM/ 中/ 管理/ 域/ Do/ -/ main0/ 的/ 存在/ 以及/ 操作系统/ 级/ 的/ 切换/ 所/ 带来/ 的/ 性能/ 损失/ 是/ 很多/ 具有/ 大型/ 应用/ 的/ 操作系统/ 所/ 不能/ 接受/ 的/ ./ 注重/ 硬件/ 虚拟化/ 技术/ 的/ 监控/ 能力/ 而/ 摒弃/ 其/ 不必要/ 的/ 虚拟化/ 能力/ ,/ 提出/ 了/ 一个/ 新型/ 的/ 通用/ 的/ 虚拟化/ 监控/ 框架/ HybridHP/ ,/ 并/ 实现/ 其/ 原型/ ./ HybridHP/ 将/ 管理/ 域/ 和/ 虚拟机/ 监控/ 机制/ 两者/ 整合/ 到/ 被/ 监控/ 操作系统/ 的/ 地址/ 空间/ ,/ 具有/ 很/ 好/ 的/ 获取/ 被/ 监控/ 系统/ 操作/ 语义/ 的/ 能力/ ./ 利用/ Isabelle/ // HOL/ 形式化/ 辅助/ 证明/ 工具/ 验证/ HybridHP/ 的/ 隔离/ 性/ 、/ 安全性/ 和/ 监控/ 能力/ ./ 最后/ 对/ HybridHP/ 进行/ 了/ 攻击/ 实验/ 和/ 性能/ 评估/ ,/ 结果显示/ HybridHP/ 提供/ 了/ 和/ 传统/ 的/ 虚拟化/ 监控/ 方案/ 相同/ 的/ 安全/ 保障/ ,/ 并/ 具有/ 很/ 好/ 的/ 系统/ 性能/ ./ 关键词/ 硬件/ 虚拟化/ ;/ 内核/ 完整性/ ;/ 安全监控/ ;/ 安全/ 攻击/ ;/ Isabelle/ 形式化/ 验证/ 1/ 引言/ 内核/ 级/ 的/ 攻击/ 和/ 恶意程序/ 可以/ 轻易/ 地/ 破坏/ 整个/ 操作系统/ 的/ 完整性/ ,/ 而/ 传统/ 监控/ 方案/ 的/ 本质/ 缺陷/ 在于/ 恶意程序/ 可能/ 获得/ 和/ 内核/ 一样/ 的/ 权限/ ,/ 导致/ 操作系统/ 没有/ 保护/ 自身/ 的/ 能力/ ./ 近年来/ 硬件/ 虚拟化/ 技术/ (/ 如/ Intel/ -/ VT/ 和/ AMD/ -/ SVM/ 等/ )/ 的/ 发展/ 为/ 基于/ 虚拟机/ (/ 如/ XEN/ [/ 1/ ]/ 和/ KVM/ [/ 2/ ]/ 等/ )/ 的/ 监控/ 方式/ 提供/ 了/ 底层/ 的/ 支持/ 和/ 保障/ ./ 总的来说/ ,/ 由于/ 虚拟机/ 监控器/ 位于/ 内核/ 的/ 底层/ ,/ 比/ 内核/ 具有/ 更/ 高/ 的/ 权限/ ,/ 所以/ 可以/ 中断/ 内核/ 的/ 执行/ ,/ 对/ 内核/ 的/ 执行/ 进行/ 审查/ 和/ 检验/ ,/ 从而/ 保证/ 内核/ 的/ 完整性/ ./ 这种/ 实时性/ 也/ 是/ 虚拟机/ 监控器/ 区别/ 于/ 其它/ 监控/ 方案/ 的/ 最大/ 优势/ ./ 很多/ 的/ 学者/ 对此/ 进行/ 了/ 研究/ [/ 3/ -/ 4/ ]/ ./ 基于/ 虚拟机/ 的/ 监控器/ 能够/ 捕捉到/ 包括/ 内存/ 在内/ 的/ 资源/ 访问/ 动作/ ,/ 使得/ 在/ 内核/ 执行/ 过程/ 中/ 能够/ 根据/ 内核/ 执行/ 路径/ 中/ 所/ 访问/ 的/ 对象/ 进行/ 选择性/ 的/ 事件/ 触发/ ,/ 从而/ 提高/ 了/ 监控器/ 监控/ 的/ 实时性/ ./ 个/ 方面/ 的/ 问题/ :/ 已有/ 的/ 虚拟化/ 监控/ 方案/ [/ 3/ ,/ 5/ -/ 11/ ]/ ,/ 普遍存在/ 这么/ 几/ (/ 1/ )/ 性能/ 损失/ ./ 这些/ 方案/ 注重/ 虚拟化/ 机制/ ,/ 而/ 非/ 监控/ 本身/ ./ 在/ 监控/ 单独/ 的/ 操作系统/ 时/ ,/ 它们/ 往往/ 需要/ 付出/ 很大/ 的/ 额外/ 代价/ ,/ 例如/ 采用/ XEN/ 进行/ 监控/ 的/ 方式/ ,/ 需要/ 有/ 单独/ 的/ 管理/ 域/ Domain0/ ,/ 像/ I/ // O/ 之类/ 的/ 操作/ 需要/ 管理/ 域/ Domain0/ 的/ 干预/ 处理/ ,/ 这/ 极大/ 地/ 影响/ 了/ 被/ 监控/ 系统/ 的/ 性能/ ;/ (/ 2/ )/ 可信/ 基/ (/ TrustedComputingBase/ ,/ TCB/ )/ 膨胀/ ./ 虚拟机/ 自身/ 的/ 代码/ 量/ 往往/ 过于/ 庞大/ (/ 如/ XEN3/ ./ 4.1/ 拥有/ 230KSLOC/ 的/ 代码/ 量/ )/ ,/ 再/ 加上/ 管理/ 域/ Domain0/ 的/ 系统/ 代码/ 量/ ,/ 我们/ 面临/ 着/ 虚拟机/ 本身/ 以及/ 相应/ 的/ 管理/ 域/ Domain0/ 的/ 正确性/ 问题/ ,/ 很难/ 保证/ 监控/ 方案/ 自身/ 不会/ 引入/ 程序/ 错误/ ;/ (/ 3/ )/ 语义/ 获取/ 难/ ./ 引用/ 监控器/ 位于/ 被/ 监控/ 系统/ 地址/ 空间/ 之外/ ,/ 因此/ 引用/ 监控器/ 看到/ 的/ 视图/ 和/ 被/ 监控/ 系统/ 的/ 是/ 有/ 差别/ 的/ ,/ 很难/ 去/ 理解/ 被/ 监控/ 系统/ 中/ 对/ 某个/ 内存地址/ 的/ 具体操作/ 语义/ ,/ 管理/ 域/ 进行/ 监控/ 的/ 过程/ 需要/ 对/ 被/ 监控/ 系统/ 的/ 具体操作/ 语义/ 进行/ 转化/ ,/ 而/ 这/ 一/ 过程/ 是/ 很/ 难/ 做到/ 实时/ 而/ 全面/ 的/ ./ 虽然/ Sharif/ 等/ 人/ 在/ 被/ 监控/ 系统/ 中/ 构建/ 了/ 一个/ 监控器/ SIM/ [/ 12/ ]/ ,/ 以便/ 于/ 取得/ 被/ 监控/ 系统/ 的/ 语义/ ,/ 但是/ SIM/ 与/ 被/ 监控/ 系统/ 的/ 隔离/ 性/ 仍/ 需要/ 依赖于/ 另/ 一个/ 监控器/ 的/ 保护/ ,/ 而/ 本文/ 提出/ 的/ 内嵌式/ 监控器/ 的/ 自我/ 保护/ 能力/ 不/ 依赖于/ 其它/ 任何/ 安全/ 机制/ ./ 在/ 本文/ 中/ ,/ 给出/ 了/ 一个/ 通用/ 的/ 虚拟化/ 框架/ Hy/ -/ bridHP/ ,/ 其/ 特点/ 如下/ :/ (/ 1/ )/ HybridHP/ 注重/ 于/ 监控/ 本身/ 而/ 非/ 虚拟化/ 技术/ ./ HybridHP/ 没有/ Domain0/ 之类/ 的/ 单独/ 管理/ 域/ 概念/ ,/ HybridHP/ 以/ 模块/ 的/ 方式/ 嵌入/ 到/ 被/ 监控/ 系统/ 的/ 内核/ 空间/ 中/ 进行/ 监控/ 服务/ ./ HybridHP/ 只/ 负责/ 监控/ 系统/ 的/ 运行/ ,/ 能够/ 截获/ 被/ 监控/ 系统/ 中/ 的/ 特权/ 操作/ 、/ 异常/ 和/ 对/ 寄存器/ 、/ 内存/ 、/ I/ // O/ 等/ 的/ 访问/ ,/ 且/ 不受/ 原有/ 内核模块/ 的/ 影响/ 和/ 破坏/ ,/ 并且/ 不会/ 干预/ 其/ I/ // O/ 的/ 操作/ ,/ 为此/ 被/ 监控/ 系统/ 的/ 性能/ 不会/ 受到/ 很大/ 的/ 影响/ ;/ (/ 2/ )/ 由于/ 采用/ 模块/ 的/ 方式/ 运行/ ,/ HybridHP/ 看到/ 的/ 内存/ 视图/ 和/ 被/ 监控/ 系统/ 看到/ 的/ 是/ 一致/ 的/ ,/ 这样/ 容易/ 获得/ 被/ 监控/ 系统/ 的/ 操作/ 语义/ ,/ 监控/ 的/ 正确率/ 和/ 效率/ 可以/ 得到/ 很大/ 的/ 提高/ ;/ (/ 3/ )/ 由于/ HybridHP/ 监控/ 功能/ 的/ 单一性/ ,/ 其/ 代码/ 量/ 可以/ 控制/ 在/ 很小/ 的/ 范围/ ,/ 这/ 便于/ 对/ 其/ 正确性/ 进行/ 证明/ ,/ 我们/ 利用/ Isabelle/ [/ 13/ ]/ 形式化/ 辅助/ 证明/ 工具/ 对/ 其/ 进行/ 了/ 正确性/ 证明/ ./ 总的来说/ ,/ HybridHP/ 是/ 被/ 监控/ 系统/ 内部/ 的/ 一个/ 模块/ ,/ 它/ 利用/ 硬件/ 虚拟化/ 技术/ ,/ 使/ 自身/ 独立/ 于/ 被/ 监控/ 系统/ ,/ 具有/ 比/ 被/ 监控/ 系统/ 中/ 的/ 原有/ 模块/ 更/ 高/ 的/ 权限/ ./ 图/ 1/ 显示/ 了/ HybridHP/ 与/ 已有/ 虚拟化/ 监控/ 方案/ 的/ 区别/ ,/ 其中/ CM/ 、/ DM/ 是/ 监控器/ 的/ 代码段/ 和/ 数据/ 段/ ,/ CP/ 、/ DP/ 是/ 被/ 监控/ 系统/ 的/ 代码段/ 和/ 数据/ 段/ ./ 区别/ 于/ 已有/ 的/ 虚拟化/ 监控/ 方案/ ,/ 由于/ HybridHP/ 以/ 模块/ 方式/ 运行/ ,/ 其/ 自身/ 的/ 代码/ 和/ 数据/ 信息/ 暴露/ 在/ 被/ 监控/ 系统/ 的/ 视图/ 下/ ,/ 很/ 容易/ 受到/ 其它/ 恶意/ 模块/ 的/ 破坏/ ,/ 所以/ 它/ 自身/ 的/ 安全性/ 和/ 隔离/ 性是/ 我们/ 成功/ 与否/ 的/ 关键/ ./ 为此/ ,/ 我们/ 提出/ 了/ 相应/ 的/ 保护/ 机制/ ,/ 并且/ 在/ 高层/ 使用/ 形式化/ 的/ 方法/ 并/ 借助/ Isabelle/ 证明/ 其/ 安全性/ 和/ 隔离/ 性/ ./ HybridHP/ 是/ 一种/ 完全/ 内嵌式/ 的/ 监控/ 方案/ ,/ 不/ 借助/ 其它/ 任何/ 的/ 辅助/ 监控/ 措施/ ,/ 并且/ 其/ 正确性/ 经过/ Page3/ 图/ 1HybridHP/ 与/ 已有/ 的/ 虚拟化/ 监控/ 方案/ 的/ 区别/ 严格/ 的/ 形式化/ 逻辑/ 验证/ ./ 本文/ 第/ 2/ 节/ 阐述/ HybridHP/ 的/ 整体/ 框架/ 设计/ ;/ 第/ 3/ 节/ 说明/ HybridHP/ 原型/ 的/ 具体/ 实现/ 细节/ 和/ 关键技术/ ;/ 第/ 4/ 节/ 给出/ HybridHP/ 正确性/ 的/ Isabelle/ 形式化/ 证明/ ;/ 第/ 5/ 节/ 阐述/ 对/ HybridHP/ 的/ 测试/ 结果/ 和/ 系统/ 性能/ 评估/ ;/ 第/ 6/ 节对/ 本文/ 进行/ 总结/ 和/ 对/ 未来/ 的/ 工作/ 进行/ 展望/ ./ 2HybridHP/ 的/ 设计/ 2.1/ HybridHP/ 的/ 目标/ HybridHP/ 的/ 设计/ 目标/ 是/ 能够/ 利用/ 硬件/ 虚拟化/ 技术/ 对/ 操作系统/ 实施/ 监控/ ,/ 但/ 不会/ 对/ 操作系统/ 的/ 性能/ 和/ 效率/ 造成/ 太大/ 的/ 影响/ ,/ 为此/ 需要/ 实现/ 以下/ 几个/ 具体/ 目标/ :/ (/ 1/ )/ 监控/ 程序/ 本身/ 是/ 安全/ 的/ ./ 为了/ 实现/ 这个/ 目标/ ,/ 要求/ 监控/ 程序/ 非常/ 小/ ,/ 其/ 本身/ 是/ 可以/ 通过/ 形式化/ 验证/ 的/ ,/ 这样/ 才能/ 保证/ 它/ 自身/ 的/ 安全可靠/ 和/ 可控/ ;/ (/ 2/ )/ 监控/ 程序/ 自我/ 保护/ ./ 监控/ 程序/ 本身/ 要/ 有/ 自我/ 保护/ 的/ 能力/ ,/ 防止/ 其它/ 恶意/ 模块/ 的/ 破坏/ ;/ (/ 3/ )/ 监控/ 程序/ 不可/ 旁路/ ./ 监控/ 程序/ 能够/ 截获/ 被/ 图/ 2HybridHP/ 框架/ 监控/ 系统/ 中/ 的/ 特权/ 操作/ 和/ 对/ 关键/ 内存/ 对象/ 、/ 寄存器/ 、/ I/ // O/ 设备/ 的/ 访问/ 等/ ./ 恶意/ 模块/ 不能/ 绕过/ 监控/ 程序执行/ 非法操作/ 和/ 修改/ 受/ 保护/ 的/ 关键/ 数据/ ;/ (/ 4/ )/ 机制/ 与/ 策略/ 分离/ ./ 监控/ 程序/ 本身/ 提供/ 的/ 只是/ 监控/ 机制/ ,/ 具体/ 的/ 策略/ 是/ 可以/ 实时/ 更新/ 的/ ;/ (/ 5/ )/ 被/ 监控/ 系统/ 的/ 性能/ 不会/ 受到/ 太大/ 的/ 影响/ ./ 已有/ 的/ 监控/ 方案/ 正是/ 由于/ 架构/ 的/ 原因/ ,/ 极大/ 地/ 损失/ 了/ 系统/ 的/ 性能/ ,/ 所以/ 并/ 不是/ 很/ 适用/ ;/ (/ 6/ )/ 易于/ 获得/ 被/ 监控/ 系统/ 的/ 语义/ ./ 获得/ 操作系统/ 的/ 语义/ 是/ 监控/ 程序/ 一个/ 很/ 重要/ 的/ 任务/ ,/ 而已/ 有/ 的/ 虚拟机/ 监控器/ 由于/ 虚拟机/ 看到/ 的/ 内存/ 视图/ 和/ 被/ 监控/ 系统/ 看到/ 的/ 是/ 有/ 差别/ 的/ ,/ 很难/ 去/ 理解/ 被/ 监控/ 系统/ 的/ 具体操作/ 语义/ ./ 2.2/ HybridHP/ 的/ 整体/ 框架/ HybridHP/ 的/ 整体/ 框架/ 如图/ 2/ 所示/ ./ HybridHP/ 的/ 核心/ 特点/ 在于/ HybridHP/ 以/ 模块/ 的/ 方式/ 在/ 被/ 监控/ 系统/ 内核/ 空间/ 中/ 运行/ ,/ 由于/ 使用/ 了/ 硬件/ 虚拟化/ 技术/ ,/ 比/ 其它/ 的/ 内核模块/ 具有/ 更/ 高/ 的/ 权限/ ./ 整个/ 内核/ 空间/ 处于/ 0/ 级/ 模式/ (/ Ring0/ )/ ,/ 但是/ Intel/ -/ VT/ 又/ 将/ 0/ 级/ 分成/ 两种/ 子模式/ :/ VMXRoot/ 模式/ 和/ VMXNon/ -/ Root/ 模式/ ./ VMXRoot/ 是/ 真正/ 的/ 0/ 级/ ,/ 具有/ 所有/ 权限/ ./ VMXPage4Root/ 模式/ 的/ 操作/ 方式/ 和/ 没有/ 开启/ 硬件/ 虚拟化/ 机制/ (/ VMX/ )/ 时/ 的/ 操作/ 基本上/ 是/ 相同/ 的/ ,/ 不同之处/ 在于/ VMXRoot/ 模式/ 中/ 能够/ 调用/ VMX/ 的/ 指令/ ,/ 同时/ ,/ 一些/ 寄存器/ 中/ 能够/ 装载/ 的/ 值会/ 受到/ 一定/ 的/ 限制/ ./ 在/ 本文/ 的/ 框架/ 中/ ,/ HybridHP/ 运行/ 在/ VMXRoot/ 模式/ ./ VMXNon/ -/ Root/ 是/ 受限/ 的/ 0/ 级/ ,/ 其中/ 很多/ 的/ 特权/ 操作/ 和/ 事件/ 会/ 触发/ 控制权/ 转移/ 到/ VMXRoot/ 模式/ 的/ 监控/ 程序/ ./ 对应/ 地/ ,/ 框架/ 中/ 的/ 被/ 监控/ 系统/ 运行/ 在/ VMXNon/ -/ Root/ 模式/ ./ HybridHP/ 本身/ 不/ 提供/ 虚拟化/ ,/ 没有/ 管理/ 域/ 和/ 驱动/ 域/ 的/ 概念/ ./ 对于/ 系统/ 的/ 驱动/ 部分/ (/ 如/ I/ // O/ 访问/ )/ ,/ 被/ 监控/ 系统/ 的/ 驱动/ 模块/ 直接/ 和/ 硬件/ 交互/ ,/ 不/ 需要/ HybridHP/ 的/ 干预/ ,/ 这样/ 对系统/ 的/ 性能/ 不会/ 造成/ 太大/ 的/ 影响/ ./ 当然/ ,/ 如果/ 需要/ HybridHP/ 进行/ 监控/ 和/ 管理/ 的话/ ,/ 也/ 可以/ 通过/ 对/ HybridHP/ 增加/ 相应/ 的/ 策略/ 来/ 达到/ 目的/ ./ 对于/ 监控/ 能力/ ,/ HybridHP/ 只/ 提供/ 监控/ 的/ 机制/ ,/ 采用/ 机制/ 和/ 策略/ 相/ 分离/ 的/ 方式/ ./ 为此/ ,/ HybridHP/ 启动/ 之后/ ,/ 首先/ 从/ 外部环境/ 获得/ 策略信息/ ./ 为了/ 避免/ 外部环境/ 的/ 不可/ 信/ 以及/ 恶意/ 策略/ 对/ HybridHP/ 完整性/ 的/ 破坏/ ,/ HybridHP/ 使用/ 数字签名/ 的/ 方式/ 来/ 进行/ 策略/ 的/ 安全更新/ ./ HybridHP/ 根据/ 策略/ 对/ 内核/ 的/ 运行/ 过程/ 进行/ 实时/ 监控/ ,/ 如/ 关键/ 数据/ 的/ 保护/ 、/ 异常/ 行为/ 触发/ 等/ ./ 运行/ 在/ VMXNon/ -/ Root/ 模式/ 的/ 被/ 监控/ 系统/ 触发/ 受/ HybridHP/ 监控/ 的/ 事件/ ,/ 通过/ 两种/ 模式/ 之间/ 唯一/ 的/ 入口/ VMExit/ 进入/ VMXRoot/ 模式/ ,/ 由/ HybridHP/ 根据/ 策略信息/ 进行/ 处理/ ,/ 处理/ 完成/ 后/ 通过/ VMEntry/ 返回/ VMXNon/ -/ Root/ 模式/ ./ 由于/ HybridHP/ 和/ 被/ 监控/ 系统/ 采用/ 的/ 是/ 相同/ 的/ 页表/ 视图/ ,/ HybridHP/ 对于/ 被/ 监控/ 系统/ 的/ 对/ 内存地址/ 的/ 操作/ 语义/ 不/ 需要/ 经过/ 转换/ 而/ 可以/ 直接/ 理解/ ,/ 提高/ 监控/ 处理/ 的/ 效率/ ./ 同时/ ,/ HybridHP/ 具有/ 自我/ 保护/ 的/ 能力/ ,/ 被/ 监控/ 系统/ 虽然/ 可以/ 看到/ HybridHP/ 的/ 页表/ 视图/ ,/ 但是/ 无法/ 对/ 其/ 进行/ 修改/ ,/ 而/ HybridHP/ 拥有/ 修改/ 被/ 监控/ 系统/ 内存/ 视图/ 的/ 权限/ ./ 因此/ ,/ 从/ 地址/ 空间/ 的/ 角度/ 来讲/ ,/ 被/ 监控/ 系统/ 内核/ 的/ 地址/ 空间/ 其实/ 是/ HybridHP/ 地址/ 空间/ 的/ 子集/ ,/ HybridHP/ 和/ 内核/ 其它/ 模块/ 对于/ 地址/ 空间/ 视图/ 的/ 权限/ 是/ 单向/ 的/ ./ 3HybridHP/ 的/ 实现/ 为了/ 验证/ 本文/ 的/ 方案/ ,/ 实现/ 了/ HybridHP/ 的/ 原型/ ./ 本节/ 对/ HybridHP/ 的/ 实现/ 和/ 主要/ 关键技术/ 进行/ 阐述/ ./ HybridHP/ 以/ 模块/ 的/ 方式/ 在/ 被/ 监控/ 系统/ 内核/ 空间/ 中/ 运行/ ,/ 区别/ 于/ 系统/ 中/ 的/ 其它/ 模块/ ,/ 在/ HybridHP/ 中/ 开启/ 硬件/ 虚拟化/ (/ VMX/ )/ ,/ HybridHP/ 运行/ 在/ VMXRoot/ 模式/ ,/ 而/ 整个/ 被/ 监控/ 系统/ 运行/ 在/ VMXNon/ -/ Root/ 模式/ ,/ 所以/ HybridHP/ 具有/ 比/ 其它/ 的/ 内核模块/ 更/ 高/ 的/ 权限/ ./ 如何/ 做到/ 在/ HybridHP/ 框架/ 中/ 开启/ 硬件/ 虚拟化/ ,/ 使得/ HybridHP/ 运行/ 于/ VMXRoot/ 模式/ ,/ 而/ 被/ 监控/ 系统/ 运行/ 于/ VMXNon/ -/ Root/ 模式/ 是/ 需要/ 解决/ 的/ 第/ 1/ 个/ 问题/ ./ 在/ HybridHP/ 框架/ 中/ ,/ 控制/ VMXRoot/ 和/ VMXNon/ -/ Root/ 运行/ 模式/ 的/ 关键/ 是/ VMX/ 控制结构/ VMCS/ ,/ 主要/ 包括/ 3/ 个/ 部分/ :/ (/ 1/ )/ 被/ 监控/ 系统/ 的/ 状态/ 区/ (/ GuestStateArea/ )/ ,/ 用于/ 在/ VMXNon/ -/ Root/ 向/ VMXRoot/ 模式/ 切换/ 时/ 保存/ 被/ 监控/ 系统/ 的/ 状态/ 信息/ ,/ 如段/ 寄存器/ 、/ CR/ 寄存器/ 、/ 指令/ 指针/ IP/ 、/ 栈顶/ 指针/ SP/ 等/ ,/ 以及/ 从/ VMXRoot/ 返回/ VMXNon/ -/ Root/ 模式/ 时/ 的/ VMEntry/ 入口/ 地址/ ;/ (/ 2/ )/ 主机/ 状态/ 区/ (/ HostStateArea/ )/ ,/ 存放/ 监控/ 系统/ 自身/ 的/ 状态/ 信息/ ./ 在/ HybridHP/ 框架/ 中/ ,/ 主机/ 状态/ 区/ 主要/ 包括/ HybridHP/ 运行/ 过程/ 的/ 各种/ 状态/ 信息/ ,/ 如/ 与/ HybridHP/ 运行/ 相关/ 的/ 段/ 寄存器/ 、/ CR/ 寄存器/ 、/ HybridHP/ 栈顶/ 指针/ SP/ ,/ 以及/ 从/ VMXNon/ -/ Root/ 向/ VMXRoot/ 模式/ 切换/ 时/ 的/ VMExit/ 处理程序/ 的/ 入口/ 地址/ ;/ (/ 3/ )/ HybridHP/ 执行/ 控制区/ (/ ExecutionControlArea/ )/ ,/ 主要/ 包括/ HybridHP/ 监控/ 过程/ 的/ 配置/ 信息/ ,/ 如/ 需要/ 保护/ 的/ 寄存器/ 信息/ (/ CR0/ 等/ )/ 、/ HybridHP/ 需要/ 捕获/ 的/ 特权/ 指令/ (/ 如/ CPUID/ 等/ )/ 和/ 异常/ (/ 如/ page/ -/ fault/ 等/ )/ 信息/ 以及/ 相应/ 的/ 处理/ 方式/ 和/ 处理函数/ 入口/ 地址/ ./ 同时/ 在/ HybridHP/ 执行/ 控制区/ 中/ 还/ 存放/ 了/ 产生/ VMXNon/ -/ Root/ 到/ VMXRoot/ 模式/ 切换/ 的/ 原因/ ,/ 包括/ 错误码/ 、/ 触发/ 切换/ 的/ 特权/ 指令/ 以及/ 被/ 监控/ 系统/ 期望/ 修改/ 的/ 寄存器/ 或者/ 对象/ 的/ 地址/ 等/ 信息/ ./ 在/ 被/ 监控/ 系统启动/ 后/ ,/ 以/ 模块/ 的/ 方式/ 加载/ Hy/ -/ bridHP/ ./ HybridHP/ 启动/ 的/ 初始化/ 流程/ 包括/ :/ (/ 1/ )/ 分配/ HybridHP/ 的/ 内存空间/ ,/ 主要/ 包括/ 内核/ 栈/ 、/ 动态数据/ 区/ 、/ 以及/ VMX/ 控制结构/ VMCS/ 所/ 需/ 的/ 空间/ ;/ (/ 2/ )/ 通过/ VMXON/ 指令/ 开启/ 硬件/ 虚拟化/ ,/ 设置/ (/ 3/ )/ 设置/ VMCS/ 中/ 的/ 主机/ 状态/ 区/ ,/ 其中/ VMExit/ 的/ 入口/ 地址/ 指向/ HybridHP/ 的/ 处理函数/ 入口/ ,/ 页/ 目录/ 地址/ 寄存器/ CR3/ 设置/ 为/ 与/ 被/ 监控/ 系统/ 相同/ ,/ 被/ 监控/ 系统/ 的/ 状态/ 区/ ;/ Page5/ 使得/ HybridHP/ 与/ 被/ 监控/ 系统/ 采用/ 相同/ 的/ 页表/ 视图/ ;/ (/ 4/ )/ 设置/ HybridHP/ 执行/ 控制区/ ,/ 包括/ 需要/ 保护/ 的/ 寄存器/ (/ 如/ CR0/ 等/ )/ 、/ 需要/ 捕获/ 的/ 特权/ 指令/ (/ 如/ CPUID/ 等/ )/ 以及/ 异常/ (/ 如/ pagefault/ 等/ )/ 信息/ ,/ 这是/ HybridHP/ 监控/ 的/ 核心/ ,/ 同时/ 根据/ 策略信息/ 将/ 关键/ 数据/ 区域/ 所在/ 的/ 页面/ 以及/ 被/ 监控/ 系统页表/ 所在/ 的/ 页/ 等/ 数据/ 设置/ 成在/ VMXNon/ -/ Root/ 模式/ 下/ 只读/ ,/ 开启/ 对/ 数据/ 的/ 保护/ ;/ (/ 5/ )/ 通过/ VMLANCH/ 指令/ 返回/ 被/ 监控/ 系统/ VMX/ 下面/ 对/ HybridHP/ 框架/ 的/ 具体/ 实现/ 和/ 关键/ 技/ Non/ -/ Root/ 模式/ ,/ 使得/ 被/ 监控/ 系统/ 开始/ 正常/ 运行/ ./ 术/ 进行/ 详细/ 阐述/ ./ 3.1/ HybridHP/ 的/ 关键技术/ 之一/ :/ 关键/ 数据保护/ 为了/ 尽量/ 地/ 压缩/ HybridHP/ 的/ 代码/ 量/ ,/ Hy/ -/ bridHP/ 框架/ 没有/ 单独/ 的/ 管理/ 域/ Domain0/ 的/ 概念/ ,/ 更/ 没有/ 像/ 传统/ 虚拟机/ 监控器/ 方案/ 中/ 自身/ 实现/ 的/ 虚拟存储/ 管理/ 功能/ ,/ HybridHP/ 和/ 被/ 监控/ 系统/ 处于/ 相同/ 的/ 页表/ 视图/ 下/ ,/ 被/ 监控/ 系统/ 甚至/ 可以/ 看到/ HybridHP/ 的/ 存在/ ,/ 如何/ 实现/ 对/ 关键/ 数据/ (/ 如/ 被/ 监控/ 系统/ 的/ 页表/ 和/ 代码/ 所在/ 页/ 、/ 需要/ 保护/ 的/ 特定/ 数据/ 页/ 等/ )/ 的/ 保护/ 是/ 需要/ 解决/ 的/ 关键问题/ ./ HybridHP/ 的/ 监控/ 能力/ 主要/ 体现/ 在/ 两个/ 方面/ :/ 特权/ 指令/ 的/ 捕获/ 和/ 关键/ 数据/ 区域/ 的/ 保护/ ./ 对/ 特权/ 指令/ 的/ 实时/ 捕获/ 是/ HybridHP/ 作为/ 轻型/ 内核/ 完整性/ 监控/ 方案/ 的/ 基础/ ./ HybridHP/ 通过/ 自身/ 的/ 初始化/ 过程/ 在/ VMCS/ 的/ HybridHP/ 执行/ 控制区/ 中/ 对/ 需要/ 监控/ 捕获/ 的/ 特权/ 指令/ (/ 如/ CPUID/ 等/ )/ 进行/ 配置/ ./ 在/ 被/ 监控/ 系统/ 的/ 运行/ 过程/ 中/ ,/ 由于/ 被/ 监控/ 系统/ 运行/ 于/ VMXNon/ -/ Root/ 模式/ ,/ 这些/ 特权/ 指令/ 的/ 运行/ 将/ 触发/ 指令/ 陷入/ (/ Trap/ )/ 事件/ ,/ 被/ 监控/ 系统/ 的/ 运行/ 将/ 被/ 打断/ ,/ 通过/ VMExit/ 的/ 入口/ 地址/ 进入/ HybridHP/ 的/ 相应/ 处理程序/ ,/ 运行/ 模式/ 也/ 从/ VMXNon/ -/ Root/ 切换/ 到/ VMXRoot/ 模式/ ,/ 控制权/ 转移/ 至/ HybridHP/ ,/ 从而/ 实现/ 对/ 特权/ 指令/ 的/ 捕获/ ./ HybridHP/ 在/ 处理/ 完/ 指令/ 陷入/ 之后/ ,/ 通过/ VMEntry/ 接口/ 返回/ 被/ 监控/ 系统/ ./ 对于/ 关键/ 数据/ 区域/ 的/ 保护/ ,/ 涉及/ 到/ HybridHP/ 框架/ 中/ 对/ 寄存器/ 和/ 异常/ 等/ 的/ 监控/ 事件/ 类型/ 的/ 捕获/ ,/ 主要/ 由/ 以下/ 技术/ 提供/ 保证/ :/ (/ 1/ )/ 始终/ 开启/ CPU/ 的/ 页/ 保护/ 机制/ ./ 开启/ 页/ 保护/ 机制/ 是/ HybridHP/ 监控/ 的/ 基础/ ,/ 因为/ 如果/ 让/ 操作系统/ 具有/ 去除/ 页/ 保护/ 机制/ 的/ 能力/ ,/ 那么/ 内核/ 恶意/ 模块/ 就/ 可以/ 不/ 通过/ 页/ 保护/ 机制/ 而/ 更改/ 任意/ 的/ 内存/ ,/ 那么/ 也/ 就/ 没有/ 了/ 关键/ 数据/ 区域/ 的/ 概念/ ./ 在/ X86/ 架构/ 中/ ,/ 页/ 保护/ 机制/ 由/ 寄存器/ CR0/ 的/ WP/ 位/ 控制/ ./ 在/ HybridHP/ 的/ 控制策略/ 中/ ,/ 设置/ 对/ CR0/ 寄存器/ 的/ 访问控制/ ,/ 同时/ 在/ VMCS/ 的/ HybridHP/ 执行/ 控制区/ 设置/ 对/ CR0/ 寄存器/ 的/ 保护/ ./ 在/ HybridHP/ 的/ 监控/ 框架/ 下/ ,/ 被/ 监控/ 系统/ 的/ 运行/ 过程/ 中/ 如果/ 出现/ 修改/ CR0/ 寄存器/ 的/ 操作/ ,/ 将/ 触发/ CRA/ (/ ControlRegisterAcces/ -/ ses/ )/ 异常/ ,/ 运行/ 模式/ 从/ VMXNon/ -/ Root/ 切换/ 到/ VMXRoot/ 模式/ ,/ 同时/ 控制权/ 转移/ 到/ HybridHP/ ./ HybridHP/ 通过/ 对/ 被/ 监控/ 系统/ 的/ 操作/ 语义/ 进行/ 分析/ 并/ 根据/ 控制策略/ 进行/ 判断/ ,/ 对于/ 非法/ 的/ CR0/ 修改/ 动作/ ,/ HybridHP/ 禁止/ 该/ 动作/ 的/ 执行/ ,/ 从而/ 使得/ 被/ 监控/ 系统/ 中/ 的/ 恶意/ 模块/ 没有/ 禁止/ 页/ 保护/ 机制/ 的/ 能力/ ,/ 即/ 始终/ 开启/ 页/ 保护/ 机制/ (/ CR0/ ./ WP/ =/ 1/ )/ ./ (/ 2/ )/ 在/ 上述/ (/ 1/ )/ 的/ 基础/ 上/ ,/ HybridHP/ 根据/ 策略/ 将/ 需要/ 保护/ 的/ 关键/ 数据/ 在/ 内存/ 中/ 的/ 页/ 设置/ 成在/ VMXNon/ -/ Root/ 模式/ 下/ 只读/ ./ 一旦/ 发生/ 对/ 这些/ 数据/ 的/ 修改/ 操作/ 就/ 会/ 触发/ pagefault/ 异常/ ,/ 通过/ 模式/ 转移/ VMExit/ 从/ VMXNon/ -/ Root/ 模式/ 切换/ 为/ VMXRoot/ 模式/ ,/ 控制权/ 交由/ HybridHP/ ,/ 通过/ 和/ 策略信息/ 比较/ ,/ 判断/ 修改/ 动作/ 的/ 合法性/ ,/ 如果/ 合法/ ,/ HybridHP/ 负责/ 将/ 该/ 修改/ 动作/ 执行/ ,/ 否则/ ,/ 通过/ 注入/ 返回/ 的/ 方式/ ,/ 向/ 被/ 监控/ 系统/ 发送/ 错误/ 警告/ ./ (/ 3/ )/ HybridHP/ 将/ 被/ 监控/ 系统/ 的/ 页表/ 所在/ 的/ 页/ 设为/ 在/ VMXNon/ -/ Root/ 模式/ 下/ 只读/ ,/ 那么/ 恶意/ 模块/ 试图/ 通过/ 去掉/ 页表/ 中/ 相应/ 页/ 的/ 保护/ 属性/ 而/ 修改/ 内存/ 的/ 操作/ 必然/ 会/ 触发/ pagefault/ 异常/ ,/ 被/ HybridHP/ 所/ 捕获/ ,/ 处理/ 方式/ 与/ (/ 2/ )/ 类似/ ./ 从/ 以上/ 的/ 技术/ 可以/ 看出/ ,/ 对/ 关键/ 数据/ 的/ 修改/ 动作/ 不会/ 绕过/ HybridHP/ 的/ 监控/ 处理/ ,/ 满足/ 不可/ 旁路/ 的/ 要求/ ./ 3.2/ HybridHP/ 的/ 关键技术/ 之二/ :/ 自我/ 保护/ 基于/ XEN/ 之类/ 的/ 虚拟机/ 监控/ 框架/ 中/ ,/ 由于/ 使用/ 了/ 影子/ 页表/ [/ 1/ ]/ ,/ 虚拟机/ 监控器/ 以及/ 管理/ 域/ 与/ 被/ 监控/ 系统/ 采用/ 的/ 是/ 不同/ 的/ 页表/ ,/ 为此/ 监控器/ 部分/ 的/ 相关/ 数据结构/ 是/ 不/ 在/ 被/ 监控/ 系统/ 的/ 内存/ 视图/ 之内/ 的/ ,/ 所以/ 监控/ 程序/ 不会/ 受到/ 被/ 监控/ 系统/ 的/ 破坏/ 和/ 干扰/ ./ 也就是说/ 由于/ XEN/ 中有/ 自己/ 的/ 虚拟存储/ 管理/ ,/ 所以/ 可以/ 做到/ 监控器/ 自身/ 的/ 数据/ 对/ 客户机/ 完全/ 不/ 可见/ ./ HybridHP/ 以/ 模块化/ 的/ 方式/ 嵌入/ 在/ 被/ 监控/ 系统/ 中/ 运行/ ,/ 采用/ 了/ 与/ 被/ 监控/ 系统/ 相同/ 的/ 页表/ 视图/ ,/ 没有/ 对/ 被/ 监控/ 系统/ 完全/ 隐藏/ 物理/ 内存/ 的/ 能力/ ,/ 为此/ HybridHP/ 如何/ 达到/ 自我/ 保护/ 也/ 是/ 需要/ 解决/ 的/ 关键问题/ ./ HybridHP/ 框架/ 通过/ 将/ 自己/ 的/ 代码/ 页/ 、/ 数据/ 页/ 和/ 策略/ 所在/ 页/ 等/ 数据/ 设置/ 为/ 在/ VMXNon/ -/ Root/ 模式/ 下/ 只读/ 来/ 起到/ 自我/ 保护/ ./ 也就是说/ ,/ HybridHP/ 将/ Page6/ 自身/ 作为/ 关键/ 数据/ 的/ 一部分/ 进行/ 监控/ 保护/ ,/ 那么/ 即使/ 自身/ 暴露/ 在/ 被/ 监控/ 系统/ 的/ 内存/ 视图/ 中/ ,/ 利用/ 3.1/ 节中/ 的/ 关键/ 数据保护/ 技术/ ,/ 如果/ 被/ 监控/ 系统/ 中/ 的/ 恶意/ 模块/ 试图/ 修改/ HybridHP/ 的/ 代码/ 、/ 数据/ 或者/ 策略信息/ ,/ 都/ 会/ 被/ HybridHP/ 捕获/ 到/ ,/ HybridHP/ 可以/ 否决/ 所有/ 这些/ 非法/ 的/ 修改/ ./ 总的来说/ ,/ HybridHP/ 的/ 自我/ 保护/ 能力/ 使得/ 虽然/ 自身/ 的/ 所有/ 数据/ 暴露/ 于/ 被/ 监控/ 系统/ 的/ 视图/ 之内/ ,/ 但是/ 被/ 监控/ 系统/ 没有/ 对/ 其/ 进行/ 修改/ 的/ 权限/ ,/ 所以/ 可以/ 保证/ 自身/ 的/ 安全/ ./ 3.3/ HybridHP/ 的/ 关键技术/ 之三/ :/ 策略/ 更新/ 为了/ 实现/ 监控/ 策略/ 和/ 机制/ 的/ 分离/ 以及/ 策略/ 的/ 更新/ ,/ HybridHP/ 本身/ 实现/ 的/ 只是/ 监控/ 的/ 机制/ ,/ 监控/ 策略/ 需要/ 由/ 外部环境/ 提供/ ./ 在/ 传统/ 的/ 基于/ 虚拟机/ 的/ 监控/ 方案/ 中/ ,/ 虚拟机/ 监控器/ 所/ 采用/ 的/ 监控/ 策略/ 由/ 管理/ 域/ Domain0/ 提供/ ,/ 为此/ 策略/ 的/ 安全性/ 由/ Domain0/ 保证/ ./ 在/ HybridHP/ 框架/ 中/ ,/ HybridHP/ 自身/ 是/ 一个/ 可信计算/ 基/ (/ TCB/ )/ ,/ 而/ 被/ 监控/ 系统/ 是/ 不可/ 信/ 的/ ,/ 如果/ 依赖/ 被/ 监控/ 系统/ 为/ 其/ 提供/ 策略信息/ ,/ 被/ 监控/ 系统/ 中/ 的/ 恶意/ 模块/ 可以/ 修改/ 策略信息/ 或者/ 任意/ 封装/ 恶意/ 的/ 策略/ 并/ 发送给/ HybridHP/ ,/ 那么/ 整个/ 监控/ 框架/ 是/ 不可/ 信/ 的/ ./ 同时/ ,/ HybridHP/ 没有/ 管理/ 域/ Domain0/ 的/ 概念/ ,/ 为此/ 需要/ 解决/ HybridHP/ 策略信息/ 的/ 来源/ 问题/ ,/ 以及/ 策略信息/ 从/ 被/ 监控/ 系统/ 的/ 用户/ 层/ 输入/ 到/ Hy/ -/ bridHP/ 空间/ 这样/ 一条/ 安全/ 的/ 策略/ 输入/ 路径/ 的/ 问题/ ./ 利用/ 一套/ 独立/ 的/ 可信/ 平台/ 作为/ 策略/ 中心/ ,/ 其中/ 图/ 3HybridHP/ 策略/ 更新/ 由于/ Hash/ 算法/ (/ MD5/ 、/ SHA/ 等/ )/ 存在/ 安全性/ 的/ 问题/ ,/ 不可/ 信/ 的/ 被/ 监控/ 系统/ 可以/ 生成/ 一个/ 与/ 可能/ 的/ 策略/ 文件/ 具有/ 相同/ “/ 数字/ 摘要/ ”/ 的/ 恶意/ 策略/ 文件/ ,/ 并/ 传递/ 给/ HybridHP/ ,/ 但/ 其/ 内容/ 只有/ 极小/ 的/ 可能性/ 也/ 是/ 一段/ 策略/ 内容/ ,/ 而/ 更/ 多/ 的/ 是/ 一段/ 乱码/ ,/ 或者说/ 不是/ 预定/ 义/ 的/ 格式/ ,/ 如/ 三元组/ (/ 主体/ ,/ 动作/ ,/ 客体/ )/ 等/ ,/ 对此/ HybridHP/ 仍能/ 将/ 其/ 识别/ ./ 同时/ ,/ 在/ 保证/ 签名/ 私钥/ 安全/ 不/ 泄露/ 的/ 情况/ 下/ ,/ 外部/ 不可/ 信/ 的/ 被/ 监控/ 系统/ 无法/ 存放/ 了/ 为/ HybridHP/ 所/ 准备/ 的/ 各种/ 策略信息/ ,/ 该/ 策略/ 中心/ 作为/ HybridHP/ 策略信息/ 的/ 来源/ 保证/ 了/ 策略信息/ 源头/ 的/ 安全性/ ./ 同时/ ,/ 采用/ 数字签名/ 加密/ 认证/ 的/ 方法/ 来/ 解决/ 上述/ 的/ 策略/ 安全/ 输入/ 路径/ 问题/ ./ 对/ 从/ 策略/ 中心/ 获得/ 的/ HybridHP/ 策略信息/ 文件/ 使用/ Hash/ 算法/ (/ 如/ MD5/ 、/ SHA/ 算法/ 等/ )/ 计算/ Hash/ 值/ ,/ 即/ 做/ “/ 数字/ 摘要/ ”/ ,/ 再/ 对/ 数字/ 摘要/ 用/ 签名/ 私钥/ 做/ 非对称/ 加密/ (/ 如/ RSA/ 、/ ElGamal/ ①/ 等/ )/ ,/ 即/ 做/ “/ 数字签名/ ”/ ./ 之后/ 将/ 以上/ 的/ 签名/ 和/ 策略信息/ 文件/ 原文/ 一起/ 进行/ 封装/ ,/ 被/ 监控/ 系统/ 在/ 用户/ 层/ 将/ 这/ 一/ 封装/ 的/ 结果/ 通过/ VMX/ 系统/ 调用/ Hypercall/ 的/ 形式/ 向/ HybridHP/ 发送/ ,/ HybridHP/ 对/ 接收/ 的/ 经过/ 加密/ 的/ 策略信息/ 进行/ 验证/ ./ HybridHP/ 收到/ 的/ 数字签名/ 结果/ ,/ 其中/ 包括/ 数字签名/ 和/ 策略信息/ 文件/ 原文/ ./ HybridHP/ 首先/ 用/ 发方公钥/ 解密/ 数字签名/ ,/ 导出/ 数字/ 摘要/ ,/ 并/ 对/ 策略信息/ 文件/ 原文/ 做/ 同样/ Hash/ 算法/ 得出/ 一个/ 新/ 的/ 数字/ 摘要/ ,/ 并/ 将/ 这/ 两个/ 摘要/ 进行/ 结果/ 比较/ ,/ 结果/ 相同/ 则/ 签名/ 得到/ 验证/ ,/ 否则/ ,/ 说明/ 策略/ 在/ 输入/ 过程/ 存在/ 被/ 恶意/ 的/ 模块/ 修改/ 的/ 情况/ ,/ HybridHP/ 判定/ 输入/ 的/ 策略信息/ 为/ 无效/ ,/ 不予/ 采用/ ./ 对于/ 经过/ 验证/ 的/ 策略信息/ 文件/ ,/ HybridHP/ 还/ 需/ 检查/ 其/ 是否/ 为/ 预定/ 义/ 的/ 策略/ 格式/ ,/ 如/ 三元组/ (/ 主体/ ,/ 动作/ ,/ 客体/ )/ 等/ ./ 如果/ 是/ 正确/ 的/ 策略信息/ ,/ 那么/ 将/ 其/ 加入/ 策略/ 库中/ ,/ 并/ 进行/ 相应/ 的/ 关键/ 数据保护/ 设置/ ,/ 否则/ 忽略/ 这些/ 信息/ ,/ 这样/ 可以/ 确保/ Hy/ -/ bridHP/ 得到/ 的/ 策略/ 一定/ 是/ 管理人员/ 所/ 希望/ 的/ 策略/ ,/ 整个/ 框架/ 如图/ 3/ 所示/ ./ 将/ 恶意/ 的/ 策略信息/ 进行/ 封装/ 并/ 发送给/ HybridHP/ ./ 因此/ ,/ 恶意/ 策略/ 无法/ 破坏/ HybridHP/ 的/ 完整性/ ,/ 保证/ 了/ 策略信息/ 的/ 机密性/ 、/ 不/ 可修改性/ 和/ 不可/ 伪造/ 性/ ./ HybridHP/ 只/ 提供/ 监控/ 的/ 机制/ ,/ 采用/ 机制/ 和/ 策略/ 相/ 分离/ 的/ 方式/ ,/ 具体/ 的/ 策略/ 由/ 外部环境/ 提供/ ,/ 这/ 给/ 具体/ 的/ 策略/ 配置/ 提供/ 了/ 便利/ ./ 在/ 本文/ 中/ ,/ 可以/ 采用/ 三/ ①/ ElGmalEncryption/ ./ http/ :/ // // en/ ./ wikipedia/ ./ org/ // wiki/ // ElGa/ -/ Page7/ 元组/ (/ 主体/ ,/ 动作/ ,/ 客体/ )/ 的/ 格式/ 来/ 定义/ 策略/ ,/ 如表/ 1/ 所示/ ./ 其中/ 表头/ 的/ 第/ 2/ 行/ 表示/ 客体/ ./ 主体/ 可信/ 模块/ RRR/ // WR/ // WR/ // WR/ // W/ 不可/ 信/ 模块/ RRRRRR/ 内核/ RRR/ // WR/ // WR/ // WR/ // WHybridHPR/ // WR/ // WR/ // WR/ // WR/ // WR/ // WHybridHP/ 策略/ 主体/ 可以/ 分为/ 可信/ 模块/ 、/ 不可/ 信/ 模块/ 、/ 内核/ 以及/ HybridHP/ ./ 可信/ 模块/ 主要/ 包括/ 得到/ 第三方/ (/ 工业界/ )/ 认证/ 的/ 各种/ 设备/ 驱动程序/ ,/ 如/ 显卡/ 和/ 网卡/ 驱动/ 等/ ;/ 不可/ 信/ 模块/ 主要/ 包括/ 上层/ 用户/ 的/ 各种/ 第三方/ 应用程序/ ,/ 这些/ 程序模块/ 未/ 得到/ 有效/ 的/ 认证/ ,/ 因而是/ 不可/ 信/ 的/ ,/ 它们/ 对于/ 系统资源/ 的/ 访问/ 是/ 只读/ 的/ 权限/ ;/ 被/ 监控/ 系统/ 的/ 内核/ 部分/ 在/ 可信/ 的/ 情况/ 下/ 对/ 系统资源/ 具有/ 大部分/ 的/ 权限/ ;/ 在/ HybridHP/ 框架/ 中/ ,/ HybridHP/ 自身/ 作为/ 可信/ 基/ ,/ 对/ 系统资源/ 具有/ 所有/ 的/ 访问/ 权限/ ./ 3.4/ HybridHP/ 的/ 关键技术/ 之四/ :/ 可信/ 启动/ HybridHP/ 保证/ 了/ 在/ 其/ 启动/ 以后/ 的/ 时间/ 内/ 监控/ 系统/ 的/ 安全性/ ,/ 但是/ 在/ HybridHP/ 启动/ 之前/ 的/ 阶段/ 无法/ 保证系统/ 的/ 安全性/ ./ 被/ 监控/ 系统/ 中/ 的/ 恶意/ 模块/ 可以/ 在/ HybridHP/ 启动/ 之前/ 破坏/ HybridHP/ ,/ 或者/ 禁止/ HybridHP/ 的/ 启动/ ./ 在/ 监控/ 框架/ 中/ ,/ HybridHP/ 启动/ 之前/ 的/ 安全/ 保护/ 由/ 基于/ TPM/ ①/ 的/ 可信/ 启动/ 来/ 负责/ ,/ 如图/ 4/ 所示/ ./ 在/ HybridHP/ 原型/ 中/ 整合/ 了/ tboot/ ②/ 软件/ ,/ 通过/ 监控/ 启动/ 过程/ 中/ 所有/ 关键/ 数据/ 的/ 完整性/ ,/ 能够/ 有效/ 地/ 防止/ 系统/ 的/ 核心/ 组件/ 被/ 替换/ ,/ 从而/ 保证/ 系统启动/ 过程/ 的/ 完整性/ ,/ 这/ 也/ 是/ HybridHP/ 监控/ 服务/ 的/ 前提/ ./ 4HybridHP/ 的/ 验证/ HybridHP/ 代码/ 量/ 控制/ 在/ 8KSLOC/ ./ 本节/ 使用/ Isabelle/ 形式化/ 辅助/ 证明/ 工具/ 阐述/ HybridHP/ 框架/ 的/ 隔离/ 性/ 、/ 安全性/ 和/ 监控/ 能力/ 的/ 验证/ ,/ 并/ 进行/ 安全/ 分析/ ./ 验证/ 部分/ 包括/ :/ HybridHP/ 对/ “/ 去掉/ 页/ 保护/ 机制/ ”/ 、/ “/ 修改/ 页表/ ”/ 和/ “/ 修改/ 关键/ 数据/ ”/ 动作/ 的/ 不可/ 旁路/ 性/ ,/ HybridHP/ 自我/ 保护/ 机制/ ,/ 以及/ HybridHP/ 策略/ 更新/ ./ 4.1/ Isabelle/ 的/ 符号/ 表示/ 这一/ 小节/ 描述/ 验证/ 过程/ 用到/ 的/ 符号/ 表示/ 方法/ ./ 采用/ Isabelle/ 系统/ 的/ 符号/ 表示/ ,/ 这种/ 符号/ 表示/ 方法/ 与/ 传统/ 数理逻辑/ 中/ 的/ 方式/ 基本相同/ ./ Isabelle/ 可以/ 实现/ 对/ 计算/ 系统/ 的/ 形式化/ 描述/ 和/ 验证/ ,/ 采用/ 的/ Isa/ -/ belle/ // HOL/ 是/ Isabelle/ 中/ 对/ 高阶/ 逻辑/ (/ HigherOr/ -/ derLogic/ ,/ HOL/ )/ 的/ 支持/ 和/ 实现/ ./ HOL/ 作为/ 一种/ 类型化/ 的/ 逻辑系统/ ,/ 其/ 类型/ 系统/ 与/ 函数/ 式/ 编程语言/ (/ 如/ ML/ 、/ Haskell/ 等/ )/ 是/ 类似/ 的/ ./ 类型/ 变量/ 可以/ 用/ a/ ,/ b/ 等/ 符号/ 进行/ 表示/ ./ 对于/ 类型/ 项/ ,/ 可以/ 用/ 如/ x/ ∷/ a/ 定义/ 方式/ ./ Isabelle/ 对/ 类型/ 支持/ 构造/ 子/ 操作/ ,/ 例如/ natlist/ 用于/ 定义/ 由/ 自然数/ 组成/ 的/ 列表/ ,/ intset/ 定义/ 由/ 整形/ 变量/ 组成/ 的/ 集合/ ./ 在/ HybridHP/ 的/ 描述/ 和/ 验证/ 的/ 过程/ 中/ ,/ 对于/ 新/ 类型/ 的/ 构造/ 主要/ 采用/ 3/ 种/ 定义/ 方式/ :/ datatype/ 、/ types/ 和/ record/ ./ datatype/ 实现/ 对/ 代数/ 数据类型/ 的/ 构造/ ,/ 例如/ ,/ 对于/ 寄存器/ 类型定义/ 为/ datatypereg/ =/ CR0/ |/ CR1/ |/ CR2/ |/ CR3/ |/ CR4/ ./ types/ 表示/ 类型/ 的/ 简化/ 记号/ ,/ 如/ typesnat/ _/ set/ =/ natset/ ,/ 定义/ 了/ 新/ 的/ 类型/ nat/ _/ set/ ,/ 它/ 表示/ 自然数/ 组成/ 的/ 集合/ 类型/ ./ record/ 用于/ 构造/ 带/ 名称/ 的/ 元组/ 类型/ ,/ 例如/ ,/ 对于/ recordpolicy/ =/ subject/ ∷/ string/ ,/ 3.3/ 节/ 描述/ 的/ 策略信息/ 定义/ 为/ 新/ 类型/ policy/ 表示/ 策略信息/ ,/ 它/ 含有/ 3/ 个/ 成员/ :/ subject/ 表示/ 策略信息/ 的/ 动作/ 主体/ ,/ cond/ 表示/ 需要/ 对/ 对象/ 设置/ 的/ 操作/ 语义/ 信息/ ,/ object/ 表示/ 策略信息/ 中/ 的/ 具体/ 客体/ 对象/ ./ 对于/ record/ ,/ 引用/ 成员/ 信息/ 可以/ 表达/ 为/ 如/ subjectpolicy/ ,/ 表示/ 引用/ policy/ 中/ 的/ subject/ 成员/ ./ 假设/ policy/ 拥有/ 值/ (/ |/ subject/ =/ HybridHP/ ,/ cond/ =/ READ/ _/ ONLY/ ,/ object/ =/ CR0/ |/ )/ ,/ ①/ inggroup/ ./ org/ // developers/ // trusted/ _/ platform/ _/ module/ // specifi/ -/ ②/ Page8/ 更新/ 操作/ 可以/ 表达/ 为/ 如/ policy/ (/ |/ cond/ ·/ ·/ =/ READ/ _/ WRITE/ |/ )/ ,/ 表示/ 将/ policy/ 中/ 的/ cond/ 成员/ 修改/ 成/ READ/ _/ WRITE/ ,/ 但/ subject/ 和/ object/ 成员/ 保持/ 不变/ ./ 对于/ 函数/ 运算/ ,/ 使用/ “/ / ”/ 符号/ 表示/ 函数/ 定义域/ 和/ 值域/ 的/ 映射/ 对应/ 关系/ ./ 函数/ 更新/ 操作/ 使用/ 如/ g/ (/ x/ ·/ ·/ =/ y/ )/ 方式/ 来/ 表达/ ./ 函数/ 在/ 集合/ 上/ 的/ 值域/ 运算/ 使用/ 如/ gZ/ ≡/ {/ y/ |/ / x/ ∈/ Z/ ./ y/ =/ gx/ }/ 表达/ ,/ 表示/ 函数/ g/ 以/ 集合/ Z/ 为/ 定义域/ 的/ 值域/ ./ 4.2/ HybridHP/ 对象/ 模型/ HybridHP/ 以/ 模块/ 的/ 方式/ 在/ 被/ 监控/ 系统/ 的/ 内核/ 空间/ 中/ 运行/ ,/ 对/ 被/ 监控/ 系统/ 的/ 行为/ 进行/ 监视/ ,/ 根据/ 预定/ 义/ 的/ 策略信息/ 对系统/ 中/ 的/ 操作/ 进行/ 判断/ ./ 被/ 监控/ 系统/ 中/ 其它/ 模块/ 不/ 直接/ 与/ HybridHP/ 交互/ ,/ 并不需要/ 知道/ HybridHP/ 的/ 存在/ ./ 系统/ 中/ 各种/ 动作/ 的/ 执行/ 效果/ ,/ 可以/ 看成/ 是/ 对系统/ 状态/ 的/ 改变/ 或者/ 迁移/ ,/ HybridHP/ 在/ 此/ 过程/ 中/ 起到/ 监控/ 和/ 决定/ 的/ 作用/ ,/ 如图/ 5/ 所示/ ./ 文中/ 使用/ Isabelle/ 验证/ 工具/ 对/ HybridHP/ 的/ 安全性/ 进行/ 验证/ ,/ 需要/ 对/ HybridHP/ 建立/ 模型/ ./ 以/ 对象/ 模型/ 的/ 方式/ 建立/ HybridHP/ 的/ 语义/ 模型/ ,/ 将/ 操作/ 的/ 主体/ 和/ 客体/ 作为/ 对象/ 来/ 看待/ ,/ 同时/ 将/ 系统/ 状态/ 之间/ 的/ 转换/ 看成/ 是/ 操作/ 的/ 主客体/ 对象/ 以及/ HybridHP/ 相互作用/ 的/ 结果/ ./ 在/ 这样/ 一个/ 场景/ 下/ ,/ 在/ 下面/ 的/ 章节/ 中/ 使用/ Isabelle/ 对/ HybridHP/ 对象/ 模型/ 进行/ 符号化/ 表示/ ,/ 并/ 在/ 此基础/ 上/ 阐述/ 验证/ HybridHP/ 对/ “/ 去掉/ 页/ 保护/ 机制/ ”/ 、/ “/ 修改/ 页表/ ”/ 、/ 和/ “/ 修改/ 关键/ 数据/ ”/ 动作/ 的/ 不可/ 旁路/ 性/ ,/ HybridHP/ 自我/ 保护/ 机制/ ,/ 以及/ Hy/ -/ bridHP/ 策略/ 更新/ 行为/ 的/ 正确性/ 定理/ ./ 4.3/ HybridHP/ 系统/ 模型/ 形式化/ 描述/ 系统/ 执行/ 进程/ 标识/ :/ typesentity/ _/ id/ =/ nat/ ./ 系统/ 的/ 执行/ 进程/ 使用/ record/ 定义/ :/ 其中/ pcb/ _/ struct/ 为/ 进程/ 控制/ 块/ PCB/ 结构/ ./ 系统/ 的/ 状态/ 定义/ 为/ recordstate/ =/ mem/ ∷/ entity/ _/ id/ / process/ ,/ 其中/ ,/ mem/ 表示/ 系统/ 中/ 内存/ 视图/ ,/ 通过/ 进程/ 的/ 标识/ 可以/ 找到/ 所有/ 的/ 进程/ 个体/ ;/ regs/ 表示/ 系统/ 中/ 的/ 寄存器/ 集合/ ;/ pagetable/ 表示/ 系统/ 的/ 页表/ ,/ 是/ 由/ 页表/ 项/ pageitem/ 组成/ 的/ 集合/ ,/ pageitem/ 是/ 虚拟地址/ va/ 和/ 物理地址/ pa/ 组成/ 的/ record/ ;/ next/ _/ id/ 表示/ 系统/ 中/ 可用/ 的/ 进程/ 标识/ ;/ curr/ _/ mode/ 指明/ 系统/ 目前/ 的/ 模式/ ,/ 取值/ 如/ VMX/ _/ Non/ _/ Root/ 和/ VMX/ _/ Root/ ./ 针对/ 要/ 验证/ 的/ 动作/ 类型定义/ 如下/ :/ datatypeaction/ =/ WriteCR0policyset/ ./ action/ / cond/ ./ action/ / subject/ ./ action/ 包含/ 对/ CR0/ 、/ 页表/ 、/ 关键/ 数据/ 和/ HybridHP/ 数据/ 信息/ 的/ 修改/ 动作/ 、/ 策略/ 更新/ 动作/ 以及/ 空/ 操作/ ./ HybridHP/ 的/ 策略/ 集合/ 定义/ 为/ PolicySet/ ∷/ 系统/ 所有/ 的/ 状态/ 集合/ 定义/ 为/ S/ ∷/ stateset/ ./ 获得/ 动作/ 主体/ 的/ 语义/ 函数/ SubjectofAction/ :/ 获得/ 动作/ 客体/ 的/ 语义/ 函数/ ObjectofAction/ :/ 获得/ 动作/ 的/ 操作/ 语义/ 函数/ CondofAction/ :/ HybridHP/ 策略/ 监控/ 判定/ 语义/ 定义/ :/ policy/ _/ judge/ ∷/ action/ / policyset/ / bool/ ,/ policy/ _/ judgeaps/ ≡/ (/ |/ subject/ =/ SubjectofActiona/ ,/ action/ / object/ ./ policy/ _/ judge/ 判断/ 动作/ 是否/ 符合/ 预定/ 的/ 策略/ ./ 执行/ 单个/ 动作/ 引起/ 的/ 系统/ 状态/ 转化/ 语义/ 函数/ step/ :/ state/ / action/ / state/ ./ 4.4/ 形式化/ 验证/ 本节/ 从/ 攻击/ 的/ 角度/ 来/ 说明/ 修改/ 系统/ 属性/ 的/ 操作/ ,/ 阐述/ HybridHP/ 如何/ 防范/ 这些/ 修改/ 方式/ ,/ 并/ 验证/ 其/ 正确性/ ,/ 同时/ 对/ 策略/ 更新/ 进行/ 验证/ ./ 定理/ 1/ ./ CR0/ 保护/ ./ Theorem1/ ./ / s/ ∈/ S/ ./ [/ |/ action/ =/ WriteCR0/ ;/ (/ policy/ _/ judgeactionPolicySet/ )/ =/ False/ ;/ s/ =/ stepPage9saction/ |/ ]/ →/ CR0/ (/ regss/ )/ =/ CR0/ (/ regss/ )/ ./ 第/ 1/ 种/ 攻击方式/ 试图/ 去掉/ 系统/ 的/ 页/ 保护/ 机制/ (/ CR0/ ./ WP/ 位/ )/ ,/ 从而/ 可以/ 修改/ 任意/ 的/ 内存/ 页/ ./ 由于/ HybridHP/ 对/ CR0/ 进行/ 保护/ ,/ 这种/ 对/ CR0/ 的/ 写/ 操作/ 立即/ 引起/ CRA/ 异常/ ,/ HybridHP/ 通过/ VMX/ 的/ 控制结构/ VMCS/ 读取/ 触发/ 原因/ ,/ 此时/ CR2/ 寄存器/ 的/ 值/ 指向/ 写/ 数据/ 错误/ 的/ 地址/ ./ 通过/ CR3/ 、/ task/ _/ struct/ 等/ 获得/ 执行/ 主体/ 的/ 信息/ ,/ 即/ 对/ 操作/ 语义/ 进行/ 解析/ ,/ 并/ 根据/ 策略信息/ 判断/ 出/ 这种/ 操作/ 的/ 违法性/ ,/ 然后/ 使用/ 注入/ 返回/ 的/ 方式/ 对/ 被/ 监控/ 系统/ 进行/ 错误/ 警告/ ./ 执行/ 该/ 操作/ 前后/ ,/ 系统/ 状态/ 中/ CR0/ 保持/ 不变/ ./ 定理/ 1/ 说明/ 在/ 系统/ 的/ 运行/ 过程/ 中/ ,/ 如果/ 当前/ 动作/ 为/ 修改/ CR0/ (/ WriteCR0/ )/ ,/ 而/ 在/ 策略/ 判断/ 中/ ,/ 该/ 动作/ 的/ 主体/ 没有/ 权限/ 修改/ CR0/ ,/ 此时/ 策略/ 检测/ (/ policy/ _/ judgeactionPolicySet/ )/ 无法/ 通过/ (/ False/ )/ ,/ 那么/ 系统/ 在/ 该/ 动作/ 后/ 状态/ (/ s/ )/ 环境/ 中/ 的/ CR0/ 寄存器/ 保持/ 不变/ ./ 如此/ 可以/ 保证/ HybridHP/ 监视系统/ 中/ 所有/ 对/ CR0/ 的/ 操作/ ,/ 使得/ 被/ 监控/ 系统/ 没有/ 禁止/ 页/ 保护/ 机制/ 的/ 能力/ ,/ 即/ 始终/ 开启/ 页/ 保护/ 机制/ ./ 定理/ 2/ ./ 页表/ 保护/ ./ Theorem2/ ./ / s/ ∈/ S/ ./ [/ |/ action/ =/ WritePageTa/ -/ ble/ ;/ (/ policy/ _/ judgeactionPolicySet/ )/ =/ False/ ;/ s/ =/ stepsaction/ |/ ]/ →/ pagetables/ =/ pagetables/ ./ 这种/ 攻击方式/ 试图/ 通过/ 修改/ 页表/ 中/ 的/ 页表/ 项/ 的/ 只读/ 属性/ ,/ 从而/ 对系统/ 的/ 内存/ 页/ 进行/ 修改/ ./ 对于/ 这种/ 攻击方式/ ,/ 没有/ HybridHP/ 监控/ 的/ 系统/ 中/ 很/ 容易/ 受到破坏/ ./ HybridHP/ 框架/ 根据/ 策略信息/ 对系统/ 中/ 的/ 页表/ 所在/ 的/ 页/ 进行/ 保护/ ,/ 因此/ 修改/ 页表/ 的/ 操作/ 将/ 引起/ pagefault/ 异常/ ,/ 由/ HybridHP/ 在/ VMXRoot/ 模式/ 下/ 进行/ 处理/ ,/ 此时/ CR2/ 寄存器/ 的/ 值/ 指向/ 页表/ 所在/ 的/ 页/ ./ 定理/ 2/ 说明/ HybridHP/ 监控/ 对/ 页表/ 的/ 修改/ 动作/ ,/ 如果/ 当前/ 动作/ 为/ 修改/ 页表/ (/ WritePageTable/ )/ ,/ 而/ 在/ 策略/ 判断/ 中/ ,/ 该/ 动作/ 的/ 主体/ 没有/ 权限/ 修改/ 页表/ ,/ 此时/ 策略/ 检测/ (/ policy/ _/ judgeactionPolicySet/ )/ 也/ 无法/ 通过/ (/ False/ )/ ,/ 那么/ 系统/ 在/ 该/ 动作/ 后/ 状态/ (/ s/ )/ 环境/ 中/ 的/ 页表/ 项/ 保持/ 不变/ ,/ 从而/ 保证/ 了/ 对/ 页表/ 的/ 保护/ ./ 定理/ 3/ ./ 关键/ 数据保护/ ./ Theorem3/ ./ / s/ ∈/ S/ ./ [/ |/ action/ =/ WriteCritical/ -/ Data/ ;/ (/ policy/ _/ judgeactionPolicySet/ )/ =/ False/ ;/ s/ =/ stepsaction/ |/ ]/ →/ mems/ =/ mems/ ./ Proofapply/ (/ ruleTheorem1/ ,/ ruleTheorem2/ )/ 第/ 3/ 种/ 攻击方式/ 对/ 内存/ 中/ 的/ 关键/ 数据/ 页/ 进行/ 修改/ ,/ 而/ 这些/ 页/ 受到/ HybridHP/ 的/ 策略/ 保护/ ./ 定理/ 1/ 保证/ 了/ 外部/ 攻击/ 无法/ 去除/ 系统/ 的/ 页/ 保护/ 机制/ ,/ 定理/ 2/ 保证/ 了/ 外部/ 攻击/ 无法/ 修改/ 内存/ 页/ 在/ 页表/ 中/ 的/ 保护/ 属性/ ,/ 因此/ 这/ 第/ 3/ 种/ 攻击方式/ 必然/ 会/ 触发/ HybridHP/ 对/ pagefault/ 异常/ 的/ 捕获/ ,/ 无法/ 绕过/ HybridHP/ 的/ 监控/ ./ 为此/ ,/ 定理/ 3/ 的/ 证明/ 过程/ 需要/ 借助/ 定理/ 1/ 和/ 定理/ 2/ ./ 定理/ 1/ 、/ 定理/ 2/ 、/ 定理/ 3/ 阐述/ 了/ HybridHP/ 监控/ 的/ 不可/ 旁路/ 性/ ./ 定理/ 4/ ./ 自我/ 保护/ ./ Theorem4/ ./ / s/ ∈/ S/ ./ [/ |/ action/ =/ WriteHybridHP/ -/ Data/ ;/ (/ policy/ _/ judgeactionPolicySet/ )/ =/ False/ ;/ s/ =/ stepsaction/ ;/ curr/ _/ modes/ =/ VMX/ _/ Non/ _/ Root/ |/ ]/ →/ (/ mems/ )/ HybridHP/ =/ (/ mems/ )/ HybridHP/ ./ Proofapply/ (/ case/ _/ tac/ (/ curr/ _/ modes/ )/ andruleTheorem1/ ,/ ruleTheorem2/ ,/ ruleTheorem3/ )/ ./ 最后/ 1/ 种/ 攻击方式/ 假设/ 通过/ 页表/ 视图/ 和/ 系统/ 模块/ 信息/ 找到/ HybridHP/ 代码/ 和/ 数据/ 以及/ 策略信息/ 所在/ 的/ 内存/ 页/ ,/ 对/ HybridHP/ 进行/ 破坏/ ./ HybridHP/ 框架/ 的/ 自我/ 保护/ 能力/ 是/ 通过/ 将/ 自身/ 的/ 代码段/ 、/ 数据/ 段/ 以及/ 策略信息/ 的/ 内存/ 页/ 设置/ 成在/ VMXNon/ -/ Root/ 模式/ 下/ 只读/ 来/ 达到/ 的/ ./ 同时/ ,/ 系统/ 中/ 的/ 恶意/ 模块/ 运行/ 在/ VMXNon/ -/ Root/ 模式/ ,/ 因此/ 这种/ 修改/ 操作/ 必然/ 受到/ HybridHP/ 的/ 干预/ ./ 为此/ ,/ 定理/ 4/ 说明/ ,/ 如果/ 当前/ 状态/ (/ s/ )/ 的/ 运行/ 模式/ 为/ 受限/ 模式/ (/ VMX/ _/ Non/ _/ Root/ )/ ,/ 策略/ 检测/ (/ policy/ _/ judgeactionPolicySet/ )/ 对/ 修改/ HybridHP/ 自身/ 信息/ 的/ 非法/ 动作/ 判断/ 为/ 没有/ 相应/ 的/ 权限/ (/ False/ )/ ,/ 那么/ 该/ 非法/ 动作/ 无法/ 修改/ HybridHP/ 的/ 信息/ ,/ 即/ HybridHP/ 的/ 数据/ 信息/ 保持/ 不变/ ./ 我们/ 可以/ 看出/ 定理/ 4/ 的/ 证明/ 需要/ 定理/ 1/ 、/ 定理/ 2/ 、/ 定理/ 3/ 的/ 辅助/ ,/ 并/ 对系统/ 的/ 当前/ 的/ 状态/ 模式/ 采用/ 分/ 情况/ 的/ 证明/ 策略/ case/ _/ tac/ 来/ 拆解/ ./ 定理/ 5/ ./ HybridHP/ 策略/ 更新/ ./ Theorem5/ ./ / s/ ∈/ S/ ./ [/ |/ action/ =/ PolicyUpdatepolicy/ _/ info/ |/ ]/ →/ (/ validate/ _/ policy/ (/ policy/ _/ info/ )/ =/ True/ ∧/ (/ policy/ _/ judgeactionPolicySet/ )/ =/ True/ →/ PolicySet/ =/ PolicySet/ ∪/ policy/ _/ info/ )/ ∧/ (/ validate/ _/ policy/ (/ policy/ _/ info/ )/ =/ False/ ∨/ (/ policy/ _/ judgeactionPolicySet/ )/ =/ False/ →/ s/ =/ stepsNull/ _/ Action/ ∧/ PolicySet/ Θ/ s/ =/ PolicySet/ Θ/ s/ )/ ./ HybridHP/ 采用/ 数字签名/ 加密/ 认证/ 的/ 方式/ 进行/ 策略/ 更新/ ,/ 主要/ 是/ 为了/ 避免/ 外部环境/ 的/ 不可/ 信对/ 策略信息/ 安全性/ 的/ 影响/ ./ PolicyUpdate/ 是/ 策略/ 更新/ 动作/ ,/ 策略信息/ 定义/ 为/ policy/ _/ info/ ∷/ policyset/ ./ 本文/ 对/ 主要/ 的/ 加密算法/ (/ 如/ MD5/ 、/ SHA/ 算法/ 以及/ RSA/ 、/ ElGamal/ 等/ )/ 和/ 数字签名/ 过程/ 进行/ 了/ Isabelle/ 建模/ 验证/ ,/ 并/ 将/ 其/ 封装/ 在/ 库/ 中/ ,/ 对外/ 提供/ validate/ _/ policyPage10/ 接口/ 进行/ 解码/ 验证/ 和/ 策略信息/ 的/ 预定/ 义/ 格式/ (/ 如/ 三元组/ )/ 识别/ ./ 如果/ 策略信息/ 通过/ 验证/ ,/ 那么/ HybridHP/ 认为/ 这些/ 策略信息/ 是/ 可取/ 的/ ,/ 并/ 加入/ 系统/ 的/ 策略/ 集合/ 中/ ;/ 如果/ 策略信息/ 没有/ 通过/ 验证/ (/ validate/ _/ policy/ (/ policy/ _/ info/ )/ =/ False/ )/ ,/ 或者/ 不/ 允许/ 恶意/ 的/ 策略/ 更新/ 动作/ (/ (/ policy/ _/ judgeactionPolicySet/ )/ =/ False/ )/ ,/ 那么/ 此/ 更新/ 动作/ 无法/ 执行/ ,/ 以空/ 操作/ Null/ _/ Action/ 来/ 表示/ ./ 同时/ ,/ 策略信息/ 保持/ 不变/ ,/ 其中/ PolicySet/ Θ/ s/ 表示/ 状态/ s/ 下/ 的/ 策略/ 集/ ./ 定理/ 5/ 阐述/ 了/ 3.3/ 节中/ 描述/ 的/ 在/ 被/ 监控/ 系统/ 不可/ 信/ 的/ 环境/ 下/ ,/ 策略/ 更新/ 的/ 安全性/ 以及/ 恶意/ 策略/ 不会/ 破坏/ HybridHP/ 的/ 完整性/ ./ 上述/ 的/ 定理/ 都/ 依赖于/ 策略信息/ 的/ 安全性/ ,/ 即/ 其/ 正确性/ 和/ 所/ 构造/ 的/ PolicySet/ 有关/ ./ PolicySet/ 可以/ 看成/ 是/ 3.3/ 节中/ 从/ 外部环境/ 输入/ 的/ 策略信息/ ,/ 而/ 策略信息/ 源头/ 的/ 安全性/ 和/ 策略/ 更新/ 的/ 安全/ 路径/ 保证/ 了/ 输入/ 到/ HybridHP/ 中/ 的/ 策略信息/ 的/ 合法性/ ,/ 因此/ 这些/ 定理/ 的/ 正确性/ 得到/ 了/ 保证/ ./ Isabelle/ 的/ 验证/ 环境/ 配置/ 为/ StudioXPS9100/ 台式/ 电脑/ ,/ 2.8/ GHzInteli7930/ 处理器/ ,/ 3GB/ 内存/ ,/ 操作系统/ 采用/ openSUSEDesktop11/ ./ 3/ 版本/ ,/ Isa/ -/ belle/ 采用/ Isabelle2009/ -/ 2/ _/ bundle/ _/ x86/ -/ linux/ 版本/ ./ 整个/ Isabelle/ 验证/ 工程/ 代码/ 量/ 大概/ 在/ 15KSLOC/ 左右/ ,/ 完整/ 的/ 验证/ 耗时/ 40min/ 左右/ ./ Isabelle/ 的/ 验证/ 结果/ 如图/ 6/ 所示/ ./ “/ Nosubgoals/ ”/ 说明/ Isabelle/ 验证/ 逻辑/ 完整/ ,/ 不/ 存在/ 任何/ 未/ 证明/ 的/ 子目标/ ./ 5/ 实验/ 和/ 系统/ 性能/ 评估/ HybridHP/ 对/ 操作系统/ 的/ 性能/ 影响/ 及其/ 监控/ 的/ 有效性/ 是/ 实验/ 关注/ 的/ 重点/ ./ 在/ 传统/ 的/ 虚拟化/ 监控/ 方案/ 中/ ,/ 性能/ 评估/ 往往/ 关注/ 于/ 监控/ 机制/ 本身/ 所/ 带来/ 的/ 性能/ 损失/ (/ 将/ 这部分/ 损失/ 的/ 性能/ 定量/ 记/ 为/ ε/ )/ ,/ 而/ 忽视/ 被/ 监控/ 系统/ 所/ 获得/ 的/ 真实/ 物理性能/ (/ 定量/ 记/ 为/ α/ )/ ./ 我们/ 认为/ 在/ 传统/ 的/ 虚拟化/ 监控/ 框架/ 下/ ,/ 需要/ 引入/ 考虑/ 虚拟/ 框架/ (/ 包括/ 管理/ 域/ 如/ Domain0/ 以及/ 虚拟机/ 如/ XEN/ )/ 耗用/ 的/ 性能/ (/ 定量/ 记/ 为/ β/ )/ ./ 因此/ ,/ 整个/ 监控/ 框架/ 下/ 整体/ 的/ 性能/ (/ 定量/ 记/ 为/ θ/ )/ 应该/ 是/ 被/ 监控/ 系统/ 所/ 获得/ 的/ 物理性能/ (/ α/ )/ 、/ 虚拟/ 框架/ 耗用/ 的/ 性能/ (/ β/ )/ 和/ 监控/ 机制/ 导致/ 的/ 损失/ 性能/ (/ ε/ )/ 这/ 3/ 个/ 部分/ 之/ 和/ ,/ 即/ θ/ =/ α/ +/ β/ +/ ε/ ,/ 取/ θ/ 的/ 值/ 为/ 100/ %/ ./ 被/ 监控/ 系统/ 所/ 得到/ 的/ 真实性/ 能/ 是/ 关注/ 的/ 重点/ ,/ 所以/ 在/ 性能/ 测试/ 中/ ,/ 加入/ 了/ 这/ 一个/ 评估/ 指标/ ./ 主要/ 从/ 以下/ 两个/ 角度/ 进行/ 性能/ 评估/ :/ (/ 1/ )/ 被/ 监控/ 系统/ 所/ 获得/ 的/ 真实性/ 能/ (/ α/ )/ ;/ (/ 2/ )/ 监控/ 本身/ 所/ 带来/ 的/ 性能/ 损失/ (/ ε/ )/ ./ 为了/ 评估/ HybridHP/ 的/ 性能/ ,/ 选择/ 了/ 几个/ Linux/ 的/ 基准/ 测试程序/ ,/ 包括/ UnixBench/ ①/ 以及/ 其它/ 的/ 一些/ 真实/ 应用软件/ ,/ 通过/ 和/ 传统/ 的/ 基于/ XEN/ 的/ 监控/ 框架/ 以及/ SIM/ 的/ 监控/ 方案/ 进行/ 对比/ 来/ 说明/ HybridHP/ 的/ 性能/ ./ 测试/ 平台/ 是/ StudioXPS9100/ 台式/ 电脑/ ,/ 2.8/ GHzInteli7930/ 处理器/ ,/ 3GB/ 内存/ ./ 被/ 监控/ 系统/ 的/ 各种/ 软件/ 配置/ 信息/ 如表/ 2/ 所示/ ./ openSUSEDesktopUnixBenchKernelbuild/ 此外/ ,/ 为了/ 有效/ 地/ 进行/ 性能/ 对比/ ,/ 本/ 实验/ 还/ 将/ 被/ 监控/ 系统/ 作为/ 客户机/ ,/ 部署/ 到/ 传统/ 的/ 基于/ XEN/ 的/ 以及/ SIM/ 的/ 监控/ 框架/ 中/ ./ 其中/ 管理/ 域/ Domain0/ 采用/ 半/ 虚拟化/ (/ Paravirtualization/ )/ 配置/ ,/ XEN/ 采用/ 标准配置/ ,/ 软件/ 配置/ 信息/ 如表/ 3/ 所示/ ./ 名称/ Domain0XEN/ 图/ 7/ 说明/ 了/ 被/ 监控/ 系统/ 在/ 3/ 种/ 框架/ 下/ 所/ 获得/ 的/ 性能/ (/ α/ )/ 对比/ ,/ 其中/ “/ 解压/ 文件/ ”/ 操作/ 是/ 面向/ CPU/ 计算/ 的/ ,/ “/ 编译/ ”/ 是/ 面向/ I/ // O/ 操作/ 的/ ,/ 而/ UnixBench/ 是/ ①/ UnixBench/ ./ http/ :/ // // ftp/ ./ tux/ ./ org/ // pub/ // benchmarks/ // Sys/ -/ tem/ // unixbenchPage11/ 一个/ 综合测试/ ./ 与/ 传统/ 的/ 基于/ XEN/ 的/ 监控/ 方案/ 和/ SIM/ 不同/ ,/ HybridHP/ 没有/ 管理/ 域/ Domain0/ 的/ 存在/ ,/ 因此/ 在/ 这/ 3/ 个/ 对比/ 测试/ 中/ ,/ 采用/ HybridHP/ 框架/ 的/ 被/ 监控/ 系统/ 所/ 获得/ 性能/ 均/ 接近/ 于/ 物理/ 主机/ 性能/ ./ 特别/ 是/ 在/ “/ 编译/ ”/ 测试/ 中/ ,/ 由于/ HybridHP/ 不/ 对/ 被/ 监控/ 系统/ 的/ I/ // O/ 操作/ 进行/ 干预/ ,/ 系统/ 的/ I/ // O/ 性能/ 基本/ 没有/ 影响/ ./ 当然/ ,/ HybridHP/ 对于/ 系统页表/ 操作/ 的/ 影响/ ,/ 和/ XEN/ 中/ 影子/ 页表/ 操作/ 对系统/ 的/ 性能/ 影响/ 类似/ ,/ 主要/ 的/ 时间/ 开销/ 包括/ :/ 模式/ 转换/ 产生/ 的/ 上下文/ 切换/ 、/ 策略/ 搜索/ 时间/ 、/ HybridHP/ 对/ 异常/ 处理/ 的/ 时间/ 以及/ 页表/ 切换/ (/ CR3/ )/ 的/ 时间/ ./ 表/ 4/ 说明/ 了/ 以/ 创建/ 进程/ 操作/ 为例/ ,/ 3/ 种/ 框架/ 下/ 监控/ 机制/ 本身/ 所/ 带来/ 的/ 性能/ 损失/ (/ ε/ )/ ./ 可以/ 看出/ ,/ 监控/ 性能/ 损失/ 接近/ 并/ 略低于/ SIM/ 的/ 性能/ 损失/ ,/ HybridHP/ 对/ 被/ 监控/ 系统/ 的/ 性能/ 影响/ 控制/ 在/ 很小/ 的/ 范围/ ,/ 满足/ 2.1/ 节/ 第/ 5/ 点/ 对/ HybridHP/ 的/ 性能/ 要求/ ,/ 这/ 也/ 说明/ HybridHP/ 是/ 一种/ 保证/ 内核/ 完整性/ 的/ 轻型/ 方案/ ./ 表/ 4/ 创建/ 进程/ 操作/ 的/ 监控/ 性能/ 损失/ (/ ε/ )/ 对比/ 监控/ 类型/ 平均/ 时间/ // μ/ s/ 相对/ 性能/ 损失/ // %/ 裸机/ XENSIMHybridHP/ 为了/ 验证/ HybridHP/ 监控/ 能力/ 的/ 有效性/ ,/ 我们/ 选择/ 4/ 种/ 不同/ 类型/ 的/ rootkit/ 攻击方式/ [/ 14/ ]/ :/ Mood/ -/ nt/ 、/ a/ -/ dore/ -/ ng/ 、/ Synapsys/ 和/ SucKIT2/ ,/ 并/ 对/ 它们/ 的/ 攻击/ 目标/ 进行/ 了/ 配置/ ,/ 使/ 其/ 适应/ HybridHP/ 监控/ 框架/ ./ 第/ 1/ 种/ 攻击方式/ 试图/ 通过/ 写/ CR0/ 寄存器/ 来/ 设置/ WP/ 为/ 0/ ,/ 从而/ 去掉/ 页/ 保护/ 机制/ ;/ 第/ 2/ 种/ 攻击方式/ 试图/ 修改/ 系统/ 的/ 页表/ 中/ 某/ 一项/ 的/ 只读/ 权限/ ,/ 从而/ 可以/ 任意/ 修改/ 内存/ 页/ ;/ 第/ 3/ 种/ 攻击方式/ 试图/ 修改/ 系统/ 调用/ 表/ ,/ 模拟/ 对系统/ 关键/ 数据/ 的/ 修改/ ;/ 第/ 4/ 种/ 攻击方式/ 查找/ HybridHP/ 所在/ 的/ 页/ ,/ 试图/ 修改/ HybridHP/ 的/ 代码/ 和/ 数据/ 页/ ./ 这/ 4/ 种/ 攻击/ 代表/ 了/ 公认/ 系统漏洞/ 数据库/ (/ NVD/ ①/ )/ 目前/ 典型/ 的/ 内核/ 攻击方式/ ./ 实现/ 结果表明/ ,/ HybridHP/ 可以/ 有效/ 地/ 监控/ 和/ 阻止/ 这/ 4/ 种/ 攻击方式/ ./ 6/ 结束语/ 本文/ 提出/ 了/ 一种/ 用于/ 监控/ 内核/ 完整性/ 的/ 轻型/ 方案/ HybridHP/ ,/ 它/ 以/ 模块/ 的/ 方式/ 在/ 被/ 监控/ 系统/ 的/ 内核/ 空间/ 中/ 实施/ 内核/ 完整性/ 监控/ 服务/ ./ HybridHP/ 的/ 功能/ 由/ 4/ 个/ 关键技术/ 保证/ :/ 关键/ 数据保护/ 、/ 自我/ 保护/ 、/ 策略/ 更新/ 和/ 可信/ 启动/ ./ 关键/ 数据保护/ 技术/ 对/ 由/ 策略信息/ 设定/ 的/ 关键/ 数据/ 实施/ 保护/ ,/ 被/ 监控/ 系统/ 运行/ 于/ VMXNon/ -/ Root/ 模式/ ,/ HybridHP/ 运行/ 于/ VMXRoot/ 模式/ ,/ 保证/ 了/ HybridHP/ 监控/ 的/ 不可/ 旁路/ 性/ ./ HybridHP/ 和/ 被/ 监控/ 系统/ 拥有/ 相同/ 的/ 页表/ 视图/ ,/ 便于/ 获得/ 被/ 监控/ 系统/ 的/ 操作/ 语义/ ,/ 提高/ 监控/ 处理/ 的/ 效率/ ./ 但/ HybridHP/ 的/ 代码/ 和/ 数据/ 信息/ 暴露/ 于/ 被/ 监控/ 系统/ 的/ 内存/ 视图/ 下/ ,/ 为此/ 加入/ 了/ HybridHP/ 的/ 自我/ 保护/ 功能/ ,/ 防止/ 被/ 监控/ 系统/ 中/ 恶意/ 模块/ 对/ 其/ 进行/ 破坏/ ./ HybridHP/ 采用/ 监控/ 机制/ 和/ 策略/ 分离/ 的/ 思想/ ,/ 本身/ 只/ 提供/ 监控/ 能力/ ,/ 通过/ 策略/ 更新/ 的/ 方式/ 支持/ 策略信息/ 的/ 动态/ 修改/ ,/ 考虑/ 到/ 被/ 监控/ 系统/ 的/ 不可/ 信/ 问题/ ,/ 使用/ 数字签名/ 加密/ 的/ 技术/ 保证/ 策略/ 更新/ 路径/ 的/ 安全性/ 以及/ 策略信息/ 的/ 机密性/ 、/ 不/ 可修改性/ 和/ 不可/ 伪造/ 性/ ./ 可信/ 启动/ 技术/ 提供/ 在/ HybridHP/ 对/ 被/ 监控/ 系统实施/ 监控/ 服务/ 之前/ 的/ 安全性/ ,/ 保证/ 被/ 监控/ 系统启动/ 过程/ 中/ 不会/ 对/ HybridHP/ 进行/ 破坏/ ./ 实现/ 了/ Hy/ -/ bridHP/ 的/ 原型/ ,/ 并/ 使用/ Isabelle/ 对/ 其/ 正确性/ 进行/ 了/ 证明/ ./ 同时/ ,/ 本文/ 对/ HybridHP/ 进行/ 了/ 攻击/ 测试/ 和/ 系统/ 性能/ 评估/ ,/ 结果表明/ HybridHP/ 能/ 有效/ 地/ 监控/ 针对/ 内核/ 完整性/ 的/ 攻击/ ,/ 同时/ 对/ 被/ 监控/ 系统/ 的/ 性能/ 影响/ 控制/ 在/ 很小/ 的/ 范围/ ./ 接下来/ 的/ 工作/ 计划/ 将/ HybridHP/ 在/ 多/ 核/ 处理器/ 平台/ 进行/ 改进/ 和/ 实现/ ,/ 使得/ HybridHP/ 运行/ 在/ 独立/ 的/ 处理器/ 核上/ ,/ 加快/ 监控/ 处理/ 的/ 速度/ ./ HybridHP/ 提供/ 了/ 监控/ 内核/ 完整性/ 的/ 轻型/ 方案/ ,/ 如何/ 和/ 各种/ 具体/ 的/ 安全策略/ 模型/ (/ 如/ BLP/ 、/ Lattice/ 和/ Biba/ 完整性/ 模型/ 等/ )/ 结合/ 以及/ 如何/ 构建/ 更加/ 有效/ 的/ 安全策略/ 以/ 保证/ 尽可能/ 多/ 的/ 攻击/ 动作/ 和/ 攻击/ 动作/ 序列/ 被/ 检测/ 也/ 是/ 将来/ 研究/ 的/ 一个/ 重要/ 方向/ ./ ①/ NationalVulnerabilityDatabase/ ./ http/ :/ // // nvd/ ./ nist/ ./ gov/ // Page12/ 致谢/ 本文/ 作者/ 感谢/ 所有/ 本文/ 的/ 匿名/ 审稿/ 者/ ,/ 感谢您/ 们/ 对/ 本文/ 提出/ 宝贵/ 的/ 意见/ !/ 

