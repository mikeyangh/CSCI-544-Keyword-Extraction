Page1/ 云/ 计算/ 中/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 与/ 多/ 目标/ 优化/ 李强/ 1/ )/ ,/ 2/ )/ ,/ 3/ )/ 郝沁汾/ 3/ )/ 肖/ 利民/ 2/ )/ ,/ 3/ )/ 李舟军/ 3/ )/ 1/ )/ (/ 湖南师范大学/ 数学/ 与/ 计算机科学/ 学院/ 高性能/ 计算/ 与/ 随机/ 信息处理/ 省部/ 共建/ 教育部/ 重点/ 实验室/ 长沙/ 410081/ )/ 2/ )/ (/ 北京航空航天大学/ 软件开发/ 环境/ 国家/ 重点/ 实验室/ 北京/ 100191/ )/ 3/ )/ (/ 北京航空航天大学/ 计算机/ 学院/ 北京/ 100191/ )/ 摘要/ 云/ 计算/ 的/ 一个/ 关键/ 需求/ 是/ 其/ 基础设施/ 中/ 大规模/ 虚拟机/ 的/ 放置/ 问题/ ./ 虚拟机/ 和/ 物理/ 结点/ 之间/ 的/ 映射/ 决定/ 了/ 如何/ 将/ 云/ 计算/ 中/ 虚拟化/ 资源分配/ 给/ 多个/ Web/ 应用/ ,/ 对云/ 计算/ 系统/ 的/ 性能/ 、/ 能耗/ 和/ QoS/ 保证/ 有/ 重要/ 影响/ ./ 文中/ 提出/ 了/ 云/ 计算/ 中/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ ,/ 提出/ 了/ 带/ 应用服务/ 级/ 目标/ 约束/ 的/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 遗传算法/ ,/ 用于/ 制定/ 框架/ 中/ 的/ 虚拟机/ 放置/ 策略/ ./ 算法/ 基于/ 长期/ 负载/ 性能/ 模型/ ,/ 采用/ 组/ 方式/ 和/ 三/ 空间/ 分割/ 方法/ 分别/ 对/ 染色体/ 进行/ 编码/ 和/ 译码/ ,/ 根据/ 不同/ 染色体/ 长度/ 的/ 变化/ 设计/ 交叉/ 和/ 变异/ 遗传/ 算子/ ./ 算法/ 对解/ 空间/ 内/ 的/ 多个/ 区域/ 同时/ 搜索/ ,/ 具有/ 群体/ 和/ 自我/ 进化/ 的/ 优势/ ,/ 优化/ 一次/ 就/ 能/ 获得/ 对/ 不同/ 目标/ 的/ 权值/ 运算/ 多次/ 才能/ 得到/ 的/ 最优/ 解/ ./ 实验/ 结果表明/ ,/ 与/ 传统/ 的/ 启发式/ 和/ 单/ 目标/ 优化/ 算法/ 相比/ ,/ 提出/ 的/ 框架/ 及/ 算法/ 使得/ 多个/ 应用/ 的/ 服务/ 级/ 目标/ 的/ 违背/ 率/ 最低/ ,/ 且/ 能/ 有效/ 减少/ 虚拟机/ 迁移/ 次数/ 和/ 物理/ 结点/ 的/ 使用/ 数量/ ./ 关键词/ 云/ 计算/ ;/ 虚拟化/ ;/ 虚拟机/ 放置/ ;/ 自/ 适应/ 资源管理/ ;/ 遗传算法/ 1/ 引言/ 近年来/ ,/ 随着/ 信息系统/ 的/ 日益/ 复杂化/ 和/ 网络应用/ 服务/ 的/ 急速/ 膨胀/ ,/ 迫切要求/ 对/ IT/ 基础架构/ 进行/ 集成/ 和/ 整合/ ,/ 便于/ 集中/ 监控/ 和/ 管理/ ,/ 不断/ 降低/ 总体/ 拥有/ 成本/ ./ 在/ 此/ 背景/ 下/ ,/ 计算机/ 工业界/ 和/ 学术界/ 提出/ 了/ 云/ 计算/ 的/ 概念/ [/ 1/ -/ 2/ ]/ ./ 目前/ ,/ 大多数/ 系统/ 的/ 操作/ 、/ 配置/ 、/ 控制/ 和/ 管理/ 基本/ 停留/ 在/ 人工/ 阶段/ ./ 企业/ IT/ 预算/ 的/ 90/ %/ 以上/ 用于/ 系统/ 的/ 管理/ 和/ 维护/ [/ 3/ ]/ ./ 随着/ 云/ 计算环境/ 下/ 网络应用/ 的/ 大规模/ 部署/ 和/ 复杂性/ 不断/ 增长/ ,/ IT/ 管理人员/ 的/ 工作/ 变得/ 越来越/ 困难/ ./ IT/ 管理人员/ 能力/ 的/ 提高/ 和/ 人数/ 配置/ 的/ 增加/ 都/ 非常/ 有限/ ,/ 使得/ 这一/ 问题/ 更加/ 严重/ ./ 减少/ 云/ 计算/ 系统管理/ 的/ 人工/ 干涉/ ,/ 让/ 系统/ 可以/ 根据/ IT/ 管理人员/ 制定/ 的/ 策略/ 管理系统/ 本身/ ,/ 实现/ 系统/ 的/ 自/ 适应/ 管理/ ,/ 从而/ 维护/ 云/ 计算/ 的/ 高性能/ 和/ 高可用性/ ,/ 这/ 主要/ 面临/ 以下/ 几个/ 方面/ 的/ 问题/ :/ 理解/ 应用/ 的/ 负载/ 、/ 理解/ 不同/ 负载/ 下/ 应用/ 的/ 性能/ 及/ 虚拟化/ 资源/ 之间/ 的/ 关系/ 以及/ 虚拟机/ 放置/ 优化/ ./ 当/ 应用/ 负载/ 的/ 动态变化/ 导致/ 物理/ 结点/ 的/ 资源/ 无法/ 满足/ 所有/ 应用/ 的/ 服务/ 级/ 目标/ 时/ ,/ 可以/ 通过/ 动态/ 迁移/ [/ 4/ ]/ 该/ 结点/ 上/ 的/ 某个/ 或/ 几个/ 虚拟机/ 到/ 其他/ 结点/ 来/ 解决/ ./ 在/ 云/ 基础设施/ 服务/ (/ InfrastructureasaService/ ,/ IaaS/ )/ 中/ ,/ 云/ 基础设施/ 提供者/ 为/ Internet/ 应用/ 提供者/ 分配/ 计算资源/ ,/ 两者之间/ 签定/ 并/ 遵从/ 服务/ 级/ 合约/ (/ ServiceLevelAgreement/ ,/ SLA/ )/ ./ 服务/ 级/ 合约/ 包含/ 一个/ 或/ 多个/ 服务/ 级/ 目标/ ./ 服务/ 级/ 目标/ 指/ Internet/ 应用/ 提供者/ 向/ 网络/ 用户/ 保证/ 的/ 应用/ 性能指标/ ./ 云/ 基础设施/ 提供者/ 应该/ 分配/ 适合/ 的/ 资源/ 以/ 满足/ 应用/ 的/ 服务/ 级/ 目标/ ,/ 提高/ 资源/ 利用率/ 并/ 减少/ 不必要/ 的/ 开销/ ./ “/ 一个/ Web/ 应用/ 的/ 吞吐量/ 不/ 低于/ 每秒/ 100/ 个/ 请求/ ”/ 是/ 服务/ 级/ 目标/ 的/ 一个/ 例子/ ./ 服务/ 级/ 目标/ 包括/ 3/ 个/ 部分/ :/ 应用/ 的/ 性能指标/ 类型/ (/ 例如/ ,/ 吞吐量/ )/ 、/ 界限/ (/ 例如/ ,/ 100/ 个/ 请求/ // s/ )/ 和/ 关系/ 操作符/ (/ 例如/ ,/ 不/ 低于/ )/ ./ 在/ 云/ 计算/ 中/ 需要/ 考虑/ 如何/ 合理/ 地/ 放置/ 虚拟机/ 到/ 相应/ 结点/ ,/ 在/ 满足/ 不同/ 应用/ 的/ 服务/ 级/ 目标/ 的/ 同时/ ,/ 实现/ 资源/ 使用/ 的/ 最优化/ ./ 可/ 将/ 虚拟机/ 放置/ 描述/ 为/ 向量/ 装箱/ 问题/ ./ 装入/ 的/ 物品/ 是/ 正在/ 运行/ 着/ 的/ 虚拟机/ ,/ 虚拟机/ 所用/ 资源/ 是/ 物品/ 的/ 大小/ ,/ 是/ 可变/ 的/ ./ 箱子/ 是/ 物理/ 结点/ ,/ 箱子/ 容量/ 是/ 结点/ 资源/ 的/ 使用/ 阈值/ ./ 资源/ 包括/ CPU/ 、/ 内存/ 、/ 磁盘/ 和/ 网络带宽/ 等/ ./ 资源/ 的/ 种类/ 数即/ 向量/ 装箱/ 问题/ 的/ 维度/ ./ 假设/ 物理/ 结点/ 的/ 数目/ 为/ M/ ,/ 虚拟机/ 的/ 数目/ 为/ N/ ,/ 虚拟机/ 部署/ 到/ 物理/ 结点/ 的/ 解/ 空间/ 为/ MN/ ,/ 是/ 一个/ 类似/ 于/ 装箱/ 问题/ 的/ NP/ -/ hard/ 问题/ [/ 5/ ]/ ./ 需要/ 找到/ 一个/ 近似/ 优化/ 解/ ./ 研究者/ 大多/ 采用/ 启发式/ 方法/ 来/ 进行/ 全局/ 优化/ 搜索/ ,/ 解决/ 虚拟机/ 重新部署/ 下/ 的/ 约束/ 满足/ 问题/ [/ 6/ -/ 8/ ]/ ./ 启发式/ 方法/ 基本/ 是/ 单点/ 搜索/ ,/ 很/ 容易/ 陷入/ 局部/ 最优/ 解/ ./ 此外/ ,/ 云/ 计算/ 中/ 大量/ 应用/ 的/ 负载/ 、/ 虚拟化/ 资源/ 和/ 性能指标/ 的/ 数据/ 需要/ 测量/ 与/ 统计/ ./ 而且/ ,/ 虚拟机/ 迁移/ 会/ 花费/ 一定/ 的/ 时间/ ,/ 并/ 和/ 结点/ 上/ 的/ 其它/ 活动/ 产生/ 相互影响/ ,/ 导致/ 迁移/ 时延/ 的/ 增加/ 和/ 应用/ 性能/ 的/ 下降/ ./ 实现/ 迁移/ 还/ 需要/ 额外/ 的/ 网络/ 存储系统/ 和/ 高速/ 的/ 通信/ 网络/ ./ 如果/ 虚拟机/ 在/ 结点/ 间/ 的/ 迁移/ 次数/ 比较/ 多/ ,/ 将/ 导致/ 无法/ 满足/ 多个/ 应用/ 的/ 服务/ 级/ 目标/ 和/ 云/ 计算/ 系统/ 的/ 不/ 稳定/ ./ 针对/ 上述/ 问题/ ,/ 本文/ 通过/ 构建/ 典型/ Web/ 应用/ 的/ 长期/ 负载/ 性能/ 模型/ ,/ 分析/ 云/ 计算/ 范围/ 下/ 的/ 资源/ 需求/ 分布/ ,/ 提出/ 云/ 计算/ 基础/ 实施/ 中/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ ,/ 将/ 虚拟机/ 放置/ 定义/ 为/ 一个/ 带/ 多个/ 约束/ 的/ 多/ 目标/ 优化/ 问题/ ,/ 提出/ 基于/ NSGA/ -/ II/ 遗传算法/ 的/ 带/ 应用服务/ 级/ 目标/ 约束/ 的/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 算法/ ./ 算法/ 采用/ 组/ 方式/ 和/ 三/ 空间/ 分割/ 方法/ 分别/ 对/ 染色体/ 进行/ 编码/ 和/ 译码/ ,/ 根据/ 不同/ 染色体/ 长度/ 的/ 变化/ 设计/ 交叉/ 和/ 变异/ 遗传/ 算子/ ./ 算法/ 对解/ 空间/ 内/ 的/ 多个/ 区域/ 同时/ 搜索/ ,/ 具有/ 群体/ 和/ 自我/ 进化/ 的/ 优势/ ,/ 优化/ 一次/ 就/ 能/ 获得/ 对/ 不同/ 目标/ 的/ 权值/ 运算/ 多次/ 才能/ 得到/ 的/ 最优/ 解/ ./ 实验/ 结果表明/ ,/ 与/ 传统/ 的/ 启发式/ 和/ 单/ 目标/ 优化/ 算法/ 相比/ ,/ 本文/ 提出/ 的/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ 和/ 算法/ 使得/ 多个/ 应用/ 的/ 服务/ 级/ 目标/ 的/ 违背/ 率/ 最低/ ,/ 且/ 能/ 有效/ 减少/ 虚拟机/ 迁移/ 次数/ 和/ 物理/ 结点/ 的/ 使用/ 数量/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节/ 描述/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ ;/ 第/ 4/ 节/ 给出/ 长期/ 负载/ 性能/ 模型/ ;/ 第/ 5/ 节/ 提出/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 遗传算法/ ;/ 第/ 6/ 节对/ 基于/ 多/ 目标/ 优化/ 遗传算法/ 的/ 自/ 适应/ 管理/ 框架/ 进行/ 实验/ 评测/ ;/ 最后/ 总结/ 全文/ 并/ 对/ 下/ 一步/ 工作/ 进行/ 展望/ ./ 2/ 相关/ 工作/ 在/ 云/ 计算/ 基础设施/ 中/ ,/ 如何/ 合理/ 地/ 确定/ 虚拟机/ 到/ 结点/ 的/ 映射/ 是/ 一个/ 装箱/ 问题/ ,/ 即/ 寻找/ 最优/ 的/ 将/ 虚拟机/ 分配/ 到/ 结点/ 的/ 方案/ ,/ 从而/ 使/ 每个/ 结点/ 中/ 虚拟机/ 的/ 使用/ 资源/ 之/ 和/ 不/ 超过/ 结点/ 所/ 能/ 提供/ 的/ 上限/ ,/ 而/ 使/ Page3/ 用/ 的/ 结点/ 数量/ 最少/ ./ 装箱/ 问题/ 属于/ NP/ -/ hard/ 问题/ ,/ 目前/ 还/ 没有/ 多项式/ 最优/ 解/ 算法/ ,/ 一般/ 采用/ 一些/ 启发式/ 算法/ ./ 大多数/ 启发式/ 算法/ 基于/ 贪心/ 方法/ ,/ 并/ 使用/ 一些/ 简单/ 规则/ ,/ 例如/ ,/ 次优/ 配合/ 、/ 优先/ 配合/ 或/ 最佳/ 配合/ 等/ ./ 目前/ ,/ 一般/ 通过/ 改进/ 传统/ 启发式/ 算法/ 来/ 搜索/ 虚拟机/ 优化/ 放置/ 的/ 最优/ 解/ [/ 7/ -/ 10/ ]/ ./ 但是/ 启发式/ 算法/ 基本/ 是/ 单点/ 搜索/ ,/ 很/ 容易/ 陷入/ 局部/ 最优/ 解/ ,/ 局部优化/ 并/ 不/ 总是/ 能/ 获得/ 全局/ 优化/ 解/ ,/ 并且/ 可能/ 完全/ 无法/ 产生/ 任何/ 解/ ./ 装箱/ 问题/ 及其/ 变体/ 作为/ NP/ -/ hard/ 问题/ 得到/ 了/ 大量/ 的/ 研究/ [/ 11/ ]/ ./ 但是/ ,/ 解决/ 向量/ 装箱/ 问题/ 和/ 带/ 约束/ 的/ 向量/ 装箱/ 问题/ 并/ 应用/ 到/ 实际/ 生产/ 当中/ 的/ 工作/ 还/ 比较/ 少/ [/ 12/ ]/ ./ 文献/ [/ 13/ ]/ 从/ 理论/ 上/ 探讨/ 了/ 在/ 集群/ 中/ 部署/ 大规模/ 分布式应用/ 数量/ 最大化/ 的/ 问题/ ,/ 但/ 只/ 考虑/ 了/ CPU/ 一个/ 维度/ ./ 文献/ [/ 14/ ]/ 给出/ 了/ 根据/ 资源/ 需求/ 变化/ 动态/ 地/ 将/ 应用/ 实例/ 部署/ 到/ 服务器/ 的/ 在线/ 算法/ ./ 这些/ 工作/ 没有/ 引入/ 虚拟化/ 技术/ ,/ 是/ 以/ 应用/ 而/ 不是/ 以/ 虚拟机/ 为/ 放置/ 单位/ ./ 基于/ 最低/ 过载/ 负载平衡/ 算法/ ,/ 文献/ [/ 7/ ]/ 提出/ 了/ 一种/ 改进/ 的/ 优先/ 配合/ 降序/ 方法/ 来/ 解决/ 结点/ 装箱/ 问题/ ./ 该/ 方法/ 只/ 涉及/ 负载/ 峰值/ 情况/ 下/ 的/ 结点/ 整合/ ,/ 并且/ 没有/ 考虑/ 物品/ 和/ 箱子/ 不相容/ 的/ 约束/ ./ 以上/ 研究/ 都/ 只/ 考虑/ 与/ 向量/ 装箱/ 问题/ 相关/ 的/ 容量/ 约束/ ,/ 而/ 没有/ 对/ 结点/ 整合/ 过程/ 中/ 存在/ 的/ 不相容/ 约束/ 建模/ ./ 当/ 不能/ 将/ 两个/ 应用/ 同时/ 分配/ 到/ 同一个/ 目标/ 结点/ 时/ ,/ 则/ 发生/ 项/ -/ 项/ 不相容/ 约束/ ./ 当/ 不能/ 将/ 一个/ 已/ 运行/ 的/ 应用/ 迁移/ 到/ 某个/ 指定/ 的/ 目标/ 结点/ 时/ ,/ 则/ 发生/ 项/ -/ 箱子/ 不相容/ 约束/ ./ 文献/ [/ 8/ ]/ 提出/ 一个/ 解决/ 带项/ -/ 项和项/ -/ 箱子/ 不相容/ 约束/ 的/ 结点/ 整合/ 问题/ 的/ 两/ 阶段/ 启发式/ 算法/ ./ 在/ 第一阶段/ ,/ 为/ 应用/ 找到/ 满足/ 项/ -/ 项/ 或/ 项/ -/ 箱子/ 不相容/ 约束/ 的/ 集群/ ,/ 假设/ 这样/ 的/ 每个/ 集群/ 容量/ 是/ 无/ 限制/ 的/ ./ 在/ 第二阶段/ ,/ 根据/ 目标/ 结点/ 的/ 实际/ 容量/ ,/ 将/ 上述/ 集群/ 中/ 的/ 应用/ 分配/ 到/ 该/ 结点/ ./ 由于/ 启发式/ 方法/ 容易/ 陷入/ 局部/ 最优/ 而/ 很/ 难/ 获得/ 全局/ 优化/ 解/ ,/ 当/ 大多数/ 应用/ 只/ 出现/ 在/ 一个/ 项/ -/ 箱子/ 不相容/ 约束/ 中/ 时/ ,/ 这种/ 方法/ 性能/ 比较/ 差/ ./ 文献/ [/ 9/ ]/ 给出/ 了/ 一种/ 组/ 基因/ 算法/ 来/ 提高/ 全局/ 搜索/ 能力/ ,/ 从而/ 克服/ 上述/ 不足/ ./ 文献/ [/ 7/ -/ 9/ ]/ 的/ 前提/ 是/ 负载/ 是/ 确定性/ 的/ ,/ 用于/ 构建/ 模型/ 的/ 输入/ 负载/ 都/ 是/ 基于/ 应用/ 的/ 负载/ 峰值/ ,/ 导致/ 大多数/ 时期/ 提供/ 的/ 资源/ 过多/ ./ 文献/ [/ 15/ ]/ 将/ 虚拟化/ 数据中心/ 的/ 结点/ 整合/ 描述/ 为/ 随机/ 装箱/ 优化/ 问题/ 来/ 处理/ 负载/ 的/ 随机性/ ,/ 只/ 考虑/ 了/ CPU/ 资源/ ,/ 没有/ 将/ 内存/ 作为/ 一种/ 约束/ 来/ 处理/ ./ 能耗/ 管理/ 是/ 虚拟化/ 数据中心/ 和/ 云/ 计算/ 的/ 一个/ 研究/ 热点/ ./ 应用/ 动态/ 的/ 虚拟机/ 迁移/ 能力/ 来/ 提高/ 硬件/ 等/ 资源/ 的/ 利用率/ ,/ 降低/ 系统/ 的/ 能源消耗/ ./ 文献/ [/ 16/ -/ 17/ ]/ 将/ 虚拟机/ 动态/ 迁移/ 描述/ 为/ 优化/ 问题/ ,/ 优化/ 目标/ 是/ 能源消耗/ 最小化/ ./ 目前/ ,/ 云/ 计算/ 中/ 虚拟机/ 放置/ 研究/ 工作/ 大多/ 只/ 涉及/ 某一方面/ 的/ 优化/ ,/ 或者/ 是/ 考虑/ 服务/ 级/ 目标/ 的/ 保证/ ,/ 或者/ 是/ 使用/ 结点/ 的/ 数量/ 最少/ ,/ 或者/ 是/ 降低/ 虚拟机/ 迁移/ 代价/ ,/ 或者/ 是/ 减少/ 能源消耗/ 等/ ./ 但是/ 这些/ 目标/ 的/ 优化/ 是/ 相互/ 冲突/ 的/ ./ 为了/ 减少/ 结点/ 的/ 使用/ 数/ ,/ 将/ 虚拟机/ 更/ 紧凑/ 地/ 放置/ 到/ 数量/ 更少/ 的/ 结点/ 上/ ,/ 从而/ 将/ 闲置/ 的/ 结点/ 关闭/ 来/ 节省/ 能耗/ 和/ 管理/ 开销/ ,/ 需要/ 通过/ 次数/ 更/ 多/ 的/ 虚拟机/ 迁移/ 来/ 实现/ ./ 如果/ 是/ 以/ 减少/ 迁移/ 为/ 目标/ ,/ 则/ 可能/ 会/ 增加/ 结点/ 的/ 使用/ 个数/ ./ 有效/ 的/ 策略/ 应该/ 考虑/ 所有/ 这些/ 目标/ 并/ 进行/ 权衡/ 和/ 折衷/ ./ 目前/ 很少/ 工作/ 将/ 服务/ 级/ 目标/ 保证/ 、/ 结点/ 使用/ 数量/ 和/ 虚拟机/ 迁移/ 次数/ 综合/ 进行/ 考虑/ 来/ 实现/ 虚拟机/ 放置/ 的/ 多/ 目标/ 优化/ ./ 文献/ [/ 18/ ]/ 将/ 问题/ 分解成/ 装箱/ 的/ 组合/ 优化/ 问题/ 和/ 多/ 目标/ 优化/ 问题/ 两/ 部分/ ./ 首先/ 采用/ 遗传算法/ 处理/ 虚拟机/ 放置/ 到/ 结点/ 的/ 组合/ 优化/ 问题/ ,/ 然后/ 结合/ 模糊/ 逻辑/ 优化/ 多个/ 目标/ ,/ 包括/ 总体/ 资源/ 浪费/ 、/ 能源消耗/ 和/ 热量/ 消散/ 代价/ 最小化/ ./ 但是/ 没有/ 考虑/ 虚拟机/ 迁移/ 的/ 开销/ ,/ 并且/ 只/ 考虑/ 了/ 静态/ 的/ 虚拟机/ 放置/ ,/ 而/ 没有/ 涉及/ 到/ 基于/ 虚拟机/ 迁移/ 的/ 动态/ 放置/ ./ 目前/ 大部分/ 虚拟机/ 放置/ 优化/ 方法/ 都/ 是/ 将/ 多/ 目标/ 优化/ 问题/ 转化/ 为/ 若干个/ 单/ 目标/ 优化/ 问题/ 分阶段/ 来/ 解决/ ,/ 很少/ 是/ 同时/ 对/ 多个/ 目标/ 进行/ 优化/ 的/ ,/ 大多数/ 时候/ 只能/ 获得/ 局部/ 的/ 而/ 不是/ 全局/ 优化/ 解/ ./ 3/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ 典型/ Web/ 应用服务/ 的/ 负载/ 在/ 大多数/ 时间段/ 呈现/ 很/ 明显/ 的/ 周期性/ 变化/ ,/ 同时/ 也/ 存在/ 着/ 不可/ 预见/ 的/ 短时期/ 的/ 负载/ 高峰/ 变化/ [/ 19/ ]/ ./ 另外/ ,/ 云/ 计算/ 基础设施/ 通常/ 由/ 数以万计/ 的/ 结点/ 组成/ ./ 因此/ ,/ 虚拟化/ 云/ 计算/ 的/ 大规模/ 和/ 复杂性/ 使得/ 建立/ 自/ 适应/ 管理/ 的/ 模型/ 和/ 架构/ 非常/ 困难/ ,/ 需要/ 从/ 不同/ 的/ 时间/ 范围/ 和/ 空间/ 规模/ 分/ 层次/ 进行/ 处理/ ./ 我们/ 在/ 文献/ [/ 20/ ]/ 中/ 对于/ 短期内/ 不可/ 预见/ 的/ 、/ 突发性/ 的/ 负载/ 采取/ 被动/ 方式/ ,/ 提出/ 基于/ 反馈/ 控制/ 的/ 自/ 适应/ 虚拟化/ 资源管理/ 方法/ ,/ 通过/ 反馈/ 控制/ 及时/ 调整/ 单个/ 结点/ 上/ 的/ 虚拟化/ 资源/ ,/ 以/ 快速/ 响应/ 负载/ 变化/ ,/ 满足/ 应用/ 的/ 服务/ 级/ 目标/ ./ 大规模/ 的/ 虚拟机/ 迁移/ 会/ 导致/ 极大/ 的/ 系统/ 开销/ ,/ 并/ 需要/ 花费/ 较长/ 的/ 时间/ 来/ 完成/ 全部/ 的/ 迁移/ ,/ 在/ 整个/ 云/ 计算/ 基础设施/ 规模/ 下/ 频繁/ 地/ 进行/ 虚拟机/ 重/ 放置/ ,/ 实践/ 上/ 很/ 难/ 有/ 好/ 的/ 效果/ ./ 因此/ ,/ 按/ 空间/ 大小/ 和/ 时间/ 长短/ 将/ 虚拟机/ 放置/ 分为/ 两种/ 类型/ :/ 迁移/ 域/ 和/ 全局/ 的/ ./ 我们/ 在/ 文献/ [/ 20/ ]/ 中/ 通过/ 将相/ Page4/ 互/ 距离/ 比较/ 近/ 的/ 一些/ 结点/ 组成/ 一个/ 迁移/ 域/ ,/ 把/ 云/ 计算/ 基础设施/ 划分/ 为/ 多个/ 迁移/ 域/ ,/ 提出/ 一个/ 改进/ 的/ 迁移/ 域/ 最佳/ 配合/ 降序/ 算法/ ,/ 对/ 迁移/ 域/ 内/ 的/ 虚拟机/ 进行/ 重/ 放置/ ./ 本文/ 对于/ 长期/ 的/ 、/ 可/ 预测/ 的/ 、/ 周期性/ 的/ 负载/ 采取/ 主动/ 方式/ ,/ 使用/ 统计/ 和/ 机器/ 学习/ 方法/ 分析/ 大量/ 的/ 负载/ 变化/ 统计数据/ 和/ 系统日志/ ,/ 建立/ 长期/ 负载/ 模式/ 下/ 的/ 性能/ 模型/ ,/ 为/ 实现/ 大规模/ 虚拟机/ 放置/ 的/ 多/ 目标/ 优化/ 提供/ 决策/ 支持/ ,/ 并/ 设计/ 实现/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ ./ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ 如图/ 1/ 所示/ ./ 框架/ 包括/ 4/ 个/ 模块/ ./ 其中/ ,/ 全局/ 监控器/ 模块/ 周期性地/ 接收/ 每个/ 虚拟机/ 上/ 的/ 资源/ 使用/ 监控器/ 发来/ 的/ 虚拟机/ 资源/ 使用/ 情况/ 、/ 每个/ 虚拟机/ 上/ 的/ 性能/ 监控器/ 发来/ 的/ 应图/ 1/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ 放置/ 策略/ 的/ 目的/ 是/ 通过/ 改变/ 全局/ 虚拟机/ 的/ 布局/ 和/ 配置/ 来/ 满足/ 多个/ 应用/ 的/ 服务/ 级/ 目标/ 并/ 优化/ 使用/ 结点/ 的/ 数量/ 和/ 虚拟机/ 迁移/ 次数/ ./ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 需要/ 做出/ 几个/ 决定/ :/ 什么/ 时候/ 、/ 迁移/ 哪些/ 虚拟机/ 及/ 将/ 这些/ 虚拟机/ 迁移/ 到/ 哪个/ 结点/ ./ 什么/ 时候/ 迁移/ 相当于/ 确定/ 结点/ 什么/ 时候/ 过载/ 或/ 低载/ ,/ 从而/ 才能/ 将/ 虚拟机/ 整合/ 以/ 减少/ 结点/ 的/ 使用/ 个数/ ./ 我们/ 在/ 文献/ [/ 20/ ]/ 中/ 给出/ 的/ 虚拟机/ 控制器/ 、/ 结点/ 控制器/ 和/ 迁移/ 域控制器/ 可以/ 被动/ 地/ 调整/ 结点/ 资源/ 和/ 迁移/ 虚拟机/ 来/ 处理/ 短期内/ 突发/ 的/ 负载/ 变化/ ./ 虚拟机/ 控制器/ 中/ 的/ 应用/ 性能/ 与/ 所/ 需/ 资源/ 关系/ 模型/ 刻画/ 了/ 短时期/ 内在/ 虚拟机/ 中/ 满足/ 一定/ 服务/ 级/ 目标/ 时/ 负载/ 和/ 资源/ 之间/ 的/ 关系/ ./ 另一方面/ ,/ 为/ 预测/ 长/ 时期/ 虚拟机/ (/ 结点/ )/ 是否/ 能/ 处理/ 某个/ 特殊/ 的/ 负载/ 而/ 满足/ 服务/ 级/ 目标/ ,/ 基于/ 实验/ 获得/ 的/ 数据/ 集/ ,/ 应用/ 统计/ 和/ 机器/ 学习/ 技术/ 建立/ 准确/ 的/ 系统/ 长期/ 负载/ 性能/ 模型/ ./ 这/ 两种/ 模型/ 可/ 用于/ 量化/ 虚拟机/ 和/ 用/ 性能指标/ 、/ 来自/ 结点/ 控制器/ 的/ 虚拟机/ 迁移/ 请求/ 及/ 每个/ 结点/ 的/ 资源/ 使用/ 和/ 可用/ 情况/ ./ 然后/ 将/ 这些/ 信息/ 发送给/ 策略/ 生成器/ ./ 在/ 每个/ 全局/ 控制/ 循环/ 周期/ (/ 小时/ 或天/ 时间/ 级/ )/ 中/ ,/ 通过/ 模拟/ 的/ 方法/ ,/ 策略/ 生成器/ 分析/ 每个/ 应用/ 的/ 当前/ 和/ 历史数据/ 来/ 预测/ 将来/ 的/ 负载/ 并/ 建立/ 长期/ 负载/ 性能/ 模型/ ./ 通过/ 长期/ 负载/ 性能/ 模型/ 预测/ 结点/ 的/ 资源/ 需求/ 并/ 判断/ 结点/ 是否/ 过载/ 或/ 低载/ 等/ ./ 根据/ 以上/ 预测/ 和/ 判断/ 结果/ ,/ 通过/ 一个多/ 目标/ 优化/ 算法/ 获得/ 全局/ 范围/ 虚拟机/ 放置/ 的/ 最优/ 解/ ,/ 并/ 结合/ 来自/ 结点/ 控制器/ 的/ 迁移/ 请求/ 制定/ 相应/ 的/ 放置/ 策略/ ./ 基于/ 放置/ 策略/ ,/ 迁移/ 规划/ 器/ 模块/ 制定/ 虚拟机/ 部署/ 到/ 结点/ 的/ 配置/ 方案/ 和/ 相应/ 的/ 迁移/ 规划/ ./ 迁移/ 驱动器/ 模块/ 根据/ 迁移/ 规划/ 执行/ 虚拟机/ 迁移/ 并/ 尽可能/ 降低/ 对/ 应用/ 性能/ 的/ 影响/ ./ 结点/ 在/ 不同/ 时间/ 和/ 空间/ 范围/ 的/ 过载/ 或/ 低载/ ./ 本文/ 的/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ 通过/ 主动/ 地/ 调整/ 全体/ 虚拟机/ 的/ 布局/ 来/ 处理/ 长期/ 内/ 可/ 预测/ 的/ 负载/ 变化/ ./ 因此/ ,/ 在/ 每个/ 全局/ 控制/ 循环/ 周期/ 初始/ 决定/ 是否/ 需要/ 进行/ 重/ 放置/ ./ 通过/ 负载/ 预测/ 和/ 长期/ 负载/ 性能/ 模型/ 可以/ 判定/ 哪些/ 结点/ 过载/ 或/ 低载/ ,/ 从而/ 得出/ 需要/ 重/ 放置/ 的/ 规模/ ./ 如果/ 规模/ 较大/ ,/ 超出/ 了/ 迁移/ 域/ 的/ 处理/ 能力/ ,/ 则/ 启动/ 虚拟机/ 放置/ 策略/ 的/ 生成/ ./ 第/ 5/ 节/ 提出/ 的/ 多/ 目标/ 优化/ 算法/ 确定/ 迁移/ 哪些/ 虚拟机/ 到/ 哪些/ 结点/ 上/ ./ 框架/ 的/ 4/ 个/ 基本/ 模块/ 的/ 实现/ 可能/ 无法/ 适合/ 所有/ 的/ Web/ 系统/ ,/ 可以/ 替换/ 其中/ 的/ 每个/ 模块/ 而/ 不/ 影响/ 其它/ 模块/ ,/ 模块/ 间/ 的/ 耦合/ 性/ 比较/ 弱/ ./ 4/ 长期/ 负载/ 性能/ 模型/ 本节/ 对/ Web/ 应用/ 长/ 时期/ 的/ 负载/ 进行/ 分析/ 和/ 预/ Page5/ 测/ ,/ 并/ 建立/ 相应/ 的/ 性能/ 模型/ ,/ 以此/ 预测/ 一个/ 结点/ 是否/ 能/ 处理/ 某个/ 特定/ 的/ 负载/ ,/ 从而/ 不/ 违背/ 应用/ 的/ 服务/ 级/ 目标/ ./ 全局/ 虚拟机/ 放置/ 策略/ 结合/ 负载/ 预测/ 和/ 模型/ 来/ 检测/ 出/ 哪些/ 结点/ 过载/ 或/ 低载/ ,/ 并/ 决定/ 将/ 过载/ 或/ 低载/ 结点/ 上/ 的/ 虚拟机/ 迁移/ 到/ 哪些/ 结点/ 上/ ./ 为/ 建立/ 长期/ 负载/ 性能/ 模型/ ,/ 我们/ 设计/ 了/ 几组/ 实验/ ./ 在/ 实验/ 中/ ,/ 按照/ 一定/ 的/ 时间/ 间隔/ 对/ 应用/ 的/ 请求/ 数/ 进行/ 取样/ ,/ 样值/ 表示/ 这/ 段时间/ 的/ 负载/ 大小/ ./ 通过/ 这种/ 处理过程/ 得到/ 一个/ 负载/ 频率/ 曲线/ ,/ 表示/ 应用/ 请求/ 率/ 的/ 长/ 时期/ 变化/ ./ 为了/ 使/ 全局/ 虚拟机/ 放置/ 策略/ 不/ 对/ 负载/ 中/ 细小/ 的/ 高峰/ 作出/ 响应/ ,/ 对/ 负载/ 频率/ 曲线/ 进行/ 一定/ 的/ 处理/ ./ 这里/ 只/ 考虑/ 负载/ 的/ 周期性/ 部分/ ,/ 所以/ 将/ 负载/ 中/ 无法/ 预见/ 的/ 突发/ 的/ 部分/ 去/ 除掉/ ./ 长期/ 负载/ 性能/ 模型/ 的/ 参考/ 输入/ 采用/ 预测/ 的/ 负载/ ,/ 这样/ 能够/ 通过/ 在/ 结点/ 间/ 迁移/ 虚拟机/ 来/ 直接/ 控制/ 每个/ 结点/ 的/ 负载/ ./ 在/ 实验/ 中/ ,/ 负载/ 输入/ 为/ HTTP/ 请求/ ,/ 类型/ 主要/ 是/ GET/ 和/ POST/ 方法/ ./ 采用/ RUBiS/ [/ 21/ ]/ 作为/ Web/ 服务器/ 处理/ HTTP/ 请求/ ./ 测试程序/ 线性/ 的/ 增长/ 负载/ ,/ 范围/ 从/ 100/ 个/ 请求/ // s/ 到/ 800/ 个/ 请求/ // s/ ./ 服务/ 级/ 目标/ 定为/ 请求/ 响应/ 时间/ 200ms/ ./ 使用/ 几种/ 不同/ 的/ 混合/ GET/ 和/ POST/ 的/ 负载/ :/ 95/ %/ GET/ 和/ 5/ %/ POST/ ,/ 85/ %/ GET/ 和/ 15/ %/ POST/ ,/ 75/ %/ GET/ 和/ 25/ %/ POST/ ./ 这些/ 混合/ 负载/ 类似/ 于/ 在/ EPA/ -/ HTTP/ ①/ 基准/ 测试/ 上/ 使用/ 的/ 负载/ ./ 对/ 每/ 一种/ 混合/ 负载/ ,/ 收集/ 数据/ 集/ D/ =/ {/ (/ w/ ,/ f/ )/ }/ ./ 其中/ ,/ w/ 表示/ 30s/ 时间/ 间隔/ 期间/ 结点/ 上/ 的/ 负载/ 率/ ,/ 即/ 30s/ 内/ 的/ HTTP/ 请求/ 的/ 平均数/ ;/ f/ 表示/ 在/ 相同/ 时间/ 间隔/ 期间/ 响应/ 时间/ 大于/ 200ms/ 的/ 请求/ 部分/ ./ 图/ 2/ 和/ 图/ 3/ 表明/ 了/ 两种/ 混合/ 负载/ 下/ 结点/ 的/ 性能/ 变化/ ./ 为/ 使/ 负载/ 和/ 不/ 满足/ 指定/ 请求/ 响应/ 时间/ 部分/ 的/ 依赖/ 关系/ 具体化/ ,/ 以/ 20/ 请求/ // s/ 的/ 宽度/ 将/ w/ 组成/ 块/ ,/ 针对/ 每个/ 块/ 计算/ f/ 的/ 期望/ 和/ 标准/ 方差/ ./ 如图/ 2/ 和/ 图/ 3/ 所示/ ,/ 横坐标/ 表示/ 负载/ ,/ 即/ 每秒/ 的/ 请求/ 数/ ./ 纵坐标/ 表示/ 请求/ 的/ 响应/ 时间/ ./ 水平/ 虚线/ 段/ 表示/ 指定/ 的/ 服务/ 级/ 目标/ 200ms/ 的/ 请求/ 响应/ 时间/ ./ 对于/ 每/ 一个/ 负载/ ,/ 响应/ 时间/ 的/ 期望/ 用点/ 表示/ ,/ 标准/ 方差/ 用/ 小节/ 线/ 表示/ ./ 95/ %/ GET/ 和/ 5/ %/ POST/ 配置/ 下/ ,/ 当/ 请求/ 在/ 500/ 请求/ // s/ 到/ 600/ 请求/ // s/ 时/ ,/ 性能/ 急剧下降/ ./ 而/ 在/ 85/ %/ GET/ 和/ 15/ %/ POST/ 配置/ 下/ ,/ 当/ 请求/ 在/ 460/ 请求/ // s/ 到/ 550/ 请求/ // s/ 时/ ,/ 性能/ 急剧下降/ ./ 将/ 数据/ 集/ D/ =/ {/ (/ w/ ,/ f/ )/ }/ 作为/ 训练/ 集/ ,/ 采用/ logistic/ 回归/ 生成/ 系统/ 性能/ 的/ 线性/ 分类/ 模型/ ./ 模型/ 使用/ 两个/ 输入/ 特征/ ,/ HTTP/ 的/ GET/ 和/ POST/ 请求/ 率/ ./ 通过/ 将/ 每个/ 负载/ 块/ 的/ 响应/ 时间/ 离散/ 化为/ 高值/ 或/ 低值/ ,/ 获得/ 二分/ 变量/ ./ 高值/ 或/ 低值/ 基于/ 指定/ 的/ 服务/ 级/ 目标/ 的/ 响应/ 时间/ (/ 图/ 2/ 和/ 图/ 3/ 中/ 的/ 水平/ 虚线/ 段/ )/ ./ 图/ 4/ 给出/ 了/ 最终/ 的/ 二分/ 数据/ 集/ 和/ 匹配/ 的/ 线性/ logistic/ 回归/ 模型/ ./ 在/ 图/ 4/ 中/ ,/ 横坐标/ 表示/ GET/ 方法/ 的/ 请求/ 率/ ./ 纵坐标/ 表示/ POST/ 方法/ 的/ 请求/ 率/ ./ 小/ 的/ 实心/ 圆/ 表示/ 结点/ 能/ 处理/ 负载/ ,/ 满足/ 服务/ 级/ 目标/ ./ 大/ 的/ 实心/ 方块/ 表示/ 结点/ 不能/ 处理/ 负载/ ,/ 违背/ 服务/ 级/ 目标/ ./ 3/ 条/ 射线/ 段/ 表示/ 3/ 种/ 不同/ 的/ 混合/ 负载/ ,/ 从右/ 下/ 到/ 左上/ 依次/ 为/ 95/ %/ GET/ 和/ 5/ %/ POST/ ,/ 85/ %/ GET/ 和/ 15/ %/ POST/ ,/ 75/ %/ GET/ 和/ 25/ %/ POST/ ./ 根据/ 匹配/ 模型/ ,/ 粗/ 斜线/ 段/ 表示/ 可以/ 和/ 不/ 可以/ 接受/ 性能/ 之间/ 的/ 分界线/ ./ 在/ 不/ 可以/ 接受/ 性能/ 的/ 区域/ 内/ ,/ 应用/ 所在/ 的/ 结点/ 过载/ ,/ 无法/ 保证/ 应图/ 295/ %/ GET/ 和/ 5/ %/ POST/ 类型/ 负载/ 下/ 的/ 性能指标/ 图/ 385/ %/ GET/ 和/ 15/ %/ POST/ 类型/ 负载/ 下/ 的/ 性能指标/ ①/ EPA/ -/ HTTP/ -/ adayofHTTPlogsfromEPAWWWserver/ ./ Page6/ 用/ 的/ 服务/ 级/ 目标/ ./ 以此/ 可以/ 预判/ 需要/ 对/ 哪些/ 虚拟机/ 进行/ 迁移/ ./ 长期/ 负载/ 性能/ 模型/ 可以/ 预测/ 一个/ 结点/ 的/ 负载/ 变化/ 以及/ 处理/ 特定/ 负载/ 的/ 能力/ ./ 为/ 全局/ 控制/ 循环/ 中/ 虚拟机/ 放置/ 策略/ 的/ 制定/ 提供/ 支持/ ./ 5/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 遗传算法/ 5.1/ 多/ 目标/ 虚拟机/ 放置/ 问题/ 的/ 描述/ 多/ 目标/ 虚拟机/ 放置/ 问题/ 是/ 个/ 组合/ 优化/ 问题/ ,/ 同时/ 也/ 是/ 个/ 多/ 目标/ 优化/ 问题/ ./ 可/ 将/ 虚拟机/ 放置/ 问题/ 看/ 作为/ 多维/ 装箱/ 问题/ ./ 每个/ 物理/ 结点/ 的/ 可用/ 资源/ (/ 箱子/ )/ 是/ 一个/ d/ 维/ 向量/ ,/ 每/ 一维/ 表示/ 某种/ 资源/ (/ 如/ CPU/ 、/ 内存/ 、/ 磁盘/ 和/ 网络带宽/ 等/ )/ ./ 每个/ 虚拟机/ 的/ 资源/ (/ 物品/ )/ 也/ 是/ 一个/ d/ 维/ 向量/ ./ 目标/ 是/ 将/ 多个/ 虚拟机/ (/ 物品/ )/ 放入/ 多个/ 物理/ 结点/ (/ 箱子/ )/ ,/ 并/ 使得/ 物理/ 结点/ 的/ 个数/ 最少/ 及/ 虚拟机/ 迁移/ 的/ 次数/ (/ 物品/ 移动/ 的/ 次数/ )/ 最少/ ./ 多/ 目标/ 虚拟机/ 放置/ 问题/ 的/ 描述/ 如下/ :/ 目标/ :/ min/ ∑/ jmin/ ∑/ i/ 约束/ :/ 如果/ yj/ =/ 1/ ,/ 则/ 使用/ 了/ 物理/ 结点/ j/ ./ 如果/ mi/ =/ 1/ ,/ 则/ 迁移/ 了/ 虚拟机/ i/ ./ 假设/ 多层/ Web/ 应用/ 的/ 一层/ (/ 例如/ ,/ 表现/ 层/ 、/ 逻辑/ 层/ 、/ 数据/ 层/ )/ 封装/ 在/ 一个/ 虚拟机/ 中/ ./ 如果/ xpip/ 中/ 的/ 某/ 一层/ 所在/ 的/ 虚拟机/ i/ 放置/ 在/ 物理/ 结点/ j/ 上/ ./ 应用/ p/ 的/ 某/ 一层/ 所在/ 的/ 虚拟机/ i/ 只能/ 放置/ 在/ 某图/ 5/ 基于/ 组/ 编码方法/ 的/ 虚拟机/ 放置/ 个/ 物理/ 结点/ j/ 上/ ./ ∑/ p/ ∑/ i/ 多个/ 虚拟机/ 放置/ 在/ 某个/ 物理/ 结点/ j/ 时/ ,/ 虚拟机/ 资源/ 不能/ 超过/ 物理/ 结点/ j/ 的/ 资源/ 容量/ ./ rCPUpi/ 分别/ 表示/ 应用/ p/ 中/ 的/ 虚拟机/ i/ 使用/ 的/ CPU/ 、/ 内/ rI/ // O/ 存/ 和/ I/ // O/ 资源/ ./ cCPU/ 的/ CPU/ 、/ 内存/ 和/ I/ // O/ 资源/ 容量/ ./ 满足/ 每/ 一个/ 应用/ 的/ 服务/ 级/ 目标/ ./ PMp/ 表示/ 应用/ p/ 的/ 性能指标/ ,/ SLOp/ 表示/ 应用/ p/ 的/ 服务/ 级/ 目标/ ./ 在/ 每个/ 全局/ 控制/ 循环/ 周期/ 中/ ,/ 使用/ 第/ 4/ 节/ 的/ 长期/ 负载/ 性能/ 模型/ 预测/ 一个/ 结点/ 的/ 负载/ 变化/ 以及/ 结点/ 处理/ 特定/ 负载/ 的/ 能力/ ,/ 判断/ 结点/ 是否/ 能/ 满足/ 约束/ (/ 6/ )/ ./ 虚拟机/ 放置/ 的/ 优化/ 目标/ 是/ 在/ 保证/ 多个/ 应用/ 的/ 服务/ 级/ 目标/ 的/ 情况/ 下/ ,/ 使/ 物理/ 结点/ 的/ 使用/ 数量/ 和/ 虚拟机/ 迁移/ 次数/ 最小/ ./ 5.2/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 遗传算法/ 设计/ 与/ 实现/ 理论/ 上/ 组合/ 优化/ 问题/ 的/ 最优/ 解/ 可以/ 通过/ 简单/ 枚举/ 得到/ ,/ 但/ 实际上/ 一般/ 无法/ 实现/ ./ 尤其/ 对于/ 规模/ 巨大/ 的/ 实际/ 问题/ 来说/ ,/ 可行/ 解/ 的/ 数量/ 可能/ 特别/ 大/ ./ 如何/ 有效/ 处理/ 组合/ 爆炸/ 是/ 解决问题/ 的/ 关键/ 之一/ ./ 一种/ 重要/ 思路/ 就是/ 采用/ 遗传算法/ ./ 下面/ 详细描述/ 所/ 提出/ 的/ 虚拟机/ 多/ 目标/ 优化/ 遗传算法/ 的/ 设计/ 步骤/ 和/ 具体/ 的/ 处理过程/ ./ 编码/ 编码/ 的/ 选择/ 是/ 影响/ 遗传算法/ 搜索/ 效果/ 和/ 效率/ 的/ 重要/ 因素/ ./ 编码/ 实现/ 从/ 问题/ 的/ 解到/ 染色体/ 的/ 映射/ ./ 在/ 这里/ ,/ 染色体/ 为/ 虚拟机/ 放置/ 到/ 物理/ 结点/ 的/ 解/ 的/ 编码/ ./ 装箱/ 问题/ 有/ 3/ 种/ 遗传/ 编码方法/ :/ (/ 1/ )/ 基于/ 箱子/ 的/ 表示/ ;/ (/ 2/ )/ 基于/ 物品/ 的/ 表示/ ;/ (/ 3/ )/ 基于/ 组/ 的/ 表示/ ./ 由于/ 装箱/ 问题/ 的/ 目标/ 函数/ 依赖于/ 物品/ 组/ ,/ 而前/ 两种/ 编码方法/ 是/ 面向/ 单个/ 物品/ 的/ ,/ 都/ 具有/ 很多/ 缺点/ ./ 文献/ [/ 22/ ]/ 提出/ 了/ 一种/ 基于/ 组/ 的/ 编码方法/ ,/ 图/ 5/ 给出/ 了/ 该/ 方法/ 的/ Page7/ 一个/ 例子/ ./ 12/ 个/ 虚拟机/ 被/ 分为/ 4/ 个组/ ,/ 相对/ 应/ 的/ 染色体/ 有/ 4/ 个/ 基因/ ,/ 每个/ 基因/ 包含/ 一组/ 虚拟机/ ,/ 基因/ 既/ 表示/ 物品/ 又/ 表示/ 箱子/ ./ 这种/ 编码/ 的/ 关键在于/ 遗传/ 算子/ 对于/ 染色体/ 的/ 组/ 部分/ 进行/ 操作/ ,/ 其/ 物品/ 部分/ 仅/ 用于/ 判定/ 由/ 哪些/ 虚拟机/ 形成/ 该组/ ./ 由于/ 物理/ 结点/ 可以/ 放置/ 的/ 虚拟机/ 数目/ 不同/ ,/ 相同/ 的/ 多个/ 虚拟机/ 可能/ 放置/ 到/ 个数/ 不同/ 的/ 物理/ 结点/ 上/ ,/ 因此/ 遗传/ 算子/ 要/ 处理/ 不同/ 长度/ 的/ 染色体/ ./ 如图/ 5/ 所示/ ,/ 染色体/ CADB/ 和/ 染色体/ EAD/ 长度/ 不同/ ./ 译码/ 基于/ 组/ 的/ 编码/ 得到/ 的/ 染色体/ 字符串/ 是/ 解/ 的/ 基因型/ 表示/ ,/ 需要/ 将/ 其/ 简单/ 、/ 快速/ 地/ 转化/ 为/ 表现型/ (/ 即/ 虚拟机/ 在/ 结点/ 中/ 的/ 空间布局/ )/ ,/ 这是/ 能否/ 有效/ 应用/ 遗传算法/ 的/ 关键/ ./ 译码/ 采用/ 文献/ [/ 23/ ]/ 提出/ 的/ 空间/ 分解/ 方法/ ./ 在/ 装箱/ 的/ 过程/ 中/ ,/ 采用/ 三/ 空间/ 的/ 分割/ 方法/ ./ 这里/ 假设/ 资源类型/ 只有/ 3/ 种/ ./ 如图/ 6/ 所示/ ,/ 当/ 一个/ 虚拟机/ 放入/ 一个/ 物理/ 结点/ 时/ ,/ 将/ 其/ 放置/ 在/ 当前/ 放置/ 空间/ 的/ 左下角/ ,/ 并/ 将/ 放入/ 的/ 虚拟机/ 编号/ 从/ 染色体/ 字符串/ 中/ 删除/ ./ 这样/ ,/ 除了/ 放入/ 虚拟机/ 占用/ 的/ 空间/ 外/ ,/ 该/ 物理/ 结点/ 被/ 分割/ 成/ 3/ 个/ 空间/ ,/ 即/ 左/ 空间/ 、/ 上/ 空间/ 和/ 右/ 空间/ ./ 依次/ 将/ 3/ 个/ 空间/ 作为/ 当前/ 空间/ ,/ 重复/ 上述/ 分解/ 过程/ ,/ 直至/ 物理/ 结点/ 没有/ 可/ 使用/ 的/ 空间/ 或/ 没有/ 待/ 放置/ 虚拟机/ 满足要求/ 时/ 停止/ ./ 这样/ ,/ 染色体/ 字符串/ 就/ 对应/ 为/ 空间布局/ 图/ ,/ 并/ 克服/ 了/ 空间/ 干涉/ 约束/ ,/ 对/ 字符串/ 进行/ 选择/ 、/ 交叉/ 和/ 变异/ 等/ 算子/ 操作/ 就是/ 改变/ 虚拟机/ 在/ 物理/ 结点/ 上/ 的/ 放置/ 位置/ ,/ 从而/ 产生/ 不同/ 的/ 空间布局/ 图/ (/ 即/ 不同/ 的/ 解/ )/ ./ 采用/ 三叉/ 树/ 数据结构/ 表示/ 布局/ 空间/ ./ 当前/ 布局/ 空间/ 为根/ 结点/ ,/ 分割/ 后/ 的/ 剩余/ 3/ 个/ 空间/ 为根/ 结点/ 的/ 左/ 、/ 中/ 、/ 右子/ 结点/ ./ 文献/ [/ 23/ ]/ 表明/ 该/ 空间/ 分解/ 方法/ 能/ 有效/ 处理/ 多/ 目标/ 及/ 多/ 约束/ 的/ 问题/ ./ 初始/ 染色体/ 种群/ 的/ 生成/ 首先/ 随机/ 地/ 生成/ S/ 个/ 虚拟机/ 请求/ 放置/ 的/ 序列/ ,/ 接着/ 对/ 每/ 一个/ 虚拟机/ 请求/ 放置/ 序列/ ,/ 应用/ 基于/ 优先/ 配合/ 启发式/ 的/ 染色体/ 中将/ 虚拟机/ 放置/ 到/ 物理/ 结点/ 算法/ ,/ 将/ 多个/ 虚拟机/ 放置/ 到/ 多个/ 物理/ 结点/ 上/ ,/ 得到/ S/ 个/ 不同/ 的/ 虚拟机/ 放置/ 方案/ (/ S/ 个/ 染色体/ )/ ,/ 从而/ 构成/ 初始/ 种群/ ./ 在/ 优先/ 配合/ 启发式/ 算法/ 中/ ,/ 第/ 1/ 个/ 虚拟机/ 放入/ 第/ 1/ 个/ 物理/ 结点/ ,/ 然后/ 是/ 根据/ 下标/ 上升/ 的/ 顺序/ 放入/ 第/ 2/ ,/ …/ ,/ n/ 个/ 虚拟机/ ,/ 如果/ 当前/ 物理/ 结点/ 的/ 资源/ 足够/ ,/ 则/ 每个/ 虚拟机/ 放入/ 当前/ 物理/ 结点/ ,/ 否则/ 放入/ 下/ 一个/ 新/ 的/ 物理/ 结点/ ./ 其/ 时间/ 复杂度/ 为/ O/ (/ nlogn/ )/ ./ 下面/ 详细描述/ 染色体/ 中将/ 虚拟机/ 放置/ 到/ 物理/ 结点/ 算法/ ./ 1/ ./ 按照/ 虚拟机/ 请求/ 放置/ 序列/ 的/ 顺序/ 逐个/ 选出/ 虚拟机/ ./ 找出/ 与/ 所选/ 虚拟机/ 属于/ 同一个/ 应用/ 的/ 其它/ 层/ 的/ 虚拟机/ ./ 然后/ 按/ 下述/ 步骤/ 查找/ 能/ 将/ 这些/ 虚拟机/ 分配/ 到/ 其/ 上/ 的/ 物理/ 结点/ ./ 若/ 虚拟机/ 请求/ 放置/ 序列/ 为空/ ,/ 则/ 停止/ ./ 2/ ./ 在/ 已/ 使用/ 的/ 物理/ 结点/ 集合/ 中/ 选取/ 最小/ 下/ 标的/ 物理/ 结点/ ./ 若/ 所有/ 已/ 使用/ 的/ 物理/ 结点/ 已选/ 完/ ,/ 则/ 从未/ 使用/ 的/ 物理/ 结点/ 集合/ 中/ 选取/ 最小/ 下/ 标的/ 物理/ 结点/ ./ 若/ 所有/ 物理/ 结点/ 都/ 选完/ ,/ 则/ 返回/ 步/ 1/ ./ 初始化/ 时/ ,/ 已/ 使用/ 的/ 物理/ 结点/ 集合/ 为空/ ,/ 未/ 使用/ 的/ 物理/ 结点/ 集合/ 包括/ 全部/ 的/ 可用/ 物理/ 结点/ ./ 3/ ./ 检查/ 是否/ 满足/ 多/ 目标/ 虚拟机/ 放置/ 问题/ 的/ 约束/ (/ 1/ )/ 、/ (/ 2/ )/ 、/ (/ 3/ )/ 和/ (/ 4/ )/ ,/ 若/ 满足/ ,/ 继续/ ;/ 否则/ ,/ 返回/ 步/ 2.4/ ./ 检查/ 在/ 选出/ 的/ 物理/ 结点/ 上/ 部署/ 的/ 应用/ 的/ 服务/ 级/ 目标/ 是否/ 满足/ ./ 检查/ 是否/ 满足/ 多/ 目标/ 虚拟机/ 放置/ 问题/ 的/ 约束/ (/ 5/ )/ 和/ (/ 6/ )/ ,/ 若/ 满足/ ,/ 则/ 将/ 虚拟机/ 放置/ 到/ 选出/ 的/ 物理/ 结点/ ,/ 并/ 从/ 虚拟机/ 请求/ 放置/ 序列/ 中/ 删除/ 该/ 虚拟机/ ,/ 返回/ 步/ 1/ ;/ 否则/ ,/ 返回/ 步/ 2/ ./ 适应度/ 基于/ 经典/ 的/ 第二代/ 进化/ 多/ 目标/ 优化/ 算法/ —/ —/ —/ NSGA/ -/ II/ 算法/ [/ 24/ ]/ 中/ 的/ 方法/ ,/ 首先/ 采用/ 快速/ 非/ 支配/ 排序/ 确定/ 种群/ 中/ 每/ 一个/ 个体/ 的/ 非/ 支配/ 等级/ ,/ 然后/ 通过/ 局部/ 拥挤/ 距离/ 算法/ 对/ 其/ 进行/ 密度估计/ ,/ 确定/ 个体/ 的/ 局部/ 拥挤/ 距离/ ./ 选择/ 采用/ 2/ -/ 约束/ 竞赛/ 选择/ 法/ ./ 在/ 该/ 选择/ 方法/ 中/ ,/ 从/ 当前/ 种群/ 中/ 随机/ 地/ 挑选/ 两个/ 个体/ ,/ 然后/ 将/ 适应/ 值/ 最大/ 的/ 个体/ (/ 最好/ 的/ 个体/ )/ 选做父/ 个体/ ./ 重复/ 执行/ 这个/ 过程/ ,/ 直到/ 个体/ 数目/ 达到/ 预定/ 的/ 种群/ 规模/ ./ 选出/ 的/ 父/ 个体/ 作为/ 下一代/ 种群/ ./ 两个/ 个体/ 的/ 比较/ 方法/ 采用/ NSGA/ -/ II/ 引入/ 的/ 拥挤/ 比较/ 算子/ ./ 交叉/ 虚拟机/ 放置/ 到/ 物理/ 结点/ 的/ 问题/ 中/ ,/ 基于/ 组/ 的/ 表示/ 包括/ 两个/ 部分/ :/ 物理/ 结点/ 和/ 虚拟机/ ./ 用/ 组来/ 表示/ 染色体/ 的/ 基因/ ./ 组/ 包含/ 的/ 虚拟机/ 个数/ 不是/ 固定/ 的/ ,/ 所以/ 交叉/ 可能/ 需要/ 处理/ 长度/ 可变/ 的/ 染色体/ ./ 交叉/ 的/ 步骤/ 如下/ ./ 叉点/ ;/ 1/ ./ 对/ 参与/ 交叉/ 的/ 两个/ 父/ 个体/ 随机/ 地/ 选定/ 交叉/ 部分/ 和/ 交/ 2/ ./ 将/ 第/ 1/ 个父/ 个体/ 交叉/ 部分/ 的/ 内容/ 插入/ 到/ 第/ 2/ 个/ 父个/ Page8/ 体/ 的/ 交叉点/ 位置/ 之前/ ./ 交叉/ 是/ 对/ 染色体/ 的/ 虚拟/ 机组/ 进行/ 操作/ ,/ 即/ 从/ 第/ 1/ 个父/ 个体/ 插入/ 一个/ 虚拟/ 机组/ 到/ 第/ 2/ 个父/ 个体/ 中/ ;/ 3/ ./ 在/ 上/ 一步/ 得到/ 的/ 第/ 2/ 个父/ 个体/ 中/ ,/ 某些/ 虚拟机/ 可能/ 会/ 出现/ 两次/ ,/ 删除/ 所有/ 重复/ 出现/ 的/ 虚拟机/ 所在/ 的/ 物理/ 结点/ ;/ 4/ ./ 在/ 上/ 一步/ 的/ 删除/ 过程/ 中/ ,/ 可能/ 会/ 删除/ 一些/ 虚拟机/ ,/ 从图/ 7/ 交叉/ 过程/ 变异/ 装箱/ 问题/ 的/ 变异/ 必须/ 是/ 对/ 组而/ 不是/ 物品/ (/ 虚拟机/ )/ 进行/ 操作/ ./ 对父/ 个体/ 随机/ 选择/ 一个/ 虚拟/ 机组/ ,/ 然后/ 将/ 其/ 删除/ ./ 采用/ 上述/ 的/ 染色体/ 中将/ 虚拟机/ 放置/ 到/ 物理/ 结点/ 算法/ 重新/ 将/ 被/ 删除/ 的/ 虚拟机/ 们/ 插入/ 到/ 物理/ 结点/ ,/ 得到/ 子/ 个体/ ./ 评估/ 染色体/ 采用/ 物理/ 结点/ 的/ 使用/ 个数/ 来/ 评估/ 染色体/ ,/ 从前/ 一个/ 染色体/ 变迁/ 到/ 下/ 一个/ 染色体/ 的/ 虚拟机/ 迁移/ 次数/ 也/ 用来/ 评估/ 染色体/ ./ 虚拟机/ 迁移/ 过程/ 中/ 的/ 约束/ 虚拟机/ 放置/ 方案/ 可能/ 有/ 多个/ 解/ ,/ 需要/ 找到/ 优化/ 解/ ./ 采用/ 上述/ 优化/ 算法/ 搜索/ 优化/ 解/ ,/ 其中/ 的/ 一个/ 目标/ 是/ 迁移/ 代价/ 最小/ ,/ 即/ 从前/ 一个/ 放置/ 方案/ 迁移/ 到/ 下/ 一个/ 放置/ 方案/ 时/ ,/ 要求/ 涉及/ 到/ 的/ 虚拟机/ 迁移/ 的/ 次数/ 最少/ ./ 遗传算法/ 的/ 种群/ 并/ 不是/ 表示/ 一个/ 放置/ 方案/ ,/ 而是/ 随机/ 生成/ 的/ 下/ 一个/ 放置/ 方案/ 的/ 多个/ 解/ ./ 以此/ 为/ 基础/ ,/ 通过/ 种群/ 的/ 不断/ 进化/ ,/ 最终/ 找到/ 满足/ 多个/ 目标/ 的/ 优化/ 解/ ./ 此外/ ,/ 还要/ 考虑/ 从前/ 一个/ 放置/ 方案/ 到/ 下/ 一个/ 放置/ 方案/ 过程/ 中/ 所/ 碰到/ 的/ 两种/ 迁移/ 约束/ 问题/ ./ 采用/ 有向图/ 来/ 表示/ 虚拟机/ 的/ 迁移/ ./ 有向图/ 的/ 一条/ 有/ 向/ 边/ 代表/ 一次/ 虚拟机/ 的/ 迁移/ ,/ 边尾/ 表示/ 迁移/ 的/ 开始/ ,/ 边首/ 表示/ 迁移/ 结束/ ./ 有/ 向/ 边/ 指定/ 需要/ 迁移/ 的/ 虚拟机/ 及其/ 所/ 需/ 的/ 资源/ ./ 有向图/ 的/ 结点/ 代表/ 物理/ 结点/ 及其/ 剩余/ 的/ 资源/ ,/ 并且/ 描述/ 物理/ 结点/ 上/ 部署/ 的/ 虚拟机/ 和/ 虚拟机/ 使用/ 的/ 资源/ ./ 而/ 在/ 染色体/ 中/ 不会/ 出现/ 这些/ 虚拟机/ ,/ 采用/ 上述/ 的/ 染色体/ 中将/ 虚拟机/ 放置/ 到/ 物理/ 结点/ 算法/ 重新/ 将/ 虚拟机/ 插入/ 到/ 物理/ 结点/ ,/ 得到/ 第/ 1/ 个子/ 个体/ ,/ 如图/ 7/ 所示/ ;/ 5/ ./ 互换/ 两个/ 父/ 个体/ ,/ 重新/ 执行/ 步/ 2/ 到步/ 4/ 生成/ 第/ 2/ 个子/ 个体/ ./ 如图/ 8/ 所示/ ,/ 如果/ 将/ 虚拟机/ VM1/ 从/ 物理/ 结点/ A/ 迁移/ 到/ 物理/ 结点/ B/ ,/ 将/ 虚拟机/ VM3/ 从/ 物理/ 结点/ B/ 迁移/ 到/ 物理/ 结点/ C/ ,/ 使得/ 物理/ 结点/ A/ 上/ 没有/ 运行/ 的/ 虚拟机/ ,/ 可以/ 关闭/ 物理/ 结点/ A/ ,/ 从而/ 将/ 原来/ 3/ 个/ 物理/ 结点/ 上/ 的/ 多个/ 虚拟机/ 整合/ 到/ 两个/ 物理/ 结点/ 上/ ,/ 节省/ 了/ 一个/ 物理/ 结点/ A/ ./ 但是/ ,/ 当/ VM3/ 还/ 在/ 物理/ 结点/ B/ 上时/ ,/ 由于/ 物理/ 结点/ B/ 上/ 的/ 资源/ 无法/ 满足/ VM1/ 的/ 需求/ ,/ 因此/ 两次/ 迁移/ 不/ 能够/ 并行执行/ ,/ 只能/ 在/ VM3/ 从/ 物理/ 结点/ B/ 迁移/ 到/ 物理/ 结点/ C/ 后/ ,/ VM1/ 才能/ 从/ 物理/ 结点/ A/ 迁移/ 到/ 物理/ 结点/ B/ ./ 将/ 这种/ 约束/ 称之为/ 顺序/ 约束/ ./ 如图/ 9/ (/ a/ )/ 所示/ ,/ 由于/ CPU/ 的/ 约束/ ,/ VM1/ 只有/ Page9/ 在/ VM2/ 从/ 物理/ 结点/ B/ 迁移/ 到/ 物理/ 结点/ A/ 之后/ ,/ 才能/ 从/ 从/ 物理/ 结点/ A/ 迁移/ 到/ 物理/ 结点/ B/ ./ 同时/ ,/ 由于/ CPU/ 的/ 约束/ ,/ VM2/ 只有/ 在/ VM1/ 从/ 物理/ 结点/ A/ 迁移/ 到/ 物理/ 结点/ B/ 之后/ ,/ 才能/ 从/ 从/ 物理/ 结点/ B/ 迁移/ 到/ 物理/ 结点/ A/ ./ 这样/ 就/ 形成/ 了/ 迁移/ 死锁/ ./ 将/ 这种/ 约束/ 称之为/ 死锁/ 约束/ ./ 引入/ 一个/ 额外/ 的/ 物理/ 结点/ ,/ 临时/ 放置/ 一图/ 9/ 迁移/ 死锁/ 及/ 处理/ 顺序/ 迁移/ 和/ 死锁/ 迁移/ 是/ 在/ 从前/ 一个/ 放置/ 方案/ 到/ 下/ 一个/ 放置/ 方案/ 过程/ 中/ 出现/ 的/ ,/ 因此/ 需要/ 进行/ 处理/ ,/ 以/ 提高/ 整体/ 的/ 迁移/ 效率/ ./ 6/ 实验/ 分析/ 本/ 节/ 通过/ 实验/ 和/ 分析/ 实验/ 结果表明/ 提出/ 的/ 框架/ 和/ 算法/ 能/ 合理/ 地/ 确定/ 虚拟机/ 放置/ 策略/ ,/ 并/ 基于/ 策略/ 迁移/ 虚拟机/ ,/ 具有/ 一定/ 的/ 可行性/ 和/ 准确性/ ./ 使用/ 一组/ 模拟实验/ 集对/ 传统/ 的/ 最佳/ 配合/ 启发式/ 装箱/ 算法/ ,/ 单/ 目标/ 遗传算法/ 和/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 遗传算法/ 进行/ 评测/ ,/ 比较/ 它们/ 的/ 性能/ 优劣/ ./ 模拟/ 采用/ 从/ 测试/ 实验/ 获得/ 的/ 建模/ 参数/ ,/ 使得/ 结果/ 能/ 准确/ 捕获/ 真实/ 系统/ 的/ 行为/ ./ 实验/ 平台/ 包括/ 26/ 个/ 物理/ 结点/ ,/ 每个/ 结点/ 装备/ 两个/ 处理器/ (/ dualIntelXeon3/ ./ 0GHz/ )/ ,/ 4GB/ 内存/ ,/ 2MBL2Cache/ ,/ 两块/ 7200/ 转/ 250GB/ 的/ SCSI/ 磁盘/ ,/ 一块/ IntelPro1000G/ 网卡/ ./ 通过/ 一台/ 千兆/ 以太网交换机/ 连接/ 所有/ 结点/ ./ 4/ 个/ 结点/ 作为/ 客户端/ 向/ 虚拟机/ 发出/ 服务/ 请求/ ,/ 产生/ 负载/ ./ 两个/ 结点/ 作为/ 文件/ 服务器/ ,/ 提供/ 基于/ NFS/ 的/ 虚拟机/ 磁盘镜像/ ./ 为/ 减少/ 对/ 实验/ 结点/ 的/ 影响/ ,/ 使用/ 一台/ 专用/ 的/ 结点/ 执行/ 算法/ ,/ 结点/ 的/ 配置/ 和/ 实验/ 结点/ 一样/ ./ 个/ 或/ 多个/ 虚拟机/ ,/ 打破/ 迁移/ 死锁/ ./ 如图/ 9/ (/ b/ )/ 所示/ ,/ 通过/ 将/ VM1/ 迁移/ 到/ 引入/ 的/ 物理/ 结点/ C/ ,/ 然后/ 将/ VM2/ 迁移/ 到/ 物理/ 结点/ A/ ,/ 再/ 将/ VM1/ 从/ 物理/ 结点/ C/ 迁移/ 到/ 物理/ 结点/ B/ ./ 这些/ 迁移/ 步骤/ 只能/ 顺序/ 执行/ ,/ 从而/ 形成/ 顺序/ 约束/ ./ 使用/ RUBiS/ [/ 21/ ]/ 作为/ Web/ 应用服务/ 的/ 基准/ 测试/ ./ RUBiS/ 的/ 每/ 一层/ 运行/ 在/ 一个/ 虚拟机/ 中/ ,/ 运行/ 一个/ RUBiS/ 实例/ 需要/ 3/ 个/ 虚拟机/ ./ 所有/ 虚拟机/ 的/ 虚拟/ CPU/ 个数/ 为/ 1/ ./ 运行/ EPA/ -/ HTTP/ 基准/ 测试/ 为/ RUBiS/ 应用/ 生成/ 负载/ ,/ 并/ 收集/ 实验/ 结果/ 数据/ ./ EPA/ -/ HTTP/ 的/ 跟踪/ 日志/ 包含/ 了/ 位于/ ResearchTrianglePark/ ,/ NC/ 的/ EPA/ (/ 美国/ 环保署/ )/ WWWserver/ 的/ 超过/ 一整天/ 的/ 所有/ HTTP/ 请求/ ./ 在/ EPA/ -/ HTTP/ 中/ ,/ 负载/ 输入/ 为/ HTTP/ 请求/ ,/ 类型/ 主要/ 是/ GET/ 和/ POST/ 方法/ ./ 重放/ 这些/ 跟踪/ 日志/ 多次/ 来/ 构建/ 一个/ 50d/ 实验/ 的/ 模型/ ./ 为了/ 节省时间/ ,/ 通过/ 将/ 24h/ 跟踪/ 日志/ 凝缩/ 为/ 24min/ ,/ 并/ 同时/ 维持/ 跟踪/ 日志/ 形状/ 和/ 其它/ 属性/ ,/ 从而/ 将/ 50d/ 的/ 实验/ 凝缩/ 为/ 一个/ 20h/ 的/ 实验/ ./ 实验/ 初始/ 时/ ,/ 使用/ 17/ 个/ RUBiS/ 实例/ ,/ 产生/ 总共/ 51/ 个/ 虚拟机/ ,/ 放置/ 在/ 19/ 个/ 结点/ 上/ ./ 分别/ 使用/ 传统/ 的/ 最佳/ 配合/ 启发式/ 算法/ (/ Best/ -/ FitHeuristic/ ,/ BFH/ )/ 、/ 两个/ 单/ 目标/ 遗传算法/ 和/ 提出/ 的/ 多/ 目标/ 优化/ 遗传算法/ 进行/ 实验/ ./ BFH/ -/ CPU/ 、/ BFH/ -/ MEM/ 和/ BFH/ -/ DISK/ ./ 最佳/ 配合/ 启发式/ 算法/ :/ 第/ 1/ 个/ 虚拟机/ 放入/ 第/ 1/ 个/ 物理/ 结点/ ,/ 然后/ 将/ 当前/ 虚拟机/ 放入/ 具有/ 最小/ 剩余/ 资源量/ 的/ 可行/ 物理/ 结点/ 中/ ,/ 其/ 时间/ 复杂度/ 为/ O/ (/ nlogn/ )/ ./ BFH/ -/ CPU/ 、/ BFH/ -/ MEM/ 和/ BFH/ -/ DISK/ 分别/ 表示/ 在/ 最佳/ 配/ Page10/ 合/ 启发式/ 算法/ 中/ 的/ 资源/ 为/ CPU/ 、/ 内存/ 和/ 磁盘/ ./ SGA/ -/ N/ 和/ SGA/ -/ V/ ./ 两个/ 单/ 目标/ 遗传算法/ 使用/ 组/ 基因/ 算法/ [/ 9/ ]/ 来/ 搜索/ 解/ 空间/ ,/ 分别/ 根据/ 所用/ 物理/ 结点/ 的/ 个数/ (/ SGA/ -/ N/ )/ 和/ 虚拟机/ 迁移/ 次数/ (/ SGA/ -/ V/ )/ 来/ 设置/ 适应度/ 的/ 值/ ./ MOGA/ ./ 提出/ 的/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 遗传算法/ ./ 使用/ Matlab/ 中/ GlobalOptimizationToolbox/ ①/ 实现/ 遗传算法/ ./ 采用/ Python2/ ./ 6/ 编写/ 控制/ 脚本/ ./ 单/ 目标/ 遗传算法/ 和/ 多/ 目标/ 遗传算法/ 的/ 参数设置/ 中/ ,/ 交叉/ 概率/ 和/ 变异/ 概率/ 分别/ 设为/ 0.7/ 和/ 0.05/ ,/ 种群/ 个数/ 和/ 遗传/ 代数/ 分别/ 为/ 22/ 和/ 14/ ./ 大部分/ 虚拟机/ 迁移/ 的/ 时间/ 范围/ 和/ 空间/ 规模/ 是/ 在/ 迁移/ 域/ 内/ ./ 有/ 几次/ 是/ 主动/ 地/ 调整/ 虚拟机/ 的/ 全局/ 放置/ 来/ 处理/ 长期/ 内/ 可/ 预测/ 的/ 负载/ 变化/ ./ 选取/ 其中/ 的/ 一次/ 虚拟机/ 重/ 放置/ 进行/ 分析/ ./ 图/ 10/ 显示/ 了/ 应用/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 遗传算法/ (/ MOGA/ )/ 时/ 优化/ 解/ 的/ 进化/ 过程/ ./ 初始/ 种群/ 规模/ 为/ 22/ ,/ MOGA/ 代数/ 分别/ 为/ 8/ 、/ 14/ 、/ 20/ 和/ 25/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随着/ MOGA/ 迭代/ 代数/ 的/ 增加/ ,/ 目标/ 函数/ 值/ (/ 物理/ 结点/ 使用/ 个数/ 和/ 虚拟机/ 迁移/ 次数/ )/ 的/ 个数/ 逐渐/ 减少/ ,/ 向着/ 最优/ 解/ 的/ 方向/ 移动/ ./ 在/ 14/ 代前/ 目标/ 函数/ 值/ 变化/ 较大/ ,/ 而/ 之后/ 则/ 变化/ 不/ 大/ ,/ 即使/ 到/ 25/ 代/ 还/ 有所改善/ ./ 另外/ ,/ 非/ 支配/ 解/ 的/ 个数/ 在/ 逐渐/ 增加/ ,/ 在/ 14/ 代时/ 群体/ 共有/ 22/ 个/ 个体/ ,/ 其中/ 非/ 支配/ 解/ 的/ 个数/ 有/ 17/ 个/ ,/ 解/ 已经/ 基本/ 趋于稳定/ ./ 在/ 19/ 个/ 物理/ 结点/ 上/ 放置/ 51/ 个/ 虚拟机/ ,/ 搜索/ 空间/ 包括/ 1951/ (/ 1.646014469/ E/ +/ 65/ )/ 个/ 可能/ 解/ ,/ 而/ MOGA/ 仅/ 通过/ 22/ ×/ 14/ =/ 308/ 次/ 循环/ 执行/ 遗传算法/ 就/ 能/ 得到/ Pareto/ 前沿/ 面/ ./ 这里/ ,/ MOGA/ 的/ 时间/ 复杂度/ 为/ O/ (/ mN2/ )/ ./ 图/ 10/ 基于/ MOGA/ 的/ 多/ 目标/ 优化/ 的/ 进化/ 过程/ 图/ 11/ ~/ 13/ 描述/ 了/ 相同/ 实验/ 配置/ 下/ 5/ 个/ 不同/ 放置/ 策略/ 的/ 评测/ 结果/ ./ 所有/ 策略/ 都/ 使用/ 相同/ 的/ 虚拟机/ 控制器/ 、/ 结点/ 控制器/ 和/ 迁移/ 域控制器/ ,/ 不同之处/ 在于/ 使用/ 的/ 放置/ 策略/ ./ BFH/ 和/ SGA/ -/ N/ 由于/ 试图/ 将/ 虚拟机/ 整合/ 到/ 更/ 少/ 的/ 物理/ 结点/ 上/ ,/ 导致/ 虚拟机/ 迁移/ 次数/ 更/ 多/ 和/ 服务/ 级/ 目标/ 违背/ 率高/ ./ 与/ BFH/ 相比/ ,/ SGA/ -/ N/ 能/ 更/ 有效/ 地对解/ 空间/ 进行/ 全局/ 搜索/ ,/ 因此/ 可以/ 使用/ 更少/ 的/ 物理/ 结点/ 来/ 满足/ 多个/ 应用/ 的/ 服务/ 级/ 目标/ ,/ 但是/ 服务/ 级/ 目标/ 违背/ 率/ 相对/ 高些/ 且/ 虚拟机/ 迁移/ 次数/ 相对/ 要少些/ ./ SGA/ -/ V/ 不/ 考虑/ 所用/ 物理/ 结点/ 的/ 多少/ ,/ 为/ 满足/ 多个/ 应用/ 的/ 服务/ 级/ 目标/ ,/ 尽可能/ 地/ 将/ 虚拟机/ 平均/ 分布/ 到/ 所有/ 可用/ 的/ 物理/ 结点/ 上/ ,/ 使得/ 每个/ 物理/ 结点/ 的/ 资源/ 使用率/ 和/ 服务/ 级/ 目标/ 违背/ 率/ 都/ 比较/ 低/ ,/ 而/ 使用/ 的/ 物理/ 结点/ 比较/ 多/ ./ MOGA/ 满足/ 服务/ 级/ 目标/ 约束条件/ 下/ ,/ 搜索/ 每/ 一个/ 目标/ 的/ 优化/ 解/ ,/ 在/ 多个/ 相互/ 冲突/ 的/ 目标/ 间/ 实现/ 最优/ 权衡/ 和/ 折衷/ ,/ 服务/ 级/ 目标/ 违背/ 率/ 最低/ ,/ 且/ 产生/ 相对/ 比较/ 少/ 的/ 虚拟机/ 迁移/ 次数/ 和/ 物理/ 结点/ 使用/ 数量/ ./ 图/ 12/ 不同/ 放置/ 策略/ 下/ 的/ 服务/ 级/ 目标/ 违背/ 率/ ①/ Matlab/ ./ GlobalOptimizationToolbox/ ./ www/ ./ mathworks/ ./ Page11/ 图/ 14BFH/ -/ CPU/ 放置/ 策略/ 下/ 3/ 个/ 物理/ 结点/ 的/ CPU/ 使用率/ 为了/ 更/ 细致/ 地/ 分析/ 比较/ 不同/ 放置/ 策略/ ,/ 选取/ 30min/ (/ 凝缩/ 的/ )/ 时间/ 范围/ 内/ ,/ 3/ 个/ 物理/ 结点/ 在/ BFH/ -/ CPU/ 和/ MOGA/ 下/ 的/ CPU/ 使用率/ ./ 如图/ 14/ 所示/ ,/ BFH/ -/ CPU/ 放置/ 策略/ 没有/ 搜索/ 到/ 足够/ 的/ CPU/ 资源/ 来/ 满足/ 变化/ 负载/ 的/ 资源/ 需求/ ,/ 使得/ 物理/ 结点/ 的/ CPU/ 使用率/ 超过/ 100/ %/ (/ 如/ 物理/ 结点/ 2/ 和/ 3/ )/ ,/ 违背/ 了/ 应用/ 的/ 服务/ 级/ 目标/ ,/ 从而/ 引起/ 该/ 物理/ 结点/ 上/ 的/ 虚拟机/ 迁移/ ./ MOGA/ 放置/ 策略/ 能/ 通过/ 全局/ 搜索/ 找到/ 资源分配/ 的/ 最优/ 解/ ,/ 为/ 负载/ 提供/ 合适/ 的/ 可用/ 资源/ ./ 如图/ 15/ 所示/ ,/ 所有/ 3/ 个/ 结点/ 的/ CPU/ 都/ 没有/ 过载/ ,/ 减少/ 了/ 服务/ 级/ 目标/ 的/ 违背/ 率/ ,/ 避免/ 了/ 虚拟机/ 的/ 迁移/ ./ 图/ 15MOGA/ 放置/ 策略/ 下/ 3/ 个/ 物理/ 结点/ 的/ CPU/ 使用率/ 7/ 结束语/ 本文/ 提出/ 虚拟机/ 放置/ 的/ 自/ 适应/ 管理/ 框架/ ./ 研究/ 了/ 用/ 遗传算法/ 对/ 全局/ 虚拟机/ 放置/ 问题/ 进行/ 求解/ ./ 在/ 云/ 计算/ 基础设施/ 中/ ,/ 虚拟机/ 放置/ 通常/ 需要/ 在/ 满足/ 一定/ 约束/ 的/ 条件/ 下/ 考虑/ 多个/ 目标/ 的/ 实现/ ./ 随着/ 基础设施/ 规模/ 的/ 进一步/ 增大/ ,/ 减少/ 虚拟机/ 迁移/ 次数/ 变得/ 越来越/ 重要/ ./ 本章/ 将/ 云/ 计算/ 中/ 的/ 虚拟机/ 放置/ 描述/ 为/ 一个多/ 目标/ 优化/ 问题/ ./ 阐述/ 了/ 解决/ 多/ 目标/ 优化/ 问题/ 的/ 方法/ ./ 综合/ 考虑/ 虚拟机/ 放置/ 映射/ 中/ 结点/ 使用/ 数量/ 和/ 虚拟机/ 迁移/ 次数/ 两个/ 目标/ ,/ 基于/ 经典/ 的/ NSGA/ -/ II/ 算法/ 提出/ 了/ 虚拟机/ 放置/ 多/ 目标/ 优化/ 遗传算法/ ./ 该/ 算法/ 利用/ 遗传算法/ 的/ 群体/ 和/ 自我/ 进化/ 的/ 优势/ ,/ 相对/ 于/ 传统/ 的/ 启发式/ 和/ 单/ 目标/ 优化/ 算法/ ,/ 在/ 保证/ 多个/ 应用服务/ 级/ 目标/ 的/ 情况/ 下/ ,/ 能/ 有效/ 地/ 减少/ 结点/ 使用/ 数量/ 和/ 虚拟机/ 迁移/ 次数/ ./ 目前/ ,/ 能耗/ 问题/ [/ 25/ ]/ 是/ 云/ 计算/ 中/ 的/ 重点/ 研究/ 方向/ 之一/ ./ 下/ 一步/ 工作/ 将/ 探索/ 如何/ 将/ 资源/ 控制/ 和/ 能耗/ 控制/ 结合/ 起来/ ,/ 实现/ 这些/ 目标/ 的/ 最优化/ ./ 

