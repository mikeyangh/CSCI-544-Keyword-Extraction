Page1/ 数据流/ 上/ 动态/ 轮廓/ 查询处理/ 技术/ 的/ 研究/ 白梅/ 信俊昌王/ 国仁王/ 习特/ (/ 东北大学/ 信息科学/ 与/ 工程学院/ 沈阳/ 110004/ )/ 摘要/ 轮廓/ 查询/ (/ Skyline/ )/ 是/ 一种/ 典型/ 的/ 多/ 目标/ 优化/ 问题/ ./ 动态/ 轮廓/ 查询/ (/ DynamicSkyline/ )/ 是/ 轮廓/ 查询/ 的/ 一个/ 重要/ 变种/ ,/ 其/ 目标/ 是/ 对于/ 一个/ 给定/ 的/ 查询/ 点/ q/ ,/ 返回/ 在/ 各/ 维度/ 上/ 最/ 接近/ q/ 的/ 所有/ 点/ ./ 对比/ 轮廓/ 查询/ ,/ 动态/ 轮廓/ 查询/ 根据/ 查询/ 点/ q/ 的/ 位置/ 变动/ ,/ 可以/ 更加/ 灵活/ 地/ 返回/ 查询/ 结果/ ./ 文中/ 关注/ 数据流/ 上/ 动态/ 轮廓/ 查询处理/ ,/ 此/ 问题/ 在/ 多/ 目标/ 决策/ 方面/ 具有/ 非常/ 重要/ 的/ 应用/ ./ 为/ 有效/ 地/ 解决/ 该/ 问题/ ,/ 首先/ 提出/ 了/ 一种/ 组合式/ 索引/ 结构/ 来/ 管理/ 数据流/ 上/ 的/ 点/ ,/ 该/ 索引/ 结构/ 包括/ 两个/ 部分/ :/ 对/ 整体/ 数据/ 使用/ 分/ 层次/ 划分/ 结构/ 进行/ 维护/ ;/ 对子/ 划分/ 内部/ 数据/ 采用/ 倒排/ 索引/ 结构/ 进行/ 维护/ ./ 该/ 组合式/ 索引/ 结构/ 具有/ 更新快/ 、/ 过滤/ 性能/ 高/ 、/ 适合/ 任意/ 数据分布/ 等/ 优点/ ,/ 可以/ 提高/ 动态/ 轮廓/ 的/ 查询处理/ 效率/ ./ 然后/ ,/ 基于/ 该/ 组合式/ 索引/ 结构/ ,/ 提出/ 了/ 基础/ 的/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 算法/ (/ BasicDynamicSkylineQueryoverDataStream/ ,/ BDS2/ )/ ./ 通过/ 维护/ 少量/ 的/ 数据/ ,/ BDS2/ 可以/ 快速/ 地/ 计算/ 出/ 数据流/ 上/ 的/ 动态/ 轮廓/ 集合/ ./ 然而/ BDS2/ 在/ 处理/ 个别/ 更新/ 时/ ,/ 会/ 有/ 较大/ 的/ 时间延迟/ ,/ 为了/ 更/ 稳定/ 地/ 计算/ 数据流/ 上/ 的/ 动态/ 轮廓/ ,/ 避免/ 更新/ 某些/ 点时/ 计算/ 量/ 急剧/ 增加/ ,/ 进一步/ 提出/ 了/ 改进/ 的/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 算法/ (/ ImprovedDynamicSkylineQueryoverDataStream/ ,/ IDS2/ )/ ./ 最后/ ,/ 通过/ 一系列/ 的/ 实验/ 验证/ 了/ 文中/ 所/ 提出/ 算法/ 的/ 有效性/ ./ 关键词/ 数据流/ ;/ 动态/ 轮廓/ ;/ 组合式/ 索引/ ;/ 分/ 层次/ 划分/ ;/ 倒排/ 索引/ 1/ 引言/ 轮廓/ 查询/ [/ 1/ -/ 2/ ]/ 作为/ 多/ 目标/ 决策/ (/ Multi/ -/ CriteriaDecision/ -/ Making/ ,/ MCDM/ )/ 手段/ ,/ 可以/ 通过/ 偏好/ 函数/ 帮助/ 用户/ 从/ 大量/ 信息/ 中/ 提取/ 有用/ 信息/ ,/ 在/ 许多/ 实际/ 应用/ 中/ 都/ 发挥/ 着/ 非常/ 重要/ 的/ 作用/ ./ 轮廓/ 集合/ 是/ 指/ 所有/ 不/ 被/ “/ 支配/ ”/ 的/ 点/ 的/ 集合/ ./ 具体/ 地/ ,/ 给定/ 两个/ 点/ p1/ 和/ p2/ ,/ p1/ 支配/ p2/ 指/ 的/ 是/ :/ 在/ 所有/ 维度/ 上/ ,/ p1/ 都/ 不/ 比/ p2/ 差/ ;/ 至少/ 在/ 一个/ 维度/ 上/ ,/ p1/ 要/ 比/ p2/ 好/ ./ 通常/ 情况/ 下/ ,/ 值越/ 小/ 被/ 认为/ 越/ “/ 好/ ”/ ./ 如图/ 1/ 所示/ ,/ 一共/ 有/ 15/ 条/ 股票/ 信息/ 记录/ {/ s1/ ,/ s2/ ,/ …/ ,/ s15/ }/ ./ 每/ 一条/ 股票/ 信息/ 包括/ 2/ 个/ 维度/ 信息/ :/ 股票/ 收益率/ 和/ 成交量/ ./ 每/ 一维/ 的/ 值/ 都/ 被/ 映射/ 到/ [/ 0/ ,/ 1/ ]/ 的/ 区间/ 内/ ,/ 并/ 以/ “/ 小/ ”/ 值为/ 优/ ./ 例如/ 图中/ s4/ 在/ 每/ 一维/ 都/ 比/ s5/ 小/ ,/ 那么/ 说明/ s4/ 的/ 收益率/ 和/ 成交量/ 比/ s5/ 要/ 好/ ,/ 则/ s4/ 支配/ s5/ ./ 图中/ 的/ 轮廓/ 集合/ 就是/ {/ s3/ ,/ s4/ }/ ,/ 其他/ 股票/ 记录/ 都/ 可以/ 被/ s3/ 或/ s4/ 支配/ ./ 目前/ ,/ 轮廓/ 查询/ 已/ 取得/ 了/ 大量/ 研究成果/ ,/ 但是/ 对/ 各个/ 维度/ 值/ 的/ “/ 好坏/ ”/ 定义/ 却/ 有/ 一定/ 的/ 局限/ ./ 针对/ 这一/ 问题/ ,/ 文献/ [/ 3/ ]/ 提出/ 了/ 动态/ 轮廓/ 的/ 概念/ ./ 对比/ 轮廓/ 查询/ ,/ 动态/ 轮廓/ 查询/ 具有/ 多样性/ 及/ 灵活性/ 等/ 特征/ ./ 通过/ 给出/ 一个/ 关注点/ q/ 时/ ,/ 动态/ 轮廓/ 查询/ [/ 4/ -/ 5/ ]/ 可以/ 返回/ 在/ 各个/ 维度/ 上/ 与/ q/ 最/ 接近/ 的/ 点/ ,/ 即/ 所有/ 潜在/ 的/ 兴趣/ 点/ ./ 在/ 不同/ 的/ 应用/ 场景/ 中/ ,/ 可以/ 通过/ 调整/ q/ 点/ 的/ 位置/ ,/ 从而/ 取得/ 不同/ 的/ 查询/ 结果/ ./ 因此/ ,/ 动态/ 轮廓/ 查询/ 的/ 应用/ 更为/ 广泛/ 和/ 灵活/ ./ 动态/ 轮廓/ 集合/ 是/ 所有/ 不/ 被/ “/ 关于/ q/ 动态/ 支配/ ”/ 的/ 点/ 的/ 集合/ ./ 具体/ 地/ ,/ 给定/ 2/ 个点/ p1/ 和/ p2/ ,/ p1/ 关于/ q/ 动态/ 支配/ p2/ (/ 记作/ p1/ / qp2/ )/ 指/ 的/ 是/ :/ 在/ 所有/ 的/ 维度/ 上/ ,/ p1/ 距离/ q/ 都/ 不/ 比/ p2/ 距离/ q/ 远/ ;/ 至少/ 在/ 一个/ 维度/ 上/ ,/ p1/ 距离/ q/ 比/ p2/ 距离/ q/ 近/ ./ 如图/ 1/ 所示/ ,/ s2/ 关于/ q/ 动态/ 支配/ s6/ ./ 图中/ q/ 的/ 动态/ 轮廓/ 集合/ 是/ {/ s1/ ,/ s2/ }/ ./ 本文/ 主要/ 关注/ 的/ 是/ 数据流/ 上/ 动态/ 轮廓/ 查询处理/ ,/ 它/ 在/ 现实生活/ 中是/ 一个/ 非常/ 有/ 意义/ 的/ 问题/ ./ 例如/ ,/ 股票交易/ 市场/ 每天/ 可以/ 产生/ 大量/ 的/ 数据/ ,/ 而/ 人们/ 在/ 分析/ 的/ 时候/ ,/ 通常/ 只/ 关注/ 最近/ 的/ 股票/ 信息/ ./ 针对/ 这一/ 数据/ 特征/ ,/ 人们/ 可以/ 采用/ 滑动/ 窗口/ 模型/ 来/ 管理/ 这些/ 流/ 数据/ ./ 当/ 已知/ 某/ 只/ 股票/ q/ 具有/ 良好/ 的/ 投资/ 价值/ 时/ (/ 风险/ 低/ ,/ 回报/ 好/ )/ ,/ 通过/ 进行/ 关于/ q/ 的/ 动态/ 轮廓/ 查询/ ,/ 找到/ 所有/ 与/ q/ 相似/ 的/ 股票/ ./ 对/ 这些/ 股票/ 进行/ 分析/ ,/ 可以/ 确定/ 什么样/ 的/ 股票/ 能/ 有/ 良好/ 的/ 投资/ 价值/ ,/ 并/ 帮助/ 人们/ 进行/ 股票投资/ ./ 由此可见/ ,/ 数据流/ 上/ 的/ 动态/ 轮廓/ 查询/ 具有/ 很/ 好/ 的/ 实际/ 应用/ 价值/ ./ 数据流/ 上/ 的/ 动态/ 轮廓/ 查询/ 在/ 各种/ 环境监测/ 上/ 同样/ 具有/ 非常/ 重要/ 的/ 应用/ 价值/ ,/ 包括/ 草原/ 环境监测/ 、/ 森林/ 环境监测/ 、/ 海洋/ 环境监测/ 等等/ ./ 例如/ 森林/ 火灾/ 监控/ 方面/ ,/ 传感器/ 每次/ 传入/ 大量/ 的/ 数据/ 点/ ,/ 但是/ 人们/ 只/ 关注/ 最新/ 一轮/ 的/ 数据/ 点/ 情况/ ,/ 因此/ 可以/ 采用/ 滑动/ 窗口/ 模型/ 来/ 管理/ 这些/ 流/ 数据/ ./ 根据/ 以往/ 的/ 经验/ ,/ 可以/ 得知/ 点/ q/ (/ 温度/ =/ 100/ ,/ 湿度/ =/ 30/ %/ rh/ )/ 所处/ 的/ 环境/ 下/ 容易/ 发生/ 火灾/ ,/ 以/ q/ 为/ 查询/ 点/ 进行/ 数据流/ 上/ 的/ 动态/ 轮廓/ 查询/ ,/ 就/ 可以/ 得到/ 所有/ 潜在/ 的/ 火灾/ 发生/ 点/ ,/ 从而/ 达到/ 森林/ 防火/ 监控/ 的/ 目的/ ./ 根据上述/ 描述/ 可知/ ,/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 具有/ 非常/ 重要/ 的/ 应用/ 价值/ ./ 然而/ ,/ 关于/ 数据流/ 上/ 的/ 动态/ 轮廓/ 查询/ 只有/ 很少/ 的/ 研究/ 工作/ [/ 6/ ]/ ,/ 且/ 存在/ 一定/ 的/ 局限性/ ./ 因此/ ,/ 本文/ 针对/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 提出/ 了/ Page3/ 一种/ 更加/ 高效/ 和/ 全面/ 的/ 解决方案/ ./ 在/ 文献/ [/ 6/ ]/ 中/ ,/ 张丽/ 等/ 人/ 介绍/ 了/ 滑动/ 窗口/ 上/ 基于/ 网格/ 的/ 动态/ 轮廓/ 查询/ 算法/ GBDS/ ,/ 具有/ 一定/ 的/ 局限性/ ./ 首先/ ,/ 由于/ GBDS/ 采用/ 网格/ 结构/ 来/ 管理/ 滑动/ 窗口/ 中/ 的/ 数据/ ./ 只有/ 当/ 数据/ 呈/ 均匀分布/ 时/ ,/ 网格/ 才/ 具有/ 较/ 高/ 的/ 效率/ ./ 然而/ 在/ 实际/ 生活/ 中/ ,/ 流/ 数据/ 可以/ 呈现/ 多种不同/ 分布/ ,/ 如/ 环境/ 检测/ 数据/ 多/ 呈现出/ 聚类/ 分布/ ,/ 股票/ 数据/ 多/ 呈现/ 相关/ 、/ 反/ 相关/ 分布/ [/ 1/ ]/ 等/ ,/ 因此/ ,/ 网格/ 索引/ 可能/ 无法/ 高效/ 的/ 管理/ 这些/ 流/ 数据/ ./ 当/ 网格/ 粒度/ 过大时/ ,/ 会/ 造成/ 某些/ 网格/ 内/ 存储/ 大量/ 的/ 数据/ 元组/ ,/ 从而/ 影响/ 计算/ 效率/ ./ 当/ 网格/ 粒度/ 过细/ 时/ ,/ 会/ 生成/ 大量/ 的/ 空白/ 网格/ ,/ 浪费/ 大量/ 的/ 存储空间/ ./ 针对/ 这一/ 问题/ ,/ 本文/ 提出/ 了/ 一种/ 全新/ 的/ 组合/ 索引/ 结构/ ,/ 以/ 适合/ 不同/ 分布/ 的/ 流/ 数据/ ./ 其次/ ,/ 为了/ 便于/ 剪枝/ ,/ GBDS/ 算法/ 在/ 计算/ 过程/ 中/ 维护/ 了/ 一个/ 影响/ 区域/ (/ 如图/ 1/ 中/ 的/ 阴影/ 区域/ )/ ,/ 落/ 在/ 影响/ 区域/ 中/ 的/ 点/ 不会/ 被/ 任何/ 现有/ 动态/ 轮廓/ 点/ 动态/ 支配/ ./ 这种/ 影响/ 区域/ 在/ 2/ 维/ 数据/ 空间/ 上/ 非常容易/ 维护/ ,/ 但是/ 在/ 3/ 维及/ 3/ 维/ 以上/ 的/ 数据/ 空间/ 中/ ,/ 该/ 影响/ 区域/ 的/ 维护/ 相当于/ 进行/ 集合/ 的/ 并/ 集/ 运算/ [/ 3/ ]/ ./ 假设/ 有/ |/ RS/ |/ 个/ 动态/ 轮廓/ 点时/ ,/ 根据/ 集合/ 并集/ 运算/ 法则/ ,/ 影响/ 区域/ 的/ 维护/ 代价/ 是/ O/ (/ 2/ |/ RS/ |/ )/ ./ 针对/ 该/ 问题/ ,/ 本文/ 给/ 每个/ 数据/ 点/ 设计/ 了/ 一种/ 结构/ ,/ 可以/ 高效/ 地/ 维护/ 数据流/ 上/ 动态/ 轮廓/ ./ 本文/ 设计/ 了/ 一种/ 数据流/ 上/ 的/ 组合式/ 索引/ 结构/ ,/ 并/ 结合/ 数据流/ 上/ 动态/ 轮廓/ 的/ 特性/ ,/ 首先/ 提出/ 了/ 一种/ 基础/ 的/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 算法/ BDS2/ (/ BasicDynamicSkylineQueryoverDataStream/ ,/ BDS2/ )/ ./ 之后/ ,/ 在/ BDS2/ 算法/ 的/ 基础/ 上/ ,/ 通过/ 维护/ 简单/ 的/ 数据结构/ ,/ 提出/ 了/ 改进/ 的/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 算法/ IDS2/ (/ ImprovedDynamicSkylineQueryoverDataStream/ ,/ IDS2/ )/ ./ 归结/ 起来/ ,/ 本文/ 的/ 主要/ 贡献/ 如下/ :/ (/ 1/ )/ 提出/ 了/ 一种/ 组合式/ 索引/ 结构/ ,/ 包括/ 两个/ 部分/ :/ 分/ 层次/ 划分/ 结构/ 和/ 倒排/ 索引/ 结构/ ./ 分/ 层次/ 划分/ 结构/ 把/ 整体/ 数据/ 分割/ 成/ 多个/ 子/ 划分/ 块/ ,/ 并/ 保留/ 了/ 子/ 划分/ 块/ 之间/ 的/ 层次/ 关系/ ,/ 具有/ 3/ 大/ 优势/ :/ ①/ 保留/ 了/ 子/ 划分/ 块/ 的/ 层次/ 关系/ 和/ 位置/ 结构/ ,/ 可以/ 快速/ 地/ 进行/ 空间/ 剪枝/ ;/ ②/ 在/ 任何/ 数据分布/ 下/ ,/ 都/ 保证/ 了/ 每个/ 叶子/ 划分/ 内/ 的/ 数据量/ 是/ 大体/ 均衡/ 的/ ,/ 避免/ 了/ 存储空间/ 的/ 浪费/ ,/ 并且/ 高效/ 地/ 管理/ 了/ 整体/ 数据/ ;/ ③/ 分/ 层次/ 划分/ 结构/ 不会/ 随着/ 维度/ 增加/ 而/ 呈/ 指数/ 级/ 增加/ ,/ 对/ 维度/ 不再/ 敏感/ ./ 倒排/ 索引/ 结构/ 用来/ 管理/ 每个/ 叶子/ 划分/ 内/ 的/ 数据/ ,/ 从而/ 加快/ 元组/ 间/ 的/ 关系/ 判定/ ,/ 快速/ 地/ 计算/ 出/ 最终/ 结果/ ./ 无论是/ 分/ 层次/ 划分/ 结构/ 还是/ 倒排/ 索引/ ,/ 都/ 能够/ 在/ 数据流/ 上/ 进行/ 快速/ 地/ 更新/ ,/ 因此/ ,/ 本文/ 所/ 提出/ 的/ 组合式/ 索引/ 结构/ 具有/ 3/ 大/ 优点/ ,/ 包括/ 更新快/ 、/ 过滤/ 性能/ 高/ 以及/ 适合/ 任何/ 数据分布/ ./ (/ 2/ )/ 基于/ 组合式/ 的/ 索引/ 结构/ ,/ 首先/ 提出/ 了/ 基础/ 的/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 算法/ BDS2/ ,/ 通过/ 空间/ 过滤/ 和/ 倒排/ 索引/ 过滤/ ,/ 快速/ 地/ 完成/ 了/ 动态/ 轮廓/ 的/ 初始化/ 和/ 更新/ ./ 然而/ ,/ BDS2/ 在/ 数据流/ 上/ 处理/ 某些/ 更新/ 时/ ,/ 会/ 引起/ 处理/ 时间/ 的/ 急剧/ 增加/ ./ 为了/ 更加/ 稳定/ 地/ 计算/ 数据流/ 上/ 的/ 动态/ 轮廓/ ,/ 本文/ 提出/ 了/ 改进/ 算法/ IDS2/ ,/ 并/ 给出/ 了/ IDS2/ 算法/ 的/ 初始化/ 和/ 更新/ 处理/ 方法/ ./ IDS2/ 通过/ 对/ 每个/ 数据/ 元组/ 维护/ 简单/ 的/ 数据结构/ ,/ 可以/ 保证/ 在/ 数据流/ 上/ 持续/ 稳定/ 地/ 计算/ 出/ 动态/ 轮廓/ 结果/ ./ (/ 3/ )/ 设计/ 了/ 详细/ 的/ 性能/ 评价/ 实验/ ,/ 实验/ 结果表明/ 本文/ 所/ 提出/ 的/ 算法/ BDS2/ 和/ IDS2/ 都/ 可以/ 有效/ 地/ 处理/ 数据流/ 上/ 的/ 动态/ 轮廓/ 查询/ ,/ 而/ IDS2/ 在/ 稳定性/ 上要/ 远/ 好/ 于/ BDS2/ ./ 本文/ 第/ 2/ 节/ 回顾/ 相关/ 工作/ ;/ 第/ 3/ 节/ 介绍/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 的/ 相关/ 定义/ ;/ 第/ 4/ 节/ 详细描述/ 本文/ 所/ 提出/ 的/ 组合/ 索引/ 结构/ ,/ 基于/ 该/ 索引/ 结构/ ,/ 提出/ 算法/ BDS2/ 和/ IDS2/ ;/ 第/ 5/ 节对/ 算法/ BDS2/ 和/ IDS2/ 进行/ 复杂度/ 分析/ ;/ 第/ 6/ 节/ 给出/ 实验/ 结果/ 与/ 分析/ ;/ 第/ 7/ 节对/ 全文/ 进行/ 总结/ ./ 2/ 相关/ 工作/ 自/ Borzsonyi/ 等/ 人/ [/ 1/ ]/ 在/ 2001/ 年/ 将/ 轮廓/ 查询/ 的/ 概念/ 引入/ 到/ 数据库/ 领域/ 之后/ ,/ 多种/ 轮廓/ 查询/ 算法/ 及其/ 变体/ 查询/ 算法/ [/ 5/ -/ 10/ ]/ 被/ 相继/ 提出/ ./ 接下来/ ,/ 给出/ 轮廓/ 查询/ 的/ 相关/ 工作/ 以及/ 动态/ 轮廓/ 查询/ 的/ 相关/ 工作/ ./ 2.1/ 轮廓/ 查询/ 算法/ BNL/ 和/ D/ &/ C/ 算法/ 最早/ 在/ 文献/ [/ 1/ ]/ 中/ 提出/ ,/ BNL/ 通过/ 扫描/ 全体/ 数据/ 和/ 维护/ 一个/ 候选/ 集/ 集合/ 来/ 计算/ 轮廓/ 集合/ ./ D/ &/ C/ 算法/ 首先/ 把/ 整体/ 数据/ 分割/ 成/ 多个/ 子集/ ,/ 然后/ 合并/ 计算/ 每个/ 子集/ 的/ 子/ 轮廓/ 集合/ ,/ 从而/ 得到/ 最终/ 的/ 轮廓/ 集合/ ./ SFS/ 算法/ [/ 11/ ]/ 首先/ 按/ 单调/ 函数/ 把/ 整体/ 数据/ 进行/ 排序/ ,/ 然后/ 再/ 计算/ 轮廓/ 集合/ ./ 之后/ ,/ 许多/ 学者/ 致力于/ 通过/ 索引/ 结构/ 来/ 提高/ 轮廓/ 查询/ 的/ 效率/ ./ Bitmap/ 成/ 一个/ m/ 位/ 矢量/ ,/ 通过/ 矢量/ 间/ 的/ 计算/ 求/ 出/ 最后/ 的/ 轮廓/ 集合/ ./ 但是/ Bitmap/ 算法/ 不适/ 用于/ 动态/ 数据库/ ./ NN/ [/ 13/ ]/ 算法/ 利用/ 近邻/ 点/ 过滤/ 来/ 求得/ 最后/ 的/ 轮廓/ 集合/ ./ BBS/ 算法/ [/ 3/ ]/ 利用/ R/ -/ tree/ 索引/ 结构/ 管理/ 整体/ 数据/ ,/ 只/ 需要/ 访问/ R/ -/ tree/ 中/ 包含/ 结果/ 点/ 的/ 节点/ ./ ZBtree/ [/ 14/ ]/ 通过/ 利用/ Z/ -/ order/ 索引/ 来/ 进行/ 过滤/ ,/ 从而/ 完成/ 轮廓/ 查询/ 的/ 计算/ ./ 此外/ ,/ 还/ 出现/ 了/ 很多/ 针对/ 特定/ 数据/ 环境/ 的/ 轮廓/ Page4/ 查询/ 算法/ ,/ 如/ P2P/ 网络/ [/ 2/ ]/ 、/ 分布式/ 环境/ [/ 15/ ]/ 和/ 不/ 确定/ 数据/ 环境/ [/ 16/ ]/ 等/ ./ 在/ 数据流/ 环境/ 下/ ,/ 轮廓/ 查询/ 已/ 取得/ 了/ 很多/ 成果/ ./ Lin/ 等/ 人/ [/ 7/ ]/ 首次/ 提出/ 了/ 数据流/ 上/ 的/ 轮廓/ 查询/ 算法/ ./ 该/ 算法/ 利用/ R/ -/ tree/ 索引/ 来/ 管理/ 滑动/ 窗口/ 上/ 的/ 数据/ ,/ 并/ 采用/ 区间/ 树/ (/ intervaltree/ )/ 来/ 维护/ 数据流/ 上/ 的/ 轮廓/ 集合/ ./ 之后/ ,/ Tao/ 等/ 人/ [/ 8/ ]/ 提出/ 了/ 在/ 数据流/ 上/ 轮廓/ 查询/ 的/ 高效/ 算法/ ,/ 通过/ 过滤/ 掉/ 滑动/ 窗口/ 上/ 的/ 冗余/ 元组/ 来/ 提高/ 空间/ 、/ 时间/ 效率/ ./ Morse/ 等/ 人/ [/ 17/ ]/ 提出/ 在/ 数据流/ 上/ 持续/ 维护/ 轮廓/ 集合/ 的/ 算法/ Look/ -/ Out/ ./ Lu/ 等/ 人/ [/ 18/ ]/ 提出/ 双/ 层次/ 数据流/ 上/ 的/ 轮廓/ 查询/ 算法/ ./ 该种/ 双/ 层次/ 数据流/ 设定/ 是/ 一种/ 非典型/ 的/ 数据流/ 环境/ ./ 以上/ 在/ 滑动/ 窗口/ 上/ 的/ 轮廓/ 查询/ 都/ 采用/ R/ -/ tree/ 索引/ 来/ 管理/ ,/ 但是/ R/ -/ tree/ 的/ 更新/ 操作/ 相对/ 较慢/ ,/ 尤其/ 是/ 维度/ 较/ 多/ 的/ 情况/ 下/ ,/ 在/ 滑动/ 窗口/ 上/ 对/ R/ -/ tree/ 的/ 维护/ 将/ 耗费/ 大量/ 时间/ ./ Li/ 等/ 人/ [/ 19/ ]/ 提出/ 用分/ 层次/ 网格/ 来/ 管理/ 滑动/ 窗口/ 上/ 的/ 数据/ ./ 但是/ 关于/ 子/ 网格/ 的/ 粒度/ 选取/ 没有/ 合适/ 的/ 介绍/ ,/ 且/ 网格/ 索引/ 结构/ 对/ 维度/ 十分/ 敏感/ ,/ 会/ 随着/ 维度/ 增加/ 呈/ 指数/ 级/ 增加/ ./ 例如/ 当/ 任意/ 中间/ 网格/ 需要/ 划分/ 时/ ,/ 至少/ 会/ 划分/ 成/ 2d/ 个子/ 网格/ ./ 同时/ ,/ 单纯/ 的/ 分/ 层次/ 网格/ 结构/ 并/ 不能/ 很/ 好地解决/ 数据流/ 上/ 轮廓/ 查询/ 问题/ ,/ 因为/ 子/ 网格/ 内/ 的/ 数据/ 需要/ 逐一/ 处理/ ./ 针对/ 上述情况/ ,/ 本文/ 设计/ 了/ 一种/ 针对/ 维度/ 不/ 敏感/ ,/ 且/ 更新/ 容易/ ,/ 能/ 适用/ 各种/ 数据分布/ 的/ 组合/ 索引/ 结构/ ./ Lee/ 等/ 人/ [/ 20/ ]/ 提出/ 了/ 数据流/ 上/ 的/ 多/ 轮廓/ 查询方法/ ,/ 在/ 数据流/ 上/ 维护/ 了/ 各个/ 子/ 空间/ 上/ 的/ 轮廓/ 集合/ ./ 目前/ 还/ 出现/ 了/ 各种/ 轮廓/ 变体/ 查询/ ,/ 如子/ 空间/ 轮廓/ [/ 21/ ]/ 、/ Top/ -/ k/ 轮廓/ 查询/ [/ 22/ ]/ 、/ ρ/ -/ 支配/ 轮廓/ [/ 23/ ]/ 、/ 动态/ 轮廓/ 和/ 反/ 轮廓/ [/ 6/ ]/ ./ 2.2/ 动态/ 轮廓/ 查询/ Papadias/ 等/ 人/ [/ 3/ ]/ 提出/ 的/ BBS/ 算法/ ,/ 采用/ R/ -/ tree/ 索引/ 结构/ 快速/ 地/ 计算/ 动态/ 轮廓/ ./ 根据/ R/ -/ tree/ 中/ 节点/ 与/ 查询/ 点/ q/ 的/ 距离/ 进行/ 过滤/ ,/ 从而/ 得到/ 最终/ 的/ 动态/ 轮廓/ 集合/ ./ 然后/ ,/ 他们/ 提出/ 了/ 一种/ 新/ 方法/ 来/ 计算/ 动态/ 轮廓/ ,/ 根据/ 查询/ 点/ q/ 所在/ 的/ 位置/ ,/ 把/ 所有/ 的/ 数据/ 点/ 都/ 映射/ 到/ q/ 的/ 同一个/ 象限/ 后/ ,/ 进行/ 传统/ 的/ 轮廓/ 查询/ ,/ 就/ 可以/ 得到/ 最终/ 动态/ 轮廓/ 结果/ ./ Chen/ 等/ 人/ [/ 24/ ]/ 提出/ 了/ 一种/ 在/ 度量/ 空间/ 内/ 的/ 动态/ 轮廓/ 查询/ 算法/ ./ 给定/ m/ 个/ 查询/ 点/ ,/ 每个/ 数据/ 点到/ 各个/ 查询/ 点/ 的/ 距离/ 是/ 一维/ 的/ 轮廓/ 属性/ ./ 这样/ 每个/ 数据/ 点/ 都/ 可以/ 映射/ 成/ 一个/ m/ 位/ 矢量/ ,/ 对/ 这些/ 矢量/ 进行/ 轮廓/ 查询/ 就是/ 度量/ 空间/ 上/ 的/ 动态/ 轮廓/ 集合/ ./ Chai/ 等/ 人/ [/ 25/ -/ 26/ ]/ 利用/ 动态/ 属性/ ,/ 提出/ 了/ 一种/ 动态/ 轮廓/ 查询/ 的/ 变型/ ,/ 称为/ T/ -/ skyline/ ./ 该/ 变型/ 查询/ 通过/ 指定/ 偏好/ 强度/ ,/ 从而/ 控制/ 了/ 轮廓/ 结果/ ./ 这种/ 查询/ 本质/ 上/ 与/ 动态/ 轮廓/ 类似/ ,/ 对/ 每个/ 属性/ 维度/ 加入/ 了/ 权重/ 来/ 共同/ 考虑/ ./ 以上/ 的/ 研究/ 都/ 是/ 基于/ 静态/ 关系数据库/ 的/ ,/ 并/ 不适/ 用于/ 数据流/ 环境/ ,/ 与/ 本文/ 的/ 研究/ 内容/ 不同/ ./ 与/ 本文/ 研究/ 最/ 相关/ 的/ 文献/ 是/ 由/ Zhang/ 等/ 人/ [/ 6/ ]/ 提出/ 的/ 在/ 滑动/ 窗口/ 上/ 进行/ 动态/ 轮廓/ 查询/ 算法/ GBDS/ ./ 他们/ 采用/ 网格/ 索引/ 来/ 管理/ 滑动/ 窗口/ 中/ 的/ 数据/ ,/ 利用/ 网格/ 和/ 数据/ 点间/ 的/ 动态/ 支配/ 关系/ 进行/ 过滤/ ,/ 并/ 维护/ 一个/ 影响/ 区域/ ./ 当/ 滑动/ 窗口/ 上/ 的/ 数据/ 发生变化/ 时/ ,/ 通过/ 维护/ 查询/ 点/ 的/ 影响/ 区域/ ,/ 来/ 维护/ 最终/ 的/ 动态/ 轮廓/ 集合/ ./ 但是/ ,/ GBDS/ 采用/ 的/ 网格/ 索引/ 结构/ ,/ 适合/ 数据/ 均匀分布/ 时/ 使用/ ./ 当/ 数据分布/ 不/ 均匀/ 时/ ,/ 网格/ 索引/ 的/ 表现/ 并/ 不是/ 很/ 好/ ./ 针对/ 每/ 一个/ 动态/ 轮廓/ 查询/ 点/ ,/ GBDS/ 都/ 需要/ 维护/ 一个/ 影响/ 区域/ ,/ 在/ 3/ 维及/ 3/ 维/ 以上/ 的/ 数据/ 环境/ 下/ ,/ 假设/ 当前/ 动态/ 轮廓/ 集合/ 中/ 的/ 元组/ 数目/ 为/ |/ R/ |/ ,/ 影响/ 区域/ 的/ 维护/ 代价/ 为/ O/ (/ 2/ |/ R/ |/ )/ ./ 为了/ 解决/ 上述/ 问题/ ,/ 本文/ 提出/ 了/ 两种/ 全新/ 的/ 算法/ 来/ 解决/ 滑动/ 窗口/ 上/ 的/ 动态/ 轮廓/ 查询/ 问题/ ./ 通过/ 采用/ 组合式/ 索引/ 结构/ ,/ BDS2/ 和/ IDS2/ 不/ 局限于/ 均匀分布/ 的/ 数据/ ,/ 在/ 所有/ 分布/ 下/ 都/ 能/ 取得/ 好/ 的/ 结果/ ./ 同时/ ,/ 对于/ 每/ 一个/ 动态/ 轮廓/ 查询/ ,/ BDS2/ 和/ IDS2/ 都/ 只/ 需要/ 增量/ 维护/ 一个/ 子集/ ,/ 避免/ 整体/ 数据/ 的/ 重/ 扫描/ ./ IDS2/ 通过/ 维护/ 简单/ 的/ 数据结构/ ,/ 能够/ 更加/ 稳定/ 地/ 计算/ 滑动/ 窗口/ 上/ 的/ 动态/ 轮廓/ ./ 3/ 问题/ 描述/ 本文/ 关注/ 的/ 是/ 数据流/ 上/ 的/ 动态/ 轮廓/ 查询/ 问题/ ,/ 采用/ 滑动/ 窗口/ 来/ 管理/ 数据流/ 上/ 的/ 数据/ ./ 滑动/ 窗口/ 包括/ 基于/ 时间/ (/ time/ -/ based/ )/ 和/ 基于/ 计数/ (/ count/ -/ based/ )/ 的/ 滑动/ 窗口/ ,/ 两种/ 滑动/ 窗口/ 上/ 的/ 算法/ 可以/ 相互/ 转换/ ,/ 本文/ 关注/ 的/ 是/ 基于/ 计数/ 的/ 滑动/ 窗口/ ./ 为了/ 描述/ 方便/ ,/ 表/ 1/ 中/ 给出/ 了/ 本文/ 的/ 符号/ 定义/ ./ 符号/ p1/ ,/ p2p1/ [/ i/ ]/ p/ ./ labelp1/ / qp2DSKY/ (/ q/ ,/ DN/ )/ Page5/ 给定/ d/ 维/ 数据/ 集合/ D/ ,/ 每个/ 数据/ 点/ 可以/ 表示/ 成/ p/ =/ 〈/ p/ [/ 1/ ]/ ,/ p/ [/ 2/ ]/ ,/ …/ ,/ p/ [/ d/ ]/ 〉/ ,/ 且/ 每个/ 维度/ 上/ 的/ 值/ 都/ 以小值/ 为/ 优/ ./ 通过/ 映射函数/ ,/ 可以/ 把/ 每个/ 数据/ 在/ 各/ 维度/ 上/ 的/ 值/ 都/ 转化/ 到/ [/ 0/ ,/ 1/ ]/ 范围/ 内/ ./ 本文/ 关注/ 的/ 是/ 在/ 范围/ [/ 0/ ,/ 1/ ]/ 内/ 的/ 数据/ 的/ 集合/ ./ 定义/ 1/ (/ 动态/ 支配/ )/ ./ 给出/ d/ 维/ 数据/ 集合/ D/ 和/ 查询/ 点/ q/ ,/ p1/ ,/ p2/ ∈/ D/ ,/ p1/ 关于/ q/ 动态/ 支配/ p2/ (/ 记作/ p1/ / qp2/ )/ 需要/ 满足/ 以下/ 两个/ 条件/ :/ (/ 1/ )/ / i/ ∈/ {/ 1/ ,/ 2/ ,/ …/ ,/ d/ }/ ,/ |/ p1/ [/ i/ ]/ -/ q/ [/ i/ ]/ |/ / |/ p2/ [/ i/ ]/ -/ q/ [/ i/ ]/ |/ ;/ (/ 2/ )/ / j/ ∈/ {/ 1/ ,/ 2/ ,/ …/ ,/ d/ }/ ,/ |/ p1/ [/ j/ ]/ -/ q/ [/ j/ ]/ |/ </ |/ p2/ [/ j/ ]/ -/ q/ [/ j/ ]/ |/ ./ 所有/ 不/ 被/ 其他/ 点/ 关于/ q/ 动态/ 支配/ 的/ 点/ 的/ 集合/ 组成/ 了/ q/ 的/ 动态/ 轮廓/ 集合/ ,/ 记作/ DSKY/ (/ q/ ,/ D/ )/ =/ {/ pi/ |/ pi/ ,/ pj/ ∈/ D/ / pj/ / qpi/ }/ ./ 根据/ 动态/ 轮廓/ 的/ 定义/ ,/ 可以/ 得知/ q/ 的/ 动态/ 轮廓/ 查询/ 可以/ 返回/ 与/ q/ 在/ 所有/ 维度/ 上/ 最/ 接近/ 的/ 点/ 的/ 集合/ ./ 在/ 滑动/ 窗口/ 中/ ,/ 数据/ 遵循/ “/ 先进先出/ ”/ 的/ 原则/ ./ 对于/ 进入/ 滑动/ 窗口/ 的/ 数据/ 元组/ p/ ,/ 用/ p/ ./ label/ 来/ 表示/ p/ 到达/ 滑动/ 窗口/ 的/ 次序/ 标签/ ./ 当/ 滑动/ 窗口/ 大小/ 是/ N/ 时/ ,/ 元组/ p/ 在/ 滑动/ 窗口/ 的/ 存活/ 周期/ 是/ [/ p/ ./ label/ ,/ p/ ./ label/ +/ N/ ]/ ./ 滑动/ 窗口/ 中/ 只/ 存储/ 最新/ 到达/ 的/ N/ 的/ 数据/ ,/ 记/ 窗口/ 中/ 维护/ 的/ 数据/ 集合/ 为/ DN/ ./ 每当/ 一个/ 新/ 的/ 数据/ 元组/ pnew/ 插入/ 到/ 滑动/ 窗口/ 中/ ,/ 都/ 会/ 有/ 一个/ 对应/ 的/ 数据/ 元组/ pold/ 失效/ ,/ 从而/ 保证/ 滑动/ 窗口/ 中/ 永远/ 只/ 保留/ 最新/ 的/ N/ 个/ 元组/ ./ 在/ 滑动/ 窗口/ 上/ 进行/ 动态/ 轮廓/ 查询/ ,/ 就是/ 持续/ 监测/ DN/ 的/ 动态/ 轮廓/ 集合/ ./ 如图/ 2/ 中/ 所示/ ,/ 滑动/ 窗口/ 大小/ 为/ 23/ ,/ 当/ 数据/ 元组/ p1/ ~/ p23/ 在/ 滑动/ 窗口/ 时/ ,/ q/ 的/ 动态/ 轮廓/ 点/ 是/ {/ p1/ ,/ p2/ }/ ./ 随着/ 滑动/ 窗口/ 的/ 滑动/ ,/ p1/ 和/ p2/ 失效/ ,/ p24/ 和/ p25/ 加入/ 到/ 滑动/ 窗口/ 中/ ,/ 这时/ q/ 的/ 动态/ 轮廓/ 集合/ 是/ {/ p7/ ,/ p8/ ,/ p19/ ,/ p23/ ,/ p25/ }/ ./ 4/ 数据流/ 动态/ 轮廓/ 查询处理/ 本节/ 中/ ,/ 首先/ 介绍/ 了/ 本文/ 提出/ 的/ 组合式/ 索引/ 结构/ ;/ 然后/ ,/ 介绍/ 了/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 的/ 基本/ 性质/ ,/ 包括/ 如何/ 在/ 数据流/ 上/ 进行/ 剪枝/ 以及/ 如何/ 利用/ 索引/ 结构/ 进行/ 动态/ 支配/ 关系/ 判定/ ;/ 接着/ ,/ 给出/ 了/ 算法/ BDS2/ 的/ 初始化/ 和/ 更新/ 方法/ ;/ 最后/ ,/ 介绍/ 了/ 算法/ IDS2/ 的/ 初始化/ 和/ 更新/ 方法/ ./ 其中/ ,/ 算法/ BDS2/ 通过/ 维护/ 滑动/ 窗口/ 中/ 少量/ 的/ 元组/ 来/ 持续/ 的/ 计算/ 当前/ 滑动/ 窗口/ 中/ 的/ 动态/ 轮廓/ 集合/ ./ 然而/ ,/ BDS2/ 在/ 处理/ 滑动/ 窗口/ 上/ 的/ 个别/ 更新/ 时/ ,/ 会/ 使得/ 算法/ 响应/ 时间/ 突然/ 增加/ ,/ 引起/ 较大/ 的/ 延迟/ ./ 为了/ 更加/ 稳定/ 地/ 在/ 数据流/ 上/ 计算/ 动态/ 轮廓/ ,/ 在/ BDS2/ 算法/ 的/ 基础/ 上/ ,/ 通过/ 对/ 每个/ 数据/ 元组/ 维护/ 一个/ 简单/ 的/ 结构/ ,/ 进一步/ 提出/ 了/ 算法/ IDS2/ ./ 4.1/ 组合式/ 索引/ 结构/ 为了/ 使/ 本文/ 算法/ 适用/ 于/ 各种/ 数据分布/ ,/ 本文/ 采用/ 组合式/ 索引/ 结构/ 来/ 进行/ 管理/ ./ 组合式/ 索引/ 结构/ 包括/ 两/ 部分/ :/ 分/ 层次/ 划分/ 结构/ 和/ 倒排/ 索引/ ./ 分/ 层次/ 划分/ 结构/ 能够/ 保证/ 在/ 各种/ 数据分布/ 下/ 都/ 有/ 良好/ 的/ 表现/ ,/ 使得/ 每个/ 子/ 划分/ 中/ 存储/ 的/ 数据/ 个数/ 都/ 是/ 可控/ 的/ ./ 同时/ ,/ 能够/ 避免/ 某些/ 空白/ 子/ 划分/ 的/ 存在/ ,/ 避免/ 了/ 存储空间/ 的/ 浪费/ ./ 这种/ 分/ 层次/ 划分/ 结构/ ,/ 可以/ 通过/ 中间/ 层次/ 划分/ 的/ 动态/ 支配/ 关系/ 判定/ ,/ 完成/ 数据/ 的/ 批量/ 过滤/ ./ 对于/ 子/ 划分/ 的/ 数据/ ,/ 采用/ 倒排/ 索引/ 进行/ 管理/ ,/ 从而/ 加速/ 元组/ 间/ 动态/ 支配/ 关系/ 的/ 判定/ ,/ 快速/ 地/ 得到/ 最终/ 结果/ ./ (/ 1/ )/ 分/ 层次/ 划分/ 结构/ 分/ 层次/ 划分/ 是/ 一种/ 树状/ 的/ 空间/ 索引/ 结构/ ./ 每/ 一个/ 划分/ r/ 可以/ 表示/ 为/ (/ r/ ./ min/ ,/ r/ ./ max/ ,/ r/ ./ num/ )/ ,/ 其中/ r/ ./ num/ 表示/ 的/ 是/ 划分/ r/ 中/ 存储/ 的/ 数据/ 元组/ 个数/ ;/ r/ ./ max/ 、/ r/ ./ min/ 分别/ 是/ 划分/ r/ 上界点/ 和/ 下界/ 点/ ./ 下界/ 点/ r/ ./ min/ 取/ 的/ 是/ 划分/ r/ 在/ 各个/ 维度/ 的/ 最小值/ (/ 具体/ 表示/ 为/ r/ ./ min/ =/ 〈/ r/ ./ min/ [/ 1/ ]/ ,/ r/ ./ min/ [/ 2/ ]/ ,/ …/ ,/ r/ ./ min/ [/ d/ ]/ 〉/ )/ ,/ 而/ r/ ./ max/ 取/ 的/ 是/ 划分/ r/ 在/ 各个/ 维度/ 的/ 最大值/ ./ 分/ 层次/ 划分/ 中/ 的/ 划分/ 可以/ 分为/ 2/ 类/ :/ 中间/ 划分/ 和/ 叶子/ 划分/ ./ 叶子/ 划分/ 存储/ 的/ 是/ 落/ 在/ 它/ 范围/ 内/ 的/ 所有/ 数据/ 元组/ ./ 而/ 中间/ 划分/ 存储/ 的/ 都/ 是/ 划分/ ./ 给定/ 一个/ 数据/ 元组/ p/ ,/ 对于/ 所有/ 维度/ i/ ,/ 如果/ p/ [/ i/ ]/ ∈/ (/ r/ ./ min/ [/ i/ ]/ ,/ r/ ./ max/ [/ i/ ]/ ]/ ,/ 那么/ 数据/ 元组/ p/ 就/ 落/ 在/ 划分/ r/ 中/ ./ 分/ 层次/ 划分/ 采用/ 参数/ C/ (/ 被/ 称为/ 子/ 划分/ 约束/ )/ 对/ 划分/ 进行/ 约束/ ,/ 从而/ 使/ 这种/ 分/ 层次/ 划分/ 能够/ 适合/ 多种/ 数据分布/ ,/ 即/ 数据分布/ 不/ 均匀/ 时/ ,/ 依然/ 可以/ 保证/ 每/ Page6/ 个子/ 划分/ 中/ 的/ 数据/ 元组/ 个数/ 相近/ ./ 子/ 划分/ 约束/ C/ 限制/ 了/ 每个/ 叶子/ 划分/ 内/ 最/ 多/ 可以/ 存储/ C/ 个/ 数据/ 元组/ ./ 一旦/ 某个/ 叶子/ 划分/ 内/ 的/ 元组/ 个数/ 超过/ C/ 个/ ,/ 那么/ ,/ 该/ 叶子/ 划分/ 标记/ 为/ 中间/ 划分/ ,/ 同时/ 进行/ 分裂/ ,/ 直到/ 它/ 分裂/ 后/ 的/ 孩子/ 节点/ 满足/ 子/ 划分/ 约束/ ,/ 否则/ 的话/ ,/ 继续/ 分裂/ ./ 下面/ 介绍/ 具体/ 的/ 分裂/ 规则/ :/ 给定/ 一个/ d/ 维/ 的/ 数据/ 划分/ r/ =/ (/ r/ ./ min/ ,/ r/ ./ max/ ,/ r/ ./ num/ )/ ,/ 当/ r/ ./ num/ >/ C/ 时/ ,/ 首先/ ,/ 选择/ 某/ 一个/ 维度/ di/ ,/ 使得/ 整个/ 数据/ 按/ di/ 维/ 进行/ 均分/ 后/ ,/ 保证/ 得到/ 的/ 两个/ 孩子/ 划分/ 的/ 数据/ 个数/ 的/ 差值/ 最小/ ./ 所谓/ 的/ 按/ di/ 维/ 进行/ 均分/ ,/ 指/ 的/ 是/ 把/ r/ 分裂/ 成/ r1/ 和/ r2/ 后/ 满足/ :/ (/ 1/ )/ 对于/ 任意/ 不/ 等于/ di/ 的/ 维度/ dj/ ,/ r1/ ./ min/ [/ dj/ ]/ =/ r1/ ./ min/ [/ dj/ ]/ =/ r/ ./ min/ [/ dj/ ]/ ,/ r1/ ./ max/ [/ dj/ ]/ =/ r1/ ./ max/ [/ dj/ ]/ =/ r/ ./ max/ [/ dj/ ]/ ;/ (/ 2/ )/ 对于/ 维度/ di/ ,/ r1/ ./ min/ [/ di/ ]/ =/ r/ ./ min/ [/ di/ ]/ ,/ r1/ ./ max/ [/ di/ ]/ =/ r2/ ./ min/ [/ di/ ]/ =/ (/ r/ ./ min/ [/ di/ ]/ +/ r/ ./ max/ [/ di/ ]/ )/ // 2/ ,/ r2/ ./ max/ [/ di/ ]/ =/ r/ ./ max/ [/ di/ ]/ ./ 如果/ 划分/ 后/ 的/ r1/ 或/ r2/ 仍然/ 不/ 满足/ 子/ 划分/ 约束/ C/ ,/ 即/ r1/ 或/ r2/ 中/ 的/ 数据/ 点/ 个数/ 多于/ C/ 个/ ,/ 从/ 剩余/ 的/ 维度/ 中/ 再/ 选择/ 一个/ 维度/ 进行/ 均分/ ./ 以此类推/ ,/ 当/ 所有/ 的/ 维度/ 都/ 均分/ 完毕/ 后/ ,/ 还/ 无法/ 满足/ 子/ 划分/ 约束/ C/ ,/ 开始/ 新一轮/ 的/ 划分/ ./ 当/ 某个/ 划分/ 不/ 满足/ 子/ 划分/ 约束/ C/ 时/ ,/ 需要/ 进一步/ 划分/ ,/ 被/ 称为/ 中间/ 划分/ ./ 满足/ 子/ 划分/ 约束/ C/ 的/ 划分/ ,/ 即/ 划分/ 中/ 的/ 数据/ 点/ 个数/ 小于/ 或/ 等于/ C/ 个/ ,/ 该/ 划分/ 称为/ 叶子/ 划分/ ./ 对比/ 网格/ 划分/ ,/ 分/ 层次/ 划分/ 不会/ 随着/ 维度/ 增加/ 而/ 呈/ 指数/ 级/ 增长/ ./ 分/ 层次/ 划分/ 的/ 算法/ 描述/ 如/ 算法/ 1/ 所示/ ./ 算法/ 1/ ./ 分/ 层次/ 划分算法/ 描述/ ./ 输入/ :/ 整体/ 数据/ 集合/ D/ ,/ 数据/ 集合/ 的/ 数据/ 点/ 个数/ Num/ ,/ 输出/ :/ 分/ 层次/ 划分/ 结果/ 1/ ./ 初始化/ 根/ 划分/ root/ =/ (/ 〈/ 0/ ,/ …/ ,/ 0/ 〉/ ,/ 〈/ 1/ ,/ …/ ,/ 1/ 〉/ ,/ Num/ )/ ;/ 2/ ./ 把/ root/ 加入/ 到/ 堆/ H/ 中/ ;/ 3/ ./ While/ (/ H/ 不为/ 空/ )/ 4/ ./ 取/ H/ 的/ 首/ 划分/ 元素/ r/ ;/ 5/ ./ If/ (/ r/ 满足/ 叶子/ 划分/ )/ 6.7/ ./ Else8/ ./ Mindif/ =/ r/ ./ num/ ;/ Mindim/ =/ / ;/ 9.10/ ./ 11.12/ ./ 13.14/ ./ 15/ ./ EndFor16/ ./ 从/ candidim/ 中/ 移除/ Mindim/ ;/ 17/ ./ If/ (/ candidim/ 为/ 空集/ )/ 18.19/ ./ EndIf20/ ./ 按/ 维度/ Mindim/ 对/ r/ 进行/ 均分/ ,/ 并/ 把/ 分裂/ 后/ 的/ 21/ ./ EndIf22/ ./ EndWhile/ 根据/ 算法/ 1/ 和/ 均分/ 方法/ 可知/ ,/ 所有/ 的/ 叶子/ 划分/ 之间/ 没有/ 任何/ 重叠/ ,/ 所以/ 给定/ 任意/ 数据/ 点/ p/ ,/ 它/ 只/ 可能/ 落/ 在/ 唯一/ 的/ 叶子/ 划分/ 中/ ./ 具体/ 地/ ,/ 图/ 3/ 是/ 图/ 2/ 的/ 分/ 层次/ 划分/ 结构/ (/ p1/ 到/ p23/ 是/ 数据/ 集合/ )/ ./ 设定/ 子/ 划分/ 约束/ C/ =/ 10/ ,/ 整体/ 的/ 根/ 划分/ 是/ root/ =/ (/ 〈/ 0/ ,/ 0/ 〉/ ,/ 〈/ 1/ ,/ 1/ 〉/ ,/ 23/ )/ ./ 首先/ ,/ 如果/ 按/ 维度/ 1/ 进行/ 对/ root/ 均分/ 时/ ,/ 左边/ 有/ 15/ 个/ 数据/ 点/ ,/ 右边/ 有/ 8/ 个/ 数据/ 点/ ,/ 差值/ 为/ 7/ ./ 如果/ 按/ 维度/ 2/ 均分/ 时/ ,/ 差值/ 同样/ 是/ 7/ ./ 随机/ 选择/ 维度/ 1/ 作为/ 第一/ 层次/ 的/ 划分/ ,/ 得到/ 划分/ r0/ =/ (/ 〈/ 0/ ,/ 0/ 〉/ ,/ 〈/ 0.5/ ,/ 1/ 〉/ ,/ 15/ )/ 和/ r1/ =/ (/ 〈/ 0.5/ ,/ 0/ 〉/ ,/ 〈/ 1/ ,/ 1/ 〉/ ,/ 8/ )/ ./ 由于/ r0/ ./ num/ =/ 15/ ,/ 不/ 满足/ 子/ 划分/ 约束/ C/ ,/ 所以/ r0/ 是/ 中间/ 划分/ ,/ 需要/ 进一步/ 划分/ ./ 只/ 剩下/ 维度/ 2/ 可/ 供选择/ ,/ 按/ 维度/ 2/ 对/ 划分/ r0/ 进行/ 均分/ 后/ ,/ 可以/ 得到/ r0/ ,/ 0/ =/ (/ 〈/ 0/ ,/ 0/ 〉/ ,/ 〈/ 0.5/ ,/ 0.5/ 〉/ ,/ 11/ )/ 和/ r0/ ,/ 1/ =/ (/ 〈/ 0/ ,/ 0/ 〉/ ,/ 〈/ 0.5/ ,/ 0.5/ 〉/ ,/ 11/ )/ ./ 由于/ r0/ ,/ 0/ ./ num/ =/ 11/ 不/ 满足/ 子/ 划分/ 约束/ ,/ 需要/ 进一步/ 划分/ ./ 由于/ 维度/ 1/ 和/ 维度/ 2/ 都/ 划分/ 完毕/ ,/ 重置/ 候选/ 维度/ 为/ {/ 1/ ,/ 2/ }/ ./ 以/ 维度/ 1/ 均分/ r0/ ,/ 0/ 时/ ,/ 左右/ 两边/ 的/ 数据/ 点/ 个数/ 分别/ 是/ 5/ 和/ 6/ ,/ 差值/ 为/ 1/ ./ 当/ 选择/ 维度/ 2/ 均分/ r0/ ,/ 0/ 时/ ,/ 差值/ 是/ 3/ ,/ 所以/ 选择/ 维度/ 1/ 均分/ r0/ ,/ 0/ ,/ 可以/ 得到/ r0/ ,/ 0/ ,/ 0/ =/ (/ 〈/ 0/ ,/ 0/ 〉/ ,/ 〈/ 0.25/ ,/ 0.5/ 〉/ ,/ 5/ )/ 和/ r0/ ,/ 0/ ,/ 1/ =/ (/ 〈/ 0.25/ ,/ 0/ 〉/ ,/ 〈/ 0.5/ ,/ 0.5/ 〉/ ,/ 6/ )/ ./ 经过/ 3/ 次/ 划分/ 后/ ,/ 得到/ 的/ r1/ 、/ r0/ ,/ 1/ 、/ r0/ ,/ 0/ ,/ 0/ 和/ r0/ ,/ 0/ ,/ 1/ 都/ 满足/ 子/ 划分/ 约束/ C/ ,/ 是/ 叶子/ 划分/ ./ (/ 2/ )/ 倒排/ 索引/ 结构/ 对于/ 叶子/ 划分/ 内/ 的/ 数据/ 元组/ ,/ 采用/ 倒排/ 索引/ 结构/ 来/ 管理/ ./ 具体/ 的/ ,/ 针对/ 每/ 一个/ 维度/ ,/ 都/ 对/ 叶子/ 划分/ 内/ 的/ 数据/ 进行/ 排序/ ./ 同时/ 把/ 查询/ 点/ q/ 也/ 加入/ 到/ 每个/ 叶子/ 划分/ 内/ 的/ 倒排/ 索引/ 结构/ 中/ ./ 如图/ 4/ 所示/ ,/ 在/ 叶子/ 划分/ r0/ ,/ 1/ 中/ ,/ 把/ 数据/ 元组/ p3/ ,/ p4/ ,/ p7/ ,/ p23/ 和/ 查询/ 点/ qPage7/ 进行/ 排序/ ./ 按/ 维度/ 1/ 排序/ ,/ 得到/ p3/ ,/ p4/ ,/ p23/ ,/ p7/ ,/ q/ ./ 按/ 维度/ 2/ 排序/ 后/ ,/ 可以/ 得到/ 结果/ p23/ ,/ q/ ,/ p3/ ,/ p7/ ,/ p4/ ./ 综上所述/ ,/ 组合/ 索引/ 结构/ 的/ 组织/ 结构/ 如下/ :/ ①/ 中间/ 划分/ r/ =/ (/ r/ ./ id/ ,/ r/ ./ min/ ,/ r/ ./ max/ ,/ r/ ./ num/ ,/ r/ ./ isleaf/ ,/ r/ ./ childrenlist/ )/ ./ 其中/ r/ ./ id/ 是/ 该/ 划分/ 的/ 唯一/ 标识/ ;/ r/ ./ min/ 是/ 该/ 划分/ 对应/ 的/ 矩形/ 区间/ 的/ 下界/ 点/ ;/ r/ ./ max/ 是/ 该/ 划分/ 对应/ 的/ 矩形/ 区间/ 的/ 上界点/ ;/ r/ ./ num/ 是/ 落/ 在/ 该/ 划分/ 对应/ 区间/ 内/ 的/ 所有/ 元组/ 的/ 个数/ ;/ r/ ./ isleaf/ 用来/ 标识/ 该/ 划分/ 是不是/ 叶子/ 划分/ ;/ r/ ./ childrenlist/ 存储/ 了/ 该/ 中间/ 划分/ 的/ 所有/ 孩子/ 划分/ 的/ 指针/ ./ 如图/ 3/ 所示/ ,/ r0/ ,/ 0/ ./ min/ =/ 〈/ 0/ ,/ 0/ 〉/ ,/ r0/ ,/ 0/ ./ max/ =/ 〈/ 0.5/ ,/ 0.5/ 〉/ ,/ r0/ ,/ 0/ ./ num/ =/ 11/ ,/ r0/ ,/ 0/ ./ isleaf/ =/ false/ ,/ r0/ ,/ 0/ ./ childrenlist/ =/ {/ r0/ ,/ 0/ ,/ 0/ ,/ r0/ ,/ 0/ ,/ 1/ }/ ./ ②/ 叶子/ 划分/ r/ =/ (/ r/ ./ id/ ,/ r/ ./ min/ ,/ r/ ./ max/ ,/ r/ ./ num/ ,/ r/ ./ isleaf/ ,/ r/ ./ tuplelist/ [/ d/ ]/ )/ ./ 其中/ r/ ./ id/ ,/ r/ ./ min/ ,/ r/ ./ max/ ,/ r/ ./ num/ ,/ r/ ./ isleaf/ 与/ 中间/ 划分/ 表示/ 的/ 含义/ 相同/ ./ r/ ./ tuplelist/ [/ d/ ]/ 存储/ 了/ d/ 个/ 维度/ 上落/ 在/ 该/ 叶子/ 划分/ 中/ 所有/ 数据/ 元组/ 的/ 倒排/ 链表/ ./ 如图/ 4/ 所示/ ,/ r0/ ,/ 1/ ./ min/ =/ 〈/ 0/ ,/ 0.5/ 〉/ ,/ r0/ ,/ 0/ ./ max/ =/ 〈/ 0.5/ ,/ 1/ 〉/ ,/ r0/ ,/ 0/ ./ num/ =/ 4/ ,/ r0/ ,/ 0/ ./ isleaf/ =/ true/ ,/ r0/ ,/ 0/ ./ tuplelist/ [/ 0/ ]/ =/ {/ 〈/ 0.25/ ,/ p3/ 〉/ ,/ 〈/ 0.3/ ,/ p4/ 〉/ ,/ 〈/ 0.4/ ,/ p23/ 〉/ ,/ 〈/ 0.45/ ,/ p7/ 〉/ }/ ,/ r0/ ,/ 0/ ./ tuplelist/ [/ 1/ ]/ =/ {/ 〈/ 0.6/ ,/ p23/ 〉/ ,/ 〈/ 0.7/ ,/ p3/ 〉/ ,/ 〈/ 0.8/ ,/ p7/ 〉/ ,/ 〈/ 0.95/ ,/ p4/ 〉/ }/ ./ 组合/ 索引/ 结构/ 的/ 更新/ 包括/ 两/ 部分/ :/ 删除/ 数据/ 元组/ 和/ 插入/ 数据/ 元组/ ./ 下面/ 给出/ 组合/ 索引/ 结构/ 更新/ 的/ 伪/ 代码/ 描述/ ./ 算法/ 2/ ./ 组合/ 索引/ 结构/ 的/ 更新/ ./ 输入/ :/ 组合/ 索引/ 根/ 划分/ root/ ;/ 待/ 失效/ 元组/ pold/ ;/ 待/ 插入/ 元/ 输出/ :/ 更新/ 后/ 的/ 索引/ 结构/ // // 处理/ 失效/ 元组/ pold1/ ./ 从/ root/ ./ childrenlist/ 中/ 找到/ pold/ 所属/ 的/ 划分/ r/ ,/ 并/ 把/ r2/ ./ While/ (/ H/ 不为/ 空/ )/ 3/ ./ 取/ H/ 中/ 的/ 划分/ r/ ;/ 4/ ./ If/ (/ 划分/ r/ 是/ 叶子/ 划分/ )/ 5.6/ ./ ElseIf/ (/ 划分/ r/ 是/ 中间/ 划分/ )/ 7.8/ ./ 9.10/ ./ 11/ ./ EndIf12/ ./ EndIf13/ ./ EndWhile/ // // 处理/ 插入/ 元组/ pnew14/ ./ 按/ 上述/ 2/ ~/ 10/ 行/ 的/ 方法/ 定位/ pnew/ 所属/ 的/ 叶子/ 划分/ r/ ;/ 15/ ./ If/ (/ r/ ./ num/ =/ =/ C/ )/ 16/ ./ 把/ pnew/ 插入/ 到/ r/ 中后/ ,/ 按/ 算法/ 1/ 中/ 9/ ~/ 20/ 行中/ 的/ 17/ ./ EndIf/ 根据/ 算法/ 2/ 的/ 描述/ 可知/ ,/ 当有/ 数据/ 点/ 从/ 索引/ 中/ 删除/ 时/ ,/ 偶尔/ 需要/ 进行/ 叶子/ 划分/ 的/ 合并/ ,/ 合并/ 的/ 代价/ 为/ O/ (/ C/ ×/ d/ )/ ./ 当有/ 数据/ 点/ 插入/ 到/ 索引/ 时/ ,/ 有时/ 会/ 引起/ 叶子/ 划分/ 变成/ 中间/ 划分/ 并/ 分裂/ ,/ 这里/ 的/ 分裂/ 代价/ 仍然/ 是/ O/ (/ C/ ×/ d/ )/ ./ 如图/ 5/ 中/ 所示/ ,/ 当/ 元组/ p22/ 插入/ 到/ 数据流/ 中/ 时/ ,/ 子/ 划分/ 约束/ C/ =/ 10/ ,/ 叶子/ 划分/ r0/ ,/ 0/ 中/ 存储/ 的/ 元组/ 个数/ 由/ 10/ 变成/ 11/ ,/ 不再/ 满足/ 子/ 划分/ 约束/ ,/ 所以/ r0/ ,/ 0/ 需要/ 分裂/ ./ 根据/ r0/ ,/ 0/ 原有/ 的/ 倒排/ 索引/ 结构/ ,/ 如果/ 按/ 维度/ 1/ 分裂/ ,/ 差值/ 为/ 0/ ./ 按/ 维度/ 2/ 均分/ ,/ 差值/ 为/ 2/ ,/ 所以/ 选择/ 按/ 维度/ 1/ 进行/ 均分/ ./ 通过/ 一次/ 遍历/ ,/ 就/ 可以/ 完成/ r0/ ,/ 0/ ,/ 0/ 和/ r0/ ,/ 0/ ,/ 1/ 的/ 分裂/ ./ Page8/ 可以/ 发现/ ,/ 关于/ 子/ 划分/ 约束/ C/ 的/ 取值/ ,/ 是/ 需要/ 进行/ 权衡/ 的/ ./ 当/ C/ 值过/ 大时/ ,/ 会/ 造成/ 划分/ 层次/ 过低/ ,/ 中间/ 划分/ 减少/ ,/ 对/ 更新/ 元组/ 的/ 定位/ 会/ 比较/ 快/ ./ 但是/ ,/ 在/ 叶子/ 划分/ 中/ 的/ 处理/ 的/ 耗时/ 会/ 变长/ ./ 同时/ 可以/ 被/ 过滤/ 掉/ 的/ 中间/ 划分/ 也/ 相应/ 减少/ ./ 反之/ ,/ 当/ C/ 值过/ 小时/ ,/ 会/ 造成/ 划分/ 层次/ 过多/ ,/ 定位/ 到/ 对应/ 的/ 叶子/ 划分/ 耗时/ 会/ 较/ 多/ ./ 而/ 在/ 叶子/ 划分/ 内部/ 的/ 处理/ 时间/ 相对/ 较快/ ./ 之后/ ,/ 我们/ 在/ 实验/ 部分/ 进行/ 了/ 关于/ 参数/ C/ 的/ 验证/ ,/ 在/ 不同/ 的/ 分布/ 中/ ,/ 通过/ 实验/ 取得/ 合适/ 的/ 参数/ C/ ./ 4.2/ 数据流/ 上/ 动态/ 轮廓/ 的/ 基本/ 性质/ 在/ 介绍/ 本文/ 的/ 具体/ 算法/ 之前/ ,/ 首先/ 给出/ 一些/ 数据流/ 上/ 动态/ 轮廓/ 的/ 基本/ 性质/ ,/ 包括/ 数据流/ 上/ 的/ 元组/ 剪枝/ 以及/ 动态/ 支配/ 关系/ 的/ 快速/ 判定/ ,/ 用于/ 加速/ 数据流/ 上/ 动态/ 轮廓/ 查询处理/ ./ 4.2/ ./ 1/ 数据流/ 上/ 的/ 剪枝/ 策略/ 下面/ ,/ 我们/ 给出/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 的/ 剪枝/ ./ 定理/ 1/ ./ 给出/ 数据流/ 上/ 两个/ 元组/ p1/ ,/ p2/ 和/ 查询/ 点/ q/ ,/ p1/ 到达/ 数据流/ 比/ p2/ 晚/ (/ p1/ ./ label/ >/ p2/ ./ label/ )/ ,/ 且/ p1/ 关于/ q/ 动态/ 支配/ p2/ ,/ 则/ p2/ 在/ 它/ 的/ 存活/ 时间/ 内/ ,/ 不/ 可能/ 成为/ q/ 的/ 动态/ 轮廓/ ./ 证明/ ./ 由于/ p1/ 到达/ 数据流/ 时间/ 比/ p2/ 晚/ ,/ 则/ p2/ 失效/ 时/ ,/ p1/ 不会/ 失效/ ./ 由于/ p1/ 关于/ q/ 动态/ 支配/ p2/ ,/ 所以/ p1/ 失效/ 前/ ,/ p2/ 不/ 可能/ 成为/ q/ 的/ 动态/ 轮廓/ ./ 定理/ 1/ 得证/ ./ 根据/ 定理/ 1/ 可知/ ,/ 对于/ 每/ 一个/ 查询/ 点/ q/ ,/ 被/ 后/ 到达/ 的/ 元组/ 动态/ 支配/ 的/ 元组/ 都/ 可以/ 直接/ 删除/ ,/ 只/ 需要/ 维护/ 少量/ 的/ 数据/ 就/ 可以/ 了/ ./ 所有/ 不/ 满足/ 定理/ 1/ 的/ 数据/ 元组/ 都/ 需要/ 被/ 保留/ 在/ 滑动/ 窗口/ 中/ ./ 给定/ 查询/ 点/ q/ ,/ 可以/ 把/ 数据流/ 上/ 的/ 所有/ 元/ 组分/ 成/ 3/ 个/ 集合/ :/ (/ 1/ )/ 结果/ 集合/ ./ DN/ 中/ 关于/ q/ 的/ 所有/ 动态/ 轮廓/ 点/ 的/ 集合/ ,/ 用/ 符号/ RS/ 表示/ ,/ |/ RS/ |/ 表示/ RS/ 中/ 的/ 元组/ 数目/ ./ (/ 2/ )/ 候选/ 集合/ ./ 只/ 被/ 比/ 自己/ 先到/ 的/ 点/ 动态/ 支配/ 的/ 点/ 的/ 集合/ ,/ 用/ 符号/ CS/ 表示/ ,/ |/ CS/ |/ 表示/ 了/ CS/ 中/ 的/ 元组/ 数目/ ./ (/ 3/ )/ 删除/ 集合/ ./ 被/ 后/ 到达/ 的/ 点/ 动态/ 支配/ 的/ 点/ 的/ 集合/ ,/ 即/ 满足/ 定理/ 1/ 条件/ 的/ 数据/ 元组/ ./ 对于/ 查询/ 点/ q/ ,/ 只/ 需要/ 维护/ 结果/ 集合/ RS/ 和/ 候选/ 集合/ CS/ 中/ 的/ 点/ ./ 定理/ 2/ ./ 随机/ 数据流/ 中/ ,/ 即/ 数据流/ 上/ 的/ 元组/ 呈/ 均匀分布/ 时/ ,/ 数据流/ 中/ 需要/ 维护/ 的/ 元组/ 个数/ (/ 结果/ 集合/ 加/ 候选/ 集合/ )/ 是/ O/ (/ lndN/ // d/ !/ )/ ./ 证明/ ./ 把/ 数据流/ 上/ 的/ 标签/ 属性/ 作为/ 一个/ 轮廓/ 计算/ 维度/ ,/ 结果/ 集合/ 加/ 候选/ 集合/ 中/ 的/ 元组/ 相当于/ d/ +/ 1/ 维上/ 的/ 动态/ 轮廓/ 集合/ ./ 根据/ 文献/ [/ 5/ ]/ 中/ 的/ 定理/ 2/ 可知/ ,/ 随机/ 数据流/ 上/ 需要/ 维护/ 的/ 元组/ 个数/ 是/ O/ (/ lndN/ // d/ !/ )/ ,/ 定理/ 2/ 得证/ ./ 利用/ 定理/ 1/ 可以/ 完成/ 数据流/ 上/ 元组/ 的/ 剪枝/ ,/ 对于/ 每个/ 查询/ 点/ q/ ,/ 只/ 需要/ 维护/ 少量/ 的/ 数据/ 就/ 可以/ 完成/ 数据流/ 上/ 的/ 动态/ 轮廓/ 查询/ ./ 下面/ 介绍/ 如何/ 利用/ 4.1/ 节中/ 介绍/ 的/ 索引/ 结构/ 进行/ 空间/ 批量/ 过滤/ 和/ 动态/ 支配/ 关系/ 的/ 快速/ 判定/ ./ 4.2/ ./ 2/ 动态/ 支配/ 关系/ 的/ 快速/ 判定/ 动态/ 支配/ 关系/ 的/ 判定/ 主要/ 包含/ 2/ 个/ 步骤/ :/ 首先/ 利用/ 分/ 层次/ 划分/ 来/ 判定/ 数据/ 点/ 与/ 中间/ 划分/ 之间/ 的/ 动态/ 支配/ 关系/ ,/ 从而/ 进行/ 空间/ 上/ 的/ 批量/ 过滤/ ;/ 然后/ 在/ 倒排/ 索引/ 内/ 快速/ 判定/ 元组/ 与/ 元组/ 之间/ 的/ 动态/ 支配/ 关系/ ./ (/ 1/ )/ 元组/ 与/ 划分/ 间/ 的/ 动态/ 支配/ 关系/ 给定/ 一个/ 划分/ r/ =/ (/ r/ ./ min/ ,/ r/ ./ max/ ,/ r/ ./ num/ )/ 和/ 查询/ 点/ q/ ,/ 在/ 进行/ 动态/ 支配/ 关系/ 判定/ 前/ ,/ 首先/ 给出/ 两个/ 基本/ 定义/ ./ 定义/ 2/ (/ 划分/ 最近/ 距离/ 点/ )/ ./ 给定/ 一个/ 划分/ r/ (/ r/ ./ min/ ,/ r/ ./ max/ ,/ r/ ./ num/ )/ 和/ 查询/ 点/ q/ ,/ r/ 在/ 各个/ 维度/ 上/ 的/ 最/ 接近/ q/ 的/ 点/ 被/ 称为/ 最近/ 距离/ 点/ ,/ 用/ 符号/ r/ ./ near/ 表示/ ./ r/ ./ near/ [/ i/ ]/ =/ 烄/ 烅/ 烆/ 定义/ 3/ (/ 划分/ 最/ 远距离/ 点/ )/ ./ 给定/ 一个/ 划分/ r/ (/ r/ ./ min/ ,/ r/ ./ max/ ,/ r/ ./ num/ )/ 和/ 查询/ 点/ q/ ,/ r/ 在/ 各个/ 维度/ 上/ 的/ 与/ q/ 的/ 距离/ 最远/ 的/ 点/ 被/ 称为/ 最/ 远距离/ 点/ ,/ 用/ r/ ./ far/ 表示/ ./ r/ ./ far/ [/ i/ ]/ =/ 烄/ r/ ./ max/ [/ i/ ]/ ,/ q/ [/ i/ ]/ ∈/ 0/ ,/ 烅/ r/ ./ min/ [/ i/ ]/ ,/ q/ [/ i/ ]/ ∈/ 烆/ 如/ 图/ 2/ 中/ 所示/ ,/ 给定/ q/ 〈/ 0.55/ ,/ 0.65/ 〉/ 和/ r0/ ,/ 0/ ,/ 1/ (/ 〈/ 0/ ,/ 0/ 〉/ ,/ 〈/ 0.5/ ,/ 0.5/ 〉/ ,/ 6/ )/ ,/ 根据/ 定义/ 2/ 和/ 3/ 可知/ ,/ r0/ ,/ 0/ ,/ 1/ ./ near/ =/ 〈/ 0.5/ ,/ 0.5/ 〉/ ,/ r0/ ,/ 0/ ,/ 1/ ./ far/ =/ 〈/ 0.25/ ,/ 0/ 〉/ ./ 下面/ 的/ 定理/ 给出/ 了/ 如何/ 利用/ 划分/ 和/ 查询/ 点/ 的/ 最近/ 距离/ 点/ 和/ 最/ 远距离/ 点来/ 判定/ 划分/ 和/ 数据/ 点/ 之间/ 的/ 动态/ 支配/ 关系/ ./ 定理/ 3/ ./ 给定/ 划分/ r/ 与/ 查询/ 点/ q/ ,/ 如果/ 元组/ p/ 可以/ 关于/ q/ 动态/ 支配/ r/ ./ near/ ,/ 称/ p/ 完全/ 动态/ 支配/ r/ ,/ 那么/ p/ 可以/ 动态/ 支配/ r/ 内/ 所有/ 的/ 点/ ./ 如果/ p/ 可以/ 关于/ q/ 动态/ 支配/ r/ ./ far/ ,/ 称/ p/ 部分/ 动态/ 支配/ r/ ,/ 那么/ pPage9/ 可能/ 会/ 动态/ 支配/ r/ 内/ 某些/ 点/ ./ 证明/ ./ r/ ./ near/ 是/ r/ 内在/ 各维上/ 距离/ q/ 最近/ 的/ 点/ ,/ 所以/ r/ ./ near/ 可以/ 关于/ q/ 动态/ 支配/ r/ 内/ 的/ 任意/ 其他/ 点/ ./ 由于/ 动态/ 支配/ 具有/ 传递性/ ,/ 元组/ p/ 可以/ 关于/ q/ 动态/ 支配/ r/ ./ near/ ,/ 则/ p/ 可以/ 动态/ 支配/ r/ 内/ 所有/ 的/ 点/ ./ 同样/ 的/ ,/ r/ ./ far/ 是/ r/ 内在/ 各维上/ 距离/ q/ 最远/ 的/ 点/ ./ 如果/ 元组/ p/ 可以/ 关于/ q/ 动态/ 支配/ r/ ./ near/ ,/ 那么/ p/ 可能/ 会/ 动态/ 支配/ r/ 内/ 某些/ 点/ ,/ 至少/ 可以/ 动态/ 支配/ r/ ./ far/ ./ 如图/ 6/ (/ a/ )/ 所示/ ,/ 给定/ 一个/ 划分/ r/ ,/ r/ 是/ r/ 在/ 其他/ 象限/ 的/ 映射/ ,/ 如果/ 元组/ p/ 落/ 在/ 阴影/ 1/ 中/ ,/ 表示/ p/ 可以/ 完全/ 动态/ 支配/ 划分/ r/ ,/ q/ 可以/ 动态/ 支配/ r/ 内/ 的/ 所有/ 数据/ 点/ ./ 如果/ 元组/ p/ 落/ 在/ 阴影/ 外面/ ,/ 表示/ p/ 不/ 可能/ 动态/ 支配/ r/ 内/ 的/ 任意/ 数据/ 点/ ./ 推论/ 1/ ./ 给定/ 划分/ r/ 与/ 查询/ 点/ q/ ,/ 如果/ r/ ./ far/ 可以/ 动态/ 支配/ p/ ,/ 称/ r/ 完全/ 动态/ 支配/ p/ ,/ 那么/ 落/ 在/ r/ 内/ 的/ 任意/ 元组/ 都/ 可以/ 动态/ 支配/ p/ ./ 如果/ r/ ./ near/ 可以/ 动态/ 支配/ p/ ,/ 称/ r/ 部分/ 动态/ 支配/ p/ ,/ 那么/ 落/ 在/ r/ 内/ 的/ 元组/ 都/ 不/ 可能/ 动态/ 支配/ p/ ./ 证明/ ./ 由/ 定理/ 3/ 可以/ 很/ 容易/ 的/ 得到/ 该/ 推论/ ./ 如图/ 6/ (/ b/ )/ 所示/ ,/ 如果/ 元组/ p/ 落/ 在/ 阴影/ 1/ 中/ ,/ r/ 完全/ 动态/ 支配/ 元组/ p/ ,/ r/ 内/ 所有/ 数据/ 点/ 都/ 可以/ 动态/ 支配/ p/ ./ 如果/ 元组/ p/ 落/ 在/ 阴影/ 2/ 中/ ,/ 表示/ r/ 内/ 可能/ 存在/ 可以/ 动态/ 支配/ p/ 的/ 元组/ ./ 如果/ 元组/ p/ 落/ 在/ 阴影/ 外面/ ,/ 表示/ r/ 内/ 的/ 任意/ 元组/ 都/ 不/ 可能/ 动态/ 支配/ p/ ./ (/ 2/ )/ 元组/ 与/ 元组/ 间/ 的/ 动态/ 支配/ 关系/ 当/ 某个/ 叶子/ 划分/ r/ 和/ 元组/ p/ 之间/ 的/ 动态/ 支配/ 关系/ 不能/ 通过/ 定理/ 3/ 和/ 推论/ 1/ 进行/ 判断/ 时/ ,/ 需要/ 进一步/ 拆分/ 叶子/ 划分/ r/ ,/ 利用/ 倒排/ 索引/ 来/ 判断/ 元组/ p/ 与/ 叶子/ 划分/ r/ 内/ 元组/ 之间/ 的/ 动态/ 支配/ 关系/ ,/ 具体方法/ 如下/ :/ 给定/ 查询/ 点/ q/ 和/ 数据/ 点/ p/ ,/ 首先/ 根据/ p/ 和/ q/ 的/ 坐标/ 计算/ 出/ p/ 与/ q/ 在/ 各个/ 维度/ 上/ 的/ 距离/ ,/ 然后/ 把/ 这些/ 距离/ 值/ 作为/ 限定值/ ,/ 在/ 叶子/ 划分/ r/ 的/ d/ 个/ 维度/ 上/ 利用/ 倒排/ 索引/ 结构/ 进行/ 扫描/ ./ 如果/ 某/ 一个/ 元组/ p/ 被/ 扫描/ d/ 次/ ,/ 那么/ p/ 可以/ 动态/ 支配/ p/ ;/ 如果/ 元组/ p/ 被/ 扫描/ 1/ 次到/ d/ -/ 1/ 次/ ,/ 那么/ p/ 与/ p/ 不能/ 互相/ 动态/ 支配/ ./ 当某/ 元组/ p/ 完全/ 没有/ 被/ 扫描/ 到/ ,/ 那么/ p/ 可以/ 动态/ 支配/ p/ ./ 通过/ 倒排/ 索引/ 的/ 采用/ ,/ 依据/ 上述/ 方法/ ,/ 可以/ 完成/ 对/ 叶子/ 划分/ 内/ 的/ 所有/ 数据/ 点/ 的/ 批量/ 处理/ ./ 如图/ 7/ 中/ 所示/ ,/ 给出/ 查询/ 点/ q/ 〈/ 0.55/ ,/ 0.65/ 〉/ 和/ 元组/ p24/ 〈/ 0.7/ ,/ 0.75/ 〉/ ,/ r1/ (/ 〈/ 0.5/ ,/ 0/ 〉/ ,/ 〈/ 1/ ,/ 1/ 〉/ ,/ 8/ )/ 与/ p24/ 的/ 动态/ 支配/ 关系/ 不能/ 通过/ 定理/ 3/ 和/ 4/ 判定/ ,/ 需要/ 进一步/ 分解/ r1/ ./ p24/ 与/ q/ 在/ 两个/ 维度/ 上/ 的/ 距离/ 是/ 0.15/ 和/ 0.1/ ,/ 那么/ 在/ 扫描/ 倒排/ 索引/ 时/ ,/ 第/ 1/ 维上/ 与/ q/ 距离/ 不/ 大于/ 0.15/ 的/ 元组/ 是/ p1/ 、/ p2/ 、/ p8/ ;/ 类似/ 地/ ,/ 第/ 2/ 维上/ 扫描/ 得到/ 的/ 元组/ 是/ p2/ 、/ p14/ ./ p2/ 被/ 扫描/ 到/ 2/ 次/ ,/ 所以/ p2/ 可以/ 动态/ 支配/ p24/ ;/ p8/ 、/ p14/ 与/ p24/ 之间/ 没有/ 动态/ 支配/ 关系/ ,/ p24/ 可以/ 动态/ 支配/ r1/ 中/ 的/ 所有/ 其他/ 数据/ 点/ ./ 根据/ 定理/ 1/ 可知/ ,/ 当/ p24/ 插入/ 到/ 数据流/ 中后/ ,/ 划分/ r1/ 的/ 更新/ 将/ 只/ 保留/ 所有/ 被/ 扫描/ 到/ 的/ 元组/ ,/ 删除/ 除/ p1/ 、/ p2/ 、/ p8/ 、/ p14/ 以外/ 的/ 所有/ 其他/ 元组/ ,/ 并/ 插入/ p24/ ./ 4.3/ 基本/ 的/ 数据流/ 上/ 动态/ 轮廓/ 算法/ BDS2/ 当某/ 一个/ 查询/ 点/ q/ 被/ 首次/ 提交/ 时/ ,/ 需要/ 进行/ 初始化/ 计算/ ,/ 快速/ 地/ 找到/ 当前/ 滑动/ 窗口/ 中/ 动态/ 轮廓/ 集合/ ;/ 而后/ ,/ 当/ 每次/ 窗口/ 滑动/ 时/ ,/ 需要/ 动态/ 维护/ 数据流/ 上/ 的/ 动态/ 轮廓/ ./ 4.3/ ./ 1BDS2/ 的/ 初始化/ 根据/ 定理/ 1/ 可知/ ,/ 在/ 初始化/ 的/ 过程/ 中/ ,/ 不但/ 需要/ 找到/ 当前/ 滑动/ 窗口/ 结果/ 集/ RS/ ,/ 同时/ 还要/ 保留/ 候选/ 集中/ 的/ 所有/ 点/ ./ 为了/ 进行/ 划分/ 间/ 的/ 空间/ 过滤/ ,/ 对/ 每个/ 划分/ r/ ,/ 保留/ 一个/ 最大/ 标签/ 值/ r/ ./ maxlabel/ 用来/ 存储/ 该/ 划分/ 中/ 最晚/ 到达/ 元组/ 的/ 标签/ ./ 如图/ 2/ 中/ 所示/ ,/ 当/ 元组/ p1/ ~/ p23/ 在/ 滑动/ 窗口/ 中/ 时/ ,/ 滑动/ 窗口/ 中/ 的/ 数据/ 的/ 索引/ 可见/ 图/ 3/ 和/ 图/ 4/ ,/ r0/ ,/ 0/ ,/ 0/ ./ maxlabel/ =/ 22/ 、/ r0/ ,/ 0/ ,/ 1/ ./ maxlabel/ =/ 21/ 、/ r0/ ,/ 1/ ./ maxlabel/ =/ 23/ 、/ r1/ ./ maxlabel/ =/ 16/ ./ 在/ BDS2/ 的/ 初始化/ 中/ ,/ 需要/ 维护/ 一个/ 堆/ H/ ,/ 需要/ Page10/ 注意/ 的/ 是/ ,/ 堆/ H/ 中/ 既/ 可以/ 存储/ 划分/ 也/ 可以/ 存储/ 元组/ ,/ 且/ 堆/ 中/ 的/ 每个/ 元素/ e/ (/ 划分/ 或/ 元组/ )/ 都/ 按照/ 函数/ 值/ f/ (/ e/ ,/ q/ )/ 由小到大/ 进行/ 排序/ ./ f/ (/ e/ ,/ q/ )/ =/ 将/ 元素/ 按/ 函数/ 值/ f/ (/ e/ ,/ q/ )/ 由小到大/ 进行/ 排序/ 后/ ,/ 根据/ 动态/ 支配/ 的/ 定义/ ,/ 可知/ 排/ 在/ 后面/ 的/ 元素/ 永远/ 不/ 可能/ 完全/ 动态/ 支配/ 排/ 在/ 前面/ 的/ 元素/ ./ BDS2/ 初始化/ 过程/ 如下/ :/ (/ 1/ )/ 由分/ 层次/ 划分/ 的/ 根/ 节点/ 开始/ 遍历/ 查找/ ,/ 把/ 根/ 节点/ 的/ 所有/ 孩子/ 划分/ 加入/ 到/ 堆/ H/ 中/ 并/ 按/ 函数/ 值/ f/ (/ e/ ,/ q/ )/ 排序/ ;/ (/ 2/ )/ 取堆/ 中首/ 元素/ e/ 进行/ 处理/ :/ ①/ 当/ e/ 是/ 划分/ 时/ ,/ 若/ 被/ 当前/ 结果/ 集中/ 或/ 候选/ 集中/ 的/ 某个/ 元组/ p/ 完全/ 动态/ 支配/ ,/ 且/ p/ ./ label/ >/ e/ ./ maxlabel/ ,/ 则/ 删除/ e/ (/ 满足/ 定理/ 1/ 和/ 定理/ 3/ )/ ;/ 否则/ ,/ 把/ e/ 的/ 孩子/ (/ 孩子/ 划分/ 或/ 元组/ )/ 加入/ 到/ 堆/ H/ 中/ 并/ 排序/ ;/ ②/ 当/ e/ 是/ 元组/ 时/ ,/ 若/ e/ 不/ 被/ 结果/ 集中/ 任意/ 元组/ 动态/ 支配/ ,/ 把/ e/ 加入/ 到/ 结果/ 集中/ ;/ 若/ e/ 被/ 当前/ 结果/ 集中/ 或/ 候选/ 集中/ 的/ 某个/ 元组/ p/ 动态/ 支配/ ,/ 且/ p/ ./ label/ >/ e/ ./ label/ ,/ 则/ 删除/ e/ (/ 满足/ 定理/ 1/ )/ ;/ 否则/ ,/ 把/ e/ 加入/ 到/ 候选/ 集中/ ./ 需要/ 注意/ 的/ 是/ ,/ 由于/ 元素/ 都/ 是/ 按/ 函数/ 值/ f/ (/ e/ ,/ q/ )/ 由小到大/ 的/ 顺序/ 进行/ 扫描/ ,/ 所以/ 后/ 扫描/ 元素/ 永远/ 不/ 可能/ 动态/ 支配/ 先/ 扫描/ 元素/ ./ 算法/ 3/ ./ BDS2/ 初始化/ 描述/ ./ 输入/ :/ 滑动/ 窗口/ 数据/ 集/ DN/ ,/ 查询/ 点/ q/ 输出/ :/ 当前/ 滑动/ 窗口/ 结果/ 集/ RS/ ,/ 候选/ 集/ CS1/ ./ 初始化/ H/ =/ / ;/ // // 可用/ 来/ 存储/ 划分/ 或/ 元组/ 元素/ 2/ ./ 把/ 划分/ 根/ 节点/ 的/ 孩子/ 划分/ 加入/ 到/ 堆/ H/ 中/ ,/ 并/ 按照/ 3/ ./ While/ (/ H/ 不为/ 空/ )/ 4/ ./ 取/ H/ 的/ 首/ 元素/ e/ ;/ 5/ ./ If/ (/ e/ 是/ 划分/ 元素/ )/ 6/ ./ If/ (/ e/ 被/ RS/ 或/ CS/ 中/ 某个/ 元组/ p/ 完全/ 动态/ 支配/ ,/ 7/ ./ continue/ ;/ 8/ ./ ElseIf/ (/ e/ 是/ 叶子/ 划分/ )/ 9/ ./ 把/ e/ 中/ 满足/ 定理/ 1/ 的/ 元组/ 全部/ 删除/ ,/ 剩余/ 的/ 10/ ./ Else11/ ./ 把/ e/ 的/ 孩子/ 划分/ 按/ 顺序/ 插入/ 到/ H/ 中/ ;/ 12/ ./ EndIf13/ ./ EndIf14/ ./ If/ (/ e/ 是/ 元组/ 元素/ )/ 15/ ./ If/ (/ e/ 不/ 被/ RS/ 中/ 元组/ 动态/ 支配/ )/ ;/ 16/ ./ 把/ e/ 插入/ 到/ RS/ 中/ ;/ continue/ ;/ 17/ ./ ElseIf/ (/ e/ 被/ RS/ 或/ CS/ 中/ 某个/ 元组/ p/ 动态/ 支配/ ,/ 18/ ./ continue/ ;/ 19/ ./ Else20/ ./ 把/ e/ 插入/ 到/ CS/ 中/ ;/ 21/ ./ EndIf22/ ./ EndIf23/ ./ EndWhile/ 例/ 1/ (/ BDS2/ 初始化/ )/ ./ 如图/ 2/ 所示/ ,/ 把/ 分/ 层次/ 划分/ 根/ 节点/ 的/ 孩子/ 划分/ 加入/ 后/ ,/ H/ =/ {/ r1/ ,/ r0/ }/ ./ 首先/ 处理/ r1/ ,/ 把/ r1/ 中/ 不/ 满足/ 定理/ 1/ 的/ 元组/ 加入/ 到/ 堆/ H/ 中/ ,/ 得到/ H/ =/ {/ r0/ ,/ p2/ ,/ p8/ ,/ p14/ ,/ p1/ ,/ p15/ ,/ p16/ }/ ./ 接着/ 处理/ r0/ ,/ 得到/ H/ =/ {/ r0/ ,/ 1/ ,/ p2/ ,/ r0/ ,/ 0/ ,/ p8/ ,/ p14/ ,/ p1/ ,/ p15/ ,/ p16/ }/ ./ 依此/ 处理/ 后/ ,/ 最终/ 得到/ 结果/ 集/ RS/ =/ {/ p2/ ,/ p1/ }/ ,/ 候选/ 集/ CS/ =/ {/ p7/ ,/ p8/ ,/ p19/ ,/ p23/ }/ ./ 4.3/ ./ 2BDS2/ 的/ 更新/ 维护/ 在/ 数据流/ 上/ 动态/ 轮廓/ 维护/ 主要/ 包括/ 两个/ 操作/ :/ (/ 1/ )/ 处理/ 失效/ 元组/ pold/ ;/ (/ 2/ )/ 处理/ 插入/ 元组/ pnew/ ./ 通过/ 简单/ 的/ 观测/ ,/ 可以/ 很/ 轻易/ 地/ 得到/ 以下/ 结论/ ./ 数据流/ 上/ 的/ 待/ 失效/ 元组/ pold/ 如果/ 没有/ 提前/ 被/ 删除/ ,/ 那么/ pold/ 只/ 可能/ 属于/ 结果/ 集合/ ./ 插入/ 数据流/ 的/ 新元/ 组/ pnew/ 只能/ 属于/ 结果/ 集合/ 或者/ 候选/ 结合/ ./ (/ 1/ )/ 失效/ 元组/ pold/ 的/ 处理/ :/ 如果/ pold/ 属于/ 结果/ 集合/ ,/ 则/ 需要/ 更新/ 结果/ 集/ ,/ 同时/ 将/ 只/ 被/ pold/ 动态/ 支配/ 的/ 点/ 加入/ 到/ 结果/ 集合/ 中/ ;/ (/ 2/ )/ 新/ 插入/ 元组/ pnew/ 的/ 处理/ :/ ①/ 根据/ 定理/ 1/ ,/ 把/ 所有/ 被/ pnew/ 动态/ 支配/ 的/ 数据/ 点/ 删除/ ;/ 如/ 4.2/ ./ 2/ 小节/ 所/ 介绍/ 的/ ,/ 首先/ 从根/ 节点/ 开始/ 处理/ ,/ 在/ 处理/ 某个/ 划分/ r/ 时/ ,/ 如果/ r/ 是/ 中间/ 划分/ ,/ 当/ r/ 被/ pnew/ 完全/ 动态/ 支配/ 时/ ,/ 在/ 索引/ 中/ 删除/ 整个/ r/ ;/ 当/ r/ 被/ pnew/ 部分/ 动态/ 支配/ 时/ ,/ 把/ r/ 的/ 孩子/ 划分/ 加入/ 待处理/ 集合/ ;/ 当/ r/ 不能/ 被/ pnew/ 部分/ 动态/ 支配/ 时/ ,/ 跳过/ 不/ 处理/ r/ ./ 如果/ r/ 是/ 叶子/ 划分/ ,/ 利用/ 图/ 7/ 中所/ 介绍/ 的/ 方法/ ,/ 快速/ 地/ 删除/ r/ 中/ 所有/ 被/ pnew/ 动态/ 支配/ 的/ 数据/ 点/ ./ ②/ 如果/ pnew/ 不/ 被/ 现有/ 结果/ 集合/ 中/ 的/ 点/ 动态/ 支配/ ,/ 把/ pnew/ 加入/ 到/ 结果/ 集合/ 中/ ;/ 反之/ ,/ 把/ pnew/ 加入/ 到/ 候选/ 集合/ 中/ ./ 根据/ 上面/ 两个/ 部分/ 的/ 处理/ ,/ 就/ 可以/ 完成/ 数据流/ 上/ 的/ 动态/ 轮廓/ 的/ 维护/ ./ 算法/ 4/ 描述/ 了/ 更新/ 维护/ 过程/ 的/ 具体/ 细节/ ./ 算法/ 4/ ./ BDS2/ 更新/ 维护/ 的/ 描述/ ./ 输入/ :/ 滑动/ 窗口/ 大小/ N/ ,/ 查询/ 点/ q/ ,/ 新/ 插入/ 元组/ pnew/ ,/ 待/ Page11/ 输出/ :/ 更新/ 后/ 滑动/ 窗口/ 结果/ 集/ RS/ ,/ 候选/ 集/ CS1/ ./ While/ (/ 有/ 新元/ 组/ pnew/ 插入/ 到/ 数据流/ 中/ )/ 2/ ./ If/ (/ 滑动/ 窗口/ 已满/ )/ 3/ ./ 删除/ 待/ 失效/ 元组/ pold/ ;/ 4/ ./ If/ (/ pold/ 属于/ 结果/ 集合/ )/ 5/ ./ 把/ 数据流/ 中/ 只/ 被/ pold/ 动态/ 支配/ 的/ 点/ 加入/ 到结/ 6/ ./ EndIf7/ ./ EndIf8/ ./ 把/ 所有/ 被/ pnew/ 动态/ 支配/ 的/ 元组/ 删除/ ;/ 9/ ./ If/ (/ pnew/ 被/ 现有/ 结果/ 集中/ 的/ 元组/ 动态/ 支配/ )/ 10/ ./ 把/ pnew/ 加入/ 到/ 候选/ 集/ CS/ 中/ ;/ 11/ ./ Else12/ ./ 把/ pnew/ 加入/ 到/ 结果/ 集/ RS/ 中/ ;/ 13/ ./ EndIf14/ ./ EndWhile/ 根据/ 算法/ 4/ 中/ 的/ 第/ 5/ 行/ 可知/ ,/ 当/ 失效/ 元组/ pold/ 属于/ 结果/ 集时/ ,/ 需要/ 找到/ 所有/ 只/ 被/ pold/ 动态/ 支配/ 的/ 元组/ ./ 这里/ 需要/ 检测/ 每/ 一个/ 候选/ 集中/ 的/ 元组/ ,/ 判断/ 其/ 是否/ 被/ 候选/ 集合/ 和/ 结果/ 集中/ 的/ 其他/ 元组/ 动态/ 支配/ ./ 如果/ 不能/ ,/ 证明/ 该/ 元组/ 只能/ 被/ pold/ 动态/ 支配/ ./ 这里/ 的/ 计算/ 代价/ 是/ O/ (/ |/ CS/ |/ ×/ (/ |/ CS/ |/ +/ |/ RS/ |/ )/ ×/ d/ )/ ./ 在/ 算法/ 第/ 8/ 行中/ ,/ 需要/ 删除/ 所有/ 被/ pnew/ 动态/ 支配/ 的/ 元组/ ,/ 这里/ 可以/ 采用/ 4.2/ ./ 2/ 小节/ 中/ 介绍/ 的/ 算法/ ,/ 从分/ 层次/ 划分/ 索引/ 的/ 根/ 节点/ 开始/ 遍历/ ,/ 利用/ 定理/ 3/ 和/ 倒排/ 索引/ 结构/ 进行/ 剪枝/ 计算/ ,/ 从而/ 快速/ 地/ 完成/ 删除/ 过程/ ./ 根据/ 算法/ BDS2/ 的/ 更新/ 描述/ 可知/ ,/ 大部分/ 情况/ 下/ 的/ 更新/ 操作/ 都/ 是/ 在/ 短时间/ 内/ 完成/ ./ 但/ 当/ 失效/ 点/ pold/ 属于/ 结果/ 集合/ RS/ 时/ ,/ 算法/ 4/ 的/ 第/ 5/ 行/ 被/ 调用/ ,/ 导致/ 计算/ 时间/ 会/ 急剧/ 增加/ ,/ 计算/ 时/ 的/ 不稳定性/ 使得/ BDS2/ 不能/ 很/ 好/ 地/ 满足/ 数据流/ 环境/ ./ 为了/ 更加/ 稳定/ 地/ 计算/ 数据流/ 上/ 的/ 动态/ 轮廓/ 问题/ ,/ 通过/ 设计/ 合理/ 的/ 数据结构/ ,/ 提出/ 了/ 更加/ 稳定/ 的/ 算法/ IDS2/ ./ 4.4/ 改进/ 的/ 数据流/ 上/ 动态/ 轮廓/ 算法/ IDS2/ 为/ 有效/ 避免/ 在/ 处理/ 某些/ 失效/ 元组/ 时/ 开销/ 过大/ 的/ 问题/ ,/ 保证/ 数据流/ 上/ 动态/ 轮廓/ 处理/ 的/ 稳定性/ ,/ 我们/ 给出/ 了/ 改进/ 算法/ IDS2/ ./ 在/ BDS2/ 基础/ 上/ ,/ 对于/ 每个/ 候选/ 元组/ p/ ,/ 都/ 需要/ 找到/ 能/ 最晚/ 动态/ 支配/ p/ 的/ 元组/ p/ ,/ 并/ 把/ p/ 加入/ 到/ p/ 的/ 最晚/ 支配/ 集合/ 中/ (/ 记作/ p/ ./ dDom/ (/ )/ )/ ./ 所谓/ p/ 最晚/ 动态/ 支配/ p/ ,/ 指/ 的/ 是/ 在/ 可以/ 动态/ 支配/ p/ 的/ 所有/ 元组/ 中/ ,/ p/ 是/ 其中/ 最/ 晚/ 到达/ 的/ 元组/ ./ 如图/ 2/ 所示/ ,/ 当/ 元组/ p1/ ~/ p21/ 在/ 滑动/ 窗口/ 时/ ,/ p21/ 可以/ 被/ p2/ ,/ p5/ ,/ p6/ ,/ p7/ ,/ p8/ ,/ p14/ ,/ p19/ 动态/ 支配/ ,/ 其中/ p19/ 是/ 最晚/ 到达/ 的/ ,/ 则/ 称/ p19/ 最晚/ 动态/ 支配/ p21/ ,/ 当/ p21/ 进入/ 到/ 滑动/ 窗口/ 时/ ,/ 需要/ 把/ p21/ 加入/ 到/ p19/ ./ dDom/ (/ )/ ./ 根据/ 最/ 晚/ 动态/ 支配/ 的/ 概念/ ,/ 可以/ 得到/ 以下/ 定理/ ./ 定理/ 4/ ./ 当/ 失效/ 元组/ pold/ 属于/ 结果/ 集合/ 时/ ,/ 只/ 被/ pold/ 动态/ 支配/ 的/ 候选/ 元组/ 一定/ 在/ pold/ ./ dDom/ (/ )/ ./ 证明/ ./ 假设/ 候选/ 元组/ p/ 不/ 属于/ pold/ ./ dDom/ (/ )/ ,/ 且/ p/ 只/ 被/ pold/ 动态/ 支配/ ,/ 由于/ p/ 是/ 候选/ 元组/ ,/ 一定/ 存在/ 元组/ p/ 可以/ 动态/ 支配/ p/ ,/ 且/ p/ ./ label/ </ p/ ./ label/ ./ 又/ 因为/ p/ 不/ 属于/ pold/ ./ dDom/ (/ )/ ,/ 所以/ pold/ ./ label/ </ p/ ./ label/ ,/ 所以/ p/ 不是/ 只/ 被/ pold/ 动态/ 支配/ ./ 假设/ 不/ 成立/ ,/ 定理/ 4/ 得证/ ./ 下面/ 介绍/ 给定/ 一个/ 元组/ p/ 时/ ,/ 如何/ 求出/ 最晚/ 动态/ 支配/ p/ 的/ 元组/ ./ 算法/ 5/ ./ 计算/ 最/ 晚/ 动态/ 支配/ p/ 的/ 元组/ LastDom/ (/ p/ )/ ./ 输入/ :/ 元组/ p/ ,/ 当前/ 滑动/ 窗口/ 中/ 的/ 集合/ DN/ 输出/ :/ 最/ 晚/ 动态/ 支配/ p/ 的/ 元组/ 1/ ./ 初始化/ H/ =/ / ;/ // // 可用/ 来/ 存储/ 网格/ 或/ 元组/ 元素/ 2/ ./ 对于/ 分/ 层次/ 划分/ 根/ 节点/ 的/ 每个/ 孩子/ 划分/ r/ ,/ 如果/ r3/ ./ H/ 中/ 每个/ 元素/ e/ 按/ e/ ./ maxlabel/ (/ 或者/ e/ ./ label/ )/ 从大到/ 4/ ./ While/ (/ H/ 不为/ 空/ )/ 5/ ./ 取出/ H/ 的/ 首/ 元素/ e/ ;/ 6/ ./ If/ (/ e/ 是/ 划分/ )/ 7/ ./ If/ (/ e/ 可以/ 完全/ 动态/ 支配/ p/ )/ 8/ ./ 返回/ 序号/ 为/ e/ ./ maxlabel/ 的/ 元组/ ;/ 9/ ./ ElseIf/ (/ e/ 可以/ 部分/ 动态/ 支配/ p/ )/ 10/ ./ If/ (/ e/ 是/ 中间/ 划分/ )/ 11/ ./ 遍历/ e/ 的/ 每个/ 孩子/ 划分/ r/ ,/ 如果/ r/ 可以/ 部/ 12/ ./ ElseIf/ (/ e/ 是/ 叶子/ 划分/ )/ 13/ ./ 利用/ 倒排/ 索引/ 结构/ 找到/ 可以/ 动态/ 支配/ p14/ ./ EndIf15/ ./ EndIf16/ ./ ElseIf/ (/ e/ 是/ 元组/ )/ 17/ ./ 返回/ e/ ;/ 18/ ./ EndIf19/ ./ EndWhile20/ ./ 返回/ 空值/ ;/ 通过/ 算法/ 5/ 的/ 计算/ ,/ 可以/ 找到/ 能够/ 最/ 晚/ 动态/ 支配/ p/ 的/ 元组/ ,/ 如果/ 返回/ 的/ 是/ 空值/ ,/ 表示/ 没有/ 元组/ 可以/ 动态/ 支配/ p/ ./ 例/ 2/ (/ 最/ 晚/ 动态/ 支配/ )/ ./ 在/ 图/ 2/ 中/ ,/ 当/ 元组/ p1/ ~/ Page12p22/ 在/ 滑动/ 窗口/ ,/ p23/ 插入/ 时/ ,/ 需要/ 找到/ 能够/ 最/ 晚/ 支配/ p23/ 的/ 元组/ ./ 算法/ BDS2/ 初始化/ (/ 算法/ 3/ )/ 后/ ,/ 即/ 删除/ 所有/ 满足/ 定理/ 1/ 的/ 元组/ 后/ ,/ 查询/ 点/ q/ 需要/ 维护/ 的/ 结构/ 如图/ 8/ 中/ 所示/ ./ 查找/ p23/ 的/ 最晚/ 动态/ 支配/ 元组/ 时/ ,/ 首先/ 从根/ 节点/ 开始查找/ ,/ 能/ 部分/ 动态/ 支配/ p23/ 的/ 划分/ 有/ r0/ 、/ r1/ ,/ 得到/ H/ =/ {/ r0/ ,/ r1/ }/ ./ 处理/ r0/ 时/ ,/ 把/ r0/ 中/ 可以/ 动态/ 支配/ p23/ 的/ 孩子/ 划分/ 加入/ 到/ H/ 中/ ,/ 得到/ H/ =/ {/ r1/ ,/ r0/ ,/ 1/ }/ ./ 进一步/ 处理/ r1/ ,/ 发现/ 能/ 动态/ 支配/ p23/ 的/ 元组/ 是/ p2/ ,/ 得到/ H/ =/ {/ r0/ ,/ 1/ ,/ p2/ }/ ./ 处理/ r0/ ,/ 1/ 时/ ,/ 可以/ 确定/ r0/ ,/ 1/ 中/ 不/ 存在/ 能够/ 动态/ 支配/ p23/ 的/ 数据/ 点/ ,/ 所以/ 最终/ 确定/ p2/ 是/ 最晚/ 动态/ 支配/ p23/ 的/ 元组/ ./ 通过/ 使用/ 算法/ 5/ ,/ IDS2/ 避免/ 了/ BDS2/ 算法/ 计算/ 时间/ 不/ 稳定/ 的/ 缺点/ ,/ 进一步提高/ 了/ 算法/ 的/ 性能/ ./ 该/ 算法/ 的/ 初始化/ 和/ 更新过程/ 描述/ 如下/ ./ 4.4/ ./ 1IDS2/ 初始化/ 相比/ 于/ BDS2/ ,/ 在/ IDS2/ 的/ 初始化/ 阶段/ ,/ 对于/ 候选/ 集合/ 中/ 的/ 每/ 一个/ 元组/ p/ ,/ 需要/ 额外/ 计算/ 能够/ 最/ 晚/ 动态/ 支配/ p/ 的/ 元组/ p/ ,/ 并/ 将/ p/ 加入/ 到/ p/ ./ dDom/ (/ )/ 中/ ./ 具体/ 过程/ 如/ 算法/ 6/ 所示/ ./ 算法/ 6/ ./ IDS2/ 初始化/ 描述/ ./ 输入/ :/ 滑动/ 窗口/ 数据/ 集/ DN/ ,/ 查询/ 点/ q/ 输出/ :/ 当前/ 滑动/ 窗口/ 结果/ 集/ RS/ ,/ 候选/ 集/ CS/ ,/ 以及/ 每个/ 1/ ./ 用/ 算法/ 3/ 计算/ 滑动/ 窗口/ 中/ 的/ 结果/ 集/ RS/ 和/ 候选/ 集/ CS/ ;/ 2/ ./ For/ (/ CS/ 中/ 的/ 每/ 一个/ 元组/ p/ )/ 3/ ./ p/ =/ LastDom/ (/ p/ )/ ;/ 4/ ./ 把/ p/ 加入/ 到/ p/ ./ dDom/ (/ )/ ;/ 5/ ./ EndFor/ 例/ 3/ (/ IDS2/ 初始化/ )/ ./ 在/ 例/ 1/ 中/ 已/ 介绍/ 过/ ,/ 当/ p1/ ~/ p23/ 在/ 滑动/ 窗口/ 中/ 时/ ,/ 结果/ 集/ RS/ =/ {/ p2/ ,/ p1/ }/ ,/ 候选/ 集/ CS/ =/ {/ p7/ ,/ p8/ ,/ p19/ ,/ p23/ }/ ./ 对/ 候选/ 集中/ 每个/ 元组/ ,/ 用/ 算法/ 5/ 计算/ 它们/ 的/ 最晚/ 动态/ 支配/ 元组/ ,/ 可/ 得到/ p2/ ./ dDom/ =/ {/ p7/ ,/ p8/ ,/ p19/ ,/ p23/ }/ ./ 当/ p2/ 失效/ 时/ ,/ 如果/ p7/ ,/ p8/ ,/ p19/ ,/ p23/ 没有/ 被/ 加入/ 到/ 删除/ 集合/ 中/ ,/ 那么/ 它们/ 将/ 成为/ 结果/ 元组/ ./ 4.4/ ./ 2IDS2/ 的/ 更新/ 维护/ 同/ 算法/ BDS2/ 类似/ ,/ IDS2/ 的/ 更新/ 维护/ 同样/ 包括/ 两/ 部分/ :/ (/ 1/ )/ 处理/ 失效/ 元组/ pold/ ;/ (/ 2/ )/ 处理/ 插入/ 元组/ pnew/ ./ 具体/ 如下/ :/ (/ 1/ )/ 失效/ 元组/ pold/ 的/ 处理/ :/ 把/ pold/ ./ dDom/ (/ )/ 集合/ 中/ 的/ 元组/ 加入/ 到/ 结果/ 集合/ 中/ ,/ 然后/ 删除/ pold/ ./ (/ 2/ )/ 插入/ 元组/ pnew/ 的/ 处理/ :/ 删除/ 当前/ 候选/ 集合/ 和/ 结果/ 集合/ 中/ 被/ pnew/ 动态/ 支配/ 的/ 元组/ ;/ 找到/ 最/ 晚/ 动态/ 支配/ pnew/ 的/ 点/ p/ ,/ 把/ pnew/ 加入/ p/ ./ dDom/ (/ )/ ./ 根据/ 上面/ 的/ 描述/ ,/ 给出/ 算法/ IDS2/ 的/ 伪/ 代码/ 描述/ ./ 算法/ 7/ ./ IDS2/ 算法/ 的/ 更新/ 维护/ ./ 输入/ :/ 滑动/ 窗口/ 大小/ N/ ,/ 查询/ 点/ q/ ,/ 新/ 插入/ 元组/ pnew/ ,/ 待/ 输出/ :/ 当前/ 滑动/ 窗口/ 的/ 结果/ 集合/ RS1/ ./ While/ (/ 有/ 新元/ 组/ pnew/ 插入/ 到/ 数据流/ 中/ )/ 2/ ./ If/ (/ 滑动/ 窗口/ 已满/ )/ 3/ ./ 删除/ 待/ 失效/ 元组/ pold/ ;/ 4/ ./ If/ (/ pold/ 属于/ 结果/ 集合/ )/ 5/ ./ 把/ pold/ ./ dDom/ (/ )/ 中/ 的/ 元组/ 加入/ 到/ RS/ 中/ ;/ 6/ ./ EndIf7/ ./ EndIf8/ ./ 把/ 所有/ 被/ pnew/ 动态/ 支配/ 的/ 元组/ 加入/ 到/ 删除/ 集合/ ;/ 9/ ./ p/ =/ LastDom/ (/ pnew/ )/ ;/ 10/ ./ If/ (/ p/ 点/ 不/ 存在/ )/ 11/ ./ 把/ pnew/ 加入/ 到/ 结果/ 集中/ ;/ 12/ ./ Else13/ ./ 把/ pnew/ 加入/ 到/ p/ ./ dDom/ (/ )/ 中/ ;/ 14/ ./ 返回/ 现有/ 结果/ 集/ RS/ ;/ 15/ ./ EndWhile/ 根据/ 上面/ 关于/ 算法/ IDS2/ 的/ 描述/ ,/ 第/ 8/ 行/ 需要/ 判断/ 新/ 插入/ 点/ pnew/ 和/ 整体/ 维护/ 集合/ 的/ 动态/ 支配/ 关系/ ./ 第/ 9/ 行/ 利用/ 算法/ 5/ 找到/ 能够/ 最/ 晚/ 动态/ 支配/ pnew/ 的/ 点/ ./ 5/ 算法/ 分析/ 下面/ 对/ 本文/ 所/ 提出/ 的/ 算法/ 的/ 计算/ 代价/ 进行/ 了/ 分析/ ,/ 给出/ 了/ 两种/ 算法/ 的/ 时间/ 和/ 空间/ 复杂度/ ./ 5.1/ 时间/ 复杂度/ 分析/ (/ 1/ )/ 初始化/ 过程/ 初始化/ 阶段/ ,/ 算法/ BDS2/ 需要/ 找到/ 当前/ 滑动/ 窗口/ 上/ 的/ 结果/ 集合/ RS/ 和/ 候选/ 集合/ CS/ ./ 假设/ 元组/ 均匀分布/ ,/ 分/ 层次/ 划分/ 为/ O/ (/ logN/ )/ 层/ ,/ 算法/ BDS2/ 初始化/ 过程/ 的/ 计算/ 代价/ 不/ 超过/ O/ (/ logN/ ×/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ Page13/ 根据/ 对/ 算法/ 5/ 的/ 分析/ 可知/ ,/ 计算/ 每个/ 元组/ 的/ 最晚/ 动态/ 支配/ 元组/ 的/ 代价/ 不/ 超过/ O/ (/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ,/ 算法/ IDS2/ 初始化/ 的/ 计算/ 代价/ O/ (/ (/ logN/ +/ |/ CS/ |/ )/ ×/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ (/ 2/ )/ 更新/ 维护/ 过程/ 当/ 滑动/ 窗口/ 中/ 的/ 元组/ 发生/ 更新/ 时/ ,/ 本文/ 所/ 提出/ 的/ 组合/ 索引/ 结构/ 的/ 更新/ 包括/ 2/ 部分/ :/ ①/ 从根/ 划分/ 开始/ ,/ 定位/ 更新/ 元组/ 所属/ 的/ 叶子/ 划分/ ./ 而分/ 层次/ 划分/ 的/ 最/ 深层次/ 一定/ 不/ 超过/ |/ CS/ |/ // C/ ,/ 所以/ 查找/ 的/ 时间/ 复杂度/ 为/ O/ (/ |/ CS/ |/ ×/ d/ // C/ )/ ,/ 其中/ |/ CS/ |/ 指/ 的/ 是/ 滑动/ 窗口/ 中/ 剩余/ 的/ 数据/ 个数/ ;/ ②/ 根据/ 定位/ 的/ 叶子/ 划分/ ,/ 判定/ 是否/ 需要/ 合并/ 或/ 分裂/ ,/ 若/ 发生/ 合并/ 或者/ 分裂/ ,/ 那么/ 合并/ 或/ 分裂/ 的/ 时间/ 复杂度/ 为/ O/ (/ C/ ×/ d/ )/ ./ 所以/ 组合式/ 索引/ 的/ 最坏/ 更新/ 代价/ 为/ O/ (/ |/ CS/ |/ ×/ d/ // C/ +/ C/ ×/ d/ )/ ./ 其中/ 根据/ 定理/ 2/ 可知/ ,/ |/ CS/ |/ =/ O/ (/ lndN/ // d/ !/ )/ ,/ 为了/ 使/ O/ (/ |/ CS/ |/ ×/ d/ // C/ +/ C/ ×/ d/ )/ 取/ 最小/ ,/ 我们/ 设/ C/ =/ (/ lndN/ // d/ !/ 以/ ,/ 本文/ 提出/ 的/ 索引/ 结构/ 可以/ 快速/ 地/ 完成/ 在/ 数据流/ 上/ 的/ 更新/ ,/ 它/ 的/ 代价/ 是/ O/ (/ (/ lndN/ // d/ !/ 处理/ 失效/ 元组/ 时/ ,/ 如果/ pold/ 不/ 属于/ 结果/ 集合/ ,/ 算法/ BDS2/ 和/ IDS2/ 只/ 需要/ O/ (/ 1/ )/ 次/ 操作/ ;/ 反之/ ,/ 如果/ pold/ 属于/ 结果/ 集合/ ,/ 算法/ BDS2/ 要/ 比/ IDS2/ 复杂/ 得/ 多/ ./ BDS2/ 中/ 找到/ 只/ 被/ pold/ 动态/ 支配/ 的/ 元组/ 的/ 计算/ 代价/ 为/ O/ (/ |/ CS/ |/ ×/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ 在/ IDS2/ 算法/ 中/ ,/ 处理/ 失效/ 元组/ pold/ 时/ ,/ 只/ 需要/ 把/ pold/ ./ dDom/ (/ )/ 中/ 的/ 元组/ 加入/ 到/ 结果/ 集合/ 中/ ,/ 由于/ pold/ ./ dDom/ (/ )/ 中/ 的/ 元组/ 数目/ 都/ 是/ 常数/ ,/ 所以/ IDS2/ 算法/ 处理/ 旧/ 元组/ 失效/ 的/ 时间/ 复杂度/ 为/ O/ (/ 1/ )/ ./ 整理/ 后/ 可知/ ,/ 处理/ 失效/ 元组/ 时/ ,/ 算法/ BDS2/ 的/ 计算/ 代价/ 为/ O/ (/ |/ CS/ |/ ×/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ,/ 而/ 算法/ IDS2/ 的/ 计算/ 代价/ 为/ O/ (/ 1/ )/ ./ 处理/ 插入/ 新/ 数据/ pnew/ 时/ ,/ 首先/ 需要/ 删除/ 所有/ 被/ pnew/ 动态/ 支配/ 的/ 点/ ,/ 最坏/ 情况/ 下/ ,/ 需要/ 遍历/ q/ 保留/ 的/ 所有/ 数据/ 点/ ,/ 计算/ 代价/ 为/ O/ (/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ 接下来/ 算法/ BDS2/ 只/ 需要/ 判定/ pnew/ 是否/ 被/ 现有/ 的/ 轮廓/ 集合/ 动态/ 支配/ ,/ 计算/ 代价/ 为/ O/ (/ |/ RS/ |/ ×/ d/ )/ ,/ 所以/ BDS2/ 处理/ 新元/ 组/ 的/ 时间/ 复杂度/ 为/ O/ (/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ 而/ IDS2/ 需要/ 找到/ pnew/ 的/ 最晚/ 支配/ 点/ ,/ 最坏/ 情况/ 下/ ,/ 依然/ 是/ 遍历/ q/ 的/ 保留/ 数据/ ,/ 所以/ IDS2/ 插入/ 新元/ 组/ 的/ 时间/ 复杂度/ 为/ O/ (/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ 根据/ 以上/ 分析/ ,/ 更新/ 维护/ 过程/ 中/ ,/ 算法/ BDS2/ 的/ 时间/ 复杂度/ 为/ O/ (/ |/ CS/ |/ ×/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ,/ 而/ IDS2/ 的/ 时间/ 复杂度/ 为/ O/ (/ (/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ 5.2/ 空间/ 复杂度/ 分析/ 对于/ 查询/ 点/ q/ ,/ BDS2/ 算法/ 需要/ 维护/ 的/ 数据/ 元组/ 个数/ 为/ |/ RS/ |/ +/ |/ CS/ |/ ,/ 每个/ 元组/ 需要/ 维护/ d/ 维/ 属性/ 值/ ./ 同时/ ,/ 算法/ BDS2/ 还/ 需要/ 对/ 候选/ 集合/ 和/ 结果/ 集合/ 中/ 的/ 元组/ 维护/ 它/ 的/ 组合/ 索引/ 结构/ ,/ 包括/ 分/ 层次/ 划分/ 和/ 倒排/ 索引/ 结构/ ./ 分/ 层次/ 划分/ 一共/ 需要/ 维护/ O/ (/ logN/ )/ 个/ 划分/ ,/ 每个/ 划分/ 需要/ 维护/ 2d/ +/ 2/ 个/ 属性/ 值/ (/ 包括/ 上/ 下界/ 点/ 、/ 最大/ 标签/ ,/ 子/ 划分/ 内/ 元组/ 个数/ )/ ./ 倒排/ 索引/ 中/ 需要/ 维护/ 的/ 元组/ 数目/ 仍为/ |/ RS/ |/ +/ |/ CS/ |/ ./ 所以/ ,/ 对于/ 每个/ 查询/ 点/ q/ ,/ 算法/ BDS2/ 的/ 空间/ 复杂度/ 为/ O/ (/ (/ logN/ +/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ 对于/ 每个/ 候选/ 元组/ p/ ,/ 算法/ IDS2/ 需要/ 计算/ 它/ 的/ 最晚/ 动态/ 支配/ 元组/ p/ ,/ 并/ 把/ p/ 插入/ 到/ p/ ./ dDom/ (/ )/ ./ 由于/ 每个/ 候选/ 元组/ 只/ 存在/ 一个/ 最/ 晚/ 支配/ 点/ ,/ 所有/ 的/ p/ ./ dDom/ (/ )/ 集合/ 加在一起/ 就是/ 整个/ 候选/ 集/ 大小/ ,/ 所以/ IDS2/ 算法/ 只/ 需要/ 多/ 维护/ |/ CS/ |/ 个/ 数据/ 元组/ ,/ IDS2/ 的/ 空间/ 复杂度/ 也/ 为/ O/ (/ (/ logN/ +/ |/ RS/ |/ +/ |/ CS/ |/ )/ ×/ d/ )/ ./ 6/ 实验/ 分析/ 6.1/ 实验/ 设置/ 在/ 本/ 小节/ 中/ ,/ 使用/ Visual/ C++/ 语言/ 实现/ 了/ 数据流/ 上/ 动态/ 轮廓/ 算法/ BDS2/ 和/ IDS2/ ./ 实验/ 环境/ 为/ Inteli7/ -/ 2600CPU/ @/ 3.4/ GHz/ ;/ 8MBDDR3/ 内存/ ;/ 1TB/ 硬盘/ 和/ Windows7/ 操作系统/ ./ 在/ 本/ 小节/ 中/ ,/ 将/ 本文/ 算法/ BDS2/ 、/ IDS2/ 和/ GDBS/ [/ 6/ ]/ 以及/ R/ -/ tree/ 算法/ 进行/ 了/ 验证/ 比较/ ./ GDBS/ 算法/ 的/ 大体/ 过程/ 已/ 在/ 2.2/ 小节/ 中/ 介绍/ ./ 其中/ ,/ R/ -/ tree/ 算法/ 是/ 为了/ 专门/ 测试/ 本文/ 提出/ 的/ 混合式/ 索引/ 的/ 效果/ ,/ 所以/ 采用/ 了/ R/ -/ tree/ 索引/ 结构/ 和/ IDS2/ 的/ 处理/ 框架/ ./ 本文/ 分别/ 用/ 真实/ 数据/ 和/ 合成/ 数据/ 验证/ 算法/ 性能/ ./ 真实/ 数据/ 采用/ 的/ 是/ 股票/ 数据/ ①/ (/ 共/ 包含/ 2/ ×/ 106/ 条/ 股票/ 记录/ ,/ 每条/ 股票/ 记录/ 包含/ 4/ 个/ 属性/ :/ 交易量/ 、/ 股票/ 涨幅/ 价格/ 、/ 年内/ 最高价/ 和/ 年内/ 最低价/ )/ ./ 在/ 初始化/ 阶段/ ,/ 滑动/ 窗口/ 大小/ 设为/ 106/ ./ 实验/ 中/ 随机/ 生成/ 了/ 100/ 个/ 查询/ 点/ 进行/ 了/ 动态/ 轮廓/ 查询/ ,/ 并/ 记录/ 了/ 100/ 次/ 查询/ 的/ 平均/ 处理/ 时间/ 和/ 结果/ 集合/ 大小/ 的/ 平均值/ ./ 在/ 更新/ 阶段/ ,/ 对/ 每个/ 查询/ 点/ 进行/ 了/ 1000/ 次/ 更新/ 操作/ ,/ 然后/ 记录/ 了/ 每个/ 查询/ 点/ 更新/ 1/ 次/ 的/ 平均/ 时间/ ,/ 以及/ 结果/ 集/ 大小/ 的/ 平均值/ ./ 真实/ 数据/ 的/ 实验/ 结果/ 如表/ 2/ 中/ 所示/ ./ 如表/ 2/ 中/ 所示/ ,/ 在/ 初始化/ 阶段/ ,/ 算法/ IDS2/ 的/ 处理/ 时间/ 略高于/ BDS2/ ,/ 因为/ 在/ 初始化/ 阶段/ ,/ IDS2/ 需要/ 计算/ 出/ 候选/ 集合/ 中/ 所有/ 数据/ 点/ 的/ 最晚/ 支配/ 点/ ./ 由/ 实验/ 可以/ 看出/ ,/ IDS2/ 计算/ 最/ 晚/ 支配/ 点/ 的/ 速度/ 是/ 非常/ 快/ ①/ http/ :/ // // finance/ ./ yahoo/ ./ com/ // Page14/ 初始化/ 更新/ 的/ ./ GBDS/ 算法/ 和/ R/ -/ tree/ 算法/ 的/ 处理/ 时间/ 要/ 远远/ 高于/ 本文/ 提出/ 的/ 算法/ BDS2/ 和/ IDS2/ ./ 因为/ R/ -/ tree/ 索引/ 结构/ 的/ 建立/ 要/ 比/ 本文/ 的/ 组合式/ 索引/ 结构/ 慢/ ./ 在/ 更新/ 阶段/ ,/ 算法/ IDS2/ 的/ 平均/ 处理/ 时间/ 要略/ 少于/ BDS2/ ,/ 因为/ IDS2/ 算法/ 在/ 处理/ 失效/ 元组/ 时/ ,/ 避免/ 了/ 扫描/ 过程/ ./ 同时/ BDS2/ 和/ IDS2/ 要/ 明显/ 快/ 于/ 算法/ R/ -/ tree/ 和/ GBDS/ ,/ 因为/ GBDS/ 算法/ 在/ 处理/ 4/ 维/ 数据/ 时/ ,/ 维护/ 影响/ 区间/ 是/ 非常/ 耗时/ 的/ ./ R/ -/ tree/ 索引/ 结构/ 的/ 维护/ 时间/ 也/ 远超过/ 组合式/ 索引/ 结构/ 的/ 维护/ 时间/ ./ 合成/ 数据/ 是/ 由/ 轮廓/ 查询/ 标准/ 测试数据/ 生成器/ [/ 3/ ]/ 生成/ 的/ ,/ 包括/ 独立/ 、/ 相关/ 和/ 反/ 相关/ 数据/ 集/ ./ 在/ 相同/ 数据/ 参数/ 下/ ,/ 相关/ 数据分布/ 下/ 获得/ 的/ 轮廓/ 查询/ 的/ 测试/ 效率/ 是/ 最好/ 的/ ./ 而/ 反/ 相关/ 数据分布/ 下/ 获得/ 的/ 轮廓/ 查询/ 测试/ 效率/ 则/ 是/ 最差/ 的/ ./ 本文/ 采用/ 的/ 真实/ 数据/ -/ 股票/ 数据/ 本身/ 并/ 不/ 满足/ 任何/ 分布/ ,/ 但是/ 它/ 的/ 测试/ 效率/ 是/ 处于/ 相关/ 分布/ 和/ 反/ 相关/ 分布/ 之间/ ./ 图/ 9/ 中/ 分别/ 给出/ 了/ 独立/ 、/ 相关/ 、/ 反/ 相关/ 数据/ 集在/ 2/ 维时/ 的/ 分布/ 情况/ ./ (/ 1/ )/ 独立/ 数据/ [/ 3/ ]/ :/ 数据/ 是/ 随机/ 分布/ 的/ ./ (/ 2/ )/ 相关/ 数据/ [/ 3/ ]/ :/ 经过/ 点/ 〈/ 0/ ,/ 0/ ,/ …/ ,/ 0/ 〉/ ,/ 〈/ 1/ ,/ 1/ ,/ …/ ,/ 1/ 〉/ 可以/ 确定/ 一条/ 直线/ line/ ,/ 垂直于/ line/ 的/ 平面/ 有/ 无数/ 多个/ ./ 首先/ ,/ 按/ 正态分布/ 从/ 这些/ 平面/ 中/ 选取/ 一个/ 平面/ ,/ 新/ 生成/ 的/ 数据/ 点将/ 在/ 这个/ 平面/ 内/ ./ 通过/ 正态分布/ 来/ 选择/ 平面/ ,/ 可以/ 保证/ 大多数/ 点/ 集中/ 在/ 中间/ 的/ 平面/ 上/ ,/ 而/ 少数/ 点/ 分布/ 在/ 接近/ 〈/ 0/ ,/ 0/ ,/ …/ ,/ 0/ 〉/ 的/ 〈/ 1/ ,/ 1/ ,/ …/ ,/ 1/ 〉/ 平面/ 内/ ./ 接着/ ,/ 在/ 平面/ 内部/ ,/ 每个/ 维度/ 的/ 属性/ 值以/ 平面/ 中心/ 按/ 正态分布/ 来/ 选择/ ./ 从而/ 可以/ 保证/ 大多数/ 的/ 数据/ 点/ 都/ 接近/ 直线/ line/ ./ 在/ 相关/ 分布/ 数据/ 集中/ ,/ 如果/ 元组/ p/ 在/ 某/ 一维/ 上/ 数值/ 偏/ “/ 好/ ”/ (/ 本文/ 里/ ,/ 值越/ 小/ 被/ 认为/ 越/ 好/ )/ 的话/ ,/ 其他/ 维度/ 上/ 的/ 数值/ 也/ “/ 较/ 好/ ”/ ./ 如图/ 9/ (/ b/ )/ 中/ 所示/ ,/ 经过/ 点/ 〈/ 0/ ,/ 0/ 〉/ 和/ 〈/ 1/ ,/ 1/ 〉/ 可以/ 确定/ 一条/ 对角线/ line/ ,/ 生成/ 的/ 数据/ 点/ 大多数/ 集中/ 在/ 对角线/ line/ 附近/ ./ (/ 3/ )/ 反/ 相关/ 数据/ [/ 3/ ]/ :/ 经过/ 点/ 〈/ 0/ ,/ 0/ ,/ …/ ,/ 0/ 〉/ ,/ 〈/ 1/ ,/ 1/ ,/ …/ ,/ 1/ 〉/ 可以/ 确定/ 一条/ 直线/ line/ ,/ 垂直于/ line/ 的/ 平面/ 有/ 无数/ 多个/ ,/ 其中/ 最/ 中间/ 的/ 平面/ 记为/ plant/ ./ 反/ 相关/ 数据/ 用/ 一个/ 非常/ 小/ 的/ 标准差/ 来/ 选取/ 这些/ 平面/ ,/ 这样/ 选中/ 的/ 平面/ 主要/ 集中/ 在/ plant/ 附近/ 的/ ,/ 几乎/ 不会/ 集中/ 在/ 两边/ 的/ 平面/ ./ 接着/ ,/ 在/ 选定/ 的/ 平面/ 内/ ,/ 以/ 均匀分布/ 来/ 生成/ 数据/ 点/ ./ 生成/ 的/ 数据/ 点/ 都/ 集中/ 在/ 平面/ plant/ 附近/ ./ 在/ 反/ 相关/ 分布/ 中/ ,/ 当/ 元组/ p/ 在/ 某/ 一维/ 上/ 数值/ 偏/ “/ 好/ ”/ 时/ ,/ p/ 在/ 其他/ 几维/ 或/ 1/ 维上/ 的/ 数值/ 会/ “/ 较差/ ”/ ./ 如图/ 9/ (/ c/ )/ 中/ 所示/ ,/ 2/ 维空间/ 上/ ,/ 经过/ 点/ 〈/ 0/ ,/ 0/ 〉/ 和/ 〈/ 1/ ,/ 1/ 〉/ 确定/ 一条/ 对角线/ line/ ./ 生成/ 数据/ 点/ 都/ 集中/ 在/ 经过/ 点/ 〈/ 0/ ,/ 1/ 〉/ 和/ 〈/ 1/ ,/ 0/ 〉/ 的/ 线/ 附近/ ./ 在/ 独立/ 数据/ 集中/ ,/ 每个/ 元组/ 的/ 数值/ 大小/ 与/ 到达/ 顺序/ 无关/ ;/ 在/ 相关/ 数据/ 集中/ ,/ 元组/ 的/ 数值/ 大小/ 与/ 到达/ 时间/ 呈/ 相关/ 分布/ ,/ 即/ 元组/ 的/ 数值/ 越/ “/ 差/ ”/ ,/ 到达/ 时间/ 越/ 早/ ;/ 在/ 反/ 相关/ 数据/ 集中/ ,/ 元组/ 的/ 数值/ 大小/ 与/ 到达/ 时间/ 成反/ 相关/ 分布/ ,/ 即/ 元组/ 的/ 数值/ 越/ “/ 差/ ”/ ,/ 到达/ 时间/ 越晚/ ./ 反/ 相关/ 数据/ 集是/ 为了/ 测试/ 算法/ 在/ 最坏/ 情况/ 下/ 的/ 性能/ 表现/ ,/ 同时/ 在生活中/ ,/ 这种/ 反/ 相关/ 数据/ 集合/ 的/ 存在/ 是/ 非常/ 普遍/ 的/ ,/ 例如/ 文献/ [/ 3/ ]/ 中/ 所/ 列举/ 的/ 酒店/ 各维/ 属性/ 分布/ 就/ 满足/ 反/ 相关/ 分布/ ./ 在/ 实验/ 中/ ,/ 关于/ 子/ 划分/ 约束/ C/ 的/ 取值/ ,/ 本文/ 给出/ 了/ 以下/ 设定/ ./ 根据/ 前文/ 的/ 分析/ ,/ 可知/ 关于/ 子/ 划分/ 约束/ C/ 的/ 取值/ 是/ 一个/ 权衡/ ./ C/ 的/ 设定/ 会/ 影响/ 分/ 层次/ 划分/ 的/ 层次/ 和/ 叶子/ 划分/ 的/ 大小/ ./ 在/ 定位/ 任意/ 元组/ 时/ ,/ 要/ 先/ 找到/ 该/ 元组/ 所属/ 的/ 叶子/ 划分/ ,/ 这里/ 需要/ 消耗/ 的/ 时间/ 为/ O/ (/ |/ CS/ |/ ×/ d/ // C/ )/ ,/ 而后/ 在/ 叶子/ 划分/ 中/ 进行/ 计算/ ,/ 需要/ 的/ 时间/ 复杂度/ 为/ O/ (/ C/ ×/ d/ )/ ./ 根据/ 定理/ 2/ 可知/ ,/ |/ CS/ |/ =/ O/ (/ lndN/ // d/ !/ )/ ,/ 为了/ 使/ O/ (/ |/ CS/ |/ ×/ d/ // C/ +/ C/ ×/ d/ )/ 取/ 最小/ ,/ 我们/ 设/ C/ =/ (/ lndN/ // d/ !/ 单元/ unit/ ,/ 并/ 测试/ 了/ 在/ 不同/ 分布/ 中/ ,/ C/ 取/ 不同/ 值/ 对/ 算法/ 的/ 影响/ ./ 合成/ 数据/ 的/ 主要参数/ 变化/ 范围/ 及/ 默认值/ 如表/ 3/ 所示/ ./ 需要/ 注意/ 的/ 是/ ,/ 滑动/ 窗口/ 的/ 大小/ 就是/ 实验/ 中参/ Page15/ 与/ 计算/ 的/ 数据/ 的/ 个数/ ./ 滑动/ 窗口/ 大小/ (/ 数据/ 集/ 大小/ )/ 数据/ 维度/ 子/ 划分/ 约束/ C/ (/ unit/ )/ 滑动/ 窗口/ 流速/ 6.2/ 初始化/ 过程/ 实验/ 评估/ 本/ 小节/ 测试/ 了/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 的/ 初始化/ 部分/ 的/ 性能/ ./ 当/ 滑动/ 窗口/ 中/ 的/ 数据/ 已满时/ ,/ 随机/ 生成/ 图/ 10/ 窗口/ 大小/ 对/ 初始化/ 过程/ 的/ 影响/ 一个/ 查询/ 点后/ ,/ 记录/ 该/ 查询/ 初始化/ 时/ 的/ 查询/ 时间/ 、/ 结果/ 元组/ 数目/ 和/ 候选/ 元组/ 数目/ ./ 为了/ 更加/ 稳定/ 地/ 测试/ 算法/ 性能/ ,/ 本文/ 随机/ 生成/ 了/ 1000/ 个/ 查询/ 点/ ,/ 记录/ 的/ 是/ 1000/ 次/ 查询/ 的/ 平均值/ ./ 图/ 10/ 给出/ 了/ 3/ 种/ 分布/ 下/ ,/ 滑动/ 窗口/ 大小/ 对/ 算法/ 初始化/ 过程/ 的/ 影响/ ./ 由图/ 10/ (/ a/ )/ 、/ (/ c/ )/ 、/ (/ e/ )/ 可以/ 看出/ ,/ 随着/ 滑动/ 窗口/ 大小/ 的/ 增加/ ,/ 所有/ 算法/ 的/ 处理/ 时间/ 随之/ 线性/ 增加/ ./ 算法/ IDS2/ 和/ BDS2/ 的/ 处理/ 性能/ 明显/ 优于/ 算法/ GBDS/ ,/ 因为/ GBDS/ 采用/ 网格/ 索引/ 结构/ ,/ 每次/ 扫描/ 一个/ 网格/ 后/ 需要/ 向/ 23/ 个/ 方向/ 扩展/ ./ 当/ 数据分布/ Page16/ 不/ 均匀/ 时/ ,/ 网格/ 索引/ 会/ 导致/ 算法/ GBDS/ 性能/ 的/ 下降/ ./ 同时/ ,/ 影响/ 区域/ 的/ 维护/ 是/ 十分/ 耗时/ 的/ ./ 算法/ IDS2/ 和/ BDS2/ 的/ 处理/ 性能/ 也/ 优于/ 算法/ R/ -/ tree/ ,/ 这是/ 由于/ 对比/ R/ -/ tree/ 索引/ 结构/ ,/ 本文/ 所/ 提出/ 的/ 混合式/ 索引/ 结构/ 无论是/ 建立/ 还是/ 维护/ 都/ 要/ 更加/ 方便/ 、/ 快捷/ ./ 算法/ IDS2/ 的/ 处理/ 时间/ 与/ BDS2/ 相比/ ,/ 没有/ 明显/ 区别/ ./ 因为/ 算法/ IDS2/ 需要/ 额外/ 计算/ 每个/ 候选/ 点/ 的/ 最晚/ 支配/ 点/ ,/ 但是/ 这部分/ 的/ 耗时/ 是/ 非常少/ 的/ ./ 由于/ 查询/ 点/ 都/ 是/ 随机/ 分布/ 的/ ,/ 所以/ 3/ 种/ 分布/ 下/ 的/ 处理/ 时间/ 相差/ 并不多/ ./ 图/ 10/ (/ b/ )/ 、/ (/ d/ )/ 、/ (/ f/ )/ 记录/ 了/ 初始化/ 后/ ,/ 所有/ 查询/ 点平图/ 11/ 维度/ 变化/ 对/ 初始化/ 过程/ 的/ 影响/ 均/ 的/ 结果/ 集/ 大小/ 以及/ 候选/ 集/ 大小/ ./ |/ RS/ |/ 代表/ 了/ 结果/ 集中/ 元组/ 数目/ ,/ |/ CS/ |/ 代表/ 了/ 候选/ 集中/ 元组/ 数目/ ./ 随着/ 滑动/ 窗口/ 大小/ 的/ 增加/ ,/ |/ RS/ |/ 和/ |/ CS/ |/ 也/ 随之/ 线性/ 增加/ ./ 由图/ 中/ 可以/ 看出/ ,/ 滑动/ 窗口/ 大小/ (/ 数据/ 集/ 大小/ )/ 为/ 107/ 时/ ,/ |/ RS/ |/ 和/ |/ CS/ |/ 大小/ 相加/ 仅为/ 1000/ 多/ ,/ 即/ 只/ 需要/ 维护/ 1000/ 多个/ 数据/ 点/ ,/ 就/ 可以/ 完成/ 滑动/ 窗口/ 中/ 动态/ 轮廓/ 计算/ ./ 可以/ 看出/ ,/ 本文/ 提出/ 的/ 算法/ 具有/ 非常/ 高/ 的/ 效率/ ,/ 同时/ 通过/ 层次/ 划分/ 的/ 采用/ ,/ 可以/ 进行/ 批量/ 空间/ 过滤/ ,/ 大大/ 加快/ 了/ 计算速度/ ./ 图/ 11/ 描述/ 了/ 不同/ 维度/ 对/ 算法/ 初始化/ 阶段/ 性能/ Page17/ 的/ 影响/ ./ 随着/ 维度/ 的/ 增加/ ,/ 所有/ 算法/ 的/ 处理/ 时间/ 都/ 是/ 指数/ 级/ 增加/ 的/ ./ 这/ 主要/ 是因为/ 随着/ 维度/ 的/ 增加/ ,/ 结果/ 集/ 和/ 候选/ 集中/ 的/ 元组/ 数目/ 都/ 是/ 指数/ 级/ 增加/ 的/ ,/ 并且/ 支配/ 计算/ 的/ 时间/ 消耗/ 也/ 会/ 随之/ 增加/ ./ 由图/ 中/ 可以/ 发现/ ,/ 对于/ 反/ 相关/ 数据/ ,/ 算法/ 所/ 需要/ 的/ 处理/ 时间/ 最长/ ./ 相关/ 数据/ 中/ ,/ 算法/ 所/ 需/ 的/ 处理/ 时间/ 较/ 短/ ./ 无论/ 何种/ 分布/ ,/ 算法/ IDS2/ 和/ BDS2/ 的/ 处理/ 性能/ 都/ 明显/ 优于/ 算法/ R/ -/ tree/ 和/ GBDS/ ,/ 因为/ 对于/ 高于/ 3/ 维/ 的/ 数据/ ,/ GBDS/ 中/ 影响/ 区间/ 的/ 维护/ 是/ 十分复杂/ 的/ ./ 同时/ ,/ 随着/ 维度/ 的/ 图/ 12/ 子/ 划分/ 约束/ 对/ 初始化/ 过程/ 的/ 影响/ 本/ 小节/ 通过/ 大量/ 的/ 实验/ 验证/ 了/ 在/ 初始化/ 阶段/ ,/ 各种/ 参数/ 变化/ 对/ 算法/ 性能/ 的/ 影响/ ./ 由/ 实验/ 结果/ 可以/ 看出/ ,/ 无论/ 参数/ 如何/ 变化/ ,/ 本文/ 所/ 提出/ 的/ 算法/ IDS2/ 和/ BDS2/ 要/ 明显/ 优于/ 之前/ 的/ 算法/ GBDS/ ./ 同时/ ,/ 通过/ 与/ 算法/ R/ -/ tree/ 的/ 对比/ ,/ 可以/ 发现/ 本文/ 提出/ 的/ 组合式/ 索引/ 结构/ 在/ 建立/ 的/ 时候/ 要远/ 快于/ R/ -/ tree/ 索引/ 结构/ ./ 在/ 初始化/ 过程/ 中/ ,/ 由于/ IDS2/ 需要/ 额外/ 计算/ 每个/ 候选/ 点/ 的/ 最晚/ 支配/ 点/ ,/ 所以/ IDS2/ 的/ 处理/ 时间/ 要/ 略高于/ BDS2/ ,/ 但是/ 这种/ 变化/ 是/ 非常/ 不/ 明显/ 的/ ,/ 因为/ 候选/ 集合/ 不大且/ 最晚/ 支配/ 点/ 的/ 计算/ 是/ 十分/ 快速/ 的/ ./ 增加/ ,/ R/ -/ tree/ 索引/ 建立/ 的/ 时间/ 明显/ 变长/ ./ 图/ 12/ 测试/ 了/ 子/ 划分/ 约束/ C/ 对/ 算法/ 初始化/ 阶段/ 的/ 影响/ ./ 随着/ 子/ 划分/ 约束/ C/ 的/ 变化/ ,/ 算法/ IDS2/ 和/ BDS2/ 的/ 处理/ 时间/ 基本上/ 不/ 发生变化/ ,/ 因为/ 本文/ 在/ 数据流/ 上/ 处理/ 数据/ ,/ 所有/ 的/ 数据/ 都/ 是/ 存储/ 在/ 内存/ 中/ 的/ ,/ 所以/ 在子/ 划分/ 约束/ C/ 发生/ 微量/ 的/ 变化/ 时/ ,/ 算法/ 的/ 性能/ 并/ 不受/ 影响/ ./ 算法/ IDS2/ 和/ BDS2/ 可以/ 很快/ 地/ 完成/ 初始化/ 计算/ ./ IDS2/ 比/ BDS2/ 略/ 耗时/ 一些/ ,/ 因为/ IDS2/ 需要/ 额外/ 计算/ 每个/ 候选/ 点/ 的/ 最晚/ 支配/ 点/ ./ 6.3/ 更新/ 维护/ 过程/ 实验/ 评估/ 本/ 小节/ 主要/ 验证/ 各个/ 算法/ 在/ 更新/ 维护阶段/ 中/ 的/ 性能/ 表现/ ./ 具体/ 测试方法/ 如下/ :/ 对于/ 一个/ 给定/ 的/ 查询/ 点/ ,/ 在/ 完成/ 算法/ 初始化/ 之后/ ,/ 连续/ 记录/ 了/ 1000/ 次/ 更新/ 中/ 平均/ 每次/ 更新/ 操作/ 的/ 耗时/ 、/ 每次/ 更新/ 后/ 结果/ 集/ 和/ 候选/ 集/ 的/ 大小/ ./ 为/ 提高/ 测量/ 精度/ ,/ 实验/ 中共/ 随机/ 生成/ 了/ 100/ 个/ 查询/ 点/ ,/ 所/ 记录/ 的/ 测量/ 值为/ 100/ 次/ 实验/ 的/ 平均值/ ./ 图/ 13/ 给出/ 了/ 在/ 3/ 种/ 分布/ 下/ ,/ 滑动/ 窗口/ 大小/ 对/ 算法/ 更新过程/ 中/ 的/ 性能/ 影响/ ./ 随着/ 滑动/ 窗口/ 大小/ 的/ 增/ Page18/ 加/ ,/ 所有/ 算法/ 的/ 处理/ 时间/ 也/ 随之/ 线性/ 增加/ ./ 同时/ ,/ 随着/ 滑动/ 窗口/ 的/ 增大/ ,/ 更新过程/ 中/ |/ RS/ |/ 和/ |/ CS/ |/ 都/ 随之/ 线性/ 增加/ ./ 由图/ 中/ 可以/ 看出/ ,/ 无论/ 何种/ 分布/ ,/ 本文/ 所/ 提出/ 的/ IDS2/ 和/ BDS2/ 在/ 更新/ 时/ 都/ 明显/ 优于/ 算法/ GBDS/ ./ 因为/ 本文/ 所/ 提出/ 的/ 算法/ 在/ 更新/ 维护/ 结构/ 时/ 更加/ 简单/ ,/ 而/ GBDS/ 算法/ 维护/ 的/ 影响/ 区间/ 是/ 非常复杂/ 和/ 耗时/ 的/ ./ 同时/ ,/ IDS2/ 和/ BDS2/ 在/ 更新/ 时/ 都/ 快于/ 算图/ 13/ 窗口/ 大小/ 对/ 更新过程/ 的/ 影响/ 法/ R/ -/ tree/ ,/ 这是/ 由于/ 组合/ 索引/ 结构/ 的/ 维护/ 比/ R/ -/ tree/ 索引/ 要/ 更加/ 快捷/ ./ 更新过程/ 中/ ,/ IDS2/ 和/ BDS2/ 的/ 处理/ 时间/ 相差/ 不大/ ./ 当/ 失效/ 点/ 属于/ 结果/ 集时/ ,/ 算法/ BDS2/ 需要/ 较/ 多/ 的/ 时间/ 来/ 处理/ 失效/ 点/ ./ 所以/ 平均/ 来看/ ,/ 算法/ IDS2/ 比/ BDS2/ 的/ 处理/ 效率/ 略/ 高/ ./ 3/ 种/ 分布/ 中/ ,/ 反/ 相关/ 数据处理/ 最慢/ ,/ 相关/ 数据处理/ 最快/ ./ Page19/ 图/ 14/ 给出/ 了/ 在/ 3/ 种/ 分布/ 下/ ,/ 维度/ 变化/ 对/ 算法/ 更新/ 的/ 性能/ 影响/ ./ 随着/ 维度/ 的/ 增加/ ,/ 所有/ 算法/ 的/ 处理/ 时间/ 都/ 是/ 指数/ 级/ 增加/ 的/ ./ 因为/ 随着/ 维度/ 的/ 增大/ ,/ 更新过程/ 中/ |/ RS/ |/ 和/ |/ CS/ |/ 都/ 呈/ 指数/ 级/ 增加/ 的/ ,/ 计算/ 维护/ 的/ 代价/ 也/ 是/ 指数/ 级/ 增加/ 的/ ./ 由图/ 中/ 可以/ 看出/ ,/ 无论/ 维度/ 如何/ 变化/ ,/ IDS2/ 和/ BDS2/ 在/ 更新/ 时/ 都/ 明显/ 优于/ GBDS/ ./ 因为/ 随着/ 维度/ 的/ 增加/ ,/ GBDS/ 中/ 影响/ 区域/ 的/ 图/ 14/ 维度/ 大小/ 对/ 更新过程/ 的/ 影响/ 维护/ 开销/ 是/ 十分/ 庞大/ 的/ ./ 同时/ ,/ 随着/ 维度/ 的/ 增加/ ,/ IDS2/ 较/ R/ -/ tree/ 算法/ 的/ 优势/ 在/ 不断/ 变强/ ,/ 证明/ 本文/ 提出/ 的/ 组合式/ 索引/ 结构/ 比/ R/ -/ tree/ 结构/ 更加/ 适合/ 在/ 多维/ 上/ 进行/ 维护/ ./ 更新过程/ 中/ ,/ IDS2/ 比/ BDS2/ 的/ 处理/ 效率/ 略/ 高/ ./ 3/ 种/ 分布/ 中/ ,/ 反/ 相关/ 数据处理/ 最慢/ ,/ 相关/ 数据处理/ 最快/ ./ Page20/ 图/ 15/ 给出/ 了/ 在/ 3/ 种/ 分布/ 下/ ,/ 子/ 划分/ 约束/ C/ 对/ 算法/ 更新过程/ 中/ 的/ 性能/ 影响/ ./ 随着/ 子/ 划分/ 约束/ C/ 的/ 变化/ ,/ IDS2/ 和/ BDS2/ 的/ 处理/ 时间/ 发生/ 微量/ 变化/ ./ IDS2/ 的/ 性能/ 略/ 优于/ BDS2/ ./ 在/ 随机/ 数据分布/ 中/ ,/ 当/ C/ 值为/ 1.1/ unit/ 时/ ,/ 算法/ 的/ 处理/ 时间/ 最短/ ./ 在/ 反/ 相关/ 分布/ 中/ ,/ 当/ C/ 值为/ 1.3/ unit/ 时/ ,/ 算法/ 的/ 处理/ 时间/ 最短/ ./ 而/ 在/ 相关/ 分布/ 中/ ,/ 当/ C/ 值为/ 1unit/ 时/ ,/ 算法/ 的/ 处理/ 时间/ 最短/ ./ 这/ 是/ 图/ 15/ 子/ 划分/ 约束/ 对/ 更新过程/ 的/ 影响/ 当/ 数据流/ 的/ 流速/ 发生变化/ 时/ ,/ 即/ 一次/ 插入/ 或/ 删除/ 多个/ 元组/ 时/ ,/ 需要/ 对/ 同时/ 插入/ 的/ 元组/ 进行/ 批量/ 处理/ ./ 对于/ 同时/ 插入/ 的/ 数据/ 元组/ ,/ 只/ 需要/ 处理/ 其中/ 的/ 动态/ 轮廓/ 点/ ,/ 其余/ 元组/ 在/ 插入/ 的/ 时候/ 就/ 可以/ 加入/ 删除/ 集合/ ,/ 不/ 需要/ 处理/ ./ 由图/ 16/ 可以/ 看出/ ,/ 随着/ 流速/ 的/ 加快/ ,/ 甚至/ 每次/ 插入/ 和/ 删除/ 1000/ 个/ 元组/ 时/ ,/ 本文/ 算法/ 的/ 处理/ 时间/ 仍然/ 在/ 1/ 秒/ 之内/ ./ 所以/ 说/ ,/ 本文/ 提出/ 的/ 算法/ 可以/ 适应/ 于/ 数据流/ 环境/ ./ 其中/ ,/ 算法/ IDS2/ 略/ 好/ 于/ BDS2/ ,/ 但是/ 非常/ 不/ 明显/ ./ 同时/ ,/ 在/ 相关/ 数据/ 环境/ 下/ ,/ 算法/ 处理/ 最快/ ,/ 反/ 相关/ 环境/ 下/ ,/ 算法/ 处理/ 最慢/ ./ 通过/ 对/ 算法/ IDS2/ 和/ BDS2/ 的/ 时间/ 复杂度/ 分析/ 可知/ ,/ 当待/ 失效/ 数据/ 点/ pold/ 属于/ 结果/ 集合/ 时/ ,/ 算法/ BDS2/ 的/ 处理/ 时间/ 要/ 远大于/ IDS2/ ./ 如果/ 待/ 失效/ 数据/ 点/ 已经/ 由于/ 在/ 不同/ 分布/ 中/ ,/ 滑动/ 窗口/ 中/ 的/ |/ CS/ |/ 取值/ 是/ 有/ 差别/ 的/ ./ 在/ 反/ 相关/ 数据分布/ 中/ ,/ |/ CS/ |/ 取值/ 最大/ ,/ 约/ 为/ 1.3/ 倍/ 的/ 估计值/ ,/ 所以/ C/ 值为/ 1.3/ unit/ 时/ ,/ 算法/ 效率/ 达到/ 最优/ ./ 而/ 在/ 相关/ 分布/ 中/ ,/ |/ CS/ |/ 取值/ 和/ 估计值/ 相近/ ,/ 所以/ 在/ C/ 值为/ 1unit/ 时/ ,/ 算法/ 效率/ 达到/ 最优/ ./ 但是/ ,/ 无论/ 何种/ 分布/ 下/ ,/ 算法/ 的/ 处理/ 时间/ 都/ 相差/ 不/ 大/ ,/ 所以/ 我们/ 在/ 3/ 种/ 分布/ 下/ ,/ 默认/ 的/ C/ 取值/ 都/ 为/ 1unit/ ./ 提前/ 删除/ 了/ ,/ 算法/ IDS2/ 和/ BDS2/ 在/ 此次/ 更新/ 中/ 的/ 处理/ 时间/ 是/ 相当/ 的/ ./ 在/ 上述/ 的/ 实验/ 中/ ,/ 我们/ 记录/ 的/ 是/ 连续/ 1000/ 次/ 更新/ 的/ 平均/ 处理/ 时间/ ,/ 由于/ 1000/ 次连续/ 更新/ 中/ ,/ 待/ 失效/ 数据/ 点/ pold/ 属于/ 结果/ 集合/ 的/ 次数/ 并/ 不是/ 很多/ ,/ 所以/ 就/ 平均/ 处理/ 时间/ 来看/ ,/ 两种/ 算法/ 的/ 性能/ 差别/ 不大/ ./ 下面/ ,/ 为了/ 凸显/ 算法/ IDS2/ 和/ BDS2/ 的/ 区别/ ,/ 我们/ 记录/ 了/ 每次/ 更新/ 处理/ 的/ 时间/ ./ 通过/ 记录/ 单次/ 更新/ 处理/ 的/ 时间/ ,/ 能够/ 更好/ 地/ 反映/ 算法/ 的/ 稳定性/ ./ 因此/ ,/ 我们/ 选取/ 一个/ 固定/ 的/ 查询/ 点/ 〈/ 0.1/ ,/ 0.1/ ,/ 0.1/ ,/ 0.1/ 〉/ ,/ 进行/ 了/ 3000/ 次连续/ 更新/ 操作/ ,/ 并/ 记录/ 了/ 每次/ 更新/ 的/ 处理/ 时间/ ./ 其中/ 滑动/ 窗口/ 大小/ 设为/ 107/ ,/ 维度/ 设为/ 4/ ,/ 其他/ 参数均/ 为/ 默认值/ ./ 图/ 17/ 给出/ 了/ 在/ 3/ 种/ 分布/ 下/ ,/ 算法/ IDS2/ 和/ BDS2Page21/ 图/ 16/ 数据流/ 流速/ 对/ 更新过程/ 的/ 影响/ 在/ 更新过程/ 中/ 的/ 性能/ 表现/ ./ 由图/ 中/ 可以/ 看出/ ,/ 无论/ 何种/ 分布/ 下/ ,/ IDS2/ 比/ BDS2/ 的/ 性能/ 表现/ 要/ 稳定/ 很多/ ./ 如图/ 17/ (/ b/ )/ 中/ 所示/ ,/ 当/ 滑动/ 窗口/ 连续/ 流入/ 1000/ 个/ 元组/ 的/ 时候/ ,/ 需要/ 进行/ 1000/ 次/ 的/ 删除/ 插入/ 操作/ ,/ 我们/ 记录/ 了/ 每次/ 更新/ 操作/ 需要/ 的/ 响应/ 时间/ ,/ 平均/ 的/ 响应/ 时间/ 约/ 为/ 50ms/ ./ 其中/ ,/ 有/ 很/ 多次/ 的/ 更新/ 操作/ ,/ 算法/ BDS2/ 的/ 响应/ 时间/ 要/ 大于/ 100ms/ ,/ 远超过/ 平均/ 响应/ 时间/ ./ 而/ 算法/ IDS2/ 的/ 响应/ 时间/ 最多/ 不/ 超过/ 80ms/ ./ 由此可知/ ,/ 处理/ 相同/ 的/ 数据/ 集合/ 时/ ,/ 两种/ 算法/ 的/ 平均/ 响应/ 时间/ 基本相同/ ,/ 但是/ IDS2/ 响应/ 时间/ 的/ 波动/ 要远/ 小于/ BDS2/ 的/ 波动/ ./ 所以/ 说/ ,/ IDS2/ 比/ BDS2/ 稳定/ 的/ 多/ ./ 在/ 相关/ 数据分布/ 中/ ,/ 失效/ 点/ 成为/ 动态/ 轮廓/ 的/ 概率/ 较/ 小/ ,/ 所以/ 算法/ BDS2/ 在/ 相关/ 数据/ 中/ 的/ 表现/ 最好/ ,/ IDS2/ 与/ BDS2/ 的/ 性能/ 相差/ 不是/ 很大/ ./ 在/ 反/ 相关/ 数据分布/ 下/ ,/ 失效/ 点/ 成为/ 动态/ 轮廓/ 的/ 概率/ 明显/ 增大/ ,/ 所以/ 在/ 算法/ BDS2/ 中/ ,/ 频繁/ 出现/ 单次/ 更新/ 操作/ 耗时/ 明显/ 高于/ 均值/ 的/ 情况/ ,/ 相比之下/ ,/ IDS2/ 非常/ 稳定/ ./ 通过/ 上述/ 大量/ 的/ 实验/ ,/ 验证/ 了/ 本文/ 所提/ 算法/ BDS2/ 和/ IDS2/ 的/ 正确性/ 以及/ 高效性/ ,/ 无论/ 参数/ 如何/ 变化/ ,/ 本文/ 所/ 提出/ 的/ 算法/ 都/ 明显/ 优于/ 现有/ 算法/ ,/ 可以/ 满足/ 人们/ 的/ 日常/ 需求/ ./ 7/ 总结/ 本文/ 对/ 数据流/ 上/ 的/ 动态/ 轮廓/ 查询/ 问题/ 进行/ 了/ 深入/ 的/ 研究/ ./ 首先/ ,/ 提出/ 了/ 一种/ 组合式/ 索引/ 结构/ 来/ 管理/ 数据流/ 上/ 的/ 点/ ./ 该/ 索引/ 包括/ 两个/ 部分/ :/ 分/ 层次/ 划分/ 结构/ ;/ 子/ 划分/ 内/ 的/ 数据/ 元组/ 采用/ 倒排/ 索引/ 结构/ 来/ 管理/ ./ 通过/ 分/ 层次/ 划分/ 结构/ ,/ 可以/ 实现/ 数据/ 集/ 的/ 空间/ 过滤/ ,/ 同时/ 使得/ 本文/ 所/ 设计/ 的/ 索引/ 结构/ 可以/ 适用/ 于/ 所有/ 的/ 数据分布/ 中/ ;/ 利用/ 倒排/ 索引/ 结构/ ,/ 可以/ 快速/ 地/ 完成/ 元组/ 间/ 动态/ 支配/ 关系/ 的/ 判定/ ,/ 并且/ 可以/ 对子/ 划分/ 内/ 的/ 数据/ 进行/ 批量/ 处理/ ./ 然后/ ,/ 在/ 该/ 组合/ 索引/ 结构/ 的/ 基础/ 上/ ,/ 提出/ 了/ 基本/ 动态/ 轮廓/ 查询/ 算法/ BDS2/ ./ 但是/ ,/ 当/ 失效/ 元组/ 属于/ 动态/ 轮廓/ 集合/ 时/ ,/ BDS2/ 需要/ 重新/ 计算/ 整个/ 候选/ 集/ ,/ 会/ 导致/ BDS2/ 在/ 处理/ 某次/ 更新/ 操作/ 时/ ,/ 引起/ 较大/ 的/ 延迟/ ./ 为了/ 在/ 数据流/ 上/ 更加/ 稳定/ 地/ 计算/ 动态/ 轮廓/ ,/ 本文/ 提出/ 了/ 改进/ 的/ 动态/ 轮廓/ 查询/ 算法/ IDS2/ ,/ 通过/ 设计/ 合理/ 的/ 数据结构/ ,/ 有效/ 避免/ 了/ 数据流/ 上/ 动态/ 轮廓/ 查询/ 算法/ 时/ 的/ 延迟/ ,/ 保证/ 了/ 数据流/ 查询/ 算法/ 的/ 稳定性/ ./ 最后/ ,/ 通过/ 大量/ 的/ 对比/ 实验/ ,/ 验证/ 了/ 本文/ 所提/ 算法/ 的/ 有效性/ 和/ 高效性/ ./ Page22/ 图/ 17/ 更新/ 时/ 各/ 算法/ 性能/ 表现/ 

