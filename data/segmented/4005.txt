Page1/ 基于/ 空间/ 聚类/ 增强/ Lightcuts/ 的/ 光照/ 计算/ 王光伟/ 1/ )/ ,/ 2/ )/ 谢/ 国富/ 1/ )/ ,/ 2/ )/ 王文成/ 1/ )/ 1/ )/ (/ 中国科学院/ 软件/ 研究所/ 计算机科学/ 国家/ 重点/ 实验室/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 大学/ 北京/ 100049/ )/ 摘要/ Lightcuts/ 是/ 面向/ 多/ 光源/ 场景/ 的/ 高效/ 绘制/ 方法/ ./ 它/ 渐进/ 地/ 对/ 光源/ 进行/ 聚类/ 组织/ ,/ 并/ 以/ 二叉树/ 进行/ 管理/ ,/ 由此/ 在/ 绘制/ 时/ 可用/ 一些/ 光源/ 聚类/ 的/ 代表/ 光源/ (/ 统称/ 为/ ‘/ 光源/ 割/ ’/ )/ 进行/ 光照/ 计算/ ,/ 以/ 减少/ 需要/ 计算/ 的/ 光源/ 数量/ ./ 但是/ ,/ 当/ 光源/ 很多/ 并/ 分布/ 复杂/ 时/ ,/ 在/ 二叉树/ 结构/ 中/ 寻找/ 光源/ 割/ 也/ 要花费/ 不少/ 的/ 计算/ ./ 为此/ ,/ 有些/ 方法/ 提出/ 利用/ 绘制/ 中/ 的/ 图像/ 连贯性/ 来/ 减少/ 光源/ 割/ 的/ 搜寻/ 计算/ ,/ 并/ 取得/ 了/ 较/ 好/ 的/ 效果/ ./ 文中/ 提出/ 利用/ 空间/ 聚类/ 来/ 减少/ 光源/ 割/ 的/ 搜寻/ 计算/ ,/ 即先/ 根据/ 位置/ 和/ 法向/ 对/ 场景/ 中/ 的/ 几何/ 位置/ 进行/ 聚类/ ,/ 为/ 各个/ 类/ 的/ 代表/ 点/ 寻找/ 其/ 光源/ 割/ ,/ 以/ 作为/ 该类/ 其它/ 点/ 搜索/ 各自/ 对应/ 光源/ 割/ 的/ 初始/ 情况/ ./ 实验/ 表明/ ,/ 文中/ 方法/ 能/ 很/ 好/ 地/ 减少/ 光源/ 树中/ 搜索/ 光源/ 割/ 的/ 计算/ ,/ 提高/ Lightcuts/ 的/ 光照/ 计算/ 效率/ ,/ 优于/ 利用/ 图像/ 连贯性/ 的/ 加速/ 方法/ ,/ 加速/ 性能/ 稳定/ ,/ 并且/ 光源/ 越/ 多/ 分布/ 越/ 复杂/ ,/ 加速/ 效果/ 越好/ ./ 关键词/ 光照/ 计算/ ;/ Lightcuts/ ;/ 空间/ 聚类/ ;/ 多/ 光源/ ;/ 真实感/ 绘制/ 1/ 引言/ 复杂/ 光源/ 下/ 的/ 真实感/ 绘制/ 一直/ 是/ 计算机/ 图形学/ 中/ 的/ 重要/ 研究/ 内容/ ./ 一般/ 地/ ,/ 复杂/ 光源/ 被/ 离散/ 成/ 一些/ 点光源/ ,/ 然后/ 使用/ 点光源/ 的/ 累积/ 计算/ 来/ 进行/ 绘制/ [/ 1/ ]/ ,/ 但/ 这种/ 累积/ 计算/ 往往/ 很/ 费时/ ./ 为/ 提高/ 绘制/ 效率/ ,/ Walter/ 等/ 提出/ 对/ 点光源/ 进行/ 聚类/ 的/ 处理/ 方法/ [/ 2/ ]/ ,/ 称为/ Lightcuts/ 方法/ ,/ 即/ 一个/ 聚类/ 中/ 所有/ 光源/ 对/ 某个/ 几何/ 位置/ 的/ 实际/ 光/ 能/ 贡献/ ,/ 与/ 使用/ 该/ 聚类/ 的/ 代表/ 光源/ 近似计算/ 出/ 的/ 光能/ 贡献/ 相差/ 不大时/ ,/ 就/ 根据/ 代表/ 光源/ 来/ 计算/ 该/ 聚类/ 对/ 该/ 位置/ 的/ 光能/ 贡献/ ./ 由此/ ,/ 可/ 减少/ 大量/ 的/ 光照/ 计算/ ./ 具体/ 地/ ,/ 该/ 方法/ 是/ 以/ 二叉树/ 的/ 方式/ 对/ 光源/ 进行/ 层次化/ 的/ 组织/ ,/ 简称/ 光源/ 树/ (/ LightTree/ )/ ,/ 以便/ 能/ 自/ 适应/ 地/ 选择/ 合适/ 的/ 光源/ 聚类/ ,/ 提高/ 绘制/ 效率/ ./ 对于/ 一个/ 几何/ 位置/ 而言/ ,/ 其/ 对应/ 的/ 各个/ 光源/ 聚类/ 在/ 光源/ 树中/ 就/ 形成/ 了/ 一条/ 分割/ 界线/ ,/ 统称/ 为/ ‘/ 光源/ 割/ ’/ (/ Cut/ )/ ,/ 如图/ 1/ 所示/ ./ 绘制/ 时/ ,/ 每个/ 几何/ 位置/ 都/ 需要/ 从/ 光源/ 树/ 的/ 根/ 结点/ 开始/ 搜索/ 对应/ 的/ 光源/ 割/ ,/ 因此/ ,/ 会/ 在/ 光源/ 树中/ 产生/ 大量/ 的/ 搜索/ 计算/ ./ 由于/ 场景/ 中/ 邻近/ 的/ 成像/ 点/ (/ 成像/ 面/ 发出/ 的/ 绘制/ 光线/ 与/ 三维/ 场景/ 的/ 交点/ )/ 一般/ 在/ 光源/ 树中/ 有/ 相似/ 的/ 光源/ 割/ ,/ 如图/ 1/ 中/ 黑色/ 及/ 灰色/ 细线/ 表示/ 的/ 光源/ 割/ 所示/ ,/ 许多/ 方法/ 提出/ 利用/ 这种/ 连贯性/ 来/ 进一步提高/ 绘制/ 效率/ ./ 目前/ ,/ 这方面/ 的/ 工作/ 主要/ 是/ 基于/ 图像/ 空间/ 的/ 连贯性/ 来/ 处理/ 的/ ,/ 即/ 如果/ 图像/ 中/ 某/ 区域/ 里/ 邻近/ 采样/ 点/ 的/ 光照/ 连贯性/ 较强/ ,/ 则/ 该/ 区域/ 中/ 的/ 许多/ 像素点/ 可以/ 通过/ 对/ 邻近/ 已/ 进行/ 了/ 光照/ 计算/ 的/ 像素点/ 进行/ 插值/ 计算/ 来/ 获得/ 其/ 光照/ 亮度/ [/ 2/ ]/ ;/ 或者/ 将/ 这样/ 的/ 一个/ 像素/ 区域/ 作为/ 一个/ 整体/ 来/ 搜索/ 光源/ 割/ ,/ 然后/ 据此/ 为/ 其中/ 的/ 每个/ 像素/ 进行/ 光照/ 计算/ [/ 3/ ]/ ./ 但是/ ,/ 当/ 场景/ 比较复杂/ 时/ ,/ 图像/ 空间/ 的/ 连贯性/ 会/ 降低/ ,/ 因而/ 会/ 影响/ 绘制/ 效率/ 的/ 提高/ ./ 本文/ 提出/ 一种/ 利用/ 场景/ 三维空间/ 连贯性/ 的/ 加速/ 方法/ ,/ 以/ 增强/ Lightcuts/ 的/ 光照/ 计算/ 效率/ ,/ 即/ 根据/ 几何/ 位置/ 和/ 法向/ ,/ 对/ 场景/ 空间/ 中/ 与/ 绘制/ 光线/ 相交/ 的/ 各/ 成像/ 点/ 进行/ 在线/ 的/ 逐步/ 聚类/ ,/ 并/ 为/ 每个/ 类/ 动态/ 地/ 更新/ 初始/ 光源/ 割/ ,/ 以/ 作为/ 初始/ 位置/ 来/ 为/ 该类/ 中/ 各/ 成像/ 点/ 搜索/ 其/ 相应/ 的/ 光源/ 割/ ./ 这样/ ,/ 在/ 处理/ 复杂/ 的/ 光照/ 计算/ 时/ ,/ 可/ 节省/ 很多/ 在/ 光源/ 树中/ 的/ 搜索/ 计算/ ./ 如图/ 1/ 所示/ ,/ 对于/ 黑色/ 及/ 灰色/ 区域/ 中/ 的/ 点/ ,/ 如果/ 其/ 搜索/ 不是/ 从/ 光源/ 树/ 的/ 根/ 结点/ 开始/ ,/ 而是/ 从/ 粗线条/ 所示/ 的/ 公共/ 初始/ 光源/ 割/ 开始/ ,/ 则/ 可/ 节省/ 从根/ 结点/ 到/ 初始/ 光源/ 割/ 的/ 搜索/ 开销/ ./ 实验/ 表明/ :/ 与/ Lightcuts/ 算法/ 相比/ ,/ 新/ 算法/ 搜索/ 步数/ 的/ 节省/ 效率/ 可达/ 48.29/ %/ ~/ 73.57/ %/ ,/ 绘制/ 计算/ 的/ 加速/ 比可达/ 32.70/ %/ ~/ 49.15/ %/ ;/ 而/ 与/ 基于/ 图像/ 连贯性/ 加速/ 的/ 类似/ 方法/ [/ 2/ -/ 3/ ]/ 相比/ ,/ 新/ 方法/ 的/ 加速/ 比可达/ 6.38/ %/ ~/ 50.00/ %/ ,/ 并且/ 光源/ 越/ 复杂/ ,/ 加速/ 效果/ 越好/ ./ 在/ 处理/ 各种/ 复杂/ 的/ 场景/ 和/ 光源/ 情况/ 时/ ,/ 新/ 算法/ 的/ 加速/ 性能/ 比较稳定/ ./ 图/ 1/ 场景/ 几何/ 中/ 相近/ 成像/ 点/ 的/ 光源/ 割/ 以及/ 其/ 初始/ 光源/ 割/ (/ 图/ (/ a/ )/ 为/ 寺庙/ 场景/ ,/ 图/ (/ b/ )/ 为/ 针对/ 该/ 场景/ 的/ 光源/ 树/ ,/ 其中/ 黑色/ 及/ 灰色/ 的/ 线/ 分别/ 对应/ 图/ (/ b/ )/ 中/ 灰色/ 区域/ 及/ 黑色/ 区域/ 成像/ 点/ 相应/ 的/ 光源/ 割/ ;/ 灰色/ 粗/ 折线/ 为/ 该/ 区域/ 的/ 初始/ 光源/ 割/ )/ 2/ 相关/ 工作/ 多/ 光源/ 复杂/ 场景/ 的/ 高效/ 绘制/ 一直/ 是/ 图形学/ 中/ 一个/ 很具/ 挑战性/ 的/ 问题/ ./ 如果/ 对/ 各/ 光源/ 的/ 光照/ 结果/ 进行/ 累积/ 运算/ ,/ 则/ 绘制/ 时间/ 通常/ 是/ 随着/ 光源/ 的/ 数目/ 呈/ 线性/ 增长/ 的/ ./ 为了/ 加快/ 绘制/ 速度/ ,/ 一些/ 算法/ [/ 2/ ,/ 4/ -/ 5/ ]/ 采用/ 重要性/ 采样/ 或/ 聚类/ 的/ 方式/ 来/ 减少/ 需要/ 处理/ 的/ 光源/ 数目/ ,/ 以/ 提高/ 绘制/ 速度/ ./ 其中/ ,/ Lightcuts/ 算法/ [/ 2/ ]/ 渐进/ 地/ 对/ 光源/ 进行/ 层次化/ 聚类/ 组织/ ,/ 可/ 为/ 每个/ 成像/ 点自/ 适应/ 地/ 生成/ 光源/ 割/ ,/ 以/ 快速/ 高质量/ 地/ 进行/ 绘制/ ,/ 是/ 当前/ 流行/ 的/ 多/ 光源/ 绘制/ 加速/ 技术/ ./ 在/ Lightcuts/ 方法/ 的/ 基础/ 上/ ,/ 有/ 许多/ 工作/ 进行/ 了/ 进一步/ 的/ 发展/ ./ 其中/ 有/ 一些/ 工作/ 对/ Lightcuts/ 算/ Page3/ 法/ 进行/ 了/ 扩展/ ,/ 使/ 其能/ 支持/ 多种/ 高级/ 绘制/ 效果/ ,/ 如/ 景深/ 、/ 透明/ 等/ [/ 6/ -/ 7/ ]/ ./ 而/ 另外/ 的/ 一些/ 工作/ 主要/ 针对/ 绘制/ 效率/ 的/ 提高/ ./ 这些/ 加速/ 方法/ 可/ 分为/ 以下/ 3/ 类/ ./ (/ 1/ )/ 基于/ 可见/ 性/ 预计/ 算/ 的/ 方法/ ./ Akerlund/ 等/ 人/ [/ 8/ ]/ 首先/ 提出/ 在/ 预计/ 算/ 光辐射/ 传输技术/ (/ Precom/ -/ putedRadianceTransfer/ )/ 中/ 使用/ Lightcuts/ 技术/ ,/ 可/ 根据/ 可见/ 性/ 预计/ 算/ 光源/ 割/ ,/ 能以/ 交互/ 的/ 速度/ 绘制/ 静态/ 场景/ ./ 文献/ [/ 9/ ]/ 提出/ 先/ 分别/ 根据/ 可见/ 性/ 、/ 几何/ 材质/ 和/ 光源/ 的/ 位置/ 来/ 计算/ 各自/ 相关/ 的/ 光源/ 割/ ,/ 然后/ 再/ 进行/ 综合/ 以/ 获得/ 各/ 成像/ 点/ 对应/ 的/ 光源/ 割/ ,/ 可以/ 使用/ GPU/ 进行/ 并行计算/ 以/ 加速/ ,/ 并/ 能/ 得到/ 高质量/ 的/ 光照/ 结果/ ./ 但/ 这些/ 方法/ 需要/ 存储/ 大量/ 预计/ 算/ 的/ 可见/ 性/ 数据/ ,/ 不/ 适合/ 大规模/ 场景/ 的/ 绘制/ ./ 并且/ 它们/ 的/ 绘制/ 结果/ 受限于/ 预计/ 算/ 的/ 准确性/ 以及/ 采样/ 点/ 的/ 密度/ ,/ 难以/ 进行/ 自/ 适应/ 的/ 动态/ 处理/ ./ (/ 2/ )/ 增强/ 光源/ 割/ 搜索/ 质量/ 的/ 方法/ ./ 文献/ [/ 10/ ]/ 提出/ 把/ BRDF/ 重要性/ 采样/ 与/ Lightcuts/ 方法/ 结合/ 在/ 一起/ ,/ 根据/ 采样/ 的/ 重要性/ 在/ 光源/ 聚类/ 中/ 创建/ 多个/ 代表/ 光源/ ,/ 以/ 提高/ 光源/ 割/ 搜索/ 的/ 质量/ ,/ 并/ 加快/ 绘制/ 速度/ ./ 文献/ [/ 11/ ]/ 提出/ 使用/ 物体/ 截面图/ 来/ 提高/ 成像/ 点到/ 光源/ 结点/ 之间/ 可见/ 性/ 的/ 计算/ 效率/ ,/ 以/ 改进/ 光源/ 割/ 的/ 计算/ 质量/ ./ 但/ 这/ 两种/ 算法/ 都/ 没有/ 利用/ 场景/ 中/ 成像/ 点/ 之间/ 关于/ 光源/ 割/ 搜索/ 的/ 共享性/ ,/ 可以/ 和/ 本文/ 算法/ 相结合/ ,/ 以/ 进一步提高/ 绘制/ 效率/ ./ (/ 3/ )/ 利用/ 图像/ 空间/ 的/ 连贯性/ 的/ 方法/ ./ Lightcuts/ 一文/ [/ 2/ ]/ 中/ 也/ 提出/ 了/ 利用/ 图像/ 空间/ 连贯性/ 加速/ 的/ 算法/ ReconstructionLightcuts/ ./ 该/ 算法/ 将/ 成像/ 面/ 分成/ 许多块/ ,/ 使得/ 各个/ 块/ 内/ 的/ 像素/ 具有/ 很/ 好/ 的/ 光照/ 连贯性/ ./ 于是/ ,/ 在/ 各个/ 像素/ 块/ 内/ 可/ 对/ 大部分/ 成像/ 点/ 使用/ 简单/ 的/ 插值/ 计算/ 来/ 获取/ 它们/ 的/ 光照/ 量/ ./ 但/ 该/ 算法/ 需要/ 计算/ 各/ 像素/ 块/ 4/ 个角/ 上/ 的/ 光源/ 割/ ,/ 并且/ 需要/ 为/ 每个/ 像素/ 块/ 建立/ 一个/ 局部/ 光源/ 树/ ./ 当/ 图像/ 连贯性/ 减少/ 时/ ,/ 算法/ 需要/ 使用/ 较密/ 的/ 块/ 划分/ ,/ 会/ 增加/ 很多/ 计算/ ,/ 降低/ 加速/ 效果/ ./ 并且/ ,/ 该/ 算法/ 使用/ 插值/ 来/ 计算/ 光源/ 对/ 成像/ 点/ 的/ 亮度/ 贡献/ ,/ 容易/ 丢失/ 细节/ ./ CoherentLightcuts/ 算法/ [/ 3/ ]/ 提出/ 对/ 成像/ 面/ 进行/ 逐步/ 细分/ 的/ 划分/ ,/ 直至/ 各个/ 划分/ 的/ 子块/ 中/ 的/ 像素/ 相应/ 的/ 光源/ 割/ 具有/ 很大/ 的/ 相似性/ ,/ 则/ 以/ 一个/ 子块/ 为/ 一个/ 整体/ 在/ 光源/ 树中/ 寻找/ 其/ 光源/ 割/ ,/ 并/ 根据/ 该/ 光源/ 割/ 为此/ 子块/ 中/ 的/ 各个/ 像素/ 进行/ 光照/ 计算/ ./ 但/ 该/ 算法/ 在/ 成像/ 面/ 逐步/ 细分/ 的/ 过程/ 中要/ 不断/ 地/ 在/ 光源/ 树中/ 进行/ 搜索/ 计算/ ,/ 因此/ ,/ 当/ 图像/ 的/ 连贯性/ 不高时/ ,/ 该/ 算法/ 需要/ 将/ 成像/ 面/ 划分/ 得/ 很/ 细/ ,/ 会/ 降低/ 加速/ 效果/ ./ 第/ 4/ 节/ 的/ 对比/ 实验/ 表明/ ,/ 当/ 图像/ 连贯性/ 下降时/ ,/ 这些/ 基于/ 图像/ 连贯性/ 方法/ 的/ 加速/ 效率/ 下降/ ,/ 甚至/ 还会/ 慢于/ 原来/ 的/ Lightcuts/ 方法/ ;/ 而/ 本文/ 的/ 新/ 算法/ 加速/ 性能/ 稳定/ ,/ 能/ 有效/ 处理/ 各种/ 绘制/ 情况/ ./ 3/ 算法/ 思路/ 3.1/ Lightcuts/ 算法/ 计算/ 光源/ 割/ 的/ 步骤/ Lightcuts/ 算法/ 在/ 计算/ 光源/ 割时/ ,/ 自上而下/ 逐步/ 地/ 遍历/ 光源/ 树中/ 的/ 子/ 节点/ ./ 如果/ 一个/ 结点/ 的/ 代表/ 光源/ 对/ 成像/ 点/ 的/ 亮度/ 贡献/ 的/ 误差/ 上限/ 超过/ 所/ 设定/ 的/ 误差/ 阈值/ ,/ 就/ 继续/ 分别/ 考察/ 它/ 的/ 两个/ 子/ 结点/ ,/ 直至/ 在/ 所有/ 搜索/ 路径/ 上/ 找到/ 了/ 满足要求/ 的/ 结点/ ,/ 这些/ 结点/ 就/ 形成/ 了/ 一个/ 光源/ 割/ ./ 根据/ 韦伯定律/ [/ 12/ ]/ ,/ 人/ 可以/ 感知/ 到/ 的/ 亮度/ 的/ 最小/ 变化/ 大概/ 是/ 当前/ 亮度/ 的/ 1/ %/ ,/ 而/ 文献/ [/ 2/ ]/ 的/ 实验/ 中/ ,/ 使用/ 亮度/ 的/ 2/ %/ 作为/ 误差/ 阈值/ 就/ 能/ 得到/ 较/ 好/ 的/ 绘制/ 结果/ ,/ 从而/ 该/ 算法/ 使用/ 如式/ (/ 1/ )/ 计算/ 成像/ 点/ x/ 的/ 误差/ 阈值/ Ethre/ :/ 其中/ ,/ Cut/ 为/ 成像/ 点/ x/ 对应/ 的/ 光源/ 割/ ;/ Ck/ 为/ 光源/ 割中/ 的/ 结点/ ;/ LC/ (/ x/ )/ 表示/ 结点/ C/ 对/ 成像/ 点/ x/ 的/ 亮度/ 贡献/ ,/ 该/ 算法/ 使用/ C/ 中/ 代表/ 光源/ j/ 近似计算/ 这一/ 亮度/ 贡献/ :/ 其中/ ,/ M/ 为/ 材质/ 项/ ;/ G/ 为/ 几何/ 项/ ;/ V/ 为/ 可见/ 性项/ ;/ I/ 为/ 光源/ 亮度/ ;/ ∑/ i/ ∈/ C/ 积/ ,/ 可/ 预先/ 计算/ 以备/ 重复使用/ ./ 使用/ 式/ (/ 2/ )/ 的/ 近似计算/ 会/ 引入/ 误差/ (/ 即此/ 近似/ 亮度/ 贡献/ 和/ 实际/ 亮度/ 贡献/ 的/ 差值/ )/ ./ 为此/ ,/ Lightcuts/ 算法/ 提出/ 以/ M/ 、/ G/ 和/ V/ 在/ 该/ 结点/ 处/ 的/ 最大/ 可能/ 变化/ 范围/ 来/ 计算/ 这一/ 误差/ 的/ 上限/ ./ 由于/ 可见/ 性/ 的/ 最大/ 变化/ 范围/ 是/ 1/ ,/ 因此/ ,/ 该/ 算法/ 就/ 将/ 误差/ 上限/ EC/ -/ upper/ 的/ 计算/ 简化/ 为/ 其中/ ,/ Mupper/ 为/ 材质/ 项/ 的/ 上限/ ;/ Gupper/ 为/ 几何/ 项/ 的/ 上限/ ./ 3.2/ 基于/ 空间/ 聚类/ 的/ 光照/ 计算/ 在/ 场景/ 空间/ 中/ ,/ 如果/ 位置/ 邻近/ 的/ 成像/ 点/ 的/ 法向/ 、/ 材质/ 和/ 可见/ 性/ 信息/ 较为/ 相似/ ,/ 则/ 它们/ 相应/ 的/ 光源/ 割/ 也/ 会/ 比较/ 类似/ ./ 由此/ ,/ 它们/ 在/ 光源/ 树中/ 的/ 许多/ 搜索/ 计算/ 就/ 可以/ 共享/ 来/ 加速/ ./ 为此/ ,/ 本文/ 在/ 绘制/ 时/ 对/ 场景/ 中/ 的/ 成像/ 点/ 进行/ 聚类/ ,/ 并/ 为/ 每个/ 类中/ 的/ 代表/ 成像/ 点/ 计算/ 其/ 光源/ 割/ 作为/ 初始/ 光源/ 割/ ,/ 并/ 动态/ 地/ 对/ 其/ 进行/ 更/ Page4/ 新/ ,/ 然后/ 该类/ 中/ 的/ 其它/ 成像/ 点/ 在/ 搜索/ 各自/ 的/ 光源/ 割时/ ,/ 就/ 以/ 初始/ 光源/ 割/ 作为/ 起始/ 位置/ ,/ 可/ 减少/ 在/ 光源/ 树中/ 的/ 大量/ 搜索/ 计算/ ./ 这/ 对于/ 大规模/ 复杂/ 的/ 光照/ 计算/ 是/ 很/ 有利/ 的/ ,/ 因为/ 此时/ 的/ 光源/ 树/ 一般/ 会/ 很大/ ,/ 计算/ 光源/ 割时/ 的/ 搜索/ 也/ 会/ 比较/ 多/ ./ 为/ 减少/ 对/ 成像/ 点聚类/ 的/ 计算/ ,/ 本/ 算法/ 先/ 用/ 均匀/ 网格/ 剖分/ 场景/ ,/ 然后/ 对同/ 网格/ 单元/ 内/ 的/ 成像/ 点/ 进行/ 聚类/ ./ 对于/ 一个/ 成像/ 点/ 而言/ ,/ 它/ 先/ 与/ 所在/ 网格/ 单元/ 内/ 已有/ 的/ 聚类/ 的/ 代表/ 成像/ 点/ 进行/ 比较/ ;/ 如果/ 它/ 与/ 一个/ 代表/ 点/ 在/ 材质/ 、/ 几何/ 方面/ 比较/ 相似/ ,/ 它/ 就/ 归入/ 该类/ ;/ 否则/ ,/ 它/ 就/ 自成/ 一个/ 新类/ ,/ 并/ 作为/ 此类/ 的/ 代表/ 成像/ 点/ ./ 当然/ ,/ 如果/ 一个/ 成像/ 点/ 是/ 所在/ 网格/ 单元/ 的/ 第一个/ 成像/ 点/ ,/ 它/ 就是/ 一个/ 类/ 的/ 代表/ 成像/ 点/ ./ 在/ 我们/ 实现/ 的/ 聚类/ 计算/ 中/ ,/ 如果/ 一个/ 成像/ 点/ 与/ 一个/ 代表/ 成像/ 点/ 具有/ 相同/ 的/ 材质/ ,/ 并且/ 它们/ 的/ 法向/ 的/ 夹角/ 小于/ 10/ °/ ,/ 我们/ 就/ 将/ 它们/ 归于/ 同一个/ 类/ ./ 图/ 2/ 中/ 显示/ 了/ 一个/ 场景/ 中/ 的/ 成像/ 点/ 的/ 聚类/ 情况/ ./ 图/ 2/ 寺庙/ 场景/ 中/ 成像/ 点/ 的/ 聚类/ 分布图/ (/ 这里/ ,/ 用/ 黑线/ 在/ 计算/ 一个/ 类/ 的/ 代表/ 成像/ 点/ 的/ 光源/ 割时/ ,/ 我们/ 用式/ (/ 1/ )/ 计算/ 该/ 成像/ 点/ 的/ 误差/ 阈值/ ,/ 用式/ (/ 3/ )/ 计算所/ 考察/ 结点/ 的/ 误差/ 上限/ ,/ 当/ 一个/ 结点/ 相关/ 的/ 误差/ 上限/ 小于/ 误差/ 阈值/ 时/ ,/ 该/ 结点/ 就/ 归入/ 光源/ 割/ ./ 之后/ ,/ 该类/ 中/ 的/ 其它/ 成像/ 点/ 就/ 将/ 以/ 该/ 光源/ 割/ 作为/ 初始/ 光源/ 割/ 来/ 寻找/ 它们/ 各自/ 的/ 光源/ 割/ ,/ 具体/ 的/ 搜索/ 计算方法/ 还是/ 采用/ Lightcuts/ 中/ 的/ 相应/ 工作/ ./ 此时/ ,/ 初始/ 光源/ 割中/ 的/ 结点/ ,/ 对于/ 一个/ 成像/ 点/ 而言/ ,/ 有/ 3/ 种/ 情况/ :/ (/ 1/ )/ 正好/ 合适/ ,/ 即该/ 结点/ 的/ 父/ 结点/ 对/ 该/ 成像/ 点/ 的/ 光照/ 计算/ 有太大/ 的/ 误差/ ,/ 而/ 该/ 结点/ 的/ 光照/ 计算/ 却/ 能/ 满足要求/ ./ (/ 2/ )/ 欠/ 分割/ ,/ 即该/ 结点/ 对/ 该/ 成像/ 点/ 的/ 光照/ 计算/ 有太大/ 的/ 误差/ ,/ 需要/ 继续/ 考察/ 它/ 的/ 子/ 光源/ 结点/ ./ (/ 3/ )/ 过/ 分割/ ,/ 即该/ 结点/ 的/ 父/ 结点/ 甚至/ 更/ 高层/ 的/ 结点/ 对/ 该/ 成像/ 点/ 的/ 光照/ 计算/ ,/ 能/ 满足要求/ ./ 此时/ ,/ 对于/ 绘制/ 质量/ 来说/ 影响/ 很小/ ,/ 因为/ 采用/ 了/ 更/ 细致/ 的/ 光照/ 计算/ ;/ 但/ 计算/ 的/ 光源/ 数量/ 会/ 增加/ ,/ 因而/ 影响/ 绘制/ 速度/ ./ 显然/ ,/ (/ 1/ )/ 的/ 情况/ 是/ 最/ 理想/ 的/ ,/ (/ 2/ )/ 的/ 情况/ 可/ 按照/ 原始/ 的/ Lightcuts/ 算法/ 继续/ 搜索/ ,/ 也/ 可/ 节省/ 一些/ 搜索/ 计算/ ,/ 而/ (/ 3/ )/ 的/ 情况/ 则/ 需要/ 尽可能/ 避免/ ,/ 因为/ 光照/ 计算/ 一般/ 是/ 比较复杂/ 的/ ,/ 不利于/ 加速/ 计算/ ./ 对此/ ,/ 我们/ 将/ 在/ 各/ 成像/ 点/ 寻找/ 它/ 的/ 光源/ 割时/ 逐渐/ 地/ 优化/ 初始/ 光源/ 割/ ,/ 将/ 其中/ 的/ 结点/ 逐步/ 地向父/ 结点/ 甚至/ 更/ 高层/ 的/ 粗化/ 结点/ 进行/ 移动/ ,/ 使得/ 后续/ 成像/ 点/ 在/ 寻找/ 它们/ 的/ 光源/ 割时/ ,/ 能/ 尽量减少/ ‘/ 过/ 分割/ ’/ 现象/ 的/ 出现/ ./ 我们/ 所/ 采用/ 的/ 措施/ 如下/ :/ (/ 1/ )/ 根据/ 可见/ 性/ 的/ 变化/ 来/ 增大/ 误差/ 阈值/ ,/ 由此/ 来/ 调整/ 初始/ 光源/ 割/ ./ 根据/ 代表/ 点/ 计算/ 光源/ 割时/ ,/ 我们/ 保存/ 搜索/ 过/ 的/ 每/ 一个/ 光源/ 结点/ 的/ 误差/ 上限/ ./ 只有/ 当/ 一个/ 结点/ 的/ 误差/ 上限/ 大于/ 误差/ 阈值/ 时/ ,/ 该/ 结点/ 的/ 子/ 结点/ 才/ 需要/ 继续/ 搜索/ ./ 于是/ ,/ 我们/ 可/ 将/ 误差/ 阈值/ 放大/ 一些/ ,/ 就/ 可/ 将/ 初始/ 光源/ 割/ 的/ 结点/ 往/ 粗化/ 结点/ 移动/ ./ 为此/ ,/ 我们/ 可/ 根据/ 可见/ 性/ 的/ 变化/ 来/ 更新/ 误差/ 阈值/ ./ 当/ 初始/ 光源/ 割中/ 的/ 一个/ 结点/ ,/ 对于/ 代表/ 点/ 不/ 可见/ 而/ 对于/ 一个/ 成像/ 点/ 可见/ 时/ ,/ 我们/ 就/ 假设/ 该/ 结点/ 对于/ 代表/ 点/ 可见/ ,/ 并/ 根据/ 式/ (/ 1/ )/ 重新/ 计算误差/ 阈值/ ./ (/ 2/ )/ 优化/ 误差/ 上限/ 的/ 计算/ ./ 根据/ 式/ (/ 3/ )/ 计算/ 一个/ 光源/ 结点/ 对/ 一个/ 成像/ 点/ 的/ 误差/ 上限/ 时/ ,/ 考虑/ 了/ 材质/ 项/ 的/ 上限/ Mupper/ 和/ 几何/ 项/ 的/ 上限/ Gupper/ ./ 由于/ 同一个/ 类/ 的/ 成像/ 点/ 具有/ 相同/ 的/ 材质/ 和/ 类似/ 的/ 法线/ 方向/ ,/ 所以/ Mupper/ 可以/ 保持/ 不变/ ./ 但/ Gupper/ 主要/ 决定/ 于/ 成像/ 点到/ 光源/ 结点/ 所/ 覆盖/ 区域/ 的/ 距离/ 及/ 相对/ 位置/ 关系/ ,/ 其值/ 可/ 变小/ 以/ 使得/ 初始/ 光源/ 割向/ 粗化/ 的/ 光源/ 结点/ 移动/ ./ 为此/ ,/ 根据/ 成像/ 点/ 所在/ 网格/ 单元/ 的/ 8/ 个/ 顶点/ 计算/ 它们/ 各自/ 相对/ 于/ 各个/ 光源/ 结点/ 的/ Gupper/ ,/ 然后/ 从中/ 取出/ 最小/ 者/ 作为/ 优化/ 误差/ 上限/ 计算/ 的/ G/ 项/ ./ 基于/ 以上/ 分析/ ,/ 算法/ 使用/ 如下/ 公式/ 来/ 计算/ 光源/ 结点/ C/ 的/ 误差/ 上限/ EC/ -/ upper/ :/ EC/ -/ upper/ (/ P/ )/ =/ Mupperx/ (/ )/ pminxi/ ∈/ GVGupperx/ (/ )/ (/ )/ i/ ∑/ i/ ∈/ C/ 其中/ ,/ GV/ 为/ 成像/ 点/ 所在/ 网格/ 的/ 顶点/ 的/ 集合/ ./ 4/ 实验/ 及/ 讨论/ 本文/ 所有/ 实验/ 均/ 在/ 一台/ DellT3400/ 微机/ 上/ 进行/ ,/ 该机/ 装有/ 一个/ 双核/ 2.33/ GHzIntelCoreE5650CPU/ ,/ 有/ 2GB/ 内存/ ./ 因为/ 算法/ 是/ 单线程/ 的/ ,/ 实验/ 中/ 只/ 使用/ 了/ 一个/ 核/ ./ 我们/ 使用/ 3/ 个/ 不同/ 复杂度/ 的/ 场景/ 来/ 验证/ 新/ 算法/ 的/ 性能/ ,/ 及/ 与/ 一些/ 已有/ 工作/ 进行/ Page5/ 对比/ ./ 这些/ 场景/ 及/ 相关/ 数据/ 在/ 图/ 3/ 及表/ 1/ 给出/ ./ 我们/ 在/ 实验/ 中取/ 误差/ 阈值/ 为/ 2/ %/ ,/ 每个/ 成像/ 点/ 的/ 光源/ 割中/ 的/ 结点/ 个数/ 上限/ 为/ 1000/ ./ 考虑/ 到/ 场景/ 在/ 观察/ 过程中将/ 从/ 各个/ 方向/ 进行/ 绘制/ ,/ 算法/ 使用/ 正方体/ 三维/ 网格/ 划分/ 场景/ ,/ 并/ 以/ 场景/ 包围/ 盒/ 最长/ 边上/ 网格/ 数/ 确定/ 分辨率/ ./ 网格/ 分辨率/ 对于/ 我们/ 算法/ 在/ 场景/ 三维空间/ 连贯性/ 的/ 利用/ 方面/ 有/ 较大/ 的/ 影响/ ,/ 我们/ 通过/ 许多/ 实验/ 发现/ ,/ 当/ 这/ 一值/ 为/ 40/ 时/ 对于/ 我们/ 的/ 实验/ 场景/ 能/ 得到/ 较/ 好/ 的/ 加速/ 效果/ ./ 因此/ ,/ 本文/ 的/ 实验/ 都/ 使用/ 这一值/ 来/ 确定/ 网格/ 分辨率/ ./ 除/ 特殊/ 说明/ 外/ ,/ 每个/ 场景/ 的/ 图像/ 分辨率/ 为/ 640/ ×/ 480/ ,/ 每/ 像素/ 投射/ 一根/ 光线/ ./ 场景/ 面片/ 寺庙/ 154/ 会议室/ 5143/ 大厅/ 300716/ 表/ 2/ 本文/ 方法/ 与/ 原始/ 方法/ 绘制/ 结果/ 对比/ 场景/ 寺庙/ 98.33195/ ./ 6669.8100/ ./ 33131.9452/ ./ 6/ 会议室/ 281.63562/ ./ 26290.7283/ ./ 81323.93194/ ./ 9/ 大厅/ 310.55620/ ./ 10357.6312/ ./ 72373.77258/ ./ 3/ 注/ :/ #/ :/ 平均/ 每个/ 像素/ 对应/ 的/ 光源/ 割中/ 的/ 光源/ 结点/ 数目/ ./ / :/ 平均/ 每个/ 像素/ 对应/ 的/ 在/ 光源/ 数中/ 搜索/ 的/ 结点/ 数目/ ./ …/ :/ 平均/ 每个/ 像素/ 的/ 光源/ 割中/ 的/ 过/ 分割/ 结点/ 个数/ ./ -/ :/ 新/ 方法/ 相比/ 于/ 原始/ Lightcuts/ 方法/ 在/ 光源/ 树中/ 搜索/ 步数/ 的/ 节省/ 效率/ ,/ 以/ 下面/ 的/ 公式/ 计算/ :/ (/ c/ -/ d/ )/ // d/ ,/ c/ 和/ d/ 分别/ 指/ Lightcuts/ 方法/ 和/ 新/ 算法/ 的/ 搜索/ 步数/ ./ 绘制/ 加速/ 比/ :/ 新/ 方法/ 相比/ 于/ 原始/ Lightcuts/ 方法/ 的/ 加速/ 率/ ,/ 以/ 下面/ 的/ 公式/ 计算/ :/ (/ a/ -/ b/ )/ // b/ ,/ 这里/ a/ 和/ b/ 分别/ 指/ Lightcuts/ 方法/ 和/ 新/ 方法/ 的/ 绘制/ 时间/ ./ 新/ 方法/ 的/ 绘制/ 时间/ 中/ 包括/ 空间/ 聚类/ 时间/ ./ 光源/ 的/ 复杂程度/ 对/ 绘制/ 效率/ 的/ 影响/ 很大/ ./ 为此/ ,/ 我们/ 使用/ 不同/ 数目/ 、/ 不同/ 类型/ 的/ 面光源/ ,/ 对/ 大厅/ 和/ 会议室/ 场景/ 进行/ 绘制/ 测试/ ,/ 每个/ 面光源/ 都/ 离散/ 成/ 一些/ 点光源/ 进行/ 近似/ ./ 本文/ 使用/ 光源/ 数目/ 与/ 点光源/ 方向/ 的/ 平均/ 差异/ 来/ 度量/ 光源/ 的/ 复杂程度/ ./ 光源/ 数量/ 越/ 多/ ,/ 点光源/ 方向/ 的/ 平均/ 差异/ 越大/ ,/ 则/ 光照/ 计算/ 越/ 复杂/ ./ 我们/ 在/ 实验/ 中/ 使用/ 3/ 种/ 不同/ 类型/ 的/ 面光源/ 进行/ 测试/ ,/ 它们/ 的/ 复杂度/ 由/ 低/ 到/ 高/ 排序/ 为/ :/ 平面/ 光源/ 、/ 柱面/ 光图/ 4/ 不同/ 光源/ 复杂度/ 下/ ,/ 新/ 算法/ 的/ 加速/ 效果/ (/ 横轴/ 表示/ 场景/ 中/ 点光源/ 的/ 个数/ ,/ 纵轴/ 表示/ 新/ 算法/ 相对/ 于/ Lightcuts/ 算法/ 的/ 加速/ 比/ )/ 4.1/ 加速/ 效果/ 绘制图/ 3/ 中/ 实验/ 场景/ 的/ 统计数据/ 在/ 表/ 2/ 中/ 列出/ ./ 实验/ 表明/ ,/ 新/ 算法/ 可/ 很/ 好/ 地/ 加速/ ,/ 加速/ 率/ 可达/ 32.70/ %/ ~/ 49.15/ %/ ,/ 并且/ 平均/ 每个/ 像素/ 的/ 过/ 分割/ 结点/ 一般/ 不/ 多于/ 3/ 个/ ,/ 相比/ 于/ 它们/ 的/ 光源/ 割中/ 的/ 结点/ 数目/ 是/ 很小/ 的/ ./ 这/ 说明/ ,/ 新/ 方法/ 计算/ 出/ 的/ 光源/ 割/ 与/ Lightcuts/ 方法/ 的/ 实际/ 光源/ 割/ 很/ 接近/ ,/ 即/ 新/ 算法/ 的/ 初始/ 光源/ 割能/ 很/ 好/ 地/ 反映/ 各/ 像素/ 的/ 实际/ 光源/ 割/ 的/ 情况/ ,/ 节省/ 关于/ 光源/ 割/ 的/ 搜索/ 计算/ ./ 正如/ 3.2/ 节中/ 所/ 讨论/ 的/ ,/ 过/ 分割/ 对于/ 光照/ 质量/ 的/ 影响/ 不/ 大/ ,/ 不会/ 导致/ 视觉/ 上/ 的/ 不/ 连贯性/ ./ 源/ 和/ 球面/ 光源/ ./ 实验/ 结果/ 如图/ 4/ 所示/ :/ 当/ 光源/ 数目/ 增加/ 时/ ,/ 算法/ 加速/ 效果/ 呈/ 波动/ 上升/ 的/ 趋势/ ;/ 在/ 光源/ 数目/ 相同/ 的/ 情况/ 下/ ,/ 使用/ 较/ 复杂/ 的/ 光源/ 时/ ,/ 算法/ 的/ 加速/ 效果/ 较/ 好/ ./ 综上/ 可知/ ,/ 光源/ 情况/ 越/ 复杂/ ,/ 新/ 算法/ 的/ 加速/ 效果/ 就/ 越/ 好/ ./ 这/ 是因为/ ,/ 在/ 复杂/ 光源/ 情况/ 下/ ,/ 遮挡/ 情况/ 和/ 法向/ 分布/ 情况/ ,/ 对/ 光源/ 割/ 的/ 搜索/ 效率/ 有/ 很大/ 的/ 影响/ ;/ 而/ 新/ 算法/ 对此/ 进行/ 了/ 高效/ 的/ 处理/ ./ Page64/ ./ 2/ 与/ 基于/ 图像/ 连贯性/ 的/ 加速/ 算法/ 的/ 比较/ 除了/ 与/ Lightcuts/ 算法/ 进行/ 比较/ 外/ ,/ 我们/ 还/ 与/ 利用/ 图像/ 空间/ 连贯性/ 进行/ 加速/ 的/ 算法/ 进行/ 比较/ ,/ 包括/ ReconstructionLightcuts/ 算法/ [/ 2/ ]/ 和/ CoherenceLightcuts/ 算法/ [/ 3/ ]/ ./ 为了/ 比较/ 不同/ 复杂度/ 场景/ 下/ 3/ 种/ 算法/ 对/ 连贯性/ 的/ 利用/ 程度/ ,/ 实验/ 中/ 绘制/ 了/ 由近及远/ 时/ 的/ 一系列/ 图像/ ,/ 如图/ 5/ 所示/ ./ 图/ 5/ 实验所/ 使用/ 的/ 场景/ (/ 按/ 镜头/ 的/ 近/ 及/ 远/ 排序/ )/ 实验/ 用/ 场景/ 中/ 所有/ 可见/ 的/ 三角形/ 面片/ 的/ 面积/ 之/ 和/ 与/ 它们/ 的/ 投影/ 面积/ 之/ 和/ 的/ 比来/ 度量/ 图象/ 的/ 连贯性/ ,/ 该/ 比值/ 越大/ ,/ 则/ 图象/ 的/ 连贯性/ 越小/ ,/ 即/ 单位/ 面积/ 内/ 场景/ 的/ 复杂度/ 越高/ ./ 实验/ 结果/ 如图/ 6/ 所示/ ,/ 当/ 场景/ 在/ 投影面/ 上/ 投影/ 变/ 小时/ ,/ 3/ 种/ 算法/ 的/ 搜索/ 步骤/ 的/ 节省/ 效率/ 都/ 会/ 有所/ 下降/ ./ 但/ 本文/ 算法/ 的/ 加速/ 性能/ 比较稳定/ ,/ 下降/ 幅度/ 不/ 大/ ,/ 而/ 其它/ 两种/ 算法/ 都/ 有/ 较/ 大幅度/ 的/ 下降/ ,/ 甚至/ 没有/ 加速/ 效果/ ./ 与/ CoherenceLightcuts/ 算法/ 相比/ ,/ 虽然/ 它/ 的/ 搜索/ 步骤/ 的/ 节省/ 效率/ 比/ 本文/ 算图/ 63/ 种/ 算法/ 相对/ 于/ Lightcuts/ 的/ 加速/ 效果/ 的/ 比较/ (/ 面积/ 比/ 为/ 场景/ 中/ 所有/ 可见/ 的/ 三角形/ 面片/ 的/ 面积/ 之/ 和/ 与/ 它们/ 的/ 投影/ 面积/ 之/ 和/ 的/ 比/ )/ 法/ 的/ 高/ ,/ 但/ 该/ 算法/ 只能/ 节省/ 搜索/ 计算/ ,/ 而/ 不能/ 节省/ 亮度/ 贡献/ 的/ 计算/ ,/ 所以/ 其/ 加速/ 效果/ 不及/ 新/ 算法/ ./ 而/ 与/ ReconstructionLightcuts/ 算法/ 相比/ ,/ 它/ 的/ 搜索/ 步骤/ 的/ 节省/ 效率/ 有时/ 会高过/ 新/ 算法/ ,/ 但/ 它/ 需要/ 为/ 每个/ 像素/ 块/ 创建/ 一个/ 光源/ 树/ ,/ 耗时/ 较/ 多/ ./ 而/ 新/ 算法/ 仅/ 需/ 对/ 代表/ 成像/ 点/ 的/ 光源/ 割/ 进行/ 调整/ ,/ 需时/ 较/ 少/ ,/ 所以/ 新/ 算法/ 的/ 加速/ 比/ 相对/ 较/ 高/ ./ 由/ 上/ 可知/ ,/ 新/ 算法/ 的/ 加速/ 效果/ 比较稳定/ ,/ 便于/ 对/ 场景/ 进行/ 各种/ 远近/ 的/ 绘制/ ./ 5/ 结语/ 本文/ 基于/ 空间/ 聚类/ 来/ 利用/ 场景/ 的/ 连贯性/ ,/ 能/ 很/ 好/ 地/ 减少/ Lightcuts/ 方法/ 使用/ 时/ 的/ 光源/ 割/ 的/ 搜索/ 计算/ ,/ 提高/ 绘制/ 效率/ ,/ 即/ 先为/ 成像/ 点/ 的/ 每/ 一个/ 类/ 的/ 代表/ 点/ 计算/ 一个/ 光源/ 割/ ,/ 再/ 以此/ 作为/ 该类/ 中/ 其它/ 成像/ 点/ 搜索/ 其/ 光源/ 割/ 的/ 起始/ 位置/ ,/ 可/ 共享/ 利用/ 很多/ 光源/ 结点/ 的/ 搜索/ 计算/ ./ 实验/ 表明/ ,/ 本文/ 提出/ 的/ 新/ 算法/ 可/ 有效/ 提高/ 绘制/ 速度/ ,/ 并且/ 光源/ 情况/ 越/ 复杂/ ,/ 场景/ 越大/ ,/ 则/ 加速/ 效果/ 越好/ ./ 与/ 基于/ 图象/ 连贯性/ 的/ 方法/ 相比/ ,/ 新/ 算法/ 的/ 加速/ 性能/ 更好/ ,/ 并且/ 针对/ 不同/ 远近/ 的/ 绘制/ 的/ 加速/ 情况/ 更/ 稳定/ ,/ 一般/ 不会/ 出现/ 减速/ 的/ 情况/ ./ 总之/ ,/ 新/ 算法/ 提高/ 了/ Lightcuts/ 方法/ 的/ 计算/ 效率/ ,/ 特别/ 适合/ 处理/ 大规模/ 复杂/ 的/ 光照/ 计算/ ./ 致谢/ ThomasDeBodt/ 提供/ 了/ 开/ 源代码/ ,/ 在/ 此/ 表示感谢/ !/ 

