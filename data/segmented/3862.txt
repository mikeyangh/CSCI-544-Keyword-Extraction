Page1/ 缩减/ 轮数/ PRESENT/ 算法/ 的/ Biclique/ 分析/ 龚征/ 1/ )/ ,/ 2/ )/ 刘树生/ 1/ )/ 温雅/ 敏/ 3/ )/ 唐/ 韶华/ 4/ )/ 1/ )/ (/ 华南/ 师范大学/ 计算机/ 学院/ 广州/ 510631/ )/ 2/ )/ (/ 中国科学院/ 信息工程/ 研究所/ 信息安全/ 国家/ 重点/ 实验室/ 北京/ 100093/ )/ 3/ )/ (/ 广东/ 商学院/ 数学/ 与/ 计算/ 科学/ 学院/ 广州/ 510320/ )/ 4/ )/ (/ 华南理工大学/ 计算机科学/ 与/ 工程学院/ 广州/ 510641/ )/ 摘要/ 轻量级/ 分组/ 密码/ 算法/ PRESENT/ 由于/ 其/ 出色/ 的/ 硬件/ 实现/ 性能/ 和/ 简洁/ 的/ 轮/ 函数/ 设计/ ,/ 一经/ 提出/ 便/ 引起/ 了/ 工业界/ 与/ 学术界/ 的/ 广泛/ 关注/ ./ 文中/ 作者/ 基于/ Biclique/ 分析方法/ ,/ 首次/ 提出/ 针对/ 21/ 轮/ PRESENT/ -/ 80/ 算法/ 的/ Biclique/ 密钥/ 恢复/ 攻击/ 方法/ ./ 该/ 攻击/ 方法/ 需要/ 278.9/ 的/ 计算/ 复杂度/ 和/ 264/ 的/ 数据/ 复杂度/ ./ 此外/ ,/ 针对/ PRESENT/ -/ 80/ 的/ Biclique/ 攻击/ 也/ 可/ 推广/ 到/ 相同/ 轮数/ 的/ PRESENT/ -/ 128/ 和/ DM/ -/ PRESENT/ 压缩/ 函数/ 的/ 安全性/ 分析/ ./ 与/ 其它/ 已/ 公开/ 密码学/ 安全性/ 分析/ 结果/ 相比/ ,/ 作者/ 提出/ 的/ Biclique/ 攻击/ 在/ 内存/ 复杂度/ 上/ 具有/ 一定/ 的/ 优势/ ./ 关键词/ 物/ 联网/ ;/ 轻量级/ 分组/ 密码/ ;/ PRESENT/ ;/ Biclique/ 分析/ 1/ 引言/ 物/ 联网/ 是/ 继/ 因特网/ 出现/ 之后/ 信息技术/ 领域/ 的/ 又/ 一/ 重大/ 技术/ 进展/ ,/ 它/ 能/ 帮助/ 我们/ 将/ 信息/ 转变/ 为/ 洞察力/ ,/ 提高/ 决策/ 的/ 质量/ ,/ 优化/ 工业/ 控制/ 过程/ 和/ 生产/ 管理/ ,/ 减少/ 物流/ 过程/ 中/ 的/ 损耗/ ,/ 必将/ 对/ 经济/ 发展/ 和/ 社会/ 生活/ 产生/ 深远影响/ ./ 但/ 从/ 典型/ 物/ 联网/ 硬件平台/ ,/ 如/ 无/ Page2/ 线/ 传感器/ 网络/ (/ WirelessSensorNetwork/ ,/ WSN/ )/ 和/ 射频/ 识别/ 标签/ (/ RadioFrequencyIdentification/ ,/ RFID/ )/ 的/ 计算/ 、/ 存储/ 和/ 能量/ 上/ 来看/ ,/ 直接/ 采用/ 现有/ 广泛应用/ 的/ 对称/ 密码学/ 算法/ (/ 如/ AES/ 、/ SHA/ 等/ )/ 仍然/ 受到/ 非常/ 大/ 的/ 限制/ ./ 从/ 典型/ WSN/ 硬件/ 来看/ ,/ 处理器/ 一般/ 为/ 8/ ~/ 16/ 位/ ,/ 存储/ 一般/ 也/ 只有/ 64/ ~/ 1628KB/ ,/ 而/ RFID/ 上/ 的/ 硬件/ 水平/ 更加/ 低于/ WSN/ ./ 某些/ 低端/ RFID/ 只/ 支持/ 被动式/ 访问/ ,/ 在/ 硬件资源/ 上/ 有着/ 更加/ 严格/ 的/ 限制/ ./ 由于/ WSN/ 和/ RFID/ 基于/ 无线网络/ 传输/ 信息/ ,/ 攻击者/ 更加/ 容易/ 获得/ 、/ 干扰/ 甚至/ 破坏/ 信息/ 传输/ ./ 因此/ ,/ 许多/ WSN/ 和/ RFID/ 典型/ 应用/ 仍然/ 需要/ 信息安全/ 技术/ 加以/ 保障/ ,/ 例如/ 基于/ RFID/ 的/ 访问控制/ 、/ 产品/ 防伪/ 或/ 电子/ 护照/ 应用/ ,/ 其/ 数据/ 保密性/ 、/ 认证/ 性/ 和/ 不可/ 伪造/ 性/ 的/ 需求/ 不言而喻/ ./ 现有/ 数据/ 表明/ 一个/ 典型/ RFID/ 标签/ 具有/ 1000/ 到/ 10000/ 个/ 标准/ 门电路/ ,/ 其中/ 仅/ 有/ 200/ 到/ 2000/ 个/ 门电路/ 可/ 用于/ 信息安全/ [/ 1/ -/ 2/ ]/ ./ 由于/ 上述/ 条件/ 限制/ ,/ 采用/ 轻量级/ 分组/ 密码/ 算法/ 作为/ 基础/ 成为/ 了/ 物/ 联网/ 信息安全/ 保障/ 的/ 现实/ 选择/ ./ 作为/ 国际/ 分组/ 密码/ 算法/ 标准/ 的/ AES/ 系列/ ,/ 目前/ 已/ 公开/ 的/ 最优化/ 的/ AES/ -/ 128/ 硬件/ 实现/ 仍然/ 需要/ 2400/ 个/ 门电路/ [/ 3/ ]/ ,/ 对于/ 受限/ 资源/ 环境/ 而言/ 还是/ 偏高/ ./ 在/ 国际/ 上/ ,/ 目前/ 已/ 提出/ 不少/ 面向/ 受限/ 环境/ 的/ 轻量级/ 分组/ 密码/ 算法/ ./ 如/ PRESENT/ [/ 4/ ]/ 、/ MESH/ [/ 5/ -/ 6/ ]/ 、/ LBlock/ [/ 7/ ]/ 和/ KLEIN/ [/ 8/ ]/ 等/ ./ 在/ 公开/ 发表/ 的/ 轻量级/ 分组/ 密码/ 算法/ 中/ ,/ PRESENT/ 算法/ [/ 4/ ]/ 由于/ 其/ 出色/ 的/ 硬件/ 实现/ 性能/ 和/ 简洁/ 的/ 轮/ 函数/ 设计/ ,/ 一经/ 提出/ 便/ 引起/ 了/ 工业界/ 与/ 学术界/ 的/ 广泛/ 关注/ ./ 表/ 1/ 公开/ 文献/ 中/ PRESENT/ -/ 80/ 算法/ 的/ 密码学/ 安全性/ 分析/ 结果/ 攻击方式/ 轮数/ 计算/ Differential16264264232/ [/ 9/ ]/ Saturation16220236232/ [/ 10/ ]/ Differential/ -/ algebraic16264/ ./ 58262216/ [/ 11/ ]/ Linear26272264232/ [/ 12/ ]/ MultipleDifferential18279264232/ [/ 13/ ]/ Differential/ -/ algebraic15273/ ./ 79259262/ [/ 14/ ]/ Structure18276264242/ [/ 15/ ]/ Biclique21278/ ./ 926428/ 本文/ 在/ 安全性/ 分析/ 方面/ ,/ PRESENT/ 由于/ 提出/ 时间/ 较/ 早/ ,/ 得到/ 了/ 业界/ 更/ 多/ 的/ 关注/ ./ 表/ 1/ 按/ 时间/ 先后顺序/ 列举/ 了/ 对于/ PRESENT/ 抗/ 差分/ 、/ 抗/ 线性/ 以及/ 抗弱/ 密钥/ 攻击/ 等/ 各种/ 密码学/ 分析/ 结果/ [/ 9/ -/ 15/ ]/ ./ 在/ 2008/ 年/ ,/ Wang/ [/ 9/ ]/ 发表/ 了/ 对/ 16/ 轮/ PRESENT/ 的/ 差分/ 攻击/ ,/ 计算/ 复杂度/ 为/ 264/ ,/ 同时/ 需要/ 264/ 个/ 选择/ 明文/ 和/ 264/ 的/ 内存/ 访问/ ./ 随后/ 在/ CT/ -/ RSA2009/ 年/ 会上/ ,/ Collard/ 和/ Standaert/ [/ 10/ ]/ 发表/ 了/ 对/ 16/ 轮/ PRESENT/ 的/ 积分/ 攻击/ (/ Saturationattack/ )/ ,/ 计算/ 复杂度/ 和/ 数据/ 复杂度/ 分别/ 为/ 220/ 和/ 236/ ./ 在/ FSE2009/ 年/ 会上/ ,/ Albrecht/ 和/ Cid/ [/ 11/ ]/ 结合/ 代数/ 攻击/ 和/ 差分/ 攻击/ 提出/ 了/ 对/ 16/ 轮/ PRESENT/ 的/ 攻击/ ,/ 计算/ 复杂度/ 和/ 数据/ 复杂度/ 分别/ 为/ 264.58/ 和/ 262/ ./ 在/ 2010/ 年/ ,/ Cho/ [/ 12/ ]/ 提出/ 了/ 对/ 26/ 轮/ PRESENT/ 的/ 线性/ 攻击/ ,/ 计算/ 复杂度/ 和/ 数据/ 复杂度/ 分别/ 为/ 272/ 和/ 264/ ,/ 该/ 攻击/ 是/ 目前/ 已/ 公开/ 发表/ 文献/ 中/ 轮数/ 最高/ 的/ PRESENT/ 算法/ 密码学/ 分析/ 结果/ ./ 在/ FSE2011/ 年/ 会上/ ,/ Blondeau/ 和/ Gerard/ [/ 13/ ]/ 发表/ 了/ 基于/ 多重/ 差分/ 链/ 的/ 18/ 轮/ PRESENT/ 密码学/ 分析/ ,/ 计算/ 复杂度/ 和/ 数据/ 复杂度/ 分别/ 为/ 279/ 和/ 264/ ./ 在/ ACISP2011/ 年/ 会上/ ,/ Wang/ 等/ 人/ [/ 14/ ]/ 再次/ 研究/ 代数/ 攻击/ 和/ 差分/ 攻击/ 的/ 结合/ ,/ 提出/ 了/ 对/ 15/ 轮/ PRESENT/ 的/ 攻击/ ,/ 计算/ 复杂度/ 和/ 数据/ 复杂度/ 分别/ 为/ 273.79/ 和/ 259/ ./ 在/ FSE2012/ 年/ 会上/ ,/ Wang/ 等/ 人/ [/ 15/ ]/ 基于/ Structure/ 攻击方式/ 同样/ 给出/ 了/ 18/ 轮/ PRESENT/ -/ 80/ 的/ 密码学/ 分析/ 结果/ ./ 在/ 国内/ 中文/ 文献/ [/ 16/ -/ 18/ ]/ 中/ 也/ 给出/ 了/ 针对/ PRESENT/ -/ 80/ 的/ 密码学/ 分析/ 结果/ ,/ 但/ 分析/ 的/ 轮数/ 均/ 没有/ 超过/ 8/ 轮/ ./ 在/ 本文/ 中/ ,/ 我们/ 基于/ Biclique/ 分析方法/ ,/ 首次/ 提出/ 了/ 针对/ PRESENT/ 算法/ 的/ Biclique/ 密钥/ 恢复/ 攻击/ 方法/ ./ 为了/ 构造/ 该/ 攻击/ 方法/ ,/ 我们/ 首先/ 在/ 第/ 18/ 轮到/ 21/ 轮/ 的/ PRESENT/ -/ 80/ 算法/ 上/ 建立/ 了/ 两条/ 独立/ 的/ 相关/ 密钥/ 差分/ 链/ ,/ 并/ 通过/ 这/ 两条/ 密钥/ 差分/ 链/ 构造/ 了/ 维度/ 为/ 8/ 的/ Biclique/ ./ 随后/ 在/ 第/ 1/ 轮到/ 18/ 轮/ PRESENT/ -/ 80/ 算法/ 上/ ,/ 我们/ 构建/ 了/ 一条/ 在/ 第/ 10/ 轮/ 的/ 8/ 个/ 比特/ 位上/ 的/ 中间/ 相遇/ 路径/ ./ 最后/ 基于/ 上述/ Biclique/ 构造/ 和/ 中间/ 相遇/ 路径/ ,/ 我们/ 实现/ 了/ 针对/ 21/ 轮/ PRES/ -/ ENT/ -/ 80/ 算法/ 的/ 密钥/ 恢复/ 攻击/ ,/ 并/ 将/ 攻击/ 也/ 推广/ 至/ 21/ 轮/ 的/ PRESENT/ -/ 128/ 算法/ ./ 虽然/ 基于/ Biclique/ 攻击/ PRESENT/ -/ 80/ 的/ 计算/ 复杂度/ 278.9/ 比较/ 高/ ,/ 而且/ 与/ Cho/ 提出/ 的/ 26/ 轮/ Linear/ 攻击/ [/ 12/ ]/ 相比/ 在/ 轮数/ 上/ 并/ 不/ 占优/ ,/ 但/ 与/ 已/ 公开/ 密码学/ 安全性/ 分析/ 结果/ 相比/ ,/ 我们/ 提出/ 的/ Biclique/ 攻击/ 在/ 内存/ 复杂度/ 上/ 具有/ 一定/ 的/ 优势/ ./ 此外/ ,/ 我们/ 也/ 基于/ 上述/ 8/ 维/ Biclique/ 构造/ ,/ 给出/ 了/ 针对/ 21/ 轮/ DM/ -/ PRESENT/ 压缩/ 函数/ 的/ Pseudo/ 原像/ 攻击/ ./ 本文/ 组织/ 结构/ 如下/ :/ 在/ 第/ 2/ 节中/ ,/ 我们/ 将/ 简要/ 介绍/ PRESENT/ 算法/ 的/ 基本知识/ ;/ 在/ 第/ 3/ 节将/ 给出/ Biclique/ 分析方法/ 的/ 基本原理/ 和/ 复杂度/ 计算公式/ ;/ 在/ 第/ 4/ 节中/ ,/ 我们/ 将/ 详细/ 说明/ 基于/ Biclique/ 分析方法/ 恢复/ 21/ 轮/ PRESENT/ -/ 80/ 密钥/ 的/ 方法/ ;/ 在/ 第/ 5/ 节中/ ,/ 我们/ 简要/ 说明/ 根据/ PRESENT/ -/ 80/ 攻击/ 所/ 构造/ 的/ Page3Biclique/ 来/ 推出/ 针对/ 21/ 轮/ DM/ -/ PRESENT/ 压缩/ 函数/ 的/ Pseudo/ 原像/ 攻击/ 步骤/ ;/ 在/ 第/ 6/ 节中/ 给出/ 本文/ 结论/ ./ 附录/ A/ 中/ 说明/ 了/ 21/ 轮/ PRESENT/ -/ 128/ 算法/ 的/ Biclique/ 密钥/ 恢复/ 攻击/ 方法/ ./ 2PRESENT/ 算法/ 简介/ PRESENT/ 算法/ 支持/ 80bit/ 和/ 128bit/ 密钥/ 长度/ ,/ 分组/ 长度/ 为/ 64bit/ ./ PRESENT/ 算法/ 在/ 面向/ 硬件/ 的/ 轻量化/ 上/ 得到/ 了/ 很/ 好/ 的/ 效果/ ,/ 其/ 综合/ 研究成果/ 已/ 被/ JournalofCryptology/ 录用/ [/ 4/ ]/ ./ 算法/ 的/ 设计/ 思想/ 图/ 1PRESENT/ 轮/ 函数/ 结构/ PRESENT/ 算法/ 的/ 密钥/ 扩展/ 函数/ 采用/ 了/ 循环/ 移位/ 寄存器/ 与/ S/ 盒/ 置换/ 运算/ 相结合/ 的/ 方法/ ,/ 综合/ 考虑/ 了/ 性能/ 与/ 安全性/ 的/ 平衡/ ./ 以/ PRESENT/ -/ 80/ 算法/ 密钥/ K/ =/ k79k78/ …/ k0/ ,/ 其/ 扩展/ 算法/ 步骤/ 如下/ :/ k18k17/ …/ k19/ ;/ 1/ ./ 首先/ 将/ 密钥/ K/ 循环/ 左移/ 61bit/ ,/ 即/ k79k78/ …/ k0/ =/ 2/ ./ 随后/ 用/ PRESENT/ 的/ 4bitS/ 盒/ ,/ 将/ 经过/ 上/ 一步/ 循环/ 左移/ 操作/ 之后/ 的/ 密钥/ K/ 的/ 最高/ 位/ 4bit/ 输入/ 进行/ 置换/ ,/ 即/ k79k78k77k76/ =/ S/ [/ k79k78k77k76/ ]/ ;/ 面向/ bit/ 的/ 异或/ 操作/ ./ 3/ ./ 将/ 5bit/ 轮/ 计数器/ (/ 总共/ 31/ 轮/ )/ 与/ k19k18k17k16k15/ 进行/ 完成/ 上述/ 操作/ 后/ ,/ 取/ 密钥/ K/ 的/ 高/ 64/ 位/ ,/ 即/ k79k78/ …/ k16/ 作为/ 轮/ 密钥/ 与/ 加解密/ 算法/ 中间/ 值/ 相异/ 或/ ./ PRESENT/ -/ 128/ 算法/ 的/ 轮/ 函数/ 与/ PRESENT/ -/ 80/ 完全一致/ ,/ 密钥/ 扩展/ 算法/ 也/ 只是/ 将/ 秘钥/ 长度/ 由/ 80bit/ 增加/ 为/ 128bit/ ,/ 具体/ 细节/ 可/ 参考/ Bogdanov/ 等/ 人/ 在/ 文献/ [/ 4/ ]/ 一文/ 中/ 所/ 给出/ 的/ 详细描述/ ./ 3Biclique/ 密码学/ 分析方法/ 目前/ 广泛/ 使用/ 的/ 迭代/ 式/ 分组/ 密码/ 的/ 设计/ 思路/ 是从/ 一些/ 基本/ 运算/ (/ 如/ 异或/ 、/ 加法/ 、/ 乘法/ 、/ 循环/ 移位/ 等/ )/ 出发/ ,/ 构造/ 简单/ 的/ 非线性/ 轮/ 函数/ ,/ 然后/ 通过/ 轮/ 函数/ 的/ 来源于/ Serpent/ 加密算法/ ,/ 但/ 出于/ 性能/ 上/ 的/ 考虑/ ,/ 在/ 扩散性/ 上/ 有所/ 弱化/ ./ PRESENT/ 分组/ 密码/ 采用/ bitslicing/ 的/ 方式/ 来/ 实现/ 轮/ 扩散/ 运算/ ,/ 算法/ 的/ 轮/ 函数/ 结构/ 如图/ 1/ 所示/ ./ 每轮/ 输入/ 64bit/ 在/ 通过/ 16/ 个/ 4bitS/ 盒/ 之后/ ,/ 直接/ 通过/ 硬件/ 连线/ 的/ 方式/ 将/ 每个/ 4bit/ 分组/ 都/ 扩散/ 出去/ ./ 同时/ PRESENT/ 的/ 密钥/ 扩展/ 函数/ 也/ 是/ 基于/ bit/ -/ shifting/ 的/ 方式/ 来/ 实现/ ,/ 并/ 没有/ 采用/ Rijndael/ 所/ 使用/ 的/ 最大/ 距离/ 码来/ 实现/ 算法/ 扩散性/ 的/ 最优化/ ,/ 在/ 抗/ 密码学/ 分析/ 上/ 存在/ 一定/ 风险/ ./ 例如/ 在/ 输入/ 差分/ 不为/ 0/ 的/ 情况/ 下/ ,/ 5/ 轮/ PRESENT/ 轮/ 函数/ 最低/ 仅/ 有/ 10/ 个/ S/ 盒/ 输出/ 也/ 不/ 为/ 0/ ,/ 远/ 低于/ 理想/ 扩散/ 性能/ ./ 迭代/ ,/ 与/ 密钥/ 扩展/ 函数/ 生成/ 的/ 轮/ 密钥/ 相结合/ ,/ 形成/ 具有/ 良好/ 密码学/ 性质/ 的/ 密码/ 算法/ ./ 由于/ 差分/ 、/ 线性/ 分析/ 等/ 传统/ 密码学/ 分析方法/ 已/ 被/ 广泛应用/ ,/ 轮/ 函数/ 的/ 设计/ 一般/ 都/ 充分考虑/ 了/ 非线性/ 和/ 扩散性/ ./ 但/ 在/ 密钥/ 扩展/ 函数/ 的/ 设计/ 上/ ,/ 往往/ 采用/ 简单/ 的/ 循环/ 移位/ 和/ 轮/ 常量/ 异或/ 的/ 方式/ 来/ 产生/ 轮/ 密钥/ ,/ 以/ 达到/ 提升/ 性能/ 和/ 降低/ 实现/ 代价/ 的/ 目的/ ./ 基于/ 中间/ 相遇/ 攻击/ 技术/ (/ Meet/ -/ In/ -/ The/ -/ MiddleAttack/ )/ ,/ Bogdanov/ 等/ 人/ [/ 19/ ]/ 在/ 亚密会/ 2011/ 中/ 首次/ 提出/ Biclique/ 分析方法/ ./ Biclique/ 方法/ 能/ 巧妙/ 地/ 利用/ 密钥/ 扩展/ 函数/ 部分/ 扩散性/ 的/ 弱点/ ,/ 成为/ 了/ 第一种/ 能/ 在/ 单/ 密钥/ 环境/ 下以/ 低于/ 穷举/ 复杂度/ 方式/ 攻击/ AES/ 全系列/ 加密算法/ 的/ 密码学/ 分析方法/ ./ 由于/ 轻量级/ 分组/ 密码/ 算法/ 大都/ 采用/ 快速/ 密钥/ 扩展/ 函数/ ,/ 扩散性/ 往往/ 较弱/ ,/ 最近/ 研究成果/ 表明/ IDEA/ [/ 20/ ]/ 、/ HIGHT/ [/ 21/ ]/ 、/ Piccolo/ [/ 22/ ]/ 和/ LBlock/ [/ 23/ ]/ 等/ 算法/ 在/ Biclique/ 攻击/ 下/ 也/ 无法/ 达到/ 理想/ 安全性/ ./ 上述/ 针对/ 不同/ 分组/ 密码/ 算法/ 的/ Biclique/ 密钥/ 恢复/ 攻击/ 的/ 思路/ 都/ 是/ 通过/ 分析/ 密钥/ 扩展/ 算法/ 在/ 非线性/ 和/ 扩散性/ 上/ 的/ 弱点/ ,/ 通过/ 自动化/ 搜索/ 的/ 方法/ 找出/ 两条/ 相互/ 独立/ 的/ 、/ 覆盖/ 尽可能/ 多/ 轮数/ 的/ 相关/ 密钥/ 差分/ 链/ ,/ 从而/ 构造/ 出/ 最大/ 轮数/ 的/ Biclique/ ,/ 从而/ 获得/ 比穷/ 搜索/ 更/ 低/ 的/ 攻击/ 复杂度/ ./ 由于/ 大部分/ Hash/ 算法/ 都/ 基于/ 分组/ 密码/ Page4/ 来/ 构造/ ,/ 将/ 密钥/ 扩展/ 算法/ 换为/ Hash/ 算法/ 中/ 的/ 消息/ 扩展/ 算法/ 也/ 可以/ 为/ 中间/ 相遇/ 攻击/ 提供/ 优势/ ./ 在/ 文献/ [/ 24/ ]/ 中/ ,/ Khovratovich/ 等/ 人/ 基于/ 上述/ 思路/ 将/ Biclique/ 分析方法/ 拓展/ 到/ 对/ Hash/ 算法/ 的/ 分析/ ,/ 首次/ 给出/ 了/ 针对/ 72/ 轮/ Skein/ -/ 512/ 的/ 第二/ 原像/ 攻击/ 以及/ 针对/ 45/ 轮/ SHA/ -/ 256/ 和/ 50/ 轮/ SHA/ -/ 512/ 的/ 原像/ 攻击/ ./ 3.1/ Biclique/ 攻击/ 步骤/ Biclique/ 分析方法/ 巧妙/ 地/ 通过/ 构造/ 完全/ 二分/ 图/ 的/ 方式/ ,/ 来/ 降低/ Meet/ -/ In/ -/ The/ -/ Middle/ 攻击/ 方法/ 中/ 的/ 计算/ 复杂度/ ./ 假定/ 分组/ 密码/ 算法/ E/ :/ {/ 0/ ,/ 1/ }/ n/ ×/ {/ 0/ ,/ 1/ }/ k/ →/ {/ 0/ ,/ 1/ }/ n/ (/ 分组/ 长度/ 为/ nbit/ ,/ 密钥/ 长度/ 为/ kbit/ )/ 可以/ 表示/ 为/ 3/ 个/ 独立/ 部分/ ,/ 即/ E/ =/ EF/ / EB/ / EC/ ,/ 攻击者/ A/ 基于/ Biclique/ 的/ 密钥/ 恢复/ 攻击/ 步骤/ 如下/ 所述/ :/ 1/ ./ A/ 选择/ 密钥/ 空间/ 的/ 一部分/ 作为/ Biclique/ 构造/ 的/ 密钥/ 组合/ ,/ 定义/ 为/ 2d/ ×/ 2d/ 的/ 矩阵/ 犓/ [/ i/ ,/ j/ ]/ ,/ 其中/ i/ ,/ j/ ∈/ {/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ 2d/ -/ 1/ }/ ./ 出于/ 简化/ 的/ 考虑/ ,/ 在/ 本文/ 之后/ 的/ 描述/ 中/ ,/ 如果/ 犓/ [/ i/ ,/ j/ ]/ 用于/ Biclique/ 构造/ 中/ 表示/ 为/ 密钥/ 空间/ 的/ 一部分/ 组合/ ,/ 如果/ 用于/ 中间/ 相遇/ 攻击/ 时/ ,/ 则/ 表示/ 为/ 相对/ 应/ 的/ 完整/ 轮/ 密钥/ ;/ 2/ ./ 通过/ 上述/ 划分/ ,/ 整个/ 密钥/ 空间/ 将/ 分为/ 2k/ -/ 2d/ 个子/ 空间/ ./ 对于/ 每个/ 子/ 空间/ 犓/ [/ i/ ,/ j/ ]/ ,/ A/ 相应/ 地/ 选择/ 2d/ 个/ 密文/ Ci/ 和/ 2d/ 个/ 中间状态/ Sj/ 满足条件/ / i/ ,/ j/ :/ Sj/ →/ 犓/ [/ i/ ,/ j/ ]/ 3/ ./ 通过/ 解密/ 预言/ 机/ ,/ A/ 从/ 2d/ 个/ Ci/ 中/ 解密/ 出所/ 对应/ 的/ 2d/ 个/ 明文/ Pi/ ;/ 4/ ./ A/ 检查/ 在/ 密钥/ 子/ 空间/ K/ 中/ 是否/ 存在/ 特定/ 密钥/ 犓/ [/ i/ ,/ j/ ]/ ,/ 满足条件/ / i/ ,/ j/ :/ Pi/ →/ 犓/ [/ i/ ,/ / ]/ 钥即/ 为/ 可能/ 的/ 实际/ 密钥/ Ks/ ./ 如果/ 现有/ 子/ 空间/ 均/ 不/ 满足条件/ ,/ 则/ 返回/ 步骤/ 2/ ,/ 重新/ 检查/ 下/ 一个/ 密钥/ 子/ 空间/ ./ 图/ 2/ 简化/ 描述/ 了/ 上述/ Biclique/ 攻击/ 步骤/ ./ 由于/ 攻击/ 需要/ 用到/ 解密/ 预言/ 机/ ,/ 所以/ Biclique/ 攻击/ 属于/ 选择/ 密文/ 攻击/ ,/ 而/ 传统/ 差分/ 攻击/ 仅/ 需要/ 选择/ 明文/ ,/ 在/ 安全/ 模型/ 的/ 假设/ 上/ Biclique/ 攻击/ 比/ 差分/ 攻击/ 更强/ 一些/ ./ 3.2/ Biclique/ 攻击/ 复杂度/ 根据/ 3.1/ 小节/ 的/ 攻击/ 步骤/ 描述/ ,/ 可/ 分析/ 得出/ Biclique/ 攻击/ 的/ 计算/ 复杂度/ ./ 假定/ 分组/ 密码/ 算法/ E/ 的/ 密钥/ 长度/ 为/ k/ ,/ 分组/ 长度/ 为/ n/ ,/ Biclique/ 攻击/ 的/ 维度/ 为/ d/ ,/ 根据/ 生日/ 悖论/ 和/ 中间/ 相遇/ 攻击/ 原理/ ,/ 整个/ 攻击/ 过程/ 最多/ 需/ 重复/ 2k/ -/ 2d/ 次/ ,/ 总/ 的/ 复杂度/ CFull/ 计算/ 如/ 等式/ (/ 1/ )/ 所示/ :/ 其中/ :/ CBiclique/ 表示/ 构造/ 一个/ Biclique/ 所/ 需要/ 的/ 计算/ 复杂度/ ./ 在/ 文献/ [/ 19/ ]/ 中/ ,/ 构造/ Biclique/ 的/ 方式/ 有/ 基于/ Rebound/ 和/ 基于/ 独立/ 相关/ 密钥/ 差分/ 链/ 两种/ ./ 两种/ 构造方法/ 都/ 可以/ 根据/ 具体/ 算法/ 的/ 轮/ 函数/ 和/ 密钥/ 扩展/ 函数/ 的/ 特性/ ,/ 通过/ 差分/ 链/ 迭代/ 扩展/ 的/ 方式/ 来/ 降低/ 攻击/ 所/ 需/ 计算/ 复杂度/ ;/ CMITM/ 表示/ 中间/ 相遇/ 攻击/ 所/ 需要/ 的/ 计算/ 复杂度/ ,/ 对于/ 整个/ 攻击/ 复杂度/ CFull/ 是否/ 低于/ 穷/ 搜索/ 整个/ 密钥/ 空间/ 起到/ 决定性/ 作用/ ./ 根据/ Biclique/ 构造/ 方式/ 的/ 不同/ ,/ CMITM/ 的/ 计算方法/ 也/ 有所/ 差别/ ,/ 但/ 基本上/ 都/ 可/ 归结/ 于/ 计算/ / i/ ,/ j/ :/ Pi/ →/ 犓/ [/ i/ ,/ / ]/ 定/ 分组/ 密码/ 算法/ E/ =/ EF/ / EB/ / EC/ 的/ 总/ 轮数/ 为/ r/ ,/ 其中/ EF/ 、/ EB/ 和/ EC/ 的/ 轮数/ 分别/ 为/ rF/ 、/ rB/ 和/ rC/ ./ 由于/ 中间/ 相遇/ 攻击/ 是/ 在/ 除去/ Biclique/ 构造/ 所/ 覆盖/ 的/ 轮数/ 之后/ 进行/ ,/ 所以/ CMITM/ 的/ 复杂度/ 需要/ 通过/ 相应/ 的/ 换算/ ,/ 从而/ 转换/ 为/ 一次/ 分组/ 加密/ 或/ 解密/ 运算/ 的/ 复杂度/ ./ 在/ Bogdanov/ 等/ 人/ [/ 19/ ]/ 对/ AES/ 的/ 攻击/ 中/ ,/ 中间/ 相遇/ 攻击/ 的/ 复杂度/ 是/ 通过/ 统计/ 攻击/ 所/ 经过/ 的/ S/ 盒/ 的/ 总数/ 与/ AES/ 完整/ 算法/ 总/ 的/ S/ 盒/ 运算/ 数量/ 加以/ 对比/ 得出/ ./ 在/ 本文/ 中/ ,/ 针对/ PRESENT/ 的/ 中间/ 相遇/ 攻击/ 复杂度/ 也/ 将/ 用/ 此/ 方式/ 加以/ 估算/ ;/ CFalse/ 表示/ 中间/ 相遇/ 攻击/ 成功/ ,/ 但/ 检查/ 返回/ 密钥/ 并/ 不是/ 实际/ 使用/ 的/ 密钥/ Ks/ 所需/ 复杂度/ ./ 由于/ Biclique/ 的/ 维度/ 为/ d/ ,/ 如果/ 中间/ 相遇/ 攻击/ 所/ 对应/ 的/ 中间/ 值为/ tbit/ ,/ 那么/ 出现/ 中间/ 相遇/ 攻击/ 成功/ ,/ 但/ 返回/ 密钥/ 错误/ 的/ 可能性/ 为/ 22d/ -/ t/ ./ 因为/ 错误/ 的/ 密钥/ 无法/ 得/ 出现/ 有明/ 密文/ 对/ 的/ 一一对应/ 关系/ ,/ 该/ 检测/ 工作/ 只/ 需/ 一次/ 完整/ 加密/ 或/ 解密/ 运算/ 即可/ ./ 如果/ 检测/ 出/ 返回/ 密钥/ 错误/ ,/ 攻击者/ 将/ 继续执行/ Biclique/ 分析/ ./ 从/ 上述/ 分析/ 可知/ ,/ CFalse/ 对/ 整个/ 攻击/ 的/ 复杂度/ 影响/ 为/ 22d/ -/ t/ ./ 从/ 上述/ 分析/ 可知/ ,/ Biclique/ 攻击/ 复杂度/ 关键在于/ 能否/ 在/ 被/ 攻击/ 的/ 算法/ 中/ 快速/ 地/ 建立/ 大/ 维度/ 、/ 多/ 轮数/ 的/ Biclique/ 结构/ ,/ 从而/ 将/ 整个/ 攻击/ 的/ 复杂度/ 降低/ 到/ 略高于/ 2k/ -/ 2d/ 的/ 水平/ ./ 由于/ 现有/ 分组/ 密码/ 的/ 设计/ 基本/ 都/ 充分考虑/ 了/ 轮/ 函数/ 的/ 快速/ 扩散性/ ,/ 在/ 实际/ 分析/ 中/ 建立/ 大/ 维度/ 的/ Biclique/ 结构/ 并/ 不是/ 一项/ 简单/ 的/ 工作/ ./ Page54/ 缩减/ 轮数/ PRESENT/ 算法/ 的/ Biclique/ 分析/ 在/ 本节/ 中/ ,/ 我们/ 将/ 利用/ 独立/ 相关/ 密钥/ 差分/ 链/ 的/ 方式/ ,/ 对/ 缩减到/ 21/ 轮/ 的/ PRESENT/ -/ 80/ 算法/ 构造/ 出/ 基于/ Biclique/ 的/ 密钥/ 恢复/ 攻击/ ./ 该/ 攻击/ 方法/ 能以/ 278.9/ 的/ 计算/ 复杂度/ 和/ 264/ 数据/ 复杂度/ 、/ 成功/ 概率/ 约/ 为/ 1/ 的/ 条件/ 下/ 完成/ 密钥/ 的/ 破解/ 工作/ ./ 4.1/ PRESENT/ 算法/ 相关/ 密钥/ 差分/ 链/ 构造/ 在/ 针对/ AES/ 的/ Biclique/ 攻击/ 中/ ,/ Bogdanov/ 等/ 人/ [/ 19/ ]/ 通过/ 两条/ 相互/ 独立/ 的/ 相关/ 密钥/ 差分/ 链来/ 构造/ 8/ 维/ 的/ Biclique/ ./ 由于/ PRESENT/ 采用/ 4bitS/ 盒/ ,/ 我们/ 也/ 将/ 算法/ 的/ 密钥/ 与/ 中间/ 值/ 部分/ 采取/ 4bit/ 分组/ 的/ 方式/ 进行/ 截断/ 差分/ 分析/ ./ 采用/ 4bit/ 分组/ 之后/ ,/ PRESENT/ -/ 80/ 表/ 2/ 针对/ PRESENT/ -/ 80/ 的/ 4/ 轮/ 相互/ 独立/ 的/ 密钥/ 相关/ 差分/ 链轮/ 数/ 1800000000000000000xx00000000000000000190xxx0000000000000000000000000000000020000000xxx00000000000x000x000x000x0002100000000000xxx000000xxxxxxxxxxxxxxxx/ 由于/ PRESENT/ 的/ 密钥/ 扩展/ 函数/ 只/ 截取/ 高/ 64/ 位/ 作为/ 轮/ 密钥/ ,/ 上述/ 两条/ 密钥/ 差分/ 链/ 充分利用/ 了/ 扩展/ 函数/ 的/ 循环/ 左移/ 性质/ ./ 从表/ 2/ 所/ 给出/ 的/ 差分/ 链/ 的/ 非/ 零/ 差分/ 位置/ 可以/ 看出/ ,/ 差分/ 链/ / j/ 和/ Δ/ i/ 无论/ 在/ 密钥/ 差分/ 还是/ 中间/ 值/ 差分/ 上/ 都/ 是/ 相互/ 独立/ 的/ ./ 同时/ 差分/ 链/ 满足/ / j/ →/ / KBoomerang/ 攻击/ 的/ 方式/ [/ 25/ ]/ 来/ 构造/ 28/ ×/ 28/ 对/ 不同/ 的/ 输入输出/ 组合/ ,/ 其/ 构造/ 方式/ 如下/ :/ (/ 1/ )/ 攻击者/ 任意/ 选择/ 三元组/ (/ S0/ ,/ C0/ ,/ 犓/ [/ 0/ ,/ 0/ ]/ )/ ,/ 满足条件/ S0/ →/ 犓/ [/ 0/ ,/ 0/ ]/ (/ 2/ )/ 由/ 差分/ 链/ / j/ 和/ S0/ 通过/ 公式/ Sj/ =/ S0/ / / j/ ,/ j/ ∈/ {/ 0/ ,/ 1/ ,/ …/ ,/ 28/ -/ 1/ }/ 构造/ 出/ 28/ 个/ 可能/ 的/ 输入/ 值/ ;/ (/ 3/ )/ 由/ 差分/ 链/ Δ/ i/ 和/ C0/ 通过/ 公式/ Ci/ =/ C0/ / Δ/ i/ ,/ i/ ∈/ {/ 0/ ,/ 1/ ,/ …/ ,/ 28/ -/ 1/ }/ 构造/ 出/ 28/ 个/ 可能/ 的/ 输出/ 值/ ;/ (/ 4/ )/ 综合/ 上述/ 步骤/ 的/ 输出/ 结果/ ,/ 通过/ 等式/ S0/ / 犓/ [/ 0/ ,/ 0/ ]/ / Δ/ K/ / j/ →/ 算法/ 的/ 密钥/ 空间/ 缩减/ 为/ 20/ 个/ 分组/ (/ 表示/ 为/ K/ =/ kb19kb18/ …/ kb0/ )/ ,/ 中间/ 值/ 缩减/ 为/ 16/ 个/ 分组/ (/ 表示/ 为/ S/ =/ Sb15Sb14/ …/ Sb0/ )/ ./ 根据/ PRESENT/ 算法/ 的/ 特点/ 对/ 组合/ 可能性/ 加以/ 缩小/ ,/ 把/ PRESENT/ 密钥/ 调度/ 算法/ 第/ 18/ 轮/ 的/ 密钥/ 寄存器/ 作为/ 相关/ 密钥/ 差分/ 链/ 的/ 输入/ 密钥/ ,/ 我们/ 搜索/ 出/ 可/ 用于/ 构造/ Biclique/ 攻击/ 的/ 两条/ 相互/ 独立/ 的/ 相关/ 密钥/ 差分/ 链/ ./ 为了/ 便于/ 描述/ ,/ 我们/ 用/ 0/ 和/ x/ 分别/ 表示/ 该/ 分组/ 差/ 分值/ 为/ 0/ 和/ 非/ 0/ 时/ 的/ 情况/ ./ 表/ 2/ 给出/ 了/ 对应/ 于/ PRESENT/ -/ 80/ 算法/ 第/ 18/ 轮至/ 第/ 21/ 轮/ 的/ 相关/ 密钥/ 差分/ 链/ 的/ 具体/ 形式/ ./ 其中/ 差分/ 链/ / j/ 从/ 第/ 18/ 轮/ 密钥/ 差分/ / K/ 分组/ )/ 开始/ ,/ 至/ 21/ 轮/ 中间/ 值/ 输出/ 差分/ 完全/ 扩散/ 结束/ ;/ 而/ 差分/ 链/ Δ/ i/ 由/ 第/ 18/ 轮/ 密钥/ 差分/ Δ/ ki/ 的/ 61/ ~/ 65/ 、/ 70/ ~/ 72/ 比特/ 位/ 开始/ ,/ 至/ 21/ 轮/ 中间/ 值/ 输出/ 差分/ 归零/ 结束/ ./ Biclique/ 三元组/ (/ Sj/ ,/ Ci/ ,/ 犓/ [/ i/ ,/ j/ ]/ ,/ i/ ,/ j/ ∈/ {/ 0/ ,/ 1/ ,/ …/ ,/ 28/ -/ 1/ }/ )/ ./ 由于/ PRESENT/ -/ 80/ 在/ 21/ 轮后/ 的/ 扩散/ 使得/ 前后/ 向/ 差分/ 链/ 不再/ 具有/ 独立性/ ,/ 无法/ 用于/ 构造/ Biclique/ ,/ 通过/ 自动化/ 搜索算法/ ,/ 我们/ 仅能/ 从/ 上述/ 过程/ 中/ 成功/ 构造/ 出/ 第/ 18/ 轮至/ 21/ 轮/ 、/ 维度/ 为/ 8/ 的/ Biclique/ ./ 在/ 随后/ 的/ 小节/ 中/ 我们/ 将/ 利用/ 中间/ 相遇/ 攻击/ 把/ 上述/ 构造/ 转化/ 为/ 21/ 轮/ PRESENT/ -/ 80/ 的/ 密钥/ 恢复/ 攻击/ ./ 4.221/ 轮/ PRESENT/ -/ 80/ 算法/ 的/ Biclique/ 攻击/ 根据/ 上/ 一/ 小节/ 所/ 构造/ 的/ 维度/ 为/ 8/ 的/ Biclique/ ,/ 我们/ 还/ 需要/ 建立/ 从/ PRESENT/ 算法/ 第/ 1/ 轮到/ 18/ 轮/ 的/ 中间/ 相遇/ 攻击/ 路径/ ,/ 才能/ 根据/ 3.1/ 小节/ 所/ 给出/ 的/ 步骤/ ,/ 完成/ 针对/ 21/ 轮/ PRESENT/ 的/ Biclique/ 密钥/ 恢复/ 攻击/ ./ 基于/ PRESENT/ -/ 80/ 轮/ 函数/ 的/ 特点/ ,/ 我们/ 选择/ 从/ 第/ 1/ 轮到/ 第/ 10/ 轮/ 的/ 前/ 向/ 计算/ 和/ 第/ 17/ 轮到/ 第/ 10/ 轮/ 的/ 后/ 向/ 计算/ ,/ 两条/ 计算/ 路径/ 将/ 在/ 第/ 10/ 轮/ 的/ 低/ 4/ 位/ 比特/ 值/ 进行/ 中间/ 相遇/ 情况/ 分析/ ./ 该前/ 、/ 后/ 向/ 计算/ 的/ 具体/ 路径/ 分别/ 由表/ 3/ 和表/ 4/ 描述/ ./ Page6/ 表/ 3/ 针对/ PRESENT/ -/ 80/ 第/ 1/ 轮至/ 第/ 10/ 轮/ 的/ 前/ 向/ 计算/ 轮数/ 10000000000000000xxx0000000000000000020xx000000000000000000000000000000000300000xxx000000000000x000x000x000x00040000000000xxx0000000xxxxxxxxxxxxxxxx5000000000000000xxx00xxxxxxxxxxxxxxxx6xx000000000000000000xxxxxxxxxxxxxxxx70000xxx0000000000000xxxxxxxxxxxxxxxx8000000000xxx00000000xxxxxxxxxxxxxxxx900000000000000xxx000000000000000xxxx10000xxxx000000000000000000000000x000x/ 表/ 4/ 针对/ PRESENT/ -/ 80/ 的/ 第/ 10/ 轮至/ 17/ 轮/ 的/ 后/ 向/ 计算/ 轮数/ 10000xxxx000000000000000000000000x000x1100000000xxxx0000000000xx00xx00xx00xx120000000000000x0xx000xxxxxxxxxxxxxxxx13x00000000000000000xxxxxxxxxxxxxxxxxx1400xxxx00000000000000xxxxxxxxxxxxxxxx150000000xxxx000000000xxxx000xxxxxxxxx16000000000000x0xx000000000000x0xx00001700000000000000000xxx0000000000000000/ 在/ 前/ 向/ 计算/ 过程/ 中/ ,/ 我们/ 基于/ 密钥/ 差分/ Δ/ Ki/ ,/ 由/ EF/ 构造/ 出/ 第/ 1/ 轮/ 输入/ 差/ 分为/ 0/ ,/ 而/ 第/ 10/ 轮/ 输出/ 差分/ 仅/ 有/ 8bit/ 为/ 非零值/ 的/ 理想/ 中间/ 相遇/ 路径/ ./ 虽然/ 路径/ 的/ 构造/ 需要/ 密钥/ 差分/ Δ/ Ki/ ,/ 但/ 该/ 差/ 分值/ 仅/ 用于/ 构造/ Biclique/ 时所/ 选定/ 的/ 犓/ [/ i/ ,/ j/ ]/ ,/ 在/ 实际/ 攻击/ 中/ 仍然/ 只/ 需要/ 在/ 单/ 密钥/ 环境/ 下/ 进行/ ./ 因此/ ,/ 后/ 向/ 计算/ 过程/ 选定/ 密钥/ 差分/ / K/ 遇/ 路径/ ./ 该/ 路径/ 的/ 计算/ 过程/ 是/ 由/ Biclique/ 的/ 输入/ 值/ Sj/ 由/ EB/ 逆向/ 求出/ ./ 如果/ 某/ 一次/ 前/ 、/ 后/ 向/ 计算/ 在/ 第/ 10/ 轮/ 的/ 8bit/ 满足/ 中间/ 相遇/ 条件/ ,/ 则/ 返回/ 犓/ [/ 0/ ,/ 0/ ]/ / Δ/ Ki/ / j/ 作为/ 可能/ 正确/ 的/ 密钥/ 选择/ ,/ 检查/ 其/ 是否/ 满足/ 明密/ / K/ 文/ 对应/ 关系/ ./ 如果/ 通过/ 正确性/ 检验/ ,/ 则/ 攻击者/ 成功/ 通过/ 上述/ Biclique/ 攻击/ 方法/ 恢复/ 出/ 算法/ 实际/ 使用/ 的/ 密钥/ ./ 4.3/ 攻击/ 复杂度/ 分析/ 在/ Biclique/ 攻击/ 的/ 中间/ 相遇/ 步骤/ 当中/ ,/ 攻击者/ 如果/ 对/ 每/ 一轮/ 中间/ 值/ 的/ 输入/ 、/ 输出/ 全部/ 重新/ 计算/ ,/ 那么/ 其/ 复杂度/ CMITM/ 将会/ 抵消/ 掉/ Biclique/ 构造/ 所/ 带来/ 的/ 优势/ ./ 在/ 完整/ AES/ 的/ 分析/ 当中/ ,/ Bogdanov/ 等/ 人/ 提出/ 了/ 部分/ 重/ 计算/ 的/ 思想/ 来/ 降低/ 中间/ 相遇/ 步骤/ 所/ 需要/ 的/ 计算/ 复杂度/ [/ 19/ ]/ ./ 其/ 主要/ 思想/ 是/ 在/ 分组/ 密码/ 算法/ 中/ ,/ 仅/ 有/ 非线性/ 运算/ 会/ 给/ 中间/ 值/ 的/ 非/ 零/ 部分/ 造成/ 不确定性/ 的/ 影响/ ,/ 而/ 在/ 中间/ 相遇/ 步骤/ 中/ ,/ 攻击者/ 仅仅/ 需要/ 重新/ 计算/ 中间/ 值/ 的/ 非/ 零/ 部分/ ,/ 就/ 可以/ 判断/ 是否/ 满足/ 中间/ 相遇/ 条件/ ./ 为了/ 转换/ 部分/ 重/ 计算/ 与/ 一轮/ 完整/ 加解密/ 运算/ 的/ 复杂度/ ,/ Bogdanov/ 等/ 人/ 建议/ 用重/ 计算所/ 需/ 的/ S/ 盒/ 数量/ 与/ 一轮/ 完整/ 加密/ 运算/ 所/ 需/ 的/ S/ 盒/ 运算/ 数量/ 的/ 比值/ 来/ 估算/ 复杂度/ CMITM/ ./ 在/ 表/ 3/ 和表/ 4/ 中/ ,/ 我们/ 给出/ 了/ 每/ 一轮/ 所/ 需要/ 重新/ 计算/ 的/ PRESENT/ 的/ S/ 盒/ 数量/ ,/ 该/ 数量/ 是/ 由/ 中间/ 值/ 和/ 密钥/ 差分/ 所/ 得出/ 的/ 非零值/ 异或/ 得出/ 的/ ./ 根据/ 表/ 3/ 和表/ 4/ 中所/ 给出/ 的/ 重/ 计算/ 分组/ 数/ ,/ 由/ 4.2/ 小节/ 所/ 给出/ 的/ 针对/ 21/ 轮/ PRESENT/ -/ 80/ 算法/ 中间/ 相遇/ 攻击/ 所/ 需/ 的/ 计算/ 复杂度/ 如下/ :/ CMITM/ =/ 2d/ ×/ 17/ 由于/ 在/ 第/ 10/ 轮/ 中间/ 相遇/ 为/ 两个/ 4bit/ 分组/ ,/ 由式/ (/ 1/ )/ 可/ 得出/ 整个/ 21/ 轮/ PRESENT/ -/ 80/ 的/ Bilcique/ 攻击/ 计算/ 复杂度/ 如下/ :/ CFull/ =/ 2k/ -/ 2d/ ×/ [/ CBiclique/ +/ CMITM/ +/ CFalse/ ]/ =/ 280/ -/ 2/ ×/ 8/ ×/ (/ 2/ ×/ 28/ ×/ 4/ ≈/ 278.9/ ./ 由于/ Biclique/ 攻击/ 都/ 需要/ 解密/ 预言/ 机对/ 每/ 一个/ 密文/ 解密/ 后/ 才能/ 进行/ 中间/ 相遇/ 攻击/ ,/ 因而/ 整个/ 攻击/ 所/ 需/ 的/ 数据/ 复杂度/ 为/ 全部/ 明/ 密文/ 空间/ ,/ 即/ 264/ 的/ 明/ 密文/ 对/ 开销/ ./ 内存/ 开销/ 最大值/ 为/ 每次/ 构造/ Biclique/ 所/ 需/ 的/ 28/ 密钥/ 子/ 空间/ ./ 因为/ 把/ 整个/ 密钥/ 空间/ 分成/ 了/ 280/ -/ 16/ 的/ 子/ 空间/ ,/ 密钥/ 的/ 划分/ 具有/ 完整性/ ,/ 上述/ Biclique/ 攻击/ 的/ 成功/ 概率/ 是/ 1/ ./ 上述/ 攻击/ 可/ 推广/ 至/ PRESENT/ -/ 128/ ,/ 攻击/ 所/ 基于/ 的/ 相关/ 密钥/ 差分/ 链/ 和/ 中间/ 相遇/ 攻击/ 路径/ 参看/ 附录/ ./ Page75/ 缩减/ 轮数/ DM/ -/ PRESENT/ 压缩/ 函数/ 的/ Pseudo/ 原像/ 攻击/ 在/ 文献/ [/ 24/ ]/ 中/ ,/ Khovratovich/ 等/ 人/ 将/ Biclique/ 分析方法/ 引入/ 到/ 基于/ Davies/ -/ Meyer/ 结构/ 的/ 压缩/ 函数/ 的/ 密码学/ 分析/ 中/ ./ 在/ Davies/ -/ Meyer/ 结构/ (/ 以下/ 简称/ 为/ DM/ 结构/ )/ 下/ ,/ 通过/ 采用/ 基于/ 分组/ 密码/ 加密/ 的/ 方式/ ,/ 压缩/ 函数/ F/ 将/ 中间/ 值/ CV/ 和/ 消息/ M/ 做/ 如下/ 处理/ :/ 假定/ HV/ 是/ 攻击者/ 需要/ 找出/ 原像/ 的/ Hash/ 值/ ./ 由于/ DM/ 构造/ 将/ 消息/ M/ 作为/ 分组/ 密码/ E/ 的/ 密钥/ ,/ 攻击者/ 通过/ 选择/ 符合/ 两组/ 具有/ 和/ 独立/ 相关/ 密钥/ 差分/ 链/ 相同/ 性质/ 的/ 消息/ 值/ ,/ 从而/ 获得/ 与/ Biclique/ 密钥/ 恢复/ 攻击/ 所/ 类似/ 的/ 中间/ 相遇/ 攻击/ 路径/ ,/ 最终/ 推导/ 出/ 低于/ 穷/ 搜索/ 计算/ 复杂度/ 的/ Pseudo/ 原像/ 攻击/ ./ 上述/ 攻击方式/ 如图/ 3/ 所示/ ./ 在/ CHES2008/ 年/ 会上/ ,/ Bogdanov/ 等/ 人/ 基于/ PRESENT/ 加密算法/ 和/ Davies/ -/ Meyer/ 结构/ 提出/ 了/ DM/ -/ PRESENT/ 轻量级/ Hash/ 函数/ ,/ 并/ 与/ 其它/ 相关/ Hash/ 函数/ 在/ 典型/ RFID/ 平台/ 上/ 进行/ 了/ 硬件/ 性能/ 对比/ [/ 2/ ]/ ./ 由于/ 在/ 第/ 4/ 节中/ 我们/ 已经/ 针对/ 21/ 轮/ 的/ PRESENT/ -/ 80/ 算法/ 构造/ 了/ 4/ 轮/ 8/ 维/ 的/ Biclique/ ,/ 根据/ 4.1/ 小节/ 中/ 针对/ PRESENT/ -/ 80/ 的/ 独立/ 相关/ 密钥/ 差分/ 链/ 的/ 构造/ 步骤/ ,/ 我们/ 可以/ 将/ 上述/ Biclique/ 构造/ 转换/ 为/ 针对/ 21/ 轮/ DM/ -/ PRESENT/ 压缩/ 函数/ 的/ Pseudo/ 原像/ 攻击/ 。/ 假定/ 攻击者/ 所/ 需要/ 搜索/ 原像/ 的/ Hash/ 值为/ HV/ ,/ DM/ -/ PRESENT/ 所/ 选择/ 的/ 固定/ 初始值/ 为/ IV/ ,/ 具体/ 攻击/ 步骤/ 如下/ 所示/ :/ 1/ ./ 由于/ DM/ 结构/ 将/ CV/ 值前/ 向/ 反馈/ 与/ 加密算法/ E/ 的/ 输出/ 进行/ 异或/ ,/ 攻击者/ 可/ 通过/ HV/ 与/ CV/ 直接/ 异或/ 的/ 方式/ 获得/ E/ 的/ 加密/ 输出/ 结果/ ./ 攻击者/ 任意/ 选择/ 三元组/ (/ S0/ ,/ CV0/ ,/ 犕/ [/ 0/ ,/ 0/ ]/ )/ ,/ 满足条件/ S0/ →/ 犕/ [/ 0/ ,/ 0/ ]/ 2/ ./ 由/ 差分/ 链/ / j/ 和/ S0/ 通过/ 公式/ Sj/ =/ S0/ / / j/ ,/ j/ ∈/ {/ 0/ ,/ 1/ ,/ …/ ,/ 28/ -/ 1/ }/ 构造/ 出/ 28/ 个/ 可能/ 的/ 输入/ 值/ ;/ HV/ / Δ/ i/ ,/ i/ ∈/ {/ 0/ ,/ 1/ ,/ …/ ,/ 28/ -/ 1/ }/ 构造/ 出/ 28/ 个/ 可能/ 的/ 输出/ 值/ ;/ 3/ ./ 由/ 差分/ 链/ Δ/ i/ 和/ CV0/ / HV/ 通过/ 公式/ CVi/ =/ CV0/ / 4/ ./ 综合/ 上述/ 步骤/ 的/ 输出/ 结果/ ,/ 通过/ 等式/ S0/ / / j/ →/ 犕/ [/ 0/ ,/ 0/ ]/ / Δ/ MEC/ (/ Sj/ ,/ CVi/ / HV/ ,/ 犕/ [/ i/ ,/ j/ ]/ ,/ i/ ,/ j/ ∈/ {/ 0/ ,/ 1/ ,/ …/ ,/ 28/ -/ 1/ }/ )/ ;/ 5/ ./ 由于/ 在/ DM/ 结构/ 中/ ,/ 消息/ M/ 直接/ 作为/ 密钥/ 输入/ 进行/ 运算/ ,/ 基于/ 上述/ 8/ 维/ Biclique/ ,/ 攻击者/ 能以/ 2n/ -/ 2d/ ·/ (/ CBiclique/ +/ CMITM/ )/ 的/ 计算/ 复杂度/ 从/ 给定/ Hash/ 值/ HV/ 与/ CV/ 实现/ 中间/ 相遇/ 攻击/ ,/ 从而/ 获得/ 对应/ 的/ 犕/ [/ i/ ,/ j/ ]/ 作为/ Pseudo/ 原像/ 结果/ 输出/ ./ 从/ 上述/ 步骤/ 可/ 得出/ ,/ 攻击/ 总共/ 需要/ 的/ 计算/ 复杂度/ 为/ 262.9/ ,/ 存储/ 复杂度/ 为/ 整个/ 明文/ 空间/ 264/ ,/ 内存/ 复杂度/ 为/ Biclique/ 的/ 存储/ 开销/ 28.6/ 结论/ PRESENT/ 算法/ 通过/ 极度/ 简化/ 扩散/ 层/ 的/ 设计/ 思路/ ,/ 极大地提高/ 了/ 算法/ 硬件/ 速度/ ,/ 同时/ 也/ 最大/ 限度/ 地/ 降低/ 了/ 硬件/ 实现/ 上/ 的/ 开销/ ./ 由于/ 其/ 出色/ 的/ 设计/ ,/ 针对/ 其/ 进行/ 的/ 各种/ 密码学/ 安全性/ 分析/ 也/ 得到/ 了/ 密码/ 学界/ 的/ 广泛/ 关注/ ./ 在/ 本文/ 中/ ,/ 我们/ 利用/ PRESENT/ 密钥/ 扩展/ 函数/ 的/ 特性/ ,/ 搜索/ 出/ 两条/ 独立/ 相关/ 密钥/ 差分/ 链/ ,/ 并/ 由此/ 构造/ 出/ 维度/ 为/ 8/ 的/ Biclique/ 用于/ 缩减/ 至/ 21/ 轮/ PRESENT/ -/ 80/ 算法/ 的/ 密钥/ 恢复/ 攻击/ ./ 同时/ 该/ Biclique/ 也/ 可/ 用于/ 21/ 轮/ 的/ DM/ -/ PRESENT/ 压缩/ 函数/ 的/ Pseudo/ 原像/ 攻击/ ./ 从/ 本文/ 的/ 分析/ 可以/ 看出/ PRESENT/ 的/ 密钥/ 扩展/ 函数/ 的/ 安全性/ 虽然/ 有所/ 不足/ ,/ 但/ 由于/ 算法/ 总/ 轮数/ 比较/ 大/ ,/ 构造/ 足够/ 长度/ 或/ 维度/ 的/ Biclique/ 进行/ 密钥/ 恢复/ 攻击/ 仍然/ 是/ 困难/ 的/ ./ 本文/ 所/ 提供/ 的/ 独立/ 相关/ 密钥/ 差分/ 链/ 和/ 中间/ 相遇/ 攻击/ 也/ 可/ 用于/ 其它/ 针对/ PRESENT/ 算法/ 的/ 密码学/ 安全性/ 分析/ ,/ 例如/ 针对/ PRESENT/ 的/ Boomerang/ 攻击/ ,/ 以及/ 基于/ PRESENT/ 的/ Hash/ 函数/ 的/ 原像/ 和/ 碰撞/ 攻击/ 等/ ./ 在/ 未来/ 的/ 工作/ 中/ ,/ 我们/ 将/ 进一步/ 搜索/ 具有/ 更好/ 性质/ 的/ 独立/ 相关/ 密钥/ 差分/ 链/ 和/ 中间/ 相遇/ 攻击/ 路径/ ,/ 从而/ 能/ 攻击/ 更/ 多/ 轮数/ 的/ PRESENT/ 算法/ ./ 致谢/ 感谢/ 匿名/ 审稿人/ 对/ 本文/ 修改/ 所/ 提出/ 的/ 宝贵意见/ !/ 

