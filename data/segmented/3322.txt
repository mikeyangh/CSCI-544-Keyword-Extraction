Page1/ 基于/ 投递/ 概率/ 预测/ 的/ DTN/ 高效/ 路由/ 彭敏/ 洪佩琳/ 薛/ 开平/ 卢汉成/ (/ 中国/ 科学技术/ 大学/ 电子/ 工程/ 与/ 信息/ 科学系/ 合肥/ 230027/ )/ 摘要/ 在/ 延迟/ 容忍/ 网络/ 中/ ,/ 基于/ 配额/ 的/ 多/ 拷贝/ 路由/ 通过/ 对/ 消息/ 拷贝/ 数量/ 的/ 限制/ 来/ 控制/ 开销/ ,/ 如何/ 在/ 控制/ 开销/ 的/ 前提/ 下/ 尽可能/ 提高/ 消息/ 投递/ 成功率/ 是/ 其/ 需要/ 解决/ 的/ 关键问题/ ./ 文中/ 首先/ 分析/ 了/ 提高/ 消息/ 投递/ 成功率/ 的/ 配额/ 分配/ 策略/ ,/ 然后/ 据此/ 提出/ 一种/ 基于/ 投递/ 概率/ 预测/ 的/ 配额/ 路由/ 算法/ ./ 该/ 路由/ 算法/ 根据/ 节点/ 的/ 本地/ 信息/ 预测/ 到/ 其它/ 节点/ 的/ 投递/ 概率/ ,/ 在/ 复制/ 消息/ 时/ ,/ 根据/ 节点/ 间/ 投递/ 概率/ 的/ 差别/ 分配/ 拷贝/ 配额/ ./ 仿真/ 结果表明/ ,/ 该/ 算法/ 能/ 较为/ 明显/ 地/ 提高/ 投递/ 成功率/ 并/ 减小/ 延时/ ./ 关键词/ 延迟/ 容忍/ 网络/ ;/ 路由/ ;/ 投递/ 概率/ ;/ 本地/ 信息/ ;/ 拷贝/ 配额/ 1/ 引言/ 是/ 一种/ 具有/ 长/ 延时/ 和/ 链路/ 频繁/ 中断/ 等/ 特性/ 的/ 新型/ 网络体系结构/ ./ 在/ DTN/ 中/ ,/ 网络/ 分割/ 的/ 出现/ 导致/ 端到/ 端/ 路径/ 不/ 一定/ 存在/ ,/ 因此/ 先/ 寻路/ 后/ 转发/ 的/ 传统/ 路由/ 方式/ 不再/ 适用/ ./ 为了/ 应对/ 网络/ 分割/ 状态/ ,/ DTN/ 采用/ 延迟/ 容忍/ 网络/ (/ DelayTolerantNetwork/ ,/ DTN/ )/ Page2/ 先/ 存储/ 后/ 转发/ 的/ 路由/ 方式/ ,/ 使/ 消息/ 可以/ 逐跳/ 向/ 目的/ 节点/ 转发/ [/ 1/ -/ 2/ ]/ ./ 按照/ 是否/ 对/ 消息/ 进行/ 复制/ ,/ 可以/ 把/ 现有/ DTN/ 路由/ 算法/ 分为/ 两类/ :/ 单/ 拷贝/ 路由/ 和/ 多/ 拷贝/ 路由/ ./ 在/ 单/ 拷贝/ 路由/ 中/ ,/ 节点/ 将/ 消息/ 发送给/ 所/ 遇到/ 的/ 节点/ 后/ 不再/ 保存/ 该/ 消息/ 的/ 备份/ ,/ 因此/ 网络/ 中/ 只/ 存在/ 消息/ 的/ 一份/ 拷贝/ [/ 3/ ]/ ./ 由于/ 网络/ 分割/ 现象/ 频繁/ 出现/ ,/ 只/ 保持/ 消息/ 的/ 一份/ 拷贝/ 容易/ 导致/ 投递/ 失败/ ./ 为了/ 提高/ 投递/ 成功率/ ,/ 可以/ 在/ 节点/ 向/ 其它/ 节点/ 发送/ 消息/ 后/ 并/ 不/ 删除/ 所/ 缓存/ 的/ 数据/ ,/ 而是/ 继续/ 将/ 该/ 消息/ 复制/ 给/ 后续/ 遇到/ 的/ 节点/ ,/ 此时/ 网络/ 中/ 会/ 存在/ 同一/ 消息/ 的/ 多份/ 拷贝/ ,/ 这种/ 路由/ 方式/ 就是/ 多/ 拷贝/ 路由/ [/ 4/ -/ 5/ ]/ ./ 根据/ 消息/ 的/ 拷贝/ 数量/ 是否/ 受限/ ,/ 多/ 拷贝/ 路由/ 又/ 可/ 分为/ 两类/ :/ 基于/ 泛洪/ 的/ 多/ 拷贝/ 路由/ 和/ 基于/ 配额/ 的/ 多/ 拷贝/ 路由/ ./ Epidemic/ [/ 5/ ]/ 是/ 一种/ 典型/ 的/ 基于/ 泛洪/ 的/ 多/ 拷贝/ 路由/ 算法/ ./ 在/ Epidemic/ 中/ ,/ 节点/ 将/ 自身/ 所/ 拥有/ 的/ 消息/ 复制/ 给/ 所/ 遇到/ 的/ 所有/ 节点/ ,/ 通过/ 泛洪/ 来/ 提高/ 投递/ 成功率/ ,/ 其/ 代价/ 是/ 会/ 过/ 多/ 地/ 消耗/ 节点/ 的/ 存储空间/ 和/ 通信/ 带宽/ ./ 为了/ 减小/ 泛洪/ 开销/ ,/ MaxProp/ [/ 6/ ]/ 和/ ProPHET/ [/ 7/ ]/ 采用/ 基于/ 概率/ 的/ 消息/ 复制/ 方式/ ./ 相比/ 于/ Epidemic/ ,/ MaxProp/ 和/ ProPHET/ 能/ 明显/ 减小/ 网络/ 开销/ ,/ 但/ 随着/ 网络/ 中/ 节点/ 数量/ 的/ 增加/ ,/ 消息/ 的/ 复制/ 次数/ 也/ 会/ 增加/ ,/ 使得/ 开销/ 迅速/ 上升/ 并/ 导致/ 网络/ 性能/ 明显/ 下降/ [/ 8/ ]/ ./ 为了/ 更/ 有效/ 地/ 控制/ 开销/ ,/ SprayandWait/ [/ 9/ ]/ 算法/ 采用/ 配额/ 的/ 方式/ 对/ 消息/ 的/ 拷贝/ 数量/ 进行/ 控制/ ./ 该/ 算法/ 将/ 消息/ 转发/ 分为/ 喷射/ (/ Spray/ )/ 和/ 等待/ (/ Wait/ )/ 两个/ 阶段/ :/ 在/ 喷射/ 阶段/ ,/ 源/ 节点/ 将/ 消息/ 传输/ 给/ L/ 个/ 与/ 之/ 相遇/ 的/ 节点/ ;/ 在/ 等待/ 阶段/ ,/ 收到/ 消息/ 的/ 节点/ 等待/ 与/ 目的/ 节点/ 相遇/ 并/ 将/ 消息/ 传输/ 给/ 目的/ 节点/ ./ 这样/ ,/ 网络/ 中/ 最/ 多/ 只能/ 存在/ L/ 份/ 相同/ 的/ 消息/ ./ 在/ 基于/ 配额/ 的/ 多/ 拷贝/ 路由/ 中/ ,/ 消息/ 的/ 拷贝/ 数量/ L/ 不会/ 随着/ 网络/ 中/ 节点/ 数量/ 的/ 增加/ 而/ 增大/ ,/ 因此/ 其/ 可扩展性/ 更好/ ,/ 可以/ 更为/ 有效/ 地/ 控制/ 开销/ ./ 基于/ 配额/ 的/ 路由/ 方式/ 是/ 基于/ 泛洪/ 的/ 多/ 拷贝/ 路由/ 和/ 单/ 拷贝/ 路由/ 的/ 折衷/ ,/ 它/ 在/ 控制/ 开销/ 的/ 同时/ 会/ 使/ 投递/ 成功率/ 有所/ 下降/ ,/ 因此/ ,/ 怎样/ 尽可能/ 提高/ 其/ 投递/ 成功率/ 是/ 一个/ 备受/ 关注/ 的/ 问题/ ./ 在/ 基于/ 配额/ 的/ 多/ 拷贝/ 路由/ 中/ ,/ 配额/ 的/ 分配/ 策略/ 是/ 影响/ 投递/ 成功率/ 的/ 关键/ ./ 本文/ 分析/ 了/ 限定/ 拷贝/ 数量/ 时使/ 投递/ 成功率/ 最高/ 的/ 配额/ 分配/ 策略/ ,/ 由于/ 这种/ 配额/ 分配/ 策略/ 复杂度/ 很/ 高/ ,/ 并且/ 在/ DTN/ 中/ 难以实现/ ,/ 因此/ ,/ 本文/ 随后/ 提出/ 了/ 一种/ 基于/ 投递/ 概率/ 预测/ 的/ 高效/ 路由/ (/ DeliveryProbabilityPredictionbasedEfficientRouting/ ,/ DPER/ )/ 算法/ ./ 该/ 路由/ 算法/ 根据/ 节点/ 的/ 本地/ 信息/ 预测/ 本/ 节点/ 到/ 其它/ 节点/ 的/ 投递/ 概率/ ,/ 然后/ 根据/ 各/ 节点/ 到/ 目的/ 节点/ 的/ 投递/ 概率/ 分配/ 消息/ 的/ 拷贝/ 配额/ ./ 由于/ 考虑/ 了/ 不同/ 节点/ 间/ 投递/ 概率/ 的/ 差别/ ,/ DPER/ 可以/ 在/ 分配/ 拷贝/ 配额/ 时/ 充分利用/ 节点/ 的/ 运动/ 规律/ ,/ 从而/ 明显提高/ 投递/ 成功率/ ,/ 同时/ ,/ 由于/ 预测/ 投递/ 概率/ 时/ 考虑/ 了/ 时间/ 因素/ ,/ 因此/ 这种/ 投递/ 策略/ 也/ 会/ 使/ 延时/ 明显/ 减小/ ;/ 另一方面/ ,/ 由于/ 投递/ 概率/ 预测/ 的/ 复杂度/ 不高/ ,/ 并且/ 仍然/ 严格/ 限制/ 了/ 拷贝/ 配额/ ,/ 因此/ DPER/ 的/ 额外/ 开销/ 并不大/ ./ 2/ 基于/ 投递/ 概率/ 预测/ 的/ 高效/ 路由/ 2.1/ 拷贝/ 配额/ 分配/ 策略/ 分析/ 在/ 基于/ 配额/ 的/ 多/ 拷贝/ 路由/ 中/ ,/ 消息/ 投递/ 成功率/ 取决于/ 拷贝/ 数量/ 的/ 阈值/ 和/ 拷贝/ 配额/ 的/ 分配/ 策略/ ./ Spyropoulos/ 对/ 拷贝/ 数量/ L/ 进行/ 了/ 分析/ 并/ 提出/ 了/ 两种/ 配额/ 分配/ 方案/ :/ 源端/ 喷射/ (/ sourcespray/ )/ 方案/ 和/ 二分/ 喷射/ (/ binaryspray/ )/ 方案/ [/ 9/ ]/ ./ 在/ 源端/ 喷射/ 方案/ 中/ ,/ 源/ 节点/ 每/ 遇到/ 一个/ 节点/ ,/ 都/ 将/ 消息/ 发送/ 一份/ 给/ 对方/ ,/ 并/ 将/ 本/ 节点/ 中该/ 消息/ 的/ 拷贝/ 配额/ 减/ 1/ ,/ 因此/ ,/ L/ 份/ 拷贝/ 被/ 发送给/ 最先/ 遇到/ 的/ L/ 个/ 节点/ ;/ 在/ 二分/ 喷射/ 方案/ 中/ ,/ 节点/ 遇到/ 其它/ 节点/ 后/ ,/ 将/ 消息/ 复制/ 给/ 对方/ 并/ 将/ 拷贝/ 配额/ 的/ 一半/ 分给/ 对方/ ,/ 直到/ 拷贝/ 配额/ 减小/ 到/ 1/ ./ 多/ 拷贝/ 路由/ 对/ 消息/ 进行/ 复制/ 是/ 为了/ 使/ 消息/ 能/ 从/ 多条/ 路径/ 同时/ 传递/ ,/ 从而/ 提高/ 投递/ 成功率/ ./ 因此/ ,/ 在/ 分配/ 拷贝/ 配额/ 时/ ,/ 到/ 目的/ 节点/ 的/ 投递/ 概率/ 高/ 的/ 节点/ 应该/ 获得/ 较大/ 的/ 拷贝/ 配额/ ./ 然而/ ,/ SprayandWait/ 的/ 两种/ 拷贝/ 配额/ 分配/ 方案/ 都/ 没有/ 考虑/ 不同/ 节点/ 间/ 投递/ 概率/ 的/ 差别/ ./ EBR/ [/ 8/ ]/ 对此/ 作/ 了/ 改进/ ,/ 在/ 分配/ 拷贝/ 配额/ 时/ 考虑/ 节点/ 的/ 活跃/ 程度/ ,/ 即/ 活跃/ 的/ 节点/ (/ 与/ 其它/ 节点/ 相遇/ 概率/ 较大/ 的/ 节点/ )/ 将/ 获得/ 较大/ 的/ 配额/ 值/ ./ 由于/ 活跃/ 的/ 节点/ 更/ 有/ 机会/ 遇到/ 其它/ 节点/ ,/ 因此/ 赋予/ 活跃/ 节点/ 较大/ 的/ 拷贝/ 配额/ 有利于/ 消息/ 投递/ ./ 然而/ ,/ 节点/ 的/ 活跃/ 程度/ 并/ 不能/ 完全/ 反映/ 节点/ 到/ 目的/ 节点/ 的/ 投递/ 概率/ ,/ 所/ 做/ 的/ 决策/ 可能/ 并/ 不合理/ ./ 如图/ 1/ 所示/ ,/ 节点/ 2/ 在/ 节点/ 1/ 与/ 节点/ 7/ 之间/ 运动/ ,/ 运动/ 周期/ 为/ 5s/ ;/ 节点/ 3/ 、/ 4/ 在/ 节点/ 1/ 、/ 5/ 、/ 6/ 之间/ 运动/ ,/ 运动/ 周期/ 为/ 4s/ ;/ 节点/ 7/ 与/ 节点/ 8/ 处于/ 稳定/ 连接/ 状态/ ./ 假设/ 节点/ 1/ 需要/ 向/ 节点/ 8/ 发送/ 消息/ ,/ 网络/ 中/ 最/ 多/ 允许/ 出现/ 同一/ 消息/ 的/ 2/ 份/ 拷贝/ (/ L/ =/ 2/ )/ ,/ 如果/ 仅/ 考虑/ 节点/ 的/ 活跃/ 程度/ ,/ 由于/ 节点/ 3/ 、/ 4/ 遇到/ 其它/ 节点/ 的/ 概率/ 比/ 节点/ 2/ 更大/ ,/ 节点/ 1/ 的/ 两份/ 拷贝/ 会/ 分别/ 发送给/ 节点/ 3/ 和/ 节点/ 4/ ./ 实际上/ ,/ 由于/ 节点/ 2/ 可以/ 通过/ 节点/ 7Page3/ 将/ 消息/ 投递/ 给/ 节点/ 8/ ,/ 为了/ 提高/ 投递/ 成功率/ ,/ 节点/ 1/ 需要/ 将/ 一份/ 拷贝/ 预留/ 给/ 节点/ 2/ ./ (/ 1/ )/ 获得/ 最高/ 投递/ 成功率/ 的/ 配额/ 分配/ 策略/ 假设/ 网络/ 中共/ 有/ N/ 个/ 节点/ ,/ 消息/ 拷贝/ 配额/ 的/ 阈值/ 为/ L/ (/ 即/ 网络/ 中/ 最/ 多/ 允许/ 存在/ L/ 份/ 相同/ 的/ 消息/ )/ ,/ 若/ 当前/ 节点/ n/ (/ 1/ / n/ / N/ )/ 需要/ 向/ 节点/ j/ 发送/ 消息/ (/ 1/ / j/ / N/ ,/ j/ ≠/ N/ )/ ,/ 应该/ 采用/ 怎样/ 的/ 策略/ 才能/ 使/ 投递/ 成功率/ 最高/ ?/ 在/ DTN/ 中/ ,/ 节点/ 间/ 的/ 链路/ 频繁/ 中断/ ,/ 因此/ 节点/ 的/ 邻居/ 频繁/ 更换/ ./ 为了/ 描述/ 方便/ ,/ 本文/ 把/ 节点/ n/ 的/ 邻居/ 节点/ 集/ 定义/ 为/ 其中/ ,/ pc/ (/ n/ ,/ i/ )/ 为/ 节点/ n/ 与/ 节点/ i/ (/ 1/ / i/ / N/ )/ 在/ 给定/ 时间/ 单元/ 内/ 的/ 相遇/ 概率/ ./ 若/ 节点/ i/ (/ i/ ∈/ T/ )/ 到/ 目的/ 节点/ j/ 共有/ Y/ 条/ 路径/ (/ 不/ 经过/ 节点/ n/ )/ ,/ 其/ 投递/ 成功率/ 用/ pd/ (/ i/ ,/ j/ )/ y/ (/ 1/ / y/ / Y/ )/ 表示/ ./ 如果/ 不/ 对/ 消息/ 拷贝/ 数量/ 进行/ 限制/ ,/ 并且/ 不/ 考虑/ 节点/ 的/ 缓存/ 空间/ 和/ 节点/ 间/ 的/ 通信/ 带宽/ ,/ 则/ 沿/ 每条/ 路径/ 都/ 发送/ 一份/ 拷贝/ (/ 泛洪/ )/ 能/ 获得/ 最高/ 投递/ 成功率/ :/ pd/ (/ n/ ,/ j/ )/ max/ =/ 1/ -/ ∏/ i/ ∈/ T/ 在/ 限制/ 拷贝/ 数量/ 为/ L/ 的/ 情况/ 下/ ,/ 为了/ 使/ 投递/ 成功率/ 最高/ ,/ 应该/ 将/ 这/ L/ 份/ 拷贝/ 沿/ L/ 条/ 投递/ 成功率/ 最大/ 的/ 路径/ 转发/ ./ 因此/ ,/ 首先/ 需要/ 获取/ 节点/ 的/ 相遇/ 概率/ ,/ 并/ 据此/ 求出/ L/ 条/ 投递/ 成功率/ 最大/ 的/ 路径/ ,/ 然后/ 根据/ 这/ L/ 条/ 路径/ 的/ 分布/ 情况/ 确定/ 消息/ 拷贝/ 配额/ 的/ 分配/ 策略/ ./ 配额/ 分配/ 的/ 原则/ 为/ :/ 若/ L/ 条/ 投递/ 成功率/ 最大/ 的/ 路径/ 中有/ m/ 条/ 的/ 第一/ 跳/ 是/ 节点/ i/ ,/ 则/ 节点/ n/ 在/ 复制/ 消息/ 给/ 节点/ i/ 时/ 需要/ 分配/ 的/ 拷贝/ 配额/ 为/ m/ ./ 在/ 限定/ 拷贝/ 数量/ 的/ 情况/ 下/ ,/ 上述/ 方法/ 能/ 使/ 投递/ 成功率/ 最大化/ ,/ 但/ 它/ 在/ DTN/ 中/ 并/ 不/ 适用/ :/ 一方面/ ,/ 在/ DTN/ 中/ ,/ 当前/ 节点/ 仅能/ 获取/ 本/ 节点/ 与/ 其它/ 节点/ 的/ 相遇/ 概率/ ,/ 而/ 获取/ 网络/ 中/ 其它/ 节点/ 间/ 的/ 相遇/ 概率/ 开销/ 很大/ ;/ 另一方面/ ,/ 在/ 获取/ 了/ 节点/ 间/ 的/ 相遇/ 概率/ 后/ ,/ 通过/ 全局/ 相遇/ 概率/ 求解/ L/ 条/ 投递/ 成功率/ 最大/ 的/ 路径/ 是/ 一个/ K/ 最/ 短路/ 问题/ ,/ K/ 最/ 短路/ 问题/ 过高/ 的/ 复杂度/ [/ 10/ ]/ 使/ 其/ 不适/ 用于/ DTN/ ./ (/ 2/ )/ 基于/ 投递/ 概率/ 预测/ 的/ 配额/ 分配/ 策略/ 通过/ 与/ 邻居/ 节点/ 的/ 交互/ ,/ 节点/ n/ 所能/ 获得/ 的/ 信息/ 为/ :/ 节点/ n/ 与/ 邻居/ 节点/ i/ 的/ 相遇/ 概率/ pc/ (/ n/ ,/ i/ )/ 、/ 任意/ 邻居/ 节点/ i/ 到/ 目的/ 节点/ j/ 的/ 总/ 投递/ 成功率/ pd/ (/ i/ ,/ j/ )/ ,/ 其中/ pd/ (/ i/ ,/ j/ )/ 是/ 由/ 节点/ i/ 逐步/ 得到/ 的/ ./ 在/ 仅/ 获取/ 邻居/ 节点/ 信息/ 的/ 前提/ 下/ ,/ 如何/ 在/ 较/ 低/ 的/ 复杂度/ 下/ 做出/ 合理/ 的/ 转发/ 决策/ 呢/ ?/ 如果/ 把/ 节点/ i/ 到/ 节点/ j/ 的/ 所有/ 可能/ 路径/ (/ 不/ 经过/ 节点/ n/ )/ 看作/ 一条/ 虚拟/ 的/ 链路/ ,/ 则/ 这/ 一/ 链路/ 的/ 投递/ 成功率/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ 可以/ 通过/ pd/ (/ i/ ,/ j/ )/ 、/ pc/ (/ n/ ,/ i/ )/ 等/ 信息/ 得到/ ./ 于是/ ,/ 整个/ 网络/ 可以/ 简化/ 为/ 一个/ 只有/ 两跳/ 的/ 网络/ ,/ 简化/ 的/ 网络/ 中/ 只有/ 源/ 节点/ n/ 、/ 目的/ 节点/ j/ 以及/ 节点/ n/ 的/ 邻居/ 节点/ 集/ T/ ,/ 如图/ 2/ 所示/ ./ 在/ 这样/ 一个/ 只有/ 两跳/ 的/ 虚拟/ 网络/ 中/ ,/ 如果/ T/ 有/ m/ 个/ 元素/ ,/ 则/ 从源/ 节点/ 到/ 目的/ 节点/ 一共/ 有/ m/ 条/ 可能/ 的/ 路径/ ,/ 只/ 需/ 按照/ 这/ m/ 条/ 路径/ 的/ 投递/ 成功率/ 的/ 比值/ 分配/ 拷贝/ 配额/ 即可/ ./ 经过/ 节点/ i/ 投递/ 到/ 目的/ 节点/ j/ 的/ 投递/ 成功率/ 为/ pc/ (/ n/ ,/ i/ )/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ ,/ 因此/ 该/ 消息/ 从/ 节点/ n/ 复制到/ 节点/ i/ 的/ 拷贝/ 配额/ 为/ 其中/ ,/ Ln/ 为/ 当前/ 节点/ n/ 中该/ 消息/ 的/ 拷贝/ 配额/ ,/ F/ =/ {/ f/ }/ 为/ 转发/ 节点/ 集/ ,/ 表示/ 该/ 消息/ 已/ 转发给/ 节点/ f/ ./ 由于/ pc/ (/ n/ ,/ i/ )/ 可以/ 由/ 节点/ n/ 与/ 节点/ i/ 的/ 历史/ 相遇/ 信息/ 得到/ ,/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ 可以/ 由/ 节点/ i/ 获得/ 并/ 在/ 节点/ n/ 与/ 节点/ i/ 相遇/ 时/ 交互/ ,/ 因此/ ,/ 这种/ 基于/ 投递/ 概率/ 预测/ 的/ 配额/ 分配/ 方式/ 的/ 实现/ 难度/ 不大/ ./ pc/ (/ n/ ,/ i/ )/ 和/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ 是/ 由/ 节点/ 的/ 历史/ 相遇/ 信息/ 得到/ 的/ ,/ 随着/ 时间/ 的/ 推移/ ,/ 相遇/ 概率/ 和/ 投递/ 概率/ 可以/ 得到/ 逐步/ 更新/ ,/ 从而/ 使得/ 拷贝/ 配额/ 能够/ 按照/ 当前/ 的/ 节点/ 运动/ 规律/ 进行/ 分配/ ./ 2.2/ DPER/ 算法/ 根据/ 2.1/ 节/ 的/ 分析/ ,/ 本文/ 提出/ 一种/ 基于/ 投递/ 概率/ 预测/ 的/ 高效/ 路由/ (/ DeliveryProbabilityPredictionbasedEfficientRouting/ ,/ DPER/ )/ 算法/ ,/ 在/ 仅/ 能/ 获取/ 本/ 节点/ 和/ 邻居/ 节点/ 信息/ 的/ 情况/ 下/ ,/ 根据/ 节点/ 间/ 投递/ 概率/ 的/ 差别/ 分配/ 消息/ 拷贝/ 配额/ ./ Page4/ 由式/ (/ 3/ )/ 可知/ ,/ 拷贝/ 配额/ 分配/ 依赖于/ 本/ 节点/ 与/ 邻居/ 节点/ 的/ 相遇/ 概率/ 和/ 邻居/ 节点/ 能/ 投递/ 到/ 目的/ 节点/ 的/ 概率/ ./ 为了/ 得到/ 相遇/ 概率/ 和/ 投递/ 概率/ 信息/ ,/ DPER/ 需要/ 节点/ 维护/ 3/ 个/ 矩阵/ (/ 或/ 向量/ )/ :/ 相遇/ 记录/ 犆/ 犚/ 、/ 转移/ 投递/ 概率/ 犜犇/ 犘/ 和/ 总/ 投递/ 概率/ 犇/ 犘/ ./ 相遇/ 记录/ 犆/ 犚/ 是/ 一个/ N/ ×/ K/ 的/ 矩阵/ ,/ 记录/ 了/ 本/ 节点/ 在/ 最近/ K/ 个/ 时间/ 单元/ 内/ 与/ 其它/ 节点/ 的/ 相遇/ 信息/ ./ 若本/ 节点/ n/ 在/ 第/ k/ (/ 1/ / k/ / K/ )/ 个/ 时间/ 单元/ 内/ 与/ 节点/ i/ (/ 1/ / i/ / N/ )/ 相遇/ ,/ 则/ 相遇/ 记录/ 矩阵/ 的/ 对应/ 元素/ cn/ (/ i/ ,/ k/ )/ =/ 1/ ,/ 否则/ cn/ (/ i/ ,/ k/ )/ =/ 0/ ./ 获得/ 犆/ 犚/ 矩阵/ 后/ ,/ 可以/ 得到/ 节点/ n/ 与/ 其它/ 节点/ 的/ 相遇/ 概率/ ./ 节点/ n/ 在/ 时间/ 单元/ 内/ 与/ 节点/ i/ 的/ 相遇/ 概率/ pc/ (/ n/ ,/ i/ )/ 定义/ 为/ 犆/ 犚/ 记录/ 的/ 是/ 最近/ K/ 个/ 时间/ 单元/ 的/ 相遇/ 信息/ ,/ 它/ 需要/ 在/ 每个/ 时间/ 单元/ 进行/ 一次/ 更新/ ./ 在/ 犆/ 犚/ 矩阵/ 更新/ 后/ ,/ 相遇/ 概率/ 也/ 应该/ 及时/ 更新/ ./ 转移/ 投递/ 概率/ 犜犇/ 犘/ 是/ 一个/ N/ ×/ N/ 的/ 矩阵/ ,/ 其/ 元素/ pt/ ,/ n/ (/ i/ ,/ j/ )/ 表示/ 本/ 节点/ n/ 经过/ 节点/ i/ 能/ 投递/ 到/ 目的/ 节点/ j/ 的/ 概率/ ,/ 其中/ ,/ pt/ ,/ n/ (/ j/ ,/ j/ )/ =/ pc/ (/ n/ ,/ j/ )/ 、/ pt/ ,/ n/ (/ n/ ,/ j/ )/ =/ 0/ ./ 总/ 投递/ 概率/ 犇/ 犘/ 是/ 一个/ 具有/ N/ 个/ 元素/ 的/ 向量/ ,/ 其/ 元素/ pd/ ,/ n/ (/ j/ )/ 表示/ 本/ 节点/ n/ 到/ 目的/ 节点/ j/ 的/ 总/ 投递/ 概率/ ./ 显然/ ,/ 节点/ n/ 到/ 节点/ j/ 的/ 总/ 投递/ 概率/ 可以/ 直接/ 由/ 转移/ 投递/ 概率/ 得到/ 而/ 节点/ n/ 经过/ 节点/ i/ 投递/ 到/ 节点/ j/ 的/ 转移/ 投递/ 概率/ 为/ 其中/ ,/ pc/ (/ n/ ,/ j/ )/ 为/ 节点/ n/ 与/ 节点/ i/ 的/ 相遇/ 概率/ ,/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ 表示/ 节点/ i/ 到/ 节点/ j/ 的/ 投递/ 概率/ (/ 不/ 经过/ 节点/ n/ )/ ./ 节点/ i/ 到/ 节点/ j/ 的/ 消息/ 投递/ 有/ 两种/ 可能/ 的/ 选择/ :/ 经/ 节点/ n/ 转发/ 和/ 不/ 经过/ 节点/ n/ 转发/ ./ 因此/ ,/ pd/ ,/ i/ (/ j/ )/ =/ 1/ -/ (/ 1/ -/ pt/ ,/ i/ (/ n/ ,/ j/ )/ )/ (/ 1/ -/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ )/ ,/ 于是/ ,/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ 可/ 由/ 节点/ i/ 到/ 节点/ j/ 的/ 总/ 投递/ 概率/ pd/ ,/ i/ (/ j/ )/ 与/ 转移/ 投递/ 概率/ pt/ ,/ i/ (/ n/ ,/ j/ )/ )/ 得到/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ =/ 1/ -/ 1/ -/ pd/ ,/ i/ (/ j/ )/ 在/ 节点/ n/ 与/ 节点/ i/ 相遇/ 时/ ,/ 可以/ 根据/ 式/ (/ 6/ )/ 和/ (/ 7/ )/ 更新/ 节点/ n/ 经过/ 节点/ i/ 到/ 任意/ 节点/ j/ (/ 1/ / j/ / N/ )/ 的/ 转移/ 投递/ 概率/ pt/ ,/ n/ (/ i/ ,/ j/ )/ ./ 在/ 式/ (/ 3/ )/ 中/ ,/ pc/ (/ n/ ,/ i/ )/ pd/ ,/ i/ ,/ n/ -/ (/ j/ )/ 表示/ 节点/ n/ 经过/ 节点/ i/ 投递/ 到/ 目的/ 节点/ j/ 的/ 投递/ 成功率/ ,/ 实际上/ 这/ 就是/ 转移/ 投递/ 概率/ ,/ 因此/ ,/ 得到/ 转移/ 投递/ 概率/ 后/ ,/ 便/ 可/ 利用/ 节点/ 间/ 投递/ 概率/ 的/ 差别/ 分配/ 拷贝/ 配额/ ./ 当/ 节点/ n/ 向/ 节点/ i/ 复制/ 消息/ 时/ ,/ 分配/ 给/ 节点/ i/ 的/ 拷贝/ 配额/ 为/ 节点/ n/ 的/ DPER/ 算法/ 如图/ 3/ 所示/ ,/ 它/ 包括/ 两/ 部分/ :/ 投递/ 概率/ 预测/ 和/ 拷贝/ 配额/ 分配/ ./ 1/ ./ ifcurrenttime/ %/ timeunit/ =/ 0then2/ ./ update/ 犆/ 犚/ 3/ ./ updatepc/ (/ n/ ,/ i/ )/ as/ (/ 4/ )/ foreachnodei4/ ./ endif5/ ./ ifnodencontactnodeithen6/ ./ updatept/ ,/ n/ (/ i/ ,/ j/ )/ andpd/ ,/ n/ (/ j/ )/ as/ (/ 5/ )/ and/ (/ 6/ )/ foreachj7/ ./ forAllmessageMinlocalbuffer8/ ./ F/ ←/ M/ ’/ sForwardList9/ ./ ifMisnotinnodei/ ’/ sbufferandi/ / Fthen10/ ./ j/ ←/ M/ ’/ sdestination11/ ./ Ln/ ←/ M/ ’/ snumberofreplicas12/ ./ calculateLias/ (/ 8/ )/ 13/ ./ ifLi/ >/ 0then14/ ./ sendLireplicasofMtonodei15/ ./ addnodeitoFandupdateLn16/ ./ endif17/ ./ endif18/ ./ endfor19/ ./ endif/ 在/ 投递/ 概率/ 预测/ 方面/ ,/ 主要/ 需要/ 解决/ 相遇/ 概率/ 、/ 转移/ 投递/ 概率/ 和/ 总/ 投递/ 概率/ 的/ 更新/ 问题/ ./ 在/ 当前/ 时间/ (/ currenttime/ )/ 为/ 时间/ 单元/ (/ timeunit/ )/ 的/ 整数倍/ 时/ ,/ 执行/ 相遇/ 记录/ 的/ 更新/ ,/ 并/ 按照/ 式/ (/ 4/ )/ 更新/ 节点/ n/ 与/ 其它/ 所有/ 节点/ 的/ 相遇/ 概率/ ;/ 当/ 节点/ n/ 与/ 节点/ i/ 相遇/ 时/ ,/ 需要/ 按照/ (/ 5/ )/ 和/ (/ 6/ )/ 更新/ 转移/ 投递/ 概率/ 犜犇/ 犘/ 和/ 总/ 投递/ 概率/ 犇/ 犘/ ./ 得到/ 投递/ 概率/ 的/ 预测值/ 之后/ ,/ 便/ 可以/ 按照/ 给定/ 的/ 配额/ 分配/ 策略/ 进行/ 消息/ 投递/ ./ 对于/ 需要/ 从/ 节点/ n/ 复制/ 给/ 节点/ i/ 的/ 消息/ M/ ,/ 首先/ 应该/ 获取/ 消息/ 的/ 目的/ 节点/ j/ 和/ 拷贝/ 配额/ Ln/ ,/ 然后/ 根据/ 节点/ n/ 所/ 保存/ 的/ 转移/ 投递/ 概率/ 和/ 消息/ M/ 的/ 转发/ 节点/ 集/ F/ ,/ 利用/ 式/ (/ 8/ )/ 计算/ 分配/ 给/ 节点/ i/ 的/ 配额/ Li/ ,/ 最后/ ,/ 将/ 节点/ i/ 加入/ 消息/ M/ 的/ 转发/ 节点/ 集/ F/ 并/ 更新/ 节点/ n/ 处/ 消息/ M/ 的/ 配额/ Ln/ ./ 3/ 性能/ 评估/ 本文/ 采用/ ONE/ 仿真/ 平台/ [/ 11/ ]/ 评估/ DPER/ 和/ 现有/ Page5/ 典型/ 路由/ 算法/ ./ 仿真/ 在/ 赫尔辛基/ 城市地图/ (/ ONE/ 仿真/ 平台/ 默认/ 地图/ )/ 上/ 进行/ ,/ 仿真/ 区域/ 范围/ 为/ 5000m/ ×/ 4000m/ ./ 网络/ 中/ 的/ 节点/ 共有/ 3/ 类/ :/ 第/ 1/ 类/ 节点/ 以/ 0.5/ ~/ 1.5/ m/ // s/ 的/ 速度/ 在/ 整个/ 仿真/ 区域/ 中/ 随机/ 游走/ ,/ 用于/ 模拟/ 行人/ ;/ 第/ 2/ 、/ 3/ 类/ 节点/ 的/ 运动/ 速度/ 分别/ 为/ 2.7/ ~/ 13.9/ m/ // s/ 和/ 7/ ~/ 10m/ // s/ ,/ 它们/ 只能/ 在/ 城市道路/ 上/ 运动/ ,/ 用于/ 模拟/ 普通/ 汽车/ 和/ 公交车/ ,/ 不同/ 的/ 是/ 后者/ 的/ 运动/ 路线/ 固定/ ./ 在/ 城市地图/ 中/ 存在/ 4/ 个/ 热点/ 地区/ ,/ 节点/ 运动/ 到/ 4/ 个/ 热点/ 地区/ 的/ 概率/ 分别/ 为/ 0.3/ 、/ 0.1/ 、/ 0.1/ 和/ 0.1/ ./ 在/ 默认/ 情况/ 下/ ,/ 网络/ 中共/ 有/ 120/ 个/ 节点/ ,/ 其中/ ,/ 第/ 3/ 类/ 节点/ 占/ 10/ %/ ,/ 其它/ 两类/ 节点/ 各/ 占/ 45/ %/ ,/ 数据/ 产生/ 速率/ 为/ 每个/ 节点/ 每分钟/ 产生/ 一条/ 消息/ ,/ 消息/ 拷贝/ 数量/ 阈值/ L/ =/ 10/ (/ 根据/ 文献/ [/ 8/ -/ 9/ ]/ 选取/ )/ ./ 网络/ 中/ 的/ 每个/ 节点/ 都/ 以/ 同样/ 的/ 概率/ 发送/ 消息/ ,/ 消息/ 大小/ 为/ 10KB/ ./ 节点/ 能/ 缓存/ 并/ 转发/ 消息/ ,/ 每个/ 节点/ 的/ 缓存/ 空间/ 都/ 为/ 2MB/ ./ 节点/ 的/ 通信/ 范围/ 为/ 50m/ ,/ 数据/ 传输速率/ 为/ 20Kbps/ ./ DPER/ 算法/ 中/ 与/ 投递/ 概率/ 预测/ 相关/ 的/ 其它/ 参数/ 为/ :/ 时间/ 单元/ 为/ 200s/ 、/ 相遇/ 记录/ 矩阵/ 中/ 记录/ 最近/ 20/ 个/ 时间/ 单元/ 内/ 的/ 信息/ (/ K/ =/ 20/ )/ ./ 为了/ 全面/ 验证/ DPER/ 算法/ 的/ 性能/ ,/ 本文/ 使用/ 3/ 个/ 性能/ 评价/ 指标/ :/ 投递/ 成功率/ 、/ 平均/ 延时/ 和/ 投递/ 效率/ ./ 投递/ 成功率/ 为/ 最终/ 投递/ 成功/ 的/ 消息/ 比例/ ;/ 平均/ 延时/ 是/ 指/ 从/ 消息/ 产生/ 到/ 最终/ 投递/ 到/ 目的/ 节点/ 所/ 需/ 时间/ 的/ 平均值/ ;/ 投递/ 效率/ 则/ 定义/ 为/ 投递/ 成功/ 的/ 消息/ 数量/ 与/ 消息/ 转发/ 的/ 总/ 次数/ 的/ 比值/ ./ 投递/ 效率/ 的/ 倒数/ 的/ 物理/ 意义/ 为/ :/ 完成/ 一条/ 消息/ 的/ 投递/ 平均/ 需要/ 进行/ 多少/ 次/ 消息/ 转发/ ./ 因此/ ,/ 投递/ 效率/ 越高则/ 表示/ 完成/ 投递/ 所/ 需/ 的/ 数据/ 开销/ 越小/ ./ 为了/ 衡量/ SprayandWait/ 、/ EBR/ 和/ DPER/ 在/ 不同/ 场景/ 下/ 的/ 性能/ ,/ 本文/ 分别/ 改变/ 节点/ 数量/ 、/ 数据/ 产生/ 速率/ 和/ 固定/ 节点/ 所/ 占/ 比例/ 进行/ 仿真/ ./ 不同/ 节点/ 数量/ 对/ 网络/ 性能/ 的/ 影响/ 如图/ 4/ 所示/ ./ 随着/ 节点/ 数量/ 的/ 增加/ ,/ 节点/ 间/ 的/ 相遇/ 概率/ 会/ 逐渐/ 增大/ ,/ 由于/ 数据传输/ 机会/ 更/ 多/ ,/ 消息/ 的/ 投递/ 成功率/ 会/ 有所提高/ ,/ 同时/ ,/ 消息/ 的/ 投递/ 延时/ 会/ 减小/ ;/ 然而/ ,/ 节点/ 数量/ 的/ 增加/ 会/ 增加/ 网络/ 中/ 的/ 总/ 数据量/ ,/ 导致/ 节点/ 缓存/ 空间/ 和/ 通信/ 带宽/ 更为/ 紧缺/ ,/ 由于/ 缓存/ 空间/ 的/ 限制/ ,/ 使得/ 延时/ 大/ 的/ 包被/ 丢弃/ ,/ 因此/ ,/ 随着/ 节点/ 数量/ 的/ 进一步/ 增大/ ,/ 投递/ 成功率/ 反而/ 有所/ 下降/ ,/ 但/ 由于/ 丢弃/ 的/ 是/ 延时/ 较大/ 的/ 消息/ ,/ 平均/ 延时/ 不会/ 上升/ ,/ 只是/ 减小/ 的/ 幅度/ 变小/ ./ 投递/ 效率/ 为/ 投递/ 成功/ 的/ 消息/ 数量/ 与/ 消息/ 转发/ 次数/ 的/ 比值/ ,/ 随着/ 节点/ 数量/ 的/ 增加/ ,/ 相遇/ 概率/ 的/ 增大/ 会/ 使/ 消息/ 转发/ 总/ 次数/ 和/ 投递/ 成功/ 的/ 消息/ 数量/ 都/ 明显增加/ ,/ 但/ 由于/ 消息/ 转发/ 总/ 次数/ 的/ 增长/ 速率/ 更大/ ,/ 投递/ 效率/ 显示/ 出/ 逐渐/ 下降/ 的/ 趋势/ ./ 由图/ 4/ 可以/ 看出/ ,/ 相比/ 于/ SprayandWait/ 和/ EBR/ ,/ DPER/ 能/ 获得/ 更/ 高/ 的/ 投递/ 成功率/ 和/ 更/ 小/ 的/ 延时/ ,/ 但/ 投递/ 效率/ 不如/ SprayandWait/ ./ 首先/ 看/ 投递/ 成功率/ ,/ 在/ SprayandWait/ 路由/ 算法/ 中/ ,/ 源/ 节点/ 直接/ 将/ 消息/ 发送给/ 最先/ 与/ 之/ 相遇/ 的/ L/ 个/ 节点/ ,/ 这种/ 方式/ 没有/ 考虑/ 节点/ 的/ 运动/ 规律/ ,/ 完全/ 依赖于/ 这/ L/ 个/ 节点/ 能/ 与/ 目的/ 节点/ 相遇/ ,/ 其/ 投递/ 成功率/ 相对/ 较/ 低/ ;/ EBR/ 算法/ 考虑/ 了/ 节点/ 的/ 运动/ 特性/ ,/ 在/ 分配/ 拷贝/ 配额/ 时/ ,/ 活跃/ 的/ 节点/ 能/ 获得/ 更/ 高/ 的/ 拷贝/ 配额/ ,/ 从/ 概率/ 上/ 说/ ,/ 活跃/ 的/ 节点/ 更/ 可能/ 将/ 消息/ 转发/ 出去/ ,/ 因此/ ,/ 其/ 投递/ 成功率/ 相比/ 于/ SprayandWait/ 有/ 较大/ 的/ 提升/ ;/ DPER/ 在/ 分配/ 拷贝/ 配额/ 时/ ,/ 主要/ 考虑/ 节点/ 能/ 将/ 消息/ 投递/ 到/ 目的/ 节点/ 的/ 概率/ ,/ 更/ 有/ 机会/ 将/ 消息/ 投递/ 到/ 目的/ 节点/ 的/ 节点/ 将/ 获得/ 更/ 高/ 的/ 拷贝/ 配额/ ,/ 与/ 仅/ 考虑/ 节点/ 活跃/ 程度/ 相比/ ,/ 这种/ 配额/ 分配/ 方式/ 能/ 更好/ 地/ 利用/ 节点/ 的/ 运动/ 规律/ ,/ 因此/ ,/ DPER/ 能/ 获得/ 更/ 高/ 的/ 投递/ 成功率/ ./ 在/ 延时/ 方面/ ,/ 消息/ 投递/ 延时/ 由/ 发送/ 延时/ 、/ 传输/ 延时/ 和/ 等待/ 延时/ 三/ 大部分/ 构成/ ,/ 其中/ ,/ 等待/ 延时/ 又/ 分为/ 节点/ 运动/ 延时/ 和/ 排队/ 延时/ ./ 由于/ DTN/ 中/ 节点/ 分布/ Page6/ 较为/ 稀疏/ ,/ 节点/ 运动/ 延时/ 很大/ ,/ 在/ 缓存/ 空间/ 较/ 小/ 的/ 情况/ 下/ ,/ 比/ 发送/ 延时/ 、/ 传输/ 延时/ 和/ 排队/ 延时/ 要/ 大得多/ ,/ 因此/ ,/ 消息/ 投递/ 延时/ 主要/ 取决于/ 消息/ 传输/ 前/ 的/ 节点/ 运动/ 延时/ ./ SprayandWait/ 中/ 消息/ 的/ 投递/ 完全/ 依赖于/ 最先/ 与源/ 节点/ 相遇/ 的/ L/ 个/ 节点/ 能/ 与/ 目的/ 节点/ 通信/ ,/ 节点/ 运动/ 延时/ 取决于/ 这/ L/ 个/ 节点/ 与/ 目的/ 节点/ 相遇/ 所/ 需/ 的/ 时间/ ,/ 在/ 这种/ 情况/ 下/ ,/ 消息/ 投递/ 延时/ 会/ 比较/ 大/ ./ 在/ EBR/ 中/ ,/ 活跃/ 的/ 节点/ 能/ 获得/ 更/ 高/ 的/ 拷贝/ 配额/ ,/ 但/ 节点/ 的/ 活跃/ 程度/ 与/ 节点/ 运动/ 延时/ 并/ 没有/ 必然联系/ ,/ 从/ 整体/ 上/ 说/ ,/ EBR/ 的/ 延时/ 性能/ 与/ SprayandWait/ 相差/ 不大/ ./ 根据/ 配额/ 分配/ 式/ (/ 8/ )/ ,/ DPER/ 中/ 消息/ 的/ 投递/ 与/ 转移/ 投递/ 概率/ 相关/ ,/ 而/ 转移/ 投递/ 概率/ 是/ 由/ 相遇/ 概率/ 得到/ 的/ ,/ 由式/ (/ 4/ )/ 可知/ ,/ 相遇/ 概率/ 取决于/ 本/ 节点/ 在/ 时间/ 单元/ 内/ 与/ 其它/ 节点/ 的/ 相遇/ 记录/ ,/ 因此/ 消息/ 的/ 投递/ 策略/ 实际上/ 已经/ 考虑/ 了/ 节点/ 运动/ 延时/ 的/ 因素/ —/ —/ —/ 在/ 选择/ 投递/ 路径/ 时/ ,/ DPER/ 选择/ 节点/ 运动/ 延时/ 较/ 小/ 的/ 路径/ 的/ 可能性/ 较大/ ./ 也就是说/ ,/ DPER/ 能/ 获得/ 更/ 小/ 的/ 节点/ 运动/ 延时/ ,/ 因此/ ,/ 与/ SprayandWait/ 和/ EBR/ 相比/ ,/ DPER/ 可以/ 较为/ 明显/ 地/ 减小/ 延时/ ./ 在/ 投递/ 效率/ 方面/ ,/ 从图/ 4/ 中/ 可以/ 看出/ ,/ 在/ 节点/ 数量/ 过多/ 或/ 过/ 少时/ ,/ DPER/ 的/ 投递/ 效率/ 不如/ SprayandWait/ ./ 在/ SprayandWait/ 中/ ,/ 源/ 节点/ 将/ 消息/ 发送给/ L/ 个/ 节点/ 后/ ,/ 这些/ 节点/ 只有/ 在/ 与/ 目的/ 节点/ 相遇/ 后/ 才/ 传输/ 消息/ ,/ 因此/ ,/ 无论/ 是否/ 投递/ 成功/ ,/ 最/ 多/ 只能/ 传输/ L/ +/ 1/ 次/ ;/ 而/ DPER/ 和/ EBR/ 只/ 对/ 复制/ 次数/ 做/ 了/ 限制/ ,/ 配额/ 减小/ 到/ 1/ 之后/ 仍然/ 可以/ 传输/ ,/ 传输/ 的/ 次数/ 可能/ 会/ 比/ SprayandWait/ 多一些/ ,/ 因此/ 投递/ 效率/ 可能/ 反而/ 不如/ SprayandWait/ ./ 数据/ 产生/ 速率/ 对/ 网络/ 性能/ 的/ 影响/ 如图/ 5/ 所示/ ,/ 其中/ ,/ 数据/ 产生/ 速率/ 用/ 平均/ 每个/ 节点/ 每分钟/ 产生/ 多少/ 条/ 消息/ 来/ 表示/ ./ 数据/ 产生/ 速率/ 的/ 上升/ 会/ 使/ 网络/ 中/ 的/ 总/ 数据量/ 上升/ ,/ 由于/ 节点/ 的/ 缓存/ 空间/ 有限/ ,/ 总/ 数据量/ 的/ 增加/ 必然/ 会/ 导致/ 节点/ 缓存/ 空间/ 更/ 容易/ 溢出/ ,/ 因此/ 投递/ 成功率/ 明显/ 下降/ ./ 在/ 数据/ 产生/ 速率/ 上升/ 后/ ,/ 虽然/ 丢包/ 变得/ 更为严重/ ,/ 但/ 由于/ 节点/ 缓存/ 优先/ 抛弃/ 延时/ 更长/ 的/ 消息/ ,/ 保留/ 下/ 的/ 消息/ 都/ 是/ 相对/ 延时/ 较/ 小/ 的/ ,/ 因此/ 延时/ 反而/ 有所/ 减小/ ./ 随着/ 数据/ 产生/ 速率/ 的/ 增大/ ,/ 消息/ 转发/ 的/ 总/ 次数/ 和/ 成功/ 投递/ 的/ 消息/ 数量/ 都/ 有所增加/ ,/ 投递/ 效率/ 的/ 变化/ 将/ 取决于/ 两者/ 的/ 增长速度/ ./ 由于/ 缓存/ 中/ 丢弃/ 的/ 消息/ 增加/ ,/ 网络/ 中/ 消息/ 转发/ 的/ 总/ 次数/ 增长速度/ 并/ 不是/ 特别/ 快/ ,/ 当/ 消息/ 转发/ 总/ 次数/ 比/ 成功/ 投递/ 的/ 消息/ 数量/ 增长速度/ 更慢/ 时/ ,/ 投递/ 效率/ 会/ 呈现/ 上升/ 趋势/ ./ 由于/ DPER/ 会/ 根据/ 节点/ 在/ 时间/ 单元/ 内/ 投递/ 到/ 目的/ 节点/ 的/ 概率/ 来/ 分配/ 拷贝/ 配额/ ,/ 因此/ 无论/ 在/ 何种/ 数据/ 产生/ 速率/ 下/ ,/ DPER/ 在/ 投递/ 成功率/ 和/ 平均/ 延时/ 方面/ 都/ 要/ 优于/ 其它/ 两种/ 路由/ 协议/ ;/ 而/ 在/ 投递/ 效率/ 方面/ ,/ 由于/ 传输/ 的/ 次数/ 比/ SprayandWait/ 更/ 多/ ,/ DPER/ 可能/ 会/ 比/ SprayandWait/ 更差/ ,/ 在/ 数据/ 产生/ 速率/ 较大/ 的/ 情况/ 下/ ,/ 这一/ 现象/ 尤为/ 突出/ ./ 可以/ 认为/ DPER/ 是/ 以/ 牺牲/ 一定/ 的/ 投递/ 效率/ 为/ 代价/ 换取/ 投递/ 成功率/ 和/ 延时/ 性能/ 的/ 提升/ ,/ 另外/ ,/ DPER/ 对/ 投递/ 概率/ 的/ 预测/ 会/ 带来/ 一定/ 的/ 计算/ 开销/ ,/ 虽然/ 开销/ 并/ 不是/ 很大/ ,/ 但/ 这/ 也/ 是/ DPER/ 能/ 获得/ 较/ 好/ 性能/ 的/ 重要/ 原因/ ./ 固定/ 路线/ 节点/ 的/ 比例/ 对/ 网络/ 性能/ 的/ 影响/ 如图/ 6/ 所示/ ./ 无论/ 在/ 哪种/ 路由/ 算法/ 中/ ,/ 消息/ 投递/ 都/ 依赖于/ 节点/ 间/ 的/ 相遇/ 机会/ ,/ 固定/ 节点/ 比例/ 的/ 增加/ 会/ 在/ 一定/ 程度/ 上/ 提高/ 投递/ 成功率/ ,/ 但/ 由于/ 节点/ 的/ 缓存/ 有限/ ,/ 投递/ 成功率/ 、/ 延时/ 和/ 投递/ 效率/ 方面/ 的/ 性能/ 提升/ 幅度/ 不会/ 很大/ ./ 在/ 实际/ 网络/ 中/ ,/ 节点/ 运动/ 的/ 规律性/ 是/ 普遍存在/ 的/ ,/ 包括/ 热点/ 地区/ 、/ 相对/ 固定/ 的/ 运行/ 轨迹/ 、/ 群组/ 运动/ 等/ ,/ 因此/ ,/ DPER/ 和/ EBR/ 这类/ 利用/ 节点/ 运动/ 规律性/ 的/ 路由/ 协议/ 比/ 随机/ 转发/ 的/ 方式/ 具有/ 一定/ 的/ 优势/ ./ 在/ 限定/ 拷贝/ 配额/ 的/ 基础/ 上/ ,/ DPER/ 通过/ 对/ 投递/ Page7/ 图/ 6/ 固定/ 线路/ 节点/ 所/ 占/ 比例/ 对/ 网络/ 性能/ 的/ 影响/ 概率/ 的/ 预测/ ,/ 为/ 投递/ 概率/ 更/ 高/ 的/ 节点/ 分配/ 更大/ 的/ 拷贝/ 配额/ ,/ 这样/ 能够/ 充分利用/ 节点/ 的/ 运动/ 规律/ ,/ 从而/ 选择/ 在/ 当前/ 已知/ 条件/ 下/ 的/ 合理/ 决策/ ./ 这种/ 决策/ 既/ 包括/ 对/ 消息/ 投递/ 成功率/ 的/ 考虑/ ,/ 也/ 会/ 影响/ 到/ 投递/ 延时/ ,/ 因此/ ,/ 对于/ 不同/ 的/ 节点/ 数量/ 、/ 数据/ 产生/ 速率/ 和/ 固定/ 路线/ 节点/ 比例/ ,/ 相对/ 于/ 没有/ 考虑/ 运动/ 特性/ 的/ SprayandWait/ 和/ 仅/ 考虑/ 节点/ 活跃/ 程度/ 的/ EBR/ 来说/ ,/ DPER/ 都/ 可以/ 较为/ 明显/ 地/ 提高/ 投递/ 成功率/ 和/ 减小/ 延时/ ./ 由于/ DPER/ 的/ 决策/ 依赖于/ 节点/ 间/ 的/ 投递/ 概率/ 预测/ ,/ 可能/ 该/ 决策/ 的/ 路径/ 不止/ 两跳/ ,/ 因此/ 完成/ 投递/ 所/ 需/ 的/ 转发/ 次数/ 可能/ 会/ 增加/ ,/ 使得/ 投递/ 效率/ 在/ 部分/ 情况/ 下/ 不如/ SprayandWait/ ./ 虽然/ 开销/ 在/ 部分/ 情况/ 下/ 有所/ 上升/ ,/ 但/ 由于/ 能/ 较为/ 明显/ 地/ 提高/ 投递/ 成功率/ 和/ 减小/ 平均/ 延时/ ,/ 因此/ ,/ 用/ 少量/ 可/ 接受/ 的/ 开销/ 换取/ 投递/ 成功率/ 和/ 延时/ 性能/ 的/ 提升/ 是/ 值得/ 的/ ./ 4/ 总结/ 在/ DTN/ 中/ ,/ 基于/ 配额/ 的/ 路由/ 方式/ 能/ 较/ 好/ 地/ 控制/ 网络/ 开销/ ,/ 其/ 关键问题/ 在于/ 在/ 限制/ 拷贝/ 数量/ 的/ 前提/ 下/ 怎样/ 尽可能/ 提高/ 投递/ 成功率/ ./ 本文/ 分析/ 了/ 限定/ 拷贝/ 数量/ 时/ 的/ 配额/ 分配/ 策略/ ,/ 并/ 据此/ 提出/ 一种/ 基于/ 投递/ 概率/ 预测/ 的/ 高效/ DTN/ 路由/ (/ DPER/ )/ 算法/ ./ DPER/ 可以/ 在/ 当前/ 已知/ 条件/ 下/ 根据/ 本/ 节点/ 和/ 邻居/ 节点/ 到/ 目的/ 节点/ 的/ 投递/ 概率/ 选择/ 合适/ 的/ 拷贝/ 配额/ ,/ 因此/ 可以/ 较/ 好/ 地/ 利用/ 不同/ 节点/ 间/ 投递/ 概率/ 的/ 差别/ ./ 仿真/ 结果表明/ ,/ DPER/ 能/ 在/ 增加/ 少量/ 开销/ 的/ 情况/ 下/ 较为/ 明显/ 地/ 提高/ 投递/ 成功率/ 和/ 减小/ 延时/ ./ 

