Page1/ 一种/ QoS/ 最优/ 的/ 语义/ Web/ 服务/ 自动/ 组合/ 方法/ 邓水光/ 1/ )/ 黄龙/ 涛/ 1/ )/ 吴斌/ 1/ )/ 尹健伟/ 1/ )/ 李/ 革新/ 2/ )/ 1/ )/ (/ 浙江大学/ 计算机科学/ 与/ 技术/ 学院/ 杭州/ 310012/ )/ 2/ )/ (/ 温州/ 大学/ 智能/ 信息系统/ 集成/ 研究所/ 浙江/ 温州/ 325025/ )/ 摘要/ 针对/ 海量/ 的/ 信息/ 提供/ 类/ (/ InformationProviding/ )/ 语义/ Web/ 服务/ 的/ 自动/ 组合/ 问题/ ,/ 提出/ 了/ 一种/ 将/ 正向/ 搜索/ 与/ 逆向/ 搜索/ 相结合/ 并/ 追求/ QoS/ 最优/ 的/ 快速/ 组合/ 方法/ ./ 该/ 方法/ 首先/ 根据/ 用户/ 的/ 请求/ 对/ 服务/ 库中/ 的/ 服务/ 进行/ 层次/ 划分/ ,/ 去除/ 无关/ 服务/ 并/ 得到/ 具有/ 并行/ 调用/ 结构/ 的/ 组合/ 服务/ 原型/ 即/ 规划图/ ;/ 之后/ ,/ 利用/ 得到/ 的/ 参数/ 的/ 服务/ 源/ 信息/ ,/ 计算/ 每个/ 服务/ 的/ 最优/ 组合/ QoS/ ;/ 最后/ ,/ 以/ 用户/ 请求/ 的/ 输出/ 参数/ 为/ 起点/ 进行/ 逆向/ 搜索/ ,/ 以/ 最优/ 组合/ QoS/ 为/ 约束条件/ 构造/ 所有/ 可能/ 的/ 最优/ 解/ ./ 以/ WS/ -/ Challenge2009/ 提供/ 的/ 竞赛/ 集/ 进行/ 实验/ ,/ 结果表明/ 该/ 方法/ 不仅/ 能够/ 找到/ 组合/ 服务/ 的/ 最优/ QoS/ ,/ 而且/ 可以/ 获得/ 大量/ 结构/ 不同/ 但/ QoS/ 均/ 为/ 最优/ 的/ 解/ ,/ 从而/ 为/ 组合/ 服务/ 的/ 执行/ 提供/ 更/ 多/ 的/ 选择/ ./ 关键词/ Web/ 服务/ 自动/ 组合/ ;/ QoS/ ;/ 正向/ 搜索/ ;/ 逆向/ 搜索/ ;/ 规划图/ 1/ 引言/ 近年来/ ,/ Web/ 服务/ 作为/ 一种/ 随时/ 可/ 被/ 用户/ 访问/ 的/ 互联网/ 资源/ ,/ 可以/ 方便/ 地/ 满足用户/ 需求/ ./ 即使/ 在/ 单/ Page2/ 义化/ ,/ 语义/ 信息/ 为/ 服务/ 的/ 功能/ 描述/ 提供/ 了/ 统一/ 规范/ ;/ (/ 3/ )/ 服务/ 的/ QoS/ (/ QualityofService/ )/ 受到/ 关注/ ,/ QoS/ 成为/ 用户/ 在/ 使用/ 服务/ 时/ 考虑/ 的/ 重要/ 指标/ ;/ (/ 4/ )/ 云/ 计算环境/ 下/ 服务/ 执行/ 环境/ 更为/ 复杂多变/ ,/ 原本/ 可用/ 的/ 服务/ 在/ 某些/ 特定/ 环境/ 下/ 可能/ 变得/ 无法/ 使用/ ,/ 因而/ 带有/ 更/ 多/ 执行/ 方案/ 的/ 组合/ 服务/ 将/ 显得/ 更加/ 可靠/ ./ 在/ 此/ 背景/ 之下/ ,/ 如何/ 快速/ 地/ 从/ 海量/ 服务/ 中/ 得到/ 尽可能/ 多/ 的/ 既/ 能/ 满足用户/ 需求/ 又/ 具有/ 最优/ QoS/ 的/ 组合/ 服务/ 将/ 是/ 云/ 计算/ 趋势/ 下/ Web/ 服务/ 自动/ 组合/ 问题/ 的/ 研究/ 重点/ ./ Web/ 服务/ 自动/ 组合/ 问题/ 作为/ 服务/ 科学/ 中/ 的/ 一个/ 研究/ 热点/ ,/ 吸引/ 了/ 国内外/ 众多/ 研究者/ 对/ 其/ 展开/ 深入研究/ ./ 较为/ 成功/ 的/ 自动/ 组合/ 方法/ 基本上/ 都/ 是/ 在/ 各类/ AI/ 规划/ 技术/ 之上/ 实现/ 的/ ./ AI/ 规划/ 方法/ 取得成功/ 的/ 主要/ 原因/ 在于/ 服务/ 自动/ 组合/ 和/ AI/ 规划/ 在/ 问题/ 本质/ 上/ 的/ 一致性/ ./ 自动/ 组合/ 问题/ 可以/ 等价/ 地/ 转化/ 为/ 各类/ AI/ 规划/ 问题/ (/ 如/ 情景/ 演算/ [/ 1/ -/ 2/ ]/ 、/ 状态/ 空间/ [/ 3/ -/ 6/ ]/ 、/ 问题归约/ [/ 7/ -/ 9/ ]/ 、/ 自动/ 定理/ 证明/ [/ 10/ -/ 12/ ]/ 、/ 约束/ 满足/ [/ 13/ -/ 14/ ]/ 以及/ 规划图/ 问题/ [/ 15/ -/ 22/ ]/ 等/ )/ ,/ 因而/ 利用/ 现有/ 的/ AI/ 规划系统/ 或是/ 规划/ 算法/ 来/ 解决/ Web/ 服务/ 自动/ 组合/ 问题/ 是/ 一种/ 有效/ 的/ 求解/ 手段/ ./ 普通/ 的/ AI/ 规划/ 方法/ (/ 规划图/ 方法/ 除外/ )/ 可以/ 对/ 各类/ 服务/ 进行/ 建模/ (/ 包括/ 信息/ 提供/ 类/ 服务/ (/ InformationProvidingServices/ )/ 和/ 状态/ 改变/ 类/ 服务/ (/ WorldAlteringServices/ )/ )/ ,/ 并/ 利用/ 启发式/ 信息/ [/ 3/ -/ 4/ ]/ 对/ 组合/ 过程/ 进行/ 指导/ 以/ 提高效率/ ./ 尽管如此/ ,/ 在/ 海量/ 服务/ 集中/ ,/ 由于/ 搜索/ 空间/ 的/ 快速/ 膨胀/ ,/ 普通/ AI/ 规划/ 方法/ 也/ 无法/ 在/ 理想/ 时间/ 内/ 给出/ 问题/ 的/ 解/ ,/ 效率/ 提升/ 仍/ 是/ 目前/ 普通/ AI/ 规划/ 方法/ 亟需/ 解决/ 的/ 主要/ 难题/ ./ 因此/ ,/ 目前/ 普通/ AI/ 规划/ 方法/ 适用/ 于/ 解决/ 服务/ 建模/ 需求/ 复杂/ 但/ 服务/ 规模/ 不/ 大/ (/ 千/ 量级/ 服务/ )/ 的/ Web/ 服务/ 自动/ 组合/ 问题/ ./ 基于/ 并行/ 分层/ 思想/ 的/ 规划图/ 方法/ 通常/ 只/ 对/ 信息/ 提供/ 类/ 服务/ 进行/ 建模/ 而/ 不/ 考虑/ 服务/ 对/ 世界/ 状态/ 的/ 改变/ ./ 尽管/ 建模/ 能力/ 有限/ ,/ 但/ 由于/ 信息/ 提供/ 类/ 服务/ 仍/ 是/ 目前/ 互联网/ 中/ Web/ 服务/ 的/ 主要/ 类别/ ①/ ,/ 这/ 类/ 方法/ 有着/ 广阔/ 的/ 应用/ 范围/ ./ 这类/ 方法/ 在/ 正向/ 搜索/ 时/ 可以/ 利用/ 信息/ 提供/ 类/ 服务/ 允许/ 并行执行/ 的/ 特点/ 使/ 若干/ 服务/ 可以/ 在/ 一次/ 搜索/ 扩展/ 中/ 被/ 同时/ 考察/ ,/ 从而/ 可以/ 大大/ 缩减/ 搜索/ 的/ 宽度/ 和/ 深度/ ,/ 进而/ 可以/ 在/ 毫秒/ 级/ 时间/ 内/ 从/ 海量/ 服务/ 中/ (/ 万级/ 服务/ )/ 找到/ 符合/ 用户/ 需求/ 的/ 组合/ 服务/ 原型/ ,/ 这是/ 该类/ 方法/ 取得成功/ 的/ 主要/ 原因/ ./ 随后/ ,/ 该类/ 方法/ 通过/ 逆向/ 裁剪/ 去除/ 组合/ 服务/ 原型/ 中/ 对/ 生成/ 目标/ 无关/ 的/ 节点/ ,/ 最终/ 得到/ 完整/ 有效/ 的/ 组合/ 服务/ ./ 因此/ ,/ 基于/ 并行/ 分层/ 思想/ 的/ 双向/ 搜索/ 方法/ 适用/ 于/ 解决/ 海量/ 信息/ 提供/ 类/ Web/ 服务/ 的/ 快速/ 组合/ 问题/ ./ QoS/ 最优/ 的/ Web/ 服务/ 自动/ 组合/ 问题/ 在/ 传统/ 服务/ 自动/ 组合/ 问题/ 的/ 基础/ 上/ 对解/ 增加/ 了/ QoS/ 最优/ 的/ 限制/ ./ 针对/ 该/ 问题/ 并/ 以/ 信息/ 提供/ 类/ Web/ 服务/ 为/ 主要/ 考察/ 对象/ ,/ 本文/ 基于/ 规划图/ 思想/ 提出/ 了/ 一种/ 新/ 的/ QoS/ 最优/ 的/ 双向/ 三/ 阶段/ 语义/ Web/ 服务/ 自动/ 组合/ 方法/ ./ 该/ 方法/ 在/ 保证/ 问题/ 求解/ 的/ 准确率/ (/ 找到/ 的/ 组合/ 服务/ QoS/ 要求/ 是/ 最优/ 的/ )/ 的/ 前提/ 下/ 进一步提高/ 解/ 的/ 完全/ 率/ (/ 找到/ 的/ 最优/ 组合/ 服务/ 在/ 实际/ 存在/ 的/ 所有/ QoS/ 最优/ 组合/ 服务/ 中所/ 占/ 的/ 比例/ )/ ./ 该/ 方法/ 分为/ 三个/ 阶段/ :/ 正向/ 分层/ 阶段/ 、/ 最优/ 组合/ QoS/ 计算/ 阶段/ 和/ 逆向/ 全解/ 构造/ 阶段/ ./ 正向/ 分层/ 阶段/ 根据/ 用户/ 的/ 请求/ 对/ 服务/ 库中/ 的/ 服务/ 进行/ 层次/ 划分/ ,/ 去除/ 无关/ 服务/ 并/ 得到/ 具有/ 并行/ 调用/ 结构/ 的/ 组合/ 服务/ 原型/ ./ 最优/ 组合/ QoS/ 计算/ 阶段/ 利用/ 正向/ 分层/ 阶段/ 得到/ 的/ 参数/ 的/ 服务/ 源/ 信息/ ,/ 计算/ 每个/ 服务/ 的/ 最优/ 组合/ QoS/ ./ 最后/ 的/ 逆向/ 全解/ 构造/ 阶段/ 以/ 服务/ 的/ 最优/ 组合/ QoS/ 为/ 约束条件/ 逐步/ 构造/ 出/ 满足用户/ 需求/ 且/ QoS/ 最优/ 但/ 结构/ 不同/ 的/ 所有/ 组合/ 服务/ ./ 以/ 国际/ 知名/ 的/ Web/ 服务/ 竞赛/ WS/ -/ Challenge/ ②/ 提供/ 的/ 最近/ 一次/ 竞赛/ 集/ (/ 2009/ )/ 作为/ 实验/ 数据/ 集/ 并/ 以/ 冠军/ 系统/ 的/ 结果/ 数据/ 作为/ 比较/ 对象/ ,/ 本文/ 所提/ 方法/ 不仅/ 在/ 最优/ 组合/ QoS/ 值/ 的/ 计算/ 方面/ 与/ 冠军/ 系统/ 的/ 结果/ 一致/ ③/ ,/ 且/ 可/ 获得/ 比其/ 更/ 多/ 结构/ 不同/ 但/ QoS/ 均/ 为/ 最优/ 的/ 解/ ./ 本文/ 第/ 2/ 节/ 讨论/ 相关/ 工作/ ;/ 第/ 3/ 节对/ 问题/ 的/ 关键/ 概念/ 给出/ 清晰/ 定义/ ;/ 第/ 4/ 节/ 介绍/ 各/ 阶段/ 的/ 主要/ 工作/ 过程/ ;/ 第/ 5/ 节/ 给出/ 实验/ 过程/ 并/ 分析/ 结果/ ;/ 最后/ 是/ 本文/ 的/ 总结/ 和/ 展望/ ./ 2/ 相关/ 工作/ 近年来/ ,/ 基于/ QoS/ 的/ Web/ 服务/ 组合/ 优化/ 研究/ 已经/ 成为/ 面向/ 服务/ 软件工程/ 中/ 的/ 一个/ 重要/ 课题/ ,/ 并且/ 已经/ 从/ 局部/ 最优/ 发展/ 到/ 全局/ 最优/ ,/ 产生/ 了/ 许多/ 相关/ 的/ 创新/ 成果/ [/ 23/ -/ 31/ ]/ ./ 文献/ [/ 3/ ]/ 在/ 启发式/ 函数/ 的/ 设计/ 中/ 考虑/ 了/ 服务/ QoS/ 的/ 影响/ ,/ 但是/ 由于/ 和/ QoS/ 相关/ 的/ 计算/ 分量/ 小于/ 1/ ,/ 使得/ QoS/ 对/ 启发式/ 函数/ 的/ 最终/ 值/ 影响/ 不/ 大/ ,/ 因而/ 求得/ 的/ 解/ 往往/ 也/ 不是/ QoS/ 全局/ 最优/ 的/ ./ 文献/ [/ 6/ ]/ 采用/ 现有/ 的/ AI/ 规划/ 器来/ 求解/ QoS/ 最优/ 的/ 服务/ 自动/ 组合/ 问题/ ,/ 但/ 其/ 对/ 组合/ QoS/ 的/ 计算/ 只/ 考虑/ 了/ 简单/ 的/ 求和/ 方法/ ,/ 由于/ 不同/ 的/ QoS/ 类别/ 对应/ 着/ 不同/ 的/ 组合/ QoS/ 计算方法/ ,/ 所以/ 该/ 方法/ 的/ 局限性/ 较大/ ./ 文献/ [/ 24/ ]/ 提出/ 了/ Web/ 服务/ 组合/ 的/ 全局/ QoS/ 优/ ①/ ②/ ③/ Page3/ 化/ 问题/ ,/ 并称/ 这个/ 问题/ 是/ 一个/ NP/ -/ hard/ 问题/ ./ 这/ 篇文章/ 提出/ 了/ 通过/ 局部/ 选取/ 方法/ 实现/ 全局/ QoS/ 优化/ ./ 首先/ 利用/ 混合/ 整数/ 规划/ 方法/ 查找/ 满足/ 全局/ QoS/ 约束/ 的/ 最优/ 分解/ ,/ 然后/ 通过/ 局部/ 选择/ 法/ 找到/ 满足/ 局部/ 约束/ 的/ 具体/ 服务/ ,/ 但是/ 该/ 方法/ 并/ 没有/ 给出/ 应对/ 大规模/ 数据/ 集/ 的/ 性能/ 表现/ ./ 对于/ 处理/ 大规模/ 数据/ 集/ ,/ 文献/ [/ 25/ ]/ 提出/ 了/ 一种/ 局部/ 启发式/ 优化/ 方法/ ,/ 通过/ 给/ 每/ 一个/ 任务分配/ 质量/ 约束/ 过滤/ 备选/ 服务/ ,/ 然后/ 从/ 过滤/ 后/ 的/ 备选/ 服务/ 中/ 枚举/ 出/ 所有/ 组合/ 可能/ 找到/ QoS/ 最优/ 解/ ./ 该/ 方法/ 可以/ 有效/ 地/ 减少/ 搜索/ 空间/ 、/ 提高/ 组合/ 效率/ ,/ 但是/ 该/ 方法/ 只能/ 找出/ 近似/ QoS/ 最优/ 服务/ 组合/ ./ 类似/ 地/ ,/ 文献/ [/ 26/ ]/ 也/ 提出/ 了/ 一种/ 删减/ 备选/ 服务/ 的/ 方法/ ,/ 该文/ 利用/ skyline/ 技术/ 筛/ 除掉/ 备选/ 服务/ 集合/ 中/ 不/ 可能/ 出现/ 在/ 最优/ 结果/ 的/ 备选/ 服务/ ,/ 从而/ 减少/ 需要/ 考虑/ 的/ 服务/ 组合/ 情况/ ,/ 但是/ 该/ 方法/ 要求/ 用户/ 提出/ 对/ 每/ 一个/ 任务/ 的/ 具体/ QoS/ 约束/ ,/ 一旦/ 用户/ 没有/ 显式/ 地/ 提出/ QoS/ 需求/ ,/ 该/ 方法/ 将/ 不/ 适用/ ./ 相对/ 于/ 上述/ 方法/ ,/ 本文/ 对于/ 处理/ 大规模/ 服务/ 组合/ QoS/ 全局/ 优化/ 问题/ 时/ ,/ 同样/ 采用/ 了/ 过滤/ 无用/ 服务/ 的/ 思想/ 来/ 减少/ 搜索/ 空间/ ,/ 但是/ 本文/ 提出/ 的/ 过滤/ 方法/ 并不需要/ 用户/ 提出/ QoS/ 约束/ ,/ 而是/ 根据/ 服务/ 的/ 可/ 组合/ 性/ 进行/ 功能性/ 过滤/ ./ 同时/ 为了/ 保证/ 得到/ 全局/ QoS/ 最优/ 解/ ,/ 本文/ 是/ 在/ 所有/ 有效/ 服务/ 的/ 源/ 服务/ 都/ 已经/ 确定/ 之后/ 计算/ 服务/ 组合/ 的/ QoS/ 值/ ,/ 以/ 避免/ 局部/ 最优/ 替代/ 全局/ 最优/ 的/ 可能性/ ./ 在/ 现有/ 的/ Web/ 服务/ 组合/ QoS/ 全局/ 最优/ 方法/ 中/ ,/ 基于/ 并行/ 分层/ 思想/ 的/ 规划图/ 方法/ 是/ 本文/ 考察/ 的/ 主要/ 方法/ ./ 不同于/ 传统/ 的/ 规划图/ 方法/ ,/ 文献/ [/ 15/ ]/ 没有/ 采用/ 逆向/ 搜索/ 来/ 去除/ 原型/ 中/ 的/ 冗余/ 服务/ ,/ 而是/ 在/ 正向/ 搜索/ 时/ 采用/ 4/ 种去/ 冗余/ 策略/ 来/ 解决/ 非/ 语义/ 的/ Web/ 服务/ 自动/ 组合/ 问题/ ./ 该/ 方法/ 旨在/ 能/ 在/ 较/ 短时间/ 内/ 找到/ 一个/ 解/ ,/ 但是/ 无法/ 保证/ 解中/ 不/ 包含/ 冗余/ 服务/ ./ 文献/ [/ 16/ ]/ 虽然/ 也/ 是/ 只/ 解决/ 非/ 语义/ 层上/ 的/ Web/ 服务/ 自动/ 组合/ 问题/ ,/ 但/ 它/ 采用/ 了/ 一种/ 逆向/ 的/ 启发式/ 贪心/ 搜索算法/ 来/ 保证/ 结果/ 中/ 无/ 冗余/ 服务/ ./ 文献/ [/ 17/ ]/ 对/ 文献/ [/ 15/ ]/ 进行/ 了/ 语义上/ 的/ 扩展/ ,/ 但/ 它/ 仍/ 没有/ 解决/ 冗余/ 服务/ 的/ 问题/ ./ 文献/ [/ 18/ ]/ 重点/ 讨论/ 了/ Web/ 服务/ 自动/ 组合/ 问题/ 中/ 的/ 语义/ 匹配/ 问题/ ,/ 它/ 通过/ 概念/ 相似/ 度/ 和/ 预定/ 义/ 的/ 阈值/ 来/ 确定/ 参数/ 间/ 的/ 匹配/ 关系/ ,/ 然而/ 对于/ 阈值/ 选取/ 问题/ 没有/ 给出/ 深入/ 的/ 讨论/ ,/ 因而/ 很难/ 具有/ 实际/ 的/ 应用/ 价值/ ./ 文献/ [/ 19/ ]/ 在/ 语义/ 问题/ 上/ 通过/ 概念/ 间/ 的/ 父子/ 类/ 关系/ 来/ 确定/ 参数/ 的/ 匹配/ 关系/ 并/ 对/ 组合/ 服务/ 进行/ 了/ QoS/ 的/ 考察/ ,/ 但是/ 对/ 组合/ 服务/ 的/ QoS/ 计算方法/ 只是/ 采用/ 了/ 简单/ 的/ 求和/ 方法/ ./ 文献/ [/ 32/ ]/ 提出/ 了/ 基于/ A/ / 算法/ 的/ 启发式/ 搜索/ 方法/ ,/ 解决/ 了/ 考虑/ 服务/ QoS/ 的/ 自动/ 服务/ 组合/ 问题/ ./ 文献/ [/ 33/ ]/ 利用/ 了/ 功能/ 聚类/ 的/ 方法/ 实现/ 了/ QoS/ 自动/ 服务/ 组合/ ,/ 该/ 方法/ 对/ 功能/ 相似/ 的/ 服务/ 聚类/ ,/ 通过/ 评估/ 不同/ 簇/ 的/ QoS/ 得出/ 最终/ 的/ QoS/ 最优/ 服务/ 组合/ ,/ 但/ 该/ 方法/ 无法/ 处理结果/ 过于/ 复杂/ 的/ 服务/ 组合/ ./ QSynth/ [/ 20/ -/ 21/ ]/ 是/ 旨在/ 解决/ QoS/ 最优/ 的/ 海量/ 语义/ 服务/ 快速/ 组合/ 问题/ ,/ 并/ 获得/ WS/ -/ Challenge2009/ 竞赛/ 第一名/ ./ 该/ 系统/ 在/ 正向/ 搜索/ 过程/ 中/ 除了/ 对/ 服务/ 进行/ 并行/ 分层/ 外/ 还/ 对/ 每个/ 有效/ 服务/ 在/ 组合/ 服务/ 中/ 的/ 最优/ QoS/ 值/ 进行/ 了/ 计算/ ,/ 并/ 对/ 算法/ 的/ 可/ 停机/ 性/ 和/ 最优/ 值/ 的/ 正确性/ 给出/ 了/ 简单/ 证明/ ./ 它/ 的/ 逆向/ 搜索/ 过程/ 则/ 是/ 根据/ 记录/ 的/ 每个/ 参数/ 的/ 最优/ 源/ 快速/ 生成/ 一个/ QoS/ 最优/ 的/ 组合/ 服务/ ./ 实际上/ ,/ 正向/ 搜索/ 结束/ 时/ 得到/ 服务/ 的/ 最优/ 组合/ QoS/ 值/ 往往/ 不是/ 真正/ 的/ 最优/ 值/ ,/ 因为/ 后层/ 的/ 服务/ 可能/ 可以/ 提供/ 更优/ 的/ 组合/ QoS/ 值/ ,/ QSynth/ 解决/ 该/ 问题/ 的/ 方法/ 是/ 使用/ 一个/ 重/ 计算/ 队列/ 用来/ 保存/ 由于/ 某个/ 参数/ 的/ 最优/ QoS/ 发生/ 更新/ 而/ 需要/ 重新/ 计算/ 其/ 组合/ QoS/ 值/ 后继/ 服务/ ,/ 并/ 在/ 正向/ 搜索/ 结束/ 后/ 依次/ 对重/ 计算/ 队列/ 中/ 的/ 每个/ 服务/ 进行/ 组合/ QoS/ 的/ 重/ 计算/ ./ 在/ QSynth/ 的/ 基础/ 上/ ,/ 作者/ 又/ 在/ 文献/ [/ 34/ ]/ 提出/ 了/ 支持/ 可持续性/ 查询/ 的/ 自动/ 服务/ 组合/ 方法/ ./ 与/ 已有/ 的/ 研究/ 工作/ 相比/ ,/ 本文/ 有/ 如下/ 三/ 方面/ 的/ 创新/ :/ (/ 1/ )/ 本文/ 将/ QoS/ 值/ 的/ 计算/ 过程/ 放在/ 正向/ 搜索/ 结束/ 之后/ ./ 因为/ 随/ 正向/ 搜索/ 得到/ 的/ 最优/ 组合/ QoS/ 值/ 由于/ 对/ 后层/ 服务/ 的/ 依赖/ 关系/ 缺乏/ 感知/ 很/ 有/ 可能/ 不是/ 最优/ 的/ ,/ 而/ 在/ 正向/ 搜索/ 结束/ 之后/ ,/ 有效/ 服务/ 的/ 所有/ 源/ 服务/ 都/ 已经/ 确定/ ,/ 从而/ 可以/ 确保/ 得到/ 全局/ 最优/ 的/ QoS/ 值/ ./ (/ 2/ )/ 本文/ 提出/ 了/ 采用/ 多/ 轮次/ 更新/ 的/ 方法/ 求得/ 所有/ 服务/ 的/ 全局/ 最优/ 组合/ QoS/ 值/ (/ 而/ 非/ 采用/ 重/ 计算/ 队列/ )/ ,/ 同时/ 对/ 该/ 方法/ 的/ 正确性/ 和/ 可/ 停机/ 性/ 进行/ 了/ 严格/ 的/ 理论/ 证明/ ./ (/ 3/ )/ 本文/ 提出/ 的/ 逆向/ 搜索/ 方法/ 能够/ 得到/ 结构/ 不同/ 但/ 组合/ QoS/ 最优/ 的/ 全部/ 组合/ 服务/ 结果/ ./ 目前/ 大多数/ 自动/ 服务/ 组合/ 方法/ 只是/ 返回/ QoS/ 全局/ 最优/ 的/ 一个/ 组合/ 服务/ ,/ 返回/ 全局/ QoS/ 最优/ 的/ 全部/ 组合/ 服务/ 能够/ 有/ 效应/ 对云/ 计算环境/ 下/ 服务/ 执行/ 环境/ 复杂多变/ 所/ 带来/ 的/ 挑战/ ./ 3/ 问题/ 定义/ 本节/ 将/ 从/ 语义/ 、/ 服务/ 及/ QoS/ 等/ 方面/ 对/ QoS/ 最优/ 的/ 服务/ 自动/ 组合/ 问题/ 给出/ 形式/ 定义/ ./ Page4/ 定义/ 1/ (/ 本体/ 库/ )/ ./ 本体/ 库/ OT/ 是/ 一个二元/ 组/ (/ 1/ )/ C/ 为/ 本体/ 概念/ 的/ 集合/ ;/ (/ 2/ )/ T/ 为/ 本体/ 概念/ 间/ 的/ 直接/ 继承/ 关系/ 的/ 集合/ ./ 若/ 概念/ c1/ 直接/ 继承/ 自/ c2/ ,/ 则/ 表示/ 为/ c1/ →/ c2/ ,/ 若/ 概念/ c1/ 直接/ 或/ 间接/ 继承/ 自/ c2/ ,/ 则/ 表示/ 为/ c1/ / c2/ ./ 本体/ 概念/ 即/ 为/ 服务/ 输入输出/ 参数/ 的/ 语义/ ./ 本体/ 库/ 可/ 表示/ 为/ 一棵/ 以/ 本体/ 概念/ 为/ 节点/ 、/ 以/ 概念/ 间/ 的/ 直接/ 继承/ 关系/ 为边/ 的/ 树/ ./ 本文/ 规定/ 子类/ 本体/ 对象/ 可以/ 赋值/ 给/ 父类/ 对象/ ,/ 反之/ 不行/ ./ 定义/ 2/ (/ 语义/ 包含/ )/ ./ 给定/ 两个/ 参数/ 集/ S/ 和/ T/ ,/ 对于/ T/ 中/ 的/ 每/ 一个/ 元素/ t/ ,/ 如果/ 满足条件/ :/ / e/ ∈/ S/ (/ (/ e/ / t/ )/ ∨/ (/ e/ =/ t/ )/ )/ ,/ 则/ 称/ S/ 语义/ 包含/ T/ ,/ 记为/ S/ / T/ ./ 3.2/ 服务/ 与/ 组合/ 服务/ 定义/ 3/ (/ 服务/ )/ ./ 服务/ 可以/ 表示/ 为/ 一个/ 四元组/ w/ =/ (/ n/ ,/ I/ ,/ O/ ,/ QoS/ )/ ,/ 其中/ :/ (/ 1/ )/ n/ 代表/ 服务/ 的/ 名称/ ;/ (/ 2/ )/ I/ 代表/ 服务/ 的/ 输入/ 参数/ (/ 或/ 本体/ )/ 的/ 集合/ ;/ (/ 3/ )/ O/ 代表/ 服务/ 的/ 输出/ 参数/ (/ 或/ 本体/ )/ 的/ 集合/ ;/ (/ 4/ )/ QoS/ 代表/ 服务/ 的/ 一类/ QoS/ 属性/ ./ 通常/ 情况/ 下/ ,/ 一个/ Web/ 服务/ 可以/ 包含/ 若干/ 操作/ ,/ 但/ 为了/ 简化/ 表述/ ,/ 本文/ 中/ 的/ 服务/ 即/ 代表/ Web/ 服务/ 的/ 一个/ 操作/ ./ 服务/ 的/ 输入输出/ 参数/ 对应/ 确定/ 的/ 本体/ ,/ 因此/ 本文/ 不/ 特别/ 区分/ 参数/ 和/ 本体/ ./ 此外/ ,/ 本文/ 考虑/ 的/ 服务/ 类别/ 主要/ 是/ 信息/ 提供/ 类/ 服务/ ,/ 其/ 特点/ 是/ 服务/ 的/ 输入/ 信息/ 在/ 服务/ 返回/ 之后/ 仍然/ 有效/ ,/ 服务/ 只是/ 在/ 输入/ 信息/ 的/ 基础/ 上/ 提供/ 更/ 多/ 的/ 信息/ 而/ 不会/ 更改/ 输入/ 信息/ 或/ 使/ 输入/ 信息/ 失效/ ./ 该类/ 服务/ 不仅/ 是/ 目前/ 互联网/ 上/ 存在/ 的/ Web/ 服务/ 的/ 主要/ 类别/ (/ 如/ 天气/ 、/ 位置/ 等/ 各种/ 查询/ 服务/ 、/ 翻译/ 服务/ 和/ 各类/ 单位/ 转换/ 服务/ 等/ )/ ,/ 而且/ 也/ 是/ 各类/ 竞赛/ 主要/ 的/ 考察/ 对象/ ./ 关于/ 服务/ 的/ QoS/ 的/ 说明/ 请/ 参见/ 后文/ ./ 3.1/ 语义/ (/ C/ ,/ T/ )/ ,/ 其中/ :/ 记/ w/ 的/ 单步/ 执行/ 为/ S0/ / S1/ ,/ 其中/ :/ 定义/ 4/ (/ 服务/ 的/ 单步/ 执行/ )/ ./ 给定/ 一个/ 服务/ w/ ,/ (/ 1/ )/ S0/ / w/ ./ I/ ,/ S1/ / w/ ./ O/ ;/ (/ 2/ )/ S0/ ,/ S1/ 是/ 参数/ 的/ 集合/ ./ 定义/ 5/ (/ 服务/ 的/ 并行执行/ )/ ./ 给定/ 一个/ 服务/ w/ ,/ 记/ w/ 的/ 并行执行/ 为/ L0/ ≡/ >/ L1/ ≡/ >/ …/ ≡/ >/ Ln/ ,/ 其中/ :/ (/ 1/ )/ Lk/ (/ 0/ / k/ / n/ )/ 为/ 参数/ 的/ 集合/ 并/ 代表/ 并行执行/ 的/ 层次/ ,/ 且/ 满足条件/ (/ L0/ =/ w/ ./ I/ )/ ∧/ (/ Ln/ / w/ ./ O/ )/ ;/ (/ 2/ )/ Lk/ ≡/ >/ Lk/ +/ 1/ (/ 0/ / k/ / n/ -/ 1/ )/ 是/ w/ 并行执行/ 过程/ 的/ 一个/ 步骤/ ,/ 代表/ 若干/ 子/ 服务/ 单步/ 执行/ 的/ 并行/ 调用/ ,/ 若记/ 这些/ 子/ 服务/ 的/ 集合/ 为/ LWk/ ,/ 须/ 满足/ 以下/ 条件/ :/ / w/ ∈/ LWk/ (/ (/ Lk/ / w/ ./ I/ )/ ∧/ (/ Lk/ +/ 1/ =/ Lk/ ∪/ (/ ∪/ w/ ∈/ LWk/ 足/ LWp/ ∩/ LWq/ =/ / ./ (/ 3/ )/ / p/ ,/ q/ (/ 0/ / p/ / n/ -/ 1/ ∧/ 0/ / q/ / n/ -/ 1/ ∧/ p/ ≠/ q/ )/ ,/ 满/ 服务/ 的/ 单步/ 执行/ 和/ 并行执行/ 均/ 是/ 动态/ 的/ 概念/ ,/ 单步/ 执行/ 代表/ 内部/ 逻辑/ 不/ 可见/ 的/ 服务/ 执行/ ,/ 而/ 并行执行/ 代表/ 内部/ 逻辑/ 可见/ 的/ 服务/ 执行/ ./ 并行执行/ 的/ 过程/ 是/ 分层/ 进行/ 的/ (/ 即/ 代表/ AI/ 规划/ 中/ 的/ 规划图/ )/ ,/ 同/ 一层/ 中/ 的/ 服务/ 可以/ 并行/ 调用/ (/ 信息/ 提供/ 类/ 服务/ 不/ 改变/ 已有/ 信息/ 状态/ )/ ,/ 服务/ 的/ 输入/ 完全/ 语义/ 包含/ 于/ 当前/ 参数/ 层且/ 服务/ 的/ 输出/ 将/ 被/ 添加/ 到/ 下/ 一/ 参数/ 层中/ ./ 并行执行/ 的/ 各层/ 服务/ 不/ 存在/ 交集/ ,/ 因而/ 服务/ 的/ 并行执行/ 必/ 不/ 包含/ 环路/ ,/ 可以/ 用/ 一个/ DAG/ 图/ (/ 有/ 向/ 无/ 环图/ )/ 来/ 表示/ (/ DAG/ 图/ 可以/ 方便/ 地/ 转换/ 到/ 其它/ 表示/ 形式/ ,/ 如/ WS/ -/ BPEL/ 等/ )/ ,/ DAG/ 图/ 的/ 节点/ 代表/ 子/ 服务/ ,/ 边/ 代表/ 参数/ 之间/ 的/ 传递/ 关系/ ,/ 即/ 起点/ 服务/ 的/ 某/ 一/ 输出/ 参数/ 可以/ 用作/ 终点/ 服务/ 的/ 某/ 一/ 输入/ 参数/ ./ 定义/ 6/ (/ 组合/ 服务/ )/ ./ 给定/ 一个/ 服务/ 库/ W/ ,/ 对于/ 确定/ 的/ 服务/ w/ (/ 可以/ 不/ 属于/ W/ )/ ,/ 如果/ 存在/ w/ 的/ 一个/ 并行执行/ e/ ,/ 满足条件/ :/ / w/ ∈/ e/ ./ LWk/ (/ w/ ∈/ W/ )/ ,/ 则/ 称/ e/ 对应/ 的/ DAG/ 图为/ W/ 中/ 能够/ 满足/ w/ 的/ 一个/ 组合/ 服务/ 并/ 记该/ 组合/ 服务/ cw/ =/ (/ N/ ,/ E/ )/ ,/ 其中/ :/ (/ 1/ )/ N/ 为/ DAG/ 图/ 的/ 节点/ 集/ ,/ start/ 和/ end/ 为/ N/ 中/ 两个/ 虚拟/ 服务/ 节点/ ,/ start/ 节点/ 输入/ 为/ 空且/ 输出/ 等于/ w/ ./ I/ ,/ end/ 节点/ 输出/ 为/ 空且/ 输入/ 等于/ w/ ./ O/ ;/ (/ 2/ )/ E/ 为/ DAG/ 图/ 的/ 边集/ ,/ 代表/ 服务/ 间/ 参数/ 的/ 可/ 传递/ 关系/ ./ 3.3/ 服务/ QoS/ 、/ 组合/ 服务/ QoS/ 与/ 服务/ 的/ 组合/ QoS/ 定义/ 7/ (/ 服务/ 的/ QoS/ )/ ./ 服务/ 的/ QoS/ 是/ 指/ 服务/ 的/ 非/ 功能属性/ ,/ 如/ 平均/ 响应/ 时间/ 、/ 吞吐量/ 、/ 执行/ 花费/ 及/ 服务/ 可信度/ 等等/ ./ 有关/ QoS/ 更/ 多/ 分类/ 可/ 参考文献/ [/ 35/ ]/ ./ 通常/ 情况/ 下/ ,/ 服务/ 组合/ 时/ 考察/ 的/ QoS/ 属性/ 都/ 是/ 同/ 一类/ 可/ 量化/ QoS/ 属性/ [/ 3/ ,/ 6/ ,/ 20/ -/ 22/ ,/ 36/ -/ 37/ ]/ ,/ 本文/ 也/ 主要/ 考察/ 同类/ 别的/ QoS/ 属性/ ,/ 对于/ 各类/ QoS/ 属性/ 混合/ 的/ 情况/ ,/ 可能/ 的/ 解决方案/ 是/ 对/ 各类/ QoS/ 加权/ 求和/ ./ 定义/ 8/ (/ 组合/ 服务/ 的/ QoS/ 与/ 服务/ 的/ 组合/ QoS/ )/ ./ 给定/ 一个/ 组合/ 服务/ cw/ ,/ 可以/ 通过/ 一定/ 的/ 计算/ 法则/ (/ 式/ (/ 1/ )/ )/ 得到/ cw/ 的/ 整体/ QoS/ ,/ 称该/ QoS/ 为/ 组合/ 服务/ 的/ QoS/ ./ 在/ 计算/ 组合/ 服务/ cw/ 的/ QoS/ 的/ 过程/ 中/ 得到/ 的/ 每个/ 子/ 服务/ w/ 的/ QoS/ 值/ 称为/ 服务/ w/ 相对/ 于/ 组合/ Page5/ 服务/ cw/ 的/ 组合/ QoS/ 值/ ,/ 简称/ w/ 的/ 组合/ QoS/ 值/ ,/ 记为/ OverallQoScw/ (/ w/ )/ 或/ Qcw/ (/ w/ )/ ./ 其/ 计算公式/ 为/ Qcw/ (/ w/ )/ =/ F2/ (/ F1w/ ∈/ pre/ (/ Qcw/ (/ w/ )/ )/ ,/ w/ ./ QoS/ )/ (/ 1/ )/ 其中/ ,/ pre/ 为/ w/ 在/ cw/ 中/ 的/ 前续/ 服务/ 节点/ 集合/ ,/ F1/ ,/ F2/ ∈/ {/ ∑/ ,/ ∏/ ,/ MIN/ ,/ MAX/ }/ ,/ F/ 取值/ 与/ QoS/ 类别/ 相关/ ,/ 具体/ 参见/ 表/ 1/ ./ 特别/ 地/ ,/ Qcw/ (/ start/ )/ =/ 0/ ,/ Qcw/ (/ end/ )/ 即/ 为/ 组合/ 服务/ cw/ 的/ QoS/ 值/ ./ 3.4/ QoS/ 最优/ 的/ 服务/ 自动/ 组合/ 定义/ 9/ (/ 服务/ 的/ 最优/ QoS/ )/ ./ QoS/ 属性/ 从/ 最优性/ 角度/ 可以/ 分为/ 两类/ :/ 正类/ 和/ 负类/ ./ 对于/ 正类/ QoS/ ,/ 其值/ 越大越/ 好/ (/ 如/ 吞吐量/ 和/ 可信度/ )/ ;/ 而/ 对于/ 负类/ QoS/ ,/ 其值/ 越小越/ 好/ (/ 如/ 响应/ 时间/ 和/ 花费/ )/ ./ 定义/ 10/ (/ 服务/ 的/ 最优/ 组合/ QoS/ )/ ./ 给定/ 服务/ w/ ,/ 相对/ 于/ 功能/ 相同/ (/ 输入输出/ 相同/ )/ 的/ 组合/ 服务/ 集/ CW/ ,/ w/ 的/ 所有/ 组合/ QoS/ 中/ 的/ 最优/ 值/ 称为/ 服务/ w/ 的/ 在/ 组合/ 服务/ 集/ CW/ 中/ 的/ 最优/ 组合/ QoS/ ,/ 简称/ 服务/ w/ 的/ 最优/ 组合/ QoS/ ,/ 记为/ bestOverallQoS/ (/ w/ )/ 或/ B/ (/ w/ )/ ./ 定义/ 11/ (/ 组合/ 服务/ 的/ 最优/ QoS/ )/ ./ 给定/ 功能/ 相同/ 的/ 组合/ 服务/ 集/ CW/ ,/ 称/ CW/ 中/ 所有/ 组合/ 服务/ 的/ QoS/ 的/ 最优/ 值为/ 组合/ 服务/ 的/ 最优/ QoS/ ./ 结合/ 定义/ 8/ 和/ 定义/ 10/ 可知/ ,/ 组合/ 服务/ 的/ 最优/ QoS/ 等价/ 于/ 组合/ 服务/ 中/ end/ 节点/ 的/ 最优/ 组合/ QoS/ 即/ B/ (/ end/ )/ ./ 定义/ 12/ (/ QoS/ 最优/ 的/ 服务/ 自动/ 组合/ 问题/ )/ ./ 已知/ 服务/ 库/ W/ 和/ 用户/ 请求/ r/ (/ 视为/ 一个/ 特殊/ 服务/ ,/ 只/ 包含/ 输入输出/ 参数/ ,/ 但/ 没有/ QoS/ 属性/ )/ ,/ 求/ W/ 中/ 满足/ r/ 的/ 所有/ 组合/ 服务/ 中/ QoS/ 最优/ 的/ 组合/ 服务/ ./ 3.5/ 问题/ 举例/ 为了/ 方便/ 对/ 基本概念/ 的/ 理解/ ,/ 图/ 1/ 描述/ 了/ 一个/ 组合/ 问题/ 场景/ ./ 本体/ 库/ 中共/ 有/ 7/ 个/ 本体/ ,/ 分别/ 用/ 字母/ O/ 、/ A/ 、/ B/ 、/ C/ 、/ D/ 、/ J/ 和/ K/ 表示/ ,/ 其中/ A/ 、/ B/ 、/ C/ 、/ D/ 、/ K/ 直接/ 继承/ 自/ O/ ,/ J/ 直接/ 继承/ 自/ B/ ./ 服务/ 库/ 中共/ 有/ 5/ 个/ 服务/ w1/ 、/ w2/ 、/ w3/ 、/ w4/ 和/ w5/ ./ 以/ w1/ 为例/ ,/ 其/ 输入/ 参数/ 为/ A/ ,/ 输出/ 参数/ 为/ B/ ,/ 这里/ 考察/ 的/ QoS/ 为/ 平均/ 响应/ 时间/ ,/ 值为/ 100/ ./ 用户/ 请求/ r/ 的/ 输入/ 为/ A/ ,/ 输出/ 为/ D/ ./ QoS/ 最优/ 的/ 服务/ 自动/ 组合/ 问题/ 即/ 需要/ 找到/ 不仅/ 能/ 满足用户/ 请求/ 且/ QoS/ 最优/ 的/ 组合/ 服务/ ./ 针对/ 该/ 示例/ ,/ 虽然/ 服务/ 库中/ 没有/ 能/ 满足/ 该/ 请求/ 的/ 单个/ 服务/ ,/ 但是/ 有/ 两个/ 组合/ 服务/ 能/ 满足/ 该/ 请求/ ,/ 其/ DAG/ 图如图/ 2/ 所示/ ./ 图中/ 标明/ 了/ 每个/ 服务/ 的/ QoS/ 值/ ,/ start/ 和/ end/ 为/ 两个/ 虚拟/ 服务/ 节点/ ,/ 其/ QoS/ 值均/ 为/ 0/ ./ 对于/ 平均/ 响应/ 时间/ 来说/ ,/ F1/ 取/ MAX/ ,/ F2/ 取/ ∑/ ,/ 因而/ 组合/ 服务/ a/ 的/ QoS/ 的/ 计算/ 过程/ 为/ Qa/ (/ w1/ )/ =/ MAX/ (/ Qa/ (/ start/ )/ )/ +/ w1/ ./ QoSQa/ (/ w5/ )/ =/ MAX/ (/ Qa/ (/ start/ )/ )/ +/ w5/ ./ QoSQa/ (/ wa/ )/ =/ MAX/ (/ Qa/ (/ w1/ )/ ,/ Qa/ (/ w5/ )/ )/ +/ wa/ ./ QoSQa/ (/ end/ )/ =/ MAX/ (/ Qa/ (/ wa/ )/ )/ +/ end/ ./ QoS/ 同理/ 可以/ 计算/ 得到/ Qb/ (/ end/ )/ =/ 21/ ,/ 因为/ 平均/ 响应/ 时间/ 为/ 负类/ QoS/ 属性/ ,/ 所以/ 图/ 1/ 的/ 问题/ 场景/ 中/ QoS/ 最优/ 的/ 组合/ 服务/ 为/ b/ ,/ 其/ 最优/ 值/ B/ (/ end/ )/ =/ 21.4/ 组合/ 过程/ 与/ 算法/ 本文/ 所提/ 方法/ 的/ 总体/ 结构/ 及/ 流程/ 如图/ 3/ 所示/ ,/ 下面/ 就/ 每个/ 阶段/ 分别/ 展开/ 论述/ ./ Page64/ ./ 1/ 正向/ 分层/ 该/ 阶段/ 根据/ 用户/ 的/ 请求/ 将/ 全体/ 服务/ 进行/ 调用/ 层次/ 的/ 划分/ 后/ 得到/ 一个/ 以/ 层次/ 排序/ 的/ 有效/ 服务/ 列表/ ,/ 从而/ 过滤/ 对/ 组合/ 任务/ 无/ 贡献/ 的/ 服务/ ,/ 本文/ 在/ 算法/ 描述/ 中/ 所/ 使用/ 的/ 符号/ 说明/ 见表/ 2/ ./ 算法/ 符号/ =/ =/ 等于/ 关系/ 运算/ Map/ ./ putA/ (/ x/ ,/ y/ )/ 往/ 映射/ 表/ Map/ 内/ 关键字/ x/ 对应/ 的/ 项/ 中/ 添加/ Map/ ./ put/ (/ x/ ,/ y/ )/ 重置/ 映射/ 表/ Map/ 内/ 关键字/ x/ 对应/ 的/ 项为/ yMap/ ./ get/ (/ x/ )/ 取出/ 映射/ 表/ Map/ 内/ 关键字/ x/ 对应/ 的/ 项/ break/ 强制/ 跳出/ 循环体/ continue/ 进入/ 循环/ 的/ 下/ 一次/ 迭代/ [/ x/ ,/ y/ ,/ z/ ]/ =/ [/ a/ ,/ b/ ,/ c/ ]/ 集体/ 赋值/ ,/ x/ =/ a/ ,/ y/ =/ b/ ,/ z/ =/ c/ 局部变量/ (/ 包括/ 输入/ 参数/ )/ 该/ 算法/ 以/ 服务/ 集/ W/ 、/ 本体/ 库/ OT/ 和/ 用户/ 请求/ r/ 作为/ 输入/ ,/ 输出/ 有效/ 服务/ 列表/ activeSvs/ 和/ 参数/ 源表/ paramSrcMap/ ./ 其中/ ,/ 参数/ 源表是/ 一个/ 由/ 参数/ 映射/ 到/ 服务/ 集/ 的/ Hash/ 表/ ,/ 代表/ 每个/ 参数/ 的/ 来源/ (/ 即/ 所有/ 能/ 输出/ 该/ 参数/ 或/ 其子/ 类/ 的/ 服务/ )/ ./ 初始/ 时/ 构造/ 代表/ 用户/ 请求/ 中/ 的/ 输入/ 参数/ 的/ 虚拟/ 服务/ 节点/ start/ 和/ 代表/ 请求/ 中/ 的/ 输出/ 参数/ 的/ 虚拟/ 节点/ end/ ,/ 并/ 将/ 请求/ 中/ 的/ 输入/ 参数/ 放入/ 表示/ 当前/ 已经/ 搜索/ 得到/ 的/ 参数/ 集/ cParams/ 中/ ./ 最初/ 服务/ 集中/ 的/ 所有/ 服务/ 均/ 被/ 标识/ 为/ 未/ 考察/ ,/ 对于/ 每个/ 未/ 考察/ 的/ 服务/ ,/ 分层/ 算法/ 检测/ 它/ 的/ 所有/ 输入/ 参数/ 是否/ 被/ 当前/ 参数/ 集/ cParams/ 语义/ 包含/ ,/ 如果/ 被/ 包含/ 则/ 将/ 该/ 服务/ 加入/ 列表/ activeSvs/ 中/ 并/ 添加/ 输出/ 参数/ 的/ 源/ 记录/ ,/ 但/ 如果/ 不/ 被/ 包含/ 则/ 保留/ 它/ 的/ 未/ 考察/ 状态/ 以便/ 在/ 下/ 一轮/ 重新/ 对/ 其/ 进行/ 检测/ ./ 每轮/ 结束/ 时/ ,/ 总是/ 将/ 该轮/ 添加/ 的/ activeSvs/ 中/ 的/ 服务/ 的/ 输出/ 加入/ cParams/ 中/ ./ 如果/ 一轮/ 结束/ 时/ ,/ cParams/ 中/ 包含/ 用户/ 请求/ 的/ 所有/ 输出/ 参数/ ,/ 或者/ 没有/ 新/ 的/ 服务/ 被/ 添加/ 到/ activeSvs/ 中/ 或/ 已经/ 没有/ 未/ 考察/ 的/ 服务/ ,/ 则/ 算法/ 终止/ ./ 算法/ 1/ ./ 正向/ 分层/ 算法/ (/ forwardSearch/ )/ ./ 输入/ :/ W/ (/ 服务/ 集/ )/ ,/ OT/ (/ 本体/ 库/ )/ ,/ r/ (/ 用户/ 请求/ )/ 输出/ :/ activeSvs/ (/ 有效/ 服务/ 列表/ )/ ,/ paramSrcMap/ (/ 参数/ // // 根据/ 用户/ 请求/ r/ 构建/ 两个/ 虚拟/ 服务/ start/ 和/ end1/ ./ start/ ./ I/ =/ / ;/ start/ ./ O/ =/ r/ ./ I/ ;/ end/ ./ I/ =/ r/ ./ O/ ;/ end/ ./ O/ =/ / ;/ // // 初始化/ 当前/ 参数表/ cParams/ 和/ 参数/ 源表/ paramSrcMap2/ ./ cParams/ =/ start/ ./ O/ ;/ 3/ ./ foreverypincParams/ {/ 4/ ./ paramSrcMap/ ./ putA/ (/ p/ ,/ start/ )/ ;/ 5/ ./ }/ // // 并行/ 分层/ 6/ ./ activeSvs/ =/ / ;/ 7/ ./ unCheckedSvs/ =/ W/ ∪/ {/ end/ }/ ;/ 8/ ./ while/ (/ unCheckedSvs/ !/ =/ / )/ {/ 9/ ./ addedParams/ =/ / ;/ stillUnChecked/ =/ / ;/ 10/ ./ foreverysinunCheckedSvs/ {/ 11/ ./ if/ (/ cParams/ / s/ ./ I/ )/ {/ 12/ ./ activeSvs/ =/ activeSvs/ ∪/ {/ s/ }/ ;/ 13/ ./ foreveryoutins/ ./ O/ {/ 14/ ./ paramSrcMap/ ./ putA/ (/ out/ ,/ s/ )/ ;/ 15/ ./ }/ 16/ ./ }/ else/ {/ 17/ ./ stillUnchecked/ =/ stillUnChecked/ ∪/ {/ s/ }/ ;/ 18/ ./ }/ 19/ ./ if/ (/ unCheckedSvs/ ./ size/ (/ )/ =/ =/ stillUnChecked/ ./ size/ (/ )/ )/ 20/ ./ cParams/ =/ cParams/ ∪/ addedParams/ ;/ 21/ ./ if/ (/ cParams/ / r/ ./ O/ )/ break/ ;/ 22/ ./ }/ 23/ ./ unCheckedSvs/ =/ stillUnChecked/ ;/ 24/ ./ }/ 25/ ./ return/ [/ activeSvs/ ,/ paramSrcMap/ ]/ ;/ 4.2/ 服务/ 的/ 最优/ 组合/ QoS/ 计算/ 在/ 3.5/ 节中/ ,/ 我们/ 得到/ 组合/ 服务/ 的/ 最优/ QoS/ 的/ 方法/ 是/ 先/ 求得/ 所有/ 的/ 组合/ 服务/ ,/ 然后/ 计算/ 所有/ 组合/ Page7/ 服务/ 的/ QoS/ 并/ 根据/ QoS/ 最优/ 值/ 的/ 正负/ 选取/ 最优/ 值/ ./ 然而/ 在/ 海量/ 服务/ 库中/ ,/ 针对/ 同一/ 用户/ 请求/ 通常/ 存在/ 大量/ 的/ 组合/ 服务/ ,/ 此时/ 要/ 想/ 计算/ 所有/ 组合/ 服务/ 的/ QoS/ 就/ 显得/ 极为/ 不/ 现实/ ./ 事实上/ ,/ 组合/ 服务/ 的/ 最优/ QoS/ 等价/ 于/ 组合/ 服务/ 中/ end/ 节点/ 的/ 最优/ 组合/ QoS/ 即/ B/ (/ end/ )/ ./ 为/ 计算/ end/ 的/ 最优/ 组合/ QoS/ ,/ 我们/ 引入/ 表示/ 服务/ 的/ 最优/ 组合/ QoS/ 之间/ 依赖/ 关系/ 的/ 计算/ 定理/ ./ 定理/ 1/ (/ 服务/ 的/ 最优/ 组合/ QoS/ 计算/ 定理/ )/ ./ 已知/ 服务/ 库/ W/ 中/ 每个/ 参数/ c/ 对应/ 的/ 源/ 服务/ ,/ 记为/ SourceSv/ (/ c/ )/ ,/ 给定/ 一个/ 服务/ w/ ,/ 其/ 最优/ 组合/ QoS/ 值/ B/ (/ w/ )/ 一定/ 满足/ 递归/ 关系式/ B/ (/ w/ )/ =/ F2/ (/ F1i/ ∈/ w/ ./ I/ (/ Gsv/ ∈/ SourceSv/ (/ i/ )/ (/ B/ (/ sv/ )/ )/ )/ ,/ w/ ./ QoS/ )/ 其中/ F1/ ,/ F2/ ∈/ ∑/ ,/ ∏/ ,/ MIN/ ,/ 的/ 计算/ 法则/ ,/ 与/ QoS/ 的/ 具体/ 类别/ 相关/ ;/ G/ ∈/ {/ MIN/ ,/ MAX/ }/ ,/ 与/ QoS/ 最优/ 值/ 的/ 正负/ 性/ 相关/ ,/ 正性/ QoS/ 取/ MAX/ ,/ 负性/ QoS/ 取/ MIN/ (/ 该/ 定理/ 的/ 证明/ 参见/ 附录/ )/ ./ 从/ 定理/ 1/ 可以/ 看出/ ,/ 服务/ 的/ 最优/ 组合/ QoS/ 的/ 计算方法/ 与/ QoS/ 的/ 属性/ 类别/ 相关/ ,/ 表/ 3/ 给出/ 了/ 4/ 种/ 不同/ 的/ 计算/ 法则/ 和/ 典型/ QoS/ 类别/ 的/ 代表/ ./ F1F2G/ 典型/ QoS/ 类别/ 代表/ ∏/ ∏/ MAX/ 可信度/ (/ reputation/ )/ MIN/ ∑/ MAX/ 吞吐量/ (/ throughput/ )/ ∑/ ∑/ MINMAX/ ∑/ MIN/ 响应/ 时间/ (/ responsetime/ )/ 以/ 正向/ 分层/ 算法/ 得到/ 的/ 有效/ 服务/ 列表/ 为序/ ,/ 结合/ 定理/ 1/ ,/ 我们/ 可以/ 计算/ 得到/ 每个/ 有效/ 服务/ 的/ 最优/ 组合/ QoS/ 值/ ./ 然而/ 严格/ 按照/ 定理/ 1/ 的/ 计算/ 法则/ 有时/ 将/ 无法/ 计算/ 出/ 最优/ 组合/ QoS/ 值/ ,/ 例如/ 在/ 计算/ 某一/ 服务/ 的/ 最优/ 组合/ QoS/ 值时/ ,/ 它/ 的/ 某个/ 参数/ 源/ 对应/ 的/ 某个/ 服务/ 源/ 的/ 最优/ 组合/ QoS/ 值/ 可能/ 是/ 未知/ 的/ 或者/ 只是/ 个/ 临时/ 值/ ./ 这种/ 情况/ 下/ ,/ 我们/ 暂时/ 忽略/ 未知/ 的/ 最优/ 组合/ QoS/ 值/ 或者/ 采用/ 临时/ 最优/ 组合/ QoS/ 值/ 继续/ 进行/ 计算/ ,/ 最后/ 计算/ 得到/ 服务/ 的/ 一个/ 临时/ 最优/ 组合/ QoS/ 值/ (/ 称为/ 不/ 完全/ 最优/ 组合/ QoS/ 值/ )/ ,/ 并/ 把/ 当前/ 计算/ 的/ 服务/ 放入/ 不/ 完全/ 服务/ 队列/ ./ 在/ 完成/ 一轮/ 的/ 最优/ 组合/ QoS/ 的/ 计算/ 后/ ,/ 我们/ 再/ 回头/ 对/ 不/ 完全/ 服务/ 队列/ 中/ 的/ 每个/ 服务/ 进行/ 重新/ 的/ 计算/ ,/ 直到/ 不/ 完全/ 服务队/ 列为/ 空/ 或者/ 不/ 完全/ 服务/ 队列/ 中/ 服务/ 的/ 不/ 完全/ 最优/ QoS/ 值/ 都/ 不再/ 改变/ ,/ 具体/ 算法/ 如/ 算法/ 2/ 所示/ ./ 算法/ 2/ ./ 计算/ 最优/ 组合/ QoS/ (/ calBestOver/ -/ allQoS/ )/ ./ 输入/ :/ activeSvs/ ,/ paramSrcMap/ 输出/ :/ bestOverallQoSMap/ (/ 最优/ 组合/ QoS/ 映射/ 表/ )/ 1/ ./ bestOverallQoSMap/ ./ put/ (/ start/ ,/ 0/ )/ ;/ unCompleteSvs/ =/ / ;/ 2/ ./ foreverysinactiveSvs/ {/ 3/ ./ unCompleteSvs/ =/ unCompleteSvs/ ∪/ {/ s/ }/ ;/ 4/ ./ }/ 5/ ./ firstSvs/ =/ unCompleteSvs/ ;/ 6/ ./ while/ (/ firstSvs/ !/ =/ / )/ {/ 7/ ./ update/ =/ false/ ;/ secSvs/ =/ / ;/ 8/ ./ foreverysinfirstSvs/ {/ 9/ ./ [/ unCompleteSvs/ ,/ bestOverallQoSMap/ ,/ update/ ]/ =/ 10/ ./ if/ (/ s/ ∈/ unCompleteSvs/ )/ 11/ ./ secSvs/ =/ secSvs/ ∪/ {/ s/ }/ ;/ 12/ ./ }/ 13/ ./ if/ (/ firstSvs/ ./ size/ (/ )/ =/ =/ secSvs/ ./ size/ (/ )/ 14/ ./ firstSvs/ =/ secSvs/ ;/ 15/ ./ }/ 16/ ./ returnbestOverallQoSMap/ ;/ 算法/ 以/ 正向/ 搜索/ 得到/ 的/ 有效/ 服务/ 列表/ activeSvs/ 和/ 参数/ 源表/ paramSrcMap/ 作为/ 输入/ ,/ 将/ 所有/ 有效/ 服务/ 到/ 其/ 最优/ 组合/ QoS/ 的/ 映射/ 表/ 作为/ 输出/ ./ 初始化/ 时/ ,/ 将/ start/ 的/ 最优/ 组合/ QoS/ 值设/ 为/ 零/ ,/ 并/ 将/ 除/ start/ 服务/ 外/ 的/ 所有/ 有效/ 服务/ 都/ 放入/ 不/ 完全/ 服务/ 队列/ unCompleteSvs/ 中/ ./ 接着/ 不断/ 地/ 对/ 不/ 完全/ 服务/ 队列/ 进行/ 轮次/ 处理/ ,/ 每轮/ 处理过程/ 中/ 都/ 将/ 依次/ 遍历/ 不/ 完全/ 队列/ 中/ 的/ 每个/ 服务/ 并/ 重新/ 计算/ 其/ 最优/ 组合/ QoS/ 值/ ,/ 对于/ 计算/ 后/ 仍/ 属于/ 不/ 完全/ 最优/ 组合/ QoS/ 的/ 服务/ ,/ 需要/ 重新/ 将/ 其/ 放入/ 不/ 完全/ 服务/ 队列/ 使/ 其/ 可以/ 在/ 下/ 一轮/ 次/ 再次/ 被/ 计算/ ./ 如果/ 一轮/ 计算/ 结束/ 后/ ,/ 不/ 完全/ 队列/ 大小/ 不变/ 且/ 每个/ 服务/ 的/ 计算/ 值/ 都/ 不/ 被/ 更新/ ,/ 则/ 强制/ 退出/ 循环/ 操作/ ./ 对于/ 每个/ 服务/ 的/ 最优/ QoS/ 值/ 的/ 计算/ 是/ 由/ 算法/ calBest/ 〈/ F/ ,/ G/ 〉/ 实现/ 的/ ,/ calBest/ 算法/ 体现/ 了/ 定理/ 1/ 中/ 定义/ 的/ 计算/ 法则/ ,/ 具体/ 实现/ 依赖于/ F1/ 、/ F2/ 和/ G/ 的/ 取值/ (/ 实现/ 参见/ 后文/ )/ ,/ 且/ 一定/ 具备/ 以下/ 性质/ (/ 证明/ 略/ )/ ./ 性质/ 1/ ./ 当/ G/ 取/ MAX/ 时/ ,/ calBest/ 算法/ 对/ 服务/ 最优/ 组合/ QoS/ 值/ 的/ 更新/ 具有/ 递增/ 性/ ,/ 即/ 最优/ 组合/ QoS/ 值/ 在/ 计算/ 后/ 将/ 保持/ 不变/ 或/ 变大/ ,/ 从而/ 不断/ 趋近/ 真实/ 值/ ;/ 当/ G/ 取/ MIN/ 时/ ,/ calBest/ 算法/ 对/ 服务/ 组合/ QoS/ 值/ 的/ 更新/ 具有/ 递减性/ ./ Page8/ 算法/ 2/ 的/ 可/ 停机/ 性/ 和/ 正确性/ 证明/ 详见/ 附录/ ./ 算法/ 2/ ./ calBest/ 〈/ G/ =/ MIN/ ,/ F1/ =/ MAX/ ,/ F2/ =/ ∑/ 〉/ ./ 输入/ :/ S/ (/ 待/ 计算/ 的/ 服务/ )/ ,/ unCompleteSvs/ (/ 不/ 完全/ 服务/ 输出/ :/ unCompleteSvs/ ,/ bestOverallQoSMap/ ,/ updateFlag1/ ./ vMax/ =/ 0/ ;/ vMaxFlag/ =/ false/ ;/ 2/ ./ foreveryinParamins/ ./ I/ {/ 3/ ./ vMin/ =/ ;/ vMinFlag/ =/ false/ ;/ srcSvs/ =/ 4/ ./ foreverysrcinsrcSvs/ {/ 5/ ./ srcMin/ =/ bestOverallQoSMap/ ./ get/ (/ src/ )/ ;/ 6/ ./ if/ (/ srcMin/ =/ =/ null/ )/ 7/ ./ vMinFlag/ =/ true/ ;/ 8/ ./ else/ {/ 9/ ./ if/ (/ srcMin/ </ vMin/ )/ 10/ ./ vMin/ =/ srcMin/ ;/ 11/ ./ if/ (/ src/ ∈/ unCompleteSvs/ )/ 12/ ./ vMinFlag/ =/ true/ ;/ 13/ ./ }/ 14/ ./ }/ 15/ ./ if/ (/ vMin/ >/ vMax/ )/ {/ 16/ ./ vMax/ =/ vMin/ ;/ vMaxFlag/ =/ vMinFlag/ ;/ 17/ ./ }/ 18/ ./ }/ 19/ ./ newQoS/ =/ vMax/ +/ s/ ./ QoS/ ;/ 20/ ./ if/ (/ newQos/ </ oldQoS/ )/ {/ 21/ ./ updateFlag/ =/ true/ ;/ 22/ ./ }/ 23/ ./ if/ (/ vMaxFlag/ =/ =/ false/ )/ 24/ ./ unCompleteSvs/ =/ unCompleteSvs/ -/ {/ s/ }/ ;/ 25/ ./ return/ [/ unCompleteSvs/ ,/ bestOverallQoSMap/ ,/ 4.3/ 逆向/ 全解/ 构造/ 该/ 阶段/ 使用/ 之前/ 得到/ 的/ 最优/ 组合/ QoS/ 映射/ 表/ ,/ 从/ end/ 节点/ 开始/ 逆向/ 构造/ 组合/ QoS/ 最优/ 的/ 所有/ 组合/ 服务/ ./ 由于/ 篇幅/ 限制/ ,/ 这里/ 不/ 对/ 算法/ 展开/ 详细分析/ (/ 算法/ 实现/ 参见/ 下文/ 算法/ 3/ 和/ 算法/ 3/ )/ ,/ 只/ 简述/ 其/ 要点/ :/ (/ 1/ )/ 构造/ 过程/ 是从/ end/ 节点/ 向/ start/ 节点/ 反向/ 递归/ 进行/ 的/ ,/ 每次/ 扩展/ 一个/ 节点/ 的/ 前续/ 节点/ ;/ (/ 2/ )/ 在/ 前续/ 节点/ 的/ 选取/ 过程/ 中/ ,/ 以/ 最优/ 组合/ QoS/ 映射/ 表中/ 记录/ 的/ 最优/ 组合/ QoS/ 为/ 阈值/ ,/ 只/ 扩展/ 满足/ 阈值/ 限制/ 的/ 前续/ 节点/ ;/ (/ 3/ )/ 扩展/ 过程/ 中要/ 考虑/ 节点/ 被/ 重复/ 选取/ 的/ 可能/ ,/ 对于/ 重复/ 的/ 情况/ ,/ 要取/ 最低/ 阈值/ 作为/ 最新/ 的/ 阈值/ ./ 算法/ 3/ ./ 逆向/ 全解/ 构造/ 算法/ (/ backwardSearch/ )/ ./ 输入/ :/ bestOverallQoSMap/ (/ 最佳/ 组合/ QoS/ 映射/ 表/ )/ 输出/ :/ compositeSvs/ (/ 组合/ QoS/ 最佳/ 的/ 所有/ 组合/ 服务/ )/ 1/ ./ compositeSvs/ =/ / ;/ 2/ ./ open/ =/ {/ end/ }/ ;/ 3/ ./ closed/ =/ / ;/ 4/ ./ thresholds/ ./ put/ (/ end/ ,/ bestOverallQoSMap/ ./ get/ (/ end/ )/ )/ ;/ 5/ ./ cDAG/ =/ / ;/ 6/ ./ compositeSvs/ =/ oneByOne/ (/ open/ ,/ closed/ ,/ thresholds/ ,/ cDAG/ ,/ compositeSvs/ ,/ bestOverallQoSMap/ )/ ;/ 7/ ./ returncompositeSvs/ ;/ 算法/ 3/ ./ 递归/ 解/ 构造/ 算法/ (/ oneByOne/ )/ ./ 输入/ :/ open/ (/ 待/ 扩展/ 的/ 无源/ 节点/ )/ ,/ closed/ (/ 已/ 扩展/ 的/ 有/ 输出/ :/ compositeSvs/ (/ 本次/ 调用/ 结束/ 后/ 找到/ 的/ 解/ )/ 1/ ./ if/ (/ open/ =/ =/ / )/ {/ 2/ ./ compositeSvs/ =/ compositeSvs/ ∪/ cDAG/ ;/ 3/ ./ }/ else/ {/ 4/ ./ cSv/ =/ open/ ./ removeHead/ (/ )/ ;/ cT/ =/ thresholds/ ./ get/ (/ cSv/ )/ ;/ 5/ ./ sources/ =/ getSrcsUnderThreshold/ 〈/ G/ ,/ F/ 〉/ (/ cSv/ ,/ cT/ ,/ 6/ ./ foreverysourceinsources/ {/ 7/ ./ cycleFlag/ =/ false/ ;/ adjustFlag/ =/ false/ ;/ 8/ ./ foreverysvinsource/ {/ 9/ ./ if/ (/ sv/ / nextOpensv/ / nextClosed/ )/ {/ 10/ ./ nextDAG/ / addEdge/ (/ sv/ ,/ cSv/ )/ ;/ 11/ ./ if/ (/ sv/ !/ =/ start/ )/ {/ 12/ ./ nextOpen/ =/ nextOpen/ ∪/ {/ sv/ }/ ;/ 13/ ./ }/ 14/ ./ }/ 15/ ./ if/ (/ sv/ ∈/ nextOpen/ )/ {/ 16/ ./ nextDAG/ ./ addEdge/ (/ sv/ ,/ cSv/ )/ ;/ 17/ ./ if/ (/ newT/ </ oldT/ )/ 18/ ./ nextThresholds/ ./ put/ (/ sv/ ,/ newT/ )/ ;/ 19/ ./ }/ 20/ ./ if/ (/ sv/ ∈/ nextClosed/ )/ {/ 21/ ./ cycleFlag/ =/ hasPath/ (/ nextDAG/ ,/ cSv/ ,/ sv/ )/ ;/ 22/ ./ if/ (/ cycleFlag/ =/ =/ true/ )/ break/ ;/ 23/ ./ nextDAG/ ./ addEdge/ (/ sv/ ,/ cSv/ )/ ;/ Page924/ ./ if/ (/ adjustFlag/ =/ =/ false/ )/ break/ ;/ 25/ ./ }/ 26/ ./ }/ 27/ ./ if/ (/ cycleFlag/ =/ =/ true/ ‖/ adjustFlag/ =/ =/ false/ )/ 28/ ./ compositeSvs/ =/ oneByOne/ (/ nextOpen/ ,/ next/ -/ 29/ ./ }/ 30/ ./ }/ 31/ ./ returncompositeSvs/ ;/ 以上/ 算法/ 中/ 包含/ 的/ 算法/ getSrcsUnderThreshold/ 计算/ 当前/ 服务/ cSv/ 的/ 前续/ 节点/ 中/ 满足/ 阈值/ 限制/ 的/ 所有/ 源/ ,/ 具体/ 实现/ 如/ 算法/ 3/ 所示/ ;/ 算法/ adjust/ 用来/ 调整/ 有源/ 节点/ 的/ 已有/ 阈值/ ./ 算法/ 3/ ./ getSrcsUnderThreshold/ ./ 输入/ :/ cSv/ (/ 当前/ 服务/ )/ ,/ cT/ (/ cSv/ 的/ 组合/ QoS/ 阈值/ )/ ,/ 输出/ :/ srcsUnderThreshold/ (/ 满足/ 阈值/ 限制/ 的/ 所有/ 源/ )/ 1/ ./ srcsUnderThreshold/ =/ / ;/ 2/ ./ sources/ =/ / ;/ 3/ ./ // // 满足/ cSv/ 各个/ 输入/ 参数/ 的/ 服务/ 集合/ 之间/ 求/ 笛卡尔/ 4/ ./ foreveryinParamincSv/ ./ I/ {/ 5/ ./ svrs/ =/ getAllSemanticCompatibleSrcSvs/ (/ inParam/ )/ ;/ 6/ ./ }/ 7/ ./ foreverysourceinsources/ {/ 8/ ./ if/ (/ G/ =/ =/ MIN/ )/ {/ 9/ ./ if/ (/ F1/ (/ allservicesinsource/ )/ </ cT/ )/ 10/ ./ srcsUnderThreshold/ =/ srcsUnderThreshold/ ∪/ 11/ ./ }/ 12/ ./ else/ {/ 13/ ./ if/ (/ F1/ (/ allservicesinsource/ )/ >/ cT/ )/ 14/ ./ srcsUnderThreshold/ =/ srcsUnderThreshold/ ∪/ 15/ ./ }/ 16/ ./ }/ 17/ ./ returnsrcsUnderThreshold/ ;/ 在/ 该/ 部分/ 本文/ 将/ 集中/ 对/ 各/ 阶段/ 算法/ 的/ 时间/ 复杂/ 4.4/ 算法/ 时间/ 复杂度/ 分析/ 度/ 进行/ 分析/ 讨论/ ./ 阶段/ 1/ 的/ 正向/ 分层/ 算法/ 产生/ 了/ 一个/ 符合/ 用户/ 请求/ 的/ 规划图/ ,/ 进而/ 得到/ 了/ 一个/ 有效/ 服务/ 列表/ ./ 假设/ 整个/ 服务/ 库中/ 的/ 服务/ 个数/ 为/ N/ ,/ 由于/ 在/ 规划图/ 的/ 生成/ 过程/ 中/ ,/ 每个/ 服务/ 通过考察/ 后/ 只/ 需/ 被/ 处理/ 一次/ 而且/ 每次/ 处理/ 所/ 执行/ 的/ 计算/ 基本上/ 在/ 常数/ 时间/ 内/ 完成/ ,/ 因此/ 该/ 阶段/ 的/ 时间/ 复杂度/ 为/ O/ (/ N/ )/ ./ 有关/ 正向/ 分层/ 算法/ 的/ 时间/ 复杂度/ 更为/ 详细/ 的/ 讨论/ 可以/ 参见/ 文献/ [/ 15/ ]/ ./ 阶段/ 2/ 通过/ 轮次/ 计算/ 得到/ 组合/ 服务/ 的/ 最优/ QoS/ 值/ ,/ 假设/ 有效/ 服务/ 列表/ 中/ 的/ 服务/ 个数/ 为/ N/ (/ 这里/ 不是/ 服务/ 库中/ 服务/ 的/ 个数/ )/ ,/ 那么/ 每轮/ 计算/ 至多/ 有/ N/ 个/ 服务/ 需要/ 被/ 更新/ ./ 另外/ ,/ 在/ 最坏/ 的/ 情况/ 下/ ,/ 对/ 每个/ 服务/ 的/ 更新/ 操作/ 需要/ 依赖于/ 其它/ 所有/ 服务/ ,/ 因而/ 每个/ 服务/ 的/ 更新/ 操作/ 时间/ 复杂度/ 为/ O/ (/ N/ )/ ,/ 也/ 可得/ 每轮/ 计算/ 的/ 时间/ 复杂度/ 为/ O/ (/ N/ ×/ N/ )/ ./ 通常/ 每个/ 服务/ 需要/ 被/ 更新/ 若干/ 轮次/ 后/ 才能/ 达到/ 稳定/ 值/ ,/ 假设/ 所有/ 服务/ 中/ 最大/ 的/ 更新/ 轮次/ 为/ M/ ,/ 那/ 阶段/ 2/ 的/ 时间/ 复杂度/ 就/ 为/ O/ (/ N/ ×/ N/ ×/ M/ )/ ./ 最后/ ,/ 在/ 一般/ 的/ 逆向/ 解/ 构造/ 过程/ 中/ ,/ 假设/ 有效/ 服务/ 的/ 个数/ 为/ N/ ,/ 且/ 每个/ 服务/ 前续/ 服务/ 集/ 的/ 平均/ 个数/ 为/ c/ ,/ 则/ 在/ 最坏/ 情况/ 下/ ,/ 其/ 时间/ 复杂度/ 为/ (/ O/ (/ cN/ )/ )/ ./ 然而/ ,/ 在/ 阶段/ 3/ 中以/ 组合/ 服务/ 的/ 最优/ QoS/ 作为/ 阈值/ ,/ 去/ 除了/ 可能/ 产生/ 的/ 非/ QoS/ 最优/ 解/ ,/ 这/ 将/ 大大减少/ 搜索/ 空间/ ,/ 提高/ 搜索/ 效率/ ./ 5/ 算法/ 实验/ 5.1/ 实验/ 过程/ 本文/ 基于/ Java/ 语言/ 实现/ 了/ 所有/ 算法/ ,/ 除了/ 在/ XML/ 的/ 解析/ 模块/ 中/ 采用/ 了/ SAX/ 相关/ 的/ 软件包/ 外/ 没有/ 采用/ 任何/ 其它/ 第三方/ 软件包/ ,/ 整个/ 实验/ 系统/ 如图/ 4/ 所示/ ./ 测试/ 集/ 选用/ 的/ 是/ WS/ -/ Challenge2009/ 提供/ 的/ 竞赛/ 集/ ,/ 该/ 竞赛/ 集/ 包含/ 服务/ 规模/ 不同/ (/ 500/ ~/ 15000/ 个/ )/ 、/ 本体/ 规模/ 也/ 不同/ (/ 1000/ ~/ 25000/ 个/ )/ 的/ 5/ 个/ 测试/ 集/ ,/ 并且/ 每个/ 测试/ 集/ 对应/ 一个/ 层次/ 不同/ (/ 4/ ~/ 30/ 层/ )/ 的/ 用户/ 请求/ ./ 在/ 每个/ 测试/ 集中/ ,/ 都/ 存在/ 4/ 种/ 类型/ 的/ 文件/ :/ WSDL/ 文件/ 描述/ 了/ 服务/ 的/ 输入输出/ 参数/ ;/ OWL/ 文件/ 描述/ 了/ 参数/ 的/ 本体/ 及其/ 关系/ ;/ WSLA/ 文件/ 描述/ 了/ 服务/ 的/ QoS/ ;/ Challenge/ 文件/ 描述/ 了/ 用户/ 的/ 请求/ ./ 每次/ 实验/ 过程/ 中/ ,/ 我们/ 首先/ 选取/ 一个/ 测试/ 集/ 作为/ 实验/ Page10/ 系统/ 的/ 输入/ ,/ 然后/ 启动/ 组合/ 规划/ 器/ 进行/ 结果/ 搜索/ ,/ 组合/ 规划/ 器/ 将/ 会/ 对/ 输入/ 文件/ 进行/ 解析/ 生成/ 本体/ 树/ 、/ 服务/ 库/ 和/ 用户/ 请求/ 等/ 内部/ 对象/ 并/ 根据/ 这些/ 对象/ 进行/ 组合/ 搜索/ ,/ 最终/ 系统/ 停止/ 时/ 将/ 得到/ QoS/ 最优/ 的/ 所有/ 组合/ 服务/ ./ 此外/ ,/ 实验/ 的/ 硬件/ 环境/ 是/ ThinkPadX200/ (/ 2.26/ GHz/ ×/ 2/ ,/ 3GRAM/ )/ ./ 为/ 验证/ 所提/ 算法/ 的/ 正确性/ 和/ 有效性/ ,/ 本文/ 分别/ 对/ 各/ 阶段/ 的/ 正确性/ 指标/ 和/ 执行/ 时间/ 进行/ 了/ 记录/ ./ 对于/ 阶段/ 1/ ,/ 主要/ 考察/ 其/ 层次/ 划分/ 后/ 得到/ 的/ 有效/ 服务/ 的/ 个数/ ;/ 对于/ 阶段/ 2/ ,/ 主要/ 考察/ 组合/ 服务/ 最优/ QoS/ 的/ 计算/ 值/ 和/ 更新/ 计算/ 的/ 轮次/ ,/ 这里/ 我们/ 以/ 响应/ 时间/ 为/ QoS/ 的/ 考察/ 类别/ ;/ 对于/ 阶段/ 3/ ,/ 主要/ 考察/ 搜索/ 得到/ 的/ 最优/ 组合/ QoS/ 的/ 个数/ ./ 别外/ ,/ 每个/ 测试/ 集/ 重复/ 实验/ 10/ 次/ ,/ 取/ 平均值/ 作为/ 实验/ 结果/ 记录/ ./ 5.2/ 实验/ 结果/ 与/ 分析/ 5.2/ ./ 1/ 阶段/ 1/ 的/ 结果/ 与/ 分析阶段/ 1/ 的/ 主要/ 任务/ 是从/ 服务/ 库中/ 找出/ 所有/ 的/ 有效/ 服务/ ,/ 因而/ 实验/ 中/ 我们/ 主要/ 记录/ 了/ 每个/ 测试/ 集中/ 总/ 服务/ 的/ 个数/ 以及/ 有效/ 服务/ 的/ 个数/ ./ 同时/ ,/ 我们/ 也/ 记录/ 了/ 该/ 阶段/ 所/ 需要/ 的/ 运行/ 时间/ 以便/ 进行/ 时间/ 性能/ 的/ 分析/ ./ 阶段/ 1/ 的/ 实验/ 结果/ 如图/ 5/ 和/ 图/ 6/ 所示/ ./ 从/ 以上/ 实验/ 结果/ 可以/ 看出/ :/ (/ 1/ )/ 阶段/ 1/ 可以/ 过滤/ 掉/ 大部分/ 与/ 用户/ 请求/ 无关/ 的/ 服务/ ,/ 最高/ 可达/ 98.44/ %/ ./ 特别/ 地/ ,/ 对于/ 超大规模/ 的/ 服务/ 集/ (/ 如/ 测试/ 集/ 5/ )/ ,/ 进行/ 过滤/ 之后/ 有效/ 服务/ 的/ 个数/ 也/ 通常/ 在/ 几百个/ 左右/ ,/ 这/ 是/ 对/ 算法/ 性能/ 的/ 极大/ 提高/ ;/ (/ 2/ )/ 阶段/ 1/ 的/ 运行/ 时间/ 与/ 服务/ 库中/ 服务/ 的/ 个数/ 大体/ 呈现/ 线性关系/ ,/ 这/ 就/ 验证/ 了/ 之前/ 在/ 算法/ 性能/ 分析/ 时/ 得出/ 阶段/ 1/ 时间/ 复杂度/ 为/ O/ (/ N/ )/ 的/ 结论/ ./ 5.2/ ./ 2/ 阶段/ 2/ 的/ 结果/ 与/ 分析阶段/ 2/ 的/ 主要/ 任务/ 是/ 计算/ 组合/ 服务/ 的/ 最优/ QoS/ ,/ 因而/ 我们/ 记录/ 实验/ 中/ 得到/ 的/ 最优/ QoS/ 、/ 迭代/ 计算/ 的/ 轮次/ 和/ 本/ 阶段/ 的/ 执行/ 时间/ ./ 实验/ 中/ 得到/ 的/ 最优/ QoS/ 可以/ 与/ WS/ -/ Challenge/ 竞赛/ 中/ 其它/ 系统/ 得出/ 的/ 结论/ 作/ 对比/ ,/ 计算/ 的/ 轮次/ 和/ 执行/ 时间/ 可用/ 来/ 作/ 时间/ 复杂度/ 的/ 分析/ ./ 该/ 阶段/ 的/ 实验/ 结果/ 如表/ 4/ 和/ 图/ 7/ 所示/ ./ 测试/ 集/ 最优/ 组合/ QoS/ 迭代/ 次数/ 执行/ 时间/ // ms0102030405/ 从/ 实验/ 结果/ 可以/ 看出/ :/ (/ 1/ )/ 本/ 阶段/ 都/ 能/ 在/ 极短/ 的/ 时间/ 内/ 完成/ ,/ 原因/ 在于/ 经过/ 阶段/ 1/ 的/ 过滤/ 之后/ ,/ 有效/ 服务/ 的/ 个数/ 只有/ 几百个/ ,/ 这/ 就/ 大大减少/ 了/ 计算/ 复杂度/ ;/ (/ 2/ )/ 本/ 阶段/ 计算/ 得到/ 的/ 最优/ QoS/ 与/ WS/ -/ Challenge/ 竞赛/ 冠军/ 系统/ 所得/ 的/ 结果/ 完全相同/ (/ 参见/ 后文/ 实验/ 对比/ 部分/ )/ ;/ (/ 3/ )/ 该/ 阶段/ 的/ 运行/ 时间/ 与/ M/ ×/ N/ ×/ N/ 的/ 关系/ 基本/ 呈/ 线性/ (/ M/ 代表/ 计算/ 轮次/ ,/ N/ 代表/ 有效/ 服务/ 个数/ )/ ,/ 这/ 也/ 验证/ 了/ 我们/ 在/ 算法/ 性能/ 分析/ 时/ 得到/ 的/ 该/ 阶段/ 时间/ 复杂度/ 为/ O/ (/ M/ ×/ N/ ×/ N/ )/ 的/ 结论/ ./ 5.2/ ./ 3/ 阶段/ 3/ 的/ 结果/ 与/ 分析阶段/ 3/ 的/ 主要/ 任务/ 是/ 搜索/ QoS/ 最优/ 的/ 所有/ 组合/ 服务/ ./ 最终/ 所/ 得到/ 的/ 组合/ 服务/ 的/ 个数/ 与/ 阈值/ 的/ 设置/ 密切相关/ ,/ 因而/ 我们/ 分别/ 将/ 搜索/ 阈值/ 设/ 为/ 最优/ 组合/ QoS/ 值/ 和/ 该值/ 的/ 2/ 倍/ ,/ 并/ 记录/ 下/ 不同/ 阈值/ 下/ 的/ 执行/ 时间/ ,/ 从而/ 可以/ 分析/ 阈值/ 对/ 算法/ 性能/ 带来/ 的/ 影响/ ,/ 实验/ 结果/ 如表/ 5/ 所示/ ./ Page11/ 测试/ 集/ QoS/ 最优/ 的/ 组合/ 01202428403049320510013/ 从/ 实验/ 结果/ 可以/ 看出/ :/ (/ 1/ )/ 测试/ 集/ 2/ 、/ 4/ 和/ 5/ 含有/ 大量/ 的/ QoS/ 最优/ 但/ 结构/ 不同/ 的/ 组合/ 服务/ ;/ (/ 2/ )/ 解/ 的/ 个数/ 越/ 多/ ,/ 搜索/ 所/ 花费/ 的/ 执行/ 时间/ 越长/ ,/ 如/ 测试/ 集/ 2/ 、/ 4/ 和/ 5/ ,/ 这/ 是因为/ 解/ 的/ 个数/ 是/ 由/ 有效/ 服务/ 的/ 个数/ 及/ 有效/ 服务/ 的/ 平均/ 前续/ 服务/ 集/ 的/ 个数/ 决定/ 的/ ,/ 在/ 有效/ 服务/ 个数/ 基本相同/ 的/ 前提/ 下/ ,/ 解/ 的/ 个数/ 越/ 多/ 说明/ 平均/ 前续/ 服务/ 集/ 个数/ 越/ 多/ ,/ 那么/ 搜索/ 的/ 宽度/ 越大/ ,/ 这就表/ 6/ 实验/ 对比/ 竞赛/ 集/ QSynth/ 运行/ 时间/ // ms/ 实验/ 系统/ 运行/ 时间/ // msQSynth/ 最优/ QoS/ 值/ 实验/ 系统/ 最优/ QoS/ 值/ QSynth/ 解/ 的/ 个数/ 实验/ 系统/ 解/ 的/ 个数/ 01/ </ 30002/ </ 30003/ </ 30004/ </ 30005/ </ 300/ 从/ 对比/ 结果/ 中/ 可以/ 看出/ :/ (/ 1/ )/ 实验/ 系统/ 运行/ 时间/ (/ 这里/ 仅取/ 阶段/ 1/ 和/ 阶段/ 2/ 的/ 运行/ 时间/ 之/ 和/ ,/ 因为/ 这/ 两个/ 阶段/ 完成/ 的/ 任务/ 与/ 冠军/ 系统/ 完成/ 任务/ 相同/ ,/ 即/ 找出/ QoS/ 最优/ 的/ 一个/ 解/ )/ 在/ 测试/ 集/ 规模/ 较大/ 时/ 性能/ 稍/ 低于/ QSynth/ ,/ 这里/ 因为/ 实验/ 系统/ 的/ 目标/ 不仅仅/ 是/ 找出/ 一个/ QoS/ 最优/ 的/ 解/ ,/ 而是/ 找出/ QoS/ 最优/ 的/ 所有/ 解/ ,/ 这/ 就/ 需要/ 花费/ 更/ 多/ 的/ 时间/ 在/ 最优/ 源/ 的/ 生成/ 和/ 记录/ 上/ ,/ 从而/ 为/ 第/ 3/ 阶段/ 的/ 搜索/ 做/ 准备/ ;/ (/ 2/ )/ 实验/ 系统/ 所得/ 的/ 组合/ 服务/ 的/ 最优/ QoS/ 值/ 与/ 实际/ 的/ 最优/ 值/ 完全相同/ ,/ 这/ 就/ 说明/ 实验/ 系统/ 最优/ 值/ 计算方法/ 是/ 可取/ 的/ ,/ 也/ 验证/ 了/ 我们/ 对/ 该/ 计算方法/ 在/ 理论/ 上/ 的/ 证明/ 是/ 正确/ 的/ ,/ 而/ QSynth/ 虽然/ 也/ 能/ 找到/ 最优/ 值/ ,/ 但/ 所/ 提/ 方法/ 未能/ 在/ 理论/ 上/ 给出/ 严格/ 证明/ ;/ (/ 3/ )/ 实验/ 系统/ 最终/ 所/ 能/ 找到/ 的/ 解/ 的/ 个数/ 远大于/ QSynth/ 所能/ 找到/ 的/ 解/ 的/ 个数/ ,/ 这/ 是/ 由/ WS/ -/ Challenge/ 最/ 竞赛/ 的/ 主题/ (/ QoS/ 最优/ 的/ 服务/ 自动/ 组合/ )/ 决定/ 的/ ,/ 显然/ 求解/ 最优/ 的/ 所有/ 解要/ 比/ 求解/ 最优/ 的/ 一个/ 解要/ 困难/ 得/ 多/ ,/ 但/ 拥有/ 更/ 多/ 的/ 最优/ 解将/ 大大/ 提升/ 自动/ 组合/ 系统/ 在/ 云/ 计算环境/ 中/ 的/ 适应性/ 和/ 可用性/ ./ 6/ 总结/ 与/ 展望/ 本文/ 针对/ 信息/ 提供/ 类/ 语义/ 服务/ 的/ 自动/ 组合/ 问/ 使得/ 执行/ 时间/ 变/ 长/ ,/ 因此/ 针对/ 测试/ 集/ 2/ 和/ 5/ 执行/ 时间/ 较长/ 是/ 由/ 测试/ 集/ 的/ 内部/ 性质/ 决定/ 的/ ,/ 而/ 不是/ 算法/ 性能/ 降低/ 所/ 造成/ 的/ ;/ (/ 3/ )/ 针对/ 万级/ 测试/ 集/ (/ 如/ 测试/ 集/ 4/ 、/ 5/ )/ ,/ 该/ 阶段/ 算法/ 能/ 在/ 毫秒/ 级/ 执行/ 时间/ 内/ 找到/ 所有/ 解/ ,/ 因而/ 算法/ 性能/ 较/ 高/ ;/ (/ 4/ )/ 随着/ 阈值/ 的/ 扩大/ ,/ 执行/ 时间/ 大幅/ 上升/ ,/ 这/ 说明/ 阈值/ 限制/ 在/ 算法/ 性能/ 的/ 提升/ 方面/ 起到/ 了/ 关键作用/ ./ 5.3/ 系统/ 对比/ 目前/ 已有/ 的/ 大多/ 组合/ 系统/ 都/ 很/ 难/ 进行/ 系统/ 执行/ 环境/ 的/ 重建/ 以及/ 实验/ 结果/ 的/ 重新/ 采集/ ,/ 而且/ 不同/ 系统/ 往往/ 采用/ 不同/ 的/ 测试/ 集/ 进行/ 系统/ 实验/ ,/ 这/ 就/ 增加/ 了/ 进行/ 系统/ 对比/ 的/ 难度/ ./ 本文/ 所提/ 方法/ 是/ 在/ WS/ -/ Challenge/ 竞赛/ 集/ 的/ 基础/ 上/ 进行/ 的/ ,/ 因而/ 可以/ 与/ 竟赛/ 中/ 的/ 冠军/ 系统/ QSynth/ 进行/ 对比/ ,/ 对比/ 结果/ 如表/ 6/ 所示/ ./ 题/ ,/ 主要/ 有/ 4/ 个/ 目标/ :/ (/ 1/ )/ 海量/ ./ 即/ 能够/ 应对/ 万级/ 左右/ 的/ 服务/ 自动/ 组合/ ;/ (/ 2/ )/ 最优/ ./ 即/ 得到/ 的/ 组合/ 服务/ 的/ QoS/ 是/ 最优/ 的/ ;/ (/ 3/ )/ 更/ 多/ ./ 即/ 能够/ 得到/ 更/ 多/ 结构/ 不同/ 的/ 组合/ 服务/ ;/ (/ 4/ )/ 快速/ ./ 即/ 能够/ 在/ 毫秒/ 级/ 执行/ 时间/ 内/ 得到/ 满足条件/ 的/ 服务/ 结果/ ./ 其/ 主要/ 贡献/ 有/ :/ (/ 1/ )/ 提出/ 了/ 一种/ 新/ 的/ 最优/ 组合/ QoS/ 计算方法/ ,/ 对/ 该/ 方法/ 的/ 正确性/ 和/ 可/ 停机/ 性/ 进行/ 了/ 严格/ 的/ 理论/ 证明/ ,/ 并/ 通过/ 实验/ 证实/ 了/ 该/ 方法/ 的/ 可行性/ ;/ (/ 2/ )/ 提出/ 了/ 基于/ 最优/ 组合/ QoS/ 值/ 的/ 全解/ 构造方法/ ,/ 进一步提高/ 了/ 完全/ 率/ ./ 对于/ 完全/ 率/ 的/ 提高/ ,/ 除了/ 在/ 引言/ 中/ 给出/ 的/ 应对/ 云/ 计算环境/ 下/ 服务/ 执行/ 环境/ 复杂多变/ 的/ 挑战/ 外/ ,/ 其/ 意义/ 还有/ 以下/ 两点/ :/ ①/ 基于/ 不同/ 的/ 组合/ 结构/ ,/ 可以/ 进行/ 更/ 深层次/ 的/ 逻辑/ 分析/ ,/ 为/ 用户/ 推荐/ 可能/ 的/ 组合/ 服务/ ;/ ②/ 可以/ 作为/ 查找/ QoS/ 最优/ 的/ Top/ -/ K/ 个/ 组合/ 服务/ 的/ 问题/ 的/ 前提/ 基础/ ./ 海量/ 服务/ 的/ 自动/ 组合/ 是/ 近年来/ 的/ 一个/ 研究/ 热点/ ,/ 本文/ 提出/ 的/ 方法/ 是/ 解决/ 这一/ 问题/ 的/ 有效/ 尝试/ ./ 我们/ 相信/ 该/ 方法/ 在/ 具体/ 实现/ 上/ 还/ 存在/ 诸多/ 可/ 优化/ 和/ 提高/ 的/ 地方/ ,/ 例如/ 可以/ 进一步/ 考虑/ 复杂/ 约束条件/ 和/ 多/ QoS/ 属性/ 下/ 的/ 自动/ 组合/ ,/ 扩大/ 方法/ 的/ 应用/ 范围/ ./ 致谢/ 在/ 此/ ,/ 我们/ 向/ 对/ 本文/ 的/ 工作/ 给予/ 支持/ 和/ 建议/ 的/ 所有/ 同志/ 表示感谢/ !/ Page12/ 

