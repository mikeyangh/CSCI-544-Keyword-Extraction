Page1/ 面向/ 通用/ HPC/ 的/ 高性能/ DSP/ 设计/ 权衡/ 张凯/ 陈书明/ 王耀华/ 宁希/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 摘要/ GPU/ 由于/ 其/ 计算能力/ 高达数/ TFLOPS/ ,/ 被/ 高性能/ 计算/ 领域/ 用于/ 加速/ 并行/ 运算/ ./ 但/ GPU/ 较/ 低/ 的/ 峰值/ 性能/ 利用率/ 和/ 功耗/ 效率/ ,/ 已经/ 成为/ 了/ 系统/ 性能/ 进一步/ 提升/ 的/ 瓶颈/ ./ 为了/ 解决/ 这个/ 问题/ ,/ 作者/ 开始/ 研究/ 将/ 高性能/ DSP/ 用于/ 通用/ 高性能/ 计算/ 领域/ ./ 为了/ 高效/ 支撑/ 通用/ 高性能/ 计算/ ,/ 文中/ 提出/ 了/ 高性能/ DSP/ 的/ 结构/ 框架/ ,/ 并/ 通过/ 映射/ GotoBLAS/ 库到/ 该/ 结构/ 上/ ,/ 建立/ 了/ GEMM/ 在/ 该/ 结构/ 上/ 的/ 性能/ 模型/ ./ 作者/ 研究/ 了/ 影响/ GEMM/ 效率/ 的/ 主要/ 因素/ ,/ 包括/ 性能/ 、/ 存储/ 层次/ 、/ 核/ 的/ 大小/ 以及/ 核/ 的/ 数量/ ./ 文中/ 总结/ 了/ 一些/ 有/ 指导意义/ 的/ 结论/ 用于/ 构建/ 面向/ 通用/ 高性能/ 计算/ 的/ 高效/ DSP/ ./ 实验/ 结果表明/ ,/ 通过/ 尽可能少/ 的/ 硬件/ 代价/ ,/ 可以/ 在/ TFLOPSDSP/ 上/ 获得/ 接近/ 峰值/ 的/ 性能/ ./ 关键词/ 高性能/ 计算/ ;/ 矩阵/ 乘法/ ;/ 数字/ 信号处理器/ ;/ 模型/ ;/ 设计/ 权衡/ 1/ 引言/ 超级计算机/ 的/ 性能/ 已经/ 达到/ 了/ 每秒/ 万/ 万亿次/ 的/ 量级/ ①/ ,/ 使得/ 单片/ 万亿次/ 浮点/ 操作/ (/ TFLOPS/ )/ 级/ 的/ 高性能/ 微处理器/ 在/ HPC/ 领域/ 得到/ 了/ 广泛/ 的/ 应用/ ,/ 并/ 随着/ 高性能/ 计算/ (/ HPC/ )/ 应用/ 需求/ 的/ 不断/ 增长/ ,/ 且/ 对/ 其/ 需求/ 呈现/ 持续增长/ 的/ 趋势/ ./ 以/ 计算/ 为/ 核心/ 任/ Page2/ 务/ 的/ 图形/ 处理器/ (/ GPU/ )/ 性能/ 已经/ 超过/ 单片/ TFLOPS/ ,/ 但/ 大量/ GPU/ 堆叠/ 构成/ 的/ 系统/ 效率/ 不高/ ./ 在/ Top500/ 中/ 排名/ 前/ 10/ 的/ 机器/ ,/ 以/ GPU/ 为/ 加速/ 结点/ 构成/ 的/ HPC/ 系统/ ,/ 其/ 峰值/ 性能/ 利用率/ 不/ 超过/ 60/ %/ ,/ 系统/ 功耗/ 效率/ 低于/ 1GFLOPS/ // W/ ./ 随着/ 系统/ 性能需求/ 的/ 持续增长/ ,/ 功耗/ 问题/ 已经/ 逐渐/ 成为/ 了/ 一个/ 显著/ 的/ 拦路石/ ./ Esmaeilzadeh/ 等/ 人/ [/ 1/ ]/ 认为/ ,/ 未来/ 芯片/ 不得不/ 伴随/ 着/ “/ darksilicon/ ”/ 现象/ ,/ 即/ 在/ 22nm/ 工艺/ 下/ ,/ 芯片/ 的/ 21/ %/ 必须/ 被/ 关掉/ ,/ 在/ 8nm/ 工艺/ 库下/ 则/ 必须/ 关掉/ 50/ %/ ./ 因此/ ,/ 要/ 在/ 适度/ 功耗/ 约束/ 下/ 进一步提高/ HPC/ 系统/ 的/ 性能/ ,/ 关键/ 是/ 要/ 提高/ 节点/ 芯片/ 的/ 峰值/ 性能/ 利用率/ 和/ 功耗/ 效率/ ./ 数字/ 信号处理器/ (/ DSP/ )/ 一直/ 是/ 嵌入式/ 系统/ 的/ 核心/ 组成部分/ ./ 它/ 的/ 主要/ 优势/ 是/ 高功耗/ 效率/ 、/ 低/ 价格/ 和/ 易/ 编程/ 性/ ,/ 这些/ 特点/ 是/ HPC/ 领域/ 非常/ 青睐/ 的/ ,/ 易/ 编程/ 性是/ 指/ 相对/ 于/ GPU/ 而言/ 的/ ./ 基于/ GPU/ 加速/ 的/ CPU/ -/ GPU/ 异构/ 系统/ 中/ ,/ CPU/ 作为/ 主/ 设备/ ,/ 将/ 需要/ 加速/ 计算/ 的/ 数据/ 传递/ 给/ GPU/ 来/ 完成/ 加速/ 计算/ ,/ 属于/ 一种/ 主从/ 式/ 的/ 编程/ 模型/ ./ 而/ DSP/ 可以/ 直接/ 作为/ 主/ 设备/ 独立/ 完成/ 任务/ ,/ 在/ DSP/ 上/ 可以/ 轻松/ 实现/ 类/ CPU/ 式/ 的/ 编程/ ./ 高功耗/ 效率/ 的/ 优势/ 给/ DSP/ 迈向/ HPC/ 领域/ 奠定/ 了/ 良好/ 的/ 基础/ ,/ 但/ 将/ 其/ 用于/ HPC/ 的/ 一个/ 重要/ 问题/ 是/ :/ 能否/ 在/ 高功耗/ 效率/ 的/ 优势/ 下/ 提供/ 比较/ 高/ 的/ 计算/ 性能/ ,/ 并/ 在/ 执行/ 通用/ HPC/ 任务/ 时有/ 较/ 高/ 的/ 计算/ 效率/ ./ 因此/ ,/ 本文/ 开始/ 探索/ 能够/ 很/ 好/ 地/ 用于/ 通用/ HPC/ 领域/ 的/ 高性能/ DSP/ 的/ 设计/ 权衡/ ./ 本文/ 采用/ 多核/ 和/ 单/ 指令流/ 多数据流/ (/ SIMD/ )/ 技术/ 作为/ 高性能/ DSP/ 的/ 基本/ 框架/ ./ 这/ 两种/ 技术/ 已经/ 被/ 广泛应用/ 于/ 高性能/ 低功耗/ 的/ DSP/ 设计/ 中/ [/ 2/ -/ 4/ ]/ ./ 多/ 核技术/ 是/ 在/ 遇到/ “/ 频率/ 墙/ ”/ 和/ “/ 功耗/ 墙/ ”/ 问题/ 时/ 通过/ 开发/ 有效/ 的/ 线程/ 级/ 并行/ 来/ 提高/ 处理器/ 性能/ 的/ 重要/ 手段/ ./ SIMD/ 技术/ 通过/ 一条/ 指令/ 同时/ 处理/ 多个/ 数据/ 来/ 有效/ 开发/ 数据/ 级/ 并行性/ [/ 4/ ]/ ./ 由于/ 控制/ 逻辑/ 简单/ ,/ 它/ 能够/ 在/ 较/ 低/ 的/ 功耗/ 下/ 提供/ 较/ 高/ 的/ 性能/ ./ 因此/ ,/ 我们/ 采取/ SIMD/ 和/ 多/ 核技术/ 作为/ 构建/ 用于/ 支撑/ 高效/ HPC/ 的/ 高性能/ DSP/ 的/ 基本/ 框架/ ./ HPC/ 领域/ 包含/ 很多/ 应用/ ./ 稠密/ 线性代数/ 库是/ 通用/ HPC/ 领域/ 的/ 一个/ 重要/ 应用/ ,/ 很多/ 计算/ 问题/ 的/ 求解/ 最终/ 都/ 转化/ 为/ 稠密/ 线性代数/ 问题/ ,/ 如果/ 一个/ 结构/ 无法/ 有效/ 地/ 支撑/ 稠密/ 线性代数/ 库/ ,/ 就/ 不/ 可能/ 有效/ 支撑/ 其它/ 高性能/ 应用/ [/ 3/ ]/ ./ 通用/ 矩阵/ 乘法/ (/ GEMM/ )/ 是/ 稠密/ 线性代数/ 库/ 最/ 重要/ 的/ 库函数/ 之一/ ./ 稠密/ 线性代数/ 库/ 的/ 很多/ 问题/ 又/ 被/ 投射/ 到/ GEMM/ 上/ [/ 5/ ]/ ./ GEMM/ 是/ 决定/ 其它/ 代数/ 库函数/ 能否/ 很/ 好/ 地/ 映射/ 到/ 一个/ 处理器/ 的/ 代表/ [/ 6/ -/ 7/ ]/ ./ 因此/ ,/ 如何/ 在/ SIMD/ 和/ 多/ 核/ 框架/ 构成/ 的/ DSP/ 上/ 高效/ 支撑/ GEMM/ ,/ 是/ 决定/ DSP/ 能否/ 用于/ 通用/ HPC/ 的/ 关键/ ./ 要/ 解决/ 好/ 这个/ 问题/ ,/ 必须/ 对/ DSP/ 的/ 体系结构/ 进行/ 仔细/ 的/ 设计/ 权衡/ ./ 本文/ 构建/ 了/ 基于/ SIMD/ 和/ 多/ 核技术/ 框架/ 构成/ 的/ 高性能/ DSP/ 上/ GEMM/ 的/ 性能/ 模型/ ,/ 研究/ SIMD/ 宽度/ 、/ 功能/ 单元/ 的/ 流水线/ 深度/ 、/ 多核/ 数目/ 以及/ 存储容量/ 和/ 存储/ 带宽/ 等/ 因素/ 对/ GEMM/ 的/ 性能/ 和/ 效率/ 的/ 影响/ ,/ 得到/ 了/ 一些/ 有/ 指导意义/ 的/ 结论/ ,/ 为/ 构建/ 面向/ 通用/ HPC/ 高效/ 的/ 高性能/ DSP/ 提供/ 有效/ 的/ 设计/ 指导/ ./ 2/ 相关/ 工作/ 近年来/ ,/ GPU/ 成为/ 了/ 加速/ 密集型/ 运算/ 的/ 流行/ 选择/ ,/ 很多/ 超级计算机/ 通过/ GPU/ 来/ 加速/ GEMM/ ./ GPU/ 通过/ 大量/ SIMD/ 单元/ 可以/ 有效/ 加速/ GEMM/ [/ 8/ ]/ ./ Nath/ 等/ 人/ [/ 8/ ]/ 优化/ 的/ GEMM/ 算法/ 在/ TeslaC2050GPU/ 上/ 双/ 精度/ GEMM/ (/ DGEMM/ )/ 性能/ 达到/ 300GFLOPS/ ,/ 峰值/ 性能/ 利用率/ 为/ 58/ %/ ./ 当/ 大量/ GPU/ 作为/ 加速/ 通用/ HPC/ 的/ 节点/ 构成/ 系统/ 时/ ,/ 峰值/ 性能/ 利用率/ 会/ 进一步/ 降低/ ./ 通过/ 进一步/ 优化/ ,/ Tan/ 等/ 人/ [/ 9/ ]/ 将/ DGEMM/ 性能/ 提升/ 到/ 362GFLOPS/ ,/ 峰值/ 性能/ 利用率/ 提升/ 到/ 70/ %/ ./ Li/ 等/ 人/ [/ 10/ ]/ 采用/ 了/ 分离/ 的/ 写/ 回/ 操作/ 和/ 双/ 缓存/ 算法/ 等/ 技术/ ,/ 更好/ 地/ 隐藏/ 了/ 写/ 回/ 操作/ 延迟/ ,/ 通过/ 将/ 4/ 级/ 软件/ 流水/ 细化/ 为/ 5/ 级/ ,/ 在/ RadeonHD5970GPU/ 上/ 获得/ 了/ 758GFLOPS/ 的/ 性能/ ,/ 峰值/ 性能/ 利用率/ 高达/ 82/ %/ ,/ 他们/ 还/ 提出/ 了/ 面向/ GPU/ 的/ 体系结构/ 改进/ 建议/ ./ 面向/ GEMM/ 的/ 专用/ 硬件加速/ 结构/ 研究/ 主要/ 包括/ systolic/ 阵列/ 结构/ 和/ FPGA/ ./ 研究/ 人员/ 最/ 开始/ 研究/ 使用/ systolic/ 阵列/ 结构/ 加速/ 矩阵/ 乘法/ [/ 11/ -/ 13/ ]/ ./ 由于/ systolic/ 阵列/ 的/ 数据通路/ 专用性/ ,/ 在/ 灵活性/ 和/ 通用性/ 上/ 有/ 很大/ 损失/ ./ 随着/ 应用/ 对/ 灵活性/ 和/ 可扩展性/ 需求/ 的/ 不断/ 提高/ ,/ 研究者/ 们/ 开始/ 用/ FPGA/ 加速/ 矩阵/ 运算/ ./ Dou/ 等/ 人/ [/ 14/ ]/ 提出/ 了/ 一种/ 并行/ 分块/ 矩阵/ 乘/ 算法/ 和/ 相应/ 的/ 可/ 扩展/ 线性/ 阵列/ 结构/ ,/ 该/ 结构/ 通过/ 其/ 良好/ 的/ 可扩展性/ 能够/ 加速/ 任意/ 规模/ 的/ 矩阵/ 乘/ ./ Lopes/ 等/ 人/ [/ 15/ ]/ 提出/ 了/ 一种/ 适合/ 小到/ 中/ 规模/ 的/ 矩阵/ 乘法/ 的/ 并行/ 结构/ ,/ 性能/ 达到/ 35GFLOPS/ ,/ 高于/ 当时/ 的/ 高端/ CPU/ ./ 还有/ 一些/ 研究/ 主要/ 关注/ 面积/ 、/ 存储容量/ 、/ 计算/ 延迟/ 和/ 带宽/ 需求/ 与/ 能耗/ 和/ 性能/ 之间/ 的/ 相互影响/ 和/ 折中/ [/ 7/ ,/ 16/ -/ 17/ ]/ ./ Goto/ 等/ 人/ [/ 18/ ]/ 分析/ 了/ 在/ 通用/ CPU/ 上/ 影响/ GEMM/ 性能/ 的/ 主要/ 因素/ ,/ 为/ 通用/ CPU/ 的/ 设计/ 提供/ Page3/ 了/ 一定/ 的/ 设计/ 指导/ ./ 分块/ 计算/ 和/ 分块/ 存储/ 是/ Goto/ 等/ 人/ 的/ 核心思想/ ,/ 分块/ 后/ 的/ 计算/ 使用/ 高效/ 的/ Kernel/ 函数/ 来/ 提高/ 性能/ ./ 本文/ 分析/ 了/ 在/ SIMD/ 和/ 多/ 核/ 框架/ 的/ DSP/ 上/ 影响/ GEMM/ 性能/ 的/ 主要/ 因素/ ,/ 将/ Goto/ 等/ 人/ 的/ 思想/ 映射/ 到/ 该/ 结构/ 框架/ 中/ ,/ 并/ 在/ 该/ 框架/ 上/ 建立/ 了/ DGEMM/ 的/ 性能/ 模型/ ,/ 从而/ 为/ 面向/ 通用/ HPC/ 高效/ 的/ 高性能/ DSP/ 提供/ 有效/ 的/ 设计/ 指导/ ./ 3/ 高性能/ DSP/ 上/ 的/ GEMM/ 性能/ 模型/ 高效/ 的/ 支撑/ BLAS/ 库/ 通常/ 是/ 检验/ 一个/ 新/ 的/ HPC/ 结构/ 的/ 关键/ ./ GEMM/ 是/ level/ -/ 3BLAS/ 的/ 一个/ 关键/ 程序/ [/ 5/ ]/ ./ GotoBLAS/ 是/ 当今/ BLAS/ 最/ 流行/ 和/ 高效/ 的/ 实现/ 之一/ ,/ 被/ 广泛/ 地/ 应用/ 于/ HPC/ 领域/ ./ 下文/ 将/ 根据/ Goto/ 等/ 人/ [/ 18/ ]/ 的/ 基本/ 思想/ ,/ 分析/ GEMM/ 在/ 高性能/ DSP/ 上/ 的/ 映射/ 和/ 性能/ 模型/ ./ 3.1/ GEMM/ 到/ 高性能/ DSP/ 上/ 的/ 映射/ 3.1/ ./ 1/ 高性能/ DSP/ 的/ 基本/ 框架/ SIMD/ 技术/ 可以/ 使/ 多个/ 运算/ 单元/ 在/ 一条/ 指令/ 的/ 控制/ 下/ 对/ 多个/ 数据/ 并行操作/ ,/ 由于/ 其/ 硬件/ 代价/ 低/ ,/ 控制/ 简单/ ,/ 可以/ 在/ 较/ 低/ 的/ 功耗/ 下/ 获得/ 较/ 高/ 的/ 性能/ ,/ 被/ 广泛/ 地/ 应用/ 于/ 高性能/ 低功耗/ 处理器/ 的/ 设计/ ,/ 如/ AnySP/ [/ 4/ ]/ 、/ SODA/ [/ 19/ ]/ 、/ Cell/ [/ 20/ ]/ 、/ VT/ [/ 21/ ]/ 等/ ,/ 它们/ 都/ 由/ 一个/ 简单/ 的/ 标量/ 核/ 用于/ 控制/ 和/ 通信/ 等/ 任务/ ,/ 向量/ SIMD/ 单元/ 用于/ 加速/ 并行计算/ ./ 本文/ 提出/ 如图/ 1/ 所示/ 的/ 结构/ ,/ 采用/ SIMD/ 和/ 多/ 核技术/ 来/ 构建/ TFLOPS/ 级/ DSP/ ./ 每个/ 单核/ 由/ 一个/ SPE/ 和/ 多个/ VPE/ 组成/ ,/ SPE/ 用于/ 指令流/ 的/ 控制/ 、/ 对/ 向量/ 单元/ 的/ 配置/ 以及/ 通信/ 任务/ ,/ 多个/ VPE/ 组成/ 的/ 向量/ SIMD/ 单元/ 用于/ 加速/ 并行/ 运算/ ,/ AdderTree/ 和/ ShuffleNetwork/ 分别/ 用于/ VPE/ 间/ 的/ 数据/ 规约/ 加/ 和/ 重排/ ./ VPE/ 为/ 多功能/ 单元/ 组成/ 的/ VLIW/ 结构/ ./ 我们/ 将/ 多/ 核/ DSP/ 的/ 存储/ 层次/ 抽象/ 为/ 3/ 层/ ,/ 每个/ 核/ 拥有/ 自己/ 的/ Local/ -/ Memory/ (/ LM/ )/ 作为/ L1/ ,/ 多个/ 核/ 共享/ 一个/ Shared/ -/ Memory/ (/ SM/ )/ 作为/ L2/ ./ 片外/ 主存/ (/ MM/ )/ 作为/ L3/ ./ LM/ 为/ CacheRAM/ 结构/ ./ 考虑/ 到/ 大容量/ Cache/ 的/ 设计/ 代价/ 非常/ 高/ ,/ 我们/ 将/ SM/ 设计/ 为/ 便签/ 存储器/ ./ 可以/ 通过/ 预取/ 技术/ 实现/ 数据/ 从/ SM/ 到/ LM/ 中/ 的/ 自动/ 搬移/ ./ DMA/ 用于/ 控制/ 片外/ 数据/ 到/ SM/ 中/ 的/ 搬移/ ./ 程序员/ 可以/ 通过/ SPE/ 配置/ DMA/ 来/ 自动/ 完成/ 数据/ 搬移/ 操作/ ,/ 以/ 隐藏/ 通信/ 开销/ ./ 3.1/ ./ 2GEMM/ 到/ TFLOPSDSP/ 上/ 的/ 算法/ 映射/ GotoBLAS/ 库/ 考虑/ 了/ 不同/ 存储/ 层次/ 的/ 大小/ 和/ 效率/ 对/ GEMM/ 性能/ 的/ 影响/ ./ GEMM/ 通常/ 采取/ 分块/ 计算/ 的/ 方法/ ,/ 分块/ 方法/ 有/ 3/ 种/ ./ 根据/ Goto/ 等/ 人/ 的/ 思想/ ,/ 考虑/ 运算/ 犆/ =/ 犃/ 犅/ +/ 犆/ ,/ 最/ 高效/ 的/ 分块/ 方法/ 是/ 将/ 犃/ 和/ 犅/ 分别/ 按列/ 和/ 按行/ 划分/ 成/ 多个/ Panel/ (/ 其中/ 一个/ 维度/ 比较/ 小/ )/ ,/ 分块/ 之后/ 的/ 计算/ 过程/ 为/ 在/ 实现/ 犃/ p/ 犅/ p/ 时/ ,/ 犃/ p/ 通常/ 被/ 划分/ 为/ 多个/ block/ (/ 犃/ 0/ ,/ p/ ,/ 犃/ 1/ ,/ p/ ,/ …/ ,/ 犃/ M/ -/ 1/ ,/ p/ )/ ,/ block/ 是/ 指/ 两个/ 维度/ 都/ 比较/ 小/ ,/ 每个/ block/ 分别/ 和/ 犅/ p/ 相乘/ ,/ 每个/ 犃/ i/ ,/ p/ 的/ 行/ 数目/ 为/ m/ ,/ 列/ 数目/ 为/ k/ ./ 此时/ ,/ 在/ 实现/ 犃/ i/ ,/ p/ 犅/ p/ 时/ ,/ 犅/ p/ 被/ 划分/ 为/ 多个/ Panel/ (/ 犅/ p/ ,/ 0/ ,/ 犅/ p/ ,/ 1/ ,/ …/ ,/ 犅/ p/ ,/ N/ -/ 1/ )/ ,/ 以/ 保证/ 犃/ i/ ,/ p/ 和/ 犅/ p/ ,/ j/ 能/ 放在/ 最近/ 一级/ 的/ RAM/ 中/ ./ 犆/ i/ ,/ j/ +/ =/ 犃/ i/ ,/ p/ 犅/ p/ ,/ j/ 就/ 作为/ 实现/ GEMM/ 的/ 最/ 内层/ 循环/ ,/ 这个/ 过程/ 被/ 称为/ GEBP/ ,/ 直接/ 决定/ GEMM/ 的/ 性能/ ./ 根据/ 以上/ 分析/ ,/ 我们/ 在/ 多/ 核/ DSP/ 上/ 对/ GEMM/ 进行/ 算法/ 映射/ ./ 如图/ 2/ 所示/ ,/ 每个/ 核所/ 需/ 的/ 犃/ i/ ,/ p/ 和/ 犅/ p/ ,/ j/ 存放/ 在/ LM/ 中/ ,/ 然后/ 搬移到/ 本地/ 寄存/ Page4/ 器中/ 完成/ 犆/ i/ ,/ j/ +/ =/ 犃/ i/ ,/ p/ 犅/ p/ ,/ j/ ./ SM/ 中/ 存放/ 多个/ 核/ 需要/ 的/ 犃/ i/ ,/ p/ 和/ 犅/ p/ ,/ j/ 的/ 副本/ ,/ 每/ 一块/ 犅/ p/ ,/ j/ 被/ 所有/ 核/ 共享/ 使用/ 并且/ 只/ 被/ 每个/ 核/ 使用/ 一次/ ./ 犃/ 和/ 犅/ 存放/ 在/ 片外/ 主存/ 中/ ./ 访问/ 主存/ 的/ 数据/ 带宽/ 为/ BW3/ ,/ 访问/ SM/ 的/ 数据/ 带宽/ 为/ BW2/ ./ LM/ 与/ 本地/ 寄存器/ 之间/ 的/ 数据/ 带宽/ BW1/ 假设/ 为/ 足够/ 大/ ./ 3.2/ GEBP/ 的/ 实现/ 在/ 每个/ 核上/ 高效/ 实现/ 犆/ i/ ,/ j/ =/ 犃/ i/ ,/ p/ 犅/ p/ ,/ j/ +/ 犆/ i/ ,/ j/ ,/ 关键/ 是/ 充分利用/ SIMD/ 单元/ 的/ 并行计算/ 能力/ ./ 下面/ 考虑/ 运算/ 犆/ =/ 犃/ 犅/ ,/ 以/ SIMD/ 方式/ 实现/ 犆/ =/ 犃/ 犅/ 主要/ 包括/ 如图/ 3/ 所示/ 的/ 两种/ 算法/ ./ 在/ 一个/ 包含/ 4/ 个/ VPE/ 的/ SIMD/ 处理器/ 上/ ,/ 以/ 犃/ 和/ 犅/ 均/ 为/ 4/ ×/ 4/ 为例/ ,/ 算法/ 1/ 如图/ 3/ (/ a/ )/ 所示/ ,/ 犃/ 的/ 一行/ 数据/ 的/ 4/ 个/ 元素/ 和/ 犅/ 的/ 一列/ 数据/ 的/ 4/ 个/ 元素/ 分别/ 在/ 4/ 个/ VPE/ 上/ 相乘/ ,/ 4/ 个/ VPE/ 产生/ 的/ 乘法/ 结果/ 通过/ 向量/ 单元/ 间/ 的/ 加/ 法规/ 约树/ 进行/ 相加/ ,/ 得到/ 犆/ 矩阵/ 的/ 一个/ 元素/ (/ ci/ ,/ j/ )/ ./ 算法/ 2/ 如图/ 3/ (/ b/ )/ 所示/ ,/ 犃/ 的/ 第/ i/ 行/ 数据/ 的/ 第/ 1/ 个/ 元素/ 被/ 广播/ 到/ 4/ 个/ VPE/ 中/ ,/ 该/ 元素/ 与/ 犅/ 的/ 第/ 1/ 行/ 数据/ 分别/ 在/ 4/ 个/ VPE/ 上/ 相乘/ ,/ 每个/ VPE/ 上/ 的/ 乘法/ 结果/ 保存/ 在/ MAC/ 部件/ 的/ 累加器/ 中/ ./ 然后/ 犃/ 的/ 第/ i/ 行/ 数据/ 的/ 下/ 一个/ 元素/ 再/ 被/ 广播/ 到/ 4/ 个/ VPE/ 中/ ,/ 分别/ 与/ 犅/ 的/ 下/ 一行/ 数据/ 在/ 4/ 个/ VPE/ 上/ 相乘/ ,/ 每个/ VPE/ 的/ 乘法/ 结果/ 与/ MAC/ 部件/ 累加器/ 中/ 的/ 数据/ 进行/ 累加/ 操作/ ,/ 再/ 将/ 累加/ 的/ 结果/ 写回/ 累加器/ ./ 如此/ 递推/ 进行/ ,/ 直至/ 犃/ 的/ 第/ i/ 行/ 数据/ 全部/ 用/ 完/ ,/ 4/ 个/ VPE/ 的/ MAC/ 部件/ 的/ 累加器/ 中/ 存放/ 的/ 结果/ 即为/ ci/ ,/ 1/ 、/ ci/ ,/ 2/ 、/ ci/ ,/ 3/ 、/ ci/ ,/ 4/ ./ 在/ DSP/ 上/ 实现/ 以上/ 两种/ 算法/ 时/ 各有/ 优缺点/ ./ 算法/ 1/ 的/ 优点/ 是/ 算法/ 的/ 执行/ 过程/ 与/ 运算/ 的/ 数学/ 定义/ 一致/ ,/ 编程/ 直观/ 、/ 方便/ ./ 缺点/ 是/ 对/ 数据/ 的/ 访存/ 效率/ 不高/ ,/ 主要/ 是/ 由于/ 算法/ 1/ 要/ 对/ 犅/ 矩阵/ 的/ 数据/ 进行/ 列/ 访问/ ./ 如果/ 在/ 访问/ DDR/ 时/ 实现/ 对/ 数据/ 的/ 列/ 访问/ ,/ 访问/ DDR/ 的/ 效率/ 不高/ ./ 如果/ 在/ 访问/ 片内/ RAM/ 时/ 实现/ 列/ 访问/ ,/ 由于/ 片上/ RAM/ 无法/ 提供/ 过多/ 的/ 访问/ 端口/ ,/ 则/ 造成/ 严重/ 的/ RAM/ 体/ 冲突/ ,/ 导致/ 访问/ RAM/ 的/ 效率/ 不高/ ./ 软件/ 流水/ 技术/ 通过/ 充分利用/ 功能/ 单元/ 来/ 开发/ 循环/ 遍/ 之间/ 的/ 并行性/ ,/ 是/ 提高/ DSP/ 的/ 程序执行/ 效率/ 的/ 一个/ 常用/ 方法/ ./ 软件/ 流水/ 需要/ 增加/ 额外/ 的/ 指令/ 来/ 进行/ 循环/ 填充/ ,/ 这会/ 增加/ 外层/ 循环/ 的/ 开销/ ./ 对/ 算法/ 1/ 进行/ 软件/ 流水/ 后/ 增加/ 的/ 外层/ 循环/ 开销/ 和/ 浮点/ 乘法/ 以及/ 浮点/ 规约/ 加法/ 的/ 延迟/ 时钟/ 周期/ 数/ 有关/ ./ 而/ 浮点/ 规约/ 加法/ 的/ 延迟/ 时钟/ 周期/ 数/ 一般/ 比较/ 大/ ,/ 这/ 就/ 导致/ 了/ 内层/ 循环/ 软件/ 流水/ 后/ 增加/ 的/ 外层/ 循环/ 开销/ 大/ ,/ 在/ 寄存器/ 资源/ 有限/ 时/ ,/ 内层/ 循环/ 的/ 软件/ 流水/ 效率/ 也/ 不/ 高/ ./ 算法/ 2/ 的/ 缺点/ 是/ 编程/ 不/ 直观/ ,/ 但是/ 对/ 矩阵/ 犃/ 和/ 矩阵/ 犅/ 的/ 数据/ 访问/ 均/ 为行/ 访问/ ,/ 因此/ 访存/ 效率高/ ./ 算法/ 2/ 的/ 软件/ 流水/ 效率/ 和/ 浮点/ 乘法/ 以及/ 浮点/ 加法/ 部件/ 的/ 延迟/ 时钟/ 周期/ 数/ 有关/ ./ 浮点/ 加法/ 的/ 延迟/ 时钟/ 周期/ 数/ 小于/ 浮点/ 规约/ 加法/ ,/ 算法/ 2/ 的/ 内层/ 循环/ 软件/ 流水/ 后/ 带给/ 外层/ 循环/ 的/ 额外/ 开销/ 小/ ,/ 需要/ 的/ 寄存器/ 资源/ 少/ ,/ 容易/ 达到/ 高效/ 的/ 软件/ 流水/ ./ 下面/ 的/ 讨论/ 中/ ,/ 我们/ 将/ 采用/ 算法/ 2.3/ ./ 3GEMM/ 的/ 性能/ 模型/ 如图/ 2/ 所示/ 的/ GEMM/ 算法/ 映射/ 中/ ,/ 一共/ 有/ P/ 个/ 核/ ,/ 每个/ 核/ 完成/ 一个/ 犆/ i/ =/ 犃/ i/ ,/ p/ 犅/ p/ +/ 犆/ i/ 的/ 计算/ 过程/ ./ 犅/ p/ 被/ 划分/ 成/ 很多/ 个/ Panel/ 犅/ p/ ,/ j/ ,/ 每次/ GEBP/ 的/ 过程/ 中/ 每个/ 核/ 的/ LM/ 中/ 存放/ 犃/ i/ ,/ p/ 和/ 犅/ p/ ,/ j/ ,/ 根据/ 图/ 3/ 所示/ 的/ 算法/ ,/ 犅/ p/ ,/ j/ 的/ 列数/ 应为/ SIMD/ 宽度/ (/ SIMD/ 单元/ 的/ VPE/ 个数/ )/ 的/ 整数倍/ ./ 为了/ 占用/ 尽可能少/ 的/ 存储空间/ ,/ 犅/ p/ ,/ j/ 的/ 大小/ 取为/ k/ ×/ S/ ./ 每/ 一个/ 犅/ p/ ,/ j/ 分别/ 与/ 犃/ i/ ,/ p/ 进行/ 一个/ GEBP/ 的/ 计算/ ,/ 犃/ i/ ,/ p/ 的/ 大小/ 取为/ m/ ×/ k/ ./ 我们/ 假设/ :/ (/ 1/ )/ BW1/ 足够/ 大/ ,/ 不会/ 成为/ 计算/ 的/ 瓶颈/ ;/ (/ 2/ )/ GEBP/ 的/ 每次/ 循环/ 的/ 执行/ 不会/ 发生/ VLIW/ 的/ 功能/ 单元/ 冲突/ ;/ (/ 3/ )/ 不/ 考虑/ 指令/ cache/ 失效/ 引起/ 的/ 性能/ 损失/ ./ 对于/ 犃/ 、/ 犅/ 、/ 犆/ 的/ 所有/ 维度/ 均/ 为/ N/ 的/ GEMM/ 计算/ 犆/ +/ =/ 犃/ 犅/ ,/ 考虑/ 每个/ VPE/ 每/ 拍/ 最/ 多/ 发射/ 一条/ 双/ 精度/ 浮点/ 乘/ 累加/ (/ FMAC/ )/ 指令/ ,/ 则/ 峰值/ 计算/ 时间/ tp/ 为/ Page5/ 每/ 一次/ GEBP/ 处理/ 一个/ 犃/ i/ ,/ p/ 犅/ p/ ,/ j/ +/ 犆/ i/ ,/ j/ ./ 作为/ 内层/ 循环/ 的/ GEBP/ 被/ 执行/ 的/ 总/ 次数/ ci/ 为/ 为了/ 提高/ 计算/ 效率/ ,/ 应/ 将/ 当前/ 犆/ i/ ,/ j/ 的/ 计算/ 时间/ 与/ 下次/ 计算所/ 需/ 数据/ 块/ 的/ 传输/ 时间/ 尽可能/ 重叠/ ,/ 以/ 隐藏/ 通信/ 开销/ ./ 由于/ 犃/ i/ ,/ p/ 具有/ 重用/ 性/ ,/ LM/ 中/ 至少/ 要/ 存放/ 犃/ i/ ,/ p/ 的/ mk/ 个/ 元素/ 和/ 犅/ p/ ,/ j/ 以及/ 犅/ p/ ,/ j/ +/ 1/ 的/ 2kS/ 个/ 元素/ ,/ 即/ 要/ 存放/ (/ mk/ +/ 2kS/ )/ 个/ 元素/ ./ 这种/ 情况/ 下/ 隐藏/ 了/ 犅/ 的/ 传输/ 时间/ ,/ 但/ 不能/ 隐藏/ 犃/ 的/ 传输/ 时间/ ./ 犃/ i/ ,/ p/ 保存/ 在/ LM/ 中/ 直至/ 与/ 犅/ p/ 的/ 所有/ 子/ 块/ 犅/ p/ ,/ j/ 都/ 进行/ 了/ 运算/ ./ 犆/ 的/ 每/ 一个/ 元素/ 在/ 计算/ 过程/ 中/ 存放/ 在/ 累加/ 寄存器/ 中/ ,/ 需要/ 写/ 回时/ ,/ 可以/ 复用/ 犃/ 的/ 存储空间/ ./ 在/ 没有/ 功能/ 单元/ 冲突/ 和/ 寄存器/ 资源/ 充足/ 的/ 情况/ 下/ ,/ GEBP/ 采取/ 软件/ 流水/ 后/ ,/ 理想/ 情况/ 下/ 可以/ 每/ 拍/ 流出/ 1/ 个/ 计算结果/ ./ 但/ 浮点/ 乘/ 累加/ 运算/ 一般/ 为/ 多/ 周期/ 指令/ ,/ 而且/ 指令/ 的/ 目的/ 操作数/ 同时/ 也/ 是/ 源/ 操作数/ ,/ 因此/ 无法/ 实现/ 每/ 拍/ 流出/ 1/ 个/ 乘/ 累加/ 计算结果/ ./ 但是/ 通过/ 循环展开/ 技术/ 优化/ 后/ ,/ 可以/ 实现/ (/ dF/ +/ 1/ )/ 拍/ 流出/ (/ dF/ +/ 1/ )/ 个/ 乘/ 累加/ 结果/ ,/ dF/ 为/ FMAC/ 单元/ 的/ 延迟/ 时钟/ 槽/ ./ 因此/ ,/ 每/ 一次/ GEBP/ 的/ 计算/ 时间/ 为/ mkS/ // S/ ./ 在/ 这个/ 过程/ 中/ 需要/ 读写/ 犆/ i/ ,/ j/ 和/ 搬移/ 犅/ p/ ,/ j/ +/ 1/ 的/ 所有/ 元素/ ,/ 共/ (/ 2mS/ +/ kS/ )/ 个/ 元素/ ./ 因此/ ,/ 内层/ 循环/ GEBP/ 的/ 执行/ 总/ 时间/ tie/ 为/ GEBP/ 循环展开/ 和/ 软件/ 流水/ 后会/ 给/ 外层/ 循环/ 增加/ 时间/ 开销/ ./ GEBP/ 的/ 核心/ 计算/ 过程/ 为/ 每/ 一/ 拍/ 从/ LM/ 中/ Load/ 犃/ 和/ 犅/ 的/ 数据/ ,/ 然后/ 再/ 进行/ 乘/ 累加/ 操作/ ./ 因此/ ,/ 每/ 一次/ GEBP/ 过程/ 给/ 外层/ 循环/ 增加/ 的/ 开销/ 仅/ 由/ Load/ // Store/ 指令/ 和/ FMAC/ 指令/ 的/ 延迟/ 时钟/ 槽/ 决定/ ,/ 且/ 增加/ 的/ 时钟/ 周期/ 为/ dLS/ (/ dF/ -/ 1/ )/ ,/ dLS/ 为/ Load/ // Store/ 单元/ 的/ 延迟/ 时钟/ 槽/ ./ 因此/ ,/ 给/ 外层/ 循环/ 增加/ 的/ 总/ 时间/ 开销/ tee/ 为/ 第/ 1/ 次/ GEBP/ 所需/ 数据/ 的/ 传输/ 时间/ tft/ 是/ 无法/ 隐藏/ 的/ ./ 在/ tft/ 的/ 时间/ 内/ ,/ 从/ MM/ 中共/ 传输/ 了/ P/ 个/ 核/ 所/ 需/ 的/ 犃/ 子/ 块/ 和/ 犅/ 子/ 块/ ,/ 共/ (/ Pmk/ +/ kS/ )/ 个/ 元素/ ,/ 则/ 由于/ 犃/ 没有/ 缓冲区/ ,/ 其/ 传输/ 时间/ 无法/ 隐藏/ ./ 每/ 一块/ 犃/ i/ ,/ p/ 可以/ 重用/ N/ // S/ 次/ ,/ 之后/ 需要/ 传输/ P/ 个/ 核/ 所/ 需/ 的/ 下/ 一/ 犃/ 子/ 块/ ./ 因此/ ,/ 犃/ 的/ 总/ 传输/ 时间/ 为/ 综上/ ,/ 完成/ GEMM/ 的/ 总/ 时间/ T/ 为/ 计算/ 效率/ ,/ 即/ 峰值/ 性能/ 利用率/ U/ 为/ SM/ 到/ LM/ 之间/ 的/ 数据传输/ 时间/ 要/ 隐藏/ 在/ 计算/ 时间/ 中/ ,/ 就/ 必须/ 在/ tie/ // ci/ 的/ 时间/ 内/ 给/ P/ 个/ 核传/ 完/ 它们/ 所/ 需/ 的/ 犅/ p/ ,/ j/ +/ 1/ ,/ 共/ PkS/ 个/ 元素/ ./ 因此/ ,/ SM/ 与/ LM/ 之间/ 的/ 带宽/ BW2/ 为/ 如果/ 要/ 将/ 犃/ 的/ 传输/ 时间/ 也/ 隐藏/ 在/ 计算/ 时间/ 中/ ,/ LM/ 中/ 就/ 必须/ 能够/ 存放/ 犃/ 的/ 下/ 一个/ 子块/ ./ 即/ LM/ 的/ 大小/ 必须/ 为/ (/ 2mk/ +/ 2kS/ )/ 个/ 元素/ ./ 此时/ ,/ 完成/ GEMM/ 的/ 总/ 时间/ T/ 为/ 此时/ ,/ 需在/ 每次/ GEBP/ 的/ 执行/ 时间/ 内/ 读写/ 犆/ i/ ,/ j/ 和/ 读入/ 犅/ p/ ,/ j/ +/ 1/ ,/ 共/ (/ 2mS/ +/ kS/ )/ 个/ 元素/ ,/ 还/ 需/ 在/ N/ // S/ 次/ GEBP/ 中/ 读入/ P/ 个/ 核/ 分别/ 需要/ 的/ 下/ 一块/ 犃/ i/ ,/ p/ ,/ 共/ Pmk/ 个/ 元素/ ,/ 则/ tie/ 为/ tie/ =/ cimaxmk/ ,/ 2m/ +/ (/ )/ kS/ +/ Pmk/ // N/ // S/ 在/ N/ // S/ 次/ GEBP/ 计算/ 时间/ 内/ ,/ 需要/ 从/ SM/ 传输/ P/ 个/ 犃/ 的/ 子/ 块/ 和/ 将/ 每/ 一个/ 犅/ 的/ 子/ 块/ 复制到/ P/ 个/ 核上/ ./ 因此/ ,/ BW2/ 为/ 如果/ 在/ SM/ 中/ 只有/ 犅/ 子/ 块/ 的/ 缓冲区/ ,/ SM/ 中需/ 存放/ P/ 个/ 核/ 需要/ 的/ 犃/ 子/ 块/ 和/ P/ 个/ 核/ 当前/ 计算/ 用/ 的/ 犅/ 子/ 块/ 以及/ 下次/ 计算/ 用/ 的/ 犅/ 子/ 块/ ,/ 共/ (/ Pmk/ +/ 2kS/ )/ 个/ 元素/ ./ 如果/ 在/ SM/ 中/ 同时/ 有/ 犃/ 子/ 块/ 和/ 犅/ 子/ 块/ 的/ 缓冲区/ ,/ 则/ SM/ 需/ 存放/ (/ 2Pmk/ +/ 2kS/ )/ 个/ 元素/ ./ 4TFLOPSDSP/ 的/ 设计/ 权衡/ 要/ 使/ DSP/ 高效/ 地/ 处理/ GEMM/ ,/ 需对/ 体系结构/ 设计/ 进行/ 很/ 好/ 的/ 优化/ ,/ 并/ 在/ 达到/ 双/ 精度/ 浮点/ TFLOPS/ 的/ 峰值/ 性能/ 约束条件/ 下/ ,/ 尽可能减少/ 设计/ 代价/ ,/ 在/ 核/ 的/ 数目/ 、/ 核/ 的/ 大小/ 、/ 存储容量/ 和/ 存储/ 带宽/ 等/ 方面/ 进行/ 仔细/ 的/ 设计/ 权衡/ ./ 图/ 1/ 所示/ 结构/ 中/ ,/ 每个/ 核/ 的/ 大小/ 主要/ 由/ 每个/ SIMD/ 单元/ 的/ 大小/ 和/ SIMD/ 宽度/ 决定/ ./ 我们/ 假设/ 每个/ SIMD/ 单元/ 每/ 拍/ 可以/ 执行/ 一条/ 双/ 精度/ FMAC/ 指令/ ,/ 当/ SP/ =/ 512/ 且/ 主频/ 为/ 1GHz/ 时/ ,/ 单片/ 峰值/ 性能/ 为/ 1TFLOPS/ ./ 随着/ VLSI/ 工艺水平/ 的/ 不断进步/ ,/ 很/ Page6/ 多/ 高性能/ DSP/ 的/ 主频/ 都/ 超过/ 了/ 1GHz/ ,/ 因此/ 1GHz/ 的/ 主频/ 假设/ 是/ 合理/ 的/ ./ Galal/ 等/ 人/ [/ 22/ ]/ 给出/ 了/ 45nm/ 工艺/ 库下/ 高速/ FMAC/ 单元/ 的/ 详细/ 参数/ ,/ 在/ 1GHz/ 主频/ 和/ 45nm/ 工艺/ 库下/ ,/ FMAC/ 的/ 流水线/ 深度/ 为/ 6/ ,/ 因此/ 我们/ 取/ dF/ 为/ 5/ ./ 根据/ 设计/ 经验/ ,/ dLS/ 取为/ 4/ ./ 我们/ 根据/ 第/ 3/ 节/ 建立/ 的/ 性能/ 模型/ 设计/ 了/ 体系结构/ 性能/ 推演/ 器/ ,/ 该/ 性能/ 推演/ 器/ 基于/ 我们/ 已有/ 的/ 多/ 核/ DSP/ 模拟器/ [/ 23/ ]/ 框架/ 搭建/ ,/ 主要/ 包括/ 参数/ 配置/ 模块/ 、/ 算法/ 映射/ 参数/ 分析/ 模块/ 、/ 执行/ 推演/ 模块/ 和/ 结果/ 输出模块/ ./ 参数/ 配置/ 模块/ 用以/ 配置/ 系统/ 参数/ ,/ 包括/ 输入/ 矩阵/ 的/ 大小/ 、/ 核/ 的/ 数目/ 、/ SIMD/ 宽度/ 、/ 流水线/ 深度/ 、/ 各/ 数据通路/ 的/ 带宽/ 以及/ 存储/ 层次/ 的/ 容量/ ./ 算法/ 映射/ 模块/ 分析/ 矩阵/ 分块/ 及/ 各子/ 块/ 在/ 不同/ 存储/ 层次/ 中/ 的/ 分配/ 方案/ ./ 执行/ 模块/ 根据/ 参数/ 配置/ 模块/ 和/ 算法/ 映射/ 模块/ 的/ 输入/ 及/ 本文/ 第/ 3/ 节/ 建立/ 的/ 模型/ ,/ 推演/ GEMM/ 的/ 执行/ 过程/ 并/ 记录/ 执行/ 时/ 的/ 各种/ 参数/ ,/ 并/ 将/ 执行/ 结果/ 传递/ 给/ 输出模块/ ./ 我们/ 在/ 该/ 性能/ 推演/ 器上/ 对/ 高性能/ DSP/ 进行/ 了/ 设计/ 空间/ 探索/ ./ 4.1/ Local/ -/ Memory/ 容量/ 对/ 性能/ 的/ 影响/ 图/ 4/ 给出/ 了/ 在/ 片外/ 带宽/ BW3/ 一定/ 的/ 情况/ 下/ ,/ LM/ 容量/ 对/ DGEMM/ 性能/ 的/ 影响/ ./ 图中/ PO/ 代表/ LM/ 容量/ 为/ (/ mk/ +/ 2kS/ )/ 个/ 元素/ 时/ ,/ 则/ 犅/ 子/ 块/ 有/ 缓冲区/ ,/ 犃/ 子/ 块/ 无/ 缓冲区/ ,/ 犃/ 的/ 通信/ 时间/ 无法/ 隐藏/ 在/ 计算/ 时间/ 中/ ,/ 即/ 通信/ 时间/ 与/ 计算/ 时间/ 部分/ 重叠/ ./ FO/ 代表/ LM/ 容量/ 为/ (/ 2mk/ +/ 2kS/ )/ 个/ 元素/ 时/ ,/ 犃/ 和/ 犅/ 的/ 通信/ 时间/ 都/ 可以/ 和/ 计算/ 时间重叠/ ,/ 即/ 完全/ 重叠/ ./ BW3/ 的/ 单位/ 为/ 双字/ // 拍/ ./ 图/ 4Local/ -/ Memory/ 容量/ 对/ DGEMM/ 性能/ 的/ 影响/ 可以/ 看出/ ,/ 在/ 给定/ BW3/ 时/ ,/ 当/ LM/ 容量/ 比较/ 小时/ ,/ DGEMM/ 的/ 性能/ 成/ 指数/ 降低/ ./ 当/ LM/ 容量/ 增加/ 到/ 一定/ 程度/ 后/ ,/ 性能/ 趋于稳定/ ./ m/ 和/ k/ 的/ 选择/ 应当/ 使得/ 犃/ 和/ 犅/ 的/ 通信/ 时间/ 能/ 与/ 计算/ 时间/ 完全/ 重叠/ ,/ 以/ 使/ 峰值/ 性能/ 利用率/ 更/ 易/ 达到/ 90/ %/ 以上/ ./ 片外/ 带宽/ 越小/ ,/ 要/ 达到/ 峰值/ 性能/ 所/ 需要/ 的/ LM/ 容量/ 越大/ ./ 当片/ 外/ 带宽/ 为/ 2/ 时/ ,/ LM/ 的/ 容量/ 非常/ 小/ (/ 64KB/ )/ 时/ ,/ 就/ 可以/ 获得/ 峰值/ 性能/ 的/ 90/ %/ 以上/ ./ 一个/ 800MHz/ 的/ 64/ 位/ DDR3/ 接口/ 可以/ 提供/ 102.4/ Gbps/ 的/ 数据/ 传输率/ ./ 当/ 内核/ 的/ 频率/ 为/ 1GHz/ 时/ ,/ 相当于/ 102.4/ bit/ // cycle/ ,/ 只能/ 满足/ 每/ 拍/ 提供/ 一个双/ 字/ 的/ 请求/ ./ 当片/ 外/ 带宽/ 过/ 小时/ ,/ 需要/ 很大/ 的/ LM/ 才/ 可以/ 获得/ 峰值/ 性能/ 的/ 90/ %/ 以上/ ./ 一个/ 令人满意/ 的/ 现象/ 是/ ,/ BW3/ =/ 1/ 和/ BW3/ =/ 2/ 时/ ,/ 要/ 达到/ 峰值/ 性能/ 所/ 需/ 的/ LM/ 容量/ 相差/ 不/ 大/ ,/ 给/ 片外/ 带宽/ 设计/ 带来/ 了/ 设计/ 权衡/ 空间/ ./ 4.2/ Local/ -/ Memory/ 容量/ 和/ 犅/ 犠/ 2/ 的/ 关系/ 如图/ 4/ 所示/ ,/ 当片/ 外/ 带宽/ 为/ 64bit/ // cycle/ (/ BW3/ =/ 1/ )/ 时/ ,/ LM/ 容量/ 很/ 小时/ 就/ 可以/ 获得/ 很/ 高/ 的/ 性能/ ./ 但/ 并非/ LM/ 的/ 容量/ 越小越/ 好/ ./ 图/ 5/ 给出/ 了/ 在/ 90/ %/ 的/ 峰值/ 性能/ 利用率/ 下/ ,/ LM/ 容量/ 和/ BW2/ 之间/ 的/ 关系/ ./ 图中/ 分别/ 给出/ 了/ 双/ 精度/ 浮点/ 峰值/ 性能/ 为/ 2TFLOPS/ 和/ 1TFLOPS/ 的/ 情况/ ./ 当/ LM/ 容量/ 很/ 小时/ ,/ BW2/ 的/ 需求/ 呈/ 指数/ 增长/ ./ 在/ LM/ 容量/ 不变/ 的/ 情况/ 下/ ,/ 当/ 峰值/ 性能/ 提升/ 1/ 倍/ 时/ ,/ BW2/ 的/ 需求/ 也/ 增长/ 1/ 倍/ ./ 即/ 单片/ 峰值/ 性能/ 的/ 提升/ 与/ BW2/ 需求/ 增长/ 呈/ 线性关系/ ./ 从图/ 5/ 还/ 可以/ 看出/ ,/ 在/ 峰值/ 性能/ 一定/ 的/ 情况/ 下/ ,/ 大量/ 的/ 小核/ (/ SIMD/ 宽度/ 比较/ 小/ )/ 和/ 少量/ 的/ 大核/ (/ SIMD/ 宽度/ 比较/ 大/ )/ 对/ BW2/ 的/ 需求/ 基本一致/ ./ 图/ 5Local/ -/ Memory/ 容量/ 、/ 核/ 数目/ 、/ 核/ 大小/ 对/ BW2/ 的/ 结合/ 图/ 4/ 和/ 图/ 5/ ,/ 可以/ 在/ LM/ 容量/ 、/ LM/ 和/ SM/ 之间/ 的/ 数据/ 带宽/ 以及/ 峰值/ 性能/ 的/ 利用率/ 之间/ 进行/ 设计/ 权衡/ ./ 小/ 容量/ 的/ LM/ 减小/ 了/ 存储器/ 的/ 代价/ ,/ 但/ 大大增加/ 了/ 片/ 上/ 数据传输/ 电路/ 的/ 代价/ ./ 线性/ 增加/ LM/ 容量/ ,/ 可以/ 在/ 保证/ 性能/ 的/ 前提/ 下/ ,/ 使片/ 上/ 数据传输/ 电路/ 的/ 设计/ 代价/ 成/ 指数/ 减小/ ./ 4.3/ Shared/ -/ Memory/ 容量/ 和/ 犅/ 犠/ 3/ 的/ 关系/ 图/ 6/ 给出/ 了/ SM/ 容量/ 和/ BW3/ 需求/ 之间/ 的/ 关系/ ./ 图中/ 的/ 数据/ 是/ 在/ 达到/ 峰值/ 性能/ 90/ %/ 的/ 情况/ 下/ 得到/ Page7/ 的/ ./ 当/ SM/ 容量/ 非常/ 小时/ ,/ 对/ BW3/ 的/ 需求/ 成/ 指数/ 增长/ ./ 当/ SM/ 的/ 容量/ 到/ 一定/ 程度/ 时/ ,/ 对/ BW3/ 的/ 需求/ 趋于稳定/ ,/ 并且/ 处于/ 硬件/ 代价/ 可/ 接受/ 的/ 范围/ ./ 线性/ 增加/ SM/ 容量/ ,/ 可以/ 在/ 保证/ 性能/ 的/ 前提/ 下/ ,/ 使/ BW3/ 的/ 设计/ 代价/ 成/ 指数/ 减小/ ./ 如图/ 6/ 所示/ ,/ 大量/ 的/ 小核/ 比/ 少量/ 的/ 大核/ 需要/ 的/ 片外/ 带宽/ 小/ ./ 因为/ 当/ SIMD/ 宽度/ 较/ 小时/ ,/ 可以/ 选择/ 比较/ 大/ 的/ m/ 和/ k/ ,/ 使/ 每个/ GEBP/ 的/ 计算/ 时间/ 增长/ ,/ 从而/ 减小/ 了/ 带宽/ 的/ 需求/ ./ 图/ 6Shared/ -/ Memory/ 容量/ 对/ BW3/ 的/ 影响/ (/ N/ =/ 4096/ )/ 从图/ 5/ 和/ 图/ 6/ 中/ 都/ 可/ 看出/ ,/ 当/ 存储器/ 容量/ 太/ 小时/ ,/ 对/ 数据/ 带宽/ 的/ 需求/ 将/ 呈/ 指数/ 增长/ ./ 因为/ GEMM/ 的/ 计算/ 量/ 为/ O/ (/ N3/ )/ ,/ 而/ 通信量/ 为/ O/ (/ N2/ )/ ,/ 计算/ 通信/ 比为/ O/ (/ N/ )/ ,/ 片上/ 存储器/ 可以/ 存放/ 的/ N/ 越大/ ,/ 需要/ 的/ 数据/ 带宽/ 就/ 越/ 小/ ./ LM/ 和/ SM/ 的/ 容量/ 决定/ 了/ m/ 和/ k/ 的/ 大小/ ,/ 当/ LM/ 或/ SM/ 的/ 容量/ 非常/ 小时/ ,/ m/ 和/ k/ 将会/ 非常/ 小/ ,/ 从而/ 使/ 带宽/ 需求/ 成/ 指数/ 增长/ ./ 4.4/ 流水线/ 深度/ 对/ 性能/ 的/ 影响/ 我们/ 知道/ ,/ 在/ 频率/ 一定/ 的/ 情况/ 下/ ,/ 减小/ 功能/ 单元/ 流水线/ 深度/ 通常/ 是/ 提高/ 功能/ 单元/ 效率/ 的/ 有效/ 手段/ ./ 功能/ 单元/ 的/ 效率/ 经常/ 成为/ 影响/ 应用/ 性能/ 的/ 关键/ ./ 然而/ ,/ 要/ 缩短/ 流水线/ 深度/ 通常/ 要/ 耗费/ 一定/ 的/ 硬件资源/ ./ SIMD/ 和/ 多/ 核/ 结构/ 的/ TFLOPSDSP/ 中要/ 对/ 通用/ 功能/ 单元/ 进行/ 大量/ 复制/ ,/ 例如/ ALU/ 、/ Load/ // Store/ 和/ FMAC/ 单元/ 等/ ./ 因此/ ,/ 这些/ 通用/ 功能/ 单元/ 的/ 设计/ 代价/ 直接/ 影响/ 到/ 全/ 芯片/ 的/ 设计/ 代价/ ./ 图/ 7/ 给出/ 了/ 不同/ 规模/ 的/ DGEMM/ 中/ ,/ tee/ 、/ tie/ 和/ tft/ 各自/ 的/ 归一化/ 执行/ 时间/ ./ 可以/ 看出/ ,/ tft/ 所/ 占/ 比例/ 非常/ 小/ ,/ 因此/ 式/ (/ 1/ )/ 和/ (/ 2/ )/ 中/ 可以/ 去除/ tft/ 以/ 简化/ 性能/ 模型/ ./ 如图/ 7/ 所示/ ,/ 当/ 矩阵/ 规模/ 比较/ 小时/ ,/ 例如/ N/ </ 256/ ,/ tee/ 占/ 总/ 执行/ 时间/ 的/ 一半/ ,/ 甚至/ 更/ 多/ ./ 当/ 矩阵/ 规模/ 比较/ 大时/ ,/ 例如/ N/ >/ 1024/ ,/ tee/ 所/ 占/ 比例/ 可以/ 忽略不计/ ./ 因此/ ,/ 在/ 分析/ 大规模/ GEMM/ 问题/ 时/ ,/ 可/ 去除/ 式/ (/ 1/ )/ 和/ (/ 2/ )/ 中/ 的/ tee/ ./ tee/ 和/ FMAC/ 单元/ 以及/ Load/ // Store/ 单元/ 的/ 延迟/ 时钟/ 槽/ 成正比/ ./ 这/ 就/ 意味着/ ,/ 在/ 处理/ 大/ 矩阵/ 的/ GEMM/ 时/ ,/ 访存/ 带宽/ 对/ 性能/ 影响/ 大于/ 访存/ 延时/ 对/ 性能/ 的/ 影响/ ./ 在/ 处理/ 小/ 矩阵/ GEMM/ 时/ ,/ 访存/ 延时/ 会/ 对/ 性能/ 产生/ 较大/ 的/ 影响/ ./ 因此/ ,/ 可以/ 根据/ 问题/ 规模/ 对/ Load/ // Store/ 单元/ 的/ 设计/ 进行/ 一定/ 的/ 权衡/ ./ 同时/ ,/ 当/ 矩阵/ 规模较/ 小时/ ,/ 设计/ 高效/ 的/ FMAC/ 部件/ 对于/ 提升/ GEMM/ 的/ 性能/ 很/ 有/ 意义/ ./ 当/ 矩阵/ 规模/ 比较/ 大时/ ,/ 可/ 对/ FMAC/ 单元/ 的/ 硬件/ 代价/ 进行/ 一定/ 的/ 权衡/ ./ 图/ 7tee/ 、/ tie/ 和/ tft/ 的/ 归一化/ 执行/ 时间/ (/ S/ =/ 32/ ,/ P/ =/ 16/ )/ 根据/ 上文/ 的/ 讨论/ ,/ 我们/ 经过/ 一定/ 的/ 权衡/ ,/ 取/ 了/ 一组/ TFLOPSDSP/ 的/ 合适/ 设计/ 参数/ ,/ 并/ 分析/ 了/ DGEMM/ 在/ 该/ DSP/ 上/ 的/ 性能/ ./ 该/ DSP/ 主频/ 为/ 1GHz/ ,/ 拥有/ 16/ 个/ 32/ 宽度/ 的/ SIMD/ 核/ ,/ 每个/ 核/ 拥有/ 256KB/ 的/ LM/ ,/ 16/ 个/ 核/ 共享/ 4MB/ 的/ SM/ ./ 片外/ 带宽/ 可以/ 提供/ 1/ 个/ 双字/ // 拍/ 的/ 传输/ 能力/ ,/ SM/ 和/ LM/ 之间/ 的/ 数据/ 带宽/ 为/ 4/ 个/ 双字/ // 拍/ ./ FMAC/ 的/ 流水线/ 深度/ 为/ 6/ ,/ Load/ // Store/ 每次/ 访问/ LM/ 的/ 数据/ 需要/ 5/ 拍/ ./ 图/ 8/ 给出/ 了/ DGEMM/ 在/ 该/ DSP/ 上/ 的/ 性能/ ,/ 该/ DSP/ 的/ 双/ 精度/ 浮点/ 峰值/ 性能/ 为/ 1TFLOPS/ ,/ 可以/ 看出/ ,/ DGEMM/ 的/ 性能/ 可以/ 接近/ 峰值/ 性能/ ./ Page85/ 结论/ 本文/ 第一次/ 提出/ 了/ 一个/ 面向/ 通用/ 高性能/ 计算/ 的/ 高性能/ DSP/ 的/ 基本/ 框架/ ,/ 并且/ 将/ GotoBLAS/ 库/ 映射/ 到/ 该/ 结构/ 中/ ,/ 构建/ 了/ GEMM/ 在/ 该/ 结构/ 上/ 的/ 性能/ 模型/ ./ 我们/ 综合/ 考虑/ 了/ 性能/ 、/ 存储/ 层次/ 、/ 核/ 大小/ 及核/ 数量/ 等/ 因素/ ,/ 在/ SIMD/ 和/ 多/ 核/ 结构/ 的/ DSP/ 上/ 高效/ 实现/ 了/ GEMM/ ,/ 通过/ 建立/ 的/ 性能/ 模型/ 得到/ 了/ 一些/ 有/ 指导意义/ 的/ 参数/ 和/ 结论/ ,/ 能够/ 指导/ 设计者/ 进行/ 很/ 好/ 的/ 设计/ 空间/ 探索/ 和/ 设计/ 权衡/ ,/ 构建/ 面向/ 通用/ 高性能/ 计算/ 高效/ 的/ DSP/ 结构/ ./ 经过/ 一定/ 权衡/ 后/ ,/ 可以/ 在/ TFLOPSDSP/ 上/ 获得/ 接近/ 峰值/ 的/ 性能/ ./ 本文/ 还/ 说明/ 了/ 将/ DSP/ 用于/ 通用/ 高性能/ 计算/ 的/ 优势/ 和/ 可行性/ ,/ 它/ 具有/ 高功耗/ 效率/ 、/ 低/ 价格/ 、/ 易/ 编程/ 等/ 优势/ ./ 未来/ 的/ 工作/ 将/ 考虑/ 多核/ 之间/ 的/ 同步/ 开销/ 对/ 性能/ 的/ 影响/ 以及/ 在/ 模型/ 中/ 引入/ 功耗/ 的/ 评价/ 指标/ ./ 致谢/ 在/ 此/ ,/ 我们/ 向/ 国防科技大学/ 高性能/ 计算/ 联合/ 博导/ 组/ 科研/ 基金/ 委员会/ 表示感谢/ ,/ 有/ 了/ 你们/ 的/ 高瞻远瞩/ 和/ 大力支持/ ,/ 本文/ 从/ 思想/ 上/ 和/ 细节/ 上/ 都/ 得到/ 了/ 很大/ 的/ 帮助/ !/ 

