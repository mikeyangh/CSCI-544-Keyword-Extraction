Page1/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 缪淮扣/ 陈圣波/ 曾/ 红卫/ (/ 上海大学/ 计算机/ 工程/ 与/ 科学/ 学院/ 上海/ 200072/ )/ (/ 上海市/ 计算机软件/ 评测/ 重点/ 实验室/ 上海/ 201112/ )/ 摘要/ 提出/ 了/ 基于/ 模型/ 的/ Web/ 应用/ 测试方法/ ,/ 包括/ 建模/ 、/ 测试用例/ 生成/ 、/ 测试用例/ 的/ 执行/ 、/ 模型/ 以及/ 测试用例/ 的/ 可视化/ 等/ 关键技术/ ./ 设计/ 并/ 实现/ 一个/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 系统/ ./ 以/ FSM/ 作为/ 被测/ Web/ 应用/ 的/ 形式/ 测试/ 模型/ ,/ 集成/ 了/ 模型/ 转换器/ 、/ 测试/ 目标/ 分析器/ 、/ 测试/ 序列/ 生成器/ 、/ FSM/ 和/ 测试/ 序列/ 可视化/ 以及/ Web/ 应用/ 测试/ 执行/ 引擎/ 等/ 工具/ ./ 除/ 支持/ 状态/ 覆盖/ 、/ 迁移/ 覆盖/ 、/ 迁移/ 对/ 覆盖/ 等/ 传统/ 的/ 覆盖/ 准则/ 外/ ,/ 还/ 改进/ // 提出/ 了/ 优化/ 状态/ 迁移/ 覆盖/ 、/ 完整/ 消息传递/ 覆盖/ 、/ 完整/ 功能/ 交互/ 覆盖/ 和/ 功能/ 循环/ 交互/ 覆盖/ 等/ 覆盖/ 准则/ ./ 该文/ 以/ 兴宁/ 水库/ 移民/ 信息管理系统/ 为例/ 演示/ 了/ 该/ 系统/ ./ 关键词/ Web/ 应用/ ;/ 模型/ 转换/ ;/ 测试用例/ 生成/ ;/ 测试/ 执行/ 1/ 引言/ Web/ 应用/ 已经/ 渗透到/ 国计民生/ 的/ 各个领域/ ,/ 一个/ 非常/ 关键/ 的/ 问题/ 是/ 如何/ 保证/ Web/ 应用/ 的/ 可靠性/ 和/ 质量/ ./ 测试/ 是/ 提高/ 软件可靠性/ 和/ 保证/ 软件/ 质量/ 的/ 一种/ 最/ 基本/ 的/ 手段/ ./ 目前/ ,/ Web/ 应用/ 的/ 测试/ 主要/ 依赖/ 测试/ 工程师/ 的/ 直觉/ 和/ 经验/ ,/ 没有/ 比较/ 系统/ 的/ 方法/ 和/ 工具/ ,/ 测试/ 是/ 一个/ 耗时/ 的/ 、/ 代价/ 昂贵/ 的/ 过程/ ./ 许多/ Web/ 应用/ 在/ 没有/ 进行/ 充分/ 测试/ 的/ 情况/ 下/ 投入/ 运营/ ,/ 质量/ 难以/ 保证/ ,/ 导致/ Web/ 应用软件/ 的/ 开发/ 可靠性/ 不高/ 、/ 风险/ 大/ ./ 因此/ ,/ 迫切需要/ 实现/ Web/ 应用/ 测试/ 的/ 自动化/ ./ 基于/ 模型/ 的/ 语言/ (/ 如/ UML/ )/ 、/ 模型/ 驱动/ 技术/ (/ MDA/ )/ 和/ 以/ 测试/ 为/ 中心/ 的/ 软件开发/ 技术/ 与/ 方法/ 的/ 兴起/ 和/ 应用/ 以及/ 形式化/ 验证/ 技术/ 的/ 逐步/ 成熟/ ,/ 使/ 基于/ 模型/ 的/ 软件测试/ 方法/ 与/ 技术/ [/ 1/ -/ 5/ ]/ 在/ 近几年/ 得到/ 了/ 较/ 广泛/ 的/ 关注/ ,/ 一些/ 理论/ 的/ 和/ 商业/ 的/ 工具/ 相继/ 出现/ ./ 基于/ 模型/ 的/ 测试/ 以/ 明确/ 描述/ 系统/ 预期/ 行为/ 的/ 抽象/ 模型/ 为/ 依据/ ,/ 根据/ 模型/ 覆盖/ 准则/ 自动/ 生成/ 抽象/ 的/ 测试用例/ :/ 输入/ 和/ 预期/ 的/ 输出/ ./ 输入/ 部分/ 在/ 被/ 实例/ 化后/ 输入/ 被/ 测系统/ (/ theSystemUnderTest/ ,/ SUT/ )/ 进行/ 测试/ ./ 基于/ 模型/ 的/ 测试/ 实现/ 测试用例/ 生成/ 、/ 测试/ 执行/ 和/ 测试/ 结果/ 判别/ 的/ 自动化/ ./ Web/ 应用/ 的/ 测试/ 可以/ 分为/ 非/ 功能测试/ 和/ 功能测试/ [/ 6/ ]/ ./ 非/ 功能测试/ 包括/ 性能/ 测试/ 、/ 负载/ 测试/ 、/ 可用性/ 测试/ 、/ 兼容性/ 测试/ 和/ 安全性/ 测试/ 等/ ./ 本文/ 考虑/ 的/ 是/ 功能测试/ ./ 目前/ ,/ Web/ 应用/ 的/ 测试/ 技术/ 大多/ 着重于/ 客户端/ 和/ 服务端/ 的/ 静态/ 测试/ ,/ 包括/ link/ 检查/ 、/ HTML/ 验证/ 器/ 、/ 捕获/ // 回放/ 、/ 安全性/ 测试/ 以及/ 负载/ 和/ 压力/ 测试/ 等/ Web/ 应用/ 测试/ 支持/ 工具/ ,/ 大都/ 是/ 基于/ 程序/ 或/ 源代码/ 的/ 静态/ 验证/ 和/ 计量/ 工具/ ,/ 不/ 支持/ 或/ 很少/ 支持/ Web/ 应用/ 的/ 功能测试/ [/ 7/ ]/ ./ Web/ 应用/ 由/ 复杂/ 的/ 用户界面/ 和/ 不计其数/ 的/ 后/ 端/ 构件/ 以/ 各种/ 方式/ 集成/ 在/ 一起/ ./ 基于/ 模型/ 的/ 测试方法/ 为/ Web/ 应用/ 功能测试/ 的/ 自动化/ 提供/ 了/ 一种/ 非常/ 有效/ 的/ 解决方案/ ./ 在/ 基于/ 模型/ 的/ 测试/ 中/ ,/ 测试/ 模型/ 和/ 基于/ 测试/ 模型/ 生成/ 的/ 测试用例/ 都/ 是/ 抽象/ 的/ 、/ 独立/ 于/ 平台/ 的/ ,/ 从而/ 是/ 可/ 重用/ 的/ ./ 测试/ 执行/ 时/ 通过/ 对/ 测试/ 执行/ 环境/ 的/ 动态/ 配置/ 自动/ 产生/ 实例/ 化/ 的/ 可/ 执行/ 的/ 测试/ 包/ ./ 这一/ 特性/ 将/ 大大降低/ 由于/ Web/ 应用/ 的/ 异构/ 性/ 和/ 动态性/ 所/ 带来/ 的/ 测试/ 复杂度/ ./ 基于/ 模型/ 的/ Web/ 应用/ 测试方法/ 改变/ 了/ 软件工程/ 中/ “/ 现在/ 编程/ ,/ 以后/ 测试/ ”/ 的/ 工作/ 方式/ ,/ 使得/ 在/ 整个/ 软件/ 生命期/ 中/ 都/ 可以/ 并行/ 地/ 进行/ 测试/ 工作/ ,/ 从而/ 实现/ 编码/ 前/ 的/ 错误/ 检测/ ,/ 大大降低/ 测试/ 的/ 代价/ ./ 基于/ 模型/ 的/ Web/ 应用/ 的/ 建模/ 和/ 测试/ ,/ 国内外/ 有/ 一些/ 相关/ 的/ 研究/ 正在/ 开展/ [/ 8/ -/ 13/ ]/ ,/ Web/ 应用/ 的/ 测试/ 研究/ 只是/ 分别/ 考虑/ Web/ 应用/ 测试/ 的/ 一个/ 或/ 几个/ 方面/ ,/ 大都/ 没有/ 考虑/ 到/ Web/ 应用/ 中/ 的/ 系统/ 级/ 的/ 完整/ 功能测试/ 问题/ ./ 本文/ 主要/ 研究/ 基于/ 模型/ 的/ Web/ 应用软件/ 的/ 测试/ 技术/ 和/ 工具/ 实现/ ./ 最终/ 构建/ 一套/ 从/ 模型/ 出发/ 产生/ 测试用例/ 并/ 自动/ 执行/ 测试用例/ 的/ 系统/ 工具/ ,/ 实现/ Web/ 应用/ 测试/ 过程/ 的/ 自动化/ ./ 本文/ 主要/ 关注/ 于/ Web/ 应用/ 的/ 导航/ 行为/ 方面/ ./ 主要/ 内容/ 和/ 贡献/ 如下/ :/ 第/ 2/ 节/ 给出/ Web/ 应用/ 的/ 建模/ 方法/ 、/ 模型/ 转换方法/ 、/ 模型/ 归约/ 方法/ ,/ 最终/ 得到/ 系统/ 的/ 有限/ 状态机/ (/ FiniteStateMachine/ ,/ FSM/ )/ 模型/ ;/ 第/ 3/ 节/ 根据/ 已有/ 的/ 或/ 改进/ 的/ 以及/ 本/ 课题组/ 提出/ 的/ 测试/ 准则/ 进行/ 测试/ 生成/ ,/ 得到/ 抽象/ 测试用例/ ;/ 第/ 4/ 节/ 给出/ 整个/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 系统/ 的/ 设计/ 与/ 实现/ ,/ 包括/ 系统/ 框架/ 、/ 测试用例/ 的/ 可视化/ 以及/ 测试/ 执行/ ;/ 第/ 5/ 节/ 通过/ 实例/ 演示/ 本/ 工具/ 的/ 主要/ 功能/ ./ 最后/ ,/ 对/ 全文/ 进行/ 总结/ ./ 2Web/ 应用/ 建模/ 和/ 模型/ 转换/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 的/ 首要任务/ 是/ 建立/ Web/ 应用/ 的/ 抽象/ 测试/ 模型/ ./ 目前/ ,/ 已有/ 不少/ Web/ 应用/ 建模/ 方法/ ,/ 每/ 一种/ 方法/ 都/ 有/ 不同/ 的/ 目的/ ,/ 所/ 关注/ 的/ Web/ 特性/ 也/ 不/ 一样/ ./ Isakowitz/ 等/ 人/ [/ 14/ ]/ 将/ 关系/ 管理/ 方法论/ 用于/ 描述/ Web/ 应用/ 的/ 设计/ ./ Coda/ 等/ 人/ [/ 15/ ]/ 给出/ 了/ 面向对象/ 模型/ WOOM/ ,/ 用/ 高层/ 抽象/ 的/ 原始/ 实体/ 来/ 描述/ Web/ 应用/ 的/ 开发/ ./ Gellersen/ 等/ 人/ [/ 16/ ]/ 提出/ 了/ 一种/ Web/ 复合/ 方式/ 来/ 结构化/ Web/ 的/ 开发/ 过程/ ./ Conallen/ 等/ 人/ [/ 17/ ]/ 扩展/ UML/ 对/ Web/ 应用/ 的/ 体系结构/ 进行/ 建模/ ./ 文献/ [/ 18/ -/ 20/ ]/ 采用/ statecharts/ 对/ Web/ 导航/ 、/ Web/ 元素/ 以及/ 这些/ 元素/ 之间/ 的/ 交互进行/ 建模/ ./ Kung/ [/ 21/ -/ 22/ ]/ 等/ 人/ 提出/ 了/ 一种/ 基于/ 包括/ 对象/ 关系/ 图/ 、/ 对象/ 状态图/ 、/ 脚本/ 簇图/ 和/ 网页/ 导航/ 图/ 等/ 多/ 模型/ 的/ 测试/ 生成/ 方法/ ./ Andrews/ 等/ 人/ [/ 23/ ]/ 分析/ 了/ 构成/ Web/ 应用/ 的/ 网页/ 和/ 软件/ 构件之间/ 的/ 8/ 种/ 连接/ 关系/ ,/ 提出/ 了/ 一种/ 基于/ 有限/ 状态机/ (/ FSM/ )/ 的/ Web/ 应用/ 建模/ 和/ 测试用例/ 生成/ 方法/ ./ 该/ 方法/ 通过/ 对/ Web/ 应用/ 进行/ 功能/ 簇/ 和/ 逻辑/ 网页/ 的/ 划分/ 并用/ 带/ 约束/ 的/ 分层/ FSM/ 表示/ 逻辑/ 网页/ 及/ 逻辑/ 网页/ 间/ 的/ 导航/ 关系/ ./ 这种/ 方法/ 没有/ 进一步/ 考虑/ Web/ 应用/ 中/ 软件/ 构件/ 的/ 交互/ 和/ 合成/ Page3/ 的/ 测试/ 问题/ ./ 另外/ ,/ Ricca/ 等/ 人/ [/ 24/ ]/ 用/ 决策表/ 来/ 对/ Web/ 应用/ 中/ 每个/ 页面/ 的/ 行为/ 进行/ 建模/ ,/ 利用/ 决策表/ 产生/ 测试用例/ ./ 这一/ 方案/ 仅仅/ 是/ 在/ 单元测试/ 层面/ 上/ 对/ 较为简单/ 的/ 页面/ 有效/ ,/ 无法/ 解决/ 整个/ 软件/ 的/ 功能测试/ 问题/ ./ 然而/ ,/ 这些/ 方法/ 很少/ 有/ 从/ Web/ 应用/ 的/ 行为/ 和/ 功能/ 上/ 进行/ 建模/ 并/ 提出/ 功能测试/ 方案/ 的/ ./ 采用/ FSM/ 模型/ 描述/ 软件/ 的/ 行为/ 在实践中/ 得到/ 广泛/ 的/ 认同/ [/ 25/ ]/ ./ FSM/ 提供/ 了/ 一个/ 基本/ 机制/ 来/ 对/ 软件/ 的/ 复杂/ 行为/ 进行/ 建模/ ,/ 不/ 需要/ 考虑/ 该软件/ 的/ 底层/ 实现/ [/ 26/ ]/ ,/ 可以/ 有效/ 避免/ 和/ 具体/ 实现/ 相关/ 的/ 问题/ ./ FSM/ 有/ 成熟/ 的/ 理论/ 基础/ ,/ 并且/ 可以/ 利用/ 形式语言/ 和/ 自动机/ 理论/ 来/ 设计/ 、/ 操纵/ 和/ 分析/ ,/ 特别/ 适合/ 描述/ 反应式/ 软件系统/ ./ 已有/ 许多/ 研究/ 提出/ 了/ 一些/ 直接/ 从/ FSM/ 模型/ 派生/ 测试用例/ 的/ 方法/ [/ 27/ -/ 29/ ]/ ,/ 并且/ 这些/ 方法/ 已经/ 趋于/ 成熟/ ./ 尽管/ FSM/ 提供/ 了/ 一个/ 对/ 复杂/ Web/ 应用/ 行为/ 进行/ 建模/ 的/ 理论/ 基础/ [/ 30/ ]/ ,/ 但/ 如何/ 有效/ 地用/ FSM/ 来/ 对/ Web/ 应用/ 建模/ 以及/ 如何/ 有效/ 来/ 避免/ 状态/ 空间/ 爆炸/ 问题/ 等/ 给/ 研究者/ 提出/ 了/ 挑战/ ./ 我们/ 的/ 建模/ 方法/ 是/ 用/ UML/ 的/ 不同/ 图形/ ,/ 从/ 不同/ 的/ 角度/ ,/ 针对/ Web/ 应用/ 的/ 特点/ 建立/ 模型/ ./ 本文/ 采用/ UML/ 状态图/ 对/ Web/ 应用/ 的/ 行为/ 进行/ 建模/ ,/ 然后/ 将/ UML/ 状态图/ 转换成/ FSM/ ./ 为了/ 克服/ 或/ 缓解/ FSM/ 状态/ 空间/ 爆炸/ 问题/ ,/ 采用/ 测试/ 目标/ 归约/ 的/ 方法/ ,/ 用/ UML/ 顺序/ 图来/ 描述/ 测试/ 目标/ ,/ 并/ 从/ 该/ UML/ 顺序/ 图/ 产生/ 测试用例/ 规约/ ,/ 然后/ 与/ 由/ UML/ 状态图/ 转换成/ 的/ FSM/ 模型/ 进行/ 模型/ 归约/ 组合/ 产生/ 基于/ 测试/ 目标/ 的/ FSM/ ,/ 也/ 就是/ 约简/ 的/ FSM/ ./ 然后/ 将/ 它们/ 统一/ 到/ 一个/ 形式化/ 抽象/ 模型/ FSM/ 上/ ./ 本文/ 给出/ 了/ 模型/ 投影/ 、/ 同步/ 积/ 以及/ 去/ 层次化/ 等/ 方法/ 和/ 技术/ ./ 测试用例/ 是/ 根据/ 抽象/ 模型/ FSM/ 生成/ 的/ ./ 2.1/ UML/ 状态图/ 模型/ 的/ 形式化/ 出/ 如下/ 概念/ ./ 定义/ 1/ ./ 一个/ FSM/ 模型/ 是/ 一个/ 五元/ 组/ A/ =/ (/ Q/ ,/ L/ ,/ δ/ ,/ q0/ ,/ q/ )/ ,/ 其中/ Q/ 是/ 有限/ 个/ 状态/ 的/ 集合/ ;/ L/ 是/ A/ 上/ 有限/ 个/ 迁移/ 标签/ 的/ 集合/ ;/ δ/ :/ Q/ ×/ L/ →/ Q/ 是/ 有限/ 个/ 迁移/ 的/ 集合/ ,/ 表示/ 前/ 状态/ 通过/ 标签/ 中/ 给出/ 的/ 事件/ 触发/ 使/ 系统/ 进入/ 后/ 状态/ ;/ q0/ ∈/ Q/ 是/ A/ 的/ 开始/ 状态/ ,/ q/ ∈/ Q/ 是/ A/ 的/ 接受/ 状态/ ,/ 即/ 终态/ ,/ 系统/ 进入/ 该/ 状态/ 时/ 将/ 停止/ 接受/ 任意/ 事件/ 触发/ ./ 假设/ 迁移/ t/ (/ s/ ,/ l/ ,/ s/ )/ ∈/ δ/ ,/ 记/ source/ (/ t/ )/ =/ s/ ,/ target/ (/ t/ )/ =/ s/ ,/ label/ (/ t/ )/ =/ l/ ./ 从/ FSM/ 的/ 定义/ 可以/ 看出/ ,/ 状态/ 均/ 为/ 基本/ 状态/ 或/ 简单/ 状态/ ,/ 即/ 无/ 嵌套/ 状态/ ,/ 不/ 存在/ 子/ 状态/ 与子/ 为了/ 便于/ 理解/ 以及/ 进行/ 后续/ 的/ 模型/ 转换/ ,/ 先给/ FSM/ ./ 由于/ UML/ 状态图/ 中/ 会/ 出现/ 复合/ 状态/ ,/ 去/ 层次化/ 是/ 必需/ 的/ ./ 为了/ 不/ 丢失/ 源/ 模型/ 的/ 语义/ ,/ 必须/ 先/ 获取/ 状态图/ 中/ 各/ 状态/ 之间/ 的/ 层次/ 关系/ ,/ 再/ 利用/ 适当/ 的/ 模型/ 转换规则/ 生成/ 无/ 层次/ 的/ FSM/ 模型/ ./ 为此/ ,/ 引入/ 中间/ 模型/ :/ 层次/ 有限/ 状态机/ HFSM/ (/ HierarchicalFSM/ )/ ,/ 以/ 记录/ 目标/ 模型/ 中/ 无法/ 保留/ 的/ 层次/ 信息/ ./ HFSM/ 可以/ 有/ 内部结构/ ,/ 可以/ 将/ 它/ 看作/ 许多/ 个/ FSM/ 模型/ 以/ 串行/ 和/ (/ 或/ )/ 并行/ 方式/ 组合而成/ 的/ 复合/ 模型/ ,/ 非/ 最底层/ 的/ 状态/ 可/ 由/ 其/ 直接/ 下层/ 的/ 子/ 状态机/ 表示/ ,/ 其/ 定义/ 需要/ 在/ 函数/ / 的/ 基础/ 上/ 给出/ ./ 定义/ 2/ ./ 给定/ 一个/ 有限/ 状态机/ 的/ 集合/ F/ =/ {/ A1/ ,/ A2/ ,/ …/ ,/ An/ }/ ,/ Q/ (/ Ai/ )/ 表示/ 集合/ 中/ 任意/ 有限/ 状态机/ Ai/ 的/ 状态/ 集合/ ,/ 则/ / :/ ∪/ A/ ∈/ FQ/ (/ A/ )/ →/ / (/ F/ )/ 是/ 集合/ F/ 上/ 的/ 一个/ 组合/ 函数/ 当且/ 仅/ 当/ (/ 1/ )/ / 1A/ ∈/ F/ ∧/ A/ / ∪/ ran/ (/ / )/ ./ ran/ 是/ 值域/ 函数/ ,/ A/ 表示/ 最高/ 层次/ 的/ 有限/ 状态机/ ./ (/ 2/ )/ / A/ ∈/ ∪/ ran/ (/ / )/ ·/ / 1s/ ∈/ ∪/ A/ ∈/ F/ \/ {/ A/ }/ Q/ (/ A/ )/ ·/ A/ ∈/ / (/ s/ )/ ./ (/ 3/ )/ / S/ / ∪/ A/ ∈/ FQ/ (/ A/ )/ ·/ / s/ ∈/ S/ ·/ S/ ∩/ ∪/ A/ ∈/ / (/ s/ )/ ·/ Q/ (/ A/ )/ =/ / ./ 定义/ 3/ ./ HFSM/ 是/ 一个二元/ 组/ (/ F/ ,/ / )/ ,/ 其中/ F/ 是/ 一个/ 有限/ 的/ 有限/ 状态机/ 集合/ ,/ 对于/ 每/ 两个/ 顺序/ 有限/ 状态机/ Ai/ ,/ Aj/ (/ 0/ </ i/ </ n/ ,/ 0/ </ j/ </ n/ ,/ i/ ≠/ j/ )/ 都/ 有/ Q/ (/ Ai/ )/ ∩/ Q/ (/ Aj/ )/ =/ / ,/ / 是/ 集合/ F/ 上/ 的/ 一个/ 组合/ 函数/ ./ 设/ s/ 为/ 该/ HFSM/ 中/ 的/ 任意/ 状态/ ,/ 若/ / (/ s/ )/ ≠/ / ,/ 则/ s/ 为/ 复合/ 状态/ ./ 在/ 这些/ 模型/ 定义/ 的/ 基础/ 上/ ,/ 便/ 可/ 开始/ 模型/ 形式化/ 的/ 描述/ ./ 根据/ HFSM/ 的/ 定义/ ,/ 由/ UML/ 状态图/ 的/ 拓扑/ 结构/ 信息/ 得到/ 一个/ 有限/ 状态机/ 集合/ 上/ 的/ 组合/ 函数/ 后/ ,/ 便/ 可以/ 利用/ HFSM/ 数学/ 形式/ 表示/ 该/ 拓扑/ 结构/ ./ 而/ 组合/ 函数/ 的/ 建立/ 过程/ 自顶向下/ ,/ 将/ 每层/ 的/ 复合/ 状态/ 映射/ 到/ 其/ 对应/ 的/ 子/ FSM/ ,/ 然后/ 将/ 其/ 作为/ 一个/ 元素/ 添加/ 到/ 组合/ 函数/ 中/ ./ 若/ 复合/ 状态/ s/ 是/ 一个/ “/ 或/ ”/ 状态/ ,/ 它/ 对应/ 的/ 子/ FSM/ 为/ Ai/ ,/ 那么/ 就/ 有/ / (/ s/ )/ =/ Ai/ 且/ F/ =/ F/ ∪/ {/ Ai/ }/ ;/ 若/ 复合/ 状态/ s/ 是/ 一个/ “/ 与/ ”/ 状态/ ,/ 它/ 的/ 各个/ 域/ 对应/ 的/ 子/ FSM/ 分别/ 是/ A1/ ,/ A2/ ,/ …/ ,/ An/ ,/ 那么/ 就/ 有/ / (/ s/ )/ =/ {/ A1/ ,/ A2/ ,/ …/ ,/ An/ }/ 且/ F/ =/ F/ ∪/ {/ A1/ }/ ∪/ {/ A2/ }/ ∪/ …/ ∪/ {/ An/ }/ ./ 状态图/ 中/ 每/ 一个/ 被/ 初始状态/ 指向/ 的/ 状态/ 是/ 其/ 所在/ 层次/ 的/ 对应/ FSM/ 的/ 开始/ 状态/ ,/ 而/ 指向/ 最终/ 状态/ 的/ 状态/ 则/ 转换/ 成为/ 其/ 所在/ 层次/ 的/ 对应/ FSM/ 的/ 接受/ 状态/ ./ 这样/ ,/ 原/ UML/ 状态图/ 的/ 拓扑/ 结构/ 便/ 完全/ 由/ 其/ Page4/ 对应/ 的/ HFSM/ 模型/ 存储/ 起来/ ,/ 在/ 这个/ HFSM/ 的/ 基础/ 上/ ,/ 便/ 可/ 获取/ 原/ UML/ 状态图/ 中/ 任意/ 两个/ 状态/ 间/ 的/ 层次/ 关系/ ,/ 这个/ 层次/ 关系/ 可/ 由/ 函数/ χ/ 表示/ ./ 定义/ 4/ ./ 给定/ 一个/ 层次/ 有限/ 状态机/ HFSM/ (/ F/ ,/ / )/ ,/ 函数/ χ/ :/ ∪/ A/ ∈/ FQ/ (/ A/ )/ →/ / (/ ∪/ A/ ∈/ FQ/ (/ A/ )/ )/ ,/ χ/ (/ s/ )/ =/ {/ s/ |/ / A/ ∈/ F/ ·/ A/ ∈/ / (/ s/ )/ ∧/ s/ ∈/ Q/ (/ A/ )/ }/ ./ 于是/ ,/ UML/ 状态图/ 的/ 图形/ 信息/ 不仅/ 形式化/ 为/ 数学/ 表达形式/ ,/ 而且/ 可以/ 利用/ 自定义/ 函数/ 判断/ 状态/ 间/ 的/ 关系/ 并/ 得到/ 任意/ 状态/ 的/ 所有/ 子/ 状态/ 及其/ 父/ 状态/ ./ 定义/ 5/ ./ 给定/ 一个/ 层次/ 有限/ 状态机/ HFSM/ (/ F/ ,/ / )/ ,/ 满足条件/ C/ / ∪/ A/ ∈/ FQ/ (/ A/ )/ 的/ 状态/ 集合/ C/ 是/ 它/ 的/ 一个/ 格局/ (/ Configuration/ )/ 当且/ 仅/ 当/ :/ (/ 1/ )/ / 1s/ ∈/ Q/ (/ / root/ )/ ·/ s/ ∈/ C/ ;/ (/ 2/ )/ s/ ∈/ C/ ∧/ A/ ∈/ / (/ s/ )/ / / 1s/ ∈/ Q/ (/ A/ )/ ·/ s/ ∈/ C/ ;/ (/ 3/ )/ s/ ∈/ C/ ∧/ / s/ ·/ s/ ∈/ χ/ (/ s/ )/ / s/ ∈/ C/ ./ 定义/ 6/ ./ 给定/ 一个/ 层次/ 有限/ 状态机/ HFSM/ (/ F/ ,/ / )/ 和/ 它/ 所有/ 格局/ 的/ 集合/ C/ ,/ 对于/ 其/ 任意/ 一个/ 状态/ s/ ,/ 函数/ config/ :/ ∪/ A/ ∈/ FQ/ (/ A/ )/ →/ / (/ ∪/ A/ ∈/ FQ/ (/ A/ )/ )/ ,/ config/ (/ s/ )/ =/ {/ ci/ |/ ci/ / C/ ∧/ s/ ∈/ ci/ }/ ./ 定义/ 7/ ./ 给定/ 一个/ 层次/ 有限/ 状态机/ HFSM/ (/ F/ ,/ / )/ ,/ 其/ 任意/ 一个/ 状态/ sd/ 的/ 缺省/ 格局/ (/ DefaultConfig/ -/ uration/ )/ 可/ 表示/ 为/ 函数/ deconfig/ :/ ∪/ A/ ∈/ FQ/ (/ A/ )/ →/ / (/ ∪/ A/ ∈/ FQ/ (/ A/ )/ )/ ,/ deconfig/ (/ sd/ )/ =/ X/ / / 1X/ :/ config/ (/ sd/ )/ ·/ / s/ ·/ (/ s/ ∈/ X/ ∧/ sd/ / χ/ / (/ s/ )/ / ∩/ q0/ (/ / i/ (/ s/ )/ )/ / X/ )/ ./ 定义/ 8/ ./ 给定/ 一个/ UML/ 状态图/ 及其/ 任意/ 一条/ 迁移/ t/ ,/ Uexit/ 是/ 指/ 状态/ 集合/ exit/ =/ {/ exiti/ |/ / j/ :/ N/ ·/ srcj/ (/ t/ )/ ∈/ χ/ / (/ exiti/ )/ ∧/ dstj/ (/ t/ )/ / χ/ / (/ exiti/ )/ }/ 中/ 层次/ 最高/ 的/ 状态/ ,/ Uenter/ 是/ 指/ 状态/ 集合/ enter/ =/ {/ enteri/ |/ / j/ :/ N/ ·/ srcj/ (/ t/ )/ / χ/ / (/ enteri/ )/ ∧/ targetj/ (/ t/ )/ ∈/ χ/ / (/ enteri/ )/ }/ 中/ 层次/ 最高/ 的/ 状态/ ./ 由/ 以上/ 定义/ 可知/ ,/ 一个/ 格局/ 实际上/ 是/ 由/ 层次/ 有限/ 状态机/ 中/ 的/ N/ (/ N/ / 1/ )/ 个/ 状态/ 组成/ ,/ 它/ 代表/ 着/ 某/ 一/ 时刻/ 系统/ 中/ 所有/ 被/ 激活/ 的/ 状态/ ./ 所有/ 格局/ 都/ 含有/ 层次/ 有限/ 状态机/ 顶层/ FSM/ 的/ 一个/ 状态/ ,/ 并且/ ,/ 若/ 某/ 复合/ 状态/ 存在/ 于/ 某/ 格局/ 中/ ,/ 则/ 其/ 对应/ 的/ 各/ FSM/ 中均/ 有/ 一个/ 状态/ 存在/ 于/ 该/ 格局/ 中/ ./ 函数/ config/ 是从/ 任意/ 状态/ s/ 到/ 所有/ 包含/ s/ 的/ 格局/ 集合/ 的/ 映射/ ,/ 函数/ deconfig/ 是从/ 任意/ 状态/ sd/ 到/ 包含/ sd/ 的/ 缺省/ 格局/ 的/ 映射/ ./ Uexit/ 表示/ 任意/ 迁移/ t/ 离开/ 的/ 所有/ 状态/ 中/ 层次/ 最高/ 的/ 状态/ ,/ 则/ Uenter/ 表示/ 任意/ 迁移/ t/ 进入/ 的/ 所有/ 状态/ 中/ 层次/ 最高/ 的/ 状态/ ./ 目标/ FSM/ 模型/ 的/ 每个/ 状态/ 均/ 是/ 原/ UML/ 状态图/ 对应/ HFSM/ 模型/ 的/ 一个/ 格局/ ,/ 那么/ 迁移/ 便是/ 触发/ 一个/ 格局/ 到/ 另/ 一个/ 格局/ 的/ 变化/ ,/ 由于/ 格局/ 是/ HFSM/ 模型/ 中/ 数个/ 状态/ 的/ 集合/ ,/ 所以/ 原/ UML/ 状态图/ 中/ 的/ 每个/ 迁移/ 可/ 被/ 映射/ 为/ 目标/ FSM/ 模型/ 的/ 数个/ 迁移/ ,/ 而此/ 数量/ 由原/ UML/ 状态图/ 中/ 的/ 该/ 迁移/ 的/ 源/ 状态/ 所属/ 的/ 格局/ 数量/ 决定/ ./ 设/ confTranSet/ 为/ 目标/ FSM/ 模型/ 的/ 迁移/ 集合/ ,/ 可/ 在/ 前期工作/ 得到/ 的/ 原/ UML/ 状态图/ 拓扑/ 结构/ 数学模型/ 的/ 基础/ 上/ 计算/ 出/ 集合/ confTranSet/ ./ 在/ 构建/ 出/ 目标/ FSM/ 模型/ 的/ 迁移/ 集合/ con/ -/ fTranSet/ 后/ ,/ 便/ 可/ 将/ 所有/ 与/ confTranSet/ 中/ 迁移/ 相关/ 的/ 状态/ 置于/ 一个/ 集合/ 内/ ,/ 这/ 便是/ 目标/ FSM/ 模型/ 的/ 状态/ 集合/ ./ 而/ 其/ 初始状态/ InitState/ 和/ 接受/ 状态/ AccState/ 则/ 可/ 由/ 以下/ 表达式/ 确定/ :/ InitState/ =/ deconfig/ (/ q0/ (/ / root/ )/ )/ ,/ AccState/ =/ config/ (/ q/ (/ / root/ )/ )/ ./ 上述/ 方法/ 基本上/ 将/ 原/ UML/ 状态图/ 的/ 迁移/ 与/ 状态/ 映射/ 为/ 目标/ FSM/ 模型/ 的/ 基本/ 元素/ ,/ 但/ 还有/ 一种/ 状态/ 没有/ 考虑/ 到/ ,/ 这/ 就是/ 历史/ 状态/ ./ 由于/ 历史/ 状态/ 与/ 普通/ 状态/ 的/ 语义/ 差异/ 很大/ ,/ 故/ 不/ 在/ 此处/ 提及/ ,/ 而是/ 为/ 其/ 专门/ 设计/ 一种/ 转换方法/ ,/ 并/ 于/ 模型/ 形式化/ 的/ 最后/ 阶段/ 执行/ ./ 至此/ ,/ 与/ 原/ UML/ 状态图/ 模型/ 语义/ 等价/ 的/ FSM/ 模型/ 就/ 创建/ 完成/ ./ 2.2/ UML/ 顺序/ 图/ 模型/ 的/ 形式化/ 顺序/ 图/ (/ sequencediagram/ )/ 是/ 强调/ 消息/ 的/ 时间/ 次序/ 的/ 交互/ 图/ ./ 顺序/ 图/ 的/ 建模/ 对象/ 是/ 系统/ 中/ 指定/ 对象/ 的/ 交互/ 行为/ 所/ 构成/ 的/ 场景/ ,/ 从而/ 反映/ 与/ 此/ 场景/ 相对/ 应/ 的/ 系统/ 功能/ ,/ 非常适合/ 于/ 描述/ 测试/ 目标/ (/ testpurposes/ )/ ./ 本文/ 采用/ UML/ 顺序/ 图来/ 描述/ 测试/ 目标/ ,/ 并/ 将/ 该/ UML/ 顺序/ 图/ 转换成/ 描述/ 该/ 测试/ 目标/ 的/ FSM/ ./ 然后/ 与/ Web/ 应用/ 的/ 原/ 系统/ FSM/ 模型/ 进行/ 归约/ 组合/ ,/ 即/ 把/ UML/ 顺序/ 图/ 转换/ 得到/ 的/ 描述/ 测试/ 目标/ 的/ FSM/ 投影/ 到/ Web/ 应用/ 的/ 系统/ FSM/ 模型/ ,/ 产生/ 基于/ 测试/ 目标/ 的/ FSM/ ./ 在/ 此/ ,/ 引入/ 用于/ 存储/ UML/ 顺序/ 图/ 的/ 描述/ 结构/ ./ 定义/ 9/ ./ 一个/ 顺序/ 图是/ 一个/ 三元组/ (/ Obj/ ,/ Msg/ ,/ Act/ )/ ,/ 其中/ Obj/ 是/ 在/ 该/ 顺序/ 图/ 描述/ 场景/ 中/ 出现/ 的/ 对象/ 集合/ ;/ Msg/ 是/ 在/ 该/ 顺序/ 图/ 描述/ 场景/ 中/ 出现/ 的/ 消息/ 集合/ ;/ Act/ 是/ 该/ 顺序/ 图/ 描述/ 场景/ 中/ 出现/ 的/ 发送/ 并/ 接收/ 消息/ 的/ 动作/ 集合/ ,/ 其中/ 每/ 一个/ 元素/ 可/ 表示/ 成/ Page5/ 为/ 一个/ 四元组/ (/ objorigin/ :/ Obj/ ,/ objdest/ :/ Obj/ ,/ msg/ :/ Msg/ ,/ order/ )/ ,/ 其中/ objorigin/ 是/ 发送/ 消息/ 的/ 对象/ ,/ objdesk/ 是/ 接收/ 消息/ 的/ 对象/ ,/ msg/ 是/ 发送/ 的/ 消息/ 内容/ ,/ order/ 是/ 一个/ 数字/ ,/ 它/ 用来/ 表示/ 这个/ 动作/ 在/ 顺序/ 图中/ 出现/ 的/ 所有/ 动作/ 中/ 的/ 次序/ 编号/ ./ 对于/ 任意/ 一个/ acti/ ∈/ Act/ ,/ 假设/ 它/ 可/ 写作/ 四元组/ (/ obj1/ ,/ obj2/ ,/ msgi/ ,/ num/ )/ ,/ 那么/ orgin/ (/ acti/ )/ =/ obj1/ ,/ dest/ (/ acti/ )/ =/ obj2/ ,/ message/ (/ acti/ )/ =/ msgi/ ,/ order/ (/ acti/ )/ =/ num/ ,/ 其中/ num/ 可由该/ 动作/ 所在位置/ 确定/ :/ / acti/ ,/ actj/ ∈/ Act/ ·/ (/ actj/ 的/ 位置/ 在/ acti/ 的/ 直接/ 下方/ )/ / order/ (/ actj/ )/ =/ order/ (/ acti/ )/ +/ 1/ ./ 虽然/ 所有/ 的/ UML/ 顺序/ 图均/ 用以/ 描述/ 对象/ 间/ 的/ 交互/ 活动/ ,/ 但/ 展现/ 的/ 场景/ 不同/ ,/ 情况/ 也/ 不尽相同/ ./ 一种/ 情况/ 是/ 顺序/ 图/ 表示/ 待/ 检测/ 系统/ 内部/ 对象/ 之间/ 的/ 交互/ ,/ 那么/ 在/ 形式化/ 过程/ 中/ ,/ 它/ 的/ 所有/ 元素/ 都/ 需/ 考虑/ 在内/ ;/ 另/ 一种/ 情况/ 是/ 它/ 表示/ 待/ 检测/ 系统/ 与/ 系统/ 以外/ 的/ 对象/ 间/ 的/ 交互/ ,/ 这时/ 只/ 需/ 提取/ 那些/ 与/ 代表/ 系统/ 生命线/ 的/ 直线/ 相交/ 的/ 动作/ ,/ 并/ 以/ 发出/ 或/ 接收/ 将/ 这些/ 动作/ 分类/ (/ 任意/ msgi/ ∈/ Msg/ 前/ 的/ “/ ?/ ”/ 符号/ 表示/ 该/ 消息/ 对应/ 的/ 接收/ 动作/ ,/ 任意/ msgi/ ∈/ Msg/ 前/ 的/ “/ !/ ”/ 符号/ 表示/ 该/ 消息/ 对应/ 的/ 发出/ 动作/ )/ ./ 由于/ 顺序/ 图中/ 对于/ 后续/ 模型/ 归约/ 组合/ 的/ 有用/ 信息/ 只有/ 消息/ ,/ 因此/ 目标/ FSM/ 模型/ 中/ 的/ 状态/ 无需/ 具有/ 任何/ 含义/ ./ 本文/ 用/ 从/ 序号/ 0/ 开始/ 的/ 数字/ 来/ 表示/ ,/ 以/ 简化/ 算法/ ./ 下面/ 是/ 第/ 1/ 种/ 情况/ 下/ UML/ 顺序/ 图/ 的/ 形式化/ 机制/ :/ 创建/ 一个/ 新/ 的/ FSM/ 模型/ ,/ 写作/ (/ Q/ ,/ L/ ,/ δ/ ,/ q0/ ,/ q/ )/ ,/ 并/ 进行/ 如下/ 初始化/ :/ Q/ =/ {/ 0/ }/ ,/ L/ =/ / ,/ δ/ =/ / ,/ q0/ =/ q/ =/ 0/ ./ 遍历/ UML/ 顺序/ 图/ 的/ 动作/ 集合/ Act/ 并/ 依据/ 其中/ 每个/ 元素/ act/ (/ act/ ∈/ Act/ )/ 对/ 新建/ 的/ FSM/ 模型/ 进行/ 如下/ 操作/ :/ Q/ =/ Q/ ∪/ {/ order/ (/ act/ )/ }/ ,/ L/ =/ L/ ∪/ {/ ?/ message/ (/ act/ )/ }/ ,/ δ/ =/ δ/ ∪/ {/ (/ order/ (/ act/ )/ -/ 1/ ,/ ?/ message/ (/ act/ )/ )/ →/ order/ (/ act/ )/ }/ ,/ q/ =/ order/ (/ act/ )/ ./ 这样/ 得到/ 的/ FSM/ 模型/ 便是/ 转换/ 后/ 的/ 形式化/ 的/ 测试用例/ 规格/ 说明/ ./ 在/ 第/ 2/ 种/ 情况/ 下/ ,/ 有/ 价值/ 的/ 信息/ 仅限于/ 待/ 检测/ 系统/ 发出/ 和/ 收到/ 的/ 消息/ ,/ 这些/ 消息/ 实际上/ 代表/ 着/ 系统/ 的/ 行为/ ./ 正/ 因为/ 我们/ 需要/ 将/ 原/ UML/ 顺序/ 图中/ 的/ 每个/ 动作/ 拆解/ 成为/ 两个/ 有/ 向/ 动作/ ,/ 即/ 一个/ 发出/ 动作/ 与/ 一个/ 接收/ 动作/ ,/ 消息/ 的/ 顺序/ 已/ 不再/ 能单/ 从/ 其/ 对应/ 动作/ 的/ 位置/ 来/ 判断/ 了/ ./ 虽然/ 以上/ 规则/ 可以/ 判定/ 大部分/ 动作/ 的/ 先后顺序/ ,/ 但/ 刚才/ 提到/ 的/ 情景/ 只有/ 相关/ 消息/ 的/ 传递/ 时间/ 已知/ 的/ 情况/ 下/ 才能/ 决定/ 它们/ 相应/ 发出/ 和/ 接收/ 动作/ 的/ 排序/ ./ 因此/ ,/ 除非/ 获得/ 时间/ 信息/ ,/ 否则/ 需要/ 将/ 所有/ 可能/ 的/ 动作/ 序列/ 均/ 写出/ ,/ 再/ 分别/ 建立/ 对应/ 的/ FSM/ 模型/ ./ 对于/ 根据/ 动作/ 顺序/ 判定/ 规则/ 得出/ 的/ 任意/ 动作/ 序列/ si/ ,/ 建立/ 一个/ 新/ 的/ FSM/ 模型/ 并/ 初始化/ 为/ :/ Q/ =/ {/ 0/ }/ ,/ L/ =/ / ,/ δ/ =/ / ,/ q0/ =/ 0/ ,/ q/ =/ 0/ ,/ 采用/ 上述/ 方法/ 可/ 遍历/ si/ 中/ 的/ 所有/ 元素/ ./ 这样/ ,/ 便/ 把/ 第/ 2/ 种/ 情况/ 的/ UML/ 顺序/ 图/ (/ 测试/ 目标/ )/ 形式化/ 为/ FSM/ 模型/ ./ 2.3/ 模型/ 归约/ 组合/ 由于/ 顺序/ 图/ 表示/ 的/ 动作/ 序列/ 的/ 不/ 唯一性/ ,/ 可能/ 对于/ 一个/ 测试/ 可能/ 目标/ 会/ 产生/ 多个/ FSM/ 模型/ ,/ 这些/ 模型/ 都/ 将/ 分别/ 被/ 当作/ 一个/ 形式化/ 后/ 的/ 测试/ 目标/ 对系统/ FSM/ 模型/ 进行/ 归约/ 组合/ 操作/ ./ 因此/ ,/ 下面/ 给出/ 的/ 归约/ 组合/ 机制/ 是/ 单个/ 测试/ 目标/ 的/ FSM/ 模型/ 对原/ 系统/ FSM/ 模型/ 的/ 归约/ 组合/ 操作/ ,/ 若需/ 多次/ 归约/ 组合/ ,/ 叠加/ 使用/ 即可/ ./ 得到/ 了/ 形式化/ 的/ 测试/ 目标/ 后/ ,/ 便/ 可以/ 开始/ 对原/ 系统/ FSM/ 模型/ 进行/ 归约/ 组合/ ./ 首先/ 引入/ 一些/ 后面/ 要/ 用到/ 的/ 基本概念/ ./ 定义/ 10/ ./ 给定/ 一个/ 有限/ 状态机/ A/ =/ (/ Q/ ,/ L/ ,/ δ/ ,/ q0/ ,/ q/ )/ ,/ 一个/ 执行/ 片段/ frag/ =/ q1l1q2l2/ …/ qn/ 是/ 状态/ 与/ 迁移/ 交替/ 有限/ 序列/ qiliqi/ +/ 1li/ +/ 1/ …/ qn/ (/ 0/ / i/ / n/ )/ 满足条件/ (/ (/ qi/ ,/ li/ ,/ qi/ +/ 1/ )/ ∈/ δ/ (/ 0/ / i/ / n/ )/ ,/ 并且/ q1/ =/ q0/ ./ 如果/ 执行/ 片段/ 满足/ qn/ =/ q0/ 或/ qn/ =/ q/ ,/ 那么/ 称/ frag/ 是/ A/ 的/ 一个/ 运行/ ./ 定义/ 11/ ./ 给定/ 两个/ 序列/ S1/ 与/ S2/ ,/ 定义/ 关系/ _/ ∝/ _/ :/ sequence/ / sequenceS1/ ∝/ S2/ / / itemi/ ,/ itemj/ ∈/ ran/ (/ S1/ )/ ∧/ S/ -/ 11/ (/ itemi/ )/ </ S/ -/ 11/ (/ itemj/ )/ ·/ itemi/ ,/ itemj/ ∈/ ran/ (/ S2/ )/ ∧/ S/ -/ 12/ (/ itemi/ )/ </ S/ -/ 12/ (/ itemj/ )/ ./ 定义/ 12/ ./ 给定/ 一个/ 有限/ 状态机/ A/ =/ (/ Q/ ,/ L/ ,/ δ/ ,/ q0/ ,/ q/ )/ 及其/ 所有/ 执行/ 片段/ 组成/ 的/ 集合/ FragA/ ,/ 函数/ reach/ :/ Q/ →/ Q/ 定义/ 为/ reach/ (/ qi/ )/ =/ {/ qj/ ∈/ Q/ |/ / frag/ ∈/ Frag/ ·/ qi/ ,/ qj/ ∈/ frag/ ∧/ i/ </ j/ }/ }/ ./ 定义/ 13/ ./ 给定/ 两个/ 有限/ 状态机/ A/ =/ (/ Q/ ,/ L/ ,/ δ/ ,/ q0/ ,/ q/ )/ ,/ A/ =/ (/ Q/ ,/ L/ ,/ δ/ ,/ q0/ ,/ q/ )/ ,/ A/ 与/ A/ 的/ 积/ A/ ×/ A/ 也/ 是/ 一个/ 有限/ 状态机/ 模型/ :/ (/ QA/ ×/ A/ ,/ LA/ ×/ A/ ,/ δ/ A/ ×/ A/ ,/ q0/ (/ A/ ×/ A/ )/ ,/ qA/ ×/ A/ )/ ,/ 其中/ QA/ ×/ A/ =/ Q/ ×/ Q/ ;/ LA/ ×/ A/ =/ L/ ∪/ L/ ;/ δ/ A/ ×/ A/ =/ {/ (/ (/ qi/ ,/ qi/ )/ ,/ Δ/ l/ )/ →/ (/ qj/ ,/ qj/ )/ |/ qi/ ,/ qj/ ∈/ Q/ ∧/ qi/ ,/ qj/ ∈/ Q/ ∧/ (/ (/ (/ (/ qi/ ,/ (/ “/ ?/ ”/ ∪/ Δ/ l/ )/ )/ →/ qj/ )/ ∈/ δ/ )/ ∧/ (/ (/ qi/ ,/ (/ “/ !/ ”/ ∪/ Δ/ l/ )/ )/ →/ qj/ )/ ∈/ δ/ )/ ∨/ (/ (/ (/ qi/ ,/ (/ “/ !/ ”/ ∪/ Δ/ l/ )/ )/ →/ qj/ )/ ∈/ δ/ ∧/ (/ (/ qi/ ,/ (/ “/ ?/ ”/ ∪/ Δ/ l/ )/ )/ →/ qj/ )/ ∈/ δ/ )/ }/ ∪/ {/ (/ (/ qi/ ,/ qi/ )/ ,/ Δ/ l/ )/ →/ (/ qj/ ,/ qi/ )/ |/ qi/ ,/ qj/ ∈/ Q/ ∧/ qi/ ∈/ Q/ ∧/ (/ (/ qi/ ,/ Δ/ l/ )/ →/ qj/ )/ ∈/ δ/ }/ ∪/ {/ (/ (/ qi/ ,/ qi/ )/ ,/ Δ/ l/ )/ →/ (/ qi/ ,/ qj/ )/ |/ qi/ ∈/ Q/ ∧/ qi/ ,/ qj/ ∈/ Q/ ∧/ (/ (/ qi/ ,/ Page6/ Δ/ l/ )/ →/ qj/ )/ ∈/ δ/ }/ ;/ 函数/ cover/ :/ (/ Cir/ ,/ FragA/ )/ →/ 0/ // 1q0/ (/ A/ ×/ A/ )/ =/ (/ q0/ ,/ q0/ )/ ;/ qA/ ×/ A/ =/ (/ q/ ,/ q/ )/ ./ 定义/ 14/ ./ 给定/ 一个/ 有限/ 状态机/ A/ =/ (/ Q/ ,/ L/ ,/ δ/ ,/ q0/ ,/ q/ )/ 及其/ 所有/ 执行/ 片段/ 组成/ 的/ 集合/ FragA/ ,/ 对于/ 每/ 一个/ frag/ ∈/ FragA/ ,/ 可/ 将/ 其/ 写作/ qiliqi/ +/ 1li/ +/ 1/ …/ qn/ (/ 0/ / i/ / n/ )/ ,/ 它/ 的/ 所有/ 标签/ 组成/ 的/ 序列/ 称为/ 这个/ 执行/ 片段/ frag/ 的/ 轨迹/ ,/ 记为/ trace/ (/ frag/ )/ =/ lili/ +/ 1/ …/ ln/ -/ 1/ ./ 定义/ 15/ ./ 给定/ 两个/ 有限/ 状态机/ A/ =/ (/ Q/ ,/ L/ ,/ δ/ ,/ q0/ ,/ q/ )/ ,/ A/ / =/ (/ Q/ / ,/ L/ / ,/ δ/ / ,/ q/ / 0/ ,/ q/ )/ ,/ 设/ FragA/ 与/ FragA/ ×/ A/ / 分别/ 是/ A/ 与/ A/ ×/ A/ / 的/ 所有/ 执行/ 片段/ 组成/ 的/ 集合/ ,/ Cir/ 是/ A/ ×/ A/ / 的/ 所有/ 运行/ 组成/ 的/ 集合/ ./ 对于/ 每/ 一个/ 执行/ 片段/ frag/ ∈/ FragA/ ×/ A/ / ,/ 它/ 在/ A/ 上/ 的/ 投影/ 是/ 其/ 出现/ 于/ A/ 上/ 的/ 那/ 部分/ 标签/ 序列/ ,/ 数学/ 表达式/ 可写/ 为/ ./ π/ A/ (/ trace/ (/ frag/ )/ )/ =/ (/ frag/ )/ \/ {/ l/ |/ l/ ∈/ A/ ∧/ l/ / A/ / }/ ./ cover/ (/ cir/ ,/ frag/ )/ =/ {/ 1/ |/ cir/ ∈/ Cir/ ∧/ frag/ ∈/ FragA/ ∧/ / frag/ ∈/ FragA/ ×/ A/ / ·/ frag/ ∝/ cir/ ∧/ π/ A/ (/ trace/ (/ frag/ )/ )/ =/ trace/ (/ frag/ )/ }/ FSM/ 模型/ 的/ 执行/ 片段/ 可以/ 代表/ 其/ 描述/ 的/ 对应/ 系统/ 的/ 行为/ ,/ 因此/ ,/ 归约/ 组合/ 原/ FSM/ 模型/ 意味着/ ,/ 经/ 归约/ 组合/ 后/ 的/ 模型/ 应该/ 包括/ 描述/ 测试/ 目标/ 中/ 要求/ 测试/ 的/ 功能/ 的/ 所有/ 元素/ ,/ 并且/ 将/ 其余/ 无关/ 元素/ 全部/ 清除/ ./ 给定/ 一个/ 执行/ 片段/ frag/ 和/ 一个/ 运行/ cir/ ,/ 表达式/ frag/ ∝/ cir/ 与/ cover/ (/ frag/ ,/ cir/ )/ 的/ 唯一/ 不同点/ 在于/ ,/ 前者/ 同时/ 考虑/ frag/ 与/ cir/ 的/ 状态/ 与/ 迁移/ ,/ 以及/ 它们/ 之间/ 的/ 关系/ ,/ 而/ 后者/ 仅/ 关注/ 执行/ 片段/ 与/ 运行/ 中/ 迁移/ 的/ 标签/ 序列/ 间/ 的/ 关系/ ,/ 并/ 不/ 包含/ 相关/ 的/ 状态/ 信息/ ./ 然而/ ,/ 我们/ 在/ 确定/ 归约/ 组合/ 后/ 模型/ 中/ 需要/ 保留/ 的/ 标签/ 序列/ 后/ ,/ 将会/ 在/ 创建/ 新/ 模型/ 时/ 加入/ 与/ 这些/ 标签/ 相关/ 的/ 状态/ 信息/ ,/ 这/ 便/ 意味着/ ,/ 要/ 得到/ 用户/ 要求/ 的/ 简单/ 模型/ ,/ 可以/ 首先/ 计算/ 出/ 一个/ 模型/ A/ / 使得/ 操作/ A/ ×/ A/ / 满足/ 如下/ 条件/ (/ 这里/ 用/ CirA/ ×/ A/ / 表示/ 模型/ A/ ×/ A/ / 的/ 所有/ 运行/ 组成/ 的/ 集合/ )/ :/ / frag/ ∈/ FragRD/ ·/ (/ / cirA/ ∈/ CirA/ ∧/ frag/ ∝/ cirA/ )/ ·/ (/ / cir/ ∈/ CirA/ ×/ A/ ·/ cover/ (/ cir/ ,/ frag/ )/ )/ 以及/ / / A/ / ·/ (/ / frag/ ∈/ FragRD/ ·/ (/ / cirA/ ∈/ CirA/ ∧/ frag/ ∝/ cirA/ )/ ·/ (/ / cirA/ ∈/ CirA/ ×/ A/ / ·/ cover/ (/ CirA/ ×/ A/ / ,/ frag/ )/ )/ ·/ (/ / frag/ ∈/ FragRD/ ·/ (/ / cirA/ ∈/ CirA/ ·/ frag/ ∝/ cirA/ )/ ·/ (/ / / cir/ ∈/ CirA/ ×/ A/ / ·/ cover/ (/ cir/ ,/ frag/ )/ )/ )/ )/ ./ 当/ 测试/ 目标/ 指定/ 的/ 执行/ 片段/ 确定/ 后/ ,/ 便/ 可/ 构造/ 出/ 模型/ A/ / ,/ 它/ 是/ 由/ 所有/ 包含/ 这些/ 片段/ 的/ 运行/ 轨迹/ 所/ 组成/ 的/ ,/ 其所/ 需/ 满足/ 的/ 性质/ 可/ 表示/ 为/ 如下/ 形式化/ 的/ 数学/ 表达式/ :/ (/ / l/ ∈/ LA/ ·/ l/ ∈/ cir/ ∈/ {/ cir/ ∈/ CirA/ |/ / frag/ ∈/ FragRD/ ·/ trace/ (/ frag/ )/ ∝/ trace/ (/ cir/ )/ }/ ·/ l/ ∈/ LA/ / )/ ∧/ (/ / l/ ∈/ LA/ ·/ l/ ∈/ cir/ ∈/ {/ cir/ ∈/ CirA/ |/ / / frag/ ∈/ FragRD/ ·/ trace/ (/ frag/ )/ ∝/ trace/ (/ cir/ )/ }/ ·/ l/ / LA/ / )/ ./ 由此/ 可以/ 得出/ ,/ 整个/ 归约/ 组合/ 工作/ 应该/ 从/ 以下/ 两个/ 集合/ 的/ 构建/ 开始/ :/ 集合/ Cir/ / ,/ 它/ 是/ 一组/ 满足/ 特定条件/ 的/ 运行/ 所/ 组成/ 的/ 集合/ {/ cir/ ∈/ CirA/ |/ / frag/ ∈/ FragRD/ ·/ trace/ (/ frag/ )/ ∝/ trace/ (/ cir/ )/ }/ ;/ 集合/ Cir/ / ,/ 它/ 是/ 集合/ Cir/ / 的/ 补集/ ,/ 可/ 表示/ 为/ {/ cir/ ∈/ CirA/ |/ / / frag/ ∈/ FragRD/ ·/ trace/ (/ frag/ )/ ∝/ trace/ (/ cir/ )/ }/ ./ 但是/ ,/ 在/ 求解/ 上述/ 两个/ 集合/ 之前/ ,/ 我们/ 必须/ 注意/ 到/ 由/ 模型/ 形式化/ 后/ 得到/ 的/ 原/ 系统/ FSM/ 模型/ 中/ ,/ 各/ 迁移/ 的/ 标签/ 是/ 不/ 包含/ 其类/ 属/ 信息/ 的/ ,/ 即/ 无法/ 判断/ 该/ 迁移/ 对应/ 的/ 触发/ 事件/ 是/ 输入/ 、/ 输出/ 或是/ 内部/ 事件/ ./ 另一方面/ ,/ 计算/ A/ ×/ A/ / 时/ 是/ 将/ 两者/ 迁移/ 中/ 的/ 输入输出/ 事件/ 进行/ 比较/ 与/ 匹配/ ,/ 并/ 合并/ 相同/ 的/ 迁移/ 项/ ./ 另外/ ,/ 对/ 测试/ 目标/ 进行/ 形式化/ 时/ ,/ 由于/ 顺序/ 图/ 的/ 固有/ 属性/ 就是/ 描述/ 了/ 消息/ 发出/ 与/ 接收/ ,/ 其/ 转化/ 而来/ 的/ FSM/ 模型/ 也/ 是/ 包含/ 了/ 输入输出/ 信息/ 的/ ,/ 我们/ 需要/ 将/ 它/ 与/ 原/ FSM/ 模型/ 进行/ 比较/ 与/ 匹配/ 方/ 能/ 获取/ 上述/ 两个/ 集合/ ./ 因此/ ,/ 在/ 原/ FSM/ 模型/ 中/ 添加/ 迁移/ 上/ 标签/ 的/ 输入输出/ 类别/ 十分必要/ ./ 根据/ 原/ UML/ 状态图/ 中/ 迁移/ 标签/ 各/ 部分/ 的/ 含义/ ,/ 事件/ 代表/ 对系统/ 的/ 外部/ 刺激/ ,/ 即/ 输入/ ;/ 动作/ 则/ 代表/ 系统对/ 该/ 外部/ 刺激/ 的/ 反应/ ,/ 即/ 输出/ ./ 在/ 模型/ 形式化/ 的/ 过程/ 中/ ,/ 原/ UML/ 模型/ 迁移/ 与/ 转换/ 后/ FSM/ 模型/ 中/ 对应/ 迁移/ 的/ 标签/ 是/ 一致/ 的/ ,/ 故原/ 系统/ FSM/ 模型/ 的/ 迁移/ 标签/ 也/ 可/ 按/ UML/ 状态图/ 语义/ 加以/ 分解/ ./ 我们/ 在/ 此/ 把/ 事件/ 视为/ 输入/ 消息/ ,/ 而/ 把/ 动作/ 视为/ 输出/ 消息/ ,/ 并/ 标记/ 于原/ 系统/ FSM/ 模型/ 中/ ./ 根据上述/ 方法/ ,/ 可/ 计算/ 集合/ Cir/ / 与/ Cir/ / 此时/ 便/ 可/ 根据/ 这/ 两个/ 集合/ 创建/ 模型/ A/ / ,/ 使/ 操作/ A/ ×/ A/ / 执行/ 后/ 的/ 结果/ 模型/ 只/ 描述/ 测试/ 目标/ 中/ 要求/ 的/ 功能/ ./ 为此/ ,/ 我们/ 设计/ 了/ 一个/ 计算/ 模型/ A/ / 中应/ 存在/ 的/ 迁移/ 序列/ 的/ 算法/ ,/ 大致/ 原理/ 是/ :/ 每/ 一个/ 在/ 集合/ Cir/ / 的/ 任意/ 运行/ 中/ 出现/ 的/ 标签/ 都/ 在/ 模型/ A/ / 中/ ,/ 而/ 那些/ 只/ 在/ 集合/ Cir/ / 的/ 运行/ 中/ 出现/ 却/ 不/ 在/ 集合/ Cir/ / 的/ 任意/ 运行/ 中/ 出现/ 的/ 标签/ 则/ 被/ 排除/ 在/ 模型/ A/ / 之外/ ./ 根据上述/ 方法/ 对/ 集合/ Cir/ / 中/ 每/ 一个/ 元素/ ,/ 可/ 计算/ 出/ 所有/ 原/ FSM/ 模型/ 中应/ 保留/ 在/ 归约/ 组合/ 后/ 模型/ 中/ 的/ 迁移/ 的/ 集合/ ./ 然后/ ,/ 识别/ 出该/ 集合/ 中/ 所有/ 附带/ 输入输出/ 标记/ 的/ 迁移/ ,/ 并/ 将/ 每个/ 标记/ 取反/ ,/ 即/ 输入/ 符号/ 改为/ 输出/ 符号/ ,/ 输出/ 符号/ 则/ 改为/ 输入/ 符号/ ,/ 经此/ 取反/ Page7/ 处理/ 后/ 的/ 迁移/ 集合/ 就/ 构成/ 了/ 模型/ A/ / ./ 最后/ ,/ 对模型/ A/ 与/ 模型/ A/ / 执行/ 操作/ A/ ×/ A/ / ,/ 计算结果/ 即/ 为/ 按/ 测试/ 目标/ 归约/ 组合/ 后/ 的/ FSM/ 模型/ A/ ./ 但/ 此时/ 的/ A/ 也/ 将/ 输入输出/ 标记/ 保留/ ,/ 标签/ 处于/ 分离/ 状态/ ,/ 而且/ ,/ 由于/ 它/ 是/ 两个/ 模型/ 执行/ A/ ×/ A/ / 而/ 来/ ,/ 故/ 状态/ 是/ 复合/ 的/ ,/ 其/ 名字/ 为/ 两个/ 原/ 状态/ 名/ 的/ 叠加/ ./ 这样/ ,/ 就/ 完成/ 了/ 模型/ 的/ 归约/ 组合/ ./ 3/ 测试/ 生成/ 我们/ 针对/ 的/ 是/ 在/ 某/ 一/ 抽象层次/ 上/ 的/ FSM/ 的/ 测试用例/ 生成/ ./ 把/ 测试用例/ 的/ 生成/ 看成/ 是从/ FSM/ 中/ 选择/ 满足/ 给定/ 覆盖/ 测试/ 准则/ 的/ 有限/ 执行/ 序列/ 的/ 过程/ ./ 软件/ 的/ 形式/ 模型/ 或/ 规格/ 说明/ 是/ 自动/ 生成/ 测试用例/ 的/ 基础/ ,/ 这种/ 技术/ 被/ 称为/ 基于/ 模型/ 的/ 测试/ ./ 有限/ 状态机/ FSM/ 、/ 标签/ 迁移/ 系统/ LTS/ 和/ 面向/ 模型/ 的/ 规格/ 说明/ 语言/ 如/ VDM/ -/ SL/ 、/ Z/ 或/ Alloy/ 都/ 可/ 作为/ 测试/ 自动/ 生成/ 的/ 形式/ 模型/ [/ 31/ -/ 37/ ]/ ./ FSM/ 模型/ 具有/ 成熟/ 的/ 理论/ 基础/ ,/ 可以/ 利用/ 形式语言/ 和/ 自动机/ 理论/ 来/ 设计/ 、/ 操纵/ 和/ 分析/ ,/ 便于/ 用/ 模型/ 检验/ 技术/ 进行/ 验证/ ,/ 又/ 有/ 可视化/ 的/ 效果/ ,/ 非常适合/ 用来/ 描述/ 软件/ 和/ 构建/ 测试/ 模型/ ./ 在/ 基于/ FSM/ 的/ Web/ 应用/ 测试用例/ 生成/ 中/ ,/ 我们/ 的/ 方法/ 是/ 解析/ FSM/ 的/ SCXML/ 规格/ 说明/ ,/ 生成/ 满足/ 测试/ 准则/ 的/ 测试用例/ ./ 本节/ 生成/ 的/ 测试用例/ 都/ 是/ 抽象/ 的/ ,/ 需要/ 具体化/ 才能/ 执行/ ./ 通常/ ,/ 若/ 不/ 引起/ 误解/ ,/ 就/ 用/ 测试用例/ 来/ 表示/ 抽象/ 测试用例/ 的/ 概念/ ./ 定义/ 16/ (/ 迁移/ 序列/ )/ ./ 在/ FSM/ 中/ ,/ 由/ 若干个/ 从/ 一个/ 状态/ 到/ 另/ 一个/ 状态/ 的/ 迁移/ 组成/ 的/ 序列/ 称为/ 迁移/ 序列/ ./ 出发/ 的/ 一个/ 迁移/ 序列/ 称为/ 迁移/ 路径/ ./ 定义/ 17/ (/ 迁移/ 路径/ )/ ./ 在/ FSM/ 中/ ,/ 从/ 初始状态/ 定义/ 18/ (/ 完全/ 路径/ )/ ./ 在/ FSM/ 中/ ,/ 最后/ 一个/ 迁移/ 指向/ 终止/ 状态/ 的/ 一个/ 迁移/ 路径/ 称为/ 完全/ 路径/ ./ 本节/ 只/ 涉及/ 抽象/ 测试用例/ 的/ 生成/ ./ 得到/ 的/ 测试用例/ 经/ 实例/ 化后/ 可/ 成为/ 具体/ 测试用例/ ./ 一个/ 抽象/ 测试用例/ 可以/ 实例/ 化/ 多个/ 具体/ 测试用例/ ./ 由/ 迁移/ 组成/ 的/ 序列/ 隐含地/ 包含/ 了/ 状态/ 信息/ ,/ 因为/ 一个/ 迁移/ 必定/ 存在/ 它/ 的/ 激发/ 源/ (/ 即源/ 状态/ )/ ,/ 也/ 必定/ 存在/ 它/ 的/ 迁移/ 目标/ (/ 即/ 目标/ 状态/ )/ ./ 另一方面/ ,/ 状态/ 到/ 状态/ 的/ 转换/ ,/ 必定/ 要/ 经过/ 一个/ 特定/ 的/ 迁移/ ./ 因此/ ,/ 基于/ 以上/ 考虑/ ,/ 本文/ 在/ 测试用例/ 生成/ 中/ ,/ 给出/ 如下/ 约定/ ./ 约定/ ./ 在/ 根据/ 测试/ 准则/ 生成/ 测试用例/ 时/ ,/ 最终/ 测试用例/ 约定/ 统一/ 写成/ :/ state/ 〈/ transition/ 〉/ state/ 〈/ transition/ 〉/ …/ state/ ./ 为了/ 便于/ 理解/ 后续/ 测试用例/ 的/ 生成/ 方法/ ,/ 下面/ 以/ “/ 兴宁市/ 水库/ 移民/ 信息管理系统/ ”/ 的/ 登录/ 模块/ 为/ 例来/ 进行/ 说明/ (/ 如图/ 1/ 所示/ )/ ,/ 图/ 1/ 中/ 的/ n/ 表示/ user/ -/ name/ ,/ p/ 表示/ password/ ./ 用户/ 在/ Web/ 浏览器/ 的/ 地址栏/ 输入/ 相应/ 的/ URL/ ,/ 回车/ 后/ ,/ 系统/ 进入/ 主页/ Main/ -/ Page/ ,/ 用户/ 点击/ login/ 链接/ 后/ ,/ 登录/ 页面/ Login/ 将/ 显示/ 在/ Web/ 浏览器/ 中/ ,/ 在/ Login/ 页面/ 上/ 有/ 一个/ textfield/ 和/ 一个/ passwordfield/ ,/ 分别/ 用于/ 输入/ 用户名/ 和/ 密码/ ./ 当/ 用户/ 输入/ 完/ 用户名/ ,/ 光标/ 移到/ passwordfield/ 时/ ,/ 此时/ ,/ 系统/ 自动/ 将/ 对/ 用户名/ 进行/ 语法/ 检查/ (/ Checking/ )/ ,/ 检查/ 完毕/ 后/ ,/ 系统/ 将/ 重新/ 返回/ (/ return/ )/ 到/ Login/ 页面/ ,/ 并/ 在/ Login/ 页面/ 上/ 显示/ 检查/ 的/ 结果/ ./ 同理/ ,/ 用户/ 输入/ 完/ 密码/ 后/ ,/ 系统/ 也/ 自动/ 对/ 密码/ 进行/ 语法/ 检查/ ./ 这样/ ,/ 首先/ 保证/ 用户名/ 和/ 密码/ 的/ 语法/ 正确/ ,/ 然后/ 点击/ Login/ 页面/ 上/ 的/ 提交/ 按钮/ submit/ ,/ 系统/ 将/ 把/ 用户名/ 和/ 密码/ 一起/ 发送到/ 服务器进行/ 验证/ ,/ 如果/ 用户名/ 和/ 密码/ 都/ 正确/ ,/ 用户/ 将/ 进入/ 管理中心/ Man/ -/ ageCenter/ 页面/ ./ 否则/ ,/ 系统/ 将/ 给出/ 一个/ 出错/ 页面/ Error/ ,/ 当/ 点击/ Error/ 页面/ 上/ 的/ OK/ 按钮/ 后/ ,/ 系统/ 又/ 重新/ 回到/ Login/ 页面/ ./ 状态/ 覆盖/ 测试/ 准则/ ./ 要求/ 测试用例/ 集/ TS/ 使/ FSM/ 中/ 的/ 每/ 一个/ 状态/ 至少/ 被/ 访问/ 一次/ ./ FSM/ 中/ 的/ 每/ 一个/ 状态/ 是/ 可达/ 的/ ,/ 因而/ 每/ 一个/ 状态/ 被/ 访问/ 一次/ 是/ 很/ 容易/ 做到/ 的/ ./ 状态/ 覆盖/ 测试/ 准则/ 是/ 这些/ 测试/ 准则/ 中/ 最/ 简单/ 、/ 最/ 容易/ 被/ 满足/ 的/ 测试/ 准则/ ,/ 需要/ 的/ 测试用例/ 也/ 往往/ 是/ 最少/ 的/ ./ 用例/ :/ 根据/ 状态/ 覆盖/ 测试/ 准则/ 可以/ 得到/ 以下/ 测试/ TC1/ :/ S0/ →/ S1/ →/ S3/ →/ S1/ →/ S2/ ;/ TC2/ :/ S0/ →/ S1/ →/ S4/ ;/ TC3/ :/ S0/ →/ S1/ →/ S3/ →/ S1/ →/ S3/ →/ S1/ →/ S3/ →/ S1/ →/ …/ 根据/ 约定/ ,/ 上述/ 测试用例/ 应/ 写成/ TC1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ Page8TC2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ 〉/ TC3/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ …/ 迁移/ 覆盖/ 测试/ 准则/ ./ 要求/ 测试用例/ 集/ TS/ 使/ FSM/ 中/ 的/ 每/ 一个/ 迁移/ 至少/ 被/ 激活/ 一次/ ./ 先使/ 系统/ 到达某/ 一个/ 状态/ (/ 当前/ 状态/ )/ ,/ 如果/ 一个/ 迁移/ 的/ 触发/ 事件/ 被/ 接受/ ,/ 并且/ 这个/ 迁移/ 的/ 卫式/ 条件/ 的/ 值/ 为/ 真/ ,/ 则/ 这个/ 迁移/ 被/ 激发/ ,/ 将/ 执行/ 迁移/ 的/ 动作/ ,/ 转换/ 到/ 目标/ 状态/ ./ 迁移/ 覆盖/ 测试/ 准则/ 也/ 比较简单/ 、/ 比较/ 易/ 被/ 满足/ ,/ 需要/ 的/ 测试用例/ 也/ 往往/ 是/ 比较/ 少/ 的/ ./ 根据/ 迁移/ 覆盖/ 测试/ 准则/ 可以/ 得到/ 以下/ 测试用例/ :/ TC1/ :/ login/ →/ cursormoved/ →/ return/ →/ submitTC2/ :/ login/ →/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ →/ OK/ ;/ …/ 根据/ 约定/ ,/ 上述/ 测试用例/ 应/ 写成/ :/ TC1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ TC2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ 〉/ …/ 虽然/ 状态/ 覆盖/ 和/ 迁移/ 覆盖/ 这/ 两个/ 测试/ 准则/ 都/ 比较简单/ 且/ 容易/ 被/ 满足/ ,/ 但/ 只/ 从/ 状态/ 覆盖/ 或/ 迁移/ 覆盖/ 测试/ 准则/ 产生/ 测试用例/ 的/ 方法/ 还是/ 有/ 它/ 的/ 适用范围/ ,/ 因为/ 不同/ 应用领域/ 对/ 软件/ 质量/ 的/ 要求/ 不同/ 以及/ 对/ 软件测试/ 费用/ 的/ 开销/ 不/ 等/ ./ 迁移/ 对/ 覆盖/ 测试/ 准则/ ./ 要求/ 测试用例/ 集/ TS/ 使/ FSM/ 中/ 的/ 每/ 一对/ 相邻/ 的/ 迁移/ (/ 〈/ 射入/ 迁移/ ,/ 射/ 出/ 迁移/ 〉/ )/ 至少/ 测试/ 一次/ ,/ 也就是说/ ,/ 迁移/ 之间/ 的/ 交互/ 至少/ 要/ 测试/ 一次/ ./ 迁移/ 对/ 覆盖/ 检查/ 的/ 是/ 状态/ 之间/ 的/ 接口/ ./ 如图/ 1/ 所示/ ,/ 存在/ 以下/ 迁移/ 对/ :/ login/ →/ cursormoved/ ;/ login/ →/ submit/ [/ n/ ∧/ p/ =/ TRUE/ ]/ ;/ login/ →/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ;/ cursormoved/ →/ return/ ;/ return/ →/ cursormoved/ ;/ return/ →/ submit/ [/ n/ ∧/ p/ =/ TRUE/ ]/ ;/ return/ →/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ;/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ →/ OK/ ;/ OK/ →/ cursormoved/ ;/ OK/ →/ submit/ [/ n/ ∧/ p/ =/ TRUE/ ]/ ;/ OK/ →/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ ;/ 根据/ 迁移/ 对/ 覆盖/ 测试/ 准则/ 可以/ 得到/ 以下/ 测试/ TC1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ TC2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ 用例/ :/ TC3/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ TC4/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ 〉/ TC5/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ TRUE/ ]/ 〉/ …/ 在/ 软件/ 中/ 的/ 许多/ 错误/ 可能/ 是因为/ 规格/ 说明/ 中/ 状态/ 之间/ 复杂/ 的/ 交互/ 关系/ (/ 接口/ )/ 引起/ 的/ ,/ 为了/ 检查/ 这些/ 交互/ 类型/ 的/ 错误/ ,/ 可以/ 使用/ 迁移/ 对/ 覆盖/ 测试/ 准则/ 生成/ 的/ 测试用例/ 集/ ,/ 该/ 准则/ 要求/ 所有/ 的/ 迁移/ 都/ 是/ 使/ 能/ 的/ ./ 显然/ ,/ 满足/ 迁移/ 对/ 覆盖/ 测试/ 准则/ 的/ 测试用例/ 集/ 也/ 一定/ 满足/ 状态/ 覆盖/ 和/ 迁移/ 覆盖/ 这/ 两个/ 测试/ 准则/ ,/ 但/ 它们/ 测试软件/ 的/ 方式/ 有/ 很大/ 的/ 不同/ ./ 从/ 上面/ 得到/ 的/ 测试用例/ 可以/ 看出/ ,/ TC3/ 是/ TC2/ 的/ 一部分/ ,/ 显然/ ,/ 应该/ 对/ 测试用例/ 集/ 进行/ 优化/ ,/ 基于/ 此/ ,/ 系统/ 设计/ 给出/ 了/ 优化/ 的/ 状态/ 迁移/ 覆盖/ 准则/ ./ 优化/ 的/ 状态/ 迁移/ 覆盖/ 准则/ ./ 要求/ 对于/ 测试用例/ 集/ TS/ 使/ FSM/ 中/ 的/ 对于/ 任何/ 两条/ 测试/ 序列/ tc1/ 和/ tc2/ ,/ 都/ 会/ 满足/ 关系/ :/ tc1/ 与/ tc2/ 是/ 两个/ 不/ 相同/ 的/ 测试/ 序列/ ,/ 其中/ tc1/ 序列/ 不是/ tc2/ 的/ 一部分/ ,/ tc2/ 也/ 不是/ tc1/ 的/ 一部分/ ./ 基于/ 此/ ,/ 上述/ 的/ 测试用例/ 集可/ 写成/ :/ TC1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ TC2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ TC3/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ 〉/ TC4/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ TRUE/ ]/ 〉/ Page9/ 定义/ 19/ (/ 状态/ 迁移/ 序列/ )/ ./ 在/ FSM/ 中/ ,/ 迁移/ 序列/ 是从/ 一个/ 状态/ 到/ 另/ 一个/ 状态/ 由/ 状态/ 和/ 迁移/ 组成/ 的/ 序列/ 称为/ 状态/ 迁移/ 序列/ ./ 定义/ 20/ (/ 消息传递/ 序列/ )/ ./ 在/ FSM/ 中/ ,/ 消息传递/ 序列/ 是/ 状态/ 根据/ 消息传递/ 的/ 顺序/ 组成/ 的/ 状态/ 迁移/ 序列/ ./ 定义/ 21/ (/ 完整/ 消息传递/ 序列/ )/ ./ 在/ FSM/ 中/ ,/ 完整/ 消息传递/ 序列/ 是/ 由/ 某个/ 状态/ 出发/ 最终/ 回到/ 自身/ 状态/ 的/ 消息传递/ 迁移/ 序列/ (/ 这里/ 并/ 不/ 考虑/ 自/ 迁移/ 的/ 情况/ )/ ./ 由/ 上述/ 定义/ ,/ 我们/ 可以/ 给出/ 完整/ 消息传递/ 序列/ 测试/ 准则/ ./ 定义/ 22/ (/ 完整/ 消息传递/ 覆盖/ 准则/ )/ ./ 给定/ 一个/ 测试/ 集/ TS/ 和/ 系统/ 的/ 一个/ FSM/ 模型/ M/ ,/ 当且/ 仅/ 当/ 对于/ M/ 的/ 任意/ 一条/ 完整/ 消息传递/ 序列/ tc/ ,/ / t/ ∈/ TS/ ,/ 使得/ tc/ 是/ t/ 的/ 子/ 序列/ ,/ 则/ 测试/ 集/ TS/ 满足/ 完整/ 消息传递/ 序列/ 覆盖/ 准则/ ./ 完整/ 消息传递/ 覆盖/ 准则/ 主要/ 是/ 针对/ Web/ 应用/ 中/ 功能模块/ 间/ 的/ 交互/ 行为/ 进行/ 测试/ ./ 所/ 得到/ 的/ 测试用例/ 集/ 通过/ 追踪/ 功能/ 间/ 的/ 消息传递/ ,/ 动态/ 反映/ 了/ 其/ 各个/ 功能模块/ 间/ 的/ 调用/ 及其/ 完整/ 的/ 交互/ 流程/ ./ 完整/ 消息传递/ 序列/ 是/ 由/ 某个/ 状态/ 出发/ 最终/ 回到/ 自身/ 状态/ (/ 自/ 迁移/ 除外/ )/ 的/ 消息传递/ 迁移/ 序列/ ./ 完整/ 消息传递/ 覆盖/ 要求/ 测试/ 序列/ 集/ 覆盖/ 每/ 一条/ 完整/ 消息传递/ 序列/ 至少/ 1/ 次/ ./ 根据/ 完整/ 消息传递/ 覆盖/ 准则/ 的/ 定义/ 可知/ ,/ 测试用例/ 要/ 满足/ 以下/ 序列/ 要求/ :/ Seq1/ :/ S0/ →/ S1/ →/ …/ →/ S1/ ;/ Seq2/ :/ S0/ →/ S1/ →/ S3/ …/ →/ S3/ ;/ Seq3/ :/ S0/ →/ …/ →/ S4/ →/ …/ →/ S4/ ;/ 所以/ ,/ 据此/ ,/ 可以/ 得到/ 以下/ 测试用例/ :/ TC1/ -/ 1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ 〉/ TC1/ -/ 2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ re/ -/ TC1/ -/ 3/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ re/ -/ …/ TC2/ -/ 1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ re/ -/ TC2/ -/ 2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ re/ -/ TC2/ -/ 3/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ re/ -/ …/ TC3/ -/ 1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ 〉/ TC3/ -/ 2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ re/ -/ TC3/ -/ 3/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ re/ -/ …/ 通过/ 上述/ 的/ 满足/ 完整/ 消息传递/ 覆盖/ 准则/ 的/ 测试用例/ ,/ 在/ 宏观/ 上/ 对/ 整个/ Web/ 应用/ 交互进行/ 了/ 功能性/ 的/ 测试/ ,/ 可以/ 说/ 是/ 一种/ 整体/ 功能/ 的/ 测试/ ./ 但是/ ,/ 在/ Web/ 应用/ 中/ 的/ 许多/ 错误/ 很/ 可能/ 是因为/ 页面/ 与/ 页面/ 、/ 接口/ 与/ 接口/ 、/ 前台/ 与/ 后台/ 、/ 状态/ 与/ 状态/ 之间/ 复杂/ 的/ 交互/ 关系/ 引起/ 的/ ,/ 以往/ 的/ 状态/ 覆盖/ 或/ 迁移/ 覆盖/ 等/ 测试/ 准则/ 几乎/ 都/ 是/ 孤立/ 地/ 测试/ 迁移/ 或是/ 状态/ ,/ 没有/ 充分/ 地/ 测试/ 迁移/ 及/ 状态/ 之间/ 的/ 交互/ 关系/ ./ 为了/ 检查/ 这些/ 类型/ 的/ 错误/ ,/ 更好/ 地/ 测试/ 各个/ 功能模块/ 之间/ 的/ 交互/ 行为/ ,/ 本/ 节/ 提出/ 了/ 完整/ 功能/ 交互/ 覆盖/ 准则/ ./ 定义/ 23/ (/ 迁移/ 对/ 序列/ )/ ./ 在/ FSM/ 中/ ,/ 迁移/ 对/ 序列/ 指从/ 一个/ 状态/ 到/ 另/ 一个/ 状态/ 由/ 两/ 两/ 相邻/ 的/ 迁移/ 对/ 组成/ 的/ 序列/ ./ 迁移/ 对/ 覆盖/ 测试/ 准则/ 要求/ 测试用例/ 集/ TS/ 使/ FSM/ 中/ 的/ 每/ 一组/ 迁移/ 对/ 的/ 交互/ 至少/ 测试/ 一次/ ./ 这样/ 可以/ 有效/ 地/ 测试/ 各个/ 状态/ 之间/ 的/ 交互/ 行为/ ./ 但是/ ,/ 可以/ 发现/ ,/ 若/ 将/ 迁移/ 对/ 覆盖/ 简单/ 地/ 应用/ 于/ Web/ 应用/ 上时/ ,/ 往往/ 只是/ 一种/ 纯粹/ 的/ 迁移/ 对/ 覆盖/ ./ 而/ 其中/ 的/ 某些/ 测试/ 序列/ 却是/ 无用/ 的/ ,/ 或者说/ 会/ 产生/ 一些/ 无用/ 的/ 测试/ 片段/ ./ 也就是说/ ,/ 不能/ 保证/ 该/ Web/ 应用/ 系统/ 的/ 每个/ 功能/ 都/ 得到/ 测试/ ./ 虽然/ 通过/ 上述/ 的/ 测试用例/ 集/ 也/ 可以/ 达到/ 迁移/ 对全/ 覆盖/ 的/ 目的/ ,/ 但是/ 会/ 产生/ 一些/ 没有/ 实际意义/ 的/ 测试用例/ ,/ 这些/ 测试用例/ 无法/ 检测/ 出/ 实际/ 的/ 交互错误/ ,/ 从而/ 影响/ 了/ 实际/ 的/ 功能/ 交互/ 测试/ 的/ 效果/ 和/ 整个/ 测试/ 效率/ ./ 因此/ ,/ 我们/ 提出/ 了/ 完整/ 功能/ 交互/ 序列/ Page10/ 覆盖/ 准则/ ./ 定义/ 24/ (/ 完整/ 功能/ 交互/ 覆盖/ 准则/ )/ ./ 给定/ 一个/ 测试/ 集/ TS/ 和/ 系统/ 的/ 一个/ FSM/ 模型/ M/ ,/ TS/ 必须/ 保证/ M/ 中/ 的/ 每个/ 相邻/ 的/ 交互/ 行为/ 都/ 得到/ 测试/ ,/ 并且/ 保证/ M/ 中/ 的/ 每个/ 功能/ 都/ 得到/ 测试/ ./ 根据/ 完整/ 功能/ 交互/ 覆盖/ 准则/ 的/ 定义/ 可知/ ,/ 测试用例/ 要/ 满足/ 以下/ 序列/ 要求/ :/ S2/ ;/ S4/ →/ S1/ ;/ 登录/ 成功/ 序列/ :/ S0/ →/ S1/ →/ S3/ →/ S1/ →/ S3/ →/ S1/ →/ 登录/ 失败/ 序列/ :/ S0/ →/ S1/ →/ S3/ →/ S1/ →/ S3/ →/ S1/ →/ 所以/ ,/ 据此/ ,/ 可以/ 得到/ 以下/ 测试用例/ :/ TC1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ TC2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ 通过/ 上述/ 两个/ 准则/ 生成/ 的/ 测试用例/ ,/ 我们/ 从/ 宏观/ 和/ 微观/ 两/ 方面/ 对/ Web/ 应用/ 的/ 功能/ 交互进行/ 了/ 测试/ ,/ 可以/ 说/ 是/ 较为/ 全面/ 的/ 完成/ 了/ 对/ Web/ 应用/ 的/ 功能/ 交互/ 测试/ ./ 但是/ ,/ 需要/ 指出/ 的/ 是/ ,/ 在/ 上述/ 的/ 测试/ 准则/ 中/ ,/ 基本/ 没有/ 考虑/ 循环/ 的/ 测试/ ,/ 比如/ :/ 通过/ Checking/ ,/ 发现/ 用户名/ 或/ 密码/ 不/ 符合/ 相应/ 的/ 语法/ 规则/ ,/ 用户/ 修改/ 后/ 再/ 进行/ Checking/ ,/ 这样/ 的/ 一个/ 往复/ 过程/ ./ 另/ 一个/ 就是/ 用户/ 登录/ 失败/ 后/ ,/ 重新/ 输入/ 用户名/ 和/ 密码/ ,/ 再/ 重新/ 进行/ 登录/ 等/ ./ 在/ 测试/ 实践/ 中/ ,/ 状态/ 迁移/ 过程/ 中/ 的/ 循环/ 是/ 很/ 复杂/ 的/ ,/ 执行/ 循环体/ N/ 次/ 和/ 简单/ 地/ 重复/ 此/ 一回/ 路/ N/ 次/ 不是/ 等价/ 的/ ./ 在/ 将/ Web/ 应用/ 按/ 功能/ 划分/ 后/ 得到/ 的/ FSM/ 图中/ ,/ 一个/ 循环体/ 可以/ 看作/ 是/ 一个/ 子/ 功能模块/ ./ 在/ 一个/ Web/ 应用/ 实例/ 中/ ,/ 各个/ 子/ 功能模块/ 往往/ 是/ 运行/ 最/ 频繁/ 的/ ,/ 例如/ 在/ 一次/ 用户/ 购物/ 过程/ 中/ 系统/ 存在/ 导购/ 子/ 功能模块/ 和/ 付款/ 子/ 模块/ ,/ 用户/ 往往/ 会因/ 选购/ 多个/ 商品/ 多次/ 使用/ 导购/ 模块/ ,/ 而/ 最终/ 只/ 使用/ 一次/ 付款/ 模块/ ./ Web/ 应用/ 中/ 的/ 很多/ 错误/ 往往/ 会/ 在/ 多次/ 循环/ 交互/ 中/ 产生/ ,/ 而/ 随着/ 循环/ 次数/ 的/ 不同/ ,/ 产生/ 错误/ 的/ 情况/ 也/ 各不相同/ ./ 因此/ ,/ 有/ 必要/ 对/ Web/ 应用/ 的/ 循环/ 交互进行/ 测试/ ./ 在/ Web/ 应用/ 中/ ,/ 尤其/ 在/ Web/ 导航/ 的/ 过程/ 中/ ,/ 功能/ 构件/ 有着/ 各种/ 的/ 依赖/ 关系/ 或/ 约束/ 关系/ ,/ 并且/ 是/ 按/ 顺序/ 执行/ 的/ ./ 因此/ 在/ 考虑/ 有序性/ 的/ 前提/ 下/ ,/ 很难/ 将/ 循环体/ 单独/ 抽出/ 进行/ 测试/ ./ 单独/ 对/ 循环体/ 进行/ 测试/ 是/ 没有/ 意义/ 的/ ,/ 会/ 导致/ 一些/ 前续/ 的/ 错误/ 无法/ 被/ 发现/ ./ 以/ 上述/ 的/ 用户/ 购物/ 过程/ 为例/ ,/ 如果/ 不/ 先/ 登录/ 系统/ ,/ 是/ 无法/ 进行/ 后续/ 的/ 修改/ 个人信息/ 、/ 购物/ 、/ 付款/ 等/ 操作/ 的/ ,/ 或者说/ 用户/ 不/ 登录/ 系统/ 而/ 直接/ 进行/ 购物/ 付款/ 等/ 操作/ 本身/ 就是/ 非法/ 的/ ./ 单独/ 对/ 循环体/ 进行/ 测试/ 就/ 会/ 导致/ 这种/ 错误/ 无法/ 被/ 发现/ ,/ 也/ 就/ 失去/ 了/ 功能/ 交互/ 测试/ 的/ 意义/ ./ Web/ 导航/ 是/ 一个/ 有序/ 的/ 过程/ ,/ 应该/ 将/ 其/ 视作/ 是/ 一个/ 整体/ ./ 由此/ ,/ 给出/ 以下/ 定义/ ./ 定义/ 25/ (/ 功能/ 循环/ 序列/ )/ ./ 在/ FSM/ 中/ ,/ 功能/ 循环/ 序列/ 是/ 由/ 初始状态/ 出发/ 并/ 出现/ 循环/ 的/ 序列/ ./ 定义/ 26/ (/ 功能/ 循环/ 交互/ 覆盖/ 准则/ )/ ./ 给定/ 一个/ 测试/ 集/ TS/ 和/ 系统/ 的/ 一个/ FSM/ 模型/ M/ ,/ 当且/ 仅/ 当/ 对于/ M/ 的/ 任意/ 一条/ 功能/ 循环/ 序列/ tc/ ,/ / t/ ∈/ TS/ ,/ 使得/ tc/ 是/ t/ 的/ 子/ 序列/ ,/ 则/ 测试/ 集/ TS/ 满足/ 循环/ 功能/ 交互/ 覆盖/ 准则/ ./ 这里/ 规定/ ,/ 每个/ 循环/ 至少/ 被/ 测试/ 2/ 次/ ./ 根据/ 功能/ 循环/ 交互/ 覆盖/ 准则/ 的/ 定义/ ,/ 存在/ 3/ 种/ 情形/ :/ (/ 1/ )/ 用户名/ 或/ 密码/ 通过/ Checking/ 后/ 发现/ 不/ 满足/ 相应/ 的/ 语法/ 要求/ ,/ 反复/ 修改/ ,/ 反复/ Checking/ ,/ 最终/ 成功/ 登录/ ./ (/ 2/ )/ 用户名/ 或/ 密码/ 满足/ 相应/ 的/ 语法/ 规则/ ,/ 但/ 经过/ 服务器/ 验证/ 发现/ 有误/ ,/ 用户/ 重新/ 输入/ 用户名/ 和/ 密码/ 反复/ 登录/ 系统/ ./ (/ 3/ )/ 用户名/ 或/ 密码/ 不/ 满足/ 相应/ 的/ 语法/ 规则/ ,/ 并且/ 修改/ 后/ 用户名/ 或/ 密码/ 经验/ 证有/ 错/ ,/ 用户/ 反复/ 登录/ ./ 因此/ ,/ 根据上述/ 情形/ ,/ 得到/ 以下/ 测试用例/ :/ TC1/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ TC2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ TC3/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ cursormoved/ 〉/ S3/ 〈/ return/ 〉/ …/ 功能/ 循环/ 交互/ 测试/ 既/ 针对/ 循环体/ 进行/ 了/ 测试/ ,/ 又/ 保证/ 了/ 测试/ 功能/ 的/ 完整性/ ./ 从本节/ 得到/ 的/ 测试用例/ 中/ ,/ 根据/ 实例/ 的/ 要求/ ,/ 有些/ 并/ 无/ 实际意义/ 或者说/ 测试用例/ 覆盖/ 的/ 该条/ 测试/ 路径/ 实际上/ 是/ 不/ 存在/ 的/ ./ 例/ Page11/ 如/ 根据/ 状态/ 覆盖/ 测试/ 准则/ 得到/ 的/ 测试用例/ TC2/ :/ S0/ 〈/ login/ 〉/ S1/ 〈/ submit/ [/ n/ ∧/ p/ =/ FALSE/ ]/ 〉/ S4/ ;/ 在/ 现实/ 中/ ,/ 用户/ 输入/ 完/ 用户名/ 和/ 密码/ 后要/ 先/ 经过/ Checking/ 后/ ,/ 才/ 会/ 到/ submit/ ./ 所以/ 由/ S0/ 迁移/ 到/ S1/ 后/ 不/ 经过/ Checking/ 直接/ 迁移/ 到/ S4/ 是/ 不/ 正确/ 的/ ,/ 也/ 是/ 无/ 实际意义/ 的/ ./ 该/ 问题/ 本/ 课题组/ 已/ 另作/ 研究/ ,/ 不/ 属于/ 本文/ 的/ 研究/ 范围/ ./ 上述/ 测试用例/ 生成/ 方法/ 已/ 集成/ 在/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 系统/ 中/ ./ 4/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 系统/ 实现/ 4.1/ 系统/ 框架/ 本文/ 研究/ 基于/ 模型/ 的/ Web/ 应用软件/ 测试/ 技术/ 和/ 工具/ 实现/ ./ 最终/ 构建/ 一套/ 从/ 模型/ 出发/ 产生/ 测试用例/ 并/ 自动/ 执行/ 测试用例/ 的/ 系统/ 工具/ ,/ 实现/ Web/ 应用/ 测试/ 过程/ 的/ 自动化/ ./ 如图/ 2/ 所示/ ,/ Web/ 应用/ 测试/ 系统/ 以/ FSM/ 作为/ 被测/ Web/ 应用/ 的/ 形式/ 测试/ 模型/ ,/ 集成/ 了/ 模型/ 转换器/ 、/ 测试/ 目标/ 分析器/ 、/ 测试/ 序列/ 生成器/ 、/ FSM/ 和/ 测试/ 序列/ 可视化/ 和/ Web/ 应用/ 测试/ 执行/ 引擎/ 等/ 工具/ ./ UML/ 是/ 面向对象/ 系统分析/ 、/ 设计/ 的/ 标准/ 的/ 建模语言/ ,/ 自从/ 成为/ 建模语言/ 事实上/ 的/ 标准/ 后/ ,/ 就/ 得到/ 学术界/ 的/ 推崇/ 和/ 工业界/ 的/ 支持/ ./ UML/ 也/ 是/ Web/ 应用/ 开发/ 的/ 主要/ 建模/ 工具/ ,/ 开发/ 过程/ 中/ 建立/ 的/ 各种/ UML/ 模型/ 提供/ 了/ 系统/ 的/ 使用/ 、/ 结构/ 、/ 行为/ 和/ 部署/ 等/ 图/ 2/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 系统/ 实现/ 框架/ 4.2/ 测试用例/ 可视化/ 对于/ 一个/ 给定/ 的/ FSM/ 模型/ (/ SCXML/ 表示/ )/ ,/ 采用/ 第/ 3/ 节/ 给出/ 的/ 测试/ 覆盖/ 准则/ ,/ 系统/ 就/ 可以/ 产生/ 相应/ 的/ 测试用例/ ./ 本文/ 使用/ 开源/ 的/ 绘图/ 工具/ Graphviz2/ ./ 26/ ①/ 实现/ 了/ FSM/ 的/ 图形化/ 显示/ 和/ 测试用例/ 的/ 可视化/ ./ 既/ 可以/ 在/ FSM/ 展现/ 每/ 一条/ 测试用例/ ,/ 也/ 可以/ 用/ 不同/ 颜色/ 展示/ 多条/ 测试用例/ ./ 整个/ 可视化/ 过程/ 可分解/ 为/ 若干/ 子/ 过程/ :/ 首先/ 读/ 视图/ ,/ 也/ 是/ 测试/ 的/ 主要/ 信息/ 来源/ ./ 然而/ ,/ 由于/ UML/ 缺乏/ 精确/ 的/ 语义/ ,/ 直接/ 用/ UML/ 模型/ 推导/ 测试用例/ 时/ 缺乏/ 所/ 需/ 的/ 语义/ 信息/ ,/ 难以/ 自动化/ ./ 系统/ 采用/ UML/ 状态图/ 描述/ Web/ 应用/ 的/ 行为/ ,/ 开发/ 一个/ 将/ UML/ 状态图/ 形式化/ 为/ FSM/ 的/ 模型/ 转换器/ ./ 同时/ ,/ 考虑/ 到/ 测试用例/ 爆炸/ 问题/ ,/ 采用/ UML/ 顺序/ 图/ 描述/ 特定/ 的/ 测试/ 目标/ ,/ 测试/ 目标/ 分析器/ 从/ UML/ 顺序/ 图/ 产生/ 针对/ 特定/ 测试/ 目标/ 的/ 测试用例/ 规约/ ,/ 然后/ 与/ Web/ 应用/ 的/ 整体/ FSM/ 模型/ 进行/ 模型/ 组合/ 产生/ 基于/ 测试/ 目标/ 的/ FSM/ ./ 本文/ 选用/ 了/ SCXML/ 作为/ FSM/ 的/ 文本/ 表示/ 方式/ ./ 建立/ 了/ SCXML/ 元素/ 与/ FSM/ 模型/ 的/ 对应/ 关系/ ./ FSM/ 可视化/ 工具/ 主要/ 实现/ 将/ 内部/ 存储/ 的/ FSM/ 模型/ 图形化/ ,/ 以便/ 于/ 用户/ 直观/ 观察/ 和/ 理解/ FSM/ ./ 测试/ 序列/ 生成器/ 按照/ 设计/ 好/ 的/ 测试/ 覆盖/ 准则/ 自动/ 地/ 从/ FSM/ 产生/ 抽象/ 的/ 测试/ 序列/ 集/ ./ 除/ 支持/ 状态/ 覆盖/ 、/ 迁移/ 覆盖/ 、/ 迁移/ 对/ 覆盖/ 等/ 传统/ 的/ 覆盖/ 准则/ 外/ ,/ 我们/ 还/ 提出/ // 改进/ 了/ 优化/ 状态/ 迁移/ 覆盖/ 、/ 完整/ 消息传递/ 覆盖/ 、/ 完整/ 功能/ 交互/ 覆盖/ 和/ 功能/ 循环/ 交互/ 覆盖/ 等/ 覆盖/ 准则/ ./ 测试/ 序列/ 可视化/ 工具/ 主要/ 是/ 实现/ 在/ 系统/ FSM/ 图形/ 上/ 彩色显示/ 单条/ 测试/ 序列/ 路径/ 以及/ 彩色显示/ 整个/ 测试/ 序列/ 集中/ 所有/ 测试/ 序列/ 路径/ ./ 测试/ 执行/ 引擎/ 根据/ 被测/ Web/ 应用/ 测试/ 执行/ 配置/ ,/ 实例/ 化/ 抽象/ 的/ 测试/ 序列/ ,/ 自动/ 生成/ 测试/ 执行/ 脚本/ 并/ 解释/ 执行/ 脚本/ ,/ 产生/ 测试/ 执行/ 迹/ ,/ 从而/ 可以/ 动态/ 、/ 形象/ 地/ 展示/ 出/ 测试/ 执行/ 的/ 全过程/ ./ 取/ SCXML/ 格式/ 的/ 文本/ 和/ 以及/ 根据/ 不同/ 测试/ 准则/ 得到/ 的/ 测试用例/ 的/ 文本/ ,/ 然后/ 从中/ 抽取/ 用于/ 图形/ 生成/ 的/ 相关/ 信息/ 并存/ 于/ 自己/ 定义/ 好/ 的/ 数据结构/ 中/ ,/ 最后/ ,/ 使用/ Graphviz/ 来/ 布局/ 及/ 映射/ 得出/ 图形/ ./ 图/ 3/ 给出/ 了/ 该/ 系统/ FSM/ 以及/ 测试用例/ 可视化/ 实现/ 的/ 基本/ 框/ ①/ Graphviz/ -/ GraphVisualizationSoftware/ ,/ http/ :/ // // www/ ./ Page12/ 架/ ,/ 由/ 各子/ 过程/ 划分/ 出/ 各/ 功能模块/ ./ 图/ 3FSM/ 以及/ 测试用例/ 可视化/ 工具/ 的/ 架构图/ 利用/ Graphviz/ 提供/ 的/ API/ ,/ 将/ 数据结构/ 中/ 的/ 模型/ 信息/ 写入/ Graphviz/ 能够/ 识别/ 的/ dot/ 文件/ ,/ 再/ 由/ 程序代码/ 自动/ 开启/ Graphviz/ 的/ 执行/ 库/ ,/ 以新/ 生成/ 的/ dot/ 文件/ 为/ 输入/ ,/ 得到/ 其/ 相应/ 的/ 图形/ 类/ 数据流/ ,/ 从而/ 获得/ 一个/ 与/ 原文/ 本/ 模型/ 一致/ 的/ 图片/ 文件/ ,/ 并/ 将/ 其/ 交给/ 输入/ 输出模块/ ,/ 最终/ 呈现/ 给/ 用户/ ./ 测试用例/ 的/ 可视化/ 与/ 此/ 类似/ ,/ 只是/ 在/ 显示/ 的/ 每/ 一条/ 测试用例/ 序号/ 上/ 增加/ 了/ 一个/ 单击/ 事件/ ,/ 当/ 触发/ 该/ 事件/ 后/ ,/ 系统/ 根据/ 面板/ 上/ 显示/ 的/ FSM/ 的/ 文本/ SCXML/ 以及/ 该/ 测试用例/ 的/ 文本/ 进行/ 匹配/ ,/ 匹配/ 后/ 生成/ dot/ 文件/ ,/ 并且/ 在/ 该/ dot/ 文件/ 中/ 相应/ 的/ 位置/ 处/ 给出/ 颜色/ 标记/ ,/ 这样/ 在/ 调用/ Graphviz/ 时/ ,/ 就/ 显示/ 了/ FSM/ 图形/ ,/ 并且/ 该/ 图形/ 中/ 对应/ 的/ 测试用例/ 部分/ 采用/ 不同/ 颜色/ 进行/ 标识/ ,/ 如图/ 4/ 所示/ ./ 同理/ ,/ 测试用例/ 集/ 的/ 显示/ 与/ 此/ 类似/ ,/ 不再/ 详述/ ./ 4.3/ 测试/ 执行/ 4.3/ ./ 1/ 测试/ 执行/ 引擎/ 测试/ 执行/ 引擎/ 是/ 整个/ 自动化/ 测试工具/ 的/ 重要/ 部分/ ,/ 由/ 测试/ 脚本/ 和/ 输入/ 数据/ 所/ 驱动/ ./ 执行/ 引擎/ 模拟/ 多用户/ 的/ 操作/ 行为/ 对/ 被/ 测/ Web/ 应用/ 进行/ 功能测试/ ./ 本节/ 给出/ Web/ 应用/ 测试/ 自动化/ 工具/ 中/ 测试/ 执行/ 引擎/ 的/ 构建/ 及/ 实现/ ./ 测试/ 引擎/ 根据/ Web/ 应用/ 三层/ 结构/ 所/ 设计/ ,/ 分别/ 对应/ 了/ 客户端/ 、/ 服务器端/ 及/ 数据库/ 端/ ./ 该/ 引擎/ 使用/ 多线程/ 技术/ ,/ 实例/ 化/ 一组/ 客户端/ 来/ 模拟/ 多用户/ 同时/ 对/ Web/ 应用/ 进行/ 操作/ ./ 客户端/ 向/ Web/ 应用/ 发出请求/ ,/ 对/ 被/ 测系统/ 进行/ 两种/ 方式/ 的/ 检查/ :/ 一是/ 对/ Web/ 服务器端/ 的/ 响应/ 进行/ 检查/ ;/ 二是/ 对/ 数据库/ 端/ 进行/ 数据/ 检查/ ./ 并且/ 在/ 任/ 一个/ 客户端/ 中/ 可定义/ 多个/ 检查/ 项目/ ./ 测试/ 执行/ 引擎/ 与/ 测试工具/ 中/ 各/ 组件/ 按照/ 一定/ 顺序/ 分工合作/ ./ 测试/ 脚本/ 经过/ 验证/ 通过/ 后/ ,/ 测试/ 执行/ 引擎/ 根据/ 脚本/ 每个/ 用例/ 中/ 的/ 变量/ 定义/ 从/ 外部/ 数据文件/ 中/ 获取/ 测试数据/ ,/ 然后/ 实例/ 化为/ 多个/ 具体/ 测试用例/ 对/ Web/ 应用/ 进行/ 并发/ 的/ 请求/ 操作/ ,/ 通过/ 检查/ 响应/ 中/ 检查/ 点中/ 内容/ 来/ 判断/ 结果/ 的/ 正确性/ ,/ 最后/ 利用/ 执行/ 引擎/ 中/ 记录/ 的/ 测试日志/ 来/ 生成/ 测试报告/ ./ 4.3/ ./ 2/ 测试/ 脚本/ 测试/ 脚本/ 一般/ 指可/ 被/ 自动化/ 测试工具/ 执行/ 的/ 针对/ 一个/ 特定/ 测试/ 的/ 一系列/ 指令/ ,/ 由/ 测试/ 执行/ 引擎/ 解析/ 和/ 执行/ ,/ 因此/ 是/ 自动化/ 测试/ 实现/ 中/ 的/ 关键/ 部分/ ./ 测试/ 脚本/ 可/ 使用/ 测试/ 自动化/ 工具/ 自动/ 生成/ ,/ 或/ 由/ 手工/ 创建/ (/ 记录/ )/ ,/ 或用/ 程序语言/ 编程/ 来/ 完成/ ,/ 也/ 可/ 综合/ 前/ 三种/ 方法/ 来/ 完成/ ./ 脚本语言/ 的/ 设计/ 应/ 达到/ 下面/ 几个/ 要求/ :/ 易读性/ 、/ 易维护性/ 、/ 复用/ 性/ 、/ 高效率/ 和/ 健壮性/ ./ 良好/ 的/ 测试/ 脚本/ 将/ 为/ 测试者/ 提供/ 灵活/ 的/ 使用/ 空间/ ,/ 增加/ 测试工具/ 的/ 测试/ 准确度/ ,/ 减少/ 测试人员/ 的/ 工作/ ,/ 同时/ 也/ 可以/ 降低/ 对/ 测试人员/ 的/ 综合/ 素质/ 要求/ ./ 到/ 目前为止/ ,/ Web/ 的/ 功能测试/ 在/ 国内/ 还/ 处于/ 探索/ 阶段/ ,/ 还/ 没有/ 专门/ 可用/ 的/ 工具/ ,/ 即使/ 国外/ 的/ 主流/ 测试工具/ ,/ 如/ Winrunner/ ,/ RationalRobot/ ,/ QuickTest/ 等/ ,/ 其/ 测试/ 脚本语言/ 都/ 存在/ 很大/ 的/ 局限性/ ,/ 脚本/ 复杂/ ,/ 难于/ 掌握/ ,/ 对/ 测试人员/ 水平/ 要求/ 很/ 高/ ./ 本/ 自动化/ 测试工具/ 采用/ 基于/ XML/ 的/ 测试/ 脚本/ ,/ 测试/ 脚本/ 由/ 工具/ 自动/ 生成/ ,/ 结构/ 清晰/ 易读/ ,/ 测试人员/ 可/ 轻松/ 编辑/ 及/ 维护/ ./ 该/ 脚本/ 拥有/ 自己/ 的/ 语法/ 规则/ 和/ 保留字/ ,/ 并/ 采用/ 数据/ 驱动/ 方式/ 将/ 测试/ 输入/ 存储/ 在/ 独立/ 的/ 数据文件/ 中/ 而/ 不是/ 绑定/ 在/ 脚本/ 中/ ,/ 从而/ 提高/ 了/ 脚本/ 复用/ 率/ ,/ 降低/ 了/ 测试/ 开销/ ./ 脚本/ 定义/ 测试用例/ 、/ 测试/ 步/ 、/ 测试/ 输入/ 和/ 检查点/ 即/ 预期/ 输出/ 等/ 信息/ ,/ 并/ 通过/ 检查点/ 来/ 判断/ 结果/ 是否/ 正确/ ./ 为了/ 使/ 基于/ XML/ 格式/ 的/ 文档/ 拥有/ 可视化/ 效果/ ,/ 这里/ 使用/ 了/ 可/ 扩展/ 样式表/ 语言/ XSL/ (/ ExtensibleStylesheetLan/ -/ guage/ )/ ./ XSL/ 可以/ 将/ XML/ 转换成/ HTML/ ,/ 可以/ 过滤/ 和/ 分类/ XML/ 数据/ ,/ 可以/ 对/ 一个/ XML/ 文档/ 的/ 部分/ 进行/ 寻址/ ,/ 可以/ 基于/ 数据/ 值/ 格式化/ XML/ 数据/ ,/ 可以/ 向/ 不同/ 设备/ 输出/ XML/ 数据/ ./ 执行/ 引擎/ 通过/ 向/ 被/ 测/ Web/ 应用/ 发送/ 测试/ 脚本/ 中/ 定义/ 好/ 的/ HTTP/ 请求/ 来/ 模拟/ 多用户/ 访问/ Web/ 应/ Page13/ 用/ 的/ 场景/ ,/ 并/ 通过/ 分析/ HTTP/ 响应/ 数据/ 或者/ 探测/ 数据库/ 中/ 数据/ 来/ 检测/ 系统/ 的/ 功能/ ./ 本/ 测试工具/ 通过/ 实例/ 化/ 抽象/ 测试/ 序列/ 来/ 自动/ 生成/ 或/ 人工/ 手动/ 建立/ 方式/ 来/ 生成/ 脚本/ ./ 脚本/ 基于/ XML/ 进行/ 开发/ ,/ 利用/ XML/ 的/ 嵌套/ 结构/ 可/ 方便/ 定义/ 复杂/ 的/ 测试/ 脚本/ ./ 测试/ 脚本/ 主要/ 定义/ 测试用例/ 及其/ 输入/ 和/ 预期/ 输出/ ,/ 由/ 测试/ 包/ (/ TestSuite/ )/ 、/ 测试用例/ (/ TestCase/ )/ 、/ 测试/ 步/ (/ TestStep/ )/ 三层/ 结构/ 嵌套/ 而成/ ./ 如图/ 5/ 所示/ ./ (/ 1/ )/ 测试/ 包/ ./ 每个/ 测试/ 脚本/ 包含/ 一个/ 测试/ 包/ ,/ 一个/ 测试/ 包/ 包含/ 一个/ 或/ 多个/ 测试用例/ ,/ 测试/ 包为/ 用来/ 确认/ 被/ 测系统/ 逻辑/ 错误/ 的/ 测试用例/ 的/ 集合/ ./ (/ 2/ )/ 测试用例/ ./ 一个/ 测试用例/ 包含/ 一个/ 或/ 多个/ 测试/ 步/ ,/ 是/ 完成/ 一个/ 明确/ 的/ 测试/ 目标/ 的/ 测试/ ,/ 即/ 具体条件/ 下/ 对/ Web/ 应用/ 某个/ 场景/ 的/ 具体/ 行为/ ./ (/ 3/ )/ 测试/ 步/ :/ 与/ Web/ 应用/ 的/ 一次/ 交互/ 行为/ ,/ 即/ 一次/ HTTP/ 请求/ 定义/ 和/ 一次/ 预期/ HTTP/ 响应/ 定义/ ./ 4.3/ ./ 3/ 测试/ 执行/ 引擎/ 的/ 实现/ 在/ 满足/ 所有/ 测试/ 所/ 需/ 条件/ 后/ ,/ 测试/ 执行/ 引擎/ 协调/ 测试/ 脚本/ 、/ 测试数据/ 及/ 被/ 测/ Web/ 应用/ 3/ 个/ 对象/ ,/ 动态/ 地/ 调用/ 脚本/ 解析器/ 和/ 测试数据/ 来/ 实例/ 化/ 每个/ 测试/ 场景/ ,/ 通过/ 判断/ 响应/ 页面/ 中/ 检查点/ 来/ 对/ Web/ 应用/ 进行/ 测试/ ./ 脚本/ 可/ 根据/ 测试人员/ 对/ 抽象/ 序列/ 的/ 描述/ ,/ 通过/ 脚本/ 生成器/ 自动/ 获得/ ;/ 脚本/ 解析器/ 在/ 执行/ 过程/ 中需/ 多次/ 被/ 使用/ ,/ 因此/ 以类/ 的/ 形式/ 封装/ 了/ 所有/ 所/ 需/ 方法/ 作为/ 一个/ 辅助/ 类/ ;/ 测试/ 执行/ 使用/ 多线程/ 技术/ 并行/ 地来/ 对/ 不同/ 的/ 测试/ 场景/ 进行/ 测试/ ,/ 并/ 记录/ 测试日志/ ./ 4.3/ ./ 4/ 测试/ 执行/ 在/ 上述/ 测试/ 脚本/ 的/ 解释/ 类/ 的/ 辅助/ 下/ ,/ 测试/ 执行/ 引擎/ 按/ 一定/ 顺序/ 解析/ 测试/ 脚本/ ,/ 按照/ 脚本/ 中/ 测试/ 场景/ (/ 即/ 脚本/ 中/ testcase/ 节点/ )/ 的/ 个数/ 实例/ 化/ 一个/ 或/ 多个/ 线程/ ,/ 即/ 模拟/ 多用户/ 来/ 对/ 具体/ Web/ 应用/ 进行/ 并行/ 测试/ ./ 由于/ 该/ 测试/ 执行/ 引擎/ 基于/ 数据/ 驱动/ 方式/ ,/ 可以/ 减少/ 需要/ 执行/ 所有/ 测试数据/ 所/ 需要/ 的/ 测试/ 脚本/ 量/ ,/ 即/ 可以/ 使用/ 很少/ 的/ 脚本/ 来/ 产生/ 大量/ 的/ 测试用例/ ./ 例如/ ,/ 在/ 一个/ 测试/ 场景/ 中有/ 5/ 个/ 顺序/ 执行/ 的/ 测试/ 步/ ,/ 其中/ 两个/ 测试/ 步/ 用到/ 了/ 外部/ 数据文件/ 作为/ 测试/ 输入/ ,/ 假设/ 测试/ 步/ 2/ 用到/ 了/ 3/ 组/ 测试数据/ ;/ 测试/ 步/ 4/ 用到/ 了/ 4/ 组/ 数据/ ,/ 则/ 最终/ 该/ 测试/ 执行/ 引擎/ 会/ 生成/ 12/ 个/ 具体/ 测试用例/ 来/ 覆盖/ 所有/ 的/ 可能/ 的/ 测试数据/ 组合/ ./ 执行/ 引擎/ 会/ 组合/ 所有/ 的/ 可能/ ,/ 把/ 不同/ 的/ 测试数据/ 引入/ 同一个/ 场景/ 来/ 产生/ 多种/ 测试用例/ ,/ 通过/ HTTPUnit/ 测试工具/ 来/ 对/ 指定/ 的/ Web/ 应用/ 进行/ 测试/ ./ 以下/ 为/ 测试/ 执行/ 的/ 核心/ 伪/ 代码/ :/ // // 对于/ 每个/ 测试/ 场景/ 实例/ 化/ 以下/ 线程/ 进行/ 执行/ privatevoidrun/ (/ )/ {/ 根据/ 具体/ 测试数据/ 对/ 该/ 测试/ 场景/ 生成/ 所有/ 可能/ 的/ 测试用例/ foreach/ 测试用例/ {/ foreach/ 测试/ 步/ 〈/ teststep/ 〉/ {/ 根据/ 辅助/ 类/ ParseXML/ 中/ 定义/ 的/ 方法/ 来/ 提取/ 测试/ 所/ 需/ 数据/ ;/ 提取/ 测试/ 步/ 〈/ teststep/ 〉/ 标记/ 中/ 各/ 属性/ 值/ name/ 、/ loop/ 等/ ;/ 提取/ HTTP/ 请求/ 〈/ request/ 〉/ 标记/ 中/ 属性/ 值/ url/ 、/ method/ 及/ 提取/ 预期/ HTTP/ 相应/ 〈/ response/ 〉/ 标记/ 中/ statuscode/ 及/ 所/ 使用/ HTTPUnit/ 测试工具/ 对/ Web/ 应用/ 发出请求/ 并/ 获得/ 调用/ 辅助/ 类/ WebAnalyse/ 中/ 对/ Web/ 应用/ 或/ 数据库/ 检查/ 的/ 输出/ Web/ 测试日志/ ;/ 设置/ 测试/ 输出/ 关键/ 信息/ reportDetails/ 用于/ 测试报告/ ;/ }/ }/ }/ 5/ 工具/ 演示/ 下面/ 对/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 系统/ 的/ 运行/ 进行/ 简单/ 描述/ ./ 系统/ 采用/ ArgoUML/ 对/ Web/ 应用/ 建模/ ,/ 图/ 6/ 是/ 兴宁/ 水库/ 移民/ 信息管理系统/ 应用/ 实例/ 的/ 状态图/ ./ 通过/ ArgoUML/ 将/ 上述/ 的/ 描述/ Web/ 应用/ 导航/ 的/ UML/ 状态图/ 保存/ 为/ XMI/ 格式文件/ ,/ 启动/ 本文/ 设计/ 并/ 开发/ 的/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 系统/ 工具/ Page14/ (/ Model/ -/ basedTestingToolforWebApplica/ -/ tions/ )/ ,/ 加载/ 通过/ ArgoUML/ 得到/ 的/ XMI/ 格式文件/ ,/ 点击/ tools/ 菜单/ 下/ 的/ “/ TransformXMI2FSM/ ”/ ,/ 就/ 完成/ 了/ UML/ 状态图/ 到/ 形式化/ 的/ FSM/ 模型/ 的/ 转换/ ,/ 点击/ tools/ 菜单/ 下/ 的/ “/ Visualization/ ”/ ,/ 就/ 可以/ 看到/ 图形化/ 的/ FSM/ ,/ 如图/ 7/ 所示/ ,/ 其中/ 最上层/ 图中/ 左边/ 有/ 4/ 个/ 节点/ ,/ 表示/ 4/ 个/ 复合/ 状态/ ./ 根据/ FSM/ 的/ 定义/ (/ 见/ 定义/ 1/ )/ ,/ 其/ 状态/ 均/ 为/ 基本/ 状态/ 或/ 简单/ 状态/ ,/ 也就是说/ ,/ 无/ 嵌套/ 状态/ 或/ 复合/ 状态/ ./ 所以/ ,/ 对/ 上述/ 得到/ 的/ 采用/ SCXML/ 描述/ 的/ 带/ 复合/ 状态/ 的/ FSM/ 进行/ 展平/ (/ 去/ 层次化/ )/ ,/ 点击/ tools/ 菜单/ 下/ 的/ “/ flatten/ ”/ ,/ 这样/ 就/ 得到/ 了/ 展平/ 后/ 的/ SCXML/ 格式/ 的/ FSM/ 模型/ ,/ 点击/ tools/ 菜单/ 下/ 的/ “/ Visualization/ ”/ ,/ 就/ 可以/ 对/ 展平/ 后/ 的/ FSM/ 进行/ 可视化/ ,/ 如图/ 8/ 所示/ ./ 另外/ ,/ 模型/ 规约/ 与/ 此/ 类似/ ./ 选择/ 不同/ 的/ 测试/ 准则/ 可/ 自动/ 产生/ 抽象/ 的/ 测试用例/ ,/ 如图/ 9/ 所示/ ./ 可用/ 不同/ 的/ 颜色/ 自动/ 显示/ ,/ 如图/ 10/ 所示/ ./ FSM/ 可视化/ 和/ 单条/ 测试用例/ 覆盖/ 的/ 测试/ 路径/ 在/ 产生/ 抽象/ 的/ 测试用例/ 后/ ,/ 实例/ 化/ 测试用例/ 并/ 产生/ 测试/ 脚本/ ,/ 测试/ 引擎/ 解释/ 执行/ 脚本/ ,/ 产生/ 测试报告/ ,/ 如图/ 11/ 所示/ ./ 6/ 结束语/ Web/ 应用/ 是/ 一种/ 典型/ 的/ 应用程序/ ./ Web/ 应用/ 本身/ 越来越/ 复杂/ ,/ 同时/ 它/ 所/ 使用/ 的/ 开发/ 语言/ 和/ 开发/ 模型/ 在/ 不断/ 发展/ ./ 所有/ 这些/ 因素/ 都/ 给/ 分析/ 、/ 建模/ 和/ 测试/ 带来/ 了/ 很大/ 的/ 难度/ ./ 目前/ 的/ 测试/ 主要/ 依赖/ 测试/ 工程师/ 的/ 直觉/ 和/ 经验/ ./ Web/ 应用/ 测试/ 被/ 认为/ 是/ 一个/ 耗时/ 、/ 代价/ 昂贵/ 的/ 过程/ ./ 因此/ ,/ 迫切需要/ 一套/ 系统/ 的/ Web/ 应用/ 测试方法/ 并/ 能/ 实现/ 测试/ 过程/ 的/ 自动化/ ./ 本文/ 正是/ 基于/ 以上/ 目的/ ,/ 设计/ 并/ 实现/ 了/ 一个/ 基于/ 模型/ 的/ Web/ 应用/ 测试/ 系统/ ,/ 以/ Web/ 应用/ 的/ UML/ 状态图/ 作为/ 系统/ 测试/ 模型/ ,/ 采用/ UML/ 顺序/ 图/ 描述/ 测试/ 目标/ ,/ 通过/ 转换/ 和/ 组合/ ,/ 构成/ FSM/ 测试/ 模型/ ./ 实现/ 了/ 测试/ 生成/ 的/ 自动化/ 、/ 测试/ 模型/ 以及/ 测试用例/ 的/ 可视化/ 、/ 测试/ 执行/ 的/ 自动化/ 等/ ./ Page15/ 图/ 11/ 测试/ 执行/ 

