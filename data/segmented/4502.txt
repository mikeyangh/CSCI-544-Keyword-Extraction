Page1/ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ 陈正宇/ 1/ )/ 1/ )/ (/ 南京/ 邮电大学/ 计算机/ 学院/ 南京/ 210003/ )/ 2/ )/ (/ 南京/ 邮电大学/ 宽带/ 无线通信/ 与/ 传感/ 网/ 技术/ 教育部/ 重点/ 实验室/ 南京/ 210003/ )/ 3/ )/ (/ 南京航空航天大学/ 计算机/ 学院/ 南京/ 210016/ )/ 摘要/ 通过/ 采样/ 部分/ 元素/ 补全/ 低/ 秩/ 矩阵/ 的/ 缺失/ 元素/ 是/ 许多/ 实际/ 应用/ 如/ 图像/ 修复/ 、/ 无线/ 传感/ 网/ 数据/ 收集/ 和/ 推荐/ 系统/ 等/ 经常/ 遇到/ 的/ 一个/ 颇具/ 挑战性/ 的/ 难题/ ./ 在/ 机器/ 学习/ 领域/ ,/ 这/ 类/ 问题/ 通常/ 能/ 刻画/ 成/ 矩阵/ 补全/ 问题/ ./ 虽然/ 现有/ 研究/ 针对/ 矩阵/ 补全/ 问题/ 已/ 提出/ 了/ 许多/ 有效/ 算法/ ,/ 但/ 这些/ 算法/ 通常/ 仅限于/ 采样/ 元素/ 要么/ 无噪/ 要么/ 仅/ 含/ 少量/ 随机/ 高斯/ 噪声/ 的/ 补全/ 情形/ ,/ 难以/ 处理/ 实际/ 问题/ 中/ 常见/ 的/ 行/ 结构化/ 噪声/ ./ 为了/ 解决/ 这个/ 问题/ ,/ 该文/ 首先/ 借助/ 分类器/ 设计/ 中/ 流行/ 的/ L2/ ,/ 1/ 范数/ 正则/ 化/ 技术/ 来/ 平滑/ 此类/ 噪声/ ,/ 并/ 将/ 该/ 问题/ 建模/ 为/ 一类/ 基于/ L2/ ,/ 1/ 范数/ 正则/ 化/ 的/ 凸/ 约束/ 优化/ 问题/ ./ 其次/ ,/ 为了/ 快速/ 有效/ 地/ 求解/ ,/ 我们/ 将/ 向量/ 空间/ 的/ 线性/ Bregman/ 迭代/ 算法/ 和/ 近邻/ 算子/ 技术/ 拓展/ 到/ 矩阵/ 空间/ ,/ 进一步/ 设计/ 了/ 一种/ 鲁棒/ 的/ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ (/ LiBIMC/ )/ ./ 严格/ 的/ 理论/ 分析/ 证明/ 了/ LiBIMC/ 迭代/ 算法/ 的/ 不动点/ 正是/ 结构化/ 噪声/ 矩阵/ 补全/ 问题/ 的/ 全局/ 最优/ 解/ ./ 数值/ 实验/ 结果表明/ ,/ 和/ 已有/ 的/ 矩阵/ 补全/ 算法/ 相比/ ,/ LiBIMC/ 算法/ 不仅/ 能/ 更好/ 地/ 恢复/ 结构化/ 噪声/ 矩阵/ 的/ 缺失/ 元素/ ,/ 还/ 能/ 精确/ 地/ 辨识/ 出/ 采样/ 矩阵/ 中/ 被/ 污染/ 的/ 元素/ 所在/ 行/ 的/ 位置/ 信息/ ./ 关键词/ 矩阵/ 补全/ ;/ 结构化/ 噪声/ ;/ L2/ ,/ 1/ 范数/ 正则/ 化/ ;/ 线性/ Bregman/ 迭代/ ;/ 近邻/ 算子/ 1/ 引言/ 近年来/ ,/ 压缩/ 感知/ 理论/ 为/ 信号/ 采集/ 技术/ 带来/ 了/ 革命性/ 的/ 突破/ ./ 众所周知/ ,/ 压缩/ 感知/ 理论/ 要求/ 在/ 已知/ 信号/ 具有/ 稀疏/ 性/ 的/ 条件/ 下/ 对/ 信号/ 进行/ 采集/ 和/ 重构/ ,/ 而/ 在/ 很多/ 实际/ 问题/ 中/ ,/ 需要/ 重构/ 的/ 目标/ 常常/ 是/ 以/ 矩阵/ 的/ 形式/ 组织/ 的/ ./ 因此/ ,/ 压缩/ 感知/ 理论/ 便/ 自然/ 地/ 从/ 向量/ 空间/ 被/ 拓展/ 至/ 矩阵/ 空间/ ,/ 从而/ 利用/ 矩阵/ 奇异/ 值/ 向量/ 的/ 稀疏/ 性/ ,/ 通过/ 采样/ 矩阵/ 的/ 部分/ 元素/ 来/ 恢复/ 低/ 秩/ 矩阵/ ./ 在/ 机器/ 学习/ 领域/ ,/ 这/ 类/ 问题/ 通常/ 被/ 刻画/ 为/ 矩阵/ 补全/ (/ MatrixCompletion/ )/ 问题/ ./ 迄今为止/ ,/ 矩阵/ 补全/ 理论/ 已/ 在/ 图像/ 修复/ [/ 1/ ]/ 、/ 三维/ 运动/ 估计/ [/ 2/ ]/ 、/ 无线/ 传感/ 网/ 数据/ 收集/ [/ 3/ ]/ 、/ 多/ 标记/ 分类/ [/ 4/ ]/ 、/ 视频/ 去/ 噪/ [/ 5/ ]/ 和/ 推荐/ 系统/ [/ 6/ ]/ 等/ 领域/ 得到/ 了/ 重要/ 应用/ ,/ 也/ 逐渐/ 成为/ 机器/ 学习/ 、/ 模式识别/ 以及/ 计算机/ 视觉/ 领域/ 的/ 主要/ 研究/ 热点/ 之一/ ./ 现有/ 研究/ 针对/ 矩阵/ 补全/ 问题/ 已/ 提出/ 了/ 许多/ 有效/ 算法/ ./ 这些/ 算法/ 大致/ 可/ 分为/ 两类/ :/ 一类/ 是/ 基于/ 核/ 范数/ 最小化/ 的/ 迭代/ 算法/ ,/ 如/ SVT/ 算法/ (/ SingularValueThresholding/ )/ [/ 7/ ]/ 、/ FPCA/ 算法/ (/ FixedPointContin/ -/ uationwithApproximateSVD/ )/ [/ 8/ ]/ 、/ IALM/ 算法/ (/ InexactAugmentedLagrangeMultipliers/ )/ [/ 9/ ]/ 、/ ADM/ 算法/ (/ AlternatingDirectionMethod/ )/ [/ 10/ ]/ 、/ OptSpace/ 算法/ [/ 11/ ]/ 和/ MC/ _/ TNNR/ 算法/ (/ MatrixCompletionviaTruncatedNuclearNormRegularization/ )/ [/ 12/ ]/ 等/ ;/ 另一类/ 是/ 基于/ 矩阵/ 分解/ 的/ 优化/ 算法/ ,/ 包括/ LMaFit/ 算法/ (/ Low/ -/ rankMatrixFitting/ )/ [/ 13/ ]/ 和/ RTRMC/ 算法/ (/ Riemanniantrust/ -/ regionforMC/ )/ [/ 14/ ]/ 等/ ./ 这些/ 矩阵/ 补全/ 算法/ 在/ 采样/ 矩阵/ 无噪/ 或者/ 仅/ 含/ 少量/ 高斯/ 随机噪声/ 的/ 情况/ 下/ 表现/ 良好/ ,/ 但是/ 当/ 采样/ 矩阵/ 中/ 的/ 某些/ 行/ 受到/ 损坏/ 时/ ,/ 这些/ 算法/ 往往/ 表现/ 得/ 不够/ 稳定/ ./ 本文/ 将/ 采样/ 矩阵/ 中/ 受到/ 损坏/ 的/ 行/ 称为/ 结构化/ 噪声/ ,/ 并/ 将/ 这种/ 矩阵/ 补全/ 情形/ 称为/ 结构化/ 噪声/ 矩阵/ 补全/ ./ 结构化/ 噪声/ 矩阵/ 补全/ 的/ 一个/ 典型/ 应用/ 场景/ 是/ 推荐/ 系统/ ./ 当前/ ,/ 随着/ 互联网/ 技术/ 的/ 日趋完善/ ,/ 网上/ 购物/ 等/ 在线/ 消费/ 模式/ 逐渐/ 成为/ 一种/ 潮流/ ,/ 越来越/ 多/ 的/ 人/ 喜欢/ 在/ 网上/ 购买/ 自己/ 需要/ 的/ 商品/ ./ 对于/ 商家/ 而言/ ,/ 如何/ 根据/ 消费者/ 反馈/ 的/ 不/ 完全/ 信息/ 准确/ 地/ 预测/ 他们/ 的/ 偏好/ 从而/ 给出/ 合理/ 的/ 购物/ 推荐/ 成为/ 了/ 一个/ 至关重要/ 的/ 问题/ ./ 理想/ 的/ 情况/ 是/ 由/ 消费者/ 反馈/ 的/ 评分/ 信息/ 都/ 是/ 真实/ 的/ ,/ 也就是说/ 采样/ 数据/ 不/ 含/ 噪声/ ./ 但是/ ,/ 实际上/ 由于/ 评分/ 反馈/ 过程/ 缺乏/ 有效/ 的/ 监督/ 和/ 约束/ 机制/ ,/ 少部分/ 消费者/ 有时/ 可能/ 不/ 愿意/ 反馈/ 他们/ 的/ 真实/ 感受/ ,/ 从而/ 随意/ 给出/ 他们/ 的/ 评分/ ;/ 更/ 有/ 甚至/ ,/ 个别/ 不诚实/ 的/ 商家/ 可能/ 出于/ 不当/ 牟利/ 的/ 目的/ 伪装/ 或者/ 串通/ 消费者/ 恶意/ 地/ 贬低/ 竞争对手/ 的/ 产品/ 评分/ 同时/ 拔高/ 自己/ 产品/ 的/ 评分/ ./ 这样一来/ ,/ 如果/ 我们/ 将/ 消费者/ 作为/ 行/ 信息/ ,/ 产品/ 作为/ 列/ 信息/ ,/ 就/ 导致/ 采样/ 到/ 的/ 评分/ 矩阵/ 的/ 某些/ 行/ 数据/ 不/ 真实/ ,/ 我们/ 将/ 其/ 视为/ 采样/ 矩阵/ 受到/ 行/ 结构化/ 噪声污染/ ./ 因此/ ,/ 在/ 这种/ 结构化/ 噪声/ 采样/ 情形/ 下/ 如何/ 补全/ 评分/ 矩阵/ 的/ 缺失/ 元素/ ,/ 并/ 识别/ 那些/ 噪声污染/ 行/ 元素/ 的/ 位置/ 信息/ 就/ 显得/ 尤为重要/ ./ 为了/ 求解/ 此类/ 结构化/ 噪声/ 矩阵/ 补全/ 问题/ ,/ 本文/ 引入/ 了/ 分类器/ 设计/ 中/ 流行/ 的/ L2/ ,/ 1/ 范数/ 正则/ 化/ 惩罚/ 因子/ 来/ 平滑/ 结构化/ 噪声/ ,/ 将/ 该/ 问题/ 建模/ 为/ 一类/ 基于/ L2/ ,/ 1/ 范数/ 正则/ 化/ 的/ 凸/ 约束/ 优化/ 问题/ ./ 为了/ 进一步/ 有效/ 地/ 求解/ 该/ 凸/ 约束/ 优化/ 问题/ ,/ 本文/ 将/ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ 推广/ 到/ 矩阵/ 空间/ ,/ 采用/ 矩阵/ 空间/ 近邻/ 算子/ 技术/ 和/ 线性/ Bregman/ 迭代/ 算法/ 设计/ 了/ 一种/ 鲁棒/ 的/ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ (/ LinearizedBregmanIterationAlgorithmforMatrixCompletionwithStructuralNoise/ ,/ Page3LiBIMC/ )/ ./ LiBIMC/ 算法/ 在/ 求解/ 的/ 整个/ 迭代/ 过程/ 都/ 较/ 好/ 地/ 保持/ 了/ 矩阵/ 变量/ 的/ 低/ 秩性/ 和/ 稀疏/ 性/ ,/ 因而/ 使得/ 该/ 算法/ 具有/ 较/ 高/ 的/ 执行/ 效率/ 和/ 良好/ 的/ 可/ 扩放性/ ,/ 从而/ 能/ 适用/ 于/ 较/ 大规模/ 的/ 矩阵/ 补全/ 问题/ ./ 同时/ ,/ 严格/ 的/ 理论/ 分析/ 也/ 证明/ 了/ LiBIMC/ 算法/ 的/ 不动点/ 正是/ 此类/ 结构化/ 噪声/ 矩阵/ 补全/ 问题/ 的/ 全局/ 最优/ 解/ ./ 数值/ 实验/ 结果表明/ ,/ 和/ IALM/ 、/ SVT/ 和/ FPCA/ 算法/ 相比/ ,/ LiBIMC/ 算法/ 不仅/ 在/ 没有/ 移除/ 噪声/ 行/ 的/ 情况/ 下/ 获得/ 了/ 相对/ 更好/ 的/ 补全/ 精度/ ,/ 更为重要/ 的/ 是/ ,/ LiBIMC/ 算法/ 能/ 准确/ 辨识/ 出/ 采样/ 矩阵/ 中/ 被/ 结构化/ 噪声污染/ 的/ 行/ 位置/ 信息/ ,/ 从而/ 在/ 补全/ 不/ 含噪/ 部分/ 缺失/ 元素/ 时/ 可以/ 事先/ 移除/ 采样/ 矩阵/ 的/ 噪声/ 行/ ,/ 大大提高/ 未受/ 噪声污染/ 行/ 元素/ 的/ 补全/ 精度/ ./ 从/ 这个/ 意义/ 上/ 来说/ ,/ 在/ 进行/ 结构化/ 噪声/ 矩阵/ 补全/ 时/ ,/ LiBIMC/ 算法/ 可以/ 作为/ 现有/ 矩阵/ 补全/ 算法/ 的/ 预处理/ 步骤/ ./ 本文/ 第/ 2/ 节对/ 相关/ 工作/ 进行/ 讨论/ ;/ 第/ 3/ 节/ 介绍/ 一些/ 数学/ 预备/ 知识/ ;/ 第/ 4/ 节/ 介绍/ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ ;/ 第/ 5/ 节为/ 本文/ 主要/ 部分/ ,/ 该/ 部分/ 针对/ 结构化/ 噪声/ 矩阵/ 补全/ 问题/ 提出/ 了/ 一类/ 鲁棒/ 的/ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ (/ LiBIMC/ )/ ,/ 并/ 从/ 理论/ 上/ 证明/ LiBIMC/ 算法/ 的/ 不动点/ 即/ 为/ 结构化/ 噪声/ 矩阵/ 补全/ 问题/ 的/ 全局/ 最优/ 解/ ;/ 第/ 6/ 节/ 介绍/ 一些/ 数值/ 实验/ 并/ 对/ 实验/ 结果/ 进行/ 分析/ ;/ 第/ 7/ 节对/ 所/ 研究/ 的/ 内容/ 进行/ 总结/ 并/ 展望未来/ 的/ 研究/ 方向/ ./ 2/ 相关/ 工作/ 标准/ 的/ 矩阵/ 补全/ 问题/ 最初/ 被/ 描述/ 为/ 犡/ ∈/ 犚/ 其中/ Ω/ / [/ n1/ ]/ ×/ [/ n2/ ]/ (/ [/ n1/ ]/ =/ {/ 1/ ,/ …/ ,/ n1/ }/ ,/ n2/ =/ {/ 1/ ,/ …/ ,/ n2/ }/ )/ 为/ 采样/ 元素/ 的/ 索引/ 集合/ ,/ P/ Ω/ (/ ·/ )/ 为/ 正交投影/ 算子/ ,/ 表示/ 当/ (/ i/ ,/ j/ )/ ∈/ Ω/ 时/ ,/ Rij/ 为/ 采样/ 元素/ ,/ 即/ 在/ 式/ (/ 1/ )/ 中/ ,/ 由于/ rank/ (/ ·/ )/ 函数/ 的/ 非/ 凸性/ 和/ 不连续性/ ,/ 导致/ 该/ 问题/ 求解/ 成为/ NP/ 难/ 问题/ ,/ 在/ 所有/ 已知/ 的/ 求解/ 算法/ 中/ ,/ 其/ 求解/ 的/ 复杂度/ 均/ 随着/ 矩阵/ 维数/ 的/ 增长/ 呈/ 平方/ 倍/ 指数/ 关系/ 增长/ ./ 类似/ 于/ 压缩/ 感知/ 理论/ 中/ 常用/ 的/ 将/ 向量/ L0/ 范数/ 松弛到/ L1/ 范数/ 的/ 技巧/ ,/ 考虑/ 到/ 矩阵/ 的/ 秩/ 实际上/ 等同于/ 该/ 矩阵/ 奇异/ 值/ 向量/ 的/ L0/ 范数/ ,/ 而/ 矩阵/ 的/ 核/ 范数/ 则/ 等同于/ 奇异/ 值/ 向量/ 的/ L1/ 范数/ ./ 因此/ ,/ 为了/ 使/ 矩阵/ 补全/ 问题/ 易于/ 求解/ ,/ 一个/ 自然/ 的/ 想法/ 就是/ 利用/ 凸/ 的/ 核/ 范数/ 代替/ 非凸/ 的/ 秩/ 函数/ ,/ 将/ 问题/ (/ 1/ )/ 松弛/ 为/ 凸/ 优化/ 问题/ ./ 为此/ ,/ Fazel/ 在/ 文献/ [/ 15/ ]/ 中/ 严格/ 证明/ 了/ 矩阵/ 核/ 范数/ 是/ 秩/ 函数/ 在/ 矩阵/ 谱/ 范数/ 意义/ 下/ 单位/ 球上/ 的/ 最佳/ 凸/ 逼近/ ./ 随后/ ,/ Recht/ 和/ Fazel/ 等/ 人/ 还/ 在/ 文献/ [/ 16/ ]/ 中/ 进一步/ 证明/ 了/ 矩阵/ 秩/ 函数/ 可以/ 被/ 其/ 凸/ 包核/ 范数/ 所/ 取代/ ,/ 继而/ 可以/ 将/ 问题/ (/ 1/ )/ 松弛/ 为/ 凸/ 优化/ 问题/ (/ 2/ )/ :/ 目前/ 对于/ 问题/ (/ 2/ )/ 的/ 求解/ 算法/ 大多/ 是从/ 向量/ 空间/ 压缩/ 感知/ 理论/ 直接/ 推广/ 过来/ 的/ 矩阵/ 核/ 范数/ 最小化/ 方法/ ,/ 如/ Cai/ 等/ 人/ [/ 7/ ]/ 提出/ 的/ SVT/ 算法/ ,/ 这/ 也/ 是/ 和/ 本文/ 所提/ LiBIMC/ 算法/ 最/ 相关/ 的/ 算法/ ./ SVT/ 算法/ 和/ LiBIMC/ 算法/ 的/ 基本/ 思想/ 都/ 是/ 基于/ 线性/ Bregman/ 算法/ 求解/ ./ SVT/ 算法/ 的/ 实质/ 是/ 将/ 求解/ 压缩/ 感知/ 基/ 追踪/ 优化/ 问题/ 的/ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ [/ 17/ ]/ 直接/ 推广/ 到/ 矩阵/ 空间/ ,/ 然后/ 再/ 将/ 矩阵/ 空间/ 线性/ Bregman/ 迭代/ 与/ 近邻/ 前/ 向/ 后/ 向/ 分裂/ (/ ProximalForwardBackwardSplitting/ ,/ PFBS/ )/ 算法/ [/ 18/ ]/ 相结合/ ,/ 算法/ 简单易行/ ,/ 特别/ 适合/ 大规模/ 问题/ 求解/ ,/ 但是/ 该/ 算法/ 对/ 采样/ 矩阵/ 的/ 容错性/ 不是/ 很/ 好/ ./ 类似/ 于/ SVT/ 算法/ ,/ 本文/ 也/ 采用/ 了/ 从/ 向量/ 空间/ 推广/ 而来/ 的/ 线性/ Bregman/ 迭代/ 算法/ ,/ 但/ SVT/ 算法/ 是/ 基于/ 一元/ 矩阵/ 函数/ Bregman/ 距离/ 的/ 直接/ 推广/ ,/ 而/ LiBIMC/ 算法/ 是/ 基于/ 二元/ 矩阵/ 函数/ Bregman/ 距离/ 的/ 间接/ 推广/ ,/ 其/ 二元/ 矩阵/ 函数/ 的/ 产生/ 是/ 由于/ 噪声/ 矩阵/ 的/ 引入/ 而/ 导致/ 的/ ./ 因此/ ,/ LiBIMC/ 算法/ 和/ SVT/ 算法/ 的/ 最大/ 区别/ :/ 一方面/ 在于/ 求解/ 的/ 问题/ 不同/ ;/ 另一方面/ 在于/ 求解/ 过程/ 中/ 所用/ 的/ 矩阵/ 空间/ 线性/ Bregman/ 迭代/ 算法/ 也/ 不同/ ,/ LiBIMC/ 算法/ 用到/ 的/ 是/ 矩阵/ 空间/ 交替/ 线性/ 分裂/ Bregman/ 迭代/ 算法/ ./ Ma/ 等/ 人/ [/ 8/ ]/ 提出/ 的/ FPCA/ 算法/ 是/ 求解/ 问题/ (/ 2/ )/ 的/ 另/ 一种/ 矩阵/ 核/ 范数/ 最小化/ 方法/ ./ FPCA/ 算法/ 基于/ 不动点/ 思想/ ,/ 直接/ 采用/ 算子/ 分裂/ 技术/ 构造/ 迭代/ 算法/ 求解/ 矩阵/ LASSO/ 模型/ :/ min/ 犡/ ∈/ 犚/ 该/ 算法/ 是/ 受/ 文献/ [/ 19/ ]/ 中/ 压缩/ 感知/ 的/ 不动点/ 迭代/ 算法/ 启发/ 得到/ 的/ ./ 然而/ 矩阵/ LASSO/ 对于/ 相关性/ 非常/ 强/ 的/ 数据/ 通常/ 会/ 出现/ 不/ 稳定/ 的/ 情况/ ./ Lin/ 等/ 人/ 则/ 将/ 矩阵/ 补全/ 问题/ 视为/ 矩阵/ 恢复/ (/ 或/ RobustPCA/ )/ 问题/ 的/ 特例/ ,/ 即将/ 矩阵/ 补全/ 问题/ 建模/ 为/ min/ 犡/ ∈/ 犚/ 进而/ 将/ 求解/ 矩阵/ 恢复/ 问题/ 的/ IALM/ 算法/ [/ 9/ ]/ 推广/ 到/ 求解/ 问题/ (/ 4/ )/ ,/ IALM/ 算法/ 本质/ 上/ 和/ Chen/ 等/ 人/ [/ 10/ ]/ 提/ Page4/ 出/ 的/ ADM/ 算法/ 是/ 一致/ 的/ ,/ 因而/ 两者/ 具有/ 相近/ 的/ 算法/ 性能/ ./ 文献/ [/ 9/ -/ 10/ ]/ 的/ 研究/ 结果/ 均/ 表明/ ,/ 在/ 获得/ 相近/ 的/ 补全/ 精度/ 的/ 前提/ 下/ ,/ IALM/ 算法/ 和/ ADM/ 算法/ 的/ 收敛/ 速度/ 明显/ 优于/ SVT/ 算法/ 和/ FPCA/ 算法/ ./ OptSpace/ 算法/ [/ 11/ ]/ 是/ 一种/ 有别于/ 前四者/ 的/ 算法/ ,/ 它/ 求解/ 问题/ (/ 1/ )/ 的/ 下述/ 近似/ 模型/ :/ min1/ ×/ nn2/ 犡/ ∈/ 犚/ 将/ 低/ 秩/ 的/ 要求/ 作为/ 约束条件/ ,/ 目标/ 函数/ 则/ 为/ 矩阵/ 补全/ 的/ 误差/ ,/ 即/ 在/ 低/ 秩性/ 约束/ 下/ ,/ 使得/ 补全/ 得到/ 的/ 矩阵/ 元素/ 尽可能/ 地/ 接近/ 真实/ 值/ ,/ OptSpace/ 本质/ 上/ 是/ 一种/ 梯度/ 下降/ 算法/ ,/ 它/ 面临/ 的/ 问题/ 在于/ ,/ 矩阵/ 的/ 秩/ 本来/ 就是/ 未知/ 的/ ,/ 而/ 在/ 问题/ 求解/ 时/ 却/ 要求/ 预先/ 得到/ 矩阵/ 的/ 秩/ 信息/ ,/ 好/ 在/ 文献/ [/ 20/ ]/ 中/ 给出/ 了/ 估计/ 矩阵/ 秩/ 的/ 方法/ ./ 最近/ ,/ Hu/ 等/ 人/ [/ 12/ ]/ 认为/ 现有/ 的/ 这些/ 核/ 范数/ 最小化/ 方法/ 有/ 一个/ 共同/ 的/ 缺陷/ 在于/ ,/ 它们/ 都/ 是/ 通过/ 同时/ 最小化/ 所有/ 奇异/ 值/ 之/ 和/ 而/ 获得/ 结果/ 矩阵/ 的/ 低/ 秩性/ ,/ 这/ 将/ 导致/ 所/ 求解/ 的/ 结果/ 矩阵/ 虽然/ 低/ 秩/ 但/ 不能/ 很/ 好/ 地/ 逼近/ 真实/ 解/ ./ 由于/ 矩阵/ 是否/ 低/ 秩/ 主要/ 取决于/ 最小/ 的/ 那些/ 奇异/ 值/ 之/ 和/ ,/ 如果/ 能/ 通过/ 迭代/ 优化/ 使得/ 结果/ 矩阵/ 最小/ 的/ 那些/ 奇异/ 值/ 之/ 和/ 趋/ 近于零/ ,/ 那么/ 即使/ 那些/ 大/ 奇异/ 值/ 之/ 和/ 足够/ 大/ 也/ 不会/ 影响/ 结果/ 矩阵/ 的/ 低/ 秩性/ ./ 因此/ ,/ 他们/ 将/ 最小/ 的/ 那些/ 奇异/ 值/ 之/ 和/ 定义/ 为/ 截断/ 核/ 范数/ 犡/ r/ ,/ 并/ 采用/ 截断/ 核/ 范数/ 来/ 代替/ 标准/ 核/ 范数/ 犡/ / ,/ 从而/ 将/ 矩阵/ 补全/ 问题/ 建模/ 为/ 如下/ 优化/ 问题/ :/ 同时/ 针对/ 该/ 优化/ 问题/ 提出/ 了/ 3/ 种/ 不同/ 的/ 求解/ 策略/ ,/ 我们/ 将/ 其/ 统称/ 为/ MC/ _/ TNNR/ 算法/ ./ 文献/ [/ 12/ ]/ 的/ 实验/ 结果表明/ ,/ MC/ _/ TNNR/ 算法/ 很/ 好地解决/ 了/ 所/ 求解/ 的/ 结果/ 矩阵/ 不能/ 精确/ 地/ 逼近/ 目标/ 矩阵/ 真实/ 解/ 的/ 问题/ ,/ 矩阵/ 补全/ 精度/ 得到/ 了/ 很大/ 程度/ 的/ 提高/ ./ 但/ 该/ 算法/ 的/ 不足之处/ 在于/ 问题/ 求解/ 过程/ 中/ 要求/ 预先/ 估计/ 矩阵/ 的/ 秩/ 信息/ ./ 求解/ 矩阵/ 补全/ 问题/ 的/ 另一类/ 算法/ 是/ 基于/ 矩阵/ 分解/ 的/ 方法/ ,/ 该类/ 方法/ 的/ 最大/ 优点/ 在于/ 求解/ 过程/ 不/ 需要/ 执行/ 奇异/ 值/ 分解/ ,/ 从而/ 加速/ 了/ 算法/ 的/ 执行/ 效率/ ./ 典型/ 的/ 算法/ 包括/ Wen/ 等/ 人/ [/ 13/ ]/ 提出/ 的/ LMaFit/ (/ Low/ -/ rankMatrixFitting/ )/ 算法/ ,/ 该/ 算法/ 主要/ 求解/ 问题/ (/ 1/ )/ 的/ 如下/ 近似/ 模型/ :/ min/ 犝/ ,/ 犠/ ,/ 犣/ 其中/ 犝/ ∈/ 犚/ 秩界/ ,/ 如果/ 能/ 预先/ 获取/ 合适/ 的/ k/ 值/ ,/ LMaFit/ 算法/ 就/ 能/ 在/ 较/ 小/ 的/ 时间/ 复杂度/ 内/ 获得/ 相当/ 精度/ 的/ 解/ ./ 但是/ LMaFit/ 算法/ 除了/ 需要/ 预先/ 估计/ 秩界/ 以外/ ,/ 还/ 存在/ 一个/ 不足/ 的/ 地方/ 是/ 所求/ 出/ 的/ (/ 犝/ ,/ 犠/ )/ 解不/ 唯一/ ./ 为了/ 克服/ 这个/ 不足/ ,/ Boumal/ 等/ 人/ 在/ 文献/ [/ 14/ ]/ 中/ 提出/ 了/ 一种/ 改进/ 的/ 基于/ Grassmann/ 流形/ 的/ RTRMC/ 算法/ ./ 文献/ [/ 14/ ]/ 的/ 数值/ 实验/ 表明/ ,/ RTRMC/ 算法/ 对于/ 行列/ 不/ 相等/ 的/ 长方形/ 矩阵/ 补全/ 问题/ 尤其/ 有效/ ,/ 其/ 补全/ 性能/ 超过/ 了/ 大多数/ 现有/ 的/ 矩阵/ 补全/ 算法/ ./ 3/ 数学/ 预备/ 知识/ 定义/ 1/ ./ 矩阵/ 范数/ [/ 21/ ]/ ./ 假设/ 秩为/ r/ 的/ 矩阵/ 犡/ ∈/ n1/ ×/ n2/ 的/ 奇异/ 值/ 被/ 分解/ 为/ 犡/ =/ 犝/ Σ/ 犞/ T/ ,/ 其中/ 犝/ =/ 犚/ [/ u1/ ,/ u2/ ,/ …/ ,/ ur/ ]/ ∈/ 犚/ 犝/ T/ 犝/ =/ 犐/ ,/ 犞/ T/ 犞/ =/ 犐/ ;/ Σ/ =/ diag/ (/ {/ σ/ i1/ / i/ / r/ }/ )/ 且/ σ/ 1/ / σ/ 2/ / …/ / σ/ r/ >/ 0/ ,/ 则/ :/ 矩阵/ 犡/ 的/ 核/ 范数/ 定义/ 为/ 矩阵/ 犡/ 的/ Frobenius/ 范数/ 定义/ 为/ 矩阵/ 犡/ 的/ L2/ ,/ 1/ 范数/ 定义/ 为/ 定义/ 2/ ./ 次梯度/ 与/ 次/ 微分/ [/ 21/ ]/ ./ 令/ Ψ/ (/ 犡/ )/ 是/ 犚/ 上/ 的/ 实值/ 凸函数/ ,/ 如果/ 犣/ ∈/ 犚/ Ψ/ (/ 犡/ )/ / Ψ/ (/ 犡/ 0/ )/ +/ 〈/ 犣/ ,/ 犡/ -/ 犡/ 0/ 〉/ ,/ / 犡/ ∈/ 犚/ 则/ 称/ 犣/ 为/ 矩阵/ 函数/ Ψ/ (/ 犡/ )/ 在/ 犡/ 0/ 处/ 的/ 次梯度/ ,/ 所有/ 在/ 犡/ 0/ 处/ 的/ 次梯度/ 的/ 集合/ 记/ 为/ / Ψ/ (/ 犡/ 0/ )/ ,/ 同时/ 称/ / Ψ/ (/ 犡/ 0/ )/ 为/ Ψ/ (/ 犡/ )/ 在/ 犡/ 0/ 处/ 的/ 次/ 微分/ ./ 定义/ 3/ ./ 奇异/ 值/ 阈值/ 算子/ [/ 7/ ]/ ./ 假设/ 秩为/ r/ 的/ 矩阵/ 犡/ ∈/ 犚/ 则/ τ/ 对应/ 的/ 奇异/ 值/ 阈值/ 算子/ 定义/ 为/ 其中/ 犛/ τ/ (/ Σ/ )/ =/ diag/ (/ {/ max/ (/ 0/ ,/ σ/ i/ -/ τ/ )/ }/ )/ ./ 定义/ 4/ ./ 矩阵/ 函数/ Bregman/ 距离/ [/ 22/ ]/ ./ 凸函数/ J/ (/ 犡/ )/ :/ 犚/ 离/ 定义/ 为/ kD/ 犘/ J/ (/ 犡/ ,/ 犡/ k/ )/ =/ J/ (/ 犡/ )/ -/ J/ (/ 犡/ k/ )/ -/ 〈/ 犘/ k/ ,/ 犡/ -/ 犡/ k/ 〉/ ,/ 其中/ 矩阵/ 犘/ k/ ∈/ 犚/ 梯度/ ,/ 〈/ ·/ ,/ ·/ 〉/ 为/ 矩阵/ 内积/ 运算/ ./ 定义/ 5/ ./ 矩阵/ 空间/ 近邻/ 算子/ [/ 18/ ]/ ./ 令/ Ψ/ (/ 犡/ )/ 是/ 犚/ n1/ ×/ n2/ 上/ 的/ 实值/ 凸函数/ ,/ 对/ 任意/ 犞/ ∈/ 犚/ Page5/ 近邻/ 算子/ 定义/ 为/ prox/ Ψ/ (/ 犡/ )/ (/ 犞/ )/ =/ argmin/ 定理/ 1/ [/ 7/ ]/ ./ 对/ 任意/ 的/ τ/ >/ 0/ ,/ 犡/ ,/ 犣/ ∈/ 犚/ prox/ τ/ 犡/ 定理/ 2/ [/ 18/ ]/ ./ 假设/ F1/ ,/ F2/ 是/ 矩阵/ 空间/ 犚/ 个/ 下/ 半/ 连续/ 的/ 凸函数/ ,/ F2/ 可微且/ 对/ 某个/ β/ ∈/ (/ 0/ ,/ +/ )/ 满足/ / F2/ (/ 犝/ )/ -/ / F2/ (/ 犞/ )/ F/ / β/ 犝/ -/ 犞/ F/ ,/ 则/ 对于/ 凸/ 优化/ 问题/ :/ 有/ 如下/ 性质/ :/ (/ 1/ )/ 如果/ lim/ 题/ (/ 8/ )/ 至少/ 存在/ 一个/ 解/ ;/ (/ 2/ )/ 如果/ F1/ +/ F2/ 是/ 严格凸/ 的/ ,/ 则/ 问题/ (/ 8/ )/ 至多/ 存在/ 一个/ 解/ ;/ (/ 3/ )/ 如果/ F1/ ,/ F2/ 满足条件/ (/ 1/ )/ 和/ (/ 2/ )/ ,/ 则/ 问题/ (/ 8/ )/ 存在/ 唯一/ 解/ ,/ 且/ 对/ 任意/ 的/ 初始值/ 犡/ 0/ 及/ 0/ </ δ/ </ 2/ // β/ ,/ 用/ 如下/ 方法/ 生成/ 的/ 迭代/ 序列/ 犡/ k/ +/ 1/ 收敛/ 到/ 问题/ (/ 8/ )/ 的/ 唯一/ 解/ :/ 犡/ k/ +/ 1/ =/ prox/ δ/ F1/ 其中/ ,/ 性质/ (/ 3/ )/ 所/ 描述/ 的/ 求解/ 算法/ 称之为/ 近邻/ 前/ 向/ 后/ 向/ 分裂/ 算法/ (/ ProximalForwardBackwardSplitting/ ,/ PFBS/ )/ ./ 定理/ 3/ [/ 23/ -/ 24/ ]/ ./ 对/ 任意/ 的/ τ/ >/ 0/ ,/ 犡/ ,/ 犡/ / ,/ 犠/ ∈/ 犚/ 如果/ 令/ (/ 犡/ / )/ (/ i/ )/ 则/ prox/ τ/ 犡/ 2/ ,/ 1i/ 行/ ,/ 犠/ (/ i/ )/ 4/ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ Bregman/ 迭代/ 起源于/ 凸/ 分析/ 中/ 一种/ 寻求/ 等式/ 约束/ 下/ 目标/ 函数/ 极值/ 的/ 优化/ 方法/ [/ 22/ ]/ ./ Osher/ 等/ 人/ [/ 25/ ]/ 于/ 2005/ 年/ 首先/ 将/ 该/ 方法/ 应用/ 于/ 全变分/ 图像复原/ ,/ 随之/ 被/ 拓展/ 应用/ 到/ 压缩/ 感知/ [/ 26/ ]/ 、/ 图像去噪/ [/ 17/ ]/ 等/ 领域/ ./ 该/ 方法/ 已/ 成为/ 求解/ L1/ 范数/ 优化/ 问题/ 的/ 最/ 有效/ 方法/ 之一/ ./ 假设/ J/ (/ 狌/ )/ 和/ H/ (/ 狌/ )/ 为/ Rn/ 上/ 的/ 两个/ 凸函数/ ,/ 其中/ 函数/ H/ (/ 狌/ )/ 可微/ ,/ J/ (/ 狌/ )/ 不可/ 微/ ,/ 考虑/ 一般/ 无约束/ 优化/ 问题/ :/ 根据/ 文献/ [/ 22/ ]/ 的/ 策略/ ,/ 可以/ 对/ 不可/ 微/ 函数/ J/ (/ 狌/ )/ 引入/ 向量/ 空间/ Bregman/ 距离/ ,/ 通过/ 如下/ 方式/ 迭代/ 求解/ 问题/ (/ 9/ )/ :/ 将/ D/ 入式/ (/ 10/ )/ 后/ 得/ 狌/ k/ +/ 1/ =/ argmin/ 烄/ 烅/ 0/ ∈/ / J/ (/ 狌/ k/ +/ 1/ )/ -/ 狆/ k/ +/ μ/ / H/ (/ 狌/ k/ +/ 1/ 烆/ 但是/ ,/ 由于/ J/ (/ 狌/ )/ 不可/ 微/ ,/ 迭代/ 序列/ (/ 11/ )/ 仍然/ 无法/ 直接/ 求解/ ./ 于是/ 文献/ [/ 26/ ]/ 针对/ 迭代/ 序列/ (/ 11/ )/ 引入/ 向量/ 空间/ PFBS/ 算法/ ,/ 并/ 设置/ PFBS/ 算法/ 的/ 迭代/ 次数/ 为/ 1/ ,/ 从而/ 提出/ 了/ 一种/ 有效/ 的/ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ ./ 具体说来/ ,/ 对于/ 子/ 优化/ 问题/ :/ 狌/ k/ +/ 1/ =/ argmin/ 如果/ 令/ F1/ (/ 狌/ )/ =/ J/ (/ 狌/ )/ -/ 〈/ 狆/ k/ ,/ 狌/ 〉/ ,/ F2/ (/ 狌/ )/ =/ μ/ H/ (/ 狌/ )/ ,/ 则/ 根据/ 文献/ [/ 26/ ]/ ,/ 可以/ 按下式/ 求解/ 狌/ k/ +/ 1/ :/ 因此/ ,/ 迭代/ 序列/ (/ 11/ )/ 可/ 转化/ 为/ 烄/ 狌/ k/ +/ 1/ =/ argmin/ 烅/ 0/ ∈/ / δ/ F1/ (/ 狌/ )/ +/ 烆/ 由于/ 狆/ k/ +/ 1/ ∈/ / J/ (/ 狌/ k/ +/ 1/ )/ ,/ 式/ (/ 14/ )/ 可/ 进一步/ 化简/ 为/ 烄/ 烅/ 烆/ 算法/ 1/ 详细描述/ 了/ 求解/ 问题/ (/ 9/ )/ 的/ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ 实现/ 步骤/ ./ 随后/ ,/ Cai/ 等/ 人/ 在/ 文献/ [/ 17/ ]/ 中/ 从/ 理论/ 上/ 严格/ 证明/ 了/ 该/ 算法/ 的/ 收敛性/ ,/ 并/ 将/ 其/ 成功/ 应用/ 于/ 图像去噪/ 研究/ ./ 算法/ 1/ ./ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ ./ 输入/ :/ δ/ >/ 0/ ,/ 狌/ 0/ =/ 狆/ 0/ =/ 0/ ,/ 最大/ 迭代/ 次数/ N/ 输出/ :/ 狌/ optimal1/ ./ FORk/ =/ 0toN2/ ./ 狌/ k/ +/ 1/ =/ argmin3/ ./ 狆/ k/ +/ 1/ =/ 狆/ k/ -/ 4/ ./ END5/ ./ RETURN/ 狌/ optimal/ ←/ 狌/ N/ +/ 1/ ./ Page6/ 本文/ 将/ 在/ 第/ 5/ 节将/ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ 拓展/ 到/ 矩阵/ 空间/ ,/ 用来/ 解决/ 矩阵/ 空间/ 二元/ 函数/ 凸/ 优化/ 问题/ ,/ 并/ 在/ 此基础/ 上/ 提出/ 一类/ 鲁棒/ 的/ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ ./ 5/ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ (/ LiBIMC/ )/ 正则/ 化/ 技术/ 诞生/ 于/ 20/ 世纪/ 60/ 年代/ ,/ 最初/ 是/ 由/ 数学/ 领域/ 提出/ ,/ 用于/ 解决/ 不适/ 定/ 问题/ ,/ 基本/ 思想/ 是/ 通过/ 引入/ 含有/ 问题/ 先验/ 知识/ 的/ 非负/ 辅助/ 泛函/ 正则/ 化/ 因子/ 来/ 增加/ 解/ 的/ 稳定性/ [/ 27/ ]/ ./ 随着/ 20/ 世纪/ 80/ 年代/ 机器/ 学习/ 的/ 兴起/ ,/ 正则/ 化/ 技术/ 被/ 广泛应用/ 于/ 分类器/ 设计/ 领域/ ,/ 并/ 衍生/ 出/ 许多/ 著名/ 的/ 算法/ [/ 28/ ]/ ./ 这些/ 算法/ 大部分/ 都/ 能/ 归纳/ 为/ 经验/ 风险/ 最小化/ 正则/ 化/ 算法/ 的/ 框架/ ,/ 他们/ 的/ 不同之处/ 在于/ 所用/ 的/ 正则/ 化/ 惩罚/ 因子/ ,/ 不同/ 的/ 正则/ 化/ 因子/ 能/ 产生/ 不同/ 性质/ 的/ 解/ ,/ 而/ 如何/ 选取/ 正则/ 化/ 因子/ 通常/ 由/ 问题/ 的/ 具体/ 要求/ 决定/ ,/ 如/ 压缩/ 感知/ 理论/ 为了/ 得到/ 稀疏/ 解而/ 采用/ 向量/ L0/ 范数/ 正则/ 化/ 因子/ ./ 矩阵/ L2/ ,/ 1/ 范数/ 正则/ 化/ 方法/ 最早/ 由/ Ding/ 在/ 文献/ [/ 29/ ]/ 中/ 提出/ ,/ 随后/ 被/ 应用/ 于/ 多任务/ 学习/ [/ 30/ -/ 31/ ]/ 、/ 张量/ 分解/ [/ 32/ ]/ 以及/ 多/ 类/ 分类/ 问题/ [/ 33/ ]/ 等/ ,/ 作为/ 一种/ 全新/ 的/ 正则/ 化/ 技术/ ,/ 它/ 是/ 对/ 传统/ 的/ 矩阵/ 范数/ 正则/ 化/ 理论/ 的/ 新/ 发展/ ./ 如前所述/ ,/ 现有/ 的/ 矩阵/ 补全/ 理论/ 或者/ 没有/ 考虑/ 采样/ 矩阵/ 的/ 含噪/ 问题/ ,/ 或者/ 只是/ 简单/ 地/ 假设/ 采样/ 矩阵/ 受到/ 随机/ 高斯/ 噪声污染/ ,/ 并/ 不能/ 解决/ 实际/ 问题/ 中/ 遇到/ 的/ 行/ 结构化/ 噪声污染/ 的/ 问题/ ./ 为了/ 有效/ 地/ 平滑/ 这/ 类/ 结构化/ 噪声/ ,/ 将/ 其/ 带来/ 的/ 不利/ 影响/ 尽可能/ 降到/ 最低/ ,/ 本文/ 通过/ 引入/ 矩阵/ L2/ ,/ 1/ 范数/ 正则/ 化/ 因子/ 到/ 矩阵/ 补全/ 问题/ (/ 2/ )/ ,/ 对/ 其/ 目标/ 函数/ 施加/ 相应/ 的/ 正则/ 化/ 约束/ ,/ 从而/ 将/ 结构化/ 噪声/ 矩阵/ 补全/ 问题/ 建模/ 为/ 如下/ L2/ ,/ 1/ 范数/ 正则/ 化/ 问题/ :/ minn1/ ×/ n/ 犡/ ,/ 犣/ ∈/ 犚/ 其中/ 犣/ 为/ 行/ 稀疏/ 噪声/ 矩阵/ ,/ 犣/ 2/ ,/ 1/ 为/ 平滑/ 噪声/ 的/ 矩阵/ L2/ ,/ 1/ 范数/ 正则/ 化/ 因子/ ,/ λ/ 是/ 被/ 用来/ 平衡/ 结构化/ 噪声/ 和/ 矩阵/ 低/ 秩/ 程度/ 的/ 可调/ 参数/ ./ 由于/ 矩阵/ 范数/ 同时/ 满足/ 齐次/ 性/ 和/ 三角/ 不等式/ ,/ 因此/ 易知/ L2/ ,/ 1/ 范数/ 正则/ 化/ 问题/ (/ 15/ )/ 为/ 凸/ 约束/ 优化/ 问题/ 且/ 存在/ 全局/ 最优/ 解/ ./ 但/ 由于/ 核/ 范数/ 和/ L2/ ,/ 1/ 范数/ 都/ 是/ 不可/ 微/ 函数/ ,/ 因此/ 该/ 问题/ 的/ 求解/ 仍然/ 是/ 一个/ 待/ 解决/ 的/ 难题/ ./ 为了/ 有效/ 地/ 求解/ 问题/ (/ 15/ )/ ,/ 本文/ 将/ 其/ 转换/ 为/ 如下/ 无约束/ 优化/ 问题/ :/ minn1/ ×/ n/ 犡/ ,/ 犣/ ∈/ 犚/ 为/ 描述/ 方便/ ,/ 不妨/ 令则/ 问题/ (/ 16/ )/ 等价/ 于/ 容易/ 看到/ ,/ 问题/ (/ 17/ )/ 和/ 问题/ (/ 9/ )/ 非常/ 相似/ ,/ 最大/ 的/ 区别/ 在于/ 问题/ (/ 9/ )/ 求解/ 的/ 是/ 向量/ 空间/ 一元/ 凸函数/ 优化/ ,/ 而/ 问题/ (/ 17/ )/ 求解/ 的/ 是/ 矩阵/ 空间/ 二元/ 凸函数/ 优化/ ./ 为此/ ,/ 我们/ 引入/ 矩阵/ 空间/ 二元/ 凸函数/ Bregman/ 距离/ 来/ 求解/ 问题/ (/ 17/ )/ ./ 首先/ 定义/ 函数/ J/ (/ 犡/ ,/ 犣/ )/ 在/ (/ 犡/ k/ ,/ 犣/ k/ )/ 处/ 的/ Bregman/ 距离/ 为/ k/ 犘/ DJ/ (/ 犡/ ,/ 犣/ ,/ 犡/ k/ ,/ 犣/ k/ )/ =/ J/ (/ 犡/ ,/ 犣/ )/ -/ J/ (/ 犡/ k/ ,/ 犣/ k/ )/ -/ 〈/ μ/ 犘/ 其中/ 犘/ k/ 因此/ ,/ 问题/ (/ 17/ )/ 可/ 按/ 如下/ 方式/ 迭代/ 求解/ (/ 犡/ k/ +/ 1/ ,/ 犣/ k/ +/ 1/ )/ =/ argmin/ 烄/ H/ (/ 犡/ ,/ 犣/ )/ 烅/ 0/ ∈/ / (/ D0/ ∈/ / (/ D/ 犘/ 烆/ 进一步/ 将/ Goldstein/ 和/ Osher/ 在/ 文献/ [/ 34/ ]/ 中/ 提出/ 的/ 向量/ 空间/ 分裂/ Bregman/ 迭代/ 算法/ 推广/ 到/ 矩阵/ 空间/ ,/ 同时/ 引入/ 交替/ 极小/ 化/ 方法/ 求解/ (/ 犡/ k/ +/ 1/ ,/ 犣/ k/ +/ 1/ )/ ,/ 则/ 问题/ (/ 17/ )/ 可/ 进一步/ 采用/ 如/ 算法/ 2/ 所述/ 的/ 矩阵/ 空间/ 交替/ 线性/ 分裂/ Bregman/ 迭代/ 第/ 1/ 算法/ 求解/ ./ 算法/ 2/ ./ 矩阵/ 空间/ 交替/ 线性/ 分裂/ Bregman/ 迭代/ 第/ 1/ 算法/ ./ 输入/ :/ 犣/ 0/ =/ 0/ ,/ 犘/ 0/ 输出/ :/ 犡/ optimal/ ,/ 犣/ optimal1/ ./ FORk/ =/ 0toN2/ ./ 犡/ k/ +/ 1/ =/ argmin3/ ./ 犣/ k/ +/ 1/ =/ argmin4/ ./ 犘/ k/ +/ 1Page75/ ./ 犘/ k/ +/ 16/ ./ END7/ ./ RETURN/ 犡/ optimal/ ←/ 犡/ N/ +/ 1/ ,/ 犣/ optimal/ ←/ 犣/ N/ +/ 1/ ./ 进一步/ ,/ 我们/ 还/ 可以/ 将/ 算法/ 2/ 转换/ 为/ 如下/ 的/ 算法/ 3/ —/ —/ —/ 矩阵/ 空间/ 交替/ 线性/ 分裂/ Bregman/ 迭代/ 第/ 2/ 算法/ ,/ 定理/ 4/ 将/ 给出/ 算法/ 2/ 和/ 算法/ 3/ 的/ 等价/ 性/ 证明/ ./ 算法/ 3/ ./ 矩阵/ 空间/ 交替/ 线性/ 分裂/ Bregman/ 迭代/ 第/ 2/ 算法/ ./ 输入/ :/ 犣/ 0/ =/ 0/ ,/ 犅/ 0/ =/ P/ Ω/ (/ 犚/ )/ ,/ 最大/ 迭代/ 次数/ N/ 输出/ :/ 犡/ optimal/ ,/ 犣/ optimal1/ ./ FORk/ =/ 0toN2/ ./ 犡/ k/ +/ 1/ =/ argmin3/ ./ 犣/ k/ +/ 1/ =/ argmin4/ ./ 犅/ k/ +/ 1/ =/ 犅/ k/ +/ P/ Ω/ (/ 犚/ -/ 犡/ k/ +/ 1/ -/ 犣/ k/ +/ 1/ )/ ;/ 5/ ./ END6/ ./ RETURN/ 犡/ optimal/ ←/ 犡/ N/ +/ 1/ ,/ 犣/ optimal/ ←/ 犣/ N/ +/ 1/ ./ 定理/ 4/ ./ 矩阵/ 空间/ 交替/ 线性/ 分裂/ Bregman/ 迭代/ 第/ 1/ 算法/ 等价/ 于/ 矩阵/ 空间/ 交替/ 线性/ 分裂/ Bregman/ 迭代/ 第/ 2/ 算法/ ,/ 即/ 算法/ 2/ 和/ 算法/ 3/ 等价/ ./ 证明/ ./ 详见/ 附录/ ./ 定理/ 5/ ./ 算法/ 3/ 的/ 不动点/ 是/ 问题/ (/ 15/ )/ 的/ 全局/ 最优/ 解/ ./ 证明/ ./ 详见/ 附录/ ./ 定理/ 6/ ./ 问题/ (/ 15/ )/ 的/ 全局/ 最优/ 解是/ 算法/ 3/ 的/ 不动点/ ./ 证明/ ./ 详见/ 附录/ ./ 定理/ 4/ ~/ 定理/ 6/ 表明/ ,/ 算法/ 2/ 或者/ 算法/ 3/ 的/ 不动点/ ,/ 一定/ 是/ 结构化/ 噪声/ 矩阵/ 补全/ 问题/ (/ 15/ )/ 的/ 解/ ./ 因此/ ,/ 接下来/ 我们/ 将/ 推导/ 出/ 求解/ 算法/ 2/ 不动点/ 的/ 具体步骤/ ,/ 算法/ 3/ 的/ 具体/ 求解/ 步骤/ 也/ 可/ 类似/ 给出/ ,/ 本文/ 不再/ 赘述/ ./ 不难看出/ ,/ 就/ 算法/ 2/ 而言/ ,/ 由于/ 函数/ 犡/ / 和/ 犣/ 2/ ,/ 1/ 的/ 不可/ 微性/ ,/ 使得/ 步/ 2/ 和步/ 3/ 中/ 求解/ 犡/ k/ +/ 1/ 和/ 犣/ k/ +/ 1/ 的/ 两个/ 子/ 问题/ 无法/ 直接/ 求解/ ,/ 此时/ 可/ 将/ 向量/ 空间/ 线性/ Bregman/ 迭代/ 算法/ 推广/ 到/ 矩阵/ 空间/ ,/ 并/ 根据/ 定理/ 1/ 和/ 定理/ 3/ 分别/ 对/ 这/ 两个/ 子/ 问题/ 求解/ ./ 子/ 问题/ 1/ ./ 求解/ 算法/ 2/ 中/ 变量/ 犡/ k/ +/ 1/ ./ 解/ :/ 根据/ 定理/ 2/ 性质/ (/ 3/ )/ ,/ 并/ 将/ PFBS/ 算法/ 的/ 迭代/ 次数/ 置/ 为/ 1/ ,/ 可知/ 犡/ k/ +/ 1/ =/ prox/ μ/ δ/ 犡/ 化简/ 后/ 得/ 犡/ k/ +/ 1/ =/ argmin/ 且/ 此时/ 应有/ 犘/ k/ +/ 1/ 犡/ =/ 犘/ k/ 由于/ P0/ 犘/ k/ +/ 1/ 犡/ =/ -/ 进一步/ ,/ 如果/ 令则/ 显然/ 有/ 然后/ ,/ 将式/ (/ 21/ )/ 代入/ 式/ (/ 20/ )/ 可得/ 将/ 式/ (/ 22/ )/ 、/ 式/ (/ 23/ )/ 代入/ 式/ (/ 19/ )/ 得/ 犡/ k/ +/ 1/ =/ argmin/ 进一步/ ,/ 根据/ 定理/ 1/ 可得式/ (/ 24/ )/ 的/ 解析/ 解为/ 因此/ ,/ 子/ 问题/ 1/ 可/ 按/ 如下/ 方式/ 迭代/ 求解/ 子/ 问题/ 2/ ./ 求解/ 算法/ 2/ 中/ 变量/ 犣/ k/ +/ 1/ ./ 解/ :/ 类似/ 于子/ 问题/ 1/ 的/ 求解/ 过程/ ,/ 容易/ 推导/ 出/ 如下/ 结论/ :/ 犣/ k/ +/ 1/ =/ argmin/ 犘/ k/ +/ 1/ 犣/ =/ -/ 进一步/ ,/ 如果/ 令则/ 显然/ 有/ 然后/ ,/ 将式/ (/ 27/ )/ 代入/ 式/ (/ 26/ )/ 可得/ 将/ 式/ (/ 28/ )/ 、/ 式/ (/ 29/ )/ 代入/ 式/ (/ 25/ )/ 后/ 得/ 犣/ k/ +/ 1/ =/ argminPage8/ 进一步/ ,/ 根据/ 定理/ 3/ 可得式/ (/ 30/ )/ 的/ 解析/ 解为/ (/ 犣/ k/ +/ 1/ )/ (/ i/ )/ 因此/ ,/ 子/ 问题/ 2/ 可/ 按/ 如下/ 方式/ 迭代/ 求解/ 犝/ k/ =/ 犝/ k/ -/ 1/ +/ δ/ P/ Ω/ (/ 犚/ -/ 犡/ k/ +/ 1/ -/ 犣/ k/ )/ 烄/ (/ 犣/ k/ +/ 1/ )/ (/ i/ )/ 烅/ 烆/ 至此/ ,/ 我们/ 可以/ 将/ 前述/ 算法/ 归纳起来/ ,/ 整理/ 得到/ 求解/ 问题/ (/ 15/ )/ 的/ 迭代/ 算法/ ,/ 并/ 将/ 其/ 命名/ 为/ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ (/ LinearizedBregmanIterationAlgorithmforMatrixCompletionwithStructuralNoise/ ,/ LiBIMC/ )/ ,/ 详细/ 步骤/ 如/ 算法/ 4/ 所述/ ./ 算法/ 4/ ./ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ (/ LiBIMC/ )/ ./ 输入/ :/ P/ Ω/ (/ 犚/ )/ ,/ λ/ ,/ μ/ 和/ δ/ ,/ 最大/ 迭代/ 次数/ N/ 输出/ :/ 犡/ optimal/ ,/ 犣/ optimal1/ ./ INITIALIZE/ 犡/ 0/ =/ 0/ ,/ 犣/ 0/ =/ 0/ ,/ 犞/ -/ 1/ =/ 0/ ,/ 犝/ -/ 1/ =/ 0/ ;/ 2/ ./ FORk/ =/ 0toN2/ ./ 犞/ k/ =/ 犞/ k/ -/ 1/ +/ δ/ P/ Ω/ (/ 犚/ -/ 犡/ k/ -/ 犣/ k/ )/ ;/ 3/ ./ 犡/ k/ +/ 1/ =/ D/ μ/ δ/ (/ 犞/ k/ )/ ;/ 4/ ./ 犝/ k/ =/ 犝/ k/ -/ 1/ +/ δ/ P/ Ω/ (/ 犚/ -/ 犡/ k/ +/ 1/ -/ 犣/ k/ )/ ;/ 5/ ./ FORi/ =/ 1ton16/ ./ (/ 犣/ k/ +/ 1/ )/ (/ i/ )/ =/ 7/ ./ END8/ ./ END9/ ./ RETURN/ 犡/ optimal/ ←/ 犡/ N/ +/ 1/ ,/ 犣/ optimal/ ←/ 犣/ N/ +/ 1/ ./ 从/ 算法/ 4/ 容易/ 看出/ ,/ LiBIMC/ 算法/ 在/ 迭代/ 过程/ 中/ 一方面/ 可/ 使得/ 犡/ k/ +/ 1/ 保持/ 较/ 好/ 的/ 低/ 秩性/ ,/ 另一方面/ 可/ 使/ 犣/ k/ +/ 1/ 保持良好/ 的/ 行/ 稀疏/ 特性/ ,/ 同时/ 还/ 能够/ 维持/ (/ 犞/ k/ ,/ 犝/ k/ )/ 的/ 稀疏/ 性以/ 节省/ 存储空间/ ,/ 而且/ 每/ 一次/ 迭代/ 过程/ 只/ 涉及/ 到/ 一次/ 稀疏/ 矩阵/ 部分/ 奇异/ 值/ 分解/ ,/ 而/ 对于/ 大型/ 稀疏/ 矩阵/ 的/ 部分/ 奇异/ 值/ 分解/ 可以/ 使用/ 成熟/ 的/ PROPACK/ 软件包/ ,/ 它/ 基于/ Lanczos/ 方法/ ,/ 可以/ 计算/ 奇异/ 值/ 分解/ 中前/ k/ 个/ 奇异/ 值/ 和/ 奇异/ 向量/ ./ 这些/ 特性/ 确保/ 了/ LiBIMC/ 算法/ 的/ 可/ 扩放性/ 和/ 执行/ 的/ 高效率/ ./ 6/ 数值/ 实验/ 及/ 结果/ 分析/ 本/ 节/ 主要/ 通过/ 数值/ 实验/ 来/ 验证/ LiBIMC/ 算法/ 的/ 性能/ ./ 实验/ 中/ 用到/ 的/ 采样/ 数据/ 按照/ 如下/ 方式/ 产生/ :/ (/ 1/ )/ 首先/ 针对/ 不同/ 的/ 矩阵/ 维度/ n1/ ,/ n2/ 和/ 秩/ r/ ,/ 随机/ 生成/ 两个/ n1/ ×/ r/ 和/ r/ ×/ n2/ 的/ 独立/ 同/ 分布/ 高斯/ 矩阵/ 犕/ L/ 和/ 犕/ R/ (/ 均值/ 为/ 0/ ,/ 方差/ 为/ 1/ )/ ,/ 进而/ 得到/ 秩为/ r/ 的/ 原始数据/ 矩阵/ 犕/ =/ 犕/ L/ ·/ 犕/ R/ ;/ (/ 2/ )/ 随机/ 生成/ 一个/ n1/ ×/ n2/ 的/ 独立/ 同/ 分布/ 高斯/ 随机/ 矩阵/ 犈/ (/ 均值/ 为/ 0/ ,/ 方差/ 为/ 1/ )/ ,/ 然后/ 从/ 犈/ 中/ 随机/ 选取/ n1/ -/ m/ 行/ 元素/ 将/ 其/ 全部/ 设置/ 为/ 0/ ,/ 则/ 矩阵/ 犈/ 仅/ 包含/ m/ 行非/ 零/ 元素/ ,/ 我们/ 将/ 如此/ 生成/ 的/ 仅/ 包含/ m/ 行非/ 零/ 元素/ 的/ 矩阵/ 犈/ 记/ 为/ 噪声/ 矩阵/ 犈/ noise/ ,/ 同时/ 记/ 结构化/ 噪声污染/ 程度/ 为/ pn/ =/ m/ // n1/ ;/ (/ 3/ )/ 将/ 噪声/ 矩阵/ 犈/ noise/ 添加/ 到/ 原始数据/ 矩阵/ 犕/ ,/ 生成/ 含噪/ 矩阵/ 犕/ ,/ 使得/ 犕/ =/ 犕/ +/ 犈/ noise/ ;/ (/ 4/ )/ 从/ 含噪/ 矩阵/ 犕/ 中/ 均匀/ 随机/ 选取/ 采样/ 元素/ ,/ 采样/ 元素/ 的/ 下标/ 索引/ 集合/ 用/ Ω/ 表示/ ,/ 并记/ 采样率/ 为/ ps/ =/ Ω/ // (/ n1/ ×/ n2/ )/ ,/ 其中/ Ω/ 表示/ 集合/ Ω/ 的/ 基数/ ./ 实验/ 中/ 我们/ 采用/ 如下/ 指标/ 来/ 衡量/ 含噪/ 矩阵/ 犕/ 中/ 噪声/ 所在/ 行/ 元素/ 的/ 含/ 噪率/ :/ rnoiseoriginal/ =/ P/ Ω/ 其中/ Ω/ n/ 表示/ 含噪/ 元素/ 索引/ 集/ ;/ 同时/ ,/ 我们/ 还/ 选取/ 了/ 3/ 个/ 常用/ 指标/ 来/ 衡量/ LiBIMC/ 算法/ 的/ 性能/ :/ (/ 1/ )/ 缺失/ 元素/ 补全/ 精度/ :/ rmiss/ 其中/ 珨/ 犕/ 表示/ 采用/ LiBIMC/ 算法/ 补全/ 后/ 的/ 结果/ 矩阵/ ,/ Ω/ c/ 表示/ 缺失/ 元素/ 索引/ 集/ ;/ (/ 2/ )/ 含噪/ 元素/ 纠错/ 精度/ :/ rnoise/ (/ 3/ )/ 结构化/ 噪声/ 行/ 位置/ 信息/ 辨识/ 精度/ :/ 这里/ 定义/ 的/ rline/ 标/ F1/ -/ Measure/ ,/ 其中/ :/ precesion/ =/ m/ _/ all/ 表示/ 被/ LiBIMC/ 算法/ 识别/ 为/ 噪声/ 行/ 的/ 总行/ 数/ ,/ 其中/ 噪声/ 行/ 识别/ 的/ 依据/ 是/ :/ 如果/ LiBIMC/ 算法/ 输出/ 的/ 噪声/ 矩阵/ 犣/ optimal/ 中/ 某行/ 至少/ 存在/ 一个/ 非零/ 元素/ ,/ 则/ 该行/ 被/ 识别/ 为/ 噪声/ 行/ ;/ 反之/ ,/ 如果/ 噪声/ 矩阵/ 犣/ optimal/ 中/ 某行/ 全为/ 零/ 元素/ ,/ 则/ 该行/ 不/ 被/ 识别/ 为/ 噪声/ 行/ ./ 进一步/ ,/ 不妨/ 假设/ 第/ i/ 行/ 已经/ 被/ LiBIMC/ 算法/ 识别/ 为/ 噪声/ 行/ ,/ 如果/ 采样/ 矩阵/ 中/ 第/ i/ 行/ 确实/ 受到/ 了/ 噪声污染/ ,/ 则/ 称/ 该/ 噪声/ 行/ 被/ LiBIMC/ 算法/ 正确/ 识别/ ,/ m/ _/ true/ 表示/ 被/ LiBIMC/ 算法/ 正确/ 识别/ 的/ 噪声/ 行/ 总数/ ./ 实验设计/ 中/ ,/ 考虑/ 到/ 数据/ 生成/ 、/ 加噪/ 和/ 采样/ 过程/ 的/ 随机性/ ,/ 每/ 一次/ 实验/ 均/ 重复/ 进行/ 20/ 次/ ./ LiBIMCPage9/ 算法/ 的/ 收敛/ 条件/ 设置/ 为/ 最大/ 迭代/ 次数/ 150/ ./ 本文/ 所有/ 的/ 实验/ 都/ 是/ 在/ IntelCorei7/ -/ 3520M2/ ./ 90GHzCPU/ ,/ 4.00/ GBRAM/ 的/ 环境/ 下/ ,/ 使用/ 工具软件/ MATLAB/ 完成/ 的/ ./ 而且/ ,/ 在/ LiBIMC/ 算法/ 的/ 具体/ 实现/ 中/ ,/ 我们/ 采用/ 了/ PROPACK/ 软件包/ 来/ 实现/ 部分/ 奇异/ 值/ 分解/ ./ 考察/ 算法/ 4/ ,/ 易/ 见/ 影响/ LiBIMC/ 算法/ 性能/ 的/ 参数/ 共有/ 8/ 个/ ,/ 它们/ 分别/ 是/ (/ n1/ ,/ n2/ ,/ r/ ,/ ps/ ,/ pn/ )/ 和/ (/ λ/ ,/ μ/ ,/ η/ )/ ./ 前/ 5/ 个/ 参数/ (/ n1/ ,/ n2/ ,/ r/ ,/ ps/ ,/ pn/ )/ 不是/ 可调/ 参数/ ,/ 在/ 数据/ 采样/ 时/ 就/ 确定/ 好/ 了/ ./ 后/ 3/ 个/ 参数/ (/ λ/ ,/ μ/ ,/ η/ )/ 是/ 可调/ 参数/ ,/ 目前/ 我们/ 还/ 没有/ 展开/ 对/ 可调/ 参数/ 如何/ 自/ 适应/ 选取/ 的/ 研究/ ,/ 只能/ 根据/ 所/ 需要/ 处理/ 问题/ 的/ 先验/ 知识/ 对/ 可调/ 参数/ 进行/ 估计/ ./ 但/ 尽管如此/ ,/ 我们/ 还是/ 可以/ 对/ 这/ 3/ 个/ 可调/ 参数/ 的/ 取值/ 做/ 一些/ 非/ 形式化/ 的/ 分析/ :/ (/ 1/ )/ 参数/ λ/ 在/ LiBIMC/ 算法/ 中/ 被/ 用来/ 平衡/ 结构化/ 噪声/ 大小/ 和/ 矩阵/ 低/ 秩/ 程度/ ./ 一般而言/ ,/ 我们/ 设定/ λ/ ∈/ 0/ ,/ (/ )/ 1/ ./ λ/ 实际/ 大小/ 取决于/ 目标/ 矩阵/ 的/ 低/ 秩/ 程度/ 和/ 结构化/ 噪声/ 大小/ 的/ 比值/ ./ 从式/ (/ 15/ )/ 容易/ 看出/ ,/ λ/ 取值/ 越大/ ,/ 将/ 导致/ 所求/ 的/ 结果/ 矩阵/ 秩越/ 大/ ,/ 此时/ 采样/ 矩阵/ 所/ 能/ 容忍/ 的/ 结构化/ 噪声/ 将/ 越/ 小/ ;/ 反之/ ,/ 如果/ 目标/ 矩阵/ 的/ 秩越/ 小/ ,/ 则/ 采样/ 矩阵/ 所/ 能/ 容忍/ 的/ 结构化/ 噪声/ 将/ 越/ 大/ ,/ 此时/ 应该/ 将/ λ/ 设置/ 为/ 较/ 小值/ ;/ 如果/ 目标/ 矩阵/ 的/ 秩/ 和/ 结构化/ 噪声/ 都/ 较大/ ,/ 或者/ 目标/ 矩阵/ 的/ 秩/ 和/ 结构化/ 噪声/ 都/ 较/ 小/ ,/ 此时/ 可/ 通过/ 交叉/ 验证/ 的/ 方法/ 设置/ λ/ 值/ ./ (/ 2/ )/ 参数/ μ/ 在/ LiBIMC/ 算法/ 中/ 被/ 用来/ 平衡/ (/ 犡/ / +/ λ/ 犣/ 2/ ,/ 1/ )/ 项/ 和/ 1/ 小/ ,/ 其中/ 1/ 除/ 结构化/ 噪声/ 外/ 的/ 其他/ 随机噪声/ ./ 一般而言/ ,/ 我们/ 设定/ μ/ ∈/ 500/ ,/ (/ 越大/ ,/ 将/ 导致/ 所求/ 的/ 结果/ 矩阵/ 秩越/ 小/ ,/ 此时/ 采样/ 矩阵/ 所/ 能/ 容忍/ 的/ 其他/ 随机噪声/ 将/ 越/ 大/ ,/ 同时/ 所/ 能/ 容忍/ 的/ 结构化/ 噪声/ 大小/ 可以/ 通过/ 参数/ λ/ 来/ 进行/ 调节/ ,/ 当/ 采样/ 矩阵/ 所/ 含/ 结构化/ 噪声/ 较大/ 时/ ,/ 可/ 适当/ 选取/ 较/ 小/ 的/ λ/ 值/ ;/ 此外/ ,/ 如果/ 采样/ 矩阵/ 同时/ 包含/ 较大/ 的/ 结构化/ 噪声/ 和/ 随机噪声/ ,/ 则/ 参数/ μ/ 的/ 取值/ 应该/ 设置/ 为/ 较大/ ./ (/ 3/ )/ 参数/ δ/ 被/ 用来/ 控制/ 和/ 调节/ LiBIMC/ 算法/ 的/ 收敛性/ ./ 由/ 定理/ 2/ 可知/ :/ 如果/ 存在/ 常数/ β/ ∈/ (/ 0/ ,/ +/ )/ ,/ 使得/ 函数/ F2/ (/ 犡/ )/ =/ 微且/ 对/ 任意/ 的/ 犝/ ,/ 犞/ ∈/ 犚/ 则/ 当/ 变量/ 犡/ 取/ 任意/ 初始值/ 及/ 任意/ δ/ ∈/ 0/ ,/ 2/ // (/ LiBIMC/ 算法/ 一定/ 收敛/ ./ 但/ 对于/ 函数/ F2/ (/ 犡/ )/ =/ 12P/ Ω/ (/ 犚/ -/ 犡/ -/ 犣/ k/ )/ 2/ 显然/ 有/ P/ Ω/ (/ 犝/ +/ 犣/ k/ -/ 犚/ )/ -/ P/ Ω/ (/ 犞/ +/ 犣/ k/ -/ 犚/ )/ F/ / 1/ ·/ 犝/ -/ 犞/ F/ 成立/ ./ 因此/ ,/ 至少/ 可以/ 令/ β/ =/ 1/ ,/ 从而/ 设定/ 参数/ δ/ ∈/ (/ 0/ ,/ 2/ )/ ./ 此外/ ,/ 从/ 算法/ 4/ 中/ 第/ 3/ 步/ 我们/ 还/ 可以/ 看出/ ,/ 在/ (/ 0/ ,/ 2/ )/ 范围/ 内/ ,/ 我们/ 可以/ 通过/ 调节/ 参数/ δ/ 的/ 大小/ 来/ 调节/ 结果/ 矩阵/ 的/ 秩/ ,/ 一般说来/ ,/ 参数/ δ/ 越大/ ,/ 所求/ 的/ 结果/ 矩阵/ 秩越/ 小/ ,/ 同时/ 算法/ 收敛/ 速度/ 也/ 越/ 快/ ./ 接下来/ 我们/ 设计/ 了/ 4/ 组/ 不同/ 的/ 实验/ :/ 第/ 1/ 组/ 实验/ 重点/ 考察/ LiBIMC/ 算法/ 对/ 缺失/ 元素/ 的/ 补全/ 精度/ 、/ 对/ 含噪/ 元素/ 的/ 纠错/ 精度/ 以及/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 的/ 辨识/ 精度/ ;/ 第/ 2/ 组/ 实验/ 主要/ 比较/ 了/ 移除/ 结构化/ 噪声/ 行/ 前后/ LiBIMC/ 算法/ 和/ IALM/ 、/ SVT/ 、/ FPCA/ 算法/ 对/ 缺失/ 元素/ 的/ 补全/ 精度/ ;/ 第/ 3/ 组/ 实验/ 重点/ 考察/ 了/ 采样率/ 的/ 变化/ 对/ LiBIMC/ 算法/ 性能/ 所/ 带来/ 的/ 影响/ ;/ 第/ 4/ 组/ 实验/ 考察/ 了/ 结构化/ 噪声污染/ 程度/ 对/ LiBIMC/ 算法/ 性能/ 的/ 影响/ ./ 实验/ 1/ ./ LiBIMC/ 算法/ 对/ 缺失/ 元素/ 的/ 补全/ 精度/ 、/ 对/ 含噪/ 元素/ 的/ 纠错/ 精度/ 以及/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 的/ 辨识/ 性能/ ./ 实验/ 1/ 中/ ,/ 为了/ 考察/ LiBIMC/ 算法/ 在/ 采样/ 矩阵/ 包含/ 结构化/ 噪声/ 情况/ 下/ 对/ 缺失/ 元素/ 、/ 含噪/ 元素/ 的/ 补全/ 性能/ 以及/ 对/ 噪声/ 行/ 位置/ 信息/ 的/ 辨识/ 能力/ ,/ 我们/ 针对/ (/ n1/ ,/ n2/ ,/ r/ ,/ ps/ ,/ pn/ ,/ λ/ ,/ μ/ ,/ δ/ )/ 设计/ 了/ 5/ 个/ 不同/ 的/ 实验/ ,/ 实验/ 结果/ 见表/ 1/ ./ 从表/ 1/ 容易/ 看出/ ,/ LiBIMC/ 算法/ 不仅/ 能以/ 足够/ 高/ 的/ 精度/ 补全/ 缺失/ 元素/ ,/ 而且/ 能/ 在/ 很大/ 程度/ 上/ 对/ 含噪/ 元素/ 进行/ 纠错/ ,/ 更为重要/ 的/ 是/ ,/ LiBIMC/ 算法/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 的/ 辨识/ 精度/ (/ F1/ -/ Measure/ )/ 达到/ 了/ 100/ %/ ./ 有/ 了/ 这些/ 精确/ 的/ 噪声/ 行/ 位置/ 信息/ ,/ 我们/ 就/ 可以/ 在/ 移除/ 噪声/ 行/ 的/ 情形/ 下/ 对/ 矩阵/ 不/ 含噪/ 部分/ 的/ 缺失/ 元素/ 进行/ 补全/ ,/ 从而/ 使得/ 现有/ 的/ 矩阵/ 补全/ 算法/ 都/ 能够/ 在/ 结构化/ 噪声/ 采样/ 的/ 情形/ 下/ 得以/ 应用/ ./ 此外/ ,/ 表/ 1/ 还/ 反映/ 了/ 每次/ 实验所/ 耗费/ 的/ 算法/ 运行/ 时间/ 以及/ 所/ 求解/ 的/ 结果/ 矩阵/ 的/ 秩/ ,/ 从表/ 1/ 中/ 可以/ 看出/ ,/ 一方面/ 在/ 核/ 范数/ 的/ 作用/ 下/ ,/ 结果/ 矩阵/ 的/ 低/ 秩性/ 得到/ 了/ 很/ 好/ 的/ 保持/ ,/ 另一方面/ 从/ 算法/ 实时性/ 要求/ 来看/ ,/ 算法/ 运行/ 效率/ 还有/ 待/ 进一步提高/ ,/ 我们/ 可以/ 在/ 未来/ 研究/ 中/ 考虑/ 引入/ 标准/ 矩阵/ 补全/ 问题/ 中/ 常用/ 的/ 快速/ 求解/ 算法/ 如/ IALM/ 或/ ADM/ 算法/ 来/ 改进/ 结构化/ 噪声/ 矩阵/ 补全/ 问题/ 的/ 求解/ 效率/ ./ Page10/ 表/ 1LiBIMC/ 算法/ 缺失/ 元素/ 和/ 含噪/ 元素/ 补全/ 精度/ 以及/ 结构化/ 噪声/ 行/ 位置/ 信息/ 识别/ 性能/ n1300400500300500500100/ ./ 450.2515000/ ./ 71.23/ ./ 17e/ -/ 15.86/ e/ -/ 24.13/ e/ -/ 2110001000151500100010/ 实验/ 2/ ./ 移除/ 结构化/ 噪声/ 行/ 前后/ LiBIMC/ 、/ IALM/ 、/ SVT/ 、/ FPCA/ 算法/ 对/ 缺失/ 元素/ 的/ 补全/ 精度/ 比较/ ./ 实验/ 1/ 结果表明/ ,/ LiBIMC/ 算法/ 能/ 精确/ 辨识/ 出/ 结构化/ 噪声/ 所在/ 行/ 的/ 位置/ 信息/ ,/ 因此/ 我们/ 在/ 实验/ 2/ 中/ 设计/ 了/ 5/ 个/ 实验/ 来/ 考察/ 移除/ 结构化/ 噪声/ 行/ 前后/ LiBIMC/ 算法/ 与/ IALM/ 、/ SVT/ 和/ FPCA/ 算法/ 对/ 缺失/ 元素/ 的/ 补全/ 性能/ ,/ 其中/ ,/ IALM/ 算法/ 的/ 实现/ 代码/ 来源于/ http/ :/ // // perception/ ./ csl/ ./ illinois/ ./ edu/ // matrix/ -/ rank/ // sample/ _/ code/ ./ html/ ,/ SVT/ 算法/ 的/ 实现/ 代码/ 来源于/ http/ :/ // // svt/ ./ stanford/ ./ edu/ // code/ ./ html/ ,/ FPCA/ 算法/ 的/ 表/ 2IALM/ 、/ SVT/ 、/ FPCA/ 与/ LiBIMC/ 算法/ 移除/ 结构化/ 噪声/ 行/ 前后/ 对/ 缺失/ 元素/ 的/ 补全/ 精度/ 比较/ n1n2rpspn/ μ/ λ/ δ/ 30040050.450/ ./ 2512000.81/ ./ 23.06/ e/ -/ 18.75/ e/ -/ 63.58/ e/ -/ 11.62/ e/ -/ 55.66/ e/ -/ 12.97/ e/ -/ 54.91/ e/ -/ 23.01/ e/ -/ 450030050.350/ ./ 1512000.71/ ./ 22.61/ e/ -/ 18.16/ e/ -/ 63.17/ e/ -/ 11.57/ e/ -/ 55.44/ e/ -/ 12.08/ e/ -/ 53.71/ e/ -/ 25.09/ e/ -/ 4500500100.450/ ./ 2515000.71/ ./ 22.84/ e/ -/ 17.57/ e/ -/ 63.32/ e/ -/ 11.56/ e/ -/ 54.19/ e/ -/ 12.31/ e/ -/ 54.13/ e/ -/ 21.36/ e/ -/ 410001000150.300/ ./ 3016000.71/ ./ 24.53/ e/ -/ 17.62/ e/ -/ 64.98/ e/ -/ 19.85/ e/ -/ 64.58/ e/ -/ 11.02/ e/ -/ 54.92/ e/ -/ 21.01/ e/ -/ 415001000100.300/ ./ 1012000.71/ ./ 22.95/ e/ -/ 16.33/ e/ -/ 63.04/ e/ -/ 12.31/ e/ -/ 53.23/ e/ -/ 13.28/ e/ -/ 51.66/ e/ -/ 26.72/ e/ -/ 5/ 实验/ 3/ ./ 采样率/ 对/ LiBIMC/ 算法/ 性能/ 的/ 影响/ ./ Candes/ 和/ Recht/ [/ 6/ ]/ 的/ 研究/ 结果表明/ ,/ 对/ 不/ 含噪/ 采样/ 的/ 标准/ 矩阵/ 补全/ 问题/ 而言/ ,/ 如果/ 目标/ 矩阵/ 犡/ 的/ 阶/ 为/ n1/ ×/ n2/ ,/ 秩为/ r/ ,/ 其/ 自由度/ 为/ df/ =/ (/ n1/ +/ n2/ -/ r/ )/ r/ ,/ 当/ 采样/ 数目/ m/ </ df/ 时/ ,/ 可能/ 存在/ 无穷/ 多个/ 秩为/ r/ 的/ 矩阵/ 满足/ 约束条件/ P/ Ω/ (/ 犚/ )/ =/ P/ Ω/ (/ 犡/ )/ ,/ 这/ 就/ 意味着/ ,/ 当/ 采样/ 数目/ 低于/ 矩阵/ 自由度/ 时/ ,/ 即使/ 在/ 不/ 含噪/ 情形/ 下/ 我们/ 也/ 不/ 可能/ 精确/ 恢复/ 出/ 目标/ 矩阵/ ./ 因此/ ,/ 为了/ 有效/ 地/ 考察/ 采样率/ 对/ 结构化/ 噪声/ 矩阵/ 补全/ 性能/ 的/ 影响/ ,/ 实验/ 中/ 我们/ 仅/ 考虑/ m/ >/ df/ 的/ 情形/ ,/ 即/ 采样/ 元素/ 个数/ 必须/ 不少/ 于/ 矩阵/ 自由度/ ./ 此外/ ,/ 鉴于/ 实验/ 1/ 和/ 实验/ 2/ 的/ 结果/ 已经/ 表明/ LiBIMC/ 算法/ 的/ 优势/ 主要/ 体现/ 在/ 结构化/ 噪声/ 行/ 位置/ 信息/ 的/ 辨识/ 和/ 移除/ 结构化/ 噪声/ 行后/ 对/ 缺失/ 元素/ 的/ 补全/ 能力/ ,/ 因此/ 实验/ 3/ 主要/ 考察/ LiBIMC/ 算法/ 在/ 不同/ 采样率/ 下/ 所/ 表现/ 出来/ 的/ 结构化/ 噪声/ 行/ 位置/ 信息/ 辨识/ 能力/ 和/ 移除/ 结构化/ 噪声/ 行后/ 对/ 缺失/ 元素/ 的/ 补全/ 能力/ ./ 其中/ ,/ 结构化/ 噪声/ 行/ 位置/ 信息/ 辨识/ 能力/ 的/ 考察/ 综合/ 采用/ F1/ -/ Measure/ 和/ 查全率/ (/ Recall/ )/ 、/ 查准率/ (/ Precision/ )/ 作为/ 评价/ 指标/ ,/ 移除/ 结构化/ 噪声/ 行后/ 对/ 缺失/ 元素/ 补全/ 能力/ 的/ 考察/ 采用/ 缺失/ correctrmiss/ 实现/ 代码/ 来源于/ http/ :/ // // www1/ ./ se/ ./ cuhk/ ./ edu/ ./ hk/ // ~/ sqma/ // FPCA/ ./ html/ ./ IALM/ 、/ SVT/ 和/ FPCA/ 算法/ 的/ 参数均/ 按照/ 算法/ 设计者/ 设定/ 的/ 方法/ 选取/ ./ 实验/ 结果/ 见表/ 2/ ./ 从表/ 2/ 可以/ 看出/ :/ (/ 1/ )/ 移除/ 结构化/ 噪声/ 前/ ,/ LiBIMC/ 算法/ 对/ 缺失/ 元素/ 的/ 补全/ 精度/ 明显/ 优于/ IALM/ 、/ SVT/ 和/ FPCA/ 算法/ 将近/ 一个/ 数量级/ ;/ (/ 2/ )/ 移除/ 结构化/ 噪声/ 行后/ ,/ 采样/ 矩阵/ 变成/ 了/ 无/ 噪声/ 采样/ ,/ 此时/ 无论是/ LiBIMC/ 算法/ 还是/ IALM/ 、/ SVT/ 、/ FPCA/ 算法/ ,/ 对/ 缺失/ 元素/ 的/ 补全/ 精度/ 均/ 得到/ 了/ 大幅度/ 的/ 提高/ ./ SVT/ 移除/ 噪声/ 行前/ 元素/ 补全/ 精度/ 作为/ 评价/ 指标/ ./ 图/ 1/ 和/ 图/ 2/ 分别/ 从/ F1/ -/ Measure/ 和/ Recall/ 、/ Precision/ 的/ 3/ 个/ 评价/ 指标/ 反映/ 了/ 秩为/ 5/ 、/ 10/ 和/ 15/ 的/ 400/ ×/ 400/ 矩阵/ 在/ 结构化/ 噪声污染/ 率为/ 20/ %/ 的/ 情形/ 下/ 不同/ 的/ 采样率/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 辨识/ 能力/ 的/ 影响/ ,/ 图/ 3/ 反映/ 了/ 同样/ 情形/ 下/ 采样率/ 对/ 移除/ 结构化/ 噪声/ 行后/ 缺失/ 元素/ 补全/ 精度/ 的/ 影响/ ./ 考虑/ 到/ LiBIMC/ 算法/ 参数/ 的/ 选取/ 和/ 采样率/ 大小/ 无关/ ,/ 因此/ 本/ 实验/ 中/ 的/ 参数设置/ 为定值/ ,/ 即/ λ/ =/ 0.7/ ,/ μ/ =/ 1200/ ,/ η/ =/ 1.2/ ./ 图/ 1/ 不同/ 的/ 采样率/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ Page11/ 图/ 2/ 不同/ 的/ 采样率/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 从图/ 1/ 可以/ 看出/ :/ (/ 1/ )/ 当/ 矩阵/ 的/ 秩较/ 低时/ (/ 例如/ 秩为/ 5/ 时/ )/ ,/ 即使/ 采样率/ 低至/ 10/ %/ ,/ LiBIMC/ 算法/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 辨识/ 的/ F1/ -/ Measure/ 值/ 也/ 能/ 接近/ 于/ 100/ %/ ,/ 这/ 表明/ LiBIMC/ 算法/ 对/ 低/ 秩/ 矩阵/ 具有/ 很强/ 的/ 结构化/ 噪声/ 行/ 位置/ 信息/ 辨识/ 能力/ ;/ (/ 2/ )/ 当/ 矩阵/ 的/ 秩/ 分别/ 提高/ 为/ 10/ 和/ 15/ 时/ ,/ 如果/ 采样率/ 过低/ (/ 例如/ 分别/ 低于/ 12.5/ %/ 和/ 20/ %/ 时/ )/ ,/ 则/ 相应/ 的/ 噪声/ 行/ 辨识/ 能力/ 急剧下降/ ,/ 但是/ 如果/ 将/ 采样率/ 各/ 提高/ 5/ 个/ 百分点/ ,/ 即/ 分别/ 提高/ 到/ 17.5/ %/ 和/ 25/ %/ 以上/ ,/ 则/ 相应/ 的/ F1/ -/ Measure/ 值/ 也/ 能/ 达到/ 100/ %/ ,/ 这/ 表明/ 虽然/ 随着/ 矩阵/ 秩/ 的/ 增加/ ,/ 在/ 采样率/ 保持/ 不变/ 的/ 情形/ 下/ ,/ LiBIMC/ 算法/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 的/ 辨识/ 能力/ 会/ 相应/ 减弱/ ,/ 但/ 实际上/ 仍然/ 可以/ 通过/ 提高/ 采样率/ 来/ 减小/ 这种/ 负面影响/ ,/ 从而/ 使得/ 结构化/ 噪声/ 行/ 位置/ 信息/ 得到/ 精确/ 辨识/ ./ 进一步/ ,/ 从图/ 3/ 可以/ 看出/ :/ (/ 1/ )/ 当/ 矩阵/ 的/ 秩较/ 低时/ (/ 例如/ 秩为/ 5/ 时/ )/ ,/ 即使/ 采样率/ 低至/ 10/ %/ ,/ LiBIMC/ 算法/ 对/ 缺失/ 元素/ 的/ 补全/ 能力/ 依然/ 很强/ ,/ 这/ 表明/ LiBIMC/ 算法/ 对/ 低/ 秩含/ 噪/ 矩阵/ 具有/ 很强/ 的/ 缺失/ 元素/ 补全/ 能力/ ;/ (/ 2/ )/ 当/ 矩阵/ 的/ 秩/ 分别/ 提高/ 到/ 10/ 和/ 15/ 时/ ,/ 如果/ 采样率/ 较/ 低/ (/ 例如/ 采样率/ 为/ 10/ %/ 和/ 12.5/ %/ 时/ )/ ,/ LiBIMC/ 算法/ 对/ 缺失/ 元素/ 的/ 补全/ 能力/ 急速/ 下降/ ./ 同时/ ,/ 我们/ 结合/ 图/ 1/ 和/ 图/ 3/ 容易/ 发现/ :/ 对于/ 矩阵/ 秩为/ 15/ 的/ 情形/ 而言/ ,/ 当/ 采样率/ 分别/ 为/ 17.5/ %/ 和/ 20/ %/ 时/ ,/ 虽然/ 图/ 1/ 表明/ LiBIMC/ 算法/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 辨识/ 的/ F1/ -/ Measure/ 值/ 并/ 不/ 高/ ,/ 但图/ 3/ 却/ 反映/ 出/ 此时/ 的/ 缺失/ 元素/ 补全/ 精度/ 相当/ 之高/ ./ 究其原因/ ,/ 主要/ 还是/ 由于/ 此时/ LiBIMC/ 算法/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 的/ 查全率/ 达到/ 了/ 100/ %/ ,/ 因此/ 图/ 3/ 中/ 此时/ 对/ 移除/ 结构化/ 噪声/ 行后/ 的/ 缺失/ 元素/ 补全/ 就/ 等同于/ 无/ 噪声/ 采样/ 情形/ 下/ 缺失/ 元素/ 的/ 补全/ ,/ 自然/ 容易/ 获得/ 很/ 高/ 的/ 补全/ 精度/ ./ 实际上/ ,/ 图/ 2/ 的/ 实验/ 结果/ 也/ 证实/ 了/ 这/ 一/ 事实/ :/ 无论/ 矩阵/ 的/ 秩为/ 5/ ,/ 10/ 还是/ 15/ ,/ 在/ 各种/ 采样率/ 下/ ,/ LiBIMC/ 算法/ 对/ 结构化/ 噪声/ 行/ 位置/ 信息/ 辨识/ 的/ 查全率/ 都/ 高于/ 查准率/ ;/ 特别/ 地/ ,/ 当/ 秩为/ 15/ 时/ ,/ 如果/ 以/ 采样率/ 17.5/ %/ 进行/ 采样/ ,/ 此时/ 的/ F1/ -/ Measure/ 值/ 和/ 查准率/ 均/ 远/ 低于/ 100/ %/ ,/ 但/ 查全率/ 仍然/ 达到/ 100/ %/ ,/ 这/ 表明/ 在/ 进行/ 缺失/ 元素/ 补全/ 时/ 我们/ 可以/ 以较/ 低/ 的/ 采样率/ 首先/ 移除/ 全部/ 噪声/ 行/ (/ 付出/ 的/ 相应/ 代价/ 是/ 有/ 少部分/ 不/ 含噪/ 元素/ 也/ 会/ 当作/ 结构化/ 噪声/ 行/ 被/ 移除/ )/ ,/ 从而/ 得以/ 在/ 干净/ 采样/ 的/ 情形/ 下/ 补全/ 不/ 含噪/ 部分/ 的/ 缺失/ 元素/ ./ 实验/ 4/ ./ 结构化/ 噪声污染/ 程度/ 对/ LiBIMC/ 算法/ 性能/ 的/ 影响/ ./ 实验/ 3/ 考察/ 了/ 采样率/ 对/ LiBIMC/ 算法/ 性能/ 的/ 影响/ ,/ 实验/ 4/ 将/ 考察/ 结构化/ 噪声污染/ 程度/ 对/ LiBIMC/ 算法/ 的/ 性能/ 影响/ ./ 鉴于/ 前文/ 对/ LiBIMC/ 算法/ 可调/ 参数/ 的/ 分析/ 已经/ 表明/ 参数/ λ/ 的/ 选取/ 和/ 结构化/ 噪声污染/ 程度/ 的/ 大小/ 密切相关/ ,/ 因此/ 本/ 实验/ 中仅/ 固定/ 参数/ μ/ =/ 1200/ ,/ η/ =/ 1.2/ ,/ 而/ 参数/ λ/ 的/ 取值/ 是从/ 0.75/ 依/ 噪声/ 比例/ 均匀/ 递减/ 到/ 0.51/ ./ 图/ 4/ 反映/ 了/ 秩/ 分别/ 为/ 5/ 、/ 10/ 和/ 15/ 的/ 400/ ×/ 400/ 矩阵/ 在/ 采样率/ 为/ 30/ %/ 和/ 40/ %/ 情形/ 下/ 不同/ 结构化/ 噪声污染/ 程度/ 对/ 噪声/ 行/ 位置/ 信息/ 辨识/ 能力/ (/ F1/ -/ Measure/ )/ 的/ 比较/ ./ 图/ 5/ 反映/ 了/ 秩/ 分别/ 为/ 图/ 4/ 不同/ 的/ 噪声污染/ 程度/ 对/ 结构化/ 噪声/ 行/ 位置/ Page12/ 图/ 5/ 采样率/ 为/ 40/ %/ 时/ 不同/ 的/ 噪声污染/ 程度/ 对/ 移除/ 5/ 、/ 10/ 和/ 15/ 的/ 400/ ×/ 400/ 矩阵/ 在/ 采样率/ 为/ 40/ %/ 的/ 情形/ 下/ 不同/ 结构化/ 噪声污染/ 程度/ 对/ 移除/ 结构化/ 噪声/ 行后/ 缺失/ 元素/ 补全/ 精度/ 的/ 比较/ ./ 从图/ 4/ 可以/ 看出/ :/ 当/ 采样率/ 达到/ 40/ %/ 时/ ,/ 对/ 秩为/ 5/ 、/ 10/ 和/ 15/ 的/ 矩阵/ 而言/ ,/ 即使/ 结构化/ 噪声/ 程度/ 达到/ 70/ %/ ,/ LiBIMC/ 算法/ 对/ 噪声/ 行/ 位置/ 信息/ 辨识/ 的/ F1/ -/ Measure/ 值/ 仍然/ 能/ 达到/ ./ 但/ 当/ 采样率/ 降到/ 30/ %/ 时/ ,/ LiBIMC/ 算法/ 对/ 噪声/ 信息/ 的/ 辨识/ 能力/ 随着/ 矩阵/ 秩/ 的/ 增大/ 和/ 结构化/ 噪声污染/ 程度/ 的/ 提高/ 显著/ 下降/ ,/ 这/ 表明/ 结构化/ 噪声污染/ 程度/ 对/ LiBIMC/ 算法/ 辨识/ 噪声/ 行/ 位置/ 信息/ 能力/ 的/ 影响/ 同时/ 取决于/ 矩阵/ 的/ 低/ 秩/ 程度/ 和/ 采样率/ 的/ 大小/ ,/ 如果/ 矩阵/ 足够/ 低/ 秩/ ,/ 而且/ 采样率/ 足够/ 高/ ,/ 则/ LiBIMC/ 算法/ 对/ 噪声/ 行/ 位置/ 信息/ 的/ 辨识/ 能力/ 基本/ 不/ 受/ 结构化/ 噪声污染/ 程度/ 的/ 影响/ ,/ 反之/ 则/ 影响/ 较大/ ./ 进一步/ ,/ 从图/ 5/ 可以/ 看出/ :/ 当/ 矩阵/ 的/ 秩为/ 15/ 时/ ,/ 即使/ 采样率/ 高达/ 40/ %/ ,/ 随着/ 结构化/ 噪声污染/ 程度/ 的/ 增加/ ,/ 缺失/ 元素/ 的/ 补全/ 精度/ 下降/ 也/ 比较/ 明显/ ,/ 但/ 另一方面/ 图/ 4/ 却/ 表明/ 当/ 矩阵/ 秩为/ 15/ 时/ ,/ 如果/ 采样率/ 达到/ 40/ %/ ,/ LiBIMC/ 算法/ 对/ 噪声/ 行/ 位置/ 信息/ 辨识/ 的/ F1/ -/ Measure/ 值能/ 达到/ 100/ %/ ,/ 这/ 就/ 意味着/ 其/ 查全率/ 能/ 达到/ 100/ %/ ,/ 也就是说/ 在/ 补全/ 缺失/ 元素/ 时/ 完全/ 可以/ 在/ 移除/ 全部/ 噪声/ 行/ 元素/ 的/ 无/ 噪声/ 采样/ 状态/ 下/ 进行/ ,/ 理论/ 上/ 此时/ 的/ 缺失/ 元素/ 补全/ 精度/ 是/ 不/ 应该/ 随着/ 结构化/ 噪声污染/ 程度/ 的/ 增加/ 而/ 不断/ 下降/ 的/ ./ 究其原因/ ,/ 主要/ 是/ 由于/ 当/ 噪声/ 含量/ 达到/ 一定/ 比例/ 时/ ,/ 如果/ 移除/ 全部/ 噪声/ 行/ 信息/ ,/ 则/ 矩阵/ 的/ 低/ 秩性/ 会/ 受到/ 很大/ 的/ 影响/ ./ 例如/ 对/ 400/ ×/ 400/ 的/ 矩阵/ 而言/ ,/ 如果/ 噪声/ 含量/ 达到/ 50/ %/ ,/ 则/ 移除/ 噪声/ 行后/ 所/ 得到/ 的/ 干净/ 矩阵/ 最/ 多/ 变为/ 200/ ×/ 400/ ,/ 因此/ 其低/ 秩性/ 发生/ 了/ 很大/ 的/ 变化/ ,/ 从而/ 使得/ 图/ 5/ 所示/ 的/ “/ 当/ 秩为/ 15/ 时/ ,/ 移除/ 全部/ 结构化/ 噪声/ 行后/ 缺失/ 元素/ 补全/ 精度/ 依然/ 随着/ 噪声污染/ 程度/ 的/ 提高/ 而/ 急剧下降/ ”/ 的/ 现象/ 产生/ ./ 最后/ ,/ 综合/ 上述/ 实验/ 1/ ~/ 实验/ 4/ ,/ 我们/ 可以/ 得出/ 如下/ 结论/ :/ (/ 1/ )/ 在/ 结构化/ 噪声/ 采样/ 情形/ 下/ ,/ 如果/ 仅仅/ 需要/ 恢复/ 不/ 含噪/ 部分/ 的/ 缺失/ 元素/ ,/ 我们/ 可以/ 利用/ LiBIMC/ 算法/ 预先/ 探测/ 出/ 噪声/ 行/ 位置/ ,/ 然后/ 再/ 选择/ 任意/ 一种/ 已有/ 的/ 矩阵/ 补全/ 算法/ ,/ 在/ 移除/ 噪声/ 行/ 信息/ 后/ ,/ 就/ 可以/ 以/ 非常/ 高/ 的/ 精度/ 恢复/ 出/ 缺失/ 元素/ ;/ (/ 2/ )/ 如果/ 同时/ 需要/ 对/ 噪声/ 元素/ 纠错/ 并且/ 恢复/ 含噪/ 部分/ 的/ 缺失/ 元素/ ,/ 可以/ 选择/ LiBIMC/ 算法/ 进行/ 一次性/ 补全/ ,/ 虽然/ 补全/ 精度/ 低于/ 无噪/ 情形/ ,/ 但/ 与/ IALM/ 、/ SVT/ 和/ FPCA/ 算法/ 相比/ ,/ 仍然/ 有/ 了/ 将近/ 一个/ 数量级/ 的/ 提高/ ;/ (/ 3/ )/ LiBIMC/ 算法/ 的/ 性能/ 受到/ 采样率/ 和/ 结构化/ 噪声污染/ 程度/ 的/ 影响/ ,/ 特别/ 地/ ,/ 矩阵/ 的/ 秩越/ 高/ ,/ LiBIMC/ 算法/ 性能/ 受到/ 采样率/ 和/ 结构化/ 噪声污染/ 程度/ 的/ 影响/ 越/ 明显/ ;/ (/ 4/ )/ 随着/ 矩阵/ 秩/ 的/ 增加/ 和/ 结构化/ 噪声污染/ 程度/ 的/ 提高/ ,/ 虽然/ LiBIMC/ 算法/ 的/ 补全/ 性能/ 会/ 受到/ 影响/ ,/ 但/ 仍然/ 可以/ 通过/ 提高/ 元素/ 的/ 采样率/ 来/ 有效/ 减小/ 甚至/ 抵消/ 这种/ 影响/ ,/ 从而/ 达到/ 理想/ 的/ 矩阵/ 补全/ 性能/ ./ 7/ 结论/ 本文/ 针对/ 矩阵/ 补全/ 理论/ 在/ 实际/ 问题/ 中/ 经常/ 遇到/ 的/ 行/ 结构化/ 噪声/ 情形/ 提出/ 了/ 一种/ 可/ 扩放性/ 好/ 的/ 有效/ 解决方案/ ./ 该/ 方案/ 首先/ 通过/ 引入/ L2/ ,/ 1/ 范数/ 正则/ 化/ 技术/ 将/ 其/ 建模/ 为/ 一类/ 凸/ 约束/ 优化/ 问题/ ,/ 然后/ 为此/ 设计/ 了/ 一种/ 鲁棒/ 的/ 求解/ 算法/ —/ —/ —/ 基于/ 线性/ Bregman/ 迭代/ 的/ 结构化/ 噪声/ 矩阵/ 补全/ 算法/ (/ LiBIMC/ )/ ./ LiBIMC/ 算法/ 不仅/ 能以/ 较/ 高/ 的/ 精度/ 补全/ 缺失/ 元素/ ,/ 而且/ 还/ 能/ 对/ 含噪/ 元素/ 进行/ 纠错/ ,/ 更为重要/ 的/ 是/ ,/ LiBIMC/ 算法/ 能够/ 精确/ 辨识/ 采样/ 矩阵/ 中/ 噪声/ 元素/ 所在/ 行/ 的/ 位置/ 信息/ ./ 有/ 了/ 这些/ 噪声/ 行/ 位置/ 信息/ ,/ 已有/ 的/ 矩阵/ 补全/ 算法/ 都/ 可以/ 在/ 预先/ 移除/ 采样/ 矩阵/ 噪声/ 行/ 的/ 前提/ 下/ ,/ 对/ 无/ 噪声/ 部分/ 的/ 缺失/ 元素/ 进行/ 精确/ 补全/ ./ 在/ 接下来/ 的/ 工作/ 中/ ,/ 我们/ 将/ 进一步/ 对/ LiBIMC/ 算法/ 的/ 收敛性/ 进行/ 严格/ 的/ 理论/ 分析/ ,/ 同时/ 研究/ LiBIMC/ 算法/ 可调/ 参数/ 的/ 自/ 适应/ 设置/ 方法/ ,/ 并/ 展开/ LiBIMC/ 算法/ 在/ 推荐/ 系统/ 、/ 无线/ 传感/ 网/ 节点/ 定位/ 和/ 数据/ 收集/ 等/ 方面/ 的/ 应用/ 研究/ ./ 

