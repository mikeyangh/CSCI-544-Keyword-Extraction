Page1/ 基于/ Chord/ 的/ 多/ 租户/ 索引/ 机制/ 研究/ 邹立/ 达/ 李庆忠/ 孔兰菊/ 王振坤/ (/ 山东大学/ 计算机科学/ 与/ 技术/ 学院/ 济南/ 250101/ )/ (/ 山东省/ 软件工程/ 重点/ 实验室/ 济南/ 250101/ )/ 摘要/ 多/ 租户/ 数据管理/ 是/ 支持/ SaaS/ 应用/ 高效/ 运行/ 的/ 重要/ 组成部分/ ./ 随着/ 租户/ 规模/ 的/ 不断扩大/ ,/ 多/ 租户/ 数据库/ 需要/ 云/ 计算环境/ 下/ 的/ 每个/ 节点/ 都/ 存储/ 并/ 处理/ 租户/ 数据/ ,/ 因此/ 适合/ 利用/ 对/ 等/ 结构/ (/ P2P/ )/ 组织/ 管理/ 多/ 租户/ 数据/ ./ 组织/ 良好/ 、/ 易/ 扩展/ 的/ 云中/ 多/ 租户/ 索引/ 机制/ 是/ 高效/ 查询/ 的/ 关键/ ./ 文中/ 基于/ P2P/ 结构/ 对/ 多/ 租户/ 索引/ 机制/ 展开/ 研究/ ,/ 针对/ 不同/ 租户/ 的/ 索引/ 易/ 相互/ 干扰/ 、/ 租户/ 数据分布/ 无序/ 的/ 问题/ ,/ 通过/ 对/ Chord/ 的/ 映射/ 方法/ 进行/ 改进/ 将/ 所有/ 租户/ 索引/ 统一/ 映射/ 到/ 一个/ 标识符/ 空间/ ,/ 给出/ 的/ 映射函数/ 使/ 单个/ 租户/ 索引/ 可以/ 隔离/ 、/ 保序/ 地/ 在/ 空间/ 分布/ ./ 同时/ 设计/ 了/ 各/ 节点/ 所/ 负责/ 的/ 标识符/ 空间/ 范围/ 的/ 分配/ 算法/ ,/ 使/ 租户/ 索引/ 及/ 数据/ 可/ 均衡/ 、/ 聚集地/ 放置/ 在/ 各/ 节点/ ,/ 从而/ 使/ 查询/ 时/ 既/ 能/ 通过/ 对/ 等/ 结构/ 避免/ 性能/ 瓶颈/ ,/ 也/ 降低/ 了/ 数据传输/ 成本/ ./ 文中/ 给出/ 了/ 多/ 租户/ 索引/ 机制/ 的/ 动态/ 维护/ 策略/ ,/ 提出/ 的/ 标识符/ 空间/ 增倍/ 方法/ 使该/ 索引/ 机制/ 能够/ 适应/ 租户/ 数量/ 与/ 索引/ 不断/ 增加/ 的/ 应用/ 场景/ ./ 实验/ 结果表明/ ,/ 该/ 机制/ 在/ 租户/ 规模/ 较大/ 时/ ,/ 与/ 集中式/ 索引/ 相比/ 查询/ 时间/ 至少/ 可以/ 节省/ 50/ %/ ,/ 吞吐量/ 提高/ 1.5/ 倍/ ./ 关键词/ 多/ 租户/ 索引/ ;/ P2P/ ;/ Chord/ ;/ 多/ 租户/ 数据库/ ;/ 标识符/ 空间/ ;/ 云/ 计算/ 1/ 引言/ 随着/ SaaS/ (/ SoftwareasaService/ )/ [/ 1/ -/ 2/ ]/ 应用/ 规模/ 的/ 不断扩大/ ,/ 多/ 租户/ 数据管理/ 成为/ SaaS/ 应用/ 快速/ 开发/ 和/ 高效/ 运行/ 的/ 重要/ 基础/ ./ 数据处理/ 资源/ 被/ 多个/ 租户/ 共享/ 使用/ 是/ 多/ 租户/ 数据库/ 的/ 重要/ 特征/ ,/ 对于/ 共享/ 方案/ ,/ Chong/ 等/ 人/ [/ 3/ ]/ 提出/ 了/ 3/ 种/ 解决/ 思路/ :/ 独立/ 数据库/ ,/ 即/ 为/ 每个/ 租户/ 建立/ 一个/ 数据库/ 实例/ ;/ 共享/ 数据库/ 独立/ 模式/ ,/ 即/ 所有/ 租户/ 共享/ 一个/ 数据库/ 实例/ ,/ 但/ 每个/ 租户/ 拥有/ 个性化/ 定制/ 的/ 模式/ ;/ 共享/ 数据库/ 共享/ 模式/ (/ 又称/ 共享/ 模式/ )/ ,/ 即/ 所有/ 租户/ 共享/ 一个/ 数据库/ 实例/ 及/ 同一个/ 数据/ 模式/ ,/ 同时/ 在/ 表中/ 通过/ 租户/ 标识/ 区分/ 数据/ 所属/ 的/ 租户/ ,/ 此种/ 方案/ 的/ 共享/ 程度/ 最高/ ./ 对于/ 共享/ 模式/ ,/ Weissman/ 等/ 人/ [/ 1/ ]/ 提出/ 了/ 通用/ 表/ 共享/ 方案/ ,/ 即将/ 所有/ 租户/ 的/ 业务/ 数据/ 存储/ 到/ 一个/ 通用/ 表中/ ;/ Aulbach/ 等/ 人/ [/ 4/ ]/ 提出/ 了/ ChunkFolding/ 方案/ ,/ 即/ 把/ 租户/ 的/ 数据表/ 垂直/ 划分/ 为/ 多个/ 块/ ,/ 将/ 它们/ 折叠/ 存储/ 至/ 不同/ 的/ Chunk/ 表中/ ;/ Ni/ 等/ 人/ [/ 5/ ]/ 则/ 将/ 租户/ 共享/ 的/ 、/ 关系/ 依赖/ 的/ 属性/ 存储/ 在/ 基表/ ,/ 其他/ 的/ 属性/ 则/ 存储/ 在/ 辅助/ 表/ ./ Aulbach/ 等/ 人/ [/ 4/ ,/ 6/ ]/ 证明/ 共享/ 模式/ 的/ 系统/ 性能/ 最优/ ,/ 因此/ 主流/ 的/ 多/ 租户/ 数据库/ 多/ 采用/ 共享/ 模式/ ./ 本文/ 主要/ 对/ 共享/ 模式/ 多/ 租户/ 数据库/ 的/ 索引/ 机制/ 展开/ 研究/ ./ 多/ 租户/ 数据库/ 有/ 租户/ 数量/ 多/ 、/ 单个/ 租户/ 数据量/ 小/ 但/ 数据/ 总量/ 大/ 的/ 特点/ ,/ 集中式/ 的/ 数据处理/ 结构/ 易/ 造成/ 性能/ 瓶颈/ [/ 7/ ]/ ,/ 因此/ 需要/ 云/ 计算环境/ 下/ 的/ 每个/ 节点/ 都/ 能/ 存储/ 并/ 处理/ 数据/ ,/ 适合/ 利用/ 对/ 等/ 结构/ (/ P2P/ )/ 组织/ 管理/ 多/ 租户/ 数据/ ./ 在/ 云/ 计算环境/ 下为/ 多/ 租户/ 数据/ 建立/ 良好/ 的/ 索引/ 机制/ 是/ 多/ 租户/ 数据/ 高效/ 查询/ 的/ 关键/ ./ 目前/ ,/ 云中/ 多/ 租户/ 索引/ 主要/ 存在/ 以下/ 两个/ 问题/ :/ 首先/ ,/ 在/ 创建/ 与/ 维护/ 索引/ 时/ 租户/ 间/ 存在/ 相互/ 干扰/ ./ 即/ 在/ 共享/ 模式/ 下/ ,/ 一个/ 租户/ 在/ 某个/ 属性/ 上/ 建立/ 索引/ ,/ 会/ 导致/ 其他/ 租户/ 也/ 在/ 该/ 属性/ 上/ 被动/ 建立/ 索引/ ,/ 即使/ 其他/ 租户/ 没有/ 索引/ 需求/ ./ 其次/ ,/ 现有/ 的/ 多/ 租户/ 索引/ 多以/ 集中式/ 索引/ 为主/ ,/ 没有/ 考虑/ 云/ 计算环境/ 中多/ 租户/ 数据/ 总量/ 大/ 的/ 场景/ ,/ 易/ 导致/ 过多/ 的/ 查询/ 集中/ 在/ 入口/ 节点/ ,/ 使得/ 查询/ 性能/ 下降/ ./ P2P/ 协议/ [/ 8/ ]/ 能/ 较/ 好/ 地/ 提供/ 性能/ 平衡/ 与/ 扩展/ 的/ 功能/ ,/ 适合/ 利用/ P2P/ 结构/ 建立/ 多/ 租户/ 数据/ 索引/ ./ 在/ P2P/ 协议/ 中/ ,/ Chord/ [/ 9/ ]/ 协议/ 能以/ 较/ 低/ 的/ 路由表/ 维护/ 代价/ 提供/ 高效/ 的/ 查询/ 跳转/ 效率/ ,/ 且/ 索引/ 映射/ 结构/ 简单/ 易于/ 改造/ ,/ 适用/ 于/ 多/ 租户/ 场景/ ./ 然而/ ,/ 基于/ Chord/ 协议/ 建立/ 的/ 多/ 租户/ 索引/ 还/ 存在/ 以下/ 挑战/ :/ (/ 1/ )/ 索引/ 分布/ 的/ 无序/ 性/ 增加/ 了/ 租户/ 查询处理/ 的/ 数据传输/ 成本/ ./ 多/ 租户/ 场景/ 中/ 每个/ 租户/ 的/ 数据量/ 小/ ,/ 且/ 租户/ 的/ 查询/ 具有/ 隔离/ 性/ ,/ 即/ 只/ 查询/ 属于/ 自己/ 的/ 索引/ 与/ 数据/ ./ 若/ 一个/ 租户/ 的/ 索引/ 与/ 数据/ 只/ 聚集地/ 放置/ 于/ 一个/ 或者/ 少量/ 节点/ ,/ 则/ 在/ 查询处理/ 时/ ,/ 可/ 避免/ 或/ 减少/ 跨/ 节点/ 的/ 数据传输/ ./ 然而/ ,/ Chord/ 协议/ 采用/ 随机/ 方法/ 对/ 索引/ 进行/ 标识符/ 空间/ 映射/ ,/ 属于/ 一个/ 租户/ 的/ 索引/ 及/ 数据/ 散乱/ 地/ 分布/ 在/ 较/ 多/ 节点/ 中/ ,/ 因此/ 需要/ 在/ 节点/ 间/ 传输/ 大量/ 数据/ 才能/ 完成/ 租户/ 的/ 查询处理/ 功能/ ;/ (/ 2/ )/ 无法/ 满足/ 多/ 租户/ 数据/ 索引/ 对/ 扩展性/ 的/ 需求/ ./ 随着/ 多/ 租户/ 数据库/ 投入使用/ ,/ 租户/ 数量/ 与/ 数据量/ 会以/ 较/ 快/ 的/ 速度/ 增加/ [/ 10/ ]/ ./ Chord/ 协议/ 无法/ 保证/ 新增/ 的/ 租户/ 与/ 原有/ 租户/ 隔离/ 的/ 分布/ ,/ 并且/ 无法/ 保证/ 一个/ 租户/ 新增/ 的/ 索引/ 放置/ 到/ 其/ 租户/ 数据/ 所在/ 的/ 节点/ ,/ 因此/ 会/ 降低/ 数据/ 查询/ 效率/ ./ 针对/ 以上/ 问题/ ,/ 需/ 通过/ 对/ Chord/ 协议/ 进行/ 改进/ 建立/ 多/ 租户/ 索引/ 机制/ ,/ 使/ 其/ 适用/ 于/ 多/ 租户/ 数据/ 的/ 特点/ ,/ 提高/ 数据/ 查询/ 效率/ ./ 本文/ 通过/ 改进/ Chord/ 映射/ 方法/ 对/ 多/ 租户/ 索引/ 进行/ 组织/ 管理/ ,/ 使/ 建立/ 的/ 索引/ 机制/ 满足/ 多/ 租户/ 数据库/ 对/ 隔离/ 性/ 、/ 扩展性/ 的/ 需求/ ./ 本文/ 通过/ 将/ Chord/ 标识符/ 空间/ 划分/ 为/ 若干个/ 大小/ 相同/ 的/ 区域/ ,/ 使/ 每个/ 区域/ 对应/ 一个/ 租户/ ,/ 实现/ 租户/ 索引/ 的/ 隔离/ 管理/ ;/ 设计/ 标示/ 符/ 空间/ 的/ 分配/ 算法/ ,/ 确定/ 各/ 节点/ 所/ 负责/ 的/ 空间/ 范围/ ,/ 使/ 单个/ 租户/ 的/ 数据/ 与/ 索引/ 在/ 节点/ 中/ 聚集地/ 分布/ 与/ 存储/ ,/ 以/ 减少/ 查询/ 时/ 数据传输/ 的/ 成本/ ;/ 给出/ 多/ 租户/ 索引/ 机制/ 动态/ 维护/ 策略/ ,/ 使/ 其/ 适应/ 租户/ 与/ 索引/ 数量/ 不断/ 增加/ 的/ 应用/ 场景/ ./ 由此/ 本文/ 建立/ 了/ 一个/ 支持/ P2P/ 结构/ 的/ 多/ 租户/ 索引/ 机制/ ,/ 避免出现/ 性能/ 瓶颈/ 的/ 同时/ 提供/ 动态/ 扩展/ 性能/ ,/ 并/ 通过/ 实验/ 验证/ 了/ 该/ 机制/ 在/ 较大/ 租户/ 规模/ 时/ 查询/ 效率/ 、/ 查询/ 吞吐/ 率/ 有/ 较/ 好/ 的/ 表现/ ./ 本文/ 第/ 2/ 节/ 讨论/ 多/ 租户/ 索引/ 的/ 相关/ 研究/ 工作/ 及/ 存在/ 问题/ ;/ 第/ 3/ 节/ 给出/ 多/ 租户/ 索引/ 机制/ 的/ 框架/ 及/ 相关/ 定义/ ;/ 第/ 4/ 节/ 改进/ Chord/ 映射函数/ ,/ 并/ 讨论/ 索引/ 条目/ 在/ 各/ 节点/ 的/ 分布/ 与/ 组织/ ;/ 第/ 5/ 节/ 给出/ 索引/ 机制/ 的/ 动态/ 扩展/ 方法/ ;/ 第/ 6/ 节对/ 多/ 租户/ 索引/ 机制/ 进行/ 实验/ 验证/ ;/ 第/ 7/ 节/ 给出/ 本文/ 的/ 结论/ ./ 2/ 相关/ 研究/ 对于/ 多/ 租户/ 数据共享/ 模式/ 存储/ ,/ 索引/ 管理/ 是/ 实现/ 其/ 高效/ 查询/ 的/ 重要环节/ ./ 直接/ 在/ 共享/ 模式/ 存储/ 的/ 多/ 租户/ 数据/ 上/ 统一/ 建立/ 索引/ ,/ 将/ 使得/ 所有/ 租户/ 数据/ 一起/ 被/ 索引/ ,/ 因此/ 对于/ 特定/ 租户/ 来说/ ,/ 在/ 索引/ 维护/ 与/ 查询/ 时会/ 产生/ 严重/ 的/ 性能/ 问题/ ./ 文献/ [/ 1/ ,/ 6/ ,/ 11/ -/ 12/ ]/ 针对/ 多/ 租户/ 索引/ 隔离/ 问题/ 展开/ 了/ 研究/ ./ Weissman/ 等/ Page3/ 人/ [/ 1/ ]/ 在/ 其/ 平台/ Force/ ./ com/ 中/ 使用/ 一系列/ 的/ 数据/ 透视/ 表/ (/ PivotTable/ )/ 来/ 存储/ 租户/ 的/ 索引/ ,/ 有效/ 地/ 支撑/ 了/ 租户/ 数据/ 的/ 高速/ 访问/ ,/ 但/ 随着/ 租户/ 数据量/ 的/ 增加/ ,/ 透视/ 表/ 占用/ 的/ 存储空间/ 会/ 暴涨/ ,/ 从而/ 导致系统/ 效率/ 降低/ ./ M/ -/ Store/ [/ 12/ ]/ 针对/ 多/ 租户/ 共享/ 索引/ 查询/ 效率/ 不高/ 的/ 问题/ ,/ 提出/ 了/ 多/ 分离/ 索引/ 技术/ ./ 其为/ 不同/ 租户/ 单独/ 建立/ 索引/ ,/ 提供/ 了/ 索引/ 可/ 定制/ 功能/ ,/ 但/ 随着/ 租户/ 数量/ 与/ 索引/ 数/ 的/ 增加/ ,/ 数据/ 引擎/ 则/ 需/ 管理/ 大量/ 的/ 索引/ 实例/ ./ Aulbach/ 等/ 人/ [/ 6/ ,/ 11/ ]/ 提出/ 多种/ 多/ 租户/ 数据共享/ 存储/ 模式/ ,/ 并/ 介绍/ 了/ ChunkTable/ 与/ 宽表/ 租户/ 索引/ 建立/ 方法/ ,/ 其/ 根据/ 租户/ 是否/ 有/ 建立/ 索引/ 需求/ 将/ 租户/ 数据/ 分为/ 两类/ ,/ 分别/ 存储/ 在/ 两个/ Table/ 中/ ,/ 在/ 其中/ 一个/ Table/ 建立/ 索引/ ,/ 另外/ 一个/ 则/ 不/ 建立/ 索引/ ,/ 以较/ 低/ 的/ 资源/ 成本/ 为/ 租户/ 索引/ 提供/ 了/ 隔离/ 性/ ./ 以上/ 文献/ 针对/ 索引/ 隔离/ 问题/ 给出/ 了/ 解决方案/ ,/ 但/ 都/ 没有/ 考虑/ 云/ 计算环境/ 的/ 多/ 租户/ 索引/ 结构/ ,/ 而/ 大量/ 的/ 多/ 租户/ 数据/ 需要/ 在/ 云中/ 管理/ ,/ 并/ 建立/ 可/ 扩展/ 、/ 支持/ 大量/ 并发/ 查询/ 的/ 索引/ 机制/ ./ 目前/ ,/ 根据/ 组织/ 方式/ 云中/ 的/ 索引/ 可/ 分成/ 两类/ :/ 集中式/ 结构/ 和/ P2P/ 结构/ ./ 集中式/ 的/ 索引/ 方式/ [/ 13/ -/ 14/ ]/ 以/ 一个/ 节点/ 作为/ 查询/ 入口/ ,/ 极易/ 造成/ 性能/ 瓶颈/ [/ 7/ ]/ ./ P2P/ [/ 15/ -/ 17/ ]/ 结构/ 的/ 索引/ 采用/ 节点/ 对/ 等/ 工作/ 模式/ 平衡/ 负载/ ,/ 为/ 解决/ 性能/ 瓶颈/ 问题/ 提供/ 了/ 一种/ 途径/ ,/ 而且/ 自/ 组织/ 的/ P2P/ 结构/ 允许/ 节点/ 自由/ 加入/ 与/ 离开/ ,/ 为/ 云中/ 多/ 租户/ 数据/ 索引/ 管理/ 提供/ 了/ 一种/ 理论/ 上/ 可/ 无限/ 扩展/ 的/ 组织/ 模型/ ./ 文献/ [/ 18/ -/ 19/ ]/ 基于/ P2P/ 结构/ 建立/ 了/ 可/ 扩展/ 和/ 高/ 吞吐量/ 的/ 索引/ 机制/ ,/ 为/ 云中/ 的/ 多/ 租户/ 索引/ 提供/ 了/ 借鉴/ ./ Wu/ 等/ 人/ [/ 18/ ]/ 提出/ 了/ CG/ -/ index/ (/ CloudGlobalindex/ )/ ,/ 即/ 所有/ 节点/ 组成/ 一个/ 覆盖/ 网络/ ,/ 每个/ 节点/ 上/ 建立/ 局部/ 索引/ 并/ 选择/ 索引/ 信息/ 发布/ 到/ 覆盖/ 网络/ 上/ ,/ 其/ 根据/ 查询/ 模式/ 自/ 适应/ 地/ 选择/ 可/ 发布/ 的/ B/ 树/ 节点/ ,/ 提高/ 了/ 查询/ 效率/ ./ Chen/ 等/ 人/ [/ 19/ ]/ 提出/ 了/ 一种/ 针对/ DaaS/ 的/ 云中/ 类/ 关系/ (/ DBMS/ -/ like/ )/ 模型/ 的/ 索引/ 机制/ ,/ 将/ 索引/ 保序/ 地/ 发布/ 到/ P2P/ 网络/ 中/ ,/ 以/ 支持/ 范围/ 查询/ 与/ 比较/ 操作/ ,/ 为/ 云中/ 关系/ 查询处理/ 的/ 索引/ 建立/ 提供/ 了/ 基础/ ./ 但是/ ,/ 在/ 多/ 租户/ 环境/ 中/ 直接/ 应用/ 这些/ 云/ 索引/ 技术/ 既/ 不能/ 提供/ 索引/ 隔离/ 的/ 功能/ ,/ 也/ 不能/ 满足/ 租户/ 数量/ 与/ 数据量/ 扩展/ 的/ 需求/ ./ 常见/ 的/ P2P/ 索引/ 协议/ 有/ CAN/ [/ 20/ ]/ 、/ BATON/ [/ 21/ ]/ 、/ [/ 22/ ]/ 、/ Chord/ [/ 9/ ]/ 等/ ./ 相比/ 其他/ P2P/ 索引/ 协议/ ,/ PastryChord/ 能以/ 较/ 低/ 路由表/ 存储/ 代价/ 提供/ 高效/ 的/ 查询/ 跳转/ 效率/ (/ O/ (/ logN/ )/ )/ ,/ 且/ 映射/ 结构/ 简单/ 、/ 易于/ 改造/ 与/ 维护/ ,/ 适用/ 于/ 多/ 租户/ 场景/ ./ 因此/ ,/ 本文/ 基于/ Chord/ 协议/ 建立/ 多/ 租户/ 索引/ 机制/ ./ 然而/ ,/ 直接/ 使用/ Chord/ 协议/ [/ 9/ ]/ 建立/ 索引/ 机制/ 无法/ 满足/ 多/ 租户/ 数据库/ 对/ 索引/ 的/ 特殊/ 需求/ :/ 首先/ ,/ 由于/ Chord/ 协议/ 采用/ 随机/ 方法/ 对/ 关键字/ 位置/ 及/ 节点/ 所/ 负责/ 的/ 标识符/ 空间/ 范围/ 进行/ 映射/ ,/ 无法/ 满足/ 多/ 租户/ 数据库/ 对/ 索引/ 在/ 节点/ 中/ 隔离/ 、/ 聚集/ 分布/ 的/ 需求/ ./ 隔离/ 分布/ 是/ 指/ 一个/ 租户/ 使用/ 索引/ 查询/ 时/ ,/ 只能/ 检索/ 到/ 自己/ 的/ 数据/ ,/ 而/ 随机/ 映射/ 的/ 索引/ 条目/ 使得/ 租户/ 在/ 查询/ 时/ ,/ 特别/ 是/ 在/ 范围/ 查询/ 时/ ,/ 租户/ 获得/ 自己/ 数据/ 的/ 同时/ 也/ 获得/ 了/ 其他/ 租户/ 的/ 数据/ ./ 聚集/ 分布/ 是/ 指/ 一个/ 租户/ 的/ 索引/ 与/ 数据/ 尽可能/ 分布/ 于/ 尽可能少/ 的/ 节点/ 中/ ,/ 从而/ 减少/ 跨/ 节点/ 查询/ 次数/ ,/ 而/ 随机/ 映射/ 方法/ 使得/ 一个/ 租户/ 的/ 索引/ 分布/ 于/ 较/ 多/ 节点/ ./ 其次/ ,/ 多/ 租户/ 索引/ 机制/ 需要/ 能/ 动态/ 地/ 扩展/ ./ 多/ 租户/ 数量/ 是/ 动态/ 增加/ 的/ ,/ 由于/ Chord/ 协议/ 标识符/ 空间/ 的/ 大小/ 初始化/ 后/ 不能/ 再/ 更改/ ,/ 新增/ 租户/ 映射/ 的/ 位置/ 会/ 与/ 原有/ 租户/ 产生/ 冲突/ ,/ 破坏/ 了/ 租户/ 间/ 的/ 隔离/ 性/ ./ 除/ 以上/ 特殊/ 需求/ 之外/ ,/ 与/ 单/ 租户/ 场景/ 相同/ ,/ 多/ 租户/ 数据库/ 也/ 需要/ 索引/ 在/ 标识符/ 空间/ 保序/ 地/ 映射/ 及/ 在/ 节点/ 间/ 均衡/ 地/ 分布/ ,/ 而/ Chord/ 协议/ [/ 9/ ]/ 并/ 不能/ 较/ 好/ 地/ 支持/ 该/ 需求/ ./ 因此/ 需对/ Chord/ 协议/ 进行/ 改进/ ,/ 使得/ 建立/ 的/ 多/ 租户/ 索引/ 在/ 支持/ 保序/ 、/ 均衡/ 分布/ 的/ 前提/ 下/ ,/ 实现/ 各/ 租户/ 索引/ 隔离/ 、/ 聚集地/ 分布/ ,/ 并/ 具有/ 可扩展性/ ./ 3/ 云/ 计算环境/ 下/ 的/ 多/ 租户/ 索引/ 框架/ Chord/ 协议/ [/ 9/ ]/ 可/ 提供/ 一种/ 能/ 在/ P2P/ 中/ 快速/ 定位/ 资源/ 的/ 方法/ ,/ 基本/ 思想/ 是/ 将/ 代表/ 资源/ 信息/ 的/ 关键字/ 和/ 服务器/ 节点/ 统一/ 映射/ 到/ 一个/ 标识符/ 空间/ ,/ 并/ 通过/ 标识符/ 空间/ 定位/ 资源/ 位置/ ./ Chord/ 采用/ SHA/ -/ 1/ [/ 23/ ]/ 将/ 资源/ 信息/ 及/ 节点/ 随机/ 映射/ 到/ 标识符/ 空间/ ./ 然而/ ,/ 随机/ 映射/ 的/ 方法/ 可能/ 将/ 不同/ 租户/ 的/ 索引/ 条目/ 映射/ 到/ 标识符/ 空间/ 的/ 相同/ 位置/ 且/ 不/ 保证/ 原有/ 条/ 目的/ 顺序/ ,/ 所以/ 不能/ 适用/ 于/ 多/ 租户/ 数据/ 索引/ 隔离/ 、/ 保序/ 的/ 场景/ ./ 因此/ 本文/ 提出/ 一种/ 通过/ 改进/ Chord/ 映射/ 方法/ 的/ 多/ 租户/ 索引/ 机制/ (/ Multi/ -/ tenantIndexingMechanismBasedonImprovedChordMappingApproach/ ,/ MIMC/ )/ 为/ 多/ 租户/ 提供/ 索引/ 管理/ 功能/ ./ MIMC/ 的/ 组织/ 结构/ 如图/ 1/ 所示/ :/ 多/ 租户/ 数据库/ 的/ 索引/ 分布/ 在/ 各个/ 局部/ 节点/ 中/ ,/ 且/ 索引/ 与其/ 指向/ 的/ 数据/ 放置/ 在/ 同一个/ 局部/ 节点/ ;/ 每个/ 局部/ 节点/ 维护/ 一个/ 路由表/ ,/ 并/ 利用/ B/ +/ 树/ 建立/ 本/ 节点/ 的/ 局部/ 索引/ ;/ 所有/ 节点/ 基于/ Chord/ 协议/ 形成/ 多/ 租户/ 数据/ 的/ 云中/ 索引/ 机制/ ;/ 在/ 查询/ 时/ ,/ 先/ 通过/ 路由表/ 找到/ 索引/ 条目/ 所在/ 节点/ ,/ 再/ 通过/ 局部/ 索引/ 得到/ 租户/ 数据/ ./ Page4/ 图/ 1/ 云中/ 的/ 多/ 租户/ 索引/ 机制/ 为/ 方便/ 描述/ ,/ 相关/ 定义/ 如下/ ./ 定义/ 1/ ./ 租户/ ./ 租用/ 多/ 租户/ 应用/ 的/ 组织/ 或/ 用户/ 称为/ 租户/ ./ 用/ tni/ 表示/ ,/ i/ 为/ 租户/ 编号/ ,/ 0/ </ i/ / I/ ,/ I/ 为/ 租户/ 数量/ ./ 定义/ 2/ ./ 数据/ 对象/ ./ 用于/ 描述/ tni/ 某一/ 业务/ 对象/ 的/ 一条/ 数据/ 记录/ 称为/ 数据/ 对象/ ,/ 表示/ 为/ rdj/ ./ 用于/ 描述/ 相同/ 业务/ 对象/ 的/ 数据/ 记录/ 集合/ 称为/ 数据/ 对象/ 集合/ ,/ 表示/ 为/ Dk/ =/ ∪/ {/ rdj/ }/ ,/ k/ 为/ 一个/ 租户/ 数据/ 对象/ 集合/ 的/ 编号/ ./ 定义/ 3/ ./ 多/ 租户/ 数据库/ ./ 存储/ 与/ 处理/ 租户/ 数据/ 的/ 系统/ 称为/ 多/ 租户/ 数据库/ ./ 多/ 租户/ 数据库/ 以/ 共享/ 的/ 方式/ 被/ 租户/ 使用/ ,/ 数据/ 对象/ 集合/ 以/ 共享/ 模式/ 的/ 方式/ 存储/ ,/ 通过/ 定制/ 可/ 满足/ 租户/ 对/ 模式/ 的/ 不同/ 需求/ ,/ 租户/ 通过/ 应用/ 访问/ 多/ 租户/ 数据库/ ./ 定义/ 4/ ./ 索引/ 条目/ ./ 一个/ 租户/ 的/ 索引/ 可/ 索引/ 基本/ 存储/ 元素/ 称为/ 索引/ 条目/ ./ 索引/ 条目/ 是/ 以/ 键值/ 对/ 形式/ 进行/ 管理/ 的/ ,/ 用/ er/ :/ 〈/ k/ ,/ v/ 〉/ 表示/ 一个/ 索引/ 条目/ ,/ r/ 是/ 索引/ 条/ 目的/ 标识/ ,/ k/ 表示/ 索引/ 列/ 的/ 属性/ 值/ ,/ v/ 是/ 索引/ 条目/ 指向/ 一个/ 或/ 多个/ 数据/ 对象/ 的/ 物理地址/ ./ 定义/ 5/ ./ 数据/ 对象/ 索引/ ./ 针对/ 一个/ 租户/ tni/ 数据/ 对象/ 集合/ 的/ 某/ 一/ 属性/ ,/ 为/ 加快/ 数据/ 对象/ 集合/ 查询/ 速度/ 而/ 建立/ 的/ 索引/ 条目/ 集合/ 称为/ 数据/ 对象/ 索引/ ,/ 表示/ 为/ / i/ ,/ j/ ./ 一个/ 数据/ 对象/ 集合/ 可/ 有/ 多个/ 数据/ 对象/ 索引/ ,/ 即/ 对于/ 一个/ 数据/ 对象/ 集合/ ,/ 可/ 根据/ 租户/ 的/ 需求/ 在/ 其/ 不同/ 属性/ 上/ 建立/ 若干个/ 数据/ 对象/ 索引/ ./ 数据/ 对象/ 索引/ 表示/ 为/ 为/ tni/ 建立/ 的/ 第/ j/ 个/ 数据/ 对象/ 索引/ ,/ j/ 以/ 自然数/ 编号/ ./ / i/ ,/ j/ 是/ 若干/ 索引/ 条目/ 组成/ 的/ 集合/ ,/ 即/ 定义/ 6/ ./ 租户/ 索引/ 集/ ./ 针对/ 一个/ 租户/ 建立/ 的/ 数据/ 对象/ 索引/ 集合/ 称为/ 租户/ 索引/ 集/ ./ tni/ 的/ 租户/ 索引/ 集/ 表示/ 为/ 数量/ ./ 多/ 租户/ 数据库/ 中/ 所有/ 的/ 租户/ 索引/ 集合/ 称为/ 索引/ 集/ ,/ 用/ II/ 表示/ ,/ 那么/ II/ =/ {/ ∪/ 定义/ 7/ ./ 标识符/ 空间/ (/ IdentifierSpace/ )/ ./ 标识符/ 空间/ 是/ 一致性/ 哈希/ 值/ [/ 23/ ]/ 的/ 范围/ ,/ 表示/ 为/ S/ ,/ S/ ∈/ {/ [/ 0/ ,/ 2m/ -/ 1/ ]/ |/ m/ 标识符/ 空间/ 的/ 位数/ }/ ./ S/ 的/ 大小/ 表示/ 为/ S/ ,/ 则/ S/ =/ 2m/ ./ 对于/ 任意/ 一个/ er/ ,/ 利用/ 映射函数/ F/ 可/ 将/ k/ 映射/ 到/ S/ 中/ ./ 设/ k/ 映射/ 到/ S/ 的/ 值/ 表示/ 为/ ks/ ,/ 即/ ks/ =/ F/ (/ k/ )/ ./ 通过/ 定义/ 映射函数/ 可/ 使/ 所有/ 的/ 索引/ 条目/ 与/ 局部/ 节点/ 通过/ 哈希/ 函数/ 都/ 映射/ 到/ S/ ,/ 从而/ 得到/ 局部/ 节点/ 与/ 所/ 负责管理/ 的/ 索引/ 条/ 目的/ 对应/ 关系/ ./ 所有/ 的/ 局部/ 节点/ 形成/ 一个/ 覆盖/ 网络/ ,/ 因此/ S/ 的/ 每个/ 值/ 都/ 被/ 分配/ 到/ 某个/ 局部/ 节点/ 中/ ,/ 那么/ 索引/ 条目/ 则/ 根据/ ks/ 的/ 值/ 分配/ 到/ 对应/ 的/ 局部/ 节点/ ./ 每个/ 局部/ 节点/ 负责/ 一部分/ 标识符/ 空间/ ,/ 且/ 所/ 负责/ 的/ 标识符/ 空间/ 不/ 重叠/ ./ 用/ Rh/ =/ [/ la/ ,/ lb/ )/ 表示/ 局部/ 节点/ nh/ 负责/ 标识符/ 空间/ 范围/ ,/ 那么/ S/ =/ {/ ∪/ Rh/ |/ nh/ ∈/ / Rg/ ./ la/ >/ Rh/ ./ lb/ 或/ Rh/ ./ la/ >/ Rg/ ./ lb/ ./ 局部/ 节点/ 只/ 对/ 落入/ 自己/ 负责/ 的/ 标识符/ 空间/ 的/ 索引/ 条目/ 建立/ 局部/ 索引/ ./ 定义/ 8/ ./ 路由表/ ./ 每个/ 节点/ 存储/ 一个/ 路由表/ ,/ 路由表/ 由/ 局部/ 节点/ 与其/ 所/ 负责/ 的/ 标识符/ 空间/ 范围/ 的/ 对应/ 关系/ 的/ 记录/ 组成/ ./ 对于/ nh/ ,/ 路由表/ 有/ m/ (/ 与/ 标识符/ 空间/ 的/ 位数/ 相同/ )/ 个/ 路由/ 条目/ ,/ 其/ 第/ i/ 个/ 路由/ 条目/ 为/ 〈/ xs/ ,/ nx/ 〉/ ,/ xs/ 是/ S/ 的/ 一个/ 位置/ 且/ xs/ =/ (/ la/ +/ 2i/ -/ 1/ )/ mod2m/ ,/ nx/ 是/ 负责/ xs/ 的/ 局部/ 节点/ ./ Page5/ 本文/ 对/ 索引/ 集/ II/ 的/ 索引/ 条目/ 统一/ 管理/ ./ 在/ 初始化/ 时/ ,/ 首先/ 在/ 云/ 计算/ 层/ 基于/ Chord/ 协议/ 组织/ 将/ 索引/ 条目/ 及/ 相关/ 数据/ 对象/ 集合/ 分布/ 到/ 各/ 局部/ 节点/ 中/ ;/ 其次/ 局部/ 节点/ 用/ B/ +/ 树/ 组织/ 所/ 负责/ 的/ 索引/ 条目/ ,/ 并/ 管理/ 路由表/ ./ 在/ 数据/ 查询/ 时/ ,/ 给定/ 查询/ k/ 值/ ,/ 通过/ F/ 计算/ ks/ ,/ 查找/ 路由表/ ,/ 可/ 找到/ 负责管理/ 任意/ er/ 的/ nh/ ,/ 并/ 在/ 局部/ 节点/ 得到/ v/ ,/ 从而/ 定位/ 所/ 需/ 数据/ ./ 本文/ 建立/ 的/ 支持/ P2P/ 多/ 租户/ 索引/ 机制/ 以/ 索引/ 条目/ 为/ 粒度/ 进行/ 管理/ ./ 首先/ ,/ 研究/ 索引/ 条目/ 在/ 局部/ 节点/ 中/ 的/ 分布/ 及/ 局部/ 的/ 组织/ 方式/ ./ 主要/ 通过/ 设计/ 租户/ 索引/ 条目/ 在/ S/ 的/ 映射函数/ 确定/ 索引/ 条目/ 在/ 节点/ 中/ 的/ 分布/ ,/ 使/ 租户/ 的/ 索引/ 条目/ 隔离/ 、/ 聚集/ 、/ 均衡/ 的/ 分布/ 与/ 存储/ ./ 其次/ ,/ 针对/ 新增/ 租户/ 与/ 索引/ 的/ 标识符/ 空间/ 耗尽/ 问题/ ,/ 本文/ 研究/ 了/ 索引/ 条目/ 动态/ 映射/ 方法/ ./ 采用/ 倍增/ S/ 的/ 方法/ ,/ 将/ 新/ 租户/ 的/ 索引/ 条目/ 映射/ 到/ 新增/ 的/ 空间/ 中/ 去/ ,/ 使/ 其/ 适应/ 租户/ 数量/ 与/ 索引/ 不断/ 增加/ 的/ 应用/ 场景/ ./ 4/ 索引/ 条/ 目的/ 组织/ 本文/ 利用/ 一个/ 统一/ 的/ 映射/ 方案/ 对/ 多/ 租户/ 数据库/ 中/ 所有/ 的/ 索引/ 条目/ 进行/ 组织/ ./ 对于/ 云中/ 的/ 多/ 租户/ 索引/ ,/ 需先/ 将/ 索引/ 条目/ 按照/ 一定/ 规则/ 分布/ 到/ 各/ 节点/ 中/ ,/ 图/ 2/ 标识符/ 空间/ 的/ 划分/ 现/ 给出/ 映射函数/ F/ :/ F/ (/ k/ )/ =/ STN/ ×/ (/ i/ -/ 1/ )/ +/ SIN/ ×/ (/ j/ -/ 1/ )/ +/ SIN/ ×/ (/ k/ -/ mini/ ,/ j/ )/ // (/ maxi/ ,/ j/ +/ 1/ -/ mini/ ,/ j/ )/ (/ 1/ )/ 式/ 中/ STN/ 是/ STN/ 的/ 空间/ 大小/ ,/ STN/ =/ S/ // MaxTN/ ,/ MaxTN/ 是/ 在/ S/ 中/ 可/ 提供/ 索引/ 管理/ 服务/ 的/ 租户/ 数量/ ./ 再/ 在/ 局部/ 节点/ 中/ 组织/ 存储/ 所/ 负责/ 的/ 索引/ 条目/ ./ 本/ 小节/ 首先/ 给出/ 索引/ 条目/ 在/ 标识符/ 空间/ S/ 中/ 具体/ 的/ 映射函数/ ,/ 此/ 函数/ 可/ 保证/ 索引/ 条/ 目的/ 顺序/ 不变/ 且/ 各/ 租户/ 索引/ 相互/ 隔离/ ;/ 其次/ 给出/ 各/ 节点/ 负责/ S/ 范围/ 的/ 分配/ 算法/ ,/ 此/ 算法/ 可/ 保证/ 一个/ 租户/ 的/ 索引/ 条目/ 分布/ 相对/ 聚集/ 且/ 各/ 节点/ 分配/ 索引/ 条/ 目的/ 数量/ 分布/ 均衡/ ;/ 最后/ 给出/ 索引/ 条目/ 在/ 局部/ 节点/ 的/ 组织/ 方法/ ,/ 该/ 方法/ 将/ 索引/ 条目/ 及其/ 所/ 索引/ 的/ 数据/ 存储/ 在/ 同/ 节点/ ,/ 提高/ 了/ 索引/ 效率/ ./ 4.1/ 索引/ 条目/ 在/ 标识符/ 空间/ 映射/ 在/ 基于/ Chord/ 多/ 租户/ 索引/ 机制/ 中/ ,/ 所有/ 索引/ 条目/ 都/ 映射/ 到/ 一个/ S/ 中/ ,/ 每个/ 索引/ 条目/ 在/ S/ 的/ 位置/ 是/ 通过/ 映射函数/ 给出/ 的/ ./ Chord/ 使用/ 的/ SHA/ -/ 1/ 哈希/ 函数/ 不能/ 满足/ 多/ 租户/ 索引/ 保序/ 、/ 隔离/ 的/ 映射/ ,/ 所以/ 重新/ 设计/ 索引/ 条/ 目的/ 映射函数/ ./ 本文/ 设计/ 映射函数/ F/ 的/ 思想/ 如图/ 2/ 所示/ ./ 首先/ ,/ 将/ 标识符/ 空间/ S/ 划分/ 为/ 若干/ 小/ 区域/ ,/ 每个/ 区域/ 分配/ 给/ 一个/ 租户/ 索引/ 集/ 使用/ ,/ 称为/ 租户/ 区域/ ,/ 表示/ 为/ STN/ ./ 其次/ ,/ 将/ 每个/ 租户/ 区域/ 进一步/ 划分/ 为/ 若干/ 更/ 小/ 的/ 区域/ ,/ 称为/ 数据/ 对象/ 索引/ 区域/ ,/ 表示/ 为/ SIN/ ./ 一个/ SIN/ 分配/ 给/ 一个/ 数据/ 对象/ 索引/ 使用/ ./ 再次/ ,/ 将/ 属于/ 一个/ 数据/ 对象/ 索引/ 的/ 索引/ 条目/ 按照/ 顺序/ 依次/ 映射/ 到/ SIN/ 的/ 位置/ 中/ ./ SIN/ 是/ SIN/ 空间/ 大小/ ,/ SIN/ =/ STN/ // MaxIN/ ,/ MaxIN/ 是/ 系统/ 为/ 每个/ 租户/ 可/ 建立/ 数据/ 对象/ 索引/ 的/ 最大数/ ./ MaxTN/ 、/ MaxIN/ 与/ S/ 值/ 的/ 详细/ 设置/ 见/ 第/ 6/ 节/ ./ 由于/ k/ 是/ 某/ 一/ 数据/ 对象/ 的/ 属性/ 值/ ,/ 那么/ 可知/ 该/ 数据/ 对象/ 所/ 定义/ 的/ 数据类型/ 的/ 取值/ 范围/ ,/ 函数/ (/ 1/ )/ 中/ mini/ ,/ j/ 与/ maxi/ ,/ j/ 是/ k/ 所属/ 数据类型/ 可/ 取值/ 范围/ 的/ 最小值/ 与/ 最大值/ ./ 比/ Page6/ 如/ ,/ 若/ k/ 的/ 数据类型/ 为/ MYSQL/ 的/ BigInt/ ,/ mini/ ,/ j/ 与/ maxi/ ,/ j/ 则/ 分别/ 为/ 0/ 与/ 264/ -/ 1/ ./ 函数/ (/ 1/ )/ 给出/ k/ 是/ 数值/ 型/ 时/ 的/ 映射函数/ ,/ k/ 也/ 可以/ 是/ 字符串/ 型/ 、/ 日期/ 型/ 、/ 多/ 键值/ 索引/ 等/ 多种/ 数据类型/ ./ 若为/ 字符串/ 型/ 可/ 利用/ 可变/ 长度/ 文本/ 串/ 哈希/ [/ 24/ ]/ 进行/ 映射/ ,/ 若需/ 支持/ 范围/ 查询/ 则/ 使用/ 位置/ 敏感/ 哈希/ [/ 25/ ]/ 映射/ ,/ k/ 如果/ 是/ 多/ 键值/ 索引/ ,/ 可以/ 利用/ Z/ -/ Curve/ [/ 19/ ,/ 26/ ]/ 或者/ Hilbert/ -/ Curve/ [/ 27/ ]/ 的/ 方法/ 将/ 多维/ 键值/ 映射/ 到/ 一/ 维空间/ ./ 由于/ 所有/ 数据/ 对象/ 索引/ 都/ 在/ 相同/ 大小/ 的/ SIN/ 中/ 进行/ 映射/ ,/ 对于/ 取值/ 范围/ 较大/ 的/ 数据类型/ ,/ 即当/ maxi/ ,/ j/ -/ mini/ ,/ j/ >/ SIN/ 时/ ,/ 不同/ k/ 值/ 的/ 索引/ 条目/ 可能/ 映射/ 到/ S/ 中/ 的/ 相同/ 位置/ ,/ 从而/ 产生/ 哈希/ 冲突/ ./ 可/ 采用/ 链/ 地址/ 法/ 解决/ 冲突/ ,/ 链/ 地址/ 的/ 数据结构/ 可以/ 是/ 线性/ 列表/ 或者/ 时间/ 复杂度/ 为/ O/ (/ logn/ )/ 的/ 自动/ 平衡/ 树/ [/ 28/ ]/ ./ 函数/ (/ 1/ )/ 应/ 能/ 保证/ 索引/ 条/ 目的/ 位置/ 性/ 与/ 隔离/ 性/ ./ 以下/ 给出/ 相关/ 定义/ ./ 定义/ 9/ ./ 位置/ 性/ ./ 位置/ 性是/ 指/ 属于/ 同一/ 数据/ 对象/ 索引/ 保持/ 原有/ 顺序/ ,/ 即/ / ea/ :/ 〈/ ka/ ,/ va/ 〉/ ∈/ / i/ ,/ j/ ,/ / eb/ :/ 〈/ kb/ ,/ vb/ 〉/ ∈/ / i/ ,/ j/ ,/ ifka/ </ kb/ / F/ (/ ka/ )/ </ F/ (/ kb/ )/ ./ 定义/ 10/ ./ 隔离/ 性/ ./ 隔离/ 性是/ 指/ 属于/ 不同/ er/ 不会/ 映射/ 到/ S/ 中/ 的/ 同一个/ 位置/ ./ 也/ 可/ 表述/ 为/ 一个/ 数据/ 对象/ 索引/ 在/ 空间/ S/ 中/ 的/ 分布/ 有着/ 自己/ 独立/ 的/ 空间/ ,/ 与/ 其他/ 数据/ 对象/ 索引/ 的/ 映射/ 空间/ 相互/ 隔离/ ./ 形式化/ 表示/ 为/ / ea/ :/ 〈/ ka/ ,/ va/ 〉/ ∈/ / i/ ,/ j/ ,/ / eb/ :/ 〈/ kb/ ,/ vb/ 〉/ ∈/ / k/ ,/ l/ ,/ if/ / i/ ,/ j/ ≠/ / k/ ,/ l/ / F/ (/ ka/ )/ ≠/ F/ (/ kb/ )/ ./ 定理/ 1/ ./ 映射函数/ (/ 1/ )/ 具有/ 位置/ 性/ 与/ 隔离/ 性/ ./ 证明/ ./ 根据/ 函数/ (/ 1/ )/ ,/ 在/ 同一个/ SIN/ ,/ 映射函数/ 是/ 单调/ 递增/ 的/ ,/ 所以/ 保证/ 了/ er/ 的/ 位置/ 性/ ./ 对于/ 隔离/ 性/ ,/ 当/ i/ =/ k/ 时/ ,/ 不失/ 一般性/ ,/ 设/ l/ >/ j/ ,/ 推出/ F/ (/ kb/ )/ -/ F/ (/ ka/ )/ =/ (/ l/ -/ j/ )/ ×/ SIN/ +/ SIN/ ×/ SIN/ ×/ SIN/ -/ SIN/ ×/ 当/ i/ ≠/ k/ 时/ ,/ 不失/ 一般性/ ,/ 设/ k/ >/ i/ ,/ 推出/ F/ (/ kb/ )/ -/ F/ (/ ka/ )/ =/ (/ k/ -/ i/ )/ STN/ +/ (/ l/ -/ j/ )/ SIN/ +/ SIN/ ×/ kb/ -/ maxb/ (/ maxb/ +/ 1/ -/ minb/ )/ -/ SIN/ ×/ STN/ -/ (/ MaxTN/ -/ 1/ )/ SIN/ -/ SIN/ ×/ SIN/ -/ SIN/ ×/ 所以/ F/ (/ kb/ )/ ≠/ F/ (/ ka/ )/ ./ 每个/ 户/ 可以/ 独立/ 地/ 建立/ 与/ 定制/ 数据/ 对象/ 索引/ ,/ 不/ 影响/ 其他/ 的/ 租户/ 使用/ ,/ 从而/ 保证/ 了/ 数据/ 对象/ 索引/ 的/ 隔离/ ./ 同时/ ,/ 函数/ (/ 1/ )/ 的/ 位置/ 性可/ 实现/ 多/ 租户/ 数据/ 的/ 连接/ 查询/ 、/ 范围/ 查询/ 等/ 带有/ 比较/ 操作/ 的/ 查询处理/ ./ 新增/ 索引/ 条目/ 可/ 利用/ 函数/ (/ 1/ )/ 动态/ 插入/ ,/ 并/ 保持/ 位置/ 性/ 与/ 隔离/ 性/ ./ 4.2/ 索引/ 条目/ 在/ 局部/ 节点/ 的/ 分布/ 多/ 租户/ 数据库/ 的/ 索引/ 条目/ 及/ 数据/ 对象/ 需/ 分布/ 到/ 各/ 局部/ 节点/ ,/ 并/ 在/ 局部/ 节点/ 存储/ 租户/ 数据/ 且/ 建立/ 局部/ 索引/ ./ 首先/ ,/ 根据/ 一定/ 规则/ 确定/ 每个/ 局部/ 节点/ 所/ 负责/ 的/ 索引/ 条目/ ,/ 该/ 内容/ 将/ 在/ 本/ 小节/ 论述/ ,/ 其次/ ,/ 每个/ 局部/ 节点/ 先/ 存储/ 所/ 负责/ 的/ 索引/ 条目/ 对应/ 的/ 数据/ 对象/ 集合/ ,/ 然后/ 建立/ B/ +/ 树/ 组织/ 管理所/ 负责/ 的/ 索引/ 条目/ ,/ 此/ 内容/ 在/ 4.3/ 节/ 论述/ ./ 根据/ Chord/ 协议/ ,/ 一个/ 局部/ 节点/ 通过/ 哈希/ 函数/ 随机/ 的/ 分配/ 到/ 一部分/ 标识符/ 空间/ ,/ 通过/ 哈希/ 索引/ 函数/ 落入/ 此/ 空间/ 的/ 索引/ 条目/ 都/ 被/ 该/ 节点/ 存储/ 与/ 管理/ [/ 9/ ]/ ./ 然而/ 随机/ 分配/ 局部/ 节点/ 所/ 负责/ 的/ 标识符/ 空间/ 范围/ 不能/ 适应/ 多/ 租户/ 索引/ 的/ 应用/ 场景/ ./ 首先/ ,/ 随机/ 分配/ 会/ 导致/ 索引/ 条目/ 在/ 节点/ 中/ 分布/ 不/ 均衡/ ./ 索引/ 条目/ 在/ 节点/ 中/ 均衡/ 分布/ 是/ P2P/ 结构/ 高效/ 查询/ 的/ 关键/ ./ 然而/ ,/ 映射/ 到/ 标识符/ 空间/ 的/ 数据库/ 索引/ 并/ 不是/ 均匀分布/ 的/ [/ 29/ -/ 30/ ]/ ./ 特别/ 是/ 在/ 多/ 租户/ 数据库/ 中/ ,/ 由于/ 不同/ 数据/ 对象/ 索引/ 所/ 描述/ 的/ 数据/ 对象/ 集合/ 的/ 数据量/ 大小/ 及/ 属性/ 值/ 分布/ 是/ 不同/ 的/ ,/ 所以/ 其/ 包含/ 的/ 索引/ 条目/ 数量/ 也/ 不/ 相同/ ./ 采用/ Chord/ 的/ 方式/ 确定/ 各/ 节点/ 负责/ 的/ 标识符/ 空间/ 范围/ ,/ 将/ 导致/ 数据分布/ 严重/ 不均/ ./ 其次/ ,/ 随机化/ 分配/ 导致/ 一个/ 租户/ 的/ 索引/ 分布/ 在/ 多个/ 节点/ 中/ ,/ 增加/ 查询/ 时/ 节点/ 间/ 数据传输/ 的/ 成本/ ./ 属于/ 一个/ 租户/ 的/ 索引/ 条目/ 应/ 聚集地/ 分布/ ,/ 即/ 分配/ 到/ 尽可能少/ 且/ 相邻/ 的/ 节点/ 上/ ./ 因此/ ,/ 需要/ 设计/ 标识符/ 空间/ 在/ 节点/ 中/ 的/ 分配/ 方案/ ,/ 使/ 索引/ 条目/ 在/ 节点/ 中/ 均衡/ 、/ 聚集地/ 分布/ ./ 不同于/ Chord/ 通过/ 哈希/ IP地址/ 得到/ 局部/ 节点/ 所/ 负责/ 的/ 标识符/ 空间/ 的/ 起始值/ 与/ 结束/ 值/ ,/ 本文/ 通过/ 计算/ 索引/ 条目/ 数量/ 的/ 方法/ 得到/ 局部/ 节点/ nh/ 应/ 负责/ 的/ 标识符/ 空间/ Rh/ =/ [/ la/ ,/ lb/ )/ ./ 为/ 保证/ 索引/ 条目/ 在/ 各节/ Page7/ 点/ 分布/ 数量/ 的/ 均衡化/ ,/ 在/ 索引/ 条目/ 初始/ 分配/ 时/ ,/ 计算/ 每个/ 节点/ 应/ 分配/ 的/ 索引/ 条目/ 数量/ 的/ 平均值/ p/ 照/ 各/ 索引/ 条/ 目的/ ks/ 大小/ 依次/ 分配/ 到/ 各个/ 节点/ ,/ 使/ 每个/ 局部/ 节点/ 负责/ 的/ 索引/ 条目/ 数量/ 为/ pS/ 在/ 节点/ 中/ 的/ 分配/ 方法/ ./ 算法/ 1/ ./ 标识符/ 空间/ 在/ 每个/ 节点/ 中/ 的/ 分配/ ./ 输入/ :/ II/ ,/ II/ 中/ 索引/ 条/ 目的/ 数量/ II/ ,/ 局部/ 节点/ 数量/ N/ 输出/ :/ 每个/ 局部/ 节点/ 负责/ 的/ 标识符/ 空间/ 的/ 范围/ R1/ ./ Data/ :/ acount/ ←/ 0/ ,/ h/ ←/ 0/ ,/ LL/ [/ 0/ ]/ ←/ 0/ ,/ p2/ ./ FOReach/ / i/ ,/ j/ ∈/ IIdo3/ ./ SORTerin/ / i/ ,/ jorderbyer/ ./ kASC/ // // 按照/ 键值/ 升序/ 4/ ./ FOReacher/ ∈/ / i/ ,/ jdo5/ ./ acount/ ++/ 6/ ./ IFacountmodp7/ ./ LL/ [/ h/ ++/ ]/ ←/ F/ (/ er/ ./ k/ )/ // // 获得/ 每个/ 节点/ 的/ 起始值/ 8/ ./ ENDFOR9/ ./ ENDFOR10/ ./ FORjfrom0toN/ -/ 111/ ./ R/ [/ j/ ]/ ←/ [/ LL/ [/ j/ ]/ ,/ LL/ [/ j/ +/ 1/ ]/ )/ // // 节点/ nj/ 负责/ 的/ 空间/ 范围/ 12/ ./ ENDFOR13/ ./ RETURNR/ 算法/ 1/ 输入/ 索引/ 集/ II/ ,/ 返回/ 每个/ 局部/ 节点/ 负责/ 的/ 标识符/ 空间/ 的/ 范围/ R/ ./ 对于/ 局部/ 节点/ ni/ ,/ 其所/ 负责/ 的/ 标识符/ 空间/ 为/ R/ [/ i/ ]/ =/ [/ LL/ [/ i/ ]/ ,/ LL/ [/ i/ +/ 1/ ]/ )/ ,/ 所有/ 映射/ 到/ R/ [/ i/ ]/ 的/ 索引/ 条目/ 都/ 由/ ni/ 负责/ 建立/ 局部/ 索引/ ./ 例如/ ,/ 共有/ 索引/ 条目/ 100/ 条及/ 10/ 个/ 节点/ ,/ 则/ 每个/ 节点/ 分配/ 的/ 索引/ 条目/ 数量/ 为/ 10/ ,/ 那么/ 节点/ n1/ 所/ 负责/ 的/ 标识符/ 空间/ R/ [/ 1/ ]/ =/ [/ F/ (/ e10/ ./ k/ )/ ,/ F/ (/ e19/ ./ k/ )/ )/ ./ 算法/ 1/ 具有/ 索引/ 条目/ 聚集/ 分布/ 的/ 特点/ ,/ 即可/ 将/ 一个/ 租户/ 的/ 索引/ 条目/ 分布/ 到/ 尽可能少/ 的/ 局部/ 节点/ 中/ ,/ 从而/ 可/ 减少/ 查询/ 时/ 数据/ 的/ 传输/ 成本/ ./ 在/ 一般/ 情况/ 下/ ,/ 一个/ 租户/ 的/ 索引/ 条目/ 数量/ 要/ 小于/ 局部/ 节点/ 容量/ -/ ,/ 所以/ 一个/ 租户/ 的/ 索引/ 条目/ 会/ 分配/ 到/ 一个/ 或/ 两个/ p/ 局部/ 节点/ ./ 当/ 数据/ 对象/ 的/ 索引/ 条目/ 数量/ 大于/ 局部/ 节点/ 容量/ 时/ ,/ 分布/ 到/ 局部/ 节点/ 的/ 数量/ 仍能/ 接近/ 理想/ 最佳/ 节点/ 数量/ ,/ 用/ OPT/ (/ optimalsolution/ )/ 表示/ 该/ 数量/ ,/ 若/ 每个/ 局部/ 节点/ 管理/ 的/ 索引/ 条目/ 数量/ 为/ pOPT/ =/ |/ / i/ |/ p/ 点数/ 目的/ 限制/ ./ 定理/ 2/ ./ 算法/ 1/ 保证/ 任意/ 租户/ tni/ 的/ 索引/ 条目/ 分布/ 到/ 局部/ 节点/ 的/ 数量/ NA1/ 小于/ 最优/ 值加/ 1/ ,/ 即/ NA1/ / OPT/ +/ 1/ ./ 证明/ ./ 对于/ 租户/ tni/ 的/ 为/ |/ / i/ |/ ./ 因/ 函数/ (/ 1/ )/ 保证/ 属于/ 一个/ 租户/ 的/ 索引/ 条目/ 在/ 标识符/ 的/ 空间/ 分布/ 是/ 连续/ 的/ ,/ 所以/ 算法/ 1/ 在/ 分配/ 同一/ 租户/ 的/ 索引/ 条目/ 时/ ,/ 会/ 连续/ 分配/ 到/ 若干个/ 局部/ 节点/ ./ 设/ na/ 、/ nb/ 分别/ 为部/ 节点/ 与/ 最后/ 一个/ 局部/ 节点/ ,/ 设/ Ne/ / i/ 索引/ 条/ 目的/ 数量/ ,/ 那么/ Ne/ / i/ 索引/ 条目/ 分配/ 到/ 的/ 一个/ 中间/ 局部/ 节点/ ,/ 即/ f/ ∈/ (/ a/ ,/ b/ )/ ./ 那么/ nf/ 只会/ 分配/ 到/ 为/ 中间/ 局部/ 节点/ nf/ 的/ 数量/ ,/ 则/ Nf/ =/ NA1/ -/ 2/ ./ 可得/ Nea/ +/ Ne/ |/ / i/ -/ |/ / imodp2/ / OPT/ +/ 1/ ./ 在/ 应用/ 时/ ,/ 分配/ 算法/ 还/ 可/ 根据/ 实际/ 需要/ 做/ 一些/ 调整/ ./ 首先/ ,/ 算法/ 1/ 假设/ 各个/ 局部/ 节点/ 的/ 存储/ 能力/ 是/ 同构/ 的/ ./ 但/ 在/ 云/ 计算环境/ 中/ ,/ 一般/ 局部/ 节点/ 能力/ 是/ 异构/ 的/ ./ 算法/ 1/ 中/ 可/ 对/ 变量/ p/ 引/ 条目/ 匹配/ 每个/ 局部/ 节点/ 的/ 存储/ 能力/ ./ 其次/ ,/ 算法/ 1/ 假设/ 索引/ 条目/ 使用/ 频率/ 是/ 相同/ 的/ ,/ 因此/ 以/ 索引/ 条/ 目的/ 数量/ 作为/ 参考值/ ./ 当/ 索引/ 条/ 目的/ 使用/ 频率/ 不/ 同时/ ,/ 可/ 给/ 每个/ 索引/ 条目/ 加上/ 访问/ 频率/ 的/ 权重/ ./ 算法/ 1/ 第/ 6/ 步使/ 分配/ 到/ 每个/ 局部/ 节点/ 的/ 索引/ 条目/ 都/ 是/ 均值/ p/ 索引/ 机制/ 初始化/ 使用/ ./ 当/ 索引/ 实例/ 运行/ 后/ ,/ 可/ 利用/ 分裂/ 与/ 合并/ 局部/ 节点/ 的/ 方法/ [/ 31/ -/ 32/ ]/ 对/ 各/ 局部/ 节点/ 的/ 索引/ 条/ 目的/ 数目/ 进行/ 动态/ 调整/ ./ 对于/ 各/ 局部/ 节点/ 路由表/ 的/ 维护/ 方法/ ,/ MIMC/ 仍然/ 使用/ Chord/ 协议/ [/ 9/ ]/ 维护/ ./ 至此/ 各/ 局部/ 节点/ 得到/ 了/ 自己/ 所/ 负责管理/ 的/ 索引/ 条目/ ,/ 并/ 组成/ 了/ 一个/ Chord/ 网络/ ./ 下/ 一/ 小节/ 将/ 介绍/ 各/ 局部/ 节点/ 的/ 本地/ 索引/ 管理/ ./ 4.3/ 局部/ 节点/ 的/ 索引/ 组织/ 本/ 小节/ 给出/ 局部/ 节点/ 的/ 索引/ 组织/ 策略/ ,/ 策略/ 保证/ 索引/ 与/ 相关/ 数据/ 存储/ 在/ 相同/ 节点/ 并/ 利用/ B/ +/ 树/ 组织/ 索引/ 条目/ ./ 在/ 上/ 一/ 小节/ 中/ ,/ 通过/ 算法/ 1/ 可/ 得到/ 每个/ 局部/ 节点/ 所/ 负责/ 的/ 标识符/ 空间/ 范围/ ,/ 因此/ 局部/ 节点/ 需/ 组织/ 管理/ 映射/ 到/ 其/ 所/ 负责/ 范围/ 的/ 索引/ 条目/ ./ 局部/ 节点/ 的/ 索引/ 组织/ 策略/ 分为/ 以下/ 两步/ 完成/ :/ 首先/ ,/ 将/ 局部/ 节点/ nh/ 负责/ 索引/ 条目/ 所/ 涉及/ 的/ 数据/ 对象/ 集合/ 存储/ 到/ 该/ nh/ ./ 对于/ nh/ 所/ 负责/ 的/ 每/ 一个/ 索引/ 条目/ er/ ,/ 获取/ er/ 所属/ 的/ 数据/ 对象/ 集合/ Dk/ ,/ 并/ 在/ nh/ 存储/ Dk/ ./ 不同/ 租户/ 的/ 数据/ 对象/ 集合/ 采用/ 共享/ 模式/ 的/ 方式/ 存储/ 到/ 宽表中/ [/ 1/ ]/ 或者/ 文档/ 数据库/ [/ 33/ ]/ ./ Page8/ 其次/ ,/ 令/ 每个/ 索引/ 条/ 目的/ v/ 指向/ 涉及/ 数据/ 对象/ 的/ 物理/ 存储/ 地址/ ,/ 并/ 将/ 索引/ 条目/ 加入/ 到/ B/ +/ 树/ 进行/ 存储/ ./ 在/ 局部/ 节点/ 上/ ,/ 本文/ 利用/ 一个/ B/ +/ 树/ 管理所/ 负责/ 的/ 所有/ 索引/ 条目/ ./ 局部/ 节点/ 先/ 将/ 每个/ 索引/ 条目/ 变换/ 为/ 〈/ ks/ ,/ v/ 〉/ ,/ 再/ 对/ 索引/ 条目/ 建立/ 关于/ ks/ 的/ B/ +/ 树/ 索引/ ./ 局部/ 节点/ 建立/ 索引/ 组织/ 的/ 具体步骤/ 在/ 算法/ 2/ 给出/ ./ 设/ EEi/ 为/ 局部/ 节点/ ni/ 所应/ 负责管理/ 的/ 索引/ 条目/ 集合/ ,/ 即/ EEi/ =/ {/ er/ |/ er/ ./ ks/ ∈/ Ri/ }/ ./ 算法/ 2/ ./ 局部/ 节点/ 建立/ 索引/ ./ 输入/ :/ ni/ 所应/ 负责管理/ 的/ 索引/ 条目/ 集合/ EEi/ 输出/ :/ B/ +/ 树/ 索引/ 1/ ./ Foreacher/ ∈/ EEi2/ ./ Di/ ←/ getDataObject/ (/ er/ )/ 3/ ./ IFDi/ 尚未/ 存储/ 在/ 本/ 局部/ 节点/ 4/ ./ 在/ 本/ 局部/ 节点/ 存储/ Di5/ ./ ENDIF6/ ./ ks/ ←/ Function/ (/ 1/ )/ (/ er/ ./ k/ )/ 7/ ./ er/ ./ v/ 指向/ 数据/ 对象/ 的/ 物理/ 节点/ 8/ ./ 以/ ks/ 为/ 键值/ 将/ er/ 插入/ B/ +/ 树/ 9/ ./ ENDFOR/ 不同于/ 为/ 每个/ 租户/ 分别/ 建立/ 索引/ 实例/ [/ 12/ ]/ 的/ 情况/ ,/ 算法/ 2/ 只/ 维护/ 一个/ B/ +/ 树/ 即可/ 实现/ 对/ 多个/ 数据/ 对象/ 索引/ 的/ 管理/ ,/ 从而/ 节省/ 了/ 缓存/ 资源/ ,/ 降低/ 了/ 管理/ 的/ 复杂度/ ./ 并且/ 算法/ 2/ 将/ 索引/ 条目/ 与其/ 指向/ 的/ 数据/ 存储/ 到/ 相同/ 的/ 局部/ 节点/ ,/ 得到/ 索引/ 条目/ 即可/ 获得/ 所/ 需/ 数据/ ,/ 提高/ 了/ 查询/ 速度/ ./ 算法/ 2/ 可/ 减少/ 多/ 租户/ 数据/ 存储/ 的/ 冗余/ 信息/ ./ 文献/ [/ 1/ ,/ 4/ ,/ 6/ ]/ 提出/ 的/ 多/ 租户/ 数据/ 存储/ 模式/ 中/ 每个/ 元组/ 都/ 需要/ 存储/ 租户/ ID/ 与/ 数据/ 对象/ 集合/ ID/ 以/ 标识/ 该/ 数据/ 所属/ 租户/ 及/ 关系/ ,/ 以/ 对/ 元组/ 的/ 所属/ 租户/ 加以/ 区分/ ./ 而/ 算法/ 2/ 可/ 在/ 租户/ 数据/ 对象/ 集合/ 的/ 主/ 关键字/ 上/ 建立/ 索引/ ,/ 即/ 主键/ 索引/ ,/ 利用/ 主键/ 索引/ 即可/ 提供/ 租户/ 数据/ 定位/ 及/ 全表/ 扫描/ 功能/ ,/ 使得/ 租户/ 数据/ 存储/ 中/ 不再/ 需要/ 存储/ 租户/ ID/ 及/ 数据/ 对象/ 集合/ ID/ ,/ 从而/ 减少/ 了/ 多/ 租户/ 数据/ 存储/ 的/ 冗余/ 信息/ ./ 本/ 小节/ 通过/ 对/ 索引/ 条目/ 在/ 对/ 等/ 节点/ 上/ 的/ 组织/ ,/ 建立/ 起/ 一个多/ 租户/ 索引/ 机制/ ./ 该/ 机制/ 允许/ 在/ 任意/ 局部/ 节点/ 发起/ 租户/ 查询/ 请求/ Q/ ,/ Q/ 的/ 查询/ 步骤/ 如下/ :/ (/ 1/ )/ 局部/ 节点/ 解析/ Q/ 得到/ 所/ 需/ 查询/ 数据/ 的/ k/ ,/ 并/ 利用/ 函数/ (/ 1/ )/ 得到/ ks/ ;/ (/ 2/ )/ 通过/ 路由表/ 得到/ ks/ 对应/ 的/ 目标/ 节点/ ,/ 并/ 将/ Q/ 发送到/ 目标/ 节点/ ;/ (/ 3/ )/ 通过/ Chord/ 路由/ 协议/ ,/ Q/ 最终/ 会/ 路由/ 到/ 租户/ 数据/ 所在/ 节点/ ,/ 并/ 在/ 数据/ 所在/ 节点/ 进行/ 租户/ 数据/ 的/ 查询处理/ ./ 5/ 多/ 租户/ 索引/ 机制/ 的/ 动态/ 管理/ 在/ 多/ 租户/ 索引/ 机制/ 动态/ 运行/ 过程/ 中/ ,/ 租户/ 数量/ 与/ 租户/ 索引/ 是/ 不断/ 增长/ 的/ ./ 平台/ 中/ 随时/ 都/ 有/ 新/ 的/ 租户/ 加入/ 或者/ 新/ 的/ 索引/ 建立/ ,/ 因此/ 需要/ 为/ 新/ 加入/ 的/ 租户/ 或/ 索引/ 动态/ 地/ 分配/ 标识符/ 空间/ ./ 如/ 4.1/ 节/ 所述/ ,/ 在/ 索引/ 标识符/ 空间/ 映射/ 初始化/ 时/ ,/ 会/ 预留/ 若干/ 租户/ 区域/ (/ 最大/ 为/ MaxTN/ )/ ,/ 每个/ 租户/ 也/ 预留/ 了/ 若干/ 数据/ 对象/ 的/ 索引/ 区域/ (/ 最大/ 为/ MaxIN/ )/ ,/ 以备/ 索引/ 的/ 新增/ ./ 然而/ ,/ 当多/ 租户/ 数据库/ 新增/ 租户/ tni/ 的/ i/ >/ MaxTN/ 时/ ,/ 则/ 没有/ 新/ 的/ 租户/ 区域/ 可/ 供/ 租户/ 使用/ ;/ 当/ 租户/ tni/ 新建/ 数据/ 对象/ 索引/ 对象/ 索引/ 区域/ 可/ 供/ 数据/ 对象/ 索引/ 使用/ ./ 针对/ 此/ 问题/ ,/ 可以/ 通过/ 在/ 系统/ 初始化/ 时/ 预留/ 足够/ 数量/ 的/ 租户/ 区域/ 或者/ 数据/ 对象/ 索引/ 区域/ 的/ 方法/ 来/ 解决/ ,/ 然而/ 预留/ 的/ 空间/ 过/ 大会/ 增加/ B/ +/ 树/ 的/ 存储空间/ ./ 本文/ 采用/ 对/ 标识符/ 空间/ 进行/ 逐步/ 扩展/ 的/ 方法/ 解决/ 此/ 问题/ ,/ 扩大/ 后/ 的/ 标识符/ 空间/ 可/ 成倍增加/ 多/ 租户/ 数据库/ 可/ 管理/ 的/ 租户/ 数量/ 及/ 数据/ 对象/ 的/ 索引/ 数量/ ./ 对/ 标识符/ 空间/ S/ 进行/ 扩展/ ,/ 应/ 尽可能/ 地/ 减少/ 对/ 原有/ 索引/ 机制/ 使用/ 的/ 影响/ ./ 首先/ ,/ 不能/ 影响/ 原有/ 索引/ 映射/ 的/ 位置/ 性/ 与/ 隔离/ 性/ ./ 其次/ ,/ 索引/ 条目/ 已经/ 分配/ 到/ 局部/ 节点/ ,/ 新/ 形成/ 的/ 标识符/ 空间/ 在/ 局部/ 节点/ 中/ 的/ 分配/ ,/ 不应/ 使/ 局部/ 节点/ 所/ 负责/ 的/ 索引/ 条目/ 有过/ 大/ 的/ 变动/ ,/ 导致/ 大量/ 索引/ 及/ 相关/ 数据/ 迁移/ ./ 再次/ ,/ 在/ 动态/ 的/ 标识符/ 空间/ 扩展/ 中不应/ 影响/ 运行/ 中/ 的/ 索引/ 功能/ ,/ 通过/ 维护/ 局部/ 节点/ 路由表/ 保证/ Chord/ 路由/ 寻址/ 的/ 正常/ 运行/ ./ 根据/ 以上/ 要求/ ,/ 5.1/ 节/ 与/ 5.2/ 节/ 分别/ 给出/ 新增/ 租户/ 及/ 新增/ 数据/ 对象/ 索引/ S/ 的/ 扩展/ 方法/ ./ 5.1/ 新增/ 租户/ 的/ 标识符/ 空间/ 管理/ 采用/ 动态/ 扩展/ 标识符/ 空间/ 的/ 方法/ 来/ 处理/ 租户/ 区域/ 分配/ 完毕/ 的/ 问题/ ./ 当前/ 标识符/ 空间/ 可/ 管理/ 租户/ 数量/ 为/ MaxTN/ ,/ 当新/ 分配/ 租户/ tni/ 的/ 序号/ i/ >/ MaxTN/ 时/ ,/ 触发/ 索引/ 机制/ 的/ 标识符/ 空间/ 扩展/ 指令/ ./ 扩展/ 标识符/ 空间/ 的/ 方法/ 是/ 将/ 原有/ 标识符/ 空间/ 的/ 空间/ 增加一倍/ ,/ 即/ S/ =/ 2S/ ,/ 如图/ 3/ ./ 因此/ ,/ 索引/ 机制/ 可/ 管理/ 的/ 租户/ 数量/ 为/ MaxTN/ =/ 2MaxTN/ ./ 新增/ 数据/ 对象/ 索引/ 的/ 索引/ 条目/ 仍然/ 可用/ 函数/ (/ 1/ )/ 在/ 标识符/ 空间/ S/ 中/ 映射/ ./ 算法/ 3/ 给出/ 租户/ 区域/ 分配/ 完毕/ 时/ 新增/ 租户/ 的/ 具体/ 算法/ ./ Page9/ 图/ 3/ 新增/ 租户/ 的/ 标识符/ 空间/ 管理/ 算法/ 3/ ./ 租户/ 区域/ 分配/ 完毕/ 时/ 新增/ 租户/ 对/ S/ 扩展/ ./ 输入/ :/ 当前/ 租户/ 数量/ currentNum/ ,/ MaxTN/ ,/ S/ 输出/ :/ MaxTN/ ,/ S/ ,/ 租户/ 标识/ i/ ,/ tni/ 的/ 租户/ 区域/ 1/ ./ i/ ←/ currentNum/ +/ 1/ // // 获得/ 租户/ 标识/ 2/ ./ IFi/ >/ MaxTN3/ ./ 寻找/ 节点/ nh/ ,/ 该/ nh/ 负责/ 标识符/ S/ -/ 1/ ,/ 即/ S/ -/ 4/ ./ nh/ 的/ Rh/ ←/ Rh/ +/ [/ S/ ,/ 2S/ )/ 5/ ./ S/ ←/ 2S6/ ./ MaxTN/ ←/ 2MaxTN7/ ./ ENDIF8/ ./ 分配/ [/ STN/ (/ i/ -/ 1/ )/ ,/ STN/ ×/ i/ )/ 给/ 租户/ tni/ 使用/ 9/ ./ currentNum/ ++/ ;/ 10/ ./ FOReachni/ ∈/ N/ // // N/ 为/ 节点/ 集合/ 11/ ./ 更新/ ni/ 的/ 路由/ 路由/ 条目/ ,/ 使/ 其/ 第/ j/ 个/ 路由/ 条目/ 为/ 12/ ./ ENDFOR/ 算法/ 3/ 对/ MIMC/ 扩展/ 后/ ,/ 对/ 索引/ 机制/ 的/ 使用/ 影图/ 4/ 更新/ 局部/ 节点/ Chord/ 路由表/ 5.2/ 新增/ 数据/ 对象/ 索引/ 的/ 标识符/ 空间/ 管理/ 本/ 小节/ 给出/ 对/ 新增/ 数据/ 对象/ 索引/ 标识符/ 空间/ 管理/ 的/ 方法/ ./ 一个/ 租户/ 区域/ 在/ 初始/ 时/ 固定/ 大小/ 为/ STN/ ,/ 多/ 租户/ 数据库/ 根据/ 租户/ 需要/ 后续/ 地/ 新建/ 数据/ 对象/ 索引/ ,/ 当/ 租户/ tni/ 新建/ 数据/ 对象/ 索引/ 为/ j/ >/ MaxIN/ 时/ ,/ 需/ 扩展/ STN/ ./ 新/ 建立/ 的/ 数据/ 对象/ 索引/ 应/ 与/ 原有/ 该/ 租户/ 数据/ 响较/ 小/ ./ 使用/ 函数/ (/ 1/ )/ 保持/ 了/ 索引/ 条目/ 映射/ 的/ 位置/ 性/ 与/ 隔离/ 性/ ./ 新增/ 的/ 标识符/ 空间/ 将/ 分配/ 到/ 对/ 等/ 网络/ 中/ 第/ 3/ 步/ 求得/ 的/ 局部/ 节点/ nh/ 中/ ,/ 其他/ 局部/ 节点/ 负责/ 的/ 标识符/ 空间/ 范围/ 没有/ 变化/ ./ 若/ 后续/ 增加/ 的/ 租户/ 及/ 数据/ 对象/ 索引/ 引起/ 此/ 局部/ 节点/ 的/ 索引/ 条目/ 数目/ 过多/ ,/ 可/ 将/ 此/ 节点/ 分裂/ 从而/ 动态/ 地/ 平衡/ 节点/ 的/ 数目/ ./ 标识符/ 空间/ 扩展/ 后/ ,/ 为/ 保证/ 各/ 局部/ 节点/ 仍能/ 正确/ 寻址/ ,/ 需要/ 对/ 各/ 局部/ 节点/ 的/ 路由表/ 进行/ 修正/ ./ 根据/ Chord/ 路由/ 协议/ [/ 9/ ]/ 更新/ 每个/ 局部/ 节点/ 的/ Chord/ 路由表/ ./ 例如/ ,/ 若/ 当前/ S/ =/ 23/ ,/ MaxTN/ =/ 2/ ,/ STN/ =/ 22/ ,/ 已有/ 租户/ 2/ 个/ ,/ 则/ 当/ 新增/ 租户/ 为/ tn3/ 时/ ,/ 需要/ 扩展/ S/ ./ 那么/ 扩展/ 后/ S/ =/ 23/ ×/ 2/ =/ 24/ ,/ MaxTN/ =/ 4/ ,/ tn3/ 分配/ 的/ 空间/ 为/ [/ 22/ ×/ 2/ ,/ 22/ ×/ 3/ )/ ./ 扩展/ 的/ 空间/ 由/ 最后/ 一个/ 节点/ 负责/ ,/ 如图/ 4/ ,/ N6/ 原/ 负责/ 标识符/ 空间/ [/ 6/ ,/ 7/ ]/ ,/ 扩展/ 后/ 负责/ 标识符/ 空间/ [/ 6/ ,/ 15/ ]/ ./ 路由表/ 的/ 更新/ 如/ N2/ ,/ 其/ 路由表/ 增加/ 了/ 一项/ ./ 对象/ 索引/ 相/ 邻近/ ./ 所以/ 与/ 新增/ 租户/ 标识符/ 空间/ 管理/ 的/ 直接/ 扩展/ S/ 方法/ 不同/ ,/ 此处/ 采用/ 扩展/ 租户/ 区域/ STN/ 的/ 方法/ ,/ 如图/ 5/ ,/ 将/ 每个/ 租户/ 区域/ 扩大/ 一倍/ ./ 以下/ 给出/ 扩展/ 租户/ 区域/ 的/ 主要/ 步骤/ :/ (/ 1/ )/ 每个/ 租户/ 区域/ 扩大/ 1/ 倍/ ,/ 即/ STN/ =/ 2STN/ ./ (/ 2/ )/ 标识符/ 空间/ 也/ 相应/ 扩大/ 一倍/ ,/ 即/ S/ =/ 2S/ ./ (/ 3/ )/ 由于/ 租户/ 区域/ 扩大/ ,/ 对应/ 索引/ 条/ 目的/ 映射/ Page10/ 图/ 5/ 新增/ 数据/ 对象/ 索引/ 的/ 标识符/ 空间/ 管理/ 函数/ 也/ 需/ 相应/ 更改/ ./ 变更/ 为/ F/ (/ k/ )/ =/ STN/ ×/ (/ i/ -/ 1/ )/ +/ SIN/ ×/ (/ j/ -/ 1/ )/ +/ SIN/ ×/ (/ k/ -/ mini/ ,/ j/ )/ // (/ maxi/ ,/ j/ +/ 1/ -/ mini/ ,/ j/ )/ (/ 2/ )/ 根据/ 函数/ (/ 2/ )/ 可/ 看出/ ,/ 标识符/ 空间/ 的/ 改变/ 及/ 映射函数/ 的/ 改变/ 并/ 没有/ 影响/ 到/ 索引/ 条目/ 映射/ 的/ 位置/ 性/ 与/ 隔离/ 性/ ./ (/ 4/ )/ 局部/ 节点/ 采用/ 多/ B/ +/ 树/ 的/ 方法/ 对/ 所/ 负责/ 的/ 索引/ 条目/ 进行/ 管理/ ./ 由于/ 现有/ B/ +/ 树中/ 每个/ 节点/ 的/ k/ 值/ 是/ 由/ 函数/ (/ 1/ )/ 计算/ 的/ ,/ 而/ 映射函数/ 变更/ 后/ ,/ 多/ 租户/ 数据库/ 则/ 利用/ 函数/ (/ 2/ )/ 查找/ 索引/ 条目/ ,/ 导致/ 无法/ 得到/ 正确/ 的/ 目标/ 索引/ 条目/ ./ 直观/ 的/ 解决/ 方法/ 是/ 利用/ 函数/ (/ 2/ )/ 重建/ B/ +/ 树/ ,/ 但/ 对于/ 实时/ 查询/ 来说/ 重建/ B/ +/ 树/ 的/ 时间/ 成本/ 是/ 不能/ 忍受/ 的/ ./ 因此/ ,/ 本文/ 采用/ 多/ B/ +/ 树/ 的/ 方法/ 管理/ 局部/ 节点/ 所/ 负责/ 的/ 索引/ 条目/ ,/ 映射/ 到/ 扩展/ 前/ 租户/ 区域/ 的/ 索引/ 条目/ 仍然/ 利用/ 函数/ (/ 1/ )/ 组织/ 与/ 查找/ B/ +/ 树/ ,/ 映射/ 到/ 扩展/ 后/ 租户/ 区域/ 的/ 索引/ 条目/ 则/ 利用/ 函数/ (/ 2/ )/ 组织/ 成/ 一棵/ 新/ 的/ B/ +/ 树/ ,/ 由此/ 避免/ 了/ 现有/ B/ +/ 树/ 的/ 重建/ ./ 详细/ 方法/ 如下/ :/ 每/ 扩展/ 租户/ 区域/ 一次/ 新建/ 一棵/ B/ +/ 树/ ./ 令/ 初始/ B/ +/ 树/ 标识号/ b/ 为/ 0/ ,/ 后续/ 新建/ 的/ B/ +/ 树/ 依次/ 顺序/ 编号/ ;/ 同时/ 对/ 映射函数/ 也/ 进行/ 初始/ 为/ 0/ 的/ 顺序/ 编号/ ./ 对于/ 新/ 添加/ 的/ 属于/ 的/ B/ +/ 树/ 标识号/ b/ ,/ 其中/ Max0/ 据/ 对象/ 索引/ 数量/ 的/ 最大值/ ./ 那么/ er/ 应/ 存储/ 到/ 标识/ 为/ b/ 的/ B/ +/ 树/ ,/ er/ 的/ ks/ 值/ 也/ 由/ 映射函数/ b/ 计算/ ./ (/ 5/ )/ 更改/ 局部/ 节点/ 负责/ 的/ 标识符/ 空间/ ./ 对于/ 任意/ 局部/ 节点/ 所/ 负责/ 的/ 标识符/ 空间/ 范围/ [/ la/ ,/ lb/ )/ ,/ 更新/ 后/ 的/ 所/ 负责/ 的/ 标识符/ 空间/ 范围/ 为/ [/ la/ ,/ lb/ )/ ./ la/ 的/ 计算/ 用/ 函数/ (/ 3/ )/ ,/ lb/ 同理/ ./ la/ =/ la/ // STN/ ×/ STN/ +/ lamod/ |/ STN/ |/ (/ 4/ )/ (/ 6/ )/ 更新/ 每个/ 节点/ 的/ 路由表/ ./ 每个/ 路由/ 条/ 目的/ 键值/ xs/ ,/ 可/ 代入/ 函数/ (/ 4/ )/ 进行/ 更新/ ;/ 更新/ 后/ ,/ 有/ 部分/ 的/ 路由/ 条目/ 不/ 满足/ Chord/ 路由表/ 规则/ ,/ 需/ 添加/ 与/ 删除/ 对应/ 的/ 路由/ 条目/ ./ 路由表/ 更新/ 的/ 时间/ 复杂度/ 为/ O/ (/ logN/ )/ ,/ N/ 为/ 局部/ 节点/ 数量/ ./ 路由表/ 采用/ 异步/ 更新/ 的/ 方式/ ,/ 方法/ 见/ 5.3/ 节/ ,/ 从而/ 使得/ 更新/ 路由表/ 的/ 同时/ 不/ 影响/ 查询/ 的/ 跳转/ 与/ 执行/ ./ 例如/ ,/ 若/ 当前/ S/ =/ 23/ ,/ MaxTN/ =/ 2/ ,/ STN/ =/ 22/ ,/ MaxIN/ =/ Max0/ 据/ 对象/ 索引/ ,/ 则/ 当/ tn1/ 新建/ 数据/ 对象/ 索引/ 为/ 需要/ 扩展/ 租户/ 区域/ ./ 那么/ 扩展/ 后/ S/ =/ 23/ ×/ 2/ =/ 24/ ,/ STN/ =/ 22/ ×/ 2/ =/ 23/ ,/ MaxIN/ =/ 4/ ./ 根据/ 函数/ (/ 3/ )/ ,/ 的/ 索引/ 条目/ 应/ 插入/ 到/ 局部/ 节点/ 标识/ 为/ 1/ 的/ B/ +/ 树中/ ./ 在/ 第/ (/ 4/ )/ 步中/ ,/ 采用/ 多/ B/ +/ 树/ 索引/ 的/ 方法/ 管理/ ,/ 避免/ 了/ 因/ 映射函数/ 的/ 改变/ 而/ 需/ 重建/ B/ +/ 树/ 的/ 操作/ ,/ 具有/ 较/ 高/ 的/ 扩展/ 效率/ ./ 属于/ 一个/ 同一个/ B/ +/ 树中/ ,/ 因此/ 租户/ 查询/ 中/ 的/ 比较/ 操作/ 不/ 受/ 影响/ ./ 在/ 处理/ 租户/ 查询/ 时/ ,/ 若需/ 利用/ 数据/ 对象/ 索引/ / i/ ,/ j/ 处理/ 数据/ ,/ 则/ 利用/ 函数/ (/ 3/ )/ 选择/ 标识/ 为/ b/ 的/ B/ +/ 树/ 进行/ 查询/ ;/ 因/ b/ 号/ B/ +/ 树是/ 利用/ 标识/ 为/ b/ 的/ 映射函数/ 得到/ 的/ ks/ 建立/ 的/ ,/ 在/ 查询/ 数据/ 值为/ k/ 的/ 数据/ 对象/ 时/ ,/ 需先/ 使用/ b/ 号/ 映射函数/ 计算/ ks/ ,/ 再/ 在/ 该/ B/ +/ 树中/ 进行/ 查找/ ./ 因/ B/ +/ 树/ 的/ 选择/ 与/ ks/ 的/ 计算/ 都/ 是/ 一次/ 计算/ ,/ 所以/ 查询/ 性能/ 不/ 受/ 影响/ ./ 标识符/ 空间/ 的/ 改变/ 及/ 映射函数/ 的/ 改变/ 需/ 保证/ 每个/ 局部/ 节点/ 所/ 负责/ 的/ 索引/ 条目/ 应/ 相对/ 稳定/ ,/ 不会/ 导致/ 大量/ 的/ 数据/ 迁移/ ./ 在/ 第/ (/ 5/ )/ 步中/ ,/ 局部/ 节点/ 所/ 负责/ 的/ 标识符/ 空间/ 范围/ 的/ 维护/ 方法/ 可/ 保证/ 每个/ 局部/ 节点/ 负责/ 的/ 索引/ 条目/ 不变/ ,/ 定理/ 3/ 形式化/ 描述/ 了/ 该/ 问题/ ./ 定理/ 3/ ./ / er/ :/ 〈/ k/ ,/ v/ 〉/ ,/ 令/ le/ =/ F/ (/ k/ )/ ,/ le/ =/ F/ (/ k/ )/ ,/ 若/ le/ ∈/ [/ la/ ,/ lb/ )/ ,/ 则/ le/ ∈/ [/ la/ ,/ lb/ )/ ./ 证明/ ./ 先证/ :/ la/ / le/ / la/ / le/ ./ (/ 1/ )/ 当/ lamodSTN/ / lemodSTN/ 时/ ,/ la/ / le/ / la/ // STN/ ×/ STN/ / le/ // STN/ ×/ STN/ ,/ 所以/ la/ / le/ ./ (/ 2/ )/ 当/ lamodSTN/ >/ lemodSTN/ 时/ ,/ 若/ la/ // STN/ +/ 1/ >/ le/ // STN/ ,/ 由于/ 左右/ 式/ 均/ 为/ 整数/ ,/ 可得/ la/ // STN/ / STN/ >/ 盾/ ,/ 所以/ la/ // STN/ +/ 1/ / Page11STN/ / STN/ +/ STN/ >/ 同理/ ,/ 可证/ le/ </ lb/ / le/ </ lb/ ./ 定理/ 3/ 得证/ ./ 证毕/ ./ 5.3/ 标识符/ 空间/ 扩展/ 的/ 动态/ 路由/ 寻址/ 方法/ 租户/ 索引/ 机制/ 是/ 动态/ 运行/ 的/ ,/ 在/ 标识符/ 空间/ 扩展/ 时/ 不/ 可能/ 同时/ 更新/ 所有/ 的/ 局部/ 节点/ ./ 设/ ne/ 是/ 已经/ 进行/ 标识符/ 空间/ 扩展/ 的/ 局部/ 节点/ ,/ no/ 是/ 还/ 未/ 进行/ 标识符/ 空间/ 扩展/ 的/ 局部/ 节点/ ,/ 当/ 租户/ 查询/ 请求/ Q/ 由/ ne/ 节点/ 路由/ 到/ no/ 节点/ 或者/ 由/ no/ 节点/ 路由/ 到/ ne/ 节点/ 时/ ,/ 会/ 出现/ 使用/ 路由表/ 版本/ 的/ 错误/ ./ 例如/ ,/ ne/ 节点/ 利用/ 标识符/ 空间/ 扩展/ 后/ 的/ 映射函数/ Fd/ ,/ 计算/ 出/ ks/ ,/ 将/ 索引/ 查询/ 路由/ 到/ no/ 节点/ 后/ ,/ 其/ 路由表/ 还/ 未/ 按照/ 函数/ (/ 3/ )/ 进行/ 更新/ ,/ 将会/ 路由/ 到/ 错误/ 的/ 节点/ ./ 给出/ 的/ 解决方案/ 如下/ :/ Q/ 路由/ 到/ 一个/ 局部/ 节点/ 后/ ,/ 检查/ 标识符/ 空间/ 版本/ ,/ 如果/ 不同/ ,/ 利用/ 该/ 局部/ 节点/ 当前/ 使用/ 的/ 映射函数/ 重新/ 计算/ 一遍/ ks/ ,/ 按照/ 该/ 局部/ 节点/ 的/ 路由表/ 路由/ 即可/ ./ 因为/ 根据/ 定理/ 3/ 可知/ 一个/ 局部/ 节点/ 负责/ 的/ 索引/ 条目/ 与/ 数据项/ 在/ 标识符/ 空间/ 扩展/ 后/ 是/ 不会/ 发生变化/ 的/ ,/ 所以/ 只要/ 使用/ 相同/ 版本/ 的/ 映射函数/ 与/ 路由表/ 总/ 可以/ 正确/ 指向/ 索引/ 条目/ 所在/ 的/ 局部/ 节点/ ./ 6/ 实验/ 结果/ 与/ 分析/ 本/ 小节/ 实现/ 了/ MIMC/ 的/ 原型/ 系统/ ,/ 并/ 介绍/ 了/ MIMC/ 与/ 比较/ 对象/ 的/ 实验/ 设置/ ,/ 其/ 比较/ 对象/ 为/ 基于/ MongoDB/ [/ 33/ ]/ 集群/ 的/ 集中式/ 多/ 租户/ 索引/ ./ 考察/ 了/ 查询/ 时间/ 及/ 吞吐量/ 的/ 表现/ ,/ 考察/ 了/ 索引/ 扩展性/ 、/ 隔离/ 性对/ 查询/ 的/ 影响/ ,/ 并/ 测试/ 5.3/ 节/ 租户/ 区域/ 扩展/ 的/ 时间/ 成本/ ./ 6.1/ 实验/ 准备/ (/ 1/ )/ 实验/ 环境/ 利用/ OpenStack/ 平台/ 建立/ 8/ 到/ 64/ 个/ 虚拟/ 节点/ ,/ 每个/ 节点/ 安装/ 64/ 位/ Ubuntu/ 操作系统/ ,/ 分配/ 4/ 个/ 处理器/ 、/ 8GB/ 内存/ 、/ 200GB/ 磁盘/ ./ 实验/ 将/ MIMC/ 与/ 基于/ MongoDB/ 集群/ 的/ 多/ 租户/ 数据库/ 进行/ 比较/ ,/ 以下/ 分别/ 介绍/ 两者/ 的/ 实验/ 设置/ :/ (/ 2/ )/ MIMC/ 实验/ 设置/ ①/ 每个/ 节点/ 安装/ MongoDB/ 作为/ 局部/ 节点/ 的/ 数据/ 存储模块/ ,/ 每个/ 节点/ 将/ 所有/ 该/ 节点/ 负责/ 的/ 租户/ 数据/ 都/ 存储/ 到/ 一个/ Collection/ 上/ ;/ ②/ 利用/ MongoDB/ 索引/ 功能/ 实现/ 本文/ 的/ 局部/ 索引/ ,/ 方法/ 是/ 通过/ 在/ 每条/ 记录/ 上加/ 一项/ ks/ 的/ 值/ 属性/ ,/ 并/ 建立/ B/ +/ 树/ 索引/ ;/ ③/ 利用/ Java/ 语言/ 开发/ 对/ MIMC/ 编程/ 实现/ ,/ 主要/ 由/ Chord/ 路由/ 协议/ 模块/ 、/ Query/ 网络/ 传递/ 协议/ 模块/ 、/ MongoDB/ 本地/ 查询/ 模块/ 、/ 查询/ 测试/ 模块/ 组成/ ;/ ④/ 查询/ 具体/ 流程/ 是/ 先/ 给定/ 一个/ 租户/ 的/ 查询/ ,/ 通过/ F/ (/ k/ )/ 值/ 的/ 计算/ 与/ 路由表/ 的/ 查询/ ,/ 得到/ 要/ 处理/ 该/ Query/ 的/ 节点/ ,/ 如果/ 是/ 本地/ 负责/ 查询/ 则/ 交由/ MongoDB/ 处理/ ,/ 如果/ 是/ 其他/ 节点/ 负责/ ,/ 则/ 通过/ Chord/ 协议/ 发送/ 出去/ ./ (/ 3/ )/ 基于/ MongoDB/ 集群/ 的/ 集中式/ 多/ 租户/ 索引/ 的/ 实验/ 设置/ ①/ 建立/ MongoDB/ 集群/ ;/ ②/ 在/ MongoDB/ 集群/ 存储/ 多/ 租户/ 数据/ ./ 所有/ 租户/ 的/ 数据/ 以/ 共享/ 模式/ 的/ 方式/ 存储/ 在/ 一个/ Collection/ ,/ 每个/ 数据/ 对象/ 加上/ 租户/ 标识/ 与/ 数据/ 对象/ 集合/ 标识/ ,/ 并/ 利用/ 数据/ 分片/ 技术/ [/ 33/ ]/ 将/ 所有/ 数据/ 对象/ 分布/ 存储/ 到/ 节点/ 中/ ;/ ③/ 在/ MongoDB/ 集群/ 中/ 建立/ 索引/ :/ 首先/ 在/ 集群/ 路由/ 节点/ 建立/ 全局/ 索引/ ,/ 全局/ 索引/ 条目/ 为/ 〈/ tni/ ,/ Dk/ ,/ nx/ 〉/ ,/ 即/ 全局/ 索引/ 记录/ 租户/ 的/ 数据/ 对象/ 集合/ 放置/ 的/ 节点/ ,/ 其次/ 在/ 各/ 分片/ 节点/ 建立/ B/ +/ 树结构/ 的/ 局部/ 索引/ ,/ 为/ 提高/ 获得/ 租户/ 数据/ 的/ 效率/ ,/ 建立/ 由/ 租户/ 标识/ 、/ 数据/ 对象/ 集合/ 标识/ 、/ 查询/ 目标/ 属性/ 值/ 组成/ 的/ 联合/ 索引/ ;/ ④/ 在/ 查询/ 时/ ,/ 首先/ 对/ 租户/ 查询/ 进行/ 查询/ 转换/ [/ 34/ ]/ ,/ 其次/ 将/ 租户/ 查询/ 提交/ 到/ 集群/ 入口/ 节点/ ,/ 集群/ 入口/ 节点/ 负责/ 从/ 各/ 分片/ 节点/ 获取/ 租户/ 数据/ 并/ 执行/ 查询处理/ ./ 多/ 租户/ 数据处理/ 具有/ 在/ 线性/ 、/ 交易/ 性/ 的/ 特点/ ,/ 如/ Salesforce/ 的/ 客户关系/ 管理/ 产品/ ,/ 由于/ TPC/ -/ C/ 是/ 模拟/ 一个/ 批发商/ 的/ 货物/ 管理/ 环境/ 的/ 在线/ 事务处理/ 的/ 基准/ 项目/ ,/ 可以/ 部署/ 在/ 多/ 租户/ 数据/ 平台/ ,/ 贴近/ 多/ 租户/ 数据/ 的/ 应用/ 场景/ ,/ 因此/ 本文/ 采用/ TPC/ -/ C/ [/ 35/ ]/ 的/ 业务/ 模型模拟/ 生成/ 租户/ 数据/ ./ 实验/ 模拟/ 租户/ 对/ 基准/ 业务/ 模型/ 的/ 数据/ 模式/ 定制/ ,/ 对于/ 每个/ 租户/ ,/ 实验/ 中以/ 原始数据/ 表为/ 基准/ ,/ 随机/ 增加/ 1/ 到/ 5/ 个/ 属性/ 列/ ;/ 同时/ 加上/ 租户/ 标识/ 列/ ,/ 用以/ 区分/ 每条/ 记录/ 所属/ 的/ 租户/ ./ 在/ 实验/ 中/ ,/ 主要/ 为/ 租户/ 生成/ 定单/ 表与/ 定单/ 分录/ 表/ 数据/ ,/ 并/ 为/ 定单/ 表/ 的/ O/ _/ ID/ 、/ 定单/ 分录/ 表/ 的/ OL/ _/ O/ _/ ID/ 建立/ 索引/ ./ 为/ 衡量/ MIMC/ 在线/ 事务处理/ 系统/ 的/ 性能/ 及其/ 可伸缩性/ ,/ 本/ 实验/ 考察/ 3/ 种/ 查询/ :/ 点/ 查询/ 、/ 范围/ 查询/ 和/ 连接/ 查询/ ./ 点/ 查询/ 是/ 租户/ 对/ 一个/ 数据/ 对象/ 集合/ 发起/ 的/ 等值/ 查询/ ,/ 在/ 实验/ 中/ 针对/ 定单/ 表/ (/ ORDER/ )/ 查询/ 的/ 定单号/ 属性/ 进行/ 条件/ 查询/ ,/ 查询/ 谓语/ 为/ POINTQUERY/ :/ SELECT/ / FROMORDERWHEREO/ _/ ID/ =/ γ/ 范围/ 查询/ 是/ 指/ 租户/ 对/ 一个/ 数据/ 对象/ 集合/ 的/ 属性/ 给出/ 最大值/ 、/ 最小值/ 从而/ 获得/ 一个/ 结果/ 集/ ,/ 在/ 实验/ 中/ 针对/ 定单/ 表/ (/ ORDER/ )/ 的/ 定单号/ 进行/ 范围/ 查询/ ,/ 从而/ 得到/ 运单/ 号/ 结果/ 集/ ,/ 查询/ 谓语/ 为/ Page12RANGEQUERY/ :/ SELECTO/ _/ CARRIER/ _/ IDFROMORDERWHEREO/ _/ ID/ >/ α/ ANDO/ _/ ID/ </ β/ 对于/ 连接/ 查询/ ,/ 本/ 实验/ 只/ 考察/ 两个/ 数据/ 对象/ 集合/ 的/ 等值/ 连接/ 查询/ ,/ 对/ 定单/ 表与/ 定单/ 分录/ 表/ (/ ORDER/ _/ LINE/ )/ 连接/ 取/ 相关/ 信息/ ./ 由于/ MongoDB/ 不/ 支持/ 连接/ 操作/ ,/ 实验/ 在/ 平台/ 利用/ 哈希/ 连接/ 的/ 方法/ 完成/ 连接/ 查询/ 任务/ ./ 连接/ 查询/ 谓语/ 为/ JOINQUERY/ :/ SELECTORDER/ ./ O/ _/ CARRIER/ _/ ID/ ,/ ORDER/ _/ LINE/ ./ OL/ _/ SUPPLY/ _/ W/ _/ ID/ ,/ ORDER/ _/ LINE/ ./ OL/ _/ QUANTITYFROMORDER/ ,/ ORDER/ _/ LINEWHEREO/ _/ ID/ >/ α/ ANDO/ _/ ID/ </ β/ ANDO/ _/ ID/ =/ OL/ _/ O/ _/ ID/ 为/ 满足/ 大多数/ 数据类型/ 的/ 索引/ 对/ 哈希/ 空间/ 位数/ 的/ 需求/ ,/ 可/ 设置/ SIN/ 为/ 2128/ ,/ 该/ SIN/ 最大/ 可/ 保证/ 128/ 位长/ 整型/ 及/ 16/ 位/ 字符/ 型/ 在/ 映射/ 中/ 无/ 冲突/ ./ 在/ 初始/ 时/ ,/ 设置/ 可/ 管理/ 租户/ 数量/ 为/ MaxTN/ =/ 216/ ,/ 每个/ 租户/ 可/ 建立/ MaxIN/ =/ 28/ 个/ 索引/ ,/ 那么/ |/ S/ |/ =/ 2128/ ×/ 216/ ×/ 28/ =/ 2152/ ,/ 即/ 标识符/ 空间/ 的/ 位数/ 为/ 152/ ./ 在/ 实验/ 中/ 可/ 利用/ java/ ./ math/ ./ BigInteger/ 工具/ 进行/ 大/ 整型/ 运算/ ./ MaxTN/ 与/ MaxIN/ 的/ 初始/ 设置/ 是/ 一个/ 较/ 小/ 的/ 值/ ,/ 若/ 系统管理/ 租户/ 与/ 索引/ 数量/ 超过/ 两值/ ,/ 可/ 通过/ 第/ 5/ 节/ 空间/ 扩展/ 方法/ 解决/ ./ 空间/ 扩展/ 会/ 导致/ S/ 的/ 位数/ 的/ 增加/ ,/ 本文/ 通过/ 实验/ 测试/ S/ 的/ 位数/ 在/ 64/ 到/ 256/ 位/ 变化/ 时/ ,/ 对/ 平均/ 查询/ 时间/ 的/ 影响/ 小于/ 1ms/ ./ 6.2/ MIMC/ 的/ 查询/ 时间/ 本/ 小节/ 对/ MIMC/ 的/ 查询/ 时间/ 进行/ 测试/ ./ 首先/ 以/ 租户/ 数量/ 作为/ 变量/ ,/ 数量/ 从/ 160/ ~/ 6400/ 个/ 变化/ ,/ 考察/ 使用/ MIMC/ 的/ 查询/ 时间/ ./ 建立/ 32/ 个/ 局部/ 节点/ 管理/ 租户/ 数据/ ,/ 每个/ 租户/ 的/ 数据量/ 大小/ 为/ 100000/ 条/ ,/ 每个/ 租户/ 同时/ 发出/ 3/ 个/ 查询/ 请求/ ./ 基于/ MongoDB/ 集群/ 的/ 集中式/ 多/ 租户/ 索引/ 作为/ 比较/ 对象/ ,/ 其/ 3/ 种/ 查询/ 分别/ 称为/ 集中/ 索引/ 点/ 查询/ 、/ 集中/ 索引/ 范围/ 查询/ 、/ 集中/ 索引/ 连接/ 查询/ ./ 由于/ 集中/ 索引/ 连接/ 效率/ 过低/ ,/ 实验/ 中/ 不再/ 考察/ ./ 实验/ 结果/ 如图/ 6/ ,/ MIMC/ 的/ 点/ 查询/ 、/ 范围/ 查询/ 、/ 连接/ 查询/ 有着/ 较/ 好/ 的/ 表现/ ./ 随着/ 租户/ 数量/ 的/ 增多/ ,/ MIMC/ 的/ 查询/ 时间/ 优势/ 更加/ 明显/ ,/ 因为/ 集中/ 索引/ 使得/ 入口/ 节点/ 的/ 并发/ 查询/ 过多/ ,/ 从而/ 使得/ 查询/ 等待/ 执行/ 的/ 时间/ 较长/ ./ 在/ 租户/ 数量/ 等于/ 160/ 时/ ,/ MIMC/ 范围/ 查询/ 仍然/ 比/ 集中/ 索引/ 范围/ 查询/ 消耗/ 的/ 时间/ 少/ ,/ 因为/ 范围/ 查询/ 结果/ 集/ 较大/ ,/ MIMC/ 直接/ 将/ 结果/ 传输/ 给/ 查询/ 发起/ 节点/ 从而/ 减少/ 了/ 网络/ 传输/ 时间/ ./ 其次/ 考察/ 每个/ 租户/ 数据量/ 作为/ 变量/ ,/ 数据量/ 从/ 1000/ ~/ 1000000/ 条/ 记录/ 变化/ ,/ 32/ 个/ 节点/ ,/ 设定/ 256/ 个/ 租户/ 分布/ 在/ 这些/ 节点/ 上/ ,/ 每个/ 租户/ 同时/ 发起/ 5/ 个/ 查询/ 请求/ ./ 实验/ 结果/ 如图/ 7/ ,/ MIMC/ 点/ 查询/ 的/ 时间/ 消耗/ 不/ 受/ 数据量/ 大小/ 的/ 影响/ ,/ 而/ MIMC/ 范围/ 查询/ 与/ 连接/ 查询/ 随着/ 数据量/ 的/ 增加/ 对/ 节点/ 内存/ 要求/ 增多/ ,/ 查询/ 时间/ 平缓/ 增长/ ./ 集中/ 索引/ 点/ 查询/ 与/ 集中/ 索引/ 范围/ 查询/ 因为/ 入口/ 节点/ 的/ 并发/ 查询/ 队列/ 等待时间/ 过长/ ,/ 所以/ 查询/ 时间/ 长于/ MIMC/ ./ 6.3/ MIMC/ 的/ 扩展性/ 本/ 小节/ 考察/ MIMC/ 的/ 扩展/ 性能/ ./ 首先/ 测试/ 节点/ 数量/ 的/ 变化/ 对/ 查询/ 吞吐量/ 的/ 影响/ ./ 节点/ 数量/ 范围/ 为/ 8/ ~/ 64/ ,/ 同时/ 每/ 增加/ 一个/ 节点/ 对应/ 增加/ 10/ 个/ 租户/ ,/ 每个/ 租户/ 的/ 数据/ 对象/ 数量/ 为/ 100000/ 条/ ./ 实现/ 结果/ 如图/ 8/ 所示/ ,/ MIMC/ 的/ 3/ 种/ 查询/ 的/ 吞吐量/ 与/ 节点/ 数量/ 成/ 线性关系/ ,/ 特别/ 是/ 点/ 查询/ 与/ 范围/ 查询/ ,/ 而/ 连接/ 查询/ Page13/ 消耗/ 的/ CPU/ 、/ 内存/ 资源/ 较/ 多/ ,/ 所以/ 吞吐量/ 增长/ 较慢/ ./ 由于/ 入口/ 节点/ 的/ 瓶颈/ ,/ 集中/ 索引/ 点/ 查询/ 与/ 范围/ 查询/ 的/ 吞吐量/ 并/ 没有/ 随着/ 节点/ 数量/ 的/ 增加/ 而/ 增长/ ./ 其次/ 测试/ 节点/ 数量/ 的/ 扩展/ 对/ 查询/ 时间/ 的/ 影响/ ./ 分别/ 测试/ MIMC/ 点/ 查询/ 时间/ 与/ 集中/ 索引/ 点/ 查询/ 时间/ ,/ / 5/ 是/ 指/ 每增/ 一个/ 节点/ 对应/ 增加/ 5/ 个/ 租户/ ,/ / 50/ 是/ 指/ 每增/ 一个/ 节点/ 对应/ 增加/ 50/ 个/ 租户/ ,/ 且/ 设定/ 每个/ 租户/ 同时/ 发起/ 5/ 个/ 查询/ ,/ 每个/ 租户/ 的/ 数据量/ 为/ 100000/ 条/ ./ 实验/ 结果/ 如图/ 9/ ,/ 可/ 观察/ 到/ MIMC/ 的/ 点/ 查询/ 时间/ 并/ 不/ 随着/ 节点/ 规模/ 的/ 扩大/ 而/ 显著/ 延长/ ,/ 这是/ 由于/ 租户/ 查询/ 在/ 节点/ 规模/ 增大/ 时/ ,/ 只是/ 指数/ 级/ 地/ 增加/ 路由/ 的/ 跳数/ ,/ 而/ 每/ 一/ 跳/ 消耗/ 的/ 时间/ 数量级/ 为/ 10ms/ ./ 对于/ 集中/ 索引/ 点/ 查询/ ,/ 查询/ 时间/ 随着/ 租户/ 与/ 节点/ 规模/ 的/ 扩大/ 而/ 增长/ 较/ 多/ ,/ 特别/ 是/ 在/ / 50/ 时过/ 多/ 的/ 时间/ 消耗/ 在/ 队列/ 等待/ 中/ ./ 以上/ 实验/ 表明/ MIMC/ 可以/ 通过/ 增加/ 节点/ 数量/ 适应/ 大规模/ 多/ 租户/ 数据/ 查询处理/ 的/ 需求/ ./ 由图/ 6/ 、/ 图/ 7/ 可/ 看出/ ,/ 当/ 节点/ 数量/ 一定/ 时/ ,/ 影响/ 查询/ 效率/ 的/ 主要/ 因素/ 是/ 租户/ 数量/ ,/ 而/ 每个/ 租户/ 的/ 数据量/ 影响/ 较/ 小/ ./ 这/ 是因为/ 同时/ 发出/ 的/ 查询/ 请求/ 数量/ 与/ 租户/ 数量/ 成/ 比例/ ,/ 当/ 查询/ 请求/ 数量/ 较多时/ ,/ 查询/ 任务/ 会/ 在/ 队列/ 等待/ 中/ 消耗/ 过多/ 的/ 时间/ ./ 根据/ P2P/ 结构/ 的/ 特性/ ,/ MIMC/ 会/ 将/ 查询/ 请求/ 分散/ 到/ 各/ 节点/ 中/ ,/ 从而/ 避免/ 各/ 节点/ 出现/ 性能/ 瓶颈/ ./ 图/ 6/ 结果表明/ ,/ 在/ 当前/ 实验/ 环境/ 下/ ,/ 当/ 租户/ 与/ 节点/ 数量/ 比/ 小于/ 100/ 时/ ,/ 点/ 查询/ 与/ 范围/ 查询/ 的/ 时间/ 成本/ 较/ 低/ ./ 图/ 9/ 表明/ ,/ 同时/ 增加/ 租户/ 数量/ 与/ 节点/ 数量/ ,/ 查询/ 时间/ 增长/ 缓慢/ ,/ 这/ 是因为/ 增加/ 的/ 跳数/ 是/ 节点/ 数量/ 的/ 对/ 数级/ ./ 因此/ ,/ 使用/ MIMC/ 时/ ,/ 可/ 根据/ 性能/ 需要/ 设置/ 好/ 租户/ 与/ 节点/ 的/ 比例/ 关系/ ,/ 当/ 租户/ 数量/ 增加/ 时/ ,/ 按/ 比例/ 增加/ 节点/ 数量/ 即可/ ./ 6.4/ 租户/ 区域/ 扩展/ 的/ 时间/ 成本/ 及/ 查询/ 影响/ 本/ 小节/ 考察/ 5.2/ 节/ 扩展/ 租户/ 区域/ 的/ 时间/ 成本/ 及/ 扩展/ 后/ 对/ 查询/ 的/ 影响/ ./ 租户/ 区域/ 扩展/ 时/ ,/ 主要/ 耗时/ 在/ 步骤/ (/ 4/ )/ B/ +/ 树/ 的/ 维护/ 及/ 步骤/ (/ 6/ )/ 路由表/ 的/ 维护/ 上/ ./ 在/ 步骤/ (/ 4/ )/ 中/ ,/ 针对/ B/ +/ 树/ 失效/ 的/ 问题/ ,/ 比较/ 直观/ 的/ 解决/ 方法/ 是/ 重建/ B/ +/ 树/ ,/ 本文/ 还/ 提出/ 了/ 一种/ 多/ B/ +/ 树/ 的/ 方法/ ./ 实验/ 将/ 两种/ 方法/ 进行/ 比较/ ,/ 测试/ 租户/ 区域/ 扩展/ 的/ 时间/ ./ 实验/ 还/ 利用/ 点/ 查询/ 测试/ 两种/ 方法/ 建立/ 索引/ 结构/ 对/ 查询/ 的/ 影响/ ./ 实验/ 在/ 一个/ 局部/ 节点/ 上/ 进行/ ,/ 管理/ 8/ 个/ 租户/ ,/ 每个/ 租户/ 的/ 数据/ 对象/ 数量/ 从/ 1000/ ~/ 1000000/ 条/ 变化/ ./ 对于/ 租户/ 区域/ 扩展/ 的/ 时间/ 成本/ ,/ 如图/ 10/ 的/ 柱状图/ 比较/ ,/ 多/ B/ +/ 树/ 方法/ 扩展/ 时/ 只/ 需/ 新建/ 一个/ 空/ B/ +/ 树及/ 维护/ 路由表/ ,/ 与/ 重建/ B/ +/ 树/ 方法/ 相比/ 有着/ 明显/ 优势/ ,/ 特别/ 是/ 在/ 数据/ 对象/ 数量/ 较大/ 时/ ./ 对于/ 查询/ 性能/ ,/ 如图/ 10/ 的/ 折线/ 比较/ ,/ 以上/ 两种/ 方法/ 平均/ 查询/ 时间/ 相似/ ,/ 这是/ 由于/ 多/ B/ +/ 树/ 方法/ 只/ 比/ 重建/ B/ +/ 树/ 方法/ 多/ 一步/ B/ +/ 树/ 的/ 选择/ ,/ 通过/ 一次/ 计算/ 即可/ 完成/ ./ 6.5/ 隔离/ 性对/ 查询/ 的/ 影响/ 本/ 小节/ 考察/ 隔离/ 性对/ 租户/ 查询/ 的/ 影响/ ./ 4.1/ 节/ 证明/ 了/ MIMC/ 的/ 映射函数/ 具有/ 隔离/ 性/ ,/ 租户/ 使用/ 索引/ 查询/ 时/ 只/ 检索/ 到/ 自己/ 的/ 数据/ ,/ 由此/ 提高/ 了/ 查询/ 效率/ ./ 为/ 验证/ 隔离/ 性对/ 租户/ 查询/ 性能/ 的/ 提升/ ,/ 本节/ 将/ MIMC/ 与/ DBMS/ -/ like/ [/ 19/ ]/ 进行/ 比较/ ./ DBMS/ -/ like/ 实验/ 设置/ :/ DBMS/ -/ like/ 是/ Chen/ 等/ 人/ [/ 19/ ]/ 提出/ 的/ 一种/ 针对/ DaaS/ 的/ 云中/ 关系/ 运算/ 索引/ 机制/ ,/ 其/ 将/ 索引/ 保序/ 地/ 发布/ 到/ P2P/ 网络/ ./ 在/ 实验/ 中/ ,/ 所有/ 租户/ 的/ 数据/ 对象/ 都/ 使用/ 其保序/ 函数/ 在/ 云中/ 映射/ ,/ 并/ 采用/ Chord/ 协议/ 组织/ P2P/ 网络/ ./ 由于/ 相同/ k/ 值/ 但/ 不同/ 租户/ 的/ 索引/ 条目/ 会/ 映射/ 到/ S/ 中/ 的/ 相同/ 位置/ ,/ 所以/ 此/ 方法/ 不能/ 保证/ 租户/ 间/ 的/ 隔离/ 性/ ./ 基于/ MongoDB/ 集群/ 的/ 集中式/ 多/ 租户/ 索引/ 也/ 不/ 具备/ 租户/ 隔离/ 性/ ,/ 但/ 其/ 因/ 资源/ 争用/ 会/ 影响/ 查询/ 时间/ ,/ 所以/ 不再/ 考察/ ./ 实验/ 中/ ,/ 多/ 租户/ 数据/ 放置/ 于/ 8/ 个/ 节点/ ,/ 租户/ 数量/ 由/ 32/ 到/ 256/ 变化/ ,/ 每个/ 租户/ 数据量/ 为/ 100000/ ./ 为/ 避免/ 资源/ 争用/ 对/ 查询/ 时间/ 的/ 影响/ ,/ 实验/ 测试/ 只有/ 一个/ 租户/ 发起/ 查询/ 的/ 时间/ 成本/ ,/ 测试/ 的/ 查询/ 类型/ 为点/ 查询/ 与/ 范围/ 查询/ ./ 实验/ 结果/ 如图/ 11/ ,/ MIMC/ 范围/ 查询/ 比/ Page14DBMS/ -/ like/ 范围/ 查询/ 耗时/ 少/ ,/ 这是/ 由于/ DBMS/ -/ like/ 检索/ 到/ 的/ 数据/ 含有/ 大量/ 其他/ 租户/ 的/ 数据/ ,/ 需在/ 这些/ 数据/ 中/ 做/ 进一步/ 的/ 筛选/ ./ 而且/ 当/ 租户/ 数量/ 增多/ 时/ ,/ DBMS/ -/ like/ 范围/ 查询/ 的/ 耗时/ 急剧/ 增加/ ,/ 而/ MIMC/ 范围/ 查询/ 的/ 耗时/ 基本/ 不变/ ,/ 这/ 是因为/ MIMC/ 的/ 租户/ 索引/ 是/ 隔离/ 的/ ,/ 不/ 受/ 租户/ 数量/ 的/ 影响/ ./ 而/ 对于/ MIMC/ 点/ 查询/ 与/ DBMS/ -/ like/ 点/ 查询/ ,/ 租户/ 的/ 隔离/ 性/ 对/ 其/ 查询/ 耗时/ 没有/ 影响/ ,/ 这是/ 由于/ DBMS/ -/ like/ 方法/ 只/ 等值/ 的/ 检索/ 一条/ 或/ 几条/ 数据/ ,/ 并/ 不/ 需/ 处理/ 其他/ 大量/ 的/ 无关/ 数据/ ./ 因此/ ,/ 租户/ 隔离/ 性对/ 范围/ 查询/ 有/ 较大/ 影响/ ./ 6.6/ MIMC/ 的/ 复杂/ 查询/ 性能/ 本/ 小节/ 测试/ MIMC/ 在/ 较大/ 数据量/ 下/ 复杂/ 查询/ 的/ 性能/ ./ 实验/ 采用/ TPC/ -/ H/ 的/ 数据/ 模式/ 生成/ 租户/ 数据/ ,/ 并/ 在/ TPC/ -/ H/ 的/ 数据/ 模式/ 上/ 加入/ 租户/ 标识/ ./ 节点/ 数量/ 为/ 8/ 个/ ,/ 租户/ 数量/ 由/ 16/ 到/ 64/ 变化/ ,/ 每个/ 租户/ 数据量/ 为/ 10000000/ ./ 实验/ 以/ Q6/ 与/ Q17/ 作为/ 测试/ 对象/ ,/ Q6/ 是/ 针对/ LINEITEM/ 的/ 单表/ 统计/ ,/ Q17/ 是/ 涉及/ LINEITEM/ 与/ PART/ 的/ 双表/ 数据分析/ 查询/ ./ 在/ 实验/ 中/ ,/ 对/ P/ _/ PARTKEY/ 、/ L/ _/ PARTKEY/ 、/ L/ _/ SHIPDATE/ 属性/ 建立/ 索引/ ,/ 设置/ 每个/ 租户/ 同时/ 发起/ 1/ 个/ 查询/ ./ 如图/ 12/ ,/ 实验/ 表明/ ,/ 利用/ MIMC/ 比/ 基于/ MongoDB/ 集群/ 的/ 集中式/ 多/ 租户/ 索引/ 查询/ 耗时/ 少/ ./ 特别/ 是/ 对于/ 占用/ 资源/ 较/ 多/ 的/ Q17/ ,/ 因/ 后者/ 在/ 查询/ 时/ 产生/ 资源/ 争用/ 情况/ ,/ 租户/ 数量/ 越/ 多/ 耗时/ 越长/ ./ 因此/ ,/ 对于/ 大/ 数据量/ 且/ 较为/ 复杂/ 的/ 租户/ 查询/ ,/ MIMC/ 仍/ 有/ 较/ 好/ 的/ 查询/ 性能/ ./ 7/ 结论/ 本文/ 提出/ 了/ 一种/ 通过/ 改进/ 映射/ 方法/ 的/ Chord/ 多/ 租户/ 索引/ 机制/ ,/ 其/ 提供/ 的/ 映射函数/ 及/ 标识符/ 空间/ 分配/ 算法/ 可以/ 隔离/ 、/ 保序/ 、/ 均衡/ 地/ 将/ 租户/ 的/ 索引/ 条目/ 分配/ 到/ 云中/ 节点/ 上/ ./ 提出/ 的/ 动态/ 索引/ 管理/ 方法/ ,/ 适应/ 了/ 租户/ 数量/ 及/ 数据/ 无限/ 增长/ 的/ 需求/ ./ MIMC/ 的/ 局部/ 节点/ 是/ 对/ 等/ 网络/ 节点/ ,/ 相对/ 于/ 集中式/ 索引/ 其/ 不/ 存在/ 性能/ 瓶颈/ ./ 最后/ 实验/ 表明/ ,/ 当/ MIMC/ 在/ 租户/ 规模/ 较大/ 时/ ,/ 查询/ 时间/ 与/ 吞吐量/ 有/ 较/ 好/ 的/ 性能/ 表现/ ./ 

