Page1OnFlyP/ :/ 基于/ 定向/ 边/ 交换/ 的/ 分布式/ 在线/ 大图/ 划分算法/ 王志刚/ 谷峪/ 鲍玉斌/ 于戈/ (/ 东北大学/ 信息科学/ 与/ 工程学院/ 沈阳/ 110819/ )/ 摘要/ 随着/ 大/ 数据/ 时代/ 的/ 到来/ ,/ 基于/ 云/ 环境/ 的/ 大图/ 迭代/ 计算/ 已经/ 成为/ 新/ 的/ 研究/ 热点/ ,/ 其中/ 提高/ 图/ 划分算法/ 的/ 执行/ 效率/ 和/ 降低/ 划分/ 后子/ 图/ 之间/ 的/ 通信/ 边/ 规模/ 是/ 改善/ 计算/ 性能/ 的/ 关键/ ./ 已有/ 工作/ 主要/ 分为/ 离线/ 划分/ 和/ 在线/ 划分/ 两大类/ ,/ 无法/ 在/ 执行/ 效率/ 和/ 通信/ 边/ 规模/ 方面/ 同时/ 满足/ 迭代/ 处理/ 需求/ ./ 文中/ 针对/ 真实世界/ 的/ 大图/ ,/ 提出/ 了/ 聚簇/ 系数/ 概念/ ,/ 定量分析/ 了/ 顶点/ 分布/ 的/ 局部性/ ,/ 以此/ 为/ 基础/ 设计/ 了/ 一种/ 基于/ 定向/ 边/ 交换/ 模型/ 的/ 分布式/ 在/ 线图/ 划分算法/ (/ OnFlyP/ )/ ,/ 可/ 在/ 迭代/ 计算/ 的/ 数据/ 加载/ 阶段/ 快速/ 完成/ 图/ 划分/ ,/ 同时/ 通过/ 出边/ 的/ 交换/ 有效/ 降低/ 通信/ 边/ 规模/ ,/ 以/ 满足/ 迭代/ 计算/ 需求/ ./ OnFlyP/ 采用/ 实时控制/ 和/ 最小/ 对称/ 矩阵/ 控制/ 实现/ 负载/ 均衡/ ,/ 前者/ 具有/ 较/ 高/ 的/ 执行/ 效率/ ,/ 而/ 后者/ 对/ 降低/ 通信/ 边/ 规模/ 有/ 较/ 好/ 的/ 优化/ 效果/ ,/ 可/ 根据/ 实际/ 应用/ 的/ 处理/ 需求/ 灵活/ 选择/ ./ 最后/ ,/ 作者/ 使用/ 多种/ 真实/ 数据/ 验证/ 了/ OnFlyP/ 算法/ 的/ 有效性/ ./ 关键词/ 在线/ 大图/ 划分/ ;/ 边/ 交换/ ;/ 实时控制/ ;/ 最小/ 对称/ 矩阵/ 1/ 引言/ 图/ 可以/ 表达/ 复杂/ 的/ 结构/ 和/ 丰富/ 的/ 语义/ ,/ 其/ 迭代/ 分析/ 算法/ 在/ 社交/ 网络/ 、/ Web/ 、/ 时空/ 和/ 科学/ 数据/ 计算/ 等/ 诸多/ 领域/ 都/ 获得/ 了/ 广泛/ 的/ 应用/ [/ 1/ -/ 2/ ]/ ./ 然而/ ,/ 数据/ 规模/ 的/ 快速增长/ 对/ 高效/ 迭代/ 处理/ 提出/ 了/ 严峻/ 的/ 挑战/ ./ 例如/ ,/ Google/ 目前/ 索引/ 的/ 网页/ 数目/ 已/ 超过/ 1/ 万亿/ ,/ 而/ Facebook2012/ 年/ 的/ 活跃/ 用户/ 已经/ 超过/ 10/ 亿/ ./ 为/ 应对/ 大图/ 的/ 迭代/ 分析/ 需求/ ,/ 近年来/ ,/ 基于/ 云/ 计算/ 的/ 大量/ 分布式/ 迭代/ 处理/ 系统/ 被/ 开发/ 出来/ ,/ 如/ Pregel/ ,/ Trinity/ ,/ GPS/ ,/ Giraph/ ,/ Spark/ 和/ BC/ -/ BSP/ 等/ [/ 3/ -/ 9/ ]/ ./ 这些/ 系统/ 通过/ 表达力/ 丰富/ 的/ API/ 简化/ 了/ 用户/ 的/ 分布式/ 编程/ 工作/ ,/ 并/ 利用/ 云/ 计算环境/ 的/ 海量/ 资源/ 实现/ 了/ 大图/ 的/ 有效/ 处理/ ./ 图/ 划分/ 是/ Pregel/ 等/ 系统/ 进行/ 分布式计算/ 的/ 前提/ ./ 由于/ 图/ 计算/ 通常/ 按照/ 拓扑/ 结构/ 访问/ 数据/ ,/ 所以/ 每次/ 迭代/ 处理/ 均会/ 引入/ 巨大/ 的/ 通信/ 开销/ ,/ 这/ 成为/ 制约/ 分布式/ 处理/ 性能/ 的/ 关键因素/ ./ 因此/ ,/ 一个/ 良好/ 的/ 划分算法/ 应/ 保证/ 划分/ 后/ 的/ 子/ 图/ 在/ 负载/ 均衡/ 的/ 前提/ 下/ ,/ 减少/ 子图/ 之间/ 的/ 交互/ 边/ (/ 切分/ 边/ )/ 规模/ ,/ 从而/ 减少/ 网络通信/ ./ 另一方面/ ,/ 云/ 计算资源/ 会/ 随着/ 并发/ 处理/ 作业/ 数目/ 的/ 变化/ 和/ 集群/ 中/ 节点/ 的/ 增删/ 而/ 动态变化/ ./ Pregel/ 等/ 系统/ 使用/ 集群/ 总任务/ 数目/ 来/ 定量/ 描述/ 计算资源/ ,/ 使用/ 空闲/ 任务/ 数目/ 表征/ 当前/ 可用/ 计算资源/ ,/ 并/ 提供/ setTaskNum/ 接口/ ,/ 允许/ 用户/ 在/ 提交/ 图/ 处理/ 作业/ 时/ ,/ 根据/ 处理/ 需求/ 和/ 计算资源/ 灵活/ 定义/ 本/ 作业/ 的/ 任务/ 数/ ./ 因此/ ,/ 同一个/ 图/ 作业/ 在/ 不同/ 时刻/ 被/ 提交/ 时/ ,/ 其/ 分布式/ 任务/ 数目/ 不尽相同/ ,/ 我们/ 称之为/ 分布式/ 处理/ 粒度/ 的/ 弹性/ 变化/ ./ 这/ 导致/ 图/ 数据/ 需要/ 按照/ 当前/ 的/ 任务/ 数目/ 重新/ 划分/ ,/ 划分/ 结果/ 的/ 不可/ 重用/ 性使/ 图/ 划分/ 的/ 执行/ 效率/ 成为/ 影响/ 总/ 计算/ 代价/ 的/ 重要/ 因素/ ./ 然而/ ,/ 均衡/ 图/ 划分/ 本身/ 是/ 一个/ 经典/ 的/ NP/ -/ Complete/ 问题/ [/ 10/ ]/ ,/ 目前/ 的/ 研究/ 工作/ 可以/ 分为/ 两类/ ,/ 以/ Metis/ [/ 10/ ]/ 为/ 代表/ 的/ 离线/ 划分算法/ 和/ 以/ LDG/ [/ 11/ ]/ 为/ 代表/ 的/ 在线/ 划分算法/ ./ 前者/ 可以/ 显著/ 优化/ 切分/ 边/ 规模/ ,/ 降低/ 迭代/ 计算/ 过程/ 中/ 的/ 消息/ 通信/ 开销/ ,/ 因此/ 受到/ 学术界/ 和/ 工业界/ 的/ 广泛/ 关注/ ./ 然而/ ,/ 离线/ 划分/ 过程/ 需要/ 频繁/ 访问/ 图/ 顶点/ ,/ 引入/ 了/ 昂贵/ 的/ 时间/ 开销/ ./ 面对/ 海量/ 图/ 数据/ ,/ 例如/ Twitter/ 图/ (/ 4700/ 万/ 顶点/ ,/ 15/ 亿出/ 边/ )/ ,/ 其/ 执行/ 时间/ 超过/ 8/ 个/ 小时/ [/ 12/ ]/ ,/ 效率/ 低下/ ./ 在线/ 划分算法/ 可以/ 在/ 图/ 处理/ 系统/ 的/ 数据/ 加载/ 阶段/ 完成/ 图/ 划分/ ,/ 仅/ 扫描/ 一次/ 图/ 数据/ ./ 与/ 离线/ 划分算法/ 相比/ ,/ 在线/ 划分算法/ 通过/ 一定/ 程度/ 上/ 牺牲/ 划分/ 效果/ ,/ 来/ 获得/ 较/ 高/ 的/ 执行/ 效率/ ./ 但是/ ,/ 此类/ 算法/ 通常/ 是/ 集中式/ 算法/ ,/ 这样/ 便于/ 维护/ 复杂/ 的/ 启发式/ 规则/ ,/ 保证/ 相对/ 较/ 好/ 的/ 划分/ 效果/ ,/ 但/ 其/ 扩展性/ 显然/ 受到/ 单机/ 处理/ 能力/ 的/ 限制/ ./ 虽然/ 已经/ 存在/ 分布式/ 在线/ 划分算法/ 的/ 相关/ 研究/ 工作/ ,/ 但是/ 启发式/ 规则/ 的/ 维护/ 开销/ 仍然/ 显著/ 影响/ 了/ 算法/ 的/ 运行/ 效率/ ./ 综上所述/ ,/ 设计/ 一种/ 划分/ 效果/ 优异/ 的/ 快速/ 的/ 图/ 分割/ 算法/ ,/ 已经/ 成为/ 现有/ 大图/ 处理/ 系统/ 亟待解决/ 的/ 问题/ ./ 实际上/ ,/ 真实/ 图/ 通常/ 是/ 通过/ 广度/ 优先/ 搜索/ 技术/ (/ Breadth/ -/ FirstSearch/ ,/ BFS/ )/ 爬/ 取得/ 到/ [/ 13/ ]/ ,/ 以供/ Pregel/ 等/ 计算/ 系统/ 使用/ ./ 我们/ 称之为/ BFS/ 生成/ 图/ ./ 这/ 使得/ 爬/ 取后/ 的/ 真实/ 图/ 的/ 顶点/ 分布/ 具有/ 一定/ 局部性/ ,/ 而已/ 有/ 的/ 相关/ 工作/ 忽视/ 了/ 这/ 一/ 特性/ ./ 因此/ ,/ 本文/ 首先/ 提出/ 了/ 反映/ 顶点/ 之间/ 关联/ 关系/ 的/ 聚簇/ 系数/ 概念/ ,/ 定量分析/ 了/ 顶点/ 分布/ 的/ 局部性/ ,/ 然后/ 据此/ 设计/ 了/ 一种/ 基于/ 出边/ 定向/ 交换/ 模型/ 的/ 分布式/ 在/ 线图/ 划分算法/ OnFlyP/ ./ 利用/ 原始/ 图/ 的/ 局部性/ 特征/ ,/ OnFlyP/ 算法/ 能够/ 在/ 保证/ 分布式/ 划分/ 效率/ 的/ 前提/ 下/ ,/ 有效/ 降低/ 实际/ 计算/ 过程/ 中/ 的/ 网络通信/ 开销/ ./ 特别/ 地/ ,/ OnFlyP/ 支持/ 实时控制/ (/ OnFlyP/ -/ R/ )/ 和/ 最小/ 对称/ 矩阵/ 控制/ (/ OnFlyP/ -/ M/ )/ 两种/ 负载/ 均衡/ 策略/ ./ 前者/ 可以/ 获得/ 更好/ 的/ 执行/ 效率/ ,/ 而/ 后者/ 可以/ 获得/ 更佳/ 的/ 划分/ 效果/ ./ 在/ 实际/ 应用/ 中/ ,/ 用户/ 可以/ 根据/ 具体/ 需求/ ,/ 自主/ 选择/ 不同/ 策略/ ./ 例如/ ,/ 针对/ 单源/ 最/ 短/ 路径/ 计算/ 等/ 遍历/ 式/ 算法/ ,/ 迭代/ 过程/ 中/ 通信/ 压力/ 较/ 小/ ,/ 可以/ 选择/ OnFlyP/ -/ R/ 策略/ 减少/ 划分/ 开销/ ,/ 提高/ 整体/ 处理/ 效率/ ./ 而/ 对/ PageRank/ 等/ 通信/ 密集型/ 算法/ ,/ 可以/ 选择/ OnFlyP/ -/ M/ 策略/ 以/ 提高/ 通信/ 效率/ ./ 综述/ ,/ 本文/ 的/ 主要/ 贡献/ 如下/ :/ (/ 1/ )/ 提出/ 聚簇/ 系数/ 概念/ ,/ 定量分析/ 了/ 真实/ 图/ (/ 尤其/ 是/ BFS/ 生成/ 图/ )/ 的/ 顶点/ 分布/ 的/ 局部性/ ./ (/ 2/ )/ 设计/ 了/ 基于/ 定向/ 边/ 交换/ 模型/ 的/ 分布式/ 在/ 线图/ 划分算法/ OnFlyP/ ,/ 并/ 从/ 理论/ 上/ 分析/ 了/ BFS/ 生成/ Page3/ 图/ 划分/ 后/ 的/ 通信/ 边/ 规模/ 的/ 上界值/ ./ (/ 3/ )/ 设计/ 了/ 基于/ 实时控制/ 和/ 最小/ 对称/ 矩阵/ 控制/ 的/ 两种/ 负载/ 均衡/ 策略/ ,/ 适用/ 于/ 不同/ 实际/ 需求/ ./ (/ 4/ )/ 在/ 大量/ 真实/ 图上/ ,/ 对比/ 了/ OnFlyP/ 算法/ 和/ 集中式/ 在线/ LDG/ 算法/ ,/ 并/ 在/ BC/ -/ BSP/ 系统/ 上/ 验证/ 了/ OnFlyP/ 算法/ 的/ 有效性/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节/ 通过/ 描述/ Pregel/ 系统/ 处理/ 流程/ ,/ 定义/ 图/ 划分/ 概念/ ;/ 第/ 4/ 节/ 首先/ 分析/ BFS/ 生成/ 图/ 的/ 局部性/ 特点/ ,/ 然后/ 介绍/ OnFlyP/ 划分算法/ ,/ 最后/ 从/ 理论/ 上/ 对/ 划分/ 效果/ 进行/ 分析/ ;/ 第/ 5/ 节/ 给出/ 实时控制/ 和/ 最小/ 对称/ 矩阵/ 控制/ 两种/ 负载/ 均衡/ 策略/ ,/ 并/ 对/ 两种/ 策略/ 的/ 适用性/ 进行/ 详细/ 讨论/ ;/ 第/ 6/ 节/ 展示/ 真实/ 图上/ 的/ 实验/ 结果/ 和/ 数据分析/ ;/ 最后/ ,/ 第/ 7/ 节/ 总结/ 全文/ ./ 2/ 相关/ 工作/ 本/ 节/ 首先/ 从/ 离线/ 划分/ 和/ 在线/ 划分/ 两个/ 方面/ ,/ 对/ 现有/ 的/ 静态/ 的/ 图/ 划分算法/ 进行/ 介绍/ ,/ 然后/ 简单/ 总结/ 动态/ 的/ 图/ 划分/ 方法/ ,/ 从而/ 阐述/ 本文/ 工作/ 与/ 已有/ 工作/ 的/ 区别/ ./ 离线/ 划分算法/ 的/ 一个/ 经典/ 处理/ 方案/ 是/ 通过/ 对/ 原图/ 的/ 多级/ “/ coarsening/ ”/ 操作/ 不断/ 压缩/ 图/ 的/ 规模/ ,/ 然后/ 对/ 压缩/ 图/ 采用/ Kernighan/ -/ Lin/ [/ 14/ ]/ 或/ FM/ [/ 15/ ]/ 等/ 复杂/ 算法/ 进行/ 初始/ 划分/ ,/ 之后/ 执行/ “/ uncoarsening/ ”/ 操作/ ,/ 得到/ 最终/ 的/ 划分/ 结果/ ./ Chaco/ [/ 16/ ]/ ,/ Metis/ [/ 10/ ]/ 和/ Scotch/ [/ 17/ ]/ 等/ 都/ 是/ 面向/ 集中式/ 的/ 多级/ 划分算法/ 库/ ,/ 且/ 因/ 划分/ 后/ 的/ 子/ 图/ 具有/ 较少/ 的/ 切分/ 边/ 而/ 被/ 业界/ 广为/ 青睐/ ./ 此外/ ,/ ParMetis/ [/ 18/ ]/ 和/ PT/ -/ Scotch/ [/ 19/ ]/ 等/ 并行/ 化/ 版本/ 可/ 进一步提高/ 扩展性/ ./ 然而/ 此类/ 算法/ 在/ “/ coarsening/ ”/ 阶段/ 的/ 最大/ 匹配/ 操作/ 引入/ 了/ 昂贵/ 的/ 执行/ 开销/ ./ 因此/ ,/ MLP/ [/ 20/ ]/ 采用/ 分布式/ 的/ 基于/ 标签/ 传播/ 的/ 连通/ 域/ 查找/ 算法/ 替换/ “/ coarsening/ ”/ 阶段/ 的/ 最大/ 匹配/ ,/ 以/ 降低/ 执行/ 开销/ ./ 此外/ ,/ 部分/ 工作/ 直接/ 采用/ 标签/ 传播/ 进行/ 图/ 划分/ ./ 例如/ ,/ Ugander/ 等/ 人/ [/ 21/ ]/ 提出/ 一种/ 分布式/ 环境/ 下/ 的/ 均衡/ 的/ 标签/ 传播/ 方法/ 来/ 解决/ 图/ 划分/ 问题/ ./ 每个/ 顶点/ 采取/ 其/ 邻居/ 顶点/ 具有/ 的/ 最/ 多/ 的/ 标签/ 作为/ 自己/ 的/ 标签/ ,/ 而/ 具有/ 相同/ 标签/ 的/ 顶点/ 属于/ 同一个/ 划分/ 后/ 的/ 子/ 图/ ./ 该/ 方法/ 采用/ 线性规划/ 来/ 约束/ 每个/ 子图/ 的/ 大小/ ,/ 实现/ 负载/ 均衡/ ./ Rahimian/ 等/ 人/ [/ 22/ ]/ 设计/ 了/ JA/ -/ BE/ -/ JA/ 算法/ ,/ 将/ 顶点/ 的/ 标签/ 称为/ color/ ,/ 每个/ 顶点/ 和/ 自己/ 的/ 邻居/ 以及/ 部分/ 随机/ 顶点/ 交换/ 标签/ ,/ 以/ 减少/ 子图/ 之间/ 的/ 交互/ 边/ ./ JA/ -/ BE/ -/ JA/ 采用/ 模拟退火/ 算法/ 来/ 避免/ 算法/ 陷入/ 局部/ 最优/ ./ 进一步/ 地/ ,/ 为/ 满足/ 实际/ 应用/ 中/ 的/ 多种/ 需求/ ,/ Slota/ 等/ 人/ 提出/ 一种/ 基于/ 标签/ 传播/ 的/ 多/ 目标/ 划分/ 方法/ PuLP/ [/ 23/ ]/ ./ PuLP/ 在/ 不同/ 的/ 阶段/ 针对/ 不同/ 的/ 约束条件/ 进行/ 划分/ 调整/ ./ 然而/ ,/ 上述/ 3/ 种/ 算法/ 在/ 标签/ 传播/ 过程/ 中/ ,/ 每个/ 顶点/ 需要/ 迭代/ 更新/ 自己/ 所属/ 的/ 类别/ ,/ 所以/ 仍/ 需要/ 扫描/ 多次/ 图/ 数据/ ,/ 制约/ 执行/ 效率/ ./ 此外/ ,/ MLP/ 区分/ 了/ 切分/ 边/ 和/ 通信/ 边/ 的/ 概念/ ./ 如果/ 从子/ 图/ A/ 指向/ 子图/ B/ 的/ 切分/ 边/ 具有/ 相同/ 的/ 目的/ 顶点/ ,/ 那么/ 在/ 实际/ 计算/ 中/ ,/ 切分/ 边/ 产生/ 的/ 消息/ 可以/ 通过/ 合并/ 操作/ 转化/ 为/ 一条/ 网络/ 消息/ ,/ 等价/ 于/ 一条/ 通信/ 边/ ./ 因此/ 通信/ 边/ 规模/ 代表/ 了/ 实际/ 的/ 网络/ 开销/ ./ 在线/ 划分算法/ 假设/ 图/ 数据/ 以/ 顶点/ 流/ 或/ 边流/ 的/ 方式/ 到达/ ,/ 在/ 流/ 处理过程/ 中/ 根据/ 已/ 到达/ 数据/ 的/ 分布/ 信息/ ,/ 通过/ 启发式/ 规则/ 计算/ 决定/ 当前/ 图/ 数据/ 的/ 划分/ 位置/ ./ 由于/ Pregel/ 等/ 系统/ 在/ 执行/ 迭代/ 计算/ 前/ 必须/ 加载/ 图/ 数据/ ,/ 因此/ 该/ 方法/ 可以/ 在/ 数据/ 加载/ 过程/ 中/ 实现/ 图/ 的/ 在线/ 划分/ ./ 与/ Metis/ 相比/ ,/ 该/ 方法/ 通过/ 一定/ 程度/ 上/ 牺牲/ 切分/ 边/ 规模/ 的/ 优化/ 效果/ 来/ 避免/ “/ coarsening/ ”/ 阶段/ 的/ 多次/ 数据/ 扫描/ ,/ 极大地提高/ 了/ 执行/ 效率/ ./ 集中式/ 的/ LDG/ [/ 11/ ]/ 和/ FENNEL/ [/ 12/ ]/ 算法/ 可以/ 准确/ 地/ 实时/ 维护/ 数据/ 的/ 分布/ 信息/ ,/ 保证/ 了/ 启发式/ 计算结果/ 的/ 精度/ ,/ 切分/ 边/ 规模较/ 少/ ./ 进一步/ 地/ ,/ Nishimura/ 等/ 人/ [/ 24/ ]/ 提出/ 了/ “/ restreaming/ ”/ 方法/ ,/ 即/ 相同/ 的/ 图/ 数据/ 被/ 反复/ 加载/ 、/ 处理/ 时/ (/ 例如/ ,/ 首次/ 加载/ 用于/ 计算/ 单源/ 最/ 短/ 路径/ ,/ 第/ 2/ 次/ 加载/ 用于/ 计算/ PageRank/ )/ ,/ 可以/ 利用/ 上/ 一次/ 流式/ 划分/ 的/ 结果/ ,/ 来/ 改善/ 本次/ 划分/ 的/ 效果/ ./ 实验/ 表明/ ,/ 该/ 机制/ 可以/ 提供/ 与/ Metis/ 近似/ 的/ 划分/ 效果/ ./ PowerGraph/ 提出/ 了/ 基于/ Vertex/ -/ Cut/ 的/ Coordinated/ 分布式/ 流/ 划分/ 方法/ [/ 25/ ]/ ,/ 通过/ 建立/ 分布式/ 路由表/ 记录/ 数据/ 的/ 分布/ 信息/ ,/ 实现/ 了/ 分布式/ 的/ 启发/ 划分/ ./ 鉴于/ Vertex/ -/ Cut/ 机制/ 可/ 有效/ 减少/ 迭代/ 计算/ 的/ 通信/ 开销/ ,/ GraphBuilder/ ,/ GraphX/ 和/ LightGraph/ 等/ 系统/ [/ 26/ -/ 28/ ]/ ,/ 均/ 支持/ 这种/ 划分/ 方法/ ./ 然而/ ,/ 为/ 提高/ 路由表/ 信息/ 的/ 准确性/ ,/ 分布式/ 的/ Vertex/ -/ Cut/ 机制/ 必须/ 引入/ 昂贵/ 的/ 加锁/ 开销/ ,/ 影响/ 了/ 实际/ 运行/ 效率/ ./ 因此/ ,/ PowerLyra/ [/ 29/ ]/ 提供/ 了/ 一种/ 基于/ Vertex/ -/ Cut/ 和/ FENNEL/ 的/ 混合/ 划分/ 方式/ ,/ 用户/ 需/ 设定/ 阈值/ ,/ 如果/ 顶点/ 的/ 出度/ 大于/ 该/ 阈值/ ,/ 执行/ Vertex/ -/ Cut/ 以/ 提高/ 通信/ 收益/ ,/ 否则/ 采用/ FENNEL/ 划分/ 以/ 提高/ 划分/ 执行/ 效率/ 并/ 降低/ 划分/ 后子/ 图/ 的/ 维护/ 开销/ ./ 此外/ ,/ 我们/ 曾/ 在/ BC/ -/ BSP/ [/ 8/ ]/ 系统/ 中/ 设计/ 了/ 一种/ 简单/ 的/ VCCP/ 方法/ [/ 30/ ]/ ,/ 通过/ 采用/ Vertex/ -/ Cut/ 技术/ [/ 25/ ]/ ,/ 可/ 显著/ 减少/ 通信/ 边/ 规模/ ,/ 但/ 对/ 真实/ 图会/ 引入/ 极大/ 的/ 负载/ 偏斜/ ./ Hash/ 划分/ 可以/ 视为/ 一种/ 最/ 简单/ 的/ 分布式/ 流划/ Page4/ 分/ 算法/ ,/ 其/ 启发式/ 规则/ 为/ :/ 通过/ 顶点/ 标签/ 或边/ 标签/ 的/ HashCode/ 值/ 决定/ 数据/ 的/ 存放/ 位置/ ./ 虽然/ Hash/ 划分/ 通常/ 由于/ 难以/ 保留/ 图/ 的/ 局部性/ 而/ 引入/ 大量/ 的/ 通信/ 开销/ ,/ 但/ 可以/ 在/ 分布式/ 环境/ 下/ 快速/ 实现/ 图/ 的/ 分割/ ,/ 因此/ 被/ Pregel/ 等/ 系统/ 作为/ 默认/ 的/ 划分/ 方式/ ./ 上述/ 图/ 划分/ 工作/ 均/ 是/ 围绕/ 静态/ 图/ 展开/ 的/ ,/ 而/ 实际/ 应用/ 中/ ,/ 对于/ Pregel/ 等/ 迭代/ 处理/ 系统/ ,/ 图是/ 动态变化/ 的/ ./ 这/ 是因为/ 在/ 迭代/ 过程/ 中/ ,/ 值/ 达到/ 稳定/ 的/ 图/ 顶点/ 通常/ 不再/ 参与/ 后续/ 计算/ ,/ 例如/ 单源/ 最/ 短/ 路径/ 计算/ ,/ 所以/ 实际/ 参与/ 计算/ 的/ 图/ 数据/ 是/ 动态变化/ 的/ ./ 这/ 使得/ 初始/ 的/ 图/ 划分/ 可能/ 产生/ 负载/ 偏斜/ ,/ 或者/ 划分/ 效果/ 不再/ 是/ 最优/ 的/ ./ 因此/ ,/ GPS/ [/ 5/ ]/ ,/ Mizan/ [/ 31/ ]/ 和/ Xpregel/ [/ 32/ ]/ 等/ 系统/ 均/ 支持/ 在/ 迭代/ 过程/ 中/ 动态/ 重/ 划分/ 图/ 数据/ ,/ 以/ 提高/ 整体/ 运行/ 效率/ ./ 特别/ 地/ ,/ Shang/ 和/ Jeffrey/ 等/ 人/ [/ 33/ ]/ 分析/ 了/ 在/ 不同/ 迭代/ 算法/ 下图/ 的/ 动态变化/ 特征/ ,/ 用于/ 指导/ 动态/ 划分/ ./ 动态/ 划分/ 机制/ 是/ 在/ 给定/ 的/ 划分/ 结果/ 上/ 进行/ 动态/ 调整/ ./ 因此/ ,/ 与/ 本文/ 的/ 工作/ 是/ 互补/ 的/ ,/ 即/ 本文/ 提出/ 的/ 方法/ ,/ 也/ 可以/ 支持/ 类似/ 的/ 动态/ 调整/ 操作/ ./ 3/ 问题/ 定义/ 本/ 节/ 首先/ 以/ Pregel/ 系统/ 为例/ 介绍/ 了/ 大图/ 迭代/ 计算/ 流程/ ,/ 然后/ 根据/ 需求/ 定义/ 了/ 图/ 划分/ 的/ 相关/ 概念/ ./ 3.1/ 大图/ 迭代/ 处理/ 流程/ Pregel/ 是/ Google/ 公司/ 为/ 处理/ 海量/ 图/ 数据/ 而/ 开发/ 的/ 基于/ BSP/ 模型/ 的/ 分布式/ 迭代/ 处理/ 系统/ ./ 如图/ 1/ 所示/ ,/ 作为/ 一个/ 以/ 顶点/ 为/ 中心/ 的/ 基于/ Master/ -/ Slave/ 架构/ 的/ 系统/ ,/ Pregel/ 采用/ 邻接/ 表/ 组织/ 图/ 数据/ ./ Master/ 是/ 分布式系统/ 的/ 控制中心/ ,/ 而/ Slave/ 为/ 工作/ 节点/ ./ 用户/ 的/ 图/ 处理/ 作业/ 通过/ JobClient/ 向/ Master/ 提交/ ,/ 而/ Master/ 将/ 一个/ 图/ 处理/ 作业/ 分割/ 为/ 若干/ 任务/ (/ Ti/ )/ 并/ 分配/ 给/ Slave/ 节点/ 执行/ ./ 具体/ 计算/ 流程/ 为/ :/ (/ 1/ )/ 数据/ 加载/ // 划分/ ,/ 各/ 任务/ 从/ 分布式/ 存储系统/ 并行/ 加载/ 图/ 数据/ 至/ 本地/ ,/ 然后/ 进行/ 图/ 划分/ ,/ 每个/ 任务/ 处理/ 一个/ 子图/ ;/ (/ 2/ )/ 迭代/ 处理/ ,/ 每次/ 迭代/ 计算/ 视为/ 一个/ 超级/ 步/ ,/ 两个/ 超级/ 步/ 之间/ 通过/ 全局/ 同步/ 来/ 协调/ 各/ 任务/ 的/ 处理/ 进度/ ,/ 任务/ 之间/ 通过/ 消息/ 交换/ 中间/ 结果/ ,/ 在/ 每个/ 超级/ 步中/ ,/ 图/ 顶点/ 接收/ 消息/ 、/ 执行/ 本地/ 计算/ 并/ 发送/ 消息/ ,/ 因此/ 计算/ 负载/ 通常/ 由/ 出边/ 数目/ 决定/ ;/ (/ 3/ )/ 迭代/ 收敛/ 后/ ,/ 保存/ 计算结果/ ./ 根据/ Pregel/ 的/ 处理/ 流程/ ,/ 一个/ 良好/ 的/ 图/ 划分算法/ 应/ 满足/ 如下/ 约束/ :/ (/ 1/ )/ 在线/ 划分/ ,/ 可/ 根据/ 任务/ 数目/ ,/ 在/ 加载/ 的/ 同时/ ,/ 在线/ 完成/ 图/ 的/ 分割/ ;/ (/ 2/ )/ 任务/ 是/ 基本/ 的/ 计算/ 单位/ ,/ 应/ 满足/ 出边/ 数目/ 的/ 负载/ 均衡/ ;/ (/ 3/ )/ 减少/ 任务/ 之间/ 的/ 网络通信/ 规模/ ,/ 即子/ 图/ 之间/ 的/ 通信/ 边/ 规模/ ./ 3.2/ 大图/ 划分/ 定义/ 与/ 传统/ 的/ 通用/ 图/ 划分/ 不同/ ,/ 本节/ 将/ 根据/ 3.1/ 节/ 的/ 分析/ ,/ 定义/ 分布式/ 迭代/ 计算环境/ 下图/ 划分/ 的/ 概念/ ./ 定义/ 1/ ./ 图/ 划分/ ./ 给定/ 有向图/ G/ =/ (/ V/ ,/ E/ )/ ,/ 包含/ |/ V/ |/ 个/ 顶点/ 和/ |/ E/ |/ 条边/ ,/ 图/ 划分/ 是/ 将/ 图/ G/ 划分/ 为/ K/ 个子/ 图/ Gi/ =/ (/ Vi/ ,/ Ei/ )/ ,/ 同时/ 满足/ 式/ (/ 1/ )/ 的/ 约束/ ,/ 其中/ ,/ |/ G/ |/ 为/ 计算/ 负载/ ,/ 这里/ |/ G/ |/ =/ |/ E/ |/ ,/ ∪/ KEi/ ∩/ Ej/ =/ / ,/ i/ ≠/ j/ ,/ 而/ ρ/ 为/ 负载/ 偏斜/ 因子/ ,/ 理想/ 值为/ 1.0/ ./ 式/ (/ 1/ )/ 中/ 的/ Ecom/ 定义/ 2/ ./ 通信/ 边/ 集合/ ./ 给定/ 一条/ 边/ e/ =/ (/ u/ ,/ v/ )/ ,/ 如果/ u/ ∈/ Vi/ ∧/ v/ ∈/ Vj/ ,/ 且/ i/ ≠/ j/ ,/ 则/ 称/ e/ 为/ 从子/ 图/ Gi/ 到子/ 图/ Gj/ 的/ 一条/ 通信/ 边/ ./ 子图/ Gi/ 到/ Gj/ 的/ 所有/ 通信/ 边/ 构成/ 通信/ 边/ 集合/ Ecom/ 我们/ 将/ 在/ 第/ 4/ 节中/ ,/ 结合/ 具体/ 实例/ 进一步/ 介绍/ 定义/ 1/ 和/ 定义/ 2/ ./ 此外/ ,/ 为/ 便于/ 分析/ ,/ 本文/ 假设/ 图/ 按照/ 邻接/ 表/ 存储/ 且/ 图/ 顶点/ 按照/ 存储/ 顺序/ 连续/ 编号/ ./ 4/ 分布式/ 在/ 线图/ 划分算法/ OnFlyP/ 本节/ 首先/ 定量分析/ 了/ BFS/ 生成/ 图中/ 顶点/ 分布/ 的/ 局部性/ ,/ 提出/ 了/ OnFlyP/ 划分算法/ ,/ 然后/ 从/ 理论/ 上/ 分析/ 了/ OnFlyP/ 算法/ 的/ 通信/ 边/ 规模/ 的/ 上界值/ ./ Page54/ ./ 1/ 真实/ 图/ 的/ 局部性/ 分析/ 原始/ 输入/ 图/ 通常/ 是/ 采用/ 广度/ 优先/ 搜索/ (/ BFS/ )/ 从/ 物理/ 世界/ 抽取/ 构建/ [/ 13/ ]/ ,/ 其/ 顶点/ 的/ 分布/ 具有/ 一定/ 局部性/ ,/ 本文/ 的/ OnFlyP/ 算法/ 正是/ 利用/ 这一/ 特性/ 来/ 降低/ 通信/ 边/ 规模/ ./ 下面/ 首先/ 介绍/ 相关/ 概念/ ./ 定义/ 3/ ./ 前向/ 边集/ ./ 在/ 图/ 的/ 爬/ 取/ 过程/ 中/ ,/ 假设/ Qw/ 为/ 顶点/ 的/ BFS/ 搜索/ 队列/ ,/ Qp/ 为/ 已/ 搜索/ 过/ 的/ 顶点/ 队列/ ,/ 每次/ 移除/ Qw/ 的/ 队首/ 元素/ v/ ,/ 进行/ 新/ 的/ BFS/ 扩展/ ,/ 然后/ 将/ v/ 放入/ Qp/ 中/ ./ Γ/ v/ 为/ v/ 的/ 出边/ 的/ 目的/ 顶点/ 集合/ ,/ 则/ 本次/ 扩展/ 中/ 新/ 加入/ Qw/ 的/ 顶点/ 集合/ 为/ Vnew/ =/ {/ u/ |/ u/ ∈/ Γ/ v/ ∧/ u/ / (/ Qw/ ∪/ Qp/ )/ }/ ,/ 而/ 与/ 之/ 关联/ 的/ 出边/ 称为/ 顶点/ v/ 的/ 前/ 向/ 边集/ Efor/ 定义/ 4/ ./ 顶点/ 分布/ 的/ 局部性/ ./ 在/ BFS/ 爬取/ 过程/ 中/ ,/ 采用/ 邻接/ 表/ 顺序存储/ 从/ Qw/ 中/ 移除/ 的/ 队首/ 元素/ 及其/ 出边/ ,/ 则/ 对于/ 前向边/ 集中/ 的/ 目的/ 顶点/ ,/ 其/ 存储/ 顺序/ 与/ 图/ 构建/ 时/ 的/ 搜索/ 顺序/ 一致/ ,/ 在/ 存储/ 位置/ 上/ 相邻/ ,/ 称之为/ 顶点/ 分布/ 的/ “/ 局部性/ ”/ ./ 定义/ 5/ ./ 回溯/ 边集/ ./ 在/ BFS/ 爬取/ 过程/ 中/ ,/ 令/ Ev/ 为/ 顶点/ v/ 的/ 出边/ 集合/ ,/ 则/ 与/ 前/ 向/ 边集/ 对应/ ,/ 回溯/ 边集/ Ebackv/ =/ {/ e/ |/ e/ / Efor/ 如图/ 2/ 所示/ ,/ 以/ 1/ 号/ 顶点/ 为/ 起始/ 顶点/ 进行/ BFS/ 搜索/ ,/ 邻接/ 表中/ 顶点/ 的/ 存储/ 顺序/ 就是/ 原图/ 中/ 顶点/ 的/ BFS/ 拓扑/ 排序/ 结果/ ./ 例如/ 1/ 号/ 顶点/ 的/ 前/ 向/ 边集/ Efor/ {/ (/ 1/ ,/ 2/ )/ ,/ (/ 1/ ,/ 3/ )/ }/ ,/ 则/ 顶点/ 2/ 和/ 3/ 的/ 存储/ 位置/ 必然/ 是/ 相邻/ 的/ ./ 此外/ ,/ 在/ 真实世界/ 中/ ,/ 顶点/ 的/ 出边/ 行为/ 通常/ 具有/ 相似性/ ,/ 即/ 指向/ 相同/ 的/ 顶点/ ,/ 以/ 社交/ 网络/ 为例/ ,/ 这种/ 相似性/ 表现/ 为/ A/ 与/ B/ 的/ 好友/ 在/ 很大/ 程度/ 上/ 是/ 重叠/ 的/ ,/ 比如/ 他们/ 共同/ 关注/ 某些/ 明星/ ./ 这种/ 特性/ 使得/ 回溯/ 边/ 集中/ 出边/ 的/ 部分/ 目的/ 顶点/ ,/ 与/ 前/ 向/ 边/ 集中/ 的/ 目的/ 顶点/ 相似/ ,/ 也/ 具有/ 顶点/ 分布/ 的/ 局部性/ ./ 定义/ 6/ 给出/ 了/ 出边/ 分布/ 相似性/ 的/ 度量/ 方法/ ,/ 可/ 用于/ 度量/ 图中/ 顶点/ 分布/ 的/ 局部性/ ./ 定义/ 6/ ./ 出边/ 分布/ 的/ 相似性/ ./ / v/ ,/ u/ ∈/ V/ ,/ 使用/ Jaccard/ 系数/ 度量/ 其出/ 边/ 的/ 相似性/ (/ 重叠/ 程度/ [/ 34/ ]/ )/ :/ s/ (/ Γ/ v/ ,/ Γ/ u/ )/ =/ J/ (/ Γ/ v/ ,/ Γ/ u/ )/ =/ s/ (/ Γ/ v/ ,/ Γ/ u/ )/ 值/ 与/ 相似性/ 程度/ 成正比/ ./ 如图/ 2/ 中/ 的/ 顶点/ 6/ ,/ 有/ E6/ =/ {/ (/ 6/ ,/ 2/ )/ ,/ (/ 6/ ,/ 3/ )/ ,/ (/ 6/ ,/ 7/ )/ ,/ (/ 6/ ,/ 8/ )/ }/ 和/ E1/ =/ {/ (/ 1/ ,/ 2/ )/ ,/ (/ 1/ ,/ 3/ )/ }/ ,/ 故/ s/ (/ Γ/ 1/ ,/ Γ/ 6/ )/ =/ 0.5/ ./ 其中/ (/ 6/ ,/ 7/ )/ 和/ (/ 6/ ,/ 8/ )/ 属于/ Efor/ 的/ 目的/ 顶点/ 与/ Efor/ 和/ {/ 2/ ,/ 3/ }/ 中/ 集合/ 内/ 的/ 顶点/ 的/ 存储/ 位置/ 临近/ ./ 因此/ ,/ s/ (/ Γ/ 1/ ,/ Γ/ 6/ )/ ,/ 可以/ 反映/ 出/ 对应/ 目的/ 顶点/ 分布/ 的/ 局部性/ ./ 由/ 上述/ 分析/ 可知/ ,/ ∑/ v/ ,/ u/ ∈/ V/ 的/ 顶点/ 的/ 规模/ 成正比/ ./ 然而/ ,/ 如果/ 直接/ 使用/ ∑/ v/ ,/ u/ ∈/ V/ Γ/ u/ )/ 作为/ 局部性/ 的/ 衡量/ 指标/ ,/ 其过/ 高/ 的/ 计算/ 复杂度/ O/ (/ (/ maxd/ )/ η/ )/ 对于/ 大图/ 是/ 不/ 可行/ 的/ ,/ 其中/ maxd/ 为/ 图/ G/ 的/ 最大/ 出/ 度/ ,/ 而/ η/ =/ |/ V/ |/ (/ |/ V/ |/ -/ 1/ )/ // 2/ ,/ |/ V/ |/ 为/ 顶点/ 数目/ ./ 考虑/ 到/ 顶点/ 顺序/ 编号/ 的/ 情况/ 下/ ,/ 编号/ 值/ 反映/ 了/ 其/ 存储/ 位置/ 的/ “/ 邻近/ 程度/ ”/ ,/ 因此/ 我们/ 采用/ 聚簇/ 系数/ 来/ 定量/ 描述/ 顶点/ 分布/ 的/ 局部性/ ./ 定义/ 7/ ./ 聚簇/ 系数/ ./ 给定/ 真实/ 图/ G/ =/ (/ V/ ,/ E/ )/ ,/ 令/ G/ 和/ Grand/ 的/ 局部/ 系数/ 的/ 比值/ 为/ 真实/ 图/ 的/ 聚簇/ 系数/ :/ C/ (/ G/ )/ =/ F/ (/ Grand/ )/ // F/ (/ G/ )/ ,/ 其中/ ,/ Grand/ 是/ 与/ 真实/ 图/ G/ 对应/ 的/ 随机/ 图/ ,/ 具有/ |/ V/ |/ 个/ 顶点/ 和/ |/ E/ |/ 条出/ 边/ 但/ 顶点/ 是/ 随机/ 分布/ 的/ ./ 局部/ 系数/ F/ (/ G/ )/ 由/ G/ 中/ 所有/ 顶点/ 的/ 局部/ 距离/ f/ (/ v/ )/ 通过/ 求和/ 计算/ 得到/ ,/ f/ (/ v/ )/ 的/ 计算/ 方式/ 为/ f/ (/ v/ )/ =/ 烄/ ∑/ u/ ∈/ sort/ (/ Γ/ v/ 烅/ 0/ ,/ 烆/ 其中/ ,/ sort/ (/ Γ/ v/ )/ 表示/ 将/ Γ/ v/ 中/ 顶点/ 按/ 编号/ 升序/ 排序/ ,/ Code/ (/ ui/ +/ 1/ )/ 为/ 升序/ 序列/ 中/ 第/ i/ +/ 1/ 个/ 顶点/ ui/ +/ 1/ 的/ 编号/ 值/ ./ F/ (/ G/ )/ 的/ 值/ 与/ 局部性/ 程度/ 成反比/ ,/ 而/ C/ 值则/ 反映/ 了/ 真实/ 图/ 与/ 随机/ 图/ 的/ 局部/ 距离/ 的/ 比值/ ./ 给定/ 顶点/ 规模/ 和/ 出边/ 规模/ 后/ ,/ F/ (/ Grand/ )/ 的/ 值/ 是/ 固定/ 的/ ,/ 因此/ ,/ C/ 值/ 与/ F/ (/ G/ )/ 的/ 值/ 成反比/ ,/ 即/ 与/ 真实/ 图/ 的/ 局部性/ 程度/ 成正比/ ./ 第/ 6/ 节中/ 的/ 实验/ 结果显示/ ,/ 真实/ 图均/ 具有/ 较/ 高/ 的/ C/ 值/ ,/ 尤其/ 对于/ BFS/ 生成/ 图/ ./ 聚簇/ 系数/ 只是/ 用于/ 验证/ 真实/ 图/ 具有/ 较/ 高/ 局部性/ 的/ 衡量/ 指标/ ,/ 并/ 不是/ OnFlyP/ 算法/ 的/ 直接/ 输入/ 参数/ ./ 但是/ 这种/ 局部性/ ,/ 是/ OnFlyP/ 算法/ 能够/ 有效/ 减少/ 通信/ 边/ 规模/ 的/ 基础/ (/ 见/ 4.2/ ./ 3/ 小节/ )/ ./ 4.2/ OnFlyP/ 划分算法/ OnFlyP/ 算法/ 依赖于/ 4.1/ 小节/ 所/ 分析/ 的/ 局部性/ ,/ 因此/ 本/ 节/ 首先/ 介绍/ 我们/ 在/ BC/ -/ BSP/ 系统/ 上/ 已经/ 实现/ 的/ Range/ 划分/ ,/ 可/ 保留/ 原始/ 图/ 局部性/ ,/ 然后/ 描述/ OnFlyP/ 划分/ 的/ 处理/ 流程/ ,/ 最后/ 分析/ BFS/ 生成/ 图/ 经过/ Page6OnFlyP/ 划分/ 后/ ,/ 各子/ 图/ 间通信/ 边/ 规模/ 的/ 上界值/ ./ 4.2/ ./ 1BC/ -/ BSP/ 的/ Range/ 划分/ Range/ 划分/ 是/ 保留/ 原始/ 图/ 局部性/ (/ 邻接/ 表/ 存储/ 顺序/ )/ 的/ 一种/ 直观/ 方法/ ,/ 已/ 被/ Giraph/ 和/ BC/ -/ BSP/ 所/ 采用/ [/ 6/ ,/ 8/ ]/ ./ 在/ BC/ -/ BSP/ 中/ ,/ Range/ 划分/ 直接/ 将/ 原始/ 图/ 的/ 邻接/ 表/ 文件/ 切/ 分为/ 若干/ 连续/ 子块/ ./ 若以/ HDFS/ 为/ 存储介质/ ,/ 在/ 数据/ 加载/ 前/ ,/ 通过/ 读取/ 元/ 数据/ 信息/ ,/ 可/ 将/ 输入/ 图/ 按照/ 字节/ 大小/ 均等/ 划分/ 为/ 若干/ 分片/ (/ Split/ )/ ,/ 每个/ 任务/ 负责/ 加载/ 一个/ 分片/ 所/ 对应/ 的/ 邻接/ 表/ 数据/ ./ K/ 个/ 任务/ 并行/ 加载/ 的/ 图/ 数据/ 直接/ 驻留/ 任务/ 本地/ ,/ 然后/ 建立/ 反映/ 顶点/ 分布/ 的/ 路由/ 信息/ 表/ R/ =/ {/ R1/ ,/ R2/ ,/ …/ ,/ RK/ ,/ RK/ +/ 1/ }/ ,/ 为/ 后续/ 迭代/ 计算/ 中/ 的/ 消息/ 寻址/ 提供/ 服务/ ./ 其中/ RK/ +/ 1/ 为/ G/ 的/ 最大/ 顶点/ 编号/ ,/ Ri/ 是/ Ti/ 所/ 加载/ 图/ 数据/ 的/ 最小/ 顶点/ 编号/ ,/ 且/ 有/ Rx/ </ Rx/ +/ 1/ ./ 给定/ 消息/ 的/ 目的/ 顶点/ v/ ,/ 根据/ 式/ (/ 2/ )/ 可/ 计算/ 得到/ 其/ 所在/ 任务/ Ti/ ./ i/ =/ x/ ,/ Rx/ / getId/ (/ v/ )/ </ Rx/ +/ 1/ ,/ x/ ∈/ [/ 1/ ,/ K/ ]/ (/ 2/ )/ 以图/ 2/ 为例/ ,/ 假设/ 通过/ Range/ 方法/ 将/ 原图/ 划分/ 为/ 3/ 个子/ 图/ ,/ 则/ 划分/ 后/ 的/ 顶点/ 集合/ 为/ V1/ =/ {/ 1/ ,/ 2/ ,/ 3/ ,/ 4/ }/ ,/ V2/ =/ {/ 5/ ,/ 6/ }/ ,/ V3/ =/ {/ 7/ ,/ 8/ }/ ./ 而/ 路由/ 信息/ 表/ R/ =/ {/ 1/ ,/ 5/ ,/ 7/ ,/ 8/ }/ ./ 由于/ 按照/ 字节/ 大小/ 均等/ 分割/ ,/ 所以/ 每个/ 子图/ 的/ 负载/ |/ Gi/ |/ =/ |/ Ei/ |/ 是/ 相对/ 均衡/ 的/ ./ 在/ 本例/ 中/ ,/ 有/ |/ G1/ |/ =/ 5/ ,/ |/ G2/ |/ =/ 6/ ,/ |/ G3/ |/ =/ 5/ ,/ 负载/ 偏斜/ 因子/ ρ/ =/ 1.125/ ./ Range/ 划分/ 保留/ 了/ 第/ 4.1/ 节中/ 的/ 局部/ 分布/ 特点/ ./ 如/ 顶点/ 1/ 、/ 2/ 和/ 3/ 均/ 位于/ 子图/ G1/ ,/ 由/ 任务/ T1/ 处理/ ,/ 所以/ 边/ (/ 1/ ,/ 2/ )/ 和/ (/ 1/ ,/ 3/ )/ 不/ 引入/ 网络通信/ ./ 注意/ 到/ 顶点/ 5/ 和/ 6/ 均/ 是/ 4/ 号/ 顶点/ 的/ 出边/ 顶点/ 且/ 在/ 存储/ 位置/ 上/ 相邻/ ,/ 但/ 由于/ 三者/ 所在/ 子图/ 不同/ ,/ (/ 4/ ,/ 5/ )/ 和/ (/ 4/ ,/ 6/ )/ 成为/ 通信/ 边/ ./ 类似/ 地/ ,/ 回溯/ 边/ (/ 6/ ,/ 2/ )/ 和/ (/ 6/ ,/ 3/ )/ 也/ 是/ 通信/ 边/ ./ 在/ 4.2/ ./ 2/ 小节/ 中/ ,/ 我们/ 将/ 介绍/ 基于/ 定向/ 边/ 交换/ 模型/ 的/ OnFlyP/ 算法/ 来/ 降低/ 上述/ 通信/ 边/ 的/ 规模/ ./ 4.2/ ./ 2OnFlyP/ 划分/ 首先/ 引入/ 定向/ 边/ 交换/ 模型/ 的/ 概念/ ./ 定义/ 8/ ./ 定向/ 边/ 交换/ 模型/ ./ Range/ 划分/ 模式/ 下/ ,/ 任务/ Ti/ 加载/ 的/ 子/ 图为/ Gi/ =/ {/ Vi/ ,/ Ei/ }/ ,/ 任取/ 顶点/ v/ ∈/ Vi/ ,/ 则/ Ecom/ 任务/ Tj/ ,/ 即/ 为/ 定向/ 边/ 交换/ 模型/ ./ ij/ [/ v/ ]/ =/ EcomOnFlyP/ 划分/ 是/ 建立/ 在/ 定义/ 8/ 的/ 基础/ 之上/ ./ 在/ OnFlyP/ 划分/ 中/ ,/ 迁移/ 的/ 出边/ Ecom/ 以/ 邻接/ 表/ 格式/ 组织/ ,/ 其中/ Tj/ 中/ 的/ 顶点/ v/ 是/ 冗余/ 备份/ ,/ 记为/ vb/ ,/ 而/ Ti/ 中/ 的/ 顶点/ v/ 是/ 主/ 备份/ ./ 为/ 同步/ vb/ 和/ v/ ,/ 迁移/ 后/ 为/ Gi/ 添加/ 一条/ 出边/ ,/ Ei/ =/ Ei/ ∪/ {/ (/ v/ ,/ Tj/ )/ }/ ./ 而/ 对/ Gj/ ,/ 有/ Ej/ =/ Ej/ ∪/ Ecom/ 定向/ 迁移/ Ecom/ |/ Ecomij/ |/ -/ |/ Ecom/ 时/ ,/ 才/ 会/ 降低/ 通信/ 边集/ 的/ 规模/ ./ 具体/ 地/ ,/ 对于/ 顶点/ v/ ,/ 其出/ 边/ 迁移/ 方向/ 的/ 集合/ 为/ {/ Tx/ |/ |/ Ecom/ 表示/ v/ 的/ 出度/ 顶点/ 集合/ ,/ 则/ |/ Ecom/ 后者/ 可以/ 通过/ 路由表/ R/ 使用/ 式/ (/ 2/ )/ 快速/ 计算/ 得到/ ./ 如图/ 3/ 所示/ ,/ OnFlyP/ 划分/ 后/ ,/ T1/ 的/ 顶点/ 4/ 将/ 出边/ (/ 4/ ,/ 5/ )/ 和/ (/ 4/ ,/ 6/ )/ 迁移/ 到/ 任务/ T2/ ,/ 对应/ 地/ ,/ 任务/ T2/ 中/ 的/ 顶点/ 6/ 也/ 将/ 出边/ (/ 6/ ,/ 2/ )/ 和/ (/ 6/ ,/ 3/ )/ 迁移/ 到/ T1/ ,/ 出边/ (/ 6/ ,/ 7/ )/ 和/ (/ 6/ ,/ 8/ )/ 迁移/ 到/ T3/ ./ 而/ T3/ 中/ 的/ 顶点/ 7/ 和/ 顶点/ 8/ 也/ 做/ 了/ 类似/ 处理/ ./ 以/ G1/ 为例/ ,/ 划分/ 后/ ,/ V1/ =/ {/ 1/ ,/ 2/ ,/ 3/ ,/ 4/ }/ ∪/ {/ 6/ ,/ 8/ }/ ,/ 其中/ {/ 6/ ,/ 8/ }/ 为/ 冗余/ 备份/ 顶点/ ./ 任务/ T1/ 与/ T2/ 之间/ 的/ 通信/ 边集/ 为/ Ecom/ {/ (/ 6/ ,/ T1/ )/ }/ ,/ 其中/ T2/ 表示/ 4/ 号/ 顶点/ 在/ T2/ 上/ 存在/ 冗余/ 备份/ ,/ 而/ T1/ 表示/ 6/ 号/ 顶点/ 在/ T1/ 上/ 存在/ 冗余/ 备份/ ./ 显然/ ,/ 从/ 网络通信/ 角度/ ,/ 执行/ OnFlyP/ 划分/ 后/ ,/ |/ EcomEcom2/ 降为/ 1/ ,/ |/ Ecom21/ |/ 的/ 值/ 由/ 4/ 降为/ 2/ ,/ 类似/ 地/ ,/ |/ EcomOnFlyP/ 算法/ 采用/ Master/ -/ Slave/ 架构/ ,/ 如/ 算法/ 1/ 所示/ ,/ 在/ 各/ 任务/ 加载/ 数据/ 前/ ,/ Master/ 首先/ 从/ 分布式文件系统/ 上/ 读取/ 图/ G/ 的/ 元/ 数据/ 信息/ ,/ 建立/ K/ 个/ Split/ 分片/ 供/ 各/ 任务/ 加载/ 图/ 数据/ ,/ 然后/ Master/ 读取/ 每个/ 分片/ 对应/ 的/ 首条/ 邻接/ 表/ 数据/ ,/ 得到/ 每个/ 任务/ 负责/ 处理/ 的/ 最小/ 图/ 顶点/ 编号/ ,/ 从而/ 构造/ 路由表/ R/ ,/ 之后/ 将/ R/ 和/ Split/ 信息/ 发送给/ 所有/ 任务/ ./ 算法/ 1/ ./ 分布式/ 在/ 线图/ 划分算法/ OnFlyP/ ./ 输入/ :/ 待/ 划分/ 图/ G/ ,/ 任务/ 数目/ K/ ,/ 图/ 顶点/ 数/ |/ V/ |/ 输出/ :/ 图/ 划分/ 结果/ {/ Gi/ }/ OnFlyP/ (/ G/ ,/ K/ ,/ |/ V/ |/ )/ 1/ ./ Master/ :/ 2/ ./ R/ =/ build/ (/ G/ ,/ |/ V/ |/ )/ ;/ // // 构建/ 路由表/ R3/ ./ sendRandSplitstoallTasks/ ;/ 4/ ./ Taski/ (/ Ti/ )/ :/ 5/ ./ receiveRandSplitifromMaster/ ;/ 6/ ./ WHILESpliti/ ≠/ / DO7/ ./ adj/ (/ v/ )/ =/ loadGraph/ (/ Spliti/ )/ ;/ // // 加载/ 邻接/ 表/ Page78/ ./ {/ (/ Tx/ ,/ Ecom9/ ./ FOR/ / (/ Tx/ ,/ Ecom10/ ./ IFassert/ (/ Tx/ ,/ Ecom11/ ./ send/ (/ v/ ,/ Ecom12/ ./ updateEdges/ (/ adj/ (/ v/ )/ )/ ;/ 13/ ./ ENDIF14/ ./ ENDFOR15/ ./ ENDWHILE16/ ./ Vi/ =/ Vi/ ∪/ Vb/ ,/ Ei/ =/ Ei/ ∪/ Esyn/ ∪/ Ein/ ;/ 17/ ./ RETURNGi/ =/ (/ Vi/ ,/ Ei/ )/ ;/ 在/ Slave/ 端/ ,/ 任务/ Ti/ 的/ 处理/ 流程/ 为/ :/ 首先/ 接收/ 路由表/ R/ 和/ 对应/ 的/ 分片/ 信息/ Spliti/ ,/ 然后/ 逐条/ 加载/ 邻接/ 表/ 数据/ adj/ (/ v/ )/ ,/ 将/ adj/ (/ v/ )/ 中/ 的/ 出边/ 按照/ 定向/ 边/ 交换/ 模型/ 计算/ 交换/ 方向/ ,/ 其中/ (/ Tx/ ,/ Ecomv/ 可以/ 迁移/ 到/ 任务/ Tx/ 的/ 出边/ 集合/ 为/ Ecom/ 合/ {/ (/ Tx/ ,/ Ecom/ 行/ 迁移/ 判定/ ,/ 如果/ 判定/ 结果/ 为/ true/ ,/ 则/ 将/ (/ v/ ,/ Ecom/ 发送到/ 任务/ Tx/ ,/ 同时/ 将/ adj/ (/ v/ )/ 的/ 出边/ 中/ 的/ Ecom/ 替换/ 为/ Tx/ ,/ 否则/ 不予/ 处理/ ./ assert/ (/ )/ 的/ 判定/ 标准/ 为/ 当/ i/ ≠/ x/ 时/ ,/ 取/ |/ Ecom/ 的/ 返回值/ ,/ 否则/ assert/ (/ )/ 为/ false/ ,/ 以/ 保证/ 通信/ 收益/ ./ 不同/ 的/ assert/ (/ )/ 判定/ 方式/ 将/ 影响/ 负载/ 均衡/ 和/ 划分/ 效果/ ,/ 我们/ 将/ 在/ 第/ 5/ 节/ 详细/ 介绍/ ./ 各/ 任务/ 上/ 冗余/ 备份/ 顶点/ 的/ 集合/ 记为/ Vb/ ,/ 用于/ 同步/ 冗余/ 备份/ 顶点/ 的/ 出边/ 记为/ Esyn/ ,/ 接收/ 的/ 迁移/ 边记/ 为/ Ein/ ./ 显然/ ,/ 算法/ 1/ 可/ 在/ 数据/ 加载/ 阶段/ 在线/ 完成/ 图/ 划分/ ./ 4.2/ ./ 3OnFlyP/ 算法/ 的/ 通信/ 边集/ 与/ 计算/ 开销/ 分析/ 本/ 节/ 针对/ BFS/ 生成/ 图/ ,/ 从/ 理论/ 上/ 分析/ OnFlyP/ 算法/ 划分/ 后/ ,/ 子图/ 之间/ 的/ 通信/ 边集/ 规模/ 的/ 上界值/ ./ 引理/ 1/ ./ 图/ G/ =/ (/ V/ ,/ E/ )/ ,/ 假设/ 通过/ OnFlyP/ 算法/ 分成/ K/ 个子/ 图/ Gi/ ,/ 由/ Gi/ 与/ Gj/ 之间/ 的/ 前/ 向/ 边集/ Efor/ 所/ 产生/ 的/ 通信/ 边集/ 记为/ for/ (/ Ecom/ 则/ 所有/ 前向/ 边集/ 构成/ 的/ 通信/ 边集/ 规模/ 的/ 上限/ 为/ {/ maxi/ ,/ j/ ∑/ i/ ∈/ [/ 1/ ,/ K/ ]/ ∑/ j/ ∈/ [/ 1/ ,/ K/ ]/ 证明/ ./ 因/ K/ 远/ 小于/ |/ V/ |/ ,/ 可/ 认为/ 对/ / v/ ∈/ V/ ,/ 有/ v/ |/ </ |/ Ev/ |/ =/ |/ Γ/ v/ |/ </ min/ {/ |/ Vi/ |/ }/ ,/ i/ ∈/ [/ 1/ ,/ K/ ]/ ,/ Γ/ v/ 为/ |/ Efor/ 目的/ 顶点/ 集合/ ./ 另一方面/ ,/ 由/ 第/ 4.1/ 节/ 分析/ 知/ ,/ Efor/ 对应/ 的/ 目的/ 顶点/ 是/ 严格/ 连续/ 分布/ 的/ ./ 因此/ ,/ Efor/ 迁移/ 后/ ,/ 目的/ 顶点/ 最/ 多/ 跨越/ 两个/ 子图/ ,/ 而/ 这种/ 情况/ 最/ 多/ 发生/ (/ K/ -/ 1/ )/ 次/ ./ 因此/ 冗余/ 顶点/ 的/ 上/ 限值/ 为/ |/ V/ |/ +/ (/ K/ -/ 1/ )/ ,/ 即/ 为/ 通信/ 边集/ 规模/ ./ 引理/ 2/ ./ 图/ G/ =/ (/ V/ ,/ E/ )/ ,/ 假设/ 通过/ OnFlyP/ 算法/ 分成/ K/ 个子/ 图/ Gi/ ,/ 由/ Gi/ 与/ Gj/ 之间/ 的/ 回溯/ 边集/ ij/ 所/ 产生/ 的/ 通信/ 边集/ 记为/ back/ (/ EcomEback/ 于/ |/ V/ |/ ,/ 且/ 回溯/ 边/ 所/ 对应/ 的/ 目的/ 顶点/ 严格/ 的/ 连续/ 分布/ ,/ 则/ G/ 中/ 由/ 所有/ 回溯/ 边集/ 构成/ 的/ 通信/ 边集/ 规模/ 的/ 上限/ 为/ maxi/ ,/ j/ ∑/ i/ ∈/ [/ 1/ ,/ K/ ]/ ∑/ j/ ∈/ [/ 1/ ,/ K/ ]/ 证明/ ./ 与/ 引理/ 1/ 的/ 证明/ 过程/ 类似/ ,/ 但/ 由于/ 回溯/ 边集/ 的/ 目的/ 顶点/ 并非/ 全局/ 有序/ ,/ 每个/ 顶点/ 的/ 回溯/ 边均/ 可能/ 指向/ 两个/ 子图/ ./ 所以/ 每个/ 顶点/ 的/ 回溯/ 边/ 被/ 迁移/ 后/ ,/ 最/ 多/ 产生/ 两个/ 冗余/ 备份/ 顶点/ ./ 定理/ 1/ ./ 对于/ BFS/ 生成/ 图/ ,/ 采用/ OnFlyP/ 算法/ 划分/ 为/ K/ 个子/ 图后/ ,/ 若/ K/ 远/ 小于/ |/ V/ |/ ,/ 且/ 前/ 向/ 边集/ 和/ 回溯/ 边集/ 所/ 对应/ 的/ 图/ 顶点/ 均/ 严格/ 连续/ 分布/ ,/ 则/ 所有/ 子图/ 之间/ 的/ 通信/ 边集/ 规模/ 的/ 上界值/ 为/ 3/ |/ V/ |/ +/ (/ K/ -/ 1/ )/ ./ 证明/ ./ 对于/ 顶点/ v/ ,/ 其边/ 集/ Ev/ =/ Eforv/ ∩/ Eback/ 有/ Efor/ 份/ 顶点/ 规模/ 的/ 上限/ 为/ |/ V/ |/ +/ (/ K/ -/ 1/ )/ +/ 2/ |/ V/ |/ ./ 证毕/ ./ 需要/ 注意/ 的/ 是/ ,/ OnFlyP/ 算法/ 虽可/ 降低/ 通信/ 规模/ ,/ 但/ 也/ 增加/ 了/ 额外/ 开销/ :/ 备份/ 顶点/ 的/ 同步/ 消息/ 开销/ 和/ 更新/ 时/ 的/ CPU/ 计算/ 开销/ ,/ 其/ 对/ 整体/ 性能/ 的/ 影响/ 可用/ 式/ (/ 3/ )/ 估算/ ./ 其中/ ,/ x/ 为/ 备份/ 顶点/ 数目/ ,/ cnet/ 为/ 一条/ 消息/ 的/ 网络通信/ 开销/ ,/ ccpu/ 为/ 一个/ 备份/ 顶点/ 更新/ 时/ 的/ 计算/ 开销/ ,/ 而/ assert/ (/ )/ 的/ 判定/ 标准/ 为/ |/ Ecom2/ ,/ 因此/ 降低/ 的/ 通信/ 边/ 规模/ X/ / 2x/ ./ 此外/ ,/ 单位/ 数据/ 的/ 网络/ 传输/ 开销/ 通常/ 大于/ 其/ CPU/ 计算/ 开销/ ,/ 即/ cnet/ >/ ccpu/ ,/ 故有/ Φ/ (/ x/ )/ / 0/ ,/ 即/ 不/ 考虑/ 负载/ 偏斜/ 所/ 引起/ 的/ 水桶/ 效应/ 的/ 前提/ 下/ ,/ OnFlyP/ 会/ 提高/ 整体/ 计算/ 性能/ ,/ 且/ 提升/ 比例/ 与/ 备份/ 顶点/ 数目/ 成正比/ ./ 5/ 负载/ 均衡/ 控制/ 机制/ 真实/ 图/ 通常/ 存在/ 幂率/ 偏斜/ 特点/ ,/ 即/ 少数/ 顶点/ 关联/ 了/ 大部分/ 边/ ,/ 在/ 第/ 4/ 节/ 的/ OnFlyP/ 算法/ 中/ ,/ 我们/ 使/ ij/ [/ v/ ]/ |/ / 2/ 作为/ assert/ (/ )/ 的/ 判定/ 标准/ ,/ 可能/ 会/ 用/ |/ Ecom/ 导致/ 大量/ 的/ 出边/ 被/ 迁移/ 到/ 少数/ 任务/ 上/ ,/ 造成/ 负载/ 偏斜/ ./ 本节/ 我们/ 将/ 介绍/ 两种/ 负载/ 均衡/ 控制/ 机制/ ,/ 作为/ OnFlyP/ 算法/ 中/ assert/ (/ )/ 的/ 判定/ 标准/ ./ 5.1/ 实时控制/ 机制/ 在/ 实时控制/ 机制/ 中/ ,/ 我们/ 为/ 每个/ 任务/ Ti/ 设置/ 一个/ 维度/ 为/ K/ 的/ 实时/ 阈值/ 向量/ θ/ i/ ./ 假设/ t/ 时刻/ Gi/ 欲/ 向/ Gx/ 执行/ send/ 操作/ ,/ 则/ assert/ (/ )/ 判定/ 方法/ 为/ :/ 如果/ 满足/ |/ Ecomix/ 是/ t/ 时刻/ 指向/ 任务/ Tx/ 的/ 出边/ 迁移/ 阈值/ ,/ 而/ θ/ t/ θ/ t/ +/ ,/ x/ ∈/ [/ 1/ ,/ K/ ]/ ./ θ/ tix/ [/ v/ ]/ |/ / θ/ tPage8/ 的/ 结果/ 实时/ 更新/ ./ 更新/ 规则/ 为/ :/ 如果/ 子图/ Gx/ 在/ t/ 时刻/ 的/ 负载/ 大于/ 平均/ 负载/ ,/ 即/ real/ (/ Gx/ )/ |/ t/ >/ |/ E/ |/ // K/ ,/ 则/ send/ 操作/ 的/ 返回值/ 为/ false/ ,/ θ/ t/ 则/ 仍/ 为/ 2/ ./ 据此/ ,/ 当/ send/ 所/ 指向/ 的/ 目的/ 任务/ 的/ 负载/ 过重/ 时/ ,/ 将/ 禁止/ 其它/ 任务/ 向/ 其/ 继续/ 转移/ 出边/ ./ real/ (/ Gx/ )/ |/ t/ 由式/ (/ 4/ )/ 计算/ 得到/ ,/ 其中/ j/ ,/ l/ ∈/ [/ 1/ ,/ K/ ]/ 且/ 均/ 不/ 等于/ x/ ,/ load/ (/ Ex/ )/ |/ t/ 是/ 截至/ t/ 时刻/ 已/ 加载/ 的/ Gx/ 中/ 的/ 出边数/ ,/ t/ 是/ Gx/ 所/ 接收/ 的/ 冗余/ 顶点/ 集合/ ,/ 而/ VsenVrec/ 发送/ 的/ 冗余/ 顶点/ 集合/ ./ real/ (/ Gx/ )/ |/ t/ =/ load/ (/ Ex/ )/ |/ t/ +/ ∑/ 由于/ θ/ t/ 法/ 继续/ 更新/ ,/ 故/ 之后/ Gi/ 不/ 可以/ 向/ Gx/ 转移/ 出边/ ,/ 即使/ 在/ t/ +/ Δ/ t/ 时刻/ real/ (/ Gx/ )/ |/ t/ +/ Δ/ t/ / |/ E/ |/ // K/ ./ 我们/ 称/ 这种/ 均衡/ 控制/ 机制/ 下/ 的/ 划分/ 为/ OnFlyP/ -/ R/ 划分/ ./ 实时控制/ 机制/ 是/ 在/ 划分/ 时/ 实时/ 监控/ 出边/ 的/ 定向/ 交换/ ,/ 因此/ 可以/ 在/ 数据/ 加载/ 的/ 同时/ 完成/ 图/ 数据/ 划分/ ,/ 不会/ 增加/ 额外/ 的/ 划分/ 开销/ ./ 然而/ ,/ 该/ 机制/ 缺乏/ 对/ 全图/ 的/ 统计/ 信息/ ,/ 考虑/ 到/ 各/ 任务/ 实际/ 划分/ 进度/ 的/ 不同/ ,/ 使/ ix/ 被/ 设置/ 为/ 无穷大/ 的/ 时间/ 点/ 具有/ 随机性/ ,/ 难以/ 保得/ θ/ t/ 证/ 最终/ 划分/ 效果/ ./ 例如/ ,/ 当/ 任务/ Tx/ 的/ 划分/ 进度/ 较慢/ 时/ ,/ 则/ t/ 时刻/ 子图/ Gx/ 的/ 迁出/ 边较/ 少/ ,/ 而/ 其它/ 任务/ 迁移/ 到/ Gx/ 的/ 出边/ 较/ 多/ ,/ 增大/ 了/ t/ 时刻/ θ/ t/ 大/ 的/ 概率/ ./ 且/ 在/ 后续/ 处理过程/ 中/ ,/ 即使/ Gx/ 继续/ 迁移/ 出边/ 而/ 导致/ real/ (/ Gx/ )/ |/ t/ +/ Δ/ t/ </ |/ E/ |/ // K/ ,/ 由于/ Gi/ 端的/ θ/ t/ +/ Δ/ tix/ =/ θ/ t/ 体/ 的/ 出边/ 迁移/ 规模/ 减少/ ,/ 限制/ 了/ 对/ 通信/ 边/ 规模/ 的/ 优化/ 效果/ ./ 以图/ 2/ 中/ 的/ 图/ G/ 为例/ ,/ 图/ 4/ 展示/ 了/ 实时控制/ 机制/ 下/ 的/ 一个/ 可能/ 的/ 处理/ 流程/ ./ 在/ t0/ 时刻/ ,/ 各/ 任务/ 完成/ 初始化/ ,/ 准备/ 加载/ 图/ 数据/ ,/ 因此/ 实时/ 负载/ 均/ 为/ 0/ ,/ 阈值/ 向量/ 除/ θ/ t/ 始值/ 2/ ./ 假设/ t1/ 时刻/ 各子/ 图/ 之间/ 产生/ send/ 请求/ ,/ 则/ assert/ (/ )/ 判定/ 结果/ 均/ 为/ true/ ,/ 允许/ 执行/ ./ 在/ t2/ 时刻/ ,/ 以/ G1/ 为例/ ,/ 已经/ 加载/ 5/ 条边/ {/ (/ 1/ ,/ 2/ )/ ,/ (/ 1/ ,/ 3/ )/ ,/ (/ 3/ ,/ 4/ )/ ,/ (/ 4/ ,/ 5/ )/ ,/ (/ 4/ ,/ 6/ )/ }/ ,/ 其中/ {/ (/ 4/ ,/ 5/ )/ ,/ (/ 4/ ,/ 6/ )/ }/ 迁移/ 到/ G2/ ,/ 同时/ 接收/ G2/ 发送/ 的/ 出边/ {/ (/ 6/ ,/ 2/ )/ ,/ (/ 6/ ,/ 3/ )/ }/ ,/ 故/ 实时/ 负载/ 仍为/ 5/ ./ 需要/ 注意/ 的/ 是/ ,/ G1/ 的/ send/ 操作/ 返回值/ 为/ true/ ,/ 因为/ 此时/ G2/ 的/ 负载/ 为/ 4/ ,/ 小于/ 负载/ 均值/ (/ 16/ // 3/ )/ ./ 但是/ G3/ 的/ send/ 操作/ 返回值/ 为/ false/ ,/ 因为/ 接收/ G3/ 发送/ 的/ 出边/ 后/ ,/ G2/ 的/ 负载/ 为/ 6/ ,/ 大于/ 负载/ 均值/ ./ 所以/ ,/ 在/ t2/ 时/ t2/ 刻/ ,/ θ/ 12/ 不变/ ,/ 但/ θ/ 发送/ 完出/ 边/ {/ (/ 8/ ,/ 2/ )/ ,/ (/ 8/ ,/ 3/ )/ }/ 后/ ,/ G1/ 的/ 负载/ 为/ 7/ ,/ 超过/ 均值/ ,/ 故/ θ/ 才/ 可以/ 更新/ θ/ t/ 均衡/ ./ 在/ 最坏/ 情况/ 下/ ,/ 其余/ (/ K/ -/ 1/ )/ 个子/ 图均/ 需/ 执行/ send/ 之后/ ,/ 才/ 可以/ 完成/ 阈值/ 向量/ 的/ 更新/ ./ 假设/ 每次/ send/ 的/ 出边/ 规模/ 达到/ 最大/ 出度/ maxd/ ,/ 则/ 负载/ 偏斜/ 因子/ 为/ 5.2/ 最小/ 对称/ 矩阵/ 控制/ 本/ 节/ 介绍/ 一种/ 最小/ 对称/ 矩阵/ 控制/ 机制/ ,/ 通过/ 两次/ 遍历/ 图/ 数据/ ,/ 避免/ 了/ 实时控制/ 机制/ 下/ 划分/ 效果/ 的/ 不确定性/ ./ 两次/ 遍历/ 分别/ 完成/ 如下/ 工作/ :/ (/ 1/ )/ 加载/ 数据/ 并/ 建立/ 交换/ 矩阵/ 珨/ 犕/ ;/ (/ 2/ )/ 在/ 珨/ 犕/ 的/ 指导/ 下/ ,/ 完成/ 划分/ ./ 该/ 机制/ 下/ 的/ 划分/ 称为/ OnFlyP/ -/ M/ ,/ 算法/ 2/ 描述/ 了/ 划分/ 过程/ ./ 其中/ ,/ 第/ 20/ 行/ 的/ “/ exchangeedges/ ”/ 过程/ ,/ 除/ assert/ (/ )/ 判定/ 机制/ ,/ 均/ 与/ 算法/ 1/ 的/ 第/ 8/ ~/ 14/ 行/ 相同/ ./ 算法/ 2/ ./ 最小/ 对称/ 矩阵/ 控制/ 的/ OnFlyP/ 划分/ ./ 输入/ :/ 待/ 划分/ 图/ G/ ,/ 任务/ 数目/ K/ ,/ 图/ 顶点/ 数/ |/ V/ |/ 输出/ :/ 图/ 划分/ 结果/ {/ Gi/ }/ OnFlyP/ -/ M/ (/ G/ ,/ K/ ,/ |/ V/ |/ )/ 1/ ./ receiveRandSplitifromMaster/ ;/ 2/ ./ initializeMbymij/ =/ 0/ ;/ // // 初始化/ 边/ 交换/ 矩阵/ 3/ ./ WHILESpliti/ ≠/ / DO4/ ./ adj/ (/ v/ )/ =/ loadGraph/ (/ Spliti/ )/ ;/ // // 加载/ 邻接/ 表/ 5/ ./ {/ (/ Tx/ ,/ Ecom6/ ./ IF/ |/ Ecom7/ ./ 8.9/ ./ save/ (/ adj/ (/ v/ )/ )/ ;/ // // 保存/ 邻接/ 表/ 数据/ 至/ 本地/ 10/ ./ ENDWHILE11/ ./ initialize/ 珨/ 犕/ bym/ -/ 12/ ./ FOR/ / mij/ ∈/ MDOPage913/ ./ IFi/ ≠/ jDO14/ ./ m/ -/ 15/ ./ ENDIF16/ ./ ENDFOR17/ ./ initializegraph/ ;/ // // 初始化/ 图/ 数据/ 的/ 本地/ 读取/ 句柄/ 18/ ./ WHILEgraph/ ./ hasNext/ (/ )/ DO19/ ./ adj/ (/ v/ )/ =/ graph/ ./ getNext/ (/ )/ ;/ // // 读取/ 本地/ 邻接/ 表/ 数据/ 20/ ./ exchangeedges/ ;/ 21/ ./ ENDWHILE22/ ./ Vi/ =/ Vi/ ∪/ Vb/ ,/ Ei/ =/ Ei/ ∪/ Esyn/ ∪/ Ein/ ;/ 23/ ./ RETURNGi/ =/ (/ Vi/ ,/ Ei/ )/ ;/ M/ 是/ 一个/ K/ 阶/ 方阵/ ,/ 其中/ mij/ 的/ 值/ 表示/ 子图/ Gi/ 与/ Gj/ 之间/ 的/ 满足/ |/ Ecomij/ ./ 矩阵/ 建立/ 完毕/ 后/ ,/ 采用/ 最小/ 交换/ 原则/ 得到/ 即/ Ecom/ 对称/ 的/ 最小/ 控制/ 矩阵/ 珨/ 犕/ ./ 在/ 划分/ 阶段/ ,/ 如果/ Gi/ 向/ Gj/ 迁移/ 的/ 总出/ 边/ 规模/ 小于/ m/ -/ 则/ 为/ false/ ,/ 禁止/ Gi/ 向/ Gj/ 继续/ 迁移/ 出边/ ./ OnFlyP/ -/ M/ 划分/ 是/ 建立/ 在/ Range/ 划分/ 基础/ 上/ ,/ 而/ Range/ 划分/ 本身/ 可以/ 保证/ 各/ 任务/ 出边/ 规模/ 的/ 近似/ 均衡/ ,/ 故对/ OnFlyP/ -/ M/ ,/ 保证/ 每个/ 任务/ 中/ 迁入/ 和/ 迁出/ 边/ 的/ 规模/ 相等/ (/ 对称/ 交换/ )/ ,/ 即可/ 实现/ 负载/ 均衡/ ./ 图/ 5/ 分析/ 了/ OnFlyP/ -/ M/ 算法/ 的/ 适用性/ ./ 其中/ M/ 是/ 图/ G/ 所/ 对应/ 的/ K/ 阶/ 方阵/ ./ 这里/ ,/ 由于/ |/ Ecom/ |/ {/ (/ 5/ ,/ 7/ )/ }/ |/ </ 2/ ,/ 不/ 计入/ 统计/ 信息/ ,/ 故/ m23/ =/ 2/ ./ 此外/ ,/ 根据/ 最小化/ 原则/ ,/ 在/ 最终/ 的/ 控制/ 矩阵/ 珨/ 犕/ 中/ ,/ 有/ m/ -/ m/ -/ 31/ =/ min/ {/ m13/ ,/ m31/ }/ =/ 0/ ./ 下面/ 我们/ 简单/ 讨论/ OnFlyP/ -/ M/ 算法/ 的/ 适用性/ ./ 根据/ 出边/ 在/ 子/ 图/ 之间/ 的/ 分布/ 特征/ ,/ 我们/ 可以/ 归纳/ 出/ 3/ 种/ 极端/ 分布/ :/ (/ 1/ )/ 均匀分布/ ,/ 指向/ 各个/ 子图/ 的/ 出边/ 数目/ 相同/ ./ 这种/ 分布/ 下/ ,/ 对于/ 控制/ 矩阵/ 珨/ 犕/ ,/ 显然/ 有/ m/ -/ min/ {/ mij/ ,/ mji/ }/ =/ mij/ =/ mji/ ./ 另一方面/ ,/ 对于/ 无/ 负载/ 均衡/ 控制/ 的/ OnFlyP/ 算法/ ,/ 等价/ 于/ “/ 最大/ 控制/ 矩阵/ ”/ ,/ m/ -/ 匀/ 分布/ 下/ ,/ OnFlyP/ -/ M/ 可以/ 在/ 保证/ 负载/ 均衡/ 的/ 前提/ 下/ ,/ 最大化/ 参与/ 迁移/ 的/ 出边/ 规模/ ,/ 从而/ 减少/ 通信/ 边/ ij/ =/ m/ -/ 规模/ ./ (/ 2/ )/ 对/ 角分布/ ,/ 各/ 任务/ 加载/ 的/ 出边/ 均/ 指向/ 子图/ 内部/ 的/ 顶点/ ,/ 子图/ 之间/ 没有/ 交互/ 边/ ./ 此时/ 已经/ 达到/ 最优/ 划分/ ,/ 控制/ 矩阵/ 为/ 0/ 矩阵/ ,/ 不必/ 执行/ 出边/ 迁移/ ./ (/ 3/ )/ 环形/ 分布/ ,/ 当子/ 图/ 数目/ 大于/ 2/ 时/ ,/ 显然/ 有/ ij/ =/ m/ -/ m/ -/ 参与/ 交换/ 的/ 出边/ 规模/ 为/ 0/ ,/ 无法/ 优化/ 通信/ 边/ 规模/ ./ 根据/ 第/ 6/ 节/ 的/ 测试/ 结果/ ,/ 上述/ 3/ 种/ 极端/ 分布/ 通常/ 是/ 不/ 存在/ 的/ ./ 真实/ 图中/ 的/ 出边/ 分布/ 介于/ 3/ 者/ 之间/ ,/ OnFlyP/ -/ M/ 在/ 实际/ 应用/ 中/ 可以/ 达到/ 较/ 好/ 的/ 优化/ 效果/ ./ 6/ 实验/ 结果/ 与/ 分析/ 6.1/ 实验/ 方案/ 与/ 实验/ 环境/ 由于/ OnFlyP/ 算法/ 是/ 利用/ 原始/ 图/ 的/ 局部性/ ,/ 实现/ 划分/ 效果/ 和/ 划分/ 效率/ 的/ 综合/ 收益/ ,/ 因此/ 本文/ 首先/ 测试/ 不同/ 真实/ 图/ 的/ 局部性/ (/ 即聚/ 簇/ 系数/ C/ ,/ 见/ 6.3/ 小节/ )/ ,/ 然后/ 从/ 通信/ 边/ 比例/ λ/ =/ |/ Ecom/ |/ // |/ E/ |/ 和/ 负载/ 偏斜/ 因子/ ρ/ (/ 第/ 3.2/ 小节/ )/ 两个/ 方面/ 测试/ 不同/ 划分算法/ 在/ 不同/ 数据/ 集上/ 的/ 划分/ 效果/ (/ 见/ 6.4/ 和/ 6.5/ 小节/ )/ ,/ 之后/ 以/ 划分/ 时/ 的/ 网络通信/ 开销/ 作为/ 效率/ 衡量标准/ 测试/ 了/ 各/ 算法/ 的/ 特征/ 表现/ (/ 见/ 6.6/ 小节/ )/ ,/ 最后/ 通过/ 运行/ PageRank/ 算法/ 验证/ OnFlyP/ 算法/ 的/ 实际/ 运行/ 效果/ (/ 见/ 6.7/ 小节/ )/ ./ 参与/ 对比/ 测试/ 的/ 方法/ 包括/ :/ Hash/ (/ 分布式/ 在线/ 划分/ )/ 、/ LDG/ (/ 集中式/ 在线/ 划分/ )/ 和/ OnFlyP/ (/ 分布式/ 在线/ 划分/ )/ ./ 其中/ ,/ OnFlyP/ 算法/ 按照/ 均衡/ 控制策略/ 的/ 不同/ ,/ 分为/ OnFlyP/ -/ B/ 即/ 无/ 均衡/ 控制策略/ (/ 见/ 4.2/ ./ 2/ 小节/ )/ ,/ 用于/ 6.3/ 小节/ 中/ 测试/ 真实/ 图/ 的/ 局部性/ ;/ OnFlyP/ -/ R/ ,/ 实时控制/ 策略/ (/ 见/ 5.1/ 小节/ )/ ;/ OnFlyP/ -/ M/ ,/ 最小/ 对称/ 矩阵/ 控制策略/ (/ 见/ 5.2/ 小节/ )/ ./ 本文/ 在/ 类/ Pregel/ 的/ BC/ -/ BSP/ -/ 1.0/ 系统/ 上/ 实现/ 了/ Hash/ 划分/ 和/ OnFlyP/ 划分/ ./ 输入/ 数据/ 采用/ 邻接/ 表/ 组织/ ,/ 存放/ 在/ 分布式文件系统/ HDFS/ (/ 版本/ :/ Hadoop/ -/ 0.20/ ./ 2/ )/ ./ HDFS/ 的/ 文件/ 块/ 大小/ 为/ 默认/ 的/ 64MB/ ./ 对于/ Hash/ 划分/ ,/ 实现/ 方式/ 为/ 将/ 原始数据/ 按照/ 文件大小/ 从/ 逻辑/ 上/ 等/ 分为/ K/ 份/ (/ K/ 为/ 分布式/ 任务/ 数目/ ,/ 任务/ 编号/ 为/ 1/ ~/ K/ )/ ,/ 然后/ 各/ 任务/ 并行/ 加载/ 数据/ ./ 针对/ 每条/ 邻接/ 表/ 记录/ ,/ 根据/ 其源/ 顶点/ 的/ HashCode/ 值/ ,/ 按照/ HashCode/ (/ )/ modK/ +/ 1/ 计算/ 其/ 所属/ 的/ 任务/ 编号/ ,/ 并发/ 送到/ 对应/ 的/ 任务/ ./ 而/ LDG/ 为/ 集中式/ 算法/ ,/ 因此/ 输入/ 数据/ 和/ 划分/ 后/ 的/ 子/ 图均/ 位于/ 本地/ 文件系统/ ./ 对于/ OnFlyP/ 算法/ ,/ 先/ 采用/ Range/ 划分/ ,/ 将/ HDFS/ 上/ 的/ 输入/ 数据/ 按照/ 文件大小/ 等/ 分为/ K/ 份/ ,/ 然后/ 运行/ 算法/ 1/ 完成/ 划分/ ,/ 具体/ 的/ 执行/ 逻辑/ 随/ 负载/ 均衡/ 控制策略/ 而/ 变化/ (/ 见/ 5.1/ 节/ 和/ 5.2/ 小节/ 的/ 描述/ )/ ./ Page106/ ./ 2/ 集群/ 配置/ 与/ 数据/ 集/ 实验/ 集群/ 由/ 26/ 台/ 节点/ 构成/ ,/ 使用/ 一台/ Gigabit/ 以太网交换机/ 连接/ ,/ 每个/ 计算/ 节点/ 配置/ 酷睿/ i3/ -/ 2100/ 双核/ 处理器/ ,/ 8GB/ 内存/ ,/ 7200RPM/ 硬盘/ ,/ 安装/ RedHatEnterpriseLinux6/ ./ 1/ 操作系统/ 和/ JDK1/ ./ 6.0/ 编程/ 环境/ ./ BC/ -/ BSP/ 系统/ 中/ 每个/ 任务/ ,/ 即/ 每个/ JVM/ ,/ 内存大小/ 设定/ 为/ 3GB/ ./ 全部/ 实验/ 在/ 4/ 个/ 真实/ 图/ 数据/ 集上/ 完成/ ,/ 包括/ Web/ 数据/ :/ Ber/ -/ Stan/ ①/ 与/ Wiki/ ②/ ,/ 和/ 社交/ 网络/ 数据/ :/ S/ -/ LJ/ ③/ 与/ Twitter/ [/ 35/ ]/ ,/ 具体/ 描述/ 如表/ 1/ 所示/ ./ 其中/ ,/ |/ V/ |/ 表示/ 图/ 顶点/ 的/ 数目/ ,/ 而/ |/ E/ |/ 表示/ 出边/ 数目/ ./ Ber/ -/ Stan/ 是/ BFS/ 生成/ 图/ ,/ 其余/ 3/ 个/ 数据/ 集/ 的/ 性质/ 未知/ ./ 数据/ 集/ Ber/ -/ StanS/ -/ LJWikiTwitter6/ ./ 3/ 真实/ 图/ 的/ 局部性/ 分析/ 我们/ 在/ 4/ 个/ 真实/ 数据/ 集上/ 测试/ OnFlyP/ -/ B/ 划分/ 方法/ ,/ 以/ 证明/ 真实/ 图/ 具有/ 良好/ 的/ 局部性/ 以及/ 对/ OnFly/ -/ B/ 算法/ 的/ 影响/ ./ 表/ 2/ 展示/ 了/ K/ =/ 10/ 时/ 的/ 测试/ 结果/ ./ 其中/ C/ 为/ 第/ 4.1/ 节中/ 的/ 聚簇/ 系数/ ,/ λ/ ^/ 是/ 采用/ 4.2/ ./ 3/ 小节/ 中/ 定理/ 1/ 得到/ 的/ BFS/ 图/ 的/ λ/ 上界值/ ./ 数据/ // 指标/ Ber/ -/ StanS/ -/ LJWikiTwitter/ 显然/ ,/ C/ 越大/ ,/ 局部性/ 越佳/ ,/ 实际/ λ/ 值越/ 低/ ./ 然而/ ,/ 由于/ OnFlyP/ -/ B/ 未/ 采取/ 负载/ 均衡/ 控制策略/ ,/ 所以/ 负载/ 偏斜/ 因子/ ρ/ 的/ 值/ 均/ 比较/ 大/ ./ 此外/ ,/ 非/ BFS/ 生成/ 图/ 的/ C/ 均/ 小于/ BFS/ 生成/ 图/ Ber/ -/ Stan/ ,/ 故/ λ/ 值/ 高于/ Ber/ -/ Stan/ ./ 特别/ 地/ ,/ 对于/ C/ 值较/ 小/ 的/ Wiki/ ,/ 有/ λ/ 大于/ 上界值/ λ/ ^/ ./ 这/ 是因为/ Wiki/ 图/ 的/ 局部性/ 相对/ 较差/ ,/ 不能/ 满足/ 回溯/ 边集/ 目的/ 顶点/ 的/ 严格/ 连续/ 分布/ ,/ 破坏/ 了/ 4.2/ ./ 3/ 小节/ 中/ 引理/ 2/ 的/ 前提条件/ ,/ 导致/ 冗余/ 备份/ 顶点/ 的/ 规模/ 大于/ 理论/ 上/ 限值/ 2/ |/ V/ |/ ,/ 因此/ 实际/ λ/ 值比/ 理论/ 估计值/ λ/ ^/ 偏大/ ./ 6.4/ 划分/ 效果/ 分析/ 本/ 小节/ 介绍/ Hash/ ,/ LDG/ ,/ OnFlyP/ -/ R/ 和/ OnFlyP/ -/ M4/ 种/ 算法/ 在/ 不同/ 数据/ 集上/ 的/ 划分/ 效果/ ./ 本/ 小节/ 实验/ 均/ 设置/ K/ =/ 20/ ./ 图/ 6/ 展示/ 了/ λ/ 值/ ./ 显然/ ,/ Hash/ 划分/ 会/ 导致/ 90/ %/ 以上/ 的/ 边/ 成为/ 通信/ 边/ ,/ 这会/ 在/ 后续/ 迭代/ 计算/ 中/ 引入/ 大量/ 的/ 通信/ 开销/ ./ 而/ 集中式/ LDG/ 和/ 分布式/ OnFlyP/ -/ R/ 则/ 可以/ 将/ λ/ 值/ 降低/ 为/ 40/ %/ 至/ 80/ %/ ,/ OnFlyP/ -/ M/ 进一步/ 将/ 该值/ 降低/ 为/ 13/ %/ 至/ 45/ %/ ./ 其中/ ,/ 除/ Hash/ 外/ ,/ 其余/ 3/ 种/ 划分算法/ 对于/ 原始/ 图/ 的/ 局部性/ 敏感/ ./ 特别/ 地/ ,/ 对于/ BFS/ 生成/ 图/ Ber/ -/ Stan/ ,/ LDG/ 算法/ 的/ 通信/ 边/ 规模/ 是/ OnFlyP/ -/ M/ 算法/ 的/ 2.6/ 倍/ ;/ Hash/ 算法/ 的/ 通信/ 边/ 规模/ 是/ OnFlyP/ -/ M/ 算法/ 的/ 7.25/ 倍/ ./ 图/ 7/ 则/ 对比/ 了/ 各种/ 划分算法/ 的/ 负载/ 偏斜/ 因子/ ./ 其中/ ,/ Hash/ 划分/ 由于/ 无法/ 考虑/ 出边/ 数目/ 的/ 均衡/ ,/ 因此/ 在/ 幂率/ 图/ Twitter/ 上/ ,/ ρ/ 值/ 较大/ ,/ 为/ 1.53/ ./ 此外/ ,/ OnFlyP/ -/ R/ 由于/ 分布式/ 环境/ 下/ 的/ 负载/ 检测/ 具有/ 滞后性/ ,/ 导致/ 负载/ 偏斜/ 因子/ 略高于/ 1.0/ ./ 而/ OnFlyP/ -/ M/ 的/ 偏斜/ 由/ Range/ 划分/ 决定/ ,/ 由于/ 后者/ 只能/ 保证/ 各子/ 图/ 负载/ 近似/ 均衡/ (/ 见/ 4.2/ ./ 1/ 小节/ )/ ,/ 故/ ρ/ ≈/ 1.0/ ./ 6.5/ 犓/ 值/ 对/ 划分/ 效果/ 的/ 影响/ 本组/ 实验/ 分别/ 在/ S/ -/ LJ/ 和/ Twitter/ 数据/ 集上/ 测试/ 了/ 不同/ K/ 值/ 对/ 各种/ 划分算法/ 的/ λ/ 值/ 的/ 影响/ ./ 如图/ 8/ 和/ 图/ 9/ 所示/ ,/ 随/ K/ 值/ 变化/ ,/ OnFlyP/ -/ M/ 的/ λ/ 始终/ 最低/ ./ ①/ ②/ ③/ Page11/ 特别/ 地/ ,/ 对于/ S/ -/ LJ/ 上/ 的/ OnFlyP/ -/ R/ 算法/ ,/ 随着/ K/ 值/ 增大/ ,/ λ/ 值/ 逐渐/ 降低/ ./ 这是/ 由于/ 分布式/ 粒度/ 的/ 增大/ ,/ 延迟/ 了/ θ/ t/ 交换/ 的/ 出边/ 规模/ 增大/ ,/ 因此/ 降低/ 了/ λ/ 值/ ./ 理论/ 上/ ,/ 当/ 分布式/ 任务/ 的/ 水桶/ 效应/ 较/ 低时/ ,/ OnFlyP/ -/ R/ 算法/ 的/ λ/ 值有/ 可能/ 小于/ OnFlyP/ -/ M/ 算法/ ./ 然而/ ,/ 真实/ 图/ 通常/ 具有/ 幂率/ 偏斜/ 特点/ ,/ 尤其/ 是/ Twitter/ ,/ 少数/ 顶点/ 关联/ 了/ 大部分/ 出边/ ,/ 因此/ ,/ 在/ 实际/ 实验/ 过程/ 中/ ,/ OnFlyP/ -/ R/ 算法/ 的/ λ/ 值均/ 大于/ OnFlyP/ -/ M/ 算法/ ./ 图/ 10/ 和/ 图/ 11/ 则/ 展示/ 了/ 不同/ K/ 值/ 对/ 负载/ 偏斜/ 因子/ ρ/ 的/ 影响/ ./ LDG/ ,/ OnFly/ -/ R/ 和/ OnFly/ -/ M/ 这/ 3/ 种/ 划分算法/ 对于/ 数据/ 集/ 和/ K/ 值/ 的/ 变化/ 不/ 敏感/ ./ 而/ 对/ Hash/ 划分/ ,/ 由于/ Twitter/ 数据/ 集中/ 顶点/ 的/ 出边/ 规模/ 具有/ 幂率/ 偏斜/ 特性/ ,/ 故/ 难以/ 保证/ 出边/ 数目/ 的/ 均衡/ ,/ ρ/ 值/ 较大/ ./ 而/ K/ 的/ 不同/ 取值/ ,/ 可能/ 导致/ 高出/ 度/ 顶点/ 的/ 分布/ 发生/ 随机/ 变化/ ,/ 故/ ρ/ 值/ 随/ K/ 的/ 变化/ 呈现/ 随机/ 波动/ ./ 如图/ 11/ 所示/ ,/ 当/ K/ =/ 10/ ,/ 15/ ,/ 20/ ,/ 25/ 时/ ,/ ρ/ 值为/ 1.51/ ,/ 1.26/ ,/ 1.53/ ,/ 1.24/ ./ 6.6/ 网络通信/ 开销/ 分析/ 对于/ Hash/ ,/ OnFlyP/ -/ R/ 和/ OnFlyP/ -/ M/ 划分/ ,/ 各/ 任务/ 加载/ 的/ 数据/ 不/ 一定/ 驻留/ 本地/ ,/ 例如/ 任务/ Ti/ 加载/ 的/ 数据/ ,/ 经过/ Hash/ 运算/ 后/ ,/ 需要/ 通过/ 网络/ 发送给/ 任务/ Tj/ 维护/ ./ 而/ 对/ OnFlyP/ -/ R/ 和/ OnFlyP/ -/ M/ 划分/ ,/ 其/ 加载/ 的/ 出边/ 也/ 可能/ 需要/ 通过/ 网络/ 发送给/ 任务/ Tj/ ./ 我们/ 称该/ 过程/ 为/ shuffle/ 阶段/ ./ 显然/ ,/ shuffle/ 阶段/ 会/ 引入/ 网络通信/ 开销/ ,/ 且/ 主要/ 与/ 参与/ shuffle/ 的/ 出边/ 数目/ |/ ShuffleEdge/ |/ 成正比/ ./ 为/ 便于/ 对比/ 不同/ 数据/ 集在/ 划分/ 时/ 的/ 网络/ 开销/ ,/ 我们/ 定义/ ratio/ =/ |/ ShuffleEdge/ |/ // |/ E/ |/ ,/ 作为/ 衡量/ 指标/ ./ 由于/ LDG/ 属于/ 集中式/ 划分算法/ ,/ 不/ 计入/ 对比/ 分析/ ./ 图/ 12/ 显示/ 了/ 不同/ 划分算法/ 在/ 各种/ 真实/ 数据/ 集上/ 的/ 测试/ 结果/ (/ K/ =/ 10/ )/ ./ Hash/ 划分/ 由于/ 不/ 考虑/ 局部性/ ,/ 大量出/ 边/ 被/ 迁移/ ,/ 因此/ ratio/ 值较/ 高/ ./ 而/ OnFlyP/ -/ R/ 和/ OnFlyP/ -/ M/ 仅/ 需要/ 迁移/ 部分/ 出边/ 数据/ ,/ 且/ OnFlyP/ -/ R/ 由于/ 实时/ 负载/ 监控/ 导致/ θ/ t/ 前/ 被/ 设置/ 为/ 无穷大/ ,/ 故/ 迁移/ 边/ 规模/ 小于/ OnFlyP/ -/ M/ ./ 图/ 13/ 和/ 图/ 14/ 分析/ 了/ 任务/ 数目/ (/ 子图/ 数目/ )/ K/ 对/ ratio/ 的/ 影响/ ./ 对于/ OnFlyP/ -/ R/ 和/ OnFlyP/ -/ M/ 算法/ ,/ Page12/ 图/ 8/ 与/ 图/ 9/ 和/ 图/ 13/ 与/ 图/ 14/ 的/ 对比/ 进一步/ 表明/ ratio/ 值/ 与/ λ/ 值/ 成反比/ ,/ 即/ 参与/ 迁移/ 的/ 出边/ 越/ 多/ ,/ 对/ 通信/ 的/ 优化/ 效果/ 越/ 明显/ ./ 6.7/ 不同/ 划分算法/ 对/ 实际/ 迭代/ 性能/ 的/ 影响/ 我们/ 在/ BC/ -/ BSP/ 系统/ 上/ 运行/ PageRank/ 算法/ ,/ 来/ 验证/ 各种/ 划分/ 方法/ 对于/ 提高/ 实际/ 迭代/ 处理/ 性能/ 的/ 效果/ ./ 本/ 实验/ 采用/ Twitter/ 数据/ ,/ K/ =/ 25/ ,/ PageRank/ 运行/ 中/ 平均/ 每次/ 迭代/ 的/ 计算/ 时间/ 如表/ 3/ 所示/ ./ 其中/ 划分/ 时间/ 包括/ 数据/ 加载/ 开销/ 、/ shuffle/ 阶段/ 的/ 网络/ 开销/ (/ 6.6/ 小节/ )/ 和/ 划分/ 后/ 的/ 数据/ 本地/ 组织/ 与/ 存储/ 开销/ 三/ 部分/ ./ 特别/ 地/ ,/ 由于/ LDG/ 是/ 集中式/ 算法/ ,/ 本文/ 首先/ 在/ 一台/ 物理/ 机上/ 对/ 数据/ 完成/ LDG/ 划分/ ,/ 然后/ 将/ 划分/ 后/ 的/ 子/ 图/ 分别/ 上/ 传到/ HDFS/ ,/ 最后/ 由/ BC/ -/ BSP/ 系统/ 的/ 分布式/ 任务/ 按照/ Range/ 划分/ ,/ 分别/ 加载/ 到/ 本地/ 并/ 完成/ 迭代/ 计算/ ./ 这里/ ,/ 每个/ 子图/ 是/ 一个/ 单独/ 的/ 文件/ ,/ 由/ 一个/ 任务/ 独立/ 加载/ ./ 因此/ ,/ LDG/ 的/ 划分/ 时间/ ,/ 仅/ 包含/ 单机/ 处理/ 时间/ ./ 表/ 3/ 不同/ 划分算法/ 在/ BC/ -/ BSP/ 系统/ 上/ 的/ 运行/ 效果/ 划分算法/ HashLDGOnFlyP/ -/ ROnFlyP/ -/ M/ 在/ BC/ -/ BSP/ 系统/ 中/ ,/ 各/ 任务/ 加载/ 的/ 数据/ 均/ 是/ 通过/ Split/ 方式/ 按照/ 字节/ 大小/ 均衡/ 切分/ 得到/ ,/ 因此/ Hash/ ,/ OnFlyP/ -/ R/ 和/ OnFlyP/ -/ M/ 的/ 加载/ 时间/ 相同/ ./ 根据/ 6.6/ 小节/ 的/ 分析/ ,/ Hash/ 划分/ 由于/ 需要/ 大量/ 交换/ 图/ 数据/ ,/ 网络/ 开销/ 增大/ ,/ 划分/ 时间/ 较/ 高/ ./ OnFlyP/ -/ M/ 由于/ 需要/ 扫面/ 两次/ 数据/ 且/ shuffle/ 的/ 数据/ 规模较/ 多/ ,/ 所以/ 划分/ 时间/ 高于/ OnFlyP/ -/ R/ ./ 与/ 上述/ 3/ 种/ 方法/ 对比/ ,/ 受/ 单机/ 处理/ 能力/ 限制/ ,/ 集中式/ LDG/ 的/ 划分/ 时间/ 最高/ ./ 另一方面/ ,/ 从/ 每步/ 迭代/ 时间/ 来看/ ,/ LDG/ 划分/ 下/ 的/ 迭代/ 性能比/ Hash/ 快/ 18/ %/ ,/ 与/ 文献/ [/ 11/ ]/ 所/ 报告/ 的/ 结果/ 相近/ ;/ 而/ OnFlyP/ -/ M/ 划分/ 下/ 的/ 迭代/ 性能比/ Hash/ 划分/ 快/ 27/ %/ ./ 从/ 实验/ 结果/ 可知/ ,/ OnFlyP/ -/ R/ 和/ OnFlyP/ -/ M/ ,/ 分别/ 在/ 提高/ 执行/ 效率/ 和/ 降低/ 通信/ 边/ 规模/ 方面/ 有/ 较/ 好/ 的/ 效果/ ./ 对/ 高频/ 迭代/ 算法/ ,/ 可/ 选择/ OnFlyP/ -/ M/ ,/ 虽然/ 执行/ 效率/ 略低/ ,/ 但是/ 累加/ 的/ 迭代/ 收益/ ,/ 会/ 使/ 整体/ 性能/ 优于/ OnFlyP/ -/ R/ ;/ 反之/ ,/ 应该/ 选择/ OnFlyP/ -/ R/ ./ 7/ 结论/ 和/ 进一步/ 工作/ 分布式/ 大图/ 处理/ 系统/ 的/ 研究/ 与/ 广泛应用/ ,/ 对图/ 划分算法/ 的/ 效果/ 和/ 执行/ 效率/ 提出/ 了/ 严峻/ 挑战/ ./ 本文/ 利用/ 真实世界/ 中图/ 的/ 局部性/ ,/ 在/ 两种/ 指标/ 上/ 获得/ 了/ 综合/ 收益/ ./ 具体/ 地/ ,/ 本文/ 首先/ 提出/ 聚簇/ 系数/ 概念/ ,/ 定量分析/ 了/ 顶点/ 分布/ 的/ 局部/ 特性/ ,/ 并/ 在/ 大量/ 真实/ 图上/ 验证/ 了/ 结论/ 的/ 可靠性/ ./ 其次/ ,/ 以/ 真实/ 图/ 的/ 局部性/ 为/ 基础/ ,/ 设计/ 了/ 高效/ 的/ 分布式/ 在/ 线图/ 划分算法/ OnFlyP/ ,/ 支持/ 实时控制/ (/ OnFlyP/ -/ R/ )/ 和/ 最小/ 对称/ 矩阵/ 控制/ (/ OnFlyP/ -/ M/ )/ 两种/ 负载/ 均衡/ 策略/ ,/ 可/ 由/ 用户/ 根据/ 实际/ 应用/ 需求/ 自行/ 选择/ ./ 大量/ 真实/ 图/ 的/ 实验/ 结果/ 和/ 在/ BC/ -/ BSP/ 系统/ 上/ 的/ 实际/ 迭代/ 性能/ 表明/ ,/ OnFlyP/ 在/ 执行/ 时间/ 和/ 划分/ 效果/ 方面/ ,/ 均/ 优于/ 现有/ 的/ 在线/ 划分算法/ Hash/ 和/ LDG/ ./ 其中/ ,/ OnFlyP/ -/ R/ 的/ 执行/ 时间/ 比/ OnFlyP/ -/ M/ 的/ 执行/ 时间/ 略低/ ,/ 但/ 后者/ 具有/ 较/ 低/ 的/ 通信/ 边/ 规模/ ,/ 对于/ 高频/ 迭代/ 应用/ 中/ 网络通信/ 开销/ 的/ 优化/ 效果显著/ ./ 根据/ OnFlyP/ -/ R/ 和/ OnFlyP/ -/ M/ 的/ 实验/ 对比/ 结果/ ,/ 显然/ 参与/ shuffle/ 的/ 出边/ 规模/ 与/ 通信/ 收益/ 成正比/ ./ 然而/ ,/ 目前/ 的/ 最小/ 对阵/ 矩阵/ 控制/ 机制/ ,/ 在/ 面对/ 环形/ 分布/ 或近/ 环形/ 分布/ (/ 5.2/ 小节/ )/ 时/ ,/ 会/ 严重/ 降低/ shuffle/ 的/ 出边/ 规模/ ./ 实际上/ ,/ 最小/ 对称/ 矩阵/ 的/ 计算/ 过程/ 是/ 针对/ 仅/ 有/ 2/ 个/ 顶点/ 构成/ 的/ 环路/ ,/ 可以/ 扩展/ 到/ 环形/ 分布/ 中/ 的/ 多/ 顶点/ 环路/ ./ 因此/ ,/ 下/ 一步/ 工作/ 将/ 研究/ 环形/ 分布/ 下/ 的/ 控制/ 矩阵/ 计算方法/ ,/ 以/ 增大/ 出边/ 交换/ 的/ 总/ 规模/ ,/ 进一步/ 降低/ 通信/ 边/ 比例/ ,/ 提高/ OnFlyP/ -/ M/ 算法/ 的/ 适用性/ ./ 

