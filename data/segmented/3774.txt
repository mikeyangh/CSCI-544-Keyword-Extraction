Page1/ 问题/ 框架/ 方法/ 的/ 可靠性/ 关注点/ 及/ 系统可靠性/ 增强/ 模式/ 尹斌/ 1/ )/ ,/ 2/ )/ 金芝/ 1/ )/ ,/ 3/ )/ ,/ 4/ )/ 李智/ 3/ )/ ,/ 5/ )/ 1/ )/ (/ 中国科学院/ 数学/ 与/ 系统/ 科学/ 研究院/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 研究生院/ 北京/ 100049/ )/ 3/ )/ (/ 高/ 可信/ 软件技术/ 教育部/ 重点/ 实验室/ (/ 北京大学/ )/ 北京/ 100871/ )/ 4/ )/ (/ 北京大学/ 信息/ 科学技术/ 学院/ 软件/ 研究所/ 北京/ 100871/ )/ 5/ )/ (/ 广西师范大学/ 计算机科学/ 与/ 信息技术/ 学院/ 广西/ 桂林/ 541002/ )/ 摘要/ 软件系统/ 可靠性/ 是/ 软件工程/ 领域/ 的/ 一个/ 热点/ 研究/ 问题/ ./ 文中/ 以/ 系统可靠性/ 指标/ 为/ 依据/ ,/ 针对/ 问题/ 框架/ 方法/ ,/ 提出/ 了/ 5/ 种/ 与/ 问题/ 相关/ 的/ 可靠性/ 关注点/ ,/ 并/ 设计/ 了/ 相应/ 的/ 系统可靠性/ 增强/ 模式/ ./ 这些/ 可靠性/ 增强/ 模式/ 将/ 系统可靠性/ 需求/ 显式/ 地/ 引入/ 问题/ 的/ 分析/ 过程/ 中/ ,/ 通过/ 扩展/ 问题/ 的/ 边界/ 和/ 精化/ 机器/ 的/ 规格/ 说明/ ,/ 为/ 增强/ 系统/ 的/ 可靠性/ 提供/ 支持/ ./ 文中/ 还/ 展示/ 了/ 作者/ 开发/ 的/ 一个/ 支持/ 系统可靠性/ 分析/ 的/ 支撑/ 工具/ ,/ 用于/ 帮助/ 需求/ 分析/ 者/ 识别/ 问题/ 的/ 可靠性/ 需求/ ,/ 并/ 正确/ 地/ 使用/ 可靠性/ 增强/ 模式/ ./ 最后/ ,/ 文章/ 结合/ 一个/ 银行/ 账户/ 管理/ 问题/ 的/ 案例/ 展示/ 了/ 文中/ 工作/ 的/ 可行性/ ./ 关键词/ 系统可靠性/ ;/ 问题/ 框架/ 方法/ ;/ 可靠性/ 关注点/ ;/ 可靠性/ 增强/ 模式/ 1/ 引言/ 问题/ 框架/ 方法/ [/ 1/ ]/ 是/ 软件开发/ 问题/ 的/ 结构化分析/ 方法/ ,/ 其/ 基本原理/ 是/ ,/ 第一/ ,/ 软件/ 需求/ 的/ 内涵/ 是/ 软件/ 可以/ 用于/ 解决/ 的/ 现实/ 世界/ 的/ 问题/ (/ 用/ 上下文/ 图/ 和/ 问题/ 图/ 表示/ )/ ,/ 对/ 问题/ 进行/ 结构化分析/ 是/ 需求/ 分析/ 的/ 根本/ 出发点/ ./ 第二/ ,/ 通过/ 问题/ 的/ 投影/ ,/ 将/ 复杂/ 的/ 问题/ 结构化/ 为/ 相互作用/ 的/ 较为简单/ 的/ 子/ 问题/ 的/ 集合/ ./ 第三/ ,/ 采用/ 面向/ 关注点/ 的/ 分析方法/ 分析/ 问题/ ,/ 首先/ 判断/ 问题/ 所属/ 类型/ ,/ 然后/ 根据/ 这/ 类/ 问题/ 的/ 关注点/ ,/ 推导/ 问题/ 的/ 解决方案/ ./ 问题/ 框架/ 方法/ 已经/ 吸引/ 了/ 许多/ 研究/ 人员/ 的/ 关注/ ./ 比如/ ,/ 一些/ 学者/ 提出/ 了/ 一些/ 新/ 的/ 框架/ 来/ 分析/ 安全/ 需求/ ,/ 包括/ Lin/ 等/ 人/ [/ 2/ ]/ 提出/ 的/ AbuseFrames/ 以及/ Hatebur/ 等/ 人/ [/ 3/ ]/ 提出/ 的/ 一组/ SecurityProblemFrames/ ./ 一些/ 学者/ 关注/ 机器/ 规格/ 说明/ 的/ 获得/ ,/ 比较/ 有/ 代表性/ 的/ 是/ Li/ [/ 4/ ]/ 提出/ 的/ 通过/ 问题/ 变换/ 移除/ 领域/ 简化/ 上下文/ ,/ 之后/ 利用/ 形式化/ 的/ 推理/ 将/ 需求/ 转化/ 为/ 机器/ 规格/ 说明/ ./ 还有/ 一些/ 工作/ 将/ 问题/ 框架/ 方法/ 和/ 其它/ 的/ 需求/ 建模/ 方法/ 结合/ 使用/ ,/ 包括/ 将/ 场景/ 的/ 建模/ 引入/ 问题/ 框架/ 方法/ 中/ [/ 5/ ]/ ,/ 将/ 面向/ 目标/ 的/ 方法/ 和/ 问题/ 框架/ 方法/ 结合/ [/ 6/ ]/ ./ 与此同时/ ,/ 问题/ 框架/ 方法/ 的/ 应用/ 也/ 越来越/ 广泛/ ./ 比如/ ,/ Hall/ 等/ 人/ [/ 7/ ]/ 基于/ 面向/ 问题/ 的/ 思想/ ,/ 提出/ 了/ 一种/ 软件开发/ 的/ 形式化/ 概念/ 框架/ —/ —/ —/ 面向/ 问题/ 的/ 软件工程/ ./ Lavazza/ 和/ DelBianco/ [/ 8/ ]/ 将/ 问题/ 框架/ 方法/ 和/ UML/ 结合/ 来/ 表达/ 软件/ 需求/ ./ 而/ Taylor/ 等/ 人/ [/ 9/ ]/ 则/ 将/ 问题/ 框架/ 引入/ 到/ 面向对象/ 的/ 软件架构/ 中/ ./ 软件系统/ 的/ 可靠性/ 是/ 软件工程/ 领域/ 的/ 热点/ 研究/ 问题/ [/ 10/ -/ 12/ ]/ ,/ 其/ 主要/ 原因/ 在于/ ,/ 第一/ ,/ 软件系统/ 自身/ 的/ 规模/ 不断扩大/ ,/ 复杂性/ 不断/ 提高/ ./ 比如/ ,/ 一台/ 普通/ 汽车/ 的/ 控制系统/ 也/ 有/ 数百万/ 行/ 代码/ ,/ 而/ Linux/ 操作系统/ 的/ 源码/ 甚至/ 达到/ 千万/ 行/ ./ 大规模/ 的/ 系统/ ,/ 其/ 可靠性/ 难以/ 保证/ ./ 第二/ ,/ 随着/ 互联网/ 技术/ 的/ 日益/ 普及/ ,/ 软件系统/ 将/ 面临/ 着/ 更为/ 开放/ 的/ 环境/ ,/ 为了/ 满足/ 特定/ 的/ 功能/ ,/ 软件系统/ 必须/ 要/ 和/ 网络/ 中/ 的/ 其它/ 对象/ 交互/ ,/ 而/ 网络/ 的/ 不稳定性/ (/ 网络/ 数据/ 丢失/ 和/ 损坏/ )/ 和/ 不/ 安全性/ (/ 恶意/ 攻击者/ 的/ 攻击/ )/ 等/ 因素/ 威胁/ 到/ 系统/ 的/ 可靠性/ ./ 第三/ ,/ 软件系统/ 已经/ 融入/ 了/ 人们/ 的/ 日常生活/ ,/ 并/ 起/ 着/ 重要/ 的/ 作用/ ./ 低/ 可靠性/ 软件系统/ 带来/ 的/ 系统/ 失效/ 将会/ 引起/ 严重/ 的/ 后果/ ,/ 尤其/ 是/ 那些/ 安全/ 关键/ 的/ 系统/ 以及/ 商业系统/ ./ 目前/ ,/ 在/ 问题/ 框架/ 方法/ 中/ ,/ 可靠性/ 关注点/ 主要/ 针对/ 其/ 问题/ 领域/ 性质/ 有/ 可能/ 失效/ 的/ 情况/ [/ 1/ ]/ ,/ 提出/ 可以/ 通过/ 评估/ 问题/ 领域/ 失效/ 的/ 可能性/ 和/ 失效/ 导致/ 的/ 损害/ 的/ 严重性/ ,/ 来/ 识别系统/ 的/ 可靠性/ 需求/ 关注点/ ,/ 并/ 通过/ 给出/ 更/ 精确/ 的/ 、/ 考虑/ 可能/ 失效/ 的/ 领域/ 描述/ ,/ 来/ 支持/ 可靠性/ 关注点/ 的/ 解决/ ./ 但是/ 系统/ 的/ 可靠性/ 还/ 蕴含/ 更加/ 具体/ 的/ 内容/ ./ 比如/ ,/ 在/ IEEE1633/ 标准/ [/ 13/ ]/ 中/ ,/ 软件系统/ 可靠性/ 被/ 定义/ 为/ :/ 软件/ 在/ 给定/ 的/ 条件/ 下/ ,/ 在/ 规定/ 的/ 时间/ 范围/ 内/ ,/ 执行/ 所/ 要求/ 功能/ 的/ 能力/ ./ ISO/ // IEC9126/ 标准/ [/ 14/ ]/ 给出/ 了/ 系统可靠性/ 包含/ 的/ 3/ 个/ 具体/ 指标/ ,/ 即/ 系统/ 的/ 成熟性/ 、/ 系统/ 的/ 容错性/ 和/ 系统/ 的/ 易/ 恢复性/ ./ 其中/ ,/ 系统/ 的/ 成熟性/ ,/ 是/ 指/ 系统/ 避免/ 自身/ 错误/ 而/ 导致/ 失效/ 的/ 能力/ ./ 系统/ 的/ 容错性/ ,/ 是/ 指/ 系统/ 在/ 违反/ 指定/ 接口/ 的/ 情况/ 下/ ,/ 维持/ 特定/ 性能/ 级别/ 的/ 能力/ ./ 系统/ 的/ 易/ 恢复性/ ,/ 是/ 指/ 系统/ 失效/ 发生/ 后/ ,/ 系统/ 恢复/ 到/ 指定/ 性能/ 级别/ 和/ 恢复/ 受损/ 数据/ 的/ 能力/ ./ 可以/ 看出/ ,/ 对应/ 到/ 问题/ 框架/ 方法/ 中/ ,/ 系统/ 的/ 可靠性/ 关注点/ 不仅仅/ 涉及/ 领域/ 性质/ 的/ 失效/ ,/ 还/ 应该/ 包含/ 机器/ 领域/ 本身/ 的/ 失效/ 、/ 机器/ 领域/ 和/ 问题/ 领域/ 之间/ 接口/ 的/ 失效/ 、/ 机器/ 领域/ 内部/ 可维护性/ 降低/ 、/ 外部/ 的/ 恶意/ 攻击/ 和/ 网络/ 过载/ 等/ ,/ 这些/ 因素/ 都/ 有/ 可能/ 损害/ 系统/ 的/ 可靠性/ ./ 本文/ 从/ 分析/ 系统可靠性/ 的/ 3/ 个/ 具体/ 指标/ 入手/ ,/ 结合/ 问题/ 框架/ 方法/ 的/ 建模/ 思想/ ,/ 提出/ 5/ 种/ 系统可靠性/ 关注点/ ,/ 并且/ 为/ 它们/ 分别/ 设计/ 了/ 系统可靠性/ 增强/ 模式/ ,/ 从而/ 为/ 提高/ 系统/ 的/ 可靠性/ 提供/ 需求/ 阶段/ 的/ 帮助/ ./ 本文/ 第/ 2/ 节/ 讨论/ 如何/ 结合/ 系统可靠性/ 指标/ 确定/ 可靠性/ 关注点/ ;/ 第/ 3/ 节/ 介绍/ 系统可靠性/ 增强/ 模式/ 的/ 设计/ ;/ 第/ 4/ 节/ 详细/ 介绍/ 了/ 对应/ 的/ 5/ 种/ 系统可靠性/ 增强/ 模式/ ;/ 第/ 5/ 节/ 给出/ 支撑/ 工具/ ,/ 并/ 进行/ 案例/ 研究/ ;/ 第/ 6/ 节/ 和/ 第/ 7/ 节/ 讨论/ 相关/ 工作/ 并/ 总结/ 全文/ ./ 2/ 从/ 系统可靠性/ 指标/ 到/ 可靠性/ 关注点/ 问题/ 框架/ 方法/ 的/ 建模/ 思想/ 是/ 将/ 软件开发/ 问题/ 结构化/ 为/ 相互/ 联系/ 的/ 机器/ 领域/ 和/ 问题/ 领域/ ,/ 其中/ ,/ 问题/ 领域/ 是/ 与/ 问题/ 相关/ 的/ 现实/ 世界/ 的/ 一部分/ ,/ 机器/ 领域/ 是/ 需要/ 构建/ 的/ 软件系统/ ,/ 问题/ 领域/ 和/ 机器/ 领域/ 的/ 交互/ 则/ 通过/ 发生/ 在/ 它们/ 各自/ 接口/ 上/ 的/ 一组/ 共享/ 现象/ 来/ 实现/ ./ 问题/ 框架/ 方法/ 采用/ 问题/ 图/ 展示/ 问题/ 的/ 结构/ ,/ 图/ 1/ 给出/ 了/ 一个/ 问题/ 图/ 的/ 示意图/ ./ 其中/ ,/ 矩形/ 代表/ 问题/ 领域/ ,/ 带/ 双线/ 的/ 矩形/ 代表/ 机器/ 领域/ ,/ 问题/ 领域/ 和/ 机器/ 领域/ 之间/ 的/ 连线/ 表示/ 它们/ 之间/ 通过/ 这个/ 接口/ 共享/ 一组/ 现象/ ./ Page3/ 问题/ 框架/ 方法/ 中将/ 问题/ 领域/ 划分/ 为/ 三类/ :/ 因果/ 领域/ 、/ 词法/ 领域/ 和/ 可/ 叫牌/ 领域/ ./ 因果/ 领域/ 通常/ 是/ 一些/ 物理/ 设备/ ,/ 它们/ 的/ 现象/ 存在/ 可以/ 预期/ 的/ 因果关系/ ./ 词法/ 领域/ 是/ 数据/ 的/ 物理/ 表示/ ./ 可/ 叫牌/ 领域/ 通常/ 是/ 由/ 人/ 组成/ 的/ ,/ 它/ 是/ 物理/ 的/ ,/ 却/ 没有/ 明确/ 的/ 可/ 预期/ 的/ 内部/ 因果关系/ [/ 1/ ]/ ./ 在/ 问题/ 框架/ 方法/ 中/ ,/ 最/ 基本/ 的/ 分析/ 单元/ 是/ “/ 领域/ 现象/ ”/ ./ 本文/ 从/ 领域/ 现象/ 入手/ ,/ 分析/ 影响/ 系统可靠性/ 的/ 因素/ ,/ 从而/ 引出/ 系统可靠性/ 的/ 关注点/ ./ 我们/ 知道/ ,/ 领域/ 现象/ 分为/ 两类/ :/ 因果/ 现象/ 和/ 符号/ 现象/ ./ 其/ 基本/ 性质/ 是/ :/ 因果/ 现象/ 是/ 事件/ 、/ 角色/ 或/ 状态/ 关系/ 实体/ ./ 因果/ 现象/ 直接/ 由/ 一些/ 领域/ 引起/ 或/ 控制/ 的/ ,/ 并且/ 能够/ 依次/ 引起/ 其它/ 现象/ [/ 1/ ]/ ./ 符号/ 现象/ 是/ 值/ 、/ 真值/ 以及/ 只/ 与/ 值/ 相关/ 的/ 状态/ ./ 符号/ 现象/ 用来/ 符号化/ 其它/ 现象/ 及其/ 它们/ 之间/ 的/ 关系/ ,/ 不能/ 改变/ 自身/ 也/ 不能/ 引起/ 其它/ 变化/ [/ 1/ ]/ ./ 违背/ 这些/ 性质/ 的/ 可能/ 情况/ 包括/ :/ (/ 1/ )/ 因果/ 现象/ 之间/ 在/ 某些/ 特殊/ 条件/ 下/ 丧失/ 其/ 因果性/ ,/ 而且/ 由于/ 因果/ 现象/ 的/ 瞬时性/ ,/ 我们/ 无法/ 获知/ 其/ 因果/ 状态/ 序列/ ,/ 因果/ 现象/ 的/ 因果/ 性质/ 是否/ 满足/ 无法/ 判断/ ./ (/ 2/ )/ 符号/ 现象/ 被/ 非/ 共享/ 领域/ 所/ 窃听/ 、/ 截取/ 或/ 篡改/ ./ 另一方面/ ,/ 领域/ 通过/ 接口/ 上/ 的/ 共享/ 现象/ 进行/ 交互/ ,/ 但/ 现象/ 的/ 共享/ 有/ 可能/ 失效/ ,/ 比如/ :/ (/ 1/ )/ 共享/ 现象/ 引发/ 速度/ 不/ 匹配/ ./ (/ 2/ )/ 可/ 叫牌/ 领域/ 引发/ 现象/ 的/ 不可/ 预计/ 性/ ,/ 导致/ 引发/ 的/ 现象/ 超出/ 机器/ 领域/ 可/ 共享/ 的/ 范围/ ./ 根据/ 系统可靠性/ 的/ 3/ 个/ 指标/ :/ 成熟性/ 、/ 容错性/ 和/ 易/ 恢复性/ ,/ 我们/ 可以/ 从/ 提供/ 系统可靠性/ 为/ 起点/ 来/ 识别/ 问题/ 框架/ 的/ 可靠性/ 关注点/ ./ (/ 1/ )/ 提高/ 系统/ 的/ 成熟性/ ./ 系统/ 的/ 成熟性/ ,/ 是/ 指/ 系统/ 能/ 避免/ 由于/ 自身/ 错误/ 导致/ 失效/ 的/ 能力/ ./ 在/ 问题/ 框架/ 方法/ 中/ ,/ 系统/ 由/ 机器/ 领域/ 和/ 问题/ 领域/ 组成/ ,/ 机器/ 领域/ 通过/ 接口/ 与/ 问题/ 领域/ 共享/ 现象/ ,/ 导致/ 在/ 问题/ 领域/ 上/ 产生/ 期望/ 的/ 效果/ ./ 一方面/ ,/ 共享/ 蕴含/ 了/ 同步/ ,/ 但/ 考虑/ 到/ 当/ 机器/ 和/ 一个/ 因果/ 领域/ 或/ 可/ 叫牌/ 领域/ 之间/ 发生/ 共享/ 现象/ 时/ ,/ 因为/ 这/ 两类/ 领域/ 是/ 物理/ 的/ ,/ 具有/ 自身/ 的/ 行为/ 规律/ 和/ 自己/ 的/ 意愿/ ,/ 它们/ 的/ 行为/ 是否/ 能/ 与/ 机器/ 领域/ 同步/ 成为/ 一个/ 问题/ ./ 比如/ ,/ 如果/ 问题/ 领域/ 触发/ 共享/ 现象/ 的/ 速度/ 快/ 于/ 机器/ 领域/ ,/ 机器/ 领域/ 还/ 没有/ 处理/ 完前/ 一个/ 现象/ ,/ 下/ 一个/ 现象/ 则/ 有/ 可能/ 丢失/ ,/ 从而/ 引起/ 系统/ 失效/ ./ 反之亦然/ ./ 我们/ 称之为/ 现象/ 共享/ 的/ 速度/ 匹配/ 问题/ ,/ 并/ 把/ 由此/ 导出/ 的/ 可靠性/ 关注点/ 称/ 作为/ 速度/ 失配/ 关注点/ ./ 另一方面/ ,/ 机器/ 需要/ 与/ 正确/ 的/ 问题/ 领域/ 共享/ 现象/ ,/ 考虑/ 到/ 一类/ 可/ 叫牌/ 领域/ (/ 比如/ ,/ 人/ )/ 个体/ 的/ 动态/ 接入/ 性/ ,/ 以及/ 每个/ 动态/ 个体/ 领域/ 的/ 身份/ 特性/ ,/ 和/ 他们/ 对/ 共享/ 现象/ 可能/ 具有/ 的/ 不同/ 的/ 共享/ 权限/ ./ 机器/ 领域/ 需要/ 对/ 这类/ 可/ 叫牌/ 领域/ 进行/ 身份/ 识别/ ,/ 并/ 确定/ 其/ 是否/ 具有/ 共享/ 权限/ ./ 权限/ 的/ 设置/ 使得/ 可/ 叫牌/ 领域/ 只能/ 共享/ 权限/ 范围/ 内/ 的/ 现象/ ,/ 避免/ 发生/ 错误/ 的/ 现象/ 共享/ ./ 我们/ 称之为/ 现象/ 共享/ 的/ 身份/ 问题/ ,/ 并/ 把/ 由此/ 导出/ 的/ 可靠性/ 关注点/ 称为/ 身份/ 权限/ 关注点/ ./ (/ 2/ )/ 提高/ 系统/ 的/ 易/ 恢复性/ ./ 系统/ 的/ 易/ 恢复性/ ,/ 是/ 指/ 在/ 系统/ 失效/ 发生/ 后/ ,/ 系统/ 恢复/ 到/ 指定/ 性能/ 级别/ 和/ 恢复/ 受损/ 数据/ 的/ 能力/ ./ 通常/ 情况/ 下/ ,/ 一种/ 支持系统/ 恢复/ 的/ 手段/ 是/ 维护/ 系统/ 的/ 运行/ 状态/ 序列/ ,/ 从而/ 帮助/ 查找/ 系统/ 的/ 故障/ 原因/ ,/ 找到/ 系统/ 的/ 恢复/ 状态/ 和/ 该/ 状态/ 上/ 所有/ 信息/ ./ 对应/ 到/ 问题/ 框架/ 方法/ 的/ 系统/ 建模/ 中/ ,/ 由于/ 系统/ 由/ 机器/ 领域/ 和/ 问题/ 领域/ 组成/ ,/ 因此/ 系统/ 的/ 运行/ 状态/ 应/ 包括/ :/ 问题/ 领域/ 的/ 状态/ 和/ 机器/ 领域/ 的/ 状态/ ./ 需要/ 有/ 相关/ 的/ 机制/ 记录/ 这些/ 状态/ ,/ 使得/ 当/ 系统/ 发生/ 故障/ 时/ ,/ 可以/ 利用/ 系统/ 状态/ 序列/ 找到/ 故障/ 原因/ ./ 我们/ 称之为/ 运行/ 状态/ 保留/ 问题/ ,/ 并/ 把/ 由此/ 导出/ 的/ 可靠性/ 关注点/ 称为/ 运行/ 状态/ 记录/ 关注点/ ./ (/ 3/ )/ 提高/ 系统/ 的/ 容错性/ ./ 系统/ 的/ 容错性/ ,/ 是/ 指/ 系统/ 在/ 违反/ 指定/ 接口/ 的/ 情况/ 下/ ,/ 维持/ 特定/ 性能/ 级别/ 的/ 能力/ ./ 在/ 问题/ 框架/ 方法/ 中/ ,/ 系统/ 产生/ 错误/ 的/ 原因/ 分为/ 两种/ :/ 一种/ 是/ 问题/ 领域/ 性质/ 失效/ ,/ 另/ 一种/ 是/ 机器/ 领域/ 和/ 问题/ 领域/ 接口/ 上/ 的/ 共享/ 现象/ 失效/ ./ 问题/ 领域/ 性质/ 失效/ 包括/ ,/ 物理/ 设备/ 年久失修/ ,/ 或/ 被/ 人为/ 损坏/ 等/ ./ 因此/ 需要/ 引入/ 引出/ 问题/ 领域/ 性质/ 是否/ 失效/ ./ 我们/ 把/ 由此/ 导出/ 的/ 可靠性/ 关注点/ 称为/ 领域/ 监测/ 关注点/ ./ 接口/ 上/ 共享/ 现象/ 的/ 失效/ 主要/ 来自/ 问题/ 领域/ 和/ 机器/ 领域/ 之间/ 的/ 不/ 安全/ 的/ 连接/ ,/ 考虑/ 当/ 机器/ 领域/ 和/ 词法/ 领域/ 之间/ 发生/ 共享/ 现象/ 时/ ,/ 所/ 发起/ 的/ 现象/ 可能/ 会/ 被/ 恶意/ 的/ 攻击者/ 窃取/ 和/ 篡改/ ./ 这/ 引出/ 共享/ 现象/ 的/ 加密/ 和校验/ 问题/ ./ 我们/ 把/ 由此/ 导出/ 的/ 可靠性/ 关注点/ 称为/ 加密/ 校验/ 关注点/ ./ 这/ 5/ 种/ 可靠性/ 关注点/ 并/ 不能/ 覆盖/ 问题/ 框架/ 方法/ Page4/ 中/ 可靠性/ 问题/ 的/ 所有/ 方面/ ,/ 读者/ 可以/ 根据/ 上文/ 提到/ 的/ 分析方法/ 识别/ 出/ 更/ 多/ 的/ 可靠性/ 关注点/ ./ 关系/ ,/ 以及/ 可靠性/ 关注点/ 的/ 描述/ ./ 表/ 1/ 给出/ 了/ 5/ 个/ 可靠性/ 关注点/ 和/ 可靠性/ 指标/ 的/ 可靠性/ 指标/ 可靠性/ 关注点/ 可靠性/ 关注点/ 描述/ 成熟性/ 易/ 恢复性/ 运行/ 状态/ 记录/ 容错性/ 3/ 可靠性/ 增强/ 模式/ 的/ 框架/ 模式/ 是/ 解决/ 某/ 一类/ 问题/ 的/ 方法论/ ./ 每个/ 模式/ 都/ 描述/ 了/ 一个/ 不断/ 出现/ 的/ 问题/ ,/ 然后/ 描述/ 了/ 该/ 问题/ 的/ 解决方案/ 的/ 核心/ [/ 15/ ]/ ./ 目前/ 已经/ 有/ 许多/ 研究/ 人员/ 对于/ 模式/ 在/ 软件开发/ 过程/ 中/ 的/ 应用/ 做出/ 了/ 贡献/ ,/ 比如/ ,/ 设计模式/ [/ 16/ ]/ 和/ 安全/ 模式/ [/ 17/ ]/ 等/ ./ 上/ 一节/ 通过/ 分析/ 可靠性/ 的/ 3/ 种/ 指标/ ,/ 结合/ 问题/ 框架/ 方法/ 的/ 建模/ 思想/ ,/ 识别/ 出/ 了/ 问题/ 框架/ 方法/ 中/ 的/ 5/ 种/ 可靠性/ 关注点/ ./ 本节/ 则/ 设计/ 相应/ 的/ 可靠性/ 增强/ 模式/ ,/ 用于/ 将/ 可靠性/ 需求/ 引入/ 问题/ 的/ 分析/ 中/ ./ 关于/ 模式/ 的/ 基本/ 组织/ 形式/ ,/ Alexander/ [/ 15/ ]/ 给出/ 了/ 模式/ 表单/ ,/ 称作/ “/ Alexander/ 表单/ ”/ ,/ 包括/ 上下文/ 、/ 问题/ 和/ 解决方案/ ./ 软件工程/ 领域/ 中/ 所/ 提出/ 的/ 模式/ 也/ 基本/ 都/ 遵照/ 了/ 这/ 一/ 形式/ ./ 本文/ 参考/ “/ Alexander/ 表单/ ”/ ,/ 确定/ 如下/ 的/ 可靠性/ 增强/ 模式/ 的/ 表示/ 形式/ :/ (/ 1/ )/ 模式/ 关注点/ ./ 该/ 模式/ 所/ 对应/ 的/ 可靠性/ 关注点/ ./ (/ 2/ )/ 应用/ 背景/ ./ 该/ 模式/ 所/ 适应/ 的/ 情况/ ./ (/ 3/ )/ 解决/ 的/ 问题/ ./ 该/ 模式/ 所/ 解决/ 的/ 问题/ ./ (/ 4/ )/ 解决方案/ ./ 在/ 确定/ 的/ 应用/ 背景/ 下/ ,/ 为了/ 解决/ 某一/ 问题/ 所/ 提出/ 来/ 的/ 解决方案/ ./ 可靠性/ 增强/ 模式/ 的/ 主体/ 部分/ 是/ 解决方案/ ,/ 它/ 将/ 对应/ 的/ 可靠性/ 关注点/ 显式/ 地/ 引入/ 问题/ 分析/ 过程/ 中/ ,/ 通过/ 增加/ 问题/ 领域/ 和/ 共享/ 现象/ ,/ 扩展/ 问题/ 边界/ ,/ 获得/ 扩展/ 后/ 问题/ 的/ 机器/ 规格/ 说明/ ,/ 提高/ 系统/ 的/ 可靠性/ ./ 主要/ 包括/ 如下/ 3/ 个/ 部分/ 内容/ ./ 模式/ 可用性/ 判断/ 原则/ ./ 对于/ 一个/ 问题/ ,/ 首先/ 需要/ 判断/ 该/ 问题/ 是否/ 适合/ 使用/ 某个/ 可靠性/ 增强/ 模式/ ,/ 因为/ 任何/ 一个/ 可靠性/ 增强/ 模式/ 只能/ 在/ 特定/ 的/ 应用/ 背景/ 下才/ 适用/ ,/ 也就是说/ 只有/ 满足/ 特定条件/ 的/ 问题/ 才能/ 使用/ 该/ 可靠性/ 增强/ 模式/ ./ 问题/ 扩展/ 策略/ ./ 我们/ 知道/ ,/ 一个/ 问题/ (/ P/ )/ 的/ 分析/ 涉及/ 3/ 组/ 描述/ :/ 机器/ 领域/ 的/ 规格/ 说明/ (/ M/ )/ 、/ 问题/ 领域/ 性质/ (/ D/ )/ 和/ 需求/ 描述/ (/ R/ )/ ./ 可靠性/ 增强/ 模式/ 要/ 将/ 可靠性/ 关注点/ 引入/ 问题/ 分析/ 中/ ,/ 扩展/ 的/ 目的/ 就是/ 使得/ 问题/ P/ 的/ 需求/ 描述/ R/ 既/ 包括/ 原来/ 的/ 功能性/ 需求/ ,/ 也/ 包括/ 可靠性/ 需求/ ./ 然而/ ,/ 在/ 问题/ 框架/ 方法/ 中/ ,/ 需求/ 仅限于/ 对/ 问题/ 领域/ 的/ 性质/ 的/ 期望/ ,/ 即/ 所/ 期待/ 的/ 领域/ 现象/ 之间/ 的/ 关系/ ./ 可靠性/ 需求/ 可能/ 要求/ 涉及/ 原/ 问题/ 之外/ 的/ 其它/ 问题/ 领域/ ,/ 或者/ 约束/ 原/ 问题/ 中/ 某些/ 问题/ 领域/ 的/ 其它/ 现象/ ./ 因此/ ,/ 在/ 引入/ 可靠性/ 需求/ 之后/ ,/ 问题/ 中/ 的/ 领域/ 描述/ D/ 将会/ 发生/ 相应/ 的/ 变化/ ,/ 这种/ 变化/ 包括/ :/ 的/ 描述/ ./ (/ 1/ )/ 新/ 的/ 问题/ 领域/ 的/ 领域/ 性质/ 描述/ ./ (/ 2/ )/ 原/ 问题/ 中/ 某些/ 问题/ 领域/ 展现/ 出来/ 的/ 新/ 特性/ 将/ 这/ 两种/ 变化/ 映射/ 到/ 问题/ 图/ ,/ 得到/ 的/ 结果/ 是/ :/ (/ 1/ )/ 增加/ 了/ 新/ 的/ 问题/ 领域/ ./ (/ 2/ )/ 识别/ 出/ 原有/ 问题/ 领域/ 中/ 的/ 新/ 的/ 现象/ ./ 可靠性/ 问题/ 分析/ 策略/ ./ 问题/ 扩展/ 将/ 原/ 问题/ P/ 扩展/ 为/ 一个/ 带/ 可靠性/ 关注点/ 的/ 新/ 问题/ P/ ./ 我们/ 需要/ 的/ 是/ 在/ 问题/ P/ 的/ 机器/ 规格/ 说明/ 的/ 基础/ 上/ ,/ 获得/ P/ 的/ 机器/ 规格/ 说明/ ./ 在/ 问题/ 框架/ 方法/ 中/ ,/ 问题/ 的/ 分析/ 是/ 通过/ 投影/ 原则/ 将/ 问题/ 分解/ 为/ 一组/ 子/ 问题/ ,/ 直到/ 获得/ 一组/ 预先/ 定义/ 好/ 解决方案/ 的/ 问题/ 框架/ ./ 可靠性/ 问题/ 分析/ 策略/ 提供/ 对/ 扩展/ 后/ 的/ 带/ 可靠性/ 关注点/ 的/ 问题/ P/ 的/ 投影/ 策略/ ./ 4/ 可靠性/ 增强/ 模式/ 前两节/ 分别/ 讨论/ 了/ 问题/ 框架/ 方法/ 中/ 的/ 可靠性/ 关注点/ 以及/ 可靠性/ 增强/ 模式/ 的/ 设计/ ./ 本节/ 针对/ 5/ 种/ 可靠性/ 关注点/ ,/ 设计/ 了/ 相应/ 的/ 可靠性/ 增强/ 模式/ ,/ 并/ 给出/ 示例/ 展示/ 模式/ 的/ 使用/ 过程/ ./ 我们/ 对/ 每种/ 可靠性/ 关注点/ 设计/ 相应/ 的/ 可靠性/ 增强/ 模式/ ,/ 其/ 目的/ 在于/ :/ 将/ 可靠性/ 需求/ 显式/ 地/ 引入/ 问题/ 分析/ 过程/ 中/ ,/ 扩展/ 问题/ 的/ 边界/ ,/ 并/ 最终/ 得到/ 精化/ 机器/ 规格/ 说明/ ,/ 提高/ 系统/ 的/ 可靠性/ ./ 因此/ ,/ 可靠性/ 增强/ 模式/ 可以/ 被/ 看做/ 是/ 可靠性/ 关注点/ 在/ 特定/ 问题/ 背景/ 下/ 的/ 解决方案/ ./ 而/ 解决方案/ 往往/ 是/ 不/ 唯一/ 的/ ./ 文中/ 我们/ 对/ 一种/ 可靠性/ 关注点/ 只/ 给出/ 了/ 与/ 之/ 对应/ 的/ 一种/ 可靠性/ 增强/ 模式/ ,/ 以此/ 来/ 展示/ 可靠性/ 增强/ 模式/ 的/ 设计/ 思路/ ./ 4.1/ 感知/ 响应/ 模式/ 及/ 示例/ 4.1/ ./ 1/ 感知/ 响应/ 模式/ 可靠性/ 增强/ 模式/ 一/ 给出/ 感知/ 响应/ 模式/ ,/ 包含/ 5/ 部分/ :/ 模式/ 关注点/ 、/ 应用/ 背景/ 、/ 解决/ 的/ 问题/ 、/ 解决方案/ 和/ Page5/ 扩展/ 分解/ 示意图/ ./ 其中/ ,/ 领域/ “/ Sensor/ ”/ 是/ 因果/ 领域/ ,/ 其/ 作用/ 是/ 感知/ 领域/ D/ 的/ 一些/ 状态/ ,/ 领域/ “/ Actuator/ ”/ 也/ 是/ 因果/ 领域/ ,/ 其/ 作用/ 是/ 对/ 领域/ D/ 采取/ 某些/ 应对/ 措施/ ./ 现象/ “/ sensorPhenomenon/ ”/ 由/ 领域/ “/ Sensor/ ”/ 控制/ ,/ 机器/ 可以/ 访问/ 该/ 现象/ 读取/ “/ Sensor/ ”/ 的/ 状态/ ,/ 现象/ 可靠性/ 增强/ 模式/ 一/ :/ 感知/ 响应/ 模式/ 手机操作系统/ :/ 用户/ 可以/ 使用/ 手机操作系统/ 控制/ 手机/ 的/ 状态/ ,/ 打电话/ 、/ 发短信/ 等/ ./ 问题/ 图如图/ 2/ 所示/ ./ 首先/ 判断/ 上述/ 问题/ 是否/ 适合/ 使用/ 感知/ 响应/ 模式/ ./ 该/ 问题/ 中/ 存在/ 因果/ 领域/ “/ CellPhone/ ”/ ,/ 机器/ 可以/ 通过/ 访问/ 现象/ “/ poweron/ ”/ 、/ “/ poweroff/ ”/ 和/ “/ sendsignal/ ”/ 来/ 修改/ 领域/ “/ CellPhone/ ”/ 的/ 状态/ ,/ 满足/ 感知/ 响应/ 模式/ 的/ 可用性/ 判断/ 原则/ ./ 根据/ 感知/ 响应/ 模式/ 解决方案/ 中/ 的/ 扩展/ 策略/ ,/ 该/ 问题/ 可以/ 被/ 扩展/ 成/ 一个/ 新/ 的/ 问题/ ./ 领域/ “/ Sensor/ ”/ 将/ 感知/ 手机/ 的/ 重力/ 加速度/ 并/ 将/ 值/ 传送/ 给/ 机器/ ./ 当/ 重力/ “/ monitoredPhenomenon/ ”/ 表示/ 领域/ D/ 被/ 监测/ 的/ 变量/ ,/ 现象/ “/ actuatorPhenomenon/ ”/ 是/ 由/ 机器/ 控制/ 的/ ,/ 来/ 修改/ 领域/ “/ Actuator/ ”/ 的/ 状态/ ,/ 共享/ 现象/ “/ controlled/ -/ Phenomenon/ ”/ 由/ 领域/ “/ Actuator/ ”/ 控制/ ,/ 引发/ 该/ 现象/ 可以/ 改变/ 领域/ D/ 的/ 状态/ ,/ 来/ 采取/ 应对/ 措施/ ./ 加速度/ 值/ 超过/ 某一/ 阈值/ 时/ ,/ 说明/ 手机/ 很/ 可能/ 处于/ 坠落/ 的/ 过程/ 中/ ,/ 机器/ 引发/ 和/ 领域/ “/ Shrapnel/ ”/ 之间/ 的/ 共享/ 现象/ “/ popup/ ”/ ,/ 弹起/ 弹片/ ,/ 使得/ 手机/ 被/ 保护/ 起来/ ,/ 避免/ 手机/ 因/ 摔/ 落/ 而/ 造成/ 无法/ 使用/ ./ 扩展/ 之后/ 的/ 问题/ 图如图/ 3/ 所示/ ./ Page6/ 根据/ 感知/ 响应/ 模式/ 的/ 解决方案/ 中/ 的/ 可靠性/ 问题/ 分析/ 策略/ ,/ 扩展/ 后/ 的/ 问题/ 可以/ 分解/ 为/ 两个/ 子/ 问题/ ./ 分解/ 得到/ 的/ 子/ 问题/ 一/ 的/ 问题/ 图如图/ 4/ 所示/ ./ 子/ 问题/ 二/ 的/ 问题/ 图和原/ 问题/ 图/ 相同/ ./ 可靠性/ 增强/ 模式/ 二/ :/ 加密/ 校验/ 模式/ 4.2/ ./ 2/ 加密/ 校验/ 模式/ 示例/ 这里/ 用/ 一个/ ATM/ 显示/ 系统/ 的/ 例子/ 来/ 展示/ 加密/ 解密/ 模式/ 的/ 使用/ ./ ATM/ 显示/ 系统/ :/ 某/ 银行/ 需要/ 构建/ 一个/ 软件系统/ ,/ 将/ 数据库/ 中/ 的/ 账户/ 信息/ 显示/ 于/ ATM/ 机上/ ./ 图/ 5/ 展示/ 了/ ATM/ 显示/ 系统/ 的/ 问题/ 图/ ./ 首先/ 判断/ 该/ 问题/ 是否/ 适合/ 使用/ 加密/ 解密/ 模式/ ./ 该/ 问题/ 中/ 存在/ 词法/ 领域/ “/ Account/ ”/ ,/ 机器/ 可以/ 访问/ 现象/ “/ accountinformation/ ”/ ./ 满足/ 加密/ 校验/ 模式/ 的/ 可用性/ 判断/ 原则/ ./ 分解/ 得到/ 两个/ 子/ 问题/ ,/ 子/ 问题/ 二和原/ 问题/ 相同/ ,/ 完成/ 了/ 功能性/ 需求/ ./ 而子/ 问题/ 一中/ 的/ 机器/ 可以/ 通过/ 领域/ “/ Sensor/ ”/ 来/ 获取/ 手机/ 重力/ 加速度/ ,/ 当/ 重力加速/ 度过/ 大时/ ,/ 可以/ 通过/ 控制/ 弹片/ 来/ 弹起/ 手机/ 保护/ 壳/ ,/ 保护/ 手机/ ./ 扩展/ 后/ 的/ 问题/ 可以/ 避免/ 一部分/ 因为/ 坠落/ 导致/ 的/ 手机/ 损坏/ ,/ 增强/ 了/ 系统/ 的/ 容错性/ ./ 4.2/ 加密/ 校验/ 模式/ 及/ 示例/ 4.2/ ./ 1/ 加密/ 校验/ 模式/ 可靠性/ 增强/ 模式/ 二/ 给出/ 了/ 加密/ 校验/ 模式/ ./ 其中/ ,/ 领域/ “/ EncryptedData/ ”/ 是/ 词法/ 领域/ ,/ 表示/ 加密/ 后/ 的/ 数据/ ./ 共享/ 现象/ “/ encryptdata/ ”/ 是/ 由/ 机器/ 控制/ 的/ ,/ 作用/ 是/ 生成/ 加密/ 数据/ ,/ 共享/ 现象/ “/ encrypteddata/ ”/ 是/ 由/ 领域/ “/ EncryptedData/ ”/ 控制/ 的/ ,/ 机器/ 可以/ 通过/ 访问/ 该/ 现象/ 来/ 获得/ 加密/ 数据/ ,/ 共享/ 现象/ “/ verify/ ”/ 则/ 表示/ 了/ 数据/ 的/ 校验/ 信息/ ./ 然后/ ,/ 依据/ 加密/ 解密/ 模式/ 解决方案/ 中/ 的/ 问题/ 扩展/ 策略/ ,/ 该/ 问题/ 可以/ 扩展/ 成为/ 一个/ 新/ 问题/ ,/ 扩展/ 后/ 的/ Page7/ 问题/ 图见/ 图/ 6/ ./ 最后/ ,/ 依据/ 加密/ 解密/ 模式/ 的/ 解决方案/ 中/ 的/ 可靠性/ 问题/ 分析/ 策略/ ,/ 扩展/ 后/ 的/ 问题/ 可以/ 分解/ 为/ 两个/ 子/ 问题/ ,/ 子/ 问题/ 一/ 的/ 问题/ 图如图/ 7/ 所示/ ./ 子/ 问题/ 二/ 的/ 问题/ 图见/ 图/ 8/ ./ 分解/ 得到/ 的/ 两个/ 子/ 问题/ ,/ 子/ 问题/ 一将/ 账户/ 中/ 的/ 数据/ 加密/ ,/ 并且/ 存储/ 于/ 领域/ “/ EncryptedData/ ”/ 中/ ,/ 子/ 可靠性/ 增强/ 模式/ 三/ :/ 日志/ 模式/ 问题/ 二/ 读取/ 领域/ “/ EncryptedData/ ”/ 中/ 的/ 加密/ 数据/ ,/ 将/ 加密/ 数据/ 解密/ ,/ 并/ 引发/ 现象/ “/ verity/ ”/ 获得/ 校验/ 信息/ ./ 最后/ 调用/ 与/ 领域/ “/ ATM/ ”/ 之间/ 的/ 共享/ 现象/ ,/ 将/ 数据/ 显示/ 在/ ATM/ 机上/ ./ 原/ 问题/ 中/ ,/ 机器/ 读取/ 账户/ 的/ 信息/ ,/ 并且/ 显示/ 在/ 显示器/ 上/ 的/ 过程/ ,/ 数据/ 会/ 暴露/ 于/ 不/ 安全/ 的/ 通信/ 环境/ 下且/ 明文/ 传输/ ,/ 可能/ 会/ 造成/ 数据/ 被/ 未经/ 授权/ 的/ 人/ 或/ 系统/ 读取/ 和/ 修改/ ./ 而/ 使用/ 加密/ 解密/ 模式/ 得到/ 的/ 子/ 问题/ 二/ ,/ 数据/ 是/ 用/ 密文/ 的/ 形式/ 传递/ 的/ ,/ 且/ 在/ 数据/ 使用/ 前/ 进行/ 校验/ ,/ 避免/ 系统/ 因为/ 数据/ 不/ 完整/ 导致/ 的/ 崩溃/ ,/ 提高/ 了/ 系统/ 容错性/ ./ 4.3/ 日志/ 模式/ 及/ 示例/ 4.3/ ./ 1/ 日志/ 模式/ 可靠性/ 增强/ 模式/ 三/ 给出/ 日志/ 模式/ ./ 其中/ ,/ 领域/ “/ Log/ ”/ 是/ 词法/ 领域/ ,/ 其/ 作用/ 是/ 记录/ 系统/ 的/ 运行/ 状态/ 序列/ ./ 现象/ “/ addrecord/ ”/ 是/ 由/ 机器/ 控制/ 的/ ,/ 向/ 领域/ “/ Log/ ”/ 中/ 新增/ 一条/ 记录/ ./ 4.3/ ./ 2/ 日志/ 模式/ 示例/ 这里/ 用/ 一个/ 空调/ 控制系统/ 的/ 例子/ 来/ 展示/ 日志/ 模/ Page8/ 式/ 的/ 使用/ ./ 的/ 状态/ ,/ 包括/ 加热/ 和/ 制冷/ ./ 其/ 问题/ 图见/ 图/ 9/ ./ 空调/ 控制系统/ :/ 操作员/ 可以/ 通过/ 程序控制/ 空调/ 首先/ 判断/ 该/ 问题/ 是否/ 适合/ 使用/ 日志/ 模式/ ./ 该/ 问题/ 中/ 存在/ 因果/ 领域/ “/ AirCondition/ ”/ ,/ 并且/ 机器/ 可以/ 通过/ 访问共享/ 现象/ “/ temperature/ ”/ 来/ 读取/ “/ AirCondition/ ”/ 的/ 状态/ ,/ 满足/ 日志/ 模式/ 的/ 可用性/ 判断/ 原则/ ./ 然后/ ,/ 根据/ 日志/ 模式/ 的/ 解决方案/ 中/ 的/ 问题/ 扩展/ 策略/ ,/ 该/ 问题/ 可以/ 被/ 扩展/ 成为/ 一个/ 新/ 问题/ ./ 扩展/ 得到/ 的/ 问题/ 图如图/ 10/ 所示/ ./ 可靠性/ 增强/ 模式/ 四/ :/ 授权/ 模式/ 最后/ ,/ 根据/ 日志/ 模式/ 的/ 解决方案/ 中/ 的/ 可靠性/ 问题/ 分析/ 策略/ ,/ 将/ 扩展/ 后/ 的/ 问题/ 分解/ 为/ 两个/ 子/ 问题/ ./ 子/ 问题/ 一/ 的/ 问题/ 图见/ 图/ 11/ ./ 子/ 问题/ 二/ 的/ 问题/ 图和原/ 问题/ 图/ 相同/ ./ 分解/ 得到/ 的/ 两个/ 子/ 问题/ ,/ 子/ 问题/ 二和原/ 问题/ 相同/ ,/ 完成/ 功能性/ 需求/ ./ 子/ 问题/ 二中/ 的/ 机器/ ,/ 将/ 领域/ “/ AirCondition/ ”/ 中/ 的/ 温度/ 状态/ ,/ 以及/ 机器/ 领域/ 中/ 的/ 操作/ 序列/ 记录/ 在/ 领域/ “/ Log/ ”/ 里/ ./ 当/ 领域/ “/ AirCondition/ ”/ 运行/ 出现/ 问题/ 的/ 时候/ ,/ 系统/ 的/ 维护/ 人员/ 可以/ 查看/ 领域/ “/ Log/ ”/ 的/ 内容/ ,/ 根据/ 温度/ 的/ 变化/ 以及/ 操作/ 序列/ ,/ 推测/ 问题/ 的/ 原因/ ,/ 提高/ 了/ 系统/ 的/ 易/ 恢复性/ ./ 4.4/ 授权/ 模式/ 及/ 示例/ 4.4/ ./ 1/ 授权/ 模式/ 可靠性/ 增强/ 模式/ 四/ 给出/ 授权/ 模式/ ./ 其中/ ,/ 领域/ “/ AuthorizationList/ ”/ 是/ 词法/ 领域/ ,/ 并且/ 存储/ 了/ 领域/ D1/ 中/ 所有/ 身份/ 的/ 权限/ 信息/ ./ 共享/ 现象/ “/ userIdentity/ ”/ 由/ 领域/ D1/ 控制/ ,/ 机器/ 可以/ 通过/ 访问/ 该/ 现象/ ,/ 获取/ 领域/ D1/ 的/ 身份/ 信息/ ./ 共享/ 现象/ “/ operationswithpermit/ ”/ 由/ 领域/ “/ AuthorizationList/ ”/ 控制/ ,/ 机器/ 可以/ 访问/ 该/ 现象/ ,/ 获取/ 当前/ 身份/ 可以/ 执行/ 的/ 操作/ ./ Page94/ ./ 4.2/ 授权/ 模式/ 示例/ 使用/ ./ 可以/ 删除/ 、/ 添加/ 和/ 修改/ 文件/ ./ 其/ 问题/ 图如图/ 12/ ./ 这里/ 用/ 一个/ 网络/ 硬盘/ 的/ 例子/ 来/ 展示/ 授权/ 模式/ 的/ 网络/ 硬盘/ 系统/ :/ 用户/ 通过/ 该/ 程序/ 访问/ 网络/ 硬盘/ ,/ 首先/ 判断/ 该/ 问题/ 是否/ 适合/ 使用/ 授权/ 模式/ ./ 该/ 问题/ 中/ 存在/ 可/ 叫牌/ 领域/ “/ User/ ”/ 和/ 词法/ 领域/ “/ NetworkHardDisk/ ”/ ,/ 领域/ “/ User/ ”/ 可以/ 向/ 机器/ 发起/ 现象/ “/ download/ ”/ ,/ “/ upload/ ”/ ,/ “/ delete/ ”/ ,/ “/ rename/ ”/ ,/ 机器/ 可以/ 引发/ 现象/ “/ delete/ ”/ ,/ “/ insert/ ”/ ,/ “/ update/ ”/ 来/ 修改/ 领域/ “/ NetworkHardDisk/ ”/ 的/ 值/ ,/ 满足/ 授权/ 模式/ 的/ 可用性/ 判断/ 原则/ ./ 然后/ ,/ 根据/ 授权/ 模式/ 的/ 解决方案/ 中/ 的/ 问题/ 扩展/ 策略/ 该/ 问题/ 可以/ 被/ 扩展/ 成为/ 一个/ 新/ 问题/ ,/ 扩展/ 得到/ 的/ 问题/ 图见/ 图/ 13/ ./ 扩展/ 后/ 的/ 问题/ 是/ 原/ 问题/ 的/ 描述/ 变体/ ,/ 如果/ 原/ 问题/ 是/ 有解/ 的/ ,/ 那么/ 扩展/ 后/ 的/ 问题/ 也/ 是/ 有解/ 的/ ./ 可靠性/ 增强/ 模式/ 五/ :/ 缓冲/ 模式/ 扩展/ 之后/ 的/ 问题/ 区分/ 了/ 领域/ “/ User/ ”/ 的/ 不同/ 身份/ ,/ 机器/ 首先/ 读取/ 用户/ 的/ 身份/ 信息/ ,/ 根据/ 身份/ 信息/ ,/ 读取/ 该/ 身份/ 所/ 允许/ 的/ 操作/ 列表/ ./ 之后/ ,/ 机器/ 可以/ 判断/ 用户/ 发起/ 的/ 请求/ 是否/ 在/ 操作/ 列表/ 范围/ 之内/ ,/ 如果/ 在/ ,/ 则/ 正确/ 执行/ ,/ 如果/ 不/ 在/ ,/ 则/ 拒绝执行/ ,/ 提高/ 了/ 系统/ 的/ 成熟性/ ./ 4.5/ 缓冲/ 模式/ 及/ 示例/ 4.5/ ./ 1/ 缓冲/ 模式/ 可靠性/ 增强/ 模式/ 五/ 给出/ 缓冲/ 模式/ ,/ 其中/ ,/ 领域/ “/ Buffer/ ”/ 是/ 词法/ 领域/ ,/ 其/ 作用/ 是/ 缓冲/ 机器/ 领域/ 和/ 问题/ 领域/ 之间/ 触发/ 速度/ 过快/ 的/ 现象/ ./ 共享/ 现象/ “/ addrecord/ ”/ 表示/ 向/ 领域/ “/ Buffer/ ”/ 中/ 增加/ 一条/ 记录/ ./ 共享/ 现象/ “/ getrecord/ ”/ 从/ 领域/ “/ Buffer/ ”/ 中/ 获得/ 一条/ 记录/ ./ 4.5/ ./ 2/ 缓冲/ 框架/ 示例/ 这里/ 用/ 一个/ 火车/ 购票/ 系统/ 来/ 展示/ 缓冲/ 框架/ 的/ Page10/ 使用/ ./ 火车/ 购票/ 系统/ :/ 某/ 城市/ 计划/ 推行/ 火车/ 网上/ 购票/ ,/ 需要/ 构建/ 一个/ 火车/ 购票/ 系统/ ./ 用户/ 在/ 登录/ 该/ 系统/ 之后/ ,/ 可以/ 购买/ 车票/ ,/ 购买/ 车票/ 的/ 信息/ 写入/ 数据库/ 中/ ./ 该/ 问题/ 的/ 问题/ 图如图/ 14/ 所示/ ./ 首先/ ,/ 判断/ 该/ 问题/ 是否/ 适合/ 使用/ 缓冲/ 模式/ ./ 该/ 问题/ 中/ 存在/ 可/ 叫牌/ 领域/ “/ User/ ”/ ,/ 该/ 领域/ 可以/ 引发/ 现象/ “/ returnticket/ ”/ 和/ “/ orderticket/ ”/ 向/ 机器/ 发送/ 操作/ 请求/ ,/ 满足/ 缓冲/ 模式/ 的/ 可用性/ 判断/ 原则/ ./ 然后/ ,/ 根据/ 缓冲/ 模式/ 解决方案/ 中/ 的/ 问题/ 扩展/ 策略/ ,/ 该/ 问题/ 可以/ 被/ 扩展/ 成为/ 一个/ 新/ 问题/ ,/ 扩展/ 后/ 的/ 问题/ 图如图/ 15/ 所示/ ./ 最后/ ,/ 依据/ 缓冲/ 模式/ 解决方案/ 中/ 的/ 可靠性/ 问题/ 分析/ 策略/ ,/ 扩展/ 后/ 的/ 问题/ 可以/ 分解/ 为/ 两个/ 子/ 问题/ ,/ 子/ 问题/ 一/ 的/ 问题/ 图如图/ 16/ 所示/ ./ 子/ 问题/ 二/ 的/ 问题/ 图见/ 图/ 17/ ./ 使用/ 缓冲/ 模式/ 得到/ 的/ 两个/ 子/ 问题/ ,/ 其中/ 子/ 问题/ 一将/ 用户/ 的/ 请求/ 先/ 缓冲/ 到/ 领域/ “/ Buffer/ ”/ 中/ ,/ 子/ 问题/ 二中/ 的/ 机器/ 读取/ 领域/ “/ Buffer/ ”/ 中/ 待处理/ 的/ 请求/ ,/ 并/ 进行/ 处理/ ./ 如果/ 用户数量/ 很大/ ,/ 会/ 在/ 一个/ 时间段/ 内向/ 机器/ 发送/ 大量/ 的/ 访问/ 请求/ ./ 在/ 原/ 问题/ 中/ ,/ 当/ 用户/ 发起/ 请求/ 过快/ 时/ ,/ 无法/ 及时处理/ 的/ 请求/ 将会/ 导致/ 系统故障/ ./ 使用/ 缓冲/ 模式/ 得到/ 的/ 两个/ 子/ 问题/ 则/ 解决/ 了/ 这个/ 问题/ ,/ 可以/ 先/ 把/ 用户/ 的/ 请求/ 缓冲/ 下来/ ,/ 避免/ 由于/ 机器/ 接收/ 到/ 多个/ 请求/ 而/ 导致/ 系统故障/ ,/ 提高/ 了/ 系统/ 的/ 成熟性/ ./ 5/ 可靠性/ 关注点/ 分析/ 工具/ 及/ 案例/ 研究/ 5.1/ 支撑/ 工具/ 的/ 实现/ 我们/ 设计/ 并/ 实现/ 了/ 问题/ 框架/ 方法/ 的/ 可靠性/ 关注点/ 分析/ 支撑/ 工具/ ./ 它/ 支持/ 问题/ 框架/ 方法/ 的/ 图形化/ 建模/ ,/ 并且/ 可以/ 利用/ 上述/ 可靠性/ 增强/ 模式/ 对/ 已/ 建模/ 好/ 的/ 问题/ 进行/ 处理/ ./ 图/ 18/ 是/ 工具/ 界面/ 截图/ ,/ 包括/ 6/ 个/ 部分/ :/ (/ 1/ )/ 菜单栏/ ./ 提供/ 新建/ 工程/ 、/ 新建/ 问题/ 、/ 打开/ 工程/ 、/ 保存/ 工程/ 和/ 退出/ 程序/ 的/ 功能/ ./ 一个/ 工程/ 可以/ 建模/ 多个/ 问题/ ./ (/ 2/ )/ 工具栏/ ./ 提供/ 采用/ 问题/ 框架/ 方法/ 进行/ 建模/ 共享/ 现象/ 的/ 信息/ 以及/ 需求/ 的/ 描述/ ./ (/ 5/ )/ 可靠性/ 增强/ 模式/ 操作/ 面板/ ./ 上部/ 列出/ 了/ 5/ 种/ 可靠性/ 增强/ 模式/ ,/ 点击/ 其中/ 的/ 一个/ 模式/ ,/ 该/ 模式/ 对应/ 的/ 介绍/ 会/ 出现/ 在/ 面板/ 下部/ ./ 右键/ 点击/ 一个/ 模式/ ,/ 可以/ 弹/ 出/ 菜单/ ,/ 帮助/ 建模/ 人员/ 使用/ 该/ 模式/ 完成/ 对/ 画布/ 当前/ 展示/ 问题/ 的/ 处理/ ./ (/ 6/ )/ 问题/ 层级/ 展示/ 面板/ ./ 展示/ 工程/ 所有/ 问题/ 之间/ 的/ 层级/ 关系/ ./ 其中/ ,/ 表示/ 当前/ 工程/ ,/ 表示/ 已经/ 被/ 分解/ 的/ 问题/ ,/ 表示/ 未/ 被/ 分解/ 的/ 问题/ ./ 的/ 基本/ 图元/ ./ (/ 3/ )/ 画布/ ./ 用于/ 图形化/ 表示/ 一个/ 问题/ ,/ 还/ 可以/ 创建/ 问题/ 框架/ 方法/ 的/ 基本/ 建模/ 元素/ ,/ 包括/ 机器/ 、/ 接口/ 、/ 领域/ 和/ 需求/ ./ 可以/ 双击/ 建模/ 元素/ 修改/ 其/ 属性/ ./ 画布/ 采用/ 多/ 标签/ 面板/ 实现/ ,/ 可/ 同时/ 对/ 多个/ 问题/ 建模/ ./ (/ 4/ )/ 补充/ 描述/ 面板/ ./ 给出/ 问题/ 图中/ 各个/ 接口/ 上/ Page11/ 图/ 18/ 支撑/ 工具/ 界面/ 截图/ 本节/ 以/ 银行/ 账户/ 管理/ 问题/ 为例/ ,/ 展示/ 可靠性/ 增/ 5.2/ 案例/ 研究/ 强/ 模式/ 的/ 使用/ 过程/ ./ 银行/ 账户/ 管理系统/ :/ 某/ 银行/ 要/ 构建/ 一个/ 储户/ 账户/ 管理系统/ ,/ 储户/ 可以/ 在/ 网上/ 登录/ 系统/ ,/ 修改/ 自己/ 的/ 用户名/ 、/ 密码/ 等/ 信息/ ,/ 也/ 可以/ 进行/ 资金/ 的/ 提取/ 和/ 存入/ ./ 另一方面/ ,/ 银行/ 还/ 在/ 城市/ 各处/ 安放/ 了/ ATM/ 机/ ,/ 系统/ 要/ 将/ 储户/ 的/ 信息/ 正确/ 地/ 显示/ 到/ ATM/ 机上/ ./ 图/ 19/ 展示/ 了/ 上述/ 问题/ 的/ 问题/ 图/ ./ 由于/ ATM/ 机/ 分布/ 于/ 城市/ 各处/ ,/ 系统/ 和/ ATM/ 机/ 之间/ 的/ 消息/ 交互/ 需要/ 通过/ 不/ 安全/ 的/ 网络/ ,/ 因此/ 考虑/ 用/ 加密/ 校验/ 模式/ 处理/ 该/ 问题/ ./ 处理/ 之后/ ,/ 原/ 问题/ 被/ 分解/ 为/ 两个/ 子/ 问题/ :/ “/ 银行/ 账户/ 管理/ (/ a/ )/ ”/ 和/ “/ 加密/ 账户/ 信息/ ”/ ./ 其中/ ,/ 问题/ “/ 银行/ 账户/ 管理/ (/ a/ )/ ”/ 是/ 原/ 问题/ 的/ 控制/ 变体/ ,/ 问题/ “/ 加密/ 账户/ 信息/ ”/ 可以/ 匹配/ 到/ 变换/ 框架/ ./ 图/ 20/ 和/ 图/ 21/ 分别/ 是/ 两个/ 子/ 问题/ 的/ 问题/ 图/ ./ 对于/ 问题/ “/ 银行/ 账户/ 管理/ (/ a/ )/ ”/ ,/ 由于/ 领域/ “/ User/ ”/ 中/ 存在/ 着/ 多个/ 个体/ ,/ 且/ 有/ 不同/ 身份/ 类型/ ,/ 因此/ 可以/ 采用/ 授权/ 模式/ 处理/ 该/ 问题/ ./ 处理/ 后/ ,/ 该/ 问题/ 被/ 分解/ 为/ 一个/ 子/ 问题/ :/ “/ 银行/ 账户/ 管理/ (/ b/ )/ ”/ ,/ 见图/ 22/ ./ 问题/ “/ 银行/ 账户/ 管理/ (/ b/ )/ ”/ 是/ 问题/ “/ 银行/ 账户/ 管理/ (/ a/ )/ ”/ 的/ 描述/ 变体/ ./ 在/ 问题/ “/ 银行/ 账户/ 管理/ (/ b/ )/ ”/ 中/ ,/ 领域/ “/ User/ ”/ 中有/ 大量/ 的/ 个体/ ,/ 他们/ 可能/ 在/ 同一个/ 时间段/ 内/ ,/ 向/ 机器/ 发送/ 大量/ 的/ 访问/ 请求/ ./ 因此/ ,/ 可以/ 采用/ 缓冲/ 模式/ 来/ 处理/ 问题/ “/ 银行/ 账户/ 管理/ (/ b/ )/ ”/ ./ Page12/ 处理/ 后/ ,/ 该/ 问题/ 被/ 分解/ 为/ 两个/ 子/ 问题/ ,/ 分别/ 为/ :/ “/ 银行/ 账户/ 管理/ (/ c/ )/ ”/ 和/ “/ 缓冲/ 请求/ ”/ ./ 其中/ ,/ “/ 银行/ 账户/ 管理/ (/ c/ )/ ”/ 是/ “/ 银行/ 账户/ 管理/ (/ b/ )/ ”/ 的/ 控制/ 变体/ ,/ 而/ 问题/ “/ 缓冲/ 请求/ ”/ 可以/ 匹配/ 到/ 简单/ 工件/ 框架/ ./ 两个/ 子/ 问题/ 的/ 问题/ 图见/ 图/ 23/ 和/ 图/ 24/ ./ 至此/ ,/ 问题/ 层级/ 展示/ 面板/ 如图/ 25/ ./ 在/ 问题/ 层次结构/ 的/ 叶/ 节点/ 上/ 是/ 最后/ 得到/ 的/ 3/ 个子/ 问题/ ,/ 包括/ 加密/ 账户/ 信息/ 、/ 缓冲/ 请求/ 、/ 银行/ 账户/ 管/ 描述/ 变体/ ./ 理/ (/ c/ )/ ./ 这/ 3/ 个子/ 问题/ 就是/ 使用/ 可靠性/ 增强/ 模式/ 对/ 银行/ 账户/ 管理/ 问题/ 处理/ 的/ 最终/ 结果/ ./ 这/ 3/ 个子/ 问题/ 都/ 是/ 有解/ 的/ ./ (/ 1/ )/ 加密/ 账户/ 信息/ ./ 匹配/ 到/ 变换/ 框架/ ./ (/ 2/ )/ 缓冲/ 用户/ 请求/ ./ 匹配/ 到/ 简单/ 工件/ 框架/ ./ (/ 3/ )/ 银行/ 账户/ 管理/ (/ c/ )/ ./ 是/ 原/ 问题/ 的/ 控制/ 变体/ 和/ 与/ 原/ 问题/ 相比/ ,/ 其/ 可靠性/ 增强/ 体现/ 在/ :/ (/ 1/ )/ 处理/ 后/ 的/ 3/ 个子/ 问题/ 在/ 数据传输/ 之前/ 做/ 了/ 加密/ 处理/ ,/ 接收端/ 检查/ 校验/ ,/ 避免/ 了/ 因为/ 数据/ 不/ 完整/ 导致/ 的/ 系统/ 崩溃/ ./ (/ 2/ )/ 缓冲/ 用户/ 发来/ 的/ 访问/ 请求/ ,/ 避免/ 因为/ 访问/ 请求/ 过多/ 导致/ 的/ 系统/ 崩溃/ ./ (/ 3/ )/ 区分/ 用户/ 的/ 身份/ 权限/ ,/ 降低/ 了/ 用户/ 误操作/ 和/ 恶意/ 用户/ 攻击/ 的/ 可能/ ./ 6/ 相关/ 工作/ 软件系统/ 可靠性/ 是/ 软件开发/ 过程/ 中/ 关注/ 的/ 重要/ 问题/ 之一/ ,/ 随着/ 软件/ 规模/ 和/ 软件/ 作用/ 范围/ 不断扩大/ ,/ 软件系统/ 的/ 可靠性/ 问题/ 显得/ 越来越/ 重要/ ./ 软件系统/ 失效/ 对/ 人们/ 的/ 影响/ 从/ 生活/ 不便/ ,/ 到/ 经济/ 的/ 损失/ ,/ 甚至/ 是/ 失去/ 生命/ [/ 10/ ]/ ./ 在/ 传统/ 的/ 软件工程/ 中/ ,/ 软件/ 的/ 可靠性/ 通常/ 是/ 通过/ 基于/ 测量/ 的/ 方法/ 分析/ 的/ ./ 其/ 核心思想/ 是/ 检测/ 并/ 记录/ 运行/ 中/ 的/ 系统/ 发生/ 的/ 错误/ 和/ 失效/ ,/ 通过/ 分析/ 这些/ 数据/ 发现/ 系统/ 的/ 错误行为/ 、/ 识别系统/ 瓶颈/ 、/ 量化/ 可靠性/ 指标/ [/ 10/ ]/ ./ 需求/ 阶段/ 是/ 软件工程/ 的/ 第一个/ 阶段/ ,/ 如何/ 在/ 需求/ 阶段/ 捕获/ 、/ 建模/ 和/ 分析/ 可靠性/ 需求/ 以及/ 提供/ 软件系统/ 可靠性/ 的/ 需求/ 级别/ 解决方案/ 一直/ 是/ 需求/ 工程/ 研究者/ 关心/ 的/ 问题/ ./ 比较/ 有/ 代表性/ 的/ 工作/ 有/ :/ (/ 1/ )/ 文献/ [/ 18/ ]/ 提出/ 了/ 一种/ 用/ UML/ 建模/ 和/ 分析/ 系统可靠性/ 的/ 方法/ ,/ 该/ 方法/ 分为/ 四步/ :/ 首先/ 用/ UML/ 建模/ 整个/ 系统/ ,/ 然后/ 将/ UML/ 模型/ 转化/ 为/ 等价/ 的/ XMI/ 表示/ ,/ 之后/ 将/ XMI/ 表示/ 映射/ 到/ 基于/ 统计/ 的/ 可靠性/ 模型/ 上/ ,/ 最后/ 计算/ 得到/ 系统/ 的/ 可靠性/ ./ (/ 2/ )/ 问题/ 框架/ 方法/ 本身/ 也/ 已经/ 考虑/ 了/ 可靠性/ 问题/ ,/ 其/ 可靠性/ 关注点/ 主要/ 针对/ 问题/ 领域/ 性质/ 失效/ 的/ 情况/ [/ 1/ ]/ ,/ 认为/ 可以/ 通过/ 评估/ 问题/ 领域/ 失效/ 的/ 可能性/ 和/ 失效/ 导致/ 的/ 损害/ 的/ 严重性/ ,/ 来/ 识别系统/ 的/ 可靠性/ 关注点/ ,/ 并/ 通过/ 给出/ 更/ 精确/ 的/ 、/ 考虑/ 可能/ 失效/ 的/ 领域/ 描述/ ,/ 来/ 支持/ 可靠性/ 关注点/ 的/ 解决/ ./ (/ 3/ )/ Strunk/ 等/ 人/ [/ 19/ ]/ 从/ 基于/ 用例/ 方法/ 的/ 基本/ 观点/ 出发/ ,/ 提出/ “/ AssuranceCase/ ”/ ,/ 并/ 将/ 它/ 与/ 问题/ 框架/ 相结合/ ./ 用/ 问题/ 框架/ 表示/ “/ AssuranceCase/ ”/ 的/ 问题/ 结构/ 描述/ ,/ 以/ 帮助/ “/ AssuranceCase/ ”/ 方法/ 分析/ 系统/ Page13/ 的/ 可靠性/ 需求/ ./ (/ 4/ )/ 面向/ 方面/ 的/ 需求/ 工程/ 方法/ 是/ 将/ “/ 方面/ ”/ 的/ 概念/ 引入/ 需求/ 阶段/ ,/ 对/ 功能性/ 和/ 非/ 功能性/ 横切/ 关注点/ 的/ 分离/ 给予/ 了/ 支持/ ./ Safonov/ [/ 20/ ]/ 提出/ 了/ 一种/ 面向/ 方面/ 的/ 软件可靠性/ 工程/ ,/ 从/ 关注点/ 分离/ 的/ 角度/ 分析/ 软件系统/ 的/ 可靠性/ ./ 随着/ 互联网/ 技术/ 的/ 不断/ 成熟/ ,/ 越来越/ 多/ 的/ 软件系统/ 依赖/ 互联网/ 提供/ 在线/ 服务/ ./ 一些/ 恶意/ 的/ 用户/ 通过/ 互联网/ 对/ 软件系统/ 发起/ 攻击/ ,/ 造成/ 信息/ 泄露/ 、/ 信息/ 篡改/ 、/ 软件系统/ 拒绝服务/ 等/ ./ 这些/ 攻击/ 通过/ 破坏/ 系统/ 的/ 安全性/ ,/ 导致系统/ 失效/ ,/ 从而/ 降低/ 了/ 系统/ 的/ 可靠性/ ./ 需求/ 工程/ 的/ 研究者/ 提出/ 了/ 一些/ 软件系统/ 安全性/ 需求/ 捕获/ 、/ 分析/ 和/ 建模/ 的/ 方法/ ,/ 比较/ 有/ 代表性/ 的/ 工作/ 包括/ :/ (/ 1/ )/ 文献/ [/ 21/ ]/ 提出/ 了/ 一种/ 面向/ 安全性/ 的/ Tropos/ 方法/ 扩展/ ./ 该/ 方法/ 基于/ Tropos/ 的/ 建模/ 思想/ ,/ 定义/ 了/ 一组/ 安全/ 概念/ ,/ 包括/ 安全性/ 约束/ 、/ 安全性/ 依赖/ 和/ 安全性/ 实体/ (/ 安全性/ 目标/ 、/ 安全性/ 任务/ 和/ 安全性/ 资源/ )/ ,/ 并且/ 提供/ 了/ 一个/ 安全/ 建模/ 过程/ 将/ 安全/ 概念/ 引入/ 到/ 传统/ 的/ Tropos/ 方法/ 中/ ./ (/ 2/ )/ Sindre/ 和/ Opdahl/ [/ 22/ ]/ 将/ “/ NegativeScenario/ ”/ (/ 系统/ 用户/ 不/ 期望/ 出现/ 的/ 情况/ )/ 引入/ 用例/ 上下文/ 中/ ,/ 创建/ 了/ 误用/ 例/ 的/ 概念/ ./ 在/ 此基础/ 上/ ,/ 文献/ [/ 22/ ]/ 提出/ 了/ 一个/ 安全/ 需求/ 抽取/ 的/ 过程/ ,/ 包括/ 五步/ :/ 识别/ 关键/ 资产/ ,/ 定义/ 安全/ 目标/ ,/ 识别/ 威胁/ ,/ 识别/ 和/ 分析/ 风险/ ,/ 定义/ 安全/ 需求/ ./ (/ 3/ )/ 在/ 问题/ 框架/ 方法/ 中/ ,/ 需求/ 表达/ 为/ 用户/ 期望/ 的/ 现实/ 世界/ 和/ 软件系统/ 交互/ 后/ 的/ 作用/ 效果/ ./ 与/ 此对应/ ,/ Lin/ 等/ 人/ [/ 2/ ]/ 提出/ “/ 反/ 需求/ ”/ 的/ 概念/ ,/ 用于/ 表示/ 恶意/ 攻击者/ 的/ 需求/ ./ 在/ 此基础/ 上/ ,/ 文献/ [/ 2/ ]/ 设计/ 了/ 三种/ “/ 滥用/ 框架/ ”/ ,/ 包括/ interception/ (/ 拦截/ )/ 、/ modification/ (/ 修改/ )/ 和/ denialofaccess/ (/ 拒绝/ 访问/ )/ 等/ ./ “/ 滥用/ 框架/ ”/ 用于/ 表达/ 安全/ 威胁/ 和/ 分析/ 恶意/ 攻击者/ 实现/ “/ 反/ 需求/ ”/ 的/ 可能/ 情况/ ,/ 最后/ 识别/ 出/ 软件系统/ 的/ 安全漏洞/ ./ 与/ 以上/ 方法/ 不同/ ,/ 本文/ 从/ 软件系统/ 可靠性/ 的/ 3/ 个/ 技术指标/ 入手/ ,/ 识别/ 出/ 问题/ 框架/ 方法/ 的/ 5/ 种/ 可靠性/ 关注点/ ,/ 并/ 设计/ 了/ 相应/ 的/ 可靠性/ 增强/ 模式/ ,/ 将/ 可靠性/ 需求/ 显示/ 地/ 引入/ 问题/ 分析/ 过程/ 中/ ,/ 与/ 功能性/ 需求/ 相结合/ ,/ 并/ 映射/ 到/ 问题/ 的/ 结构/ 上/ ,/ 最终/ 导出/ 扩展/ 后/ 问题/ 的/ 机器/ 规格/ 说明/ ./ 其/ 主要/ 贡献/ 具体/ 包括/ :/ (/ 1/ )/ 通过/ 分析/ 公认/ 的/ 系统可靠性/ 的/ 3/ 个/ 指标/ ,/ 即/ 成熟性/ 、/ 容错性/ 和/ 易/ 恢复性/ ,/ 结合/ 问题/ 框架/ 方法/ 关于/ 问题/ 分析/ 的/ 基本原理/ ,/ 以及/ 问题/ 领域/ 的/ 特征/ ,/ 识别/ 出/ 5/ 种/ 可靠性/ 关注点/ ./ (/ 2/ )/ 参考/ 了/ 关于/ 模式/ 的/ 经典/ 的/ “/ Alexander/ 表单/ ”/ 为/ 每种/ 可靠性/ 关注点/ 定义/ 并/ 设计/ 了/ 可靠性/ 增强/ 模式/ ,/ 将/ 可靠性/ 需求/ 显示/ 地/ 引入/ 问题/ 的/ 分析/ 过程/ 中/ ,/ 通过/ 新增/ 领域/ 和/ 共享/ 现象/ ,/ 扩展/ 了/ 问题/ 的/ 边界/ ,/ 并/ 提出/ 问题/ 精化/ 策略/ ,/ 精化/ 机器/ 的/ 规格/ 说明/ ./ (/ 3/ )/ 设计/ 并/ 实现/ 了/ 支持/ 可靠性/ 关注点/ 分析/ 的/ 支撑/ 工具/ ,/ 帮助/ 系统分析/ 人员/ 正确/ 使用/ 可靠性/ 增强/ 模式/ ,/ 分析/ 可靠性/ 需求/ ,/ 提高/ 系统/ 的/ 可靠性/ ./ 7/ 结束语/ 本文/ 以/ 广义/ 的/ 系统可靠性/ 指标/ 为/ 依据/ ,/ 系统地/ 研究/ 问题/ 框架/ 方法/ 中/ 的/ 系统可靠性/ 识别/ 和/ 分析/ ,/ 以/ 提升/ 系统可靠性/ 为/ 目的/ ,/ 结合/ 问题/ 领域/ 的/ 性质/ ,/ 提出/ 可靠性/ 关注点/ ,/ 以及/ 系统可靠性/ 提升/ 解决方案/ ./ 在/ 问题/ 框架/ 方法/ 中/ ,/ 可靠性/ 关注点/ 的/ 分析/ 和/ 解决/ 还有/ 许多/ 值得/ 研究/ 的/ 方面/ ,/ 包括/ :/ (/ 1/ )/ 将/ 时间/ 因素/ 引入/ 到/ 问题/ 框架/ 方法/ 的/ 建模/ 过程/ 中/ ./ 引入/ 时间/ 因素/ 的/ 好处/ 在于/ ,/ 可以/ 分析/ 系统可靠性/ 的/ 一些/ 具体/ 测试/ 指标/ ,/ 例如/ :/ 平均/ 无故障/ 时间/ ,/ 平均/ 恢复/ 时间/ 等/ ./ (/ 2/ )/ 将/ 概率/ 计算/ 引入/ 问题/ 框架/ 方法/ 中/ ./ 软件系统/ 的/ 可靠性/ 通常/ 是/ 经过/ 大量/ 测试/ ,/ 统计/ 出来/ 的/ 一个/ 结果/ ,/ 可以/ 用/ 概率/ 的/ 形式/ 去/ 描述/ ./ 概率/ 的/ 引入/ 将会/ 有助于/ 建模/ 者/ 分析/ 可靠性/ 关注点/ ./ (/ 3/ )/ 形式化/ 建模/ 可靠性/ 增强/ 模式/ 的/ 使用/ 步骤/ ,/ 使得/ 可靠性/ 增强/ 模式/ 分解/ 方案/ 的/ 有解/ 证明/ 更加/ 严格/ ./ (/ 4/ )/ 开发/ 更为/ 强大/ 的/ 工具/ ,/ 支持/ 问题/ 框架/ 方法/ 中/ 可靠性/ 关注点/ 的/ 分析/ ./ 

