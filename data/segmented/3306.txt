Page1/ 计算机网络/ 服务质量/ 优化/ 方法/ 研究/ 综述/ 林闯/ 1/ )/ 李寅/ 1/ )/ 万剑雄/ 2/ )/ 1/ )/ (/ 清华大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100084/ )/ 2/ )/ (/ 北京科技大学/ 信息/ 工程学院/ 北京/ 100083/ )/ 摘要/ 优化/ 方法/ 为/ 设计/ 更好/ 的/ 计算机网络/ 服务质量/ 保证/ 机制/ 提供/ 了/ 有力/ 的/ 理论/ 支持/ ./ 相较/ 于/ 传统/ 启发式/ 的/ 网络/ 设计/ 方法/ ,/ 优化/ 方法/ 可以/ 从/ 理论/ 上/ 找到/ 问题/ 的/ 最优/ 解/ ,/ 从而/ 从根本上/ 克服/ 了/ 启发式/ 方法/ 不能/ 证明/ 方案/ 优劣/ 程度/ 的/ 缺陷/ ./ 因此/ ,/ 基于/ 优化/ 方法/ 的/ 机制/ 设计/ 与/ 性能/ 评价/ 成为/ 了/ 当前/ 网络/ 服务质量/ 领域/ 中/ 的/ 一个/ 前沿/ 研究/ 领域/ ./ 大量/ 的/ 研究/ 着眼于/ 从/ 优化/ 理论/ 的/ 角度/ 重新/ 建立/ 网络/ 模型/ ,/ 按照/ 优化/ 理论/ 给出/ 的/ 求解/ 机制/ 和/ 实施方案/ 设计/ 网络协议/ ./ 计算机网络/ 的/ 优化/ 可以/ 划分/ 为/ 资源分配/ 、/ 任务调度/ 、/ 网络资源/ 部署/ 和/ 系统/ 参数/ 配置/ 等/ 4/ 方面/ 问题/ ./ 对/ 计算机网络/ 服务质量/ 的/ 优化/ 建模/ 、/ 求解/ 、/ 实施/ 和/ 评价/ 成为/ 当今/ 研究/ 的/ 热点/ ./ 根据/ 最新/ 网络/ 服务质量/ 优化/ 的/ 研究进展/ ,/ 文中/ 对/ 计算机网络/ 服务质量/ 研究/ 中/ 所/ 涉及/ 到/ 的/ 优化/ 技术/ 进行/ 了/ 研究/ 与/ 综述/ ,/ 主要/ 包括/ 4/ 个/ 方面/ :/ 系统地/ 描述/ 了/ 计算机网络/ 模型/ 优化/ 算法/ 的/ 通用/ 表达形式/ ,/ 并/ 将/ 其/ 按照/ 不同/ 的/ 方式/ 进行/ 分类/ ;/ 探讨/ 了/ 不同/ 结构/ 的/ 优化/ 模型/ 对应/ 的/ 求解/ 方案/ ;/ 对比/ 分析/ 了/ 不同/ 优化/ 算法/ 的/ 实施方案/ ,/ 给出/ 了/ 方案/ 之间/ 的/ 联系/ 与/ 区别/ ;/ 归纳/ 了/ 计算机网络/ 中/ 优化/ 方案/ 的/ 性能/ 和/ 代价/ 评价/ 方法/ ./ 最后/ ,/ 对/ 全文/ 进行/ 了/ 总结/ ,/ 并/ 展望/ 了/ 进一步/ 的/ 研究/ 方向/ ./ 关键词/ 服务质量/ ;/ 优化/ 模型/ ;/ 资源配置/ ;/ 任务调度/ ;/ 性能/ 评价/ 1/ 引言/ theconnectionanddifferencebetweenthem/ ;/ presentingmethodsforperformanceandcostevalua/ -/ tionofoptimizationschemes/ ./ Finally/ ,/ wesummarizethepointsofthispaperanddiscussthepos/ -/ sibleresearchchallenges/ ./ KeywordsQoS/ ;/ optimizationmodels/ ;/ resourceallocation/ ;/ taskscheduling/ ;/ performanceevaluation/ 算法/ 的/ 评价/ 为/ 网络/ 性能/ 的/ 不断/ 改善/ 提供/ 了/ 参考/ ./ 本文/ 综述/ 了/ 优化/ 方法/ 在/ 提高/ 网络/ 服务质量/ 中/ 的/ 应用/ ,/ 主要/ 包括/ 4/ 个/ 方面/ :/ 系统地/ 描述/ 了/ 网络/ 模型/ 优化/ 算法/ 的/ 通用/ 表达形式/ ,/ 并/ 将/ 其/ 按照/ 不同/ 的/ 方式/ 进行/ 分类/ ;/ 探讨/ 了/ 不同/ 结构/ 的/ 优化/ 模型/ 的/ 求解/ 方案/ ;/ 对比/ 分析/ 了/ 不同/ 网络/ 优化/ 算法/ 的/ 实施方案/ ,/ 给出/ 了/ 方案/ 之间/ 的/ 联系/ 与/ 区别/ ;/ 归纳/ 了/ 网络/ 优化/ 方案/ 的/ 性能/ 和/ 代价/ 评价/ 方法/ ./ 最后/ ,/ 对/ 全文/ 进行/ 了/ 总结/ ,/ 并/ 提出/ 了/ 进一步/ 的/ 研究/ 方向/ ./ 2/ 网络/ QoS/ 优化/ 模型/ 表达/ 与/ 分类/ 随着/ 计算机网络/ 业务/ 的/ 逐步/ 拓展/ ,/ 各种/ 业务/ 对/ 网络/ 的/ 需求/ 也/ 在/ 不断/ 提升/ ./ 为/ 保证/ 网络服务/ 正常/ 有效/ 的/ 部署/ ,/ 需要/ 尽量/ 提高/ 或/ 保障/ 特定/ 业务/ 中/ 关键/ 的/ 服务质量/ (/ QoS/ )/ ./ 相关/ 的/ QoS/ 评价/ 指标/ 主要/ 包括/ 网络/ 的/ 吞吐/ 率/ 、/ 时延/ 、/ 丢/ 包率/ 等/ ./ 它们/ 可以/ 被/ 看成/ 网络协议/ 的/ 效用/ ./ 在/ 资源/ 有限/ 的/ 网络系统/ 中/ ,/ 其/ 对偶/ 问题/ 是/ 最小化/ 网络/ 运行/ 的/ 代价/ ./ 为了/ 进一步提高/ 网络/ 的/ QoS/ ,/ 不仅/ 需要/ 评价/ 现有/ 的/ 网络协议/ ,/ 而且/ 需要/ 进行/ 网络/ 的/ 再造/ 工程/ ,/ 用/ 优化/ 理论/ 对/ 网络系统/ 进行/ 建模/ 分析/ ,/ 得出/ 使/ 网络/ 性能/ 达到/ 尽可能/ 令人满意/ 的/ 机制/ ./ 不同/ 的/ 网络系统/ 和/ 业务/ 的/ 运行机制/ 各异/ ,/ 但/ 优化/ 模型/ 的/ 初衷/ 往往/ 是/ 相近/ 的/ ./ 如果/ 将/ 网络服务/ 看成/ 某种/ 资源/ ,/ 则/ 优化/ 问题/ 其实/ 可以/ 归结为/ 优化/ 资源配置/ ./ 更/ 细致/ 的/ 划分/ 可/ 将/ 网络/ 优化/ 模型/ 分为/ :/ (/ 1/ )/ 资源分配/ ./ 如/ 链路/ 带宽/ 分配/ 问题/ 、/ 队列/ 空间/ 分配/ 问题/ 等/ ./ (/ 2/ )/ 任务调度/ ./ 任务调度/ 问题/ 可以/ 分为/ 单/ 队列/ 多/ 服务器/ 调度/ 、/ 多/ 队列/ 单/ 服务器/ 调度/ 和/ 更/ 一般/ 的/ 多/ 队列/ 多/ 服务器/ 的/ 调度/ 等/ ./ (/ 3/ )/ 网络资源/ 部署/ ./ 如/ 确保/ 网络/ 连通性/ 的/ 互联/ 设备/ 放置/ 问题/ 、/ 在/ 服务器/ 集群/ 中/ 最大化/ 资源/ 利用率/ 的/ 软件/ 放置/ 问题/ 以及/ 最小化/ 成本/ 的/ 服务器/ 覆盖/ 问题/ ./ (/ 4/ )/ 系统/ 参数/ 配置/ ./ 如/ 传输/ 节点/ 的/ 功耗/ 配置/ 、/ 拥塞/ 控制/ 窗口/ 的/ 大小/ 配置/ ./ 优化/ 模型/ 的/ 结构/ 决定/ 了/ 解决/ 优化/ 问题/ 所/ 采用/ 的/ 算法/ ./ 算法/ 中/ 最/ 重要/ 的/ 划分/ 即/ 是/ 易解/ 问题/ 和/ NP/ -/ 难/ 问题/ ,/ 这/ 引导/ 我们/ 寻找/ 优化/ 方案/ 的/ 方向/ ,/ 抑或/ 精确/ 地/ 保证/ 最优/ 的/ 服务质量/ ,/ 抑或/ 尽力而为/ 得到/ 次优/ 的/ 优化/ 方案/ ./ 如何/ 将/ 设计/ 的/ 优化/ 算法/ 部署/ 到/ 实际/ 网络/ 运营/ 的/ 控制/ 中/ 也/ 是/ 值得/ 探讨/ 的/ 问题/ ,/ 因为/ 算法/ 的/ 部署/ 方式/ 会/ 直接/ 影响/ 网络/ 运行/ 的/ 性能/ ./ 它/ 不仅/ 是/ 工程技术/ 问题/ ,/ 也/ 与/ 优化/ 理论/ 本身/ 相关/ ./ 例如/ ,/ 我们/ 更/ 希望/ 得到/ 能够/ 分布/ 并行/ 部署/ 的/ 算法/ ,/ 来/ 减少/ 每个/ 网络/ 节点/ 的/ 负载/ ,/ 并/ 迅速/ 地/ 得到/ 优化/ 方案/ ./ 网络/ 的/ 再造/ 工程/ 是/ 一个/ 循环/ 的/ 过程/ ,/ 评价/ -/ 优化/ -/ 评价/ -/ 再/ 优化/ 地/ 循环/ 演进/ 逐步/ 提升/ 网络系统/ 的/ 服务质量/ ,/ 而/ 对/ 网络/ 优化/ 网络系统/ 旨在/ 对/ 用户/ 提供/ 尽可能/ 高/ 的/ 服务质量/ ,/ 网络/ 技术/ 也/ 在/ 为/ 可以/ 接纳/ 更/ 多/ 的/ 潜在用户/ 和/ 提高/ 用户/ 感受/ 而/ 逐步/ 演进/ ./ 图/ 1/ 描述/ 了/ 网络/ 服务质量/ 的/ 优化/ 目标/ 和/ 步骤/ ./ 整个/ 网络系统/ 可以/ 看作/ 是/ 一个/ 拥有/ 生产者/ 和/ 消费者/ 的/ 系统/ ,/ 生产者/ 对应/ 服务/ 主体/ ,/ 提供/ 相对/ 有限/ 的/ 资源/ ;/ 消费者/ 对应/ 用户/ ,/ 利用/ 生产者/ 分配/ 的/ 资源/ ./ 例如/ ,/ 对于/ 无线/ 资源/ 而言/ ,/ 有限/ 的/ 带宽/ 不能/ 满足/ 日益增长/ 的/ 无线/ 业务/ 和/ 用户/ 带来/ 的/ 需求/ ./ 这/ 不仅/ 促进/ 了/ 新/ 的/ 策略/ 和/ 技术/ 的/ 提出/ ,/ 如/ 针对/ 受限/ 无线/ 带宽/ 资源/ 提出/ 的/ 动态/ 频谱/ 访问/ 技术/ [/ 1/ ]/ ,/ 同时/ ,/ 在/ 该/ 技术/ 背景/ 下/ 的/ 资源分配/ 问题/ 得到/ 了/ 越来越/ 多/ 研究/ 人员/ 的/ 重视/ ,/ 其/ 更/ 致力于/ 解决/ 资源/ 供不应求/ 的/ 问题/ ./ 资源分配/ 问题/ 蕴含/ 一系列/ QoS/ 指标/ ,/ 资源分配/ 的/ 有效性/ 决定/ 网络/ 的/ 利用率/ ,/ 分配/ 的/ 均衡/ 程度/ 决定/ 网络/ 的/ 公平性/ ,/ 而/ 这些/ QoS/ 指标/ 统一/ 构成/ 了/ 每个/ 用户/ 和/ 整个/ 网络/ 社会/ 的/ 效用/ ./ 网络/ 中/ 的/ 任务调度/ 是/ 网络/ 优化/ 中/ 的/ 另/ 一个/ 关键/ Page3/ 因素/ ./ 任务/ 执行/ 和/ 数据传输/ 时序/ 的/ 不同/ 对/ 网络/ 用户/ 个体/ 和/ 网络/ 整体/ 的/ 影响/ 可能/ 很/ 显著/ ./ 负载/ 均衡/ 调度/ 是/ 网络/ 中/ 最/ 基本/ 的/ 调度/ 问题/ ,/ 它/ 可以/ 被/ 建模/ 为/ 以/ 最小/ 用户/ 平均/ 时延/ 为/ 目标/ 的/ 优化/ 问题/ ./ 实际上/ ,/ 调度/ 问题/ 可以/ 被/ 视为/ 一种/ 特殊/ 的/ 资源分配/ 问题/ ,/ 例如/ 以/ 最大化/ 网络/ 吞吐/ 率/ 的/ 网络/ 流/ 调度/ 策略/ 实际上/ 在/ 进行/ 着/ 网络/ 信道/ 的/ 资源分配/ ,/ 亦/ 可以/ 将/ 其/ 看/ 作为/ 以/ 时间/ 为/ 资源/ 的/ 分配/ 问题/ ,/ 使/ 分配/ 的/ 资源/ 达到/ 最少/ ,/ 资源/ 的/ 利用率/ 最高/ ./ 可见/ ,/ 资源分配/ 和/ 任务调度/ 之间/ 并/ 没有/ 不可逾越/ 的/ 鸿沟/ ./ 可以/ 将/ 任务调度/ 看/ 作为/ 在/ 有限/ 资源/ 的/ 约束/ 下/ 实现/ 最大化/ QoS/ 目标/ 的/ 决策/ 过程/ ,/ 这/ 恰恰/ 对应/ 着/ 网络/ 优化/ 模型/ 的/ 建立/ ./ 网络资源/ 部署/ 可以/ 归结为/ 研究/ 网络/ 平面/ 体系结构/ 的/ 问题/ ,/ 它/ 主要/ 探讨/ 如何/ 将/ 资源/ 合理/ 地/ 进行/ 安置/ (/ Location/ // Placement/ )/ ,/ 例如/ 网络/ 中/ 服务器/ 的/ 放置/ 、/ 无线/ 传感器/ 网络/ 中/ 设备/ 的/ 布置/ 等/ ./ 该类/ 问题/ 的/ 目标/ 同样/ 是/ 面向/ 更/ 多/ 的/ 用户/ 或/ 提供/ 更/ 高/ 的/ 性能/ ./ 还有/ 一类/ 网络/ 优化/ 是/ 针对/ 网络系统/ 的/ 参数/ 配置/ ,/ 从而/ 指导/ 网络/ 参数/ 的/ 设计/ ./ 在/ 蜂窝/ 网络/ 中/ 移动/ 基站/ 的/ 传输/ 功率/ 大小/ 将/ 影响/ 信噪比/ ,/ 如何/ 决定/ 功率/ 的/ 参数/ 配置/ 就是/ 一个/ 典型/ 的/ 网络/ 参数/ 配置/ 优化/ 问题/ ./ 2.1/ 基于/ 四/ 元素/ 的/ 网络/ QoS/ 优化/ 模型/ 表达/ 网络/ QoS/ 优化/ 模型/ 包含/ 4/ 个/ 元素/ :/ 优化/ 目标/ 、/ 决策/ 变量/ 、/ 约束条件/ 和/ 固定/ 参数/ ./ (/ 1/ )/ 针对/ 不同/ 的/ 研究/ 对象/ ,/ 目标/ 函数/ 的/ 表达/ 不同/ ,/ 可以/ 分为/ 终端用户/ 关心/ 的/ 目标/ 和/ 网络/ 运营商/ 关心/ 的/ 目标/ ./ (/ 2/ )/ 决策/ 变量/ 往往/ 对应/ 调度/ 策略/ ,/ 变量/ 的/ 个数/ 决定/ 着/ 网络系统/ 设计/ 的/ 自由度/ ./ (/ 3/ )/ 约束条件/ 限制/ 了/ 可供/ 调度/ 的/ 资源/ 容量/ 或/ 规定/ 了/ 一些/ 策略/ 上/ 和/ 技术/ 上/ 的/ 限制/ ./ (/ 4/ )/ 固定/ 参数/ 是/ 系统/ 的/ 常量/ ,/ 是/ 网络/ 中/ 已经/ 约定/ 的/ 不变/ 因素/ ./ 文献/ [/ 2/ ]/ 按/ 网络/ 中/ 的/ 不同/ 层次/ 列举/ 了/ 一些/ 可能/ 的/ 无线网/ 模型/ 元素/ ,/ 如/ 固定/ 参数/ ,/ 包括/ 传输/ 能量/ 、/ 服务/ 速率/ 、/ 源/ 编码/ 速率/ 和/ 包/ 到达/ 速率/ ;/ 目标/ 函数/ 有/ 最小化/ 总体/ 能量/ 、/ 丢/ 包率/ 、/ 延迟/ 、/ 传输/ 成本/ ,/ 最大化/ 总体/ 吞吐量/ 、/ 利润/ 等/ ;/ 约束条件/ 包括/ 传输/ 能量/ 的/ 限制/ 、/ 信道/ 访问/ 的/ 竞争/ 、/ 对/ 延迟/ 和/ 安全/ 的/ 严格/ 保证/ ;/ 而/ 变量/ 包括/ 为/ 每个/ 用户/ 分配/ 的/ 带宽/ 、/ 传输/ 的/ 功率/ 等/ ./ 除/ 资源/ 约束/ 外/ ,/ 网络/ 中/ 数据传输/ 的/ 有序性/ 保证/ 需要/ 也/ 会/ 对/ 任务/ 时序/ 关系/ 强加/ 约束条件/ ,/ 例如/ 无线/ 传感器/ 网络/ 的/ 数据/ 聚合/ 对/ 数据/ 时序/ 的/ 限制/ ,/ 文献/ [/ 3/ ]/ 在/ 该/ 约束/ 下/ 试图/ 最大化/ 请求/ 的/ 性能/ 和/ 能量/ 的/ 效率/ ,/ 文献/ [/ 4/ ]/ 在/ 任务/ 时序/ 约束/ 下/ 最小化/ 无线/ 节点/ 的/ 能量消耗/ ./ 图/ 2/ 描述/ 了/ 网络/ 优化/ 模型/ 的/ 对应/ 元素/ ./ 最/ 通用/ 的/ 目标/ 函数/ 定义/ 为/ 效用函数/ (/ UtilityFunction/ )/ ,/ 它/ 可以/ 是/ 客观/ 的/ 物理/ 指标/ ,/ 也/ 有/ 可能/ 掺杂/ 一定/ 的/ 主观因素/ ./ (/ 1/ )/ 客观/ 的/ 效用函数/ ./ 这类/ 效用函数/ 均/ 可以/ 严格/ 地/ 使用/ 数学/ 表达式/ 定义/ ,/ 如/ 网络/ 吞吐量/ 、/ 分组/ 平均/ 延迟/ 、/ 链路/ 利用率/ 以及/ 网络/ 的/ 能源/ 使用量/ 等/ ./ (/ 2/ )/ 掺杂/ 主观因素/ 的/ 效用函数/ ./ 效用函数/ 有时/ 用来/ 表达/ 用户/ 对/ 网络服务/ 的/ 满意/ 程度/ ./ 由于/ 不同/ 用户/ 对/ QoS/ 的/ 要求/ 各异/ ,/ 如/ 有些/ 用户/ 对/ 延迟/ 敏感/ ,/ 而/ 有些/ 用户/ 可以/ 容忍/ 一定/ 范围/ 内/ 的/ 延迟/ ,/ 因此/ 这/ 类/ 效用函数/ 通常/ 掺杂/ 主观因素/ ./ 效用函数/ 通常/ 是/ 单调/ 递增/ 的/ 凹/ 函数/ ,/ 即/ 性能指标/ 改善/ 的/ 边际效应/ 随/ 决策/ 变量/ 逐渐/ 削弱/ ./ 这/ 满足/ 边际/ 效用/ 逐渐/ 减小/ 的/ 实际/ 情况/ ,/ 也/ 为/ 将/ 最大化/ 效用/ 问题/ 转化/ 为/ 凸/ 优化/ 问题/ 提供/ 了/ 理论/ 基础/ ./ 通用/ 的/ 优化/ 形式/ 可以/ 表达/ 为/ 或/ 事实上/ ,/ 上述/ 两种/ 表达形式/ 是/ 同构/ 的/ ,/ 式/ (/ 1/ )/ 很/ 容易/ 化为/ 式/ (/ 2/ )/ 的/ 形式/ ,/ 只/ 需令/ f0/ (/ 狓/ )/ =/ -/ U/ (/ 狓/ )/ ./ 利用/ 下/ 一节/ 阐述/ 的/ 对偶/ 方法/ 也/ 可以/ 进行/ 最大化/ 和/ 最小化/ 目标/ 的/ 转化/ ./ 一类/ 网络/ 优化/ 问题/ 的/ 目标/ 函数/ 有/ max/ -/ min/ 或/ min/ -/ max/ 的/ 形式/ ,/ 例如/ 研究/ 网络/ 负载/ 均衡/ 或/ 公平/ 调/ Page4/ 度/ 之类/ 的/ 问题/ [/ 5/ -/ 6/ ]/ ./ 应用/ 博弈论/ 分析/ 和/ 设计/ 网络/ 调度/ 策略/ 时/ ,/ 会/ 经常/ 遇到/ 这种/ 形式/ 的/ 目标/ 函数/ ,/ 它/ 其实/ 可以/ 拆/ 分为/ 两个/ 优化/ 步骤/ ./ 例如/ ,/ 自/ 组织/ 网络/ 中/ 的/ 生存/ 时间/ 的/ 优化/ 可以/ 表达/ 为/ 最大化/ 生存/ 时间/ ,/ 而/ 生存/ 时间/ 又/ 可/ 表达/ 为/ 网络/ 所有/ 节点/ 中/ 最小/ 的/ 生存/ 时间/ [/ 7/ ]/ ./ 实际上/ ,/ 这/ 类/ 最小/ 最大/ 优化/ 目标/ 通常/ 可以/ 通过/ 引入/ 新/ 变量/ 转化/ 为/ 通用/ 的/ 求/ 最大/ 或求/ 最小值/ 的/ 优化/ 问题/ ./ 文献/ [/ 8/ ]/ 提到/ 了/ 很多/ 优化/ 模型/ 表达/ 的/ 技巧/ ,/ 许多/ 技巧/ 都/ 在/ 网络/ 优化/ 建模/ 上/ 得到/ 了/ 应用/ ./ 例如/ 指示/ 变量/ (/ indicatorvariable/ )/ [/ 6/ ]/ 或/ 函数/ (/ function/ )/ [/ 9/ ]/ 可以/ 表示/ 事件/ 的/ 发生/ 与否/ ,/ 如/ 是否/ 发生/ 信道/ 干扰/ 等/ ./ 指示/ 变量/ 往往/ 辅以/ 归一化/ 条件/ ,/ 表示/ 有且/ 仅/ 有/ 一个/ 事件/ 发生/ ,/ 也/ 可以/ 方便/ 地/ 表达/ 两个/ 事件/ 的/ 互斥/ 关系/ ./ 同一个/ 优化/ 指标/ 可能/ 对应/ 有/ 多种不同/ 的/ 目标/ 函数/ ,/ 其中/ 的/ 侧重点/ 或/ 需求/ 各异/ ./ 例如/ ,/ 文献/ [/ 6/ ]/ 考虑/ 了/ 基于/ 合作/ 机会/ 调度/ 方法/ 的/ 频谱/ 访问/ 问题/ ,/ 针对/ 带宽/ 分配/ 给出/ 了/ 3/ 种/ 表达形式/ :/ (/ 1/ )/ 最大/ 和/ 带宽/ (/ Max/ -/ Sum/ -/ Bandwidth/ ,/ MSB/ )/ :/ (/ 2/ )/ 最大/ 最小/ 带宽/ (/ Max/ -/ Min/ -/ Bandwidth/ ,/ MMB/ )/ :/ (/ 3/ )/ 最大/ 比例/ 平均/ 带宽/ (/ Max/ -/ Proportional/ -/ Fair/ ,/ MPF/ )/ :/ 其中/ ,/ an/ ,/ m/ 为/ 指示/ 变量/ ,/ 为/ 1/ 代表/ 将/ 频带/ m/ 分配/ 给/ 用户/ n/ ;/ bn/ ,/ m/ 代表/ 将/ 频带/ m/ 分配/ 给/ 用户/ n/ 后/ 用户/ n/ 获得/ 的/ 收益/ ./ 2.2/ 优化/ 模型/ 方法/ 分类/ 网络/ 中/ 的/ 优化/ 对象/ 具有/ 不同/ 的/ 特征/ ,/ 对/ 同一个/ 研究/ 对象/ 也/ 会/ 存在/ 多种/ 模型/ 方法/ ./ 依据/ 不同/ 的/ 假设/ ,/ 这些/ 方法/ 从/ 不同/ 的/ 角度/ 对/ 网络/ 性能指标/ 进行/ 改进/ ./ 随着/ 数学/ 理论/ 的/ 不断/ 发展/ ,/ 求解/ 同一/ 模型/ 的/ 方法/ 可能/ 存在/ 多种/ ,/ 从而/ 对/ 网络/ 机制/ 产生/ 了/ 不同/ 的/ 解释/ ./ 这些/ 求解/ 算法/ 也/ 对应/ 不同/ 的/ 资源分配/ 、/ 调度/ 、/ 部署/ 和/ 参数/ 配置/ 的/ 方案/ ./ 下面/ 依据/ 模型/ 、/ 求解/ 和/ 实施方案/ 3/ 方面/ 对/ 网络/ 优化/ 模型/ 进行/ 分类/ ./ 2.2/ ./ 1/ 按照/ 模型/ 的/ 函数/ 及/ 变量/ 类型/ 分类/ (/ 1/ )/ 单/ 目标/ 优化/ 与/ 多/ 目标/ 优化/ 网络/ 优化/ 常常/ 是/ 对/ 某/ 一/ QoS/ 指标/ 而言/ ,/ 将/ 其它/ 的/ QoS/ 属性/ 作为/ 限制/ ,/ 也/ 就是/ 常见/ 的/ 单/ 目标/ 优化/ ./ 如果/ 考虑/ 的/ 性能指标/ 有/ 多个/ ,/ 就/ 需要/ 用/ 多/ 目标/ 优化/ 建模/ ./ 在/ 许多/ 组播/ 应用/ 中/ ,/ 如/ 声音/ 、/ 视频会议/ 、/ 在线/ 游戏/ 等/ ,/ 需要/ 带宽/ 、/ 包/ 延迟/ 、/ 包/ 丢失/ 率/ 和/ 传输/ 成本/ 等/ 多种/ QoS/ 需求/ ./ Donoso/ 等/ 人/ [/ 10/ -/ 12/ ]/ 研究/ 了/ 将/ 这些/ 需求/ 综合/ 起来/ 进行/ 多/ 目标/ 优化/ ./ Wang/ 等/ 人/ [/ 13/ ]/ 研究/ 了/ 无线/ 传感器/ 网络/ 多/ 对/ 一/ 传输/ 模式/ 中/ 的/ 多/ 目标/ TDMA/ 调度/ 模型/ ,/ 考虑/ 了/ 平均/ 延迟/ 和/ 能量消耗/ 两个/ 目标/ 的/ 帕累托/ 前沿/ (/ ParetoFrontier/ )/ ./ 单/ 目标/ 优化/ 和/ 多/ 目标/ 优化/ 在/ 某种意义/ 上/ 可以/ 相互/ 转化/ ,/ 多/ 目标/ 通常/ 利用/ 归一/ 加权/ 或/ 添加/ 约束/ 的/ 方法/ 转化/ 为/ 单一/ 目标/ ,/ 而/ 带/ 约束/ 的/ 单/ 目标/ 优化/ 也/ 可/ 利用/ 罚/ 函数/ ,/ 转换/ 为/ 多/ 目标/ 的/ 加权/ 形式/ ./ (/ 2/ )/ 连续变量/ 优化/ 与/ 离散/ 变量/ 优化/ 模型/ 中/ 变量/ 的/ 类型/ 会/ 决定/ 优化/ 模型/ 的/ 种类/ ,/ 在/ 网络/ 参数/ 配置/ 的/ 优化/ 问题/ 中/ ,/ 参数/ 的/ 范围/ 通常/ 是/ 连续/ 变化/ 的/ ,/ 如/ 无线通信/ 中/ 的/ 功率/ 控制/ ./ 对于/ 有/ 连续/ 取值/ 的/ 资源分配/ 其/ 变量/ 也/ 是/ 连续/ 的/ ./ 有时/ ,/ 模型/ 中/ 的/ 变量/ 取值/ 范围/ 是/ 一个/ 有限/ 可列/ 集合/ ,/ 这种/ 变量/ 称为/ 离散/ 变量/ ./ Awad/ 等/ 人/ [/ 14/ ]/ 研究/ 了/ 基于/ OFDMA/ 的/ 两/ 跳/ 合作/ 中继/ 网络/ 的/ 资源分配/ ,/ 采用/ 了/ 二元/ 整数/ 规划/ 对/ 将/ 多个/ 中继站/ 按/ 对应/ 关系/ 分配/ 给/ 基站/ 的/ 问题/ 进行/ 建模/ ./ 整数/ 规划/ 可/ 被/ 应用/ 到/ 调度/ 选择/ 决策/ 中/ ./ 例如/ ,/ 路由/ 选择/ 问题/ 可以/ 将/ 某条/ 链路/ 是否/ 被/ 包含/ 在/ 路由/ 中/ 设置/ 为/ 离散/ 变量/ ,/ 从而/ 进行/ 整数/ 规划/ [/ 15/ ]/ ./ 资源/ 部署/ 也/ 通常/ 是/ 离散/ 优化/ 问题/ ,/ 因为/ 表征/ 是否/ 在/ 某个/ 位置/ 上/ 部署/ 资源/ 常用/ 到/ 二元/ 指示/ 变量/ ./ 无线/ 传感器/ 的/ 部署/ 是/ 其中/ 的/ 典型/ 例子/ ./ Berry/ 等/ 人/ [/ 16/ ]/ 用/ 整数/ 规划/ 的/ 方法/ 研究/ 如何/ 部署/ 传感器/ 检测/ 供水管/ 网/ 系统/ 中/ 的/ 恶意/ 污染/ ./ (/ 3/ )/ 线性规划/ 与非/ 线性规划/ 目标/ 函数/ 和/ 约束/ 函数/ 的/ 类型/ 会/ 对/ 优化/ 模型/ 的/ 求解/ 方法/ 带来/ 启发/ ,/ 很多/ 优化/ 的/ 研究/ 工作/ 按照/ 函数/ 类型/ 将/ 优化/ 模型/ 进行/ 分类/ ,/ 最/ 简单/ 的/ 分类/ 方式/ 是/ 线性规划/ (/ linearprogramming/ )/ 与非/ 线性规划/ (/ non/ -/ linearprogramming/ )/ ./ 网络/ 优化/ 中/ 的/ 很多/ 问题/ 都/ 可以/ 归结为/ 线性规划/ 问题/ ,/ 尤其/ 是/ 涉及/ 流量/ 控制/ 的/ 优化/ ,/ 很早/ ,/ 流量/ 相关/ 的/ QoS/ 路由/ 算法/ 就/ 开始/ 利用/ 线性规划/ 模型/ ,/ 并且/ 在/ 20/ 世纪/ 70/ 年代/ 就/ 达到/ 有效/ 的/ 结果/ [/ 17/ ]/ ,/ 直到/ 今天/ 仍然/ 被/ 广泛/ 运用/ ./ 整数/ 线性规划/ 的/ 函数/ 类型/ 也/ 是/ 线性/ 的/ ,/ 但/ 由于/ 它/ 的/ 变量/ 类型/ 是/ 离散/ 的/ ,/ 因此/ 求解/ 算法/ 也/ 不同于/ 线性规划/ ./ 最近/ 几年/ ,/ 非线性/ 在/ 网络系统/ 优化/ 中/ 越来越/ 受到重视/ ,/ 这/ 一方面/ 由于/ 优化/ 求解/ 技术/ 不断/ 发展/ ,/ 另一方面/ 也/ 因为/ 简单/ 的/ 线性/ 模型/ 不足以/ 表示/ 网络/ 元素/ 的/ 关系/ ,/ 因此/ ,/ 非线性/ 优化/ 广泛/ 被/ 应用/ 到/ 高速/ 核心/ 网络/ 、/ 无线/ 自/ 组织/ 网络/ 、/ 编码/ 与/ 均衡/ 理论/ 、/ 宽带/ 访问/ 、/ 信息论/ 和/ 网络拓扑/ 模型/ 中/ [/ 18/ ]/ ./ (/ 4/ )/ 凸/ 优化/ 与非/ 凸/ 优化/ 随着/ 优化/ 理论/ 研究/ 的/ 不断/ 深化/ ,/ 人们/ 发现/ 如果/ 用/ 一个/ 词来/ 区分/ 简单/ 和/ 难/ 问题/ ,/ 那么/ 模型/ 的/ 凸性/ 大/ Page5/ 概/ 就是/ “/ 分水岭/ ”/ [/ 19/ ]/ ./ 幸运/ 的/ 是/ ,/ 大多数/ 网络/ 优化/ 模型/ 都/ 保持/ 了/ 凸性/ ,/ 即/ 在/ 约束/ 为/ 凸集/ 的/ 条件/ 下/ 最小化/ 一个/ 凸/ 目标/ 函数/ 或/ 最大化/ 一个/ 凹/ 目标/ 函数/ ./ 线性规划/ 就是/ 保持/ 这种/ 凸性/ 的/ 简单/ 模型/ ./ Luo/ 等/ 人/ [/ 20/ ]/ 综述/ 了/ 在/ 通信/ 方向/ 的/ 关于/ 凸/ 优化/ 的/ 研究/ ,/ 并且/ 强调/ 了/ 一类/ 锥/ 优化/ (/ ConicProgramming/ ,/ CP/ )/ 问题/ ,/ 包括/ 二次/ 锥/ 规划/ (/ SecondOrderConeProgramming/ ,/ SOCP/ )/ 和/ 半/ 正定/ 规划/ (/ SemidefiniteProgramming/ ,/ SDP/ )/ ,/ 启发/ 了/ 网络/ 优化/ 建模/ ,/ 尤其/ 是/ 无线通信/ 网络/ 的/ 建模/ ./ 随着/ 凸/ 优化/ 求解/ 方法/ 的/ 逐渐/ 成熟/ ,/ 越来越/ 多/ 的/ 网络/ 问题/ 被/ 建模/ 为/ 凸/ 问题/ ,/ 很多/ 不/ 具备/ 凸/ 性质/ 的/ 模型/ 也/ 开始/ 利用/ 诸如/ 变量/ 转化/ 等/ 方法/ 转化/ 为/ 凸/ 优化/ ,/ 从而/ 可以/ 进行/ 有效/ 求解/ ./ 在/ 一些/ 应用/ 中/ ,/ 函数/ 的/ 复杂性/ 有时/ 会/ 破坏/ 问题/ 的/ 凸性/ ,/ Chiang/ [/ 19/ ]/ 讨论/ 了/ 三类/ 非凸/ 优化/ 问题/ 的/ 应用/ ,/ 包括/ 利用/ 最大化/ 非/ 凹性/ 网络/ 效用函数/ 进行/ 网络/ 拥塞/ 控制/ 、/ 通过/ 几何/ 和/ 反曲/ 规划/ 进行/ 无线网络/ 功率/ 控制/ 以及/ 利用/ 分布式/ 非凸/ 优化/ 进行/ DSL/ 频谱/ 管理/ ./ Chiang/ 将/ 网络通信/ 建模/ 中/ 的/ 非凸/ 优化/ 归结为/ 4/ 类/ :/ 最小化/ 非/ 凸函数/ (/ 最大化/ 非凹/ 函数/ )/ ,/ 例如/ 非/ 弹性/ 应用/ 的/ 拥塞/ 控制/ ;/ 非凸/ 约束/ 集/ ,/ 例如/ 在/ 低/ SIR/ 范围/ 的/ 功率/ 控制/ ;/ 整数/ 约束/ ,/ 如/ 单一/ 路径/ 路由/ 和/ 多用户/ 检测/ ;/ 凸性/ 不等式/ 约束/ 数量/ 的/ 指数/ 增加/ ,/ 例如/ 最优/ 调度/ ./ (/ 5/ )/ 确定/ 参数/ 优化/ 与/ 随机/ 参数/ 优化/ 在/ 确定性/ 模型/ 中/ ,/ 网络/ 优化/ 模型/ 的/ 参数/ 是/ 一个/ 常数/ ./ 但是/ ,/ 在/ 随机/ 优化/ 模型/ 中/ ,/ 参数/ 可以/ 是/ 一个/ 随机变量/ ./ 目标/ 和/ 约束/ 函数/ 可能/ 包含/ 该/ 随机变量/ 相关/ 的/ 数字/ 特征/ 或/ 概率/ 特征/ ./ 对于/ 具有/ 突发性/ 和/ 随机性/ 的/ 网络/ 而言/ ,/ 随机/ 优化/ 模型/ 更能/ 捕捉/ 诸如/ 包/ 到达/ 速率/ 和/ 包/ 处理/ 速率/ 等/ 不/ 确定/ 因素/ ,/ 但/ 这/ 又/ 无疑/ 带来/ 了/ 模型/ 求解/ 的/ 复杂性/ ./ 李雅普/ 诺夫/ 稳定性/ 常/ 被/ 用来/ 研究/ 随机/ 网络/ 优化/ 问题/ ,/ 得出/ 某些/ 性能指标/ 的/ 界/ [/ 21/ ]/ ./ 网络/ 优化/ 模型/ 按照/ 目标/ 和/ 变量/ 的/ 类别/ 分类/ 如图/ 3/ 所示/ ./ 2.2/ ./ 2/ 按照/ 模型/ 的/ 求解/ 方法/ 分类/ 具有/ 不同/ 函数/ 和/ 变量/ 类型/ 的/ 优化/ 模型/ 都/ 对应/ 不同/ 的/ 求解/ 算法/ ./ 下面/ 我们/ 按照/ 求解/ 算法/ 对/ 网络/ 中/ 的/ 优化/ 进行/ 分类/ ./ (/ 1/ )/ 易解/ 问题/ 与/ 难/ 问题/ 在/ 建立/ 优化/ 模型/ 后/ ,/ 需要/ 设计/ 算法/ 进行/ 求解/ ./ 求解/ 的/ 效率/ 是/ 重要/ 的/ 指标/ ./ 我们/ 通常/ 需要/ 求解/ 算法/ 具有/ 快速/ 收敛/ 的/ 性质/ 和/ 多项式/ 时间/ 的/ 复杂度/ ./ 因此/ ,/ 可以/ 将/ 优化/ 模型/ 按/ 复杂程度/ 分为/ NP/ -/ 难/ 问题/ 和/ 易解/ 问题/ ./ 凸/ 优化/ 问题/ 没有/ 对偶/ 间隙/ ,/ 可以/ 基于/ 梯度/ 算法/ 几何/ 地/ 收敛/ 到/ 全局/ 最优/ 解/ ,/ 具有/ 多项式/ 时间/ 求解/ 算法/ ./ 而/ 非凸/ 优化/ 问题/ 可能/ 存在/ 严格/ 的/ 对偶/ 间隙/ ,/ 通常/ 是/ NP/ -/ 难/ 问题/ ./ NP/ -/ 难/ 问题/ 不/ 可能/ 在/ 多项式/ 时间/ 找到/ 全局/ 最优/ 解/ ,/ 往往/ 采用/ 现代/ 优化/ 算法/ 对解/ 空间/ 进行/ 搜索/ ,/ 或是/ 采用/ 近似算法/ 求得/ 一个/ 满意/ 解/ ./ (/ 2/ )/ 确定性/ 算法/ 与/ 随机/ 算法/ 一般/ 优化/ 问题/ 的/ 求解/ 算法/ 是/ 确定/ 的/ ,/ 在/ 不能/ 将/ 问题/ 划归/ 到/ 一个/ 已知/ 可解/ 模型/ 类别/ ,/ 或解/ 空间/ 过于/ 庞大/ 没有/ 有效/ 的/ 求解/ 方法/ 时/ ,/ 常常/ 利用/ 随机/ 算法/ ./ 现代/ 优化/ 方法/ 中有/ 很多/ 含有/ 随机/ 的/ 步骤/ ./ RED/ 算法/ [/ 22/ ]/ 可以/ 被/ 看作/ 是/ TCP/ 流量/ 控制/ 的/ 一个/ 随机/ 算法/ ,/ Krishnan/ 等/ 人/ [/ 23/ ]/ 研究/ 了/ 基于/ WLAN/ 结构/ 下/ 的/ 吞吐量/ 最大化/ 问题/ ,/ 提出/ 了/ 一种/ 叫做/ wTOP/ -/ CSMA/ 的/ 随机/ 算法/ ,/ 能够/ 在/ 全/ 连接/ 网络/ 中/ 提供/ 最优/ 的/ 吞吐量/ ,/ 即使/ 隐藏/ 终端/ 存在/ ./ 2.2/ ./ 3/ 按照/ 模型/ 的/ 实施方案/ 分类/ (/ 1/ )/ 静态/ 实施/ 与/ 动态/ 实施/ 在/ 确定性/ 模型/ 中/ ,/ 参数/ 是/ 固定/ 的/ ./ 如果/ 所有/ 有关/ 网络结构/ 和/ 动态/ 特征/ 都/ 反映/ 在/ 这些/ 参数/ 上/ ,/ 并且/ 所有/ 参数/ 都/ 作为/ 已知/ 数据/ ,/ 那么/ 总/ 可以/ 设计/ 一种/ 静态/ 调度/ 或/ 分配/ 算法/ ./ 其/ 对应/ 的/ 实施方案/ 也/ 很/ 简单/ ,/ 只/ 需/ 按照/ 这种/ 算法/ 执行/ ,/ 而/ 不/ 考虑/ 网络/ 的/ 即时/ 状态/ ./ 这种/ 优化/ 算法/ 是/ 固定/ 的/ ,/ 又/ 称为/ 离线/ 算法/ ./ 它/ 不/ 随/ 时间/ 转移/ ,/ 因此/ 不适/ 用于/ 动态/ 随机性/ 显著/ 的/ 网络/ 环境/ ./ 在上文/ 提到/ 的/ 随机/ 优化/ 模型/ 中/ ,/ 通常/ 需要/ 设计/ 动态/ 算法/ ,/ 因为/ 需要/ 根据/ 当前/ 得到/ 的/ 状态/ 信息/ ,/ 如/ 排队/ 长度/ 、/ 丢/ 包率/ 等/ 进行/ 调度/ 决策/ ,/ 这些/ 参数/ 随/ 时间/ 不断/ 变化/ ,/ 而/ 并非/ 在/ 一/ 开始/ 就/ 能/ 准确/ 地/ 获得/ ./ 最/ 著名/ 的/ 动态/ 调度/ 算法/ 是/ 在/ 负载/ 均衡/ 或者/ 最大/ 吞吐/ 率/ 目标/ 下/ 的/ 路由器/ 调度/ ,/ 可以/ 采用/ 最短/ 队列/ 优先/ 、/ 最短/ 预计/ 完成/ 时间/ 优先/ 等/ 带有/ 状态/ 的/ 算法/ ./ 动态/ 的/ 优化/ 算法/ 又/ 称为/ 在线/ 算法/ ./ 需要/ 说明/ 的/ 是/ ,/ 即使/ 模型/ 被/ 表达/ 为/ 静态/ 的/ ,/ 实际上/ 参数/ 也/ 可能/ 是/ 不/ 稳定/ 的/ ,/ 只是/ 在/ 一段时间/ 内/ 近似/ 有/ 一个/ 平稳/ 的/ 趋势/ ./ 当/ 参数/ 取值/ 发生/ 跳跃/ 时/ ,/ 需要/ 修改/ 原来/ 模型/ 中/ 的/ 参数/ ,/ 重新/ 求解/ 优化/ 模型/ ./ 这种/ 折中/ 方案/ 综合/ 了/ 静态/ 优化/ 的/ 简单/ 易解/ 和/ 动态/ 优化/ 准确/ 实时/ 的/ 优点/ ./ Page6/ (/ 2/ )/ 集中式/ 实施/ 和/ 分布式/ 实施/ 不仅/ 优化/ 算法/ 的/ 实施/ 时间/ 可能/ 不同/ ,/ 而且/ 其/ 实施/ 的/ 位置/ 也/ 可以/ 变化/ ./ 可以/ 采用/ 集中式/ 的/ 方案/ 实施/ 优化/ 算法/ ,/ 这/ 通常/ 需要/ 统一/ 地/ 控制/ 节点/ ,/ 监测/ 网络/ 的/ 参数/ ,/ 并/ 做出/ 优化/ 的/ 分配/ 或/ 调度/ 决策/ ./ 这种/ 集中式/ 优化/ 实施方案/ 有/ 两个/ 缺点/ :/ 实施/ 算法/ 的/ 节点/ 工作量/ 大/ ,/ 使得/ 算法/ 运行/ 的/ 时间/ 显著/ 增加/ ,/ 从而/ 带来/ 整个/ 网络系统/ 的/ 延迟/ 增大/ ;/ 单/ 节点/ 的/ 控制/ 方案/ 易/ 受到/ 攻击/ ,/ 存在/ 单/ 节点/ 脆弱性/ ./ 这/ 使得/ 人们/ 在/ 可能/ 的/ 情况/ 下/ ,/ 尽力/ 寻找/ 分布式/ 算法/ ,/ 即将/ 整个/ 优化/ 算法/ 并行/ 地/ 在/ 多个/ 网络/ 节点/ 上/ 实施/ ,/ 每个/ 节点/ 只/ 执行/ 与/ 该/ 节点/ 相关/ 的/ 优化/ 子/ 问题/ ,/ 然后/ 通过/ 相互/ 传递/ 子/ 问题/ 的/ 解/ 进一步/ 得到/ 原/ 优化/ 问题/ 的/ 最终/ 方案/ ./ 分布式/ 算法/ 以/ 增加/ 通信/ 代价/ 带来/ 了/ 合作/ 并行/ 求解/ 优化/ 模型/ 的/ 优势/ ,/ 提高/ 了/ 算法/ 实施/ 效率/ 和/ 安全性/ ./ 按照/ 优化/ 算法/ 的/ 实施方案/ 分类/ 如图/ 4/ 所示/ ./ 3/ 网络/ 优化/ 模型/ 的/ 求解/ 算法/ 由于/ 网络/ 节点/ 的/ 处理/ 资源/ 有限/ ,/ 许多/ 网络/ 部署/ 又/ 没有/ 一个/ 专门/ 的/ 集中控制/ 节点/ ,/ 因此/ 一般/ 情况/ 下/ ,/ 网络/ 中/ 的/ 节点/ 肩负着/ 控制/ 层面/ 与/ 数据/ 层面/ 的/ 双重/ 功能/ ,/ 负担/ 较大/ ./ 为/ 达到/ 实时/ 有效/ 的/ 控制/ 和/ 性能/ 优化/ ,/ 需要/ 设计/ 占用/ 资源/ 少/ 、/ 复杂性/ 低/ 的/ 算法/ ./ 尤其/ 是/ 本身/ 携带/ 能量/ 较/ 少/ ,/ 并且/ 不/ 便于/ 频繁/ 补充/ 能量/ 的/ 节点/ ,/ 如/ 无线/ 传感器/ ,/ 或者/ 实时性/ 要求/ 较/ 高/ 的/ 网络/ 业务/ ./ 这/ 就/ 要求/ 不仅/ 提高/ 网络/ 性能/ 需要/ 优化/ 算法/ ,/ 而且/ 优化/ 算法/ 本身/ 也/ 需要/ 优化/ ./ 许多/ 问题/ 如果/ 能/ 将/ 模型/ 转化/ 为/ 众所周知/ 的/ 易解/ 模型/ ,/ 如/ 线性规划/ 问题/ ,/ 即/ 可以/ 利用/ 成熟/ 的/ 求解/ 理论/ 在/ 多项式/ 时间/ 内/ 找到/ 最优/ 方案/ ;/ 否则/ ,/ 很/ 有/ 可能/ 属于/ NP/ -/ 难/ 问题/ ,/ 这时/ 只能/ 去/ 寻找/ 近似算法/ ,/ 并/ 保证/ 近似算法/ 本身/ 开销/ 少/ ,/ 而且/ 近似/ 方案/ 一定/ 程度/ 上/ 接近/ 理论/ 上/ 的/ 最优/ 方案/ ./ 3.1/ 易解/ 问题/ 与/ 多项式/ 时间/ 收敛/ 算法/ 3.1/ ./ 1/ 凸/ 优化/ 方法/ 网络/ 中/ 的/ 很多/ 优化/ 模型/ 都/ 可以/ 归结为/ 凸/ 优化/ 问题/ ,/ 如/ 线性规划/ 、/ 二次/ 规划/ 等/ ./ 随着/ 研究/ 的/ 深入/ ,/ 人们/ 发现/ 判断/ 一个/ 问题/ 是否/ 具有/ 凸/ 性质/ 在/ 一定/ 程度/ 上/ 决定/ 了/ 寻找/ 最优/ 方案/ 是否是/ 易解/ 的/ ,/ 这/ 是因为/ 对于/ 凸/ 优化/ 问题/ 而言/ ,/ 局部/ 最优/ 解即/ 为/ 全局/ 最优/ 解/ ./ 有/ 许多/ 关于/ 网络/ 效用/ 最大化/ (/ NUM/ )/ [/ 24/ ]/ 的/ 研究/ 就是/ 建立/ 在/ 求解/ 凸/ 优化/ 问题/ 的/ 基础/ 上/ ./ 凸/ 优化/ 模型/ 具有/ 如式/ (/ 1/ )/ 的/ 形式/ ,/ 且/ 目标/ 函数/ 是/ 凸函数/ 、/ 约束/ 集是/ 凸集/ ,/ 等式/ 约束/ 函数/ 是/ 仿射/ 函数/ ./ 对于/ 最大化/ 网络/ 效用/ 的/ 模型/ ,/ 目标/ 函数/ 是/ 凹/ 函数/ ./ 对于/ 无约束/ 的/ 凸/ 目标/ 函数/ 优化/ 来说/ ,/ 只/ 需要/ 利用/ 一阶/ 条件/ 找到/ 其一/ 阶/ 函数/ 为/ 0/ 对应/ 的/ 变量值/ 即/ 为/ 最优/ 方案/ ,/ 若/ 利用/ 数值/ 方法/ ,/ 则/ 可以/ 用/ 梯度/ 法/ 或/ 牛顿/ 法/ 逼近/ 其/ 最优/ 解/ [/ 25/ ]/ ./ 在/ 有关/ 调度/ 和/ 资源分配/ 的/ 问题/ 中/ ,/ 由于/ 有/ 资源/ 的/ 限制/ ,/ 或者/ 技术/ 的/ 要求/ ,/ 需要/ 附加/ 限制/ 集/ ./ 考虑/ 如下/ 较/ 通用/ 的/ 调度/ 控制/ 模型/ [/ 24/ ]/ ,/ 网络/ 中有/ L/ 条/ 链路/ ,/ 相应/ 的/ 容量/ 为/ cl/ ,/ S/ 个源/ 节点/ ,/ 每个/ 以/ xs/ 的/ 速率/ 在/ 一个/ 固定/ 的/ 链路/ 集合/ 上/ 传输/ ,/ 传输/ 获得/ 的/ 效用函数/ 为/ Us/ (/ xs/ )/ ./ 假设/ 每个/ 节点/ 容忍/ 的/ 最小/ 传输速率/ 为/ xmins/ :/ 若/ 假定/ 每个/ 节点/ 的/ 效用函数/ 都/ 为/ 凸函数/ ,/ 则/ 整个/ 目标/ 函数/ 即/ 为/ 凸函数/ ,/ 又/ 易知/ 线性/ 约束/ 形成/ 的/ 可行/ 解/ 的/ 集合/ 是/ 一个/ 多面体/ ,/ 因此/ 上述/ 模型/ 是/ 一个/ 典型/ 的/ 凸/ 优化/ 模型/ ,/ 局部/ 最优/ 解即/ 为/ 全局/ 最优/ 解/ ./ 在/ 求解/ 时/ ,/ 需要/ 将/ 其/ 划归/ 为/ 无约束/ 优化/ 问题/ ,/ 从而/ 方便/ 地用/ 梯度/ 法/ 或/ 牛顿/ 法/ 进行/ 迭代/ 计算/ ./ 障碍/ 法/ (/ BarrierMethod/ )/ [/ 26/ ]/ 为/ 每个/ 不等式/ 约束/ 设计/ 一个/ 障碍/ 函数/ ,/ 当/ 满足/ 约束/ 不等式/ ,/ 该/ 函数/ 趋于/ 0/ ,/ 当/ 约束/ 趋于/ 使/ 等/ 号/ 成立/ 时/ ,/ 函数/ 趋向/ 无穷/ ,/ 然后/ 将/ 障碍/ 函数/ 加到/ 原/ 目标/ 函数/ 中/ ./ 为了/ 适合/ 用/ 牛顿/ 法/ 求解/ 目标/ 函数/ ,/ 经常/ 使用/ 二次/ 可微/ 的/ 对数/ 障碍/ 函数/ ./ 上式/ (/ 6/ )/ 用/ 障碍/ 法可/ 化为/ maxmizexs/ ∑/ s/ 可以/ 证明/ 当/ t/ 很大/ 时/ ,/ 该/ 方法/ 的/ 解/ 趋于/ 原/ 问题/ 的/ 最优/ 解/ ,/ 事实上/ ,/ 与/ 真实/ 的/ 理论/ 最优/ 值/ 的/ 差距/ 不会/ 超过/ m/ // t/ (/ m/ 为/ 约束条件/ 中/ 不等式/ 的/ 个数/ ,/ 这里/ m/ =/ s/ +/ l/ )/ ./ 在/ 求解/ 过程/ 中/ ,/ t/ 的/ 值应/ 从小/ 逐渐/ 取到/ 大/ ,/ 逐次/ 进行/ 迭代/ ,/ 折中/ 收敛/ 速度/ 与/ 求解/ 式/ (/ 6/ )/ 的/ 复杂度/ ./ 将/ 原/ 问题/ 进行/ 修改/ ,/ 设/ 链路/ 容量/ 依赖于/ 所/ 分配/ 的/ 资源/ ,/ 如传/ Page7/ 输时/ 槽/ 、/ 功率/ 或/ 带宽/ ,/ 则/ 容量/ 可以/ 表示/ 为/ 资源/ 的/ 函数/ cl/ (/ φ/ l/ )/ [/ 27/ ]/ ,/ 资源/ 的/ 总和/ 是/ 固定/ 的/ ,/ 则/ 模型/ 变为/ 当/ 将/ 上式/ 的/ 不等式/ 用/ 对数/ 障碍/ 函数/ 表示/ 后/ ,/ 仍旧/ 留有/ 一个/ 关于/ 资源/ 总和/ 的/ 等式/ 约束/ ,/ 可以/ 通过/ 将/ 梯度/ 约束/ 在/ 等式/ 成立/ 的/ 方向/ 上/ 实施/ 梯度/ 或/ 牛顿/ 法/ 逼近/ (/ 投影/ 梯度/ 法/ [/ 26/ ]/ )/ ./ 实际上/ ,/ 可以/ 将式/ (/ 8/ )/ 中/ 的/ 等式/ 约束/ 变换/ 为/ 不等式/ 约束/ ,/ 即/ 所/ 分配/ 的/ 资源/ 不能/ 超过/ 资源/ 上限/ ,/ 然后/ 单纯/ 地用/ 障碍/ 法去/ 求解/ ,/ 很/ 显然/ ,/ 得到/ 的/ 解/ 仍然/ 是/ 原/ 问题/ 的/ 最优/ 解/ ./ 可以/ 看出/ ,/ 采用/ 障碍/ 法/ 和/ 投影/ 梯度/ 法/ 进行/ 迭代/ ,/ 每次/ 更新/ 的/ 变量值/ 都/ 是/ 一个/ 可行/ 解/ ,/ 并且/ 逐渐/ 逼近/ 到/ 最优/ 值/ ./ 障碍/ 法/ 关于/ t/ 线性/ 收敛/ ,/ 20/ 世纪/ 80/ 年代/ 提出/ 了/ 原/ 对偶/ 内点法/ (/ Primal/ -/ dualinterior/ -/ pointmethods/ )/ [/ 28/ ]/ 加速/ 了/ 求解/ 的/ 收敛/ ,/ 更为/ 有效/ ./ 它/ 受/ 障碍/ 法/ 的/ 启发/ ,/ 将/ 牛顿/ 法/ 运用/ 到/ 求解/ 修改/ 的/ KKT/ 方程/ 中/ ,/ 同时/ 迭代/ 原/ 变量/ 和/ 对偶/ 变量/ ./ 值得一提的是/ ,/ 内点法/ 迭代/ 过程/ 中/ 得到/ 的/ 原/ 变量/ 和/ 对偶/ 变量/ 不/ 一定/ 在/ 可行/ 域/ 内/ ,/ 但/ 最后/ 收敛/ 得到/ 的/ 解/ 却是/ 可行/ 解/ ./ 由于/ 网络/ 中/ 的/ 实际/ 凸/ 优化/ 问题/ 有/ 很多/ 都/ 在/ 可行/ 域/ 内/ 存在/ 严格/ 的/ 可行/ 解/ (/ 即/ 满足/ Slater/ 条件/ [/ 26/ ]/ )/ ,/ 因此/ 具有/ 强/ 对偶性/ (/ strongduality/ )/ ,/ 即原/ 问题/ 的/ 解/ 与/ 对偶/ 问题/ 的/ 解/ 之间/ 没有/ 间隙/ (/ dualitygap/ )/ ./ 于是/ ,/ 求解/ 原/ 问题/ 就/ 可以/ 等价/ 为/ 求解/ 相应/ 的/ 拉格朗/ 日/ 对偶/ 问题/ ./ 拉格朗/ 日/ 对偶/ 放松/ 了/ 原/ 问题/ 的/ 约束/ ,/ 并/ 将/ 其/ 转化/ 为/ 加权/ 的/ 目标/ 函数/ [/ 24/ ,/ 26/ ]/ ,/ 实施/ 对偶/ 时/ ,/ 有时/ 只/ 针对/ 部分/ 约束/ ,/ 如式/ (/ 6/ )/ 的/ 拉格朗/ 日/ 函数/ 为/ L/ (/ 狓/ ,/ λ/ )/ =/ ∑/ s/ 对/ 偶函数/ 为/ 则/ 对偶/ 问题/ 即/ 为/ 对偶/ 问题/ 可以/ 用/ 梯度/ 法/ 迭代/ 求解/ λ/ l/ (/ t/ +/ 1/ )/ =/ λ/ l/ (/ t/ )/ -/ α/ cl/ -/ ∑/ s/ :/ l/ ∈/ L/ (/ s/ )/ x/ / s/ (/ λ/ l/ (/ tx/ / s/ 为/ 对/ 偶函数/ (/ 10/ )/ 取/ 到/ 最优/ 值时/ 的/ 变量值/ ,/ α/ >/ 0/ 是/ 一个/ 足够/ 小/ 的/ 正/ 步长/ ./ 3.1/ ./ 2/ 整数/ 规划/ 的/ 多项式/ 算法/ 网络资源/ 的/ 安置/ 与/ 选择/ 等/ 很多/ 问题/ 中/ 都/ 存在/ 离散/ 决策/ 变量/ ./ 由于/ 离散/ 的/ 点/ 分布/ 破坏/ 了/ 可行/ 域/ 的/ 凸性/ ,/ 一般/ 意义/ 上/ 不能/ 在/ 多项式/ 时间/ 内/ 找到/ 全局/ 最优/ 解/ ./ 而/ 在/ 通信/ 网络/ 中/ ,/ 由于/ 资源/ 的/ 离散/ 化/ 配置/ ,/ 派/ 生出/ 许多/ 的/ 离散/ 优化/ 问题/ ./ 网络/ 中/ 最/ 经典/ 的/ 优化/ 问题/ 是/ 路由/ 选择/ 问题/ ,/ 单纯/ 考虑/ 时/ 延时/ ,/ 路由/ 选择/ 则/ 可以/ 模型/ 化为/ 一个/ 最短/ 路径/ 问题/ ./ 此外/ ,/ 桥式/ LAN/ 可用/ 最小/ 生成/ 树/ 模型/ 进行/ 优化/ 从而/ 保证/ 配置/ 代价/ 最小/ [/ 29/ ]/ ./ 这些/ 问题/ 通常/ 可以/ 归结为/ 整数/ 规划/ 模型/ (/ IntegerProgramming/ )/ ,/ 并/ 写成/ 上文/ 提到/ 的/ 通用/ 的/ 表达方式/ ./ 不同/ 的/ 是/ ,/ 模型/ 中/ 的/ 决策/ 变量/ 全部/ 或/ 部分/ 有/ 整数/ 限制/ ./ 只有/ 一部分/ 变量/ 为/ 整数/ 的/ 优化/ 模型/ 被/ 称为/ 混合/ 整数/ 规划/ 模型/ (/ MixedIntegerProgramming/ )/ ./ Jia/ 等/ 人/ [/ 30/ ]/ 分别/ 用/ 整数/ 规划/ 和/ 混合/ 整数/ 规划/ 模型/ 分析/ 了/ 无线网络/ 通过/ 调节/ 传输/ 功率/ 改变/ 网络/ 传输/ 的/ 连通性/ ,/ 在/ 保证/ 端到/ 端/ 流量/ 需求/ 和/ 传输/ 时延/ 的/ 约束/ 下/ ,/ 最小化/ 能量消耗/ ./ 对于/ 不能/ 拆分/ 的/ 流量/ 需求/ ,/ 用/ 0/ -/ 1/ 变量/ 表示/ 某条/ 链路/ 是否/ 被/ 使用/ ,/ 一旦/ 被/ 使用/ ,/ 将/ 传输/ 所有/ 流量/ ,/ 这样/ 问题/ 被/ 描述/ 成/ 一个/ 整数/ 规划/ 问题/ ;/ 而/ 对于/ 可以/ 拆分/ 的/ 流量/ 需求/ ,/ 不仅/ 用/ 0/ -/ 1/ 变量/ 表示/ 某条/ 链路/ 是否/ 被/ 使用/ ,/ 而且/ 用/ 一个/ 实值/ 变量/ 表示/ 链路/ 上/ 传输/ 的/ 流量/ ,/ 所有/ 的/ 流量/ 需求/ 会/ 进行/ 分流/ 并/ 通过/ 不同/ 的/ 路径/ 进行/ 传输/ ,/ 在/ 这种/ 情形/ 下/ ,/ 模型/ 化为/ 一个/ 混合/ 整数/ 规划/ ./ 一般/ 情况/ 下/ ,/ 整数/ 规划/ 和/ 混合/ 整数/ 规划/ 问题/ 很多/ 是/ NP/ -/ 难/ 问题/ ,/ 这/ 与/ 模型/ 的/ 结构/ 相关/ ./ 其中/ ,/ 有/ 一类/ 问题/ 可以/ 通过/ 图论/ 的/ 技巧/ 在/ 多项式/ 时间/ 内/ 找到/ 最优/ 解/ ,/ 例如/ 网络/ 流/ 问题/ ./ 最大/ 流/ 可用/ 来/ 求解/ 在/ 有/ 向/ 传输/ 网络/ 中/ ,/ 在/ 链路/ 容量/ 限制/ 和/ 节点/ 流/ 守恒/ 限制/ 下/ ,/ 如何/ 调度/ 流量/ 需求/ ,/ 可以/ 使/ 传输/ 的/ 流量/ 总和/ 达到/ 最大/ ./ 它常/ 被/ 用来/ 求解/ 网络/ 的/ 整体/ 传输/ 能力/ ,/ 并/ 验证/ 是否/ 能够/ 满足/ 一定/ 的/ 流量/ 需求/ ./ 文献/ [/ 31/ ]/ 用该/ 方法/ 检验/ 多/ 跳/ 无线网/ 整合/ 节点/ 的/ 放置/ 方案/ 是否/ 满足/ 流量/ 需求/ ./ 最大/ 流/ 的/ 求法/ 是/ 在/ 残余/ 网络/ 中/ 不断/ 地/ 寻找/ 增广/ 路径/ ,/ 直到/ 增广/ 路径/ 不/ 存在/ 为止/ ./ 当/ 流量/ 取/ 离散/ 整数/ 值时/ ,/ 按照/ 此/ 方法/ 得到/ 的/ 解/ 也/ 是/ 整数/ 的/ ,/ 并且/ 是/ 最优/ 解/ ./ 最小/ 费用/ 流是/ 在/ 链路/ 容量/ 限制/ 和/ 节点/ 流/ 守恒/ 限制/ 的/ 基础/ 上/ ,/ 给/ 每条/ 链路/ 规定/ 一个/ 传输/ 代价/ ,/ 并且/ 预先指定/ 每个/ 源/ 节点/ 需要/ 传输/ 的/ 最小/ 流量/ 和/ 每个/ 目的/ 节点/ 需要/ 接收/ 的/ 最小/ 流量/ ./ 最小/ 费用/ 流/ 算法/ 在/ 此基础/ 上/ 给出/ 所/ 花/ 代价/ 最小/ 的/ 方案/ ,/ 求解/ 过程/ 有/ 消圈法/ 、/ Page8/ 连续/ 最短/ 路径/ 法/ 和/ 对偶/ 法/ ./ 如果/ 不/ 指定/ 最小/ 流量/ ,/ 而是/ 要求/ 必须/ 达到/ 网络/ 中/ 可以/ 传输/ 的/ 最大/ 流量/ ,/ 这时/ 求/ 最小/ 费用/ 问题/ 就/ 变成/ 最小/ 费用/ 最大/ 流/ 问题/ ./ 网络/ 中/ 最/ 短/ 路径/ 的/ 求解/ 方法/ 根本/ 上/ 基于/ 松弛/ 算法/ ,/ 如/ RIP/ 路由/ 协议/ 采用/ bellmen/ -/ ford/ 算法/ 进行/ 路由/ 选择/ ,/ 它/ 是/ 距离/ 路径/ 算法/ 的/ 一种/ ,/ 而/ OSPF/ 路由/ 协议/ 是/ 一种/ 典型/ 的/ 链路/ 状态/ 路由/ 协议/ ,/ 它/ 采用/ Dijkstra/ 算法/ 完成/ 最/ 短路/ 由/ 的/ 选择/ ./ 最小/ 生成/ 树/ 算法/ 可以/ 应用/ 在/ 桥式/ LAN/ 的/ 配置/ 问题/ 上/ ,/ 它/ 基于/ 拟阵/ 结构/ ,/ 可以/ 设计/ 出/ 几种/ 贪心/ 算法/ ,/ 其中/ 包括/ Kruscal/ 算法/ 和/ Prim/ 算法/ ./ 此外/ ,/ 还有/ 最大/ 权/ 二分/ 图/ 匹配/ 算法/ ,/ 它/ 可以/ 看成/ 资源/ -/ 消费者/ 的/ 分配/ 问题/ ,/ 每种/ 资源/ 只能/ 分配/ 给/ 一个/ 消费者/ ,/ 每个/ 消费者/ 只能/ 接收/ 一种/ 资源/ ./ 对于/ 一对/ 分配/ 方案/ 〈/ 资源/ ,/ 消费者/ 〉/ ,/ 消费者/ 可以/ 获得/ 相应/ 的/ 收益/ ./ 求解/ 整个/ 资源/ 的/ 分配/ 方案/ 使/ 所有/ 消费者/ 的/ 总体/ 收益/ 最大/ 即/ 是/ 最大/ 二分/ 图/ 匹配/ 算法/ ,/ 它/ 可以/ 用/ 匈牙利/ 算法/ 进行/ 求解/ ./ 值得一提的是/ ,/ 上述/ 算法/ 很多/ 都/ 可以/ 归结为/ 最小/ 费用/ 流/ 问题/ :/ 当/ 供给/ 和/ 需求/ 流量/ 为/ 1/ ,/ 且/ 链路/ 传输/ 代价/ 也/ 为/ 1/ 时/ ,/ 最小/ 费用/ 流/ 就/ 化成/ 了/ 最/ 短/ 路径/ 问题/ ;/ 而/ 当/ 供给/ 和/ 需求/ 流量/ 为/ 1/ ,/ 链路/ 的/ 代价/ 为/ 将/ 资源分配/ 给/ 某个/ 消费者/ 的/ 收益/ 的/ 负值/ 时/ ,/ 最小/ 费用/ 流/ 问题/ 转化/ 为/ 总/ 收益/ 的/ 最大/ 权/ 匹配/ 问题/ ./ 上述/ 所有/ 算法/ ,/ 当/ 可行/ 域/ 为/ 整数/ 点/ 的/ 集合/ 时/ ,/ 算法/ 依然/ 成立/ ,/ 并/ 可以/ 证明/ 算法/ 在/ 多项式/ 时间/ 内/ 收敛/ 到/ 最优/ 解/ ./ 3.2/ NP/ 难/ 问题/ 与/ 近似算法/ 网络/ 中/ 许多/ 优化/ 问题/ 是/ NP/ -/ 难/ 的/ ,/ 在/ 多项式/ 时间/ 内/ 收敛/ 的/ 优化/ 算法/ 目前/ 不/ 存在/ ./ 文献/ [/ 32/ ]/ 的/ 报告/ 提出/ 了/ 无线/ Mesh/ 网中/ 保证/ “/ 完美/ ”/ QoS/ 的/ 挑战/ ,/ 其中/ 涉及/ 了/ 许多/ NP/ -/ 难/ 问题/ :/ “/ 完美/ ”/ 的/ 零/ 抖动/ 分组/ 调度/ 是/ NP/ -/ 难/ 问题/ ,/ “/ 完美/ ”/ 的/ 无线/ Mesh/ 网/ 调度/ 问题/ 是/ NP/ -/ 难/ 问题/ ,/ “/ 完美/ ”/ 的/ 路由/ (/ 达到/ 100/ %/ 的/ 容量/ )/ 是/ NP/ -/ 难/ 问题/ …/ …/ “/ 完美/ ”/ 问题/ 难于/ 求解/ ,/ 难于/ 扩展/ ,/ 也/ 为/ 我们/ 力图/ 找到/ “/ 近似/ 完美/ ”/ 的/ 方案/ 提供/ 了/ 在/ 时间/ 上/ 和/ 效果/ 上/ 折中/ 的/ 动机/ ./ 解决/ 此类/ 问题/ 可以/ 分为/ 两个/ 步骤/ :/ 难/ 问题/ 的/ 规约/ 和/ 难/ 问题/ 的/ 近似/ ./ 3.2/ ./ 1NP/ -/ 难/ 问题/ 规约/ 图/ 5/ 给出/ 了/ 几个/ 关于/ NP/ 概念/ 之间/ 的/ 关系/ ./ 如果/ 能/ 证明/ 一个/ NPC/ 问题/ 能够/ 在/ 多项式/ 时间/ 内/ 规约/ 为/ 一个/ 给定/ 问题/ ,/ 则/ 给定/ 问题/ 即为/ NP/ -/ 难/ 问题/ [/ 33/ ]/ ./ 如果/ 要求/ 证明/ 该/ 给定/ 问题/ 也/ 是/ NPC/ 问题/ ,/ 只/ 需/ 附加/ 证明/ 该/ 问题/ 是/ NP/ 问题/ 即可/ (/ 即/ 可以/ 在/ 多项式/ 时间/ 以/ 确定性/ 算法/ 验证/ 一个/ 解/ )/ ./ 从/ Cook/ 最早/ 证明/ 电路/ 可/ 满足/ 性/ 问题/ 属于/ NPC/ 类/ 开始/ ,/ 已经/ 发现/ 许多/ NPC/ 问题/ ,/ 如/ 背包/ 问题/ 、/ 哈密尔顿/ 路径/ 、/ 子集合/ 问题/ 、/ 团/ 问题/ 、/ 顶点/ 覆盖/ 以及/ 独立/ 集/ 问题/ 等/ ./ 这些/ 问题/ 之间/ 有/ 很多/ 本身/ 可以/ 用/ 规约/ 的/ 方法/ 证明/ 其/ 属于/ NPC/ 类/ ./ 图/ 5P/ 、/ NP/ 、/ co/ -/ NP/ 、/ NP/ -/ 难/ 、/ NPC/ 之间/ 的/ 关系/ 在/ 实际/ 处理/ 中/ ,/ 只/ 需/ 证明/ 某个/ 已知/ 的/ NPC/ 问题/ 能够/ 规约/ 为原/ 问题/ 的/ 一个/ 具体/ 实例/ ,/ 并且/ 规约/ 过程/ 是/ 可以/ 在/ 多项式/ 时间/ 内/ 完成/ 的/ ./ 文献/ [/ 34/ ]/ 研究/ 了/ 如何/ 在/ CDN/ 网络/ 中/ 备份/ 数据/ 对象/ ,/ 使得/ 当/ 用户/ 从/ 最近/ 的/ CDN/ 服务器/ 中/ 获取/ 所/ 需/ 数据/ 时/ ,/ 遍历/ 的/ 自治/ 系统/ 数量/ 最小/ ./ 每个/ CDN/ 服务器/ 的/ 容量/ 是/ 有限/ 的/ ,/ 因此/ 这个/ 问题/ 是/ 典型/ 的/ 资源/ 受限/ 问题/ ./ 原/ 问题/ 可以/ 由/ 背包/ 问题/ 规约/ ,/ 从而/ 证明/ 其/ 属于/ NPC/ 类/ ./ 事实上/ ,/ 这/ 类/ 资源分配/ 问题/ 常常/ 可以/ 由/ 类似/ 的/ 带/ 约束/ 的/ 调度/ 问题/ 进行/ 规约/ ,/ 规约/ 的/ 过程/ 也/ 比较/ 直观/ ./ 还有/ 一类/ 典型/ 的/ 规约/ 问题/ 是/ 基于/ 经典/ 图论/ 问题/ 的/ ,/ 例如/ ,/ 文献/ [/ 35/ ]/ 将/ 探讨/ 的/ 无线/ 传感器/ 网络/ 节能/ 问题/ 表达/ 为/ 一个/ 连通性/ 的/ 图论/ 问题/ :/ 在/ 给定/ 的/ 一个/ 传感器/ 集合/ 中/ ,/ 计算/ 每个/ 传感器/ 的/ 传输/ 功率/ ,/ 使得/ 每/ 对/ 传感器/ 都/ 是/ 连通/ 的/ ,/ 且/ 尽可能/ 使/ 总/ 传输/ 功率/ 最小/ ./ 这个/ 问题/ 也/ 是/ 一个/ 典型/ 的/ 带/ 约束/ 最优化/ 问题/ ./ 文章/ 使用/ 了/ 链式/ 规约/ 的/ 技巧/ ,/ 先由/ 4/ 平面/ 顶点/ 覆盖/ 问题/ (/ 4PlanarVC/ )/ 规约/ 到/ 3/ 平面/ 顶点/ 覆盖/ 问题/ (/ 3PlanarVC/ )/ ,/ 证明/ 3PlanarVC/ 是/ NPC/ 问题/ ,/ 由此/ 规约/ 3rPlanarVC/ 问题/ (/ 3PlanarVC/ 的/ 特例/ ,/ 保证/ 每/ 两个/ 顶点/ 之间/ 的/ 距离/ 不/ 小于/ 3/ )/ 是/ NPC/ 问题/ ,/ 最后/ 规约/ 到/ 原/ 问题/ 是/ NPC/ 问题/ ./ 图论/ 难/ 问题/ 的/ 规约/ 关键在于/ 寻找/ 一个/ 与/ 已知/ 问题/ 有/ 类似/ 结构/ 的/ 原/ 问题/ 的/ 实例/ ./ 此外/ ,/ 还有/ 结论性/ 更强/ 的/ 规约/ ,/ 如/ L/ -/ 规约/ ./ 它/ 被/ 用/ 在/ 证明/ 一个/ 问题/ 是/ MAXSNP/ -/ 难/ 问题/ ,/ 即/ 不/ 存在/ 多项式/ 时间/ 近似/ 方案/ (/ PTAS/ )/ 的/ 问题/ ./ 为了/ 证明/ 一个/ 优化/ 问题/ B/ 是/ MAXSNP/ -/ 难/ 的/ ,/ 给出/ 从/ 一个/ 已知/ 的/ MAXSNP/ -/ 难/ 问题/ A/ 到/ 问题/ B/ 的/ L/ -/ 规约/ 就/ 可以/ ./ 这个/ 性质/ 被/ 用来/ 证明/ 原/ 问题/ 是/ 一类/ 很难/ 被/ 近似/ 的/ 问题/ ./ 文献/ [/ 36/ ]/ 研究/ 了/ LTE/ 下行/ 链路/ 多/ 输入/ 多/ 输出/ -/ 频域/ 分组/ 调度/ 问题/ 的/ 计算/ 复杂性/ ,/ 通过/ 任务/ 区间/ 选择/ 问题/ (/ JISPk/ )/ 进行/ L/ -/ 规约/ ,/ 证明/ 了/ 该/ 调度/ 问题/ 也/ 是/ MAXSNP/ -/ 难/ 的/ ./ 此外/ ,/ 文献/ [/ 37/ ]/ 推荐/ 了/ 除/ L/ -/ 规约/ 之外/ 的/ 两类/ 近似/ 保持/ 规约/ :/ AP/ -/ 规约/ 和/ PTAS/ -/ 规约/ ,/ 可以/ 证明/ 更/ 多/ 的/ 结论/ ./ 3.2/ ./ 2/ 难/ 问题/ 的/ 近似算法/ 为了/ 在/ 有限/ 时间/ 内/ 实施/ 优化/ 算法/ ,/ 通常/ 采用/ 近/ Page9/ 似的/ 方法/ ./ 固定/ 模式/ 的/ 近似算法/ 在/ 实际/ 中/ 经常/ 使用/ ,/ 因为/ 它们/ 便于/ 设计/ ,/ 计算/ 也/ 简便/ ./ 最/ 简单/ 的/ 一类/ 近似算法/ 是/ 贪心/ 算法/ ,/ 它/ 只/ 关注/ 于/ 当前/ 的/ 局部优化/ ,/ 并/ 期望/ 其/ 对/ 全局/ 目标/ 带来/ 益处/ ./ 例如/ ,/ 文献/ [/ 36/ ]/ 采用/ 了/ 两种/ 近似/ 策略/ 进行/ LTE/ 上行/ 链路/ 的/ 频域/ 分配/ ,/ 一是/ 贪婪/ 策略/ ,/ 二是/ 基于/ LocalRatio/ 技术/ [/ 38/ ]/ 设计/ 的/ ,/ 该/ 技术/ 给出/ 了/ 求解/ 一类/ 在/ 满足/ 特定/ 约束/ 下/ ,/ 为/ 达到/ 最小/ 或/ 最大/ 权重/ 和/ 而/ 进行/ 子集/ 选择/ 的/ NP/ 问题/ 的/ 近似/ 方法/ ./ 虽然/ 有些/ 近似/ 方案/ 看起来/ 没有/ 固定/ 的/ 章法/ ,/ 但/ 它/ 的/ 设计/ 往往/ 和/ 规约/ 的/ 步骤/ 和/ 规约/ 后/ 的/ 问题/ 相关/ ,/ 如由/ 图论/ 规约/ 的/ 难/ 问题/ 近似算法/ 也/ 常常/ 涉及/ 图论/ 算法/ ,/ 文献/ [/ 35/ ]/ 就是/ 基于/ 最小/ 生成/ 树/ 的/ 算法/ 得到/ 了/ 功率/ 分配/ 的/ 近似/ 方案/ ./ 很多/ NP/ -/ 难/ 问题/ 可以/ 表示/ 为/ 整数/ 线性规划/ 问题/ ,/ 于是/ 与/ 凸/ 优化/ 问题/ 类似/ 的/ 原/ -/ 对偶/ 方法/ (/ Primal/ -/ dual/ )/ 就/ 被/ 改造/ 用来/ 设计/ 组合/ 优化/ 的/ 近似算法/ ./ 由于/ 原/ -/ 对偶/ 方法/ 通用/ 的/ 模式/ ,/ 它/ 成为/ 一种/ 设计/ 近似算法/ 通用/ 的/ 技术/ ./ 采用/ 其它/ 方法/ ,/ 如/ 贪婪/ 策略/ 设计/ 的/ 很多/ 近似算法/ 也/ 可以/ 用原/ -/ 对偶/ 方法/ 来/ 解释/ [/ 39/ ]/ ./ 对于/ 如下/ 的/ 经过/ 变量/ 松弛/ (/ 去掉/ 整数/ 限制/ )/ 后/ 的/ 原/ 问题/ :/ 和/ 对偶/ 问题/ 二者/ 对应/ 的/ 原/ 互补/ 松弛/ 条件/ (/ primalcomplementaryslacknessconditions/ )/ 为/ 其中/ 犃/ j/ 为/ 犃/ 的/ 第/ j/ 列/ ./ 对偶/ 互补/ 松弛/ 条件/ (/ dualcom/ -/ plementaryslacknessconditions/ )/ 为/ 其中/ 犃/ i/ 为/ 犃/ 的/ 第/ i/ 行/ ./ 原/ -/ 对偶/ 近似算法/ 基于/ 如下/ 事实/ :/ 当/ 狓/ 和/ 狔/ 同时/ 满足/ 两个/ 互补/ 松弛/ 条件/ 时/ ,/ 它们/ 分别/ 是/ 原/ 问题/ 和/ 对偶/ 问题/ 的/ 最优/ 解/ [/ 40/ ]/ ./ 而原/ -/ 对偶/ 近似算法/ 的/ 步骤/ 也/ 是/ 逐步/ 增大/ 对/ 偶函数/ 目标值/ ,/ 并/ 在/ 此基础/ 上/ 寻找/ 尽量/ 满足/ 原/ -/ 互补/ 松弛/ 条件/ 的/ 原/ 问题/ 的/ 可行/ 解/ ./ 文献/ [/ 41/ ]/ 研究/ 了/ 单播/ 路由/ 问题/ ,/ 提出/ 了/ 一种/ 有效/ 的/ 原/ -/ 对偶/ 启发式/ 算法/ 来/ 找到/ 一条/ 路径/ ,/ 平衡/ 了/ 路径/ 代价/ 、/ 路径/ 延迟/ 和/ 出错率/ ./ 此外/ ,/ 还有/ 基于/ 分治/ 算法/ 、/ 随机/ 蒙特卡洛/ 算法/ [/ 39/ ]/ 的/ 近似/ 方案/ ./ 智能算法/ 也/ 是/ 求解/ NP/ -/ 难/ 问题/ 的/ 一种/ 途径/ ,/ 如/ 模拟退火/ 、/ 遗传算法/ 、/ 蚁群/ 算法/ 、/ 粒子/ 群/ 算法/ 等/ 现代/ 优化/ 理论/ ,/ 它们/ 都/ 是/ 基于/ 启发式/ 迭代/ 步骤/ 的/ 方法/ ./ Fei/ 等/ 人/ [/ 42/ ]/ 用/ 遗传算法/ 研究/ 了/ 带/ QoS/ 约束/ 的/ 路由/ 问题/ ,/ 是/ 智能算法/ 在/ 网络/ 路由/ 服务质量/ 应用/ 的/ 经典/ 文献/ ./ 问题/ 和/ 举例/ 以及/ 求解/ 方法/ ./ 图/ 6/ 给出/ 了/ 网络/ 优化/ 中/ NP/ -/ 难/ 问题/ 的/ 规约/ 经典/ 4/ 优化/ 实施方案/ 我们/ 可以/ 将/ 优化/ 算法/ 的/ 实施方案/ 按照/ 空间/ 和/ 时间/ 归类/ ./ 按照/ 优化/ 算法/ 实施/ 的/ 位置/ 不同/ ,/ 可以/ 分为/ 集中式/ 优化/ 实施方案/ 和/ 分布式/ 优化/ 实施方案/ ./ 顾名思义/ ,/ 集中式/ 优化/ 需要/ 有/ 一个/ 集中/ 的/ 控制器/ ,/ 并用/ 其/ 计算/ 的/ 优化/ 结果/ 进行/ 任务调度/ 或/ 资源分配/ ./ 而/ 分布式/ 算法/ 的/ 优化/ 问题/ 求解/ 过程/ 本身/ 就是/ 分布式/ 并行/ 完成/ 的/ ,/ 网络/ 中/ 的/ 相关/ 节点/ 都/ 参与/ 了/ 一部分/ 优化/ 过程/ ,/ 并/ 进行/ 必要/ 的/ 信息/ 传递/ ,/ 最后/ 每个/ 节点/ 利用/ 信息/ 对/ 自己/ 进行/ 调度/ 控制/ ./ 按照/ 优化/ 算法/ 实施/ 的/ 时间/ 不同/ ,/ 可以/ 分为/ 静态/ 优化/ 和/ 动态/ 优化/ ./ 静态/ 优化/ 在/ 算法/ 过程/ 中/ 所有/ 的/ 参数/ 都/ 是/ 锁定/ 的/ ,/ 而/ 动态/ 优化/ 算法/ 过程/ 中要/ 参考/ 网络/ 运行/ 的/ 状态/ 做出/ 决策/ ,/ 在/ 每个/ 时间/ 点/ 可能/ 做出/ 不同/ 的/ 决策/ ./ 4.1/ 集中式/ 优化/ 与/ 分布式/ 优化/ 所示/ ./ 集中式/ 优化/ 与/ 分布式/ 优化/ 算法/ 的/ 优缺点/ 如表/ 1/ 运行/ 速度慢/ (/ 大量/ 任务/ 在/ 同一/ 机/ 节点/ 间/ 通信量/ 小/ (/ 只/ 需/ 控制器/ 与/ 每个/ 安全性/ 弱/ (/ 易受/ 单点/ 攻击/ )/ 强/ 成本/ 高/ (/ 需要/ 新增/ 设备/ )/ 低/ (/ 只/ 需/ 利用/ 现有/ 设备/ )/ Page10/ 例如/ ,/ 式/ (/ 6/ )/ 表述/ 的/ 流量/ 优化/ 控制/ 问题/ ,/ 可以/ 将/ 其/ 对应/ 的/ 拉格朗/ 日/ 函数/ 写成/ 如下/ 形式/ :/ 其中/ Ls/ (/ xs/ ,/ λ/ s/ )/ =/ Us/ (/ xs/ )/ -/ λ/ sxs/ ,/ λ/ s/ =/ ∑/ l/ ∈/ L/ (/ s/ )/ λ/ l/ ./ 这/ 实际上/ 用/ 对偶/ 理论/ 将/ 问题/ 进行/ 了/ 分解/ ,/ 每个/ 网络/ 节点/ 通过/ 分别/ 求解/ 最大化/ 自己/ 的/ 拉格朗/ 日/ 函数/ 来/ 求得/ 整体/ 的/ 对/ 偶函数/ ,/ 即/ 然后/ 通过/ 梯度/ 的/ 方法/ 最小化/ 对/ 偶函数/ ./ 整个/ 算法/ 是/ 在/ 每个/ 节点/ 上/ 并行/ 实施/ 的/ ./ 由于/ 可以/ 把/ λ/ s/ 看作/ 源/ 节点/ s/ 的/ 排队/ 延迟/ ,/ ∑/ s/ :/ l/ ∈/ L/ (/ s/ )/ xs/ 可以/ 用/ 链路/ l/ 的/ 总流量/ 衡量/ ,/ 因此/ 此例/ 中/ 无需/ 任何/ 显示/ 的/ 信息/ 交换/ [/ 24/ ]/ ./ 实际上/ 可以/ 把/ 对偶/ 变量/ 看作/ 资源/ 的/ 代价/ ,/ 则/ 对偶/ 的/ 方法/ 其实/ 是/ 一种/ 基于/ 代价/ 的/ 网络/ 调度/ 方案/ ./ 文献/ [/ 24/ ,/ 27/ ]/ 给出/ 了/ 将/ 求解/ 过程/ 分解/ 的/ 其它/ 方法/ ,/ 如原/ 分解/ 法/ 通过/ 先/ 固定/ 一组/ 变量/ 求解/ 最优/ 值/ ,/ 再用/ 关于/ 这组/ 变量/ 的/ 梯度/ 进行/ 更新/ ,/ 迭代/ 求解/ 最终/ 的/ 最优化/ 问题/ ./ 原/ 分解/ 和/ 对偶/ 分解/ 法/ 可以/ 嵌套/ 使用/ ,/ 使/ 求解/ 过程/ 层次化/ ,/ 相应/ 的/ 分解/ 方案/ 可/ 被/ 解释/ 为/ 在/ 不同/ 时间尺度/ 上/ 进行/ 迭代/ ./ Chiang/ 等/ 人/ [/ 18/ ]/ 讨论/ 了/ 基于/ 优化/ 分解/ 的/ 分层/ 蕴含/ 的/ 两种/ 思想/ :/ 一是/ 可/ 将/ 网络/ 看成/ 一个/ 优化/ 器/ ,/ 网络/ 的/ 协议/ (/ 如/ TCP/ 协议/ )/ 被/ 看作/ 分布式/ 的/ 优化/ 解决方案/ ./ 虽然/ 网络协议/ 很多/ 是/ 启发式/ 的/ 设计/ ,/ 但/ 可以/ 通过/ 逆向/ 工程/ 发现/ 协议/ 对应/ 的/ 基本/ 数学/ 问题/ ,/ 然后/ 通过/ 改进/ 模型/ 元素/ 系统/ 的/ 方法/ 改进/ 协议/ ./ 二是/ 通过/ 优化/ 分解/ 进行/ 网络/ 层次/ 的/ 设计/ ,/ 网络/ 的/ 每层/ 对应/ 一个/ 分解/ 后/ 的/ 子/ 问题/ ,/ 层次/ 之间/ 的/ 接口/ 即/ 为/ 优化/ 迭代/ 中/ 需要/ 进行/ 的/ 通信/ 信息/ ,/ 通过/ 寻找/ 代价/ 低/ 、/ 通信/ 少/ 的/ 分解/ 方法/ 可以/ 设计/ 出/ 比较/ 合理/ 的/ 分层/ 方式/ ./ 4.2/ 静态/ 优化/ 与/ 动态/ 优化/ 静态/ 优化/ 与/ 动态/ 优化/ 算法/ 的/ 优缺点/ 如表/ 2/ 所示/ ./ 易解/ 程度/ 优化/ 结论/ 强/ ,/ 往往/ 能/ 找出/ 最优/ 解弱/ ,/ 往往/ 收敛/ 到/ 次优/ 解/ 真实度/ 适应性/ 动态/ 优化/ 可以/ 采用/ 基于/ 状态/ 的/ 动态/ 规划/ 方法/ (/ 或/ 马尔可夫/ 决策/ 过程/ MDP/ )/ ,/ 其/ 基本/ 构成/ 要素/ 如下/ :/ (/ 1/ )/ 决策者/ ./ 是/ 做出/ 决策/ 的/ 物理/ 构件/ 或/ 人/ ;/ (/ 2/ )/ 系统/ 状态/ 空间/ 与/ 转移/ 概率/ // 强度/ ./ 系统/ 状态/ 是/ 对/ 当前/ 系统/ 状态/ 的/ 描述/ ./ 状态/ 之间/ 的/ 可/ 转移/ 关系/ ,/ 可以/ 通过/ 转移/ 概率/ (/ 离散/ 时间/ 模型/ )/ 或/ 转移/ 强度/ (/ 连续/ 时间/ 模型/ )/ 来/ 描述/ ;/ 网络/ 中/ 的/ 动态/ 队列/ 管理/ 优化/ 问题/ 常常/ 会/ 涉及/ 到/ (/ 3/ )/ 决策者/ 在/ 做/ 决策/ 时/ 的/ 信息/ 集/ ,/ 即可/ 观测/ 集/ ./ 根据/ 信息/ 集/ 的/ 性质/ 不同/ ,/ 可/ 将/ MDP/ 分为/ 两类/ :/ 一是/ 决策者/ 能/ 得到/ 系统/ 的/ 完全/ 信息/ ,/ 即/ 普通/ MDP/ ;/ 二是/ 决策者/ 只能/ 得到/ 部分/ 系统/ 信息/ ,/ 这/ 称为/ 部分/ 可/ 观测/ 马尔可夫/ 决策/ 过程/ (/ POMDP/ )/ ;/ (/ 4/ )/ 决策者/ 在/ 某个/ 系统/ 状态/ 的/ 行为/ 集合/ ./ 决策者/ 在/ 每个/ 状态/ 的/ 可选/ 行为/ 集合/ A/ ,/ 依赖于/ 当前/ 状态/ x/ ,/ 即可/ 将/ 该/ 集合/ 记为/ A/ (/ x/ )/ ./ MDP/ 的/ 求解/ 可以/ 使用/ 标准/ 的/ 动态/ 规划法/ [/ 43/ ]/ ,/ 而/ POMDP/ 的/ 求解/ 方法/ 可以/ 参见/ 文献/ [/ 44/ ]/ ./ POMDP/ 的/ 求解/ 耗费/ 资源/ 较大/ ,/ 实际/ 应用/ 中/ 一般/ 使用/ 一些/ 近似算法/ 进行/ 求解/ [/ 45/ ]/ ./ MDP/ ./ 通常/ ,/ MDP/ 的/ 决策/ 算法/ 部署/ 在/ 控制器/ 中/ ./ 图/ 7/ 描述/ 了/ 3/ 种/ 不同/ 的/ 队列/ 管理/ 模型/ ,/ 即单/ 队列/ 多/ 服务器/ (/ SQMS/ )/ 、/ 多/ 队列/ 单/ 服务器/ (/ MQSS/ )/ 以及/ 多/ 队列/ 多/ 服务器/ (/ MQMS/ )/ ./ 下面/ 以图/ 7/ 中/ 的/ 模型/ I/ 为例/ [/ 46/ ]/ ,/ 说明/ 对/ 动态/ 优化/ 问题/ 如何/ 进行/ 建模/ 分析/ ./ 考察/ 一个/ M/ // M/ // K/ // (/ N/ -/ K/ )/ 系统/ ./ 其中/ ,/ 有/ 一个/ 大小/ 为/ N/ -/ K/ 的/ 缓冲/ 队列/ ,/ K/ 个/ 服务器/ ./ 系统/ 中/ 可/ 容纳/ 的/ 任务/ 总数/ 为/ N/ 个/ ./ 任务/ 的/ 到达/ 速率/ 为/ λ/ ./ 服务器/ 的/ 服务/ 速率/ 各不相同/ ./ 令/ 服务器/ i/ 的/ 服务/ 速率/ 为/ μ/ i/ ./ 控制/ 行为/ 可以/ 在/ 两种/ 情形/ 下/ 发生/ :/ (/ 1/ )/ 在/ 一个/ 新/ 任务/ 到达/ 时/ ,/ 控制器/ 可以/ 决定/ 是/ 将/ 这个/ 任务/ 送/ 至/ 某个/ 空闲/ 服务器/ ,/ 或者/ 在/ 队列/ 未满/ 的/ 情况/ 下/ 将/ 这个/ 新/ 到达/ 任务/ 入队/ ./ 当/ 队列/ 已满/ ,/ 且/ 所有/ 服务器/ 均/ 在/ 工作/ 时/ ,/ 新/ 到达/ 的/ 任务/ 将会/ 被/ 丢弃/ ;/ (/ 2/ )/ 在/ 一个/ 任务/ 完成/ 时/ ,/ 若/ 队列/ 非空/ ,/ 控制器/ 可以/ 决定/ 是否/ 取出/ 一个/ 任务/ ,/ 将/ 其/ 送/ 至/ 某个/ 空闲/ 服务器/ ./ 该/ 系统/ 可用/ 一个/ 可控/ 过程/ {/ Z/ (/ t/ )/ }/ =/ {/ (/ X/ (/ t/ )/ ,/ U/ (/ t/ )/ )/ }/ 来/ 描述/ ,/ 其中/ {/ X/ (/ t/ )/ }/ 是/ 系统/ 状态/ ,/ {/ U/ (/ t/ )/ }/ 是/ 控制/ 过程/ ./ 该/ 可控/ 系统/ 的/ 目标/ 是/ 通过/ 一定/ 的/ 控制策略/ ,/ 使/ 系统/ 中/ 的/ 平均/ 任务/ 数/ 最少/ ./ 其中/ ,/ {/ X/ (/ t/ )/ }/ =/ {/ Q/ (/ t/ )/ ,/ D/ (/ t/ )/ }/ ,/ Q/ (/ t/ )/ 为/ t/ 时刻/ 的/ 队列/ 长度/ ,/ D/ (/ t/ )/ =/ (/ D1/ (/ t/ )/ ,/ …/ ,/ DK/ (/ t/ )/ )/ 为/ t/ 时刻/ 各个/ 服务器/ 的/ 状态/ ,/ 用/ 二元/ 指示/ 变量/ 表示/ ./ 系统/ 中/ 的/ 任务/ 数是/ 一个/ 随机/ 过程/ ,/ 用/ L/ (/ t/ )/ =/ Q/ (/ t/ )/ +/ ∑/ 1/ / k/ / K/ 个/ 连续/ 时间/ 马尔可夫/ 决策/ 过程/ ./ 系统/ 的/ 目标/ 函数/ 可以/ 设定/ 为/ 最小化/ 系统/ 平均/ 任务/ 数/ ./ 令/ [/ 0/ ,/ t/ ]/ 内/ 系统/ 中/ 的/ 总任务/ 数为/ Page11/ 给定/ 初始状态/ x/ 与/ 策略/ δ/ ,/ 其/ 期望/ 记为/ E/ δ/ x/ ,/ 则/ 系统/ 的/ 优化/ 目标/ 为/ 该/ MDP/ 可以/ 利用/ 文献/ [/ 47/ ]/ 中/ 提供/ 的/ 算法/ 进行/ 求解/ ./ 需要/ 说明/ 的/ 是/ ,/ 静态/ 优化/ 与/ 动态/ 优化/ 没有/ 不可逾越/ 的/ 鸿沟/ ,/ 动态/ 优化/ 往往/ 也/ 是/ 建立/ 在/ 每/ 一个/ 时间槽/ 中/ 执行/ 一次/ 静态/ 优化/ ,/ 有时/ 为了/ 减少/ 开销/ ,/ 只有/ 检测/ 到/ 系统/ 参数/ 发生/ 明显/ 变化/ 时才/ 重新/ 计算/ ,/ 因此/ 需要/ 考虑/ 适应性/ 与/ 计算/ 量/ 之间/ 的/ 折中/ ./ 5/ 算法/ 评价/ 一个/ 优化/ 算法/ 的/ 好坏/ 取决于/ 它/ 在/ 实际/ 网络/ 中/ 实施/ 后/ 的/ 效果/ ./ 优化/ 方案/ 的/ 复杂度/ 越低/ ,/ 需要/ 的/ 通信量/ 越小/ ,/ 代价/ 越低/ ;/ 优化/ 方案/ 的/ 优化/ 程度/ 越高/ ,/ 稳定性/ 和/ 适应性/ 越强/ ,/ 带来/ 的/ 性能/ 改进/ 越大/ ./ 因此/ ,/ 我们/ 需要/ 对/ 优化/ 方案/ 的/ 代价/ 和/ 性能/ 进行/ 评价/ ./ 有些/ 指标/ 容易/ 写出/ 评估/ 表达式/ ,/ 如/ 复杂度/ 可以/ 用/ 经典/ 的/ 大/ O/ 表达式/ 描述/ ,/ 而/ 有些/ 指标/ 需要/ 真正/ 部署/ 到/ 实际/ 应用/ 中/ ,/ 通过/ 统计/ 实验/ 的/ 方法/ 进行/ 评价/ ,/ 如/ 算法/ 的/ 适应性/ 等/ ,/ 很难/ 给出/ 一个/ 显式/ 的/ 表达式/ ./ 5.1/ 优化/ 算法/ 的/ 代价/ 优化/ 算法/ 可以/ 用大/ O/ 表示法/ 给出/ 其/ 计算/ 复杂度/ 理论/ 上界/ ./ 在/ 基于/ 迭代/ 方法/ 的/ 优化/ 算法/ 中/ ,/ 也/ 用/ 该/ 方法/ 表示/ 迭代/ 的/ 收敛/ 速度/ ./ 在/ 解决/ 凸/ 优化/ 问题/ 时/ 采用/ 的/ 原/ -/ 对偶/ 内点法/ 通常/ 有/ 比/ 线性/ 更快/ 的/ 收敛/ 速度/ ,/ 例如/ ,/ 对于/ 线性规划/ ,/ 内点法/ 的/ 收敛/ 速度/ 为/ O/ (/ 槡/ nL/ )/ ,/ 其中/ L/ 表示/ 输入/ 数据/ 的/ 二进制/ 编码/ 长度/ ;/ 对于/ SDP/ 规划/ ,/ 内点法/ 的/ 收敛/ 速度/ 在/ 一定/ 条件/ 限制/ 下亦为/ O/ (/ 槡/ nL/ )/ [/ 48/ -/ 50/ ]/ ./ 这/ 保证/ 了/ 凸/ 优化/ 问题/ 的/ 多项式/ 时间/ 可/ 解性/ ./ 在/ 评价/ 网络/ 优化/ 算法/ 度时/ ,/ 不仅/ 应/ 关注/ 算法/ 本身/ ,/ 而且/ 应/ 考虑/ 其/ 实际/ 应用/ 中/ 的/ 平均/ 性能/ ./ 例如/ ,/ 在/ 文献/ [/ 51/ ]/ 中/ ,/ 先/ 在/ 算法/ 的/ 开始/ 进行/ 预处理/ ,/ 求得/ 网络/ 的/ 最大/ 流量/ ,/ 然后/ 每/ 进行/ 一次/ 最/ 短路/ 由/ 选择/ ,/ 采用/ 一次/ 最短/ 路径/ 的/ 方法/ ,/ 并且/ 更新/ 网络/ 的/ 容量/ ./ 此时/ 求/ 网络/ 最大/ 流/ 的/ 复杂度/ 被/ 平摊/ 到/ 每次/ 路由/ 选择/ 中/ ,/ 使/ 其/ 可以/ 忽略不计/ ./ 评价/ 算法/ 的/ 原则/ 是/ 关注/ 于/ 算法/ 的/ 复杂度/ 对/ 网络/ 提供/ 的/ 服务/ 带来/ 的/ 代价/ ./ 为了/ 实现/ 优化/ 算法/ ,/ 有时/ 需要/ 收集/ 需要/ 的/ 参数信息/ ,/ 尤其/ 在/ 分布式/ 优化/ 算法/ 中/ ,/ 每个/ 节点/ 都/ 需要/ 从/ 其它/ 节点/ 获取/ 需要/ 的/ 信息/ (/ 即/ 其余/ 子/ 问题/ 的/ 解/ )/ ,/ 这时/ 不可避免/ 地/ 产生/ 了/ 大量/ 通信/ 代价/ ./ 有些/ 信息/ 可以/ 从/ 系统/ 状态/ 中/ 获知/ ,/ 如/ 前面/ 所述/ 的/ 分解/ 算法/ ,/ 用/ 排队/ 延迟/ 代替/ 需要/ 交换/ 的/ 对偶/ 变量/ 信息/ ./ 评价/ 通信/ 代价/ 可以/ 用/ 信息/ 交互/ 量/ 表示/ ,/ 文献/ [/ 52/ ]/ 在/ 最大化/ 资源分配/ 效用函数/ 时/ 采用/ 两种/ 分解/ 方法/ :/ 对偶/ 分解/ 和/ 高斯/ -/ 塞德尔/ (/ Gauss/ -/ Seidel/ )/ 分解/ ,/ 并/ 对比/ 了/ 在/ 线性/ 拓扑/ 和/ 树形/ 拓扑/ 情况/ 下/ ,/ 二者/ 所/ 需/ 的/ 通信量/ ,/ 验证/ 了/ 采用/ 高斯/ -/ 塞德尔/ 方法/ 需要/ 的/ 通信/ 代价/ 较少/ ./ 5.2/ 优化/ 算法/ 的/ 性能/ 在/ 可以/ 求得/ 解析/ 解/ 的/ 优化/ 方案/ 中/ ,/ 优化/ 算法/ 完美/ 地/ 达到/ 了/ 使/ 网络/ 性能/ 取得/ 最优/ 的/ 目的/ ,/ 如/ 在/ 网络/ 路由/ 协议/ 中/ 采用/ 的/ 最/ 短/ 路径/ 算法/ ,/ 在/ 有限/ 步骤/ 之后/ 精确/ 地/ 得到/ 了/ 最优/ 方案/ ./ 然而/ ,/ 在/ 只能/ 用/ 迭代/ 算法/ 逼近/ 其/ 最优/ 值/ 的/ 数值/ 求解/ 时/ ,/ 需要/ 人为/ 地/ 设定/ 与/ 理论/ 最优性/ 能/ 的/ 容忍度/ ε/ ,/ ε/ 通常/ 是/ 一个/ 很小/ 的/ 常数/ ,/ 其值/ 的/ 大小/ 与/ 迭代/ 次数/ 是/ 负相关/ 的/ ,/ 因此/ 需要/ 折中/ 考虑/ ε/ 的/ 取法/ ./ 在/ NP/ -/ 难/ 问题/ 中/ ,/ 甚至/ 不/ 存在/ 多项式/ 时间/ 内/ 可以/ 收敛/ 到/ 最优/ 值/ 的/ 方案/ ,/ 这/ 就/ 需要/ 寻找/ 近似算法/ ,/ 以图/ 达到/ 性能/ 与/ 效率/ 的/ 折中/ ./ 需要/ 说明/ 的/ 是/ ,/ 即使/ 在/ 存在/ 多项式/ 时间/ 求解/ 方案/ 的/ 情况/ 下/ ,/ 也/ 可能/ 鉴于/ 需要/ 尽可能/ 地/ 缩短/ 优化/ 算法/ 运行/ 的/ 时间/ 或/ 将/ 算法/ 分布式/ 实施/ 而/ 采用/ 性能/ 和/ 复杂度/ 的/ 折中/ 方案/ ./ 例如/ 文献/ [/ 9/ ]/ 利用/ 最大/ 二分/ 图/ 匹配/ 的/ 方法/ 进行/ 动态/ 信道/ 分配/ ,/ 在/ 具体实施/ 时/ 采用/ 贪心/ 策略/ 将/ 匹配/ 算法/ 部署/ 到/ 所有/ 请求/ 用户/ 上/ ,/ 不仅/ 达到/ 了/ 效率/ 上/ 的/ 提高/ ,/ 而且/ 验证/ 了/ 其/ 与/ 理论/ 最优/ 值/ 的/ 差距/ 小于/ 7/ %/ ./ 对于/ NP/ -/ 难/ 问题/ 的/ 近似/ 方案/ ,/ 由于/ 不/ 知道/ 具体/ 的/ 最优/ 解/ ,/ 证明/ 近似算法/ 与/ 理论/ 最优/ 解/ 的/ 差距/ 就/ 更为/ 关键/ ./ 令/ G/ 为/ 某/ 一/ 最大化/ 问题/ ,/ 近似算法/ 的/ 返回值/ 为/ ALG/ (/ G/ )/ ,/ 理论/ 最优/ 值为/ OPT/ (/ G/ )/ ,/ 通常/ 用/ 近似/ 比/ ρ/ (/ |/ G/ |/ )/ 来/ 描述/ 近似/ 程度/ ,/ 即/ ρ/ (/ |/ G/ |/ )/ 越小/ 说明/ 近似/ 度越/ 高/ ,/ 当/ 它/ 与/ 问题/ 的/ 规模/ 无/ Page12/ 关时/ ,/ 近似/ 比/ 为/ 常数/ ρ/ ,/ 特别/ 地/ ,/ 若/ ρ/ =/ 1/ ,/ 则/ 近似算法/ 实际上/ 找到/ 了/ 最优/ 解/ ./ 我们/ 通常/ 希望/ 设计/ 出/ 具有/ 与/ 问题/ 规模/ 无关/ 且/ 尽量/ 小/ 的/ 近似/ 比/ 的/ 优化/ 算法/ ./ 文献/ [/ 36/ ]/ 分别/ 采用/ 了/ 贪婪/ 算法/ 和/ Local/ -/ Ratio/ 技术/ 得到/ 两种/ 不同/ 的/ 上行/ 链路/ 频域/ 分组/ 调度/ 算法/ ,/ 并/ 证明/ 贪婪/ 算法/ 的/ 近似/ 比为/ O/ (/ lnn/ )/ ,/ 而/ 基于/ Local/ -/ Ratio/ 技术/ 的/ 算法/ 达到/ 了/ 常数/ 的/ 近似/ 比/ 2/ ./ 对于/ 动态/ 算法/ 来说/ ,/ 常常/ 要/ 保证系统/ 状态变量/ 的/ 稳定性/ ,/ 文献/ [/ 53/ ]/ 给出/ 了/ 排队/ 网络/ 强/ 稳定性/ 的/ 表达式/ ,/ 一个/ 排队/ 网络/ 是/ 强/ 稳定/ 的/ ,/ 当下/ 式/ 成立/ 其中/ ,/ Q/ (/ t/ )/ =/ (/ Qq/ (/ t/ )/ )/ q/ ∈/ Q/ 是/ 描述/ t/ 时刻/ 队列/ 长度/ 的/ 向量/ ./ 可以/ 用/ 李雅普/ 诺夫/ 定理/ [/ 21/ ]/ 证明/ 稳定性/ ./ 定义/ 非负/ 的/ 李雅普/ 诺夫/ 函数/ L/ (/ Q/ )/ ,/ 例如/ L/ (/ Q/ )/ =/ ∑/ L/ 当/ 存在/ 常数/ B/ >/ 0/ ,/ ε/ >/ 0/ ,/ 使得/ 下/ 式/ 成立/ E/ {/ L/ (/ Q/ (/ t/ +/ 1/ )/ )/ -/ L/ (/ Q/ (/ t/ )/ )/ |/ Q/ (/ t/ )/ }/ / B/ -/ ε/ ∑/ L/ 则/ 网络/ 是/ 强/ 稳定/ 的/ ,/ 而且/ Neely/ 等/ 人/ [/ 21/ ]/ 利用/ 李雅普/ 诺夫/ 优化/ ,/ 得到/ 了/ 目标/ 性能/ 与/ 稳定性/ 的/ 折中/ [/ O/ (/ 1/ // V/ )/ ,/ O/ (/ V/ )/ ]/ ,/ 李雅普/ 诺夫/ 优化/ 已经/ 应用/ 到/ 许多/ 动态/ 网络/ 模型/ 的/ 优化/ 中/ [/ 54/ -/ 56/ ]/ ./ 6/ 总结/ 与/ 展望/ 网络协议/ 机制/ 往往/ 从/ 启发式/ 设计/ 开始/ ,/ 在/ 真正/ 部署/ 之后/ 需要/ 不断/ 地/ 进行/ 补丁/ 式/ 的/ 改善/ ,/ 这是/ 由于/ 网络/ 设计/ 之初/ 没有/ 严格/ 的/ 理论/ 支撑/ ./ 网络/ 机制/ 与/ 优化/ 理论/ 的/ 偏离/ 使得/ 后续/ 演进/ 的/ 实施/ 代价/ 增高/ ,/ 也/ 为/ 服务质量/ 的/ 保障/ 设下/ 了/ 难题/ ./ 从/ 优化/ 模型/ 出发/ 对/ 网络系统/ 进行/ 建模/ 分析/ ,/ 能够/ 使/ 其/ 性能/ 达到/ 尽可能/ 令人满意/ 的/ 程度/ ,/ 从/ 设计/ 到/ 实施/ 都/ 有章可循/ ./ 本文/ 从/ 优化/ 理论/ 出发/ ,/ 结合/ 网络/ 中/ 设计/ 目标/ 和/ 约束/ 与/ 优化/ 模型/ 的/ 对应/ 关系/ ,/ 阐述/ 如何/ 应用/ 优化/ 理论/ 辅助/ 网络系统/ 的/ 设计/ ./ 我们/ 将/ 网络/ 优化/ 模型/ 分为/ 资源分配/ 、/ 任务调度/ 、/ 网络资源/ 部署/ 和/ 系统/ 参数/ 配置/ 等/ 4/ 个/ 方面/ ,/ 并/ 依据/ 不同/ 的/ 模型/ 结构/ 和/ 易解/ 程度/ 给出/ 了/ 常用/ 的/ 解决方案/ ./ 根据/ 求解/ 优化/ 模型/ 的/ 算法/ 不同/ ,/ 网络/ 优化/ 控制/ 的/ 实施方案/ 也/ 不同/ ,/ 因此/ 应/ 力图/ 找到/ 代价/ 低/ 、/ 通信/ 少/ 、/ 性能/ 好/ 和/ 稳定性/ 强/ 的/ 实施/ 方法/ ,/ 设计/ 出/ 比较/ 合理/ 的/ 部署/ 方式/ ./ 最后/ ,/ 对/ 优化/ 方案/ 进行/ 性能/ 和/ 代价/ 的/ 评价/ ,/ 以/ 助于/ 网络/ 优化/ 的/ 再造/ 工程/ ./ 网络/ 中/ 的/ 优化/ 理论/ 将/ 成为/ 网络系统/ 设计/ 的/ 基本/ 出发点/ ,/ 它/ 不仅/ 能够/ 严格/ 导出/ 网络/ 中/ 同一/ 层次/ 中/ 资源分配/ 和/ 任务调度/ 的/ 最优/ 决策/ ,/ 而且/ 能够/ 指导/ 网络/ 的/ 跨层/ 设计/ ./ 很多/ 网络/ 机制/ 基于/ 启发式/ 设计/ ,/ 尚待/ 改进/ ,/ 因此/ 需要/ 网络/ 优化/ 理论/ 的/ 支持/ ./ 不仅如此/ ,/ 网络/ 优化/ 理论/ 本身/ 也/ 存在/ 很多/ 难点/ ,/ 值得/ 关注/ ,/ 例如/ 分布式/ 优化/ 中/ 通信/ 信息/ 的/ 传输/ ,/ 基于/ 状态/ 的/ 动态/ 规划/ 状态/ 空间/ 的/ 化简/ 等/ ./ 在/ 实际/ 中/ ,/ 网络/ 中/ 各/ 节点/ 的/ 能量/ 和/ 资源/ 有限/ ,/ 也/ 亟需/ 找到/ 更/ 有效/ 的/ 优化/ 算法/ ./ 此外/ ,/ 对/ 优化/ 算法/ 的/ 评价/ 也/ 是/ 一个/ 挑战/ ,/ 尤其/ 是/ 诸如/ 适应性/ 之类/ 不易/ 被/ 量化/ 的/ 指标/ ./ 优化/ 算法/ 的/ 评价/ 结果/ 将/ 对/ 选择/ 具有/ 最优/ 折中/ 性能指标/ 的/ 算法/ 提供/ 参考/ ./ 

