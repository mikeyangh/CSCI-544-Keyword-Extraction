Page1/ 一种/ 基于/ 并行度/ 分析模型/ 的/ GPU/ 功耗/ 优化/ 技术/ 林一松/ 杨学军/ 唐滔/ 王桂彬/ 徐/ 新海/ (/ 国防科学技术大学/ 并行/ 与/ 分布/ 处理/ 国家/ 重点/ 实验室/ 长沙/ 410073/ )/ 摘要/ 随着/ 硬件/ 功能/ 的/ 不断丰富/ 和/ 软件开发/ 环境/ 的/ 逐渐/ 成熟/ ,/ GPU/ 开始/ 被/ 应用/ 于/ 通用/ 计算/ 领域/ ,/ 协助/ CPU/ 加速/ 程序/ 的/ 运行/ ./ 为了/ 追求/ 高性能/ ,/ GPU/ 往往/ 包含/ 成百上千/ 个/ 核心/ 运算/ 单元/ ./ 高密度/ 的/ 计算资源/ ,/ 使得/ 其/ 在/ 性能/ 远高于/ CPU/ 的/ 同时/ 功耗/ 也/ 高于/ CPU/ ./ 功耗/ 问题/ 已经/ 成为/ 制约/ GPU/ 发展/ 的/ 重要/ 问题/ 之一/ ./ DVFS/ 技术/ 被/ 广泛应用/ 于/ 处理器/ 的/ 低功耗/ 优化/ ,/ 而/ 对/ GPU/ 进行/ 相应/ 研究/ 的/ 前提/ 是/ 对/ 其/ 程序运行/ 过程/ 进行/ 分析/ 和/ 建模/ ,/ 从而/ 可以/ 根据/ 应用程序/ 的/ 特征/ 来/ 确定/ 优化/ 策略/ ./ 此外/ ,/ GPU/ 主要/ 由/ 图形/ 处理器/ 芯片/ 和/ 片外/ 的/ DRAM/ 组成/ ,/ 有/ 研究/ 指出/ 针对/ 这/ 类/ 系统/ 的/ 功耗/ 优化/ 应当/ 综合/ 考虑/ 处理器/ 和/ 存储器/ ,/ 使/ 二者/ 可以/ 互相/ 协调/ 以/ 达到/ 更好/ 的/ 优化/ 效果/ ./ 文中/ 在/ 一个/ 已有/ 的/ 基于/ 程序/ 并行度/ 分析/ 的/ GPU/ 性能/ 模型/ 的/ 基础/ 上/ ,/ 综合/ 考虑/ 计算/ 部件/ 与/ 存储/ 部件/ 的/ 功耗/ ,/ 建立/ 了/ 性能/ 约束条件/ 下/ 的/ GPU/ 功耗/ 优化/ 模型/ ./ 对于/ 给定/ 的/ 程序/ ,/ 在/ 满足/ 性能/ 约束/ 的/ 前提/ 下/ ,/ 以/ 功耗/ 最优/ 为/ 目标/ 分别/ 给出/ 处理器/ 和/ 存储器/ 的/ DVFS/ 优化/ 策略/ ./ 作者/ 选取/ 了/ 9/ 个/ 测试用例/ 在/ 3/ 种/ 模拟/ 平台/ 上/ 进行/ 了/ 实验/ 验证/ ,/ 结果表明/ 文中/ 的/ 方法/ 可以/ 在/ 满足/ 性能/ 约束条件/ 10/ %/ 的/ 误差/ 范围/ 内/ 获得/ 最优/ 的/ GPU/ 能量消耗/ ./ 关键词/ GPU/ ;/ 并行度/ 模型/ ;/ 功耗/ 模型/ ;/ 功耗/ 优化/ 1/ 引言/ 半导体/ 工艺/ 的/ 发展/ 使得/ 处理器/ 芯片/ 上/ 集成/ 的/ 晶体管/ 越来越/ 多/ ,/ 目前/ 已经/ 达到/ 10/ 亿/ 的/ 量级/ ./ 图形/ 处理器/ (/ GraphicsProcessingUnit/ ,/ GPU/ )/ 的/ 性能/ 也/ 因此/ 得到/ 了/ 飞速/ 的/ 提升/ ,/ 并且/ 远远/ 超过/ 了/ 通用/ CPU/ ./ 例如/ ,/ AMD/ 公司/ 推出/ 的/ FireStream9250GPU/ [/ 1/ ]/ 拥有/ 800/ 个/ 计算/ 核心/ ,/ 超过/ 1TFlop/ // s/ 的/ 峰值/ 计算/ 性能/ ,/ 而同/ 时期/ Intel/ 公司/ 的/ Core2Quad/ 处理器/ 仅能/ 达到/ 100GFlop/ // s/ ./ 随着/ 硬件/ 功能/ 的/ 逐渐/ 丰富/ 以及/ 软件/ 环境/ 的/ 日臻成熟/ ,/ GPU/ 被/ 越来越/ 多地/ 应用/ 到/ 非/ 图形/ 计算/ 领域/ [/ 2/ ]/ ./ 随着/ GPU/ 应用领域/ 的/ 拓展/ ,/ 其/ 功耗/ 问题/ 引起/ 了/ 人们/ 越来越/ 多/ 的/ 关注/ ./ 虽然/ 性能/ // 功耗/ 比/ 相对/ 较/ 高/ ,/ 但/ 其/ 远高于/ CPU/ 的/ 绝对/ 功耗/ 也/ 成为/ 了/ GPU/ 参与/ 通用/ 计算/ 特别/ 是/ 大规模/ 科学计算/ 不可/ 忽略/ 的/ 问题/ ./ 高功耗/ 不仅/ 使得/ 计算/ 的/ 成本增加/ ,/ 也/ 会/ 导致/ 芯片/ 的/ 可靠性/ 下降/ ,/ 这是/ 科学计算/ 不能容忍/ 的/ ./ 此外/ ,/ GPU/ 在/ 移动/ 设备/ 、/ 嵌入式/ 设备/ 上/ 广泛/ 的/ 应用/ 前景/ 也/ 对/ 其/ 低功耗/ 的/ 研究/ 提出/ 了/ 迫切/ 的/ 需求/ ./ 因此/ GPU/ 的/ 低功耗/ 优化/ 是/ 一个/ 亟待解决/ 的/ 问题/ ./ 目前/ 针对/ GPU/ 的/ 低功耗/ 研究/ 还/ 处于/ 起步/ 阶段/ ,/ 主要/ 原因/ 是/ 缺乏/ 对/ GPU/ 上/ 程序执行/ 过程/ 的/ 准确/ 分析/ ,/ 因而/ 难以/ 根据/ 程序/ 的/ 特征/ 有/ 针对性/ 地/ 对/ 电压/ // 频率/ 进行/ 调节/ ./ 现有/ 的/ GPU/ 支持/ 比较简单/ 的/ 功耗/ 优化/ ,/ 如/ 驱动程序/ 检测/ 到/ GPU/ 轻/ 负载/ 时/ 降低/ 其/ 频率/ ,/ 而/ 一旦/ 有/ 任务/ 执行/ 时则/ 恢复/ 工作频率/ ,/ 这种/ 优化/ 方式/ 获得/ 的/ 能效/ 比/ 显然/ 没有/ 程序/ 指导/ 下/ 的/ 优化/ 方法/ 高/ ./ 另一方面/ ,/ 传统/ 的/ 功耗/ 优化/ 技术/ 大多/ 针对/ 处理器/ ,/ 而/ 忽略/ 了/ 存储器/ ./ 有/ 研究者/ 指出/ ,/ 在/ 一个/ 包含/ 处理器/ 和/ 存储器/ 的/ 计算/ 系统/ 中/ ,/ 存储器/ 消耗/ 的/ 能量/ 不可/ 忽略/ ,/ 能量/ 的/ 优化/ 应/ 同时/ 考虑/ 处理器/ 和/ 存储器/ ,/ 其/ 效果/ 优于/ 只/ 针对/ 处理器/ 或/ 存储器/ 的/ 优化/ [/ 3/ ]/ ./ 现代/ 高性能/ GPU/ 中/ 除了/ 显示/ 芯片/ 外/ ,/ 往往/ 还/ 包含/ 一个/ 大容量/ 的/ 存储器/ ,/ 这/ 意味着/ 必须/ 将/ 存储器/ 的/ 功耗/ 纳入/ GPU/ 的/ 功耗/ 优化/ 范围/ 才能/ 取得/ 较/ 好/ 的/ 优化/ 效果/ ./ 针对/ 以上/ 问题/ ,/ 本文/ 对/ GPU/ 的/ 功耗/ 优化/ 展开/ 研究/ ,/ 综合/ 考虑/ GPU/ 上/ 的/ 处理器/ 与/ 存储器/ ,/ 研究/ 在/ 性能/ 模型/ 指导/ 下/ 的/ GPU/ 功耗/ 优化/ 方法/ ./ 为了/ 分析程序/ 的/ 行为/ 特征/ ,/ 同时/ 在/ 优化/ 功耗/ 的/ 同时/ 对/ 程序/ 性能/ 进行/ 一定/ 的/ 约束/ ,/ 我们/ 的/ 功耗/ 优化/ 方法/ 的/ 一个/ 重要/ 的/ 基础/ 是/ 对/ GPU/ 程序执行/ 过程/ 的/ 分析/ 和/ 程序/ 性能/ 的/ 建模/ ./ Hong/ 和/ Kim/ 在/ 2009/ 年/ 国际/ 体系结构/ 年会/ (/ ISCA/ ’/ 09/ )/ 上/ 提出/ 了/ 一种/ GPU/ 性能/ 解析/ 模型/ [/ 4/ ]/ ./ 该/ 模型/ 以/ NvidiaGPU/ 为/ 硬件平台/ ,/ CUDA/ [/ 5/ ]/ 为/ 编程/ 模型/ ,/ 提出/ 了/ 计算/ 并行度/ (/ ComputationWarpParallelism/ ,/ CWP/ )/ 和/ 存储/ 并行度/ (/ MemoryWarpParallelism/ ,/ MWP/ )/ 的/ 概念/ ,/ 并/ 以此/ 来/ 分析/ GPU/ 程序运行/ 过程/ 中/ 处理器/ 与/ 存储器/ 之间/ 的/ 关系/ ,/ 确定/ 出/ 性能/ 瓶颈/ ,/ 并/ 预测/ 程序执行/ 的/ 时间/ ./ 其/ 实验/ 结果表明/ ,/ 该/ 模型/ 可以/ 比较/ 准确/ 地/ 评估/ GPU/ 程序/ 的/ 运行/ 时间/ ,/ 因此/ 本文/ 以/ 这个/ 性能/ 模型/ 为/ 基础/ 来/ 指导/ GPU/ 低功耗/ 研究/ ./ 本文/ 的/ 主要/ 创新/ 点/ 在于/ :/ 首先/ ,/ 基于/ 文献/ [/ 4/ ]/ 分析/ 了/ 程序/ 的/ 计算/ 并行度/ 、/ 访存/ 并行度/ 与/ 处理器/ 、/ 存储器/ 频率/ 之间/ 的/ 关系/ ;/ 其次/ ,/ 根据/ 并行度/ 与/ 频率/ 的/ 关系/ 建立/ GPU/ 的/ 功耗/ 优化/ 模型/ 并/ 对模型/ 进行/ 求解/ ;/ 最后/ ,/ 对/ 9/ 个/ 科学计算/ 领域/ 常用/ 的/ 核心/ 函数/ 进行/ 了/ 测试/ ,/ 实验/ 结果表明/ :/ 理论/ 分析/ 给出/ 的/ 频率/ 调节/ 因子/ 可以/ 在/ 达到/ 性能/ 约束条件/ 的/ 10/ %/ 误差/ 以内/ ,/ 最小化/ GPU/ 的/ 能量消耗/ ,/ 因此/ 可以/ 有效/ 地/ 指导/ 应用程序/ 在/ GPU/ 上/ 的/ 低功耗/ 优化/ ./ 本文/ 第/ 2/ 节/ 分析/ 并/ 建立/ 功耗/ 优化/ 模型/ ;/ 第/ 3/ 节/ 对模型/ 进行/ 求解/ ;/ 第/ 4/ 节/ 给出/ 实验/ 评测/ ;/ 第/ 5/ 节/ 介绍/ 相关/ 工作/ ;/ 最后/ 总结/ 全文/ ./ 2/ 并行度/ 分析/ 指导/ 下/ 的/ GPU/ 功耗/ 优化/ 模型/ 2.1/ 基于/ 并行度/ 分析/ 的/ 性能/ 模型/ 一般来说/ ,/ 对/ 功耗/ 进行/ 优化/ 的/ 同时/ 需要/ 保证/ 一定/ 的/ 性能/ 约束/ ,/ 即/ 在/ 性能/ 损失/ 不/ 超过/ 某个/ 阈值/ 的/ 前提/ 下/ 尽可能/ 降低功耗/ ,/ 因此/ 需要/ 一个/ 性能/ 模型/ 对/ 程序/ 的/ 运行/ 时间/ 进行/ 分析/ 和/ 预测/ ./ 文献/ [/ 4/ ]/ 中/ 提出/ 的/ GPU/ 性能/ 模型/ 通过/ 定义/ CWP/ 和/ MWP/ 这/ 两个/ 参/ Page3/ 数来/ 分析/ GPU/ 程序/ 的/ 性能/ 瓶颈/ ,/ 并/ 据此/ 预测/ 程序/ 的/ 执行/ 时间/ ./ CWP/ 用于/ 表示/ 程序执行/ 时/ 计算/ 操作/ 的/ 并行度/ ,/ 主要/ 依赖于/ 程序/ 特征/ ;/ 而/ MWP/ 则/ 代表/ 了/ 访存/ 操作/ 的/ 并行度/ ,/ 更多地/ 依赖于/ 存储系统/ 的/ 性能/ ./ 该/ 模型/ 中/ 讨论/ 了/ CWP/ 和/ MWP/ 对/ 程序执行/ 时间/ 的/ 影响/ :/ 当/ 计算/ 并行度/ 高于/ 访存/ 并行度/ 时/ ,/ 访存/ 操作/ 成为/ 程序运行/ 的/ 瓶颈/ ,/ 程序/ 的/ 执行/ 时间/ 也/ 主要/ 由/ 访存/ 时间/ 决定/ ;/ 而/ 当访存/ 并行度/ 高于/ 计算/ 并行度/ 时/ ,/ 程序/ 的/ 计算/ 操作/ 没有/ 完全/ 利用/ 存储系统/ 提供/ 的/ 访存/ 带宽/ ,/ 成为/ 程序运行/ 的/ 瓶颈/ ,/ 因而/ 程序/ 的/ 执行/ 时间/ 主要/ 由/ 计算/ 时间/ 决定/ ./ 最后/ ,/ 当/ GPU/ 上/ 运行/ 的/ 计算/ 任务/ 太/ 少时/ ,/ 导致/ 访存/ 操作/ 的/ 延迟/ 无法/ 得到/ 有效/ 的/ 隐藏/ ,/ 程序/ 的/ 执行/ 时间/ 由/ 访存/ 和/ 计算/ 时间/ 之/ 和/ 决定/ ./ 我们/ 记该/ 性能/ 模型/ 为/ tk/ ,/ P/ 表示/ 程序/ k/ 在/ GPU/ 平台/ P/ 下/ 的/ 执行/ 时间/ ./ 我们/ 的/ 功耗/ 优化/ 方法/ 中/ 使用/ 该/ 性能/ 模型/ 作为/ 性能/ 约束/ 的/ 条件/ ,/ 因此/ 建立/ 功耗/ 优化/ 模型/ 时/ 首先/ 需要/ 分析/ CWP/ 、/ MWP/ 和/ 功耗/ 之间/ 的/ 关系/ ./ 2.2/ 并行度/ 与/ 功耗/ 优化/ 功耗/ 优化/ 通常/ 通过/ 动态/ 电压/ // 频率/ 调节/ (/ DynamicVoltage/ // FrequencyScaling/ ,/ DVFS/ )/ [/ 6/ ]/ 技术/ 实现/ ,/ 它/ 通过/ 在/ 一定/ 范围/ 内/ 降低/ 轻/ 负载/ 的/ 处理器/ 的/ 频率/ 以及/ 电压/ ,/ 使得/ 在/ 损失/ 部分/ 性能/ 甚至/ 不/ 影响/ 性能/ 的/ 情况/ 下/ 减少/ 能量/ 的/ 消耗/ ./ 电路/ 的/ 核心/ 电压/ V/ 和/ 其/ 工作频率/ f/ 一般/ 要/ 同时/ 调节/ 才能/ 保证/ 电路/ 正常/ 工作/ ,/ 它们/ 之间/ 满足/ f/ ∝/ (/ V/ -/ Vt/ )/ γ/ 一个/ 工艺/ 相关/ 的/ 参数/ ./ 通常/ 情况/ 下/ Vt/ 远/ 小于/ V/ 且/ γ/ ∈/ [/ 1/ ,/ 2/ ]/ ./ 本文/ 假定/ γ/ =/ 2/ ,/ 此时/ 频率/ f/ 和/ 电压/ V/ 近似/ 为/ 线性关系/ ./ 根据/ CMOS/ 电路/ 的/ 能量消耗/ 公式/ P/ =/ α/ CV2f/ (/ α/ 是/ 一个/ 与/ 工艺/ 相关/ 的/ 系数/ )/ ,/ 功耗/ P/ 可以/ 看成/ 和/ 频率/ f/ 的/ 立方/ 成正比/ ,/ 即/ P/ =/ Kf3/ ./ 因此/ 本文/ 的/ 功耗/ 优化/ 模型/ 仅/ 关注/ 频率/ 的/ 调节/ ./ 处理器/ 和/ 存储器/ 的/ 频率/ 对/ 其/ 性能/ 的/ 影响/ 方式/ 是/ 不同/ 的/ ./ 对于/ 处理器/ ,/ 频率/ 直接/ 决定/ 其/ 运行/ 性能/ ,/ 因此/ 可以/ 认为/ 其/ 运行/ 速度/ 和/ 频率/ 成正比/ ;/ 而/ 存储器/ 的/ 情形/ 则/ 比/ 处理器/ 要/ 复杂/ 一些/ ./ 我们/ 考察/ 存储器/ 的/ 3/ 个/ 性能参数/ Mem/ _/ L/ ,/ Departure/ _/ delay/ 和/ Mem/ _/ Bandwidth/ ,/ 其中/ Mem/ _/ L/ 表示/ 存储器/ 服务/ 一次/ 访存/ 请求/ 的/ 时间/ ,/ Departure/ _/ delay/ 是/ 指/ 连续/ 两次/ 访存/ 请求/ 之间/ 的/ 最小/ 时间/ 间隔/ ,/ Mem/ _/ Bandwidth/ 则/ 表示/ 存储/ 带宽/ ./ 现代/ DRAM/ 存储器/ 一般/ 由/ 存储阵列/ 和/ 存控/ 组成/ ,/ 其中/ 存储阵列/ 用于/ 存储/ 数据/ ,/ 存控/ 则/ 受/ 时钟/ 驱动/ ,/ 对外/ 提供数据/ 访问/ 接口/ ./ 存储阵列/ 本身/ 的/ 访问/ 延迟/ (/ 时间/ )/ 以及/ 相邻/ 两次/ 访问/ 的/ 间隔时间/ 一般/ 是/ 由/ 工艺/ 决定/ 的/ ,/ 不受/ 存控/ 频率/ 的/ 影响/ ./ 换言之/ ,/ 不同/ 的/ 存控/ 频率/ 对应/ 着/ 不同/ 的/ 延迟/ 周期/ 数/ ,/ 但/ 其/ 绝对/ 时间/ 是/ 基本一致/ 的/ ./ 因此/ 我们/ 的/ 模型/ 中/ 假定/ Mem/ _/ L/ 和/ Departure/ _/ delay/ 不/ 随着/ 存储器/ 的/ 频率/ 变化/ 而/ 变化/ ./ Mem/ _/ Bandwidth/ 的/ 情形/ 则/ 有所不同/ ./ 带宽/ 是/ 指/ 在/ 理想/ 状态/ 下/ 单位/ 时间/ 内存储器/ 可以/ 对外/ 提供/ 的/ 最大/ 数据量/ ,/ 这/ 受限于/ 单位/ 时间/ 内存/ 控/ 的/ 时钟/ 周期/ 数/ ,/ 因此/ 我们/ 认为/ Mem/ _/ Bandwidth/ 和/ 存储器/ 的/ 频率/ 成正比/ ./ 假定/ 处理器/ 和/ 存储器/ 的/ 原始/ 频率/ 分别/ 为/ fc/ 和/ fm/ ,/ 而/ 调节/ 后/ 变为/ fc/ =/ α/ cfc/ ,/ fm/ =/ α/ mfm/ ,/ 其中/ α/ c/ 和/ α/ m/ 为/ 调节/ 系数/ ./ 下面/ 我们/ 分别/ 给出/ CWP/ 、/ MWP/ 和/ α/ c/ 、/ α/ m/ 的/ 关系/ ./ CWP/ =/ minComp/ _/ cycles/ +/ Mem/ _/ cycles/ 其中/ Comp/ _/ cycles/ 指/ 的/ 是/ 每个/ warp/ 的/ 总/ 计算/ 周期/ ,/ 而/ Mem/ _/ cycles/ 则/ 表示/ 每个/ warp/ 的/ 总访存/ 等待/ 周期/ ,/ N/ 表示/ SM/ 内/ 活跃/ 的/ warp/ 个数/ ./ CWP/ 表示/ 在/ warp/ 的/ 一次/ 访存/ 等待时间/ 内/ 处理器/ 可以/ 计算/ 的/ warp/ 的/ 个数/ ./ 当/ SM/ 内/ 活跃/ 的/ warp/ 数/ 不够/ 时/ ,/ 处理器/ 无法/ 发挥/ 出/ 计算/ 并行性/ ,/ CWP/ 由/ N/ 决定/ ./ 式/ (/ 1/ )/ 中/ 第/ 1/ 项/ (/ 记为/ CWP/ [/ 1/ ]/ )/ 中/ 的/ 计算/ 周期/ 和/ 访存/ 周期/ 都/ 是/ 以/ 处理器/ 的/ 频率/ fc/ 为/ 参考/ 计量/ 的/ ,/ 因此/ 该式/ 上下/ 同/ 除以/ fc/ 即可/ 转化/ 为/ 以/ 绝对/ 时间/ 的/ 比值/ ,/ 即/ (/ 1/ )/ CWP/ ./ CWP/ 的/ 形式化/ 定义/ 为/ 根据/ 上面/ 的/ 分析/ ,/ 调整/ 频率/ 后/ ,/ 计算/ 时间/ 变为/ Comp/ _/ time/ // α/ c/ ,/ 而/ 访存/ 时间/ 不变/ ,/ 因此/ 第/ 1/ 项/ 变为/ CWP/ [/ 1/ ]/ =/ Comp/ _/ time/ // α/ c/ +/ Mem/ _/ time/ 式/ (/ 1/ )/ 中/ 第/ 2/ 项为/ SM/ 上/ 活跃/ 的/ warp/ 数/ ,/ 与/ 频率/ 无关/ ,/ 因此/ 有/ (/ 2/ )/ MWP/ ./ MWP/ 的/ 形式化/ 定义/ 为/ MWP/ =/ minMem/ _/ LFreq/ ×/ Loads/ _/ bytes/ _/ per/ _/ warp/ ×/ #/ ActiveSM/ ,/ )/ N/ 其中/ ,/ Mem/ _/ L/ 和/ Departure/ _/ delay/ 分别/ 指/ warp/ 的/ Page4/ 一次/ 访存/ 等待/ 周期/ 的/ 长度/ 和/ 连续/ 两次/ 访存/ 请求/ 之间/ 的/ 最小/ 时间/ 间隔/ ;/ Mem/ _/ Bandwidth/ 指/ 存储器/ 的/ 带宽/ ;/ Loads/ _/ bytes/ _/ per/ _/ warp/ 指/ warp/ 的/ 每次/ 访存/ 包含/ 的/ 字节数/ ;/ Freq/ 为/ 处理器/ 的/ 频率/ ;/ #/ ActiveSM/ 则/ 是/ 指/ GPU/ 内/ 活跃/ 的/ SM/ 的/ 个数/ ,/ N/ 表示/ SM/ 内/ 活跃/ 的/ warp/ 个数/ ./ 注意/ 到/ 这里/ 的/ 访存/ 延迟/ 和/ 时间/ 间隔/ 都/ 是/ 以/ 处理器/ 频率/ 为/ 参考/ 的/ 时钟/ 周期/ 数而非/ 绝对/ 时间/ ./ 此外/ ,/ 和/ CWP/ 一样/ ,/ warp/ 数/ 不足/ 时/ MWP/ 也/ 由/ N/ 决定/ ./ 注意/ 到/ 前面/ 分析/ 存储器/ 频率/ 与其/ 性能/ 的/ 关系/ 时/ ,/ 提到/ 的/ Mem/ _/ L/ 和/ Departure/ _/ delay/ 是从/ 存储器/ 角度看/ 一次/ 访存/ 的/ 时间/ 和/ 相邻/ 两次/ 访存/ 的/ 间隔/ ,/ 属于/ 硬件/ 固有特征/ ,/ 而/ 这里/ 使用/ 的/ Mem/ _/ L/ 和/ Departure/ _/ delay/ 是/ 指/ 一个/ warp/ (/ 32/ 个/ 线程/ )/ 的/ 一次/ 访存/ 时间/ 和/ 相邻/ 两个/ warp/ 访存/ 之间/ 的/ 最小/ 间隔/ ,/ 这/ 和/ warp/ 内线/ 程/ 的/ 访存/ 方式/ 有关/ ,/ 由/ 程序/ 和/ 硬件/ 共同/ 决定/ ./ 但是/ 调整/ 存储器/ 频率/ 并/ 不/ 改变程序/ 的/ 行为/ ,/ 因此/ 后者/ 依然/ 不/ 随着/ 频率/ 变化/ 而/ 变化/ ./ 即/ 调整/ 存储器/ 频率/ 后/ ,/ 式/ (/ 3/ )/ 中/ 的/ 第/ 1/ 项/ (/ 记为/ MWP/ [/ 1/ ]/ )/ 保持/ 不变/ ./ 对于/ 第/ 2/ 项/ (/ 记为/ MWP/ [/ 2/ ]/ )/ ,/ 由于/ Mem/ _/ L/ 是/ 以/ 处理器/ 的/ 频率/ Freq/ 为/ 参考/ 计算/ 的/ 时钟/ 周期/ 数/ ,/ 因此/ Mem/ _/ L/ // Freq/ 即为/ 存储器/ 处理/ warp/ 的/ 一次/ 访存/ 请求/ 的/ 时间/ ,/ 根据/ 上面/ 的/ 分析/ ,/ 该/ 时间/ 不/ 随着/ 频率/ 变化/ 而/ 变化/ ./ 第/ 2/ 项中/ 只有/ Mem/ _/ Bandwidth/ 会/ 随着/ 存储器/ 的/ 频率/ 发生变化/ ,/ 即/ MWP/ [/ 2/ ]/ =/ α/ m/ ×/ Freq/ ×/ Loads/ _/ bytes/ _/ per/ _/ warp/ ×/ #/ ActiveSM/ =/ α/ mMWP/ [/ 2/ ]/ ./ 式/ (/ 3/ )/ 中/ 第/ 3/ 项为/ SM/ 上/ 活跃/ 的/ warp/ 数/ ,/ 与/ 频率/ 无关/ ,/ 因此/ 有/ MWP/ =/ min/ (/ MWP/ [/ 1/ ]/ ,/ α/ mMWP/ [/ 2/ ]/ ,/ N/ )/ (/ 4/ )/ 2.3/ 功耗/ 优化/ 模型/ 通过/ 2.2/ 节/ 的/ 分析/ ,/ 我们/ 得出/ 了/ 调节/ 处理器/ 和/ 存储器/ 频率/ 对/ CWP/ 和/ MWP/ 产生/ 的/ 影响/ ,/ 为/ 描述/ 方便/ ,/ 我们/ 将/ 这个/ 关系/ 记为/ CWP/ =/ gc/ (/ CWP/ ,/ α/ c/ )/ ,/ MWP/ =/ gm/ (/ MWP/ ,/ α/ m/ )/ ,/ 其中/ α/ c/ 和/ α/ m/ 分别/ 表示/ 处理器/ 和/ 存储器/ 的/ 频率/ 调节/ 系数/ ./ 至此/ ,/ 我们/ 可以/ 在/ 性能/ 模型/ 的/ 基础/ 上/ 对/ 功耗/ 优化/ 问题/ 进行/ 建模/ ./ 假定/ fc/ 和/ fm/ 分别/ 表示/ GPU/ 中/ 处理器/ 和/ 存储器/ 的/ 原始/ 频率/ ,/ warp/ 的/ 一次/ 计算/ 周期/ 给/ 处理器/ 带来/ 的/ 能量消耗/ 为/ Ec/ =/ Kcf3c/ ,/ 一次/ 访存/ 周期/ 给/ 存储器/ 带来/ 的/ 能量消耗/ 为/ Em/ =/ Kmf3m/ ,/ 其中/ Kc/ 和/ Km/ 分别/ 为/ GPU/ 处理器/ 和/ 存储器/ 相关/ 的/ 常数/ ,/ 功耗/ 优化/ 允许/ 的/ 性能/ 损失/ 因子/ 为/ β/ (/ β/ / 1/ )/ ,/ 基于/ 并行度/ 分析/ 的/ GPU/ 功耗/ 优化/ 问题/ 可以/ 归结为/ 如下/ 规划/ 问题/ :/ minE/ =/ Kcf3c/ +/ Kmf3m/ 烄/ s/ ./ t/ ./ fc/ =/ α/ cfc/ ,/ fm/ =/ α/ mfmCWP/ =/ gc/ (/ CWP/ ,/ α/ c/ )/ 烅/ MWP/ =/ gm/ (/ MWP/ ,/ α/ m/ )/ Γ/ (/ CWP/ ,/ MWP/ )/ / β/ Γ/ (/ CWP/ ,/ MWP/ 烆/ 3/ 功耗/ 优化/ 模型/ 求解/ 本/ 节/ 讨论/ 上述/ 功耗/ 优化/ 问题/ 的/ 求解/ ./ 绝大部分/ 情况/ 下/ ,/ SM/ 上/ 活跃/ 的/ warp/ 数都/ 远大于/ CWP/ 和/ MWP/ ,/ 这/ 也/ 是/ GPU/ 可以/ 发挥/ 出/ 高性能/ 的/ 基础/ ,/ 因此/ 我们/ 的/ 求解/ 重点/ 关注/ 这种/ 情况/ ./ warp/ 数/ 不足/ 的/ 情形/ 最后/ 进行/ 单独/ 讨论/ ./ 此外/ ,/ 为了/ 简化/ 求解/ 过程/ ,/ 我们/ 首先/ 假定/ 处理器/ 和/ 存储器/ 的/ 频率/ 都/ 是/ 连续/ 可调/ 的/ ,/ 然后/ 再/ 考虑/ 解/ 空间/ 的/ 离散/ 化/ ./ 定理/ 1/ ./ 满足/ 性能/ 约束/ ,/ 且/ 能量最优/ 时/ 的/ CWP/ 和/ MWP/ 满足/ 关系/ CWP/ =/ MWP/ +/ 1/ ./ 证明/ ./ 用/ 反证法/ ./ 假定/ 满足/ 性能/ 约束/ 且/ 能量最优/ 时/ CWP/ ≠/ MWP/ +/ 1/ ,/ 分/ 以下/ 两种/ 情况/ 讨论/ :/ (/ 1/ )/ CWP/ </ MWP/ +/ 1/ ./ 根据/ 式/ (/ 1/ )/ 可知/ ,/ CWP/ =/ 1/ +/ Mem/ _/ p/ // Comp/ _/ p/ ./ 其中/ Mem/ _/ p/ 和/ Comp/ _/ p/ 分别/ 表示/ warp/ 的/ 一次/ 访存/ 和/ 一次/ 计算/ 的/ 周期/ ./ 根据/ 假设/ 条件/ 有/ ,/ Mem/ _/ p/ // Comp/ _/ p/ </ MWP/ ./ MWP/ 表示/ 在/ Mem/ _/ p/ 的/ 时间/ 内/ SM/ 上/ 最/ 多/ 可以/ 同时/ 访问/ 存储器/ 的/ warp/ 个数/ ,/ 可以/ 理解/ 为/ 存储器/ 向/ SM/ 提供/ 的/ “/ 访存/ 通道/ ”/ 的/ 个数/ ./ 而/ Mem/ _/ p/ // Comp/ _/ p/ 代表/ 了/ 在/ Mem/ _/ p/ 时间/ 内/ SM/ 流出/ 的/ 计算/ warp/ 的/ 个数/ ./ 如图/ 1/ 中/ 所示/ ,/ 除了/ 1/ 号/ warp/ 的/ 访存/ 请求/ 外/ ,/ 存储器/ 在/ Mem/ _/ p/ 时间/ 内/ 最/ 多/ 还/ 可以/ 服务/ MWP/ -/ 1/ 个/ 访存/ warp/ ,/ 而/ 在/ 这/ 段时间/ 内/ ,/ 只有/ Mem/ _/ p/ // Comp/ _/ p/ -/ 1/ 个/ warp/ 需要/ 使用/ 这/ MWP/ -/ 1/ 个/ “/ 访存/ 通道/ ”/ ,/ 因为/ 最后/ 一个/ 计算/ warp/ (/ n/ 号/ warp/ )/ 完成/ 时/ ,/ 1/ 号/ warp/ 的/ 存储/ 访问/ 已经/ 完成/ ,/ 其空出/ 的/ “/ 访存/ 通道/ ”/ 可以/ 供/ n/ 号/ warp/ 使用/ ./ 因此/ Mem/ _/ p/ // Comp/ _/ p/ </ MWP/ 意味着/ 存储器/ 提供/ 的/ 访存/ 并行性/ 没有/ 被/ 充分利用/ ,/ 此时/ 程序/ 的/ 性能/ 瓶颈/ 在于/ 计算/ ,/ 程序运行/ 的/ 总/ 时间/ 也/ 就/ 近似/ 等于/ 程序/ 的/ 总/ 计算/ 时间/ ./ 文献/ [/ 4/ ]/ 中/ 给出/ 在/ 这/ 一/ 情况/ 下/ 程序/ 的/ 总/ 执行/ 周期/ 为/ Exec/ _/ cycles/ =/ Mem/ _/ p/ +/ Comp/ _/ cycles/ ×/ N/ (/ 5/ )/ 其中/ ,/ Mem/ _/ p/ 表示/ warp/ 的/ 一次/ 访存/ 等待/ 周期/ (/ 等于/ Mem/ _/ L/ )/ ,/ Comp/ _/ cycles/ 则/ 指/ 每个/ warp/ 的/ 总/ 计算/ Page5/ 周期/ ./ 从/ 该式/ 也/ 可以/ 看出/ ,/ 程序/ 的/ 总/ 执行/ 时间/ 主要/ 取决于/ 计算/ 时间/ ./ 图/ 1/ 中/ 给出/ 了/ 当/ MWP/ =/ n/ -/ 1/ 而/ CWP/ </ n/ 时/ 的/ 情况/ ,/ 存储器/ 在/ 1/ 号/ warp/ 的/ 访存/ 操作/ 结束/ 后/ 到/ n/ 号/ warp/ 的/ 计算/ 操作/ 结束/ 之前/ 存在/ 一段/ 空隙/ ./ 这种/ 情况/ 下/ ,/ 由式/ (/ 4/ )/ 可知/ ,/ 通过/ 适当/ 降低/ 存储器/ 的/ 频率/ 以/ 降低/ 访/ 存储/ 并行性/ ,/ 从而/ 更好/ 地/ 匹配/ 计算/ 性能/ ,/ 可以/ 在/ 不/ 影响/ 性能/ 约束条件/ 的/ 情况/ 下/ 减少/ 能耗/ ,/ 即/ 此时/ 能量/ 不是/ 最优/ 的/ ./ 图/ 1MWP/ =/ n/ -/ 1/ ,/ CWP/ </ n/ 时/ warp/ 运行/ 时空图/ (/ 2/ )/ CWP/ >/ MWP/ +/ 1/ ./ 和/ 第/ 1/ 种/ 情况/ 类似/ ,/ Mem/ _/ p/ // Comp/ _/ p/ >/ MWP/ 意味着/ 存储器/ 提供/ 的/ 访存/ 并行性/ 不足以/ 满足/ Mem/ _/ p/ 的/ 时间/ 内/ SM/ 内/ 流出/ 的/ 计算/ warp/ 的/ 访存/ 需求/ ./ 此时/ 程序/ 的/ 性能/ 瓶颈/ 在于/ 访存/ ,/ 程序/ 总/ 时间/ 近似/ 等于/ 访存/ 所/ 占/ 的/ 时间/ ./ 文献/ [/ 4/ ]/ 中/ 给出/ 在/ 这/ 一/ 情况/ 下/ 的/ 程序执行/ 时间/ 为/ Exec/ _/ cycles/ =/ Mem/ _/ cycles/ ×/ N/ 其中/ ,/ Mem/ _/ p/ 表示/ 每个/ warp/ 的/ 总访存/ 等待/ 周期/ ,/ N/ 为/ SM/ 内/ 活跃/ 的/ warp/ 的/ 个数/ ,/ Comp/ _/ p/ 则/ 代表/ warp/ 的/ 一次/ 计算/ 周期/ ./ 从/ 该式/ 也/ 可以/ 看出/ ,/ 当/ N/ 足够/ 大时/ ,/ 总/ 执行/ 周期/ 主要/ 由/ 访存/ 周期/ 决定/ ./ 因此/ 由式/ (/ 2/ )/ 可知/ ,/ 通过/ 适当/ 降低/ 处理器/ 的/ 频率/ 以/ 降低/ 计算/ 并行性/ ,/ 更好/ 地/ 匹配/ 存储/ 性能/ ,/ 同样/ 可以/ 在/ 不/ 影响/ 性能/ 约束条件/ 的/ 情况/ 下/ 减少/ 能耗/ ./ 综上/ ,/ 能量最优/ 时/ 必然/ 有/ CWP/ =/ MWP/ +/ 1/ ,/ 定理/ 1/ 得证/ ./ 此外/ ,/ 通过/ 定理/ 证明/ 过程/ 可知/ ,/ CWP/ =/ MWP/ +/ 1/ 时/ 程序/ 的/ 计算/ 和/ 访存/ 时间/ 完美/ 重叠/ ,/ 计算/ 并行性/ 和/ 访存/ 并行性/ 都/ 得到/ 充分发挥/ ,/ 程序/ 的/ 总/ 运行/ 时间/ 也/ 近似/ 等于/ 计算/ 时间/ 或/ 访存/ 时间/ ./ 证毕/ ./ 推论/ 1/ ./ 满足/ 性能/ 约束/ T/ 且/ 能量最优/ 时/ ,/ 程序运行/ 的/ 总/ 时间/ 一定/ 是/ T/ ./ 证明/ ./ 用/ 反证法/ ./ 假设/ 此时/ 程序运行/ 总/ 时间/ t/ </ T/ ./ 由/ 定理/ 1/ 可知/ ,/ 此时/ CWP/ =/ MWP/ +/ 1/ ,/ 程序运行/ 的/ 总/ 时间/ 近似/ 等于/ warp/ 的/ 计算/ 总/ 时间/ Tc/ ,/ 因此/ Tc/ </ T/ ./ 显然/ ,/ 此时/ 可以/ 通过/ 降低/ 处理器/ 的/ 频率/ 使得/ 计算/ 时间/ 延长/ 至/ T/ ./ 降低/ 处理器/ 频率/ 会/ 导致/ CWP/ </ MWP/ +/ 1/ ,/ 因此/ ,/ 可以/ 进一步/ 降低/ 存储器/ 的/ 频率/ 以/ 减小/ MWP/ ,/ 使得/ CWP/ =/ MWP/ +/ 1/ ,/ 而/ 总/ 运行/ 时间/ 仍然/ 为/ T/ ./ 注意/ 到/ 我们/ 的/ 优化/ 目标/ 为/ E/ =/ Ec/ +/ Em/ ,/ 即/ E/ =/ Pctc/ +/ Pmtm/ ./ 其中/ Pc/ 和/ Pm/ 表示/ 处理器/ 和/ 存储器/ 的/ 功率/ ,/ tc/ 和/ tm/ 则/ 表示/ warp/ 的/ 一个/ 计算/ 周期/ 和/ 一个/ 访存/ 周期/ 的/ 时间/ 长度/ ./ 根据/ 2.2/ 节中/ 的/ 分析/ ,/ tc/ ∝/ f/ -/ 1c/ ,/ tm/ 则/ 与/ fm/ 无关/ ,/ 另外/ P/ ∝/ f3/ ,/ 因此/ 我们/ 有/ E/ =/ kcf2c/ +/ kmf3m/ ./ 这/ 意味着/ 我们/ 同时/ 降低/ 了/ 处理器/ 和/ 存储器/ 的/ 频率/ 一定/ 可以/ 减少/ 能量/ 的/ 消耗/ ,/ 即/ t/ </ T/ 时/ 的/ 能量/ 不是/ 最优/ 的/ ./ CWP/ =/ MWP/ +/ 1/ ,/ 代入/ 式/ (/ 2/ )/ 和/ (/ 4/ )/ ,/ 有/ 1/ +/ α/ c/ (/ CWP/ [/ 1/ ]/ -/ 1/ )/ =/ 若/ MWP/ [/ 1/ ]/ / α/ mMWP/ [/ 2/ ]/ ,/ 我们/ 可以/ 得出/ 由/ 定理/ 1/ ,/ 我们/ 可知/ 为/ 达到/ 功耗/ 最优/ ,/ 必须/ 有/ 否则/ ,/ 有/ 但/ 不论/ 哪/ 种/ 情况/ ,/ 此时/ 访存/ 和/ 计算/ 的/ 时间/ 都/ 完美/ 重叠/ ,/ 程序运行/ 的/ 总/ 时间/ 近似/ 等于/ 计算/ 时间/ 或/ 访存/ 时间/ ./ 即/ 其中/ Comp/ _/ time/ 表示/ 调节/ 频率/ 后/ 一个/ warp/ 的/ 总/ 计算/ 时间/ ./ 由/ 推论/ 1/ ,/ 可知/ 其中/ t/ 为/ 初始条件/ 下/ 程序/ 的/ 运行/ 时间/ ./ 由/ 定理/ 1/ 的/ 证明/ 过程/ 以及/ 式/ (/ 5/ )/ 、/ (/ 6/ )/ 可知/ t/ ≈/ 因此/ ,/ 我们/ 得到/ Comp/ _/ time/ ×/ N/ =/ Comp/ _/ time/ 烄/ =/ 烅/ 烆/ 即/ α/ c/ =/ α/ m/ 的/ 解/ ./ 联/ 立式/ (/ 7/ )/ 、/ (/ 9/ )/ 或式/ (/ 8/ )/ 、/ (/ 9/ )/ 就/ 可以/ 得到/ α/ c/ 和/ 式/ (/ 7/ )/ 、/ (/ 9/ )/ 联立/ 后/ ,/ 只有/ 在/ 极端/ 特殊/ 的/ 条件/ 下才/ Page6/ 有解/ ./ 因为/ 调节/ 后/ 程序运行/ 时间/ 也/ 近似/ 等于/ 访存/ 时间/ ,/ 即/ Mem/ _/ time/ 为/ 调整/ 频率/ 后/ 一个/ warp/ 的/ 总访存/ 时间/ ,/ 根据/ 2.2/ 节/ 的/ 分析/ ,/ Mem/ _/ time/ =/ Mem/ _/ time/ ./ 而/ 此时/ 由于/ MWP/ [/ 1/ ]/ </ α/ mMWP/ [/ 2/ ]/ ,/ 由式/ (/ 4/ )/ 知/ MWP/ =/ MWP/ [/ 1/ ]/ ./ 因此/ Mem/ _/ time/ ×/ N/ 即/ Mem/ _/ time/ ×/ NMWP/ [/ 1/ ]/ =/ 烄/ 烅/ 烆/ 我们/ 得到/ β/ =/ 当/ CWP/ </ MWP/ +/ 1/ 时/ ,/ 有/ CWP/ [/ 1/ ]/ -/ 1MWP/ 的/ 定义/ 也/ 有/ MWP/ 约束/ 中/ β/ / 1/ ./ 因此/ 在/ 式/ (/ 7/ )/ 、/ (/ 9/ )/ 联/ 立时/ ,/ 只有/ 当/ 性能/ 约束条件/ 改为/ β/ =/ 1/ 时才/ 有解/ ,/ 并且/ 此时/ 原始/ 程序/ 必须/ 满足/ MWP/ =/ MWP/ [/ 1/ ]/ 以及/ CWP/ / MWP/ +/ 1/ ./ 此时/ 根据/ 式/ (/ 7/ )/ 得到/ 式/ (/ 8/ )/ 、/ (/ 9/ )/ 联/ 立时/ ,/ 我们/ 可以/ 直接/ 求/ 出/ α/ m/ 的/ 值/ ./ 为/ 达到/ 能量最优/ ,/ α/ m/ 取下/ 确界/ ./ α/ m/ =/ α/ c/ (/ CWP/ [/ 1/ ]/ -/ 1/ )/ 不难/ 发现/ ,/ 式/ (/ 7/ )/ 、/ (/ 9/ )/ 联立/ 的/ 解是/ 式/ (/ 8/ )/ 、/ (/ 9/ )/ 联立/ 解在/ 某些/ 特殊/ 条件/ 下/ 的/ 一个/ 特解/ ./ 至此/ ,/ 式/ (/ 9/ )/ 和/ (/ 10/ )/ 给出/ 在/ warp/ 数/ 足够/ 时/ ,/ 满足/ 性能/ 约束/ 且/ 达到/ 最优/ 能量消耗/ 时/ ,/ 处理器/ 和/ 存储器/ 的/ 频率/ 调节/ 系数/ ./ 以上/ 的/ 解是/ 在/ 处理器/ 和/ 存储器/ 的/ 频率/ 连续/ 可调/ 的/ 前提/ 下/ 得出/ 的/ ,/ 而/ 在/ 实际/ 中/ ,/ 处理器/ 和/ 存储器/ 都/ 只/ 提供/ 若干个/ 离散/ 的/ 频率/ 值以/ 供/ 调节/ ,/ 因此/ 最后/ 要/ 进行/ 解/ 空间/ 的/ 离散/ 化/ ./ 根据/ 推论/ 1/ ,/ 能量最优/ 时/ ,/ 程序/ 的/ 运行/ 时间/ 已经/ 达到/ 约束条件/ 的/ 上界/ ,/ 且/ 运行/ 时间/ 近似/ 等于/ 总/ 计算/ 时间/ 或/ 总访存/ 时间/ ./ 这/ 意味着/ ,/ 此时/ 处理器/ 和/ 存储器/ 的/ 频率/ 都/ 达到/ 了/ 满足/ 性能/ 约束条件/ 时/ 的/ 下界/ ./ 因此/ 为了/ 满足/ 性能/ 约束条件/ ,/ 只能/ 在/ 离散/ 的/ 频率/ 值中/ 选择/ 不/ 小于/ 理论/ 解/ 的/ 最小/ 频率/ 值/ ./ 最后/ 我们/ 考虑/ warp/ 数/ 不足/ 时/ 的/ 情况/ ./ 由于/ 这种/ 情况/ 出现/ 很少/ ,/ GPU/ 运行/ 效率/ 极低/ ,/ 使用/ GPU/ 对/ 应用/ 进行/ 加速/ 没有/ 实际意义/ ,/ 因此/ 这里/ 对模型/ 进行/ 一定/ 的/ 简化/ ./ 假定/ 对于/ 给定/ 的/ 程序/ k/ ,/ 在/ 处理器/ 和/ 存储器/ 允许/ 的/ 频率/ 范围/ 内/ 都/ 有/ CWP/ =/ MWP/ =/ N/ ,/ 即/ 在/ 任意/ 的/ 频率/ 下/ ,/ warp/ 数/ 始终/ 不足/ ,/ 此时/ CWP/ 和/ MWP/ 都/ 受限于/ warp/ 数/ ./ 文献/ [/ 4/ ]/ 给出/ 的/ 在/ 这/ 一/ 情况/ 下/ 程序/ 的/ 总/ 执行/ 周期/ 为/ Exec/ _/ cycles/ =/ Mem/ _/ cycles/ +/ Comp/ _/ cycles/ +/ 从式/ (/ 11/ )/ 可以/ 看出/ ,/ 此时/ 程序/ 的/ 总/ 时间/ 近似/ 等于/ 一个/ warp/ 的/ 总/ 计算/ 时间/ 和/ 总访存/ 时间/ 之/ 和/ ./ 根据/ 2.2/ 节/ 的/ 分析/ 可知/ ,/ 计算/ 时间/ 和/ 处理器/ 的/ 频率/ 成反比/ ,/ 而/ 访存/ 时间/ 不/ 受/ 存储器/ 频率/ 的/ 影响/ ./ 因此/ 有/ Γ/ (/ k/ ,/ α/ cfc/ ,/ α/ mfm/ )/ ≈/ Comp/ _/ time/ +/ Mem/ _/ time/ 从/ 推论/ 1/ 的/ 证明/ 过程/ 中/ 我们/ 不难/ 得出/ ,/ 即便/ warp/ 数/ 不足/ 时/ ,/ 推论/ 1/ 仍然/ 成立/ ,/ 即/ 能量最优/ 时/ 程序运行/ 的/ 总/ 时间/ 一定/ 为/ 性能/ 约束/ 的/ 上限/ ./ 因此/ 有/ Comp/ _/ time/ 我们/ 可以/ 得到/ warp/ 数/ 不足/ 时/ 处理器/ 的/ 频率/ 调节/ 系数/ α/ c/ =/ Comp/ _/ time/ 而/ 此时/ 为/ 达到/ 能量最优/ ,/ 存储器/ 的/ 频率/ 应当/ 降/ 至/ 硬件/ 允许/ 的/ 最低值/ ./ 4/ 实验/ 为了/ 验证/ 本文/ 提出/ 的/ GPU/ 功耗/ 优化/ 模型/ 的/ 有效性/ ,/ 我们/ 基于/ 课题组/ 先前/ 开发/ 的/ 一款/ GPU/ 功耗/ 模拟器/ 进行/ 了/ 一系列/ 测试/ ./ 本文/ 采用/ 的/ 9/ 个/ 测试用例/ 来自/ NVIDIACUDASoftwareDevelopmentKitPage7/ 核心/ 函数/ / bitonicblackscholes2000000fwtBatch1matrixmulRandomGPU4096/ ×/ 5860scalarProdscan/ _/ bestdwtHaar1Dtranspose256128512256128256512512256/ (/ CUDASDK/ )/ 2.2/ ./ 1/ ,/ 它们/ 都/ 是/ 科学计算/ 领域/ 中/ 常见/ 的/ 核心/ 函数/ ./ 表/ 1/ 列出/ 了/ 各/ 计算/ 核心/ 函数/ 的/ 相关/ 参数/ ./ 其中/ #/ thread/ 表示/ 每个/ block/ 内/ 包含/ 的/ 线程/ 表/ 1Kernel/ 程序/ 说明/ 注/ :/ / fwtBatch1/ 来自/ fastwalshtransform/ ,/ RandomGPU/ 来自/ MersenneTwister/ ,/ scan/ _/ best/ 来自/ scan/ ./ 4.1/ 节将/ 简要/ 介绍/ 实验/ 使用/ 的/ GPU/ 功耗/ 模拟器/ ,/ 4.2/ 节/ 给出/ 实验/ 结果/ 和/ 分析/ ./ 4.1/ 实验/ 平台/ 由于/ 现有/ 的/ GPU/ 对/ 电压/ // 频率/ 的/ 动态/ 调节/ 支持/ 不够/ 完善/ ,/ 可调/ 的/ 档位/ 也/ 很少/ ,/ 不利于/ 进行/ GPU/ 低功耗/ 优化/ 的/ 理论/ 研究/ 和/ 验证/ ,/ 因此/ 本文/ 采用/ GPU/ 功耗/ 模拟器/ 进行/ 实验/ 验证/ ./ 本文/ 采用/ 的/ GPU/ 功耗/ 模拟器/ 是/ 课题组/ 在/ GPU/ 性能/ 模拟器/ GPGPU/ -/ Sim/ [/ 7/ ]/ 的/ 基础/ 上/ ,/ 结合/ Wattch/ [/ 8/ ]/ 功耗/ 模型/ 进行/ 开发/ 的/ ./ GPGPU/ -/ Sim/ 是/ 由/ BritishColumbia/ 大学/ 设计/ 的/ 时钟/ 精确/ 的/ GPU/ 性能/ 模拟器/ ,/ 它/ 支持/ CUDA/ 和/ OpenCL/ 编程/ 模型/ ,/ 主要/ 模拟/ 现代/ GPU/ 上非/ 图形/ 类/ 应用/ 的/ 运行/ ./ GPGPU/ -/ Sim/ 将/ GPU/ 划分/ 为/ 5/ 个/ 主要/ 模块/ :/ ShaderCores/ 、/ InterconnectionNetwork/ 、/ L2cache/ 、/ DRAM/ 以及/ MemoryController/ ./ 整个/ GPU/ 被/ 划分/ 为/ 4/ 个/ 独立/ 的/ 时钟/ 域/ :/ Core/ 、/ 片上/ 互连/ 网络/ 、/ Dram/ 和/ L2cache/ 时钟/ 域/ ,/ 每个/ 域/ 都/ 按照/ 时钟/ 步进/ 的/ 方式/ 独立/ 驱动/ 模拟/ ./ Wattch/ 是/ 低功耗/ 研究/ 领域/ 广泛/ 使用/ 的/ 功耗/ 模拟器/ 之一/ ,/ 它/ 使用/ 一组/ 参数/ 化/ 的/ 解析/ 模型/ 来/ 计算/ 处理器/ 中/ 不同/ 种类/ 部件/ 的/ 功耗/ ./ 它/ 将/ 部件/ 分为/ 4/ 类/ :/ 阵列/ 结构/ 、/ 全/ 相联/ CAM/ 结构/ 、/ 组合/ 逻辑/ 、/ 总线结构/ 和/ 时钟/ ,/ 并/ 分别/ 给出/ 它们/ 的/ 功耗/ 模型/ ./ Wattch/ 预先/ 计算/ 好/ 处理器/ 中/ 各种/ 部件/ 的/ 单位/ 活动/ 功耗/ ,/ 并/ 在/ 时钟/ 精确/ 的/ 性能/ 模拟器/ 中/ 通过/ 监视/ 每个/ 时钟/ 周期/ 内部/ 件/ 表/ 2GPU/ 模拟器/ 参数设置/ MemorySizeQuadroFX5600161/ ./ 356001.61/ ./ 5GB76/ ./ 842010GeForce8800GT141/ ./ 506001.8512/ MB57/ ./ 642010GeForceGTX280301/ ./ 306021.11/ GB141/ ./ 745040/ 数/ ,/ #/ Compinst/ 和/ #/ Meminst/ 表示/ 每个/ 线程/ 内/ 的/ 计算/ 指令/ 和/ 访存/ 指令/ 的/ 数目/ ,/ Arith/ ./ Int/ ./ 表示/ 计算/ 指令/ 密度/ (/ #/ Compinst/ // #/ Meminst/ )/ ./ 的/ 活动/ 情况/ 来/ 累计/ 整个/ 处理器/ 的/ 功耗/ ./ 我们/ 在/ GPGPU/ -/ Sim/ 模拟器/ 中/ 加入/ 了/ Wattch/ 功耗/ 模型/ ,/ 对/ GPU/ 中/ 的/ ShaderCores/ 、/ L2cache/ 以及/ MemoryController/ 等/ 部件/ 进行/ 功耗/ 建模/ ;/ 对于/ InterconnectionNetwork/ ,/ 我们/ 借鉴/ 了/ PowerRed/ [/ 9/ ]/ 中/ 使用/ 的/ 功耗/ 建模/ 方法/ ;/ 对于/ DRAM/ ,/ 我们/ 则/ 借鉴/ 了/ 文献/ [/ 10/ ]/ 中/ 的/ 方法/ 进行/ 建模/ ./ 对于/ 每个/ 部件/ ,/ 我们/ 都/ 在/ 其/ 所属/ 的/ 时钟/ 域/ 内/ 统计/ 各/ 周期/ 的/ 活动/ 情况/ 并/ 累计/ 功耗/ ,/ 最后/ 求和/ 得出/ GPU/ 的/ 总/ 功耗/ ./ 需要/ 说明/ 的/ 是/ ,/ 由于/ 现代/ GPU/ 所/ 采用/ 的/ 半导体/ 工艺/ 较/ Wattch/ 模型/ 中/ 的/ 设定/ 更加/ 成熟/ ,/ 特征/ 系数/ 更/ 小/ ,/ 因而/ 模拟器/ 给出/ 的/ 绝对/ 功耗/ 比/ 模拟/ 的/ 目标/ GPU/ 稍/ 高/ (/ 一般/ 误差/ 在/ 10/ %/ 以内/ )/ ,/ 但/ 作为/ 理论/ 优化/ 方法/ 的/ 研究/ ,/ 本文/ 重点/ 关注/ 的/ 是/ 降频/ 优化/ 后/ GPU/ 功耗/ 的/ 变化/ 和/ 性能/ 变化/ 之间/ 的/ 关系/ ,/ 而/ 非/ 功耗/ 的/ 绝对值/ ,/ 因此/ 其/ 绝对/ 功耗/ 的/ 误差/ 是/ 可以/ 接受/ 的/ ./ 4.2/ 结果/ 与/ 分析/ 通过/ 调整/ 配置/ 参数/ ,/ 我们/ 模拟/ 了/ NVIDIA/ 公司/ 的/ 三款/ 高性能/ GPU/ :/ QuadroFX5600/ 、/ GeForce8800GT/ 和/ GeForceGTX280/ ./ 表/ 2/ 给出/ 了/ 部分/ 功耗/ 模拟/ 相关/ 的/ 配置/ 参数/ ./ 其中/ Mem/ _/ LD/ 表示/ 访存/ 延迟/ ,/ Departure/ _/ del/ _/ uncoal/ 和/ Departure/ _/ del/ _/ coal/ 分别/ 表示/ warp/ 内/ 各/ 线程/ 访问/ 非/ 连续/ 地址/ 和/ 连续/ 地址/ 时/ 相邻/ 两次/ 访存/ 请求/ 之间/ 的/ 最小/ 间隔/ ./ 表中/ 未/ 给出/ 的/ 其它/ 参数均/ 按照/ 各/ GPU/ 所/ 对应/ 的/ CUDA/ 的/ 计算能力/ [/ 5/ ]/ 规范/ 设置/ ./ 参数/ MemoryBandwidth/ // Page8/ 表/ 3/ 给出/ 各/ 核心/ 函数/ 在/ 不同/ 模拟/ 平台/ 中/ 单位/ SM/ 上/ 的/ 活动/ warp/ 数/ (/ 以下/ 记为/ N/ )/ 以及/ 频率/ 设置/ 下/ 的/ CWP/ 和/ MWP/ ./ 从/ 整体/ 上/ 看/ ,/ N/ 在/ 不同/ 的/ 平台/ 间/ 变化/ 不/ 大/ ,/ 其中/ 有/ 6/ 个/ 测试用例/ 在/ 3/ 种/ 平台/ 上/ 的/ N/ 完全相同/ ./ 它们/ 可以/ 进一步/ 被/ 划分/ 成/ 两类/ :/ black/ -/ scholes/ 、/ fwtBatch1/ 和/ transpose/ 的/ block/ 数/ 足够/ 大/ ,/ 使得/ 各/ GPU/ 平台/ 的/ 单位/ SM/ 上/ 活动/ 的/ block/ 数均/ 核心/ 函数/ 表/ 3/ 活动/ warp/ 数/ ,/ 犆/ 犠/ 犘/ 和/ 犕/ 犠/ 犘/ GeForce8800GTbitonicblackscholes325/ ./ 8611.67325/ ./ 869.00326/ ./ 2112.77/ fwtBatch1matrixmulRandomGPUscalarProdscan/ _/ bestdwtHaar1Dtranspose/ 对于/ CWP/ ,/ 我们/ 可以/ 看出/ :/ (/ 1/ )/ bitonic/ 、/ scan/ _/ best/ 和/ fwtBatch1/ 的/ CWP/ 值较/ 小/ ,/ 这是/ 由于/ 它们/ 的/ 计算/ 指令/ 的/ 密度/ 很大/ (/ 见表/ 1/ )/ ,/ 因此/ 根据/ 式/ (/ 1/ )/ ,/ 其/ CWP/ 值较/ 小/ ;/ scalarProd/ 的/ CWP/ 值/ 明显/ 高于/ 其它/ 核心/ 函数/ ,/ 这是/ 由于/ 它/ 的/ 计算/ 指令/ 的/ 密度/ 很/ 低/ ./ (/ 2/ )/ RandomGPU/ 的/ 计算/ 密度/ 也/ 相对/ 较/ 高/ ,/ 但/ 其/ CWP/ 明显/ 高于/ bitonic/ 、/ scan/ _/ best/ 和/ fwtBatch1/ ,/ 这是/ 由于/ RandomGPU/ 的/ 访存/ 模式/ 使得/ 其/ warp/ 的/ 访存/ 等待/ 周期/ 较长/ ,/ 因/ 次/ 虽然/ 其访存/ 指令/ 数目/ 比例/ 较/ 小/ ,/ 但/ Mem/ _/ cycles/ 在/ 总/ 周期/ 中/ 的/ 比例/ 较大/ ,/ 从而/ 其/ CWP/ 高于/ 上述/ 3/ 个/ 核心/ 函数/ ./ (/ 3/ )/ matrixmul/ 、/ RandomGPU/ 、/ scalarProd/ 和/ dwtHaar1D/ 在/ GTX280/ 平台/ 下/ 的/ CWP/ 明显/ 高于/ 其它/ 平台/ ./ 这是/ 由于/ 它们/ 的/ 访存/ 模式/ 决定/ 了/ 它们/ 的/ CWP/ 受限于/ Departure/ _/ del/ _/ uncoal/ 参数/ ,/ 而由表/ 2/ 可知/ ,/ GTX280/ 的/ 这项/ 参数/ 明显/ 高于/ 其它/ 两种/ GPU/ 平台/ ./ 对于/ MWP/ ,/ 我们/ 可以/ 看出/ :/ (/ 1/ )/ bitonic/ 和/ scan/ _/ best/ 的/ MWP/ 值/ 没有/ 随着/ 平台/ 变化/ 而/ 变化/ ,/ 这是/ 由于/ 它们/ 都/ 仅/ 有/ 1/ 个/ block/ ,/ 单位/ SM/ 上/ 活动/ 的/ warp/ 数/ N/ 很小/ ,/ 其/ MWP/ 值/ 受限于/ N/ ./ (/ 2/ )/ matrix/ 、/ RandomGPU/ 、/ scalarProd/ 和/ dwtHaar1D/ 的/ MWP/ 值较/ 小/ ,/ 这是/ 由于/ 它们/ 的/ 访存/ 模式/ 使得/ 它们/ 的/ Departure/ _/ delay/ 的/ 值/ 远高于/ 其它/ 几个/ 核/ 函数/ 的/ 值/ ,/ 因而/ 式/ (/ 3/ )/ 中/ 第/ 1/ 项/ 的/ 值/ 很小/ ,/ 成为/ 决定/ 其/ MWP/ 的/ 因素/ ./ 综合/ CWP/ 和/ MWP/ 的/ 值/ 可以/ 看出/ ,/ 只有/ 达到/ GPU/ 的/ 上限/ (/ 8/ )/ ,/ 因此/ N/ 的/ 大小/ 仅/ 取决于/ 每个/ block/ 内/ 包含/ 的/ warp/ 数/ ,/ 这/ 是/ 由/ 程序/ 决定/ 的/ ,/ 因此/ 在/ 不同/ 的/ 平台/ 上/ 没有/ 变化/ ;/ bitonic/ 、/ scan/ _/ best/ 和/ dwtHaar1D/ 的/ block/ 数/ 太小/ ,/ 只有/ 部分/ SM/ 被/ 使用/ ,/ 且/ 活跃/ 的/ SM/ 上/ 最/ 多只/ 运行/ 一个/ block/ ,/ 因此/ N/ 也/ 仅/ 取决于/ block/ 内/ 包含/ 的/ warp/ 数/ ./ 对于/ 另外/ 3/ 个/ 测试用例/ ,/ 它们/ 的/ N/ 则/ 随着/ GPU/ 上/ SM/ 数/ 的/ 变化/ 而/ 变化/ ./ matrixmul/ 、/ RandomGPU/ 、/ scalarProd/ 和/ dwtHaar1D4/ 个/ 测试用例/ 的/ CWP/ 要/ 高于/ MWP/ ,/ 这/ 说明/ 一般/ 情况/ 下/ ,/ 核心/ 函数/ 的/ CWP/ 和/ MWP/ 值/ 的/ 相对/ 大小/ 主要/ 取决于/ 其访存/ 模式/ ./ 对于/ warp/ 内/ 各/ 线程/ 访问/ 非/ 连续/ 地址/ 的/ 访存/ 模式/ ,/ MWP/ 值/ 很小/ ,/ 一般/ 低于/ CWP/ ,/ 此时/ 程序/ 的/ 瓶颈/ 在于/ 访存/ ,/ 应该/ 降低/ 处理器/ 的/ 频率/ 以/ 匹配/ 存储器/ 的/ 性能/ ;/ 反之/ 对于/ warp/ 内/ 各/ 线程/ 访问/ 连续/ 地址/ 的/ 模式/ ,/ 程序/ 对/ 存储器/ 的/ 性能/ 要求/ 大大降低/ ,/ 则/ 程序/ 的/ 瓶颈/ 在于/ 计算/ ,/ 应该/ 降低/ 存储器/ 的/ 频率/ 以/ 节约/ 能量/ ./ 获得/ 各/ 核心/ 函数/ 的/ CWP/ 和/ MWP/ 后/ ,/ 根据/ 本文/ 提出/ 的/ 功耗/ 优化/ 模型/ ,/ 我们/ 得出/ 处理器/ 和/ 存储器/ 的/ 频率/ 调节/ 因子/ α/ c/ 和/ α/ m/ ,/ 如表/ 4/ 所示/ ./ 这里/ 我们/ 假定/ 性能/ 约束条件/ β/ =/ 1.2/ ./ bitonic0/ ./ 830.010/ ./ 830.010/ ./ 830.01/ blackscholes0/ ./ 830.350/ ./ 830.450/ ./ 830.34/ fwtBatch10/ ./ 830.20/ ./ 830.250/ ./ 830.19/ matrixmul0/ ./ 350.270/ ./ 350.220/ ./ 390.32/ RandomGPU0/ ./ 520.350/ ./ 520.350/ ./ 330.42/ scalarProd0/ ./ 320.290/ ./ 330.260/ ./ 300.32/ scan/ _/ best0/ ./ 830.010/ ./ 830.010/ ./ 830.01/ dwtHaar1D0/ ./ 380.020/ ./ 380.030/ ./ 400.01/ transpose0/ ./ 830.280/ ./ 830.360/ ./ 830.27/ 从表/ 4/ 中/ 可以/ 看出/ ,/ bitonic/ 、/ blackscholes/ 、/ fwt/ -/ Batch1/ 、/ scan/ _/ best/ 和/ transpose5/ 个/ 核心/ 函数/ 的/ α/ c/ 值/ 始终/ 为/ 0.83/ ,/ 即/ 1/ // β/ ./ 此时/ 程序运行/ 受限于/ GPUPage9/ 中/ 的/ 处理器/ ,/ 主要/ 的/ 功耗/ 优化/ 空间/ 在于/ 降低/ 存储器/ 的/ 频率/ ./ 另外/ ,/ bitonic/ 、/ scan/ _/ best/ 和/ dwtHaar1D3/ 个/ kernel/ 的/ α/ m/ 值/ 非常/ 小/ ,/ 这是/ 由于/ 这/ 3/ 个/ 函数/ 的/ block/ 数/ 很小/ ,/ 程序运行/ 时/ 只/ 启用/ 了/ 部分/ SM/ ,/ 按照/ 理论/ 模型/ 计算/ ,/ 每个/ warp/ 所/ 分配/ 的/ 存储/ 带宽/ 非常/ 高/ ,/ 即/ MWP/ [/ 2/ ]/ 的/ 值/ 很大/ ,/ 因此/ 为了/ 节约/ 功耗/ 需要/ 大幅/ 降低/ 存储器/ 的/ 频率/ 以/ 匹配/ 处理器/ 的/ 运行/ 速度/ ./ 按照/ 表/ 4/ 进行/ 调节/ 频率/ 后/ ,/ 我们/ 得到/ 如图/ 2/ 所示/ 的/ 性能/ 加速/ 比/ ./ 可以/ 看出/ 调节/ 频率/ 后/ ,/ 各/ 核心/ 函数/ 的/ 性能/ 有/ 不同/ 程度/ 的/ 下降/ ,/ 但/ 其/ 均值/ 介于/ 0.75/ ~/ 0.8/ 之间/ ,/ 和/ 预期/ 的/ 性能/ 损失/ 0.83/ (/ 1/ // β/ )/ ,/ 相对误差/ 在/ 10/ %/ 以内/ ./ 图/ 3/ 给出/ 调节/ 频率/ 后/ 的/ GPU/ 能耗/ 占/ 原始/ 能耗/ 的/ 比值/ ,/ 其/ 均值/ 介于/ 0.66/ ~/ 0.72/ 之间/ ./ 注意/ 到/ ,/ 根据/ 能量消耗/ 公式/ E/ =/ PT/ ,/ 而/ 根据/ 2.2/ 节/ 的/ 分析/ ,/ P/ ∝/ f3/ ,/ 而/ T/ 大致/ 满足/ T/ ∝/ f/ -/ 1/ ,/ 因此/ 一般/ 有/ E/ ∝/ f2/ ./ 但/ 根据/ GPGPUSim/ 的/ 模拟/ 环境/ ,/ 我们/ 的/ 功耗/ 模拟器/ 中/ 的/ 模块/ 被/ 划分/ 为/ 4/ 个/ 独立/ 的/ 时钟/ 域/ ,/ 而/ 本文/ 进行/ 降频/ 时仅/ 调节/ 了/ 其中/ ShaderCore/ 和/ Dram/ 时钟/ 域/ ,/ 因此/ 片上/ 互连/ 网络/ 和/ Cache/ 等/ 消耗/ 的/ 能量/ 在/ 调节/ 前后/ 保持/ 不变/ ./ 此外/ ,/ 在/ 某些/ 测试用例/ ,/ 如/ bitonic/ 、/ scalarProd/ 和/ scan/ _/ best/ 中/ ,/ 这/ 两个/ 模块/ 消耗/ 的/ 能量/ 相对/ 较/ 高/ ./ 这是/ 本文/ 的/ 模拟/ 结果/ 中/ ,/ 能耗/ 加速/ 比/ 高于/ 性能/ 加速/ 比/ 的/ 平方/ 的/ 主要/ 原因/ ./ 为了/ 验证/ 本文/ 给出/ 的/ 频率/ 调节/ 策略/ 的/ 最优性/ ,/ 我们/ 分别/ 调节/ GPU/ 处理器/ 和/ 存储器/ 的/ 频率/ 调节/ 因子/ α/ c/ 和/ α/ m/ ,/ 寻找/ 满足/ 性能/ 约束/ 的/ 最优/ 功耗/ 调节/ 点/ ./ 我们/ 在/ QuadroFX5600/ 平台/ 下/ 选取/ matrixmul/ 和/ blackscholes/ 两个/ 核心/ 函数/ 进行/ 验证/ ,/ 它们/ 分别/ 代表/ 了/ CWP/ >/ MWP/ +/ 1/ 和/ CWP/ </ MWP/ +/ 1/ 两种/ 类型/ 的/ 测试用例/ ./ 图/ 4/ 给出/ matrixmul/ 在/ 不同/ 的/ α/ c/ 和/ α/ m/ 配置/ 下/ 的/ 性能/ 加速/ 比/ ,/ 其中/ 虚线/ 给出/ 的/ 是/ 值/ 为/ 0.83/ (/ 1/ // β/ )/ 的/ 参考/ 线/ ./ 从图/ 中/ 可以/ 看出/ 随着/ 性能/ 的/ 下降/ ,/ 处理器/ 频率/ 的/ 降低/ 在/ α/ c/ 等于/ 0.3/ ~/ 0.4/ 之间/ 出现/ 拐点/ ,/ 这是/ 由于/ matrixmul/ 的/ CWP/ >/ MWP/ +/ 1/ ,/ 当/ 处理器/ 频率/ 较/ 高时/ ,/ 程序运行/ 的/ 瓶颈/ 在于/ 存储器/ ,/ 而/ 当/ 处理器/ 频率/ 下降/ 到/ 一定/ 程度/ 时/ ,/ 程序运行/ 的/ 瓶颈/ 由/ 存储器/ 变为/ 处理器/ ,/ 即/ 由/ CWP/ >/ MWP/ +/ 1/ 变为/ CWP/ </ MWP/ +/ 1/ ,/ 因此/ 继续/ 降低/ 处理器/ 的/ 频率/ 会/ 使得/ 性能/ 急剧下降/ ./ 图/ 5/ 给出/ 到达/ 0.83/ 的/ 性能/ 加速/ 比/ 边界/ 时/ ,/ 各/ (/ α/ c/ ,/ α/ m/ )/ 配置/ 下/ 的/ 能耗/ 占/ 原始/ 能耗/ 的/ 比值/ ./ 其中/ 最低点/ 出现/ 在/ (/ 0.43/ ,/ 0.22/ )/ 处/ ,/ 此时/ 能耗/ 占/ 原始/ 能耗/ 的/ 比值/ 为/ 0.65/ ,/ 而/ 如图/ 3/ 所示/ ,/ 优化/ 模型/ 给出/ 的/ 配置/ (/ 0.35/ ,/ 0.27/ )/ 所/ 取得/ 的/ 能耗/ 比值/ 为/ 0.63/ ,/ 接近/ 且/ 低于/ 上图/ 中/ 最低点/ 的/ 值/ ./ 图/ 4Matrixmul/ 在/ 不同/ 频率/ 配置/ 下/ 的/ 性能/ 加速/ 比图/ 5Matrixmul/ 在/ 性能/ 边界/ 处/ 各/ 配置/ 的/ 能耗/ 加速/ 比图/ 6/ 给出/ blackscholes/ 在/ 不同/ 的/ α/ c/ 和/ α/ m/ 配置/ 下/ 的/ 性能/ 加速/ 比/ ,/ 图中/ 虚线/ 同样/ 是/ 值/ 为/ 0.83/ (/ 1/ // β/ )/ 的/ 参考/ 线/ ./ 从图/ 中/ 可以/ 看出/ ,/ 绝大部分/ α/ m/ 设置/ 下/ 性能/ 和/ 处理器/ 的/ 频率/ 基本/ 呈/ 线性关系/ ,/ 这是/ 由于/ 这些/ 情况/ 下/ CWP/ </ MWP/ +/ 1/ ,/ 此时/ 程序运行/ 的/ 瓶颈/ 在于/ Page10/ 计算/ ,/ 降低/ 处理器/ 的/ 频率/ 必然/ 导致/ 性能/ 的/ 下降/ ./ 当/ α/ m/ 足够/ 低时/ ,/ 程序运行/ 的/ 瓶颈/ 发生/ 转化/ ,/ 此时/ 小幅/ 降低/ 处理器/ 频率/ 不会/ 显著/ 影响/ 程序/ 性能/ ,/ 直至/ α/ c/ 减少/ 到/ 上述/ 不等式/ 再次/ 成立/ ./ 图/ 6Blackscholes/ 在/ 不同/ 频率/ 配置/ 下/ 的/ 性能/ 加速/ 比/ 和/ matrixmul/ 一样/ ,/ 我们/ 继续/ 考察/ 达到/ 0.83/ 的/ 性能/ 加速/ 比/ 边界/ 时/ 各/ (/ α/ c/ ,/ α/ m/ )/ 配置/ 下/ 的/ 能耗/ 占/ 原始/ 能耗/ 的/ 比值/ ,/ 如图/ 7/ 所示/ ./ 注意/ 到/ α/ m/ =/ 0.2/ 时/ 的/ 性能/ 曲线/ 与/ 参考/ 线/ 没有/ 交点/ ,/ 因此/ 这里/ 只有/ 四组/ (/ α/ c/ ,/ α/ m/ )/ 配置/ 下/ 的/ 能耗/ 比值/ ./ 其中/ 最低点/ 出现/ 在/ (/ 0.79/ ,/ 0.6/ )/ 处/ ,/ 此时/ 能耗/ 占/ 原始/ 能耗/ 的/ 比值/ 为/ 0.61/ ./ 优化/ 模型/ 给出/ 的/ 配置/ (/ 0.83/ ,/ 0.35/ )/ 所/ 取得/ 的/ 能耗/ 比值/ 为/ 0.59/ (/ 见图/ 3/ )/ ,/ 接近/ 且/ 低于/ 上图/ 中/ 的/ 最低值/ ./ 图/ 7Blackscholes/ 在/ 性能/ 边界/ 处/ 各/ 配置/ 的/ 能耗/ 加速/ 比/ 从/ 以上/ 实验/ 结果/ 可以/ 说明/ ,/ 本文/ 提出/ 的/ 功耗/ 优化/ 模型/ ,/ 可以/ 比较/ 精确/ 地/ 分析程序/ 的/ 行为/ ,/ 针对/ 不同/ 的/ 程序/ 特征/ 给出/ 功耗/ 优化/ 策略/ ,/ 在/ 性能/ 达到/ 约束条件/ 的/ 10/ %/ 误差/ 以内/ ,/ 获得/ 最优/ 的/ 能量消耗/ ,/ 从而/ 可以/ 有效/ 地/ 指导/ GPU/ 程序/ 的/ 低功耗/ 优化/ ./ 5/ 相关/ 工作/ 在/ 传统/ 的/ 低功耗/ 领域/ ,/ DVFS/ 在/ 操作系统/ 级/ 和/ 编译/ 级/ 都/ 早/ 有/ 研究/ ./ Weiser/ 等/ 人/ [/ 11/ ]/ 首先/ 提出/ 了/ 通用/ 操作系统/ 上/ 基于/ 时间/ 间隔/ 的/ 动态/ 电压/ 调节/ 算法/ ./ Govil/ 等/ 人/ [/ 12/ ]/ 和/ Lorch/ 等/ 人/ [/ 13/ ]/ 继续/ 了/ 这/ 一/ 工作/ 并/ 考虑/ 了/ 大量/ 不同/ 的/ 工作/ 负载/ 预测/ 及/ 速度/ 选择/ 策略/ ./ Hsu/ [/ 14/ ]/ 较/ 早/ 提出/ 了/ 编译/ 指导/ 的/ 动态/ 电压/ 调节/ 算法/ ,/ 给出/ 了/ 编译/ 策略/ 来/ 识别/ 电压/ 调节/ 机会/ ,/ 同时/ 保证/ 没有/ 很/ 明显/ 的/ 性能/ 损失/ ./ 而后/ 通过/ 进一步/ 研究/ [/ 15/ ]/ 提出/ 了/ 编译/ 指导/ 的/ 动态/ 电压/ 调节/ 算法/ ,/ 一方面/ 准确/ 地/ 预测/ 了/ 一个/ 程序段/ 在/ 任意/ 一个/ 频率/ 值时/ 的/ 性能/ ,/ 另一方面/ 有效/ 地/ 选择/ 了/ 合适/ 的/ 程序段/ 进行/ 电压/ 降低/ 的/ 操作/ ./ 在/ 目前/ GPU/ 低功耗/ 研究/ 尚/ 处于/ 起步/ 阶段/ 的/ 时候/ ,/ 这些/ 研究/ 对/ 我们/ 来说/ 有/ 极大/ 的/ 启发/ 和/ 借鉴/ 意义/ ./ 在/ GPU/ 低功耗/ 领域/ ,/ 目前/ 的/ 研究/ 大多/ 集中/ 在/ 能耗/ 评测/ 分析阶段/ ./ Collange/ 等/ 人/ [/ 16/ ]/ 使用/ 测量/ 统计/ 的/ 方式/ 研究/ 了/ 在/ CUDA/ 环境/ 下/ 不同/ 计算/ 程序运行/ 时/ GPU/ 是/ 怎样/ 耗能/ 的/ ./ Huang/ 等/ 人/ [/ 17/ ]/ 以/ 一个/ 典型/ 的/ 生物/ 计算/ 应用/ 为/ 案例/ ,/ 详细/ 对比/ 了/ CPU/ 和/ GPU/ 的/ 执行/ 性能/ 和/ 能量消耗/ ,/ 同时/ 指出/ GPU/ 高效能/ 的/ 发挥/ 受/ 程序/ 特征/ 和/ 程序/ 优化/ 的/ 影响/ 较大/ ./ Rofouei/ 等/ 人/ [/ 18/ ]/ 将/ 使用/ GPU/ 与/ 只/ 使用/ CPU/ 的/ 系统/ 能耗/ 作/ 对比/ ,/ 通过/ 实验/ 发现/ 使用/ GPU/ 时/ ,/ 当/ 系统/ 性能/ 增益/ 超过/ 某一/ 边界值/ 后/ 就/ 能/ 实现/ 节能/ ,/ 并/ 对/ 这个/ 边界/ 进行/ 了/ 说明/ ./ 同时/ ,/ 也/ 出现/ 了/ 一些/ 优化/ 和/ 建模/ 的/ 文章/ ,/ 但是/ 数量/ 较少/ ./ Takizawa/ 等/ 人/ [/ 19/ ]/ 提出/ 了/ 一种/ 编译/ 时/ 程序/ 动态/ 选择/ 能耗/ 较/ 低/ 处理器/ 运行/ 的/ 方法/ ,/ 来/ 优化/ 系统/ 的/ 整体/ 功耗/ ./ Ma/ 等/ 人/ [/ 20/ ]/ 则/ 对/ GPU/ 功耗/ 通过/ 统计分析/ 的/ 方法/ 建立/ 模型/ ,/ 用来/ 预测/ 目标/ GPU/ 运行/ 所/ 需/ 功耗/ ,/ 为/ 以后/ 优化/ GPU/ 功耗/ 提供/ 帮助/ ./ 该/ 模型/ 由于/ 是/ 基于/ 统计/ 方法/ 得到/ ,/ 因此/ 其/ 就/ 存有/ 很大/ 局限性/ ,/ 并/ 不/ 精确/ ./ 综上所述/ ,/ GPU/ 功耗/ 研究/ 领域/ 缺少/ 精确/ 的/ 模型/ 与/ 有/ 针对性/ 的/ 优化/ 方法/ ,/ 而/ 这/ 正是/ 本文/ 的/ 研究/ 的/ 出发点/ ./ 本文/ 基于/ 一个/ GPU/ 性能/ 解析/ 模型/ 建立/ GPU/ 的/ 功耗/ 优化/ 模型/ ,/ 可以/ 对/ 程序/ 行为/ 进行/ 准确/ 的/ 分析/ ,/ 从而/ 获得/ 较/ 好/ 的/ 优化/ 效果/ ./ 6/ 结束语/ 随着/ GPU/ 越来越/ 多/ 地被/ 应用/ 到/ 通用/ 计算/ 领域/ ,/ 人们/ 也/ 日益/ 关注/ 其/ 性能/ 以外/ 其它/ 方面/ 的/ 表现/ ,/ 如/ 可靠性/ 、/ 功耗/ 等等/ ./ GPU/ 中/ 处理/ 芯片/ 的/ 计算资源/ 密度/ 大/ ,/ 其/ 功耗/ 也/ 高于/ 通用/ CPU/ ./ 高功耗/ 带来/ 的/ 散热/ 问题/ 也/ 影响/ 了/ 其/ 可靠性/ 和/ 稳定性/ ./ 本文/ 针对/ GPU/ 高功耗/ 的/ 问题/ ,/ 结合/ S/ ./ Hong/ 等/ 人/ 在/ ISCA/ ’/ 09/ 上/ 提出/ 的/ GPU/ 性能/ 解析/ 模型/ ,/ 提出/ 了/ 一个/ 综合/ 考虑/ GPU/ 处理器/ 和/ 存储器/ 的/ 功耗/ 优化/ 方法/ ./ 我们/ 的/ 方法/ 利用/ 性能/ 模型/ 分析/ 出/ 程序运行/ 的/ 瓶颈/ ,/ 并/ 由此/ 计算/ 出/ 处理器/ 和/ 存储器/ 的/ 频率/ 调节/ 因子/ ,/ 使得/ 在/ 满足/ 性能/ 损失/ 约束/ 的/ 情况/ 下/ ,/ GPU/ 整体/ 的/ 功耗/ 最低/ ./ 通过/ 模拟实验/ ,/ 我们/ 对/ 所/ 提出/ 的/ 优化/ 方法/ 进行/ 了/ 验证/ ./ 实/ Page11/ 验/ 结果表明/ ,/ 理论/ 分析/ 给出/ 的/ 频率/ 调节/ 因子/ 可以/ 在/ 达到/ 性能/ 的/ 约束条件/ 的/ 10/ %/ 误差/ 以内/ ,/ 最小化/ GPU/ 的/ 能量消耗/ ,/ 因此/ 可以/ 有效/ 地/ 指导/ 应用程序/ 在/ GPU/ 上/ 的/ 低功耗/ 优化/ ./ 

