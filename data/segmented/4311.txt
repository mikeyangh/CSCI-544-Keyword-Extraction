Page1/ 有/ 期限/ 约束/ 的/ 多/ DAG/ 共享资源/ 的/ 调度/ 及/ 公平/ 费用/ 优化/ 方法/ 田国忠/ 1/ )/ ,/ 2/ )/ 肖创柏/ 1/ )/ 谢军奇/ 1/ )/ 1/ )/ (/ 北京工业大学/ 计算机/ 学院/ 北京/ 100124/ )/ 2/ )/ (/ 新疆/ 工程学院/ 计算机/ 工程系/ 乌鲁木齐/ 830091/ )/ 摘要/ 随着/ 网格/ 和/ 云/ 计算/ 工作/ 流/ 技术/ 的/ 发展/ ,/ 近来/ 关于/ 多/ DAG/ (/ DirectedAcyclicGraph/ )/ 共享资源/ 调度/ 的/ 研究/ 取得/ 了/ 一些/ 进展/ ,/ 然而/ ,/ 关于/ 具有/ 最/ 晚/ 完成/ 期限/ 约束/ 的/ 多/ DAG/ 共享/ 一组/ 有限/ 异构/ 资源/ 的/ 调度/ 及其/ 费用/ 最低/ 化等/ 问题/ 还有/ 待/ 进一步/ 研究/ 和/ 解决/ ./ 针对/ 这些/ 问题/ ,/ 文中/ 首先/ 提出/ 了/ 衡量/ DAG/ 期限/ 紧急/ 水平/ 的/ “/ 相对/ 严格/ 程度/ ”/ 的/ 新/ 方法/ ,/ 并/ 在/ 此基础/ 上/ 提出/ 了/ 基于/ 相对/ 严格/ 程度/ 的/ 调度/ 算法/ MDRS/ (/ SchedulingforMulti/ -/ DAGswithDeadlinebasedonRelativeStritness/ )/ ./ 该/ 算法/ 不仅/ 能够/ 合理/ 处理/ 多个/ DAG/ 之间/ 调度/ 的/ 紧急/ 水平/ 关系/ ,/ 也/ 能/ 对/ 由于/ DAG/ 期限/ 过于/ 严格/ 而/ 可能/ 产生/ 的/ “/ 过饱和/ ”/ 情况/ 进行/ 探测/ 和/ 处理/ ./ 一旦/ 遇到/ “/ 过饱和/ ”/ 情况/ ,/ 则/ 采用/ “/ 堆栈/ ”/ 与/ “/ 调度/ 回溯/ ”/ 相结合/ 的/ 机制/ 尽可能少/ 地/ 丢弃/ 其中/ 的/ DAG/ ,/ 从而/ 达到/ DAG/ 吞吐量/ 最大化/ 调度/ 目标/ ./ 在/ MDRS/ 算法/ 的/ 基础/ 上/ ,/ 为了/ 满足/ 各/ DAG/ 期限内/ 完成/ 约束条件/ ,/ 并/ 尽可能/ 公平/ 地/ 降低/ 多个/ DAG/ 执行/ 的/ 费用/ ,/ 又/ 提出/ 了/ 基于/ 单位/ 相对/ 严格/ 程度/ 变化/ 量/ 的/ 费用/ 降低/ 率/ 最大化/ 方法/ 的/ 费用/ 优化/ 算法/ CDVRS/ (/ CostDecreasebasedonVarianceoftheRelativeStrictness/ )/ ./ 实验/ 表明/ :/ 这些/ 方法/ 及/ 算法/ 能够/ 达到/ 较/ 好/ 的/ 性能/ ./ 关键词/ 多/ DAG/ 调度/ ;/ 期限/ 约束/ ;/ 工作/ 流/ ;/ 费用/ 优化/ ;/ 公平性/ 1/ 引言/ 很多/ 的/ 工作/ 流/ 任务/ 及/ 任务/ 间/ 的/ 依赖/ 约束/ 关系/ 都/ 可/ 由/ 有/ 向/ 无/ 环图/ DAG/ (/ DirectedAcyclicGraph/ )/ 来/ 表示/ 或者/ 能够/ 转化/ 为/ DAG/ 任务/ 图/ ./ 近年来/ ,/ 随着/ 一些/ 异构/ 分布式计算/ 环境/ 下/ 工作/ 流/ 系统/ 技术/ 研究/ 和/ 应用/ 的/ 发展/ (/ 如/ 网格/ 、/ 云/ 计算/ 或/ 混合/ 云/ 计算/ 工作/ 流/ 系统/ )/ ,/ 作为/ 这些/ 工作/ 流/ 管理系统/ 的/ 关键技术/ 之一/ 的/ 多个/ DAG/ 任务/ 共享/ 异构/ 分布式/ 资源/ 的/ 调度/ 问题/ 引起/ 了/ 研究者/ 们/ 的/ 关注/ ./ 目前/ 有关/ 多个/ DAG/ 任务/ 共享资源/ 调度/ 的/ 研究/ 在/ 执行/ 时间/ 最小化/ (/ MakespanMinimization/ )/ 、/ 公平性/ 最大化/ (/ FairnessMaximiza/ -/ tion/ )/ 、/ 吞吐量/ 最大化/ (/ ThroughputMaximization/ )/ 以及/ 资源分配/ 优化/ (/ ResourceAllocationOptimiza/ -/ tion/ )/ 等/ 方面/ 已经/ 取得/ 了/ 一些/ 进展/ [/ 1/ -/ 8/ ]/ ./ 另外/ ,/ 在/ 网格/ 、/ 云/ 计算/ 或/ 混合/ 云/ 计算/ 等/ 平台/ 的/ 工作/ 流/ 的/ 研究/ 领域/ 中/ ,/ 关于/ 有/ 最晚/ 完成/ 期限/ 约束/ 的/ DAG/ 调度/ 问题/ 也/ 引起/ 了/ 研究者/ 们/ 的/ 关注/ ./ 在/ 这些/ 新型/ 异构/ 分布式应用/ 环境/ 下/ ,/ 由于/ 资源/ 提供者/ 往往/ 会/ 根据/ 所/ 提供/ 的/ 资源类型/ 、/ 服务质量/ QoS/ (/ QualityofService/ )/ 和/ 用户/ 使用/ (/ 或/ 租用/ )/ 资源/ 的/ 总时长/ 进行/ 计费/ ,/ 用户/ 考虑/ 到/ 经济/ 费用/ 等/ 因素/ ,/ 往往/ 会/ 根据/ 应用/ 的/ 需求/ 为/ DAG/ 应用/ 指定/ 一个/ 最/ 晚/ 完成/ 期限/ Deadline/ ,/ 而/ 并/ 不/ 要求/ DAG/ 在/ 最/ 短时间/ 内/ 完成/ ,/ 这样/ 就/ 需要/ 工作/ 流/ 调度/ 系统/ 能够/ 根据/ 用户/ 指定/ 的/ 最晚/ 完成/ 期限/ 尽可能/ 为/ 用户/ 的/ DAG/ 任务/ 选择/ 经济/ 费用/ 最低/ 的/ 资源/ [/ 9/ ]/ ./ 针对/ 有/ 期限/ 约束/ 的/ DAG/ 任务调度/ 及其/ 费用/ 优化/ ,/ 相关/ 研究/ [/ 9/ -/ 14/ ]/ 提出/ 了/ 一些/ 算法/ 和/ 解决方案/ ./ 这些/ 关于/ 有/ Deadline/ 约束/ 的/ DAG/ 调度/ 算法/ 大多/ 都/ 有/ 一个/ “/ Deadline/ 分配/ ”/ 的/ 重要/ 步骤/ ,/ 也/ 就是/ 用/ 不同/ 的/ 方法/ 将/ 整个/ DAG/ 的/ Deadline/ 分配/ 到/ 各/ 任务/ (/ 或/ 任务/ 区间/ )/ 上/ ,/ 然后/ 根据/ 任务/ 所/ 分配/ 的/ 时间/ 窗口/ 尽可能/ 选择/ 较/ 便宜/ (/ 因而/ 速度/ 也/ 较慢/ [/ 11/ ]/ )/ 的/ 资源/ 进行/ 费用/ 优化/ ./ 然而/ 目前/ 这些/ 方法/ 主要/ 还是/ 针对/ 单个/ DAG/ 或者/ 针对/ 单个/ DAG/ 多个/ 实例/ [/ 13/ ]/ 在/ 一组/ 资源/ 上/ 的/ 调度/ 及其/ 费用/ 优化/ 问题/ ./ 由于/ DAG/ 中/ 任务/ 有/ 数据/ 传递/ 的/ 前后/ 依赖/ 关系/ ,/ 在/ 一组/ 资源/ 上/ 调度/ 后/ 必然/ 会/ 留下/ 空闲/ 时隙/ ,/ 如果/ 将/ 多个/ DAG/ 共享资源/ 调度/ ,/ 则/ 这些/ 空闲/ 时隙/ 将会/ 被/ 互相/ 利用/ ,/ 资源/ 利用率/ 将会/ 得到/ 显著/ 提高/ ,/ 这/ 也/ 是/ 目前/ 多个/ DAG/ 共享资源/ 调度/ 受到/ 研究者/ 们/ 关注/ (/ 如/ 文献/ [/ 1/ -/ 8/ ]/ )/ 的/ 重要/ 原因/ 之一/ ./ 而/ 本文/ 所/ 要/ 提出/ 和/ 解决/ 的/ 问题/ 是/ :/ 当/ 多个/ 具有/ 最/ 晚/ 完成/ 期限/ 约束/ 的/ DAG/ 共享/ 一组/ 资源/ 进行/ 调度/ 时/ ,/ 该/ 采取/ 什么样/ 的/ 调度/ 策略/ 和/ 方法/ 才能/ 提高/ DAG/ 的/ 吞吐量/ ,/ 使得/ 在/ 期限内/ 完成/ 的/ DAG/ 数量/ 最大化/ ,/ 并且/ 在/ 吞吐量/ 最大化/ 的/ 基础/ 上/ 尽可能/ 公平/ 地/ 降低/ 这些/ DAG/ 执行/ 的/ 总费用/ ./ 这些/ 问题/ 的/ 解决/ 将/ 对/ 提高/ 多个/ DAG/ 共享/ 异构/ 资源/ 应用/ 的/ 吞吐/ 率/ 和/ 降低/ 运行/ 费用/ 有着/ 重要/ 的/ 应用/ 价值/ ./ 然而/ ,/ 这些/ 问题/ 与/ 以往/ 关于/ 无/ Deadline/ 约束/ 的/ 多个/ DAG/ 共享资源/ 调度/ 的/ 时间/ 最小化/ 调度/ 等/ 问题/ ,/ 或者/ 是/ 有关/ 单个/ 有/ Deadline/ 约束/ DAG/ 的/ 调度/ 及/ 费用/ 优化/ 等/ 问题/ 相比/ ,/ 是/ 复杂/ 而/ 更/ 具有/ 挑战性/ 的/ 问题/ ./ 针对/ 有/ 最晚/ 完成/ 期限/ 的/ 多个/ DAG/ 共享资源/ 调度/ 来说/ ,/ 这些/ 结构/ 、/ 大小/ 各不相同/ 的/ DAG/ 中/ ,/ 每个/ DAG/ 都/ 有/ 一个/ 由/ 用户/ 根据/ QoS/ 需要/ 所/ 指定/ 的/ 最晚/ 完成/ 期限/ Deadline/ ./ 不合理/ 的/ 调度/ 方法/ 将/ 可能/ 引起/ 期限内/ 完成/ DAG/ 数量/ 的/ 降低/ ,/ 因此/ 如何/ 根据/ 这些/ DAG/ 的/ Deadline/ 紧急/ 程度/ 公平合理/ 地/ 确定/ 这些/ DAG/ 的/ 调度/ 关系/ ,/ 才能/ 使得/ 期限内/ 完成/ 的/ DAG/ 数量/ 最大化/ 是/ 首要/ 考虑/ 和/ 解决/ 的/ 问题/ ./ 进一步/ 看/ ,/ 如果/ 每个/ DAG/ 的/ Deadline/ 的/ 紧急/ 程度/ 都/ 比较/ 高/ ,/ 那么/ 很/ 可能/ 会/ 出现/ :/ 即使/ 不/ 考虑/ 费用/ 优化/ 而/ 采用/ 时间/ 最小化/ 方法/ ,/ 也/ 不/ 能够/ 使得/ 所有/ DAG/ 都/ 能/ 在/ 期限内/ 完成/ 的/ 情况/ (/ 本文/ 将/ 这种/ 情况/ 称为/ “/ 过饱和/ ”/ )/ ./ 因此/ 在/ 调度/ 中/ 需要/ 有/ 一种/ 方法/ 能够/ 对/ 这种/ 情况/ 进行/ 探测/ ./ 如果/ 出现/ 了/ “/ 过饱和/ ”/ 情况/ ,/ 还/ 需要/ 对/ 其中/ 的/ DAG/ 按照/ 某种/ 方法/ 进行/ 丢弃/ ./ 其次/ ,/ 在/ DAG/ 吞吐量/ 最大化/ 的/ 基础/ 上/ ,/ 如何/ 进行/ 费用/ 优化/ 而/ 公平/ 地/ 降低/ 多个/ DAG/ 的/ 经济/ 费用/ 问题/ 是/ 另/ 一个/ 较为/ 复杂/ 的/ 问题/ ,/ 因为/ 这/ 将/ 涉及/ 到/ 任何/ 一个/ DAG/ 的/ 调度/ 及/ 费用/ 优化/ 都/ 会/ 影响/ 到/ 其他/ DAG/ 的/ 调度/ 及/ 费用/ 优化/ ,/ 甚至/ 会/ 导致/ 其他/ DAG/ 不/ 能够/ 在/ 期限内/ 完成/ ./ 同时/ ,/ 这/ 也/ 是/ 现有/ 关于/ 单/ DAG/ 调度/ 费用/ 优化/ 研究所/ 采用/ Page3/ 的/ 各种/ Deadline/ 分配/ 方法/ [/ 9/ -/ 14/ ]/ 不/ 适用/ 解决/ 上述/ 调度/ 及/ 费用/ 优化/ 问题/ 的/ 原因/ 之一/ ./ 就/ 我们/ 现有/ 知识/ 范围/ 来看/ ,/ 还/ 未/ 见/ 有/ 相关/ 研究/ 和/ 文献/ 针对/ 上述/ 这些/ 问题/ 展开/ 研究/ 和/ 讨论/ ./ 尽管/ 一些/ 关于/ 解决/ 其他/ 类型/ 问题/ (/ 如/ 多个/ 没有/ 依赖/ 关系/ 的/ 独立/ 实时/ 任务/ 或/ 实时/ DAG/ 任务/ 的/ 调度/ 问题/ )/ 的/ 文献/ [/ 15/ -/ 19/ ]/ 所/ 提到/ 的/ EDF/ (/ Earliest/ -/ Deadline/ -/ First/ )/ 和/ LLF/ (/ Least/ -/ Laxity/ -/ First/ )/ 方法/ 可以/ 借鉴/ ,/ 但/ 也/ 不/ 能够/ 很/ 好地解决/ 上述/ 这些/ 问题/ ./ 其中/ 的/ EDF/ 方法/ 是/ :/ 任务/ 的/ Deadline/ 时间/ 越/ 早/ ,/ 调度/ 优先级/ 越大/ ,/ 能够/ 越早/ 被/ 调度/ ./ 尤其/ 是/ 文献/ [/ 19/ ]/ 在/ 解决/ 多个/ 实时/ 的/ 非/ 精确/ 计算/ DAG/ 的/ 调度/ 问题/ 时/ 采用/ 了/ EDF/ 方法/ ,/ 即用/ DAG/ 的/ Deadline/ 作为/ DAG/ 任务/ 的/ 优先/ 值/ ./ 针对/ 结构/ 大小/ 相同/ 的/ 多个/ DAG/ ,/ 采取/ 这种/ 方法/ 的确/ 会/ 有/ 较/ 好/ 的/ 效果/ ./ 然而/ ,/ Deadline/ 不足以/ 反应/ 多个/ 结构/ 不同/ DAG/ 之间/ 紧急/ 程度/ 的/ 关系/ ./ 例如/ ,/ A/ 和/ B/ 两个/ DAG/ 共享/ 一组/ 定量/ 的/ 资源/ 同时/ 进行/ 混合/ 调度/ ,/ 其中/ A/ 的/ Deadline/ (/ DA/ )/ 较为/ 紧急/ ,/ 接近/ 其/ Mown/ (/ Mown/ 表示/ :/ 当/ 用/ 某个/ 时间/ 最小化/ 的/ 算法/ 对/ DAG/ 单独/ 进行/ 调度/ 的/ makespan/ (/ 调度/ 长度/ )/ [/ 2/ ]/ )/ ,/ 而/ B/ 的/ Deadline/ (/ DB/ )/ 大约/ 为/ 其/ Mown/ 的/ 2/ 倍/ ./ 但/ 如果/ B/ 的/ 任务量/ 较/ 小/ ,/ 很/ 有/ 可能/ 会/ 出现/ DB/ </ DA/ 的/ 情况/ ./ 按照/ EDF/ 方法/ ,/ A/ 的/ 任务/ 只有/ 在/ B/ 中/ 所有/ 任务/ 优先/ 被/ 调度/ 完毕/ 后/ 才能/ 被/ 调度/ ,/ 那么/ A/ 将/ 不能/ 在/ DA/ 之前/ 完成/ ./ 相比之下/ ,/ LLF/ 方法/ [/ 18/ ]/ 会/ 比/ EDF/ 更好/ ,/ 也/ 就是/ 用/ DAG/ 的/ Deadline/ 宽松/ 度/ (/ 即/ DAG/ 的/ Deadline/ 与其/ Mown/ 之间/ 的/ 差值/ )/ 衡量/ DAG/ 完成/ 期限/ 的/ 紧急/ 程度/ ./ 但/ 如果/ 多个/ DAG/ 之间/ 的/ 结构/ 和/ 任务量/ 差异/ 很大/ ,/ 根据/ LLF/ 的/ 方法/ 来/ 决定/ DAG/ 调度/ 的/ 优先级/ ,/ 也/ 不能/ 很/ 好/ 地/ 衡量/ 多个/ DAG/ 之间/ Deadline/ 紧急/ 程度/ 相对/ 差异/ 的/ 大小/ ./ 因此/ EDF/ 和/ LLF/ 方法/ 都/ 不能/ 很/ 好/ 地/ 衡量/ 多个/ DAG/ 之间/ 紧急/ 程度/ 的/ 关系/ ./ 另外/ ,/ 除了/ 对/ DAG/ 紧急/ 程度/ 的/ 衡量/ 以外/ ,/ 对/ “/ 过饱和/ ”/ 情况/ 的/ 探测/ 和/ 处理/ ,/ 如何/ 降低/ 多/ DAG/ 共享资源/ 调度/ 执行/ 的/ 经济/ 费用/ 等/ 问题/ 也/ 都/ 有待/ 解决/ ./ 为/ 解决/ 上述/ 这些/ 问题/ ,/ 本文/ 完成/ 了/ 以下/ 几/ 方面/ 的/ 工作/ :/ 首先/ 提出/ 了/ 衡量/ 每个/ DAG/ 相对/ 于/ 其/ Deadline/ 紧急/ 程度/ 的/ “/ 相对/ 严格/ 程度/ ”/ 和/ “/ 宽松/ 度/ ”/ 的/ 定义/ ,/ 并/ 在/ 此基础/ 上/ 给出/ 了/ 基于/ 相对/ 严格/ 程度/ 的/ 算法/ MDRS/ (/ schedulingforMulti/ -/ DAGswithDead/ -/ linebasedonRelativeStrictness/ )/ 和/ 基于/ LLF/ 方法/ 与/ MDRS/ 相结合/ 的/ 算法/ LLF/ -/ Sim/ -/ MDRS/ (/ schedulingforMulti/ -/ DAGswithDeadlinebasedoncombiningLLFwithMDRS/ )/ ;/ 在/ DAG/ 吞吐量/ 最大化/ 和/ MDRS/ 算法/ 基础/ 上/ ,/ 针对/ 多个/ DAG/ 共享资源/ 调度/ 的/ 费用/ 优化/ 问题/ ,/ 提出/ 了/ 基于/ 单位/ 相对/ 严格/ 程度/ 变化/ 量/ 的/ 费用/ 降低/ 率/ 最大化/ 方法/ 的/ 算法/ CDVRS/ (/ CostDecreasebasedonVarianceoftheRelativeStrict/ -/ ness/ )/ ./ 另外/ 为了/ 比较/ 各个/ 算法/ 在/ 调度/ 和/ 费用/ 优化/ 性能/ 等/ 方面/ 的/ 优劣/ ,/ 本文/ 也/ 提出/ 了/ 3/ 个/ 新/ 的/ 衡量/ 算法/ 性能/ 的/ 指标/ :/ 相对/ 于/ Deadline/ 的/ 满意度/ 、/ 规范化/ 总费用/ 和/ 费用/ 优化/ 的/ 公平性/ ./ 本文/ 第/ 2/ 节/ 包括/ 问题/ 的/ 描述/ 、/ 相关/ 的/ 定义/ 、/ DAG/ 吞吐量/ 最大化/ 的/ 算法/ MDRS/ 、/ LLF/ -/ Sim/ -/ MDRS/ 算法/ 和/ 费用/ 优化/ 算法/ CDVRS/ ;/ 第/ 3/ 节/ 给出/ 实验/ 设置/ 和/ 各个/ 算法/ 实验/ 结果/ 的/ 比较/ 分析/ ;/ 第/ 4/ 节是/ 结论/ 和/ 展望/ ./ 2/ 多/ DAG/ 调度/ 吞吐量/ 最大化/ 及/ 费用/ 优化/ 两/ 阶段/ 策略/ 2.1/ 有/ 期限/ 约束/ 的/ 多/ DAG/ 共享/ 异构/ 资源/ 的/ 调度/ 及/ 费用/ 优化/ 问题/ n/ 个/ 由/ 用户/ 指定/ 了/ 完成/ 期限/ Deadline/ 的/ DAG/ (/ G1/ ,/ G2/ ,/ …/ ,/ Gi/ ,/ …/ ,/ Gn/ )/ 共享/ q/ 个/ 异构/ 分布式系统/ 资源/ (/ M1/ ,/ M2/ ,/ …/ ,/ Mi/ ,/ …/ ,/ Mq/ )/ 同时/ 进行/ 调度/ ./ 其中/ ,/ 这组/ 异构/ 分布式/ 资源/ 环境/ 的/ 网络拓扑/ 连接/ 、/ 通信/ 特性/ 、/ DAG/ 任务模型/ 及/ 模型/ 中/ 每个/ 任务/ 的/ 向上/ 权值/ ranku/ (/ ni/ )/ 等/ 与/ 著名/ 的/ HEFT/ (/ HeterogeneousEarliestFinishTime/ )/ 算法/ 文献/ [/ 20/ ]/ 中/ 有关/ 的/ 假设/ 、/ 定义/ 和/ 计算方法/ 一致/ ,/ 这里/ 不再/ 赘述/ ./ 关于/ 任务/ 在/ 资源/ 上/ 执行/ 的/ 经济/ 费用/ ,/ 文献/ [/ 10/ -/ 12/ ]/ 假设/ 了/ 任务/ 在/ 资源/ 上/ 运行/ 的/ 时间/ 越短/ ,/ 其/ 经济/ 费用/ 也/ 越/ 高/ ,/ 而/ 在/ 文献/ [/ 14/ ]/ 中/ 假设/ 了/ 每个/ 机器/ 都/ 有/ 一个/ 单位/ 时间/ 使用/ 价格/ ./ 因此/ ,/ 我们/ 也/ 类似/ 地/ 假设/ 计算资源/ Mi/ 依据/ 其/ 提供/ 的/ 服务/ 及/ 运算/ 速度/ 有/ 一个/ 单位/ 时间/ 的/ 使用/ 价格/ pMi/ ./ 任务/ 在/ 每个/ 资源/ 上/ 执行/ 的/ 时间/ 都/ 不/ 一样/ ,/ 在/ 价格/ 较/ 高/ 或/ 费用/ 较大/ 资源/ 上/ 的/ 执行/ 时间/ 也/ 较/ 短/ ./ 若/ 某/ DAGGi/ 中/ 的/ 第/ k/ 个/ 任务/ Gi/ -/ k/ 在/ 某/ 资源/ Mi/ 上/ 的/ 执行/ 时间/ 为/ wGi/ -/ k/ ,/ Mi/ ,/ 则/ 任务/ Gi/ -/ k/ 在/ Mi/ 上/ 经济/ 费用/ 应为/ pMi/ ·/ wGi/ -/ k/ ,/ Mi/ ./ 另外/ ,/ 若/ 某/ DAGGi/ 的/ Deadline/ 表示/ 为/ tDeadline/ -/ Gi/ ,/ 与/ 文献/ [/ 11/ -/ 12/ ]/ 一样/ ,/ 我们/ 也/ 假设/ 该/ DAG/ 的/ tDeadline/ -/ Gi/ >/ Mown/ ,/ 其中/ 对/ Gi/ 的/ Mown/ 值/ 的/ 计算/ 采用/ 著名/ 的/ 时间/ 最小化/ 算法/ HEFT/ ./ 最终/ 调度/ 目标/ :/ 使得/ 这组/ 能够/ 在/ 期限内/ 调度/ 完成/ 的/ DAG/ 吞吐量/ (/ 数量/ )/ 最大化/ ,/ 并/ 在/ 此基础/ 上/ 尽可能/ 公平/ 地/ 降低/ 所有/ 能/ 在/ 期限内/ 完成/ 的/ DAG/ 总/ 的/ 执行/ 费用/ ./ Page4/ 由于/ 这些/ 来自/ 不同/ 用户/ 的/ DAG/ 的/ Deadline/ 是/ 由/ 用户/ 根据/ 需要/ 指定/ 的/ ,/ 具有/ 一定/ 的/ 任意性/ ,/ 因此/ 各个/ DAG/ 相对/ 于/ 其/ Deadline/ 的/ 紧急/ 程度/ 都/ 可能/ 不/ 一样/ ./ 显然/ ,/ DAG/ 中/ 各/ 任务/ 尽量/ 选择/ 费用/ 较/ 低/ 的/ 资源/ (/ 因而/ 速度/ 也/ 较慢/ [/ 11/ ]/ )/ 意味着/ 整个/ DAG/ 的/ 完成/ 时间/ 很/ 可能/ 要/ 滞后/ ,/ 并且/ 很/ 可能/ 会/ 出现/ “/ 过饱和/ ”/ 情况/ ./ 因此/ ,/ 在/ 费用/ 优化/ 前/ ,/ 需要/ 一种/ 能够/ 根据/ DAG/ 的/ Deadline/ 的/ 不同/ 紧急/ 程度/ 来/ 确定/ 不同/ DAG/ 任务调度/ 先后/ 关系/ 的/ 时间/ 最小化/ 的/ 预/ 调度/ 算法/ ,/ 来/ 探测/ 可能/ 存在/ 的/ “/ 过饱和/ ”/ 情况/ ,/ 并/ 确定/ 最终/ 可/ 同时/ 调度/ 完成/ 的/ DAG/ 最大/ 数量/ 以及/ 各/ DAG/ 的/ 最早/ 完成/ 时间/ ./ 当/ 这些/ 确定/ 以后/ ,/ 如果/ 这组/ DAG/ 仍/ 有/ 冗余/ 时间/ ,/ 再/ 进行/ 费用/ 优化/ 是/ 一种/ 合理/ 可行/ 的/ 方案/ ./ 因此/ 本文/ 提出/ 了/ 以下/ 2.2/ 节中/ 期限内/ 完成/ 的/ DAG/ 吞吐量/ 最大化/ 和/ 2.3/ 节中/ 费用/ 优化/ 两个/ 阶段/ 的/ 算法/ ./ 2.2/ 第/ 1/ 阶段/ 的/ DAG/ 吞吐量/ 最大化/ 调度/ 算法/ 及/ 2.2/ ./ 1/ 期限/ 紧急/ 程度/ 的/ 衡量/ 方法/ 及/ MDRS/ 算法/ 相关/ 性能指标/ (/ 1/ )/ 期限/ 紧急/ 程度/ 的/ 衡量/ 方法/ 在/ 某个/ 关于/ 单/ DAG/ 调度/ 的/ 时间/ 最小化/ 算法/ 下/ ,/ 每个/ DAG/ 的/ Mown/ 容易/ 计算/ 得到/ ./ 本文/ 也/ 采用/ 著名/ 的/ HEFT/ 算法/ 来/ 计算/ 每个/ DAG/ 的/ Mown/ ./ 如果/ 某个/ DAGGi/ 在/ HEFT/ 算法/ 下/ 的/ Mown/ 被/ 表示/ 为/ tM/ -/ Gi/ -/ SHEFT/ -/ own/ ,/ 那么/ Gi/ 的/ 初始/ 相对/ 严格/ 程度/ 被/ 定义/ 为/ rori/ -/ un/ (/ Gi/ )/ -/ SHEFT/ =/ tM/ -/ Gi/ -/ SHEFT/ -/ own/ // tDeadline/ -/ Gi/ (/ 1/ )/ 假设/ 在/ 调度/ 的/ 任务/ 资源/ 映射/ 过程/ 中/ ,/ 某个/ 时间/ 点上/ ,/ 某/ Gi/ 仍/ 有/ 剩余/ 的/ 未/ 被/ 调度/ 任务/ ,/ 这些/ 任务/ 被/ 表示/ 为/ un/ (/ Gi/ )/ ./ 在/ 资源/ 被/ 已/ 调度/ 任务/ 占用/ 的/ 情况/ 下/ ,/ 如果/ 利用/ HEFT/ 对/ un/ (/ Gi/ )/ 中/ 所有/ 任务/ 进行/ 调度/ 后/ ,/ un/ (/ Gi/ )/ 中/ 任务/ 在/ 资源/ 上/ 最早/ 的/ 开始/ 时间/ 为/ tsun/ (/ Gi/ )/ -/ SHEFT/ ,/ 最早/ 完成/ 时间/ 为/ tfun/ (/ Gi/ )/ -/ SHEFT/ ,/ 那么/ un/ (/ Gi/ )/ 的/ makespan/ (/ 调度/ 长度/ )/ 表示/ 为/ mun/ (/ Gi/ )/ -/ SHEFT/ =/ tfun/ (/ Gi/ )/ -/ SHEFT/ -/ tsun/ (/ Gi/ )/ -/ SHEFT/ ;/ 相对/ 于/ Gi/ 的/ Deadline/ ,/ un/ (/ Gi/ )/ 的/ 可用/ 时间/ 表示/ 为/ mavail/ -/ un/ (/ Gi/ )/ =/ tDeadline/ -/ Gi/ -/ tsun/ (/ Gi/ )/ -/ SHEFT/ ,/ 那么/ Gi/ 中/ 所有/ 剩余/ 未/ 被/ 调度/ 任务/ 当前/ 的/ 相对/ 严格/ 程度/ 被/ 定义/ 为/ 而/ Gi/ 中/ 所有/ 未/ 被/ 调度/ 任务/ 当前/ 的/ 宽松/ 度/ 被/ 定义/ 为/ lun/ (/ Gi/ )/ -/ SHEFT/ =/ mavail/ -/ un/ (/ Gi/ )/ -/ mun/ (/ Gi/ )/ -/ SHEFT/ (/ 2/ )/ 基于/ 相对/ 严格/ 程度/ 的/ MDRS/ 算法/ 第/ 1/ 步/ :/ 所有/ DAG/ 中/ 第/ 1/ 个/ 任务/ 的/ 选择/ 和/ 调度/ ./ 第/ 1/ 个/ 要/ 调度/ 的/ 任务/ 是从/ rori/ -/ un/ (/ Gi/ )/ -/ SHEFT/ 值/ 最大/ 的/ DAG/ 中/ 选择/ 向上/ 权值/ ranku/ (/ ni/ )/ 最高/ 的/ 任务/ ,/ 并/ 对/ 其用/ HEFT/ 进行/ 调度/ ./ 第/ 2/ 步/ :/ 第/ 2/ 个/ 及/ 后续/ 所有/ 任务/ 的/ 选择/ 及/ 调度/ ./ 每当/ 上次/ 选择/ 的/ 任务/ 经/ HEFT/ 算法/ 调度/ 后/ ,/ 计算/ 每个/ DAG/ 所有/ 剩余/ 未/ 被/ 调度/ 任务/ 的/ 相对/ 严格/ 程度/ run/ (/ Gi/ )/ -/ SHEFT/ ,/ 然后/ 从/ run/ (/ Gi/ )/ -/ SHEFT/ 值/ 最大/ 的/ DAG/ 中/ 选取/ 剩余/ 任务/ 中/ 向上/ 权值/ ranku/ (/ ni/ )/ 最高/ 的/ 任务/ ,/ 并/ 利用/ HEFT/ 进行/ 调度/ ./ 重复/ 这一/ 过程/ ,/ 直到/ 所有/ DAG/ 的/ 任务调度/ 完毕/ ./ 在/ 计算/ run/ (/ Gi/ )/ -/ SHEFT/ 时/ 之所以/ 采用/ HEFT/ 算法/ ,/ 是/ 由于/ 在/ 资源/ 被/ 已/ 调度/ 任务/ 占用/ 的/ 情况/ 下/ ,/ 利用/ 时间/ 最小化/ 的/ HEFT/ 算法/ 来/ 计算/ Gi/ 剩余/ 任务/ 的/ makespan/ ,/ 更能/ 直接/ 反映/ 某个/ DAG/ 相对/ 于/ 其/ Deadline/ 的/ 紧急/ 程度/ ./ 如果/ 一旦/ 发现/ 某个/ DAG/ 的/ 剩余/ 任务/ 利用/ 最小化/ 时间/ 方法/ 调度/ 所/ 需/ 时间/ 等于/ 其/ 剩余/ 可用/ 时间/ ,/ 可以/ 优先/ 利用/ HEFT/ 算法/ 调度/ 该/ DAG/ 的/ 剩余/ 全部/ 任务/ ,/ 以/ 保证/ 其/ 在/ 期限内/ 完成/ ./ 可以/ 看出/ ,/ 这里/ 的/ 相对/ 严格/ 程度/ 实际上/ 就是/ 对/ DAG/ 期限/ 的/ 紧急/ 程度/ 的/ 一种/ 衡量/ 方法/ ./ 当然/ ,/ 上述/ 第/ 2/ 个/ 任务/ 及/ 后续/ 所有/ 任务/ 的/ 选择/ 及/ 调度/ 过程/ 中/ 可能/ 会/ 出现/ 更为/ 复杂/ 的/ 情况/ ,/ 如/ “/ run/ (/ Gi/ )/ -/ SHEFT/ / 1/ ”/ 、/ “/ run/ (/ Gi/ )/ -/ SHEFT/ </ 0/ (/ 随着/ 已/ 调度/ 任务/ 的/ 增多/ 有/ 可能/ 会/ 出现/ “/ tsun/ (/ Gi/ )/ -/ SHEFT/ >/ tDeadline/ -/ Gi/ ”/ 的/ 情况/ )/ 或/ “/ 过饱和/ ”/ 情况/ 等/ ./ 针对/ 这些/ 情况/ 的/ 处理/ 见/ 以下/ 完整/ 算法/ MDRS/ ./ 算法/ 1/ ./ 基于/ 相对/ 严格/ 程度/ 的/ 算法/ MDRS/ ./ 输入/ :/ Gunsche/ ←/ Gi/ (/ i/ =/ 1/ ,/ 2/ ,/ …/ ,/ n/ )/ ;/ 输出/ :/ Ssche1/ ./ (/ 1/ )/ 根据/ 以下/ 3/ 步/ 从/ Gunsche/ 中/ 选出/ 第/ 1/ 个/ 任务/ 并/ 调度/ :/ 2/ ./ 计算/ 所有/ DAG/ 的/ 初始/ 相对/ 严格/ 程度/ 3/ ./ 选择/ rori/ -/ un/ (/ Gi/ )/ -/ SHEFT/ 值/ 最大/ 的/ Gi/ ,/ 并/ 从/ 对应/ 的/ 4/ ./ 从/ Gi/ -/ unsche/ 删除/ 该/ 任务/ ;/ 5/ ./ (/ 2/ )/ 对/ 第/ 2/ 个/ 任务/ 及/ 后续/ 所有/ 任务/ 的/ 选择/ 和/ 调度/ :/ 6/ ./ WHILE/ (/ Gunsche/ ≠/ / )/ DO/ #/ // / 便于/ 引述/ ,/ 该/ 循环/ 在/ 7/ ./ 计算/ run/ (/ Gi/ )/ -/ SHEFT/ (/ / Gi/ ∈/ Gunsche/ )/ ;/ Page58/ ./ IF/ (/ 0/ </ run/ (/ Gi/ )/ -/ SHEFT/ </ 1/ / / Gi/ ∈/ Gunsche/ )/ THEN9/ ./ 选择/ run/ (/ Gi/ )/ -/ SHEFT/ 值/ 最大/ 的/ Gi/ ,/ 并/ 从/ 对应/ 的/ Gi/ -/ unsche10/ ./ IF/ (/ 相对/ 应/ 的/ Gi/ -/ unsche/ =/ / )/ THEN11/ ./ 将/ Gi/ 从/ Gunsche/ 中/ 删除/ (/ 即/ 修改/ Gunsche/ )/ ;/ 12/ ./ ENDIF13/ ./ ELSE14/ ./ IF/ (/ 存在/ 有/ DAG/ 的/ run/ (/ Gi/ )/ -/ SHEFT/ =/ 1/ ,/ 且/ 其余/ DAG15/ ./ 将/ Gunsche/ 中/ 所有/ run/ (/ Gi/ )/ -/ SHEFT/ =/ 1/ 中/ tM/ -/ Gi/ -/ SHEFT/ -/ own16/ ./ ELSE17/ ./ IF/ (/ 出现/ 有/ DAG/ 的/ run/ (/ Gi/ )/ -/ SHEFT/ >/ 1/ 或/ 18/ ./ IF/ (/ 在/ “/ WHILEDO/ ”/ #/ 循环/ 中/ ,/ 本次/ 不是/ 连续/ 第/ 219/ ./ 从/ 堆栈/ Ssche/ 中弹/ 出/ 上/ 一次/ 压入/ 堆栈/ 的/ 已/ 分配/ 20/ ./ 将/ 弹出/ 的/ 任务/ 加入/ 到/ 相应/ 的/ Gi/ -/ unsche/ 中/ ,/ 修改/ 21/ ./ 将/ “/ run/ (/ Gi/ )/ -/ SHEFT/ >/ 1/ ”/ 或/ “/ run/ (/ Gi/ )/ -/ SHEFT/ </ 0/ ”/ 中/ 最/ 22/ ./ ELSE23/ ./ IF/ (/ 在/ “/ WHILEDO/ ”/ #/ 循环/ 中/ ,/ 本次/ 是/ 连续/ 第/ 224/ ./ 在/ 本次/ 所有/ “/ run/ (/ Gi/ )/ -/ SHEFT/ >/ 1/ ”/ 或/ “/ run/ (/ Gi/ )/ -/ SHEFT/ </ 25/ ./ 对/ ssche/ 做出/ 栈/ 操作/ ,/ 直到/ 属于/ 被/ 取消/ DAG/ 中/ 26/ ./ 除/ 属于/ 被/ 取消/ DAG/ 的/ 任务/ 外/ ,/ 将/ 这些/ 弹/ 出/ // / 在/ MDRS/ 算法/ 中/ ,/ 如果/ 在/ “/ WHILE27/ ./ ENDIF28/ ./ ENDIF29/ ./ ENDIF30/ ./ ENDIF31/ ./ ENDIF32/ ./ ENDWHILE33/ ./ RETURNSsche/ 如果/ 一个/ DAG/ 有/ v/ 个/ 顶点/ 任务/ ,/ 机器/ 的/ 数量/ 为/ q/ ,/ 则/ HEFT/ 算法/ 在/ 最坏/ 情况/ 下/ 的/ 时间/ 复杂度/ 为/ O/ (/ v2/ ×/ q/ )/ [/ 20/ ]/ ./ 对/ MDRS/ 来说/ ,/ 如果/ 共有/ n/ 个/ DAG/ 同时/ 需要/ 调度/ ,/ 并且/ 在/ 没有/ “/ 过饱和/ ”/ 发生/ 的/ 情况/ 下/ ,/ HEFT/ 算法/ 将/ 最多会/ 被/ MDRS/ 调用/ 1/ // 2/ ·/ (/ n2/ +/ n/ )/ ·/ v/ 次/ ,/ 因此/ 它/ 的/ 时间/ 复杂度/ 为/ O/ (/ n2/ ·/ v3/ ·/ q/ )/ ./ 如果/ 有/ “/ 过饱和/ ”/ 发生/ ,/ 在/ 最坏/ 的/ 情况/ 下/ ,/ 即/ 有/ n/ -/ 1/ 个/ DAG/ 需要/ 丢弃/ ,/ 那么/ 算法/ HEFT/ 将/ 最多会/ 被/ MDRS/ 调用/ 1/ // 6/ ·/ n/ ·/ (/ n/ +/ 1/ )/ ·/ (/ 2n/ +/ 1/ )/ ·/ v/ 次/ ,/ 因此/ 它/ 的/ 时间/ 复杂度/ 为/ O/ (/ n3/ ·/ v3/ ·/ q/ )/ ./ 因此/ 算法/ 能够/ 在/ 幂次/ 多项式/ 的/ 时间/ 复杂度/ 内/ 提供/ 一个/ 解决方案/ ./ 2.2/ ./ 2/ 基于/ LLF/ 方法/ 与/ MDRS/ 相结合/ 的/ 算法/ 正/ 如前所述/ ,/ 与/ EDF/ 方法/ 相比/ ,/ 将/ LLF/ 方法/ 中/ 的/ 宽松/ 度/ 作为/ 衡量/ Deadline/ 的/ 紧急/ 程度/ 是/ 一种/ 更好/ 的/ 选择/ ./ 因此/ ,/ 如果/ 将/ LLF/ 方法/ 与/ MDRS/ 相结合/ ,/ 我们/ 就/ 得到/ 了/ 使得/ 期限内/ 完成/ 的/ DAG/ 吞吐量/ 最大化/ 的/ 另/ 一种/ 可/ 选/ 算法/ LLF/ -/ Sim/ -/ MDRS/ ./ 简单/ 来说/ ,/ 该/ 算法/ 就是/ 用/ 2.2/ ./ 1/ 小节/ 定义/ 的/ 宽松/ 度来/ 衡量/ 某/ DAG/ 未/ 调度/ 任务/ 的/ 紧急/ 程度/ ,/ 并且/ 每次/ 根据/ 宽松/ 度来/ 决定/ 下/ 一次/ 将/ 从/ 哪个/ DAG/ 中/ 选取/ 要/ 调度/ 的/ 任务/ ./ 宽松/ 度/ 小/ 的/ DAG/ 中/ 的/ 任务/ 优先/ 被/ 调度/ ,/ 即用/ lun/ (/ Gi/ )/ -/ SHEFT/ =/ mavail/ -/ un/ (/ Gi/ )/ -/ mun/ (/ Gi/ )/ -/ SHEFT/ 替换/ MDRS/ 算法/ 中/ 的/ 相对/ 严格/ 程度/ run/ (/ Gi/ )/ -/ SHEFT/ ./ 另外/ 需注意/ 的/ 是/ :/ 在/ 算法/ MDRS/ 中/ “/ run/ (/ Gi/ )/ -/ SHEFT/ =/ 1/ ”/ 对应/ 于/ 算法/ LLF/ -/ Sim/ -/ MDRS/ 中/ 的/ lun/ (/ Gi/ )/ -/ SHEFT/ =/ 0/ ,/ 并且/ 在/ LLF/ -/ Sim/ -/ MDRS/ 中/ ,/ 被/ 视作/ “/ 过饱和/ ”/ 情况/ 发生/ 的/ 条件/ 也/ 应/ 调整/ 为/ “/ 在/ WHILEDO/ #/ 循环/ 中/ 连续/ 第/ 2/ 次/ 出现/ “/ lun/ (/ Gi/ )/ -/ SHEFT/ </ 0/ ”/ ./ 本文/ 将/ 这种/ 替换/ 后/ 的/ 算法/ 称为/ LLF/ -/ Sim/ -/ MDRS/ 算法/ ./ LLF/ -/ Sim/ -/ MDRS/ 算法/ 可以/ 看作/ 是/ 根据/ 每个/ DAG/ 的/ 冗余/ 时间/ 大小/ 来/ 衡量/ DAG/ 的/ Dead/ -/ line/ 紧急/ 程度/ ,/ 进而/ 决定/ 多个/ DAG/ 中/ 任务调度/ 的/ 先后顺序/ ,/ 是/ 一种/ 可/ 供选择/ 的/ 调度/ 方法/ ./ 与/ EDF/ 方法/ 类似/ ,/ LLF/ -/ Sim/ -/ MDRS/ 算法/ 中/ 所/ 使用/ 的/ 宽松/ 度/ 也/ 是/ 一种/ 用/ 绝对量/ 来/ 衡量/ DAG/ 的/ Deadline/ 紧急/ 程度/ 的/ 方法/ ,/ 因此/ 适用/ 于/ 多个/ DAG/ 的/ 结构/ 和/ 任务量/ 差异/ 较/ 小/ 的/ 情况/ ./ 2.2/ ./ 3/ 期限内/ DAG/ 的/ 完成率/ 和/ 相对/ 于/ Deadline/ 若/ 利用/ 某/ 调度/ 算法/ S/ 对/ 所有/ DAG/ 同时/ 混合/ 调/ Page6k/ =/ 1/ 度/ 完毕/ 后/ ,/ 能够/ 在/ 各自/ Deadline/ 内/ 完成/ 的/ DAG/ 数量/ 表示/ 为/ nc/ ,/ 则/ nc/ // n/ ·/ 100/ %/ 为/ 完成率/ Rc/ ,/ 该值/ 越/ 高/ ,/ 说明/ 算法/ 能/ 根据/ Deadline/ 的/ 紧急/ 程度/ 合理安排/ 多个/ DAG/ 之间/ 的/ 调度/ 关系/ ,/ 使得/ 调度/ 系统/ 的/ DAG/ 吞吐量/ 越高/ ./ 在/ 这些/ 期限内/ 完成/ 的/ nc/ 个/ DAG/ 中/ ,/ 如果/ 第/ k/ 个/ DAG/ 的/ Deadline/ 为/ tDeadline/ -/ Gk/ ,/ 它/ 的/ makespan/ 为/ tM/ -/ Gk/ -/ S/ ,/ 第/ k/ 个/ DAG/ 的/ makespan/ 与其/ Deadline/ 的/ 比值/ rGk/ -/ S/ =/ tM/ -/ Gi/ -/ S/ // tDeadline/ -/ Gk/ ,/ 则/ 这/ nc/ 个/ DAG/ 在/ 调度/ 策略/ S/ 下/ 混合/ 调度/ 后/ rGk/ -/ S/ (/ k/ =/ 1/ ,/ …/ ,/ nc/ )/ 的/ 均值/ Avg/ (/ rGk/ -/ S/ )/ =/ 1/ 略/ S/ 下/ 的/ 各/ DAG/ 完成/ 时间/ 接近/ 各自/ Deadline/ 的/ 程度/ ,/ 表示/ 为/ Accessness/ (/ S/ )/ ./ 在/ Rc/ 相同/ 的/ 情况/ 下/ ,/ Accessness/ (/ S/ )/ 越高/ ,/ 说明/ 各/ DAG/ 完成/ 时间/ 越/ 接近/ 各自/ Deadline/ ;/ 而/ 这/ nc/ 个/ DAG/ 在/ 调度/ 策略/ S/ 下/ 调度/ 后/ rGk/ -/ S/ (/ k/ =/ 1/ ,/ 2/ ,/ …/ ,/ nc/ )/ 的/ 标准差/ Dev/ (/ rGk/ -/ S/ )/ =/ nc/ ∑/ nc/ 槡/ 1/ 略/ S/ 相对/ 于/ Deadline/ 的/ 公平性/ ,/ 表示/ 为/ Fairness/ (/ S/ )/ ./ 在/ Rc/ 相同/ 的/ 情况/ 下/ ,/ Fairness/ (/ S/ )/ 越小/ ,/ 说明/ 所有/ 能够/ 在/ 期限内/ 完成/ 的/ DAG/ 的/ 完成/ 时间/ 与其/ Deadline/ 的/ 比值/ 相互之间/ 就/ 越/ 接近/ ,/ 调度/ 策略/ S/ 相对/ 于/ Deadline/ 的/ 公平性/ 也/ 就/ 越/ 好/ ./ 在/ Rc/ 相同/ 的/ 情况/ 下/ ,/ 如果/ Accessness/ (/ S/ )/ 较/ 高/ ,/ 说明/ 所有/ DAG/ 的/ 完成/ 时间/ 与/ 各自/ Deadline/ 平均/ 接近/ 程度较高/ ,/ 但/ 同时/ 如果/ Fairness/ (/ S/ )/ 也/ 较/ 高/ ,/ 则/ 表明/ 多个/ DAG/ 之间/ 的/ 完成/ 时间/ 与/ 各自/ Deadline/ 的/ 接近/ 程度/ 差异/ 水平/ 较大/ ,/ 那么/ 调度/ 的/ 公平性/ 就/ 较差/ ,/ 因此/ Accessness/ (/ S/ )/ 和/ Fairness/ (/ S/ )/ 都/ 不能/ 单独/ 衡量/ 调度/ 的/ 好坏/ ./ 因此/ 本文/ 定义/ 了/ 以下/ 关于/ 调度/ 策略/ S/ 相对/ 于/ Deadline/ 的/ 满意度/ 指标/ :/ Satisfaction/ (/ S/ )/ =/ Accessness/ (/ S/ )/ // Fairness/ (/ S/ )/ (/ 4/ )/ 如果/ 一组/ DAG/ 经过/ 调度/ 策略/ S/ 调度/ 后/ ,/ Satisfaction/ (/ S/ )/ 越大/ ,/ 说明/ 调度/ 策略/ S/ 的/ 调度/ 相对/ 于/ Deadline/ 的/ 满意度/ 性能/ 越好/ ./ 2.3/ 第/ 2/ 阶段/ 的/ 费用/ 优化/ 算法/ 及/ 相关/ 性能指标/ 经过/ 第/ 1/ 阶段/ MDRS/ 算法/ 调度/ 给出/ 了/ DAG/ 吞吐量/ 最大化/ 的/ 预/ 调度/ 方案/ 后/ ,/ 如果/ 确定/ 了/ 一组/ n/ 个/ DAG/ 中/ 在/ Deadline/ 内/ 完成/ 的/ DAG/ 最大/ 数量/ 为/ nc/ ,/ 并且/ 这/ nc/ 个/ DAG/ 中/ 相对/ 于/ 各自/ Deadline/ 仍/ 存在/ DAG/ 有/ 冗余/ 时间/ ,/ 这/ 意味着/ 可以/ 进行/ 第/ 2/ 阶段/ 的/ 费用/ 优化/ ,/ 将/ 更/ 便宜/ 的/ 机器/ 资源分配/ 给/ 有关/ 任务/ ./ 最终/ 的/ 优化/ 目标/ 为/ :/ 尽可能/ 公平/ 地/ 降低/ 所有/ nc/ 个/ DAG/ 总/ 的/ 执行/ 费用/ ,/ 同时/ 满足/ 这/ nc/ 个/ DAG/ 能够/ 在/ 各自/ 期限内/ 完成/ 的/ 约束条件/ ./ 由于/ 每个/ 资源/ 的/ 单位/ 时间/ 使用/ 价格/ 是/ 确定/ 的/ ,/ 并且/ 按照/ 文献/ [/ 20/ ]/ 的/ 假设/ ,/ 每个/ 任务/ 在/ 每个/ 机器/ 资源/ 上/ 的/ 估计/ 执行/ 时间/ 也/ 是/ 已知/ 的/ ,/ 因此/ 只要/ 算法/ 确定/ 了/ 每个/ DAG/ 所有/ 任务/ 在/ 资源/ 上/ 映射/ 关系/ ,/ 也/ 就/ 确定/ 了/ 每个/ DAG/ 在/ 资源/ 上/ 执行/ 的/ 费用/ 和/ 所有/ DAG/ 调度/ 执行/ 的/ 总费用/ ./ 针对/ 第/ 2/ 阶段/ 的/ 费用/ 优化/ 问题/ ,/ 本/ 节/ 提出/ 了/ 基于/ 单位/ 相对/ 严格/ 程度/ 变化/ 量/ 的/ 费用/ 降低/ 率/ 最大化/ 的/ 费用/ 优化/ 算法/ CDVRS/ ./ 另外/ ,/ 为了/ 比较/ 不同/ 算法/ 对/ 多个/ DAG/ 共享/ 有限/ 资源/ 调度/ 的/ 总费用/ 和/ 各/ DAG/ 之间/ 的/ 费用/ 降低/ 率/ 是否/ 公平/ ,/ 又/ 给出/ 了/ 规范化/ 总费用/ 指标/ NC/ -/ multiDAG/ (/ S/ )/ 和/ 费用/ 优化/ 的/ 相对/ 公平性/ 指标/ FCost/ (/ S/ -/ Spre/ )/ 的/ 定义/ ./ 2.3/ ./ 1/ 公平/ 的/ 费用/ 优化/ 算法/ CDVRSCDVRS/ 算法/ 基本/ 过程/ 为/ :/ 首先/ 对/ 第/ 1/ 阶段/ 的/ MDRS/ 算法/ 所/ 筛选/ 出/ 的/ 这些/ DAG/ 的/ 所有/ 任务/ 都/ 赋/ 给/ 未/ 优化/ 任务/ 集合/ ,/ 已/ 优化/ 任务/ 集合/ 初始/ 为空/ ./ 然后/ ,/ 每次/ 利用/ MDRS/ 算法/ 来/ 确定/ 下/ 一个/ 要/ 优化/ 的/ 调度/ 任务/ ./ 当/ 确定/ 了/ 要/ 优化/ 的/ 任务/ 后/ ,/ 对/ 这个/ 任务/ 的/ 优化/ 方法/ 是/ :/ 在/ 本次/ MDRS/ 算法/ 确定/ 的/ 资源/ MHEFT/ (/ 由于/ MDRS/ 算法/ 在/ 选择/ 了/ 某个/ 任务/ 后/ 将/ 用/ HEFT/ 算法/ 调度/ 该/ 任务/ ,/ 因此/ 该/ 资源/ 记为/ MHEFT/ )/ 和/ 所有/ 比/ MHEFT/ 更为/ 便宜/ 的/ 资源/ 中/ ,/ 利用/ 单位/ 相对/ 严格/ 程度/ 变化/ 量/ 的/ 费用/ 降低/ 率/ 最大化/ 的/ 方法/ 做出/ 选择/ ./ 该/ 任务/ 优化/ 后/ ,/ 将/ 该/ 任务/ 转移/ 至/ 已/ 优化/ 任务/ 集合/ ,/ 直到/ 未/ 优化/ 任务/ 集合/ 变空/ 为止/ ./ 以下/ 介绍/ 具体/ 优化/ 过程/ 及/ 相关/ 符号/ 表示/ ./ 在/ 已/ 优化/ 任务/ 占用/ 了/ 资源/ 的/ 情况/ 下/ ,/ 利用/ MDRS/ 算法/ 对/ 所有/ 未/ 被/ 优化/ 过/ 的/ 任务/ 进行/ 预/ 调度/ ./ 假设/ 在/ 这次/ 预/ 调度/ 中/ 第一个/ 被/ 选择/ 调度/ 的/ 任务/ 为/ Gi/ 中/ 的/ 第/ k/ 个/ 任务/ ,/ 被/ 记为/ Gi/ -/ k/ ,/ 并且/ 该/ 任务/ 所/ 分配/ 的/ 资源/ 记为/ MHEFT/ ,/ 任务/ -/ 资源/ 映射/ 关系/ 记/ 为/ (/ Gi/ -/ k/ ,/ MHEFT/ )/ ,/ 这个/ 映射/ 后/ 某个/ DAGGi/ 的/ 相对/ 严格/ 程度/ 表示/ 为/ run/ (/ Gi/ )/ -/ SHEFT/ // (/ Gi/ -/ k/ ,/ MHEFT/ )/ (/ 它/ 的/ 计算方法/ 同/ 2.2/ ./ 1/ 节/ 的/ 相对/ 严格/ 程度/ 计算方法/ )/ ./ 而待/ 优化/ 任务/ Gi/ -/ k/ 在/ 选择/ 资源/ MHEFT/ 上/ 的/ 费用/ 表示/ 为/ Cost/ (/ Gi/ -/ k/ ,/ MHEFT/ )/ =/ pMHEFT/ ·/ wGi/ -/ k/ ,/ MHEFT/ (/ 其中/ pMHEFT/ 为/ 资源/ MHEFT/ 的/ 单位/ 时间/ 价格/ ,/ wGi/ -/ k/ ,/ MHEFT/ 表示/ 任务/ Gi/ -/ k/ 在/ MHEFT/ 上/ 的/ 执行/ 时间/ )/ ./ 假设/ 此时/ 在/ 所有/ 资源/ 中/ ,/ 对/ 任务/ Gi/ -/ k/ 来说/ ,/ 费用/ 比/ MHEFT/ 便宜/ 的/ 资源/ 集合/ 为/ MGi/ -/ k/ ,/ 那么/ 当/ 任务/ Gi/ -/ k/ 选择/ 了/ 比/ MHEFT/ 更为/ 便宜/ 的/ 资源/ Mchea/ (/ / Mchea/ ∈/ MGi/ -/ k/ )/ 时/ ,/ 某个/ DAGGi/ 的/ 剩余/ 未/ 优化/ 任务/ 的/ 相对/ 严格/ 程度/ 就/ 表示/ 为/ run/ (/ Gi/ )/ -/ SHEFT/ // (/ Gi/ -/ k/ ,/ Mchea/ )/ ;/ 而/ Cost/ (/ Gi/ -/ k/ ,/ Mchea/ )/ =/ pMchea/ ·/ wGi/ -/ k/ ,/ Mchea/ 则/ 表示/ Gi/ -/ k/ 在/ Mchea/ 的/ 费用/ (/ 其中/ pMchea/ 为/ Page7/ 资源/ Mchea/ 的/ 价格/ ,/ wGi/ -/ k/ ,/ Mchea/ 为/ 任务/ Gi/ -/ k/ 在/ Mchea/ 上/ 的/ 执行/ 时间/ )/ ./ 至此/ 可以/ 得到/ :/ 当/ 任务/ Gi/ -/ k/ 选择/ 了/ 某个/ 比/ MHEFT/ 更为/ 便宜/ 的/ 资源/ Mchea/ (/ / Mchea/ ∈/ MGi/ -/ k/ )/ 后/ ,/ 费用/ 的/ 降低/ 量/ 为/ Cost/ (/ Gi/ -/ k/ ,/ MHEFT/ )/ -/ Cost/ (/ Gi/ -/ k/ ,/ Mchea/ )/ ,/ 各/ DAG/ 剩余/ 未/ 优化/ 任务/ 的/ run/ (/ Gi/ )/ -/ SHEFT/ 变化/ 量/ 绝对值/ 之/ 和/ 为/ ∑/ ncrun/ (/ Gi/ )/ -/ SHEFT/ // (/ Gi/ -/ k/ ,/ MHEFT/ )/ |/ ,/ 则/ 单位/ 相对/ 严格/ 程度/ 变化/ 量/ 的/ 费用/ 降低/ 率则/ 定义/ 为/ CDVRS/ (/ Gi/ -/ k/ ,/ Mchea/ )/ =/ ∑/ nc/ 第/ 2/ 阶段/ 的/ 费用/ 优化/ 算法/ CDVRS/ 的/ 核心/ 就是/ 待/ 优化/ 任务/ Gi/ -/ k/ 将/ 从/ MGi/ -/ k/ 中/ 选择/ 使得/ CDVRS/ (/ Gi/ -/ k/ ,/ Mchea/ )/ 最大化/ 的/ 一个/ 资源/ Mchea/ (/ / Mchea/ ∈/ MGi/ -/ k/ )/ 作为/ 其/ 优化/ 后/ 的/ 映射/ 资源/ ./ 具体步骤/ 见/ 算法/ 2/ ./ Cost/ (/ Gi/ -/ k/ ,/ MHEFT/ )/ -/ Cost/ (/ Gi/ -/ k/ ,/ Mchea/ )/ run/ (/ Gi/ )/ -/ SHEFT/ // (/ Gi/ -/ k/ ,/ Mchea/ )/ -/ run/ (/ Gi/ )/ -/ SHEFT/ // (/ Gi/ -/ k/ ,/ MHEFT/ )/ i/ =/ 1/ 算法/ 2/ ./ CDVRS/ ./ 输入/ :/ Gunoptimized/ ←/ Gi/ (/ i/ =/ 1/ ,/ 2/ ,/ …/ ,/ nc/ )/ ;/ // / 待/ 调度/ 优化/ 输出/ :/ Gi/ -/ optimized1/ ./ WHILE/ (/ Gunoptimized/ ≠/ / )/ DO2/ ./ 在/ 已/ 优化/ 任务/ 占用/ 了/ 资源/ 基础/ 上/ ,/ 利用/ MDRS/ 预/ 3/ ./ 将/ 任务/ Gi/ -/ k/ 的/ 费用/ 比/ 在/ MHEFT/ 上/ 费用/ 低/ 的/ 其它/ 资/ 4/ ./ WHILE/ (/ MGi/ -/ k/ ≠/ / )/ DO5/ ./ 从/ MGi/ -/ k/ 中/ 取出/ 一个/ 较为/ 便宜/ 的/ 资源/ Mchea/ 试分/ 6/ ./ IF/ (/ 出现/ 某/ DAG/ 完成/ 时间/ 超出/ 其/ Deadline/ )/ THEN7/ ./ CDVRS/ (/ Gi/ -/ k/ ,/ Mchea/ )/ =/ 0/ ;/ 8/ ./ ELSE9/ ./ 计算/ CDVRS/ (/ Gi/ -/ k/ ,/ Mchea/ )/ ;/ 10/ ./ ENDIF11/ ./ ENDWHILE12/ ./ IF/ (/ MGi/ -/ k/ 中/ 所有/ Mchea/ 的/ CDVRS/ (/ Gi/ -/ k/ ,/ Mchea/ )/ =/ 0/ )/ 13/ ./ 仍/ 将/ MHEFT/ 作为/ 任务/ Gi/ -/ k/ 的/ 资源/ ;/ 14/ ./ ELSE15/ ./ 从/ MGi/ -/ k/ 中/ 选择/ 使得/ CDVRS/ (/ Gi/ -/ k/ ,/ Mchea/ )/ 值/ 16/ ./ ENDIF17/ ./ 将/ 任务/ Gi/ -/ k/ 从/ Gi/ -/ unoptimized/ 中/ 移至/ 已/ 优化/ 任务/ 集合/ 18/ ./ IF/ (/ Gi/ -/ unoptimized/ =/ / )/ THEN19/ ./ 从/ Gunoptimized/ 删除/ 该/ DAG/ ;/ 20/ ./ ENDIF21/ ./ ENDWHILE22/ ./ RETURNGi/ -/ optimized/ 正如/ 2.2/ ./ 1/ 节对/ MDRS/ 算法/ 时间/ 复杂度/ 的/ 分析/ ,/ 在/ 没有/ “/ 过饱和/ ”/ 发生/ 情况/ 下/ ,/ 也/ 就是/ 在/ 不/ 发生/ 取消/ DAG/ 的/ 情况/ 下/ ,/ MDRS/ 的/ 时间/ 复杂度/ 最大/ 为/ O/ (/ n2/ ·/ v3/ ·/ q/ )/ ,/ 那么/ 这种/ 情况/ 下/ 的/ MDRS/ 算法/ 与/ MDRSco/ -/ op/ 复杂度/ 是/ 一致/ 的/ ./ 假如/ 有/ nc/ 个/ DAG/ 进行/ 调度/ ,/ 每个/ DAG/ 都/ 有/ v/ 个/ 顶点/ 任务/ ,/ 机器/ 数量/ 为/ q/ 情况/ 下/ ,/ CDVRS/ 优化/ 算法/ 最多会/ 调用/ MDRSco/ -/ op/ 算法/ nc/ ·/ v/ ·/ q/ 次/ ,/ 因此/ 它们/ 的/ 时间/ 复杂度/ 均/ 为/ O/ (/ n3c/ ·/ v4/ ·/ q2/ )/ ./ 因此/ 该/ 算法/ 也/ 能够/ 在/ 幂次/ 多项式/ 的/ 时间/ 复杂度/ 内/ 提供/ 一个/ 调度/ 的/ 费用/ 优化/ 方案/ ./ 2.3/ ./ 2/ 规范化/ 总费用/ 指标/ 和/ 费用/ 优化/ 公平性/ 指标/ (/ 1/ )/ 规范化/ 总费用/ 指标/ NC/ -/ multiDAG/ (/ S/ )/ 为/ 方便/ 比较/ 不同/ 算法/ 的/ 费用/ 指标/ ,/ 针对/ 有/ 最晚/ 完成/ 期限/ 约束/ 的/ 单个/ 工作/ 流/ 调度/ ,/ 文献/ [/ 11/ ]/ 定义/ 了/ 规范化/ 费用/ 指标/ NC/ =/ 某/ 算法/ 下/ 的/ 总费用/ // CC/ ,/ 其中/ CC/ 为/ 所有/ 任务/ 都/ 选择/ 最/ 便宜/ 资源/ 情况/ 下/ 的/ 总费用/ ./ 本文/ 推广/ 这一/ 定义/ 到/ 针对/ 具有/ 完成/ 期限/ 约束/ 的/ 多个/ DAG/ 共享/ 有限/ 资源/ 的/ 混合/ 调度/ 情况/ ./ nc/ 个/ DAG/ 中/ ,/ 第/ k/ 个/ DAGGk/ 的/ 所有/ 任务/ 如果/ 都/ 选择/ 最低/ 费用/ 资源/ 情况/ 下/ Gk/ 的/ 费用/ 记为/ CostC/ -/ Gk/ ,/ 则/ 这/ nc/ 个/ DAG/ 的/ 所有/ 任务/ 都/ 选择/ 最低/ 费用/ 资源/ 时/ 的/ 总费用/ 可记/ 为/ ∑/ ncCostC/ -/ Gk/ ;/ 在/ 混合/ 调度/ 算法/ S/ 调度/ 这/ nc/ 个/ DAGk/ =/ 1/ 后/ ,/ Gk/ 的/ 费用/ 记为/ CostS/ -/ Gk/ ,/ nc/ 个/ DAG/ 的/ 总费用/ 记/ 为/ ∑/ ncCostS/ -/ Gk/ ,/ 则/ 算法/ S/ 调度/ 这/ nc/ 个/ DAG/ 的/ 规范/ k/ =/ 1/ 化/ 总费用/ 被/ 定义/ 为/ Page8NC/ -/ multiDAG/ (/ S/ )/ =/ ∑/ nc/ (/ 2/ )/ 费用/ 优化/ 的/ 相对/ 公平性/ 指标/ FCost/ (/ S/ -/ Spre/ )/ 一般说来/ ,/ 用户/ 指定/ DAG/ 完成/ 期限/ 的/ 相对/ 严格/ 程度/ 越低/ 或/ Deadline/ 越长/ ,/ 即/ 对/ 计算/ 服务/ 的/ QoS/ 时间/ 上/ 的/ 要求/ 较/ 低/ ,/ 当然/ 希望/ 所/ 支出/ 的/ 费用/ 也/ 越/ 低/ ;/ 反之/ ,/ QoS/ 要求/ 越高/ 的/ 用户/ ,/ 相应/ 的/ 付费/ 水平/ 也/ 应该/ 越高/ ./ 在/ 共享资源/ 调度/ 情况/ 下/ ,/ 如果/ 给予/ 一个/ DAG/ 的/ 优化/ 机会/ 越/ 多/ ,/ 其他/ DAG/ 的/ 优化/ 程度/ 就/ 会/ 降低/ ./ 如果/ 经某/ 算法/ 调度/ 或/ 费用/ 优化/ 后/ ,/ 期限/ 紧急/ 程度/ 较/ 低/ 的/ DAG/ 反而/ 比/ 紧急/ 程度/ 高/ 的/ DAG/ 费用/ 降低/ 程度/ 或/ 降低/ 率/ 还要/ 低/ ,/ 就/ 出现/ 了/ 不/ 公平/ ./ 因此/ 公平/ 的/ 多个/ DAG/ 之间/ 费用/ 优化/ 或/ 降低/ 程度/ 关系/ 不仅/ 受到/ DAG/ 的/ 数量/ 和/ 任务量/ 的/ 影响/ ,/ 也/ 受到/ 这些/ DAG/ 之间/ Deadline/ 紧急/ 程度/ 及其/ 差异/ 水平/ 的/ 影响/ ,/ 并且/ 任何/ 一个/ DAG/ 的/ 调度/ 和/ 费用/ 的/ 变化/ 都/ 会/ 对/ 其他/ DAG/ 的/ 相关/ 指标/ 产生/ 影响/ ./ 为了/ 衡量/ 不同/ 算法/ 对/ 多个/ DAG/ 进行/ 费用/ 优化/ 的/ 公平性/ ,/ 本文/ 提出/ 了/ 一种/ 新/ 的/ 性能指标/ ,/ 即/ 费用/ 优化/ 的/ 相对/ 公平性/ FCost/ -/ opti/ (/ S/ -/ Spre/ )/ ./ 该/ 定义/ 分为/ 以下/ 几/ 部分/ :/ 设有/ nc/ 个/ DAG/ ,/ 第/ k/ 个/ DAG/ 的/ 初始/ 相对/ 严格/ 程度/ 为/ rori/ -/ un/ (/ Gk/ )/ -/ SHEFT/ (/ 见/ 2.2/ ./ 1/ 节/ 定义/ )/ ,/ 则/ 第/ k/ 个/ DAG/ (/ Gk/ )/ 在/ 这/ nc/ 个/ DAG/ 中/ 公平/ 的/ 优化/ 权重/ 定义/ 为/ 该/ 定义/ 表明/ 了/ Gk/ 初始/ 相对/ 严格/ 程度/ 越高/ ,/ 即/ Dead/ -/ line/ 越/ 紧急/ ,/ 冗余/ 时间/ 越小/ ,/ 所/ 应/ 给予/ Gk/ 的/ 费用/ 优化/ 程度/ 在/ nc/ 个/ DAG/ 的/ 费用/ 优化/ 率/ 总量/ 中所/ 占/ 权重/ 应该/ 越小/ ./ 假设/ 在/ 某/ 算法/ Spre/ 下/ ,/ 上述/ nc/ 个/ DAG/ 中/ Gk/ (/ 第/ k/ 个/ DAG/ )/ 的/ 费用/ 为/ CostSpre/ -/ Gk/ (/ 等于/ Gk/ 中/ 所有/ 任务/ 费用/ 之/ 和/ )/ ,/ 如果/ 经过/ 某/ 优化/ 算法/ S/ 对/ 这/ nc/ 个/ DAG/ 进行/ 了/ 调度/ 后/ ,/ Gk/ 的/ 费用/ 变为/ CostS/ -/ Gk/ ,/ 则/ 算法/ S/ 相对/ 于/ Spre/ ,/ nc/ 个/ DAG/ 的/ 总费用/ 降低/ 率/ drTotal/ -/ Cost/ (/ S/ -/ Spre/ )/ =/ ∑/ nc100/ %/ ;/ 单个/ DAG/ (/ Gk/ )/ 的/ 费用/ 降低/ 率/ drCost/ -/ Gk/ (/ S/ -/ Spre/ )/ =/ (/ CostSpre/ -/ Gk/ -/ CostS/ -/ Gk/ )/ // CostSpre/ -/ Gk/ ·/ 100/ %/ ,/ 并且/ Gk/ 在/ 所有/ nc/ 个/ DAG/ 费用/ 降低/ 率/ 总量/ 中所/ 占/ 的/ 权值/ 可/ 表示/ 为/ Wdr/ -/ Gk/ (/ S/ -/ Spre/ )/ =/ drCost/ -/ Gk/ (/ S/ -/ Spre/ )/ // ∑/ nc/ 这/ nc/ 个/ DAG/ 在/ 某/ 算法/ S/ 下/ 费用/ 优化/ 的/ 相对/ 公平性/ (/ k/ =/ 1/ 被/ 定义/ 为/ FCost/ (/ S/ -/ Spre/ )/ =/ ∑/ ncFCost/ (/ S/ -/ Spre/ )/ 值越/ 低/ ,/ 说明/ 在/ 算法/ S/ 下/ ,/ 各/ DAG/ 实际/ 费用/ 降低/ 率/ 的/ 权重/ 与/ 对应/ DAG/ 的/ 公平/ 费用/ 优化/ 权重/ 越/ 接近/ ,/ 则/ 算法/ S/ 在/ 费用/ 优化/ 方面/ 的/ 相对/ 公平/ 程度/ 也/ 就/ 越/ 高/ ./ 另外/ ,/ 不同/ 的/ 算法/ S/ 之间/ ,/ 只有/ 相对/ 于/ 同一个/ Spre/ 算法/ 下/ 各/ DAG/ 的/ 费用/ 进行/ 总费用/ 降低/ 率/ drTotal/ -/ Cost/ (/ S/ -/ Spre/ )/ 、/ 单个/ DAGGk/ 的/ 费用/ 降低/ 率/ drCost/ -/ Gk/ (/ S/ -/ Spre/ )/ 和/ FCost/ (/ S/ -/ Spre/ )/ 等/ 指标/ 的/ 比较/ 才/ 有/ 意义/ ./ 根据/ 文献/ [/ 11/ ]/ 有关/ 性能/ 比较/ 方法/ ,/ 本文/ 为/ 比较/ 不同/ 算法/ S/ 的/ 费用/ 优化/ 公平性/ 指标/ ,/ Spre/ 选取/ 经典/ 的/ 最快/ 策略/ HEFT/ 算法/ ,/ 即/ 每个/ DAG/ 单独/ 利用/ HEFT/ 算法/ 在/ 所有/ 资源/ 上/ 调度/ ,/ 这种/ 情况/ 下/ Spre/ 可/ 被/ 表示/ 为/ SHEFT/ -/ own/ ./ 如/ drTotal/ -/ Cost/ (/ S/ -/ SHEFT/ -/ own/ )/ 表示/ :/ 相对/ 于/ SHEFT/ -/ own/ 策略/ 下/ 所有/ DAG/ 的/ 总费用/ ,/ 经过/ 算法/ S/ 调度/ 后/ ,/ 所有/ DAG/ 总费用/ 的/ 降低/ 率/ ./ FCost/ (/ S/ -/ SHEFT/ -/ own/ )/ 表示/ :/ 相对/ 于/ SHEFT/ -/ own/ 策略/ 下/ 各/ DAG/ 的/ 费用/ ,/ 在/ 算法/ S/ 下/ 各/ DAG/ 的/ 实际/ 费用/ 降低/ 率/ 与其/ 对应/ 的/ 公平/ 费用/ 优化/ 权值/ 之间/ 的/ 差异/ 水平/ ./ 3/ 实验/ 3.1/ 实验/ 设置/ 本文/ 全部/ 实验/ 在/ 联想/ ThinkPadL4124403AJ5/ (/ Intel/ (/ R/ )/ Core/ (/ TM/ )/ i3CPU/ ,/ 2.53/ GHz/ )/ +/ Win7/ 环境/ 下/ ,/ 并/ 在/ 课题组/ 研发/ 的/ DAG/ 调度/ 模拟实验/ 平台/ 上/ 完成/ ./ 该/ 平台/ 基于/ jdk1/ ./ 6/ 的/ JavaNet/ -/ BeansIDE6/ ./ 9/ 集成系统/ 研发/ ./ 以下/ 将/ 介绍/ 针对/ 本文/ 算法/ 的/ 相关/ 实验/ 设置/ 和/ 实验/ 方法/ ./ 由于/ 本文/ 算法/ 分为/ 两个/ 阶段/ :/ 第/ 1/ 阶段/ 的/ 目标/ 是/ ,/ 对/ 可能/ 的/ “/ 过饱和/ ”/ 情况/ 进行/ 探测/ 和/ 处理/ ,/ 在/ 时间/ 最小化/ 方法/ 下/ 合理/ 处理/ 多个/ DAG/ 之间/ 的/ 调度/ 关系/ ,/ 使得/ 在/ 期限内/ 完成/ 的/ DAG/ 数量/ 最大化/ ,/ 并且/ DAG/ 完成/ 时间/ 越/ 接近/ Deadline/ 越好/ ./ 因此/ 针对/ 第/ 1/ 阶段/ 的/ 两个/ 算法/ ,/ 将/ 与/ EDF/ 、/ Fairness/ -/ F1/ 和/ Round/ -/ Robin/ 等/ 有关/ 算法/ 进行/ 对比/ ,/ 验证/ 所/ 提出/ 的/ MDRS/ 和/ LLF/ -/ Sim/ -/ MDRS/ 算法/ 相关/ 性能/ ./ 对于/ 第/ 2/ 阶段/ 的/ 费用/ 优化/ 算法/ ,/ 由于/ 只有/ 在/ 期限内/ DAG/ 完成率/ 相同/ 的/ 算法/ 之间/ 进行/ 费用/ 变化/ 指标/ 方面/ 的/ 比较/ 才/ 有/ 意义/ ,/ 而/ CDVRS/ 算法/ 是/ 在/ 第/ 1/ 阶段/ MDRS/ 算法/ 预/ 调度/ 确定/ 了/ 期限内/ 完成/ 的/ DAG/ 数量/ 基础/ 上/ ,/ 并/ 在/ 存在/ DAG/ 有/ 冗余/ 时间/ 的/ 前提/ 下/ 进行/ 费用/ 优化/ ,/ 两/ 算法/ 的/ Page9DAG/ 完成率/ 一致/ ,/ 所以/ 第/ 2/ 阶段/ CDVRS/ 算法/ 只/ 需要/ 与/ MDRS/ 算法/ 在/ 费用/ 和/ 期限/ 满意度/ 的/ 相关/ 指标/ 方面/ 进行/ 验证/ 和/ 比较/ 即可/ ./ 3.1/ ./ 1/ 需/ 比较/ 的/ 相关/ 算法/ (/ 1/ )/ 第/ 1/ 阶段/ 的/ MDRS/ 和/ LLFSim/ -/ MDRS/ 将/ 与/ 以下/ 几种/ 调度/ 方法/ 进行/ 相关/ 比较/ ./ EDF/ 方法/ :/ Deadline/ 最小/ 的/ DAG/ 的/ 所有/ 任务/ 优先/ 按/ HEFT/ 调度/ 后/ ,/ Deadline/ 较大/ 的/ DAG/ 插入/ 到/ 较/ 小/ DAG/ 的/ 时隙/ Slots/ 中去/ ./ Fairness/ -/ F1/ 算法/ (/ 见/ 文献/ [/ 2/ ,/ 7/ ]/ )/ :/ 该/ 算法/ 针对/ 无/ Deadline/ 约束/ 的/ 多/ DAG/ 同时/ 调度/ 的/ 情况/ ,/ 属于/ 公平/ 的/ 时间/ 最小化/ 算法/ ,/ 仅/ 根据/ 调度/ 过程/ 中/ 的/ 每个/ DAG/ 的/ Slowdown/ 值/ 的/ 变化/ 来/ 决定/ 下/ 多个/ DAG/ 之间/ 的/ 调度/ 关系/ ./ Round/ -/ Robin/ 轮转/ 法/ (/ 见/ 文献/ [/ 5/ ,/ 7/ ]/ )/ :/ 该/ 方法/ 针对/ 无/ Deadline/ 约束/ 的/ 多/ DAG/ 调度/ 问题/ ,/ 轮流/ 从/ 每个/ DAG/ 选取/ 一个/ 任务/ 按/ HEFT/ 方法/ 调度/ ,/ 直到/ 所有/ 任务调度/ 完毕/ ./ (/ 2/ )/ 第/ 2/ 阶段/ 的/ 费用/ 优化/ CDVRS/ 将会/ 与/ 第/ 1/ 指标/ ./ 3.1/ ./ 3/ 实验/ 方法/ 实验/ 利用/ 上述/ 相关/ 算法/ 在/ 模拟/ 软件平台/ 上/ 共/ 模拟/ 100/ 组/ 随机/ 生成/ 的/ DAG/ 分别/ 在/ 7/ 组/ 不同/ 的/ Deadline/ 紧急/ 和/ 差异/ 水平/ 下/ 的/ 调度/ 情况/ ./ 实验/ 方法/ 如下/ ./ (/ 1/ )/ 每组/ 同时/ 调度/ 的/ DAG/ 数量/ 在/ 3/ ~/ 20/ 整数/ 中/ 随机/ 选择/ ./ 当/ 一组/ DAG/ 的/ 数量/ 确定/ 后/ ,/ 组内/ 每个/ DAG/ 按照/ 文献/ [/ 20/ ]/ 中/ 的/ 实验/ 方法/ 随机/ 生成/ ./ 本文/ 采用/ 如下/ 参数/ 集合/ 随机/ 生成/ DAGSETV/ =/ {/ 5/ ,/ 10/ ,/ 20/ ,/ 35/ ,/ 55/ }/ ;/ SETCCR/ =/ {/ 0.1/ ,/ 0.5/ ,/ 1.0/ ,/ 5.0/ ,/ 10.0/ }/ ;/ 阶段/ 的/ MDRS/ 算法/ 进行/ 比较/ ./ 3.1/ ./ 2/ 比较/ 的/ 性能指标/ 法在/ 以下/ 2/ 个/ 指标/ 上/ 进行/ 对比/ ./ 同时/ 调度/ DAG/ 总数/ n/ 的/ 比率/ ./ (/ 1/ )/ MDRS/ 和/ LLFSim/ -/ MDRS/ 算法/ 将/ 与/ 其它/ 3/ 个算/ Rc/ :/ 完成/ 时间/ 不/ 超过/ Deadline/ 的/ DAG/ 占/ 所有/ Satisfaction/ (/ S/ )/ :/ 不同/ 调度/ 策略/ S/ 的/ 相对/ 于/ (/ 2/ )/ CDVRS/ 算法/ 将/ 在/ 以下/ 3/ 个/ 指标/ 上/ 与/ MDRSNC/ -/ multiDAG/ (/ S/ )/ :/ 规范化/ 总费用/ 指标/ ./ Satisfaction/ (/ S/ )/ :/ Deadline/ 的/ 满意度/ 指标/ ./ FCost/ (/ S/ -/ SHEFT/ -/ own/ )/ :/ 费用/ 优化/ 的/ 相对/ 公平性/ Deadline/ 的/ 满意度/ 指标/ ./ 算法/ 进行/ 对比/ ./ 以上/ 集合/ 的/ 下标/ 及其/ 含义/ 与/ 文献/ [/ 20/ ]/ 完全一致/ ,/ 这里/ 不再/ 重复/ ./ (/ 2/ )/ 在/ 3/ ~/ 20/ 中/ 随机/ 选择/ 一个/ 整数/ 作为/ 该组/ DAG/ 的/ 执行/ 机器/ 数量/ ./ 然后/ 根据/ 文献/ [/ 20/ ]/ 实验/ 方法/ ,/ 从/ 异构/ 因子/ 参数/ β/ 集合/ 中/ 随机/ 抽取/ 一个/ 参数/ 生成/ DAG/ 中/ 每个/ 任务/ 在/ 这组/ 机器/ 上/ 的/ 预计/ 执行/ 时间/ ./ 本文/ 的/ β/ 参数/ 集合/ 选为/ SET/ β/ =/ {/ 0.1/ ,/ 0.5/ ,/ 1.5/ ,/ 2.5/ ,/ 3.0/ }/ ,/ 其中/ β/ 为/ 资源/ 异构/ 因子/ 参数/ ,/ 它/ 影响/ 着/ DAG/ 中/ 某/ 一/ 任务/ 在/ 不同/ 资源/ 上/ 执行/ 时间/ 差异/ 大小/ 程度/ ./ 一般来说/ ,/ 资源/ 的/ 运算/ 速度/ 越/ 快/ ,/ 价格/ 也/ 越/ 高/ [/ 11/ ]/ ,/ 因此/ 机器间/ 的/ 性能/ 速度/ 差异/ 越大/ ,/ 其/ 单位/ 时间/ 的/ 价格/ 差异/ 也/ 应该/ 越大/ ./ 为/ 体现/ 这一/ 特征/ ,/ 我们/ 选用/ 正太/ 分布/ N/ (/ 7/ ,/ β/ )/ 来/ 随机/ 生成/ 机器/ 的/ 单位/ 时间/ 使用/ 价格/ ./ 如/ 某组/ DAG/ 在/ SET/ β/ 中/ 随机/ 选择/ 到/ 了/ 异构/ 因子/ 参数/ 1.5/ 为/ 每个/ 任务/ 在/ 一组/ 资源/ 上/ 生成/ 了/ 运行/ 时间/ ,/ 则/ 利用/ 正太/ 分布/ N/ (/ 7/ ,/ 1.5/ )/ 随机/ 生成/ 该组/ 机器/ 的/ 单位/ 时间/ 使用/ 价格/ ./ (/ 3/ )/ 在/ 文献/ [/ 11/ ]/ 的/ 实验/ 中/ ,/ 针对/ DAG/ 的/ Dead/ -/ line/ 生成/ ,/ 采用/ 了/ λ/ ·/ MH/ (/ 1/ </ λ/ </ 5/ )/ 方法/ ./ 其中/ ,/ λ/ 为/ 比例/ 因子/ ,/ MH/ 为/ 利用/ HEFT/ 算法/ 对/ 某个/ DAG/ 单独/ 在/ 某个/ 数量/ 资源/ 上/ 调度/ 的/ makespan/ ,/ 相当于/ 本文/ 所/ 提到/ 的/ tM/ -/ Gi/ -/ SHEFT/ -/ own/ ./ 但/ 由于/ 该/ 文献/ 的/ 方法/ 是/ 针对/ 单个/ 有/ Deadline/ 约束/ 的/ DAG/ 调度/ 问题/ ,/ 不适/ 用于/ 多/ DAG/ 情况/ ./ 为了/ 更好/ 地/ 体现/ 用户/ DAG/ 最晚/ 完成/ 期限/ Deadline/ 的/ 随机/ 分布/ 特征/ 和/ 更好/ 地/ 对比/ 一组/ DAG/ 在/ 不同/ Deadline/ 的/ 紧急/ 程度/ 和/ 差异/ 水平/ 下/ 各/ 算法/ 的/ 性能/ ,/ 本文/ 对/ 文献/ [/ 11/ ]/ 的/ 该/ 方法/ 进行/ 了/ 改进/ ./ 具体做法/ 是/ :/ 当/ 一组/ DAG/ 和/ 机器/ 的/ 数量/ 以及/ 任务/ 在/ 每个/ 机器/ 上/ 的/ 执行/ 时间/ 确定/ 后/ ,/ 其中/ 每个/ DAG/ 的/ tM/ -/ Gi/ -/ SHEFT/ -/ own/ 均/ 可/ 得到/ ,/ 如果/ 确定/ 这组/ Deadline/ ,/ 只/ 需/ 再/ 确定/ λ/ 参数/ 组/ (/ λ/ 1/ ,/ λ/ 2/ ,/ …/ ,/ λ/ n/ )/ 即可/ ./ 针对/ λ/ 1/ ,/ λ/ 2/ ,/ …/ ,/ λ/ n/ ,/ 本文/ 利用/ 正太/ 分布/ N/ (/ μ/ λ/ ,/ σ/ λ/ )/ (/ μ/ λ/ 和/ σ/ λ/ 分别/ 为/ λ/ 的/ 期望/ 与/ 标准差/ ,/ 其/ 取值/ 集合/ 为/ SET/ λ/ =/ {/ (/ 1.2/ ,/ 0.2/ )/ ,/ (/ 1.6/ ,/ 0.3/ )/ ,/ (/ 2.5/ ,/ 0.5/ )/ ,/ (/ 3.0/ ,/ 0.7/ )/ ,/ (/ 5.0/ ,/ 1.2/ )/ ,/ (/ 7.0/ ,/ 2.2/ )/ ,/ (/ 10.0/ ,/ 3.0/ )/ }/ )/ 生成/ 7/ 组/ λ/ 参数/ ,/ 然后/ 用/ “/ λ/ ·/ MH/ ”/ 方法/ 为/ 一组/ DAG/ 生成/ 7/ 组/ 不同/ 紧急/ 和/ 差异/ 水平/ 的/ Deadline/ 组/ ./ (/ 4/ )/ 当/ 每组/ DAG/ 的/ 上述/ 这些/ 参数/ 生成/ 确定/ 后/ ,/ 用/ 上述/ 6/ 种/ 不同/ 算法/ 对/ 每组/ DAG/ 分别/ 在/ 7/ 组/ Deadline/ 情况/ 下/ 执行/ (/ 当然/ ,/ 其中/ CDVRS/ 算法/ 每次/ 都/ 在/ MDRS/ 算法/ 调度/ 后/ ,/ 即/ 确定/ 了/ 能/ 在/ 期限内/ 完成/ 的/ DAG/ 数量/ 之后/ 进行/ )/ ,/ 记录/ 统计/ 这组/ DAG/ 的/ Page106/ 种/ 算法/ 在/ 7/ 组/ 不同/ 的/ Deadline/ 条件/ 下/ 调度/ 的/ 有关/ 指标/ ./ 对/ 100/ 组/ DAG/ 调度/ 实验/ 后/ ,/ 对/ 每种/ 算法/ 记录/ 了/ 700/ 组/ 实验/ 结果/ 及/ 相关/ 性能指标/ ,/ 并/ 按/ 7/ 种/ Deadline/ 参数/ 类型/ 分为/ 7/ 组/ ,/ 最后/ 得到/ 每种/ 算法/ 下/ 7/ 组/ 相关/ 性能指标/ 的/ 平均值/ ./ 3.2/ 实验/ 结果/ 及/ 分析/ 3.2/ ./ 1/ 关于/ MDRS/ 和/ LLF/ -/ Sim/ -/ MDRS/ 的/ 实验/ 结果/ 根据/ 3.1/ 节/ 所述/ 的/ 实验/ 方法/ 和/ 实验/ 数据/ 进行/ 统计/ ,/ 得到/ 了/ MDRS/ 、/ LLF/ -/ Sim/ -/ MDRS/ 、/ EDF/ 、/ Fairness/ -/ F1/ 和/ Round/ -/ Robin/ 等/ 5/ 个/ 算法/ 对/ 100/ 组/ DAG/ 分别/ 在/ 7/ 种/ 不同/ 类型/ Deadline/ 条件/ 下/ 调度/ 的/ Rc/ 和/ Satis/ -/ faction/ (/ S/ )/ 两个/ 性能指标/ 的/ 均值/ ,/ 如图/ 1/ 和/ 图/ 2/ 所示/ ./ 图/ 1SET/ λ/ 中/ 7/ 种/ Deadline/ 参数/ 下/ 的/ 5/ 种/ 算法/ 的/ Rc/ 均值/ 图/ 2SET/ λ/ 中/ 7/ 种/ Deadline/ 参数/ 下/ 的/ 5/ 种/ 算法/ 的/ 在/ 图/ 1/ 中/ ,/ 当/ (/ μ/ λ/ ,/ σ/ λ/ )/ 取值/ 为/ (/ 1.2/ ,/ 0.2/ )/ 时/ ,/ 由于/ DAG/ 的/ Deadline/ 的/ 均值/ 和/ 标准差/ 都/ 较/ 小/ ,/ 也/ 即/ Deadline/ 紧急/ 程度/ 总体/ 上/ 较/ 高/ ,/ 并且/ 差异/ 水平/ 也/ 较/ 小/ ,/ 因此/ 多个/ DAG/ 的/ 同时/ 调度/ 对/ 资源/ 竞争/ 的/ 强度/ 也/ 大/ ./ 可以/ 看出/ 这/ 5/ 种/ 算法/ 在/ 期限内/ 完成/ 的/ DAG/ 数量/ 的/ 平均/ 比率/ 都/ 较/ 低/ ,/ 但/ MDRS/ 算法/ 和/ LLF/ -/ Sim/ -/ MDRS/ 的/ 平均/ Rc/ 仍然/ 较/ 高/ ,/ 分别/ 为/ 21.8226/ %/ 和/ 16.0736/ %/ ./ 而/ Fairness/ -/ F1/ 和/ Round/ -/ Robin/ 算法/ 则/ 因为/ 没有/ 考虑/ Deadline/ 因素/ ,/ 也/ 没有/ 对/ “/ 过饱和/ ”/ 情况/ 的/ 探测/ 与/ 处理/ ,/ 所有/ 的/ DAG/ 按照/ 公平/ 或/ 轮转/ 方法/ 调度/ ,/ 当/ 每个/ DAG/ 的/ 冗余/ 时间/ 都/ 比较/ 小/ 的/ 情况/ 时/ ,/ 容易/ 造成/ 这些/ DAG/ 的/ 完成/ 时间/ 均/ 超出/ 其/ Deadline/ ,/ 致使/ 在/ (/ μ/ λ/ ,/ σ/ λ/ )/ 这一/ 取值/ 上/ 的/ 平均/ Rc/ 值/ 更/ 低/ ,/ Fairness/ -/ F1/ 和/ Round/ -/ Robin/ 算法/ 的/ 平均/ Rc/ 分别/ 只有/ 6.3832/ %/ 和/ 6.1193/ %/ ./ 尽管/ EDF/ 算法/ 也/ 没有/ 考虑/ “/ 过饱和/ ”/ 情况/ ,/ 但/ 它/ 总是/ 选择/ Deadline/ 最小/ 的/ DAG/ 优先/ 调度/ ,/ 在/ 多个/ DAG/ 的/ 任务量/ 差异/ 不大/ 的/ 情况/ 下/ ,/ 仍/ 能够/ 合理安排/ DAG/ 之间/ 的/ 调度/ 关系/ ,/ 平均/ Rc/ 相对/ 比/ 最后/ 两种/ 算法/ 高/ ./ 随着/ (/ μ/ λ/ ,/ σ/ λ/ )/ 中/ μ/ λ/ 和/ σ/ λ/ 的/ 取值/ 增大/ ,/ 所有/ 5/ 个/ 算法/ 的/ 平均/ Rc/ 都/ 在/ 增大/ ,/ 表明/ 了/ 随着/ 多个/ 同时/ 调度/ 的/ DAG/ 平均/ 冗余/ 时间/ 的/ 增大/ ,/ 不管/ 采取/ 何种/ 方法/ ,/ 在/ 期限内/ 完成/ 的/ DAG/ 的/ 平均/ 数量/ 都/ 会/ 增大/ ,/ 但/ MDRS/ 算法/ 在/ 各种/ 差异/ 水平/ 下/ 的/ 平均/ Rc/ 值/ 都/ 为/ 最高/ ,/ 并且/ 增长速度/ 也/ 最快/ ,/ LLF/ -/ Sim/ -/ MDRS/ 算法/ 次之/ ,/ 最慢/ 的/ 是/ Round/ -/ Robin/ 算法/ ./ 当/ (/ μ/ λ/ ,/ σ/ λ/ )/ 取值/ 为/ (/ 10.0/ ,/ 3.0/ )/ ,/ MDRS/ 算法/ 的/ 平均/ Rc/ 达到/ 了/ 78.8561/ %/ ,/ LLF/ -/ Sim/ -/ MDRS/ 算法/ 的/ 平均/ Rc/ 为/ 57.3142/ %/ ,/ Round/ -/ Robin/ 算法/ 的/ 平均/ Rc/ 为/ 39.3871/ %/ ./ 表明/ 与/ 其他/ 4/ 种/ 算法/ 相比/ ,/ MDRS/ 算法/ 根据/ Deadline/ 的/ 相对/ 严格/ 程度/ 能够/ 更加/ 合理/ 地/ 对/ 多个/ DAG/ 进行/ 调度/ ,/ 并/ 能/ 保证/ 在/ 各种/ Deadline/ 的/ 差异/ 水平/ 下/ ,/ 一组/ DAG/ 中/ 期限内/ 完成/ DAG/ 的/ 数量/ 最多/ ./ LLF/ -/ Sim/ -/ MDRS/ 算法/ 表现/ 比/ 其他/ 3/ 种/ 算法/ 较/ 好/ ,/ 表明/ “/ 冗余度/ 小/ 优先/ ”/ 的/ 方法/ 在/ 一些/ 情况/ 下/ 是/ 有/ 效果/ 的/ ./ 图/ 2/ 显示/ 了/ 在/ 不同/ 的/ Deadline/ 的/ 均值/ 和/ 差异/ 水平/ 下/ 的/ 5/ 种/ 不同/ 算法/ 的/ 平均/ Satisfaction/ (/ S/ )/ 值/ ./ 当/ (/ μ/ λ/ ,/ σ/ λ/ )/ 中/ μ/ λ/ 和/ σ/ λ/ 的/ 取值/ 在/ 较/ 小时/ ,/ 5/ 种/ 不同/ 算法/ 的/ 平均/ Satisfaction/ (/ S/ )/ 都/ 比较/ 接近/ ,/ 但/ 随着/ 在/ (/ μ/ λ/ ,/ σ/ λ/ )/ 中/ μ/ λ/ 和/ σ/ λ/ 的/ 取值/ 的/ 逐渐/ 增大/ ,/ MDRS/ 的/ Satisfaction/ (/ S/ )/ 呈上升/ 趋势/ ,/ 当/ (/ μ/ λ/ ,/ σ/ λ/ )/ 取值/ 为/ (/ 3.0/ ,/ 0.7/ )/ 时/ ,/ Satisfaction/ (/ S/ )/ 达到/ 了/ 最高值/ ,/ 从/ (/ 5.0/ ,/ 1.2/ )/ 开始/ 缓慢/ 下降/ ./ 如果/ 进一步/ 扩大/ (/ μ/ λ/ ,/ σ/ λ/ )/ 中/ μ/ λ/ 和/ σ/ λ/ 的/ 取值/ ,/ 调度/ 完毕/ 后/ ,/ DAG/ 的/ 完成/ 时间/ 与/ Deadline/ 的/ 接近/ 程度/ Accessness/ (/ S/ )/ 会/ 变小/ ,/ 而/ 公平性/ Fairness/ (/ S/ )/ 却/ 不会/ 有/ 趋向性/ 的/ 变化/ ,/ 从而/ 导致/ Satisfaction/ (/ S/ )/ 降低/ ./ 这/ 也/ 说明/ 了/ 如果/ 要/ 使得/ 调度/ 性能/ 达到/ 最好/ 水平/ ,/ DAG/ 的/ Deadline/ 的/ 平均值/ 和/ 差异/ 水平/ 与/ 同时/ 调度/ DAG/ 的/ 结构/ 、/ 数量/ 规模/ 和/ 资源/ 数量/ 规模/ 都/ 存在/ 着/ 某种/ 最佳/ 的/ 匹配/ 关系/ ./ 而/ 其他/ 3/ 种/ 算法/ (/ EDF/ 、/ Fairness/ -/ F1/ 和/ Round/ -/ Robin/ )/ 的/ Satisfaction/ (/ S/ )/ 均值/ 则/ 明显/ 要/ 低于/ MDRS/ 和/ LLF/ -/ Sim/ -/ MDRS/ ,/ 并且/ 随着/ μ/ λ/ 和/ σ/ λ/ 的/ 取值/ 的/ 增大/ ,/ 这/ 3/ 种/ 算法/ 的/ Satisfaction/ (/ S/ )/ 一直/ 处于/ 下降/ 趋势/ ,/ 这/ 也/ 进一步/ 说明/ 了/ 由于/ Fairness/ -/ F1/ 和/ Round/ -/ Robin/ 对/ 多/ Page11/ 个/ DAG/ 的/ Deadline/ 之间/ 差异/ 水平/ 变化/ 不/ 敏感/ ,/ 不/ 适合/ 解决/ 这/ 类/ 调度/ 问题/ ./ 从总体上/ 看/ ,/ MDRS/ 和/ LLF/ -/ Sim/ -/ MDRS/ 都/ 明显/ 好于/ 其他/ 3/ 种/ 算法/ ,/ 但/ LLF/ -/ Sim/ -/ MDRS/ 在/ 各种/ Deadline/ 的/ 均值/ 和/ 差异/ 水平/ 下/ 的/ 平均/ Satisfaction/ (/ S/ )/ 值/ 变化/ 不/ 稳定/ ,/ 说明/ 根据/ 多个/ DAG/ 冗余度/ 的/ 大小/ 进行/ 调度/ 的/ LLF/ -/ Sim/ -/ MDRS/ 算法/ ,/ 在/ 有些/ 情况/ 下/ 不/ 能够/ 很/ 好/ 地/ 反映/ DAG/ 的/ 紧急/ 程度/ ,/ 致使/ 调度/ 完毕/ 后/ ,/ 在/ 期限内/ 完成/ 的/ 各个/ DAG/ 的/ 完成/ 时间/ 与/ 各自/ Deadline/ 相比/ 差异/ 较大/ ./ 3.2/ ./ 2/ 关于/ 费用/ 优化/ CDVRS/ 算法/ 的/ 实验/ 结果/ 以下/ 为/ 费用/ 优化/ 算法/ CDVRS/ 和/ MDRS/ 两/ 算法/ 分别/ 在/ 7/ 种/ 不同/ 类型/ Deadline/ 条件/ 下/ 调度/ 100/ 组/ DAG/ 的/ 规范化/ 总费用/ NC/ -/ multiDAG/ (/ S/ )/ 、/ Satisfaction/ (/ S/ )/ 和/ 费用/ 优化/ 的/ 相对/ 公平性/ FCost/ (/ S/ -/ SHEFT/ -/ own/ )/ 等/ 指标/ 的/ 均值/ 对比/ ,/ 如图/ 3/ 、/ 图/ 4/ 和/ 图/ 5/ 所示/ ./ 图/ 3/ 显示/ 了/ 在/ 7/ 种/ 不同/ 的/ Deadline/ 的/ 均值/ 和/ 差异/ 水平/ 下/ ,/ MDRS/ 和/ CDVRS/ 调度/ 100/ 组/ DAG/ 的/ 规范化/ 总费用/ NC/ -/ multiDAG/ (/ S/ )/ 的/ 平均值/ ./ 当/ DAG/ 的/ Deadline/ 紧急/ 程度较高/ 和/ 差异/ 水平/ 较/ 小时/ ,/ 也/ 即/ 当/ (/ μ/ λ/ ,/ σ/ λ/ )/ 两/ 参数/ 较/ 小时/ ,/ 这/ 2/ 种/ 算法/ 的/ 规范化/ 总费用/ NC/ -/ multiDAG/ (/ S/ )/ 的/ 均值/ 没有/ 明显/ 差异/ ,/ 并且/ 都/ 较/ 高/ ,/ 均/ 超过/ 了/ 4.5/ ./ 这/ 表明/ ,/ 当/ DAG/ 的/ Deadline/ 之间/ 的/ 紧急/ 程度较高/ 和/ 差异/ 水平/ 较/ 小时/ ,/ 为了/ 能/ 保证/ 各/ DAG/ 都/ 能/ 在/ 期限内/ 完成/ Deadline/ ,/ 都/ 尽可能/ 选择/ 最早/ 完成/ 时间/ 的/ 资源/ ,/ 费用/ 优化/ 的/ 空间/ 较/ 小/ ,/ 并且/ 对/ CDVRS/ 来说/ ,/ 如果/ 选择/ 任务/ 的/ MHEFT/ 以外/ 的/ 资源/ 容易/ 造成/ 有/ DAG/ 的/ 完成/ 时间/ 超出/ 其/ Deadline/ ./ 从/ 两/ 算法/ 该/ 指标/ 的/ 变化趋势/ 来看/ ,/ 随着/ (/ μ/ λ/ ,/ σ/ λ/ )/ 取值/ 的/ 增大/ ,/ 在/ MDRS/ 算法/ 下/ ,/ 规范化/ 总费用/ NC/ -/ multiDAG/ (/ S/ )/ 均值/ 没有/ 明显/ 的/ 变化趋势/ ./ 这/ 表明/ ,/ 虽然/ Deadline/ 延长/ 和/ 差异/ 水平/ 扩大会/ 影响/ 各个/ DAG/ 的/ Deadline/ 紧急/ 程度/ 关系/ 的/ 变化/ ,/ 使得/ DAG/ 的/ 任务调度/ 顺序/ 图/ 3SET/ λ/ 中/ 7/ 种/ Deadline/ 参数/ 下/ MDRS/ 和/ CDVRS/ 的/ 发生变化/ ,/ DAG/ 的/ 完成率/ 会/ 上升/ ,/ 但/ 所/ 增加/ 的/ 冗余/ 时间/ 并/ 不能/ 被/ 有效/ 利用/ ./ 而/ CDVRS/ 算法/ 在/ 每种/ 情况/ 下/ 的/ 规范化/ 费用/ NC/ -/ multiDAG/ (/ S/ )/ 均值/ 都/ 比/ MDRS/ 低/ ,/ 并/ 呈现出/ 持续/ 下降/ 的/ 变化趋势/ ,/ 表明/ 该/ 费用/ 优化/ 算法/ 能/ 在/ 保证/ 各/ DAG/ 在/ 期限内/ 完成/ 的/ 约束条件/ 下/ ,/ 充分利用/ 冗余/ 时间/ 而/ 选择/ 费用/ 较/ 低/ 的/ 资源/ 进行/ 调度/ ,/ 因而是/ 一种/ 有效/ 的/ 费用/ 优化/ 方法/ ./ 图/ 4/ 显示/ 了/ 在/ 不同/ 的/ Deadline/ 的/ 均值/ 和/ 差异/ 水平/ 下/ 的/ MDRS/ 和/ CDVRS/ 调度/ 100/ 组/ DAG/ 的/ 平均/ 满意度/ Satisfaction/ (/ S/ )/ ./ 可以/ 看出/ 该图/ 中/ MDRS/ 的/ Satisfaction/ (/ S/ )/ 指标/ 与/ 图/ 2/ 中/ 的/ 是/ 完全一致/ 的/ ,/ 到/ 了/ SET/ λ/ 集合/ 中/ 的/ 取值/ 为/ (/ 3.0/ ,/ 0.7/ )/ 以后/ ,/ 开始/ 下降/ ./ 这是/ 由于/ MDRS/ 的/ 目标/ 是/ 使得/ 一组/ DAG/ 能/ 在/ 期限内/ 完成/ 的/ 数量/ 最大/ 而/ 采用/ 的/ 是/ 时间/ 最小化/ 的/ 方法/ ,/ 随着/ 一组/ DAG/ 的/ Deadline/ 延长/ 和/ 紧急/ 程度/ 的/ 降低/ ,/ 经过/ MDRS/ 调度/ 后/ 的/ DAG/ 完成/ 时间/ 与其/ Deadline/ 的/ 接近/ 程度/ 将会/ 降低/ ,/ 从而/ 导致/ 了/ Dead/ -/ line/ 满意度/ 值/ 的/ 下降/ ./ 与/ MDRS/ 相比/ ,/ 随着/ (/ μ/ λ/ ,/ σ/ λ/ )/ 取值/ 在/ (/ 3.0/ ,/ 0.7/ )/ 以后/ 的/ 继续/ 增大/ ,/ CDVRS/ 算法/ 的/ Deadline/ 满意度/ 指标/ 却/ 没有/ 下降/ ,/ 一直/ 保持/ 着/ 较/ 高/ 的/ 满意度/ 值/ ./ 这/ 表明/ CDVRS/ 为了/ 能/ 利用/ MDRS/ 算法/ 调度/ 后/ 各/ DAG/ 所/ 余下/ 的/ 冗余/ 时间/ ,/ 尽可能/ 地/ 选择/ 了/ 费用/ 较为/ 便宜/ 的/ 资源/ ,/ 因而/ 进一步/ 延长/ 了/ 各个/ DAG/ 的/ 完成/ 时间/ ,/ 使得/ 各个/ DAG/ 的/ 完成/ 时间/ 与其/ Deadline/ 保持/ 较/ 高/ 的/ 接近/ 程度/ ./ 图/ 4SET/ λ/ 中/ 7/ 种/ Deadline/ 参数/ 下/ MDRS/ 和/ CDVRS/ 的/ 图/ 5/ 显示/ 了/ 在/ 不同/ 的/ Deadline/ 的/ 均值/ 和/ 差异/ 水平/ 下/ 的/ MDRS/ 和/ CDVRS/ 算法/ 的/ 100/ 组/ DAG/ 费用/ 优化/ 公平性/ 指标/ FCost/ (/ S/ -/ SHEFT/ -/ own/ )/ 的/ 平均值/ ./ 从图/ 5/ 中/ 可以/ 看到/ ,/ 在/ (/ μ/ λ/ ,/ σ/ λ/ )/ 取值/ 在/ (/ 1.2/ ,/ 0.2/ )/ 时/ ,/ 2/ 个/ 算法/ 的/ FCost/ (/ S/ -/ SHEFT/ -/ own/ )/ 均值/ 都/ 在/ 0.6/ 左右/ ,/ 这/ 也/ 证明/ 了/ 当/ DAG/ 的/ Deadline/ 之间/ 的/ 紧急/ 程度/ 和/ 差异/ 水平/ 较/ 小时/ ,/ 由于/ 冗余/ 时间/ 小/ ,/ 费用/ 优化/ 的/ 空间/ 较/ 小/ ,/ CDVRS/ 算法/ 能够/ 选择/ MHEFT/ 以外/ 资源/ 的/ 概率/ 较/ Page12/ 低/ ,/ 因此/ 该/ 指标/ 与/ MDRS/ 算法/ 比较/ 接近/ ./ 但/ 随着/ (/ μ/ λ/ ,/ σ/ λ/ )/ 参数/ 的/ 增大/ ,/ MDRS/ 算法/ 下/ 的/ FCost/ (/ S/ -/ SHEFT/ -/ own/ )/ 的/ 平均值/ 逐渐/ 升高/ ./ 这/ 表明/ 随着/ 给予/ DAG/ 的/ 冗余/ 时间/ 差异/ 水平/ 的/ 增大/ ,/ 各/ DAG/ 之间/ 的/ 初始/ 相对/ 严格/ 程度/ 差异/ 较大/ (/ 公平/ 的/ 费用/ 优化/ 权重/ 差异/ 也/ 越/ 大/ )/ ,/ 但/ MDRS/ 算法/ 下/ 的/ 各个/ DAG/ 费用/ 降低/ 率/ 的/ 权重/ 与其/ 对应/ 的/ 公平/ 费用/ 优化/ 权重/ 之间/ 的/ 差异/ 也/ 变得/ 越来越/ 大/ ,/ 造成/ 了/ FCost/ (/ S/ -/ SHEFT/ -/ own/ )/ 均值/ 的/ 升高/ ./ 相对来说/ ,/ 尽管/ 由于/ 本文/ 一组/ 资源/ 的/ 价格/ 差异/ 是/ 在/ 一个/ 有限/ 的/ 范围/ 取值/ ,/ 从而/ 限制/ 了/ CDVRS/ 算法/ 下/ 的/ DAG/ 在/ 更/ 低/ Deadline/ 紧急/ 程度/ 情况/ 下/ 的/ 费用/ 降低/ 率/ 的/ 增加/ ,/ 造成/ 了/ 从/ (/ 5.0/ ,/ 1.2/ )/ 以后/ 下降/ 趋缓/ ,/ 但/ 总体/ 上/ 显示/ 了/ 比/ MDRS/ 更/ 低/ 的/ 均值/ ./ 这/ 也/ 表明/ CDVRS/ 对/ MDRS/ 调度/ 结果/ 进行/ 费用/ 优化/ 后/ ,/ 各个/ DAG/ 的/ 费用/ 降低/ 程度/ 比/ MDRS/ 算法/ 更/ 接近/ 公平/ 的/ 费用/ 优化/ 权值/ ./ 图/ 5SET/ λ/ 中/ 7/ 种/ 参数/ 下/ MDRS/ 和/ CDVRS/ 的/ 4/ 结论/ 和/ 展望/ 从/ 实验/ 结果/ 分析/ 来看/ ,/ 针对/ 多/ DAG/ 在/ 任意/ 确定/ 的/ Deadline/ 条件/ 下/ 调度/ 多/ DAG/ 的/ 问题/ ,/ 本文/ 提出/ 的/ 相对/ 严格/ 程度/ 、/ 宽松/ 度/ 的/ 定义/ 、/ MDRS/ 和/ LLF/ -/ Sim/ -/ MDRS/ 算法/ 能够/ 根据/ 不同/ DAG/ 的/ Deadline/ 的/ 差异/ 水平/ 较/ 好/ 地/ 确定/ 多/ DAG/ 之间/ 的/ 调度/ 关系/ ,/ 尽可能/ 使得/ 更/ 多/ 的/ DAG/ 能/ 在/ 期限内/ 完成/ ./ 其中/ MDRS/ 算法/ 的/ 吞吐量/ 性能/ 最佳/ ./ 另外/ ,/ 所/ 提出/ 的/ 费用/ 优化/ 算法/ CDVRS/ 能够/ 在/ MDRS/ 调度/ 的/ DAG/ 吞吐量/ 最大化/ 基础/ 上/ ,/ 兼顾/ 各/ DAG/ 费用/ 优化/ 的/ 公平性/ ,/ 有效/ 降低/ 各/ DAG/ 的/ 经济/ 费用/ ./ 但/ 正如/ 实验/ 分析/ 部分/ 所述/ ,/ 当/ Deadline/ 的/ 满意度/ 性能/ 达到/ 最好/ 时/ ,/ DAG/ 的/ Deadline/ 的/ 平均值/ 和/ 差异/ 水平/ 与/ 同时/ 调度/ DAG/ 的/ 结构/ 和/ 数量/ 规模/ ,/ 以及/ 与/ 资源/ 的/ 数量/ 规模/ 应该/ 存在/ 一定/ 的/ 匹配/ 关系/ ./ 如果/ 能/ 有效/ 地/ 确定/ 这些/ 匹配/ 关系/ ,/ 对/ 提升/ 资源/ 系统/ 利用率/ 有/ 较大/ 意义/ ,/ 具有/ 进一步/ 研究/ 的/ 价值/ ./ 另外/ ,/ 在/ 探测/ 到/ “/ 过饱和/ ”/ 情况/ 时/ ,/ 不同/ 的/ 丢弃/ 策略/ 会/ 对/ 最终/ 确定/ 要/ 调度/ 的/ DAG/ 组及/ 任务/ 吞吐量/ 有/ 较大/ 影响/ ./ 今后/ 将/ 针对/ 上述/ 这些/ 问题/ 展开/ 进一步/ 的/ 研究/ 和/ 探索/ ./ 

