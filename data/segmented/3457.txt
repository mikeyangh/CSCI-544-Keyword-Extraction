Page1/ 网络服务/ 行为/ 的/ 进程/ 代数/ 验证/ 方法/ 研究/ 及其/ 应用/ 陈福/ 1/ )/ ,/ 2/ )/ 杨家/ 海/ 2/ )/ 杨扬/ 3/ )/ 王元卓/ 4/ )/ 贾/ 美英/ 3/ )/ 1/ )/ (/ 北京外国语大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100089/ )/ 2/ )/ (/ 清华大学/ 信息科学/ 与/ 技术/ 国家/ 实验室/ 北京/ 100084/ )/ 3/ )/ (/ 北京科技大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100083/ )/ 4/ )/ (/ 中国科学院计算技术研究所/ 网络/ 重点/ 实验室/ 北京/ 100083/ )/ 摘要/ 通过/ 形式化/ 建模/ 分析/ 了/ 系统/ 特点/ ,/ 确认/ 系统/ 行为/ ,/ 从而/ 尽可能/ 避免/ 系统/ 的/ 冲突/ 等/ 情况/ ./ 文中/ 提出/ 了/ 一种/ 使用/ 进程/ 代数/ 描述/ 网络服务/ 组件/ 的/ 行为/ 建模/ 方法/ ,/ 包括/ 强/ 模拟/ 、/ 强互/ 模拟/ 、/ 时效性/ 、/ 触发器/ 、/ 服务/ 环境/ 等/ 网络服务/ 交互/ 行为/ 描述/ 方法/ ,/ 然后/ 给出/ 了/ P2P/ 节点/ 的/ 节点/ 发现/ 、/ 防火墙/ 穿越/ 等/ 行为/ 的/ 描述/ ,/ 提出/ 了/ 适用/ 于/ 托管/ 的/ RCMMS/ 网络/ 自/ 管理/ 协议/ ,/ 并/ 使用/ 代数/ 的/ 方法/ 描述/ 协议/ 行为/ ,/ 确认/ 其/ 合理性/ ,/ 从而/ 验证/ 文中/ 所/ 提出/ 的/ 方法/ ./ 关键词/ 进程/ 代数/ ;/ π/ 演算/ ;/ 服务/ 行为/ ;/ 交互/ 系统/ 演算/ 1/ 引言/ 近年来/ ,/ 随着/ 物/ 联网/ 、/ 云/ 计算/ 、/ 三网/ 合一/ 等/ 快速/ Page2/ 构/ (/ SOA/ )/ 、/ 基础设施/ 即/ 服务/ (/ IaaS/ )/ 、/ 平台/ 即/ 服务/ (/ PaaS/ )/ 、/ 软件/ 即/ 服务/ (/ SaaS/ )/ 等/ 研究/ 受到/ 高度重视/ ./ 这种/ 以/ 服务/ 及其/ 组合/ 为/ 基础/ 的/ 系统/ 具有/ 并发/ 、/ 异构/ 、/ 交互/ 的/ 特点/ ./ 目前/ 缺乏/ 普适/ 的/ 、/ 广为/ 接受/ 的/ 针对/ 服务/ 及其/ 合成/ 活动/ 抽象/ 本质/ 的/ 、/ 形式化/ 的/ 表述/ 和/ 验证/ 方法/ ./ 它/ 对/ 以/ 交互/ 为/ 基础/ 的/ 网络通信/ 或/ 管理/ 协议/ 的/ 行为/ 分析/ 、/ 验证/ 和/ 确认/ 具有/ 重要/ 意义/ ./ 基于/ 此/ ,/ 本文/ 提出/ 了/ 一种/ 网络协议/ 行为/ 建模/ 和/ 分析方法/ ,/ 使用/ 强/ 模拟/ 、/ 强互/ 模拟/ 、/ 时效性/ 、/ 触发器/ 、/ 组件/ 情境/ 等/ 描述/ 网络协议/ 交互/ 行为/ ,/ 给出/ 了/ P2P/ 节点/ 的/ 节点/ 发现/ 、/ 防火墙/ 穿越/ 等/ 交互/ 行为/ 描述/ ,/ 并/ 完善/ MMS/ 协议/ 提出/ 了/ RCMMS/ 适应/ 于/ 托管/ 的/ 自/ 管理/ 协议/ ,/ 然后/ 使用/ 进程/ 代数/ 给出/ 其/ 协议/ 行为/ 的/ 交互/ 过程/ 验证/ ,/ 从而/ 验证/ 本文/ 所/ 提出/ 的/ 方法/ ./ 2/ 组件/ 行为/ 演算/ 2.1/ 组件/ 行为/ 语义/ 描述/ 网络服务/ 组件/ 、/ 协议/ 及/ 交互性/ 系统/ ,/ 需要/ 严谨/ 的/ 行为/ 定义/ 、/ 描述/ 和/ 分析/ ,/ 确认/ 相应/ 的/ 系统/ 行为/ 是否/ 符合/ 设计/ 要求/ 是/ 一个/ 重要/ 的/ 问题/ ./ 特别/ 是/ 交互/ 行为/ 可能/ 传递/ 节点/ 、/ 链接/ 或/ 通信/ 信道/ ,/ 从而/ 使得/ 系统结构/ 动态变化/ ,/ 这种/ 交互式/ 组件/ 的/ 交互/ 、/ 协同/ 、/ 组合/ 过程/ 具有/ 明显/ 的/ 异构/ 性/ 、/ 交互性/ 、/ 并发/ 、/ 并行/ 等/ 特点/ ./ 如何/ 根据/ 协议/ 或/ 网络/ 组件/ 行为/ 的/ 逻辑/ 规则/ ,/ 对/ 交互/ 行为/ 进行/ 严谨/ 的/ 刻画/ 、/ 演绎/ 和/ 行为/ 推理/ ,/ 使/ 组件/ 行为/ 功能/ 明确/ 、/ 可信/ ,/ 从而/ 增强/ 系统/ 的/ 可信性/ 和/ 可管理性/ ,/ 为/ 用户/ 提供/ 平台/ 独立/ 、/ 透明/ 、/ 稳定/ 、/ 可信/ 的/ 系统/ ,/ 是/ 网络协议/ 和/ 交互式/ 系统/ 设计/ 的/ 核心/ 问题/ 之一/ ./ 代数/ 的/ 方法/ 可/ 用于/ 描述/ 交互式/ 组件/ 、/ 网络协议/ 行为/ ,/ 分析/ 行为/ 可能/ 存在/ 的/ 混/ 或/ 、/ 竞争/ 等/ 形成/ 的/ 不确定性/ ,/ 具有/ 严谨/ 确认/ 交互式/ 组件/ 行为/ 是否/ 符合/ 设计/ 要求/ 的/ 能力/ ./ 同时/ 由于/ 代数/ 演算/ 的/ 推理/ 功能/ 、/ 行为/ 等价/ 相关/ 概念/ ,/ 使得/ 协议/ 组件/ 的/ 取代/ 、/ 替换/ 和/ 重组/ 能力/ 大为/ 增强/ ./ 特别/ 是/ 基于/ 互联网/ 的/ 组件/ ,/ 进行/ 必要/ 的/ 行为/ 推理/ 和/ 预测/ 是/ 非常/ 重要/ 的/ ./ 协议/ 组件/ 之间/ 的/ 交互/ 行为/ 对/ 性能/ 具有/ 重要/ 影响/ ./ 可见/ 使用/ 代数/ 的/ 方法/ 刻画/ 协议/ 组件/ 行为/ 在/ 组合/ 、/ 发现/ 、/ 确认/ 、/ 替代/ 等/ 方面/ 具有/ 重要/ 作用/ ./ 而/ 使用/ 代数/ 的/ 方法/ 形式化/ 描述/ 计算/ 过程/ 也/ 是/ 经典/ 的/ 做法/ ./ 形式/ 语义学/ 以/ 数学/ 为/ 工具/ ,/ 运用/ 符号/ 和/ 公式/ 对/ 计算/ 模型/ 、/ 过程/ 和/ 计算机程序/ 进行/ 严谨/ 的/ 描述/ 、/ 解释/ 和/ 推理/ ,/ 使/ 语义/ 形式化/ ,/ 籍/ 此/ 研究/ 协议/ 行为/ 分析/ 、/ 计算/ 模型/ 、/ 程序设计/ 语言/ 语义/ 表述/ 问题/ ./ 形式/ 语义学/ 一般/ 分为/ 操作/ 语义学/ [/ 1/ ]/ 、/ 指称/ 语义学/ [/ 2/ ]/ 、/ 公理/ 语义学/ [/ 3/ ]/ 和/ 代数/ 语义学/ [/ 4/ ]/ 四类/ ./ 本文/ 应用/ 并发/ 系统/ 的/ 代数/ 语义/ 的/ 形式化/ 表述/ 能力/ ,/ 并/ 结合/ 网络协议/ 涉及/ 的/ 节点/ 、/ 链接/ 和/ 运行/ 环境/ 高度/ 的/ 动态性/ 和/ 交互性/ ,/ 尤其/ 关注/ 具有/ 描述/ 移动/ 、/ 并发/ 和/ 交互/ 功能/ 的/ 代数/ 语义/ 研究/ ./ “/ 并行/ ”/ 是/ 利用/ 多个/ 处理机/ 或/ 其它/ 功能/ 部件/ 同时/ 工作/ 以/ 提高/ 系统/ 性能/ 或/ 可靠性/ ,/ 冯/ ·/ 诺伊曼/ 在/ 20/ 世纪/ 40/ 年代/ 提出/ 细胞/ 自动机/ 可/ 认为/ 是/ 并行计算/ 思想/ 的/ 开端/ ./ 并发/ 概念/ 由/ PetriCarlAdam/ [/ 5/ ]/ 于/ 1962/ 年/ 首先/ 严格/ 定义/ 并/ 建立/ 了/ 模型/ ./ MilnerRobin/ 把/ 可以/ 按/ 任意/ 次序/ 在/ 系统/ 内/ 发生/ 的/ 两个/ 事件/ 定义/ 为/ 并发/ 事件/ ./ 由于/ 并发/ 系统/ 本身/ 具有/ 的/ 高度/ 动态/ 、/ 并发/ 、/ 不/ 确定/ 、/ 交互性/ 和/ 异构/ 性/ ,/ 分析/ 和/ 研究/ 这些/ 特点/ 是/ 保证系统/ 的/ 健壮性/ 、/ 可靠性/ 的/ 重要/ 基础/ ./ 对/ 具有/ 这种/ 特点/ 的/ 系统结构/ 、/ 行为/ 进行/ 严谨/ 的/ 数学/ 描述/ ,/ 可以/ 准确/ 地/ 分析/ 系统/ 的/ 安全性/ 、/ 活性/ 、/ 可/ 生存性/ 、/ 可管理性/ ,/ 对系统/ 性能/ 评价/ 亦/ 有/ 重要/ 意义/ ./ 进程/ 代数/ [/ 6/ -/ 7/ ]/ 是/ 一种/ 较为/ 常用/ 的/ 刻画/ 并发/ 系统/ 的/ 数学/ 工具/ ./ 进程/ 是/ 系统/ 的/ 行为/ ,/ 代数/ 是/ 使用/ 代数/ 的/ 或/ 公理/ 的/ 方法/ 研究/ 行为/ ./ 进程/ 代数/ 是/ 使用/ 代数/ 公理/ 研究/ 并发/ 、/ 分布式/ 、/ 交互/ 系统/ 的/ 理论/ [/ 8/ ]/ ./ Baeten/ 定义/ 了/ 可/ 称为/ 进程/ 代数/ 的/ 条件/ :/ 至少/ 包含/ 选择/ 、/ 顺序/ 、/ 并发/ 三个/ 算子/ ,/ 并/ 满足/ 交互性/ 、/ 选择/ 合成/ 、/ 幂/ 等/ 性/ 、/ 右/ 分配/ 性/ 、/ 顺序/ 合成/ 结合/ 性/ 、/ 并行/ 合成/ 交互性/ 、/ 并行/ 合成/ 结合/ 性/ 这/ 7/ 条/ 规则/ [/ 7/ ]/ ./ MilnerRobin/ 从/ 1973/ ~/ 1980/ 年/ 一直/ 从事/ 并发/ 理论/ 研究/ ,/ 并于/ 1980/ 年/ 提出/ 了/ CCS/ (/ CalculusofCommunicatingSystems/ )/ [/ 4/ ]/ ./ CCS/ 的/ 提出/ 标志/ 着/ 具有/ 完善/ 的/ 同余/ 集合/ 和/ 语义/ 模型/ 的/ 进程/ 代数/ 的/ 建立/ ./ 随后/ 由/ ParkDavid/ [/ 9/ ]/ 提出/ 的/ 互/ 模拟/ 公理/ 极大/ 提高/ 了/ 进程/ 代数/ 的/ 理论/ 完整性/ ,/ 并/ 成为/ 进程/ 代数/ 中/ 的/ 重要/ 概念/ ./ HoareTony/ [/ 10/ -/ 11/ ]/ 提出/ 的/ CSP/ (/ CommunicationSequentialProcess/ )/ 去掉/ 了/ 全局变量/ ,/ 使用/ 消息传递/ 的/ 通信/ 模式/ ./ 由于/ MilnerRobin/ 等/ 均/ 使用/ 进程/ 演算/ (/ processcalculus/ )/ ,/ 进程/ 代数/ (/ processalgebra/ )/ 一词/ 的/ 提出/ 和/ 明确/ 定义/ 最早/ 见于/ 1982/ 年/ Bergstra/ 和/ Klop/ [/ 12/ ]/ 的/ 进程/ 行为/ 的/ 不动点/ 描述/ ./ 随后/ Bergstra/ 、/ Keller/ 定义/ 了/ 通信/ 功能/ 从而/ 建立/ 了/ ACP/ (/ AlgebraofCommunicatingProcess/ )/ [/ 13/ -/ 14/ ]/ ./ 其它/ 代表性/ 工作/ 包括/ ISO/ 的/ LOTOS/ (/ LanguageofTemporalOrderingSpecifications/ )/ [/ 15/ -/ 16/ ]/ 、/ ATP/ (/ AlgebraicTheoryofProcesses/ )/ [/ 17/ ]/ 等/ ./ 使用/ 代数/ 演算/ 把/ 系统/ 的/ 事件/ 或/ 进程/ 与/ 时间/ 、/ 触发/ 概率/ 等/ 信息/ 相关联/ 起来/ ,/ 从而/ 可/ 对/ 并发/ 系统/ 定量/ 描述/ 或/ 评价/ [/ 18/ ]/ ./ 进程/ 代数/ 在/ 我国/ 也/ 得到/ 了/ 充分/ 的/ 重视/ ,/ 林/ 惠民/ 院士/ 设计/ 并/ 实现/ 了/ 进程/ 代数/ 验证/ 工具/ PAM/ // VPAM/ ,/ 并/ Page3/ 与/ 英国/ Hennessy/ 教授/ 合作/ 提出/ ,/ 独立/ 发展/ 了/ “/ 符号/ 互/ 模拟/ ”/ 理论/ ,/ 解决/ 了/ 传统/ 并发/ 计算/ 模型/ 对/ 大量/ 实际/ 应用/ 不能/ 有效/ 模拟/ 的/ 问题/ [/ 19/ -/ 20/ ]/ ,/ 在/ 国内外/ 产生/ 了/ 广泛/ 的/ 影响/ ./ 任何/ 进程/ 语言/ 都/ 需要/ 定义/ 其/ 操作/ 语义/ ,/ 对系统/ 组件/ 的/ 行为/ 效果/ 进行/ 描述/ ,/ 从而/ 使得/ 其所/ 描述/ 的/ 语义/ 明确/ 、/ 避免/ 二义性/ ./ Plotkin/ 提出/ 了/ 一种/ 称为/ 结构化/ 操作/ 语义/ (/ StructuralOperationalSemantics/ ,/ SOC/ )/ 的/ 语义/ 描述/ 方法/ ,/ 它/ 把/ 复合/ 成分/ 的/ 操作/ 语义/ 归结为/ 其/ 各个/ 组成部分/ 的/ 操作/ 语义/ ,/ 并/ 定义/ 了/ 形如/ p/ →/ / / α/ p/ 的/ 进程/ 变迁/ ,/ 表示/ 进程/ P/ 执行/ 动作/ α/ 而/ 演化/ 为/ 进程/ p/ [/ 21/ ]/ ./ 并发/ 系统/ 的/ 行为/ 涉及/ 进程/ 的/ 状态/ 、/ 组件/ 的/ 活动/ 和/ 触发/ 活动/ 达到/ 某种/ 状态/ 的/ 事件/ ,/ 对/ 三者/ 之间/ 关系/ 进行/ 描述/ 主要/ 有/ 标号/ 变迁/ 系统/ [/ 22/ ]/ 、/ 事件/ 结构/ [/ 23/ -/ 24/ ]/ 描述/ 等/ ,/ 其中/ 事件/ 结构/ 描述/ 事件/ 之间/ 的/ 关系/ ,/ 而/ 标号/ 变迁/ 系统/ 则/ 侧重于/ 描述/ 状态/ 之间/ 的/ 关系/ ./ λ/ 演算/ 作为/ 顺序/ 、/ 函数/ 式/ 、/ 读写/ 程序/ 的/ 计算/ 模型/ ,/ CSP/ 、/ CCS/ 作为/ 静态/ 并发/ 、/ 并行/ 的/ 计算/ 模型/ ,/ π/ 演算/ [/ 25/ -/ 27/ ]/ 、/ 环境/ (/ Ambient/ )/ 演算/ [/ 28/ ]/ 、/ Seal/ [/ 29/ ]/ 演算/ 等/ 作为/ 移动/ 通信/ 、/ 动态/ 并发/ 、/ 并行计算/ 模型/ ,/ 从/ 这个/ 发展/ 可知/ 计算/ 行为/ 的/ 数学/ 描述/ 从/ 顺序/ 、/ 并行/ 、/ 并发/ 到/ 移动/ 、/ 交互/ 逐步/ 演进/ ,/ 而/ 移动/ 、/ 并发/ 计算/ 行为/ 的/ 基础/ 是/ 并行计算/ 行为/ ,/ 并行计算/ 的/ 形式/ 语义学/ 及/ 形式化/ 方法/ 的/ 研究/ 是/ 理论/ 计算机/ 研究/ 中/ 的/ 重大/ 问题/ 之一/ ./ 其中/ Milner/ 等/ 提出/ 的/ 描述/ 移动/ 通信/ 系统/ 、/ 刻画/ 进程/ 的/ 互/ 模拟/ 等价关系/ 的/ π/ 演算/ ,/ 得到/ 了/ 广泛/ 关注/ ./ 为/ 描述/ 组件/ 的/ 行为/ 和/ 结构/ ,/ 建立/ 组件/ 及其/ 交互/ 行为/ 的/ 描述/ 表达式/ 极为重要/ ,/ 这/ 也/ 是/ 本文/ 的/ 重点/ 内容/ ./ 由于/ π/ 演算/ 能够/ 描述/ 结构/ 不断/ 变化/ 的/ 、/ 移动/ 的/ 、/ 并发/ 的/ 、/ 交互/ 的/ 系统/ ,/ 同时/ π/ 演算/ 具有/ 成熟/ 的/ 互/ 模拟/ 、/ 等价/ 性/ 等/ 理论/ ,/ 因此/ 本文/ 提出/ 的/ 组件/ 交互/ 行为/ 建模/ 理论/ 主要/ 基于/ π/ 演算/ ./ 名/ :/ 组件/ 之间/ 链接/ 的/ 名称/ ./ 发送/ // 接受/ 动作/ :/ 设/ a/ 为/ 组件/ 的/ 一个/ 动作/ ,/ 则/ a/ -/ 表示/ 动作/ 的/ 发送/ 行为/ ,/ a/ 则/ 直接/ 表示/ 接受/ 行为/ ./ 组件/ 结构/ 同余/ :/ 如果/ 两个/ 组件/ 行为/ 表达式/ P/ 、/ Q/ 是/ 结构/ 同余/ 的/ ,/ 则/ 可以/ 用名/ 替换/ 的/ 形式/ {/ b/ →/ // a/ →/ }/ 由/ P/ 转化/ 为/ Q/ 或/ 相反/ ,/ 记为/ P/ ≡/ Q/ ./ 组件/ 私有/ 通信/ 信道/ :/ 组件/ P/ 、/ Q/ 通过/ 通信/ 通道/ α/ 进行/ 通信/ ,/ 并/ 要求/ 任何/ 其它/ 组件/ 不能/ 通过/ α/ 与/ 组件/ P/ 、/ Q/ 通信/ ,/ 记/ 为/ (/ v/ α/ )/ (/ P/ |/ Q/ )/ ./ 但/ 通道/ α/ 本身/ 则/ 可/ 通过/ 组件/ P/ 或/ Q/ 传送/ 给/ 其它/ 组件/ ,/ 这样/ 其它/ 组件/ 就/ 可以/ 使用/ 通道/ α/ ,/ 从而/ 具有/ 描述/ 组件/ 动态/ 演变/ 的/ 能力/ ./ 程/ 或/ 线程/ ./ 并发/ :/ 记为/ P/ |/ Q/ ,/ 其中/ P/ 、/ Q/ 表示/ 并发/ 执行/ 的/ 进/ 输入/ 前缀/ c/ (/ x/ )/ ./ P/ :/ 表示/ 在/ 开始/ 组件/ P/ 之前/ 完成/ 通过/ 通信/ 通道/ c/ 接受/ 的/ 消息/ ,/ 使用/ 名/ x/ 接收/ 传送/ 过来/ 的/ 名/ ./ 这种/ 模型/ 用于/ 模拟/ 等待/ 一个/ 网络通信/ 事件/ ./ 输出/ 前缀/ c/ -/ 〈/ y/ 〉/ ./ P/ :/ 描述/ 了/ 在/ 组件/ P/ 发生/ 前/ 使用/ 通道/ c/ 将名/ y/ 发送/ 出去/ ./ 这种/ 情况/ 或/ 通过/ 网络/ 发送/ 一个/ 消息/ 或是/ 一个/ 转向/ 语句/ ./ 复制/ !/ P/ :/ 创建/ 一个/ 新/ 的/ 组件/ P/ 的/ 拷贝/ ./ 这/ 主要/ 用于/ 模拟/ 复制/ 过程/ ./ 建新/ 名/ (/ vx/ )/ P/ :/ 在/ 组件/ P/ 中/ 建立/ 常量/ x/ ,/ 为/ 通信/ 通道/ ./ 不/ 确定/ 选择/ P/ +/ Q/ :/ 不/ 确定/ 选择/ 执行/ 组件/ P/ 、/ Q/ ./ [/ x/ =/ y/ ]/ ./ P/ :/ 如果/ 名/ x/ 与/ y/ 相等/ 则/ 执行/ 组件/ P/ ./ T/ ./ P/ :/ 执行/ 一个/ 内部/ 动作/ T/ 后/ 执行/ 组件/ P/ ./ [/ x/ ≠/ y/ ]/ ./ P/ :/ 如果/ 名/ x/ 与/ y/ 不/ 相等/ 则/ 执行/ 组件/ P/ ./ 空/ 进程/ 0/ :/ 已经/ 执行/ 完毕/ 或/ 停止/ ./ 综上/ ,/ 组件/ 基本/ 表达式/ 为/ S/ ∷/ =/ c/ (/ x/ )/ ./ P/ |/ c/ -/ 〈/ y/ 〉/ ./ P/ |/ (/ vx/ )/ P/ |/ 0/ |/ P/ |/ P/ |/ !/ P/ ./ 2.2/ 组件/ 交互/ 行为/ 的/ 强/ 模拟/ 、/ 强互/ 模拟/ (/ 1/ )/ 组件/ 行为/ 强/ 模拟/ 设/ (/ Q/ ,/ T/ )/ 为/ 一个/ LTS/ ,/ R/ 为/ Q/ 上/ 二元关系/ ./ 满足/ 下列/ 条件/ 称/ R/ 为/ (/ Q/ ,/ T/ )/ 的/ 强/ 模拟/ :/ 两个/ 组件/ p/ 、/ q/ 满足/ pRq/ ,/ 如果/ p/ →/ / / α/ p/ ,/ 则/ 存在/ q/ ∈/ Q/ ,/ q/ →/ / / α/ q/ ,/ 且/ pRq/ ,/ 则/ 我们/ 就/ 认为/ q/ 模拟/ 了/ p/ ./ (/ 2/ )/ 组件/ 的/ 强互/ 模拟/ 关系/ R/ 是/ 序偶/ (/ x/ ,/ y/ )/ 对/ 的/ 集合/ ,/ 关系/ R/ 的/ 逆/ R/ -/ 1/ 为序/ 偶/ (/ y/ ,/ x/ )/ 对/ 的/ 集合/ ./ 基于/ 组件/ 集合/ Q/ 的/ 二元关系/ R/ ,/ 如果/ R/ 及其/ 逆均/ 为/ 强/ 模拟/ ,/ 则/ 称/ R/ 为/ 在/ 标号/ 变迁/ 系统/ LTS/ (/ Q/ ,/ T/ )/ 的/ 互/ 模拟/ 关系/ ,/ 且/ 组件/ p/ 与/ q/ 是/ 强/ 模拟/ 或强/ 等价/ ,/ 记为/ p/ ~/ q/ ./ (/ 3/ )/ 关联/ 组件/ 的/ 强互/ 模拟/ 两个/ 服务/ 系统/ P/ 、/ Q/ ,/ 设/ (/ C/ ,/ T/ )/ 为/ 一个/ LTS/ ,/ R/ 为/ Q/ 上/ 二元关系/ ./ 若/ 任意/ 两个/ 组件/ p/ 、/ q/ 满足/ p/ ~/ q/ 条件/ ,/ 我们/ 称/ 服务/ 系统/ P/ 、/ Q/ 在/ 关系/ R/ 上强/ 模拟/ ./ 2.3/ 组件/ 结构/ 替代/ 分析/ 组件/ 可能/ 受/ 环境/ 或/ 自身/ 影响/ 而/ 导致/ 某个/ 节点/ 组件/ 失败/ ,/ 而/ 不仅仅/ 和/ 节点/ 本身/ 有关/ ,/ 但/ 可能/ 很快/ 又/ 恢复/ 组件/ 功能/ ,/ 具有/ 很/ 高/ 失效/ 概率/ 且/ 又/ 有/ 很/ 高/ 失效/ 后/ 恢复/ 概率/ 的/ 特性/ ./ 同时/ ,/ 不同/ 的/ 节点/ 可能/ 会/ 提供/ 相同/ 或/ 相似/ 的/ 组件/ ,/ 因此/ 可以/ 通过/ 上述/ 观察/ 等价/ 性/ 得到/ 功能/ 相似/ 或/ 相同/ 的/ 组件/ ,/ 从而/ 获得/ 可靠/ 的/ 虚拟/ 组件/ 性能/ ./ Page4/ (/ 1/ )/ 顺序/ 可/ 替代/ 行为/ S1/ ?/ S2/ ./ 适应/ 的/ 条件/ 是/ 当/ 系统/ 的/ 性能/ 和/ 资源/ 条件/ 要求/ 不能/ 同时/ 运行/ 相同/ 或/ 相似/ 组件/ 获得/ 高/ 可靠/ 组件/ 的/ 情况/ ./ 组件/ S1/ ?/ S2/ 的/ 观察/ 等价/ 行为/ 等同于/ S1/ ,/ 当/ S1/ 失效/ 时/ 通过/ 组件/ S2/ 获得/ 组件/ ./ j/ =/ 1/ (/ 2/ )/ 多元/ 顺序/ 可/ 替代/ 行为/ C/ ?/ ∑/ n/ ∑/ nSj/ 是/ 观察/ 行为/ 与/ Si/ 相同/ 或/ 相似/ 的/ 组件/ 集合/ ,/ 当/ Si/ 失效/ 时/ 从/ ∑/ n/ (/ 3/ )/ 并发/ 竞争/ 替代/ 行为/ S1/ |/ S2/ ./ 允许/ 两个/ 组件/ S1/ 、/ S2/ 同时/ 并发/ 执行/ ,/ 组件/ S1/ |/ S2/ 的/ 观察/ 行为/ 与/ 最先/ 完成/ 的/ 组件/ 行为/ 相同/ ./ (/ 4/ )/ 多元/ 并发/ 竞争/ 替代/ 行为/ |/ ∑/ n/ 时/ 执行/ 取得/ 最先/ 执行/ 成功/ 的/ 组件/ ./ 2.4/ 组件/ 的/ 过程/ 控制/ 与/ 组件/ 环境/ 描述/ 时控/ 组件/ TimeServ/ (/ t/ ,/ S/ )/ :/ 执行/ 组件/ S/ 直到/ 组件/ 执行/ 时间/ 超过/ 可容忍/ 时间/ t/ 而/ 终止/ 组件/ S/ ./ 组件/ 选择/ 执行/ :/ 根据/ 输入/ 名/ 确认/ 执行/ 某个/ 组件/ ,/ x/ (/ v/ )/ ./ (/ [/ v/ =/ y1/ ]/ P1/ +/ [/ v/ =/ y1/ ]/ P2/ …/ )/ ,/ 其中/ yi/ 各不相同/ ./ 组件/ 触发器/ Exec/ (/ x/ )/ =/ defx/ (/ y/ )/ ./ y/ -/ :/ 通过/ 链接/ x/ 得到/ 链接/ y/ ,/ 然后/ 激活/ 链接/ y/ ./ 该式/ 常/ 称为/ 触发式/ ,/ 下列/ 两种/ 情况/ 等价/ :/ (/ 1/ )/ 直接/ 执行/ 进程/ P/ ;/ (/ 2/ )/ 进程/ P/ 加前缀/ z/ ,/ 然后/ 通过/ 触发式/ 传送/ z/ ./ 如/ (/ z/ )/ (/ x/ -/ z/ |/ z/ ./ P/ )/ 与/ 进程/ P/ 等价/ ./ 组件/ 环境/ C/ :/ 因为/ 组件/ 的/ 内部/ 交互/ 、/ 内部结构/ 对/ 组件/ 的/ 使用者/ 隐藏/ ,/ 组件/ 的/ 等价/ 性需/ 使用/ 观察/ 等价/ 性来/ 描述/ ./ 而/ 观察/ 等价/ 性是/ 基于/ 组件/ 执行/ 环境/ ,/ 因此/ 这里/ 给出/ 组件/ 环境/ 上下文/ 的/ 定义/ ./ 这里/ [/ ]/ 表示/ “/ 空/ ”/ 的/ 含义/ ,/ 即/ 等待/ 具体/ 的/ 组件/ 填入/ ./ C/ ∷/ =/ [/ ]/ |/ α/ ./ C/ |/ (/ vx/ )/ C/ |/ C/ |/ P/ |/ P/ |/ C/ |/ C/ ?/ C/ |/ !/ check/ (/ sigl/ )/ ./ Peer/ ;/ send/ (/ msg/ )/ ./ Peer/ ;/ forward/ (/ x/ )/ ./ RouerPeer/ ;/ push/ (/ msg/ )/ ./ RouerPeer/ ;/ check/ (/ sigl/ )/ ./ Peer/ ;/ send/ (/ msg/ )/ ./ Peer/ ;/ forward/ (/ x/ )/ ./ RouerPeer/ ;/ push/ (/ msg/ )/ ./ RouerPeer/ ;/ 3P2P/ 行为能力/ 描述/ 网络/ 组件/ 行为/ 分析/ 和/ 建模/ 是/ 验证/ 、/ 确认/ 、/ 分析/ 和/ 管理网络/ 组件/ 的/ 重要/ 工具/ ./ 下面/ 给出/ 使用/ 代数/ 的/ 方法/ 来/ 描述/ P2P/ 组件/ 的/ 行为/ ./ 分别/ 通过/ P2P/ 发现/ 行为/ 、/ 穿越/ 防火墙/ 行为/ 、/ 节点/ 消息/ 路由/ 行为/ 、/ P2P/ 缓存/ 等/ 给出/ 代数/ 语义/ 描述/ ./ 3.1/ Peer/ 节点/ 发现/ P2P/ 节点/ 通过/ 聚合/ 节点/ 发现/ 其它/ 各个/ 节点/ ./ 同/ peer/ 表示/ 发出请求/ 节点/ ,/ x/ 表示/ 标识/ 自身/ 信息/ 的/ 唯一/ 标识/ ;/ RenderPeer/ 表示/ 聚合/ 节点/ ,/ cachse/ 表示/ P2P/ 的/ 缓存/ 信息/ ./ 下面/ 给出/ 组件/ 行为/ 定义/ :/ 发出请求/ :/ ask/ (/ x/ )/ ./ Peer/ ;/ 接受/ 请求/ :/ ask/ (/ x/ )/ ./ RenderPeer/ ;/ 响应/ 返回/ :/ resps/ (/ info/ )/ ./ RenderPeer/ ;/ 接受/ 响应/ :/ resps/ (/ info/ )/ ./ Peer/ ;/ 缓存/ 信息/ :/ (/ vcachse/ )/ Peer/ ;/ 发现/ 组件/ 行为/ 描述/ ,/ 包括/ 节点/ 的/ 发送/ 、/ 聚合/ 节点/ 接收/ 、/ 聚合/ 节点/ 响应/ 及其/ 之间/ 的/ 交互/ 行为/ :/ ask/ (/ x/ )/ ./ Peer/ →/ / / askPeer/ ;/ ask/ (/ x/ )/ ./ RenderPeer/ →/ / / askRenderPeer/ (/ cache/ // x/ )/ ;/ resps/ (/ info/ )/ ./ RenderPeerresp/ →/ / / sRenderPeer/ (/ cache/ // info/ )/ ;/ resps/ (/ info/ )/ ./ Peerrep/ →/ / / sPeer/ ;/ ask/ (/ info/ )/ ./ RenderPeer/ →/ / / askRenderPeer/ ;/ ask/ (/ x/ )/ ./ Peer/ →/ / / askPeer/ (/ x/ // info/ )/ ./ 3.2/ P2P/ 穿越/ 防火墙/ 行为/ 分析/ P2P/ 节点/ 之间/ 如果/ 被/ 防火墙/ 隔离/ ,/ 相互之间/ 通信/ 的/ 机制/ 可/ 按/ 如下/ 行为/ 进行/ :/ 外部/ Peer/ 将/ 消息/ 发送给/ 防火墙/ 外部/ 的/ 路由/ Peer/ ,/ 外部/ 的/ 路由/ Peer/ 等待/ 防火墙/ 内部/ 的/ 节点/ 定期/ 主动/ 发出/ 连接/ 路由/ Peer/ ,/ 然后/ 将/ 相应/ 信息/ 发给/ 内部/ 的/ Peer/ ./ 其/ 过程/ 描述/ 如下/ (/ 其中/ Peer1/ 、/ RendPeer/ 分别/ 是/ 防火墙/ 内部/ 通信/ 的/ 两个/ 节点/ ,/ Peer/ 为/ 通信/ 节点/ 、/ RendPeer/ 为/ 转发/ 节点/ ,/ Peer/ 为/ 防火墙/ 外部/ 转发/ 节点/ )/ :/ Page5send/ (/ msg/ )/ ./ Peer1/ |/ send/ (/ msg/ )/ ./ RouerPeer1/ →/ / / / sendPeer1/ |/ RouerPeer1/ (/ msg/ )/ ;/ forward/ (/ msg/ )/ ./ RouerPeer1/ |/ forward/ (/ x/ )/ ./ RouerPeer2forward/ (/ x/ →/ / / / / / )/ RouerPeer1/ |/ RouerPeer2/ (/ x/ // msg/ )/ ;/ push/ (/ msg/ )/ ./ RouerPeer2/ |/ push/ (/ msg/ )/ ./ Peer2p/ →/ / / / ushRouerPeer2/ |/ Peer2/ (/ msg/ )/ ;/ !/ check/ (/ sigl/ )/ ./ Peer2/ ;/ check/ (/ sigl/ )/ ./ Peer2/ ;/ send/ (/ msg/ )/ ./ Peer1/ |/ send/ (/ msg/ )/ ./ RouerPeer/ →/ / / / sendPeer1/ |/ RouerPeer/ (/ msg/ )/ ;/ push/ (/ msg/ )/ ./ RouerPeer/ |/ push/ (/ msg/ )/ ./ Peer2p/ →/ / / / ushRouerPeer/ |/ Peer2/ (/ msg/ )/ ./ 4/ 网络/ 自/ 管理/ 协议/ 验证/ 4.1/ 协议/ 提出/ 网络/ 的/ 自/ 管理/ 是/ 异地/ 远程/ 网络管理/ 的/ 基础/ ,/ 自/ 管理/ 本身/ 也/ 是/ 一个/ 非常复杂/ 的/ 问题/ ./ 自/ 管理/ (/ 源生/ 管理/ )/ 是/ 网络/ 正常/ 运行/ 和/ 提供/ 组件/ 理想/ 的/ 实现/ 手段/ ./ 如/ 交换机/ 、/ 路由器/ 等/ 网络/ 接入点/ 的/ 自我管理/ ,/ 包括/ 自/ 配置/ 、/ 自/ 优化/ 、/ 自/ 治愈/ 等/ ,/ 是/ 从根本上/ 提高/ 网络/ 可/ 生存性/ 的/ 重要/ 保证/ ./ 自/ 管理/ 是/ 网络服务/ 的/ 热/ 备份/ 、/ 迁移/ 、/ 配置/ 和/ 性能/ 分析/ 等/ 网络管理/ 远程/ 实现/ 的/ 基础/ 和/ 前提/ ./ 而且/ ,/ 这种/ 网络/ 自/ 管理/ 能力/ 本身/ 的/ 可/ 生存性/ 要/ 高于/ 网元/ 数据/ 路由/ 的/ 生存能力/ ./ 因此/ ,/ 健壮/ 的/ 网络管理/ 通信/ 能力/ 就/ 成为/ 了/ 一个/ 核心/ 工作/ ./ 利用/ 现有/ 的/ 网络设施/ 和/ 通信协议/ 建立/ 网络管理/ 通信/ 是/ 目前/ 的/ 主要/ 实现/ 手段/ ./ 这种/ 叠加/ 在/ 现有/ 数据/ 路由/ 交换/ 通道/ 之上/ 的/ 管理/ 信息/ 传输/ ,/ 不可避免/ 地/ 受到/ 现有/ 网络/ 数据通信/ 路由/ 协议/ 本身/ 的/ 安全/ 、/ 可靠性/ 和/ 可管理性/ 的/ 局限/ 而/ 受到限制/ ,/ 只能/ 以/ 一种/ 被动/ 的/ 方式/ 实现/ 网络/ 的/ 配置/ 和/ 管理/ ./ 网络/ 数据/ 路由/ 的/ 目的/ 是/ 数据/ 的/ 内容/ 安全/ 、/ 高效/ 的/ 转发/ 和/ 传输/ ,/ 管理/ 通信/ 的/ 目标/ 是/ 确保/ 数据通信/ 目标/ 的/ 实现/ ,/ 将/ 性质/ 和/ 目的/ 完全/ 不同/ 的/ 数据/ 路由/ 通道/ 和/ 管理/ 通信/ 路由/ 通道/ 不加区分/ 地/ 进行/ 转发/ 与/ 传输/ 是/ 网络管理/ 的/ 一个/ 重大/ 瓶颈/ ./ 在/ 不/ 明显增加/ 设备/ 负载/ 的/ 前提/ 下/ ,/ 将/ 数据通信/ 和/ 管理/ 通信/ 分别/ 路由/ 处理/ ,/ 是/ 提高/ 网络管理/ 能力/ 的/ 重要/ 实现/ 手段/ ./ 本质/ 上/ 这/ 是/ 网络管理/ 和/ 网络通信/ 共享/ 相同/ 物理/ 基础设施/ 基础/ 上/ 的/ 逻辑/ 分离/ ,/ 为/ 从根本上/ 提高/ 网络管理/ 能力/ 提供/ 了/ 重要/ 保证/ ./ 这种/ 专用/ 于/ 配置/ 和/ 管理/ 的/ 管理/ 路由/ 通道/ 逻辑/ 上/ 独立/ 于/ 数据/ 路由/ ,/ 具有/ 简单/ 、/ 安全/ 、/ 健壮/ 的/ 特征/ ./ 共享/ 物理/ 网络设施/ ,/ 建立/ 逻辑/ 上/ 独立/ 的/ 管理/ 路由/ 通信/ 通道/ ,/ 从/ 异地/ 远程管理/ 网络/ ,/ 国际/ 上/ 提出/ 了/ 各种/ 解决方案/ ./ 得到/ 了/ 国际/ 上本/ 领域/ 专家学者/ 的/ 充分/ 重视/ ./ Maltz/ 等/ 人/ [/ 30/ ]/ 提出/ 的/ 元/ 管理/ 服务/ 层/ MetaManage/ -/ mentServiceLayer/ (/ MMSL/ )/ 是/ 其中/ 的/ 一个/ 代表/ ./ MMSL/ 通过/ ComponentManager/ (/ CM/ )/ 和/ Manage/ -/ mentAuthority/ (/ MA/ )/ 分别/ 实现/ 被/ 管网/ 元/ 管理/ 端口/ 输出/ 和/ 管理/ 操作/ 中心/ ./ 该/ 协议/ 能够/ 很/ 好地解决/ 网络/ 的/ 管理/ 通信/ 路由/ 与/ 数据/ 路由/ 的/ 区别/ ./ 但/ 该/ 协议/ 存在/ 一个/ 重要/ 的/ 缺点/ ./ 虽然/ 提及/ 了/ MA/ 失效/ 及/ 多个/ MA/ 并存/ 的/ 情况/ ./ 但/ 存在/ 一下/ 问题/ :/ (/ 1/ )/ 没有/ MA/ 中/ 密钥/ 和/ 加密/ 源/ 路由/ 的/ 处理/ ,/ 一旦/ MA/ 失效/ 只能/ 重新/ 洪泛/ 、/ 重新/ 生成/ 各个/ 节点/ 的/ 源/ 路由/ ;/ (/ 2/ )/ 一个/ MA/ 失效/ ,/ 各个/ CM/ 都/ 要/ 再/ 更新/ 安全/ 源/ 路由/ ,/ 原来/ 所有/ 缓存/ 均/ 失效/ ;/ (/ 3/ )/ 需要/ 重新/ 生成/ MA/ 与/ CM/ 之间/ 的/ 公钥/ // 私钥/ 对/ ./ 这些/ 都/ 需要/ 一定/ 的/ 时间/ ,/ 从而/ 影响/ 了/ 网络管理/ ./ 这/ 类似/ 于/ 计算机系统/ 出/ 了/ 问题/ 必须/ 重新启动/ 计算机/ 一样/ ./ 本文/ 在/ MMS/ 基础/ 上/ 提出/ 了/ RingChainMetaManagementService/ (/ RCMMS/ )/ ,/ 能够/ 在/ 不/ 中断/ 管理/ 的/ 前提/ 下/ ,/ 恢复/ MA/ 的/ 管理/ 能力/ ,/ 原公钥/ // 私钥/ 不变/ 、/ 源/ 路由/ 不变/ 、/ 生成/ 树/ 不变/ ,/ 从而/ 极大/ 提高/ 了/ 效率/ ./ 下面/ 给出/ 其/ 逻辑/ 含义/ 并/ 使用/ 进程/ 代数/ 证明/ 其/ 逻辑/ 的/ 正确性/ ./ 4.2/ RCMMS/ 协议/ 如图/ 1/ 所示/ ,/ MA/ 作为/ 管理/ 节点/ 其/ 重要性/ 不言而喻/ ./ 为了/ 保护/ 正在/ 启用/ 的/ MA/ 节点/ 的/ 信息/ ,/ 使用/ 了/ 链式/ 洋葱/ 路由/ ./ 这种/ 路由/ 独立/ 于/ 数据/ 路由/ ,/ 采用/ 自身/ 管理/ 路由/ ,/ 具体/ 实现/ 方法/ 和/ MMS/ 一致/ ,/ 当/ MA/ 集合/ 中/ 建立/ 起后/ ,/ 采用/ 任意/ 一点/ 作为/ 发出/ 加密/ 路由/ 原点/ 向/ 另外/ 间隔/ 特定/ 长度/ 的/ 节点/ 发出/ 安全/ 源/ 路由/ ./ 而/ 这种/ 出发/ 原点/ 节点/ 根据/ 一定/ 步长/ 逐步/ 改变/ ,/ 从而/ 确保/ 了/ 整个/ 链式/ 结构/ 信息/ 一致/ ,/ 而/ 各个/ 节点/ 又/ 无法/ 得到/ 全局/ MA/ 拓扑/ ,/ 从而/ 当/ 正在/ 启用/ 的/ 节点/ 失效/ 后/ 能够/ 采用/ 任意/ 其它/ 节点/ 取代/ ,/ 原来/ 的/ 生成/ 树/ 及其/ 中/ 各个/ 节点/ 的/ 缓存/ 路由/ 仍然/ 有效/ ./ 这样/ 就/ 可以/ 极大地提高/ 整个/ 系统/ 的/ 速度/ 、/ 安全/ 和/ 稳定性/ ./ MA/ 发出/ pathexplorer/ 洪泛/ 消息/ 对/ CM/ 进行/ 发现/ ,/ 为了/ 及时发现/ 路由/ 失效/ ,/ 需要/ 定期/ 地/ 发起/ pathexplorer/ 洪泛/ 消息/ ./ 这种/ 消息/ 带有/ 唯一/ 的/ 标识符/ ./ 当/ CM/ 从/ 其一/ 接口/ 接收/ 到/ MA/ 的/ pathexplorer/ 洪泛/ 消息/ 后/ 将/ 自身/ ID/ 追加/ 在/ pathexplorer/ 洪泛/ 消/ Page6/ 息/ ,/ 然后/ 向/ 其/ 自身/ 其它/ 接口/ 发出/ ,/ 同时/ 将/ 该/ MA/ 到/ CM/ 的/ 路径/ 缓存/ 用以/ 从/ CM/ 到/ MA/ 逆向/ 通信/ ./ 由于/ pathexplorer/ 洪泛/ 消息/ 本身/ 带有/ 序号/ ,/ 这样/ 就/ 可以/ 避免/ 重复/ 泛洪/ ./ 其/ 行为/ 描述/ 为/ 洪泛/ 路由/ :/ flood/ (/ ID/ )/ ./ MA/ ;/ flood/ (/ ID/ )/ ./ CM/ ;/ 启动/ 行为/ :/ boot/ (/ ID/ )/ ./ MA/ ;/ boot/ (/ ID/ )/ ./ CM/ ;/ 时延/ 路由/ 更新/ 洪泛/ :/ Timer/ (/ timerflood/ )/ ./ flood/ (/ pathexploer/ )/ ./ MA/ ;/ 拓扑/ 更新/ 洪泛/ :/ topology/ ./ flood/ (/ ID/ )/ ./ MA/ ;/ 缓存/ 路由/ :/ cache/ (/ path/ )/ ./ CM/ ;/ 链路/ 回声/ :/ send/ (/ mgmtIP/ )/ ./ CM/ ;/ send/ (/ mgmtIP/ )/ ./ MA/ ;/ 私有/ 通信/ 通道/ :/ new/ (/ comm/ )/ (/ comm/ ./ comm/ ./ MA/ |/ comm/ ./ comm/ ./ CM/ )/ ;/ 更新/ 行为/ :/ update/ (/ ID/ )/ ./ MA/ ;/ update/ (/ ID/ )/ ./ CM/ ;/ install/ (/ ID/ )/ ./ MA/ ;/ install/ (/ ID/ )/ ./ MA/ ;/ 链路/ 状态/ 通信/ 行为/ :/ send/ (/ ID/ ,/ Link/ )/ ./ CM/ ;/ send/ (/ ID/ ,/ Link/ )/ ./ CM/ ;/ 失效/ 更新/ 路由/ :/ TopologyUpdate/ (/ flood/ )/ ./ flood/ (/ )/ ./ CM/ ;/ 追加/ 路由/ :/ append/ (/ selfID/ )/ ./ CM/ ;/ 变更/ 路由/ :/ change/ (/ state/ )/ ./ Advertise/ (/ LSA/ )/ ./ CM/ :/ 创建/ 管理/ 网元/ 代理/ :/ create/ (/ mm0/ ,/ IP/ )/ ./ MA/ ;/ create/ (/ mm0/ ,/ IP/ )/ ./ CM/ ;/ CM/ 与/ MA/ 之间/ 通信/ :/ request/ (/ x/ )/ ./ CM/ ,/ request/ (/ x/ )/ ./ MA/ ;/ MA/ 转发/ 通信/ :/ forward/ (/ x/ )/ ./ CM/ ,/ forward/ (/ x/ )/ ./ MA/ ;/ MA/ 的/ 安全/ 源/ 路由/ :/ encrypt/ (/ PathNodes/ )/ ./ MA/ ;/ CM/ 转发/ 路由/ :/ encrypt/ (/ PathNodes/ )/ ./ forward/ ./ (/ PathNodes/ )/ ./ CM/ ./ 4.3/ RCMMS/ 协议/ 逻辑推理/ 4.3/ ./ 1MA/ 集合/ 节点/ 链式/ 洋葱/ 路由/ 首次/ 运行/ 时/ ,/ 当前/ 采用/ 的/ MA/ 节点/ 将/ MA/ 的/ 最/ MA/ 节点/ 发出/ 洪泛/ 或/ 时延/ 发出/ 洪泛/ :/ 小/ 生成/ 树及/ 各个/ 节点/ 的/ 公钥/ 信息/ 加密/ ./ 然后/ 当前/ 节点/ MA/ 将/ 最小/ 生成/ 树/ 、/ 各个/ CM/ 节点/ 的/ 公钥/ 加密/ 发送/ ./ 发送/ 的/ 终点/ 是/ 与/ 当前/ 采用/ 的/ MA/ 节点/ 相隔/ 一定/ 的/ 节点/ ./ 经过/ 一定/ 的/ 时间/ 间隔/ 后该/ 终点/ 作为/ 启动/ 继续/ 采用/ 各个/ 的/ 方式/ 进行/ 环形/ 路由/ ./ 当前/ 采用/ 的/ MA/ 一旦/ 受到/ 攻击/ ,/ 离/ 他/ 最近/ 的/ 节点/ 就/ 自然/ 成为/ 当前/ 节点/ ,/ 从而/ 避免/ 了/ 相应/ 节点/ 的/ 重新/ 洪泛/ ./ 采用/ 洋葱/ 路由/ 可/ 使得/ 各个/ 节点/ 对除/ 相邻/ 节点/ 外/ 的/ 所有/ 节点/ 并/ 不/ 感知/ ,/ 因此/ 极大/ 地/ 保护/ 了/ 该/ 环路/ 节点/ ./ 具体/ 过程/ 描述/ 如下/ :/ receive/ (/ ID/ )/ ./ uncover/ (/ privekey/ )/ ./ receive/ (/ ID/ )/ ./ MA/ |/ receive/ (/ ID/ )/ ./ uncover/ (/ ID/ )/ receive/ (/ ID/ +/ x/ )/ ./ MA/ ;/ TimerServer/ ./ receive/ (/ ID/ )/ ./ MA/ |/ receive/ (/ ID/ )/ ./ MA/ ./ 4.3/ ./ 2MA/ 集合/ 节点/ 链式/ 洋葱/ 路由/ flood/ (/ ID/ )/ ./ MA/ |/ TimerServer/ (/ timerflood/ )/ ./ flood/ (/ pathexploer/ )/ ./ MA/ |/ topology/ ./ flood/ (/ ID/ )/ ./ MA/ ;/ CM/ 节点/ 接受/ 洪泛/ 、/ 追加/ ID/ 、/ 缓存/ 路径/ 、/ 转发/ 洪泛/ ,/ 给出/ 链路/ 状态/ 信息/ :/ flood/ (/ ID/ )/ ./ append/ (/ selfID/ )/ ./ send/ (/ ID/ ,/ SLA/ )/ ./ flood/ (/ ID/ )/ ./ CM/ |/ change/ (/ state/ )/ ./ Advertise/ (/ LSA/ )/ ./ CM/ 通过/ 上述/ 步骤/ 后/ ,/ 一个/ MA/ 可以/ 获得/ 上述/ 各个/ CM/ 返回/ 的/ 信息/ ,/ 从而/ 得到/ 网元/ 链接/ 的/ 图状/ 结构/ ,/ 根据/ Minimumspanningtree/ 、/ Dijkstra/ 等/ 算法/ 可以/ 获得/ 以/ 当前/ MA/ 为/ 原点/ 到/ 各个/ 顶点/ 的/ 最/ 短/ 路径/ ./ 当/ 两个/ CM/ 需要/ 通信/ 时/ ,/ CM/ 通过/ 向/ MA/ 发送/ 转发/ 请求/ 实现/ :/ new/ (/ request/ ,/ forward/ )/ (/ requet/ (/ x/ )/ ./ CM1/ |/ request/ (/ x/ )/ ./ forward/ ./ MA/ |/ forward/ (/ x/ )/ ./ CM/ )/ ./ MA/ 构造/ 加密/ 源/ 路由/ :/ 由于/ MA/ 知道/ 所有/ 的/ CM/ 密钥/ ,/ 因此/ 可/ 构建/ 各个/ CM/ 的/ 安全/ 源/ 路由/ ,/ ConstructOnionEncryptedRoute/ ./ MA/ ;/ 当/ CM/ 发现/ 某个/ 邻接/ 链路/ 不通/ 就/ 会/ 向/ MA/ 发送/ 链路/ 状态/ 通告/ LSA/ ,/ 这是/ 通过/ 路由/ 备份/ 实现/ 的/ ,/ 如/ 最优/ 路径/ 、/ 次优/ 路径/ 等/ ./ 4.3/ ./ 3MA/ 集合/ 中/ MA1/ 替代/ MA0/ 根据/ RCMMS/ 协议/ 要求/ ,/ 只要/ MA/ 集合/ 中/ 的/ 元素/ 具有/ 强/ 模拟能力/ 就/ 可以/ ./ 这样/ 就/ 可以/ 确保/ 当前/ MA/ 根/ 受到/ 攻击/ 后/ 能够/ 自动/ 的/ 替代/ ./ 根据/ 强/ 模拟/ 的/ 定义/ ,/ 设/ 关联/ 关系/ R/ 满足/ R/ =/ {/ (/ MA00/ ,/ MA10/ )/ ,/ (/ MA00/ ,/ MA12/ )/ ,/ (/ MA01/ ,/ MA11/ )/ ,/ (/ MA02/ ,/ MA11/ )/ }/ ,/ 其/ 关系/ 如图/ 2/ 所示/ ./ 证明/ 两个/ 组件/ MA0/ 、/ MA1/ 是/ 强互/ 模拟/ 的/ ./ 其中/ MA0/ 表示/ 正在/ 使用/ 的/ MA/ 根/ ,/ 而/ MA1/ 则/ 是/ 另/ 一/ 具有/ 相似/ 功能/ 的/ MA/ ./ 如图/ 2/ 所示/ ./ Page7/ 证明/ ./ (/ 1/ )/ 因为/ (/ P0/ ,/ Q0/ )/ ∈/ R/ 且/ MA00/ →/ / / aMA01/ ,/ 则/ 存在/ MA10/ →/ / / aMQ11/ ,/ 且/ (/ MA01/ ,/ MA11/ )/ ∈/ R/ ;/ MA00/ →/ / / aMA02/ ,/ 则/ 存在/ MA10/ →/ / / aMA11/ ,/ 且/ (/ MA02/ ,/ MA11/ )/ ∈/ R/ ;/ (/ 2/ )/ 因为/ (/ MA00/ ,/ MA12/ )/ ∈/ R/ 且/ MA00/ →/ / / aMA01/ ,/ 则/ 存在/ MA12/ →/ / / aMA11/ ,/ 且/ (/ MA01/ ,/ MA11/ )/ ∈/ R/ ;/ MA00/ →/ / / aMA02/ ,/ 则/ 存在/ MA12/ →/ / / aMA11/ ,/ 且/ (/ MA02/ ,/ MA11/ )/ ∈/ R/ ;/ (/ 3/ )/ 因为/ (/ MA01/ ,/ MA11/ )/ ∈/ R/ 且/ MA01/ →/ / / aMA02/ ,/ 则/ 存在/ MA11/ →/ / / aMA11/ ,/ 且/ (/ MA02/ ,/ MA11/ )/ ∈/ R/ ;/ (/ 4/ )/ 因为/ (/ Ma02/ ,/ MA11/ )/ ∈/ R/ 且/ :/ MA02/ →/ / / aMA02/ ,/ 则/ 存在/ MA11/ →/ / / aMA11/ ,/ 且/ (/ MA12/ ,/ MA11/ )/ ∈/ R/ ;/ 因此/ MA1/ 强/ 模拟/ MA0/ ,/ 因此/ 完全/ 可用/ MA1/ 取代/ MA0/ ./ 4.3/ ./ 4MA/ 集合/ 中/ MA1/ 互/ 替代/ MA0/ 如果/ 管理/ 组件/ MA/ 集合/ 中/ 存在/ 如下/ 关联/ 关系/ R/ ,/ 满足/ R/ =/ {/ (/ MA00/ ,/ MA10/ )/ ,/ (/ MA00/ ,/ MA12/ )/ ,/ (/ MA01/ ,/ MA11/ )/ ,/ (/ MA02/ ,/ MA11/ )/ }/ ,/ R/ -/ 1/ =/ {/ (/ MA10/ ,/ MA00/ )/ ,/ (/ MA10/ ,/ MA02/ )/ ,/ (/ MA11/ ,/ MA01/ )/ ,/ (/ MA12/ ,/ MA01/ )/ }/ ,/ 其中/ {/ MA00/ ,/ MA01/ ,/ MA02/ }/ ∈/ P/ ,/ {/ MA10/ ,/ MA11/ ,/ MA12/ }/ ∈/ MA1/ ,/ MA0/ 、/ MA1/ 是/ 可以/ 互相/ 取代/ 的/ ,/ 这/ 可以/ 根据/ 强/ 等价/ 性/ 证明/ ./ 证明/ ./ (/ 1/ )/ 服务/ 系统/ MA1/ 强/ 模拟/ MA0/ ./ 因为/ (/ MA00/ ,/ MA10/ )/ ∈/ R/ 且/ :/ MA00/ →/ / / aMA01/ ,/ 则/ 存在/ MA10/ →/ / / aMA11/ ,/ 且/ (/ MA01/ ,/ MA11/ )/ ∈/ R/ ;/ MA00/ →/ / / aMA02/ ,/ 则/ 存在/ MA10/ →/ / / aMA11/ ,/ 且/ (/ MA02/ ,/ MA11/ )/ ∈/ R/ ;/ 因为/ (/ MA00/ ,/ MA12/ )/ ∈/ R/ 且/ MA00/ →/ / / aMA01/ ,/ 则/ 存在/ MA12/ →/ / / aMA11/ ,/ 且/ (/ MA001/ ,/ MA11/ )/ ∈/ R/ ;/ MA00/ →/ / / aMA02/ ,/ 则/ 存在/ MA12/ →/ / / aMA11/ ,/ 且/ (/ MA002/ ,/ MA11/ )/ ∈/ R/ ;/ 因为/ (/ MA01/ ,/ MA11/ )/ ∈/ R/ 且/ :/ MA01/ →/ / / aMA02/ ,/ 则/ 存在/ MA11/ →/ / / aMA11/ ,/ 且/ (/ MA002/ ,/ MA11/ )/ ∈/ R/ ;/ 因为/ (/ MA02/ ,/ MA11/ )/ ∈/ R/ 且/ :/ MA02/ →/ / / aMA02/ ,/ 则/ 存在/ MA11/ →/ / / aMA11/ ,/ 且/ (/ MA002/ ,/ MA11/ )/ ∈/ R/ ;/ 因此/ 服务/ 系统/ MA1/ 强/ 模拟/ MA0/ ./ (/ 2/ )/ 服务/ 系统/ MA0/ 强/ 模拟/ MA1/ ./ 因为/ (/ MA10/ ,/ MA00/ )/ ∈/ R/ -/ 1/ 且/ :/ MA10/ →/ / / aMA11/ ,/ 则/ 存在/ MA00/ →/ / / aMA01/ ,/ 且/ (/ MA11/ ,/ MA01/ )/ ∈/ R/ -/ 1/ ;/ 因为/ (/ MA12/ ,/ MA00/ )/ ∈/ R/ -/ 1/ 且/ MA12/ →/ / / aMA11/ ,/ 则/ 存在/ MA00/ →/ / / aMA01/ ,/ 且/ (/ MA11/ ,/ MA01/ )/ ∈/ R/ -/ 1/ ;/ 因为/ (/ MA11/ ,/ MA01/ )/ ∈/ R/ -/ 1/ 且/ :/ MA11/ →/ / / bMA12/ ,/ 则/ 存在/ MA01/ →/ / / bMA00/ ,/ 且/ (/ MA12/ ,/ MA00/ )/ ∈/ R/ -/ 1/ ;/ 因为/ (/ MA11/ ,/ MA02/ )/ ∈/ R/ -/ 1/ 且/ :/ MA11/ →/ / / aMA11/ ,/ 则/ 存在/ MA02/ →/ / / aMA02/ ,/ 且/ (/ MA11/ ,/ MA02/ )/ ∈/ R/ -/ 1/ ;/ 因此/ 可知/ ,/ MA00/ 、/ MA1/ 基于/ 关系/ R/ 强互/ 模拟/ ,/ 可以/ 相互/ 替代/ ./ 5/ 结论/ 通过/ 代数/ 演算/ 可以/ 充分/ 理解/ 计算/ 模型/ 、/ 网络协议/ 和/ 交互/ 行为/ 过程/ ,/ 通过/ 等价/ 、/ 互/ 模拟/ 等/ 方法/ 可/ 对/ 多/ 网络协议/ 行为/ 过程/ 进行/ 严谨/ 的/ 描述/ 和/ 推理/ ./ 目前/ 以/ 网络服务/ 组件/ 为/ 基础/ 的/ 协议/ 交互/ 行为/ 的/ 数学/ 描述/ 研究/ 急需/ 加强/ ./ 因此/ 基于/ 现有/ 研究/ 工作/ 基础/ ,/ 加强/ 对/ 网络服务/ 组件/ 的/ 交互/ 行为/ 、/ 计算/ 行为/ 的/ 行为/ 演算/ 研究/ 非常/ 必要/ ./ 这/ 对/ 网络协议/ 行为/ 分析/ 、/ 交互/ 过程/ 行为/ 定义/ 和/ 确认/ 具有/ 重要/ 意义/ ./ Page8/ 

