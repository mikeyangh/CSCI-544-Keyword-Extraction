Page1/ 一种/ 基于/ Hash/ 函数/ 和/ 分组/ 密码/ 的/ 消息/ 认证码/ 徐津/ 1/ )/ ,/ 2/ )/ 温巧燕/ 1/ )/ 王/ 大印/ 3/ )/ 1/ )/ (/ 北京邮电大学/ 网络/ 与/ 交换/ 技术/ 国家/ 重点/ 实验室/ 北京/ 100876/ )/ 2/ )/ (/ 北京/ 电子科技/ 学院/ 北京/ 100070/ )/ 3/ )/ (/ 中国科学院/ 信息工程/ 研究所/ 北京/ 100093/ )/ 摘要/ 基于/ Hash/ 函数/ 的/ HMAC/ 是/ 一种/ 应用/ 最为/ 广泛/ 的/ 消息/ 认证码/ ,/ 但/ 最近/ 的/ 研究/ 指出/ HMAC/ 不仅/ 易/ 受到/ 相关/ 密钥/ 攻击/ ,/ 在/ 多用户/ 环境/ 下/ 也/ 易/ 受到/ 攻击/ ./ 为了/ 避免/ 这些/ 问题/ ,/ 我们/ 对/ HMAC/ 进行/ 了/ 改进/ ,/ 基于/ Hash/ 函数/ 和/ 分组/ 密码/ 设计/ 了/ 一种/ 新/ 的/ 消息/ 认证码/ HBMAC/ ./ 在/ 分组/ 密码/ 是/ 伪/ 随机/ 置换/ 和/ Hash/ 函数/ 所/ 使用/ 的/ 压缩/ 函数/ 是/ 伪/ 随机/ 函数/ 的/ 基本/ 假设/ 下/ ,/ 使用/ 共享/ 随机/ 函数/ 模型/ 证明/ 了/ HBMAC/ 的/ 安全性/ ./ 同时/ ,/ 还/ 提出/ 了/ HBMAC/ 和/ HMAC/ 的/ 算法/ 实现/ ,/ 并/ 基于/ 典型/ 数据/ 对/ 两种/ 算法/ 的/ 性质/ 和/ 效率/ 进行/ 了/ 分析/ ./ 结果表明/ ,/ 与/ HMAC/ 相比/ ,/ HBMAC/ 在/ 安全性/ 和/ 效率/ 上/ 取得/ 了/ 更好/ 的/ 折衷/ ./ 关键词/ 消息/ 认证码/ ;/ 压缩/ 函数/ ;/ 分组/ 密码/ ;/ 伪/ 随机/ 置换/ ;/ 可/ 证明/ 安全/ ;/ 密码学/ 1/ 引言/ 网络/ 技术/ 的/ 迅猛发展/ 给/ 人们/ 带来/ 方便/ 之际/ ,/ 也/ Page2/ 有/ 的/ 通讯/ 都/ 会/ 受到/ 攻击者/ 的/ 攻击/ ./ 2002/ 年/ 美国/ 公布/ 的/ 旨在/ 确保/ 国家/ 信息安全/ 的/ 《/ 联邦/ 信息安全/ 管理/ 法案/ 》/ 中/ ,/ 定义/ “/ 信息安全/ ”/ 是/ 保护/ 信息/ 和/ 信息系统/ ,/ 以/ 避免/ 未/ 授权/ 的/ 访问/ 、/ 使用/ 、/ 泄漏/ 、/ 破坏/ 、/ 修改/ 或者/ 销毁/ ,/ 确保/ 信息/ 的/ 完整性/ 、/ 保密性/ 和/ 可用性/ ./ 其中/ ,/ 完整性/ 是/ 指/ 防止/ 不/ 恰当/ 的/ 信息/ 修改/ 和/ 破坏/ ,/ 也/ 确保/ 信息/ 的/ 不可否认/ 性/ 和/ 可/ 认证/ 性/ ;/ 保密性/ 是/ 指/ 对/ 信息/ 访问/ 和/ 公开/ 的/ 授权/ 限制/ ,/ 包括/ 对/ 个人隐私/ 和/ 私有/ 信息/ 的/ 保护/ ;/ 可用性/ 是/ 指/ 对/ 信息/ 的/ 及时/ 和/ 可靠/ 的/ 访问/ ./ 鉴于/ 信息安全/ 受到/ 的/ 威胁/ ,/ 需要/ 密码学/ 提供/ 一种/ 机制/ ,/ 来/ 保证/ 信息/ 的/ 私密性/ 、/ 完整性/ 和/ 不可否认/ 性/ 等/ ./ 其中/ 使/ 消息/ 的/ 接收者/ 可以/ 验证/ 该/ 消息/ 确实/ 是/ 来自/ 所/ 声称/ 的/ 主体/ ,/ 且/ 在/ 传输/ 的/ 过程/ 中/ 未曾/ 受到/ 未经/ 授权/ 的/ 截取/ 、/ 重/ 发/ 、/ 修改/ 、/ 伪造/ 或/ 插入/ 消息/ ,/ 即/ 为/ 保证/ 消息/ 的/ 完整性/ ./ 密码学/ 中/ 用来/ 保证/ 消息/ 完整性/ 的/ 重要/ 工具/ 就是/ 消息/ 认证码/ (/ MessageAuthenticationCodes/ ,/ MAC/ )/ ./ 在/ 网络通信/ 和/ 电子商务/ 中/ ,/ 很多/ 时候/ 数据/ 的/ 完整性/ 是/ 至关重要/ 的/ ,/ 因此/ 消息/ 认证码/ 得到/ 了/ 快速/ 的/ 发展/ ,/ 现已/ 广泛应用/ 于/ 各类/ Internet/ 协议/ ,/ 如/ IPSecurity/ (/ IPsec/ )/ ①/ 、/ SecureSocketsLayer/ (/ SSL/ )/ ②/ // TransportLayerSecurity/ (/ TLS/ )/ ③/ 、/ SecureShell/ (/ SSH/ )/ ④/ 、/ SimpleNetworkManagementProtocol/ (/ SNMP/ )/ ⑤/ 等/ ./ 此外/ ,/ 很多/ 标准化/ 组织/ 也/ 开始/ 了/ 消息/ 认证码/ 的/ 标准化/ 工作/ ./ 日本/ 、/ 英国/ 和/ 中国/ 采用/ 的/ MAC/ 标准/ 是/ 国际标准/ ISO/ // IEC9797/ 中/ 的/ Cipher/ -/ BlockChainingMessageAuthenticationCode/ (/ 简记/ 为/ CBC/ -/ MAC/ )/ 和/ Hash/ -/ basedMessageAuthenticationCode/ (/ 简记/ 为/ HMAC/ )/ ,/ 韩国/ 的/ 标准/ 等同于/ 国际标准/ RFC4493/ ./ MAC/ 的/ 保护/ 机制/ :/ 首先/ 在/ 参与/ 通讯/ 的/ 双方/ 间/ 通过/ 秘密/ 信道/ 共享/ 一个/ 密钥/ K/ ,/ 双方/ 通过/ 公开信/ 道/ 通讯/ 时/ (/ 这里/ 使用/ Alice/ 和/ Bob/ 分别/ 代表/ 参与/ 通讯/ 的/ 两方/ )/ ,/ Alice/ 如果/ 要/ 传送/ 一个/ 消息/ 给/ Bob/ ,/ 首先/ 将/ 这/ 一/ 消息/ 使用/ MAC/ 生成/ 算法/ 和/ 共享/ 密钥/ K/ 计算/ 出/ 一个/ 认证/ 标记/ ,/ 称为/ MAC/ 值/ ,/ 然后/ 将/ 此/ 标记/ 附加/ 在/ 这/ 一/ 消息/ 之后/ 一起/ 传送/ 给/ Bob/ ./ 接收/ 后/ ,/ Bob/ 使用/ MAC/ 验证/ 算法/ 和/ 共享/ 密钥/ K/ 计算/ 接收/ 到/ 消息/ 的/ 认证/ 标记/ ,/ 并/ 和/ 他/ 所/ 接收/ 到/ 的/ 标记/ 进行/ 比较/ ./ 如果/ 两个/ 标记/ 相同/ ,/ MAC/ 验证/ 算法/ 输出/ 为/ 1/ ,/ Bob/ 就/ 认为/ 消息/ 在/ 传送/ 过程/ 中/ 没有/ 被/ 未经/ 授权/ 的/ 篡改/ ;/ 如果/ 两个/ 标记/ 不/ 相同/ ,/ MAC/ 验证/ 算法/ 输出/ 为/ 0/ ,/ Bob/ 就/ 认为/ 消息/ 在/ 传送/ 过程/ 中/ 被/ 篡改/ 了/ ./ MAC/ 的/ 保护/ 机制/ 过程/ 如图/ 1/ 所示/ ./ MAC/ 的/ 攻击/ 类型/ :/ 根据/ 攻击者/ 的/ 攻击/ 对/ 消息/ 完整性/ 安全/ 造成/ 的/ 危害/ ,/ 针对/ MAC/ 的/ 攻击/ 分为/ 下面/ 几种/ 类型/ ./ (/ 1/ )/ 存在/ 性/ 伪造/ (/ ExistentialForgery/ )/ ./ 攻击者/ 构造/ 了/ 一个/ 消息/ ,/ 并/ 伪造/ 了/ 该/ 消息/ 的/ 认证/ 标记/ ./ 如果/ 该/ 消息/ 和/ 伪造/ 的/ 认证/ 标记/ 以/ 几乎/ 为/ 1/ 的/ 概率/ 通过/ 验证/ ,/ 即使/ 这个/ 消息/ 有/ 可能/ 没有/ 意义/ ,/ 但是/ 在/ 存在/ 性/ 伪造/ 下/ 也/ 称/ 对/ 消息/ 认证码/ 的/ 攻击/ 成功/ ./ (/ 2/ )/ 选择性/ 伪造/ (/ SelectiveForgery/ )/ ./ 攻击者/ 可以/ 选取/ 某个/ 消息/ 伪造/ 其/ 认证/ 标记/ ,/ 并/ 以/ 几乎/ 为/ 1/ 的/ 概率/ 通过/ 验证/ ./ (/ 3/ )/ 通用性/ 伪造/ (/ UniversalForgery/ )/ ./ 攻击者/ 可以/ 选取/ 任意/ 消息/ 伪造/ 其/ 认证/ 标记/ ,/ 并/ 以/ 几乎/ 为/ 1/ 的/ 概率/ 通过/ 验证/ ./ (/ 4/ )/ 密钥/ 恢复/ (/ KeyRecovery/ )/ ./ 攻击者/ 能/ 恢复/ 密钥/ ,/ 这样一来/ 攻击者/ 和/ Alice/ 一样/ ,/ 可以/ 生成/ 任意/ 消息/ 的/ 合法/ 的/ 认证/ 标记/ ./ 类似/ 于/ 加密/ 机制/ ,/ 这种/ 攻击/ 是/ 最具/ 破坏性/ 的/ ./ 此外/ ,/ 区分/ 攻击/ 也/ 是/ 一类/ 攻击/ 方法/ ,/ 有/ 专门/ 针对/ 使用/ 前缀/ 的/ 消息/ 认证码/ 的/ 区分/ 攻击/ ,/ 如/ 文献/ [/ 1/ ]/ ./ 还有/ 将/ 消息/ 认证码/ 和/ 随机/ 函数/ 进行/ 区分/ 的/ R/ -/ 型/ 区分/ 攻击/ (/ Distinguishing/ -/ RAttack/ )/ ,/ 以及/ 将/ 消息/ 认证码/ 内部/ 的/ 具体/ 密码/ 元件/ 和/ 随机/ 函数/ 进行/ 区分/ 的/ H/ -/ 型/ 区分/ 攻击/ (/ Distinguishing/ -/ HAttack/ )/ ./ 详细/ 定义/ 见/ 文献/ [/ 2/ ]/ ./ 根据/ 攻击者/ 的/ 能力/ 大小/ ,/ 针对/ MAC/ 的/ 攻击/ 又/ 可以/ 分为/ 下面/ 几种/ 类型/ ./ (/ 1/ )/ 无/ 消息/ 攻击/ ./ 攻击者/ 无法/ 获得/ 任何/ 消息/ 及/ ①/ ②/ ③/ ④/ ⑤/ Page3/ 其/ 对应/ 的/ 合法/ 认证/ 标记/ ./ (/ 2/ )/ 已知/ 消息/ 攻击/ (/ knownmessageattack/ ,/ 简记/ 为/ kma/ )/ ./ 攻击者/ 能/ 知道/ 一些/ 消息/ 及其/ 相应/ 的/ 合法/ 认证/ 标记/ ./ (/ 3/ )/ 选择/ 消息/ 攻击/ (/ chosenmessageattack/ ,/ 简记/ 为/ cma/ )/ ./ 攻击者/ 能/ 选取/ 一些/ 消息/ 并/ 得到/ 其/ 相应/ 的/ 合法/ 认证/ 标记/ ./ 其中/ ,/ 选择/ 消息/ 攻击/ 是/ 最强/ 的/ ,/ 它/ 赋予/ 攻击者/ 最大/ 的/ 能力/ ,/ 而/ 存在/ 性/ 伪造/ 则/ 是/ 攻击/ 成功/ 中/ 相对/ 最弱/ 的/ ,/ 对/ 消息/ 的/ 完整性/ 构成/ 的/ 危害/ 也/ 最小/ ./ 本文/ 在/ 讨论/ 消息/ 认证码/ 的/ 安全性/ 时/ ,/ 主要/ 考虑/ 其/ 在/ 选择/ 消息/ 攻击/ 下/ 的/ 不可/ 伪造/ 性/ ./ 本文/ 第/ 1/ 节是/ 引言/ ,/ 介绍/ 消息/ 认证码/ 的/ 重要性/ 和/ 现实意义/ ;/ 第/ 2/ 节/ 介绍/ 本文/ 中/ 用到/ 的/ 基本/ 符号/ ;/ 第/ 3/ 节/ 给出/ 消息/ 认证码/ 的/ 安全/ 模型/ 、/ HMAC/ 的/ 定义/ 及/ 安全性/ ;/ 第/ 4/ 节/ 给出/ 一种/ 全新/ 的/ 消息/ 认证码/ HBMAC/ 的/ 定义/ 及其/ 安全性/ 证明/ ;/ 第/ 5/ 节对/ HBMAC/ 进行/ 优势/ 分析/ ;/ 第/ 6/ 节为/ 总结/ 和/ 展望/ ./ 2/ 基本/ 记号/ 下面/ 给出/ 本文/ 中/ 用到/ 的/ 密码学/ 基本/ 符号/ 和/ 定义/ ./ 二进制/ 串/ (/ string/ )/ 是/ 指/ 一个/ 由/ 0/ 和/ 1/ 组成/ 的/ 有限/ 序列/ ,/ 也/ 称为/ 比特/ 串/ ./ 一个/ 特定/ 对象/ 的/ 上标/ n/ 则/ 意味着/ 该/ 对象/ 的/ 长度/ 为/ n/ ./ 例如/ 0d/ 意味着/ 长度/ 为/ d/ 的/ 0/ 串/ ,/ {/ 0/ ,/ 1/ }/ n/ 则/ 表示/ 长度/ 为/ n/ 所有/ 的/ 二进制/ 串/ ./ 块/ (/ block/ )/ 是/ 一个/ 长度/ 固定/ 的/ 二进制/ 串/ ,/ 该/ 长度/ 称为/ 块/ 的/ 长度/ ./ |/ X/ |/ 表示/ 串/ X/ 的/ 比特/ 位/ 长度/ ./ 如果/ X/ 是/ 一个/ 空串/ ,/ 则/ |/ X/ |/ =/ 0/ ./ 在/ 对/ 比特/ 串/ 的/ 处理过程/ 中/ ,/ 经常/ 将/ 其/ 分成/ 块/ ,/ 例如/ 串/ X/ 可以/ 按/ n/ 比特/ 分成/ m/ =/ [/ |/ X/ |/ // n/ ]/ 块/ ,/ 其中/ 最后/ 一块/ 可能/ 少于/ n/ 比特/ ,/ 其余/ 的/ 块/ 都/ 是/ n/ 比特/ ./ ‖/ M/ ‖/ 表示/ 所/ 分成/ 的/ 块/ 的/ 个数/ ./ X/ ‖/ Y/ 表示/ 串/ X/ 和/ Y/ 的/ 连接/ ,/ 例如/ x/ ‖/ σ/ 表示/ 串/ x/ 和/ σ/ 的/ 连接/ ./ F/ (/ ·/ ,/ ·/ )/ 表示/ 函数/ F/ 具有/ 两个/ 输入/ ,/ 有时/ 使用/ 如下/ 写法/ :/ F/ (/ k/ ,/ x/ )/ =/ Fk/ (/ x/ )/ ./ 攻击者/ (/ Adversary/ )/ 又称/ 敌手/ ,/ 是/ 指/ 攻击/ 密码/ 方案/ 的/ 算法/ ,/ 这个/ 算法/ 通常/ 是/ 随机/ 的/ ,/ 简记/ 为/ A/ ./ 预言/ 机/ (/ Oracle/ )/ 是/ 指/ 攻击者/ A/ 能/ 访问/ 的/ 资源/ ,/ 例如/ 加密算法/ 、/ 解密/ 算法/ 等/ ./ 攻击者/ A/ 用到/ 的/ OracleO/ 一般/ 放在/ A/ 的/ 右上角/ ,/ 用/ AO/ 表示/ ./ AO/ =/ 1/ 表示/ 能/ 访问/ O/ 的/ 攻击者/ A/ 最后/ 输出/ 1/ 的/ 事件/ ,/ AO/ =/ 0/ 表示/ 能/ 访问/ O/ 的/ 攻击者/ A/ 最后/ 输出/ 0/ 的/ 事件/ ./ O/ (/ ·/ )/ 表示/ OracleO/ 有/ 一个/ 输入/ ,/ 如果/ 需要/ 表示/ AO/ 输出/ 的/ 值/ ,/ 用/ x/ ←/ AO/ (/ ·/ )/ 表示/ ,/ 其中/ x/ 的/ 类型/ 同/ AO/ 输出/ 的/ 类型/ 一致/ ./ Rand/ (/ a/ ,/ b/ )/ 表示/ 所有/ 从/ 集合/ a/ 到/ 集合/ b/ 的/ 函数/ ./ 如果/ m/ 和/ n/ 是/ 整数/ ,/ 那么/ Rand/ (/ m/ ,/ n/ )/ 表示/ 所有/ 从/ 集合/ {/ 0/ ,/ 1/ }/ m/ 到/ {/ 0/ ,/ 1/ }/ n/ 的/ 函数/ 的/ 集合/ ./ Perm/ (/ a/ )/ 表示/ 所有/ 在/ 集合/ a/ 上/ 的/ 置换/ 的/ 集合/ ./ Perm/ (/ n/ )/ 表示/ {/ 0/ ,/ 1/ }/ n/ 上/ 所有/ 置换/ 的/ 集合/ ./ 这个/ 集合/ 也/ 可以/ 看成/ 是/ 所有/ 的/ 由/ 集合/ k/ 中/ 元素/ 唯一/ 确定/ 的/ 置换/ 的/ 集合/ ./ x/ ←/ / / $/ B/ 表示/ 从/ 一个/ 集合/ B/ 中/ 随机/ 地/ 选取/ 一个/ 元素/ ./ 例如/ 符号/ ρ/ ←/ / / $/ Rand/ (/ a/ ,/ b/ )/ 表示/ 随机/ 地/ 从/ 集合/ Rand/ (/ a/ ,/ b/ )/ 中/ 选取/ 一个/ 函数/ ./ π/ ←/ / / $/ Perm/ (/ n/ )/ 表示/ 随机/ 地/ 从/ 集合/ Perm/ (/ n/ )/ 中/ 选取/ 一个/ 置换/ ./ Pr/ [/ K/ ←/ {/ 0/ ,/ 1/ }/ n/ :/ AF/ (/ ·/ )/ =/ 1/ ]/ 表示/ 在/ 密钥/ K/ 随机/ 选择/ 的/ 情况/ 下/ ,/ 拥有/ OracleFK/ (/ ·/ )/ 的/ 攻击者/ A/ 返回/ 1/ 的/ 概率/ ./ 分组/ 密码/ Ek/ 可以/ 看成/ 是/ 这样/ 一个/ 函数/ :/ 其中/ ,/ k/ 是/ 有限/ 集/ 并且/ 每个/ Ek/ (/ ·/ )/ 是/ 一个/ 在/ 集合/ {/ 0/ ,/ 1/ }/ n/ 上/ 的/ 置换/ ,/ 通常/ 也/ 可/ 写作/ E/ (/ k/ ,/ ·/ )/ ./ 3/ 相关/ 工作/ 3.1/ 可/ 证明/ 安全性/ 早期/ 的/ 密码/ 算法/ 是/ 没有/ 安全性/ 证明/ 的/ ,/ 其/ 安全性/ 都/ 是/ 基于/ 安全性/ 分析/ 的/ ,/ 在/ 理论/ 上/ 不能/ 完全/ 保证/ 其/ 安全性/ ./ 密码/ 研究者/ 们/ 提出/ 一个/ 设想/ :/ 定义/ 一个/ 主/ 安全/ 属性/ ,/ 算法/ 只要/ 满足/ 这一/ 属性/ 就/ 能/ 完全/ 保证/ 它/ 的/ 安全性/ ./ 基于/ 这一/ 设想/ 密码/ 研究者/ 们/ 提出/ 了/ 可/ 证明/ 安全/ 理论/ ./ 对应/ 于/ Shannon/ [/ 3/ ]/ 的/ 完善/ 安全性/ ,/ 1984/ 年/ ,/ Goldwasser/ 和/ Micali/ 在/ 文献/ [/ 4/ ]/ 中/ 提出/ 了/ 语义/ 安全/ (/ semanticsecurity/ )/ 的/ 定义/ ,/ 首次/ 从/ 计算/ 角度/ 给出/ 了/ 加密/ 方案/ 的/ 安全性/ 定义/ ,/ 这/ 篇文章/ 标志/ 着/ 现代/ 密码学/ 可/ 证明/ 安全/ 研究/ 的/ 开始/ ./ 这里/ 的/ 可/ 证明/ 安全性/ 是/ 指/ :/ 在/ 讨论/ 整个/ 密码/ 方案/ 的/ 安全性/ 的/ 过程/ 中/ ,/ 通过/ 归约/ (/ reduction/ )/ 的/ 方法/ ,/ 将/ 方案/ 的/ 安全性/ 归结为/ 底层/ 密码学/ 原语/ (/ primitive/ )/ 的/ 安全性/ ,/ 即/ 证明/ 如果/ 原语/ 是/ 安全/ 的/ ,/ 那么/ 方案/ 也/ 是/ 安全/ 的/ ,/ 或者/ 证明/ 如果/ 存在/ 攻破/ 方案/ 安全性/ 的/ 算法/ ,/ 那么/ 利用/ 此/ 算法/ ,/ 可以/ 构造/ 出/ 攻破/ 原语/ 安全性/ 的/ 算法/ ./ 这里/ 的/ 原语/ 是/ 密码学/ 中/ Page4/ 最/ 基本/ 的/ 研究/ 单位/ ,/ 例如/ 困难/ 问题/ 、/ 分组/ 密码/ 、/ Hash/ 函数/ 等/ ./ 一般来讲/ ,/ 由公钥/ 密码/ 构造/ 的/ 算法/ 归约/ 到/ 困难/ 问题/ ,/ 由/ 对称/ 密码/ 构造/ 的/ 算法/ 则/ 归约/ 到/ 分组/ 密码/ ,/ 由/ Hash/ 函数/ 构造/ 的/ 算法/ 归约/ 到/ Hash/ 函数/ ./ 一般来说/ ,/ 根据/ 构造方法/ 的/ 不同/ ,/ 消息/ 认证码/ 的/ 安全性/ 可以/ 归约/ 到/ 分组/ 密码/ 或/ Hash/ 函数/ ./ 而/ Hash/ 函数/ 和/ 分组/ 密码/ 的/ 安全性/ 由/ 其伪/ 随机性/ 来/ 定义/ ./ Bellare/ 等/ 人/ 使用/ 图灵/ 测试/ 的/ 思想/ ,/ 定义/ 了/ Advantage/ (/ 优势/ )/ 函数/ ,/ 简记/ 为/ Adv/ 函数/ ,/ 一般/ 会/ 配合/ 上标/ 、/ 下标/ 以及/ 括弧/ 来/ 使用/ ,/ 其/ 完整/ 形式/ 如/ Advprf/ 了/ 函数/ F/ 区分/ 于/ prf/ (/ Pseudo/ -/ RandomFunctions/ )/ ,/ 也/ 就是/ 伪/ 随机/ 函数/ 的/ 概率/ ./ 括弧/ 内/ 的/ 内容/ 既/ 可以/ 是/ 某个/ 攻击者/ ,/ 也/ 可以/ 是/ 攻击者/ 所/ 耗费/ 的/ 资源/ ,/ 如/ 时间/ 、/ 查询/ 次数/ 等/ ./ 优势/ 函数/ 通常/ 由/ 一个/ 攻击者/ 发起/ 的/ 实验/ 来/ 定义/ ,/ 下面/ 给出/ 一个/ 具体/ 的/ 例子/ ./ 攻击者/ A/ 能/ 访问/ 理想/ 的/ 随机/ 函数/ 族/ g/ ,/ 以及/ 函数/ 族/ F/ ,/ 但/ 访问/ 均/ 在/ 黑盒/ 状态/ 下/ 进行/ ,/ 攻击者/ A/ 能且/ 只能/ 根据/ 输入/ 及/ 输出/ 来/ 判断/ 是/ 随机/ 函数/ g/ 还是/ F/ ./ 使用/ 数学/ 语言/ 可/ 描述/ 如下/ ./ 定义/ 1/ ./ g/ :/ {/ 0/ ,/ 1/ }/ l/ →/ {/ 0/ ,/ 1/ }/ L/ 是/ 一个/ 随机/ 函数/ 族/ ,/ F/ :/ {/ 0/ ,/ 1/ }/ k/ ×/ {/ 0/ ,/ 1/ }/ l/ →/ {/ 0/ ,/ 1/ }/ L/ 是/ 一个/ 函数/ 族/ ,/ 攻击者/ A/ 可以/ 访问/ 从/ 两个/ 函数/ 族/ 中/ 随机/ 选取/ 的/ 一个/ 函数/ ,/ 通过/ 询问/ 最后/ 作出/ 判断/ ,/ 如下/ 定义/ 两个/ 实验/ :/ Expprf/ -/ 0g/ ←/ / / $/ Rand/ (/ D/ ,/ R/ )/ d/ ←/ AgreturndA/ 区分/ F/ 和/ 随机/ 函数/ g/ 的/ prf/ -/ advantage/ 被定/ F/ (/ A/ )/ =/ Pr/ [/ Expprf/ -/ 1/ 对于/ t/ ,/ q/ ,/ μ/ ,/ 定义/ F/ 的/ prf/ -/ advantage/ 为义/ 为/ Advprf/ 其中/ ,/ 最大值/ 是/ 在/ 所有/ 具有/ 时间/ 复杂度/ 为/ t/ ,/ 查询/ 次数/ 为/ q/ ,/ 查询/ 的/ 总位/ 长为/ μ/ 的/ 攻击者/ A/ 中取/ ./ 经过/ 实际/ 检验/ ,/ 分组/ 密码/ E/ 和/ 随机/ 置换/ 区分/ 的/ 优势/ Advprp/ 所以/ 说/ 分组/ 密码/ 是/ 一个/ 伪/ 随机/ 置换/ (/ Pseudo/ -/ RandomPermutations/ ,/ PRP/ )/ ./ 而/ Hash/ 函数/ H/ 和/ 随机/ 函数/ 区分/ 的/ 优势/ Advprf/ 不可/ 区分/ 的/ ,/ 所以/ 说/ Hash/ 函数/ 是/ 一个/ 伪/ 随机/ 函数/ ,/ 后面/ 将/ 给出/ 具体/ 的/ 定义/ ./ 1994/ 年/ ,/ 文献/ [/ 5/ -/ 6/ ]/ 中/ Bellare/ 、/ Kilian/ 和/ Rogaway/ 首次/ 将/ CBC/ -/ MAC/ 的/ 安全性/ 归约/ 为/ 分组/ 密码/ 的/ 伪/ 随机性/ ,/ 即/ 证明/ 了/ 如果/ 分组/ 密码/ 是/ 伪/ 随机/ 置换/ ,/ 那么/ CBC/ -/ MAC/ 是/ 安全/ 的/ 消息/ 认证码/ ./ 此后/ ,/ 出现/ 了/ 大量/ 的/ 论证/ 消息/ 认证码/ 安全性/ 的/ 文章/ ,/ 这些/ 文章/ 都/ 是/ 证明/ 如果/ 存在/ 攻破/ 要/ 论证/ 的/ 消息/ 认证码/ 的/ 安全性/ 的/ 算法/ ,/ 那么/ 利用/ 此/ 算法/ ,/ 可以/ 构造/ 出/ 攻破/ 分组/ 密码/ 安全性/ 的/ 算法/ ./ 例如/ 基本/ 加密/ 模式/ 的/ 安全性/ [/ 7/ ]/ 、/ OCB/ 模式/ [/ 8/ ]/ 的/ 安全性/ 、/ CWC/ 模式/ [/ 9/ ]/ 的/ 安全性/ 等/ ./ 现在/ 几乎/ 所有/ 提出/ 来/ 的/ 消息/ 认证码/ 都/ 有/ 安全性/ 证明/ ,/ 是否是/ 可/ 证明/ 安全/ 的/ 已经/ 成为/ 评价/ 消息/ 认证码/ 最/ 基本/ 的/ 指标/ 之一/ ./ 3.2/ MAC/ 的/ 安全/ 模型/ 在/ Alice/ 和/ Bob/ 采用/ MAC/ 算法/ 通讯/ 的/ 过程/ 中/ ,/ 攻击者/ 可以/ 自由/ 地/ 窃听/ Alice/ 和/ Bob/ 之间/ 的/ 通讯/ 信道/ ,/ 并且/ 可以/ 自由/ 地/ 修改/ 或/ 创建/ 信道/ 中/ 传送/ 的/ 消息/ ./ 如果/ 攻击者/ 能够/ 成功/ 地使/ Bob/ 相信/ 一个/ 经过/ 篡改/ 的/ 消息/ (/ 该/ 消息/ 不曾/ 被/ Alice/ 传送/ 过/ )/ 来自/ 于/ Alice/ ,/ 就/ 称/ 攻击者/ 进行/ 了/ 成功/ 的/ 伪造/ ./ 下面/ 在/ 讨论/ 消息/ 认证码/ 的/ 安全性/ 时/ ,/ 允许/ 攻击者/ 在/ 选择/ 消息/ 攻击/ 下/ 进行/ 攻击/ ,/ 即/ 攻击者/ 能够/ 得到/ 任何/ 他/ 想得到/ 的/ 消息/ 和/ 标记/ ./ 在/ 这种/ 情况/ 下/ ,/ 如果/ 攻击者/ 不能/ 进行/ 成功/ 的/ 伪造/ ,/ 那么/ 称/ 消息/ 认证码/ 在/ 选择/ 消息/ 攻击/ 下/ 是/ 安全/ 的/ ./ 消息/ 认证码/ 在/ 选择/ 消息/ 攻击/ (/ cma/ )/ 下/ 的/ 不可/ 伪造/ (/ unforgeability/ ,/ 简记/ 为/ uf/ )/ 安全性/ 可以/ 用/ 下面/ 的/ 实验/ 定义/ :/ Expuf/ -/ cmak/ ←/ / / $/ K/ (/ M/ ,/ σ/ ←/ / / )/ AFk/ (/ ·/ )/ IFFk/ (/ M/ )/ =/ σ/ andMwasnotaqueryofAtoitsoracleTHENreturn1elsereturn0A/ 是/ 攻击者/ ,/ 可以/ 访问/ oracleFk/ ./ A/ 选择/ 一系列/ 消息/ 向/ oracleFk/ 发起/ 询问/ ,/ 获得/ 他/ 想得到/ 的/ 消息/ 认证/ 标记/ ./ 这个/ 阶段/ 可以/ 看成/ 是/ A/ 的/ 学习/ 阶段/ ,/ 然后/ A/ 进行/ 伪造/ ,/ 给出/ 一对/ (/ M/ ,/ σ/ )/ ./ 如果/ Fk/ (/ M/ )/ =/ σ/ ,/ 并且/ M/ 从未/ 被/ 查询/ 过/ ,/ 则/ 攻击者/ 攻击/ 成功/ ,/ 实验/ 返回/ 1/ ;/ 否则/ 攻击/ 失败/ ,/ 返回/ 0/ ./ 一个/ 好/ 的/ 消息/ 认证码/ 应该/ 使得/ 被/ 伪造/ 的/ 概率/ 是/ 可/ 忽略/ 的/ ,/ 一般/ 用/ 符号/ Advuf/ -/ cma/ 中/ Advuf/ -/ cma3/ ./ 3HMAC/ 的/ 定义/ HMAC/ 是/ 效率/ 很/ 高/ 、/ 应用/ 很广/ 、/ 性质/ 很/ 好/ 、/ 安全性/ 很强/ 的/ 一种/ MAC/ ,/ 目前/ 已/ 被/ 采纳/ 为/ IP/ 安全/ 协议/ 强制执行/ 的/ 认证/ 算法/ ./ HMAC/ 是/ 由/ Bellare/ 等/ 在/ 文献/ [/ 10/ ]/ 中/ 提出/ 的/ ,/ Page5/ 其/ 要求/ 所/ 使用/ 的/ Hash/ 函数/ 具有/ 迭代/ 结构/ (/ 如/ MD5/ ①/ 、/ SHA1/ ②/ 、/ SHA2/ ③/ 等/ )/ ./ 所谓/ 迭代/ 结构/ 就是/ 反复/ 地/ 使用/ 压缩/ 函数/ f/ 将长/ 消息/ 映射/ 为/ 短消息/ ./ 这个/ 压缩/ 函数/ f/ 具有/ 两个/ 输入/ :/ 一个/ 是/ 长度/ 为/ l/ 的/ 链/ 变量/ k/ ,/ 一个/ 是/ 长度/ 为/ b/ 的/ 数据/ 块/ x/ ,/ 表示/ 为/ fk/ =/ f/ (/ k/ ,/ x/ )/ ./ 以/ SHA1/ 为例/ ,/ b/ =/ 512/ ,/ l/ =/ 160/ ./ 举例来说/ ,/ 如果/ 处理/ 消息/ x/ =/ (/ x1/ ,/ x2/ ,/ …/ ,/ xn/ )/ ,/ 其中/ 每个/ xi/ 均/ 是/ 长度/ 为/ b/ 的/ 块/ ,/ i/ =/ 1/ ,/ …/ ,/ n/ ,/ n/ 是/ 总块数/ ,/ 那么/ 由/ 压缩/ 函数/ f/ 构造/ 的/ Hash/ 函数/ 的/ 结构/ 如图/ 2/ 所示/ ./ 图/ 2/ 中/ 犐/ 犞/ 为/ 初始/ 向量/ ,/ 是/ 一个/ 固定/ 的/ 值/ ,/ 用于/ 处理/ 第一块/ 消息/ ./ 但/ 实际上/ 由于/ 消息/ 的/ 长度/ 是/ 任意/ 的/ ,/ 而/ 压缩/ 函数/ 能/ 处理/ 的/ 数据/ 块/ 长度/ 只能/ 是/ b/ ,/ 这/ 就/ 必须/ 对/ 消息/ 进行/ 填充/ ,/ 使/ 其/ 成为/ b/ 的/ 整数倍/ ./ 填充/ 算法/ 必须/ 是/ 一个/ 一一/ 映射/ ,/ 以/ 保证/ 两个/ 不同/ 的/ 消息/ 在/ 填充/ 后/ 仍然/ 不/ 相同/ ./ 一个/ 典型/ 的/ 填充/ 函数/ 是/ 填入/ |/ x/ |/ 的/ 值/ ,/ 并/ 填充/ 一些/ 额外/ 的/ 比特/ (/ 比如说/ 0/ 或/ 1/ )/ 使得/ 所/ 得到/ 的/ 比特/ 串/ 变成/ b/ 的/ 整数倍/ ./ 因为/ 涉及/ 到/ 算法/ 的/ 实现/ ,/ 这里/ 借鉴/ Hash/ 函数/ SHA1/ 的/ 填充/ 方法/ 给出/ 填充/ 算法/ pad/ (/ x/ )/ [/ 11/ ]/ ,/ 具体/ 过程/ 如下/ :/ 如果/ 让/ H/ (/ ·/ )/ 代表/ 初始/ 向量/ 固定/ 为/ 犐/ 犞/ 且/ 具有/ 迭代/ 结构/ 的/ Hash/ 函数/ ,/ 定义/ H/ / (/ k/ ,/ x/ )/ =/ H/ (/ k/ ‖/ x/ )/ ,/ 那么/ HMAC/ (/ k/ ,/ x/ )/ 的/ 构造方法/ 如下/ :/ 其中/ ,/ pad/ (/ k/ )/ 表示/ 把/ 函数/ 的/ 输入/ 也/ 就是/ 密钥/ k/ ,/ 通过/ 补/ 0/ 的/ 方式/ 填充/ 为/ 长度/ 为/ b/ 的/ 二进制/ 串/ ./ 同时/ 为了/ 避免/ 使用/ 两个/ 密钥/ ,/ 减少/ 密钥/ 开销/ ,/ Bellare/ 等/ 建议/ 通过/ 分别/ 异或/ 一个/ 常值/ 来/ 生成/ k1/ 和/ k2/ ,/ 其中/ opad/ 和/ ipad/ 为/ 两个/ b/ 比特/ 的/ 常数/ ,/ ipad/ 表示/ 二进制/ 数/ 00110110/ 重复/ b/ // 8/ 次/ ,/ opad/ 表示/ 二进制/ 数/ 01011010/ 重复/ b/ // 8/ 次/ ./ 算法/ 如图/ 3/ 所示/ ./ 这种/ 设计/ 有/ 一个/ 典型/ 的/ 优点/ 就是/ 算法/ 不/ 依赖于/ 任何/ 具体/ 的/ Hash/ 函数/ ,/ 底层/ 的/ Hash/ 函数/ 就/ 相当于/ 黑盒/ ,/ 可以/ 根据/ 需要/ 方便/ 地/ 选择/ 任何/ 的/ Hash/ 算法/ ,/ 这一/ 特性/ 称之为/ 黑盒/ ./ 3.4/ HMAC/ 的/ 安全性/ 在/ 可/ 证明/ 安全性/ 理论/ 出现/ 之前/ ,/ 密码/ 研究者/ 们/ 用/ 各种/ 方式/ 对/ HMAC/ 进行/ 攻击/ ,/ 如/ 碰撞/ 攻击/ 、/ 扩展/ 攻击/ 、/ 分割/ 征服/ 攻击/ [/ 10/ ]/ 等/ ,/ 但/ 这些/ 方法/ 都/ 没有/ 好/ 的/ 效果/ ,/ 对/ HMAC/ 最好/ 的/ 攻击/ 仍然/ 是/ 生日/ 攻击/ 和/ 穷尽/ 密钥/ 搜索/ 攻击/ ./ 后来/ Bellare/ 等/ 人/ 基于/ HMAC/ 中/ 两个/ 密钥/ k1/ 和/ k2/ 相互/ 独立/ 的/ 假设/ ,/ 在/ 文献/ [/ 12/ ]/ 中/ 给出/ 了/ HMAC/ 的/ 严格/ 安全性/ 证明/ ,/ 将/ 其/ 安全性/ 同/ 底层/ Hash/ 函数/ 的/ 安全性/ 关联/ 起来/ ./ 这一/ 分析/ 考虑/ 了/ 对于/ HMAC/ 任何/ 形式/ 的/ 攻击/ ,/ 而/ 不是/ 有限/ 的/ 可能/ 的/ 攻击/ ,/ 很/ 好/ 地/ 量化/ 了/ Hash/ 函数/ 的/ 安全性/ 和/ 基于/ 该/ Hash/ 的/ HMAC/ 的/ 安全性/ 之间/ 的/ 紧密/ 关系/ ,/ 实现/ 了/ HMAC/ 安全性/ 的/ 归约/ ./ 换句话说/ ,/ 如果/ 发现/ HMAC/ 安全性/ 存在/ 问题/ ,/ 那么/ 底层/ 的/ Hash/ 函数/ 必然/ 存在/ 问题/ ./ 因此/ ,/ 在/ 理论/ 上/ 证明/ 了/ HMAC/ 的/ 安全性/ ,/ 也/ 验证/ 了/ 之前/ 的/ 攻击/ 实践/ ./ 但/ 随着/ 研究/ 的/ 进展/ ,/ 出现/ 了/ 新/ 的/ 攻击/ 方法/ 即/ 相关/ 密钥/ 攻击/ ,/ 而且/ 它/ 已经/ 成为/ 现代/ 密码学/ 安全性/ 中/ ①/ ②/ ③/ Page6/ 一个/ 重要/ 准则/ [/ 13/ ]/ ./ 因此/ ,/ 文献/ [/ 14/ ]/ 注意/ 到/ 需/ 调用/ 两次/ Hash/ 函数/ H/ ,/ 但/ 两次/ 所/ 使用/ 的/ 密钥/ 间/ 存在/ 相互/ 关联/ ,/ 不/ 相互/ 独立/ 的/ 关系/ ./ 而/ 利用/ 这一/ 关联/ ,/ 即/ k1/ / k2/ =/ ipad/ / opad/ ,/ 可以/ 构造/ 对/ HMAC/ 相关/ 密钥/ 攻击/ ./ 鉴于/ 这一/ 特性/ ,/ NealKoblitz/ 等/ ①/ 提出/ 在/ 多用户/ 环境/ 下/ ,/ HMAC/ 也/ 易/ 受到/ 攻击/ ./ 针对/ 这些/ 情况/ ,/ 本文/ 对/ HMAC/ 进行/ 了/ 改进/ ,/ 将/ 算法/ 中/ 用到/ 的/ 两个/ 密钥/ 减少/ 到/ 一个/ ,/ 提出/ 了/ 一种/ 新/ 的/ 基于/ Hash/ 函数/ 和/ 分组/ 密码/ 的/ 消息/ 认证码/ ,/ 从而/ 消除/ 了/ 两个/ 密钥/ 之间/ 存在/ 的/ 相关性/ ,/ 保证/ 了/ 在/ 多用户/ 环境/ 下/ 用户/ 密钥/ 选取/ 的/ 独立性/ ,/ 有效/ 避免/ 了/ 上述/ 文献/ 中/ 提到/ 的/ 问题/ ./ 4HBMAC/ 的/ 定义/ 及/ 安全性/ 证明/ 设计/ 新/ 的/ 消息/ 认证码/ 算法/ 是/ 一个/ 困难/ 的/ 过程/ ,/ 首先/ 算法/ 需要/ 是/ 可/ 证明/ 安全/ 的/ ,/ 并且/ 证明/ 过程/ 还要/ 尽可能/ 的/ 简洁/ 易懂/ ,/ 其次/ 要/ 使得/ 消息/ 认证码/ 的/ 效率/ 尽可能/ 的/ 高/ ,/ 性质/ 尽可能/ 的/ 优良/ ,/ 这/ 几点/ 要求/ 本来/ 就是/ 相互/ 矛盾/ 的/ ./ HBMAC/ (/ MessageAuthenticationCodeBasedonHashFunctionandBlockCipher/ )/ 算法/ 设计/ 充分考虑/ 了/ 安全性/ 、/ 效率/ 和/ 性质/ ./ 与/ HMAC/ 相比/ ,/ HBMAC/ 在/ 安全性/ 和/ 效率/ 上/ 取得/ 了/ 更好/ 的/ 折衷/ ./ 4.1/ HBMAC/ 的/ 定义/ 来/ 构造/ 的/ ,/ 所以/ 将/ 其/ 称为/ HBMAC/ ./ H/ 的/ 定义/ 同/ HMAC/ 中/ 的/ H/ / 定义/ ./ 假设/ H/ / 的/ 输出/ 等于/ 分组/ 密码/ 的/ 分组/ 长度/ ,/ 二者/ 都/ 为/ l/ ,/ 那么/ HBMAC/ 的/ 构造方法/ 如下/ :/ HBMAC/ 是/ 使用/ Hash/ 函数/ 和/ 分组/ 密码/ 的/ 组合/ 其中/ ,/ x/ 是/ 任意/ 长度/ 的/ 输入/ 消息/ ,/ M/ 表示/ 对/ x/ 填充/ 后/ 的/ 消息/ ,/ pad/ (/ x/ )/ 为/ 按照/ 前面/ 算法/ 描述/ 进行/ 填充/ ,/ k/ 是/ 长为/ l/ 的/ 密钥/ ,/ pad/ (/ L/ )/ 表示/ 为/ 对/ L/ 通过/ 补/ 0/ 的/ 方式/ 填充/ 成/ 长度/ 为/ b/ 的/ 二进制/ 串/ ,/ E/ 表示/ 分组/ 密码/ ./ 算法/ 如图/ 4/ 所示/ ./ 对于/ HBMAC/ ,/ 在/ Hash/ 函数/ 的/ 压缩/ 函数/ 是/ 伪/ 随机/ 函数/ 、/ 分组/ 密码/ 的/ 分组/ 长度/ 等于/ Hash/ 函数/ 输出/ 的/ 长度/ 、/ 分组/ 密码/ 是/ 伪/ 随机/ 置换/ 的/ 基本/ 假设/ 下/ ,/ 本文/ 证明/ 了/ 该/ 消息/ 认证码/ 安全性/ 的/ 界/ 为/ Advuf/ -/ cma/ 其中/ ,/ AHBMAC/ 为/ 针对/ HBMAC/ 的/ 攻击者/ ,/ 共/ 进行/ 了/ q/ 次/ 查询/ ,/ BA/ 为/ 针对/ 分组/ 密码/ 的/ 攻击者/ ,/ 进行/ 了/ q/ +/ 1/ 次/ 查询/ ,/ AH/ / 为/ 针对/ Hash/ 函数/ 的/ 攻击者/ ,/ 共/ 进行/ 了/ 2/ 次/ 查询/ ./ 4.2/ HBMAC/ 的/ 安全性/ 证明/ 首先/ 给出/ 可/ 证明/ 安全/ 中/ 的/ 几个/ 基本/ 定义/ ,/ 然后/ 证明/ HBMAC/ 所/ 基于/ 的/ Hash/ 函数/ 是/ 计算/ 上/ 几乎/ 泛/ 的/ ,/ 最后/ 构造/ 了/ 两个/ 实验/ ,/ 证明/ 了/ HBMAC/ 的/ 安全性/ ./ 4.2/ ./ 1/ 基本/ 定义/ 在/ 可/ 证明/ 安全/ 理论/ 中/ ,/ 使用/ 优势/ 函数/ 来/ 度量/ 一个/ 算法/ 与/ 一个/ 理想/ 的/ 算法/ 之间/ 的/ 差别/ ./ 如果/ 这个/ 差别/ 是/ 可/ 忽略/ 的/ ,/ 就/ 认为/ 该/ 算法/ 是/ 安全/ 的/ ./ 这里/ 给出/ 可/ 证明/ 安全/ 中/ 经常/ 用到/ 的/ 优势/ 函数/ 的/ 定义/ ./ 定义/ 2/ ./ 假定/ A/ 是/ 一个/ 具有/ Oracle/ 的/ 攻击者/ ,/ Ao/ 表示/ A/ 可以/ 查询/ OracleO/ ./ 不失/ 一般性/ ,/ 假定/ 攻击者/ 从来不/ 查询/ 该/ Oracle/ 定义域/ 之外/ 的/ 值/ ,/ 并且/ 从来不/ 重复/ 查询/ 已经/ 查询/ 过/ 的/ 值/ ,/ 那么/ 在/ 进行/ 了/ 一定/ 数量/ 的/ 查询/ 之后/ ,/ 攻击者/ A/ 输出/ 一个/ 值/ ,/ 这个/ 值/ 要么/ 是/ 0/ ,/ 要么/ 是/ 1/ ./ 定义/ 优势/ 函数/ 为/ Advprp/ 该式/ 表示/ 在/ 经过/ 了/ 一定/ 数量/ 的/ 查询/ 之后/ ,/ 当/ 给定/ 的/ Oracle/ 为/ Ek/ (/ ·/ )/ 时/ 攻击者/ A/ 输出/ 1/ 的/ 概率/ 与/ 当/ 给定/ 的/ Oracle/ 为/ π/ (/ ·/ )/ 时/ 攻击者/ A/ 输出/ 1/ 的/ 概率/ 之差/ ./ 其中/ k/ 随机/ 地/ 从/ K/ 中/ 选择/ ,/ π/ 随机/ 地/ 从/ 置换/ 族/ ①/ NealKoblitz/ ,/ AlfredMenezes/ ./ AnotherlookatHMAC/ ./ Page7Perm/ (/ n/ )/ 中/ 选择/ ./ 该式/ 度量/ 了/ 分组/ 密码/ E/ :/ K/ ×/ {/ 0/ ,/ 1/ }/ n/ →/ {/ 0/ ,/ 1/ }/ n/ 和/ 随机/ 置换/ 之间/ 区分/ 的/ 概率/ ./ 在/ 安全性/ 证明/ 中/ 一般/ 都/ 默认/ 算法/ 中/ 所/ 使用/ 的/ 分组/ 密码/ 的/ E/ (/ A/ )/ 可/ 忽略/ ./ Advprp/ 类似/ 地/ ,/ 定义/ 一个/ 从/ {/ 0/ ,/ 1/ }/ n/ 到/ {/ 0/ ,/ 1/ }/ n/ 的/ 函数/ 族/ F/ :/ K/ ×/ {/ 0/ ,/ 1/ }/ n/ →/ {/ 0/ ,/ 1/ }/ n/ ,/ 其中/ K/ 是/ 有限/ 集/ ./ 给定/ k/ ∈/ K/ ,/ 函数/ 组/ 也/ 可/ 记作/ Fk/ (/ ·/ )/ =/ F/ (/ k/ ,/ ·/ )/ ./ Rand/ (/ n/ )/ 表示/ 所有/ {/ 0/ ,/ 1/ }/ n/ →/ {/ 0/ ,/ 1/ }/ n/ 的/ 函数/ 的/ 集合/ ./ 定义/ :/ Advprf/ 该式/ 度量/ 了/ 函数/ F/ :/ K/ ×/ {/ 0/ ,/ 1/ }/ n/ →/ {/ 0/ ,/ 1/ }/ n/ 和/ 随机/ 函数/ 之间/ 区分/ 的/ 概率/ ./ 以上/ 这些/ 定义/ 由/ Goldwasser/ 和/ Bellare/ ①/ 给出/ ./ 引理/ 1/ ./ 攻击者/ A/ 区分/ 一个/ n/ 比特/ 的/ 伪/ 随机/ 置换/ E/ 和/ 一个/ 随机/ 函数/ 的/ 优势/ Advprf/ 的/ 界/ :/ 定义/ 3/ ./ 固定/ 定义域/ D/ 和/ 值域/ R/ ./ 如果/ 对于/ 每/ 其中/ ,/ q/ 为/ 攻击者/ A/ 对/ Oracle/ 的/ 查询/ 次数/ ,/ 该/ 引理/ 的/ 证明/ 可/ 参见/ 文献/ [/ 5/ ]/ ./ 4.2/ ./ 2/ 计算/ 上/ 几乎/ 泛/ 的/ Hash/ 函数/ 泛/ Hash/ 函数/ 族/ 是/ 1979/ 年/ 由/ Carter/ 和/ Wegman/ 提出/ 的/ ,/ 它/ 广泛应用/ 于/ 计算机科学/ 的/ 各个领域/ ,/ 包括/ 密码学/ 、/ 复杂性/ 理论/ 、/ 编译器/ 以及/ 数据库/ ./ 文献/ [/ 15/ ]/ 给出/ 了/ 泛/ Hash/ 函数/ 的/ 概念/ ,/ 文献/ [/ 16/ -/ 17/ ]/ 在/ 此基础/ 上/ ,/ 给出/ 了/ 基于/ 压缩/ 函数/ 的/ Hash/ 函数/ H/ / 是/ 计算/ 上/ 几乎/ 泛/ 的/ 函数/ 的/ 定义/ ./ 在/ 下面/ 的/ 讨论/ 中/ ,/ 假定/ Hash/ 函数/ 的/ 定义域/ 和/ 值域/ 都/ 是/ 有限/ 的/ 二进制/ 串/ 的/ 集合/ ,/ 并且/ 值域/ 要/ 小于/ 定义域/ ./ 个/ x/ ,/ y/ ∈/ D/ ,/ 其中/ x/ ≠/ y/ ,/ 那么/ 称/ 一个/ 有限/ 的/ Hash/ 函数/ 集合/ H/ =/ {/ h/ :/ D/ →/ R/ }/ 是/ 泛/ 的/ ./ 定义/ 4/ ./ 设/ H/ / :/ {/ 0/ ,/ 1/ }/ k/ ×/ D/ →/ R/ 是/ 一个/ 函数/ 族/ ,/ AH/ / 是/ 一个/ 攻击/ H/ / 的/ 攻击者/ ,/ 它/ 返回/ 定义域/ 中/ 的/ 两个/ 消息/ ,/ 它/ 的/ au/ 优势/ 定义/ 为/ H/ / (/ AH/ / )/ =/ Pr/ [/ H/ / (/ k/ ,/ M1/ )/ =/ H/ / (/ k/ ,/ M2/ )/ ∧/ M1/ ≠/ Advau/ 其中/ ,/ ∧/ 表示/ 逻辑/ “/ 和/ ”/ ./ 若该/ 优势/ 函数/ 在/ 资源/ 限定/ 的/ 情况/ 下/ 很小/ ,/ 则/ 说/ 该/ 函数/ 是/ 计算/ 上/ 几乎/ 泛/ 的/ ,/ 记作/ cAU/ ./ 在/ 压缩/ 函数/ 是/ 伪/ 随机/ 函数/ 的/ 假设/ 下/ ,/ 文献/ [/ 12/ ]/ 中/ 给出/ 了/ 由/ 压缩/ 函数/ 基于/ 迭代/ 结构/ 构造/ 的/ Hash/ 的/ 优势/ 函数/ 的/ 界/ ,/ 指出/ 这一/ 优势/ 是/ 可/ 忽略/ 的/ ,/ 也/ 就/ 证明/ 了/ 由/ 压缩/ 函数/ 构造/ 的/ Hash/ 函数/ 在/ 有/ 密钥/ 的/ 情况/ 下/ 是/ 计算/ 上/ 几乎/ 泛/ 的/ ./ 4.2/ ./ 3/ 安全性/ 证明/ 关于/ HBMAC/ 的/ 安全性/ 有/ 如下/ 定理/ ./ 定理/ 1/ ./ 设/ q/ ,/ t/ / 1/ 是/ 整数/ ,/ A/ 是/ 攻击/ HBMAC/ 的/ 攻击者/ ,/ E/ 是/ 长度/ 为/ l/ 比特/ 的/ PRP/ ,/ lp/ 表示/ 查询/ 的/ 总/ 的/ 明文/ 比特/ 长度/ ,/ 那么/ Advuf/ -/ cma/ 有/ 如下/ 不等式/ 成立/ :/ Advuf/ -/ cma/ 证明/ ./ 本文/ 在/ 选择/ 消息/ 攻击/ 下/ ,/ 使用/ 标准/ 的/ 消息/ 认证码/ 安全/ 模型/ 来/ 考虑/ HBMAC/ 的/ 安全性/ :/ 攻击者/ A/ 获得/ HBMAC/ 的/ Oracle/ ,/ 在/ 进行/ 了/ q/ 次/ 询问/ 之后/ 攻击者/ 发起/ 伪造/ 攻击/ ./ A/ 的/ 攻击/ 过程/ 如下/ :/ Expuf/ -/ cmaHBMAC/ ,/ Ak/ ←/ / / $/ KL/ =/ Ek/ (/ 0/ )/ WhenAaskMi/ ,/ replywithEk/ (/ H/ / (/ L/ ,/ Mi/ )/ )/ (/ M/ ,/ σ/ )/ ←/ AIFEk/ (/ H/ / (/ L/ ,/ M/ )/ )/ =/ σ/ andMwasnotaqueryofAtoitsoracleTHENreturn1elsereturn0/ 从/ 消息/ 认证码/ 安全性/ 的/ 定义/ 中/ 可以/ 知道/ HBMAC/ ,/ A/ 等于/ 实验/ Expuf/ -/ cmaAdvuf/ -/ cma/ 假设/ A/ 是/ 攻击/ 消息/ 认证码/ HBMAC/ 的/ 攻击者/ ,/ 在/ 实验/ Expuf/ -/ cma/ 最多/ 是/ t/ ,/ 设计/ 一个/ 攻击者/ BA/ ,/ 它/ 是/ 区分/ 伪/ 随机/ 置换/ E/ :/ {/ 0/ ,/ 1/ }/ l/ ×/ {/ 0/ ,/ 1/ }/ l/ →/ {/ 0/ ,/ 1/ }/ l/ 和/ 随机/ 函数/ Rand/ (/ l/ ,/ l/ )/ 的/ 一个/ 算法/ ./ BA/ 拥有/ 一个/ Oracle/ ,/ 该/ Oracle/ 为/ f/ :/ {/ 0/ ,/ 1/ }/ l/ →/ {/ 0/ ,/ 1/ }/ l/ ./ BA/ 在/ 运行/ 的/ 过程/ 中/ 调用/ A/ ,/ 当/ A/ 询问/ 时/ ,/ BA/ 使用/ 自己/ 的/ Oracle/ 模拟/ A/ 的/ Oracle/ 来/ 回答/ ,/ 最后/ 当/ A/ 输出/ 它/ 的/ 伪造/ 时/ ,/ BA/ 验证/ ,/ 如果/ 验证/ 通过/ ,/ 则/ 返回/ 1/ ,/ 此时/ BA/ 认定/ 所/ 使用/ Oracle/ 是/ 一个/ 伪/ 随机/ 置换/ ;/ 否则/ 就/ 返回/ 0/ ,/ 此时/ BA/ 认定/ 它/ 自己/ 的/ Oracle/ 是/ 随机/ 函数/ ./ 假定/ 在/ 实验/ Expuf/ -/ cma/ 也/ 就/ 意味着/ A/ 进行/ 了/ q/ -/ 1/ 次/ 查询/ ,/ 1/ 次/ 验证/ ./ 下面/ 是/ 实验/ BA/ 的/ 实现/ 代码/ ./ ①/ GoldwasserS/ ,/ BellareM/ ./ LectureNotesonCryptograhpyPage8ExpBfL/ =/ f/ (/ 0/ )/ Fori/ =/ 1/ ,/ …/ ,/ q/ -/ 1doWhenAasksitsoraclesomequeryMigenerateanoncenoniandanswerwithf/ (/ H/ / (/ L/ ,/ Mi/ )/ )/ EndforAoutputs/ (/ M/ ,/ σ/ )/ σ/ ←/ f/ (/ H/ / (/ L/ ,/ M/ )/ )/ IF/ σ/ =/ σ/ andMwasnotaqueryofAtoitsoracleTHENreturn1elsereturn0/ 在/ 实验/ 的/ 最初/ 阶段/ ,/ BA/ 查询/ 它/ 自己/ 的/ Oracle/ 在/ 0/ 点/ 的/ 值/ ,/ 然后/ 把/ 返回值/ 赋予/ L/ ,/ 当/ A/ 查询/ M1/ 时/ ,/ 算法/ BA/ 使用/ 它/ 自己/ 的/ Oracle/ 计算/ f/ (/ H/ / (/ L/ ,/ Mi/ )/ )/ ,/ 并/ 把/ f/ (/ H/ / (/ L/ ,/ Mi/ )/ )/ 返回/ 给/ A/ ./ A/ 继续/ 进行/ 查询/ ,/ 直到/ q/ -/ 1/ 次/ ,/ 然后/ 停止/ ,/ 输出/ 一个/ 伪造/ 对/ (/ M/ ,/ σ/ )/ ./ BA/ 验证/ 这个/ 伪造/ 对/ ,/ 如果/ 正确/ ,/ 就/ 返回/ 1/ ./ 使用/ 符号/ D/ 表示/ 攻击者/ Bf/ 用/ B/ 表示/ 事件/ f/ ←/ / / $/ Rand/ (/ l/ ,/ l/ )/ ,/ 在/ 实验/ 中/ Oraclef/ 的/ 输入/ 互不/ 相同/ 的/ 事件/ 使用/ Z/ 表示/ ./ 在/ 证明/ 之前/ 首先/ 注意/ 到/ 下面/ 两个/ 事实/ :/ 事实/ 1/ ./ Advuf/ -/ cma/ 义该/ 式/ 显然/ 成立/ ./ 事实/ 2/ ./ 对于/ 任何/ 事件/ A/ ,/ B/ 和/ C/ ,/ Cc/ 表示/ 事件/ C/ 的/ 补/ 事件/ ./ Pr/ [/ A/ |/ B/ ]/ =/ Pr/ [/ A/ ∩/ B/ ]/ 那么/ 根据/ 定义/ 2/ 有/ E/ ,/ BA/ =/ Pr/ [/ BfAdvprf/ 下面/ 分别/ 求/ Pr/ [/ D/ |/ B/ ∩/ Z/ ]/ 和/ Pr/ [/ D/ |/ B/ ∩/ Zc/ ]/ ./ 首先/ 考虑/ Pr/ [/ D/ |/ B/ ∩/ Z/ ]/ ,/ 当/ 事件/ B/ 和/ Z/ 同时/ 发生/ 的/ 时候/ ,/ 也就是说/ f/ ←/ / / $/ Rand/ (/ l/ ,/ l/ )/ 并且/ f/ 的/ 输入/ 互不/ 相同/ ./ 在/ 这种/ 情况/ 下/ ,/ 攻击者/ A/ 每次/ 查询/ 之后/ 得到/ 的/ 都/ 是/ 一个/ 随机/ 值/ ./ 因为/ f/ 是/ 一个/ 随机/ 函数/ ,/ 而且/ M/ 没有/ 被/ 查询/ 过/ ,/ 从而/ σ/ =/ f/ (/ H/ / (/ L/ ,/ Mi/ )/ )/ 的/ 概率/ 最多/ 是/ 2/ -/ l/ ,/ 即/ Pr/ [/ D/ |/ B/ ∩/ Z/ ]/ / 2/ -/ l/ ./ 下/ 一步/ 考虑/ Pr/ [/ D/ |/ B/ ∩/ Zc/ ]/ ./ 在/ 这种/ 情况/ 下/ ,/ f/ ←/ / / $/ Rand/ (/ l/ ,/ l/ )/ ,/ 该/ 随机/ 函数/ 的/ 输入/ 有/ 碰撞/ ./ 不/ 考虑/ 攻击者/ 如何/ 利用/ 这个/ 碰撞/ 来/ 攻击/ ,/ 只要/ 发生/ 碰撞/ 就/ 认为/ 攻击者/ 能够/ 使用/ 这次/ 碰撞/ 成功/ 伪造/ 消息/ ./ 下面/ 计算/ 这个/ 碰撞/ 的/ 概率/ ./ 设/ Ci/ 表示/ 直到/ 第/ i/ 个/ 查询/ 时才/ 发生/ 碰撞/ 的/ 概率/ ./ C0/ 表示/ 第一次/ 查询/ 得到/ L/ 时/ 发生/ 碰撞/ 的/ 事件/ ,/ 显然/ 有/ Pr/ [/ C0/ ]/ =/ 0/ ./ 如果/ 任意/ 两个/ 消息/ 之间/ 碰撞/ 的/ 概率/ 都/ 是/ ε/ ,/ 那么/ Pr/ [/ Ci/ ]/ =/ i/ ε/ ,/ 这/ 是因为/ 有/ i/ 个/ 不同/ 的/ 值/ 可能/ 与/ 之/ 发生/ 碰撞/ ,/ 从而/ Pr/ [/ D/ |/ B/ ∩/ Zc/ ]/ / ∑/ q/ +/ 1/ 由/ 定义/ 4/ 知/ ,/ ε/ =/ AdvauPr/ [/ D/ |/ B/ ∩/ Zc/ ]/ / (/ q/ +/ 1/ )/ (/ q/ +/ 2/ )/ 值/ ,/ 因此/ 有/ 从而/ 有/ AdvprfE/ ,/ BA/ / Advuf/ -/ cma/ 由于/ 攻击者/ BA/ 进行/ 了/ q/ +/ 1/ 次/ 询问/ ,/ 移项/ 并/ 使用/ 引理/ 1/ 得/ 下面/ 继续/ 进行/ 分析/ :/ HBMAC/ (/ t/ ,/ q/ ,/ lP/ )/ =/ maxA/ {/ Advuf/ -/ cmaAdvuf/ -/ cma/ / maxAAdvprp/ / maxA/ {/ Advprp/ / Advprp/ 上面/ 的/ 第/ 1/ 个/ 等式/ 是/ 由/ 定义/ 1/ 得来/ 的/ ,/ 第/ 2/ 行/ 的/ 不等式/ 则/ 应用/ 了/ 上/ 一步/ 的/ 结果/ ,/ 后面/ 的/ 推导/ 就是/ 简单/ 地/ 利用/ 最大值/ 的/ 性质/ ./ Page95HBMAC/ 的/ 优势/ 分析/ 相关/ 密钥/ 攻击/ [/ 18/ -/ 19/ ]/ 是/ Biham/ 和/ Knudsen/ 针对/ 分组/ 密码/ 提出/ 的/ ,/ 用于/ 从/ 区分/ 攻击/ [/ 20/ -/ 21/ ]/ 到/ 密码恢复/ 攻击/ [/ 22/ ]/ 的/ 各种/ 安全性/ 分析/ ,/ 已经/ 成为/ 主流/ 密码学/ 的/ 挑战/ 之一/ ./ 对于/ 如何/ 避免/ 这一/ 问题/ ,/ 密码学/ 工作者/ 们/ 做/ 了/ 大量/ 的/ 工作/ ,/ 但/ 只有/ 文献/ [/ 23/ -/ 25/ ]/ 给出/ 了/ 少数/ 积极/ 的/ 结果/ ./ Bellare/ 认识/ 到/ 构造/ 相关/ 密钥/ 安全/ 的/ 伪/ 随机/ 函数/ 和/ 伪/ 随机/ 置换/ 对/ 研究/ 理想/ 密码/ 很/ 有/ 意义/ ,/ 2010/ 年/ Cash/ 在/ 文献/ [/ 26/ ]/ 中/ 基于/ DDH/ // DLIN/ 假设/ 构造/ 了/ 一个/ 相关/ 密钥/ 安全/ 的/ 伪/ 随机/ 置换/ ,/ 这是/ 一个/ 突破性/ 的/ 进展/ ./ 虽然/ 该/ 构造/ 已经/ 证明/ 是/ 可行/ 的/ ,/ 但/ 其/ 效率/ 低下/ ,/ 很难/ 实际/ 应用/ ./ 2013/ 年/ 文献/ [/ 13/ ]/ 虽然/ 对/ 其/ 进行/ 了/ 改进/ ,/ 但/ 要求/ 底层/ Hash/ 函数/ 是/ 基于/ 分组/ 密码/ 构造/ 的/ ,/ 和/ 基于/ Mekle/ -/ Damgrd/ 结构/ 的/ Hash/ 函数/ 相比/ ,/ 效率/ 上/ 仍然/ 处于/ 劣势/ ./ 显然/ ,/ 采用/ 上述/ 方法/ 解决/ HMAC/ 的/ 问题/ 并/ 不/ 理想/ ./ 此外/ ,/ 文献/ [/ 14/ ]/ 也/ 给出/ 了/ 一种/ 解决/ 这一/ 问题/ 的/ 办法/ ,/ 即/ 在/ 消息/ 前/ 增加/ 一个/ 比特/ 或/ 一个/ 字节/ ,/ 但/ 文献/ [/ 27/ ]/ 的/ 研究/ 则/ 证明/ 了/ 这/ 一/ 改进/ 在/ 密钥/ 较长/ 时/ 面临/ 安全/ 风险/ ./ 本文/ 另辟蹊径/ ,/ 为/ 解决/ HMAC/ 易受/ 相关/ 密钥/ 攻击/ 和/ 在/ 多用户/ 环境/ 下/ 的/ 安全/ 问题/ ,/ 同时/ 在/ 效率/ 上/ 取得/ 优势/ ,/ 通过/ 和/ 分组/ 密码/ 相结合/ 的/ 方法/ ,/ 构造/ 了/ 一种/ 新/ 的/ 基于/ Hash/ 函数/ 和/ 分组/ 密码/ 的/ 消息/ 认证码/ HBMAC/ ./ 表/ 1/ 对/ HBMAC/ 和/ HMAC/ 的/ 性质/ 进行/ 了/ 对比/ ./ 需要/ 的/ 密钥/ 个数/ 是否/ 抵抗/ 相关/ 密钥/ 攻击/ 是否/ 具有/ 黑盒/ 特性/ 有无/ 弱/ 密钥/ Hash/ 函数/ 的/ 密钥/ 由/ 分组/ 密码/ 来/ 生成/ ,/ 保证/ 了/ 不同/ 密钥/ 之间/ 相互/ 的/ 独立性/ ,/ 能够/ 避免/ 相关/ 密钥/ 攻击/ 和/ 多用户/ 环境/ 下/ 的/ 安全/ 风险/ ,/ 这些/ 风险/ 均/ 源自/ 使用/ 了/ 两个/ 密钥/ ./ 此外/ ,/ 还/ 避免/ 了/ 文献/ [/ 27/ ]/ 中/ 提到/ 的/ 存在/ 弱/ 密钥/ 的/ 安全/ 风险/ 的/ 问题/ ./ 同时/ ,/ HBMAC/ 算法/ 还/ 具备/ 黑盒/ 特性/ ,/ 分组/ 密码/ 及/ 底层/ 的/ Hash/ 函数/ 均/ 可以/ 根据/ 需要/ 进行/ 灵活/ 选择/ ./ 在/ 效率/ 方面/ ,/ HBMAC/ 较/ HMAC/ 减少/ 了/ 一次/ 消息/ 填充/ 和/ 两次/ Hash/ 迭代/ 运算/ ,/ 增加/ 了/ 两次/ 分组/ 密码/ 计算/ ,/ 而/ 其他/ 计算/ 过程/ 完全一致/ ./ 当/ 处理/ 较长/ 消息/ 时/ ,/ 这一/ 改变/ 对/ 性能/ 影响/ 可以/ 忽略/ ./ 在/ 处理/ 较/ 短消息/ 时/ ,/ 由于/ 分组/ 密码/ 计算/ 要/ 慢于/ Hash/ 函数/ ,/ 效率/ 会/ 略有/ 下降/ ,/ 事实上/ 在/ 实际/ 应用/ 中/ 可以/ 通过/ 分组/ 密码/ 预计/ 算/ 的/ 方法/ 降低/ 这一/ 影响/ ./ 在/ 某些/ 具体/ 的/ 运用/ 环境/ 中/ ,/ 如/ 安全性/ 要求/ 较/ 高/ 的/ 银行/ 认证/ 系统/ 中/ ,/ 此类/ 消息/ 认证/ 算法/ 具有/ 一定/ 的/ 优势/ ./ 在/ HBMAC/ 具体/ 实现/ 上/ ,/ 底层/ Hash/ 函数/ 可/ 选择/ SHA2/ -/ 256/ ,/ 其/ 分组/ 长度/ 为/ 512bits/ ,/ 输出/ 长度/ 为/ 256bits/ ,/ 分组/ 密码/ 选择/ 分组/ 长度/ 和/ 密钥/ 长度/ 均/ 为/ 256bits/ 的/ Rijndeal/ 算法/ ./ 在/ HMAC/ 具体/ 实现/ 上/ ,/ 底层/ Hash/ 函数/ 可/ 选择/ SHA2/ -/ 256/ ./ 表/ 2/ 和表/ 3/ 分别/ 列出/ 了/ 在/ 上述/ 实现/ 下/ ,/ HB/ -/ MAC/ 和/ HMAC/ 针对/ 长度/ 分别/ 为/ 128bits/ 、/ 512bits/ 、/ 1024bits/ 、/ 1536bits/ 以及/ n/ ×/ 512/ +/ mbits/ (/ 其中/ m/ 为/ 小于/ 448/ 的/ 正整数/ )/ 消息/ 的/ 计算/ 量/ ./ 消息/ 分组/ 长度/ PCHCEC1024bits1536bitsn/ ×/ 512/ +/ mbits2n/ +/ 40/ 其中/ ,/ 1PC/ 表示/ 一次/ 对/ 消息/ 的/ 填充/ 计算/ ,/ 1HC/ 表示/ 一次/ Hash/ 迭代/ 计算/ ,/ 1EC/ 表示/ 一次/ 分组/ 密码/ 计算/ ./ 消息/ 分组/ 长度/ PCHCEC1024bits1536bitsn/ ×/ 512/ +/ mbits1n/ +/ 22/ 从表/ 2/ 及表/ 3/ 中/ 可以/ 看出/ ,/ 随着/ 消息/ 长度/ 的/ 增加/ ,/ Hash/ 迭代/ 计算/ 呈/ 线性/ 增长/ ,/ 而/ 消息/ 填充/ 计算/ 和/ 分组/ 密码/ 计算/ 则/ 为/ 一个/ 固定值/ ./ HBMAC/ 的/ 输出/ 可/ 根据/ 需要/ 选取/ ,/ 最长/ 支持/ 256bits/ 的/ 认证/ 标记/ ,/ 如/ 需要/ 较/ 短/ 认证/ 标记/ ,/ 可/ 直接/ 对/ 其/ 输出/ 进行/ 截断/ 操作/ ./ 举例来说/ ,/ 如/ 需要/ 128bits/ 的/ 认证/ 标记/ ,/ 可/ 直接/ 选取/ 分组/ 密码/ 输出/ 的/ 前/ 128bits/ ,/ 只是/ 其/ 安全性/ 会/ 随着/ 认证/ 标记/ 的/ 缩短/ 而/ 降低/ ./ 此外/ ,/ 在/ 计算/ 消息/ 认证码/ 之前/ ,/ 进行/ 密钥/ 编排/ 和/ Ek/ (/ 0/ )/ 的/ 预计/ 算/ ,/ 可/ 有效/ 提升/ HBMAC/ 算法/ 的/ 计算/ 效率/ ./ 6/ 总结/ 和/ 展望/ 为/ 解决/ HMAC/ 面临/ 的/ 相关/ 密钥/ 攻击/ 的/ 风险/ 问/ Page10/ 题/ ,/ 结合/ 当前/ 密码学/ 研究进展/ ,/ 本文/ 另辟蹊径/ ,/ 通过/ 和/ 分组/ 密码/ 相结合/ ,/ 构造/ 了/ 一种/ 新/ 的/ 基于/ Hash/ 函数/ 和/ 分组/ 密码/ 的/ 消息/ 认证码/ HBMAC/ ,/ 该/ 算法/ 不仅/ 有效/ 地/ 避免/ 了/ 相关/ 密钥/ 攻击/ ,/ 确保/ 了/ 安全性/ ,/ 通过/ 分组/ 密码/ 加密/ 模式/ 的/ 选择/ ,/ 还/ 很/ 好/ 地/ 保证/ 了/ 算法/ 的/ 效率/ ./ 此外/ ,/ 本文/ 巧妙/ 地/ 设计/ 了/ 两个/ 区分/ 实验/ ,/ 完全/ 模拟/ 了/ 攻击者/ 伪造/ HBMAC/ 消息/ 认证码/ 的/ 过程/ ,/ 在/ 分组/ 密码/ 是/ 伪/ 随机/ 置换/ 和/ Hash/ 函数/ 所/ 使用/ 的/ 底层/ 压缩/ 函数/ 是/ 伪/ 随机/ 函数/ 的/ 基本/ 假设/ 下/ ,/ 证明/ 了/ HBMAC/ 的/ 安全性/ ./ 在/ 消息/ 认证码/ 的/ 研究/ 中/ ,/ 基于/ Hash/ 的/ 消息/ 认证码/ 一直/ 是/ 研究/ 热点/ ,/ 一些/ 人/ 热衷于/ 研究/ 新/ 的/ 攻击/ 方法/ ,/ 一些/ 人/ 热衷于/ 不断完善/ 和/ 提升/ 其/ 安全性/ ,/ 如/ 本文/ 和/ 文献/ [/ 28/ ]/ ,/ 基本/ 理念/ 恰是/ 一攻/ 一防/ ,/ 相互促进/ ,/ 相得益彰/ ./ 随着/ 研究/ 的/ 不断深入/ ,/ 尤其/ 是/ 新/ 的/ 分析/ 工具/ 的/ 出现/ 和/ 理论/ 的/ 实际/ 运用/ ,/ 这一/ 热点/ 还/ 将/ 长期存在/ 下去/ ./ 此外/ ,/ 随着/ 云/ 计算/ 的/ 发展/ ,/ 用户/ 大量/ 的/ 数据/ 将/ 存储/ 在/ 云端/ ,/ 云端/ 数据/ 的/ 完整性/ 保护/ 也/ 是/ 一个/ 巨大/ 的/ 课题/ ./ 由于/ 云/ 环境/ 的/ 特殊性/ ,/ 数据/ 的/ 修改/ 将/ 在/ 云端/ 由/ 托管/ 方/ 进行/ 修改/ ,/ 用户/ 如何/ 确保/ 托管/ 方在/ 完整/ 的/ 数据/ 上/ 实施/ 了/ 合法/ 授权/ 的/ 修改/ ,/ 这是/ 目前/ 需要/ 研究/ 的/ 问题/ ./ Gennaro/ ①/ 和/ Catalano/ 等/ 人/ [/ 29/ ]/ 已经/ 在/ 这方面/ 做/ 了/ 一些/ 探讨/ 性/ 工作/ ,/ 提出/ 了/ 同态/ 消息/ 认证码/ 的/ 概念/ ,/ 但离/ 实际/ 使用/ 还有/ 一段距离/ ,/ 需要/ 研究者/ 们/ 不断/ 去/ 改进/ 和/ 完善/ ./ 致谢/ 感谢/ 参与/ 审稿/ 的/ 专家/ 和/ 编辑/ 老师/ ,/ 他们/ 诚恳/ 地/ 提出/ 了/ 修改意见/ ,/ 这些/ 意见/ 都/ 十分宝贵/ ,/ 对/ 我/ 以后/ 的/ 学习/ 和/ 科研/ 有/ 很/ 好/ 的/ 帮助/ !/ 

