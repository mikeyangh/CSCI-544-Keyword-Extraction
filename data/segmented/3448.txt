Page1/ 对/ 等/ 网络/ 的/ 抖动/ 特性/ 研究/ 综述/ 付志鹏/ 1/ )/ ,/ 2/ )/ 王怀民/ 1/ )/ ,/ 2/ )/ 史殿习/ 1/ )/ ,/ 2/ )/ 邹鹏/ 1/ )/ 1/ )/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 2/ )/ (/ 国防科学技术大学/ 并行/ 与/ 分布/ 处理/ 国家/ 重点/ 实验室/ 长沙/ 410073/ )/ 摘要/ 对/ 等/ 网络应用/ 是/ 目前/ 互联网/ 上/ 最/ 主要/ 的/ 应用/ 之一/ ,/ 但是/ 它/ 的/ 性能/ 受到/ 抖动/ 特性/ —/ —/ —/ 节点/ 频繁/ 加入/ 和/ 退出/ 网络/ 的/ 影响/ ./ 文章/ 在/ 系统/ 简述/ 抖动/ 的/ 由/ 来/ 、/ 定义/ 及其/ 对/ P2P/ 系统/ 性能/ 影响/ 的/ 基础/ 上/ ,/ 详细/ 介绍/ 抖动/ 的/ 统计/ 特性/ 研究/ ,/ 发现/ 如/ 节点/ 的/ 会/ 话/ 时长/ 一般/ 服从/ 重尾/ 分布/ 等/ 的/ 一些/ 动态/ 规律/ ;/ 详述/ 抖动/ 的/ 测量方法/ 研究/ ,/ 针对/ 被动/ 监测/ ,/ 主动/ 监测/ 以及/ 抽样/ 测量/ 等/ 阐述/ 各自/ 的/ 优缺点/ ,/ 并/ 说明/ 相应/ 的/ 改进/ 方法/ 来/ 提高/ 网络/ 测量/ 的/ 精度/ ;/ 详述/ 为/ 减少/ 抖动/ 影响/ 的/ 应对/ 策略/ 研究/ ,/ 在/ 邻居/ 选择/ 、/ 失效恢复/ 、/ 副本/ 维护/ 、/ 连接/ 生命周期/ 维护/ 等/ 方面/ 说明/ 各/ 应对/ 策略/ 的/ 功能/ 和/ 优缺点/ ,/ 并/ 针对/ 各个方面/ 分别/ 阐述/ 自己/ 的/ 看法/ ./ 最后/ 对/ 未来/ 的/ 研究/ 趋势/ 进行/ 了/ 总结/ 和/ 展望/ ./ 关键词/ 对/ 等/ 网络/ ;/ 抖动/ ;/ 统计/ 特性/ ;/ 测量方法/ ;/ 应对/ 策略/ 1/ 引言/ P2P/ 应用/ 是/ 目前/ 互联网/ 上/ 最/ 主要/ 的/ 应用/ 之一/ ,/ 遍及/ 文件共享/ 、/ 实时/ 通信/ 、/ 协同/ 计算/ 、/ 流媒体/ 传输/ 等/ ./ P2P/ 软件/ 如/ BitTorrent/ [/ 1/ ]/ 、/ eMule/ ①/ 、/ PPTV/ ②/ 等/ 都/ 已经/ 有/ 几亿/ 的/ 用户/ 群体/ ,/ 同时/ 上线/ 人数/ 达到/ 数百万/ 规模/ ,/ 占据/ 了/ 目前/ 互联网/ 流量/ 约/ 73.79/ %/ 的/ 带宽/ [/ 2/ ]/ ./ 但是/ P2P/ 的/ 性能/ 受到/ 网络/ 动态性/ (/ 比如/ 抖动/ ,/ churn/ )/ 严重/ 制约/ ./ 从/ P2P/ 网络/ 诞生/ 开始/ ,/ churn/ 就/ 一直/ 伴随/ 其/ 左右/ ./ 2000/ 年/ 到/ 2004/ 年间/ ,/ 研究/ 人员/ 通过/ 各种/ 手段/ 对/ Napster/ [/ 3/ ]/ 、/ Gnutella/ [/ 4/ ]/ 、/ Overnet/ ③/ 等/ P2P/ 网络/ 进行/ 测量/ [/ 5/ -/ 9/ ]/ ,/ 发现/ 网络/ 中/ 节点/ 的/ 平均/ 会话/ 时长/ 一般/ 都/ 比较/ 短/ ,/ 理论/ 分析/ 和/ 实验/ 验证/ 表明/ ,/ 节点/ 的/ 频繁/ 加入/ 和/ 退出/ 对/ 网络/ 的/ 拓扑/ 一致性/ 、/ 维护/ 开销/ 、/ 性能/ 以及/ 可靠性/ 等/ 都/ 会/ 产生/ 影响/ ./ Churn/ 的/ 存在/ 制约/ 了/ P2P/ 的/ 发展/ 及其/ 推广应用/ ./ 有/ 越来越/ 多/ 的/ 研究者/ 关注/ 并/ 参与/ 研究/ ./ 在/ SIGCOMM/ 、/ INFOCOM/ 、/ ICNP/ 、/ IPTPS/ 、/ IEEEP2P/ 等/ 著名/ 国际/ 会议/ 以及/ IEEE/ // ACMTransactionsonNetworking/ 等/ 期刊/ 都/ 收录/ 了/ 多篇/ 关于/ churn/ 的/ 文章/ ./ 这些/ 文章/ 从/ churn/ 的/ 统计/ 特性/ 、/ 测量方法/ 以及/ 应对/ 策略/ 等/ 方面/ 对/ churn/ 进行/ 全方位/ 、/ 多角度/ 的/ 研究/ ,/ 提出/ 了/ 很多/ 宝贵/ 和/ 富有/ 建设性/ 的/ 意见/ ./ 从/ 实际/ 应用/ 的/ 角度/ 出发/ ,/ 针对/ 目前/ 唯一/ 在/ 现实/ 中/ 大量/ 应用/ 的/ 结构化/ P2P/ 网络/ —/ —/ —/ Kademlia/ [/ 10/ ]/ 进行/ churn/ 特性/ 研究/ 是/ 近几年来/ 该/ 方面/ 的/ 特点/ ,/ 研究/ 人员/ 通过/ 网络/ 测量/ 、/ 理论/ 分析/ 、/ 实验/ 验证/ 等/ 手段/ 对/ 其/ 应用软件/ eMule/ 、/ BitTorrent/ 进行/ 研究/ ,/ 取得/ 了/ 丰富/ 的/ 研究成果/ ./ 文献/ [/ 11/ ]/ 对/ churn/ 进行/ 了/ 部分/ 阐述/ ,/ 本文/ 致力于/ 对/ 其/ 进行/ 进一步/ 的/ 深化/ 和/ 补充/ ./ 本文/ 第/ 2/ 节/ 阐述/ churn/ 的/ 定义/ 及其/ 对/ P2P/ 网络/ 的/ 影响/ ;/ 第/ 3/ 节/ 详述/ churn/ 的/ 统计/ 特性/ ,/ 随后/ 阐述/ churn/ 的/ 测量方法/ ;/ 第/ 5/ 节/ 阐述/ churn/ 的/ 应对/ 策略/ ;/ 文章/ 最后/ 讨论/ churn/ 的/ 研究/ 发展/ 方向/ ./ 2Churn/ 简介/ 2.1/ Churn/ 的/ 由/ 来/ Churn/ 一词/ 的/ 产生/ 由来已久/ [/ 12/ ]/ ./ 随后/ 该词/ 被/ 扩展/ 到/ 多个/ 领域/ ./ 它/ 表示/ 前面/ 的/ 状态/ 还/ 未/ 调整/ 好/ ,/ 下/ 一个/ 活动/ 又/ 添加/ 进来/ ,/ 系统/ 不停/ 地/ 抖动/ ,/ 并且/ 一直/ 延续下去/ ./ P2P/ 网络/ 中/ 的/ churn/ 是/ 指/ ,/ 当/ 一个/ 节点/ 加入/ 或/ 退出/ 网络/ 后/ ,/ 网络/ 需要/ 调整/ 来/ 适应/ 这种/ 变化/ (/ 包括/ 与其/ 相连/ 的/ 节点/ 信息/ 的/ 更新/ ,/ 与/ 节点/ 相关/ 的/ 资源/ 信息/ 的/ 更新/ 等/ )/ ,/ 而/ 不/ 等/ 网络/ 调整/ 好/ ,/ 下/ 一个/ 节点/ 又/ 加入/ 进来/ (/ 或/ 退出/ )/ ,/ 又/ 需要/ 调整/ ,/ …/ …/ ,/ 使得/ 网络/ 处于/ 不停/ 的/ 抖动/ 状态/ ./ 在/ P2P/ 网络/ 诞生/ 的/ 初期/ ,/ 人们/ 非常/ 渴望/ 知道/ P2P/ 网络/ 的/ 一些/ 静态/ 和/ 动态/ 特点/ ,/ 比如/ 规模/ 到底/ 有/ 多/ 大/ ?/ 网络/ 节点/ 的/ 活动/ 是否/ 有/ 规律/ ?/ 等等/ ./ 马萨诸塞州/ 立/ 大学/ 的/ Chu/ 等/ 人/ [/ 6/ ]/ 于/ 2000/ 年/ 12/ 月/ 21/ 日/ ~/ 2001/ 年/ 2/ 月/ 3/ 日/ 对/ Napster/ 及/ 2002/ 年/ 2/ 月/ 24/ 日/ ~/ 3/ 月/ 25/ 日/ 对/ Gnutella/ 的/ 监测/ 表明/ ,/ 有/ 31/ %/ 的/ 节点/ 的/ 会/ 话/ 时长/ 仅/ 为/ 10min/ 左右/ ,/ 仅/ 有/ 不到/ 20/ %/ 的/ 节点/ 的/ 会/ 话/ 时长/ 超过/ 2/ 小时/ ./ 华盛顿/ 州立大学/ 的/ Saroiu/ 等/ 人/ [/ 7/ ]/ 同样/ 对/ Napster/ 和/ Gnutella/ 进行/ 监测/ ,/ 结果表明/ ,/ 网络/ 中有/ 50/ %/ 的/ 节点/ 的/ 会/ 话/ 时长/ 少于/ 60min/ ./ 加州大学/ 圣地亚哥/ 分校/ 的/ Bhagwan/ 等/ 人/ [/ 5/ ]/ 于/ 2003/ 年/ 1/ 月/ 14/ 日/ ~/ 1/ 月/ 28/ 日/ 对/ Overnet/ 网络/ 的/ 监测/ 表明/ ,/ 50/ %/ 的/ 节点/ 只有/ 0.3/ 的/ 可用性/ ①/ ./ 在/ 2003/ 年/ 11/ 月/ 加州大学/ 伯克利分校/ 的/ 技术/ 报告/ 中/ ,/ Rhea/ 等/ 人/ [/ 8/ -/ 9/ ]/ 总结/ 了/ 2000/ 年/ ~/ 2003/ 年间/ 研究/ 人员/ 对/ P2P/ 网络/ 的/ 监测/ 结果/ ,/ 表明/ P2P/ 网络/ 中/ 节点/ 加入/ 和/ 退出/ 非常/ 频繁/ ,/ 平均/ 在线/ 时长/ 由/ 几分钟/ 到/ 一/ 小时/ 不/ 等/ ,/ 并且/ 该/ 现象/ 对/ 网络/ 的/ 性能/ 和/ 可靠性/ 产生/ 严重/ 影响/ ,/ 必须/ 引起/ P2P/ 网络/ 研究/ 人员/ 的/ 足够/ 重视/ ./ 他/ 借鉴/ 工业/ 领域/ 以及/ 经济/ 领域/ 中/ churn/ 的/ 定义/ ,/ 首次/ 将/ 网络/ 中/ 节点/ 频繁/ 地/ 加入/ 和/ 退出/ 网络/ 也/ 定义/ 为/ churn/ ,/ 得到/ 学术/ 圈/ 同行/ 们/ 的/ 广泛/ 认同/ ,/ 从此/ ,/ 学术界/ 统一/ 将/ 该/ 现象/ 称为/ churn/ ./ 2.2/ Churn/ 的/ 定义/ 虽然/ Rhea/ 在/ 文献/ [/ 8/ ]/ 中/ 给出/ 了/ 第一个/ 定义/ :/ 节点/ 加入/ 和/ 退出/ 的/ 持续/ 过程/ (/ thecontinuousprocessofnodearrivalanddeparture/ )/ ./ 但是/ 随后/ ,/ 众多/ 研究者/ 对/ churn/ 给出/ 了/ 自己/ 的/ 理解/ 和/ 定义/ ,/ 比较/ 著名/ 的/ 有/ :/ 麻省理工/ 大学/ 的/ Li/ 等/ 人/ [/ 13/ ]/ 将/ churn/ 定义/ 为/ :/ 成员/ 关系/ 的/ 持续/ 改变/ (/ continuouschangesinmem/ -/ berships/ )/ ./ 加州大学/ 伯克利分校/ 的/ Godfrey/ 等/ 人/ [/ 14/ ]/ 将/ churn/ 定义/ :/ 由于/ 加入/ 、/ 正常/ 离开/ 、/ 失效/ 导致/ 的/ 一系列/ 参与/ 节点/ 的/ 改变/ (/ changeinthesetofparticipatingnodesduetojoins/ ,/ gracefulleaves/ ,/ andfailures/ )/ ./ ①/ 可用性/ 用/ 响应/ 次数/ 和/ 探测/ 次数/ 的/ 比值/ 来/ 计算/ ,/ 比如/ 探针/ 探/ Page3/ 俄勒冈州/ 立/ 大学/ 的/ Stutzbach/ 等/ 人/ [/ 15/ ]/ 将/ churn/ 定义/ 为/ :/ 成千上万/ 的/ 节点/ 由于/ 独立/ 地/ 加入/ 和/ 退出/ 所/ 产生/ 的/ 叠加/ 效果/ (/ thecollectiveeffectcreatedbytheindependentarrivalanddepartureofthousands/ (/ ormillions/ )/ ofpeers/ )/ ./ 从/ 这些/ 定义/ 可以/ 看出/ ,/ 虽然/ 它们/ 的/ 说法/ 各不相同/ ,/ 但/ 其/ 内涵/ 基本一致/ ,/ churn/ 的/ 概念/ 有/ 两个/ 关键/ 要素/ :/ (/ 1/ )/ churn/ 是/ 由于/ 节点/ 加入/ 或/ 退出/ 引起/ 的/ ,/ 没有/ 节点/ 的/ 加入/ 或/ 退出/ ,/ 就/ 不会/ 产生/ churn/ 现象/ ./ (/ 2/ )/ churn/ 不是/ 描述/ 单个/ 节点/ 的/ 行为/ ,/ 而是/ 描述/ 整个/ 网络/ 的/ 动态/ 特点/ ,/ 它/ 是/ 由于/ 单个/ 节点/ 的/ 行为/ 而/ 产生/ 的/ 整体/ 结果/ ./ 单个/ 节点/ 的/ 一次/ 加入/ 或/ 退出/ 并/ 不能/ 代表/ 什么/ ,/ 并且/ 可以/ 通过/ 更新/ 路由表/ 、/ 邻居/ 表等/ ,/ 很快/ 调整/ 过来/ ./ 而/ 对/ 整个/ 网络/ 而言/ ,/ 不断/ 地有/ 节点/ 加入/ ,/ 同时/ 不断/ 地有/ 节点/ 退出/ 网络/ ,/ 并/ 一直/ 延续下去/ ,/ 直到/ 永远/ ./ 一直/ 以来/ ,/ 都/ 很/ 难/ 找到/ 一个/ 相应/ 的/ 中文/ 词语/ 来/ 准确/ 表达/ churn/ 的/ 意思/ ,/ 翻译成/ 扰动/ 、/ 抖动/ 、/ 波动/ 、/ 颤动/ 等/ 的/ 都/ 有/ ./ 目前/ 来说/ ,/ 大多数/ 人/ 趋向于/ 翻译成/ 抖动/ ,/ 本文/ 也/ 采用/ 大众/ 的/ 看法/ ,/ 用/ 抖动/ 来/ 表达/ ./ 2.3/ Churn/ 对/ P2P/ 网络/ 的/ 影响/ 当/ churn/ 产生/ 时/ ,/ 就/ 会/ 对/ 网络/ 的/ 正常/ 运行/ 产生/ 影响/ ,/ 使/ 其/ 变得/ 非常/ 低效/ ./ 总结/ 来说/ ,/ churn/ 对/ P2P/ 网络/ 的/ 影响/ 主要/ 包括/ 如下/ 几个/ 方面/ :/ (/ 1/ )/ churn/ 对/ P2P/ 网络/ 的/ 拓扑/ 一致性/ 产生/ 影响/ ./ P2P/ 网络/ 的/ 拓扑/ 结构/ 用/ 数学方法/ 描述/ 为/ 用点/ (/ 表示/ 网络/ 中/ 的/ 一台/ 台/ 计算机/ )/ 和/ 边/ (/ 代表/ 计算机/ 之间/ 的/ 连接/ )/ 连接/ 而成/ 的/ 拓扑图/ ./ 当/ 节点/ 加入/ 和/ 退出/ 网络/ 比较/ 频繁/ 时/ ,/ 节点/ 的/ 邻居/ 往往/ 经常/ 变化/ ,/ 这/ 使得/ 表面/ 上/ 存在/ 于/ 邻居/ 表中/ 的/ 节点/ 实际上/ 由于/ 失效/ 或/ 下线/ 而/ 无法/ 连接/ ,/ 从而/ 产生/ 网络/ 的/ 拓扑/ 结构/ 和/ 实际/ 不/ 一致/ 的/ 情况/ ./ 这/ 将/ 导致/ 节点/ 的/ 连接/ 失效/ ,/ 数据/ 不可/ 达/ 等/ 问题/ ,/ 严重/ 影响/ 网络/ 的/ 性能/ ./ (/ 2/ )/ churn/ 使得/ P2P/ 网络/ 的/ 维护/ 代价/ 提高/ ./ 在/ P2P/ 网络/ 中/ ,/ 每个/ 节点/ 都/ 保存/ 有/ 一张/ 路由表/ ,/ 用于/ 存储/ 和/ 自己/ 相连/ 的/ 邻居/ 信息/ ./ 当/ 节点/ 频繁/ 加入/ 和/ 退出/ 网络/ 时/ ,/ 需要/ 定期/ 发送/ 消息/ 来/ 检查/ 确认/ 邻居/ 节点/ 是否/ 在线/ ,/ 当/ 网络/ 规模/ 比较/ 庞大/ 时/ ,/ 这种/ 消息/ 的/ 数量/ 是/ 很/ 惊人/ 的/ ./ 假设/ 网络/ 节点/ 数目/ 为/ N/ ,/ 每个/ 节点/ 的/ 路由表/ 大小/ 为/ O/ (/ logN/ )/ ,/ 每隔/ 30s/ 发出/ 一条/ 大小/ 为/ 2k/ 的/ 心跳/ 信息/ ,/ 则/ 整个/ 网络/ 每分钟/ 产生/ 的/ 负载/ 为/ 4k/ ×/ N/ ×/ O/ (/ logN/ )/ 的/ 消息/ 量/ ,/ 对于/ 一个/ 具有/ 100/ 万/ 节点/ 的/ 网络/ ,/ 其/ 数量/ 大约/ 为/ 80G/ (/ 事实上/ 在/ Gnutella/ 网络/ 初期/ ,/ 其/ 网络/ 维护/ 消息/ 的/ 流量/ 占/ 其/ 总流量/ 的/ 80/ %/ 左右/ [/ 16/ ]/ )/ ./ 再/ 加上/ 在/ 发现/ 邻居/ 节点/ 失效/ 时/ ,/ 需要/ 及时/ 查找/ 新/ 的/ 邻居/ 来/ 保证/ 路由表/ 的/ 完整性/ ./ 这些/ 由于/ churn/ 带来/ 的/ 维护/ 消息/ 加重/ 了/ 网络/ 负担/ ,/ 提高/ 了/ 网络/ 维护/ 代价/ ./ (/ 3/ )/ churn/ 对/ P2P/ 网络/ 的/ 性能/ 产生/ 影响/ ./ 衡量/ P2P/ 网络/ 的/ 性能指标/ 有/ 多个/ ,/ 其中/ 包括/ 路由/ 效率/ 、/ 查找/ 延时/ 、/ 数据/ 传输率/ 等/ ./ 而/ churn/ 对/ 这些/ 指标/ 都/ 有/ 影响/ ./ 在/ P2P/ 网络协议/ 的/ 设计/ 中/ ,/ 网络/ 路由/ 、/ 资源/ 查找/ 、/ 数据传输/ 都/ 以/ 节点/ 邻居/ 一直/ 保持/ 不变/ 这一/ 假设/ 为/ 前提/ ./ 但/ 在/ 实际/ 网络/ 的/ 路由/ 传递/ 过程/ 中/ ,/ 下/ 一/ 节点/ 可能/ 失效/ ,/ 导致/ 路由/ 不可/ 达/ ,/ 而源/ 节点/ 可能/ 并不知道/ 而/ 盲目/ 等待/ ,/ 既/ 浪费时间/ ,/ 又/ 降低/ 效率/ ./ 资源/ 查找/ 时/ ,/ 由于/ 节点/ 的/ 加入/ 和/ 退出/ ,/ 导致/ 有些/ 资源/ 可能/ 根本/ 不/ 在/ 网络/ 中/ 或者/ 需要/ 很/ 长时间/ 才能/ 找到/ ,/ 从而/ 增大/ 查找/ 延时/ ./ 在/ 数据传输/ 的/ 整个/ 过程/ 中/ ,/ 并/ 不能/ 保证/ 传输/ 路径/ 上/ 的/ 每个/ 节点/ 一直/ 在线/ ,/ 当/ 节点/ 频繁/ 加入/ 和/ 退出/ 网络/ 时/ ,/ 若/ 保证/ 数据传输/ 不/ 中断/ ,/ 网络/ 需/ 选择/ 其它/ 路径/ 来/ 进行/ 传输/ ,/ 降低/ 了/ 数据传输/ 的/ 效率/ ./ (/ 4/ )/ churn/ 对/ P2P/ 网络/ 的/ 可靠性/ 产生/ 影响/ ./ P2P/ 网络/ 的/ 可靠性/ 是/ 指/ P2P/ 网络/ 完成/ 任务/ 的/ 正确性/ ./ 网络/ 路由/ 不可/ 达/ ,/ 数据/ 不能/ 传输/ 到/ 指定/ 的/ 节点/ ,/ 传输/ 的/ 数据/ 产生/ 错误/ 、/ 不/ 完整/ ,/ 在/ 网络/ 中/ 明明/ 标识/ 存在/ 的/ 资源/ 却/ 找/ 不到/ 等等/ ,/ 都/ 是/ 不/ 可靠/ 的/ 表现/ ./ 在/ churn/ 下/ ,/ P2P/ 网络/ 可能/ 产生/ 网络/ 分割/ ,/ 某些/ 节点/ 被/ 孤立/ ,/ 使/ 消息传递/ 不到/ 给/ 该/ 节点/ 从而/ 使得/ 网络/ 不/ 可靠/ ./ 在/ 进行/ 资源/ 的/ 查找/ 时/ ,/ 有些/ 已经/ 发布/ 在/ 网络/ 上/ 的/ 资源/ 的/ 源/ 节点/ 可能/ 已经/ 失效/ ,/ 从而/ 导致/ 资源/ 不/ 可靠/ ./ 在/ 数据传输/ 过程/ 中/ ,/ 由于/ churn/ ,/ 导致/ 传输/ 过程/ 中/ 的/ 节点/ 失效/ ,/ 产生/ 数据/ 不可/ 达/ 、/ 丢包/ 等/ 现象/ ,/ 导致/ 传输/ 不/ 可靠/ ./ 总之/ ,/ churn/ 对/ P2P/ 网络/ 的/ 正常/ 运行/ 会/ 产生/ 极大/ 影响/ ,/ 研究/ churn/ ,/ 获得/ 网络/ 节点/ 的/ 活动/ 规律/ ,/ 分析/ 这些/ 规律/ 对/ 网络/ 的/ 影响/ ,/ 并/ 据此/ 提出/ 一些/ 切实有效/ 的/ 应对/ 策略/ 来/ 减小/ 这些/ 影响/ ,/ 对/ 提高/ P2P/ 网络/ 的/ 运行/ 效率/ ,/ 促进/ P2P/ 网络/ 的/ 推广/ 使用/ 都/ 有/ 重要/ 作用/ ./ 3Churn/ 的/ 统计/ 特性/ 研究/ 研究/ churn/ 统计/ 特性/ 的/ 目的/ 是/ 为了/ 获得/ P2P/ 网络/ 的/ 动态/ 规律/ ./ 表现/ churn/ 统计/ 规律/ 的/ 一些/ 主要参数/ 包括/ 节点/ 会话/ 时长/ (/ sessiontime/ )/ 、/ 在线/ 时/ 长/ (/ uptime/ )/ 、/ 剩余/ Page4/ 时长/ (/ remaininguptime/ )/ 、/ 生命/ 时/ 长/ (/ lifetime/ )/ 等/ ./ 下面/ 分别/ 对/ 其/ 进行/ 简述/ ./ 3.1/ 会话/ 时长/ 研究会/ 话/ 时长/ 是/ 指/ 单个/ 节点/ 的/ 一次/ 加入/ —/ 参与/ —/ 退出/ 网络/ 的/ 活动/ 周期/ 所/ 经过/ 的/ 时间/ ,/ 它用/ 节点/ 离开/ 网络/ 的/ 时刻/ 减去/ 节点/ 加入/ 网络/ 的/ 时刻/ 来/ 计算/ ./ 从/ 2002/ 年/ 开始/ ,/ 一系列/ 的/ 研究/ 人员/ 对/ 不同/ 的/ P2P/ 网络/ 进行/ 了/ 统计/ 监测/ ,/ 其/ 结果/ 如表/ 1/ 所示/ ./ 发表/ 年份/ 研究者/ 网络/ 名称/ 会话/ 时长/ 分布/ 2002Chu/ 等/ 人/ Napster/ 、/ Gnutella/ 二次/ 对数/ 分布/ [/ 6/ ]/ 2003Gummadi/ 等/ 人/ KaZaA/ 重尾/ 分布/ [/ 17/ ]/ 2003Bustamante/ 等/ 人/ GnutellaPareto/ 分布/ [/ 18/ ]/ 2005Stutzbach/ 等/ 人/ Gnutella/ 、/ 2006Stutzbach/ 等/ 人/ Gnutella/ 、/ 2009Steiner/ 等/ 人/ KadWeibull/ 分布/ [/ 20/ ]/ 会话/ 时长/ 到底/ 服从/ 什么/ 分布/ ,/ 目前/ 尚无/ 定论/ ,/ 每种/ 说法/ 都/ 有/ 自己/ 的/ 道理/ ./ 本文/ 认为/ ,/ 由于/ 网络/ 的/ 动态性/ ,/ 会话/ 时长/ 也/ 是/ 一个/ 动态变化/ 的/ 过程/ ,/ 在/ 某个/ 时间段/ ,/ 它/ 可能/ 用/ a/ 分布/ 能够/ 很/ 好/ 地/ 拟合/ ,/ 但/ 在/ 另/ 一个/ 时间段/ (/ 比如/ 热点/ 爆发/ )/ ,/ a/ 分布/ 不能/ 拟合/ ,/ 而/ 它/ 却/ 能/ 用/ b/ 分布/ 很/ 好/ 拟合/ ,/ 热点/ 过后/ 可能/ 用/ c/ 分布/ 又/ 拟合/ 得/ 很/ 好/ ./ 精确/ 描述/ 会话/ 时长/ 的/ 分布/ 比较/ 困难/ ,/ 但/ 总结/ 网络/ 活动/ 规律/ 对于/ 指导/ 网络/ 和/ 节点/ 的/ 行为/ ,/ 却/ 具有/ 很/ 重要/ 的/ 参考价值/ ./ 目前/ 一个/ 普遍/ 的/ 共识/ 是/ ,/ 节点/ 的/ 会/ 话/ 时长/ 一般/ 服从/ 重尾/ (/ heavy/ -/ tail/ )/ 分布/ ,/ 比如/ Pareto/ 分布/ 和/ Weibull/ 分布/ ./ 3.2/ 在线/ 时/ 长/ 研究/ P2P/ 中/ churn/ 的/ 统计/ 特性/ 进行/ 研究/ 的/ 另/ 一个/ 重要/ 参数/ 就是/ 在线/ 时/ 长/ ,/ 它/ 是/ 用/ 目前/ 在线/ 节点/ 的/ 当前/ 时刻/ 减去/ 节点/ 加入/ 网络/ 的/ 时刻/ 来/ 计算/ ./ Sariou/ 等/ 人/ [/ 21/ ]/ 对/ Napster/ 、/ Gnutella/ 网络/ 进行/ 研究/ 后/ 发现/ ,/ 节点/ 在线/ 时/ 长/ 服从/ Poisson/ 分布/ ./ 而/ Stutzbach/ 等/ 人/ [/ 15/ ]/ 对/ Gnutella/ 、/ BitTorrent/ 、/ Kademlia/ 网络/ 进行/ 研究/ 后/ 表明/ ,/ 在线/ 时/ 长/ 服从/ 幂律/ 分布/ ./ 3.3/ 剩余/ 时/ 长/ 研究/ 研究会/ 话/ 时长/ 和/ 在线/ 时长/ 的/ 意义/ 在于/ 预测/ 剩余/ 时/ 长/ ,/ 它/ 是/ 指/ 从/ 节点/ 当前/ 时刻/ 到/ 节点/ 将来/ 下线/ 所/ 剩余/ 的/ 时间/ ./ 即/ 剩余/ 时/ 长/ =/ 会话/ 时长/ -/ 在线/ 时长/ ./ 通过/ 预测/ 剩余/ 时/ 长/ 可以/ 为/ 网络/ 选择/ 节点/ 提供/ 依据/ ./ Yao/ 等/ 人/ [/ 22/ ]/ 通过/ 建立/ 一个/ 隔离/ 模型/ 来/ 研究/ 剩余/ 时/ 长/ :/ 对/ 每/ 一个/ 加入/ 系统/ 的/ 用户/ v/ 都/ 分配/ 一个/ 随机/ 的/ 会/ 话/ 时长/ L/ ,/ L/ 的/ 分布/ 函数/ 已知/ ./ 当/ 加入/ 系统/ 时/ ,/ v/ 找到/ k/ 个/ 初始/ 邻居/ ,/ 然后/ 持续/ 监测/ 它们/ 的/ 状态/ ./ 当有/ 邻居/ 失效/ 时/ ,/ 都/ 将/ 随机/ 选择/ 系统/ 中/ 在线/ 的/ 节点/ 替代/ (/ 任何时刻/ ,/ 邻居/ 只有/ 两个/ 状态/ :/ 活着/ (/ ON/ )/ 或者/ 死亡/ (/ OFF/ )/ ./ ON/ 的/ 持续时间/ R/ 为/ 邻居/ 的/ 剩余/ 时/ 长/ ,/ OFF/ 的/ 持续时间/ S/ 为/ 查找/ 替代/ 节点/ 的/ 延迟/ )/ ,/ 然后/ 通过/ 构造/ 一个/ 持续时间/ 的/ Markov/ 链来/ 跟踪/ v/ 的/ 出度/ ./ 文章/ 通过/ 一系列/ 的/ 理论/ 推导/ 、/ 实验/ ,/ 得出结论/ :/ 产生/ 剩余/ 时/ 长长的/ 策略/ 可以/ 确保/ 系统/ 具有/ 较/ 低/ 的/ 隔离/ 频率/ 和/ 较/ 高/ 的/ 抗/ churn/ 的/ 适应性/ (/ resilience/ )/ ./ 为此/ ,/ 在/ 节点/ 选择/ 时/ ,/ 选择/ 剩余/ 时/ 长长的/ 节点/ 可以/ 使/ 系统/ 更/ 稳定/ ./ 但是/ 节点/ 的/ 剩余/ 时长/ 是/ 一个/ 未来/ 的/ 值/ ,/ 实际/ 中/ 不/ 可能/ 知道/ ./ 而会话/ 时长/ 具有/ 重尾/ 分布/ 的/ 特点/ 告诉/ 我们/ ,/ 在线/ 时/ 长/ 比较/ 长/ 的/ 节点/ ,/ 其/ 剩余/ 时长/ 也/ 往往/ 比较/ 长/ ./ 因此/ ,/ 很多/ 研究者/ 据此/ 对/ 剩余/ 时/ 长/ 进行/ 预测/ ./ Stutzbach/ 等/ 人/ [/ 15/ ]/ 通过/ 测量/ 实验/ 指出/ 可以/ 对/ Gnutella/ 和/ Kademlia/ 的/ 剩余/ 时/ 长/ 进行/ 较/ 好/ 的/ 预测/ ,/ 而/ BitTorrent/ 不能/ ./ Steiner/ 等/ 人/ [/ 20/ ]/ 同样/ 通过/ 对/ 监测数据/ 的/ 分析/ 指出/ ,/ 一个/ 上线/ 达到/ 1000min/ 的/ 节点/ ,/ 将/ 有/ 1500min/ 的/ 剩余/ 时/ 长/ ,/ 只有/ 20/ %/ 的/ 在线/ 时长/ 为/ 2h/ 的/ 节点/ 将/ 继续/ 在线/ 24h/ ./ 3.4/ 生命/ 时/ 长/ 研究/ 节点/ 的/ 生命/ 时长/ 是/ 指/ 用户/ 第一次/ 使用/ P2P/ 软件/ 上线/ 到/ 最后/ 一次/ 卸载/ 终端/ 软件/ 离开/ 网络/ 所/ 经过/ 的/ 时间/ ./ 在/ 一些/ 文献/ 中/ ,/ 节点/ 生命/ 时长/ 是/ 指/ 节点/ 的/ 会/ 话/ 时长/ ./ 由于/ 节点/ 此次/ 下线/ 后/ ,/ 不能/ 确定/ 下次/ 是否/ 会/ 上线/ ,/ 在/ 进行/ 生命/ 时/ 长/ 测量/ 时/ ,/ 往往/ 具有/ 不确定性/ ./ 同时/ ,/ 由于/ 生命/ 时长/ 的/ 跨度/ 往往/ 比较/ 长/ ,/ 而/ 一般/ 的/ 网络/ 实验/ 却/ 不会/ 持续/ 太/ 长时间/ ./ 这些/ 因素/ 都/ 导致/ 节点/ 生命/ 时长/ 的/ 测量/ 存在/ 一定/ 的/ 难度/ ./ Steiner/ 等/ 人/ [/ 20/ ]/ 针对/ KAD/ 网络/ 进行/ 了/ 6/ 个/ 月/ 的/ 监测/ 发现/ ,/ 中国/ 节点/ 和/ 欧洲/ 节点/ 的/ 生命/ 时长/ 有/ 大/ 的/ 不同/ ,/ 超过/ 1/ // 3/ 的/ 中国/ 节点/ 在/ 一天/ 之后/ 消失/ ,/ 只有/ 10/ %/ 的/ 中国/ 节点/ 的/ 生命/ 时/ 长/ 超过/ 150/ 天/ ./ 而/ 接近/ 40/ %/ 的/ 欧洲/ 节点/ 的/ 生命/ 时/ 长/ 超过/ 150/ 天/ ./ 同时/ ,/ 文章/ 还/ 研究/ 了/ 生命/ 时长/ 和/ 会/ 话/ 次数/ 之间/ 的/ 关系/ ,/ 分析表明/ 节点/ 的/ 生命/ 时/ 长/ 强烈/ 地/ 依赖/ 节点/ 重连/ 系统/ 的/ 次数/ ./ 大概/ 30/ %/ 的/ 中国/ 节点/ 其/ 生命/ 时长/ 只/ 使用/ 一次/ 会话/ ,/ 而/ 欧洲/ 节点/ 只有/ 5/ %/ ./ 3.5/ 针对/ KAD/ 网络/ 的/ 统计/ 特性/ 研究/ 早期/ 针对/ P2P/ 网络/ 的/ 测量/ 大多/ 是/ 基于/ 非/ 结构化/ P2P/ 网络/ 来/ 进行/ ,/ 基于/ 结构化/ P2P/ 网络/ 的/ 非常少/ ,/ 而且/ 结构化/ P2P/ 网络/ 大多/ 只/ 存在/ 于/ 实验室/ ,/ 对/ 这些/ 网络/ 的/ 测量/ 都/ 以/ 模拟/ 为主/ ./ 实际/ 使用/ 得/ 非常少/ ,/ Page5/ 而/ Kademlia/ 网络/ 是/ 实际/ 应用/ 非常/ 广泛/ 的/ 网络/ ,/ 在/ 目前/ 的/ BitTorrent/ 系列/ 软件/ ,/ eMule/ 系列/ 软件/ 中/ 都/ 使用/ 它/ ,/ 拥有/ 大量/ 的/ 用户/ 群体/ ./ 为此/ ,/ 针对/ 基于/ Kademlia/ 网络/ 的/ 测量/ 具有/ 较强/ 的/ 应用/ 价值/ ,/ 是/ 近年来/ 国内外/ P2P/ 网络/ 测量/ 研究/ 的/ 热点/ ./ 为此/ 本文/ 单独/ 拿出/ 一/ 小节/ 来/ 进行/ 阐述/ ,/ 逻辑/ 结构/ 上/ 可能/ 和/ 前面/ 的/ 不/ 一致/ ./ Steiner/ 等/ 人/ [/ 20/ ]/ 针对/ KAD/ 网络/ 的/ 监测/ 表明/ :/ 节点/ 的/ 会/ 话/ 时长/ 服从/ 重尾/ 分布/ ,/ 至少/ 有/ 0.1/ %/ 的/ 会/ 话/ 超过/ 1/ 周/ ,/ 并且/ 被/ 监测/ 到/ 的/ 最长/ 的/ 会/ 话/ 为/ 78/ 天/ ,/ 最/ 适合/ 的/ 分布/ 函数/ 为/ 韦伯/ (/ WeiBull/ )/ 分布/ ./ 文章/ 还/ 对/ 会/ 话/ 之间/ 的/ 相关性/ 进行/ 了/ 分析/ ,/ 结果/ 发现/ 以前/ 的/ 会/ 话/ 和/ 下/ 一次/ 会话/ 之间/ 的/ 相关度/ 只有/ 0.15/ ,/ 即/ 通过/ 以前/ 的/ 会/ 话/ 来/ 预测/ 将来/ 的/ 会/ 话/ 并/ 不/ 准确/ ./ 但是/ 当/ 只/ 考虑/ 超过/ 一天/ 的/ 长时/ 长会/ 话/ 时/ ,/ 它们/ 的/ 正/ 相关/ 达到/ 0.85/ ./ 通过/ 监测/ 还/ 发现/ ,/ 中国/ 的/ 节点/ 比/ 欧洲/ 节点/ 每日/ 花/ 非常少/ 的/ 时间/ 连接/ 到/ 网络/ 上/ ,/ 欧洲/ 有/ 40/ %/ 的/ 节点/ 的/ 日/ 平均/ 上线/ 时间/ 为/ 5h/ ,/ 20/ %/ 的/ 节点/ 超过/ 10h/ ,/ 而且/ 大部分/ 节点/ 每天/ 的/ 可用性/ 变化/ 非常/ 大/ ,/ 通过/ 已有/ 信息/ 预测/ 每天/ 的/ 可用性/ 比较/ 困难/ ./ 在/ 欧洲/ ,/ 每个/ 节点/ 平均/ 拥有/ 18/ 个/ IP地址/ ,/ 而/ 在/ 中国/ 每个/ 节点/ 拥有/ 4/ 个/ IP地址/ ./ 80/ %/ 的/ 中国/ 节点/ 只有/ 一个/ IP地址/ ,/ 这/ 缘于/ 它们/ 的/ 生命/ 时长/ 比/ 其他/ 国家/ 的/ 短/ 很多/ ./ 用/ KADID/ 来/ 唯一/ 标识/ 节点/ 并/ 不/ 准确/ ,/ 有些/ 节点/ 的/ ID/ 是/ 变化/ 的/ ,/ 通过/ 监测/ 法国/ ADSL/ 客户端/ 发现/ ,/ 大约/ 20/ %/ 的/ 节点/ 为/ 每个/ 新会话/ 改变/ 他们/ 的/ KADID/ ,/ 有些/ 甚至/ 在/ 一个/ 会话/ 中/ 改变/ 它/ ./ 地理分布/ 上/ ,/ 节点/ 比例/ 最高/ 的/ 大陆/ 为/ 欧洲/ ,/ 节点/ 数量/ 最大/ 的/ 国家/ 为/ 中国/ ,/ 只有/ 少于/ 15/ %/ 的/ 节点/ 在/ 美洲/ (/ 美国/ 、/ 加拿大/ 、/ 南美/ )/ ,/ 任何/ 时候/ 网络/ 中/ 都/ 有/ 接近/ 25/ %/ 的/ 节点/ 来自/ 中国/ ./ Memon/ 等/ 人/ [/ 23/ ]/ 针对/ KAD/ 网络/ 中/ 的/ 消息/ 通信/ 进行/ 监测/ ,/ 在/ 2008/ 年/ 5/ 月/ 到/ 2008/ 年/ 8/ 月间/ 收集/ 了/ 44/ 组高/ 6/ 位/ 相同/ 的/ KAD/ 域/ (/ zone/ )/ 之间/ 的/ 通信/ 消息/ ./ 分析/ 数据/ 后/ 的/ 结果显示/ ,/ 10/ %/ 已/ 发布/ 内容/ ID/ 每分钟/ 的/ 请求/ 速率/ 为/ 0.1/ 条/ 以上/ ,/ 而/ 0.1/ %/ 已/ 发布/ 内容/ ID/ 的/ 请求/ 速率/ 每分钟/ 超过/ 30/ 条/ ./ 而/ 内容/ 发布/ 速率/ 与/ 内容/ 搜索/ 速率/ 的/ 差别/ 非常/ 大/ ,/ 一些/ 关键词/ 的/ 发布/ 速率/ 超过/ 100/ 条/ // min/ ,/ 而/ 相应/ 的/ ,/ 被/ 监测/ 到/ 的/ 搜索/ 请求/ 最高/ 时才/ 低于/ 2/ 条/ // min/ ./ 这/ 一部分/ 原因/ 在于/ 内容/ 发布/ 是/ 系统/ 自动/ 产生/ 而/ 搜索/ 却是/ 用户/ 行为/ ./ 15/ %/ 从没/ 发布/ 过/ 的/ 文件/ 得到/ 搜索/ ,/ 而/ 60/ %/ 已/ 发布/ 的/ 文件/ 却/ 从未/ 被/ 搜索/ ./ 有/ 高达/ 95/ %/ 的/ 已/ 发布/ 的/ 关键词/ 从未/ 被/ 搜索/ ,/ 由此/ 可以/ 看出/ 和/ 文件/ 相关/ 的/ 多个/ 关键词/ 只有/ 很少/ 一部分/ 被/ 真正/ 使用/ ./ 4Churn/ 的/ 抓取/ 和/ 测量方法/ 的/ 研究/ 随着/ 研究/ 人员/ 对/ 测量/ 的/ 深入/ 以及/ 对/ 多种/ 数据/ 抓取/ 和/ 测量方法/ 所/ 得到/ 的/ 数据/ 统计/ 结果/ 的/ 分析/ 比较/ ,/ 人们/ 发现/ ,/ 早期/ 的/ 很多/ 数据/ 抓取/ 和/ 测量方法/ 存在/ 偏差/ ,/ 由此/ 得到/ 的/ 很多/ 数据/ 都/ 不/ 可靠/ 甚至/ 是/ 错误/ 的/ ./ 因此/ ,/ 大概/ 从/ 2006/ 年/ 以后/ ,/ 研究/ 人员/ 越来越/ 关注/ 对/ 数据/ 抓取/ 和/ 网络/ 测量方法/ 进行/ 改进/ 的/ 研究/ ./ 对/ P2P/ 网络/ 测量方法/ 并/ 没有/ 严格/ 的/ 分类/ ,/ Stutzbach/ 等/ 人/ [/ 15/ ]/ 将/ 其/ 分为/ 被动/ 监测/ (/ passivemo/ -/ nitoring/ )/ 和/ 主动/ 监测/ (/ activemonitoring/ )/ 两种/ ./ 而/ 后来/ 他/ 又/ 将/ 其/ 进一步/ 分为/ 被动/ 监测/ 、/ 参与/ (/ partici/ -/ pate/ )/ 、/ 爬测/ (/ crawl/ )/ 、/ 抽样/ (/ sample/ )/ 和/ 中心化/ (/ cen/ -/ tralize/ )/ 等/ [/ 24/ ]/ ./ 本文/ 认为/ 主动/ 监测/ 和/ 被动/ 监测/ 是从/ 数据/ 获取/ 方式/ 的/ 角度/ 去/ 分类/ ./ 参与/ 是/ 指/ 每个/ 参与/ 其中/ 的/ 节点/ 都/ 记录/ 本地/ 自己/ 的/ 统计/ 信息/ ,/ 并/ 据此/ 来/ 进行/ 分析/ 的/ 方法/ ,/ 可以/ 认为/ 是/ 被动/ 监测/ 的/ 一种/ ./ 抽样/ 是从/ 数据/ 筛选/ 的/ 角度/ 来看/ 的/ ,/ 在/ 主动/ 监测/ 和/ 被动/ 监测/ 中/ 都/ 可以/ 结合/ 使用/ ./ 中心化/ 主要/ 是/ 通过/ 获取/ 中心/ 服务器/ 的/ 数据/ 来/ 进行/ 分析/ 的/ 测量方法/ ,/ 在/ 主动/ 监测/ 和/ 被动/ 监测/ 中/ 也/ 都/ 可以/ 使用/ ./ 为此/ ,/ 本文/ 还是/ 将/ 测量方法/ 分为/ 主动/ 监测/ 和/ 被动/ 监测/ 两类/ ,/ 并/ 分别/ 进行/ 详述/ ./ 抽样/ 测量/ 是/ 在/ 网络/ 规模/ 非常/ 庞大/ 时/ 对/ 网络/ 进行/ 测量/ 分析/ 的/ 主流/ 方法/ ,/ 经常/ 用于/ 对非/ 结构化/ P2P/ 网络/ 的/ 测量/ 分析/ ,/ 为此/ 本文/ 也/ 单独/ 拿出/ 一/ 小节/ 来/ 对/ 其/ 进行/ 详述/ ./ 针对/ 目前/ 大规模/ 使用/ 的/ BitTorrent/ 、/ eMule/ 进行/ 动态/ 模拟/ 和/ 测量/ 具有/ 很强/ 的/ 应用/ 价值/ ,/ 本/ 节/ 最后/ 也/ 对/ 其/ 进行/ 简述/ ./ 4.1/ 被动/ 监测/ 被动/ 监测/ 是/ 指/ 在/ P2P/ 网络/ 中/ 选取/ 足够/ 数量/ 的/ 节点/ (/ 最好/ 是/ 位于/ 骨干/ 网络/ 中/ )/ 作为/ 监测/ 节点/ ,/ 记录/ 所有/ 经过/ 该/ 节点/ 的/ 消息/ 流/ 的/ 相关/ 信息/ ./ 4.1/ ./ 1/ 方法/ 评价/ 该/ 方法/ 占用/ CPU/ 比较/ 少/ ,/ 监测/ 过程/ 中/ 基本上/ 不/ 占用/ 通信/ 带宽/ ,/ 因此/ 不会/ 对/ P2P/ 网络/ 的/ 正常/ 运行/ 产生/ 较大/ 的/ 影响/ ./ 被动/ 监测/ 本身/ 的/ 缺陷/ 使得/ 该/ 方法/ 存在/ 较大/ 的/ 不足/ :/ (/ 1/ )/ 监测/ 到/ 的/ 节点/ 数目/ 有限/ ./ 它/ 只能/ 监测/ 那些/ 发送/ 消息/ 且/ 消息/ 恰好/ 经过/ 被/ 监测/ 节点/ 的/ 节点/ ,/ 对于/ 那些/ 存在/ 网络/ 中/ 但/ 很少/ 甚至/ 不/ 发送/ 消息/ 的/ 大量/ 边缘/ 节点/ 是/ 无法/ 监测/ 到/ 的/ ./ 同时/ ,/ 一些/ 边缘/ 节点/ (/ 地理/ 相近/ 的/ 园区/ 节点/ 、/ 社区/ 节点/ )/ 在/ 小/ 范围/ 内/ 聚集/ 成簇/ ,/ 在/ 簇内/ 如果/ 没有/ 监测/ 节点/ ,/ 它们/ 之间/ 的/ 通信/ 也/ 是/ 无法/ 监测/ 到/ 的/ ./ Page6/ (/ 2/ )/ 监测/ 到/ 的/ 信息/ 具有/ 较大/ 的/ 误差/ ./ 假设/ 有/ 一个/ 源/ 节点/ A/ 在/ T0/ 时刻/ 上线/ ,/ 但是/ 由于/ 它/ 不/ 发送/ 消息/ (/ 比如/ Bittorrent/ 中/ 不/ 上传下载/ 任何/ 数据/ 的/ 节点/ )/ 或者/ 在/ 监测/ 系统启动/ 前/ 已经/ 初始化/ 完毕/ ,/ 监测/ 系统/ 发现/ 不了/ 它/ 上线/ ,/ 经过/ 时间/ t1/ 后/ ,/ A/ 在/ T1/ 时刻/ 向/ 网络/ 中/ 发送/ 消息/ ,/ 此时/ 监测/ 系统/ 才/ 发现/ A/ 上线/ ,/ 经过/ t2/ 时间/ 后/ ,/ A/ 在/ T2/ 时刻/ 接收/ 到/ 最后/ 一条/ 消息/ ,/ 此后/ 不再/ 发送/ 和/ 接收/ 任何/ 消息/ ./ 然后/ 在/ T3/ 时刻/ 节点/ A/ 下线/ ./ 节点/ A/ 实际/ 存在/ 于/ 网络/ 的/ 时间/ 为/ T0/ ~/ T3/ ,/ 而/ 监测/ 系统/ 发现/ A/ 的/ 上线/ 时间/ 却/ 为/ T1/ ~/ T2/ ./ 对于/ T0/ ~/ T1/ ,/ T2/ ~/ T3/ 这/ 两个/ 时间段/ A/ 是否/ 存在/ 于/ 网络/ 中/ ,/ 存在/ 多长时间/ ,/ 监测/ 系统/ 是/ 无法/ 获知/ 的/ ./ 这/ 肯定/ 有/ 较大/ 的/ 误差/ ./ (/ 3/ )/ 通过/ 消息/ 流/ 来/ 判定/ 节点/ 可能/ 存在/ 的/ 误差/ ./ 消息/ 流/ 主要/ 通过/ IP地址/ 和/ 端口号/ 来/ 标识/ 一个/ 节点/ ,/ 但是/ 研究/ 表明/ 很多/ 节点/ 的/ IP地址/ 和/ 端口号/ 是/ 动态变化/ 的/ ,/ 对于/ 那些/ 使用/ 动态/ IP地址/ 的/ 用户/ 来说/ ,/ 它们/ 可能/ 被/ 标识/ 为/ 多个/ 节点/ ./ 而/ 有些/ 小/ 局域网/ 可能/ 采用/ 一个/ IP地址/ 和/ 端口号/ 上网/ ,/ 因此/ 可能/ 有/ 多个/ 用户/ 被/ 标识/ 为/ 同一个/ 节点/ ./ 4.1/ ./ 2/ 适用/ 场景/ 虽然/ 被动/ 监测/ 对/ 获取/ 网络/ 的/ 节点/ 数目/ 以及/ 节点/ 上线/ 下线/ 时间/ 存在/ 误差/ ,/ 但是/ 它/ 对/ 网络通信/ 特点/ 的/ 监测/ 却/ 非常/ 管用/ ,/ 特别/ 是/ 集中式/ 和/ 具有/ 超级/ 节点/ 的/ 分布式系统/ 中/ 的/ 网络通信/ 的/ 监测/ ./ Sen/ 等/ 人/ [/ 25/ ]/ 采用/ 被动/ 监测/ 方法/ 来/ 对/ 网络通信/ 进行/ 分析/ ./ 他/ 通过/ 在/ 第一级/ 网络/ 服务提供商/ (/ ISP/ )/ 的/ 骨干网/ 的/ 多个/ 路由器/ 上/ 部署/ 监测点/ ,/ 收集/ 通过/ 这些/ 监测点/ 的/ 所有/ 流/ 信息/ (/ 包括/ 数据流/ 和/ 消息/ 流/ )/ ,/ 并/ 对/ 这些/ 流/ 信息/ 在/ 3/ 个/ 不同/ 的/ 粒度/ 层级/ 上/ 进行/ 分析/ :/ IP地址/ 级/ 、/ 网络/ 前缀/ (/ NetworkPrefix/ )/ 级/ 、/ 自治/ 系统/ AS/ (/ AutonomousSystem/ )/ 级/ ,/ 从而/ 获取/ 网络/ 中/ 消息/ 流/ 的/ 特点/ ./ 文章/ 通过/ 对/ 收集/ 的/ 2001/ 年/ 9/ 月/ 到/ 11/ 月间/ 在/ Gnutella/ 、/ FastTrack/ 、/ DirectConnect/ 网络/ 的/ 通信/ 流/ 分析/ 发现/ ,/ 网络/ 中/ 通信/ 最/ 活跃/ 的/ 时间/ 发生/ 在/ 傍晚/ 和/ 午夜/ ./ 凌晨/ 5/ 点/ 过后/ ,/ 网络通信/ 量/ 随着/ 时间/ 慢慢/ 变/ 少/ ,/ 到/ 下午/ 一二点/ 时/ 达到/ 最低值/ ./ 60/ %/ 的/ IP地址/ ,/ 40/ %/ 的/ 网络/ 前缀/ ,/ 30/ %/ 的/ AS/ 每天/ 在/ 网络/ 中所/ 驻/ 的/ 时间/ 少于/ 10min/ ,/ 超过/ 20/ %/ 的/ 网络连接/ 持续时间/ 只有/ 1min/ 甚至/ 更少/ ./ 65/ %/ 的/ IP地址/ 在/ FastTrack/ 网络/ 中/ 只/ 驻留/ 一次/ ./ 4.1/ ./ 3/ 方法/ 改进/ Memon/ 等/ 人/ [/ 23/ ]/ 针对/ 被动/ 监测/ 的/ 不足/ 进行/ 改进/ ,/ 并用/ 改进/ 后/ 方法/ 对/ KAD/ 网络/ 中/ 的/ 消息/ 通信/ 进行/ 监测/ ./ 针对/ 被动/ 监测/ 中/ 插入/ 少量/ 监测/ 节点/ 不能/ 获取/ 足够/ 详细/ 和/ 全面/ 的/ 通信/ 消息/ ,/ 而/ 插入/ 过多/ 的/ 监测/ 节点/ 又/ 会/ 干扰/ DHT/ 网络/ 的/ 正常/ 运行/ 这一/ 问题/ ,/ Memon/ 等/ 人/ 提出/ 并/ 实现/ 了/ 一种/ 高度/ 并行/ 的/ 、/ 可/ 扩展/ 的/ 被动/ 监测技术/ —/ —/ —/ Montra/ ./ 其/ 关键/ 思想/ 是/ 让/ 监测/ 节点/ 的/ 可见度/ 尽量/ 小/ ,/ 从而/ 减小/ 监测/ 节点/ 对系统/ 的/ 干扰/ ,/ 并/ 降低/ 对/ 监测/ 节点/ 的/ 资源/ 要求/ ./ 它/ 通过/ 如下/ 策略/ 来/ 进行/ :/ (/ 1/ )/ 将/ 监测/ 节点/ Pm/ 的/ ID/ 设置/ 为/ 目标/ 节点/ Pt/ 的/ ID/ 与/ 1/ 的/ 异或/ 值/ ,/ 即/ ID/ (/ Pm/ )/ =/ ID/ (/ Pt/ )/ / 1/ ,/ 从而/ 保证/ Pm/ 为/ Pt/ 距离/ 最近/ 的/ 节点/ ,/ 因此/ 根据/ 消息/ 应/ 发送给/ 距/ 目标/ ID/ 最近/ 的/ 多个/ 节点/ 的/ 原则/ ,/ 发送给/ Pt/ 的/ 消息/ ,/ Pt/ 一定/ 也/ 会/ 发给/ Pm/ ,/ 从而/ 可以/ 监测/ 所有/ 经过/ Pt/ 的/ 消息/ ./ (/ 2/ )/ Montra/ 通过/ 最小化/ 监测/ 节点/ 的/ 可见/ 性来/ 尽量/ 减小/ 监测/ 给/ 网络/ 带来/ 的/ 干扰/ ,/ 它/ 使/ 监测/ 节点/ Pm/ 只/ 对/ 目标/ 节点/ Pt/ 可见/ ,/ 而/ 对/ 其它/ 节点均/ 不/ 可见/ ,/ 并且/ Pm/ 只/ 对/ Pt/ 的/ 消息/ 响应/ ,/ 而/ 对/ 其它/ 消息/ 均/ 忽略/ ,/ 同时/ Pm/ 不/ 保存/ 任何/ 网络/ 内容/ ./ 通过/ 这/ 两个/ 步骤/ ,/ 使得/ Pm/ 可以/ 在/ 网络/ 中/ 大规模/ 部署/ 而/ 不/ 增加/ 网络/ 的/ 负担/ ./ 在/ KAD/ 网络/ 上/ 的/ 运行/ 显示/ ,/ Montra/ 可以/ 同时/ 监测/ 32000/ 个/ KAD/ 节点/ 上/ 的/ 消息/ 通信/ ,/ 而/ 丢/ 包/ 的/ 概率/ 为/ 0.009/ %/ ,/ 它/ 可以/ 抓取/ 90/ %/ 的/ 查询/ 消息/ 并/ 定位/ 90/ %/ 的/ 目标/ 节点/ ./ 4.2/ 主动/ 监测/ 和/ 被动/ 监测/ 不/ 一样/ 的/ 是/ ,/ 主动/ 监测/ 是/ 节点/ 通过/ 探测/ 主动/ 获取/ 邻居/ 节点/ 的/ 信息/ ,/ 然后/ 通过/ 邻居/ 节点/ 获得/ 邻居/ 的/ 邻居/ 节点/ 的/ 信息/ ,/ 如此/ 循环/ ./ 这一/ 过程/ 主要/ 通过/ 在/ 网络/ 中/ 运行/ 一定/ 数目/ 的/ 爬虫/ (/ crawler/ )/ 来/ 主动/ 抓取/ 网络/ 的/ 快照/ 信息/ 获得/ ./ 4.2/ ./ 1/ 方法/ 评价/ 该/ 方法/ 需要/ 占用/ 爬虫/ 所在/ 机器/ 的/ 大量/ CPU/ 时间/ 和/ 存储空间/ 以及/ 非常/ 高/ 的/ 网络带宽/ ./ 同时/ ,/ 主动/ 监测/ 对/ P2P/ 网络/ 的/ 正常/ 运行/ 可能/ 存在/ 干扰/ ,/ 一些/ 正在/ 进行/ 业务/ 处理/ 或/ 数据传输/ 服务/ 的/ 节点/ 由于/ CPU/ 或/ 网络带宽/ 被/ 爬虫/ 程序/ 占用/ 而/ 被迫/ 延迟/ 或/ 中断/ ./ 虽然/ 如此/ ,/ 和/ 被动/ 监测/ 相比/ ,/ 主动/ 监测/ 的/ 优点/ 是/ 非常明显/ 的/ ./ (/ 1/ )/ 监测/ 到/ 的/ 信息/ 具有/ 较/ 高/ 的/ 准确性/ ./ 爬虫/ 程序/ 每隔/ 一个/ 单位/ 时间/ Δ/ 就/ 抓取/ 网络/ 的/ 快照/ 一次/ ,/ 假设/ 节点/ 在/ Tk/ 时刻/ 的/ 快照/ 中/ 没/ 抓取/ 到/ ,/ 在/ 下/ 一个/ 快照/ Tk/ +/ 1/ 时刻/ 抓取/ 到/ 了/ ,/ 则/ 节点/ 的/ 上线/ 时间/ 应/ 介于/ Tk/ ~/ Tk/ +/ 1/ 之间/ ,/ 误差/ 不会/ 超过/ Δ/ ,/ 当/ Δ/ 较/ 小时/ ,/ 它/ 的/ 准确度/ 是/ 比较/ 高/ 的/ ,/ 文献/ [/ 26/ ]/ 说明/ ,/ 抓取/ 整个/ 网络/ 需要/ 3min/ ,/ 而/ 文献/ [/ 20/ ]/ 说明/ 抓取/ 网络/ 中高/ 8/ 位/ 相同/ 的/ Page7zonecrawl/ 只/ 需/ 2.5/ s/ ,/ 当/ 间隔时间/ Δ/ 取/ 这些/ 值时/ ,/ 可以/ 保证/ 主动/ 监测/ 比/ 被动/ 监测/ 具有/ 更/ 高/ 的/ 准确性/ ./ (/ 2/ )/ 能够/ 比/ 被动/ 监测/ 抓取/ 到/ 更/ 多/ 的/ 节点/ ,/ 使/ 网络/ 快照/ 更/ 接近/ 于/ 真实/ 的/ 网络/ ./ 当/ 爬虫/ 程序/ 经过/ 多次/ 迭代/ 后/ ,/ 如果/ 发现/ 此次/ 迭代/ 抓取/ 到/ 的/ 节点/ 绝大多数/ 是/ 已经/ 获得/ 的/ 节点/ 时/ ,/ 根据/ 小/ 世界/ 模型/ 理论/ ,/ 可以/ 认为/ ,/ 我们/ 已经/ 抓取/ 到/ 网络/ 中/ 绝大多数/ 的/ 节点/ ,/ 此时/ 抓取/ 到/ 的/ 网络/ 快照/ 就/ 比较/ 接近/ 真实/ 的/ 网络/ ./ 4.2/ ./ 2/ 方法/ 改进/ 当然/ ,/ 主动/ 监测/ 方法/ 也/ 有/ 很多/ 地方/ 需要/ 改进/ ./ Steiner/ 等/ 人/ [/ 20/ ,/ 27/ ]/ 针对/ 以往/ 主动/ 监测/ 中/ 需要/ 多台/ 主机/ 并行执行/ ,/ 消耗/ 过多/ 时间/ 用于/ 多台/ 主机/ 间/ 的/ 同步/ 问题/ ,/ 提出/ 了/ 一个/ 快速/ 定制/ 爬虫/ —/ —/ —/ Blizzard/ ./ 它/ 将/ 爬虫/ 程序/ 只/ 放在/ 一台/ 电脑/ 上/ ,/ 该/ 爬虫/ 在/ 初始/ 运行/ 时/ ,/ 就/ 已经/ 和/ 数以百计/ 的/ 节点/ 相连/ ,/ 并/ 使用/ 一个/ 简单/ 的/ 宽度/ 优先/ 搜索/ 来/ 迭代/ 询问/ 邻居/ 节点/ ,/ 通过/ 这些/ 已知/ 节点/ 来/ 发现/ 新/ 的/ 节点/ ,/ 对于/ 每个/ 节点/ 应答/ ,/ 都/ 确认/ 并/ 排除/ 已/ 发现/ 的/ 节点/ ./ 相比/ 传统/ 的/ 主动/ 监测/ 方法/ ,/ 由于/ 减少/ 了/ 同步/ 通信/ 问题/ ,/ 该/ 爬虫/ 能够/ 快速/ 高效/ 地/ 抓取/ 网络/ 信息/ ./ 但是/ 该/ 方法/ 对/ 软件/ 、/ 硬件/ 以及/ 环境/ 都/ 提出/ 了/ 更/ 多/ 的/ 要求/ ,/ 初始/ 时/ 就/ 必须/ 和/ 数以百计/ 的/ 节点/ 相连/ ,/ 使/ 节点/ 必须/ 处于/ 网络/ 的/ 骨干/ 位置/ ,/ 由于/ 要/ 在/ 非常/ 短/ 的/ 时间/ 内/ 和/ 数以/ 百万/ 规模/ 的/ 网络/ 节点/ 通信/ ,/ 对/ 机器/ 的/ 处理速度/ 、/ 存储空间/ 以及/ 网络带宽/ 都/ 提出/ 了/ 非常/ 高/ 的/ 要求/ ./ 通过/ 在/ 法国/ 和/ 德国/ 分别/ 部署/ 该/ 爬虫/ 来/ 对/ eDonkey/ 中/ 的/ KAD/ 网络/ 进行/ 监测/ ,/ 从/ 2006/ 年/ 9/ 月/ 23/ 日到/ 2007/ 年/ 3/ 月/ 20/ 日/ 进行/ 高/ 8/ 位/ 相同/ 的/ zonecrawl/ ,/ 表明/ 每/ 2.5/ s/ 就/ 可以/ 获得/ 一次/ 快照/ ,/ 具有/ 较/ 高/ 的/ 速度/ ./ 从/ 2007/ 年/ 3/ 月/ 20/ 日到/ 2008/ 年/ 5/ 月/ 25/ 日/ 进行/ 的/ fullcrawl/ 表明/ ,/ 获取/ 整个/ 网络/ 的/ 快照/ 需要/ 8min/ ,/ 每次/ crawl/ 可/ 获得/ 3/ 百万/ 到/ 4.3/ 百万/ 个/ 节点/ ,/ 其中/ 前/ 两百万/ 个/ 节点/ 只/ 需/ 1min/ ,/ 同样/ 具有/ 较/ 快/ 的/ 速度/ ./ 周模/ 等/ 人/ [/ 28/ ]/ 根据/ KAD/ 网络/ 的/ 特点/ ,/ 设计/ 并/ 实现/ 了/ 一个/ 可/ 扩展/ 爬虫/ ,/ 该/ 爬虫/ 使用/ 宽度/ 优先/ 搜索/ 和/ 查询/ 迭代/ 交互进行/ ./ 在/ 爬虫/ 工作/ 时/ ,/ 有/ 一个/ 已知/ 节点/ 集/ Nknow/ 和/ 结果/ 节点/ 集/ Nresult/ (/ 初始/ 时/ Nresult/ 为空/ )/ ,/ 对/ Nknow/ 中/ 的/ 每/ 一个/ 节点/ IDknow/ ,/ 爬虫/ 都/ 通过/ 公式/ IDi/ =/ IDknow/ / 2127/ -/ i/ (/ 0/ / i/ / 127/ )/ 来/ 计算/ 出/ 需要/ 在/ IDknow/ 中/ 查询/ 的/ 节点/ ID/ ,/ 并/ 向/ 节点/ IDknow/ 发出/ 查询/ 该/ ID/ 的/ 请求/ ,/ 节点/ IDknow/ 收到/ 请求/ 后/ 就/ 会/ 查找/ 它/ 的/ 路由表/ 第/ i/ 个/ 链表/ 中/ 所有/ 离/ IDi/ 最近/ 的/ 节点/ 列表/ ,/ 并/ 将/ 其/ 返回/ 给/ 爬虫/ 节点/ ./ 爬虫/ 收到/ 这些/ 节点/ 列表/ 后/ ,/ 对/ 每个/ 节点/ 首先/ 查看/ 它/ 是否/ 已/ 在/ 结果/ 节点/ 集/ Nknow/ 中/ ,/ 如果/ 存在/ 就/ 放弃/ 该/ 节点/ ,/ 否则/ 就/ 将/ 其/ 加入/ 到/ Nresult/ 中/ ./ 在/ 爬虫/ 向/ IDknow/ 发送/ 查询/ 请求/ 后/ ,/ 可以/ 接着/ 向下/ 一个/ 节点/ 通过/ 上面/ 的/ 步骤/ 计算/ 出新/ 的/ 节点/ ID/ 然后/ 向/ 该/ 节点/ 发出/ 查询/ 请求/ ,/ 当对/ Nknow/ 中/ 的/ 节点/ 都/ 发送/ 了/ 查询/ 路由表/ 中/ 第/ i/ 个/ 链表/ 的/ 请求/ 后/ ,/ 第/ i/ 次/ 查询/ 结束/ ./ 然后/ ,/ 爬虫/ 重复/ 上述/ 步骤/ 对/ Nknow/ 中/ 的/ 每个/ 节点/ 发出/ 查询/ 路由表/ 中/ 第/ i/ +/ 1/ 个/ 链表/ 的/ 请求/ ./ 直到/ i/ 为/ 127/ 结束/ ,/ 则/ 该轮/ 爬虫/ 迭代/ 结束/ ,/ 然后/ 将/ 结果/ 节点/ 集/ Nresult/ 作为/ 新/ 的/ 已知/ 节点/ 集/ Nknow/ 进行/ 新一轮/ 迭代/ ./ 为/ 获得/ 一个/ 高效/ 的/ 可/ 扩展/ 爬虫/ ,/ 文章/ 提出/ 3/ 个/ 策略/ 来/ 提高效率/ :/ (/ 1/ )/ 减少/ 每次/ 迭代/ 的/ 轮数/ ;/ (/ 2/ )/ 增加/ 每/ 一轮/ 所/ 获得/ 的/ 节点/ 数目/ ;/ (/ 3/ )/ 提高/ 请求/ 的/ 发送/ 频率/ ./ 文章/ 通过/ 对/ 实验/ 数据/ 的/ 分析/ ,/ 得到/ 在/ 一次/ 迭代/ 中/ 哪/ 几轮/ 的/ 查询/ 能够/ 获得/ 非常/ 多/ 的/ 不同/ 节点/ ,/ 而/ 哪/ 几轮/ 所/ 获得/ 的/ 节点/ 数目/ 不多且/ 与/ 前面/ 的/ 重复/ ,/ 从而/ 决定/ 哪些/ 轮/ 非常/ 重要/ ,/ 哪些/ 可以/ 剔除/ ,/ 进而/ 减少/ 每次/ 迭代/ 的/ 轮数/ ./ 而/ 留下来/ 的/ 那些/ 轮/ ,/ 由于/ 具有/ 非常/ 多/ 的/ 不同/ 节点/ ,/ 等价/ 于/ 增加/ 了/ 每/ 一轮/ 所/ 获得/ 的/ 节点/ 数目/ ./ 从而/ 据此/ 来/ 提高/ 爬虫/ 的/ 效率/ ./ Wang/ 等/ 人/ [/ 26/ ]/ 针对/ 以往/ 采用/ 主动/ 监测/ 测量/ 节点/ 会话/ 时长/ 不/ 准确/ 的/ 问题/ ,/ 提出/ 自己/ 的/ 测量方法/ ./ 以往/ 的/ 测量方法/ 中/ ,/ 当/ 抓取/ 快照/ 的/ 时间/ 间隔/ Δ/ 比较/ 小时/ ,/ 会/ 加重/ 网络/ 的/ 负担/ ,/ 影响/ P2P/ 网络/ 的/ 正常/ 运行/ ;/ 当/ Δ/ 较大/ 时/ ,/ 就/ 会/ 有/ 获取/ 节点/ 会话/ 时长/ 不/ 准确/ 问题/ ./ 对此/ ,/ Wang/ 等/ 人/ 提出/ 基于/ 剩余/ 时长/ 的/ 测量方法/ (/ Residual/ -/ BasedMeasurement/ )/ ,/ 它/ 首先/ 在/ T0/ 时刻/ 首次/ 获取/ 网络/ 快照/ 的/ 时候/ 抓取/ 到/ 数目/ 足够/ 多/ 的/ 初始/ 节点/ 集/ S0/ ,/ 然后/ 从/ S0/ 中/ 随机/ 选取/ ε/ %/ 的/ 节点/ 作为/ 跟踪/ 节点/ 集/ S1/ ,/ 随时/ 跟踪/ S1/ 中/ 每个/ 节点/ 的/ 状态/ ,/ 直到/ 节点/ 下线/ 或者/ 达到/ 实验/ 时间/ T/ 结束/ ./ 文章/ 通过/ 一系列/ 的/ 理论/ 计算/ 来/ 证明/ 其/ 方法/ 足够/ 好/ ,/ 但是/ 如何/ 精确/ 获取/ 节点/ 的/ 下线/ 时间/ 却/ 并未/ 交待/ ./ 同时/ ,/ 文章/ 给出/ 的/ 跟踪/ 节点/ 集/ 具有/ 较强/ 的/ 时间/ 依赖性/ ,/ 只能/ 是/ 在/ 首次/ 抓取/ 时/ 恰好/ 上线/ 并/ 被/ 抓取/ 到/ ,/ 才/ 可能/ 成为/ 跟踪/ 节点/ 集/ 的/ 一员/ ,/ 其它/ 时刻/ 上线/ 的/ 节点/ 无法/ 被/ 跟踪/ ,/ 因此/ 对/ 监测/ 短会话/ 时长/ 节点/ 是/ 不利/ 的/ ./ 文章/ 最后/ 采用/ 该/ 测量方法/ 实现/ 了/ 一个/ 针对/ Gnutella/ 网络/ 的/ 爬虫/ —/ —/ —/ GnuSpider/ ,/ 该/ 爬虫/ 只/ 需/ 3min/ 就/ 能/ 覆盖/ 整个/ 网络/ ,/ 发现/ 近/ 6.4/ 百万/ 个/ 用户/ ,/ 90/ %/ 的/ 超级/ 节点/ 和/ 叶/ 节点/ 都/ 能/ 在/ 100s/ 内/ 发现/ ./ 文章/ 使用/ 第一次/ 抓取/ 到/ 的/ 其中/ 46.8/ 万个/ 应答/ 超级/ 节点/ 为/ S0/ ,/ 取/ ε/ =/ 21.3/ ,/ 即/ S1/ =/ S0/ ε/ %/ =/ 10/ 万/ 进行/ 持续/ 的/ 72h/ 跟踪/ 以/ 获得/ 其会话/ 时长/ ,/ 其会话/ 时长/ 的/ 误差/ 控制/ 在/ 3min/ ,/ 即/ 一次/ crawlPage8/ 过程/ ,/ 具有/ 较/ 高/ 的/ 精度/ ./ 4.3/ 抽样/ 测量/ 和/ 被动/ 监测/ 、/ 主动/ 监测/ 不/ 一样/ ,/ 抽样/ 测量/ 是从/ 另/ 一个/ 的/ 角度/ 来看/ 的/ 一种/ 网络/ 测量方法/ ,/ 该/ 方法/ 可以/ 和/ 被动/ 监测/ 、/ 主动/ 监测/ 结合/ 起来/ 使用/ ./ 它/ 是/ 在/ 实际/ 网络/ 中/ 公平/ 随机/ 均匀/ 地/ 选择/ 一些/ 节点/ ,/ 将/ 这些/ 节点/ 组成/ 的/ 抽样/ 网络/ 取代/ 真实/ 的/ 网络/ 来/ 进行/ 研究/ ./ 由于/ 真实/ 的/ 网络/ 具有/ 规模/ 巨大/ 和/ 高度/ 动态/ 的/ 特点/ ,/ 直接/ 测量/ 往往/ 比较/ 困难/ ,/ 并且/ 代价/ 比较/ 高昂/ ,/ 抽样/ 测量/ 就/ 成为/ 一种/ 可选/ 的/ 方案/ ./ 4.3/ ./ 1/ 方法/ 评价/ 和/ 真实/ 的/ 网络/ 测量/ 相比/ ,/ 抽样/ 测量/ 大幅度/ 减少/ 了/ 网络/ 规模/ ,/ 降低/ 了/ 网络/ 的/ 复杂度/ ,/ 减小/ 了/ 测量/ 的/ 代价/ ./ 但是/ ,/ 它/ 毕竟/ 不是/ 真实/ 的/ P2P/ 网络/ ,/ 因此/ 会/ 使得/ 网络/ 的/ 某些/ 特性/ 不/ 明显/ 甚至/ 失去/ 网络/ 的/ 某些/ 特性/ ./ 因此/ ,/ 如何/ 保持/ 真实/ 网络/ 的/ 特性/ ,/ 同时/ 在/ 抽样/ 时/ 如何/ 选取/ 代表/ 节点/ ,/ 是/ 抽样/ 测量/ 需要/ 特别/ 注意/ 的/ 两个/ 问题/ ./ 该/ 方法/ 在/ 以下/ 方面/ 存在/ 不足/ :/ (/ 1/ )/ 目前/ 的/ 抽样/ 测量/ 一般/ 是/ 基于/ 静态/ 图来/ 进行/ 的/ ,/ 而/ P2P/ 网络/ 是/ 高度/ 动态/ 的/ ./ 某/ 时刻/ 的/ 抽样/ 在/ 下/ 一/ 时刻/ 可能/ 就/ 会/ 产生/ 变化/ ./ 虽然/ 可以/ 通过/ 动态/ 跟踪/ 代表/ 节点/ 来/ 解决/ 动态性/ 问题/ ,/ 但是/ 由于/ 节点/ 离开/ ,/ 失效/ 等/ 行为/ 时有发生/ ,/ a/ 时刻/ 具有/ 代表性/ 的/ 节点/ 在/ b/ 时刻/ 可能/ 就/ 不/ 具有/ 代表性/ ./ 随着/ 时间/ 的/ 推移/ ,/ 代表/ 节点/ 越来越少/ ,/ 抽样/ 网络/ 越来越/ 不能/ 代表/ 真实/ 的/ 网络/ ./ (/ 2/ )/ 代表/ 节点/ 的/ 选择/ 往往/ 会/ 产生/ 偏差/ ./ 在/ P2P/ 网络/ 特别/ 是非/ 结构化/ P2P/ 网络/ 中/ ,/ 处于/ 中心/ 位置/ 的/ 节点/ 往往/ 是/ 那些/ 节点/ 度大/ 、/ 在线/ 时间/ 长/ 、/ 服务/ 能力/ 好/ 的/ 服务器/ 节点/ ,/ 这些/ 节点/ 只/ 占/ P2P/ 网络/ 中/ 的/ 很少/ 一部分/ ./ 绝大部分/ 终端/ 节点/ 处于/ 网络/ 边缘/ ,/ 这些/ 节点/ 在线/ 时间/ 短/ 、/ 节点/ 度/ 很小/ ./ 在/ 抽样/ 时/ ,/ 由于/ 中心/ 节点/ 24h/ 在线/ ,/ 什么/ 时候/ 抽样/ 都/ 可能/ 被/ 抽到/ ,/ 而/ 终端/ 节点/ 往往/ 上线/ 时间/ 短/ ,/ 错过/ 了/ 抽样/ 时间/ 就/ 不/ 可能/ 被/ 选中/ ./ 同时/ ,/ 节点/ 度大/ 的/ 中心/ 节点/ 被/ 选中/ 的/ 概率/ 也/ 比较/ 多/ ,/ 而/ 终端/ 节点/ 由于/ 节点/ 度/ 很小/ ,/ 抽样/ 时/ 走/ 到/ 该/ 节点/ 可能性/ 也/ 比较/ 低/ ,/ 因此/ 往往/ 不/ 容易/ 被/ 选中/ ./ 4.3/ ./ 2/ 方法/ 改进/ Stutzbach/ 等/ 人/ [/ 29/ ]/ 针对/ 非/ 结构化/ P2P/ 网络/ 动态/ 和/ 异构/ 对/ 抽样/ 测量/ 带来/ 的/ 偏差/ ,/ 提出/ 可/ 回退/ 受控/ 随机/ 走/ (/ MetropolizedRandomWalkwithBacktrack/ -/ ing/ ,/ MRWB/ )/ 的/ 策略/ 来/ 进行/ 抽样/ 节点/ 的/ 选择/ ./ 文章/ 主要/ 解决/ 两个/ 问题/ :/ 如何/ 处理/ 网络/ 动态性/ ;/ 在/ 选择/ 下/ 一个/ 节点/ 作为/ 抽样/ 节点/ 时/ ,/ 如何/ 体现/ 公平/ 随机/ 无偏性/ ./ 对于/ 处理/ 动态性/ 的/ 问题/ ,/ 文中/ 采用/ 如下/ 方法/ :/ (/ 1/ )/ 对/ 网络图/ 加入/ 时间/ 目录/ :/ Gt/ =/ 〈/ Vt/ ,/ Et/ 〉/ (/ Gt/ 为/ t/ 时刻/ 的/ 网络图/ ,/ Vt/ 为/ t/ 时刻/ 的/ 节点/ 集/ ,/ Et/ 为/ t/ 时刻/ 的/ 边集/ )/ ;/ 和/ vi/ ,/ t/ 可以/ 被/ 重复/ 选中/ ;/ (/ 2/ )/ 定义/ 时间/ 窗口/ :/ [/ t0/ ,/ t0/ +/ Δ/ ]/ ;/ (/ 3/ )/ 该/ 时间段/ 出现/ 的/ 节点/ 数为/ Vt0/ ,/ t0/ +/ Δ/ =/ ∪/ (/ 4/ )/ 节点/ 在/ 不同/ 时刻/ 具有/ 不同/ 的/ 性质/ ,/ 因此/ vi/ ,/ t/ (/ 5/ )/ 当/ 测量/ 窗口/ Δ/ 足够/ 小时/ ,/ 可以/ 认为/ 网络/ 以及/ 节点/ 的/ 性质/ 改变/ 较/ 小/ ./ 由此/ 可以/ 把/ 这/ 时间段/ 中/ 的/ 网络图/ 看成/ 静态/ 图来/ 处理/ ./ 通过/ 上面/ 的/ 5/ 步/ ,/ 就/ 可以/ 将/ 动态/ 的/ 网络图/ 以/ 时间/ 为/ 轴/ 切成/ 一个个/ 静态/ 图来/ 分别/ 进行/ 抽样/ 处理/ ,/ 从而/ 简化/ 了/ 问题/ 的/ 复杂性/ ./ 在/ 静态/ 图中/ ,/ 抽样/ 节点/ x/ 在/ 选择/ 它/ 的/ 某/ 一/ 邻居/ 作为/ 下/ 一个/ 抽样/ 节点/ 时/ ,/ 按照/ 下面/ 的/ 策略/ 进行/ ,/ 首先/ 平均/ 随机/ 地/ 选择/ x/ 的/ 邻居/ y/ ,/ 询问/ y/ 的/ 节点/ 度/ 从而/ 计算/ 出/ p0/ =/ degree/ (/ x/ )/ // degree/ (/ y/ )/ ,/ 然后/ 生成/ 一个/ 概率/ 随机数/ p/ (/ 0/ / p/ / 1/ )/ ,/ 如果/ p0/ >/ p/ ,/ 则/ y/ 被/ 选中/ 作为/ x/ 的/ 下/ 一/ 跳/ ,/ 否则/ 停留/ 在/ x/ 作为/ 下/ 一步/ ./ 当/ y/ 的/ 节点/ 度/ 比较/ 大时/ ,/ p0/ 就/ 比较/ 小/ ,/ y/ 被/ 选中/ 的/ 概率/ 也/ 比较/ 小/ ;/ 但是/ ,/ 由于/ y/ 的/ 节点/ 度/ 比较/ 大/ ,/ 当/ 抽样/ 走到/ y/ 的/ 任何/ 一个/ 邻居/ 时/ ,/ y/ 都/ 有/ 可能/ 被/ 作为/ 下/ 一个/ 抽样/ 节点/ 而/ 被/ 选中/ ,/ 因此/ ,/ 节点/ 度大/ 的/ 节点/ 可能/ 被/ 抽到/ 的/ 次数/ 就/ 增多/ ,/ 从而/ 弥补/ 每次/ 抽样/ 时/ 被/ 选中/ 的/ 概率/ 低/ 的/ 问题/ ./ 该/ 策略/ 从/ 一定/ 程度/ 上/ 抑制/ 了/ 以往/ 抽样/ 偏向/ 节点/ 度大/ 的/ 节点/ 而/ 导致/ 的/ 偏差/ ,/ 在/ 一定/ 程度/ 上/ 实现/ 了/ 公平/ 无偏性/ ./ 但是/ ,/ 对于/ 时间/ 因素/ 带来/ 的/ 偏差/ ,/ 文章/ 并/ 没有/ 考虑/ ./ 文章/ 通过/ 从/ 节点/ 度/ 抽样/ 、/ 会话/ 时长/ 抽样/ 、/ 查询/ 延迟/ 抽样/ 等/ 方面/ 考虑/ 针对/ 不同/ 会话/ 时长/ 分布/ (/ 指数分布/ 、/ Pareto/ 分布/ 、/ Weibull/ 分布/ )/ 的/ 系统/ 进行/ 模拟实验/ ,/ 看/ 在/ 什么/ 程度/ 的/ 抖动/ 情况/ 下该/ 方法/ 比较/ 准确/ ,/ 在/ 什么/ 程度/ 下该/ 方法/ 不/ 准确/ ./ 结果表明/ ,/ 当/ 平均/ 会话/ 时长/ 小于/ 2min/ 时/ ,/ 该/ 方法/ 和/ 希望/ 结果/ 存在/ 明显/ 差异/ ,/ 而/ 对会话/ 时长/ 服从/ 什么/ 分布/ 区别/ 不大/ ./ 通过/ 跳数/ 为/ 10000/ 步/ 的/ 模拟/ 表明/ ,/ 该/ 策略/ 的/ 精确度/ 不受/ 多/ 步数/ 的/ 影响/ ./ 模拟/ 还/ 显示/ ,/ 当/ 网络/ 最小/ 节点/ 度/ 超过/ 3/ 时/ ,/ 该/ 抽样/ 方法/ 不会/ 产生/ 明显/ 偏差/ ./ 文章/ 最后/ 采用/ 该/ 方法/ 实现/ 了/ 一个/ 网络/ 抽样/ 工具/ —/ —/ —/ ion/ -/ sampler/ ./ 并/ 从/ 节点/ 度/ 和/ 模拟/ 跳数/ 方面/ 进行/ 观察/ 分析/ ,/ 结果显示/ 相对/ 其他/ 抽样/ 方法/ ,/ 该/ 方法/ 具有/ 较/ 高/ 的/ 精确度/ ;/ 相对/ 于/ fullcrawl/ ,/ 该/ 抽样/ 方法/ 具有/ 更/ 短/ 的/ 抽样/ 延时/ ,/ 而/ fullcrawl/ 随着/ 规模/ 的/ 增大/ 其/ crawl/ 延时/ 呈/ 线性/ 增长/ ,/ 不/ Page9/ 具备/ 良好/ 的/ 可扩展性/ ./ Rasti/ 等/ 人/ [/ 30/ ]/ 根据/ 上面/ 的/ 结果/ 更进一步/ 提出/ 了/ 一种/ 应答/ 驱动/ 的/ 抽样/ RDS/ (/ Respondent/ -/ DrivenSampling/ )/ ./ 它/ 主要/ 应用/ 于/ 为了/ 获取/ 网络/ 中/ 具有/ 某种/ 性质/ 的/ 节点/ 所/ 占/ 的/ 百分比/ 所/ 做/ 的/ 抽样/ ./ 该/ 抽样/ 过程/ 按照/ 如下/ 的/ 方法/ 进行/ :/ (/ 1/ )/ 根据/ 节点/ 的/ 某个/ 属性/ X/ (/ 假设/ 可取/ m/ 个值/ )/ (/ 2/ )/ 将/ 节点/ 集/ 也/ 进行/ 相应/ 的/ 划分/ {/ V1/ ,/ …/ ,/ Vm/ }/ ,/ (/ 3/ )/ 用于/ 评估/ 组/ i/ 中/ 节点/ 占/ 整个/ 节点/ 数/ 的/ 比例/ (/ 4/ )/ 所有/ 被/ 访问/ 的/ 节点/ 集合/ 为/ T/ =/ {/ t1/ ,/ t2/ ,/ …/ ,/ (/ 5/ )/ Ti/ =/ T/ ∩/ Vi/ 表示/ 在/ 组/ i/ 中/ 被/ 访问/ 的/ 节点/ 集/ ;/ (/ 6/ )/ pi/ 表示/ 评估/ 组/ i/ 中/ 的/ 节点/ 的/ 比例/ :/ 则/ 抽样/ 值/ 将/ 网络/ 划分/ 成/ {/ R1/ ,/ …/ ,/ Rm/ }/ ;/ 其中/ Vi/ =/ {/ v/ ∈/ V/ |/ X/ (/ v/ )/ ∈/ Ri/ }/ ;/ 为/ pi/ ;/ tn/ }/ ;/ 该/ 抽样/ 将/ 网络/ 按/ 某/ 一/ 特性/ 进行/ 划分/ 的/ 方法/ 为/ 我们/ 监测/ 网络/ 某种/ 特性/ 提供/ 了/ 新/ 的/ 思路/ ./ 要/ 想/ 获得/ 网络/ 的/ 完整/ 全面/ 的/ 特征/ ,/ 该/ 方法/ 并/ 不/ 适合/ ./ 同时/ ,/ 该文/ 存在/ 如下/ 不足/ :/ (/ 1/ )/ 当/ 我们/ 观察/ 的/ 是/ 网络/ 的/ 某/ 一/ 动态/ 性质/ 时/ ,/ 它会/ 随着/ 时间/ 而/ 改变/ ,/ 因此/ 不好/ 定/ 在/ 哪个/ 划分/ 中/ ,/ 比如/ 要/ 监测/ 网络/ 中/ CPU/ 使用率/ 为/ 60/ %/ 以上/ 的/ 节点/ 数目/ 有/ 多少/ ?/ 此时/ 每台/ 主机/ 的/ CPU/ 使用率/ 是/ 动态变化/ 的/ ,/ 在/ 某个/ 时刻/ 可能/ 高于/ 60/ %/ ,/ 而/ 在/ 另外/ 的/ 时刻/ 又/ 可能/ 低于/ 60/ %/ ,/ 从而/ 不好/ 确定/ 节点/ 属于/ 哪/ 一类/ ./ (/ 2/ )/ 该/ 方法/ 中/ 回避/ 了/ 抽样/ 节点/ 如何/ 选择/ S/ (/ ^/ I/ )/ =/ ∑/ v/ ∈/ Ti/ ^/ pi/ =/ S/ (/ ^/ IVi/ )/ 一致/ 的/ ./ 文章/ 随后/ 针对/ 此/ 方法/ 进行/ 了/ 模拟实验/ ,/ 结果表明/ 在/ 静态/ 图/ 情况/ 下/ ,/ RDS/ 方法/ 无论/ 在/ 网络/ 抽样/ 的/ 精确度/ 方面/ ,/ 还是/ 在/ 精确度/ 随/ 网络/ 规模/ 的/ 线性/ 增加/ 方面/ ,/ 都/ 比/ MRWB/ 方法/ 要/ 好/ ./ 对于/ 动态图/ ,/ 当/ 平均/ 会话/ 时长/ 小于/ 5min/ 时/ ,/ 节点/ 频繁/ 加入/ 和/ 退出/ 导致/ 该/ 方法/ 产生/ 明显/ 偏差/ ,/ 但是/ 实际/ 网络/ 中/ 的/ 平均/ 会话/ 时长/ 往往/ 大于/ 5min/ ;/ 同时/ ,/ 该/ 方法/ 也/ 受/ 网络/ 最小/ 节点/ 度/ 的/ 影响/ ,/ 当/ 最小/ 节点/ 度/ 不/ 小于/ 5/ 时/ ,/ 该/ 方法/ 的/ 抽样/ 精确度/ 比较/ 高/ ,/ 而/ 当/ 最小/ 节点/ 度/ 小于/ 5/ 时/ ,/ 由于/ churn/ 可能/ 产生/ 部分/ 网络图/ 不可/ 访问/ 而/ 产生/ 较大/ 偏差/ ./ 文章/ 最后/ 也/ 将/ 此/ 方法/ 融合/ 在/ ion/ -/ sampler/ 中/ ,/ 并/ 采用/ ion/ -/ sampler/ 的/ 两种/ 不同/ 方法/ 对/ Gnutella/ 网络/ 进行/ 抽样/ 测量/ ,/ 结果显示/ 这/ 两种/ 方法/ 都/ 具有/ 很/ 高/ 的/ 精确度/ ./ 的/ 问题/ ,/ 只是/ 简单/ 说明/ 是/ 用/ 随机/ 走/ 的/ 方法/ 选取/ 节点/ ,/ 而/ 随机/ 走/ 方法/ 中/ 节点/ 的/ 选取/ 也/ 有/ 很多/ 且/ 精确度/ 各不相同/ ./ 4.4/ 对/ 大规模/ 网络/ 的/ 模拟/ 测量/ 研究/ 由于/ 真实/ P2P/ 系统/ 如/ BitTorrent/ 、/ eMule/ 等/ 规模/ 非常/ 庞大/ 、/ 动态性/ 强/ 等/ 特点/ ,/ 很难/ 对/ 其/ 进行/ 评估/ 和/ 预测/ ,/ 这/ 给/ ISP/ 及/ 政府/ 带来/ 了/ 许多/ 麻烦/ ./ 对/ 这些/ 系统模拟/ 出/ 尽量/ 真实/ 的/ 环境/ ,/ 然后/ 对/ 其/ 动态/ 行为/ 进行/ 预测/ ./ 对/ 引导/ BitTorrent/ 、/ eMule/ 的/ 行为/ 发展/ 具有/ 重要/ 的/ 参考价值/ ./ 郑纬民/ 等/ 人/ [/ 2/ ]/ 为此/ 设计/ 并/ 实现/ 了/ 一个/ 运行/ 于/ 服务器/ 集群/ 环境/ 中/ 的/ 预测/ P2P/ 行为/ 的/ 并行/ 模拟器/ AegeanSim/ ./ 该/ 模拟器/ 的/ 主要/ 思想/ 包括/ :/ 模拟器/ 的/ 基本/ 单元/ 称为/ 逻辑/ 过程/ (/ LogicalProcess/ )/ ,/ 它/ 是/ 可/ 执行/ 的/ 数据结构/ 而/ 非/ 线程/ 或/ 进程/ ,/ 用来/ 模拟/ 真实/ 环境/ 中/ 的/ 一个/ 实体/ 节点/ ,/ 每台/ 模拟/ 机器/ 上/ 有/ 成千上万/ 个/ 逻辑/ 过程/ ,/ 而/ 模拟/ 机器/ 之间/ 通过/ 消息/ 传送/ 接口/ MPI/ (/ MessagePassingInterface/ )/ 来/ 实现/ 模拟/ 的/ 并行/ 和/ 协同/ ./ 为/ 解决/ 同步/ 问题/ ,/ AegeanSim/ 定义/ 一个/ 带/ 时间/ 戳/ 的/ 安全/ 窗口/ ,/ 并/ 严格控制/ 其/ 下限/ 和/ 上限/ ./ 同时/ 通过/ 分组/ 策略/ 和/ 简化/ 接口/ 来/ 尽量/ 模拟/ 真实/ 的/ P2P/ 系统/ 及/ 提高/ 模拟/ 效率/ ./ 文章/ 通过/ 模拟/ 真实/ 的/ BitTorrent/ 系统/ 并/ 和/ BT/ 研究/ 进行/ 比较/ ,/ 来/ 验证/ 模拟器/ 的/ 正确性/ ./ 文章/ 最后/ 采用/ 该/ 模拟器/ 对/ tracker/ 断开/ 时间/ 对/ 文件共享/ 率/ 的/ 影响/ 以及/ 限制/ 带宽/ 对/ BT/ 的/ 影响/ 来/ 进行/ 模拟/ ,/ 从而/ 为/ ISP/ 控制/ BT/ 提供/ 建议/ ./ 5Churn/ 的/ 应对/ 策略/ 研究/ 从/ 发现/ churn/ 会/ 对/ P2P/ 网络/ 的/ 正常/ 运行/ 产生/ 各/ 方面/ 的/ 影响/ 开始/ ,/ 研究/ 人员/ 就/ 致力于/ 提出/ 各种/ 应对/ 策略/ 来/ 尽量/ 减小/ 这些/ 影响/ ./ 这是/ 2004/ 年/ 以来/ 人们/ 对/ churn/ 研究/ 的/ 另/ 一个/ 重要/ 研究/ 点/ ./ Churn/ 的/ 影响/ 涉及/ 到/ P2P/ 网络/ 的/ 各个方面/ ,/ 应对/ churn/ 的/ 策略/ 也/ 多种多样/ ,/ 本节/ 从/ 邻居/ 选择/ 策略/ 、/ 失效恢复/ 策略/ 、/ 副本/ 维护/ 策略/ 、/ 连接/ 生命周期/ 维护/ 策略/ 等/ 方面/ 分别/ 对/ 其/ 进行/ 阐述/ ./ 5.1/ 邻居/ 选择/ 策略/ 邻居/ 选择/ 策略/ 是/ 解决/ 在/ 节点/ 加入/ 网络/ 时/ 如何/ 选择/ 邻居/ 来/ 初始化/ 自己/ 路由表/ 的/ 策略/ ./ 邻居/ 选择/ 策略/ 不同/ ,/ 应对/ churn/ 的/ 效果/ 就/ 不/ 一样/ ./ 如果/ 选择/ 的/ 是/ 会/ 话/ 时长/ 非常/ 长/ 的/ 节点/ ,/ 那么/ churn/ 对/ 它/ 的/ 影响/ 将/ 比较/ 小/ ./ Rhea/ 等/ 人/ [/ 8/ ]/ 针对/ 非/ 结构化/ P2P/ 网络/ 提出/ 并分/ Page10uu/ 析/ 了/ 一些/ 邻居/ 选择/ 策略/ :/ (/ 1/ )/ 全局/ 抽样/ :/ 随机/ 抽取/ 前缀/ 为/ p/ 的/ 节点/ 作为/ 节点/ 的/ 邻居/ ;/ (/ 2/ )/ 邻居/ 的/ 邻居/ (/ Neighbors/ ’/ Neighbors/ ,/ NN/ )/ :/ 选择/ 邻居/ 的/ 邻居/ 作为/ 自己/ 的/ 邻居/ ;/ (/ 3/ )/ 邻居/ 的/ 反转/ 邻居/ (/ Neighbors/ ’/ InverseNeighbors/ ,/ NIN/ )/ :/ 选择/ 那些/ 与/ 自己/ 有/ 相同/ 邻居/ 的/ 节点/ 作为/ 邻居/ ;/ (/ 4/ )/ 递归/ 抽样/ (/ RecursiveSampling/ )/ :/ 针对/ 邻居/ 的/ 邻居/ 和/ 邻居/ 的/ 反转/ 邻居/ 各自/ 采用/ 递归/ ./ 文章/ 分别/ 对/ 这些/ 策略/ 进行/ 实验/ ,/ 结果表明/ ,/ 全局/ 抽样/ 的/ 邻居/ 选择/ 策略/ 出人意料/ 的/ 好/ ,/ NN/ 和/ NIN/ 并非/ 想象/ 中/ 的/ 那么/ 好/ ,/ 只有/ 加上/ 递归/ 后/ 的/ NN/ 和/ NIN/ 才/ 达到/ 全局/ 抽样/ 的/ 效果/ ./ Yao/ 等/ 人/ [/ 22/ ]/ 针对/ 非/ 结构化/ P2P/ 网络/ 提出/ 一种/ 基于/ 年龄/ 的/ 随机/ 邻居/ 选择/ 策略/ ./ 文章/ 假设/ 节点/ 会话/ 时长/ 服从/ 重尾/ 分布/ ,/ 它/ 将/ 整个/ P2P/ 网络/ 看成/ 一个/ 加权/ 有向图/ G/ =/ (/ V/ ,/ E/ )/ ,/ 对于/ 边/ (/ u/ ,/ v/ )/ ∈/ E/ ,/ N/ +/ u/ =/ {/ v/ ∈/ V/ :/ u/ →/ v/ }/ 表示/ u/ 的/ 出边/ 邻居/ 集/ ,/ N/ -/ u/ =/ {/ v/ ∈/ V/ :/ v/ →/ u/ }/ 表示/ u/ 的/ 入边/ 邻居/ 集/ ,/ Au/ 表示/ u/ 的/ 年龄/ ,/ 节点/ u/ 的/ 入边/ 权值/ 设置/ 为/ u/ 的/ 年龄/ 和/ u/ 的/ 入/ 边集/ 元素/ 个数/ 的/ 比值/ :/ ω/ (/ v/ ,/ u/ )/ =/ Au/ // |/ N/ -/ u/ |/ ,/ u/ 的/ 入度/ 加权/ 值为/ d/ -/ u/ =/ ∑/ v/ ∈/ N/ -/ ω/ (/ v/ ,/ u/ )/ =/ Au/ ,/ 出/ 度/ 加权/ 值为/ d/ +/ u/ =/ ∑/ v/ ∈/ N/ +/ ∑/ v/ ∈/ N/ +/ (/ Av/ // |/ N/ -/ v/ |/ )/ ,/ 则/ 对于/ 基于/ 年龄/ 的/ 随机/ 选择/ ,/ 通过/ 交替/ 地/ 走入/ 边/ 和/ 出边/ 来/ 进行/ ,/ 假设/ 当前/ 节点/ 为/ u/ ,/ 则/ 第/ 1/ 步/ 选择/ u/ 的/ 一个/ 入边/ 邻居/ h/ (/ h/ ∈/ N/ -/ u/ )/ ,/ 选中/ 的/ 概率/ 为/ puh/ =/ ω/ (/ h/ ,/ u/ )/ // d/ -/ u/ ,/ 第/ 2/ 步/ 选择/ h/ 的/ 出边/ 邻居/ v/ ,/ 选中/ 的/ 概率/ 为/ phv/ =/ ω/ (/ h/ ,/ v/ )/ // d/ +/ h/ ,/ 则/ 节点/ u/ 选择/ v/ 作为/ 它/ 的/ 邻居/ 的/ 概率/ 为/ puv/ =/ ∑/ h/ ∈/ N/ -/ 5.2/ 失效恢复/ 策略/ 情况/ 下/ ,/ 如何/ 进行/ 恢复/ 的/ 策略/ ./ 5.2/ ./ 1/ 是否/ 立即/ 恢复/ 根据/ 邻居/ 失效/ 后/ 是否/ 立即/ 恢复/ 可以/ 将/ 其/ 分为/ 反应/ 恢复/ (/ ReactiveRecovery/ )/ 和/ 周期/ 恢复/ (/ PeriodicRecovery/ )/ ./ 反应/ 恢复/ 是/ 指当/ 节点/ 发现/ 它/ 的/ 邻居/ 表中/ 有/ 节点/ 失效/ 时/ ,/ 立即/ 做出/ 反应/ ,/ 更新/ 其/ 邻居/ 表/ ,/ 并/ 将/ 新/ 的/ 邻居/ 表/ 发给/ 它/ 的/ 每/ 一个/ 邻居/ ./ 周期/ 恢复/ 是/ 指/ 节点/ 的/ 邻居/ 失效/ 后/ 并/ 不/ 立即/ 进行/ 更新/ ,/ 而是/ 等待/ 一个/ 周期时间/ t/ 后/ 统一/ 进行/ 更新/ ./ 反应/ 恢复/ 能够/ 及时/ 修复/ 邻居/ 表/ ,/ 维护/ 邻居/ 表/ 的/ 完整性/ ,/ 在/ 低/ 抖动/ 率/ ①/ 时/ 比较/ 高效/ ,/ 但是/ 当/ 抖动/ 率/ 比较/ 高时/ ,/ 节点/ 就/ 会/ 疲于/ 修复/ 邻居/ 表/ ,/ 从而/ 产生/ 较/ 高/ 的/ 维护/ 代价/ ./ 而/ 周期/ 恢复/ 并/ 不/ 立即/ 进行/ 恢复/ ,/ 而是/ 等待/ 一个/ 周期/ t/ 后/ ,/ 有/ 多少/ 个/ 邻/ 失效恢复/ 策略/ 主要/ 考虑/ 的/ 是/ 在/ 邻居/ 节点/ 失效/ 的/ 居/ 失效/ 就/ 同时/ 添加/ 多少/ 个/ 邻居/ ,/ 因此/ ,/ 无论/ 在/ 低/ 抖动/ 率/ 还是/ 高/ 抖动/ 率下/ ,/ 周期/ 恢复/ 的/ 性能/ 都/ 比较稳定/ ,/ 从而/ 降低/ 了/ 维护/ 代价/ ./ 但是/ 高/ 抖动/ 率时/ ,/ 周期/ t/ 的/ 设置/ 比较/ 关键/ ,/ 如果/ 比较/ 长/ ,/ 可能/ 导致/ 节点/ 所有/ 的/ 邻居/ 都/ 失效/ ,/ 而/ 没有/ 及时/ 恢复/ ,/ 从而/ 导致/ 节点/ 被/ 孤立/ ,/ 产生/ 网络/ 分割/ ./ Rhea/ 等/ 人/ [/ 8/ ]/ 从/ 带宽/ 消耗/ 和/ 查找/ 延时/ 两/ 方面/ 对/ 这/ 两种/ 策略/ 进行/ 比较/ 实验/ ,/ 结果表明/ ,/ 无论/ 在/ 低/ 抖动/ 率/ 还是/ 高/ 抖动/ 率下/ ,/ 周期/ 恢复/ 都/ 比/ 反应/ 恢复/ 要/ 好/ ,/ 而且/ 抖动/ 越/ 明显/ ,/ 周期/ 恢复/ 的/ 优势/ 就/ 越/ 明显/ ./ 5.2/ ./ 2/ 失效/ 后/ 如何/ 恢复/ 按照/ 节点/ 失效/ 后/ 是否/ 使用/ 新/ 节点/ 来/ 替代/ 失效节点/ ,/ 可以/ 将/ 策略/ 分为/ 固定/ (/ fixed/ )/ 策略/ 和/ 替代/ (/ replacement/ )/ 策略/ ./ 固定/ 策略/ 是/ 指/ 不用/ 新/ 节点/ 替代/ 失效节点/ 的/ 策略/ ,/ 替代/ 策略/ 是/ 指/ 节点/ 失效/ 后/ ,/ 立即/ 有/ 新/ 节点/ 来/ 替代/ 该/ 失效节点/ 的/ 策略/ ./ 进一步/ ,/ 可以/ 将/ 替代/ 策略/ 分为/ 包括/ 随机/ 替代/ (/ RandomReplacement/ ,/ RR/ )/ 策略/ 、/ 被动/ 偏好/ 列表/ (/ PassivePreferenceList/ )/ 策略/ 以及/ 主动/ 偏好/ 列表/ (/ ActivePreferenceList/ )/ 策略/ ./ 随机/ 替代/ 策略/ 是/ 指当/ 有/ 节点/ 失效/ 时/ ,/ 从/ 可用/ 节点/ 列表/ 中/ 随机/ 选择/ 一个/ 节点/ 来/ 替代/ 失效/ 的/ 节点/ ./ 被动/ 偏好/ 列表/ 策略/ 是/ 指/ 将/ 所有/ 可用/ 的/ 节点/ 按照/ 某一/ 属性/ 偏好/ 排序/ ,/ 当/ 邻居/ 表中/ 有/ 节点/ 失效/ 时/ ,/ 从/ 偏好/ 列表/ 中/ 选择/ 最合适/ 的/ 节点/ 来/ 替代/ 失效节点/ 的/ 策略/ ./ 主动/ 偏好/ 列表/ 策略/ 是/ 指/ 将/ 所有/ 可用/ 节点/ 按照/ 某一/ 属性/ 偏好/ 排序/ ,/ 当/ 邻居/ 表中/ 有/ 节点/ 失效/ 时/ ,/ 从/ 偏好/ 列表/ 中/ 选择/ 最合适/ 的/ 节点/ 来/ 替代/ 失效节点/ ,/ 并且/ ,/ 在/ 使用/ 过程/ 中/ ,/ 发现/ 有/ 比/ 邻居/ 表中/ 更/ 合适/ 的/ 节点/ 上线/ ,/ 则/ 断开/ 已有/ 节点/ ,/ 并/ 切换/ 到/ 该/ 新/ 上线/ 的/ 更/ 合适/ 节点/ ./ Godfrey/ 等/ 人/ [/ 14/ ]/ 通过/ 一系列/ 的/ 实验/ 和/ 理论/ 分析/ 得出/ ,/ 替代/ 策略/ 比/ 最好/ 的/ 固定/ 策略/ 在/ 长时间/ 的/ 跟踪/ 下有/ 1.3/ ~/ 5/ 倍/ 的/ churn/ 降低/ ,/ 当/ 发生/ 节点/ 失效/ 时/ ,/ 简单/ 的/ 随机/ 替代/ 策略/ 的/ 性能比/ 其它/ 策略/ 的/ 性能/ 都/ 要/ 好/ ./ 偏好/ 列表/ 策略/ 在/ 节点/ 失效/ 的/ 情况/ 下/ ,/ 相比/ 随机/ 替代/ 策略/ ,/ 可能/ 使/ 系统/ 产生/ 更/ 多/ 的/ 抖动/ ./ 文章/ 最后/ 指出/ ,/ 在/ 实际/ 运用/ 中/ ,/ 适当/ 增加/ 一些/ 随机/ 选择/ 策略/ 可以/ 降低/ churn/ 带来/ 的/ 影响/ ./ 5.3/ 副本/ 维护/ 策略/ 在/ P2P/ 网络/ 中/ ,/ churn/ 可能/ 会/ 导致/ 数据/ 丢失/ 、/ 数据/ 访问/ 延迟/ 增大/ 等/ 问题/ ./ 为了/ 提高/ 数据/ 可用性/ ,/ 目前/ 大多数/ P2P/ 网络/ 都/ 采用/ 副本/ 技术/ ./ 但是/ churn/ 同样/ 对/ 副本/ 维护/ 有/ 影响/ ,/ 节点/ 加入/ 可能/ 会/ 产生/ 更好/ 的/ 副/ ①/ 抖动/ 率/ 是/ 指/ 单位/ 时间/ 内/ ,/ 网络/ 中/ 节点/ 加入/ 和/ 退出/ 网络/ 的/ Page11/ 本/ 存放/ 位置/ ,/ 从而/ 引起/ 副本/ 迁移/ ;/ 节点/ 退出/ ,/ 可能/ 使/ 副本/ 数目/ 减少/ ,/ 从而/ 需要/ 重新/ 选择/ 副本/ 位置/ ,/ 复制/ 副本/ 并/ 将/ 其/ 放到/ 该/ 合适/ 位置/ 上/ ./ 副本/ 技术/ 针对/ churn/ 的/ 应对/ 策略/ 主要/ 体现/ 在/ 对/ 副本/ 数目/ 的/ 维护/ 和/ 对/ 副本/ 位置/ 的/ 维护/ 两/ 方面/ ,/ 下面/ 分别/ 对/ 其/ 进行/ 阐述/ ./ 5.3/ ./ 1/ 对/ P2P/ 副本/ 数目/ 的/ 维护/ 策略/ Churn/ 对/ P2P/ 副本/ 数目/ 的/ 影响/ 主要/ 体现/ 在/ 节点/ 退出/ 可能/ 产生/ 副本/ 丢失/ ,/ 当/ 系统/ 抖动/ 率/ 比较/ 高时/ ,/ 有/ 可能/ 数据/ 的/ 所有/ 副本/ 都/ 丢失/ 而/ 没有/ 及时/ 恢复/ ,/ 从而/ 产生/ 数据/ 丢失/ ./ 为了/ 维护/ 数据/ 的/ 可用性/ 及/ 访问/ 的/ 高效性/ ,/ 维护/ 一定/ 数目/ 的/ 副本/ 是/ 必须/ 的/ ,/ 当/ 产生/ 副本/ 丢失/ 时/ ,/ 必须/ 及时/ 恢复/ ./ 和/ 邻居/ 失效恢复/ 策略/ 相似/ ,/ 对于/ 副本/ 数目/ 的/ 维护/ 一般/ 有/ 立即/ 恢复/ 和/ 周期/ 恢复/ 两种/ 策略/ ,/ 在/ 低/ 抖动/ 率/ 情况/ 下/ ,/ 立即/ 恢复/ 产生/ 的/ 消息/ 开销/ 比较/ 小/ ,/ 但是/ 当/ 抖动/ 率/ 比较/ 高时/ ,/ 会/ 产生/ 较大/ 的/ 网络/ 开销/ ./ 而/ 周期/ 恢复/ 产生/ 的/ 消息/ 开销/ 在/ 两种/ 情况/ 下/ 变化/ 不/ 大/ ,/ 但是/ 在/ 高/ 抖动/ 率/ 情况/ 下/ ,/ 如果/ 周期/ 恢复/ 设定/ 的/ 周期/ 比较/ 长而/ 副本/ 没有/ 及时/ 更新/ ,/ 就/ 有/ 可能/ 产生/ 所有/ 副本/ 均/ 丢失/ 从而/ 导致/ 数据/ 丢失/ 的/ 可能/ ,/ 而/ 立即/ 恢复/ 则/ 不会/ 产生/ 这种/ 情况/ ./ 5.3/ ./ 2/ 对/ P2P/ 副本/ 位置/ 的/ 维护/ 策略/ 副本/ 位置/ 的/ 选择/ 对/ 数据/ 副本/ 的/ 稳定性/ 具有/ 较大/ 的/ 影响/ ,/ 当/ 副本/ 存放/ 在/ 短会话/ 时长/ 的/ 节点/ 上时/ ,/ 由于/ 节点/ 退出/ ,/ 导致/ 副本/ 缺失/ ,/ 因此/ 必须/ 重新/ 选择/ 副本/ 节点/ ,/ 如果/ 其/ 仍然/ 是/ 短时/ 长/ 节点/ ,/ 则/ 过/ 一段时间/ 可能/ 又/ 下线/ 了/ ,/ 就/ 会/ 频繁/ 进行/ “/ 副本/ 缺失/ —/ —/ —/ 选择/ 副本/ 位置/ —/ —/ —/ 副本/ 迁移/ ”/ 的/ 过程/ ,/ 从而/ 产生/ 较大/ 的/ 通信/ 开销/ 以及/ 副本/ 维护/ 开销/ ./ 但是/ 如果/ 被/ 选中/ 的/ 是/ 会/ 话/ 时长/ 很长/ 的/ 稳定/ 节点/ ,/ 则/ 可以/ 在/ 较长时间/ 内/ 维持/ 副本/ 的/ 存在/ ,/ 降低/ 了/ 副本/ 缺失/ 的/ 概率/ ,/ 减少/ 了/ 网络通信/ 开销/ 和/ 副本/ 维护/ 开销/ ./ 因此/ ,/ 一个/ 好/ 的/ 副本/ 位置/ 选择/ 策略/ 对应/ 对/ churn/ 的/ 影响/ 会/ 有/ 更好/ 的/ 效果/ ./ 目前/ 来讲/ ,/ 对于/ 非/ 结构化/ P2P/ 网络/ ,/ 由于/ 组织/ 结构/ 比较/ 松散/ ,/ 副本/ 一般/ 是/ 随机/ 分布/ 在/ 网络/ 中/ ,/ 因此/ 并/ 没有/ 特别/ 针对/ churn/ 的/ 相关/ 副本/ 存放/ 策略/ 的/ 研究/ ./ 对于/ 结构化/ P2P/ 网络/ ,/ 数据/ 资源/ (/ 或/ 资源/ 的/ 索引/ )/ 一般/ 放置/ 在/ 节点/ ID/ 离/ 数据/ ID/ 最近/ 的/ 节点/ 上/ ,/ 称为/ 该/ 数据/ 的/ 根/ 节点/ (/ root/ ,/ Chord/ 中/ 称为/ 后继/ successor/ )/ ./ 其/ 副本/ 位置/ 选择/ 一般/ 有/ 两种/ 策略/ :/ 基于/ 多/ 关键字/ 的/ 选择/ 策略/ 和/ 基于/ 邻居/ 表/ 的/ 选择/ 策略/ ./ 基于/ 多/ 关键字/ 的/ 选择/ 策略/ 是/ 指/ 将/ 每个/ 数据/ 资源/ 采用/ 同一个/ Hash/ 函数/ 和/ 不同/ 的/ Hash/ 参数/ (/ 或者/ 采用/ 不同/ 的/ Hash/ 函数/ 和/ 相同/ 的/ Hash/ 参数/ )/ 计算/ 得到/ s/ 个/ 不同/ 的/ ID/ 值/ ,/ 每个/ 与/ ID/ 最/ 接近/ 的/ 结点/ 存储/ 数据/ 的/ 一个/ 副本/ 节点/ ./ 该/ 策略/ 将/ 根/ 节点/ 从/ 1/ 个/ 变成/ 了/ s/ 个/ ,/ 这/ s/ 个根/ 节点/ 只要/ 有/ 一个/ 离开/ 系统/ ,/ 就/ 需要/ 对/ 副本/ 管理/ 信息/ 进行/ 更新/ ,/ 副本/ 也/ 必须/ 迁移/ ./ 假设/ 系统/ 中/ 每个/ 节点/ 离开/ 的/ 概率/ 为/ p/ ,/ 则/ 发生/ 这种/ 情况/ 的/ 概率/ 为/ 1/ -/ (/ 1/ -/ p/ )/ s/ ,/ 当/ p/ =/ 0.5/ ,/ s/ =/ 5/ 时/ ,/ 其/ 发生/ 的/ 概率/ 为/ 96.875/ %/ ./ 当/ 系统/ 抖动/ 率/ 比较/ 高时/ ,/ 就/ 可能/ 频繁/ 产生/ 副本/ 缺失/ ,/ 从而/ 产生/ 较/ 高/ 的/ 副本/ 维护/ 开销/ ./ 在/ Tapestry/ [/ 31/ ]/ 和/ CAN/ [/ 32/ ]/ 中/ 使用/ 的/ 就是/ 该/ 策略/ ./ 基于/ 邻居/ 表/ 选择/ 策略/ 是/ 指/ 副本/ 节点/ 在/ 根/ 节点/ 的/ 邻居/ 表中/ 选择/ ,/ 将/ 副本/ 保存/ 在/ 离根/ 节点/ 最近/ 的/ s/ 个/ 邻居/ 中/ ,/ 并/ 由/ 根/ 节点/ 负责管理/ 和/ 维护/ 副本/ 信息/ ./ 而/ churn/ 同样/ 对/ 其/ 有/ 影响/ ,/ 当/ 这/ s/ 个/ 邻居/ 中有/ 节点/ 离开/ 网络/ 时/ ,/ 就/ 会/ 产生/ 副本/ 缺失/ ,/ 此时/ 需要/ 将/ 离根/ 节点/ 最近/ 的/ 非/ 副本/ 节点/ 选择/ 为/ 新/ 的/ 副本/ 节点/ ,/ 并/ 将/ 副本/ 复制到/ 该/ 节点/ ./ 当有/ 新/ 节点/ 加入/ 并且/ 落/ 在/ ID/ 值离根/ 节点/ 更近/ 的/ 位置/ 时/ ,/ 根据/ 协议/ 此时/ 其/ 成为/ 新/ 的/ 副本/ 节点/ ,/ 而/ 离根/ 节点/ 最远/ 的/ 副本/ 节点/ 就/ 被/ 挤出/ 副本/ 集而/ 成为/ 非/ 副本/ 节点/ ,/ 并/ 需要/ 将/ 该/ 副本/ 迁移/ 到/ 新/ 节点/ 上来/ ,/ 同样/ 产生/ 了/ 副本/ 迁移/ ./ 因此/ ,/ 无论是/ 新/ 节点/ 加入/ 还是/ 已有/ 节点/ 退出/ ,/ 都/ 对/ 副本/ 维护/ 产生/ 影响/ ./ 在/ Chord/ [/ 33/ ]/ 和/ Pastry/ [/ 34/ ]/ 中/ 使用/ 的/ 是/ 该/ 策略/ ./ Legtchenko/ 等/ 人/ [/ 35/ ]/ 在/ 基于/ 邻居/ 表/ 选择/ 策略/ 的/ 基础/ 上/ 提出/ 放宽/ DHT/ (/ RelaxDHT/ )/ 的/ 副本/ 维护/ 策略/ ./ 该/ 策略/ 主要/ 思想/ 是/ 针对/ 副本/ 必须/ 放在/ 离根/ 节点/ 最近/ 的/ s/ 个/ 节点/ 这一/ 限制/ 进行/ 放宽/ ,/ 提出/ 只要/ 是/ 在/ 根/ 节点/ 的/ 邻居/ 表中/ 的/ 节点/ ,/ 都/ 可以/ 存放/ 副本/ ./ 而/ 如何/ 在/ 邻居/ 表/ 的/ 众多/ 节点/ 中/ 选择/ 副本/ 节点/ 呢/ ?/ 文章/ 提出/ 了/ 随机/ 副本/ 选择/ 策略/ ,/ 根/ 节点/ 在/ 其/ 邻居/ 表中/ 随机/ 选择/ s/ 个/ 节点/ 用来/ 存放数据/ 的/ 副本/ ./ 在/ 数据/ 维护/ 时/ ,/ 新/ 节点/ 加入/ 只要/ 不/ 将/ 副本/ 节点/ 挤出/ 根/ 节点/ 的/ 邻居/ 表/ ,/ 数据/ 就/ 不用/ 迁移/ ,/ 当有/ 副本/ 节点/ 离开/ 网络/ 导致/ 数据/ 副本/ 丢失/ 时/ ,/ 根/ 节点/ 在/ 其/ 邻居/ 表中/ 随机/ 选择/ 一个/ 非/ 副本/ 节点/ 用来/ 存放/ 新/ 的/ 副本/ ./ 该/ 策略/ 对/ 新/ 节点/ 加入/ 导致/ 副本/ 迁移/ 具有/ 一定/ 的/ 抑制作用/ ,/ 但是/ 它/ 不能/ 保证/ 随机/ 选择/ 的/ 节点/ 就/ 一定/ 是/ 稳定/ 的/ 节点/ ,/ 虽然/ 经过/ 多次/ 选择/ 后/ ,/ 最终/ 可能/ 会/ 选择/ 到/ 稳定/ 的/ 节点/ ,/ 但是/ 这/ 期间/ 副本/ 可能/ 需要/ 经过/ 多次/ 迁移/ ./ 5.4/ 连接/ 生命周期/ 维护/ 策略/ 连接/ 生命周期/ (/ link/ -/ lifetime/ )/ 是/ 指/ 网络连接/ 从/ 形成/ 到/ 断开/ 所/ 经历/ 的/ 时间/ ./ 它/ 和/ 节点/ 会话/ 时长/ 不同/ 的/ 地方/ 在于/ ,/ 连接/ 断开/ 并/ 不/ 意味着/ 节点/ 下线/ ,/ 特别/ 在/ 结构化/ P2P/ 网络/ 中/ ,/ 当有/ 更/ 合适/ 的/ 节点/ 到来/ 时/ ,/ 节点/ 往往/ 主动/ 断开/ 并/ 连接/ 到/ 新/ 节点/ 上/ ,/ 此时/ ,/ 原/ 连接/ 中/ 的/ 两个/ 节点均/ 未/ 下线/ ./ 连接/ 生命周期/ 和/ 节点/ 连通性/ 、/ Page12/ 网络/ 路由/ 、/ 数据传输/ 都/ 有/ 影响/ ./ 连接/ 生命周期/ 越长/ ,/ 则/ 节点/ 连通性/ 越强/ ,/ 经过/ 此/ 连接/ 的/ 网络/ 路由/ 就/ 越/ 稳定/ ,/ 数据传输/ 效率/ 也/ 越/ 稳定/ ./ 根据/ 节点/ 连接/ 的/ 特点/ ,/ 可以/ 将/ P2P/ 系统/ 分为/ 两类/ 模型/ :/ 无/ 切换/ (/ non/ -/ switching/ )/ 模型/ 和/ 切换/ (/ switc/ -/ hing/ )/ 模型/ [/ 36/ ]/ ./ 无/ 切换/ 模型/ 是/ 指/ 连接/ 一旦/ 建立/ 就/ 一直/ 保持/ 连通/ 直到/ 失效/ ,/ 在/ 连接/ 期间/ 不/ 切换/ 到/ 其它/ 邻居/ ,/ 该/ 模型/ 主要/ 应用/ 于/ 非/ 结构化/ P2P/ 网络/ 中/ ./ 切换/ 模型/ 是/ 指/ 连接/ 建立/ 以后/ ,/ 如果/ 出现/ 了/ 更/ 合适/ 的/ 连接/ 节点/ ,/ 则/ 主动/ 断开连接/ 并/ 切换/ 连接/ 到/ 新/ 的/ 邻居/ ,/ 该/ 模型/ 主要/ 应用/ 于/ 很多/ 结构化/ P2P/ 网络/ 中/ ./ 5.4/ ./ 1/ 非/ 结构化/ P2P/ 网络连接/ 生命周期/ 研究/ 对于/ 非/ 结构化/ P2P/ 网络/ ,/ Wang/ 等/ 人/ [/ 26/ ]/ 针对/ Gnutella/ 网络/ 中/ 的/ 连接/ 生命周期/ 进行/ 测量/ ,/ 由于/ 大多数/ 的/ Gnutella/ 客户端/ 用户/ 都/ 和/ 超级/ 节点/ 相连/ ,/ 因此/ 只要/ 监测/ 超级/ 节点/ 上/ 的/ 连接/ 生命周期/ 就/ 可以/ 获得/ 网络/ 绝大多数/ 的/ 连接/ 情况/ ./ 通过/ 监测/ 发现/ ,/ 连接/ 生命周期/ 的/ 分布/ 服从/ 幂率/ (/ power/ -/ law/ )/ 分布/ ,/ 通过/ 和/ 节点/ 生命周期/ 的/ 对比/ 发现/ ,/ 连接/ 生命周期/ 往往/ 比/ 节点/ 生命周期/ 要/ 短/ ,/ 节点/ 经常/ 更换/ 它们/ 的/ 邻居/ ./ 监测/ 显示/ ,/ 16.4/ %/ 的/ 连接/ 在/ 8min/ 后/ 消失/ ./ 5.4/ ./ 2/ 结构化/ P2P/ 网络连接/ 生命周期/ 研究/ 对于/ 结构化/ P2P/ 网络/ ,/ 由于/ 一般/ 是/ 切换/ 模型/ ,/ 为了/ 遵循/ 网络/ 的/ 协议/ 规定/ ,/ 旧/ 的/ 邻居/ 经常/ 被/ 新/ 到来/ 的/ 邻居/ 替换/ ,/ 而/ 新/ 邻居/ 又/ 往往/ 具有/ 非常/ 短/ 的/ 剩余/ 时/ 长/ ,/ 从而/ 给/ 网络/ 带来/ 较/ 高/ 的/ 连接/ 抖动/ 率/ ./ Tan/ 等/ 人/ [/ 37/ ]/ 提出/ 一种/ 在线/ 最长/ 邻居/ 选择/ 策略/ (/ Longer/ -/ LivedNeighborSelection/ ,/ LNS/ )/ ./ 它/ 首先/ 假设/ 网络/ 中/ 节点/ 的/ 会/ 话/ 时长/ 服从/ Pareto/ 分布/ ,/ 在/ 此/ 假设/ 下/ ,/ 在线/ 时长/ 越长/ 的/ 节点/ ,/ 其/ 剩余/ 时长/ 也/ 越长/ ./ 因此/ ,/ 选择/ 在线/ 时长/ 越长/ 的/ 节点/ ,/ 其/ 连接/ 生命周期/ 也/ 越长/ ./ 为此/ ,/ 文章/ 提出/ 如下/ 的/ 选择/ 策略/ :/ 节点/ V/ 的/ 第/ i/ 个/ 邻居/ 应/ 在/ [/ V/ +/ 2i/ ,/ V/ +/ 2i/ +/ 1/ )/ 之间/ ,/ 设此/ 区域/ 中/ 所有/ 节点/ 组成/ 的/ 集合/ 为/ Si/ ,/ 当/ i/ 较/ 小时/ ,/ Si/ 中/ 的/ 元素/ 非常少/ ,/ 当/ i/ 增加/ 时/ ,/ Si/ 可能/ 非常/ 大/ ,/ 此时/ 从/ [/ V/ +/ 2i/ ,/ V/ +/ 2i/ +/ 1/ )/ 中/ 随机/ 选择/ 最多/ 不/ 超过/ K/ (/ K/ 为/ 某/ 一/ 设定值/ )/ 个/ 节点/ ,/ 组成/ 集合/ Si/ ./ 然后/ 从/ Si/ 中/ 选择/ 在线/ 时/ 长/ 最长/ 的/ 节点/ 作为/ 节点/ V/ 的/ 第/ i/ 个/ 邻居/ ./ 该/ 方法/ 的/ 优点/ 是/ ,/ 在线/ 时/ 长/ 最长/ 的/ 节点/ 往往/ 具有/ 较长/ 的/ 稳定性/ ,/ 因此/ 连接/ 比较稳定/ ,/ 减小/ 了/ churn/ 对/ DHT/ 的/ 影响/ ./ Yao/ 等/ 人/ [/ 36/ ]/ 在/ 其/ 基础/ 上/ 提出/ 一种/ 小/ 区域/ (/ min/ -/ zone/ )/ 邻居/ 选择/ 策略/ ./ 节点/ V/ 的/ 区域/ 是/ 指/ 从/ 节点/ V/ 到/ 它/ 的/ 后继/ 之间/ 的/ 一小部分/ DHT/ 空间/ ,/ 由/ V/ 负责/ ./ 和/ 文献/ [/ 37/ ]/ 一样/ ,/ 文章/ 假设/ 到/ 节点/ V/ 的/ 距离/ 为/ 2i/ ~/ 2i/ +/ 1/ 之间/ 的/ 节点/ 集合/ 为/ Si/ ,/ 它/ 首先/ 在/ Si/ 中/ 平均/ 随机/ 地/ 选择/ m/ 个/ 节点/ ,/ 然后/ 将/ V/ 连接/ 到/ 这/ m/ 个/ 节点/ 中/ 所/ 负责/ 区域/ 最小/ 的/ 那个/ 节点/ 上/ ./ 该/ 方法/ 的/ 优点/ 是/ :/ 由于/ 负责/ 的/ 区域/ 较/ 小/ ,/ 新/ 加入/ 的/ 节点/ 落/ 在/ 该/ 区域/ 的/ 概率/ 较/ 小/ ,/ 降低/ 了/ 新/ 加入/ 节点/ 对/ 其/ 的/ 影响/ ./ 但是/ 小/ 区域/ 方法/ 虽然/ 可以/ 降低/ 新/ 节点/ 加入/ 的/ 影响/ ,/ 但/ 不能/ 降低/ 旧/ 节点/ 离开/ 的/ 影响/ ,/ 有些/ 新/ 加入/ 的/ 节点/ 切割/ 原有/ 区域/ 从而/ 使/ 自己/ 成为/ 小/ 区域/ 节点/ ,/ 当/ 连接/ 切换/ 到/ 这些/ 节点/ 后/ ,/ 这些/ 节点/ 可能/ 具有/ 较/ 短/ 的/ 会/ 话/ 时长/ ,/ 没过多久/ 就/ 离开/ 网络/ ,/ 从而/ 产生/ 抖动/ ./ 如何/ 降低/ 节点/ 离开/ 对/ DHT/ 的/ 影响/ ,/ 是/ 小/ 区域/ 方法/ 需要/ 改进/ 的/ 地方/ ./ 5.5/ 针对/ 具体/ 问题/ 的/ 应对/ 策略/ 研究/ 由于/ churn/ 对/ P2P/ 网络/ 的/ 影响/ 涉及/ 到/ 各个方面/ ,/ 针对/ 不同/ 的/ 问题/ ,/ 研究/ 人员/ 提出/ 了/ 有/ 针对性/ 的/ 应对/ 策略/ ./ 5.5/ ./ 1/ 查询/ 超时/ 设置/ 策略/ Rhea/ 等/ 人/ [/ 8/ ]/ 针对/ churn/ 对/ 网络/ 查询/ 的/ 影响/ 进行/ 研究/ ./ 在/ churn/ 下/ ,/ 简单/ 设定/ 查询/ 应答/ 的/ 超/ 时值/ 是/ 不明智/ 的/ ,/ 如果/ 查询/ 超时/ 设定/ 太短/ ,/ 查询/ 请求/ 可能/ 刚/ 被/ 应答/ 节点/ 接收/ 到/ 、/ 或者/ 正在/ 处理/ 中/ 、/ 或者/ 查询/ 应答/ 在/ 返回/ 的/ 途中/ ./ 如果/ 查询/ 超时/ 设定值/ 太/ 长/ ,/ 则/ 请求/ 节点/ 往往/ 无法忍受/ 等待/ 太/ 长时间/ 而/ 离开/ 网络/ ./ 文章/ 针对/ churn/ 对/ 超时/ 设定/ 的/ 影响/ ,/ 提出/ 3/ 种/ 超时/ 设定/ 的/ 策略/ :/ (/ 1/ )/ 固定/ 为/ 5s/ ;/ (/ 2/ )/ TCP/ -/ style/ 超时/ :/ 根据/ 以往/ 的/ 反应时间/ 来/ 设定/ 现在/ 的/ 超/ 时值/ ;/ (/ 3/ )/ 虚拟/ 纵轴/ :/ 根据/ 网络/ 中/ 两/ 节点/ 距离/ 来/ 设定/ 超/ 时值/ ./ 并/ 对/ 这/ 3/ 种/ 策略/ 进行/ 实验/ 比较/ ,/ 结果表明/ ,/ 当/ 抖动/ 率/ 比较/ 低时/ ,/ 3/ 种/ 策略/ 的/ 差别/ 不/ 大/ ,/ 但是/ 当/ 网络/ 中/ 节点/ 的/ 平均/ 会话/ 时长/ 小于/ 23min/ 时/ ,/ TCP/ -/ style/ 超时/ 设定/ 的/ 优势/ 比较/ 明显/ ./ 5.5/ ./ 2/ 系统/ 稳定性/ 维护/ 策略/ Churn/ 对/ P2P/ 系统/ 的/ 稳定性/ 产生/ 重要/ 影响/ ,/ 受/ 传统/ 分布式系统/ 的/ 启发/ ,/ Kuhn/ 等/ 人/ [/ 38/ ]/ 提出/ 建立/ 一个/ 动态/ 的/ P2P/ 系统/ 来/ 应对/ churn/ ,/ 该/ 系统/ 的/ 基本/ 结构/ 是/ 一个/ 扁平/ 图/ ,/ 图中/ 的/ 每/ 一个/ 节点/ (/ node/ )/ 都/ 是/ 由/ O/ (/ d2/ )/ 个/ 终端/ 节点/ (/ peer/ )/ 组成/ ,/ 其中/ d/ 表示/ node/ 的/ 边长/ ,/ 在/ 每个/ node/ 内部/ 的/ peer/ 都/ 相互连接/ 起来/ ,/ 相邻/ 的/ node/ 之间/ 也/ 通过/ 一些/ peer/ 连接起来/ ./ 在/ 抖动/ 情况/ 下/ ,/ 一些/ peer/ 可能/ 会/ 下线/ 或/ 失效/ ,/ 此时/ node/ 中/ peer/ 的/ 数目/ 就/ 会/ 不/ 一样/ ,/ 文章/ 通过/ 一系列/ 的/ 算法/ 来/ 选择/ 数目/ 比较/ 多/ 的/ node/ 中/ 的/ peer/ 转移/ 到/ 数目/ 较少/ 的/ node/ 中/ ,/ 来/ 确保/ 系统/ 中/ 的/ 每个/ node/ 都/ 具有/ 大致相同/ 数量/ 的/ peer/ ./ 当/ peer/ 加入/ 系统/ 时/ ,/ 也/ 通过/ 相应/ 的/ 查找/ 和/ 定位/ 算法/ ,/ 来/ 找到/ peer/ 数目/ 较少/ 的/ node/ ,/ Page13/ 并/ 加入/ 到/ 该/ node/ 中/ ./ 当/ peer/ 的/ 总数/ 增加/ 或/ 减少/ 到/ 一定/ 的/ 阈值/ 后/ ,/ 系统/ 的/ 阶数/ (/ order/ ,/ 指/ 系统/ 中/ node/ 的/ 数量/ )/ 就/ 相应/ 地/ 增加/ 或/ 减少/ 1/ ./ 该/ 系统/ 的/ 优点/ 是/ ,/ 网络/ 中/ node/ 的/ 数目/ 受/ churn/ 的/ 影响/ 比较/ 小/ ,/ node/ 之间/ 的/ 连接/ 能够/ 长期保持/ ,/ 从而/ 使/ 整个/ 系统/ 系统/ 保持稳定/ ./ 6/ 总结/ 与/ 展望/ P2P/ 应用/ 是/ 目前/ 互联网/ 上/ 最/ 流行/ 的/ 应用/ 之一/ ,/ 提高/ P2P/ 系统/ 的/ 性能/ 具有/ 很/ 重要/ 的/ 理论/ 价值/ 和/ 应用/ 价值/ ./ 但是/ 抖动/ 特性/ 严重/ 影响/ 了/ P2P/ 的/ 性能/ 、/ 可靠性/ ,/ 制约/ 了/ P2P/ 的/ 推广应用/ ./ 抖动/ 的/ 研究/ 目前/ 还是/ 热点问题/ ,/ 从/ 目前/ 的/ 发展趋势/ 看/ ,/ 它/ 主要/ 朝/ 以下/ 几个/ 方向/ 进行/ :/ (/ 1/ )/ 针对实际/ 运行/ 的/ 结构化/ P2P/ 网络/ 进行/ 研究/ 是/ 目前/ 的/ 热点/ 之一/ ./ 目前/ ,/ 基于/ Kademlia/ 网络/ 的/ P2P/ 应用软件/ eMule/ 、/ BitTorrent/ 等/ 在/ 互联网/ 上/ 大量/ 流行/ ,/ 拥有/ 非常/ 庞大/ 的/ 用户/ 群体/ ./ 在/ 这些/ 软件/ 上/ 进行/ 抖动/ 特性/ 的/ 研究/ ,/ 进而/ 根据/ 研究/ 结果/ 对/ 这些/ 软件/ 进行/ 相应/ 的/ 改进/ ,/ 既有/ 理论/ 价值/ ,/ 又/ 和/ 实际/ 应用/ 相结合/ ./ 目前/ eMule/ 中/ 存在/ 以下几点/ 值得/ 深入/ 挖掘/ 和/ 进一步/ 研究/ ./ 提高/ 网络连接/ 的/ 稳定性/ ./ 这/ 体现/ 在/ 两个/ 方面/ :/ ①/ 连接/ 的/ 节点/ 时常/ 被/ 断开/ ./ 在/ KAD/ 网络/ 的/ 连接/ 显示/ 中/ ,/ 有些/ 已经/ 连接/ 上/ 的/ 节点/ ,/ 过/ 一段时间/ 去/ 查看/ 时/ ,/ 就/ 显示/ 已经/ 断开/ 了/ ./ ②/ 数据/ 传输速率/ 变化/ 非常/ 大/ ./ 在/ 数据传输/ 过程/ 中/ ,/ 传输速率/ 在/ 较/ 短/ 的/ 时间/ 内/ 从/ 上百/ KB/ // s/ 减小/ 到/ 几/ KB/ // s/ ,/ 然后/ 又/ 增加/ 到/ 上百/ KB/ // s/ ,/ 这种/ 过山车/ 一样/ 的/ 传输速率/ 变化/ 是/ 网络连接/ 不/ 稳定/ 的/ 最/ 直观/ 体现/ ./ 如何/ 针对/ KAD/ 网络/ 的/ 动态性/ 进行/ 节点/ 的/ 选择/ ,/ 使/ 节点/ 的/ 连接/ 在/ 一个/ 相对/ 较长/ 的/ 时间/ 内/ 保持稳定/ ,/ 同时/ 使/ 数据/ 传输速率/ 能够/ 像/ 迅雷/ 一样/ ,/ 在/ 一个/ 较长时间/ 内/ 保持/ 相对/ 稳定/ ./ 是/ 目前/ 切实/ 存在/ 而/ 又/ 亟需/ 解决/ 的/ 研究/ 热点/ 之一/ ./ 及时/ 查找/ 出/ 不/ 存在/ 网络/ 中/ 的/ 节点/ ./ 在/ KAD/ 网络/ 中/ ,/ 有些/ 节点/ 虽然/ 表面/ 显示/ 存在/ 网络/ 中/ ,/ 但是/ 实际/ 连接/ 时/ ,/ 却/ 并/ 不/ 存在/ ./ 这些/ 表面/ 存在/ 而/ 实际/ 失效/ 的/ 节点/ ,/ 增加/ 了/ 网络/ 在/ 资源/ 搜索/ 、/ 消息/ 路由/ 、/ 数据传输/ 过程/ 中/ 的/ 代价/ ,/ 降低/ 了/ 系统/ 的/ 性能/ ./ 如何/ 及时/ 找出/ 这些/ 表面/ 存在/ 实际/ 却/ 不/ 在/ 网络/ 中/ 的/ 节点/ ,/ 并/ 通知/ 其它/ 节点/ 及时/ 删除/ 这些/ 节点/ 的/ 信息/ ,/ 从而/ 避免/ 无谓/ 的/ 连接/ ,/ 提高/ 资源/ 搜索/ 、/ 消息/ 路由/ 等/ 的/ 性能/ ./ 是/ 在/ KAD/ 网络/ 中/ 可以/ 进一步/ 研究/ 的/ 另/ 一个/ 研究/ 点/ ./ (/ 2/ )/ 在/ 移动/ P2P/ 网络/ 中/ 的/ churn/ 特性/ 研究/ 是/ 目前/ 研究/ 的/ 另/ 一个/ 热点/ ./ 随着/ 移动/ 互联网/ 的/ 兴起/ ,/ 移动/ P2P/ 网络/ 也/ 热/ 起来/ ./ 和/ 传统/ P2P/ 一样/ ,/ 移动/ P2P/ 网络/ 中/ 自然/ 也/ 具有/ churn/ 特性/ ,/ 而且/ 比/ 传统/ 网络/ 中/ 的/ 更/ 严重/ ./ 由于/ 移动/ 设备/ 具有/ 位置/ 经常/ 变化/ ,/ 需要/ 节约/ 能耗/ 等/ 方面/ 的/ 因素/ ,/ 节点/ 加入/ 和/ 退出/ 网络/ 更/ 频繁/ ./ 同时/ ,/ 它/ 还有/ 不同于/ 传统/ P2P/ 网络/ 的/ 自身/ 特点/ ,/ 传统/ P2P/ 网络/ 中/ ,/ 节点/ 位置/ 一般/ 比较/ 固定/ ,/ 该次/ 上线/ 时/ 地理位置/ 比较/ 近/ 的/ 邻居/ 节点/ ,/ 下次/ 上线/ 时/ ,/ 往往/ 还是/ 地理位置/ 比较/ 近/ 的/ 节点/ ,/ 因此/ 选择/ 这些/ 节点/ ,/ 数据/ 的/ 上传下载/ 效率/ 都/ 比较/ 高/ ./ 而/ 移动/ P2P/ 网络/ 却/ 不/ 一样/ ,/ 由于/ 位置/ 的/ 变化/ ,/ 该次/ 上线/ 时/ 距离/ 较近/ 的/ 节点/ ,/ 下次/ 可能/ 相隔/ 就/ 很/ 远/ 了/ ,/ 如果/ 像/ 上次/ 上线/ 时/ 一样/ ,/ 选择/ 这些/ 节点/ ,/ 那么/ 连接/ 的/ 稳定性/ 、/ 网络/ 传输/ 效率/ 可能/ 就/ 会/ 很/ 低/ ./ 针对/ 这些/ 问题/ 探讨/ 其/ 可能/ 的/ 解决方案/ 是/ churn/ 研究/ 的/ 另/ 一个/ 发展/ 方向/ ./ 致谢/ 衷心感谢/ 评审/ 专家/ 付出/ 的/ 辛勤劳动/ 和/ 对/ 本文/ 提出/ 的/ 中肯/ 意见/ ./ 感谢/ 课题组/ 的/ 老师/ 和/ 同学/ 们/ 提出/ 的/ 宝贵意见/ ,/ 特别感谢/ 丁博/ 、/ 杨/ 永志/ 师兄/ ,/ 文章/ 的/ 多次/ 修改/ 都/ 离不开/ 他们/ 提出/ 的/ 宝贵意见/ !/ 

