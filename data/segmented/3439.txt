Page1/ 多/ 数据源/ 联合/ 协作/ 的/ AdHoc/ 网络/ 分布式/ 最优/ 资源分配/ 算法/ 陈怡/ 1/ )/ 胡瑞敏/ 2/ )/ 高戈/ 2/ )/ 1/ )/ (/ 华中师范大学/ 计算机科学/ 系/ 武汉/ 430079/ )/ 2/ )/ (/ 武汉大学/ 计算机/ 学院/ 武汉/ 430072/ )/ 摘要/ 近年来/ 基于/ AdHoc/ 网络/ 的/ 智能化/ 视频/ 监控/ 等/ 新型/ 网络应用/ 逐渐/ 兴起/ 和/ 普及/ ,/ 该类/ 应用/ 需要/ 考虑/ 多个/ 数据源/ 的/ 联合/ 协作/ ./ 但是/ 现有/ AdHoc/ 网络/ 的/ 资源分配/ 机制/ 主要/ 针对/ 每个/ 独立/ 的/ 数据流/ ,/ 在/ 实现/ 资源分配/ 过程/ 中/ 没有/ 考虑/ 不同/ 数据/ 之间/ 的/ 依赖/ 关系/ ,/ 导致/ 针对/ 联合/ 任务/ 的/ 资源/ 利用效率/ 不高/ ,/ 成为/ 制约/ 网络/ 服务质量/ 提高/ 的/ 重要/ 因素/ 之一/ ./ 文中/ 首次/ 把/ 基于/ 任务/ 的/ 评价/ 参数/ 纳入/ 到/ 无线/ AdHoc/ 网络/ 最优/ 分配/ 模型/ 中/ ,/ 使得/ 资源分配/ 模型/ 能够/ 描述/ 构成/ 任务/ 的/ 各/ 数据流/ 之间/ 的/ 依赖/ 关系/ ./ 提出/ 了/ 基于/ 任务/ 利用率/ 的/ 动态/ 资源/ 调节/ 算法/ (/ MissionutilitybasedResourceDynamicalgorithm/ ,/ MRD/ )/ ./ 证明/ 了/ 该/ 算法/ 满足/ 非线性/ 问题/ 最优/ 约束/ ,/ 所求/ 数据源/ 发送/ 速率/ 满足/ 系统/ 全局/ 最优/ ./ 仿真/ 结果表明/ ,/ 提出/ 的/ MRD/ 算法/ 能够/ 提高/ 多/ 数据源/ 协作/ AdHoc/ 网络/ 利用效率/ ./ 关键词/ 协作/ ;/ 任务/ ;/ 效用/ 1/ 引言/ 进入/ 21/ 世纪/ ,/ 伴随/ 着/ 全球/ 信息化/ 和/ 数字化/ 进程/ 的/ 逐步/ 深入/ ,/ 无线网络/ 技术/ 获得/ 了/ 迅猛发展/ ,/ 无线网络/ 技术/ 承载/ 的/ 各种/ 多媒体业务/ 类型/ 已/ 深入/ 到/ 社会/ 生活/ 的/ 各个方面/ ,/ 扩展/ 了/ 传统/ 的/ 网络应用/ 模式/ ./ 高效/ 的/ 音视频/ 压缩/ 格式/ 、/ 价格低廉/ 的/ 高清/ 网络/ 摄像头/ 和/ 灵活/ 组网/ 的/ AdHoc/ 网络/ ,/ 延展/ 了/ 人们/ 可视/ 、/ 可/ 听/ 、/ 可控/ 场景/ ,/ 为/ 现场/ 新闻/ 发布会/ 、/ 安防/ 监控/ 等/ 新兴/ 应用/ 提供/ 了/ 必要/ 的/ 基础/ ./ 因此/ ,/ 如何/ 提高/ 网络服务/ 模式/ 对/ 新兴/ 应用/ 的/ 支持/ 越来越/ 受到/ 广泛/ 重视/ ./ 1999/ 年/ 卡内基/ ·/ 梅隆/ 大学/ 的/ 研究者/ 首次/ 提出/ 网络/ 提供/ 服务/ 的/ 源/ 节点/ 之间/ 存在/ 依赖/ 关系/ [/ 1/ ]/ ,/ 需要/ 对/ 各/ 应用/ 资源/ 进行/ 整体规划/ ,/ 提高/ 网络/ 利用效率/ ./ 文献/ [/ 2/ ]/ 对/ 多/ 数据源/ 联合/ 协作/ 工作/ 的/ 场景/ 进行/ 了/ 分析/ ./ 图/ 1/ 表示/ 了/ 不同/ 位置/ 的/ 网络/ 摄像头/ 依据/ 空间/ 相关性/ “/ 拼接/ ”/ 合成/ 一幅/ 完整/ 的/ 监控/ 画面/ 来/ 对/ 一个/ 监控/ 区域/ 联合/ 进行/ 监控/ 的/ 场景/ ./ 多/ 摄像头/ 联合/ 工作/ ,/ 克服/ 单一/ 摄像头/ 取景/ 空间/ 局限性/ ,/ 扩展/ 目标/ 监控/ 范围/ ,/ 提高/ 监控/ 任务/ 质量/ ./ 视觉/ 认知/ 心理学/ 研究/ 发现/ ,/ 整体/ 图像/ 主观/ 质量/ 取决于/ 画面质量/ 最低/ 的/ 部分/ ./ 图像/ 整体/ 质量/ 与/ 图像/ 分块/ 之间/ 存在/ 一定/ 约束/ 关系/ ,/ 因此/ ,/ 对/ 存在/ 多/ 数据源/ 联合/ 协作/ 工作/ 的/ 网络/ ,/ 需要/ 具备/ 相应/ 的/ 网络服务/ 方式/ ,/ 保证/ 任务/ 完成/ 的/ 质量/ ./ 协作/ 的/ 概念/ 受到/ 越来越/ 多/ 的/ 重视/ ,/ 至/ 2009/ 年/ 8/ 月/ 文献/ [/ 1/ ]/ 的/ 引用/ 次数/ 高达/ 162/ 次/ ./ 协作/ 的/ 思想/ 与/ 网络/ 朝着/ 自/ 组织/ 、/ 自/ 调节/ 、/ 自动化/ 、/ 智能化/ 的/ 方向/ 发展/ ,/ 越来越/ 受到/ 研究/ 界/ 的/ 重视/ ./ 2/ 研究/ 现状/ 1999/ 年/ 卡内基/ ·/ 梅隆/ 大学/ 的/ 研究者/ 首次/ 提出/ 联合/ 协作/ 的/ 概念/ [/ 1/ ]/ ./ 并/ 指出/ 存在/ 一些/ 复杂/ 的/ 网络应用/ 依赖/ 提供/ 服务/ 的/ 多个/ 源/ 节点/ 之间/ 相互协作/ ,/ 但/ 目前/ 缺乏/ 相应/ 的/ 网络服务/ 模式/ ./ 文献/ [/ 3/ ]/ 指出/ “/ 自然界/ 已经/ 表现/ 出/ 协作/ 物种/ 在/ 许多/ 生态环境/ 中/ 的/ 竞争/ 超过/ 了/ 自私/ 物种/ ,/ 把/ 协作/ 的/ 方法/ 引入/ 到/ 无线通信/ 系统/ 可以/ 达到/ 更/ 高/ 的/ 服务质量/ 、/ 完成/ 更/ 复杂/ 的/ 网络/ 任务/ ./ 从/ 通信/ 的/ 角度/ 来看/ ,/ 协作/ 包含/ 了/ 大量/ 的/ 技术/ ,/ 这些/ 技术/ 利用/ 了/ 多个/ 实体/ 协同/ 互动/ 的/ 优势/ 以及/ 共享资源/ ,/ 所有/ 这/ 一切都是/ 为了/ 提高/ 性能/ ”/ ./ 对/ 多数据流/ 联合/ 协作关系/ 的/ 研究/ 一直/ 延续/ 到/ 21/ 世纪/ 初才/ 有/ 进一步/ 的/ 发展/ ,/ 原因/ 主要/ 有/ 2/ 个/ 方面/ :/ (/ 1/ )/ 多/ 数据/ 协作/ 优化/ 是/ NP/ 难/ 问题/ ;/ (/ 2/ )/ 网络设备/ 及/ 音视频/ 采集/ 处理单元/ 仍/ 比较/ 昂贵/ ./ 随着/ 各种/ 设备/ 价格/ 越来越低/ 、/ 体积/ 越来越/ 小/ ,/ 自/ 组织/ 无线/ AdHoc/ 网络/ 满足/ 了/ 需要/ 灵活/ 组网/ 的/ 多/ 数据源/ 联合/ 协作/ 的/ 任务/ 要求/ ./ 对/ 基于/ 任务/ 协作/ 的/ AdHoc/ 网络服务/ 模式/ 的/ 研究/ 引起/ 了/ 国内外/ 多家/ 研究/ 机构/ 的/ 重视/ ./ 2008/ 年/ ,/ 宾夕法尼亚州/ 立/ 大学/ 和/ IBM/ 研究院/ [/ 4/ ]/ 首次/ 给出/ 基于/ 任务/ 协作/ 无线/ AdHoc/ 网络带宽/ 资源分配/ 模式/ ./ 每个/ 任务/ 有/ 3/ 个/ 相关/ 参数/ (/ Um/ ,/ 犃/ ,/ C/ )/ ,/ Um/ 为/ 任务/ 的/ 效用函数/ ,/ 效用函数/ 越大越/ 好/ ;/ 犃/ 为/ 转发/ 节点/ 流经/ 数据流/ 路由/ 矩阵/ ;/ C/ 为/ 转发/ 节点/ 传输/ 能力/ ./ 同年/ ,/ Eswaran/ 等/ 人/ [/ 5/ ]/ 对/ 算法/ 给出/ 严格/ 的/ 利亚/ 普/ 洛夫/ 稳定性/ 分析/ ,/ 证明/ 了/ 该/ 算法/ 的/ 全局/ 稳定/ 收敛/ 特性/ ./ 2008/ 年/ Globecom/ 会议/ 上/ ,/ Rowaihy/ 等/ 人/ [/ 6/ ]/ 把/ 网络/ 物理/ 拓扑/ 因素/ 考虑/ 进/ 多个/ 节点/ 协作/ 的/ 网络/ ,/ 利用/ 多个/ 节点/ 协同/ 增加/ 任务/ 内/ 数据流/ 的/ 服务/ 带宽/ ./ 2009/ 年/ ,/ Eswaran/ [/ 2/ ]/ 为了/ 改进/ 原有/ 模型/ 无法/ 保证/ 重要/ 数据流/ 服务质量/ 的/ 缺陷/ ,/ 提出/ 了/ 基于/ 协作/ 多/ 数据源/ 优先/ 分级/ 的/ 方案/ ./ 把/ 任务/ 内部/ 数据源/ 按/ 优先级/ 划分/ ,/ 把/ 资源/ 优先/ 分配/ 给/ 级别/ 高/ 的/ 数据流/ ,/ 以/ 区分/ 不同/ 数据流/ 对/ 任务/ 的/ 贡献/ ,/ 采用/ 梯度/ 法/ 求解/ 凸/ 规划/ 优化/ 模型/ ,/ 得到/ 任务/ 内/ 各/ 数据源/ 最优/ 速率/ ./ 但/ 该/ 方案/ 实验/ 结果显示/ 链路/ 长度/ 严重/ 影响/ 数据流/ 分配/ 带宽/ ,/ 并/ 不/ 完全/ 取决于/ 数据流/ 优先级/ ./ 同年/ ,/ Eswaran/ 等/ 人/ [/ 7/ ]/ 以/ NUM/ 模型/ 为/ 基础/ ,/ 通过/ 把/ 底层/ 无线/ 节点/ 能量消耗/ 数据/ 纳入/ 到/ 任务/ 协作/ 模型/ 中/ ,/ 把/ “/ 发送/ 节点/ 发射/ 能量/ 不/ 超过/ 节点/ 剩余/ 能量/ ”/ 为/ 最优/ 问题/ 约束条件/ ,/ 构造/ 无线网络/ 发射/ 能量/ 和/ 带宽/ 之间/ 的/ 代价/ 关系/ ,/ 获得/ 任务/ 效用/ 最大/ 和/ 节点/ 发送/ 能量/ 最小/ 的/ Nash/ 均衡/ ./ 通过/ 改进/ 方案/ ,/ 缓解/ 了/ 任务/ 内/ 带宽/ 与/ 能耗/ 之间/ 的/ 矛盾/ ,/ 得到/ 了/ 任务/ 内/ 各/ 数据流/ 带宽/ 和/ 能耗/ 的/ 合理/ 折中/ ./ 鉴于/ 某些/ 任务/ 的/ 效用函数/ 时变/ 特性/ ,/ Eswaran/ 等/ 人/ [/ 8/ ]/ 针对/ 以前/ 任务/ 效用/ 仅/ 考虑/ 当前/ 时刻/ 最优/ ,/ 未/ 考虑/ 一段时间/ 内/ 网络/ 任务/ 效用/ 最大/ 的/ 缺陷/ ,/ 采用/ 二/ Page3/ 阶/ 连续/ 可导/ 任务/ 效用函数/ ,/ 重新/ 建立/ 非线性/ 优化/ 模型/ ./ 该/ 方法/ 提高/ 了/ 任务/ 在/ 较长/ 一段时间/ 的/ 效用/ 总和/ ,/ 提高/ 了/ 具有/ 时变/ 特性/ 的/ 多数据流/ 任务/ 服务质量/ ./ 2010/ 年/ 的/ 文献/ [/ 9/ ]/ 是/ 最新/ 的/ 多/ 数据源/ 任务模型/ MCS/ ./ 该/ 模型/ 与/ 上述/ 模型/ 不同/ ,/ 不再/ 采用/ 静态/ 效用函数/ U/ (/ xs/ )/ ,/ 而是/ 对/ 效用函数/ 进行/ 如下/ 修正/ :/ 其中/ ,/ AccuracyA/ (/ t/ )/ 为/ 时刻/ t/ 反馈/ 回/ 的/ 任务/ 对/ 服务/ 性能指标/ 的/ 判断/ 值/ ,/ 由/ 任务/ 接收端/ 决定/ ./ 模型/ 不断/ 获取/ 用户/ 的/ 主观/ 效用/ ,/ 把/ 用户/ 对/ 任务/ 质量/ 的/ 满意/ 程度/ 与/ 网络/ 参数/ 映射/ 起来/ ,/ 利用/ 反馈/ 信息/ 修正/ 网络/ 原始/ 效用函数/ ,/ 提高/ 网络/ 对/ 任务/ 服务/ 的/ 自适应性/ ,/ 提高/ 网络/ 利用率/ ./ 基于/ 无线网络/ 协作/ 机制/ 的/ 研究/ 国内/ 起步/ 较晚/ ,/ 主要/ 集中/ 在/ 物理层/ 、/ 数据/ 链路层/ 和/ 网络/ 编码/ [/ 10/ ]/ ./ 综上所述/ ,/ 寻找/ 合理/ 的/ 网络/ 多/ 节点/ 任务/ 协作/ 控制措施/ ,/ 进行/ 基于/ 任务/ 协作/ 进行/ 的/ 研究/ 属于/ 起步/ 阶段/ ,/ 并/ 逐渐/ 受到重视/ [/ 11/ ]/ ./ 3/ 基于/ 协作/ 任务/ 的/ 关键问题/ 3.1/ 问题/ 的/ 提出/ 网络/ 任务/ 的/ 复杂化/ 使/ 任务/ 同时/ 需要/ 多个/ 无线/ 节点/ 数据流/ 协同工作/ ,/ 各/ 数据源/ 共同/ 决定/ 协作/ 任务/ 用户/ 的/ 感官/ 质量/ ./ 目前/ ,/ 任务/ 协作/ 方法/ 依据/ 事先/ 制定/ 的/ 静态/ 资源/ 效用函数/ 曲线/ 根据/ 价格/ 求得/ 资源/ ./ 这种/ 分配资源/ 方式/ 适合/ 相互/ 独立/ 竞争/ 资源/ 的/ 数据流/ ,/ 不/ 满足/ 有/ 联合/ 约束/ 关系/ 的/ 数据流/ ./ 因为/ 在/ 现有/ 网络/ 控制/ 机制/ 下/ ,/ 各/ 数据流/ 带宽/ 之间/ 的/ 平衡/ 关系/ 容易/ 被/ 外界/ 打破/ ,/ 部分/ 数据流/ 带宽/ 缺失/ 造成/ 整个/ 任务/ 质量/ 下降/ 或/ 失败/ ./ 下面/ 对/ 一个/ 监控/ 场景/ 举例说明/ ./ 场景/ 1/ ./ 图/ 2/ 显示/ 以/ 链式/ 静态/ 拓扑/ 为例/ 的/ 常见/ 场景/ 监控/ ./ 4/ 条/ 视频/ 数据流/ 分别/ 传回/ 节点/ 5/ ,/ “/ 拼接/ ”/ 成/ 一个/ 更大/ 尺寸/ 的/ 监控/ 图像/ ./ 假设/ 各/ 链路/ 带宽/ 大小/ 为/ 2Mbps/ ,/ 采用/ 文献/ [/ 12/ ]/ 中/ GPA/ 算法/ 和/ 文献/ [/ 2/ ]/ 中/ MST/ 算法/ 分别/ 得到/ 网络/ 收敛/ 状态/ 下/ 各/ 数据流/ 最优/ 带宽/ 分配/ ./ 从图/ 3/ (/ a/ )/ 中/ 观察/ 可/ 得/ ,/ 各条/ 数据流/ 收敛/ 后/ 所得/ 带宽/ 差异/ 很大/ ./ 如果/ 以/ 数据流/ 平均/ 带宽/ 作为/ 期望/ 带宽/ ,/ 则/ 带宽/ 偏差/ 最大/ 为/ 134/ %/ ,/ 最小/ 为/ 23/ %/ ,/ 任务/ 内/ 数据流/ 负载平衡/ 性/ 很/ 差/ ./ 研究/ 从/ 节点/ 1/ 到/ 节点/ 4/ 传回/ 视频流/ 构成/ 的/ 图像/ 质量/ ,/ 可以/ 发现/ 图像/ 各/ 部分/ 质量/ 好坏/ 差异/ 过大/ ./ 原因/ 在于/ :/ 现有/ 的/ 网络/ 分配资源/ 机制/ 基于/ 单个/ 数据流/ 静态/ 的/ 效用函数/ ,/ 难以/ 保证/ 任务/ 对/ 数据流/ 分布/ 关系/ 的/ 约束/ ,/ 导致/ 监控/ 任务/ 失败/ ./ 通过/ 对/ 任务/ 接收端/ 流量/ 大小/ 进行/ 分析/ 可以/ 发现/ :/ 现有/ 资源分配/ 框架/ 中多/ 数据源/ 联合/ 任务/ 完成/ 效率/ 不高/ ,/ 成为/ 制约/ 网络/ 服务质量/ 提高/ 的/ 重要/ 因素/ 之一/ ./ 已有/ 的/ 研究/ 已经/ 证实/ 节点/ 间/ 友好/ 的/ 相互配合/ 会/ 增加/ 无线网络/ 性能/ [/ 13/ ]/ ,/ 优化/ 多/ 数据源/ 联合/ 协作/ 的/ AdHoc/ 网络/ 控制/ 机制/ 的/ 任务/ 亟待/ 进行/ ./ 本文/ 期望/ 提出/ 在/ 原有/ 静态/ 效用函数/ 基础/ 之上/ ,/ 把/ 任务/ 对/ 资源/ 的/ 要求/ 量化/ 引入/ 到/ 原/ 资源/ 模型/ ,/ 修正/ 含/ 协作/ 依赖/ 的/ 自/ 适应/ 调节/ 控制技术/ ,/ 根据/ 任务/ 的/ 需要/ 自动/ 调整/ 数据流/ 带宽/ 分配/ ,/ 从而/ 进行/ 有/ 针对/ 的/ 预留/ 资源/ ./ 改善/ 多/ 数据源/ 协作/ 的/ 任务/ 服务质量/ ,/ 提高/ 网络/ 利用效率/ ./ 3.2/ 协作/ 及/ 任务/ 的/ 定义/ 定义/ ./ 文献/ [/ 3/ ]/ 和/ 文献/ [/ 2/ ]/ 给出/ 了/ 协作/ 和/ 任务/ 相应/ 的/ 定义/ 1/ ./ 协作/ ./ 协作/ 是/ 指/ 一组/ 实体/ 共同/ 工作/ 、/ Page4/ 以/ 实现/ 共同/ 或/ 单个/ 目标/ 的/ 策略/ ./ 协作/ 可以/ 看作/ 给予/ 、/ 共享/ 或/ 允许/ 做/ 一些/ 事情/ 从而/ 获得/ 一些/ 好处/ 的/ 行为/ ./ 协作/ 策略/ 要求/ 每个/ 实体/ 都/ 评估/ 各自/ 的/ 处境/ ,/ 并/ 根据/ 实情/ 作出/ 决定/ ./ 定义/ 2/ ./ 任务/ ./ 多个/ 网络/ 实体/ 通过/ 一定/ 协作/ 策略/ 和/ 协作/ 行为/ 共同完成/ 的/ 目标/ ./ 通信/ 协作/ (/ communicationscooperation/ )/ 的/ 目标/ 是/ 在/ 不/ 牺牲/ 过多/ 效率/ 的/ 情况/ 下/ ,/ 遵守/ 一定/ 的/ 通信协议/ 和/ 传输方式/ ,/ 保证/ 某些/ 特殊/ 目标/ 或/ 有/ 协作/ 需求/ 的/ 服务/ ./ 定义/ 3/ ./ 多/ 数据源/ 任务/ 协作/ 模型/ ./ 假设/ 网络/ 中/ 存在/ 一组/ 数据流/ i/ (/ i/ ∈/ 1/ ,/ 2/ ,/ …/ ,/ N/ )/ 相互/ 独立/ ,/ 经过/ 资源/ 竞争/ 的/ 多/ 跳/ 路径/ ,/ 传输/ 至/ 相同/ 的/ 接收端/ ,/ 共同完成/ 一个/ 服务/ UM/ ,/ 则/ 多/ 数据源/ 任务/ 协作/ 模型/ 目标/ 定义/ 为/ Maximize/ {/ UM/ }/ ,/ UM/ =/ Λ/ [/ u1/ (/ x1/ )/ ,/ …/ ,/ ui/ (/ xi/ )/ ,/ …/ ,/ uN/ (/ xN/ )/ ]/ ,/ xi/ =/ argmaxxi/ ∈/ Ii/ 其中/ ,/ Λ/ [/ ·/ ]/ 表示/ 相关性/ 函数/ ;/ xi/ 为/ 数据流/ i/ 的/ 速率/ ;/ ui/ (/ xi/ )/ 为/ 数据流/ i/ 的/ 资源/ 利用率/ ;/ UM/ 为/ 任务/ M/ 的/ 资源/ 利用率/ ./ 3.3/ 现有/ 技术/ 及/ 存在/ 问题/ 的/ 分析/ 当前/ 具有/ 代表性/ 的/ 多/ 数据源/ 资源分配/ 技术/ 主要/ 分为/ 两类/ :/ 一类/ 是/ 2006/ 年/ Yuan/ 等/ 人/ [/ 12/ ]/ 提出/ 的/ GPA/ 算法/ 为/ 代表/ 的/ 独立/ 数据流/ 竞争/ 模型/ ;/ 另一类/ 是/ 2009/ 年/ 文献/ [/ 2/ ]/ 提出/ 的/ MST/ 数据流/ 线性/ 相加/ 模型/ ./ 2006/ 年/ Yuan/ 等/ 人/ [/ 12/ ]/ 的/ GPA/ 算法/ 首次/ 针对/ 独立/ 数据流/ 通过/ 多/ 跳/ 路径/ 在/ AdHoc/ 网络/ 传输/ 的/ 情况/ 建立/ 了/ 数据模型/ ./ GPA/ 算法/ 以/ 协议/ 模型/ 为/ 干扰/ 模型/ ,/ 在/ 满足/ 网络资源/ 约束/ 的/ 条件/ 下/ 分析/ 了/ 多/ 跳/ 数据流/ 带宽/ 资源分配/ 非线性/ 优化/ 模型/ ./ 通过/ 利用率/ 函数/ Uf/ (/ xf/ )/ 来/ 描述/ 每/ 一个/ 端到/ 端的/ 数据流/ f/ ∈/ F/ :/ / +/ →/ / +/ ,/ 该/ 函数/ 表示/ 了/ 相关/ 终端用户/ 的/ 满意度/ ./ 假设/ 在/ 区间/ [/ 0/ ,/ ]/ 内/ ,/ 利用率/ 函数/ Uf/ (/ ·/ )/ 是/ 递增/ 的/ 连续/ 可/ 微分/ 凹/ 函数/ ,/ 且/ 利用率/ 函数/ Uf/ (/ ·/ )/ 是/ 相加/ 性/ 函数/ ,/ 这样/ 总体/ 的/ 分配/ 速率/ 利用率/ x/ =/ (/ xf/ ,/ f/ ∈/ F/ )/ 就/ 等于/ ∑/ f/ ∈/ F/ 约束条件/ 为/ / e/ ∈/ E/ ,/ ∑/ f/ ∈/ Fe/ (/ e/ ∈/ E/ )/ 为/ 网络/ 中/ 的/ 资源/ 要素/ ,/ Ce/ 为/ 网络/ 容量/ ,/ Ref/ 是/ 指/ 单位/ 数据流/ f/ 使用/ 的/ 资源/ 要素/ e/ 的/ 数量/ ./ 通过/ 分布式/ 算法/ 求解/ ,/ 可以/ 得到/ 优化/ 框架/ 下/ 数据流/ 速率/ 最优/ 值/ 矢量/ ./ 每条/ 数据流/ 在/ 网络资源/ 竞争/ 时/ 是/ 独立/ 进行/ 的/ ,/ 在/ 这种/ 情况/ 下/ 任务/ 的/ 资源/ 优化/ 等同于/ 对/ 每条/ 数据流/ 带宽/ 资源/ 的/ 优化/ ./ 2009/ 年/ 的/ 文献/ [/ 2/ ]/ 提出/ 了/ 一种/ 多/ 数据源/ 协作/ 优先/ 分级/ 的/ MST/ 传输/ 方案/ ./ 方法/ 是/ :/ 把/ 任务/ 内/ 数据源/ 按/ 优先级/ 划分/ ,/ 把/ 资源/ 优先/ 分配/ 给/ 级别/ 高/ 的/ 数据流/ ,/ 以/ 区分/ 不同/ 数据流/ 对/ 任务/ 的/ 贡献/ ,/ 任务/ 的/ 效用/ 计算方法/ 为/ 各/ 独立/ 数据流/ 效用/ 的/ 线性/ 相加/ ./ max/ ∑/ s/ ∈/ S/ ∑/ m/ ∈/ Ms/ ./ t/ ./ ∑/ / (/ k/ ,/ s/ )/ ∈/ l/ 其中/ fm/ (/ 犡/ )/ 是/ 任务/ 内/ 数据流/ 矢量/ 犡/ 优先级/ 函数/ ,/ 犇/ 表示/ 固定/ 优先级/ 常数/ 矩阵/ ./ 采用/ 梯度/ 法/ 求解/ 凸/ 规划/ 优化/ 模型/ ,/ 得到/ 任务/ 内/ 各/ 数据源/ 最优/ 速率/ ./ 通过/ 事前/ 对/ 多/ 数据源/ 的/ 优先级/ 区分/ ,/ 期望/ 能够/ 保障/ 任务/ 某些/ 重要/ 的/ 数据流/ 在/ 网络/ 传输/ 过程/ 中/ 受到/ 更/ 多/ 的/ 重视/ ,/ 缓解/ 网络/ 恶化/ 造成/ 的/ 重要/ 数据流/ 丢失/ ./ MST/ 算法/ 对/ 任务/ 内/ 所有/ 数据流/ 采用/ 简单/ 比例/ 相加/ 的/ 计算方法/ ./ 分析/ 图/ 3/ ,/ 以/ GPA/ 为/ 代表/ 的/ 独立/ 数据流/ 竞争/ 模型/ 和/ 以/ MST/ 为/ 代表/ 的/ 数据流/ 效用/ 线性/ 相加/ 模型/ 的/ 任务/ 都/ 不/ 满足/ 监控/ 任务/ 对/ 图像/ 质量/ 的/ 要求/ ,/ 链路/ 长度/ 及/ 资源/ 消耗/ 严重/ 影响/ 每/ 一个/ 数据流/ 所/ 分配/ 的/ 带宽/ ,/ 即使/ 采用/ 数据流/ 优先级/ 的/ 改进/ 方式/ 也/ 收效甚微/ ,/ 达/ 不到/ 监控/ 图像/ 期望/ 的/ 各/ 数据流/ 速率/ 分布/ ./ 原因/ 在于/ 依靠/ 静态/ 的/ 效用函数/ 是/ 开环/ 控制/ ,/ 不能/ 描述/ 网络/ 环境/ 下/ 数据流/ 与/ 任务/ 之间/ 的/ 相互/ 关系/ ,/ 必须/ 建立/ 任务/ 对/ 数据流/ 动态/ 的/ 反馈/ 模型/ ,/ 优化/ 多/ 数据源/ 任务/ 的/ 资源分配/ 效率/ ./ 4/ 基于/ 协作/ 机制/ 无线/ AdHoc/ 网络/ 模型/ 4.1/ 静态/ 效用函数/ 本文/ 首先/ 采用/ R/ -/ U/ (/ Resource/ -/ Utility/ )/ 带宽/ -/ 效用函数/ 描述/ 静态/ 的/ 数据流/ 与/ 任务/ 间/ 的/ 依赖/ 关系/ ./ 需要/ 指出/ 资源/ 效用函数/ 描述/ 的/ 是/ 数据流/ 对/ 所/ 分配/ 带宽/ 的/ 满意/ 程度/ ,/ 曲线/ 具体/ 形式/ 已有/ 西门子/ 等/ 大型/ 研究/ 机构/ 专门/ 进行/ 研究/ ,/ 本文/ 采用/ 文献/ [/ 14/ ]/ 给出/ 的/ 混合/ 数据类型/ 表示/ 的/ 效用函数/ ./ 对于/ 任务/ m/ ,/ 效益/ 函数/ 表示/ 为/ ∑/ s/ ∈/ S/ 其中/ s/ 是/ 数据流/ 集合/ S/ 中/ 一个/ 独立/ 的/ 发送/ 源/ ;/ um/ ,/ s/ (/ bm/ ,/ s/ (/ l/ )/ )/ 表示/ 源/ 节点/ s/ 发出/ 的/ 数据流/ ,/ 在/ 带宽/ 等级/ 为/ l/ 时/ 产生/ 的/ 效用/ ./ Page5/ 采用/ 离散/ 效用函数/ 形式/ ,/ 把/ 任务/ 的/ 资源/ 效用/ 分级/ ,/ 每/ 一级/ 内/ 各/ 数据流/ 带宽/ 与/ 效用/ 的/ 关系/ 一一对应/ ./ 每条/ 数据流/ 把/ 资源/ 效用函数/ 近似/ 为/ 轮廓/ 凸/ 的/ 曲线/ ,/ 再/ 分段/ 线性化/ ,/ 具体/ 形式/ 参见/ 文献/ [/ 15/ ]/ ./ 对于/ 数据源/ s/ 所需/ 带宽/ 的/ 某个/ 分段/ 资源/ ,/ 定义/ 其为/ s/ 的/ 一个/ 子流/ k/ ,/ 带宽/ 大小/ 限制/ 为/ bim/ ,/ s/ / Bkm/ ,/ s/ -/ Bk/ -/ 1m/ ,/ s/ ./ 网络/ 传输/ 该子流/ 产生/ 的/ 边际/ 效用/ (/ 单位/ 效用/ )/ 为/ λ/ km/ ,/ s/ =/ ukm/ ,/ s/ -/ uk/ -/ 1m/ ,/ sBkm/ ,/ s/ -/ Bk/ -/ 1m/ ,/ s/ ./ 则/ 基于/ 任务/ 效用/ 最优化/ 问题/ 表述/ 如下/ :/ max/ ∑/ m/ ∈/ MSubjectto/ ∑/ m/ ∑/ s/ 其中/ ,/ 犡/ m/ 是/ 组成/ 一个/ 任务/ m/ 所有/ 的/ 数据源/ 矢量/ ,/ Bjmax/ 是/ 无线/ 干扰/ 区域/ j/ 的/ 最大/ 可用/ 带宽/ ,/ bmaxm/ ,/ s/ 是/ 数据源/ s/ 请求/ 的/ 最大/ 带宽/ ./ 4.2/ 动态/ 调节/ 机制/ 一个/ 动态/ 系统/ ,/ 资源/ 需要/ 重新分配/ ,/ 效用函数/ 仅仅/ 代表/ 了/ 时间/ t/ 时刻/ 的/ 暂时/ 效用/ 值/ (/ ui/ (/ t/ )/ )/ ./ 用户/ 效用函数/ 的/ 最终/ 目的/ 是/ 使/ 应用/ (/ 用户/ )/ 可以/ 量化/ 地/ 对/ 资源分配/ 结果/ 进行/ 评价/ ./ 系统/ 分配资源/ 给/ 一个/ 新/ 的/ 应用/ 流/ ,/ 或者/ 更改/ 应用/ 流/ 资源/ 的/ 大小/ ,/ 都/ 可以/ 看成/ 是/ 资源/ 的/ 提供者/ 与/ 用户/ 重新/ 协商/ QoS/ (/ QoSContract/ )/ 的/ 结果/ ./ R/ -/ U/ 函数/ 把/ 资源分配/ 的/ 结果/ 对应/ 一定/ 的/ 效用/ ,/ 并/ 以/ 曲线/ 表示/ ,/ 因此/ 网络/ 协商/ 的/ 过程/ 被/ 简化/ 了/ ./ 独立/ 的/ 数据流/ 竞争/ ,/ 采用/ 静态/ 资源/ 效用函数/ 大大/ 提升/ 了/ 网络/ 利用率/ ,/ 但/ 对于/ 存在/ 多/ 数据源/ 协作/ 竞争/ 的/ 网络/ ,/ 需要/ 进一步/ 研究/ 合理/ 的/ 网络服务/ 模式/ ./ 本文/ 采用/ 了/ 动态/ 调整/ 资源/ 边际/ 效用/ (/ 单位/ 效用/ )/ 的/ 方法/ ,/ 让/ 任务/ 接收端/ 对/ 资源分配/ 结果/ 进行/ 评价/ ,/ 然后/ 把/ 评价/ 结果/ 带入/ 下/ 一次/ 分配/ 的/ 方式/ 产生/ 影响/ ./ 思路/ 来自/ 2006/ 年/ Calin/ 发表/ 在/ 《/ IEEETransactiononParallelandDistributedSystems/ 》/ 的/ “/ Time/ -/ AwareUtility/ -/ BasedResourceAllocationinWirelessNet/ -/ works/ ”/ [/ 14/ ]/ ./ 该文/ 把/ 丢/ 包率/ 、/ 分配/ 间隔/ 数值/ 量化/ ,/ 修正/ 静态/ 的/ R/ -/ U/ 函数/ ,/ 优化/ 无线/ 基站/ 内/ 的/ 带宽/ 资源/ 使用/ 效率/ ./ 考虑/ 到/ 各/ 数据流/ 与/ 任务/ 有/ 一定/ 的/ 相关性/ ,/ 原有/ 模型/ 主要/ 考虑/ 数据流/ 独立/ 的/ 利用效率/ ,/ 没有/ 对/ 任务/ 利用效率/ 整体/ 考虑/ ,/ 导致/ 任务/ 的/ 完成/ 质量/ 不高/ ./ 本文/ 在/ 任务/ 接收端/ 把/ 应用/ 的/ 需求量/ 化/ ,/ 建立/ 任务/ 内/ 数据流/ 资源/ 效用函数/ ,/ 把/ 数据流/ 协作/ 相关/ 信息/ 引入/ 到/ 资源/ 再/ 分配/ 模型/ 中/ ./ 动态/ 修正/ 原/ 静态/ 资源/ 效用函数/ ,/ 达到/ 合理/ 利用/ 资源/ ,/ 提高/ 网络服务/ 性能/ 的/ 目的/ ./ 具体做法/ 是/ :/ 首先/ ,/ 采用/ 最小/ 逼近/ 原则/ ./ 对于/ 可能/ 出现/ 的/ 数据/ 组合/ ,/ 选择/ 满足/ 率/ 大于/ 0/ 小于/ 1/ 最大/ 的/ 那/ 一个/ 组合/ 进行/ 调节/ ./ 小于/ 1/ 表示/ 该/ 数据流/ 带宽/ 不/ 满足/ 任务/ 等级/ ;/ 大于/ 1/ 表示/ 该/ 数据流/ 带宽/ 大于/ 或/ 等于/ 此/ 任务/ 等级/ ./ 通过/ 动态/ 调节/ 这一/ 等级/ 内/ 各/ 数据流/ 带宽/ 分配/ ,/ 优化/ 网络/ 的/ 资源配置/ ./ 比如/ :/ 假设/ 网络/ 内/ ,/ 一个/ 完整/ 的/ 任务/ 由/ 5/ 个/ 数据流/ 组成/ ./ 在/ 某个/ 时刻/ ,/ 任务/ 接收端/ 对/ 任务/ m/ 个/ 数据流/ 判断/ 后/ 得到/ 下列/ 矩阵/ 形式/ :/ 犃/ =/ 矩阵/ 犃/ 内/ 每个/ 元素/ Ai/ ,/ j/ 有/ 3/ 种/ 表示/ 形式/ ,/ 用来/ 指示/ 收到/ 的/ 数据流/ 情况/ ./ Aij/ (/ m/ )/ =/ 0/ 表示/ 任务/ m/ 等级/ 为/ i/ 的/ 数据流/ j/ 不/ 满足要求/ ;/ Ai/ ,/ j/ (/ m/ )/ =/ 1/ 表示/ 任务/ m/ 等级/ 为/ i/ 的/ 数据流/ j/ 刚好/ 满足需要/ ;/ Ai/ ,/ j/ (/ m/ )/ =/ 2/ 表示/ 任务/ m/ 等级/ i/ 的/ 数据流/ j/ 大于/ 所/ 需要/ 的/ 带宽/ 标准/ ./ 对于/ 一个/ 由/ 5/ 个/ 数据流/ 组成/ 的/ 任务/ m/ ,/ 矩阵/ 的/ 行/ 表示/ 任务/ 可/ 划分/ 的/ 等级/ ./ 在/ 本例/ 中/ ,/ i/ =/ 4/ ,/ 表示/ 采用/ 4/ 种/ 不同/ 的/ 任务/ 等级/ ;/ j/ =/ 5/ 表示/ 任务/ m/ 是/ 由/ 5/ 个/ 数据流/ 工作/ 组成/ ./ 接收端/ 对/ 矩阵/ 犃/ 按/ 行/ 搜索/ ,/ 搜索/ 条件/ 为/ l/ =/ minicount/ (/ Ai/ ,/ j/ =/ 0/ )/ / A/ ~/ ,/ j/ {/ 任务/ 要求/ 的/ 数据流/ 数目/ 最少/ 的/ 那个/ 等级/ ./ 在/ 本例/ 中/ ,/ 可以/ 判断/ 得到/ l/ =/ 3/ ./ 基于/ 默认/ 任务/ 的/ 重要性/ 高于/ 单个/ 数据流/ ,/ 所以/ 找出/ 任务/ 等级/ 提高/ 的/ 临界点/ ,/ 修改/ 各/ 数据流/ 单位/ 效用函数/ ./ 然后/ ,/ 根据/ 任务/ 内/ 带宽/ 不/ 匹配/ 情况/ ,/ 修正/ 边际/ 效用/ (/ 单位/ 效用/ )/ ,/ 增加/ 带宽/ 或/ 减低/ 带宽/ ./ 当/ 数据流/ 带宽/ 比例/ 已经/ 合理/ 时/ ,/ 也/ 修正/ 数据流/ 边际/ 效用/ ,/ 稳定/ 数据流/ 竞争/ 带宽/ 能力/ ./ 修正/ 算法/ 满足/ 以下/ 约束/ A1/ )/ ~/ A3/ )/ ./ A1/ )/ 增加/ 带宽/ ./ 设/ 任务/ 流/ m/ 中源端/ s/ 的/ 带宽/ 原始/ 级别/ 为/ j/ ,/ 需要/ 增加/ 带宽/ 级别/ 到/ d/ ./ 则/ 这/ 两级/ 效用/ 之差/ 为/ uscale/ =/ um/ ,/ s/ (/ d/ )/ -/ um/ ,/ s/ (/ j/ )/ ,/ / 1/ / j/ / d/ / k/ ,/ 其中/ ,/ k/ 为/ 任务/ 中/ 效用/ 级别/ 的/ 最大数/ ;/ l/ 表示/ 调整/ 后/ 的/ 原/ 带宽/ 级别/ l/ ;/ z/ 表示/ 调整/ 后/ 的/ 原/ z/ 带宽/ 级别/ ./ 调整/ 方式/ 为/ um/ ,/ s/ (/ l/ )/ =/ um/ ,/ s/ (/ l/ )/ -/ (/ d/ -/ l/ )/ uscale/ ,/ / 1/ / l/ </ d/ ,/ um/ ,/ s/ (/ z/ )/ =/ um/ ,/ s/ (/ z/ )/ ,/ / d/ / z/ / k/ ./ A2/ )/ 减少/ 带宽/ ./ 设/ 任务/ m/ 内/ 数据源/ 端/ s/ 的/ 带宽/ 原始/ 级别/ 为/ j/ ,/ 需要/ 减低/ 带宽/ 级别/ 到/ d/ ./ 则/ 这/ 两级/ 效用/ 之差/ 为/ Page6uscale/ =/ um/ ,/ s/ (/ j/ )/ -/ um/ ,/ s/ (/ d/ )/ ,/ / 1/ / d/ / j/ / k/ ,/ 其中/ ,/ k/ 为/ 任务/ 中/ 效用/ 级别/ 的/ 最大数/ ;/ l/ 表示/ 调整/ 后/ 的/ 原/ 带宽/ 级别/ l/ ;/ z/ 表示/ 调整/ 后/ 的/ 原/ z/ 带宽/ 级别/ ./ 调整/ 方式/ 为/ um/ ,/ s/ (/ l/ )/ =/ um/ ,/ s/ (/ l/ )/ -/ (/ j/ -/ l/ )/ uscale/ ,/ / 1/ / l/ </ j/ ,/ um/ ,/ s/ (/ z/ )/ =/ um/ ,/ s/ (/ j/ )/ ,/ / j/ / z/ / k/ ./ A3/ )/ 保持/ 带宽/ ./ 需要/ 稳定/ 带宽/ ,/ 避免/ 网络资源/ 再/ 分配/ 失去/ 已有/ 带宽/ 份额/ ./ 设/ 任务/ m/ 中/ 数据流/ 源端/ s/ 的/ 带宽/ 原始/ 级别/ 为/ j/ ,/ j/ +/ 1/ 为/ 相邻/ 高/ 一级/ 带宽/ ./ 设/ uscale/ =/ um/ ,/ s/ (/ j/ )/ -/ um/ ,/ s/ (/ j/ +/ 1/ )/ ,/ / 1/ / j/ / k/ ,/ 其中/ ,/ k/ 为/ 任务/ 中/ 效用/ 级别/ 的/ 最大数/ ;/ l/ 表示/ 调整/ 后/ 的/ 原/ 带宽/ 级别/ l/ ;/ z/ 表示/ 调整/ 后/ 的/ 原/ z/ 带宽/ 级别/ ./ 调整/ 方式/ 为/ um/ ,/ s/ (/ l/ )/ =/ um/ ,/ s/ (/ l/ )/ -/ (/ j/ -/ l/ )/ uscale/ ,/ / 1/ / l/ </ j/ ,/ um/ ,/ s/ (/ z/ )/ =/ um/ ,/ s/ (/ z/ )/ ,/ / j/ / z/ / k/ ./ 定理/ 1/ ./ 当/ um/ ,/ s/ (/ m/ ∈/ M/ ,/ s/ ∈/ S/ )/ 按照/ 满足/ 约束条件/ A1/ )/ 增加/ 带宽/ ,/ 即/ 存在/ 最优/ 解/ xm/ ,/ s/ 满足/ 系统/ 最优化/ 问题/ (/ 2/ )/ ./ 证明/ ./ 按照/ 条件/ A1/ )/ 增加/ 带宽/ 后/ ,/ / 1/ / l/ </ d/ 且/ uscale/ =/ Δ/ um/ ,/ s/ (/ l/ )/ =/ um/ ,/ s/ (/ l/ )/ -/ um/ ,/ s/ (/ l/ -/ 1/ )/ const/ ./ 且/ um/ ,/ s/ (/ z/ )/ =/ um/ ,/ s/ (/ z/ )/ ,/ / d/ / z/ / k/ ,/ 因此/ ,/ Δ/ um/ ,/ s/ (/ z/ )/ =/ Δ/ um/ ,/ s/ (/ z/ )/ ,/ / d/ / z/ / k/ ./ 则/ 修正/ 后/ 的/ 资源/ -/ 效用/ 仍为/ 凹/ 函数/ ,/ 满足/ 最优/ 解/ 存在/ 条件/ 约束/ [/ 15/ ]/ ./ 定理/ 2/ ./ 当/ um/ ,/ s/ (/ m/ ∈/ M/ ,/ s/ ∈/ S/ )/ 按照/ 约束条件/ A2/ )/ 减少/ 带宽/ ,/ 即/ 存在/ 最优/ 解/ xm/ ,/ s/ 满足/ 系统/ 最优化/ 问题/ (/ 2/ )/ ./ 证明/ ./ 按照/ 条件/ A2/ )/ 减少/ 带宽/ 后/ ,/ / 1/ / l/ </ j/ 且/ uscale/ =/ Δ/ um/ ,/ s/ (/ l/ )/ =/ um/ ,/ s/ (/ l/ )/ -/ um/ ,/ s/ (/ l/ -/ 1/ )/ const/ ./ 且/ um/ ,/ s/ (/ z/ )/ =/ um/ ,/ s/ (/ j/ )/ ,/ / j/ / z/ / k/ ,/ 因此/ ,/ Δ/ um/ ,/ s/ (/ z/ )/ =/ 0/ ,/ / j/ / z/ / k/ ./ Page7/ 则/ 修正/ 后/ 的/ 资源/ -/ 效用/ 仍为/ 凹/ 函数/ ,/ 满足/ 最优/ 解/ 存在/ 条件/ 约束/ [/ 15/ ]/ ./ 定理/ 3/ ./ 当/ um/ ,/ s/ (/ m/ ∈/ M/ ,/ s/ ∈/ S/ )/ 按照/ 约束条件/ A3/ )/ 修改/ 资源/ 效用函数/ ,/ 即/ 存在/ 最优/ 解/ xm/ ,/ s/ 满足/ 系统/ 最优化/ 问题/ (/ 2/ )/ ./ 证明/ ./ / 1/ / l/ </ j/ 且/ uscale/ =/ const/ ./ Δ/ um/ ,/ s/ (/ l/ )/ =/ um/ ,/ s/ (/ l/ )/ -/ um/ ,/ s/ (/ l/ -/ 1/ )/ 且/ um/ ,/ s/ (/ z/ )/ =/ um/ ,/ s/ (/ z/ )/ ,/ / j/ / z/ / k/ 因此/ ,/ Δ/ um/ ,/ s/ (/ z/ )/ =/ Δ/ um/ ,/ s/ (/ z/ )/ ,/ / d/ / z/ / k/ ./ 则/ 修正/ 后/ 的/ 资源/ -/ 效用/ 仍为/ 凹/ 函数/ ,/ 满足/ 最优/ 条件/ 约束/ [/ 15/ ]/ ./ 修改/ 资源/ 效用函数/ 的/ 原理/ 在于/ :/ 修正/ 系统/ 效用函数/ 后/ ,/ 资源/ 边际/ 效用/ (/ 单位/ 效用/ 值/ )/ 改变/ ./ 网络/ 中/ 的/ 图/ 5MRD/ 算法/ 流程图/ bidkm/ ,/ s/ / q/ 表示/ 子流/ km/ ,/ s/ 在/ 最大/ 干扰/ 区域/ q/ 的/ 出价/ / m/ ,/ s/ / q/ 表示/ 子流/ km/ ,/ s/ 流经/ 最大/ 干扰/ 区域/ q/ 时/ ,/ 属于/ q/ 的/ 链路/ 数/ ./ yp/ 表示/ 最大/ 干扰/ 区域/ 的/ 门槛/ 价格/ ./ λ/ km/ ,/ s/ 表示/ 子流/ km/ ,/ s/ 效用/ ,/ λ/ km/ ,/ s/ =/ ukm/ ,/ s/ -/ uk/ -/ 1m/ ,/ s/ (/ 3/ )/ 在/ 数据流/ 发送/ 端/ ,/ 选择/ 最小/ 允许/ 带宽/ 作为/ 发送/ 速率/ ./ 5/ 实验/ 验证/ 由于/ Yuan/ 等/ 人/ [/ 13/ ]/ 的/ GPA/ 模型/ 和/ Misra/ 等/ 资源分配/ 单元/ 为/ 避免/ 系统/ 总/ 效用/ 下降/ ,/ 采用/ 的/ 分配原则/ 是/ 按照/ 单位/ 效用/ 从/ 高到/ 低/ 分配/ 带宽/ 份额/ ./ 4.3/ MSD/ 算法/ 的/ 分布式/ 实现/ 算法/ MSD/ 的/ 分布式/ 实现/ 如图/ 5/ 所示/ ./ (/ 1/ )/ 在/ 数据流/ 接收端/ ,/ 分析/ 用户/ 质量/ ,/ 调节/ 各条/ 数据流/ 的/ 单位/ 效用/ ,/ 并/ 反馈/ 回源端/ ./ 单位/ 效用/ (/ MarginalUtility/ )/ 定义/ 为/ u/ (/ r/ )/ =/ dU/ (/ r/ )/ “/ 用户/ 每/ 增加/ 一个/ 单位/ 资源/ 或/ 服务/ 额外/ 获得/ 的/ 满足感/ ”/ [/ 14/ ]/ ./ 依据/ 经济学/ 理论/ ,/ 分配模式/ 是/ 依据/ 资源/ 单位/ 效用/ 从/ 高到/ 低/ 的/ 顺序/ 进行/ ./ (/ 2/ )/ 在/ 网络/ 干扰/ 区域/ (/ maximalclique/ )/ 内/ ,/ 由/ 执行/ 计算/ 的/ 节点/ 独立/ 地/ 完成/ 数据流/ 竞价/ 和/ 资源分配/ ,/ 并/ 重新/ 更新/ 资源/ 价格/ ./ 网络/ 干扰/ 区域/ 价格/ 计算机/ 制/ 如下/ ,/ 各/ 符号/ 含义/ 如表/ 1/ 所示/ ./ 人/ [/ 2/ ]/ 的/ MST/ 模型/ 都/ 是/ 采用/ 静态/ 效用函数/ 建立/ 系统/ 数学模型/ ,/ 结果/ 非常/ 接近/ ,/ 见图/ 3/ ./ 所以/ 本文/ 实验/ 1/ ~/ 3/ 采用/ MST/ 的/ 仿真/ 结果/ 进行/ 对比/ ./ 同时/ 为了/ 对比/ 动态/ 效用/ 修正/ 算法/ 的/ 效率/ ,/ 采用/ 最新/ 文献/ MCS/ 算法/ [/ 9/ ]/ 与/ 本文/ 提出/ 的/ MRD/ 算法/ 进行/ 对比/ ./ 实验/ 1/ ./ 数据流/ 效用函数/ 相同/ 采用/ 图/ 2/ 所示/ 链式/ 无线/ AdHoc/ 静态/ 拓扑/ 结构/ ./ 干扰/ 距离/ 和/ 传输/ 距离/ 同为/ 250m/ ,/ 节点/ 和/ 节点/ 之间/ 相距/ 250m/ ./ 4/ 条/ 数据流/ 分别/ 从/ 节点/ 1/ ~/ 4/ 传输/ 回/ 节点/ 5/ ,/ 各条/ 链路/ 容量/ 均/ 为/ 2Mbps/ ./ 为/ 简单/ 起/ 见/ ,/ 每条/ 数据流/ 分为/ 10/ 级/ ,/ 每级/ 容量/ 为/ 0.2/ Mbps/ ./ 资源/ 效用/ 为/ [/ 0/ ~/ 10/ ]/ 的/ 凸/ 曲线/ ,/ 实验/ 1/ 假设/ 任务/ 内/ 各/ 数据流/ Page8/ 效用函数/ 曲线/ 相同/ ,/ 即/ 与/ lg2x/ 曲线/ 轮廓/ 大致/ 一致/ ./ 从图/ 6/ (/ a/ )/ 、/ (/ b/ )/ 可以/ 看出/ ,/ MRD/ 算法/ 相比/ MST/ 算法/ ,/ 数据/ 吞吐量/ 从/ 最大/ 0.72/ Mbps/ 缩小/ 到/ 0.4/ Mb/ -/ ps/ ;/ MST/ 算法/ 吞吐量/ 变化/ 范围/ 最大/ 为/ 0.62/ Mbps/ ,/ MRD/ 算法/ 吞吐量/ 变化/ 范围/ 最大/ 为/ 0.2/ Mbps/ ;/ 相对/ 图/ 6/ 各/ 数据流/ 流量/ 和/ 相对误差/ 再/ 观察/ 图/ 6/ (/ c/ )/ 、/ (/ d/ )/ 可以/ 发现/ MCS/ 算法/ 吞吐量/ 最大/ 为/ 0.55/ Mbp/ ,/ 仍然/ 大于/ MRD/ 算法/ ;/ MCS/ 算法/ 的/ 吞吐量/ 变化/ 范围/ 为/ 0.36/ Mbps/ ;/ 相对误差/ 最大/ 为/ 98/ %/ ,/ 仍然/ 大于/ MRD/ 算法/ 的/ 60/ %/ ./ 因此/ ,/ MRD/ 算法/ 采用/ 的/ 动态/ 效用/ 修正/ 方案/ 可以/ 实现/ 任务/ 内多/ 数据源/ 均衡/ 资源分配/ ,/ 提高/ 整体/ 资源/ 利用率/ ./ 实验/ 2/ ./ 数据流/ 效用函数/ 不同/ 本/ 实验/ 主要/ 考察/ 对/ 同一/ 地点/ 收集/ 不同/ 类型/ 数据/ 的/ 任务/ 场景/ ./ 例如/ ,/ 在/ 同一/ 任务/ 等级/ 内/ 的/ 视频流/ 和/ 音频/ 流所/ 需/ 带宽/ 是/ 不/ 一样/ 的/ ,/ 不同/ 的/ 资源/ 效用/ 曲线/ 对表/ 2/ 实验/ 中/ 采用/ 的/ 混合/ 数据业务/ 分组/ 164256128601800300VoiceService/ &/ AudioPhone220010005003007200600VideoMultimedia31282000512301200120FileTransfer/ 从表/ 3/ 中可得/ ,/ MRD/ 算法/ 所得/ 的/ 数据/ 改变/ 了/ f1/ 和/ f2/ 的/ 吞吐量/ ,/ 任务/ 内/ 数据流/ 带宽/ 分别/ 增加/ 增强/ 了/ 30Kbps/ 和/ 100bps/ ./ 该/ 实验/ 显示/ ,/ 当/ 网络/ 中/ 出现/ 误差/ 从/ 最大/ 137/ %/ 缩减到/ 最大/ 60/ %/ ./ 虽然/ 单个/ 数据流/ 的/ 吞吐量/ 没有/ 提高/ ,/ 但/ 任务/ 接收端/ 数据流/ 分布/ 更为/ 合理/ ,/ 所以/ 本/ 方案/ 不是/ 提高/ 单个/ 数据流/ 的/ 效用/ ,/ 而是/ 以/ 任务/ 为/ 整体/ 提高/ 资源/ 利用率/ ./ 应/ 不同/ 类型/ 的/ 多媒体/ 流/ ./ 本/ 实验/ 数据/ 采用/ 文献/ [/ 15/ ]/ 提供/ 的/ 混合/ 类型/ 数据/ ,/ 如表/ 2/ 所示/ ./ 本/ 实验/ 采用/ 文献/ 使用/ 的/ JAVA/ 工具/ 对/ 数据流/ 做/ 网络层/ 以上/ 的/ 仿真/ ,/ 默认/ 10Kbps/ 带宽/ 为/ 一个/ 数量级/ ./ 实验/ 仍然/ 采用/ 实验/ 1/ 的/ 场景/ 和/ 分级/ 方法/ ./ 2/ 条/ 数据流/ f1/ 、/ f2/ 分别/ 表示/ 类型/ 1/ 和/ 类型/ 2/ 联合/ 组成/ 的/ 音频/ 和/ 视频/ 多媒体/ 任务/ ,/ 同时/ 从/ 节点/ 1/ 发送/ 传递/ 到/ 节点/ 5/ ./ 同时/ 有/ 类型/ 3/ 数据流/ f3/ 从/ 节点/ 2/ 传输/ 到/ 节点/ 3/ ,/ 类型/ 3/ 数据流/ f4/ 从/ 节点/ 3/ 传输/ 到/ 节点/ 4/ ./ 表/ 2/ 最右/ 一栏/ 表示/ 效用函数/ 的/ 归一化/ 参数/ ,/ 用于/ 确定/ 不同/ 类型/ 的/ 效用函数/ 凸/ 轮廓/ ./ 多/ 数据源/ 任务/ 与/ 文件传输/ 类/ 完全/ “/ 弹性/ 流/ ”/ 共存/ 时/ ,/ 能够/ 获得/ 更/ 多/ 的/ 带宽/ 份额/ ,/ 提高/ 多媒体/ 任务/ 的/ 服务质量/ ./ Page9f1f2300f3210f4210/ 从表/ 4/ 中可得/ ,/ MRD/ 算法/ 与/ MCS/ 算法/ 相比/ ,/ f1/ 和/ f2/ 的/ 吞吐量/ 数据流/ 带宽/ 分别/ 增加/ 增强/ 了/ 10Kbps/ 和/ 20Kbps/ ;/ 非/ 弹性/ 流/ f3/ 和/ f4/ 的/ 吞吐量/ 分别/ 缩减/ 10Kbps/ 和/ 20Kbps/ ./ 该/ 实验/ 显示/ ,/ MRD/ 算法/ 和/ MCS/ 算法/ 都/ 可以/ 在/ 多媒体/ 任务/ 数据流/ 与/ “/ 弹性/ 流/ ”/ 共存/ 时/ 获得/ 更/ 多/ 的/ 带宽/ 份额/ ./ 但/ MRD/ 算法/ 与/ MCS/ 算法/ 相比/ ,/ 任务/ 内/ 多媒体/ 数据流/ 带宽/ 占用/ 比例/ 略有/ 提高/ ,/ 也/ 更/ 符合/ 多媒体/ 用户/ 对/ 服务质量/ 的/ 要求/ ./ f1f2f3f4/ 实验/ 3/ ./ 随机/ 网络拓扑/ ./ 在/ 实验/ 2/ 的/ 基础/ 上/ 采用/ 如图/ 7/ 所示/ 拓扑/ 结构/ ,/ 在/ 面积/ 为/ 600m/ ×/ 600m/ 的/ 区域/ 上/ 随机/ 分布/ 10/ 个/ 无线/ 节点/ ./ 假设/ 节点/ 8/ 、/ 节点/ 2/ 、/ 节点/ 1/ 和/ 节点/ 3/ 分别/ 传输/ 类型/ 2/ 数据流/ 至/ 节点/ 0/ 组成/ 一个/ 任务/ ./ 且/ 同时/ 有/ 2/ 条/ 类型/ 2/ 的/ 数据流/ 独立/ 传输/ ,/ 分别/ 从/ 节点/ 7/ 到/ 节点/ 6/ 、/ 从/ 节点/ 8/ 到/ 节点/ 4/ ./ 节点/ 传输/ 距离/ 与/ 干扰/ 距离/ 相等/ ,/ 同为/ 250m/ ;/ 数据流/ 每/ 一级/ 设为/ 10Kbps/ ;/ 链路/ 容量/ 为/ 2Mbps/ ./ 图中/ 粗线/ 线段/ 表示/ 虚拟/ 可/ 连通/ 无线/ 链路/ ./ 图/ 8/ 表示/ 的/ 是/ 网络/ 收敛/ 状态/ 下/ 任务/ 内/ 数据流/ 吞吐量/ ./ 观察/ 可/ 得/ ,/ MRD/ 算法/ 和/ MCS/ 算法/ 可以/ 有效/ 调整/ 任务/ 内/ 各条/ 数据流/ 带宽/ 分配/ ,/ 但/ 从/ 图/ 中/ 观察/ 可/ 得/ ,/ MRD/ 算法/ 的/ 数据流/ 吞吐量/ 总是/ 优于/ MCS/ 数据流/ 吞吐量/ ./ 在/ 本/ 实验/ 由于/ n0/ 节点/ 收到/ 的/ 4/ 条/ 视频流/ 不/ 在/ 同一/ 等级/ ,/ 则/ 计算/ 效用/ 时/ 按照/ 数据流/ 最低/ 的/ 级别/ 计算/ ./ 图/ 9/ 表示/ 了/ 网络/ 输入/ 负荷/ 与/ 网络/ 效用/ 的/ 关系/ ,/ 图中/ 横坐标/ 表示/ 比值/ ,/ 纵坐标/ 表示/ 网络/ 整体/ 效用/ ./ 横坐标/ 点/ 1/ 表示/ 的/ 网络/ 吞吐量/ 对应/ 图/ 8/ 中/ 的/ 网络/ 实际/ 输入/ 负荷/ ./ 可以/ 看出/ ,/ 随着/ 网络/ 数据流/ 负荷/ 增加/ ,/ 整体/ 网络/ 效用/ 增加/ ./ MRD/ 算法/ 比/ MST/ 算法/ 网络/ 效用/ 平均/ 增加/ 1.3/ ;/ MRD/ 算法/ 比/ MCS/ 算法/ 的/ 网络/ 整体/ 效用/ 增加/ 3.0/ ./ 图中/ 需要/ 特别/ 注意/ 的/ 一点/ 是/ MCS/ 算法/ 的/ 整体/ 效用/ 低于/ 其他/ 两个/ 算法/ ,/ 根本原因/ 是因为/ MCS/ 算法/ 不是/ 基于/ 优化/ 框架/ 的/ ./ 6/ 结论/ 本文/ 针对/ 现有/ AdHoc/ 网络/ 的/ 资源分配/ 机制/ 在/ 实现/ 网络/ 利用效率/ 最优/ 的/ 过程/ 中/ 没有/ 考虑/ 不同/ 数据/ 之间/ 的/ 依赖/ 关系/ ,/ 导致/ 针对/ 联合/ 任务/ 的/ 资源/ 利用效率/ 不高/ 的/ 问题/ ,/ 提出/ 了/ 基于/ 任务/ 利用率/ 的/ 动态/ 资源/ 调节/ 算法/ ./ 首次/ 把/ 基于/ 任务/ 的/ 评价/ 参数/ 纳入/ 到/ 无线/ AdHoc/ 网络/ 最优/ 分配/ 模型/ 中/ ,/ 证明/ 了/ 该/ 算法/ 满足/ 非线性/ 问题/ 最优/ 约束/ ,/ 所求/ 数据源/ 发送/ 速率/ 满足/ 系统/ 全局/ 最优/ ./ 仿真/ 结果表明/ ,/ 提出/ 的/ MRD/ 算法/ 能够/ 提高/ 多/ 数据源/ 协作/ AdHoc/ 网络/ 利用效率/ ./ 未来/ 的/ 工作/ 主要/ 集中/ 于/ 以下/ 几个/ 方面/ :/ (/ 1/ )/ 评估/ 数据/ 分级/ 数目/ 对/ 网络/ 性能/ 的/ 可能/ 影响/ ;/ (/ 2/ )/ 研究/ 加入/ 时延/ 、/ 节点/ 处理/ 能力/ 等/ 因素/ 的/ 全局/ 最优化/ 资源分配/ 策略/ ./ Page10/ 

