Page1/ 基于/ 软件/ 网络/ 的/ 服务/ 自动/ 分类/ 和/ 推荐/ 方法/ 研究/ 潘伟丰/ 1/ )/ ,/ 2/ )/ 李兵/ 1/ )/ ,/ 3/ )/ 邵波/ 1/ )/ 何鹏/ 1/ )/ 1/ )/ (/ 武汉大学/ 软件工程/ 国家/ 重点/ 实验室/ 武汉/ 430072/ )/ 2/ )/ (/ 浙江/ 工商大学/ 计算机/ 与/ 信息/ 工程学院/ 杭州/ 310018/ )/ 3/ )/ (/ 武汉大学/ 复杂/ 网络/ 研究/ 中心/ 武汉/ 430072/ )/ 摘要/ 服务/ 的/ 分类/ 和/ 推荐/ 方法/ 对于/ 服务/ 管理/ 和/ 组合/ 都/ 具有/ 重要/ 意义/ ./ 文中/ 利用/ 服务/ 组合/ 历史/ ,/ 从/ 面向/ 服务/ 软件/ 的/ 结构/ 角度/ 研究/ 了/ 服务/ 分类/ 和/ 推荐/ 方法/ :/ 提出/ 面向/ 服务/ 软件/ 的/ 软件/ 网络/ 模型/ ,/ 并/ 用于/ 抽象/ 面向/ 服务/ 软件/ 的/ 拓扑/ 结构/ ;/ 利用/ 复杂/ 网络/ 社区/ 发现/ 算法/ 对/ 软件/ 网络/ 进行/ 聚类/ ,/ 从而/ 实现/ 服务/ 的/ 自动/ 分类/ ;/ 利用软件/ 网络/ 描述/ 服务/ 之间/ 的/ 可/ 组合/ 关系/ 及其/ 强度/ ,/ 并/ 基于/ 服务/ 的/ 使用/ 场景/ 提出/ 了/ 相应/ 的/ 服务/ 推荐/ 算法/ ./ 使用/ ProgrammableWeb/ 上/ API/ 服务/ 和/ mashup/ 应用/ 的/ 真实/ 数据/ 来/ 说明/ 该文/ 方法/ 的/ 有效性/ ./ 从/ 实验/ 结果/ 可以/ 看出/ ,/ 该/ 方法/ 可以/ 准确/ 地/ 实现/ 服务/ 分类/ ,/ 整个/ 聚类/ 的/ 纯净度/ 达到/ 了/ 86.8/ %/ ,/ 同时/ 推荐/ 的/ 服务/ 也/ 比较/ 有/ 意义/ ,/ 这/ 对于/ 解决/ 服务/ 计算/ 中/ 的/ 一些/ 问题/ ,/ 包括/ 服务/ 的/ 管理/ 、/ 检索/ 、/ 组合/ 等/ 都/ 具有/ 一定/ 的/ 意义/ ./ 关键词/ 服务/ 分类/ ;/ 服务/ 组合/ ;/ 社区/ 发现/ ;/ 复杂/ 网络/ ;/ 服务/ 计算/ 1/ 引言/ 面向/ 服务/ 的/ 计算/ (/ Service/ -/ OrientedComputing/ ,/ SOC/ )/ 是/ 针对/ 分布式系统/ 的/ 新型/ 计算/ 模式/ ,/ 为/ 解决/ 分布/ 异构/ 环境/ 中/ 跨/ 组织/ 敏捷/ 应用/ 集成/ 问题/ 带来/ 了/ 诸多/ 便利/ ,/ 已/ 成为/ 软件/ 领域/ 最/ 热门/ 的/ 话题/ 之一/ [/ 1/ ]/ ./ SOC/ 倡导/ 以/ 服务/ 及其/ 组合/ 为/ 基础/ 构造/ 应用/ 的/ 开发/ 模式/ ,/ 导致/ 软件系统/ 的/ 主要/ 形态/ 、/ 生产方式/ 、/ 运行/ 方式/ 和/ 使用/ 方式/ 都/ 发生/ 了/ 巨大变化/ ,/ 软件系统/ 正/ 处在/ 一个/ 由/ 软件/ 服务/ 实体/ 组成/ 的/ 开放/ 协同/ 的/ 软件/ 环境/ 中/ [/ 2/ ]/ ./ 从/ 传统/ 的/ 基于/ SOAP/ 的/ Web/ 服务/ 到/ 目前/ REST/ 风格/ 的/ Web/ 服务/ 以及/ mashup/ // API/ 服务/ 等/ ,/ 服务/ 的/ 种类/ 日益/ 丰富/ ,/ 应用领域/ 也/ 不断/ 拓展/ ,/ 以/ 服务/ 为/ 中心/ 的/ 互联网/ 正在/ 形成/ ./ 随着/ 软件体系结构/ 研究/ 的/ 深入/ ,/ 人们/ 逐渐/ 意识/ 到/ 软件结构/ 是/ 决定/ 软件/ 质量/ 的/ 重要/ 因素/ [/ 3/ ]/ ./ 一些/ 研究者/ 基于/ 软件/ 的/ 网络结构/ (/ 软件/ 网络/ )/ ,/ 采取/ 软件工程/ 和/ 复杂/ 网络/ 相关/ 理论/ 相结合/ 的/ 研究/ 方法/ ,/ 以/ 分析/ 软件结构/ 特征/ 为/ 着眼点/ ,/ 以/ 理解/ 软件/ 的/ 结构特征/ 为/ 软件开发/ 和/ 维护/ 提供/ 支持/ 为/ 目标/ ,/ 从/ 表征/ 、/ 分析/ 、/ 度量/ 和/ 应用/ 4/ 个/ 方面/ 对/ 软件/ 的/ 静态/ 结构/ 进行/ 系统分析/ ,/ 取得/ 了/ 可喜/ 的/ 成果/ ,/ 这些/ 成果/ 对/ 指导/ 软件/ 的/ 开发/ 和/ 维护/ 具有/ 重要/ 的/ 指导意义/ [/ 4/ -/ 12/ ]/ ./ 如今/ 面向/ 服务/ 软件/ (/ Service/ -/ OrientedSoftware/ ,/ SOS/ )/ 日益/ 成为/ 主流/ ,/ 我们/ 有/ 必要/ 研究/ SOS/ 的/ 结构/ ,/ 挖掘/ 结构/ 中/ 蕴含/ 的/ 知识/ ,/ 从而/ 更好/ 地/ 指导/ SOS/ 的/ 开发/ ./ 不断/ 出现/ 的/ 在线/ 服务/ 和/ SOS/ 注册/ 中心/ (/ 如/ ProgrammableWeb/ ①/ 、/ seekda/ ②/ 、/ myExperiment/ ③/ 等/ )/ 为/ 我们/ 从/ 结构/ 角度/ 研究/ SOS/ 提供/ 了/ 一个/ 契机/ ./ 服务/ 发现/ 和/ 服务/ 组合/ 吸引/ 了/ 国内外/ 众多/ 学者/ 的/ 关注/ ,/ 成为/ SOC/ 领域/ 中/ 的/ 关键问题/ [/ 13/ ]/ ./ 但是/ 目前/ 的/ 服务/ 缺少/ 分类/ 信息/ ,/ 给/ 服务/ 发现/ 、/ 检索/ 以及/ 服务/ 资源/ 的/ 管理/ 带来/ 不便/ ./ 如果/ 采用/ 手工/ 的/ 方式/ 对/ 服务/ 分类/ ,/ 当/ 服务/ 数量/ 很大/ 时/ 显然/ 是/ 不/ 可取/ 的/ ,/ 因此/ 如何/ 实现/ 服务/ 的/ 自动/ 分类/ 构成/ SOC/ 的/ 挑战/ ./ 与此同时/ ,/ 服务/ 组合/ 中/ 服务/ 的/ 可/ 组合/ 关系/ 往往/ 是/ 根据/ 服务/ 间/ 的/ 输入输出/ 来/ 进行/ 判断/ 的/ ,/ 均/ 遵循/ 了/ 文献/ [/ 14/ ]/ 中/ 的/ 服务/ 匹配/ 原则/ ,/ 但/ 这/ 一/ 原则/ 过于/ 严格/ ./ 那么/ 除了/ 输入输出/ 匹配/ 外/ ,/ 是否/ 存在/ 一种/ 新/ 的/ 服务/ 匹配/ 方法/ 能够/ 挖掘/ 服务/ 间/ 的/ 潜在/ 可/ 组合/ 关系/ ?/ 本文/ 针对/ 上述/ 两个/ 问题/ 展开/ 研究/ ,/ 通过/ 对/ 服务/ 组合/ 历史/ ,/ 即/ 已有/ SOS/ 结构/ 的/ 分析/ ,/ 挖掘/ 结构/ 中/ 蕴含/ 的/ 知识/ ,/ 最终/ 实现/ 服务/ 的/ 自动/ 分类/ 和/ 服务/ 推荐/ (/ 文中/ 将/ SOS/ 看成/ 大/ 粒度/ 的/ 服务/ )/ ./ 我们/ 把/ 这种/ 方法/ 称为/ 从/ 历史/ 学习/ 的/ 方法/ (/ LearnFromHistory/ ,/ 简称/ LFH/ 方法/ )/ ,/ 并/ 以/ ProgrammableWeb/ 上/ API/ 服务/ 和/ mashup/ 应用/ 的/ 真实/ 数据/ 为例/ 进行/ 验证/ ./ LFH/ 方法/ 将/ 面向对象/ (/ Object/ -/ Oriented/ ,/ OO/ )/ 软件/ 的/ 软件/ 网络/ 模型/ 引入/ SOS/ 研究/ 中/ ,/ 提出/ 了/ SOS/ 的/ 软件/ 网络/ 模型/ ./ 基于/ 该软件/ 网络/ 模型/ ,/ 提出/ 了/ 基于/ 复杂/ 网络/ 社区/ 发现/ 的/ 服务/ 自动/ 分类/ 方法/ ./ 同时/ ,/ 提出/ 了/ 一种/ 服务/ 推荐/ 方法/ ,/ 该/ 方法/ 可以/ 推荐/ 与/ 一个/ 或/ 多个/ 服务/ 匹配/ 的/ 其它/ 服务/ ./ 实例/ 研究/ 表明/ ,/ 本文/ 的/ 方法/ 在/ 实现/ 服务/ 自动/ 分类/ 和/ 服务/ 推荐/ 方面/ 是/ 有效/ 的/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节将/ 详细/ 地/ 介绍/ LFH/ 方法/ ,/ 包括/ SOS/ 的/ 软件/ 网络/ 模型/ 、/ 服务/ 的/ 分类/ 方法/ 、/ 服务/ 的/ 推荐/ 算法/ 等/ ;/ 第/ 4/ 节/ 将/ 以/ Program/ -/ mableWeb/ 上/ 的/ mashup/ 、/ API/ 服务/ 的/ 真实/ 数据/ 验证/ LFH/ 方法/ 的/ 有效性/ ;/ 第/ 5/ 节/ 介绍/ 本文/ 方法/ 的/ 应用/ 平台/ ;/ 最后/ 是/ 结论/ 与/ 展望/ ./ 2/ 相关/ 研究/ 复杂/ 网络/ 为/ 我们/ 研究/ 系统结构/ 及其/ 动力学/ 行为/ 提供/ 了/ 有力/ 的/ 工具/ ./ 近年来/ ,/ 一些/ 研究者/ 将/ 复杂/ 网络/ 相关/ 理论/ 引入/ 软件工程/ 中/ ,/ 构建/ 软件/ 网络/ 模型/ ,/ 用于/ 分析/ OO/ 软件/ 的/ 结构特征/ 及其/ 动力学/ 行为/ ./ 复杂/ 网络理论/ 强调/ 从/ 整体/ 上/ 认识/ 、/ 理解/ 和/ 控制系统/ ,/ 而/ 非/ 关注/ 局部/ ./ 研究/ 系统/ 在/ 整体/ 上/ 表现/ 的/ 特征/ 可以/ 为/ 我们/ 理解/ 软件系统/ 提供/ 新/ 的/ 维度/ ./ 2002/ 年/ ,/ Valverde/ 等/ 人/ [/ 4/ ]/ 首先/ 将/ 复杂/ 网络/ 方法/ 引入/ 软件结构/ 分析/ 中/ ./ 他们/ 将/ 系统/ 的/ 类/ 图用/ 无/ 向/ 网络/ 来/ 抽象/ ,/ 即/ 网络/ 中/ 的/ 节点/ 表示/ 系统/ 中/ 的/ 类/ ,/ 节点/ 间/ 的/ 边/ 表示/ 类间/ 的/ 关系/ ,/ 如/ 继承/ (/ inheritance/ )/ 、/ 关联/ (/ association/ )/ 等/ ./ 他们/ 用/ 这种/ 方法/ 抽象/ JDK1/ ./ 2/ 和/ UbiSoftProRally2002/ ,/ 并用/ 复杂/ 网络/ 中/ 的/ 相关/ 方法/ 分析/ 这些/ 软件/ 网络/ 的/ 统计/ 特性/ ./ 他们/ 发现/ ,/ 这/ 两个/ 软件/ 的/ 软件/ 网络/ 具有/ 与/ 其它/ 复杂/ 网络/ 类似/ 的/ “/ 小/ 世界/ ”/ 和/ “/ 无/ 标度/ ”/ 特性/ ./ 同时/ ,/ 他们/ 认为/ 软件开发/ 中/ 的/ 局部优化/ 过程/ 可能/ 是/ 导致/ 软件/ 网络/ 呈现/ 这些/ 特性/ 的/ 原因/ ./ 在/ 软件系统/ 中/ ,/ 系统/ 模块/ (/ 类/ 、/ 方法/ 等/ )/ 之间/ 的/ 关系/ (/ 协作/ 、/ 调用/ 等/ )/ 反映/ 了/ 系统/ 的/ 控制流/ ./ 因此/ ,/ 软件/ ①/ ②/ ③/ Page3/ 网络/ 中/ 的/ 边/ 的/ 方向/ 是/ 有/ 意义/ 的/ [/ 5/ ]/ ./ 2003/ 年/ ,/ 一些/ 研究者/ 使用/ 有/ 向/ 网络/ 研究/ 软件结构/ ./ Myers/ 使用/ 有/ 向/ 网络/ 表示/ 软件系统/ 的/ 结构/ ,/ 分析/ 了/ 3/ 个/ OO/ 软件/ 的/ 类/ 协作/ 图/ (/ classcollaborationgraph/ )/ 和/ 3/ 个/ 面向/ 过程/ 软件/ 的/ 静态/ 过程/ 调用/ 图/ (/ staticprocedurecallgraph/ )/ ./ 他们/ 发现/ :/ (/ 1/ )/ 这些/ 有/ 向/ 软件/ 网络/ 尽管/ 来自/ 不同/ 系统/ ,/ 甚至/ 是/ 用/ 不同/ 类型/ 语言/ (/ 面向/ 过程/ // 对象/ )/ 开发/ 的/ 系统/ ,/ 但是/ 都/ 具有/ “/ 小/ 世界/ ”/ 和/ “/ 无/ 标度/ ”/ 特性/ ;/ (/ 2/ )/ 出入/ 度/ 分布/ 的/ 幂指数/ 存在/ 不平衡性/ ,/ 即/ 出度/ 分布/ 的/ 幂指数/ 大于/ 入度/ 分布/ 的/ 幂指数/ ;/ (/ 3/ )/ 出度/ 与/ 入度/ 之间/ 存在/ 负/ 相关性/ ,/ 他们/ 认为/ 这/ 可能/ 与/ 软件/ 重用/ 有关/ ,/ 即/ 简单/ 的/ 类/ (/ 出度/ 小/ 的/ 类/ )/ 容易/ 被/ 重用/ ,/ 因此/ 入度/ 大/ ./ Valverde/ 和/ Sole/ 使用/ 有/ 向/ 网络/ 描述/ 软件系统/ 的/ 类图/ (/ classdiagram/ )/ 对系统/ 的/ 结构/ 进行/ 研究/ ./ 他们/ 发现/ ,/ 类/ 粒度/ 的/ 软件/ 网络/ 除了/ 具有/ “/ 小/ 世界/ ”/ 和/ “/ 无/ 标度/ ”/ 特性/ 外/ ,/ 同时/ 具有/ 层次性/ (/ hierarchical/ )/ 和/ 模块性/ (/ modularity/ )/ [/ 6/ ]/ ./ 之后/ ,/ 人们/ 开始/ 从/ 不同/ 粒度/ (/ 方法/ 、/ 类/ 、/ 包/ 、/ 文件/ 等/ )/ 对/ 大量/ 开源/ 软件/ 的/ 结构/ 进行/ 研究/ ./ Moura/ 等/ 人/ 将/ C/ 和/ C++/ 语言/ 开发/ 的/ 系统/ 在/ 文件/ 级/ (/ 头文件/ )/ 抽象/ 成/ 网络/ ,/ 即/ 头文件/ 为/ 节点/ ,/ 头文件/ 的/ 共现/ 关系/ 抽象/ 成边/ ./ 他们/ 发现/ 这样/ 的/ 网络/ 也/ 具有/ “/ 小/ 世界/ ”/ 和/ “/ 无/ 标度/ ”/ 特性/ ,/ 并/ 指出/ :/ “/ 软件/ 随/ 时间/ 增长/ 是/ 软件/ 呈现/ 无/ 标度/ 特性/ 的/ 原因/ ,/ 软件/ 性能/ 的/ 优化/ 是/ 软件/ 具有/ “/ 小/ 世界/ ”/ 特性/ 的/ 原因/ ”/ [/ 7/ ]/ ./ LaBelle/ 和/ Wallingford/ [/ 8/ ]/ 在/ 包/ 粒度/ 将/ 软件系统/ 看成/ 网络/ ,/ 对/ 一些/ 软件/ 的/ 依赖/ 网络/ 进行/ 分析/ ,/ 发现/ 这样/ 形成/ 的/ 网络/ 同样/ 具有/ “/ 小/ 世界/ ”/ 和/ “/ 无/ 标度/ ”/ 特性/ ./ Valverde/ 和/ Sole/ [/ 9/ ]/ 将类/ 和/ 类/ 的/ 方法/ 都/ 抽象/ 为/ 节点/ ,/ 方法/ 访问/ 类/ 的/ 关系/ 抽象/ 成类/ 节点/ 和/ 方法/ 节点/ 间/ 的/ 边/ ,/ 他们/ 发现/ 这样/ 构建/ 的/ 软件/ 网络图/ 1LFH/ 方法/ 框架/ 也/ 同样/ 具有/ “/ 小/ 世界/ ”/ 和/ “/ 无/ 标度/ ”/ 特性/ ./ 国内/ 的/ 研究/ 人员/ 在/ 这方面/ 也/ 做/ 了/ 些/ 实证/ 研究/ ,/ 如/ 李德/ 毅/ 、/ 李兵/ 等/ 人/ [/ 10/ -/ 12/ ]/ 对/ Java/ 语言/ 编写/ 的/ 若干/ 软件系统/ 以及/ Linux/ 等/ 进行/ 分析/ ,/ 发现/ 了/ 其中/ 的/ “/ 小/ 世界/ ”/ 和/ “/ 无/ 标度/ ”/ 特性/ ./ 以上/ 这些/ 工作/ 都/ 是/ 针对/ 面向/ 过程/ 或/ OO/ 软件/ 展开/ 研究/ 的/ ,/ 针对/ SOS/ 的/ 工作/ 很少/ 见到/ ./ 但是/ 随着/ 近年来/ SOC/ 的/ 快速/ 发展/ ,/ 面向/ 服务/ 的/ 思想/ 已经/ 被/ 许多/ 软件/ 工程师/ 所/ 接受/ ./ 基于/ 服务/ 的/ 应用/ 正在/ 获得/ 强劲/ 发展势头/ ,/ 因此/ 有/ 必要/ 分析/ SOS/ 的/ 结构/ ,/ 以/ 指导/ SOS/ 的/ 管理/ 和/ 开发/ 等/ 工作/ ./ 本文/ 的/ 工作/ 正是/ 围绕/ 这点/ 展开/ 的/ ,/ 主要/ 探讨/ 服务/ 的/ 自动/ 分类/ 和/ 推荐/ 方法/ ,/ 因此/ 与/ 以前/ 针对/ 面向/ 过程/ 软件/ 和/ OO/ 软件/ 所/ 开展/ 的/ 工作/ 有/ 显著/ 区别/ ./ 3LFH/ 方法/ 从/ 面向/ 结构/ 的/ 程序设计/ 到/ 面向对象/ // 构件/ 程序设计/ ,/ 再/ 到/ 面向/ 服务/ 的/ 软件开发/ 方式/ ,/ 软件/ 的/ 设计/ 和/ 实现/ 的/ 重点/ 已/ 从/ 实现/ 局部/ 的/ 编程/ 难题/ ,/ 转向/ 了/ 如何/ 将/ 代码/ 有效/ 地/ 进行/ 组织/ ,/ 特别/ 是/ 对于/ 大规模/ 复杂/ 软件系统/ 而言/ ,/ 结构/ 的/ 组织/ 就/ 尤为重要/ ./ 与此同时/ ,/ 使用/ 自然语言/ 或/ 符号语言/ (/ 如/ OWL/ -/ S/ [/ 15/ ]/ )/ 这种/ 一维/ 的/ 知识/ 表示/ 方式/ 来/ 描述/ 服务/ ,/ 无法/ 从/ 全局/ 的/ 角度/ 呈现/ SOS/ 的/ 复杂/ 结构/ ./ LFH/ 方法/ 使用/ 软件/ 网络/ 这种/ 二维/ 知识/ 表示/ 方法/ 抽象/ SOS/ 的/ 拓扑/ 结构/ ,/ 并/ 进而/ 指导/ 服务/ 的/ 自动/ 分类/ 和/ 推荐/ ./ 图/ 1/ 给出/ 了/ LFH/ 方法/ 的/ 基本/ 框架/ ./ 以下/ 各/ 小节/ 将/ 对/ 框架/ 中/ 的/ 部分/ 内容/ 进行/ 说明/ ,/ 并/ 给出/ 相关/ 概念/ 的/ 定义/ ./ Page43/ ./ 1/ 数据/ 收集/ 随着/ 服务/ 数量/ 的/ 增加/ ,/ 在线/ 的/ 服务/ 注册/ 中心/ 为/ 服务/ 开发者/ 和/ 服务/ 消费者/ 提供/ 了/ 一个/ 服务/ 交易/ 的/ 场所/ ,/ 如/ ProgrammableWeb/ 、/ seekda/ 、/ myExperiment/ 等/ ./ 注册/ 中心/ 通常/ 是/ 按照/ 特定/ 的/ 注册/ 模型/ 进行/ 注册/ 的/ ,/ 包含/ 了/ 服务/ 的/ 元/ 信息/ ,/ 如/ 服务/ 的/ 名称/ 、/ 描述/ 、/ 地址/ 、/ 标签/ 、/ 提供者/ 等/ ./ 对于/ 一些/ 由/ 服务/ 构成/ 的/ SOS/ (/ 大/ 粒度/ 服务/ )/ 甚至/ 包含/ 构成/ 这个/ SOS/ 的/ 服务/ 列表/ ./ LFH/ 方法/ 将/ 收集/ 注册/ 中心/ 中/ 各类/ 服务/ 以及/ 由/ 这些/ 服务/ 构成/ 的/ SOS/ 的/ 元/ 信息/ (/ 如/ 名称/ 、/ 描述/ 、/ 标签/ 等/ )/ ,/ 并存/ 于/ 本地/ 数据库/ ./ 这些/ 爬下来/ 的/ 数据/ 可能/ 存在/ 一些/ 噪声/ ,/ 如/ 作为/ 标签/ 的/ 单词/ 拼写错误/ 、/ 服务/ 重复/ 注册/ 等/ ./ LFH/ 方法/ 对/ 收集/ 到/ 的/ 数据/ 进行/ 预处理/ ,/ 通过/ 一些/ 算法/ 修正/ 单词/ 的/ 拼写错误/ 、/ 删除/ 重复/ 注册/ 的/ 服务/ 等/ ,/ 尽量/ 排除/ 数据/ 中/ 的/ 噪声/ ./ 数据/ 的/ 收集/ 可以/ 借助/ 一些/ 整站/ 下载/ 器/ ,/ 如/ Tele/ -/ portUltra/ ①/ 、/ webzip/ ②/ 、/ WinHTTrack/ ③/ 等/ 来/ 完成/ ,/ 即/ :/ 首先/ ,/ 用/ 整站/ 下载/ 器/ 将/ 网站/ 中/ 的/ 相关/ 页面/ 以/ html/ 静态/ 页面/ 的/ 形式/ 爬/ 到/ 本地/ ;/ 然后/ ,/ 编写/ 一些/ 脚本/ 解析/ html/ 页面/ 中/ 的/ 相关/ 字段/ 存于/ 本地/ 数据库/ 中/ ;/ 最后/ ,/ 再/ 对/ 收集/ 到/ 的/ 数据/ 进行/ 预处理/ 以/ 减少/ 噪声/ ./ 3.2/ SOS/ 的/ 软件/ 网络/ 模型/ SOS/ 通常/ 由/ 若干/ (/ / 0/ )/ 服务/ 辅以/ 一定/ 的/ 编程/ 组合而成/ ,/ 因此/ 可以/ 看成/ 一种/ 更大/ 粒度/ 的/ 服务/ ./ 文中/ 将/ 由/ 单个/ 服务/ 构成/ 的/ 软件/ 看成/ 一类/ 特殊/ 的/ SOS/ ./ SOS/ 和/ 服务/ 之间/ 的/ 这种/ 宏观/ 组合/ 关系/ 可以/ 使用/ 网络/ 模型/ 来/ 抽象/ ./ 下面/ 首先/ 给出/ SOS/ 相应/ 软件/ 网络/ 的/ 定义/ ./ 定义/ 1/ (/ SOS/ -/ 服务网络/ )/ ./ SOS/ -/ 服务网络/ (/ 简称/ SOS2S/ )/ 可以/ 用/ 一个/ 二部/ 图/ 表示/ ,/ 即/ SOS2S/ =/ (/ NSOS/ ,/ Ns/ ,/ D/ )/ ./ 其中/ ,/ NSOS/ 为/ SOS/ 节点/ 的/ 集合/ ,/ 表示/ 所有/ SOS/ 的/ 集合/ ;/ Ns/ 是/ 服务/ 节点/ 的/ 集合/ ,/ 表示/ SOS/ 使用/ 的/ 所有/ 服务/ 的/ 集合/ ;/ D/ 是/ 一个/ 无向边/ 的/ 集合/ ,/ 表示/ SOS/ 对/ 服务/ 的/ 使用/ 关系/ ./ SOS2S/ 的/ 边/ 只/ 存在/ 于/ 不同/ 类型/ 节点/ 间/ ,/ 即/ D/ =/ {/ {/ sosi/ ,/ sj/ }/ }/ ,/ sosi/ ∈/ NSOS/ ,/ sj/ ∈/ Ns/ ./ SOS2S/ 的/ 连接/ 矩阵/ ψ/ 描述/ 了/ SOS/ 节点/ 和/ 服务/ 节点/ 间/ 的/ 连接/ 关系/ :/ 其中/ ,/ ψ/ 是/ 一个/ A/ ×/ B/ 的/ 二值/ 矩阵/ ,/ A/ =/ |/ NSOS/ |/ 表示/ SOS/ 的/ 数量/ ,/ B/ =/ |/ Ns/ |/ 表示/ 服务/ 的/ 数量/ ./ 若/ ψ/ ij/ =/ 1/ ,/ 则/ 第/ i/ 个/ SOS/ 节点/ 和/ 第/ j/ 个/ 服务/ 节点/ 间/ 存在/ 有/ 边/ 相连/ ,/ 否则/ 不/ 存在/ 边/ ./ SOS2S/ 表示/ 的/ 是/ 两类/ 不同/ 节点/ (/ SOS/ 节点/ 和/ 服务/ 节点/ )/ 间/ 的/ 关系/ ./ 同/ 类型/ 节点/ 间/ 的/ 关系/ (/ SOS/ 和/ SOS/ 的/ 关系/ 或/ 服务/ 和/ 服务/ 的/ 关系/ )/ 可以/ 通过/ 对/ SOS2S/ 作/ 投影/ 得到/ (/ 如图/ 2/ 所示/ )/ ./ 定义/ 2/ (/ SOS/ -/ SOS/ 网络/ )/ ./ SOS/ -/ SOS/ 网络/ (/ 简称/ SOS2/ )/ 可以/ 用/ 一个/ 单模/ 无向/ 图/ 表示/ ,/ 即/ SOS2/ =/ (/ NSOS/ ,/ DSOS/ )/ ./ 其中/ ,/ NSOS/ 为/ SOS/ 节点/ 的/ 集合/ ,/ 表示/ 所有/ 的/ SOS/ 的/ 集合/ ;/ DSOS/ 是/ 一个/ 无向边/ 的/ 集合/ ,/ 表示/ SOS/ 间/ 共用/ 服务/ 这种/ 耦合/ 关系/ ,/ 即/ 若/ 两个/ SOS/ 共用/ 服务/ ,/ 则/ 代表/ 这/ 两个/ SOS/ 的/ 节点/ 间/ 存在/ 一条/ 无向边/ ./ SOS2/ 的/ 连接/ 矩阵/ ψ/ SOS/ 可/ 由/ ψ/ 得到/ ,/ 即/ 其中/ ,/ ψ/ SOS/ 务/ 的/ 数量/ ,/ ψ/ SOS/ 因此/ ,/ 若/ ψ/ SOS/ 存在/ 共用/ 服务/ 的/ 耦合/ 关系/ (/ {/ sosi/ ,/ sosj/ }/ ∈/ DSOS/ )/ ,/ 它们/ ij/ 个/ 服务/ ;/ 否则/ 这/ 两个/ SOS/ 间/ 没有/ 共用/ 任何/ 共用/ ψ/ SOS/ 服务/ (/ {/ sosi/ ,/ sosj/ }/ / DSOS/ )/ ./ 同时/ ,/ 我们/ 给/ SOS2/ 中/ 每/ 条边/ 赋予/ 一个/ 权值/ ,/ 用于/ 刻画/ 这条/ 边/ 两端/ 节点/ 代表/ 的/ SOS/ 间/ 的/ 相似/ 度/ ./ 第/ i/ 个/ SOS/ 节点/ 和/ 第/ j/ 个/ SOS/ 节点/ 之间/ 的/ 边权/ wSOS/ 定义/ 如下/ :/ 其中/ ,/ ws/ 到/ 的/ 相似/ 度/ ;/ wtij/ 是/ 通过/ 使用/ 的/ 标签/ 计算/ 得到/ 的/ 相似/ 度/ ;/ a/ 和/ b/ 是/ 相应/ 分量/ 的/ 权重/ ,/ 且/ 满足/ 0/ / a/ ,/ b/ / 1/ ,/ a/ +/ b/ =/ 1/ ./ 通过/ 调节/ a/ 和/ b/ 的/ 值/ ,/ 我们/ 可以/ 满足/ 不同/ 的/ 服务/ 分类/ 需求/ ./ SOS/ 使用/ 的/ 服务/ 代表/ 了/ 其/ 功能/ ,/ 如果/ 我们/ 主要/ 从/ SOS/ 的/ 功能/ 构成/ 角度/ 对/ 其/ 分类/ ,/ 则/ a/ 可以/ 设置/ 得/ 相对/ 大/ 些/ ;/ SOS/ 使用/ 的/ 标签/ 代表/ 了/ 提供者/ 对/ 该/ SOS/ 的/ 认识/ ,/ 如果/ 我们/ 主要/ 从/ 提供者/ 认知/ 角度/ 对/ 其/ 进行/ 分类/ ,/ 则/ b/ 可以/ 设置/ 得/ 相对/ 大些/ ./ 本文/ 中/ a/ =/ 0.9/ ,/ b/ =/ 0.1/ ./ 我们/ 使用/ Jacard/ 相似/ 度/ 系数/ (/ Jacardsimilaritycoefficient/ )/ 来/ 计算/ 两个/ SOS/ 之间/ 的/ 相似/ 度/ ./ 给定/ 两个/ 集合/ E/ 和/ F/ ,/ 则/ 它们/ 之间/ 的/ Jacard/ 相似/ 度/ 系数/ 计算/ 如下/ :/ 所以/ ws/ ①/ ②/ ③/ Page5/ 其中/ ,/ Nis/ 和/ Njs/ (/ Nit/ 和/ Njt/ )/ 分别/ 表示/ 第/ i/ 个/ 和/ 第/ j/ 个/ SOS/ 使用/ 的/ 服务/ 集合/ (/ 标签/ 集合/ )/ ./ 定义/ 3/ (/ 服务/ -/ 服务网络/ )/ ./ 服务/ -/ 服务网络/ (/ 简称/ S2/ )/ 可以/ 用/ 一个/ 单模/ 无向/ 图/ 表示/ ,/ 即/ S2/ =/ (/ Ns/ ,/ Ds/ )/ ./ 其中/ ,/ Ns/ 为/ 服务/ 节点/ 的/ 集合/ ,/ 表示/ 所有/ SOS/ 所/ 使用/ 服务/ 的/ 集合/ ;/ Ds/ 是/ 一个/ 无向边/ 的/ 集合/ ,/ 表示/ 服务/ 间/ 的/ 共现/ 关系/ ,/ 即/ 若/ 两个/ 服务/ 共同/ 作为/ 某个/ SOS/ 的/ 构成/ 部分/ ,/ 则/ 代表/ 这/ 两个/ 服务/ 的/ 节点/ 间/ 存在/ 一条/ 无向边/ ./ S2/ 的/ 连接/ 矩阵/ ψ/ s/ 可/ 由/ ψ/ 得到/ ,/ 即/ 其中/ ,/ ψ/ sii/ 表示/ 服务/ i/ 参与/ 的/ SOS/ 的/ 数量/ ./ 因此/ ,/ 若/ ψ/ s/ ψ/ s/ 则/ 服务/ i/ 和/ j/ 之间/ 存在/ 共现/ 关系/ (/ {/ ai/ ,/ aj/ }/ ∈/ Da/ )/ ,/ 否则/ 不/ 存在/ 共现/ 关系/ (/ {/ ai/ ,/ aj/ }/ / Da/ )/ ./ 同时/ ,/ 我们/ 也/ 给/ S2/ 中/ 每/ 条边/ 赋予/ 一个/ 权值/ ,/ 用图/ 2SOS2S/ 、/ SOS2/ 和/ S2/ 构建/ 举例/ 3.3/ SOS/ 和/ 服务/ 的/ 自动/ 分类/ 3.3/ ./ 1SOS/ 的/ 自动/ 分类/ 社区/ 结构/ 是/ 复杂/ 网络/ 中/ 一个/ 重要/ 的/ 特性/ ,/ 它/ 是/ 一种/ 介于/ 宏观/ 和/ 微观/ 之间/ 的/ 网络/ 特征/ ,/ 是/ 真实世界/ 中/ 许多/ 复杂/ 网络/ 所/ 具有/ 的/ 一种/ 普遍/ 性质/ ./ 研究/ 表明/ ,/ 社区/ 结构/ 和/ 网络/ 的/ 功能/ (/ 鲁棒性/ 、/ 高速/ 传播/ 性/ 等/ )/ 有着/ 紧密/ 的/ 关系/ ./ 网络/ 社区/ 结构/ 的/ 检测/ 是/ 揭示/ 网络结构/ 和/ 功能/ 之/ 于/ 刻画/ 这条/ 边/ 两端/ 节点/ 代表/ 的/ 服务/ 间/ 可以/ 组合/ 的/ 可能性/ ./ 服务/ 节点/ i/ 和/ j/ 间边/ 的/ 权值/ ws/ 其中/ ,/ Nks/ 是/ 第/ k/ 个/ SOS/ 使用/ 的/ 服务/ 的/ 数量/ ./ 显然/ ,/ ij/ 描述/ 了/ 服务/ i/ 和/ j/ 间/ 可以/ 组合/ 的/ 可能性/ 大小/ ./ wsws/ 值越/ 大/ ,/ 则/ 服务/ i/ 和/ j/ 间/ 可以/ 组合/ 的/ 可能性/ 越大/ ./ 因此/ ,/ S2/ 实质/ 上/ 包含/ 了/ 从/ 已有/ SOS/ 中/ 获得/ 的/ 服务/ 之间/ 是否/ 可以/ 组合/ 的/ 知识/ ./ 可以/ 想象/ ,/ SOS/ 越多/ ,/ 服务/ 之间/ 可以/ 组合/ 的/ 知识/ 就/ 越/ 丰富/ ,/ 当/ SOS/ 的/ 数量/ 趋于/ 无穷/ 时/ ,/ S2/ 中将/ 包含/ 服务/ 间/ 的/ 所有/ 可/ 组合/ 关系/ ./ 但是/ ,/ SOS/ 的/ 数量/ 往往/ 是/ 有限/ 的/ ,/ 所以/ 已有/ SOS/ 中/ 服务/ 之间/ 真实/ 的/ 连接/ 网络/ ω/ s/ =/ (/ Ns/ ,/ Es/ )/ 和/ S2/ 满足/ 图/ 2/ 显示/ 的/ 是从/ 我们/ 收集/ 的/ 真实/ API/ 服务/ 和/ mashup/ 应用/ 数据/ (/ 详见/ 第/ 4/ 节/ )/ 中/ 构建/ 的/ SOS2S/ 、/ SOS2/ 和/ S2/ ./ 其中/ ,/ mashup/ 应用/ 对应/ SOS/ ,/ API/ 服务/ 对应/ 服务/ ./ 间/ 关系/ 的/ 重要/ 基础/ ,/ 成为/ 了/ 最近/ 几年/ 的/ 研究/ 热点/ ./ 复杂/ 网络/ 采用/ 图/ 作为/ 表示/ 形式/ ,/ 因此/ 很多/ 在/ 计算机领域/ 被/ 广泛应用/ 的/ 图/ 分割/ 算法/ 都/ 可以/ 直接/ 应用/ 于/ 复杂/ 网络/ 的/ 社区/ 检测/ ,/ 如/ Kernighan/ -/ Lin/ 算法/ [/ 16/ ]/ 、/ 谱/ 分割/ 法/ [/ 17/ -/ 18/ ]/ 等/ ./ 但/ 传统/ 图/ 分割/ 算法/ 倾向/ 于/ 把/ 网络/ 分成/ 规模/ 相近/ 的/ 子/ 图/ 或/ 要求/ 网络/ 的/ 社区/ 数目/ 已知/ ,/ 而/ 这两点/ 往往/ 是/ 很/ 难/ 满足/ 的/ ,/ 因此/ 复杂/ 网络/ 领域/ 出现/ 了/ 很多/ 新/ 的/ 社区/ 发现/ 方法/ ,/ 按照/ 边/ 的/ 连接/ 权值/ 可以/ 分为/ :/ Page6/ 无权/ 网络/ 的/ 社区/ 发现/ 方法/ [/ 19/ -/ 20/ ]/ 和/ 加权/ 网络/ 的/ 社区/ 发现/ 方法/ [/ 21/ -/ 22/ ]/ ;/ 按照/ 节点/ 的/ 隶属/ 度/ 可以/ 分为/ :/ 硬/ 划分/ 的/ 社区/ 发现/ 方法/ [/ 20/ -/ 22/ ]/ 和/ 模糊/ 社区/ 发现/ 方法/ [/ 23/ -/ 24/ ]/ ;/ 按照/ 发现/ 的/ 策略/ 可以/ 分为/ :/ 层次/ 算法/ [/ 20/ -/ 25/ ]/ (/ 分裂/ 和/ 凝聚/ )/ 和/ 最优化/ 算法/ [/ 26/ ]/ ;/ 或者/ 分为/ 全局/ 社团/ 发现/ 方法/ [/ 20/ -/ 22/ ,/ 25/ -/ 26/ ]/ 和/ 局部/ 社区/ 发现/ 方法/ [/ 27/ -/ 28/ ]/ 等/ ./ 本文/ 使用/ 复杂/ 网络/ 社区/ 发现/ 算法/ ,/ 对/ SOS2/ 进行/ 社区/ 划分/ ,/ 可以/ 对/ 大量/ SOS/ (/ 大/ 粒度/ 服务/ )/ 进行/ 聚类/ ,/ 进而/ 对/ 服务/ 进行/ 聚类/ ./ 目前/ 用于/ 评价/ 社区/ 划分/ 质量/ 的/ 指标/ 不少/ :/ Mancoridis/ 等/ 人/ 提出/ 了/ 模块化/ 质量/ MQ/ (/ ModularizationQuality/ )/ ;/ Tucker/ 等/ 人/ 提出/ EVM/ 函数/ (/ EVMFunction/ )/ ;/ Newman/ 提出/ 了/ 模块/ 度/ Q/ [/ 29/ ]/ ./ 本文/ 使用/ 应用/ 比较/ 广/ 的/ 模块/ 度/ Q/ 作为/ 评价/ 指标/ ./ 鉴于/ 本文/ 中待/ 划分/ 的/ 网络/ SOS2/ 是/ 一个/ 加权/ 网络/ ,/ 我们/ 使用/ 针对/ 加权/ 网络/ 的/ Q/ 来/ 评价/ 社区/ 划分/ 的/ 质量/ ./ 其中/ ,/ Q/ 是/ 网络/ 的/ 模块/ 度/ ;/ weii/ 表示/ 两个/ 端点/ 都/ 在/ 社区/ i/ 的/ 边/ 其/ 边权/ 和/ 占/ 总边权/ 和/ 的/ 比例/ ;/ wai/ 表示/ 至少/ 有/ 一个/ 端点/ 在/ 社区/ i/ 的/ 边/ 其/ 边权/ 和/ 占/ 总边权/ 和/ 的/ 比例/ ./ 如何/ 计算/ Q/ 值/ 对/ 算法/ 的/ 性能/ 具有/ 重要/ 的/ 影响/ ,/ 特别/ 当/ 网络/ 的/ 规模/ 很大/ 时/ ./ 本文/ 将/ 计算/ Q/ 的/ 增值/ Δ/ Q/ ,/ 而/ 不是/ Q/ ,/ 这一/ 思路/ 与/ 文献/ [/ 29/ ]/ 同/ ./ 将/ 一个/ 节点/ 从/ 社区/ i/ 移动/ 到/ 社区/ j/ 造成/ 的/ Q/ 值/ 的/ 变化/ 可以/ 计算/ 如下/ :/ Δ/ Q/ =/ weij/ +/ weji/ -/ 2waiwaj/ ,/ 社区/ i/ 和/ j/ 是/ 相连/ 的/ 0/ ,/ {/ 正如/ 前面/ 所述/ ,/ 目前/ 用于/ 社区/ 划分/ 的/ 算法/ 很多/ ,/ 本文/ 从/ 算法/ 复杂性/ 角度/ 出发/ ,/ 选择/ 使用/ Newman/ 提出/ 的/ 快速/ 算法/ 对/ SOS2/ 进行/ 聚类/ ,/ 其/ 时间/ 复杂度/ 为/ O/ (/ n/ ·/ logn/ )/ ,/ n/ 为/ 网络/ 节点/ 数/ ./ 但是/ 原始/ 的/ 快速/ 算法/ 是/ 针对/ 无权/ 网络/ 的/ ,/ 为了/ 使/ 其/ 可以/ 处理/ 边权/ 为/ 实数/ 的/ 网络/ ,/ 我们/ 对/ 其/ 做/ 了/ 必要/ 的/ 修改/ ./ 修改/ 后/ 的/ 快速/ 算法/ MFA/ 描述/ 如下/ ./ 算法/ 1/ ./ 修改/ 后/ 的/ 快速/ 算法/ MFA/ ./ 输入/ :/ 弱/ 连通/ 网络/ 输出/ :/ Q/ 和/ 聚类/ 结果/ 1/ ./ 假定/ SOS2/ 中/ 每个/ 节点/ 都/ 是/ 一个/ 社区/ ,/ 并/ 根据/ 式/ (/ 10/ )/ 2/ ./ WHILE/ 社区/ 总数/ 大于/ 1/ {/ 3/ ./ 根据/ 式/ (/ 11/ )/ 依次/ 计算/ 有/ 边/ 相连/ 社区/ 合并/ 后/ 的/ 4/ ./ 更新/ weij/ 、/ waij/ 和/ Q/ ;/ 5/ ./ }/ 6/ ./ 选择/ 使/ Q/ 最大/ 时/ 的/ 网络/ 划分/ ,/ 输出/ 相关/ 结果/ ;/ 7/ ./ RETURN/ ./ 社区/ 发现/ 算法/ 往往/ 是/ 针对/ 弱/ 连通/ 图/ 进行/ 的/ ,/ MFA/ 以/ SOS2/ 的/ 弱/ 连通/ 子图/ (/ WeaklyConnectedGraph/ ,/ WCG/ )/ 作为/ 输入/ ,/ 输出模块/ 度/ Q/ 和/ 聚类/ 结果/ ./ MFA/ 针对/ 的/ 是/ 已经/ 收集/ 到/ 的/ SOS/ 的/ 分类/ ,/ 那么/ 对于/ 后续/ 新/ 加入/ 的/ SOS/ 我们/ 该/ 如何/ 确定/ 其/ 类别/ 呢/ ?/ LFH/ 将分/ 两种/ 情况/ 实现/ 新增/ 服务/ 分类/ ,/ 即/ :/ (/ 1/ )/ 如果/ 这个/ SOS/ 与/ 现有/ SOS/ 有/ 联系/ (/ 共用/ 部分/ 服务/ )/ ,/ 即/ 在/ SOS2/ 中/ 代表/ 这/ 两个/ 应用/ 的/ 节点/ 间/ 有/ 边/ 相连/ ,/ 我们/ 将/ 该/ SOS/ 分类/ 到/ 与其/ 相连/ 的/ 那些/ SOS/ 中/ 产生/ 最大/ Δ/ Q/ 的/ 那个/ SOS/ 所在/ 的/ 类别/ 中/ ./ 这种/ 方法/ 与/ 我们/ 以前/ 用/ 社区/ 发现/ 算法/ 实现/ OO/ 软件/ 类/ 重构/ 的/ 方法/ 类似/ ,/ 详见/ 文献/ [/ 30/ ]/ ./ (/ 2/ )/ 如果/ 这个/ 新增/ SOS/ 与/ 现有/ SOS/ 没有/ 任何/ 联系/ (/ 没有/ 共用/ 任何/ API/ 服务/ )/ ,/ 我们/ 先/ 将/ 该/ SOS/ 归为/ 未分类/ ./ 随着/ 更/ 多/ 的/ SOS/ 通过/ (/ 1/ )/ 、/ (/ 2/ )/ 的/ 方式/ 不断/ 加入/ ,/ 先前/ 那些/ 未分类/ 的/ SOS/ (/ 包括/ 不/ 在/ WCG/ 中/ 的/ SOS/ 和/ 新/ 加入/ 但是/ 未分类/ 的/ SOS/ )/ 这时/ 可能/ 与/ 其它/ 已/ 分类/ SOS/ 有/ 联系/ ,/ 这时/ 我们/ 可以/ 对/ 这些/ 未分类/ 的/ SOS/ 按照/ (/ 1/ )/ 的/ 方法/ 再/ 进行/ 分类/ ./ 如图/ 3/ 所示/ ,/ 每个/ 黑色/ 节点/ 代表/ 一个/ SOS/ ,/ 边上/ 的/ 文字/ 是/ 其/ 名称/ ,/ 虚/ 线圈/ 起来/ 的/ SOS/ 属于/ 一个/ 类别/ ./ 在/ LFH/ 方法/ 中/ ,/ 对/ 每个/ 新增/ 的/ SOS/ (/ 记为/ SOS/ _/ e/ )/ 分类/ 时/ 将/ 完成/ 以下/ 步骤/ :/ 1/ ./ 判断/ 节点/ SOS/ _/ e/ 与/ 哪些/ 节点/ 有/ 直接/ 的/ 联系/ :/ 节点/ SOS/ _/ e/ 与/ 类别/ Cx/ 内/ 的/ SOS/ _/ c/ 和/ 类别/ Cy/ 内/ 的/ SOS/ _/ d/ 有/ 直接/ 联系/ ,/ 而/ 与/ 类别/ Cu/ 中/ 的/ SOS/ _/ f/ 没有/ 直接/ 的/ 关系/ (/ 肯定/ 不会/ 移动/ 至/ 没有/ 直接/ 关系/ 的/ 类别/ Cu/ )/ ./ 2/ ./ LFH/ 方法/ 会/ 试探性/ 地/ 将/ 节点/ SOS/ _/ e/ 移至/ 有/ 直接/ 关系/ 的/ 其它/ 类/ ,/ 即/ :/ 从/ 类别/ Cz/ 分别/ 移至/ 类别/ Cx/ 和/ 类别/ Cy/ ,/ 然/ Page7/ 后/ 计算/ 在/ 这/ 两次/ 移动/ 过程/ 中/ 产生/ 的/ Δ/ Q/ ,/ 即/ Δ/ Qzx/ 和/ Δ/ Qzy/ ./ 如果/ Δ/ Q/ </ 0/ ,/ 则/ 令/ Δ/ Q/ =/ 0.3/ ./ 比较/ Δ/ Qzx/ 和/ Δ/ Qzy/ 的/ 大小/ :/ 如果/ Δ/ Qzx/ >/ Δ/ Qzy/ ,/ 则/ 将/ 节点/ SOS/ _/ e/ 从/ 类别/ Cz/ 移至/ 类别/ Cx/ ;/ 如果/ Δ/ Qzx/ </ Δ/ Qzy/ ,/ 则/ 将/ 节点/ SOS/ _/ e/ 从/ 类别/ Cz/ 移至/ 类别/ Cy/ ;/ 如果/ Δ/ Qzx/ =/ Δ/ Qzy/ ,/ 则/ 将/ 节点/ SOS/ _/ e/ 随机/ 移至/ 类别/ Cx/ 或/ 类别/ Cy/ 之一/ ,/ 即/ 若/ rand/ (/ 0/ ,/ 1/ )/ >/ 1/ // 2/ ,/ 则/ 将/ 节点/ SOS/ _/ e/ 移至/ 类别/ Cx/ ,/ 否则/ 将/ 节点/ SOS/ _/ e/ 移至/ 类别/ Cy/ ./ 3.3/ ./ 2/ 服务/ 的/ 自动/ 分类/ 我们/ 认为/ ,/ 服务/ 的/ 类别/ 并/ 不是/ 先验/ 的/ ,/ 而是/ 由/ 用户/ 的/ 使用/ 及其/ 应用/ 情境/ 所/ 决定/ ./ 也就是说/ ,/ 服务/ 的/ 类别/ 由/ 其/ 被/ 使用/ 的/ SOS/ 的/ 类别/ 来/ 分类/ ./ 在/ 具体实施/ 服务/ 分类/ 前/ ,/ 我们/ 首先/ 定义/ 服务/ 相对/ 于/ 社区/ (/ 类别/ )/ 的/ 权值/ ./ 第/ j/ 个/ 服务/ sj/ 相对/ 于/ SOS/ 的/ 第/ k/ 个/ 类别/ Ck/ 的/ 权值/ Wk/ 类/ ,/ 其/ 时间/ 复杂度/ 为/ O/ (/ N2s/ )/ ./ 算法/ 2/ 描述/ 如下/ ./ 公式/ 中/ 的/ 标识符/ 与其/ 第一次/ 出现/ 时/ 的/ 意思/ 相同/ ./ LFH/ 方法/ 根据/ 算法/ 2/ 来/ 对/ API/ 服务/ 进行/ 分/ 算法/ 2/ ./ 服务/ 分类/ 算法/ SCA/ ./ 输入/ :/ 服务/ 集合/ Ns/ 输出/ :/ 各/ 服务/ 对应/ 的/ 类别/ 名注/ :/ cNum/ 对应/ SOS/ 分类/ 数/ ;/ W/ [/ k/ ]/ 用于/ 存储/ 服务/ 相对/ 1/ ./ WHILENs/ 中/ 服务/ 节点/ 数/ 大于/ 1/ {/ 2/ ./ 取/ Ns/ 中/ 一个/ 服务/ sj/ ,/ 并/ 将/ 其/ 从/ Ns/ 删除/ ;/ 3/ ./ fork/ =/ 0tocNum/ {/ 4/ ./ 计算/ sj/ 相对/ 类别/ k/ 的/ Wk5/ ./ }/ 6/ ./ 取/ max/ (/ W/ [/ k/ ]/ )/ 对应/ 的/ 下标/ k/ (/ 若/ W/ [/ k/ ]/ 中有/ 多个/ 7/ ./ 令/ sClu/ [/ j/ ]/ =/ k/ ;/ // / 将/ sj/ 归入/ 获得/ 最大/ Wk8/ ./ }/ 9/ ./ 输出/ sClu/ [/ ]/ 中/ 元素/ ;/ 10/ ./ RETURN/ ./ 3.4/ 服务/ 推荐/ 3.4/ ./ 1SOS2S/ 结构/ 特征分析/ 现有/ 的/ SOS/ 包含/ 了/ SOS/ 对/ 服务/ 的/ 使用/ 模式/ ,/ 分析/ 这些/ 使用/ 模式/ 可以/ 为/ 我们/ 推荐/ 服务/ 和/ 构建/ SOS/ 提供/ 指导/ ./ 因此/ ,/ 本/ 小节/ 我们/ 首先/ 分析/ 一下/ SOS2S/ 的/ 一些/ 基本/ 结构特征/ ./ 为了/ 后面/ 工作/ 的/ 需要/ ,/ 我们/ 使用/ 二部/ 图/ 研究/ 中/ 比较/ 常用/ 的/ 度数/ 中心/ 度/ (/ DegreeCentrality/ ,/ DC/ )/ 指标/ 来/ 分析/ SOS2S/ 的/ 结构特征/ ./ 定义/ 4/ (/ 度数/ 中心/ 度/ [/ 31/ ]/ )/ ./ 在/ 二部/ 图中/ ,/ 一个点/ 的/ 度数/ 中心/ 度/ 是/ 该/ 节点/ 所/ 隶属/ 的/ 事件/ 数/ ,/ 一个/ 事件/ 的/ 度数/ 中心/ 度/ 是/ 该/ 事件/ 所/ 拥有/ 的/ 行动者/ 数/ ./ 本文/ 中/ ,/ 服务/ 的/ 度数/ 中心/ 度/ 描述/ 了/ 该/ 服务/ 参与/ 的/ SOS/ 的/ 数量/ ./ SOS/ 的/ 度数/ 中心/ 度/ 描述/ 了/ SOS/ 使用/ 的/ 服务/ 的/ 数量/ ./ 这/ 两个/ 度数/ 中心/ 度/ 反映/ 了/ SOS/ 和/ 服务/ 的/ 使用/ 模式/ ,/ 即/ SOS/ 使用/ 几个/ 服务/ ,/ 服务/ 被/ 几个/ SOS/ 使用/ ./ 这里/ 我们/ 主要/ 使用/ SOS/ 的/ 度数/ 中心/ 度为/ 推荐/ 服务/ 和/ 构建/ SOS/ 提供/ 指导/ ./ 在/ 得到/ SOS/ 的/ 度数/ 中心/ 度后/ ,/ 我们/ 将/ 分析/ 这些/ 数值/ 的/ 分布/ ,/ 从而/ 确定/ 大部分/ SOS/ 使用/ 服务/ 数/ 的/ 一个/ 较/ 小/ 范围/ [/ A/ ,/ B/ ]/ ./ 譬如/ 如果/ 有/ 100/ 个/ SOS/ ,/ 这/ 100/ 个/ SOS/ 使用/ 的/ 服务/ 数从/ 1/ 个/ 到/ 30/ 个/ 不/ 等/ ,/ 但是/ 若/ 90/ %/ (/ 这个/ 数字/ 可以/ 由/ 用户/ 设定/ ,/ 建议/ 大于/ 80/ %/ )/ 以上/ 的/ SOS/ 使用/ 的/ 服务/ 数都/ 小于/ 10/ ,/ 那么/ 我们/ 就/ 设置/ [/ A/ ,/ B/ ]/ 为/ [/ 1/ ,/ 10/ ]/ ./ [/ A/ ,/ B/ ]/ 实际上/ 是/ 构成/ SOS/ 服务/ 数/ 的/ 一个/ 范围/ ,/ 我们/ 新/ 开发/ 的/ SOS/ 所/ 使用/ 的/ 服务/ 数/ 也/ 在/ 很大/ 概率/ 上/ 是/ 属于/ 这个/ 范围/ ./ 3.4/ ./ 2/ 服务/ 推荐/ 算法/ 如前所述/ ,/ SOS/ 包含/ 了/ 服务/ 的/ 使用/ 模式/ ,/ 从/ SOS2S/ 得到/ 的/ S2/ 自然/ 也/ 包含/ 了/ 服务/ 之间/ 的/ 使用/ 模式/ ./ S2/ 中/ 任意/ 长度/ 的/ 路径/ 实际上/ 就是/ 一个/ 潜在/ 的/ SOS/ ./ 因此/ ,/ 要/ 构建/ 新/ 的/ SOS/ ,/ 只/ 需要/ 依据/ 一定/ 的/ 规则/ 对/ S2/ 进行/ 遍历/ 即可/ ./ 同时/ ,/ 我们/ 将/ 度数/ 中心/ 度/ 最大/ 的/ 几个/ 服务/ 称为/ 平台/ 服务/ ,/ 它们/ 成为/ 很多/ SOS/ 的/ 构成/ 单元/ ./ 通过/ 对/ SOS2S/ 作/ 投影/ 操作/ 可以/ 得到/ SOS2S/ 相应/ 的/ S2/ ./ 我们/ 将/ 基于/ S2/ 来/ 为/ 构建/ SOS/ 的/ 用户/ 推荐/ 服务/ ./ 首先/ 我们/ 将/ SOS/ 开发/ 中/ ,/ 服务/ 的/ 使用/ 场景/ 分为/ 以下/ 3/ 种/ 类型/ :/ (/ 1/ )/ 用户/ 还/ 未/ 选择/ 任何/ 服务/ ;/ (/ 2/ )/ 用户/ 已选/ 了/ 一个/ 服务/ ;/ (/ 3/ )/ 用户/ 已选/ 了/ n/ (/ n/ >/ 2/ )/ 个/ 服务/ ./ 针对/ 每/ 一种/ 应用/ 场景/ 我们/ 都/ 提出/ 了/ 相应/ 的/ 推荐/ 方法/ ./ 服务/ 的/ 推荐/ 算法/ SRA/ 见/ 算法/ 3/ ,/ 其/ 时间/ 复杂度/ 为/ O/ (/ n/ ·/ logn/ )/ ,/ n/ 为/ 网络/ 节点/ 数/ ./ 由于/ 网络/ 的/ 规模/ 比较/ 大/ ,/ 节点/ 间/ 的/ 连接/ 可能/ 会/ 比较/ 稠密/ ,/ 为了/ 提高/ 推荐/ 算法/ 的/ 效率/ ,/ 我们/ 在/ 算法/ 中/ 提供/ 了/ 一个/ 边权/ 过滤/ 值/ wth/ (/ wth/ ∈/ [/ 0/ ,/ 1/ ]/ )/ ,/ 用于/ 将/ 那些/ 边权值/ 很小/ 的/ 边/ 过滤/ 掉/ ./ 同时/ ,/ 从/ 3.4/ ./ 1/ 小节/ 的/ 分析/ 我们/ 可以/ 知道/ ,/ SOS/ 一般/ 有/ B/ 个/ 以内/ 的/ 服务/ 构成/ ,/ 所以/ 在/ 推荐/ 算法/ 中/ ,/ 针对/ 应用/ 场景/ 3/ ,/ 我们/ 限定/ 推荐/ 的/ 服务/ 路径/ 长度/ l/ 在/ B/ 个/ 以内/ ,/ 即/ l/ / B/ ./ 同时/ ,/ SOS/ 是/ 个/ 大/ 粒度/ 的/ 服务/ ,/ SOS/ 的/ 推荐/ 可以/ 由/ 构成/ 它/ 的/ 服务/ 的/ 推荐/ 来/ 实现/ ,/ 即将/ 构成/ 该/ SOS/ 的/ 所有/ 服务/ 作为/ 推荐/ 算法/ 的/ 输入/ ./ 服务/ 推荐/ 算法/ SRA/ 描述/ 如下/ ./ Page8/ 算法/ 3/ ./ 服务/ 推荐/ 算法/ SRA/ ./ 输入/ :/ S2/ 、/ 用户/ 已/ 选择/ 的/ 服务/ 集合/ Ssel/ 、/ 待/ 推荐/ 的/ 服务/ 输出/ :/ 推荐/ 的/ 服务/ 集合/ 1/ ./ IFSselisNULLTHEN/ // // 场景/ (/ 1/ )/ 2/ ./ 推荐/ 平台/ 服务/ ;/ 3/ ./ ELSEIF/ |/ Ssel/ |/ =/ 1THEN/ // // 场景/ (/ 2/ )/ 4/ ./ IFDC/ (/ k/ )/ / kTHEN5/ ./ 在/ S2/ 中/ 选择/ 与/ 服务/ k/ 相连/ 的/ 节点/ 中/ ,/ 节点/ 间边/ 6/ ./ ELSEIF1/ </ DC/ (/ k/ )/ </ kTHEN7/ ./ 在/ S2/ 中/ 选择/ 与/ 服务/ k/ 相连/ 的/ 节点/ 中/ ,/ 节点/ 间边/ 8/ ./ ELSE/ // // 场景/ (/ 3/ )/ 9/ ./ ForSsel/ 中/ 任一/ 节点/ 组合/ Ns/ 和/ Ne10/ ./ 求/ S2/ 中以/ Ns/ 为/ 起点/ ,/ Ne/ 为/ 终点/ ,/ 包含/ Ssel/ 中其/ 11/ ./ 按照/ 路径/ 长度/ 对/ Sroute/ 中/ 的/ 路径/ 归类/ ,/ 输出/ 每/ 一类/ 12/ ./ RETURN/ ./ 4/ 实例/ 分析/ 为了/ 说明/ LFH/ 方法/ 的/ 具体实施/ 过程/ ,/ 同时/ 验证/ 其/ 有效性/ ,/ 本文/ 将/ 结合/ ProgrammableWeb/ 上/ mashup/ 应用/ 和/ API/ 服务/ 的/ 真实/ 数据/ ,/ 进行/ 实证/ 分析/ ./ 4.1/ 数据/ 来源/ ProgrammableWeb/ 是/ 著名/ 的/ mashup/ 应用/ 和/ 开放/ API/ 服务/ 目录/ ,/ 罗列/ 了/ 5000/ 多个/ mashup/ 应用/ 和/ 3000/ 多个/ API/ 服务/ ,/ 并/ 提供/ 了/ mashup/ 和/ API/ 的/ 一些/ 注册/ 元/ 信息/ ,/ 包括/ 它们/ 的/ 名称/ 、/ URL/ 、/ 提供者/ 、/ 标签/ 等/ ./ API/ 是/ 服务/ ,/ mashup/ 是/ 由/ 服务/ 组合/ 得到/ 的/ SOS/ ,/ 也/ 可以/ 看成/ 大/ 粒度/ 服务/ ,/ 它/ 包含/ 服务/ 组合/ 的/ 历史/ 信息/ ,/ 符合/ 本文/ 工作/ 的/ 要求/ ./ 因此/ ,/ 本文/ 以/ ProgrammableWeb/ 上/ 的/ mashup/ 、/ API/ 服务/ 的/ 真实/ 数据/ 为例/ 展开/ 研究/ ./ 图/ 4/ 所示/ 的/ 是/ ProgrammableWeb/ 上/ 名称/ 为/ SkiBonk/ ①/ 的/ mashup/ 应用/ 的/ 一些/ 注册/ 元/ 信息/ ,/ 包括/ mashup/ 应用/ 的/ 名称/ 、/ 描述/ 信息/ 、/ 使用/ 的/ API/ 服务/ 和/ 标签/ 等/ ./ 我们/ 使用/ 自己/ 开发/ 的/ 网/ 爬/ 工具/ 将/ Program/ -/ mableWeb/ 上/ 从/ 2005/ 年/ (/ 建站/ 时/ )/ 到/ 2011/ 年/ 1/ 月/ 12/ 日/ (/ 本文/ 工作/ 开展/ 时/ )/ 所有/ mashup/ 应用/ 的/ 名称/ 、/ 描述/ 信息/ 、/ API/ 服务/ 和/ 标签/ 信息/ (/ 图/ 4/ 中/ 方框/ 部分/ )/ 爬/ 了/ 下来/ ,/ 存储/ 在/ 本地/ 数据库/ 中/ ./ 这些/ 数据/ 是/ 后续/ 工作/ 的/ 基础/ ./ ProgrammableWeb/ 上/ 的/ 数据/ 都/ 是/ 由/ 用户/ 提交/ 的/ ,/ 存在/ 一定/ 的/ 随意性/ ./ 在/ 数据/ 收集/ 的/ 过程/ 中/ ,/ 我们/ 发现/ 这些/ 数据/ 存在/ 一些/ 错误/ :/ (/ 1/ )/ 有些/ mashup/ 存在/ 重复/ 注册/ 现象/ ./ 一些/ mashup/ 虽然/ 它们/ 名称/ 不/ 一样/ ,/ 但是/ 它们/ 其它/ 的/ 信息/ 都/ 一样/ ./ 这些/ mashup/ 在/ 我们/ 的/ 数据/ 集中/ 只/ 保存/ 一份/ ./ (/ 2/ )/ 有些/ mashup/ 仅/ 提供/ 了/ 名称/ ,/ 但是/ 其它/ 我们/ 所/ 需/ 的/ 注册/ 信息/ 缺失/ 了/ ./ 这些/ mashup/ 将/ 不/ 作为/ 我们/ 的/ 实验/ 数据/ ./ 同时/ ,/ 用于/ 标识/ mashup/ 的/ 标签/ 也/ 存在/ 不/ 一致/ ,/ 同/ 一种/ 含义/ 的/ 标签/ 有/ 多种不同/ 的/ 表现形式/ ,/ 如/ “/ api/ ”/ 、/ “/ Api/ ”/ 和/ “/ APIs/ ”/ 都/ 表示/ API/ ,/ 但是/ 形式/ 不同/ ,/ 有些/ 标签/ 甚至/ 拼写错误/ ./ LFH/ 方法/ 使用/ 文献/ [/ 32/ ]/ 中/ 的/ SuffixStripping/ 算法/ 对/ 标签/ 进行/ 预处理/ ,/ 将/ 同意/ 异形/ 的/ 词/ 都/ 转化成/ 同一/ 词性/ ,/ 尽量/ 消除/ 存在/ 的/ 不一致性/ ./ 最终/ ,/ 我们/ 的/ 数据/ 集/ 包含/ 5115/ 个/ mashup/ 应用/ 、/ 750/ 个/ API/ 服务/ 和/ 1489/ 个/ 标签/ ,/ 数据/ 集/ 可以/ 从/ 文献/ [/ 33/ ]/ 下载/ ./ 4.2/ mashup/ 和/ API/ 服务/ 的/ 自动/ 分类/ 4.2/ ./ 1mashup/ 的/ 自动/ 分类/ 通过/ 解析/ 所/ 获得/ 的/ 数据/ ,/ 我们/ 构建/ 了/ 所有/ mashup/ 应用/ 和/ API/ 服务/ 之间/ 的/ SOS2S/ (/ mashup/ 是/ SOS/ 、/ API/ 是/ 服务/ )/ ./ 通过/ 对/ SOS2S/ 作/ 投影/ 操作/ ,/ 我们/ 可以/ 得到/ SOS2S/ 相应/ 的/ SOS2/ ,/ 该/ SOS2/ 拥有/ 5115/ 个/ 节点/ 和/ 2660793/ 条边/ ./ 但是/ 这个/ SOS2/ 并非/ 一个/ 弱/ 连通/ 图/ ,/ 它/ 由/ 97/ 个弱/ 连通/ 子图/ 构成/ ./ 图/ 5/ 显示/ 了/ 各个/ 弱/ 连通/ 子图/ 包含/ 的/ 节点/ 数/ ,/ 其中/ 最大/ 弱/ 连通/ 子图/ (/ MaximumWeaklyConnectedGraph/ ,/ MWCG/ )/ 有/ 4973/ 个/ 节点/ ,/ 最小/ 的/ 子/ 图/ 节点/ 数仅/ 为/ 1/ (/ 孤立/ 点/ )/ ./ MWCG/ 的/ 节点/ 数占/ 了/ SOS2/ 总/ 节点/ 数/ 的/ ①/ SkiBonk/ 在/ programmableWeb/ 上/ 的/ 网址/ ./ http/ :/ // // www/ ./ Page997/ ./ 2/ %/ ,/ 而/ 其余/ 的/ 弱/ 连通/ 图/ 的/ 节点/ 数占/ 了/ 不到/ 4/ %/ ,/ 统计/ 上/ 忽略/ 它们/ 不会/ 对/ 结果/ 产生/ 太大/ 的/ 影响/ ./ 因此/ ,/ 本文/ 使用/ SOS2/ 的/ MWCG/ 作为/ 分析/ 对象/ ./ 我们/ 将/ MWCG/ 作为/ MFA/ 算法/ 的/ 输入/ ,/ 聚类/ 后/ 图/ 5/ 图/ 6/ 从图/ 5/ (/ b/ )/ 我们/ 可以/ 发现/ ,/ 类/ 6/ 至类/ 17/ 中/ mashup/ 应用/ 节点/ 数都/ 在/ 20/ 以内/ (/ 合计/ 58/ 个/ 节点/ )/ ,/ 相比/ 网络/ 规模/ 总/ 节点/ 数/ 4973/ 而言/ 很小/ ,/ 统计/ 上/ 我们/ 可以/ 将/ 这些/ 类/ 忽略/ ./ 因此/ ,/ 我们/ 这里/ 主要/ 考虑/ 前/ 5/ 个/ 分类/ ./ 为了/ 验证/ 分类/ 结果/ 是否/ 有/ 意义/ ,/ 我们/ 手工/ 对/ 5/ 个/ 分类/ 中共/ 4915/ 个/ mashup/ 应用/ 进行/ 分析/ ./ 通过/ 分析/ 每个/ mashup/ 应用/ 的/ 描述/ (/ description/ )/ 信息/ ,/ 从/ 描述/ 信息/ 判断/ 其/ 功能/ 及/ 所述/ 的/ 领域/ ,/ 最终/ 将/ 这/ 4915/ 个/ mashup/ 进行/ 手工/ 分类/ ./ 在/ 分类/ 1/ 中/ (/ 如图/ 6/ (/ a/ )/ )/ 除/ CrowdMatchviaHotorNot/ 、/ GuessWhoisHotter/ 、/ Hard/ 、/ HotCap/ -/ tcha/ 、/ HotOrNotHook/ -/ Up/ 、/ HotOrNotLiveGadget/ 、/ HotOrNotOddOutGame/ 、/ JesusSpeaks/ 、/ metamedias/ 、/ ScoreSum/ 、/ Snaparazzi/ 这/ 11/ 个/ mashup/ 应用/ 以外/ ,/ 其余/ 都/ 是/ 跟/ 手机/ 移动/ 通信/ 密切相关/ 的/ ./ 而/ 这/ 11/ 个/ 应用/ 得到/ 17/ 个/ 分类/ (/ 社区/ )/ ,/ 各/ 分类/ 的/ 规模/ 如图/ 5/ (/ b/ )/ 所示/ ,/ 部分/ 分类/ 结果/ 及其/ 网络图/ 见图/ 6/ 所示/ ./ 那些/ 不/ 在/ MWCG/ 中/ 的/ mashup/ 应用/ ,/ 我们/ 将/ 其/ 标识/ 为/ 未分类/ ./ 之所以/ 也/ 被/ 划分/ 到/ 分类/ 1/ 中/ ,/ 是因为/ 它们/ 使用/ 的/ API/ 服务/ 也/ 被/ 分类/ 1/ 中/ 其它/ 的/ mashup/ 应用/ 频繁/ 使用/ ./ 在/ 分类/ 2/ 中/ (/ 如图/ 6/ (/ b/ )/ )/ 除/ TheFiveSpace/ 、/ Rosetta/ 、/ WeatherholicDynamicImages/ 、/ StockaholicDynamicChart/ 这/ 4/ 个/ mashup/ 应用/ 以外/ 都/ 是/ 跟/ 在线/ 办公/ (/ 在线/ 文档/ 处理/ )/ 密切相关/ 的/ ./ 而/ 这/ 4/ 个/ 应用/ 被/ 划分/ 到/ 分类/ 2/ 中/ ,/ 同样/ 也/ 是因为/ 它们/ 使用/ 的/ API/ 服务/ 被/ 分类/ 2/ 中/ 其它/ 的/ mashup/ 应用/ 频繁/ 使用/ ./ 分类/ 3/ 中/ 主要/ 是/ 一些/ 与/ 出行/ 相关/ 的/ mashup/ 应用/ ,/ 包括/ 道路/ 、/ 交通/ 、/ 住宿/ 、/ 餐饮/ 、/ 天气/ 等/ ./ 当然/ ,/ 这些/ mashup/ 应用/ 中/ 好多/ 也/ 用到/ 了/ 地图/ 方面/ 的/ API/ 服务/ ./ 在/ 分类/ 4/ 中/ 主要/ 是/ 一些/ 与/ 地图/ 相关/ 的/ mashup/ 应用/ ,/ 且/ 大多数/ 应用/ 都/ 使用/ 了/ GoogleMaps/ 这个/ API/ 服务/ ,/ 甚至/ 好多/ 应用/ 仅/ 由/ 这/ 一个/ API/ 服务/ 构成/ ,/ 如/ Openmaps/ 、/ RateMyStreet/ 等/ ./ 在/ 分类/ 5/ 中/ 主要/ 是/ 一些/ 与/ 社交/ 网/ Page10/ 络/ (/ Flicker/ 、/ Twitter/ 、/ Facebook/ 、/ Youtube/ 、/ Delicious/ 、/ wiki/ 、/ amazoneBay/ )/ 密切相关/ 的/ mashup/ 应用/ ./ 此外/ ,/ 也/ 包括/ 了/ 一些/ 出行/ 、/ 桌面/ 应用/ 、/ 手机软件/ 、/ 政治/ 等/ 相关/ 的/ 应用/ ./ 这些/ 应用/ 之所以/ 也/ 分到/ 了/ 这个/ 类中/ ,/ 是因为/ 它们/ 都/ 是/ 使用/ 了/ 与/ Twitter/ 、/ Facebook/ 等/ 相关/ 的/ API/ 服务/ ./ 分类/ 3/ 至/ 分类/ 5/ 的/ 网络/ 规模/ 比较/ 大/ ,/ 用/ 网络图/ 显示/ 不够/ 清晰/ ,/ 故/ 这里/ 我们/ 将/ 它们/ 省略/ 了/ ,/ 相关/ 数据/ 可/ 从/ 文献/ [/ 33/ ]/ 下载/ ./ 为了/ 评价/ 分类/ 的/ 有效性/ ,/ 人们/ 提出/ 了/ 很多/ 度量/ 方法/ ,/ 如/ 外部/ 度量/ 、/ 内部/ 度量/ 和/ 相对/ 度量/ 等/ [/ 34/ ]/ ./ 我们/ 选用/ 外部/ 度量/ 中/ 的/ 纯净度/ 指标/ (/ ClusterPurity/ ,/ CP/ )/ [/ 35/ ]/ 来/ 检验/ 本文/ 方法/ 的/ 有效性/ ./ 下面/ 首先/ 给出/ 纯净度/ 指标/ 的/ 定义/ ./ 定义/ 5/ (/ 聚类/ 纯净度/ [/ 35/ ]/ )/ ./ 令/ D/ 表示/ 待/ 聚类/ 的/ 数据/ 集合/ ,/ C/ 表示/ D/ 上/ 的/ 某次/ 聚类/ 划分/ ,/ Ck/ ∈/ C/ 为/ 该/ 聚类/ 结果/ 中/ 的/ 一个/ 簇/ ,/ S/ 表示/ D/ 上/ 的/ 标准/ 聚类/ 结果/ ,/ s/ ∈/ S/ 为/ 该/ 聚类/ 结果/ 中/ 的/ 一个/ 标准/ 簇/ ,/ 则/ Ck/ 类/ 的/ 纯净度/ CP/ (/ Ck/ )/ 定义/ 为/ 该类/ 数据/ 占/ 整个/ 簇/ 的/ 比例/ ,/ 即/ 其中/ |/ ·/ |/ 表示/ 集合/ ·/ 中/ 的/ 元素/ 个数/ ./ 本文/ 中/ 标准/ 聚类/ 结果/ S/ 是/ 通过/ 我们/ 手工/ 分类/ 得到/ 的/ ./ 在/ 此基础/ 上/ ,/ 整个/ 划分/ C/ 的/ 纯净度/ CP/ (/ C/ )/ 是/ 所有/ 簇/ 的/ 纯净度/ 的/ 均值/ ,/ 即/ CP/ 反应/ 了/ 聚类/ 结果/ 的/ 准确性/ ,/ 其值/ 越/ 高/ 说明/ 聚类/ 效果/ 越/ 好/ ,/ 纯净度/ 能/ 对/ 聚类/ 结果/ 进行/ 较为/ 全面/ 合理/ 的/ 评价/ ./ 本文/ 方法/ 所得/ 各个/ 簇/ 的/ 纯净度/ 如表/ 1/ 所示/ ,/ 整个/ 聚类/ 的/ 纯净度/ 为/ 86.8/ %/ ./ 4.2/ ./ 2API/ 服务/ 的/ 自动/ 分类/ 在/ 得到/ 了/ mashup/ 应用/ 的/ 分类/ 后/ ,/ 我们/ 按照/ SCA/ 算法/ 实现/ API/ 服务/ 的/ 分类/ ./ 各类/ 别中/ 的/ API/ 服务/ 数量/ 如表/ 2/ 和/ 图/ 7/ 所示/ ./ 表/ 2/ 中/ 显示/ 的/ 是/ 5/ 个/ 主要/ 分类/ 的/ 结果/ (/ 对应/ 4.2/ ./ 1/ 节/ mashup/ 应用/ 的/ 5/ 个/ 主要/ 分类/ )/ ,/ 图/ 7/ 显示/ 的/ 是/ 所有/ 分类/ 的/ 结果/ ./ 其中/ 第/ 0/ 类/ 表示/ 这些/ API/ 没有/ 被/ 分类/ ./ 因为/ 我们/ 的/ 分类/ 是/ 针对/ mahsup/ 的/ 分类/ 结果/ 来/ 对/ API/ 分类/ 的/ ./ mashup/ 分类/ 的/ 时候/ 针对/ 的/ 是/ MWCG/ 进行/ 的/ ,/ 忽略/ 了/ 那些/ 不/ 在/ 这个/ MWCG/ 中/ 的/ 节点/ ./ 所以/ 这些/ mashup/ 应用/ 使用/ 的/ 部分/ API/ 就/ 无法/ 实现/ 分类/ ./ 为了/ 检验/ LFH/ 方法/ 对/ 新增/ mashup/ 应用/ 分类/ 的/ 有效性/ ,/ 我们/ 又/ 将/ ProgrammableWeb/ 上/ 2011/ 年/ 2/ 月/ 1/ 日至/ 2011/ 年/ 2/ 月/ 28/ 日/ (/ 本文/ 工作/ 结束/ 时/ )/ 新增/ 的/ 85/ 个/ mashup/ 应用/ 的/ 元/ 信息/ 爬/ 了/ 下来/ ./ 在/ 这/ 85/ 个/ mashup/ 应用/ 中/ ,/ 共有/ 30/ 个/ mashup/ 应用/ 使用/ 了/ 2011/ 年/ 1/ 月/ 12/ 日/ (/ 4.1/ 节/ 数据/ 收集/ 之/ 时/ )/ 后/ 注册/ 的/ 新/ API/ 服务/ ,/ 如/ mashup/ 应用/ ComparePricesDis/ -/ count/ -/ Malin/ ./ com/ 使用/ 了/ Kelkoo/ ,/ player4you/ 使用/ 了/ GoogleFont/ ,/ mapTheGraph/ !/ 使用/ 了/ FacebookGraph/ 等/ ./ 这些/ mashup/ 应用/ 在/ 与/ 其它/ mashup/ 应用/ 计算/ 相似/ 度/ 的/ 时候/ ,/ 这些/ 新/ API/ 服务/ 没有/ 参与/ 计算/ ,/ 因此/ 会/ 对/ 相似/ 度值/ 产生/ 影响/ ./ 所以/ 使用/ 了/ 这些/ 新/ API/ 服务/ 的/ mashup/ 应用/ 并/ 不/ 作为/ 我们/ 的/ 检验/ 数据/ ./ 因此/ 我们/ 的/ 检验/ 数据/ 集由/ 剩下/ 的/ 55/ 个/ mashup/ 应用/ 构成/ ./ 我们/ 按照/ 3.3/ ./ 1/ 节/ 介绍/ 的/ 方法/ 对/ 这/ 新增/ 的/ 55/ 个/ 服务/ 进行/ 自动/ 分类/ ,/ 然后/ 将/ 自动/ 分类/ 的/ 结果/ 与/ 手工/ 分类/ 的/ 结果/ 进行/ 对比/ ,/ 我们/ 发现/ 55/ 个/ mashup/ 应用/ 中/ ,/ 其中/ 48/ 个/ 分到/ 了/ 正确/ 的/ 类别/ 中/ ,/ 只有/ 7/ 个/ mashup/ 应用/ 的/ 分类/ 错误/ ./ 可见/ LFH/ 方法/ 对/ 新增/ mashup/ 应用/ 的/ 分类/ 具有/ 很/ 好/ 的/ 效果/ ./ 4.3/ API/ 服务/ 推荐/ 通过/ 解析/ 所/ 获得/ 的/ 数据/ ,/ 我们/ 构建/ 了/ 所有/ Page11mashup/ 应用/ 和/ API/ 服务/ 之间/ 的/ SOS2S/ (/ mashup/ 是/ SOS/ 、/ API/ 是/ 服务/ )/ ./ 如图/ 8/ 所示/ ,/ 其中/ 圆形/ 节点/ 对应/ mashup/ 应用/ (/ 共/ 5115/ 个/ )/ ,/ 方形/ 节点/ 对应/ API/ 服务/ (/ 共/ 750/ 个/ )/ ,/ 两类/ 节点/ 间/ 的/ 边/ 代表/ mashup/ 应用/ 使用/ API/ 服务/ 的/ 关系/ ./ 图/ 9/ 表/ 3/ 度数/ 中心/ 度/ top/ -/ 10/ 的/ mashup/ 和/ API/ 服务/ mashup/ 应用/ mashup/ 应用/ mashup/ 应用/ mashup/ 应用/ SociotocoSearchmashup/ 应用/ mashup/ 应用/ mashup/ 应用/ ConnectorLocalmashup/ 应用/ mashup/ 应用/ MapsShownToMe21mashup/ 应用/ API/ 服务/ API/ 服务/ API/ 服务/ API/ 服务/ API/ 服务/ AmazoneCommerce358API/ 服务/ API/ 服务/ API/ 服务/ MicrosoftVirtualEarth173API/ 服务/ API/ 服务/ 通过/ 对/ SOS2S/ 作/ 投影/ 操作/ ,/ 可以/ 得到/ SOS2S/ 相应/ 的/ S2/ (/ 如图/ 10/ )/ ./ S2/ 包含/ 750/ 个/ 节点/ ,/ 9415/ 条边/ ,/ 我们/ 使用/ 度数/ 中心/ 度/ 指标/ DC/ 来/ 分析/ 该/ SOS2S/ 的/ 结构特征/ ./ 图/ 9/ 显示/ 了/ 具有/ 某/ 一度/ 数/ 中心/ 度/ 的/ mashup/ 应用/ 和/ API/ 服务/ 的/ 数量/ ./ 可以/ 发现/ ,/ 大部分/ mashup/ 应用/ 具有/ 较/ 小/ 的/ 度数/ 中心/ 度/ (/ 80.1/ %/ 的/ mashup/ 应用/ 的/ 度数/ 中心/ 度仅/ 为/ 1/ 和/ 2/ )/ ,/ 只有/ 1.1/ %/ 的/ mashup/ 应用/ 度数/ 中心/ 度/ 大于/ 10/ ,/ 平均/ 每个/ mashup/ 应用/ 度数/ 中心/ 度仅/ 为/ 13.8/ ./ 这/ 说明/ 大部分/ mashup/ 应用/ 仅/ 由/ 少量/ 的/ API/ 服务/ 组合而成/ ./ 与此同时/ ,/ 大部分/ 的/ API/ 服务/ 具有/ 较/ 小/ 的/ 度数/ 中心/ 度/ (/ 50.7/ %/ 的/ API/ 服务/ 度数/ 中心/ 度仅/ 为/ 1/ 和/ 2/ )/ ,/ 只有/ 17.9/ %/ 的/ API/ 服务/ 度数/ 中心/ 度/ 大于/ 10/ ,/ 平均/ 每个/ API/ 服务/ 的/ 度数/ 中心/ 度为/ 9.5/ ./ 这/ 说明/ 大部分/ API/ 服务/ 仅/ 参与/ 了/ 少量/ 的/ mashup/ 应用/ ./ 度数/ 中心/ 度/ 最大/ 的/ 10/ 个/ mashup/ 应用/ 和/ API/ 服务/ (/ 平台/ API/ 服务/ )/ 如表/ 3/ 所示/ ./ 由/ 97/ 个弱/ 连通/ 子图/ 构成/ ,/ 其中/ 最大/ 的/ 弱/ 连通/ 子图/ 有/ 651/ 个/ 节点/ ,/ 最小/ 的/ 子/ 图/ 节点/ 数仅/ 为/ 1/ (/ 孤立/ 点/ )/ ./ 节点/ 边上/ 的/ 标签/ 是/ 该/ 节点/ 所属/ 分类/ 的/ 一个/ 标识符/ ./ 为了/ 使图/ 显示/ 的/ 清晰/ ,/ 我们/ 忽略/ 了/ 每个/ 节点/ 对应/ API/ 服务/ 的/ 名称/ ./ Page12/ 为了/ 检验/ 本文/ 构建/ 的/ S2/ 是否/ 有/ 意义/ 以及/ API/ 服务/ 推荐/ 方法/ 是否/ 有效/ ,/ 我们/ 仍然/ 使用/ 4.2/ ./ 2/ 节/ 收集/ 的/ 55/ 个/ mashup/ 应用/ 进行/ 验证/ ./ 在/ 这/ 55/ 个/ mashup/ 应用/ 中/ ,/ mashup/ 应用/ 使用/ 的/ API/ 服务/ 的/ 个数/ 从/ 1/ (/ 如/ ColorPal/ )/ 到/ 20/ (/ 如/ TheMusicFeed/ )/ 不/ 等/ ,/ 但/ 98.2/ %/ 的/ mashup/ 应用/ 其/ 使用/ 的/ API/ 服务/ 个数/ 仍/ 在/ 10/ 个/ 以内/ ./ SRA/ 按/ 3/ 种/ 使用/ 场景/ 进行/ 推荐/ ,/ 使用/ 场景/ 不同/ ,/ 推荐/ 过程/ 存在/ 差异/ ./ 这里/ 我们/ 以/ 每个/ mashup/ 应用/ 使用/ 的/ API/ 服务/ 集合/ 作为/ SRA/ 的/ 输入/ ,/ 看/ S2/ 中/ 是否/ 存在/ 一条/ 仅/ 包含/ 这/ 几个/ 服务/ 的/ 路径/ ,/ 以此/ 作为/ 检验/ S2/ 和/ 算法/ 有效性/ 的/ 标准/ ./ 我们/ 发现/ ,/ 在/ 这/ 55/ 个/ mashup/ 应用/ 中/ ,/ 仅/ RhythmandBluesmashup/ 这个/ mashup/ 应用/ 对应/ 的/ MTV/ ,/ GoogleCustomSearch/ 两个/ API/ 服务/ 在/ S2/ 中/ 找/ 不到/ 一条/ 仅/ 包含/ 这/ 两个/ 服务/ 的/ 路径/ ,/ 其余/ 的/ 54/ 个/ mashup/ 应用/ 中/ ,/ 它们/ 每个/ mashup/ 使用/ 的/ API/ 服务/ 集合/ 在/ S2/ 中/ 都/ 有/ 一个/ 仅/ 包含/ 这/ 几个/ API/ 的/ 路径/ 与/ 之/ 对应/ ,/ 这/ 说明/ 推荐/ SRA/ 确实/ 可以/ 通过/ S2/ 为/ 用户/ 推荐/ 有效/ 的/ API/ 服务/ ,/ 以/ 简化/ mashup/ 应用/ 的/ 构建/ ./ 5/ 应用/ 及/ 工具/ 开发/ S2R2/ (/ SoftwareServiceRegistryandRepos/ -/ itory/ )/ ①/ 是/ 武汉大学/ 研发/ 的/ 一个/ 语义/ 互操作性/ 软件/ 服务/ 注册/ 管理/ 平台/ ./ 该/ 平台/ 通过/ 研究/ 互联网/ 上/ 软件/ 服务/ 的/ 基础理论/ 与/ 方法/ 、/ 技术标准/ ,/ 开发/ 实现/ 软件/ 服务/ 资源管理/ 与/ 服务/ 的/ 基础设施/ 平台/ 及其/ 关键技术/ ,/ 提供/ 一个/ 统一/ 的/ 软件/ 服务/ 注册/ 管理/ 平台/ ,/ 有效/ 管理/ 各种/ 已/ 注册软件/ 服务/ ,/ 方便/ 用户/ 找到/ 所/ 需/ 服务/ ./ 以/ 这/ 一/ 平台/ 为/ 基础/ ,/ 建立/ 软件/ 服务/ 开发/ 的/ 基础设施/ ,/ 改善/ 软件/ 服务质量/ ,/ 同时/ ,/ 推动/ 面向/ 服务/ 的/ 软件开发/ 新/ 技术/ 的/ 应用/ ,/ 实现/ 软件/ 服务/ 资源/ 的/ 交流/ 与/ 共享/ ./ 目前/ 该/ 平台/ 主要/ 由/ 服务/ (/ Web/ 服务/ 、/ mashup/ 应用/ 、/ API/ 服务/ 等/ )/ 注册/ 子系统/ 、/ 服务/ 管理子系统/ 、/ 本体/ 注册/ 管理子系统/ 和/ 语义/ 查询/ 子系统/ 4/ 个/ 部分/ 组成/ (/ 如图/ 11/ 所示/ )/ ./ S2R2/ 系统/ 的/ 详细描述/ 请/ 见/ 文献/ [/ 36/ ]/ ./ 我们/ 已经/ 将/ LFH/ 方法/ 应用/ 于/ mashup/ 应用/ 注册/ 和/ API/ 服务/ 查询/ 2/ 个/ 模块/ 中/ ,/ 提供/ 对/ mashup/ 应用/ 和/ API/ 服务/ 分类/ 以及/ API/ 推荐/ 的/ 支持/ ./ 当/ 用户/ 通过/ S2R2/ 平台/ 注册/ 一个/ mashup/ 应用/ 时/ ,/ 在/ 输入/ 该/ mashup/ 应用/ 使用/ 的/ API/ 后/ ,/ 后台程序/ 会/ 通过/ 算法/ 2/ 为/ 其/ 推荐/ 可能/ 的/ 类别/ ./ 图/ 12/ (/ a/ )/ 显示/ 的/ 是/ 注册/ mashup/ 应用/ Localley/ ②/ 时/ ,/ 在/ 输入/ Facebook/ 、/ GoogleMaps/ 和/ Twitter/ 后/ ,/ 为/ 其/ 推荐/ “/ 社交/ 网络/ ”/ 类别/ 的/ 例子/ ./ 当/ 用户/ 在/ 某个/ mashup/ 应用/ 开发/ 平台/ 中/ 开发/ mashup/ 应用/ 时/ ,/ 当/ 通过/ S2R2/ 平台/ 查询/ 一个/ 或/ 多个/ API/ 服务/ 时/ ,/ S2R2/ 也/ 会/ 按照/ 算法/ 3/ 推荐/ 若干/ 可/ 与/ 已有/ API/ 服务/ 组合/ 的/ API/ 服务/ ,/ 并/ 以/ 列表/ 和/ 网络图/ 两种/ 方式/ 显示/ 给/ 用户/ ./ 图/ 12/ (/ b/ )/ 对应/ 场景/ 1/ ,/ 即/ 在/ 用户/ 还/ 未/ 选择/ 任何/ API/ 服务/ 时/ ,/ 为/ 其/ 推荐/ 平台/ API/ 服务/ 的/ 情形/ ./ 图/ 12/ (/ c/ )/ 对应/ 场景/ 2/ ,/ 即/ 在/ 用户/ 已/ 输入/ 一个/ API/ 服务/ 23/ 时/ ,/ 为/ 其/ 推荐/ 可以/ 组合/ 的/ 其它/ API/ 服务/ 的/ 情形/ ./ 图/ 12/ (/ d/ )/ 对应/ 场景/ 3/ ,/ 即/ 在/ 用户/ 输入/ API/ 服务/ 23/ 和/ GoogleMaps/ 时/ ,/ 为/ 其/ 推荐/ 可/ 组合/ API/ 服务/ 路径/ 的/ 情形/ ./ LFH/ 方法/ 提供/ 了/ 一种/ 利用/ 历史/ 信息/ 从/ 结构/ 角度/ 挖掘/ 知识/ 的/ 方法/ ,/ 虽然/ 本文/ 以/ API/ 服务/ 和/ mash/ -/ up/ 应用/ 为/ 载体/ 来/ 进行/ 说明/ ,/ 但是/ 只要/ 有/ SOS/ ,/ 可以/ 获得/ 服务/ 和/ 软件/ 之间/ 的/ 这种/ 构成/ 关系/ ,/ 我们/ 就/ 可以/ 用/ LFH/ 方法/ 来/ 对/ 服务/ 和/ 软件/ (/ 大/ 粒度/ 服务/ )/ 进行/ 分类/ ,/ 并/ 进行/ 服务/ 的/ 推荐/ ./ 本文/ 提出/ 的/ 服务/ 分类/ 方法/ 可以/ 用于/ 服务/ 注册/ 管理系统/ 中/ ,/ 为/ 服务/ 提供/ 分类/ 信息/ ,/ 提高/ 服务/ 发现/ 、/ 检索/ 以及/ 服务/ 资源管理/ 的/ 效率/ ./ 与此同时/ ,/ 目前/ 服务/ 组合/ 中/ 服务/ 的/ 可/ 组合/ 关系/ 往往/ 是/ 根据/ 服务/ 间/ 的/ 输入输出/ 来/ 进行/ 判断/ 的/ ,/ 本文/ 提供/ 了/ 一种/ 从/ 结构/ 角度/ 挖掘/ 服务/ 组合/ 关系/ 的/ 方法/ ,/ 为/ 服务/ 组合/ 开辟/ 了/ 新/ 的/ 思路/ ./ SOS2S/ 可以/ 推广/ 至/ 一般/ 的/ SOS/ 和/ 服务/ 之间/ 关系/ 的/ 网络/ ,/ 从而/ 可以/ 让/ 我们/ 获得/ 一些/ 知识/ ,/ 如/ 软件/ 是/ 如何/ 使用/ 服务/ 的/ 、/ 服务/ 是/ 如何/ 在/ 不同/ 的/ 软件/ 中/ 使用/ ①/ ②/ Page13/ 图/ 12/ 功能/ 示例/ 图/ 的/ 、/ 多个/ 软件/ 如何/ 使用/ 相同/ 的/ 服务/ 等/ ./ 这些/ 知识/ 包含/ 了/ 一些/ 服务/ 使用/ 的/ 正确/ 经验/ ,/ 可以/ 作为/ 推荐/ 系统/ 的/ 一部分/ ,/ 从而/ 指导/ 面向/ 服务/ 的/ 软件/ 的/ 开发/ ./ SOS2/ 可以/ 推广/ 至/ SOS/ 之间/ 的/ 网络/ ,/ 从而/ 为/ 我们/ 提供/ 了/ 一种/ 基于/ 关系/ 的/ 软件/ 查找/ 方式/ ./ 我们/ 借助/ SOS/ 构成/ 的/ 网络/ 来/ 查找/ 功能/ 相似/ 的/ 软件/ ,/ 从而/ 为/ 用户/ 提供/ 多种/ 选择/ 可能/ ./ 同样/ 的/ ,/ S2/ 也/ 可以/ 推广/ 到/ 一般/ 的/ 服务网络/ ,/ 可以/ 帮助/ 我们/ 挖掘/ 服务/ 之间/ 可能/ 的/ 组合/ 关系/ ,/ 并/ 可以/ 通过/ 图/ 的/ 遍历/ 推荐/ 潜在/ 的/ 服务/ 组合/ 方案/ ,/ 也/ 就是/ 潜在/ 的/ SOS/ ,/ 从而/ 为/ SOS/ 的/ 开发/ 提供/ 支持/ ./ 因此/ ,/ 本文/ 提出/ 的/ LFH/ 方法/ 对于/ 服务/ 的/ 管理/ 、/ 查找/ 、/ 推荐/ 和/ 自动/ 组合/ 都/ 有/ 一定/ 的/ 意义/ ,/ 可以/ 为/ 实现/ SOS/ 开发/ 提供/ 部分/ 支持/ ./ 6/ 结论/ 与/ 展望/ 本文/ 利用/ 服务/ 组合/ 历史/ 信息/ ,/ 用/ 软件/ 网络/ 抽象/ 面向/ 服务/ 软件/ ,/ 提出/ 了/ 从/ 拓扑/ 结构/ 角度/ 实现/ 服务/ 分类/ 和/ 推荐/ 的/ LFH/ 方法/ :/ 利用软件/ 网络/ 上/ 的/ 复杂/ 网络/ 社区/ 发现/ 实现/ 服务/ 的/ 自动/ 分类/ ,/ 这/ 对于/ 服务/ 组织/ 管理/ 具有/ 重要/ 意义/ ;/ 利用软件/ 网络/ 刻画/ 服务/ 之间/ 的/ 可/ 组合/ 关系/ ,/ 并/ 基于/ 该/ 网络/ 实现/ 服务/ 的/ 推荐/ ,/ 为/ 服务/ 组合/ 提供/ 了/ 新思路/ ./ 最后/ ,/ 本文/ 以/ ProgrammableWeb/ 上/ mashup/ 应用/ 和/ API/ 服务/ 的/ 真实/ 数据/ 为/ 载体/ 进行/ 实例/ 研究/ ,/ 在/ 说明/ LFH/ 方法/ 具体实施/ 过程/ 的/ 同时/ 验证/ 了/ 其/ 可行性/ 和/ 有效性/ ./ 本文/ 方法/ 在/ 服务/ 的/ 管理/ 、/ 查询/ 、/ 组合/ 等/ 方面/ 都/ 具有/ 较/ 好/ 的/ 应用/ 前景/ ./ 下/ 一步/ 我们/ 将/ 考虑/ 如下/ 研究/ 工作/ :/ (/ 1/ )/ 本文/ 构建/ 的/ S2/ 中有/ 很多/ 边/ 其实/ 是/ 无效/ 的/ ,/ 我们/ 将/ 利用/ 服务/ 的/ 其它/ 信息/ (/ 如/ 输入/ 、/ 输出/ 等/ )/ 对/ 服务/ 进行/ 二次/ 匹配/ ,/ 尽量减少/ 无效/ 边/ 的/ 数量/ ,/ 提高/ 服务/ 推荐/ 的/ 准确度/ ;/ (/ 2/ )/ 本文/ 构建/ 的/ SOS2/ 尽管/ 考虑/ 了/ 标签/ 的/ 作用/ ,/ 但是/ 语义/ 信息/ 的/ 利用/ 仍/ 不足/ ,/ 我们/ 拟/ 利用/ 服务/ 的/ 描述/ 文档/ ,/ 将/ 文档/ 之间/ 的/ 相似性/ 也/ 加入/ mashup/ 应用/ 之间/ 相似/ 度/ 的/ 计算/ 中/ ;/ (/ 3/ )/ 本文/ 最后/ 以/ ProgrammableWeb/ 上/ mashup/ 应用/ 和/ API/ 服务/ 的/ 真实/ 数据/ 验证/ LFH/ 方法/ 的/ 有效性/ ,/ 我们/ 拟用/ 其它/ 类型/ 的/ 服务/ 和/ 基于/ 服务/ 的/ 应用/ 来/ 验证/ 本文/ 方法/ 的/ 有效性/ ./ 

