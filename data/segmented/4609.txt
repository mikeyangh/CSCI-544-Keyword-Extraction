Page1/ 一种/ 基于/ 预测/ 控制/ 的/ SaaS/ 系统/ 自/ 适应/ 方法/ 1/ )/ (/ 武汉大学/ 软件工程/ 国家/ 重点/ 实验室/ &/ 计算机/ 学院/ 武汉/ 430072/ )/ 2/ )/ (/ 武汉大学/ 国际/ 软件/ 学院/ 武汉/ 430072/ )/ 3/ )/ (/ 湖北/ 文理学院/ 湖北/ 襄阳/ 441000/ )/ 摘要/ 对于/ 部署/ 在/ 虚拟/ 服务器/ 集群/ 上/ 的/ 多层/ 云端/ 应用/ 系统/ 而言/ ,/ 可以/ 通过/ 调整/ 运行/ 时/ 架构/ 以/ 适应/ 需求/ 和/ 上下文/ 环境/ 的/ 变化/ ,/ 并/ 保证/ 其/ 在/ 动态/ 负载/ 下/ 的/ 性能/ ./ 然而/ ,/ 由于/ 缺乏/ 通用/ 的/ 方法/ ,/ 如何/ 从/ 问题/ 空间/ 上/ 的/ 需求/ 自/ 适应/ 地/ 映射/ 到解/ 空间/ 上/ 的/ 架构/ 就/ 成为/ 了/ 一个/ 关键/ 的/ 问题/ ./ 为/ 解决/ 这个/ 问题/ ,/ 目前/ 存在/ 3/ 种/ 驱动/ 方法/ :/ 需求/ 驱动/ 模型/ 、/ 架构/ 驱动/ 模型/ 和/ 综合/ 需求/ 和/ 架构/ 模型/ 的/ 驱动/ 方法/ ./ 然而/ ,/ 这些/ 方法/ 的/ 性能/ 是/ 有限/ 的/ ,/ 并且/ 忽视/ 了/ 时间/ 变化规律/ ,/ 对/ 横切/ 系统/ 多个/ 层次/ 的/ 需求/ 演化/ 支持/ 也/ 不足/ ./ 文中/ 提出/ 了/ 一个/ 基于/ 预测/ 控制/ 的/ 自/ 适应/ 方法/ (/ SAPC/ )/ ,/ 它/ 采用/ 综合/ 需求/ 和/ 架构/ 的/ 模型/ 来/ 驱动/ 系统/ 的/ 自/ 适应/ ./ 该/ 方法/ 根据/ 监控/ 获取/ 的/ 运行/ 时/ 状态/ 信息/ 日志/ 得到/ 服务/ 组件/ QoS/ 值/ ,/ 学习/ 基/ 于小波/ 变换/ 的/ 模型/ 以/ 准确/ 预测/ 服务/ 组件/ 的/ QoS/ ,/ 并/ 通过/ 预测/ 控制/ 诱导/ 需求/ 进化/ 或/ 实现/ 运行/ 时/ 架构/ 的/ 模型/ 转换/ 来/ 达到/ 系统/ 的/ 自/ 适应/ ./ 更进一步/ ,/ 其/ 根据/ 当前/ 的/ 服务/ 组件/ 的/ QoS/ 以及/ 目标/ QoS/ 做出/ 优化/ 决策/ ./ 在/ 控制/ 操作/ 部分/ 中/ ,/ 判别/ 当前情况/ 下/ 是/ 做/ 框架/ 调整/ 还是/ 需求/ 调整/ ./ 如果/ 存在/ 可行/ 的/ 运行/ 时/ 模型/ ,/ 则/ 通过/ 预测/ 控制/ 产生/ 操作/ 向量/ ,/ 继而/ 自动/ 生成/ 面向/ 方面/ 的/ 脚本/ ;/ 该/ 脚本/ 被/ 执行/ 后/ 会/ 重构/ 运行/ 时/ 模型/ 并/ 生成/ 相应/ 实例/ ,/ 该/ 实例/ 被/ 传递/ 给/ 并行计算/ 架构/ (/ 比如/ MapReduce/ 、/ Yarn/ 或/ Spark/ 等/ )/ 来/ 执行/ ./ 否则/ ,/ 运用/ 训练/ 好/ 的/ 模型/ 标识/ 出/ 进化/ 点/ ,/ 然后/ 将/ 进化/ 点/ 与/ 初始/ 的/ 需求/ 混合/ 起来/ 以/ 诱导/ 需求/ 进化/ ./ 为/ 验证/ 上述/ 方法/ ,/ 文中/ 以/ 一个/ 名为/ CloudCRM/ 在线/ SaaS/ 平台/ 为/ 基准/ 进行/ 了/ 大规模/ 的/ 实验/ ,/ 该/ 平台/ 基于/ RGPS/ 元/ 模型/ 框架/ ,/ 通过/ 对/ 开源/ 软件/ SuperCRM/ 进行/ 服务化/ 改造/ 来/ 获得/ ,/ 其/ 支持/ 多/ 租户/ ./ 为/ 观察/ 平台/ 在/ 不同/ 模型/ 驱动/ 方法/ 的/ 性能/ 表现/ ,/ 文中/ 对于/ 该/ 平台/ 进行/ 了/ 剪裁/ ,/ 构造/ 了/ 4/ 种/ 由/ 不同/ 模型/ 驱动/ 的/ 系统/ (/ 包括/ Static/ 、/ Req/ 、/ Arch/ 与/ SAPC/ )/ ,/ 实验/ 结果/ 验证/ 了/ 文中/ 方法/ 的/ 有效性/ ./ 其中/ ,/ 在/ 用户数/ 为/ 20/ 时/ 文中/ 方法/ 相对/ 于/ 其他/ 3/ 种/ 方法/ 在/ 响应/ 时间/ 上/ 分别/ 降低/ 54/ %/ ,/ 26/ %/ 与/ 21/ %/ ,/ 在/ 吞吐/ 率上/ 提高/ 313/ %/ ,/ 288/ %/ 与/ 12/ %/ ,/ 在/ 可靠性/ 上/ 提高/ 0.40/ %/ ,/ 0.26/ %/ 与/ 0.42/ %/ ;/ 在/ 用户数/ 为/ 200/ 时/ 文中/ 方法/ 相对/ 于/ 其他/ 3/ 种/ 方法/ 在/ 响应/ 时间/ 上/ 分别/ 降低/ 99.5/ %/ ,/ 99.2/ %/ 与/ 20.7/ %/ ,/ 在/ 吞吐/ 率上/ 提高/ 320/ %/ ,/ 298/ %/ 与/ 10/ %/ ,/ 在/ 可靠性/ 上/ 提高/ 500/ %/ ,/ 495/ %/ 与/ 1.5/ %/ ./ 进而/ 文中/ 方法/ 使用/ 小/ 波/ 变换分析/ 相较/ 于/ 傅里叶/ 变换/ 在/ 响应/ 时间/ 上/ 降低/ 7.2/ %/ ,/ 在/ 吞吐/ 率上/ 提高/ 2.4/ %/ ,/ 在/ 可靠性/ 上/ 提高/ 0.08/ %/ ./ 在/ 参数/ 对于/ 系统/ 的/ 影响/ 方面/ ,/ 随着/ 目标/ 集合/ 的/ 大小/ 与/ 插件/ 扩展/ 点/ 的/ 数目/ 的/ 增长/ ,/ SAPC/ 方法/ 都/ 符合/ 响应/ 时间/ 和/ 吞吐量/ 增加/ 而/ 可靠性/ 下降/ 的/ 现象/ ./ 关键词/ 自/ 适应/ 系统/ ;/ 需求/ ;/ 预测/ 控制/ ;/ 服务质量/ ;/ 软件/ 即/ 服务/ ;/ 云/ 计算/ 1/ 引言/ 在/ 软件工程/ 中/ ,/ 需求/ 工程/ 关注/ 的/ 是/ 准确/ 描述/ 问题/ 以及/ 如何/ 加快/ 系统/ 从/ 需求/ 建模/ 到/ 实现/ 的/ 过程/ [/ 1/ ]/ ./ 在/ 应用程序/ 部署/ 之后/ ,/ 由于/ 软件/ 需求/ 的/ 演化/ 而/ 产生/ 的/ 需求/ 变更/ 会/ 导致/ 耗时/ 费力/ 的/ 开发/ 活动/ [/ 2/ ]/ ,/ 并/ 同时/ 影响/ 客户/ 的/ 体验/ ./ 因此/ ,/ 软件系统/ 需要/ 具有/ 自/ 适应/ 调整/ 的/ 能力/ ,/ 以/ 快速/ 响应/ 需求/ 变更/ 和/ 感知/ 上下文/ 变化/ ./ 目前/ ,/ 随着/ 工业界/ 自/ 适应/ 技术/ 变得/ 越来越/ 流行/ ,/ 一些/ 采用/ 自/ 适应/ 技术/ 的/ 产品/ 或/ 原型/ 已经/ 开发/ 出来/ ./ 比如/ IBM/ 已经/ 获得/ 了/ 一些/ 有/ 意义/ 的/ 结果/ :/ AutoTune/ [/ 3/ ]/ 是/ 一个/ 典型/ 的/ 自/ 适应/ 应用/ 实例/ ./ 当前/ 有/ 很多/ 研究/ 使/ Page3/ 用/ 模型/ 驱动/ 的/ 方法/ 来/ 实现/ 运行/ 时/ 的/ 自/ 适应/ [/ 4/ ]/ ,/ 而/ 不是/ 依靠/ 低级/ 且易/ 出错/ 的/ 手工/ 脚本/ 来/ 实现/ ./ 模型/ 在/ 运行/ 时/ ,/ 系统/ 可以/ 收集/ 系统/ 状态/ 信息/ ,/ 然后/ 分析/ 和/ 预测/ 系统/ 的/ 性能/ ,/ 进而/ 依据/ 它们/ 实现/ 动态/ 适应性/ 调整/ [/ 5/ -/ 6/ ]/ ./ 在/ 模型/ 驱动/ 中/ ,/ 需求/ 模型/ [/ 7/ -/ 11/ ]/ 和/ 架构/ 模型/ [/ 12/ -/ 15/ ]/ 都/ 已经/ 被/ 使用/ 过/ ./ 需求/ 模型/ 驱动/ 的/ 方法/ 为/ 简化/ 需求/ 元素/ (/ 目标/ 或/ 功能/ )/ 和/ 架构/ 元素/ (/ 服务/ 组件/ )/ 之间/ 的/ 映射/ ,/ 通常/ 会/ 忽视/ 架构设计/ 部分/ 的/ 复杂性/ ./ 而/ 在/ 架构/ 模型/ 驱动/ 的/ 方法/ 中/ 通常/ 会/ 假设/ 在/ 设计/ 时/ 确定/ 需求/ ,/ 并且/ 在/ 运行/ 时/ 需求/ 不再/ 改变/ ,/ 因此/ 其/ 无法/ 动态/ 地/ 适应/ 变化/ 的/ 需求/ ./ 既然/ 这/ 两种/ 自/ 适应/ 方法/ 都/ 有/ 不足/ ,/ 那么/ 可以/ 考虑/ 把/ 它们/ 结合/ 起来/ ./ 文献/ [/ 16/ -/ 17/ ]/ 尝试/ 利用/ Kramer/ 和/ Magee/ 的/ 架构/ [/ 18/ ]/ 将/ 它们/ 组合/ 在/ 一起/ ,/ 其中/ 架构/ 元素/ 被/ 视为/ 一组/ 功能/ 的/ 接口/ ./ 然而/ ,/ 软件架构/ 不/ 应该/ 仅/ 包含/ 功能/ 的/ 集合/ ,/ 还/ 应该/ 包含/ 一组/ 设计/ 决策/ ,/ 这是/ 由于/ 功能/ 服务/ 组件/ 会/ 被/ 自/ 适应/ 系统/ 组合/ 起来/ 并/ 相互作用/ [/ 14/ ]/ ./ 这些/ 设计/ 决策/ 能够/ 根据/ 变化/ 调整/ 需求/ ,/ 并/ 可能/ 横切/ 系统/ 的/ 多个/ 层次/ (/ 目标/ 或/ 流程/ )/ ./ 1.1/ 研究/ 动机/ 本文/ 使用/ 一个/ 名为/ CloudCRM/ 的/ 在线/ SaaS/ 平台/ 作为/ 基准/ 进行/ 案例/ 研究/ ./ 该/ 平台/ 的/ 业务部门/ 负责/ 营销/ 策略/ ,/ 其/ 通过/ 多/ 租户/ (/ multi/ -/ tendency/ )/ 的/ 方法/ 来/ 满足/ 客户/ 个性化/ 定制/ 的/ 需求/ ,/ 该/ 平台/ 的/ 技术/ 部门/ 则/ 负责/ 开发/ 和/ 维护/ 系统/ ./ 根据/ 历史/ 监测/ (/ 如图/ 1/ )/ ,/ 其/ 业务/ 负载/ 通常/ 表现/ 趋势性/ 、/ 周期性/ 和/ 随机性/ ./ 当/ 系统/ 在/ 一年/ 的/ 某个/ 特定/ 的/ 时间/ 负载/ 达到/ 峰值/ ,/ 该/ 系统/ 由于/ 遇到/ 大量/ 并发/ 请求/ ,/ 性能/ 会/ 降低/ ./ 这时/ 若/ 是/ 没有/ 适当/ 地/ 增加/ 系统/ 的/ 负载/ 能力/ ,/ 系统/ 的/ 响应/ 时间/ 会/ 变长/ ,/ 业务/ 的/ 失败率/ 也/ 会/ 增加/ ,/ 从而/ 导致/ 客户/ 的/ 不满/ ./ 现在/ 考虑/ 以下/ 两个/ 场景/ ./ (/ 1/ )/ 场景/ A/ ./ 技术/ 部门/ 发现/ 系统/ 的/ 瓶颈/ 在于/ 订单/ 验证/ 过程/ ./ 该/ 过程/ 由/ 几个/ 服务/ 组件/ 组成/ (/ 包括/ 订单/ 信息/ 检查/ 、/ 信用/ 检查和/ 欺诈/ 检查/ )/ ./ 考虑/ 到/ 设计/ 决策/ ,/ 他们/ 决定/ 将/ 检查/ 服务/ 组件/ 从/ 顺序/ 模式/ 切换/ 到/ 并行/ 模式/ 以/ 获取/ 更好/ 的/ 性能/ ./ 其/ 通过/ 采用/ 支持/ 水平/ 扩展/ 的/ 并行计算/ 架构/ (/ 比如/ MapReduce/ ①/ 、/ Yarn/ ②/ 或/ Spark/ ③/ 等/ )/ 来/ 实现/ 运行/ 时/ 的/ 自/ 适应/ 模型/ 转换/ ,/ 以/ 之/ 解决/ 性能/ 瓶颈/ (/ 其中/ 切换/ 过程/ 对于/ 业务部门/ 是/ 透明/ 的/ )/ ./ (/ 2/ )/ 场景/ B/ ./ 若/ 是/ 技术/ 部门/ 不能/ 找到/ 可行/ 的/ 运行/ 时/ 模型/ 来/ 解决问题/ ,/ 则/ 把/ 问题/ 提交/ 给/ 业务部门/ ./ 而/ 业务部门/ 根据/ 情况/ 决定/ 改变/ 订单/ 验证/ 流程/ ,/ 使得/ 该/ 流程/ 只/ 涉及/ 订单/ 信息/ 检查和/ 信用/ 检查/ ,/ 而/ 跳/ 过/ 欺诈/ 检查/ ./ 虽然/ 这样/ 做/ 可能/ 会/ 增加/ 由于/ 恶意/ 订单/ 所/ 导致/ 的/ 风险/ ,/ 但是/ 可以/ 有效/ 地/ 缓解/ 拥塞/ 问题/ ,/ 这/ 需要/ 业务部门/ 来/ 权衡/ ./ 上述/ 操作/ 将会/ 产生/ 新/ 的/ 需求/ (/ 通过/ 需求/ 的/ 自/ 适应/ 来/ 实现/ )/ ,/ 进而/ 系统/ 可以/ 将/ 其/ 映射/ 到/ 相应/ 架构/ 模型/ 来/ 实现/ 运行/ 时/ 的/ 自/ 适应/ ./ 此外/ ,/ 系统/ 通过/ 为/ 租户/ 配置/ 角色/ 来/ 实现/ 客户/ 的/ 个性化/ 定制/ 的/ 需求/ ./ 而/ 角色/ 中则/ 包括/ 非/ 功能属性/ QoS/ (/ 服务质量/ )/ [/ 19/ ]/ ,/ 其/ 主要/ 包括/ 可用性/ 、/ 响应/ 时间/ 、/ 可靠性/ 、/ 吞吐量/ 等/ ./ 该/ 场景/ 同时/ 也/ 表明/ 为/ 满足用户/ 的/ 个性化/ 需求/ ,/ 系统/ 常常/ 需要/ 调整/ 分散/ 在/ 不同/ 的/ 层次/ 的/ 多个/ 元素/ ./ 1.2/ 贡献/ 由于/ 缺乏/ 考虑/ 时间/ 变化规律/ 且/ 综合/ 需求/ 和/ 架构/ 的/ 模型/ ,/ 目前/ 把/ 问题/ 空间/ 上/ 的/ 需求/ 自/ 适应/ 地/ 映射/ 到解/ 空间/ 的/ 架构/ 上/ 的/ 方法/ 还有/ 不足之处/ ./ 本文/ 的/ 主要/ 贡献/ 包括/ :/ (/ 1/ )/ 提出/ 一个/ 通过/ 预测/ 控制/ 的/ 自/ 适应/ 方法/ SAPC/ (/ Self/ -/ adaptationApproachbasedonPredictiveControl/ )/ ./ 该/ 方法/ 可以/ 通过/ 学习/ 基/ 于小波/ 变换/ 的/ 模型/ 以/ 预测/ 系统/ 服务/ 组件/ 的/ 性能/ ,/ 并/ 诱导/ 需求/ 进化/ 或/ 实现/ 架构/ 的/ 模型/ 转换/ 以/ 达到/ 运行/ 时/ 系统/ 的/ 自/ 适应/ ./ (/ 2/ )/ 使用/ 一个/ 名为/ CloudCRM/ 在线/ SaaS/ 平台/ 作为/ 基准/ 进行/ 案例/ 研究/ ,/ 其/ 结果/ 验证/ 了/ 本文/ 方法/ 的/ 有效性/ ./ 本文/ 第/ 2/ 节/ 回顾/ 与/ 本文/ 相关/ 的/ 研究/ 工作/ ;/ 第/ 3/ 节/ 给出/ 问题/ 的/ 定义/ ;/ 第/ 4/ 节/ 给出/ 解决方案/ 的/ 整体/ 构架/ ;/ 第/ 5/ 节/ 给出/ 解决方案/ 的/ 弹性/ 机制/ ;/ 第/ 6/ 节/ 给出/ 支持/ 需求/ 模型/ 自/ 适应/ 驱动/ 的/ 元/ 模型/ 及/ 相关/ 技术/ ;/ 第/ 7/ 节/ 给出/ 支持/ 架构/ 模型/ 自/ 适应/ 驱动/ 的/ 元/ 模型/ ①/ ②/ ③/ Page4/ 及/ 相关/ 技术/ ;/ 第/ 8/ 节/ 通过/ 实验/ 对/ 本文/ 提出/ 的/ 方法/ 进行/ 了/ 评估/ ;/ 第/ 9/ 节/ 总结/ 全文/ 并/ 给出/ 下/ 一步/ 的/ 研究/ 方向/ ./ 2/ 相关/ 研究/ 本文/ 的/ 相关/ 研究/ 主要/ 从/ 3/ 个/ 方面/ 展开/ :/ (/ 1/ )/ 需求/ 模型/ 驱动/ 的/ 方法/ ;/ (/ 2/ )/ 架构/ 模型/ 驱动/ 的/ 方法/ ;/ (/ 3/ )/ 综合/ 需求/ 和/ 架构/ 模型/ 的/ 驱动/ 方法/ ./ 2.1/ 需求/ 模型/ 驱动/ 的/ 方法/ Elkhodary/ 等/ 人/ [/ 7/ ]/ 提出/ 了/ 一个/ 面向/ 特征/ 自/ 适应/ 框架/ FUSION/ ,/ 该/ 框架/ 能够/ 学习/ 自/ 适应/ 决策/ ./ Baresi/ 等/ 人/ [/ 8/ ]/ 提出/ 了/ 一个/ 促进/ 需求/ 驱动/ 的/ 适应性/ 框架/ FLAGS/ ./ Peng/ 等/ 人/ [/ 9/ ]/ 提出/ 了/ 一个/ 考虑/ 质量/ 动态变化/ ,/ 通过/ 基于/ 价值/ 的/ 反馈/ 回路/ 驱动/ 需求/ 的/ 方法/ ./ Fu/ 等/ 人/ [/ 10/ ]/ 提出/ 了/ 一个/ 通过/ 有/ 状态/ 的/ 需求/ 监测/ 来自/ 我/ 修正/ 的/ 社会/ 技术/ 系统/ ./ Souza/ 等/ 人/ [/ 11/ ]/ 提出/ 了/ 一个/ 可以/ 反映/ 需求/ 变化/ 的/ 需求/ 进化/ 方法/ ./ 这些/ 方法/ 都/ 假定/ 需求/ 可以/ 直接/ 映射/ 到/ 架构/ 元素/ 上/ ,/ 但是/ 这个/ 假定/ 是/ 有/ 问题/ 的/ ,/ 因为/ 它们/ 忽略/ 了/ 架构/ 模型/ 的/ 复杂性/ ./ 2.2/ 架构/ 模型/ 驱动/ 的/ 方法/ Oreizy/ 等/ 人/ [/ 12/ ]/ 提出/ 了/ 一个/ 架构/ 驱动/ 的/ 运行/ 时/ 进化/ 机制/ ./ Garlan/ 等/ 人/ [/ 13/ ]/ 提出/ 一个/ 架构/ 驱动/ 的/ 自/ 适应/ 框架/ Rainbow/ ,/ 该/ 框架/ 能/ 对/ 特定/ 的/ 需求/ 进行/ 定制/ ./ Floch/ 等/ 人/ [/ 14/ ]/ 提出/ 一个/ 支持/ 移动/ 自/ 适应/ 的/ 框架/ MADAM/ ./ 这些/ 方法/ 都/ 假定/ 当/ 系统/ 正在/ 运行/ 时/ ,/ 需求/ 保持/ 不变/ ,/ 且/ 其中/ 的/ 大多数/ 方法/ 支持/ 简单/ 操作/ (/ 如/ 添加/ 、/ 删除/ 或/ 替换/ 组件/ )/ ,/ 但是/ 它们/ 不/ 支持/ 横切/ 系统/ 多个/ 层次/ 的/ 需求/ 演化/ ./ 2.3/ 综合/ 需求/ 和/ 架构/ 模型/ 的/ 驱动/ 方法/ Kramer/ 等/ 人/ [/ 18/ ]/ 结合/ 需求/ 和/ 架构/ 提出/ 一个三层/ 参考模型/ ,/ 其中/ 包括/ 目标/ 管理/ ,/ 变更/ 管理/ 及/ 计划/ 执行/ ./ Sykes/ 等/ 人/ [/ 16/ ]/ 使用/ 基于/ 模型/ 检验/ 的/ 技术/ 生成/ 脚本/ ,/ 并/ 根据/ 脚本/ 重构/ 架构/ 的/ 模型/ MBP/ ./ Tajalli/ 等/ 人/ [/ 17/ ]/ 提出/ 一个/ 基于/ 计划/ 模型/ 驱动/ 的/ 自/ 适应/ 方法/ PLASMA/ ./ 通过/ 设计/ 决策/ ,/ 动态/ 配置/ 架构/ 模型/ 来/ 适应/ 变化/ ./ 在/ 综合/ 需求/ 和/ 架构/ 的/ 模型/ 方面/ ,/ 相关/ 研究/ 工作/ 相对/ 较少/ ./ 它们/ 的/ 性能/ 有限/ ,/ 且/ 忽视/ 了/ 时间/ 变化规律/ ,/ 对/ 横切/ 系统/ 多个/ 层次/ 的/ 需求/ 演化/ 支持/ 也/ 不足/ ./ 3/ 问题/ 定义/ 自/ 适应/ 是/ 个/ 很/ 棘手/ 的/ 问题/ ,/ 它/ 需要/ 解决/ 如何/ 在/ 运行/ 时/ 将/ 需求/ 映射/ 到/ 架构/ 元素/ 上/ 并/ 能/ 适应/ 需求/ 演化/ ./ 问题/ 的/ 形式化/ 描述/ 如下/ :/ 给定/ C/ 为/ 一个/ 三元组/ 集合/ ,/ 其/ 每个/ 元素/ 表示/ 为/ (/ i/ ,/ t/ ,/ Ci/ ,/ t/ )/ ./ 其中/ i/ 是/ 应用/ 执行/ 单元/ ,/ t/ 是/ 时刻/ ,/ Ci/ ,/ t/ 是/ 主控制/ 节点/ 在/ 时间/ t/ 对于/ 服务/ 组件/ i/ 的/ 控制/ 操作/ ./ 控制/ 操作/ 包括/ 为/ 满足/ 是/ 期望/ 的/ 性能/ ,/ 而/ 触发/ 的/ 运行/ 时/ 的/ 模型/ 转换/ 或/ 标识/ 需求/ 改进/ 点/ 操作/ ./ 给定/ Y/ 为/ 一个/ 四元组/ 集合/ ,/ 其/ 每个/ 元素/ 表示/ 为/ (/ u/ ,/ i/ ,/ t/ ,/ Yu/ ,/ i/ ,/ t/ )/ ./ 其中/ u/ 是/ 租户/ ,/ i/ 是/ 服务/ 的/ 第/ i/ 个/ QoS/ ,/ t/ 是/ 时刻/ ,/ Yu/ ,/ i/ ,/ t/ 是/ 租户/ u/ 在/ 时间/ t/ 观察/ 到/ 的/ 运行/ 时/ 定制/ 服务/ 第/ i/ 个/ QoS/ 值/ ./ 未来/ 的/ Yu/ ,/ i/ ,/ (/ t/ +/ 1/ )/ 可以/ 根据/ 日志/ 中/ 作为/ 上下文/ 的/ 当前/ 时间/ 点/ 和/ 前面/ k/ -/ 1/ 个/ 时间/ 点/ Yu/ ,/ i/ =/ (/ Yu/ ,/ i/ ,/ t/ -/ k/ ,/ Yu/ ,/ i/ ,/ t/ -/ k/ +/ 1/ ,/ …/ ,/ Yu/ ,/ i/ ,/ t/ -/ k/ +/ l/ ,/ …/ ,/ Yu/ ,/ i/ ,/ t/ )/ 来/ 预测/ ./ 为/ 支持/ SaaS/ 系统/ 的/ “/ 多/ 租户/ ”/ 特征/ ,/ 满足/ 多/ 租户/ 的/ 个性化/ 定制/ 的/ 需求/ ./ 给定/ 需求/ 约束/ Yref/ 为/ 一个/ 三元组/ 集合/ ,/ 其中/ 每个/ 元素/ 表示/ 为/ (/ u/ ,/ i/ ,/ Yu/ ,/ i/ ,/ ref/ )/ ./ Yu/ ,/ i/ ,/ ref/ 是/ 单个/ 租户/ 个性化/ 定制/ 的/ 需求/ (/ 租户/ u/ 定制/ 服务/ 的/ 第/ i/ 个/ QoS/ 的/ 约束/ 值/ )/ ./ 然后/ 根据/ 预测/ 的/ {/ Yu/ ,/ i/ ,/ (/ t/ +/ 1/ )/ }/ 、/ 给定/ 的/ Yref/ 与/ 三元组/ 集合/ C/ 生成/ 时间/ t/ +/ 1/ 时/ 的/ 控制/ 操作/ {/ Ci/ ,/ (/ t/ +/ 1/ )/ }/ ./ 其/ 目的/ 是/ 实现/ 系统/ 运行/ 时/ 的/ 自/ 适应/ ,/ 达到/ 需求/ 约束/ 下/ 的/ 最优/ 稳定性/ 能/ ./ 4/ 整体/ 构架/ 如图/ 2/ 所示/ ,/ 本文/ 提出/ 的/ 框架/ 是/ 基于/ MAPE/ -/ K/ [/ 20/ ]/ 控制/ 回路/ 模型/ 的/ ,/ 它/ 由/ 监控器/ 、/ 分析/ 引擎/ 、/ 设计/ 决策/ 管理器/ 、/ 需求/ 演化/ 管理器/ 和/ 执行/ 引擎/ 构成/ ./ 首先/ ,/ 实时/ 监控器/ 获取/ 服务/ 组件/ 的/ QoS/ 值/ 并用/ 日志/ 记录下来/ ,/ 然后/ 将/ 其/ 传到/ 分析/ 引擎/ ./ 分析/ 引擎/ 根据/ 日志/ 记录/ 使用/ 基/ 于小波/ 变换/ 的/ 模型/ 预测/ QoS/ 值/ ./ 设计/ 决策/ 管理器/ 则/ 根据/ 预测/ QoS/ 值/ 和/ 目标/ QoS/ 值/ 寻求/ 满足/ 需求/ 约束/ 的/ 最佳/ 设计/ 决策/ :/ 如果/ 能/ 找到/ 可行/ 的/ 运行/ 时/ 模型/ ,/ 则/ 自动/ 生成/ 面向/ 方面/ 的/ 脚本/ ,/ 进而/ 执行/ 引擎/ 通过/ 执行/ 脚本/ 来/ 完成/ 运行/ 时/ 的/ 模型/ 转换/ ;/ 否则/ ,/ 设计/ 决策/ 管理器/ 则/ 标识/ 出/ 需求/ 演进/ 的/ 具体/ 改进/ 点/ ,/ 以/ 诱导/ 需求/ 进化/ ./ Page5/ 图/ 2/ 整体/ 框架/ 5/ 弹性/ 机制/ 5.1/ 运行/ 时/ 服务/ 单元/ 的/ QoS/ 值/ 的/ 预测/ 傅里叶/ 变换/ 在/ 声学/ 、/ 电信/ 、/ 电力系统/ 、/ 信号处理/ 等/ 诸多/ 领域/ 都/ 有/ 广泛应用/ ,/ 它/ 可以/ 将/ 时间/ 序列/ 数据/ 转换/ 为/ 频率/ 序列/ 数据/ 以/ 抽取/ 时间/ 序列/ 的/ 特征/ ./ 虽然/ 其/ 能够/ 将/ 信号/ 的/ 时域/ 特征/ 和/ 频域/ 特征/ 联系/ 起来/ ,/ 但/ 却/ 不能/ 把/ 二者/ 有机/ 地/ 结合/ 起来/ ./ 这/ 是因为/ 信号/ 的/ 时域/ 波形/ 中/ 不/ 包含/ 任何/ 频域/ 信息/ ,/ 其/ Fourier/ 谱/ (/ 如式/ (/ 1/ )/ 所示/ )/ 表现/ 的/ 是/ 信号/ 的/ 统计/ 特性/ :/ 它/ 是/ 整个/ 时间/ 域/ 内/ 的/ 积分/ ,/ 没有/ 局部/ 化/ 分析/ 信号/ 的/ 功能/ ,/ 存在/ 着/ 时域/ 和/ 频域/ 的/ 局部/ 化/ 矛盾/ ./ 其中/ ,/ T/ 为/ 函数/ 的/ 周期/ ./ Milidiu/ 等/ 人/ [/ 21/ ]/ 将/ 小波/ 变换/ 和/ 混合/ 专家/ 模型/ (/ MEM/ )/ 相结合/ ,/ 用来/ 进行/ 时间/ 序列/ 的/ 预测/ ./ 其/ 可以/ 更/ 深刻/ 的/ 把握/ 非线性/ 问题/ 的/ 本质/ ./ 因此/ ,/ 本文/ 选择/ 使用/ 小/ 波/ 变换分析/ 和/ 描述/ 应用/ 在/ 各个单位/ 时间/ 内/ 运行/ 时/ 服务/ 单元/ 的/ QoS/ 值/ 随/ 时间/ 的/ 变化规律/ ./ 该/ 变换/ 能/ 提高/ 系统/ 的/ 性能/ ,/ 我们/ 将/ 在/ 8.4/ ./ 1/ 节/ 给出/ 具体/ 的/ 实验/ 验证/ ./ 回顾/ 在/ 问题/ 定义/ 中/ 的/ 内容/ ,/ 未知/ 的/ 时间/ 序列/ 元素/ Yu/ ,/ i/ ,/ (/ t/ +/ 1/ )/ 可以/ 根据/ 日志/ 信息/ 来/ 预测/ ,/ 日志/ 信息/ 是/ Yu/ ,/ i/ =/ (/ Yu/ ,/ i/ ,/ t/ -/ k/ ,/ Yu/ ,/ i/ ,/ t/ -/ k/ +/ 1/ ,/ …/ ,/ Yu/ ,/ i/ ,/ t/ -/ k/ +/ l/ ,/ …/ ,/ Yu/ ,/ i/ ,/ t/ )/ ./ 具体/ 地/ ,/ 可/ 将/ Yu/ ,/ i/ ,/ (/ t/ +/ 1/ )/ 展开/ 为/ 其中/ ,/ ω/ ji/ 是/ 隐含/ 层到/ 输出/ 层权值/ ,/ h/ (/ j/ )/ 是/ 第/ j/ 个/ 隐含/ 层/ 节点/ 的/ 输出/ ,/ l/ 是/ 隐含/ 层/ 节点/ 数/ ,/ m/ 是/ 输出/ 层层/ 节点/ 数/ ./ 更进一步/ ,/ h/ (/ j/ )/ 定义/ 为/ h/ (/ j/ )/ =/ hj/ 其中/ ,/ ω/ lj/ 是/ 输入/ 层/ 和/ 隐含/ 层/ 的/ 连接/ 权值/ ,/ bj/ 是/ 小波基/ 函数/ hj/ 的/ 平移因子/ ,/ aj/ 是/ 小波基/ 函数/ hj/ 的/ 伸缩/ 因子/ ,/ hj/ 是/ 小波基/ 函数/ ,/ 本文/ 采用/ 了/ Morlet/ 母小波基/ 函数/ ,/ 其/ 定义/ 为小波/ 网络/ 权值/ 参数/ 修正/ 公式/ 如下/ :/ (/ 1/ )/ 计算/ 预测/ 误差/ 其中/ ,/ Yref/ 是/ 期望/ 输出/ ,/ Y/ 是/ 预测/ 输出/ ./ (/ 2/ )/ 根据/ 误差/ 修正/ 相关/ 权值/ 和/ 系数/ 其中/ ,/ 梯度/ 公式/ 如下/ :/ Page6/ 其中/ ,/ η/ 是/ 学习/ 速率/ ./ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ nkm/ )/ ,/ 其中/ n/ 是/ 迭代/ 次数/ ,/ k/ 是/ 输入/ 层/ 节点/ 的/ 数目/ ,/ m/ 是/ 隐含/ 层/ 节点/ 的/ 数目/ ./ 5.2/ 基于/ QoS/ 的/ 设计/ 决策/ 回顾/ 问题/ 定义/ 中/ 的/ 内容/ ,/ 我们/ 将/ 根据/ 预测/ 的/ Y/ (/ t/ +/ 1/ )/ 、/ 给定/ 的/ Yref/ 与/ 三元组/ 集合/ C/ 生成/ 时间/ t/ +/ 1/ 时/ 的/ 控制/ 操作/ 向量/ 犆/ (/ t/ +/ 1/ )/ ./ 控制/ 操作/ 包括/ 为/ 满足/ 是/ 期望/ 性能/ Yref/ 而/ 触发/ 的/ 运行/ 时/ 的/ 模型/ 转换/ 或/ 标识/ 需求/ 改进/ 点/ 操作/ ,/ 具体/ 实现/ 见/ 算法/ 1/ ./ 其中/ ,/ Yt/ =/ {/ Yu/ ,/ i/ ,/ t/ }/ 是/ 所有/ 租户/ 在/ 时间/ t/ 观察/ 到/ 的/ 运行/ 时/ 运行/ 时/ 定制/ 服务/ QoS/ 值/ 的/ 集合/ ,/ Y/ (/ t/ +/ 1/ )/ 是/ 对/ 所有/ 租户/ 预测/ 到/ 的/ 在/ 时间/ t/ +/ 1/ 的/ 定制/ 服务/ QoS/ 值/ 的/ 集合/ ,/ Yref/ =/ {/ Yu/ ,/ i/ ,/ ref/ }/ 是/ 期望/ 性能/ (/ 租户/ 定制/ 服务/ 的/ QoS/ 集合/ )/ ,/ 犆/ (/ t/ +/ 1/ )/ =/ {/ Ci/ ,/ (/ t/ +/ 1/ )/ }/ 是/ 时间/ t/ +/ 1/ 时/ 对/ 服务/ 组件/ i/ 的/ 控制/ ./ 算法/ 1/ ./ 设计/ 决策/ 算法/ ./ 输入/ :/ Yt/ ,/ Y/ (/ t/ +/ 1/ )/ ,/ Yref/ 输出/ :/ 犆/ (/ t/ +/ 1/ )/ 初始化/ :/ trainclassificationpredictionmodeltrainlabelingimprovementpointsofrequirementsmodelIFclassification/ -/ prediction/ (/ Yt/ ,/ Y/ (/ t/ +/ 1/ )/ ,/ Yref/ )/ =/ 犆/ (/ t/ +/ 1/ )/ =/ label/ -/ improvement/ -/ points/ (/ Yt/ ,/ Y/ (/ t/ +/ 1/ )/ ,/ Yref/ )/ ELSE/ 犆/ (/ t/ +/ 1/ )/ =/ architecture/ -/ transformations/ (/ Yt/ ,/ Y/ (/ t/ +/ 1/ )/ ,/ Yref/ )/ ENDRETURN/ 犆/ (/ t/ +/ 1/ )/ 操作/ 集合/ ./ 算法/ 主要/ 包括/ 两/ 大部分/ :/ 初始化/ 部分/ 和/ 控制/ 操作/ 部分/ ./ 在/ 初始化/ 部分/ 中/ ,/ 我们/ 利用/ 历史记录/ 来/ 学习/ SVM/ (/ 支持/ 向量/ 机/ )/ 模型/ [/ 22/ ]/ ,/ 来/ 判别/ 当前情况/ 下/ 是否/ 存在/ 可行/ 的/ 运行/ 时/ 模型/ ./ 更进一步/ ,/ 如果/ 不/ 存在/ 可行/ 的/ 运行/ 时/ 模型/ ,/ 我们/ 同样/ 利用/ 历史记录/ 来/ 学习/ SVM/ 模型/ ,/ 只不过/ 模型/ 的/ 输出/ 变成/ 了/ 对/ 改进/ 点/ 的/ 标注/ ,/ 用以/ 诱导/ 需求/ 进化/ ,/ 而/ 该/ 标注/ 是/ 基于/ 概念/ 和/ 本体/ 的/ ./ 在/ 控制/ 操作/ 部分/ 中/ ,/ 在/ 当前/ 需求/ 的/ 约束/ 下/ ,/ 如果/ 不/ 存在/ 可行/ 的/ 运行/ 时/ 模型/ ,/ 则/ 运用/ 训练/ 好/ 的/ 模型/ 诱导/ 需求/ 进化/ ./ 否则/ ,/ 通过/ 预测/ 控制/ 产生/ 操作/ 向量/ 犆/ (/ t/ +/ 1/ )/ ./ 而/ 为/ 寻求/ 控制/ 操作/ 向量/ 犆/ (/ t/ +/ 1/ )/ ,/ 需要/ 控制器/ 用/ 最小/ 幅度/ 的/ 调控/ 让/ 系统/ 满足/ 多/ 租户/ 个性化/ 定制/ 需求/ ./ 为此/ ,/ 我们/ 定义/ 目标/ 函数/ 并/ 使得/ 其值/ 为/ 最小/ ./ 其中/ ,/ q/ 是/ 稳定/ 因子/ ,/ 犆/ t/ 是/ 当前/ 控制/ 操作/ 向量/ ,/ Yref/ 是/ 期望/ 输出/ ,/ W/ =/ {/ wi/ }/ 是/ 服务/ 组件/ 的/ 权重/ ,/ 犆/ (/ t/ +/ 1/ )/ =/ {/ Ci/ ,/ (/ t/ +/ 1/ )/ }/ ./ 我们/ 采用/ 梯度/ 下降/ 法来/ 预测/ 优化/ 的/ 控制/ 操作/ 向量/ 犆/ (/ t/ +/ 1/ )/ ,/ 梯度/ 公式/ 为/ / 犆/ (/ t/ +/ 1/ )/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ nl/ )/ ,/ 其中/ n/ 是/ 迭代/ 次数/ ,/ l/ 是/ 服务/ 组件/ 单元/ 的/ 数目/ ./ 更进一步/ ,/ 由式/ (/ 13/ )/ 得到/ 的/ 控制/ 操作/ 向量/ {/ Ci/ ,/ (/ t/ +/ 1/ )/ }/ 只是/ 反映/ 了/ 操作/ 的/ 强弱/ ,/ 并/ 没有/ 物理/ 实际意义/ ./ 因此/ ,/ 需要/ 将/ 控制/ 操作/ 向量/ 犆/ (/ t/ +/ 1/ )/ 映射/ 到/ 系统/ 的/ 实际/ 运作/ 的/ 弹性/ 机制/ 上/ ,/ 我们/ 定义/ 映射函数/ f/ (/ x/ )/ 如下/ :/ 其中/ ,/ 数字/ {/ 1/ ,/ 2/ }/ 分别/ 表示/ 不同/ 的/ 计算/ 模型/ (/ 串行/ ,/ 并行/ )/ ,/ w1/ 是/ 通过/ 一系列/ 实验/ 得到/ 的/ 经验值/ ./ 最后/ ,/ 我们/ 得到/ 然后/ 返回/ ./ 6/ 需求/ 的/ 自/ 适应/ 根据/ 5.2/ 节/ 的/ 设计/ 决策/ 产生/ 的/ 输出/ (/ 对/ 改进/ 点/ 的/ 标注/ )/ ,/ 我们/ 可以/ 定位/ 变更/ 需求/ 对/ 初始/ 需求/ 的/ 演化/ 生长点/ ,/ 更进一步/ 捕获/ 需求/ 变更/ 的/ 影响/ ,/ 继而/ 采用/ 面向/ 方面/ 描述/ 变更/ 需求/ ,/ 完成/ 需求/ 的/ 自/ 适应/ ./ 6.1/ 支持/ 演化/ 的/ 需求/ 元/ 模型/ 为/ 支持/ 需求/ 的/ 演化/ ,/ 本文/ 扩展/ 了/ RGPS/ 需求/ 元/ 模型/ 框架/ [/ 15/ ]/ 以/ 构建/ 需求/ 模型库/ (/ 如图/ 3/ )/ ./ 通过/ 添加/ 标签/ 、/ 概念/ 、/ 本体/ 、/ 方面/ 和/ 词汇/ 等/ 元素/ ,/ 以/ 提高/ 标签/ 的/ 语义/ 互操作性/ ./ 通过/ 标签/ 的/ 方式/ 来/ 识别/ 需求/ 的/ 改进/ 点/ ,/ 以/ 诱导/ 需求/ 进化/ ./ Page7/ 图/ 3/ 基于/ RGPS/ 支持/ 演化/ 的/ 需求/ 元/ 模型/ 6.2/ 面向/ 方面/ 的/ 需求/ 演化/ 需求/ 演化/ 建模/ 要/ 解决/ 的/ 根本/ 问题/ 是/ :/ 如何/ 根据/ 变更/ 的/ 需求/ 将/ 原始/ 需求/ 模型/ 演变/ 为/ 满足/ 新/ 的/ 需求/ 的/ 需求/ 模型/ ./ 6.2/ ./ 1/ 基本/ 过程/ 具体/ 而言/ ,/ 分为/ 5/ 个/ 阶段/ 完成/ :/ (/ 1/ )/ 根据/ 5.2/ 节/ 的/ 工作/ ,/ 分析/ 与/ 获取/ 变更/ 需求/ (/ 主要/ 是/ 通过/ 标注/ 来/ 完成/ 的/ )/ ./ (/ 2/ )/ 本体/ 匹配/ ./ 根据/ 第一阶段/ 得到/ 的/ 标注/ ,/ 在/ 基于/ RGPS/ 的/ 演化/ 需求/ 模型库/ 中/ 搜索/ 目标/ 或/ 过程/ 元素/ ,/ 作为/ 初始/ 需求/ 模型/ ./ (/ 3/ )/ 利用/ 面向/ 方面/ 的/ 需求/ 演化/ 建模/ 分析方法/ ,/ 针对/ 初始/ 需求/ 模型/ ,/ 找到/ 合适/ 的/ 演化/ 改进/ 点/ ./ (/ 4/ )/ 基于/ 演化/ 改进/ 点/ ,/ 捕获/ 需求/ 变更/ 的/ 影响/ (/ 在/ 6.2/ ./ 2/ 节中/ 详述/ )/ ./ (/ 5/ )/ 业务部门/ 以/ OWL/ -/ SA/ 作为/ 描述语言/ (/ 在/ 6.2/ ./ 3/ 节/ 详述/ )/ ,/ 根据上述/ 分析/ ,/ 建立/ 满足/ 演化/ 需要/ 的/ 新/ 的/ 需求/ 规格/ 脚本/ ,/ 为/ 系统/ 的/ 即时/ 演化/ 提供/ 支持/ ./ 6.2/ ./ 2/ 需求/ 演化/ 的/ 传播/ 根据/ 基于/ RGPS/ 支持/ 演化/ 的/ 需求/ 元/ 模型/ (/ 如图/ 3/ )/ ,/ 需求/ 项/ 之间/ 以及/ 需求/ 项/ 与/ 其他/ 系统/ 元素/ 间/ 存在/ 着/ 关联/ 关系/ ./ 由/ 前面/ 分析/ 获取/ 的/ 改进/ 点/ ,/ 其/ 可以/ 作为/ 演化/ 生长点/ 将/ 需求/ 变更/ 传播/ 出去/ ./ 为了/ 捕获/ 被/ 影响/ 到/ 的/ 系统/ 元素/ ,/ 假设/ 我们/ 从/ RGPS/ 需求/ 元/ 模型/ 中/ 获取/ 了/ 需求/ 项间/ 的/ 关联矩阵/ 犕/ 1/ ,/ 需求/ 项/ 与/ 目标/ 项间/ 的/ 关联矩阵/ 犕/ 2/ ,/ 目标/ 项/ 与/ 过程/ 项间/ 的/ 关联矩阵/ 犕/ 3/ ./ 由于/ 需求/ 项间/ 的/ 传递/ 依赖/ ,/ 我们/ 需/ 计算/ 矩阵/ 犕/ 1/ 的/ 闭包/ M/ / 当/ 变更/ 需求/ 向量/ 为/ 狉/ 时/ ,/ 我们/ 可以/ 通过/ 计算/ 受/ 影响/ 的/ 目标/ 元素/ 向量/ 狅/ ,/ 通过/ 计算/ 受/ 影响/ 的/ 过程/ 元素/ 向量/ 狆/ ,/ 最终/ 我们/ 获取/ 了/ 变更/ 需求/ 的/ 集合/ ./ 6.2/ ./ 3OWL/ -/ SA/ 描述语言/ 描述语言/ OWL/ -/ SA/ 基于/ OWL/ -/ S/ [/ 23/ ]/ 的/ ,/ 其/ 采用/ 切入点/ -/ 通知/ 模型/ (/ pointcut/ -/ advicemodel/ )/ ./ 其中/ ,/ A/ 表示/ 方面/ (/ Aspect/ )/ ,/ 其/ 代表/ 的/ 是/ 演化/ 的/ 需求/ 规格/ ,/ 它/ 包括/ 一个/ 或/ 多个/ 切入点/ -/ 通知/ 对/ (/ pointcut/ -/ advicepairs/ )/ ./ OWL/ -/ SA/ 的/ 元/ 模型/ 如图/ 4/ 所示/ ./ Page8/ 切入点/ -/ 通知/ 对/ 中/ 的/ 切入点/ 用于/ 描述/ 演化/ 的/ 位置/ ./ 其中/ 定义/ 两种/ 类型/ 的/ 切入点/ :/ (/ 1/ )/ 控制/ 制导/ 切入点/ ,/ 即原/ 过程/ 模型/ 中/ 的/ 某/ 节点/ 或/ 其/ 附近/ 的/ 位置/ ./ 其/ 描述/ 形式/ 如下/ :/ services/ // owl/ -/ s/ // 1.1/ // Process/ ./ owl/ #/ TheParentPerform/ ”/ 〉/ 〈/ fromProcessrdf/ :/ resource/ =/ “/ rdf/ :/ resource/ =/ #/ http/ :/ // // www/ ./ daml/ ./ org/ // services/ // 图/ 5/ 需求/ 演化/ 脚本/ 7/ 架构/ 模型/ 的/ 自/ 适应/ 根据/ 5.2/ 节/ 的/ 设计/ 决策/ 的/ 输出/ (/ 待/ 触发/ 的/ 运行/ // // process/ :/ CompositeProcess/ [/ @/ rdf/ :/ ID/ =/ “/ CP1/ ”/ ]/ // // process/ :/ perform/ [/ @/ rdf/ :/ ID/ =/ “/ Step1/ ”/ ]/ ./ (/ 2/ )/ 数据/ 制导/ 切入点/ ,/ 即/ 切入/ 的/ 过程/ 将/ 改变/ 原/ 过程/ 模型/ 的/ 数据/ ,/ 比如/ 输入/ 、/ 输出/ 参数/ ,/ 其/ 描述/ 形式/ 如下/ :/ // // process/ :/ CompositeProcess/ [/ @/ rdf/ :/ ID/ =/ “/ CP1/ ”/ ]/ // // process/ :/ hasInput/ [/ @/ rdf/ :/ ID/ =/ “/ I1/ ”/ ]/ ./ 切入点/ -/ 通知/ 对/ 中/ 的/ 通知/ 用于/ 描述/ 演化/ 的/ 内容/ ./ 其/ 包括/ :/ 切入点/ 附近/ 插入/ 、/ 删除/ 和/ 修改/ 过程/ ,/ 或是/ 在/ 过程/ 中/ 增加/ 的/ 输入输出/ 参数/ ,/ 通常/ 情况/ 下/ 是/ 由/ 控制结构/ Perform/ 触发/ ./ 通知/ 与/ 切入点/ 之间/ 的/ 关系/ 用/ advice/ 的/ 一个/ 属性/ evolutionOrder/ 来/ 表示/ ,/ 其值/ 有/ 4/ 种/ :/ Before/ (/ 前面/ )/ 、/ after/ (/ 后面/ )/ 、/ parallelTo/ (/ 并行/ )/ 和/ Around/ (/ 替换/ )/ ./ 回到/ 1.1/ 节/ 的/ 场景/ B/ 中/ ,/ 假设/ 负载/ 达到/ 顶峰/ 后/ 开始/ 下降/ ./ 受/ 需求/ 演化/ 的/ 诱导/ ,/ 被/ 跳/ 过/ 的/ 欺诈/ 检查/ 将/ 被/ 业务部门/ 恢复/ ./ 该/ 需求/ 演化/ 脚本/ 如图/ 5/ 所示/ ./ 时/ 的/ 模型/ 转换/ )/ ,/ 系统/ 可以/ 自动/ 产生/ 计划/ 脚本/ ./ 脚本/ 紧接着/ 被/ 传到/ 执行/ 引擎/ ,/ 而/ 引擎/ 则/ 使用/ 反射/ 的/ 方法/ ,/ 将/ 变更/ 对应/ 的/ 插件/ 织入/ 到/ 系统/ 中/ ,/ 从而/ 完成/ 架构/ 模型/ 的/ 自/ 适应/ ./ Page97/ ./ 1/ 基于/ 插件/ 架构/ 的/ 元/ 模型/ 系统/ 的/ 弹性/ 机制/ 是/ 通过/ 切换/ 在/ 插件/ 扩展/ 点上/ 的/ 支持/ 不同/ 计算/ 模型/ 的/ 插件/ 来/ 完成/ 的/ ./ 其/ 计算/ 模型/ 包图/ 6/ 基于/ 插件/ 架构/ 的/ 元/ 模型/ 其中/ ,/ 扩展/ 点/ 接口/ (/ Pluggable/ )/ 用于/ 定义/ 扩展/ 点/ ./ 扩展/ 点/ (/ Extensionpoint/ )/ 是/ 系统/ 中/ 可以/ 被/ 再次/ 扩展/ 的/ 接口/ ,/ 它/ 可以/ 使得/ 执行/ 过程/ 变得/ 可/ 插入/ ,/ 可以/ 任意/ 变化/ ./ 扩展/ 点/ 实现/ 扩展/ 点/ 接口/ ./ 扩展/ (/ Extension/ )/ 是/ 针对/ 扩展/ 点/ 的/ 实现/ ,/ 每个/ 扩展/ 都/ 可以/ 拥有/ 自己/ 的/ 额外/ 属性/ ,/ 用以/ 区分/ 同一个/ 扩展/ 点/ 不同/ 的/ 实现/ ./ 插件/ (/ Plugin/ )/ 包含/ 了/ 插件/ 依赖/ 关系/ ,/ 运行/ 时库/ 和/ 插件/ 描述符/ ./ 插件/ 描述符/ (/ PluginDescriptor/ )/ 包含/ 了/ 插件/ 的/ 名称/ id/ 版本/ 等/ 信息/ ./ 插件/ 工厂/ (/ PluginRepository/ )/ 用来/ 产生/ 插件/ 实例/ ./ 下面/ 给出/ 一个/ 基于/ 插件/ 架构/ 的/ 实例/ (/ 如图/ 7/ )/ ./ 〈/ pluginid/ =/ “/ order/ -/ verification/ -/ basic/ ”/ version/ =/ “/ 1.0/ ./ 0/ ”/ provider/ -/ name/ =/ “/ CloudCRM/ ./ org/ ”/ 〉/ 〈/ runtime/ 〉/ 〈/ libraryname/ =/ “/ order/ -/ verification/ ./ jar/ ”/ 〉/ 〈/ exportname/ =/ “/ / ”/ // 〉/ 〈/ // library/ 〉/ 〈/ // runtime/ 〉/ 〈/ requires/ 〉/ 〈/ importplugin/ =/ “/ order/ -/ extensionpoints/ ”/ // 〉/ 〈/ // requires/ 〉/ 〈/ extensionid/ =/ “/ org/ ./ CloudCRM/ ./ order/ ./ verification/ ./ basic/ ”/ 〈/ implementationid/ =/ “/ BasicOrderVerification/ ”/ class/ =/ “/ org/ ./ CloudCRM/ ./ order/ ./ verification/ ./ basic/ ./ parallel/ ”/ // 〉/ 〈/ // extension/ 〉/ 〈/ // plugin/ 〉/ 7.2/ 计划/ 脚本/ 的/ 生成/ 描述语言/ OWL/ -/ SA/ 不仅/ 能/ 用于/ 支持/ 需求/ 演化/ ,/ 括/ 串行/ 和/ 并行/ ./ 本文/ 利用/ 插件/ 架构/ 形成/ 支持/ 不同/ 计算/ 模型/ 统一/ 框架/ ./ 下面/ 给出/ 了/ 基于/ 插件/ 架构/ 的/ 元/ 模型/ ,/ 如图/ 6/ 所示/ ./ 还/ 能够/ 用到/ 运行/ 时/ 的/ 模型/ 转换/ 中/ ./ 我们/ 将/ 其/ 扩充/ 以/ 支持/ 变更/ 操作/ :/ 增加/ 或/ 删除/ 插件/ 扩展/ 点/ 、/ 增加/ 或/ 删除/ 插件/ 、/ 关联/ 插件/ 扩展/ 点/ 与/ 插件/ ,/ 替换/ 插件/ 等/ ./ 根据/ 4.2/ 节/ 的/ 设计/ 决策/ 的/ 输出/ (/ 待/ 触发/ 的/ 运行/ 时/ 的/ 模型/ 转换/ )/ ,/ 系统/ 使用/ 替换/ 插件/ 操作/ :/ 使用/ Xpath/ 来/ 定位/ 文档/ 树中/ 的/ 插件/ 扩展/ 点/ ,/ 修改/ 其下/ 的/ 插件/ 节点/ ,/ 从而/ 产生/ 新/ 的/ 计划/ 脚本/ ./ 回到/ 1.1/ 节/ 的/ 场景/ A/ 中/ ,/ 系统/ 能够/ 自动/ 生成/ 计划/ 脚本/ (/ 如图/ 8/ )/ ./ 〈/ Aspectname/ =/ “/ FraudChecking/ ”/ 〉/ 〈/ pointcutname/ =/ “/ CreditChecking/ ”/ 〉/ process/ :/ CompositeProcess/ [/ @/ rdf/ :/ ID/ =/ “/ OrderVerificationProcess/ ”/ ]/ process/ :/ perform/ [/ @/ rdf/ :/ ID/ =/ “/ CreditChecking/ ”/ ]/ process/ :/ ExtensionPoint/ [/ @/ rdf/ :/ ID/ =/ “/ CreditCheckingArchitecture/ ”/ ]/ 〈/ // pointcut/ 〉/ 〈/ adviceevolutionOrder/ =/ “/ after/ ”/ 〉/ 〈/ Performrdf/ :/ ID/ =/ “/ FraudCheckingPerformed/ ”/ 〉/ 〈/ processrdf/ :/ resource/ =/ “/ &/ aux/ ;/ #/ FraudChecking/ ”/ // 〉/ 〈/ Extensionpointrdf/ :/ ID/ =/ “/ FraudCheckingPerformed/ ”/ 〉/ 〈/ // Extensionpoint/ 〉/ 〈/ // Perform/ 〉/ 〈/ // Aspect/ 〉/ 该/ 脚本/ 由/ 执行/ 引擎/ 执行/ ,/ 切换/ 在/ 插件/ 扩展/ 点上/ 的/ 支持/ 不同/ 计算/ 模型/ 的/ 插件/ ./ 7.3/ 计划/ 脚本/ 的/ 执行/ 执行/ 引擎/ 通过/ 执行/ 计划/ 脚本/ 重新配置/ 运行/ 系统/ 来/ 实现/ 运行/ 时/ 的/ 模型/ 转换/ ./ 详细/ 过程/ 如下/ :/ 系统/ 利用/ 载入/ 内存/ 并/ 已经/ 初始化/ 过/ 的/ 插件/ 工厂/ Page10/ 生成/ 相关/ 插件/ 实例/ :/ 通过/ 插件/ 的/ id/ 定位/ 并/ 读取/ 计划/ 脚本/ 中/ 相应/ 的/ 插件/ 描述符/ 配置/ 项/ ,/ 进而/ 使用/ 反射/ 机制/ 生成/ 插件/ 实例/ ./ 紧接着/ 我们/ 通过/ 插件/ 实例/ 调用/ 实现/ 支持/ 不同/ 计算/ 模型/ 的/ 方法/ ,/ 进而/ 生成/ 一组/ 任务/ ,/ 并/ 将/ 其/ 传到/ 并行计算/ 系统/ 上去/ 执行/ ./ 计划/ 脚本/ 的/ 执行/ 的/ 代码/ 如图/ 9/ 所示/ ./ publicclassparallelextendsverification/ ./ basic/ {/ Configurationconf/ =/ null/ ;/ PluginRepositoryrepo/ =/ null/ ;/ PluginDescriptord/ =/ null/ ;/ ClassLoadercl/ =/ null/ ;/ StaticClassclazz/ =/ null/ ;/ StaticMethodm/ =/ null/ ;/ publicparallel/ (/ )/ {/ conf/ =/ Configration/ ./ create/ (/ )/ ;/ repo/ =/ newPluginRepository/ (/ conf/ )/ ;/ d/ =/ repo/ ./ getPluginDescriptor/ (/ “/ BasicOrderVerification/ ”/ )/ ;/ cl/ =/ d/ ./ getClassLoader/ ;/ try/ {/ clazz/ =/ Class/ ./ forName/ (/ “/ org/ ./ CloudCRM/ ./ order/ ./ verification/ ./ basic/ ./ parallel/ ”/ ,/ true/ ,/ cl/ )/ ;/ }/ catch/ (/ Exceptione/ )/ {/ System/ ./ err/ ./ println/ (/ “/ cannotloadtheclass/ ‘/ parallel/ ’/ ”/ +/ e/ ./ get/ -/ Message/ (/ )/ )/ ;/ return/ ;/ }/ }/ try/ {/ m/ =/ clazz/ ./ getMethod/ (/ “/ verify/ ”/ ,/ newClass/ [/ ]/ {/ Class/ ./ forName/ (/ “/ org/ ./ CloudCRM/ ./ order/ ./ verification/ ./ basic/ ./ parallel/ ”/ )/ }/ )/ ;/ }/ catch/ (/ Exceptione/ )/ {/ System/ ./ err/ ./ println/ (/ “/ cannotloadtheclass/ ‘/ parallel/ ’/ ”/ +/ e/ ./ get/ -/ Message/ (/ )/ )/ ;/ return/ ;/ }/ }/ try/ {/ result/ =/ m/ ./ invoke/ (/ clazz/ ./ newInstance/ (/ )/ )/ ;/ }/ catch/ (/ Exceptione/ )/ {/ System/ ./ err/ ./ println/ (/ “/ cannotloadtheclass/ ‘/ parallel/ ’/ ”/ +/ e/ ./ get/ -/ Message/ (/ )/ )/ ;/ return/ ;/ }/ }/ }/ 8/ 实验/ 评估/ 8.1/ 实验设计/ 本文/ 使用/ 了/ 综合/ 需求/ 模型/ 和/ 架构/ 模型/ 的/ 驱动/ 方法/ ,/ 扩展/ 了/ 课题组/ 现有/ 的/ SaaS/ 平台/ (/ CloudCRM/ 客户关系/ 管理/ 云/ 服务平台/ )/ ./ 该/ 平台/ 基于/ RGPS/ 元/ 模表/ 1/ 不同/ 模型/ 驱动/ 方法/ 的/ 性能/ 比较/ 方法/ StaticReqArchSAPC/ 型/ 框架/ ,/ 通过/ 对/ 开源/ 软件/ SuperCRM/ 进行/ 服务化/ 改造/ 来/ 构建/ ,/ 其/ 支持/ 多/ 租户/ ./ 该/ 平台/ 的/ 配置/ 环境/ 如下/ :/ (/ 1/ )/ 该/ 集群/ 包括/ 18/ 个/ 节点/ ,/ 每个/ 节点/ 有/ 64/ 位/ 8/ 核/ CPU/ 和/ 16GBRAM/ ./ (/ 2/ )/ 所有/ 节点/ 都/ 用/ CentOS6/ ./ 2/ ,/ Java1/ ./ 6.022/ ./ (/ 3/ )/ 数据库/ 采用/ mongodb2/ ./ 0.8/ ./ 为/ 观察/ 平台/ 在/ 不同/ 模型/ 驱动/ 方法/ 的/ 性能/ 表现/ ,/ 本文/ 对于/ 该/ 平台/ 进行/ 了/ 剪裁/ ,/ 构造/ 了/ 4/ 种/ 由/ 不同/ 模型/ 驱动/ 的/ 系统/ ,/ 具体/ 见/ 8.2/ 节/ ./ 为/ 观察/ 平台/ 在/ 不同/ 状况/ 下/ 的/ 性能/ 表现/ ,/ 本文/ 可以/ 设置/ 或/ 调整/ 如下/ 参数/ :/ 模拟/ 并发/ 用户/ 的/ 数目/ 、/ 需求/ 目标/ 集合/ 的/ 大小/ (/ goalsize/ )/ 、/ 插件/ 扩展/ 点/ 的/ 数目/ (/ extensionpointssize/ )/ ./ 当前/ 实验/ 参数设置/ 如下/ :/ 模拟/ 并发/ 用户/ 的/ 数目/ 设置/ 为/ 20/ 或/ 200/ ,/ 目标/ 集合/ 的/ 大小/ 设置/ 为/ 21/ ,/ 插件/ 扩展/ 点/ 的/ 数目/ 设置/ 为/ 8.8/ ./ 2/ 比较/ 方法/ 本文/ 对比/ 了/ 以下/ 4/ 种/ 不同/ 模型/ 驱动/ 方法/ :/ (/ 1/ )/ 不/ 支持/ 自/ 适应/ 的/ 方法/ Static/ ./ (/ 2/ )/ 基于/ 需求/ 模型/ 的/ 自/ 适应/ 方法/ Req/ ./ (/ 3/ )/ 基于/ 架构/ 模型/ 的/ 自/ 适应/ 方法/ Arch/ ./ (/ 4/ )/ 综合/ 需求/ 和/ 架构/ 模型/ 的/ 自/ 适应/ 方法/ SAPC/ ./ 8.3/ 实验/ 结果/ 分析/ 为了/ 避免/ 实验/ 结果/ 的/ 随机性/ ,/ 我们/ 重复/ 该/ 实验/ 50/ 次/ ,/ 对/ 获得/ 的/ 性能指标/ 求/ 均值/ ./ 实验/ 结果/ 如表/ 1/ ,/ 其中/ 性能指标/ 包括/ 全局/ 响应/ 时间/ (/ Response/ -/ time/ )/ 、/ 吞吐量/ (/ Throughput/ )/ 和/ 可靠性/ (/ Reliability/ )/ ./ 详细分析/ 如下/ :/ (/ 1/ )/ 从表中/ 可知/ ,/ 我们/ 的/ 方法/ 与/ 其他/ 方法/ 相比/ 获得/ 了/ 更好/ 的/ 性能/ ./ (/ 2/ )/ 当/ 模拟/ 并发/ 用户/ 的/ 数目/ 从/ 20/ 增加/ 到/ 200/ 时/ ,/ 变得/ 响应/ 时间/ 变/ 长/ ,/ 吞吐量/ 更高/ ,/ 可靠性/ 则/ 降低/ 了/ ./ (/ 3/ )/ 当/ 模拟/ 并发/ 用户/ 的/ 数目/ 从/ 20/ 增加/ 到/ 200/ 时/ ,/ 不同/ 的/ 方法/ 会/ 有/ 不同/ 的/ 表现/ ./ 例如/ ,/ Static/ 方法/ 的/ 响应/ 时间/ 从/ 1473.92/ ms/ 变化/ 到/ 157644.33/ ms/ ,/ 而/ SAPC/ 方法/ 的/ 响应/ 时间/ 则/ 从/ 676.35/ ms/ 变化/ 到/ 731.43/ ms/ ./ 这/ 表明/ ,/ 综合/ 了/ 需求/ 和/ 架构/ 自/ 适应/ 的/ 方法/ 起/ 了/ 作用/ ,/ 达到/ 更好/ 的/ 性能/ ./ Page118/ ./ 4/ 进一步/ 讨论/ 8.4/ ./ 1/ 时间/ 序列/ 预测/ 采用/ 不同/ 变换/ 对系统/ 性能/ 的/ 在/ 这个/ 实验/ 中/ ,/ 参数设置/ 为/ :/ 模拟/ 并发/ 用户/ 的/ 数目/ 设置/ 为/ 200/ ,/ 其他/ 同/ 8.1/ 节/ ./ 从表/ 2/ 可知/ ,/ 由/ 于小波/ (/ Wavelet/ )/ 变换分析/ 相较/ 于/ 傅里叶/ (/ Fourier/ )/ 变换/ 有/ 较/ 好/ 的/ 预测/ 精度/ ,/ 在/ 系统/ 中/ 采用/ 小/ 波/ 变换分析/ 获得/ 了/ 较/ 好/ 的/ 性能/ ./ 方法/ FourierWavelet8/ ./ 4.2/ 综合/ 需求/ 和/ 架构/ 模型/ 不同/ 驱动/ 方法/ 的/ 性能/ 目前/ 在/ 综合/ 需求/ 和/ 架构/ 模型/ 方面/ 具有/ 代表性/ 的/ 模型/ 包括/ Kramer/ 等/ 人/ [/ 18/ ]/ 的/ 模型/ 、/ Sykes/ 的/ 模型/ MBP/ [/ 16/ ]/ 、/ Tajalli/ 等/ 人/ [/ 17/ ]/ 的/ 模型/ PLASMA/ ./ 下面/ 我们/ 通过/ 实验/ 来/ 验证/ 同/ 上述/ 几种/ 方法/ 相比/ ,/ 我们/ 的/ 方法/ SAPC/ 的/ 有效性/ ./ 在/ 这个/ 实验/ 中/ ,/ 参数设置/ 为/ :/ 模拟/ 并发/ 用户/ 的/ 数目/ 设置/ 为/ 200/ ,/ 其他/ 同/ 8.1/ 节/ ./ 从表/ 3/ 可知/ ,/ 由于/ 图/ 10/ 目标/ 集合/ 的/ 大小/ 对/ 性能/ 的/ 影响/ 8.4/ ./ 4/ 插件/ 扩展/ 点/ 的/ 数目/ 对/ 性能/ 的/ 影响/ 在/ 这个/ 实验/ 中/ ,/ 我们/ 逐步/ 改变/ 插件/ 扩展/ 点/ 的/ 数目/ 从/ 3/ 到/ 12/ ,/ 每步/ 为/ 3/ ./ 其他/ 参数设置/ 为/ :/ 模拟/ 并发/ 用户/ 考虑/ 了/ 时间/ 序列/ 规律/ ,/ 我们/ 的/ 方法/ 与/ 其他/ 综合/ 需求/ 和/ 架构/ 模型/ 的/ 驱动/ 方法/ 相比/ 获得/ 了/ 最好/ 的/ 性能/ ./ 表/ 3/ 综合/ 需求/ 和/ 架构/ 模型/ 不同/ 驱动/ 方法/ 性能/ 比较/ 方法/ Kramer/ ’/ smodelMBPPLASMASAPC8/ ./ 4.3/ 目标/ 集合/ 的/ 大小/ 对/ 性能/ 的/ 影响/ 在/ 这个/ 实验/ 中/ ,/ 我们/ 逐步/ 改变/ 目标/ 集合/ 的/ 大小/ 从/ 3/ 到/ 24/ ,/ 每步/ 为/ 3/ ./ 其他/ 参数设置/ 为/ :/ 模拟/ 并发/ 用户/ 的/ 数目/ 设置/ 为/ 20/ 或/ 200/ ,/ 插件/ 扩展/ 点/ 的/ 数目/ 设置/ 为/ 8/ ./ 图/ 10/ (/ a/ )/ ~/ (/ c/ )/ 表明/ 的/ 是/ 当/ 并发/ 用户/ 的/ 数量/ 是/ 20/ 时/ 的/ 影响/ ,/ 而图/ 10/ (/ d/ )/ ~/ (/ f/ )/ 表明/ 的/ 是/ 当/ 并发/ 用户/ 的/ 数量/ 是/ 200/ 时/ 的/ 影响/ ./ 图/ 10/ 表明/ :/ 在/ 不同/ 大小/ 的/ 目标/ 集合/ 下/ ,/ SAPC/ 方法/ 都/ 符合/ 响应/ 时间/ 和/ 吞吐量/ 增加/ 而/ 可靠性/ 下降/ 现象/ ./ 当/ 模拟/ 并发/ 用户/ 的/ 数目/ 扩大/ 时/ ,/ 对于/ 不同/ 性能指标/ 影响/ 幅度/ 不同/ (/ 吞吐量/ 幅度/ 最大/ 而/ 可靠性/ 幅度/ 最小/ )/ ./ 的/ 数目/ 设置/ 为/ 20/ 或/ 200/ ,/ 目标/ 集合/ 的/ 大小/ 设置/ 为/ 21/ ./ 图/ 11/ 表明/ :/ 在/ 不同/ 插件/ 扩展/ 点/ 的/ 数目/ 下/ ,/ SAPC/ 方法/ 对于/ 性能/ 的/ 影响/ 同/ 8.4/ ./ 3/ 节/ ./ Page12/ 图/ 11/ 插件/ 扩展/ 点/ 的/ 数目/ 对/ 性能/ 的/ 影响/ 9/ 结论/ 本文/ 提出/ 了/ 一个/ 通过/ 预测/ 控制/ 的/ 自/ 适应/ 方法/ (/ SAPC/ )/ ,/ 其/ 采用/ 了/ 综合/ 需求/ 和/ 架构/ 的/ 模型/ 来/ 驱动/ 系统/ 的/ 自/ 适应/ ./ 通过/ 分析/ 日志/ 信息/ ,/ 学习/ 基/ 于小波/ 变换/ 的/ 模型/ 以/ 预测/ 未来/ 时刻/ 服务/ 单元/ 的/ QoS/ ;/ 通过/ 基于/ 预测/ 控制/ 产生/ 设计/ 决策/ ,/ 诱导/ 需求/ 进化/ 或/ 进行/ 运行/ 时/ 的/ 模型/ 转换/ ./ 大量/ 实验/ 的/ 结果显示/ 我们/ 的/ 方法/ 的/ 有效性/ ./ 在/ 未来/ ,/ 我们/ 计划/ 更进一步/ 研究/ 基于/ 预测/ 控制/ 模型/ ,/ 在/ 支持/ 需求/ 演化/ 的/ 元/ 模型/ 中/ 加入/ 验证/ 机制/ ,/ 提取/ 更/ 多/ 的/ 状态/ 信息/ 以/ 改进/ 方法/ ,/ 以及/ 从/ 用户/ 满意度/ 等/ 更/ 多/ 的/ 方面/ 评估/ 该/ 方法/ ./ 

