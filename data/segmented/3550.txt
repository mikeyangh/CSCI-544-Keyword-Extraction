Page1/ 基于/ 流/ 映射/ 的/ 负载/ 均衡/ 调度/ 算法/ 研究/ 戴艺/ 苏金树/ 孙志刚/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 摘要/ 网络/ 管理者/ 需要/ 能够/ 提供/ 可扩展性/ 、/ 吞吐/ 率/ 保证/ 及/ 报文/ 顺序/ 的/ 高性能/ 路由器/ 体系结构/ ./ 目前/ 基于/ Crossbar/ 的/ 集中式/ 路由器/ 体系结构/ 难以实现/ 性能/ 和/ 规模/ 的/ 可/ 扩展/ ,/ 基于/ 两级/ Mesh/ 网络/ 的/ 负载/ 均衡/ 交换/ 结构/ 成为/ 扩展/ Internet/ 路由器/ 容量/ 的/ 有效/ 的/ 途径/ ./ 负载/ 均衡/ 路由器/ 存在/ 严重/ 的/ 报文/ 乱序/ 现象/ ,/ 输出/ 端/ 报文/ 重定序/ 复杂度/ 为/ O/ (/ N2/ )/ ./ 文中/ 提出/ 一种/ 区域/ 均等/ 的/ 负载/ 均衡/ 交换/ 结构/ ,/ 每/ k/ 个/ 连续/ 的/ 中间级/ 输入/ 端口/ 划分/ 为/ 一个/ 区域/ ,/ 输入/ 端/ 采用/ 基于/ 流/ 映射/ 的/ 负载/ 分配/ 算法/ UFFS/ -/ k/ (/ UniformFine/ -/ grainFrameSpreading/ ,/ k/ 为/ 聚合/ 粒度/ ,/ 简称/ UFFS/ -/ k/ )/ ,/ 在/ k/ 个/ 连续/ 的/ 外部/ 时间槽/ ,/ 以/ 细粒度/ 的/ 方式/ 将/ 同/ 一条/ 流/ 的/ k/ 个/ 信元/ 分派/ 到/ 固定/ 的/ 映射/ 区域/ ,/ 通过/ 理论/ 证明/ ,/ 该/ 调度/ 策略/ 可/ 获得/ 100/ %/ 吞吐/ 率/ 并/ 能够/ 保证/ 报文/ 的/ 顺序/ ./ 为/ 避免/ 流量/ 区域/ 集中/ 现象/ ,/ 采用/ 双循环/ (/ dual/ -/ rotation/ )/ 方式/ 构建/ 不同/ 输入/ 端口/ 的/ 流到/ 区域/ 的/ 映射/ 关系/ ;/ 为/ 实现/ 负载/ 在/ 中间级/ 输入/ 端口/ 的/ 均衡/ 分布/ ,/ 每个/ 输入/ 端口/ 维护/ 全局/ 统一/ 视图/ 的/ 流量/ 分布/ 矩阵/ ,/ UFFS/ -/ k/ 调度/ 算法/ 根据/ 流量/ 分布/ 矩阵/ 调度/ 单位/ 帧/ ,/ 可以/ 证明/ ,/ 对/ 任意/ 输出/ 端口/ j/ ,/ 同一/ 区域/ OQj/ 队列/ 长度/ 相同/ 且/ 不同/ 区域/ OQj/ 队列/ 长度/ 至多/ 差/ 1/ ,/ 从而/ 实现/ 了/ 100/ %/ 负载/ 均衡/ 度/ ./ UFFS/ -/ k/ 调度/ 算法/ 分布/ 于/ 每个/ 输入/ 端口/ 独立/ 执行/ ,/ 根据/ 流/ 到/ 区域/ 的/ 映射/ 关系/ 及/ 负载/ 分布/ 状态/ 分派/ 信元/ ,/ 模拟/ 结果显示/ ,/ 当/ 聚合/ 粒度/ k/ =/ 2/ 时/ ,/ UFFS/ -/ k/ 算法/ 在/ 同类/ 维序/ 算法/ 中/ 表现/ 出/ 最优/ 延迟/ 性能/ ./ 关键词/ 路由器/ 体系结构/ ;/ 负载/ 均衡/ 路由器/ ;/ 报文/ 乱序/ ;/ 双循环/ 映射/ ;/ 可/ 扩展/ 1/ 引言/ 新一代/ 互联网/ 在/ 规模/ 、/ 功能/ 、/ 性能/ 和/ 服务/ 等/ 多个/ 维度/ 上/ 的/ 可/ 扩展/ 特性/ 需要/ 核心/ 路由器/ 实现/ 交换/ 容量/ 和/ 端口/ 密度/ 的/ 可/ 扩展/ 、/ 提供/ 延迟/ 和/ 吞吐/ 率/ 保证/ 并/ 维持/ 报文/ 的/ 顺序/ ./ 针对/ 基于/ Crossbar/ 的/ 路由器/ 体系结构/ 受限于/ LVDS/ 传输/ 及/ 封装/ 技术/ ,/ 难以/ 支持/ 高速/ 链路/ 及/ 高密度/ 端口/ 的/ 问题/ [/ 1/ ]/ ,/ 近年来/ ,/ 基于/ 两级/ Mesh/ 网络/ 的/ 负载/ 均衡/ 交换/ 结构/ 成为/ 扩展/ 路由器/ 容量/ 与/ 规模/ 的/ 有效途径/ ./ 负载/ 均衡/ 交换/ 结构/ (/ load/ -/ balancedswitch/ )/ 最初/ 由/ Chang/ 等/ 人/ [/ 2/ ]/ 在/ 他们/ 设计/ 的/ Birk/ -/ hoff/ -/ vonNeuman/ 输入/ 排队/ 交换机/ 中/ 提出/ ,/ 它/ 由/ 第一级/ 不带/ 任何/ 输入/ // 输出/ 缓冲区/ 的/ Crossbar/ 和/ 第二级/ 输入/ 端/ 带有/ VOQ/ 队列/ 的/ Crossbar/ 构成/ ./ 每/ 一级/ Crossbar/ 按照/ 单循环/ 置换/ 矩阵/ 周期性地/ 建立/ 连接/ 模式/ ,/ 第二级/ Crossbar/ 也/ 就是/ Birkhoff/ -/ vonNeu/ -/ man/ 输入/ 排队/ 交换机/ 能够/ 获得/ 100/ %/ 的/ 吞吐/ 率/ (/ 对于/ 这一/ 结论/ ,/ Chang/ 等/ 人/ [/ 2/ ]/ 进行/ 了/ 严格/ 的/ 证明/ )/ ;/ 模拟/ 结果显示/ ,/ 在/ 重/ 负载/ 的/ 情况/ 下/ ,/ 信元/ 平均/ 延迟/ 接近/ OQ/ 交换/ 结构/ [/ 2/ ]/ ./ 针对/ Crossbar/ 结构/ 需要/ 动态变化/ 连接/ 关系/ ,/ 难以/ 扩展/ 到/ 更/ 高速度/ 的/ 问题/ ,/ 近几年/ 提出/ 了/ 一种/ 采用/ 两级/ 全/ 相连/ Mesh/ 网络/ 替代/ 两级/ Cross/ -/ bar/ 的/ 负载/ 均衡/ 交换/ 结构/ [/ 3/ -/ 5/ ]/ ./ 这种/ 采用/ 固定/ 连接/ 方式/ 的/ 负载/ 均衡/ 交换/ 结构/ 被/ 认为/ 是/ 一种/ 能够/ 将/ 路由器/ 扩展/ 到/ 高容量/ 和/ 高速度/ 的/ 切实可行/ 的/ 方法/ ./ 该/ 交换/ 结构/ 的/ 可扩展性/ 得益于/ 以下/ 两个/ 关键/ 特性/ :/ (/ 1/ )/ 不/ 需要/ 集中式/ 的/ 调度/ 器/ ,/ 在/ O/ (/ 1/ )/ 时间/ 内/ ,/ 所有/ 的/ 缓冲/ 和/ 转发/ 操作/ 在/ 每个/ 线卡/ 本地/ 完成/ ./ (/ 2/ )/ 采用/ 两级/ 固定/ 配置/ 的/ Mesh/ 网络/ ,/ 其/ 确定/ 的/ 连接/ 模式/ 独立/ 于/ 报文/ 到达/ 过程/ ./ 因此/ 不/ 需要/ 为/ 每个/ 报文/ 动态/ 配置/ 交换/ 网络/ ,/ 这种/ 固定/ 的/ 连接/ 方式/ 也/ 易于/ 用光/ 互连/ 技术/ 实现/ ./ 斯坦福大学/ 基于/ 负载/ 均衡/ 交换/ 结构/ ,/ 实现/ 了/ 一个/ 100Tb/ // s/ 的/ 光/ 路由器/ [/ 4/ ]/ ,/ 包含/ 640/ 个/ 线卡/ ,/ 每个/ 运行/ 在/ 160Gb/ // s/ 的/ 速率/ ./ 采用/ 了/ 一种/ 层次化/ 的/ Mesh/ 体系结构/ ,/ 640/ 个/ 线卡/ 被/ 组织/ 成/ 40/ 个/ 机柜/ ,/ 每个/ 机柜/ 包含/ 16/ 个/ 线卡/ ./ 机柜/ 间/ 通过/ 静态/ 配置/ 的/ 40/ ×/ 40/ 光/ 交换/ 器件/ MEMS/ (/ 等同于/ 光/ Crossbar/ )/ 进行/ 互连/ ./ MEMS/ 交换/ 速率/ 可/ 配置/ ,/ 当/ 加入/ 或/ 移除/ 线卡/ 时/ ,/ 需要/ 调节/ MEMS/ 速率/ 以/ 保证/ 流量/ 畅通/ [/ 4/ ]/ ./ 2/ 相关/ 研究/ 网络流量/ 特性/ 决定/ 路由器/ 处理/ 的/ 数据模型/ ./ 对于/ 并行/ 路由器/ 而言/ ,/ 最/ 重要/ 的/ 是/ 报文/ 乱序/ 属性/ ,/ 研究者/ 采用/ 主动/ 测量/ 和/ 被动/ 测量/ 方式/ 对/ 报文/ 乱序/ 行为/ 做/ 了/ 大量/ 研究/ ./ Bennett/ 在/ MAE/ -/ EastISP/ 的/ 交换/ 中心/ 测量/ 了/ 报文/ 乱序/ 情况/ ,/ 发现/ 在/ 重/ 负载/ 、/ 网络设备/ 并行度/ 高/ 的/ 测量/ 环境/ 下/ ,/ 报文/ 乱序/ 情况/ 非常/ 严重/ ,/ 90/ %/ 以上/ 的/ 连接/ 发生/ 乱序/ [/ 6/ ]/ ./ Bennett/ 分析/ 这种/ 高/ 乱序/ 率/ 主要/ 来自/ 网络/ 内部/ 的/ 局部/ 并行处理/ 机制/ ,/ 包括/ 并行/ 交换/ 设备/ 和/ 并行传输/ 链路/ ,/ 并/ 指出/ 报文/ 乱序/ 不是/ 网络/ 的/ 病态/ 行为/ ./ 负载/ 均衡/ 交换/ 结构/ 存在/ 报文/ 乱序/ 现象/ ,/ 从/ 最初/ 基于/ 两级/ Crossbar/ 的/ 负载/ 均衡/ 交换/ 结构/ [/ 2/ ]/ 到/ 目前/ 广泛/ 研究/ 的/ 基于/ 两级/ Mesh/ 网络/ 的/ 负载/ 均衡/ 交换/ 结构/ [/ 3/ -/ 4/ ,/ 7/ -/ 8/ ]/ 均/ 受到/ 报文/ 乱序/ 问题/ 的/ 困扰/ ./ 乱序/ 报文/ 会/ 损害/ Internet/ 网况/ ,/ 因为/ Internet/ 广泛/ 使用/ 的/ TCP/ 传输/ 协议/ 会/ 错误/ 地/ 将/ 乱序/ 报文/ 看作/ 是/ 报文/ 丢失/ 拥塞/ 发生/ 的/ 标志/ ,/ 从而/ 引发/ 不必要/ 的/ 重传/ 及/ TCP/ 超时/ ./ 这些/ 重传/ 和/ 超时/ 将/ 降低/ TCP/ 吞吐/ 率/ ,/ 提高/ 报文/ 延迟/ ,/ 因此/ 在/ 路由器/ 中/ 保证/ 报文/ 的/ 顺序/ 是/ 极其/ 必要/ 的/ ./ 防止/ 报文/ 乱序/ 的/ 方法/ 可以/ 分为/ 两类/ :/ (/ 1/ )/ 限定/ 乱序/ 报文/ 的/ 数量/ ,/ 在/ 输出/ 端/ 设置/ 容量/ 有限/ 的/ 重定序/ 缓冲区/ ,/ 用于/ 重定序/ 乱序/ 报文/ ;/ (/ 2/ )/ 保证/ 报文/ 按照/ 到/ Page3/ 达/ 顺序/ 离开/ 输出/ 端口/ ,/ 从而/ 避免/ 了/ 报文/ 乱序/ ./ 在/ 负载/ 均衡/ 交换/ 结构/ 中/ ,/ 文献/ [/ 4/ ,/ 7/ ]/ 采用/ 的/ 是/ 基于/ 限定/ 报文/ 重定序/ 数量/ 的/ 第/ 1/ 种/ 方法/ ./ 由于/ 缓冲区/ 的/ 容量/ 有限/ ,/ 这些/ 方法/ 只能/ 处理/ 一定/ 范围/ 内/ 的/ 乱序/ 报文/ ,/ 如果/ 将/ 重定序/ 缓冲区/ 尺寸/ 增加/ 至/ O/ (/ N2/ )/ ,/ 虽然/ 能够/ 完全/ 解决/ 报文/ 乱序/ 的/ 问题/ 但会/ 相应/ 地以/ 二次方/ 的/ 时间尺度/ 增加/ 报文/ 延迟/ ,/ 其中/ N/ 为/ 端口/ 数目/ ./ 因此/ ,/ 这些/ 方法/ 并/ 不能/ 有效/ 解决/ 报文/ 乱序/ 问题/ ,/ 并且/ 难以/ 适应/ 路由器/ 高端/ 口/ 密度/ 的/ 需求/ ./ 文献/ [/ 3/ ]/ 所/ 提出/ 的/ 满/ 帧/ 优先/ (/ FullOrderedFrameFirst/ ,/ FOFF/ )/ 算法/ 是/ 第/ 1/ 种/ 方法/ 的/ 代表/ 算法/ ,/ 它/ 允许/ 路由器/ 中/ 存在/ 一定/ 数量/ 的/ 乱序/ 报文/ ,/ 在/ 输出/ 端/ 设置/ 了/ 容量/ 为/ N2/ 个/ 信元/ 的/ N/ 个/ 的/ 缓冲/ 队列/ 用于/ 重定序/ 乱序/ 报文/ ./ 文献/ [/ 3/ ]/ 证明/ 了/ ,/ 为了/ 保证/ 信元/ 按序/ 离开/ ,/ 重定序/ 缓冲区/ 容量/ 至多/ 为/ N2/ 个/ 信元/ ./ 为了/ 限定/ 乱序/ 信元/ 的/ 数量/ ,/ FOFF/ 算法/ 每/ N/ 个/ 外部/ 时间槽/ 只能/ 服务/ 一个/ 队列/ ,/ 当/ 被/ 服务/ 队列/ 的/ 信元/ 不能/ 占用/ 全部/ 的/ 内部/ 链路/ 时/ (/ 所含/ 信元/ 小于/ N/ 的/ 情况/ )/ ,/ 由于/ 其它/ 队列/ 不能/ 使用/ 剩余/ 的/ 空闲/ 链路/ ,/ 将/ 造成/ Mesh/ 网络带宽/ 浪费/ ,/ 增加/ 信元/ 平均/ 延迟/ ./ 近年来/ ,/ 更/ 多/ 的/ 研究者/ 趋向于/ 采用/ 第/ 2/ 种/ 方法/ 来/ 保证/ 报文/ 的/ 顺序/ ,/ 消除/ 了/ 输出/ 端的/ 重定序/ 操作/ 及/ 缓冲区/ 开销/ ,/ 有利于/ 提高/ 延迟/ 性能/ [/ 9/ -/ 11/ ]/ ./ 文献/ [/ 5/ ]/ 提出/ 一种/ 邮箱/ 交换/ (/ mailboxswitch/ )/ 的/ 思想/ ./ 采用/ 对称/ 型/ 连接/ 模式/ 为/ 通告/ 报文/ 离开/ 时间/ 创造/ 反馈/ 通路/ ,/ 调度/ 器/ 根据/ 报文/ 的/ 离开/ 时间/ 调度/ 报文/ ./ 该/ 策略/ 能够/ 保证/ 每条流/ 的/ 报文/ 按照/ 其/ 到达/ 顺序/ 离开/ 交换/ 系统/ 但/ 不能/ 提供/ 100/ %/ 的/ 吞吐/ 率/ ./ 文献/ [/ 11/ ]/ 提出/ 一种/ 能够/ 保证/ 报文/ 顺序/ 的/ 交替/ 匹配/ 交换/ 结构/ (/ interleavedmatc/ -/ hingswitch/ )/ ,/ 采用/ 集中式/ 的/ 调度/ 模式/ ,/ 假设/ 流量/ 特征/ 是/ 预知/ 的/ 且/ 固定/ 不变/ ,/ 采用/ 矩阵/ 分解/ 的/ 方法/ [/ 12/ ]/ 离线/ 解决/ 集中/ 式调度/ 问题/ ,/ 分布式/ 实现/ 在线/ 调度/ 并/ 提供/ 服务/ 保证/ ./ 然而/ ,/ 当/ 流量/ 变得/ 不可/ 预知/ 并/ 动态/ 改变/ 时/ ,/ 难以/ 在/ 大/ 的/ 交换/ 尺寸/ 下/ 满足/ 集中式/ 的/ 调度/ 需求/ ./ 文献/ [/ 9/ ]/ 提出/ 一种/ 并发/ 匹配/ 交换/ 结构/ CMS/ (/ Concur/ -/ rentMatchingSwitch/ )/ ,/ 其/ 基本/ 思想/ 为/ :/ 通过/ 在/ 中间级/ 线卡/ 设置/ 协同/ 槽/ (/ coordinationslots/ )/ 即/ 长度/ 为/ 1/ 的/ 缓冲区/ ,/ 保证/ 了/ 所有/ 匹配/ 报文/ 从/ 输入/ 线卡/ 到达/ 目的/ 输出/ 线卡/ 经历/ 了/ 相同/ 的/ 延迟/ ,/ 从而/ 避免/ 了/ 信元/ 乱序/ ./ CMS/ 结构/ 首先/ 为/ 每个/ 到达/ 报文/ 发送/ 请求/ 令牌/ 到/ 中间级/ 输入/ 线卡/ 而/ 不是/ 报文/ 本身/ ,/ 每/ 一个/ 请求/ 令牌/ 相当于/ 一个/ 占位/ 符/ ./ 中间级/ 输入/ 线卡/ 为/ 每/ 一条/ 流/ 的/ 请求/ 令牌/ 计数/ ,/ 因此/ 需要/ 维护/ N2/ 个/ 虚拟/ 令牌/ 计数器/ ,/ 构成/ N/ ×/ N/ 的/ 虚拟/ 令牌/ 计数/ 矩阵/ ./ 每/ 一个/ 中间级/ 输入/ 线卡/ 根据/ 本地/ 虚拟/ 令牌/ 计数/ 矩阵/ 计算/ 匹配/ ,/ 不/ 需要/ 任何/ 全局/ 的/ 状态/ 信息/ 或/ 从/ 其它/ 中间级/ 输入/ 线卡/ 获取/ 虚拟/ 令牌/ 计数/ 信息/ ,/ 并/ 根据/ 匹配/ 结果/ 发送/ 许可/ 令牌/ 到/ 每/ 一个/ 输入/ 线卡/ ./ 任何/ 双向/ 匹配/ 算法/ 都/ 可以/ 用于/ 计算/ CMS/ 结构/ 中/ 的/ 匹配/ 问题/ ,/ 文献/ [/ 11/ ]/ 证明/ ,/ 只要/ 中间级/ 输入/ 线卡/ 使用/ 稳定/ 的/ 匹配/ 算法/ ,/ 带流/ 分离/ 操作/ 的/ CMS/ 结构/ 是/ 稳定/ 的/ ,/ 从而/ 能够/ 提供/ 100/ %/ 的/ 吞吐/ 率/ ./ 然而/ CMS/ 结构/ 采用/ 双向/ 匹配/ 算法/ ,/ 算法/ 复杂度/ 至少/ 为/ O/ (/ N2/ )/ ;/ 另一方面/ ,/ CMS/ 结构/ 假设/ 输入/ 线卡/ 和/ 中间级/ 输入/ 线卡/ 之间/ 的/ 令牌/ 通信/ 开销/ 可以/ 忽略不计/ ,/ 而/ 在/ 路由器/ 硬件/ 实现/ 中/ 令牌/ 在线/ 卡间/ 的/ 频繁/ 传递/ 将/ 成倍增加/ 调度/ 周期/ [/ 13/ ]/ ./ 在/ 负载/ 均衡/ 交换/ 结构/ 中/ ,/ 信元/ 乱序/ 问题/ 源自/ 不同/ 的/ 中间级/ 输入/ 线卡/ 中/ 目的/ 端口/ 相同/ 的/ 缓冲/ 队列/ 具有/ 不同/ 的/ 长度/ ./ 鉴于/ 此/ ,/ 文献/ [/ 3/ ]/ 提出/ 一种/ UFS/ (/ UniformFrameSpreading/ )/ 算法/ ,/ 通过/ 将/ 同/ 一条/ 流/ 的/ N/ 个/ 信元/ 依次/ 分派/ 到/ N/ 个/ 中间级/ 输入/ 线卡/ ,/ 使得/ 中间级/ 输入/ 线卡/ 相同/ 目的/ 端口/ 的/ 缓冲/ 队列/ 具有/ 相同/ 的/ 长度/ ,/ 从而/ 保证/ 了/ 信元/ 的/ 顺序/ ./ 当流/ 所/ 含/ 信元/ 数目/ 小于/ N/ 时则/ 需/ 等待/ ,/ 因此/ 在/ 高端/ 口/ 密度/ 下/ ,/ UFS/ 算法/ 所/ 引发/ 的/ 信元/ 延迟/ 是/ 不可/ 容忍/ 的/ ./ 为了/ 降低/ UFS/ 算法/ 信元/ 聚合/ 延迟/ ,/ 我们/ 在/ 早期/ 论文/ [/ 14/ ]/ 中/ 提出/ 了/ 固定/ 映射/ 的/ 思想/ ,/ 由此/ 设想/ 了/ 一种/ 基于/ 流/ 映射/ 的/ 细粒度/ 负载/ 分配/ 算法/ UFFS/ -/ k/ (/ UniformFine/ -/ grainFrameSpreading/ ,/ k/ 为/ 聚合/ 粒度/ ,/ 简称/ UFFS/ -/ k/ )/ ,/ 通过/ 构建/ 流/ 到/ 区域/ 的/ 固定/ 映射/ ,/ 实现/ 报文/ 的/ 顺序/ 并/ 通过/ 降低/ 聚合/ 粒度/ 以/ 提高/ 延迟/ 性能/ ./ 论文/ [/ 14/ ]/ 提出/ 的/ 循环/ 映射/ 算法/ 本身/ 并/ 不能/ 保证/ 负载/ 均衡/ ,/ 本文/ 首先/ 通过/ 理论/ 证明/ ,/ UFFS/ -/ k/ 算法/ 能够/ 保证/ 报文/ 的/ 顺序/ ;/ 原创性/ 地/ 提出/ 最小/ 长度/ 分派/ 以及/ 流量/ 分布/ 矩阵/ 互斥/ 写/ 策略/ ,/ 证明/ 了/ 最小/ 长度/ 分派/ 结合/ 流量/ 分布/ 矩阵/ 互斥/ 写/ 策略/ 能够/ 获得/ 100/ %/ 负载/ 均衡/ 度/ ;/ 最后/ 在/ 贝努利/ 一致/ 流量/ 模型/ 和/ 突发/ 流量/ 模型/ 下/ 分析/ 评测/ UFFS/ -/ k/ 算法/ 在/ 不同/ 聚合/ 粒度/ k/ 下/ 的/ 延迟/ 性能/ ,/ 并/ 与/ 目前/ 主流/ 的/ 负载/ 均衡/ 调度/ 算法/ 进行/ 比较/ ,/ 模拟/ 结果显示/ ,/ 当/ 聚合/ 粒度/ k/ =/ 2/ 时/ ,/ UFFS/ -/ k/ 算法/ 在/ 同类/ 维序/ 算法/ 中/ 表现/ 出/ 最优/ 延迟/ 性能/ ./ 3UFFS/ -/ 犽/ 算法/ 基本/ 思想/ 3.1/ 体系结构/ UFFS/ -/ k/ 算法/ 采用/ 的/ 负载/ 均衡/ 交换/ 结构/ 如图/ 1/ 所示/ ,/ 输入/ 端口/ 将/ 到达/ 信元/ 按照/ 目的/ 端口/ 缓冲/ 在/ VOQ/ 队列/ ,/ VOQ/ 队列/ 来自/ 同/ 一条/ 流/ 的/ k/ 个/ 信元/ ,/ 称之为/ 一个/ 单位/ 帧/ ;/ N/ 个/ 中间级/ 输入/ 端口/ 被/ 依次/ 划分/ Page4/ 为/ N/ // k/ 组/ ,/ 每组/ 含/ k/ 个/ 连续/ 的/ 中间级/ 输入/ 端口/ 构成/ 一个/ 区域/ ;/ 每个/ 输入/ 端口/ 独立/ 执行/ UFFS/ -/ k/ 信元/ 分派/ 算法/ ,/ 在/ k/ 个/ 连续/ 的/ 外部/ 时间槽/ ,/ UFFS/ -/ k/ 将/ 同/ 一条/ 流/ 的/ 单位/ 帧/ 通过/ 第一级/ Mesh/ 网络/ 发送/ 该流/ 固定/ 图/ 1/ 负载/ 均衡/ 交换/ 结构/ 参照/ 文献/ [/ 14/ ]/ 给出/ 的/ 符号/ 与/ 定义/ ,/ 我们/ 用/ VOQi/ ,/ j/ 表示/ 输入/ 端口/ i/ 的/ 虚拟/ 输出/ 队列/ j/ ;/ OQl/ 中间级/ 输入/ 端口/ l/ 的/ 输出/ 队列/ j/ ;/ f/ (/ i/ ,/ j/ )/ 表示/ 从/ 输入/ 端口/ i/ 到/ 输出/ 端口/ j/ 的/ 流/ ;/ k/ 为/ 聚合/ 粒度/ ,/ 表示/ UFFS/ -/ k/ 算法/ 连续/ 调度/ 同/ 一条/ 流信元/ 的/ 数目/ (/ k/ 为/ 端口数/ N/ 的/ 因数/ )/ ;/ VOQi/ ,/ j/ 队列/ 的/ 每/ k/ 个/ 信元/ 构成/ 一个/ 单位/ 帧/ (/ unitframe/ )/ ,/ 输入/ 端/ i/ ,/ N/ // k/ 个/ 不同/ VOQ/ 队列/ 的/ 单位/ 帧/ (/ 共计/ N/ 个/ 信元/ )/ 构成/ 一个/ 聚合/ 帧/ (/ aggregateframe/ )/ ,/ VOQi/ ,/ j/ 队列/ 的/ N/ 个/ 信元/ ,/ 构成/ 一个/ 满帧/ (/ fullframe/ )/ ;/ 中间级/ 输入/ 端口/ 1/ ,/ 2/ ,/ …/ ,/ N/ 被/ 依次/ 分成/ N/ // k/ 组/ ,/ 每/ 一组/ 含/ k/ 个/ 连续/ 的/ 中间级/ 输入/ 端口/ ,/ 第/ g/ 组/ 的/ k/ 个/ 中间级/ 输入/ 端口/ 构成/ 一个/ 区域/ ,/ 记作/ Rg/ ,/ Sr/ ,/ z/ 表示/ 区域/ r/ 的/ 第/ z/ 个/ 中间级/ 输入/ 端口/ ;/ 每个/ 输入/ 端口/ 的/ N/ 条流/ 被/ 划分/ 为/ N/ // k/ 组与/ N/ // k/ 个/ 区域/ 相对/ 应/ ,/ 每组/ 含/ k/ 条流/ ,/ 输入/ 端口/ i/ 第/ f/ 组/ 的/ k/ 条流/ 构成/ 一个/ 流/ 分支/ ,/ 记作/ Qi/ 为/ 降低/ 报文/ 缓冲存储器/ 带宽/ 需求/ ,/ Mesh/ 网络/ 通常/ 运行/ 在/ 速率/ R/ // N/ (/ 内部/ 链路/ 加速/ 比为/ 1/ )/ ,/ 由此/ 得到/ 以下/ 定义/ ./ 定义/ 1/ ./ 在/ 速率/ 为/ R/ 的/ 链路/ 发送/ 或/ 接收/ 一个/ 信元/ 所/ 耗费/ 的/ 时间/ 为/ 外部/ 时间槽/ (/ externaltimeslot/ )/ ./ 定义/ 2/ ./ 在/ 速率/ 为/ R/ // N/ 的/ 链路/ 发送/ 或/ 接收/ 一个/ 单位/ 帧/ 所/ 耗费/ 的/ 时间/ 为/ 时间槽/ (/ timeslot/ )/ ,/ 时间槽/ 为/ 外部/ 时间槽/ 的/ N/ 倍/ ./ 定义/ 3/ ./ 受/ 输入/ 链路/ 约束/ 影响/ [/ 15/ ]/ ,/ 输入/ 端口/ 每/ N/ 个/ 外部/ 时间槽/ 恰能/ 发送/ 一个/ 信元/ 到/ 同一/ 中间级/ 的/ 映射/ 区域/ ;/ 各/ 区域/ 按照/ 目的/ 端口/ 将/ 信元/ 缓冲/ 在/ OQ/ 队列/ ,/ 由于/ 流/ 到/ 区域/ 的/ 映射/ 关系/ 固定/ ,/ 来自/ 同一/ 单位/ 帧/ 的/ k/ 个/ 信元/ 将/ 依次/ 到达/ OQ/ 队列/ 头/ 位置/ ,/ 等待/ 第二级/ Mesh/ 网络/ 空闲/ 时/ 依次/ 离开/ 输出/ 端口/ ./ 输入/ 端口/ ,/ 可用/ 输入/ 链路/ 集合/ (/ AvailableInputLinkSet/ )/ 是/ 指/ 在/ 外部/ 时间槽/ e/ ,/ 能够/ 从/ 输入/ 端口/ i/ 接收/ 信元/ 的/ 中间级/ 输入/ 端口/ 的/ 集合/ ,/ 记作/ AIL/ (/ i/ ,/ e/ )/ ./ 定义/ 4/ ./ 受/ 输出/ 链路/ 约束/ 影响/ [/ 15/ ]/ ,/ 中间级/ 输入/ 端口/ 每/ N/ 个/ 外部/ 时间槽/ 恰能/ 发送/ 一个/ 信元/ 到/ 同一/ 输出/ 端口/ ,/ 可用/ 输出/ 链路/ 集合/ (/ AvailableOutputLinkSet/ )/ 是/ 指/ 在/ 外部/ 时间槽/ e/ ,/ 能够/ 将/ 信元/ 发送到/ 输出/ 端口/ j/ 的/ 中间级/ 输入/ 端口/ 的/ 集合/ ,/ 记作/ AOL/ (/ j/ ,/ e/ )/ ./ 在/ 负载/ 均衡/ 交换/ 结构/ 中/ ,/ 当同/ 一条/ 流/ 的/ 信元/ 所在/ 中间级/ 输入/ 线卡/ OQ/ 队列/ 长度/ 不/ 同时/ 就/ 会/ 引发/ 信元/ 乱序/ ,/ 并且/ 乱序/ 信元/ 数目/ 随着/ OQ/ 队列/ 长度/ 差异/ 的/ 增大/ 而/ 增大/ ./ UFS/ 算法/ 通过/ 将/ 同/ 一条/ 流/ 的/ N/ 个/ 信元/ 分派/ 到/ 中间级/ 输入/ 线卡/ 所有/ 的/ OQ/ 队列/ ,/ 保证/ 了/ OQ/ 队列/ 长度/ 的/ 一致性/ 从而/ 实现/ 了/ 信元/ 保序/ ./ UFS/ 的/ 缺点/ 是/ 需要/ 在/ 输入/ 端/ VOQ/ 队列/ 聚合/ N/ 个/ 信元/ ,/ 聚合/ 粒度/ 太/ 大/ ,/ 增加/ 了/ 信元/ 延迟/ ,/ 并/ 存在/ “/ 饿死/ ”/ 现象/ ./ 针对/ 以上/ 问题/ ,/ UFFS/ -/ k/ 算法/ 以/ 细粒度/ 的/ 方式/ 将/ 同/ 一条/ 流/ 的/ k/ 个/ 信元/ 分派/ 到/ 预先/ 设定/ 的/ 映射/ 区域/ (/ k/ 个/ 连续/ 的/ 中间级/ 输入/ 端口/ )/ ,/ 由于/ 流/ 到/ 区域/ 的/ 映射/ 关系/ 固定/ ,/ 对/ 任意/ 流/ ,/ 其信元/ 所在/ 映射/ 区域/ 的/ OQ/ 队列/ 长度/ 相同/ ,/ 从而/ 实现/ 了/ 信元/ 的/ 按序/ 发送/ ,/ 我们/ 在/ 3.3/ 节/ 证明/ 了/ 该/ 结论/ ./ 3.2/ 建立/ 流/ 到/ 区域/ 的/ 映射/ 流/ 到/ 区域/ 的/ 映射/ 算法/ 用于/ 构建/ 流/ 到/ 区域/ 固定/ 的/ 映射/ 关系/ ,/ 它/ 关系/ 到/ 中间级/ 输入/ 端/ 存储资源/ 及/ 两级/ Page5Mesh/ 网络/ 的/ 利用率/ ,/ 为/ 避免/ 吞吐量/ 损失/ (/ lossofthroughput/ )/ 流/ 到/ 区域/ 的/ 映射/ 算法/ 应/ 实现/ 输入/ 负载/ 在/ 各/ 区域/ 的/ 均衡/ 分布/ ./ 本节/ 提出/ 一种/ 兼顾/ 负载/ 均衡/ 和/ 报/ 文保/ 序/ 的/ 双循环/ (/ dual/ -/ rotation/ )/ 映射/ 算法/ ,/ 其/ 主要/ 思想/ 与/ 我们/ 之前/ 提出/ 的/ 循环/ 映射/ 算法/ [/ 14/ ]/ 类似/ :/ 既然/ 对于/ 任意/ 给定/ 的/ 区域/ ,/ 只能/ 接收/ 同一/ 输入/ 端口/ 固定/ 的/ k/ 条流/ ,/ 那么/ 为/ 实现/ 负载/ 在/ 各/ 区域/ 的/ 均衡/ 分布/ ,/ 以/ 循环/ 方式/ 调整/ 流/ 分支/ 到/ 区域/ 的/ 映射/ ,/ 从而/ 得到/ N/ // k/ 种/ 映射/ 方式/ ./ 如图/ 2/ 所示/ ,/ 第/ 1/ 层/ 循环/ 保证/ 了/ 每个/ 区域/ 恰能/ 涵盖/ 所有/ 的/ 流/ ;/ 进一步/ 以/ 循环/ 方式/ 调整/ 不同/ 输入/ 端口/ 与/ N/ // k/ 种/ 映射/ 方式/ 的/ 关联/ ,/ 第/ 2/ 层/ 循环/ 保证/ 了/ 每个/ 区域/ 按照/ 输入/ 端口/ 的/ 均衡/ 分布/ 涵盖/ 所有/ 的/ 流/ ./ 从/ 3.3/ 节/ 可以/ 看到/ ,/ UFFS/ -/ k/ 算法/ 根据/ 中间级/ 输入/ 端口/ 流量/ 分布/ 矩阵/ 调度/ 单位/ 帧/ ,/ 进一步/ 保证/ 了/ 每/ 条流/ 在/ 区域/ 之间/ 的/ 均衡性/ ./ 双循环/ 映射/ 算法/ 通过/ 简单/ 的/ 取模/ 运算/ 建立/ 流/ 到/ 区域/ 的/ 映射/ 关系/ ,/ 可/ 描述/ 如下/ :/ // // Definethefollowingconstants/ :/ // // N/ ,/ Numberofports/ // // k/ ,/ Aggregatefactor/ // // Definethefollowingvariables/ :/ // // i/ ,/ Integer/ ,/ inputportnumber/ // // f/ ,/ Integer/ ,/ flowbranchnumber/ // // g/ ,/ Integer/ ,/ regionnumberfor/ (/ i/ =/ 0/ ,/ i/ </ N/ ,/ i/ ++/ )/ for/ (/ g/ =/ 0/ ,/ g/ </ N/ // k/ ,/ g/ ++/ )/ FlowMapping/ (/ QiFunctionFlowMapping/ (/ Qiif/ (/ k/ =/ =/ 1/ )/ f/ =/ (/ g/ +/ i/ )/ %/ (/ N/ // k/ )/ ;/ else/ {/ if/ (/ g/ </ (/ i/ %/ (/ N/ // k/ )/ )/ )/ f/ =/ (/ g/ +/ (/ N/ // k/ )/ )/ -/ (/ i/ %/ (/ N/ // k/ )/ )/ ;/ elsef/ =/ g/ -/ (/ i/ %/ (/ N/ // k/ )/ )/ ;/ }/ EndFunctionFlowMapping/ 图/ 2/ 显示/ 了/ 当/ 端口/ 数目/ N/ =/ 32/ ,/ 聚合/ 粒度/ k/ =/ 8/ 时/ ,/ 循环/ 映射/ 算法/ 得到/ 的/ 流到/ 区域/ 的/ 映射/ 结果/ (/ VOQij/ 代表/ 从/ 输入/ 端口/ i/ 到/ 输出/ 端口/ j/ 的/ 流/ ,/ →/ 表示/ 映射/ 关系/ )/ ./ 3.3/ UFFS/ -/ 犽/ 调度/ 算法/ UFFS/ -/ k/ 算法/ 分布/ 于/ 每个/ 输入/ 端口/ 独立/ 执行/ ,/ 根据/ 流/ 到/ 区域/ 的/ 映射/ 关系/ 分派/ 信元/ ./ UFFS/ -/ k/ 算法/ 以/ 轮询/ (/ round/ -/ robin/ )/ 方式/ 服务/ 于/ N/ // k/ 个流/ 分支/ ,/ 以/ 单位/ 帧/ 为/ 最小/ 调度/ 单元/ ,/ 在/ 连续/ 的/ k/ 个/ 外部/ 时间槽/ ,/ 发送/ 流/ 分支/ 中/ 固定/ VOQ/ 队列/ 的/ 单位/ 帧/ ,/ 输入/ 端口/ iUFFS/ -/ k/ 调度/ 算法/ 每个/ 外部/ 时间槽/ 的/ 操作/ 可/ 描述/ 如下/ :/ 步/ 1/ ./ 对/ 区域/ Rg/ (/ g/ 初始化/ 为/ 0/ )/ ,/ 若流/ 分支/ Qi/ 等式/ (/ f/ +/ i/ %/ (/ N/ // k/ )/ )/ %/ (/ N/ // k/ )/ =/ g/ )/ 最小/ 均衡/ 系数/ VOQ/ 队列/ VOQi/ ,/ j/ (/ kf/ / j/ </ kf/ +/ k/ )/ 存在/ 单位/ 帧/ 且/ 输入/ 端口/ i/ 到/ 中间级/ 输入/ 端口/ Sg/ ,/ 1/ 的/ 内部/ 链路/ 空闲/ ,/ 则/ 将/ VOQi/ ,/ j/ 队列/ 头信元/ 发送到/ 区域/ Rg/ 中间级/ 输入/ 端口/ Sg/ ,/ 1/ ;/ 若/ Qi/ 列/ 不/ 存在/ 单位/ 帧/ 或者/ 输入/ 端口/ i/ 到/ 中间级/ 输入/ 端口/ Sf/ ,/ 1/ 的/ 内部/ 链路/ 忙/ ,/ 则/ g/ =/ (/ g/ +/ 1/ )/ modN/ // k/ ,/ 返回/ 步/ 1/ ;/ 步/ 2/ ./ 发送/ VOQi/ ,/ j/ 队列/ 头信元/ 到/ 区域/ Rg/ 中间级/ 输入/ 端口/ Sg/ ,/ 2/ ;/ …/ 口/ Sg/ ,/ k/ ,/ g/ =/ (/ g/ +/ 1/ )/ modN/ // k/ ,/ 返回/ 步/ 1/ ./ 步/ k/ ./ 发送/ VOQi/ ,/ j/ 队列/ 头信元/ 到/ 区域/ Rg/ 中间级/ 输入/ 端/ 通常/ 情况/ 下/ ,/ 在/ 每个/ 时间槽/ 即/ 每/ N/ 个/ 外部/ 时间槽/ ,/ UFFS/ -/ k/ 调度/ 算法/ 可/ 从/ 输入/ 端/ N/ // k/ 个流/ 分支/ 中/ 聚合/ N/ // k/ 个/ 单位/ 帧/ 构成/ 一个/ 聚合/ 帧/ 分派/ 到/ 中间级/ 输入/ 端口/ ./ VOQ/ 队列/ 均衡/ 系数/ 反映/ 了/ 流量/ 在/ 中间级/ 输入/ 端口/ OQ/ 队列/ 分布/ 的/ 均衡性/ ,/ UFFS/ -/ k/ 调度/ 算法/ 根据/ 各/ 区域/ OQ/ 队列/ 长度/ 调度/ 单位/ 帧/ ,/ 实现/ 了/ 区域间/ 的/ 负载/ 均衡/ ./ 下面/ 将/ 通过/ 证明/ 详细/ 阐述/ 均衡/ 系数/ 工作/ 原理/ ./ 引理/ 1/ ./ 对/ 任意/ 输入/ 端口/ i/ ,/ e/ / 0/ ,/ 输入/ 链路/ 集合/ 个数/ 满足/ |/ AIL/ (/ i/ ,/ e/ )/ |/ / N/ -/ N/ // S/ +/ 1/ ,/ 其中/ S/ 为/ 内部/ 链路/ 加速/ 比/ ./ 证明/ ./ 对/ 引理/ 1/ 的/ 证明/ 见/ 参考文献/ [/ 16/ ]/ ./ 引理/ 2/ ./ UFFS/ -/ k/ 调度/ 算法/ 在/ 没有/ 考虑/ 内部/ 链路/ 加速/ 比/ 的/ 情况/ 下/ (/ s/ =/ 1/ )/ ,/ 对/ 任何/ 区域/ r/ ,/ 若/ Sr/ ,/ 1/ ∈/ AIL/ (/ i/ ,/ E/ )/ 则/ 有/ Sr/ ,/ z/ ∈/ AIL/ (/ i/ ,/ E/ +/ z/ -/ 1/ )/ ,/ z/ =/ 2/ ,/ …/ ,/ k/ ,/ 且/ UFFS/ -/ k/ 调度/ 算法/ 在/ 任意/ 时间槽/ 即/ N/ 个/ 连续/ 的/ 外部/ 时间槽/ ,/ 可用/ 输入/ 链路/ 集合/ 满足/ ∪/ E/ +/ N/ -/ 1/ ∪/ 0/ / r/ </ N/ // k/ ∪/ kz/ =/ 1Sr/ ,/ {/ }/ z/ ./ 证明/ ./ Sr/ ,/ 1/ ∈/ AIL/ (/ i/ ,/ E/ )/ 表明/ 中间级/ 输入/ 端口/ Page6Sr/ ,/ 1/ 在/ 最近/ 的/ N/ -/ 1/ 个/ 外部/ 时间槽/ 内/ 没有/ 从/ 输入/ 端口/ i/ 接收/ 信元/ (/ 若/ Sr/ ,/ 1/ 在/ 外部/ 时间槽/ E/ -/ (/ N/ -/ 1/ )/ 接收/ 过信元/ ,/ 那么/ N/ -/ 1/ 个/ 外部/ 时间槽/ 以后/ ,/ Sr/ ,/ 1/ 仍/ 不可/ 用/ ,/ 即/ Sr/ ,/ 1/ / AIL/ (/ i/ ,/ E/ )/ )/ ./ 不失/ 一般性/ ,/ 假设/ Sr/ ,/ 1/ 在/ 外部/ 时间槽/ E/ -/ N/ 从/ 输入/ 端口/ i/ 接收/ 过信元/ ,/ 那么/ 根据/ 输入/ 链路/ 约束/ ,/ N/ 个/ 外部/ 时间槽/ 以后/ ,/ Sr/ ,/ 1/ 重新/ 被/ 释放/ 即/ Sr/ ,/ 1/ ∈/ AIL/ (/ i/ ,/ E/ )/ ./ 由于/ UFFS/ -/ k/ 调度/ 算法/ 总是/ 在/ 连续/ 的/ k/ 个/ 外部/ 时间槽/ 依次/ 发送/ 信元/ 至/ Sr/ ,/ 1/ ,/ …/ ,/ Sr/ ,/ k/ ,/ 那么/ Sr/ ,/ 2/ ,/ …/ ,/ Sr/ ,/ k/ 分别/ 在/ 外部/ 时间槽/ E/ -/ N/ +/ 1/ ,/ …/ ,/ E/ -/ N/ +/ k/ -/ 1/ 接收/ 信元/ ,/ 根据/ 输入/ 链路/ 约束/ ,/ Sr/ ,/ z/ ∈/ AIL/ (/ i/ ,/ E/ +/ z/ -/ 1/ )/ ,/ z/ =/ 2/ ,/ …/ ,/ k/ 成立/ ./ 接下来/ 证明/ 引理/ 2/ 的/ 第二/ 部分/ ./ 根据/ 输入/ 链路/ 约束/ 不难/ 推断/ ,/ 在/ 任意/ N/ 个/ 连续/ 的/ 外部/ 时间槽/ 内/ 不/ 存在/ 同一个/ 中间级/ 输入/ 端口/ 两次/ 加入/ 到/ 可用/ 输入/ 链路/ 集合/ 中/ ,/ 该/ 特性/ 可/ 表示/ 为/ 若/ Sr/ ,/ z/ ∈/ AIL/ (/ i/ ,/ e/ )/ ,/ Sr/ ,/ z/ ∈/ AIL/ (/ i/ ,/ e/ )/ 则/ Sr/ ,/ z/ ≠/ Sr/ ,/ z/ 其中/ 1/ / |/ e/ -/ e/ |/ / N/ -/ 1/ ./ 又/ 由/ 引理/ 1/ 知/ ,/ |/ AIL/ (/ i/ ,/ e/ )/ |/ / N/ -/ N/ // S/ +/ 1/ =/ 1/ ,/ 即/ 在/ 任意/ 外部/ 时间槽/ ,/ 至少/ 有/ 1/ 个/ 中间级/ 输入/ 端口/ 可用/ ,/ 不失/ 一般性/ ,/ 假设/ 在/ 每个/ 外部/ 时间槽/ e/ ,/ 存在/ Sr/ ,/ z/ ∈/ AIL/ (/ i/ ,/ e/ )/ 从/ 输入/ 端口/ i/ 接收/ 信元/ ,/ 那么/ 根据/ 引理/ 1/ 从/ E/ 到/ E/ +/ N/ -/ 1/ 连续/ 的/ N/ 个/ 外部/ 时间槽/ ,/ 一定/ 有/ N/ -/ |/ AIL/ (/ i/ ,/ E/ )/ |/ 个/ 不同/ 的/ 中间级/ 输入/ 端口/ 加入/ 可用/ 输入/ 链路/ 集合/ 中/ ,/ 从而/ 有/ ∪/ E/ +/ N/ -/ 1/ ∪/ 0/ / r/ </ N/ // k1/ / z/ / kSr/ ,/ z/ 成立/ ,/ 之前/ 已经/ 证明/ 对/ 任何/ 区域/ r/ ,/ ∪/ k/ 总是/ 在/ k/ 个/ 连续/ 的/ 外部/ 时间槽/ ,/ 以/ round/ -/ robin/ 的/ 方式/ 依次/ 加入/ 可用/ 输入/ 链路/ 集合/ ,/ 将/ Sr/ ,/ 1/ ∈/ AIL/ (/ i/ ,/ E/ )/ ,/ Sr/ ,/ z/ ∈/ AIL/ (/ i/ ,/ E/ +/ z/ -/ 1/ )/ ,/ z/ =/ 2/ ,/ …/ ,/ k/ 等价/ 表示/ 为/ ∪/ E/ +/ k/ -/ 1v/ =/ EAIL/ (/ i/ ,/ v/ )/ =/ ∪/ 1/ / z/ / kSr/ ,/ z/ 后/ ,/ 在/ 任意/ N/ 个/ 连续/ 的/ 外部/ 时间槽/ ,/ ∪/ E/ +/ N/ -/ 1/ 引理/ 3/ ./ UFFS/ -/ k/ 调度/ 算法/ 保证/ 对/ 任意/ 区域/ Rg/ ,/ 0/ / j/ </ N/ ,/ k/ 个/ 中间级/ 输入/ 端口/ 对应/ 的/ k/ 个/ OQl/ 队列/ 长度/ 相同/ (/ 忽略/ 单位/ 帧/ 的/ 传输/ 延迟/ )/ ,/ 其中/ l/ ∈/ Rg/ ./ 证明/ ./ 采用/ 对/ 时间槽/ 的/ 归纳法/ 证明/ ./ 对/ 第/ 1/ 个/ 时间槽/ ,/ 引理/ 3/ 显然/ 成立/ ./ 假设/ 在/ 时间槽/ T/ 结束/ 后/ ,/ 引理/ 3/ 成立/ ,/ 那么/ 只/ 需/ 证明/ 在/ 时间槽/ T/ +/ 1/ 结束/ 后/ ,/ 引理/ 3/ 依然/ 成立/ ./ 由/ 引理/ 2/ 知/ ,/ 在/ 任意/ 时间槽/ ,/ 可用/ 输入/ 链路/ 集合/ 满足/ ∪/ e/ +/ N/ -/ 1v/ =/ eAIL/ (/ i/ ,/ v/ )/ =/ ∪/ 0/ / r/ </ N/ // k/ ∪/ k/ 端口/ i/ ,/ 在/ 同一/ 时间槽/ 至多/ 发送/ 一个/ 单位/ 帧/ 到/ 特定/ 区域/ Rg/ ./ 假设/ 在/ 时间槽/ T/ +/ 1/ ,/ 区域/ Rg/ 从/ P/ 个/ 输入/ 端口/ 接收/ 到/ 了/ P/ 个/ 单位/ 帧/ ,/ 其中/ 0/ / P/ / N/ ./ 不失/ 一般性/ ,/ 假设/ 该/ P/ 个/ 单位/ 帧/ 目的/ 端口/ 集合/ 为/ {/ j1/ ,/ j2/ ,/ …/ ,/ jP/ }/ ,/ 其中/ 1/ / P/ / P/ ,/ 那么/ 区域/ Rg/ 目的/ 端口/ j/ (/ j/ =/ j1/ ,/ j2/ ,/ …/ ,/ jP/ )/ 对应/ 的/ k/ 个/ 队列/ OQSg/ ,/ 1j/ 分别/ 接收/ 到/ d/ (/ d/ =/ d1/ ,/ d2/ ,/ …/ ,/ dP/ )/ 个/ 信元/ ,/ d1OQSg/ ,/ k/ 表示/ 区域/ Rg/ 接收/ 到/ 的/ 目的/ 端口/ 为/ j1/ 的/ 单位/ 帧/ 的/ 数目/ ,/ 以此类推/ ./ 在/ 时间槽/ T/ 结束/ 后/ ,/ 由/ 引理/ 3/ 知对/ 输出/ 端口/ j/ ,/ OQl/ 间/ 槽/ T/ +/ 1/ 结束/ 后/ OQSg/ ,/ 1j/ ,/ OQSg/ ,/ 2j/ ,/ …/ ,/ OQSg/ ,/ kj/ (/ j/ =/ j1/ ,/ j2/ …/ jp/ )/ 在/ 队列/ 长度/ 增加/ d/ (/ d/ =/ d1/ ,/ d2/ ,/ …/ ,/ dP/ )/ 后/ 仍然/ 相等/ ,/ 其它/ OQl/ 槽/ T/ +/ 1/ 结束/ 后/ 依然/ 成立/ ./ 定义/ 5/ ./ 既然/ 对/ 任意/ 区域/ Rg/ ,/ OQl/ 同/ (/ l/ ∈/ Rg/ )/ ,/ 那么/ 队列/ VOQi/ ,/ j/ 均衡/ 系数/ 等于/ 其/ 映射/ 区域/ Rg/ 输出/ 队列/ j/ 的/ 长度/ ,/ 记作/ Lg/ ,/ j/ ./ 定理/ 1/ ./ UFFS/ -/ k/ 调度/ 算法/ 能够/ 保证/ 每条流/ 按序/ 离开/ 输出/ 端口/ ./ 证明/ ./ 该/ 命题/ 等价/ 于/ 证明/ :/ 假设/ 流/ f/ (/ i/ ,/ j/ )/ 任意/ 两个/ 信元/ C1/ ,/ C2/ ,/ 若/ C1/ 先于/ C2/ 到达/ 输入/ 端口/ i/ ,/ 那么/ C1/ 先于/ C2/ 离开/ 输出/ 端口/ j/ ./ 考虑/ C1/ ,/ C2/ 属于/ 同一/ 单位/ 帧/ 和/ 不同/ 单位/ 帧/ 两种/ 情况/ :/ 若/ C1/ ,/ C2/ 属于/ 同一/ 单位/ 帧/ ,/ 那么/ 根据/ UFFS/ -/ k/ 调度/ 算法/ ,/ 在/ 连续/ 的/ k/ 个/ 外部/ 时间槽/ ,/ 依次/ 将/ 单位/ 帧/ 的/ k/ 个/ 信元以/ 循环/ (/ roundrobin/ )/ 方式/ 分派/ 至/ 其/ 映射/ 区域/ Rg/ ;/ 假设/ C1/ 缓冲/ 在/ 队列/ OQl1j/ ,/ C2/ 缓冲/ 在/ 队列/ OQl2j/ ,/ 则/ l1/ ,/ l2/ ∈/ Rg/ ,/ 按照/ C1/ ,/ C2/ 到达/ 顺序/ l1/ </ l2/ ./ 假设/ OQl1j/ ,/ OQl2j/ 队列/ 长度/ 分别/ 为/ L1/ ,/ L2/ ,/ 由/ 引理/ 3/ 知/ ,/ L1/ =/ L2/ ,/ 根据/ 输出/ 链路/ 约束/ ,/ 在/ 每个/ 时间槽/ ,/ 输出/ 线卡/ j/ 恰能/ 从/ OQl/ 元/ ,/ 那么/ L1/ 个/ 时间槽/ 后/ ,/ C1/ ,/ C2/ 将/ 按序/ 离开/ 输出/ 端口/ j/ ./ 若/ C1/ ,/ C2/ 属于/ 不同/ 单位/ 帧/ ,/ 按照/ 到达/ 顺序/ ,/ UFFS/ -/ k/ 算法/ 首先/ 调度/ C1/ 所在单位/ 帧/ ,/ 其次/ 调度/ C2/ 所在单位/ 帧/ ,/ C1/ 先于/ C2/ 到达/ 流/ f/ (/ i/ ,/ j/ )/ 的/ 映射/ 区域/ Rg/ ,/ 若/ C2/ 到达/ 区域/ Rg/ 时/ ,/ C1/ 已经/ 离开/ 输出/ 端口/ j/ ,/ 则/ 得证/ ./ 否则/ ,/ 假设/ 以/ C1/ 为界/ ,/ Lg/ ,/ j/ =/ L1/ ,/ 以/ C2/ 为界/ ,/ Lg/ ,/ j/ =/ L2/ ,/ 则/ L2/ >/ L1/ ./ C1/ 首先/ 离开/ 输出/ 端口/ j/ ,/ L2/ -/ L1/ 个/ 时间槽/ 后/ ,/ C2/ 离开/ 输出/ 端口/ j/ ./ 证毕/ ./ 定义/ 6/ ./ 若/ 队列/ VOQi/ ,/ j/ 存在/ 单位/ 帧/ 且/ 均衡/ 系数/ 满足/ Lg/ ,/ j/ =/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ ,/ 则/ 在/ 连续/ 的/ k/ 个/ 外部/ 时间槽/ 将/ VOQi/ ,/ j/ 队列/ 单位/ 帧/ 发送到/ 区域/ Rg/ ,/ 这/ 就是/ 最/ Page7/ 小/ 长度/ 分派/ ./ 引理/ 4/ ./ 采用/ 最小/ 长度/ 分派/ 的/ UFFS/ -/ k/ 调度/ 算法/ 保证/ 在/ 时间槽/ T/ 结束/ 后/ ,/ 对/ 任意/ 两个/ 区域/ Rg1/ ,/ Rg2/ ,/ 其/ OQ/ 队列/ 长度/ Lg1/ ,/ j/ 与/ Lg2/ ,/ j/ 最多差/ 1/ ./ 证明/ ./ 采用/ 对/ 时间槽/ 的/ 归纳法/ 证明/ ./ 对/ 第/ 1/ 个/ 时间槽/ ,/ 引理/ 4/ 显然/ 成立/ ./ 假设/ 在/ 时间槽/ T/ 结束/ 后/ ,/ 引理/ 4/ 成立/ ,/ 那么/ 只/ 需/ 证明/ 在/ 时间槽/ T/ +/ 1/ 结束/ 后/ ,/ 引理/ 4/ 依然/ 成立/ ./ 在/ 时间槽/ T/ 结束/ 后/ ,/ 由/ 引理/ 4/ 知/ ,/ 假设/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ =/ L/ ,/ 则/ max0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ =/ L/ +/ 1/ ,/ 其中/ L/ / 0/ ./ 在/ 时间槽/ T/ +/ 1/ 内/ ,/ 对/ 任意/ 输出/ 端口/ j/ ,/ 可能/ 存在/ 一个/ 或/ 多个/ 输入/ 端口/ 将/ 单位/ 帧/ 发送到/ 满足/ Lg/ ,/ j/ =/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ 的/ 区域/ Rg/ ,/ 不失/ 一般性/ ,/ 假设/ 被/ 调度/ 的/ 区域/ 集合/ 为/ {/ Rg1/ ,/ Rg2/ ,/ …/ ,/ Rgp/ }/ ,/ 其中/ p/ / num/ (/ Lg/ ,/ j/ =/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ )/ ,/ 那么/ 其/ 对应/ 的/ OQ/ 队列/ 长度/ {/ Lg1/ ,/ j/ ,/ Lg2/ ,/ j/ ,/ …/ ,/ Lgp/ ,/ j/ }/ 由/ L/ 变为/ L/ +/ 1/ ./ 若/ p/ =/ num/ (/ Lg/ ,/ j/ =/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ )/ ,/ 则/ 有/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ =/ max0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ =/ L/ +/ 1/ ;/ 若/ p/ </ num/ (/ Lg/ ,/ j/ =/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ )/ ,/ 则/ 有/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ =/ L/ ,/ max0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ =/ L/ +/ 1/ ;/ 与此同时/ ,/ 受/ 输出/ 链路/ 约束/ 影响/ ,/ 输出/ 线卡/ j/ 将/ 依次/ 从/ OQl/ 出/ N/ 个/ 信元/ ,/ 当/ 时间槽/ T/ 结束/ 后/ ,/ 所有/ OQjs/ 队列/ 长度/ 全部/ 减/ 1/ ,/ 即/ Lg/ ,/ j/ (/ 0/ / g/ </ N/ // k/ )/ 全部/ 减/ 1/ ,/ 综上所述/ ,/ 引理/ 4/ 在/ 时间槽/ T/ +/ 1/ 结束/ 后/ 依然/ 成立/ ./ 证毕/ ./ UFFS/ -/ k/ 调度/ 算法/ 需要/ 维护/ 全局/ 统一/ 视图/ 的/ 流量/ 分布/ 矩阵/ 犔/ =/ [/ Lg/ ,/ j/ ]/ ,/ 为了/ 保证/ 流量/ 分布/ 矩阵/ 在/ 每个/ 输入/ 端口/ 视图/ 的/ 一致性/ ,/ 必须/ 实现/ 对/ 流量/ 分布/ 矩阵/ 写/ 操作/ 的/ 互斥性/ ./ 我们/ 采用/ 锁/ 机制/ 实现/ 对/ 互斥/ 量/ Lg/ ,/ j/ 的/ 互斥/ 写/ :/ 若/ g/ ,/ j/ 满足/ Lg/ ,/ j/ =/ min0/ / g/ </ N/ // k/ (/ Lg/ ,/ j/ )/ 且/ Lg/ ,/ j/ 处于/ 解锁/ (/ unlock/ )/ 状态/ ,/ 那么/ 输入/ 端口/ i/ 对/ Lg/ ,/ j/ 加锁/ 后/ 将/ VOQi/ ,/ j/ 队列/ 单位/ 帧/ 发送至/ 其/ 映射/ 区域/ Rg/ ,/ Lg/ ,/ j/ 加/ 1/ 后/ 被/ 解锁/ ./ 流/ 分支/ 中/ 均衡/ 系数/ Lg/ ,/ j/ 处于/ 加锁/ 状态/ 的/ VOQi/ ,/ j/ 队列/ 直接/ 被/ 跳/ 过/ ./ 不难/ 推断/ ,/ 只有/ 那些/ 流/ 到/ 区域/ 的/ 映射/ 关系/ 相同/ 的/ 输入/ 端口/ 同时/ 调度/ 目的/ 端口/ 相同/ VOQi/ ,/ j/ 队列/ 时才/ 可能/ 引发/ 对/ 同一/ Lg/ ,/ j/ 的/ 写/ 冲突/ ,/ 对/ 均衡/ 系数/ Lg/ ,/ j/ 的/ 互斥/ 写/ 可以/ 避免/ 这些/ 输入/ 端口/ 同时/ 将/ 多个/ 单位/ 帧/ 发送到/ 同一/ 区域/ 的/ 输出/ 队列/ j/ ,/ 造成/ 流量/ 分布/ 不/ 均衡/ ./ 注/ :/ 本文/ 对/ 引理/ 4/ 的/ 证明/ 也/ 是/ 以/ 实现/ 流量/ 分布/ 矩阵/ 犔/ 互斥/ 写为/ 前提/ 的/ ./ 由于/ 流/ 分支/ 到/ 区域/ 的/ 映射/ 关系/ 固定/ ,/ 存在/ 某些/ 区域/ 因/ 负载/ 过重/ 而/ 发生/ 缓冲区/ 溢出/ 而/ 其它/ 区域/ 相对/ 空闲/ 的/ 情况/ ./ 例如/ ,/ 输入/ 端/ 某个/ 流/ 分支/ 的/ VOQ/ 队列/ 含/ N/ 个/ 信元/ ,/ 并且/ 队列/ 长度/ 仍/ 在/ 不断/ 增长/ ,/ 而/ 其它/ 流/ 分支/ 没有/ 单位/ 帧/ 可以/ 调度/ ./ 这样/ 重/ 负载/ 流/ 分支/ 到/ 其/ 映射/ 区域/ 的/ 内部/ 链路/ 将/ 成为/ 性能/ 瓶颈/ ,/ 另一方面/ 重/ 负载/ 流/ 分支/ 因/ 无法/ 使用/ 输入/ 线卡/ 其它/ 空闲/ 链路/ 而/ 造成/ 内部/ 带宽/ 浪费/ ./ 为了/ 解决/ 以上/ 问题/ ,/ UFFS/ -/ k/ 算法/ 允许/ 重/ 负载/ 流/ 分支/ 抢占/ 链路/ 资源/ ,/ 通过/ 赋予/ 满帧/ 最高/ 优先级/ 将/ 突发/ 报文/ 流/ 均匀分布/ 于/ 每个/ 区域/ ./ UFFS/ -/ k/ 算法/ 调度/ 满帧/ 时/ 可能/ 引发/ 信元/ 乱序/ ,/ 图/ 3/ 显示/ 了/ 将/ 满/ 帧/ 分派/ 到/ 中间级/ 输入/ 端口/ 时/ ,/ 出现/ 了/ 信元/ 乱序/ 现象/ ./ 图/ 3/ 中/ 4/ 个/ 区域/ {/ R1/ ,/ R2/ ,/ R3/ ,/ R4/ }/ 输出/ 队列/ j/ 的/ 长度/ {/ L1/ ,/ j/ ,/ L2/ ,/ j/ ,/ L3/ ,/ j/ ,/ L4/ ,/ j/ }/ 分别/ 为/ 3/ ,/ 2/ ,/ 2/ ,/ 3/ (/ 灰色/ 部分/ 所示/ )/ ,/ 当/ 输入/ 端/ 将/ 流/ f/ (/ i/ ,/ j/ )/ 的/ N/ 个/ 信元/ 分派/ 到/ 这/ 4/ 个/ 区域/ 时/ (/ 黑色/ 部分/ 所示/ )/ ,/ 区域/ 2/ 、/ 3/ 的/ 信元/ 先于/ 区域/ 1/ 的/ 信元/ 到达/ 目的/ 端口/ j/ ,/ 而/ 正确/ 的/ 离开/ 顺序/ 应该/ 是/ 区域/ 1/ 的/ 信元/ 最先/ 离开/ ,/ 然后/ 是/ 区域/ 2/ ,/ 区域/ 3/ 和/ 区域/ 4/ ./ 为了/ 解决/ 调度/ 满帧/ 引发/ 的/ 信元/ 乱序/ 问题/ ,/ 我们/ 将/ 从/ VOQi/ ,/ j/ 队列/ 读出/ 的/ N/ // k/ 个/ 单位/ 帧/ (/ 即/ 一个/ 满帧/ )/ 依次/ 分派/ 到/ 目前/ Lg/ ,/ j/ 最小/ 的/ 区域/ Rg/ ./ 采用/ 该/ 策略/ 得到/ 的/ 分派/ 顺序/ 是/ :/ 从/ VOQi/ ,/ j/ 队列/ 读出/ 的/ 第/ 1/ 个/ 及第/ 2/ 个/ 单位/ 帧/ 依次/ 分派/ 在/ 区域/ 2/ 和/ 区域/ 3/ ,/ 第/ 3/ 个/ 单位/ 帧/ 及第/ 4/ 个/ 单位/ 帧/ 依次/ 分派/ 在/ 区域/ 1/ 或/ 区域/ 4/ ,/ 这/ 4/ 个/ 单位/ 帧/ 将/ 按/ 读出/ 顺序/ 依次/ 到达/ 输出/ 端口/ j/ ./ 由/ 引理/ 4/ 知/ ,/ 不同/ 区域/ 输出/ 队列/ j/ 的/ 长度/ 至多/ 差/ 1/ ,/ 因此/ 将/ 满/ 帧/ 中/ N/ // k/ 个/ 单位/ 帧/ 依次/ 发送到/ 目前/ Lg/ ,/ j/ 最小/ 的/ 区域/ 不会/ 引发/ 信元/ 乱序/ ./ 本质/ 上/ ,/ 调度/ 单位/ 帧/ 与/ 调度/ 满帧/ 都/ 采用/ 了/ 最小/ 长度/ 分派/ 策略/ ,/ 两者/ 的/ 区别/ 在于/ 单位/ 帧/ 只能/ 固定/ 分派/ 到/ 其/ 映射/ 区域/ ,/ 而/ 满/ 帧/ 将/ 被/ 拆/ 分为/ N/ // k/ 个/ 单位/ 帧/ 均衡/ 分布/ 于/ N/ // k/ 个/ 区域/ ./ 我们/ 采用/ 负载/ 均衡/ 度来/ 衡量/ 负载/ 在/ 中间级/ 输入/ 3.4/ UFFS/ -/ 犽/ 算法/ 负载/ 均衡/ 度/ 分析/ 线卡/ 分布/ 的/ 均衡/ 程度/ ,/ 负载/ 均衡/ 度/ 可定义/ 如下/ ./ 定义/ 7/ ./ 负载/ 均衡/ 度/ ./ 假设/ 在/ 时间段/ [/ tr/ ,/ tv/ ]/ 内/ 的/ 第/ l/ 个/ 交换/ 模块/ 转发/ 了/ Sl/ [/ tr/ ,/ tv/ ]/ 个/ 信元/ ./ 负载/ 均/ Page8/ 衡度/ 为/ 在/ 该/ 时间段/ 内/ ,/ 不同/ 交换/ 模块/ 转发/ 的/ 最小/ 信元/ 个数/ 与/ 最大/ 信元/ 个数/ 的/ 比值/ ,/ 即/ 其中/ ,/ K/ 为/ 中间级/ 交换/ 模块/ 的/ 数目/ ./ 显然/ 负载/ 均衡/ 度/ E/ [/ tr/ ,/ tv/ ]/ / 1/ ,/ E/ [/ tr/ ,/ tv/ ]/ 趋近/ 于/ 1/ ,/ 表示/ 各/ 交换/ 模块/ 处理/ 的/ 信元数/ 基本相同/ ,/ 负载/ 在/ 交换/ 模块/ 的/ 分布/ 比较/ 均衡/ ./ E/ [/ tr/ ,/ tv/ ]/ 越小/ ,/ 交换/ 模块/ 负载/ 均衡性/ 越差/ ./ 定理/ 2/ ./ UFFS/ -/ k/ 调度/ 算法/ 可/ 获得/ 100/ %/ 负载/ 均衡/ 度/ ./ 证明/ ./ 由/ 引理/ 4/ 知/ ,/ 对/ 任意/ 两个/ 区域/ Rg1/ ,/ Rg2/ ,/ 目的/ 端口/ 相同/ 的/ OQ/ 队列/ 长度/ Lg1/ ,/ j/ 与/ Lg2/ ,/ j/ 最多差/ 1/ ./ 那么/ 含/ N/ 个/ OQ/ 队列/ 的/ 交换/ 模块/ ,/ 对/ 任意/ 时间段/ [/ tr/ ,/ tv/ ]/ 满足/ maxl/ =/ 0/ ,/ …/ ,/ K/ -/ 1Sl/ [/ tr/ ,/ tv/ ]/ -/ minl/ =/ 0/ ,/ …/ ,/ K/ -/ 1Sl/ [/ tr/ ,/ tv/ ]/ / N/ ./ 负载/ 均衡/ 度/ 可/ 计算/ 为/ E/ [/ tr/ ,/ tv/ ]/ =/ 当/ maxl/ =/ 0/ ,/ …/ ,/ K/ -/ 1Sl/ [/ tr/ ,/ tv/ ]/ / N/ 时/ ,/ 负载/ 均衡/ 度/ E/ [/ tr/ ,/ tv/ ]/ 趋近/ 于/ 1/ ,/ UFFS/ -/ k/ 调度/ 算法/ 可/ 获得/ 100/ %/ 负载/ 均衡/ 度/ ./ 3.5/ UFFS/ -/ 犽/ 算法/ 吞吐/ 率/ 分析/ 3.5/ 节/ 证明/ 了/ UFFS/ -/ k/ 算法/ 能够/ 获得/ 100/ %/ 的/ 吞吐/ 率/ ./ 引理/ 3/ 摘自/ 文献/ [/ 3/ ]/ ,/ 描述/ 了/ 工作/ 保持/ (/ work/ -/ conserving/ )/ 的/ 服务/ 特性/ ./ 引理/ 5/ ./ 考虑/ 一种/ 工作/ 保持/ (/ work/ -/ conserving/ )/ 的/ 服务/ ,/ 令/ A/ (/ t/ )/ 和/ B/ (/ t/ )/ 分别/ 表示/ 在/ 时间/ t/ 以前/ 到达/ 和/ 服务/ 的/ 信元/ 数目/ ./ 假设/ 服务/ 容量/ 是/ 每个/ 外部/ 时间槽/ 服务/ 一个/ 信元/ ,/ 那么/ 对于/ 所有/ 的/ 时间/ t/ / 0/ ,/ B/ (/ t/ )/ =/ min0/ / s/ / t/ [/ A/ (/ s/ )/ +/ t/ -/ s/ ]/ ./ 接下来/ ,/ 我们/ 证明/ UFFS/ -/ k/ 算法/ 能够/ 保证/ 100/ %/ 的/ 吞吐/ 率/ ./ 考虑/ 给定/ 的/ 输出/ 端口/ j/ ,/ 令/ Aj/ (/ t/ )/ ,/ Bj/ (/ t/ )/ ,/ Cj/ (/ t/ )/ 分别/ 表示/ 目的/ 端口/ 为/ j/ 的/ 到达/ 输入/ 端口/ 、/ 中间级/ 输入/ 端口/ 及/ 输出/ 端口/ j/ 的/ 信元/ 数目/ ./ 定理/ 3/ ./ UFFS/ -/ k/ 算法/ 和/ 理想/ 的/ 输出/ 排队/ 交换/ 结构/ 具有/ 相同/ 的/ 吞吐/ 率/ ,/ 与/ 输入/ 流量/ 到达/ 过程/ 无关/ ./ 证明/ ./ 首先/ ,/ 每个/ 输入/ 端口/ 任意/ 流/ 分支/ 至多/ 包含/ k/ (/ k/ -/ 1/ )/ 个/ 信元/ ,/ 此时/ ,/ 流/ 分支/ 中/ 没有/ 一个/ 单位/ 帧/ 可以/ 调度/ ,/ 当/ 存在/ 单位/ 帧/ 可以/ 调度/ 时/ ,/ 输入/ 端/ 是/ 工作/ 保持/ 的/ (/ 在/ k/ -/ 1/ 个/ 外部/ 时间槽/ 的/ 延迟/ 范围/ 内/ )/ ./ 由于/ 每个/ 输入/ 端/ 在/ 每个/ 外部/ 时间槽/ 最/ 多/ 到达/ 一个/ 信元/ ,/ 因此/ 当/ 输入/ 端/ 工作/ 保持/ 时/ ,/ 流/ 分支/ 最/ 多/ 包含/ k/ (/ k/ -/ 1/ )/ +/ k/ -/ 1/ =/ k2/ -/ 1/ 个/ 信元/ (/ 输入/ 端/ 开始/ 服务/ 流/ 分支/ 后/ )/ ,/ 自此/ 流/ 分支/ 中/ 的/ 信元/ 数目/ 不会/ 进一步/ 增加/ ./ 当/ 不/ 存在/ 单位/ 帧/ 、/ 输入/ 端/ 不再/ 工作/ 保持/ 时/ ,/ 流/ 分支/ 信元/ 数目/ 不会/ 超过/ k/ (/ k/ -/ 1/ )/ ./ 因此/ 对/ 任何/ 流/ 分支/ 在/ 任何时刻/ 最/ 多/ 包含/ k2/ -/ 1/ 个/ 信元/ (/ 不/ 包括/ 正在/ 服务/ 的/ 信元/ )/ ./ 那么/ N/ 个/ 输入/ 端口/ 最/ 多/ 包含/ Nk2/ 个/ 信元/ ,/ 特别/ 地/ ,/ 当/ 所有/ 到达/ 信元/ 目的/ 端口/ 相同/ 时/ ,/ 最多/ 有/ Nk2/ 个/ 信元/ 去往/ 输出/ 端口/ j/ ./ 因此/ ,/ 在/ 任意/ 时刻/ t/ / 0/ ,/ Bj/ (/ t/ )/ / Aj/ (/ t/ )/ -/ Nk2/ (/ 在/ 这里/ ,/ 假设/ 信元/ 传输/ 是/ 瞬时/ 的/ ./ 如果/ 报文/ 传输/ 延迟/ τ/ >/ 0/ ,/ 那么/ Bj/ (/ t/ )/ / Aj/ (/ t/ -/ τ/ )/ -/ Nk2/ ,/ 接下来/ 的/ 等式/ 都/ 照此/ 简化/ )/ ./ 令/ Bj/ 所含/ 信元/ 个数/ ./ 对/ 任意/ 流/ ,/ 当/ 单位/ 帧/ 还/ 没有/ 全部/ 到达/ 中间级/ 输入/ 端时/ ,/ 最多/ 有/ k/ -/ 1/ 个/ 信元/ 在/ 中间级/ OQ/ 队列/ ./ 由于/ UFFS/ -/ k/ 算法/ 对/ 流量/ 分布/ 矩阵/ 写/ 操作/ 的/ 互斥性/ ,/ 对于/ 给定/ 输出/ 端口/ j/ ,/ 至多/ 有/ N/ // k/ 个/ 输入/ 端口/ 正在/ 发送/ 且/ 未/ 发送/ 完毕/ 目的/ 端口/ 为/ j/ 的/ 单位/ 帧/ ,/ 则/ 有/ 只要/ 存在/ 单位/ 帧/ 完全/ 到达/ 中间级/ 输入/ 端口/ ,/ 则/ 交换/ 阶段/ 是/ 工作/ 保持/ 的/ ./ 因此/ ,/ 交换/ 阶段/ 至少/ 与/ 信元/ 到达/ 过程/ 服从/ Bjservingserver/ )/ 一样/ 多/ 的/ 信元/ ,/ 因此/ 由/ 引理/ 5/ 得到/ Cj/ (/ t/ )/ / min0/ / s/ / t/ [/ Bj/ / min0/ / s/ / t/ [/ Aj/ (/ s/ )/ +/ t/ -/ s/ -/ Nk2/ -/ N/ // k/ (/ k/ -/ 1/ )/ ]/ (/ 1/ )/ 我们/ 现在/ 比较/ 在/ 相同/ 的/ 到达/ 模式/ 下/ 负载/ 均衡/ 交换/ 结构/ 与/ OQ/ 交换/ 结构/ 的/ 性能/ ./ OQ/ 交换/ 结构/ 中/ 目的/ 端口/ 为/ j/ 的/ 信元/ 行为/ 可以/ 建模/ 为/ 到达/ 过程/ 为/ Aj/ (/ t/ )/ ,/ 服务/ 时间/ 间隔/ 为/ 常量/ 1/ 的/ 工作/ 保持/ 服务/ ./ 假设/ OQ/ (/ t/ )/ 为/ 这种/ 服务/ 的/ 服务/ 次数/ ,/ 那么/ 根据/ 引理/ 5/ ,/ 我/ Cj/ 们/ 得到/ 比较/ 式/ (/ 1/ )/ 与/ 式/ (/ 2/ )/ 得到/ Cj/ (/ t/ )/ / min0/ / s/ / t/ [/ Aj/ (/ s/ )/ +/ t/ -/ s/ ]/ -/ Nk2/ -/ N/ // k/ (/ k/ -/ 1/ )/ 因此/ ,/ UFFS/ -/ k/ 算法/ 服务/ 信元/ 的/ 数目/ 和/ OQ/ 交换/ 结构/ 服务/ 信元/ 的/ 数目/ 仅/ 相差/ 常量/ Nk2/ +/ N/ // k/ (/ k/ -/ 1/ )/ ./ 这/ 意味着/ UFFS/ -/ k/ 算法/ 总是/ 和/ OQ/ 交换/ 结构/ 具有/ 相同/ 的/ 吞吐/ 率/ ,/ 并/ 与/ 输入/ 流量/ 的/ 到达/ 过程/ 无关/ ./ 证毕/ ./ Page94UFFS/ -/ 犽/ 算法/ 性能/ 评测/ 目前/ 一般/ 采用/ 软件/ 模拟/ 的/ 方法/ 对/ 交换/ 结构/ 及其/ 调度/ 算法/ 进行/ 性能/ 评估/ ./ 我们/ 对/ Stanford/ 大学/ 开发/ 的/ SIM/ 模拟器/ ①/ ,/ 进行/ 了/ 修改/ 和/ 扩充/ ,/ 构建/ 了/ 一个/ 输入/ 端/ 采用/ VOQ/ 队列/ 模型/ ,/ 中间级/ 采用/ OQ/ 队列/ 模型/ 的/ 负载/ 均衡/ 交换/ 结构/ (/ load/ -/ balancedswitch/ )/ ./ 我们/ 在/ 贝努利/ 一致/ 流量/ 模型/ 和/ 突发/ 流量/ 模型/ 下/ ,/ 比较/ 了/ FOFF/ [/ 3/ ]/ 、/ UFS/ [/ 3/ ]/ 、/ UFFS/ -/ k/ 和/ 基本/ 的/ 负载/ 均衡/ 算法/ BLA/ [/ 2/ ]/ (/ BasicLoad/ -/ balancedAlgorithm/ )/ 的/ 延迟/ 性能/ ,/ 观察/ 了/ 聚合/ 粒度/ k/ =/ 8/ ,/ 4/ ,/ 2/ ,/ 1/ 时/ UFFS/ -/ k/ 算法/ 延迟/ 性能/ 的/ 变化/ ./ 4.1/ 模拟/ 环境/ SIM/ 模拟器/ 提供/ 多种/ 流量/ 模型/ ,/ 我们/ 采用/ 了/ 两种/ 具有/ 代表性/ 的/ 流量/ 模型/ :/ (/ 1/ )/ 贝努利/ 一致/ 流/ ./ 服从/ 贝努利/ 到达/ 过程/ ,/ 独立/ 同/ 分布/ ,/ 目的/ 端口/ 均匀分布/ 于/ 所有/ 的/ 输出/ 端口/ ;/ (/ 2/ )/ 突发/ 流/ ./ 突发/ 长度/ 为/ 10/ ,/ 在/ 忙/ -/ 闲/ 周期/ (/ busy/ -/ idleperiods/ )/ 突发/ 信元/ ,/ 目的/ 端口/ 以/ 连续/ 突发/ 或者/ 一个/ 信元接/ 一个/ 信元/ 的/ 方式/ 分布/ 于/ 所有/ 的/ 输出/ 端口/ ./ 由于/ Internet/ 流量/ 具有/ 突发/ 特性/ ,/ 突发/ 流量/ 模型/ 更/ 接近/ 真实/ 的/ 网络流量/ ./ 在/ 所有/ 的/ 模拟实验/ 中/ ,/ 模拟/ 时间/ 为/ 200000/ 个/ 外部/ 时间槽/ ;/ 实验/ 参数/ 为/ :/ 端口/ 数目/ N/ =/ 16/ ,/ 内部/ 链路/ 加速/ 比/ S/ =/ 1/ ./ 所有/ 队列/ 长度/ 为/ 无穷大/ ,/ 即/ 不/ 限制/ 队列/ 长度/ ,/ 不/ 丢弃/ 信元/ ./ 4.3/ 节在/ 贝努利/ 一致/ 流量/ 模型/ 和/ 突发/ 流量/ 模型/ 下/ ,/ 模拟/ 比较/ 了/ FOFF/ 、/ UFS/ 、/ UFFS/ -/ k/ 和/ BLA4/ 种/ 算法/ 的/ 延迟/ 性能/ ,/ 分析/ 了/ UFFS/ -/ k/ 算法/ 在/ 不同/ 的/ 聚合/ 粒度/ 下/ 的/ 延迟/ 特性/ ./ 4.2/ 算法/ 建模/ 我们/ 在/ 负载/ 均衡/ 交换/ 结构/ 中/ 实现/ 了/ FOFF/ 、/ UFS/ 、/ UFFS/ -/ k/ 和/ BLA4/ 种/ 调度/ 算法/ ./ 对于/ FOFF/ 算法/ ,/ 输入/ 线卡/ 采用/ VOQ/ 队列/ 缓冲/ 到达/ 信元/ ;/ 中间级/ 输入/ 线卡/ 采用/ OQ/ 队列/ 模型/ ;/ 每个/ 输出/ 线卡/ 维护/ N/ 个/ 深度/ 为/ N/ 个/ 信元/ 的/ 缓冲/ 队列/ ,/ 用于/ 重定序/ 乱序/ 报文/ ./ 在/ 输入/ 端/ ,/ 满帧/ 被/ 赋予/ 最高/ 优先级/ ,/ 只要/ 存在/ 满帧/ 则/ 调度/ 满帧/ ,/ 若/ 不/ 存在/ 满帧/ 则/ 以/ round/ -/ robin/ 的/ 方式/ 调度/ 其它/ 非空/ VOQ/ 队列/ ./ 为了/ 限定/ 负载/ 均衡/ 路由器/ 内乱/ 序信元/ 的/ 数量/ ,/ FOFF/ 算法/ 严格/ 按照/ round/ -/ robin/ 的/ 顺序/ 发送/ VOQ/ 队列/ 的/ 信元/ 到/ 中间级/ 输入/ 线卡/ ./ 因此/ ,/ 每/ N/ 个/ 外部/ 时间槽/ FOFF/ 只能/ 服务/ 一个/ VOQ/ 队列/ ,/ 当/ 被/ 服务/ VOQ/ 队列/ 的/ 信元/ 不能/ 占用/ 全部/ 的/ 内部/ 链路/ 时/ (/ 所含/ 信元/ 小于/ N/ 的/ 情况/ )/ ,/ 将/ 造成/ 内部/ 链路/ 带宽/ 的/ 浪费/ ./ FOFF/ 算法/ 在/ 输入/ 端/ 保证/ 了/ 每/ 条流/ 的/ 信元以/ round/ -/ robin/ 的/ 方式/ 分布/ 于/ 中间级/ 输入/ 线卡/ ./ 在/ 输出/ 端/ ,/ FOFF/ 维护/ N/ 个/ round/ -/ robin/ 指针/ 指示/ 每条流/ 的/ 下/ 一个/ 信元/ 所在/ 的/ 中间级/ 输入/ 线卡/ ,/ 来自/ 该/ 中间级/ 输入/ 线卡/ 的/ 信元/ 就是/ 下/ 一个/ 信元/ ./ 因此/ ,/ FOFF/ 算法/ 能够/ 在/ 没有/ 任/ 通信/ 开销/ 的/ 情况/ 下/ 实现/ 信元/ 的/ 按序/ 发送/ ,/ 但/ 输出/ 端/ O/ (/ N2/ )/ 的/ 重定序/ 缓冲区/ 开销/ 加大/ 了/ 信元/ 延迟/ ./ 建模/ UFS/ 算法/ 为/ 聚合/ 粒度/ 等于/ 端口/ 数目/ N/ 的/ UFFS/ -/ k/ 算法/ ,/ 在/ 这种/ 极端/ 情况/ 下/ 已经/ 不/ 存在/ 流/ 到/ 区域/ 的/ 映射/ 关系/ ./ 建模/ UFFS/ -/ k/ 算法/ 为/ :/ 输入/ 端/ 采用/ VOQ/ 队列/ 模型/ ,/ 按照/ 3.3/ 节所/ 描述/ 的/ 算法/ 建模/ UFFS/ -/ k/ 算法/ ,/ UFFS/ -/ k/ 算法/ 分布/ 在/ 每个/ 输入/ 端/ 独立/ 执行/ ;/ 中间级/ 输入/ 线卡/ 采用/ OQ/ 队列/ 模型/ ./ 在/ 没有/ 特殊/ 声明/ 的/ 情况/ 下/ ,/ 所有/ 队列/ 长度/ 均/ 为/ 无穷大/ ./ 对于/ 基本/ 的/ 负载/ 均衡/ 调度/ 算法/ BLA/ ,/ 我们/ 按照/ 文献/ [/ 2/ ]/ 所/ 执行/ 的/ 调度/ 算法/ 建模/ BLA/ 算法/ ./ 输入/ 端以/ 固定/ 轮转/ 的/ 方式/ 将/ 到达/ 信元/ 通过/ 第一级/ Mesh/ 网络/ 发送到/ 中间级/ 输入/ 线卡/ ./ 由于/ 连接/ 模式/ 的/ 周期性/ ,/ 信元/ 按照/ 其/ 到达/ 时间/ 均匀分布/ 在/ 中间级/ 输入/ 线卡/ ,/ 因此/ 到达/ 中间级/ 输入/ 线卡/ 的/ 流量/ 是/ 负载/ 均衡/ 的/ ./ 中间级/ 输入/ 线卡/ 采用/ VOQ/ 队列/ 模型/ ,/ 按照/ 信元/ 的/ 目的/ 端口/ 缓冲/ 信元/ ,/ 同样/ 以/ 固定/ 轮转/ 的/ 方式/ 将/ VOQ/ 队列/ 中/ 的/ 信元/ 通过/ 第二级/ Mesh/ 网络/ 发送到/ 输出/ 端口/ ./ 文献/ [/ 2/ ]/ 证明/ 了/ ,/ BLA/ 算法/ 能够/ 获得/ 100/ %/ 的/ 吞吐/ 率/ ,/ 在/ 重/ 负载/ 的/ 情况/ 下/ ,/ 信元/ 平均/ 延迟/ 接近/ OQ/ 交换/ 结构/ ./ BLA/ 算法/ 不能/ 保证/ 报文/ 的/ 顺序/ ,/ 存在/ 严重/ 的/ 报文/ 乱序/ 现象/ ./ 4.3/ 延迟/ 实验/ 我们/ 分别/ 在/ 贝努利/ 一致/ 流量/ 模型/ 和/ 突发/ 流量/ 模型/ 下/ 分析/ 比较/ 了/ FOFF/ 、/ UFS/ 、/ UFFS/ -/ k/ 和/ BLA4/ 种/ 算法/ 的/ 信元/ 平均/ 延迟/ ./ 图/ 4/ 显示/ 了/ 在/ 贝努利/ 一致/ 流量/ 模型/ 下/ UFS/ 算法/ 的/ 系统/ 平均/ 延迟/ 远远/ 大于/ 其它/ 算法/ ,/ 这/ 是因为/ UFS/ 需要/ 在/ 输入/ 端/ 聚合/ N/ 个/ 信元/ 才能/ 实施/ 一次/ 调度/ ./ 通过/ 不断/ 降低/ 聚合/ 粒度/ k/ ,/ UFFS/ -/ k/ 算法/ 的/ 延迟/ 性能/ 得到/ 了/ 显著/ 提升/ ./ 在/ 极端/ 情况/ 下/ ,/ 当/ 聚合/ 粒度/ 为/ 1/ 时/ ,/ UFFS/ -/ 1/ 算法/ 在/ 低/ 负载/ 情况/ 下/ 具有/ 与/ BLA/ 算法/ 相当/ 的/ 延迟/ 性能/ ,/ 但/ 在/ 高/ 负载/ 情况/ 下/ 变得/ 不/ 稳定/ ,/ 当/ 负载/ 大于/ 0.7/ 时/ ,/ UFFS/ -/ 1/ 算法/ 系统/ 平均/ 延迟/ 高于/ UFFS/ -/ 2/ ./ 这/ 可能/ 是因为/ 聚合/ 粒度/ 为/ 1/ 时/ ,/ UFFS/ -/ 1/ 算法/ 总是/ 将流/ 发送到/ 固定/ 的/ 中间级/ 输入/ 线卡/ ,/ 这种/ 每条流/ 专享/ 一条/ 链路/ 的/ 调度/ 方式/ 可能/ 会/ 造成/ 内部/ 链路/ 带宽/ 的/ 严重/ 浪费/ 更/ 不利于/ 负载/ 均衡/ ./ 对于/ FOFF/ 算法/ ,/ 正如/ 第/ 2/ 节所/ 指出/ ①/ http/ :/ // // klamath/ ./ stanford/ ./ edu/ // tools/ // SIM/ // Page10/ 的/ ,/ 内部/ 链路/ 带宽/ 浪费/ 在/ 某种程度/ 上/ 降低/ 了/ 系统/ 吞吐/ 率/ ,/ 此外/ 大部分/ 的/ 信元/ 延迟/ 发生/ 在/ 输出/ 端的/ 重定序/ 操作/ 上/ (/ 重定序/ 缓冲区/ 开销/ 为/ O/ (/ N2/ )/ )/ ./ 当/ 输入/ 负载/ 大于/ 0.2/ 时/ ,/ UFFS/ -/ 4/ 具有/ 比/ FOFF/ 更/ 低/ 的/ 信元/ 平均/ 延迟/ ;/ 而/ UFFS/ -/ 2/ 的/ 延迟/ 性能/ 明显/ 优于/ FOFF/ ./ BLA/ 算法/ 延迟/ 性能/ 略/ 优于/ UFFS/ -/ 2/ 算法/ ,/ 但/ BLA/ 算法/ 存在/ 严重/ 的/ 信元/ 乱序/ 问题/ ,/ 从而/ 损害/ TCP/ 协议/ 的/ 性能/ ./ 图/ 4FOFF/ 、/ UFS/ 、/ UFFS/ -/ k/ 及/ BLA/ 算法/ 平均/ 延迟/ 图/ 5/ 显示/ 了/ 在/ 突发/ 流量/ 模型/ 下/ 的/ 模拟/ 结果/ ./ 随着/ 聚合/ 粒度/ 的/ 不断/ 降低/ ,/ UFFS/ -/ k/ 算法/ 延迟/ 性能/ 获得/ 的/ 提升/ 越少/ ./ 在/ 极端/ 情况/ 下/ ,/ 当/ 聚合/ 粒度/ k/ =/ 1/ 时/ ,/ UFFS/ -/ 1/ 系统/ 平均/ 延迟/ 大于/ UFFS/ -/ 2/ ;/ UFFS/ -/ 1/ 算法/ 在/ 突发/ 流量/ 模型/ 下/ 变得/ 更/ 不/ 稳定/ ;/ 当/ 输入/ 负载/ 达到/ 0.99/ 时/ ,/ UFFS/ -/ 1/ 算法/ 的/ 平均/ 延迟/ 最大/ ,/ 甚至/ 超过/ 了/ UFS/ 算法/ ./ UFFS/ -/ 1/ 算法/ 发送/ 每条/ 流到/ 固定/ 的/ 中间级/ 输入/ 线卡/ ,/ 在/ 突发/ 情况/ 下/ ,/ UFFS/ -/ 1/ 算法/ 为/ 实图/ 5FOFF/ 、/ UFS/ 、/ UFFS/ -/ k/ 及/ BLA/ 算法/ 平均/ 延迟/ (/ 突发/ 流量/ 模型/ )/ 现/ 负载/ 均衡/ 必将/ 导致/ 信元/ 被/ 延迟/ 调度/ ./ 当/ 输入/ 负载/ 大于/ 0.3/ 时/ ,/ UFFS/ -/ 4/ 算法/ 延迟/ 性能/ 优于/ FOFF/ 算法/ ./ UFFS/ -/ 2/ 算法/ 在/ 所有/ 能够/ 保证/ 报文/ 顺序/ 的/ 算法/ 中/ 具有/ 最优/ 延迟/ 性能/ ,/ 并/ 与/ 不/ 具备/ 报/ 文保/ 序/ 特性/ 的/ BLA/ 算法/ 性能/ 相当/ ./ 5/ 结论/ 采用/ 固定/ 连接/ 模式/ 的/ 负载/ 均衡/ 交换/ 结构/ 成为/ 提高/ 路由器/ 性能/ 、/ 规模/ 、/ 可扩展性/ 的/ 有效途径/ ./ 负载/ 均衡/ 交换/ 结构/ 存在/ 严重/ 的/ 报文/ 乱序/ 现象/ ,/ 乱序/ 报文/ 会/ 降低/ TCP/ 连接/ 吞吐/ 率/ 增加/ 报文/ 延迟/ ,/ 在/ 路由器/ 中/ 保证/ 报文/ 的/ 顺序/ 是/ 极其/ 必要/ 的/ ./ 另一方面/ ,/ 为了/ 保证/ 报文/ 的/ 顺序/ ,/ 路由器/ 需要/ 完成/ 大量/ 额外/ 的/ 工作/ ,/ 这会/ 影响/ 路由器/ 的/ 性能/ ./ 本文/ 提出/ 一种/ 基于/ 流/ 映射/ 的/ 负载/ 调度/ 算法/ UFFS/ -/ k/ ,/ 采用/ 双循环/ 方式/ 构建/ 流/ 到/ 区域/ 的/ 映射/ ,/ 以/ 细粒度/ 的/ 方式/ 将/ 同/ 一条/ 流/ 的/ k/ 个/ 信元/ 分派/ 到/ 固定/ 的/ 映射/ 区域/ ,/ 通过/ 理论/ 证明/ ,/ 该/ 调度/ 策略/ 可/ 获得/ 100/ %/ 吞吐/ 率/ 并/ 能够/ 保证/ 报文/ 的/ 顺序/ ./ 本文/ 通过/ 模拟/ 验证/ UFFS/ -/ k/ 算法/ 在/ 不同/ 聚合/ 粒度/ k/ 下/ 的/ 延迟/ 性能/ ,/ 并/ 与/ 目前/ 主流/ 的/ 负载/ 均衡/ 调度/ 算法/ 进行/ 比较/ ./ 模拟/ 结果显示/ ,/ 当/ 聚合/ 粒度/ k/ =/ 2/ 时/ ,/ UFFS/ -/ 2/ 算法/ 在/ 所有/ 能够/ 保证/ 报文/ 顺序/ 的/ 调度/ 算法/ 中/ 具有/ 最优/ 延迟/ 性能/ ;/ 并/ 在/ 突发/ 流量/ 模型/ 下/ ,/ 表现/ 出/ 与/ 不/ 具备/ 报/ 文保/ 序/ 特性/ 的/ BLA/ 算法/ 相当/ 的/ 性能/ ;/ 因此/ UFFS/ -/ 2/ 算法/ 能够/ 在/ 保证/ 报文/ 顺序/ 的/ 同时/ 提供/ 延迟/ 和/ 吞吐/ 率/ 保证/ ./ 

