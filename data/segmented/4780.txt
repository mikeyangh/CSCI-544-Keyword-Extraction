Page1/ 云/ 环境/ 中/ 跨/ 虚拟机/ 的/ Cache/ 侧/ 信道/ 攻击/ 技术/ 研究/ 梁鑫桂/ 小林/ 戴/ 慧/ 臖/ 张/ 晨/ (/ 西安交通大学/ 电子/ 与/ 信息/ 工程学院/ 西安/ 710049/ )/ (/ 陕西省/ 计算机网络/ 重点/ 实验室/ (/ 西安交通大学/ )/ 西安/ 710049/ )/ 摘要/ 在/ 云/ 计算环境/ 中/ ,/ 不同/ 租户/ 的/ 虚拟机/ 可能/ 运行/ 于/ 同一/ 台/ 物理/ 主机/ 之上/ ,/ 即/ 虚拟机/ 同驻/ ./ 同驻/ 的/ 虚拟机/ 之间/ 共享/ 物理/ 主机/ 的/ 计算资源/ ,/ 并/ 依赖于/ 虚拟机/ 监控器/ 进行/ 系统资源/ 的/ 分配/ 与/ 调度/ ./ 这种/ 跨域/ 共享/ 虽然/ 提高/ 了/ 资源/ 使用/ 效率/ ,/ 但/ 也/ 给/ 用户/ 的/ 隐私/ 安全/ 造成/ 严重威胁/ ./ 恶意/ 租户/ 通过/ 探测/ 共享资源/ 的/ 状态/ 信息/ ,/ 建立/ 泄漏/ 模型/ ,/ 便/ 可/ 绕过/ 虚拟化/ 提供/ 的/ 隔离/ 性/ ,/ 窃取/ 其它/ 同驻/ 虚拟机/ 的/ 隐私/ 信息/ ,/ 这种/ 攻击/ 模式/ 通常/ 称为/ 跨/ 虚拟机/ 的/ 侧/ 信道/ 攻击/ ./ 文中/ 深入分析/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 机理/ 和/ 实现/ 方式/ ,/ 对/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 技术/ 的/ 研究/ 现状/ 与/ 进展/ 进行/ 总结/ ./ 首先/ ,/ 分析/ 总结/ 了/ Cache/ 侧/ 信道/ 信息/ 泄露/ 的/ 本质/ 原因/ ;/ 其次/ ,/ 回顾/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 起源/ 与/ 研究进展/ ,/ 讨论/ 了/ 其/ 与/ 传统/ Cache/ 侧/ 信道/ 攻击/ 的/ 关系/ ,/ 并/ 提出/ 跨/ 虚拟机/ 访问/ 驱动/ Cache/ 侧/ 信道/ 攻击/ 的/ 通用/ 模型/ ;/ 然后/ ,/ 分类/ 归纳/ 并/ 重点/ 阐述/ 了/ 虚拟机/ 同驻/ 相关/ 问题/ 以及/ 当前/ 用于/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 信息/ 探测/ 的/ 主流/ 方法/ ;/ 最后/ ,/ 分析/ 了/ 目前/ 研究/ 中/ 存在/ 的/ 问题/ ,/ 并/ 展望/ 了/ 未来/ 的/ 研究/ 方向/ ./ 关键词/ 云/ 计算/ ;/ 缓存/ ;/ 侧/ 信道/ 攻击/ ;/ 虚拟机/ 同驻/ ;/ 虚拟化/ 1/ 引言/ 云/ 计算/ [/ 1/ -/ 2/ ]/ 作为/ 一种/ 新型/ 的/ 网络/ 计算/ 模式/ ,/ 通过/ 网络/ 以/ 按/ 需/ 、/ 易/ 扩展/ 的/ 方式/ 为/ 用户/ 提供/ 各种/ 虚拟/ 的/ IT/ 资源/ 和/ 应用服务/ ,/ 支持/ 用户/ 在/ 任意/ 位置/ 、/ 使用/ 多种/ 终端/ 进行/ 访问/ ./ 云/ 计算/ 不仅/ 大大/ 减轻/ 了/ 用户/ 的/ 计算/ 和/ 存储/ 负担/ ,/ 降低/ 了/ 用户/ 对/ 各种/ IT/ 基础设施/ 的/ 购置/ 和/ 管理/ 维护/ 成本/ ,/ 也/ 使得/ 企业/ 用户/ 可以/ 根据/ 需求/ 的/ 变化/ 随时/ 进行/ 应用/ 的/ 快速/ 重新部署/ 和/ 动态/ 扩展/ ./ 然而/ ,/ 在/ 已经/ 实现/ 的/ 云/ 计算/ 服务/ 中/ ,/ 安全/ 和/ 隐私/ 问题/ [/ 3/ -/ 6/ ]/ 一直/ 令人担忧/ ,/ 并/ 已经/ 成为/ 阻碍/ 云/ 计算/ 推广/ 和/ 普及/ 的/ 主要/ 因素/ 之一/ ./ 基于/ 虚拟化/ 环境/ 提供/ 的/ 逻辑/ 隔离/ ,/ 采用/ 访问控制/ [/ 7/ ]/ 、/ 入侵/ 检测/ [/ 8/ -/ 9/ ]/ 等/ 方法/ 可以/ 增强/ 云/ 计算环境/ 的/ 安全性/ ;/ 但是/ ,/ 隐私/ 泄露/ 问题/ 依然/ 存在/ ,/ 因为/ 底层/ 共享/ 的/ 硬件资源/ 容易/ 引发/ 侧/ 信道/ 攻击/ (/ Side/ -/ Channel/ -/ Attacks/ ,/ SCA/ )/ [/ 10/ ]/ 的/ 威胁/ ./ 侧/ 信道/ 攻击/ 是/ 一个/ 经典/ 的/ 研究课题/ ,/ 由/ Kocher/ 等/ 人/ [/ 11/ ]/ 于/ 1996/ 年/ 首先/ 提出/ ./ 侧/ 信道/ 攻击/ 是/ 针对/ 密码/ 算法/ 实现/ 的/ 一种/ 攻击方式/ ,/ 当/ 密码/ 算法/ 具体/ 执行/ 时/ ,/ 执行/ 过程/ 中/ 可能/ 泄露/ 与/ 内部/ 运算/ 紧密/ 相关/ 的/ 多种/ 物理/ 状态/ 信息/ ,/ 比如/ 声光/ 信息/ 、/ 功耗/ 、/ 电磁辐射/ 以及/ 运行/ 时间/ 等/ ./ 这些/ 通过/ 非/ 直接/ 传输/ 途径/ 泄露/ 出来/ 的/ 物理/ 状态/ 信息/ 被/ 研究/ 人员/ 称为/ 侧/ 信道/ 信息/ (/ Side/ -/ ChannelInformation/ ,/ SCI/ )/ ./ 攻击者/ 通过/ 测量/ 采集/ 密码/ 算法/ 执行/ 期间/ 产生/ 的/ 侧/ 信道/ 信息/ ,/ 再/ 结合/ 密码/ 算法/ 的/ 具体/ 实现/ ,/ 就/ 可以/ 进行/ 密钥/ 的/ 分析/ 与/ 破解/ ./ 而/ 这种/ 利用/ 侧/ 信道/ 信息/ 进行/ 密码/ 分析/ 的/ 攻击/ 方法/ 则/ 被/ 称为/ 侧/ 信道/ 攻击/ ./ 相比/ 于/ 传统/ Cache/ 侧/ 信道/ 攻击/ ①/ ,/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 相关/ 研究/ 起步/ 较晚/ ,/ 直到/ 2009/ 年/ 由/ Ristenpart/ 等/ 人/ [/ 10/ ]/ 首先/ 提出/ ./ 云/ 计算环境/ 中/ ,/ 云/ 服务供应商/ 为了/ 有效/ 利用/ 物理/ 资源/ ,/ 通常/ 将/ 多个/ 不同/ 租户/ 的/ 虚拟机/ 分配/ 到/ 同一/ 台/ 物理/ 机器/ 上/ 运行/ ,/ 称为/ 虚拟机/ 同驻/ ./ 虚拟机/ 同驻/ 为/ 跨/ 虚拟机/ 实施/ 攻击/ 提供/ 了/ 便利/ 条件/ ,/ 而同/ 驻/ 虚拟机/ 之间/ 对于/ CPU/ 、/ Cache/ 及/ 内存/ 等/ 底层/ 物理/ 资源/ 的/ 共享/ 和/ 争用/ 则/ 天然/ 地为/ Cache/ 侧/ 信道/ 信息/ 泄露/ 提供/ 了/ 泄露/ 通道/ ./ 因此/ ,/ 恶意/ 租户/ 可以/ 方便/ 地/ 利用/ 底层/ 共享资源/ 构建/ 侧/ 信道/ ,/ 绕过/ 虚拟化/ 环境/ 提供/ 的/ 逻辑/ 隔离/ ,/ 隐秘/ 地/ 窃取/ 其它/ 同驻/ 虚拟机/ 的/ 隐私/ 信息/ [/ 12/ ]/ ./ 现有/ 的/ 云/ 安全/ 防护/ 机制/ 很难/ 发现/ 和/ 应对/ 这种/ 非/ 入侵/ 式/ 的/ 攻击/ ,/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 已/ 成为/ 云/ 计算环境/ 中/ 威胁/ 用户/ 隐私/ 安全/ 的/ 重要/ 挑战/ ,/ 并/ 得到/ 了/ 国内外/ 研究/ 人员/ 的/ 普遍/ 关注/ [/ 10/ ,/ 13/ -/ 14/ ]/ ./ 工业界/ 同样/ 关注/ 跨/ 虚拟机/ 侧/ 信道/ 攻击/ 相关/ 研究/ ,/ 尤其/ 是/ 针对/ 跨/ 虚拟机/ 侧/ 信道/ 攻击/ 的/ 有效/ 防御/ 方法/ ./ 2010/ 年/ ,/ Intel/ 公司/ 发布/ 了/ 第/ 1/ 款/ 支持/ AES/ -/ NI/ 指令集/ 的/ 处理器/ ②/ ,/ 用于/ 防御/ 针对/ AES/ 的/ Cache/ 侧/ 信道/ 攻击/ ./ AES/ -/ NI/ 指令集/ 在/ 处理器/ 芯片/ 的/ 定制/ 硬件/ 上/ 执行/ AES/ 加密/ // 解密/ 操作/ ,/ 由于/ 不/ 需要/ 在/ 内存/ 中/ 建立/ 查找/ 表/ ,/ 其/ 指令/ 在/ 运行/ 时/ 都/ 不会/ 访问/ 内存/ ,/ 因此/ ,/ 可/ 有效/ 防御/ 针对/ AES/ 的/ Cache/ 侧/ 信道/ 攻击/ ./ 随后/ ,/ AMD/ 公司/ 发布/ 的/ Bulldozer/ 处理器/ 中/ 加入/ 了/ 对/ AES/ -/ NI/ 的/ 硬件/ 支持/ ③/ ,/ Intel/ 的/ CryptographyAPI/ 以及/ 密码/ 库/ OpenSSL1/ ./ 0.1/ ④/ 和/ NSS3/ ./ 12.2/ ⑤/ 等/ 也/ 增加/ 了/ 对/ AES/ -/ NI/ 指令集/ 的/ 支持/ ./ 此外/ ,/ 公有/ 云/ 平台/ AmazonEC2/ 提供/ 的/ VirtualPrivateCloud/ (/ VPC/ )/ ⑥/ 服务/ 允许/ 租户/ 选择/ “/ 专用/ 硬件/ 模式/ ”/ 创建/ 虚拟机/ 实例/ ⑦/ ,/ 并/ 承诺/ 租户/ 可以/ 独占/ 使用/ 某个/ 物理/ 平/ ①/ ②/ intel/ ./ com/ // content/ // dam/ // doc/ // white/ -/ paper/ // enterprise/ -/ security/ -/ ③/ ④/ ⑤/ ⑥/ ⑦/ Page3/ 台上/ 的/ 硬件资源/ ./ 虽然/ 租户/ 需要/ 为此/ 额外/ 付费/ ,/ 但/ 这/ 极大/ 地/ 加强/ 了/ 租户/ 之间/ 的/ 物理/ 隔离/ 性/ ,/ 基本/ 杜绝/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 可能性/ ./ SecludIT/ 公司/ 的/ 云/ 基础设施/ 自动检测/ 软件/ ElasticDetector/ 则/ 宣称/ 可以/ 检测/ 发现/ 云/ 环境/ 中/ 访问/ 驱动/ 的/ 侧/ 信道/ 攻击/ ①/ ./ 目前/ ,/ 国内/ 对/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 关注/ 和/ 研究/ 相对/ 较/ 少/ ,/ 且/ 尚未/ 有/ 详细/ 全面/ 介绍/ 其/ 攻击/ 机理/ 与/ 研究成果/ 的/ 综述/ 论文/ ./ 为/ 深入/ 理解/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 机理/ 和/ 实现/ 方式/ ,/ 总体/ 把握/ 其/ 研究/ 趋势/ ,/ 并/ 促进/ 国内/ 在/ 该/ 方向/ 上/ 的/ 研究/ ,/ 本文/ 对云/ 计算环境/ 中/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 相关/ 研究/ 工作/ 进行/ 了/ 分析/ 和/ 总结/ ./ 本文/ 第/ 2/ 节/ 讨论/ 共享/ Cache/ 带来/ 的/ 信息/ 泄露/ 问题/ ;/ 第/ 3/ 节对/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 进行/ 概述/ ;/ 第/ 4/ 节/ 阐述/ 虚拟机/ 同驻/ 的/ 相关/ 问题/ ;/ 第/ 5/ 节对/ 主流/ 的/ Cache/ 侧/ 信道/ 信息/ 探测/ 方法/ 进行/ 介绍/ ;/ 第/ 6/ 节/ 讨论/ 现有/ 研究/ 中/ 存在/ 的/ 问题/ 并/ 展望未来/ 可能/ 的/ 研究/ 方向/ ;/ 第/ 7/ 节对/ 全文/ 进行/ 总结/ ./ 2Cache/ 侧/ 信道/ 信息/ 泄露/ 分析/ Cache/ 是/ 攻击者/ 构建/ 侧/ 信道/ 时/ 最/ 常用/ 的/ 一类/ 共享资源/ ,/ 因为/ :/ (/ 1/ )/ CPUCache/ 是/ 最/ 常用/ 的/ 共享资源/ ,/ 只要/ 程序运行/ ,/ 就/ 离不开/ CPU/ ,/ 也/ 就/ 离不开/ CPUCache/ ;/ (/ 2/ )/ Cache/ 在/ 系统/ 中/ 位于/ 较/ 低/ 的/ 层级/ ,/ 且/ 缺乏/ 有效/ 的/ 访问控制/ 机制/ ,/ 利用/ 其/ 构建/ 侧/ 信道/ 可以/ 绕过/ 许多/ 高层/ 的/ 隔离/ 机制/ ,/ 比如/ 虚拟化/ 环境/ 提供/ 的/ 逻辑/ 隔离/ 等/ ;/ (/ 3/ )/ Cache/ 拥有/ 一个/ 系统/ 上/ 数据/ 访问/ 和/ 计算/ 操作/ 最/ 细粒度/ 且/ 详细/ 的/ 状态/ 信息/ ,/ 可以/ 为/ 攻击者/ 提供/ 丰富/ 的/ 信息/ ;/ (/ 4/ )/ 不同/ 的/ Cache/ 行为/ (/ 命中/ 或/ 失效/ )/ 具有/ 不同/ 的/ 时间/ 特征/ ,/ 可以/ 通过/ 采集/ Cache/ 时间/ 特征/ 得到/ Cache/ 侧/ 信道/ 信息/ ,/ 而/ Cache/ 时间/ 特征/ 的/ 采集/ 方法/ 比较简单/ ;/ (/ 5/ )/ Cache/ 的/ 操作/ 和/ 刷新/ 频率/ 较/ 高/ ,/ 可以/ 提供/ 细粒度/ 的/ 观察/ 结果/ ./ 分析/ 探讨/ 共享/ Cache/ 带来/ 的/ 信息/ 泄露/ 问题/ ,/ 对于/ 深入/ 理解/ Cache/ 侧/ 信道/ 攻击/ 的/ 机理/ 与/ 实现/ 方式/ 来说/ 十分/ 重要/ ./ 因此/ ,/ 本节/ 将/ 对/ Cache/ 侧/ 信道/ 信息/ 泄露/ 问题/ 进行/ 详细/ 地/ 分析/ 讨论/ ,/ 其中/ ,/ 2.1/ 节/ 分析/ Cache/ 可能/ 泄露/ 哪些/ 信息/ ;/ 2.2/ 节/ 讨论/ Cache/ 泄露/ 的/ 侧/ 信道/ 信息/ 可以/ 用于/ 密钥/ 分析/ 的/ 原因/ ;/ 2.3/ 节/ 讨论/ Cache/ 侧/ 信道/ 信息/ 为什么/ 会/ 被/ 泄露/ ;/ 2.4/ 节/ 讨论/ Cache/ 侧/ 信道/ 信息/ 可能/ 通过/ 哪些/ 方式/ 泄露/ ./ 2.1/ Cache/ 侧/ 信道/ 信息/ Cache/ 侧/ 信道/ 信息/ 是/ 指/ 系统/ 中/ 由/ Cache/ 行为/ 产生/ 的/ 物理/ 状态/ 信息/ ,/ 包括/ 访问/ 时间/ 、/ 功率/ 、/ 电磁辐射/ 等/ ./ 通常/ ,/ CPU/ 访问/ 内存/ 中/ 的/ 数据/ 或/ 指令/ 时/ ,/ 根据/ 涉及/ 到/ 的/ 目标/ 数据/ 或/ 指令/ 当前/ 是否/ 位于/ Cache/ 中/ ,/ 将/ 导致/ 不同/ 的/ Cache/ 行为/ ,/ 包括/ Cache/ 命中/ 和/ Cache/ 失效/ ./ 而/ 不同/ Cache/ 行为/ 产生/ 的/ Cache/ 侧/ 信道/ 信息/ 是/ 可/ 区分/ 的/ ,/ 例如/ ,/ 相比/ Cache/ 命中/ ,/ Cache/ 失效/ 会/ 产生/ 对/ 更/ 高/ 一级/ Cache/ 或/ 内存/ 的/ 访问/ ,/ 从而/ 导致/ 更长/ 的/ 访问/ 时间/ 或者/ 产生/ 更/ 多/ 的/ 功耗/ 等/ ./ 因此/ ,/ 如果/ 能够/ 观察/ 或/ 测量/ 到/ 算法/ 执行/ 期间/ 产生/ 的/ Cache/ 侧/ 信道/ 信息/ ,/ 攻击者/ 就/ 可以/ 推断/ 对应/ 的/ Cache/ 行为/ ,/ 并/ 进一步/ 得到/ 内存/ 访问/ 的/ 一些/ 关键/ 信息/ ,/ 包括/ :/ (/ 1/ )/ 内存/ 访问/ 的/ 部分/ 地址/ 信息/ Cache/ 是/ 物理/ 标记/ 的/ ,/ 数据/ 在/ Cache/ 中/ 的/ 位置/ 由/ 其/ 物理/ 内存地址/ 决定/ ./ 因此/ ,/ Cache/ 可能/ 泄露/ 内存/ 访问/ 的/ 部分/ 地址/ 信息/ ./ 例如/ ,/ 目标程序/ 执行/ 期间/ ,/ 攻击者/ 根据/ 访问/ 指定/ 的/ Cache/ 组/ 产生/ 的/ 侧/ 信道/ 信息/ ,/ 可以/ 推断/ 目标程序/ 是否/ 使用/ 了/ 该/ Cache/ 组/ ;/ 如果/ 使用/ 了/ ,/ 再/ 根据/ Cache/ 与/ 内存地址/ 之间/ 的/ 映射/ 关系/ ,/ 就/ 可以/ 得到/ 目标程序/ 执行/ 期间/ 内存/ 访问/ 的/ 部分/ 地址/ 信息/ ./ (/ 2/ )/ 历史/ 内存/ 访问/ 的/ 数据/ 信息/ 或/ 指令/ 信息/ CPU/ 访问/ 指定/ 的/ 数据/ 或/ 指令/ 时/ ,/ 根据/ 其/ 当前/ 是否/ 被/ 缓存/ 于/ Cache/ 中/ ,/ 将/ 产生/ 不同/ 的/ 侧/ 信道/ 信息/ ,/ 具体/ 地/ ,/ 当/ 访问/ 一个/ 数据/ 块/ 或/ 指令/ 块/ 时/ ,/ 如果/ 其/ 已经/ 被/ 缓存/ 于/ Cache/ 中/ ,/ 将/ 发生/ Cache/ 命中/ ;/ 那么/ ,/ 相对/ Cache/ 失效/ 来说/ ,/ 将/ 产生/ 较/ 短/ 的/ 访问/ 时间/ ./ 因此/ ,/ 一个/ 数据/ 块/ 或/ 指令/ 块/ 的/ 访问/ 时间/ 将/ 泄露/ 其/ 是否/ 已/ 被/ 缓存/ 于/ Cache/ 中/ 这/ 一/ 信息/ ;/ 进一步/ 地/ ,/ 这/ 将/ 泄露/ 历史/ 内存/ 访问/ 的/ 数据/ 信息/ 或/ 指令/ 信息/ ./ 例如/ ,/ 目标程序/ 执行/ 期间/ ,/ 攻击者/ 访问/ 指定/ 的/ 数据/ 块/ 或/ 指令/ 块/ ,/ 根据/ 访问/ 时间/ 就/ 可以/ 判断/ 它们/ 是否/ 已/ 被/ 缓存/ ,/ 进一步/ 地/ 可以/ 推断/ 目标程序/ 执行/ 期间/ 是否/ 访问/ 过/ 这些/ 数据/ 或/ 指令/ ./ 综上/ ,/ 利用/ Cache/ 侧/ 信道/ 信息/ 可以/ 推测/ 得到/ 一些/ 程序执行/ 期间/ 的/ 内存/ 访问信息/ ,/ 包括/ 访问/ 了/ 哪些/ 内存/ 位置/ 的/ 数据/ ,/ 使用/ 了/ 哪些/ 内存/ 页面/ ,/ 或者/ 执行/ 了/ 哪些/ 指令/ 序列/ 等/ ./ 2.2/ Cache/ 侧/ 信道/ 信息/ 与/ 密钥/ 之间/ 的/ 相关性/ 算法/ 实现/ 中/ 通常/ 存在/ 一些/ 条件/ 语句/ 、/ 分支/ 语句/ 等/ ,/ 导致/ 算法/ 执行/ 具有/ 数据/ 依赖/ 特性/ ,/ 即/ 相同/ 算法/ 在/ 输入/ 参数/ 不/ 同时/ ,/ 可能/ 具有/ 不同/ 的/ 执行/ 特征/ ./ 因此/ ,/ 攻击者/ 可以/ 利用/ 算法/ 的/ 执行/ 特征/ 推测/ 输入/ 参数/ 的/ 取值/ ./ ①/ Howtodetectside/ -/ channelattacksincloudinfrastructures/ ./ Page4/ 如图/ 1/ 所示/ ./ 其中/ ,/ 图/ 1/ (/ a/ )/ 为/ 输入/ 依赖/ 的/ 指令/ 执行/ ,/ 如果/ A/ 和/ B/ 的/ 运行/ 时间/ 存在/ 可/ 观察/ 的/ 差异/ ,/ 攻击者/ 就/ 可以/ 根据/ 采集/ 到/ 的/ 时间/ 信息/ 判断/ 执行/ 了/ 哪/ 一/ 分支/ ,/ 进而/ 确定/ x/ 的/ 取值/ ;/ 图/ 1/ (/ b/ )/ 所示/ 为/ 输入/ 依赖/ 的/ 数据/ 访问/ ,/ 如果/ 攻击者/ 能够/ 确认/ 用户/ 访问/ 了/ m/ 还是/ n/ ,/ 就/ 可以/ 确定/ y/ 的/ 取值/ ;/ 图/ 1/ (/ c/ )/ 所示/ 为/ 输入/ 依赖/ 的/ 执行/ 时间/ ,/ 由于/ 循环/ 次数/ 由/ 输入/ 参数/ 决定/ ,/ 而/ 循环/ 次数/ 又/ 直接/ 影响/ 算法/ 的/ 执行/ 时间/ ,/ 因此/ ,/ 算法/ 执行/ 时间/ 将/ 泄露/ 输入/ 参数/ z/ 的/ 取值/ 信息/ ./ 密码/ 算法/ 的/ 执行/ 通常/ 具有/ 密钥/ 依赖/ 特性/ ,/ 主要/ 包括/ 密钥/ 依赖/ 的/ 数据/ 访问/ 模式/ 和/ 密钥/ 依赖/ 的/ 指令/ 执行/ 序列/ 两种/ ./ 因此/ ,/ 攻击者/ 可以/ 利用/ 密码/ 算法/ 执行/ 中/ 产生/ 的/ 侧/ 信道/ 信息/ 推断/ 其/ 执行/ 特征/ ,/ 再/ 根据/ 执行/ 特征/ 以及/ 具体/ 的/ 依赖/ 关系/ 来/ 反向/ 推测/ 密码/ 算法/ 使用/ 的/ 密钥/ ./ 例如/ :/ 现代/ 分组/ 密码/ 算法/ 在/ 实现/ 中/ 通常/ 使用/ 查找/ 表来/ 提高/ 性能/ ,/ 且/ 查表/ 索引/ 通常/ 是/ 密钥/ 相关/ 的/ ,/ 因此/ ,/ 分组/ 密码/ 算法/ 的/ 执行/ 通常/ 具有/ 密钥/ 依赖/ 的/ 数据/ 访问/ 模式/ ./ 如果/ 攻击者/ 能够/ 获取/ 密码/ 算法/ 查表/ 访问/ 的/ Cache/ 组/ 地址/ 集合/ ,/ 并/ 将/ 其/ 转换/ 为/ 查表/ 索引/ ,/ 再/ 结合/ 明文/ 或/ 密文/ 就/ 可以/ 进行/ 密钥/ 分析/ [/ 15/ ]/ ,/ 推断出/ 密码/ 算法/ 使用/ 的/ 部分/ 或/ 全部/ 密钥/ ./ 现代/ 公钥/ 密码/ 算法/ 在/ 加密/ // 解密/ 过程/ 中所要/ 执行/ 的/ 指令/ 序列/ ,/ 由于/ 密钥/ 各/ 二进制位/ 取值/ 不同/ 一般/ 具有/ 很大/ 区别/ ,/ 因此/ ,/ 公钥/ 密码/ 算法/ 的/ 执行/ 通常/ 具有/ 密钥/ 依赖/ 的/ 指令/ 执行/ 序列/ ./ 比如/ ,/ 模幂/ 运算/ 是/ RSA/ 加解密/ 的/ 核心/ 算法/ ,/ 其中/ 一种/ 简单/ 的/ 实现/ 方式/ 为/ 平方/ -/ 乘/ 算法/ ,/ 即将/ 模幂/ 运算/ 分解/ 为/ 一系列/ 平方/ 、/ 乘法/ 以及/ 取模/ 运算/ ./ 如图/ 2/ 所示/ ,/ 采用/ 平方/ -/ 乘/ 算法/ ,/ 当/ 指数/ e/ 的/ 二进制/ 表示/ 中/ 的/ 某/ 一位/ 为/ 1/ 时/ 将/ 比/ 为/ 0/ 时多/ 执行/ 两步/ 运算/ [/ 13/ ]/ ./ 那么/ ,/ 如果/ 攻击者/ 能够/ 确定/ 算法/ 运行/ 期间/ 执行/ 的/ 指令/ 序列/ ,/ 就/ 可以/ 推测/ 指数/ e/ 的/ 取值/ ,/ 并/ 进一步/ 破解/ 密钥/ ./ 2.3/ Cache/ 侧/ 信道/ 信息/ 泄露/ 来源/ 在/ 云/ 计算环境/ 中/ ,/ 被/ 分配/ 到/ 同一个/ 物理/ CPU/ 上/ 运行/ 的/ 多个/ 虚拟机/ 之间/ 共享/ 硬件/ Cache/ ,/ 虽然/ Cache/ 中/ 的/ 数据/ 是/ 受/ 存储器/ 保护/ 的/ ,/ 攻击者/ 无法/ 直接/ 获取/ ./ 但是/ ,/ 这些/ 虚拟机/ 在/ Cache/ 中/ 的/ 数据/ 可能/ 被/ 映射/ 到/ 同一个/ 或/ 多个/ Cache/ 组/ 甚至/ Cache/ 行中/ ,/ 这为/ 攻击者/ 提供/ 了/ 一个/ 观察/ 被/ 攻击/ 虚拟机/ Cache/ 行为/ 的/ 侧/ 信道/ :/ 攻击者/ 访问/ 其/ 私有/ 数据/ 或/ 执行/ 私有/ 指令/ 时/ 产生/ 的/ 侧/ 信道/ 信息/ ,/ 可以/ 用来/ 推测/ 其它/ 虚拟机/ 的/ Cache/ 行为/ ./ 目前/ ,/ 由于/ 共享/ Cache/ 产生/ 的/ 信息/ 泄露/ 可以/ 分为/ 两类/ :/ Cache/ 争用/ 产生/ 的/ 信息/ 泄露/ 和/ 数据/ 重用/ 产生/ 的/ 信息/ 泄露/ ./ 2.3/ ./ 1Cache/ 争用/ 产生/ 的/ 信息/ 泄露/ 通常/ ,/ Cache/ 失效/ 表明/ 发生/ 了/ Cache/ 争用/ ./ 如图/ 3/ 所示/ ,/ 虚拟机/ VM1/ 的/ 内存/ 数据/ A1/ ,/ A2/ 与/ 虚拟机/ VM2/ 的/ 内存/ 数据/ B1/ ,/ B2/ ,/ B3/ 被/ 映射/ 到/ 同一个/ Cache/ 组中/ ./ 假设/ VM2/ 在/ 较/ 短/ 的/ 时间/ 内/ 连续/ 两次/ 访问/ B1/ 、/ B2/ 和/ B3/ ,/ 如果/ 第/ 2/ 次访问/ B1/ 时/ 发生/ 了/ Cache/ 失效/ ,/ 则/ 可以/ 判断/ 在/ VM2/ 的/ 两次/ 访问/ 之间/ 有/ 其它/ 的/ 虚拟机/ (/ VM1/ )/ 使用/ 了/ 相同/ 的/ Cache/ 组/ ,/ 导致/ VM2/ 的/ B1/ 已/ 被/ 驱逐/ 出/ Cache/ ./ 在/ 图/ 3/ 中/ ,/ 每个/ 小方块/ 表示/ Cache/ 行/ 大小/ 的/ 数据/ 块/ ,/ 是/ Cache/ 与/ 内存/ 之间/ 进行/ 数据传输/ 与/ 分配/ 的/ 基本/ 单位/ ;/ 图中/ 左边/ 表示/ Cache/ ,/ 每行/ 表示/ 一个/ Cache/ 组/ ,/ 每个/ Cache/ 组有/ W/ 个/ Cache/ 行/ ,/ 总共/ 有/ S/ 个/ Cache/ 组/ ;/ 右边/ 表示/ 内存/ ,/ 每行/ 表示/ 映射/ 到/ 同一/ Cache/ 组中/ 的/ 所有/ 内存/ 块/ ,/ 即/ 对应/ 于/ 左边/ 同一/ 高度/ 的/ Cache/ 组/ ./ Prime/ -/ Probe/ [/ 10/ ,/ 13/ -/ 14/ ]/ 攻击/ 方法/ 是/ Cache/ 争用/ 产生/ 信息/ 泄露/ 的/ 一个/ 典型/ 应用/ ./ Prime/ -/ Probe/ 攻击/ 中/ ,/ Page5/ 攻击者/ 利用/ 进程/ 或/ 虚拟机/ 之间/ 的/ 外部/ Cache/ 访问/ 冲突/ ,/ 在/ 密码/ 进程/ 运行/ 前后/ 分别/ 访问/ 同样/ 的/ 数据/ 来/ 填充/ Cache/ ,/ 并/ 根据/ 第/ 2/ 次访问/ 各个/ Cache/ 组时/ 发生/ 了/ Cache/ 命中/ (/ 没有/ 争用/ )/ 还是/ Cache/ 失效/ (/ 存在/ 争用/ )/ ,/ 来/ 推测/ 密码/ 进程/ 运行/ 期间/ 访问/ 的/ Cache/ 组/ 地址/ 集合/ ,/ 再/ 在/ 此基础/ 之上/ 进行/ 密钥/ 分析/ ./ 2.3/ ./ 2/ 数据/ 重用/ 产生/ 的/ 信息/ 泄露/ Cache/ 命中/ 信息/ 能够/ 记录/ CPU/ 对/ Cache/ 的/ 历史/ 访问/ 情况/ ./ Cache/ 命中/ 表明/ 存在/ 相同/ 数据/ 的/ 重复使用/ ,/ 即/ CPU/ 曾经/ 访问/ 过/ 相同/ 的/ 数据/ ./ 如图/ 4/ 所示/ ,/ 假设/ 虚拟机/ VM1/ 和/ VM2/ 共享/ 部分/ 内存/ 页面/ ,/ VM2/ 访问/ 页面/ A1/ ,/ A2/ 时/ ,/ 发现/ A1/ ,/ A2/ 已经/ 位于/ Cache/ 中/ ,/ 则/ 可以/ 推断/ 有/ 其它/ 的/ 虚拟机/ (/ VM1/ )/ 在/ 之前/ 使用/ 了/ A1/ ,/ A2/ ./ Yarom/ 等/ 人/ [/ 16/ ]/ 提出/ 的/ Flush/ -/ Reload/ 攻击/ 方法/ 是/ 数据/ 重用/ 产生/ 信息/ 泄露/ 的/ 一个/ 典型/ 例子/ ,/ 其/ 假设/ 攻击者/ 和/ 攻击/ 目标/ 共享内存/ 页面/ ,/ 在/ 密码/ 进程/ 执行/ 前/ 将/ 指定/ 地址/ 的/ 一个/ 或/ 多个/ 共享内存/ 块/ 驱逐/ 出/ Cache/ ,/ 并/ 在/ 加密/ 完成/ 后/ 立即/ 访问/ 这些/ 内存/ 块/ ,/ 然后/ 根据/ 访问/ 时/ 是否/ 发生/ 了/ Cache/ 命中/ 来/ 推测/ 密码/ 进程/ 执行/ 期间/ 是否/ 使用/ 了/ 其中/ 的/ 一些/ 内存/ 块/ ,/ 进一步/ 地/ ,/ 可以/ 推测/ 密码/ 进程/ 执行/ 了/ 哪些/ 加密/ 指令/ 等/ ./ 2.4/ Cache/ 侧/ 信道/ 信息/ 泄露/ 方式/ 共享/ Cache/ 是/ Cache/ 侧/ 信道/ 信息/ 泄露/ 的/ 主要/ 方式/ ./ 云/ 计算环境/ 中/ ,/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 共享/ Cache/ 的/ 方式/ 可以/ 分为/ 图/ 5/ 所示/ ./ (/ 1/ )/ 分/ 时/ 共享/ 当/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 被/ 分配/ 到/ 同一个/ CPU/ 核心/ 上/ 运行/ 时/ ,/ 如图/ 5/ (/ a/ )/ 所示/ ,/ 它们/ 之间/ 分/ 时/ 复用/ 该/ 物理/ CPU/ 核心/ ,/ 并/ 由/ 虚拟机/ 监控器/ (/ VirtualMachineMonitor/ ,/ VMM/ )/ 负责/ 调度/ 、/ 切换/ 运行/ 的/ 虚拟机/ ./ 这种/ 情况/ 下/ ,/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 可以/ 共享/ 该/ CPU/ 的/ 全部/ 多级/ Cache/ ,/ 但是/ 只能/ 分/ 时/ 共享/ ,/ 并/ 不能/ 同时/ 对/ Cache/ 进行/ 访问/ ./ VMM/ 每次/ 切换/ 运行/ 的/ 虚拟机/ 时/ ,/ 并/ 不会/ 清空/ 该/ CPUCache/ 中/ 的/ 数据/ ,/ 因此/ ,/ 下/ 一个/ 运行/ 的/ 虚拟机/ 可以/ 探测/ 得到/ 上/ 一个/ 运行/ 的/ 虚拟机/ 的/ Cache/ 访问信息/ ./ 通常/ ,/ 攻击者/ 需要/ 寻找/ 并/ 利用/ 虚拟机/ 调度/ 算法/ 的/ 漏洞/ ,/ 来/ 抢占/ 目标/ 虚拟机/ 的/ 调度/ [/ 13/ ]/ ,/ 才能/ 保证/ 攻击/ 虚拟机/ 能够/ 紧随/ 目标/ 虚拟机/ 之后/ 被/ 调度/ 运行/ ;/ 这样/ ,/ 才能/ 在/ 虚拟机/ 切换/ 后/ 探测/ 目标/ 虚拟机/ 之前/ 的/ Cache/ 访问信息/ ./ (/ 2/ )/ 同时/ 共享/ 当/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 被/ 分配/ 到/ 同一个/ CPU/ 的/ 不同/ 核心/ 上/ 运行/ 时/ ,/ 它们/ 之间/ 可以/ 并行/ 运行/ ./ 这种/ 情况/ 下/ ,/ 如图/ 5/ (/ b/ )/ 所示/ ,/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 只能/ 共享/ 该/ CPU/ 的/ 末级/ Cache/ (/ LastLevelCache/ ,/ LLC/ )/ ,/ 并/ 不能/ 共享/ 各个/ 核心/ 私有/ 的/ L1Cache/ 或/ L2Cache/ ./ 但是/ ,/ 由于/ 它们/ 之间/ 可以/ 同时/ 对/ LLC/ 进行/ 访问/ ,/ 因此/ ,/ 攻击者/ 可以/ 同步/ 地/ 在/ 目标/ 虚拟机/ 运行/ 期间/ 探测/ LLC/ 来/ 得到/ 其/ Cache/ 访问信息/ [/ 14/ ,/ 17/ ]/ ./ (/ 3/ )/ 通过/ Cache/ 一致性/ 协议/ 共享/ Cache/ 数据/ 在/ 多处理器/ 系统/ 中/ ,/ 如果/ 多个/ CPU/ 访问/ 了/ 同样/ 的/ 一块/ 内存/ 数据/ ,/ 那么/ ,/ 这块/ 内存/ 数据/ 可能/ 在/ 不同/ CPU/ 的/ 多个/ Cache/ 中/ 都/ 存有/ 副本/ ./ Cache/ 一致性/ 协议/ 就是/ 用来/ 解决/ 内存/ 数据/ 与/ 它/ 的/ 多个/ Cache/ 副本/ 之间/ 的/ 内容/ 一致性/ 问题/ ./ 即使/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 被/ 分配/ 到/ 不同/ 的/ CPU/ 之上/ 运行/ 时/ ,/ 如图/ 6/ 所示/ ,/ 虽然/ 它们/ 之间/ 并/ 不/ 物理/ 上/ 共享/ Cache/ ;/ 但是/ ,/ 由于/ 图/ 6/ 通过/ Cache/ 一致性/ 协议/ 共享/ Cache/ 数据/ Page6Cache/ 一致性/ 协议/ ,/ 它们/ 也/ 可能/ 会/ 共享/ 一部分/ Cache/ 数据/ (/ 同一/ 内存/ 数据/ 在/ 不同/ Cache/ 中/ 的/ 副本/ )/ ,/ 因此/ ,/ Cache/ 一致性/ 协议/ 也/ 可以/ 看作/ 逻辑/ 上/ 共享/ Cache/ 的/ 一种/ 方式/ ./ 当/ 一个/ 处理器/ 发生/ Cache/ 失效/ 时/ ,/ 失效/ 的/ 数据/ 是否/ 缓存/ 于/ 另/ 一个/ 处理器/ Cache/ 中/ ,/ 将/ 产生/ 从/ 另/ 一个/ 处理器/ Cache/ 读取数据/ 和/ 直接/ 从/ 内存/ 读取数据/ 两种/ 可能/ ,/ 这/ 将/ 导致/ 可/ 区分/ 的/ Cache/ 访问/ 时间/ 差异/ [/ 18/ ]/ ./ 因此/ ,/ 攻击者/ 也/ 可以/ 利用/ Cache/ 一致性/ 协议/ 来/ 探测/ 目标/ 虚拟机/ 是否/ 使用/ 了/ 指定/ 的/ 内存/ 数据/ [/ 18/ ]/ ./ 本文/ 没有/ 考虑/ 被/ 分配/ 到/ 同一个/ CPU/ 核心/ 上/ 的/ 虚拟机/ 之间/ 并行/ 运行/ 的/ 情况/ ,/ 这/ 主要/ 是/ 由于/ 以下/ 两/ 方面/ 的/ 原因/ :/ 一是/ 出于/ 安全性/ 的/ 考虑/ ,/ 公有/ 云/ 平台/ 一般/ 禁止/ 使用/ 超线程/ 或/ 对称/ 多线程/ 技术/ [/ 13/ ]/ ,/ 因此/ ,/ 基本/ 不会/ 发生/ 这种/ 情况/ ;/ 二是/ 即使/ 发生/ 这种/ 情况/ ,/ 也/ 可以/ 同时/ 参考/ 上述/ 两种/ 共享/ 方式/ 产生/ 的/ 泄露/ 问题/ ./ 3/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 概述/ 在/ 云/ 计算环境/ 中/ ,/ 被/ 分配/ 到/ 同一个/ 物理/ CPU/ 上/ 运行/ 的/ 多个/ 虚拟机/ 之间/ 共享/ 底层/ 的/ 硬件资源/ ,/ 这为/ 恶意/ 租户/ 跨/ 虚拟机/ 实施/ Cache/ 侧/ 信道/ 攻击/ 提供/ 了/ 极大/ 的/ 便利/ 条件/ ./ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 会/ 破坏/ 多/ 租户/ 虚拟机/ 之间/ 的/ 隔离/ 性/ ,/ 从而/ 给/ 其它/ 同驻/ 虚拟机/ 带来/ 严重/ 的/ 安全/ 威胁/ ./ 同时/ ,/ 由于/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 不是/ 利用/ 系统/ 本身/ 的/ 漏洞/ 进行/ 攻击/ ,/ 而是/ 通过/ 共享/ 的/ 底层/ 硬件/ 环境/ 进行/ 攻击/ ,/ 因此/ 极难/ 防御/ ./ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 可以/ 看作/ 是/ 传统/ Cache/ 侧/ 信道/ 攻击/ 在/ 云/ 计算环境/ 下/ 跨/ 虚拟机/ 攻击/ 场景/ 中/ 的/ 一种/ 扩展/ 和/ 应用/ ./ 因此/ ,/ 3.1/ 节/ 介绍/ 传统/ Cache/ 侧/ 信道/ 攻击/ ,/ 3.2/ 节/ 分析/ 总结/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 与/ 传统/ Cache/ 侧/ 信道/ 攻击/ 的/ 联系/ 与/ 区别/ ,/ 3.3/ 节/ 介绍/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 研究进展/ ./ 3.1/ 传统/ 缓存/ 侧/ 信道/ 攻击/ 1998/ 年/ ,/ Kesley/ 等/ 人/ [/ 19/ ]/ 提出/ Cache/ 命中率/ 可/ 用于/ 密码/ 分析/ 的/ 思想/ ./ 此后/ ,/ Cache/ 侧/ 信道/ 攻击/ 技术/ 获得/ 研究/ 人员/ 的/ 极大/ 关注/ 并/ 得以/ 迅速/ 发展/ ./ 最初/ ,/ Cache/ 侧/ 信道/ 攻击/ 的/ 相关/ 研究/ 工作/ 都/ 是/ 围绕/ 单机/ 环境/ 展开/ ,/ 以/ 数据/ 缓存/ [/ 20/ -/ 21/ ]/ 、/ 指令/ 缓存/ [/ 22/ -/ 23/ ]/ 等/ 作为/ 研究/ 对象/ ,/ 研究/ 人员/ 提出/ 了/ 多种/ 可行/ 的/ Cache/ 侧/ 信道/ 攻击/ 方法/ ,/ 并且/ 可以/ 利用/ 这些/ 攻击/ 方法/ 窃取/ 受害者/ 系统/ 中/ 的/ 机密信息/ ,/ 例如/ AES/ [/ 20/ -/ 21/ ,/ 24/ -/ 25/ ]/ 、/ DES/ [/ 26/ ]/ 、/ RSA/ [/ 27/ -/ 30/ ]/ 等/ 加密算法/ 的/ 密钥/ ,/ 这/ 给/ 大部分/ 加密算法/ 的/ 安全性/ 带来/ 了/ 严重威胁/ ./ 根据/ 采集/ 信息/ 不同/ ,/ 可/ 将/ 传统/ Cache/ 侧/ 信道/ 攻击/ 分为/ 时序/ 驱动/ 攻击/ 、/ 访问/ 驱动/ 攻击/ 以及/ 踪迹/ 驱动/ 攻击/ [/ 29/ ]/ ./ 时序/ 驱动/ 攻击/ [/ 24/ ,/ 26/ ,/ 31/ ]/ 需要/ 采集/ 密码/ 算法/ 一次/ 加密/ // 解密/ 的/ 整体/ 时间/ ,/ 并/ 利用/ 统计分析/ 方法/ 推测/ 密钥/ ./ 访问/ 驱动/ 攻击/ [/ 20/ ,/ 25/ ,/ 27/ ,/ 32/ ]/ 需要/ 通过/ 间谍/ 进程/ 采集/ 密码/ 算法/ 一次/ 加密/ // 解密/ 过程/ 中/ 访问/ 的/ Cache/ 组/ 地址/ 集合/ ,/ 再/ 利用/ 直接/ 分析/ 或/ 排除/ 分析方法/ 推测/ 密钥/ ./ 踪迹/ 驱动/ 攻击/ [/ 28/ -/ 30/ ]/ 需要/ 采集/ 密码/ 算法/ 一次/ 加密/ // 解密/ 过程/ 中/ 所有/ Cache/ 访问/ 的/ 命中/ 和/ 失效/ 序列/ ,/ 再/ 结合/ 明文/ 或/ 密文/ 推测/ 密钥/ ./ 传统/ Cache/ 侧/ 信道/ 攻击/ 方法/ 大多/ 存在/ 先决/ 成立/ 的/ 假设/ 条件/ ,/ 例如/ 时序/ 驱动/ 攻击/ 需要/ 能够/ 获得/ 目标/ 系统/ 的/ 详细/ 配置/ 参数/ 并/ 重建/ 相同/ 的/ 本地/ 对照/ 环境/ ;/ 访问/ 驱动/ 攻击/ 需要/ 能够/ 侵入/ 目标/ 机器/ 并/ 植入/ 间谍/ 进程/ ;/ 踪迹/ 驱动/ 攻击/ 通过/ 计时/ 手段/ 很难/ 实现/ ,/ 需要/ 物理/ 上/ 接触/ 目标/ 机器/ 并/ 精确/ 采集/ 其/ 功率/ 消耗/ 或/ 电磁辐射/ 信息/ 等/ ./ 这些/ 假设/ 条件/ 在/ 现实/ 环境/ 的/ 攻击/ 场景/ 中/ 往往/ 难以/ 满足/ ,/ 这/ 严重/ 影响/ 了/ 传统/ Cache/ 侧/ 信道/ 攻击/ 在/ 现实/ 环境/ 中/ 的/ 可行性/ ./ 3.2/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 起源/ 2009/ 年/ ,/ Ristenpart/ 等/ 人/ [/ 10/ ]/ 首次/ 指出/ 云/ 计算环境/ 中/ 存在/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 安全/ 威胁/ ./ 不同于/ 传统/ Cache/ 侧/ 信道/ 攻击/ ,/ 同驻/ 虚拟机/ 之间/ 对于/ Cache/ 、/ 内存/ 的/ 共享/ 和/ 争用/ 天然/ 地为/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 实现/ 提供/ 了/ 便利/ 条件/ 和/ 重要/ 基础/ ,/ 极大/ 地/ 增强/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 在/ 现实/ 环境/ 中/ 的/ 可行性/ ./ 参考/ 传统/ Cache/ 侧/ 信道/ 攻击/ 分类/ ,/ 可/ 将/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 分为/ 时序/ 驱动/ 攻击/ 和/ 访问/ 驱动/ 攻击/ ,/ 下面/ 分别/ 对/ 其/ 与/ 传统/ Cache/ 侧/ 信道/ 攻击/ 的/ 关系/ 进行/ 评述/ ./ 而/ 踪迹/ 驱动/ 攻击/ 在/ 云/ 计算环境/ 中/ 很/ 难/ 实现/ ,/ 目前/ 尚未/ 有/ 相关/ 的/ 研究成果/ ./ 3.2/ ./ 1/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 传统/ 时序/ 驱动/ 攻击/ 可以/ 分为/ 远程/ 攻击/ 和/ 本地/ 攻击/ 两种/ ./ 远程/ 攻击/ 属于/ 非/ 入侵/ 式/ 攻击/ ,/ 攻击者/ 通过/ 网络/ 远程/ 采集/ 计时/ 信息/ ,/ 由于/ 网络/ 传输/ 时延/ 和/ 抖动/ 时延/ 的/ 存在/ ,/ 很难/ 采集/ 到/ 精确/ 的/ 计时/ 信息/ ,/ 而/ 不/ 精确/ 的/ 计时/ 信息/ 对/ 攻击/ 成功率/ 影响/ 较大/ ,/ 因此/ ,/ 远程/ 攻击/ 在/ 真实/ 网络/ 环境/ 下/ 的/ 适用性/ 不强/ ./ 本地/ 攻击/ 属于/ 入侵/ 式/ 攻击/ ,/ 攻击者/ 需要/ 在/ 攻击/ 目标/ 的/ 操作系统/ 中/ 植入/ 间谍/ 进程/ 来/ 采集/ 计时/ 信息/ ,/ 虽然/ 可以/ 完全/ 消除/ 网络/ 传输/ 时延/ 和/ 抖动/ 时延/ 带来/ 的/ 影响/ ,/ 但是/ 也/ 降低/ 了/ 本/ Page7/ 地/ 攻击/ 在/ 现实/ 环境/ 中/ 的/ 可行性/ ./ 由于/ 发生/ 在/ 两个/ 虚拟机/ 操作系统/ 之间/ ,/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 本质/ 上/ 仍/ 属于/ 远程/ 攻击/ ./ 当/ 攻击者/ 的/ 虚拟机/ 和/ 攻击/ 目标/ 的/ 虚拟机/ 不同/ 驻时/ ,/ 攻击/ 场景/ 与/ 传统/ 远程/ 时序/ 驱动/ 攻击/ 完全/ 一样/ ,/ 因此/ ,/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 通常/ 发生/ 在/ 同/ 驻/ 的/ 虚拟机/ 之间/ ./ 由于/ 同驻/ 虚拟机/ 之间/ 一般/ 通过/ 宿主机/ 的/ 本地/ 通信/ 信道/ 进行/ 数据交换/ ,/ 因此/ ,/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 采集/ 的/ 计时/ 信息/ 比较/ 精确/ [/ 33/ ]/ ./ 除此之外/ ,/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 与/ 传统/ 时序/ 驱动/ 攻击/ 并/ 无/ 明显/ 区别/ ./ 3.2/ ./ 2/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 与/ 传统/ 访问/ 驱动/ 攻击/ 方法/ 类似/ ,/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 通过/ 监测/ 宿主机/ 的/ Cache/ 或/ 共享内存/ ,/ 并/ 利用/ 计时/ 手段/ 采集/ 目标/ 进程/ 运行/ 期间/ 通过/ Cache/ 泄露/ 出来/ 的/ 侧/ 信道/ 信息/ ,/ 再/ 结合/ 其/ 具体/ 实现/ 进行/ 分析/ ,/ 即/ 可能/ 推测/ 得到/ 其它/ 同驻/ 虚拟机/ 的/ 隐私/ 信息/ ./ 但是/ ,/ 如表/ 1/ 所示/ ,/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 与/ 传统/ 访问/ 驱动/ 攻击/ 也/ 存在/ 许多/ 不同之处/ ,/ 表现/ 在/ :/ 表/ 1/ 传统/ 跨/ 进程/ 与/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 比较/ 攻击/ 类型/ 攻击/ 场景/ 运行/ 环境/ 攻击方式/ 可/ 检测/ 性/ 传统/ 访问/ 驱动/ 攻击/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ (/ 1/ )/ 攻击/ 场景/ 传统/ 访问/ 驱动/ 攻击/ 发生/ 在/ 单机/ 环境/ 中/ 的/ 两个/ 进程/ 之间/ ./ 攻击者/ 需要/ 将/ 间谍/ 进程/ 植入/ 攻击/ 目标/ 的/ 操作系统/ ,/ 再/ 利用/ 系统/ 内/ 多个/ 进程/ 间/ 共享/ Cache/ 的/ 特点/ 使/ 间谍/ 进程/ 与/ 密码/ 进程同步/ 执行/ ,/ 探测/ 采集/ 密码/ 进程/ 执行/ 期间/ 的/ Cache/ 侧/ 信道/ 信息/ ./ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 发生/ 在/ 同/ 驻/ 一台/ 宿主机/ 的/ 两个/ 虚拟机/ 之间/ ./ 攻击者/ 不/ 需要/ 侵入/ 目标/ 虚拟机/ 的/ 操作系统/ ,/ 仅/ 需要/ 和/ 目标/ 虚拟机/ 同驻/ ,/ 就/ 可以/ 探测/ 采集/ 密码/ 进程/ 执行/ 期间/ 的/ Cache/ 侧/ 信道/ 信息/ ./ 图/ 7/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 研究/ 时间轴/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 中/ ,/ 攻击者/ 和/ 攻击/ 目标/ 分别/ 为/ 同/ 驻/ 一台/ 宿主机/ 的/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 中/ 的/ 目标/ 进程/ ./ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 共享/ 覆盖/ 的/ 或/ 相邻/ 的/ 底层/ 硬件资源/ ,/ 可能/ 具有/ 相同/ 的/ 或/ 完全/ 不同/ 的/ 操作系统/ ./ 系统/ 级/ 虚拟化/ 为/ 跨/ 虚拟机/ 攻击/ 增加/ 了/ 难度/ ,/ 例如/ ,/ 内存/ 虚拟化/ 使得/ 虚拟机/ 内存/ 系统/ 中/ 增加/ 了/ 一级/ 物理地址/ 到/ 机器/ 地址/ 的/ 地址/ 转换/ ,/ 导致/ 内存地址/ 与/ Cache/ 之间/ 的/ 映射/ 关系/ 更为/ 复杂/ ;/ 同时/ ,/ 系统/ 级/ 虚拟化/ 也/ 使得/ 攻击者/ 拥有/ 其/ 虚拟机/ 操作系统/ 的/ 全部/ 权限/ ,/ 这/ 可以/ 为/ 其/ 提供/ 一些/ 新/ 的/ 能力/ ,/ 例如/ 可以/ 修改/ 操作系统/ 的/ 内存/ 页面/ 大小/ 等/ ./ (/ 3/ )/ 攻击方式/ 传统/ 访问/ 驱动/ 攻击/ 需要/ 侵入/ 攻击/ 目标/ 的/ 操作系统/ ,/ 植入/ 并/ 运行/ 间谍/ 进程/ ,/ 是/ 一种/ 入侵/ 式/ 的/ 攻击方式/ ./ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 的/ 攻击/ 目标/ 从/ 操作系统/ 内部/ 转移/ 到/ 了/ 操作系统/ 外部/ ,/ 不/ 需要/ 侵入/ 攻击/ 目标/ 的/ 操作系统/ ,/ 是/ 一种/ 非/ 入侵/ 式/ 的/ 攻击方式/ ./ (/ 2/ )/ 运行/ 环境/ 传统/ 访问/ 驱动/ 攻击/ 中/ ,/ 密码/ 进程/ 与/ 间谍/ 进程/ 运行/ 在/ 真实/ 物理/ 硬件/ 之上/ 的/ 同一个/ 真实/ 操作系统/ 环境/ 中/ ,/ 它们/ 之间/ 具有/ 完全相同/ 的/ 运行/ 环境/ ,/ 且/ 可以/ 共享/ 该机/ 的/ 全部/ 硬件资源/ ./ (/ 4/ )/ 可/ 检测/ 性/ 传统/ 访问/ 驱动/ 攻击/ 会/ 在/ 目标/ 操作系统/ 中/ 留下/ 攻击/ 痕迹/ ,/ 因此/ ,/ 存在/ 被/ 攻击/ 目标/ 检测/ 发现/ 的/ 可能性/ ./ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 不会/ 在/ 攻击/ 目标/ 的/ 虚拟机/ 中/ 留下/ 任何/ 的/ 攻击/ 痕迹/ ,/ 因此/ ,/ 攻击/ 目标/ 无法/ 检测/ 到/ 这种/ 攻击行为/ ./ 3.3/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 研究进展/ 近年来/ ,/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 研究/ 得到/ 了/ 国内外/ 研究/ 人员/ 的/ 极大/ 关注/ ,/ 并/ 获得/ 了/ 一些/ 新/ 的/ 研究进展/ ,/ 图/ 7/ 为/ 其/ 研究/ 时间轴/ ,/ 其中/ 标示出/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 研究/ 起源/ 与/ 发展/ 过程/ 中/ 具有/ 代表性/ 的/ 文献/ ./ 下面/ 从/ 时序/ 驱动/ 攻击/ 和/ 访问/ 驱动/ 攻击/ 两个/ 方面/ 分别/ 进行/ 介绍/ ./ Page83/ ./ 3.1/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 研究进展/ 目前/ ,/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 的/ 相关/ 研究/ 较/ 少/ ,/ 已有/ 研究成果/ 也/ 只是/ 将/ 传统/ 时序/ 驱动/ 攻击/ 方法/ 直接/ 应用/ 于/ 跨/ 虚拟机/ 攻击/ 场景/ 中/ ./ 2012/ 年/ ,/ Wei/ 等/ 人/ [/ 33/ ]/ 以/ 运行/ L4Re/ 微内核/ 的/ 虚拟化/ 平台/ 为例/ ,/ 首先/ 尝试/ 将/ Bernstein/ 攻击/ [/ 31/ ]/ 应用/ 于/ 虚拟化/ 环境/ 中同/ 驻/ 的/ 虚拟机/ 之间/ ./ 2014/ 年/ ,/ Irazoqui/ 等/ 人/ [/ 34/ -/ 35/ ]/ 将/ Bernstein/ 攻击/ 应用/ 于/ Xen/ 、/ VMware/ 和/ KVM/ 虚拟化/ 环境/ 以及/ AmazonEC2/ 云/ 平台/ 中/ ,/ 并/ 成功/ 恢复/ 了/ 其它/ 同驻/ 虚拟机/ 中/ 使用/ 的/ AES/ 密钥/ 的/ 部分/ 比特/ 位/ ./ 3.3/ ./ 2/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 研究进展/ 传统/ 访问/ 驱动/ 攻击/ 为/ Cache/ 的/ 探测/ 和/ 分析/ 奠定/ 了/ 坚实/ 的/ 基础/ ,/ 也/ 为/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 提供/ 了/ 可以/ 借鉴/ 的/ 技术/ 和/ 方法/ ./ 已有/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 可/ 分为/ :/ (/ 1/ )/ 将/ 传统/ 的/ 访问/ 驱动/ 攻击/ 方法/ 迁移/ 至/ 跨/ 虚拟机/ 攻击/ 场景/ 中/ ,/ 并/ 解决/ 迁移/ 过程/ 中/ 产生/ 的/ 各种/ 问题/ 和/ 挑战/ ;/ (/ 2/ )/ 设计/ 实现/ 新/ 的/ 攻击/ 方法/ ./ (/ 1/ )/ 迁移/ 传统/ 攻击/ 方法/ 2009/ 年/ ,/ Ristenpart/ 等/ 人/ [/ 10/ ]/ 利用/ Prime/ -/ Probe/ 方法/ [/ 20/ ]/ 在/ AmazonEC2/ 云/ 平台/ 中/ 探测/ 得到/ 同驻/ 虚拟机/ 的/ Cache/ 负载/ 状态/ 信息/ 以及/ 用户/ 击键/ 间隔时间/ 信息/ 等/ ./ 2012/ 年/ ,/ Zhang/ 等/ 人/ [/ 36/ ]/ 基于/ Prime/ -/ Probe/ 方法/ 设计/ 了/ HomeAlone/ 工具/ ,/ 租户/ 可/ 利用/ Home/ -/ Alone/ 来/ 检测/ 是否/ 有/ 其他/ 租户/ 的/ 虚拟机/ 与其/ 同驻/ ./ 随后/ ,/ Zhang/ 等/ 人/ [/ 13/ ]/ 利用/ Prime/ -/ Probe/ 方法/ 对/ L1/ 指令/ Cache/ 进行/ 探测/ ,/ 并/ 设计/ 了/ 一个/ 隐/ 马尔科夫/ 模型/ 过滤/ 探测/ 噪声/ ,/ 成功/ 恢复/ 了/ 其它/ 同驻/ 虚拟机/ 上/ 使用/ 的/ ElGamal/ 加密/ 密钥/ ./ 2015/ 年/ ,/ Younis/ 等/ 人/ [/ 37/ ]/ 将/ 虚拟机/ 的/ 虚拟地址/ 转换/ 为/ 物理地址/ ,/ 再/ 利用/ Prime/ -/ Probe/ 方法/ 监控/ 这些/ 物理地址/ 是否/ 被/ 其它/ 虚拟机/ 访问/ 过/ ./ Liu/ 等/ 人/ [/ 14/ ]/ 和/ Irazoqui/ 等/ 人/ [/ 17/ ]/ 利用/ 大页/ 映射/ 得到/ 的/ 额外/ 物理地址/ 知识/ 来/ 保留/ LLC/ 和/ 物理/ 内存/ 之间/ 的/ 映射/ 关系/ ,/ 绕过/ 了/ LLC/ 与/ 内存/ 地址映射/ 不/ 透明/ 的/ 问题/ ,/ 使得/ Prime/ -/ Probe/ 方法/ 可/ 用于/ 探测/ LLC/ ./ 在此之前/ ,/ Prime/ -/ Probe/ 方法/ 只能/ 用于/ 探测/ 容量/ 较/ 小/ 的/ L1Cache/ ./ 随后/ ,/ Inci/ 等/ 人/ [/ 38/ ]/ 和/ Kayaalp/ 等/ 人/ [/ 39/ ]/ 对/ LLC/ 的/ 索引/ 哈希/ 机制/ 进行/ 逆向/ 工程/ ,/ 得到/ 了/ 内存地址/ 与/ LLC/ 各/ 分片/ 之间/ 的/ 映射/ 关系/ ,/ 解决/ 了/ LLC/ 与/ 内存/ 地址映射/ 不/ 透明/ 的/ 问题/ ./ (/ 2/ )/ 设计/ 新/ 的/ 攻击/ 方法/ 2014/ 年/ ,/ Yarom/ 等/ 人/ [/ 16/ ]/ 假设/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 共享内存/ 页面/ ,/ 并/ 利用/ Cache/ 的/ 包容性/ 特点/ ,/ 将/ Gullasch/ 攻击/ [/ 21/ ]/ 扩展/ 之后/ 用于/ 探测/ LLC/ ,/ 提出/ 了/ 第/ 1/ 个/ 可以/ 跨/ 内核/ 进行/ 攻击/ 的/ Cache/ 侧/ 信道/ 攻击/ 方法/ (/ Flush/ -/ Reload/ 攻击/ )/ ./ 2015/ 年/ ,/ Gruss/ 等/ 人/ [/ 40/ ]/ 发现/ 缓存/ 刷新/ 指令/ 的/ 执行/ 时间/ 取决于/ 被/ 刷新/ 的/ 内存/ 块/ 是否/ 位于/ Cache/ 中/ ,/ 他们/ 利用/ 这/ 一点/ 对/ Flush/ -/ Reload/ 攻击/ 进行/ 了/ 改进/ ,/ 提出/ 了/ Flush/ -/ Flush/ 攻击/ ,/ 在/ 缩短/ 了/ 攻击/ 执行/ 时间/ 的/ 同时/ 提高/ 了/ 攻击/ 的/ 隐匿性/ ./ 2016/ 年/ ,/ Irazoqui/ 等/ 人/ [/ 18/ ]/ 基于/ Cache/ 一致性/ 协议/ ,/ 提出/ 并/ 实现/ 了/ 第/ 1/ 个/ 跨/ CPU/ 的/ Cache/ 侧/ 信道/ 攻击/ 方法/ (/ Invalidate/ -/ Transfer/ 攻击/ )/ ,/ 成功/ 恢复/ 了/ 另/ 一个/ CPU/ 上/ 运行/ 的/ 加密/ 软件/ 库中/ 使用/ 的/ AES/ 密钥/ 和/ ElGamal/ 密钥/ ./ 通过/ 上述/ 分析/ 发现/ ,/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 的/ 攻击/ 方法/ 更为/ 多样化/ ,/ 随着/ 攻击/ 媒介/ 从/ L1/ 数据/ Cache/ 和/ L1/ 指令/ Cache/ ,/ 到/ LLC/ ,/ 再/ 到/ 双路/ CPU/ 上/ Cache/ 的/ 变化/ ,/ 攻击/ 的/ 限制/ 条件/ 越来越/ 现实/ :/ 从/ 要求/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 同驻/ 一个/ CPU/ 核心/ ,/ 到/ 同/ 驻/ 一个/ CPU/ ,/ 再/ 到/ 跨/ CPU/ ,/ 威胁/ 范围/ 也/ 越来越/ 广/ ./ 3.4/ 跨/ 虚拟机/ 访问/ 驱动/ Cache/ 侧/ 信道/ 攻击/ 的/ 通用/ 模型/ 根据/ 3.2/ ./ 1/ 节/ 的/ 分析/ ,/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 的/ 攻击/ 模式/ 和/ 传统/ 时序/ 驱动/ 攻击/ 并/ 无/ 区别/ ,/ 同时/ ,/ 发表/ 的/ 文献/ 中/ ,/ 已有/ 一些/ [/ 15/ ,/ 32/ ]/ 对/ 传统/ 时序/ 驱动/ 攻击/ 的/ 攻击/ 模型/ 进行/ 了/ 详细/ 介绍/ 及/ 总结/ ,/ 可供参考/ ,/ 本文/ 不再/ 赘述/ ./ 而/ 3.2/ ./ 2/ 节/ 的/ 分析表明/ ,/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 的/ 攻击/ 场景/ 、/ 执行/ 环境/ 以及/ 攻击方式/ 等/ 均/ 与/ 传统/ 访问/ 驱动/ 攻击/ 不同/ ./ 因此/ ,/ 本/ 节/ 探讨/ 跨/ 虚拟机/ 访问/ 驱动/ Cache/ 侧/ 信道/ 攻击/ 的/ 攻击/ 模式/ ,/ 给出/ 此类/ 攻击/ 的/ 一个/ 通用/ 模型/ ./ 3.4/ ./ 1/ 相关/ 假设/ 为了/ 方便/ 描述/ ,/ 我们/ 将/ 攻击者/ 创建/ 并/ 拥有/ 的/ 虚拟机/ 称为/ 攻击/ 虚拟机/ ,/ 将/ 目标/ 用户/ 创建/ 并/ 拥有/ 的/ 虚拟机/ 称为/ 目标/ 虚拟机/ ./ 云/ 计算环境/ 中/ 的/ Cache/ 侧/ 信道/ 攻击/ 一般/ 基于/ 如下/ 假设/ :/ 假设/ 1/ ./ 云/ 服务供应商/ 及其/ 提供/ 的/ 底层/ 基础设施/ 都/ 是/ 可信/ 的/ ,/ 而/ 使用/ 云/ 平台/ 的/ 各个/ 租户/ 之间/ 是/ 互不/ 信任/ 的/ ./ 假设/ 2/ ./ 攻击者/ 为/ 使用/ 云/ 平台/ 的/ 恶意/ 租户/ ,/ 其/ 拥有/ 目标/ 用户/ 所/ 运行/ 应用/ 的/ 相关/ 背景/ 知识/ ,/ 但/ 不/ 具有/ 任何/ 特殊/ 权限/ ,/ 期望/ 利用/ 侧/ 信道/ 攻击/ 来/ 获取/ 目标/ 用户/ 的/ 隐私/ 信息/ ./ 假设/ 3/ ./ 攻击/ 目标/ 为/ 使用/ 云/ 平台/ 的/ 正常/ 租户/ ,/ 他们/ 利用/ 虚拟机/ 运行/ 某些/ 机密性/ 相关/ 的/ 应用/ ,/ 并/ 对外/ 提供/ 公开/ 的/ 服务/ 访问/ 接口/ ./ Page9/ 上述/ 假设/ 均/ 符合实际/ 应用/ 场景/ ,/ 即使/ 假设/ 2/ 中/ 针对/ 攻击者/ 背景/ 知识/ 的/ 假设/ ,/ 也/ 具有/ 一定/ 的/ 普适/ 意义/ ./ 例如/ ,/ 针对/ 特定/ 的/ 目标/ 用户/ 发起/ 攻击/ 时/ ,/ 攻击者/ 通常/ 已经/ 拥有/ 目标/ 用户/ 的/ 背景/ 知识/ ;/ 即使/ 没有/ ,/ 攻击者/ 也/ 可以/ 通过/ 其它/ 方式/ 得到/ 所/ 需/ 背景/ 知识/ ,/ 例如/ ,/ 采用/ 文献/ [/ 41/ ]/ 和/ 文献/ [/ 42/ ]/ 中/ 的/ 方法/ ,/ 攻击者/ 可以/ 判断/ 同驻/ 虚拟机/ 是否/ 与其/ 使用/ 相同/ 的/ 操作系统/ ,/ 或者/ 探测/ 得到/ 同驻/ 虚拟机/ 中/ 运行/ 的/ 应用/ 等/ ./ 3.4/ ./ 2/ 攻击/ 过程/ 统计分析/ 的/ 攻击/ 方法/ ./ 攻击/ 过程/ 一般/ 如下/ :/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 本质/ 上/ 是/ 一种/ 基于/ (/ 1/ )/ 实现/ 同驻/ 基于/ 一定/ 策略/ ,/ 攻击者/ 创建/ 并/ 运行/ 多个/ 虚拟机/ 实例/ ,/ 并/ 利用/ 虚拟机/ 同驻/ 检测/ 方法/ 逐一/ 判断/ 这些/ 虚拟机/ 是否/ 和/ 目标/ 虚拟机/ 同驻/ ;/ 重复/ 这一/ 过程/ ,/ 直到/ 实现/ 至少/ 一个/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 同驻/ 为止/ ./ (/ 2/ )/ 探测/ Cache/ 侧/ 信道/ 信息/ 攻击/ 虚拟机/ 首先/ 根据/ 具体/ 攻击/ 场景/ (/ 包括/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 共享/ Cache/ 的/ 方式/ ,/ 目标/ 虚拟机/ 所/ 运行/ 应用/ 的/ 具体/ 实现/ 特征/ 等/ )/ 的/ 不同/ ,/ 设计/ 选取/ 合适/ 的/ Cache/ 侧/ 信道/ 信息/ 探测/ 方法/ ;/ 然后/ ,/ 将/ Cache/ 设置/ 为/ 一个/ 已知/ 状态/ ,/ 并/ 访问/ 部署/ 在/ 目标/ 虚拟机/ 中/ 的/ 应用/ ;/ 最后/ ,/ 探测/ 并/ 收集/ 目标/ 虚拟机/ 运行/ 过程/ 中/ 产生/ 的/ Cache/ 侧/ 信道/ 信息/ ./ (/ 3/ )/ 分析/ Cache/ 侧/ 信道/ 信息/ 将/ 攻击者/ 想要/ 获取/ 的/ 隐私/ 信息/ 标记/ 为/ K/ =/ {/ K1/ ,/ K2/ ,/ …/ ,/ Kn/ }/ ./ 目标/ 虚拟机/ 中/ 的/ 应用/ 为了/ 响应/ 攻击者/ 的/ 服务/ 请求/ ,/ 将/ 执行/ 一些/ 操作/ OP/ =/ {/ OP1/ ,/ OP2/ ,/ …/ ,/ OPn/ }/ ,/ 而/ 操作/ OP/ 与/ 隐私/ 信息/ K/ 之间/ 通常/ 图/ 8/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 通用/ 模型/ 4/ 虚拟机/ 同驻/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 同驻/ 是/ 攻击者/ 可以/ 跨/ 虚拟机/ 实施/ 侧/ 信道/ 攻击/ 的/ 必要条件/ 和/ 重要/ 基础/ ./ 然而/ ,/ 随着/ 云/ 计算/ 的/ 快速/ 发展/ ,/ 数据中心/ 拥有/ 的/ 物理/ 机器/ 数量/ 不断/ 增加/ ,/ 例如/ AmazonEC2/ 的/ 单个/ 数据中心/ 目前/ 一般/ 拥有/ 超过/ 50000/ ①/ 台/ 物理/ 机器/ ./ 在/ 这/ 一/ 具有/ 依赖/ 关系/ ,/ 即/ 由/ 隐私/ 信息/ K/ 决定/ 执行/ 哪些/ 操作/ ,/ 可以/ 表示/ 为/ 函数/ f/ :/ K/ →/ OP/ ,/ 即/ OP/ =/ f/ (/ K/ )/ ;/ 在/ 执行/ OP/ 时/ ,/ 目标/ 虚拟机/ 访问共享/ Cache/ ,/ 这/ 将/ 产生/ 一些/ Cache/ 侧/ 信道/ 信息/ L/ =/ {/ L1/ ,/ L2/ ,/ …/ ,/ Ln/ }/ ;/ 当/ Cache/ 初始状态/ 相同/ 时/ ,/ 不同/ 的/ 操作/ OP/ 将/ 产生/ 不同/ 的/ Cache/ 行为/ ,/ 从而/ 产生/ 不同/ 的/ Cache/ 侧/ 信道/ 信息/ ,/ 即/ 操作/ OP/ 与/ 执行/ 操作/ OP/ 产生/ 的/ Cache/ 侧/ 信道/ 信息/ L/ 之间/ 具有/ 强/ 相关性/ ,/ 可以/ 表示/ 为/ 函数/ g/ :/ OP/ →/ L/ ,/ 即/ L/ =/ g/ (/ OP/ )/ ./ 通过/ 上述/ 分析/ ,/ 攻击/ 虚拟机/ 可以/ 通过/ 分析/ 探测/ 到/ 的/ Cache/ 侧/ 信道/ 信息/ L/ 来/ 推测/ 得到/ 目标/ 虚拟机/ 中/ 的/ 应用/ 具体/ 执行/ 了/ 哪些/ 操作/ ,/ 再/ 结合/ 这些/ 操作/ (/ OP/ )/ 与/ 隐私/ 信息/ (/ K/ )/ 之间/ 的/ 关系/ ,/ 减小/ K/ 的/ 取值/ 范围/ 或/ 直接/ 推测/ K/ 的/ 取值/ ./ 具体/ 地/ ,/ 通过/ 对/ 目标/ 应用/ 的/ 具体/ 实现/ 进行/ 分析/ ,/ 可以/ 建立/ 函数/ f/ ,/ 并/ 得到/ 其/ 逆函数/ K/ =/ f/ -/ 1/ (/ OP/ )/ ;/ 对/ 具体/ Cache/ 行为/ 与其/ 产生/ 的/ Cache/ 侧/ 信道/ 信息/ 进行/ 关联/ ,/ 可以/ 建立/ 函数/ g/ ,/ 并/ 得到/ 其/ 逆函数/ OP/ =/ g/ -/ 1/ (/ L/ )/ ;/ 在/ 此基础/ 之上/ ,/ 建立/ 泄露/ 模型/ K/ =/ f/ -/ 1/ (/ g/ -/ 1/ (/ L/ )/ )/ ,/ 即可/ 通过/ 对/ Cache/ 侧/ 信道/ 信息/ L/ 进行/ 分析/ ,/ 推测/ 得到/ 目标/ 虚拟机/ 的/ 隐私/ 信息/ K/ ./ 图/ 8/ 给出/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 通用/ 模型/ ./ 其中/ ,/ 虚拟机/ 同驻/ 是/ 实现/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 重要/ 基础/ ,/ 我们/ 将/ 在/ 第/ 4/ 节中/ 介绍/ ;/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 信息/ 探测/ 方法/ 将/ 在/ 第/ 5/ 节中/ 介绍/ ;/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 信息/ 分析方法/ 与/ 传统/ 单机/ 环境/ 中/ 的/ 分析方法/ 是/ 通用/ 的/ ,/ 且/ 一般/ 针对/ 具体/ 算法/ 及其/ 实现/ 进行/ 设计/ ,/ 在/ 文献/ [/ 15/ ,/ 29/ ]/ 中/ 已经/ 详细/ 介绍/ ,/ 本文/ 不再/ 赘述/ ./ 应用/ 背景/ 下/ ,/ 攻击者/ 可能/ 需要/ 花费/ 大量/ 的/ 时间/ 和/ 精力/ ,/ 才能/ 实现/ 和/ 特定/ 目标/ 虚拟机/ 的/ 同/ 驻/ ./ 根据/ 3.4/ ./ 2/ 节/ 有关/ 实现/ 同驻/ 的/ 过程/ ,/ 攻击者/ 创建/ 虚拟机/ 的/ 策略/ 以及/ 同驻/ 检测/ 方法/ 的/ 准确性/ 和/ 效率/ 是/ 影响/ 同驻/ 实现/ 过程/ 的/ 重要/ 因素/ ./ 因此/ ,/ 4.1/ 节/ 分析/ ①/ AWSinnovationatscale/ ,/ AWSre/ :/ Invent2014/ (/ SPOT301/ )/ ./ Page10/ 公有/ 云中/ 虚拟机/ 资源/ 调度/ 策略/ 的/ 脆弱性/ ,/ 这/ 可以/ 帮助/ 攻击者/ 可以/ 更/ 有效率/ 地/ 实现/ 同驻/ ;/ 4.2/ 节/ 分类/ 介绍/ 虚拟机/ 同驻/ 检测/ 方法/ ;/ 4.3/ 节/ 探讨/ 虚拟机/ 同驻/ 检测/ 评估/ 问题/ ,/ 并/ 对/ 已有/ 的/ 各种/ 虚拟机/ 同驻/ 检测/ 方法/ 进行/ 对比/ 分析/ ./ 4.1/ 虚拟机/ 资源/ 调度/ 策略/ 云/ 平台/ 的/ 虚拟机/ 资源/ 调度/ 策略/ 主要/ 解决/ 的/ 是/ 虚拟机/ 与/ 物理/ 主机/ 的/ 映射/ 问题/ ,/ 包括/ 虚拟机/ 的/ 创建/ 、/ 迁移/ 以及/ 管理/ 等/ ./ 作为/ 云/ 计算/ 底层/ 的/ 核心技术/ 之一/ ,/ 虚拟机/ 资源/ 调度/ 策略/ 的/ 好坏/ 将/ 直接/ 影响/ 到/ 云/ 平台/ 的/ 整体/ 性能/ 、/ 运营/ 成本/ 以及/ 服务质量/ 等/ ./ 目前/ ,/ 公有/ 云/ 平台/ 的/ 虚拟机/ 资源/ 调度/ 策略/ 还/ 未/ 形成/ 统一/ 的/ 标准/ 和/ 规范/ ,/ 各大云/ 服务供应商/ 都/ 是/ 根据/ 自身/ 资源/ 的/ 特点/ 以及/ 调度/ 目标/ 等/ 采用/ 不同/ 的/ 调度/ 策略/ [/ 43/ ]/ ,/ 例如/ ,/ IBM/ 云/ 平台/ 采用/ 性能/ 优先/ 的/ 调度/ 策略/ ,/ HP/ 云/ 平台/ 采用/ 成本/ 优先/ 的/ 调度/ 策略/ ,/ AmazonEC2/ 的/ 调度/ 策略/ 综合/ 考虑/ 了/ 成本/ 优先/ 、/ 负载/ 均衡/ 、/ 高可靠性/ 、/ 满足用户/ 不同/ 租用/ 请求/ 等/ 优化/ 目标/ ./ 通过/ 上述/ 分析/ 可以/ 发现/ ,/ 公有/ 云/ 平台/ 目前/ 采用/ 的/ 虚拟机/ 资源/ 调度/ 策略/ 多/ 是从/ 降低/ 能耗/ 、/ 减少/ 成本/ 、/ 提高/ 资源/ 利用率/ 以及/ 实现/ 负载/ 均衡/ 等/ 角度/ 出发/ 进行/ 优化/ ,/ 而/ 大多/ 忽略/ 了/ 安全/ 上/ 的/ 考虑/ ./ 因此/ ,/ 攻击者/ 可以/ 分析/ 并/ 利用/ 虚拟机/ 资源/ 调度/ 策略/ 的/ 脆弱性/ ,/ 更/ 有/ 针对性/ 地/ 创建/ 或/ 启动/ 虚拟机/ 来/ 实现/ 与/ 目标/ 虚拟机/ 的/ 同/ 驻/ [/ 10/ ]/ ./ 例如/ ,/ 为了/ 降低/ 能耗/ ,/ 并/ 提高/ 资源/ 利用率/ ,/ 虚拟机/ 资源/ 调度/ 策略/ 可能/ 将/ 同一/ 时刻/ 提交/ 启动/ 申请/ 的/ 多个/ 虚拟机/ 分配/ 到/ 一台/ 物理/ 主机/ 上/ 运行/ ;/ 再/ 如/ ,/ 为了/ 便于管理/ ,/ 虚拟机/ 资源/ 调度/ 策略/ 可能/ 将/ 业务/ 分类/ 、/ 可用/ 区域/ 、/ 实例/ 类型/ 等/ 启动/ 信息/ 相同/ 的/ 虚拟机/ 分配/ 到/ 一台/ 物理/ 主机/ 上/ 运行/ ./ 为了/ 应对/ 同驻/ 威胁/ ,/ 公有/ 云/ 平台/ 对/ 虚拟机/ 资源/ 调度/ 策略/ 和/ 网络管理/ 功能/ 进行/ 了/ 优化/ ,/ 在/ 一定/ 程度/ 上/ 增加/ 了/ 实现/ 同驻/ 的/ 难度/ [/ 44/ ]/ ,/ 但是/ ,/ 攻击者/ 仍/ 可以/ 较/ 低/ 的/ 开销/ 实现/ 与/ 目标/ 虚拟机/ 的/ 同/ 驻/ [/ 44/ -/ 45/ ]/ ./ 4.2/ 虚拟机/ 同驻/ 检测/ 方法/ 虚拟机/ 同驻/ 检测/ 方法/ 用来/ 判断/ 两个/ 虚拟机/ 是否/ 运行/ 于/ 同一/ 台/ 物理/ 主机/ 之上/ ,/ 高效/ 、/ 准确/ 的/ 同/ 驻/ 检测/ 方法/ 有助于/ 降低/ 攻击者/ 实现/ 同驻/ 的/ 开销/ ./ 根据/ 同驻/ 检测/ 的/ 基本原理/ 不同/ ,/ 可/ 将/ 虚拟机/ 同驻/ 检测/ 方法/ 分为/ 基于/ 网络/ 信息/ 的/ 同/ 驻/ 检测/ 、/ 基于/ 资源/ 干扰/ 的/ 同/ 驻/ 检测/ 和/ 基于/ 隐蔽/ 信道/ 的/ 同/ 驻/ 检测/ ./ 4.2/ ./ 1/ 基于/ 网络/ 信息/ 的/ 虚拟机/ 同驻/ 检测/ Ristenpart/ 等/ 人/ [/ 10/ ]/ 发现/ 在/ AmazonEC2/ 中同/ 驻/ 的/ 两个/ Xen/ 虚拟机/ 之间/ 具有/ 相同/ 的/ 第/ 1/ 跳/ IP地址/ ,/ 较/ 短/ 的/ 网络/ 包/ 往返/ 时间/ ,/ 以及/ 数字/ 上/ 接近/ 的/ 内部/ IP地址/ ;/ 因此/ ,/ 攻击者/ 可以/ 利用/ 两个/ 虚拟机/ 的/ 网络/ 信息/ 来/ 判断/ 它们/ 是否/ 同驻/ ./ 然而/ ,/ 2015/ 年/ ,/ Inci/ 等/ 人/ [/ 38/ ]/ 发现/ ,/ AmazonEC2/ 已经/ 修复/ 了/ 这些/ 网络/ 信息/ 泄露/ 漏洞/ ,/ 上述/ 利用网络/ 信息/ 进行/ 虚拟机/ 同驻/ 检测/ 的/ 方法/ 在/ AmazonEC2/ 中/ 都/ 已/ 不再/ 适用/ ./ 但是/ ,/ 基于/ 网络/ 信息/ 的/ 同/ 驻/ 检测/ 方法/ 仍/ 可能/ 适用/ 于/ 其它/ 的/ 云/ 平台/ ./ 基于/ 网络/ 信息/ 的/ 同/ 驻/ 检测/ ,/ 利用/ 两个/ 虚拟机/ 的/ 网络/ 信息/ 来/ 判断/ 它们/ 之间/ 是否/ 同驻/ ./ 优点/ 是/ 实现/ 简单/ ,/ 检测/ 效率/ 较/ 高/ ,/ 且/ 不会/ 对/ 目标/ 虚拟机/ 的/ 运行/ 造成/ 任何/ 影响/ ;/ 缺点/ 是/ 检测/ 准确率/ 不高/ ,/ 且/ 云/ 平台/ 可以/ 很/ 容易/ 地/ 阻止/ 此类/ 检测/ 方法/ [/ 44/ ]/ ,/ 例如/ 利用/ VPC/ 对/ 不同/ 虚拟机/ 的/ 网络/ 进行/ 隔离/ 等/ ./ 4.2/ ./ 2/ 基于/ 资源/ 干扰/ 的/ 虚拟机/ 同驻/ 检测/ 虽然/ VMM/ 在/ 同/ 驻/ 的/ 虚拟机/ 之间/ 提供/ 了/ 逻辑/ 隔离/ ,/ 但是/ 对于/ 底层/ 共享资源/ 的/ 竞争/ 使用/ 仍然/ 会/ 导致/ 虚拟机/ 之间/ 的/ 相互/ 干扰/ [/ 10/ ,/ 36/ ,/ 46/ ]/ ./ 物理/ 网卡/ 的/ 多路复用/ 会/ 带来/ 网络/ 包/ 延时/ 问题/ [/ 47/ ]/ ,/ 基于/ 此/ ,/ Bates/ 等/ 人/ [/ 48/ -/ 49/ ]/ 设计/ 了/ 一种/ 同驻/ 水印/ 方法/ 进行/ 虚拟机/ 同驻/ 检测/ ./ 具体/ 地/ ,/ 进行/ 同驻/ 检测/ 的/ 虚拟机/ (/ 攻击/ 虚拟机/ )/ 周期性地/ 占用/ 宿主机/ 的/ 物理/ 网卡/ ,/ 向外/ 发送/ 无/ 意义/ 的/ 网络/ 包/ ;/ 与此同时/ ,/ 通过/ 代理/ 与/ 目标/ 虚拟机/ 进行/ 通信/ ,/ 并/ 测量/ 收集/ 它们/ 之间/ 的/ 网络/ 包/ 通信/ 状况/ ./ 如果/ 攻击/ 虚拟机/ 与/ 目标/ 虚拟机/ 同驻/ ,/ 每个/ 检测/ 周期/ 内/ 它们/ 将/ 多路复用/ 宿主机/ 的/ 物理/ 网卡/ ,/ 就/ 会/ 导致/ 代理/ 与/ 目标/ 虚拟机/ 之间/ 的/ 网络通信/ 存在/ 一定/ 的/ 延时/ ,/ 这个/ 延时/ 就是/ 同驻/ 水印/ ./ 因此/ ,/ 通过/ 检测/ 周期/ 内/ 代理/ 与/ 目标/ 虚拟机/ 之间/ 的/ 网络通信/ 是否/ 产生/ 同驻/ 水印/ ,/ 即可/ 判断/ 攻击/ 虚拟机/ 与/ 目标/ 虚拟机/ 是否/ 同驻/ ./ Zhang/ 等/ 人/ [/ 36/ ]/ 设计/ 了/ HomeAlone/ 工具/ ,/ 租户/ 可/ 利用/ HomeAlone/ 来/ 检测/ 是否/ 有/ 其他/ 租户/ 的/ 虚拟机/ 与其/ 同驻/ ,/ 验证/ 租户/ 虚拟机/ 对于/ 物理/ 主机/ 的/ 独占/ 使用/ ./ 其/ 基本/ 思想/ 如下/ :/ 在/ 每个/ 检测/ 周期/ 内/ ,/ 租户/ 控制/ 其/ 所有/ 虚拟机/ 均/ 不/ 使用/ 某一/ 随机/ 选取/ 的/ Cache/ 区域/ ,/ 探测/ 该/ Cache/ 区域/ 的/ 负载/ 状态/ ;/ 若/ 探测/ 到/ Cache/ 负载/ 状态/ 大于/ 设定/ 的/ 阈值/ ,/ 则/ 表明/ 有/ 其它/ 虚拟机/ 使用/ 了/ 该/ Cache/ 区域/ ,/ 从而/ 表明/ 存在/ 其他/ 租户/ 的/ 虚拟机/ 与/ 该/ 租户/ 的/ 虚拟机/ 同驻/ ./ 当/ 目标/ 虚拟机/ 提供/ 公开/ 服务/ 时/ ,/ 其/ 响应/ 服务/ 请求/ 要/ 使用/ 宿主机/ 的/ Cache/ 资源/ ;/ 如果/ 攻击/ 虚拟机/ 与/ 目标/ 虚拟机/ 同驻/ ,/ 那么/ 攻击/ 虚拟机/ 探测/ 到/ 的/ 宿主机/ Cache/ 负载/ 值/ 将/ 明显/ 增大/ ;/ 否则/ ,/ Cache/ 负载/ 值/ 将/ 基本/ 保持/ 不变/ [/ 10/ ]/ ./ 基于/ 上述事实/ ,/ 余思/ 等/ 人/ [/ 12/ ]/ 将/ 虚拟/ Page11/ 机同/ 驻/ 检测/ 问题/ 抽象/ 为/ Cache/ 负载/ 值/ 集合/ 差异性/ 计算/ 问题/ :/ 首先/ ,/ 在/ 访问/ 和/ 不/ 访问/ 目标/ 虚拟机/ 的/ 情况/ 下/ ,/ 攻击者/ 可以/ 获取/ 两个/ Cache/ 负载/ 值/ 集合/ ;/ 然后/ ,/ 对/ 这/ 两个/ 集合/ 进行/ 对比/ 分析/ ,/ 得到/ Cache/ 负载/ 状态/ 的/ 变化/ 情况/ ;/ 最后/ ,/ 基于/ Cache/ 负载/ 特征/ 匹配/ 的/ 方式/ 推断/ 目标/ 虚拟机/ 与/ 攻击/ 虚拟机/ 是否/ 同驻/ ./ 基于/ 资源/ 干扰/ 的/ 虚拟机/ 同驻/ 检测/ ,/ 利用/ 两个/ 虚拟机/ 竞争/ 使用/ 共享资源/ 时/ 是否/ 相互/ 干扰/ 来/ 判断/ 它们/ 是否/ 同驻/ ./ 优点/ 是/ 检测/ 准确率/ 较/ 高/ ;/ 缺点/ 是/ 实现/ 相对/ 复杂/ ,/ 容易/ 受到/ 同一/ 宿主机/ 上/ 其它/ 虚拟机/ 的/ 干扰/ ,/ 并且/ 可能/ 破坏/ 宿主机/ 的/ 资源/ 可用性/ ./ 此外/ ,/ Inci/ 等/ 人/ [/ 38/ ]/ 发现/ 云/ 平台/ 通过/ 优化/ 资源管理/ 机制/ 和/ 虚拟机/ 隔离/ 机制/ ,/ 可以/ 有效/ 降低/ 同驻/ 虚拟机/ 之间/ 的/ 相互/ 干扰/ ;/ 同时/ ,/ 随着/ 硬件/ 技术/ 的/ 不断/ 发展/ ,/ 云/ 平台/ 中/ 使用/ 的/ 硬件/ 也/ 更加/ 复杂/ ,/ 例如/ 固态/ 硬盘/ 允许/ 多个/ 读/ // 写/ 操作/ 同时/ 进行/ ,/ 在/ AmazonEC2/ 云/ 平台/ 中/ 已经/ 很难/ 观察/ 到/ 硬件/ 性能/ 上/ 的/ 衰减/ ./ 4.2/ ./ 3/ 基于/ 隐蔽/ 信道/ 的/ 虚拟机/ 同驻/ 检测/ 隐蔽/ 信道/ [/ 50/ ]/ 是/ 指/ 两个/ 合谋/ 的/ 恶意/ 进程/ 通过/ 预先/ 约定/ 的/ 方式/ 操作系统/ 中/ 的/ 共享资源/ 而/ 实现/ 的/ 一种/ 信息/ 传输方式/ ./ 云/ 计算环境/ 中/ ,/ 合谋/ 的/ 两个/ 虚拟机/ 利用/ 宿主机/ 的/ 共享资源/ 创建/ 隐蔽/ 信道/ ,/ 就/ 可以/ 绕过/ VMM/ ,/ 以/ 一种/ 隐秘/ 地/ 方式/ 进行/ 通信/ ./ Ristenpart/ 等/ 人/ [/ 10/ ]/ 利用/ 基于/ 内存/ 总线/ 和/ 硬盘/ 访问/ 冲突/ 的/ 隐蔽/ 信道/ 来/ 判断/ 两个/ 虚拟机/ 是否/ 同驻/ ;/ Inci/ 等/ 人/ [/ 38/ ]/ 提出/ 一种/ 基于/ LLC/ 访问/ 冲突/ 的/ 隐蔽/ 信道/ 通信/ 方式/ 用于/ 虚拟机/ 同驻/ 检测/ ./ 基于/ 隐蔽/ 信道/ 的/ 虚拟机/ 同驻/ 检测/ 基于/ 两个/ 虚拟机/ 是否/ 能够/ 合谋/ 操作/ 同一/ 宿主机/ 的/ 共享资源/ ,/ 来/ 判断/ 它们/ 是否/ 同驻/ ./ 这种/ 同驻/ 检测/ 方法/ 的/ 优点/ 是/ 误检率/ 低/ ,/ 检测/ 结果/ 比较/ 准确/ ;/ 但是/ ,/ 存在/ 一个/ 致命/ 的/ 缺点/ ,/ 即/ 只能/ 应用/ 于/ 检测/ 与/ 被/ 检测/ 双方/ 均/ 为/ 受控/ 虚拟机/ 的/ 情况/ ,/ 并/ 不适/ 用于/ 现实/ 应用/ 场景/ 中/ 只有/ 攻击/ 虚拟机/ 受控/ 的/ 情况/ ./ 因此/ ,/ 基于/ 隐蔽/ 信道/ 的/ 同/ 驻/ 检测/ 方法/ 一般/ 用于/ 研究/ 人员/ 在/ 实验/ 环境/ 中/ 确定/ 其/ 创建/ 的/ 两个/ 虚拟机/ 同驻/ 这/ 一/ 事实/ ,/ 并/ 在/ 此基础/ 上/ ,/ 分析/ 同驻/ 虚拟机/ 之间/ 的/ 一些/ 特性/ ./ 4.3/ 虚拟机/ 同驻/ 检测/ 方法/ 的/ 评估/ 为了/ 客观/ 而/ 准确/ 评估/ 相关/ 虚拟机/ 同驻/ 检测/ 方法/ 的/ 性能/ ,/ 研究/ 虚拟机/ 同驻/ 检测/ 方法/ 的/ 评测/ 指标/ 与/ 测评/ 方法/ 具有/ 重要/ 的/ 理论/ 价值/ 和/ 实际意义/ ./ 但是/ ,/ 目前/ 有关/ 虚拟机/ 同驻/ 检测/ 方法/ 的/ 研究/ 刚刚/ 起步/ ,/ 而/ 有关/ 其/ 评测/ 研究/ ,/ 则/ 尚未/ 有/ 成熟/ 和/ 完善/ 的/ 理论/ 与/ 方法/ ./ 本节/ 分析/ 讨论/ 适用/ 于/ 虚拟机/ 同驻/ 检测/ 评估/ 的/ 测评/ 原则/ ,/ 并/ 根据/ 提出/ 的/ 测评/ 原则/ 对/ 已有/ 的/ 各类/ 检测/ 方法/ 进行/ 对比/ 分析/ ./ 4.3/ ./ 1/ 虚拟机/ 同驻/ 检测/ 方法/ 的/ 测评/ 原则/ 虚拟机/ 同驻/ 检测/ 方法/ 需要/ 在/ 保证/ 检测/ 效果/ 的/ 同时/ 兼顾/ 检测/ 效率/ 与/ 检测/ 能力/ ,/ 另外/ ,/ 一个/ 好/ 的/ 同/ 驻/ 检测/ 方法/ 应该/ 在/ 现实/ 环境/ 中/ 可行/ ./ 因此/ ,/ 可以/ 从/ 以下/ 几个/ 方面/ 对/ 虚拟机/ 同驻/ 检测/ 方法/ 进行/ 评估/ ./ (/ 1/ )/ 检测/ 效果/ 可以/ 将/ 同/ 驻/ 检测/ 问题/ 抽象/ 为/ 一个/ 二/ 分类/ 问题/ :/ 根据/ 是否/ 与/ 某个/ 特定/ 的/ 虚拟机/ 同驻/ ,/ 可以/ 将/ 其它/ 所有/ 虚拟机/ 分为/ 同驻/ 和/ 不同/ 驻/ 两类/ ./ 表/ 2/ 展示/ 了/ 用于/ 衡量/ 同驻/ 检测/ 的/ 分类/ 准确性/ 的/ 混淆/ 矩阵/ ,/ 其中/ 包含/ 同驻/ 检测/ 的/ 全部/ 4/ 种/ 可能/ 结果/ ./ 果/ 也/ 为/ 同/ 驻/ ;/ 正确/ 接受/ :/ 表示/ 两个/ 虚拟机/ 实际/ 同驻/ ,/ 检测/ 结/ 正确/ 拒绝/ :/ 表示/ 两个/ 虚拟机/ 实际/ 不同/ 驻/ ,/ 检测/ 结果/ 也/ 为/ 不同/ 驻/ ;/ 结果/ 为/ 不同/ 驻/ ;/ 测/ 结果/ 为/ 同/ 驻/ ./ 错误/ 拒绝/ :/ 表示/ 两个/ 虚拟机/ 实际/ 同驻/ ,/ 但/ 检测/ 错误/ 接受/ :/ 表示/ 两个/ 虚拟机/ 实际/ 不同/ 驻/ ,/ 但检/ 实际/ 是否/ 同驻/ 根据/ 混淆/ 矩阵/ ,/ 可以/ 使用/ 分类器/ 的/ 评价/ 指标/ ,/ 包括/ 真正/ 类率/ 、/ 漏报/ 率/ 、/ 误报率/ 、/ 假负/ 类率/ 、/ 正确率/ 、/ 精确度/ 、/ 准确率/ 、/ 召回/ 率/ 以及/ F/ -/ measure/ 等/ [/ 51/ ]/ ,/ 来/ 对/ 同/ 驻/ 检测/ 方法/ 的/ 检测/ 效果/ 进行/ 度量/ ./ (/ 2/ )/ 检测/ 效率/ 检测/ 效率/ 是/ 衡量/ 同驻/ 检测/ 方法/ 性能/ 的/ 一个/ 重要/ 方面/ ,/ 可以/ 利用/ 完成/ 一次/ 同驻/ 检测/ 所/ 需/ 的/ 时间/ 来/ 对/ 检测/ 效率/ 进行/ 评估/ ./ (/ 3/ )/ 检测/ 能力/ 检测/ 能力/ 主要/ 用于/ 反映/ 同驻/ 检测/ 方法/ 能够/ 检测/ 的/ 同/ 驻/ 级别/ ./ 由于/ 虚拟机/ 之间/ 对于/ CPU/ 的/ 共享/ 情况/ 直接/ 决定/ 它们/ 之间/ 的/ Cache/ 共享/ 关系/ ,/ 因此/ ,/ 本文/ 中/ 我们/ 根据/ 虚拟机/ 之间/ 共享/ CPU/ 的/ 情况/ ,/ 将/ 它们/ 之间/ 的/ 同/ 驻/ 级别/ 分为/ :/ 内核/ 级/ 同/ 驻/ ./ 两个/ 虚拟机/ 被/ 分配/ 到/ 同一个/ CPUCPU/ 级/ 同/ 驻/ ./ 两个/ 虚拟机/ 被/ 分配/ 到/ 同一个/ CPU/ 之上/ 运行/ ,/ 包括/ 交替/ 地/ 运行/ 于/ 同一个/ 内核/ 之上/ 的/ 同一个/ 内核/ 之上/ 交替/ 运行/ ;/ Page12/ (/ 内核/ 级/ 同/ 驻/ )/ 以及/ 并行/ 地/ 运行/ 于/ 不同/ 内核/ 之上/ 两种/ 情况/ ;/ 宿主机/ 级/ 同/ 驻/ ./ 两个/ 虚拟机/ 被/ 分配/ 到/ 同一个/ 物理/ 主机/ 之上/ 运行/ ,/ 它们/ 之间/ 可能/ 被/ 分配/ 到/ 同一个/ CPU/ 之上/ 运行/ (/ CPU/ 级/ 同/ 驻/ )/ ,/ 也/ 可能/ 被/ 分配/ 到/ 不同/ 的/ CPU/ 上/ 运行/ ./ (/ 4/ )/ 局限性/ 局限性/ 主要/ 用于/ 衡量/ 同驻/ 检测/ 方法/ 在/ 现实/ 应用环境/ 下/ 的/ 可行性/ ,/ 可以/ 使用/ 限制/ 条件/ 来/ 描述/ 同驻/ 检测/ 算法/ 的/ 局限性/ ,/ 通常/ 来说/ ,/ 限制/ 条件/ 越/ 严格/ ,/ 算法/ 的/ 局限性/ 越强/ 、/ 可行性/ 越低/ ./ 表/ 33/ 类/ 虚拟机/ 同驻/ 检测/ 方法/ 的/ 比较/ 主要/ 优点/ 方法/ 分类/ 基于/ 网络/ 信息/ 的/ 同/ 驻/ 检测/ 方法/ 基于/ 资源/ 干扰/ 的/ 同/ 驻/ 检测/ 方法/ 基于/ 隐蔽/ 信道/ 的/ 同/ 驻/ 检测/ 方法/ 表/ 4/ 各种/ 虚拟机/ 同驻/ 检测/ 方法/ 的/ 比较/ 基于/ 网络/ 信息/ 的/ 同/ 驻/ 检测/ 方法/ [/ 10/ ]/ 一般/ 高/ 宿主机/ 级/ 基于/ 资源/ 干扰/ 的/ 同/ 驻/ 检测/ 方法/ [/ 12/ ]/ 较/ 好/ 中/ 内核/ 级/ 基于/ 隐蔽/ 信道/ 的/ 同/ 驻/ 检测/ 方法/ [/ 10/ ]/ 好/ 中/ 宿主机/ 级/ 可以/ 看出/ :/ 基于/ 隐蔽/ 信道/ 的/ 同/ 驻/ 检测/ 方法/ 误检率/ 低/ 、/ 检测/ 效果/ 最好/ ,/ 但/ 其/ 限制/ 条件/ 较为/ 严格/ ,/ 在/ 现实/ 攻击/ 场景/ 中/ 很/ 难/ 实现/ ,/ 实用性/ 低/ ;/ 基于/ 网络/ 信息/ 的/ 同/ 驻/ 检测/ 方法/ 实现/ 简单/ ,/ 检测/ 效率/ 较/ 高/ ,/ 但/ 其/ 检测/ 准确率/ 低/ 、/ 检测/ 效果/ 一般/ ,/ 而且/ 由于/ 大多数/ 云/ 平台/ 已经/ 支持/ 使用/ VPC/ 来/ 加强/ 网络/ 隔离/ ,/ 导致/ 其/ 实用性/ 严重/ 降低/ ;/ 基于/ 资源/ 干扰/ 的/ 同/ 驻/ 检测/ 方法/ 相对来说/ 实用性/ 最高/ ,/ 是/ 目前/ 虚拟机/ 同驻/ 检测/ 的/ 主流/ 方法/ ./ 5Cache/ 侧/ 信道/ 信息/ 探测/ 方法/ 当前/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 信息/ 探测/ 方法/ 主要/ 有/ 四种/ :/ Prime/ -/ Probe/ 方法/ 、/ Flush/ -/ Reload/ 方法/ 、/ Flush/ -/ Flush/ 方法/ 以及/ Invalidate/ -/ Transfer/ 方法/ ./ 其中/ ,/ Flush/ -/ Flush/ 方法/ 和/ Invalidate/ -/ Transfer/ 方法/ 与/ Flush/ -/ Reload/ 方法/ 的/ 探测/ 原理/ 类似/ ,/ 因此/ ,/ 本/ 节/ 主要/ 对/ Prime/ -/ Probe/ 方法/ 和/ Flush/ -/ Reload/ 方法/ 进行/ 详细/ 的/ 分析/ 和/ 讨论/ ,/ 并/ 将/ Flush/ -/ Flush/ 方法/ 和/ Invalidate/ -/ Transfer/ 方法/ 作为/ Flush/ -/ Reload/ 方法/ 的/ 扩展/ ,/ 进行/ 简单/ 的/ 介绍/ ./ (/ 5/ )/ 实用性/ 实用性/ 主要/ 用于/ 衡量/ 同驻/ 检测/ 方法/ 在/ 现实/ 应用/ 场景/ 下/ 的/ 实用价值/ ./ 4.3/ ./ 2/ 虚拟机/ 同驻/ 检测/ 方法/ 的/ 比较/ 在/ 4.2/ 节中/ ,/ 先后/ 介绍/ 了/ 3/ 类/ 虚拟机/ 同驻/ 检测/ 方法/ ,/ 本节/ 对/ 这/ 3/ 类/ 虚拟机/ 同驻/ 检测/ 方法/ 进行/ 比较/ ,/ 列举/ 其/ 原理/ 及/ 优缺点/ ,/ 见表/ 3/ ;/ 同时/ ,/ 对/ 各种/ 虚拟机/ 同驻/ 检测/ 方法/ 进行/ 对比/ 分析/ ,/ 见表/ 4/ ./ 其中/ ,/ 检测/ 效果/ 用/ “/ 好/ ”/ 、/ “/ 较/ 好/ ”/ 、/ “/ 一般/ ”/ 、/ “/ 差/ ”/ ,/ 检测/ 效率/ 、/ 实用性/ 用/ “/ 高/ ”/ 、/ “/ 较/ 高/ ”/ 、/ “/ 中/ ”/ 、/ “/ 低/ ”/ ,/ 检测/ 能力/ 用/ “/ 内核/ 级/ ”/ 、/ “/ CPU/ 级/ ”/ 、/ “/ 宿主机/ 级/ ”/ 来/ 分别/ 描述/ ./ 5.1/ Prime/ -/ Probe/ 方法/ Prime/ -/ Probe/ (/ PP/ )/ 方法/ 最初/ 由/ Osvik/ 等/ 人/ [/ 20/ ]/ 针对/ 单机/ 计算环境/ 提出/ ,/ 2009/ 年/ ,/ Ristenpart/ 等/ 人/ [/ 10/ ]/ 首先/ 将/ 其/ 应用/ 于云/ 环境/ 中/ ./ 5.1/ ./ 1/ 方法/ 简介/ 机/ 重复/ 下面/ 的/ 步骤/ :/ 利用/ PP/ 探测/ Cache/ 侧/ 信道/ 信息/ 时/ ,/ 攻击/ 虚拟/ (/ 1/ )/ Prime/ ./ 用/ 预先/ 准备/ 的/ 数据/ 填充/ 一个/ 或/ 多个/ Cache/ 组/ ;/ (/ 2/ )/ Trigger/ ./ 访问/ 部署/ 在/ 目标/ 虚拟机/ 中/ 的/ 应用/ ,/ 并且/ 等待/ 一段/ 预设/ 的/ Prime/ -/ Probe/ 间隔时间/ ;/ 在/ 这个/ 过程/ 中/ ,/ 由于/ 要/ 响应/ 服务/ 请求/ ,/ 目标/ 虚拟机/ 执行/ 应用/ 并/ 使用/ Cache/ ;/ (/ 3/ )/ Probe/ ./ 重新/ 读取/ Prime/ 阶段/ 加载/ 的/ 数据/ ,/ 测量/ 并/ 记录/ 各个/ Cache/ 组/ 的/ 读取/ 时间/ ./ 实际/ 探测/ 过程/ 中/ ,/ 为了/ 避免/ 硬件/ 预取/ 导致/ 的/ 时延/ 隐藏/ 问题/ ,/ 通常/ 采用/ Pointer/ -/ Chasing/ [/ 52/ ]/ 技术/ 对/ 预先/ 准备/ 的/ 数据/ 进行/ 组织/ 和/ 操作/ ./ 如图/ 9/ 所示/ ,/ 如果/ 目标/ 虚拟机/ 在/ Trigger/ 阶段/ 使用/ 了/ 一些/ 攻击/ 虚拟机/ 在/ Prime/ 阶段/ 填充/ 的/ Cache/ 组/ ,/ 攻击/ 虚拟机/ Page13/ 位于/ 这些/ Cache/ 组中/ 的/ 数据/ 将/ 被/ 驱逐/ 出/ Cache/ ,/ 导致/ 攻击/ 虚拟机/ 在/ Probe/ 阶段/ 重新/ 读取数据/ 时/ 发生/ Cache/ 失效/ ,/ 从而/ 产生/ 一个/ 较长/ 的/ 读取/ 时间/ ./ 因此/ ,/ 图/ 9Prime/ -/ Probe/ 方法/ PP/ 算法/ 基于/ 以下/ 关键因素/ 实现/ :/ (/ 1/ )/ 攻击者/ 能够/ 识别/ 出/ 与/ 目标/ 用户/ 内存/ 访问/ 活动/ 相关/ 的/ Cache/ 访问/ ,/ 即/ 需要/ 确定/ 目标/ 应用/ 中/ 安全性/ 关键/ 的/ 数据/ 或/ 代码/ 缓存/ 于/ Cache/ 中/ 的/ 哪/ 一个/ 或/ 哪几个/ Cache/ 组中/ ;/ (/ 2/ )/ 攻击/ 虚拟机/ 能够/ 填充/ 指定/ Cache/ 组中/ 的/ 全部/ Cache/ 行/ ,/ 即/ 要求/ 攻击者/ 知道/ Cache/ 与/ 内存地址/ 之间/ 的/ 映射/ 关系/ ;/ (/ 3/ )/ 高分辨率/ 的/ 时钟/ ./ 5.1/ ./ 2/ 应用/ PP/ 方法/ 探测/ L1Cache/ 利用/ PP/ 方法/ 探测/ L1Cache/ 时/ ,/ 通常/ 针对/ 整个/ L1Cache/ 进行/ 探测/ ,/ 然后/ 再/ 使用/ 机器/ 学习/ 方法/ 识别/ 出/ 与/ 目标/ 用户/ 内存/ 访问/ 活动/ 相关/ 的/ Cache/ 使用/ [/ 13/ -/ 14/ ,/ 27/ ]/ ./ PP/ 方法/ 最初/ 只能/ 应用/ 于/ 探测/ L1Cache/ ,/ 这/ 主要/ 是因为/ L1Cache/ 的/ 容量/ 较/ 小/ ,/ 攻击者/ 可以/ 利用/ 数据/ 或/ 代码/ 的/ 虚拟地址/ 确定/ 其/ 在/ L1Cache/ 中/ 的/ 具体位置/ (/ 称为/ 虚拟/ 定址/ )/ ./ 具体/ 地/ ,/ Cache/ 是/ 物理/ 标记/ 的/ ,/ 即/ 使用/ 物理地址/ 来/ 确定/ 数据/ 或/ 代码/ 在/ Cache/ 中/ 的/ 存储/ 位置/ (/ 称为/ 物理/ 定址/ )/ ./ 对于/ 容量/ 较/ 小/ 的/ L1Cache/ ,/ 攻击者/ 可能/ 拥有/ 其/ 地址映射/ 所/ 需/ 的/ 全部/ 物理地址/ 知识/ ./ 如图/ 10/ 所示/ ,/ 与/ 传统/ 计算机/ 相比/ ,/ 虚拟机/ 系统/ 中共/ 包含/ 3/ 种/ 地址/ ,/ 其中/ :/ 虚拟地址/ 是/ 指/ 客户机/ 操作系统/ 提供/ 给/ 其/ 应用程序/ 使用/ 的/ 线性/ 地址/ 空间/ ,/ 对应/ 于/ 传统/ 计算机系统/ 中/ 的/ 虚拟地址/ ;/ 物理地址/ 是/ 指/ 虚拟机/ 能够/ 看到/ 的/ 经过/ VMM/ 抽象/ 的/ 伪/ 物理地址/ ;/ 机器/ 地址/ 是/ 指/ 真实/ 硬件/ 的/ 机器/ 地址/ ,/ 即/ 地址总线/ 上/ 应该/ 出现/ 的/ 地址/ 信号/ ,/ 对应/ 于/ 传统/ 计算机系统/ 中/ 的/ 物理地址/ ./ 系统/ 在/ 进行/ 虚拟地址/ 到/ 物理地址/ 再/ 到/ 机器/ 地址/ 的/ 转换/ 过程/ 中/ ,/ 只/ 对/ 页/ 号/ 部分/ 进行/ 映射/ ,/ 页/ 内/ 地址/ 偏移/ 部分/ 则/ 保留/ 不变/ ;/ 因此/ ,/ 当/ Cache/ 容量/ 小于/ 等于/ 内存/ 页面/ 大/ 小时/ ,/ 虚拟地址/ 的/ 页/ 内/ 地址/ 偏移/ 部分/ 根据/ Probe/ 阶段/ 探测/ 到/ 的/ 各个/ Cache/ 组/ 的/ 重载/ 时间/ ,/ 可以/ 判断/ 目标/ 虚拟机/ 在/ 应用/ 执行/ 中/ 使用/ 了/ 哪些/ Cache/ 组/ ./ 将/ 保留/ Cache/ 与/ 物理/ 内存/ 之间/ 进行/ 映射/ 所/ 需/ 的/ 全部/ 地址/ 信息/ ,/ 使/ Cache/ 由/ 物理/ 定址/ 变为/ 虚拟/ 定址/ ./ 但是/ ,/ 当/ Cache/ 容量/ 大于/ 内存/ 页面/ 大/ 小时/ ,/ Cache/ 只能/ 物理/ 定址/ ,/ 此时/ ,/ 攻击者/ 只能/ 控制/ 其/ 数据/ 或/ 代码/ 的/ 虚拟地址/ ,/ 不/ 知道/ 也/ 无法控制/ 其/ 物理地址/ 和/ 机器/ 地址/ ,/ 也/ 就/ 无法控制/ 其/ 私有/ 数据/ 填充/ 指定/ 的/ Cache/ 组/ ./ 5.1/ ./ 3/ 应用/ PP/ 方法/ 探测/ LLC/ 除了/ 物理/ 定址/ 问题/ ,/ 使用/ PP/ 探测/ LLC/ 的/ 挑战/ 还/ 在于/ :/ (/ 1/ )/ LLC/ 的/ 非/ 公开/ 哈希/ 索引/ 机制/ ./ LLC/ 各/ 分片/ 与/ 物理/ 内存地址/ 之间/ 的/ 映射/ 关系/ 由/ 一个/ 非/ 公开/ 的/ 哈希/ 函数/ 确定/ ,/ 即使/ 攻击者/ 可以/ 判断/ 一个/ Cache/ 组中/ 包含/ 有/ 哪些/ Cache/ 行/ ,/ 也/ 不/ 知道/ 这些/ Cache/ 行/ 分别/ 对应/ 于/ LLC/ 的/ 哪个/ 分片/ ;/ (/ 2/ )/ 安全性/ 关键/ 访问/ 相关/ 的/ Cache/ 组/ ./ 对于/ 容量/ 较大/ 的/ LLC/ (/ 通常/ 大于/ 2MB/ )/ 来说/ ,/ 对/ 整个/ LLC/ 进行/ 一次/ Prime/ 或/ Probe/ 的/ 时间/ 较长/ ,/ 如果/ 每次/ 都/ 探测/ 整个/ LLC/ ,/ 将/ 无法/ 以/ 足够/ 的/ 分辨率/ 探测/ 得到/ 有用/ 的/ 信息/ ./ 导致/ 使用/ PP/ 探测/ LLC/ 时/ ,/ 只能/ 监控/ 那些/ 与/ 目标/ 应用/ 安全性/ 关键/ Page14/ 访问/ 相关/ 的/ Cache/ 组/ ,/ 因此/ 需要/ 确定/ 目标/ 应用/ 中/ 安全性/ 关键/ 的/ 数据/ 或/ 代码/ 缓存/ 于/ LLC/ 中/ 的/ 哪/ 一个/ 或/ 几个/ Cache/ 组中/ ./ 针对/ 上述/ 问题/ ,/ Liu/ 等/ 人/ [/ 14/ ]/ 通过/ 在/ 攻击/ 虚拟机/ 中/ 使用/ 大/ 内存/ 页/ ,/ 利用/ 大页/ 映射/ 产生/ 的/ 额外/ 页/ 内/ 地址/ 偏移/ 来/ 保留/ LLC/ 与/ 虚拟地址/ 之间/ 的/ 映射/ 关系/ ;/ 同时/ ,/ 利用/ Cache/ 组内/ 各/ Cache/ 行/ 之间/ 的/ 驱逐/ 关系/ 来/ 按照/ 分片/ 进行/ Cache/ 行/ 划分/ ,/ 绕过/ 了/ LLC/ 地址映射/ 不/ 透明/ 的/ 问题/ ;/ 最后/ ,/ 通过/ 对/ LLC/ 进行/ 扫描/ ,/ 一次/ 监控/ 一个/ Cache/ 组在/ 探测/ 周期/ 内/ 的/ 时态/ 访问/ 模式/ ,/ 并/ 判断/ 是否/ 与/ 目标/ 应用/ 的/ 安全性/ 关键/ 访问/ 一致/ ,/ 直到/ 确定/ 目标/ 应用/ 中/ 安全性/ 关键/ 的/ 数据/ 或/ 代码/ 对应/ 的/ Cache/ 组/ ./ 与此同时/ ,/ Irazoqui/ 等/ 人/ [/ 17/ ]/ 也/ 利用/ 大页/ 映射/ 解决/ LLC/ 的/ 地址映射/ 问题/ ,/ 并/ 通过/ 将/ 探测/ 数据/ 从/ 除/ LLC/ 之外/ 的/ 多级/ Cache/ 中/ 驱逐/ 的/ 方法/ 来/ 降低/ 其它/ 高级别/ Cache/ 对于/ 探测/ 结果/ 的/ 影响/ ./ Inci/ 等/ 人/ [/ 38/ ]/ 和/ Kayaalp/ 等/ 人/ [/ 39/ ]/ 以及/ 文献/ [/ 53/ -/ 55/ ]/ 通过/ 对/ LLC/ 的/ 索引/ 哈希/ 机制/ 进行/ 逆向/ 工程/ ,/ 恢复/ 了/ 物理/ 内存地址/ 与/ LLC/ 的/ 地址映射/ 关系/ ,/ 从根本上/ 解决/ 了/ LLC/ 与/ 物理/ 内存/ 地址映射/ 不/ 透明/ 的/ 问题/ ./ Kayaalp/ 等/ 人/ [/ 39/ ]/ 则/ 通过/ 访问/ 一个/ Cache/ 组时/ 是否/ 对/ 目标/ 应用/ 造成/ 影响/ 来/ 判断/ 该/ Cache/ 组/ 是否/ 对应/ 于/ 目标/ 应用/ 的/ 安全性/ 关键/ 访问/ ./ 5.2/ Flush/ -/ Reload/ 方法/ 2013/ 年/ ,/ Yarom/ 等/ 人/ [/ 16/ ]/ 利用/ Cache/ 刷新/ 指令/ (/ Clflush/ )/ 可以/ 将/ 指定/ 内存/ 块/ 从/ 全部/ 多级/ Cache/ 中/ 驱逐/ 以及/ Cache/ 具有/ 包容性/ 的/ 特点/ ,/ 对/ 文献/ [/ 21/ ]/ 中/ 的/ 方法/ 进行/ 了/ 扩展/ ,/ 提出/ 了/ Flush/ -/ Reload/ (/ FR/ )/ 攻击/ 图/ 11Flush/ -/ Reload/ 方法/ 5.2/ ./ 2Flush/ -/ Reload/ 方法/ 的/ 应用/ 实际/ 应用/ 时/ ,/ 为了/ 得到/ 目标/ 应用/ 中/ 安全性/ 关键/ 的/ 数据/ 或/ 代码/ 的/ 内存/ 位置/ ,/ 攻击者/ 通常/ 需要/ 对/ 被/ 攻击/ 的/ 目标/ 应用/ 进行/ 逆向/ 工程/ ,/ 来/ 定位/ 这些/ 安全性/ 关键/ 的/ 内存/ 块/ 的/ 具体位置/ ./ Flush/ -/ Reload/ 攻击/ 基于/ 假设/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 共享内存/ 页面/ 实现/ ,/ 方法/ ./ Flush/ -/ Reload/ 基于/ 共享内存/ 实现/ ,/ 是/ 虚拟化/ 环境/ 中/ 第/ 1/ 个/ 跨/ 内核/ 、/ 跨/ 虚拟机/ 的/ Cache/ 探测/ 方法/ ./ 5.2/ ./ 1/ 方法/ 简介/ 利用/ FR/ 探测/ Cache/ 侧/ 信道/ 信息/ 时/ ,/ 攻击/ 虚拟机/ 重复/ 下面/ 的/ 操作/ :/ (/ 1/ )/ Flush/ ./ 将/ 共享内存/ 中/ 指定/ 位置/ 的/ 内存/ 块/ 驱逐/ 出/ Cache/ ;/ (/ 2/ )/ Trigger/ ./ 访问/ 部署/ 在/ 目标/ 虚拟机/ 中/ 的/ 应用/ ,/ 并且/ 等待/ 一个/ 预先/ 设定/ 的/ Flush/ -/ Reload/ 间隔/ ;/ 在/ 这个/ 过程/ 中/ ,/ 由于/ 要/ 响应/ 服务/ 请求/ ,/ 目标/ 虚拟机/ 执行/ 应用/ 并/ 使用/ Cache/ ;/ (/ 3/ )/ Reload/ ./ 重新/ 加载/ 这些/ 指定/ 位置/ 的/ 内存/ 块/ ,/ 测量/ 并/ 记录/ 各个/ 数据/ 块/ 的/ 重载/ 时间/ ./ 如图/ 11/ 所示/ ,/ Flush/ 阶段/ ,/ 攻击/ 虚拟机/ 将/ 指定/ 位置/ 的/ 内存/ 块/ 驱逐/ 出/ Cache/ ,/ 如果/ 在/ Trigger/ 阶段/ 目标/ 虚拟机/ 访问/ 了/ 其中/ 的/ 一些/ 内存/ 块/ ,/ 这些/ 数据/ 将/ 被/ 重新/ 加载/ 到/ Cache/ ;/ 那么/ ,/ Reload/ 阶段/ 对/ 这些/ 内存/ 块/ 的/ 重载/ 将/ 发生/ 缓存/ 命中/ ,/ 从而/ 得到/ 一个/ 显著/ 降低/ 的/ 重载/ 时间/ ./ 因此/ ,/ 根据/ Reload/ 阶段/ 的/ 重载/ 时间/ ,/ 可以/ 判断/ 目标/ 虚拟机/ 是否/ 访问/ 了/ 共享内存/ 中/ 指定/ 位置/ 的/ 数据/ 块/ ,/ 并/ 进一步/ 判断/ 目标/ 虚拟机/ 访问/ 了/ 哪些/ 数据/ 或/ 执行/ 了/ 哪些/ 指令/ ./ FR/ 算法/ 实现/ 基于/ 以下/ 关键因素/ :/ (/ 1/ )/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 共享内存/ 页面/ ;/ (/ 2/ )/ 攻击/ 虚拟机/ 可以/ 无/ 限制/ 地/ 使用/ Cache/ 刷新/ 指令/ ;/ (/ 3/ )/ 攻击/ 虚拟机/ 知道/ 目标/ 应用/ 中/ 安全性/ 关键/ 的/ 数据/ 或/ 代码/ 的/ 内存/ 位置/ ;/ (/ 4/ )/ Cache/ 多级/ 架构/ 具有/ 包容性/ 的/ 特点/ ;/ (/ 5/ )/ 高分辨率/ 的/ 时钟/ ./ 这种/ 共享/ 可以/ 基于/ 页面/ 的/ 来源/ ,/ 比如/ 共享/ 的/ 代码/ 库/ 或/ 加密/ 库/ ;/ 或者/ 基于/ 合并/ 内容/ 相同/ 的/ 页面/ ,/ 比如/ Linux/ 的/ 内核/ 同页/ 合并/ (/ KernelSamePageMerging/ ,/ KSM/ )/ [/ 56/ ]/ ,/ VMWareESX/ 的/ 透明/ 页面/ 共享/ (/ Trans/ -/ parentPageSharing/ ,/ TPS/ )/ [/ 57/ ]/ 以及/ Xen/ 的/ 内存/ 写时/ 复制/ (/ MemoryCopyonWrite/ ,/ MemoryCOW/ )/ [/ 58/ ]/ Page15/ 等/ ./ 共享内存/ 页面/ 可以/ 为/ 攻击者/ 提供/ 丰富/ 的/ 信息/ ,/ 例如/ :/ 其它/ 同驻/ 虚拟机/ 中/ 使用/ 的/ ECDSA/ 签名/ 算法/ 的/ 密钥/ [/ 59/ -/ 61/ ]/ 和/ AES/ 密钥/ [/ 62/ -/ 63/ ]/ ,/ 运行/ 的/ 软件加密/ 库/ [/ 64/ ]/ ,/ 加密/ 消息/ 的/ 明文/ [/ 65/ ]/ ,/ 同驻/ 租户/ 的/ 敏感数据/ [/ 66/ ]/ 以及/ 击键/ 信息/ [/ 67/ ]/ 等/ ./ 5.2/ ./ 3Flush/ -/ Reload/ 方法/ 的/ 扩展/ (/ 1/ )/ Flush/ -/ Flush/ 方法/ Gruss/ 等/ 人/ [/ 40/ ]/ 发现/ Cache/ 刷新/ 指令/ Clflush/ 的/ 执行/ 时间/ 可以/ 用来/ 判断/ 被/ 刷新/ 的/ 内存/ 块/ 是否/ 位于/ Cache/ 中/ :/ 被/ 刷新/ 的/ 内存/ 块/ 不/ 在/ Cache/ 中时/ ,/ Clflush/ 指令/ 将/ 提前/ 终止/ ,/ 从而/ 产生/ 较/ 短/ 的/ 执行/ 时间/ ;/ 被/ 刷新/ 的/ 内存/ 块/ 在/ Cache/ 中时/ ,/ Clflush/ 指令/ 需要/ 将/ 其/ 从/ 全部/ 多级/ Cache/ 中/ 驱逐/ ,/ 导致/ 执行/ 时间/ 较长/ ./ 基于/ 此/ ,/ Gruss/ 等/ 人/ 去掉/ 了/ Flush/ -/ Reload/ 方法/ 中/ 的/ Reload/ 步骤/ ,/ 提出/ 了/ Flush/ -/ Flush/ 攻击/ 方法/ ./ Flush/ -/ Flush/ 方法/ 连续/ 两次/ 使用/ Clflush/ 指令/ 将/ 指定/ 位置/ 的/ 内存/ 块/ 驱逐/ 出/ Cache/ ,/ 并/ 根据/ 第/ 2/ 次/ Clflush/ 指令/ 的/ 执行/ 时间/ 来/ 判断/ 在/ 这/ 期间/ 目标/ 虚拟机/ 是否/ 使用/ 了/ 这些/ 内存/ 块/ ./ 由于/ 去掉/ 了/ Reload/ 步骤/ ,/ Flush/ -/ Flush/ 方法/ 缩短/ 了/ 一轮/ 探测/ 所/ 需/ 时间/ ,/ 可以/ 提供/ 更/ 高/ 的/ 探测/ 分辨率/ ,/ 同时/ 也/ 增加/ 了/ 攻击/ 的/ 隐匿性/ ./ 但是/ ,/ 与/ Cache/ 命中/ 和/ 失效/ 产生/ 的/ Cache/ 访问/ 时间/ 差异/ 信息/ 相比/ ,/ Clflush/ 指令/ 执行/ 时间/ 的/ 差异/ 信息/ 较/ 小/ ,/ 导致/ Flush/ -/ Flush/ 方法/ 的/ 探测/ 准确率/ 没有/ Flush/ -/ Reload/ 方法/ 高/ ./ (/ 2/ )/ Invalidate/ -/ Transfer/ 方法/ 2016/ 年/ ,/ Irazoqui/ 等/ 人/ [/ 18/ ]/ 发现/ 在/ 多处理器/ 配置/ 下/ ,/ 由于/ 需要/ 保持/ 多处理器/ 间/ Cache/ 内容/ 的/ 一致性/ ,/ 表/ 5Prime/ -/ Probe/ 方法/ 和/ Flush/ -/ Reload/ 方法/ 比较/ 方法/ 信息/ 泄露/ 来源/ PPCache/ 争用/ FR/ 数据/ 重用/ 6/ 总结/ 与/ 展望/ 作为/ 云/ 计算环境/ 面临/ 的/ 一种/ 重要/ 安全/ 威胁/ ,/ 跨当/ 一个/ 处理器/ 发生/ Cache/ 失效/ 时/ ,/ 失效/ 的/ 数据/ 是否/ 缓存/ 于/ 另/ 一个/ 处理器/ Cache/ 中/ ,/ 将/ 产生/ 从/ 另/ 一个/ 处理器/ Cache/ 读取数据/ 和/ 直接/ 从/ 内存/ 读取数据/ 两种/ 可能/ ,/ 这/ 将/ 导致/ Cache/ 访问/ 时间/ 差异/ (/ 大约/ 50/ 个/ 时钟/ 周期/ )/ ./ 基于/ 上述事实/ ,/ Irazoqui/ 等/ 人/ 首次/ 提出/ 并/ 实现/ 了/ 跨/ 处理器/ 的/ Invalidate/ -/ Transfer/ 攻击/ 方法/ ,/ 并/ 恢复/ 了/ 另/ 一个/ 处理器/ 上/ 运行/ 的/ 加密/ 软件/ 库中/ 使用/ 的/ AES/ 密钥/ 和/ ElGamal/ 密钥/ ./ Invalidate/ -/ Transfer/ 方法/ 先/ 将/ 指定/ 的/ 共享内存/ 块/ 在/ Cache/ 中/ 的/ 副本/ 标记/ 为/ 无效/ ,/ 然后/ 等待/ 一段时间/ 后/ ,/ 再/ 重新/ 访问/ 上述/ 指定/ 的/ 内存/ 块/ ,/ 并/ 根据/ 重载/ 时间/ 来/ 判断/ 在此期间/ 攻击/ 目标/ 是否/ 使用/ 了/ 这些/ 内存/ 块/ ./ 进一步/ 地/ ,/ 根据/ 重载/ 时间/ 的/ 差异/ 还/ 可以/ 判断/ 攻击者/ 和/ 攻击/ 目标/ 是否/ 运行/ 于/ 同一个/ CPU/ 之上/ ./ 5.3/ Cache/ 侧/ 信道/ 信息/ 探测/ 方法/ 的/ 比较/ 本节/ 从/ 信息/ 泄露/ 来源/ 、/ 应用/ 场景/ 、/ 实现/ 条件/ 、/ 优缺点/ 等/ 方面/ 对/ Prime/ -/ Probe/ 方法/ 和/ Flush/ -/ Reload/ 方法/ 进行/ 对比/ 分析/ ,/ 见表/ 5/ ./ 从表/ 5/ 可以/ 看出/ ,/ Prime/ -/ Probe/ 方法/ 和/ Flush/ -/ Reload/ 方法/ 针对/ 不同/ 的/ 应用/ 需求/ ,/ 有/ 各自/ 的/ 优缺点/ 及/ 应用/ 挑战/ ,/ 具体方法/ 的/ 选取/ 取决于/ 应用/ 场景/ 和/ 攻击者/ 具备/ 的/ 能力/ 等/ ./ 当/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 之间/ 共享内存/ 时/ ,/ 采用/ Flush/ -/ Reload/ 方法/ ,/ 攻击者/ 可以/ 得到/ 更/ 细粒度/ 且/ 更为/ 丰富/ 的/ 信息/ ;/ 当/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 没有/ 共享内存/ 时/ ,/ 攻击者/ 只能/ 采用/ Prime/ -/ Probe/ 方法/ ./ 因此/ ,/ Flush/ -/ Reload/ 方法/ 的/ 适用范围/ 受到/ 了/ 严格/ 的/ 限制/ ,/ Prime/ -/ Probe/ 方法/ 则/ 更为/ 通用/ ./ (/ 1/ )/ 实现/ 简单/ (/ 2/ )/ 对于/ 目标/ 应用/ 不/ 敏感/ ,/ 通用性/ 强/ (/ 1/ )/ 能够/ 得到/ 更/ 精确/ 的/ 信息/ (/ 2/ )/ 不受/ Cache/ 与/ 内存/ 之间/ 地址映射/ 以及/ 地址/ 多样化/ 技术/ (/ 如/ ASLR/ )/ 的/ 影响/ (/ 3/ )/ 分析方法/ 相对/ 简单/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 已/ 引起/ 了/ 学术界/ 和/ 工业界/ 的/ 广泛/ 关注/ ./ 本文/ 分析/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 攻击/ 机理/ 和/ 实现/ 方式/ ,/ 并/ 着重/ 对/ 虚拟机/ 同驻/ 相关/ 问题/ 和/ Cache/ 侧/ 信道/ 信息/ 探测/ 技术/ 进行/ 了/ 阐述/ ./ Page16/ 总体/ 来说/ ,/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 还是/ 一个/ 较/ 新/ 的/ 研究/ 领域/ ,/ 许多/ 研究/ 工作/ 仍然/ 处于/ 起步/ 阶段/ ,/ 在/ 理论/ 和/ 应用/ 上/ 都/ 还/ 存在/ 一些/ 有/ 价值/ 的/ 研究/ 问题/ ./ 6.1/ 虚拟机/ 同驻/ 检测/ 方面/ 攻击/ 虚拟机/ 和/ 目标/ 虚拟机/ 同驻/ 是/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 必要条件/ 和/ 重要/ 基础/ ,/ 而/ 虚拟机/ 同驻/ 检测/ 方法/ 则/ 是/ 实现/ 同驻/ 的/ 过程/ 中/ 比较/ 重要/ 且/ 关键/ 的/ 一个/ 部分/ ./ 现有/ 研究/ 中/ ,/ 基于/ 网络/ 信息/ 的/ 同/ 驻/ 检测/ 方法/ 实现/ 简单/ ,/ 检测/ 效率/ 较/ 高/ ,/ 但是/ 检测/ 准确率/ 低/ ,/ 只能/ 作为/ 其它/ 同驻/ 检测/ 方法/ 的/ 辅助/ 手段/ 使用/ ;/ 基于/ 隐蔽/ 信道/ 的/ 同/ 驻/ 检测/ 方法/ 误检率/ 低/ 、/ 检测/ 效率/ 也/ 比较/ 高/ ,/ 但/ 其/ 实用性/ 低/ ,/ 只能/ 用于/ 检测/ 双方/ 均/ 为/ 受控/ 虚拟机/ 的/ 情况/ ,/ 这/ 在/ 现实/ 攻击/ 场景/ 中/ 很/ 难/ 实现/ ;/ 基于/ 资源/ 干扰/ 的/ 同/ 驻/ 检测/ 方法/ 虽然/ 实现/ 复杂/ ,/ 但/ 检测/ 准确率/ 较/ 高/ ,/ 适用范围/ 最广/ ,/ 但是/ ,/ 随着/ 虚拟机/ 资源管理/ 机制/ 的/ 优化/ 以及/ 硬件/ 技术/ 的/ 不断/ 发展/ ,/ 同驻/ 虚拟机/ 之间/ 的/ 相互/ 干扰/ 越来越/ 难/ 被/ 观察/ 发现/ ./ 因此/ ,/ 如何/ 设计/ 更为/ 准确/ 、/ 高效/ 、/ 实用/ 的/ 虚拟机/ 同驻/ 检测/ 方法/ ,/ 还/ 需要/ 进一步/ 研究/ ./ 6.2/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 方面/ 目前/ ,/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 的/ 相关/ 研究/ 较/ 少/ ,/ 主要/ 是/ 将/ 传统/ 时序/ 驱动/ 攻击/ 方法/ 直接/ 应用/ 于/ 跨/ 虚拟机/ 攻击/ 场景/ 中/ ./ 一方面/ ,/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 并/ 没有/ 解决/ 传统/ 时序/ 驱动/ 攻击/ 中/ 存在/ 的/ 两个/ 主要/ 问题/ :/ 一是/ 攻击/ 条件/ 过于/ 严格/ ,/ 为了/ 采集/ 加密/ 时间/ 以/ 创建/ 模板/ ,/ 攻击者/ 需/ 预先/ 获取/ 目标/ 系统/ 的/ 详细/ 配置/ 参数/ 并/ 重建/ 相同/ 的/ 本地/ 对照/ 环境/ ,/ 这/ 在/ 实际/ 攻击/ 场景/ 中/ 很/ 难/ 实现/ ;/ 二是/ 创建/ 模板/ 时/ 所/ 需/ 样本量/ 大/ ,/ 一般/ 都/ 以/ 百万计/ ,/ 而且/ 离线/ 分析方法/ 比较复杂/ [/ 32/ ]/ ./ 因此/ ,/ 如何/ 在/ 没有/ 对照/ 环境/ 的/ 情况/ 下/ ,/ 设计/ 能够/ 直接/ 采集/ 目标/ 端的/ 加密/ 时间/ 来/ 创建/ 模板/ 的/ 攻击/ 方案/ 是/ 一个/ 富有/ 挑战性/ 的/ 工作/ ;/ 如何/ 将/ 更/ 多/ 的/ 数学分析/ 方法/ 与/ 现有/ 的/ 离线/ 分析方法/ 结合/ 起来/ ,/ 从而/ 简化/ 分析/ 过程/ ,/ 提高/ 密钥/ 分析/ 效率/ ,/ 从而/ 减少/ 创建/ 模板/ 所/ 需要/ 采集/ 的/ 样本量/ ,/ 也/ 是/ 颇具/ 挑战性/ 的/ 问题/ ./ 另一方面/ ,/ 根据/ 分析方法/ 不同/ ,/ 传统/ 时序/ 驱动/ 攻击/ 可以/ 分为/ Cache/ 碰撞/ 计时/ 攻击/ 和/ Cache/ 计时/ 模板/ 攻击/ 两类/ [/ 70/ ]/ ,/ 而/ 现有/ 跨/ 虚拟机/ 时序/ 驱动/ 攻击/ 都/ 属于/ Cache/ 计时/ 模板/ 攻击/ ./ 因此/ ,/ 将/ 传统/ Cache/ 碰撞/ 计时/ 攻击/ 引入/ 跨/ 虚拟机/ 攻击/ 场景/ 中/ ,/ 并/ 解决/ 迁移/ 过程/ 中/ 可能/ 遇到/ 的/ 问题/ ,/ 也/ 具有/ 重要/ 的/ 意义/ ./ 6.3/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 方面/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 是/ 一种/ 非/ 入侵/ 式/ 的/ 攻击方式/ ,/ 由于/ 其/ 利用/ 虚拟机/ 之间/ 共享/ 的/ 底层/ 硬件资源/ 进行/ 攻击/ ,/ 而/ 不是/ 利用/ 系统/ 本身/ 的/ 逻辑/ 漏洞/ 进行/ 攻击/ ,/ 因此/ ,/ 极难/ 防御/ ./ 目前/ ,/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 已经/ 有/ 一些/ 研究成果/ ,/ 一方面/ ,/ 利用/ 虚拟化/ 系统/ 环境/ 为/ 攻击者/ 带来/ 的/ 新/ 能力/ ,/ 例如/ ,/ 修改/ 内存/ 页面/ 大小/ 等/ ,/ 对/ 传统/ 的/ Prime/ -/ Probe/ 攻击/ 方法/ 进行/ 了/ 扩展/ ,/ 使/ 其/ 能够/ 支持/ 跨/ 内核/ 攻击/ ;/ 另一方面/ ,/ 基于/ 某些/ 系统/ 共享内存/ 页面/ 的/ 特点/ ,/ 设计/ 提出/ 了/ Flush/ -/ Reload/ 、/ Flush/ -/ Flush/ 以及/ Invalidate/ -/ Transfer/ 攻击/ 方法/ ,/ 并且/ 已经/ 可以/ 支持/ 跨/ CPU/ 进行/ 攻击/ ./ 但是/ ,/ 现有/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 方法/ 大多/ 是/ 在/ 较为理想/ 的/ 假设/ 条件/ 下/ 进行/ ,/ 如/ 假设/ 攻击者/ 具有/ 密码/ 库及/ 密码/ 算法/ 实现/ 方式/ 的/ 背景/ 知识/ 、/ 可以/ 精确/ 地/ 在/ 密码/ 算法/ 执行/ 前后/ 探测/ 采集/ Cache/ 侧/ 信道/ 信息/ ,/ 以及/ 可以/ 准确/ 地/ 定位/ 密码/ 算法/ 使用/ 的/ Cache/ 组/ 地址/ 等/ ./ 因此/ ,/ 在/ 以后/ 的/ 研究/ 中/ ,/ 如何/ 摆脱/ 上述/ 假设/ 条件/ 的/ 限制/ ,/ 提高/ 跨/ 虚拟机/ 访问/ 驱动/ 攻击/ 在/ 现实/ 环境/ 中/ 的/ 实用性/ 和/ 通用性/ ,/ 也/ 是/ 一个/ 极具/ 挑战性/ 的/ 研究/ 方向/ ./ 另外/ ,/ 现有/ 攻击/ 方法/ 大多/ 没有/ 考虑/ 虚拟化/ 环境/ 中/ 的/ 各种/ 软硬件/ 特征/ 、/ VMM/ 系统/ 负载/ 以及/ 其它/ 同驻/ 虚拟机/ 活动/ 等/ 给/ Cache/ 探测/ 结果/ 引入/ 的/ 噪声/ 和/ 干扰/ ,/ 这/ 也/ 将/ 严重/ 影响/ 攻击/ 的/ 实用性/ ,/ 因为/ 在/ 现实/ 环境/ 中/ 这类/ 噪声/ 和/ 干扰/ 是/ 真实/ 且/ 普遍存在/ 的/ ,/ 很难/ 避免/ ./ 因此/ ,/ 对/ 虚拟化/ 环境/ 中/ 存在/ 的/ 各种/ 噪声/ 和/ 干扰/ 进行/ 分类/ 、/ 建模/ 、/ 量化/ ,/ 并/ 有/ 针对性/ 地/ 设计/ 过滤/ 方法/ ,/ 也/ 是/ 一个/ 值得/ 研究/ 的/ 方向/ ./ 6.4/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 方法/ 评估/ 方面/ 由于/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 是/ 针对/ 密码/ 算法/ 实现/ 的/ 一种/ 攻击方式/ ,/ 其/ 攻击/ 效果/ 受/ 底层/ 硬件/ 配置/ 、/ 系统/ 环境/ 、/ 密码/ 库/ 版本/ 、/ 密码/ 实现/ 方式/ 、/ 信息/ 采集/ 手段/ 以及/ 攻击者/ 和/ 攻击/ 目标/ 的/ 同/ 驻/ 等级/ 等/ 多个/ 因素/ 的/ 影响/ ,/ 导致/ 很难/ 对/ 不同/ 攻击/ 方法/ 的/ 可行性/ 及/ 威胁性/ 进行/ 统一/ 的/ 量化/ 评估/ ./ 因此/ ,/ 如何/ 建立/ 评估/ 指标体系/ 和/ 评估/ 模型/ ,/ 量化/ 各种因素/ 对于/ 攻击/ 方法/ 的/ 影响/ ,/ 从而/ 对/ 众多/ 的/ 攻击/ 方法/ 进行/ 统一/ 客观/ 的/ 性能/ 评估/ ,/ 也/ 是/ 今后/ 的/ 一个/ 重要/ 研究/ 方向/ ./ 6.5/ 其它/ 方面/ 云/ 计算/ 包含/ 3/ 种/ 不同/ 的/ 服务类型/ :/ 基础设施/ 即/ 服务/ (/ InfrastructureasaService/ ,/ IaaS/ )/ 、/ 平台/ 即/ 服务/ (/ PlatformasaService/ ,/ PaaS/ )/ 以及/ 软件/ 即/ 服务/ (/ SoftwareasaService/ ,/ SaaS/ )/ ./ 目前/ ,/ 云/ 环境/ 中/ 有关/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 研究/ 工作/ ,/ 除/ 文献/ [/ 66/ ]/ 以外/ ,/ 都/ 是/ 围绕/ IaaS/ 云/ 平台/ 展开/ ./ 因此/ ,/ 将/ Cache/ 侧/ 信道/ 攻击/ 扩展/ 到/ IaaS/ 层/ 之上/ 的/ PaaS/ 或/ SaaS/ ,/ 甚至/ 轻量级/ 虚拟化/ 方案/ Docker/ 中/ ,/ 也/ 具有/ 重/ Page17/ 要/ 的/ 意义/ ./ 7/ 结束语/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 是/ 云/ 安全/ 领域/ 的/ 热点问题/ ./ 随着/ 云/ 计算/ 的/ 持续/ 快速/ 发展/ ,/ 该/ 问题/ 得到/ 了/ 国内外/ 研究/ 人员/ 的/ 极大/ 关注/ ./ 针对/ 这一/ 问题/ ,/ 本文/ 首先/ 讨论/ 了/ 共享/ Cache/ 带来/ 的/ 信息/ 泄露/ 问题/ ,/ 这是/ 深入/ 理解/ Cache/ 侧/ 信道/ 攻击/ 机理/ 与/ 方法/ 的/ 理论/ 基础/ ;/ 然后/ 介绍/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 的/ 起源/ 与/ 研究进展/ ,/ 分析/ 总结/ 了/ 其/ 与/ 传统/ Cache/ 侧/ 信道/ 攻击/ 的/ 区别/ 与/ 联系/ ,/ 并/ 给出/ 了/ 跨/ 虚拟机/ 访问/ 驱动/ Cache/ 侧/ 信道/ 攻击/ 的/ 通用/ 模型/ ;/ 接下来/ ,/ 介绍/ 了/ 虚拟机/ 同驻/ 相关/ 问题/ ,/ 讨论/ 了/ 虚拟机/ 资源/ 调度/ 策略/ 对于/ 虚拟机/ 同驻/ 的/ 影响/ ,/ 介绍/ 了/ 虚拟机/ 同驻/ 检测/ 的/ 各种/ 方法/ ,/ 分析/ 讨论/ 了/ 适用/ 于/ 虚拟机/ 同驻/ 检测/ 方法/ 评估/ 的/ 测评/ 原则/ ,/ 并/ 根据/ 提出/ 的/ 测评/ 原则/ 对/ 各种/ 虚拟机/ 同驻/ 检测/ 方法/ 进行/ 了/ 对比/ 分析/ ;/ 最后/ ,/ 重点/ 阐述/ 了/ 当前/ 用于/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 信息/ 探测/ 的/ 主要/ 方法/ ,/ 并/ 从/ 信息/ 泄露/ 来源/ 、/ 应用/ 场景/ 、/ 实现/ 条件/ 等/ 方面/ 进行/ 了/ 分析/ 比较/ ./ 本文/ 还/ 重点/ 讨论/ 了/ 跨/ 虚拟机/ Cache/ 侧/ 信道/ 攻击/ 研究/ 中/ 存在/ 的/ 问题/ 和/ 挑战/ ,/ 并/ 展望/ 了/ 未来/ 可能/ 的/ 研究/ 方向/ ./ 致谢/ 在/ 此/ ,/ 我们/ 向/ 对/ 本文/ 提出/ 宝贵/ 修改意见/ 的/ 评审/ 老师/ 和/ 同行/ 表示/ 衷心/ 的/ 感谢/ !/ 

