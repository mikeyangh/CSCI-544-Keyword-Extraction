Page1/ 大规模/ 层次/ 分类/ 问题/ 研究/ 及其/ 进展/ 何力/ 贾焰/ 韩伟红/ 谭霜/ 陈志坤/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 摘要/ 随着/ 信息技术/ 的/ 发展/ ,/ 互联网/ 数据/ 急剧/ 增长/ ./ 为了/ 有效/ 地/ 组织/ 和/ 管理/ 这些/ 海量/ 网页/ 信息/ ,/ 通常/ 按照/ 一个/ 大规模/ 的/ 概念/ 或/ 主题/ 类别/ 层次/ 对/ 网络/ 上/ 的/ 信息/ 进行/ 分类/ ,/ 以/ 更好/ 地/ 搜索/ 和/ 访问/ 这些/ 网络资源/ ./ 在/ 这个/ 过程/ 中/ ,/ 大规模/ 层次/ 分类/ 问题/ 研究/ 如何/ 将/ 互联网/ 上/ 的/ 网页/ 文档/ 准确/ 地分/ 到/ 类别/ 层次/ 中/ 的/ 各个/ 类别/ ./ 该文/ 对/ 大规模/ 层次/ 分类/ 问题/ 进行/ 了/ 分析/ ./ 首先/ ,/ 给出/ 了/ 大规模/ 层次/ 分类/ 问题/ 的/ 定义/ ,/ 分析/ 了/ 大规模/ 层次/ 分类/ 问题/ 的/ 求解/ 策略/ ;/ 其次/ ,/ 对/ 大规模/ 层次/ 分类/ 问题/ 的/ 求解/ 方法/ 加以/ 分类/ ,/ 在/ 分类/ 基础/ 上/ ,/ 介绍/ 了/ 各种/ 典型/ 的/ 求解/ 方法/ 并/ 进行/ 了/ 对比/ ;/ 最后/ 总结/ 了/ 各种/ 大规模/ 层次/ 分类/ 问题/ 求解/ 方法/ 并/ 指出/ 了/ 未来/ 的/ 研究/ 方向/ ./ 关键词/ 文本/ 分类/ ;/ 大规模/ 层次/ 分类/ ;/ 类别/ 层次/ ;/ 类别/ 层次/ 树/ 1/ 引言/ 随着/ 信息技术/ 的/ 发展/ ,/ 互联网/ 数据/ 急剧/ 增长/ ./ 第/ Page2/ 些/ 网页/ 信息/ 组织/ 为/ 网络资源/ 分类目录/ ,/ 以/ 更好/ 地/ 搜索/ 、/ 访问/ 和/ 管理/ 这些/ 网络资源/ ,/ 例如/ 开放/ 目录/ 专案/ (/ OpenDirectoryProject/ ,/ ODP/ 目录/ )/ ①/ 、/ 雅虎/ 目录/ (/ Yahoo/ !/ Directory/ )/ ②/ 等/ ./ 要/ 自动/ 构建/ 网络资源/ 目录/ ,/ 就/ 需要/ 实现/ 对/ 互联网/ 上/ 未知/ 类别/ 信息/ 的/ 分类/ ,/ 这里/ 的/ 信息/ 类别/ 一般/ 被/ 组织/ 为/ 一个/ 层次/ 式/ 结构/ ,/ 典型/ 的/ 是/ 一棵树/ (/ tree/ )/ 或者/ 有/ 向/ 无/ 环图/ (/ directedacyclicgraph/ )/ ,/ 这种/ 类别/ 层次/ 一般/ 规模/ 巨大/ ,/ 其/ 类别/ 数目/ 可以/ 达到/ 数万/ 、/ 甚至/ 数十万/ 之多/ ./ 大规模/ 层次/ 分类/ (/ largescalehierarchicalclassification/ )/ 就是/ 按照/ 这样/ 一个/ 规模/ 巨大/ 的/ 类别/ 层次/ ,/ 采用/ 机器/ 学习/ 的/ 方法/ 指定/ 网页/ 在/ 类别/ 层次/ 中/ 所属/ 的/ 类别/ ./ 除了/ 构建/ 网络资源/ 目录/ 外/ ,/ 大规模/ 层次/ 分类/ 也/ 是/ 很多/ 网络应用/ 的/ 基础/ ,/ 包括/ 信息检索/ 、/ 网络/ 资源管理/ 、/ 绿色/ 上网/ 、/ 网络/ 信誉/ 管理/ 、/ 有害/ 和/ 敏感/ 信息/ 过滤/ 等/ ./ 在/ 大规模/ 层次/ 分类/ 领域/ ,/ 目前/ 有/ 很多/ 研究/ ,/ 但/ 由于/ 这些/ 研究/ 分散/ 在/ 不同/ 领域/ ,/ 导致/ 一个/ 领域/ 的/ 研究/ 人员/ 往往/ 不/ 知道/ 另/ 一/ 领域/ 研究/ 人员/ 开发/ 的/ 方法/ ./ 同时/ 由于/ 对/ 大规模/ 层次/ 分类/ 问题/ 的/ 概念/ 、/ 任务/ 、/ 目标/ 没有/ 明确/ 定义/ ,/ 导致/ 难以/ 采用/ 统一/ 的/ 实验/ 和/ 评价/ 标准/ 评估/ 大规模/ 层次/ 分类/ 方法/ ./ 鉴于/ 目前/ 还/ 没有/ 研究者/ 对/ 大规模/ 层次/ 分类/ 进行/ 系统/ 的/ 总结/ ,/ 本文/ 对/ 大规模/ 层次/ 分类/ 领域/ 的/ 相关/ 研究/ 作/ 了/ 总结/ 和/ 归类/ ,/ 以利于/ 后续/ 相关/ 研究/ 的/ 开展/ ./ 本文/ 将/ 对/ 大规模/ 层次/ 分类/ 问题/ 的/ 定义/ 、/ 大规模/ 层次/ 分类/ 的/ 解决/ 策略/ 和/ 主要/ 方法/ 、/ 不同/ 方法/ 的/ 特点/ 以及/ 之间/ 的/ 区别/ 等/ 进行/ 分析/ ,/ 最后/ 讨论/ 大规模/ 层次/ 分类/ 领域/ 存在/ 的/ 问题/ 和/ 未来/ 研究/ 方向/ ./ 2/ 大规模/ 层次/ 分类/ 问题/ 2.1/ 大规模/ 层次/ 分类/ 问题/ 的/ 定义/ 广义/ 的/ 大规模/ 层次/ 分类/ 是/ 指/ 按照/ 一个/ 规模/ 巨大/ 的/ 类别/ 层次/ ,/ 指定/ 未知/ 类别/ 对象/ 在/ 类别/ 层次/ 中/ 所属/ 的/ 类别/ ./ 这里/ 的/ 分类/ 对象/ 可以/ 是/ 文本/ 对象/ ,/ 如/ 维基百科/ 中/ 的/ 文档/ ,/ 也/ 可以/ 是/ 多媒体信息/ ,/ 如/ 网页/ 上/ 的/ 音乐/ 、/ 图像/ 、/ 视频/ 等/ ./ 分类/ 方式/ 可以/ 是/ 人工/ 分类/ ,/ 也/ 可以/ 是/ 基于/ 机器/ 学习/ 的/ 自动/ 分类/ 或者/ 带有/ 专家/ 验证/ 的/ 自动/ 分类/ ./ 类别/ 层次/ 可以/ 是/ 专家/ 编制/ ,/ 也/ 可以/ 是/ 在/ 分类/ 过程/ 中/ 通过/ 聚类/ 方法/ 学习/ 产生/ ./ 本文/ 仅/ 讨论/ 狭义/ 的/ 大规模/ 层次/ 分类/ 问题/ ,/ 即/ 分类/ 对象/ 为/ 文本/ 对象/ ,/ 分类/ 方式/ 是/ 基于/ 机器/ 学习/ 的/ 自动/ 分类/ ,/ 类别/ 层次/ 由/ 专家/ 预先/ 编制/ ./ 关于/ 层次/ 分类/ 问题/ 的/ 定义/ ,/ Silla/ 等/ 人/ [/ 1/ ]/ 提出/ 可以/ 用/ 类别/ 层次/ 的/ 结构/ 类型/ 、/ 实例/ 的/ 类别/ 数目/ 、/ 实例/ 的/ 标签/ 路径/ 深度/ 3/ 个/ 属性/ 描述/ 一个/ 层次/ 分类/ 问题/ ,/ 而/ 在/ 大规模/ 层次/ 分类/ 中/ ,/ 类别/ 往往/ 被/ 组织/ 成/ 一个/ 多维度/ 多层次/ 的/ 类别/ 体系/ ,/ 并且/ 类别/ 之间/ 的/ 关系/ 复杂/ ,/ 类别/ 之间/ 可能/ 形成/ 环路/ ./ 针对/ 大规模/ 层次/ 分类/ 的/ 这些/ 特点/ ,/ 我们/ 在/ 层次/ 分类/ 问题/ 定义/ 的/ 基础/ 上/ 进行/ 扩展/ ,/ 从/ 以下/ 4/ 个/ 属性/ 描述/ 大规模/ 层次/ 分类/ 问题/ ./ 层次/ 中/ 类别/ 之间/ 的/ 关系/ ,/ 可能/ 的/ 取值/ 有/ :/ 属性/ 1/ ./ 类别/ 层次/ 的/ 结构/ 类型/ H/ ,/ H/ 代表/ 类别/ (/ 1/ )/ T/ (/ 树/ )/ ./ 类别/ 层次/ 被/ 组织/ 为/ 树形/ 结构/ ,/ 如图/ 1/ (/ a/ )/ 所示/ ./ (/ 2/ )/ DAG/ (/ 有/ 向/ 无/ 环图/ )/ ./ 类别/ 层次/ 被/ 组织/ 为/ 有/ 向/ 无/ 环图/ 的/ 结构/ ,/ 如图/ 1/ (/ b/ )/ 所示/ ,/ 显然/ ,/ 树是/ 一类/ 特殊/ 的/ 有/ 向/ 无/ 环图/ ./ (/ 3/ )/ DCG/ (/ 有/ 向/ 有/ 环图/ )/ ./ 类别/ 层次/ 被/ 组织/ 为/ 有/ 向/ 有/ 环图/ ,/ 即/ 类别/ 层次/ 中/ 可以/ 出现/ 环路/ ,/ 如图/ 1/ (/ c/ )/ 所示/ ./ 是否/ 包含/ 多个/ 维度/ ,/ 可能/ 的/ 取值/ 有/ :/ 属性/ 2/ ./ 类别/ 层次/ 的/ 维度/ P/ ,/ P/ 描述/ 类别/ 层次/ (/ 1/ )/ SD/ (/ 单一/ 维度/ )/ ./ 所有/ 类别/ 处于/ 单一/ 维度/ ./ (/ 2/ )/ MD/ (/ 多个/ 维度/ )/ ./ 类别/ 层次/ 由/ 多个/ 维度/ 的/ 类别/ 组成/ ,/ 例如/ ODP/ 目录/ 就/ 包括/ 主题/ 、/ 地区/ 、/ 语言/ 3/ 个/ ①/ ②/ Page3/ 类别/ 维度/ ,/ 在/ 进行/ 多维度/ 分类/ 的/ 时候/ 应该/ 按照/ 各个/ 不同/ 维度/ 分别/ 进行/ 分类/ 的/ 学习/ 和/ 预测/ ./ 属性/ 3/ ./ 实例/ 的/ 类别/ 数目/ L/ ,/ L/ 描述/ 是/ 单/ 标签/ 分类/ 问题/ ,/ 还是/ 多/ 标签/ 分类/ 问题/ ./ 在/ 层次/ 分类/ 问题/ 中/ ,/ 指/ 一个/ 实例/ 可以/ 被/ 赋/ 给/ 类别/ 层次/ 中/ 的/ 一个/ 标签/ 路径/ ,/ 还是/ 可以/ 被/ 赋/ 给/ 多个/ 标签/ 路径/ ,/ 可能/ 的/ 取值/ 有/ :/ (/ 1/ )/ SPL/ (/ 单/ 标签/ 路径/ )/ ./ 单/ 标签/ 分类/ ,/ 所有/ 实例/ 只能/ 被/ 赋/ 给/ 类别/ 层次/ 中/ 一条/ 唯一/ 的/ 标签/ 路径/ ./ (/ 2/ )/ MPL/ (/ 多/ 标签/ 路径/ )/ ./ 多/ 标签/ 分类/ ,/ 实例/ 可以/ 被/ 赋/ 给/ 类别/ 层次/ 中/ 的/ 多条/ 标签/ 路径/ ,/ 例如/ 在/ 图/ 1/ (/ a/ )/ 中/ ,/ 实例/ d1/ 同时/ 属于/ 类别/ 1.2/ 和/ 类别/ 2.1/ ./ 2/ ,/ 即/ d1/ 有/ 两条/ 标签/ 路径/ ,/ 分别/ 是/ “/ 根/ -/ 1/ -/ 1.2/ ”/ 和/ “/ 根/ -/ 2/ -/ 2.1/ -/ 2.1/ ./ 2/ ”/ ./ 属性/ 4/ ./ 实例/ 的/ 标签/ 路径/ 深度/ D/ ,/ D/ 描述/ 实例/ 标签/ 路径/ 的/ 深度/ ,/ 可能/ 的/ 取值/ 有/ :/ (/ 1/ )/ FD/ (/ 全/ 深度/ 标签/ )/ ./ 所有/ 实例/ 必须/ 被/ 赋/ 给/ 全/ 深度/ 标签/ ,/ 每个/ 实例/ 的/ 标签/ 路径/ 必须/ 从根/ 类别/ 开始/ ,/ 以/ 叶子/ 类别/ 结束/ ,/ 即/ 所有/ 的/ 实例/ 均/ 处于/ 叶子/ 类别/ ./ (/ 2/ )/ PD/ (/ 部分/ 深度/ 标签/ )/ ./ 实例/ 可以/ 被/ 赋/ 给/ 部分/ 深度/ 标签/ ,/ 实例/ 的/ 标签/ 路径/ 可以/ 以非/ 叶子/ 类别/ 结束/ ,/ 即/ 实例/ 可以/ 处于/ 类别/ 层次/ 中/ 的/ 中间/ 节点/ 上/ ./ 例如/ 在/ 图/ 1/ (/ a/ )/ 中/ ,/ 实例/ d2/ 属于/ 类别/ 2.1/ ,/ 但/ 既/ 不/ 属于/ 类别/ 2.1/ ./ 1/ ,/ 也/ 不/ 属于/ 类别/ 2.1/ ./ 2/ ,/ 则/ d2/ 的/ 类别/ 标签/ 路径/ 为/ “/ 根/ -/ 2/ -/ 2.1/ ”/ ,/ 是/ 一个/ 部分/ 深度/ 标签/ ./ 部分/ 深度/ 标签/ 分类/ 问题/ 是/ 指/ 可以/ 将/ 文档/ 分到/ 非/ 叶子/ 节点/ 就/ 停止/ 分类/ ,/ 而/ 不是/ 必须/ 分/ 至/ 叶子/ 节点/ ./ 例如/ 对于/ d2/ ,/ 在/ 将/ d2/ 分至/ 类别/ 2.1/ 时/ ,/ 分类/ 就/ 应该/ 结束/ ./ 对于/ 一个/ 大规模/ 层次/ 分类/ 问题/ G/ ,/ 均/ 可以/ 利用/ H/ 、/ P/ 、/ L/ 、/ D/ 这/ 4/ 个/ 属性/ 进行/ 描述/ ./ 因此/ ,/ 我们/ 可以/ 用/ 四元组/ 〈/ H/ ,/ P/ ,/ L/ ,/ D/ 〉/ 表示/ 现有/ 的/ 任意/ 一类/ 大规模/ 层次/ 分类/ 问题/ ./ 例如/ ,/ G/ =/ 〈/ T/ ,/ SD/ ,/ SPL/ ,/ FD/ 〉/ 描述/ 的/ 就是/ 一类/ 最/ 常见/ 的/ 大规模/ 层次/ 分类/ 问题/ ,/ 即/ 类别/ 层次/ 是/ 一个/ 单一/ 维度/ 的/ 树形/ 结构/ ,/ 实例/ 的/ 类别/ 唯一/ ,/ 并且/ 所有/ 实例/ 均/ 位于/ 叶子/ 节点/ ./ 由于/ 这/ 一类/ 问题/ 最/ 具有/ 代表性/ ,/ 因此/ 在/ 本文/ 后面/ 的/ 讨论/ 中/ ,/ 如果/ 没有/ 对/ 问题/ 图/ 2/ 大规模/ 层次/ 分类/ 问题/ 求解/ 方法/ 分类/ 框架/ 进行/ 特别/ 说明/ ,/ 就是指/ 这/ 一类/ 大规模/ 层次/ 分类/ 问题/ ./ 2.2/ 大规模/ 层次/ 分类/ 问题/ 求解/ 方法/ 分类/ 框架/ 大规模/ 层次/ 分类/ 方法/ 主要/ 是/ 针对/ 大规模/ 层次/ 分类/ 问题/ 中/ 类别/ 层次结构/ 巨大/ 这一/ 特点/ 进行/ 研究/ ./ 因此/ ,/ 大规模/ 层次/ 分类/ 问题/ 求解/ 方法/ 的/ 不同/ 主要/ 体现/ 在/ 对/ 大规模/ 层次/ 分类/ 问题/ 的/ 处理/ 策略/ 上/ ,/ 目前/ 有/ 3/ 种/ 处理/ 策略/ :/ 全局/ 处理/ 策略/ (/ overall/ -/ conquer/ )/ 、/ 分而治之/ 的/ 策略/ (/ divide/ -/ and/ -/ conquer/ )/ 、/ 化繁为简/ 的/ 策略/ (/ reduce/ -/ and/ -/ conquer/ )/ ./ 下面/ 我们/ 分别/ 介绍/ 这/ 3/ 种/ 策略/ 以及/ 相应/ 的/ 分类/ 方法/ ./ 整体/ 处理/ 策略/ :/ 将/ 所有/ 类别/ 作为/ 一个/ 整体/ ,/ 在/ 整个/ 数据/ 集上/ 进行/ 分类/ 学习/ ,/ 然后/ 对待/ 分类/ 文档/ 进行/ 分类/ ,/ 我们/ 将/ 采用/ 这种/ 策略/ 的/ 方法/ 称为/ 全局/ 分类/ 方法/ ./ 分而治之/ 策略/ :/ 按照/ 类别/ 层次/ 将/ 一个/ 大规模/ 的/ 全局/ 分类/ 问题/ 分解/ 为/ 一个个/ 小规模/ 的/ 局部/ 分类/ 问题/ ,/ 然后/ 分别/ 进行/ 分类/ 学习/ ,/ 对待/ 分类/ 文档/ 进行/ 自上而下/ 的/ 分类/ ./ 我们/ 将/ 采用/ 这种/ 策略/ 的/ 方法/ 称为/ 自上而下/ 分类/ 方法/ ./ 化繁为简/ 的/ 策略/ :/ 通过/ 搜索/ 类别/ 层次/ 中/ 所有/ 与/ 待/ 分类/ 文档/ 相关/ 的/ 类别/ ,/ 然后/ 在/ 所有/ 相关/ 类别/ 上/ 进行/ 分类/ 学习/ 和/ 预测/ ,/ 将/ 一个/ 大规模/ 的/ 分类/ 问题/ 降低/ 为/ 一个/ 小规模/ 的/ 分类/ 问题/ ./ 我们/ 将/ 采用/ 这种/ 策略/ 的/ 方法/ 称为/ 收缩/ 分类/ 方法/ ./ 我们/ 以/ 问题/ 的/ 处理/ 策略/ 作为/ 大规模/ 层次/ 分类/ 问题/ 求解/ 方法/ 的/ 划分/ 依据/ ,/ 更能/ 体现/ 这些/ 方法/ 的/ 区别/ ,/ 同时/ 这种/ 划分/ 方式/ 也/ 能/ 很/ 好/ 地/ 归类/ 现有/ 大规模/ 层次/ 分类/ 方法/ ,/ 本文/ 基于/ 这一/ 划分/ 策略/ 形成/ 了/ 比较/ 完备/ 的/ 分类/ 框架/ ,/ 如图/ 2/ 所示/ ,/ 其中/ ,/ 全局/ 分类/ 方法/ 又/ 分为/ 平面/ 分类/ 方法/ 和/ Big/ -/ bang/ 分类/ 方法/ ,/ 自上而下/ 分类/ 方法/ 又/ 分为/ 基于/ 二元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ 、/ 基于/ 多元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ 和/ 基于/ 类别/ 层次/ 优化/ 的/ 自上而下/ 分类/ 方法/ ,/ 这些/ 方法/ 将/ 在/ 第/ 3/ 节/ 进行/ 详细/ 介绍/ ./ 本文/ 的/ 第/ 3/ 节将/ 围绕/ 大规模/ 层次/ 分类/ 问题/ 求解/ 方法/ 的/ 分类/ 框架/ 展开/ ./ Page43/ 大规模/ 层次/ 分类/ 问题/ 求解/ 方法/ 3.1/ 全局/ 分类/ 方法/ 全局/ 分类/ (/ GlobalApproaches/ ,/ Global/ )/ 是/ 指/ 将/ 所有/ 类别/ 作为/ 一个/ 整体/ ,/ 在/ 整个/ 类别/ 层次/ 上/ 进行/ 分类/ 学习/ 和/ 预测/ ./ 如果/ 在/ 分类/ 学习/ 过程/ 中/ ,/ 不/ 考虑/ 类别/ 间/ 的/ 层次/ 关系/ ,/ 将/ 所有/ 类别/ 看作/ 相互/ 独立/ 的/ 平级/ 类别/ ,/ 采用/ 传统/ 的/ 文本/ 分类/ 算法/ 进行/ 分类/ ,/ 则/ 将/ 这/ 一类/ 方法/ 称为/ 平面/ 分类/ 方法/ (/ FlatApproaches/ ,/ Flat/ )/ ./ 如果/ 在/ 分类/ 的/ 学习/ 过程/ 中/ ,/ 考虑/ 类别/ 间/ 的/ 层次/ 关系/ ,/ 利用/ 类别/ 之间/ 的/ 语义/ 关系/ 进一步/ 帮助/ 分类/ 学习/ 和/ 预测/ ,/ 我们/ 称/ 这/ 一类/ 方法/ 为/ Big/ -/ bang/ 分类/ 方法/ (/ Big/ -/ bangApproaches/ ,/ Big/ -/ bang/ )/ ./ 下面/ 我们/ 从/ 这/ 两/ 方面/ 总结/ 已有/ 的/ 全局/ 分类/ 方法/ ./ 鉴于/ Silla/ 等/ 人/ [/ 1/ ]/ 采用/ 分类器/ 节点/ 分布图/ 可以/ 形象/ 地/ 描述/ 层次/ 分类/ 方法/ ,/ 本文/ 在/ 图/ 3/ 、/ 图/ 4/ 、/ 图/ 5/ 、/ 图/ 7/ 、/ 图/ 8/ 中/ 也/ 采用/ 了/ 这种/ 方式/ 形象/ 地/ 表示/ 大规模/ 层次/ 分类/ 方法/ ./ 3.1/ ./ 1/ 平面/ 分类/ 方法/ 平面/ 分类/ 方法/ 不/ 考虑/ 类别/ 层次/ ,/ 将/ 类别/ 树中/ 所有/ 叶子/ 节点/ 看作/ 相互/ 独立/ 的/ 平级/ 类别/ ,/ 作为/ 一个多/ 类别/ 分类/ 问题/ (/ multi/ -/ classclassification/ )/ 进行/ 处理/ ,/ 如图/ 3/ 所示/ ,/ 虚/ 线框/ 表示/ 分类器/ 的/ 学习/ 范围/ ./ 平面/ 分类/ 方法/ 可以/ 直接/ 采用/ 传统/ 的/ 文本/ 分类/ 算法/ 将/ 文档/ 分类/ 至/ 叶子/ 节点/ ,/ 实现/ 全/ 深度/ 标签/ 分类/ ./ 对于/ 部分/ 深度/ 标签/ 分类/ 问题/ ,/ 我们/ 可以/ 通过/ 为/ 每/ 一个/ 包含/ 有/ 实例/ 的/ 非/ 叶子/ 节点/ 引入/ 一个/ 新/ 的/ 子/ 节点/ ,/ 然后/ 将/ 该/ 非/ 叶子/ 节点/ 上/ 的/ 实例/ 转移/ 到/ 新/ 的/ 叶子/ 节点/ 上面/ ,/ 从而/ 将/ 部分/ 深度/ 标签/ 分类/ 问题/ 转化/ 为/ 全/ 深度/ 标签/ 分类/ 问题/ ,/ 进而/ 采用/ 平面/ 分类/ 方法/ ./ 例如/ ,/ 如果/ 图/ 3/ 中/ 的/ 节点/ 2/ 包含/ 有/ 一个/ 实例/ d/ ,/ 则/ 可以/ 通过/ 引入/ 一个/ 新/ 的/ 类别/ 节点/ 2.3/ ,/ 将/ d/ 转移/ 到/ 2.3/ 上/ ,/ 从而/ 转化/ 为/ 一个/ 全/ 深度/ 标签/ 分类/ 问题/ ,/ 如图/ 4/ 所示/ ./ 平面/ 分类/ 方法/ 可以/ 直接/ 采用/ 机器/ 学习/ 当中/ 许多/ 经典/ 的/ 分类/ 算法/ ,/ 如/ 基于/ 质心/ 的/ 分类/ 算法/ [/ 2/ ]/ 、/ 最近/ 邻/ 分类/ 算法/ [/ 3/ ]/ 、/ 朴素/ 贝叶斯/ 分类/ 算法/ [/ 4/ ]/ 、/ Rocchio/ 算法/ [/ 5/ ]/ 、/ 基于/ 人工神经网络/ 的/ 分类/ 算法/ [/ 6/ ]/ ./ 在/ 将/ 这些/ 算法/ 应用/ 到/ 大规模/ 层次/ 分类/ 问题/ 时/ ,/ 由于/ 数据/ 倾斜/ 和/ 数据/ 稀疏/ 等/ 问题/ ,/ 算法/ 的/ 分类/ 性能/ 往往/ 会/ 变差/ ./ 数据/ 倾斜/ 问题/ 是/ 由于/ 在/ 大规模/ 层次/ 分类/ 中/ 类别/ 数目/ 巨大/ ,/ 如果/ 将/ 某/ 一个/ 类别/ 的/ 实例/ 作为/ 正/ 样本/ ,/ 将/ 其余/ 类别/ 的/ 实例/ 作为/ 负/ 样本/ ,/ 将/ 导致/ 负/ 样本/ 数量/ 远远/ 超过/ 正/ 样本/ 数量/ ,/ 数据/ 稀疏/ 问题/ 是/ 由于/ 大规模/ 层次/ 分类/ 中/ 的/ 文档/ 往往/ 比较/ 短/ ,/ 大量/ 短/ 文档/ 导致/ 文档/ 特征/ 矩阵/ 稀疏/ ./ 对于/ 这些/ 问题/ ,/ 研究者/ 一般/ 要/ 对/ 算法/ 进行/ 一些/ 优化/ ./ 各种/ 基于/ 传统/ 文本/ 分类/ 算法/ 的/ 平面/ 分类/ 方法/ 如表/ 1/ 所示/ ./ 基于/ 人工神经网络/ 的/ 分类/ 算法/ Christophe/ [/ 6/ ]/ (/ 2011/ )/ Passive/ -/ Aggressive/ (/ PA/ )/ 算法/ Madani/ 等/ 人/ [/ 7/ ]/ (/ 2010/ )/ Hu/ 等/ 人/ [/ 2/ ]/ 采用/ 近似/ 文档/ 频率/ 逆/ 类别/ 频率/ 的/ 方法/ 创建/ 类别/ 的/ 质心/ 权重/ 向量/ ,/ 然后/ 根据/ 文档/ 权重/ 向量/ 和/ 类别/ 质心/ 向量/ 之间/ 的/ 点积/ 判断/ 文档/ 类别/ ./ 对于/ 类别/ Cj/ ,/ 其/ 质心/ 向量/ 中/ 的/ 每个/ 元素/ wij/ 是/ 词/ ti/ 关于/ 类别/ Cj/ 的/ 特征/ 权重/ ,/ 若/ ti/ 在/ Cj/ 中/ 的/ 文档/ 频率/ 为/ ti/ ,/ Cj/ 包括/ 的/ 文档/ 总数/ 为/ |/ Cj/ |/ ,/ 训练/ 集/ 类别/ 总数/ DFj/ 为/ |/ C/ |/ ,/ 出现/ 过/ ti/ 的/ 类别/ 数目/ 为/ |/ CFti/ |/ ,/ 则/ wij/ 的/ 计算方法/ 如式/ (/ 1/ )/ 所示/ ,/ b/ 是/ 用来/ 调节/ 文档/ 频率/ 和/ 逆/ 类别/ 频率/ 在/ 公式/ 中/ 重要/ 程度/ 的/ 参数/ ,/ 即越/ 多/ 出现/ 在/ 类别/ Cj/ ,/ 越/ 少/ 出现/ 在/ 其它/ 类别/ 的/ 词/ ,/ 其/ 权重/ 越大/ Wang/ 等/ 人/ [/ 3/ ]/ 提出/ 了/ 一种/ 最近/ 邻/ 算法/ 的/ 投票/ 策/ Page5/ 略/ ,/ 每个/ 实例/ 投票/ 的/ 权重/ 与/ 该/ 实例/ 和/ 测试/ 文档/ 之间/ 的/ 距离/ 相关/ ,/ 对于/ 一个/ 测试/ 文档/ ,/ 首先/ 由/ 相似性/ 度量/ 算法/ BM25/ [/ 3/ ]/ 计算/ 距离/ 该/ 文档/ 最近/ 的/ k/ 个/ 邻居/ ,/ 然后/ 根据/ 各个/ 邻居/ 同该/ 文档/ 之间/ 的/ 距离/ 计算/ 该/ 文档/ 的/ 类别/ 得分/ ,/ 距离/ 测试/ 文档/ 越近/ 的/ 邻居/ 其/ 投票权/ 重越/ 大/ ./ 若/ 测试/ 文档/ 为/ Se/ ,/ 邻居/ 为/ Si/ ,/ Se/ 对/ 类别/ c/ 的/ 得/ 分为/ score/ (/ c/ )/ ,/ 则/ score/ (/ c/ )/ 的/ 计算方法/ 如式/ (/ 2/ )/ 所示/ ,/ 其中/ γ/ (/ si/ ,/ c/ )/ 判断/ c/ 是否/ 为/ Si/ 的/ 类别/ 标签/ ,/ α/ 是/ 一个/ 正/ 实数/ ,/ 用来/ 调节/ 各个/ 邻居/ 的/ 投票权/ 重/ ./ Zhang/ 等/ 人/ [/ 4/ ]/ 针对/ 朴素/ 贝叶斯/ 模型/ 在/ Web/ -/ Scale/ 分类/ 中/ 性能/ 变差/ 的/ 问题/ ,/ 提出/ 一种/ 参数/ 平滑/ 方法/ ,/ 以/ 提高/ 朴素/ 贝叶斯/ 模型/ 的/ 分类/ 准确率/ ./ 标准/ 朴素/ 贝叶斯/ 模型/ 采用/ 拉普拉斯/ 平滑/ 方法/ 计算/ 词条/ 在/ 一个/ 类别/ 中/ 的/ 出现/ 概率/ ,/ 对于/ 词/ wi/ 和/ 类别/ cu/ ,/ 若/ wi/ 在/ cu/ 中/ 的/ 出现/ 次数/ 为/ Niu/ ,/ cu/ 中/ 的/ 词条/ 总数/ 为/ Nc/ ,/ 记/ p/ (/ wi/ |/ c/ )/ 为/ wi/ 在/ cu/ 中/ 的/ 出现/ 概率/ ,/ 则/ 拉普拉斯/ 平滑/ 计算/ 法/ 方法/ 如式/ (/ 3/ )/ 所示/ 在/ 大规模/ 层次/ 分类/ 当中/ ,/ 由于/ 数据/ 稀疏/ 问题/ ,/ 拉普拉斯/ 平滑/ 可能/ 导致/ 一个/ 类别/ 中/ 出现/ 的/ 词/ 和/ 未曾/ 在/ 这个/ 类别/ 中/ 出现/ 过/ 的/ 词/ 的/ 先验概率/ 值/ 比较/ 接近/ ,/ 针对/ 这个/ 问题/ ,/ Zhang/ 提出/ 用/ γ/ 平滑/ 方法/ 计算/ 词条/ 出现/ 概率/ ziu/ ,/ 如式/ (/ 4/ )/ 所示/ ,/ 其中/ γ/ 是/ 一个/ 足够/ 小/ 的/ 常数/ ,/ 由于/ γ/ 取值/ 可以/ 足够/ 小/ ,/ 相比/ 拉普拉斯/ 平滑/ ,/ 采用/ γ/ 平滑/ 一定/ 程度/ 上/ 可以/ 增强/ 一个/ 类别/ 中/ 出现/ 词/ 和/ 未/ 出现/ 词/ 的/ 概率/ 值/ 的/ 大小/ 区别/ ./ ziu/ =/ 烄/ 1/ ,/ 烅/ 烆/ Madani/ 等/ 人/ [/ 7/ ]/ 采用/ PA/ 算法/ [/ 8/ ]/ 计算/ 一个/ 特征/ -/ 类别/ 权重/ 矩阵/ ,/ 矩阵/ 的/ 每/ 一行/ 对应/ 一个/ 特征/ ,/ 每/ 一列/ 对应/ 一个/ 类别/ ,/ 通过/ 对/ 文档/ 特征向量/ 和/ 权重/ 矩阵/ 之间/ 进行/ 点积/ 运算/ 计算/ 文档/ 同/ 各个/ 类别/ 的/ 相似性/ 得分/ ,/ 算法/ 通过/ 迭代/ 更新/ 特征/ -/ 类别/ 权重/ 矩阵/ 来/ 提高/ 分类/ 准确率/ ./ 还有/ 其它/ 基于/ 传统/ 文本/ 分类/ 算法/ 的/ Flat/ 分类/ 方法/ ,/ 在/ 此/ 不/ 一一/ 详述/ ./ 3.1/ ./ 2Big/ -/ bang/ 分类/ 方法/ Big/ -/ bang/ 分类/ 面向/ 整个/ 类别/ 层次/ 学习/ 一个/ 分类/ 模型/ ,/ 如图/ 5/ 所示/ ,/ Big/ -/ bang/ 方法/ 可以/ 将/ 文档/ 分/ 到/ 类别/ 层次/ 中/ 任意/ 一级/ 节点/ ,/ 因此/ 支持/ 全/ 深度/ 标签/ 分类/ 和/ 部分/ 深度/ 标签/ 分类/ ./ Big/ -/ bang/ 方法/ 在/ 将/ 传统/ 的/ 文本/ 分类/ 方法/ 应用/ 到/ 大规模/ 层次/ 分类/ 中/ 的/ 时候/ ,/ 会/ 考虑/ 整个/ 类别/ 层次/ ,/ 利用/ 类别/ 之间/ 的/ 父子/ 派生/ 关系/ 进行/ 分类/ 的/ 学习/ 和/ 预测/ ,/ 结合/ 类别/ 层次/ 的/ 特点/ 对/ 一般/ 分类/ 算法/ 进行/ 一些/ 修改/ ./ 各种/ Big/ -/ bang/ 分类/ 方法/ 如表/ 2/ 所示/ ./ 基于/ 质心/ 的/ 分类/ 算法/ 基于/ 关联/ 规则/ 的/ 分类/ 算法/ Wang/ 等/ 人/ [/ 9/ ]/ (/ 2001/ )/ 基于/ 规则/ 的/ 分类/ 算法/ Miao/ 等/ 人/ ①/ 根据/ 文档/ 向量/ 和/ 每个/ 类别/ 及其/ 父/ 类别/ 向量/ 的/ 相似性/ 之/ 和/ 进行/ 分类/ 预测/ ,/ 其/ 主要/ 工作/ 是/ 在/ 计算/ 文档/ 和/ 一个/ 类别/ 之间/ 相似性/ 的/ 时候/ ,/ 将/ 文档/ 同/ 该类/ 别的/ 父/ 类别/ 的/ 相似性/ 也/ 考虑/ 在内/ ,/ 即用/ 一个/ 类别/ 与/ 其父/ 类别/ 的/ 质心/ 向量/ 之/ 和/ 代替/ 该类/ 别的/ 质心/ 向量/ 来/ 衡量/ 其/ 和/ 测试/ 文档/ 之间/ 的/ 相似性/ ./ 对于/ 类别/ c/ ,/ 若/ c/ 的/ 父/ 类别/ 为/ p/ (/ c/ )/ ,/ c/ 和/ p/ (/ c/ )/ 的/ 质心/ 向量/ 分别/ 为/ 狑/ c/ 和/ 狑/ p/ (/ c/ )/ ,/ 则/ 文档/ x/ 的/ 预测/ 类别/ w/ ^/ 的/ 计算方法/ 如式/ (/ 5/ )/ 所示/ :/ Wang/ 等/ 人/ [/ 9/ ]/ 利用/ 关联/ 规则/ 挖掘/ 算法/ 处理/ 层次/ 文本/ 分类/ 问题/ ,/ 其/ 主要/ 工作/ 是/ 使/ 基于/ 关联/ 规则/ 的/ 分类/ 算法/ 支持/ 层次/ 分类/ ,/ 他/ 首先/ 利用/ 类别/ 层次结构/ 建立/ 关联/ 规则/ ,/ 并/ 对/ 规则/ 进行/ 排序/ 和/ 筛选/ ,/ 然后/ 根据/ 关联/ 规则/ 对/ 文档/ 进行/ 分类/ ,/ 可以/ 将/ 文档/ 直接/ 分/ 到/ 类别/ 层次/ 中/ 的/ 任意/ 一级/ 节点/ ./ Cai/ 等/ 人/ [/ 10/ ]/ 基于/ SVM/ 构造/ 层次/ 分类/ 方法/ ,/ 其/ 主要/ 工作/ 是/ 利用/ 了/ 类别/ 层次/ 信息/ 构造/ 判别函数/ ,/ 即/ 综合/ 考虑/ 祖先/ 类别/ 信息/ 判断/ 文档/ 类别/ ,/ 首先/ 由/ SVM/ 模型/ 计算/ 文档/ 在/ 某个/ 类别/ 以及/ 该/ 类别/ 所有/ 祖先/ 类别/ ①/ http/ :/ // // lib/ ./ iit/ ./ demokritos/ ./ gr/ // system/ // files/ // XipengQiu/ ./ pdfPage6/ 上/ 的/ 得分/ ,/ 然后/ 将/ 这些/ 得分/ 的/ 加权/ 之/ 和/ 作为/ 文档/ 在/ 该类/ 别的/ 最终/ 得分/ ,/ 以此/ 判断/ 文档/ 类别/ ./ 还有/ 其它/ Big/ -/ bang/ 分类/ 方法/ ,/ 在/ 此/ 不/ 一一/ 详述/ ./ 3.1/ ./ 3/ 全局/ 分类/ 方法/ 的/ 优缺点/ 全局/ 分类/ 方法/ 的/ 优点/ 是/ 分类/ 过程/ 简单/ ,/ 因为/ 全局/ 分类/ 将/ 所有/ 类别/ 作为/ 一个/ 整体/ ,/ 为/ 整个/ 类别/ 层次/ 学习/ 提供/ 一个/ 全局/ 的/ 分类/ 模型/ ,/ 每次/ 分类/ 预测/ 能/ 将/ 文档/ 分/ 至/ 最终/ 类别/ ,/ 因此/ 避免/ 了/ 层次/ 式/ 迭代/ 分类/ 过程/ 中/ 的/ 错误/ 传播/ 问题/ ./ 错误/ 传播/ 问题/ 是/ 指/ 在/ 自上而下/ 分类/ 方法/ 中/ ,/ 上层/ 节点/ 的/ 错误/ 分类/ 会/ 传播/ 到/ 其/ 后代/ 节点/ 的/ 分类/ 中去/ ./ 全局/ 分类/ 方法/ 的/ 缺点/ 是/ 分类/ 学习/ 的/ 时间/ 开销/ 比较/ 大/ ,/ 因为/ 全局/ 方法/ 是/ 在/ 整个/ 数据/ 集/ 上将/ 进行/ 学习/ 和/ 训练/ 分类器/ ,/ 其/ 学习/ 的/ 空间/ 开销/ 和/ 时间/ 开销/ 比/ 采用/ 分而治之/ 策略/ 的/ 方法/ 要/ 大/ 许多/ ./ Liu/ 等/ 人/ [/ 12/ ]/ 通过/ 实验/ 对/ 基于/ SVM/ 实现/ 的/ 全局/ 分类/ 方法/ 和/ 自上而下/ 分类/ 方法/ 进行/ 了/ 比较/ ,/ 以/ 雅虎/ 目录/ 作为/ 实验/ 对象/ ,/ 实验/ 结果表明/ ,/ 全局/ 分类/ 方法/ 的/ 学习/ 时间/ 高达/ 13/ 天/ ,/ 而/ 自上而下/ 分类/ 方法/ 的/ 学习/ 时间/ 为/ 0.42/ 小时/ ./ 3.2/ 自上而下/ 的/ 分类/ 方法/ 自上而下/ 的/ 分类/ 方法/ (/ Top/ -/ downApproaches/ ,/ Top/ -/ down/ )/ 是/ 指/ 采用/ 分而治之/ 策略/ ,/ 将/ 一个/ 大规模/ 的/ 全局/ 分类/ 问题/ 按照/ 类别/ 层次/ 自上而下/ 依次/ 分解/ 为/ 一个个/ 小规模/ 的/ 局部/ 分类/ 问题/ ./ 根据/ 所/ 采用/ 分类器/ 类型/ 的/ 不同/ ,/ 我们/ 将/ 自上而下/ 的/ 分类/ 方法/ 分为/ 基于/ 二元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ 和/ 基于/ 多元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ ./ 二元/ 分类器/ 是/ 指/ 对/ 实例/ 在/ 两个/ 类别/ 之间/ 进行/ 分类/ 判断/ ,/ 如图/ 6/ (/ a/ )/ 所示/ ;/ 而/ 多元/ 分类器/ 则/ 可以/ 处理/ 两个/ 以上/ 的/ 类别/ ,/ 如图/ 6/ (/ b/ )/ 所示/ ./ 除了/ 这/ 两类/ 自上而下/ 分类/ 方法/ 之外/ ,/ 还有/ 一类/ 自上而下/ 方法/ 试图/ 通过/ 优化/ 类别/ 层次结构/ 来/ 提高/ 分类/ 方法/ 的/ 性能/ ,/ 我们/ 将/ 这类/ 方法/ 称为/ 基于/ 类别/ 层次/ 优化/ 的/ 分类/ 方法/ ./ 下面/ 我们/ 从/ 这/ 3/ 方面/ 总结/ 已有/ 的/ 自上而下/ 分类/ 方法/ ./ 3.2/ ./ 1/ 基于/ 二元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ 基于/ 二元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ (/ BinaryClassifierbasedtop/ -/ downApproaches/ ,/ BC/ -/ top/ -/ down/ )/ 是/ 指为/ 类别/ 层次/ 中/ 除根/ 节点/ 以外/ 的/ 每个/ 节点/ 训练/ 一个二元/ 分类器/ ,/ 对/ 文档/ 进行/ 自上而下/ 的/ 分类/ ./ 如图/ 7/ 所示/ ,/ 每个/ 虚/ 线框/ 表示/ 一个二元/ 分类器/ ,/ 对于/ 一个/ 文档/ ,/ 自上而下/ 进行/ 分类/ 预测/ ,/ 由/ 每个/ 节点/ 上/ 的/ 本地/ 分类器/ 判断/ 文档/ 是否/ 属于/ 当前/ 类别/ ./ 显然/ ,/ 这种/ 分类/ 方法/ 可以/ 将/ 文档/ 分/ 到/ 类别/ 层次/ 树中任/ 一级/ 上/ 的/ 多个/ 节点/ 上面/ ,/ 因此/ 自然/ 地/ 支持/ 部分/ 深度/ 标签/ 分类/ 、/ 全/ 深度/ 标签/ 分类/ 、/ 单/ 标签/ 分类/ 以及/ 多/ 标签/ 分类/ ./ 由于/ 每个/ 节点/ 上面/ 都/ 是/ 一个/ 简单/ 的/ 二元/ 分类/ 问题/ ,/ 因此/ 可以/ 灵活/ 地/ 采用/ 各种/ 二元/ 分类/ 算法/ ,/ 常用/ 的/ 有/ SVM/ [/ 12/ -/ 16/ ]/ 、/ 朴素/ 贝叶斯/ 分类器/ [/ 17/ ]/ 、/ 决策树/ 分类器/ [/ 18/ ]/ 、/ Rocchio/ 分类器/ [/ 19/ ]/ 等/ ./ Koller/ 等/ 人/ [/ 17/ ]/ 在/ 1997/ 年/ 提出/ 了/ 这种/ 基于/ 二元/ 分类器/ 的/ 自上而下/ 层次/ 分类/ 方法/ ,/ 在/ 分类/ 预测/ 过程/ 中/ ,/ 仅/ 当上/ 一层/ 的/ 父/ 节点/ 输出/ 为/ 真时/ 才/ 在/ 下/ 一层/ 的/ 各个/ 子/ 节点/ 进行/ 分类/ 预测/ ,/ 这种/ 预测/ 方法/ 会/ 产生/ “/ 阻滞/ ”/ 问题/ ./ 就是说/ ,/ 如果/ 文档/ 被父/ 节点/ 的/ 分类器/ 拒绝/ 了/ ,/ 则/ 文档/ 无法/ 传给/ 子层/ 的/ 分类器/ ./ 谭金波/ [/ 16/ ]/ 试图/ 解决/ 自上而下/ 层次/ 分类/ 中/ 的/ “/ 阻滞/ ”/ 问题/ ,/ 他/ 在/ 每个/ 节点/ 训练/ 两个/ 分类器/ ,/ 通过/ 为/ 分类/ 预测/ 建立/ 双通道/ 来/ 减缓/ “/ 阻滞/ ”/ ./ Sun/ 等/ 人/ [/ 13/ ]/ 提出/ 了/ 基于/ 类别/ 相似性/ 和/ 基于/ 类别/ 距离/ 两种/ 判别/ 文档/ 和/ 类别/ 之间/ 相关性/ 的/ 方法/ ,/ 并且/ 支持/ 部分/ 深度/ 标签/ 分类/ 和/ 全/ 深度/ 标签/ 分类/ ./ Liu/ 等/ 人/ [/ 12/ ]/ 以/ 雅虎/ 目录/ 作为/ 实验/ 对象/ ,/ 从/ 数学分析/ 和/ 实验/ 两/ 方面/ 分析/ 了/ 基于/ SVM/ 实现/ 的/ 全局/ 分类/ 方法/ 和/ 基于/ 二元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ 的/ 计算/ 复杂性/ ,/ 其/ 主要/ 工作/ 是/ 证明/ 了/ 在/ 大规模/ 层次/ 分类/ 中/ 层次/ 式/ SVM/ 分类/ 方法/ 的/ 学习/ 时间/ 是/ 可以/ 接受/ 的/ ,/ 而/ 平面/ 式/ SVM/ 分类/ 方法/ 的/ 学习/ 时间/ 则/ 难以/ 接受/ ./ 在/ 类别/ 层次/ 树中/ ,/ 相邻/ 类别/ 之间/ 一般/ 主题/ 相关/ :/ 纵向/ 上/ ,/ 同/ 一条/ 路径/ 上/ 的/ 类别/ 之间/ 具有/ 派生/ 关系/ ;/ 横向/ 上/ ,/ 具有/ 相同/ 父亲/ 节点/ 的/ 类别/ 之间/ 一般/ 主题/ 相近/ ./ 对此/ ,/ 一些/ 分类/ 方法/ 试图/ 利用/ 类别/ 之间/ 的/ 相关性/ 帮助/ 分类/ 决策/ ./ 另外/ 在/ 大规模/ 层次/ 分类/ 中/ ,/ 许多/ 类别/ 缺/ Page7/ 少/ 实例/ 或者/ 实例/ 非常少/ ,/ 我们/ 称之为/ 稀有/ 类别/ ,/ 而/ 稀有/ 类别/ 容易/ 导致/ 分类器/ 学习/ 过分/ 拟合/ ./ 通过/ 利用/ 相邻/ 类别/ 辅助/ 分类/ 决策/ ,/ 一定/ 程度/ 上/ 可以/ 解决/ 稀有/ 类别/ 分类/ 当中/ 的/ 过分/ 拟合/ 问题/ ./ 许多/ 学者/ 都/ 对/ 这种/ 基于/ 邻居/ 的/ 分类/ 方法/ (/ NeighborBasedApproaches/ )/ 进行/ 了/ 研究/ ,/ 例如/ Susan/ 等/ 人/ [/ 14/ ]/ 在/ 对/ 一个/ 文档/ 分类/ 的/ 时候/ ,/ 以/ 当前/ 类别/ 、/ 父亲/ 类别/ 、/ 祖父/ 类别/ 3/ 个/ 节点/ 上/ 的/ 分类器/ 分别/ 计算/ 该/ 文档/ 的/ 相似性/ 得分/ ,/ 然后/ 以/ 这/ 3/ 个/ 得分/ 的/ 加权/ 之/ 和/ 作为/ 该/ 文档/ 的/ 最终/ 得分/ ,/ 以此/ 进行/ 分类/ ./ 下面/ 我们/ 对/ 基于/ 邻居/ 类别/ 的/ 分类/ 方法/ 进行/ 形式化/ 描述/ ./ 首先/ 定义/ 类别/ 层次/ 树中/ 一个/ 类别/ 的/ 邻居/ 类别/ 的/ 构成/ ,/ 如表/ 3/ 所示/ ,/ 邻居/ 类别/ 分为/ 祖先/ 类别/ 、/ 后代/ 类别/ 和/ 兄弟/ 类别/ 3/ 类/ ./ 对于/ 一个/ 类别/ cp/ 和/ 一个/ 文档/ d/ ,/ P/ (/ cp/ |/ d/ )/ 表示/ 类别/ cp/ 上/ 的/ 分类器/ 计算/ 出/ 的/ 表/ 3/ 邻居/ 类别/ j/ |/ j/ =/ 1/ ,/ 2/ ,/ …/ ,/ t/ }/ ,/ t/ 是/ cp/ 兄弟/ 节点/ 个数/ ./ 例如/ ,/ Csp/ 从根/ 节点/ 到/ 节点/ cp/ 的/ 类别/ 路径/ 上/ 的/ 所有/ 节点/ ,/ 节点/ cp/ 除外/ ./ 以/ cp/ 为根/ 节点/ 的/ 子树/ 中/ 的/ 所有/ 节点/ ,/ 节点/ cp/ 除外/ ./ 和/ cp/ 具有/ 相同/ 直接/ 父/ 节点/ 的/ 节点/ ./ 邻居/ 祖先/ 类别/ 后代/ 类别/ 兄弟/ 类别/ P/ (/ Cap/ |/ d/ )/ 是/ cp/ 的/ 所有/ 祖先/ 类别/ 对/ d/ 的/ 综合/ 得分/ ,/ 其/ 计算方法/ 如式/ (/ 7/ )/ 所示/ ./ 其中/ Cap/ 溯/ i/ 层/ 的/ 祖先/ 类别/ ,/ P/ (/ Cap/ 是/ P/ (/ Cap/ 别/ 权重/ 系数/ 应该/ 越大/ ,/ 因此/ 有/ α/ 1/ / α/ 2/ / α/ 3/ / …/ / α/ k/ ./ P/ (/ Csp/ |/ d/ )/ 是/ cp/ 的/ 所有/ 兄弟/ 类别/ 对/ d/ 的/ 平均/ 得分/ ,/ 其/ 计算方法/ 如式/ (/ 8/ )/ 所示/ ./ P/ (/ Csp/ |/ d/ )/ 是/ cp/ 的/ 所有/ 后代/ 类别/ 对/ 文档/ d/ 的/ 综合/ 得分/ ,/ 其/ 计算方法/ 如式/ (/ 9/ )/ 所示/ ,/ 其中/ 1/ ∑/ NmP/ (/ Cdpm/ ,/ n/ |/ d/ )/ 是/ cp/ 的/ 第/ m/ 层/ 后代/ 类别/ 对/ d/ 的/ 平/ n/ =/ 1/ 均/ 得分/ ,/ γ/ m/ 是/ 第/ m/ 层/ 后代/ 类别/ 得分/ 的/ 权重/ 系数/ ,/ 距离/ cp/ 越近/ 的/ 后代/ 类别/ 权重/ 应该/ 越大/ ,/ 因此/ 有/ γ/ 1/ / γ/ 2/ / γ/ 3/ / …/ / γ/ M/ ./ P/ (/ Cdpd/ )/ =/ 1d/ 属于/ cp/ 的/ 概率/ 或者/ 得分/ ./ 基于/ 邻居/ 类别/ 的/ 分类/ 方法/ 在/ 预测/ 一个/ 文档/ 类别/ 的/ 时候/ ,/ 不仅/ 考虑/ 本地/ 类别/ 分类器/ 的/ 预测/ 结果/ P/ (/ cp/ |/ d/ )/ ,/ 还/ 综合/ 考虑/ 祖先/ 类别/ 的/ 分类器/ 预测/ 结果/ P/ (/ Cap/ |/ d/ )/ 、/ 后代/ 类别/ 的/ 分类器/ 预测/ 结果/ P/ (/ Cdp/ |/ d/ )/ 、/ 兄弟/ 类别/ 上/ 的/ 分类器/ 预测/ 结果/ P/ (/ Csp/ |/ d/ )/ ,/ 因此/ ,/ 基于/ 邻居/ 类别/ 的/ 分类/ 方法/ 计算/ 文档/ d/ 属于/ 类别/ cp/ 的/ 概率/ 得分/ 如式/ (/ 6/ )/ 所示/ ./ 其中/ ,/ P/ (/ cp/ |/ d/ )/ 是/ d/ 关于/ cp/ 的/ 得分/ ,/ P/ (/ Cap/ |/ d/ )/ 是/ d/ 关于/ cp/ 的/ 祖先/ 类别/ 的/ 得分/ ,/ P/ (/ Csp/ |/ d/ )/ 是/ d/ 关于/ cp/ 的/ 兄弟/ 类别/ 的/ 得分/ ,/ P/ (/ Cdp/ |/ d/ )/ 是/ d/ 关于/ cp/ 的/ 后代/ 类别/ 的/ 得分/ ,/ β/ 1/ 、/ β/ 2/ 、/ β/ 3/ 、/ β/ 4/ 分别/ 是/ 4/ 项/ 的/ 权重/ ,/ Pfinal/ (/ cp/ |/ d/ )/ 是/ 文档/ d/ 关于/ 类别/ cp/ 的/ 最终/ 得分/ ,/ 等于/ 这/ 4/ 项/ 得分/ 的/ 加权/ 求和/ ./ Pfinal/ (/ cp/ |/ d/ )/ =/ β/ 1/ ×/ P/ (/ cp/ |/ d/ )/ +/ β/ 2/ ×/ P/ (/ Cap/ |/ d/ )/ +/ β/ 3/ ×/ 权重/ 系数/ β/ 1/ 、/ β/ 2/ 、/ β/ 3/ 、/ β/ 4/ 、/ α/ i/ (/ i/ =/ 1/ ,/ 2/ ,/ …/ ,/ k/ )/ 、/ γ/ m/ (/ m/ =/ 1/ ,/ 2/ ,/ …/ ,/ M/ )/ 可以/ 通过/ 学习/ 计算/ ,/ 也/ 可以/ 根据/ 经验/ 进行/ 设置/ ./ 3.2/ ./ 2/ 基于/ 多元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ 基于/ 多元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ (/ Multi/ -/ classifierbasedtop/ -/ downApproaches/ ,/ MC/ -/ top/ -/ down/ )/ 是/ 指/ 根据/ 类别/ 层次/ 树/ 逐层/ 为/ 具有/ 相同/ 父/ 节点/ 的/ 所有/ 类别/ 建立/ 一个/ 分类/ 模型/ ,/ 即/ 在/ 类别/ 层次/ 树中/ 所有/ 非/ 叶子/ 节点/ 上/ 分别/ 训练/ 一个多/ 类/ 分类器/ ,/ 对/ 文档/ 进行/ 自上而下/ 的/ 分类/ ,/ 如图/ 8/ 所示/ ./ Page8/ 在/ 基于/ 多元/ 分类器/ 方法/ 方面/ 已有/ 一些/ 工作/ ./ 凌云/ 等/ 人/ [/ 20/ ]/ 基于/ 隐含/ 语义/ 模型/ 在/ 每个/ 中间/ 节点/ 上/ 建立/ 多元/ 分类器/ ,/ 试图/ 通过/ 在/ 隐含/ 语义/ 空间/ 上/ 进行/ 分类/ ,/ 以/ 解决/ LSA/ 模型/ 中/ 高维/ 矩阵/ 难以/ 进行/ 奇异/ 值/ 分解/ 的/ 问题/ ./ 袁时/ 金/ 等/ 人/ [/ 21/ ]/ 分别/ 基于/ 贝叶斯/ 方法/ 、/ 最近/ 邻/ 方法/ 和/ Boosting/ 方法/ 构造/ 多元/ 分类器/ ,/ 并/ 以/ BBS/ 数据/ 作为/ 测试/ 文档/ 对/ 这/ 3/ 类/ 方法/ 进行/ 了/ 实验/ 测试/ ,/ 认为/ Boosting/ 方法/ 在/ 学习/ 能力/ 方面/ 表现/ 更为/ 优越/ ./ 随着/ 类别/ 层次/ 树/ 层次/ 增加/ ,/ 自上而下/ 分类/ 方法/ 会/ 产生/ 比较严重/ 的/ 错误/ 传播/ 问题/ ./ 对此/ ,/ Wang/ 等/ 人/ [/ 22/ ]/ 采用/ 扁平化/ 策略/ 对/ 类别/ 层次/ 树/ 进行/ 扁平化/ 处理/ ,/ 就是/ 通过/ 去除/ 类别/ 层次/ 树中/ 的/ 一部分/ 中间/ 节点/ 和/ 概念/ 节点/ 降低/ 树/ 的/ 高度/ ,/ 以/ 达到/ 减小/ 错误/ 传播/ 的/ 目的/ ./ 基于/ 多元/ 分类器/ 分类/ 方法/ 和/ 基于/ 二元/ 分类器/ 分类/ 方法/ 的/ 一个/ 主要/ 区别/ 就是/ 训练/ 数据/ 集/ 的/ 选择/ 方法/ 不同/ ./ 多元/ 分类器/ 的/ 训练/ 集由/ 每个/ 类别/ 的/ 正/ 样本/ 集合/ 组成/ ,/ 例如/ 在/ 图/ 8/ 中/ ,/ 对于/ 节点/ 2/ 上/ 的/ 分类器/ ,/ 需要/ 分别/ 指定/ 类别/ 2/ 的/ 子/ 类别/ 2.1/ 、/ 2.2/ 的/ 正/ 样本/ 集合/ ./ 二元/ 分类器/ 的/ 训练/ 集由/ 当前/ 类别/ 的/ 正/ 样本/ 集合/ 和/ 负/ 样本/ 集合/ 组成/ ,/ 例如/ 在/ 图/ 7/ 中/ ,/ 对于/ 节点/ 2/ 上/ 的/ 二元/ 分类器/ ,/ 需要/ 指定/ 类别/ 2/ 的/ 正/ 样本/ 集合/ 和/ 类别/ 节点/ cp/ 的/ 训练/ 集/ 选择/ 方法/ 排斥/ 的/ 同胞/ 策略/ [/ 25/ ]/ 表/ 5BC/ -/ top/ -/ down/ 的/ 训练/ 集/ 选择/ 方法/ 3.2/ ./ 3/ 基于/ 类别/ 层次/ 优化/ 的/ 自上而下/ 分类/ 方法/ 在/ 大规模/ 层次/ 分类/ 中/ ,/ 类别/ 层次/ 是/ 由/ 人工/ 订制/ 的/ ,/ 因此/ ,/ 这种/ 类别/ 层次结构/ 可能/ 并/ 不/ 适合/ 进行/ 自动/ 分类/ ./ 针对/ 这个/ 问题/ ,/ 一些/ 学者/ 提出/ 了/ 基于/ 类别/ 层次/ 优化/ 的/ 自上而下/ 分类/ 方法/ (/ HierarchyAdaptationbasedtop/ -/ downApproaches/ ,/ HA/ -/ top/ -/ down/ )/ ,/ 这种/ 方法/ 根据/ 样本/ 数据/ ,/ 通过/ 聚类/ 或者/ 逐步/ 优化/ 的/ 方式/ 修改/ 类别/ 层次结构/ ,/ 获得/ 一棵/ 更加/ 适合/ 自动/ 分类/ 的/ 类别/ 层次/ 树/ ,/ 然后/ 利用/ 新/ 的/ 类别/ 层次/ 树对/ 文档/ 进行/ 自上而下/ 的/ 分类/ ,/ 并且/ 根据/ 原/ 类别/ 层次/ 树/ 和/ 新/ 类别/ 层次/ 树/ 之间/ 的/ 节点/ 映射/ 关系/ ,/ 得到/ 文档/ 在/ 原/ 类别/ 层次/ 树中/ 的/ 类别/ ./ 类别/ 层次/ 优化/ 方法/ 分为/ 聚类/ 和/ 逐步/ 优化/ 两种/ 方式/ ,/ 聚类/ 方法/ [/ 26/ ]/ 是/ 先/ 将/ 类别/ 层次/ 树/ 分解/ 为/ 一组/ 平级/ 类别/ ,/ 然后/ 采用/ 聚类/ 方法/ 将/ 这些/ 类别/ 构建/ 为/ 一棵/ 更加/ 适合/ 自动/ 分类/ 的/ 类别/ 层次/ 树/ ./ 逐步/ 优化/ 方法/ [/ 27/ -/ 28/ ]/ 则/ 是/ 通过/ 提升/ 、/ 降级/ 、/ 合并/ 等/ 基本操作/ 修改/ 类别/ 层次结构/ ,/ 对/ 每次/ 修改/ 后/ 产生/ 的/ 类别/ 层次/ ,/ 进行/ 一次/ 分类/ 学习/ 和/ 测试/ ,/ 评估/ 新/ 产生/ 类别/ 层次/ 的/ 分类/ 性能/ ,/ 再进/ 2/ 的/ 负/ 样本/ 集合/ ./ 因此/ ,/ 对于/ 基于/ 多元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ ,/ 要/ 在/ cp/ 建立/ 多元/ 分类器/ ,/ 就要/ 为/ cp/ 的/ 每个/ 子/ 类别/ cpi/ 指定/ 正/ 样本/ 集合/ ,/ 常用/ 的/ 训练/ 集/ 选择/ 方法/ 有/ 两种/ ./ 如表/ 4/ 所示/ ,/ 第/ 1/ 种/ 方法/ 采用/ 排斥/ 策略/ ,/ 仅/ 将/ cpi/ 自身/ 实例/ 作为/ cpi/ 的/ 正/ 样本/ ,/ 第/ 2/ 种/ 方法/ 采用/ 包容/ 策略/ ,/ 将/ cpi/ 以及/ cpi/ 所有/ 后代/ 类别/ 的/ 实例/ 均/ 作为/ cpi/ 的/ 正/ 样本/ ./ cp/ 的/ 训练/ 集/ 选择/ 方法/ 排斥/ 策略/ [/ 23/ ]/ 包容/ 策略/ [/ 23/ ]/ cpi/ 的/ 实例/ 以及/ cpi/ 所有/ 后代/ 类别/ 的/ 实例/ 对于/ 基于/ 二元/ 分类器/ 的/ 自上而下/ 分类/ 方法/ ,/ 要/ 在/ 节点/ cp/ 建立/ 分类器/ ,/ 就要/ 为/ cp/ 指定/ 正/ 样本/ 集合/ 和/ 负/ 样本/ 集合/ ,/ 常用/ 的/ 训练/ 集/ 选择/ 方法/ 有/ 两种/ ,/ 具体/ 如表/ 5/ 所示/ ./ 第/ 1/ 种/ 方法/ 采用/ 同胞/ 策略/ ,/ 将/ cp/ 以及/ cp/ 所有/ 后代/ 类别/ 的/ 实例/ 作为/ cp/ 的/ 正/ 样本/ ,/ 将/ cp/ 所有/ 兄弟/ 类别/ 以及/ 这些/ 兄弟/ 类别/ 所有/ 后代/ 类别/ 的/ 实例/ 作为/ cp/ 的/ 负/ 样本/ ,/ 第/ 2/ 种/ 方法/ 采用/ 排斥/ 的/ 同胞/ 策略/ ,/ 仅/ 将/ cp/ 的/ 实例/ 作为/ 正/ 样本/ ,/ 将/ cp/ 所有/ 兄弟/ 类别/ 的/ 实例/ 作为/ 负/ 样本/ ./ 行下/ 一次/ 的/ 迭代/ 优化/ ,/ 直到/ 获得/ 满意/ 的/ 分类/ 性能/ ./ Lei/ 等/ 人/ [/ 27/ -/ 28/ ]/ 最早/ 提出/ 了/ 主题/ 类别/ 层次/ 优化/ 方法/ ,/ 其/ 目标/ 是/ 对/ 定义/ 好/ 的/ 类别/ 层次/ ,/ 采用/ 数据/ 驱动/ 方式/ 产生/ 一个/ 更加/ 适合/ 自动/ 分类/ 的/ 新/ 类别/ 层次/ ,/ 但/ 这种/ 迭代/ 优化/ 方法/ 收敛/ 比较慢/ ,/ 因此/ 在/ 应用/ 到/ 大规模/ 层次/ 分类/ 中/ 时会/ 产生/ 非常/ 大/ 的/ 计算/ 开销/ ,/ 对此/ ,/ Nit/ -/ ta/ 等/ 人/ [/ 29/ ]/ 提出/ 了/ 一种/ 改进/ 方法/ ,/ 即/ 在/ 算法/ 的/ 迭代/ 过程/ 中/ ,/ 通过/ 限制/ 每个/ 节点/ 的/ 最大/ 子/ 节点/ 数目/ 以/ 降低/ 计算/ 开销/ ./ Qi/ [/ 30/ -/ 31/ ]/ 采用/ 遗传算法/ 模拟/ 类别/ 层次/ 的/ 迭代/ 进化/ 过程/ ,/ 优化/ 类别/ 层次/ 以/ 提高/ 分类/ 准确率/ ./ 重构/ 方法/ 可以/ 获得最佳/ 性能/ 的/ 类别/ 层次/ 树/ ,/ 但/ 完全/ 重构/ 可能/ 导致/ 类别/ 层次/ 树/ 的/ 结构/ 不/ 平衡/ 从而/ 增大/ 训练/ 开销/ ,/ 而/ 逐步/ 优化/ 方法/ 则/ 可以/ 控制/ 类别/ 层次/ 树/ 的/ 结构/ 使/ 其/ 类别/ 分布/ 的/ 更加/ 平衡/ ./ 基于/ 类别/ 层次/ 优化/ 的/ 自上而下/ 分类/ 方法/ 的/ 优点/ 是/ 采用/ 数据/ 驱动/ 方式/ 可以/ 产生/ 一个/ 更加/ 适合/ 进行/ 自动/ 分类/ 的/ 类别/ 层次/ ,/ 缺点/ 是/ 类别/ 层次/ 的/ 迭代/ 优化/ 过程/ 一般/ 收敛/ 比较慢/ ,/ 而且/ 对/ 每次/ 迭代/ 产生/ 的/ 类别/ 层/ Page9/ 次/ 都/ 需要/ 进行/ 一次/ 分类/ 的/ 学习/ 和/ 测试/ ,/ 以/ 评估/ 新/ 产生/ 类别/ 层次/ 的/ 分类/ 性能/ ,/ 因此/ ,/ 随着/ 类别/ 层次/ 规模/ 的/ 扩大/ ,/ 优化/ 类别/ 层次/ 的/ 时间/ 开销/ 可能/ 会/ 难以/ 控制/ ./ 3.2/ ./ 4/ 自上而下/ 分类/ 方法/ 的/ 优缺点/ 自上而下/ 分类/ 方法/ 采用/ 分而治之/ 策略/ ,/ 按照/ 类别/ 层次/ 将/ 一个/ 大规模/ 全局/ 分类/ 问题/ 分解/ 为/ 一个个/ 小规模/ 的/ 局部/ 分类/ 问题/ ,/ 然后/ 进行/ 分类/ 学习/ 和/ 预测/ ./ 因此/ ,/ 该/ 方法/ 的/ 主要/ 优点/ 是/ 分类/ 学习/ 和/ 预测/ 的/ 计算/ 开销/ 比较/ 小/ ,/ 最/ 明显/ 的/ 缺点/ 是/ 错误/ 传播/ 问题/ ./ 随着/ 类别/ 层次/ 树/ 高度/ 的/ 增加/ ,/ 错误/ 传播/ 问题/ 加剧/ ,/ 深层/ 类别/ 的/ 分类/ 准确率/ 一般/ 会/ 明显/ 下降/ ,/ 因此/ 一些/ 方法/ 试图/ 通过/ 降低/ 类别/ 层次/ 树/ 的/ 高度/ 来/ 减少/ 错误/ 传播/ 带来/ 的/ 分类/ 误差/ ./ 3.3/ 收缩/ 分类/ 方法/ 收缩/ 分类/ 方法/ (/ ReduceApproaches/ ,/ 简称/ Reduce/ )/ 是/ 一种/ 先/ 搜索/ 再/ 分类/ 的/ 方法/ ,/ 即先/ 根据/ 待/ 分类/ 文档/ 在/ 所有/ 类别/ 中/ 搜索/ 与/ 该/ 文档/ 相关/ 的/ 候选/ 类别/ ,/ 然后/ 根据/ 候选/ 类别/ 的/ 样本/ 训练/ 分类器/ 并/ 对待/ 分类/ 文档/ 进行/ 分类/ ./ 因此/ ,/ 这种/ 方法/ 又/ 被/ 称为/ 两/ 阶段/ 分类/ 方法/ ,/ 其/ 核心思想/ 是/ 通过/ 减小/ 分类器/ 学习/ 的/ 类别/ 数目/ 以/ 提高/ 分类/ 准确率/ ./ 两/ 阶段/ 方法/ 基于/ 这样/ 一个/ 假设/ :/ 在/ 一棵/ 大规模/ 类别/ 层次/ 树中/ ,/ 给定/ 一个/ 文档/ ,/ 其/ 相关/ 类别/ 数量/ 远/ 少于/ 不/ 相关/ 类别/ ./ Xue/ 等/ 人/ [/ 32/ -/ 33/ ]/ 提出/ 了/ 一种/ 两/ 阶段/ 分类/ 方法/ ,/ 如图/ 9/ 所示/ ./ 两/ 阶段/ 分类/ 方法/ 分为/ 搜索/ 和/ 分类/ 两个/ 阶段/ ,/ 在/ 搜索/ 阶段/ 采用/ KNN/ 算法/ 进行/ 相关性/ 计算/ ,/ 确定/ 待/ 分类/ 文档/ 的/ 候选/ 类别/ ,/ 然后/ 在/ 分类/ 阶段/ 采用/ 朴素/ 贝叶斯/ 算法/ 根据/ 候选/ 类别/ 训练/ 分类器/ ,/ 最后/ 对待/ 分类/ 文档/ 分类/ ./ 在/ 此基础/ 上/ ,/ Oh/ 等/ 人/ [/ 34/ ]/ 也/ 实现/ 了/ 一种/ 两/ 阶段/ 分类/ 方法/ ,/ 他/ 采用/ 全文索引/ 检索/ 工具/ Lucene/ ①/ 计算/ 文档/ 的/ 候选/ 类别/ ,/ 在/ 分类/ 阶段/ 同样/ 采用/ 了/ 朴素/ 贝叶斯/ 算法/ ,/ 他/ 的/ 主要/ 工作/ 是/ 针对/ 大规模/ 层次/ 分类/ 问题/ 中/ 稀有/ 类别/ 缺少/ 训练样本/ 的/ 问题/ ,/ 提出/ 了/ 一个/ 训练/ 集/ 的/ 样本/ 扩展/ 策略/ ,/ 利用/ 类别/ 层次/ 树中/ 的/ 邻居/ 类别/ 增加/ 候选/ 类别/ 的/ 训练样本/ ./ 而/ Malik/ [/ 35/ ]/ 则/ 在/ 搜索/ 阶段/ 采用/ 了/ 基于/ SVM/ 的/ 自上而下/ 分类/ 方法/ 计算/ 候选/ 类别/ ,/ 其/ 主要/ 工作/ 是/ 试图/ 通过/ 降低/ 类别/ 层次/ 树/ 的/ 高度/ ,/ 减少/ 自上而下/ 分类/ 方法/ 中/ 的/ 错误/ 传播/ ,/ 提高/ 候选/ 搜索/ 方法/ 的/ 性能/ ./ 另外/ ,/ Rao/ ②/ 和/ Han/ [/ 36/ ]/ 进一步/ 将/ 两/ 阶段/ 分类/ 方法/ 应用/ 于/ 多/ 标签/ 分类/ 问题/ ./ 在/ 两/ 阶段/ 分类/ 方法/ 中/ ,/ 由于/ 第/ 2/ 阶段/ 的/ 分类/ 依赖于/ 第/ 1/ 阶段/ 候选/ 搜索/ 的/ 准确性/ ,/ 要/ 确保/ 分类/ 正确/ ,/ 就/ 应当/ 使/ 计算出来/ 的/ 候选/ 类别/ 集合/ 包含/ 待/ 分类/ 文档/ 的/ 真实/ 类别/ ./ 而已/ 有/ 的/ 两/ 阶段/ 分类/ 方法/ 均/ 未/ 对/ 候选/ 类别/ 搜索/ 方法/ 的/ 有效性/ 进行/ 评估/ ,/ 对此/ ,/ 本文/ 提出/ 评价/ 指标/ V/ Γ/ ,/ 以此/ 评价/ 一个/ 候选/ 搜索算法/ Γ/ 的/ 有效性/ ,/ 对于/ 待/ 分类/ 文档/ d/ ,/ 由/ 算法/ Γ/ 搜索/ 的/ 候选/ 类别/ 集合/ 为/ E/ ,/ 对于/ 单/ 标签/ 分类/ 问题/ ,/ V/ Γ/ 的/ 定义/ 如式/ (/ 10/ )/ 所示/ ./ 对于/ 多/ 标签/ 分类/ 问题/ ,/ V/ Γ/ 的/ 定义/ 如式/ (/ 11/ )/ 所示/ ,/ 其中/ a/ 是/ E/ 中/ 出现/ 的/ d/ 真实/ 类别/ 数目/ ,/ ld/ 是/ d/ 真实/ 类别/ 总数/ ./ V/ Γ/ (/ d/ )/ =/ 1/ ,/ 如果/ E/ 包含/ d/ 的/ 真实/ 类别/ V/ Γ/ (/ d/ )/ =/ a/ // ld/ ,/ 如果/ a/ >/ 0/ 对于/ 候选/ 搜索算法/ Γ/ ,/ 若/ 训练样本/ 集合/ 为/ I/ =/ {/ 〈/ d1/ ,/ v1/ 〉/ ,/ 〈/ d2/ ,/ v2/ 〉/ ,/ …/ ,/ 〈/ dn/ ,/ vn/ 〉/ }/ ,/ 文档/ di/ 的/ 真实/ 类别/ 为/ vi/ ,/ 样本/ 总数/ 为/ |/ I/ |/ ,/ 则/ V/ Γ/ 在/ I/ 上/ 的/ 平均值/ V/ Γ/ 的/ 定义/ 如式/ (/ 12/ )/ 所示/ ,/ 可以/ 用/ V/ Γ/ 衡量/ 候选/ 搜索算法/ Γ/ 在/ 样本/ 集合/ I/ 上/ 的/ 性能/ ./ V/ Γ/ 值/ 对/ 分类/ 非常/ 关键/ ,/ V/ Γ/ 值越/ 大/ ,/ 说明/ 候选/ 搜索算法/ 性能/ 越/ 好/ ,/ 分类/ 越/ 容易/ 进行/ ./ 因此/ ,/ 在/ 研究/ 两/ 阶段/ 分类/ 方法/ 时/ ,/ 应该/ 使/ 候选/ 搜索/ 方法/ 的/ V/ Γ/ 取值/ 最大/ ./ 基于/ 效率/ 考虑/ ,/ 大规模/ 层次/ 分类/ 中/ 的/ 候选/ 搜索/ 方法/ 一般/ 采用/ 信息检索/ 技术/ 搜索/ 待/ 分类/ 文档/ d/ 的/ 候选/ 类别/ ,/ 利用/ 向量/ 空间/ 模型/ 计算/ 文档/ d/ 和/ 不同/ 类别/ 的/ 相关性/ 得分/ ,/ 对/ 相关/ 类别/ 进行/ 排名/ ,/ 如果/ 将/ 候选/ 集合/ E/ 大小/ 设置/ 为/ k/ ,/ 则/ 将/ 前/ k/ 个/ 类别/ 作为/ 候选/ ./ 因此/ ,/ 候选/ 搜索/ 问题/ 是/ 指/ 给定/ 一个/ 样本/ 集合/ I/ ,/ 并且/ 指定/ 候选/ 集合/ E/ 的/ 大小/ ,/ 求解/ 具有/ 最大/ V/ Γ/ 值/ 的/ 最优/ 解/ Γ/ ./ 下面/ 证明/ 候选/ 搜索/ 问题/ 是/ 一个/ NP/ -/ 难解/ 问题/ ./ ①/ ②/ Page10/ 定理/ 1/ ./ 候选/ 搜索/ 问题/ 是/ 一个/ NP/ -/ 难解/ 问题/ ./ 证明/ ./ 为了/ 便于/ 证明/ ,/ 此处/ 用/ 布尔/ 向量/ 表示/ 文档/ d/ 的/ 特征/ 权重/ 向量/ ,/ 即将/ 在/ 文档/ d/ 中/ 出现/ 了/ 的/ 特征/ 权重/ 置/ 为/ 1/ ,/ 未/ 出现/ 的/ 特征/ 权重/ 置/ 为/ 0/ ;/ 另外/ 假设/ 每个/ 特征/ f/ 最多/ 和/ m/ 个/ 类别/ 相关/ ,/ 此处/ 将/ m/ 取值/ 为/ 1/ ;/ 另外/ 设置/ 候选/ 集合/ E/ 的/ 大小/ k/ 为/ 1/ ,/ 即/ 取得/ 分/ 最高/ 的/ 类别/ 作为/ 候选/ ./ 显然/ ,/ 实际/ 的/ 候选/ 搜索/ 问题/ 比/ 加入/ 以上/ 这些/ 限定/ 的/ 候选/ 搜索/ 问题/ 更加/ 困难/ ./ 因此/ ,/ 如果/ 该/ 特定/ 候选/ 搜索/ 问题/ 是/ NP/ -/ 难解/ 的/ ,/ 则/ 一般/ 搜索/ 问题/ 必然/ 是/ NP/ -/ 难解/ 的/ ./ 而/ 文献/ [/ 37/ ]/ 证明/ 了/ 可以/ 将/ 集合/ 覆盖/ 问题/ 规约/ 到/ 该/ 特定/ 候选/ 搜索/ 问题/ ,/ 由于/ 集合/ 覆盖/ 问题/ 是/ 一个/ NP/ 完全/ 问题/ ,/ 因此/ 该/ 特定/ 候选/ 搜索/ 问题/ 是/ 一个/ NP/ -/ 难解/ 问题/ ./ 所以/ ,/ 候选/ 搜索/ 问题/ 是/ 一个/ NP/ -/ 难解/ 问题/ ./ 由于/ 候选/ 搜索/ 问题/ 是/ NP/ -/ 难解/ 的/ ,/ 因此/ 对于/ 大规模/ 层次/ 分类/ 问题/ ,/ 求解/ 最优/ 解/ Γ/ 的/ 时间/ 开销/ 将会/ 难以/ 接受/ ./ 因此/ ,/ 可以/ 研究/ 采用/ 启发式/ 算法/ 求解/ 候选/ 搜索/ 问题/ ./ 总之/ ,/ 两/ 阶段/ 分类/ 方法/ 的/ 优点/ 是/ 通过/ 候选/ 搜索/ 有效/ 减小/ 了/ 数据/ 规模/ ,/ 因此/ 可以/ 灵活/ 地/ 选择/ 分类/ 方法/ 和/ 分类器/ ,/ 分类/ 准确率/ 比较/ 高/ ;/ 缺点/ 是/ 测试/ 分类/ 的/ 计算/ 开销/ 比较/ 大/ ,/ 因为/ 对于/ 每个/ 测试/ 样例/ ,/ 首先/ 要/ 搜索/ 和/ 计算/ 候选/ 类别/ ,/ 然后/ 根据/ 候选/ 类别/ 的/ 所有/ 样本/ 训练/ 分类器/ ,/ 再/ 对/ 文档/ 进行/ 分类/ ./ 4/ 大规模/ 层次/ 分类/ 方法/ 的/ 评价/ 和/ 比较/ 4.1/ 评价/ 标准/ 目前/ 大多数/ 的/ 层次/ 分类/ 方法/ 依旧/ 采用/ Flat/ 分类/ 方法/ 中/ 的/ 评价/ 标准/ 衡量/ 算法/ 的/ 分类/ 性能/ ,/ 经常/ 使用/ 的/ 有/ 准确率/ (/ accuracy/ )/ 、/ 正确率/ (/ precision/ )/ 、/ 召回/ 率/ (/ recall/ )/ 以及/ F1/ 值/ (/ F1/ -/ score/ 或/ F/ -/ measure/ )/ ./ 准确率/ 是/ 指/ 分类/ 正确/ 的/ 样本/ 占/ 所有/ 分类/ 测试/ 样本/ 的/ 比例/ ;/ 召回/ 率/ 是/ 指/ 分类/ 正确/ 的/ 样本/ 占/ 所有/ 目标/ 类中/ 样本/ 的/ 比例/ ;/ 正确率/ 是/ 指/ 分类/ 正确/ 的/ 样本/ 占/ 所有/ 被/ 指定/ 为/ 目标/ 类/ 的/ 样本/ 的/ 比例/ ;/ F1/ 是/ 召回/ 率/ 和/ 正确率/ 的/ 调和/ 平均数/ ./ 对于/ 类别/ c/ ,/ 其/ 测试/ 结果/ 邻接/ 表如表/ 6/ 所示/ ,/ 则/ 准确率/ 可/ 表示/ 为/ (/ TP/ +/ TN/ )/ // (/ TP/ +/ FN/ +/ TN/ +/ FP/ )/ ,/ 正确率/ 可/ 表示/ 为/ TP/ // (/ TP/ +/ FP/ )/ ,/ 召回/ 率/ 可/ 表示/ 为/ TP/ // (/ TP/ +/ FN/ )/ ,/ F1/ 计算公式/ 如式/ (/ 13/ )/ 所示/ :/ 准确率/ 反映/ 了/ 分类器/ 对/ 整个/ 样本/ 的/ 判定/ 能力/ ;/ 正确率/ 反映/ 了/ 分类器/ 对负/ 样本/ 的/ 判定/ 能力/ ;/ 召回/ 率/ 反映/ 了/ 分类器/ 对/ 正/ 样本/ 的/ 判定/ 能力/ ;/ F1/ 则/ 综合/ 考虑/ 了/ 分类器/ 对/ 正/ 样本/ 和/ 负/ 样本/ 的/ 判定/ 能力/ ./ 实验/ 中/ 通常/ 采用/ 宏/ 平均/ F1/ (/ Macro/ -/ F1/ )/ 和/ 微/ 平均/ F1/ (/ Micro/ -/ F1/ )/ 作为/ 衡量/ 算法/ 分类/ 性能/ 的/ 评价/ 标准/ ./ 类别/ c/ 分类器/ 判断/ 针对/ 大规模/ 层次/ 分类/ 方法/ ,/ 一些/ 学者/ 也/ 提出/ 了/ 相应/ 的/ 评价/ 标准/ ,/ 以/ 更好/ 地/ 评价/ 层次/ 分类/ 方法/ 的/ 分类/ 性能/ ,/ 但/ 目前/ 还/ 没有/ 一个/ 统一/ 的/ 评价/ 标准/ ./ 在/ 这些/ 评价/ 标准/ 中/ ,/ 树/ 误差/ [/ 38/ ]/ 、/ 层次/ 式/ 度量/ [/ 39/ ]/ 、/ 分级/ 度量/ [/ 13/ ]/ 是/ 应用/ 较为/ 广泛/ 的/ 几个/ 评价/ 标准/ ./ 文献/ [/ 38/ ]/ 提出/ 了/ 树/ 误差/ 这一/ 评价/ 标准/ 来/ 计算/ 树/ 分类/ 的/ 整体/ 误差/ ,/ 如式/ (/ 14/ )/ 所示/ ,/ 其中/ D/ 是/ 测试/ 文档/ 总数/ ,/ cd/ 是/ 文档/ d/ 的/ 预测/ 类别/ ,/ td/ 是/ 文档/ 的/ 真实/ 类别/ ,/ Path/ -/ length/ (/ cd/ ,/ td/ )/ 是/ cd/ 、/ td/ 相应/ 两个/ 节点/ 在/ 类别/ 层次/ 树中/ 之间/ 的/ 距离/ ./ 树/ 误差/ 可以/ 有效/ 评价/ 树/ 分类/ 算法/ 的/ 分类/ 性能/ ,/ 但是/ 不适/ 用于/ 有/ 向/ 无/ 环图/ 分类/ ,/ 因为/ 在/ 有/ 向/ 无/ 环图/ 类别/ 层次/ 中/ ,/ 节点/ 之间/ 的/ 距离/ 并/ 不/ 唯一/ ./ 文献/ [/ 39/ ]/ 提出/ 了/ 一个/ 同时/ 适用/ 于树/ 分类/ 和/ 有/ 向/ 无/ 环图/ 分类/ 的/ 评价/ 标准/ :/ 层次/ 式/ 度量/ ,/ 包括/ 层次/ 式/ 正确率/ (/ HierarchicalPrecision/ ,/ HP/ )/ 、/ 层次/ 式/ 召回/ 率/ (/ HierarchicalRecall/ ,/ HR/ )/ 、/ 层次/ 式/ F/ 度量/ (/ Hier/ -/ archicalF/ -/ measure/ ,/ HF/ )/ ,/ HP/ 、/ HR/ 、/ HF/ 的/ 定义/ 如式/ (/ 15/ )/ ~/ (/ 17/ )/ 所示/ ,/ 其中/ ^/ Pi/ 是/ 包括/ 文档/ i/ 预测/ 类别/ 以及/ 该/ 类别/ 所有/ 祖先/ 类别/ 在内/ 的/ 集合/ ,/ ^/ Ti/ 是/ 包括/ 文档/ i/ 真实/ 类别/ 以及/ 该/ 类别/ 所有/ 祖先/ 类别/ 在内/ 的/ 集合/ ./ 层次/ 式/ 度量/ 适用/ 于/ 所有/ 满足/ 偏序/ 关系/ 的/ 类别/ 层次/ ,/ 因此/ 可以/ 用于/ 树/ 分类/ 和/ 有/ 向/ 无/ 环图/ 分类/ ,/ 而/ 不能/ 用于/ 有/ 向/ 有/ 环图/ 分类/ ./ Page11/ 树/ 误差/ 和/ 层次/ 式/ 度量/ 均/ 是从/ 整体/ 上/ 评价/ 算法/ 的/ 分类/ 性能/ ,/ 为了/ 能够/ 分析/ 算法/ 在/ 类别/ 层次/ 中/ 不同/ 层级/ 上/ 的/ 分类/ 性能/ ,/ Liu/ 等/ 人/ [/ 12/ ]/ 提出/ 了/ 一种/ 分级/ 度量/ 方法/ ,/ 分别/ 计算/ 分类/ 算法/ 在/ 类别/ 层次/ 中/ 每/ 一级/ 上/ 的/ 准确率/ ,/ 例如/ ,/ 若/ 分类/ 算法/ 判断/ 测试/ 文档/ d/ 在/ 图/ 1/ (/ a/ )/ 中/ 的/ 类别/ 为/ 2.1/ ./ 2/ ,/ 那么/ 我们/ 在/ 评价/ 第/ 1/ 级/ 分类/ 性能/ 的/ 时候/ 只/ 关心/ d/ 是否/ 真/ 属于/ 类别/ 2/ ,/ 当/ 评价/ 第/ 2/ 级/ 分类/ 性能/ 的/ 时候/ 只/ 关心/ d/ 是否/ 真/ 属于/ 类别/ 2.1/ ,/ 以此类推/ ./ 分级/ 度量/ 由于/ 能够/ 直观/ 评价/ 算法/ 在/ 不同/ 层级/ 上/ 的/ 性能/ 表现/ ,/ 因此/ 应用/ 较为/ 广泛/ ,/ 文献/ [/ 12/ ,/ 32/ -/ 34/ ,/ 40/ ]/ 均/ 采用/ 分级/ 度量/ 评价/ 算法/ 性能/ ./ 总之/ ,/ 层次/ 式/ 度量/ 适用/ 于/ 对/ 单/ 标签/ 路径/ 分类/ 、/ 多表/ 7/ 不同/ 分类/ 方法/ 的/ 特点/ 方法/ Flat/ 实现/ 简单/ ./ Big/ -/ bang/ 在/ 分类/ 的/ 学习/ 和/ 预测/ 中/ ,/ 考虑/ 类别/ 层次/ 关系/ ./ BC/ -/ top/ -/ down/ 实现/ 简单/ ;/ 自然/ 支持/ 多/ 标签/ 分类/ ./ MC/ -/ top/ -/ down/ 实现/ 简单/ ;/ 相比/ 基于/ 二元/ 分类器/ 的/ 自上而下/ 方法/ 分类器/ 数量/ 较少/ ./ 仅/ 支持/ 树形/ 类别/ 层次/ 的/ 分类/ 问题/ ./ HA/ -/ top/ -/ down/ 产生/ 一个/ 更加/ 适合/ 进行/ 自动/ 分类/ 的/ 类别/ 层次/ ./ Top/ -/ down/ 方法/ 的/ 共同/ 特点/ Reduce/ 灵活/ ,/ 可以/ 采用/ 一般/ 分类/ 算法/ ./ 对于/ 分类/ 性能/ ,/ 有没有/ 一种/ 分类/ 方法/ 普遍/ 优于/ 其它/ 分类/ 方法/ ?/ 对此/ ,/ 我们/ 基于/ 已有/ 相关/ 工作/ 中/ 的/ 结论/ ,/ 对/ 不同/ 分类/ 方法/ 的/ 分类/ 性能/ 进行/ 了/ 比较/ ,/ 如表/ 8/ 所示/ ,/ 符号/ >/ 、/ ~/ 、/ </ 分别/ 表示/ 相应/ 行/ 的/ 方法/ 的/ 分类/ 性能/ 优于/ 、/ 相似/ 、/ 差于/ 相应/ 列/ 的/ 方法/ ,/ 行上/ 的/ 方法/ 是/ 相关/ 工作/ 作者/ 提出/ 的/ 新/ 算法/ ,/ 而列/ 上/ 的/ 方法/ 则/ 为/ 基准/ 表/ 8/ 不同/ 分类/ 方法/ 的/ 性能/ 比较/ Big/ -/ bangBC/ -/ top/ -/ downMC/ -/ top/ -/ down/ 袁时/ 金/ 等/ 人/ [/ 21/ ]/ (/ 2004/ )/ >/ HA/ -/ top/ -/ downReduce/ 标签/ 路径/ 分类/ 、/ 全/ 深度/ 标签/ 分类/ 、/ 部分/ 深度/ 标签/ 分类/ 、/ 树形/ 分类/ 、/ 有/ 向/ 无/ 环图/ 分类/ 等/ 大多数/ 层次/ 分类/ 方法/ 进行/ 性能/ 评价/ ,/ 是/ 一个/ 适用性/ 较强/ 的/ 整体/ 评价/ 方法/ ,/ 而/ 分级/ 度量/ 则/ 是/ 一种/ 适用/ 于/ 树形/ 分类/ 的/ 简单/ 直观/ 的/ 评价/ 方法/ ./ 4.2/ 不同/ 分类/ 方法/ 的/ 比较/ 在/ 衡量/ 一个/ 分类/ 算法/ 优劣/ 的/ 时候/ ,/ 除了/ 分类/ 性能/ 之外/ ,/ 还/ 需要/ 考虑/ 算法/ 的/ 易用性/ 、/ 时间/ 开销/ 、/ 推广/ 能力/ 等/ 因素/ ./ 下面/ 我们/ 对/ 第/ 3/ 节/ 介绍/ 的/ 6/ 种/ 分类/ 方法/ ,/ 从/ 算法/ 的/ 易用性/ 、/ 时间/ 开销/ 、/ 分类/ 性能/ 等/ 方面/ 进行/ 一个/ 概括/ 的/ 比较/ ./ 表/ 7/ 列出/ 了/ 这/ 6/ 种/ 分类/ 方法/ 各自/ 的/ 特点/ 以及/ 自上而下/ 分类/ 方法/ 的/ 共同/ 特点/ ./ 算法/ ./ 从表/ 8/ 可以/ 看出/ ,/ 相比/ Flat/ 方法/ ,/ Top/ -/ down/ 方法/ 和/ Big/ -/ bang/ 方法/ 应该/ 更/ 有/ 竞争力/ ./ HA/ -/ top/ -/ down/ 方法/ 通过/ 优化/ 类别/ 层次结构/ 可以/ 进一步提高/ Top/ -/ down/ 方法/ 的/ 分类/ 性能/ ,/ 而/ Reduce/ 方法/ 通过/ 减小/ 分类/ 问题/ 的/ 规模/ ,/ 也/ 可以/ 提高/ Flat/ 方法/ 和/ Top/ -/ down/ 方法/ 的/ 分类/ 性能/ ./ 由于/ 大规模/ 层次/ 分类/ 问题/ >/ >/ </ Page12/ 目前/ 还/ 没有/ 公认/ 的/ 测试数据/ 集/ 和/ 评价/ 标准/ ,/ 因此/ 表/ 8/ 中/ 的/ 相关/ 工作/ 是/ 在/ 不同/ 的/ 数据/ 集上/ 对/ 算法/ 进行/ 性能/ 测试/ ,/ 在/ 这些/ 工作/ 当中/ ,/ 一些/ 研究者/ 采用/ 的/ 是从/ ODP/ 目录/ 、/ 雅虎/ 目录/ 采集/ 到/ 的/ 数据/ 集/ ,/ 还有/ 一些/ 研究者/ 采用/ 的/ 是/ 特定/ 领域/ 的/ 数据/ 集/ ,/ 而且/ 所/ 采用/ 的/ 评价/ 标准/ 也/ 不尽相同/ ,/ 因此/ 难以/ 对/ 这些/ 分类/ 方法/ 进行/ 一个/ 比较/ 全面/ 的/ 评价/ 和/ 比较/ ./ 所以/ ,/ 哪/ 种/ 大规模/ 层次/ 分类/ 方法/ 更好/ 依旧/ 是/ 一个/ 悬而未决/ 的/ 问题/ ./ 下面/ 我们/ 分析/ 这/ 6/ 种/ 分类/ 方法/ 对/ 不同/ 大规模/ 层次/ 分类/ 问题/ 的/ 适用性/ ./ 对于/ 一个/ 大规模/ 层次/ 分类/ 问题/ G/ =/ 〈/ H/ ,/ P/ ,/ L/ ,/ D/ 〉/ ,/ 其中/ H/ 的/ 可能/ 取值/ 有/ T/ 、/ DAG/ 和/ DCG/ ,/ P/ 的/ 可能/ 取值/ 有/ SD/ 和/ MD/ ,/ L/ 的/ 可能/ 取值/ 有/ SPL/ 和/ MPL/ ,/ D/ 的/ 可能/ 取值/ 有/ FD/ 和/ PD/ ./ 由于/ 多维度/ 分类/ 问题/ 可以/ 分解/ 为单/ 维度/ 分类/ 问题/ 处理/ ,/ 并且/ 所有/ 的/ 分类/ 算法/ 均/ 适用/ 于单/ 维度/ 分类/ ,/ 所以/ 此处/ 不再/ 考虑/ 分类/ 算法/ 对于/ 属性/ P/ 的/ 适用性/ ./ 表/ 9/ 列出/ 了/ 6/ 种/ 分类/ 方法/ 对/ T/ 、/ DAG/ 、/ DCG/ 、/ SPL/ 、/ MPL/ 、/ FD/ 、/ PD/ 这/ 7/ 种/ 分类/ 问题/ 的/ 适用性/ ,/ √/ 表示/ 适用/ ,/ ×/ 表示/ 不/ 适用/ ./ Top/ -/ down/ 方法/ 由于/ 要求/ 类别/ 层次/ 满足/ 偏序/ 关系/ ,/ 因此/ 3/ 类/ Top/ -/ down/ 方法/ 均/ 不适/ 用于/ 有/ 向/ 有/ 环图/ 分类/ 问题/ ./ 基于/ 多元/ 分类器/ 的/ Top/ -/ down/ 方法/ 用于/ 有/ 向/ 无/ 环图/ 分类/ 时会/ 产生/ 不/ 一致/ 问题/ ,/ 因为/ 在/ 分类/ 过程/ 中/ ,/ 具有/ 多个/ 父/ 节点/ 的/ 类别/ 可能/ 导致/ 分类/ 结果/ 的/ 不/ 一致/ ,/ 例如/ 在/ 图/ 1/ (/ b/ )/ 中/ ,/ 2.1/ 有/ 两个/ 父/ 节点/ 1/ 和/ 2/ ,/ 在/ 分类/ 过程/ 中/ ,/ 若/ 节点/ 1/ 上/ 的/ 分类器/ 判断/ 文档/ d/ 属于/ 2.1/ ,/ 而/ 节点/ 2/ 上/ 的/ 分类器/ 判断/ 文档/ d/ 不/ 属于/ 2.1/ ,/ 则/ 结果/ 互相矛盾/ ,/ 因此/ 基于/ 多元/ 分类器/ 的/ Top/ -/ down/ 方法/ 不适/ 用于/ 有/ 向/ 无/ 环图/ 分类/ ./ Flat/ 方法/ 由于/ 要求/ 所有/ 实例/ 均/ 位于/ 叶子/ 类别/ ,/ 因此/ 不适/ 用于/ 部分/ 深度/ 标签/ 分类/ ,/ 除非/ 将/ 部分/ 深度/ 标签/ 分类/ 问题/ 转化/ 为/ 全/ 深度/ 标签/ 分类/ 问题/ ,/ 否则/ 不能/ 用于/ 部分/ 深度/ 标签/ 分类/ ./ 方法/ TDAGDCGSPLMPLFDPDFlat/ √/ √/ √/ √/ √/ √/ ×/ Big/ -/ bang/ √/ √/ √/ √/ √/ √/ √/ BC/ -/ top/ -/ down/ √/ √/ ×/ √/ √/ √/ √/ MC/ -/ top/ -/ down/ √/ ×/ ×/ √/ √/ √/ √/ HA/ -/ top/ -/ down/ √/ √/ ×/ √/ √/ √/ √/ Reduce/ √/ √/ √/ √/ √/ √/ √/ 5/ 未来/ 研究/ 方向/ 大规模/ 层次/ 分类/ 问题/ 的/ 研究/ 尚/ 处于/ 起步/ 阶段/ ,/ 结合实际/ 应用/ 需求/ 和/ 大规模/ 层次/ 分类/ 问题/ 研究/ 现状/ ,/ 我们/ 认为/ 未来/ 的/ 研究/ 方向/ 主要/ 有/ 如下/ 几个/ 方面/ :/ (/ 1/ )/ 类别/ 层次/ 中/ 稀有/ 类别/ 的/ 分类/ 方法/ 研究/ 在/ 大规模/ 层次/ 分类/ 中/ ,/ 稀有/ 类别/ 在/ 类别/ 层次/ 中/ 非常/ 普遍/ ./ 在/ ODP/ 目录/ 、/ 雅虎/ 目录/ 等/ 主流/ Web/ 分类目录/ 中/ ,/ 70/ %/ 左右/ 类别/ 的/ 实例/ 个数/ 不足/ 10/ 个/ ./ 由于/ 稀有/ 类别/ 的/ 实例/ 非常少/ ,/ 这/ 使得/ 难以/ 发现/ 稀有/ 类别/ 的/ 规律性/ ,/ 降低/ 了/ 分类器/ 的/ 学习效果/ ./ 对此/ ,/ 现有/ 方法/ 利用/ 邻居/ 类别/ 来/ 增加/ 稀有/ 类别/ 的/ 训练样本/ ,/ 即将/ 稀有/ 类别/ 在/ 类别/ 层次/ 中/ 的/ 邻居/ 类别/ 的/ 实例/ 也/ 作为/ 稀有/ 类别/ 的/ 训练样本/ ./ 这种/ 方法/ 以/ 稀有/ 类别/ 所在/ 的/ 类别/ 路径/ 或者/ 子树/ 的/ 特征/ 代表/ 稀有/ 类别/ 的/ 特征/ ,/ 而/ 由于/ 稀有/ 类别/ 自身/ 实例/ 相对/ 稀少/ ,/ 这/ 将/ 导致/ 稀有/ 类别/ 淹没/ 到/ 其/ 所在/ 的/ 类别/ 路径/ 或者/ 子树/ 当中/ ,/ 最终/ 导致/ 分类/ 结果/ 发生/ 漂移/ ./ 因此/ ,/ 稀有/ 类别/ 分类/ 是/ 大规模/ 层次/ 分类/ 中/ 一个/ 亟待解决/ 的/ 问题/ ./ (/ 2/ )/ 类别/ 层次/ 中/ 深层/ 类别/ 的/ 分类/ 方法/ 研究/ 在/ 大规模/ 层次/ 分类/ 中/ ,/ 类别/ 层次/ 的/ 深度/ 一般/ 比较/ 深/ ,/ 称之为/ 深层次/ 结构/ (/ deephierarchy/ )/ ./ 例如/ ,/ 雅虎/ 目录/ 的/ 类别/ 层次/ 深度/ 为/ 16/ ,/ ODP/ 目录/ 的/ 类别/ 层次/ 深度/ 为/ 12/ ./ 类别/ 层次/ 的/ 这种/ 结构/ 特点/ ,/ 导致/ 深层/ 类别/ 的/ 分类/ 准确率/ 下降/ 明显/ ./ 现有/ 方法/ 在/ 处理/ 深层/ 类别/ 类/ 问题/ 的/ 时候/ ,/ 通常/ 采用/ 扁平化/ 策略/ ,/ 通过/ 去除/ 一部分/ 中间/ 节点/ 和/ 概念/ 节点/ 以/ 降低/ 类别/ 层次/ 高度/ 、/ 减少/ 错误/ 传播/ 而/ 提高/ 分类/ 准确率/ ,/ 这/ 类/ 方法/ 通过/ 降低/ 类别/ 层次/ 高度/ ,/ 一定/ 程度/ 上/ 可以/ 减小/ 错误/ 传播/ ./ 导致/ 深层/ 类别/ 分类/ 性能/ 比较/ 差/ 的/ 原因/ 除了/ 错误/ 传播/ 问题/ 之外/ ,/ 另外/ 还有/ 两个/ 因素/ :/ 一是/ 深层/ 类别/ 中/ 许多/ 类别/ 是/ 稀有/ 类别/ ;/ 二是/ 随着/ 目录/ 深度/ 的/ 增加/ ./ 相邻/ 类别/ 之间/ 的/ 相似性/ 增强/ ./ 现有/ 研究/ 并未/ 将/ 这/ 两个/ 因素/ 考虑/ 在内/ ./ 因此/ ,/ 未来/ 对/ 深层/ 类别/ 分类/ 问题/ 的/ 研究/ 可以/ 从/ 这/ 两个/ 方面/ 入手/ ./ (/ 3/ )/ 半/ 监督/ 的/ 类别/ 层次结构/ 调整/ 方法/ 研究/ 在/ 类别/ 层次/ 的/ 使用/ 过程/ 中/ ,/ 用户/ 往往/ 会/ 根据/ 需要/ 调整/ 类别/ 层次结构/ ,/ 例如/ 增加/ 或/ 删除/ 一些/ 节点/ ./ 尤其/ 是/ 对于/ 网络资源/ 目录/ 这种/ 类别/ 层次/ ,/ 随着/ 互联网/ 的/ 快速/ 发展/ ,/ 信息/ 分类目录/ 需要/ 不断/ 扩展/ ,/ 在/ 目录/ 结构/ 扩展/ 过程/ 中/ ,/ 需要/ 将/ 已有/ 的/ 实例/ 重新/ 指定/ 到/ 新/ 目录/ 中/ ,/ 这个/ 过程/ 如果/ 由/ 人工/ 完成/ ,/ 则/ 会/ 产生/ 巨大/ 的/ 工作量/ ./ 因此/ ,/ 在/ 人工/ 调整/ 目录/ 结构/ 之后/ ,/ 需要/ 将/ 目录/ 中/ 已有/ 实例/ 自动/ 指定/ 到/ 新/ 目录/ 中/ 的/ 类别/ ,/ 这/ 就/ 需要/ 一种/ 半/ 监督/ 的/ 类别/ 层次结构/ 调整/ 方法/ ,/ 以/ 保证/ 类别/ 层次/ 的/ 可扩展性/ ./ (/ 4/ )/ 有/ 向/ 无/ 环图/ 和/ 有/ 向/ 有/ 环图/ 的/ 分类/ 方法/ 研究/ 目前/ 的/ 大规模/ 层次/ 分类/ 方法/ 研究/ 主要/ 针对/ 树形/ Page13/ 类别/ 层次/ 的/ 分类/ 问题/ ,/ 对于/ 有/ 向/ 无/ 环图/ 和/ 有/ 向/ 有/ 环图/ 两种/ 类别/ 层次/ 的/ 分类/ 问题/ 研究/ 很少/ ,/ 而/ 在/ 实际/ 应用/ 中/ ,/ 类别/ 往往/ 会/ 被/ 组织/ 成有/ 向/ 无/ 环图/ ,/ 甚至/ 更/ 复杂/ 的/ 有/ 向/ 有/ 环图/ ./ 例如/ ,/ 维基百科/ 分类目录/ ①/ 的/ 类别/ 体系/ 就是/ 一个/ 复杂/ 的/ 有/ 向/ 有/ 环图/ ,/ 而/ ODP/ 目录/ 则/ 是/ 一个/ 有/ 向/ 无/ 环图/ ,/ 因为/ 该/ 目录/ 中/ 的/ 一些/ 类别/ 节点/ 有/ 多个/ 父/ 节点/ ./ 所以/ 在/ 面向/ 实际/ 应用/ 时/ ,/ 就/ 需要/ 对/ 有/ 向/ 无/ 环图/ 和/ 有/ 向/ 有/ 环图/ 这/ 两种/ 类型/ 的/ 大规模/ 层次/ 分类/ 问题/ 进行/ 研究/ ./ 6/ 结束语/ 大规模/ 层次/ 分类/ 是/ 一个/ 新/ 研究/ 热点/ ./ 从/ 树形/ 类别/ 层次/ 的/ 分类/ 问题/ 到/ 有/ 向/ 无/ 环图/ 和/ 有/ 向/ 有/ 环图/ 的/ 分类/ 问题/ 、/ 从/ 单一/ 维度/ 的/ 分类/ 问题/ 到/ 多个/ 维度/ 的/ 分类/ 问题/ 、/ 从单/ 标签/ 路径/ 分类/ 问题/ 到/ 多/ 标签/ 路径/ 分类/ 问题/ 、/ 从全/ 深度/ 标签/ 分类/ 问题/ 到/ 部分/ 深度/ 标签/ 分类/ 问题/ 都/ 受到/ 了/ 大家/ 的/ 关注/ ./ 可以/ 说/ ,/ 大规模/ 层次/ 分类/ 问题/ 是/ 一个/ 非常/ 活跃/ 的/ 方向/ ./ 从/ 整体/ 上/ 讲/ ,/ 目前/ 在/ 大规模/ 层次/ 分类/ 问题/ 方面/ 的/ 研究/ 还/ 不/ 成熟/ ,/ 尚未/ 建立/ 起/ 一套/ 完整/ 的/ 理论体系/ ,/ 而且/ 从/ 理论/ 的/ 完善/ 到/ 算法/ 的/ 具体/ 应用/ 还有/ 很大/ 的/ 差距/ ./ 本文/ 回顾/ 了/ 近年来/ 学术界/ 在/ 大规模/ 层次/ 分类/ 领域/ 的/ 主要/ 成果/ ,/ 对/ 大规模/ 层次/ 分类/ 问题/ 的/ 各/ 方面/ 进行/ 了/ 综述/ ,/ 详细/ 介绍/ 了/ 各种/ 典型/ 的/ 求解/ 方法/ 并/ 加以/ 对比/ ,/ 最后/ 对/ 各种/ 求解/ 方法/ 进行/ 了/ 总结/ 并/ 指明/ 了/ 未来/ 研究/ 的/ 方向/ ./ 致谢/ 在/ 此/ ,/ 我们/ 向/ 对/ 本文/ 的/ 工作/ 给予/ 支持/ 和/ 建议/ 的/ 同行/ ,/ 尤其/ 是/ 国防科技大学/ 计算机/ 学院/ 软件/ 所/ 613/ 教研室/ 的/ 老师/ 和/ 同学/ 表示感谢/ !/ 

