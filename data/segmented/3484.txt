Page1/ 海量/ 数据分析/ 的/ One/ -/ size/ -/ fits/ -/ allOLAP/ 技术/ 张延松/ 1/ )/ ,/ 2/ )/ 焦敏/ 1/ )/ ,/ 3/ )/ 王占伟/ 1/ )/ ,/ 3/ )/ 王珊/ 1/ )/ ,/ 3/ )/ 周/ ?/ 1/ )/ ,/ 3/ )/ 1/ )/ (/ 数据/ 工程/ 与/ 知识/ 工程/ 教育部/ 重点/ 实验室/ (/ 中国人民大学/ )/ 北京/ 100872/ )/ 2/ )/ (/ 中国人民大学/ 中国/ 调查/ 与/ 数据中心/ 北京/ 100872/ )/ 3/ )/ (/ 中国人民大学/ 信息/ 学院/ 北京/ 100872/ )/ 摘要/ 传统/ 的/ OLAP/ 被/ 迅速/ 膨胀/ 的/ 海量/ 数据/ 推动/ 进入/ 了/ 大规模/ 数据分析/ 时代/ ,/ 其/ 主要/ 特点/ 是/ 存储密度/ 大/ ,/ 计算/ 强度/ 大/ ,/ 需要/ 大规模/ 并行/ 存储/ 和/ 处理/ 能力/ ./ 无论是/ 传统/ 的/ 并行/ 数据库/ 技术/ 还是/ 热点/ 的/ MapReduce/ 技术/ 都/ 不得不/ 面对/ 海量/ 数据/ 在/ 大规模/ 并行处理/ 环境/ 下/ 的/ 性能/ 和/ 并行处理/ 效率/ 的/ 问题/ ./ 以/ 星型/ 模型/ 上/ 复杂/ 多表/ 连接/ 为/ 基础/ 的/ OLAP/ 算法/ 的/ 复杂度/ 和/ 并行处理/ 过程/ 中/ 的/ 数据网络/ 传输/ 代价/ 都/ 成为/ 制约/ 性能/ 的/ 重要/ 因素/ ./ 通过/ 深入分析/ OLAP/ 存储/ 模型/ 和/ 查询/ 负载/ 特征/ ,/ 提出/ 了/ 对/ OLAP/ 查询/ 中/ 最/ 基础/ 的/ SPJGA/ -/ OLAP/ 子集/ 在/ 存储/ 、/ 查询处理/ 、/ 数据分布/ 、/ 网络/ 传输/ 和/ 分布式/ 缓存/ 等/ 方面/ 面向/ 海量/ 数据/ 大规模/ 并行处理/ 框架/ 的/ 优化/ 策略/ 和/ 实现/ 技术/ ./ 通过/ 对/ TPC/ -/ H/ 和/ SSB/ 两个/ 工业界/ 和/ 学术界/ 公认/ 的/ 测试/ 标准/ 的/ 分析/ ,/ 评估/ 了/ 技术/ 的/ 可行性/ ./ 提出/ 了/ 以/ 内存/ predicate/ -/ vectorDDTA/ -/ JOIN/ 算法/ 为/ 核心/ 的/ 并行/ 内存/ OLAP/ 架构/ ,/ 以维表上/ 规范化/ 的/ 谓词/ 向量/ 操作/ 替代/ 了/ 多样/ 的/ 连接/ 执行/ 计划/ ,/ 实现/ 以/ 一种/ 查询处理/ 模型/ 同时/ 满足/ 集中式/ 处理/ 和/ 大规模/ 并行/ OLAP/ 处理/ 的/ 需求/ ,/ 充分利用/ 现代/ 计算机/ 的/ 硬件/ 优势/ ,/ 最小化/ 网络/ 传输/ 和/ OLAP/ 查询处理/ 代价/ ./ 实验/ 中/ 分析/ 了/ 在/ 1TB/ 和/ 100TB/ 数据/ 集中/ 数据分布/ 策略/ 的/ 存储/ 代价/ 和/ 传输/ 代价/ ,/ 通过/ 并行/ OLAP/ 代价/ 模型/ 和/ 实际/ 数据/ 的/ 实验/ 测试/ 验证/ 了/ 技术/ 的/ 可行性/ 和/ 并行处理/ 效率/ ./ 关键词/ OLAP/ ;/ 海量/ 数据分析/ 处理/ ;/ 谓词/ 向量/ ;/ 星型/ 模型/ 1/ 引言/ OLAP/ 是/ 一种/ 多维/ 数据分析/ 处理/ 模型/ ,/ 基于/ 关系数据库/ 的/ OLAP/ (/ RelationalOLAP/ ,/ ROLAP/ )/ 是/ 一种/ 面向/ 分析/ 型/ 负载/ 的/ 读/ 密集型/ 查询处理/ ./ OLAP/ 以/ 星型/ 模型/ 和/ 雪花/ 型/ 模型/ 为/ 存储/ 模型/ ,/ 一般/ 由/ 一个/ 事实/ 表/ 和/ 多个/ 维表/ 组成/ ,/ OLAP/ 的/ 基本功能/ 是/ 切片/ 、/ 切块/ 、/ 上卷/ 、/ 下/ 钻/ 、/ 旋转/ 等/ 操作/ ,/ 即/ 在/ 事实/ 表与维表/ 连接/ 的/ 基础/ 上/ 进行/ 不同/ 粒度/ 的/ 分组/ 聚集/ 计算/ ./ 在/ 海量/ 数据处理/ 时代/ ,/ TB/ 级/ 甚至/ PB/ 级/ 的/ 数据/ 需要/ 大规模/ 并行计算/ 网络/ 的/ 支持/ ,/ 巨大/ 的/ 存储/ 、/ 连接/ 、/ 传输/ 和/ 聚集/ 归并/ 等/ 代价/ 使/ SQL/ 引擎/ 不堪重负/ ./ SQL/ 引擎/ 以/ 传统/ 的/ 事务/ 型/ 处理/ 为/ 基础/ (/ OLTP/ )/ ,/ 相对/ 于/ OLAP/ 负载/ 以/ 数据/ 计算/ 为/ 中心/ 的/ 查询处理/ 模式/ 显得/ 过于/ 复杂/ ,/ 一方面/ 复杂/ 的/ 事务/ 和/ 并发/ 机制/ 增加/ 了/ 冗余/ 的/ 代码/ 代价/ ,/ 另一方面/ 面向/ 大/ 数据/ 集/ 的/ 复杂/ 多表/ 连接/ 操作/ 缺乏/ 强有力/ 的/ 技术支持/ ./ 以/ 传统/ 的/ 并行/ 事务处理/ 为/ 基础/ 的/ 并行/ 数据库/ 技术/ 在/ 扩展性/ 方面/ 受/ 分布式/ 事务/ 控制/ 机制/ 的/ 制约/ 而/ 缺乏/ 良好/ 的/ 可扩展性/ ,/ 当前/ 新兴/ 的/ 分析/ 型/ 数据库/ (/ 如/ Vertica/ 、/ ParAccel/ 、/ Greenplum/ 等/ )/ 虽然/ 面向/ 分析/ 型/ 数据处理/ 的/ 特征/ 优化/ 了/ 存储/ 、/ 查询处理/ 和/ 并行计算/ 等/ 技术/ ,/ 但/ 其/ 查询处理/ 技术/ 仍然/ 带有/ OLTP/ 查询处理/ 引擎/ 的/ 影子/ ,/ 是/ 一种/ 由/ 通用/ SQL/ 引擎/ 面向/ OLAP/ 负载/ 的/ 特殊/ 优化/ 技术/ ./ MapReduce/ 是/ 一种/ 大规模/ 并行计算/ 模型/ ,/ 它/ 良好/ 的/ 扩展性/ 使/ 其/ 成为/ 海量/ 数据/ 大规模/ OLAP/ 处理/ 的/ 候选/ 技术/ 方案/ ,/ 但/ MapReduce/ 在/ 解决/ 多表/ 连接/ 问题/ 时/ 低下/ 的/ 性能/ 使/ 其/ 难以/ 适应/ 复杂/ 模型/ 的/ OLAP/ 处理/ ./ 因此/ ,/ 问题/ 的/ 关键/ 是/ ,/ 无论是/ 并行/ 数据库/ 技术/ 还是/ MapReduce/ 技术/ 都/ 没有/ 根据/ OLAP/ 的/ 本质特征/ 来/ 创建/ 订/ 制式/ 的/ 并行/ 存储/ 和/ 处理/ 框架/ ,/ 优化/ 工作/ 难以/ 进一步/ 深入/ ./ 图/ 1/ 显示/ 了/ SQL/ 与/ OLAP/ 的/ 包含/ 关系/ ./ SQL/ 可以/ 看作/ 是/ 查询处理/ 技术/ 的/ 全集/ ,/ 包括/ 事务处理/ 和/ 分析/ 型/ 处理/ ,/ TPC/ -/ C/ 和/ TPC/ -/ E/ 是/ 典型/ 的/ OLTP/ 负载/ ./ OLAP/ 相当于/ SQL/ 集合/ 中/ 面向/ 分析/ 型/ 处理/ 的/ 子集/ ,/ 以/ TPC/ -/ H/ 为/ 代表/ ,/ 查询/ 负载/ 以/ 批量/ 更新/ 和/ 读/ 密集型/ 复杂/ 查询/ 为/ 特征/ ,/ 包含/ 了/ 复杂/ 的/ 子/ 查询/ 嵌套/ 结构/ ./ SPJGA/ -/ OLAP/ 是/ 本文/ 提出/ 的/ OLAP/ 基本操作/ 集/ ,/ 以/ OLAP/ 中/ 最/ 基础/ 的/ S/ :/ 选择/ ,/ P/ :/ 投影/ ,/ J/ :/ 连接/ ,/ G/ :/ 分组/ ,/ A/ :/ 聚集/ 为主/ ,/ 面向/ OLAP/ 模型/ 标准/ 的/ 切片/ 、/ 切块/ 、/ 上卷/ 、/ 下/ 钻/ 、/ 旋转/ 等/ 操作/ ,/ 排除/ 了/ 子/ 查询/ 等/ 复杂/ 操作/ ./ SPJGA/ -/ OLAP/ 是/ 通用/ OLAP/ 的/ 核心/ 功能/ 子集/ ./ 本文/ 的/ 研究/ 以/ OLAP/ 核心/ 的/ SPJGA/ -/ OLAP/ 操作/ 集上/ 的/ 优化/ 为/ 中心/ ,/ 提出/ 了/ 面向/ 星型/ 模型/ 特点/ 的/ 以维表为/ 中心/ 的/ 分布式/ 存储/ 模型/ ,/ 将/ 事实/ 表对/ 维表/ 的/ 数据/ 依赖/ 规范化/ 为/ bitmap/ 过滤器/ ,/ 通过/ 分布式/ 维/ 表列/ 存储/ 缓存/ 策略/ 和/ 分组/ 编码/ 谓词/ 向量/ 技术/ 最小化/ OLAP/ 处理/ 时/ 的/ 网络/ 传输/ 代价/ ./ 本文/ 的/ 贡献/ 主要/ 体现/ 在/ 以下/ 几个/ 方面/ :/ (/ 1/ )/ 将/ OLAP/ 最/ 核心/ 的/ 操作/ 集/ SPJGA/ -/ OLAP/ 分离/ 出/ SQL/ 集合/ ,/ 从而/ 使/ 优化/ 的/ 目标/ 局限于/ 具有/ 最大/ 并行处理/ 潜质/ 的/ 标准/ 多表/ 连接/ 分组/ 聚集/ 计算/ 上/ ,/ 简化/ 了/ 大规模/ 并行计算/ 模型/ 的/ 复杂度/ ;/ (/ 2/ )/ 提出/ 了/ 以维表为/ 中心/ 的/ 海量/ 数据/ 分布式/ 存储/ 策略/ ,/ 以/ 最低/ 的/ 负载/ 均衡/ 和/ 数据/ 更新/ 同步/ 代价/ 服务/ 于/ 操作/ 型/ BI/ 需求/ ;/ (/ 3/ )/ 将/ OLAP/ 对应/ 的/ SQL/ 操作/ 分解/ 为/ 过滤器/ 、/ 分组/ 器/ 、/ 聚集/ 器/ ,/ 连接/ 谓词/ 根据/ 模式/ 建立/ 内部/ key/ -/ address/ 映射/ ,/ 将/ 复杂/ 的/ SQL/ 简化/ 为/ 简单/ 的/ 谓词/ 表达式/ 和/ 属性/ 输入/ 参数/ ,/ 支持/ OLAP/ 向/ 非/ SQL/ 查询/ Page3/ 处理/ 引擎/ 的/ 迁移/ 和/ 与/ 各种/ SQL/ 引擎/ 的/ 融合/ ;/ (/ 4/ )/ 谓词/ 向量/ 技术/ 将/ 多表/ 连接/ 的/ 数据/ 依赖/ 规范化/ 为/ 各个/ 维表上/ 的/ bitmap/ 过滤器/ ,/ 最小化/ 并行处理/ 时/ 数据/ 依赖/ 所/ 产生/ 的/ 网络/ 传输/ 代价/ ;/ (/ 5/ )/ 分布式/ 缓存/ 机制/ 充分利用/ 处理/ 节点/ 的/ 内存容量/ 来/ 优化/ 网络/ 传输/ 代价/ ,/ 减少/ 同步/ 更新/ 代价/ ./ 本文/ 首先/ 在/ 第/ 2/ 节/ 分析/ OLAP/ 模型/ 特征/ 和/ 相关/ 研究/ 的/ 技术/ 路线/ 和/ 成果/ ;/ 在/ 第/ 3/ 节中/ 给出/ SPJGA/ -/ OLAP/ 模型/ 的/ 描述/ 和/ 实现/ 技术/ ;/ 在/ 第/ 4/ 节中/ 设计/ 并行/ SPJGA/ -/ OLAP/ 代价/ 模型/ 和/ 实验/ ,/ 并/ 分析/ 实验/ 结果/ ;/ 最后/ 给出/ 论文/ 的/ 结论/ 并/ 讨论/ 了/ 进一步/ 的/ 工作/ ./ 2OLAP/ 模型/ 分析/ 和/ 相关/ 工作/ 2.1/ TPC/ -/ H/ 和/ SSB/ 模型/ 分析/ OLAP/ 计算/ 模型/ 的/ 复杂度/ 取决于/ 数据模型/ 的/ 特征/ ./ 图/ 2/ 中/ 显示/ 了/ 工业界/ 和/ 学术界/ 普通/ 采用/ 的/ TPC/ -/ H/ 和/ SSB/ 标准/ ./ TPC/ -/ H/ 是/ 一个双/ 事实/ 表/ 结构/ ,/ 图/ 2TPC/ -/ H/ 和/ SSB/ 模型/ TPC/ -/ H/ 在/ 模式/ 上/ 形成/ 雪花/ 状/ 结构/ ,/ 因此/ 查询/ 计划/ 中/ 连接/ 操作/ 较/ 多/ ./ 对于/ 集中式/ 处理/ 模型/ ,/ 雪花/ 状/ 结构/ 能够/ 最小化/ 存储/ 代价/ ,/ 但/ 对于/ 并行计算/ 模型/ ,/ 雪花/ 状/ 结构/ 增加/ 了/ 大量/ 的/ 节点/ 间/ 数据/ 复制/ 或/ 传输/ 代价/ ,/ LINEITEM/ 表与/ OREDER/ 表/ 以及/ 其它/ 维表上/ 的/ 大量/ 连接/ 操作/ 在/ 执行/ 代价/ 和/ 数据分布/ 代价/ 上/ 都/ 较大/ ./ 因此/ 并行计算/ 环境/ 下/ 模式/ 设计/ 与/ 集中式/ 环境/ 下/ 的/ 模式/ 设计/ 有所不同/ ,/ 考虑/ 的/ 首要/ 问题/ 是/ 复制/ 与/ 传输/ 代/ PARTSUPP/ 和/ LINEITEM/ 都/ 是/ 事实/ 表/ ,/ 以/ 组合键/ (/ PARTKEY/ ,/ SUPPKEY/ )/ 连接/ ,/ OREDER/ 表/ 可以/ 看作/ 是/ LINEITEM/ 事实/ 表/ 的/ 辅助/ 表/ ,/ LINEITEM/ 表以/ (/ L/ _/ ORDERKEY/ ,/ L/ _/ LINENUMBER/ )/ 为主/ 键/ ,/ 因此/ OREDER/ 表与/ LINEITEM/ 表/ 的/ 连接/ 通常/ 采用/ 索引/ 连接/ ./ 在/ TPC/ -/ H/ 的/ 22/ 个/ 标准/ 测试/ 查询/ 中/ ,/ 查询/ 计划/ 树中/ 的/ 主要/ 执行/ 部分/ 是/ 事实/ 表与/ 多个/ 维表/ 连接/ 的/ 查询/ 子树/ ./ 考虑/ 到/ 并行计算/ 环境/ 下/ 的/ 数据分布/ ,/ 由于/ OREDER/ 表与/ LINEITEM/ 表是/ 14/ 的/ 对应/ 关系/ ,/ 通用/ 的/ 规则/ 是/ 将/ OREDER/ 表与/ LINEITEM/ 表/ 按/ L/ _/ ORDERKEY/ 进行/ Hash/ 分布/ 以/ 减少/ 并行/ 连接/ 时/ 节点/ 间/ 的/ 数据传输/ 代价/ ,/ 提高/ 节点/ 的/ 并行处理/ 能力/ ./ 但/ LINEITEM/ 表/ 无法/ 同时/ 满足/ 与/ OREDER/ 表/ 和/ PARTSUPP/ 表/ 进行/ Hash/ 分布/ 的/ 需求/ ,/ TPC/ -/ H/ 中/ 只有/ Q9/ 涉及/ LINEITEM/ 表与/ PARTSUPP/ 表/ 的/ 连接/ 操作/ ,/ 而/ LINEITEM/ 表与/ OREDER/ 表/ 的/ 连接/ 数量/ 较/ 多/ ,/ 因此/ 数据分布/ 策略/ 只/ 考虑/ OREDER/ 与/ LINEITEM/ 表/ ./ 价而/ 不是/ 存储/ 代价/ ,/ 即/ 需要/ 采用/ 物化/ 或非/ 规范化/ 思想/ 将/ 复杂/ 的/ 雪花/ 状/ 模型简化/ 星型/ 模型/ ,/ 将/ 聚集/ 计算/ 属性/ 尽量/ 归并到/ 事实/ 表中/ ,/ 而维表/ 只/ 保留/ 基本/ 的/ 选择/ 和/ 分组/ 属性/ ,/ 将/ OLAP/ 查询/ 计划/ 规范化/ 为/ 维表上/ 的/ 过滤/ →/ 与/ 事实/ 表/ 连接/ →/ 分组/ 聚集/ 计算/ 模式/ 的/ 简单/ 操作/ ./ 只有/ 简单/ 的/ 存储/ 模型/ 和/ 简单/ 的/ 计算/ 模型/ 才能/ 最大化/ 大规模/ 并行处理/ 的/ 收益/ ./ 图/ 2/ 中/ 的/ SSB/ 标准/ [/ 1/ ]/ 是/ TPC/ -/ H/ 标准/ 的/ 星型/ 化/ Page4/ 模型/ ,/ 目前/ 被/ 学术界/ 所/ 广泛/ 采用/ ./ 它/ 将/ 模式/ 清晰/ 地/ 分解/ 为/ 四个/ 维表/ 和/ 一个/ 事实/ 表/ ,/ 消除/ 了/ TPC/ -/ H/ 中/ LIENITEM/ 与/ ORDER/ 表/ 的/ 巨大/ 连接/ 代价/ ,/ 消除/ 了/ 雪花/ 状/ 模型/ 带来/ 的/ 复杂/ 查询/ 执行/ 计划/ ,/ 从而/ 使/ 其/ 更加/ 适合/ 于/ 大规模/ 并行计算/ 环境/ 下/ 的/ 简单/ 数据分布/ ./ 两种/ 模型/ 的/ 差异/ 还/ 体现/ 在/ 维表/ 数据量/ 上/ ,/ 以/ SF/ =/ 1000/ (/ ScaleFactor/ =/ 1000/ ,/ 对应/ 1TB/ 的/ 测试数据/ 集/ )/ 为例/ ,/ TPC/ -/ H/ 中/ 5/ 个维表/ 的/ 数据/ 总量/ 为/ 50188825KB/ ,/ 而/ SSB/ 的/ 4/ 个维表/ 数据/ 总量/ 为/ 4062216KB/ ,/ 所/ 占/ 的/ 比例/ 分别/ 为/ 约/ 5/ %/ 和/ 4/ ./ 维表/ 不同/ 的/ 数据量/ 决定/ 着/ 在/ 大规模/ 并行计算/ 环境/ 下/ 采用/ 什么样/ 的/ 数据分布/ 与/ 数据传输/ 策略/ 以及/ 各种/ 策略/ 的/ 执行/ 效率/ ./ 我们/ 将/ 在/ 后面/ 的/ 部分/ 继续/ 讨论/ 针对/ 模式/ 特点/ 进行/ 的/ 优化/ 工作/ ./ 2.2/ 相关/ 工作/ 在/ 关系/ 操作/ 中/ ,/ 连接/ 操作/ 依赖于/ 两个/ 不同/ 的/ 数据/ 集/ ,/ 本文/ 将维表/ 定义/ 为/ 事实/ 表/ 连接/ 依赖/ 数据/ 集/ (/ joindependencydataset/ )/ ,/ 连接/ 依赖/ 数据/ 集/ 可以/ 是/ 整个/ 维表/ 、/ 维表上/ 的/ 选择/ 和/ 投影/ 子集/ 、/ 维表/ 属性/ 列/ 或/ 在/ 维表上/ 生成/ 的/ Hash/ 表/ ./ 当/ 处理/ 节点/ 获得/ 连接/ 依赖/ 数据/ 集后/ ,/ 各/ 节点/ 即可/ 执行/ 并行/ 查询处理/ ./ 因此/ 并行/ 数据库/ 优化/ 工作/ 的/ 核心/ 问题/ 是/ 优化/ 连接/ 依赖/ 数据/ 集/ 的/ 复制/ 和/ 传输/ 效率/ [/ 2/ ]/ ./ 例如/ ,/ 在/ TPC/ -/ H/ 中/ 可以/ 将/ LINEITEM/ 表与/ OREDER/ 表/ 按/ L/ _/ ORDERKEY/ 和/ ORDERKEY/ 进行/ Hash/ 分布/ ,/ 保证/ 两表/ 在/ 处理/ 节点/ 上/ 的/ 并行/ 连接/ 性能/ ./ 当/ SSB/ 中/ 节点/ 数量/ 较/ 少时/ ,/ 较/ 小/ 的/ 维表/ 可以/ 采用/ 全/ 复制/ 的/ 方式/ 复制到/ 每个/ 处理/ 节点/ 上以/ 支持/ 完全/ 并行/ 的/ 查询处理/ ,/ 其/ 代价/ 是/ 冗余/ 复制/ 的/ 空间/ 代价/ 和/ 维表/ 更新/ 时较/ 高/ 的/ 同步/ 代价/ ./ 主流/ 的/ 数据库/ ,/ 如/ TeraData/ 、/ Greenplum/ 、/ ParAccel/ 等/ 一般/ 采用/ on/ -/ the/ -/ fly/ 传播/ 的/ 方式/ 在/ 并行/ 查询/ 执行/ 过程/ 中/ 动态/ 分布/ 连接/ 依赖/ 数据/ 集/ ./ 当维表上/ 的/ 选择率/ 较/ 低且/ 维表/ 数据量/ 较/ 小时/ ,/ 网络/ 传输/ 的/ 效率/ 较/ 高/ (/ Gpbs/ 网络/ 的/ 有效/ 传输/ 效率/ 高于/ 单/ 磁盘/ 的/ 数据传输/ 效率/ )/ ./ 但/ OLAP/ 负载/ 与/ OLTP/ 负载/ 不同之处/ 在于/ ,/ OLTP/ 查询/ 中/ 选择率/ 一般/ 较/ 低/ ,/ 以点/ 查询/ 为主/ ,/ 而/ OLAP/ 中/ 查询/ 选择率/ 很/ 高/ ,/ 以/ 范围/ 查询/ 为主/ ,/ 在/ SSB/ 测试/ 查询/ 的/ 4/ 个维表上/ ,/ 选择率/ 最大值/ 分布/ 在/ 1/ // 5/ ~/ 6/ // 7/ ,/ 因此/ 网络/ 传输/ 的/ 数据量/ 依然/ 较大/ ./ 针对/ SSB/ 特征/ 的/ OLAP/ 查询/ 负载/ ,/ 很多/ 研究/ [/ 3/ -/ 7/ ]/ 采用/ 最/ 简单/ 的/ 维表全/ 复制/ 策略/ ,/ 包括/ 并行/ 数据库/ 、/ DB/ -/ cluster/ 以及/ MapReduce/ 模型/ 上/ 的/ 研究/ ,/ 通过/ 减化/ 数据分布/ 模型/ 的/ 方式/ 简化/ 并行计算/ 模型/ ,/ 从而/ 减少/ 并行计算/ 时/ 高昂/ 的/ 网络/ 传输/ 代价/ ./ 否则/ ,/ 由于/ 事实/ 表是/ 多/ 外键/ 结构/ ,/ 与/ 任何/ 一个/ 维表/ 的/ 连接/ 操作/ 都/ 需要/ 将/ 两个/ 表/ 按/ 特定/ 的/ 连接/ 属性/ 在/ 节点/ 中/ 重新/ Hash/ 分布/ 后/ 并行处理/ ,/ 网络/ 传输/ 代价/ 非常/ 高昂/ ./ 文献/ [/ 8/ ]/ 分析/ 了/ 当前/ OLAP/ 的/ 新/ 趋势/ ,/ 其中/ 操作/ 型/ BI/ (/ operationalBI/ )/ 的/ 需求/ 与/ 传统/ OLAP/ 中/ 只读/ 型/ 数据处理/ 的/ 假设/ 相冲突/ ,/ 因此/ 传统/ OLAP/ 中/ 的/ 物化/ 策略/ 、/ 预处理/ 策略/ 、/ 维表/ 层次/ 编码/ 策略/ 等/ 失去/ 了/ 假设/ 的/ 基础/ ,/ 全/ 复制/ 策略/ 也/ 面临/ 着/ 巨大/ 的/ 同步/ 更新/ 代价/ ./ 当前/ 解决/ 操作/ 型/ BI/ 的/ 主要/ 技术/ 路线/ 是/ 双/ 事实/ 表/ ,/ 如/ SAP/ [/ 8/ ]/ 和/ Vertica/ [/ 9/ ]/ 都/ 采用/ 了/ 双/ 事实/ 表/ 技术/ 来/ 同时/ 提供/ 分析/ 型/ 和/ 操作/ 型/ 处理/ ./ 但/ 从/ 实际/ 应用/ 特点/ 来看/ ,/ 典型/ 的/ 电子商务/ 企业/ ,/ 如/ Amazon/ 、/ 淘宝/ 、/ 阿里巴巴/ 等/ ,/ 更新/ 不仅仅/ 体现/ 在/ 不断/ 追加/ 的/ 交易/ 数据/ ,/ 而且/ 包括/ 不断更新/ 的/ 维表/ 数据/ ,/ 而维表/ 数据/ 的/ 变化/ 直接/ 影响/ OLAP/ 的/ 执行/ 结果/ ./ 双/ 事实/ 表/ 技术/ 只能/ 解决/ 数据/ 迁移/ 过程/ 中/ 的/ 操作/ 型/ 问题/ ./ 2.3/ 海量/ OLAP/ 时代/ 模型/ 设计/ 原则/ 海量/ OLAP/ 意味着/ 巨大/ 的/ 数据/ 存储/ 、/ 访问/ 、/ 计算/ 、/ 传输/ 和/ 同步/ 代价/ ,/ 而且/ 需要/ 具有/ 良好/ 的/ 可扩展性/ 支持/ ./ 大规模/ 并行计算/ 的/ 核心/ 是/ 简单/ 的/ 可/ 并行计算/ 模型/ 和/ 简单/ 高效/ 的/ 数据分布/ 模型/ ./ 数据仓库/ 的/ 基本特征/ 是/ 按/ 主题/ 组织/ 数据/ ,/ 也就是说/ 一个/ 数据仓库/ 的/ 数据模型/ 在/ 逻辑/ 上/ 就是/ 一张/ 表/ ,/ 简单/ 的/ 数据模型/ 能够/ 支持/ MapReduce/ 这样/ 的/ 大规模/ 可/ 扩展/ 并行计算/ 框架/ ./ 为了/ 支持/ 简单/ 并行计算/ ,/ 我们/ 需要/ 维护/ 数据模型/ 的/ 单一性/ ,/ 即以/ 事实/ 表为/ 数据/ 存储/ 和/ 并行处理/ 的/ 中心/ ,/ 从/ 模式/ 设计/ 上/ 缩减/ 维表/ 的/ 规模/ ,/ 避免/ 庞大/ 的/ 连接/ 表或维表/ 所/ 产生/ 的/ 数据分布/ 与/ 并行/ 连接/ 代价/ ./ 也就是说/ 模式/ 设计/ 应该/ 从/ TPC/ -/ H/ 的/ 以/ 业务/ 逻辑/ 为/ 中心/ 向/ SSB/ 的/ 以/ 分析/ 逻辑/ 为/ 中心/ 的/ 设计/ 原则/ 转移/ ./ 从/ 并行计算/ 设计/ 上/ ,/ OLAP/ 处理/ 集中/ 在/ 易于/ 并行计算/ 的/ SPJGA/ -/ OLAP/ 子集/ ,/ 对于/ TPC/ -/ H/ 中/ 复杂/ 的/ 迭代/ 子/ 查询处理/ ,/ 我们/ 的/ 原则/ 是/ 将/ 其中/ SPJGA/ 操作/ 子树/ 并行/ 化/ ,/ 查询/ 树中/ 其它/ 难以/ 并行/ 化/ 的/ 部分/ 交给/ SQL/ 引擎/ 来/ 处理/ ,/ 即/ 我们/ 的/ 研究/ 重点/ 集中/ 在/ 并行/ 化/ 收益/ 最大/ 的/ SPJGA/ 操作/ 部分/ ,/ 不/ 做/ 通用/ 的/ 并行/ SQL/ 查询/ 优化/ ./ 3SPJGA/ -/ OLAP/ 模型/ 研究/ 3.1/ 存储/ 模型/ 本文/ 的/ 研究/ 以/ SSB/ 模型/ 为/ 基础/ ./ SSB/ 是/ 以/ 事实/ 表为/ 中心/ 的/ 星型/ 模型/ ,/ 我们/ 提出/ 了/ 反转/ 星型/ 模型/ 的/ 并行/ 存储/ 模型/ ,/ 即/ 以维表/ 集中/ 存储/ 为/ 中心/ ,/ 以/ 事实/ 表/ Page5/ 水平/ 分片/ 为/ 外围/ 处理/ 节点/ ./ 反转/ 星型/ 模型/ 的/ 优点/ 是/ 简单/ ,/ 维表/ 集中/ 存储/ 能够/ 消除/ 操作/ 型/ BI/ 所/ 面临/ 的/ 实时/ 更新/ 所/ 产生/ 的/ 数据/ 复本/ 同步/ 代价/ ,/ 整个/ 存储/ 模型简化/ 为/ 以/ 事实/ 表为/ 中心/ 的/ 分布式/ 单表/ 存储/ 结构/ ,/ 易于/ 数据分布/ 和/ 保持/ 负载/ 均衡/ ,/ 通过/ 分布式/ 缓存/ 策略/ 图/ 3/ 反转/ 星型/ 存储/ 模型/ 3.2/ OLAP/ 查询/ 功能/ 分解/ SQL/ 具有/ 复杂/ 的/ 语法结构/ ,/ 在/ SPJGA/ -/ OLAP/ 中/ ,/ SQL/ 语法/ 可以/ 简化/ 为/ 三类/ 对象/ :/ 过滤器/ 、/ 分组/ 器/ 和/ 聚集/ 器/ ./ 图/ 4/ 显示/ 了/ SSB/ 对应/ 的/ SQL/ 命令/ 和/ 功能/ 分解/ ,/ group/ -/ by/ 子句/ 中/ 的/ c/ _/ nation/ 是/ 查询/ 的/ 分组/ 器/ ,/ 用于/ 构建/ group/ -/ by/ 操作/ 的/ Hash/ 表/ ;/ where/ 子句/ 中/ 的/ 谓词/ 一部分/ 是/ 连接/ 谓词/ ,/ 与/ 模式/ 中/ 事实/ 表与维表/ 之间/ 的/ 主外键/ 引用/ 参照/ 完整性/ 约束条件/ 相对/ 应/ ,/ 维表上/ 的/ 谓词/ 表达式/ 起到/ 过滤器/ 的/ 作用/ ,/ 在/ SSB/ 的/ SQL/ 命令/ 中/ 只/ 包括/ 维表/ 属性/ 上/ 的/ 直接/ 谓词/ ;/ SELECT/ 子句/ 中/ 的/ SUM/ (/ …/ )/ 为/ 聚集/ 器/ ,/ 用于/ 描述/ 事实/ 表/ 度量/ 字段/ 上/ 的/ 聚集/ 计算/ ./ 因此/ ,/ 对于/ SPJGA/ -/ OLAP/ ,/ 复杂/ 的/ SQL/ 被/ 转换/ 为/ 几个/ 标准/ 的/ 输入/ 参数/ 接口/ ,/ 我们/ 可以/ 将/ SPJGA/ -/ OLAP/ 定义/ 为/ NoSQL/ 模式/ 的/ API/ ,/ 在/ 算法/ 设计/ 和/ 执行/ 层面/ 上/ 独立/ 于/ SQL/ 引擎/ ,/ 避免/ 基于/ 传统/ 的/ 事务/ 型/ 查询处理/ 引擎/ 的/ 设计/ 在/ OLAP/ 处理/ 时/ 的/ 效率/ 损/ 利用/ 各/ 处理/ 节点/ 内存/ 来/ 加速/ 连接/ 和/ 分组/ 操作/ ./ 图/ 3/ 所示/ 的/ 存储/ 模型/ 是/ 并行计算/ 框架/ 内/ 的/ 逻辑/ 存储/ 模型/ ,/ 在/ 实际/ 应用/ 中/ 需要/ 与/ 具体/ 的/ 物理/ 存储/ 模型/ 相结合/ ,/ 如/ 在/ 各个/ 处理/ 节点/ 内/ 采用/ 列/ 存储/ 模型/ [/ 10/ -/ 11/ ]/ 、/ 压缩/ 等/ 存储/ 优化/ 技术/ ./ 失/ ,/ 同时/ 也/ 可以/ 通过/ 标准/ 的/ SQL/ 转换/ 接口/ 嵌入/ 传统/ 的/ SQL/ 引擎/ 中/ ,/ 作为/ SPJGA/ -/ OLAP/ 类/ 查询/ 任务/ 的/ 并行处理/ 加速器/ ./ 通过/ 查询/ 功能/ 的/ 分解/ ,/ 维表/ 只/ 起到/ 过滤器/ 和/ 提供/ 分组/ 器/ 的/ 作用/ ./ 我们/ 将/ 过滤器/ 优化/ 为/ bitmap/ ,/ 即用/ 一位/ 来/ 表示/ 维表/ 对应/ 的/ 记录/ 是否/ 满足/ 该维表上/ 所有/ 谓词/ 条件/ ./ 一方面/ 我们/ 将/ 事实/ 表与维表/ 的/ 连接/ 操作/ 简化/ 为/ 事实/ 表/ 按/ 外键/ 属性/ 与/ bitmap/ 进行/ 匹配/ ,/ 缩减/ 了/ 连接/ 依赖/ 数据/ 集/ 的/ 大小/ ,/ 另一方面/ ,/ 通过/ 维表/ 主键/ 与/ bitmap/ 数组/ 下/ 标的/ 直接/ 映射/ (/ 维表/ 主键/ 一般/ 为/ 自然/ 序列/ )/ ,/ 事实/ 表与/ bitmap/ 的/ 连接/ 简化/ 为/ 事实/ 表/ 根据/ 外/ 键值/ 直接/ 访问/ 对应/ 下/ 标的/ bit/ 位/ ./ 3.3/ 谓词/ 向量/ 并行/ DDTA/ -/ OLAP/ 算法/ 在/ 反转/ 星型/ 存储/ 模型/ 和/ OLAP/ 查询/ 分解/ 的/ 基础/ 上/ ,/ 并行/ 集群/ 上/ 的/ OLAP/ 处理/ 被/ 分解/ 为/ 4/ 个/ 阶段/ :/ (/ 1/ )/ 查询/ 改写/ ./ 将/ SQL/ 查询/ 改写/ 为/ 在/ 每个/ 维表上/ 的/ 谓词/ 操作/ ,/ 为/ 每个/ 维表/ 生成/ 唯一/ 的/ 谓词/ 向量/ (/ predicate/ -/ vector/ )/ ,/ 谓词/ 向量/ 表示/ 为/ 与/ 维表/ 记录/ 数量/ 等长/ 的/ bitmap/ ,/ 每一/ 位置/ 0/ 或/ 1/ ,/ 表示/ 该维表/ 记录/ 是否/ 满足/ 维表上/ 所有/ 的/ 谓词/ ./ (/ 2/ )/ 谓词/ 向量/ 广播/ ./ 通过/ 广播/ 的/ 模式/ 将/ 中心/ 节点/ 生成/ 的/ 谓词/ 向量/ 传播/ 到/ 各/ 处理/ 节点/ 的/ 内存/ 缓冲区/ 中/ ,/ 为/ 并行/ OLAP/ 处理/ 做/ 数据/ 准备/ ./ 采用/ 广播/ 方式/ 一方面/ 降低/ 网络/ 传输/ 延迟/ ,/ 另一方面/ 在/ 节点/ 规模/ 扩大/ 时/ 保持/ 网络/ 传输/ 延迟/ 的/ 稳定性/ ./ (/ 3/ )/ 并行/ OLAP/ 处理/ ./ 每个/ 处理/ 节点/ 拥有/ 自己/ 独立/ 的/ 事实/ 表/ 数据/ 分片/ ,/ 获得/ 了/ 维表/ 谓词/ 向量/ 后/ 即可/ 独立/ 地/ 完成/ 连接/ 操作/ ./ 图/ 5/ 显示/ 了/ 基于/ 谓词/ 向量/ Page6/ 的/ 连接/ 操作过程/ ./ 我们/ 在/ 前期/ 研究/ [/ 12/ ]/ 中/ 提出/ 了/ DDTA/ -/ JOIN/ 算法/ 来/ 执行/ OLAP/ 的/ 多表/ 连接/ 操作/ ,/ 其/ 基本原理/ 是/ 将/ 维表/ 主键/ 顺序/ 化使/ 其/ 与/ 内存/ 维/ 属性/ 列/ 数组/ 的/ 下标/ 直接/ 映射/ ,/ 从而/ 使/ 事实/ 表中/ 的/ 维/ 属性/ 外/ 键值/ 可以/ 直接/ 映射/ 到/ 内存/ 维/ 属性/ 列/ 数组/ 的/ 下标/ ,/ 图/ 5/ 基于/ 谓词/ 向量/ 的/ OLAP/ 连接/ 操作/ 图/ 5/ 表示/ 一个/ 标准/ 的/ OLAP/ 查询/ 由/ SQL/ 改写/ 为/ 对/ 指定/ 维表/ 的/ 谓词/ 操作/ ,/ 并/ 将/ 查询/ 结果/ 存储/ 为/ 内存/ bitmap/ 形式/ ;/ 在/ 扫描/ 事实/ 表/ 的/ 过程/ 中/ 按/ 事实/ 表中/ 对应/ 的/ 各个/ 维/ 属性/ 外/ 键值/ 直接/ 映射/ 各个/ 谓词/ 向量/ bitmap/ 指定/ 的/ 数据位/ ,/ 并/ 根据/ 多个/ 位/ 进行/ 与/ 操作/ 的/ 结果/ 来/ 判断/ 当前/ 记录/ 是否/ 满足/ 连接/ 条件/ ,/ 满足/ 连接/ 条件/ 的/ 记录/ 再/ 从/ 内存/ 维/ 属性/ 列中/ 按照/ 地址/ 直接/ 映射/ 抽取/ 分组/ 属性/ 值/ ,/ 传递/ 给/ 分组/ 聚集/ 器/ 进行/ 聚集/ 计算/ ./ 谓词/ 向量/ 优化/ 技术/ 最小化/ 了/ 连接/ 依赖/ 数据/ 集/ ,/ 减少/ 网络/ 传输/ 代价/ ./ (/ 4/ )/ 聚集/ 结果/ 集/ 归并/ ./ 在/ TPC/ -/ H/ 和/ SSB/ 标准/ 中/ ,/ 聚集/ 函数/ 为/ 可/ 分布式/ 聚集/ 函数/ (/ SUM/ ,/ COUNT/ )/ 和/ 代数/ 可/ 分布式/ 聚集/ 函数/ (/ AVERAGE/ )/ ,/ 因此/ 各个/ 并行处理/ 节点/ 在/ 各自/ 事实/ 表/ 分片/ 上/ 的/ 聚集/ 计算结果/ 具有/ 可/ 归并/ 性/ ,/ 聚集/ 计算/ 可以/ 下推/ 到/ 并行处理/ 节点/ 内/ 执行/ ./ 如果/ 聚集/ 函数/ 是/ 不可/ 分布式/ 聚集/ 计算/ 函数/ ,/ 如/ MEDIAN/ 、/ RANK/ 、/ PERCENTILE/ 等/ ,/ 则/ 必须/ 将/ 连接/ 结果/ 集/ 汇集/ 到/ 中心/ 节点/ 后/ 由/ 中心/ 节点/ 完成/ 最终/ 的/ 聚集/ 计算/ 任务/ ./ OLAP/ 查询/ 的/ 结果/ 集以/ 分组/ 聚集/ 计算结果/ 为/ 展示/ 形式/ ,/ 结果/ 集/ 的/ 大小/ 取决于/ 各/ 分组/ 属性/ 的/ 集势/ (/ cardinality/ ,/ 即/ 不/ 重复/ 值/ 的/ 数量/ )/ ,/ 通常/ 情况/ 下/ 远远/ 小于/ 连接/ 的/ 记录/ 数量/ ./ 如/ SSB/ 的/ 13/ 个/ 测试/ 查询/ 中/ ,/ 分组/ 聚集/ 结果/ 集/ 最/ 多/ 只有/ 800/ 条/ 记录/ ,/ 远远/ 小于/ 查询/ 中/ 满足条件/ 的/ 连接/ 记录/ 数量/ ./ 在/ 并行处理/ 规模较/ 小时/ ,/ 我们/ 采用/ 集中式/ Hash/ 归并/ 算法/ 来/ 处理/ 并行/ OLAP/ 结果/ 集/ ,/ 当/ 并行处理/ 规模/ 较大/ 时/ ,/ 我们/ 采用/ 迭代/ 归并/ 树/ 算法/ 来/ 处理/ 聚集/ 归并/ 问题/ (/ 迭代/ 归并/ 树/ 算法/ 用于/ 解决/ 大规模/ 集群/ 中查/ 从而/ 将/ 复杂/ 的/ 多表/ 连接/ 操作/ 优化/ 为/ 简单/ 的/ 按/ 事实/ 表外/ 键值/ 进行/ 内存/ 按/ 地址/ 访问/ 操作/ ./ 我们/ 将维表/ 属性/ 列/ 进一步/ 优化/ 为/ 整个/ 维表/ 对应/ 一个/ bitmap/ ,/ 事实/ 表/ 通过/ 直接/ 访问/ 内存/ 谓词/ 向量/ bitmap/ 完成/ 在/ 维表上/ 的/ 过滤/ 操作/ ./ 询/ 结果/ 子集/ 的/ 聚集/ 归并/ 问题/ ,/ 与/ Reduce/ 功能/ 类似/ ,/ 但/ 采用/ 类似/ 于/ B/ +/ -/ Tree/ 的/ 结构/ ,/ 优化/ 归并/ 过程/ 中/ 的/ 网络连接/ 数量/ 和/ 网络/ 传输/ 代价/ ,/ 在/ 本文/ 中/ 不/ 做/ 过/ 多/ 讨论/ )/ ./ 通过/ 对/ OLAP/ 并行/ 查询/ 算法/ 的/ 优化/ ,/ 我们/ 将/ 各种/ SPJGA/ -/ OLAP/ 负载/ 规范化/ 为/ 统一/ 的/ 并行/ OLAP/ 处理/ 模型/ ,/ 实现/ one/ -/ size/ -/ fits/ -/ all/ 模式/ 的/ 查询/ 执行/ 计划/ ./ 3.4/ 维/ 属性/ 列/ 分布式/ 缓存/ 策略/ 谓词/ 向量/ 将维表/ 简化/ 为/ bitmap/ ,/ 但/ OLAP/ 查询/ 中/ 的/ 分组/ 属性/ 和/ 维表/ 之间/ 的/ 谓词/ 属性/ 如果/ 被/ 压缩/ 到/ 谓词/ 向量/ 中/ ,/ 需要/ 将/ 对应/ 属性/ 值/ 编码/ 并/ 替代/ 谓词/ 向量/ 中/ 的/ 位/ 编码/ ,/ 从而/ 增加/ 谓词/ 向量/ 的/ 宽度/ ./ 如图/ 6/ 所示/ ,/ 在/ customer/ 维表上/ 有/ 选择/ 谓词/ “/ c/ _/ region/ =/ ‘/ AMERICA/ ’/ ”/ 和/ 分组/ 属性/ c/ _/ nation/ ,/ 则/ 维表/ 需要/ 提供/ 两种/ 类型/ 的/ 数据/ ,/ 一是/ 谓词/ 向量/ ,/ 用于/ 标识/ 哪条/ 维表/ 记录/ 满足/ 选择/ 谓词/ 条件/ ,/ 二是/ 分组/ 属性/ ,/ 将/ 满足/ 选择/ 条件/ 的/ 分组/ 属性/ 提供/ 给/ 连接/ 操作/ ./ 在/ 此/ 我们/ 考虑/ 两种/ 谓词/ 向量/ 策略/ :/ (/ 1/ )/ 谓词/ 向量/ 与/ 分组/ 属性/ 组合/ 编码/ 策略/ ./ 图/ 6/ 显示/ 了/ 该/ 策略/ 的/ 原理/ ./ 我们/ 将/ customer/ 维表上/ 的/ 选择/ 改写/ 为/ “/ SELECTCASEWHENc/ _/ region/ =/ ‘/ AMERICA/ ’/ c/ _/ nationELSE0FROMcustomer/ ”/ ,/ 则/ 可以/ 得到/ 以/ 分组/ 列/ 属性/ 值/ 替代/ 过滤/ 结果/ 的/ value/ -/ vector/ ,/ 如图/ 6/ 中间/ 部分/ 所示/ ,/ 然后/ 将/ value/ -/ vector/ 中/ 的/ 数据编码/ ,/ 根据/ 变元/ 数量/ 分配/ 适当/ 的/ 编码/ 宽度/ ,/ 然后/ 用/ 编码/ 代替/ value/ -/ vector/ 中/ 的/ 原始/ 值/ ,/ 形成/ 紧凑/ 的/ key/ -/ vector/ ,/ 如图/ 6/ 中/ 最后/ 一个/ Page7/ 框图/ 中/ 的/ 部分/ ./ 通过/ 这种/ 编码/ 向量/ 的/ 方式/ ,/ 每个/ 处理/ 节点/ 可以/ 如图/ 5/ 所示/ 的/ 操作步骤/ 同时/ 完成/ 连接/ 过滤/ 和/ 分组/ 聚集/ 操作/ ,/ 本地/ 结果/ 集以/ 编码/ 作为/ 聚集/ 结果/ 的/ 分类/ 值/ ,/ 最终/ 结果/ 在/ 中心/ 节点/ 进行/ 全局/ 归并/ 后/ 再/ 实现/ 将/ 分组/ 编码/ 通过/ 分组/ 编码/ 字典/ 表/ 的/ 还原/ 过程/ ./ 图/ 6/ 谓词/ 向量/ 与/ 分组/ 属性/ 组合/ 编码/ (/ 2/ )/ 维/ 属性/ 列/ 分布式/ 缓存/ 策略/ ./ 当维表较/ 小时/ 且/ 行数/ 较/ 少时/ ,/ key/ -/ vector/ (/ 如/ char/ -/ vector/ ,/ 可/ 表示/ 28/ 个/ 不同/ 变元/ )/ 数据量/ 较/ 小/ ,/ 网络/ 传输/ 代价/ 差异/ 不大/ ./ 而且/ 我们/ 在/ 实验/ 中/ 观测/ 到/ ,/ 按/ 下标/ 地址/ 直接/ 访问/ bitmap/ -/ vector/ 时比/ 直接/ 访问/ char/ -/ vector/ 需要/ 更/ 多/ 的/ CPU/ 周期/ 来/ 解析/ 位操作/ ,/ 因此/ 当维表较/ 小时/ ,/ 分组/ 编码/ 谓词/ 向量/ (/ char/ -/ vector/ 或/ 短/ 数据类型/ vector/ )/ 能够/ 获得/ 较为理想/ 的/ 总体/ 性能/ ./ 当维表/ 数量/ 较大/ 时/ ,/ bitmap/ -/ vector/ 与/ char/ -/ vector/ 数量/ 相差/ 8/ 倍/ 以上/ ,/ 基于/ bitmap/ 的/ 谓词/ 向量/ 能够/ 更少/ 地/ 消耗/ 处理/ 节点/ 的/ 内存/ 并/ 降低/ 网络/ 传输/ 延迟/ ./ 在/ 这种/ 策略/ 下/ ,/ 需要/ 将/ OLAP/ 查询/ 所/ 需要/ 的/ 维表/ 分组/ 属性/ 和/ 维表间/ 的/ 谓词/ 属性/ 增量/ 地/ 缓存/ 到/ 处理/ 节点/ 的/ 内存/ 中/ ./ 如图/ 3/ 所示/ ,/ 随着/ 查询/ 的/ 执行/ ,/ 将维表/ 分组/ 属性/ 通过/ 广播/ 方式/ 缓存/ 到/ 各/ 处理/ 节点/ 的/ 内存/ 中/ 形成/ 内存/ 维/ 属性/ 列/ ,/ 支持/ 基于/ 接收/ 的/ 谓词/ 向量/ 执行/ 的/ DDTA/ -/ JOIN/ 操作/ ./ 各/ 处理/ 节点/ 的/ 内存/ 相当于/ 分布式/ 缓存/ ,/ 通过/ 中心/ 节点/ 的/ 广播/ 同步/ 更新/ ,/ 缓存/ 的/ 维/ 属性/ 列/ 在/ 缓冲/ 空间/ 不足/ 时/ 可以/ 根据/ 访问/ 频率/ 实行/ LRU/ 替换算法/ ,/ 缓存/ 的/ 维/ 属性/ 列/ 也/ 可以/ 物化/ 到/ 磁盘/ 上/ ./ 在/ SSB/ 中/ ,/ 分组/ 属性/ 相对/ 比较/ 集中/ ,/ 在/ 40/ 个维表名/ 大小/ // KB/ 行数/ 实际/ 行数/ PART24420265SF/ / 200000200000000PART188523200000/ / (/ 1/ +/ log2SF/ )/ 2193157/ 表名/ 大小/ // KBSUPPLIER1414902SF/ / 1000010000000SUPPLIER877957CUSTOMER24353654SF/ / 150000150000000CUSTOMER2995508NATION325DATE228REGION1/ 维表/ 总/ 数据量/ 50188825/ 维表/ 总行/ 数/ 谓词/ 向量/ 大小/ 图/ 71TBSSB/ 数据/ 集维表/ 数据/ 特征分析/ 这种/ 策略/ 增加/ 了/ 维表上/ 的/ 谓词/ 生成/ 代价/ ,/ 增加/ 了/ 谓词/ 向量/ 的/ 宽度/ 和/ 网络/ 传输/ 的/ 数据量/ ,/ 但/ 对/ 处理/ 节点/ 的/ 存储/ 要求/ 最低/ ./ 缺点/ 是/ 编码/ 谓词/ 向量/ 是/ 查询/ 的/ 私有/ 数据/ ,/ 分组/ 属性/ 在/ 每次/ 查询/ 中/ 都/ 要/ 先/ 过滤/ 再/ 编码/ ,/ 没有/ 重用/ 性/ ./ 属性/ 中/ 只/ 涉及/ 到/ 7/ 个/ 属性/ ,/ 分组/ 属性/ 一般/ 为/ 低势/ 集/ 数据/ 列/ ,/ 可以/ 应用/ 字典/ 表/ 轻量/ 内存/ 压缩算法/ [/ 13/ ]/ 大幅度降低/ 存储/ 的/ 空间/ 代价/ ,/ 提高/ 网络/ 传输/ 和/ 分布式/ 缓存/ 的/ 效率/ ./ 维/ 表列/ 分布式/ 缓存/ 策略/ 将/ 连接/ 操作/ 数据/ 依赖/ 集/ 分为/ 两个/ 部分/ ,/ 一是/ 连接/ 过滤器/ ,/ 二是/ 分组/ 器/ ,/ 连接/ 过滤器/ 的/ 内容/ 随/ 查询/ 内容/ 的/ 变化/ 而/ 各不相同/ ,/ 属于/ 查询/ 的/ 私有/ 数据/ 集/ ,/ 而/ 分组/ 属性/ 具有/ 共享性/ ,/ 即/ 多个/ 查询/ 可能/ 共享/ 一个/ 较/ 小/ 的/ 分组/ 属性/ 集/ ./ 对于/ 单个/ 查询/ ,/ 在/ 维表/ 谓词/ 操作/ 基础/ 上/ 选择/ 的/ 分组/ 属性/ 子集/ 编码/ 具有/ 最小/ 的/ 网络/ 传输/ 和/ 分布式/ 缓存/ 代价/ ,/ 但/ 在/ 大量/ 并发/ 查询/ 负载/ 下/ ,/ 完整/ 分组/ 属性/ 列/ 的/ 分布式/ 缓存/ 机制/ 能够/ 有效/ 地/ 降低/ 系统/ 整体/ 的/ 传输/ 和/ 缓存/ 代价/ ./ 在/ 实验/ 中/ 我们/ 具体分析/ 分布式/ 缓存/ 在/ SSB/ 中/ 的/ 存储/ 代价/ ./ 4/ 并行/ SPJGA/ -/ OLAP/ 性能/ 分析/ 与/ 实验/ 4.1/ 网络/ 传输/ 与/ 分布式/ 存储/ 代价/ 分析/ 我们/ 用/ TPC/ -/ H/ 和/ SSB/ 的/ 数据/ 生成器/ 生成/ 1TB/ 数据/ 集/ (/ SF/ =/ 1000/ )/ ,/ 图/ 7/ 中/ 统计/ 了/ 数据/ 集/ 的/ 数据/ 特征/ ./ 我们/ 看到/ 在/ TPC/ -/ H/ 中维表/ 数据量/ 约/ 占/ 5/ %/ ,/ 而/ SSB/ 中维表/ 数据/ 比重/ 为/ 4/ ;/ 当/ 采用/ 谓词/ 向量/ 技术/ Page8/ 时/ ,/ TPC/ -/ H/ 中维表/ 谓词/ 向量/ 总/ 数据量/ 为/ 43MB/ (/ 维表/ 每/ 一行/ 映射/ 为/ 一位/ ,/ 谓词/ 向量/ 大小/ (/ B/ )/ =/ 总行/ 数/ // 8/ -/ bit/ )/ ,/ SSB/ 的/ 谓词/ 向量/ 总/ 数据量/ 为/ 4MB/ ./ 因此/ 在/ 两个/ 测试/ 标准/ 中/ ,/ 并行/ 连接/ 操作/ 数据/ 依赖/ 集/ 的/ 大小/ 分别/ 为/ 43MB/ 和/ 4MB/ ,/ 在/ 当前/ 千兆/ 网/ 的/ 支持/ 下/ (/ Gbps/ 网卡/ 理论/ 传输速度/ 为/ 125MB/ // s/ ,/ 实际/ 测试/ 大约/ 在/ 80MB/ // s/ 的/ 水平/ )/ ,/ 谓词/ 向量/ 的/ 网络/ 传输/ 代价/ 为/ 毫秒/ 级/ (/ 54ms/ 和/ 5ms/ )/ ,/ 我们/ 采用/ 网络/ 广播/ 模式/ 从/ 中心/ 节点/ 向/ 各个/ 查询处理/ 节点/ 同步/ 谓词/ 向量/ ,/ 因此/ 网络/ 传输/ 代价/ 在/ 网络/ 规模/ 扩展/ 时/ 也/ 能够/ 保持/ 相对/ 稳定/ ./ 通过/ 对/ 数据/ 的/ 实际/ 分析/ ,/ 我们/ 获得/ 了/ 在/ 大/ 数据/ 集/ 环境/ 中/ 并/ 行星/ 型/ 多表/ 连接/ 操作/ 数据/ 依赖/ 集/ 的/ 大小/ 和/ 网络/ 传输/ 代价/ ./ 处理/ 节点/ 上/ 的/ 多表/ 连接/ 操作/ 被/ 优化/ 为/ 按/ 内存/ bitmap/ 谓词/ 向量/ 直接/ 访问/ 对应/ 位/ 的/ 操作/ ,/ 在/ 确定/ 事实/ 表/ 记录/ 是否/ 满足/ 输出/ 条件/ 后/ 在/ 本地/ 缓存/ 的/ 维/ 属性/ 分组/ 列中/ 抽取/ 分组/ 属性/ 值/ 完成/ 其后/ 的/ 分组/ 聚集/ 操作/ ./ 在/ SSB/ 中/ ,/ 3/ 个/ 较大/ 的/ 维表上/ 的/ 选择率/ 分别/ 为/ PART/ :/ 1/ // 1/ ,/ 000/ ~/ 2/ // 5/ ,/ SUPPLIER/ :/ 1/ // 125/ ~/ 1/ // 5/ ,/ CUSTOMER/ :/ 1/ // 125/ ~/ 1/ // 5/ ./ 当对维/ 表列/ 采用/ 轻量/ 字典/ 表/ 压缩/ ,/ 采用/ 16/ 位/ 压缩/ 编码/ (/ 能够/ 表示/ 216/ 个/ 变元/ )/ 时/ ,/ 3/ 个表/ 的/ 维/ 属性/ 列所/ 占/ 的/ 存储空间/ 分别/ 为/ 4MB/ ,/ 4MB/ 和/ 60MB/ ,/ 可以/ 实现/ 维/ 属性/ 列/ 内存/ 数组/ 化/ ,/ 从而/ 支持/ 通过/ 事实/ 表维/ 属性/ 值向维/ 属性/ 列/ 数组/ 下/ 标的/ 直接/ 映射/ 和/ 数据/ 访问/ ./ 在/ TPC/ -/ H/ 中/ ,/ 维/ 属性/ 列/ 的/ 可能/ 数据量/ 将/ 分别/ 达到/ PART/ :/ 400MB/ ,/ SUPPLIER/ :/ 20MB/ ,/ CUSTOMER/ :/ 300MB/ ,/ 分组/ 属性/ 的/ 总/ 数据量/ 可能/ 达到/ GB/ 级/ ./ 当维/ 属性/ 上/ 的/ 选择率/ 较/ 低时/ ,/ 可以/ 对/ 分组/ 维/ 属性/ 按/ 谓词/ 向量/ 先/ 进行/ 过滤/ 操作/ ,/ 然后/ 把/ 满足条件/ 的/ 维/ 属性/ 值/ 组织/ 成/ 内存/ Hash/ 表/ ,/ 实现/ 事实/ 表/ 记录/ 向/ 分组/ 维/ 属性/ 列/ 的/ Hash/ 连接/ ,/ 但/ 当/ 并发/ 查询/ 较多时/ ,/ 大量/ 的/ Hash/ 表会/ 占据/ 较/ 多/ 的/ 内存/ 资源/ ,/ 因此/ 在/ 大/ 并发/ 负载/ 和/ 选择率/ 波动/ 较大/ 的/ 情况/ 下/ ,/ 分组/ 维/ 属性/ 列/ 适合/ 于/ 内存/ 直接/ 访问/ 策略/ ./ 当/ 数据/ 集/ 大小/ 为/ 100TB/ 时/ ,/ 对于/ SSB/ 数据/ 集/ ,/ 谓词/ 向量/ 总量/ 约/ 为/ 382MB/ ,/ 维/ 表列/ 大小/ 分别/ 是/ :/ PART/ :/ 7MB/ ,/ SUPPLIER/ :/ 400MB/ ,/ CUSTOMER/ :/ 6GB/ ,/ 总/ 大小/ 为/ 6.8/ GB/ ,/ 即/ 100TB/ 数据/ 集上/ 实现/ 内存/ OLAP/ 处理/ 只/ 需要/ 6.8/ GB/ 的/ 内存/ ,/ 能够/ 被/ 大多数/ 的/ 计算/ 硬件/ 配置/ 所/ 满足/ ,/ 实现/ 内存/ DDTA/ -/ OLAP/ 查询处理/ ./ 对于/ TPC/ -/ H/ 数据/ 集/ ,/ 谓词/ 向量/ 总量/ 约/ 为/ 4.3/ GB/ ,/ 维/ 表列/ 大小/ 分别/ 是/ :/ PART/ :/ 40GB/ ,/ SUPPLIER/ :/ 2GB/ ,/ CUSTOMER/ :/ 30GB/ ,/ 总/ 大小/ 为/ 76.3/ GB/ ,/ 超出/ 大多/ 中低端/ 服务器/ 的/ 硬件/ 配置/ ,/ TPC/ -/ H/ 查询/ 中/ 一个/ 维表上/ 经常/ 使用/ 多个/ 分组/ 属性/ ,/ 进一步/ 增加/ 了/ 内存/ 开销/ ./ 因此/ ,/ SSB/ 数据/ 集比/ TPC/ -/ H/ 更加/ 适合/ 于/ 并行/ 内存/ OLAP/ 处理/ ./ 对于/ 100TB/ 数据/ 集/ 的/ TPC/ -/ H/ 查询/ ,/ 可以/ 将/ 谓词/ 向量/ 内存/ 化/ ,/ 维表/ 分组/ 属性/ 列/ 采用/ 磁盘/ 存储/ 模式/ ,/ 在/ 完成/ 事实/ 表与/ 谓词/ 向量/ 的/ DDTA/ -/ JOIN/ 后/ 与/ 相应/ 的/ 维表/ 分组/ 列/ 进行/ 基于/ 磁盘/ 的/ 连接/ 操作/ ./ 图/ 8/ 显示/ 了/ 两种/ 磁盘/ 维/ 属性/ 分组/ 列/ 的/ 连接/ 策略/ ./ 左图/ 对应/ 选择率/ 较大/ 的/ 情况/ ,/ 缓存/ 中/ 的/ 事实/ 表/ 记录/ 根据/ 谓词/ 向量/ 找到/ 满足/ 全部/ 过滤/ 条件/ 的/ 记录/ 后/ ,/ 根据/ 谓词/ 向量/ 的/ 数组/ 下标/ (/ 事实/ 表维/ 属性/ 值/ )/ 直接/ 访问/ 磁盘/ 中列/ 存储/ 的/ 分组/ 维/ 属性/ 值/ (/ 列/ 存储/ 以定/ 长字段/ 存储/ 数据/ ,/ 可以/ 将维/ 属性/ 键值/ 直接/ 映射/ 为/ 文件/ 中/ 的/ 偏移/ 地址/ 来/ 直接/ 访问/ 对应/ 的/ 记录/ )/ ,/ 如果/ 采用/ 随机/ 访问/ 性能/ 更好/ 的/ SSD/ 硬盘/ 则/ 将/ 进一步提高/ 磁盘/ 按/ 位置/ 访问/ 性能/ ./ 右图/ 对应/ 选择率/ 较/ 小/ 情况/ 下/ 的/ 分组/ 属性/ 访问/ 策略/ ./ 先/ 通过/ 内存/ 中/ 的/ 谓词/ 向量/ 对/ 磁盘/ 分组/ 属性/ 列/ 进行/ 过滤/ ,/ 将/ 满足条件/ 的/ 分组/ 属性/ 存储/ 到/ 内存/ Hash/ 表中/ ,/ 以维/ 属性/ 主键/ (/ 列/ 存储/ 中/ 数据/ 的/ 偏移/ 地址/ )/ 作为/ Hashkey/ ,/ 当/ 事实/ 表/ 记录/ 根据/ 谓词/ 向量/ 找到/ 满足/ 全部/ 过滤/ 条件/ 的/ 输出/ 记录/ 后/ ,/ 根据/ 事实/ 表维/ 属性/ 外/ 键值/ 与/ 对应/ 的/ 维/ 属性/ 分组/ Hash/ 表/ 进行/ Hash/ 匹配/ ,/ 找到/ 对应/ 的/ 分组/ 属性/ 值/ ,/ 组合成/ 输出/ 记录/ ,/ 传递/ 给/ 后面/ 的/ 分组/ 聚集/ 器/ 完成/ 其后/ 的/ 操作/ ./ 通过/ 对大/ 数据/ 集/ 的/ 分析/ ,/ 我们/ 可以/ 保证/ 在/ 较大/ 的/ 数据/ 规模/ 下/ (/ 1TB/ 或者/ 100TB/ ,/ 1PB/ 的/ SSB/ 数据/ 集/ 需要/ 约/ 3.8/ GB/ 的/ 内存/ 存储/ 谓词/ 向量/ ,/ 基本/ 能够/ 被/ 当前/ 硬件/ 配置/ 所/ 满足/ )/ ,/ 并行/ OLAP/ 所/ 需要/ 的/ 谓词/ 向量/ 和/ 分组/ 维/ 属性/ 列/ 能够/ 控制/ 在/ 几个/ GB/ 的/ 规模/ ,/ 与/ 当前/ 服务器/ 通常/ 采用/ 几十个/ GB/ 内存/ 的/ 硬件/ 配置/ 相比/ ,/ 能够/ 保证/ 算法/ 的/ 内存/ 处理/ 特性/ ./ 4.2/ 谓词/ 向量/ 并行/ DDTA/ -/ OLAP/ 模型/ 代价/ 分析/ 如图/ 3/ 所示/ ,/ 谓词/ 向量/ 并行/ DDTA/ -/ OLAP/ 分为/ 4/ 个/ 执行/ 阶段/ :/ 谓词/ 向量/ 创建/ ,/ 谓词/ 向量/ 广播/ ,/ 谓词/ 向量/ DDTA/ -/ OLAP/ 处理/ ,/ 查询/ 结果/ 集/ 聚集/ 归并/ ./ 并行/ OLAP/ 查询/ 的/ 代价/ 表示/ 为/ Ttotal/ =/ TGenPredVec/ +/ TBroaPredVec/ +/ TDDTA/ -/ OLAP/ +/ TResMerg/ ,/ 其中/ :/ TGenPredVec/ :/ 表示/ 生成/ 谓词/ 向量/ 的/ 代价/ ,/ 由维表行/ TBroaPredVec/ :/ 由/ 谓词/ 向量/ 大小/ 决定/ ;/ TDDTA/ -/ OLAP/ :/ 由/ 事实/ 表/ 分片/ 数据量/ 、/ 分组/ 维/ 属性/ 数量/ 、/ 谓词/ 向量/ 选择率/ 等/ 因素/ 决定/ ;/ TResMerg/ :/ 由/ 节点/ 数量/ 和/ 结果/ 集/ 大小/ 决定/ ./ 我们/ 用/ 8/ 台/ PC机/ 进行/ 并行/ DDTA/ -/ OLAP/ 实数/ 、/ 谓词/ 表达式/ CPU/ 计算/ 代价/ 等/ 因素/ 决定/ ;/ 4.3/ 实验/ 平台/ 和/ 实验设计/ Page9/ 图/ 8/ 对/ 较大/ 的/ 磁盘/ 维/ 属性/ 分组/ 列/ 的/ 访问/ 验/ 测试/ ,/ 每台/ 计算机/ 的/ 配置/ 为/ Intel/ ?/ CoreTM2DuoCPUE7500/ @/ 2.93/ GHz/ ,/ 2GB/ 内存/ ,/ 80GB/ 硬盘/ ,/ 操作系统/ 为/ Ubuntu2/ ./ 6.35/ -/ 22/ ./ 我们/ 使用/ OpenMPIv1/ ./ 4.3/ 作为/ 并行处理/ 框架/ 并/ 实现/ 网络/ 广播/ 模式/ 的/ 数据/ 发布/ ./ 一个/ 节点/ 被/ 用作/ 中心/ 节点/ ,/ 集中/ 存储/ 全部/ 维表/ 数据/ ,/ 7/ 个/ 节点/ 作为/ 并行/ 查询处理/ 节点/ ,/ 每个/ 节点/ 存储/ 本地/ 的/ 事实/ 表/ 分片/ ./ 我们/ 通过/ C++/ 开发/ 了/ 谓词/ 向量/ DDTA/ -/ OLAP/ 实验/ 系统/ ,/ 在/ 实验/ 中/ 我们/ 使用/ 的/ 数据/ 集/ 大小/ 为/ 7/ ×/ 32GB/ =/ 224GB/ ,/ 每个/ 处理/ 节点/ 分配/ 32GB/ 的/ 事实/ 表/ 水平/ 分片/ ,/ 实验/ 采用/ 分段/ 测试/ 的/ 方法/ ,/ 即/ 在/ DDTA/ -/ OLAP/ 并行/ SSB/ 查询处理/ 过程/ 中/ 设置/ 计时器/ 分别/ 统计/ 每个/ 处理/ 阶段/ 的/ 时间/ ./ 谓词/ 向量/ 采用/ 分组/ 压缩/ 编码/ 谓词/ 向量/ 和/ bitmap/ 谓词/ 向量/ +/ 分布式/ 分组/ 属性/ 缓存/ 两种/ 策略/ ,/ 分别/ 测试/ 了/ 两种/ 策略/ 下/ 谓词/ 向量/ 的/ 生成/ 和/ 广播时间/ ./ 由于/ SSB/ 测试/ 的/ 结果/ 集较/ 小且/ 集势/ 稳定/ ,/ 我们/ 采用/ 基于/ MPI/ 的/ 内存/ Hash/ 归并/ 算法/ 进行/ 全局/ 聚集/ 计算/ 归并/ ./ 4.4/ 性能/ 测试/ 与/ 分析/ 图/ 9/ 显示/ 了/ 在/ 并行/ DDTA/ -/ OLAP/ 查询处理/ 过程/ 中/ 各个/ 处理/ 阶段/ 的/ 时间/ 代价/ ./ 由于/ 谓词/ 向量/ 较/ 小/ ,/ 创建/ 代价/ 大约/ 是/ 几百/ 毫秒/ ,/ 广播/ 传输/ 代价/ 大约/ 为/ 几千/ 毫秒/ ,/ 与/ 基于/ 磁盘/ I/ // O/ 代价/ 的/ 本地/ DDTA/ -/ OLAP/ 相比/ 所/ 占/ 比例/ 非常低/ ./ 采用/ 谓词/ 向量/ 技术/ 时/ ,/ 默认/ 为/ 分组/ 属性/ 已/ 增量/ 式/ 缓存/ 于/ 各/ 处理/ 节点/ ,/ 因此/ 只/ 需要/ 传输/ bitmap/ 结构/ 的/ 谓词/ 向量/ ,/ 网络/ 传输/ 代价/ 最小/ ,/ 创建/ 谓词/ 向量/ 、/ 广播/ 谓词/ 向量/ 和/ 查询/ 结果/ 集/ 归并/ Page103/ 个/ 串行/ 负载/ 代价/ 占/ 并行/ 查询处理/ 总/ 代价/ 的/ 比例/ 为/ 1.3/ %/ ./ 分组/ 压缩/ 编码/ 谓词/ 向量/ 技术/ 不/ 需要/ 在/ 处理/ 节点/ 缓存/ 分组/ 属性/ ,/ 谓词/ 向量/ 采用/ 多位/ 编码/ ,/ 同时/ 代表/ 过滤/ 信息/ 和/ 分组/ 语义/ ,/ 传输/ 代价/ 略有/ 提高/ ,/ 但/ 串行/ 负载/ 在/ 并行/ 查询处理/ 负载/ 中所/ 占/ 的/ 比例/ 为/ 2/ %/ ./ 图/ 10/ 中/ 显示/ 了/ 串行/ 负载/ 比例/ 最大/ 的/ 分组/ 压缩/ 编码/ 谓词/ 向量/ 技术/ ,/ 其/ 并行处理/ 的/ 加速/ 比/ 接近/ 于/ 理想/ 的/ 线性/ 加速/ 比/ 性能/ ./ 实验/ 结果/ 证明/ 在/ 磁盘/ OLAP/ 中/ 利用/ 内存/ 优化/ 处理/ 技术/ 能够/ 以极/ 低/ 的/ 代价/ 来/ 保证/ 复杂/ 多表/ 连接/ 操作/ 的/ 线性/ 处理/ 性能/ 和/ 线性/ 并行/ 加速/ 性能/ ./ 同时/ ,/ 广播/ 谓词/ 向量/ 的/ 机制/ 也/ 保证/ 了/ 集群/ 规模/ 扩展/ 时/ 网络/ 传输/ 代价/ 的/ 稳定性/ ./ 并行/ 加速/ 比是/ 衡量/ 算法/ 可/ 并行性/ 的/ 重要/ 指标/ ,/ 在/ 实际/ 的/ 系统/ 中/ ,/ 不同/ 的/ 数据库/ 产品/ 采用/ 不同/ 的/ 查询/ 优化/ 策略/ ,/ 如列/ 存储/ 、/ 索引/ 、/ 压缩/ 等/ 技术/ ,/ 因此/ 绝对/ 查询处理/ 时间/ 上/ 的/ 对比/ 往往/ 并/ 不/ 公平/ ./ DDTA/ -/ OLAP/ 是/ 在/ 查询处理/ 层上/ 进行/ 的/ 优化/ ,/ 不/ 依赖于/ 具体/ 的/ 底层/ 存储技术/ ,/ 同样/ 可以/ 采用/ 列/ 存储/ 来/ 提高/ I/ // O/ 性能/ ,/ 进而/ 提高/ 整体/ OLAP/ 查询处理/ 性能/ ./ 在/ 高/ 可/ 扩展/ 的/ 并行/ OLAP/ 处理/ 框架/ 下/ ,/ 进一步提高/ OLAP/ 性能/ 的/ 关键/ 是/ 提高/ 处理/ 节点/ 的/ 性能/ ,/ 如/ 采用/ 列/ 存储/ 、/ 多核/ 并行/ 、/ 高性能/ 存储设备/ 等/ 软/ // 硬件/ 技术/ ./ 图/ 3/ 所示/ 的/ 并行处理/ 框架/ 没有/ 硬件/ 和/ 数据分布/ 的/ 限制/ ,/ 因此/ 对于/ 快速增长/ 的/ 数据/ 具有/ 良好/ 的/ 可扩展性/ ,/ 广播/ 和/ 谓词/ 向量/ 机制/ 保持/ 了/ 系统/ 规模/ 扩大/ 时/ 查询处理/ 框架/ 在/ 软件结构/ 上/ 的/ 稳定性/ ./ 传统/ 的/ 并行/ 数据库/ 性能/ 依赖于/ 数据分布/ 策略/ 、/ 并行/ 连接/ 操作/ 时/ 的/ 数据/ 重/ 分布/ 或/ 数据/ 迁移/ 策略/ 、/ 查询处理/ 引擎/ 性能/ 等/ 多种/ 因素/ ./ 为/ 达到/ 图/ 10/ 所示/ 理想/ 的/ 线性/ 加速/ 比/ 性能/ ,/ 一般/ 采用/ 对/ 较/ 小/ 的/ 维表全/ 复制/ 的/ 策略/ ,/ 从而/ 实现/ 数据/ 并行/ 和/ 查询处理/ 并行/ ,/ 但/ 在/ 大规模/ 并行计算/ 集群/ 中/ 产生/ 巨大/ 的/ 冗余/ 存储/ 代价/ 和/ 高昂/ 的/ 同步/ 更新/ 代价/ ./ 分析/ 型/ 数据库/ 集群/ (/ 如/ Teradata/ 、/ ParAccel/ 等/ )/ 一般/ 使用/ 特殊/ 设计/ 的/ 高性能/ 硬件/ 来/ 控制/ 并行/ 查询处理/ 时/ 的/ 数据/ 迁移/ 代价/ ,/ 一方面/ 造成/ 硬件/ 成本/ 的/ 迅速/ 提高/ ,/ 另一方面/ 由/ 硬件/ 的/ 依赖性/ 产生/ 可扩展性/ 瓶颈/ 问题/ ./ 本文/ 提出/ 的/ 谓词/ 向量/ 广播/ 技术/ 将/ 并行/ 查询/ 时/ 的/ 数据分布/ 控制/ 在/ 非常/ 小/ 的/ 常量/ 时间/ 范围/ 之内/ ,/ 在/ 保证/ 存储/ 效率/ 和/ 同步/ 更新/ 性能/ 的/ 同时/ 与/ 高/ 代价/ 的/ 全/ 复制/ 并行/ 查询处理/ 机制/ 保证/ 相同/ 的/ 并行/ 加速/ 比/ 性能/ ./ 同时/ ,/ 我们/ 在/ 后续/ 的/ 研究/ 中/ 采用/ 列/ 存储技术/ 存储/ 巨大/ 的/ 事实/ 表/ ,/ 能够/ 进一步提高/ 并行/ OLAP/ 的/ 处理/ 性能/ ,/ 同时/ 保证/ 良好/ 的/ 并行/ 加速/ 比/ 性能/ 和/ 进一步提高/ 整体/ 查询处理/ 性能/ ./ 5/ 结束语/ 大/ 数据/ 集上/ 的/ OLAP/ 处理/ 必然/ 由/ 昂贵/ 的/ 高端/ 服务器/ 处理/ 走向/ 廉价/ 的/ 集群/ 处理/ 模式/ ./ 集群/ 并行/ OLAP/ 处理/ 主要/ 的/ 瓶颈/ 在于/ OLAP/ 算法/ 的/ 可/ 并行性/ ,/ 并行/ OLAP/ 处理/ 时/ 的/ datamotion/ (/ 数据/ 迁移/ )/ 代价/ 、/ 本地/ 处理/ 时/ 的/ I/ // O/ 代价/ 、/ 多表/ 连接/ 操作/ 时/ 的/ 查询处理/ 代价/ ./ 本文/ 提出/ 了/ one/ -/ size/ -/ fits/ -/ all/ 模式/ 的/ 并行/ OLAP/ 处理/ ,/ 利用/ 现代/ 计算机/ 的/ 大/ 内存容量/ ,/ 将/ 连接/ 依赖/ 数据/ 集/ 通过/ 列/ 存储/ 、/ 压缩/ 、/ 谓词/ 向量/ 等/ 技术/ 最小化/ 其/ 内存/ 存储空间/ 代价/ ,/ 使/ 其/ 能够/ 满足/ 内存/ 直接/ 访问/ ,/ 从而/ 使/ 不同/ 的/ SPJGA/ 类/ OLAP/ 查询/ 能够/ 规范化/ 到/ 统一/ 的/ DDTA/ -/ OLAP/ 处理/ 模型/ 中/ ,/ 最小化/ OLAP/ 查询处理/ 时/ 连接/ 数据/ 依赖/ 数据/ 集/ 的/ datamotion/ (/ 数据/ 迁移/ )/ 代价/ 和/ 基于/ 多表/ 连接/ 的/ OLAP/ 处理/ 代价/ ,/ 使/ OLAP/ 算法/ 的/ 并行度/ 得以/ 提升/ ./ 本文/ 研究/ 的/ 重点/ 是/ 大/ 数据/ 集在/ 集群/ 环境/ 下/ 的/ 并行处理/ 框架/ ,/ 充分利用/ 大容量/ 内存/ 简化/ OLAP/ 算法/ ,/ 并/ 实现/ 内存/ OLAP/ 处理/ ,/ 从而/ 使/ 并行/ OLAP/ 算法/ 具有/ 可扩展性/ ./ 在/ 此/ 框架/ 下/ ,/ 可以/ 进一步/ 结合/ 列/ 存储/ 、/ 内存/ 查询处理/ 、/ 多核/ 并行处理/ 等/ 技术/ 进一步提高/ 本地/ OLAP/ 查询处理/ 的/ 性能/ ,/ 提高/ 整体/ 的/ 并行/ OLAP/ 查询处理/ 性能/ ./ SPJGA/ 类/ 并行/ OLAP/ 查询/ 作为/ 通用/ OLAP/ 中/ 最/ 基础/ 、/ 代价/ 最大/ 的/ 处理/ 子/ 任务/ ,/ 其/ 良好/ 的/ 并行处理/ 性能/ 是/ 提高/ 通用/ OLAP/ 并行处理/ 性能/ 的/ 关键/ ./ SPJGA/ -/ OLAP/ 可以/ 作为/ 其它/ 并行/ 数据库系统/ 中/ 的/ 并行处理/ 模块/ 来/ 加速/ 并行/ 数据库/ 的/ 多表/ 连接/ 查询/ 子/ 任务/ 的/ 性能/ ./ 我们/ 将/ 在/ 未来/ 的/ 工作/ 中将/ SPJGA/ -/ OLAP/ 嵌入/ 到/ 其它/ 并行/ 数据库系统/ 中/ (/ 如/ PostgreSQL/ -/ XC/ )/ 来/ 提高/ 其/ 并行/ OLAP/ 处理/ 性能/ ./ Page11/ 

