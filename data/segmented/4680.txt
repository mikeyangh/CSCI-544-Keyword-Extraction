Page1/ 基于/ 连续/ 模型/ 和/ 动力学/ 仿真/ 模型/ 的/ 高密度/ 人群/ 仿真/ 算法/ 孙立/ 博孙晓峰/ 秦/ 文虎/ (/ 东南大学/ 仪器/ 科学/ 与/ 工程学院/ 南京/ 210096/ )/ 摘要/ 为了/ 真实/ 模拟/ 高密度/ 下/ 的/ 人群/ 运动/ ,/ 文中/ 提出/ 了/ 一种/ 将/ 人群/ 运动/ 连续/ 模型/ 和/ 人群/ 动力学/ 仿真/ 模型/ 相结合/ 的/ 高密度/ 人群/ 仿真/ 算法/ ./ 该/ 方法/ 首先/ 将/ 人群/ 假设/ 为/ 连续/ 的/ 流体/ ,/ 并/ 进行/ 密度/ 场/ 的/ 转化/ ;/ 然后/ 通过/ 计算/ 最大/ 速度/ 场/ 和/ 单位/ 消耗/ 场/ ,/ 建立/ 全局/ 的/ 动态/ 势能/ 场/ ,/ 并/ 根据/ 势能/ 场/ 的/ 梯度/ 得到/ 期望/ 的/ 全局/ 速度/ 场/ ;/ 接着/ 利用/ 有限/ 压缩性/ 规则/ 对/ 人群/ 的/ 密度/ 进行/ 限制/ ,/ 通过/ 高密度/ 环境/ 下/ 产生/ 的/ 压力/ 项/ 校正/ 速度/ 场/ ,/ 从而/ 插值/ 更新/ 人群/ 位置/ ,/ 并/ 对/ 更新/ 后/ 的/ 人群/ 做/ 最小/ 距离/ 限制/ ,/ 实现/ 网格/ 内部/ 个体/ 之间/ 的/ 避/ 碰/ ;/ 最后/ 引入/ GPU/ 加速/ 算法/ 实现/ 高密度/ 人群/ 快速/ 仿真/ ./ 仿真/ 结果表明/ ,/ 基于/ 连续/ 模型/ 和/ 动力学/ 仿真/ 模型/ 的/ 高密度/ 人群/ 仿真/ 算法/ 能够/ 逼真/ 地/ 模拟/ 向/ 同一/ 目标/ 或/ 指定/ 目标/ 运动/ 、/ 躲避/ 动/ 静态/ 障碍物/ 、/ 人群/ 交汇/ 等/ 多种/ 场景/ 下/ 的/ 人群/ 运动/ ,/ 这/ 对/ 现实生活/ 中/ 交通/ 疏散/ 方案/ 的/ 制定/ 具有/ 一定/ 的/ 指导意义/ ./ 关键词/ 虚拟/ 人群/ 仿真/ ;/ 连续/ 模型/ ;/ 有限/ 压缩性/ 规则/ ;/ GPU/ 加速/ 1/ 引言/ 近年来/ ,/ 随着/ 虚拟现实/ 技术/ 的/ 不断/ 发展/ 和/ 完善/ 、/ 图形/ 硬件/ 运算/ 速度/ 的/ 快速/ 提高/ ,/ 虚拟/ 人群/ 仿真技术/ 越来越/ 被/ 人们/ 广泛/ 关注/ ,/ 逐渐/ 成为/ 计算机/ 图形学/ 及/ 相关/ 领域/ 的/ 研究/ 热点/ ./ 虚拟/ 人群/ 仿真技术/ 在/ 城市规划/ 、/ 影视娱乐/ 、/ 军事训练/ 、/ 疏散/ 模拟/ 、/ 大型/ 体育/ 仿真/ 、/ 古/ 遗产/ 还原/ 重建/ 等/ 领域/ 都/ 有着/ 广泛/ 的/ 应用/ 前景/ :/ (/ 1/ )/ 在/ 城市规划/ 领域/ ,/ 随着/ 汽车/ 保有量/ 和/ 城市/ 人口/ 规模/ 的/ 不断/ 增加/ ,/ 上下班/ 高峰期/ 的/ 道路/ 拥堵/ 问题/ 严重/ 困扰/ 着/ 人们/ 的/ 日常生活/ ./ 通过/ 引入/ 虚拟/ 人群/ 仿真技术/ ,/ 根据/ 人群/ 的/ 出发/ 时间/ 、/ 目的地/ 和/ 道路/ 的/ 实际/ 状况/ ,/ 可以/ 为/ 人群/ 和/ 通行/ 车辆/ 规划/ 出/ 拥堵/ 少/ 的/ 路径/ ,/ 达到/ 减少/ 人们/ 等待时间/ ,/ 保证/ 道路/ 基本/ 畅通/ 的/ 目的/ ./ (/ 2/ )/ 在/ 影视娱乐/ 方面/ ,/ 《/ 权力/ 的/ 游戏/ 》/ 中/ 恢宏/ 的/ 军队/ 对战/ 场景/ 印证/ 了/ 引入/ 大规模/ 群体/ 动画/ 的/ 必要性/ ,/ 其/ 不仅/ 可以/ 为/ 观众/ 带来/ 超级/ 震撼/ 的/ 视觉/ 体验/ ,/ 而且/ 可以/ 极大/ 地/ 减少/ 动画师/ 的/ 手工操作/ ,/ 并/ 为/ 导演/ 进行/ 更/ 完美/ 的/ 构思/ 提供/ 有效途径/ ./ (/ 3/ )/ 在/ 军事训练/ 方面/ ,/ 很多/ 特种兵/ 的/ 实战/ 化/ 训练/ 都/ 是/ 比较/ 危险/ 的/ ,/ 引入/ 群体/ 仿真技术/ ,/ 不仅/ 可以/ 在/ 一定/ 程度/ 上/ 降低/ 训练/ 的/ 危险/ 系数/ 、/ 保证/ 战士/ 的/ 安全/ ,/ 还/ 可以/ 提高/ 训练/ 效率/ ,/ 为/ 全面/ 提升/ 我国/ 军事力量/ 奠定/ 基础/ ./ (/ 4/ )/ 在/ 疏散/ 模拟/ 领域/ ,/ 如何/ 在/ 紧急情况/ 发生/ 时/ ,/ 迅速/ 将/ 人员/ 撤离/ 到/ 安全/ 场所/ 是/ 人们/ 关注/ 的/ 重要/ 问题/ ./ 通过/ 引入/ 虚拟/ 人群/ 仿真技术/ ,/ 不仅/ 可以/ 判断/ 建筑物/ 的/ 出口/ 数量/ 、/ 出口/ 位置/ 等/ 设计/ 是否/ 合理/ ,/ 还/ 可以/ 根据/ 人群/ 疏散/ 仿真/ 的/ 结果/ ,/ 为/ 建立/ 人群/ 的/ 应急/ 疏散/ 方案/ 提供/ 帮助/ ,/ 并/ 在/ 此基础/ 上/ 进一步/ 验证/ 方案/ 的/ 有效性/ 和/ 合理性/ ./ (/ 5/ )/ 在/ 大型/ 体育/ 仿真/ 方面/ ,/ 直接/ 根据/ 导演/ 的/ 创意/ 进行/ 真人/ 彩排/ ,/ 不仅/ 需要/ 大量/ 的/ 人员/ 配合/ ,/ 更/ 需要/ 花费/ 大量/ 的/ 时间/ 去/ 验证/ 进而/ 修改/ 完善/ 编排/ 方案/ ./ 而/ 引入/ 虚拟/ 人群/ 仿真技术/ ,/ 就/ 可以/ 有效/ 地/ 解决/ 上述/ 问题/ ,/ 使/ 导演/ 在/ 短时间/ 内/ 完成/ 精彩绝伦/ 的/ 设计/ 成为/ 可能/ ,/ 北京/ 奥运会/ 惊艳/ 全球/ 的/ 开幕式/ 就是/ 最好/ 也/ 是/ 最/ 有力/ 的/ 证明/ ./ (/ 6/ )/ 在/ 古/ 遗产/ 还原/ 重建/ 方面/ ,/ 虽然/ 重现/ 古建筑/ 原貌/ 是/ 人们/ 关注/ 的/ 首要/ 问题/ ,/ 但是/ 将/ 该/ 时期/ 的/ 居民/ 也/ 包括/ 其中/ ,/ 不仅/ 可以/ 提高/ 场景/ 的/ 生动性/ ,/ 而且/ 可以/ 使/ 人们/ 对/ 古建筑/ 所/ 反映/ 的/ 历史/ 和/ 文化/ 有/ 更加/ 直观/ 和/ 深入/ 的/ 认识/ ./ 目前/ 根据/ 不同/ 的/ 仿真/ 目的/ ,/ 我们/ 可以/ 将/ 虚拟/ 人群/ 仿真/ 方法/ 分成/ 两类/ :/ 第/ 1/ 类/ 是/ 宏观/ 仿真/ 方法/ ,/ 第/ 2/ 类/ 是/ 微观/ 仿真/ 方法/ ./ 宏观/ 仿真/ 方法/ 主要/ 侧重于/ 整个/ 群体/ 的/ 真实性/ ,/ 也/ 就是/ 不再/ 著/ 重于/ 个体/ ,/ 而是/ 使/ 人群/ 整体/ 的/ 运动/ 看起来/ 真实/ 即可/ ./ 比较/ 有/ 代表性/ 的/ 方法/ 包括/ Treuille/ 等/ 人/ [/ 1/ ]/ 提出/ 的/ 连续/ 人群/ 运动/ 模型/ 和/ Narain/ 等/ 人/ [/ 2/ ]/ 提出/ 的/ 将/ 离散/ 和/ 连续/ 表示/ 相结合/ 的/ 可/ 扩展/ 的/ 动力学/ 人群/ 仿真/ 方法/ ./ Treuille/ 等/ 人/ 将/ 运动/ 看成/ 是/ 粒子/ 能量/ 最小/ ,/ 人群/ 按照/ 目标/ 的/ 不同/ 进行/ 分组/ ,/ 并且/ 结合/ 全局/ 的/ 路径/ 规划/ 和/ 局部/ 的/ 碰撞/ 避免/ ,/ 保证/ 人群/ 所/ 走/ 的/ 路径/ 是/ 最优化/ 的/ ./ 在/ 连续/ 人群/ 运动/ 模型/ 中/ ,/ Treuille/ 等/ 人/ 还/ 考虑/ 了/ 人群/ 密度/ 对/ 速度/ 的/ 影响/ ./ 即当/ 人群/ 密度/ 较/ 低时/ ,/ 人群/ 保持/ 最大/ 的/ 速度/ 前进/ ,/ 而/ 当/ 人群/ 密度/ 较/ 高时/ ,/ 速度/ 会/ 受到/ 相应/ 的/ 影响/ ,/ 密度/ 越高/ ,/ 速度/ 越小/ ,/ 这会/ 给/ 人/ 比较/ 真实/ 的/ 感觉/ ./ 另外/ ,/ 由于/ 人群/ 是/ 按照/ 目标/ 是否/ 相同/ 进行/ 划分/ 的/ ,/ 所以/ 一个组/ 内/ 的/ 人群/ 只/ 做/ 一次/ 路径/ 规划/ ,/ 这样/ 使用/ 的/ 计算资源/ 也/ 就/ 相应/ 减少/ ,/ 从而/ 保证/ 人群/ 运动/ 是/ 实时/ 的/ ./ Narain/ 等/ 人/ 对/ 密集/ 人群/ 所/ 表现/ 出/ 的/ 聚集/ 行为/ 进行/ 仿真/ ,/ 其/ 使用/ 混合/ 方法/ ,/ 即将/ agent/ 看成/ 是/ 离散/ 个体/ 和/ 连续/ 整体/ 的/ 统一体/ ./ 在/ 进行/ 连续性/ 设置/ 时/ ,/ 将/ 单一/ 不/ 可压缩性/ 的/ 动态/ 限制/ 条件/ 引入/ 到/ 模型/ 中/ ,/ 对/ 大规模/ 的/ 人群/ 行为/ 进行/ 建模/ 并且/ 对/ 密集度/ 较/ 高/ 的/ 场景/ 中人/ 与/ 人/ 之间/ 的/ 碰撞/ 避免/ 进行/ 加速/ ./ 当/ 人群/ 密度/ 较/ 高时/ ,/ 由于/ 每个/ 个体/ 的/ 自由/ 受到/ 了/ 周围/ 个体/ 的/ 限制/ ,/ 因此/ Narain/ 等/ 人/ 将/ 人群/ 建模/ 成/ 可以/ 用/ 密度/ 和/ 流速/ 描述/ 的/ 连续/ 流体/ ,/ 并/ 把/ 局部/ 避碰/ 映射/ 转换/ 到/ 流体/ 域/ ,/ 从而/ 得到/ 限制/ 人群/ 流/ 的/ 可变/ 参量/ ,/ 这个/ 限制/ 量/ 就是/ 单一/ 不可/ 压缩/ 限制/ (/ UnilateralIncompressibilityConstraint/ ,/ UIC/ )/ ./ 该/ 方法/ 的/ 具体/ 实现/ 可/ 描述/ 如下/ ,/ 其/ 将/ 局部/ 规划/ 模块/ 和/ 全局/ 规划/ 器/ 相结合/ ,/ 首先/ 通过/ 全局/ 规划/ 器/ 获得/ 每个/ agent/ 的/ 理想/ 速度/ ,/ 其次/ 将/ agent/ 的/ 离散/ 集合/ 用/ 密度/ 和/ 速度/ 转换成/ 连续/ 表示/ ,/ 再次/ 引入/ UIC/ 来/ 确定/ 合理/ 的/ 速度/ 域/ ./ 所谓/ UIC/ ,/ 是/ 根据/ 人群/ 的/ 特性/ 提出/ 来/ 的/ ,/ 当/ 密集度/ 较/ 高时/ ,/ 人群/ 虽然/ 很/ 像/ 流体/ 系统/ ,/ 但是/ 也/ 不/ 完全相同/ ./ 这/ 就/ 意味着/ 它/ 既/ 不是/ 完全/ 不可/ 压缩/ 的/ ,/ 又/ 不是/ 完全/ 可压缩/ 的/ ./ 也就是说/ ,/ 可以/ 使用/ UIC/ 对/ 人群/ 的/ 密度/ 加以/ 限制/ ,/ 从而/ 使/ 其/ 密度/ 不/ 可以/ 无/ 限制/ 地/ 增大/ ,/ 这/ 也/ 保证/ 了/ 人/ 与/ 人/ 之间/ 的/ 距离/ 不会/ 过/ 小/ ./ 最后/ ,/ 每个/ agent/ 根据/ 真实/ 速度/ 进行/ 运动/ ,/ 从而/ 实现/ 位置/ 上/ 的/ 更新/ ./ 微观/ 仿真/ 方法/ 侧重于/ 个体/ 行为/ 的/ 真实性/ 和/ 多样/ Page3/ 性/ ,/ 也就是说/ 其/ 对/ 每个/ agent/ 都/ 进行/ 行为/ 建模/ ,/ 包括/ 感知/ 、/ 规划/ 、/ 心理/ 、/ 性格/ 、/ 情感/ 等/ ./ 目的/ 是/ 使/ 每个/ agent/ 在/ 对待/ 同一/ 事件/ 时/ ,/ 能够/ 表现/ 出/ 不同/ 的/ 反应/ ,/ 从而/ 提高/ 仿真/ 的/ 真实性/ ./ 根据/ 研究/ 方式/ 的/ 不同/ ,/ 微观/ 仿真/ 方法/ 又/ 可/ 细分/ 为/ 基于/ 模型/ 的/ 方法/ 和/ 基于/ 数据/ 驱动/ 的/ 方法/ ./ 基于/ 模型/ 的/ 方法/ 以/ 社会/ 力/ 模型/ [/ 3/ ]/ 、/ 元胞/ 自动机/ 模型/ [/ 4/ ]/ 和/ 基于/ 规则/ 的/ 模型/ [/ 5/ -/ 6/ ]/ 为/ 主要/ 代表/ ./ 社会/ 力/ 模型/ 以/ 牛顿/ 力学/ 为/ 基础/ ,/ 假设/ 个体/ 受到/ 社会/ 力/ 的/ 作用/ ,/ 其/ 可/ 认为/ 是/ 社会/ 心理/ 和/ 生理/ 的/ “/ 力/ ”/ 的/ 合力/ ,/ 从而/ 来/ 控制/ 人群/ 运动/ ./ 由于/ 社会/ 力/ 模型/ 为/ 每个/ 个体/ 解/ 牛顿/ 力学/ 方程/ ,/ 将/ 人/ 与/ 人/ 之间/ 、/ 人/ 与/ 静态/ 障碍物/ 之间/ 的/ 斥力/ ,/ 人/ 与/ 目标/ 之间/ 的/ 引力/ 以及/ 摩擦力/ 考虑/ 进来/ ,/ 并且/ 对/ 个体/ 行为/ 合理/ 建模/ ,/ 因此/ 能够/ 真实/ 地/ 再现/ 人群/ 拥挤/ 时/ 的/ 挤/ 压力/ ,/ 逼真/ 地/ 模拟/ 紧急状态/ 下/ 人群/ 的/ 疏散/ 过程/ ./ 元胞/ 自动机/ 模型/ 将/ 人/ 的/ 运动/ 限制/ 于/ 离散/ 的/ 方格/ 之中/ ,/ 方格/ 的/ 大小/ 固定/ 了/ 人群/ 的/ 密度/ ,/ 使得/ 人群/ 流量/ 不/ 真实/ ./ 而且/ 由于/ 其/ 在/ 时间/ 和/ 空间/ 上/ 都/ 是/ 离散/ 的/ ,/ 所以/ 用该/ 方法/ 仿真/ 出来/ 的/ 人群/ 运动/ 不/ 连续/ ,/ 因而/ 缺乏/ 真实性/ ./ 基于/ 规则/ 的/ 模型/ 在/ 人群/ 密度/ 较/ 低/ 或者/ 中等/ 的/ 情况/ 下/ ,/ 能够/ 仿真/ 出/ 更加/ 真实/ 的/ 人群/ 运动/ ,/ 但是/ 不能/ 处理/ 人/ 与/ 人/ 之间/ 的/ 接触/ ,/ 因此/ 无法/ 仿真/ 出/ 挤压/ 的/ 效果/ ./ 鉴于/ 人群/ 行为/ 本身/ 的/ 多样性/ 和/ 复杂性/ ,/ 基于/ 模型/ 的/ 方法/ 大多/ 是/ 针对/ 人群/ 行为/ 模型/ 的/ 某一方面/ 展开/ 研究/ 的/ ,/ 因此/ 近年来/ 涌现出/ 很多/ 扩展/ 模型/ [/ 7/ -/ 8/ ]/ 对/ 其/ 进行/ 丰富/ 和/ 完善/ ./ 基于/ 数据/ 驱动/ 的/ 方法/ 主要/ 包括/ 运动/ 捕获/ 数据/ 驱动/ 的/ 方法/ [/ 9/ -/ 10/ ]/ 和/ 真实/ 录像/ 分析/ 的/ 方法/ [/ 11/ -/ 12/ ]/ ./ 运动/ 捕获/ 技术/ 可以/ 很/ 容易/ 地/ 获得/ 很多/ 真实/ 人体/ 运动/ 的/ 数据/ ,/ 因此/ 使用/ 这一/ 技术/ 生成/ 群体/ 动画/ 在/ 目前/ 非常/ 流行/ ,/ 也/ 得到/ 了/ 广泛应用/ ./ 但是/ 运动/ 捕获/ 技术/ 也/ 存在/ 一些/ 不足/ ,/ 它/ 需要/ 对/ 数据/ 进行/ 运动/ 编辑/ (/ motionediting/ )/ 、/ 运动/ 重定向/ (/ motionretargeting/ )/ 或者/ 使用/ 运动/ 图/ (/ motiongraph/ )/ 等/ 技术/ 自动/ 生成/ 相似/ 动作/ 间/ 的/ 转换/ 从而/ 增加/ 了/ 更/ 多/ 新/ 的/ 动作/ 片段/ ,/ 以/ 实现/ 对/ 更/ 多种/ 身材/ 比例/ 的/ 模型/ 进行/ 运动/ 控制/ ,/ 达到/ 更/ 真实/ 模拟/ 人群/ 运动/ 的/ 目的/ ./ 基于/ 真实/ 录像/ 分析方法/ 的/ 思想/ 是/ 通过/ 对/ 真实/ 人群/ 的/ 例子/ 或者/ 对/ 拍摄/ 到/ 的/ 真实/ 视频/ 中/ 人群/ 的/ 运动/ 轨迹/ 进行/ 观察/ 分析/ ,/ 从而/ 仿真/ 人群/ 行为/ ,/ 以/ 达到/ 更加/ 真实/ 再现/ 实际/ 场景/ 的/ 目的/ ./ 该/ 方法/ 近来/ 也/ 成为/ 研究/ 学者/ 关注/ 的/ 焦点/ ./ 最近/ ,/ 很多/ 采用/ GPU/ 仿真/ 人群/ 的/ 研究/ 也/ 取得/ 了/ 一定/ 的/ 成果/ [/ 13/ ]/ ./ Courty/ 等/ 人/ [/ 14/ ]/ 早期/ 在/ 快速/ 人群/ 的/ 研究/ 中/ 就/ 实现/ 了/ GPU/ 人群/ 仿真/ 的/ 效果/ ,/ 与/ CPU/ 相比/ ,/ 它/ 的/ 加速/ 性能/ 得到/ 了/ 显著/ 的/ 提高/ ./ Erra/ 等/ 人/ [/ 15/ ]/ 在/ GeForceFX5800/ 的/ GPU/ 上/ 实现/ 了/ 基于/ 离散/ 行为/ 模型/ 的/ 大规模/ 群体/ (/ boids/ )/ 仿真/ ./ Richmond/ 和/ Romano/ [/ 16/ ]/ 提出/ 了/ 一种/ 利用/ GPGPU/ 实现/ 的/ 基于/ 个体/ 的/ 行人/ 仿真/ ,/ 取得/ 了/ 不错/ 的/ 效果/ ./ 他们/ 设计/ 了/ 一个/ 支持/ GPU/ 脚本/ 的/ 界面/ ,/ 这样/ 就/ 可以/ 定义/ 更/ 多/ 复杂/ 的/ 个体/ 行为/ ./ 为了/ 提高/ 仿真/ 性能/ ,/ 行人/ 的/ 数据/ 和/ 仿真/ 都/ 放在/ GPU/ 中/ 进行/ ,/ 达到/ 了/ 减少/ 数据传输/ 花费/ 的/ 目的/ ./ 同样/ 地/ ,/ 他们/ 通过/ GPU/ 上/ 的/ LOD/ 系统/ 提升/ 了/ 渲染/ 和/ 仿真/ 性能/ ./ D/ ’/ Souza/ 和/ 他/ 的/ 团队/ [/ 17/ ]/ 在/ GPU/ 上/ 模拟/ 了/ 大型/ 人群/ ,/ 仿真/ 的/ 个体/ 数量/ 超过/ 了/ 200/ 万/ ,/ 并/ 达到/ 了/ 每秒/ 更新/ 50/ 次/ 的/ 效果/ ./ 他们/ 用/ GPU/ 纹理/ 存储器/ 来/ 保存/ 个体/ 的/ 属性/ ,/ 然后/ 利用/ GLSL/ 来/ 编写/ 着色/ 语言/ ./ Passos/ 等/ 人/ [/ 18/ -/ 19/ ]/ 在/ 最近/ 的/ 一个/ 研究/ 中/ 通过/ NVIDIA/ 的/ CUDA/ 技术/ 证明/ 了/ 实时/ 的/ 大规模/ 人群/ 仿真/ 是/ 具有/ 可行性/ 的/ ./ 他们/ 成功/ 地/ 模拟/ 了/ 超过/ 100/ 万/ 的/ boids/ ,/ 并且/ 将/ 帧/ 速/ 保持/ 在/ 30/ 帧/ 左右/ ,/ 效果/ 相当于/ 利用/ 多核/ CPU/ 模拟/ 的/ 15000/ 个/ boids/ ./ 实验/ 结果表明/ 基于/ 通用/ 并行计算/ 的/ 方法/ 能/ 极大/ 地/ 增强/ 实时/ 人群/ 仿真/ 的/ 效果/ ./ Karthikeyan/ [/ 20/ ]/ 也/ 在/ 他/ 的/ 硕士学位/ 论文/ 中/ 利用/ CUDA/ 技术/ 对/ 虚拟/ 人群/ 进行/ 渲染/ ,/ 并/ 对比/ 了/ 在/ GPU/ 和/ CPU/ 上/ 的/ 动画/ 计算/ ./ 结果表明/ ,/ GPU/ 能够/ 比/ CPU/ 节约/ 1000/ 个/ 左右/ 虚拟/ 角色/ 的/ 计算/ ./ 综上所述/ ,/ 当/ 仿真/ 中/ 小规模/ 人群/ 时/ ,/ 采用/ 微观/ 方法/ 能够/ 体现/ 个体/ 行为/ 的/ 真实性/ 、/ 完整性/ 和/ 差异性/ ,/ 但是/ 不管/ 采用/ 基于/ 模型/ 的/ 仿真/ 方法/ 还是/ 基于/ 数据/ 驱动/ 的/ 仿真/ 方法/ ,/ 都/ 会/ 面临/ 对/ 数据/ 的/ 需求量/ 较大/ ,/ 处理/ 起来/ 比较/ 繁琐/ 的/ 问题/ 或者/ 对/ 行为/ 建模/ 时/ 考虑/ 的/ 因素/ 过多/ 而/ 使得/ 算法/ 的/ 计算/ 复杂性/ 增高/ 的/ 问题/ ;/ 而/ 当/ 仿真/ 较/ 大规模/ 人群/ 时/ ,/ 由于/ 计算资源/ 消耗/ 增大/ ,/ 采用/ 宏观/ 方法/ 更为/ 合适/ ./ 本文/ 旨在/ 模拟/ 高密度/ 下/ 的/ 人群/ 运动/ 过程/ ,/ 比较/ 注重/ 仿真/ 的/ 实时性/ 而/ 对/ 个体/ 行为/ 的/ 差异性/ 不/ 做/ 过/ 多/ 要求/ ,/ 因此/ 我们/ 将/ 采用/ 基于/ 连续/ 流体/ 模型/ [/ 1/ ]/ 的/ 宏观/ 方法/ 对/ 人群/ 进行/ 仿真/ ./ 考虑/ 到/ 人群/ 在/ 密度/ 较/ 高时/ ,/ 既/ 不是/ 完全/ 不可/ 压缩/ 的/ ,/ 也/ 不是/ 完全/ 可压缩/ 的/ ,/ 为了/ 突出/ 人群/ 的/ 这/ 一/ 特性/ ,/ 本文/ 在/ Treuille/ 等/ 人/ [/ 1/ ]/ 提出/ 的/ 连续/ 人群/ 运动/ 模型/ 的/ 基础/ 上/ 引入/ 了/ 有限/ 压缩性/ 规则/ [/ 2/ ]/ ,/ 对/ 人群/ 的/ 密度/ 加以/ 合理/ 地/ 限制/ ,/ 并/ 引入/ GPU/ 加速/ 算法/ 提高/ 仿真/ 速度/ ,/ 从而/ 比较/ 真实/ 地/ 模拟/ 了/ 各种/ 场景/ 下/ 的/ 人群/ 运动/ ./ 本文/ 第/ 2/ 节/ 阐述/ 基于/ 连续/ 模型/ 和/ 动力学/ 仿真/ 模型/ 的/ 高密度/ 人群/ 仿真/ 算法/ 的/ 总体/ 框架/ 、/ 局部/ 人群/ 密度/ 的/ 定义/ 以及/ 各/ 算法/ 的/ 具体步骤/ ;/ 第/ 3/ 节/ 介绍/ 人群/ 仿真/ 算法/ 在/ GPU/ 上/ 的/ 扩展/ ;/ 第/ 4/ 节/ 通过/ 多组/ 仿真/ 实验/ ,/ 对/ 提出/ 的/ 算法/ 进行/ 验证/ ,/ 并/ 对/ 仿真/ 结果/ 进行/ 详/ Page4/ 细/ 的/ 分析/ ;/ 第/ 5/ 节/ 比较/ 并/ 分析/ 本文/ 提出/ 的/ 算法/ 和/ 已有/ 的/ 虚拟/ 人群/ 宏观/ 仿真/ 方法/ ;/ 第/ 6/ 节/ 总结/ 全文/ ./ 2/ 基于/ 连续/ 模型/ 和/ 动力学/ 仿真/ 模型/ 的/ 高密度/ 人群/ 仿真/ 算法/ 2.1/ 高密度/ 人群/ 仿真/ 算法/ 框架/ 通过/ 对/ 体育馆/ 离场/ 时/ 高密度/ 人群/ 的/ 运动/ 观察/ 发现/ ,/ 人群/ 在/ 向/ 各/ 出口/ 运动/ 的/ 过程/ 中/ ,/ 个体/ 的/ 自由度/ 会/ 由于/ 附近/ 人群/ 的/ 限制/ 而/ 大大降低/ ,/ 这/ 与/ 流体/ 运动/ 非常/ 相似/ ./ 因此/ ,/ 本文/ 将/ 人群/ 看作/ 一组/ 连续/ 的/ 个体/ ,/ 通过/ 密度/ 和/ 流动/ 速度/ 来/ 表示/ 它们/ 的/ 特性/ ;/ 而/ 随着/ 人群/ 密度/ 的/ 增加/ ,/ 会/ 出现/ 个体/ 之间/ 发生/ 碰撞/ 的/ 现象/ ,/ 故/ 本文/ 将/ 局部/ 避碰/ 方法/ 引入/ 连续/ 场中/ ,/ 以/ 更好/ 地/ 控制/ 人群/ 的/ 行为/ ./ 本文/ 提出/ 的/ 高密度/ 人群/ 仿真/ 算法/ 的/ 总体/ 框架/ 如图/ 1/ 所示/ :/ 在/ 每/ 一个/ 时间/ 步长/ ,/ 首先/ 将/ 离散/ 的/ 人群/ 转化成/ 基于/ 密度/ 场/ (/ densityfield/ )/ 和/ 速度/ 场/ (/ speedfield/ )/ 的/ 连续/ 表示/ 方法/ ,/ 然后/ 在/ 局部/ 避碰/ 方法/ 中/ 利用/ 有限/ 压缩性/ 规则/ (/ UnilateralIncompressibilityConstraint/ ,/ UIC/ )/ 对/ 连续/ 人群/ 中/ 的/ 个体/ 速度/ 进行/ 校正/ ,/ 并/ 插值/ 得到/ 个体/ 的/ 实际/ 运动/ 速度/ ;/ 最后/ 将/ 两者/ 结合/ 起来/ ,/ 更新/ 人群/ 的/ 位置/ ,/ 从而/ 实现/ 高密度/ 人群/ 仿真/ ./ 2.2/ 基于/ 连续/ 流体/ 的/ 全局/ 规划/ 算法/ 本文/ 采用/ Treuille/ 等/ 人/ [/ 1/ ]/ 的/ 方法/ 将/ 人群/ 看作/ 一组/ 连续/ 的/ 个体/ ./ 为了/ 体现/ 人群/ 的/ 流动/ 特性/ ,/ 我们/ 首先/ 做/ 4/ 个/ 重要/ 的/ 假设/ ./ 假设/ 1/ ./ 人群/ 中/ 的/ 每个/ 人/ 都/ 试图/ 到达/ 一个/ 目标/ G/ ,/ 这个/ 目标/ 点/ 或/ 目标/ 区域/ 对于/ 每个/ 人/ 来说/ 都/ 是/ 唯一/ 的/ ./ 假设/ 2/ ./ 人群/ 会/ 尽可能/ 地以/ 最大/ 速度/ 运动/ ,/ 也就是说/ 存在/ 一个/ 最大/ 速度/ 场/ f/ 使得/ 在/ 位置/ 狓/ 沿/ θ/ 方向/ 运动/ 的/ 行人/ 的/ 速度/ 可用/ 式/ (/ 1/ )/ 来/ 表示/ :/ 其中/ ,/ 狀/ θ/ =/ [/ cos/ θ/ ,/ sin/ θ/ ]/ T/ 表示/ 指向/ 方向/ θ/ 的/ 单位向量/ ./ 当/ 人们/ 能够/ 畅通无阻/ 地/ 移动/ 时/ ,/ 他们/ 通常/ 会/ 选择/ 一些/ 特定/ 的/ 路线/ ,/ 比如/ 行人/ 过/ 马路/ 时会/ 走/ 斑马线/ ;/ 人们/ 会/ 选择/ 一条/ 比较/ 熟悉/ 的/ 路线/ 行走/ ,/ 尽管/ 该/ 路线/ 可能/ 要远/ 一些/ ./ 为了/ 体现/ 人群/ 的/ 上述/ 特性/ ,/ 引入/ 不/ 适度/ 函数/ 这一/ 概念/ ,/ 动态/ 的/ 不/ 适度/ 可用/ 来/ 仿真/ 人群/ 之间/ 以及/ 人群/ 与/ 障碍物/ 之间/ 的/ 避/ 碰/ 行为/ ./ 假设/ 3/ ./ 存在/ 一个/ 不/ 适度/ 函数/ g/ ,/ 在/ 其他/ 条件/ 相同/ 的/ 情况/ 下/ ,/ 如果/ g/ (/ 狓/ 0/ )/ >/ g/ (/ 狓/ )/ ,/ 人们/ 则/ 会/ 选择/ 向/ 狓/ 点/ 移动/ 而/ 不是/ 向/ 狓/ 0/ 点/ 移动/ ./ 一般来说/ ,/ 人们/ 会/ 选择/ 最短/ 路径/ 到达/ 目标/ 位置/ ./ 但/ 实际上/ ,/ 人们/ 会/ 更/ 趋向于/ 避免/ 拥挤/ 堵塞/ 和/ 环境/ 不好/ 的/ 路径/ (/ 即/ 不/ 适度/ 较/ 高/ 的/ 区域/ )/ ,/ 也就是说/ ,/ 人们/ 会/ 在/ 选择/ 路径/ 时/ 综合/ 考虑/ 如下/ 3/ 个/ 方面/ 的/ 因素/ ,/ 力图/ 使/ 三者/ 的/ 线性组合/ 最小化/ :/ (/ 1/ )/ 路径/ 长度/ ;/ (/ 2/ )/ 到达/ 目标/ 位置/ 所/ 需/ 的/ 时间/ ;/ (/ 3/ )/ 沿着/ 路径/ 方向/ 单位/ 时间/ 内/ 的/ 不/ 适度/ ./ 假设/ 4/ ./ 若/ Π/ 是/ 所有/ 可行/ 路径/ 的/ 合集/ ,/ 当/ 速度/ 场/ f/ ,/ 不/ 适度/ g/ 和/ 目标/ 位置/ G/ 都/ 确定/ 时/ ,/ 行人/ 所/ 选择/ 路径/ P/ ∈/ Π/ 的/ 代价/ 可以/ 用式/ (/ 2/ )/ 表示/ :/ 其中/ :/ 第/ 1/ 项为/ 路径/ 长度/ 的/ 耗费/ ,/ 第/ 2/ 项为/ 移动/ 时间/ 的/ 耗费/ ,/ 第/ 3/ 项为/ 不/ 适度/ 引起/ 的/ 耗费/ ./ α/ ,/ β/ 和/ γ/ 分别/ 为/ 各自/ 的/ 权重/ ;/ ds/ 表示/ 路径/ 长度/ 的/ 积分/ ,/ 而/ dt/ 表示/ 时间/ 的/ 积分/ ,/ 这/ 两个/ 变量/ 的/ 关系/ 如下/ :/ 通过/ 式/ (/ 3/ )/ ,/ 化简/ 可以/ 得到/ 其中/ ,/ C/ ≡/ 可以/ 由/ 用户/ 根据/ 场景/ 进行/ 设置/ ./ 接下来/ 进行/ 密度/ 场/ 的/ 转化/ ,/ 并/ 在/ 每/ 一时间/ 步长/ ,/ 为/ 每/ 一组/ 人群/ 计算/ 最大/ 速度/ 场/ 和/ 单位/ 消耗/ 场/ ./ 其中/ ,/ 为了/ 保证/ 每/ 一组/ 人群/ 选择/ 的/ 路径/ 都/ 是/ 最优/ 路径/ ,/ 定义/ 势函数/ / ,/ 在/ 目标/ 点时/ / =/ 0/ ;/ 而/ 在/ 其他/ 点时/ / 满足/ eikonal/ 方程/ :/ 其中/ ,/ 单位/ 消耗/ 场/ C/ 是/ 沿着/ 势函数/ 梯度方向/ 的/ ./ 根据/ 式/ (/ 5/ )/ ,/ 可/ 得到/ 每个/ 人/ 在/ 点/ 狓/ (/ 二维/ 坐标/ )/ 处/ 的/ 速度/ :/ Page5/ ·/ 表示/ 速度/ ;/ f/ (/ 狓/ ,/ θ/ )/ 为/ 运动/ 方向/ 上/ 最大/ 允许/ 的/ 其中/ :/ 狓/ 速度/ 值/ ./ 最后/ 构建/ 全局/ 动态/ 势能/ 场/ ,/ 并/ 根据/ 势能/ 场/ 的/ 梯度/ 得到/ 期望/ 的/ 全局/ 速度/ 场/ ,/ 从而/ 驱动/ 人群/ 运动/ ./ 鉴于/ 建立/ 动态/ 势能/ 场/ 是/ 整个/ 算法/ 中/ 最/ 复杂/ 最/ 耗时/ 的/ 步骤/ ,/ 本文/ 将/ 对/ 其/ 详细/ 介绍/ ./ 由于/ 隐式/ 的/ eikonal/ 方程/ 不能/ 直接/ 计算出来/ ,/ 因此/ 需要/ 采用/ 有效/ 的/ 方法/ 来/ 解决/ ./ 目前/ ,/ 有效/ 的/ 解决/ 方法/ 主要/ 采用/ Rouy/ 和/ Tourin/ [/ 21/ ]/ 提出/ 的/ 迭代/ 算法/ 和/ Sethian/ [/ 22/ ]/ 提出/ 的/ 快速/ 行进/ 法/ (/ FastMarchingMethod/ )/ ./ 迭代/ 算法/ 对/ 每/ 一个/ 网格/ 点/ 都/ 进行/ 迭代/ 更新/ 直至/ 其/ 收敛/ 为止/ ,/ 该/ 方法/ 虽然/ 易于/ 实现/ ,/ 但是/ 由于/ 其/ 对/ 每/ 一/ 网格/ 点/ 都/ 进行/ 访问/ 并/ 评估/ 直至/ 所有/ 网格/ 点/ 收敛/ ,/ 因此/ 该/ 方法/ 的/ 效率/ 不高/ ./ 而/ 快速/ 行进/ 法/ (/ FMM/ )/ 则/ 采用/ 波阵面/ 窄带/ 的/ 思想/ ,/ 通过/ 维护/ 堆/ 结构/ 选择/ 算法/ 1/ ./ 快速/ 行进/ 法/ ./ 输入/ :/ gridsU/ ,/ 网格/ 数量/ num/ _/ grids/ ,/ 目标/ G/ 势能/ / G/ ,/ 图/ 2/ 快速/ 行进/ 法/ 输出/ :/ 场景/ 的/ 势能/ 场/ Φ/ 1/ ./ KList/ =/ {/ UG/ }/ ,/ UList/ =/ U/ -/ UG/ ,/ CList/ =/ null/ ;/ 2/ ./ whilelength/ (/ KList/ )/ / num/ _/ grids3/ ./ forUiinUdo4/ ./ 5.6/ ./ 7.8/ ./ 9.10/ ./ 11/ ./ endif12/ ./ endfor/ 性地/ 更新/ 网格/ 点/ ,/ 在/ 大小/ 为/ M/ ×/ N/ 的/ 网格/ 上/ ,/ FMM/ 算法/ 的/ 时间/ 复杂度/ 仅为/ O/ (/ MNlog/ (/ MN/ )/ )/ ./ 鉴于/ FMM/ 在/ 速度/ 上/ 的/ 优势/ 以及/ 其/ 在/ 各个领域/ 的/ 广泛应用/ ,/ 我们/ 选择/ 使用/ 快速/ 行进/ 法来/ 求解/ eikonal/ 方程/ ,/ 以/ 达到/ 保证/ 全局/ 规划/ 算法/ 效率/ 的/ 目的/ ./ 快速/ 行进/ 法/ 的/ 基本/ 思想/ 如图/ 2/ 所示/ ,/ 首先/ 将/ 场景/ 中/ 已/ 划分/ 好/ 的/ 网格/ 存入/ 3/ 种/ 列表/ :/ 已知/ 列表/ 、/ 未知/ 列表/ 和/ 候选/ 列表/ ,/ 设/ 目标/ 处/ 的/ 势能/ / 为/ 0/ ,/ 并/ 将/ 相应/ 的/ 网格/ 存入/ 已知/ 列表/ ,/ 其余/ 的/ 网格/ 存入/ 未知/ 列表/ ,/ 势能/ / 设/ 为/ ;/ 然后/ 将/ 与/ 已知/ 列表/ 中/ 网格/ 相邻/ 的/ 未知/ 网格/ 存入/ 候选/ 列表/ ,/ 并/ 通过/ 方程/ 的/ 有限/ 差分法/ 估计/ 候选/ 列表/ 中/ 各/ 网格/ 的/ 势能/ / ;/ 最后/ 将/ 势能/ 最小/ 的/ 候选/ 网格/ 存入/ 已知/ 列表/ ,/ 再/ 根据/ 更新/ 后/ 的/ 已知/ 列表/ 确定/ 相应/ 的/ 候选/ 列表/ ,/ 并/ 计算/ 候选/ 列表/ 的/ 势能/ ;/ 重复/ 这些/ 过程/ ,/ 直到/ 将/ 所有/ 的/ 网格/ 都/ 存入/ 已知/ 列表/ ,/ 候选/ 列表/ 为空/ 为止/ ./ 这样/ 场景/ 的/ 势能/ 场/ Φ/ 就/ 确定/ 完毕/ 了/ ./ 快速/ 行进/ 法/ 的/ 实现/ 可/ 描述/ 如/ 算法/ 1.13/ ./ forCiinCListdo14/ ./ 15/ ./ endfor16/ ./ 找出/ CList/ 中/ 势能/ 最小/ 网格/ Ck/ =/ argmin/ (/ / (/ Ci/ )/ )/ 17/ ./ 将/ Ck/ 添加/ 到/ KList18/ ./ endwhile/ 有限/ 差分/ 是/ 微分方程/ 的/ 一种/ 近似/ 数值/ 解法/ ,/ 该/ 方法/ 的/ 基本原理/ 是/ 利用/ 网格/ 剖分/ 将/ 连续/ 的/ 定解/ 区域/ 用/ 离散/ 化/ 网格/ 来/ 代替/ ;/ 将/ 待/ 解方程/ 中/ 的/ 微/ 商用/ 各/ 离散/ 点上/ 的/ 函数/ 的/ 差/ 商来/ 近似/ ,/ 积分/ 采用/ 积分/ 和/ 来/ 逼近/ ./ 这样/ ,/ 待求/ 的/ 微分方程/ 定解/ 问题/ 即可/ 转化/ 为/ 相应/ 的/ 有限/ 差分/ 方程组/ 问题/ ,/ 通过/ 求解/ 有限/ 差分/ 方程组/ 即可/ 获得/ 原/ 问题/ 在/ 离散/ 点上/ 的/ 近似/ 解/ ,/ 最后/ ,/ 再/ 应用/ 插值/ 方法/ 便/ 可/ 从/ 离散/ 解/ 求得/ 定解/ 问题/ 在/ 整个/ 场域/ 上/ 的/ 近似/ 解/ ./ 通常/ 利用/ 有限/ 差分法/ 计算所/ 采用/ 的/ 步骤/ 可/ 概括/ 如下/ :/ Page6/ (/ 1/ )/ 采用/ 一定/ 的/ 网格/ 剖分/ 方式/ 离散/ 化场域/ ;/ (/ 2/ )/ 进行/ 差分/ 离散/ 化/ 处理/ ,/ 用/ 离散/ 的/ 、/ 含/ 有限/ 个/ 未知数/ 的/ 差分/ 方程组/ 来/ 近似/ 代替/ 场内/ 具有/ 连续变量/ 的/ 偏/ 微分方程/ 及其/ 边界条件/ ;/ (/ 3/ )/ 结合/ 选定/ 的/ 代数方程/ 组/ 的/ 解法/ ,/ 编写程序/ 获得/ 差分/ 方程组/ 的/ 数值/ 解/ ./ 如图/ 3/ 所示/ ,/ 假设/ 需要/ 为/ 网格/ M/ 求解/ eikonal/ 方程/ ,/ 首先/ 要/ 找到/ x/ 轴/ 和/ y/ 轴/ 两个/ 方向/ 上/ 具有/ 较/ 低消耗/ / 的/ 相邻/ 网格/ 单元/ :/ 然后/ 通过/ 向/ 后/ 差分/ 求解/ 方程/ 的/ 有限/ 差分/ 近似值/ ,/ 其中/ ,/ / M/ 满足/ 如下/ 关系/ :/ 如果/ mx/ 或者/ my/ 由于/ 邻近/ 网格/ 的/ 势能/ 都/ 是/ 无穷/ 而/ 没有/ 定义/ ,/ 上述/ 方程/ 中/ 就/ 应该/ 去掉/ 该轴项/ ./ 在/ 计算/ 得到/ / M/ 后/ ,/ 即可/ 通过/ 其/ 与/ 相邻/ 网格/ 的/ 势差/ 求得/ 梯度/ / / ,/ 并/ 可/ 进一步/ 地/ 根据/ 梯度/ 求得/ 该点/ 的/ 速度/ 场/ 狏/ ,/ 而/ 在/ 使用/ 局部/ 避碰/ 算法/ 对/ 速度/ 狏/ 进行/ 校正/ 之后/ ,/ 就/ 可以/ 通过/ 对/ 速度/ 场/ 的/ 插值/ 来/ 更新/ 每/ 一个/ 人/ 的/ 位置/ ./ 鉴于/ 计算/ 动态/ 势能/ 场/ 需要/ 遍历/ 场景/ 的/ 每/ 一个/ 网格/ ,/ 当/ 场景/ 面积/ 比较/ 大/ 、/ 划分/ 的/ 网格/ 数/ 比较/ 多时/ ,/ 运算量/ 就/ 会/ 变得/ 非常/ 庞大/ ,/ 直接/ 影响/ 全局/ 规划/ 算法/ 的/ 运行/ 效率/ ,/ 而/ 考虑/ 到/ 人群/ 有/ 可能/ 只/ 集中/ 到/ 某/ 一/ 区域/ ,/ 在/ 其他/ 区域/ 分布/ 较/ 少/ ,/ 本文/ 首先/ 采用/ AABB/ 轴向/ 包围/ 盒法/ (/ 如图/ 4/ 所示/ )/ 来/ 确定/ 人群/ 的/ 分布/ 范围/ ,/ 然后/ 只/ 对/ 位于/ 包围/ 盒/ 内部/ 的/ 网格/ 执行/ 密度/ 场/ 和/ 速度/ 场/ 的/ 更新/ ,/ 而/ 对于/ 没有/ 人群/ 分布/ 的/ 网格/ (/ 区域/ A/ 、/ 区域/ B/ 和/ 区域/ C/ )/ 不再/ 进行/ 密度/ 场/ 和/ 速度/ 场/ 的/ 计算/ ,/ 这样/ 就/ 可以/ 在/ 一定/ 程度/ 上/ 降低/ 全局/ 规划/ 算法/ 的/ 计算/ 复杂性/ ,/ 以/ 保证/ 算法/ 的/ 实时性/ ./ 2.3/ 基于/ UIC/ 的/ 局部/ 避碰/ 算法/ 在/ 进行/ 2.2/ 节/ 的/ 处理/ 后/ ,/ 我们/ 可以/ 将/ 人群/ 看作/ 带有/ 密度/ 和/ 流动/ 速度/ 的/ 连续/ 流体/ ,/ 理论/ 上/ 在/ 该/ 模型/ 中/ 不会/ 出现/ 两个/ 人/ 相交/ 的/ 现象/ ;/ 当/ 两个/ 人/ 互相/ 靠近/ 时/ ,/ 密度/ 会/ 变得/ 非常/ 高/ ,/ 速度/ 方程/ 完全/ 由/ 平均速度/ 项/ 决定/ ,/ 这样/ 他们/ 之间/ 的/ 相对速度/ 就会/ 降为/ 零/ ./ 但/ 实际上/ ,/ 该/ 方法/ 只能/ 解决/ 网格/ 之间/ 的/ 人群/ 相交/ 问题/ ,/ 对于/ 在/ 同一/ 网格/ 内/ 的/ 两个/ 人/ 可能/ 发生/ 碰撞/ 的/ 问题/ 并/ 不能/ 很/ 好地解决/ ,/ 因此/ 该/ 方法/ 只/ 适合/ 仿真/ 中密度/ 人群/ ./ 当/ 人群/ 密度/ 非常/ 高时/ ,/ 场景/ 所/ 划分/ 的/ 一个/ 网格/ 单元/ 中/ 就/ 包含/ 了/ 很多/ 人/ ,/ 这时/ 需要/ 将/ 局部/ 避碰/ 算法/ 引入/ 到/ 连续/ 场中/ ,/ 从而/ 获得/ 一些/ 变量/ 的/ 约束条件/ ./ 本文/ 结合/ Narain/ 等/ 人/ [/ 2/ ]/ 的/ 方法/ ,/ 将/ 一种/ 可以/ 与/ 基于/ 流体/ 的/ 全局/ 规划/ 算法/ 相结合/ 的/ 基于/ UIC/ 的/ 局部/ 避碰/ 算法/ 引入/ 进来/ ,/ 从而/ 实现/ 大规模/ 人群/ 的/ 仿真/ ./ 有限/ 压缩性/ 规则/ (/ UIC/ )/ 在/ 宏观/ 上/ 能够/ 保证/ 个体/ 之间/ 不/ 发生/ 碰撞/ ./ 首先/ ,/ 我们/ 对/ 全局/ 场/ 进行/ 设置/ ,/ 用/ 连续/ 密度/ 场/ 和/ 速度/ 场来/ 表示/ 人群/ 的/ 状态/ 和/ 运动/ ./ 这是/ 一个/ 类似/ 于/ 流体/ 的/ 系统/ ,/ 但是/ ,/ 其/ 与/ 物理/ 流体/ 又/ 不/ 完全相同/ ./ 它/ 既/ 不是/ 完全/ 可压缩/ 的/ ,/ 因为/ 人群/ 不能/ 被/ 无/ 限度/ 地/ 压缩/ ;/ 也/ 不是/ 完全/ 不可/ 压缩/ 的/ ,/ 因为/ 人群/ 可以/ 轻易/ 地/ 聚集/ 或/ 分散/ 从而/ 改变/ 密度/ ./ 因此/ ,/ 可以/ 将/ 两者/ 结合/ 起来/ ,/ 把/ 人群/ 看做/ 一种/ 单向/ 不可/ 压缩/ 的/ 流体/ ,/ 也就是说/ 可/ 直接/ 对/ 人群/ 的/ 密度/ 设置/ 约束条件/ ,/ 防止/ 其/ 超过/ 最大/ 密度/ 值/ ρ/ M/ ./ 假设/ 个体/ 之间/ 距离/ 小到/ 一定/ 值后/ 就/ 不会/ 再/ 靠近/ ,/ 该/ 距离/ 即/ 为/ 人/ 与/ 人/ 之间/ 的/ 最小/ 距离/ ,/ 用/ dmin/ 表示/ ,/ 据此/ 可以/ 给出/ 人群/ 密度/ ρ/ M/ 为/ UIC/ 限制/ 规则/ :/ Page7/ 其中/ :/ ρ/ M/ 之间/ 相互/ 接近/ 的/ 程度/ ./ 根据/ 人群/ 模型/ 的/ 连续性/ ,/ 密度/ ρ/ 和/ 速度/ 狏/ 满足/ 连续/ 方程/ :/ 为了/ 确保/ 满足/ UIC/ 限制/ ,/ 我们/ 需对/ 期望/ 速度/ 狏/ ~/ 进行/ 校正/ ,/ 使得/ 密度/ ρ/ 保持/ 在/ 合适/ 的/ 范围/ 内/ ,/ 最终/ 的/ 校正/ 速度/ 狏/ 在/ 某种程度/ 上/ 接近/ 期望/ 速度/ 狏/ ~/ 并/ 能/ 维持/ UIC/ 限制/ 条件/ ,/ 具体方法/ 见/ 文献/ [/ 2/ ]/ ./ 假设/ 人群/ 都/ 尽量/ 以/ 最大/ 的/ 速度/ 向/ 他们/ 期望/ 的/ 方向/ 运动/ ,/ 同时/ 还要/ 避免/ 碰撞/ ,/ 那么/ 校正/ 速度/ 狏/ 的/ 选择/ 旨在/ 使/ 积分/ ∫/ ρ/ 狏/ ·/ 狏/ ~/ 最大化/ ,/ 当然/ 还要/ 满足/ 最大/ 运动/ 速度/ 狏/ / vmax/ 的/ 限制/ ./ 根据上述/ 条件/ ,/ 可以/ 得到/ 校正/ 速度/ 狏/ 的/ 最佳/ 形式/ :/ 其中/ ,/ “/ 压力/ ”/ p/ 满足/ 如下/ 条件/ :/ 在/ 式/ (/ 12/ )/ 、/ (/ 13/ )/ 中/ ,/ p/ 表示/ 人群/ 流中/ 存在/ 一个/ 非负/ 压力/ 项/ ,/ 其/ 用来/ 防止/ 人群/ 聚集/ 导致/ 密度/ 高于/ 最大值/ ρ/ M/ ./ 在/ 压力/ p/ 的/ 影响/ 下/ ,/ 个体/ 会/ 加强/ 对/ 速度/ 的/ 校正/ ,/ 以/ 获得/ 最大/ 允许/ 速度/ vmax/ ./ 式/ (/ 12/ )/ 也/ 可以/ 如式/ (/ 14/ )/ 表示/ :/ 直观/ 地说/ ,/ 压力/ 只有/ 在/ 密度/ 取/ 最大值/ 的/ 时候/ 才/ 出现/ ;/ 当/ 密度/ 小于/ 最大值/ 时/ ,/ 个体/ 不会/ 很/ 密集/ ,/ 相互之间/ 所/ 造成/ 的/ 影响/ 比较/ 小/ ,/ 人群/ 可以/ 比较/ 自由/ 地/ 流动/ ./ 使用/ UIC/ 规则/ 只能/ 确保/ 个体/ 之间/ 在/ 整体/ 上/ 保持/ 运动/ 速度/ 与/ 方向/ 的/ 一致性/ ,/ 为了/ 达到/ 更好/ 的/ 效果/ ,/ 我们/ 需要/ 在/ 每/ 对/ 独立/ 个体/ 之间/ 执行/ 最小/ 距离/ 规则/ ,/ 即/ 查找/ 出/ 每/ 对/ 距离/ 小于/ 一定/ 值/ 的/ 个体/ ,/ 将/ 他们/ 均匀/ 地/ 分开/ ./ 执行/ 最小/ 距离/ 规则/ 的/ 算法/ 过程/ 如图/ 5/ 所示/ ./ 2.4/ 算法/ 流程/ 如图/ 6/ 所示/ ,/ 将/ 全局/ 规划/ 与/ 局部/ 避碰/ 相结合/ ,/ 总结/ 人群/ 仿真/ 算法/ 的/ 实现/ 步骤/ 如下/ :/ (/ 1/ )/ 在/ 每个/ 时间/ 步长/ 的/ 开始/ ,/ 已知/ 每个/ 个体/ 的/ 位置/ 狓/ i/ ,/ 根据/ 人群/ 分布/ 计算/ AABB/ 包围/ 盒/ 从而/ 确定/ 网格/ 更新/ 范围/ ;/ (/ 2/ )/ 执行/ 全局/ 规划/ 算法/ ,/ 将/ 离散/ 的/ 人群/ 转化/ 为/ 密度/ 场/ 表示/ ;/ (/ 3/ )/ 对/ 每组/ 人群/ ,/ 构建/ 相应/ 的/ 单位/ 消耗/ 场/ ,/ 并/ 计算/ 动态/ 势能/ 场/ 及其/ 梯度/ ,/ 从而/ 计算速度/ 场/ ;/ (/ 4/ )/ 利用/ 基于/ UIC/ 的/ 局部/ 避碰/ 算法/ ,/ 计算/ 校正/ 速度/ 场/ ;/ (/ 5/ )/ 获得/ 每个/ 个体/ 的/ 实际/ 速度/ ,/ 并/ 进行/ 下/ 一时间/ 步长/ 位置/ 的/ 更新/ ;/ (/ 6/ )/ 最后/ ,/ 对/ 更新/ 的/ 位置/ 执行/ 两/ 两/ 最小/ 距离/ 限制/ ,/ 从而/ 避免/ 个体/ 之间/ 的/ 碰撞/ ./ 3/ 人群/ 仿真/ 算法/ 在/ GPU/ 上/ 的/ 扩展/ 本文/ 采用/ 的/ 全局/ 规划/ 算法/ 是/ 基于/ 连续/ 流体/ 的/ 方法/ ,/ 这种/ 基于/ 空间/ 网格/ 计算/ 的/ 方法/ 特别/ 适合/ 模拟/ 大量/ 个体/ ./ 整个/ 环境/ 由/ 一个/ 消耗/ 函数/ 来/ 表示/ ,/ 该/ 函数/ 通过/ eikonal/ 方程/ 来/ 计算/ 从/ 任何/ 位置/ 到/ 目标/ 位置/ 的/ 剩余/ 势能/ ./ 沿着/ 这个/ 势能/ 场/ 的/ 梯度/ 前进/ ,/ 就/ 能/ 确保/ 人群/ 沿着/ 最/ 短路/ 径向/ 目的地/ 移动/ ./ 虽然/ 该/ 方法/ 为/ 每/ 一组/ 人群/ 只/ 规划/ 一次/ 路线/ ,/ 能够/ 节约/ 计算资源/ ,/ 但是/ 其/ 在/ 每/ 一步/ 都/ 进行/ 密度/ 场/ 和/ 速度/ 场/ 的/ 计算/ ,/ 运算量/ 还是/ 很大/ 的/ ,/ 当/ 人群/ 数目/ 不断/ 增多/ 时/ ,/ 还是/ 会/ 影响/ 算法/ 的/ 实时性/ ./ 因此/ ,/ 本节/ 将/ 高/ Page8/ 图/ 6/ 基于/ 连续/ 流体/ 模型/ 和/ 动力学/ 仿真/ 模型/ 的/ 密度/ 人群/ 仿真/ 算法/ 在/ GPU/ [/ 23/ ]/ 上/ 进行/ 扩展/ ,/ 从而/ 进一步提高/ 算法/ 的/ 效率/ ./ 3.1/ 基于/ GPU/ 的/ 快速/ 迭代法/ 在/ 2.2/ 节/ 提到/ 的/ 所谓/ eikonal/ 方程/ ,/ 是/ 一个/ 非线性/ 的/ 偏/ 微分方程/ ,/ 可以/ 表示/ 如下/ :/ H/ (/ 狓/ ,/ / 狓/ )/ =/ / / (/ 狓/ )/ 2/ -/ 其中/ :/ Ω/ 表示/ 所在/ 的/ n/ 维空间/ ;/ / (/ 狓/ )/ 表示/ 到/ 目标/ 点/ 所/ 需要/ 经历/ 的/ 时间/ 或者/ 距离/ ,/ 而/ f/ (/ x/ )/ 表示/ 速度/ 函数/ ./ 在/ 2.2/ 节中/ ,/ 我们/ 所/ 采用/ 的/ 解/ eikonal/ 方程/ 的/ 方法/ 是/ 快速/ 行进/ 法/ ,/ 但是/ 该/ 方法/ 并/ 不/ 适合/ 于/ 并行处理/ ,/ 这/ 就/ 会/ 影响/ 算法/ 的/ 运行/ 效率/ ./ 本节/ 为了/ 提高/ 人群/ 仿真/ 算法/ 的/ 实时性/ ,/ 采用/ 快速/ 迭代法/ [/ 24/ -/ 25/ ]/ 在/ GPU/ 架构/ 中/ 求解/ eikonal/ 方程/ ./ 这里/ 首先/ 介绍/ GPU/ 架构/ ,/ 以便/ 更好/ 地/ 阐述/ 快速/ 迭代法/ 的/ 特点/ ./ CUDA/ 是/ 由/ 著名/ 显卡/ 厂商/ NVIDIA/ 公司/ 提出/ 的/ 一种/ 基于/ GPU/ 通用/ 并行计算/ 的/ 架构/ ①/ ,/ 它/ 利用/ GPU/ 的/ 处理/ 能力/ ,/ 通过/ 并行计算/ 来/ 大幅/ 提升/ 计算/ 性能/ ./ 在/ CUDA/ 推出/ 之前/ ,/ GPU/ 的/ 并行计算/ 一直/ 受限于/ 图形/ API/ 的/ 着色/ 模型/ ,/ 只有/ 符合/ 顶点/ 着色器/ 和/ 片元/ 着色器/ 属性/ 的/ 问题/ 才能/ 利用/ GPU/ 去/ 并行处理/ ./ 为了/ 让/ GPU/ 并行计算/ 变得/ 更加/ 简单/ 实用/ ,/ NVIDIA/ 公司/ 以/ C语言/ 为/ 基础/ ,/ 对/ 其/ 架构/ 进行/ 了/ 一些/ 扩展/ 和/ 两项/ 改进/ ,/ 让/ 开发者/ 能够/ 根据/ CPU/ 和/ GPU/ 的/ 架构/ 分配/ 代码/ 和/ 数据/ ./ 在/ 支持/ CUDA/ 的/ GPU/ 架构/ 下/ ,/ 一个/ 程序/ 可以/ 分成/ 两个/ 部分/ :/ 主机/ 端/ (/ host/ )/ 和/ 设备/ 端/ (/ device/ )/ ./ 在/ CPU/ 上/ 运行/ 的/ 部分/ 即/ 为/ 主机/ 端/ ,/ 而/ 在/ GPU/ 上/ 运行/ 的/ 部分/ 即/ 为/ 设备/ 端/ ,/ 设备/ 端/ 又/ 可/ 被/ 称为/ “/ Kernel/ (/ 内核/ 函数/ )/ ”/ ./ 通常/ 显卡/ 内存/ 中/ 的/ 数据/ 由/ 主机/ 端/ 程序/ 复制/ 提供/ ,/ 经由/ GPU/ 执行/ Kernel/ 对/ 数据处理/ 完成/ 后/ ,/ 再/ 由/ 主机/ 端/ 程序/ 将/ 其/ 取回/ ./ 以/ 并行计算/ 为/ 核心思想/ 的/ CUDA/ 技术/ 将/ GPU/ 视为/ 一个/ 协处理器/ ,/ 通过/ 对/ 线程/ (/ Thread/ )/ 这一/ 基本/ 单元/ 的/ 分配/ 和/ 管理/ 来/ 实现/ 并行计算/ ,/ 其中/ ,/ 线程/ 内部/ 的/ 代码/ 按/ 顺序/ 执行/ ,/ 而/ 各/ 线程/ 之间/ 的/ 代码/ 按/ 并行执行/ ./ 共享/ 同一/ 存储空间/ 协助/ 完成/ 计算/ 的/ 多个/ 线程/ 组成/ 一个/ 线程/ 块/ (/ ThreadBlock/ )/ ,/ 大小/ 相同/ 且/ 相互/ 独立/ 的/ 一组/ 线程/ 块/ 可/ 构成/ 一个/ Kernel/ ,/ 其中/ ,/ 各/ 线程/ 块/ 也/ 按/ 并行执行/ ./ CUDA/ 执行/ 时/ ,/ 将/ Kernel/ 函数/ 设计/ 成可/ 并行处理/ 的/ 数据/ ,/ 并/ 由/ 主机/ 端/ 发送到/ GPU/ 上/ 的/ Grid/ (/ 网格/ )/ 上/ 执行/ ,/ 其中/ ,/ 每个/ Grid/ 由/ 若干个/ Block/ 组成/ ,/ 而/ 每个/ Block/ 又/ 可以/ 执行/ 多个/ 线程/ ./ CUDA/ 架构/ 的/ 基本原理/ 如图/ 7/ 所示/ ./ 区别/ 于/ 传统/ 的/ GPU/ 顺序/ 处理/ 流程/ “/ 顶点/ 处理器/ 操作/ 顶点/ 属性/ 变量/ —/ —/ —/ 片元/ 处理器/ 处理/ 片元及/ 相关/ 数据/ —/ —/ —/ 像素/ 操作/ 输出/ 结果/ ”/ ,/ 支持/ CUDA/ 的/ GPU/ 引入/ 了/ 流式/ 多处理器/ (/ SM/ )/ ,/ 大大提高/ 了/ CUDA/ 的/ 并行计算/ 能力/ ,/ 例如/ ,/ GTX295/ 中/ 包含/ 了/ 60/ 个/ SM/ ,/ 每个/ SM/ 中/ 又/ 包含/ 8/ 个流/ 处理器/ (/ SP/ )/ ,/ 每个/ SP/ 处理/ 执行/ 一个/ 线程/ ,/ 一个/ Block/ 单元/ 必须/ 分配/ 到/ 同一个/ SM/ 中/ ,/ 它/ 是/ 一种/ 单指令/ 多/ 数据/ (/ SIMD/ )/ 的/ 执行/ 方式/ ./ 这种/ 执行/ 方式/ 是/ CUDA/ 高速/ 运算/ 的/ 基础/ ,/ 同时/ 由于/ SM/ 还/ 拥有/ 片内/ 共享存储器/ ,/ 因此/ 可/ 降低/ 片外/ 访问/ 延迟/ ./ 快速/ 迭代法/ 是/ Jeong/ 等/ 人/ [/ 24/ ]/ 通过/ 对/ Rouy/ 等/ 人/ [/ 21/ ]/ 提出/ 的/ 迭代/ 算法/ 和/ Sethian/ [/ 22/ ]/ 提出/ 的/ 快速/ 行进/ ①/ NVIDIACorporation/ ./ NVIDIACUDAComputeUnifiedPage9/ 图/ 7CUDA/ 架构/ 基本原理/ 图法/ (/ FMM/ )/ 进行/ 分析/ 而/ 开发/ 出来/ 的/ 求解/ eikonal/ 方程/ 的/ 方法/ ./ 快速/ 迭代法/ 整体/ 运算/ 性能/ 好/ ,/ 适合/ 并行/ 扩展/ ,/ 主要/ 具有/ 如下/ 特点/ :/ (/ 1/ )/ 算法/ 不/ 设置/ 特定/ 的/ 更新/ 顺序/ ;/ (/ 2/ )/ 算法/ 不/ 需要/ 另外/ 使用/ 一个/ 数据结构/ 来/ 进行/ 分类/ 排序/ ;/ (/ 3/ )/ 算法/ 能够/ 同时/ 更新/ 多个/ 网格/ 点/ ./ 与/ 快速/ 行进/ 法/ 不同/ ,/ 快速/ 迭代法/ (/ FastIterativeMethod/ )/ 不/ 需要/ 建立/ 一个/ 复杂/ 的/ 数据结构/ 来/ 保存/ 所有/ 网格/ 的/ 信息/ ,/ 而是/ 通过/ 建立/ 一个/ 激活/ 列表/ 来/ 保存/ 需要/ 被/ 更新/ 的/ 网格/ 点/ ./ 每次/ 迭代/ ,/ 都/ 对/ 激活/ 列表/ 进行/ 扩展/ ,/ 并/ 同时/ 更新/ 所有/ 受/ 影响/ 的/ 网格/ 点/ ./ 本文/ 通过/ 逆向/ 差分/ 方法/ 求解/ 当前/ 网格/ 势能/ 的/ 局部/ 近似值/ ,/ 当/ 势能/ 收敛/ 时/ 就/ 将/ 该/ 网格/ 点/ 从/ 激活/ 列表/ 中/ 移除/ ./ 势能/ 收敛/ 的/ 判断/ 方法/ 为/ 计算/ 当前/ 势能/ 值/ 与/ 之前/ 势能/ 估计值/ 的/ 差/ ,/ 判断/ 其/ 是否/ 在/ 固定/ 的/ 阀值/ ε/ 内/ ./ 与/ 快速/ 行进/ 法/ 类似/ ,/ 采用/ Godunov/ 逆向/ 差分/ 方法/ ,/ 通过/ 式/ (/ 16/ )/ 来/ 估算/ 该/ 网格/ 的/ 势能/ 值/ :/ [/ (/ Ui/ ,/ j/ -/ U/ 其中/ :/ UUi/ ,/ j/ +/ 1/ )/ ,/ (/ x/ )/ +/ =/ max/ (/ x/ ,/ 0/ )/ ,/ Uij/ 表示/ 网格/ (/ i/ ,/ j/ )/ 处/ 势能/ 的/ 离散/ 估计值/ ./ 3.2/ 快速/ 迭代法/ 的/ 流程/ 与/ 实现/ 快速/ 迭代法/ 包括/ 以下/ 两个/ 部分/ :/ (/ 1/ )/ 初始化/ ./ 设置/ 网格/ 的/ 边界条件/ 和/ 初始值/ ,/ 将/ 目标/ 网格/ 的/ 每/ 一/ 相邻/ 网格/ 加入/ 激活/ 列表/ L/ ,/ 而/ 将/ 其他/ 网格/ 点/ 的/ 值/ 设为/ ;/ (/ 2/ )/ 更新/ ./ 对/ 激活/ 列表/ L/ 中/ 的/ 每个/ 网格/ x/ ∈/ L/ ,/ 根据/ 式/ (/ 16/ )/ 计算/ 新/ 的/ 势能/ 值/ Ux/ ,/ 并/ 与/ 原来/ 的/ 值/ 进行/ 比较/ 以/ 判断/ 其/ 是否/ 收敛/ ;/ 若/ 收敛/ ,/ 则/ 将/ 该/ 网格/ 所有/ 不/ 在/ 激活/ 列表/ L/ 中/ 并且/ 未/ 收敛/ 的/ 相邻/ 网格/ 加入/ 到/ 激活/ 列表/ L/ 中/ ,/ 然后/ 将/ 该/ 网格/ 从/ 激活/ 列表/ L/ 中/ 移除/ ;/ 为了/ 保证/ 新/ 加入/ 激活/ 列表/ L/ 的/ 网格/ 能够/ 在/ 下/ 一次/ 迭代/ 中/ 得到/ 更新/ ,/ 本文/ 使用/ 双向/ 链表/ 来/ 表示/ 激活/ 列表/ L/ ./ 重复/ 更新/ 步骤/ ,/ 直到/ 激活/ 列表/ L/ 为空/ ./ 快速/ 迭代法/ 中/ 的/ 更新/ 算法/ 可用/ 伪/ 代码/ 形式/ 描述/ ,/ 具体步骤/ 请/ 参见/ 算法/ 2/ ./ 算法/ 2/ ./ 更新/ 算法/ Update/ (/ X/ )/ ./ 输入/ :/ 网格/ 集合/ X/ ,/ 激活/ 列表/ L/ 输出/ :/ 各/ 网格/ 收敛/ 的/ 势能/ 值/ 1/ ./ Initialization/ (/ X/ :/ gridpoints/ ,/ L/ :/ activelist/ )/ :/ 2/ ./ foreachxinXdoPage103/ ./ ifxissource4/ ./ 5.6/ ./ end7/ ./ foreachxinXdo8/ ./ ifanyneighborofxissource9/ ./ 10/ ./ end11/ ./ UpdategridpointsinL/ :/ 12/ ./ whileLisnotempty13/ ./ foreachxinLdo14/ ./ 15.16/ ./ 17.18/ ./ 19.20/ ./ 21.22/ ./ 23.24/ ./ 图/ 8/ 快速/ 迭代法/ (/ 1/ )/ 当/ 特征/ 路径/ 的/ 方向/ 与/ 窄带/ 推进/ 的/ 方向/ 之间/ 的/ 夹角/ 小于/ 45/ °/ 时/ ,/ 与/ 快速/ 扫描/ 法/ [/ 26/ ]/ 的/ 原理/ 类似/ ,/ 只/ 进行/ 一次/ 更新/ ,/ 激活/ 列表/ 中/ 网格/ 的/ 势能/ 值/ 就/ 不再/ 改变/ ,/ 也就是说/ ,/ 更新/ 一次/ 后/ ,/ 激活/ 列表/ 中/ 网格/ 的/ 势能/ 值/ 已/ 收敛/ ,/ 窄带/ 可/ 向/ 其一/ 阶/ 邻居/ 网格/ 推进/ ;/ (/ 2/ )/ 当/ 特征/ 路径/ 的/ 方向/ 与/ 窄带/ 推进/ 的/ 方向/ 之间/ 的/ 夹角/ 大于/ 45/ °/ 时/ ,/ 对于/ 特征/ 路径/ 的/ 方向/ 发生/ 改变/ 的/ 网格/ ,/ 其/ 势能/ 值/ 起初/ 会/ 由于/ 使用/ 错误/ 的/ 迎风/ 相邻/ 网格/ 计算/ 而/ 导致/ 需要/ 在/ 后续/ 的/ 迭代/ 中/ 对/ 其/ 进行/ 修正/ ,/ 因此/ ,/ 该/ 网格/ 不会/ 从/ 激活/ 列表/ 中/ 移除/ 直到/ 其/ 更新/ 至/ 正确/ 的/ 势能/ 值/ ./ 也就是说/ ,/ 即使/ 特征/ 路径/ 的/ 方向/ 改变/ 使得/ 窄带/ 范围/ 增大/ ,/ 波前/ 扩展/ 将/ 势能/ 值本/ 已/ 收敛/ 25.26/ ./ 27.28/ ./ 29.30/ ./ end31/ ./ end/ 图/ 8/ 显示/ 了/ 快速/ 迭代法/ 的/ 二维/ 迭代/ 过程/ ./ 左下角/ 的/ 网格/ 为/ 起始/ 点/ ,/ 黑色/ 网格/ 表示/ 已/ 计算/ 过/ 势能/ 的/ 网格/ ,/ 灰色/ 网格/ 表示/ 处于/ 激活/ 列表/ 中/ 的/ 网格/ ,/ 黑色/ 箭头/ 表示/ 窄带/ 的/ 推进/ 方向/ ./ 图/ 8/ (/ a/ )/ 是/ 初始状态/ ,/ 图/ 8/ (/ b/ )/ 是/ 第/ 1/ 次/ 更新/ 后/ 的/ 状态/ ,/ 图/ 8/ (/ c/ )/ 是/ 第/ 2/ 次/ 更新/ 后/ 的/ 状态/ ./ 灰色/ 网格/ 的/ 势能/ 值/ 只能/ 由/ 相邻/ 的/ 黑色/ 网格/ 决定/ ,/ 因此/ 激活/ 列表/ 中/ 所有/ 的/ 灰色/ 网格/ 都/ 能/ 同时/ 进行/ 势能/ 值/ 的/ 更新/ ./ 快速/ 迭代法/ 虽然/ 为/ 迭代/ 算法/ ,/ 即会/ 一直/ 更新/ 激活/ 列表/ 中/ 的/ 网格/ 直到/ 其/ 收敛/ 为止/ ./ 但/ 在/ 大多数/ 情况/ 下/ ,/ 网格/ 只/ 需要/ 迭代/ 一次/ 就/ 能/ 获得/ 收敛/ 的/ 势能/ 值/ ./ 为了/ 更/ 清晰/ 地/ 说明/ 该/ 现象/ ,/ 本文/ 进行/ 如下/ 分析/ :/ 首先/ ,/ 定义/ 特征/ 路径/ 为/ 从/ 某/ 一/ 网格/ 到/ 另/ 一/ 网格/ 的/ 最优/ 轨迹/ ;/ 然后/ 根据/ 特征/ 路径/ 与/ 窄带/ 推进/ 的/ 方向/ 夹角/ ,/ 从/ 两/ 方面/ 进行/ 讨论/ ./ 的/ 网格/ 重新/ 放入/ 激活/ 列表/ 中/ ,/ 也/ 会/ 由于/ 新/ 信息/ 的/ 扩展/ 而/ 计算/ 得出/ 该/ 网格/ 正确/ 的/ 势能/ 值/ ./ 因此/ ,/ 即便/ 在/ 最坏/ 的/ 情况/ 下/ ,/ 快速/ 迭代法/ 的/ 性能/ 也/ 是/ 次优/ 的/ ./ Jeong/ 通过/ 实验/ 表明/ :/ 快速/ 迭代法/ 的/ 运行/ 时间/ 一般/ 仅为/ 快速/ 行进/ 法/ 的/ 一半/ ./ 4/ 仿真/ 结果/ 本文/ 的/ 硬件/ 实验/ 平台/ 为/ 一台/ PC/ 电脑/ ,/ CPU/ 为/ Core/ 双核/ E8400/ ,/ 主频/ 为/ 3.0/ GHz/ ,/ 内存/ 为/ 4GB/ ,/ 显卡/ 为/ NVIDIAGeforce9800GT/ ./ 本文/ 设计/ 的/ 全部/ 实验/ 场景/ 主要/ 采用/ Unity3D/ 引擎/ 搭建/ ,/ 算法/ 由/ C#/ 语/ Page11/ 言/ 加以/ 实现/ ./ 在/ 本文/ 实现/ 的/ 全局/ 规划/ 算法/ 中/ ,/ 为了/ 计算/ 单位/ 消耗/ 场/ ,/ 我们/ 设定/ 路径/ 长度/ 、/ 时间/ 和/ 不/ 适度/ 的/ 权值/ 分别/ 为/ α/ =/ 1/ 、/ β/ =/ 1/ 、/ γ/ =/ 1/ ./ 本文/ 构建/ 的/ 高密度/ 虚拟/ 人群/ 仿真/ 界面/ 如图/ 9/ 所示/ ,/ 用户/ 在/ 进入/ 每个/ 场景/ 之前/ ,/ 可以/ 对/ 人群/ 参数/ 进行/ 图/ 9/ 主/ 菜单/ 与/ 人群/ 设置/ 界面/ 图/ 10/ 显示/ 了/ 单组/ 人群/ 向/ 同一/ 目标/ 点/ 行进/ 的/ 过程/ ,/ 其中/ ,/ 用户/ 设置/ 的/ 人群/ 数量/ 为/ 12/ 人/ ,/ 个体/ 半径/ 为/ 0.15/ m/ ,/ 最小/ 距离/ 为/ 0.4/ m/ ,/ 最大/ 速度/ 为/ 1.2/ m/ // s/ ;/ 根据/ 场景/ 的/ 大小/ 和/ 人群/ 的/ 数量/ ,/ 用户/ 将/ 场景/ 划分/ 为/ 14/ ×/ 10/ 的/ 网格/ ./ 图/ 10/ (/ a/ )/ 显示/ 了/ 人群/ 的/ 初始状态/ ,/ 即将/ 人群/ 的/ 初始/ 位置/ 和/ 目标/ 点/ (/ 显示/ 为/ 黑色/ 立方体/ )/ 设置/ 完成/ ,/ 并/ 在/ 初始/ 位置/ 绘制/ 人群/ ,/ 显示/ 为/ 白色/ 圆柱体/ ;/ 在/ 图/ 10/ (/ b/ )/ 中/ ,/ 人群/ 聚集/ 到/ 一起/ 并/ 向/ 同一/ 目标/ 点图/ 10/ 单组/ 人群/ 向/ 同一/ 目标/ 运动/ (/ 右侧/ 黑色/ 立方体/ 为/ 目标/ 位置/ )/ 设置/ ,/ 主要/ 包括/ 虚拟/ 人群/ 的/ 数量/ ,/ 个体/ 的/ 半径/ ,/ 个体/ 之间/ 的/ 最小/ 距离/ ,/ 个体/ 的/ 最大/ 运动/ 速度/ ;/ 同时/ 也/ 可以/ 对/ 场景/ 网格/ 进行/ 设置/ ,/ 包括/ 网格/ 的/ 单位/ 长度/ 和/ X/ 轴/ 、/ Y/ 轴/ 方向/ 的/ 网格/ 数/ ./ 设置/ 完成/ 之后/ ,/ 用户/ 可以/ 根据/ 自己/ 的/ 意愿/ ,/ 模拟/ 不同/ 场景/ 下/ 、/ 不同/ 数量/ 的/ 虚拟/ 人群/ 运动/ ./ 运动/ ,/ 在/ 运动/ 的/ 过程/ 中/ 个体/ 之间/ 没有/ 发生/ 碰撞/ ;/ 图/ 10/ (/ c/ )/ 显示/ 了/ 人群/ 即将/ 到达/ 目标/ 点/ 的/ 情形/ ,/ 这里/ 有/ 必要/ 强调/ 的/ 是/ 为了/ 防止/ 人群/ 最后/ 全部/ 集中/ 在/ 目标/ 点上/ ,/ 本文/ 允许/ 先/ 到达/ 目标/ 点/ 的/ 个体/ 先行/ 离开/ ;/ 与/ 图/ 10/ (/ b/ )/ 相比/ ,/ 在/ 图/ 10/ (/ d/ )/ 中/ ,/ 由于/ 未/ 使用/ 最小/ 距离/ 规则/ 限制/ ,/ 可以/ 看出/ 在/ 同一/ 网格/ 的/ 内部/ ,/ 个体/ 相互/ 重叠/ 在/ 一起/ ,/ 发生/ 了/ 碰撞/ ,/ 这/ 与/ 现实生活/ 中/ 的/ 人群/ 运动/ 严重/ 不符/ ./ Page12/ 图/ 11/ 和/ 图/ 12/ 为/ 某/ 一/ 时刻/ 检测/ 到/ 的/ 人群/ 密度/ 场/ 和/ 速度/ 场/ 的/ 分布/ ,/ 其中/ ,/ 为了/ 更/ 清晰/ 地/ 体现/ 密度/ 场/ 和/ 速度/ 场/ 的/ 特性/ ,/ 用户/ 同样/ 将/ 场景/ 划分/ 为/ 14/ ×/ 10/ 的/ 网格/ ./ 从图/ 中/ 可以/ 看出/ ,/ 每个/ 人/ 只/ 对/ 其/ 相邻/ 网格/ 的/ 密度/ 产生/ 影响/ (/ 可/ 参见/ 图/ 4/ ,/ 相邻/ 网格/ 在/ 二维/ 平面/ 中即/ 指其上/ 、/ 下/ 、/ 左/ 、/ 右/ 4/ 个/ 网格/ )/ ,/ 而/ 对/ 其他/ 网格/ 密度/ 的/ 影图/ 11/ 某一/ 时刻/ 的/ 人群/ 密度/ 场图/ 12/ 某一/ 时刻/ x/ 轴/ 方向/ 的/ 速度/ 场图/ 13/ 显示/ 了/ 两组/ 人群/ 在/ 无/ 障碍物/ 的/ 场景/ 中/ 交汇/ 的/ 情形/ ,/ 其中/ ,/ 为了/ 便于/ 区分/ ,/ 将/ 一组/ 人群/ 显示/ 为/ 白色/ ,/ 而/ 将/ 另一组/ 人群/ 显示/ 为/ 黑色/ ,/ 每组/ 人群/ 的/ 数目/ 均/ 为/ 120/ 人/ ./ 在/ 图/ 13/ (/ a/ )/ 中/ ,/ 两组/ 人群/ 由/ 初始/ 位置/ 分别/ 向/ 对方/ 所在/ 的/ 位置/ ,/ 也/ 就是/ 其/ 目标/ 点/ 运动/ ;/ 在/ 图/ 13/ (/ b/ )/ 中/ ,/ 每组/ 人群/ 以/ 尽可能/ 大/ 的/ 速度/ 运动/ ;/ 当/ 发现自己/ 即将/ 与/ 对面/ 的/ 人群/ 发生/ 碰撞/ 导致/ 不/ 适度/ 升高/ 时/ ,/ 两组/ 人群/ 会/ 重新/ 计算/ 密度/ 场/ 和/ 最大/ 速度/ 场/ ,/ 从而/ 改变/ 运动/ 方向/ 来/ 避免/ 碰撞/ 的/ 发生/ ,/ 如图/ 13/ (/ c/ )/ 、/ (/ d/ )/ 所示/ ;/ 在/ 成功/ 避免/ 碰撞/ 后/ ,/ 两组/ 人群/ 重新/ 以/ 最大/ 速度/ 向/ 目标/ 点/ 前进/ ,/ 如图/ 13/ (/ e/ )/ 所示/ ;/ 最终/ ,/ 两组/ 人群/ 成功/ 到达/ 目标/ 点/ ,/ 如图/ 13/ (/ f/ )/ 所示/ ./ 图/ 14/ 显示/ 了/ 虚拟/ 人群/ 及其/ 所在/ 场景/ 的/ 三维/ 效果图/ ,/ 其中/ ,/ 静态/ 障碍物/ 用/ 正方体/ 表示/ ,/ 4/ 组/ 人群/ 用/ 圆柱体/ 表示/ ./ 每组/ 人群/ 数量/ 均/ 为/ 25/ 人/ ,/ 拥有/ 相同/ 的/ 目标/ ./ 图/ 15/ 显示/ 了/ 4/ 组/ 人群/ 在/ 有/ 障碍物/ 的/ 场景/ 中/ 交汇/ 的/ 二维/ 效果图/ ,/ 其中/ ,/ 4/ 组/ 人群/ 用/ 不同/ 灰度/ 区别/ ./ 图/ 15/ (/ a/ )/ 显示/ 了/ 4/ 组/ 人群/ 的/ 初始状态/ ,/ 即/ 每组/ 人群/ 都/ 在/ 初始/ 位置/ 准备/ 向/ 各自/ 的/ 目标/ 点/ —/ —/ —/ 对角线/ 位置/ 运动/ ;/ 在/ 图/ 15/ (/ b/ )/ 中/ ,/ 4/ 组/ 人群/ 分别/ 以/ 最大/ 速度/ 向/ 目响/ 可/ 忽略不计/ ./ 进一步/ 地/ ,/ 速度/ 场/ 是/ 在/ 计算/ 动态/ 势能/ 场/ 及其/ 梯度/ 后/ ,/ 根据/ 式/ (/ 7/ )/ 计算/ 得到/ 的/ ,/ 速度/ 场/ 受到/ 人群/ 密度/ 场/ 的/ 影响/ ,/ 即/ 在/ 低密度/ 区域/ ,/ 速度/ 在/ 平面/ 上/ 保持/ 常量/ ;/ 而/ 在/ 高密度/ 区域/ ,/ 速度/ 则/ 取决于/ 附近/ 人群/ 的/ 流动/ ,/ 即/ 逆流/ 时/ 速度/ 会/ 受到/ 抑制/ ,/ 而/ 顺流/ 时则/ 无/ 影响/ ./ 标点/ 运动/ ;/ 在/ 图/ 15/ (/ c/ )/ 、/ (/ d/ )/ 中/ ,/ 当/ 靠近/ 静态/ 障碍物/ 时/ ,/ 由于/ 不/ 适度/ 升高/ ,/ 4/ 组/ 人群/ 在/ 重算/ 速度/ 场后/ ,/ 采用/ 改变/ 运动/ 方向/ 的/ 方式/ 成功/ 躲避/ 静态/ 障碍物/ ;/ 图/ 15/ (/ e/ )/ 和/ (/ f/ )/ 显示/ 了/ 4/ 组/ 人群/ 交汇/ 的/ 过程/ ,/ 为了/ 保证/ 人群/ 之间/ 不/ 发生/ 碰撞/ ,/ 本文/ 在/ 每/ 一时间/ 步/ 都/ 计算/ 密度/ 场/ ,/ 构建/ 单位/ 消耗/ 场/ ,/ 从而/ 计算速度/ 场/ ,/ 并/ 采用/ UIC/ 规则/ 对/ 速度/ 场/ 进行/ 校正/ ;/ 图/ 15/ (/ g/ )/ 显示/ 了/ 4/ 组/ 人群/ 成功/ 避碰后/ ,/ 继续/ 向/ 目标/ 点/ 运动/ 的/ 过程/ ;/ 图/ 15/ (/ h/ )/ 显示/ 了/ 4/ 组/ 人群/ 最终/ 顺利/ 到达/ 目标/ 点/ 的/ 情形/ ./ 从/ 以上/ 的/ 仿真/ 过程/ 可以/ 看出/ ,/ 本文/ 采用/ 的/ 基于/ 连续/ 流体/ 模型/ 和/ 动力学/ 仿真/ 模型/ 的/ 高密度/ 人群/ 仿真/ 算法/ 能够/ 很/ 好/ 地/ 完成/ 对/ 同一/ 目标/ 、/ 指定/ 目标/ 、/ 躲避/ 障碍物/ 、/ 多组/ 人群/ 交汇/ 等/ 不同/ 情况/ 的/ 模拟/ ,/ 适用/ 于/ 仿真/ 各种/ 人群/ 的/ 运动/ 场景/ ;/ 同时/ 由于/ 引入/ UIC/ 限制/ 条件/ 和/ 使用/ 最小/ 距离/ 规则/ ,/ 算法/ 能够/ 很/ 好/ 地/ 仿真/ 个体/ 之间/ 的/ 避/ 碰/ 行为/ ;/ 进一步/ 地/ ,/ 本文/ 提出/ 的/ 高密度/ 人群/ 仿真/ 算法/ 还/ 允许/ 用户/ 对/ 人群/ 参数/ 和/ 场景/ 参数/ 进行/ 设置/ ,/ 也就是说/ ,/ 虚拟/ 人群/ 既/ 可以/ 自主运动/ ,/ 也/ 可以/ 根据/ 用户/ 的/ 意愿/ 进行/ 运动/ ./ 因此/ ,/ 本文/ 提出/ 的/ 虚拟/ 人群/ 仿真/ 算法/ 适合/ 于/ 模拟/ 高密度/ 环境/ 下/ 的/ 人群/ 运动/ ./ Page13/ 图/ 13/ 两组/ 人群/ 的/ 交汇/ 过程/ Page14/ 图/ 144/ 组/ 人群/ 交汇/ 的/ 三维/ 场景/ 如图/ 16/ 所示/ ,/ Unity3D/ 引擎/ 能够/ 实时/ 地/ 检测/ 场景/ 的/ 一些/ 状态/ ,/ 包括/ 帧/ 数/ 、/ 占用/ 的/ 线程/ 数/ 、/ 内存/ 以及/ 纹理/ 等/ 信息/ ./ 实验/ 中/ 的/ 所有/ 个体/ 都/ 由/ Unity/ 内部/ 提供/ 的/ 三维/ 圆柱体/ 表示/ ,/ 势必会/ 占用/ 一定/ 的/ 资源/ ,/ 而且/ 算法/ 整体/ 上/ 计算/ 量/ 非常/ 庞大/ ,/ 从表/ 1/ 即可/ 看出/ ,/ 当/ 人数/ 增加/ 至/ 200/ 人时/ ,/ 算法/ 的/ 运行/ 效率/ 急剧下降/ ,/ 帧/ 速仅/ 有/ 1.8/ fps/ ,/ 难以达到/ 实时/ 的/ 效果/ ./ 引入/ GPU/ 加速/ 算法/ 后/ ,/ 由于/ GPU/ 采用/ 高度/ 并行/ 化/ 的/ SIMD/ 多处理器/ 架构/ ,/ 同一/ 指令/ 可/ 由/ 多个/ 流/ 处理器/ 的/ 执行/ 单元/ 同时/ 执行/ ,/ 因此/ ,/ 与/ 在/ CPU/ 上/ 执行/ 的/ 快速/ 行进/ 法/ (/ FMM/ )/ 相比/ ,/ 在/ GPU/ 上/ 执行/ 的/ 快速/ 迭代法/ (/ FIM/ )/ 速度/ 提高/ 了/ 很多/ ,/ 从表/ 2/ 即可/ 看出/ ,/ 网格/ 数为/ 32/ ×/ 32/ ,/ 原本/ 需要/ 70ms/ 的/ 计算/ 缩短/ 到/ 13.6/ ms/ 就/ 能/ 解决/ ,/ 而/ 网格/ 数为/ 256/ ×/ 256/ ,/ 原本/ 需要/ 140ms/ 的/ 计算/ 缩短/ 到/ 18.3/ ms/ 就/ 能/ 解决/ ,/ 加速/ 效果/ 非常明显/ ,/ 因此/ ,/ 本文/ 对/ 高密度/ 人群/ 仿真/ 算法/ 在/ GPU/ 上/ 所/ 进行/ 的/ 扩展/ ,/ 确实/ 为/ 提高/ 人群/ 仿真/ 的/ 实时性/ 做出/ 了/ 贡献/ ./ 表/ 2/ 快速/ 行进/ 法/ 与/ 快速/ 迭代法/ 在/ 不同/ 场景/ 下/ 的/ 运行/ 时间/ 场景/ 网格/ 数/ 16/ ×/ 1632/ ×/ 3264/ ×/ 64256/ ×/ 2565/ 比较/ 与/ 讨论/ 目前/ ,/ 已有/ 很多/ 工作/ 对/ 虚拟/ 人群/ 进行/ 仿真/ ,/ 包括/ 宏观/ 仿真/ 方法/ 和/ 微观/ 仿真/ 方法/ ./ 而/ 宏观/ 仿真/ 方法/ 尤以/ Treuille/ 等/ 人/ 提出/ 的/ 连续/ 流体/ 模型/ 和/ Narain/ 等/ 人/ 提出/ 的/ 动力学/ 仿真/ 模型/ 最具/ 代表性/ ./ 本文/ 提出/ 的/ 高密度/ 人群/ 仿真/ 算法/ 属/ 宏观/ 仿真/ 方法/ 的/ 范畴/ ,/ 该/ 方法/ 结合/ 了/ 连续/ 流体/ 模型/ 和/ 动力学/ 仿真/ 模型/ 的/ 优点/ ,/ 即/ 在/ 保证/ 人群/ 运动/ 真实/ 、/ 合理/ 、/ 自然/ 的/ 同时/ ,/ 还/ 考虑/ 了/ 人群/ 在/ 高密度/ 情况/ 下/ 体现/ 的/ 既/ 不是/ 完全/ 可压缩/ 的/ 、/ 也/ 不是/ 完全/ 不可/ 压缩/ 的/ 特征/ ./ 下面/ 通过/ 表/ 3/ 对/ 本文/ 提出/ 的/ 高密度/ 人群/ 仿真/ 算法/ 与/ 连续/ 流体/ 模型/ 及/ 动力学/ 仿真/ 模型/ 进行/ 比较/ 和/ 分析/ ./ 在/ 避免/ 路径/ 拥堵/ 及/ 陷入/ 死锁/ 方面/ ,/ 全局/ 规划/ 算法/ 具有/ 绝对/ 的/ 优势/ ,/ 动力学/ 仿真/ 模型/ 由于/ 主要/ 侧重/ 局部/ 避碰/ ,/ 对此/ 考虑/ 较/ 少/ ,/ 只/ 使用/ 简单/ 的/ 路线图/ 方法/ 作为/ 全局/ 规划/ 器/ ,/ 虽然/ 也/ 能/ 完成/ 规划/ 任务/ ,/ 但是/ 在/ 预测/ 路径/ 拥堵/ 、/ 防止/ 路径/ 陷入/ 局部/ 最优/ 或者/ 死锁/ 方面/ 尚有/ 不足/ ;/ 而/ 对于/ 人群/ 数目/ 不断/ 增多/ ,/ 人群/ 密度/ 却/ 不能/ 无/ 限制/ 地/ 升高/ 的/ 问题/ ,/ 连续/ 流体/ 模型/ 并/ 没有/ 考虑/ ./ 本文/ 提出/ 的/ 方法/ 结合/ 了/ 全局/ 规划/ 算法/ 和/ 基于/ UIC/ 的/ 局部/ 避碰/ 方法/ 的/ 优势/ ,/ 虽然/ 每/ 一时间/ 步/ 都/ 进行/ 密度/ 场/ 和/ 速度/ 场/ 的/ 更新/ ,/ 使得/ 计算/ 量/ 较大/ ,/ 运行/ 效率/ 下降/ ,/ 实时性/ 难以/ 保证/ ,/ 但是/ 在/ 引入/ 局部/ 人群/ 密度/ 概念/ 和/ GPU/ 加速/ 以后/ ,/ 算法/ 的/ 实时性/ 得到/ 提高/ ,/ 从表/ 3/ 即可/ 看出/ ,/ 同样/ 是/ 对/ 2000/ 人/ 进行/ 仿真/ ,/ 连续/ 流体/ 模型/ 在/ 引入/ 单独/ 的/ 并行/ 绘制/ 线程/ 后/ ,/ 帧/ 速为/ 24fps/ ;/ 动力学/ 仿真/ 模型/ 由于/ 仅/ 关注/ 个体/ 之间/ 的/ 局部/ 避碰/ ,/ 因/ Page15/ 图/ 154/ 组/ 人群/ 交汇/ 的/ 仿真/ 过程/ Page16/ 图/ 16/ 场景/ 实时/ 状态表/ 3/ 虚拟/ 人群/ 宏观/ 仿真/ 方法/ 对比/ 无有/ ,/ 使用/ UIC/ 规则/ 有/ ,/ 使用/ UIC/ 规则/ Treuille/ 等/ 人/ 提出/ 的/ 连续/ 流体/ 模型/ Narain/ 等/ 人/ 提出/ 的/ 动力学/ 仿真/ 模型/ 我们/ 的/ 高密度/ 人群/ 仿真/ 算法/ 此/ 运行/ 效率/ 较/ 高/ ,/ 帧/ 速为/ 62fps/ ;/ 而/ 本文/ 提出/ 的/ 算法/ 帧/ 速为/ 28fps/ ,/ 也就是说/ ,/ 在/ 引入/ AABB/ 轴向/ 包围/ 盒/ 确定/ 人群/ 的/ 分布/ 范围/ 后/ ,/ 就/ 不/ 需要/ 对/ 没有/ 人群/ 分布/ 的/ 网格/ 进行/ 密度/ 场/ 和/ 速度/ 场/ 的/ 计算/ ,/ 这/ 在/ 一定/ 程度/ 上/ 节省/ 了/ 计算资源/ ;/ 而且/ ,/ 将/ 全局/ 规划/ 算法/ 在/ GPU/ 架构/ 上/ 进行/ 扩展/ 后/ ,/ 也/ 使得/ 实时性/ 不再/ 成为/ 制约/ 本文/ 提出/ 的/ 高密度/ 人群/ 仿真/ 算法/ 的/ 瓶颈/ ./ 另外/ ,/ 在/ 用户/ 交互/ 控制/ 方面/ ,/ 连续/ 流体/ 模型/ 允许/ 用户/ 创建/ 移动/ 的/ 障碍物/ 来/ 达到/ 调整/ 不/ 适度/ 从而/ 验证/ 仿真/ 人群/ 对/ 动态/ 环境/ 反应/ 性/ 的/ 目的/ ;/ 动力学/ 仿真/ 模型/ 对此/ 方面/ 没有/ 考虑/ ;/ 而/ 本文/ 算法/ 允许/ 用户/ 设置/ 人群/ 的/ 数量/ ,/ 个体/ 的/ 半径/ ,/ 个体/ 之间/ 的/ 最小/ 距离/ ,/ 个体/ 的/ 最大/ 运动/ 速度/ 以及/ 场景/ 的/ 网格/ 数目/ ,/ 即/ 在/ 交互/ 控制/ 方面/ 给予/ 用户/ 足够/ 的/ 自由度/ ,/ 以/ 达到/ 仿真/ 各种/ 场景/ 下/ 不同/ 规模/ 人群/ 运动/ 的/ 目的/ ./ 6/ 结论/ 本文/ 提出/ 了/ 一种/ 基于/ 连续/ 流体/ 模型/ 和/ 动力学/ 仿真/ 模型/ 的/ 高密度/ 人群/ 仿真/ 算法/ ./ 首先/ ,/ 本文/ 实现/ 了/ 基于/ 连续/ 流体/ 模型/ 的/ 全局/ 规划/ 算法/ ,/ 通过/ 4/ 个/ 重要/ 的/ 假设/ ,/ 根据/ 人群/ 初始/ 位置/ 和/ 目的地/ 求/ 出/ 人群/ 的/ 密度/ 场/ 以及/ 最大/ 速度/ 场/ ,/ 从而/ 构建/ 单位/ 消耗/ 场/ ,/ 再/ 根据/ 动态/ 势能/ 场/ 及其/ 梯度/ 计算速度/ 场/ ./ 其次/ ,/ 引入/ 基于/ UIC/ 限制/ 规则/ 的/ 局部/ 避碰/ 算法/ ,/ 通过/ 对/ 密度/ 的/ 控制/ 来/ 校正/ 速度/ 值/ ./ 然后/ ,/ 将/ 全局/ 规划/ 和/ 局部/ 避碰/ 相结合/ ,/ 即/ 利用/ 校正/ 得到/ 的/ 速度/ 值/ 更新/ 人群/ 的/ 位置/ ,/ 最后/ 再/ 利用/ 最小/ 距离/ 限制/ 保证/ 网格/ 内部/ 的/ 个体/ 之间/ 不/ 发生/ 碰撞/ ,/ 从而/ 实现/ 适用/ 于/ 高密度/ 情况/ 的/ 人群/ 仿真/ 算法/ ./ 通过/ 多组/ 实验/ 对/ 本文/ 提出/ 的/ 高密度/ 人群/ 仿真/ 算法/ 进行/ 验证/ ,/ 结果表明/ 该/ 算法/ 能够/ 模拟/ 各种/ 场景/ 下/ 的/ 人群/ 运动/ ,/ 仿真/ 效果/ 良好/ ./ 考虑/ 到/ 在/ 人数/ 较/ 多/ 的/ 情况/ 下/ ,/ 整体/ 计算/ 量/ 比较/ 庞大/ ,/ 算法/ 的/ 运行/ 效率/ 下降/ ,/ 难以达到/ 实时/ 的/ 效果/ ,/ 本文/ 又/ 进一步/ 对/ 高密度/ 人群/ 仿真/ 中/ 的/ 全局/ 规划/ 算法/ 在/ GPU/ 上/ 进行/ 了/ 扩展/ ,/ 达到/ 了/ 加速/ 的/ 目的/ ,/ 有效/ 地/ 提高/ 了/ 算法/ 的/ 实时性/ ./ 在/ 高密度/ 虚拟/ 人群/ 仿真/ 中/ ,/ 如何/ 在/ 保证/ 速度/ 的/ 同时/ ,/ 突显/ 人群/ 中/ 每个/ 个体/ 行为/ 的/ 社会性/ 和/ 智能性/ ,/ 一直/ 都/ 是/ 研究/ 的/ 热点问题/ ,/ 希望/ 在/ 下/ 一步/ 工作/ 中/ 能够/ 对/ 该/ 方面/ 进行/ 更/ 深入/ 的/ 研究/ ./ 一种/ 值得/ 尝试/ 的/ 方案/ 是/ 与/ 微观/ 仿真/ 方法/ 相结合/ ,/ 通过/ 模拟/ 个体/ 的/ 心理/ 、/ 性格/ 以及/ 情感/ 因素/ ,/ 更/ 逼真/ 地/ 反映/ 人群/ 的/ 各种/ 特性/ ./ Page17/ 

