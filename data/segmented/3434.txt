Page1/ 自动化/ 软件/ 错误/ 定位/ 技术/ 研究进展/ 虞凯/ 1/ )/ ,/ 2/ )/ 林梦香/ 1/ )/ ,/ 3/ )/ 1/ )/ (/ 北京航空航天大学/ 软件开发/ 环境/ 国家/ 重点/ 实验室/ 北京/ 100191/ )/ 2/ )/ (/ 北京航空航天大学/ 计算机/ 学院/ 北京/ 100191/ )/ 3/ )/ (/ 北京航空航天大学/ 机械工程/ 及/ 自动化/ 学院/ 北京/ 100191/ )/ 摘要/ 调试/ 过程/ 中/ 代价/ 最/ 昂贵/ 和/ 最/ 耗时/ 的/ 活动/ 之一/ 就是/ 定位/ 错误/ ./ 为了/ 辅助/ 开发人员/ 进行/ 程序/ 错误/ 的/ 定位/ 和/ 修正/ ,/ 自动化/ 错误/ 定位/ 技术/ 通过/ 对/ 源程序/ 、/ 测试/ 结果/ 以及/ 各种/ 程序/ 行为/ 特征/ 信息/ 的/ 计算/ 分析/ ,/ 给出/ 造成/ 故障/ 的/ 软件缺陷/ 在/ 源代码/ 中/ 的/ 可能/ 位置/ ./ 文中/ 对/ 现有/ 错误/ 定位/ 技术/ 进行/ 了/ 分类/ ,/ 介绍/ 了/ 各种/ 代表性/ 技术/ 的/ 原理/ 以及/ 建模/ 方法/ ,/ 并/ 给出/ 了/ 常用/ 的/ 评测/ 基准/ 集/ 和/ 评价/ 标准/ ,/ 最后/ 还/ 指出/ 了/ 若干/ 值得/ 进一步/ 研究/ 的/ 方向/ ./ 关键词/ 错误/ 定位/ ;/ 自动化/ 调试/ ;/ 程序/ 分析/ ;/ 自/ 适应/ 测试/ 1/ 引言/ 为了/ 保证/ 软件开发/ 的/ 质量/ ,/ 工业界/ 在/ 软件测试/ 阶段/ 投入/ 了/ 大量/ 的/ 人力物力/ ./ 据统计/ ,/ 软件测试/ 约/ 占/ 软件开发/ 和/ 维护/ 成本/ 的/ 50/ %/ ~/ 75/ %/ [/ 1/ ]/ ,/ 其中/ 最/ 耗时/ 、/ 代价/ 最/ 昂贵/ 的/ 任务/ 之一/ 就是/ 调试/ 过程/ [/ 2/ ]/ ,/ 这/ 是/ 指/ 对/ 程序/ 错误/ 进行/ 定位/ 和/ 修正/ 的/ 过程/ ./ 而/ 错误/ 定位/ 又/ 是/ 软件/ 调试/ 中/ 最/ 耗时/ 和/ 困难/ 的/ 一步/ :/ 调试/ 过程/ 需要/ Page2/ 文/ 调研/ 了/ 自动化/ 错误/ 定位/ 技术/ 的/ 研究进展/ :/ 第/ 2/ 节/ 概述/ 自动化/ 错误/ 定位/ 技术/ 的/ 研究/ ;/ 第/ 3/ 节/ 根据/ 错误/ 定位/ 技术/ 的/ 类别/ 分类/ 陈述/ 最新/ 的/ 学术/ 进展/ ;/ 第/ 4/ 节/ 讨论/ 错误/ 定位/ 技术/ 中/ 进行/ 有效性/ 度量/ 的/ 标准/ ;/ 第/ 5/ 节为/ 总结/ 并/ 展望未来/ 的/ 研究/ 方向/ ./ 2/ 自动化/ 软件/ 错误/ 定位/ 技术/ 研究/ 概述/ 2.1/ 问题/ 陈述/ 令/ T/ =/ {/ τ/ 1/ ,/ τ/ 2/ ,/ …/ ,/ τ/ n/ }/ 表示/ 一个/ 出错/ 程序/ P/ 的/ 测试/ 组件/ ,/ 其中/ τ/ k/ =/ (/ ik/ ,/ ok/ )/ (/ 1/ / k/ / n/ )/ 是/ 以/ ik/ 为/ 输入/ 以/ ok/ 为/ 期望/ 输出/ (/ 即/ 测试/ 谕言/ (/ testoracle/ )/ 为/ ok/ )/ 的/ 测试用例/ ./ P/ 执行/ τ/ k/ 的/ 实际/ 输出/ 结果/ 为/ o/ ^/ k/ =/ P/ (/ ik/ )/ ./ 称/ τ/ k/ 是/ P/ 的/ 一个/ 通过/ 或/ 成功/ (/ passed/ // successful/ )/ 测试用例/ 当且/ 仅/ 当/ o/ ^/ k/ =/ ok/ ,/ 否则/ 称/ τ/ k/ 是/ P/ 的/ 一个/ 失败/ (/ failed/ )/ 测试用例/ ./ 根据/ 测试用例/ 的/ 执行/ 结果/ ,/ 可以/ 将/ 测试用例/ 集/ T/ 划分/ 成/ 不/ 相交/ 的/ 两个/ 集合/ Tp/ 和/ Tf/ ,/ Tp/ 是/ 成功/ 测试用例/ 的/ 集合/ ,/ Tf/ 是/ 失败/ 测试用例/ 的/ 集合/ ./ P/ 执行/ τ/ k/ 的/ 运行/ 时/ 信息/ (/ 比如/ 覆盖/ 信息/ 或/ 调用/ 图/ 等/ )/ 用/ Γ/ (/ τ/ k/ )/ 表示/ ,/ 则/ P/ 执行/ T/ 时/ 的/ 全部/ 执行/ 信表/ 1/ 自动化/ 错误/ 定位/ 技术/ 研究/ 历史/ 研究/ 机构/ 时间/ 199920022003200520062006200620072008200820092009201020102011/ 表/ 1/ 中/ 列出/ 的/ 这些/ 技术/ ,/ 大多/ 通过/ (/ 半/ )/ 自动化/ 开发人员/ 日常/ 调试/ 时/ 采用/ 的/ 策略/ ,/ 最终/ 给出/ 错误/ 可能/ 存在/ 的/ 位置/ ./ 有的是/ 通过/ 类似/ 二分/ 查找/ 的/ 方式/ ,/ 缩小/ 引发/ 错误/ 的/ 条件/ [/ 8/ -/ 9/ ]/ ;/ 有/ 的/ 寻找/ 和/ 给定/ 的/ 失败/ 执行/ 最/ 相似/ 的/ 成功/ 执行/ ,/ 然后/ 比较/ 找出/ 不同/ [/ 10/ ]/ ;/ 有/ 的/ 认为/ 经常出现/ 在/ 失败/ 执行/ 中/ 的/ 程序/ 实体/ 更/ 值得/ 怀疑/ [/ 11/ ]/ ;/ 有/ 的/ 观察/ 程序/ 谓词/ 在/ 成功/ 执行/ 和/ 失败/ 执行/ 中/ 的/ 取值/ 模式/ 的/ 异常/ [/ 12/ ]/ ;/ 还有/ 的/ 修改/ 程序运行/ 时/ 状态/ 来/ 寻找/ 对/ 测试/ 执行/ 结果/ 有/ 影响/ 的/ 谓词/ 或/ 语句/ 等等/ [/ 13/ -/ 14/ ]/ ./ 按照/ 使用/ 和/ 操纵/ 的/ 程序执行/ 信息/ 的/ 不同/ ,/ 息/ 表示/ 为/ Γ/ =/ Γ/ p/ ∪/ Γ/ f/ ,/ 其中/ Γ/ p/ =/ {/ Γ/ (/ τ/ k/ )/ |/ τ/ k/ ∈/ Τ/ p/ }/ ,/ Γ/ f/ =/ {/ Γ/ (/ τ/ k/ )/ |/ τ/ k/ ∈/ Τ/ f/ }/ ./ 自动化/ 错误/ 定位/ 技术/ 的/ 任务/ 是/ 在/ 给定/ (/ Ρ/ ,/ Τ/ ,/ Γ/ )/ 的/ 条件/ 下/ (/ 其中/ Γ/ 可以/ 取空/ )/ ,/ 定位/ Ρ/ 中/ 值得/ 怀疑/ 的/ 出错/ 程序/ 实体/ 的/ 集合/ S/ ./ 2.2/ 研究/ 历史/ Weiser/ 最早/ 提出/ 程序/ 切片/ [/ 3/ ]/ 可以/ 用于/ 程序/ 理解/ 和/ 软件/ 调试/ ./ 之后/ ,/ 研究/ 人员/ 发现/ 动态/ 切片/ [/ 4/ -/ 7/ ]/ 更/ 适用/ 于/ 错误/ 定位/ 与/ 理解/ ./ 此外/ ,/ 早期/ 的/ 研究者/ 试图/ 创造/ 两个/ 相似/ 的/ 程序/ 输入/ ,/ 一个/ 可以/ 导致/ 程序/ 成功/ 执行/ 而/ 另/ 一个/ 会/ 导致/ 执行/ 失败/ ./ 他们/ 假设/ 相似/ 的/ 输入/ 会/ 导致/ 相似/ 的/ 执行/ 过程/ ,/ 进而/ 开发人员/ 可以/ 通过/ 比较/ 执行/ 的/ 不同/ 来/ 定位/ 错误/ ./ 由于/ 通信/ 费用/ 的/ 日益/ 降低/ 和/ 计算能力/ 的/ 飞速发展/ ,/ 使得/ 搜集/ 程序执行/ 信息/ 和/ 操纵/ 程序执行/ 状态/ 成为/ 可能/ ./ 自/ 2002/ 年/ 以来/ ,/ 自动化/ 错误/ 定位/ 技术/ 逐渐/ 成为/ 软件工程/ 界/ 的/ 研究/ 热点/ ,/ 表/ 1/ 按照/ 时间/ 顺序/ ,/ 列出/ 了/ 部分/ 典型/ 的/ 错误/ 定位/ 技术/ 以及/ 相关/ 的/ 研究/ 机构/ 和/ 论文/ 发表/ 的/ 会议/ 或/ 期刊/ ,/ 简要地/ 描述/ 了/ 错误/ 定位/ 技术/ 研究/ 的/ 历史/ ./ SaarlandUniversityBrownUniversityUniversityofArizonaPekingUniversityPurdueUniversityMicrosoftResearchUniversityofHongKongUniversityofHongKongUniversityofMelbourne/ 目前/ 的/ 错误/ 定位/ 方法/ 可以/ 划分/ 为/ 3/ 类/ :/ 基于/ 行为/ 特征/ 对比/ 的/ 方法/ 、/ 基于/ 程序/ 状态/ 修改/ 的/ 方法/ 和/ 基于/ 程序/ 依赖/ 关系/ 的/ 方法/ ./ 3/ 自动化/ 错误/ 定位/ 技术/ 分类/ 3.1/ 基于/ 行为/ 特征/ 对比/ 的/ 方法/ 程序/ 行为/ 特征/ ,/ 也/ 被/ 称为/ 程序/ 光谱/ ,/ 是/ 程序执行/ 特征/ 的/ 统计/ 信息/ ./ Reps/ 等/ 人/ [/ 15/ ]/ 在/ 调试/ 解决/ 千年虫/ 的/ 问题/ 时/ 首次/ 提出/ 程序/ 光谱/ 的/ 概念/ ./ 为了/ 揭示/ 程序/ Page3/ 行为/ 特征/ 与/ 程序/ 错误/ 之间/ 的/ 关系/ ,/ Harrold/ 等/ 人/ [/ 16/ ]/ 对此/ 做/ 了/ 大量/ 的/ 实验/ ./ 实验/ 结果表明/ ,/ 程序/ 出现异常/ 的/ 行为/ 特征/ 未必/ 意味着/ 代码/ 中/ 存在/ 缺陷/ ,/ 但是/ 错误/ 的/ 程序运行/ 往往/ 会/ 表现/ 出/ 异常/ 的/ 行为/ 特征/ ./ 基于/ 行为/ 特征/ 对比/ 的/ 方法/ ,/ 通常/ 假设/ 失败/ 的/ 测试/ 执行/ 会/ 表现/ 出/ 异常/ 的/ 程序/ 行为/ 特征/ ,/ 所以/ 成功/ 执行/ 和/ 失败/ 执行/ 中/ 的/ 行为/ 特征/ 的/ 差异/ 可以/ 用于/ 指导/ 错误/ 定位/ ,/ 其/ 工作/ 流程/ 如下/ :/ 首先/ ,/ 根据/ 收集/ 信息/ 类型/ 的/ 需要/ ,/ 对/ 源代码/ 进行/ 插桩/ 并/ 执行程序/ ,/ 收集/ 执行/ 信息/ ./ 然后/ ,/ 判断/ 每个/ 测试用例/ 的/ 执行/ 结果/ ./ 接着/ ,/ 解析/ 执行/ 信息/ ,/ 得到/ 执行/ 行为/ 特征/ ./ 然后/ ,/ 根据/ 给定/ 的/ 模型/ ,/ 建模/ 程序/ 实体/ 的/ 怀疑/ 度/ ,/ 即/ 可能/ 出错/ 的/ 程度/ [/ 11/ ]/ ./ 最后/ ,/ 以/ 程序/ 实体/ 排名/ 的/ 方式/ 给出/ 定位/ 结果/ ,/ 将/ 各/ 程序/ 实体/ 按照/ 怀疑/ 度/ 大小/ 从大到/ 小/ 排列/ ,/ 供/ 开发人员/ 查看/ ./ 按照/ 使用/ 的/ 行为/ 特征/ 信息/ 的/ 种类/ 和/ 策略/ ,/ 大体/ 可以/ 分为/ 五类/ :/ 基于/ 语句/ 或/ 基本块/ 的/ 、/ 基于/ 谓词/ 的/ 、/ 基于/ 方法/ 的/ 、/ 基于/ 定义/ 使用/ 对/ 或/ 信息流/ 的/ 以及/ 行为/ 特征/ 信息/ 精炼/ 的/ 方法/ ./ 3.1/ ./ 1/ 基于/ 语句/ 或/ 基本块/ 2003/ 年/ ,/ Renieres/ 和/ Reiss/ 提出/ 使用/ 相似/ 的/ 程序/ 光谱/ 来/ 进行/ 错误/ 定位/ [/ 10/ ]/ ./ NNQ/ (/ NearestNeighborQueries/ )/ 法/ 假设/ 存在/ 一个/ 失败/ 的/ 执行/ 和/ 很多/ 成功/ 的/ 执行/ ,/ 然后/ 根据/ 距离/ 准则/ 挑选出/ 一个/ 程序/ 光谱/ 和/ 失败/ 运行/ 最/ 相似/ 的/ 成功/ 运行/ (/ 即/ 失败/ 执行/ 的/ 最近/ 邻居/ )/ ,/ 进而/ 比较/ 它们/ 光谱/ 的/ 不同之处/ 以/ 分离/ 软件/ 错误/ ./ NNQ/ 法/ 认为/ 那些/ 出现/ 在/ 成功/ 执行/ 中/ 的/ 程序/ 实体/ 不/ 应该/ 被/ 怀疑/ ,/ 与/ 此/ 不同/ ,/ Jones/ 和/ Harrold/ 提出/ 的/ Tarantula/ 法/ [/ 11/ ,/ 17/ ]/ 认为/ 只要/ 是/ 主要/ 被/ 失败/ 用例/ 执行/ 的/ 程序/ 实体/ 就/ 值得/ 怀疑/ ,/ 同时/ 它/ 也/ 容忍/ 出错/ 的/ 程序/ 实体/ 偶尔/ 地被/ 成功/ 用例/ 执行/ ./ 他们/ 使用/ 常用/ 的/ 信息/ 来/ 辅助/ 错误/ 定位/ ,/ 包括/ 每个/ 测试用例/ 的/ 执行/ 结果/ 、/ 程序/ 实体/ (/ 语句/ 、/ 分支/ 或/ 函数/ 等/ )/ 被/ 每个/ 测试用例/ 覆盖/ 的/ 信息/ 以及/ 程序/ 的/ 源代码/ ./ 对于/ 程序/ 实体/ e/ ,/ 它/ 的/ 怀疑/ 度/ 计算公式/ 如下/ :/ Tarantula/ (/ e/ )/ =/ 其中/ ,/ failed/ (/ e/ )/ 和/ passed/ (/ e/ )/ 分别/ 表示/ 失败/ 用例/ 和/ 通过/ 用例/ 执行程序/ 实体/ e/ 的/ 个数/ ,/ |/ Tf/ |/ 和/ |/ Tp/ |/ 表示/ 测试/ 组件/ 中/ 所有/ 失败/ 用例/ 和/ 通过/ 用例/ 的/ 个数/ ./ e/ 的/ 怀疑/ 度/ 取值/ 范围/ 从/ 0/ 到/ 1/ ,/ 数值/ 越大/ ,/ 出错/ 的/ 可能性/ 越大/ ,/ 开发人员/ 可以/ 按照/ 怀疑/ 度/ 从/ 大到/ 小/ 的/ 顺序/ 审查/ 源代码/ ./ 不同于/ NNQ/ 和/ Tarantula/ 这些/ 基于/ 直观/ 或/ 启发式/ 的/ 计算方法/ ,/ Wong/ 等/ 人/ [/ 18/ ]/ 提出/ 了/ 一个/ 定义/ 良好/ 的/ 统计/ 方法/ Crosstab/ ./ 它/ 利用/ 覆盖/ 信息/ 和/ 测试/ 结果/ 为/ 每条/ 可/ 执行/ 语句/ ω/ 构建/ 一个/ 交叉/ 表/ ,/ 进而/ 计算/ 卡方/ 统计/ 量/ (/ Chi/ -/ squarestatistic/ )/ χ/ 2/ (/ ω/ )/ 和/ 列联/ 相关系数/ M/ (/ ω/ )/ ./ 语句/ ω/ 的/ 怀疑/ 度/ 定义/ 如下/ :/ Crosstab/ (/ ω/ )/ =/ 其中/ φ/ (/ ω/ )/ =/ (/ failed/ (/ ω/ )/ // |/ Tf/ |/ )/ // (/ passed/ (/ ω/ )/ // |/ Tp/ |/ )/ ./ 与/ 上述/ 方法/ 不同/ ,/ Hao/ 等/ 人/ [/ 19/ ]/ 提出/ 应该/ 考虑/ 测试用例/ 的/ 相似性/ ,/ 并/ 消除/ 相似/ 的/ 测试用例/ 对于/ 定位/ 结果/ 的/ 影响/ ./ 他们/ 提出/ 一种/ 名为/ SAFL/ (/ Similarity/ -/ AwareFaultLocalization/ )/ 的/ 方法/ ./ 覆盖/ 信息/ 和/ 测试/ 结果/ 使用/ 执行/ 矩阵/ 犈/ =/ (/ eij/ )/ 来/ 表示/ ./ 其中/ ,/ eij/ 表示/ 第/ j/ 条/ 语句/ 被/ 第/ i/ 个/ 测试用例/ 覆盖/ 的/ 信息/ ,/ ei/ (/ m/ +/ 1/ )/ 表示/ 第/ i/ 个/ 测试用例/ 的/ 状态/ 信息/ ./ SAFL/ 方法/ 认为/ 每个/ 语句/ 块/ 对于/ 测试用例/ 状态/ 的/ 贡献/ 是/ 相同/ 的/ ./ 根据/ 执行/ 矩阵/ ,/ 可/ 得到/ 量化/ 矩阵/ 犉/ =/ (/ fij/ )/ ,/ 其中/ ,/ fij/ 表示/ 第/ j/ 条/ 语句/ 对/ 第/ i/ 个/ 测试用例/ 的/ 状态/ 的/ 贡献度/ ./ 根据/ 模糊集/ 理论/ ,/ 第/ j/ 条/ 语句/ 的/ 怀疑/ 度/ 通过/ 其/ 在/ 失败/ 用例/ 和/ 所有/ 用例/ 中/ 的/ 贡献度/ 的/ 比值/ 确定/ ,/ 即/ SAFL/ (/ j/ )/ =/ ∑/ mk/ =/ 1/ 本质/ 上/ ,/ SAFL/ 方法/ 计算/ 的/ 是/ 每个/ 语句/ 块/ 属于/ 失败/ 用例/ 集合/ 的/ 隶属/ 度/ 和/ 属于/ 所有/ 用例/ 集合/ 的/ 隶属/ 度/ 的/ 比值/ ,/ 比值/ 越大/ ,/ 认为/ 其/ 出错/ 的/ 可能性/ 就/ 越/ 大/ ./ Naish/ 等/ 人/ [/ 20/ ]/ 总结/ 了/ 30/ 多种/ 基于/ 语句/ 的/ 定位/ 方法/ ./ 他们/ 首先/ 构造/ 了/ 一段/ 名为/ ITE2/ (/ If/ -/ Then/ -/ Else/ -/ 2/ )/ 的/ 程序/ ,/ 然后/ 在/ 这个/ 程序/ 中/ 讨论/ 各种/ 情形/ ./ 这个/ 程序/ 虽然/ 简单/ ,/ 但/ 可以/ 用于/ 刻画/ 错误/ 定位/ 中/ 的/ 两种/ 重要/ 场景/ :/ 存在/ “/ 噪声/ ”/ (/ 存在/ 与/ 错误行为/ 强/ 相关/ 的/ 正常/ 行为/ )/ 和/ 信号/ “/ 微弱/ ”/ (/ 错误行为/ 很难/ 被/ 监测/ 到/ )/ ./ 基于/ 在/ ITE2/ 代码/ 模型/ 上/ 的/ 分析/ ,/ 他们/ 提出/ 了/ 两种/ Optimalmetric/ ,/ 语句/ s/ 的/ 怀疑/ 度/ 定义/ 如下/ :/ O/ (/ s/ )/ =/ -/ 1/ ,/ 直观/ 上/ ,/ 对于/ 只/ 包含/ 一个/ 错误/ 的/ 程序/ ,/ 公式/ Page4O/ (/ s/ )/ 认为/ 对于/ 出错/ 语句/ ,/ 必定/ 有/ |/ Tf/ |/ =/ failed/ (/ s/ )/ ./ 所以/ 任何/ |/ Tf/ |/ >/ failed/ (/ s/ )/ 的/ 语句/ 怀疑/ 度/ 都/ 最低/ ./ 此外/ ,/ 由于/ 认为/ 执行/ 出错/ 语句/ 的/ 成功/ 用/ 例数/ 会/ 较/ 少/ ,/ 未/ 执行/ 出错/ 语句/ 但/ 通过/ 的/ 用/ 例数/ 就/ 会/ 较大/ ,/ 所以/ 使用/ |/ Tp/ |/ -/ passed/ (/ s/ )/ 来/ 确定/ 怀疑/ 度/ ./ 对于/ 公式/ Op/ (/ s/ )/ 的/ 解释/ 在/ 定位/ 多/ 错误/ 程序/ 时/ 更/ 合理/ 些/ ./ 如果/ 有/ 多个/ 错误/ ,/ 则/ 对于/ 出错/ 语句/ ,/ |/ Tf/ |/ =/ failed/ (/ s/ )/ 并/ 不/ 总是/ 成立/ ./ 因此/ ,/ Op/ (/ s/ )/ 首先/ 考虑/ 了/ 失败/ 用例/ 执行/ 语句/ 的/ 个数/ ,/ 然后/ 才/ 是/ 通过/ 用例/ 执行/ 语句/ 的/ 个数/ ./ 3.1/ ./ 2/ 基于/ 谓词/ 与/ Tarantula/ 面向/ 内部测试/ (/ in/ -/ housetesting/ )/ 不同/ ,/ Liblit/ 和/ 他/ 的/ 同事/ 提出/ 了/ CBI/ (/ CooperativeBugIsolation/ )/ 技术/ [/ 21/ ]/ 用于/ 定位/ 已/ 部署/ 软件/ (/ deployedsoftware/ )/ 中/ 的/ 错误/ ./ 他们/ 的/ 基本/ 想法/ 是/ 搜集/ 用户/ 在/ 使用/ 软件/ 时/ 产生/ 的/ 执行/ 信息/ ,/ 进而/ 通过/ 分析/ 这些/ 数据/ 将/ 软件缺陷/ 分离出来/ ./ 与/ 现有/ 的/ 系统/ 通常/ 只/ 搜集/ 崩溃/ 时/ 的/ 报告/ 不同/ ,/ 程序执行/ 信息/ 更好/ 地/ 刻画/ 了/ 软件/ 实际/ 使用/ 时/ 的/ 场景/ ./ 然而/ 搜集/ 执行/ 信息/ 肯定/ 会/ 对/ 用户/ 使用/ 的/ 软件/ 性能/ 有/ 一定/ 的/ 影响/ ./ 为了/ 解决/ 这个/ 问题/ ,/ Liblit/ 等/ 人/ 通过/ 在/ 源代码/ 上/ 的/ 变换/ ,/ 使用/ 稀疏/ 的/ 随机抽样/ ,/ 较/ 好/ 地/ 控制/ 了/ 客户端/ 的/ 性能/ 并/ 返回/ 执行/ 时/ 的/ 摘要/ 信息/ ./ 他们/ 的/ 抽样/ 方法/ 如下/ :/ 程序/ 中/ 任何/ 语句/ 的/ 集合/ 都/ 可以/ 被/ 认为/ 是/ 一个/ 插桩/ 点/ ,/ 进而/ 被/ 设计/ 为/ 可供/ 采样/ 的/ 而/ 不是/ 无条件/ 运行/ 的/ ./ 即/ 每次/ 程序执行/ 到/ 插/ 桩/ 点/ 时/ ,/ 随机/ 决定/ 是否/ 要/ 执行/ 插桩/ ./ 为了/ 捕获/ 可以/ 辅助/ 缺陷/ 定位/ 的/ 程序/ 行为/ ,/ Liblit/ 等/ 人/ 对于/ C/ 程序/ 采用/ 了/ 分支/ 、/ 返回值/ 和/ 标量/ 对/ 3/ 种/ 插/ 桩/ 方案/ ./ 为了/ 识别/ 和/ 程序/ 故障/ 相关/ 的/ 谓词/ ,/ 对于/ 一个/ 谓词/ P/ ,/ 令/ FT/ (/ P/ )/ 和/ ST/ (/ P/ )/ 分别/ 表示/ P/ 被/ 观察/ 到/ 的/ 在/ 失败/ 和/ 成功/ 执行/ 中/ 取值/ 为/ 真的/ 次数/ ,/ FO/ (/ P/ )/ 和/ SO/ (/ P/ )/ 分别/ 表示/ P/ 被/ 观察/ 到/ 的/ 在/ 失败/ 和/ 成功/ 执行/ 中/ 出现/ 的/ 次数/ ,/ 则/ P/ 的/ 怀疑/ 度/ 被/ 计算/ 如下/ :/ CBI/ (/ P/ )/ =/ FT/ (/ P/ )/ +/ ST/ (/ P/ )/ -/ FO/ (/ P/ )/ FT/ (/ P/ )/ 这个/ 计算公式/ 本质/ 是/ 求/ 一个/ 调和/ 平均数/ ,/ 用以/ 有效/ 地/ 平衡/ 两/ 方面/ 的/ 因素/ :/ 谓词/ 的/ 特异性/ (/ specifici/ -/ ty/ )/ 和/ 谓词/ 的/ 灵敏性/ (/ sensitivity/ )/ ./ 和/ 信息/ 抽取/ 中/ 查准率/ (/ precision/ )/ 及/ 查全率/ (/ recall/ )/ 的/ 概念/ 类似/ ,/ 特异性/ 是/ 指/ 在/ 成功/ 执行/ 中/ 谓词/ 没有/ 错误/ 地/ 预测/ 存在/ 故障/ ,/ 而/ 灵敏性/ 是/ 指/ 在/ 失败/ 执行/ 中/ 谓词/ 被/ 观察/ 到/ 的/ 比例/ ./ 尽管/ CBI/ 技术/ 成功/ 地/ 从/ 某些/ 广泛/ 使用/ 的/ 系统/ 中/ 识别/ 出/ 了/ 一些/ 错误/ ,/ 但是/ 它/ 只/ 考虑/ 了/ 那些/ 在/ 失败/ 执行/ 中/ 取值/ 为/ 真的/ 谓词/ ./ 而/ 对于/ 一个/ 总是/ 取值/ 为/ 真的/ 谓词/ ,/ CBI/ 技术/ 就/ 丧失/ 了/ 它/ 的/ 判别/ 能力/ ./ 这/ 也/ 说明/ ,/ 模型/ 还有/ 进一步/ 改进/ 的/ 地方/ ./ Liu/ 等/ 人/ [/ 22/ ]/ 对/ 谓词/ 在/ 成功/ 执行/ 和/ 失败/ 执行/ 中/ 的/ 取值/ 模式/ 进行/ 建模/ ,/ 然后/ 基于/ 统计学/ 中/ 假设检验/ 的/ 原理/ ,/ 量化/ 每个/ 谓词/ 的/ 错误/ 相关性/ ,/ 建立/ 了/ SOBER/ 方法/ ./ 特别/ 地/ ,/ 一个/ 谓词/ P/ 的/ 取值/ 偏差/ 是/ 指/ 它/ 在/ 一次/ 执行/ 中取/ 真值/ 的/ 概率/ ./ 如果/ P/ 的/ 取值/ 偏差/ 在/ 成功/ 和/ 失败/ 执行/ 中/ 的/ 差异/ 越大/ ,/ 则/ 谓词/ P/ 出错/ 的/ 可能性/ 越大/ ./ 令/ Y/ 表示/ 谓词/ P/ 的/ 取值/ 偏差/ 在/ 所有/ 失败/ 执行/ 中/ 的/ 均值/ ./ SOBER/ 使用/ 如下/ 公式/ 计算/ P/ 的/ 怀疑/ 度/ :/ 其中/ ,/ σ/ p/ 为/ 谓词/ P/ 在/ 所有/ 成功/ 执行/ 中/ 谓词/ 的/ 取值/ 偏差/ 的/ 方差/ ,/ Z/ 是/ Y/ 的/ 标准化/ 随机变量/ ./ 开发者/ 可以/ 按照/ 谓词/ 怀疑/ 度/ 的/ 大小/ 审查/ 源代码/ ,/ 发现错误/ 的/ 位置/ ./ 与/ Crosstab/ 方法/ 使用/ 假设检验/ 来/ 提供/ 测试/ 结果/ 与/ 每条/ 语句/ 的/ 覆盖/ 信息/ 之间/ “/ 依赖性/ // 独立性/ ”/ 参考/ 不同/ ,/ SOBER/ 方法/ 使用/ 假设检验/ 来/ 量化/ 谓词/ 的/ 取值/ 偏差/ 在/ 成功/ 和/ 失败/ 执行/ 中/ 的/ 差异/ 不同/ ./ 复合/ 谓词/ 在/ 取值/ 时会/ 由于/ 短路/ 求值/ 造成/ 不同/ 执行/ 时/ 表达式/ 中/ 需要/ 计算/ 的/ 原子/ 条件/ 表达式/ 可能/ 不同/ ./ Zhang/ 等/ 人/ [/ 23/ ]/ 研究/ 了/ 短路/ 求值/ 和/ 求值/ 序列/ 对于/ 错误/ 定位/ 技术/ 的/ 影响/ ./ 具体/ 地/ ,/ 他们/ 提出/ 了/ 一种/ 基于/ 谓词/ 的/ 定位/ 方法/ 的/ 改进/ 策略/ :/ DES/ (/ DebuggingthroughEvaluationSequences/ )/ 策略/ ,/ 将/ 每个/ 谓词/ 排名/ 最高/ 的/ 取值/ 序列/ 作为/ 该/ 谓词/ 的/ 排名/ ./ 实验/ 结果表明/ ,/ DES/ 策略/ 可以/ 提高/ 基于/ 谓词/ 的/ 错误/ 定位/ 技术/ 的/ 有效性/ 而/ 同时/ 仅/ 产生/ 较/ 小/ 的/ 额外/ 的/ 性能/ 开销/ ./ 3.1/ ./ 3/ 基于/ 方法/ 对于/ 面向对象/ 的/ 语言/ ,/ Dallmeier/ 等/ 人/ [/ 24/ ]/ 认为/ 在/ 失败/ 执行/ 中/ 调用/ 了/ 与/ 通过/ 执行/ 中/ 不同/ 的/ 方法/ 的/ 类/ 更/ 值得/ 怀疑/ ./ 他们/ 提出/ 了/ 基于/ 方法/ 调用/ 序列/ 的/ Am/ -/ ple/ 技术/ ,/ 认为/ 只/ 出现/ 在/ 通过/ 执行/ 或/ 失败/ 执行/ 中/ 的/ 方法/ 调用/ 子/ 序列/ 应该/ 被/ 怀疑/ ./ 与/ 在/ 通过/ 和/ 失败/ 执行/ 中/ 都/ 出现/ 的/ 子/ 序列/ 相比/ ,/ 这些/ 子/ 序列/ 被/ 分配/ 较大/ 的/ 怀疑/ 度值/ ./ 遗失/ 或/ 增添/ 的/ 子/ 序列/ 都/ 值得/ 怀疑/ ,/ 因为/ 它们/ 都/ 可能/ 引发/ 程序/ 故障/ ./ 给定/ 一个/ 类/ C/ 以及/ 相关/ 的/ 一个/ 失败/ 执行/ cf/ 和/ 一个/ 通过/ 执行/ cp/ ./ 对于/ 给定/ 长度/ k/ ,/ 两个/ 执行/ 产生/ 的/ 子/ 序列/ 集/ 分别/ 为/ S/ (/ cf/ )/ 和/ S/ (/ cp/ )/ ./ 对于/ 没有/ 同时/ 出现/ 在/ 两个/ 执行/ 中/ 的/ 子/ 序列/ s/ ,/ 其/ 怀疑/ 度/ w/ (/ s/ )/ 赋值/ 为/ 1/ ,/ Page5/ 否则/ 赋值/ 为/ 0/ ./ 则/ 类/ C/ 的/ 怀疑/ 度/ 可以/ 用/ 它/ 包含/ 的/ 子/ 序列/ 的/ 怀疑/ 度/ 的/ 平均值/ 来/ 计算/ ,/ 即/ 其中/ SC/ =/ S/ (/ cf/ )/ ∪/ S/ (/ cp/ )/ ./ Ample/ 技术/ 也/ 可以/ 使用/ 多组/ 通过/ 执行/ 来/ 得到/ 子/ 序列/ 集/ S/ (/ cp/ )/ 并/ 用于/ 计算/ 怀疑/ 度值/ ./ 进一步/ 的/ 研究/ 表明/ ,/ 子/ 序列/ 长度/ k/ 的/ 取值/ 会/ 影响/ 定位/ 结果/ 的/ 灵敏性/ ,/ k/ 通常/ 取值/ 在/ 5/ ~/ 10/ 之间/ 较/ 好/ ./ 与/ Ample/ 技术/ 不同/ ,/ Yilmaz/ 等/ 人/ [/ 25/ ]/ 提出/ 使用/ 时间/ 光谱/ 作为/ 程序执行/ 特征/ 的/ 抽象/ ./ 时间/ 光谱/ 是/ 指/ 程序/ 实体/ (/ 比如/ 方法/ 、/ 函数/ )/ 运行/ 的/ 时间/ 特征/ 信息/ ,/ 通常/ 用于/ 程序/ 性能/ 的/ 评价/ 和/ 优化/ ./ 他们/ 提出/ 一种/ 叫做/ TWT/ (/ TimeWillTell/ )/ 的/ 方法/ ,/ 首先/ 收集/ 成功/ 执行/ 和/ 失败/ 执行/ 的/ 时间/ 光谱/ ,/ 接着/ 基于/ 成功/ 执行/ 的/ 时间/ 光谱/ 建立/ 程序/ 行为/ 模型/ ,/ 然后/ 使用/ 这个/ 模型/ 来/ 识别/ 失败/ 执行/ 和/ 成功/ 执行/ 的/ 偏离/ 程度/ ./ 比如/ ,/ 一种/ 方法/ 如果/ 在/ 失败/ 执行/ 中/ 花费/ 了/ 比/ 通过/ 执行/ 值得/ 怀疑/ 的/ 较/ 长/ 或/ 较/ 短/ 的/ 时间/ ,/ 那么/ 这种/ 方法/ 可能/ 就/ 和/ 程序/ 错误/ 相关/ ./ TWT/ 技术/ 选取/ 的/ 是/ 方法/ 的/ 执行/ 时间/ 作为/ 时间/ 光谱/ ,/ 因为/ 方法/ 提供/ 了/ 合适/ 的/ 粒度/ 水平/ 和/ 功能/ 的/ 界限/ ./ 对/ 每个/ 方法/ ,/ 基于/ 通过/ 执行/ 的/ 时间/ 光谱/ 创建/ 一个/ 高斯/ 混合/ 模型/ ./ 这/ 是/ 个/ 多维/ 概率密度/ 模型/ ,/ 首先/ 识别/ 出/ 数据/ 聚成/ 的/ 类/ ,/ 然后/ 对/ 每个/ 类/ 使用/ 高斯分布/ 建模/ ./ 对于/ 一个/ 给定/ 的/ 失败/ 执行/ ,/ 以/ 它/ 和/ 聚类/ 中心点/ 的/ 偏离/ 程度/ 作为/ 怀疑/ 度/ 的/ 得分/ ,/ 距离/ 越/ 远/ ,/ 怀疑/ 度越/ 大/ ./ 3.1/ ./ 4/ 基于/ 定义/ 使用/ 对/ 、/ 分支/ 或/ 信息流/ Santelices/ 等/ 人/ [/ 26/ ]/ 发现/ 覆盖/ 信息/ 类型/ 的/ 选择/ 可以/ 极大/ 地/ 影响/ 到/ 错误/ 定位/ 技术/ 的/ 有效性/ :/ 有些/ 缺陷/ 最好/ 使用/ 语句/ 覆盖/ 信息/ 来/ 定位/ ,/ 而/ 有些/ 最好/ 使用/ 分支/ 或/ 定义/ 使用/ 对/ 的/ 覆盖/ 信息/ ./ 他们/ 首先/ 计算/ 一个/ 程序/ 实体/ 的/ 怀疑/ 度/ ,/ 然后/ 对于/ 分支/ 或/ 定义/ 使用/ 对/ ,/ 根据/ 3/ 条/ 规则/ ,/ 将/ 每条/ 语句/ 的/ 可疑/ 度/ 定义/ 为/ 和/ 它/ 关联/ 的/ 分支/ 或/ 定义/ 使用/ 对/ 可疑/ 度/ 的/ 最高值/ ./ 在/ 完成/ 映射/ 之后/ ,/ 采用/ max/ -/ SBD/ ,/ avg/ -/ SBD/ 和/ avg/ -/ BD3/ 种/ 策略/ 来/ 获得/ 一个/ 语句/ 的/ 可疑/ 度/ 得分/ ./ 即/ 一个/ 语句/ 的/ 可疑/ 度/ 得分/ 可以/ 是/ 和/ 它/ 关联/ 的/ 3/ 种/ 程序/ 实体/ 怀疑/ 度/ 的/ 最大值/ 、/ 平均值/ 或/ 只是/ 定义/ 为/ 和/ 它/ 关联/ 的/ 分支/ 和/ 定义/ 使用/ 对/ 怀疑/ 度/ 的/ 平均值/ ./ 实验/ 表明/ ,/ 一般来说/ ,/ max/ -/ SBD/ 并不比/ 使用/ 单一/ 覆盖/ 类型/ 的/ 定位/ 技术/ 有效/ ./ 相反/ ,/ avg/ -/ SBD/ 和/ avg/ -/ BD/ 都/ 要/ 比/ 单一/ 覆盖/ 类型/ 的/ 定位/ 技术/ 有效/ ,/ 并且/ 这个/ 优势/ 是/ 统计/ 显著/ 的/ ./ 这/ 说明/ 综合/ 使用/ 多种/ 覆盖/ 类型/ 的/ 信息/ ,/ 确实/ 可以/ 提高/ 错误/ 定位/ 技术/ 的/ 有效性/ ./ 与/ Santelices/ 等/ 人/ 使用/ 单一/ 模型/ 建模/ 程序/ 实体/ 不同/ ,/ Yu/ 和/ 他/ 的/ 同事/ [/ 27/ ]/ 进一步/ 提出/ 了/ 一个/ 使用/ 多个/ 模型/ 来/ 捕捉/ 不同/ 类型/ 的/ 错误/ 的/ 方法/ LOUPE/ ./ 他们/ 假设/ ,/ 对于/ 任一/ 类型/ 的/ 错误/ ,/ 存在/ 一种/ 适合/ 模型/ ,/ 它/ 能够/ 较/ 好/ 识别/ 出/ 错误/ 语句/ ./ 由于/ 错误/ 类型/ 事先/ 未知/ ,/ LOUPE/ 方法/ 建立/ 了/ 多个/ 模型/ 来/ 捕捉/ 语句/ 的/ 异常/ 行为/ ,/ 并/ 试图/ 选出/ 相应/ 的/ 适合/ 模型/ ./ 具体/ 的/ ,/ 分别/ 使用/ CDBug/ 模型/ 和/ DDBug/ 模型/ 来/ 建模/ 控制流/ 和/ 数据流/ 上/ 错误/ 的/ 异常/ 行为/ ./ 从/ 实验/ 结果/ 中/ 发现/ ,/ 出错/ 语句/ 在/ 其/ 适合/ 模型/ 下/ 往往/ 有/ 较/ 高/ 的/ 怀疑/ 度/ ./ 对于/ 每条/ 语句/ ,/ LOUPE/ 方法/ 以/ 给出/ 较/ 高/ 怀疑/ 度/ 的/ 模型/ 作为/ 适合/ 模型/ ,/ 并且/ 这/ 条/ 语句/ 的/ 怀疑/ 度/ 得分/ 就是/ 这个/ 模型/ 给出/ 的/ 怀疑/ 度值/ ./ 对于/ 语句/ s/ ,/ 它/ 的/ 怀疑/ 度/ 计算公式/ 如下/ :/ Loupe/ (/ s/ )/ =/ max/ (/ suspCDBug/ (/ s/ )/ ,/ suspDDBug/ (/ s/ )/ )/ ./ 动态/ 信息流/ 分析/ 是/ 一种/ 更加/ 重量级/ 的/ 方法/ ,/ 它/ 考虑/ 5/ 种/ 类型/ 的/ 依赖/ 关系/ :/ 动态/ 直接/ 控制/ 依赖/ 、/ 动态/ 直接/ 数据/ 依赖/ 和/ 3/ 种/ 过程/ 间/ 的/ 动态/ 依赖/ 关系/ ./ 由于/ 动态/ 信息流/ 分析/ 能够/ 识别/ 运行/ 时/ 程序/ 对象/ 之间/ 的/ 信息流/ ,/ 所以/ 也/ 可以/ 用来/ 建模/ 程序/ 元素/ 之间/ 复杂/ 的/ 交互作用/ ./ Masri/ 提出/ 了/ 一种/ 基于/ 动态/ 信息流/ 分析/ 的/ 错误/ 定位/ 方法/ [/ 28/ ]/ ./ 对于/ 信息流/ f/ ,/ 怀疑/ 度/ 计算公式/ 为/ Difa/ (/ f/ )/ =/ 最后/ ,/ 每条/ 可/ 执行/ 语句/ 被/ 赋予/ 流经/ 它/ 的/ 怀疑/ 度/ 最大/ 的/ 信息流/ 的/ 值/ ./ 而且/ ,/ 值得/ 怀疑/ 的/ 信息流/ 的/ 源/ 语句/ 应该/ 先于/ 这/ 条/ 信息流/ 上/ 的/ 其它/ 语句/ 被/ 检查/ ./ 3.1/ ./ 5/ 行为/ 特征/ 信息/ 的/ 精炼/ 尽管/ 研究/ 人员/ 已经/ 尝试/ 了/ 不同/ 的/ 怀疑/ 度/ 计算方法/ ,/ 使用/ 了/ 不同/ 类型/ 的/ 行为/ 特征/ ,/ 并/ 研发/ 了/ 不同/ 的/ 原型/ 工具/ ,/ 但是/ 由于/ 受到/ 很多/ 因素/ 的/ 影响/ ,/ 在实践中/ 基于/ 行为/ 特征/ 对比/ 的/ 方法/ 的/ 有效性/ 仍然/ 会/ 受到限制/ ./ Masri/ 等/ 人/ [/ 29/ ]/ 实验/ 研究/ 了/ 这类/ 方法/ 的/ 有效性/ 下降/ 的/ 4/ 个/ 场景/ ,/ 分别/ 是/ :/ 错误/ 条件/ 满足/ ,/ 但/ 程序/ 故障/ 并未/ 出现/ (/ 作者/ 称为/ 巧合/ 正确性/ )/ ;/ 错误/ 语句/ 被/ 执行/ ,/ 但/ 程序/ 故障/ 并未/ 出现/ (/ 作者/ 称为/ 弱/ 巧合/ 正确性/ )/ ;/ 程序/ 故障/ 和/ 不止/ 一个/ 的/ 不同/ 类型/ 的/ 程序/ 元素/ 的/ 组合/ 有关/ ;/ 以及/ 很多/ 程序/ 元素/ 不/ 在/ 通过/ 执行/ 中/ 出现/ ,/ 却/ 出现/ 在/ Page6/ 所有/ 的/ 失败/ 执行/ 中/ ./ 前/ 3/ 个/ 场景/ 可能/ 会/ 影响/ 错误/ 定位/ 技术/ 的/ 准确性/ ,/ 后/ 一个/ 会/ 影响/ 精确性/ ./ 实验/ 结论/ 是/ 弱/ 巧合/ 正确性/ 对/ 定位/ 技术/ 的/ 有效性/ 有/ 相当/ 大/ 的/ 影响/ ,/ 尤其/ 是/ 基于/ 语句/ 的/ ./ 此外/ ,/ 使用/ 多种/ 程序执行/ 特征/ 的/ 组合/ 很/ 可能/ 会/ 提高/ 定位/ 的/ 有效性/ ./ 为了/ 提高/ 定位/ 技术/ 的/ 有效性/ ,/ 研究/ 人员/ 提出/ 了/ 不同/ 的/ 精炼/ 的/ 方法/ ,/ 来/ 减少/ 各种因素/ (/ 主要/ 是/ 弱/ 巧合/ 正确性/ )/ 的/ 影响/ ./ 针对/ 弱/ 巧合/ 正确性/ ,/ Wang/ 等/ 人/ [/ 30/ ]/ 受后/ 向/ 动态/ 切片/ 的/ 启发/ ,/ 将/ 与/ 程序/ 输出/ 结果/ 无关/ 的/ 实体/ 的/ 覆盖/ 信息/ 剔除/ ,/ 以/ 精炼/ 程序执行/ 特征/ ./ 然而/ ,/ 后/ 向/ 动态/ 切片/ 不能/ 捕捉/ 诸如/ 遗漏/ 语句/ 这样/ 的/ 错误/ ./ 观察/ 表明/ 当/ 错误/ 语句/ 被/ 执行/ 并且/ 引发/ 程序/ 故障/ 时/ ,/ 执行/ 前后/ 的/ 动态控制/ 流/ 和/ 数据流/ 往往/ 与/ 特定/ 模式匹配/ ,/ 称为/ 上下文/ 模式/ ./ 事实上/ ,/ 后/ 向/ 切片/ 仅/ 使用/ 了/ 其中/ 的/ 一个/ 模式/ ,/ 即/ 失败/ 执行/ 输出/ 之间/ 存在/ 的/ 动态/ 依赖/ 关系/ ./ 然而/ ,/ 这个/ 模式/ 对于/ 其它/ 类型/ 的/ 错误/ 是/ 无效/ 的/ ,/ 比如/ 遗漏/ 语句/ 的/ 情形/ ./ 作者/ 推断/ 使用/ 一些/ 常用/ 的/ 上下文/ 模式/ 可以/ 用于/ 精炼/ 行为/ 特征/ 信息/ ./ 具体/ 地/ ,/ 他们/ 使用/ 事件/ 表达式/ 和/ 扩展/ 的/ 有限/ 状态机/ 描述/ 了/ 12/ 个/ 上下文/ 模式/ ./ 这些/ 模式/ 可以/ 用于/ 匹配/ 13/ 类/ 常见/ 的/ 错误/ 类型/ ./ 然后/ ,/ 程序执行/ 信息/ 被/ 精炼/ ,/ 使用/ 常用/ 的/ 怀疑/ 度/ 计算公式/ (/ 如/ Tarantula/ 公式/ )/ 计算/ 程序/ 实体/ 的/ 可疑/ 度/ ,/ 并/ 得到/ 错误/ 定位/ 报告/ ./ 之前/ 的/ 基于/ 行为/ 特征/ 对比/ 的/ 错误/ 定位/ 技术/ 通常/ 只/ 关注/ 于/ 评估/ 单个/ 的/ 程序/ 实体/ 的/ 怀疑/ 度/ ,/ 而/ 忽略/ 了/ 被/ 感染/ 的/ 程序/ 状态/ 在/ 它们/ 之间/ 的/ 传播/ ./ Zhang/ 等/ 人/ [/ 31/ ]/ 提出/ 使用/ 控制流/ 边/ 的/ 信息/ 来/ 表示/ 成功/ 执行/ 和/ 失败/ 执行/ ,/ 然后/ 比较/ 它们/ 的/ 差异/ 来/ 建模/ 每个/ 基本块/ 对于/ 程序/ 故障/ 的/ 贡献/ 程度/ ./ 具体来说/ ,/ 首先/ 计算/ 一条/ 控制流/ 边/ e/ 的/ 怀疑/ 度/ θ/ (/ e/ )/ ./ 然后/ ,/ 对于/ 每个/ 基本块/ bj/ ,/ 假设/ bk/ 是/ bj/ 的/ 一个/ 后继/ 块/ ,/ 使用/ W/ (/ bj/ ,/ bk/ )/ 来/ 表示/ 控制流/ 边/ (/ bj/ ,/ bk/ )/ 的/ 怀疑/ 度/ θ/ (/ bj/ ,/ bk/ )/ 占/ bk/ 的/ 所有/ 入边/ 怀疑/ 度/ 的/ 比例/ ,/ 则/ 可以/ 得到/ 描述/ 基本块/ bj/ 和/ 它/ 的/ 后继/ 块/ 之间/ 关系/ 的/ 等式/ :/ BR/ (/ bj/ )/ =/ ∑/ / edg/ (/ bj/ ,/ bk/ )/ 假设/ 共有/ n/ 个/ 基本块/ ,/ 则/ 可以/ 得到/ n/ 个/ 含/ n/ 元/ 变量/ 的/ 方程组/ ./ 这种/ 情况/ 下/ ,/ 方程组/ 满足/ 可解/ 的/ 必要条件/ ,/ 并/ 可以/ 用/ 已有/ 的/ 有效/ 算法/ 求解/ (/ 比如/ 高斯/ 消去法/ )/ ./ 在/ 求出/ 每个/ BR/ (/ bj/ )/ 的/ 怀疑/ 度后/ ,/ 每条/ 语句/ 的/ 怀疑/ 度/ 即/ 为/ 其/ 所在/ 基本块/ bj/ 的/ 怀疑/ 度/ ./ 3.2/ 基于/ 程序/ 状态/ 修改/ 的/ 方法/ 基于/ 程序/ 状态/ 修改/ 的/ 方法/ 通常/ 在/ 程序执行/ 时/ ,/ 获得/ 并/ 修改/ 程序/ 的/ 状态/ ,/ 然后/ 观察/ 修改/ 后/ 的/ 测试/ 结果/ (/ 成功/ // 失败/ )/ ,/ 进而/ 找出/ 对/ 测试/ 结果/ 有/ 影响/ 的/ 关键/ 谓词/ 或/ 语句/ ./ 由于/ 程序运行/ 时/ 的/ 状态/ 有/ 多种/ 可能/ ,/ 这/ 类/ 方法/ 往往/ 需要/ 采用/ 一些/ 简化/ 策略/ ,/ 提高/ 定位/ 的/ 效率/ ./ DeltaDebugging/ 方法/ [/ 8/ -/ 9/ ,/ 32/ ]/ 是/ 由/ Zeller/ 提出/ 的/ 一种/ 能/ 自动/ 缩小/ 程序/ 的/ 成功/ 运行/ 过程/ 和/ 失败/ 运行/ 过程/ 之间/ 区别/ 的/ 技术/ ./ 在/ 实现/ 层面/ ,/ 它/ 采用/ 分治/ 思想/ ,/ 把/ 软件/ 配置/ (/ 测试/ 输入/ 、/ 源程序/ 等/ )/ 变动/ 的/ 集合/ 进行/ 划分/ ,/ 然后/ 分别/ 进行/ 测试/ ,/ 结果/ 可以/ 为/ 通过/ 、/ 失败/ 和/ 无解/ ./ 然后/ 递归/ 地/ 把/ 导致/ 失败/ 配置/ 的/ 集合/ 并入/ 结果/ 为/ 通过/ 配置/ 的/ 集合/ ./ 通过/ 逐渐/ 减小/ 两个/ 集合/ 之间/ 的/ 差异/ ,/ 最终/ 确认/ 成功/ 配置/ 和/ 失败/ 配置/ 差别/ 的/ 一个/ 最小/ 子集/ ./ 它/ 的/ 首次/ 应用/ 是/ 处理/ 由于/ GDB/ 的/ 代码/ 变动/ 导致/ 的/ 可视化/ 调试/ 工具/ DDD/ 的/ 一个/ 故障/ ./ 在/ 2005/ 年/ ,/ DeltaDebugging/ 方法/ 被/ 应用/ 到/ 程序/ 状态/ 上/ ,/ 自动化/ 地/ 找出/ 导致/ 程序/ 失败/ 的/ 语句/ ./ 首先/ ,/ 通过/ 得到/ 程序/ 所有/ 变量/ 以及/ 它们/ 的/ 值/ 构成/ 的/ 集合/ ,/ 产生/ 程序/ 状态图/ ./ 进而/ ,/ 使用/ 计算/ 公共/ 子图/ 的/ 算法/ 来/ 识别/ 成功/ 与/ 失败/ 程序/ 状态/ 之间/ 的/ 差异/ ./ 最后/ ,/ 将/ 差异/ 应用/ 到/ 程序/ 状态/ ,/ 找到/ 导致/ 故障/ 的/ 变量/ ,/ 并/ 跟踪/ 这些/ 变量/ 的/ 值/ ,/ 一直/ 到/ 产生/ 错误/ 的/ 语句/ ./ 识别/ 对/ 运行/ 时/ 的/ 程序/ 状态/ 做/ 哪些/ 修改/ 可以/ 使得/ 失败/ 执行/ 变成/ 成功/ 执行/ 是/ 一种/ 通用/ 而且/ 有效/ 的/ 自动化/ 调试/ 方法/ ./ 然而/ 由于/ 程序/ 状态/ 的/ 数目/ 极其/ 巨大/ ,/ 漫无目的/ 搜索/ 所有/ 可能/ 的/ 程序/ 状态/ 的/ 变化/ 是/ 不/ 现实/ 的/ ./ Zhang/ 等/ 人/ [/ 14/ ]/ 的/ 研究/ 表明/ ,/ 在/ 运行/ 时/ 强制/ 对/ 一个/ 谓词/ 改变/ 取值/ 结果/ 并/ 因此/ 改变程序/ 的/ 控制流/ ,/ 不仅/ 代价/ 较/ 低/ ,/ 而且/ 往往/ 可以/ 使/ 一次/ 失败/ 执行/ 变成/ 成功/ 执行/ ./ 通过/ 检查/ 被/ 切换/ 的/ 谓词/ ,/ 也/ 就是/ 关键/ 谓词/ ,/ 可以/ 识别/ 故障/ 的/ 根源/ ./ 由于/ 一个/ 谓词/ 的/ 取值/ 只能/ 有/ 两种/ 可能/ ,/ 因此/ 需要/ 修改/ 的/ 状态/ 数要/ 远/ 小于/ 所有/ 可能/ 的/ 程序/ 状态/ 数/ ./ 实验/ 结果显示/ 这种/ 方法/ 既/ 实用/ 又/ 有效/ ./ 进一步/ 的/ 研究/ 表明/ 关于/ 关键/ 谓词/ 的/ 双向/ 的/ 动态/ 切片/ 可以/ 有效/ 地/ 捕捉/ 出错/ 的/ 代码/ ./ 改变/ 分支/ 的/ 取值/ 结果/ 是/ 改变/ 运行/ 时/ 变量/ 的/ 值/ 的/ 一种/ 特殊/ 情形/ ./ Jeffrey/ 等/ 人/ [/ 13/ ]/ 提出/ 了/ ValueRe/ -/ placement/ 方法/ :/ 首先/ 尝试/ 改变/ 运行/ 时/ 变量/ 的/ 值得/ 到/ 成功/ 用例/ ,/ 进而/ 将/ 这种/ 信息/ 用于/ 错误/ 定位/ ./ 具体/ 地/ ,/ 首先/ 寻找/ 感兴趣/ 的/ 变量/ 映射/ 对/ IVMP/ (/ InterestingValueMappingPair/ )/ ,/ 然后/ 对/ 包含/ IVMP/ 的/ 语句/ 使用/ Tarantula/ 公式/ 计算/ 怀疑/ 度值/ 并/ 进行/ 排序/ ./ IVMP/ 由/ 一个/ 变量/ 的/ 原始/ 值/ 和/ 替换/ 值/ 组成/ ,/ 并且/ 将/ 变量/ 更/ 改为/ 替换/ 值后/ 可以/ 将/ 一次/ 失败/ 执行/ 变成/ 通过/ 执行/ ./ Page7/ 给定/ 一次/ 失败/ 运行/ ,/ 寻找/ IVMP/ 的/ 方法/ 是/ 直接/ 的/ :/ 一次/ 只/ 考虑/ 一条/ 在/ 失败/ 运行/ 中/ 执行/ 的/ 语句/ ,/ 然后/ 将/ 使用/ 的/ 值/ 替换成/ 另/ 一个/ ,/ 并/ 观察/ 是否/ 会/ 产生/ 正确/ 结果/ ./ 为了/ 有效/ 地/ 获得/ IVMP/ ,/ 仅/ 考虑/ 了/ 4/ 种/ 类型/ 的/ 值/ 作为/ 替换/ 值/ ./ 实验/ 表明/ ,/ ValueReplacement/ 方法/ 可以/ 有效/ 地/ 定位/ 出错/ 语句/ 或/ 和/ 出错/ 语句/ 存在/ 直接/ 依赖/ 关系/ 的/ 语句/ ./ 3.3/ 基于/ 程序/ 依赖/ 关系/ 的/ 方法/ 基于/ 程序/ 依赖/ 关系/ 的/ 方法/ 侧重于/ 使用/ 程序/ 的/ 动态/ 依赖/ 关系/ 给出/ 值得/ 怀疑/ 的/ 语句/ 的/ 集合/ ,/ 这个/ 集合/ 除了/ 包含/ 错误/ 语句/ 外/ ,/ 还/ 提供/ 了/ 一个/ 供/ 程序员/ 理解/ 的/ 调试/ 上下文/ ./ 但/ 通常/ 这/ 类/ 集合/ 也/ 会/ 包含/ 一些/ 冗余/ 的/ 语句/ ,/ 需要/ 使用/ 一些/ 技术/ 来/ 化简/ 集合/ ./ 程序/ 切片/ [/ 3/ ]/ 最早/ 是/ 由/ Weiser/ 提出/ ,/ 用于/ 描述/ 影响/ 程序/ 某个/ 执行/ 点上/ 特定/ 变量/ 的/ 语句/ 集合/ ./ 后来/ 的/ 研究者/ 通过/ 考虑/ 不同/ 的/ 依赖/ 关系/ ,/ 以/ 解决/ 错误/ 定位/ 中/ 的/ 遇到/ 的/ 各种/ 问题/ ./ Zhang/ 等/ 人/ [/ 33/ ]/ 从/ 动态/ 角度/ 提出/ 隐式/ 依赖/ (/ implicitdependence/ )/ 的/ 概念/ ,/ 它/ 只会/ 将/ 已经/ 观测/ 到/ 的/ 发生/ 在/ 谓词/ 和/ 变量/ 使用/ 上/ 的/ 依赖/ 关系/ 加入/ 切片/ 中/ ./ Zhang/ 等/ 人/ 进一步/ 使用/ 一种/ 需求/ 驱动/ 的/ 策略/ 来/ 减小/ 探测/ 隐式/ 依赖/ 的/ 开销/ ./ 实验/ 表明/ ,/ 在/ 仅/ 增加/ 一小部分/ 的/ 检查和/ 很少/ 的/ 隐式/ 依赖/ 的/ 情况/ 下/ ,/ 就/ 可以/ 有效/ 地/ 捕捉/ 遗漏/ 语句/ 这种/ 类型/ 的/ 错误/ ./ 为了/ 减小/ 动态/ 切片/ 的/ 规模/ ,/ 研究者/ 提出/ 了/ 许多种/ 化简/ 策略/ ./ Gupta/ 等/ 人/ [/ 34/ ]/ 整合/ 了/ DeltaDebugging/ 技术/ 以及/ 前/ 、/ 后/ 向/ 切片/ 的/ 优势/ 用于/ 缩小/ 搜索/ 出错/ 代码/ 的/ 范围/ ./ 他们/ 首先/ 使用/ DeltaDebugging/ 技术/ 来/ 识别/ 一个/ 最小化/ 的/ 故障/ 相关/ 的/ 输入/ ,/ 然后/ 基于/ 这个/ 输入/ 计算/ 动态/ 前向/ 切片/ 并/ 与/ 以/ 错误/ 输出/ 为/ 准则/ 产生/ 的/ 动态/ 后/ 向/ 切片/ 取/ 交集/ ,/ 作为/ 引发/ 故障/ 的/ 砍/ 片/ (/ chop/ )/ ./ 实验/ 表明/ ,/ 引发/ 故障/ 的/ 砍/ 片/ 和/ 动态/ 切片/ 比/ ,/ 规模/ 有/ 了/ 极大/ 的/ 减小/ 同时/ 并未/ 显著/ 降低/ 定位/ 错误代码/ 的/ 能力/ ./ Zhang/ 等/ 人/ [/ 35/ ]/ 观察/ 到/ 失败/ 执行/ 中/ 出现/ 的/ 语句/ 也/ 有/ 可能/ 卷入/ 到/ 成功/ 执行/ 中/ ./ 因此/ 他们/ 使用/ 值/ 的/ 概要/ 分析/ 文件/ (/ valueprofile/ )/ 来/ 计算/ 每条/ 可/ 执行/ 语句/ 的/ 信赖/ 度值/ ,/ 数值/ 越大/ 表明/ 语句/ 产生/ 正确/ 值/ 的/ 概率/ 越大/ ./ 进一步/ 的/ 实验/ 表明/ ,/ 给定/ 程序/ 故障/ 的/ 一个/ 失败/ 运行/ ,/ 通过/ 只/ 剪除/ 信赖/ 度值/ 为/ 1/ 的/ 语句/ 就/ 可以/ 有效/ 地/ 缩减/ 动态/ 切片/ 的/ 规模/ ,/ 同时/ 将/ 出错/ 语句/ 保留/ 在/ 切片/ 内/ ./ 此外/ ,/ 研究/ 发现/ 以/ 信赖/ 度值/ 递增/ 的/ 方式/ 检查/ 语句/ 是/ 一个/ 有效/ 的/ 降低/ 错误/ 定位/ 成本/ 的/ 策略/ ./ Baah/ 等/ 人/ [/ 36/ ]/ 扩展/ 了/ 程序/ 依赖图/ ,/ 通过/ 测试用例/ 的/ 执行/ 信息估计/ 节点/ 间/ 的/ 统计/ 依赖/ ,/ 建立/ 了/ 概率/ 程序/ 依赖图/ PPDG/ (/ ProbabilisticProgramDepend/ -/ enceGraph/ )/ ./ 它/ 基于/ 概率/ 图/ 模型/ 的/ 框架/ ,/ 首先/ 产生/ 程序/ 依赖图/ ,/ 然后/ 得到/ 标记/ 了/ 子/ 节点/ 和/ 父/ 节点/ 之间/ 条件/ 概率/ 的/ 变换/ 程序/ 依赖图/ ./ 同时/ ,/ 插桩/ 源程序/ 得到/ 测试用例/ 的/ 执行/ 信息/ ./ 通过/ 学习/ 执行/ 信息/ 中/ 的/ 数据/ ,/ 最终/ 得到/ PPDG/ ./ PPDG/ 可以/ 有/ 多种/ 应用/ ,/ 包括/ 错误/ 定位/ 和/ 错误/ 理解/ ./ 在/ 用于/ 错误/ 定位/ 时/ ,/ 首先/ 使用/ PP/ -/ DG/ 分析/ 一次/ 失败/ 执行/ 的/ 信息/ ,/ 然后/ 对/ PPDG/ 上/ 的/ 节点/ 按照/ 怀疑/ 度/ 进行/ 排序/ ./ 一个/ 节点/ 的/ 条件/ 概率/ 值/ 被/ 认为/ 是/ 它/ 的/ 怀疑/ 度/ ,/ 基于/ 其父/ 节点/ 的/ 值/ 计算/ 得到/ ,/ 条件/ 概率/ 值越/ 低/ ,/ 怀疑/ 度越/ 高/ ./ 由于/ PPDG/ 直观/ 上/ 显示/ 了/ 失败/ 执行/ 和/ 成功/ 执行/ 的/ 不同/ ,/ 并/ 提供/ 了/ 相关/ 的/ 上下文/ 信息/ ,/ 因此/ 可以/ 用于/ 辅助/ 理解/ 为什么/ 某个/ 特定/ 语句/ 是/ 值得/ 怀疑/ 的/ ./ 与/ PPDG/ 学习/ 的/ 是/ 程序/ 中/ 每个/ 语句/ 的/ 依赖/ 关系/ 的/ 分布/ 不同/ ,/ Feng/ 和/ Gupta/ 为/ 每种/ 指令/ 类型/ 建立/ 了/ 通用/ 模型/ [/ 37/ ]/ ./ 给定/ 一组/ 程序/ 的/ 执行/ 轨迹/ ,/ 并/ 包括/ 至少/ 一个/ 成功/ 执行/ 和/ 至少/ 一个/ 失败/ 执行/ ,/ 可以/ 基于/ 动态/ 依赖图/ 建立/ 基于/ 贝叶斯/ 网络/ 的/ 错误/ 流图/ (/ ErrorFlowGraph/ )/ 和/ 通用/ 的/ 概率模型/ ./ 然后/ 使用/ 标准/ 的/ 推理/ 算法/ 从叶/ 节点/ 沿着/ 错误/ 流后/ 向/ 追溯/ 寻找/ 出错/ 可能性/ 最大/ 的/ 可/ 执行/ 语句/ ./ 实验/ 表明/ ,/ 即使/ 只/ 使用/ 很少/ 的/ 成功/ 执行/ ,/ 错误/ 流图/ 依然/ 可以/ 有效/ 地/ 定位/ 错误/ ./ 4/ 错误/ 定位/ 技术/ 的/ 有效性/ 度量/ 4.1/ 错误/ 定位/ 技术/ 的/ 评测/ 标准/ 数据/ 集/ 4.1/ ./ 1SiemensSuiteSiemensSuite/ 最早/ 是/ 为了/ 研究/ 控制流/ 和/ 数据流/ 的/ 准则/ 对于/ 错误/ 探测/ 能力/ 的/ 影响/ 而/ 创建/ 的/ [/ 38/ ]/ ./ 它/ 包含/ 7/ 组/ 实现/ 不同/ 功能/ 的/ C/ 程序/ ,/ 每组/ 程序/ 通过/ 人工/ 注入/ 的/ 方式/ 创建/ 了/ 基本/ 程序/ 的/ 错误/ 版本/ ,/ 这些/ 错误/ 通常/ 通过/ 修改/ 程序/ 中/ 的/ 一行/ 代码/ 来/ 注入/ ,/ 包括/ 语句/ 的/ 增删/ 以及/ 判断/ 条件/ 的/ 修改/ 等/ ,/ 以/ 模拟/ 实际/ 中/ 可能/ 存在/ 的/ 错误/ ./ 最终/ 对于/ 每个/ 基本/ 程序/ 产生/ 了/ 7/ ~/ 41/ 个/ 不同/ 的/ 错误/ 版本/ ,/ 每个/ 版本/ 中/ 包含/ 有/ 1/ 个/ 错误/ ./ 同时/ ,/ 研究/ 人员/ 基于/ 对于/ 程序/ 功能/ 的/ 理解/ 和/ 边界/ 分析/ ,/ 创建/ 了/ 相应/ 的/ 测试用例/ ./ SiemensSuite/ 自从/ 2003/ 年/ 被/ 引入/ 用于/ 评价/ NNQ/ 法/ 的/ 有效性/ 后/ ,/ 被/ 广泛/ 采用/ 以/ 评估/ 错误/ 定位/ 技术/ 的/ 有效性/ ./ 4.1/ ./ 2/ 其它/ 大型/ 的/ C/ // C++/ 程序/ 由于/ SiemensSuite/ 包含/ 的/ 程序/ 规模/ 都/ 较/ 小/ ,/ 而且/ 错误/ 是/ 人工/ 注入/ 的/ ,/ 它/ 不能/ 代表/ 大型/ 程序/ 中/ 出现/ 的/ 真实/ 错误/ 的/ 特征/ ./ 因此/ ,/ 其它/ 的/ 大型/ 的/ C/ // C++/ 程序/ 也/ 常用/ 于/ 错误/ 定位/ 技术/ 的/ 有效性/ 评价/ 中/ ./ SpacePage8/ 是/ 一个/ 为/ 欧洲航天局/ 开发/ 的/ 关于/ 数组/ 定义语言/ 的/ 解释器/ 程序/ [/ 39/ ]/ ./ 它/ 包含/ 6218/ 行可/ 执行/ 代码/ ,/ 相应/ 的/ 13585/ 个/ 测试用例/ ,/ 并/ 拥有/ 38/ 个/ 关联/ 版本/ ,/ 每/ 一个/ 版本/ 都/ 包含/ 一个/ 在/ 程序开发/ 过程/ 中/ 被/ 发现/ 的/ 错误/ ./ UniversityofNebraska/ 的/ 研究/ 人员/ [/ 40/ ]/ 从/ GNUSoftware/ 中/ 选取/ 了/ 一些/ 工具/ (/ 包括/ flex/ 、/ grep/ 、/ gzip/ 、/ make/ 、/ sed/ 、/ bash/ 和/ vim/ )/ 并/ 注入/ 了/ 一些/ 回归/ 错误/ 用于/ 错误/ 定位/ 的/ 研究/ ./ 这些/ 工具/ 及其/ 测试用例/ 以及/ Space/ 程序/ 和/ SiemensSuite/ 都/ 可以/ 从/ SIR/ (/ http/ :/ // // sir/ ./ unl/ ./ edu/ // content/ // sir/ ./ html/ )/ 网站/ 获得/ ./ 在/ 错误/ 定位/ 的/ 研究/ 中/ ,/ 研究者/ 还/ 使用/ 了/ 其它/ 的/ 一些/ C/ // C++/ 程序/ ,/ 包括/ :/ Ali/ 等/ 人/ [/ 41/ ]/ 在/ 进行/ 错误/ 定位/ 技术/ 有效性/ 的/ 研究/ 时/ ,/ 创建/ 了/ concordance/ (/ 词汇/ 索引/ 工具/ ,/ 源程序/ 包括/ 2354/ 行/ )/ 的/ 13/ 个/ 错误/ 版本/ 和/ 372/ 个/ 测试用例/ ./ Liblit/ 等/ 人/ [/ 21/ ,/ 42/ ]/ 首先/ 报告/ 了/ bc/ (/ 数值/ 处理/ 计算/ 程序/ ,/ 源程序/ 包括/ 14288/ 行/ )/ 存在/ 的/ 一个/ 缓冲区/ 溢出/ 错误/ ./ 随后/ ,/ Liu/ 等/ 人/ 在/ 使用/ SOBER/ 进行/ 错误/ 定位/ 的/ 研究/ 时/ ,/ 随机/ 产生/ 了/ 4000/ 个/ 测试用例/ ,/ 并/ 发现/ 了/ 两个/ 未曾/ 报告/ 的/ 程序/ 缺陷/ ./ Liblit/ 等/ 人/ 还/ 研究/ 了/ rhythmbox/ (/ 音乐/ 播放/ 和/ 管理软件/ ,/ 源程序/ 包括/ 56484/ 行/ )/ ./ 他们/ 随机/ 产生/ 了/ 32000/ 个/ 随机/ 测试用例/ ,/ 并/ 报告/ 了/ 两个/ 错误/ ./ Jiang/ 和/ Su/ [/ 43/ ]/ 在/ 进行/ 上下文/ 相关/ 的/ 统计/ 调试/ 的/ 研究/ 中/ ,/ 又/ 发现/ 了/ 两个/ 未知/ 的/ 错误/ ./ 4.1/ ./ 3JAVA/ 程序/ 用于/ 错误/ 定位/ 研究/ 的/ JAVA/ 程序/ 主要/ 包括/ :/ NanoXML/ (/ 小型/ 的/ XML/ 解析器/ ,/ 源程序/ 包含/ 7646/ 行/ )/ ,/ 包含/ 6/ 个/ 版本/ 以及/ 共/ 33/ 个/ 已知/ 的/ 错误/ ./ XML/ -/ security/ (/ XML/ 数字签名/ 工具/ ,/ 源程序/ 包含/ 16800/ 行/ )/ 和/ Ant/ (/ 基于/ Java/ 的/ 构建/ 工具/ ,/ 源程序/ 包含/ 80500/ 行/ )/ 以及/ 它们/ 开发/ 时/ 的/ JUnit/ 测试/ 组件/ ./ 这/ 3/ 个/ 程序/ 都/ 可以/ 从/ SIR/ 网站/ 获得/ ./ 此外/ ,/ 常用/ 的/ 基准/ 集/ 还有/ AspectJ/ (/ JAVA/ 语言/ 的/ 面向/ 方面/ 的/ 扩展/ ,/ 源程序/ 约/ 75000/ 行/ )/ ,/ 它/ 是/ 由/ Dallmeier/ 和/ Zimmer/ -/ mann/ 开发/ 的/ iBUGS/ 工具/ [/ 44/ ]/ ,/ 从/ AspectJ/ 的/ 项目/ 历史/ 中/ 抽取/ 出/ 的/ ,/ 共有/ 369/ 个/ 开发/ 过程/ 中/ 的/ 程序/ 错误/ ,/ 其中/ 223/ 个/ 有/ 相关联/ 的/ 测试用例/ ./ 4.2/ 错误/ 定位/ 技术/ 的/ 评价/ 标准/ 4.2/ ./ 1/ 基于/ 程序/ 依赖图/ 的/ 评价/ 标准/ [/ 10/ ]/ Renieres/ 和/ Reiss/ [/ 22/ ,/ 31/ ]/ 最早/ 提出/ 了/ 基于/ 程序/ 依赖图/ 的/ 评价/ 标准/ ,/ 也/ 被/ 称为/ T/ -/ score/ ./ 他们/ 假设/ 错误/ 定位/ 报告/ 的/ 使用者/ 会/ 从/ 报告/ 中/ 包含/ 的/ 语句/ 开始/ ,/ 沿着/ 程序/ 依赖/ 关系/ ,/ 对/ 源程序/ 进行/ 广度/ 优先/ 的/ 搜索/ ./ 理想/ 的/ 场景/ 是/ 用户/ 看到/ 了/ 出错/ 语句/ 后/ 就/ 会/ 识别/ 出/ 程序/ 错误/ 并/ 停止/ 审查/ 源代码/ ./ 错误/ 定位/ 技术/ 的/ 得分/ 即/ 定义/ 为/ 用户/ 找到/ 出错/ 语句/ 时/ ,/ 未/ 被/ 用户/ 审查/ 到/ 的/ 代码/ 占/ 所有/ 代码/ 的/ 百分比/ ./ 得分/ 越高/ ,/ 表明/ 错误/ 定位/ 技术/ 越/ 有效/ ,/ 对于/ 用户/ 精确定位/ 错误/ 越有/ 帮助/ ./ Cleve/ 和/ Zeller/ [/ 8/ ]/ 指出/ ,/ T/ -/ score/ 假设/ 程序员/ 能够/ 在/ 任意/ 位置/ 区分/ 错误/ 和/ 正常/ 语句/ ,/ 并且/ 在/ 每次/ 定位/ 中/ 代价/ 都/ 是/ 一样/ 的/ ./ 然而/ ,/ 现实/ 中/ ,/ 有些/ 错误/ 比较/ 容易/ 发现/ ,/ 而/ 有些/ 则/ 并非如此/ ,/ 这种/ 差别/ T/ -/ score/ 并/ 没有/ 考虑/ ./ 同样/ ,/ 程序员/ 也/ 并/ 不/ 总是/ 能/ 很/ 容易/ 地/ 辨别/ 错误/ 和/ 正常/ 语句/ ./ 4.2/ ./ 2/ 基于/ 语句/ 排名/ 的/ 评价/ 标准/ [/ 11/ ]/ Jones/ 和/ Harrold/ 在/ 比较/ Tarantula/ 技术/ 和/ 其它/ 错误/ 定位/ 技术/ 的/ 有效性/ 时/ 提出/ 了/ 基于/ 语句/ 排名/ 的/ 评价/ 标准/ ./ 由于/ Tarantula/ 产生/ 一个/ 对/ 所有/ 可/ 执行/ 语句/ 怀疑/ 度/ 的/ 排名/ ,/ 开发者/ 被/ 假设/ 从/ 排序/ 列表/ 顶部/ 按/ 怀疑/ 度/ 从/ 大到/ 小/ 逐句/ 地/ 检查/ 直到/ 错误/ 被/ 发现/ ,/ 未/ 被/ 检查/ 到/ 的/ 语句/ 占/ 所有/ 语句/ 的/ 百分比/ 定义/ 为/ 错误/ 定位/ 技术/ 的/ 得分/ ./ 显然/ ,/ 基于/ 语句/ 排序/ 评价/ 标准/ 与/ 基于/ 程序/ 依赖图/ 的/ 评价/ 标准/ 假设/ 了/ 不同/ 的/ 代码/ 检查/ 策略/ ./ 直觉/ 上/ ,/ 基于/ 程序/ 依赖图/ 的/ 方法/ 可能/ 更/ 接近/ 实际/ ./ 但/ 由于/ 大多/ 错误/ 定位/ 技术/ 通常/ 会/ 产生/ 一个/ 可/ 执行/ 语句/ 的/ 怀疑/ 度/ 列表/ ,/ 因此/ ,/ 基于/ 语句/ 排名/ 的/ 评价/ 标准/ 被/ 广泛/ 使用/ ./ 4.2/ ./ 3/ 基于/ 基本块/ 排名/ 的/ 评价/ 标准/ [/ 45/ ]/ Abreu/ 等/ 人/ 提出/ 了/ 一种/ 基于/ 基本块/ 排名/ 的/ 评价/ 标准/ :/ 考虑/ 在/ 找到/ 出错/ 的/ 基本块/ 前/ ,/ 需要/ 检查/ 多少/ 基本块/ ,/ 这/ 和/ 上述/ 基于/ 语句/ 排名/ 的/ 思想/ 类似/ ./ 但/ 在/ 具体/ 细节/ 上/ ,/ 他们/ 定义/ 需要/ 检查/ 的/ 基本块/ 的/ 数目/ ,/ 就是/ 所有/ 比/ 出错/ 基本块/ 怀疑/ 度大/ 的/ 和/ 不/ 低于/ 出错/ 基本块/ 怀疑/ 度/ 的/ 基本块/ 数目/ 的/ 和/ 的/ 一半/ ,/ 然后/ 使用/ 未/ 被/ 检查/ 的/ 基本块/ 的/ 百分比/ 来/ 定义/ 错误/ 定位/ 技术/ 的/ 得分/ ./ 4.2/ ./ 4/ 基于/ 谓词/ 排名/ 的/ 评价/ 标准/ [/ 46/ ]/ Zhang/ 等/ 人/ 在/ 衡量/ 非/ 参数检验/ 的/ 错误/ 定位/ 技术/ 的/ 有效性/ 时/ ,/ 提出/ 了/ 基于/ 谓词/ 排名/ 的/ 评价/ 标准/ ,/ 也/ 称为/ P/ -/ score/ ./ 对于/ 以/ 谓词/ 可疑/ 度/ 降序/ 排列/ 形式/ 给出/ 的/ 错误报告/ ,/ 首先/ 标记/ 程序/ 中/ 和/ 错误/ 最/ 接近/ 的/ 谓词/ 为/ 出错/ 最/ 相关/ 谓词/ ./ 然后/ 定义/ 错误/ 定位/ 技术/ 的/ 得/ 分为/ 检查/ 到/ 出错/ 最/ 相关/ 谓词/ 时/ ,/ 已/ 检查/ 的/ 谓词/ 占/ 列表/ 上/ 所有/ 谓词/ 的/ 百分比/ ./ 这个/ 标准/ 适用/ 于/ 产生/ 谓词/ 怀疑/ 度/ 列表/ 的/ 错误/ 定位/ 技术/ ./ 4.2/ ./ 5/ 基于/ 查全率/ 的/ 评价/ 标准/ [/ 30/ ]/ Wang/ 等/ 人/ 在/ 研究/ 通过/ 精炼/ 覆盖/ 信息/ 提高/ 基于/ 行为/ 特征/ 对比/ 的/ 错误/ 定位/ 技术/ 的/ 有效性/ 时/ ,/ 提出/ 使/ Page9/ 用/ 信息检索/ 中/ 的/ 查全率/ 的/ 概念/ 来/ 衡量/ 可疑/ 语句/ 的/ 集合/ 包含/ 真正/ 出错/ 语句/ 的/ 概率/ ./ 具体/ 如下/ :/ 假设/ 程序员/ 最多会/ 检查/ 错误/ 定位/ 报告/ 中前/ k/ %/ 的/ 语句/ ,/ 简称/ 为/ k/ -/ 策略/ ./ 实验/ 研究/ 中/ 的/ 错误/ 版本/ 数为/ N/ ,/ 使用/ k/ -/ 策略/ 检查/ 会/ 发现/ 有/ Nk/ 个/ 版本/ 包含/ 错误/ 语句/ ./ 则/ 错误/ 定位/ 技术/ 的/ 得分/ 即/ 定义/ 为/ Nk/ 与/ N/ 的/ 比例/ ./ 5/ 未来/ 研究/ 趋势/ 5.1/ 测试/ 组件/ 的/ 影响/ 测试/ 组件/ (/ testsuite/ )/ 的/ 组成/ 会/ 对/ 错误/ 定位/ 技术/ 的/ 有效性/ 产生/ 影响/ ./ 当前/ 的/ 错误/ 定位/ 技术/ 通常/ 假设/ 测试用例/ 集/ 满足/ 测试/ 充分性/ 准则/ ,/ 足以/ 满足/ 错误/ 定位/ 的/ 需要/ ./ 然而/ ,/ 这个/ 假设/ 既/ 没有/ 被/ 实验/ 验证/ 过/ 又/ 缺乏/ 直观/ 的/ 考虑/ ./ 事实上/ ,/ 减少/ 测试/ 工作量/ 意味着/ 产生/ 一个/ 满足/ 准则/ 的/ 最小/ 测试用例/ 集/ ./ 然而/ ,/ 错误/ 定位/ 技术/ 又/ 需要/ 尽可能/ 多/ 的/ 测试用例/ 的/ 执行/ 信息/ ./ 为了/ 解决/ 这个/ 两难/ 问题/ ,/ Baudry/ 等/ 人/ [/ 47/ ]/ 通过/ 分析/ 用于/ 有效/ 错误/ 定位/ 时/ 所/ 需/ 的/ 信息/ 类型/ ,/ 识别/ 出/ 动态/ 基本块/ 对于/ 定位/ 算法/ 准确性/ 的/ 影响/ ,/ 并/ 基于/ 动态/ 基本块/ ,/ 提出/ 了/ 用于/ 诊断/ 的/ 测试/ (/ Test/ -/ For/ -/ Diagnosis/ ,/ TFD/ )/ 准则/ ./ 因此/ ,/ 减少/ 测试用例/ 数/ 和/ 提高/ 错误/ 定位/ 有效性/ 的/ 两难/ 问题/ ,/ 可以/ 通过/ 挑选/ 专门/ 用于/ 定位/ 的/ 测试用例/ 子集/ 得到/ 部分/ 的/ 解决/ ./ Yu/ 等/ 人/ [/ 48/ ]/ 实验/ 研究/ 了/ 测试/ 组件/ 的/ 缩减/ 对/ 定位/ 有效性/ 的/ 影响/ ./ 结果表明/ 错误/ 定位/ 技术/ 的/ 有效性/ 取决于/ 所/ 使用/ 的/ 缩减/ 策略/ ./ 此外/ ,/ Jiang/ 等/ 人/ [/ 49/ ]/ 还/ 研究/ 了/ 测试/ 组件/ 的/ 优先级/ 技术/ (/ testcaseprioritization/ )/ 对/ 基于/ 行为/ 特征/ 对比/ 的/ 定位/ 技术/ 有效性/ 的/ 影响/ ./ 5.2/ 多个/ 缺陷/ 的/ 定位/ 错误/ 定位/ 技术/ 通常/ 假设/ 出错/ 程序/ 中/ 只/ 包含/ 一个/ 缺陷/ ,/ 而/ 实际/ 情况/ 并非如此/ ./ 多个/ 缺陷/ 的/ 存在/ 可能/ 从/ 两/ 方面/ 影响/ 错误/ 定位/ 技术/ 的/ 有效性/ :/ 一是/ 当/ 程序/ 出错/ 时/ ,/ 缺陷/ 的/ 数目/ 通常/ 是/ 未知/ 的/ ;/ 二是/ 某些/ 缺陷/ 可能/ 会/ 掩盖/ 或/ 混淆/ 其它/ 缺陷/ ./ 近年来/ ,/ 研究者/ 对/ 如何/ 定位/ 包含/ 多个/ 缺陷/ 的/ 错误/ 程序/ 进行/ 了/ 研究/ ./ Jones/ 等/ 人/ [/ 50/ ]/ 提出/ 了/ 并行/ 调试/ 的/ 模型/ ,/ 通过/ 自动化/ 的/ 产生/ 面向/ 单个/ 错误/ 的/ 专门/ 的/ 测试/ 组件/ ,/ 为/ 多个/ 开发人员/ 同时/ 调试/ 包含/ 多重/ 缺陷/ 的/ 程序/ 提供/ 了/ 一种/ 途径/ ./ 与/ Jones/ 等/ 人仅/ 使用/ 程序/ 特征/ 行为/ 的/ 信息/ 不同/ ,/ Abreu/ 等/ 人/ [/ 51/ ]/ 提出/ 了/ 一种/ 包含/ 逻辑推理/ 的/ 混合/ 框架/ ./ 他们/ 既/ 使用/ 了/ 程序执行/ 的/ 特征/ 信息/ ,/ 又/ 使用/ 贝叶斯/ 推理/ 来/ 推断/ 存在/ 多个/ 缺陷/ 时/ 值得/ 怀疑/ 的/ 程序/ 实体/ 以及/ 它们/ 的/ 可疑/ 度/ 的/ 大小/ ./ 使用/ 贝叶斯/ 推理/ 的/ 一个/ 特性/ 是/ 它/ 可以/ 很/ 好/ 地/ 解释/ 多个/ 缺陷/ 为何/ 间歇/ 的/ 出现/ 而/ 导致/ 程序/ 出错/ ./ 5.3/ 定位/ 结果/ 的/ 理解/ 大多数/ 现有/ 的/ 错误/ 定位/ 技术/ 侧重于/ 识别/ 和/ 报告/ 单个/ 可能/ 包含/ 缺陷/ 的/ 语句/ ./ 然而/ ,/ 即使/ 在/ 程序/ 故障/ 只是/ 由/ 单个/ 语句/ 引起/ 的/ 情况/ 下/ ,/ 一般/ 也/ 很/ 难仅/ 通过/ 查看/ 这/ 条/ 语句/ 来/ 理解/ 错误/ 的/ 产生/ ./ 故障/ 通常/ 会/ 在/ 一个/ 特定/ 的/ 上下文/ 显露出来/ ,/ 而/ 知道/ 这些/ 上下文/ 对于/ 诊断/ 和/ 修正/ 错误/ 是/ 必要/ 的/ ./ Hsu/ 等/ 人/ [/ 52/ ]/ 提出/ 了/ 一种/ 识别/ 导致/ 程序/ 故障/ 的/ 语句/ 序列/ 的/ 定位/ 技术/ :/ 分析/ 失败/ 执行/ 对应/ 的/ 部分/ 执行/ 轨迹/ 并/ 增量/ 地/ 识别/ 其中/ 的/ 公共/ 序列/ ./ 这/ 可以/ 为/ 开发者/ 提供/ 一个/ 更/ 直接/ 的/ 理解/ 错误/ 的/ 上下文/ ,/ 从而/ 降低/ 调试/ 成本/ ./ 与/ 他们/ 不同/ ,/ Cheng/ 等/ 人/ [/ 53/ ]/ 通过/ 判别/ 图/ 挖掘/ 来/ 进行/ 错误/ 定位/ 和/ 相关/ 上下文/ 的/ 识别/ ./ 他们/ 在/ 方法/ 和/ 基本块/ 两个/ 粒度/ 建立/ 程序执行/ 模型/ ,/ 其中/ 节点/ 表示/ 方法/ 或/ 基本块/ ,/ 边/ 表示/ 相应/ 的/ 调用/ 、/ 转移/ 或/ 返回/ ./ 给定/ 一组/ 成功/ 执行/ 和/ 失败/ 执行/ ,/ 通过/ 比较/ 不同/ 执行/ 中/ 的/ 程序/ 流/ ,/ 从中/ 提取/ 出/ 最/ 有/ 区别/ 力/ 的/ 子/ 图/ ./ 提取/ 的/ 子/ 图/ 不仅/ 定位/ 了/ 错误/ ,/ 还/ 提供/ 了/ 包含/ 丰富/ 信息/ 的/ 用于/ 理解/ 和/ 修复/ 错误/ 的/ 上下文/ ./ Jiang/ 和/ Su/ [/ 43/ ]/ 构建/ 了/ 程序/ 错误/ 相关/ 的/ 控制流/ 路径/ 用来/ 理解/ 定位/ 结果/ ./ 他们/ 的/ 方法/ 包括/ 特征选择/ (/ 准确/ 的/ 选择/ 和/ 故障/ 有关/ 的/ 谓词/ )/ 、/ 聚类/ (/ 将/ 相关/ 的/ 谓词/ 分组/ )/ 和/ 控制流/ 图/ 的/ 遍历/ 3/ 个/ 阶段/ ./ 5.4/ 错误/ 修复/ 的/ 建议/ 能够/ 自动化/ 定位/ 和/ 修正/ 错误/ 的/ 工具/ 将/ 显著/ 地/ 降低/ 软件开发/ 成本/ ./ He/ 和/ Gupta/ [/ 54/ ]/ 使用/ 基于/ 路径/ 的/ 最弱/ 前置条件/ 来/ 自动/ 地/ 产生/ 如何/ 修改/ 一个/ 函数/ 中/ 出错/ 语句/ 的/ 建议/ ./ 这种/ 方法/ 假设/ 了/ 错误/ 函数/ 的/ 正确/ 规约/ 是/ 可/ 得/ 的/ ,/ 并/ 以/ 前置条件/ 和/ 后置/ 条件/ 的/ 形式/ 书写/ ./ 与/ 此/ 不同/ ,/ Jeffrey/ 等/ 人/ [/ 55/ ]/ 开发/ 的/ BugFix/ 工具/ 只/ 需要/ 一个/ 出错/ 程序/ 和/ 至少/ 一个/ 失败/ 的/ 测试用例/ ./ 它/ 自动/ 分析/ 某条/ 语句/ 上/ 的/ 调试/ 情况/ ,/ 并/ 提供/ 相关/ 修复/ 建议/ 的/ 优先级/ 列表/ ,/ 用以/ 指导/ 程序员/ 选取/ 适当/ 的/ 修复/ 方式/ ./ BugFix/ 使用/ 机器/ 学习/ 的/ 方法/ 自动/ 的/ 从/ 过去/ 的/ 修复/ 和/ 新/ 遇到/ 的/ 调试/ 情形/ 中/ 学习/ ./ 在/ 修复/ 中/ ,/ Bug/ -/ Fix/ 同时/ 使用/ 了/ 程序/ 的/ 静态/ 结构/ 、/ 语句/ 在/ 成功/ 和/ 失败/ 执行/ 中/ 的/ 使用/ 的/ 动态/ 值/ 以及/ 和/ 语句/ 关联/ 的/ 感兴趣/ 的/ 变量/ 映射/ 对/ 信息/ ./ 与/ 之/ 不同/ ,/ Weimer/ 等/ 人/ [/ 56/ ]/ 使用/ 自/ 适应/ 的/ 搜索/ 方法/ 系统地/ 使用/ 增加/ 、/ 交换/ 和/ 删除/ 语句/ 的/ 操作/ ,/ 对/ 一个/ 出错/ 的/ C/ 程序/ 进行/ 变异/ ,/ 直到/ 它/ 既/ 能/ 满足需要/ 的/ 功能/ ,/ 又/ 能/ 不再/ 产生/ 之前/ 的/ 错误/ ./ 对于/ 面向对象/ 的/ 程序/ ,/ Dallmeier/ 等/ 人/ [/ 57/ ]/ 开发/ 了/ PACHIKA/ 工具/ ./ PACHIKA/ 工具/ 首先/ 在/ 失败/ 用例/ Page10/ 集/ 和/ 通过/ 用例/ 集上/ 挖掘/ 对象/ 行为/ 模型/ ,/ 然后/ 通过/ 比较/ 模型/ 的/ 差异/ ,/ 产生/ 修复/ 候选/ 集/ ./ 最后/ ,/ 通过/ 执行/ 整个/ 回归/ 测试用例/ 集/ 并/ 比较/ 运行/ 结果/ ,/ 验证/ 一个/ 修复/ 是否/ 为/ 有效/ 的/ 修复/ ,/ 并/ 将/ 有效/ 修复/ 提供/ 给/ 开发者/ ./ 6/ 结束语/ 本文/ 从/ 技术/ 基础/ 、/ 评估/ 手段/ 以及/ 研究/ 趋势/ 三/ 方面/ 对/ 现有/ 的/ 自动化/ 错误/ 定位/ 技术/ 进行/ 了/ 总结/ ./ 自动化/ 错误/ 定位/ 技术/ 在/ 过去/ 十年间/ 取得/ 了/ 长足/ 的/ 进步/ ,/ 但/ 仍/ 有/ 很多/ 问题/ 需要/ 研究/ ,/ 例如/ 缺乏/ 用户/ 研究/ 来/ 理解/ 开发者/ 是/ 如何/ 调试/ 的/ [/ 58/ ]/ ;/ 现有/ 的/ 评测/ 标准/ 数据/ 集/ 不能/ 完全/ 反映/ 现代/ 语言/ 中/ 缺陷/ 的/ 存在/ 和/ 表现/ 情况/ ;/ 错误/ 定位/ 技术/ 不能/ 很/ 好/ 地/ 与/ 开发/ 环境/ 相结合/ 供/ 开发者/ 使用/ ./ 同时/ ,/ 测试/ 组件/ 的/ 影响/ 、/ 多重/ 缺陷/ 的/ 定位/ 、/ 定位/ 结果/ 的/ 理解/ 以及/ 错误/ 修复/ 的/ 建议/ 将/ 是/ 进行/ 扩展/ 的/ 热点/ 方向/ ./ 对/ 这些/ 问题/ 的/ 深入研究/ ,/ 将/ 帮助/ 开发者/ 更快/ 地/ 开发/ 高质量/ 的/ 软件/ ./ 

