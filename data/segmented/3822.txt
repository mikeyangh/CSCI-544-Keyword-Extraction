Page1SPCF/ :/ 一种/ 基于/ 内存/ 的/ 传播/ 式/ 协同/ 过滤/ 推荐/ 算法/ 赵琴琴/ 鲁凯/ 王斌/ (/ 中国科学院计算技术研究所/ 北京/ 100190/ )/ 摘要/ 基于/ 内存/ 的/ 协同/ 过滤/ 是/ 当前/ 互联网/ 推荐/ 引擎/ 中/ 的/ 核心技术/ ./ 然而/ ,/ 目前/ 该/ 技术/ 的/ 发展/ 面临/ 着/ 严重/ 的/ 用户/ 评分/ 稀疏/ 性/ 问题/ ./ 该文/ 通过/ 采用/ 传播/ 的/ 思想/ 对/ 数据/ 稀疏/ 性/ 问题/ 进行/ 了/ 有益/ 的/ 探索/ 和/ 研究/ ,/ 并/ 提出/ 了/ 一种/ 改进/ 的/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ SPCF/ ./ 该/ 算法/ 通过/ 相似/ 度/ 传播/ ,/ 寻找/ 到/ 更/ 多/ 、/ 更/ 可靠/ 的/ 邻居/ ,/ 然后/ 在/ 此基础/ 上/ ,/ 从/ 用户/ 和/ 项目/ 两/ 方面/ 信息/ 考虑/ 对/ 用户/ 进行/ 推荐/ ./ 在/ MovieLens/ 和/ YahooMusic/ 数据/ 集上/ 的/ 实验/ 结果表明/ ,/ SPCF/ 在/ MAE/ 指标/ 上/ 比/ 传统/ 的/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ 有/ 明显/ 的/ 提高/ ./ 关键词/ 推荐/ 系统/ ;/ 相似/ 度/ 传播/ ;/ 基于/ 内存/ 的/ 协同/ 过滤/ 1/ 引言/ 随着/ 互联网/ 的/ 飞速发展/ ,/ 网络/ 上/ 的/ 信息/ 严重/ “/ 过载/ ”/ ,/ 用户/ 很难/ 在/ 大量/ 的/ 信息/ 中/ 找到/ 自己/ 真正/ 需要/ 的/ 信息/ ./ 推荐/ 系统/ 根据/ 用户/ 个人/ 的/ 习惯/ 和/ 偏好/ 向/ 用户/ 推荐/ 其有/ 可能/ 感兴趣/ 的/ 项目/ (/ item/ )/ ,/ 是/ 解决/ 信息/ “/ 过载/ ”/ 问题/ 的/ 主要/ 工具/ ./ 协同/ 过滤/ 是/ 现行/ 推荐/ 系统/ 中/ 应用/ 最/ 广泛/ 、/ 也/ 最/ 成功/ 的/ 技术/ 之一/ ./ 它/ 主要/ 基于/ 如下/ 假设/ :/ 具有/ 相似/ 兴趣/ 的/ 用户/ 会/ 喜欢/ 相似/ 的/ 项目/ ./ 这样/ ,/ 它/ 可以/ 根据/ 用户/ 对/ 项目/ 的/ 评分/ 信息/ (/ 通常/ 表示/ 成/ 用户/ -/ 项目/ 评分/ 矩阵/ ,/ 参考/ 图/ 1/ )/ 找到/ 用户/ 或/ 项目/ 之/ Page2/ 为了/ 克服/ 数据/ 稀疏/ 性/ 问题/ ,/ 研究/ 人员/ 开展/ 了/ 一系列/ 的/ 研究/ ./ 然而/ ,/ 现有/ 方法/ 中/ 使用/ 的/ 相似/ 度/ 计算方法/ 可靠性/ 和/ 推荐/ 进度/ 都/ 有待/ 进一步提高/ ./ 针对/ 上述/ 问题/ ,/ 本文/ 利用/ 相似/ 度/ 传播/ 的/ 思路/ ,/ 提出/ 了/ 一种/ 新/ 的/ 基于/ 内存/ 的/ 协同/ 推荐/ 算法/ SPCF/ (/ SimilarityPropagationbasedCollaborativeFiltering/ )/ ./ 在/ 两个/ 公共数据/ 集/ MovieLens/ 和/ YahooMusic/ 上/ 的/ 实验/ 结果表明/ ,/ 我们/ 的/ 方法/ 优于/ 传统/ 的/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节/ 介绍/ SPCF/ 的/ 具体/ 实现/ ;/ 第/ 4/ 节/ 给出/ 实验/ 和/ 结论/ ;/ 第/ 5/ 节对/ 全文/ 进行/ 总结/ 和/ 展望/ ./ 2/ 相关/ 工作/ 为了/ 解决/ 基于/ 内存/ 的/ CF/ 方法/ 中/ 用户/ -/ 项目/ 评分/ 信息/ 的/ 数据/ 稀疏/ 问题/ ,/ 国内外/ 研究者/ 进行/ 了/ 一系列/ 研究/ ,/ 提出/ 了/ 多种/ 解决/ 方法/ ./ 这些/ 方法/ 大都/ 采用/ 各种/ 技术/ 对/ 矩阵/ 进行/ 填充/ ./ 最/ 简单/ 的/ 填充/ 办法/ 是/ 将/ 用户/ 对/ 未/ 评分/ 项目/ 的/ 评分/ 设/ 为/ 一个/ 固定/ 的/ 缺省值/ ,/ 或者/ 设/ 为/ 其他/ 用户/ 对/ 该项/ 目的/ 平均/ 评分/ [/ 1/ ]/ ,/ 然而/ 用户/ 对/ 未/ 评分/ 项目/ 的/ 评分/ 不/ 可能/ 完全相同/ ,/ 这种/ 简单/ 的/ 办法/ 并/ 不能/ 从根本上/ 解决/ 稀疏/ 性/ 问题/ ./ 更/ 多/ 研究/ 采用/ 预测/ 填充/ 技术/ ./ 文献/ [/ 2/ -/ 4/ ]/ 采用/ BP/ 神经网络/ 来/ 进行/ 评分/ 预测/ ./ 这种/ 方法/ 对/ 噪声/ 数据/ 有/ 较/ 强/ 的/ 承受能力/ [/ 3/ ]/ ,/ 可以/ 有效/ 降低/ 用户/ -/ 项/ 矩阵/ 的/ 稀疏/ 性/ ./ 然而/ ,/ BP/ 算法/ 的/ 效率/ 会/ 导致/ 近邻/ 查找时间/ 的/ 延长/ [/ 4/ ]/ ./ 文献/ [/ 5/ -/ 8/ ]/ 基于/ 朴素/ 贝叶斯/ 方法/ 估计/ 某个/ 项目/ 所属/ 的/ 类别/ ,/ 然后/ 利用/ 此/ 类别/ 中/ 其它/ 项目/ 的/ 评分/ 情况/ 来/ 预测/ 未/ 评分/ 项目/ 的/ 评分/ ./ 文献/ [/ 9/ -/ 10/ ]/ 利用/ 基于/ 项目/ 的/ 属性/ 联系/ 以及/ 项目/ 所处/ 的/ 地位/ 、/ 相互/ 关系/ 和/ 项目/ 的/ 元/ 数据/ 等/ 内容/ 计算/ 项目/ 之间/ 的/ 内容/ 相似/ 度/ ,/ 而/ 不/ 依赖/ 用户/ 对/ 项目/ 的/ 评分/ ./ 这类/ 方法/ 的/ 应用/ 面/ 较窄/ ./ 文献/ [/ 11/ ]/ 于/ 2005/ 年/ 提出/ 了/ 一种/ 基于/ 聚类/ 的/ 方法/ ,/ 即/ 通过/ 计算/ 用户/ 之间/ 的/ 相似/ 度/ 把/ 用户/ 分成/ k/ 类/ ,/ 然后/ 选择/ 离/ 目标/ 用户/ 最近/ 的/ 一个/ 类中/ 的/ 所有/ 用户/ 作为/ 邻居/ ,/ 计算/ 目标/ 用户/ 与其/ 邻居/ 的/ 相似/ 度/ ./ 该/ 方法/ 中/ 的/ 聚类/ 数目/ 不易/ 确定/ ./ 另外/ 一些/ 工作/ [/ 12/ -/ 14/ ]/ 采用/ 奇异/ 值/ 分解/ 解决/ 矩阵/ 的/ 稀疏/ 性/ 问题/ ,/ 将/ 原始/ 空间/ 转换/ 到/ 另/ 一/ 空间/ 来/ 避免/ 稀疏/ 性/ ./ 但是/ 一方面/ 矩阵/ 分解/ 的/ 开销/ 太/ 大/ ,/ 另一方面/ 降维会/ 导致用户/ -/ 项/ 矩阵/ 中/ 的/ 信息/ 丢失/ ./ 上述/ 基于/ 矩阵/ 填充/ 的/ 方法/ 没有/ 考虑/ 前次/ 填充/ 结果/ 所/ 带来/ 的/ 连锁反应/ ,/ 因此/ 实际上/ 填充/ 结果/ 并/ 不/ 稳定/ ./ 在/ 基于/ 模型/ 的/ CF/ 方法/ 中/ 也/ 有/ 一些/ 基于/ 传播/ 思路/ 的/ 方法/ [/ 15/ -/ 16/ ]/ ,/ 但是/ 其/ 目标/ 是/ 学习/ 到/ 模型/ 参数/ ,/ 和/ 本文/ 的/ 方法/ 是/ 截然不同/ 的/ ./ 相对/ 于/ 传统/ 的/ 基于/ 内存/ 的/ CF/ 方法/ ,/ 本文/ 方法/ 同时/ 考虑/ 了/ 目标/ 用户/ 的/ 邻居/ 对/ 目标/ 项目/ 的/ 评分/ 和/ 目标/ 用户/ 对/ 目标/ 项目/ 的/ 邻居/ 的/ 评分/ ,/ 从而/ 进一步提高/ 相似/ 度/ 计算/ 的/ 准确性/ ./ 3/ 本文/ 工作/ 本文/ 的/ 主要/ 思想/ 是/ 利用/ 相似/ 度/ 传播/ 技术/ ,/ 寻找/ 更/ 多/ 的/ 邻居/ 信息/ ,/ 然后/ 在/ 此基础/ 上/ 结合/ 用户/ 和/ 项目/ 两/ 方面/ 的/ 信息/ 向/ 目标/ 用户/ 推荐/ ,/ 我们/ 将/ 该/ 算法/ 命名/ 为/ SPCF/ ./ 下面/ 对/ 其/ 进行/ 详细/ 的/ 介绍/ ./ 3.1/ 算法/ 思路/ 我们/ 通过/ 一个/ 例子/ 阐明/ 本文/ 算法/ 思路/ ./ 图/ 1/ 给出/ 了/ 一个/ 稀疏/ 的/ 用户/ -/ 项目/ 评分/ 矩阵/ ,/ 其/ 共有/ K/ 个/ 用户/ 和/ M/ 个/ 项目/ ,/ 其中/ 灰色/ 部分/ 表示/ 用户/ 对/ 项目/ 未/ 评分/ ./ 假设/ 我们/ 要/ 对/ u1/ 进行/ 推荐/ ,/ 按照/ 传统/ 的/ 基于/ 用户/ 协同/ 过滤/ 推荐/ 算法/ ,/ 首先/ 计算/ 跟/ u1/ 兴趣/ 偏好/ 相同/ 的/ 邻居/ ,/ 可以/ 找到/ u4/ ./ 然后/ 根据/ u4/ 的/ 评分/ 预测/ u1/ 对/ iM/ 的/ 评分/ ./ 很/ 显然/ ,/ 该/ 预测值/ 只是/ 基于/ 一个/ 用户/ 的/ 评分/ ,/ 预测/ 的/ 精度/ 值得/ 怀疑/ ./ 而/ 我们/ 的/ 思想/ 是/ :/ 在/ 每位/ 用户/ 都/ 已经/ 找到/ 了/ 自己/ 的/ 邻居/ 之后/ ,/ 可以/ 利用/ 相似/ 度/ 传播/ 寻找/ 每位/ 用户/ 更/ 多/ 的/ 邻居/ ./ 比如/ u1/ 的/ 邻居/ 为/ u4/ ,/ u4/ 的/ 邻居/ 为/ u1/ 和/ uK/ ./ 此时/ 我们/ 认为/ u1/ 和/ uK/ 应该/ 在/ 兴趣/ 偏好/ 上/ 也/ 相似/ ./ 之后/ 我们/ 可以/ 同时/ 利用/ u4/ 和/ uK/ 的/ 评分/ 对/ u1/ 进行/ 推荐/ ,/ 这样/ 在/ 很大/ 程度/ 上/ 可以/ 提高/ 预测/ 的/ 准确度/ ./ 算法/ 的/ 工作/ 流程/ 如图/ 2/ 所示/ ./ Page33/ ./ 2/ 算法/ 本节/ 从/ 两个/ 步骤/ 来/ 探讨/ 基于/ 内存/ 的/ 相似/ 度/ 传播/ 的/ 协同/ 过滤/ 推荐/ 算法/ ,/ 即/ 邻居/ 的/ 生成/ 和/ 推荐/ 的/ 生成/ ./ 3.2/ ./ 1/ 邻居/ 的/ 生成/ 为了/ 充分利用/ 原始/ 的/ 用户/ -/ 项目/ 评分/ 数据/ (/ 毕竟/ 原始/ 用户/ 的/ 评分/ 数据/ 才能/ 真正/ 代表/ 用户/ 的/ 兴趣/ 偏好/ )/ ,/ 在/ 计算/ 用户/ 和/ 项目/ 之间/ 的/ 相似/ 度时/ ,/ 我们/ 采用/ 了/ 之前/ 提出/ 的/ SimTrans/ 算法/ [/ 17/ ]/ ./ (/ 1/ )/ 对于/ 用户/ 来说/ ,/ 设/ 用户/ u/ 和/ 用户/ v/ 在/ n/ 维空间/ 上/ 的/ 共同/ 评分/ 组成/ 的/ 向量/ 分别/ 表示/ 为/ 犝/ ,/ 犞/ ,/ 并且/ 用户/ u/ 和/ 用户/ v/ 共同/ 评分/ 过/ 的/ 项目/ 集合/ 用/ Iuv/ =/ Iu/ ∩/ Iv/ 表示/ ./ 用户/ u/ 和/ 用户/ v/ 的/ 相似性/ SimTrans/ (/ u/ ,/ v/ )/ 为/ SimTrans/ (/ u/ ,/ v/ )/ (/ h/ +/ 1/ )/ =/ 烄/ 烅/ 烆/ 烄/ 烅/ 烆/ 其中/ ,/ C/ (/ 0/ </ C/ </ 1/ )/ 是/ 一个/ 置信/ 系数/ 或/ 阻尼/ 系数/ ,/ 表示/ 用户/ 相似/ 度/ 随着/ 迭代/ 次数/ 增加/ 的/ 传播/ 衰减/ 率/ ;/ h/ 表示/ 迭代/ 次数/ ./ (/ 2/ )/ 对于/ 项目/ 来讲/ ,/ 设/ 项目/ i/ 和/ 项目/ j/ 在/ m/ 维/ 的/ 用户/ 空间/ 上/ 的/ 共同/ 评分/ 组成/ 的/ 向量/ 分别/ 表示/ 为/ 犐/ ,/ 犑/ ,/ 并且/ 项目/ i/ 和/ 项目/ j/ 共同/ 被评/ 过分/ 的/ 用户/ 集合/ 用/ Uij/ =/ Ui/ ∩/ Uj/ 表示/ ./ 项目/ i/ 和/ 项目/ j/ 的/ 相似性/ SimTrans/ (/ i/ ,/ j/ )/ 为/ SimTrans/ (/ i/ ,/ j/ )/ (/ h/ +/ 1/ )/ =/ 其中/ C/ 的/ 含义/ 同式/ (/ 1/ )/ 相同/ ,/ 表示/ 项目/ 相似/ 度/ 随着/ 迭代/ 次数/ 增加/ 的/ 传播/ 衰减/ 率/ ./ 式/ (/ 1/ )/ 和/ 式/ (/ 2/ )/ 中/ 使用/ 的/ sim/ 相似/ 度/ 函数/ 可以/ 用/ 传统/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ 的/ 相似/ 度/ 度量/ 函数/ 替代/ ./ 3.2/ ./ 2/ 推荐/ 的/ 生成/ 跟/ 传统/ 的/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ 不同/ ,/ 基于/ 内存/ 的/ 相似/ 度/ 传播/ 的/ 协同/ 过滤/ 推荐/ 算法/ 从/ 用户/ 和/ 项目/ 两/ 方面/ 考虑/ 预测/ 目标/ 用户/ 对/ 目标/ 项目/ 的/ 评分/ ./ 根据/ 目标/ 用户/ 对/ 目标/ 项目/ 的/ 预测/ 评分/ ,/ 推荐/ 给/ 目标/ 用户/ 预测/ 评分/ 最高/ 的/ 一个/ 项目/ 或者/ N/ 个/ 项目/ 作为/ 结果/ ./ 假设/ 目标/ 用户/ a/ 的/ 最近/ 用户/ 邻居/ 集合/ 用/ A/ 表示/ ,/ 目标/ 项目/ t/ 的/ 最近/ 项目/ 邻居/ 集合/ 用/ T/ 表示/ ,/ 则/ 目标/ 用户/ a/ 对/ 目标/ 项目/ t/ 的/ 预测/ 评分/ Pa/ ,/ t/ 可以/ 通过/ 目标/ 用户/ a/ 由/ 最近/ 用户/ 邻居/ 集合/ A/ 中/ 邻居/ 对/ 项目/ 的/ 评分/ 和/ 目标/ 用户/ 对/ 目标/ 项目/ t/ 的/ 最近/ 项目/ 邻居/ 集合/ T/ 的/ 评分/ 得到/ ,/ 方法/ 如下/ :/ Pa/ ,/ t/ (/ h/ )/ =/ 珚/ Ra/ +/ ∑/ a/ ∈/ A/ 烄/ 12/ 烆/ 珚/ Rt/ +/ ∑/ t/ ∈/ T/ 其中/ Pa/ ,/ t/ 为/ 目标/ 用户/ a/ 对/ 项目/ t/ 的/ 预测/ 评分/ 值/ ./ SimTrans/ (/ a/ ,/ a/ )/ 为/ 目标/ 用户/ a/ 和/ 用户/ a/ 之间/ 的/ 兴趣/ 偏好/ 相似/ 度/ ,/ SimTrans/ (/ t/ ,/ t/ )/ 为/ 目标/ 项目/ t/ 和/ 项目/ t/ 被/ 用户/ 喜欢/ 的/ 程度/ 大小/ ./ 珚/ Ra/ 为/ 原始/ 用户/ -/ 项目/ 评分/ 矩阵/ 中/ 目标/ 用户/ a/ 对/ 以前/ 评/ 过分/ 的/ 项目/ 的/ 平均/ 评分/ ,/ 珚/ Rt/ 为/ 原始/ 用户/ -/ 项目/ 评分/ 矩阵/ 中/ 所有/ 用户/ 对/ 目标/ 项目/ t/ 的/ 平均/ 评分/ ./ 4/ 实验/ 和/ 结论/ 4.1/ 实验/ 数据/ 实验/ 数据/ 采用/ 的/ 是/ 美国/ 明尼苏达/ 州立大学/ 的/ GroupLens/ 研究/ 小组/ 提供/ 的/ MovieLens/ 数据/ 集/ (/ http/ :/ // // www/ ./ grouplens/ ./ org/ )/ ./ 它/ 包含/ 了/ 943/ 位/ 用户/ 对/ 1682/ 部/ 电影/ 的/ 100000/ 个/ 评分/ ./ 该/ 数据/ 集/ 的/ 原始/ 用户/ -/ 项目/ 评分/ 矩阵/ 的/ 稀疏/ 度为/ 93.7/ %/ ./ 然而/ 为了/ 更/ 贴近/ 现实/ ,/ 同时/ 也/ 为了/ 更能/ 突出/ 我们/ 提出/ 的/ 算法/ 的/ 优势/ ,/ 我们/ 从/ 该/ 数据/ 集中/ 首先/ 随机/ 抽取/ 了/ 500/ 个/ 用户/ ,/ 其中/ 300/ 个/ 用户/ 作为/ 训练/ 数据/ ,/ 记作/ Training300/ ,/ 其余/ 200/ 个/ 用户/ 作为/ 测试数据/ ./ 在/ Training300/ 的/ 数据/ 基础/ 上/ ,/ 我们/ 又/ 随机/ 抽取/ 了/ 200/ 个/ 用户/ 的/ 数据/ 作为/ 另一组/ 训练/ 数据/ ,/ 记作/ Training200/ ./ 我们/ 按照/ 用户/ 的/ 打分/ 个数/ (/ 5/ 个/ ,/ 10/ 个/ 和/ 20/ 个/ )/ 分成/ 3/ 个/ 不同/ 的/ 测试数据/ ,/ 记作/ Given5/ 、/ Given10/ 和/ Given20/ ./ 另外/ ,/ 在/ YahooMusic/ ①/ 的/ 数据/ 上/ 也/ 抽取/ 了/ 小/ 部分/ 数据/ 来/ 验证/ 我们/ 提出/ 的/ 算法/ 的/ 有效性/ ./ 同样/ 地/ ,/ 我们/ 仍然/ 采用/ 随机/ 抽取/ 的/ 方法/ 在/ 训练/ 数据/ 上/ 抽取/ 了/ 500/ 个/ 用户/ 以及/ 这/ 500/ 个/ 用户/ 在/ 对应/ 的/ 测试数据/ 上/ 的/ 测试数据/ ./ 但是/ 有/ 一点/ 不同/ 的/ 是/ :/ 由于/ YahooMusic/ 数据/ 集/ 的/ 庞大/ ,/ 我们/ 只/ 选用/ 了/ 前/ 2000/ 个/ 音乐/ 作为/ 项目/ 集合/ ./ ①/ http/ :/ // // webscope/ ./ sandbox/ ./ yahoo/ ./ com/ // Page44/ ./ 2/ 评价/ 指标/ 实验/ 评估/ 标准/ 的/ 选择/ 是/ 实验/ 的/ 重要/ 组成部分/ ./ 合理/ 的/ 评估/ 标准/ 能够/ 很/ 好/ 地/ 评价/ 算法/ 性能/ ,/ 发现/ 算法/ 的/ 有待/ 改进/ 之处/ ./ 本/ 实验/ 从/ 推荐/ 的/ 准确性/ 方面/ 考虑/ ,/ 选取/ 了/ 协同/ 过滤/ 中/ 常用/ 的/ 平均/ 绝对误差/ MAE/ (/ MeanAbsoluteError/ )/ 作为/ 实验/ 结果/ 的/ 评估/ 标准/ ./ 平均/ 绝对误差/ MAE/ 是/ 评价/ 推荐/ 算法/ 质量/ 的/ 标准/ 之一/ ,/ 它/ 通过/ 计算/ 预测/ 评分/ 与/ 真实/ 评价/ 数据/ 上/ 的/ 差别/ 来/ 衡量/ 推荐/ 结果/ 的/ 准确性/ ./ MAE/ 的/ 值/ 越/ 小/ ,/ 推荐/ 准确性/ 越高/ ./ 假设/ 预测/ 的/ 用户/ 评分/ 集合/ 表示/ 为/ {/ p1/ ,/ p2/ ,/ …/ ,/ pN/ }/ ,/ 对应/ 的/ 实际/ 用户/ 评分/ 集合/ 为/ {/ q1/ ,/ q2/ ,/ …/ ,/ qN/ }/ ,/ 则/ 具体/ 的/ MAE/ 计算公式/ 为/ 4.3/ 实验/ 方案/ 我们/ 引入/ 了/ 传统/ 的/ 基于/ 内存/ 的/ 推荐/ 算法/ 进行/ 对比/ ./ 由于/ 推荐/ 算法/ 涉及/ 到/ 相似/ 度/ 计算/ 和/ 预测/ 评分/ 两个/ 关键/ 部分/ ./ 我们/ 考察/ 了/ 5/ 种/ 相似/ 度/ 度量/ 方法/ 和/ 2/ 种/ 预测/ 评分/ 函数/ 的/ 10/ 种/ 组合/ 方法/ ./ 其中/ 5/ 种/ 相似/ 度/ 度量/ 方法/ 包括/ 基于/ 用户/ 的/ 皮尔逊/ 相关系数/ UPCC/ (/ User/ -/ basedPearsonCorrelationCoefficient/ )/ 、/ 基于/ 用户/ 的/ 余弦/ 夹角/ 相关性/ UVS/ (/ User/ -/ basedVectorSimilarity/ )/ 、/ 基于/ 项目/ 的/ 皮尔逊/ 相关系数/ IPCC/ (/ Item/ -/ basedPearsonCorrelationCoefficient/ )/ 、/ 基于/ 项目/ 的/ 余弦/ 夹角/ 相关性/ IVS/ (/ ItembasedVectorSimi/ -/ larity/ )/ 和/ 基于/ 项目/ 的/ 修正/ 余弦/ 夹角/ 相关性/ IAVS/ (/ Item/ -/ basedAdjustedVectorSimilarity/ )/ ./ 2/ 种/ 预测/ 评分/ 函数/ 分别/ 为/ 简单/ 的/ 加权/ 平均/ SWA/ (/ SimpleWeightedAverage/ )/ 和/ 基于/ 相似/ 用户/ 评分/ 的/ 加权/ 求图/ 3Training300/ 的/ 迭代/ 次数/ 与/ 偏差/ 比/ 对比/ 和/ WSOR/ (/ WeightedSumofOthers/ ’/ Ratings/ )/ ./ 最后/ 取/ 上述/ 组合/ 中/ 最好/ 的/ 3/ 个/ 结果/ 和/ 我们/ 的/ 方法/ 对比/ ./ 整个/ 实验/ 分为/ 两个/ 部分/ :/ 实验/ 1/ ./ 考察/ 基于/ 内存/ 的/ 相似/ 度/ 传播/ 的/ 协同/ 过滤/ 推荐/ 算法/ 的/ 收敛性/ ./ 本/ 论文/ 采用/ 的/ 收敛/ 判断/ 标准/ 是/ 平均偏差/ 的/ 比率/ ,/ 即/ 偏差/ 比/ ,/ 此时/ 的/ 平均偏差/ 为/ 迭代/ 后/ 的/ 预测/ 结果/ 与/ 迭代/ 前/ 的/ 预测/ 结果/ 之间/ 的/ 平均偏差/ ./ 偏差/ 比/ 等于/ 1/ 时/ 的/ 迭代/ 次数/ 就/ 为/ 算法/ 收敛/ 的/ 迭代/ 次数/ ./ 实验/ 2/ ./ 对比/ SPCF/ 算法/ 和/ 传统/ 的/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ ./ 4.4/ 实验/ 结果/ 及/ 分析法/ 的/ 收敛性/ 问题/ (/ 1/ )/ 基于/ 内存/ 的/ 相似/ 度/ 传播/ 的/ 协同/ 过滤/ 推荐/ 算/ 从/ 图/ 3/ 可以/ 看出/ ,/ 本文/ 提出/ 的/ 方法/ 在/ 迭代/ 一定/ 次数/ 之后/ ,/ 均/ 表现/ 出/ 一定/ 的/ 稳定性/ ./ 需要/ 指出/ 的/ 是/ ,/ 该/ 算法/ 的/ 收敛性/ 还有/ 待/ 严格/ 的/ 理论/ 证明/ ./ 但是/ 通过/ 实验/ 基本/ 能/ 给出/ 算法/ 收敛性/ 的/ 经验/ 结论/ ./ 同时/ ,/ 根据/ 我们/ 提出/ 来/ 的/ 判断/ 算法/ 的/ 收敛/ 标准/ 以及/ 这/ 3/ 幅图/ 的/ 结果/ ,/ 我们/ 把/ 基于/ 内存/ 的/ 相似/ 度/ 传播/ 的/ 协同/ 过滤/ 推荐/ 算法/ 的/ 迭代/ 次数/ 定为/ 10/ ./ (/ 2/ )/ 不同/ 方法/ 推荐/ 质量/ 精度/ 的/ 对比/ 首先/ ,/ 确定/ 算法/ 的/ 邻居/ 个数/ ./ 该值/ 采用/ 的/ 是/ 传统/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ 判定/ 出/ 的/ 值/ ./ 图/ 4/ 分别/ 显示/ 了/ 测试数据/ 邻居/ 个数/ 和/ MAE/ 的/ 曲线/ ./ 荐/ 效果/ 最佳/ ./ 从图/ 4/ 中/ 我们/ 得出/ 邻居/ 个数/ 为/ 60/ 的/ 情况/ 下推/ 其次/ ,/ 表/ 1/ (/ a/ )/ 、/ (/ b/ )/ 分别/ 显示/ 了/ 3/ 种/ 传统/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ 和/ SPCF/ 算法/ 在/ 不同/ 实验/ 数据/ 上/ MAE/ 的/ 对比/ ./ Page5/ 图/ 4/ 邻居/ 个数/ 与/ MAE/ 的/ 取值/ (/ a/ )/ 各种/ 算法/ 在/ 犕/ 犃/ 犈/ 指标/ 上/ 的/ 性能/ (/ YahooMusic/ )/ 训练/ 数据/ Yahoomusic/ 训练/ 数据/ 方法/ Given5Given10Given20Training300Training200/ 表/ 1/ (/ b/ )/ 中/ “/ / ”/ 号/ 代表/ 3/ 种/ 传统/ 的/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ 中/ MAE/ 值/ 最小/ 的/ 那个/ 方法/ ,/ 即/ 推荐/ 精确度/ 最高/ 的/ 方法/ ./ 括号/ 中/ 的/ 百分数/ 表示/ 的/ 是/ 我们/ 提出/ 的/ 基于/ 相似/ 度/ 传播/ 的/ 方法/ 比带/ “/ / ”/ 号/ 的/ 方法/ 在/ 推荐/ 精确度/ 方面/ 的/ 提高/ 比率/ ./ 在/ YahooMusic/ 数据/ 集上/ 的/ 提高/ 结果/ 非常/ 可观/ ,/ 达到/ 了/ 50/ %/ ./ 而/ 在/ MovieLens/ 数据/ 集/ 的/ 提高/ 也/ 高于/ 传统/ 方法/ ./ 这/ 两者/ 提高/ 幅度/ 的/ 差距/ 可能/ 和/ 这/ 两个/ 语料/ 的/ 具体/ 数据/ 不同/ 有关/ ./ 表/ 1/ (/ b/ )/ 的/ 数据/ 同时/ 也/ 表明/ ,/ 当/ 已知/ 打分/ 信息/ 减少/ 时/ ,/ SPCF/ 相对/ 于/ 传统/ 方法/ 的/ 提高/ 幅度/ 逐渐/ 提高/ ,/ 这/ 也/ 表明/ 本文/ 方法/ 在/ 稀疏/ 情况/ 下/ 能够/ 体现/ 出/ 更/ 强/ 的/ 优势/ ./ 5/ 总结/ 和/ 展望/ 本文/ 介绍/ 了/ 一种/ 改进/ 的/ 基于/ 内存/ 的/ 协同/ 过滤/ 推荐/ 算法/ SPCF/ ,/ 该/ 算法/ 通过/ 不断更新/ 原始/ 用户/ -/ 项目/ 开销/ 较大/ ,/ 下/ 一步/ 要/ 研究/ 降低/ 开销/ 的/ 方法/ ./ 评分/ 矩阵/ 为/ 目标/ 用户/ 和/ 目标/ 项目/ 找到/ 更/ 多/ 的/ 最近/ 邻居/ 集合/ ,/ 对/ 目标/ 用户/ 给出/ 推荐/ 结果/ ./ 实验/ 结果/ 验证/ 了/ SPCF/ 方法/ 的/ 有效性/ ./ 未来/ 的/ 工作/ 包括/ :/ (/ 1/ )/ 对/ 本文/ 方法/ 的/ 收敛性/ 进行/ 理论/ 上/ 的/ 证明/ ./ (/ 2/ )/ 本文/ 方法/ 主要/ 关注/ 精度/ ,/ 但是/ 算法/ 的/ 时空/ (/ 3/ )/ 将/ 该/ 方法/ 和/ 基于/ 内容/ 的/ CF/ 方法/ 相结合/ ./ (/ 4/ )/ 分析/ 噪音/ 数据/ 在/ 相似/ 度/ 传播/ 过程/ 中/ 的/ 影响/ 程度/ ./ (/ 5/ )/ 考虑/ 与/ 在/ MovieLens/ 数据/ 集上/ 表现/ 较/ 好/ 的/ 方法/ 的/ 对比/ ,/ 比如/ Model/ -/ basedCF/ 和/ 矩阵/ 分解/ 的/ 一些/ 方法/ ./ 致谢/ 在/ 撰写论文/ 期间/ ,/ 王斌/ 老师/ 谆谆教导/ ,/ 实验室/ 同学/ 给予/ 了/ 鼓励/ ,/ 特别/ 是/ 李亚楠/ 师兄/ 丰富/ 的/ 想法/ 启发/ 并/ 影响/ 我/ 完成/ 了/ 这篇/ 论文/ ./ 向/ 所有/ 支持/ 、/ 关心/ 和/ 帮助/ 过/ 我/ 的/ 人/ 表示/ 最/ 诚挚/ 的/ 谢意/ !/ 

