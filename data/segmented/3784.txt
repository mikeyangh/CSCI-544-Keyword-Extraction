Page1/ 基于/ 数据服务/ 的/ 嵌套/ 视图/ 动态/ 更新/ 方法/ 张鹏/ 2/ )/ ,/ 3/ )/ 韩燕波/ 1/ )/ 王桂玲/ 1/ )/ 1/ )/ (/ 北方工业大学/ 云/ 计算/ 研究/ 中心/ 北京/ 100144/ )/ 2/ )/ (/ 中国科学院/ 研究生院/ 北京/ 100049/ )/ 3/ )/ (/ 中国科学院计算技术研究所/ 集成/ 应用/ 中心/ 北京/ 100190/ )/ 摘要/ 数据服务/ 屏蔽/ 了/ 数据/ 访问/ 的/ 复杂性/ ,/ 并且/ 支持/ 用户/ 以/ 可视化/ 方式/ 定义/ 装载/ 异构/ 数据源/ 的/ 嵌套/ 视图/ ./ 然而/ ,/ 当/ 异构/ 数据源/ 输出/ 的/ 数据/ 发生/ 更新/ 时/ ,/ 该/ 更新/ 需要/ 通过/ 数据服务/ 逐层/ 传播/ 到/ 顶层/ 的/ 嵌套/ 视图/ ,/ 一类/ 挑战性/ 问题/ 是/ ,/ 如何/ 减少/ 更新/ 传播/ 过程/ 中/ 的/ 冗余/ 计算/ ,/ 提高/ 嵌套/ 视图/ 的/ 数据/ 新鲜度/ ./ 为此/ 文中/ 提出/ 了/ 基于/ 数据服务/ 的/ 嵌套/ 视图/ 动态/ 更新/ 方法/ ,/ 该/ 方法/ 利用/ 指针/ 为/ 嵌套/ 视图/ 中/ 的/ 元组/ 建立/ 嵌套/ 任意/ 层次/ 的/ 数据服务/ 的/ 引用/ ,/ 同时/ 给出/ 了/ 一种/ 记录/ 数据服务/ 更新/ 的/ 日志/ 以及/ 在/ 该/ 日志/ 上/ 的/ 嵌套/ 视图/ 增量/ 更新/ 算法/ ./ 文中/ 在/ 原型/ 系统/ 中/ 实现/ 了/ 该/ 算法/ 并且/ 进行/ 了/ 实验/ 分析/ ,/ 实验/ 结果表明/ ,/ 该/ 方法/ 减少/ 了/ 70/ %/ 的/ 嵌套/ 视图/ 的/ 更新/ 时间/ ,/ 提高/ 了/ 60/ %/ 的/ 嵌套/ 视图/ 的/ 数据/ 新鲜度/ ./ 关键词/ 数据服务/ ;/ 嵌套/ 视图/ ;/ 数据/ 集成/ ;/ 日志/ ;/ 数据/ 新鲜度/ 1/ 引言/ 数据服务/ [/ 1/ -/ 2/ ]/ 是/ 以/ 提供数据/ 资源/ 的/ 访问/ 为/ 目的/ 的/ 软件/ 服务/ ,/ 它/ 接收/ 一组/ 关于/ 对/ 该/ 数据/ 资源/ 进行/ 访/ Page2/ 资源/ 的/ 松/ 耦合/ ,/ 而且/ 具有/ 良好/ 的/ 可扩展性/ ./ 更/ 重要/ 地是/ ,/ 数据服务/ 具有/ 相同/ 的/ 数据/ 模式/ ,/ 使得/ 用户/ 无需/ 定义/ 中介/ 模式/ 便/ 能/ 直接/ 进行/ 集成/ ./ 近年来/ 出现/ 了/ 一些/ 相关/ 工具/ ,/ 可以/ 分为/ 表/ 1/ 中/ 3/ 类/ ./ Spreadsheet/ 编程/ 第/ 1/ 类/ 工具/ 通常/ 为/ 用户/ 提供/ 一个/ 可视化/ 的/ 操作/ 环境/ ,/ 通过/ 接受/ 用户/ 操作/ 指令/ ,/ 生成/ 操作/ 数据服务/ 的/ 脚本/ ,/ 其中/ 的/ 数据模型/ 主要/ 包括/ 两种/ :/ XML/ 数据模型/ 和/ 对象/ 数据模型/ ./ 第/ 2/ 类/ 工具/ 是/ 由/ 用户/ 构造/ 数据流/ ,/ 该/ 数据流/ 以/ 数据服务/ 为/ 源头/ ,/ 并/ 经过/ 一系列/ 的/ 数据/ 加工/ 与/ 变换/ ,/ 最终/ 输出/ 数据/ ,/ 这/ 类/ 工具/ 要求/ 用户/ 理解/ 和/ 掌握/ 条件/ 、/ 循环/ 等/ 复杂/ 控制结构/ ,/ 并且/ 用户/ 难以/ 随时/ 观察/ 操作/ 带来/ 的/ 数据/ 变化/ ./ 第/ 3/ 类/ 工具/ 则/ 为/ 用户/ 提供/ 一个/ 类似/ 于/ Spreadsheet/ 的/ 操作界面/ ,/ 在/ 这个/ 界面/ 里/ ,/ 数据服务/ 以/ 表格/ 形式/ 呈现/ ,/ 用户/ 直接/ 在/ 表格/ 上/ 对/ 数据/ 进行/ 增/ 、/ 删/ 、/ 改等/ 操作/ ,/ Mashroom/ 就是/ 其中/ 的/ 典型/ 代表/ ,/ 它/ 采用/ 嵌套/ 关系/ [/ 11/ ]/ 作为/ 其/ 数据模型/ ,/ 具有/ 以下/ 好处/ :/ (/ 1/ )/ 与/ 对象/ 数据模型/ 相比/ ,/ 嵌套/ 关系/ 模型/ 在/ 表达/ 具有/ 层次结构/ 的/ 复杂/ 对象/ 时/ 更加/ 符合/ 人/ 的/ 直觉/ 习惯/ ;/ (/ 2/ )/ 与/ XML/ 模型/ 相比/ ,/ 嵌套/ 关系/ 模型/ 能够/ 以/ 表格/ 化/ 形式/ 进行/ 呈现/ ,/ 更/ 容易/ 被/ 最终用户/ 理解/ ;/ (/ 3/ )/ 嵌套/ 关系/ 代数/ 具有/ 理论/ 基础/ ,/ 其/ 操作/ 采用/ 集合/ 操作/ 方式/ ,/ 操作/ 的/ 一次/ 执行/ 作用/ 于/ 多个/ 元组/ ,/ 这种/ 方式/ 将/ 循环/ 结构/ 隐含/ 于/ 操作/ 内部/ ,/ 用户/ 可以/ 在/ 表格/ 中/ 随时/ 看到/ 操作/ 变化/ ./ 本文/ 把/ 通过/ 数据服务/ 集成/ 的/ 以/ 嵌套/ 方式/ 呈现/ 的/ 表格/ 称为/ 嵌套/ 视图/ ./ 然而/ ,/ 由于/ 数据/ 资源/ 自主/ 变更/ ,/ 数据服务/ 需要/ 把/ 该/ 变更/ 传播/ 到/ 受到/ 影响/ 的/ 数据/ 集成/ 方案/ ,/ 如何/ 减少/ 更新/ 传播/ 过程/ 中/ 的/ 冗余/ 计算/ ,/ 提高/ 集成系统/ 的/ 数据/ 新鲜度/ 是/ 增强/ 上述/ 工具/ 可用性/ 的/ 一个/ 必要条件/ [/ 12/ ]/ ,/ 为此/ 本文/ 重点/ 考虑/ 嵌套/ 视图/ 的/ 增量/ 更新/ ,/ 目前/ 的/ 视图/ 增量/ 更新/ 算法/ 主要/ 在/ 关系数据库/ 的/ 背景/ 下/ ,/ 其中/ 视图/ 通过/ 使用/ 关系/ 查询语言/ 在/ 基本/ 表上/ 定义/ ,/ 数据模型/ 是/ 关系/ 模型/ [/ 13/ ]/ ./ 然而/ ,/ 本文/ 的/ 嵌套/ 视图/ 的/ 数据模型/ 是/ 嵌套/ 关系/ 模型/ ,/ 为此/ 需要/ 对/ 传统/ 基于/ 关系/ 数据模型/ 的/ 增量/ 更新/ 算法/ 进行/ 扩展/ ./ 本文/ 的/ 目标/ 是/ 给定/ 一个/ 通过/ 数据服务/ 定义/ 的/ 嵌套/ 视图/ 和/ 一个/ 数据服务/ 的/ 更新/ 操作/ ,/ 能够/ 产生/ 一组/ 该/ 视图/ 上/ 的/ 更新/ 原语/ ,/ 使得/ 应用/ 这组/ 更新/ 原语/ 后/ 产生/ 的/ 新/ 的/ 嵌套/ 视图/ 和/ 重新/ 计算/ 产生/ 的/ 嵌套/ 视图/ 相同/ ,/ 贡献/ 包括/ 以下/ 两/ 方面/ :/ (/ 1/ )/ 设计/ 并/ 实现/ 了/ 数据服务/ 更新/ 传播/ 架构/ ,/ 使得/ 嵌套/ 视图/ 的/ 更新/ 只/ 需/ 和/ 日志/ 组件/ 交互/ 而/ 无需/ 和/ 异构/ 数据源/ 交互/ ./ (/ 2/ )/ 提出/ 了/ 嵌套/ 视图/ 的/ 增量/ 更新/ 模型/ ,/ 其中/ 通过/ 日志/ 组件/ 索引/ 不仅/ 提高/ 了/ 增量/ 更新/ 计算/ 的/ 效率/ ,/ 而且/ 支持/ 了/ 嵌套/ 视图/ 的/ 可扩展性/ ./ 通过/ 在/ TPC/ -/ H/ ①/ 数据/ 集上/ 封装/ 的/ 数据服务/ 的/ 实验/ 表明/ ,/ 嵌套/ 视图/ 的/ 更新/ 时间/ 减少/ 了/ 70/ %/ ,/ 数据/ 新鲜度/ 提高/ 了/ 60/ %/ ./ 2/ 相关/ 工作/ 数据/ 集成/ 目标/ 是/ 使/ 用户/ 可以/ 忽略/ 数据源/ 的/ 异构/ 性/ ,/ 以/ 一个/ 统一/ 的/ 方式/ 来/ 访问/ 分布/ 异构/ 的/ 数据源/ ./ 现有/ 的/ 数据/ 集成/ 方法/ 可以/ 划/ 为/ 以下/ 3/ 类/ :/ 模式/ 集成/ 方法/ 是/ 人们/ 最早/ 采用/ 的/ 数据/ 集成/ 方法/ ,/ 例如/ 联邦/ 数据库/ [/ 14/ ]/ 和/ 中间件/ [/ 15/ ]/ ./ 其/ 基本/ 思想/ 是/ 在/ 构建/ 集成系统/ 时/ 将/ 各/ 数据源/ 的/ 数据/ 模式/ 映射/ 为/ 全局/ 模式/ ,/ 使/ 用户/ 能够/ 按照/ 全局/ 模式/ 透明/ 地/ 访问/ 各/ 数据源/ 的/ 数据/ ./ 该/ 方法/ 的/ 优点/ 是/ 映射/ 关系/ 的/ 可扩展性/ 好/ ,/ 适合/ 于/ 数据源/ 变化/ 比较/ 大/ 的/ 情况/ ,/ 缺点/ 是/ 可能/ 会/ 造成/ “/ 信息/ 丢失/ ”/ ,/ 查询/ 效率/ 低/ ./ 数据/ 复制/ 方法/ 是/ 将/ 各个/ 数据源/ 的/ 数据/ 复制到/ 与其/ 相关/ 的/ 其它/ 数据源/ 上/ ,/ 并/ 维护/ 数据源/ 整体/ 上/ 的/ 数据/ 一致性/ 、/ 提高/ 数据共享/ 利用/ 的/ 效率/ ,/ 例如/ 数据仓库/ [/ 16/ ]/ ./ 数据/ 复制/ 方法/ 适用/ 于/ 数据源/ 相对/ 稳定/ 、/ 用户/ 查询/ 模式/ 已知/ 或/ 有限/ 的/ 情况/ ./ 当/ 数据分布/ 性/ 比较/ 广/ ,/ 网络/ 延迟/ 较大/ ,/ 同时/ 又/ 需要/ 有/ 很/ 短/ 的/ 处理/ 时间/ 时/ ,/ 可以/ 考虑/ 采用/ 数据/ 复制/ 集成/ 方法/ ./ 以上/ 两种/ 技术/ 是/ 早期/ 数据/ 集成/ 过程/ 中/ 普遍/ 使用/ 的/ 技术/ ./ 但是/ 由于/ 这些/ 技术/ 存在/ 差异/ 导致/ 使用/ 不同/ 技术开发/ 的/ 组件/ 之间/ 的/ 互操作性/ 很差/ ./ 另外/ ,/ 即使/ 这些/ 技术/ 能够/ 实现/ 跨平台/ 以及/ 应用程序/ 之间/ 互操作性/ ,/ 还要/ 面临/ 另/ 一个/ 很/ 重要/ 的/ 障碍/ —/ —/ —/ 防火墙/ ./ 与/ 上述/ 传统/ 技术/ 相比/ ,/ 服务/ 集成/ 方法/ 是/ 建立/ 在/ XML/ 和/ HTTP/ 这些/ 得到/ 了/ 业界/ 广泛/ 采用/ 和/ 认可/ 的/ 标准协议/ 基础/ 之上/ 的/ ,/ 因此/ 能够/ 很/ 好地解决/ 传统/ 技术/ 在/ 数据/ 集成/ 过程/ 中/ 穿越/ 防火墙/ 以及/ 各类/ 中间件/ 互操作性/ 差/ 等/ 问题/ ./ 同时/ 为了/ 突破/ 前/ 两种/ 方法/ 的/ 局限性/ ,/ 服务/ 集成/ 方法/ 可以/ 借鉴/ 前/ 两种/ 方法/ 的/ 优点/ ,/ 对于/ 用户/ 简/ ①/ http/ :/ // // www/ ./ tpc/ ./ org/ // tpch/ // Page3/ 单/ 的/ 访问/ 请求/ ,/ 可以/ 通过/ 数据/ 复制/ 方式/ ,/ 在/ 本地/ 数据源/ 或/ 单一/ 数据源/ 上/ 实现/ 用户/ 的/ 访问/ 需求/ ,/ 而/ 对/ 那些/ 复杂/ 的/ 用户/ 请求/ ,/ 无法/ 通过/ 数据/ 复制/ 方式/ 实现/ 时/ ,/ 可以/ 使用/ 中间件/ 方法/ ./ 借鉴/ 上述/ 思想/ ,/ 前期工作/ 通过/ 缓存/ 选取/ 技术/ [/ 17/ ]/ ,/ 提高/ 了/ 数据服务/ 集成/ 的/ 嵌套/ 视图/ 的/ 运行/ 效率/ ,/ 但是/ 在/ 嵌套/ 视图/ 维护/ 中/ 没有/ 考虑/ 增量/ 更新/ ,/ 当/ 总/ 元组/ 较/ 多/ ,/ 更新/ 元组/ 占/ 比较/ 少/ ,/ 更新/ 相对/ 频繁/ 时会/ 产生/ 大量/ 冗余/ 计算/ ./ 视图/ 维护/ 是/ 指当/ 基本/ 事实/ 表/ 的/ 内容/ 发生变化/ 时/ ,/ 需要/ 对/ 预先/ 存储/ 的/ 视图/ 集合/ 进行/ 更新/ ,/ 当前/ 主要/ 通过/ 两种/ 方式/ 来/ 实现/ ,/ 即/ 增量/ 更新/ 和/ 重新/ 计算/ ./ 采用/ 哪/ 种/ 方式/ 取决于/ 不同/ 的/ 场景/ ,/ 在/ 多数/ 情况/ 下/ ,/ 增量/ 更新/ 的/ 代价/ 比/ 重新/ 计算/ 代价/ 要/ 小/ ./ 当/ 增量/ 更新/ 无法/ 实现/ 时/ ,/ 也/ 必须/ 采用/ 重新/ 计算/ 的/ 方法/ ./ 文献/ [/ 13/ ]/ 给出/ 了/ 视图/ 增量/ 更新/ 的/ 基本/ 思想/ :/ 根据/ 视图/ 的/ 定义/ 生成/ 一段/ 增量/ 更新/ 程序/ ,/ 该/ 程序/ 根据/ 基本/ 数据库/ 关系/ 的/ 变化/ 以及/ 当前/ 基本/ 数据库/ 关系/ 和/ 视图/ 的/ 值/ ,/ 生成/ 增量/ 更新/ 元组/ ./ 新/ 视图/ 的/ 值/ 可以/ 通过/ 把/ 这些/ 增量/ 更新/ 元组/ 作用/ 在/ 当前/ 视图/ 上/ 得到/ ./ 这种/ 方法/ 的/ 好处/ 在于/ ,/ 只/ 计算/ 需要/ 更新/ 的/ 部分/ 数据/ ,/ 实现/ 了/ 计算/ 量/ 的/ 最小化/ ./ 关系/ 型/ 数据库/ 上/ 的/ 增量/ 更新/ 是/ 这类/ 问题/ 最/ 基本/ 的/ 情况/ ./ 除此之外/ ,/ 研究/ 人员/ 还/ 探索/ 了/ 半/ 结构化/ 数据/ (/ 包括/ XML/ 数据/ )/ 上/ 的/ 增量/ 更新/ 方法/ [/ 18/ -/ 19/ ]/ ./ 借助/ 缓存/ 进行/ 增量/ 更新/ 的/ 思想/ 也/ 运用/ 在/ XML/ 视图/ 上/ ,/ 并/ 取得/ 了/ 良好/ 的/ 效果/ ./ 然而/ ,/ 上述/ 工作/ 考虑/ 的/ 都/ 是/ 单一/ 同构/ 数据/ 的/ 增量/ 更新/ ,/ 没有/ 考虑/ 多源/ 异构/ 数据/ 的/ 增量/ 更图/ 1/ 问题/ 描述/ 示/ 例如/ 图/ 1/ 所示/ ,/ 相比/ 传统/ 的/ 数据/ 集成/ 技术/ ,/ 数据服务/ 将/ 数据/ 访问/ 接口/ 和/ 数据/ 资源/ 进行/ 分离/ ,/ 不仅/ 实现/ 了/ 嵌套/ 视图/ V/ 和/ 数据库/ 、/ CSV/ 文件/ 和/ XML/ 文件/ 的/ 松/ 耦合/ ,/ 而且/ 具有/ 良好/ 的/ 可扩展性/ ./ 更/ 重要/ 的/ 是/ ,/ 数据服务/ 输出/ 相同/ 的/ 数据/ 模式/ ,/ 使得/ 小李/ 无需/ 定义/ 中介/ 模式/ 便/ 能/ 直接/ 进行/ 集成/ ./ 假设/ v/ (/ a/ ,/ s/ )/ 是/ V/ 的/ 一个/ 新/ ,/ 为此/ 本文/ 首先/ 通过/ 数据/ 服务化/ 技术/ [/ 11/ ]/ 将/ 多源/ 异构/ 数据/ 转换成/ 嵌套/ 关系/ 模型/ 的/ 数据服务/ ,/ 并/ 在/ 此基础/ 上/ 考虑/ 增量/ 更新/ 问题/ ./ 关于/ Web/ 应用/ 维护/ 方面/ ,/ 文献/ [/ 20/ ]/ 提出/ 了/ 一种/ 通过/ 识别/ 应用/ 构造/ 的/ 界面/ 发生/ 改变/ 的/ 时间/ 和/ 方式/ 来/ 帮助/ 开发者/ 维护/ 该/ 应用/ 的/ 技术/ ,/ 然而/ 该/ 技术/ 是/ 通过/ 搜索/ 最佳/ 匹配/ 的/ Widget/ 来/ 实现/ 界面/ 维护/ ,/ 其中/ 的/ 数据/ 更新/ 只/ 采用/ 了/ 重新/ 计算/ 的/ 方式/ ./ 3/ 问题/ 分析/ 小李/ 准备/ 购买/ 某/ 汽车/ 的/ 零件/ ,/ 她/ 需要/ 了解/ 该/ 零件/ 的/ 供应/ 信息/ 及/ 零件/ 的/ 使用/ 评价/ ./ 此时/ 两个/ 数据服务/ DS1/ 和/ DS2/ 已经/ 发布/ 到/ 网络/ 上/ ./ 其中/ DS1/ 可/ 获得/ 多个/ 供应商/ 提供/ 的/ 零件/ 的/ 供应/ 信息/ ,/ 包括/ 供应商/ ID/ 、/ 零件/ 型号/ ID/ 、/ 库存量/ 等等/ ,/ 这些/ 信息/ 虽然/ 来自/ 异构/ 的/ 数据源/ ,/ 但是/ 统一/ 以/ 关系/ 输出/ ,/ 其/ 关系/ 模式/ 记为/ p/ ./ DS2/ 可/ 获得/ 每种/ 零件/ 的/ 使用/ 评价/ ,/ 它/ 以/ 零件/ 型号/ ID/ 为/ 输入/ 参数/ ,/ 可/ 获取/ 好评/ 人数/ 、/ 差评/ 人数/ 等等/ ,/ 这些/ 信息/ 也/ 以/ 关系/ 输出/ ,/ 其/ 关系/ 模式/ 记为/ q/ ./ 小/ 李/ 将/ DS1/ 的/ 零件/ 型号/ ID/ (/ 图中/ 记为/ Z/ )/ 的/ 值/ 为/ 参数值/ 逐次/ 调用/ DS2/ 并/ 连接/ 输出/ 元组/ ,/ 即可/ 得到/ 嵌套/ 视图/ V/ ,/ 如图/ 1/ 所示/ ./ 该/ 过程/ 通过/ Hilog/ 语言/ [/ 21/ ]/ 表示/ 为/ V/ (/ X/ ,/ Y/ )/ ≡/ defp/ (/ X/ ,/ Z/ )/ ,/ Z/ (/ W/ )/ ,/ q/ (/ W/ ,/ Y/ )/ ,/ 其中/ Z/ 是/ p/ 的/ 嵌套/ 属性/ ,/ 本文/ 采用/ Hilog/ 语言/ 是/ 为了/ 便于/ 表达/ 嵌套/ 属性/ ./ 实例/ (/ a/ 是/ p/ 的/ 一个/ 关系/ ,/ s/ 是/ q/ 的/ 一个/ 关系/ )/ ,/ 其中/ {/ 〈/ 1/ 〉/ ,/ 〈/ 2/ 〉/ ,/ …/ ,/ 〈/ n/ 〉/ }/ 是/ 被/ 嵌套/ 的/ 关系/ s/ 的/ 元组/ ,/ 如果/ 在/ s/ 上/ 增加/ 一条/ 元组/ 〈/ n/ +/ 1/ 〉/ ,/ 通过/ 重新/ 计算/ 的/ 方式/ 更新/ v/ (/ a/ ,/ s/ )/ ,/ 那么/ s/ 中/ 每个/ 元组/ 都/ 需要/ 和/ a/ 重新/ 连接/ ,/ 然而/ 该/ 过程/ 中/ 除了/ 插入/ 一条/ 元组/ 〈/ n/ +/ 1/ 〉/ 外/ ,/ 其它/ 操作/ 都/ 是/ 不必要/ 的/ ./ 文献/ [/ 13/ ]/ 针对/ 关系/ 模型/ 的/ 视图/ Page4/ 增量/ 更新/ 设计/ 了/ 日志/ ,/ 该/ 日志/ 中/ 记录/ 了/ 每个/ 视图/ 关联/ 的/ 基本/ 表/ 的/ 更新/ ,/ 无论/ 基本/ 表/ 关联/ 多少/ 视图/ ,/ 每个/ 基本/ 表都/ 只有/ 一个/ 日志/ ,/ 其中/ 的/ 每/ 一条/ 都/ 记录/ 了/ 更新/ 元组/ 的/ ID/ (/ 更新/ 操作/ 包括/ 插入/ 、/ 修改/ 、/ 删除/ )/ ./ 然而/ 当/ 处理/ 嵌套/ 视图/ 的/ 增量/ 更新/ 时/ ,/ 这种/ 日志/ 的/ 设计/ 碰到/ 两个/ 问题/ ./ 首先/ ,/ 随着/ 数据服务/ 增多/ ,/ 日志/ 如何/ 支持/ 嵌套/ 视图/ 的/ 扩展/ ;/ 其次/ ,/ 日志/ 如何/ 记录/ 被/ 嵌套/ 的/ 关系/ 中/ 的/ 元组/ 的/ 变化/ ./ 假设/ 数据服务/ DS2/ 输出/ 关系/ s/ 的/ 元组/ 的/ 每次/ 更新/ 都/ 在/ DS2/ 的/ 日志/ 中/ 创建/ 一条/ 记录/ ,/ 并且/ v/ 的/ 一个/ 元组/ t/ 通过/ 指针/ 方式/ 引用/ 被/ 嵌套/ 的/ 关系/ s/ ,/ 当/ s/ 的/ 元组/ r/ 发生/ 更新/ 时/ ,/ 该/ 更新/ 必须/ 能够/ 被/ v/ 和/ s/ 同时/ 发现/ ./ 然而/ ,/ 由于/ 元组/ t/ 通过/ 指针/ 方式/ 引用/ 关系/ s/ ,/ 所以/ t/ 的/ 数值/ 只有/ 在/ 删除/ 或者/ 插入/ 关系/ s/ 时才/ 会/ 改变/ ,/ 因此/ 在/ v/ 的/ 日志/ 中/ 记录/ 被/ 嵌套/ 的/ 关系/ 的/ 元组/ 变化/ 并/ 不能/ 解决/ 该/ 问题/ ./ 不仅如此/ ,/ 当/ s/ 的/ 元组/ 发生/ 更新/ 时/ ,/ 所有/ 嵌套/ 这个/ 关系/ 的/ 嵌套/ 视图/ 都/ 需要/ 遍历/ ,/ 不仅/ 增加/ 了/ 日志/ 的/ 存储/ 开销/ ,/ 而且/ 增加/ 了/ 扫描/ 日志/ 的/ 时间/ 开销/ ,/ 因此/ 本文/ 的/ 日志/ 设计/ 考虑/ 了/ 上述/ 问题/ ./ 4/ 数据服务/ 更新/ 传播/ 本文/ 对/ 已有/ 数据服务/ 进行/ 了/ 扩展/ ,/ 新增/ 了/ 轻量级/ 的/ 日志/ 组件/ ./ 整个/ 数据服务/ 更新/ 传播/ 的/ 架构/ 如图/ 2/ 所示/ ,/ 该/ 架构/ 主要/ 包含/ 3/ 个/ 部分/ :/ 数据服务/ 、/ 日志/ 组件/ 和/ 嵌套/ 视图/ ,/ 分别/ 对应/ 服务提供者/ 、/ 服务/ 监控/ 者/ 和/ 服务/ 使用者/ 3/ 个/ 角色/ ./ 其中/ ,/ 服务提供者/ 通过/ 数据/ 服务化/ 技术/ 把/ 异构/ 数据源/ 转换成/ 嵌套/ 关系/ 模型/ 的/ 数据服务/ ,/ 当/ 异构/ 数据源/ 发生/ 数据/ 更新/ 时/ ,/ 该/ 事件/ 会/ 触发/ 数据服务/ 执行/ ,/ 并且/ 把/ 执行/ 的/ 结果/ 传给/ 内部/ 的/ 匹配/ 器/ ,/ 匹配/ 器/ 通过/ 比/ 对/ 执行/ 结果/ 得到/ 更新/ 元组/ ,/ 并且/ 通过/ 消息/ 方式/ 把/ 它们/ 传送/ 给/ 日志/ 组件/ ./ 作为/ 服务/ 监控/ 者/ ,/ 日志/ 组件/ 不断/ 接收/ 来自/ 其/ 对应/ 的/ 数据服务/ 传送/ 来/ 的/ 更新/ 消息/ ,/ 并且/ 以/ 日志/ 的/ 方式/ 记录下来/ ,/ 以备/ 与/ 该/ 数据服务/ 相关/ 的/ 嵌套/ 视图/ 进行/ 更新/ ./ 作为/ 服务/ 使用者/ ,/ 用户/ 基于/ 数据服务/ 通过/ 可视化/ 操作/ 定义/ 装载/ 异构/ 数据源/ 的/ 嵌套/ 视图/ ,/ 当/ 嵌套/ 视图/ 被/ 定义/ 后/ ,/ 系统/ 通过/ 解析/ 该/ 定义/ 脚本/ 获取数据/ 服务/ 和/ 嵌套/ 视图/ 的/ 关联/ ,/ 并且/ 把/ 这种/ 关联/ 记录/ 到/ 本地/ 文件/ 中/ ./ 当/ 嵌套/ 视图/ 需要/ 更新/ 时/ ,/ 它会/ 发送/ 更新/ 通知/ 给/ 所有/ 关联/ 的/ 数据服务/ 的/ 日志/ 组件/ ,/ 日志/ 组件/ 接收/ 到/ 该/ 通知/ 后/ ,/ 计算/ 更新/ 要素/ ,/ 并且/ 把/ 它们/ 发回/ 给/ 嵌套/ 视图/ ./ 嵌套/ 视图/ 接收/ 后/ ,/ 在/ 本地/ 根据/ 增量/ 更新/ 模型/ 计算/ 更新/ 元组/ ,/ 并且/ 执行/ 更新/ ./ 数据服务/ 更新/ 传播/ 架构/ 的/ 优点/ 概括/ 如下/ :/ 首先/ 该/ 架构/ 通过/ 数据服务/ 屏蔽/ 了/ 底层/ 多源/ 、/ 异构/ 数据/ 访问/ 的/ 复杂性/ ,/ 使得/ 所有/ 的/ 数据/ 更新/ 都/ 可以/ 通过/ 元组/ 统一/ 表示/ ,/ 为/ 后面/ 的/ 增量/ 更新/ 模型/ 提供/ 了/ 基础/ ;/ 其次/ ,/ 该/ 架构/ 通过/ 数据服务/ 降低/ 了/ 嵌套/ 视图/ 和/ 数据源/ 的/ 耦合度/ ,/ 使得/ 嵌套/ 视图/ 的/ 更新/ 只/ 需/ 和/ 日志/ 组件/ 交互/ 而/ 无需/ 和/ 数据源/ 交互/ ;/ 再次/ ,/ 该/ 架构/ 通过/ 日志/ 组件/ 缓冲/ 了/ 嵌套/ 视图/ 的/ 更新/ ,/ 并且/ 使得/ 数据服务/ 和/ 嵌套/ 视图/ 可以/ 异步/ 执行/ 各自/ 的/ 程序/ ;/ 最后/ ,/ 该/ 架构/ 通过/ 记录/ 数据服务/ 和/ 嵌套/ 视图/ 的/ 关联/ ,/ 消除/ 了/ 不/ 关联/ 的/ 嵌套/ 视图/ 的/ 更新/ ,/ 并且/ 通过/ 增量/ 更新/ 模型/ 减少/ 了/ 关联/ 的/ 嵌套/ 视图/ 的/ 更新过程/ 中/ 的/ 冗余/ 计算/ ./ 除此之外/ ,/ 该/ 架构/ 还/ 可以/ 适用/ 不同/ 的/ 场景/ ,/ 当/ 总/ 元组/ 少/ 、/ 更新/ 元组/ 占/ 比/ 多/ 、/ 更新/ 次数/ 少时/ ,/ 该/ 架构/ 直接/ 采用/ 重新/ 计算/ 的/ 更新/ 策略/ ,/ 而/ 当/ 总/ 元组/ 多/ 、/ 更新/ 元组/ 占/ 比少/ 、/ 更新/ 次数/ 多时/ ,/ 该/ 架构/ 则/ 采用/ 增量/ 更新/ 的/ 策略/ ./ 下面/ 重点/ 介绍/ 增量/ 更新/ 模型/ ./ 4.1/ 增量/ 更新/ 模型/ 增量/ 更新/ 模型/ 根据/ 嵌套/ 视图/ 关联/ 的/ 数据服务/ 的/ 日志/ 记录/ ,/ 进行/ 嵌套/ 视图/ 的/ 增量/ 更新/ ,/ 本/ 节/ 首先/ 介绍/ 关系/ 视图/ 的/ 增量/ 更新/ 模型/ —/ —/ —/ 计数/ 模型/ ,/ 然后/ 给出/ 嵌套/ 视图/ 增量/ 更新/ 模型/ ./ 对于/ 关系/ 视图/ ,/ 计数/ 模型/ 为/ 其中/ 的/ 每个/ 元组/ 都/ 计算/ 其/ 来源/ 的/ 个数/ ./ 例如/ 给定/ 关系/ 的/ 元组/ {/ (/ a/ ,/ b/ )/ ,/ (/ b/ ,/ c/ )/ ,/ (/ b/ ,/ e/ )/ ,/ (/ a/ ,/ d/ )/ ,/ (/ d/ ,/ c/ )/ }/ ,/ 其上/ 生成/ 的/ 视图/ 的/ 元组/ {/ (/ a/ ,/ c/ )/ ,/ (/ a/ ,/ e/ )/ }/ ./ 其中/ (/ a/ ,/ c/ )/ 可以/ 通过/ (/ a/ ,/ b/ )/ 和/ (/ b/ ,/ c/ )/ 的/ 连接/ 得到/ ,/ 也/ 可以/ 通过/ (/ a/ ,/ d/ )/ 和/ (/ d/ ,/ c/ )/ 连接/ 得到/ ,/ 因此/ (/ a/ ,/ c/ )/ 的/ 计数/ 为/ 2/ ,/ 同理/ (/ a/ ,/ e/ )/ 的/ 计数/ 为/ 1/ ./ 例如/ 一个/ 连接/ 3/ 个/ 关系/ 的/ 视图/ V/ ≡/ defR1/ / / R2/ / / R3/ ,/ 计数/ 模型/ 根据/ 下面/ 更新/ 原语/ 组成/ 的/ 式/ (/ 1/ )/ 计算/ V/ 的/ 变更/ 元组/ Δ/ V/ ./ Δ/ V/ =/ Rnew1/ / / Rnew2/ / / Rnew3/ -/ Rold1/ / / Rold2/ / / Rold3/ =/ Δ/ R1/ / / Rnew2/ / / Rnew3/ ∪/ Rold1/ / / Δ/ R2/ / / Rnew3/ ∪/ Page5/ 其中/ Δ/ Ri/ 表示/ 关系/ Ri/ 的/ 插入/ 与/ // 或/ 删除/ 的/ 元组/ 集合/ ,/ Roldi/ =/ Ri/ 表示/ Δ/ Ri/ 应用/ 到/ Ri/ 更新/ 前/ 的/ 状态/ ,/ Rnewi/ =/ Roldi/ ∪/ Δ/ Ri/ 表示/ Δ/ Ri/ 应用/ 到/ Ri/ 更新/ 后/ 的/ 状态/ ,/ ∪/ 表示/ 集合/ 并/ ./ 在/ 元组/ 变更/ 集合/ 中/ ,/ 插入/ (/ 删除/ )/ 元组/ 是/ 通过/ 正/ (/ 负/ )/ 计数/ 来/ 表示/ ,/ 修改/ 元组/ 通过/ 先/ 删除/ 旧/ 元组/ 然后/ 再/ 插入/ 新元/ 组来/ 表示/ ./ 视图/ V/ 的/ 每个/ 元组/ 都/ 有/ 一个/ 计数/ ,/ 并且/ 根据/ 下面/ 的/ 3/ 条/ 规则/ 合并/ 变更/ 元组/ Δ/ V/ ,/ 从而/ 得到/ 新/ 的/ 视图/ :/ (/ 1/ )/ 如果/ 计数/ 为/ 正数/ ,/ 元组/ 计数/ 则/ 增加/ ./ (/ 2/ )/ 如果/ 计数/ 为/ 负数/ ,/ 元组/ 计数/ 则/ 减少/ ./ (/ 3/ )/ 如果/ V/ 中/ 元组/ 计数/ 为/ 零/ ,/ 删除/ 该/ 元组/ ./ 因此/ 如果/ 能够/ 正确/ 地/ 找到/ 嵌套/ 视图/ 变更/ 元组/ 集合/ ,/ 那么/ 嵌套/ 视图/ 增量/ 更新/ 也/ 可以/ 通过/ 式/ (/ 1/ )/ 来/ 计算/ ./ 下面/ 通过/ 一个/ 例子/ 来/ 进一步/ 解释/ ./ 假设/ 两个/ 数据服务/ 的/ 输出/ 的/ 关系/ 模式/ 是/ Reviewer/ =/ [/ Nm/ ,/ Dependent/ ]/ ,/ Supplier/ =/ [/ D/ -/ Nm/ ]/ ,/ 其中/ Dependent/ =/ [/ D/ -/ Nm/ ,/ Year/ ]/ ,/ 它们/ 返回/ 关系/ 的/ 元组/ 如下/ :/ Reviewer/ =/ {/ (/ Fred/ ,/ D1/ )/ ,/ (/ Mary/ ,/ D2/ )/ }/ ;/ Supplier/ =/ {/ (/ Dave/ )/ ,/ (/ Jane/ )/ }/ ;/ D1/ =/ {/ (/ Dave/ ,/ 1985/ )/ ,/ (/ Bob/ ,/ 2010/ )/ ,/ (/ Jane/ ,/ 1995/ )/ }/ ;/ D2/ =/ {/ (/ Dave/ ,/ 1985/ )/ ,/ (/ Alice/ ,/ 2003/ )/ }/ ,/ 其中/ ,/ D1/ 和/ D2/ 是/ Dependent/ 关系/ 的/ id/ ./ 用户/ 通过/ 上述/ 两个/ 数据服务/ 可以/ 定义/ 零件/ 供应商/ 供应/ 的/ 零件/ 的/ 嵌套/ 视图/ V/ ,/ 其/ Hilog/ 定义/ 如下/ :/ V/ (/ X/ ,/ Z/ )/ ≡/ defReviewer/ (/ X/ ,/ Y/ )/ ,/ Y/ (/ Z/ ,/ A/ )/ ,/ Supplier/ (/ Z/ )/ ./ V/ 的/ 缓存/ 结果/ 是/ {/ (/ Fred/ ,/ Dave/ )/ ,/ (/ Fred/ ,/ Jane/ )/ ,/ (/ Mary/ ,/ Dave/ )/ }/ ./ 当/ Supplier/ 的/ 元组/ 更新/ 时/ ,/ 根据/ 式/ (/ 1/ )/ 计算/ Δ/ V/ ./ 由于/ Supplier/ 中/ 没有/ 嵌套/ ,/ 因此/ Δ/ V/ 直接/ 表示/ 为/ Δ/ V/ (/ X/ ,/ Z/ )/ =/ Reviewerold/ (/ X/ ,/ Y/ )/ / / Yold/ (/ Z/ ,/ A/ )/ / / Δ/ Supplier/ (/ Z/ )/ ./ 如果/ 从/ Supplier/ 中/ 删除/ Jane/ (/ 可以/ 表示/ 成/ Δ/ Supplier/ (/ Z/ )/ =/ {/ (/ Jane/ )/ -/ 1/ }/ )/ ,/ 那么/ 将/ 产生/ Δ/ V/ =/ {/ (/ Fred/ ,/ Jane/ )/ -/ 1/ }/ ./ 上述/ 例子/ 表明/ 在/ 非/ 嵌套/ 的/ 关系/ 上/ 进行/ 增量/ 更新/ 是/ 非常/ 直接/ 和/ 简单/ 的/ ./ 注意/ ,/ 由于/ Y/ 是/ 变量/ ,/ Yold/ 的/ 表示/ 并/ 不是/ 很/ 精确/ ./ 下面/ 讨论/ 如何/ 通过/ 变换/ Yold/ 消除/ 变量/ Y/ ./ 假设/ 一个/ 嵌套/ 关系/ R/ =/ [/ …/ ,/ S/ ,/ …/ ]/ ,/ 其中/ S/ 是/ R/ 的/ 一个/ 嵌套/ 属性/ ,/ 里面/ 包含/ 了/ 一个/ 被/ 嵌套/ 的/ 关系/ ./ 对/ 每/ 一个/ 这样/ 的/ S/ ,/ 这里/ 定义/ 了/ 一个/ 函数/ :/ 当/ X/ 是/ S/ 表示/ 的/ 被/ 嵌套/ 的/ 关系/ 时/ ,/ us/ (/ X/ )/ 是/ 真/ ,/ 否则/ us/ (/ X/ )/ 是/ 假/ ./ 对/ 每个/ 这样/ 的/ 嵌套/ 属性/ S/ ,/ 这里/ 定义/ 了/ 它/ 的/ 抽取/ 函数/ :/ es/ (/ X/ ,/ A1/ ,/ …/ ,/ Ak/ )/ =/ us/ (/ X/ )/ / / X/ (/ A1/ ,/ …/ ,/ Ak/ )/ (/ 2/ )/ 其中/ S/ =/ [/ A1/ ,/ …/ ,/ Ak/ ]/ ,/ Ai/ 是/ S/ 的/ 关系/ 模式/ 的/ 属性/ ,/ 1/ / i/ / k/ ./ 对于/ 上述/ 例子/ 中/ 的/ 嵌套/ 属性/ Dependent/ ,/ 可以/ 得到/ uDependent/ =/ {/ D1/ ,/ D2/ }/ 和/ eDependent/ =/ {/ (/ D1/ ,/ Dave/ ,/ 1985/ )/ ,/ (/ D1/ ,/ Bob/ ,/ 2010/ )/ ,/ (/ D1/ ,/ Jane/ ,/ 1995/ )/ ,/ (/ D2/ ,/ Dave/ ,/ 1985/ )/ ,/ (/ D2/ ,/ Alice/ ,/ 2003/ )/ }/ ./ 抽取/ 函数/ 通过/ 将/ 嵌套/ 的/ Dependent/ 关系/ 转换成/ 非/ 嵌套/ 的/ 关系/ eDependent/ ,/ 消除/ 了/ 变量/ Dependent/ ,/ 方便/ 了/ 增量/ 更新/ 计算/ ./ 再次/ 考虑/ 这个/ 嵌套/ 关系/ R/ =/ [/ …/ ,/ S/ ,/ …/ ]/ ,/ 其中/ S/ 是/ 嵌套/ 属性/ ./ 假设/ 嵌套/ 视图/ V/ 是/ 在/ R/ 和/ S/ 上/ 定义/ 得到/ ,/ 那么/ V/ =/ R/ (/ …/ ,/ X/ ,/ …/ )/ / / X/ (/ …/ )/ 是/ V/ 的/ 表达式/ (/ 这里/ X/ 是/ 出现/ 在/ 嵌套/ 属性/ S/ 位置/ 上/ 的/ 变量/ )/ ,/ 相比/ 直接/ 在/ 表达式/ 上/ 进行/ 计算/ ,/ 这里/ 选择/ 计算/ 下面/ 的/ 等价/ 表达式/ ./ 通过/ 这种/ 变换/ ,/ V/ 可以/ 不再/ 使用/ 变量/ 作为/ 关系/ 的/ 名称/ ./ 如果/ 把/ es/ 看作/ 一个/ 关系/ ,/ 那么/ 根据/ 计数/ 模型/ ,/ Δ/ V/ 可以/ 表示/ 成/ Δ/ R/ (/ …/ ,/ X/ ,/ …/ )/ / / enews/ (/ X/ ,/ …/ )/ ∪/ Rold/ (/ …/ ,/ X/ ,/ …/ )/ / / Δ/ es/ (/ X/ ,/ …/ )/ ,/ 如果/ 有/ 多层/ 嵌套/ 的/ 情况/ ,/ 例如/ S/ 又/ 包含/ 一个/ 被/ 嵌套/ 的/ 关系/ T/ 作为/ 其中/ 的/ 一个/ 嵌套/ 属性/ (/ S/ =/ [/ …/ ,/ T/ ,/ …/ ]/ )/ ,/ 那么/ 可以/ 根据/ S/ 和/ eT/ 递归/ 地/ 表达/ Δ/ es/ ./ 因此/ V/ 的/ 更新/ 元组/ Δ/ V/ 可以/ 通过/ 下面/ 的/ 更新/ 原语/ 进行/ 计算/ :/ Δ/ V/ (/ X/ ,/ Z/ )/ =/ Δ/ Reviewer/ (/ X/ ,/ Y/ )/ / / enew/ 假设/ V/ 被/ 缓存/ 后/ ,/ Fred/ 把/ 他/ 的/ 名字/ 修改/ 成/ Greg/ ,/ 同时/ 供应商/ 不再/ 是/ Dave/ ./ 因此/ Δ/ Reviewer/ (/ X/ ,/ Y/ )/ =/ {/ (/ Fred/ ,/ D1/ )/ -/ 1/ ,/ (/ Greg/ ,/ D1/ )/ +/ 1/ }/ 并且/ Δ/ eDependent/ (/ Y/ ,/ Z/ ,/ A/ )/ =/ {/ (/ D1/ ,/ Dave/ ,/ 85/ )/ -/ l/ }/ ./ 根据/ 上面/ 的/ 更新/ 原语/ ,/ Δ/ V/ (/ X/ ,/ Z/ )/ =/ {/ (/ Fred/ ,/ Dave/ )/ -/ 1/ ,/ (/ Fred/ ,/ Jane/ )/ -/ 1/ ,/ (/ Greg/ ,/ Jane/ )/ +/ 1/ }/ ./ 在/ 上述/ 计算/ 的/ 过程/ 中/ ,/ Δ/ V/ 只/ 和/ 被/ 嵌套/ 的/ 关系/ Dependent/ 中/ 变更/ 的/ 元组/ 个数/ 有关/ ,/ 而/ 和/ 被/ 嵌套/ 的/ 关系/ Dependent/ 的/ 总/ 元组/ 个数/ 无关/ ./ 为了/ 能够/ 提高/ 增量/ 更新/ 计算/ 的/ 效率/ ,/ Δ/ es/ (/ X/ ,/ …/ )/ 必须/ 能/ 被/ 快速/ 得到/ ,/ 以/ 避免/ 扫描/ R/ 中/ 所有/ 元组/ ,/ 为此/ 本文/ 设计/ 了/ 记录/ 数据服务/ 更新/ 的/ 日志/ 组件/ ./ 5/ 日志/ 组件/ 实现/ 日志/ 组件/ 主要/ 包括/ 两个/ 部分/ ,/ 一个/ 是/ 嵌套/ 描述/ 文件/ ,/ 该/ 文件/ 记录/ 了/ 同一个/ 数据服务/ 输出/ 的/ 所有/ 关系/ 的/ 元组/ 更新/ ./ 另/ 一个/ 是/ 描述/ 关系/ 的/ 哪些/ 元组/ 嵌套/ 了/ 另/ 一个/ 的/ 关系/ 的/ 索引/ ,/ 该/ 索引/ 能够/ 加快/ Δ/ es/ (/ X/ ,/ …/ )/ 的/ 计算/ ./ 由于/ 日志/ 组件/ 会/ 带来/ 额外/ 的/ 系统/ 开销/ (/ 例如/ 存储/ 日志/ 的/ 空间/ 开销/ ,/ 日志/ 更新/ 的/ 时间/ 开销/ ,/ 视图/ 更新/ 的/ 时间/ 开销/ )/ ,/ 所以/ 从/ 以下/ 3/ 个/ 方面/ Page6/ 考虑/ 日志/ 组件/ 的/ 设计/ :/ (/ 1/ )/ 日志/ 记录/ 的/ 开销/ 必须/ 和/ 嵌套/ 视图/ 个数/ 无关/ ,/ 因此/ 数据服务/ 和/ 嵌套/ 视图/ 需要/ 进行/ 分离/ ,/ 数据服务/ 需要/ 设计/ 独立/ 的/ 日志/ ./ (/ 2/ )/ 为了/ 避免/ 嵌套/ 视图/ 每次/ 更新/ 都/ 重新/ 扫描/ 所有/ 数据服务/ 的/ 日志/ 记录/ ,/ 嵌套/ 视图/ 的/ 更新/ 必须/ 只/ 和/ 相关/ 的/ 数据服务/ 的/ 日志/ 记录/ 有关/ ./ (/ 3/ )/ 存储/ 日志/ 记录/ 的/ 空间/ 开销/ 尽可能少/ ,/ 因此/ 日志/ 记录/ 不能/ 有/ 冗余/ 或者/ 重复/ ,/ 旧/ 的/ 或者/ 冗余/ 的/ 日志/ 记录/ 必须/ 及时/ 清除/ ./ 5.1/ 日志/ 的/ 数据结构/ 在/ 实现/ 上/ ,/ 数据服务/ 返回/ 的/ 关系/ 是/ 通过/ 一个/ 集合/ 类来/ 表示/ 的/ ./ 集合/ 类/ 包含/ 缓存/ 的/ 元组/ 和/ 描述/ 文件/ ,/ 其中/ 元组/ 是/ 通过/ 对象/ 来/ 实现/ ,/ 而/ 描述/ 文件/ 包含/ 关系/ 的/ 元/ 信息/ ,/ 例如/ 创建/ 时间/ 、/ 元组/ 的/ 指针/ 以及/ 其它/ 支持/ 嵌套/ 视图/ 的/ 指针/ ./ 除此之外/ ,/ 集合/ 类/ 也/ 提供/ 了/ 必要/ 的/ 成员/ 函数/ ,/ 例如/ 元组/ 中/ 的/ insert/ (/ )/ 、/ remove/ (/ )/ 和/ replace/ (/ )/ ,/ 其中/ ,/ insert/ (/ )/ 是/ 创建/ 一个/ 给定/ 数值/ 的/ 元组/ ,/ 并且/ 把/ 它/ 插入/ 到/ 元组/ 中/ ;/ remove/ (/ )/ 首先/ 把/ 元组/ 标记/ 为/ 删除/ ,/ 然后/ 把/ 该/ 元组/ 放到/ 移除/ 元组/ 池中/ ./ 直到/ 删除/ 操作/ 传播/ 到/ 所有/ 依赖/ 该/ 元组/ 所在/ 关系/ 的/ 嵌套/ 视图/ 后/ ,/ 该/ 元组/ 才/ 在/ 移除/ 元组/ 池中/ 被/ 删除/ ;/ replace/ (/ )/ 修改/ 已有/ 元组/ 的/ 数值/ ,/ 同时/ 创建/ 一个/ 保存/ 旧/ 的/ 数值/ 的/ 元组/ ,/ 并且/ 把/ 该/ 元组/ 放到/ 移除/ 元组/ 池中/ ./ 嵌套/ 视图/ V/ 的/ 更新/ 只/ 和/ 与/ V/ 关联/ 的/ 数据服务/ 自从/ 上次/ V/ 更新/ 后/ 的/ 日志/ 记录/ 有关/ ,/ 其中/ DeltaIterator/ 提供/ 迭代/ V/ 关联/ 的/ 数据服务/ 的/ 日志/ 记录/ ,/ 从而/ 满足/ 日志/ 组件/ 设计/ 的/ 第/ 1/ 个/ 条件/ ./ 当/ DeltaIterator/ 对象/ 创建/ 后/ ,/ 系统/ 从/ 上次/ V/ 更新/ 后/ 的/ 指针/ 开始/ 扫描/ 关联/ 的/ 日志/ 记录/ ,/ 并且/ 通过/ 对/ 日志/ 记录/ 的/ oid/ 进行/ hashing/ ,/ 在/ 内存/ 中/ 构建/ hashtable/ ./ 由于/ hashtable/ 的/ 创建/ 时间/ 只/ 和/ 关联/ 的/ 日志/ 记录/ 有关/ ,/ 同时/ 使用/ hashtable/ 的/ 时间/ 开销/ 很少/ ,/ 从而/ 满足/ 日志/ 组件/ 设计/ 的/ 第/ 2/ 个/ 条件/ ./ 为了/ 在/ 嵌套/ 视图/ 中/ 有效/ 发现/ 被/ 嵌套/ 的/ 关系/ 的/ 更新/ ,/ 必须/ 在/ 嵌套/ 视图/ 中/ 建立/ 嵌套/ 属性/ 的/ 元组/ 和/ 被/ 嵌套/ 的/ 关系/ 之间/ 的/ 关联/ ./ 在/ 实现/ 上/ ,/ 对于/ 嵌套/ 属性/ 中/ 的/ 元组/ 更新/ 可以/ 记录/ 在/ 被/ 嵌套/ 的/ 关系/ 的/ 日志/ 中/ ./ 原始/ 的/ 更新/ 传播/ 架构/ 是/ 把/ 被/ 嵌套/ 的/ 关系/ 的/ 元组/ 更新/ 传播/ 到/ 元组/ 中/ 引用/ 了/ 被/ 嵌套/ 的/ 关系/ 的/ 所有/ 嵌套/ 视图/ ./ 当/ 插入/ 日志/ 记录/ 时/ ,/ 需要/ 遍历/ 所有/ 被/ 嵌套/ 的/ 关系/ 的/ 元组/ ,/ 当/ 嵌套/ 视图/ 的/ 很多/ 元组/ 包含/ 对/ 被/ 嵌套/ 的/ 关系/ 的/ 引用/ ,/ 或者/ 嵌套/ 层次/ 很/ 深时/ ,/ 那么/ 日志/ 查找/ 的/ 代价/ 会/ 很/ 高/ ,/ 存储/ 日志/ 的/ 空间/ 开销/ 也/ 会/ 急剧/ 增长/ ./ 因此/ 为了/ 满足/ 日志/ 组件/ 设计/ 的/ 第/ 3/ 个/ 条件/ ,/ 这里/ 必须/ 进行/ 额外/ 工作/ ,/ 能够/ (/ 1/ )/ 有效/ 地/ 查找/ 和/ 记录/ 被/ 嵌套/ 的/ 关系/ 的/ 更新/ ;/ (/ 2/ )/ 有效/ 地/ 建立/ 嵌套/ -/ 被/ 嵌套/ 关系/ ;/ (/ 3/ )/ 实现/ 尽可能/ 小/ 的/ 更新/ 的/ 开销/ ./ 为此/ ,/ 这里/ 为/ 相同/ 关系/ 模式/ 的/ 所有/ 被/ 嵌套/ 的/ 关系/ 设计/ 一个/ 包含/ 日志/ 的/ 描述/ 文件/ ./ 一旦/ 嵌套/ 这个/ 关系/ 的/ 嵌套/ 视图/ 被/ 缓存/ ,/ 描述/ 文件/ 就/ 被/ 创建/ ,/ 因此/ 也/ 称为/ 嵌套/ 描述/ 文件/ ./ 每个/ 嵌套/ 视图/ 定义/ 后/ 都/ 检查/ 其中/ 被/ 嵌套/ 的/ 关系/ ./ 由于/ 每个/ 被/ 嵌套/ 的/ 关系/ 中/ 的/ 元组/ 都/ 是/ 相同/ 类型/ 的/ ,/ 因此/ 嵌套/ 描述/ 文件/ 中/ 所有/ 的/ 日志/ 记录/ 都/ 是/ 相同/ 类型/ 的/ ./ 例如/ ,/ 在/ 创建/ 一个/ 嵌套/ 描述/ 文件/ D/ 后/ ,/ 被/ 嵌套/ 的/ 关系/ N/ 的/ 每次/ 更新/ 都/ 记录/ 在/ D/ 的/ 日志/ 中/ ,/ 而/ 不是/ N/ 的/ 日志/ 中/ ./ 在/ N/ 更新/ 的/ 过程/ 中/ ,/ 当/ 调用/ insert/ (/ )/ ,/ remove/ (/ )/ 或者/ replace/ (/ )/ 方法/ 时/ ,/ 这些/ 方法/ 首先/ 检查/ 是否/ 存在/ 包含/ N/ 的/ 描述/ 文件/ D/ ,/ 如果/ 存在/ ,/ 那么/ 在/ D/ 中/ 插入/ 一条/ 日志/ 记录/ ,/ 这里/ 插入/ 操作/ 只/ 做/ 一次/ ,/ 同时/ 日志/ 记录/ 通过/ hashing/ 消除/ 冗余/ 的/ 更新/ 记录/ 来/ 计算/ 最终/ 的/ 更新/ 净/ 效果/ ,/ 例如/ in/ -/ sert/ -/ remove/ 、/ replace/ -/ remove/ 、/ replace/ -/ replace/ 以及/ insert/ -/ replace/ ,/ 从而/ 减少/ 了/ 存储/ 日志/ 的/ 空间/ 开销/ ,/ 满足/ 了/ 日志/ 组件/ 设计/ 的/ 第/ 3/ 个/ 条件/ ./ 下面/ 给出/ 一个/ 具体/ 例子/ ,/ 假设/ 3/ 个/ 数据服务/ 输出/ 的/ 关系/ 模式/ R/ ,/ T/ ,/ U/ ,/ 其中/ R/ =/ [/ T/ ,/ …/ ]/ ,/ T/ =/ [/ U/ ,/ …/ ]/ ,/ U/ =/ [/ …/ ]/ ,/ 并且/ T/ 包含/ 两个/ 关系/ T1/ 和/ T2/ ,/ U/ 包含/ 两个/ 关系/ U1/ 和/ U2/ ./ 图/ 3/ 给出/ 了/ R/ ,/ T1/ ,/ T2/ ,/ U1/ ,/ U2/ 的/ 日志/ 数据结构/ ,/ 目前/ 暂时/ 不/ 考虑/ 日志/ 中/ 的/ 索引/ ./ 如图所示/ ,/ R/ 的/ 元组/ 包含/ 指向/ T1/ 和/ T2/ 的/ 指针/ ./ 图中/ 标记/ R/ ,/ T1/ ,/ T2/ 的/ 盒子/ 表示/ 它们/ 的/ 描述/ 文件/ ./ 假设/ 在/ R/ ,/ T/ 和/ U/ 上/ 定义/ 了/ 两个/ 嵌套/ 视图/ V1/ 和/ V2/ ,/ V1/ ≡/ defR/ (/ X/ ,/ …/ )/ / / X/ (/ Y/ ,/ …/ )/ / / Y/ (/ …/ )/ ,/ 其中/ ,/ 变量/ X/ 是/ 嵌套/ 属性/ ,/ 表示/ 被/ 嵌套/ 的/ 关系/ T/ ;/ 变量/ Y/ 也/ 是/ 嵌套/ 属性/ ,/ 表示/ 被/ 嵌套/ 的/ 关系/ U/ ./ 如图/ 3/ 所示/ ,/ R/ 的/ 描述/ 文件/ 包含/ 指向/ 日志/ 记录/ 的/ 指针/ (/ 标记/ 为/ V1/ 和/ V2/ )/ ,/ 它们/ 指向/ V1/ (/ V2/ )/ 自从/ 上次/ 更新/ 后/ 的/ 最后/ 一条/ 更新/ 记录/ ./ R/ 中/ oid/ =/ 1/ 和/ oid/ =/ 3/ 这/ 两个/ 元组/ 分别/ 称为/ t1/ 和/ t3/ (/ oid/ =/ 2/ 是/ 已经/ 删除/ 的/ 元组/ ,/ 暂时/ 必须/ 被/ 保存/ )/ ./ t1/ 引用/ 了/ 被/ 嵌套/ 的/ 关系/ T2/ ,/ T2/ 包含/ oid/ =/ 20/ 的/ 更新/ 后/ 的/ 元组/ t20/ (/ 元组/ t20/ 开始/ 和/ 元组/ t21/ 包含/ 相同/ 的/ 内容/ ,/ 当/ t20/ 被/ 修改/ 后/ ,/ 首先/ 创建/ 它/ 的/ 备份/ t21/ ,/ 图/ 3/ 中/ T/ 的/ 嵌套/ 描述/ 文件/ 的/ 最后/ 一条/ 日志/ 记录/ 了/ 这个/ 过程/ ,/ 这/ 条/ 日志/ 记录/ 包含/ 了/ 关系/ 的/ 描述/ 文件/ 的/ oid/ )/ ./ 然后/ 从/ 日志/ 记录/ 中/ 获取/ 与/ V1/ 和/ V2/ 相关/ 的/ 更新/ 操作/ ./ 例如/ ,/ V1/ 和/ V2/ 需要/ 使用/ t1/ 计算/ 嵌套/ 属性/ 的/ 抽取/ 函数/ ./ 由于/ 更新/ 操作/ 只/ 作用/ 到/ T2/ 和/ U2/ ,/ 所以/ t1/ 不/ 在/ R/ 的/ 日志/ 中/ ,/ 但是/ 可以/ 在/ T/ 和/ U/ 的/ 嵌套/ 描述/ 文件/ 中/ 通过/ 索引/ 被/ 发现/ ./ Page7/ 图/ 3/ 日志/ 组件/ 的/ 架构/ 为了/ 避免/ 嵌套/ 视图/ 每次/ 更新/ 都/ 重新/ 扫描/ 所有/ 数据服务/ 的/ 日志/ 记录/ ,/ 这里/ 考虑/ 为/ 每个/ 嵌套/ 描述/ 文件/ 设计/ 一个/ 索引/ ./ 建立/ 索引/ 的/ 目的/ 是/ 能够/ 快速/ 地/ 把/ 被/ 嵌套/ 的/ 关系/ 的/ 更新/ (/ 尤其/ 是/ 那些/ 出现/ 在/ 深度/ 被/ 嵌套/ 的/ 关系/ 的/ 更新/ )/ 转换成/ 嵌套/ 属性/ 的/ 抽取/ 函数/ ./ 索引/ 和/ 对应/ 的/ 描述/ 文件/ 同时/ 被/ 创建/ ,/ 并且/ 在/ 嵌套/ 视图/ 更新/ 的/ 过程/ 中/ 被/ 维护/ ./ 索引/ 的/ 每个/ key/ 是/ 嵌套/ 关系/ 的/ 元组/ 引用/ 的/ 被/ 嵌套/ 的/ 关系/ 的/ 描述/ 文件/ 的/ oid/ (/ 例如/ T1/ ,/ T2/ )/ ,/ 这种/ 设计/ 使得/ 嵌套/ 关系/ 中/ 每个/ 嵌套/ 另/ 一个/ 关系/ 的/ 元组/ 的/ oid/ 能够/ 被/ 直接/ 发现/ ,/ 例如/ 元组/ t1/ 包含/ 被/ 嵌套/ 的/ 关系/ T2/ 能够/ 被/ 直接/ 发现/ ./ 当/ 嵌套/ 视图/ 首次/ 更新/ 时/ ,/ 通过/ 使用/ 从/ 被/ 嵌套/ 的/ 关系/ 的/ 描述/ 文件/ 的/ oid/ (/ 例如/ T2/ )/ 到/ 嵌套/ 关系/ 的/ 元组/ oid/ (/ 例如/ t1/ )/ 的/ 映射/ 初始化/ 索引/ ,/ 其中/ 嵌套/ 关系/ 的/ 每个/ 元组/ 必须/ 被/ 插入/ 到/ 索引/ 中/ ./ 当/ 索引/ 被/ 创建/ 后/ ,/ 嵌套/ 属性/ 中/ 的/ 新元/ 组/ 也/ 可以/ 插入/ 到/ 嵌套/ 视图/ 中/ ./ 当/ 嵌套/ 视图/ 开始/ 更新/ 时/ ,/ 这些/ 新元/ 组/ 的/ oid/ 才/ 出现/ 在/ 被/ 嵌套/ 的/ 关系/ 的/ 描述/ 文件/ 的/ 索引/ 中/ ,/ 新/ 插入/ 的/ 元组/ 的/ 映射/ 必须/ 在/ 索引/ 中/ 创建/ (/ 例如/ 在/ 上/ 一次/ V2/ 的/ 更新过程/ 中/ ,/ 当/ t3/ 插入/ 的/ 日志/ 记录/ 被/ 处理/ 时/ ,/ T1/ 到/ t3/ 的/ 映射/ 才/ 被/ 插入/ 到/ T/ 的/ 索引/ 中/ )/ ./ 垃圾/ 收集器/ 会/ 删除/ 索引/ 中/ 不再/ 被/ 嵌套/ 视图/ 使用/ ,/ 并且/ 被/ 标注/ 为/ removed/ 的/ oid/ ./ 由于/ 索引/ 不会/ 增加/ 更新/ 的/ 开销/ ,/ 所以/ 满足/ 日志/ 组件/ 设计/ 的/ 第/ 3/ 个/ 条件/ ./ 类似/ 的/ ,/ 日志/ 记录/ 也/ 可以/ 显示/ 一个/ 嵌套/ 属性/ 的/ 元组/ 已经/ 被/ 删除/ ,/ 这种/ 情况/ 下/ 它/ 的/ 索引/ 也/ 一定/ 要/ 被/ 删除/ ,/ 例如/ 当/ 删除/ oid/ =/ 2/ 的/ 日志/ 记录/ 被/ 处理/ 时/ 从/ T1/ 到/ oid/ =/ 2/ 的/ 映射/ 的/ 索引/ 必须/ 被/ 删除/ ./ 在/ 实现/ 上/ ,/ 本文/ 通过/ 在/ 嵌套/ 描述/ 文件/ 中/ 存储/ 一个/ 反向/ 指针/ 列表/ 来/ 减少/ 查找时间/ ,/ 例如/ T1/ 包含/ 指向/ 包含/ 2/ 和/ 3/ 的/ 列表/ ./ 5.2/ 增量/ 更新/ 的/ Delta/ 算法/ 下面/ 仍以/ V1/ 为例/ ,/ 重点/ 介绍/ V1/ 增量/ 更新/ 中/ 的/ 抽取/ 函数/ eT/ 和/ eU/ 的/ 计算/ 步骤/ ./ 步骤/ 1/ ./ 非/ 嵌套/ 的/ 关系/ ./ 对/ 在/ 嵌套/ 视图/ 定义/ 中/ 出现/ 的/ 非/ 嵌套/ 的/ 关系/ ,/ 根据/ 5.1/ 节/ 介绍/ 的/ 方式/ 扫描/ 对应/ 的/ 日志/ 记录/ 从而/ 创建/ hashbucket/ ,/ 一个/ bucket/ 包含/ 日志/ 记录/ 的/ 内存/ 备份/ ./ 如果/ 日志/ 记录/ 中/ 包含/ insert/ -/ flag/ 和/ oid/ 值/ onew/ ,/ 那么/ 在/ 对应/ 的/ 嵌套/ 描述/ 文件/ 的/ 索引/ 中/ 新增/ 一个/ 从/ onew/ 的/ 被/ 嵌套/ 的/ 关系/ 到/ onew/ 的/ 映射/ (/ 如果/ 之前/ 不/ 存在/ 的话/ )/ ,/ 如果/ 索引/ 中/ 没有/ 出现/ 任何/ 从/ 这个/ 被/ 嵌套/ 的/ 关系/ 的/ 映射/ ,/ 那么/ 对下/ 一级/ 被/ 嵌套/ 的/ 关系/ 递归/ 地/ 进行/ 这个/ 操作/ ./ 步骤/ 2/ ./ 被/ 嵌套/ 的/ 关系/ ./ 对/ 在/ 嵌套/ 视图/ 定义/ 中/ 出现/ 的/ 下/ 一级/ 被/ 嵌套/ 的/ 关系/ (/ 例如/ 被/ X/ 绑定/ 的/ 关系/ T/ )/ ,/ 和/ 步骤/ 1/ 类似/ ,/ 扫描/ 其/ 对应/ 的/ 嵌套/ 描述/ 文件/ 的/ 日志/ 记录/ ,/ 创建/ hashbucket/ ./ 接着/ ,/ 通过/ 被/ 扫描/ 的/ 日志/ 记录/ L/ 中/ 存储/ 的/ 描述/ 文件/ 的/ oid/ (/ 例如/ T1/ 和/ T2/ )/ 来/ 查找/ 索引/ 的/ 内容/ ,/ 从而/ 判断/ L/ 是否/ 影响/ 嵌套/ 这个/ 关系/ 的/ 元组/ ./ L/ 中/ 记录/ 的/ oid/ 的/ 元组/ 用来/ 追踪/ 嵌套/ 描述/ 文件/ 的/ 索引/ ./ 如果/ 该/ 元组/ 映射/ 到/ 的/ 所有/ 元组/ 的/ oid/ 都/ 没有/ 出现/ 在/ hashtable/ 的/ 映射/ 中/ ,/ 那么/ 根据/ 步骤/ 1/ 把/ 这些/ oid/ 添加/ 到/ hashbucket/ 中/ (/ 除了/ 那些/ 被/ 标记/ 为/ 删除/ 的/ 元组/ 或者/ 是/ 旧版本/ 的/ 元组/ 的/ oid/ )/ ./ 如/ Page8/ 果/ 被/ 嵌套/ 的/ 关系/ 包含/ 该/ 元组/ ,/ 递归/ 追踪/ 它/ 包含/ 下/ 一级/ 的/ 关系/ 的/ 嵌套/ 描述/ 文件/ ,/ 并且/ 把/ 包含/ 的/ 元组/ 添加/ 到/ hashtable/ 中/ (/ 如果/ 这些/ 元组/ 不/ 在/ hashtable/ 的话/ )/ ,/ 直到/ 没有/ 要/ 包含/ 的/ 元组/ 或者/ 所有/ 元组/ 都/ 添加/ 到/ hashtable/ 中才/ 终止/ ./ 步骤/ 3/ ./ 递归/ 应用/ 步骤/ 2/ 到/ 下/ 一级/ 的/ 被/ 嵌套/ 的/ 关系/ 中/ (/ 例如/ Y/ 绑定/ 的/ U/ )/ ./ 这里/ 分析/ 图/ 3/ 所示/ V1/ ,/ 它/ 的/ 增量/ 计算/ 包括/ 扫描/ R/ ,/ T/ 和/ U/ 的/ 日志/ 记录/ 来/ 计算/ 它们/ 更新/ 的/ 净/ 效果/ ./ 在/ 步骤/ 1/ 中/ ,/ 非/ 嵌套/ 的/ 关系/ R/ 的/ 日志/ 被/ 扫描/ ,/ 并且/ oid/ =/ 2/ ,/ 3/ 被/ 添加/ 到/ hashtable/ 中/ ./ 在/ 步骤/ 2/ 中/ ,/ 嵌套/ 描述/ 文件/ T/ 的/ 日志/ 被/ 扫描/ ,/ 并且/ oid/ =/ 11/ ,/ 12/ ,/ 20/ 被/ 添加/ 到/ bucket/ 中/ ./ 同时/ ,/ 把/ oid/ =/ 1/ 添加/ 到/ 步骤/ 1/ 中为/ R/ 创建/ 的/ hashtable/ 中/ (/ oid/ =/ 2/ ,/ 3/ 已经/ 存在/ ,/ oid/ =/ 1/ 是/ 通过/ 追踪/ T2/ 的/ 描述/ 文件/ 的/ oid/ 对应/ 的/ 索引/ 发现/ 的/ ,/ R/ 的/ 元组/ t1/ 本身/ 不/ 被/ 更新/ 但是/ 它/ 嵌套/ 的/ 关系/ T2/ 被/ 更新/ )/ ./ 在/ 步骤/ 3/ 中/ ,/ U/ 的/ 日志/ 被/ 扫描/ ,/ 并且/ 创建/ 了/ 它/ 的/ hashbucket/ (/ 这是/ 步骤/ 2/ 的/ 递归/ 步骤/ )/ ,/ oid/ =/ 31/ ,/ 36/ 被/ 插入/ 到/ U/ 的/ hashtable/ 中/ ./ 在/ 步骤/ 2/ 中/ ,/ oid/ =/ 10/ 被/ 添加/ 到/ 为/ T/ 创建/ 的/ hashtable/ 中/ ,/ 因为/ oid/ =/ 10/ 没有/ 在/ 那个/ hashtable/ 中/ 出现/ 过/ ,/ 而/ oid/ =/ 20/ ,/ 11/ 已经/ 在/ 那个/ hashtable/ 中/ 出现/ 过/ ,/ 同时/ oid/ =/ 21/ 是/ 旧/ 的/ 版本/ ,/ 因此/ 被/ 排除/ ./ 最后/ R/ ,/ T/ 和/ U/ 的/ hashtable/ 分别/ 包含/ oid/ =/ {/ 1/ ,/ 2/ ,/ 3/ }/ ,/ {/ 10/ ,/ 11/ ,/ 12/ ,/ 20/ }/ 和/ {/ 31/ ,/ 36/ }/ ,/ 然后/ 抽取/ 函数/ 通过/ 查找/ 这些/ hashtable/ ,/ 生成/ 描述/ 文件/ oid/ -/ 元组/ oid/ 的/ 键值/ 对/ ./ 例如/ Δ/ eT/ =/ {/ (/ T1/ ,/ 10/ )/ ,/ (/ T1/ ,/ 11/ )/ ,/ (/ T1/ ,/ 12/ )/ ,/ (/ T2/ ,/ 20/ )/ }/ ./ 基于/ 上述/ 介绍/ 的/ 抽取/ 函数/ 计算方法/ ,/ 下面/ 给出/ 嵌套/ 视图/ 的/ 增量/ 更新/ 算法/ ./ 表/ 2/ 数据服务/ PART/ 〈/ id/ :/ 003/ ,/ Params/ :/ {/ partkey/ }/ ,/ Schema/ :/ {/ partkey/ ,/ name/ ,/ mfgr/ ,/ type/ ,/ brand/ …/ }/ …/ 〉/ 关系/ RegionREGION/ 〈/ id/ :/ 001/ ,/ Params/ :/ {/ regionkey/ }/ ,/ Schema/ :/ {/ regionkey/ ,/ name/ ,/ comment/ }/ …/ 〉/ nationNATION/ 〈/ id/ :/ 002/ ,/ Params/ :/ {/ nationkey/ }/ ,/ Schema/ :/ {/ nationkey/ ,/ name/ ,/ comment/ }/ …/ 〉/ partsupplierSUPPLIER/ 〈/ id/ :/ 004/ ,/ Params/ :/ {/ suppkey/ ,/ nationkey/ }/ ,/ Schema/ :/ {/ regionkey/ ,/ nationkey/ ,/ name/ ,/ address/ …/ }/ …/ 〉/ partsupplierPARTSUPPLIER/ 〈/ id/ :/ 005/ ,/ Params/ :/ {/ partkey/ ,/ suppkey/ }/ ,/ Schema/ :/ {/ partkey/ ,/ suppkey/ ,/ availqty/ ,/ supplycost/ …/ }/ …/ 〉/ customerCUSTOMER/ 〈/ id/ :/ 006/ ,/ Params/ :/ {/ custkey/ ,/ nationkey/ }/ ,/ Schema/ :/ {/ custkey/ ,/ nationkey/ ,/ nameaddress/ ,/ phone/ …/ }/ …/ 〉/ orderORDER/ 〈/ id/ :/ 007/ ,/ Params/ :/ {/ orderkey/ ,/ custkey/ }/ ,/ Schema/ :/ {/ orderkey/ ,/ custkey/ ,/ status/ ,/ price/ ,/ date/ ,/ clerk/ …/ }/ …/ 〉/ lineitemLINEITEMDeltaIncrementalUpdate/ ./ Input/ :/ V/ ,/ DS/ // // V/ 更新/ 前/ 嵌套/ 视图/ ,/ DS/ 数据服务/ 集合/ Output/ :/ V/ // // V/ 更新/ 后/ 嵌套/ 视图/ Beginfor/ (/ i/ =/ 0/ ;/ i/ </ DS/ ./ size/ (/ )/ ;/ i/ ++/ )/ Stringlog/ =/ DS/ ./ get/ (/ i/ )/ ./ getLog/ (/ )/ ;/ update/ +/ =/ getRecentUpdate/ (/ log/ )/ ;/ if/ (/ update/ !/ =/ null/ )/ for/ (/ ;/ j/ </ update/ ./ length/ ;/ j/ ++/ )/ (/ Δ/ Rj/ ,/ hashtable/ )/ =/ getDeltaResult/ (/ update/ (/ j/ )/ )/ ;/ (/ Δ/ e/ ,/ enew/ )/ =/ extract/ (/ hashtable/ )/ ;/ for/ (/ k/ =/ 0/ ;/ k/ </ j/ ;/ k/ ++/ )/ if/ (/ Rk/ =/ Rk/ (/ …/ ,/ X/ ,/ …/ )/ / / X/ (/ …/ )/ )/ Δ/ Rk/ =/ Δ/ Rk/ (/ …/ ,/ X/ ,/ …/ )/ / / enew/ (/ X/ ,/ …/ )/ ∪/ Rnewk/ =/ Δ/ Rk/ ∪/ Rk/ ;/ // // 计算/ 嵌套/ 属性/ 的/ 增量/ 更新/ Δ/ V/ =/ (/ Δ/ R1/ / / R2/ / / …/ / / Rn/ )/ ∪/ V/ =/ V/ ∪/ Δ/ V/ ;/ End6/ 实验/ 与/ 评价/ 本/ 节/ 通过/ 实验/ 验证/ Delta/ 算法/ 能够/ 减少/ 嵌套/ 视图/ 的/ 更新/ 时间/ 和/ 提高/ 嵌套/ 视图/ 的/ 数据/ 新鲜度/ ./ 首先/ ,/ 通过/ 对/ TPC/ -/ H/ 的/ 数据/ 集/ 进行/ 封装/ 得到/ 测试/ 的/ 数据服务/ ,/ 如表/ 2/ 所示/ ./ 数据服务/ 的/ 结构/ 及/ 业务/ 含义/ Page9/ 假定/ 每个/ 数据服务/ 输出/ 关系/ 包含/ 1000/ 条/ 元组/ ,/ 由于/ 数据服务/ 不/ 依赖/ 具体/ 封装/ 的/ 数据源/ 的/ 格式/ ,/ 因此/ 数据/ 集/ 也/ 可以/ 替换成/ 其它/ 格式/ 的/ 数据源/ ,/ 目前/ 支持/ 的/ 数据源/ 格式/ 包括/ 关系/ ,/ CSV/ 文件/ ,/ XML/ 文件/ ,/ Excel/ 文件/ ,/ HTML/ 网页/ ./ 实验/ 配置/ 如下/ :/ Intel3/ ./ 2GHz/ 的/ CPU/ ,/ 4GB/ 内存/ ,/ WindowsXP/ 操作系统/ ,/ ApacheTomcat6/ ./ 0.14/ 应用服务器/ ./ 为了/ 模拟/ 用户/ 主导/ 的/ 可视化/ 数据/ 集成/ ,/ 这里/ 采用/ 类似/ Yahoo/ !/ Pipes/ ①/ 的/ 数据/ 操作/ 构造/ 了/ 20/ 个/ 嵌套/ 视图/ ,/ 并且/ 根据/ 文献/ [/ 22/ ]/ 统计/ 的/ syndic8/ 上/ α/ =/ 0.9/ 的/ Zipfian/ 分布/ ,/ 模拟/ 了/ 100/ 个/ 嵌套/ 视图/ ,/ 并且/ 把/ 它们/ 的/ 结果/ 进行/ 缓存/ ./ 第/ 1/ 个/ 实验/ 比较/ 使用/ 4/ 种/ 不同/ 策略/ 的/ 嵌套/ 视图/ 的/ 更新/ 时间/ ./ 其中/ 第/ 1/ 种/ 是/ 重新/ 计算/ 策略/ ,/ 即/ 每当/ 数据服务/ 输出/ 的/ 关系/ 中/ 的/ 元组/ 发生/ 更新/ 时/ ,/ 嵌套/ 视图/ 都/ 重新/ 计算/ ;/ 第/ 2/ 种/ 是/ 文献/ [/ 13/ ]/ 提出/ 的/ 计数/ 算法/ ,/ 该/ 算法/ 应用/ 到/ 嵌套/ 视图/ 时/ ,/ 必须/ 遍历/ 所有/ 元组/ 来/ 查找/ 被/ 嵌套/ 的/ 关系/ 的/ 元组/ ;/ 第/ 3/ 种/ 是/ AquaLogic/ 提出/ 的/ 数据服务/ 更新/ 策略/ [/ 19/ ]/ ,/ 该/ 策略/ 本来/ 用/ 在/ XML/ 定义/ 的/ 数据服务/ 上/ ,/ 由于/ 嵌套/ 关系/ 模型/ 也/ 可以/ 通过/ XML/ 表示/ ,/ 所以/ 该/ 策略/ 也/ 可以/ 用/ 在/ 本文/ 的/ 数据服务/ 上/ ,/ 但是/ 需要/ 维护/ 相对/ 复杂/ 的/ 更新/ 映射/ 描述/ ,/ 并且/ 更新/ 计算/ 代价/ 根据/ 更新/ 映射/ 描述/ 的/ 不同/ 会/ 产生/ 较大/ 差异/ ;/ 第/ 4/ 种/ 是/ 本文/ 提出/ 的/ 扩展/ 计数/ 算法/ 的/ Delta/ 算法/ ,/ 该/ 算法/ 利用/ 嵌套/ 属性/ 的/ 抽取/ 函数/ 和/ 日志/ 中/ 的/ 索引/ ,/ 理论/ 上/ 可以/ 减少/ 增量/ 更新/ 的/ 计算/ 时间/ ./ 图/ 4/ 显示/ 了/ 50/ 个/ 嵌套/ 视图/ 时/ ,/ 当/ 更新/ 元组/ 从/ 2/ %/ 增长/ 到/ 10/ %/ 后/ ,/ 4/ 种/ 策略/ 的/ 嵌套/ 视图/ 的/ 更新/ 时间/ ./ 这里/ 根据/ 均匀分布/ 随机/ 选择/ 数据服务/ ,/ 并且/ 通过/ 插入/ 和/ 删除/ 其中/ 的/ 元组/ 来/ 模拟/ 更新/ 元组/ ./ 当/ 更新/ 元组/ 是/ 2/ %/ 的/ 时候/ ,/ 由于/ 计数/ 算法/ 和/ Delta/ 算法/ 都/ 需要/ 额外/ 开销/ ,/ 所以/ 其/ 更新/ 时间/ 比/ 重新/ 计算/ 的/ 更新/ 时间/ 多/ ./ 然而/ ,/ 当/ 更新/ 元组/ 增多/ 时/ ,/ 计数/ 算法/ 和/ Delta/ 算法/ 都/ 比/ 重新/ 计算/ 的/ 更新/ 时间/ 少/ ,/ 但是/ 它们/ 的/ 更新/ 时间/ 相差/ 不/ 大/ ,/ 其/ 原因/ 包括/ 两点/ :/ 第/ 1/ 点/ 是/ 相比/ 重新/ 计算/ ,/ 计数/ 算法/ 和/ Delta/ 算法/ 都/ 能/ 减少/ 更新过程/ 中/ 的/ 冗余/ 计算/ ,/ 例如/ 只/ 更新/ 与/ 数据服务/ 关联/ 的/ 嵌套/ 视图/ ;/ 第/ 2/ 点/ 是/ 相比/ 计数/ 算法/ ,/ Delta/ 算法/ 的/ 增量/ 计算/ 过程/ 进行/ 了/ 优化/ ,/ 但是/ 当/ 数据服务/ 和/ 嵌套/ 视图/ 的/ 关联/ 保持/ 不变/ 时/ ,/ 计数/ 算法/ 也/ 无须/ 遍历/ 所有/ 元组/ 来/ 查找/ 被/ 嵌套/ 的/ 关系/ 的/ 元组/ ,/ 因此/ Delta/ 优化/ 效果/ 只/ 在/ 抽取/ 函数/ 中/ 有所/ 体现/ ,/ 然而/ 整体/ 改进/ 并/ 不/ 明显/ ./ 虽然/ AquaLogic/ 表现/ 也/ 不错/ ,/ 但是/ 由于/ 要/ 维护/ 相对/ 复杂/ 的/ 更新/ 映射/ 描述/ ,/ 因此/ 需要/ 更/ 多/ 的/ 时间/ 开销/ ,/ 并且/ XML/ 的/ 增量/ 更新/ 计算/ 相对式/ (/ 1/ )/ 的/ 计算/ 代价/ 较/ 高/ ./ 图/ 5/ 显示/ 了/ 随着/ 嵌套/ 视图/ 不断/ 增多/ ,/ 更新/ 元组/ 为/ 10/ %/ 时/ ,/ 4/ 种/ 策略/ 的/ 嵌套/ 视图/ 的/ 平均/ 更新/ 时间/ ./ 结果显示/ Delta/ 算法/ 更新/ 时间/ 最少/ ,/ 并且/ 其它/ 3/ 种/ 策略/ 的/ 更新/ 时间/ 的/ 增长幅度/ 大于/ Delta/ 算法/ 的/ 更新/ 时间/ 增长幅度/ ./ 其中/ 主要/ 的/ 原因/ 是/ Delta/ 算法/ 通过/ 日志/ 中/ 的/ 索引/ 能够/ 很快/ 查找/ 引用/ 被/ 嵌套/ 的/ 关系/ 的/ 元组/ ,/ 无须/ 遍历/ 所有/ 元组/ ./ 不仅如此/ ,/ 图中/ 显示/ 出/ 随着/ AquaLogic/ 需要/ 维护/ 的/ 更新/ 映射/ 描述/ 的/ 增多/ ,/ AquaLogic/ 的/ 更新/ 计算/ 代价/ 增长/ 不/ 稳定/ ,/ 其中/ 的/ 主要/ 原因/ 是因为/ 有些/ 嵌套/ 视图/ 的/ 更新/ 映射/ 描述/ 复杂/ ,/ 有些/ 嵌套/ 视图/ 的/ 更新/ 映射/ 描述/ 简单/ ,/ 导致/ XML/ 的/ 增量/ 更新/ 计算/ 的/ 时间/ 开销/ 差异/ 较大/ ./ 图/ 6/ 显示/ 了/ 总/ 元组/ 数从/ 50/ %/ 增长/ 到/ 200/ %/ 的/ 时候/ ,/ 更新/ 元组/ 为/ 10/ %/ ,/ 嵌套/ 视图/ 个数/ 为/ 50/ 时/ ,/ 4/ 种/ 不同/ 策略/ 下/ 的/ 嵌套/ 视图/ 的/ 平均/ 更新/ 时间/ ./ 结果表明/ ,/ 相比/ 其它/ 3/ 种/ 策略/ ,/ Delta/ 算法/ 的/ 更新/ 时间/ 最少/ ,/ 不仅如此/ ,/ 上述/ 4/ 种/ 策略/ 的/ 更新/ 时间/ 都/ 随着/ 总/ 元组/ 个数/ 的/ 增量/ 而/ 线性/ 增长/ ./ 其中/ 主要/ 原因/ 是/ 由于/ 均匀/ 选择/ 更新/ 的/ 数据服务/ ,/ 使得/ 更新/ 元组/ 出现/ 在/ 总/ 元组/ 的/ 概率/ 是/ 相同/ 的/ ./ ①/ http/ :/ // // pipes/ ./ yahoo/ ./ com/ // Page10/ 图/ 7/ 显示/ 了/ 更新/ 元组/ 为/ 10/ %/ ,/ 视图/ 个数/ 为/ 50/ 时/ ,/ 不同/ 的/ 网络带宽/ 下/ 的/ 嵌套/ 视图/ 更新/ 时间/ ,/ 这里/ 通过/ 网络/ 路由器/ 来/ 控制/ 网络/ 的/ 带宽/ ./ 从图/ 中/ 可以/ 看出/ ,/ 网络带宽/ 带/ 对/ 重新/ 计算/ 策略/ 影响/ 很大/ ,/ 而/ 对/ 其它/ 3/ 种/ 策略/ 影响/ 不/ 大/ ,/ 主要/ 原因/ 是/ 重新/ 计算/ 策略/ 传输数据/ 量/ 多/ ,/ 网络带宽/ 减少/ 容易/ 引起/ 拥塞/ ./ 第/ 2/ 个/ 实验/ 比较/ 了/ 使用/ 3/ 种/ 不同/ 更新/ 策略/ 的/ 嵌套/ 视图/ 的/ 数据/ 新鲜度/ ./ 这里/ 采用/ 了/ 传统/ 的/ 评价/ Web/ 上/ 更新/ 传播/ 的/ 数据/ 新鲜度/ 的/ 公式/ ,/ 其中/ 通过/ 数据/ 一致/ 的/ 元组/ 占/ 视图/ 总/ 元组/ 的/ 百分比/ 表示/ 视图/ 的/ 数据/ 新鲜度/ ./ 其中/ bfresh/ (/ tuple/ )/ t/ =/ 0/ ,/ tuple/ 在/ t/ 时/ 和/ 数据源/ 不/ 一致/ 图/ 8/ 显示/ 了/ 随着/ 数据服务/ 更新/ 频率/ 增加/ ,/ 在/ 600s/ 的/ 时间段/ 内/ 不同/ 策略/ 更新/ 的/ 嵌套/ 视图/ 的/ 数据/ 新鲜度/ (/ 在/ 60s/ 内/ ,/ 根据/ 均匀分布/ 随机/ 选取/ 数据服务/ ,/ 被/ 选中/ 的/ 数据服务/ 进行/ 更新/ ,/ 并且/ 根据/ 均匀分布/ 随机/ 选取/ 嵌套/ 视图/ ,/ 被/ 选中/ 的/ 嵌套/ 视图/ 作为/ 考察/ 其/ 数据/ 新鲜度/ 的/ 对象/ ,/ 其中/ 数据服务/ 每次/ 更新/ 10/ %/ 的/ 元组/ ,/ 因此/ 嵌套/ 视图/ 的/ 数据/ 新鲜度/ 是/ 10/ 个/ 时间段/ 的/ bfresh/ (/ v/ )/ 的/ 加权/ 平均/ )/ ./ 如图所示/ ,/ 利用/ 重新/ 计算/ 策略/ 更新/ 的/ 嵌套/ 视图/ 的/ 数据/ 新鲜度/ 下降/ 的/ 最快/ ,/ 而/ 利用/ Delta/ 算法/ 进行/ 更新/ 的/ 嵌套/ 视图/ 的/ 数据/ 新鲜度/ 下降/ 最/ 平缓/ ,/ 并且/ 一个/ 重要/ 的/ 观察/ 结果/ 是/ :/ 相比/ 前/ 3/ 种/ 策略/ 分别/ 在/ 42/ 、/ 30/ 和/ 30/ 时/ 趋于/ 相对/ 平稳/ ,/ Delta/ 算法/ 则/ 在/ 22/ 便/ 趋于/ 相对/ 平稳/ ./ 在/ 经过/ 计算/ 得知/ ,/ 利用/ Delta/ 算法/ 进行/ 更新/ 的/ 数据/ 新鲜度/ 比/ 利用/ 重新/ 计算/ 进行/ 更新/ 的/ 数据/ 新鲜度/ 提高/ 了/ 60/ %/ ,/ 比/ 利用/ 计数/ 算法/ 进行/ 更新/ 的/ 数据/ 新鲜度/ 提高/ 了/ 18/ %/ ,/ 比/ AquaLogic/ 进行/ 更新/ 的/ 数据/ 新鲜度/ 提高/ 了/ 20/ %/ ,/ 其/ 原因/ 是/ Delta/ 算法/ 减少/ 了/ 冗余/ 计算/ ,/ 并且/ 它/ 的/ 增量/ 计算/ 时间/ 比/ 计数/ 算法/ 和/ AquaLogic/ 的/ 增量/ 计算/ 时间/ 更少/ ./ 上述/ 一系列/ 的/ 实验/ 还/ 表明/ ,/ 相比/ XML/ ,/ 由于/ 嵌套/ 关系/ 模型/ 结构/ 规范/ ,/ 增量/ 更新/ 公式/ 相对/ 简单/ ,/ 使得/ Delta/ 算法/ 在/ 上述/ 各项/ 指标/ 的/ 比较/ 中好/ 于/ AquaLogic/ 的/ 更新/ 策略/ ,/ 但是/ 一个/ 不可/ 忽略/ 的/ 问题/ 是/ ,/ Delta/ 算法/ 不/ 适合/ XML/ 上/ 的/ 增量/ 更新/ ./ 在/ 上述/ 实验/ 的/ 过程/ 中/ ,/ 日志/ 组件/ 记录/ 的/ 日志/ 大小/ 保持/ 在/ 1KB/ 到/ 25KB/ 之间/ ,/ 没有/ 出现/ 空间/ 开销/ 急剧/ 增长/ 的/ 情况/ ,/ 因此/ 日志/ 组件/ 支持/ 了/ 嵌套/ 视图/ 的/ 可扩展性/ ,/ 并且/ 证明/ 是/ 有效/ 和/ 可行/ 的/ ./ 7/ 结论/ 本文/ 提出/ 了/ 基于/ 数据服务/ 的/ 嵌套/ 视图/ 动态/ 更新/ 方法/ ,/ 包括/ 数据服务/ 更新/ 传播/ 架构/ 和/ 增量/ 更新/ 模型/ ,/ 本文/ 从/ 3/ 个/ 方面/ 考虑/ 并/ 设计/ 了/ 加快/ 增量/ 更新/ 计算/ 的/ 日志/ 组件/ ,/ 并且/ 在/ 该/ 日志/ 组件/ 中/ 实现/ 了/ 增量/ 更新/ 算法/ ./ 本文/ 在/ 原型/ 系统/ 中/ 进行/ 了/ 实验/ 分析/ ,/ 结果表明/ ,/ 该/ 方法/ 不仅/ 带来/ 了/ 明显/ 的/ 性能/ 提高/ 而且/ 支持/ 了/ 嵌套/ Page11/ 视图/ 的/ 可扩展性/ ./ 由于/ 该/ 方法/ 目前/ 只/ 涉及/ 数据源/ 到/ 嵌套/ 视图/ 的/ 正向/ 更新/ 操作/ ,/ 因此/ 下/ 一步/ 工作/ 重点/ 考虑/ 嵌套/ 视图/ 到/ 数据源/ 写/ 操作/ 所/ 涉及/ 的/ 反向/ 更新/ 问题/ ./ 

