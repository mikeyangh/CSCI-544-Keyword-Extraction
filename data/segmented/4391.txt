Page1Walsh/ 函数/ 在/ 组合/ 测试/ 中/ 的/ 应用/ 王/ 蓁蓁/ 1/ )/ 周毓明/ 2/ )/ ,/ 3/ )/ 康达周/ 2/ )/ ,/ 3/ )/ 王子/ 元/ 2/ )/ ,/ 3/ )/ 李言辉/ 2/ )/ ,/ 3/ )/ 徐宝文/ 2/ )/ ,/ 3/ )/ 2/ )/ (/ 南京大学/ 软件/ 新/ 技术/ 国家/ 重点/ 实验室/ 南京/ 210093/ )/ 1/ )/ (/ 金陵/ 科技/ 学院/ 软件工程/ 学院/ 南京/ 211169/ )/ 3/ )/ (/ 南京大学/ 计算机科学/ 与/ 技术/ 系/ 南京/ 210093/ )/ 摘要/ 实际/ 软件系统/ 非常复杂/ ,/ 有/ 很多/ 因素/ 会/ 影响/ 系统/ 的/ 正常/ 运行/ ./ 组合/ 测试/ 可以/ 对/ 这些/ 因素/ 及其/ 相互作用/ 所/ 引发/ 的/ 软件缺陷/ 进行/ 检测/ ./ 该文/ 在/ 组合/ 测试/ 基本/ 模型/ 的/ 基础/ 上/ ,/ 引入/ Walsh/ 函数/ ,/ 建立/ 了/ 组合/ 测试/ Walsh/ 函数/ 模型/ ./ 模型/ 给出/ 基于/ Walsh/ 的/ 测试用例/ 模式/ 的/ 定义/ 以及/ 理论/ 缺陷/ 函数/ 和/ 实际/ 缺陷/ 函数/ 的/ 定义/ ;/ 引入/ Walsh/ 模式/ 变换/ 概念/ ,/ 并/ 利用/ Walsh/ 函数/ 的/ 离散/ 形式/ 有效/ 地/ 计算/ 测试用例/ 模式/ 的/ 平均/ 缺陷率/ ./ 最后/ 基于/ 模式/ 平均/ 缺陷率/ 的/ 大小/ ,/ 补充/ 附加/ 测试用例/ 进行/ 重新/ 测试/ ,/ 从而/ 迅速/ 将/ 故障/ 原因/ 锁定/ 在/ 很小/ 的/ 范围/ 内/ ,/ 为/ 软件/ 的/ 调试/ 和/ 测试/ 工作/ 提供/ 更/ 方便/ 、/ 更/ 有/ 价值/ 的/ 线索/ 和/ 参考/ ./ 关键词/ 软件测试/ ;/ 组合/ 测试/ ;/ 软件/ 调试/ ;/ Walsh/ 函数/ ;/ 测试用例/ 模式/ 1/ 引言/ 大多数/ 软件系统/ 都/ 很/ 复杂/ ,/ 有/ 很多/ 因素/ 都/ 可能/ 会/ 影响/ 软件系统/ 的/ 正常/ 运行/ ,/ 这些/ 因素/ 可能/ 是/ 待/ 测系统/ 的/ 配置/ 参数/ 、/ 内部/ 事件/ 、/ 用户/ 输入/ 参数/ 以及/ 外部/ 事件/ 参数/ 等/ ./ 除了/ 单个/ 因素/ 之外/ ,/ 这些/ 因素/ 之间/ 的/ 相互作用/ 也/ 可能/ 会/ 对系统/ 的/ 运行/ 造成/ 影响/ ./ 组合/ 测试/ 作为/ 一种/ 科学/ 有效/ 的/ 软件测试/ 方法/ ,/ 可以/ 使用/ 较少/ 的/ 测试用例/ 有效/ 地/ 检测/ 软件系统/ 中/ 各个/ 因素/ 以及/ 它们/ 之间/ 的/ 相互作用/ 对系统/ 产生/ 的/ 影响/ ./ 一直/ 以来/ 人们/ 关于/ 组合/ 测试/ 的/ 研究/ 主要/ 集中/ 在/ 测试用例/ 的/ 设计/ 方法/ [/ 1/ -/ 18/ ]/ ,/ 这些/ 方法/ 致力于/ 生成/ 规模/ 更/ 小/ 的/ 测试用例/ 集/ ./ 例如/ Kobayashi/ 和/ Tsuchiya/ 等/ 人/ [/ 3/ ]/ 提出/ 了/ 一种/ 生成/ 两/ 两/ 组合/ 测试数据/ 的/ 代数/ 方法/ ./ Cohen/ 等/ 人/ [/ 4/ -/ 6/ ]/ 将/ 模拟退火/ 算法/ 应用/ 于/ 多重/ 维数/ 组合/ 测试用例/ 的/ 生成/ ,/ 该/ 方法/ 综合/ 考虑/ 了/ 运算/ 效率/ 和/ 运算/ 结果/ 之间/ 的/ 关系/ ,/ 根据/ 时间/ 和/ 效率/ 上/ 不同/ 的/ 要求/ 来/ 生成/ 尽可能/ 优的/ 结果/ ./ Shiba/ 和/ Tsuchiya/ 等/ 人/ [/ 7/ ]/ 研究/ 了/ 遗传算法/ 和/ 蚁/ 群/ 算法/ 在/ 组合/ 测试数据/ 自动/ 生成/ 中/ 的/ 应用/ ./ Colbourn/ 和/ Cohen/ 等/ 人/ [/ 8/ ]/ 提出/ 了/ 一种/ 两/ 两/ 组合/ 测试数据/ 生成/ 的/ 确定性/ 密度/ 算法/ ./ Colbourn/ 和/ Sherwood/ 等/ 人/ [/ 9/ -/ 10/ ]/ 研究/ 了/ 两种/ 组合/ 覆盖/ 表/ 的/ 生成/ 方法/ ,/ 分别/ 应用/ 于/ 具有/ 不同/ 参数/ 取值/ 的/ 两/ 两/ 组合/ 覆盖/ 表/ 和/ 高维/ 组合/ 覆盖/ 表/ 的/ 生成/ ./ 但是/ 当/ 应用/ 组合/ 测试方法/ 对待/ 测系统/ 进行/ 测试/ ,/ 并/ 发现/ 故障/ 时/ ,/ 如何/ 根据/ 测试/ 结果/ 来/ 确定/ 导致/ 故障/ 发生/ 的/ 原因/ 呢/ ?/ 实际上/ ,/ 组合/ 测试/ 中/ 的/ 测试用例/ 是/ 待/ 测系统/ 的/ 因素/ (/ 或/ 配置/ )/ 组合/ ,/ 而/ 测试/ 集中/ 的/ 测试用例/ 相似/ 样板/ 可以/ 抽象/ 为/ “/ 模式/ ”/ ./ 利用/ 测试用例/ 模式/ 本身/ 的/ 特点/ ,/ 选择/ 相应/ 的/ 附加/ 测试用例/ 进行/ 软件/ 故障/ 定位/ ,/ 可以/ 提高/ 软件测试/ 的/ 效率/ 并/ 降低成本/ ./ Walsh/ 函数/ 是/ 美国/ 数学家/ Walsh/ 引入/ 的/ 一个/ 函数/ 系/ ./ 在/ 数字/ 信号处理/ 中/ ,/ 它/ 可/ 提供/ 类似/ Fourier/ 变换/ 的/ 表示/ 方法/ ,/ 许多/ 结果/ 便于/ 计算机/ 上/ 实现/ ,/ 在/ 某些/ 方面/ ,/ 优越/ 于/ Fourier/ 分析/ ./ 现在/ Walsh/ 函数/ 已经/ 广泛应用/ 在/ 信号处理/ ,/ 模式识别/ 以及/ 遗传算法/ 等/ 领域/ ./ 受到/ 这些/ 应用/ 的/ 启发/ ,/ 我们/ 考虑/ 将/ Walsh/ 函数/ 引入/ 组合/ 测试/ 领域/ ./ 由于/ 组合/ 测试/ 中/ 的/ 测试用例/ 是/ 待/ 测系统/ 的/ 因素/ (/ 或/ 配置/ )/ 组合/ ,/ 那么/ 测试用例/ 的/ 模式/ 则/ 是/ 一些/ 测试用例/ 的/ 相似/ 样板/ ,/ 一个/ 模式/ 能/ 说明/ 系统/ 的/ 缺陷/ 主要/ 受到/ 该/ 模式/ 上/ 哪些/ 配置/ 的/ 影响/ ./ 而/ Walsh/ 函数/ 在/ 处理/ 模式/ 特性/ 上/ 有/ 独特/ 的/ 长处/ ,/ 如/ 通过/ Walsh/ 变换/ 可/ 得出/ 模式/ 的/ 某些/ 特性/ 值/ ,/ 这/ 在/ 遗传算法/ 中/ 表现/ 为/ 模式/ 的/ 平均/ 适应度/ 值/ ./ 同样/ ,/ 设想/ 在/ 组合/ 测试/ 领域/ 里/ ,/ 也/ 应该/ 可以/ 通过/ Walsh/ 函数/ 变换/ 表现/ 出/ 模式/ 发现/ 软件/ 故障/ 的/ 平均/ 缺陷率/ ./ 因此/ 本文/ 将/ Walsh/ 函数/ 工具/ 引入/ 组合/ 测试/ ,/ 建立/ Walsh/ 模式/ 分析模型/ ./ 该/ 模型/ 给出/ 测试用例/ 模式/ 以及/ 缺陷/ 函数/ 等/ 概念/ ,/ 将/ 模式/ 和/ 测试用例/ 集/ 紧密/ 地/ 联系/ 在/ 一起/ ./ 利用/ 该/ 模型/ ,/ 可/ 通过/ Walsh/ 函数/ 演化/ 逼近/ 模式/ 的/ 缺陷/ 函数/ ,/ 并且/ 利用/ Walsh/ 函数/ 的/ 离散/ 形式/ 能/ 有效/ 地/ 计算/ 出/ 发现/ 系统/ 的/ 所有/ 模式/ 引起/ 软件/ 故障/ 的/ 概率/ ./ 实际/ 应用/ 中/ 可/ 根据/ 测试用例/ 集/ 测试/ 的/ 结果/ ,/ 只/ 计算/ 发现/ 故障/ 的/ 测试用例/ 的/ 所有/ 父/ 模式/ 的/ 缺陷/ 概率/ ,/ 再/ 根据/ 概率/ 的/ 大小/ ,/ 选择/ 附加/ 测试用例/ ,/ 从而/ 将/ 故障/ 原因/ 锁定/ 在/ 很小/ 的/ 范围/ 内/ ./ 该/ 模型/ 可以/ 为/ 软件/ 的/ 调试/ 工作/ 以及/ 理论/ 分析/ 提供/ 非常/ 方便/ 有效/ 的/ 参考/ ./ 2/ 基本/ 方法/ 对/ 一个/ 待/ 测系统/ SUT/ (/ SoftwareUnderTest/ )/ 进行/ 组合/ 测试/ ./ 假设/ 待/ 测系统/ SUT/ 包含/ n/ 个/ 参数/ c1/ ,/ c2/ ,/ …/ ,/ cn/ ,/ 分别/ 从/ T1/ ,/ T2/ ,/ …/ ,/ Tn/ 中/ 取值/ ,/ 其中/ Ti/ 表示/ 参数/ ci/ 可取/ 的/ 有限/ 离散/ 点集/ ./ 令/ 符号/ ai/ 表示/ 第/ i/ 个/ 参数/ ci/ 可/ 取值/ 的/ 个数/ ,/ 即/ Ti/ 中/ 元素/ 的/ 个数/ :/ ai/ =/ |/ Ti/ |/ ./ 称/ n/ 元组/ (/ v1/ ,/ v2/ ,/ …/ ,/ vn/ )/ (/ v1/ ∈/ T1/ ,/ v2/ ∈/ T2/ ,/ …/ ,/ vn/ ∈/ Tn/ )/ 为/ SUT/ 的/ 一个/ 测试用例/ ,/ 并称/ 一个/ 由/ 多个/ 这样/ 的/ n/ 元组/ 所/ 构成/ 的/ 集合/ 为/ SUT/ 的/ 一个/ 测试用例/ 集/ ,/ 令/ Ts/ 为/ 根据/ 实际/ 要求/ 设计/ 的/ 一组/ 测试用例/ 集/ ./ 在/ 实际/ 中/ 导致系统/ 发生/ 故障/ 的/ 原因/ 有/ 很多/ ,/ 其中/ 部分/ 是/ 由于/ 某些/ 参数/ 的/ 相互作用/ 而/ 导致/ 的/ ,/ 在/ 测试/ 时则/ 表现/ 在/ 测试用例/ 中/ 的/ 某些/ 特定/ 取值/ 模式/ 会/ 产生/ 故障/ ./ 因而/ 可以/ 假设/ 系统/ SUT/ 的/ 故障/ 只/ 由/ 某些/ 取值/ 模式/ 引起/ ./ 对于/ 上述/ 待/ 测系统/ SUT/ ,/ 将/ 其中/ k/ (/ 1/ / k/ / n/ )/ 个/ 因素/ 的/ 取值/ 确定/ 后/ ,/ 可/ 得到/ 一个/ n/ 元组/ schema/ =/ (/ -/ ,/ …/ ,/ -/ ,/ vi/ ,/ 1/ ,/ -/ ,/ …/ ,/ -/ ,/ vi/ ,/ 2/ ,/ -/ ,/ …/ ,/ -/ ,/ vi/ ,/ k/ ,/ -/ ,/ …/ ,/ -/ )/ (/ vi/ ,/ 1/ ∈/ Ti/ ,/ 1/ ,/ vi/ ,/ 2/ ∈/ Ti/ ,/ 2/ ,/ …/ ,/ vi/ ,/ k/ ∈/ Ti/ ,/ k/ )/ ,/ 其中/ 符号/ “/ -/ ”/ 表示/ 相应/ 位置/ 上/ 因素/ 的/ 取值/ 待定/ ./ 称/ schema/ 为/ SUT/ 的/ 一个/ k/ -/ 模式/ ,/ 简称/ 为/ 模式/ ./ 显然/ ,/ 当/ k/ =/ n/ 时/ ,/ k/ -/ 模式/ schema/ 恰好/ 成为/ SUT/ 的/ 一条/ 测试用例/ ./ 假设/ schema1/ =/ (/ v1/ ,/ v2/ ,/ …/ ,/ vn/ )/ 和/ schema2/ =/ (/ v1/ ,/ v2/ ,/ …/ ,/ vn/ )/ 分别/ 为/ SUT/ 的/ k1/ -/ 模式/ 和/ k2/ -/ 模式/ ,/ 如果/ 有/ k1/ / k2/ ,/ 且/ 对于/ / 1/ / i/ / n/ ,/ (/ vi/ =/ “/ -/ ”/ )/ ∨/ (/ vi/ =/ vi/ )/ 均/ 为/ 真/ ,/ 则/ 称/ schema1/ 是/ schema2/ 的/ 父/ 模式/ ,/ 而/ schema2/ 是/ schema1/ 的/ 子模式/ ,/ 并/ 记作/ schema2/ / Page3schema1/ ./ 假设/ 应用/ 测试用例/ 集/ Ts/ (/ 其/ 个数/ 为/ m/ )/ 对/ SUT/ 进行/ 测试/ ,/ 发现/ 有/ l/ 个/ 测试用例/ (/ 记/ 为/ 集合/ Ts1/ )/ 在/ 执行/ 中/ 发现/ 某个/ 故障/ ,/ 而/ 其他/ m/ -/ l/ 个/ 测试用例/ (/ 记/ 为/ 集合/ Ts2/ )/ 不/ 发生/ 该/ 故障/ ./ 接下来/ 的/ 工作/ 就是/ 分析/ 故障/ 的/ 原因/ ,/ 对/ 它/ 进行/ 定位/ ./ 主要/ 方法/ 基于/ 以下/ 思想/ :/ 首先/ 找出/ l/ 个/ 测试用例/ 引发/ 某/ 故障/ 的/ 所有/ 可能/ 的/ 模式/ 集合/ ,/ 即/ ∪/ t/ ∈/ Ts1Mt/ ,/ 这里/ Mt/ 表示/ 用例/ t/ 的/ 父/ 模式/ 集合/ ./ 并/ 要求/ 这些/ 模式/ 不/ 出现/ 在/ 另外/ m/ -/ l/ 个/ 没有/ 该/ 故障/ 的/ 测试用例/ 的/ 模式/ 中/ ,/ 用/ 式子/ 表示/ 为/ ∪/ t/ ∈/ Ts1Mt/ -/ ∪/ t/ ∈/ Ts2Mt/ ,/ 则/ 这些/ 模式/ 可能/ 是/ 引起/ 故障/ 的/ 因素/ [/ 13/ ]/ ./ 其次/ ,/ 再/ 从/ 发生/ 某个/ 故障/ 的/ l/ 个/ 测试用例/ 中/ 找到/ 某些/ 共同/ 的/ 取值/ 模式/ 组成/ 的/ 集合/ ,/ 用/ 式子/ 表示/ 为/ ∩/ t/ ∈/ Ts1Mt/ ,/ 并且/ 这些/ 共同/ 的/ 取值/ 模式/ 只/ 在/ 这/ l/ 个/ 测试用例/ 中/ 出现/ ,/ 而/ 在/ 另外/ m/ -/ l/ 个/ 没有/ 该/ 故障/ 的/ 测试用例/ 中/ 不/ 出现/ ,/ 即/ 为/ ∩/ t/ ∈/ Ts1Mt/ -/ ∪/ t/ ∈/ Ts2Mt/ ,/ 则/ 这些/ 共同/ 的/ 取值/ 模式/ 都/ 是/ 有/ 可能/ 引起/ 系统/ SUT/ 出现/ 故障/ 的/ 原因/ [/ 13/ ]/ ./ 通常/ 这/ 两个/ 集合/ 元素/ 还是/ 比较/ 多/ ,/ 要/ 进一步/ 约简/ ./ 为/ 发生/ 某/ 故障/ 的/ 每个/ 测试用例/ 设计/ 附加/ 用例/ ,/ 附加/ 用例/ 的/ 设计/ 方法/ 是/ 取/ 原来/ 测试用例/ 的/ 父/ 模式/ ,/ 再/ 将/ 其父/ 模式/ 上/ 不/ 确定/ 位取/ 任意/ 不同于/ 原/ 测试用例/ 相应/ 位置/ 上/ 的/ 参数值/ 来/ 代替/ ./ 比如说/ 某/ 测试用例/ 为/ (/ ν/ 1/ ,/ ν/ 2/ ,/ …/ ,/ ν/ n/ )/ ,/ 附加/ n/ 个/ 测试用例/ 为/ (/ / ,/ ν/ 2/ ,/ …/ ,/ ν/ n/ )/ ,/ (/ ν/ 1/ ,/ / ,/ …/ ,/ ν/ n/ )/ ,/ …/ ,/ (/ ν/ 1/ ,/ ν/ 2/ ,/ …/ ,/ / )/ ,/ 其中/ “/ / ”/ 号/ 代表/ 相应/ 于原/ 测试用例/ 对应/ 位置/ 的/ 不同/ 取值/ ./ 这样/ 就/ 得到/ 一组/ 新/ 的/ 测试用例/ 集/ ,/ 可记/ 为/ CTs/ ,/ 用/ 这/ 组新/ 的/ 测试用例/ 集/ 对待/ 测系统/ 进行/ 测试/ ,/ 测试/ 结果/ 同原/ 测试/ 集/ 一样/ 分为/ 发生/ 某/ 故障/ 的/ 测试用例/ 集合/ (/ 不妨/ 记为/ CTs1/ )/ 和/ 不/ 发生/ 该/ 故障/ 的/ 测试用例/ 集合/ (/ 记为/ CTs2/ )/ ./ 同/ 前面/ 所叙/ 方法/ 一样/ ,/ 找出/ l/ 个/ 测试用例/ 出现/ 该/ 故障/ 的/ 所有/ 可能/ 取值/ 模式/ ,/ 并/ 保证/ 这些/ 模式/ 不/ 出现/ 在/ m/ -/ l/ 个/ 测试用例/ 中/ ,/ 也/ 不/ 出现/ 在/ CTs2/ 里/ 的/ 测试用例/ 中/ ,/ 即/ 得到/ 模式/ 集合/ ∪/ t/ ∈/ Ts1Mt/ -/ ∪/ t/ ∈/ Ts2Mt/ -/ ∪/ t/ ∈/ CTs2Mt/ ./ 同样/ 再/ 从/ l/ 个/ 测试用例/ 中/ 找到/ 某些/ 共同/ 的/ 取值/ 模式/ 组成/ 的/ 集合/ ,/ 且/ 这些/ 取值/ 模式/ 只/ 出现/ 在/ 这/ l/ 个/ 测试用例/ 中/ ,/ 不/ 出现/ 在/ m/ -/ l/ 个/ 测试用例/ 中/ ,/ 并且/ 也/ 不/ 出现/ 在/ CTs2/ 集合/ 所/ 包含/ 的/ 测试用例/ 中/ ,/ 用/ 式子/ 表示/ 为/ ∩/ t/ ∈/ Ts1Mt/ -/ ∪/ t/ ∈/ Ts2Mt/ -/ ∪/ t/ ∈/ CTs2Mt/ ./ 这样/ 两个/ 集合/ 里/ 的/ 元素/ 已经/ 大大减少/ ,/ 通过/ 分析/ 可以/ 准确/ 地/ 将/ 引发/ 软件/ 故障/ 的/ 原因/ 诊断/ 出来/ ./ 由于/ 实际/ 情况/ 中/ ,/ 待/ 测系统/ 的/ 参数/ 因素/ 多/ ,/ 虽然/ 导致系统/ 出错/ 的/ 测试用例/ 的/ 数量/ 可能/ 比较/ 少/ (/ 这种/ 测试用例/ 对/ 软件测试/ 来说/ 是/ 高质量/ 的/ 测试用例/ )/ ,/ 但是/ 其父/ 模式/ 的/ 数量/ 比较/ 多/ ./ 如果/ 要/ 考虑/ 系统故障/ 可能/ 是/ 测试用例/ 中/ 所有/ 参数/ 的/ 取值/ 组合/ ,/ 其父/ 模式/ 的/ 数量/ 则/ 成/ 指数/ 增加/ ./ 因此/ 要/ 建立/ 一个/ 模型/ 能够/ 有效/ 地/ 计算/ 模式/ 导致/ 系统故障/ 的/ 概率/ (/ 可以/ 称之为/ 模式/ 缺陷率/ )/ ,/ 再/ 根据/ 概率/ 的/ 大小/ 选择/ 相应/ 地/ 附加/ 测试用例/ ,/ 则/ 可以/ 有效/ 地/ 帮助/ 我们/ 迅速/ 定位系统/ 的/ 故障/ 所在/ ./ 因为/ 测试用例/ 模式/ 的/ 概念/ 非常/ 类似/ 于/ 遗传算法/ 中/ 的/ “/ 模式/ ”/ 分析/ (/ 其/ 采用/ Walsh/ 函数/ 离散/ 形式/ 有效/ 地/ 计算/ 平均/ 适应度/ )/ ,/ 因此/ 本文/ 将/ Walsh/ 函数/ 引入/ 组合/ 测试/ ,/ 有效/ 地/ 计算/ 测试用例/ 的/ 模式/ 平均/ 缺陷率/ ./ 3Walsh/ 函数/ 模型/ 构建/ 及/ 方法/ 不失/ 一般性/ ,/ 本文/ 只/ 考虑/ 二/ 水平/ 多/ 因素/ 系统/ ,/ 即该/ 系统/ 每个/ 参数/ 有/ 两个/ 取值/ ,/ 则/ 这样/ 的/ 系统/ 称为/ 二/ 水平/ 多/ 因素/ 系统/ ./ 如果/ 在/ 组合/ 测试/ 中/ 发现/ 多/ 水平/ 因素/ ,/ 可以/ 将/ 模型/ 进行/ 推广/ ,/ 所提/ 方法/ 和/ 原理/ 同样/ 适用/ ./ 由于/ 待/ 测系统/ 中/ 每/ 一个/ Ti/ 中/ 元素/ 个数/ ai/ 为/ 2/ (/ 二/ 水平/ )/ ,/ 不妨/ 认为/ 这/ 两个/ 元素/ 为/ 0/ 或/ 1/ ./ 可用/ 二进制/ 数/ m/ =/ (/ bn/ -/ 1bn/ -/ 2/ …/ b0/ )/ 表示/ 待/ 测系统/ SUT/ 的/ 一个/ 测试用例/ (/ ν/ 1/ ,/ ν/ 2/ ,/ …/ ,/ ν/ n/ )/ ,/ 即/ (/ bn/ -/ 1bn/ -/ 2/ …/ b0/ )/ =/ (/ ν/ 1/ ,/ ν/ 2/ ,/ …/ ,/ ν/ n/ )/ ,/ 则/ 二进制/ 组/ (/ bn/ -/ 1bn/ -/ 2/ …/ b0/ )/ 为/ 待/ 测系统/ SUT/ 的/ 一个/ 测试用例/ ./ 这样/ 一个/ 可能/ 包含/ 未确定/ 位/ 的/ 二进制/ 数即/ 为/ 模式/ ./ 若/ 一个/ 测试用例/ m/ ,/ 与/ 模式/ H/ 的确/ 定位/ 相对/ 应/ 的/ 位/ 上/ 的/ 值/ 与/ 该/ 模式/ H/ 的确/ 定位/ 值/ 相同/ ,/ 则/ 称此/ 用例/ m/ 属于/ H/ ,/ 或者/ 称/ H/ 包含/ 用例/ m/ ,/ 记为/ m/ ∈/ H/ ./ 模式/ H/ 是/ 一些/ 测试用例/ 的/ 相似/ 样板/ ,/ 它/ 说明/ 系统/ 的/ 缺陷/ 主要/ 受到/ H/ 的确/ 定位/ 上/ 的/ 配置/ 的/ 影响/ ,/ 而/ 未确定/ 位/ 的/ 任意/ 配置/ 并/ 不是/ 系统/ 缺陷/ 的/ 原因/ ./ 由于/ 待/ 测系统/ 有/ n/ 个/ 参数/ ,/ 则/ 共有/ 2n/ 个/ 测试用例/ ./ 设/ N/ =/ 2n/ ,/ 把/ [/ 0/ ,/ 1/ )/ 区间/ 分成/ N/ 个子/ 区间/ ,/ 每个/ 子/ 区间/ 形式/ 如/ k/ 二进制/ 数/ m/ =/ (/ bn/ -/ 1bn/ -/ 2/ …/ b0/ )/ 记为/ 某子/ 区间/ 号/ ,/ 或者说/ 它/ 是/ 相应/ 的/ 测试用例/ (/ ν/ 1/ ,/ ν/ 2/ ,/ …/ ,/ ν/ n/ )/ 的/ 子/ 区间/ 号/ ,/ 有时/ 也/ 把/ 它/ 对应/ 于/ 某子/ 区间/ 的/ 左/ 端点/ (/ 约定/ 右/ 连续/ )/ ./ 用子/ 区间/ 号/ 表示/ 测试用例/ 好处/ 在于/ 它/ 可以/ 和/ 某/ 一个/ Walsh/ 函数/ 上/ [/ 0/ ,/ 1/ )/ 区间/ 号/ 进行/ 一一对应/ ,/ 从而/ 可以/ 进行/ 离散/ W/ 变换/ 及其/ 逆变换/ ./ Walsh/ 函数/ 的/ 数学/ 形式/ 为/ Page4/ 其中/ m/ =/ (/ bn/ -/ 1bn/ -/ 2/ …/ b0/ )/ 为/ 一个/ 二进制/ 数/ ,/ / (/ j/ ,/ t/ )/ 是/ [/ 0/ ,/ 1/ ]/ 区间/ 上/ 的/ R/ 函数/ (/ 参看/ 文献/ [/ 19/ ]/ 第/ 5/ ~/ 8/ 页/ )/ ,/ 并且/ wal/ (/ m/ ,/ t/ +/ 1/ )/ =/ wal/ (/ m/ ,/ t/ )/ ./ R/ 函数/ 形/ 如/ 一个/ 正弦波/ ,/ 其/ 最/ 简单/ 的/ R/ 函数/ 是/ / (/ 0/ ,/ t/ )/ ,/ 它/ 在/ [/ 0/ ,/ 1/ // 2/ )/ 区间/ 上/ 取值/ 为/ 1/ ,/ 在/ 区间/ [/ 1/ // 2/ ,/ 1/ )/ 上/ 取值/ 为/ -/ 1/ ./ 任意/ 的/ R/ 函数/ / (/ j/ ,/ t/ )/ 可/ 由/ / (/ n/ ,/ t/ )/ =/ / (/ 0/ ,/ 2nt/ )/ 推广/ 得知/ ,/ 例如/ / (/ 1/ ,/ t/ )/ =/ / (/ 0/ ,/ 2t/ )/ ,/ 它/ 是/ 这样/ 的/ 波形/ 函数/ :/ 在/ 区间/ [/ 0/ ,/ 1/ // 4/ )/ 上/ 取值/ 为/ 1/ ,/ [/ 1/ // 4/ ,/ 1/ // 2/ )/ 上/ 为/ -/ 1/ ,/ [/ 1/ // 2/ ,/ 3/ // 4/ )/ 为/ 1/ ,/ [/ 3/ // 4/ ,/ 1/ )/ 为/ -/ 1/ ./ 理论/ 上/ ,/ 每/ 一个/ 测试用例/ 都/ 要/ 对/ 软件/ 进行/ 测试/ ./ 为了/ 进行/ Walsh/ 离散/ W/ 变换/ ,/ 可以/ 定义/ 测试用例/ 发现/ 软件缺陷/ 的/ 函数/ ,/ 这个/ 函数/ 的/ 定义域/ 为/ 测试用例/ 集/ ,/ 值域/ 为/ 0/ 或/ 1/ ,/ 称之为/ 缺陷/ 函数/ f/ (/ test/ )/ :/ f/ (/ testi/ )/ =/ 1/ ,/ 实施/ testi/ 进行/ 测试/ ,/ 发现/ 缺陷/ 其中/ testi/ 表示/ 测试用例/ 集中/ 某/ 一个/ 测试用例/ ./ 由于/ 测试用例/ 的/ 个数/ 为/ N/ =/ 2n/ ,/ 当/ 因数/ 个数/ n/ 增加/ 时/ ,/ N/ 呈/ 指数/ 增长/ ./ 因此/ 实施/ 完整/ N/ 个/ 测试/ 是/ 不/ 可能/ 的/ ,/ 而且/ 也/ 没有/ 必要/ ./ 沿用/ 第/ 2/ 节/ 记号/ ,/ 设/ 一个/ 待/ 测系统/ SUT/ 在/ 应用/ 测试用例/ 集/ TS/ (/ |/ TS/ |/ =/ m/ ,/ m/ / N/ )/ 进行/ 测试/ 时/ ,/ 有/ l/ 个/ 测试用例/ (/ 组成/ 子集合/ TS1/ )/ 在/ 测试/ 中/ 发现/ 某个/ 故障/ ,/ 而/ 其他/ m/ -/ l/ 个/ 测试用例/ (/ 组成/ 子集合/ TS2/ )/ 未/ 发现/ 故障/ ./ 经验/ 上/ 可以/ 认为/ 平均/ 每个/ 测试用例/ 发现/ l/ // m/ (/ 个/ )/ 缺陷/ ./ 未/ 测试用例/ 组成/ 的/ 集合/ (/ 该/ 集合/ 共有/ N/ -/ m/ 个/ 用例/ )/ ,/ 用/ TS3/ 表示/ ,/ 并/ 规定/ 每个/ 测试用例/ 的/ 缺陷/ 值为/ l/ // m/ ./ 现在/ ,/ 可以/ 用/ 下述/ 经验/ 缺陷/ 函数/ f/ (/ test/ )/ 代替/ 理论/ 缺陷/ 函数/ f/ (/ test/ )/ ,/ 经验/ 缺陷/ 函数/ 简写/ 为/ f/ (/ t/ )/ ./ 现在/ 定义/ 了/ T/ 上/ 的/ 缺陷/ 函数/ f/ (/ t/ )/ ,/ 又/ 由于/ 测试用例/ 已经/ 和/ [/ 0/ ,/ 1/ )/ 区间/ 上/ N/ 个子/ 区间/ 一一对应/ ,/ 这样/ {/ f/ (/ i/ )/ }/ ,/ i/ =/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ N/ -/ 1/ 即为/ 一个/ 序列/ ,/ 它/ 可以/ 看成/ 是/ [/ 0/ ,/ 1/ )/ 区间/ 上/ 离散/ 点上/ 的/ 函数/ ./ 根据/ Walsh/ 函数/ 上/ 的/ 离散/ 变换/ 定义/ ,/ 它/ 的/ 离散/ W/ 变换/ 为/ F/ (/ j/ )/ =/ wj/ ,/ j/ =/ 0/ ,/ 1/ ,/ …/ ,/ N/ -/ 1/ ,/ 即/ 其/ 逆变换/ 为/ f/ (/ t/ )/ =/ 1/ 这样/ 便/ 构建/ 了/ Walsh/ 函数/ 模型/ ,/ 它/ 实质/ 上/ 是/ 一个/ 四元组/ (/ T/ ,/ W/ ,/ f/ ,/ F/ )/ ,/ 其中/ T/ 是/ n/ 个/ 二/ 水平/ 因素/ 的/ 系统/ 里/ 所有/ 测试用例/ 的/ 集合/ ./ 测试用例/ 是/ 一个/ n/ 位/ 二进制/ 数/ ,/ 记/ 作/ (/ bn/ -/ 1bn/ -/ 2/ …/ b1b0/ )/ ,/ 抽象/ 为/ [/ 0/ ,/ 1/ )/ 区间/ 等/ 分/ N/ =/ 2n/ 个子/ 区间/ 的/ 区/ 号/ 或者/ 是子/ 区间/ 左/ 端点/ 的/ 集合/ ./ W/ 是/ T/ 上/ 的/ Walsh/ 函数/ 系/ ./ f/ 是/ 定义/ 在/ T/ 上/ 的/ 函数/ ,/ 它/ 可以/ 是/ 视/ 问题/ 需要/ 选择/ 的/ 任意/ 一般/ 函数/ ,/ 这里/ 规定/ f/ 是/ 测试用例/ 集/ T/ 上/ 的/ 缺陷/ 函数/ ./ F/ 是/ f/ 的/ W/ 变换/ ./ 下面/ 的/ 讨论/ 都/ 在/ 此/ 模型/ WMOD/ =/ (/ T/ ,/ W/ ,/ f/ ,/ F/ )/ 上/ 进行/ ./ 对于/ Walsh/ 函数/ 模型/ WMOD/ =/ (/ T/ ,/ W/ ,/ f/ ,/ F/ )/ ,/ 可以/ 计算/ 任意/ 模式/ 中/ 测试用例/ 发现/ 软件/ 故障/ 的/ 概率/ ,/ 称之为/ 模式/ 平均/ 缺陷率/ ./ 模式/ ,/ 称/ f/ (/ H/ )/ =/ 1/ 称/ H/ 的/ 缺陷率/ ./ 定义/ 1/ ./ 模式/ 平均/ 缺陷率/ ./ 设/ H/ 为/ 任意/ 一个/ 由/ 定义/ 可知/ ,/ 0/ / f/ (/ H/ )/ / 1/ ./ 进而/ 定义/ 2/ ./ 模式/ Walsh/ 变换/ ./ 设/ H/ 是/ 任一/ 模式/ ,/ 注意/ 到/ 1/ 式/ 无关/ ./ 称/ S/ (/ H/ ,/ j/ )/ =/ 1Walsh/ 函数/ 的/ 变换/ 值/ ,/ 简称/ 为/ H/ 的/ Walsh/ 变换/ 或/ H/ 的/ W/ 变换/ ./ 从/ 定义/ 可以/ 看出/ ,/ S/ (/ H/ ,/ j/ )/ 只/ 和/ 模式/ 以及/ wal/ (/ j/ ,/ ·/ )/ (/ 即/ 第/ j/ 个/ Walsh/ 函数/ )/ 有关/ ./ 它/ 是/ WMOD/ =/ (/ T/ ,/ W/ ,/ f/ ,/ F/ )/ 中/ 关于/ (/ T/ ,/ W/ )/ 上/ 的/ 固定/ 结构/ ./ 对于/ 不同/ 的/ f/ 及其/ W/ 变换/ F/ ,/ 都/ 可以/ 应用/ 同一个/ S/ (/ H/ ,/ j/ )/ (/ H/ 为/ T/ 上/ 模式/ ,/ j/ 为/ Walsh/ 函数/ 编号/ )/ 结构/ 进行/ 分析/ ./ 本文/ 是/ 讨论/ 缺陷/ 函数/ ,/ 于是/ 根据/ 定义/ 1/ 和/ 定义/ 2/ ,/ 模式/ 平均/ 缺陷率/ 可以/ 表示/ 为/ 任意/ 模式/ 的/ 平均/ 缺陷率/ ./ 由此可见/ ,/ 只要/ 有/ S/ (/ H/ ,/ j/ )/ 变换/ 值/ ,/ 就/ 可以/ 得到/ 定义/ 3/ ./ 设/ H/ 为/ 任一/ 模式/ ,/ 其/ 所有/ 子模式/ 为/ H1/ ,/ H2/ ,/ …/ ,/ Hr/ ,/ 将/ 每/ 一个/ 子模式/ 的确/ 定位/ 都/ 置于/ 1/ ,/ Page5/ 未确定/ 位/ 都/ 置于/ 0/ ,/ 这样/ 得到/ r/ 个/ 二进制/ 数/ h/ (/ 1/ )/ ,/ h/ (/ 2/ )/ ,/ …/ ,/ h/ (/ r/ )/ ,/ 令/ 它们/ 的/ 逆序/ 为/ 〈/ h/ (/ 1/ )/ 〉/ ,/ 〈/ h/ (/ 2/ )/ 〉/ ,/ …/ ,/ 〈/ h/ (/ r/ )/ 〉/ ,/ 则/ 称/ 〈/ h/ (/ j/ )/ 〉/ (/ j/ =/ 1/ ,/ 2/ ,/ …/ ,/ r/ )/ 为/ H/ 子模式/ Hj/ 的/ 序号/ ,/ 所有/ 序号/ 组成/ 的/ 集合/ 记为/ J/ (/ H/ )/ ./ {/ -/ 1/ ,/ 0/ ,/ 1/ }/ ./ S/ (/ H/ ,/ j/ )/ 的/ 值/ 与/ 模式/ H/ 的/ 子模式/ 有关/ ,/ 值域/ 为/ 定理/ 1/ ./ 设/ H/ 为/ 任一/ 模式/ ,/ 其/ W/ 变换/ 为/ S/ (/ H/ ,/ j/ )/ ,/ j/ =/ 1/ ,/ 2/ ,/ …/ ,/ N/ -/ 1/ ,/ J/ (/ H/ )/ 为/ 其/ 模式/ 序号/ 集合/ ,/ 则/ S/ (/ H/ ,/ j/ )/ 的/ 值域/ 为/ {/ -/ 1/ ,/ 0/ ,/ 1/ }/ ,/ 当且/ 仅/ 当/ j/ / J/ (/ H/ )/ 时/ ,/ S/ (/ H/ ,/ j/ )/ =/ 0/ ./ i/ =/ 0/ 证明/ ./ S/ (/ H/ ,/ j/ )/ =/ 1/ ∑/ t/ ∈/ Hwal/ (/ j/ ,/ t/ )/ ,/ 由/ W/ 变换/ 对称性/ (/ 见/ 文献/ [/ 19/ ]/ 第/ 50/ 页/ )/ 可/ 得/ ∑/ t/ ∈/ H/ 得到/ ∑/ t/ ∈/ H/ ∏/ n/ -/ 1H/ ,/ j/ =/ (/ jn/ -/ 1jn/ -/ 2/ …/ j1j0/ )/ ,/ 〈/ j/ 〉/ =/ (/ j0j1/ …/ jn/ -/ 2jn/ -/ 1/ )/ ./ 如果/ j/ ∈/ J/ (/ H/ )/ ,/ 那么/ j/ 为/ H/ 某一/ 子模式/ H/ 的/ 序号/ ,/ 设/ H/ 对应/ 的/ 序号/ 为/ 〈/ h/ 〉/ ,/ 其中/ h/ 是/ 将/ H/ 模式/ 中/ 未确定/ 位置/ 于/ 0/ ,/ 确定/ 位置/ 于/ 1/ 所得/ ,/ h/ 的/ 逆序/ 便/ 为/ 序号/ 〈/ h/ 〉/ ./ 注意/ 现在/ j/ =/ 〈/ h/ 〉/ ,/ 将/ 它/ 代入/ 上面/ 和/ 式/ ,/ 便/ 得/ ∑/ t/ ∈/ H/ ∏/ n/ -/ 1/ |/ H/ |/ ∑/ t/ ∈/ H/ ∏/ n/ -/ 11/ 参数/ 时才/ 为/ 1/ ,/ 所以/ 乘积/ 项/ 只/ 与/ H/ 的确/ 定位/ 有关/ ,/ 显然/ 它/ 为/ 1/ 或/ -/ 1/ ./ 又/ 由于/ H/ / H/ ,/ 对/ / t/ ∈/ H/ ,/ 推出/ / t/ ∈/ H/ ./ t/ 在/ H/ 的确/ 定位/ 上/ 的/ 值/ 是/ 固定/ 的/ ,/ 故/ 在/ 上式/ 求和/ 符号/ 下/ 每/ 一/ 乘积/ 项/ 都/ 等于/ 常数/ +/ 1/ 或/ 常数/ -/ 1/ ,/ 所以/ S/ (/ H/ ,/ j/ )/ =/ +/ 1/ 或/ -/ 1/ ./ 如果/ j/ / J/ (/ H/ )/ ,/ 则/ 对/ 任意/ H/ 的/ 子模式/ H/ / H/ ,/ j/ ≠/ 〈/ H/ 〉/ ./ 令/ j/ =/ (/ jn/ -/ 1jn/ -/ 2/ …/ j1j0/ )/ ,/ 则/ H/ 中/ 至少/ 有/ 一个/ 未确定/ 位/ ,/ 不妨/ 设/ l/ 位/ ,/ j/ 的/ 相应/ n/ -/ 1/ -/ l/ 位上/ 的/ 值/ jn/ -/ 1/ -/ l/ 等于/ 1/ ./ 否则/ 当/ j/ 中/ 相应/ H/ 的/ 未确定/ 位/ 的/ 值/ 都/ 等于/ 0/ 时/ ,/ 则/ 不论/ 其他/ 位上/ 的/ 值/ 如何/ ,/ j/ 即为/ H/ 的/ 某/ 一/ 序号/ 〈/ H/ 〉/ ./ 于是/ 在/ 表达式/ S/ (/ H/ ,/ j/ )/ =/ 1/ 每/ 一个/ 乘积/ 项中/ 都/ 有/ 如此/ 因子/ (/ -/ 1/ )/ tljn/ -/ 1/ -/ l/ ./ 由于/ H/ 中/ 的/ 用例/ ,/ 在/ 未确定/ 位上/ 取值/ 是/ 成双/ 出现/ 的/ ,/ 现在/ jn/ -/ 1/ -/ l/ =/ 1/ ,/ 所以/ 整个/ 乘积/ 项/ 在/ 成双/ 的/ 用例/ 上取/ 相反/ 符号/ ,/ 所以/ 整个/ 和/ 式/ 等于/ 0/ ./ 这/ 就/ 证明/ 了/ 该/ 定理/ ./ 证毕/ ./ 由此/ ,/ f/ (/ H/ )/ 表达式/ (/ 6/ )/ 可写/ 为/ 注意/ ,/ 当/ 用/ 模式/ 讨论/ 软件系统/ 其他/ 性质/ 时/ ,/ 只要/ 适当/ 定义/ 测试用例/ 集上/ 的/ 函数/ f/ (/ 就/ 像/ 这里/ 定义/ f/ 为/ 缺陷/ 函数/ 那样/ )/ ,/ 都/ 可以/ 用式/ (/ 6/ )/ 讨论/ 该/ 性质/ 在/ 模式/ 上/ 的/ 平均值/ ,/ 并/ 进行/ 其他/ 分析/ ./ 定理/ 2/ ./ H/ 是/ 任一/ 模式/ ,/ j/ ∈/ J/ (/ H/ )/ ,/ 设/ j/ =/ 〈/ H1/ 〉/ ,/ H1/ / H/ ./ 如果/ H1/ 确定/ 位上/ 参数值/ 为/ 1/ 的/ 个数/ 为/ 偶数/ ,/ 则/ S/ (/ H/ ,/ j/ )/ =/ 1/ ,/ 否则/ 为/ -/ 1/ ./ 证明/ ./ 当/ j/ ∈/ J/ (/ H/ )/ ,/ 且/ j/ =/ 〈/ H1/ 〉/ 时/ ,/ 因为/ H1/ / H/ ,/ 由/ 定理/ 1/ 以及/ 模式/ 阶/ 的/ 性质/ (/ 参看/ 文献/ [/ 20/ ]/ 第/ 51/ ~/ 52/ 页/ )/ ,/ 可得/ S/ (/ H/ ,/ j/ )/ =/ S/ (/ H1/ ,/ j/ )/ ./ 设/ H1/ 的/ 阶为/ k/ ,/ 且/ 确定/ 位是/ i1/ ,/ i2/ ,/ …/ ,/ ik/ 位/ ,/ 则/ S/ (/ H1/ ,/ j/ )/ =/ 1/ 对/ / t/ ∈/ H1/ ,/ t/ 在/ H1/ 确定/ 位/ 的/ 值/ 与/ H1/ 确定/ 位上/ 的/ 值/ 相等/ ,/ 所以/ 上面/ 和/ 式/ 里/ 乘积/ 是/ 常数/ ,/ 它/ 取值/ ±/ 1/ ,/ 全视/ ti1/ ,/ ti2/ ,/ …/ ,/ tik/ 里/ 包含/ 1/ 的/ 个数/ 的/ 奇偶性/ 而定/ ./ 证毕/ ./ 于是/ WMOD/ 上/ 结构/ S/ (/ H/ ,/ j/ )/ 已经/ 构造/ 出来/ 了/ ,/ 即/ H/ 是/ 任一/ 模式/ ,/ 则/ S/ (/ H/ ,/ j/ )/ =/ 根据/ 以上/ 定理/ ,/ 可以/ 看出/ ,/ WMOD/ 确实/ 将/ 测试用例/ 的/ 各种/ 模式/ 紧密/ 地/ 联系/ 在/ 一起/ 了/ ,/ 从/ 模式/ 中/ 也/ 可/ 看出/ 各个/ 参数/ 的/ 相互作用/ ./ 对于/ 系统/ 的/ 任意/ 输入/ 模式/ ,/ 如果/ 想/ 知道/ 该/ 模式/ 的/ 平均/ 缺陷率/ ,/ 则/ 根据/ 定义/ 1/ 和/ 定义/ 2/ ,/ 只/ 需要/ 知道/ S/ (/ H/ ,/ j/ )/ 的/ 值/ ,/ 而/ S/ (/ H/ ,/ j/ )/ 恰恰/ 和/ 该/ 模式/ 的/ 所有/ 子模式/ 有关/ ,/ 故/ 在/ WMOD/ 模型/ 下/ ,/ 系统/ 的/ 父/ 模式/ 和/ 子模式/ 以及/ 参数/ 的确/ 定位/ 之间/ 的/ 关系/ 一目了然/ ./ 4/ 实例/ 分析/ 及/ 多/ 水平/ 因素/ 推广/ 假设/ 要/ 测试/ 一个/ 交换机/ 的/ 打通/ 电话/ 功能/ ,/ 这个/ 测试/ 模型/ 有/ 4/ 个/ 参数/ ,/ 分别/ 为/ 呼叫/ 种类/ (/ Calltype/ )/ ,/ 资费/ 方式/ (/ Billing/ )/ ,/ 接入/ 方式/ (/ Access/ )/ 和/ 状态/ (/ Status/ )/ ,/ 仍然/ 考虑/ 二/ 水平/ 因素/ ,/ 即/ 每个/ 参数/ 有/ 两种/ 不同/ 的/ 状态/ 选择/ ,/ 分别/ 用/ 0/ 和/ 1/ 来/ 表示/ ,/ 如表/ 1/ 所示/ ./ 假设/ 实际/ 中/ 采取/ 了/ 一组/ 测试用例/ 为/ {/ (/ 0000/ )/ ,/ Page6/ (/ 0110/ )/ ,/ (/ 0111/ )/ ,/ (/ 1010/ )/ ,/ (/ 1011/ )/ ,/ (/ 1100/ )/ ,/ (/ 1101/ )/ ,/ (/ 1110/ )/ ,/ (/ 1111/ )/ }/ ,/ 例如/ (/ 0000/ )/ 代表/ 测试用例/ 为/ (/ Local/ ,/ Caller/ ,/ Loop/ ,/ Success/ )/ ,/ 其他/ 类似/ ./ 这组/ 测试用例/ 组成/ 集合/ Ts/ ./ 当/ 运用/ Ts/ 对/ 交换机/ 进行/ 测试/ 时/ ,/ 发生/ 某个/ 故障/ 的/ 测试用例/ 为/ (/ 1100/ )/ 和/ (/ 1101/ )/ ,/ 这/ 两个/ 测试用例/ 组成/ 集合/ Ts1/ ,/ 其余/ 7/ 个/ 测试用例/ 组成/ 集合/ Ts2/ ,/ 它们/ 没有/ 发现/ 该/ 故障/ ./ 呼叫/ 种类/ 资费/ 方式/ 接入/ 方式/ 状态/ 0Local1Longdistance1Collect1Isdn1Busy/ 根据/ 上/ 一节/ 的/ 讨论/ ,/ 认为/ 平均/ 每个/ 测试用例/ 发现/ 2/ // 9/ (/ 个/ )/ 缺陷/ ,/ 于是/ 测试用例/ 的/ 缺陷/ 函数/ 为/ 根据/ 式/ (/ 3/ )/ ,/ f/ (/ t/ )/ 的/ W/ 变换/ 如下/ :/ 9/ ,/ w1/ =/ w2/ =/ -/ 43/ ,/ w5/ =/ w6/ =/ -/ 20/ 于是/ 就/ 可以/ 构建/ 该/ 系统/ 的/ Walsh/ 函数/ 模型/ WMOD/ =/ (/ T/ ,/ W/ ,/ f/ ,/ F/ )/ ,/ 其中/ ,/ T/ 是/ 测试用例/ 集/ ;/ W/ 是/ Walsh/ 函数/ 系/ ,/ 这里/ 待/ 测系统/ 因素/ 为/ 4/ ,/ 故/ W/ 函数/ 系/ 包含/ wal/ (/ 0/ ,/ t/ )/ ,/ wal/ (/ 1/ ,/ t/ )/ ,/ …/ ,/ wal/ (/ 15/ ,/ t/ )/ 等/ 16/ 个/ 前/ Walsh/ 函数/ ;/ f/ 就是/ 根据/ 测试/ 结果/ 所/ 得出/ 的/ 测试用例/ 缺陷/ 函数/ ,/ F/ 是/ 其/ 上/ 的/ W/ 变换/ ./ 现在/ 我们/ 的/ 目的/ 就是/ 计算/ 发生/ 故障/ 的/ 测试用例/ 的/ 所有/ 模式/ 的/ 平均/ 缺陷率/ ,/ 然后/ 根据/ 平均/ 缺陷率/ 的/ 大小/ 再/ 选择/ 出/ 附加/ 测试用例/ ,/ 对系统/ 进行/ 测试/ ,/ 最后/ 诊断/ 出该/ 系统故障/ 的/ 原因/ ./ w0/ =/ 32w4/ =/ 8w8/ =/ w9/ =/ w10/ =/ w11/ =/ w12/ =/ w13/ =/ w14/ =/ w15/ =/ -/ 2/ 对/ 任意/ 一个/ 模式/ H/ ,/ 其/ 平均/ 缺陷率/ 为/ f/ (/ H/ )/ =/ N/ ∑/ N/ -/ 11wjS/ (/ H/ ,/ j/ )/ ./ 根据/ 定理/ 1/ 和/ 定理/ 2/ ,/ S/ (/ H/ ,/ j/ )/ 和/ j/ =/ 0H/ 的/ 子模式/ 上/ 的确/ 定位/ 上取/ 1/ 的/ 奇偶/ 数/ 有关/ ./ 比如/ ,/ 要/ 计算/ 模式/ (/ 110/ / )/ 的/ 缺陷率/ ,/ 那么/ S/ (/ H/ ,/ 0/ )/ =/ S/ (/ H/ ,/ 3/ )/ =/ S/ (/ H/ ,/ 4/ )/ =/ S/ (/ H/ ,/ 8/ )/ =/ 1/ ,/ S/ (/ H/ ,/ 1/ )/ =/ S/ (/ H/ ,/ 2/ )/ =/ S/ (/ H/ ,/ 5/ )/ =/ S/ (/ H/ ,/ 6/ )/ =/ -/ 1/ ,/ 其余/ 为/ 0/ ,/ 则/ 根据/ 式/ (/ 6/ )/ ,/ 模式/ (/ 110/ / )/ 的/ 缺陷/ 概率/ 为/ f/ (/ 110/ / )/ =/ 1/ 由此/ ,/ 可以/ 将/ 发生/ 故障/ 的/ 测试用例/ 的/ 所有/ 模式/ 找/ 出来/ ,/ 并/ 计算/ 它们/ 的/ 平均/ 缺陷率/ ,/ 再/ 按照/ 概率/ 的/ 大小/ 选择/ 附加/ 测试用例/ ./ 例如/ ,/ 对于/ 该例/ 来说/ ,/ 发现/ 故障/ 的/ 用/ 例为/ (/ 1100/ )/ 和/ (/ 1101/ )/ ,/ 首先/ 找出/ 其/ 拥有/ 较/ 高/ 缺陷率/ 的/ 所有/ 父/ 模式/ ./ 所谓/ 较/ 高/ 缺陷率/ 其实/ 可以/ 设定/ 一个/ 阈值/ ,/ 这里/ 采用/ 阈值/ 为/ 0.5/ ,/ 因为/ 显而易见/ 缺陷率/ 在/ 50/ %/ 以上/ 的/ 模式/ 极有/ 可能/ 导致系统/ 发生/ 故障/ ,/ 因此/ 应该/ 要/ 慎重对待/ ;/ 另外/ ,/ 由/ Walsh/ 函数/ 在/ 遗传算法/ 里/ 的/ 模式/ 定理/ 强调/ 了/ 高/ 适应度/ 的/ 模式/ 的/ 重要性/ [/ 20/ -/ 22/ ]/ ,/ 故/ 这里/ 我们/ 选取/ 的/ 阈值/ 是/ 0.5/ ./ 结果/ 有/ 以下/ 这些/ 模式/ ,/ 它们/ 的/ 缺陷率/ 都/ 高于/ 0.5/ ./ f/ (/ 110/ / )/ =/ 0.930/ ,/ f/ (/ 1/ / 00/ )/ =/ 0.611/ ,/ f/ (/ / 100/ )/ =/ 0.611/ ,/ f/ (/ 1/ / 0/ / )/ =/ 0.611/ ,/ f/ (/ / 10/ / )/ =/ 0.611/ ,/ f/ (/ 1/ / 01/ )/ =/ 0.611/ ,/ f/ (/ / 101/ )/ =/ 0.611/ ,/ f/ (/ 11/ / / )/ =/ 0.563/ ,/ f/ (/ 11/ / 0/ )/ =/ 0.560/ ./ 找出/ 这些/ 模式/ 后/ ,/ 按照/ 它们/ 概率/ 从大到/ 小/ 选择/ 附加/ 测试用例/ ./ 例如/ 首先/ 选择/ 测试/ 模式/ (/ 110/ / )/ ,/ 将/ 该/ 模式/ 的/ 不/ 确定/ 位用/ 不同于/ 原/ 测试用例/ 相应/ 位置/ 的/ 参数/ 取值/ 代入/ 即/ 为/ 新/ 的/ 测试用例/ ,/ 不过/ 这里/ 用/ 1/ 代入/ 则/ 为/ 原/ Ts/ 集合/ 中/ 另/ 一个/ 发现/ 故障/ 的/ 用例/ (/ 1101/ )/ ,/ 故/ 转而/ 考虑/ 模式/ (/ 1/ / 00/ )/ ,/ 将/ 不同于/ 原/ 测试用例/ 相应/ 位置/ 的/ 参数/ 取值/ 即/ 0/ 代入/ ,/ 得到/ 新/ 的/ 测试用例/ (/ 1000/ )/ ,/ 它/ 没有/ 出现/ 在/ 原/ Ts/ 集合/ 中/ ,/ 故/ 选择/ (/ 1000/ )/ 作为/ 新/ 的/ 补充/ 测试用例/ ./ 依次/ 类推/ ,/ 这样/ 就/ 得到/ 一组/ 新/ 的/ 补充/ 测试用例/ 集/ {/ (/ 1000/ )/ ,/ (/ 0100/ )/ ,/ (/ 1001/ )/ ,/ (/ 0101/ )/ }/ ./ 这样/ 设计/ 附加/ 用例/ 的/ 好处/ 在于/ 不用/ 将/ 原先/ 出错/ 测试用例/ 的/ 每/ 一个/ 位置/ 都/ 用/ 不同于/ 原来/ 的/ 值/ 代入/ ,/ 按照/ 文献/ [/ 13/ ]/ 的/ 思想/ ,/ 需要/ 再/ 补充/ 设计/ 8/ 个/ 附加/ 的/ 测试用例/ ,/ 而/ 这里/ 根据/ 模式/ 概率/ 的/ 大小/ ,/ 只/ 需要/ 补充/ 4/ 个/ 测试用例/ ,/ 大大减少/ 了/ 附加/ 测试用例/ 的/ 个数/ ,/ 且/ 由/ 模式/ 缺陷/ 概率/ 保证/ 最终/ 能/ 找到/ 软件/ 出错/ 的/ 真正/ 模式/ ./ 用/ 这组/ 测试用例/ 再/ 对系统/ 进行/ 测试/ ,/ 根据/ 结果/ 就/ 可以/ 取定/ 导致/ 故障/ 的/ 原因/ ./ (/ 1/ )/ 如果/ 这/ 4/ 个/ 测试用例/ 的/ 运行/ 都/ 没有/ 发生/ 原先/ 的/ 故障/ ,/ 则/ 说明/ 上面/ 导致/ 那些/ 缺陷率/ 高/ 的/ 模式/ 的/ 真正/ 起因/ 就是/ 原来/ 发现/ 故障/ 的/ 两个/ 测试用例/ ,/ 即/ (/ 1101/ )/ 和/ (/ 1100/ )/ ,/ 因为/ 附加/ 用例/ 是/ 用/ 不同于/ 相应/ 位置/ 的/ 参数值/ 代入/ 而/ 得到/ 的/ ,/ 现在/ 附加/ 用例/ 没有/ 发现/ 故障/ ,/ 因此/ 最后/ 的/ 结论/ 就是/ 模式/ (/ 1100/ )/ (/ 即/ (/ Longdistance/ ,/ Collect/ ,/ Loop/ ,/ Success/ )/ )/ 和/ 模式/ (/ 1101/ )/ (/ 即/ (/ Longdistance/ ,/ Collect/ ,/ Loop/ ,/ Busy/ )/ )/ 是/ 导致/ 故障/ 的/ 因素/ ;/ (/ 2/ )/ 如果/ 这/ 4/ 个测/ Page7/ 试用/ 例某/ 一个/ 发现/ 了/ 故障/ ,/ 例如/ 是/ (/ 1000/ )/ ,/ 它/ 和/ 原/ 发现/ 故障/ 的/ 用例/ 共同/ 父/ 模式/ 为/ (/ 1/ / 00/ )/ ,/ 因此/ 导致/ 故障/ 的/ 因素/ 是/ 模式/ (/ 1/ / 00/ )/ (/ 即/ (/ Longdistance/ ,/ / ,/ Loop/ ,/ Success/ )/ )/ 以及/ 模式/ (/ 1101/ )/ (/ 即/ (/ Longdistance/ ,/ Collect/ ,/ Loop/ ,/ Busy/ )/ )/ ;/ (/ 3/ )/ 如果/ 这/ 4/ 个/ 用例/ 都/ 发生/ 了/ 故障/ ,/ 则/ 说明/ 该/ 系统/ 极有/ 问题/ ,/ 质量/ 太低/ ,/ 则/ 需要/ 进行/ 重新/ 广泛/ 的/ 分析/ 和/ 检查/ ./ 类似/ 地/ ,/ 可以/ 讨论/ 其他/ 各种/ 情况/ ./ 由此/ 可/ 看出/ ,/ 在/ 组合/ 测试/ 的/ 基础/ 上/ ,/ 并/ 辅之以/ 一些/ 必要/ 的/ 相关/ 测试用例/ ,/ 可以/ 对/ 导致/ 系统故障/ 的/ 因素/ 进行/ 有效/ 的/ 定位/ ./ 另外/ 本文/ 为了/ 将/ Walsh/ 函数/ 引入/ 到/ 组合/ 测试/ ,/ 考虑/ 的/ 都/ 是/ 二/ 水平/ 因素/ ./ 但是/ 实际/ 系统/ 是/ 复杂/ 的/ ,/ 参数/ 的/ 数量/ 可能/ 不止/ 两个/ ./ 可以/ 推广/ 该/ Walsh/ 模型/ ,/ 推广/ 方法/ 如下/ ./ 如果/ 考虑/ 一般/ 多/ 因素/ 系统/ ,/ 有/ S/ 个/ 因素/ 参数/ c1/ ,/ c2/ ,/ …/ ,/ cs/ ,/ 每个/ 参数/ ci/ 取值/ 集/ Ti/ 里/ 元素/ 个数/ ai/ 未必/ 等于/ 2/ ./ 令/ M/ =/ a1/ ×/ a2/ ×/ …/ ×/ aS/ ./ 对/ 任意/ Ti/ 中/ ai/ 个/ 元素/ 按/ 任意/ 次序/ 排序/ ,/ 不妨/ 认为/ 这/ ai/ 个/ 元素/ 就是/ 1/ ,/ 2/ ,/ …/ ,/ ai/ 等/ ai/ 个/ 自然数/ ,/ 次序/ 为/ 自然/ 序/ ./ 然后/ 对/ M/ 个/ 测试用例/ 集/ T/ / =/ {/ (/ ν/ 1/ ,/ ν/ 2/ ,/ …/ ,/ ν/ S/ )/ |/ ν/ i/ ∈/ Ti/ ,/ i/ =/ 1/ ,/ 2/ ,/ …/ ,/ S/ }/ 按/ 字典/ 序/ (/ 从小到大/ )/ 排序/ ,/ 这样/ 便/ 得到/ 一个/ 有序/ 集/ T/ / ./ 寻找/ 自然数/ n/ ,/ 使得/ 令/ 2n/ =/ N/ ./ 设/ N/ -/ M/ 个/ 元素/ 为/ 虚拟/ 测试用例/ ,/ 记之为/ Δ/ 1/ ,/ Δ/ 2/ ,/ …/ ,/ Δ/ N/ -/ M/ ./ 把/ N/ -/ M/ 个/ 虚拟/ 用例/ 随机/ 插入/ 进/ 已经/ 排/ 好/ 次序/ 的/ T/ / 集中/ ,/ 插/ 不/ 进前/ M/ 个/ 次序/ 统统/ 作为/ 最后/ 元素/ (/ 按/ 任意/ 次序/ 排列/ 于/ 后/ )/ ,/ 从而/ 得到/ 新/ 的/ 测试用例/ 集/ T/ ,/ 它/ 是/ T/ / 的/ 扩充/ ./ 让/ T/ 中/ N/ 个/ 从小到大/ 测试用例/ 与/ [/ 0/ ,/ 1/ )/ 区间/ 等/ 分/ 的/ N/ 个子/ 区间/ 的/ 左/ 端点/ 对应/ ,/ 于是/ 便/ 得到/ 一般/ 多/ 因素/ 系统/ ,/ 测试用例/ (/ 包括/ 虚拟/ 用例/ )/ 的/ 理论/ 表示/ ,/ 重新/ 记为/ T/ =/ {/ testii/ =/ 0/ ,/ 1/ ,/ …/ ,/ N/ -/ 1/ }/ ./ 软件/ 在/ 某种意义/ 上/ 是/ 一个/ 形式系统/ ,/ 它/ 在/ 运行/ 时/ 往往/ 由于/ 事前/ 无法/ 预料/ 的/ 原因/ 而/ 产生/ 故障/ ./ 现在/ M/ </ N/ ,/ 它/ 提供/ 了/ N/ -/ M/ 个/ “/ 机会/ ”/ 去/ 检验/ 这些/ 无法/ 预料/ 的/ 原因/ ,/ 也就是说/ 可以/ 根据/ 历史/ 经验/ 对/ Δ/ 1/ ,/ Δ/ 2/ ,/ …/ ,/ Δ/ N/ -/ M/ 等/ 虚拟/ 用例/ 赋予/ 意义/ ,/ 并/ 估计/ 这些/ 事件/ 发生/ 的/ 概率/ P1/ ,/ P2/ ,/ …/ ,/ PN/ -/ M/ ,/ 或者/ 按/ 统计学/ 上/ “/ 同等/ 无知/ ”/ 原则/ ,/ 赋给/ 每个/ 虚拟/ 用例/ 发生/ 软件/ 故障/ 概率/ 为/ P1/ =/ P2/ =/ …/ =/ PN/ -/ M/ =/ 1TS/ ,/ TS1/ ,/ TS2/ 符号/ 如/ 前/ ,/ |/ TS/ |/ =/ m/ ,/ |/ TS1/ |/ =/ l/ ,/ |/ TS2/ |/ =/ m/ -/ l/ ./ 在/ 前面/ 定义/ 的/ T/ 上/ 定义/ 缺陷/ 函数/ f/ (/ test/ )/ 为/ f/ (/ test/ )/ =/ 这样/ 就/ 得到/ 一般/ 多/ 因素/ 系统/ 的/ Walsh/ 函数/ 模型/ WMOD/ =/ (/ T/ ,/ W/ ,/ f/ ,/ F/ )/ ./ 再/ 利用/ 前面/ 定理/ ,/ 可/ 得出/ 一般/ 多/ 因素/ 系统/ 任意/ 模式/ 的/ 缺陷/ 概率/ ./ 5/ 相关/ 工作/ 组合/ 测试/ 的/ 目的/ 在于/ 对/ 软件/ 中/ 各个/ 因素/ 之间/ 的/ 相互作用/ 进行/ 测试/ ./ 不同/ 的/ 组合/ 覆盖/ 标准/ 决定/ 了/ 测试用例/ 集/ 对于/ 因素/ 间/ 交互作用/ 的/ 不同/ 覆盖/ 能力/ ,/ 也/ 决定/ 了/ 其/ 不同/ 的/ 错误/ 检测/ 能力/ ./ 但是/ 目前/ ,/ 对/ 组合/ 测试/ 的/ 结果/ 进行/ 调试/ 和/ 错误/ 定位/ 分析/ 的/ 研究/ 还/ 很少/ [/ 23/ ]/ ./ 2002/ 年/ Zeller/ 和/ Hildebrandt/ [/ 24/ ]/ 提出/ 了/ Deltadebugging/ 方法/ 对待/ 测系统/ 中/ 出现/ 的/ 故障/ 进行/ 调试/ 以/ 简化/ 与/ 孤立/ 导致/ 故障/ 的/ 环境/ 或/ 输入/ ./ Yilmaz/ 等/ 人/ [/ 25/ ]/ 在/ 2006/ 年用/ 分类/ 树/ 方法/ 来/ 定位/ 错误/ 交互/ ,/ 一般来说/ 系统/ 的/ 错误/ 交互/ 很难/ 被/ 精确/ 地/ 定位/ ./ 2008/ 年/ Colbourn/ 和/ McClary/ [/ 26/ ]/ 提出/ 了/ (/ d/ ,/ t/ )/ 错误/ 定位/ 表及/ 错误/ 侦测/ 表/ 的/ 概念/ ,/ 利用/ 这些/ 表来/ 对/ 组合/ 的/ 交互错误/ 进行/ 定位/ ./ 2009/ 年/ Martinez/ 等/ 人/ [/ 27/ ]/ 提出/ 了/ 一般/ 的/ 错误/ 定位/ 表/ ,/ 在/ 此/ 模型/ 下/ 提出/ 了/ 自/ 适应/ 算法/ 来/ 定位/ 错误/ 交互/ ./ 但是/ Martinez/ 等/ 人/ 提出/ 的/ 模型/ 只是/ 处理/ 了/ 二维/ 组合/ 覆盖/ ,/ 即/ 在/ 软件/ 故障/ 是/ 由/ 二维/ 错误/ 交互/ 引发/ 的/ 假设/ 下/ ,/ 给出/ 错误/ 交互/ 定位/ 的/ 自/ 适应/ 算法/ ,/ 对于/ 一般/ 的/ 情况/ 并/ 没有/ 给出/ 相应/ 的/ 解决/ 方法/ ./ 2011/ 年/ ,/ Zhang/ 等/ 人/ [/ 28/ ]/ 提出/ 了/ 自/ 适应/ 测试/ 生成/ 方法/ ,/ 该/ 方法/ 类似/ 于/ Deltadebugging/ 运用/ 失败/ 测试/ 作为/ 种子/ 测试/ 去/ 定位/ 故障/ 组合/ ./ 2012/ 年/ ,/ Shakya/ 等/ 人/ [/ 29/ ]/ 利用/ 扩充/ 测试/ 和/ 特征选择/ 来/ 提升/ 分类/ 树/ 的/ 效果/ ,/ 以此/ 来/ 定位/ 错误/ 交互/ ./ 我国/ 学者/ 对/ 基于/ 组合/ 测试/ 的/ 软件/ 故障诊断/ 方法/ 也/ 进行/ 了/ 相应/ 的/ 研究/ ./ 早/ 在/ 2006/ 年/ ,/ 徐宝文/ 等/ 人/ [/ 13/ ]/ 提出/ 了/ 一种/ 基于/ 组合/ 测试/ 的/ 软件/ 故障/ 调试/ 方法/ ,/ 该/ 方法/ 基于/ 组合/ 测试/ 的/ 结果/ ,/ 补充/ 一些/ 附加/ 测试用例/ 进行/ 重新/ 测试/ ,/ 然后/ 对/ 其/ 结果/ 作/ 进一步/ 的/ 分析/ 和/ 验证/ ,/ 从而/ 可/ 把/ 引发/ 软件/ 故障/ 的/ 错误/ 交互/ 锁定/ 在/ 很小/ 的/ 范围/ ,/ 但/ 他们/ 的/ 方法/ 基于/ 一定/ 的/ 假设/ ./ 周/ 吴杰/ 等/ Page8/ 人/ [/ 23/ ]/ 改进/ 了/ Martinez/ 等/ 人/ 的/ 用/ 高维/ 覆盖/ 表来/ 构造/ 错误/ 定位/ 表/ 的/ 方法/ ,/ 解决/ 了/ Martinez/ 等/ 人/ 提出/ 的/ 问题/ 之一/ ,/ 即/ 怎样/ 在/ 组合/ 测试/ 中/ 定位/ 至多/ t/ 维/ 的/ 交互错误/ ,/ 但/ 对于/ Martinez/ 等/ 人/ 留下/ 的/ 另/ 一个/ 开/ 问题/ ,/ 即/ 一般/ 待/ 测系统/ 的/ 错误/ 定位/ 仍然/ 没有/ 解决/ ./ 本/ 课题组/ 基于/ 上述/ 研究/ ,/ 尤其/ 是/ 在/ 徐宝文/ 等/ [/ 30/ ]/ 学者/ 所提/ 的/ 软件/ 故障/ 调试/ 方法/ 的/ 基础/ 上/ ,/ 充分考虑/ 组合/ 测试/ 中/ 各种因素/ 的/ 之间/ 的/ 相互作用/ ./ 因为/ 组合/ 测试/ 成功/ 应用/ 的/ 关键在于/ 对待/ 测/ 软件/ 的/ 内部/ 特征/ ,/ 如/ 因素/ 间/ 交互/ 的/ 力度/ 等/ 信息/ 有所/ 了解/ ,/ 并/ 在/ 此基础/ 上/ 利用/ 这些/ 信息/ 设计/ 测试用例/ ./ 所有/ 我们/ 采用/ 模式/ 概念/ 抽象/ 出/ 因素/ 间/ 交互/ 关系/ 的/ 特殊性/ ./ 一方面/ ,/ 利用/ Walsh/ 函数/ 工具/ 及其/ Walsh/ 变换/ 得出/ 测试用例/ 模式/ 引发/ 故障/ 的/ 概率/ ,/ 则/ 减少/ 需要/ 补充/ 的/ 测试用例/ ./ 另一方面/ ,/ Walsh/ 模式/ 模型/ 也/ 在/ 一定/ 程度/ 上/ 验证/ 了/ 文献/ [/ 13/ ]/ 中/ 基本/ 假设/ 的/ 成立/ 情况/ ./ 本文/ 也/ 给出/ 了/ 从/ 二/ 水平/ 因素/ 推广/ 到/ 多/ 因素/ 系统/ 的/ 办法/ ,/ 部分/ 解决/ 了/ Martinez/ 等/ 人/ 留下/ 的/ “/ 一般/ 待/ 测系统/ 的/ 错误/ 定位/ 仍然/ 没有/ 解决/ ”/ 的/ 这样/ 一个/ 开/ 问题/ ./ 6/ 结论/ 与/ 展望/ 在/ 应用/ 组合/ 设计/ 产生/ 的/ 测试用例/ 集对/ 软件系统/ 进行/ 测试/ 之后/ ,/ 如果/ 发现/ 故障/ ,/ 那么/ 说明/ 测试/ 工作/ 是/ 成功/ 的/ ,/ 但是/ 还/ 需要/ 通过/ 对/ 实验/ 结果/ 的/ 分析/ 和/ 处理/ ,/ 初步/ 确定/ 故障/ 原因/ ,/ 并/ 探求/ 可能/ 更优/ 实验/ 方案/ ,/ 来/ 对/ 故障/ 原因/ 进行/ 进一步/ 的/ 分析/ 、/ 处理/ 和/ 验证/ ./ 本文/ 在/ 建立/ Walsh/ 函数/ 模型/ 的/ 前提/ 下/ ,/ 提出/ 了/ 一种/ 根据/ 测试/ 结果/ 和/ 附加/ 测试用例/ 的/ 测试/ 结果/ 进行/ 故障/ 原因/ 定位/ 的/ 方法/ ./ 基于/ 本文/ 的/ 模型/ ,/ 该/ 方法/ 可以/ 解决/ 故障/ 原因/ 的/ 诊断/ 问题/ ./ 现今/ 软件/ 界/ 已经/ 积累/ 了/ 大量/ 软件测试/ 经验/ ,/ 将/ 这些/ 经验/ 上升/ 为/ 理论/ ,/ 无论是/ 对/ 计算机科学/ ,/ 或是/ 对/ 软件测试/ 实践/ 都/ 是/ 有/ 重大/ 作用/ 的/ ./ 本文/ 就是/ 基于/ 上述/ 想法/ ,/ 为/ 软件/ 组合/ 测试/ 以及/ 与/ 之/ 相关/ 的/ 故障/ 定位/ 方法/ 寻找/ 适当/ 的/ 理论/ 以及/ 方法/ ./ 本文/ 利用/ Walsh/ 函数/ 工具/ 通过/ 实例/ 分析/ 证明/ 了/ 基于/ Walsh/ 函数/ 的/ 模型/ WMOD/ 充当/ 软件测试/ 理论/ 以及/ 辅助/ 方法/ 是/ 可行/ 的/ ./ 基于/ Walsh/ 函数/ 的/ 模型/ WMOD/ 作为/ 软件测试/ 的/ 理论/ 基础/ ,/ 可以/ 推导/ 出/ 测试方法/ 上/ 的/ 新/ 突破/ ,/ 例如/ ,/ 可以/ 把/ WMOD/ 看成/ 五元/ 组/ (/ T/ ,/ W/ ,/ S/ ,/ f/ ,/ F/ )/ ,/ 其中/ T/ ,/ W/ ,/ S/ 都/ 是/ 固定/ 结构/ 而/ f/ 可以/ 由/ 用户/ 定义/ ,/ 能否/ 考虑/ T/ 上/ 不同/ 的/ 函数/ f/ 及其/ W/ 变换/ F/ ,/ 从而/ 研究/ 其他/ 测试/ 问题/ ./ 把/ 上述/ 模型/ 进一步/ 深化/ ,/ 从中/ 找出/ 更/ 深刻/ 的/ 结果/ ,/ 例如/ 类似/ 于/ 遗传算法/ ,/ 也/ 让/ 组合/ 测试/ 的/ 用例/ 进行/ 演化/ ,/ 从而/ 寻找/ 更能/ 揭示/ 软件/ 故障/ 的/ 用例/ ,/ 这/ 也许/ 是/ 另/ 一种/ 组合/ 测试用例/ 生成/ 方法/ ./ 由于/ 组合/ 测试/ 模式分析/ 暗合/ 于/ 遗传算法/ 里/ 积木/ 块/ 原理/ ,/ 这种/ 做法/ 也许/ 是/ 可行/ 的/ ./ 另外/ 研究/ 用/ Walsh/ 函数/ 表达/ 的/ 模式/ 和/ 极小/ 错误模式/ 的/ 深刻/ 联系/ ,/ 即/ 如果/ 能/ 直接/ 利用/ Walsh/ 函数/ 工具/ 找出/ 导致/ 软件/ 错误/ 的/ 极小/ 故障/ 模式/ ,/ 就/ 很/ 有/ 可能/ 更/ 精确/ 地/ 定位/ 故障/ 诱因/ ,/ 进而/ 为/ 故障/ 定位/ 提供/ 有益/ 的/ 线索/ ./ 总之/ ,/ 以上/ 都/ 是/ 今后/ 研究/ 的/ 主要/ 方向/ ./ 致谢/ 审稿人/ 对/ 本文/ 提出/ 了/ 有/ 价值/ 的/ 修改意见/ ,/ 在/ 此/ 表示/ 衷心感谢/ !/ 

