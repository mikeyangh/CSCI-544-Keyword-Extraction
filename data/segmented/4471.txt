Page1/ 一种/ 基于/ 网络/ 感知/ 的/ 虚拟机/ 再/ 调度/ 算法/ 罗/ 刚毅/ 钱柱/ 中/ 陆桑璐/ (/ 南京大学/ 计算机软件/ 新/ 技术/ 国家/ 重点/ 实验室/ 南京/ 210093/ )/ (/ 南京大学/ 计算机科学/ 与/ 技术/ 系/ 南京/ 210093/ )/ 摘要/ 有效/ 的/ 虚拟机/ 调度/ 策略/ 能够/ 提高/ 数据中心/ 的/ 资源/ 利用率/ ,/ 降低/ 运行/ 时/ 能耗/ ./ 现有/ 调度/ 算法/ 综合/ 考虑/ 了/ 虚拟机/ 在/ CPU/ 、/ 内存/ 和/ 网络/ 方面/ 的/ 需求/ ,/ 通过/ 合理/ 部署/ 虚拟机/ ,/ 以期/ 最小化/ 计算/ 、/ 存储/ 与/ 网络/ 的/ 代价/ ./ 然而/ ,/ 在线/ 的/ 虚拟机/ 部署/ 策略/ 较/ 少/ 考虑/ 由于/ 虚拟机/ 退出/ 所/ 造成/ 的/ 资源/ 利用率/ 下降/ 与/ 网络/ 延迟/ 上升/ 的/ 问题/ ./ 为此/ ,/ 文中/ 深入研究/ 面向/ 网络/ 感知/ 的/ 周期性/ 资源/ 重/ 配置/ 问题/ ,/ 提出/ 了/ 面向/ 网络/ 感知/ 的/ 虚拟机/ 再/ 调度/ 算法/ ,/ 通过/ 适当/ 的/ 虚拟机/ 迁移/ ,/ 提高/ 部署/ 在/ 虚拟机/ 上/ 任务/ 的/ 性能/ 以及/ 数据中心/ 整体/ 的/ 网络通信/ 效率/ ./ 算法/ 通过/ 尽可能/ 低/ 代价/ 的/ 虚拟机/ 迁移/ 来/ 提高/ 虚拟机/ 之间/ 的/ 网络通信/ 能力/ ,/ 以/ 提升/ 虚拟/ 机组/ 的/ 整体/ 运行/ 效率/ ,/ 并/ 保持/ 物理/ 机/ 占用/ 但/ 不/ 显著/ 提高/ ./ 作者/ 通过/ 两个/ 测试/ 平台/ 在/ 真实/ 环境/ 中/ 验证/ 了/ 算法/ 的/ 有效性/ ;/ 通过/ 真实/ 的/ 数据/ 集/ 和/ 模拟实验/ ,/ 在/ 多种/ 虚拟机/ 部署/ 算法/ 下/ ,/ 对比/ 了/ 应用/ 虚拟机/ 再/ 调度/ 算法/ 前后/ 虚拟机/ 的/ 部署/ 效果/ ,/ 验证/ 了/ 该/ 算法/ 能够/ 以较/ 小/ 的/ 代价/ 使得/ 高/ 网络通信/ 代价/ 的/ 任务/ 数/ 明显/ 减少/ ,/ 虚拟/ 机组/ 的/ 网络通信/ 能力/ 显著/ 提高/ ./ 关键词/ 云/ 计算/ ;/ 数据中心/ ;/ 网络/ 感知/ ;/ 虚拟机/ 再/ 调度/ 1/ 引言/ 随着/ 虚拟化/ 技术/ 的/ 发展/ 以及/ 云/ 计算/ 概念/ 的/ 普及/ ,/ 越来越/ 多/ 的/ 用户/ 选择/ 通过/ 向/ 数据中心/ 租用/ 计算资源/ 的/ 方式/ 来/ 完成/ 其/ 工作/ 任务/ 而/ 非/ 自己/ 购买/ 物理/ 设备/ ./ 为/ 提高/ 资源/ 利用率/ ,/ 如何/ 高效/ 地/ 将/ 用户/ 请求/ 的/ 资源/ 合理/ 部署/ 到/ 各个/ 物理/ 服务器/ 上/ 是/ 数据中心/ 的/ 管理者/ 需要/ 解决/ 的/ 重要/ 问题/ 之一/ ./ 在/ 云/ 计算/ 模式/ 下/ ,/ 用户/ 向/ 数据中心/ 申请/ 一组/ 虚拟机/ ,/ 并/ 指明/ 各个/ 虚拟机/ 对/ CPU/ 、/ 内存/ 与/ 网络通信/ 的/ 需求/ ./ 数据中心/ 运用/ 虚拟机/ 调度/ 算法/ ,/ 为/ 这组/ 虚拟机/ 选择/ 合适/ 的/ 物理/ 机/ 运行/ ./ 基于/ CPU/ 、/ 内存/ 的/ 调度/ 算法/ 一方面/ 关注/ 尽可能/ 地/ 减少/ 物理/ 服务器/ 上/ 的/ CPU/ 、/ 内存/ 等/ 碎片/ ,/ 以/ 容纳/ 更/ 多/ 虚拟机/ ,/ 提高/ 数据中心/ 中/ 服务器/ 的/ 整体/ 利用率/ [/ 1/ -/ 2/ ]/ ;/ 另一方面/ 则/ 关注/ 资源/ 的/ 预留/ ,/ 以/ 应对/ 虚拟机/ 负载/ 的/ 变化/ [/ 3/ -/ 4/ ]/ ./ 这样/ 资源配置/ 问题/ 通常/ 可/ 转化/ 为/ 多维/ 背包/ 问题/ ,/ 并/ 通过/ 启发式/ 的/ 算法/ 求解/ ./ 保证/ 虚拟机/ 的/ 运行/ 性能/ 也/ 是/ 虚拟机/ 调度/ 算法/ 需要/ 关注/ 的/ 问题/ 之一/ ./ 除了/ CPU/ 、/ 内存/ 等/ 资源/ 之外/ ,/ 网络通信/ 是/ 影响/ 虚拟机/ 性能/ 的/ 重要/ 因素/ ./ 当前/ 的/ 数据中心/ 由/ 千台/ 以上/ 的/ 物理/ 服务器/ 构成/ ,/ 服务器之间/ 通常/ 通过/ 树形/ 的/ 拓扑/ 结构/ 连接/ ,/ 因此/ 其端/ 到/ 端的/ 网络通信/ 能力/ 随着/ 物理/ 机/ 分布/ 的/ 不同/ 有着/ 很大/ 的/ 差异/ ,/ 也/ 就/ 造成/ 了/ 部署/ 在/ 物理/ 机上/ 的/ 虚拟机/ 之间/ 的/ 网络通信/ 能力/ 的/ 差异/ ./ 基于/ 网络/ 感知/ 的/ 虚拟机/ 部署/ ,/ 即/ 部署/ 虚拟机/ 时/ ,/ 应/ 考虑/ 其/ 相互之间/ 的/ 网络通信/ 代价/ ,/ 试图/ 将/ 用户/ 申请/ 的/ 一组/ 虚拟机/ 部署/ 到/ 同一/ 机架/ 的/ 物理/ 机上/ 以/ 减少/ 其/ 通信/ 延迟/ 以及/ 整个/ 数据中心/ 的/ 通信/ 流量/ ./ 上述/ 研究/ 工作/ 都/ 关注/ 于/ 用户/ 请求/ 到达/ 时/ ,/ 如何/ 合理/ 、/ 高效/ 地/ 部署/ 虚拟机/ ./ 然而/ ,/ 系统/ 运行/ 过程/ 中/ ,/ 如果/ 不/ 执行/ 周期性/ 的/ 再/ 调度/ ,/ 则/ 会/ 因为/ 任务/ 结束/ 部分/ 虚拟机/ 的/ 退出/ ,/ 导致/ 资源/ 碎片/ 和/ 网络通信/ 的/ 代价/ 升高/ ,/ 算法/ 的/ 性能/ 就/ 将/ 随着/ 时间/ 的/ 推移/ 出现/ 下降/ ./ 尤其/ 是/ 大部分/ 的/ 虚拟机/ 部署/ 算法/ 并/ 没有/ 考虑/ 到/ 虚拟机/ 之间/ 的/ 网络通信/ 代价/ ,/ 这些/ 算法/ 在/ 长时间/ 运行/ 后/ ,/ 会/ 将/ 任务/ 所/ 需/ 的/ 虚拟机/ 部署/ 到/ 由于/ 先前/ 任务/ 完成/ 导致/ 的/ 虚拟机/ 退出/ 时/ 留下/ 的/ 槽/ 位/ 上/ ,/ 而/ 这些/ 位置/ 所在/ 的/ 物理/ 机/ 并不一定/ 属于/ 同一/ 机架/ ,/ 从而/ 就/ 导致/ 了/ 这部分/ 虚拟机/ 之间/ 的/ 通信/ 代价/ 大大提高/ ,/ 不仅/ 影响/ 了/ 在/ 虚拟机/ 上/ 执行/ 的/ 任务/ 的/ 性能/ ,/ 也/ 影响/ 了/ 整个/ 数据中心/ 的/ 网络通信/ 能力/ ./ 为此/ ,/ 本文/ 深入研究/ 了/ 面向/ 网络/ 感知/ 的/ 周期性/ 资源/ 重/ 配置/ 问题/ ,/ 通过/ 实验/ 测试/ 了/ 网络通信/ 以及/ 动态/ 迁移/ 对/ 部署/ 在/ 虚拟机/ 上/ 的/ 任务/ 的/ 影响/ ,/ 由此/ 提出/ 了/ 一种/ 有效/ 的/ 、/ 低/ 代价/ 的/ 基于/ 网络/ 感知/ 的/ 虚拟机/ 再/ 调度/ 算法/ ./ 在/ 尽可能/ 不/ 影响/ 虚拟机/ 性能/ 以及/ 不/ 造成/ 数据中心/ 网络/ 拥塞/ 的/ 条件/ 下/ ,/ 通过/ 适当/ 的/ 虚拟机/ 迁移/ 来/ 提高/ 虚拟机/ 之间/ 的/ 网络通信/ 能力/ ,/ 提升/ 虚拟/ 机组/ 的/ 整体/ 运行/ 效率/ ./ 本文/ 第/ 2/ 节/ 介绍/ 虚拟机/ 部署/ 问题/ 的/ 相关/ 工作/ ;/ 第/ 3/ 节/ 介绍/ 数据中心/ 网络拓扑/ ,/ 分析/ 网络/ 对/ 虚拟/ 机组/ 性能/ 影响/ ;/ 第/ 4/ 节/ 测试/ 动态/ 迁移/ 在/ 不同/ 条件/ 下/ 对/ 不同/ 类型/ 的/ 任务/ 可能/ 造成/ 的/ 影响/ ;/ 第/ 5/ 节/ 给出/ 再/ 调度/ 问题/ 的/ 形式化/ 定义/ ;/ 第/ 6/ 节/ 提出/ 基于/ 贪心/ 策略/ 的/ 再/ 调度/ 算法/ ;/ 第/ 7/ 节/ 通过/ 实验/ 对比/ 验证/ 算法/ 的/ 性能/ ;/ 第/ 8/ 节/ 总结/ 全文/ 的/ 工作/ ./ 2/ 相关/ 工作/ 虚拟机/ 部署/ 与/ 整合/ 问题/ 的/ 研究/ 可/ 分为/ 很多类/ ,/ 每个/ 大类/ 所/ 关注/ 的/ 重点/ 各不相同/ ./ 例如/ 一些/ 研究/ 关注/ 如何/ 最大化/ 资源/ 利用率/ ,/ 如何/ 节能/ ;/ 而/ 另/ 一些/ 研究/ 则/ 关注/ 如何/ 提高/ 虚拟机/ 之间/ 使用/ 资源/ 的/ 公平性/ ,/ 提高/ 虚拟机/ 性能/ 等/ 方面/ ./ 以/ 最大化/ 资源/ 利用率/ 为/ 目标/ 的/ 虚拟机/ 部署/ 算法/ ,/ 在/ 初次/ 为/ 虚拟机/ 分配资源/ 时/ ,/ 根据/ 其/ 对/ 资源/ 的/ 需求/ 特点/ 和/ 系统/ 所剩/ 资源/ 的/ 分布/ ,/ 找出/ 一种/ 最为/ 合适/ 的/ 虚拟机/ 映射/ 方式/ ,/ 以/ 提高/ 物理/ 计算资源/ 的/ 利用率/ ,/ 这/ 类/ 问题/ 通常/ 被/ 形式化/ 为/ 多维/ 的/ 装箱/ 问题/ ,/ 并/ 通过/ 启发式/ 算法/ 求解/ [/ 5/ ]/ ./ 而/ 虚拟机/ 的/ 动态/ 迁移/ 技术/ 使得/ 可以/ 在/ 不/ 影响/ 虚拟机/ 运行/ 的/ 情况/ 下/ ,/ 从/ 一个/ 物理/ 节点/ 移动/ 到/ 另/ 一个/ 物理/ 节点/ ,/ 这/ 就/ 使得/ 我们/ 能够/ 将/ 一些/ 利用率/ 较/ 低/ 的/ 节点/ 上/ 的/ 虚拟机/ 迁移/ 出去/ ,/ 然后/ 将/ 这些/ 物理/ 服务器/ 关闭/ 或/ 使/ 其/ 待机/ ,/ 提高/ 资源/ 的/ 利用率/ ./ Xu/ 等/ 人/ [/ 6/ ]/ 提出/ 了/ 一种/ 两层/ 控制系统/ ,/ 第/ 1/ 层/ 将/ 工作/ 负载/ 映射/ 到/ 虚拟机/ ,/ 第/ 2/ 层/ 再/ 将/ 虚拟机/ 映射/ 到/ 物理/ 机/ ./ Xu/ 等/ 人/ 同时/ 将/ 最小化/ 资源/ 浪费/ 率/ 、/ 最小化/ 能耗/ 、/ 最小化/ 散热/ 成本/ 作为/ 目标/ ,/ 将/ 问题/ 形式化/ 为/ 多/ 目标/ 优化/ ,/ 并/ 提出/ 了/ 一种/ 改进/ 的/ 遗传算法/ 求解/ 该/ 问题/ ./ Jayasinghe/ 等/ 人/ [/ 7/ ]/ 研究/ 了/ 虚拟机/ 部署/ 中/ 的/ 3/ 种/ 限制/ :/ (/ 1/ )/ CPU/ 、/ 内存/ 需求/ 限制/ ;/ (/ 2/ )/ 虚拟机/ 可用性/ 限制/ ;/ (/ 3/ )/ 虚拟机/ 通信/ 能力/ 限制/ ./ 然后/ 提出/ 了/ 一种/ 限制/ 感知/ (/ constraint/ -/ aware/ )/ 的/ 虚拟机/ 部署/ 问题/ ,/ 并/ 提出/ 了/ 一种/ 近似/ 度为/ 4/ 的/ 近似算法/ 求解/ 该/ 问题/ ./ Chen/ 等/ 人/ [/ 8/ ]/ 提出/ 了/ 一个/ 以/ 提高/ 云/ 计算/ 提供商/ 收益/ 为/ 目标/ 的/ 虚拟机/ 部署/ 和/ 重/ 配置/ 的/ 框架/ ./ Marzolla/ 等/ 人/ [/ 9/ ]/ 提出/ Page3/ 了/ 一种/ 完全/ 去/ 中心化/ 的/ 虚拟机/ 整合/ 算法/ V/ -/ MAN/ ,/ V/ -/ MAN/ 通过/ 一个/ 简单/ 的/ 对话/ 协议/ 在/ 服务器之间/ 交换/ 信息/ ,/ 根据/ 获取/ 到/ 的/ 信息/ 进行/ 以/ 最大化/ 资源/ 利用率/ 为/ 目标/ 的/ 虚拟机/ 整合/ ./ 面向/ SLA/ 的/ 虚拟机/ 调度/ 策略/ 根据/ 用户/ 的/ QoS/ 要求/ (/ 响应/ 时间/ 、/ 单位/ 时间/ 完成/ 的/ 计算/ 量/ 等/ )/ 与/ 虚拟机/ 的/ 计算能力/ (/ 包括/ CPU/ 、/ 内存/ 、/ I/ // O/ 速度/ 等/ )/ 进行/ 映射/ ,/ 在/ 满足/ 需求/ 的/ 条件/ 下/ ,/ 进行/ 最小/ 的/ 资源分配/ ,/ 再/ 将/ 分配/ 到/ 的/ 资源/ 与/ 物理/ 服务器进行/ 映射/ ./ Bobroff/ 等/ 人/ [/ 10/ ]/ 提出/ 了/ 一种/ 动态/ 的/ 虚拟机/ 整合/ 技术/ ,/ 首先/ 对/ 工作/ 负载/ 的/ 类型/ 进行/ 分类/ ,/ 对/ 最/ 受益/ 于/ 动态/ 迁移/ 的/ 负载/ 类型/ 进行/ 标记/ ;/ 然后/ 提出/ 了/ 一种/ MFR/ 算法/ ,/ 每隔/ 一段时间/ 迭代/ 进行/ ./ 算法/ 分为/ 三步/ :/ 首先/ 分析/ 历史/ 的/ 虚拟机/ 负载/ 数据/ ,/ 然后/ 对/ 未来/ 的/ 负载/ 作出/ 预测/ ,/ 最后/ 对/ 虚拟机/ 与/ 物理/ 机/ 进行/ 重新/ 映射/ ./ NguyenVan/ 等/ 人/ [/ 1/ ]/ 提出/ 了/ 一种/ SLA/ 感知/ 的/ 虚拟/ 资源管理/ 策略/ ,/ 该/ 策略/ 综合/ 了/ 高层/ SLA/ 的/ 需求/ 与/ 资源/ 部署/ 的/ 代价/ ,/ 由/ 管理人员/ 设定/ 两/ 部分/ 的/ 权重/ 参数/ ,/ 算法/ 支持/ 异构/ 的/ 应用/ 和/ 负载/ 类型/ ./ Breitgand/ 等/ 人/ [/ 11/ ]/ 则/ 将/ SLA/ 满足/ 程度/ 看成/ 参数/ ,/ 将/ 云/ 计算/ 提供商/ 的/ 收益/ 作为/ 目标/ ,/ 把/ 问题/ 形式化/ 为/ 组合/ 最优化/ 问题/ ./ 网络/ 感知/ 的/ 虚拟机/ 调度/ ,/ 即将/ 虚拟机/ 之间/ 的/ 网络通信/ 能力/ 作为/ 调度/ 的/ 参考/ 因素/ ,/ 以期/ 提高/ 虚拟机/ 之间/ 的/ 网络通信/ 带宽/ ,/ 降低/ 通信/ 时延/ ./ Alicherry/ 等/ 人/ [/ 12/ ]/ 提出/ 了/ 基于/ 网络/ 感知/ 的/ 虚拟机/ 部署/ 问题/ ,/ 即/ 部署/ 虚拟机/ 时/ ,/ 应/ 考虑/ 其/ 相互之间/ 的/ 网络通信/ 代价/ ,/ 试图/ 将/ 用户/ 申请/ 的/ 一组/ 虚拟机/ 部署/ 到/ 同一/ 机架/ 的/ 物理/ 机上/ 以/ 减少/ 其/ 通信/ 延迟/ 以及/ 整个/ 数据中心/ 的/ 通信/ 流量/ ./ Meng/ 等/ 人/ [/ 13/ ]/ 研究/ 了/ 部署/ 在/ 数据中心/ 中/ 任务/ 的/ 通信/ 流量/ 分布/ ,/ 进一步/ 提出/ 了/ 基于/ 通信/ 流量/ 的/ 虚拟机/ 部署/ 算法/ ,/ 算法/ 分为/ 两步/ ,/ 首先/ 对/ 虚拟机/ 按/ 流量/ 进行/ 聚类/ ,/ 同时/ 对/ 物理/ 机/ 进行/ 聚类/ ,/ 然后/ 将/ 聚类/ 后/ 的/ 虚拟/ 机组/ 映射/ 到/ 聚类/ 后/ 的/ 物理/ 机组/ 中/ ./ Jiang/ 等/ 人/ [/ 14/ ]/ 则/ 综合/ 考虑/ 了/ 虚拟机/ 之间/ 的/ 通信/ 模式/ 和/ 路由/ 策略/ ./ 由于/ 在/ BCube/ [/ 15/ ]/ 等/ 新型/ 网络结构/ 中/ ,/ 管理员/ 可以/ 手动/ 调整/ 路由/ ,/ 因此/ Jiang/ 等/ 人/ 在/ 路由/ 策略/ 可/ 自定义/ 的/ 条件/ 下/ ,/ 以/ 最小化/ 通信/ 代价/ 为/ 目标/ ,/ 进行/ 虚拟机/ 部署/ ./ Biran/ 等/ 人/ [/ 16/ ]/ 提出/ 了/ 最小/ 割/ 感知/ 的/ 虚拟机/ 调度/ ,/ 目标/ 是/ 最小化/ 最大/ 的/ 割/ 流量/ ./ 并/ 给出/ 了/ 两个/ 启发式/ 算法/ 求解/ 该/ 问题/ :/ 两/ 阶段/ 的/ 递归/ 分割/ 算法/ (/ 2PCCRS/ )/ 和/ 贪心/ 算法/ ./ Steiner/ 等/ 人/ [/ 17/ ]/ 则/ 研究/ 了/ 在/ 分布式/ 数据中心/ 中/ ,/ 网络/ 感知/ 的/ 虚拟机/ 部署/ 问题/ ./ 3/ 网络/ 对/ 虚拟/ 机组/ 性能/ 的/ 影响/ 无论是/ 部署/ Web/ 服务/ 、/ 执行/ Map/ -/ Reduce/ 等/ 分布式计算/ 任务/ 或是/ 执行/ 高性能/ 计算/ 任务/ ,/ 都/ 需要/ 数据中心/ 提供/ 多台/ 虚拟机/ 协同/ 为/ 用户/ 提供/ 服务/ ./ 在/ 这种/ 场景/ 中/ ,/ 用户/ 的/ 任务/ 就/ 会/ 涉及/ 到/ 虚拟机/ 之间/ 大量/ 的/ 网络通信/ ./ 因此/ ,/ 虚拟机/ 之间/ 的/ 网络通信/ 能力/ 成为/ 了/ 影响/ 虚拟机/ 群组/ 性能/ 的/ 重要/ 因素/ 之一/ ./ 3.1/ 数据中心/ 的/ 网络拓扑/ 数据中心/ 通常/ 由/ 上千/ 至上/ 万台/ 服务器/ 组成/ ,/ 这些/ 服务器/ 首先/ 连接/ 到/ 机架/ 交换机/ ,/ 机架/ 交换机/ 连接/ 到/ 聚集/ 层/ 的/ 群组/ 交换机/ ,/ 聚集/ 层/ 的/ 交换机/ 再/ 与/ 数据中心/ 核心/ 交换机/ 相连/ [/ 18/ ]/ ./ 这类/ 网络拓扑/ 结构/ 可/ 抽象/ 成图/ 1/ 所示/ ./ 在/ 图/ 1/ 的/ 这种/ 树形/ 结构/ 中/ ,/ 连接/ 在/ 同一/ 机架/ 交换机/ 下/ 的/ 服务器/ 拥有/ 最高/ 网络通信/ 带宽/ ;/ 当/ 服务器之间/ 的/ 网络通信/ 需要/ 经过/ 聚集/ 层交换机/ 时/ ,/ 带宽/ 一般/ 会/ 下降/ 至/ 机架/ 交换机/ 的/ 1/ // 4/ 至/ 1/ // 8/ [/ 18/ ]/ ;/ 当/ 服务器之间/ 的/ 通信/ 需要/ 经过/ 核心层/ 的/ 交换机/ 时/ ,/ 通信/ 带宽/ 将/ 进一步/ 下降/ ,/ 通信/ 的/ 时延/ 会/ 增加/ ./ 因此/ ,/ 在/ 这种/ 网络拓扑/ 的/ 环境/ 下/ ,/ 将/ 涉及/ 大量/ 网络通信/ 的/ 虚拟机/ 部署/ 在/ 通信/ 带宽/ 较大/ 、/ 通信/ 时延/ 较/ 小/ 的/ 物理/ 机上/ ,/ 就/ 显得/ 十分必要/ ./ 3.2/ 网络通信/ 对/ Web/ 服务/ 性能/ 的/ 影响/ 典型/ 的/ Web/ 服务/ 多/ 采用/ 3/ 层/ 架构/ ,/ 为了/ 保证/ 服务/ 的/ 性能/ ,/ Web/ 服务/ 的/ 运营者/ 通常/ 会/ 选择/ 将/ 这/ 3/ 层/ 分别/ 部署/ 在/ 若干个/ 计算机/ 节点/ 上/ ,/ 而/ 在/ 云/ 计算/ 场景/ 中/ ,/ 这些/ 服务/ 就/ 会/ 被/ 部署/ 在/ 若干/ 台/ 虚拟机/ 中/ ./ 这些/ 虚拟机/ 之间/ 会/ 涉及/ 大量/ 的/ 数据通信/ ,/ 而/ 虚拟机/ 内部/ 的/ 通信/ 的/ 延迟/ 则/ 会/ 最终/ 反映/ 到/ 用户/ 访问/ Web/ 服务/ 的/ 延迟/ 上/ ./ 为了/ 研究/ 虚拟机/ 内部/ 的/ 网络通信/ 对/ 最终用户/ 访问/ 网站/ 效果/ 的/ 影响/ ,/ 我们/ 选用/ 了/ RUBiS/ ①/ 作为/ 测试/ ①/ RUBiS/ :/ RiceUniversityBiddingSystem/ ;/ http/ :/ // // rubis/ ./ Page4/ 平台/ ./ RUBiS/ 是/ 一个/ 开源/ 的/ 竞价/ 拍卖/ 网站/ 项目/ ,/ 该/ 项目/ 包含/ 了/ 一个/ 小型/ 拍卖/ 网站/ 系统/ 以及/ 一组/ 标准/ 的/ 测试用例/ 生成/ 工具/ 和/ 性能/ 分析/ 工具/ ./ 我们/ 在/ 实验室/ 的/ 基础设施/ 云/ 平台/ (/ 平台/ 基于/ Xen/ 虚拟机/ 技术/ ,/ 由/ 5/ 个/ 计算/ 节点/ 和/ 1/ 个/ 存储/ 节点/ 构成/ )/ 上/ 部署/ 了/ 该/ 测试/ 平台/ ,/ 选用/ 的/ 虚拟机/ 均/ 为/ 2GB/ 内存/ ,/ 2/ 个/ 虚拟/ CPU/ ./ 我们/ 选择/ 将/ 虚拟机/ 部署/ 在/ 多种不同/ 网络/ 条件/ 下/ 进行/ 性能/ 测试/ (/ 由于/ 数据中心/ 的/ 网络拓扑/ 多为/ 树形/ 结构/ ,/ 因此/ 将/ 数据通信/ 经过/ 的/ 子树/ 层数/ 作为/ 分类/ )/ ,/ 测试/ 的/ 指标/ 为/ 用户/ 访问/ 的/ 平均/ 延迟/ ./ 测试/ 结果/ 如表/ 1/ 所示/ ./ 实验/ 结果表明/ 虚拟机/ 之间/ 通信/ 能力/ 将/ 对/ 部署/ 在/ 其/ 上/ 的/ Web/ 服务/ 产生/ 直接/ 影响/ ./ 当/ 虚拟机/ 之间/ 的/ 通信/ 需要/ 经过/ 较/ 多/ 的/ 路由/ 层数/ 时/ ,/ 虚拟机/ 群组/ 的/ 运行/ 效率/ 将/ 下降/ ,/ 最终/ 将/ 导致用户/ 访问/ 部署/ 在/ 虚拟机/ 上/ 的/ Web/ 服务/ 的/ 时延/ 增加/ ./ 因此/ ,/ 对于/ 此类/ 需要/ 多台/ 虚拟机/ 协同工作/ 的/ Web/ 服务/ ,/ 保证/ 其/ 使用/ 的/ 虚拟机/ 之间/ 的/ 通信/ 能力/ 就/ 显得/ 十分必要/ ./ 3.3/ 网络通信/ 对/ 分布式计算/ 任务/ 性能/ 的/ 影响/ 短时间/ 租用/ 数据中心/ 的/ 计算资源/ 去/ 完成/ 一个/ 分布式计算/ 任务/ 也/ 是/ 云/ 计算/ 中/ 主要/ 的/ 应用/ 场景/ 之一/ ./ 在/ 这种/ 场景/ 中/ ,/ 任务/ 被/ 分割/ 为/ 多个/ 子/ 任务/ 由/ 多台/ 虚拟机/ 进行/ 协同/ 计算/ ,/ 计算/ 过程/ 中/ 会/ 产生/ 大量/ 的/ 数据通信/ ./ 因此/ ,/ 虚拟机/ 数据通信/ 的/ 能力/ 成为/ 影响/ 任务/ 完成/ 时间/ 的/ 重要/ 因素/ 之一/ ./ 我们/ 选用/ PUMA/ ①/ 作为/ 标准/ 测试工具/ ,/ 部署/ 在/ 4/ 台/ 虚拟机/ 上/ ,/ 每台/ 虚拟机/ 均/ 为/ 2GB/ 内存/ ,/ 2/ 个/ 虚拟/ CPU/ ./ 其中/ 一个/ 为/ Master/ 节点/ ,/ 另外/ 3/ 个/ 为/ Slaver/ 节点/ ./ 我们/ 将/ 虚拟机/ 部署/ 在/ 多种/ 网络/ 条件/ 下/ 进行/ 测试/ ,/ 测试/ 结果/ 如表/ 2/ ./ 表/ 2/ 虚拟机/ 通信/ 对/ 分布式计算/ 任务/ 的/ 性能/ 影响/ 实验/ 结果表明/ 虚拟机/ 之间/ 的/ 网络通信/ 能力/ 会/ 对/ 涉及/ 到/ 大量/ 数据交换/ 的/ 分布式/ 任务/ 产生/ 明显/ 的/ 影响/ ./ 当/ 虚拟机/ 之间/ 通信/ 需要/ 经过/ 的/ 路由/ 层数/ 越/ 小时/ ,/ 其/ 可用/ 带宽/ 就/ 越/ 大/ ,/ 通信/ 时延/ 就/ 越/ 小/ ,/ 任务/ 执行/ 的/ 效率/ 就/ 越/ 高/ (/ 表/ 2/ 中/ ,/ 出现/ 路由/ 层数/ 为/ 0/ 时/ 任务/ 完成/ 时间/ 比/ 层数/ 为/ 1/ 时/ 任务/ 完成/ 时间/ 长是/ 由于/ 将/ 全部/ 虚拟机/ 部署/ 在/ 了/ 同一/ 物理/ 机上/ ,/ 造成/ 磁盘/ I/ // O/ 竞争/ ,/ 使得/ 任务/ 完成/ 时间/ 延长/ )/ ./ 4/ 动态/ 迁移/ 对/ 服务/ 性能/ 的/ 影响/ 当/ 一个/ 用户/ 向/ 数据中心/ 申请/ 一组/ 虚拟机/ 用于/ 部署/ 其/ 需要/ 的/ 应用/ 时/ ,/ 很/ 可能/ 出现/ 由于/ 当时/ 硬件/ 条件/ 的/ 限制/ ,/ 这组/ 虚拟机/ 被/ 分配/ 到/ 不同/ 机架/ 甚至/ 不同/ 群组/ 之中/ 的/ 物理/ 服务器/ 上/ ./ 而/ 如果/ 这个/ 用户/ 所/ 部署/ 的/ 应用/ 需要/ 虚拟机/ 之间/ 进行/ 大量/ 数据通信/ ,/ 这种/ 跨/ 机架/ 、/ 跨/ 群组/ 之间/ 的/ 部署/ 方式/ 不仅/ 会/ 造成/ 用户/ 所/ 部署/ 的/ 应用/ 的/ 性能/ 下降/ ,/ 一旦/ 发生/ 网络/ 拥塞/ ,/ 还/ 将/ 影响/ 整个/ 数据中心/ 的/ 网络通信/ ./ 因此/ ,/ 在/ 这种/ 情况/ 下/ 就/ 很/ 有/ 必要/ 在/ 不/ 影响/ 虚拟机/ 正常/ 使用/ 的/ 同时/ 将/ 其/ 迁移/ 到/ 合适/ 的/ 位置/ ./ 动态/ 迁移/ 技术/ 能够/ 在/ 不/ 影响/ 虚拟机/ 正常/ 使用/ 的/ 前提/ 下/ ,/ 将/ 其/ 移动/ 到/ 目标/ 位置/ ./ 然而/ ,/ 在/ 物理/ 服务器/ CPU/ 处于/ 高/ 负载/ 状态/ ,/ 动态/ 迁移/ 会/ 占用/ 待/ 迁移/ 虚拟机/ 本身/ 的/ CPU/ 资源/ ,/ 该/ 虚拟机/ 上/ 运行/ 服务/ 的/ 性能/ 就/ 会/ 受到/ 影响/ ./ 此外/ ,/ 整个/ 迁移/ 过程/ 中/ ,/ 虚拟/ 机会/ 有/ 短暂/ 的/ 停机/ (/ 通常/ 在/ 几百/ 毫秒/ 至/ 一千/ 毫秒/ )/ [/ 11/ ,/ 19/ -/ 20/ ]/ ,/ 这个/ 短暂/ 停机/ 时间/ 可能/ 会/ 造成/ 分布式/ 的/ 任务/ 处理/ 失败/ ,/ 或/ Web/ 服务/ 中/ 数据包/ 的/ 丢失/ ./ 为此/ ,/ 我们/ 进行/ 了/ 详细/ 的/ 测试/ ./ 4.1/ 物理/ 机/ CPU/ 使用率/ 对/ 动态/ 迁移/ 的/ 影响/ 我们/ 在/ Web/ 服务/ 和/ 分布式计算/ 这/ 两种/ 场景/ 中/ ,/ 选用/ 和/ 第/ 3/ 节中/ 相同/ 的/ 测试/ 平台/ RUBiS/ 和/ PUMA/ ,/ 在/ 不同/ 的/ 物理/ 机/ CPU/ 使用率/ 时/ 进行/ 动态/ 迁移/ 测试/ ,/ 测试/ 用/ 的/ 物理/ 机有/ 24/ 个/ 核心/ ,/ 每个/ 核心/ 均/ 为/ 2.4/ GHz/ ,/ 虚拟机/ 为/ 2GB/ 内存/ ,/ 2/ 个/ 虚拟/ CPU/ ./ 测试/ 结果/ 如图/ 2/ 所示/ ./ 从图/ 2/ 中/ 可以/ 看出/ ,/ 在/ 源/ 物理/ 机/ CPU/ 利用率/ 小于/ 96/ %/ 时/ ,/ 迁移/ 发生/ 时/ 对/ 部署/ 在/ 虚拟机/ 上/ 的/ 应用/ 影响/ 很小/ ,/ 几乎/ 可以/ 忽略不计/ ,/ 只有/ 当源/ 物理/ 机/ 的/ CPU/ 利用率/ 超过/ 99/ %/ 时/ ,/ 才/ 会/ 对/ 部署/ 在/ 虚拟机/ 上/ 的/ 应用/ 产生/ 明显/ 影响/ ./ 因此/ ,/ 为了/ 不/ 影响/ 虚拟机/ 的/ 性能/ ,/ 我们/ 只/ 选择/ 在/ 物理/ 机/ CPU/ 利用率/ 不/ 大于/ 95/ %/ (/ 剩余/ 物理/ 核心/ 数/ 大于/ 1/ 个/ )/ 时/ 进行/ 动态/ 迁移/ ./ ①/ PUMA/ ./ http/ :/ // // web/ ./ ics/ ./ purdue/ ./ edu/ // fahmad/ // bench/ -/ Page5/ 图/ 2/ 物理/ 机/ CPU/ 利用率/ 对/ 迁移/ 时/ 服务/ 性能/ 的/ 影响/ 4.2/ 网络/ 环境/ 对/ 动态/ 迁移/ 的/ 影响/ 虚拟机/ 的/ 动态/ 迁移/ 需要/ 将/ 虚拟机/ 的/ 内存/ 从源/ 宿主机/ 复制到/ 目的/ 宿主机/ ,/ 在/ 这个/ 过程/ 中/ 会/ 涉及/ 到/ 大量/ 的/ 数据传输/ ./ 因此/ ,/ 源/ 宿主机/ 和/ 目的/ 宿主机/ 之间/ 的/ 网络通信/ 带宽/ 直接/ 影响/ 了/ 动态/ 迁移/ 的/ 完成/ 时间/ ./ 表/ 3/ 显示/ 了/ 在/ 不同/ 带宽/ 下/ ,/ 迁移/ 完成/ 的/ 时间/ 和/ 对/ 部署/ 在/ 虚拟机/ 上/ 的/ 任务/ 的/ 影响/ ./ 带宽/ // (/ Mb/ // s/ )/ RUBiS/ // msPUMA/ // s/ 迁移/ 耗时/ // s/ 未/ 迁移/ 1001000/ 从表/ 3/ 的/ 结果/ 中/ 可以/ 看出/ ,/ 尽管/ 在/ 动态/ 迁移/ 进行/ 的/ 过程/ 中/ ,/ 虚拟机/ 上/ 所/ 运行/ 的/ 服务/ 性能/ 有/ 略微/ 下降/ ,/ 但/ 网络带宽/ 只/ 影响/ 了/ 迁移/ 完成/ 所/ 需要/ 的/ 时间/ ,/ 带宽/ 的/ 差异/ 并/ 没有/ 造成/ 部署/ 在/ 虚拟机/ 上/ 的/ 任务/ 在/ 迁移/ 时/ 性能/ 的/ 差异/ ./ 5/ 基于/ 网络/ 感知/ 的/ 虚拟机/ 再/ 调度/ 在/ 第/ 4/ 节中/ ,/ 我们/ 详细/ 讨论/ 了/ 各种因素/ 对/ 动态/ 迁移/ 过程/ 中/ 部署/ 在/ 虚拟机/ 上/ 的/ 服务/ 性能/ 的/ 影响/ ./ 第/ 3/ 节/ 的/ 结果表明/ 物理/ 机/ CPU/ 的/ 利用率/ 是/ 影响/ 动态/ 迁移/ 过程/ 中/ 部署/ 在/ 虚拟机/ 上/ 的/ 服务/ 性能/ 的/ 主要/ 因素/ ,/ 只要/ 选择/ 在/ 合适/ 的/ 时机/ ,/ 例如/ 当/ 服务器/ 至少/ 剩余/ 1/ 个/ 空闲/ 物理/ CPU/ 核心/ 时/ ,/ 进行/ 动态/ 迁移/ ,/ 就/ 可以/ 保证/ 虚拟机/ 运行/ 的/ 服务/ 不/ 受/ 明显/ 影响/ ./ 此外/ ,/ 虚拟机/ 动态/ 迁移/ 过程/ 中/ 的/ 对/ 交换机/ 带宽/ 的/ 消耗/ 是/ 一个/ 重要/ 的/ 迁移/ 代价/ ./ 为了/ 防止/ 动态/ 迁移/ 过程/ 中/ 大量/ 的/ 数据通信/ 造成/ 网络/ 拥塞/ ,/ 影响/ 正常/ 的/ 虚拟机/ 之间/ 的/ 网络通信/ ,/ 因此/ ,/ 调度/ 算法/ 应当/ 保证/ 在/ 不/ 超过/ 交换机/ 最大/ 交换/ 容量/ 的/ 条件/ 下/ 进行/ 迁移/ ./ 5.1/ 虚拟机/ 调度/ 假定/ 数据中心/ 共有/ M/ 台/ 物理/ 机和/ K/ 个/ 用户/ ./ 我们/ 用/ pi/ 表示/ 第/ i/ 台/ 物理/ 机/ ,/ 每台/ 物理/ 机/ 的/ 物理/ 资源/ 用/ 向量/ 犎/ i/ 表示/ ./ 如果/ 物理/ 机/ pi/ 正在/ 运行/ ,/ 则/ 记/ S/ (/ i/ )/ =/ 1/ ,/ 否则/ S/ (/ i/ )/ =/ 0/ ./ 犔/ =/ (/ 0/ ,/ 1/ ,/ 1/ ,/ …/ ,/ 0/ )/ 是/ 数据中心/ 中/ 所有/ 路由器/ 或/ 交换机/ 按/ 某/ 一序列/ 组成/ 的/ 一维/ 向量/ ,/ 犔/ p/ =/ 1/ 表示/ 数据通信/ 会/ 经过/ 交换机/ p/ ,/ 犔/ p/ =/ 0/ 表示/ 数据通信/ 不会/ 经过/ 交换机/ p/ ./ 犔/ (/ i/ ,/ j/ )/ 是/ 物理/ 机/ pi/ 和/ pj/ 之间/ 的/ 路由/ 向量/ ,/ 显然/ ,/ 犔/ (/ i/ ,/ i/ )/ =/ (/ 0/ ,/ 0/ ,/ …/ ,/ 0/ )/ ./ lij/ 是/ 物理/ 机/ pi/ 和/ pj/ 之间/ 的/ 数据通信/ 经过/ 的/ 路由/ 层数/ (/ 在/ 树形/ 网络拓扑/ 中/ )/ ,/ 同时/ ,/ 我们/ 定义/ lii/ =/ 0/ ./ 犙/ 是/ 犔/ 对应/ 的/ 交换机/ 的/ 最大/ 交换/ 容量/ 向量/ ./ 对于/ 用户/ uk/ ,/ 他/ 可以/ 向/ 数据中心/ 申请/ 一组/ 虚拟机/ Gk/ ,/ wk/ 是/ 这个/ 虚拟/ 机组/ 中/ 虚拟机/ 的/ 数量/ ./ Gk/ 中/ 的/ 每台/ 虚拟机/ vki/ 各自/ 会/ 对/ CPU/ 和/ 内存/ 有/ 明确/ 的/ 需求/ ,/ 这里/ 用/ 向量/ 犚/ k/ 被/ 扩展/ 为/ 包括/ 了/ I/ // O/ 操作/ 、/ 网络带宽/ 等/ 其他/ 资源/ 的/ 扩展/ 向量/ ./ 犜/ k/ 是/ Gk/ 中/ 虚拟机/ 之间/ 通信量/ 的/ 矩阵/ ,/ 其/ 大小/ 为/ wk/ ×/ wk/ ,/ 矩阵/ 中/ 犜/ k/ 的/ 每一项/ tkij/ 是/ 虚拟机/ vki/ 和/ 虚拟机/ vk/ 可以/ 由/ 用户/ 给出/ ,/ 或者/ 由/ 数据中心/ 管理者/ 通过/ 监控/ 虚拟机/ 通信/ 来/ 实际/ 测量/ 得到/ ./ 我们/ 用/ Zk/ 表示/ 虚拟机/ vki/ 被/ 放置/ 在/ 了/ 物理/ 服务器/ pm/ 上/ ,/ 否则/ ,/ i/ (/ m/ )/ =/ 0/ ./ 因此/ ,/ 一个/ 可行/ 的/ 虚拟机/ 部署/ 方式/ 可/ 被/ Zk/ 表示/ 为/ / {/ =/ Zki/ (/ m/ )/ |/ Zkk/ =/ 1/ ∑/ Kw/ ∑/ K/ 其中/ ,/ 等式/ (/ 1/ )/ 保证/ 了/ 每个/ 虚拟机/ vki/ 只/ 被/ 部署/ 在/ 一台/ 物理/ 机上/ ,/ 不等式/ (/ 2/ )/ 保证/ 了/ 一台/ 物理/ 机上/ 的/ 所有/ 虚拟机/ 需要/ 的/ 物理/ 资源/ 总和/ 不/ 超过/ 该/ 物理/ 机/ 拥有/ 的/ 资源/ 总量/ ./ Gkvki/ 和/ 虚拟机/ vkij/ (/ Z/ )/ =/ ∑/ MGk/ 而/ 虚拟机/ vki/ 和/ 虚拟机/ vk/ 表示/ 为/ 设在/ 时间/ t0/ ,/ 虚拟机/ 的/ 部署/ 方式/ 表示/ 为/ {/ Xki/ (/ m/ )/ }/ ∈/ / ;/ 在/ 完成/ 一次/ 虚拟机/ 的/ 再/ 调度/ 后/ ,/ 新/ 5.2/ 虚拟机/ 调度/ 的/ 代价/ 与/ 收益/ 且/ {/ Xk/ 的/ 虚拟机/ 部署/ 方式/ 记/ 为/ {/ Yk/ 如果/ 虚拟机/ vki/ 从/ 物理/ 机/ pm/ 被/ 迁移/ 到/ 了/ 物理/ 机/ pn/ 上/ ,/ 则/ 有/ XkPage6/ 的/ 主要/ 代价/ 取决于/ 虚拟机/ 活动/ 内存/ 的/ 大小/ ,/ 因此/ 我们/ 定义/ 迁移/ 的/ 代价/ 函数/ 为/ Cost/ (/ vki/ )/ =/ ∑/ Mm/ =/ 1/ ∑/ Mn/ =/ 1/ 其中/ Mk/ 个/ 用户/ k/ ,/ 它/ 拥有/ 的/ 所有/ 虚拟机/ 的/ 迁移/ 代价/ 和/ 为/ 对于/ 整个/ 数据中心/ 而言/ ,/ 所有/ 用户/ 的/ 虚拟机/ 迁移/ 造成/ 的/ 总/ 的/ 通信/ 代价/ 为/ 显然/ ,/ Cost/ (/ DC/ )/ 是/ 一个/ 一维/ 的/ 向量/ ,/ 向量/ 中/ 的/ 每/ 一列/ 代表/ 了/ 动态/ 迁移/ 对/ 某个/ 路由器/ 或/ 交换机/ 造成/ 的/ 通信/ 总量/ ./ 而/ 在/ Δ/ t/ 时间/ 内/ 用户/ uk/ 所有/ 虚拟机/ 的/ 经过/ 各个/ 交换机/ 的/ 通信/ 总量/ 犇/ 可/ 表示/ 为/ 因此/ ,/ 整个/ 数据中心/ 在/ Δ/ t/ 内/ ,/ 虚拟机/ 部署/ 方式/ 为/ {/ Xki/ (/ m/ )/ }/ 的/ 条件/ 下/ ,/ 所有/ 虚拟机/ 的/ 经过/ 各个/ 交换机/ 或/ 路由器/ 通信/ 总量/ 可/ 表示/ 为/ 为了/ 保证/ 动态/ 迁移/ 的/ 过程/ 中/ ,/ 产生/ 的/ 数据通信/ 不会/ 造成/ 网络/ 拥塞/ ,/ 定义/ 如下/ 限制/ 条件/ :/ 其中/ 系数/ α/ 是/ 自定义/ 的/ 调节/ 因子/ ,/ 由于/ 犇/ 是/ 根据/ 历史数据/ 得出/ 或/ 直接/ 由/ 用户/ 给出/ 的/ ,/ 并/ 不能/ 完全/ 刻画/ 当前/ 的/ 真实情况/ ,/ 因此/ 为了/ 提高/ 容错性/ ,/ 选取/ α/ ∈/ [/ 1.5/ ,/ 2/ ]/ ,/ 调度/ 者/ 也/ 可/ 根据/ 实际/ 的/ 预测/ 模型/ 以及/ 数据/ 的/ 波动/ 程度/ 调节/ α/ ./ 第/ 3/ 节/ 的/ 实验/ 结果表明/ 一个/ 任务/ 所/ 需要/ 的/ 虚拟机/ 所处/ 的/ 物理/ 机/ 的/ 位置/ ,/ 会/ 影响/ 这些/ 虚拟机/ 之间/ 网络通信/ 的/ 代价/ ,/ 从而/ 最终/ 影响/ 部署/ 在/ 虚拟机/ 上/ 的/ 任务/ 的/ 执行/ 效率/ ./ 因此/ ,/ 为了/ 刻画/ 迁移/ 为/ 用户/ 带来/ 的/ 收益/ ,/ 我们/ 定义/ 了/ 一个/ 由/ 虚拟机/ 之间/ 网络通信/ 代价/ 决定/ 的/ 收益/ 函数/ ,/ 其/ 定义/ 为/ 其中/ ,/ Y/ 为/ 虚拟机/ 再/ 调度/ 后/ 的/ 虚拟机/ 部署/ 方式/ ,/ i/ (/ m/ )/ }/ ∈/ / ,/ B/ (/ Jk/ {/ Yk/ 层数/ 的/ 函数/ ./ 根据/ 思科/ 的/ 数据中心/ 网络/ 设计/ 指导/ ,/ 一个/ 典型/ 的/ 数据中心/ 的/ 树形/ 网络拓扑/ 中/ ①/ ,/ 端到/ 端的/ 通信/ 带宽/ 每/ 经过/ 一层/ 就/ 下降/ 至/ 原来/ 的/ 1/ // 4/ 至/ 1/ // 8/ ./ 因此/ ,/ 为了/ 简化/ 计算/ ,/ 我们/ 定义/ B/ (/ x/ )/ =/ 5x/ ./ 5.3/ 网络/ 感知/ 的/ 虚拟机/ 再/ 调度/ 问题/ 由/ 5.1/ 节及/ 5.2/ 节中/ 的/ 定义/ 可知/ ,/ {/ Xk/ 一/ 时刻/ 虚拟机/ 在/ 数据中心/ 中/ 的/ 部署/ 方式/ ,/ 而/ {/ Yk/ 为/ 我们/ 进行/ 再/ 调度/ 后/ 的/ 虚拟机/ 部署/ 方式/ ./ 在/ 再/ 调度/ 的/ 过程/ 中/ ,/ 必然/ 涉及/ 到/ 虚拟机/ 的/ 迁移/ ,/ 也/ 就/ 会/ 带来/ 数据通信/ 代价/ ,/ 我们/ 将/ 这个/ 代价/ 用/ Cost/ (/ DC/ )/ 来/ 表示/ ,/ 而/ Benefit/ (/ Gk/ )/ 则/ 是/ 再/ 调度/ 后/ 的/ 虚拟机/ 之间/ 的/ 通信/ 收益/ ./ 在/ 定义/ 了/ 收益/ 和/ 代价/ 之后/ ,/ 我们/ 将/ 问题/ 定义/ 为/ 在/ 满足/ 迁移/ 代价/ 不/ 超过/ 数据中心/ 交换机/ 容量/ 的/ 限制/ 下/ ,/ 寻找/ 一个/ 可行/ 的/ 虚拟机/ 部署/ 策略/ ,/ 使得/ 收益值/ 最大/ ./ 因此/ ,/ 问题/ 可/ 形式化/ 为/ Max/ ∑/ Ks/ ./ t/ ./ S/ (/ m/ )/ ∈/ {/ 0/ ,/ 1/ }/ ,/ / m/ / M/ 上述/ 优化/ 问题/ 的/ 目标/ 即/ 尽可能/ 地/ 在/ 不/ 影响/ 部署/ 在/ 虚拟机/ 的/ 服务/ 的/ 性能/ 以及/ 不/ 造成/ 数据中心/ 网络/ 拥塞/ 的/ 条件/ 下/ ,/ 通过/ 动态/ 迁移/ 来/ 最大化/ 虚拟机/ 之间/ 的/ 网络通信/ 收益/ ./ 考虑/ 到/ 全局/ 优化/ 有/ 可能/ 导致/ 局部/ 出现/ 恶化/ ,/ 即/ 可能/ 出现/ 牺牲/ 部分/ 用户/ 的/ 利益/ 来/ 达到/ 全局/ 最优/ ./ 因此/ ,/ 在/ 真实/ 的/ 数据中心/ 应用/ 场景/ 中/ ,/ 必须/ 保障/ 我们/ 的/ 算法/ 不会/ 牺牲/ 个别/ 用户/ 的/ 利益/ ,/ 因此/ ,/ 我们/ 对原/ 优化/ 加入/ 了/ 额外/ 的/ 限制/ 条件/ :/ ∑/ wki/ =/ 1/ ∑/ wk/ 上式/ 的/ 限制/ 保证/ 了/ 经过/ 再/ 调度/ 之后/ ,/ 每个/ 用户/ 都/ 会/ 获得/ 收益/ ./ 6/ 网络/ 感知/ 的/ 虚拟机/ 再/ 调度/ 算法/ 由于/ 我们/ 定义/ 的/ 收益/ 函数/ 是/ 关于/ 部署/ 策略/ Y/ 的/ 非线性/ 函数/ ,/ 因此/ 整个/ 优化/ 问题/ 是/ 非线性/ 的/ 整数/ 规划/ ,/ 而/ Murty/ 等/ 人/ [/ 21/ ]/ 证明/ 了/ 非线性/ 规划/ 问题/ 是/ NP/ 难/ 问题/ ,/ 故/ 作为/ 子/ 问题/ 的/ 非线性/ 整数/ 规划/ 问题/ 也/ 是/ NP/ 难/ 问题/ ./ 为了/ 在/ 可/ 接受/ 的/ 时间/ 范围/ 内/ ,/ 得到/ 较优/ 的/ 可行/ 解/ ,/ 本文/ 基于/ 贪心/ 策略/ 设计/ 了/ 一个/ 启发式/ 算法/ 以及/ 一个/ 基于/ 多次/ 迭代/ 的/ 随机/ 算法/ 与/ 贪心/ 算/ ①/ CiscoDataCenterInfrastructure2/ ./ 5DesignGuide/ ./ http/ :/ // // Page7/ 法/ 进行/ 对比/ ./ 基于/ 贪心/ 策略/ 的/ 再/ 调度/ 算法/ 优先/ 调度/ 收益值/ 提升/ 空间/ 最大/ 的/ 任务/ ,/ 效果/ 较/ 好/ ,/ 效率/ 也/ 较/ 高/ ,/ 而/ 基于/ 多次/ 迭代/ 的/ 随机/ 再/ 调度/ 算法/ 则/ 随机/ 选定/ 任务/ 的/ 调度/ 顺序/ ,/ 然后/ 多次/ 迭代/ 选出/ 收益值/ 最大/ 的/ 一次/ 作为/ 最终/ 调度/ ,/ 算法/ 执行/ 效率/ 随着/ 迭代/ 次数/ 增加/ 而/ 降低/ ./ 算法/ 中/ 会/ 使用/ 到/ 的/ 符号/ 如表/ 4/ 所示/ ./ 符号/ MKvki/ {/ 犎/ i/ }/ 犔/ 犙/ JkGk/ {/ 犚/ k/ {/ 犜/ k/ }/ {/ Xki/ (/ m/ )/ }/ i/ (/ m/ )/ }/ {/ Yk/ α/ β/ 6.1/ 基于/ 贪心/ 策略/ 的/ 再/ 调度/ 算法/ 贪心/ 再/ 调度/ 算法/ 首先/ 计算/ 每个/ 用户/ 所/ 需要/ 的/ 任务/ Original/ 值/ 、/ Best/ 值/ 以及/ Priority/ 值/ ,/ 它们/ 的/ 定义/ 如下/ :/ 即/ 任务/ 在/ 当前/ 部署/ 方式/ 下/ 的/ Benefit/ 值/ ;/ 即该/ 任务/ 能/ 达到/ 的/ 最大/ Benefit/ 值/ ;/ Priority/ (/ Gk/ )/ =/ Best/ (/ Gk/ )/ // Original/ (/ Gk/ )/ (/ 15/ )/ Priority/ 的/ 值/ 反映/ 了/ 任务/ 当前/ 的/ 部署/ 状态/ 与/ 最优/ 状态/ 之间/ 的/ 距离/ ,/ Priority/ 的/ 值/ 越/ 高/ 说明/ 了/ 任务/ 越/ 应该/ 优先/ 得到/ 再/ 调度/ ./ 在/ 计算/ 出/ Priority/ 值后/ ,/ 将/ 所有/ 用户/ 或/ 任务/ 按/ Priority/ 值/ 降序/ 排序/ ,/ 然后/ 依次/ 取出/ 队首/ 元素/ ,/ 尝试/ 对/ 该组/ 虚拟机/ 进行/ 再/ 调度/ ./ 算法/ 1/ 首先/ 调用/ 过程/ 1/ ,/ 尝试/ 通过/ 尽可能少/ 的/ 移动/ 将/ 该组/ 虚拟机/ 移动/ 到/ 同一/ 机架/ 的/ 物理/ 机上/ ./ 如果/ 过程/ 1/ 尝试/ 失败/ ,/ 则/ 调用/ 过程/ 2/ ,/ 过程/ 2/ 优先/ 移动/ 通信量/ 大/ 的/ 且/ 不/ 在/ 一个/ 机架/ 上/ 的/ 虚拟机/ ./ 过程/ 2/ 结束/ 后/ ,/ 检查/ 该/ 任务/ 的/ 虚拟机/ 是否/ 都/ 处于/ 同一/ 群组/ 中/ ,/ 如果/ 不是/ 的话/ ,/ 尝试/ 移动/ 虚拟机/ 至/ 同一/ 群组/ ./ 算法/ 1/ ./ 基于/ 贪心/ 策略/ 的/ 再/ 调度/ 算法/ ./ 输入/ :/ M/ ,/ K/ ,/ {/ 犎/ i/ }/ ,/ 犔/ ,/ 犙/ ,/ {/ Gk/ }/ ,/ {/ 犚/ k/ 输出/ :/ 新/ 的/ 虚拟机/ 部署/ 方式/ {/ Yk1/ ./ 计算/ 每个/ 用户/ // 任务/ 的/ 优先/ 值/ (/ Priority/ )/ ,/ 并/ 按/ 降序/ 2/ ./ WHILE/ (/ P/ _/ Queue/ 非空/ )/ 3/ ./ 取出/ P/ _/ Queue/ 的/ 队首/ ,/ 存入/ Gk4/ ./ 尝试/ ,/ 调用/ 过程/ 1/ ,/ 将/ Gk/ 移动/ 到/ 同一/ 机架/ ,/ 若/ 成功/ 5/ ./ 则/ 进入/ 下/ 一次/ 循环/ 6/ ./ 否则/ ,/ 调用/ 过程/ 2/ ,/ 尝试/ 贪心/ 移动/ Gk7/ ./ 检查/ 是否/ 有/ 跨/ 群组/ 的/ 虚拟机/ ,/ 如果/ 有/ 8/ ./ 则/ 调用/ 过程/ 3/ ,/ 将/ Gk/ 移动/ 到/ 同一/ 群组/ 下/ 9/ ./ ENDWHILE10/ ./ 输出/ 新/ 的/ 虚拟机/ 部署/ 方式/ {/ Yk/ 过程/ 1/ 是/ 面向/ 机架/ 的/ 虚拟机/ 整体/ 聚集/ ,/ 该/ 过程/ 尝试/ 将/ Gk/ 移动/ 到/ 同一/ 机架/ ./ 首先/ 对/ 该组/ 虚拟机/ 按/ 其/ 所在/ 机架/ 进行/ 分组/ ,/ 统计/ 每个/ 机架/ 上/ 该组/ 虚拟机/ 的/ 个数/ ,/ 按/ 机架/ 上/ 该组/ 虚拟机/ 的/ 个数/ 进行/ 升序/ 排序/ ./ 然后/ 尝试/ 在/ 不/ 违反/ 限制/ 条件/ 的/ 前提/ 下/ ,/ 将/ 除/ 最后/ 一个/ 机架/ 外/ 的/ 其他/ 机架/ 的/ 虚拟机/ 都/ 移动/ 到/ 最后/ 一个/ 机架/ 上/ ,/ 若/ 尝试/ 成功/ ,/ 则/ 返回/ 成功/ 标志/ ,/ 如果/ 尝试/ 失败/ ,/ 则/ 撤销/ 此前/ 操作/ ,/ 返回/ 失败/ 标志/ ./ 过程/ 1/ 的/ 描述/ 如下/ ./ 过程/ 1/ ./ 面向/ 机架/ 的/ 虚拟机/ 整体/ 聚集/ ./ 1/ ./ 对/ 该组/ 虚拟机/ 按/ 其/ 所在/ 机架/ 进行/ 分类/ ,/ 统计/ 每个/ 机/ 2/ ./ 将/ 除/ R/ 以外/ 的/ 其他/ 机架/ 上/ 的/ 虚拟机/ 存入/ 队列/ Q3/ ./ 初始化/ 操作/ 栈/ OP/ _/ Stack4/ ./ BOOLSuccess/ =/ TRUE5/ ./ WHILE/ (/ Q/ 非空/ )/ 6/ ./ 取出/ Q/ 的/ 队首/ 元素/ ,/ 存入/ v7/ ./ 如果/ R/ 有/ 空间/ 容纳/ v/ 且/ 迁移/ v/ 到/ R/ 不/ 违反/ 限制/ 条件/ 8/ ./ 则/ 将/ v/ 迁移/ 至/ R9/ ./ Success/ =/ SuccessTRUE10/ ./ 将/ 进行/ 的/ 迁移/ 操作/ 压入/ 栈/ OP/ _/ Stack11/ ./ 否则/ Success/ =/ SuccessFALSE12/ ./ ENDWHILE13/ ./ 如果/ Success/ 不/ 等于/ TRUE14/ ./ 则/ 遍历/ 栈/ OP/ _/ Stack/ ,/ 将/ 进行/ 的/ 操作/ 撤销/ 15/ ./ 返回/ 尝试/ 失败/ 标志/ 16/ ./ 否则/ 返回/ 尝试/ 成功/ 标志/ 过程/ 2/ 为/ 面向/ 机架/ 的/ 虚拟机/ 贪心/ 聚集/ ,/ 尝试/ 贪心/ 移动/ Gk/ ./ 首先/ 对/ 虚拟机/ 按/ 所在/ 的/ 机架/ 分组/ ,/ 然后/ 计算/ 每个/ 虚拟机/ 分别/ 与/ 其他/ 机架/ 上/ 虚拟机/ 通信/ 的/ 总和/ 与/ 本/ 机架/ 上/ 其他/ 虚拟机/ 通信/ 总和/ 的/ 差/ delta/ ,/ 对/ delta/ 按/ 降序/ 排序/ ;/ 取出/ 队首/ 元素/ ,/ 如果/ 值/ 小于/ 0/ ,/ 则/ 结束/ 循环/ ,/ 否则/ 尝试/ 迁移/ 队首/ 的/ 虚拟机/ ,/ 如果/ 失败/ ,/ 则/ 尝试/ 迁移/ 下/ 一个/ ,/ 若/ 全部/ 尝试/ 失败/ ,/ 或/ 出现/ 值/ 0/ 的/ 情况/ 则/ 停止/ 循环/ ;/ 若/ 尝试/ 成功/ ,/ 则/ 重复/ 过程/ 2/ ,/ 直至/ Page8/ 出现/ 遍历/ 完整/ 个/ 队列/ 而/ 没有/ 可/ 迁移/ 的/ 虚拟机/ ./ 过程/ 2/ 的/ 具体/ 描述/ 如下/ ./ 过程/ 2/ ./ 面向/ 机架/ 的/ 虚拟机/ 贪心/ 聚集/ ./ 1/ ./ 结束/ 标记/ flag/ 初始化/ 为/ FALSE2/ ./ WHILE/ (/ flag/ 等于/ FALSE/ )/ 3/ ./ 对/ 该组/ 虚拟机/ 按/ 其/ 所在/ 机架/ 进行/ 分组/ 至/ G04/ ./ 计算/ Gk/ 中/ 所有/ 虚拟机/ 的/ delta/ 值/ ,/ 并/ 按/ 降序/ 排列/ ,/ 5/ ./ WHILE/ (/ Q/ 非空/ )/ 6/ ./ 取出/ Q/ 的/ 队首/ 元素/ 存入/ vm7/ ./ 求出/ 和/ vm/ 通信/ 总量/ 最大/ 的/ 机架/ R8/ ./ 如果/ 移动/ vm/ 至/ R/ 不/ 违反/ 限制/ 条件/ 9/ ./ 则/ 移动/ vm/ 至/ R10/ ./ 提前结束/ 循环/ 11/ ./ ENDWHILE12/ ./ 如果/ Q/ 为空/ ,/ 则/ 置/ flag/ 等于/ TRUE13/ ./ ENDWHILE/ 过程/ 3/ 是/ 将/ Gk/ 移动/ 到/ 同一/ 群组/ 下/ ,/ 该/ 过程/ 最后/ 再/ 对/ 该/ 用户/ // 任务/ 的/ 虚拟机/ 进行/ 一次/ 检查/ ,/ 如果/ 出现/ 虚拟机/ 位于/ 不同/ 群组/ 的/ 情况/ ,/ 则/ 尝试/ 在/ 不/ 违反/ 限制/ 条件/ 的/ 情况/ 下/ 进行/ 移动/ ,/ 使/ 其/ 尽可能/ 的/ 被/ 部署/ 到/ 同一/ 群组/ 或/ 尽可能少/ 的/ 群组/ 中/ ./ 该/ 过程/ 与/ 过程/ 2/ 类似/ ,/ 只是/ 将/ 过程/ 2/ 中/ 的/ 同一/ 机架/ 的/ 条件/ 扩大/ 到/ 同一/ 群组/ ,/ 故/ 在/ 此/ 不再/ 累述/ ./ 算法/ 1/ 只/ 对/ 任务/ 遍历/ 两遍/ ,/ 第/ 1/ 遍/ 计算/ priority/ 值/ ,/ 第/ 2/ 遍/ 进行/ 调度/ ./ 而/ 计算/ priority/ 值/ 和/ benefit/ 值/ 的/ 时候/ ,/ 需要/ 遍历/ 每个/ 任务/ 的/ 通信量/ 矩阵/ ;/ 在/ 计算/ cost/ 值/ 的/ 时候/ ,/ 需要/ 遍历/ 数据中心/ 的/ 所有/ 交换机/ ./ 设/ 任务/ 总数/ 为/ k/ ,/ 每个/ 任务/ 所/ 需/ 的/ 虚拟机/ 数量/ 上限/ 为/ t/ ,/ 数据中心/ 的/ 交换机/ 总数/ 为/ l/ ,/ 则/ 遍历/ 任务/ 的/ 时间/ 复杂度/ 为/ O/ (/ k/ )/ ,/ 计算/ priority/ 、/ benefit/ 值/ 的/ 复杂度/ 为/ O/ (/ t2/ )/ ,/ 计算/ cost/ 的/ 时间/ 复杂度/ 为/ O/ (/ l/ )/ ,/ 因此/ 贪心/ 再/ 调度/ 算法/ 总/ 的/ 时间/ 复杂度/ 为/ O/ (/ k/ ·/ t2/ ·/ l/ )/ ./ 贪心/ 再/ 调度/ 算法/ 中/ ,/ 首先/ 通过/ Priority/ 的/ 值/ 确定/ 了/ 任务调度/ 的/ 顺序/ ,/ Priority/ 的/ 值/ 能/ 较/ 好/ 地/ 反映/ 任务/ 需要/ 被/ 再/ 调度/ 迫切/ 程度/ ,/ 但/ 并/ 不能/ 保证/ 当前/ 调度/ 是/ 最优/ 的/ ./ 因此/ 我们/ 设计/ 了/ 一个/ 基于/ 多次/ 迭代/ 的/ 随机/ 再/ 调度/ 算法/ ,/ 将/ 贪心/ 再/ 调度/ 算法/ 与其/ 比较/ ,/ 对比/ 其/ 性能/ ./ 6.2/ 基于/ 多次/ 迭代/ 的/ 随机/ 再/ 调度/ 算法/ 基于/ 多次/ 迭代/ 的/ 随机/ 再/ 调度/ 算法/ 首先/ 随机/ 产生/ 一个/ 调度/ 序列/ ,/ 然后/ 使用/ 算法/ 1/ 中/ 的/ 几个/ 过程/ 进行/ 再/ 调度/ ./ 在/ 每次/ 执行/ 再/ 调度/ 的/ 过程/ 中/ ,/ 都/ 将/ 操作过程/ 记录/ 在/ 栈/ 中/ ,/ 调度/ 完后/ ,/ 计算/ Benefit/ 值/ ,/ 然后/ 从栈/ 中/ 依次/ 取出/ 操作/ 进行/ 恢复/ ./ 重复/ 上述/ 过程/ n/ 次/ ,/ 选出/ Benefit/ 值/ 最大/ 的/ 一次/ 调度/ 序列/ 作为/ 实际/ 调度/ ./ 当/ 迭代/ 的/ 次数/ 足够/ 多时/ ,/ 算法/ 取得/ 的/ 解/ 覆盖/ 最优/ 解/ 的/ 几率/ 就/ 越/ 大/ ,/ 离/ 最优/ 解/ 的/ 距离/ 也/ 就/ 越近/ ./ 算法/ 2/ 的/ 描述/ 如下/ ./ 算法/ 2/ ./ 基于/ 多次/ 迭代/ 的/ 随机/ 再/ 调度/ 算法/ ./ 输入/ :/ M/ ,/ K/ ,/ {/ 犎/ i/ }/ ,/ 犔/ ,/ 犙/ ,/ {/ Gk/ }/ ,/ {/ 犚/ k/ 输出/ :/ 新/ 的/ 虚拟机/ 部署/ 方式/ {/ Yk1/ ./ 初始化/ 操作/ 栈/ OP/ _/ Stack/ ,/ 初始化/ Best/ _/ Benefit/ 值/ 2/ ./ WHILE/ (/ i/ ++/ </ n/ )/ 3/ ./ 清空/ OP/ _/ Stack4/ ./ 对/ 所有/ 任务/ 进行/ 随机/ 排序/ ,/ 存入/ P/ _/ Queue5/ ./ WHILE/ (/ P/ _/ Queue/ 非空/ )/ 6/ ./ 取出/ P/ _/ Queue/ 的/ 队首/ ,/ 存入/ Gk7/ ./ 尝试/ 将/ Gk/ 移动/ 到/ 同一/ 机架/ ,/ 若/ 成功/ 8/ ./ 则/ 进入/ 下/ 一次/ 循环/ 9/ ./ 否则/ ,/ 尝试/ 贪心/ 移动/ Gk10/ ./ 检查/ 是否/ 有/ 跨/ 群组/ 的/ 虚拟机/ ,/ 如果/ 有/ 11/ ./ 则/ 尝试/ 将/ Gk/ 移动/ 到/ 同一/ 群组/ 下/ 12/ ./ ENDWHILE13/ ./ 计算/ 这种/ 策略/ 下/ 的/ 收益值/ (/ Benefit/ )/ 14/ ./ 如果/ Benefit/ 大于/ Best/ _/ Benefit15/ ./ 则/ 值/ Best/ _/ Benefit/ 为/ 当前/ 的/ Benefit/ 值/ 16/ ./ 将/ 当前/ P/ _/ Queue/ 赋值/ 给/ Best/ _/ Queue17/ ./ 依次/ 取出/ OP/ _/ Stack/ 中/ 的/ 操作/ 进行/ 复原/ 18/ ./ ENDWHILE19/ ./ 对/ Best/ _/ Queue/ 重复/ 一遍/ 过程/ 1/ 、/ 过程/ 2/ 的/ 调度/ 算法/ 20/ ./ 输出/ 新/ 的/ 虚拟机/ 部署/ 方式/ {/ Yk/ 算法/ 2/ 中/ 的/ 面向/ 机架/ 的/ 虚拟机/ 整体/ 聚集/ 、/ 面向/ 机架/ 的/ 虚拟机/ 贪心/ 聚集/ 和/ 算法/ 1/ 中/ 对应/ 的/ 过程/ 类似/ ,/ 只是/ 需要/ 将/ 进行/ 的/ 迁移/ 操作/ 全部/ 压入/ 栈/ OP/ _/ Stack/ 中/ ,/ 以便/ 在/ 完成/ 一次/ 随机/ 调度/ 后/ ,/ 恢复/ 到/ 原始/ 状态/ ./ 算法/ 2/ 中/ 每次/ 迭代/ 只/ 对/ 任务/ 遍历/ 一遍/ ,/ 而/ 计算/ priority/ 值/ 和/ benefit/ 值/ 的/ 时候/ ,/ 需要/ 遍历/ 每个/ 任务/ 的/ 通信量/ 矩阵/ ;/ 在/ 计算/ cost/ 值/ 的/ 时候/ ,/ 需要/ 遍历/ 数据中心/ 中/ 的/ 所有/ 交换机/ ;/ 在/ 迭代/ 一次/ 结束/ 后/ ,/ 需要/ 恢复/ 到/ 原始/ 状态/ ./ 设/ 迭代/ 次数/ 为/ n/ ,/ 任务/ 总数/ 为/ k/ ,/ 每个/ 任务/ 所/ 需/ 的/ 虚拟机/ 上限/ 为/ t/ ,/ 数据中心/ 的/ 交换机/ 总数/ 为/ l/ ,/ 则/ 遍历/ 任务/ 的/ 时间/ 复杂度/ 为/ O/ (/ k/ )/ ,/ 计算/ priority/ 、/ benefit/ 值/ 的/ 复杂度/ 为/ O/ (/ t2/ )/ ,/ 计算/ cost/ 的/ 时间/ 复杂度/ 为/ O/ (/ l/ )/ ,/ 每次/ 迭代/ 结束/ 恢复/ 状态/ 的/ 时间/ 复杂度/ 为/ O/ (/ t/ )/ ,/ 因此/ 随机/ 再/ 调度/ 算法/ 总/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ ·/ k/ ·/ t3/ ·/ l/ )/ ./ Page97/ 性能/ 测试/ 7.1/ 实验/ 准备/ 参照/ 网址/ ①/ 中/ 的/ ThunderLinuxCluster/ ,/ 我们/ 构建/ 了/ 一个/ 由/ 21/ 个/ 群组/ ,/ 269/ 个/ 机架/ ,/ 3224/ 台/ 物理/ 机构/ 成/ 的/ 虚拟/ 数据中心/ 环境/ ./ 数据/ 集/ 选择/ ②/ 中/ 提供/ 了/ 真实/ 的/ 分布式/ 任务/ 日志/ ,/ 日志/ 中/ 包含/ 了/ 一个月/ 内/ 的/ 12/ 万个/ 任务/ 的/ 起始/ 时间/ 、/ 完成/ 时间/ 以及/ 请求/ 的/ 资源/ 总数/ ./ 由于/ 日志/ 中/ 并/ 没有/ 提供/ 节点/ 之间/ 的/ 通信/ 矩阵/ ,/ 为了/ 不失/ 一般性/ ,/ 我们/ 随机/ 为/ 每个/ 任务/ 产生/ 了/ 一组/ 通信/ 矩阵/ (/ 在/ 实际/ 应用/ 中/ ,/ 该/ 通信/ 矩阵/ 可/ 由/ 用户/ 近似/ 给出/ ,/ 或者/ 由/ 数据中心/ 的/ 管理者/ 监控/ 网络流量/ 得到/ )/ ./ 为了/ 衡量/ 算法/ 的/ 效果/ ,/ 我们/ 首先/ 定义/ “/ 分散/ 的/ 任务/ ”/ ,/ 即/ 若/ 某个/ 任务/ 有/ 两台/ 虚拟机/ 被/ 分配/ 到/ 不同/ 机架/ 的/ 物理/ 机上/ ,/ 则/ 把/ 该/ 任务/ 称为/ 分散/ 的/ ./ 第/ 3/ 节中/ 实验/ 结果表明/ 了/ 一个/ 任务/ 的/ 完成/ 时间/ 或者/ 服务/ 性能/ 会受/ 任务/ 分散/ 程度/ 的/ 影响/ ./ 同一个/ 任务/ ,/ 如果/ 在/ 被/ 部署/ 时/ 不是/ 分散/ 的/ ,/ 则/ 能够/ 完成/ 的/ 更/ 快/ 或者/ 拥有/ 更/ 高/ 的/ 性能/ ./ 因此/ ,/ 我们/ 在/ 模拟/ 试验/ 中/ ,/ 首先/ 对比/ 执行/ 再/ 调度/ 算法/ 前后/ 分散/ 任务/ 的/ 数量/ ./ 此外/ ,/ 一个/ 任务/ 的/ benefit/ 值/ 是/ 关于/ 其/ 虚拟机/ 之间/ 的/ 通信量/ 与/ 网络通信/ 能力/ 的/ 函数/ ,/ benefit/ 值越/ 大/ ,/ 表明/ 该/ 任务/ 拥有/ 越好/ 的/ 网络通信/ 能力/ ./ 因此/ ,/ benefit/ 值/ 是/ 衡量/ 算法/ 性能/ 的/ 一个/ 直接/ 指标/ ./ 7.2/ 基于/ 贪心/ 策略/ 的/ 再/ 调度/ 算法/ 性能/ 7.2/ ./ 1/ 配合/ First/ -/ Fit/ 算法/ 我们/ 首先/ 将/ 贪心/ 再/ 调度/ 算法/ 配合/ First/ -/ Fit/ 算法/ 使用/ ,/ 比较/ 了/ 使用/ 再/ 调度/ 算法/ 前后/ 以及/ 以/ 不同/ 频率/ 执行/ 再/ 调度/ 算法/ 时/ ,/ 分散/ 的/ 任务/ 的/ 数量/ ./ 实验/ 结果/ 如图/ 3/ 所示/ ./ 如图/ 3/ 所示/ ,/ 最/ 上面/ 的/ 曲线/ 是/ 正在/ 运行/ 中/ 的/ 任务/ 总数/ ;/ 第/ 2/ 条/ 曲线/ 是/ 用/ First/ -/ Fit/ 算法/ 进行/ 调度/ 时/ ,/ 分散/ 的/ 任务/ 的/ 总数/ ;/ 第/ 3/ 条/ 曲线/ 是/ First/ -/ Fit/ 算法/ 配合/ 600s/ 一次/ 的/ 贪心/ 再/ 调度/ 算法/ 时/ ,/ 分散/ 的/ 任务/ 的/ 总数/ ;/ 最/ 下方/ 的/ 曲线/ 是/ First/ -/ Fit/ 算法/ 配合/ 60s/ 一次/ 的/ 贪心/ 再/ 调度/ 算法/ 时/ ,/ 分散/ 的/ 任务/ 的/ 总数/ ./ 从/ 实验/ 结果/ 中/ 可以/ 明显/ 看出/ ,/ 在/ 没有/ 执行/ 再/ 调度/ 算法/ 之前/ ,/ 分散/ 的/ 任务/ 数/ 随着/ 时间/ 的/ 推移/ ,/ 逐渐/ 增高/ ;/ 而/ 执行/ 再/ 调度/ 算法/ 后/ ,/ 分散/ 的/ 任务/ 数/ 明显降低/ ./ 并且/ ,/ 执行/ 再/ 调度/ 算法/ 的/ 周期/ 越短/ ,/ 效果/ 就/ 越/ 好/ ,/ 但是/ 由于/ 虚拟机/ 的/ 迁移/ 平均/ 耗时/ 在/ 60s/ ,/ 再/ 调度/ 周期/ 过/ 短会/ 造成/ 虚拟机/ 状态/ 的/ 不/ 稳定/ ,/ 并且/ 当/ 迁移/ 集中/ 在/ 某一时间/ 段时/ ,/ 会/ 造成/ 数据通信/ 量/ 激增/ ,/ 因此/ ,/ 在/ 实际/ 中/ ,/ 再/ 调度/ 的/ 周期/ 至少/ 选择/ 在/ 60s/ 以上/ ./ 如图/ 4/ 所示/ ,/ 最/ 上面/ 的/ 曲线/ 是/ 所有/ 正在/ 执行/ 的/ 任务/ 的/ 理论/ 最大/ benefit/ 值/ 的/ 和/ ;/ 最/ 下面/ 的/ 曲线/ 是/ 只用/ First/ -/ Fit/ 算法/ 进行/ 调度/ 时候/ ,/ 所有/ 任务/ 的/ benefit/ 值/ 总和/ ;/ 中间/ 的/ 曲线/ 是/ First/ -/ Fit/ 算法/ 配合/ 60s/ 一次/ 的/ 贪心/ 再/ 调度/ 算法/ 时/ ,/ 任务/ 的/ benefit/ 值/ 总和/ ./ 从/ 实验/ 结果/ 中/ 可以/ 明显/ 看出/ ,/ 在/ 没有/ 执行/ 再/ 调度/ 算法/ 之前/ ,/ 任务/ 的/ 网络通信/ 能力/ 离/ 理论/ 最大值/ 有/ 较大/ 差距/ ,/ 而/ 执行/ 再/ 调度/ 算法/ 后/ ,/ 任务/ 的/ 网络通信/ 能力/ 几乎/ 接近/ 理论/ 最大值/ ./ 因此/ ,/ 从/ 实验/ 结果/ 可以/ 看出/ ,/ 再/ 调度/ 算法/ 能够/ 大大提高/ 任务/ 的/ 网络通信/ 能力/ ./ 图/ 4/ 贪心/ 再/ 调度/ 算法/ 配合/ First/ -/ Fit/ 的/ 通信/ 收益/ 比较/ 7.2/ ./ 2/ 配合/ 网络/ 感知/ 的/ 虚拟机/ 部署/ 算法/ Approx/ 是/ 文献/ [/ 7/ ]/ 中/ 提出/ 的/ 基于/ 网络/ 感知/ 的/ 虚拟机/ 调度/ 算法/ ,/ 该/ 算法/ 在/ 初次/ 处理/ 用户/ 请求/ 时/ ,/ 就/ 考虑/ 到/ 了/ 网络/ 因素/ ,/ 因此/ 算法/ 在/ 初期/ 表现/ 的/ 很/ 好/ ./ 但是/ 随着/ 不断/ 有/ 任务/ 完成/ 后/ 退出/ ,/ 物理/ 机上/ 的/ 碎片/ 逐渐/ 增多/ ,/ 原/ 算法/ 的/ 性能/ 就/ 出现/ 了/ 下降/ ./ 在/ 实验/ 中/ ,/ 我们/ 对比/ 了/ Approx/ 算法/ 在/ 配合/ 使用/ 再/ 调度/ 算法/ 前后/ ,/ 出现/ 的/ 分散/ 的/ 任务/ 的/ 数量/ 的/ 变化/ 以及/ 归一化/ 后/ 的/ benefit/ 值/ 的/ 对比/ ,/ 实验/ 结果/ 如图/ 5/ 、/ 图/ 6/ 所示/ ./ ①/ https/ :/ // // computing/ ./ llnl/ ./ gov/ // ?/ set/ =/ resources/ &/ page/ =/ index/ ②/ http/ :/ // // www/ ./ cs/ ./ huji/ ./ ac/ ./ il/ // labs/ // parallel/ // workload/ // Page10/ 图/ 6Approx/ 配合/ 贪心/ 再/ 调度/ 算法/ benefit/ 值/ 比较/ 从图/ 5/ 的/ 实验/ 结果/ 中/ 以及/ 对比/ 图/ 2/ 可以/ 看出/ ,/ 尽管/ Approx/ 算法/ 相比/ First/ -/ fit/ 算法/ 在/ 虚拟机/ 的/ 网络通信/ 能力/ 方面/ 已经/ 能/ 取得/ 较/ 好/ 的/ 效果/ ,/ 但/ 算法/ 的/ 性能/ 依然/ 会/ 随着/ 时间推移/ 而/ 下降/ ./ 而/ 将/ Approx/ 算法/ 配合/ 上/ 我们/ 的/ 贪心/ 再/ 调度/ 算法/ 后/ ,/ 原/ 算法/ 的/ 效果/ 有/ 进一步/ 的/ 提升/ ./ 从图/ 6/ 可以/ 看出/ ,/ Approx/ 算法/ 配合/ 上/ 我们/ 的/ 贪心/ 再/ 调度/ 算法/ 后/ benefit/ 值/ 接近/ 理论/ 最大值/ ,/ 且/ 相对/ 于/ 单独/ 使用/ 的/ Approx/ 算法/ 网络通信/ 能力/ 有/ 进一步/ 提升/ ./ 7.2/ ./ 3/ 对比/ 基于/ 多次/ 迭代/ 的/ 随机/ 再/ 算法/ 在/ 这组/ 实验/ 中/ ,/ 我们/ 在/ First/ -/ Fit/ 算法/ 的/ 基础/ 上/ ,/ 分别/ 配合/ 基于/ 贪心/ 策略/ 的/ 再/ 调度/ 算法/ 以及/ 100/ -/ 随机/ 再/ 调度/ (/ 即/ 迭代/ 100/ 次/ )/ 和/ 400/ -/ 随机/ 再/ 调度/ (/ 即/ 迭代/ 400/ 次/ )/ 两个/ 迭代/ 次数/ 不同/ 的/ 随机/ 再/ 调度/ 算法/ 对比/ 其/ 性能/ ./ 选取/ 分散/ 的/ 任务/ 数量/ 作为/ 评价/ 指标/ ,/ 实验/ 结果/ 如图/ 7/ 所示/ ./ 从图/ 7/ 中/ 可以/ 看出/ ,/ 随机/ 迭代/ 的/ 次数/ 越/ 多/ ,/ 算法/ 的/ 效果/ 就/ 越/ 好/ ,/ 且/ 基于/ 贪心/ 策略/ 的/ 再/ 调度/ 算法/ 在/ 性能/ 上/ 接近/ 多次/ 迭代/ 的/ 随机/ 再/ 调度/ 算法/ ./ 但是/ 基于/ 多次/ 迭代/ 的/ 随机/ 再/ 调度/ 算法/ 将/ 消耗/ 大量/ 的/ 时间/ 用于/ 运算/ ,/ 虽然/ 对比/ 贪心/ 再/ 调度/ 算法/ 的/ 性能/ 有/ 部分/ 提升/ ,/ 但/ 提升/ 效果/ 并/ 不/ 显著/ ./ 因此/ 我们/ 在/ 实际/ 应用/ 中/ ,/ 使用/ 基于/ 贪心/ 策略/ 的/ 再/ 调度/ 算法/ 更为/ 合理/ 、/ 有效/ ./ 图/ 7/ 多次/ 迭代/ 的/ 随机/ 再/ 调度/ 算法/ 与/ 贪心/ 再/ 调度/ 算法/ 比较/ 7.3/ 再/ 调度/ 算法/ 对/ 数据中心/ 利用率/ 的/ 影响/ 再/ 调度/ 的/ 过程/ 有/ 可能/ 导致/ 新/ 的/ 物理/ 机/ 的/ 启用/ ,/ β/ 参数/ 控制/ 了/ 启用/ 新/ 物理/ 机/ 的/ 条件/ ,/ 当前/ 我们/ 设定/ β/ 值为/ 0.95/ ,/ 即当/ 数据中心/ 的/ 整理/ 利用率/ 达到/ 95/ %/ 以上/ 时/ ,/ 才/ 可以/ 启用/ 新/ 的/ 物理/ 机/ ./ 由于/ 我们/ 的/ 算法/ 旨在/ 将/ 位于/ 不同/ 机架/ 上且/ 通信量/ 较大/ 的/ 虚拟机/ 迁移/ 至/ 同一/ 机架/ ,/ 因此/ 迁移/ 过程/ 不会/ 造成/ 机架/ 的/ 开关/ ./ 表/ 5/ 显示/ 了/ 执行/ 贪心/ 再/ 调度/ 算法/ 前后/ 额外/ 使用/ 物理/ 机/ 的/ 情况/ ./ 物理/ 机/ 额外/ 使用/ 比例/ // %/ 从表/ 5/ 中/ 可以/ 看出/ ,/ 总共/ 只有/ 12/ %/ 的/ 时间/ 中/ ,/ 执行/ 再/ 调度/ 算法/ 后会/ 比/ 之前/ 使用/ 更/ 多/ 的/ 物理/ 机/ ./ 而/ 这/ 12/ %/ 的/ 时间/ 中/ 的/ 大部分/ 时间/ ,/ 额外/ 使用/ 的/ 物理/ 机数量/ 都/ 控制/ 在/ 0.5/ %/ 之内/ ./ 因此/ 可以/ 认为/ 再/ 调度/ 算法/ 不会/ 对/ 数据中心/ 整体/ 的/ 利用率/ 产生/ 较大/ 影响/ ./ 8/ 总结/ 虚拟机/ 的/ 部署/ 与/ 调度/ 是/ 数据中心/ 管理/ 中/ 的/ 核心/ 问题/ ./ 本文/ 深入研究/ 了/ 面向/ 网络/ 感知/ 的/ 周期性/ 资源/ 重/ 配置/ 问题/ ,/ 仔细分析/ 并/ 测试/ 了/ 网络通信/ 能力/ 以及/ 各种因素/ 对/ 动态/ 迁移/ 过程/ 中/ 部署/ 在/ 虚拟机/ 上/ 的/ 服务/ 性能/ 的/ 影响/ ./ 在/ 这/ 基础/ 上/ ,/ 提出/ 了/ 面向/ 网络/ 感知/ 的/ 虚拟机/ 再/ 调度/ 算法/ ,/ 通过/ 适当/ 的/ 虚拟机/ 迁移/ ,/ 提高/ 部署/ 在/ 虚拟机/ 上/ 任务/ 的/ 性能/ 以及/ 数据中心/ 整体/ 的/ 运行/ 效率/ ./ 我们/ 通过/ RUBiS/ 和/ PUMA/ 两个/ 测试/ 平台/ 验证/ 了/ 网络通信/ 对/ 部署/ 在/ 虚拟机/ 上/ 服务/ 性能/ 的/ 影响/ ;/ 通过/ 真实/ 的/ 数据/ 集/ 和/ 模拟实验/ ,/ 分别/ 在/ First/ -/ Fit/ 以及/ Approx/ 这/ 两种/ 虚拟机/ 部署/ 算法/ 下/ ,/ 对比/ 了/ 应用/ 虚拟机/ 再/ 调度/ 算法/ 前后/ 虚拟机/ 的/ 部署/ 效果/ ,/ 验证/ 了/ 我们/ Page11/ 算法/ 能够/ 以较/ 小/ 的/ 代价/ 使得/ 高/ 网络通信/ 代价/ 的/ 任务/ 数/ 明显/ 减少/ ,/ 虚拟/ 机组/ 的/ 网络通信/ 能力/ 显著/ 提高/ ./ 

