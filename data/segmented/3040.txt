Page1/ 多核/ 环境/ 下/ 高效/ 集合/ 通信/ 关键技术/ 研究/ 张攀勇/ 1/ )/ ,/ 2/ )/ ,/ 3/ )/ 孟丹/ 1/ )/ ,/ 2/ )/ 霍志刚/ 1/ )/ ,/ 2/ )/ 1/ )/ (/ 中国科学院计算技术研究所/ 国家/ 智能/ 计算机/ 研究/ 开发/ 中心/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 计算机系统/ 结构/ 重点/ 实验室/ 北京/ 100190/ )/ 3/ )/ (/ 中国科学院/ 研究生院/ 北京/ 100049/ )/ 摘要/ 随着/ 高性能/ 计算/ 需求/ 的/ 日益增长/ ,/ 多核/ 处理器/ 在/ 高性能/ 计算/ 中间/ 得到/ 了/ 广泛/ 的/ 普及/ ./ 为了/ 保证/ 高性能/ 计算机系统/ 的/ 效率/ ,/ 需要/ 保持/ 计算/ 和/ 通信/ 的/ 平衡性/ ,/ 多核/ 的/ 广泛/ 使用/ 对/ 通信/ 系统/ 的/ 效率/ 提出/ 了/ 更/ 高/ 的/ 要求/ ./ 集合/ 通信/ 作为/ 通信/ 系统/ 中/ 的/ 重要/ 组成部分/ ,/ 研究/ 多核/ 环境/ 下/ 的/ 高效/ 集合/ 通信/ 具有/ 十分/ 重要/ 的/ 意义/ ./ 文中/ 首先/ 研究/ 了/ 多/ 核对/ 集合/ 通信/ 性能/ 的/ 影响/ ,/ 并/ 根据/ 多核/ 处理器/ 共享/ Cache/ 以及/ 内存/ 竞争/ 的/ 特点/ ,/ 提出/ 了/ 层次化/ 算法/ 、/ 限制/ 并发/ 、/ NUMA/ 感知/ 的/ 优化/ 方法/ 和/ Cache/ 友好/ 的/ 优化/ 算法/ ,/ 并/ 分别/ 在/ MPI/ _/ Barrier/ 、/ MPI/ _/ Bcast/ 和/ MPI/ _/ Alltoall/ 中/ 进行/ 了/ 验证/ ./ 实验/ 结果表明/ 优化/ 方法/ 能够/ 有效/ 地/ 利用/ 多核/ 结构/ 特点/ ,/ 降低/ 竞争/ 带来/ 的/ 影响/ ,/ 提高/ 了/ 多/ 核/ 环境/ 下/ 集合/ 通信/ 的/ 性能/ 和/ 可扩展性/ ./ 关键词/ 高性能/ 计算/ ;/ 多核/ 机群/ ;/ 集合/ 通信/ 优化/ ;/ NUMA/ ;/ MPI1/ 引言/ 由于/ 微处理器/ 工艺/ 、/ 散热/ 等/ 诸多/ 限制/ ,/ 处理器/ 的/ 发展/ 已经/ 由/ 原有/ 的/ 提高/ 主频/ 的/ 方式/ 变为/ 芯片/ 内部/ 集成/ 更/ 多/ 处理单元/ 的/ 方式/ ./ “/ 多核/ 时代/ ”/ 的/ 摩尔定律/ 预测/ 了/ 芯片/ 内部/ 集成/ 核数成/ 指数/ 增长/ ,/ 在/ 不久/ 的/ 将来/ 一个/ 芯片/ 内部/ 就/ 能够/ 集成/ 上百/ 的/ 处理器/ 核/ [/ 1/ ]/ ./ 多核/ 处理器/ 对系统/ 性能/ 带来/ 了/ 两种/ 可能/ 的/ 影响/ :/ 一方面/ ,/ 芯片/ 内部/ 集成/ 更/ 多/ 的/ 处理/ 核/ ,/ 为了/ 提高/ 核/ 之间/ 的/ 数据交换/ 速度/ ,/ 一般/ 要/ 在/ 芯片/ 内/ 实现/ 大容量/ 的/ 共享/ Cache/ ,/ 这种/ 共享/ Cache/ 能够/ 带来/ 片内/ 数据交换/ 的/ 性能/ 提升/ ./ 另一方面/ ,/ 多核/ 处理器/ 共享/ 使用/ 芯片/ 上/ 的/ 数据通路/ 和/ 共享/ Cache/ ,/ 很/ 容易/ 出现/ 竞争/ 带来/ 性能/ 的/ 下降/ ./ 高性能/ 计算/ 对/ 计算能力/ 的/ 需求/ 永无止境/ ,/ 这/ 使得/ 多核/ 处理器/ 在/ 高性能/ 计算机/ 中/ 得到/ 了/ 广泛/ 使用/ ./ 在/ 2009/ 年/ 11/ 月/ 的/ Top500/ 中/ ,/ 绝大部分/ 系统/ 采用/ 了/ 多/ 核/ 处理器/ ,/ 仅/ 有/ 4/ 套/ 系统/ 使用/ 单核/ 处理器/ ./ 另一方面/ ,/ 并行/ 应用/ 为了/ 保证/ 计算/ 效率/ ,/ 需要/ 高性能/ 系统/ 保持/ 计算/ 和/ 通信/ 性能/ 的/ 平衡性/ ./ 集合/ 通信/ (/ collectivecommunication/ )/ 作为/ 通信/ 系统/ 的/ 重要/ 组成部分/ ,/ 为/ 多个/ 进程/ 参与/ 的/ 组/ 通信/ 原语/ ,/ 被/ 并行/ 应用/ 广泛/ 用于/ 一组/ 进程/ 之间/ 的/ 数据/ 操作/ 和/ 同步操作/ ./ 当/ 并行/ 应用程序/ 的/ 规模/ 越来越/ 大时/ ,/ 所/ 使用/ 的/ 处理器/ 的/ 规模/ 也/ 越来越/ 大/ ,/ 集合/ 通信/ 组/ 内部/ 进程/ 之间/ 的/ 通信量/ 相应/ 增大/ ,/ 且/ 需要/ 相互协作/ 完成/ 通信/ 语义/ ,/ 因此/ 集合/ 通信/ 往往/ 成为/ 系统/ 的/ 性能/ 瓶颈/ ,/ 需要/ 优化/ 集合/ 通信/ 以/ 提高/ 整体/ 系统/ 性能/ ./ 例如/ 对/ CrayT3E900/ 系统/ 上/ 运行/ 的/ 并行/ 应用/ 分析/ [/ 2/ ]/ 表明/ ,/ 一些/ 应用/ 的/ 集合/ 通信/ 时间/ 占/ 到/ 了/ 总/ 通信/ 时间/ 的/ 80/ %/ ./ 另一方面/ ,/ 多核/ 导致/ 了/ 单个/ 节点/ 上/ 能够/ 运行/ 更/ 多/ 的/ 进程/ [/ 3/ ]/ ,/ 集合/ 通信/ 的/ 节点/ 内/ 部分/ 在/ 通信/ 中/ 变得/ 更加/ 重要/ ,/ 而多核/ 引入/ 的/ 片/ 内/ 数据通路/ 和/ 共享/ Cache/ 在/ 访问/ 模式/ 和/ 速度/ 上/ 与/ 共享内存/ 相比/ 存在/ 差异/ ,/ 尽管/ 现有/ 的/ 集合/ 通信/ 算法/ 可以/ 平滑/ 地/ 移植/ 到/ 多/ 核/ 机群/ 中/ ,/ 但是/ 传统/ SMP/ 机群/ 中/ 的/ 集合/ 通信/ 算法/ 只/ 针对/ 通信/ 网络/ 和/ 共享内存/ 通信/ 的/ 特点/ 进行/ 优化/ ,/ 并/ 没有/ 考虑/ 到/ 多/ 核/ 的/ 结构/ 特点/ ,/ 如果/ 直接/ 使用/ 这些/ 算法/ 会/ 带来/ 集合/ 通信/ 性能/ 和/ 可扩展性/ 的/ 问题/ ./ 由于/ 集合/ 通信/ 的/ 性能/ 对/ 并行/ 应用/ 来说/ 非常/ 关键/ ,/ 因此/ 研究/ 多核/ 环境/ 对/ 集合/ 通信/ 的/ 影响/ ,/ 并/ 针对/ 多核/ 环境/ 的/ 特点/ 进行/ 相应/ 的/ 集合/ 通信/ 算法/ 优化/ 成为/ 了/ 一个/ 研究/ 热点/ ./ 本文/ 的/ 主要/ 贡献/ 有/ 两点/ :/ (/ 1/ )/ 详细分析/ 了/ 多/ 核/ 环境/ 对/ 集合/ 通信/ 的/ 影响/ ,/ 发现/ 多/ 核对/ 通信/ 性能/ 带来/ 了/ 两种/ 冲突/ 的/ 效果/ :/ 多核/ 中/ 共享/ Cache/ 的/ 快速/ 数据通路/ 能够/ 提高/ 集合/ 通信/ 的/ 性能/ ;/ 共享/ Cache/ 和/ 内存/ 的/ 竞争/ 降低/ 了/ 集合/ 通信/ 的/ 性能/ ,/ 这/ 对/ 未来/ 多核/ 环境/ 下/ 集合/ 通信/ 优化/ 具有/ 指导意义/ ./ (/ 2/ )/ 针对/ 多核/ 的/ 特点/ ,/ 提出/ 了/ 层次化/ 算法/ 、/ 限制/ 并发/ 、/ NUMA/ 感知/ 和/ Cache/ 友好/ 的/ 优化/ 方法/ ./ 这些/ 优化/ 方法/ 能够/ 提高/ 共享/ Cache/ 利用率/ ,/ 降低/ 内存/ 竞争/ 带来/ 的/ 影响/ ,/ 从而/ 提高/ 了/ 集合/ 通信/ 的/ 性能/ ./ 本文/ 第/ 2/ 节/ 简要/ 描述/ 本文/ 的/ 研究/ 背景/ 和/ 相关/ 工作/ ;/ 第/ 3/ 节/ 评价/ 多/ 核对/ 集合/ 通信/ 的/ 影响/ ;/ 第/ 4/ 节/ 介绍/ 本文/ 提出/ 的/ 多/ 核/ 感知/ 集合/ 通信/ 算法/ ;/ 第/ 5/ 节/ 介绍/ 实验/ 方法/ 和/ 实验/ 结果/ ;/ 第/ 6/ 节对/ 全文/ 进行/ 总结/ 和/ 展望/ ./ 2/ 研究/ 背景/ 和/ 相关/ 工作/ 本节/ 将/ 介绍/ 本文/ 的/ 研究/ 背景/ 和/ 相关/ 工作/ ,/ 包括/ 多核/ 处理器/ 和/ 集合/ 通信/ ./ 2.1/ 多核/ 处理器/ 多核/ 处理器/ 指在/ 一个/ 处理器/ 芯片/ 内部/ 集成/ 多个/ 核心/ ./ 为了/ 提高/ 片/ 内核/ 之间/ 数据交换/ 的/ 速度/ ,/ 减少/ 内存/ 操作/ ,/ 现有/ 多核/ 芯片/ 在/ 片/ 内/ 集成/ 了/ 大容量/ 的/ 共享/ Cache/ ,/ 如/ Intel/ 早期/ 的/ 四核/ Xeon/ 集成/ 了/ 2MB/ 的/ 共享/ L2Cache/ ,/ Nehalem/ 集成/ 了/ 8MB/ 的/ 共享/ L3Cache/ ,/ AMD/ 的/ 四核/ 系统/ Barcelona/ 集成/ 了/ 2MBL3Cache/ ./ 由于/ Cache/ 和/ 内存/ 的/ 存取/ 模式/ 以及/ 性能/ 差异/ ,/ 导致/ 了/ 多/ 核/ 处理器/ 系统/ 相比/ 传统/ 的/ SMP/ 系统/ ,/ 由/ 传统/ 的/ 两层/ 通信模型/ :/ 节点/ 内/ (/ Intra/ -/ Node/ )/ 通过/ 共享内存/ 通信/ 、/ 节点/ 间/ (/ Inter/ -/ Node/ )/ 通过/ 高性能/ 网络通信/ ,/ 变为/ 三层/ 通信模型/ [/ 3/ ]/ :/ 片内/ (/ Intra/ -/ Socket/ )/ 通过/ 共享/ Cache/ 通信/ 、/ 片间/ (/ Inter/ -/ Socket/ )/ 通过/ 共享内存/ 通信/ 、/ 节点/ 间/ (/ Inter/ -/ Node/ )/ 通过/ 高性能/ 网络通信/ ./ 各个/ 通信/ 层次/ 之间/ 在/ 性能/ 和/ 访问/ 方式/ 上/ 有/ 明显/ 的/ 差异/ ./ 因此/ ,/ 通信/ 系统/ 需要/ 针对/ 多核/ 环境/ 下/ 的/ 三层/ 通信/ 进行/ 相应/ 的/ 优化/ ./ 另一方面/ ,/ 由于/ CPU/ 和/ Memory/ 性能/ 提升/ 具有/ 不平衡性/ ,/ “/ 内存/ 墙/ ”/ (/ memorywall/ )/ 问题/ 一直/ 存在/ ./ 而多核/ 处理器/ 由于/ 在/ 芯片/ 内部/ 集成/ 更/ 多/ 的/ 核/ ,/ 导致/ “/ 内存/ 墙/ ”/ 问题/ 更加/ 严重/ ./ 为了/ 提高/ 芯片/ 访存/ 性能/ ,/ 非/ 一致/ 访存/ 结构/ NUMA/ 将/ 变成/ 必然/ ./ 新/ 的/ 多/ 核/ 处理器/ 如/ IntelNehalem/ 处理器/ 和/ AMD/ 的/ Opteron/ 处理器/ 内部/ 均/ 集成/ 内存/ 控制器/ ./ 芯片/ 之间/ 采用/ NUMA/ 结构/ 进程/ 互联/ ,/ 构成/ cc/ -/ NUMA/ 系统/ ./ Page32/ ./ 2/ 集合/ 通信/ MPI/ 的/ 集合/ 通信/ 为/ 一组/ 进程/ 构成/ 一个/ 通信/ 域/ (/ communicator/ )/ ,/ 在/ 进程/ 之间/ 进行/ 的/ 通信/ 操作/ ,/ 用于/ 数据/ 分发/ 和/ 同步操作/ ./ 集合/ 通信/ 可以/ 分为/ 两种/ 类型/ :/ (/ 1/ )/ 一到/ 多/ ,/ 如/ MPI/ _/ Gather/ ,/ MPI/ _/ Scatter/ ,/ MPI/ _/ Reduce/ ,/ MPI/ _/ Bcast/ ;/ (/ 2/ )/ 多到/ 多/ ,/ 如/ MPI/ _/ Allgather/ ,/ MPI/ _/ Allreduce/ ,/ MPI/ _/ Alltoall/ ./ 由于/ 集合/ 通信/ 随着/ 并行程序/ 规模/ 的/ 扩大/ ,/ 所/ 使用/ 的/ 进程/ 数目/ 越来越/ 多/ ,/ 进程/ 之间/ 需要/ 更/ 多/ 的/ 同步/ 和/ 数据/ 交互/ 操作/ ./ 如果/ 集合/ 通信/ 算法/ 不/ 具有/ 较/ 好/ 的/ 性能/ 和/ 可扩展性/ ,/ 大规模/ 情况/ 下会/ 降低/ 整体/ 通信/ 的/ 性能/ ,/ 从而/ 降低/ 并行/ 应用/ 的/ 效率/ ./ 因此/ 对/ 集合/ 通信/ 的/ 性能/ 和/ 可扩展性/ 的/ 研究/ 一直/ 是/ 一个/ 非常/ 重要/ 的/ 研究/ 方向/ ./ 传统/ 的/ 集合/ 通信/ 实现/ 都/ 是/ 基于/ MPI/ 的/ 点到点/ 消息传递/ 接口/ 实现/ ,/ 通过/ 进程/ 之间/ 的/ 消息传递/ ,/ 最终/ 完成/ 集合/ 通信/ 的/ 语义/ ./ 为了/ 提高/ SMP/ 机群/ 环境/ 下/ 集合/ 通信/ 的/ 性能/ ,/ 一般/ 采用/ 了/ 基于/ 共享内存/ 的/ 集合/ 通信/ 优化/ 算法/ ,/ 节点/ 内/ 利用/ 了/ 共享内存/ 进行/ 数据交换/ 操作/ ,/ 节点/ 间/ 通过/ 高性能/ 网络/ 进行/ 数据交换/ ./ 这种/ 方式/ 利用/ 了/ 共享内存/ 方式/ 通信/ 相比/ 通信/ 网络通信/ 的/ 高性能/ ,/ 同时/ 减少/ 了/ 通信/ 网络/ 上/ 的/ 消息/ ,/ 带来/ 了/ 性能/ 的/ 提升/ ./ 相关/ 的/ 研究/ 有/ :/ 文献/ [/ 4/ ]/ 研究/ 了/ 节点/ 内/ 共享内存/ 方式/ 对/ 多种/ 集合/ 通信/ 的/ 性能/ 影响/ ,/ 关注/ 层次/ 方式/ 带来/ 的/ 性能/ 提升/ ;/ 文献/ [/ 5/ ]/ 提出/ 了/ 一系列/ 基于/ 共享内存/ 的/ 通信/ 原语/ ,/ 并/ 基于/ 这些/ 通信/ 原语/ 实现/ 了/ MPI/ _/ Bcast/ 和/ MPI/ _/ Scatter/ ,/ 结果表明/ 共享内存/ 方式/ 提高/ 了/ 通信/ 性能/ ./ 而多核/ 环境/ 下/ 的/ 集合/ 通信/ 性能/ 优化/ ,/ 已经/ 引起/ 了/ 学术界/ 的/ 关注/ ,/ 国内外/ 很多/ 研究者/ 对此/ 问题/ 进行/ 了/ 研究/ ./ 文献/ [/ 6/ ]/ 中/ 针对/ IntelClovertown/ 多核/ 系统/ 中/ 共享/ L2Cache/ 的/ 特点/ ,/ 提出/ 了/ 两层/ 的/ 通信/ 算法/ 来/ 优化/ MPI/ _/ Bcast/ 和/ MPI/ _/ Allgather/ ,/ 同时/ 使用/ NUMA/ 特点/ ,/ 优化/ 共享内存/ 的/ MPI/ _/ Allreduce/ ,/ 并/ 使用/ 通信/ 调度/ 的/ 方式/ 充分利用/ HT/ 总线/ 的/ 双向/ 带宽/ ,/ 以/ 优化/ MPI/ _/ Alltoall/ 性能/ ./ 该/ 研究/ 重点/ 关注/ 了/ IntelClovertown/ 系统/ 的/ 硬件/ 特点/ ,/ 而/ 不是/ 多核/ 系统/ 普遍/ 的/ 特点/ ,/ 以及/ 多核/ 环境/ 对/ 集合/ 通信/ 算法/ 的/ 影响/ ./ 文献/ [/ 7/ ]/ 中/ 利用/ 多核/ 和/ ConnectXIB/ 网卡/ 在/ 多/ 进程/ 并发/ 时/ 性能/ 高/ 的/ 特点/ 使用/ 多个/ 首/ 进程/ 来/ 优化/ MPI/ _/ Alltoall/ 的/ 性能/ ./ 文献/ [/ 8/ ]/ 则/ 通过/ 共享内存/ 来/ 优化/ 多核/ 环境/ 下/ 的/ 同步操作/ ,/ 研究/ 了/ 小/ 消息/ 时/ 树形/ 通信/ 算法/ 的/ 度/ 的/ 选择/ ,/ 以及/ 大/ 消息/ 时/ 并发/ 访问/ 度/ 的/ 问题/ ./ 该/ 研究/ 关注/ 多核/ 环境/ 下/ 集合/ 通信/ 算法/ 实现/ 的/ 问题/ ./ 文献/ [/ 9/ ]/ 研究/ 了/ 多/ 核/ 环境/ 下/ 的/ 内存/ 层次模型/ ,/ 提出/ 了/ mLogn/ (/ P/ )/ 模型/ ,/ 并/ 通过/ 该/ 模型/ 指导/ 优化/ MPI/ _/ Bcast/ 的/ 性能/ ,/ 该/ 研究/ 重点/ 关注/ 了/ 多/ 核/ 的/ 内存/ 层次性/ ./ 本文/ 重点/ 分析/ 多/ 核对/ 集合/ 通信/ 的/ 影响/ ,/ 同时/ 针对/ 这些/ 特征/ 提出/ 多核/ 环境/ 下/ 集合/ 通信/ 优化/ 的/ 关键技术/ ./ 3/ 多/ 核对/ 集合/ 通信/ 的/ 影响/ 3.1/ 快速/ 数据通路/ 多核/ 处理器/ 设计/ 中/ 为了/ 提高/ 多核/ 内部/ 核心/ 之间/ 的/ 数据交换/ 效率/ ,/ 在/ 多/ 核/ 内部/ 集成/ 了/ 共享/ Cache/ ./ 核心/ 之间/ 通过/ 共享/ Cache/ 能够/ 快速/ 地/ 进行/ 数据传输/ ,/ 对于/ AMDBarcelona8347HE1/ ./ 9GHz/ 四核/ 处理器/ 使用/ lmbench/ 测试/ 发现/ ,/ 随机/ 访问/ L3Cache/ 的/ 开销/ 为/ 26.45/ ns/ ,/ 而/ 对应/ 的/ 访问/ 主存/ 的/ 开销/ 为/ 109.93/ ns/ ./ 因此/ 为了/ 提高/ 通信/ 效率/ ,/ 需要/ 尽可能/ 地/ 利用/ 共享/ Cache/ 进行/ 核/ 之间/ 的/ 数据传输/ ./ 核间/ 通过/ 共享/ Cache/ 高速传输/ 的/ 性能/ 直接/ 体现/ 到/ MPI/ 的/ 点到点/ 通信/ 性能/ 上面/ ,/ 使用/ IMB/ 测试程序/ 测试/ 点到点/ 通信/ 性能/ 发现/ ,/ 传输/ 8Bytes/ 消息/ ,/ 片内/ 传输/ 延迟/ 为/ 0.58/ μ/ s/ ,/ 片间/ 传输/ 延迟/ 为/ 0.74/ μ/ s/ ./ 这/ 0.16/ μ/ s/ 来自/ 于片/ 内/ 通信/ 和/ 片/ 间通信/ 的/ 性能/ 差异/ ,/ 因此/ 为了/ 提高/ 通信/ 系统/ 性能/ ,/ 需要/ 尽可能/ 利用/ 片内/ 通信/ 进行/ 数据/ 传递/ ./ 另一方面/ ,/ SMP/ 系统/ 内部/ 的/ 数据传输/ 最后/ 表征/ 为/ Cache/ -/ to/ -/ Cache/ 数据/ 操作/ ,/ 因此/ Cache/ -/ to/ -/ Cache/ 的/ 传输/ 性能/ 对/ 小/ 数据传输/ 性能/ 非常/ 关键/ ./ Cache/ -/ to/ -/ Cache/ 的/ 性能/ 决定/ 于/ 传输/ 总线/ 的/ 性能/ ,/ 由于/ 多核/ 的/ 系统总线/ 集成/ 于/ 芯片/ 内部/ ,/ 芯片/ 内部/ 系统总线/ 的/ 速度/ 要/ 远大于/ 芯片/ 之间/ 系统总线/ 速度/ ,/ 因此/ 多核/ 内部/ Cache/ -/ to/ -/ Cache/ 传输速度/ 会/ 有/ 很大/ 的/ 提升/ ./ 本文/ 使用/ c2cbench/ 测试/ 了/ 多/ 核/ 内部/ 和/ 芯片/ 之间/ 的/ Cache/ -/ to/ -/ Cache/ 操作/ 的/ 性能/ 开销/ ,/ 测试数据/ 为/ 128KB/ ,/ 分块/ 大小/ 8KB/ ,/ 测试/ 结果/ 发现/ ,/ 片/ 内核/ 之间/ 传输/ 时间/ 为/ 2.32/ μ/ s/ ,/ 而/ 芯片/ 间/ 传输/ 时间/ 为/ 5.13/ μ/ s/ ./ 这/ 验证/ 了/ 芯片/ 内部/ 和/ 芯片/ 之间/ 的/ Cache/ -/ to/ -/ Cache/ 操作/ 的/ 性能/ 差异/ ./ 3.2/ 内存/ 和/ Cache/ 的/ 竞争/ 由于/ 处理器/ 的/ 发展/ 速度/ 远快/ 于/ 内存/ 的/ 发展/ 速度/ ,/ “/ 内存/ 墙/ ”/ 的/ 问题/ 一直/ 存在/ ./ 多核/ 处理器/ 在/ 一个/ 芯片/ 内部/ 集成/ 多个/ 核/ ,/ 使得/ 多个/ 核/ 共享内存/ 带宽/ ./ 如果/ 没有/ 很/ 好/ 的/ 控制/ ,/ 共享/ 带来/ 的/ 内存/ 竞争/ (/ memorycontention/ )/ 会/ 极大/ 地/ 降低/ 内存/ 访问/ 的/ 性能/ ./ 为了/ 检验/ 内存/ 竞争/ 带来/ 的/ 访存/ 性能/ 的/ 降低/ ,/ 本文/ 使用/ STREAM/ 测试/ 了/ 片/ 内/ 分布/ 不同/ 进程/ 数的模/ Page4/ 式/ 下/ 的/ 内存/ 带宽/ ./ 将/ 16/ 个/ 进程/ 分布/ 到/ 不同/ 的/ 节点/ CPU/ 芯片/ 和/ 核上/ ,/ 使用/ N/ ×/ S/ ×/ C/ 来/ 表示/ 不同/ 的/ 配置/ ,/ C/ 越大/ 表示/ 一个/ 芯片/ 内部/ 分布/ 了/ 越/ 多/ 的/ 进程/ ,/ 因此/ 也/ 更/ 有/ 可能/ 导致/ 内存/ 竞争/ ./ 从图/ 1/ (/ a/ )/ 中/ 的/ 测试/ 结果/ 可以/ 看出/ ,/ 如果/ 将/ 进程/ 分布/ 到/ 不同/ 的/ 芯片/ 上/ ,/ 由于/ 每个/ 进程/ 能够/ 独立/ 地/ 使用/ 内存/ 带宽/ ,/ 不/ 存在/ 内存/ 竞争/ ,/ 因此/ 16/ ×/ 1/ ×/ 1/ ,/ 8/ ×/ 2/ ×/ 1/ ,/ 4/ ×/ 4/ ×/ 1/ 这/ 3/ 种/ 情况/ 图/ 1/ 竞争/ 对/ 性能/ 的/ 影响/ 另一方面/ ,/ 多核/ 处理器/ 内部/ 的/ 共享/ Cache/ 尽管/ 能够/ 提高/ 核心/ 之间/ 的/ 数据/ 传输速度/ ,/ 但是/ 由于/ 工艺/ 的/ 限制/ ,/ 共享/ Cache/ 一般/ 容量/ 有限/ ./ 多个/ 核/ 共享/ 操作/ 共享/ Cache/ ,/ 很/ 容易/ 由于/ 冲突/ 缺失/ (/ conflictmiss/ )/ 和/ 容量/ 缺失/ (/ capacitymiss/ )/ 导致/ Cache/ 缺失/ 率/ 增大/ ,/ 从而/ 带来/ 性能/ 的/ 下降/ ./ 本文/ 采用/ 测试程序/ 测试/ Cache/ 竞争/ 带来/ 的/ 性能/ 下降/ ,/ 测试/ 模式/ 为/ 多个/ 进程/ 并发/ 读写/ 不同/ 的/ 内存/ 块/ ,/ 记录/ 操作/ 所/ 耗费/ 的/ 时间/ ./ 分别/ 测试/ 了/ 一个/ 芯片/ 内部/ 存在/ 1/ ~/ 4/ 个/ 进程/ 的/ 情况/ ,/ 读写/ 内存/ 块/ 大小/ 为/ 256KB/ 、/ 512KB/ 和/ 1MB/ 、/ 2MB/ 的/ 情况/ ./ 从图/ 1/ (/ b/ )/ 的/ 测试/ 结果/ 中/ 可以/ 看出/ ,/ 如果/ 程序/ 访问/ 集/ 小于/ CPU/ 核/ 私有/ 的/ L2Cache/ 大/ 小时/ (/ 图中/ 256KB/ 的/ 情况/ )/ ,/ 由于/ 各个/ 核/ 访问/ 互相/ 不/ 冲突/ ,/ 因此/ 操作/ 时间/ 基本相同/ ./ 当/ 进程/ 的/ 访问/ 集/ 大于/ L2Cache/ 大小/ ,/ 使用/ 到/ 共享/ L3Cache/ 时/ (/ 512KB/ ,/ 1MB/ 的/ 情况/ )/ ,/ 芯片/ 内部/ 存在/ 更/ 多/ 的/ 进程/ 会/ 带来/ 更加/ 严重/ 的/ Cache/ 冲突/ ,/ 因此/ 操作/ 时间/ 会/ 随着/ 进程/ 数/ 的/ 增加/ 而/ 变大/ ./ 当/ 进程/ 访问/ 集/ 大于/ L3Cache/ 时/ (/ 2MB/ 的/ 情况/ )/ ,/ 由于/ Cache/ 容量/ 限制/ 带来/ 的/ 容量/ 缺失/ ,/ 导致/ 了/ Cache/ 抖动/ ,/ 使得/ 访问/ 性能/ 严重/ 下降/ ,/ 由/ 2/ 个/ 进程/ 操作/ 时间/ 427.11/ μ/ s/ 增长/ 到/ 3/ 个/ 进程/ 时/ 的/ 696.99/ μ/ s/ ./ 这/ 也/ 就/ 验证/ 了/ 共享/ Cache/ 竞争/ 带来/ 的/ 性能/ 下降/ ./ 3.3/ 多/ 核对/ 集合/ 通信/ 性能/ 的/ 影响/ 由于/ 共享内存/ 对/ 通信/ 系统/ 带来/ 了/ 两种/ 冲突/ 的/ 性能/ 影响/ ,/ 而/ 集合/ 通信/ 为/ 多个/ 进程/ 参与/ 通信/ 的/ 过程/ ,/ 更下/ 内存/ 带宽/ 基本相同/ ./ 而/ 当/ 一个/ 芯片/ 内部/ 集中/ 了/ 2/ 个/ 进程/ 共享内存/ 带宽/ 时/ (/ 2/ ×/ 4/ ×/ 2/ 的/ 配置/ )/ ,/ 就/ 带来/ 了/ 1188MB/ // s/ 的/ 访存/ 性能/ 下降/ ./ 当/ 芯片/ 内部/ 集中/ 了/ 4/ 个/ 进程/ 时/ (/ 1/ ×/ 4/ ×/ 4/ 的/ 配置/ )/ ,/ 由于/ 多个/ 进程/ 并发/ 访问/ 带来/ 了/ 严重/ 的/ 内存/ 竞争/ ,/ 访存性/ 降低/ 了/ 13979MB/ // s/ ./ 该/ 结果/ 证实/ 了/ 内存/ 竞争/ 导致/ 了/ 性能/ 严重/ 下降/ ./ 容易/ 在/ 多/ 核/ 环境/ 下/ 产生/ 竞争/ ./ 另一方面/ ,/ 由于/ 现有/ 的/ 操作系统/ 在/ 多/ 核/ SMP/ 系统/ 上面/ 使用/ 和/ 在/ SMP/ 系统/ 中/ 相同/ 的/ 方式/ 支持/ 共享内存/ ,/ 因此/ 可以/ 将/ SMP/ 机群/ 上/ 的/ 基于/ 共享内存/ 的/ 集合/ 通信/ 优化/ 算法/ 平滑/ 移植/ 到/ 多/ 核/ SMP/ 系统/ 中/ ./ 但是/ 由于/ 现有/ 集合/ 通信/ 优化/ 算法/ 并/ 不/ 区分/ 多核/ 环境/ 下/ 的/ 片/ 内/ 通信/ 和/ 片/ 间通信/ ,/ 可能/ 会/ 导致/ 集合/ 通信/ 的/ 性能/ 瓶颈/ ./ 因此/ 有/ 必要/ 研究/ 多核/ 环境/ 对于/ 集合/ 通信/ 到底/ 带来/ 了/ 什么样/ 的/ 影响/ ,/ 这/ 对于/ 后续/ 集合/ 通信/ 的/ 优化/ 具有/ 重要/ 的/ 指导意义/ ./ 本文/ 使用/ MPI/ _/ Alltoall/ 来/ 验证/ 多/ 核对/ 集合/ 通信/ 的/ 影响/ ./ 使用/ S/ ×/ C/ 来/ 表示/ 进程/ 分布/ 到/ S/ 个/ 芯片/ 和/ C/ 个/ 核上/ 的/ 映射/ 方式/ ./ C/ 越大/ 表示/ 芯片/ 内部/ 存在/ 更/ 多/ 的/ 处理/ 核/ ./ 测试/ 结果/ 如图/ 2/ 所示/ ,/ 从/ 结果/ 中/ 可以/ 看出/ ,/ 在/ 小/ 消息/ 的/ 时候/ ,/ 由于/ 利用/ 到/ 多/ 核/ 内部/ 的/ 快速/ 数据通路/ ,/ 将/ 更/ 多/ 的/ 进程/ 集中/ 到/ 芯片/ 内部/ ,/ 可以/ 利用/ 高速/ 的/ 片/ 内/ 通信/ ,/ 因此/ ,/ 1/ ×/ 4/ 的/ 情况/ 在/ 小/ 消息/ 的/ 时候/ 延迟/ 比/ 4/ ×/ 1/ 的/ 情况/ 要/ 低/ ./ 当/ 消息/ 变大/ 的/ 时候/ ,/ 由于/ 多核/ 共享/ Cache/ 和/ 内存/ 竞争/ 带来/ 了/ 严重/ 的/ 性能/ 下降/ ,/ 最终/ 带来/ 了/ 集合/ 通信/ 的/ 性能/ 下降/ ,/ 而/ 将/ 进程/ 分布/ 到/ 不同/ 的/ 芯片/ 上/ ,/ 能够/ 利用/ 独立/ 的/ Cache/ 和/ 内存/ 带宽/ ,/ 性能/ 反而/ 比/ 多个/ 进程/ 集中/ 在/ 一个/ 芯片/ 的/ 情况/ 好/ ,/ 因此/ 图中/ 8MB/ 的/ 1/ ×/ 4/ 情况/ 的/ 延迟/ 远高于/ 4/ ×/ 1/ 的/ 情况/ 的/ 延迟/ ./ Page5/ 图/ 2Cache/ 竞争/ 效果/ 综上所述/ ,/ 为了/ 在/ 多/ 核/ 环境/ 下/ 实现/ 高效/ 集合/ 通信/ ,/ 对于/ 小/ 消息/ 要/ 尽可能/ 地/ 利用/ 快速/ 的/ 片/ 内/ 通信/ ;/ 而/ 对于/ 大/ 消息/ ,/ 则/ 需要/ 尽可能/ 地/ 降低/ Cache/ 和/ 内存/ 的/ 竞争/ 带来/ 的/ 性能/ 下降/ ./ 4/ 多核/ 感知/ 的/ 集合/ 通信/ 算法/ 为了/ 提高/ 集合/ 通信/ 在/ 多/ 核/ 环境/ 下/ 的/ 可扩展性/ 和/ 性能/ ,/ 本文/ 针对/ 多核/ 的/ 特点/ 提出/ 了/ 多层次/ 的/ 集合/ 通信/ 算法/ 、/ 限制/ 并发/ 、/ NUMA/ 感知/ 和/ Cache/ 友好/ 的/ 优化/ 技术/ ./ 分别/ 在/ MPI/ _/ Barrier/ 、/ MPI/ _/ Bcast/ 和/ MPI/ _/ Alltoall/ 中/ 进行/ 实现/ ,/ 下面/ 将/ 分别/ 描述/ 多核/ 感知/ 的/ 集合/ 通信/ 算法/ ./ 4.1/ MPI/ _/ BarrierMPI/ _/ Barrier/ 用于/ 多个/ 进程/ 之间/ 的/ 同步操作/ ,/ 由于/ 进行/ Barrier/ 操作/ 时/ ,/ 所有/ 其他/ 程序/ 均/ 需/ 阻塞/ 直到/ Barrier/ 操作/ 完成/ ,/ 现有/ 的/ 基于/ 共享内存/ 的/ MPI/ _/ Barrier/ 算法/ 采用/ 两层/ 通信/ 的/ 方式/ 实现/ :/ (/ 1/ )/ 节点/ 间/ 同步/ 阶段/ :/ 用于/ 节点/ 级首/ 进程/ 之间/ 的/ 同步操作/ ./ 相应/ 的/ 优化/ 有/ OSU/ 大学/ [/ 4/ ]/ 采用/ RDMA/ 操作/ 直接/ 实现/ Barrier/ 的/ 数据/ 交互/ ,/ 提高/ 了/ 节点/ 间/ 的/ 性能/ ./ (/ 2/ )/ 节点/ 内/ 同步/ 阶段/ :/ 采用/ 了/ 基于/ 共享内存/ 的/ gather/ // scatter/ 双/ 队列/ 算法/ [/ 10/ ]/ 进行/ 实现/ ./ 现有/ 基于/ 共享内存/ 的/ 双/ 队列/ 算法/ 中/ ,/ 由于/ gather/ 和/ scatter/ 阶段/ 使用/ 了/ 两个/ 不同/ 的/ 队列/ ,/ 因此/ Cache/ 缺失/ 率/ 提高/ 会/ 带来/ Barrier/ 操作/ 的/ 性能/ 下降/ ./ 本文/ 使用/ 的/ 算法/ 中/ 考虑/ 到/ gather/ 和/ scatter/ 两个/ 阶段/ 的/ 顺序/ 性/ ,/ 使用/ 同一个/ 队列/ 来/ 进行/ gather/ 和/ scatter/ 操作/ ,/ 减少/ 了/ 队列/ 占用/ 空间/ ,/ 提高/ 了/ 共享/ Cache/ 利用率/ ./ 为了/ 使/ MPI/ _/ Barrier/ 能够/ 感知/ 到/ 多/ 核/ 的/ 片/ 内/ 结构/ ,/ 本/ 算法/ 将/ 传统/ 的/ 片/ 内/ 、/ 片间/ 两层/ 算法/ 进行/ 扩展/ ,/ 实现/ 了/ 多层次/ 的/ 集合/ 通信/ ./ MPI/ _/ Barrier/ 算法/ 实现/ 仍然/ 分为/ gather/ 和/ scatter/ 两个/ 阶段/ ,/ 同时/ 将/ gather/ // scatter/ 的/ 操作/ 分为/ 3/ 层/ :/ 片内/ 、/ 节点/ 内/ 和/ 芯片/ 间/ ./ 而/ 算法/ 根据/ 进程/ 所在/ 层次/ 和/ 处理/ 的/ 任务/ 不同/ ,/ 将/ 进程/ 分为/ 3/ 种/ :/ (/ 1/ )/ 节点/ 级首/ 进程/ ./ 其/ 首先/ 负责/ 芯片级/ 主/ 进程/ 的/ gather/ 操作/ ,/ 如果/ gather/ 操作/ 完成/ 表示/ 本/ 芯片/ 内部/ gather/ 操作/ 完成/ ,/ 然后/ 首/ 进程/ 之间/ 进行/ gather/ 和/ scatter/ 操作/ 以/ 完成/ 它们/ 之间/ 的/ 同步操作/ ,/ 在/ 首/ 进程/ 之间/ 的/ 同步/ 完成/ 之后/ ,/ 通知/ 芯片级/ 主/ 进程/ ,/ 开始/ scatter/ 操作/ ./ (/ 2/ )/ 芯片级/ 主/ 进程/ ./ 其/ 负责/ 芯片/ 内部/ 的/ 子/ 进程/ 都/ 完成/ gather/ 操作/ ,/ 然后/ 向/ 节点/ 级首/ 进程/ 通知/ gather/ 操作/ 完成/ ,/ 等待/ 节点/ 级首/ 进程/ 分发/ scatter/ 操作/ ,/ 在/ 接收/ 到首/ 进程/ 发出/ 的/ scatter/ 操作/ 之后/ ,/ 向子/ 进程/ 分发/ scatter/ 操作/ ./ (/ 3/ )/ 子/ 进程/ ./ 其/ 负责/ 向/ 自己/ 对应/ 的/ 芯片级/ 主/ 进程/ 通知/ 本/ 进程/ 完成/ gather/ 操作/ ,/ 同时/ 等待/ 芯片级/ 主/ 进程/ 通知/ 的/ scatter/ 操作/ ,/ 在子/ 进程/ 获取/ 到/ scatter/ 操作/ 通知/ ,/ 则/ 表示/ 本次/ Bar/ -/ rier/ 操作/ 完成/ ./ 多层/ 的/ 集合/ 通信/ 算法/ 的/ 层次/ 较/ 好/ 地/ 符合/ 了/ 多/ 核/ 的/ 三层/ 结构/ ,/ 相比/ 现有/ 算法/ ,/ 能够/ 将/ 更/ 多/ 的/ 通信/ 操作/ 集中/ 到片/ 内/ 通信/ 上/ 完成/ ,/ 因此/ 能够/ 提高/ MPI/ _/ Barrier/ 的/ 通信/ 效率/ ./ 4.2/ MPI/ _/ BcastMPI/ _/ Bcast/ 用于/ 将主/ 进程/ 中/ 的/ 数据/ 广播/ 到/ 所有/ 进程/ 上/ ./ MPI/ _/ Bcast/ 的/ 算法/ 实现/ 中/ ,/ 在/ 小/ 消息/ 时/ 为了/ 降低/ 通信/ 延迟/ ,/ 直接/ 采用/ binomialtree/ 算法/ 进行/ 实现/ ;/ 针对/ 大/ 消息/ ,/ 为了/ 提高/ 通信/ 的/ 并发/ 性/ ,/ 节点/ 间/ 的/ 进程/ 之间/ 采用/ 了/ scatter/ -/ allgather/ 算法/ 实现/ ,/ 节点/ 内/ 进程/ 之间/ 采用/ 共享内存/ 的/ 方式/ ,/ 首/ 进程/ 首先/ 将/ 数据/ 拷贝到/ 共享内存/ ,/ 然后/ 其它/ 进程/ 直接/ 从/ 共享内存/ 并发/ 拷贝/ 数据/ ./ 现有/ 算法/ 的/ 大/ 消息/ 通信/ 存在/ 两个/ 问题/ :/ 一方面/ ,/ 所有/ 进程/ 同时/ 从/ 共享内存/ 中/ 拷贝/ 数据/ ,/ 这种/ 并发/ 拷贝/ 会/ 带来/ 严重/ 的/ 内存/ 竞争/ ,/ 从而/ 大大降低/ 了/ 通信/ 系统/ 的/ 性能/ ./ 另一方面/ ,/ 由于/ 现有/ 算法/ 的/ 共享内存/ 分配/ 一般/ 是/ 由首/ 进程/ 分配/ ,/ 对于/ NUMA/ 系统/ 来说/ ,/ 共享内存/ 位于/ 靠近/ 首/ 进程/ 的/ 位置/ ,/ 这样/ 多个/ 进程/ Page6/ 访问/ 该/ 块内存/ 只能/ 利用/ NUMA/ 系统/ 的/ 一个/ 内存/ 控制器/ 的/ 带宽/ ,/ 而/ 不/ 能够/ 利用/ 系统/ 中/ 的/ 所有/ 内存/ 带宽/ ,/ 因此/ 限制/ 了/ MPI/ _/ Bcast/ 的/ 性能/ ./ 本文/ 使用/ 了/ 限制/ 并发/ 、/ NUMA/ 感知/ 的/ 集合/ 通信/ 优化/ 方法/ 来/ 优化/ MPI/ _/ Bcast/ 的/ 大/ 消息/ 性能/ ./ 首先/ 在/ 共享内存/ 分配/ 的/ 时候/ ,/ 对/ 内存/ 分段/ ,/ 每/ 一段/ 使用/ 图/ 3/ 限制/ 并发/ 、/ NUMA/ 感知/ MPI/ _/ Bcast/ 示意图/ 在/ 本/ 示意图/ 中/ ,/ 每一/ 步骤/ 中/ 限制/ 并发/ 访问/ 共享内存/ 段/ 的/ 并发/ 度为/ 1/ ,/ 步骤/ 0/ 时/ P0/ 进程/ 组/ 访问/ P0/ 临近/ 的/ 共享内存/ 块/ 0/ ;/ 步骤/ 1/ 时/ 访问/ 下/ 一块/ 共享内存/ 块/ 1/ ;/ 步骤/ 2/ 时/ 访问/ 共享内存/ 块/ 2/ ,/ 步骤/ 3/ 时/ 访问/ 共享内存/ 块/ 3/ ./ 其它/ 进程/ 类推/ ,/ 在/ 这/ 4/ 步/ 完成/ 之后/ ,/ 每/ 一个/ 进程/ 都/ 获取/ 到/ 全部/ Bcast/ 的/ 数据/ ./ 在/ 限制/ 并发/ 度为/ k/ 的/ 时候/ ,/ P0/ 被/ 看作/ 是/ k/ 个/ 进程/ 的/ 组合/ ,/ 此时/ 同时/ 访问/ 一个/ 共享内存/ 块/ 的/ 进程/ 为/ k/ ./ 由于/ 本/ 算法/ 限制/ 了/ 并发/ 访问/ 同一/ 块内存/ 块/ 的/ 并发/ 度为/ k/ ,/ 而/ 不是/ 现有/ 算法/ 的/ 节点/ 内/ 进程/ 数/ n/ ,/ 因此/ 能够/ 极大/ 地/ 降低/ 内存/ 竞争/ ./ 另一方面/ 由于/ 共享内存/ 分配/ 到/ NUMA/ 系统/ 的/ 不同/ 内存/ 中/ 去/ ,/ 可以/ 利用/ NUMA/ 系统/ 中/ 的/ 所有/ 内存/ 控制器/ 的/ 带宽/ ,/ 提高/ 了/ Bcast/ 的/ 性能/ ./ 本/ 优化/ 算法/ 只/ 改变/ 了/ 节点/ 内/ 对/ 共享内存/ 的/ 访问/ 顺序/ ,/ 节点/ 间/ 仍然/ 使用/ 原有/ 算法/ 中首/ 进程/ 组/ 之间/ 使用/ 的/ scatter/ -/ allgather/ 算法/ 进行/ 数据/ 交互/ ./ 4.3/ MPI/ _/ AlltoallMPI/ _/ Alltoall/ 算法/ 用于/ 进程/ 组/ 的/ 所有/ 进程/ 两/ 两/ 进行/ 数据/ 交互/ ./ 由于/ 单个/ 算法/ 不/ 能够/ 满足/ MPI/ _/ Alltoall/ 的/ 性能需求/ ,/ 因此/ 现有/ 实现/ 中/ ,/ 对于/ 小/ 消息/ 采用/ 了/ Bruck/ 算法/ ,/ 对于/ 中等/ 消息/ 采用/ 了/ Irecv/ -/ Isend/ 的/ 算法/ ,/ 对于/ 大/ 消息/ 的/ 时候/ 采用/ pair/ -/ wiseexchange/ 算法/ [/ 11/ ]/ ./ 在/ 3.3/ 节中/ 可以/ 看到/ ,/ 由于/ Cache/ 和/ Memory/ 的/ 竞争/ 会/ 带来/ 中等/ 消息/ 和/ 大/ 消息/ 情况/ 下/ MPI/ _/ Alltoall/ 性能/ 的/ 严重/ 下降/ ./ 为了/ 降低/ 这种/ 性能/ 损失/ ,/ 本文/ 提出/ 了/ Cache/ 感知/ 的/ 优化/ 算法/ ,/ 利用/ Data/ -/ tiling/ 技/ numactl/ 库/ 控制/ 该段/ 内存/ 位于/ 靠近/ 相应/ 进程/ 的/ 内存/ 中/ ./ 当首/ 进程/ 完成/ 向/ 共享内存/ 的/ 数据/ 拷贝/ 之后/ ,/ 各个/ 进程/ 在/ 从/ 共享内存/ 中/ 拷贝/ 数据/ 时/ ,/ 限制/ 每/ 一个/ 共享内存/ 段/ 同时/ 并发/ 访问/ 的/ 进程/ 数/ 的/ 个数/ ,/ 具体/ 的/ 算法/ 如图/ 3/ 所示/ ./ 术/ [/ 12/ ]/ ,/ 将/ MPI/ _/ Alltoall/ 中/ 的/ 每/ 一次/ 通信/ 的/ 收发/ 大/ 数据/ 块/ 进行/ 切分/ ,/ 分为/ 多个/ 适合/ 共享/ Cache/ 大小/ 的/ 小/ 数据/ 块/ 进行/ 通信/ 分发/ ./ 这种/ 方式/ 能够/ 降低/ 大/ 数据/ 访问/ 由于/ Cache/ 竞争/ 带来/ 的/ Cache/ 缺失/ ,/ 提高/ 共享/ Cache/ 的/ 利用率/ ,/ 减少/ 由于/ Cache/ 缺失/ 带来/ 的/ 内存/ 访问/ ,/ 因此/ 能够/ 提高/ MPI/ _/ Alltoall/ 的/ 集合/ 通信/ 性能/ ./ 5/ 实验/ 方法/ 和/ 结果/ 本/ 实验/ 的/ 实验/ 平台/ 为/ 曙光/ 5000A/ 系统/ ,/ 每个/ 节点/ 为/ 四路/ 四核/ AMDBarcelona8347HE1/ ./ 9GHz/ ,/ 带有/ 64GB/ 的/ DDR2667MHz/ 内存/ ,/ 使用/ MellanoxConnectXDDRMT2541820GbpsHCA/ 将/ 各个/ 节点/ 连接起来/ ,/ 顶级/ 交换/ 级/ 为/ Voltari288/ 口/ IB/ 交换机/ ,/ 使用/ OFED/ -/ 1.4/ 版本/ ,/ 操作系统/ 为/ SLES10sp2/ ,/ MPI/ 环境/ 为/ MVAPICH/ -/ 1.1/ ,/ 编译器/ 为/ gcc4/ ./ 1.2/ ./ 5.1/ MPI/ _/ Barrier/ 为了/ 测试/ 各种/ 优化/ 的/ 效果/ ,/ 本/ 节/ 对比/ 了/ 3/ 种/ 算法/ :/ (/ 1/ )/ 原始/ 算法/ ./ 该/ 算法/ 为/ MVAPICH/ -/ 1.1/ 使用/ ,/ 使用/ 双/ 队列/ scatter/ // gather/ 算法/ ,/ 队列/ 中/ 的/ 项/ 放在/ 连续/ 的/ 内存/ 区中/ ./ (/ 2/ )/ 数据/ 放置/ 优化/ 算法/ ./ 该/ 算法/ 使用/ 单/ 队列/ ,/ 同时/ 优化/ 了/ 单/ 队列/ 中/ 每/ 一个/ 单元/ 的/ 内存/ 放置/ 策略/ ,/ 使得/ 每一项/ 独占/ 一个/ Cache/ 行/ ./ 该/ 算法/ 和/ 原始/ 算法/ 比较/ 可以/ 获得/ Cache/ 优化/ 技术/ 的/ 效果/ ./ (/ 3/ )/ 多核/ 优化/ 的/ 算法/ ./ 该/ 算法/ 不仅仅/ 对/ 队列/ 的/ 放置/ 进行/ 了/ Cache/ 行/ 的/ 优化/ ,/ 同时/ 实现/ 了/ 4.1/ 节/ 的/ 多层次/ 优化/ 算法/ ./ 对比/ 可以/ 得到/ 多层次/ 优化/ 技术/ 的/ 效/ Page7/ 果/ ./ 本/ 实验/ 使用/ 的/ 测试程序/ 为/ IMB/ (/ IntelMicro/ -/ benchmark/ )/ 3.2/ ,/ 测试/ MPI/ _/ Barrier/ 的/ 性能/ ./ 测试/ 结果/ 如图/ 4/ 所示/ ,/ 从图/ 中/ 可以/ 看出/ ,/ 数据/ 放置/ 优化/ 算法/ 由于/ 更好/ 地/ 组织/ 了/ 单/ 队列/ 结构/ ,/ 降低/ 了/ Cache/ 假/ 相关/ 导致/ 的/ Cache/ 缺失/ ,/ 因此/ 能够/ 在/ 16/ 进程/ 的/ 时候/ 将/ MPI/ _/ Barrier/ 的/ 开销/ 从/ 5.7/ μ/ s/ 降低/ 到/ 4.97/ μ/ s/ ./ 而多核/ 优化/ 算法/ 采用/ 了/ 多层次/ 通信/ 优化/ ,/ 进一步/ 地/ 提高/ 了/ MPI/ _/ Barrier/ 的/ 性能/ ,/ 仅为/ 2.28/ μ/ s/ ./ 相比/ 原始/ 算法/ 带来/ 了/ 60/ %/ 的/ 性能/ 提升/ ./ 当/ 进程/ 数据/ 进一步/ 增加/ 的/ 时候/ ,/ 节点/ 间/ 采用/ RDMA/ 进行/ Barrier/ 操作/ 的/ 收集/ 和/ 分发/ ,/ 节点/ 内/ 集合/ 通信/ 优化/ 算法/ 的/ 效果/ 仍然/ 具有/ 较/ 好/ 的/ 可扩展性/ ,/ 在/ 256/ 个/ 进程/ 时多核/ 优化/ 算法/ 仍然/ 能够/ 带来/ 11.03/ %/ 的/ 性能/ 提升/ ,/ 这/ 也/ 验证/ 了/ 本/ 集合/ 通信/ 算法/ 优化/ 效果/ 的/ 可扩展性/ ./ 为了/ 获得/ MPI/ _/ Barrier/ 性能/ 提高/ 的/ 原因/ ,/ 使用/ Oprofile/ 测试/ 了/ 平均/ 一次/ Barrier/ 操作/ 的/ L2CacheMiss/ 和/ CPU/ 芯片/ 间/ 的/ Cache/ -/ to/ -/ Cache/ 传输/ ,/ 测试/ 结果/ 如表/ 1/ 所示/ ./ 可以/ 看出/ ,/ 多核/ 优化/ 算法/ 使/ L2CacheMiss/ 从/ 8.5/ // 次/ 降低/ 到/ 6.9/ // 次/ ,/ 这/ 表明/ 多核/ 感知/ 的/ 算法/ 提高/ 了/ Cache/ 利用率/ ,/ 另一方面/ ,/ 使得/ 芯片/ 之间/ 的/ Cache/ -/ to/ -/ Cache/ 操作/ 从/ 6.1/ // 次/ 降低/ 到/ 4.9/ // 次/ ,/ 这/ 表明/ 多层次/ 算法/ 将/ Barrier/ 操作/ 聚合/ 到/ 芯片/ 内部/ ,/ 降低/ 了/ 芯片/ 之间/ 的/ Cache/ -/ to/ -/ Cache/ 操作/ ,/ 因此/ 带来/ 了/ 多/ 核/ 感知/ 算法/ 的/ 性能/ 提升/ ./ L2CacheMissCache/ -/ to/ -/ CacheTransfer6/ ./ 15.2/ MPI/ _/ Bcast/ 为了/ 测试/ MPI/ _/ Bcast/ 优化/ 技术/ 的/ 效果/ ,/ 本文/ 使用/ 几种/ MPI/ _/ Bcast/ 实现/ 进行/ 比较/ :/ (/ 1/ )/ 原始/ 算法/ ./ 这种/ 算法/ 中/ ,/ 节点/ 内/ 操作/ 小/ 消息/ 采用/ binomialtree/ 算法/ ,/ 大/ 消息/ 采用/ 了/ 并发/ 拷贝/ 的/ 方式/ 从/ 共享内存/ 中间/ 获取数据/ ./ (/ 2/ )/ 限制/ 并发/ 算法/ ./ 该/ 算法/ 针对/ 大/ 消息/ 的/ 并发/ 拷贝/ 的/ 并发/ 度/ 进行/ 限制/ ,/ 并/ 不/ 改变/ 共享/ 缓冲区/ 的/ 分配/ 方式/ ,/ 和/ 原始/ 算法/ 相比/ ,/ 可以/ 得到/ 限制/ 并发/ 方式/ 对/ 性能/ 的/ 影响/ ./ (/ 3/ )/ 多核/ 感知/ 的/ 算法/ ./ 在/ 该/ 算法/ 中/ ,/ 首先/ 对/ 共享内存/ 分段/ ,/ 同时/ 对/ 每/ 一段/ 内存/ 进行/ NUMA/ 感知/ 的/ 放置/ ,/ 在/ 访问/ 时/ 限制/ 了/ 对/ 每/ 一段/ 内存/ 并发/ 访问/ 的/ 并发/ 度/ ./ 实验/ 采用/ IMB3/ ./ 2/ 测试程序/ 进行/ 测试/ ,/ 测试/ 了/ 16/ 进程/ 的/ 情况/ ,/ 测试/ 结果/ 如图/ 5/ 所示/ ./ 从/ 结果/ 中/ 可以/ 看出/ ,/ 将/ 并发/ 访问/ 共享内存/ 的/ 并发/ 度/ 从/ 16/ 降到/ 4/ ,/ 能够/ 将/ MPI/ _/ Bcast/ 在/ 512KB/ 运行/ 时间/ 缩短/ 15/ %/ ,/ 在/ 16MB/ 的/ 时候/ ,/ 能够/ 缩短/ 3.5/ %/ ,/ 这种/ 性能/ 提升/ 是/ 由于/ 限制/ 了/ 并发/ ,/ 降低/ 了/ 内存/ 竞争/ 导致/ 的/ 开销/ ./ 对于/ 多核/ 优化/ 的/ 算法/ ,/ 由于/ 使用/ NUMA/ 感知/ 的/ 数据/ 访问/ ,/ 同时/ 利用/ 了/ NUMA/ 系统/ 中/ 的/ 4/ 个/ 内存/ 控制器/ ,/ 提高/ 了/ 数据/ 访问/ 的/ 并发/ 度/ ,/ 同时/ 由于/ 限制/ 一个/ 内存/ 控制器/ 上/ 的/ 并发/ 访问/ 度为/ 4/ ,/ 大大降低/ 了/ 内存/ 竞争/ ,/ 因此/ 带来/ 了/ 很/ 高/ 的/ 性能/ 提升/ ,/ 从图/ 中/ 可以/ 看出/ ,/ 在/ 128KB/ 的/ 时候/ ,/ 带来/ 了/ 34.6/ %/ 的/ 性能/ 提升/ ,/ 在/ 16MB/ 的/ 时候/ ,/ 多核/ 优化/ 算法/ 带来/ 了/ 34.58/ %/ 的/ 性能/ 提升/ ,/ 运行/ 时间/ 为/ 41648.18/ μ/ s/ ./ 5.3/ MPI/ _/ Alltoall/ 为了/ 测试/ Cache/ 友好/ 的/ 优化/ 算法/ 对/ MPI/ _/ Alltoall/ 的/ 性能/ 影响/ ,/ 本文/ 对比/ 测试/ 了/ 两种/ MPI/ _/ Alltoall/ 的/ 实现/ :/ (/ 1/ )/ 原始/ 算法/ ./ 原始/ 算法/ 在/ 大/ 消息/ 时/ 采用/ pairwise/ -/ exchange/ 算法/ ./ (/ 2/ )/ 多核/ 优化/ 算法/ ./ 本/ 算法/ 采用/ data/ -/ tiling/ 算法/ ,/ 提高/ Cache/ 的/ 利用率/ ./ 实验/ 采用/ IMB3/ ./ 2/ 进行/ 测试/ ,/ 测试/ 了/ 16/ 进程/ 时/ 的/ MPI/ _/ Alltoall/ 的/ 运行/ 时间/ ./ 测试/ 结果/ 如图/ 6/ 所示/ ,/ 从/ 结果/ 中间/ 可以/ 看出/ ,/ data/ -/ tiling/ 技术/ 能够/ 带来/ MPI/ _/ Alltoall/ 的/ 性能/ 提升/ ,/ 在/ 64KB/ 的/ 时候/ 带来/ 4/ %/ 的/ 性能/ 提升/ ,/ 在/ 16MB/ 的/ 时候/ 能够/ 带来/ 14/ %/ 的/ 性能/ 提升/ ./ 这种/ 性能/ 的/ 提升/ 主要/ 来自/ 于/ 多/ 核/ 优化/ 的/ 算法/ 有效/ 利用/ 了/ Cache/ ,/ 同/ Page8/ 时/ 相应/ 地/ 降低/ 了/ 对/ 内存/ 访问/ 的/ 需求/ ,/ 因此/ 带来/ 了/ 性能/ 的/ 提升/ ./ 6/ 结论/ 和/ 下/ 一步/ 工作/ 由于/ 多核/ 在/ 高性能/ 计算/ 中/ 得到/ 了/ 广泛应用/ ,/ 因此/ 了解/ 多/ 核对/ 集合/ 通信/ 带来/ 了/ 什么样/ 的/ 影响/ 并/ 针对/ 这些/ 特点/ 进行/ 优化/ ,/ 对多核/ 环境/ 下/ 的/ 集合/ 通信/ 具有/ 重要/ 的/ 意义/ ./ 本文/ 分析/ 了/ 多/ 核/ 环境/ 对/ 集合/ 通信/ 的/ 影响/ ,/ 一方面/ 片内/ 通信/ 的/ 快速/ 的/ 数据通路/ 能够/ 提高/ 小/ 消息/ 的/ 通信/ ,/ 因此/ 需要/ 集合/ 通信/ 算法/ 尽可能/ 利用/ 片内/ 通信/ ;/ 另一方面/ ,/ 多核/ 共享内存/ 带宽/ 和/ Cache/ 导致/ 的/ 竞争/ 会/ 严重/ 地/ 降低/ 集合/ 通信/ 的/ 性能/ ,/ 因此/ 需要/ 集合/ 通信/ 算法/ 在/ 大/ 消息/ 时/ 降低/ 内存/ 竞争/ ./ 本文/ 针对/ 多核/ 的/ 特点/ ,/ 提出/ 了/ 3/ 种/ 优化/ 方法/ :/ 多层次/ 的/ 集合/ 通信/ 算法/ 、/ 限制/ 并发/ 和/ NUMA/ 感知/ 的/ 优化/ 方法/ 以及/ Cache/ 友好/ 的/ 优化/ 方法/ ,/ 并/ 分别/ 在/ MPI/ _/ Bar/ -/ rier/ 、/ MPI/ _/ Bcast/ 、/ MPI/ _/ Alltoall/ 中/ 进行/ 了/ 验证/ ./ 实验/ 表明/ ,/ 这些/ 优化/ 方法/ 能够/ 较/ 好/ 地/ 利用/ 多核/ 的/ 特点/ ,/ 提高/ 集合/ 通信/ 的/ 性能/ ./ 在/ 16/ 进程/ 规模/ 情况/ 下/ ,/ MPI/ _/ Barrier/ 能够/ 提高/ 60/ %/ ,/ MPI/ _/ Bcast/ 能够/ 提高/ 34.58/ %/ ,/ MPI/ _/ Alltoall/ 能够/ 提高/ 14/ %/ ./ 在/ 本文/ 的/ 工作/ 基础/ 上/ ,/ 后续/ 将/ 继续/ 研究/ 如何/ 优化/ 其它/ 的/ MPI/ 集合/ 通信/ 算法/ ,/ 如/ MPI/ _/ Allgather/ 、/ MPI/ _/ Reduce/ 等/ ,/ 同时/ 将/ 在/ 大规模/ 平台/ 上面/ 测试/ 多核/ 环境/ 下/ 集合/ 通信/ 优化/ 对/ 并行/ 应用/ 性能/ 的/ 影响/ ./ 

