Page1/ 基于/ 回归/ 模型/ 的/ 高端/ 容错/ 计算机/ TPC/ -/ C/ 性能/ 估算/ 研究/ 刘迪/ 翟/ 季冬/ 陈/ 文光/ (/ 清华大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100084/ )/ 摘要/ 高端/ 容错/ 计算机/ 的/ TPC/ -/ C/ 性能/ 测试/ 由于/ 成本/ 高昂/ 且/ 时间/ 漫长/ ,/ 导致/ 市场/ 上/ 只有/ 少部分/ 产品/ 进行/ 了/ 该项/ 测试/ ,/ 无法/ 满足/ 生产商/ 和/ 购买者/ 的/ 需求/ ,/ 高端/ 容错/ 计算机领域/ 需要/ 一种/ 简便/ 快捷/ 、/ 低成本/ 的/ TPC/ -/ C/ 性能/ 估算/ 方法/ ./ 文中/ 分析/ 了/ 影响/ TPC/ -/ C/ 性能/ 的/ 各种因素/ ,/ 以近/ 5/ 年来/ 发布/ 了/ TPC/ -/ C/ 测试/ 结果/ 的/ 服务器/ 为/ 样本/ ,/ 利用/ 数理统计/ 的/ 方法/ ,/ 在/ 服务器/ TPC/ -/ C/ 性能/ 与/ 硬件/ 指标/ 之间/ 建立/ 了/ 线性/ 回归/ 模型/ ./ 优化/ 后/ 的/ 模型/ 估算/ 精度/ 达到/ 95/ %/ 以上/ ,/ 在/ 一定/ 程度/ 上/ 解释/ 了/ 服务器/ 的/ 硬件/ 指标/ 与/ TPC/ -/ C/ 性能/ 之间/ 的/ 因果关系/ ,/ 具备/ 了/ 方便/ 准确/ 地/ 估算/ TPC/ -/ C/ 性能/ 的/ 现实意义/ ./ 文中/ 所/ 提出/ 的/ 将/ 数理统计/ 的/ 方法/ 用于/ TPC/ -/ C/ 性能/ 估算/ 的/ 思路/ 以及/ 搜集/ 的/ 大量/ 相关/ 数据/ ,/ 对/ 今后/ 该项/ 研究/ 具有/ 重要/ 意义/ ./ 关键词/ TPC/ -/ C/ ;/ 性能/ 估算/ ;/ 多元/ 线性/ 回归/ ;/ 硬件/ 指标/ 1/ 引言/ 高端/ 容错/ 计算机/ 对/ 国家/ 安全/ 和/ 经济/ 发展/ 具有/ 重要/ 意义/ ./ 然而/ ,/ 我国/ 的/ 银行/ 、/ 电信/ 、/ 统计/ 等/ 重要/ 部门/ 采用/ 的/ 高端/ 容错/ 机/ 主要/ 被/ IBM/ 、/ HP/ 等/ 公司/ 的/ 产品/ 垄断/ ./ 使用/ 这些/ 服务器/ 不仅/ 价格昂贵/ ,/ 而且/ 存在/ 安全隐患/ ./ 为此/ ,/ “/ 十一五/ ”/ 期间/ ,/ 我国/ 开始/ 研制/ 国产/ 高端/ 容/ Page2/ 错/ 计算机/ ./ 目前/ 主要/ 由/ 华为/ 和/ 浪潮/ 两家/ 公司/ 负责/ 研制/ 国产/ 高端/ 容错/ 计算机/ ./ TPC/ -/ C/ 是/ 国际/ 上/ 评测/ 高端/ 容错/ 计算机/ 在线/ 事务处理/ 能力/ 事实上/ 的/ 标准/ ./ 然而/ ,/ 按照/ 该/ 标准/ ,/ 为了/ 完成/ TPC/ -/ C/ 评测/ ,/ 需要/ 搭建/ 相应/ 测试环境/ ,/ 包括/ 模拟/ 用户端/ 、/ 数据库/ 客户端/ 和/ 存储设备/ 等/ ./ 整套/ 测试环境/ 成本/ 非常/ 昂贵/ ,/ 而且/ 测试/ 周期长/ ./ 例如/ ,/ 在/ TPC/ -/ C/ 官方网站/ 发布/ 的/ 数据/ 中/ ,/ 一台/ 达到/ 200/ 万/ TPMC/ 值/ (/ TPC/ -/ C/ 评测/ 指标/ )/ 的/ 高端/ 容错/ 计算机/ ,/ 测试环境/ 的/ 开销/ 高/ 达/ 一千六百/ 万美元/ ①/ ./ 而且/ ,/ TPC/ -/ C/ 的/ 测试/ 和/ 优化/ 周期/ 需要/ 半年/ 以上/ 的/ 时间/ ./ 对/ 高端/ 容错/ 计算机/ 的/ 设计/ 人员/ ,/ 他们/ 需要/ 根据/ 不同/ 客户/ 的/ 需求/ 设计/ 不同/ 型号/ 的/ 系统/ ,/ 提供/ 合适/ 的/ 配置/ ,/ 包括/ 处理器/ 个数/ 、/ 内存大小/ 、/ 内存/ 带宽/ 等/ ./ 系统/ 设计/ 人员/ 往往/ 需要/ 在/ 系统/ 设计阶段/ 就/ 能够/ 预测/ 系统/ 的/ 在线/ 事务处理/ 能力/ ,/ 即/ TPC/ -/ C/ 性能/ ,/ 尽量避免/ 设计/ 出/ 的/ 系统/ 不/ 符合/ 客户/ 需求/ ./ 如何/ 能够/ 以较/ 低成本/ 、/ 快速/ 准确/ 地/ 预测/ 不同/ 设计方案/ 和/ 配置/ 的/ 系统/ 将来/ 的/ TPC/ -/ C/ 性能/ ,/ 这/ 对/ 厂商/ 加快/ 系统/ 研制/ 周期/ ,/ 降低/ 系统/ 研制/ 成本/ 都/ 具有/ 重要/ 意义/ ./ 对/ 高端/ 容错/ 计算机/ 的/ 用户/ 来说/ ,/ 一个/ 较为/ 精确/ 的/ 性能/ 模型/ 也/ 非常/ 重要/ ./ 例如/ ,/ 某/ 单位/ 想/ 购置/ 一套/ 高端/ 容错/ 计算机/ ,/ 要求/ 系统/ 能够/ 满足/ 每分钟/ 千万级/ 的/ 事务处理/ 能力/ ./ 然而/ 由于/ TPC/ -/ C/ 测试/ 成本/ 高且/ 测试/ 周期长/ ,/ 大/ 厂商/ 如/ IBM/ 和/ HP/ 也/ 只是/ 对/ 其/ 主流产品/ 系列/ 中/ 的/ 个别/ 机型/ 进行/ 了/ 完整/ 测试/ ,/ 小/ 厂商/ 更是/ 无力/ 支付/ 高昂/ 的/ 测试/ 开销/ ./ 新/ 产品/ 的/ 测试/ 结果/ 往往/ 要/ 滞后/ 半年/ 以上/ 才能/ 公布/ ,/ 大大降低/ 了/ 对/ 用户/ 的/ 指导意义/ ./ 对/ 用户/ 来说/ ,/ 如/ 有/ 一种/ 方法/ 能够/ 判断/ 何种/ 配置/ 的/ 系统/ 恰好/ 满足/ 其/ 需求/ ,/ 对于/ 用户/ 高效/ 准确/ 地/ 选择/ 机型/ 也/ 具有/ 重要/ 意义/ ./ 针对/ 上述/ 问题/ ,/ 本文/ 从/ TPC/ 官网/ 收集/ 了/ 近/ 5/ 年来/ 大部分/ 的/ TPC/ -/ C/ 测试数据/ 近/ 40/ 组/ ,/ 服务器/ 的/ TPMC/ 性能/ 值/ 分布/ 在/ 2/ 万到/ 600/ 万/ 之间/ ,/ 并/ 分析/ 了/ 影响/ TPC/ -/ C/ 性能/ 的/ 因素/ ,/ 收集/ 相关/ 的/ 性能指标/ ,/ 通过/ 将/ 数理统计/ 与/ TPC/ -/ C/ 负载/ 特征分析/ 相结合/ 的/ 方法/ ,/ 在/ 服务器/ 的/ TPC/ -/ C/ 性能/ 与/ 硬件/ 配置/ 参数/ 之间/ 建立/ 了/ 回归/ 模型/ ,/ 通过/ 参数/ 诊断/ ,/ 确定/ 了/ 影响/ 系统/ TPC/ -/ C/ 性能/ 的/ 主要/ 因素/ ,/ 给出/ 最后/ 预测/ 模型/ ./ 实验/ 结果表明/ ,/ 该/ 模型/ 对于/ 实验/ 中/ 验证/ 样本/ 的/ 预测/ 精度/ 达到/ 95/ %/ 以上/ ./ 本文/ 第/ 2/ 节/ 从/ TPC/ -/ C/ 负载/ 特征/ 及/ 测试环境/ 角度/ ,/ 剖析/ 影响/ TPC/ -/ C/ 性能/ 的/ 硬件/ 因素/ ;/ 第/ 3/ 节/ 确定/ 应用/ 在/ 回归/ 模型/ 中/ 的/ 硬件/ 指标/ 并/ 收集/ 相关/ 数据/ ;/ 第/ 4/ 节/ 利用/ 最小/ 二/ 乘法/ 求解/ 回归/ 参数/ ,/ 并/ 对/ 得到/ 的/ 回归/ 模型/ 做/ 相关/ 诊断/ 及/ 调整/ ,/ 最后/ 用/ 实例/ 检验/ 模型/ 的/ 准确度/ ;/ 第/ 5/ 节/ 给出/ 本文/ 相关/ 工作/ ./ 2TPC/ -/ C/ 性能/ 分析/ 2.1/ TPC/ -/ C/ 负载/ 特征/ 及/ 测试环境/ TPC/ -/ C/ (/ TransactionProcessingPerformanceCouncilBenchmark/ -/ C/ )/ 是/ 为/ 联机/ 事务处理/ 系统/ 制定/ 的/ 测试/ 标准/ ,/ 该/ 测试/ 由/ 一系列/ 基本操作/ 组成/ ,/ 这些/ 操作/ 代表/ 了/ 复杂/ 的/ OLTP/ (/ 在线/ 事物/ 处理/ On/ -/ LineTransactionProcess/ )/ 的/ 应用/ ,/ 考验/ 了/ 系统/ 在/ 这类/ 环境/ 下/ 展现/ 的/ 性能/ ./ TPC/ -/ C/ 测试/ 过程/ 模拟/ 了/ 一个/ 真实/ 应用环境/ —/ —/ —/ 描述/ 一个/ 仓库/ 供应商/ 的/ 货物/ 管理/ 行为/ ,/ 所以/ 测试者/ 可以/ 直观/ 地/ 理解/ 测试/ 基准/ 程序/ 的/ 组成/ [/ 1/ ]/ ./ 货物/ 管理/ 行为/ 包含/ 了/ 5/ 类/ 请求/ :/ 新/ 订单/ 事务/ 是/ 一个/ 重量级/ 的/ 读写/ 事务/ ,/ 并且/ 为/ 满足/ 在线/ 用户/ 的/ 操作/ 体验/ 而/ 有/ 严格/ 的/ 响应/ 时间/ 要求/ ;/ 支付/ 事务/ 是/ 一个/ 轻量级/ 的/ 读写/ 事务/ ,/ 执行/ 频率/ 高/ 并/ 要求/ 严格/ 时间/ 响应/ 来/ 满足/ 在线/ 客户/ 的/ 需求/ ;/ 订单/ 状态/ 查询/ 事务/ 是/ 一个/ 重量级/ 只读/ 数据库/ 事务/ ,/ 执行/ 频率/ 低/ 而/ 时间/ 要求/ 严格/ 来/ 满足/ 在线/ 用户/ 的/ 需求/ ;/ 发货/ 事务/ 是/ 一个/ 执行/ 度低/ 时间/ 要求/ 低/ 但/ 必须/ 要/ 完成/ 的/ 事物/ ;/ 库存/ 状态/ 查询/ 事务/ 是/ 一个/ 重量级/ 只读/ 数据库/ 事务/ ,/ 执行/ 频率/ 低/ ,/ 时间/ 要求/ 和/ 一致性/ 要求/ 都/ 低/ ./ TPC/ -/ C/ 测试/ 系统/ 包括/ 以下/ 4/ 个/ 部分/ :/ 模拟/ 用户端/ 、/ 数据库/ 客户端/ 、/ 服务器/ 系统/ 和/ 存储系统/ ,/ 这/ 几个/ 部分/ 通过/ 以太网交换机/ 或者/ 光线/ 交换机/ 进行/ 连接/ ./ 如图/ 1/ 所示/ ./ ①/ FujitsuLtd/ ./ TPCBenchmarkCFullDisclosureReport/ -/ Page3/ 在/ TPC/ -/ C/ 测试/ 中/ ,/ 系统/ 级/ 的/ 优化/ 主要/ 包括/ 内存/ 模拟/ 用户端/ ,/ 用于/ 模拟/ 操作员/ 在/ 终端/ 上/ 的/ 操作/ 行为/ ,/ 向/ 数据库/ 客户端/ 发出/ 各类/ 事务/ 请求/ ,/ 并/ 最终/ 在/ 此/ 统计/ TPC/ -/ C/ 测试/ 结果/ ./ 数据库/ 客户端/ ,/ 接收/ 操作员/ 或/ 模拟/ 用户/ 端的/ 请求/ ,/ 生成/ 事务/ 的/ 请求/ 内容/ ,/ 向/ 数据库/ 服务器端/ 发送/ 请求/ ,/ 然后/ 接收/ 数据库/ 服务器端/ 的/ 返回/ 结果/ ,/ 将/ 处理结果/ 输出/ 给/ 操作员/ 或/ 模拟/ 用户端/ ./ 服务器/ 系统/ 端/ 用于/ 接收/ 数据库/ 客户端/ 的/ 请求/ ,/ 完成/ 业务/ 判断/ 和/ 业务/ 处理/ ,/ 并/ 将/ 处理结果/ 返回/ 给/ 数据库/ 客户端/ ,/ 供/ 客户端/ 展示/ ./ 存储系统/ 端/ 用于/ 存储/ 数据库/ 的/ 所有/ 表项/ 及/ 数据库/ 的/ 系统/ 级/ 应用/ 数据/ ,/ 接受/ 数据库/ 服务器端/ 的/ 统一/ 管理/ 与/ 调度/ ,/ 能/ 高效/ 地/ 完成/ 各种/ IO/ 请求/ 及/ 处理/ ./ 系统优化/ 、/ 存储系统/ 优化/ 和/ I/ // O/ 调度/ 优化/ 等/ ./ 2.2/ 影响/ TPC/ -/ C/ 性能/ 的/ 硬件/ 因素/ 经过/ 上述/ 阐述/ ,/ 我们/ 已经/ 能够/ 在/ 理论/ 上/ 对/ TPC/ -/ C/ 有/ 了/ 比较/ 全面/ 的/ 了解/ ,/ 该/ 测试/ 所/ 模拟/ 的/ 在线/ 事务处理/ 应用/ 具备/ 了/ 如下/ 特点/ :/ 并发/ 处理/ 、/ 多个/ 网上/ 终端/ 会话/ 同时/ 存在/ 、/ 大量/ 的/ 硬盘/ 读写操作/ 、/ 数据/ 之间/ 存在/ 较/ 多/ 的/ 访问/ 与/ 更新/ 的/ 竞争/ 等等/ ./ TPC/ -/ C/ 衡量/ 的/ 主要/ 是/ 服务器/ 系统/ 在/ 处理/ 数量/ 庞大/ 而/ 单个/ 规模较/ 小/ 的/ 任务/ 的/ 吞吐/ 率/ ,/ 即/ 固定/ 时间/ 处理事务/ 的/ 数量/ ./ 下面/ 结合/ TPC/ -/ C/ 负载/ 特征/ ,/ 分析/ 有/ 哪些/ 硬件/ 因素/ 影响/ TPC/ -/ C/ 测试/ 的/ 结果/ ./ 2.2/ ./ 1CPU/ 性能/ 在/ 程序运行/ 过程/ 中/ ,/ 最/ 重要/ 的/ CPU/ 性能/ 评价/ 指标/ 是/ CPU/ 执行/ 时间/ ./ 关于/ 程序/ CPU/ 执行/ 时间/ ,/ 有/ 一个/ 简单/ 的/ 公式/ [/ 2/ ]/ :/ CPU/ 执行/ 时间/ =/ 在/ 实际/ 运行/ 时/ ,/ 程序/ 先由/ 编译器/ 编译成/ 机器指令/ ,/ 然后/ 计算机/ 通过/ 执行/ 这些/ 指令/ 来/ 运行/ 程序/ ./ 不同/ 的/ 指令/ 完成/ 的/ 功能/ 不同/ ,/ 所/ 花费/ 的/ 时钟/ 周期/ 数/ 就/ 不同/ ,/ CPI/ (/ 每条/ 指令/ 的/ 平均/ 时钟/ 周期/ 数/ )/ 是/ 用来/ 描述/ 所有/ 指令/ 花费/ 的/ 时钟/ 周期/ 数/ 的/ 平均值/ ./ 于是/ ,/ 执行/ 某个/ 程序/ 的/ CPU/ 时钟/ 周期/ 数便/ 有/ 了/ 下面/ 的/ 公式/ :/ 消耗/ CPU/ 时钟/ 周期/ 数/ =/ 指令/ 数/ ×/ 每条/ 指令/ 的/ 平均/ 时钟/ 周期/ 数/ ./ 于是/ 我们/ 就/ 得到/ 了/ 影响/ 机器/ 性能/ 的/ 3/ 个/ 重要/ 因素/ ,/ 其中/ ,/ 指令/ 数/ 取决于/ 指令集/ 系统结构/ ,/ CPI/ 的/ 两个/ 影响/ 因素/ 是/ 指令集/ 和/ 内存/ 系统/ 性能/ ,/ 内存/ 系统/ 性能/ 将/ 在/ 下/ 一/ 小节/ 介绍/ ,/ 时钟/ 频率/ 由/ CPU/ 的/ 型号/ 得到/ ./ 高速缓存/ Cache/ 利用/ 了/ 空间/ 局部性/ 和/ 时间/ 局部性/ 的/ 原理/ ,/ 大大提高/ 了/ 系统/ 的/ 性能/ ./ 缓存/ 的/ 存取时间/ 一般/ 情况/ 下/ 是/ 内存/ 存取时间/ 的/ 五分之一/ ,/ 所以/ 较/ 高/ 的/ 命中率/ 会/ 使得/ 访问/ 数据/ 的/ 平均/ 时间/ 大大缩短/ ,/ 甚至/ 接近/ 缓存/ 的/ 存取时间/ ./ 在/ 影响/ 命中率/ 的/ 诸多/ 因素/ 中/ ,/ 与/ 硬件/ 相关/ 的/ 是/ 缓存/ 相对/ 于/ 内存/ 的/ 容量/ ./ 大多数/ 芯片/ 除了/ 一级/ 缓存/ (/ 一般/ 为/ 64KB/ )/ 外/ ,/ 还有/ 二级缓存/ 甚至/ 三级/ 缓存/ ,/ 我们/ 只/ 考虑/ 离/ 内存/ 最近/ 一级/ 的/ 缓存/ 容量/ ./ 相对/ 于/ 单个/ 处理器/ ,/ 配置/ 了/ 多个/ 处理器/ 的/ 系统/ 性能/ 得到/ 了/ 扩展/ ,/ 不同/ 的/ 处理器/ 可以/ 同时/ 处理/ 不同/ 的/ 任务/ ,/ 虽然/ 处理/ 单个/ 任务/ 的/ 执行/ 时间/ 没有/ 缩短/ ,/ 但/ 提高/ 了/ 吞吐/ 率/ ./ 处理器/ 的/ 个数/ 也/ 是/ 影响/ TPC/ -/ C/ 性能/ 的/ 重要/ 因素/ ./ 2.2/ ./ 2/ 内存/ 性能/ 数据库系统/ 非常/ 依赖/ 内存/ 对/ 数据/ 进行/ 缓存/ ,/ 因此/ 如果/ 系统/ 内存不足/ ,/ 数据库系统/ 一些/ 可能/ 的/ 优化/ 就/ 无法/ 进行/ ,/ 不能/ 得到/ 期望/ 的/ 性能/ ./ 单个/ 任务/ 的/ 执行/ 时间/ 也/ 称/ 响应/ 时间/ ,/ 是/ 指/ 完成/ 一个/ 任务/ 所/ 需要/ 的/ 时间/ 总和/ ,/ 包括/ 磁盘/ 存取时间/ 、/ 内存/ 存取时间/ 、/ 输入输出/ (/ I/ // O/ )/ 操作/ 所/ 需/ 时间/ ,/ 以及/ 操作系统/ 为/ 运行/ 这个/ 程序/ 而/ 必不可少/ 的/ 时间/ 开销/ 等/ ./ 因此/ 除了/ 内存容量/ 以外/ ,/ 内存/ 带宽/ 也/ 是/ 影响/ 测试/ 结果/ 的/ 重要/ 因素/ ./ 存储/ 带宽/ 通常/ 考虑/ 的/ 是/ 传输率/ (/ 带宽/ )/ ,/ 它/ 表示/ 单位/ 时间/ 存取数据/ 量/ 的/ 大小/ ,/ 单位/ 为/ KB/ // s/ 或/ MB/ // s/ ./ 2.2/ ./ 3I/ // O/ 性能/ 待/ 测系统/ 与/ 存储系统/ 之间/ 需要/ 存储/ 区域/ 网络连接/ ./ 显然/ TPC/ -/ C/ 中/ 的/ I/ // O/ 操作/ 所/ 读写/ 的/ 数据/ 都/ 需要/ 经过/ 存储/ 网络/ 传输/ ,/ 当/ 存储/ 带宽/ 超出/ 单块/ HBA/ 卡/ 的/ 带宽/ 时/ ,/ 需要/ 待/ 测系统/ 上/ 安装/ 多块/ HBA/ 卡/ ,/ HBA/ 卡/ 的/ 带宽/ 决定/ 了/ 待/ 测系统/ 到/ 存储系统/ 之间/ 的/ I/ // O/ 带宽/ 上限/ ./ TPC/ -/ C/ 测试/ 的/ 负载/ 一般/ 是/ 较/ 小/ 操作/ 的/ 事务处理/ ,/ I/ // O/ 访问/ 非常/ 频繁/ ,/ 而且/ 每个/ I/ // O/ 操作/ 所/ 读写/ 的/ 数据量/ 都/ 不大/ ,/ 因此/ 存储设备/ 的/ IOPS/ 性能/ 是/ 系统/ 重要/ 的/ 配置/ 指标/ ./ IOPS/ (/ Input/ // OutputOperationPerSecond/ )/ ,/ 即/ 每秒/ 进行/ 读写操作/ 的/ 次数/ ,/ 用来/ 衡量/ 硬盘/ (/ 包括/ HDD/ 和/ SSD/ )/ 存取/ 访问/ 的/ 性能指标/ ./ 存储设备/ 的/ IOPS/ 主要/ 由/ 两个/ 因素/ 决定/ ,/ 一个/ 是/ 单个/ 磁盘/ 的/ 设备/ 类型/ ,/ 另/ 一个/ 是/ 磁盘/ 数量/ ./ 经过/ 上述/ 分析/ ,/ 我们/ 确定/ 了/ 影响/ TPC/ -/ C/ 性能/ 的/ 硬件/ 因素/ 如下/ :/ CPU/ 主频/ 、/ CPU/ 核/ 的/ 总量/ 、/ 线程/ 数量/ 、/ 缓存/ 容量/ 、/ 内存容量/ 、/ 内存/ 带宽/ 、/ 磁盘/ IOPS/ 值/ 、/ 磁盘/ 数/ 、/ HBA/ 带宽/ ./ Page43/ 解释/ 变量/ 指标/ 的/ 确定/ 和/ 数据/ 收集/ 多元/ 线性/ 回归/ 将/ 所/ 研究/ 的/ 数据/ 指标/ 分为/ 一个/ 被/ 影响/ 变量/ (/ 也/ 称/ 被/ 解释/ 变量/ ,/ 即/ 为/ 因变量/ ,/ 本文/ 中为/ TPC/ -/ C/ 性能/ )/ 和/ 一组/ 影响/ 变量/ (/ 也/ 称/ 解释/ 变量/ ,/ 本文/ 中为/ 影响/ TPC/ -/ C/ 性能/ 的/ 因素/ )/ ,/ 本节/ 将/ 确定/ 解释/ 变量/ ,/ 并/ 收集/ 数据/ ./ 3.1/ 解释/ 变量/ 指标/ 的/ 确定/ TPC/ -/ C/ 性能/ 与/ 各个/ 硬件/ 指标/ 之间/ 的/ 关系/ 如果/ 完全/ 是/ 线性关系/ ,/ 则/ 代表/ 每个/ 硬件/ 指标/ 对/ TPC/ -/ C/ 性能/ 的/ 作用/ 互相/ 独立/ ,/ 且/ 各个/ 作用/ 可以/ 互相/ 叠加/ ,/ 这/ 在/ 实际/ 情况/ 中是/ 不/ 可能/ 的/ [/ 3/ ]/ ./ 但/ 我们/ 可以/ 在/ 一定/ 程度/ 上将/ 非线性/ 关系/ 转化/ 为/ 线性关系/ ,/ 尽量/ 客观/ 地/ 描述/ 各个/ 硬件/ 指标/ 的/ 影响/ ./ 图/ 2TPC/ -/ C/ 值/ 与/ 主频/ 、/ 核数/ 、/ 线程/ 数/ 的/ 线性关系/ 图/ CPU/ 的/ 主频/ 只能/ 表达/ 单个/ 核/ 的/ 运算/ 性能/ ,/ 影响/ 单个/ 任务/ 的/ 执行/ 时间/ ,/ 而/ 影响/ 吞吐/ 率/ 的/ 另/ 一个/ 重要/ 因素/ 是/ 并行度/ ./ 从/ 硬件/ 角度/ 上/ 来说/ ,/ 影响/ 并行度/ 的/ 是/ 同时/ 工作/ 的/ 核/ 的/ 数量/ 以及/ 线程/ 数/ ./ 从/ 收集/ 到/ 的/ 数据/ 也/ 可以/ 看出/ ,/ 主频/ 低/ 但/ 核数/ 多线程/ 数多/ 的/ 系统/ 可能/ 拥有/ 更好/ 的/ TPC/ -/ C/ 性能/ ,/ 相反/ ,/ 主频/ 高/ 但/ 核数少/ 线程/ 数少/ 的/ 系统/ ,/ TPC/ -/ C/ 性能/ 并/ 不/ 良好/ ./ 散点图/ 可以/ 帮助/ 我们/ 更/ 清晰/ 地/ 看到/ CPU/ 各个/ 指标/ 对/ TPC/ -/ C/ 性能/ 的/ 影响/ ,/ 散点图/ 是/ 数据/ 点/ 在/ 平面/ 直角坐标/ 系上/ 的/ 分布图/ ,/ 可以/ 表示/ 因变量/ 随某/ 一个/ 自变量/ 变化/ 的/ 大致/ 趋势/ ./ 我们/ 从/ 已/ 发布/ 的/ TPC/ -/ C/ 测试/ 结果/ 中/ 选取/ 了/ 39/ 份/ 作为/ 样本/ (/ 样本/ 数据/ 见/ 附录/ 中/ 附表/ 1/ ,/ 关于/ 该表中/ 数据/ 的/ 详细/ 说明/ 在/ 随后/ 文中/ 一一/ 阐述/ )/ ,/ 绘制/ 了/ TPC/ -/ C/ 值/ 分别/ 与/ 主频/ 、/ 核数/ 、/ 线程/ 数/ 、/ 主频/ ×/ 核数/ 、/ 主频/ ×/ 线程/ 数/ 的/ 散点图/ ,/ 见图/ 2/ ./ 其中/ ,/ TPCC/ 表示/ Page5TPC/ -/ C/ 测试/ 结果/ 值/ ,/ 单位/ 为/ tpmC/ ;/ 主频/ 单位/ 为/ MHz/ ;/ 核数/ 表示/ 服务器/ 拥有/ 的/ 核/ 的/ 总数/ ,/ 即/ “/ 服务器/ 系统/ 所有/ 的/ CPU/ 个数/ ×/ 每个/ CPU/ 上/ 核数/ ”/ ,/ 单位/ 为个/ ;/ 线程/ 数/ 表示/ 服务器/ 运行/ 的/ 线程/ 总数/ ,/ 即/ “/ 服务器/ 核/ 的/ 总数/ ×/ 每个/ 核/ 运行/ 的/ 线程/ 数/ ”/ ,/ 单位/ 为个/ ;/ 主频/ ×/ 核数/ 表示/ “/ 主频/ ×/ 核/ 的/ 总数/ ”/ ,/ 单位/ 为/ MHz/ ·/ 个/ ;/ 主频/ ×/ 线程/ 数/ 表示/ “/ 主频/ ×/ 线程/ 总数/ ”/ ,/ 单位/ 为/ MHz/ ·/ 个/ ./ 由图/ 2/ 可以/ 直观/ 地/ 看出/ ,/ “/ 主频/ ×/ 线程/ 数/ ”/ 与/ TPC/ -/ C/ 性能/ 的/ 线性关系/ 最为/ 明显/ ,/ 我们/ 初步/ 设定/ ,/ 第/ 1/ 个/ 影响/ 因素/ x1/ =/ 主频/ ×/ 线性/ 数/ ./ 散点图/ 对于/ 变量/ 间/ 关系/ 的/ 直观/ 表达/ 可以/ 作为/ 我们/ 考察/ 自变量/ 时/ 的/ 参考/ ,/ 但/ 不能/ 成为/ 判定/ 该/ 自变量/ 是否/ 合适/ 的/ 依据/ ./ 后面/ 可以/ 看到/ ,/ 散点图/ 上/ 与/ 因变量/ 的/ 线性关系/ 不/ 明显/ 的/ 自变量/ 依然/ 是/ 影响/ 因变量/ 的/ 重要/ 因素/ ./ 在/ 上面/ 5/ 个/ 散点图/ 上/ ,/ 由于/ “/ 主频/ ×/ 线程/ 数/ ”/ 包含/ 了/ 主频/ 、/ 核数/ 的/ 信息/ ,/ 故/ 舍弃/ 其余/ 4/ 项/ ./ 高速缓存/ 由于/ 大大提高/ 了/ CPU/ 对/ 数据/ 的/ 存取/ 速率/ 而/ 对系统/ 的/ 性能/ 有/ 显著/ 影响/ ,/ CPU/ 访问/ 缓存/ 的/ 命中率/ =/ 命中/ 次数/ // 访问/ 次数/ ./ 而/ 影响/ 命中率/ 的/ 因素/ 除了/ 算法/ 、/ 数据/ 特点/ 外/ ,/ 与/ 硬件/ 指标/ 相关/ 的/ 便是/ 缓存/ 容量/ 相对/ 于/ 内存容量/ 的/ 大小/ ,/ 从/ 理论/ 上/ 说/ ,/ 只要/ 高速缓存/ 的/ 容量/ 与/ 内存容量/ 保持/ 适当/ 比例/ ,/ 高速缓存/ 的/ 命中率/ 是/ 相当/ 高/ 的/ ./ 基于/ 此/ ,/ 关于/ 高速缓存/ 我们/ 确定/ 两个/ 影响/ 因素/ :/ x2/ =/ cache/ -/ T/ ,/ 表示/ 服务器/ 系统/ 缓存/ 容量/ 的/ 总和/ ,/ 它/ 实际/ 是/ “/ 每个/ CPU/ 的/ 缓存/ 容量/ ×/ CPU/ 个数/ ”/ ;/ x3/ =/ cachePmem/ ,/ 表示/ 高速缓存/ (/ cache/ )/ 的/ 容量/ 总和/ 与/ 内存/ (/ memory/ )/ 容量/ 总和/ 的/ 比值/ ./ 类似/ 地/ ,/ 关于/ 内存容量/ 我们/ 确定/ 两个/ 影响/ 因素/ :/ x4/ =/ memory/ ,/ 表示/ 服务器/ 系统/ 内存容量/ 总和/ ;/ x5/ =/ memPcpu/ ,/ 表示/ 能/ 分摊/ 给/ 每个/ CPU/ 芯片/ 的/ 内存大小/ ,/ 是/ 内存容量/ 与/ 芯片/ 个数/ 的/ 比值/ ./ x6/ =/ memPcore/ ,/ 表示/ 能/ 分摊/ 给/ 每个/ 核/ 的/ 内存大小/ ,/ 是/ 内存容量/ 与/ 核/ 数量/ 的/ 比值/ ./ 内存/ 带宽/ 显然/ 是/ 服务器/ 系统/ 的/ 重要/ 指标/ ,/ 业界/ 有/ 很多/ 基准/ 程序/ (/ Benchmark/ )/ 用来/ 测试/ 系统/ 的/ 内存/ 带宽/ ,/ 比如/ Stream/ 、/ Lmbench/ ./ 可惜/ 的/ 是/ ,/ 由于/ 大多数/ 发布/ 了/ TPC/ -/ C/ 值/ 的/ 服务器/ ,/ 并/ 没有/ 统一/ 的/ 内存/ 带宽/ 测试/ 结果/ ,/ 我们/ 这里/ 采用/ 理论/ 上/ 最大/ 的/ 内存/ 带宽/ 值/ ./ 实际/ 内存/ 带宽/ 与/ 理论/ 最大/ 内存/ 带宽/ 存在/ 差异/ ,/ 但/ 为了/ 数据/ 的/ 统一/ ,/ 我们/ 容忍/ 这方面/ 的/ 差异/ ./ 内存/ 带宽/ 的/ 理论/ 最大值/ 计算公式/ 如下/ [/ 2/ ]/ :/ 带宽/ =/ 内存/ 时钟/ 频率/ ×/ 内存/ 总线/ 位数/ ×/ 本文/ 研究/ 过程/ 中/ 涉及/ 的/ 服务器/ 采用/ 的/ 均/ 为/ DDR/ 、/ DDR2/ 、/ DDR3/ 类型/ 的/ 内存/ ,/ 内存/ 总线/ 位数/ 总为/ 64bit/ ,/ 倍增/ 系数/ 总为/ 2/ ,/ 本文/ 只/ 考虑/ 内存/ 通道/ 全部/ 插满/ 内存条/ 的/ 情况/ ,/ 则/ 内存/ 通道/ 数由/ 芯片/ 的/ 型号/ 决定/ ,/ 内存/ 时钟/ 频率/ 由/ 内存/ 型号/ 决定/ ./ 公式/ 中/ 的/ 常数/ 系数/ 可以/ 忽略不计/ ,/ 它们/ 会/ 在/ 模型/ 的/ 回归系数/ 中/ 体现/ 出来/ ,/ 所以/ 可以/ 用/ “/ 内存/ 时钟/ 频率/ ×/ 内存/ 通道/ 数/ ”/ 来/ 代表/ 内存/ 带宽/ ,/ 这/ 就是/ 第/ 7/ 个/ 影响/ 因素/ ,/ x7/ =/ membw/ ./ x8/ =/ HBA/ ,/ 表示/ 服务器/ 与/ 存储/ 子系统/ 之间/ 主机/ 总线/ 适配卡/ 的/ 带宽/ 总和/ ./ 与/ 磁盘/ 的/ 指标/ 相对/ 应/ ,/ 应该/ 选取/ HBA/ 可以/ 支持/ 的/ 最大/ IOPS/ 数来/ 做/ 解释/ 变量/ ,/ 但/ 在/ 收集/ 数据/ 过程/ 中/ 发现/ ,/ 很多/ HBA/ 的/ IOPS/ 并/ 没有/ 发布/ ,/ 收集/ 难度很大/ ./ 为了/ 数据/ 的/ 统一性/ ,/ 本文/ 采用/ HBA/ 的/ 带宽/ 指标/ 做/ 代替/ ,/ 但/ 由于/ 各个/ 服务器/ 的/ 架构/ 各异/ ,/ 部分/ 服务器/ 的/ 磁盘/ 子系统/ 内/ 集成/ 了/ HBA/ 卡/ 的/ 功能/ ,/ 而/ 这部分/ 功能/ 在/ 相关/ 资料/ 中/ 只是/ 描述性/ 的/ ,/ 没有/ 提供/ 具体/ 数据/ ,/ 导致/ 这/ 一项/ 解释/ 变量/ 的/ 数据/ 质量/ 较差/ ./ x9/ =/ IOPS/ ,/ 是/ 对/ 磁盘/ 的/ 最大/ 访问/ 频次/ 的/ 描述/ ,/ 值得注意/ 的/ 是/ ,/ 这里/ 的/ IOPS/ 值/ 并/ 不是/ 所有/ 磁盘/ IOPS/ 值/ 的/ 总和/ ,/ 由于/ 大多数/ 服务器/ 所/ 配置/ 的/ 磁盘/ 的/ 规格/ 和/ 类型/ 都/ 不是/ 单一/ 的/ ,/ 每/ 一种/ 磁盘/ 的/ IOPS/ 值/ 也/ 不同/ ,/ 尤其/ 对于/ HDD/ 和/ SSD/ 两种/ 磁盘/ 类型/ ,/ IOPS/ 值/ 相差/ 非常/ 大/ ./ 本文/ 用作/ 自变量/ 的/ IOPS/ 值/ 是/ 将/ 不同/ 磁盘/ 的/ IOPS/ 值/ 对/ 其/ 容量/ 大小/ 做/ 加权/ 平均/ 的/ 结果/ ./ 指令集/ 是/ CPU/ 操作/ 所/ 执行/ 的/ 指令/ 的/ 集合/ ,/ 包含/ 的/ 要点/ 非常复杂/ ,/ 例如/ 操作/ 指令表/ 、/ 数据类型/ 、/ 指令/ 格式/ 、/ 寄存器/ 、/ 寻址/ 等/ ,/ 很/ 难用/ 一个/ 量化/ 的/ 数据/ 来/ 描述/ 指令集/ ,/ 故/ 将/ 指令集/ 的/ 类型/ 作为/ 定性/ 的/ 数据/ 参与/ 线性/ 回归/ ./ 由于/ 指令集/ 与/ CPU/ 的/ 设计/ 关系/ 紧密/ ,/ 对于/ 指令集/ 的/ 定性描述/ 也/ 在/ 一定/ 程度/ 上/ 表达/ 了/ 不同/ 类型/ CPU/ 之间/ 的/ 差异/ ./ 在/ 本文/ 所/ 收集/ 的/ 样本/ 中/ ,/ AMD/ 的/ CPU/ 全部/ 为/ Opteron/ 系列/ ,/ 与/ Intel/ 的/ Xeon/ 系列/ CPU/ 同/ 属于/ x86/ -/ 64/ 架构/ ,/ 采用/ 的/ 指令集/ 同/ 为/ 复杂/ 指令集/ 运算/ CISC/ (/ ComplexInstructionSetComputing/ )/ 系列/ ,/ 但/ 为了/ 对/ 不同/ 厂商/ 的/ CPU/ 有所/ 区分/ ,/ 我们/ 将/ 其/ 视为/ 两个/ 变量/ ;/ 与/ Xeon/ 系列/ 有所不同/ ,/ 同为/ Intel/ 厂商/ 的/ Itanium/ 系列/ CPU/ 采用/ 的/ 指令集/ 为/ 显示/ 并行/ 指令集/ 运算/ EPIC/ (/ ExplicitlyParallelInstructionComputing/ )/ ;/ IBM/ 厂商/ 的/ power/ 系列/ CPU/ 采用/ 的/ 指令集/ 为/ 自己/ 研发/ 的/ 基于/ 精简指令/ 集/ RISC/ (/ ReducedInstructionSetComputing/ )/ 架构/ 的/ 指令集/ 体系/ ,/ 称为/ POWERISA/ ./ 在/ 线性/ 回归/ 中/ ,/ 要/ 先/ 将/ 定性/ 变量/ 做/ 数据/ 化/ 处理/ [/ 4/ ]/ ,/ 方法/ 是/ 按/ 性质/ 的/ 种类/ 设置/ 虚拟/ 变量/ ,/ 将/ 虚拟/ 变量/ 的/ 取值/ 设定/ 为/ 只能/ 取/ 0/ 或/ 1/ 两个/ 值/ ,/ 满足/ 性质/ 的/ Page6/ 取/ 1/ ,/ 不/ 满足/ 的/ 取/ 0/ ./ 具体/ 地/ ,/ 我们/ 将/ 上述/ 已经/ 按/ 指令集/ 类型/ 和/ CPU/ 类型/ 划分/ 好/ 的/ 4/ 种/ 性质/ 设置/ 成/ 3/ 个/ 虚拟/ 变量/ ,/ 分别/ 为/ x10/ =/ Xeon/ ,/ x11/ =/ AMD/ 和/ x12/ =/ POWER/ ./ 对于/ Intel/ 的/ Xeon/ 系列/ CPU/ ,/ x10/ =/ 1/ ,/ x11/ =/ 0/ ,/ x12/ =/ 0/ ;/ 对于/ AMD/ 的/ Opteron/ 系列/ CPU/ ,/ x10/ =/ 0/ ,/ x11/ =/ 1/ ,/ x12/ =/ 0/ ;/ 对于/ IBM/ 的/ POWER/ 系列/ CPU/ ,/ x10/ =/ 0/ ,/ x11/ =/ 0/ ,/ x12/ =/ 1/ ;/ 对于/ Intel/ 的/ Itanium/ 系列/ CPU/ ,/ 则/ 全取/ 0/ ,/ x10/ =/ 0/ ,/ x11/ =/ 0/ ,/ x12/ =/ 0.3/ ./ 2/ 数据/ 收集/ 利用/ 统计分析/ 的/ 方法/ 建模/ ,/ 是/ 以/ 大量/ 数据/ 为/ 基础/ 的/ ,/ 数据/ 的/ 质量/ 直接/ 影响/ 模型/ 的/ 可靠性/ 、/ 准确性/ 、/ 可用性/ ./ 在/ 计算机领域/ ,/ 数据/ 的/ 收集/ 要/ 注意/ 两个/ 关键点/ :/ (/ 1/ )/ 数据/ 的/ 来源/ 要/ 客观/ 、/ 权威/ ./ 每时每刻/ ,/ 都/ 有/ 大量/ 关于/ 计算机领域/ 的/ 数据/ 在/ 网上/ 发布/ ,/ 有/ 的/ 来源于/ 生产/ 厂商/ 、/ 盈利/ 组织/ ,/ 有/ 的/ 来源于/ 学术/ 机构/ 、/ 科研院所/ ,/ 还有/ 很多/ 来自/ 对/ 相关/ 问题/ 有/ 兴趣/ 的/ 个人/ 和/ 团体/ ./ 不同/ 的/ 来源/ 有/ 各自/ 不同/ 的/ 意图/ 和/ 研究/ 角度/ ,/ 对/ 同一/ 问题/ 也/ 会/ 有/ 不同/ 的/ 理解/ 程度/ 和/ 表达方式/ ,/ 很多/ 数据/ 不仅/ 不/ 具备/ 权威性/ ,/ 而且/ 有/ 自相矛盾/ 的/ 情况/ ,/ 不/ 能够/ 作为/ 继续/ 研究/ 的/ 基础/ ./ (/ 2/ )/ 数据/ 的/ 标准/ 要/ 统一/ ./ 计算机/ 的/ 体系结构/ 非常复杂/ ,/ 性能/ 表现/ 与/ 底层/ 硬件/ 之间/ 的/ 联系/ 千丝万缕/ ,/ 这种/ 联系/ 是否/ 仅仅/ 由/ 理论/ 研究/ 便/ 能/ 明确/ 尚未可知/ ./ 本文/ 的/ 研究/ 工作/ 是/ 基于/ 对/ 数据/ 进行/ 统计分析/ ,/ 而/ 计算机/ 复杂/ 的/ 体系结构/ 决定/ 了/ 描述/ 计算机/ 各/ 方面/ 指标/ 的/ 参数/ 也/ 复杂/ 且/ 多种多样/ ./ 有/ 的/ 以/ 响应/ 时间/ 为/ 基准/ ,/ 有/ 的/ 以/ 吞吐/ 率为/ 基准/ ,/ 有的是/ 测试/ 值/ ,/ 有的是/ 理论值/ ./ 由于/ 在/ 统计/ 和/ 建模/ 中/ ,/ 所有/ 的/ 数据/ 都/ 体现/ 为/ 数字/ ,/ 不带/ 单位/ 和/ 描述/ 等/ 任何/ 条件/ 限制/ ,/ 数据/ 的/ 统一性/ 就/ 至关重要/ ./ 参数/ 的/ 数据/ 值/ 具备/ 了/ 统一性/ ,/ 才能/ 保证/ 这个/ 参数/ 参与/ 建模/ 是/ 有/ 意义/ 的/ ./ 基于/ 以上/ 两点/ ,/ 本次/ 建模/ 所/ 选/ 数据/ 全部/ 来源于/ TPC/ 官网/ 发布/ 的/ TPC/ -/ C/ 完整/ 性能/ 报告/ 、/ 硬件/ 生产/ 厂商/ 发布/ 的/ DataSheet/ ./ 这些/ 数据/ 全部/ 有/ 权威部门/ 负责/ ,/ 可以/ 作为/ 研究/ 的/ 基础/ ./ 在/ 解决/ 了/ 非线性/ 变量/ 转化成/ 线性/ 变量/ 、/ 定性/ 变量/ 转化成/ 定量/ 变量/ 等/ 问题/ ,/ 并/ 确定/ 了/ 上述/ 12/ 个/ 影响/ 表/ 1/ 验证/ 样本/ 数据/ (/ a/ )/ tpmC/ 主频/ ×/ 线程/ 数/ cache/ -/ TcachePmem471883HPProLiantDL585G5IBMPower550HPProLiantDL385G7AMDOpteron6176SE705652PRIMEQUEST540IBMFlexSystemx240PRIMEQUEST580AIntelItanium290501238579102400IntelItanium9150M2382032212480/ 因素/ 之后/ ,/ 本文/ 收集/ 并/ 整理/ 了/ 完整/ 的/ 数据/ ,/ 见/ 附录/ 中/ 附表/ 1.4/ 计算结果/ 与/ 回归/ 诊断/ 根据上述/ 分析/ ,/ 我们/ 得到/ 的/ 理论/ 模型/ 为/ 其中/ ,/ y/ =/ TPCC/ (/ tpmC/ )/ ,/ x1/ =/ 主频/ ×/ 线程/ 数/ (/ MHz/ ·/ 个/ )/ ,/ x2/ =/ cache/ -/ T/ (/ MB/ )/ ,/ x3/ =/ cachePmem/ (/ MB/ // GB/ )/ ,/ x4/ =/ memory/ (/ GB/ )/ ,/ x5/ =/ memPcpu/ (/ GB/ // 个/ )/ ,/ x6/ =/ memPcore/ (/ GB/ // 个/ )/ ,/ x7/ =/ membw/ (/ Hz/ ·/ 个/ )/ ,/ x8/ =/ HBA/ (/ GB/ // s/ )/ ,/ x9/ =/ IOPS/ (/ 次/ // s/ )/ ,/ x10/ =/ Xeon/ ,/ x11/ =/ AMD/ ,/ x12/ =/ POWER/ ./ 4.1/ 异常/ 值/ 检验/ 对于/ 由/ 单个/ 自变量/ 与/ 因变量/ 构成/ 的/ 一元/ 线性方程/ ,/ 每个/ 样本/ 可以/ 在/ 二维/ 的/ 平面图/ 中/ 表达/ 成/ 一个点/ ,/ 可以/ 直观/ 地/ 看出/ 比较/ 明显/ 的/ 异常/ 值/ ./ 但/ 对于/ 多元/ 线性方程/ ,/ 无法/ 用/ 空间/ 中/ 的/ 点/ 来/ 表达/ 样本/ 数据/ ,/ 对于/ 异常/ 值/ 就/ 需要/ 用/ 统计/ 的/ 方法/ 进行/ 检验/ ./ 统计/ 中常/ 使用/ 删除/ 学生/ 化/ 残差/ 来/ 检验/ 异常/ 值/ ./ 第/ i/ 个/ 样本/ 的/ 删除/ 学生/ 化/ 残差/ 为/ SRE/ (/ i/ )/ =/ SREin/ -/ p/ -/ 1/ 式/ (/ 2/ )/ 的/ 具体/ 推导/ 过程/ 参见/ 文献/ [/ 5/ ]/ ,/ |/ SRE/ (/ i/ )/ |/ >/ 3/ 的/ 即可/ 认为/ 是/ 异常/ 值/ ./ 我们/ 对/ 附录/ 中/ 的/ 39/ 份/ 样本/ 做/ 了/ 删除/ 学生/ 化/ 残差/ 的/ 运算/ ,/ 得到/ 结果/ 见/ 附表/ 1/ 的/ 最后/ 一列/ SRE/ ,/ 所有/ 样本/ 的/ 删除/ 学生/ 化/ 残差/ 的/ 绝对值/ 均/ 小于/ 3/ ,/ 说明/ 样本/ 中/ 没有/ 异常/ 值/ ./ 在/ 后面/ 的/ 实验/ 过程/ 中/ ,/ 样本/ 数量/ 和/ 自变量/ 数量/ 发生变化/ 时/ ,/ 都/ 要/ 进行/ 异常/ 值/ 的/ 检验/ ,/ 如果/ 没有/ 异常/ 值/ 出现/ ,/ 则/ 本文/ 不再/ 解释/ 这一/ 过程/ ./ 在/ 进行/ 了/ 异常/ 值/ 的/ 检验/ 之后/ ,/ 本文/ 从/ 全部/ 样本/ 中/ 抽选/ 6/ 份/ 留作/ 最后/ 对/ 回归/ 模型/ 的/ 验证/ ,/ 用/ 其余/ 33/ 份/ 样本/ 建立/ 模型/ ./ 抽选/ 验证/ 样本/ 的/ 原则/ 是/ 随机/ 但/ 尽量/ 有所/ 差异/ ./ 差异/ 体现/ 在/ 两/ 方面/ ,/ 一是/ CPU/ 以及/ 服务器/ 来自/ 不同/ 的/ 生产/ 厂商/ ,/ 二是/ TPC/ -/ C/ 测试/ 值/ 的/ 大小/ 尽量/ 分布/ 在/ 不同/ 的/ 区间/ ./ 验证/ 样本/ 见表/ 1/ ./ Page7memorymemPcpumemPcoremembwHBAIOPSXeonAMDPOWER/ (/ b/ )/ 256256256102476820484.2/ 回归方程/ 的/ 显著性/ 检验/ 下面/ 对/ 33/ 份/ 样本/ 进行/ 最小/ 二乘/ 估计/ 的/ 运算/ ./ 由于/ 数据量/ 较大/ ,/ 数据/ 精度/ 较/ 高/ ,/ 本文/ 的/ 计算/ 过程/ 均/ 由/ 计算机/ 完成/ ,/ 部分/ 操作/ 由/ SPSS/ 软件/ ①/ 完成/ ./ 计算结果/ 见表/ 2/ ./ 变量/ 号/ 0123456789101112/ 多元/ 线性/ 回归方程/ 的/ 显著性/ 检验/ 就是/ 看/ 自变量/ x1/ ,/ x2/ ,/ …/ ,/ xp/ 从/ 整体/ 上/ 对/ 随机变量/ y/ 是否/ 有/ 明显/ 的/ 影响/ ./ F/ 检验/ 是/ 根据/ 平方和/ 分解/ 式/ ,/ 直接/ 从/ 回归/ 效果/ 检验/ 回归方程/ 的/ 显著性/ [/ 6/ ]/ ./ 平方和/ 分解/ 式/ :/ 其中/ ,/ SST/ =/ ∑/ nSSE/ =/ ∑/ nSST/ 称为/ 总/ 平方和/ ,/ 反映/ 因变量/ y/ 的/ 波动/ 程度/ 或/ 不确定性/ ./ SSR/ 称为/ 回归/ 平方和/ ,/ 它/ 是/ 由/ 回归方程/ 决定/ 的/ ,/ 也/ 就是/ 由/ 自变量/ 的/ 波动/ 引起/ 的/ ./ SSE/ 称为/ 残差/ 平方和/ ,/ 反映/ 的/ 是/ 不能/ 由/ 自变量/ 解释/ 的/ 波动/ ,/ 是/ 由/ 自变量/ 以外/ 未/ 加/ 控制/ 的/ 因素/ 引起/ 的/ ./ 总/ 平方和/ SST/ 中/ ,/ 由/ 自变量/ 解释/ 的/ 部分/ 是/ SSR/ ,/ 不能/ 由/ 自变量/ 解释/ 的/ 部分/ 是/ SSE/ ,/ SSR/ 越大/ ,/ 说明/ 回归/ 效果/ 越/ 好/ ,/ F/ 统计/ 量/ 为/ 由/ 给定/ 的/ 显著性/ 水平/ α/ ②/ ,/ 查/ F/ 分布/ 表/ ,/ 得/ 临界值/ F/ α/ (/ p/ ,/ n/ -/ p/ -/ 1/ )/ ,/ 将/ 计算/ 给定/ 数据/ 得到/ 的/ F/ 与/ F/ α/ 1081170280832950700244539423080407500038192684911607297400/ 进行/ 比较/ ,/ 在/ 正态/ 假设/ 下/ ,/ 当/ F/ </ F/ α/ 时/ ,/ 说明/ F/ 统计/ 量/ 遵从/ 自由度/ 为/ (/ p/ ,/ n/ -/ p/ -/ 1/ )/ 的/ F/ 分布/ ,/ 认为/ 回归方程/ 不/ 显著/ ;/ 当/ F/ >/ F/ α/ 时/ ,/ 认为/ 在/ 显著性/ 水平/ α/ 下/ ,/ y/ 对/ 自变量/ 总体/ 有/ 显著/ 地/ 线性关系/ ,/ 回归方程/ 是/ 显著/ 的/ ,/ 也/ 即/ 自变量/ 全体/ 对/ 因变量/ 产生/ 线性/ 影响/ 的/ 概率/ 大于/ 95/ %/ ./ 利用/ SPSS/ 软件/ 计算/ F/ 值/ 的/ 结果/ 如表/ 3/ ./ 方差/ 来源/ 平方和/ 回归/ SSR6/ ./ 304E/ +/ 135.253/ E/ +/ 12566.2981/ ./ 4E/ -/ 22/ 残差/ SSE1/ ./ 855E/ +/ 119.277/ E/ +/ 09/ 总计/ SST6/ ./ 323E/ +/ 13/ 表中/ F/ =/ 566.298/ ,/ 远远/ 大于/ F/ α/ (/ p/ ,/ n/ -/ p/ -/ 1/ )/ =/ F0/ ./ 05/ (/ 12/ ,/ 20/ )/ =/ 2.28/ ,/ 表明/ 回归方程/ 是/ 显著/ 的/ ./ 表中/ 的/ Sig/ 值/ 表示/ “/ F/ </ F/ α/ ”/ 的/ 概率/ ,/ 由/ Sig/ 值/ 同样/ 可以/ 做/ 回归方程/ 显著性/ 的/ 检验/ ,/ 当/ Sig/ 值/ </ α/ 时/ ,/ 回归方程/ 显著/ ,/ 当/ Sig/ 值/ >/ α/ 时/ ,/ 回归方程/ 不/ 显著/ ./ 我们/ 设定/ 的/ α/ =/ 0.05/ ,/ 表/ 3/ 中/ ,/ Sig/ 值/ 接近/ 于/ 0/ ,/ 表示/ 自变量/ 全体/ 对/ 因变量/ 产生/ 显著/ 线性/ 影响/ ./ 4.3/ 回归系数/ 显著性/ 检验/ [/ 7/ ]/ 回归/ 模型/ 通过/ 了/ F/ 检验/ ,/ 证明/ 回归方程/ 是/ 显著/ 的/ ,/ 即/ 因变量/ 对/ 自变量/ 整体/ 的/ 线性/ 回归/ 效果/ 是/ 显著/ 的/ ,/ 但/ 不能/ 保证/ 每个/ 回归系数/ 都/ 是/ 显著/ 的/ ./ 部分/ 自变量/ 的/ 系数/ 不/ 显著/ ,/ 回归方程/ 也/ 可能/ 显著/ ,/ 所以/ 我们/ 还要/ 对/ 每个/ 回归系数/ 做/ 检验/ ./ SSE/ 构造/ t/ 统计/ 量/ :/ 与/ F/ 检验/ 类似/ ,/ 回归/ 模型/ 中/ 依然/ 用/ SSR/ 与/ t/ 统计/ 量/ 遵从/ 自由度/ 为/ n/ -/ p/ -/ 1/ 的/ t/ 分布/ ,/ 对于/ 给定/ 的/ 显著性/ 水平/ α/ =/ 0.05/ 的/ 自由度/ ,/ 查出/ 双侧/ 检验/ 的/ 临界值/ t/ α/ // 2/ ,/ 当/ tj/ / t/ α/ // 2/ 时/ ,/ 表示/ 自变量/ xj/ 对/ 因变量/ y/ 的/ 线性/ 效果显著/ ,/ 当/ tj/ </ t/ α/ // 2/ 时/ ,/ 表示/ xj/ 对/ y/ 的/ ①/ ②/ Page8/ 线性/ 效果/ 不/ 显著/ ./ 利用/ SPSS/ 软件/ ,/ 我们/ 计算/ 回归/ 方程式/ (/ 1/ )/ 的/ t/ 检验/ 量/ 如表/ 4/ ./ 变量/ 号/ 变量/ 名称/ 系数/ tSig0/ (/ 常量/ )/ 51751.181/ ./ 267.7921/ 主频/ ×/ 线程/ 数/ 7.2799/ ./ 348.0002/ cache/ -/ T297/ ./ 7261.530/ ./ 1423cachePmem/ -/ 543.357/ ./ 281.7824/ memory151/ ./ 9141.677/ ./ 1095memPcpu829/ ./ 7921.808/ ./ 0866memPcore5033/ ./ 935.862/ ./ 3997membw/ -/ 32.4631/ ./ 368.1878/ HBA/ -/ 123.3391/ ./ 109.2819/ IOPS/ ./ 2184.199/ ./ 00010Xeon18429/ ./ 415.136/ ./ 89311AMD128713/ ./ 994.683/ ./ 50312POWER/ -/ 146473.8591/ ./ 125.274/ 与/ F/ 检验/ 类似/ ,/ 我们/ 同样/ 可以/ 通过/ 比较/ Sig/ 值/ 与/ α/ =/ 0.05/ 的/ 大小/ 来/ 判定/ 回归系数/ 的/ 显著性/ ,/ 当/ Sig/ 值/ >/ 0.05/ 时/ ,/ 表示/ 该/ 回归系数/ 没有/ 通过/ t/ 检验/ ,/ 其/ 与/ 因变量/ 的/ 线性关系/ 不/ 显著/ ./ 通过观察/ 表/ 4/ 可知/ ,/ 不是/ 所有/ 的/ 回归系数/ 都/ 通过/ 了/ 显著性/ 检验/ ,/ 对/ 不/ 显著/ 的/ 自变量/ 应予以/ 剔除/ ./ 但/ 不能/ 一次性/ 剔除/ 所有/ 不/ 显著/ 的/ 自变量/ ,/ 这是/ 由于/ 自变量/ 之间/ 存在/ 交互作用/ ,/ 剔除/ 掉/ 一个/ 自变量/ 就/ 会/ 使得/ 其它/ 自变量/ 的/ 显著性/ 发生变化/ ,/ 原则上/ 先/ 剔除/ t/ 值/ 最小/ 的/ ,/ 或者说/ Sig/ 值/ 最大/ 的/ 一个/ 自变量/ ,/ 然后/ 再用/ y/ 对/ 其它/ 自变量/ 做/ 线性/ 回归/ ,/ 进行/ 检验/ 后/ 再/ 剔除/ t/ 值/ 最小/ 的/ 自变量/ ,/ 直到/ 所有/ 自变量/ 对/ y/ 的/ 线性/ 影响/ 都/ 显著/ 为止/ ./ 这种/ 由/ 多/ 到/ 少/ 逐个/ 剔除/ 自变量/ 的/ 方法/ 叫/ “/ 后退/ 法/ ”/ ./ 在/ 用/ “/ 后退/ 法/ ”/ 进行/ 自变量/ 筛选/ 的/ 过程/ 中/ ,/ 最先/ 剔除/ 了/ x10/ =/ Xeon/ ,/ 说明/ Xeon/ 系列/ 芯片/ 的/ 芯片/ 类型/ 和/ 指令集/ 对/ TPC/ -/ C/ 性能/ 影响/ 不/ 显著/ ./ 其次/ 剔除/ 了/ x3/ =/ cachePmem/ ,/ 分析/ x3/ 不/ 显著/ 的/ 原因/ ,/ 是/ 这个/ 变量/ 代表/ 的/ 实际意义/ 对模型/ 来说/ 是/ 不/ 重要/ 的/ ,/ 高速缓存/ 容量/ 大小/ 与/ 内存容量/ 大小/ 的/ 比值/ 固然/ 是/ 影响/ 缓存/ 命中率/ 的/ 重要/ 因素/ ,/ 但/ 这/ 对/ 单个/ CPU/ 适用/ 的/ 理论/ 对于/ 多/ CPU/ 并不一定/ 适用/ ,/ 这/ 是因为/ 每/ 一个/ 缓存/ 只能/ 由/ 它/ 所在/ 的/ CPU/ 使用/ ,/ 而/ 内存/ 却是/ 所有/ CPU/ 共用/ ,/ 用/ 这/ 两个/ 容量/ 大小/ 的/ 比值/ 来/ 代表/ 命中率/ ,/ 实际/ 是/ 限制/ 了/ 一个/ 条件/ ,/ 即/ 内存/ 平均/ 分摊/ 在/ 每个/ CPU/ 上/ 使用/ ,/ 每个/ CPU/ 只能/ 使用/ 分摊/ 后/ 固定/ 的/ 那/ 一块/ 内存/ ,/ 这/ 严重/ 违背/ 了/ 实际/ 情况/ ,/ 导致/ 这个/ 自变量/ 不/ 能够/ 反映/ 出/ CPU/ 存取数据/ 的/ 性能/ ./ 然后/ 剔除/ 了/ x8/ =/ HBA/ ,/ 造成/ x8/ 不/ 显著/ 的/ 原因/ 可能/ 是/ 数据/ 质量/ 不好/ ,/ 这/ 在/ 第/ 3/ 节/ 收集/ 数据/ 时/ 已经/ 阐述/ ./ 然后/ 剔除/ 了/ x7/ =/ membw/ ,/ 该/ 自变量/ 不/ 显著/ 的/ 原因/ 应该/ 同样/ 是/ 数据/ 质量/ 较差/ ,/ 由于/ 服务器/ 系统/ 的/ 内存/ 带宽/ 的/ 实际/ 测量/ 值/ 无法/ 得到/ 统一/ 的/ 、/ 权威/ 的/ 、/ 可靠/ 的/ 数据/ ,/ 收集/ 数据/ 时用/ 理论/ 最大/ 内存/ 带宽/ 来/ 代替/ ,/ 而/ 理论/ 最大/ 内存/ 带宽/ 能/ 在/ 多/ 大程度/ 上/ 反映/ 实际/ 测量/ 带宽/ 的/ 信息/ ,/ 对于/ 不同/ 型号/ 的/ 服务器/ 来说/ 是/ 有/ 差异/ 的/ ,/ 这/ 导致/ 了/ 内存/ 带宽/ 数据/ 的/ 不/ 准确/ ./ 再/ 然后/ 剔除/ 了/ x6/ =/ memPcore/ ,/ 注意/ 到/ 它/ 与/ x5/ =/ memPcpu/ 在/ 自变量/ 的/ 实际/ 含义/ 上/ 存在/ 重合/ ,/ 都/ 是/ 表达/ 内存容量/ 大小/ 与/ 系统/ 规模/ 的/ 比值/ ,/ 即使/ CPU/ 与/ 核/ 的/ 数量/ 不同/ ,/ 但/ 它们/ 包含/ 的/ 信息量/ 是/ 有/ 很多/ 重合/ 部分/ 的/ ,/ 这/ 有违/ 自变量/ 的/ 选择/ 原则/ ./ 最后/ 剔除/ 了/ x11/ =/ AMD/ ,/ 说明/ 该/ 自变量/ 对/ TPC/ -/ C/ 性能/ 影响/ 不/ 显著/ ./ 用/ y/ 与/ 其余/ 6/ 个/ 自变量/ 做/ 回归/ ,/ 计算结果/ 见表/ 5/ ./ 此时/ ,/ 所有/ 自变量/ 均/ 通过/ 了/ 回归系数/ 显著性/ 的/ 检验/ ,/ 说明/ 自变量/ x1/ =/ 主频/ ×/ 线程/ 数/ ,/ x2/ =/ cache/ -/ T/ ,/ x4/ =/ memory/ ,/ x5/ =/ memPcpu/ ,/ x9/ =/ IOPS/ ,/ x12/ =/ POWER/ 对/ 因变量/ y/ =/ TPCC/ 的/ 线性/ 影响/ 是/ 显著/ 的/ ./ 其中/ ,/ x12/ =/ POWER/ 的/ 系数/ 是/ 负数/ ,/ 究其原因/ ,/ POWER/ 系列/ 芯片/ 的/ 主频/ 通常/ 在/ 4/ ~/ 5GHz/ ,/ 远远/ 高于/ Intel/ 和/ AMD/ 芯片/ 2/ ~/ 3GHz/ ,/ 而/ 其/ 芯片/ 的/ 整体/ 性能/ 优势/ 实际上/ 达/ 不到/ 与/ 主频/ 优势/ 相当/ 的/ 程度/ ,/ 这/ 使得/ 自变量/ x1/ =/ 主频/ ×/ 线程/ 数在/ POWER/ 系列/ 服务器/ 中/ 被/ 过/ 高地/ 使用/ 了/ ,/ 需要/ 一个/ 负值/ 来/ 做/ 整体/ 上/ 的/ 平衡/ ./ 这/ 也/ 是/ Intel/ 和/ AMD/ 被/ 剔除/ 掉/ 而/ POWER/ 依然/ 保存/ 的/ 原因/ ./ 变量/ 号/ 变量/ 名称/ 系数/ tSig0/ (/ 常量/ )/ 38077.0611/ ./ 339.1921/ 主频/ ×/ 线程/ 数/ 6.92614/ ./ 777.0002/ cache/ -/ T271/ ./ 5602.531/ ./ 0184memory242/ ./ 0604.237/ ./ 0005memPcpu940/ ./ 6644.412/ ./ 0009IOPS/ ./ 1754.611/ ./ 00012POWER/ -/ 90520.3982/ ./ 749.042/ 自变量/ 整体/ 对/ 因变量/ 线性/ 显著性/ 的/ F/ 检验/ 结果/ 见表/ 6/ ./ 方差/ 来源/ 平方和/ 回归/ SSR6/ ./ 300E/ +/ 131.050/ E/ +/ 131226.2941/ ./ 4E/ -/ 22/ 残差/ SSE2/ ./ 226E/ +/ 118.563/ E/ +/ 09/ 总计/ SST6/ ./ 323E/ +/ 13/ 查得/ 在/ 此时/ 的/ 自由度/ 下/ ,/ F/ α/ (/ p/ ,/ n/ -/ p/ -/ 1/ )/ =/ 2.47/ ,/ 表/ 6/ 中/ 的/ F/ =/ 1226.294/ >/ 2.47/ ,/ Sig/ 值/ 接近/ 于/ 0/ ,/ 说明/ 回归方程/ 非常/ 显著/ ./ Page94/ ./ 4/ 拟合/ 优度/ [/ 7/ ]/ 拟合/ 优度/ 是/ 描述/ 回归方程/ 对/ 样本/ 观测/ 值/ 的/ 拟合/ 程度/ 的/ 指标/ ./ 在/ 介绍/ F/ 检验/ 与/ t/ 检验/ 时/ ,/ 我们/ 了解/ 到/ ,/ 在/ 总/ 的/ 离差/ 平方和/ SST/ 中/ ,/ 回归/ 平方和/ SSR/ 所/ 占/ 比重/ 越大/ ,/ 则/ 线性/ 回归/ 效果/ 越/ 好/ ,/ 回归/ 值/ 与/ 样本/ 观测/ 值/ 拟合/ 优/ 度越/ 好/ ;/ 相反/ ,/ 残差/ 平方和/ 所/ 占/ 比重/ 越大/ ,/ 则/ 回归/ 效果/ 不好/ ,/ 回归/ 值/ 与/ 样本/ 观测/ 值/ 拟合/ 优度/ 不/ 理想/ ./ 于是/ 定义/ 了/ 样本/ 决定系数/ 为/ 样本/ 决定系数/ R2/ 的/ 取值/ 在/ [/ 0/ ,/ 1/ ]/ 区间/ 内/ ,/ R2/ 越/ 接近/ 1/ ,/ 表示/ 回归/ 拟合/ 的/ 效果/ 越/ 好/ ;/ R2/ 越/ 接近/ 0/ ,/ 表示/ 回归/ 拟合/ 的/ 效果/ 越差/ ./ 经过/ 计算/ ,/ 在/ 最后/ 一次/ 回归/ 中/ ,/ 因变量/ y/ 与/ x1/ ,/ x2/ ,/ x4/ ,/ x5/ ,/ x9/ ,/ x12/ 组成/ 的/ 自变量/ 全体/ 的/ 样本/ 决定系数/ R2/ =/ 0.996/ ,/ 表明/ 回归/ 拟合/ 效果/ 非常/ 好/ ./ 经过/ 一系列/ 的/ 检验/ 与/ 调整/ 之后/ ,/ 最终/ 的/ 回归/ 模型/ 为/ y/ =/ 38077.061/ +/ 6.926/ x1/ +/ 271.560/ x2/ +/ 242.060/ x4/ +/ 940.664/ x5/ +/ 0.175/ x9/ -/ 90520.398/ x12/ (/ 6/ )/ 4.5/ 标准化/ 回归系数/ 式/ (/ 6/ )/ 中/ 自变量/ 的/ 系数/ 的/ 绝对值/ 大小/ 并/ 不能/ 代表/ 各项/ 系数/ 对/ 因变量/ 的/ 影响/ 程度/ ,/ 这/ 是因为/ 各个/ 自变量/ 取值/ 的/ 单位/ 并/ 不/ 统一/ ./ 然而/ ,/ 若/ 某种/ 系数/ 能够/ 代表/ 影响/ 因子/ ,/ 那么/ 对于/ 认识/ TPC/ -/ C/ 性能/ 本身/ 是/ 很/ 有/ 意义/ 的/ ./ 为此/ ,/ 本文/ 对/ 所有/ 样本/ 的/ y/ ,/ x1/ ,/ x2/ ,/ x4/ ,/ x5/ ,/ x9/ ,/ x127/ 项/ 数据/ 进行/ 了/ 标准化/ ,/ 以/ 消除/ 量纲/ 和/ 数量级/ 的/ 差异/ 所/ 带来/ 的/ 影响/ ./ 标准化/ 公式/ 为表/ 8/ 回归/ 值/ 与/ 残差/ CiscoUCSC250M2Extended/ -/ MemoryHPProLiantBladeBL685cG7IBMPower780ServerModel9179/ -/ MHBPOWER74/ ./ 14GHzIBMPower595ServerModel9119/ -/ FHAIBMPOWER65/ ./ 0GHz60851666134795/ ./ 0/ -/ 49628.60/ 其中/ ,/ Ljj/ =/ ∑/ n/ 系数/ 为/ 标准化/ 回归系数/ ,/ 如表/ 7/ ./ 对/ 标准化/ 后/ 的/ 数据/ 进行/ 最小/ 二乘/ 运算/ ,/ 得到/ 的/ 变量/ 号/ 变量/ 名称/ 非/ 标准化/ 系数/ 标准化/ 系数/ 0/ (/ 常量/ )/ 1/ 主频/ ×/ 线程/ 数/ 2cache/ -/ T4memory5memPcpu9IOPS12POWER/ -/ 90520.39757/ -/ ./ 023/ 从/ 结果/ 来看/ ,/ 对/ TPC/ -/ C/ 性能/ 影响/ 最大/ 的/ 自变量/ 得到/ 的/ 回归/ 值/ 与/ 残差/ 见表/ 8/ ./ 残差/ 值/ 的/ 变化/ 范是/ x1/ =/ 主频/ ×/ 线程/ 数/ ./ 4.6/ 应用/ 检验/ 围是/ (/ -/ 140000/ ,/ 170000/ )/ ./ 将/ 从/ 全部/ 样本/ 数据/ 中/ 抽选/ 的/ 6/ 组/ 样本/ 数据/ 代入/ 到/ 回归/ 模型/ 式/ (/ 6/ )/ 中/ 检验/ 回归/ 模型/ 的/ 实际效果/ ,/ 得到/ 结果/ 见表/ 9/ 及图/ 3/ ./ 其中/ ,/ 偏差/ 度/ 的/ 计算方法/ 是/ 实测值/ 与/ 估算/ 值/ 的/ 对/ 比如/ 图/ 3/ 所示/ ./ Page10HPProLiantDL585G5HPProLiantDL385G7PRIMEQUEST540IBMFlexSystemx240PRIMEQUEST580A/ 表/ 9/ 样本/ 数据/ 检验/ 结果/ 实测值/ 4718836291597056521238579150354423820325/ 相关/ 工作/ 目前/ 针对/ 高端/ 容错/ 计算机/ TPC/ -/ C/ 性能/ 预测/ 的/ 研究/ 工作/ 比较/ 少/ ./ 其中/ ,/ 微软/ 研究者/ Barham/ 等/ 人/ [/ 8/ ]/ 的/ 提出/ 的/ Magpie/ 研究/ 框架/ ,/ 通过/ 对/ 微软/ 的/ SQLServer2000/ 关键/ 模块/ 代码/ 进行/ 代码/ 插装/ ,/ 分别/ 建立/ 性能/ 模型/ ,/ 预测/ 系统/ 的/ TPC/ -/ C/ 的/ 性能/ ,/ 取得/ 了/ 很/ 好/ 的/ 预测/ 精度/ ./ 但是/ ,/ 该/ 工作/ 的/ 主要/ 限制/ 是/ :/ (/ 1/ )/ 为了/ 建模/ ,/ Magpie/ 需要/ 数据库系统/ 的/ 源码/ 插装/ ,/ 这/ 对/ 使用/ Oracle/ 等/ 商业/ 数据库系统/ 的/ 用户/ 是/ 一个/ 很难/ 解决/ 的/ 问题/ ;/ (/ 2/ )/ 针对/ 特定/ 系统/ 建立/ 的/ 模型/ 不/ 通用/ ,/ 很难/ 直接/ 应用/ 于/ 其它/ 服务器/ ./ 本文/ 提出/ 基于/ 回归/ 模型/ 的/ 预测/ 方法/ ,/ 不/ 需要/ 提供/ 数据库/ 和/ 操作系统/ 的/ 源码/ ,/ 而且/ 模型/ 比较/ 通用/ ,/ 可以/ 直接/ 应用/ 于/ 大部分/ 系统/ ./ 此外/ ,/ IBM/ 公司/ 对/ 其/ 每一款/ POWER/ 系列/ 的/ Unix/ 服务器/ 都/ 发布/ 了/ 相对/ 性能/ 值/ rPerf/ ①/ (/ RelativePerformance/ )/ ./ rPerf/ 是/ 由/ 解析/ 模型/ 得出/ 的/ 服务器/ 的/ 商业/ 处理/ 性能/ 的/ 估值/ ,/ 该/ 模型/ 综合/ 了/ IBM/ 网络/ 工作/ 负载/ 、/ TPC/ 、/ SPEC/ 等/ 基准/ 测试程序/ 的/ 特点/ ,/ 模拟/ 了/ 部分/ 系统/ 操作/ 如/ CPU/ 、/ 高速缓存/ 和/ 内存/ ,/ 但/ 没有/ 模拟/ 硬盘/ 和/ 网络/ I/ // O/ 操作/ ./ IBMeServerp640/ 为/ 其/ 基准/ ,/ rPerf/ 值为/ 1.0/ ./ 尽管/ IBM/ 公司/ 在/ 对/ rPerf/ 值/ 的/ 解释/ 当中/ 声明/ ,/ rPerf/ 不能/ 代替/ 任何/ 基准/ 测试/ 的/ 结果/ ,/ 但/ 在/ 很多/ 场合/ ,/ rPerf/ 值/ 被/ 用来/ 推导/ TPC/ -/ C/ 性能/ 值/ ./ rPerf/ 值有/ 两个/ 局限/ :/ (/ 1/ )/ rPerf/ 值/ 与/ TPC/ -/ C/ 测试/ 结果/ 之间/ 的/ 近似/ 线性关系/ 存在/ 异常/ 点/ ,/ 若不慎/ 将/ 异常/ 点/ 作为/ 已知/ 的/ 样本/ 去/ 推测/ 未知/ 的/ tpmC/ 值/ ,/ 会/ 造成/ 不可估量/ 的/ 误差/ ./ (/ 2/ )/ rPerf/ 值仅/ 针对/ IBM/ 的/ POWER/ 系列/ Unix/ 服务器/ ,/ 对/ POWER/ 系列/ 以外/ 的/ 服务器/ 机型/ 以及/ 其他/ 厂商/ 的/ 服务器/ 不/ 具备/ 参考价值/ ./ 在/ 计算机领域/ ,/ 每时每刻/ 都/ 产生/ 大量/ 的/ 数据/ ,/ 如何/ 让/ 已有/ 数据/ 产生/ 价值/ 是/ 一个/ 重要/ 的/ 课题/ ./ 多元/ 线/ ①/ IBMCorporation/ ./ TherelativeperformancemetricforPowerPage11/ 性/ 回归/ 模型/ 是/ 统计学/ 中/ 经典/ 的/ 建模/ 方法/ ,/ 广泛/ 用于/ 社会/ 生活/ 的/ 各个领域/ [/ 9/ -/ 12/ ]/ ./ 据/ 我们/ 调研/ 结果/ ,/ 本文/ 是/ 第一次/ 将/ 统计/ 模型/ 的/ 方法/ 用于/ TPC/ -/ C/ 性能/ 预测/ ,/ 解决/ 了/ 非线性/ 转化成/ 线性/ 、/ 实测值/ 与/ 理论值/ 选取/ 、/ 定性/ 变量/ 转化/ 为/ 定量/ 变量/ 等/ 问题/ ,/ 并且/ 收集/ 了/ 大量/ 具备/ 权威性/ 、/ 统一性/ 、/ 可用性/ 的/ 数据/ ,/ 为/ 今后/ 相关/ 工作/ 的/ 研究/ 提供/ 了/ 资料/ ;/ 利用/ 回归/ 模型/ 诊断/ ,/ 确定/ 了/ 影响/ TPC/ -/ C/ 性能/ 的/ 关键/ 硬件/ 因素/ ,/ 对/ 认识/ 和/ 分析/ TPC/ -/ C/ 性能/ 具有/ 重要/ 意义/ ./ 6/ 总结/ 本文/ 提出/ 了/ 一种/ 基于/ 线性/ 回归/ 模型/ 的/ TPC/ -/ C/ 性能/ 预测/ 方法/ ,/ 可以/ 快速/ 、/ 准确/ 地/ 预测/ 高端/ 容错/ 计算机/ 的/ TPC/ -/ C/ 性能/ ./ 通过/ 对/ 39/ 组/ 样本/ 数据/ 进行/ 回归/ 分析/ ,/ 实验/ 结果表明/ 所/ 建/ 模型/ 平均/ 预测/ 精度/ 达到/ 95/ %/ 以上/ ./ 本文/ 的/ 研究成果/ 可以/ 帮助/ 高端/ 容错/ 计算机/ 的/ 研制/ 人员/ 在/ 系统/ 设计阶段/ 预测/ 性能/ ,/ 也/ 帮助/ 购买/ 系统/ 用户/ 分析/ 所购/ 系统/ 的/ 性能/ ./ 

