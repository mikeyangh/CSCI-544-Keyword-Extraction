Page1/ 基于/ 签到/ 数据/ 的/ 短时间/ 体验式/ 路线/ 搜索/ 宋晓宇/ 1/ )/ 许鸿斐/ 1/ )/ 孙焕良/ 1/ )/ 刘俊岭/ 1/ )/ ,/ 2/ )/ 1/ )/ (/ 沈阳/ 建筑/ 大学/ 信息/ 与/ 控制/ 工程学院/ 沈阳/ 110168/ )/ 2/ )/ (/ 东北大学/ 信息科学/ 与/ 控制/ 学院/ 沈阳/ 110004/ )/ 摘要/ 路线/ 搜索/ 已经/ 广泛/ 地/ 应用/ 于/ 基于/ 位置/ 的/ 服务/ 和/ 旅游/ 路线/ 推荐/ 等/ 领域/ ./ 现有/ 的/ 关于/ 路线/ 搜索/ 的/ 研究/ ,/ 通常/ 只/ 考虑/ 景点/ 之间/ 路线/ 的/ 流行/ 程度/ 与/ 用户/ 的/ 需求/ ,/ 因此/ 提供/ 的/ 推荐/ 路线/ 并未/ 考虑/ 景点/ 类别/ 的/ 丰富性/ ,/ 存在/ 类别/ 重复/ 的/ 现象/ ./ 为了/ 能/ 使/ 用户/ 在/ 短时间/ 内/ 体验/ 所在/ 地区/ 不同/ 类别/ 特色/ 的/ 景点/ ,/ 增强/ 旅游/ 体验/ 效果/ ,/ 文中/ 提出/ 一种/ 新/ 的/ 路线/ 搜索/ :/ 短时间/ 体验式/ 路线/ 搜索/ (/ SERS/ )/ ./ 该/ 路线/ 搜索/ 方法/ 根据/ 用户/ 给定/ 的/ 查询/ 位置/ vs/ 、/ 旅行/ 时间/ 限定/ t/ 以及/ 用户/ 对/ 景点/ 类别/ 选择/ 的/ 集合/ uc/ ,/ 找到/ 一条/ 非/ 重复/ 多/ 类别/ 且/ 收益/ 最大化/ 的/ 最优/ 景点/ 访问/ 路线/ ./ 为了/ 有效/ 处理/ SERS/ ,/ 提出/ 一种/ 预计/ 算/ 结点/ 收益/ 上界值/ 的/ 优化/ 策略/ ,/ 设计/ 了/ 两种/ 优化/ 搜索算法/ :/ 单/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ (/ SUB/ )/ 和/ 多/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ (/ MUB/ )/ ./ 优化/ 的/ 搜索算法/ 利用/ 收益/ 上界值/ 剪掉/ 了/ 不/ 可能/ 产生/ 结果/ 的/ 分枝/ ,/ 提高/ 了/ 搜索/ 效率/ ./ 利用/ Gowalla/ 和/ Foursquare/ 社交/ 网站/ 真实/ 的/ 签到/ 数据/ 集/ 进行/ 了/ 充分/ 实验/ ,/ 评估/ 了/ 所/ 提出/ 的/ 算法/ 在/ 不同/ 参数设置/ 下/ 的/ 搜索/ 效率/ ,/ 验证/ 了/ 算法/ 的/ 有效性/ ./ 关键词/ 路线/ 搜索/ ;/ 短时间/ 体验/ ;/ 签到/ 数据/ ;/ 基于/ 位置/ 的/ 服务/ 1/ 引言/ 随着/ 互联网/ 的/ 快速/ 发展/ 与/ 普及/ ,/ Web/ 上/ 的/ 数据/ 日渐/ 增多/ ,/ 数据/ 种类/ 愈发/ 丰富/ ./ 越来越/ 多/ 的/ 人/ 将/ 自己/ 的/ 旅游/ 照片/ 和/ 旅游/ 轨迹/ 等/ 信息/ 上/ 传到/ Flickr/ ①/ 、/ Gowalla/ ②/ 、/ Foursquare/ ③/ 等/ 社交/ 网站/ 上来/ 记录/ 和/ 分享/ 自己/ 的/ 旅游/ 经历/ ./ 通过/ 分析/ 大量/ 的/ 该类/ 数据/ ,/ 可以/ 挖掘出/ 流行/ 的/ 旅游/ 地点/ 与/ 旅游/ 路线/ ,/ 为/ 用户/ 提供/ 有/ 价值/ 的/ 路线/ 推荐/ 与/ 搜索/ 服务/ ./ 现有/ 的/ 研究/ 包括/ :/ 基于/ 景点/ 流行/ 程度/ 的/ 路线/ 推荐/ [/ 1/ -/ 2/ ]/ 、/ 结合/ 用户/ 需求/ 的/ 路线/ 推荐/ 与/ 搜索/ [/ 3/ -/ 6/ ]/ 及/ 查询/ 敏感/ (/ 考虑/ 查询/ 的/ 位置/ 、/ 时间/ 及/ 天气/ )/ 的/ 路线/ 推荐/ [/ 7/ -/ 9/ ]/ 等/ ./ 考虑/ 实际/ 生活/ 中/ 一种/ 新/ 的/ 路线/ 搜索/ 需求/ :/ 用户/ 来到/ 一个/ 陌生/ 的/ 城市/ 出差/ ,/ 公事/ 之/ 余/ 还有/ 几小时/ 空闲/ 时间/ ,/ 希望/ 搜索/ 到/ 一条/ 能够/ 体验/ 所在/ 地区/ 有/ 特色/ 的/ 不同/ 类别/ 的/ 景点/ ,/ 如/ 文化/ 古迹/ 、/ 地貌/ 风景/ 、/ 特色美食/ 等/ 的/ 个性化/ 最优/ 访问/ 路线/ ./ 我们/ 称/ 此类/ 搜索/ 为/ 体验式/ 路线/ 搜索/ ./ 上例/ 表明/ 体验式/ 路线/ 搜索/ 即/ 为/ :/ 结合/ 用户/ 的/ 查询/ 位置/ 与/ 用户/ 提供/ 景点/ 类别/ 的/ 集合/ ,/ 考虑/ 用户/ 对/ 旅行/ 时间/ 限定/ 的/ 基础/ 上/ 搜索/ 到/ 一条/ 非/ 重复/ 多/ 类别/ 且/ 收益/ 最大化/ 的/ 最优/ 景点/ 访问/ 路线/ ./ 由/ 无/ 明确/ 目的地/ 的/ 体验性/ 访问/ 决定/ 了/ 用户/ 希望/ 搜索/ 非/ 重复/ 多/ 类别/ 的/ 景点/ ./ 本文/ 中/ 最大/ 收益/ 以/ 路线/ 上/ 不同/ 类别/ 景点/ 的/ 流行/ 程度/ 之/ 和/ 最大/ 来/ 度量/ ./ 现有/ 的/ 关于/ 路线/ 搜索/ 的/ 研究/ 中/ ,/ 通过/ 用户/ 给出/ 的/ 查询/ 关键字/ 搜索/ 到/ 的/ 最优/ 路线/ 存在/ 关键字/ 类别/ 的/ 重复/ 现象/ [/ 7/ ]/ ./ 而且/ 最优/ 路线/ 的/ 计算/ 大多/ 基于/ 景点/ 之间/ 路线/ 的/ 流行/ 程度/ ,/ 并未/ 考虑/ 景点/ 本身/ 的/ 流行/ 程度/ ,/ 从而/ 忽略/ 了/ 访问/ 景点/ 所/ 带来/ 的/ 收益/ ./ 通过/ 体验式/ 路线/ 搜索/ 得到/ 的/ 最优/ 路线/ ,/ 在/ 考虑/ 景点/ 本身/ 流行/ 程度/ 的/ 基础/ 上/ ,/ 做到/ 了/ 路线/ 中/ 景点/ 类别/ 不/ 重复/ ,/ 增强/ 了/ 旅游/ 的/ 体验性/ 效果/ ./ 此外/ ,/ 现有/ 的/ 关于/ 路线/ 搜索/ 研究/ 采用/ 的/ 数据/ 通常/ 为/ 基于/ 社交/ 平台/ 用户/ 分享/ 的/ 旅游/ 照片/ 和/ GPS/ 轨迹/ 数据/ ./ 随着/ 基于/ 位置/ 的/ 服务/ (/ LBS/ )/ 的/ 兴起/ ,/ Gowalla/ 和/ Foursquare/ 等/ 社交/ 网站/ 提供/ 了/ “/ 签到/ ”/ 服务/ ,/ 用户/ 可以/ 将/ 当前/ 访问/ 地点/ 与/ 时间/ 的/ 信息/ 展现/ 在/ 自己/ 的/ 主页/ 上/ ./ 一条/ 签到/ 数据/ 的/ 结构/ 通常/ 为/ 〈/ UserID/ ,/ Time/ ,/ Longitude/ ,/ Latitude/ ,/ POI/ ,/ Category/ 〉/ ./ 从/ 上述/ 结构/ 可知/ ,/ 签到/ 数据/ 包含/ 用户/ 确切/ 的/ 时空/ 位置/ 信息/ ./ 通过/ 分析/ 用户/ 连续/ 的/ 签到/ 数据/ ,/ 能够/ 得到/ 用户/ 的/ 日常/ 行程/ 以及/ 连续/ 访问/ 两地/ 的/ 时间/ 花费/ ;/ 分析/ 某地/ 的/ 签到/ 数据/ ,/ 还/ 可以/ 得出/ 该地/ 流行/ 的/ 景点/ ;/ 签到/ 数据/ 不仅/ 包含/ 了/ 景点/ 的/ 空间信息/ ,/ 还/ 包含/ 了/ 景点/ 具有/ 的/ 类别/ 特点/ Category/ ./ 此外/ 由/ 文献/ [/ 10/ ]/ 分析/ 可知/ ,/ 大部分/ 有效/ 的/ 连续/ 两次/ 签到/ 的/ 时间/ 间隔/ 都/ 小于/ 6h/ ./ 基于/ 以上/ 特点/ ,/ 签到/ 数据/ 较/ 适用/ 于/ 本文/ 所/ 研究/ 的/ 短时间/ 体验式/ 路线/ 搜索/ ./ 为了/ 能够/ 最大/ 程度/ 上/ 满足用户/ 的/ 需求/ ,/ 现有/ 景点/ 大多/ 包含/ 多个/ 类别/ 特点/ ,/ 例如/ Foursquare/ 网站/ 对/ 旧金山/ 的/ Japantown/ 景点/ 的/ 类别/ 描述/ 为/ {/ arts/ _/ entertainment/ ,/ shop/ }/ ./ 因此/ ,/ 为了/ 能够/ 在/ 短时间/ 内/ 体验/ 到/ 多种/ 类别/ 特点/ ,/ 且/ 要/ 获得/ 最大/ 的/ 收益/ ,/ 可能/ 需要/ 用户/ 在/ 不同/ 的/ 景点/ 体验/ 其中/ 不同/ 的/ 类别/ 特点/ ./ 体验式/ 路线/ 搜索/ 问题/ ,/ 目的/ 是/ 要/ 找到/ 一条/ 最优/ 的/ 景点/ 访问/ 路线/ ,/ 所以/ 可/ 将/ 问题/ 映射/ 到/ 图上/ ,/ 即/ 在/ 图/ 中/ 寻找/ 一条/ 从/ 指定/ 结点/ 出发/ 、/ 满足/ 消耗/ 限定/ 与/ 类别/ 集合/ 的/ 最优/ 路线/ ./ 本文/ 签到/ 数据/ 映射/ 为/ 图/ ,/ 签到/ 的/ POI/ 生成/ 图/ 的/ 结点/ ,/ 两个/ 结点/ 如果/ 有/ 相同/ 用户/ 连续/ 签到/ 则/ 生成/ 一条/ 边/ ./ 图中/ 根据/ 查询/ 结点/ 的/ 位置/ 满足/ 消耗/ 限定/ 与/ 类别/ 集合/ 的/ 路线/ 数量/ 通常/ 较大/ ,/ 所以/ 如何/ 能够/ 快速/ 搜索/ 出/ 一条/ 最优/ 路线/ 是/ 个/ 挑战性/ 问题/ ./ 解决/ 类似/ 问题/ 的/ 方法/ 如/ 文献/ [/ 7/ ]/ 中/ 提出/ 的/ 贪心/ 算法/ 和/ OSScaling/ 算法/ 等/ ,/ 均/ 为/ 近似算法/ ,/ 不能/ 获得/ 问题/ 的/ 精确/ 解/ ./ 所以/ 为了/ 获得/ 准确/ 的/ 最优/ 路线/ ,/ 需要/ 设计/ 高效/ 的/ 搜索算法/ ./ 一种/ 简单/ 的/ 解决/ 方法/ 为/ ,/ 遍历/ 图中/ 满足/ 时间/ 约束/ 的/ 所有/ 可行/ 路线/ ,/ 根据/ 用户/ 提出/ 的/ 类别/ 集合/ 计算/ 路线/ 收益/ ,/ 最终/ 确定/ 可/ 获/ 最大/ 收益/ 的/ 访问/ 路线/ ./ 随着/ 景点/ 个数/ 与/ 景点/ 之间/ 边数/ 的/ 增加/ ,/ 可行/ 路线/ 数会/ 呈/ 指数/ 增长/ ./ 所以/ 该/ 方法/ 不仅/ 效率/ 低/ ,/ 而且/ 伸缩性/ 差/ ./ 为/ 解决/ 上述/ 问题/ ,/ 本文/ 提出/ 预计/ 算/ 收益/ 上/ 界/ 搜索/ 策略/ ./ 该/ 策略/ 为/ ,/ 通过/ 预计/ 算/ 结点/ 收益/ 的/ 上界值/ ,/ 将/ 这些/ 值/ 存储/ 在/ 结点/ 中/ ,/ 用于/ 计算/ 经过/ 当前/ 结点/ 所有/ 路线/ 的/ 收益/ 上界值/ ./ 若该/ 上界值/ 小于/ 当前/ 获得/ 的/ 最优/ 路线/ 的/ 收益值/ ,/ 则/ 说明/ 从/ 当前/ 结点/ 不会/ 得到/ 最优/ 路线/ ./ 因此/ ,/ 可以/ 在/ 该/ 结点/ 停止/ 搜索/ ./ 基于/ 这种/ 策略/ 本文/ 提出/ 了/ 单/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ 与/ 多/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ ,/ 大/ 范围/ 地/ 减少/ 了/ 对/ 可行/ 路线/ 的/ 判别/ ,/ 快速/ 得到/ 满足要求/ 的/ 最大/ 收益/ 路线/ ./ 单/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ 采用/ 分支/ 限界/ 法/ 的/ 思想/ ,/ 较/ 早/ 地/ 得到/ 一条/ 收益/ 较大/ 的/ 路线/ ./ 在/ 搜索/ 过程/ 中/ 不仅/ 通过/ 判别/ 结点/ 最小/ 邻接/ 边权值/ 减去/ 不/ 满足/ 时间/ 约束/ 的/ 子树/ ,/ 而且/ 在/ 对/ 结点/ 进行/ 扩展/ 时/ ,/ 利用/ 结点/ 中/ 提前/ 存储/ 的/ 结点/ 各类/ 收益/ 上界值/ 来/ 计算/ 路线/ 收益/ 上界值/ ,/ 产生/ ①/ ②/ ③/ Page3/ 剪枝/ 条件/ 来/ 减小/ 搜索/ 空间/ ,/ 加快/ 搜索/ 过程/ ./ 多/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ 在/ 单/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ 的/ 基础/ 上/ ,/ 动态/ 选用/ 结点/ 各类/ 收益/ 上界值/ 来/ 计算/ 路线/ 的/ 最小/ 收益/ 上界值/ ,/ 进一步提高/ 对/ 最优/ 路线/ 搜索/ 的/ 效率/ ./ 综上所述/ ,/ 本文/ 的/ 主要/ 贡献/ 如下/ :/ (/ 1/ )/ 提出/ 了/ 一种/ 新/ 的/ 路线/ 搜索/ —/ —/ —/ 短时间/ 体验式/ 路线/ 搜索/ ,/ 可/ 用于/ 基于/ 位置/ 的/ 服务/ 领域/ ,/ 给出/ 了/ 该/ 问题/ 的/ 形式化/ 定义/ ;/ (/ 2/ )/ 提出/ 两种/ 优化/ 算法/ ,/ 包括/ 单/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ 与/ 多/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ ,/ 提高/ 了/ 搜索/ 效率/ ;/ (/ 3/ )/ 运用/ Gowalla/ 和/ Foursquare/ 两个/ 社交/ 网站/ 真实/ 的/ 签到/ 数据/ 集/ ,/ 对/ 文中/ 所/ 提出/ 算法/ 进行/ 充分/ 实验/ 研究/ ,/ 对比/ 了/ 提出/ 算法/ 的/ 搜索/ 效率/ ,/ 验证/ 了/ 算法/ 的/ 有效性/ ./ 本文/ 第/ 2/ 节/ 综述/ 相关/ 研究/ 工作/ ;/ 第/ 3/ 节/ 定义/ 体验式/ 路线/ 搜索/ 问题/ ;/ 第/ 4/ 节/ 给出/ 解决问题/ 的/ 有效/ 算法/ ;/ 第/ 5/ 节/ 给出/ 实验/ 结果/ 及/ 分析/ ;/ 第/ 6/ 节为/ 结论/ 与/ 展望/ ./ 2/ 相关/ 工作/ 近些年/ 出现/ 大量/ 有关/ 旅游/ 路线/ 推荐/ 和/ 搜索/ 的/ 相关/ 研究/ ,/ 通常/ 有/ 以下/ 3/ 种/ :/ 通过/ 分析/ 社交/ 网站/ 上/ 用户/ 分享/ 的/ 旅游/ 照片/ 来/ 推荐/ 旅游/ 路线/ [/ 2/ -/ 3/ ,/ 5/ ,/ 7/ ,/ 11/ -/ 12/ ]/ ;/ 通过/ GPS/ 轨迹/ 来/ 挖掘/ 流行/ 的/ 旅游/ 地点/ 和/ 线路/ [/ 13/ -/ 17/ ]/ ;/ 运用/ 人们/ 日常生活/ 中/ 分享/ 的/ 签到/ 记录/ ,/ 为/ 用户/ 提供/ 基于/ 位置/ 的/ 路线/ 搜索/ [/ 8/ ,/ 18/ -/ 19/ ]/ ./ 文献/ [/ 5/ ]/ 将/ Markov/ 与/ Topic/ 模型/ 进行/ 合并/ ,/ 得到/ 用户/ 对于/ 该/ 主题/ 下/ 景点/ 的/ 访问/ 概率/ ,/ 求得/ Top/ -/ k/ 个/ 满足用户/ 兴趣/ 以及/ 时间/ 约束/ 的/ 旅游/ 路线/ ./ 文献/ [/ 11/ ]/ 充分利用/ 照片/ 数据/ 中/ 的/ Tags/ 和/ Titles/ ,/ 在/ 此基础/ 上/ 得到/ 了/ 不同/ 旅游/ 主题/ 类别/ 的/ 频繁/ 访问/ 模式/ ./ 文献/ [/ 12/ ]/ 运用/ 多样化/ 排序/ 算法/ 将/ 推荐/ 的/ 路线/ 进行/ 多样化/ 的/ 排序/ ,/ 使得/ 推荐/ 的/ 路线/ 之间/ 差异性/ 尽量/ 大/ ,/ 涵盖/ 的/ 景点/ 尽量/ 丰富/ ,/ 能够/ 最大/ 程度/ 地/ 满足/ 不同/ 旅行者/ 的/ 需求/ ./ 文献/ [/ 7/ ]/ 提出/ 了/ KOR/ 问题/ ,/ 即/ 在/ 满足用户/ 提出/ 的/ 关键字/ 与/ 消耗/ 约束/ 的/ 基础/ 上/ 搜索/ 一条/ 最/ 流行/ 的/ 路线/ ./ 运用/ 了/ 近似算法/ OSScaling/ 、/ BucketBound/ 以及/ 贪心/ 算法/ 来/ 解决/ 此/ 问题/ ./ 通过/ 以上/ 研究/ 推荐/ 的/ 路线/ 并未/ 考虑/ 景点/ 类别/ 的/ 丰富性/ ./ 而/ 体验式/ 路线/ 搜索/ ,/ 在/ 考虑/ 了/ 用户/ 的/ 查询/ 位置/ 和/ 对/ 旅行/ 时间/ 限定/ 的/ 基础/ 上/ ,/ 得到/ 的/ 最优/ 路线/ 满足/ 景点/ 类别/ 不/ 重复/ 的/ 需求/ ./ 伴随/ 着/ GPS/ 移动/ 定位系统/ 的/ 发展/ ,/ 通过/ GPS/ 轨迹/ 数据挖掘/ 出/ 最优/ 路线/ ,/ 成为/ 又/ 一个/ 研究/ 热点/ ./ 在/ 文献/ [/ 13/ ]/ 中/ ,/ 运用/ CoherenceExpanding/ 算法/ 构建/ 中间/ 转移/ 网络/ ,/ 运用/ AbsorbingMarkovChain/ 模型/ 与/ MaximumProbabilityProduct/ 算法/ 在/ 转移/ 网络/ 中/ 寻找/ 概率/ 最大/ 的/ 路径/ ./ 文献/ [/ 14/ ]/ 中/ ,/ Chen/ 等/ 人/ 运用/ k/ -/ BCT/ 查询/ 和/ IKNN/ 等/ 算法/ ,/ 给出/ 了/ k/ 条/ 能够/ 很/ 好/ 地/ 贯穿/ 用户/ 指定/ 地点/ 的/ 轨迹/ ./ Cong/ 等/ 人/ 在/ 文献/ [/ 15/ ]/ 提出/ 了/ 一种/ BCK/ -/ tree/ 索引/ 技术/ ,/ 快速/ 地/ 搜寻/ 到/ 满足/ 所有/ 关键字/ 的/ 最/ 短/ 路径/ ./ 文献/ [/ 16/ ]/ 采用/ 基于/ 熵/ 的/ 方法/ 对/ 时间/ 进行/ 分割/ ,/ 运用/ 两/ 阶段/ 路线/ 算法/ ,/ 得出/ 在/ 不同/ 时间/ 下/ 最快/ 的/ 行驶路线/ ./ 文献/ [/ 17/ ]/ 运用/ RICK/ 参考/ 框架/ ,/ 考虑/ 给定/ 的/ 时间/ 间隔/ 的/ 基础/ 上/ 构建/ 出/ 一条/ 最/ 流行/ 的/ 线路/ ,/ 主要/ 解决/ 了/ 在/ GPS/ 轨迹/ 数据/ 比较/ 稀疏/ 的/ 情况/ 下/ ,/ 如何/ 还原/ 出/ 具体/ 路线/ 的/ 问题/ ./ 运用/ GPS/ 轨迹/ 数据/ 搜索/ 出/ 的/ 最优/ 路线/ ,/ 通常/ 是/ 基于/ 景点/ 之间/ 路线/ 的/ 流行/ 程度/ ,/ 而/ 本文/ 体验式/ 路线/ 搜索/ ,/ 对/ 最优/ 路线/ 的/ 计算/ 考虑/ 的/ 是/ 景点/ 本身/ 的/ 流行/ 程度/ ,/ 即/ 景点/ 收益值/ ,/ 更加/ 符合/ 用户/ 希望/ 体验/ 景点/ 价值/ 的/ 需求/ ./ 基于/ 签到/ 数据/ 进行/ 路线/ 推荐/ 是/ 近年来/ 基于/ 位置服务/ 中/ 一个/ 比较/ 流行/ 的/ 研究/ 领域/ ./ 文献/ [/ 8/ ]/ 提出/ 了/ 时间/ 敏感/ 访问/ 路线/ 概念/ ,/ 将/ Kullback/ -/ LeiblerDiver/ -/ gence/ 与/ 高斯分布/ 相结合/ ,/ 求得/ 较/ 好/ 的/ 景点/ 访问/ 时间/ 以及/ 景点/ 之间/ 的/ 转移/ 时间/ ./ 文献/ [/ 18/ ]/ 依照/ 用户/ 的/ 访问/ 历史/ 、/ 用户/ 的/ 社交/ 网络/ 圈/ 以及/ 所/ 访问/ 过/ 地点/ 的/ 实际/ 位置/ 信息/ ,/ 做出/ 合理/ 的/ 访问/ 地点/ 推荐/ ./ 文献/ [/ 19/ ]/ 从/ 连续/ 的/ 签到/ 地点/ 构成/ 的/ 路线/ 中/ 挖掘出/ 频繁/ 的/ 访问/ 模式/ ,/ 根据/ 用户/ 需求/ 推荐/ 分数/ 最高/ 的/ 访问/ 路线/ ./ 本文/ 运用/ 签到/ 数据/ 中/ 包含/ 地点/ 类别/ 信息/ 这一/ 特点/ ,/ 通过/ 确定/ 景点/ 中/ 不同/ 类别/ 特点/ 的/ 收益/ ,/ 使/ 搜索/ 到/ 的/ 路线/ 中/ 各类/ 别/ 收益/ 之/ 和/ 最大化/ ./ 与/ 上述/ 工作/ 相比/ ,/ 本文/ 提出/ 的/ 体验式/ 路线/ 搜索/ ,/ 适用/ 于/ 用户/ 无/ 明确/ 目的地/ 时/ ,/ 结合/ 其/ 提出/ 的/ 时间/ 限定/ 和/ 类别/ 集合/ ,/ 考虑/ 景点/ 流行/ 程度/ 的/ 情况/ ,/ 搜索/ 到/ 的/ 线路/ 能/ 使/ 用户/ 在/ 短时间/ 内/ 体验/ 尽量/ 多/ 类别/ 的/ 景点/ 且/ 类别/ 收益/ 和/ 最大/ ,/ 使得/ 体验/ 效果/ 达到最佳/ ./ 3/ 问题/ 定义/ 给定/ 有/ 向/ 带/ 权图/ G/ =/ (/ V/ ,/ E/ )/ 包括/ 了/ 结点/ 集合/ V/ 和/ 边/ 的/ 集合/ E/ ,/ E/ / V/ ×/ V/ ./ 如图/ 1/ 所示/ ,/ 图中/ 每个/ 结点/ v/ ∈/ V/ 代表/ 一个/ 景点/ ,/ 结点/ 总/ 个数/ 为/ n/ ,/ 每条/ 有/ 向/ 边/ (/ vi/ ,/ vj/ )/ 代表/ 两/ 景点/ 之间/ 的/ 一条/ 可行/ 路线/ ,/ 边/ 的/ 数目/ 为/ |/ E/ |/ ,/ 边上/ 的/ 权值/ 代表/ 访问/ 该/ 两点/ 所/ 花费/ 的/ 总/ 时间/ 代价/ ,/ 用/ b/ (/ vi/ ,/ vj/ )/ 表示/ ./ 一条/ 景点/ 访问/ 路线/ 可/ 表示/ 为/ R/ =/ (/ v0/ ,/ v1/ ,/ v2/ ,/ …/ ,/ vn/ )/ ./ 任一/ 结点/ v/ ∈/ V/ 的/ 邻接/ 点/ 的/ 集合/ 为/ nb/ (/ v/ )/ =/ {/ u/ (/ v/ ,/ u/ )/ ∈/ E/ }/ ,/ 表示/ 与/ 该/ 景点/ Page4/ 存在/ 可行/ 路线/ 的/ 其它/ 景点/ ,/ 结点/ v/ 的/ 出/ 度数/ 为/ d/ (/ v/ )/ =/ |/ nb/ (/ v/ )/ |/ ,/ 结点/ v/ 最小/ 的/ 邻接/ 边/ 的/ 权值/ 为/ md/ (/ v/ )/ ./ 定义/ 1/ ./ 结点/ 类别/ 属性/ ./ 给定/ 有/ 向/ 带/ 权图/ G/ (/ V/ ,/ E/ )/ ,/ 每/ 一个/ 结点/ v/ ∈/ V/ ,/ v/ =/ (/ ID/ ,/ C/ )/ ,/ ID/ 代表/ 该/ 结点/ 的/ 编号/ ,/ C/ 代表/ 该/ 结点/ v/ 的/ 类别/ 属性/ ,/ 定义/ 为/ 其中/ ci/ 表示/ 该/ 结点/ 具有/ ci/ 类别/ 节点/ ,/ pci/ 表示/ 该/ 节点/ 的/ 收益/ ,/ 即该/ 节点/ 的/ 流行/ 程度/ ,/ pci/ 的/ 度量/ 参考文献/ [/ 2/ ]/ 中/ 计算/ 景点/ 流行/ 程度/ 的/ 方法/ ./ 若/ 结点/ 类别/ 属性/ 包含/ 两个/ 或/ 两个/ 以上/ 类别/ 特点/ ,/ 称该/ 结点/ 具有/ 多/ 类别/ 属性/ ./ 若/ 结点/ 包含/ 的/ 类别/ 属性/ 具有/ 双层结构/ ,/ 则/ 其/ 表示/ 为/ C/ =/ {/ 〈/ cij/ ,/ pcij/ 〉/ ,/ …/ ,/ 〈/ ckj/ ,/ pckj/ 〉/ }/ ,/ 其中/ cij/ 表示/ 该/ 结点/ 具有/ cij/ 类别/ 特点/ ,/ cij/ ∈/ ci/ ,/ pcij/ 表示/ 该/ 节点/ 的/ 收益/ ./ 若/ 类别/ 属性/ 具有/ 多层/ 结构/ ,/ 其/ 表示/ 方法/ 以此类推/ ./ 本文/ 采用/ 当前/ 最大/ 基于/ 位置服务/ 的/ 在线/ 网站/ Foursquare/ 的/ 位置/ 点/ 分类/ 方法/ ,/ 描述/ 景点/ 具有/ 的/ 类别/ 特点/ ./ 通常/ 分为/ 8/ 类/ ,/ 记为/ A/ =/ {/ arts/ _/ entertainment/ (/ c1/ )/ ,/ shops/ (/ c2/ )/ ,/ food/ (/ c3/ )/ ,/ nightlife/ (/ c4/ )/ ,/ travel/ (/ c5/ )/ ,/ education/ (/ c6/ )/ ,/ parks/ _/ outdoors/ (/ c7/ )/ ,/ building/ (/ c8/ )/ }/ ./ 以图/ 1/ 为例/ ,/ v0/ ~/ v6/ 结点/ 具有/ 多/ 类别/ 属性/ ,/ v0/ ./ C/ =/ (/ 〈/ c1/ ,/ 0.15/ 〉/ ,/ 〈/ c2/ ,/ 0.40/ 〉/ )/ ,/ 说明/ 该/ 结点/ 表示/ 的/ 景点/ 具有/ arts/ _/ entertainment/ 与/ shops/ 类别/ 特点/ ,/ 流行/ 程度/ 分别/ 为/ 0.15/ 、/ 0.40/ ,/ 可知/ 该/ 景点/ 主要/ 以/ 休闲/ 娱乐/ 为主/ ./ 因为/ 本文/ 采用/ 签到/ 数据/ ,/ 所以/ 无法/ 分别/ 准确/ 测算/ 出/ 在/ 每个/ 景点/ 花费/ 的/ 停留时间/ 与/ 两地/ 的/ 路上/ 花费/ 时间/ ,/ 因此/ 根据/ 签到/ 数据/ 中/ 连续/ 两个/ 景点/ 签到/ 的/ 时间/ 间隔/ 来/ 代表/ 访问/ 这/ 两个/ 景点/ 的/ 总/ 时间/ 代价/ ,/ 所以/ 在/ 图/ G/ 中/ ,/ 两/ 结点/ 之间/ 边/ 的/ 权值/ b/ (/ vi/ ,/ vj/ )/ 为/ 数据/ 集中/ 该/ 两点/ 所有/ 连续/ 签到/ 记录/ 的/ 时间/ 间隔/ 平均值/ ./ 本文/ 假设/ 访问/ 某/ 景点/ 的/ 一个/ 类别/ 特点/ 与/ 多个/ 类别/ 特点/ 所/ 花费/ 的/ 时间/ 是/ 相同/ 的/ ./ 所以/ 图中边/ 的/ 权值/ 与/ 访问/ 结点/ 类别/ 属性/ 的/ 数量/ 无关/ ./ 定义/ 2/ ./ 体验式/ 路线/ 搜索/ 查询/ ./ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ ,/ vs/ 代表/ 用户/ 起始/ 出发点/ ,/ t/ 代表/ 用户/ 设定/ 的/ 最大/ 访问/ 时间/ 约束/ ,/ uc/ 代表/ 用户/ 提出/ 的/ 类别/ 集合/ ,/ 例如/ uc/ =/ {/ c1/ ,/ c2/ }/ ,/ uc/ ./ e/ 为/ 类别/ 集合/ 的/ 大小/ ./ 定义/ 3/ ./ 路线/ 收益/ 与/ 路线/ 消耗/ ./ 在/ 图/ G/ 中/ ,/ 根据/ 用户/ 发出/ 的/ 体验式/ 路线/ 搜索/ 查询/ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ ,/ 得到/ 一条/ 可行/ 路线/ R/ =/ (/ vi/ ,/ vj/ ,/ …/ ,/ vn/ )/ ./ 路线/ 收益/ 为/ 其中/ max/ (/ R/ ,/ ci/ )/ 代表/ 路线/ R/ 中/ ,/ 包含/ ci/ 类别/ 特点/ 的/ 所有/ 结点/ 中/ 收益/ 最大值/ ,/ 且/ ci/ ∈/ uc/ ,/ 其余/ 节点/ 不/ 参与/ 计算/ ./ 如果/ 提出/ 的/ 类别/ 在/ 这条/ 路线/ 中/ 不/ 存在/ ,/ 则/ 其值/ 为/ 0/ ./ 例如/ 图/ 1/ 中/ ,/ 用户/ 发出/ 一条/ 查询/ Q/ =/ 〈/ v2/ ,/ 4/ ,/ {/ c1/ ,/ c2/ ,/ c3/ }/ 〉/ ,/ 其中/ 一条/ 可行/ 路线/ R/ =/ (/ v2/ ,/ v1/ ,/ v5/ )/ ,/ 路线/ 上/ 共有/ 4/ 个/ 类别/ :/ c1/ ,/ c2/ ,/ c3/ ,/ c5/ ,/ max/ (/ R/ ,/ c1/ )/ =/ 0.3/ ,/ max/ (/ R/ ,/ c2/ )/ =/ 0.32/ ,/ max/ (/ R/ ,/ c3/ )/ =/ 0.34/ ,/ max/ (/ R/ ,/ c5/ )/ =/ 0.23/ ,/ W/ (/ R/ )/ =/ 0.3/ +/ 0.32/ +/ 0.34/ =/ 0.96/ ,/ max/ (/ R/ ,/ c5/ )/ 不/ 参与/ 运算/ ./ 路线/ 消耗/ 为/ B/ (/ R/ )/ =/ b/ (/ 2/ ,/ 1/ )/ +/ b/ (/ 1/ ,/ 5/ )/ =/ 4/ ./ 例如/ 上例/ 中/ 景点/ 访问/ 路线/ R/ =/ (/ v2/ ,/ v1/ ,/ v5/ )/ ,/ 问题/ 1/ ./ 体验式/ 路线/ 搜索/ ./ 依据/ 图/ G/ 、/ 体验式/ 路线/ 搜索/ 查询/ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ ,/ 体验式/ 路线/ 为/ :/ 符合/ Q/ ,/ 满足/ B/ (/ R/ )/ / t/ 的/ 所有/ 路线/ 中/ ,/ 能/ 获得/ 最大/ 收益/ 的/ 路线/ ,/ 记为/ Rmax/ ,/ Rmax/ ./ q/ 表示/ 最大/ 收益值/ ,/ 即/ Rmax/ ./ q/ =/ max/ (/ W/ (/ R/ )/ )/ ./ 上例/ 中/ ,/ 用户/ 发出/ 一条/ 查询/ Q/ =/ 〈/ v2/ ,/ 4/ ,/ {/ c1/ ,/ c2/ ,/ c3/ }/ 〉/ ,/ 通过/ 计算/ 得到/ Rmax/ =/ R/ (/ v2/ ,/ v0/ ,/ v3/ )/ ,/ Rmax/ ./ q/ =/ 1.03/ ./ 本文/ 为了/ 强调/ 短时间/ 内/ 体验/ 不同/ 类别/ 的/ 景点/ ,/ 突出/ 访问/ 路线/ 中/ 景点/ 之间/ 属性/ 特点/ 的/ 差异性/ ,/ 采用/ 8/ 种类/ 别来/ 描述/ 景点/ 具有/ 的/ 属性/ 特点/ ./ 针对/ Foursquare/ 的/ 位置/ 点/ 分类/ 方法/ 具有/ 多层次/ 结构/ 特点/ ,/ 本文/ 提出/ 的/ 结点/ 存储/ 结构/ 与/ 相应/ 的/ 搜索算法/ 同样/ 适用/ 于/ 不同/ 粒度/ 的/ 类别/ 选择/ 情境/ ./ 4SERS/ 搜索/ 处理/ 本/ 节/ 研究/ 处理/ SERS/ 搜索/ 的/ 算法/ ,/ 4.1/ 节/ 介绍/ 处理/ 该/ 问题/ 的/ 基本/ 算法/ BSL/ ,/ 4.2/ 节/ 介绍/ 基于/ 预计/ 算/ 收益/ 上界/ 的/ 搜索/ 策略/ ,/ 提出/ 单/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ 和/ 多/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ ,/ 并/ 分析/ 它们/ 的/ 处理过程/ ./ 4.1/ 基本/ 算法/ BSL/ 一种/ 简单/ 的/ 解决/ 体验式/ 路线/ 搜索/ 的/ 方法/ 为/ ,/ 在/ Page5/ 图/ G/ 中/ ,/ 通过/ 遍历/ 满足/ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ 查询/ 的/ 所有/ 可行/ 路线/ ,/ 比较/ 路线/ 的/ 收益值/ ,/ 最终/ 确定/ 最大/ 收益/ 访问/ 路线/ ./ 算法/ 1/ 描述/ 了/ 基本/ 算法/ BSL/ 的/ 细节/ ./ 步骤/ 5/ 中/ ,/ 当已/ 花费/ 时间/ t/ / t/ 时/ ,/ 对/ 过程/ Count/ 进行/ 调用/ ,/ 如/ 过程/ 1/ 所示/ ,/ 计算/ 路线/ 的/ 收益值/ ,/ 否则/ 将/ 该/ 结点/ 放入/ 栈/ V/ 中/ ,/ 递归/ 调用/ BSL/ ,/ 直到/ 遍历/ 完/ 所有/ nb/ (/ vs/ )/ 为止/ ./ 最终/ 输出/ 最大/ 收益/ 路线/ Rmax/ 及/ 最大/ 收益值/ Rmax/ ./ q/ ./ 算法/ 1/ ./ BaselineAlgorithm/ (/ BSL/ )/ ./ 输入/ :/ 有/ 向/ 带/ 权图/ G/ ,/ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ 输出/ :/ Vmax/ 中/ 存储/ 的/ 最大/ 收益/ 路线/ Rmax/ 及/ qmax/ 中/ 存储/ 的/ 1/ ./ 初始化/ 栈/ V/ ,/ Vmax/ ;/ 2/ ./ 已/ 花费/ 时间/ t/ =/ 0/ ;/ 当前/ 最大/ 收益/ qmax/ =/ 0/ ;/ 3/ ./ FORnb/ (/ vs/ )/ 中/ 的/ 每个/ 结点/ vjDO4/ ./ t/ =/ t/ +/ b/ (/ vs/ ,/ vj/ )/ ;/ // // 消耗/ 时间/ 的/ 累加/ 5/ ./ IF/ (/ t/ / t/ )/ 6/ ./ Count/ (/ V/ ,/ uc/ )/ ;/ // // 计算/ 权值/ 7/ ./ ELSE8/ ./ V/ ./ push/ (/ vj/ )/ ;/ 9/ ./ BaselineAlgorithm/ (/ G/ ,/ Q/ =/ 〈/ vj/ ,/ t/ ,/ uc/ 〉/ )/ ./ 在/ 过程/ 1/ 中/ ,/ 步骤/ 3/ ~/ 11/ 对/ V/ 中/ 存储/ 的/ 所有/ 结点/ 的/ 类别/ 属性/ 进行/ 判别/ ,/ 将/ 不同/ 类别/ 的/ 收益值/ 放入/ 不同/ 的/ 数组/ 中/ ,/ N/ 为/ 所有/ 景点/ 类别/ 总数/ ,/ 由/ 上文/ 可知/ N/ =/ |/ A/ |/ =/ 8/ ,/ 步骤/ 12/ 根据/ uc/ 对/ 指定/ 类别/ 数组/ 按权值/ 从/ 大到/ 小/ 进行/ 排序/ ./ 步骤/ 13/ 将/ 各/ 数组/ 中/ 最大值/ 进行/ 相加/ 得到/ W/ (/ R/ )/ ,/ 如果/ W/ (/ R/ )/ >/ qmax/ ,/ 则/ 更改/ qmax/ =/ W/ (/ R/ )/ ./ 过程/ 1/ ./ Count/ (/ V/ ,/ uc/ )/ ./ 1/ ./ 初始化/ 数组/ p1/ ,/ p2/ ,/ …/ ,/ pN/ ;/ 2/ ./ k1/ =/ k2/ =/ …/ =/ kN/ =/ 0/ ;/ W/ (/ R/ )/ =/ 0/ ;/ i/ =/ j/ =/ 0/ ;/ 3/ ./ FORV/ 中/ 的/ 每个/ 结点/ DO4/ ./ FORV/ [/ i/ ]/ ./ CDO5/ ./ SWITCH/ (/ V/ [/ i/ ]/ ./ C/ [/ j/ ]/ )/ 6/ ./ CASEc1/ :/ p1/ [/ k1/ ++/ ]/ =/ V/ [/ i/ ]/ ./ C/ [/ j/ ]/ ./ p/ ;/ 7/ ./ BREAK/ ;/ 8/ ./ CASEc2/ :/ p2/ [/ k2/ ++/ ]/ =/ V/ [/ i/ ]/ ./ C/ [/ j/ ]/ ./ p/ ;/ 9/ ./ BREAK/ ;/ 10/ ./ CASEcN/ :/ pN/ [/ kN/ ++/ ]/ =/ V/ [/ i/ ]/ ./ C/ [/ j/ ]/ ./ p/ ;/ 11/ ./ BREAK/ ;/ 12/ ./ 依照/ uc/ 对/ 满足要求/ 的/ 数组/ 进行/ 排序/ ;/ 13/ ./ W/ (/ R/ )/ =/ 满足要求/ 的/ 数组/ 的/ 最大值/ 进行/ 相加/ ;/ 14/ ./ IF/ (/ W/ (/ R/ )/ >/ qmax/ )/ 15/ ./ Vmax/ =/ V/ ;/ 16/ ./ qmax/ =/ W/ (/ R/ )/ ./ BSL/ 算法/ 通过/ 遍历/ 所有/ 可行/ 路线/ ,/ 最终/ 确定/ 收益/ 最大/ 的/ 景点/ 访问/ 路线/ ./ 在/ 图/ G/ 中/ ,/ 所有/ 结点/ 权值/ 最小/ 的/ 邻接/ 边/ 的/ 值/ 为/ m/ =/ min/ {/ md/ (/ v/ )/ }/ ,/ 则/ 最长/ 路径/ 深度/ 为/ L/ =/ t/ // m/ ,/ 所有/ 结点/ 出/ 度/ 最大值/ 为/ D/ =/ max/ {/ d/ (/ v/ )/ }/ ,/ 则/ 找到/ 满足要求/ 的/ 所有/ 路线/ 的/ 最/ 多/ 访问/ 结点/ 数为/ DL/ -/ 1/ 为/ O/ (/ 1/ )/ ,/ 则/ BSL/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ DL/ -/ 1/ )/ ./ 时间/ 复杂度/ 随着/ t/ 的/ 增加/ 呈/ 指数/ 次/ 幂/ 增长/ ,/ 随着/ d/ (/ v/ )/ 增加/ 时间/ 复杂度/ 也/ 会/ 急剧/ 增长/ ./ 所以/ 该/ 方法/ 不仅/ 效率/ 低/ ,/ 而且/ 伸缩性/ 差/ ./ 4.2/ 优化/ 算法/ 为/ 解决/ BSL/ 算法/ 的/ 不足/ ,/ 本文/ 提出/ 一种/ 基于/ 预计/ 算/ 收益/ 上界/ 的/ 搜索/ 策略/ ./ 基于/ 这种/ 策略/ ,/ 提出/ 两种/ 优化/ 算法/ ,/ 分别/ 为/ :/ 单/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ (/ SUB/ )/ 和/ 多/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ (/ MUB/ )/ ./ 在/ 搜索/ 过程/ 中/ SUB/ 与/ MUB/ 算法/ 不仅/ 利用/ 图中/ 结点/ 的/ 邻接/ 边/ 最小/ 权值/ 减去/ 不/ 满足/ 时间/ 约束/ 的/ 子树/ ,/ 而且/ 利用/ 存储/ 在/ 结点/ 中/ 提前/ 生成/ 的/ 结点/ 各类/ 收益/ 上界值/ 来/ 计算/ 经过/ 当前/ 结点/ 的/ 所有/ 路线/ 的/ 收益/ 上界值/ ,/ 产生/ 剪枝/ 条件/ ,/ 减小/ 搜索/ 空间/ ./ 4.2/ ./ 1/ 基于/ 预计/ 算/ 收益/ 上界/ 的/ 搜索/ 策略/ SERS/ 搜索/ 是/ 在/ 图/ 中/ 找到/ 一条/ 最优/ 路线/ 的/ 过程/ ./ 在/ 搜索/ 的/ 过程/ 中/ ,/ 对/ 当前/ 结点/ 进行/ 扩展/ 时/ ,/ 如果/ 能/ 得到/ 经过/ 当前/ 结点/ 所有/ 路线/ 的/ 收益/ 上界值/ ,/ 且/ 该/ 上界值/ 小于/ 当前/ 获得/ 的/ 最优/ 路线/ 的/ 收益值/ ,/ 则/ 说明/ 从/ 当前/ 结点/ 不会/ 得到/ 最优/ 路线/ ./ 因此/ ,/ 可以/ 在/ 该/ 结点/ 停止/ 搜索/ ./ 通过/ 预计/ 算/ 结点/ 收益/ 的/ 上界值/ ,/ 将/ 这些/ 值/ 存储/ 在/ 结点/ 中/ ,/ 用于/ 计算/ 经过/ 当前/ 结点/ 所有/ 路线/ 的/ 收益/ 上界值/ ./ 图/ 2/ (/ a/ )/ 给出/ 了/ 结点/ 存储/ 结构/ ,/ 图中/ ID/ 表示/ 结点/ 编号/ ,/ C/ 是/ 该/ 结点/ 类别/ 属性/ ,/ 用/ 一个/ 列表/ 存储/ 该/ 结点/ 的/ 所有/ 类别/ 及/ 收益值/ ./ 在/ 结点/ 中/ 用/ 一个/ 列表/ τ/ 存储/ N/ 个类/ 的/ 收益/ 上界值/ p/ τ/ -/ c1/ ,/ p/ τ/ -/ c2/ ,/ …/ ,/ p/ τ/ -/ cN/ ,/ 其中/ ,/ p/ τ/ -/ ci/ 为/ 时间/ 约束/ τ/ 下/ ci/ 类/ 可/ 获得/ 的/ 收益/ 上界值/ ,/ ci/ ∈/ A/ ./ 文中/ 类别/ 总数/ |/ A/ |/ =/ 8/ ,/ 所以/ 每个/ 结点/ 需要/ 存储/ 8/ 个/ 收益值/ ./ 定义/ 4/ ./ 路线/ 收益/ 上界值/ ./ 给定/ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ ,/ 此时/ 扩展/ 结点/ 为/ v/ ,/ lci/ 为/ 当前/ 路径/ 满足/ uc/ 的/ 各类/ 别/ Page6/ 最大/ 收益值/ ,/ 则/ 经过/ 当前/ 结点/ 所有/ 路线/ 的/ 收益/ 上界值/ 由式/ (/ 4/ )/ 计算/ ./ 由/ 定义/ 4/ 可知/ ,/ 在/ 运用/ 结点/ 各类/ 最大/ 收益值/ 来/ 计算/ 路线/ 收益/ 上界时/ ,/ 一定/ 要/ 保证/ τ/ / t/ ./ 由于/ 本文/ 强调/ 短时/ 性/ ,/ 所以/ t/ 的/ 取值/ 通常/ 为/ [/ 0/ ,/ 10/ ]/ ,/ 则/ τ/ 通常/ 取/ 10/ ./ 定理/ 1/ ./ 在/ 图/ G/ 中/ ,/ 给定/ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ ,/ qmax/ 为/ 当前/ 寻找/ 到/ 的/ 可行/ 路线/ 中/ 收益/ 最大/ 路线/ 的/ 收益值/ ,/ t/ 为/ 当前/ 路径/ 已/ 花费/ 时间/ ,/ 当/ 结点/ v/ 为/ 扩展/ 结点/ 时/ ,/ 如果/ Wv/ (/ R/ )/ / qmax/ ,/ 则/ 停止/ 搜索/ v/ 的/ 子树/ ,/ 不会/ 丢失/ 结果/ ./ 证明/ ./ 当/ 访问/ 到/ 结点/ v/ 时/ ,/ 此时/ 剩余时间/ r/ =/ t/ -/ t/ ,/ 如果/ Wv/ (/ R/ )/ / qmax/ ,/ 说明/ 从/ 结点/ v/ 出发/ ,/ 在/ 剩余时间/ 为/ r/ 时/ ,/ 不能/ 获得/ 更大/ 收益/ 的/ 路线/ ,/ 即/ 不能/ 获得/ 问题/ 最优/ 解/ ,/ 因此/ 可/ 停止/ 搜索/ v/ 的/ 子树/ ,/ 即/ 对/ 其子/ 树/ 进行/ 剪枝/ ,/ 提高/ 访问/ 效率/ ./ 定理/ 2/ ./ 如果/ 存在/ t/ / τ/ i/ </ τ/ j/ ,/ 那/ p/ τ/ i/ -/ ci/ / p/ τ/ j/ -/ ci/ ,/ ci/ ∈/ A/ ./ 证明/ ./ 从/ 结点/ v/ 出发/ 在/ 时间/ 约束/ 为/ τ/ 时/ 可以/ 访问/ 到/ 的/ 结点/ 集合/ 为/ N/ (/ v/ ,/ τ/ )/ ,/ 因为/ τ/ i/ </ τ/ j/ ,/ 所以/ N/ (/ v/ ,/ τ/ i/ )/ / N/ (/ v/ ,/ τ/ j/ )/ ,/ 根据/ 结点/ 各类/ 收益/ 上界值/ 的/ 定义/ ,/ 可得/ p/ τ/ i/ -/ ci/ / p/ τ/ j/ -/ ci/ ./ 由/ 定理/ 2/ 可知/ ,/ 在/ 运用/ 结点/ 各类/ 收益/ 上界值/ 来/ 计算/ 路线/ 收益/ 上界时/ ,/ 一定/ 要/ 保证/ τ/ / t/ ,/ 但是/ τ/ 过/ 大会/ 使/ 收益/ 上界值/ 过/ 大/ ,/ 不利于/ 剪枝/ 操作/ ./ 为了/ 适应/ 不同/ t/ ,/ 需要/ 不同/ τ/ ,/ 构成/ 时间/ 约束/ 集合/ Y/ =/ {/ τ/ 1/ ,/ τ/ 2/ ,/ …/ ,/ τ/ k/ }/ ./ 在/ 图/ 2/ (/ a/ )/ 所示/ 单/ 收益/ 上/ 界/ 结点/ 结构/ 基础/ 上/ ,/ 我们/ 设图/ 3/ 图/ 1/ 的/ 状态/ 空间/ 树计/ 了/ 多/ 收益/ 上界/ 的/ 结点/ 结构/ ,/ 如图/ 2/ (/ b/ )/ 所示/ ./ 结点/ 保存/ 了/ k/ 个/ 列表/ ,/ 分别/ 对应/ k/ 个/ 时间/ 约束/ 值/ ,/ 满足/ τ/ 1/ </ τ/ 2/ </ …/ </ τ/ k/ ./ 由于/ t/ 通常/ 为/ [/ 0/ ,/ 10/ ]/ ,/ 则/ 可设/ 两级/ 结构/ 为/ τ/ 1/ =/ 5/ ,/ τ/ 2/ =/ 10/ ./ 多/ 上界值/ 使用/ 方法/ 是/ 根据/ 时间/ 约束/ t/ ,/ 从/ Y/ 中/ 选择/ 不/ 小于/ t/ 的/ 最小值/ 所/ 对应/ 的/ 结点/ 各类/ 最大/ 收益值/ ,/ 来/ 计算/ 路线/ 收益/ 上界值/ ,/ 称此/ 上界值/ 为/ 路线/ 最小/ 收益/ 上界值/ ,/ 表示/ 为/ Wmin/ -/ v/ (/ R/ )/ ./ 例如/ 图/ 3/ 为/ 图/ 1/ 中/ vs/ =/ v2/ ,/ uc/ =/ {/ c1/ ,/ c2/ ,/ c3/ }/ ,/ 每个/ 结点/ 提前/ 存储/ τ/ 1/ =/ 5/ ,/ τ/ 2/ =/ 10/ ,/ 各类/ 别的/ 两个/ 收益/ 上界值/ 的/ 状态/ 空间/ 树/ ./ 用户/ 发出/ 查询/ Q/ =/ 〈/ v2/ ,/ 4/ ,/ {/ c1/ ,/ c2/ ,/ c3/ }/ 〉/ ,/ t/ =/ 4/ ,/ t/ </ τ/ 1/ ,/ 为了/ 得到/ 路线/ 最小/ 收益/ 上界值/ ,/ 采用/ τ/ 1/ 时/ 各类/ 收益/ 上界值/ 来/ 计算/ ./ 当/ v3/ 成为/ 扩展/ 结点/ 时/ ,/ 此时/ qmax/ =/ 1.03/ ,/ v3/ ./ p/ τ/ 1/ -/ c1/ =/ 0.10/ ,/ v3/ ./ p/ τ/ 1/ -/ c2/ =/ 0.34/ ,/ v3/ ./ p/ τ/ 1/ -/ c3/ =/ 0.35/ ,/ 此时/ lc1/ =/ 0.30/ ,/ lc2/ =/ 0.00/ ,/ lc3/ =/ 0.31/ ,/ 所以/ Wmin/ -/ v3/ (/ R/ )/ =/ 0.30/ +/ 0.34/ +/ 0.35/ =/ 0.99/ ./ Wmin/ -/ v3/ (/ R/ )/ </ qmax/ ./ 利用/ 定理/ 1/ 的/ 剪枝/ 条件/ ,/ 可以/ 停止/ 搜索/ v3/ 的/ 子树/ ./ 若/ 此时/ 采用/ τ/ 2/ 时/ 各类/ 收益/ 上界值/ 来/ 计算/ 路线/ 收益/ 上界值/ ,/ Wv3/ (/ R/ )/ =/ 1.05/ ./ Wv3/ (/ R/ )/ >/ qmax/ ,/ 需要/ 继续/ 搜索/ v3/ 的/ 子树/ ,/ 未/ 达到/ 最优/ 剪枝/ 效果/ ./ 4.2/ ./ 2/ 单/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ SUB/ 我们/ 利用/ 预计/ 算图/ 中/ 各/ 结点/ 的/ 单/ 收益/ 上界值/ ,/ 采用/ 图/ 2/ (/ a/ )/ 所示/ 的/ 结点/ 结构/ ,/ 设计/ 了/ 一种/ 基于/ 分支/ 限界/ 的/ 优化/ 算法/ SUB/ ./ 在/ 搜索/ 过程/ 中/ ,/ 选择/ 下/ 一个/ 扩展/ 结点/ 时/ ,/ 计算/ 当前/ 收益值/ ,/ 选择/ 一个/ 收益值/ 最大/ 结点/ 作为/ 扩展/ 结点/ ,/ 以便/ 快速/ 得到/ 收益值/ 较大/ 的/ 访问/ 路线/ ./ 算法/ SUB/ 的/ 具体/ 执行/ 过程/ 如/ 算法/ 2/ 所示/ ./ Page7/ 算法/ 2/ ./ SUB/ ./ 输入/ :/ 有/ 向/ 带/ 权图/ G/ ,/ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ 输出/ :/ Vmax/ 中/ 存储/ 的/ 最大/ 收益/ 路线/ Rmax/ 及/ qmax/ 中/ 存储/ 的/ 1/ ./ 初始化/ 最大/ 堆/ H/ ,/ 栈/ V/ ,/ Vmax/ ;/ 2/ ./ t/ =/ 0/ ,/ 当前/ 最大/ 收益/ qmax/ =/ 0/ ,/ vt/ 存储/ H/ 中/ 优先级/ 3/ ./ FORnb/ (/ vs/ )/ 中/ 每个/ 结点/ vjDO4/ ./ IF/ (/ b/ (/ vs/ ,/ vj/ )/ +/ t/ / t/ )/ 5/ ./ H/ ./ push/ (/ vj/ )/ ;/ 6/ ./ WHILE/ (/ H/ !/ =/ Null/ )/ 7/ ./ vt/ =/ pop/ (/ H/ )/ ;/ 8/ ./ t/ =/ t/ +/ b/ (/ vs/ ,/ vt/ )/ ;/ 9/ ./ IF/ (/ t/ / t/ )/ 10/ ./ Count/ (/ V/ ,/ uc/ )/ ;/ 11/ ./ ELSE12/ ./ IF/ (/ Wv/ (/ R/ )/ >/ qmax/ )/ // // 剪枝/ 判定/ 13/ ./ V/ ./ push/ (/ vj/ )/ ;/ 14/ ./ IF/ (/ md/ (/ vj/ )/ +/ t/ / t/ )/ // // 时间/ 约束/ 15/ ./ 算法/ 2/ 中/ ,/ H/ 为/ 最大/ 堆/ ,/ 表示/ 活/ 结点/ 优先/ 对列/ ,/ 优先级/ 是/ 当前/ 收益值/ ./ 步骤/ 7/ ,/ 取出/ H/ 中/ 优先级/ 最高/ 结点/ 进行/ 扩展/ ./ 步骤/ 12/ ,/ 利用/ 结点/ 中/ 各类/ 收益/ 上界值/ ,/ 确定/ 路线/ 收益/ 上界值/ ./ 与/ 算法/ BSL/ 相同/ ,/ 算法/ SUB/ 同样/ 是/ 在/ 图/ G/ 中/ 找到/ 可行/ 路线/ 进行/ 判别/ ,/ 最终/ 确定/ 收益/ 最大/ 的/ 访问/ 路线/ ./ 但/ 不同/ 的/ 是/ ,/ 在/ 搜索/ 过程/ 中/ ,/ 算法/ SUB/ 并/ 没有/ 遍历/ G/ 中/ 所有/ 的/ 满足/ 时间/ 约束/ t/ 的/ 可行/ 路线/ ,/ 而是/ 利用/ 定理/ 1/ 的/ 剪枝/ 条件/ (/ 见/ 算法/ 2/ 步骤/ 12/ )/ 剪切/ 掉/ 不能/ 产生/ 最大/ 收益值/ 的/ 子树/ ,/ 减小/ 搜索/ 空间/ ./ 4.2/ ./ 3/ 多/ 收益/ 上/ 界/ 剪枝/ 搜索算法/ MUB/ 一种/ 基于/ 分支/ 限界/ 的/ 优化/ 算法/ MUB/ ./ 在/ SUB/ 算法/ 的/ 基础/ 上/ 我们/ 发现/ ,/ 随着/ 访问/ 的/ 进行/ ,/ 剩余时间/ r/ 是/ 逐渐/ 减小/ 的/ ,/ 可以/ 根据/ r/ 的/ 值来/ 动态/ 选用/ 结点/ 各类/ 收益/ 上界值/ ,/ 从而/ 得到/ 路线/ 最小/ 收益/ 上界值/ ./ 例如/ ,/ 每个/ 结点/ 提前/ 存储/ 时间/ 约束/ 为/ τ/ 1/ =/ 5/ ,/ τ/ 2/ =/ 10/ 时/ 各类/ 收益/ 上界值/ ,/ 当/ t/ =/ 6/ ,/ r/ =/ 6/ 时/ ,/ 选用/ 时间/ 约束/ 为/ τ/ 2/ 时/ 各类/ 收益/ 上界值/ 计算/ 路线/ 最小/ 收益/ 上界值/ ,/ 但是/ 当/ r/ =/ 4/ 时/ ,/ 应该/ 选用/ 时间/ 约束/ τ/ 1/ 来/ 计算/ 路线/ 最小/ 收益/ 上界值/ ,/ 从而/ 进一步/ 减小/ 搜索/ 空间/ ,/ 加快/ 对/ 最优/ 解/ 的/ 搜索/ ./ 算法/ MUB/ 的/ 具体/ 执行/ 过程/ 如/ 算法/ 3/ 所示/ ./ 利用/ 预计/ 算图/ 中/ 各/ 结点/ 的/ 多/ 收益/ 上界值/ ,/ 设计/ 算法/ 3/ ./ MUB/ ./ 输入/ :/ 有/ 向/ 带/ 权图/ G/ ,/ Q/ =/ 〈/ vs/ ,/ t/ ,/ uc/ 〉/ 输出/ :/ Vmax/ 中/ 存储/ 的/ 最大/ 收益/ 路线/ Rmax/ 及/ qmax/ 中/ 存储/ 的/ 1/ ./ 初始化/ 最大/ 堆/ H/ ,/ 栈/ V/ ,/ Vmax/ ;/ 2/ ./ t/ =/ 0/ ,/ 当前/ 最大/ 收益/ qmax/ =/ 0/ ,/ vt/ 存储/ H/ 中/ 优先级/ 最/ 3/ ./ FORnb/ (/ vs/ )/ 中/ 每个/ 结点/ vjDO4/ ./ IF/ (/ b/ (/ vs/ ,/ vj/ )/ +/ t/ / t/ )/ 5/ ./ H/ ./ push/ (/ vj/ )/ ;/ 6/ ./ WHILE/ (/ H/ !/ =/ Null/ )/ 7/ ./ vt/ =/ pop/ (/ H/ )/ ;/ 8/ ./ t/ =/ t/ +/ b/ (/ vs/ ,/ vt/ )/ ;/ 9/ ./ IF/ (/ t/ / t/ )/ 10/ ./ Count/ (/ V/ ,/ uc/ )/ ;/ 11/ ./ ELSE12/ ./ r/ =/ t/ -/ t/ ;/ 13/ ./ τ/ 选取/ / r/ 的/ 最小值/ ;/ 14/ ./ IF/ (/ Wmin/ -/ v/ (/ R/ )/ >/ qmax/ )/ // // 剪枝/ 判定/ 15/ ./ V/ ./ push/ (/ vj/ )/ ;/ 16/ ./ IF/ (/ md/ (/ vj/ )/ +/ t/ / t/ )/ // // 时间/ 约束/ 17/ ./ MUB/ (/ G/ ,/ Q/ =/ 〈/ vj/ ,/ t/ ,/ uc/ 〉/ )/ ./ 算法/ 3/ 中/ ,/ 步骤/ 12/ ~/ 14/ ,/ 按照/ 剩余时间/ r/ 来/ 动态/ 选用/ 结点/ 各类/ 收益/ 上界值/ ,/ 从而/ 确定/ 路线/ 最小/ 收益/ 上界值/ ./ 例如/ 图/ 3/ 所示/ ,/ 用户/ 发出/ 查询/ 为/ 〈/ v2/ ,/ 6/ ,/ {/ c1/ ,/ c2/ ,/ c3/ }/ 〉/ ,/ 首先/ 得到/ 一条/ 收益/ 较大/ 路线/ R/ (/ v2/ ,/ v0/ ,/ v3/ ,/ v5/ )/ ,/ W/ (/ R/ )/ =/ 0.3/ +/ 0.4/ +/ 0.34/ =/ 1.04/ ,/ 即/ qmax/ =/ 1.04/ ./ 因为/ τ/ 1/ </ t/ </ τ/ 2/ ,/ 所以/ 当/ v3/ 成为/ 扩展/ 结点/ 时/ ,/ 如果/ 采用/ 时间/ 约束/ 为/ τ/ 2/ 时/ 各类/ 收益/ 上界/ 来求/ 路线/ 上界值/ ,/ 则/ Wv3/ (/ R/ )/ =/ 1.05/ >/ qmax/ ,/ 需要/ 继续/ 访问/ 结点/ 的/ 子树/ ,/ 使/ 其子/ 结点/ 加入/ 到/ 最大/ 堆中/ ,/ 但是/ 最终/ 判别/ 是/ 不能/ 大于/ 当前/ 最大值/ 的/ ./ 我们/ 注意/ 到/ ,/ 在/ v3/ 成为/ 扩展/ 结点/ 时/ ,/ 剩余时间/ r/ </ 5/ ,/ 所以/ 这时/ 采用/ 时间/ 约束/ 为/ τ/ 1/ 时/ 各类/ 收益/ 上界值/ 来求/ 路线/ 最小/ 收益/ 上界值/ ,/ 此时/ Wmin/ -/ v3/ (/ R/ )/ =/ 0.99/ </ qmax/ ,/ 可以/ 减去/ 结/ 点子/ 树/ ,/ 从而/ 减少/ 结点/ 访问/ 次数/ 与/ 算法/ 递归/ 次数/ ./ 因此/ ,/ MUB/ 算法/ 具有/ 更好/ 的/ 剪枝/ 效果/ ./ 4.2/ ./ 4/ 算法/ 评价/ 分析/ 由/ 3.1/ 节/ 可知/ BSL/ 算法/ 需要/ 遍历/ 图中/ 所有/ 的/ 可行/ 路线/ ,/ 在/ 图/ G/ 中/ ,/ 所有/ 结点/ 权值/ 最小/ 的/ 邻接/ 边/ 的/ 值/ 为/ m/ =/ min/ {/ md/ (/ v/ )/ }/ ,/ 则/ 最长/ 路径/ 深度/ 为/ L/ =/ t/ // m/ ,/ 所有/ 结点/ 出/ 度/ 最大值/ 为/ D/ =/ max/ {/ d/ (/ v/ )/ }/ ,/ 时间/ 复杂度/ 为/ O/ (/ DL/ -/ 1/ )/ ,/ 时间/ 花费/ 随着/ t/ 的/ 增加/ 呈/ 指数/ 次/ 幂/ 增长/ ./ 在/ BSL/ 的/ 基础/ 上/ ,/ 我们/ 引入/ 路线/ 最小/ 收益/ 上界值/ Wmin/ -/ v/ (/ R/ )/ ,/ 用于/ 剪去/ 不/ 含/ 最优/ 解的子/ 树/ ./ 虽然/ 在/ 改进/ 后/ 算法/ 的/ 时间/ 复杂度/ 仍然/ 为/ O/ (/ DL/ -/ 1/ )/ ,/ 并且/ 为了/ 求出/ Wmin/ -/ v/ (/ R/ )/ 需要/ 存储/ 不同/ 时间/ 约束/ 下/ 的/ 结点/ 各类/ 收益/ 上界值/ ,/ 这样/ 会/ 增大/ 空间/ 的/ 开销/ ,/ 但是/ 加入/ Wmin/ -/ v/ (/ R/ )/ 后/ ,/ 在/ 平均/ 情况/ 下/ 算法/ 检查/ 的/ 结点/ 数目/ 、/ 递归/ 的/ 次数/ 、/ 计算/ 时间/ 呈/ 指数/ 级别/ 减少/ ./ 所以/ ,/ 优化/ 算法/ 是/ 以/ 空间/ 换/ 时间/ 的/ 典型/ 案例/ ./ Page85/ 实验/ 结果/ 与/ 分析/ 本/ 节/ 我们/ 对/ 所/ 提出/ BSL/ 算法/ 、/ SUB/ 算法/ 和/ MUB/ 算法/ 在/ 搜索/ 效率/ 上/ 进行/ 对比/ ./ 所有/ 算法/ 均/ 由/ C语言/ 编程/ 实现/ ,/ 实验/ 在/ PC机/ 上/ 执行/ ,/ 处理器/ 为/ IntelCPUP87002/ ./ 80GHz/ ,/ 主存/ 为/ 3.0/ GB/ ,/ 操作系统/ 为/ WindowXPPro/ ./ 5.1/ 实验/ 数据/ 实验/ 中/ 采用/ Gowalla/ 和/ Foursquare/ 社交/ 网站/ 真实/ 的/ 签到/ 数据/ 集/ ./ 本文/ 选取/ Gowalla/ 数据/ 集中/ 美国/ 旧金山市/ 从/ 2009/ 年/ 3/ 月/ 到/ 2010/ 年/ 10/ 月/ 的/ 155254/ 条/ 签到/ 记录/ ./ 我们/ 对/ 数据/ 进行/ 预处理/ ,/ 除去/ 虚假/ 数据/ ,/ 过滤/ 掉/ 低于/ 10/ 次/ 签到/ 的/ 地点/ ,/ 得到/ 了/ 3545/ 个/ 地点/ ./ 图/ 4/ 为/ 3545/ 个/ 地点/ 的/ 签到/ 次数/ 的/ 统计/ 柱状图/ ./ 3545/ 个/ 地点/ 共/ 签到/ 133151/ 次/ ,/ 平均/ 地点/ 的/ 签到/ 次数/ 为/ 37.56/ 次/ ./ 利用/ Foursquare/ 签到/ 数据/ 集中/ 对/ 每个/ 地点/ 类别/ 的/ 描述/ ,/ 再/ 参考文献/ [/ 2/ ]/ 中/ 基于/ 类别/ 来/ 计算/ 景点/ 流行/ 程度/ 的/ 方法/ ,/ 来/ 确定/ 3545/ 个/ 地点/ 中/ 每个/ 地点/ 包含/ 的/ 类别/ 以及/ 类别/ 的/ 收益值/ ./ 如果/ 两次/ 签到/ 在/ 同一天/ 并且/ 时间/ 间隔/ 超过/ 1h/ ,/ 我们/ 就/ 认为/ 这两点/ 之间/ 的/ 这条/ 路线/ 是/ 有/ 意义/ 的/ ,/ 在/ 两点/ 之间/ 构造/ 一条/ 有/ 向/ 边/ ,/ 边/ 的/ 权值/ 取该/ 路线/ 所有/ 记录/ 的/ 平均值/ ./ 得到/ 15607/ 条有/ 向/ 边/ ,/ 边/ 的/ 权值/ 平均/ 为/ 3.12/ h/ ./ 其中/ 3012/ 个/ 结点/ 有/ 出度/ ,/ 结点/ 的/ 平均/ 出/ 度数/ 为/ 5.18/ 个/ ,/ 即/ 从/ 每个/ 地点/ 出发/ 可有/ 5/ 个/ 左右/ 的/ 地点/ 进行/ 下/ 一步/ 选择/ ,/ 图/ 5/ 为/ 各地/ 点/ 出/ 度数/ (/ d/ (/ v/ )/ )/ 统计/ ./ 5.2/ 效率/ 对比/ 实验/ 本/ 节/ 针对/ 问题/ 的/ 相关/ 参数/ 进行/ 实验/ 分析/ ,/ 对/ 各/ 算法/ 的/ 效率/ 进行/ 了/ 比较/ ./ 由图/ 5/ 可知/ ,/ 各/ 结点/ 出/ 度数/ 相差/ 很大/ ,/ 大/ 的/ 出度/ 甚至/ 超过/ 了/ 100/ ,/ 这样/ 的/ 大/ 图会/ 增加/ 运行/ 开销/ ,/ 同时/ 不利于/ BSL/ 算法/ 的/ 进行/ ./ 所以/ ,/ 通过/ 控制/ 结点/ 出/ 度数/ 来/ 缩小/ 图/ 的/ 尺寸/ ,/ 如表/ 1/ 所示/ ,/ 为/ 5/ 个/ 有向图/ 的/ 参数/ 对比/ ./ 表/ 15/ 个/ 有向图/ 结点/ 最大/ 度数/ 、/ 结点/ 数/ 、/ 边数/ 图/ 号/ d/ (/ v/ )/ nG1G2G3G4G5/ 图/ 6/ 为/ 3/ 种/ 算法/ 在/ 不同/ 尺寸/ 的/ 图上/ 搜索/ 效率/ 方面/ 的/ 表现/ ./ 其中/ ,/ 参数设置/ 为/ t/ =/ 6/ ,/ uc/ =/ {/ c1/ ,/ c2/ ,/ c3/ }/ ,/ Y/ =/ {/ τ/ 1/ ,/ τ/ 2/ }/ ,/ τ/ 1/ =/ 5/ ,/ τ/ 2/ =/ 10/ ./ 从图/ 6/ 为/ 我们/ 可以/ 看出/ ,/ n/ 相同/ 的/ 情况/ 下/ ,/ d/ (/ v/ )/ 不同/ ,/ |/ E/ |/ 不同/ ,/ 运行/ 时间/ 不同/ ./ 因为/ d/ (/ v/ )/ 的/ 增加/ ,/ 可行/ 路线/ 数会/ 相应/ 的/ 增加/ ,/ 造成/ 运行/ 时间/ 的/ 增加/ ./ 图/ 6/ (/ a/ )/ 所示/ ,/ 算法/ SUB/ 比/ BSL/ 的/ 访问/ 结点/ 数/ 减少/ 了/ 约/ 35/ %/ ,/ 而/ 算法/ MUB/ 则/ 减少/ 了/ 68/ %/ ./ 图/ 6/ (/ b/ )/ 中/ 显示/ 了/ 算法/ 的/ 运行/ 时间/ ,/ 与/ 图/ 6/ (/ a/ )/ 中/ 算法/ 的/ 结点/ 访问/ 数/ 相一致/ ./ 与/ BSL/ 相比/ ,/ 算法/ MUB/ 运行/ 时间/ 平均/ 缩短/ 1/ 倍/ ./ 实验/ 表明/ ,/ 通过/ 剪枝/ 操作/ ,/ 较大/ 地/ 提高/ 了/ 搜索/ 最优/ 路线/ 的/ 运行/ 效率/ ./ MUB/ 算法/ 通过/ 动态/ 确定/ 结点/ 各类/ 最小/ 阈值/ ,/ 搜索/ 效率/ 进一步提高/ ./ 除了/ 限定/ d/ (/ v/ )/ 来/ 缩小/ 图/ 的/ 尺寸/ 之外/ ,/ 还/ 可/ 将/ 大图/ 根据/ 结点/ 位置/ 拆/ 分成/ 一系列/ 小/ 尺寸/ 子图/ ./ 根据/ 查询/ 位置/ ,/ 在/ 不同/ 的/ 子/ 图上/ 进行/ 搜索/ ,/ 减少/ 算法/ 的/ 运行/ 开销/ ,/ 提高/ 搜索/ 的/ 效率/ ,/ 这里/ 不再/ 进行/ 详细/ 讨论/ ./ 图/ 7/ 为/ 通过/ 改变/ uc/ ./ e/ ,/ 即/ 改变/ 用户/ 提供/ 景点/ 类别/ 集合/ 的/ 大小/ ,/ 来/ 比较/ 3/ 种/ 算法/ 的/ 运行/ 效率/ ./ 其中/ ,/ 参数设置/ 为/ G2/ ,/ t/ =/ 6/ ,/ Y/ =/ {/ τ/ 1/ ,/ τ/ 2/ }/ ,/ τ/ 1/ =/ 5/ ,/ τ/ 2/ =/ 10/ ./ 从图/ 7/ (/ a/ )/ 、/ (/ b/ )/ 可以/ 看出/ ,/ uc/ ./ e/ 的/ 改变/ 对/ 3/ 种/ 算法/ 性能/ 影响/ 较/ 小/ ,/ 3/ 种/ 算法/ 访问/ 结点/ 个数/ 没有/ 改变/ ,/ 因为/ 判别/ 可行/ 路线/ 的/ 条数/ 没有/ 改变/ ,/ 3/ 种/ 算法/ 运行/ 时间/ 略有/ 上升/ ,/ 原因/ 是/ uc/ ./ e/ 增加/ 时/ ,/ 要/ 进行/ 更/ 多/ 的/ 类别/ 排序/ 以及/ 略/ 复杂/ 的/ 收益/ 计算/ ./ 图/ 8/ 为/ 通过/ 变化/ t/ ,/ 即/ 用户/ 提出/ 最大/ 时间/ 限定/ ,/ 来/ 比较/ 3/ 种/ 算法/ 的/ 运行/ 效率/ ./ 其中/ ,/ 参数设置/ 为/ G2/ ,/ uc/ =/ {/ c1/ ,/ c2/ ,/ c3/ }/ ,/ Y/ =/ {/ τ/ 1/ ,/ τ/ 2/ }/ ,/ τ/ 1/ =/ 5/ ,/ τ/ 2/ =/ 10/ ./ 从图/ 8/ (/ a/ )/ 、/ (/ b/ )/ 可以/ 看出/ ,/ 算法/ 访问/ 结点/ 数/ 与/ 算法/ 运行/ 时间/ Page9/ 图/ 7/ 类别/ 集合/ 大小/ uc/ ./ e/ 对/ 算法/ 性能/ 的/ 影响/ 图/ 8/ 最大/ 访问/ 时间/ 约束/ t/ 对/ 算法/ 性能/ 的/ 影响/ 的/ 趋势/ 基本一致/ ./ 随着/ t/ 的/ 改变/ ,/ 访问/ 结点/ 个数/ 与/ 运行/ 时间/ 都/ 呈/ 指数/ 次/ 幂/ 增长/ ,/ 同/ 3.1/ 节中/ 分析/ 一致/ ./ SUB/ 与/ MUB/ 算法/ 利用/ 了/ 剪枝/ 条件/ ,/ 缩小/ 了/ 查询/ 范围/ ,/ 提高/ 了/ 运行/ 效率/ ./ MUB/ 算法/ 在/ 此/ 具有/ 最高/ 性能/ ./ 图/ 9/ 显示/ 了/ 改变/ 结点/ 时间/ 约束/ 集合/ Y/ ,/ 3/ 种/ 算法/ 运行/ 效率/ 的/ 变化/ ./ 其中/ ,/ 参数设置/ 为/ G2/ ,/ t/ =/ 6/ ,/ uc/ =/ {/ c1/ ,/ c2/ ,/ c3/ }/ ./ 从图/ 中/ 可知/ ,/ 时间/ 范围/ 一定/ 的/ 情况/ 下/ ,/ 时间/ 分割/ 粒度/ 越细/ ,/ 优化/ 算法/ 效果/ 越好/ ./ 因为/ 粒度/ 越小/ ,/ 结点/ 最小/ 上界值/ 越/ 小/ ,/ 剪枝/ 效果/ 越好/ ./ 但是/ 需要/ 增加/ 结点/ 的/ 存储空间/ ./ 为了/ 增强/ 实验/ 效果/ ,/ 体现/ 用户/ 查询/ 的/ 随机性/ ,/ 我们/ 在/ G2/ 图中/ 随机/ 选取/ 5/ 个/ 不同/ 的/ 查询/ 位置/ ,/ 比较/ 3/ 种/ 算法/ 的/ 运行/ 效率/ ,/ 如图/ 10/ 所示/ ,/ 其中/ ,/ 参数设置/ 为/ G2/ ,/ t/ =/ 6/ ,/ uc/ =/ {/ c1/ ,/ c2/ ,/ c3/ }/ ,/ Y/ =/ {/ τ/ 1/ ,/ τ/ 2/ }/ ,/ τ/ 1/ =/ 5/ ,/ τ/ 2/ =/ 10/ ./ 从图/ 10/ 可/ 看出/ ,/ 不同/ 查询/ 点/ ,/ 两个/ 优化/ 算法/ 运行/ 效率/ 都/ 优于/ BSL/ ,/ 图/ 10/ (/ a/ )/ 中/ 算法/ SUB/ 比/ BSL/ 的/ 访问/ 结点/ 数/ 平均/ 减少/ 了/ 约/ 36/ %/ ,/ 算法/ MUB/ 则/ 减少/ 了/ 47/ %/ ./ 图/ 10/ (/ b/ )/ 中/ ,/ 与/ 算法/ BSL/ 相比/ ,/ SUB/ 算法/ 平均/ 缩短/ 65/ %/ 的/ 运行/ 时间/ ,/ 算法/ MUB/ 获得/ 了/ 平均/ 1.13/ 倍/ 的/ 加速/ 比/ ./ 针对/ 真实/ 数据/ 集/ 的/ 效率/ 实验/ 表明/ ,/ SUB/ 算法/ 与/ Page10MUB/ 算法/ 在/ 各种/ 参数设置/ 下/ 运行/ 效率/ 均/ 优于/ BSL/ 算法/ ,/ 由于/ MUB/ 算法/ 动态/ 选用/ 结点/ 各类/ 收益/ 上界值/ ,/ 剪枝/ 效果/ 优于/ SUB/ 算法/ ./ 综上/ ,/ MUB/ 算法/ 具有/ 最高/ 的/ 性能/ ./ 6/ 结论/ 与/ 展望/ 本文/ 提出/ 一种/ 新/ 的/ 路线/ 搜索/ :/ 体验式/ 路线/ 搜索/ ,/ 该/ 路线/ 搜索/ 方法/ 可/ 为/ 用户/ 推荐/ 一条/ 短时间/ 内/ 快速/ 体验/ 该地/ 不同/ 类别/ 景点/ 的/ 最优/ 路线/ ./ 为/ 解决/ 可行/ 路线/ 数目/ 过多/ 的/ 问题/ ,/ 本文/ 提出/ 基于/ 预计/ 算/ 收益/ 上/ 界/ 搜索/ 策略/ 的/ 两种/ 剪枝/ 优化/ 算法/ :/ SUB/ 算法/ 和/ MUB/ 算法/ ./ SUB/ 算法/ 采用/ 分支/ 限界/ 法/ 的/ 思想/ ,/ 较/ 早/ 地/ 得到/ 一条/ 收益/ 较大/ 的/ 路线/ ,/ 通过/ 运用/ 提前/ 求出/ 的/ 结点/ 各类/ 收益/ 上界值/ 求出/ 路线/ 收益/ 上界值/ ,/ 作为/ 剪枝/ 条件/ ,/ 减少/ 结点/ 访问/ 数目/ ,/ 从而/ 减少/ 对/ 可行/ 路线/ 的/ 判别/ 数目/ ./ MUB/ 算法/ 在/ SUB/ 算法/ 的/ 基础/ 上/ ,/ 根据/ 剩余时间/ 动态/ 选用/ 结点/ 各类/ 收益/ 上界值/ ,/ 进一步提高/ 了/ 搜索/ 效率/ ./ 本文/ 利用/ 真实/ 数据/ 集/ 进行/ 了/ 搜索/ 效率/ 对比/ ./ 实验/ 表明/ ,/ 所/ 提出/ 的/ MUB/ 算法/ 具有/ 最高/ 的/ 搜索/ 效率/ ./ 考虑/ 到/ 部分/ 景点/ 不同/ 时间段/ 流行/ 程度/ 不同/ 这一/ 事实/ ,/ 在/ 将来/ 的/ 工作/ 中/ 我们/ 要/ 将/ 时间/ 因素/ 加入/ 到/ 对/ 景点/ 收益/ 的/ 度量/ 当中/ ,/ 并且/ 根据/ 不同/ 的/ 时间/ 选择/ 不同/ 的/ 类别/ ,/ 使得/ 搜索/ 到/ 的/ 体验式/ 路线/ 更加/ 准确/ 、/ 更好/ 地/ 体现/ 基于/ 位置服务/ 的/ 特点/ ./ 

