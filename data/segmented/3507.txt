Page1/ 面向/ 下一代/ 互联网/ 实验/ 平台/ 的/ 新型/ 报文/ 处理/ 模型/ —/ —/ —/ EasySwitch/ 李韬/ 孙志刚/ 陈一骄/ 贾春波/ 苏琪/ 郭/ 腾飞/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 摘要/ 下一代/ 互联网/ 实验/ 平台/ 应/ 能/ 提供/ 网络/ 原型/ 系统/ 快速/ 开发/ 及/ 部署/ 能力/ ,/ 以/ 有效/ 支撑/ 新型/ 互联网/ 体系结构/ 关键技术/ 的/ 实现/ 和/ 验证/ ./ 基于/ FPGA/ (/ FieldProgrammableGateArray/ )/ 技术/ 构建/ 的/ 网络/ 实验/ 平台/ 可以/ 提供/ 较/ 高/ 的/ 可编程/ 性/ 和/ 性能/ ,/ 而/ 它/ 对/ 硬件/ 逻辑设计/ 能力/ 的/ 要求/ 则/ 严重/ 限制/ 了/ 平台/ 的/ 广泛应用/ ./ 新型/ 报文/ 处理/ 模型/ EasySwitch/ 通过/ 优化/ 设计/ 并/ 预置/ 通用/ 报文交换/ 及/ 处理/ 逻辑/ ,/ 有效/ 实现/ 用户/ 定制/ 报文/ 处理/ 逻辑/ 与/ 通用/ 报文/ 处理/ 逻辑/ 解/ 耦/ ;/ 良/ 定义/ 的/ 用户/ 模块接口/ 则/ 使/ 用户/ 仅/ 需/ 关注/ 业务/ 特定/ 逻辑/ 实现/ ,/ 有效/ 简化/ 用户/ 逻辑设计/ ./ 理论/ 分析表明/ ,/ EasySwitch/ 可/ 通过/ 提供/ 确定性/ 资源/ 约束/ 模型/ ,/ 有效/ 支持/ FPGA/ 资源/ 的/ 优化/ 利用/ ./ 此外/ ,/ EasySwitch/ 具有/ 较/ 低/ 的/ 报文/ 调度/ 处理/ 延迟/ ,/ 对/ 实验/ 系统/ 输入/ 流量/ 真实/ 特性/ 影响/ 较/ 小/ ./ EasySwitch/ 模型/ 在/ NetMagic/ 平台/ 的/ 有效/ 实现/ 及/ 应用/ 表明/ 该/ 模型/ 可/ 为/ 下一代/ 互联网/ 新型/ 报文/ 处理/ 机制/ 及/ 协议/ 的/ 快速/ 设计/ 、/ 开发/ 和/ 验证/ 提供/ 有力/ 支撑/ ./ 关键词/ 报文/ 处理/ 模型/ ;/ 实验/ 平台/ ;/ 报文交换/ ;/ NetMagic/ 平台/ ;/ FPGA1/ 引言/ 在/ 真实/ 网络/ 环境/ 中/ 进行/ 实验/ 并/ 收集/ 数据/ 结果/ 是/ 下一代/ 互联网/ 创新/ 技术/ 研究/ 最/ 有效/ 和/ 最具/ 说服力/ 的/ 手段/ ./ 因此/ ,/ 下一代/ 互联网/ 体系结构/ 研究/ [/ 1/ ]/ 无论是/ 采用/ 渐进式/ 演进/ 路线/ (/ 如/ 中国/ 下一代/ 互联网/ 示范/ 工程/ CNGI/ )/ 还是/ CleanSlate/ 革命性/ 路线/ (/ 如/ 美国/ 国家/ 科学/ 基金会/ FIND/ 项目/ )/ 都/ 强调/ 网络/ 实验/ 平台/ 在/ 实现/ 和/ 验证/ 新型/ 网络协议/ 和/ 服务/ 方面/ 的/ 关键/ 地位/ ./ NSFGENI/ (/ GlobalEnvironmentsforNetworkInnova/ -/ tion/ )/ 计划/ 、/ EUFP7FIRE/ 计划/ ,/ 以及/ 日本/ 的/ JGNX/ 计划/ 都/ 试图/ 通过/ 构建/ 大规模/ 可编程/ 实验/ 床/ 支持/ 下一代/ 互联网/ 技术/ 研究/ ./ 以/ 路由器/ 为/ 代表/ 的/ 网络设备/ 作为/ 支撑/ 互联网/ 运行/ 的/ 基础/ ,/ 是/ 支撑/ 下一代/ 互联网/ 实验/ 平台/ 构建/ 的/ 关键/ ./ 为/ 有效/ 支持/ 以/ 软件/ 定义/ 网络/ 、/ 虚拟化/ 、/ 原语/ 扩展/ 等/ 下一代/ 互联网/ 技术/ ,/ 支撑/ 网络/ 技术/ 研究/ 的/ 实验/ 平台/ 必须/ 提供/ 可编程/ 、/ 可/ 重构/ 以及/ 可/ 重用/ 特性/ ,/ 能/ 有效/ 支持/ 网络/ 技术/ 快速/ 开发/ 与/ 部署/ ,/ 降低/ 验证/ 测试/ 成本/ ,/ 匹配/ 新型/ 互联网/ 功能/ 原语/ 的/ 时空/ 演化/ 特性/ ./ 面向/ 上述/ 需求/ ,/ 出现/ 了/ 基于/ 通用/ 微处理器/ (/ 纯/ 软件/ )/ 、/ 网络/ 处理器/ 、/ 图形/ 处理单元/ GPU/ (/ GraphicsProcessingUnit/ )/ 、/ ASIC/ (/ Application/ -/ SpecificInte/ -/ gratedCircut/ )/ 以及/ FPGA/ (/ FieldProgrammableGateArray/ )/ 等/ 的/ 网络/ 实验/ 平台/ ./ 其中/ ,/ FPGA/ 技术/ 由于/ 具有/ 可/ 重构/ 能力/ ,/ 可/ 取得/ 在/ 性能/ 和/ 灵活性/ 方面/ 的/ 良好/ 折衷/ ,/ 目前/ 受到/ 广泛/ 关注/ ./ 作为/ 采用/ FPGA/ 技术/ 的/ 典型/ 代表/ ,/ NetFPGA/ 平台/ [/ 2/ ]/ 基于/ 模块化/ 可/ 重用/ 设计/ 思想/ ,/ 提供/ 清晰/ 的/ 接口/ 及/ 丰富/ 的/ 参考/ 设计/ ,/ 广泛应用/ 于/ 网络/ 教学/ 和/ 科研/ ./ 然而/ ,/ NetFPGA/ 平台/ 缺乏/ 支持/ 用户/ 开发/ 的/ 优化/ 报文/ 处理/ 模型/ ,/ 难以/ 为/ 用户/ 逻辑/ 功能/ 的/ 规划设计/ 提供/ 有效/ 支撑/ ./ SwitchBlade/ [/ 3/ ]/ 基于/ 流水/ 化/ 思想/ ,/ 设计/ 了/ 一种/ 可/ 定制/ 报文/ 处理/ 模型/ ,/ 能够/ 有效/ 支持/ 新型/ 网络协议/ 和/ 虚拟化/ 技术/ ./ 然而/ ,/ 为/ 减少/ 硬件/ 综合/ 时间/ ,/ 该/ 模型/ 预置/ 了/ 丰富/ 的/ 可/ 配置/ 流水线/ 功能模块/ ,/ 占用/ 硬件资源/ 较/ 多/ ,/ 限制/ 了/ 用户/ 开发/ 灵活性/ ./ 基于/ FPGA/ 技术/ 的/ 实验/ 平台/ 设计/ 门槛/ 较/ 高/ ,/ 需要/ 开发者/ 具有/ 一定/ 硬件/ 开发/ 及/ 设计/ 经验/ ,/ 很多/ 平台/ 还/ 需要/ 用户/ 提前/ 规划/ 实验/ 方案/ 的/ 性能指标/ 和/ 硬件资源/ 使用/ ,/ 从而/ 阻碍/ 了/ FPGA/ 实验/ 平台/ 的/ 广泛应用/ ./ 面向/ 下一代/ 互联网/ 技术/ 的/ 实验/ 平台/ 及/ 相应/ 模型/ 应/ 能够/ 最大/ 限度/ 简化/ 用户/ 硬件/ 逻辑/ 开发/ ,/ 降低/ 设计/ 开发/ 门槛/ ./ 此外/ ,/ 针对/ FPGA/ 硬件资源/ 有限/ 的/ 特点/ 还应/ 提供/ 确定性/ 资源/ 占用/ 及/ 性能/ 评估/ 模型/ ,/ 以/ 指导/ 和/ 协助/ 用户/ 完成/ 设计规划/ ./ 针对/ 上述/ 需求/ ,/ 本文/ 提出/ 了/ 一种/ 面向/ 下一代/ 互联网/ 实验/ 平台/ 的/ 新型/ 报文/ 处理/ 模型/ —/ —/ —/ EasySwitch/ ./ EasySwitch/ 模型/ 主要/ 特点/ 包括/ :/ (/ 1/ )/ 通过/ 预置/ 通用/ 报文交换/ 处理/ 逻辑/ 及良/ 定义/ 用户/ 逻辑/ 开发/ 接口/ ,/ 实现/ 用户/ 业务/ 逻辑/ 与/ 通用/ 处理/ 逻辑/ 显式/ 分离/ ;/ 虚拟化/ 技术/ ;/ (/ 2/ )/ 支持/ 并行/ 数据/ 平面/ 和/ 资源/ 隔离/ ,/ 支持/ 网络/ (/ 3/ )/ 提供/ 确定性/ 模型/ 指导/ 硬件资源/ 配置/ 及/ 性能/ 优化/ ,/ 为/ 用户/ 逻辑/ 规划/ 和/ 开发/ 提供/ 充分/ 设计/ 裕度/ ./ 2/ 相关/ 工作/ 随着/ 下一代/ 互联网/ 研究/ 的/ 开展/ 和/ 深入/ ,/ 支撑/ 实验/ 床/ 构建/ 的/ 网络设备/ 平台/ 体系结构/ 和/ 处理/ 模型/ 也/ 逐渐/ 引起/ 关注/ ./ Click/ 模块化/ 路由器/ [/ 4/ ]/ 支持/ 以/ 软件/ 方式/ 进行/ 定制/ 协议/ 和/ 报文/ 转发/ 操作/ 的/ 快速/ 开发/ ./ 而/ 基于/ 内核/ 的/ 报文/ 转发/ 很难/ 实现/ 线速/ 处理/ 性能/ ./ 高性能/ 软件/ 路由器/ RouteBricks/ [/ 5/ ]/ 基于/ 商用/ 多核/ 处理器/ 实现/ 可/ 获得/ 较/ 高/ 报文/ 转发/ 性能/ ,/ 但/ 可扩展性/ 受限于/ 连接/ 网卡/ 和/ CPU/ 的/ PCI/ -/ E/ (/ PeripheralComponentInterconnectExpress/ )/ 总线/ 带宽/ ./ 此外/ ,/ 采用/ RouteBricks/ 开发/ 的/ 原型/ 也/ 很/ 难/ 移植/ 到/ 硬件/ 上/ ./ PacketShader/ [/ 6/ ]/ 利用/ GPU/ 加速/ 软件/ 路由器/ 报文/ 处理过程/ ,/ 通过/ 应用程序/ (/ 库/ 程序/ )/ 控制/ 硬件/ 转发/ 过程/ ,/ 可以/ 达到/ 每秒/ 数百万/ 报文/ 的/ 处理速度/ ./ 然而/ ,/ 所/ 采用/ 的/ 批处理/ 方式/ 会/ 引入/ 较/ 高/ 的/ 报文/ 处理/ 延迟/ [/ 3/ ]/ ./ Page3SuperchargedPlanetLab/ (/ SPP/ )/ [/ 7/ ]/ 基于/ IntelIXP/ 网络/ 处理器/ 实现/ 报文/ 数据/ 平面/ 处理/ ,/ 具有/ 同时/ 线速/ 处理/ 来自/ 多个/ 端口/ 报文/ 的/ 能力/ ./ 由于/ 部署/ 代价/ 昂贵/ ,/ 目前/ 仅/ 适合/ 在/ 大规模/ 交换/ 中心/ 中/ 部署/ ./ PNIC/ [/ 8/ ]/ 采用/ 配备/ 了/ IXP285516/ 核/ 网络/ 处理器/ 的/ NetronomeNFE/ -/ i8000/ 构建/ ,/ 支持/ 数据中心/ 网络/ 相关/ 技术/ ,/ 可以/ 灵活/ 实现/ 虚拟/ 网卡/ 、/ Openflow/ 交换/ [/ 9/ ]/ 及时/ 钟/ 同步/ 等/ 功能/ ./ 基于/ 网络/ 处理器/ 的/ 方式/ 可以/ 获得/ 较/ 高/ 的/ 处理/ 性能/ 和/ 编程/ 灵活性/ ./ 然而/ ,/ 编程/ 开发/ 与/ 特定/ 厂商/ 平台/ 相关/ ,/ 缺乏/ 可移植性/ ,/ 限制/ 了/ 其/ 数据/ 平面/ 功能/ 的/ 优化/ 实现/ 与/ 重用/ ./ PLUG/ [/ 10/ ]/ 提供/ 了/ 一个/ 编程/ 模型/ 框架/ 用于/ 实现/ 高性能/ 报文/ 查找/ 芯片/ ,/ 可以/ 获得/ 高速/ 报文/ 处理/ 能力/ ,/ 然而/ 全/ 定制/ 芯片/ 设计/ 代价/ 较/ 高/ ,/ 开发周期/ 较长/ ./ ServerSwitch/ [/ 11/ ]/ 采用/ 集成商/ 用/ 交换/ 芯片/ 方式/ 实现/ 报文/ 定制/ 处理/ ,/ 由/ 服务器/ CPU/ 负责/ 报文/ 控制/ 平面/ 和/ 数据/ 平面/ 处理/ ,/ 可以/ 有效/ 实现/ 数据中心/ 网络/ 多种/ 组网/ 方式/ 所/ 需/ 的/ 路由/ 交换/ 功能/ ./ 然而/ 商用/ 交换/ 芯片/ 的/ 可编程/ 能力/ 仍然/ 局限于/ 特定/ 报/ 文字/ 段/ 的/ 匹配/ 处理/ ,/ 难以/ 有效/ 支持/ 新型/ 网络协议/ 的/ 实现/ 与/ 验证/ ./ 与/ 基于/ ASIC/ 的/ 平台/ 相比/ ,/ 基于/ FPGA/ 的/ 设计/ 不仅/ 可以/ 提供/ 功能/ 可/ 重构/ 能力/ ,/ 还/ 可以/ 极大/ 缩短/ 开发/ 和/ 部署/ 周期/ ;/ 相比/ 基于/ 软件/ 的/ 平台/ ,/ 在/ 性能/ 方面/ 更具/ 优势/ ./ 例如/ ,/ NetFPGA/ 平台/ 作为/ 一款/ 面向/ 网络/ 课程/ 教学/ 的/ 评估/ 卡/ ,/ 在/ 教学科研/ 中/ 已/ 得到/ 十分/ 广泛/ 的/ 应用/ ./ NetFPGA/ 通过/ 提供/ 丰富/ 的/ 参考/ 设计/ (/ 如/ IPv4/ 路由器/ 、/ OpenFlow/ 交换机/ 等/ )/ ,/ 以/ 重用/ 和/ 修改/ 移植/ 等/ 方式/ ,/ 为/ 用户/ 逻辑/ 功能/ 实现/ 提供/ 支持/ ./ 然而/ ,/ 由于/ 缺乏/ 对/ 用户/ 逻辑/ 和/ 平台/ 预置/ 逻辑/ 进行/ 清晰/ 划分/ 的/ 报文/ 处理/ 模型/ ,/ 用户/ 逻辑/ 开发/ 受限于/ 特定/ 参考/ 设计/ 的/ 复杂度/ 和/ 相似/ 度/ ,/ 在/ 一定/ 程度/ 上/ 制约/ 了/ 网络/ 实验/ 原型/ 系统/ 的/ 快速/ 构建/ ./ 基于/ FPGA/ 实现/ 的/ OpenFlow/ 交换/ 模型/ 和/ SwitchBlade/ 处理/ 模型/ [/ 3/ ]/ 都/ 试图/ 通过/ 硬件/ 提供/ 丰富/ 报文/ 处理/ 功能/ 集合/ 以/ 增强/ 新型/ 网络/ 技术/ 的/ 快速/ 开发/ 和/ 部署/ 能力/ ./ 然而/ ,/ 互联网/ 技术/ 的/ 演进/ 性/ 将/ 导致/ 预置/ 报文/ 处理/ 功能/ 集合/ 不断/ 膨胀/ ,/ 很难/ 期望/ 能够/ 获得/ 一个/ 稳定/ 的/ 功能/ 基底/ ./ 此外/ ,/ 上述/ 模型/ 预置/ 的/ 通用/ 报文/ 处理/ 逻辑/ 较为/ 复杂/ ,/ 与/ 实验/ 无关/ 的/ 特定/ 功能/ 逻辑/ 占用/ 较/ 多/ FPGA/ 硬件资源/ ,/ 难以/ 为/ 用户/ 开发/ 提供/ 充足/ 的/ 可用/ 资源/ ./ 3EasySwitch/ 处理/ 模型/ EasySwitch/ 处理/ 模型/ 面向/ 可/ 重构/ FPGA/ 技术/ 提出/ ,/ 试图/ 通过/ 预置/ 优化/ 的/ 报文交换/ 及/ 处理/ 功能/ ,/ 简化/ 用户/ 逻辑/ 开发/ 及/ 调试/ 工作/ ,/ 并/ 通过/ 定义/ 简洁/ 而/ 清晰/ 的/ 接口/ ,/ 将/ 用户/ 业务/ 逻辑/ 与/ 预置/ 逻辑/ 显式/ 分离/ ,/ 使/ 用户/ 可以/ 专注/ 于/ 业务/ 逻辑/ 开发/ ,/ 而/ 不/ 需/ 了解/ 其它/ 外围/ 模块/ 的/ 功能/ 实现/ 细节/ ./ 与/ 已有/ 模型/ 不同/ ,/ EasySwitch/ 处理/ 模型/ 充分考虑/ FPGA/ 资源/ 的/ 有限性/ ,/ 仅/ 试图/ 通过/ 预置/ 网络设备/ (/ 路由器/ 、/ 交换机/ 等/ )/ 基础/ 、/ 稳定/ 的/ 通用/ 报文/ 处理/ 功能/ ,/ 即/ 报文交换/ 功能/ ,/ 将/ 报文/ 分类/ 、/ 查表/ 匹配/ 、/ 深度/ 报文/ 检测/ 等/ 高级/ 报文/ 处理/ 功能/ 以/ 可/ 重用/ 硬件/ 模块/ 构件/ 方式/ 提供/ 给/ 用户/ ,/ 供/ 用户/ 按/ 需/ 集成/ ./ 除/ 报文交换/ 功能/ 外/ ,/ EasySwitch/ 还/ 基于/ 聚类/ 合并/ 方法/ ,/ 预置/ 了/ 核心/ 报文/ 处理/ 功能/ 逻辑/ ./ 基于/ 对/ 通用/ 报文/ 处理/ 操作/ 的/ 归纳/ 总结/ ,/ 通过/ 编码/ 形成/ 报文/ 处理/ 规则/ 集合/ ./ 如图/ 1/ 所示/ ,/ EasySwitch/ 报文/ 处理/ 模型/ 主要/ 由/ 三/ 部分/ 组成/ ,/ 即/ 输入/ 控制/ IC/ (/ InputControl/ )/ 、/ 输出/ 控制/ OC/ (/ OutputControl/ )/ 以及/ 用户/ 模块/ UM/ (/ UserModule/ )/ ./ 基本/ 的/ 报文交换/ 功能/ 由/ IC/ // OC/ 中/ 输入/ 调度/ 器/ IS/ (/ InputScheduler/ )/ 和/ 输出/ 调度/ 器/ OS/ (/ OutputScheduler/ )/ 协同/ 完成/ ,/ 而/ 报文/ 处理/ 规则/ 指定/ 的/ 报文/ 处理/ 操作/ 则/ 由/ OC/ 通过/ 对/ 来自/ UM/ 的/ 处理/ 规则/ 信号/ 解码/ 完成/ ./ IC/ // OC/ 是/ EasySwitch/ 模型/ 定义/ 的/ 预置/ 处理/ 逻辑/ ,/ UM/ 承载/ 用户/ 业务/ 处理/ 逻辑/ 实现/ ./ 用户/ 模块接口/ UMS/ (/ UserModuleSocket/ )/ 则/ 显式/ 定义/ 了/ 预置/ 处理/ 逻辑/ 与/ 用户/ 自定义/ 逻辑/ 间/ 的/ 接口/ ,/ 用户/ 逻辑/ 的/ 开发/ 只/ 需/ 考虑/ 满足/ UMS/ 规范/ 要求/ ,/ 无须/ 关心/ 预置/ 逻辑/ 的/ 具体/ 实现/ ./ 为/ 有效/ 支持/ 网络/ 虚拟化/ 技术/ ,/ EasySwitch/ 模型/ 支持/ 集成/ 多个/ UM/ 实现/ 并行/ 数据/ 平面/ ./ 通过/ 为/ 多个/ UM/ 提供/ 独立/ 的/ 处理/ 和/ 存储资源/ (/ 如转/ 发表/ )/ ,/ 可以/ 实现/ 并行/ 数据/ 平面/ 间/ 的/ 资源/ 隔离/ ./ EasySwitch/ 也/ 允许/ 多个/ UM/ 间/ 的/ 资源共享/ ,/ 避免/ 资源/ 复制/ ,/ 以/ 提高/ FPGA/ 资源/ 利用率/ ./ 3.1/ 输入/ // 输出/ 控制/ EasySwitch/ 模型/ 中/ 的/ 输入/ 控制/ 负责/ 接收/ 来自/ 多个/ 网络接口/ 的/ 报文/ ,/ 在/ 完成/ 校验/ 后/ 进行/ 汇聚/ ,/ 并/ 根据/ 报文/ 分类/ 规则/ 分派/ 到/ 一个/ 或/ 多个/ UM/ 中/ 处理/ ,/ 同一/ 报文/ 仅/ 允许/ 分派/ 到/ 一个/ UM/ ./ 由于/ 多/ 时钟/ 域/ 设计/ Page4/ 会/ 加剧/ FPGA/ 逻辑设计/ 复杂度/ ,/ EasySwitch/ 模型/ 要求/ 各/ UM/ 以及/ UMS/ 运行/ 在/ 统一/ 的/ 时钟/ 频率/ 上/ ./ 输出/ 控制/ OC/ 负责/ 接收/ UM/ 处理/ 完成/ 后/ 的/ 报文/ 以及/ 相应/ 的/ 处理/ 规则/ ,/ 通过/ 译码/ 处理/ 规则/ 执行/ 对/ 该报/ 文/ 指定/ 的/ 处理/ 操作/ (/ 如/ 截断/ 、/ 复制/ 等/ )/ ,/ 之后/ 将/ 报文/ 发送到/ 目标/ 输出/ 缓冲/ 队列/ ./ EasySwitch/ 模型/ 中/ 输入/ 调度/ 器/ IS/ 采用/ 连续/ 工作/ 模式/ (/ 即/ 若/ 某/ 输入/ 缓冲/ 队列/ 中/ 包含/ 报文/ 尾/ ,/ 调度/ 器/ 将/ 调度/ 输出/ 该/ 完整/ 报文/ ,/ 保证/ 输出/ 链路/ 不/ 空闲/ )/ ,/ 对/ 输入/ 缓冲/ 队列/ IQ/ (/ InputQueue/ )/ 进行/ 调度/ ./ 由于/ 不能/ 预先/ 假定/ UM/ 对/ IQ/ 报文/ 的/ 处理/ 策略/ ,/ IS/ 采用/ 公平/ 调度/ 算法/ ./ 可/ 重用/ 硬件/ 模块/ 库中/ 也/ 包含/ 支持/ 贪婪/ 、/ 加权/ 轮转/ 等/ 其它/ 调度/ 算法/ 的/ IS/ ,/ 可/ 供/ 用户/ 选择/ 集成/ ./ 输出/ 调度/ 器/ OS/ 主要/ 负责/ 响应/ 并/ 处理/ 来自/ UM/ 的/ 报文/ 处理/ 请求/ ,/ 也/ 可/ 采用/ 类似/ IS/ 的/ 连续/ 工作/ 模式/ 和/ 公平/ 调度/ 算法/ ,/ 以/ 防止/ 请求/ “/ 饿死/ ”/ ./ 各/ UM/ 也/ 可以/ 选择/ 集成/ 内部/ 输出/ 缓冲/ 队列/ ,/ 基于/ 灵活性/ 考虑/ ,/ 其/ 管理/ 和/ 配置/ 由/ 用户/ 根据/ 应用/ 需求/ 确定/ ,/ EasySwitch/ 模型/ 不/ 作/ 规定/ ./ 3.2/ 用户/ 模块/ UMEasySwitch/ 模型/ 可/ 灵活/ 支持/ 多种/ UM/ 开发/ 模式/ ./ 以单/ UM/ 为例/ ,/ 包括/ 旁路/ 处理/ (/ bypass/ )/ 模式/ 、/ 穿透/ 处理/ (/ pass/ -/ through/ )/ 模式/ 以及/ 混杂/ 处理/ (/ promis/ -/ cuous/ )/ 模式/ ./ (/ 1/ )/ 旁路/ 处理/ 模式/ ./ UM/ 不/ 修改/ 报文/ 内容/ ,/ 只/ 根据/ 报文/ 中/ 提取/ 的/ 关键字/ ,/ 通过/ 查表/ 等/ 方式/ ,/ 决定/ 报文/ 的/ 处理/ 行为/ ./ 通过/ 在/ IC/ 与/ OC/ 间/ 设置/ 输入/ 报文/ 缓冲/ PB/ (/ PacketBuffer/ )/ ,/ 到达/ 的/ 报文/ 可/ 在/ PB/ 中/ 缓存/ ,/ OC/ 在/ 接收/ 到/ UM/ 的/ 处理/ 控制/ 信息/ 后/ ,/ 从/ PB/ 中/ 读取/ 报文/ ,/ 并/ 对/ 其/ 执行/ 相应/ 的/ 处理/ ./ (/ 2/ )/ 穿透/ 处理/ 模式/ ./ IQ/ 中/ 报文/ 全部/ 进入/ UM/ ,/ 并/ 在/ UM/ 中/ 缓存/ 和/ 处理/ ./ UM/ 可以/ 直接/ 修改/ 报/ 文字/ 段/ ,/ 进行/ 如/ 地址/ 替换/ 、/ TTL/ (/ TimeToLive/ )/ 更新/ 等/ 操作/ ./ OC/ 接收/ UM/ 处理/ 完成/ 后/ 的/ 报文/ ,/ 并/ 按照/ 对应/ 的/ 规则/ 对/ 报文/ 进行/ 相应/ 的/ 转发/ 控制/ 操作/ ./ (/ 3/ )/ 混杂/ 处理/ 模式/ ./ UM/ 不/ 修改/ 报文/ 内容/ ,/ 到达/ 的/ 报文/ 在/ PB/ 中/ 缓存/ ,/ 并/ 根据/ 输入/ 报文/ 信息/ 构造/ 产生/ 新/ 的/ 报文/ ./ UM/ 必须/ 产生/ 与/ 原始/ 输入/ 报文/ 和/ 新/ 产生/ 报文/ 一一对应/ 的/ 处理/ 规则/ ,/ 并发/ 送到/ 输出/ 控制/ ,/ 输出/ 控制/ 根据/ 处理/ 规则/ ,/ 选择/ PB/ 或/ UM/ 中/ 对应/ 报文/ 完成/ 指定/ 转发/ 控制/ 操作/ ./ 该/ 模式/ 不/ 支持/ 多/ UM/ 实现/ ./ 需要/ 注意/ 的/ 是/ ,/ 为/ 简化/ 控制/ 复杂度/ ,/ EasySwitch/ 模型/ 要求/ 多/ UM/ 必须/ 采用/ 同一/ 模式/ 设计/ 实现/ ./ 3.3/ UMS/ 接口/ UMS/ 定义/ 了/ 用户/ 模块/ UM/ 与/ 预置/ 模块/ IC/ // OC/ 间/ 的/ 接口/ ,/ 即/ UMS/ -/ I/ 和/ UMS/ -/ O/ ,/ 所有/ 满足/ UMS/ 接口/ 约束/ 的/ UM/ 都/ 可/ 无缝/ 集成/ 到/ EasySwitch/ 模型/ ./ UMS/ -/ I/ 为/ 报文/ 输入/ 接口/ ,/ 是/ IC/ 与/ UM/ 间/ 的/ 通信接口/ ,/ 采用/ 简单/ 的/ 报文/ FIFO/ (/ FirstInFirstOut/ )/ 接口定义/ ./ UMS/ -/ I/ 接口/ 包括/ 带内/ 数据/ 和/ 带外/ 信息/ 两/ 部分/ ./ 带内/ 数据/ 为/ 完成/ 校验/ 处理/ 的/ 有效/ 报文/ 数据/ ,/ 数据/ 宽度/ 通常/ 设/ 为/ 多个/ 字节/ 以/ 提高/ 报文/ 处理/ 流量/ ,/ 带外/ 信息/ 则/ 包括/ 编码/ 后/ 的/ 报文/ 头尾/ 标识/ 、/ 输入/ 接口号/ 等/ ./ UMS/ -/ O/ 为/ 报文/ 输出/ 接口/ ,/ 是/ OC/ 与/ UM/ 间/ 的/ 通信接口/ ,/ 由/ 报文/ 数据/ 接口/ 和/ 输出/ 控制/ 接口/ 组成/ ./ 报文/ 数据/ 接口定义/ 与/ UMS/ -/ I/ 接口/ 类似/ ,/ 其中/ 带内/ 报文/ 数据位/ 宽/ 与/ UMS/ -/ I/ 相同/ ,/ 带外/ 信息/ 不/ 包含/ 报文/ 输入/ 接口号/ 信息/ ./ 输出/ 控制/ 接口/ 用于/ 传递/ UM/ 对/ 报文/ 的/ 决策/ 结果/ ,/ 以/ 报文/ 处理/ 规则/ 形式/ 定义/ ,/ OC/ 通过/ 译码/ 处理/ 规则/ ,/ 确定/ 报文/ 的/ 下/ 一步/ 处理/ 动作/ ./ EasyS/ -/ witch/ 模型/ 定义/ 并/ 实现/ 的/ 报文/ 处理/ 规则/ 由/ 以下/ 字/ 段/ 构成/ :/ (/ 1/ )/ 接口/ bitmap/ ,/ 用于/ 选择/ 接口/ 集合/ 中/ 的/ 一个/ (/ 2/ )/ 操作/ 字/ 段/ ,/ 指定/ 处理/ 动作/ 即/ 丢弃/ 、/ 转发/ 或/ (/ 3/ )/ 报文/ 截断/ 长度/ ;/ (/ 4/ )/ 保留字/ 段/ ./ 上述/ 处理/ 规则/ 各字段/ 通过/ 相互/ 组合/ 可以/ 覆盖/ 按/ 端口/ 转发/ 、/ 多/ 端口/ 复制/ 转发/ 、/ 丢弃/ 、/ 截断/ 后单/ 端口/ 或/ 多/ 端口/ 报文/ 转发/ 等/ 多种/ 报文/ 转发/ 处理/ 操作/ ,/ 并/ 通过/ 设置/ 保留字/ 段/ 可/ 支持/ 功能/ 扩展/ ./ 此外/ ,/ 输出/ 处理/ 规则/ 还/ 定义/ 了/ 报文/ 规则/ 绑定/ 指示/ ,/ 用于/ 选择/ 从/ UM/ 或/ PB/ 接收/ 报文/ ./ 4/ 资源/ 及/ 性能/ 分析/ 或/ 多个/ 接口/ 输出/ 报文/ ;/ 截断/ ;/ 对于/ 基于/ FPGA/ 的/ 网络/ 实验/ 平台/ ,/ 由于/ 用户/ 硬件/ 逻辑设计/ 受/ FPGA/ 片上/ 资源/ 、/ 处理/ 频率/ 等/ 多方面/ 因素/ 影响/ ,/ 在/ 进行/ 实验/ 方案设计/ 时/ ,/ 必须/ 对/ 方案/ 的/ 资源/ 占用/ 及/ 性能指标/ 进行/ 评估/ ./ NetFPGA/ 采用/ 基于/ 参考/ 设计/ 的/ 开发方式/ ,/ 用户/ 业务/ 逻辑/ 与/ 预置/ 逻辑/ 间/ 缺乏/ 明显/ 划分/ ,/ 无法/ 有效/ 评估/ 预置/ 逻辑/ 对/ 业务/ 逻辑/ 在/ 资源/ 和/ 性能/ 等/ 方面/ 的/ 影响/ ;/ SwitchBlade/ 模型/ 中/ 预置/ 处理/ 逻辑/ 则/ 过于/ 复杂/ ,/ 也/ 难以/ 提供/ 精确/ 的/ 资源/ 及/ 性能/ 分析/ 评估/ 模型/ ./ EasySwitch/ 模型/ 基于/ 简洁/ 的/ UMS/ 接口/ ,/ 实现/ 了/ 用户/ 逻辑/ 与/ 预置/ 逻辑/ 的/ 清晰/ 分离/ ,/ 可以/ 提供/ 确定性/ 资源/ 约束/ 及/ 性能/ 评估/ 模型/ ./ 下面/ 介绍/ 面向/ 接口/ 数目/ 及/ 缓冲/ 队列/ 长度/ 需求/ 建立/ 的/ EasySwitch/ 资源/ 约/ Page5/ 束/ 模型/ ,/ 并/ 针对/ 网络/ 测量/ 应用/ 需求/ ,/ 评估/ EasyS/ -/ witch/ 模型/ 报文/ 调度/ 处理/ 性能/ ./ 表/ 1/ 列出/ 了/ EasyS/ -/ witch/ 模型/ 资源/ 及/ 性能/ 分析/ 涉及/ 的/ 相关/ 参数/ ./ 简化/ 起/ 见/ ,/ 网络接口/ 设/ 为/ 千兆/ 以太网/ ,/ 内部/ 数据通路/ (/ FIFO/ 接口/ )/ 位/ 宽/ 为/ 128/ 位/ ,/ IS/ 采用/ 连续/ 工作/ 模式/ ./ N/ 输入/ 接口/ 的/ 数目/ B/ 输入/ 缓冲/ 队列/ 容量/ ViVoIS/ 调度/ 输出/ 速率/ Ii/ (/ t/ )/ t/ 时刻/ 第/ i/ 个/ 输入/ 缓冲/ CFPGA/ 缓冲/ 队列/ 容量/ 4.1/ 资源/ 约束/ 模型/ 接口/ EasySwitch/ 模型/ 中/ 的/ 预置/ 逻辑/ 在/ FPGA/ 上/ 实现/ 必须/ 满足/ 以下/ 约束/ :/ 一方面/ ,/ FPGA/ 片上/ 资源/ (/ 尤其/ 是/ 存储资源/ )/ 有限/ ,/ EasySwitch/ 模型/ 中/ 缓冲/ 队列/ (/ 即/ IQ/ // OQ/ )/ 占用/ 存储资源/ 比例/ 不应/ 过/ 大/ ,/ 影响/ 用户/ 逻辑/ 开发/ 自由度/ ;/ 另一方面/ ,/ EasySwitch/ 模型/ 必须/ 保证/ 在/ 报文/ 处理过程/ 中/ 预置/ 逻辑/ 不能/ 造成/ 输入/ 报文/ 丢失/ ,/ 即/ 输入/ 缓冲/ 队列/ 不/ 应/ 出现/ 溢出/ ,/ 这/ 要求/ 输入/ 缓冲/ 队列/ 必须/ 有/ 充足/ 的/ 缓冲/ 存储资源/ ①/ ./ 上述/ 约束/ 模型/ RS/ 可以/ 形式化/ 为/ 其中/ ,/ 式/ (/ 1/ )/ 反映/ 了/ FPGA/ 存储资源/ 约束/ ,/ 式/ (/ 2/ )/ 则/ 用于/ 保证/ 输入/ 缓冲/ 队列/ 在/ 公平/ 调度/ 情况/ 下/ 不会/ 出现/ 溢出/ ,/ 相关/ 证明/ 参见/ 附录/ 中/ 定理/ 1/ ./ 以/ EasySwitch/ 处理/ 模型/ 在/ NetMagic/ -/ 24/ ②/ 和/ NetFPGA/ 网络/ 实验/ 平台/ 的/ 实现/ 为例/ ,/ 假设/ 允许/ 输入/ 缓冲/ 队列/ 最/ 多/ 占用/ 40/ %/ 存储资源/ ./ NetMagic/ -/ 24/ 平台/ FPGA/ 存储容量/ 约/ 为/ 8/ ×/ 106bits/ (/ CNetMagic/ =/ 3.2/ ×/ 106bits/ )/ ,/ 数据通路/ 位/ 宽/ Bd/ 为/ 128/ 位/ ;/ NetFPGA/ 平台/ FPGA/ 存储容量/ 约/ 为/ 4.9/ ×/ 106bits/ (/ CNetFPGA/ =/ 1.96/ ×/ 106bits/ )/ ,/ 数据通路/ 位/ 宽/ Bd/ 为/ 64/ 位/ ./ 在/ 上述/ 条件/ 下/ ,/ 图/ 2/ 和/ 图/ 3/ 分别/ 给出/ 了/ NetMagic/ -/ 24/ 及/ NetFPGA/ 平台/ 在/ 不同/ IS/ 处理/ 频率/ 下/ ,/ 接口/ 数目/ N/ 与/ 输入/ 缓冲/ 队列/ 容量/ B/ 间/ 的/ 约束/ 关系/ ./ 由图/ 可知/ ,/ 数据通路/ (/ 调度/ 器/ )/ 处理/ 频率/ 越高/ ,/ 可/ 支持/ 的/ 接口/ 数目/ 越多/ ./ 如图/ 2/ 所示/ ,/ NetMagic/ 平台/ 下/ ,/ 处理/ 频率/ 为/ 75MHz/ 时/ ,/ 最多/ 可/ 支持/ 10/ 个/ 千兆/ 接口/ ;/ 100MHz/ 时/ ,/ 则/ 最/ 多/ 可/ 支持/ 14/ 个/ 千兆/ 接口/ ./ 经过/ 综合/ 仿真/ ,/ EasySwitch/ 处理/ 模型/ 在/ NetMagic/ -/ 24/ 平台/ 最高/ 数据通路/ 时钟/ 频率/ fmax/ 可达/ 169.43/ MHz/ ,/ 考虑/ 到/ 用户/ 业务/ 逻辑/ 的/ 嵌入/ 可能/ 会/ 导致/ 综合/ 后/ fmax/ 的/ 下降/ ,/ 为/ 保留/ 设计/ 裕度/ ,/ 其/ 数据通路/ 时钟/ 频率/ f/ 设定/ 为/ 125MHz/ ./ 因此/ ,/ 由图/ 2/ 可知/ ,/ 在/ 该/ 频率/ 下/ Net/ -/ Magic/ -/ 24/ 最多/ 可/ 支持/ 16/ 个/ 千兆/ 接口/ ./ 由于/ NetFPGA/ 平台/ 数据通路/ 时钟/ 频率/ 也/ 设定/ 在/ 125MHz/ ,/ 由图/ 3/ 可知/ ,/ 若该/ 平台/ 采用/ EasySwitch/ 处理/ 模型/ ,/ 在/ 该/ 时钟/ 频率/ 下/ ,/ 最多/ 可/ 支持/ 8/ 个/ 千兆/ 接口/ ;/ 若/ 时钟/ 频率/ 提高/ 到/ 150MHz/ ,/ NetFPGA/ 则/ 最/ 多/ 可/ 支持/ 10/ 个/ 千兆/ 接口/ ./ 然而/ ,/ NetFPGA/ 实际/ 仅/ 集成/ 了/ 4/ 个/ 千兆/ 接口/ ./ NetFPGA/ 采取/ 保守/ 设计/ 的/ 主要/ 原因/ 在于/ 采用/ 参考/ 路由器/ 作为/ 预置/ 逻辑/ 实现/ ,/ 功能/ 复杂/ ,/ 资源/ 占用/ 较/ 多/ ,/ 无法/ 保证/ 更/ 多/ 接口/ 报文/ 的/ 线速/ 处理/ ./ 4.2/ 报文/ 调度/ 性能/ 基于/ EasySwitch/ 处理/ 模型/ 的/ 网络/ 实验/ 平台/ 可以/ 支持/ 多种/ 应用/ 部署/ 场景/ ,/ 不仅/ 可/ 作为/ 报文/ 流/ 旁路/ 处理/ 设备/ ,/ 也/ 具有/ 部署/ 在/ 报文/ 数据通路/ 内/ 处理/ 的/ 能力/ ./ 后者/ 是/ 支持/ 网络/ 测量/ 技术/ 实现/ 和/ 验证/ 极为重要/ 的/ 手段/ ./ 对于/ 测量/ 精度/ 要求/ 较/ 高/ 的/ 实验/ ,/ EasySwitch/ 模型/ 可/ 保证/ 调度/ 处理/ 对/ 输入/ 报文/ 流量/ 特性/ 的/ 影响/ 可/ ①/ ②/ Page6/ 确定/ 或/ 可/ 忽略/ ./ 下面/ 将/ 具体分析/ EasySwitch/ 处理/ 模型/ 报文/ 调度/ 性能/ ./ EasySwitch/ 模型/ 对/ 报文/ p/ 处理/ 调度/ 延迟/ E/ (/ p/ )/ 可以/ 分为/ 两/ 部分/ ,/ 即/ 报文/ 传输/ 延迟/ 以及/ 排队/ 调度/ 延迟/ ./ 其中/ ,/ T/ (/ p/ )/ 表示/ 报文/ p/ 进入/ UM/ 处理/ 前/ 经过/ 输入/ 缓冲/ 队列/ 的/ 传输/ 延迟/ (/ 即/ 报文/ 头进/ 至/ 尾进/ 延迟/ )/ ,/ Q/ (/ p/ )/ 表示/ 报文/ p/ 经过/ 输入/ 控制/ IC/ 的/ 排队/ 调度/ 延迟/ (/ 即/ 报文/ 尾进/ 至头/ 出/ 延迟/ )/ ./ 由于/ 缓冲/ 队列/ 分布/ 、/ 数据通路/ 位/ 宽/ 及/ 处理/ 频率/ 在/ 实现/ 时/ 已知/ ,/ 且/ 报文/ p/ 的/ 长度/ l/ (/ p/ )/ 可/ 在/ 接收/ 时/ 获得/ ,/ 因此/ T/ (/ p/ )/ 可由式/ (/ 4/ )/ 计算/ 获得/ ./ 对于/ 网络/ 测量/ 等/ 应用/ 场景/ ,/ T/ (/ p/ )/ 可以/ 通过/ 在/ UM/ 中/ 利用/ 时间/ 戳/ 修正/ 机制/ 消除/ ./ 在/ EasySwitch/ 处理/ 模型/ 中/ ,/ 不可/ 修正/ 的/ 性能/ 误差/ 主要/ 由/ Q/ (/ p/ )/ 构成/ ./ 由/ 附录/ 1/ 中/ 定理/ 2/ 可知/ ,/ 报文/ p/ 在/ N/ 进/ 1/ 出/ 的/ 连续/ 工作/ 模式/ 调度/ 系统/ 中/ ,/ 排队/ 调度/ 延迟/ Q/ (/ p/ )/ 具有/ 上限/ ,/ 即/ Q/ (/ p/ )/ </ (/ N/ ×/ L/ -/ l/ (/ p/ )/ )/ // (/ f/ ×/ Bd/ -/ (/ N/ -/ 1/ )/ Vi/ )/ 根据/ 式/ (/ 5/ )/ ,/ 图/ 4/ 给出/ 了/ 在/ IS/ 不同/ 处理/ 频率/ 下/ ,/ 最大/ 报文/ 调度/ 延迟/ 与/ 网络接口/ 数目/ 的/ 关系/ ./ 由图/ 可知/ ,/ 相同/ 接口/ 数目/ 下/ ,/ 调度/ 器/ 处理/ 频率/ 越高/ ,/ 报文/ 调度/ 处理/ 延迟/ 越低/ ./ 对于/ 特定/ 处理/ 频率/ ,/ 支持/ 的/ 输入/ 接口/ 数目/ 不/ 应/ 超过/ 某一/ 特定/ 值/ ,/ 否则/ 报文/ 调度/ 延迟/ 将/ 急剧/ 增长/ ,/ 以/ f/ =/ 100MHz/ 为例/ ,/ 支持/ 接口/ 数目/ N/ 应/ 小于/ 12/ ,/ 以/ 保证/ 获得/ 可/ 接受/ 的/ 报文/ 调度/ 延迟/ ./ 此外/ ,/ 对于/ 延迟/ 敏感/ 的/ 应用/ ,/ 可以/ 通过/ 提高/ 处理/ 频率/ 及/ 减少/ 占用/ 接口/ 的/ 方法/ 降低/ EasySwitch/ 模型/ 调度/ 延迟/ 对系统/ 延迟/ 的/ 影响/ ,/ 通常/ 可以/ 控制/ 在/ 100/ μ/ s/ 内/ ./ 5/ 模型/ 实现/ 与/ 应用/ 我们/ 基于/ NetMagic/ 平台/ 对/ EasySwitch/ 处理/ 模型/ 进行/ 了/ 实现/ 和/ 验证/ ./ 如图/ 5/ 所示/ ,/ NetMagic/ 目前/ 提供/ NetMagic/ -/ 24/ 和/ NetMagic/ -/ 08/ 两个/ 版本/ ./ NetMagic/ -/ 24/ 采用/ 部分/ 可编程/ 交换/ 体系结构/ ,/ 将/ 大容量/ FPGA/ (/ MagicFPGA/ )/ 与/ 商用/ 交换/ 芯片/ 相结合/ ,/ 提供/ 可编程/ 性/ 与/ 性能/ 的/ 良好/ 折中/ ./ 24/ 个/ 千兆/ 以太网/ 接口/ 中/ ,/ 16/ 个/ 由/ MagicFPGA/ (/ AlteraArriaIIGXEP2AGX125/ )/ 控制/ ,/ 具有/ 完全/ 可编程/ 能力/ ./ NetMagic/ -/ 08/ 是/ NetMagic/ -/ 24/ 的/ lite/ 版本/ ,/ 采用/ 低成本/ 和/ 小型化/ 设计方案/ ,/ 基于/ AlteraArriaIIGXEP2AGX45FPGA/ 提供/ 共/ 8/ 个/ (/ 4/ 个/ 光口/ 4/ 个/ 电口/ )/ 完全/ 可编程/ 千兆/ 以太网/ 接口/ ./ 5.1/ 基本/ 结构/ 如图/ 6/ 所示/ ,/ MagicFPGA/ 是/ NetMagic/ 平台/ 实现/ 报文/ 处理/ 可/ 重构/ 的/ 核心/ ,/ EasySwitch/ 处理/ 模型/ 在/ MagicFPGA/ 中以/ 预置/ 方式/ 实现/ ,/ 支持/ 8/ 或/ 16/ 个/ 千兆/ 以太网/ 接口/ 报文/ 接收/ ,/ 并/ 提供/ 转发/ 、/ 截断/ 、/ 复制/ 等/ EasySwitch/ 定义/ 的/ 基本/ 报文/ 处理/ 规则/ ./ 此外/ ,/ EasySwitch/ 模块/ 对/ 平台/ 集成/ 的/ 外部/ 存储器/ (/ 如/ Page7DDR/ 、/ SRAM/ )/ 以及/ 高速/ XAUI/ 接口/ 等/ 进行/ 封装/ ,/ 为/ UM/ 提供/ 良/ 定义/ 访问/ 接口/ 以及/ 仲裁/ 机制/ ,/ 有效/ 隔离/ 各/ UM/ 访问/ 资源/ ./ 用户/ 仅/ 需/ 专注/ 于/ UM/ 业务/ 逻辑/ ,/ 而/ 不必/ 考虑/ 网络接口/ 、/ 数据/ 缓冲/ 、/ 平台/ 管理/ 等/ 其它/ 外围/ 逻辑/ 的/ 具体/ 实现/ ./ UM/ 与/ 其它/ 外围/ 逻辑/ 之间/ 数据通路/ 位/ 宽/ 为/ 128bits/ ,/ 处理/ 频率/ 为/ 125MHz/ ./ EasySwtich/ 模型/ 仅/ 定义/ 报文/ 数据/ 平面/ 处理/ 规范/ ,/ NetMagic/ 平台/ 提供/ 基于/ 以太网/ 的/ 通用/ 管理控制/ 接口/ 及/ 协议/ ,/ 为/ 控制/ 平面/ 处理/ 功能/ 实现/ 提供/ 兼容性/ 和/ 可移植性/ 支持/ ./ 用户/ 可/ 在/ 任何/ 带有/ 以太网/ 接口/ 的/ 主机/ 或/ 平台/ 上/ ,/ 通过/ Socket/ 编程/ ,/ 按照/ NetMagic/ 访问控制/ (/ NetMagicAccesssandControl/ ,/ NMAC/ )/ 协议/ 标准/ ①/ ,/ 将/ 管理控制/ 命令/ 封装/ 成/ 标准/ 以太网/ 报文/ ,/ 发送到/ NetMagic/ 管理控制/ 接口/ P0/ 对/ 平台/ 进行/ 管理/ 和/ 控制/ ./ MagicFPGA/ 内部/ 的/ 管理/ 模块/ 负责/ 基于/ NMAC/ 协议/ 与/ 外部/ 控制器/ 建立/ 连接/ ,/ 并/ 对/ 管理/ 报文/ 中/ 封装/ 的/ 命令/ 进行/ 解析/ ,/ 转换/ 为/ 局部/ 控制/ 总线/ 信号/ ,/ 完成/ 对/ 平台/ 中/ EasySwitch/ 等/ 模块/ 及/ 存储器/ 的/ 初始化/ 配置/ 及/ 管理控制/ ./ 表/ 2/ 及表/ 3/ 给出/ 了/ NetMagic/ -/ 24/ 平台/ 中/ 管理/ 模块/ 及全/ 配置/ (/ 接口/ 数目/ N/ =/ 16/ )/ EasySwitch/ 模型/ 的/ 资源/ 占用/ 情况/ ./ 资源/ 名称/ 查找/ 表/ LUT/ 寄存器/ 存储器/ 位/ 资源/ 名称/ 查找/ 表/ LUT5781/ 寄存器/ 存储器/ 位表/ 4/ 给出/ 了/ 在/ 支持/ 4/ 个/ 千兆/ 输入/ 端口/ 线速/ 报文/ 转发/ 情况/ 下/ ,/ EasySwitch/ 模型/ 与/ NetFPGA/ 参考/ 路由器/ 及/ SwitchBlade/ 基本/ 模型/ 占用/ FPGA/ 逻辑/ // 存储资源/ 情况/ ./ 其中/ ,/ NetFPGA/ 及/ SwitchBlade/ 相关/ 数据/ 来源于/ 文献/ [/ 3/ ]/ ./ 由表/ 可得/ ,/ 与/ 其它/ 模型/ 相比/ ,/ EasySwitch/ 模型/ 通过/ 优化/ 设计/ 占用/ FPGA/ 硬件资源/ (/ 尤其/ 是/ 存储资源/ )/ 较/ 少/ ,/ 可/ 为/ 用户/ 提供/ 极大/ 的/ 设计/ 裕度/ ,/ 有效/ 减少/ 用户/ 逻辑/ 开发/ 的/ 限制/ ./ 资源/ 名称/ NetFPGA/ 查找/ 表/ LUT23552378885672/ 存储器/ 位/ 264499236986881800425.2/ 应用/ 实例/ 在/ EasySwitch/ 处理/ 模型/ 下/ ,/ 网络/ 报文/ 数据/ 平面/ 处理/ 功能/ 的/ 定制/ 工作/ 基于/ 硬件/ 逻辑/ 编程语言/ (/ 如/ Verilog/ 等/ )/ 对/ UM/ 实现/ ./ 用户/ 可以/ 选择/ 在/ UM/ 中/ 的/ 自主/ 实现/ 报文/ 定制/ 处理/ 功能/ ,/ 也/ 可以/ 选择/ 通过/ 修改/ 、/ 移植/ 参考/ 设计/ 等/ 方式/ 加速/ 逻辑设计/ 工作/ ./ 下面/ 介绍/ 基于/ EasySwitch/ 处理/ 模型/ 在/ NetMagic/ 平台/ 上/ 实现/ 的/ 多种/ 新型/ 报文/ 处理/ 机制/ 和/ 网络协议/ ./ 5.2/ ./ 1RLI/ 延迟/ 测量/ 与/ 评估/ RLI/ (/ 参考/ 延迟/ 插值/ )/ 延迟/ 测量/ 体系/ [/ 12/ ]/ 是/ 普渡大学/ 在/ SIGCOMM2010/ 上/ 提出/ 的/ 一种/ 流级/ 精确/ 延迟/ 测量/ 技术/ ./ RLI/ 延迟/ 测量/ 体系/ 可/ 为/ 互联网/ 中/ 微秒/ 级低/ 延迟/ 应用/ 提供/ 有效/ 监测/ 手段/ ,/ 支持/ 网络故障/ 快速/ 定位/ 和/ 排除/ ./ RLI/ 通过/ 在/ 报文/ 的/ 发送/ 端/ 插入/ 携带/ 时间/ 戳/ 的/ 参考/ 报文/ ,/ 并/ 在/ 接收端/ 计算/ 参考/ 报文/ 的/ 真实/ 延迟/ ,/ 采用/ 线性插值/ 方法/ 评估/ 被/ 测报/ 文流/ 的/ 传输/ 延迟/ ./ 我们/ 基于/ EasySwitch/ 模型/ 在/ NetMagic/ 平台/ 上/ 实现/ 了/ RLI/ 延迟/ 测量/ 与/ 评估/ 功能/ ./ 如图/ 7/ 所示/ ,/ RLI/ 延迟/ 测量/ 与/ 评估/ 系统/ 采用/ Pass/ -/ Through/ 模式/ 实现/ ,/ 由/ 参考/ 报文/ 产生/ UM/ 和/ 延迟/ 评估/ UM/ 构成/ ./ 参考/ 报文/ 产生/ UM/ 负责/ 接收/ 来自/ 流量/ 产生/ 端/ (/ S/ )/ 的/ 待/ 测报/ 文/ ,/ 根据/ RLI/ 算法/ 完成/ 参考/ 报文/ 自/ 适应/ 插入/ ,/ 将/ 提取/ 的/ 待/ 测报/ 文及/ 参考报/ 文摘/ 要/ 信息/ (/ 包括/ 发送/ 时间/ 戳/ )/ 封装/ 后/ ,/ 通过/ UMS/ -/ O/ 接口/ 发送到/ OS/ 调度/ 输出/ ./ 其中/ ,/ 待/ 测报/ 文及/ 参考/ 报文/ 的/ 目标/ 端口/ 为/ TX3/ (/ 即待测/ 设备/ 输入/ 端/ )/ ,/ 而/ 摘要/ 报文/ 的/ 目标/ 端口/ 则/ 为/ TX5/ (/ 即/ 性能/ 监测/ 端/ )/ ./ 延迟/ 估计/ UM/ 负责/ 接收/ 自待测/ 设备/ 返回/ 的/ 待/ 测报/ 文和/ 参考/ 报文/ ,/ 并/ 根据/ 当前/ 时间/ 戳/ 计算/ 参考/ 报文/ 真实/ 延迟/ ,/ 最后/ 封装/ 待测/ 及/ 参考报/ 文摘/ 要/ 信息/ (/ 包括/ 发送/ 时间/ 戳/ 等/ )/ 并/ 发送/ ./ 返回/ 的/ 待/ 测报/ 文/ 通过/ OS/ 发送到/ 流量/ 接收端/ (/ R/ )/ ,/ 摘要/ 报文/ 发送到/ 性能/ 监测/ 端/ (/ M/ )/ ,/ 参考/ 报文/ 则/ 被/ 废弃/ ./ RLI/ 延迟/ 测量/ 与/ 评估/ 系统/ 仅/ 使用/ 2/ 个/ 输入/ 端口/ ,/ 即/ N/ =/ 2/ ./ 根据/ 式/ (/ 2/ )/ ,/ 输入/ 缓冲/ 队列/ IQ/ 容量/ 设/ ①/ NMAC/ 协议/ 实现/ (/ NMACProtocolImplementation/ )/ ,/ Net/ -/ Page8/ 为/ 12800bits/ (/ 队列/ 长度/ 为/ 100/ )/ 即可/ 保证/ 报文/ 队列/ 不/ 溢出/ ;/ 由式/ (/ 5/ )/ 可/ 得/ ,/ 对于/ 任意/ 以太网/ 报文/ ,/ Q/ (/ p/ )/ </ 1.568/ μ/ s/ ,/ 可/ 满足/ RLI/ 延迟/ 测量/ 体系/ 精度/ (/ 10/ μ/ s/ ~/ 100/ μ/ s/ )/ 要求/ ./ 由于/ 篇幅/ 限制/ ,/ 详细/ 内容/ 参见/ 文献/ [/ 13/ ]/ ./ 5.2/ ./ 2/ 其它/ 应用/ 我们/ 与/ 香港理工大学/ 合作/ 基于/ EasySwitch/ 模型/ 在/ NetMagic/ 平台/ 上/ 实现/ 了/ OneProbe/ 网络/ 测量/ 机制/ [/ 14/ ]/ 的/ 硬件加速/ ,/ 相比/ 传统/ 基于/ 软件/ 的/ 实现/ 方式/ 具有/ 更/ 高/ 的/ 性能/ 和/ 精确性/ ./ 此外/ ,/ 针对/ 支持/ 流媒体/ 高效/ 传输/ 的/ 新型/ 传输层/ 协议/ Labelcast/ ①/ 的/ 实现/ ,/ 则/ 进一步/ 验证/ 了/ EasySwitch/ 模型/ 对/ 新型/ 网络协议/ 实现/ 和/ 验证/ 的/ 有效/ 支持/ ,/ 关于/ EasySwitch/ 模型/ 更/ 多/ 应用/ 实例/ 可/ 参见/ NetMagic/ 论坛/ ②/ ./ 5.2/ ./ 3/ 特点/ 与/ 优势/ EasySwitch/ 模型/ 在/ NetMagic/ 平台/ 的/ 成功/ 应用/ 表明/ ,/ EasySwitch/ 模型/ 具有/ 结构/ 简单/ 、/ 接口/ 清晰/ 以及/ 资源/ 占用/ 少/ 的/ 实现/ 特点/ ,/ 易于/ 硬件/ 实现/ ./ 预置/ 的/ IS/ // OS/ 等/ 调度/ 器及/ 接口/ 逻辑/ ,/ 允许/ 应用/ 开发/ 聚焦/ 于/ 用户/ 逻辑/ UM/ 实现/ ,/ 并/ 可/ 为/ 多/ 数据通路/ 资源/ 隔离/ 提供/ 支持/ ./ 通过/ 采用/ UMS/ 接口/ 将/ UM/ 与/ 预置/ 逻辑/ 解/ 耦/ ,/ 可/ 支持/ 基于/ 标准接口/ 构建/ 可/ 重用/ 硬件/ 模块/ 库/ ./ EasySwitch/ 模型/ 资源/ 、/ 性能/ 等/ 特征参数/ 可以/ 采用/ 精确/ 的/ 数学模型/ 表述/ ,/ 从而/ 为/ 高精度/ 网络/ 实验/ 的/ 规划/ 及/ 实现/ 提供/ 理论依据/ ,/ 将/ 实验/ 系统误差/ 控制/ 在/ 可/ 接受/ 范围/ 内/ ,/ 适用/ 于/ 网络/ 测量/ 等/ 对/ 网络设备/ 性能/ 及/ 精度/ 要求/ 较/ 高/ 的/ 网络/ 实验/ 场景/ ./ 6/ 总结/ 面向/ 下一代/ 互联网/ 技术创新/ 实验/ 需求/ ,/ 针对/ 现有/ FPGA/ 实验/ 平台/ 报文/ 处理/ 模型/ 缺失/ 、/ 设计/ 开发/ 门槛/ 高/ 、/ 硬件资源/ 有限/ 等/ 问题/ ,/ 本文/ 提出/ 了/ 一种/ 新型/ 报文/ 处理/ 模型/ EasySwitch/ ./ EasySwitch/ 的/ 设计/ 基于/ 严谨/ 的/ 科学分析/ 和/ 丰富/ 的/ 设计/ 经验/ ,/ 在/ 考虑/ FPGA/ 资源/ 约束/ 情况/ 下/ ,/ 通过/ 优化/ 设计/ 预置/ 逻辑/ ,/ 为/ 用户/ 逻辑/ 开发/ 提供/ 一个/ 稳定/ 、/ 开放/ 、/ 通用/ 的/ 接口/ UMS/ ,/ 允许/ 用户/ 专注/ 于/ 业务/ 逻辑/ 实现/ ,/ 减少/ 设计/ 开发/ 工作量/ 和/ 周期/ ./ EasySwitch/ 模型/ 支持/ 通过/ 集成/ 多个/ UM/ 实现/ 并行/ 数据/ 平面/ 及/ 资源/ 隔离/ ,/ 从而/ 为/ 虚拟化/ 技术/ 提供/ 实现/ 基础/ ./ 通过/ 提供/ 精确/ 的/ 资源/ 约束/ 模型/ 和/ 性能/ 分析模型/ ,/ EasySwitch/ 可为/ 网络/ 实验/ 系统/ 设计规划/ 提供/ 科学/ 指导/ 和/ 优化/ ./ 目前/ ,/ EasySwitch/ 模型/ 已/ 成功/ 应用/ 于/ 多种/ 新型/ 网络/ 处理/ 机制/ 及/ 协议/ 的/ 开发/ 和/ 验证/ ./ 

