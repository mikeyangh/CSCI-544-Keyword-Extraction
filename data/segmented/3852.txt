Page1/ 数据中心/ 应用/ 请求/ 级/ 行为/ 特征分析/ 文雨/ 1/ )/ ,/ 2/ )/ 孟丹/ 1/ )/ 詹/ 剑锋/ 1/ )/ 1/ )/ (/ 中国科学院计算技术研究所/ 国家/ 智能/ 计算机/ 研究/ 开发/ 中心/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 研究生院/ 北京/ 100039/ )/ 摘要/ 请求/ 级/ 行为/ 分析/ 有助于/ 数据中心/ 应用/ 管理/ ./ 已有/ 研究/ 中/ ,/ 一类/ 方法/ 要求/ 了解/ 应用/ 内部/ 细节/ 和/ 源代码/ ,/ 因此/ 不适/ 用于/ 数据中心/ 场景/ ,/ 另一类/ 方法/ 基于/ 外部/ 观测/ 应用/ 行为/ ,/ 不能/ 得到/ 精确/ 的/ 分析/ 结果/ ./ 该文/ 提出/ 一种/ 新/ 的/ 面向/ 数据中心/ 应用/ 的/ 请求/ 级/ 行为/ 分析方法/ ./ 该/ 方法/ 不/ 要求/ 应用/ 内部/ 细节/ 能够/ 分析/ 请求/ 细粒度/ 性能指标/ 和/ 多项/ 资源/ 消耗/ ./ 该文/ 贡献/ 主要/ 是/ :/ (/ 1/ )/ 提出/ 了/ 一个/ 结合/ 模型/ 驱动/ 和/ 轻量/ 内核/ 行为/ 跟踪/ 的/ 请求/ 行为/ 分析方法/ ,/ 适用/ 于/ 由/ 黑盒/ 模块/ 构建/ 的/ 数据中心/ 应用/ ;/ (/ 2/ )/ 提出/ 了/ 一种/ 利用/ 应用/ 行为/ 预测/ 误差/ 衡量/ 请求/ 分析/ 精度/ 的/ 评价/ 方法/ ./ 实验/ 表明/ 该/ 方法/ 具有/ 好/ 的/ 分析/ 精度/ ,/ 平均误差/ 小于/ 10/ %/ ./ 关键词/ 数据中心/ 应用/ ;/ 请求/ 级/ 行为/ 分析/ ;/ 负载/ 模式/ ;/ 最小/ 二乘/ ;/ 排队/ 论/ 1/ 引言/ 理解/ 应用/ 行为/ 有助于/ 管理系统/ (/ 如/ 操作系统/ )/ 优化/ 应用/ 性能/ 、/ 分配/ 系统资源/ 和/ 调试/ 应用/ 异常/ 等/ 任务/ ./ 研究/ 在线/ 交互式/ 应用/ 的/ 请求/ 级/ 行为/ 特征/ 是/ 其中/ 的/ 一个/ 热点问题/ ./ 用户/ 通过/ 发送/ 请求/ 访问/ 和/ 使用/ 在线/ 服务/ ./ 当/ 一个/ 用户/ 请求/ 到达/ 后/ ,/ 系统/ 根据/ 该/ 请求/ 类型/ 进/ Page2/ 行/ 相应/ 的/ 处理/ 操作/ ,/ 过程/ 中/ 可能/ 执行/ 多个/ 软件/ 模块/ 和/ 访问/ 多项/ 物理/ 资源/ ,/ 完成/ 后/ 将/ 处理结果/ 返回/ 给/ 用户/ ./ 如果/ 知道/ 请求/ 的/ 服务/ 时间/ 和/ 资源/ 消耗/ ,/ 那么/ 根据/ 当前/ 负载/ 状况/ ,/ 例如/ 请求/ 到达/ 率/ ,/ 就/ 能够/ 估计/ 应用/ 当前/ 行为/ ./ 总之/ ,/ 这/ 类/ 研究/ 显示/ ,/ 请求/ 级/ 的/ 系统/ 行为/ 分析/ 被/ 用于/ 系统管理/ 任务/ 的/ 许多/ 方面/ ,/ 如/ 请求/ 调度/ [/ 1/ -/ 2/ ]/ 、/ 应用/ 性能/ 预测/ [/ 3/ ]/ 、/ 应用/ 异常/ 诊断/ [/ 4/ ]/ 和/ 系统资源/ 供应/ [/ 5/ ]/ ./ 本文/ 面向/ 数据中心/ 应用/ 的/ 请求/ 级/ 行为/ 分析/ 问题/ ./ 数据中心/ 应用/ 采用/ 多层/ 服务器/ 结构/ ./ 每层/ 服务器/ 面向/ 不同/ 功能/ 需求/ ,/ 运行/ 不同/ 软件系统/ 并/ 访问/ 多项/ 资源/ ./ 因此/ ,/ 请求/ 行为/ 分析/ 包括/ 多个/ 层次/ ,/ 如/ 功能/ 层级/ 和/ 资源/ 级/ ./ 同时/ ,/ 数据中心/ 应用/ 包含/ 许多/ 第三方/ 软件/ ,/ 这些/ 软件系统/ 分别/ 由/ 不同/ 团队/ 在/ 不同/ 时期/ 开发/ 完成/ ./ 因此/ 软件/ 内部/ 细节/ 需要/ 通过/ 可用/ 源代码/ 甚至/ 专家/ 干预/ 才能/ 获得/ ,/ 增加/ 了/ 细粒度/ 请求/ 行为/ 分析/ 的/ 难度/ ./ 近期/ 典型/ 的/ 请求/ 分析/ 研究/ 分为/ 两类/ 方法/ ./ 以/ 文献/ [/ 6/ ]/ 为/ 代表/ 的/ 方法/ 面向/ 特定/ 系统分析/ 请求/ 行为/ ./ 该类/ 方法/ 基于/ 应用/ 细节/ 在/ 应用/ 级/ 或/ 系统/ 级/ 关键/ 路径/ 上/ 植入/ 程序/ 片段/ ,/ 主动/ 或/ 被动/ 捕获/ 请求/ 执行/ 中/ 各种/ 活动/ 并/ 记录/ 为/ 事件/ ,/ 如/ 过程/ 调用/ 、/ 资源/ 访问/ 等/ ./ 然后/ 使用/ 特定/ 算法/ 分析/ 事件/ ,/ 发现/ 请求/ 执行/ 路径/ 或/ 计算资源/ 消耗/ 结果/ ./ 这类/ 方法/ 虽然/ 能够/ 细粒度/ 地/ 分析/ 请求/ 行为/ ,/ 但是/ 要求/ 了解/ 程序/ 细节/ 甚至/ 专家/ 介入/ 和/ 复杂/ 的/ 请求/ 跟踪/ 机制/ ./ 因此/ ,/ 这/ 类/ 面向/ 专用/ 系统/ 的/ 方法/ 缺乏/ 通用性/ ,/ 不能/ 适用/ 于/ 基于/ 第三方/ 软件/ 构建/ 的/ 数据中心/ 应用/ ./ 另一类/ 以/ 文献/ [/ 7/ ]/ 为/ 代表/ 的/ 方法/ 面向/ 由/ 黑盒/ 软件/ 模块/ 构建/ 的/ 系统分析/ 请求/ 执行/ 路径/ ./ 该类/ 方法/ 在/ 系统/ 级/ 或/ 处理器/ 级/ 被动/ 收集/ 少量/ 请求/ 信息/ ,/ 然后/ 基于/ 特定/ 算法/ 分析/ 粗粒度/ 的/ 请求/ 执行/ 路径/ 和/ 大致/ 性能/ 特征/ ,/ 通常/ 将/ 请求/ 在/ 执行/ 路径/ 上/ 的/ 延迟/ 作为/ 请求/ 性能/ 特征/ ./ 虽然/ 此类/ 方法/ 不/ 要求/ 了解/ 应用/ 细节/ 和/ 复杂/ 的/ 请求/ 跟踪/ 机制/ ,/ 但是/ 只/ 适用/ 于/ 分析/ 精度/ 要求/ 不高/ 的/ 场合/ ./ 行为/ 分析方法/ ./ 本文/ 贡献/ 主要/ 是/ :/ (/ 1/ )/ 提出/ 了/ 一个/ 适用/ 于/ 由/ 黑盒/ 模块/ 构建/ 的/ 数据中心/ 应用/ 的/ 请求/ 行为/ 分析方法/ ./ 该/ 方法/ 结合/ 了/ 模型/ 驱动/ 的/ 请求/ 分析/ 和/ 轻量/ 内核/ 级/ 应用/ 行为/ 跟踪/ 机制/ ,/ 不/ 要求/ 应用/ 内部/ 细节/ 能够/ 分析/ 请求/ 细粒度/ 性能指标/ 和/ 多项/ 资源/ 消耗/ ./ 首先/ ,/ 基于/ 请求/ 行为/ 特征/ ,/ 我们/ 构建/ 了/ 应用/ 聚合/ 性能/ 模型/ 和/ 应用/ 资源/ 消耗/ 模型/ ./ 基于/ 模型/ ,/ 我们/ 通过/ 系统/ 涌现/ 行为/ 分析/ 请求/ 行为/ ,/ 避免/ 要/ 本文/ 提出/ 一种/ 新/ 的/ 面向/ 数据中心/ 应用/ 的/ 请求/ 级求/ 精密/ 的/ 请求/ 行为/ 跟踪/ 和/ 应用/ 内部/ 细节/ ./ 为了/ 保证/ 基于/ 模型/ 分析/ 的/ 精度/ ,/ 在/ 建模/ 中/ 我们/ 量化/ 了/ 不同/ 请求/ 类型/ 和/ 并发/ 请求/ 竞争/ 对/ 应用/ 行为/ 的/ 影响/ ./ 然后/ ,/ 我们/ 设计/ 了/ 一个/ 轻量/ 内核/ 级/ 应用/ 行为/ 跟踪/ 算法/ ,/ 测量/ 应用/ 在/ 各层/ 的/ 性能/ 分布/ ./ 在/ 系统/ 级/ 观察/ 应用/ 行为/ ,/ 也/ 避免/ 要求/ 应用/ 内部/ 细节/ 和/ 侵入/ 应用/ ./ (/ 2/ )/ 提出/ 了/ 一种/ 评价/ 请求/ 分析/ 精度/ 的/ 方法/ ./ 我们/ 通过/ 请求/ 分析/ 结果/ 预测/ 应用/ 各层/ 性能/ 和/ 各项/ 资源/ 消耗/ ,/ 然后/ 使用/ 预测/ 误差/ 衡量/ 请求/ 服务/ 时间/ 和/ 资源/ 消耗/ 分析/ 的/ 精度/ ./ 实验/ 中/ ,/ 我们/ 在/ 一个/ 机群系统/ 中/ 使用/ TPC/ -/ W/ 基准/ 测试/ 和/ RUBiS/ 系统/ 作为/ 测试/ 应用/ ,/ 验证/ 了/ 本文/ 方法/ ./ 我们/ 将/ 本文/ 方法/ 的/ 精度/ 分析/ 与/ 一个/ 代表/ 目前/ 已有/ 方法/ 的/ Baseline/ 方法/ 进行/ 对比/ ./ Baseline/ 方法/ 与/ 目前/ 面向/ 黑盒/ 系统/ 的/ 分析方法/ [/ 7/ -/ 9/ ]/ 类似/ ,/ 在/ 建模/ 中/ 不/ 区分/ 请求/ 类型/ ,/ 并/ 忽略/ 并发/ 请求/ 对/ 请求/ 行为/ 的/ 影响/ ./ 实验/ 发现/ ,/ 我们/ 方法/ 在/ 请求/ 分层/ 服务/ 时间/ 、/ 各项/ 处理器/ 资源/ 消耗/ 、/ 各项/ 磁盘/ 输入输出/ 资源/ 消耗/ 和/ 各项/ 网路/ 资源/ 消耗/ 的/ 分析/ 误差/ 平均/ 小于/ 10/ %/ ,/ 而/ Baseline/ 方法/ 的/ 分析/ 误差/ 平均/ 在/ 23/ %/ ./ 这/ 说明/ 我们/ 的/ 请求/ 分析方法/ 相比/ 目前/ 已有/ 方法/ 具有/ 更/ 高/ 的/ 分析/ 精度/ ./ 本文/ 第/ 2/ 节/ 给出/ 本文/ 的/ 研究/ 问题/ 、/ 假设/ 和/ 目标/ ;/ 第/ 3/ 节/ 给出/ 基于/ 请求/ 行为/ 特征/ 建模/ 描述/ 数据中心/ 应用/ 行为/ 的/ 方法/ ;/ 第/ 4/ 节/ 介绍/ 通过/ 最小/ 二乘/ 估计/ 系统/ 模型/ 计算/ 请求/ 行为/ 特征/ ;/ 第/ 5/ 节/ 给出/ 基于/ 系统/ 级/ 插/ 桩/ 跟踪/ 应用/ 行为/ 的/ 应用/ 分层/ 聚合/ 性能/ 的/ 测量方法/ ;/ 第/ 6/ 节是/ 本文/ 方法/ 精度/ 评价/ 实验/ ;/ 第/ 7/ 节/ 介绍/ 请求/ 分析/ 相关/ 工作/ ;/ 最后/ 一节/ 是/ 本文/ 结论/ 和/ 未来/ 研究/ 方向/ ./ 2/ 问题/ 描述/ 数据中心/ 应用/ 通常/ 采用/ 多层/ 结构/ ,/ 每/ 层面/ 向/ 某种/ 特定/ 功能/ 需求/ ,/ 并且/ 被/ 部署/ 在/ 不同/ 的/ 服务器/ 上/ ./ 不失/ 一般性/ ,/ 本文/ 以/ 3/ 层/ 应用/ 为例/ ./ 如图/ 1/ ,/ 应用/ 分布图/ 1/ 数据中心/ 应用/ 系统/ 模型/ (/ (/ 1/ )/ 应用/ 内部/ 细节/ 不/ 可见/ ;/ (/ 2/ )/ Web/ 层/ 、/ App/ 层/ 和/ DB/ 层/ 分布/ 在/ 3/ 台/ 服务器/ ,/ 每台/ 服务器/ 包含/ 处理器/ 、/ 磁盘/ 输入输出/ 和/ 网络带宽/ 等/ 资源/ ;/ (/ 3/ )/ 将/ 请求/ 处理/ 路径/ 抽象/ 为/ 在/ 每层/ 或/ 每项/ 资源/ 上/ 最/ 多/ 经历/ 或/ 访问/ 一次/ ./ 本文/ 目的/ 是/ 获得/ 请求/ 在/ 每层/ 的/ 总共/ 服务/ 时间/ 和/ 各项/ 资源/ 总/ 的/ 消耗/ )/ Page3/ 在/ 3/ 个/ 物理/ 服务器/ 上/ ,/ 前端/ 是/ Web/ 服务器/ (/ Web/ 层/ )/ ,/ 中间/ 是/ 服务器/ 部署/ 应用逻辑/ (/ App/ 层/ )/ ,/ 而后/ 端/ 是/ 服务器/ 放置/ 存储系统/ (/ DataBaseSystem/ ,/ DB/ )/ ./ 其中/ 每台/ 服务器/ 包括/ 多种/ 资源/ ,/ 这里/ 我们/ 主要/ 考虑/ 3/ 项/ 资源/ :/ 处理器/ 、/ 磁盘/ 输入输出/ 和/ 网络带宽/ ./ 本文/ 的/ 目的/ 是/ 分析/ 数据中心/ 应用/ 各类/ 请求/ 服务/ 时间/ 在/ Web/ 层/ 、/ App/ 层/ 和/ DB/ 层/ 的/ 分布/ 特征/ (/ 本文/ 简称/ 请求/ 分层/ 服务/ 时间/ )/ ,/ 以及/ 分析/ 它们/ 在/ 各项/ 处理器/ 、/ 磁盘/ 输入输出/ 和/ 网络带宽/ 的/ 资源/ 消耗/ ./ 实际上/ 当/ 应用/ 处理/ 一次/ 请求/ 时/ ,/ 可能/ 引发/ 某层/ 多次/ 参与/ 和/ 多次/ 访问/ 某项/ 资源/ ./ 本文/ 不/ 考虑/ 分析/ 请求/ 处理/ 的/ 详细/ 路径/ ,/ 我们/ 主要/ 分析/ 请求/ 处理/ 在/ 每层/ 的/ 总/ 服务/ 时间/ 和/ 每项/ 资源/ 的/ 总/ 消耗/ ./ 如图/ 1/ ,/ 我们/ 抽象/ 请求/ 处理/ 路径/ 为/ 在/ 每层/ 或/ 每项/ 资源/ 上/ 最/ 多/ 经历/ 或/ 访问/ 一次/ ./ 请求/ 执行/ 路径分析/ 在/ 一些/ 工作/ 中/ 已/ 被/ 提到/ [/ 7/ ]/ ,/ 这些/ 方法/ 与/ 本文/ 请求/ 行为/ 分析/ 形成/ 互补/ ./ 数据中心/ 应用/ 包含/ 第三方/ 软件/ ,/ 这些/ 系统/ 由/ 不同/ 团队/ 在/ 不同/ 时期/ 开发/ 完成/ ,/ 所以/ 内部/ 细节/ 不/ 可知/ ,/ 通常/ 称为/ 黑盒/ 系统/ ./ 因此/ ,/ 请求/ 分析/ 不/ 适合/ 采用/ 类似/ [/ 6/ ]/ 的/ 精细/ 的/ 监测/ 机制/ ./ 本文/ 方法/ 仅/ 利用/ 已有/ 的/ 或易/ 获得/ 的/ 应用/ 级/ 指标/ 和/ 系统/ 级/ 指标/ ,/ 完成/ 请求/ 分层/ 服务/ 时间/ 和/ 各项/ 资源/ 消耗/ 的/ 分析/ 任务/ ./ 3/ 系统/ 建模/ 本/ 节/ 我们/ 分别/ 基于/ 请求/ 分层/ 服务/ 时间/ 和/ 资源/ 效用/ 描述/ 应用/ 聚合/ 性能/ 和/ 系统资源/ 效用/ 指标/ ./ 3.1/ Baseline/ 模型/ 首先/ 我们/ 考虑/ 最/ 简单/ 的/ 情况/ ./ 假如/ 请求/ 没有/ 类型/ 差异/ ,/ 即/ 负载/ 由/ 相同/ 请求/ 组成/ ,/ 则/ 应用/ 聚合/ 响应/ 时间/ 和/ 系统资源/ 效用/ ,/ 可/ 简单/ 地/ 表示/ 为/ 两个/ 线性/ 模型/ :/ 其中/ ,/ y/ 表示/ 应用/ 聚合/ 响应/ 时间/ ;/ ur/ 表示/ r/ 资源/ 效用/ ;/ at/ 是/ 请求/ 在/ 第/ t/ 层/ 的/ 服务/ 时间/ ;/ br/ 是/ 请求/ r/ 资源/ 效用/ ;/ N/ 表示/ 请求/ 数目/ ./ 需要/ 注意/ ,/ 与/ 响应/ 时间/ 模型/ 不同/ 的/ 是/ ,/ 我们/ 在/ 资源/ 效用/ 模型/ 中/ 加入/ 一个/ 截距/ 项/ b0/ ,/ r/ ,/ 因为/ 在/ 系统/ 中/ 即使/ 负载/ 为/ 零时/ 资源/ 也/ 不会/ 完全/ 空闲/ ./ 通过/ 请求/ 资源/ 效用/ br/ 可/ 计算/ 请求/ 的/ r/ 资源/ 消耗/ ./ 设/ cr/ 为/ 请求/ 的/ r/ 资源/ 消耗/ ,/ 则/ 有/ cr/ =/ brT/ ,/ 这里/ 设/ T/ 是/ 资源/ 效用/ 测量/ 时间/ 长度/ ./ 实验/ 中/ ,/ 我们/ 将/ 基于/ 以上/ 两个/ 模型/ 的/ 请求/ 分析方法/ 作为/ Baseline/ 方法/ ,/ 与/ 本文/ 方法/ 比较/ ./ 在/ 面向/ 黑盒/ 系统/ 的/ 请求/ 分析/ 相关/ 研究/ 中/ ,/ 通常/ 粗略地/ 将/ 请求/ 在/ 执行/ 路径/ 上/ 的/ 延迟/ 作为/ 请求/ 性能/ 特征/ [/ 7/ -/ 9/ ]/ ,/ 甚至/ 将/ 每类/ 请求/ 看作/ 具有/ 类似/ 的/ 性能/ 特征/ [/ 7/ ,/ 9/ ]/ ./ 而/ Base/ -/ line/ 模型/ 不/ 区分/ 请求/ 类型/ ,/ 并且/ 忽略/ 并发/ 请求/ 对系统/ 行为/ 的/ 影响/ ,/ 与/ 这些/ 方法/ 实质/ 上/ 相似/ 并且/ 具有/ 代表性/ ./ 因此/ 在/ 实验/ 中/ Baseline/ 方法/ 作为/ 与/ 本文/ 方法/ 的/ 对比/ 方法/ ./ 在/ 实验/ 部分/ (/ 见/ 第/ 6.4/ 节/ )/ ,/ 给出/ 了/ 本文/ 方法/ 与/ Baseline/ 方法/ 的/ 分析/ 精度/ 比较/ ./ 3.2/ 基于/ 负载/ 特征/ 扩展/ 模型/ 实际/ 中/ ,/ 数据中心/ 应用/ 接收/ 不同/ 类型/ 请求/ ,/ 不同/ 请求/ 混合/ 状况/ 下/ 应用/ 性能/ 不同/ [/ 3/ ]/ ./ 我们/ 定义/ 负载/ 模式/ 描述/ 数据中心/ 应用/ 负载/ 的/ 成分/ 特点/ ,/ 定义/ 如下/ :/ 这里/ 犠/ 是/ 系统/ 在/ 某/ 时刻/ 的/ 负载/ 成分/ 元素/ 向量/ ,/ 元素/ Ni/ 表示/ i/ 类型/ 请求/ 在/ 该/ 时间/ 的/ 强度/ ,/ 例如/ 到达/ 率/ ./ 基于/ 负载/ 模式/ ,/ 式/ (/ 1/ )/ 中/ 应用/ 聚合/ 响应/ 时间/ 模型/ 和/ 系统资源/ 效用/ 模型/ 可/ 扩展/ 成/ :/ 其中/ ,/ ai/ ,/ t/ 表示/ i/ 类型/ 请求/ 在/ 第/ t/ 层/ 的/ 服务/ 时间/ ;/ bi/ ,/ r/ 表示/ i/ 类型/ 请求/ 的/ r/ 资源/ 效用/ ;/ n/ 表示/ 请求/ 类型/ 数目/ ;/ Ni/ 表示/ i/ 类型/ 请求/ 数量/ ;/ Ti/ 表示/ 该类/ 请求/ 访问/ 的/ 所有/ 层/ 的/ 集合/ ,/ 本文/ 中/ Ti/ =/ 3.3/ ./ 3/ 基于/ 排队/ 理论/ 扩展/ 模型/ 前面/ 的/ 应用/ 聚合/ 响应/ 时间/ 模型/ 隐含/ 假设/ 了/ 系统/ 部署/ 在/ 能力/ 无限/ 的/ 服务器/ 上/ ./ 实际/ 情况/ 是/ 服务器资源/ 不/ 可能/ 无限/ ./ 当/ 大量/ 并发/ 请求/ 到达/ 后/ ,/ 由于/ 资源/ 缺乏/ 导致/ 大部分/ 请求/ 不能/ 立即/ 被/ 处理/ 而/ 必须/ 等待/ ./ 请求/ 处理过程/ 如图/ 2/ 所示/ ,/ 请求/ 可能/ 被/ 滞留/ 在/ 任意/ 等待/ 队列/ 中/ ./ 因此/ ,/ 应用/ 实际/ 性能/ 相比/ 理想/ 状态/ 有所/ 下降/ ,/ 在/ 模型/ 中/ 需要/ 考虑/ 这点/ ./ 图/ 2/ 基于/ 排队/ 网络/ 模型/ 的/ 多层/ 应用/ 资源/ 级/ 请求/ 处理/ 结构/ (/ 其中/ 每/ 项/ 有限/ 资源/ 一个/ 等待/ 队列/ ,/ 请求/ 处理/ 可能/ 因/ 并发/ 请求/ 竞争/ 资源/ 被/ 滞留/ 在/ 任意/ 队列/ 中/ )/ 根据/ Little/ 法则/ [/ 10/ ]/ 描述/ 请求/ 等待时间/ ,/ 我们/ 扩展/ 应用/ 聚合/ 响应/ 时间/ 模型/ 如下/ :/ Page4y/ =/ ∑/ n/ 这里/ 模型/ 右项/ 描述/ 了/ 请求/ 在/ 多项/ 资源/ 队列/ 中/ 的/ 平均/ 等待时间/ ./ Ri/ 表示/ i/ 类型/ 请求/ 的/ 资源/ 集合/ ,/ λ/ r/ 表示/ r/ 资源/ 的/ 请求/ 访问率/ ,/ 它/ 可/ 通过/ bi/ ,/ r/ 得知/ ,/ bi/ ,/ r/ 值/ 的/ 意义/ 表示/ i/ 类型/ 请求/ 是否/ 访问/ r/ 资源/ ,/ 如果/ 为/ 0/ 则/ 表示/ 否定/ ./ 实际上/ ,/ 考虑/ 到/ bi/ ,/ r/ 值/ 不/ 可能/ 完全/ 精确/ 被/ 计算出来/ ,/ 我们/ 可以/ 通过/ 设置/ 阀值/ 来/ 判断/ ./ 进一步/ ,/ 应用/ 聚合/ 响应/ 时间/ 在/ 各层/ 的/ 分布/ 可/ 表示/ 为/ (/ yt/ =/ ∑/ n/ 其中/ ,/ n/ 表示/ 进入/ t/ 层/ 的/ 请求/ 种类/ 数目/ ,/ 与/ 计算/ λ/ r/ 的/ 方法/ 类似/ ,/ 通过/ bi/ ,/ r/ 值/ 可以/ 得出/ 访问/ 该层/ 任何/ 资源/ 的/ 请求/ 集合/ ./ 这里/ 我们/ 将/ 等待/ 资源/ 空闲/ 耗时/ 相关/ 的/ 项/ 具体/ 到/ 处理器/ 、/ 磁盘/ 输入输出/ 和/ 网络带宽/ 资源/ 上/ ./ 4/ 计算/ 请求/ 行为/ 特征/ i/ 上面/ 给出/ 请求/ 分层/ 服务/ 时间/ (/ ai/ ,/ t/ )/ 和/ 资源/ 效用/ (/ bi/ ,/ r/ )/ 与/ 应用/ 分层/ 聚合/ 性能/ (/ yt/ )/ 和/ 系统资源/ 效用/ (/ ur/ )/ 的/ 量化/ 关系/ ./ 如果/ 我们/ 获得/ 多组/ 这些/ 应用/ 级/ 和/ 系统/ 级/ 指标/ ,/ 则/ 可/ 通过/ 模型/ 参数估计/ 得到/ 这/ 两个/ 请求/ 级/ 行为/ 特征/ ./ 负载/ 模式/ 和/ 资源/ 效用/ 可/ 通过/ 直接/ 测量/ 获得/ ,/ 但是/ 应用/ 分层/ 聚合/ 性能/ 却/ 不能/ 直接/ 测/ 得/ ,/ 在/ 第/ 5/ 节/ 中将/ 详细/ 说明/ 如何/ 从/ 应用/ 外部/ 获得/ 该项/ 指标/ ./ 模型/ 参数估计/ 最/ 常/ 采用/ 的/ 是/ 最小/ 二乘/ [/ 11/ ]/ 方法/ ./ 下面/ 就/ 以式/ (/ 4/ )/ 模型/ 为/ 例来/ 描述/ 最小/ 二乘/ 方法/ ./ 4.1/ 最小/ 二乘/ 估计/ 模型/ 估计/ 的/ 目的/ 是/ 找出/ 使/ 模型/ 准确度/ 最大/ 的/ 参/ 我们/ 取/ 最小/ 平方/ 误差/ 作为/ 目标/ 函数/ ,/ 即/ 在/ 实际/ 系统/ 中/ ,/ 要/ 确定/ 一组/ θ/ 使/ 之/ 精确/ 地/ 满足/ 所有/ 方程/ 是/ 不/ 可能/ 的/ ./ 联立方程/ 组/ 只有/ 取/ L/ >/ 2i/ ,/ 才/ 有/ 可能/ 确定/ 一组/ “/ 最优/ ”/ 的/ 模型/ 参数/ ,/ 而且/ 为了/ 保证/ 模型/ 精度/ ,/ L/ 必须/ 充分/ 大/ ./ J/ (/ θ/ )/ =/ ∑/ L/ =/ (/ yL/ -/ / L/ θ/ -/ ω/ LNL/ )/ τ/ (/ yL/ -/ / L/ θ/ -/ ω/ LNL/ )/ ,/ 展开/ 得到/ (/ / τ/ L/ / L/ )/ θ/ ^/ LS/ =/ / τ/ L/ (/ yL/ -/ ω/ LNL/ )/ ./ 当/ (/ / τ/ L/ / L/ )/ 存在/ 数值/ ./ 而/ 参数/ 估值/ 的/ 优良/ 与否/ 很大/ 程度/ 上/ 取决于/ 参数估计/ 方法/ ./ 理想/ 的/ 估值/ 应当/ 与/ 真值/ (/ 系统/ 的/ 真实/ 参数/ )/ 完全一致/ ,/ 而/ 实际/ 是/ 不/ 可行/ 的/ ./ 有/ 很多/ 方法/ 可/ 被/ 用于/ 由/ 测量/ 值得/ 到/ 模型/ 参数/ ,/ 其中/ 采用/ 最多/ 的/ 方法/ 是/ 普通/ 最小/ 二乘/ (/ OrdinaryLeast/ -/ Squares/ ,/ OLS/ )/ 回归/ ./ 如果/ y/ 是/ 某/ 时刻/ 实测/ 的/ 应用/ 性能/ ,/ y/ ^/ 是/ 该/ 时刻/ 模型/ 在/ 某/ 参数/ 集上/ 的/ 拟合/ 值/ ,/ 则/ e/ =/ y/ -/ y/ ^/ 表示/ 模型/ 残差/ ,/ 即/ 模型/ 误差/ ./ OLS/ 寻求/ 与/ 真值/ 方差/ 尽可能/ 小/ 的/ 无偏/ 估计量/ ,/ 也就是说/ 寻找/ 能/ 使/ 残差/ e/ 平方和/ 最小/ 的/ 模型/ 参数/ 集/ ./ OLS/ 回归/ 已/ 在/ 很多/ 统计/ 软件/ 和/ 商业/ 报表/ 软件/ 中/ 被/ 实现/ ./ 我们/ 假设/ 在/ 实验/ 中/ 包括/ 多个/ 测量/ 周期/ ,/ 任意/ 测量/ 周期/ 用/ j/ 表示/ ./ 我们/ 可将式/ (/ 4/ )/ 写成/ 最小/ 二乘/ 的/ 格式/ :/ 其中/ ,/ / (/ j/ )/ =/ [/ N1/ ,/ j/ …/ Ni/ ,/ jN1/ ,/ j/ …/ Ni/ ,/ jN1/ ,/ j/ …/ Ni/ ,/ j/ ]/ ;/ θ/ =/ [/ a1a2/ …/ a3i/ ]/ τ/ ;/ ω/ (/ j/ )/ =/ 1N/ (/ j/ )/ =/ ∑/ n/ 对于/ j/ =/ 1/ ,/ 2/ ,/ …/ ,/ L/ ,/ 式/ (/ 5/ )/ 进一步/ 可/ 构成/ 线性方程组/ :/ 其中/ ,/ 逆/ 矩阵/ 时/ ,/ 有/ θ/ ^/ LS/ =/ (/ / τ/ L/ / L/ )/ -/ 1/ / τ/ L/ (/ yL/ -/ ω/ LNL/ )/ ./ 这里/ 的/ θ/ ^/ LS/ 即为/ 模型/ 参数/ 的/ 最小/ 二乘/ 估计值/ ./ 5/ 测量/ 应用/ 分层/ 聚合/ 性能/ 我们/ 通过/ 跟踪/ 应用/ 各层/ 模块/ 交互/ 活动/ 测量/ 应用/ 分层/ 聚合/ 性能/ ./ 如果/ 直接/ 利用/ 请求/ 处理过程/ 进入/ 每层/ 的/ 开始/ 时刻/ 计算/ 每层/ 耗时/ ,/ 则/ 需要/ 所有/ 服务器/ 时钟/ 保持一致/ ./ 因此/ ,/ 我们/ 利用/ 请求/ 处理过程/ 的/ 嵌套/ 结/ Page5/ 构/ 测量/ 应用/ 分层/ 聚合/ 性能/ ./ 实验/ 中/ 我们/ 发现/ ,/ 在/ 一次/ 请求/ 处理/ 中/ 各层/ 模块/ 的/ 交互/ 如图/ 3/ 所示/ ,/ App/ 层/ 向/ Web/ 层/ 提供/ 具体/ 应用/ 的/ 请求/ 处理结果/ ,/ 并/ 向/ DB/ 层/ 提出/ 数据/ 访问/ 请求/ ./ 因此/ ,/ 应用/ 在/ App/ 层/ 性能/ 是/ App/ 层/ 请求/ 响应/ 时间/ 与/ DB/ 层/ 请求/ 响应/ 时间/ 之差/ ./ 这里/ 某层/ 请求/ 响应/ 时间/ 是从/ 接收/ 到/ 其它/ 层/ 请求/ 后/ 到/ 返回/ 处理结果/ 的/ 耗时/ ./ 通过/ 此/ 方法/ ,/ 不/ 要求/ 所有/ 服务器/ 必须/ 具有/ 严格/ 一致/ 的/ 时钟/ ./ 图/ 3/ 请求/ 处理过程/ 嵌套/ 结构/ 和/ 各层/ 处理/ 时间/ 计算/ (/ 请求/ 分层/ 处理/ 时间/ 是/ 某层/ 所有/ 请求/ 分层/ 响应/ 时间/ 与/ 所有/ 嵌入/ 层/ 响应/ 时间/ 之差/ ./ 其中/ ,/ 一次/ 请求/ 分层/ 响应/ 时间/ 是/ 该/ 层/ 从/ 接收/ 请求/ 到/ 返回/ 处理结果/ 的/ 耗时/ )/ 由于/ 应用/ 是/ 黑盒/ 系统/ ,/ 不能/ 直接/ 在/ 其/ 内部/ 实现/ 测量/ ,/ 所以/ 我们/ 通过/ 在/ 系统/ 内核/ 插入/ 断点/ 捕获/ 应用/ 通信/ 活动/ ./ 基于/ Kprobe/ ①/ 工具/ ,/ 在/ 4/ 个/ TCP/ 核心/ 函数/ 中/ 插入/ 记录/ 操作/ ,/ 它们/ 是/ sys/ _/ accept/ 函数/ 、/ sys/ _/ shutdown/ 函数/ 、/ tcp/ _/ sendmsg/ 函数/ 和/ tcp/ _/ recvmsg/ 函数/ ./ sys/ _/ accept/ 函数/ 接收/ 连接/ 请求/ ,/ 创建/ 一个/ TCP/ 连接/ ,/ sys/ _/ shutdown/ 函数/ 主动/ 关闭/ 一个/ TCP/ 连接/ ,/ tcp/ _/ sendmsg/ 函数/ 和/ tcp/ _/ recvmsg/ 函数/ 分别/ 是/ 内核/ TCP/ 协议/ 栈中/ 发送/ 和/ 接收/ 消息/ 的/ 函数/ ./ 当/ 应用/ 调用/ 内核/ TCP/ 通信/ 操作/ 时/ ,/ 执行/ 到/ 插入/ 代码/ ,/ 触发/ 对/ 通信/ 活动/ 的/ 记录/ ./ 记录/ 信息/ 包括/ :/ 时间/ 戳/ 、/ 处理器/ 号/ 、/ 进程/ 号/ 、/ 线程/ 号/ 、/ 程序/ 名称/ 和/ 事件/ 名称/ ./ 事件/ 主要/ 分/ 两类/ :/ 消息/ 发送/ 事件/ 和/ 消息/ 接收/ 事件/ ./ 收集/ 完/ 系统/ 通信/ 事件/ 后/ ,/ 采用/ 两个/ 步骤/ 计算/ 应用/ 分层/ 聚合/ 性能/ :/ (/ 1/ )/ 通过/ 过滤/ 操作/ 找出/ 所有/ 与/ 应用/ 相关/ 的/ 通信/ 事件/ ,/ 然后/ 使用/ 关联/ 操作/ 发现/ 这些/ 事件/ 之间/ 的/ 逻辑关系/ ,/ 最后/ 得出/ 所有/ 请求/ 处理/ 的/ 流程/ 结构/ ;/ (/ 2/ )/ 基于/ 事件/ 关系/ 计算/ 每层/ 请求/ 响应/ 时间/ ,/ 并/ 基于/ 计算结果/ 和/ 请求/ 处理/ 流程/ 计算/ 每层/ 请求/ 处理/ 时间/ ,/ 最后/ 所有/ 请求/ 处理/ 在/ 该层/ 处理/ 时间/ 之/ 和/ 则/ 是/ 应用/ 在/ 该/ 层/ 的/ 聚合/ 性能/ ./ 在/ 我们/ 已有/ 工作/ [/ 7/ ]/ 中/ 实现/ 了/ 一个/ 请求/ 跟踪/ 工具/ ,/ 该/ 工具/ 通过/ 关联/ 请求/ 活动/ 事件/ 发现/ 请求/ 执行/ 路径/ ./ 它/ 定义/ 和/ 分析/ 两类/ 事件/ 关系/ :/ 进程/ 上下文/ 关系/ 和/ 消息/ 上下文/ 关系/ ./ 在/ 同一/ 进程/ 上下文/ 中/ 发生/ 的/ 事件/ 属于/ 进程/ 上下文/ 关系/ ,/ 在/ 不同/ 进程/ 间/ 由/ 一次/ 通信/ 产生/ 的/ 多个/ 事件/ 属于/ 消息/ 上下文/ 关系/ ./ 因为/ 本文/ 方法/ 需要/ ,/ 在/ 这/ 两类/ 关系/ 基础/ 上/ 又/ 新增/ 两类/ 逻辑关系/ :/ 开始/ -/ 结束/ 关系/ 和/ 嵌套/ 关系/ ./ 对于/ 属于/ 进程/ 上下文/ 关系/ 的/ 消息/ 接收/ 事件/ R/ 和/ 消息/ 发送/ 事件/ S/ ,/ 如果/ S/ 的/ 目的/ 地址/ 与/ R/ 的/ 源地址/ 一致/ ,/ 则/ 认为/ 属于/ 开始/ -/ 结束/ 关系/ ,/ 否则/ ,/ 两者/ 是/ 嵌套/ 关系/ ;/ 如果/ R/ 和/ S/ 的/ 关系/ 是/ 消息/ 上下文/ 关系/ ,/ 则/ 与/ S/ 具有/ 嵌套/ 关系/ 的/ 接收/ 消息/ 事件/ 也/ 与/ R/ 是/ 嵌套/ 关系/ ./ 以图/ 3/ 为例/ ,/ 在/ 此/ 请求/ 处理过程/ 中/ ,/ 开始/ -/ 结束/ 关系/ 的/ 事件/ 对/ 有/ R1/ 和/ S8/ 、/ R2/ 和/ S7/ 、/ R3/ 和/ S4/ 、/ R5/ 和/ S6/ ;/ 嵌套/ 关系/ 的/ 事件/ 对/ 有/ R1/ 和/ R2/ 、/ R2/ 和/ R3/ 、/ R2/ 和/ R5/ ./ 当/ 发现/ 请求/ 处理/ 结构/ 后/ ,/ 基于/ 开始/ -/ 结束/ 关系/ 可/ 计算/ 请求/ 处理/ 在/ 每层/ 的/ 响应/ 时间/ ./ 图/ 3/ 中/ ,/ 此次/ 请求/ 处理/ 在/ Web/ 层/ 响应/ 时间/ 是/ tS8/ -/ tR1/ ,/ 在/ App/ 层/ 响应/ 时间/ 是/ tS7/ -/ tR2/ ,/ 在/ DB/ 层/ 响应/ 时间/ 是/ tS4/ -/ tR3/ +/ tS6/ -/ tR5/ ./ 这里/ tR/ 表示/ 事件/ R/ 发生/ 时/ 的/ 时间/ 戳/ ./ 然后/ 基于/ 处理/ 流程/ 嵌套/ 结构/ 和/ 各层/ 响应/ 时间/ ,/ 请求/ 处理/ 在/ App/ 层/ 的/ 处理/ 时间/ 是/ tS7/ -/ tR2/ -/ (/ tS4/ -/ tR3/ +/ tS6/ -/ tR5/ )/ ./ 最后/ ,/ 所有/ 请求/ 处理/ 在/ App/ 层/ 的/ 处理/ 时间/ 之/ 和/ 即/ 是/ 应用/ App/ 层/ 聚合/ 性能/ ./ 6/ 实验/ 6.1/ 实验/ 环境/ 我们/ 在/ 一个/ 刀片/ 服务器/ 机群系统/ 上/ 实现/ 和/ 测试/ 了/ 本文/ 方法/ ./ 每台/ 服务器/ 配有/ 双路/ AMDOpteron1/ ./ 6GHz/ 处理器/ 、/ 2GB/ 内存/ 、/ 146GB/ 磁盘/ 和/ 千兆/ 网卡/ ,/ 并/ 运行/ 内核/ 版本/ 2.6/ ./ 22.5/ -/ 31/ 的/ Linux/ 系统/ ./ 我们/ 选用/ 20/ 台/ 此类/ 服务器/ 作为/ 实验/ 平台/ ,/ 其中/ 18/ 台/ 服务器/ 构成/ 基准/ 测试/ 应用/ 的/ 运行/ 环境/ ,/ 其它/ 服务器/ 分别/ 作为/ 测试/ 应用/ 客户端/ 和/ 独立/ 的/ 请求/ 分析/ 平台/ ./ 机群/ 内部/ 通过/ 自/ 适应/ 千兆/ 交换机/ 连接/ ./ 实验/ 采用/ RUBiS/ ②/ 系统/ 和/ TPC/ -/ W/ ③/ 基准/ 测试/ 作为/ 测试/ 应用/ ./ RUBiS/ 系统/ 是/ 一个/ 由/ Rice/ 大学/ 基于/ EJB/ 开发/ 的/ Internet/ 应用程序/ ,/ 模拟/ 类似/ Ebay/ 商业模式/ 的/ 在线/ 拍卖/ 网站/ ,/ 具备/ 在线/ 拍卖/ 网站/ 的/ 核心/ 功能/ ./ 该/ 系统/ 采用/ 3/ 层/ 结构/ :/ 前端/ 是/ Web/ 服务器/ ,/ 后端/ 是/ MySql/ 数据库系统/ ,/ 中间层/ 是/ Java/ 语言/ 实现/ 的/ 应/ ①/ ②/ ③/ jectweb/ ./ orgPage6/ 用/ 逻辑/ ./ RUBiS/ 共/ 支持/ 22/ 类/ 请求/ ,/ 主要/ 包括/ 浏览/ 、/ 竞标/ 和/ 查看/ 用户/ 竞标/ 历史/ 等/ 操作/ ./ RUBiS/ 官方网站/ 提供/ 了/ 两种/ 标准/ 负载/ :/ Browsing/ 和/ Bidding/ ,/ 分别/ 模拟/ 用户/ 浏览/ 和/ 竞价/ 行为/ ./ TPC/ -/ W/ 基准/ 测试/ 是/ 另/ 一个/ 由/ Java/ 语言/ 实现/ 并/ 用于/ 模拟/ 事务/ 型/ 电子书/ 店/ 的/ 测试/ 基准/ 系统/ ./ 与/ RUBiS/ 类似/ ,/ 该/ 基准/ 测试/ 也/ 是/ 3/ 层/ 结构/ ,/ 应用层/ 包括/ Image/ 应用服务器/ 和/ WebCache/ 服务器/ ./ TPC/ -/ W/ 共/ 支持/ 14/ 类/ 请求/ ,/ 主要/ 包括/ 书籍/ 搜索/ 、/ 用户注册/ 和/ 价格/ 更新/ 管理/ 等/ 操作/ ,/ 并/ 提供/ 了/ 3/ 种/ 标准/ 负载/ :/ Browsing/ 、/ Shopping/ 和/ Ordering/ ,/ 分别/ 模拟/ 用户/ 浏览/ 、/ 采购/ 和/ 订购/ 行为/ ./ 6.2/ 实验设计/ 本文/ 实验/ 的/ 目的/ 是/ 验证/ 本文/ 请求/ 分析方法/ 的/ 精度/ ,/ 包括/ 每/ 类/ 请求/ 的/ 分层/ 服务/ 时间/ 和/ 各项/ 资源/ 消耗/ 以及/ 评价/ 使用/ Kprobe/ 工具/ 测量/ 应用/ 分层/ 性能/ 的/ 开销/ ./ 第/ 6.3/ 节是/ 使用/ 本文/ 方法/ 分析/ RUBiS/ 系统/ 和/ TPC/ -/ W/ 基准/ 的/ 请求/ 行为/ 的/ 实验/ 结果/ ./ 第/ 6.4/ 节/ 评价/ 了/ 本文/ 方法/ 的/ 分析/ 精度/ ./ 第/ 6.5/ 节/ 评价/ 了/ Kprobe/ 工具/ 对/ 应用/ 性能/ 的/ 影响/ ./ 我们/ 设计/ 了/ 以下/ 3/ 个/ 实验/ :/ 实验/ 1/ ./ 分析/ RUBiS/ 系统/ 和/ TPC/ -/ W/ 基准/ 的/ 请求/ 级/ 行为/ 特征/ ,/ 包括/ 每/ 类/ 请求/ 分层/ 服务/ 时间/ 和/ 各项/ 资源/ 消耗/ ./ 在/ 前面/ 第/ 4/ 节/ 提到/ ,/ 请求/ 分层/ 服务/ 时间/ 通过/ 式/ (/ 6/ )/ 中/ 方程组/ 计算/ 得到/ ./ 求解/ 方程组/ 需要/ 足够/ 多/ 不同/ 的/ 负载/ 模式/ ,/ 通常/ 至少/ 是/ 请求/ 种类/ 数目/ 的/ 两倍/ ./ 因此/ 在/ 实验/ 中/ ,/ 我们/ 通过/ 配置/ 请求/ 转换/ 概率/ 为/ TPC/ -/ W/ 基准/ 和/ RUBiS/ 系统/ 又/ 分别/ 模拟/ 了/ 6/ 种/ 不同/ 的/ 负载/ ./ 通过/ 调整/ 客户端/ 数目/ ,/ 改变/ 六种/ 负载/ 在/ 合成/ 负载/ 中/ 的/ 比例/ ,/ 分别/ 为/ TPC/ -/ W/ 基准/ 合成/ 了/ 30/ 个/ 负载/ 模式/ ,/ 为/ RUBiS/ 系统/ 合成/ 了/ 50/ 个/ 负载/ 模式/ ./ 为了/ 避免/ 请求/ 分析/ 实验/ 与/ 后面/ 精度/ 评价/ 实验/ 使用/ 相同/ 的/ 负载/ ,/ 在/ 这里/ 没有/ 使用/ 应用/ 的/ 标准/ 负载/ ./ 实验/ 2/ ./ 评价/ 实验/ 1/ 的/ 请求/ 分析/ 结果/ 的/ 精度/ ,/ 包括/ 每/ 类/ 请求/ 的/ 分层/ 服务/ 时间/ 和/ 各项/ 资源/ 消耗/ ./ 目前/ 精确/ 的/ 请求/ 分析方法/ 大多/ 面向/ 特定/ 系统/ ,/ 并且/ 需要/ 特制/ 的/ 请求/ 跟踪/ 机制/ ,/ 如/ 文献/ [/ 6/ ,/ 12/ -/ 14/ ]/ 等/ ,/ 所以/ 难以使用/ 这/ 类/ 方法/ 的/ 实验/ 结果/ 作为/ 请求/ 分析/ 结果/ 的/ 参考/ ./ 因此/ ,/ 我们/ 通过/ 使用/ 请求/ 分析/ 结果/ 预测/ 应用/ 级/ 行为/ 的/ 误差/ ,/ 即/ 应用/ 性能/ 和/ 各项/ 资源/ 消耗/ ,/ 来/ 作为/ 衡量/ 分析方法/ 精度/ 的/ 指标/ ./ 具体/ 上/ 讲/ ,/ 我们/ 使用/ 应用/ 分层/ 性能/ 的/ 预测/ 误差/ 作为/ 分层/ 服务/ 时间/ 分析/ 的/ 精度/ 评价/ 指标/ ,/ 即/ 珋/ et/ =/ yt/ -/ ∑/ i/ 验/ 所有/ 类型/ 请求/ 的/ 分层/ 服务/ 时间/ 分析/ 结果/ 的/ 平均误差/ ./ 这里/ yt/ 是/ 应用/ 在/ t/ 层/ 的/ 实际/ 性能/ ,/ 而/ ∑/ i/ 示/ 相对/ 应/ 的/ 应用/ 在/ 该/ 层/ 的/ 预测/ 性能/ ./ 当/ 应用/ 负载/ 较轻时/ ,/ 请求/ 并发/ 影响/ 可以/ 忽略不计/ ,/ 此时/ 应用/ 性能/ 主要/ 由/ 应用服务/ 时间/ 主导/ ,/ 应用/ 分层/ 性能/ yt/ 可/ 近似/ 代替/ 应用/ 分层/ 服务/ 时间/ ./ 例如/ 实验/ 中有/ 150/ 个/ 并发/ 客户端/ 时/ ,/ 系统/ 各项/ 资源/ 效用/ 均/ 在/ 10/ %/ 以下/ ,/ 此时/ 请求/ 并发/ 影响/ 基本/ 可以/ 忽略不计/ ./ 同样/ 的/ ,/ 我们/ 使用/ 系统资源/ 消耗/ 的/ 预测/ 误差/ 作为/ 资源/ 消耗/ 分析/ 的/ 精度/ 评价/ 指标/ ,/ 即/ 珋/ er/ =/ ur/ ·/ T/ -/ b0/ ,/ r/ ·/ T/ -/ ∑/ i/ 它/ 评价/ 所有/ 类型/ 请求/ 的/ 资源/ 消耗/ 分析/ 结果/ 的/ 平均误差/ ./ 这里/ T/ 表示/ 一次/ 实验/ 的/ 时间/ 长度/ ./ 需要/ 注意/ 的/ 是/ ,/ 与/ 前面/ 评价/ 指标/ 不同/ 的/ 是/ ,/ 这里/ 需要/ 考虑/ 系统/ 额外/ 资源/ 开销/ b0/ ,/ r/ ./ 为了/ 比较/ 本文/ 方法/ 与/ 已有/ 方法/ 的/ 分析/ 精度/ ,/ 我们/ 使用/ 第/ 3.1/ 节/ 的/ Baseline/ 方法/ 作为/ 对比/ 方法/ ./ Baseline/ 方法/ 与/ 目前/ 已有/ 的/ 面向/ 黑盒/ 系统/ 的/ 请求/ 分析/ 工作/ [/ 7/ -/ 9/ ]/ 类似/ ,/ 不/ 区分/ 请求/ 类型/ ,/ 并/ 忽略/ 并发/ 请求/ 对系统/ 行为/ 的/ 影响/ ./ 使用/ 这个/ Baseline/ 方法/ 作为/ 比较/ 对象/ ,/ 能够/ 间接/ 得到/ 本文/ 方法/ 与/ 已有/ 方法/ 的/ 比较/ 结果/ ./ 我们/ 在/ 多种/ 合成/ 负载/ 下/ ,/ 检验/ 了/ 本文/ 方法/ 与/ Baseline/ 方法/ 的/ 分析/ 精度/ ,/ 合成/ 负载/ 见表/ 1/ ./ 这些/ 合成/ 负载/ 有/ 3/ 类/ :/ 极轻/ 负载/ (/ 150/ 个/ 客户端/ )/ 、/ 轻/ 负载/ (/ 300/ 个/ 客户端/ )/ 和/ 重/ 负载/ (/ 1500/ 个/ 客户端/ )/ ./ 为了/ 避免/ 偶然性/ ,/ 每/ 类/ 合成/ 负载/ 又/ 包含/ 了/ 多个/ 标准/ 负载/ 混合/ 比例/ 不同/ 的/ 合成/ 负载/ ./ 负载/ #/ 1/ 至/ 负载/ #/ 4/ 是/ 极轻/ 负载/ ,/ 用于/ 评价/ 请求/ 分层/ 服务/ 时间/ 分析/ 的/ 精度/ ./ 而/ 负载/ #/ 5/ 至/ 负载/ #/ 12/ 用于/ 评价/ 请求/ 资源/ 消耗/ 分析/ 的/ 精度/ ./ 同样/ 为了/ 避免/ 偶然性/ ,/ 其中/ #/ 5/ 至/ #/ 8/ 是/ 轻/ 负载/ ,/ 表/ 1TPC/ -/ W/ 基准/ 和/ RUBiS/ 系统/ 合成/ 测试/ 负载/ 负载/ TPC/ -/ W/ 客户端/ 个数/ #/ 15050507575/ #/ 2100252512525/ #/ 3251002525125/ #/ 42525100/ -/ -/ #/ 5100100100150150/ #/ 6200505025050/ #/ 7502005050250/ #/ 85050200/ -/ -/ #/ 9500500500750750/ #/ 1010002502501250250/ #/ 1125010002502501250/ #/ 122502501000/ -/ -/ 注/ :/ 表中/ 包括/ 12/ 种/ 不同/ 负载/ 并发/ 客户端/ 数目/ 组合/ (/ 客户端/ 数目/ 单位/ :/ 个/ )/ ./ 负载/ #/ 1/ 到/ 负载/ #/ 4/ 用于/ 评价/ 请求/ 分层/ 服务/ 时间/ 分析/ 精度/ ;/ 负载/ #/ 5/ 到/ 负载/ #/ 12/ 用于/ 评价/ 请求/ 资源/ 消耗/ 分析/ 精度/ ,/ 包括/ 轻/ 负载/ 和/ 重/ 负载/ 两种/ 情形/ Page7/ 而/ #/ 9/ 至/ #/ 12/ 是/ 重/ 负载/ ./ 实验/ 3/ ./ 评价/ Kprobe/ 工具/ 带来/ 的/ 系统/ 开销/ ./ 我们/ 通过/ 比较/ 应用/ 分别/ 在/ Kprobe/ 工具/ 关闭/ 状态/ 和/ 开启/ 状态/ 的/ 端/ 到/ 端/ 聚合/ 性能/ ,/ 即/ 平均/ 响应/ 时间/ ,/ 来/ 评价/ Kprobe/ 对/ 应用/ 性能/ 的/ 影响/ ./ 6.3/ 请求/ 分析/ 结果/ 表/ 2/ 给出/ 了/ 使用/ 本文/ 方法/ 分析/ TPC/ -/ W/ 基准/ 和/ RUBiS/ 系统/ 的/ 请求/ 行为/ 的/ 部分/ 结果/ ./ 从/ 这些/ 典型/ 结果/ 可以/ 看出/ :/ (/ 1/ )/ 请求/ 性能/ 的/ 差异性/ ./ 不同/ 类型/ 请求/ 在/ 每个/ 分层/ 的/ 服务/ 时间/ 不同/ ./ 例如/ :/ TPC/ -/ W/ 基准/ 测试/ 的/ SearchResult/ 请求/ 和/ AdminConfirm/ 请求/ 在/ App/ 层/ 有/ 较/ 其它/ 请求/ 更大/ 的/ 服务/ 时间/ ,/ 而/ 在/ DB/ 层/ ,/ OrderDisplay/ 请求/ 和/ AdminConfirm/ 请求/ 服务/ 时间/ 较/ 其它/ 请求/ 大/ ./ 同样/ ,/ RUBiS/ 的/ ViewbidHistory/ 请求/ 在/ DB/ 层/ 有/ 较/ 其它/ 请求/ 更大/ 的/ 服务/ 时间/ ./ (/ 2/ )/ 请求/ 性能/ 分布/ 的/ 差异性/ ./ 每类/ 请求/ 在/ 不同/ 分层/ 的/ 服务/ 时间/ 不同/ ./ 例如/ :/ TPC/ -/ W/ 基准/ 测试/ 的/ AdminConfirm/ 请求/ 和/ Home/ 请求/ 服务/ 时间/ 在/ App/ 层/ 和/ DB/ 层/ 分布/ 明显/ 大于/ Web/ 层/ ,/ 最大/ 差别/ 接近/ 一个/ 数量级/ ,/ 同时/ OrderDisplay/ 请求/ 的/ DB/ 层/ 服务/ 时间/ 大于/ Web/ 层/ 和/ App/ 层/ ,/ 差异/ 也/ 将近/ 一个/ 数量级/ ./ 同样/ 在/ RUBiS/ 系统/ 中/ ,/ Home/ 请求/ 在/ App/ 层/ 有/ 较/ 其它/ 两层/ 更大/ 的/ 服务/ 时间/ ,/ 同时/ ViewbidHistory/ 和/ BrowseRegions/ 请求/ 在/ App/ 层/ 有/ 较/ Web/ 层/ 更/ 大/ 的/ 服务/ 时间/ ,/ 最大/ 差异/ 也/ 将近/ 一个/ 数量级/ ./ 表/ 2/ 使用/ 本文/ 方法/ 分析/ 得到/ 的/ TPC/ -/ W/ 基准/ 和/ RUBiS/ 系统/ 的/ 请求/ 分层/ 服务/ 时间/ 和/ 资源/ 消耗/ 的/ 部分/ 结果/ 请求/ AdminConfirm0/ ./ 3120.00030/ ./ 00003.2380/ ./ 0750.0191/ ./ 0340.00240/ ./ 0019Home0/ ./ 2740.00050/ ./ 00011.5630/ ./ 0090.0540/ ./ 8740.00170/ ./ 0008OrderDisplay0/ ./ 3770.00060/ ./ 00010.2390/ ./ 0060.0263/ ./ 6280.00380/ ./ 0037SearchResult0/ ./ 7350.00110/ ./ 00002.7980/ ./ 0260.0430/ ./ 4680.00310/ ./ 0013/ 请求/ Home0/ ./ 1780.00020/ ./ 00001.8360/ ./ 00250.00000/ ./ 1470.00050/ ./ 00020BrowseRegions0/ ./ 1910.00030/ ./ 00002.0490/ ./ 00170.00010/ ./ 7480.00120/ ./ 00040ViewbidHistory0/ ./ 1870.00030/ ./ 00011.9280/ ./ 00210.00001/ ./ 7450.00900/ ./ 00011/ 注/ :/ 表中/ ,/ aWeb/ 表示/ 请求/ Web/ 层/ 服务/ 时间/ ,/ cApp/ ,/ CPU/ 表示/ 请求/ App/ 层/ 处理器/ 资源/ 消耗/ ,/ 以此类推/ ./ (/ 3/ )/ 请求/ 资源/ 消耗/ 的/ 差异性/ ./ 不同/ 类型/ 请求/ 对/ 每项/ 的/ 需求/ 不同/ ./ 例如/ :/ 在/ App/ 层/ ,/ TPC/ -/ W/ 基准/ 测试/ 的/ AdminConfirm/ 请求/ ,/ 对/ 处理器/ 资源/ 需求/ 大于/ 其它/ 请求/ ,/ 而/ Home/ 请求/ 和/ SearchResult/ 请求/ 则/ 比/ 其它/ 请求/ 消耗/ 更/ 多/ 的/ 磁盘/ 输入输出/ 资源/ ./ (/ 4/ )/ 请求/ 资源/ 需求/ 分布/ 的/ 差异性/ ./ 每类/ 请求/ 对/ 不同/ 资源/ 的/ 消耗/ 不同/ ./ 例如/ :/ TPC/ -/ W/ 基准/ 测试/ 的/ Home/ 请求/ 和/ SearchResult/ 请求/ ,/ 在/ App/ 层/ 的/ 磁盘/ 输入输出/ 消耗/ 大于/ 其它/ 资源/ 消耗/ ./ RUBiS/ 系统/ 的/ ViewbidHistory/ 请求/ ,/ 在/ App/ 层/ 的/ 处理器/ 资源/ 需求/ 大于/ 其它/ 资源/ 需求/ ./ 6.4/ 分析/ 精度/ 评价/ 6.4/ ./ 1/ 请求/ 分层/ 服务/ 时间/ 分析/ 图/ 4/ 对比/ 了/ 本文/ 方法/ 与/ Baseline/ 方法/ 在/ 请求/ 分层/ 服务/ 时间/ 方面/ 的/ 分析/ 精度/ ./ 其中/ ,/ 图/ 4/ (/ a/ )/ 是/ TPC/ -/ W/ 基准/ 分别/ 在/ 负载/ #/ 1/ 、/ 负载/ #/ 2/ 、/ 负载/ #/ 3/ 和/ 负载/ #/ 4/ 下/ (/ 见表/ 1/ )/ ,/ 两种/ 分析方法/ 的/ 精度/ 对比/ ./ 以/ 应用/ 分层/ 性能/ 的/ 预测/ 误差/ 珋/ et/ 作为/ 精度/ 指标/ ./ 在/ 第/ 6.2/ 节/ 提到/ ,/ 珋/ et/ 是/ 分析/ 结果/ 的/ 平均误差/ ./ 该/ 指标值/ 越小/ ,/ 则/ 分析方法/ 的/ 精度/ 越高/ ./ 实验/ 结果/ 可以/ 看到/ ,/ 本文/ 方法/ TPC/ -/ WRUBiS/ 的/ 分析/ 误差/ 不/ 超过/ 14/ %/ ,/ 要/ 明显/ 好于/ Baseline/ 方法/ ,/ 而/ Baseline/ 的/ 分析/ 误差/ 大多数/ 在/ 20/ %/ 以上/ ./ 其中/ 在/ TPC/ -/ W/ 基准/ 的/ App/ 层/ ,/ 本文/ 方法/ 在/ 4/ 种/ 负载/ 下/ 的/ 平均误差/ 是/ 12/ %/ ,/ 而/ Baseline/ 方法/ 则/ 为/ 29/ %/ ./ 图/ 4/ (/ b/ )/ 是/ RUBiS/ 系统/ 分别/ 在/ 负载/ #/ 1/ 、/ 负载/ #/ 2/ 和/ 负载/ #/ 3/ 下/ (/ 见表/ 1/ )/ ,/ 两种/ 方法/ 的/ 精度/ 对比/ ,/ 可以/ 得到/ 与/ 图/ 4/ (/ a/ )/ 一致/ 的/ 对比/ 结果/ ./ 需要/ 注意/ 的/ 是/ ,/ 图/ 4/ 显示/ 每种/ 分析方法/ 在/ TPC/ -/ W/ 基准/ 和/ RUBiS/ 系统/ 的/ 分析/ 精度/ 存在/ 明显/ 差异/ ,/ 都/ 是/ 在/ RUBiS/ 系统/ 的/ 分析/ 精度/ 较/ 在/ TPC/ -/ W/ 基准/ 的/ 要/ 高/ ,/ 尤其/ 是/ Baseline/ 方法/ ./ 本文/ 方法/ 在/ RUBiS/ 系统/ 的/ 误差/ 平均/ 小于/ 8/ %/ ,/ 而/ 在/ TPC/ -/ W/ 基准/ 的/ 误差/ 平均/ 是/ 13/ %/ ;/ 而/ Baseline/ 方法/ 在/ RUBiS/ 系统/ 的/ 误差/ 平均/ 在/ 21/ %/ ,/ 在/ TPC/ -/ W/ 基准/ 的/ 误差/ 平均/ 在/ 28/ %/ ./ 这/ 主要/ 是因为/ ,/ 虽然/ RUBiS/ 系统/ 的/ 请求/ 类型/ (/ 22/ 类/ )/ 多于/ TPC/ -/ W/ 基准/ (/ 14/ 类/ 请求/ )/ ,/ 但是/ TPC/ -/ W/ 基准/ 不同/ 类型/ 的/ 请求/ 具有/ 更大/ 的/ 性能/ 差异/ ./ 因此/ 分析方法/ 在/ RUBiS/ 系统/ 的/ 误差/ 普遍/ 小于/ 在/ TPC/ -/ W/ 基准/ 的/ 误差/ ./ Page8/ 图/ 4/ 本文/ 方法/ 与/ Baseline/ 方法/ 在/ 请求/ 分层/ 服务/ 时间/ 分析/ 方面/ 的/ 精度/ 对比/ (/ 以/ 请求/ 分层/ 服务/ 时间/ 分析/ 结果/ 预测/ 应用/ 分层/ 性能/ 的/ 误差/ 珋/ et/ 作为/ 分析/ 精度/ 指标/ ./ 极轻/ 负载/ 情形/ (/ 表/ 1/ 中负载/ #/ 1/ 、/ 负载/ #/ 2/ 、/ 负载/ #/ 3/ 和/ 负载/ #/ 4/ )/ ,/ 因为/ 应用/ 性能/ 由/ 服务/ 时间/ 主导/ ,/ 所以/ 应用/ 分层/ 性能/ 近似于/ 应用/ 分层/ 服务/ 时间/ ./ 因此/ ,/ 珋/ et/ 就是/ 请求/ 分层/ 服务/ 时间/ 分析/ 结果/ 的/ 平均误差/ )/ 6.4/ ./ 2/ 请求/ 各项/ 资源/ 消耗/ 分析/ 图/ 5/ 和/ 图/ 6/ 分别/ 在/ 轻/ 负载/ 和/ 重/ 负载/ 情形/ 下/ ,/ 对比/ 了/ 本文/ 方法/ 与/ Baseline/ 方法/ 在/ 请求/ 资源/ 消耗/ 方面/ 的/ 分析/ 精度/ ./ 其中/ ,/ 图/ 5/ (/ a/ )/ 是/ TPC/ -/ W/ 基准/ 分别/ 在/ 负载/ #/ 5/ 、/ 负载/ #/ 6/ 、/ 负载/ #/ 7/ 和/ 负载/ #/ 8/ 负载/ 下/ (/ 见表/ 1/ )/ ,/ 两种/ 分析方法/ 的/ 精度/ 对比/ ./ 与/ 服务/ 时间/ 分析/ 的/ 精度/ 评价/ 指标/ 类似/ ,/ 这里/ 珋/ er/ 也/ 表示/ 分析/ 结果/ 的/ 平均误差/ ./ 可以/ 看到/ ,/ 本文/ 方法/ 在/ 各项/ 资源/ 消耗/ 的/ 分析/ 误差/ 平均/ 在/ 9/ %/ ,/ 而/ Baseline/ 方法/ 则/ 在/ 21/ %/ ./ 其中/ 在/ TPC/ -/ W/ 基准/ 的/ app/ 层/ ,/ 本文/ 方法/ 在/ 4/ 类/ 负载/ 下/ 的/ 平均误差/ 是/ 11/ %/ ,/ 而/ Baseline/ 方法/ 则/ 是/ 22/ %/ ./ 图/ 5/ (/ b/ )/ 、/ 图/ 6/ (/ a/ )/ 和/ 图/ 6/ (/ b/ )/ 分别/ 是/ RUBiS/ 系统/ 分别/ 在/ 负载/ #/ 5/ 、/ 负载/ #/ 6/ 和/ 负载/ #/ 7/ 下/ ,/ TPC/ -/ W/ 基准/ 分别/ 在/ 负载/ #/ 9/ 、/ 负载/ #/ 10/ 和/ 负载/ #/ 11/ 下/ 和/ RUBiS/ 系统/ 分别/ 在/ 负载/ #/ 5/ 、/ 负载/ #/ 6/ 和/ 负载/ #/ 7/ 下/ (/ 见表/ 1/ )/ ,/ 两种/ 分析方法/ 的/ 精度/ 对比/ ./ 它们/ 得到/ 与/ 图/ 5/ (/ a/ )/ 基本一致/ 的/ 对比/ 结果/ ./ 这里/ 与/ 前面/ 服务/ 时间/ 分析/ 的/ 精度/ 结果/ 类似/ ,/ 分析方法/ 分别/ 在/ 两种/ 应用/ 的/ 分析/ 精度/ 也/ 存在/ 差异/ ,/ 同图/ 5/ 轻/ 负载/ 情形/ 下/ ,/ 本文/ 方法/ 与/ Baseline/ 方法/ 在/ 资源/ 消耗/ 分析/ 方面/ 的/ 精度/ 对比/ (/ 以/ 请求/ 资源/ 消耗/ 分析/ 结果/ 预测/ 应用/ 资源/ 消耗/ 的/ 误差/ 珋/ er/ 作为/ 分析/ 精度/ 指标/ ,/ 珋/ er/ 即为/ 请求/ 资源/ 消耗/ 分析/ 结果/ 的/ 平均误差/ )/ 图/ 6/ 重/ 负载/ 情形/ 下/ ,/ 本文/ 方法/ 与/ Baseline/ 方法/ 在/ 资源/ 消耗/ 分析/ 方面/ 的/ 精度/ 对比/ (/ 以/ 请求/ 资源/ 消耗/ 分析/ 结果/ 预测/ 应用/ 资源/ 消耗/ 的/ 误差/ 珋/ er/ 作为/ 分析/ 精度/ 指标/ ,/ 珋/ er/ 即为/ 请求/ 资源/ 消耗/ 分析/ 结果/ 的/ 平均误差/ )/ Page9/ 样是/ 在/ RUBiS/ 系统/ 的/ 分析/ 精度/ 好于/ 在/ TPC/ -/ W/ 基准/ 的/ 分析/ 精度/ ./ 这/ 同样/ 是因为/ TPC/ -/ W/ 基准/ 不同/ 类型/ 请求/ 之间/ 较/ RUBiS/ 系统/ 有/ 更/ 大/ 的/ 差异/ ./ 值得注意/ 的/ 是/ ,/ 两个/ 方法/ 在/ Web/ 层/ CPU/ 消耗/ 分析/ 的/ 精度/ 差异/ 小于/ 其它/ 层/ CPU/ 消耗/ 分析/ 精度/ ./ 图/ 5/ (/ a/ )/ 中/ ,/ 本文/ 方法/ 在/ Web/ 层/ CPU/ 消耗/ 分析/ 误差/ 上/ 与/ Baseline/ 方法/ 的/ 差异/ 平均/ 在/ 4/ %/ ,/ 而/ 在/ App/ 层/ 和/ DB/ 层/ 的/ 差异/ 平均/ 是/ 11/ %/ 和/ 14/ %/ ./ 图/ 5/ (/ b/ )/ 、/ 图/ 6/ (/ a/ )/ 和/ 图/ 6/ (/ b/ )/ 类似/ ./ 这/ 主要/ 因为/ 不同/ 请求/ 在/ Web/ 层/ 的/ CPU/ 消耗/ 差异/ 相对/ 其它/ 层/ 较/ 小/ 的/ 原因/ ./ 另外/ ,/ 相比/ 于轻/ 负载/ 情形/ (/ 图/ 5/ )/ ,/ 在/ 重/ 负载/ 情况/ 下/ (/ 图/ 6/ )/ ,/ 两种/ 方法/ 的/ 分析/ 误差/ 都/ 表现/ 出/ 增加/ ,/ 本文/ 方法/ 的/ 分析/ 误差/ 平均/ 增加/ 了/ 4/ %/ ,/ 而/ Baseline/ 方法/ 则/ 增加/ 9/ %/ ./ 这/ 主要/ 是因为/ 在/ 重/ 负载/ 情况/ 下/ ,/ 系统/ 产生/ 了/ 更/ 多/ 的/ 额外/ 资源/ 开销/ ,/ 例如/ 操作系统/ 的/ 开销/ ./ 6.5/ Kprobe/ 工具/ 开销/ 图/ 7/ 是/ 考察/ Kprobe/ 工具/ 对/ 应用/ 性能/ 影响/ 的/ 实验/ 结果/ ./ 实验/ 在/ 所有/ 负载/ 下/ (/ 见表/ 1/ )/ ,/ 测量/ 了/ RUBiS/ 系统/ 和/ TPC/ -/ W/ 基准/ 分别/ 在/ Kprobe/ 工具/ 关闭/ 和/ 开启/ 状态/ 下/ 的/ 平均/ 响应/ 时间/ ./ 图/ 7/ 给出/ 了/ 这些/ 测量/ 结果/ 的/ 平均值/ ./ 从/ 结果/ 看/ ,/ Kprobe/ 机制/ 带给/ RUBiS/ 系统/ 和/ TPC/ -/ W/ 基准/ 的/ 额外/ 开销/ 较/ 小/ ,/ 分别/ 是/ 1.3/ %/ 和/ 2.7/ %/ ./ 因此/ ,/ Kprobe/ 对/ 请求/ 分层/ 性能/ 分析/ 精度/ 的/ 影响/ 也/ 在/ 可/ 接受/ 的/ 范围/ 内/ ./ 图/ 7Kprobe/ 工具/ 对/ 应用/ 平均/ 响应/ 时间/ 的/ 影响/ 7/ 相关/ 工作/ 目前/ 的/ 请求/ 级/ 行为/ 分析/ 工作/ ,/ 主要/ 依赖/ 请求/ 跟踪/ 技术/ 提取/ 请求/ 执行/ 路径/ 和/ 分析/ 请求/ 的/ 性能/ ./ 它们/ 主要/ 分为/ 两类/ 方法/ :/ 一类/ 方法/ 基于/ 复杂/ 监测/ 机制/ ,/ 面向/ 特定/ 系统分析/ 请求/ 行为/ ./ 这类/ 方法/ 的/ 典型/ 工作/ 是/ Barham/ 等/ 人/ 提出/ 的/ 面向/ Windows/ 环境/ 的/ 细粒度/ 请求/ 分析/ 和/ 负载/ 建模/ 方法/ [/ 6/ ]/ ./ 该/ 方法/ 利用/ Windows/ 系统/ 的/ 插/ 桩/ 框架/ 在/ 操作系统/ 级/ 插入/ 断点/ ,/ 在/ 运行/ 时/ 产生/ 事件/ 记录/ 各种/ 请求/ 活动/ ./ 并/ 设计/ 了/ 一套/ 事件处理/ 和/ 关联/ 的/ 工具/ ,/ 提取/ 请求/ 执行/ 路径/ 和/ 分析/ 请求/ 各项/ 资源/ 消耗/ 信息/ ./ Reynolds/ 等/ 人/ [/ 12/ ]/ 提出/ 一个/ 请求/ 路径分析/ 工具/ Pip/ ,/ 该/ 工具/ 要求/ 直接/ 在/ 应用/ 源代码/ 中/ 记录/ 应用/ 行为/ ./ Chanda/ 等/ 人/ [/ 13/ ]/ 的/ 方法/ 类似/ ,/ 也/ 要求/ 了解/ 请求/ 执行/ 上下文/ 和/ 应用/ 细节/ ./ Arkles/ 等/ 人/ [/ 14/ ]/ 的/ 方法/ 同样/ 需要/ 在/ 多层/ 服务/ 中/ 插入/ 代码/ ./ 虽然/ 此类/ 方法/ 能够/ 获得/ 详细/ 的/ 请求/ 行为/ 信息/ ,/ 但是/ 要求/ 了解/ 和/ 侵入/ 系统/ 内部/ ,/ 降低/ 了/ 方法/ 的/ 通用性/ ./ 本文/ 方法/ 基于/ 模型/ 分析/ 请求/ 行为/ ,/ 不/ 要求/ 了解/ 应用/ 细节/ 和/ 复杂/ 的/ 插/ 桩/ 框架/ ,/ 更/ 适用/ 于/ 包含/ 大量/ 第三方/ 软件/ 的/ 数据中心/ 环境/ ./ 另一类/ 方法/ 基于/ 系统/ 外部/ 观察/ 推断/ 请求/ 行为/ ./ Agarwala/ 等/ 人/ [/ 9/ ]/ 和/ Zhang/ 等/ 人/ [/ 7/ ]/ 分别/ 提出/ 通过/ 分析/ 网络/ 包/ 和/ 系统/ 级/ 进程/ 间通信/ 活动/ 发现/ 请求/ 因果/ 路径/ 关系/ ./ 进一步/ ,/ Shen/ 等/ 人/ [/ 8/ ]/ 提出/ 一种/ 启发式/ 的/ 请求/ 行为/ 预测/ 方法/ ./ 该/ 方法/ 挑选/ 能够/ 区分/ 请求/ 行为/ 的/ 底层/ 硬件/ 计数器/ 指标/ 来/ 辨识/ 请求/ ./ 当新/ 请求/ 被/ 识别/ 后/ ,/ 利用/ 该/ 请求/ 所属/ 类型/ 的/ 历史/ 信息/ 预测/ 该/ 请求/ 的/ 行为/ ./ 虽然/ 这/ 类/ 方法/ 较前/ 一种/ 方法/ 有/ 更好/ 的/ 通用性/ ,/ 但/ 与/ 第/ 6/ 节/ 实验/ 中/ 的/ 对比/ 方法/ Baseline/ 方法/ 一样/ ,/ 不/ 区分/ 请求/ 类型/ ,/ 并/ 忽略/ 并发/ 请求/ 对系统/ 行为/ 的/ 影响/ ./ 因此/ 这/ 类/ 方法/ 只能/ 获得/ 粗略/ 的/ 请求/ 性能/ 信息/ ,/ 例如/ 请求/ 延迟/ ,/ 同时/ 缺乏/ 请求/ 资源/ 消耗/ 分析/ ./ 而/ 本文/ 提出/ 一个/ 提高/ 请求/ 分析/ 精度/ 的/ 方法/ ,/ 即/ 通过/ 在/ 模型/ 中/ 考虑/ 并/ 量化/ 请求/ 行为/ 的/ 不确定性/ 部分/ 来/ 最大化/ 地/ 消除/ 分析/ 误差/ ./ 8/ 结论/ 和/ 未来/ 工作/ 本文/ 提出/ 一种/ 基于/ 模型/ 驱动/ 的/ 数据中心/ 应用/ 请求/ 级/ 行为/ 分析方法/ ./ 该/ 方法/ 不/ 需要/ 了解/ 应用/ 内部/ 信息/ 能够/ 分析/ 应用/ 每/ 类/ 请求/ 在/ 各层/ 的/ 服务/ 时间/ 和/ 各项/ 资源/ 消耗/ ./ 相比/ 于/ 已有/ 方法/ ,/ 本文/ 方法/ 更/ 适合/ 于/ 数据中心/ 应用/ ./ 我们/ 首先/ 利用/ 请求/ 分层/ 服务/ 时间/ 以及/ 各项/ 资源/ 效用/ 作为/ 模型/ 参数/ ,/ 建立/ 描述/ 应用/ 分层/ 聚合/ 性能/ 和/ 系统资源/ 效用/ 的/ 两个/ 模型/ ./ 模型/ 主要/ 量化/ 了/ 负载/ 模式/ 变化/ 对/ 应用/ 行为/ 造成/ 的/ 影响/ ./ 负载/ 模式/ 是/ 某/ 时刻/ 负载/ 中/ 请求/ 类型/ 混合/ 状况/ ./ 此外/ ,/ 应用/ 聚合/ 性能/ 模型/ 还/ 考虑/ 了/ 因/ 并发/ 请求/ 带来/ 的/ 应用/ 行为/ 不/ 确定/ ,/ 我们/ 通过/ 排队/ 理论/ 量化/ 此/ 不确定性/ ,/ 消除/ 了/ 潜在/ 的/ 分析/ 误差/ ./ 基于/ 模型/ ,/ 利用/ 最小/ 二乘/ 方法/ 和/ 多组/ 实测/ 数据/ 便/ 可/ 通过/ 模型/ 参数估计/ 计算/ 出/ 请求/ 分层/ 服务/ 时间/ 和/ 各项/ 资源/ 效用/ ./ 在/ 实测/ 指标/ 时/ ,/ 我们/ 利用/ 内核/ 探测/ 工具/ Kprobe/ 通过/ 记录/ 应用/ 模块/ 之间/ 的/ 通信/ 活动/ ,/ 并/ 设计/ 了/ 一个/ 测量/ 算法/ 用于/ 计算/ 应用/ 分层/ 聚合/ 性能/ ./ 实验/ 中/ ,/ 我们/ 使用/ TPC/ -/ W/ 基准/ 和/ RUBiS/ 系/ Page10/ 统/ ,/ 在/ 一个/ 机群系统/ 中/ 评价/ 了/ 本文/ 方法/ ./ 在/ 实验/ 1/ 中/ ,/ 使用/ 多个/ 合成/ 负载/ 模式/ 供/ 模型/ 参数估计/ 方法/ 分析/ 请求/ 分层/ 服务/ 时间/ 和/ 各项/ 资源/ 效用/ ./ 实验/ 2/ 基于/ 实验/ 1/ 的/ 分析/ 结果/ ,/ 预测/ 测试/ 应用/ 在/ 标准/ 负载/ 下/ 的/ 性能/ 和/ 资源/ 消耗/ ,/ 通过/ 预测/ 的/ 误差/ 来/ 评价/ 分析方法/ 精度/ ./ 并且/ 将/ 实验/ 结果/ 与/ Baseline/ 方法/ 做/ 了/ 比较/ ./ Baseline/ 方法/ 没有/ 考虑/ 负载/ 模式/ 和/ 并发/ 请求/ 影响/ ,/ 与/ 目前/ 面向/ 黑盒/ 系统/ 的/ 请求/ 分析方法/ 类似/ ,/ 具有/ 代表性/ ./ 实验/ 结果表明/ ,/ 相比/ Baseline/ 方法/ ,/ 我们/ 的/ 方法/ 具有/ 更/ 高/ 的/ 分析/ 精度/ ./ 也/ 同时/ 说明/ 负载/ 模式/ 和/ 并发/ 请求/ 影响/ 在/ 基于/ 模型/ 驱动/ 的/ 请求/ 分析方法/ 中是/ 不可/ 忽略/ 的/ 不/ 确定/ 因素/ ./ 实验/ 3/ 检验/ 了/ Kprobe/ 工具/ 对/ 应用/ 性能/ 的/ 影响/ ./ 实验/ 结果表明/ Kprobe/ 工具/ 对/ 应用/ 平均/ 响应/ 时间/ 的/ 影响/ 较/ 小/ ./ 因此/ ,/ 它/ 的/ 使用/ 对/ 请求/ 分析/ 精度/ 的/ 影响/ 也/ 在/ 可/ 接受/ 的/ 范围/ 内/ ./ 本文/ 方法/ 基于/ 同构/ 系统/ ,/ 我们/ 假设/ 应用/ 部署/ 在/ 相同/ 服务器/ 上/ ,/ 或者/ 很少/ 在/ 异构/ 服务器之间/ 迁移/ ./ 实际/ 中/ ,/ 数据中心/ 通常/ 由/ 异构/ 服务器/ 组成/ ./ 因此/ ,/ 在/ 不同/ 的/ 服务器/ 上/ 应用/ 具有/ 不同/ 的/ 行为/ ./ 在/ 未来/ 工作/ 中/ ,/ 我们/ 将/ 考虑/ 这个/ 因素/ ,/ 并/ 增强/ 本文/ 方法/ 在/ 异构/ 数据中心/ 环境/ 的/ 适用性/ ./ 致谢/ 诚挚/ 感谢/ 所有/ 对/ 本文/ 提出/ 了/ 修改/ 建议/ 和/ 意见/ 的/ 审稿人/ 和/ 编辑/ !/ 

