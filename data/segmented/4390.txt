Page1/ 一种/ 面向/ 有环/ 兴趣/ 路径/ 的/ 过程/ 内/ 剖析/ 方法/ 王璐璐/ 李必信/ (/ 东南大学/ 计算机科学/ 与/ 工程学院/ 南京/ 211189/ )/ (/ 东南大学/ 软件工程/ 研究所/ 南京/ 211189/ )/ 摘要/ 路径/ 剖析/ 技术/ 用于/ 获取/ 和/ 分析程序/ 中/ 各条/ 路径/ 的/ 执行/ 次数/ ./ 路径/ 剖析/ 采用/ 在/ 待/ 剖析/ 程序/ 中/ 插装/ 探针/ 的/ 方式/ 以/ 跟踪/ 执行/ ,/ 并/ 使用/ 对/ 路径/ 进行/ 编码/ 的/ 方式/ 以/ 高效/ 地/ 获取/ 剖析/ 结果/ ./ 选择性/ 剖析/ 是/ 针对/ 用户/ 感兴趣/ 的/ 一部分/ 路径/ ,/ 在/ 非/ 选择性/ 剖析/ 技术/ 的/ 基础/ 上/ 进行/ 优化/ ,/ 以/ 尽可能/ 低/ 的/ 耗费/ 来/ 完成/ 剖析/ ./ 现有/ 的/ 选择性/ 剖析/ 技术/ 采用/ 的/ 优化/ 措施/ 局限于/ 减少/ 探针/ 数目/ 和/ 压缩/ 路径/ 编码/ 空间/ ,/ 而且/ 其/ 允许/ 的/ 用户/ 兴趣/ 路径/ 局限于/ 无环/ 路径/ ./ 文中/ 提出/ 了/ 一种/ 新/ 的/ 选择性/ 剖析/ 方法/ PSP/ (/ ProfilingSelectedPaths/ )/ ,/ 可以/ 精确/ 的/ 剖析/ 带有/ 循环/ 的/ 兴趣/ 路径/ ,/ 并/ 使用/ 了/ 在/ 执行/ 过程/ 中/ 对/ 非/ 兴趣/ 路径/ 进行/ 检测/ 和/ 提前/ 终止/ 的/ 技术/ 来/ 降低/ 耗费/ ./ 理论/ 分析/ 和/ 实验/ 评估/ 表明/ PSP/ 方法/ 能够/ 精确/ 地/ 剖析/ 兴趣/ 路径/ ,/ 并/ 使用/ 兴趣/ 路径/ 来/ 提升/ 剖析/ 效率/ ./ 关键词/ 路径/ 剖析/ ;/ 兴趣/ 路径/ ;/ 动态分析/ ;/ 软件测试/ 1/ 引言/ 个/ 待/ 剖析/ 程序/ ,/ 当该/ 程序/ 被/ 多次/ 执行/ 之后/ ,/ 给出/ 这些/ 执行/ 的/ 各条/ 路径/ 及/ 每条/ 路径/ 的/ 执行/ 频率/ ./ 路径/ 剖析/ 与/ 边/ 的/ 剖析/ (/ edgeprofiling/ )/ 和/ 基本块/ 剖析/ (/ block/ 路径/ 剖析/ (/ pathprofiling/ )/ 的/ 目标/ 在于/ :/ 给定/ 一/ profiling/ )/ 相比/ ,/ 能够/ 提供/ 对/ 程序/ 动态/ 行为/ 更为/ 精确/ Page2/ 的/ 描述/ ./ 这种/ 描述/ 的/ 信息/ 能够/ 广泛/ 地/ 应用/ 于/ 多个/ 领域/ ,/ 如/ 调试/ 、/ 测试/ 和/ 程序/ 理解/ [/ 1/ -/ 2/ ]/ 、/ 路径/ 敏感/ 代码/ 的/ 优化/ [/ 3/ -/ 7/ ]/ 、/ 指令/ 调度/ [/ 8/ -/ 11/ ]/ 、/ 代码/ 布局/ 优化/ [/ 12/ ]/ 以及/ 静态/ 分支/ 预测/ 的/ 改进/ [/ 13/ -/ 14/ ]/ ./ 为了/ 获知/ 执行/ 路径/ 及其/ 频率/ ,/ 剖析/ 方法/ 在/ 目标程序/ 中/ 插装/ 探针/ (/ probe/ )/ ,/ 在/ 程序/ 的/ 执行/ 过程/ 中/ 收集/ 执行/ 信息/ ./ 而且/ 由于/ 侧重于/ 路径/ 的/ 频率/ (/ 少数/ 路径/ 可能/ 执行/ 很/ 多次/ )/ ,/ 从/ 效率/ 的/ 角度/ 出发/ ,/ 需要/ 对/ 路径/ 进行/ 编码/ (/ pathid/ )/ ,/ 使用/ 整数/ 来/ 表示/ 路径/ ,/ 以便/ 高效/ 的/ 进行/ 路径/ 比较/ 和/ 执行/ 次数/ 统计/ ./ 这样/ 路径/ 剖析/ 技术/ 在/ 待/ 剖析/ 程序/ 的/ 执行/ 中/ 通过/ 探针/ 变量/ 的/ 运算/ 来/ 计算/ 路径/ 编码/ ,/ 并/ 在/ 每次/ 执行/ 完毕/ 后/ ,/ 使用/ 探针/ 变量/ 的/ 值来/ 唯一/ 地/ 确定/ 所/ 执行/ 的/ 路径/ 编码/ ./ 剖析/ 结果/ 的/ 精确性/ 要求/ 剖析/ 方法/ 对/ 每条/ 可/ 剖析/ 路径/ 的/ 编码/ 是/ 唯一/ 的/ ./ 现有/ 的/ 剖析/ 技术/ 可以/ 分为/ 两类/ :/ 过程/ 内/ 剖析/ 和/ 过程/ 间/ 剖析/ ,/ 分别/ 应用/ 在/ 单/ 过程/ 和/ 多/ 过程/ 的/ 场景/ 下/ ./ 过程/ 内/ 剖析/ 技术/ 可以/ 进一步/ 分为/ 选择性/ 剖析/ 和/ 非/ 选择性/ 剖析/ ,/ 其中/ 选择性/ 剖析/ 使用/ 较/ 低/ 的/ 耗费/ 获取/ 兴趣/ 路径/ 的/ 执行/ 频率/ ,/ 而/ 非/ 选择性/ 剖析/ 处理/ 所有/ 的/ 可/ 剖析/ 路径/ ./ 在/ 实际/ 应用/ 中/ ,/ 剖析/ 结果/ 的/ 使用者/ 往往/ 仅/ 对/ 部分/ 的/ 路径/ 频率/ 感兴趣/ [/ 15/ ]/ ,/ 例如/ 在/ 程序调试/ 中/ ,/ 编程人员/ 可能/ 需要/ 比/ 对/ 特定/ 的/ 执行/ ;/ 软件测试/ 中/ ,/ 测试者/ 可能/ 需要/ 统计/ 测试/ 用/ 在/ 特定/ 路径/ 上/ 的/ 覆盖/ ;/ 程序/ 理解/ 中/ ,/ 编程人员/ 可能/ 更/ 侧重于/ 某些/ 关键/ 路径/ 等/ ./ 注意/ 到/ 在/ 这些/ 应用/ 中/ ,/ 用户/ 感兴趣/ 的/ 路径/ 不/ 局限于/ 无环/ 路径/ ./ 针对/ 这些/ 情况/ ,/ 选择性/ 剖析/ 方法/ 在/ 剖析/ 之前/ ,/ 接受/ 一个/ 基于/ 用户/ 需求/ 提供/ 的/ 兴趣/ 路径/ 集合/ PI/ (/ PathsofInterest/ )/ ,/ 相应/ 地/ ,/ 其他/ 路径/ 组成/ 集合/ PN/ (/ PathsNotofinterest/ )/ ./ PI/ 路径/ 的/ 执行/ 频率/ 是/ 选择性/ 剖析/ 的/ 目标/ ./ 现有/ 的/ 选择性/ 剖析/ 方法/ 存在/ 两个/ 关键问题/ :/ 如何/ 从/ 路径/ 的/ 选择性/ 剖析/ (/ 即/ 忽略/ PN/ 路径/ 的/ 剖析/ )/ 中/ 获益/ ;/ 如何/ 处理/ PI/ 中/ 的/ 循环/ 路径/ (/ 即/ 保证/ 有环/ 情况/ 下/ 每条/ 路径/ 编码/ 的/ 唯一性/ )/ ./ 前者/ ,/ 现有/ 的/ 方法/ 主要/ 采用/ 两种/ 方式/ 来/ 提高/ 剖析/ 效率/ :/ 减少/ 探针/ 数目/ [/ 16/ ]/ 和/ 压缩/ 路径/ 编码/ 空间/ [/ 15/ ]/ 以/ 优化/ 存储/ 效率/ ;/ 后者/ ,/ 现有/ 方法/ 仅/ 接受/ 无环/ 路径/ 作为/ 兴趣/ 路径/ ./ 本文/ 针对/ 这/ 两个/ 问题/ 分别/ 提出/ 了/ 在/ 执行/ 过程/ 中/ 对/ 非/ 兴趣/ 路径/ 进行/ 检测/ 和/ 提前/ 终止/ 的/ 技术/ 来/ 降低/ 耗费/ ;/ 基于/ 一种/ 能够/ 保证/ 有环/ 路径/ 唯一/ 编码/ 的/ 非/ 选择性/ 剖析/ 方法/ PAP/ (/ ProfilingAllPaths/ )/ [/ 17/ ]/ 来/ 设计/ 本文/ 中/ 的/ 选择性/ 剖析/ 方法/ ./ EPP/ (/ EfficientPathProfiling/ )/ [/ 18/ ]/ 是/ 一种/ 过程/ 内非/ 选择性/ 剖析/ 方法/ ,/ 能够/ 保证/ 无环/ CFG/ (/ ControlFlowGraph/ )/ 上/ 每条/ 路径/ 的/ 精确/ 剖析/ ./ 这种/ 方法/ 首先/ 在/ CFG/ 无环/ 路径/ 之上/ ;/ 执行/ ,/ 导致/ 不必要/ 的/ 耗费/ ;/ 的/ 边上/ 分布/ 权值/ ,/ 无环/ 路径/ 的/ 编码/ 等同于/ 该/ 路径/ 上/ 所有/ 边/ 的/ 权值/ 之/ 和/ ./ 基于/ EPP/ ,/ 研究/ 人员/ 提出/ 了/ 两种/ 选择性/ 剖析/ 方法/ ,/ SPP/ (/ SelectivePathProfiling/ [/ 16/ ]/ )/ 和/ PrePP/ (/ PreferentialPathProfiling/ )/ [/ 15/ ]/ ./ 二者/ 的/ 区别/ 在于/ ,/ SPP/ 对于/ 兴趣/ 路径/ 中/ 的/ 边/ 分配/ 较大/ 的/ 权值/ ,/ 以/ 达到/ 降低/ 非/ 兴趣/ 路径/ 编码/ 的/ 目的/ ;/ PrePP/ 对于/ 兴趣/ 路径/ 中/ 的/ 边/ 分配/ 较/ 低/ 的/ 权值/ ,/ 以/ 压缩/ 兴趣/ 路径/ 的/ 编码/ ,/ 能够/ 使用/ 数组/ 而/ 非/ 链表/ 进行/ 存储/ ,/ 以/ 提升/ 效率/ ./ 但是/ 这/ 两种/ 方法/ 存在/ 如下/ 问题/ :/ (/ 1/ )/ 不能/ 处理/ 有环/ 路径/ ,/ 故/ 用户/ 兴趣/ 被/ 局限于/ (/ 2/ )/ 缺乏/ PN/ 的/ 检测/ ,/ 故/ 不能/ 避免/ PN/ 路径/ 的/ (/ 3/ )/ 不能/ 保证/ PI/ 路径/ 编码/ 在/ 所有/ 路径/ 编码/ 中/ 的/ 唯一性/ ,/ 故/ 可能/ 导致/ 不/ 精确/ 的/ 剖析/ 结果/ ./ 为了/ 达到/ 有环/ 路径/ 的/ 精确/ 选择性/ 剖析/ ,/ 本文/ 提出/ 了/ 一种/ 新/ 的/ 方法/ PSP/ (/ ProfilingSelectedPaths/ )/ ,/ 如果/ 在/ 执行/ 过程/ 中/ 发现/ 当前/ 执行/ 的/ 路径/ 属于/ PN/ ,/ 则/ 将/ 其/ 提前结束/ ,/ 以/ 节约/ 耗费/ ./ 在/ 如下/ 的/ 章节/ 中/ ,/ 我们/ 按照/ 如下/ 的/ 顺序/ 对/ PSP/ 方法/ 进行/ 说明/ :/ 首先/ ,/ 把/ SPP/ 改进/ 为/ ESPP/ (/ EnhancedSPP/ )/ ,/ 可以/ 保证/ 无环/ 情况/ 下/ PI/ 路径/ 的/ 唯一/ 编码/ ,/ 达到/ 无环/ CFG/ 上/ 的/ 精确/ 选择性/ 剖析/ ./ 其次/ ,/ 提出/ 3/ 种/ 执行/ 中/ 的/ PN/ 路径/ 检测/ 技术/ ,/ 能够/ 在/ 程序执行/ 中/ 检测/ 出/ 大量/ 的/ PN/ 路径/ ,/ 以/ 提前结束/ 执行/ ,/ 节约/ 耗费/ ./ 基于/ 这/ 3/ 种/ 检测/ 技术/ 及其/ 组合/ ,/ 给出/ 有环/ 情况/ 下/ 的/ 过程/ 内/ 精确/ 剖析/ 方法/ PSP/ 及其/ 4/ 种/ 实现/ 方式/ (/ PSP0/ ~/ PSP3/ )/ ,/ 这/ 4/ 种/ 方式/ 均/ 可/ 对/ 有/ 环/ 路径/ 进行/ 选择性/ 剖析/ ,/ 并/ 具有/ 不同/ 的/ 成本/ 效益/ ./ 最后/ ,/ 从/ 理论/ 和/ 实验/ 两个/ 方面/ 对/ PSP/ 的/ 4/ 种/ 实现/ 方式/ 进行/ 对比/ ,/ 找出/ 优缺点/ 和/ 适用/ 对象/ ,/ 并/ 通过/ 与/ 相关/ 工作/ 的/ 比较/ 来/ 检验/ 其/ 有效性/ ./ 本文/ 第/ 2/ 节/ 介绍/ 预备/ 知识/ ;/ 第/ 3/ 节/ 首先/ 讨论/ 如何/ 将/ SPP/ 改进/ 为/ ESPP/ ,/ 并/ 将/ 之/ 应用/ 与/ 无/ 环子/ 图/ 的/ 选择性/ 剖析/ 中/ ,/ 然后/ 论述/ 了/ 3/ 种/ 路径/ 检测/ 技术/ 和/ 4/ 种/ PSP/ 实现/ 方式/ ;/ 第/ 4/ 节/ 给出/ 了/ 实验/ 评估/ 和/ 比较/ ;/ 第/ 5/ 节/ 总结/ 了/ 相关/ 工作/ ./ 而/ 第/ 6/ 节是/ 总结/ 与/ 展望/ ./ 2/ 预备/ 知识/ 本/ 节/ 首先/ 定义/ 了/ 一些/ 基本/ 术语/ (/ 部分/ 术语/ 已/ 在/ 相关/ 文献/ 中/ 定义/ )/ ,/ 然后/ 介绍/ 了/ EPP/ 、/ SPP/ 和/ PrePP/ 的/ 基本/ 思想/ ,/ 以便/ 于/ 理解/ PSP/ 的/ 思想/ ,/ 最后/ 介绍/ 了/ PAP/ 及其/ 在/ 无/ 环子/ 图上/ 的/ 应用/ ,/ 基于/ 此/ ,/ PSP/ 可以/ Page3/ 处理/ 有环/ 的/ 兴趣/ 路径/ ./ 2.1/ 基本/ 术语/ 非/ 循环/ 路径/ 剖析/ 算法/ 主要/ 应用/ 于/ DAG/ (/ DirectedAcyclicGraph/ )/ ,/ 本文/ 主要/ 关注/ 于/ 有/ 环/ CFG/ ,/ 故/ 某些/ 已有/ 的/ 术语/ 需要/ 修改/ 定义/ ,/ 并/ 需要/ 一些/ 新/ 的/ 术语/ ./ PI/ (/ PathsofInterest/ )/ :/ 表示/ 兴趣/ 路径/ 集合/ [/ 16/ ]/ ./ EI/ (/ EdgesofInterest/ )/ :/ 表示/ 兴趣/ 边/ 集合/ ,/ 即/ PI/ 路径/ 所/ 包含/ 的/ 边/ [/ 16/ ]/ ./ NI/ (/ NodesofInterest/ )/ :/ 表示/ PI/ 路径/ 所/ 包含/ 的/ 节点/ (/ 或/ 基本块/ )/ 集合/ ./ PN/ (/ PathsNotofinterest/ )/ :/ 表示/ 所有/ 不/ 包含/ 于/ PI/ 集合/ 的/ 路径/ ./ NN/ (/ NodesNotofinterest/ )/ :/ 表示/ 非/ 兴趣/ 节点/ 集合/ ,/ 即/ 所有/ 不/ 包含/ 于/ NI/ 的/ 节点/ ./ BE/ (/ BoundaryEdges/ )/ :/ 表示/ 边界/ 边/ 集合/ ,/ 其中/ 的/ 边/ 不/ 属于/ EI/ 且源/ 节点/ 属于/ NI/ ./ NE/ (/ iNvalidEdges/ )/ :/ 表示/ 无效/ 边/ 集合/ ,/ 其中/ 的/ 边/ 不/ 属于/ EI/ 且源/ 节点/ 属于/ NN/ ./ Pathid/ :/ 表示/ 路径/ 编码/ ,/ 即/ 路径/ 末端/ 的/ 探针/ 变量值/ (/ 该/ 定义/ 泛化/ 了/ 文献/ [/ 15/ ]/ 中/ 使用/ 边权值/ 之/ 和/ 对/ 路径/ 编码/ 的/ 定义/ )/ ./ LocalPathid/ :/ 表示/ 局部/ (/ 路径/ )/ 编码/ ./ 在/ 程序/ 的/ 某个/ 子图/ 中/ 的/ 路径/ 编码/ ./ TempPathid/ :/ 表示/ 临时/ (/ 路径/ )/ 编码/ ./ 在/ 程序执行/ 过程/ 中/ 的/ 某/ 一/ 位置/ ,/ 已/ 执行/ 的/ 路径/ 部分/ 的/ 编码/ ./ 2.2/ EPPEPP/ [/ 18/ ]/ 使用/ 一个/ 整型/ 变量/ (/ 假设/ 为/ r/ )/ 来/ 进行/ 探针/ 运算/ 和/ 路径/ 编码/ ./ 在/ EPP/ 中/ ,/ DAG/ 中/ 的/ 每/ 条边/ 分配/ 一个/ 整数/ (/ 可能/ 为/ 正/ 、/ 负/ 或者/ 零/ )/ ,/ 当/ 程序运行/ 中/ 执行/ 了/ 非/ 零权值/ 的/ 边/ 时/ ,/ 依据/ 该/ 权值/ 探针/ 变量/ 相应/ 地/ 增减/ ,/ 每条/ 非/ 循环/ 路径/ 的/ 编码/ 就是/ 该/ 路径/ 中/ 所有/ 边/ 的/ 权值/ 之/ 和/ ./ EPP/ 的/ 权值/ 分配/ 算法/ (/ Ball/ -/ Larus/ 算法/ ,/ 简称/ BL/ 算法/ )/ 可以/ 保证/ 每条/ 非/ 循环/ 路径/ 具有/ 唯一/ 的/ 整数/ 编码/ ,/ 如/ 算法/ 1/ 所示/ ./ 算法/ 1/ ./ BL/ 算法/ ./ 输入/ :/ G/ 待/ 剖析/ DAG/ 输出/ :/ Val/ (/ e/ )/ 图/ G/ 中/ 每/ 条边/ e/ 的/ 权值/ FOREACHvertexvinreversetopologicalorderDOIFvisaleafvertexTHENENDELSEENDEPP/ 在/ DAG/ 的/ 边上/ 所/ 插装/ 的/ 探针/ 使用/ 的/ 形式/ 为/ r/ =/ r/ +/ i/ ,/ 其中/ i/ 即为/ 相应/ 边/ 的/ 权值/ ./ 算法/ 1/ 的/ 主要/ 思想/ 在于/ ,/ 对于/ 一个/ 多出/ 边/ 的/ 节点/ ,/ 调整/ 各条/ 出/ 边上/ 的/ 权值/ 保证/ 执行/ 每条/ 出边/ 的/ 路径/ 的/ pathid/ 属于/ 不同/ 的/ 整数/ 区间/ ./ 图/ 1/ (/ a/ )/ 显示/ 了/ EPP/ 计算/ 权值/ 的/ 方式/ (/ Na/ 表示/ 节点/ a/ 的/ NumPaths/ 值/ )/ ./ 对于/ 节点/ a/ ,/ 其/ NumPaths/ 值/ 通过/ 累加/ 各个/ 子/ 节点/ 的/ NumPaths/ 值/ 进行/ 计算/ ,/ 最终/ 的/ 结果/ 等同于/ 其/ 所有/ 子/ 节点/ 的/ NumPaths/ 值/ 之/ 和/ ,/ 即/ 经过/ a/ 的/ 所有/ 路径/ 总数/ ./ 对于/ a/ 的/ 每条/ 出边/ ,/ 该边/ 的/ 权值/ 等同于/ 当前/ 的/ Na/ ,/ 而后/ 将/ 该/ 出边/ 所/ 指向/ 节点/ 的/ NumPaths/ 值/ 加入/ Na/ ./ 按照/ 这种/ 方式/ 分配/ 的/ 权值/ 即可/ 保证/ 每条/ 路径/ 对应/ 不同/ 的/ pathid/ ./ 由于/ BL/ 算法/ 需要/ 在/ DAG/ 上/ 执行/ ,/ 故/ 在/ 处理/ 有环/ CFG/ 时/ 需要/ 先/ 将/ 其/ 转化/ 为/ DAG/ ./ EPP/ 采用/ 的/ 处理/ 方式/ 是/ :/ 对于/ 每条/ 回边/ ,/ 使用/ 两条/ 虚拟/ 的/ 边/ (/ 一条/ 从/ CFG/ 入口/ 指向/ 回边/ 的/ 目标/ 节点/ ,/ 一条/ 从/ 回边/ 的/ 源/ 节点/ 指向/ CFG/ 出口/ )/ 来/ 代替/ ,/ 如图/ 2/ 中/ (/ a/ )/ 和/ (/ b/ )/ 所示/ ./ 其中/ 的/ 回边/ GD/ 由边/ AD/ 和/ GH/ 代替/ ./ 这样/ 转化/ 后/ 的/ CFG/ 中/ 不再/ 含有/ 循环/ ,/ 相应/ 地/ ,/ 不再/ 剖析/ 执行/ 过/ 回边/ 的/ 路径/ ./ Page42/ ./ 3SPPSPP/ 将/ EPP/ 扩展/ 到/ 选择性/ 剖析/ 之中/ ,/ 利用/ 兴趣/ 路径/ 来/ 降低/ 剖析/ 的/ 耗费/ ./ 针对/ 待/ 剖析/ 的/ DAG/ 和/ 其/ 上/ 的/ 兴趣/ 路径/ 集合/ ,/ SPP/ 按照/ 如下/ 步骤/ 进行/ :/ 1/ ./ 对/ DAG/ 中/ 的/ 边/ 分配权/ 值/ ,/ SPP/ 与/ EPP/ 的/ 区别/ 在于/ ,/ 在/ 处理/ 某个/ 节点/ 的/ 多条/ 出边/ 时/ ,/ 各条/ 边/ 按照/ 先/ 计算/ 非/ EI/ 边/ 、/ 后/ 计算/ EI/ 边/ 的/ 顺序/ 进行/ ,/ 以/ 保证/ EI/ 边/ 的/ 权值/ 较大/ ,/ 进而/ 保证/ PI/ 路径/ 的/ pathid/ 较大/ (/ 如图/ 3/ (/ a/ )/ 所示/ ,/ 粗线/ 表示/ EI/ 边/ )/ ;/ 2/ ./ 对/ 单入/ 边/ 节点/ ,/ 其入/ 边上/ 的/ 非/ 零权值/ 转移/ 到/ 其/ 所有/ 的/ 出/ 边上/ ,/ 这样/ 在/ 保证/ 每条/ 路径/ pathid/ 不变/ 的/ 情况/ 下/ ,/ EI/ 边上/ 的/ 非/ 零权值/ 数目/ 尽可能/ 的/ 少/ (/ 如图/ 3/ (/ b/ )/ 所示/ ,/ 图/ 8/ (/ a/ )/ 给出/ 了/ 更/ 一般/ 的/ 表示/ )/ ;/ 3/ ./ 删除/ 非/ EI/ 边上/ 的/ 权值/ ,/ 如图/ 3/ (/ c/ )/ 所示/ ./ 这样/ 在/ 保证/ PI/ 路径/ 的/ pathid/ 不变/ 的/ 情况/ 下/ ,/ 减小/ PN/ 路径/ 的/ pathid/ 并/ 减少/ 探针/ 数目/ ./ 由于/ 步骤/ 1/ 使得/ PI/ 路径/ 的/ pathid/ 较大/ ,/ 故/ 此项/ 操作/ 之后/ ,/ PN/ 路径/ 的/ pathid/ 减小/ ,/ 而/ 不会/ 影响/ PI/ 路径/ 编码/ 的/ 唯一性/ (/ PN/ 路径/ 的/ 编码/ 可能/ 不再/ 唯一/ )/ ./ 实际上/ ,/ 这种/ 方法/ 的/ 正确性/ 存在/ 问题/ ,/ 因为/ 路径/ 的/ 编码/ 是/ 由/ 边/ 的/ 权值/ 之/ 和/ 所/ 决定/ ,/ 而/ PN/ 路径/ 也/ 可能/ 包含/ 某些/ 权值/ 较大/ 的/ EI/ 边/ ,/ 步骤/ 1/ 中仅/ 由/ EI/ 边/ 具有/ 较大/ 的/ 权值/ 并/ 不能/ 保证/ PI/ 路径/ 具有/ 较大/ 的/ pathid/ ./ 例如/ 图/ 3/ (/ c/ )/ 所示/ ,/ 假设/ 图中/ 有/ 两条/ 兴趣/ 路径/ ADH/ 和/ ABDEGH/ ,/ 在/ 删除/ 边/ FG/ 上/ 的/ 权值/ 之/ 和/ ,/ 非/ 兴趣/ 路径/ ADEFGH/ 与/ 兴趣/ 路径/ ADH/ 的/ pathid/ 都/ 等于/ 6/ ,/ 这样/ 的/ 编码/ 冲突/ 就/ 会/ 导致/ 不/ 精确/ 的/ 剖析/ 结果/ ./ 为了/ 修正/ 该/ 问题/ ,/ 本文/ 在/ SPP/ 步骤/ 3/ 的/ 删除/ 探针/ 之前/ 添加/ 了/ PI/ 路径/ pathid/ 唯一性/ 的/ 检查/ ,/ 避免/ 了/ 对/ 某些/ 必要/ 探针/ 的/ 删除/ ,/ 达到/ 了/ DAG/ 上/ 精确/ 的/ 选择性/ 剖析/ ./ 详见/ 3.1/ 节/ ./ 2.4/ PrePP/ 在/ 路径/ 剖析/ 中/ ,/ 由于/ 静态/ 路径/ 总数/ 随着/ 路径/ 长度/ 呈/ 指数/ 增长/ ,/ 路径/ 编码/ 往往/ 较大/ ,/ 如果/ 超过/ 数组/ 下标/ 长度/ (/ 65535/ )/ 的/ 限制/ ,/ 则/ 需要/ 使用/ 链表/ 代替/ 数组/ 进行/ 路径/ 频率/ 的/ 存储/ ./ 由于/ 链表/ 的/ 存储/ 效率/ 远/ 低于/ 数组/ 的/ 存储/ 效率/ ,/ 这种/ 代替/ 会/ 明显降低/ 剖析/ 效率/ ./ 在/ 选择性/ 剖析/ 中/ ,/ 与/ 大量/ 的/ 静态/ 路径/ 相比/ ,/ 用户/ 的/ 兴趣/ 路径/ 可能/ 并不多/ ,/ 故而/ 若能/ 将/ 兴趣/ 路径/ 的/ 编码/ 压缩/ 到/ 数组/ 下标/ 长度/ 限制/ 之内/ ,/ 就/ 可以/ 避免/ 使用/ 链表/ 带来/ 的/ 效率/ 降低/ ./ 基于/ 此/ ,/ PrePP/ [/ 15/ ]/ 的/ 目标/ 就/ 在于/ 为/ PI/ 路径/ 提供/ 较为/ 紧凑/ 的/ 编码/ ,/ 该/ 方法/ 同时/ 保证/ PI/ 路径/ 的/ pathid/ 互不/ 冲突/ ,/ 但是/ PI/ 路径/ 和/ PN/ 路径/ 的/ 编码/ 可能/ 冲突/ ,/ 这/ 就/ 可能/ 引起/ 不/ 精确/ 的/ 剖析/ 结果/ ./ PrePP/ 算法/ 的/ 思想/ 在于/ ,/ 使用/ NumPaths/ 计算/ 边/ 的/ 权值/ 时/ ,/ NumPaths/ 仅/ 统计/ 经由/ 每条/ 出边/ 的/ 兴趣/ 路径/ 总数/ 而/ 非/ 静态/ 路径/ 总数/ ,/ 这样/ 边/ 的/ 权值/ 很小/ ,/ 故而/ 能够/ 压缩/ 路径/ 编码/ 空间/ ,/ 提高/ 存储/ 效率/ ./ 2.5/ PAPEPP/ 剖析/ 对象/ 局限于/ 无环/ 路径/ ,/ 但是/ 有环/ 路径/ 广泛/ 存在/ 于/ 实际/ 应用/ 中/ ./ 为了/ 突破/ 这一/ 限制/ ,/ 研究/ 人员/ 主要/ 采用/ 两种/ 方式/ :/ 其一/ 是/ 沿用/ 使用/ 加法/ 进行/ 探针/ 变量/ 运算/ 的/ 方式/ ,/ 而/ 通过/ 增加/ 逻辑/ 控制变量/ 来/ 记录/ 回边/ 的/ 执行/ 情况/ ,/ 并且/ 在/ 不同/ 的/ 执行/ 情况/ 下/ ,/ 对/ 每/ 条边/ 采用/ 不同/ 的/ 权值/ ,/ 以/ 达到/ 在/ 一定/ 的/ 循环体/ 执行/ 次数/ 之内/ 所有/ 路径/ 的/ 唯一/ 编码/ [/ 2/ ,/ 19/ ]/ ;/ 其二/ 是/ 使用/ 加法/ 和/ 乘法/ 相结合/ 的/ 方式/ 进行/ 探针/ 变量/ 的/ 运算/ [/ 17/ ,/ 20/ ]/ ./ 对于/ 前/ 一种/ 方式/ ,/ 逻辑/ 控制/ 随着/ CFG/ 循环/ 结构/ 的/ 复杂化/ 和/ 循环体/ 执行/ 次数/ 的/ 增加/ 将会/ 变得/ 非常复杂/ ,/ 而/ 难以/ 应用/ ;/ 对于/ 后/ 一种/ 方式/ ,/ 可以/ 处理/ 复杂/ 的/ 循环/ 和/ 回边/ 多次/ 执行/ 的/ 路径/ ,/ 但是/ 难以/ 保证/ 静态/ 路径/ 编码/ 的/ 连续性/ (/ 即/ 编码/ 区间/ 内/ 一些/ 整数/ 不/ 对应/ 任何/ 路径/ 编码/ )/ ,/ 可能/ 在/ 一定/ 程度/ 上/ 浪费/ 编码/ 空间/ ,/ 降低/ 了/ 存储/ 效率/ ./ 为了/ 达到/ 较强/ 的/ 剖析/ 能力/ ,/ 本文/ 采用/ 后/ 一种/ 方式/ ./ 文献/ [/ 20/ ]/ 处理/ 的/ 是/ 调用/ 关系/ ,/ 文献/ [/ 17/ ]/ 是/ 过程/ 内非/ 选择性/ 剖析/ ,/ 更/ 贴近/ 本文/ 的/ 研究/ 对象/ ,/ 故/ 本文/ 使用/ 文献/ [/ 17/ ]/ 中/ 的/ PAP/ ./ 有别于/ EPP/ ,/ PAP/ 使用/ 的/ 探针/ 形式/ 为/ r/ ·/ ·/ =/ r/ ×/ s/ +/ i/ (/ 简记/ 为/ s/ (/ i/ )/ )/ ,/ 而/ 探针/ 插装/ 算法/ 为/ :/ 对于/ CFG/ 中/ 一个/ 有/ 多个/ 入边/ 的/ 节点/ N/ ,/ 设其入/ 边/ 数目/ 为/ s/ ,/ 则/ 以/ 任意/ 顺序/ 在/ 其/ 每/ 条入/ 边上/ 插装/ 探针/ s/ (/ 0/ )/ ,/ s/ (/ 1/ )/ ,/ …/ ,/ s/ (/ s/ -/ 1/ )/ ,/ 如/ 算法/ 2/ 及图/ 1/ (/ b/ )/ 所示/ ./ 图/ 2/ (/ c/ )/ 中/ 给出/ 了/ 一个/ PAP/ 插装/ 的/ 示例/ ,/ 以/ 表明/ PAP/ 和/ EPP/ 在/ 插装/ 方式/ 和/ 处理/ 循环/ 上/ 的/ 不同之处/ ./ 由于/ 不/ 需要/ 像/ BL/ 算法/ 那样/ 对/ CFG/ 的/ 节点/ 进行/ 逆/ 拓扑/ 排序/ ,/ PAP/ 算法/ 的/ 代价/ 为/ O/ (/ E/ )/ ,/ 其中/ E/ 为/ CFG/ 中边/ 的/ 总数/ ./ Page5/ 算法/ 2/ ./ PAP/ 插装/ 算法/ ./ 输入/ :/ f/ 待/ 剖析/ CFGaddP/ (/ f/ :/ entry/ ,/ “/ r/ ·/ ·/ =/ 0/ ”/ )/ ;/ // // 探针/ 变量/ 初始化/ FOREACHnodeninfDOints/ =/ n/ ./ fanIn/ (/ )/ ;/ // // s/ 是/ 节点/ n/ 的/ 入度/ IFs/ >/ 1THENENDaddP/ (/ f/ :/ exit/ ,/ “/ recordr/ ”/ )/ ;/ // // 收集/ pathidsEND/ 由于/ 在/ 探针/ 变量/ 计算/ 过程/ 中/ 使用/ 了/ 加法/ 和/ 乘法/ 相结合/ 的/ 方式/ ,/ 那么/ 按照/ 不同/ 入边/ 交汇/ 于/ 同一个/ 节点/ N/ 的/ 任意/ 两条/ 路径/ 的/ 编码/ 不会/ 相同/ ,/ 因为/ 二者/ 对/ N/ 的/ 入度/ 取余/ 的/ 余数/ 不同/ ./ 进而/ ,/ 在/ 文献/ [/ 17/ ]/ 中/ 证明/ ,/ 这样/ 的/ 插装/ 方式/ 可以/ 保证/ 任意/ 两条/ 静态/ 路径/ 具有/ 不同/ 的/ pathid/ ./ PAP/ 可以/ 与/ EPP/ 相结合/ 以/ 减少/ 部分/ 路径/ 编码/ 的/ 浪费/ ,/ 文献/ [/ 17/ ]/ 定义/ 了/ 可/ 规约/ 无/ 环子/ 图/ RAS/ (/ ReducibleAcyclicSubgraph/ )/ ,/ 是/ CFG/ 中/ 满足/ 如下/ 条件/ 的/ 子/ 图/ s/ :/ (/ 1/ )/ s/ 是/ 单/ 入口/ 单/ 出口/ DAG/ ;/ (/ 2/ )/ s/ 的/ 入口/ 节点/ 是/ s/ 的/ 出口/ 节点/ 的/ 前/ 必经/ 节点/ ;/ (/ 3/ )/ s/ 的/ 出口/ 节点/ 是/ s/ 的/ 入口/ 节点/ 的/ 后/ 必经/ 节点/ ./ 在/ 这样/ 的/ 子/ 图上/ ,/ PAP/ 能够/ 与/ EPP/ 相结合/ ./ EPP/ 用于/ 剖析/ RAS/ 中/ 的/ 路径/ 片段/ ,/ PAP/ 用于/ 剖析/ RAS/ 之外/ 的/ 部分/ ,/ 二者/ 的/ 路径/ 编码/ 可以/ 在/ RAS/ 的/ 出口处/ 结合/ 在/ 一起/ :/ 若/ RAS/ 中有/ n/ 条无环/ 路径/ ,/ PAP/ 将/ 之/ 视为/ 有/ n/ 个/ 分支/ 的/ 节点/ ,/ EPP/ 所/ 获取/ 的/ localpathid/ 即/ 标注/ 了/ 所/ 执行/ 的/ 分支/ ./ 类似/ 地/ ,/ 本文/ 使用/ ESPP/ 剖析/ RAS/ ,/ 并/ 与/ PAP/ 相结合/ 来/ 得到/ PSP/ 的/ 4/ 种/ 实现/ 方式/ 之一/ (/ PSP1/ )/ ./ 在下文/ 中/ ,/ 我们/ 讨论/ 如何/ 将/ PAP/ 扩展/ 至/ 选择性/ 剖析/ ,/ 使用/ 兴趣/ 路径/ 集合/ 来/ 提高效率/ ./ 3/ 选择性/ 路径/ 剖析/ 这/ 一节/ 首先/ 给出/ ESPP/ 算法/ ,/ 然后/ 描述/ 了/ PSP/ 的/ 4/ 种/ 实现/ (/ PSP0/ ~/ PSP3/ )/ 的/ 实现/ 细节/ ,/ 最后/ 对/ 这/ 4/ 种/ 实现/ 进行/ 了/ 理论/ 上/ 的/ 比较/ ./ 3.1/ ESPPSPP/ 不能/ 保证/ 剖析/ 结果/ 的/ 精确性/ ./ 如/ 2.3/ 节/ 所述/ ,/ 当/ 某些/ 必要/ 的/ 权值/ 被/ 删除/ 时/ ,/ 本/ 小节/ 按照/ 如下/ 方式/ 将/ SPP/ 改进/ 为/ ESPP/ :/ 使用/ SPP/ 算法/ 的/ 步骤/ 1/ 和/ 步骤/ 2/ 进行/ DAG/ 边/ 的/ 权值/ 分配/ 、/ 转移/ 之后/ ,/ 在/ 删除/ 非/ EI/ 边上/ 的/ 权值/ 时/ ,/ 删除/ 每个/ 权值/ 都/ 检查/ 在/ 删除/ 之后/ 每个/ PI/ 路径/ 的/ pathid/ 是否/ 仍然/ 唯一/ ,/ 如是/ ,/ 则/ 删除/ ;/ 如否/ ,/ 则/ 不/ 删除/ ./ 迭代/ 地/ 检查/ 、/ 删除/ 每个/ 非/ EI/ 边/ 的/ 权值/ ,/ 直至/ 所有权/ 值均/ 不能/ 删除/ 为止/ ./ ESPP/ 算法/ 如/ 算法/ 3/ 所示/ ./ 算法/ 3/ ./ ESPP/ (/ G/ ,/ EI/ )/ ./ 输入/ :/ G/ 待/ 剖析/ DAG/ 输出/ :/ Val/ (/ e/ )/ 图/ G/ 中/ 每/ 条边/ e/ 的/ 权值/ // / 步骤/ 1/ ./ 计算/ 边/ 的/ 权值/ / // NumPaths/ (/ EXIT/ )/ =/ 1/ ;/ FOREACHnon/ -/ exitnodevinreversetopologicalorderDONumPaths/ (/ v/ )/ =/ 0/ ;/ FOREACHoutedgeenotinEI/ :/ v/ →/ wDOVal/ (/ e/ )/ =/ NumPaths/ (/ v/ )/ ;/ NumPaths/ (/ v/ )/ =/ NumPaths/ (/ v/ )/ +/ NumPaths/ (/ w/ )/ ;/ ENDFOREACHoutedgeeinEI/ :/ v/ →/ wDOVal/ (/ e/ )/ =/ NumPaths/ (/ v/ )/ ;/ NumPaths/ (/ v/ )/ =/ NumPaths/ (/ v/ )/ +/ NumPaths/ (/ w/ )/ ;/ ENDEND/ // / 步骤/ 2/ ./ 权值/ 转移/ / // FOREACHnodevintopologicalorderDOIF/ (/ vhasonlyoneinedgeei/ )/ and/ (/ Val/ (/ ei/ )/ >/ 0/ )/ FOREACHoutedgeeo/ :/ v/ →/ wDOVal/ (/ eo/ )/ =/ Val/ (/ eo/ )/ +/ Val/ (/ ei/ )/ ;/ ENDVal/ (/ ei/ )/ =/ 0/ ;/ ENDEND/ // / 步骤/ 3/ ./ 删除/ 非/ 兴趣/ 边/ 的/ 权值/ / // SetPIpathids/ ,/ PNpathids/ ;/ // // PIpathids/ 和/ PNpathidsgetPIpathidsfromVal/ ;/ // // 通过/ 边/ 的/ 权值/ 计算/ PI/ 路/ FOREACHedgeenotinEIandVal/ (/ e/ )/ !/ =/ 0DOgetPNpathidsfromValandVal/ (/ e/ )/ ;/ IFPIpathids/ ∩/ PNpathids/ =/ / THENVal/ (/ e/ )/ =/ 0/ ;/ ENDENDESPP/ 算法/ 在/ SPP/ 算法/ 的/ 基础/ 上/ 添加/ 了/ 删除/ 探针/ 时/ 对/ 路径/ 编码/ 唯一性/ 的/ 检测/ ,/ 这种/ 检测/ 保证/ 了/ 任意/ 两条/ 不同/ 兴趣/ 路径/ 的/ 编码/ 不同/ 且/ 任意/ 一条/ 兴趣/ 路/ Page6/ 径/ 与/ 任/ 一条/ 非/ 兴趣/ 路径/ 的/ 编码/ 不同/ ,/ 进而/ 可以/ 保证/ 对/ 兴趣/ 路径/ 的/ 剖析/ 结果/ 是/ 精确/ 的/ ./ ESPP/ 算法/ 属于/ 贪心/ 算法/ ,/ 该/ 算法/ 的/ 结果/ 不/ 一定/ 是/ 最/ 少数/ 目的/ 权值/ 分配/ 方案/ (/ 即/ 最少/ 探针/ )/ ./ 如果/ 在/ 删除/ 时/ 穷举/ 所有/ 的/ 权值/ 组合/ 方案/ ,/ 则/ 可以/ 得到/ 最优/ 解/ ,/ 但是/ 由于/ pathid/ 和/ 边/ 的/ 权值/ 之间/ 存在/ 复杂/ 的/ 组合/ 关系/ ,/ 这样/ 的/ 穷举/ 过程/ 耗费/ 的/ 时间/ 过大/ ./ 所以/ 本文/ 采用/ 贪心/ 策略/ 提高/ 算法/ 效率/ ./ ESPP/ 的/ 算法/ 耗费/ 为/ O/ (/ E2/ ×/ P/ +/ E/ ×/ I/ ×/ P/ )/ ,/ 因为/ 步骤/ 1/ 耗费/ O/ (/ E/ )/ ,/ 步骤/ 2/ 耗费/ O/ (/ E/ )/ ,/ 步骤/ 3/ 耗费/ O/ (/ E2/ ×/ P/ +/ E/ ×/ I/ ×/ P/ )/ ①/ ,/ 其中/ E/ 是/ DAG/ 的/ 边数/ ,/ I/ 是/ DAG/ 中/ 的/ 兴趣/ 路径/ 的/ 数目/ ,/ P/ 是/ 静态/ 路径/ 总数/ ./ 3.2/ 非/ 兴趣/ 路径/ 的/ 检测/ “/ 提前结束/ ”/ (/ earlytermination/ )/ 是/ 由/ 非/ 选择性/ 路径/ 剖析/ 方法/ 所/ 提出/ 的/ 技术/ ,/ 如/ 文献/ [/ 18/ ,/ 21/ ]/ ,/ 其/ 含义/ 为/ :/ 如果/ 执行/ 到/ CFG/ 的/ 某个/ 位置/ ,/ 该/ 位置/ 之后/ 的/ 执行/ 路径/ 是/ 确定/ 的/ (/ 即/ 不再/ 有/ 分支/ 的/ 可能/ )/ ,/ 那么/ 可以/ 直接/ 确定/ 所/ 执行/ 的/ 路径/ ,/ 而/ 不/ 需/ 执行/ 该/ 路径/ 剩余/ 的/ 部分/ ,/ 以/ 节约/ 执行/ 时间/ ./ 为了/ 节约/ 更/ 多/ 的/ 执行/ 时间/ ,/ 程序/ 出口处/ 的/ 探针/ 将/ 被/ “/ 前/ 推/ ”/ ,/ 即/ 转移/ 到/ 离/ 程序/ 入口/ 更近/ 的/ 位置/ ./ 在/ 本文/ 中/ ,/ 我们/ 将/ 提前结束/ 的/ 思想/ 扩展/ 至/ 选择性/ 剖析/ :/ 如果/ 在/ 执行/ 中/ 检测/ 到/ 当前/ 执行/ 的/ 路径/ 属于/ 非/ 兴趣/ 路径/ ,/ 那么/ 可以/ 终止/ 当前/ 执行/ 以/ 节约/ 时间/ ./ 这/ 要求/ 在/ 执行/ 过程/ 中/ 进行/ 路径/ 检测/ ,/ 而/ 一方面/ 这种/ 检测/ 需要/ 额外/ 的/ 耗费/ ,/ 另一方面/ 要求/ 能够/ 尽早/ 地/ 检测/ 出/ 尽可能/ 多/ 的/ 非/ 兴趣/ 路径/ ,/ 以/ 尽可能/ 地/ 节约/ 执行/ 耗费/ ./ 权衡/ 这/ 两个/ 方面/ ,/ 我们/ 给出/ 3/ 种/ 检测/ 技术/ T1/ ~/ T3/ 以/ 供选择/ ./ T1/ ./ 检测/ temppathid/ ./ 检测/ 的/ 依据/ 在于/ 非/ 兴趣/ 路径/ 和/ 兴趣/ 路径/ 的/ temppathid/ 在/ 某些/ 位置/ 不同/ ./ 在/ CFG/ 的/ 必要/ 位置/ (/ 具体位置/ 详见/ 3.3/ 节/ )/ 枚举/ 所有/ 兴趣/ 路径/ 的/ temppathid/ ,/ 那么/ 当/ 执行/ 中/ 发现/ 当前/ 的/ temppathid/ 不/ 属于/ 任一/ 兴趣/ 路径/ ,/ 则/ 可以/ 判定/ 执行/ 了/ 非/ 兴趣/ 路径/ ,/ 应该/ 提前结束/ ./ T2/ ./ 检测/ localpathid/ ./ 检测/ 的/ 依据/ 在于/ 某些/ 非/ 兴趣/ 路径/ 和/ 兴趣/ 路径/ 会在子/ 图上/ 执行/ 不同/ 的/ 路径/ 片段/ ./ 我们/ 在/ 无/ 环子/ 图上/ 应用/ ESPP/ ,/ 并/ 在/ 子/ 图/ 的/ 出口处/ 检查/ localpathid/ ,/ 如果/ 发现/ 执行/ 了/ 非/ 兴趣/ 路径/ ,/ 那么/ 应该/ 提前结束/ ./ T3/ ./ 检测/ BE/ ./ 检测/ 的/ 依据/ 在于/ 兴趣/ 路径/ 上/ 只会/ 执行/ EI/ 边/ ,/ 执行/ 了/ BE/ 边/ 或/ NE/ 边/ 的/ 路径/ 必然/ 是非/ 兴趣/ 路径/ ;/ 任/ 一条/ 路径/ 在/ 执行/ 任何/ NE/ 边/ 之前/ 必然/ 会先/ 执行/ 某/ 一条/ BE/ 边/ ②/ ,/ 所以/ 只/ 需/ 在/ BE/ 边上/ 进行/ 检测/ 即可/ ./ 基于/ T1/ ~/ T3/ ,/ 我们/ 设计/ 了/ PSP0/ ~/ PSP3/ ,/ 其中/ PSP0/ 使用/ T1/ 进行/ 检测/ ,/ PSP1/ 使用/ T2/ ,/ PSP2/ 使用/ T3/ ,/ 而/ PSP3/ 同时/ 使用/ T2/ 和/ T3/ ./ T1/ 能够/ 检测/ 出/ 所有/ 的/ 非/ 兴趣/ 路径/ ,/ 而/ T2/ 和/ T3/ 仅能/ 检测/ 出/ 部分/ 路径/ ,/ 相应/ 地/ ,/ T1/ 的/ 检测/ 耗费/ 也/ 高于/ 后/ 二者/ ./ 由此/ 我们/ 可以/ 得出/ T1/ ~/ T3/ ,/ 以及/ PSP0/ ~/ PSP3/ 的/ 检测/ 需要/ 的/ 耗费/ 和/ 能够/ 节约/ 的/ 耗费/ 的/ 偏序/ 关系/ ,/ 如图/ 4/ 所示/ ./ 接下来/ 的/ 章节/ 依次/ 讨论/ 了/ PSP0/ ~/ PSP3/ 的/ 算法/ 及其/ 耗费/ (/ 算法/ 复杂度/ )/ ③/ ./ 3.3/ PSP0PSP0/ 使用/ T1/ 进行/ 检测/ ,/ 需要/ 在/ CFG/ 的/ 必要/ 位置/ 枚举/ 所有/ 兴趣/ 路径/ 的/ temppathid/ ./ 首先/ 考虑/ 何种/ 位置/ 上/ 的/ 检测/ 是/ 不必要/ 的/ ./ 从/ CFG/ 中/ 可以/ 抽象/ 出/ 3/ 种/ 结构/ :/ 顺序/ 、/ 多入/ 边/ 交汇/ 、/ 多出/ 边/ 分支/ ,/ 如图/ 5/ 所示/ (/ 图中/ 的/ 边/ 既/ 可以/ 是/ 普通/ 边/ ,/ 也/ 可以/ 是/ 回边/ )/ ./ 我们/ 拟/ 对/ 这/ 3/ 种/ 结构/ 进行/ 检查/ ,/ 确定/ 执行/ 到/ 节点/ B/ 时/ ,/ 检测/ 是否是/ 必要/ 的/ ./ 图/ 5/ (/ a/ )/ 中/ ,/ B/ 处/ 的/ 检测/ 显然/ 是/ 不必要/ 的/ ./ 因为/ 如果/ B/ 处/ temppathid/ 与/ 兴趣/ 路径/ 冲突/ ,/ 那么/ A/ 处/ temppathid/ 已经/ 冲突/ 并/ 提前结束/ ,/ 所以/ B/ 处/ 不会/ 检测/ 出/ 任何/ 的/ 非/ 兴趣/ 路径/ ./ 图/ 5/ (/ b/ )/ ,/ B/ 处/ 的/ 检测/ 也/ 是/ 不必要/ 的/ ./ 因为/ 一条/ 路径/ 包含/ ①/ ②/ ③/ Page7/ 了/ A/ 或/ C/ ,/ 那么/ 必然/ 包含/ B/ ,/ 而/ 不论是/ 兴趣/ 路径/ 或/ 是非/ 兴趣/ 路径/ ,/ B/ 处/ 也/ 不会/ 检测/ 出/ 任何/ 的/ 非/ 兴趣/ 路径/ ./ 图/ 5/ (/ c/ )/ ,/ B/ 处/ 的/ 检测/ 是/ 必要/ 的/ ./ 因为/ 有/ 可能/ AB/ 是/ BE/ 边/ 而/ AC/ 是/ EI/ 边/ ,/ B/ 处/ 即可/ 提前结束/ 非/ 兴趣/ 路径/ ./ 由/ 以上/ 分析/ 可知/ ,/ PSP0/ 需要/ 进行/ 路径/ 检测/ 的/ 位置/ 是/ :/ 其/ 前驱/ 具有/ 多条/ 出边/ 的/ 节点/ ./ 基于/ 此/ ,/ 我们/ 设计/ 了/ PSP0/ 算法/ ,/ 如/ 算法/ 4/ 所示/ ./ 该/ 算法/ 首先/ 计算/ PAP/ 算法/ 的/ 探针/ ,/ 然后/ 在/ 必要/ 位置/ 计算/ 兴趣/ 路径/ 的/ temppathid/ ,/ 并/ 以此/ 插装/ 路径/ 检测/ 的/ 探针/ ./ 该/ 算法/ 的/ 耗费/ 为/ O/ (/ E/ +/ N/ ×/ I/ )/ ,/ 其中/ E/ 是/ CFG/ 的/ 边数/ ,/ N/ 是/ 节点/ 数/ ,/ 而/ I/ 是/ 兴趣/ 路径/ 数目/ (/ 假设/ 兴趣/ 路径/ 的/ 最大/ 长度/ 为/ 常量/ )/ (/ 算法/ 步骤/ 1/ 耗费/ 为/ O/ (/ E/ )/ ,/ 步骤/ 2/ 耗费/ 为/ O/ (/ N/ ×/ I/ )/ ,/ 步骤/ 3/ 耗费/ 为/ O/ (/ N/ )/ )/ ./ 算法/ 4/ ./ PSP0/ (/ G/ ,/ PI/ )/ ./ 输入/ :/ G/ 待/ 剖析/ CFG/ 输出/ :/ ps/ 探针/ 集合/ // / 步骤/ 1/ ./ PAP/ 探针/ 插装/ / // FOREACHnodeninGDOints/ =/ n/ ./ fanIn/ (/ )/ ;/ inti/ =/ 0/ ;/ FOREACHinedgeeofnDOps/ ./ addPAPProbe/ (/ e/ ,/ s/ ,/ i/ ++/ )/ ;/ // // 在/ 边/ e/ 上/ 插/ 装探/ ENDEND/ // / 步骤/ 2/ ./ 在/ 必要/ 位置/ 计算/ 兴趣/ 路径/ 的/ temppathids/ / // Map/ 〈/ Node/ ,/ Set/ 〉/ tp/ ;/ // // tp/ 记录/ temppathidsFOREACHnodeninGDOIFnisunnecessarytocheckTHENENDinitializeanInteger/ -/ Set/ ,/ namedpathids/ ;/ FOREACHpathpinPIDOENDtp/ ./ put/ (/ n/ ,/ pathids/ )/ ;/ END/ // / 步骤/ 3/ ./ 计算/ 探针/ / // FOREACHnodeninGDOSetpathids/ =/ tp/ ./ get/ (/ n/ )/ ;/ ifpathids/ !/ =/ nullthenps/ ./ addIdentifyProbe/ (/ n/ ,/ pathids/ )/ ;/ ENDEND/ 图/ 6/ 给出/ 了/ 一个/ PSP0/ 的/ 示例/ ,/ 其中/ 有/ 两条/ 兴趣/ 路径/ BDE/ 和/ BDEBDE/ ,/ 那么/ 图中边/ BC/ 为/ BE/ 边/ ,/ CE/ 为/ NE/ 边/ ,/ 其余/ 边均/ 为/ EI/ 边/ ./ 使用/ PSP0/ 算法/ 进行/ 插装/ :/ (/ 1/ )/ 节点/ E/ 是/ 不/ 需/ 检测/ 的/ 位置/ ,/ 因为/ E/ 的/ 两个/ 前驱/ 节点/ C/ 和/ D/ 均/ 只有/ 一条/ 出边/ ,/ 其余/ 节点均/ 需要/ 检测/ ;/ (/ 2/ )/ 按照/ PAP/ 算法/ 进行/ 路径/ 编码/ (/ PAP/ 插装/ 如图/ 中/ 控制流/ 边上/ 所注/ )/ 后/ ,/ 按照/ 兴趣/ 路径/ 计算/ 每个/ 节点/ 处/ 的/ temppathid/ 集合/ ,/ 以此/ 对/ 是否/ 执行/ 了/ 非/ 兴趣/ 路径/ 进行/ 判定/ ,/ 结果/ 如图/ 6/ 所示/ ./ 我们/ 以非/ 兴趣/ 路径/ Entry/ -/ B/ -/ D/ -/ E/ -/ B/ -/ C/ -/ E/ -/ Exit/ 为例/ ,/ 说明/ 图/ 6/ 中/ 的/ 实例/ 在/ 插/ 装后/ 的/ 执行/ 步骤/ :/ (/ 1/ )/ 首先/ ,/ 在/ Entry/ 节点/ 处/ ,/ 变量/ r/ 的/ 值/ 初始化/ 为/ 0/ ;/ (/ 2/ )/ 随后/ 经过/ 运算/ r/ ·/ ·/ =/ r/ ×/ 2/ 执行/ 至/ 节点/ B/ ,/ 此时/ r/ 的/ 值/ 依然/ 是/ 0/ ;/ (/ 3/ )/ 在/ 节点/ B/ 处/ ,/ 由于/ 集合/ f0/ ,/ 3g/ 包含/ r/ 的/ 当前/ 值/ 0/ ,/ 故/ 未能/ 检测/ 出/ 当前/ 执行/ 的/ 路径/ 为/ 非/ 兴趣/ 路径/ ,/ 继续执行/ ;/ (/ 4/ )/ 在/ 节点/ D/ 处/ ,/ 与/ 节点/ B/ 处/ 的/ 运算/ 结果/ 相同/ ,/ (/ 5/ )/ 在/ 节点/ E/ 处/ ,/ 经/ BE/ 边上/ 的/ 运算/ ,/ 当前/ r/ 的/ 值/ 为/ 1/ ;/ (/ 6/ )/ 在/ 节点/ B/ 出/ ,/ 经/ EB/ 边上/ 的/ 运算/ ,/ 当前/ r/ 的/ 值/ 为/ 3/ ,/ 依然/ 在/ 集合/ {/ 0/ ,/ 3/ }/ 内/ ,/ 故/ 继续执行/ ;/ (/ 7/ )/ 在/ 节点/ C/ 出/ ,/ 由于/ C/ 处/ 兴趣/ 路径/ 编码/ 集合/ 为/ 空集/ ,/ 故/ 在/ 此处/ 当前/ 执行/ 被/ 识别/ 为/ 非/ 兴趣/ 路径/ ,/ 停止/ 执行/ ./ 依然/ 继续执行/ ;/ Page83/ ./ 4PSP1/ 由于/ ESPP/ 是/ 一种/ 无环图/ 上/ 的/ 精确/ 选择性/ 剖析/ 方法/ ,/ 可以/ 将/ 之/ 用于/ 剖析/ 有环/ CFG/ 的/ 无/ 环子/ 图/ RAS/ ,/ 并/ 与/ PAP/ 相结合/ 来/ 达到/ 有/ 环图/ 的/ 精确/ 选择性/ 剖析/ ./ 步骤/ 如下/ :/ (/ 1/ )/ 在/ RAS/ 之中/ ,/ ESPP/ 使用/ 局部/ 探针/ 变量/ 对/ 路径/ 片段/ 进行/ 选择性/ 剖析/ ;/ (/ 2/ )/ 在/ RAS/ 的/ 出口处/ ,/ 使用/ T2/ 进行/ 路径/ 检测/ :/ 检查/ localpathid/ ,/ 如果/ 发现/ 不/ 属于/ 任一/ 兴趣/ 路径/ ,/ 则/ 提前结束/ ;/ (/ 3/ )/ 如果/ 在/ RAS/ 的/ 出口处/ 未/ 检测/ 到/ 非/ 兴趣/ 路径/ ,/ 那么/ localpathid/ 将/ 结合/ 到/ PAP/ 的/ 全局/ 探针/ 变量/ 计算/ 之中/ ,/ 继续执行/ ./ PSP1/ 的/ 算法/ 如/ 算法/ 5/ 所示/ ,/ 输入/ 兴趣/ 路径/ 和/ RAS/ 集合/ ,/ 使用/ ESPP/ 剖析/ RAS/ 并/ 在/ RAS/ 出口处/ 添加/ 路径/ 检测/ 和/ 结合/ PAP/ 编码/ 的/ 探针/ ./ 对于/ 每次/ 执行/ ,/ 要么/ 提前结束/ ,/ 要么/ 完成/ 执行/ 之后/ 获得/ 唯一/ 的/ 路径/ 编码/ ./ 由于/ ESPP/ 算法/ 耗费/ 为/ O/ (/ P/ ×/ E2/ +/ P/ ×/ E/ ×/ I/ )/ ,/ PAP/ 算法/ 耗费/ 为/ O/ (/ E/ )/ ,/ 所以/ PSP1/ 算法/ 耗费/ 为/ O/ (/ S/ ×/ P/ ×/ E2/ +/ S/ ×/ P/ ×/ E/ ×/ I/ )/ ,/ 其中/ S/ 为/ RAS/ 数目/ ,/ E/ 为/ CFG/ 边数/ ,/ I/ 为/ 兴趣/ 路径/ 数目/ ,/ P/ 为/ 各个/ RAS/ 中/ 的/ 静态/ 路径/ 总数/ 的/ 上限/ ./ 算法/ 5/ ./ PSP1/ (/ G/ ,/ PI/ ,/ rass/ )/ ./ 输入/ :/ G/ 待/ 剖析/ CFG/ 输出/ :/ ps/ 探针/ 集合/ // / 步骤/ 1/ ./ RAS/ 上/ 应用/ ESPP/ / // Listhandled/ _/ nodes/ ;/ // // 记录/ 使用/ ESPP/ 方法/ 处理/ 的/ 节点/ FOREACHRASrinrassDOaddallnodesofrintohandled/ _/ nodes/ ;/ handled/ _/ nodes/ ./ remove/ (/ r/ ./ entry/ )/ ;/ performESPPalgorithmonrandaddprobesintops/ ;/ getlocal/ _/ pathidsofPIpathsinsider/ ;/ // // 计算/ 局部/ 编码/ ps/ ./ addIdentifyProbe/ (/ r/ ./ exit/ ,/ local/ _/ pathids/ )/ ;/ // // 如果/ local/ _/ pathid/ 不/ 属于/ local/ _/ pathids/ ,/ 则/ 提前/ 结/ END/ // / 步骤/ 2/ ./ RAS/ 外/ 应用/ PAP/ / // FOREACHnodeninGDOIFhandled/ _/ nodes/ ./ contains/ (/ n/ )/ THENCONTINUE/ ;/ ENDints/ =/ n/ ./ fanIn/ (/ )/ ;/ IFs/ </ 2THENCONTINUE/ ;/ ENDinti/ =/ 0/ ;/ FOREACHinedgeeofnDOps/ ./ addPAPProbe/ (/ e/ ,/ s/ ,/ i/ ++/ )/ ;/ // // 在/ 边/ e/ 上/ 插/ 装探/ ENDEND/ 图/ 7/ 给出/ 了/ 一个/ PSP1/ 示例/ ,/ 方框/ 中是/ 一个/ RAS/ ,/ 假设/ 有/ 两条/ 兴趣/ 路径/ 为/ ABDEMJG/ 和/ ABE/ -/ MJGBDEMJG/ ,/ 那么/ RAS/ 之中/ 有/ 两条/ 兴趣/ 路径/ 片段/ :/ BDEMJG/ 和/ BEMJG/ ;/ 使用/ ESPP/ 剖析/ ,/ 可以/ 删除/ 非/ 兴趣/ 边/ IJ/ 的/ 权值/ ,/ 节约/ 探针/ ;/ 两条/ 兴趣/ 路径/ 片段/ 的/ localpathid/ 为/ 5/ 和/ 8/ ,/ 所以/ 在/ RAS/ 的/ 出口/ 节点/ G/ 处/ ,/ 如果/ 当前/ 的/ 局部/ 探针/ 变量/ r/ 的/ 值/ 不是/ 5/ 或/ 8/ ,/ 就/ 代表/ 执行/ 了/ 非/ 兴趣/ 路径/ ,/ 可以/ 提前/ 终止/ ,/ 否则/ 与/ PAP/ 结合/ EPP/ 的/ 方式/ 类似/ ,/ 将/ localpathid/ 结合/ 到/ PAP/ 的/ 探针/ 变量/ 计算/ 之中/ ./ 3.5/ PSP2/ 受/ SPP/ 转移/ 探针/ 插装/ 位置/ 的/ 启发/ ,/ PAP/ 的/ 探针/ 也/ 可以/ 转移/ 位置/ ./ SPP/ 为了/ 将/ 探针/ 更多地/ 分布/ 到/ 非/ EI/ 边上/ 以/ 尽可能/ 多地/ 删除/ ,/ 故其/ 将/ 权值/ 从/ 节点/ 的/ 唯一/ 入边/ 转移/ 到/ 该/ 节点/ 的/ 出边/ (/ 即/ “/ 后/ 推/ ”/ )/ ;/ 而/ 在/ PSP/ 中/ ,/ 为了/ 尽可能/ 早地/ 达到/ 提前结束/ ,/ 有/ 必要/ 将/ 探针/ 从/ 节点/ 的/ 出边/ 转移/ 到/ 该/ 节点/ 的/ 入边/ (/ 即/ “/ 前/ 推/ ”/ )/ ./ 3.5/ ./ 1/ 探针/ 前/ 推/ 在/ PAP/ 探针/ 插装/ 的/ 基础/ 上/ ,/ 可以/ 将/ 单出/ 边/ 节点/ 出/ 边上/ 的/ 探针/ (/ 如果/ 存在/ 的话/ )/ “/ 吸收/ ”/ 到/ 其入/ 边上/ ,/ 如图/ 8/ (/ b/ )/ 所示/ ,/ 连续/ 执行/ 两个/ 探针/ x/ (/ i/ )/ 和/ y/ (/ k/ )/ 的/ 结果/ 与/ 仅/ 执行/ 一个/ 探针/ xy/ (/ yi/ +/ k/ )/ 对于/ 探针/ 变量/ 计算/ 具有/ 同样/ 的/ 影响/ (/ 因为/ (/ r/ ×/ x/ +/ i/ )/ ×/ y/ +/ k/ =/ r/ ×/ x/ ×/ y/ +/ y/ ×/ i/ +/ k/ )/ ./ 这样/ 完成/ 探针/ 转移/ 的/ 同时/ 不会/ 影响/ 任何/ 路径/ 的/ pathid/ ./ 如果/ 某个/ 节点/ 的/ 出边/ 属于/ EI/ 集合/ 而/ 其/ 部分/ 入边/ 属于/ NE/ 集合/ ,/ 那么/ 经过/ 这样/ 的/ 探/ Page9/ 针/ 转移/ 后/ ,/ 可以/ 达到/ 减少/ 探针/ 的/ 效果/ ./ 3.5/ ./ 2PSP2/ 算法/ 基于/ 兴趣/ 路径/ 集合/ PI/ ,/ CFG/ 中/ 的/ 节点/ 可以/ 划分/ 为/ 两个/ 集合/ ,/ NI/ 和/ NN/ ;/ 相应/ 地/ ,/ CFG/ 中/ 的/ 边/ 可以/ 划分/ 为/ 3/ 个/ 集合/ ,/ EI/ 、/ BE/ 和/ NE/ ./ 这样/ 的/ CFG/ 划分/ 如图/ 9/ 所示/ ,/ 假设/ 兴趣/ 路径/ 为/ ABDH/ 和/ ACEH/ ,/ 那么/ 左边/ 方框/ 中/ 的/ 是/ NN/ 节点/ ,/ 右边/ 方框/ 是/ NI/ 节点/ ,/ EI/ 中/ 的/ 边/ 为/ 粗线/ 表示/ ,/ BE/ 集合/ 包括/ 边/ BE/ 和/ 边/ BF/ ,/ 其余/ 边为/ NE/ 边/ ./ 在/ 进行/ 探针/ 插装时/ ,/ 根据/ T3/ 的/ 检测/ 机制/ ,/ 只/ 需要/ 在/ BE/ 边上/ 插装/ 提前结束/ 的/ 探针/ ,/ 而/ 在/ NE/ 边上/ 删除/ 所有/ 探针/ (/ 由于/ BE/ 边上/ 已经/ 结束/ ,/ 不会/ 执行/ 任何/ NE/ 边/ )/ ./ 如图/ 9/ 中/ 在/ 边/ BE/ 和/ 边/ BF/ 上/ 插装/ 提前结束/ 的/ 语句/ (/ 如图/ 中/ X/ 符号/ 所示/ )/ ,/ 则/ NE/ 边/ 不会/ 被/ 执行/ ./ 由/ 以上/ 讨论/ ,/ 可以/ 得出/ PSP2/ 算法/ ,/ 如/ 算法/ 6/ ①/ 所示/ ,/ 其中/ 包括/ 3/ 个/ 步骤/ :/ (/ 1/ )/ 在/ 每条/ BE/ 边上/ 添加/ 提前结束/ 的/ 探针/ ,/ NE/ 变得/ 不可/ 达/ ,/ 将/ 这/ 两个/ 集合/ 中/ 的/ 边/ 从/ CFG/ 中/ 删去/ ;/ (/ 2/ )/ 在/ 简化/ 后/ 的/ CFG/ 上/ ,/ 使用/ PAP/ 算法/ 进行/ 剖析/ ;/ (/ 3/ )/ 将/ 探针/ 前/ 推/ ./ 算法/ 6/ ./ PSP2/ (/ G/ ,/ PI/ )/ ./ 输入/ :/ G/ 待/ 剖析/ CFG/ 输出/ :/ ps/ 探针/ 集合/ // / 集合/ 计算/ / // getEI/ ,/ BE/ ,/ NE/ ,/ NIfromPI/ ;/ // / BE/ 边上/ 添加/ 提前结束/ 探针/ / // FOREACHedgeeinBEDOps/ ./ addENDing/ (/ e/ )/ ;/ // // 边/ e/ 上/ 提前结束/ remove/ (/ G/ ,/ e/ )/ ;/ // // 从/ G/ 中/ 删除/ 边/ eENDFOREACHedgeeinNEDOremove/ (/ G/ ,/ e/ )/ ;/ // // 从/ G/ 中/ 删除/ 不可/ 达边/ ENDps/ =/ ps/ +/ PAP/ (/ G/ )/ ;/ // // 修改/ 后/ 的/ G/ 上/ 应用/ PAP/ 方法/ ,/ // / EI/ 边上/ 探针/ 前/ 推/ / // FOREACHnodeninNIinreversetopologicalorderDOIFnhasonlyoneoutedgeeTHENEND/ 算法/ 6/ 的/ 耗费/ 为/ O/ (/ E/ ×/ I/ )/ ,/ 因为/ 对/ CFG/ 进行/ 划分/ 需要/ 耗费/ O/ (/ E/ ×/ I/ )/ ,/ 而/ 其他/ 步骤/ 的/ 耗费/ 仅为/ O/ (/ E/ )/ ,/ 其中/ E/ 是/ CFG/ 的/ 边数/ ,/ 而/ I/ 是/ 兴趣/ 路径/ 总数/ ./ 3.6/ PSP3T2/ 在/ RAS/ 的/ 出口/ 进行/ 检测/ 而/ T3/ 在/ BE/ 边上/ 进行/ 检测/ ,/ 这/ 两种/ 检测/ 技术/ 可以/ 同时/ 在/ 一种/ 剖析/ 方法/ 中/ 得到/ 应用/ ,/ 将/ PSP1/ 和/ PSP2/ 两种/ 方法/ 结合/ 起来/ :/ 首先/ ,/ 应用/ PSP2/ 并/ 在/ CFG/ 中/ 删除/ 非/ 兴趣/ 边/ ,/ 达到/ 简化/ 的/ 目的/ ;/ 然后/ ,/ 在/ 简化/ 后/ 的/ CFG/ 中/ 使用/ RAS/ 并/ 应用/ PSP1/ 进行/ 检测/ ./ 这种/ 方法/ 我们/ 称为/ PSP3/ ,/ 其/ 算法/ 如/ 算法/ 7/ 所示/ ,/ 其/ 耗费/ 为/ PSP1/ 和/ PSP2/ 之/ 和/ :/ O/ (/ S/ ×/ P/ ×/ E2/ +/ S/ ×/ P/ ×/ E/ ×/ I/ +/ E/ ×/ I/ )/ =/ O/ (/ S/ ×/ P/ ×/ E2/ +/ S/ ×/ P/ ×/ E/ ×/ I/ )/ (/ 参数/ 含义/ 同/ 前/ )/ ./ 算法/ 7/ ./ PSP3/ (/ G/ ,/ PI/ )/ ./ 输入/ :/ G/ 待/ 剖析/ CFG/ 输出/ :/ ps/ 探针/ 集合/ // / 步骤/ 1/ ./ 边上/ 检测/ 非/ 兴趣/ 路径/ / // usePSP2withGandPI/ ,/ andaddtheprobesintops/ ;/ removeBEandNEedgesfromG/ ;/ // / 步骤/ 2/ ./ 选择/ RASs/ / // ①/ 对/ G/ 中/ 的/ 节点/ 进行/ 逆/ 拓扑/ 排序/ 时/ ,/ 不/ 考虑/ G/ 中/ 的/ 回边/ ,/ 即/ Page10onthereducedgraphG/ ,/ searchallRASs/ ;/ choosesuitableRASsandputtheminsetrass/ ;/ // / 步骤/ 3/ ./ RASs/ 上/ 应用/ ESPP/ / // useESPPwithG/ ,/ PIandrass/ ,/ andaddtheprobesintops/ ;/ PSP3/ 示/ 例如/ 图/ 10/ 所示/ ,/ 其中/ 的/ 控制流/ 结构/ 和/ 兴趣/ 路径/ 与/ 图/ 7/ 相同/ ./ 图/ 10/ (/ a/ )/ 中/ ,/ PSP2/ 在/ 边/ MI/ 和/ IG/ 上/ 进行/ 路径/ 检测/ ,/ 图/ 10/ (/ b/ )/ 在/ 简化/ 后/ 的/ CFG/ 上/ ,/ 应用/ PSP1/ 进行/ 剖析/ ./ 注意/ 到/ RAS/ 结构/ 简化/ 之后/ ,/ 路径/ 数目/ 由/ 9/ 条/ 减少/ 为/ 2/ 条/ ,/ 相应/ 地/ ,/ 在/ 结合/ PAP/ 全局变量/ 计算/ 时/ 可以/ 压缩/ 路径/ 编码/ 空间/ ,/ 减少/ 编码/ 浪费/ ,/ 提高/ 存储/ 效率/ ./ 4/ 实验/ 我们/ 基于/ JAVA/ 语言/ 和/ JDT/ (/ Eclipse3/ ./ 4/ )/ 实现/ 了/ PSP0/ ~/ PSP3/ ,/ 以/ 进行/ 实验/ 分析/ ./ 实验/ 分为/ 两个/ 部分/ :/ 首先/ 在/ 多个/ 非/ 循环/ 程序/ 上/ 记录/ 和/ 比较/ PSP0/ ~/ PSP3/ 与/ 相关/ 方法/ SPP/ 和/ PrePP/ 的/ 效率/ 与/ 精确度/ (/ 因为/ SPP/ 和/ PrePP/ 是非/ 循环/ 剖析/ 方法/ )/ ;/ 然后/ 在/ 多个/ 循环/ 程序/ 上/ 对/ PSP0/ ~/ PSP3/ 进行/ 比较/ ,/ 以/ 发现/ 各种/ 方法/ 的/ 适用/ 情况/ ,/ 并/ 将/ 之/ 与/ PAP/ 进行/ 比较/ 以/ 验证/ 选择性/ 剖析/ 的/ 有效性/ ./ 前/ 一/ 实验/ 的/ 度量/ 变量/ 为/ 执行/ 时间/ 和/ 不/ 精确度/ ,/ 后/ 一/ 实验/ 的/ 度量/ 变量/ 为/ 执行/ 时间/ (/ PSP0/ ~/ PSP3/ 均/ 为/ 精确/ 剖析/ 方法/ )/ ./ 不/ 精确度/ 定义/ 如下/ ①/ :/ rateinaccuracy/ =/ |/ pathcollected/ |/ -/ |/ PIexecuted/ |/ 4.1/ 非/ 循环/ 程序/ 在/ 非/ 循环/ 程序/ 的/ 实验/ 中/ ,/ 我们/ 首先/ 使用/ 一个/ 简单/ 的/ 程序/ GetMid/ [/ 22/ ]/ 作为/ 实例/ 进行/ 分析/ ,/ 同时/ 对/ 实验/ 步骤/ 进行/ 说明/ ,/ 便于/ 后文/ 的/ 理解/ ;/ 然后/ 从/ SPECjvm2008/ ②/ 中/ 抽取/ 多个/ 具有/ 代表性/ 的/ 程序/ 作为/ 基准/ 测试程序/ 进行/ 实验/ ./ GetMid/ 程序/ (/ 记/ 为/ 程序/ No/ ./ 0/ )/ 的/ 功能/ 是/ 返回/ 输入/ 的/ 3/ 个/ 数据/ 中/ 的/ 中间/ 数/ ,/ 其/ 源码/ 如下/ :/ doubleGetMid/ (/ doublex1/ ,/ doublex2/ ,/ doublex3/ )/ {/ doublemid/ =/ x3/ ;/ if/ (/ x2/ </ x3/ )/ {/ elseif/ (/ x1/ >/ x3/ )/ returnmid/ ;/ }/ 我们/ 从/ 其/ 源码/ 中/ 抽取/ CFG/ ,/ 并/ 随机/ 选取/ 两条/ 静态/ 路径/ 作为/ 兴趣/ 路径/ ,/ 使用/ SPP/ ,/ PrePP/ 和/ PSP/ 进行/ 剖析/ ,/ 插装/ 结果/ 如图/ 11/ 所示/ (/ temppathid/ 简记/ 为/ “/ tp/ ”/ )/ ./ 其中/ 对于/ PSP1/ 和/ PSP3/ ,/ 由于/ 程序/ 中无环/ ,/ 故/ 整个/ CFG/ 被/ 当做/ 一个/ RAS/ 进行/ 处理/ ./ 然后/ 我们/ 使用/ 随机/ 输入/ 多次/ 执行/ 插装后/ 的/ 程序/ ,/ 收集/ 各种/ 方法/ 插装/ 结果/ 的/ 执行/ 时间/ 和/ 剖析/ 的/ 不精确性/ ./ 挑选/ 基准/ 测试程序/ :/ 我们/ 按照/ 如下/ 准则/ 从/ SPECjvm2008/ 和/ JDK/ 中/ (/ 1/ )/ 无环/ 或/ 环可/ 忽略/ ;/ (/ 2/ )/ 可/ 独立/ 执行/ ;/ (/ 3/ )/ 无/ 过程/ 间/ 调用/ 或/ 过程/ 间/ 调用/ 可/ 被/ 忽略/ ./ 据此/ ,/ 我们/ 挑选/ 了/ 9/ 个/ 程序/ ,/ 其中/ SPECjvm2008/ 的/ 5/ 个/ 分别/ 为/ check/ ./ PepTest/ ./ checkMathFcts/ ,/ check/ ./ Main/ ./ runBench/ -/ mark/ ,/ startup/ ./ Main/ ./ harnessMain/ ,/ check/ ./ PepTest/ ./ -/ testIf/ ,/ check/ ./ PepTest/ ./ checkRemain/ -/ ders/ ;/ JDK/ 中/ 的/ 4/ 个/ 分别/ 为/ net/ ./ SocketPermission/ ./ getActions/ ,/ net/ ./ URLConnection/ ./ guessContentType/ -/ FromStream/ ,/ awt/ ./ AWTKeyStroke/ ./ getModifiersText/ ,/ awt/ ./ GridBag/ -/ Layout/ ./ alignOnBaseline/ (/ 依次/ 简记/ 为/ 程序/ No/ ./ 1/ ~/ No/ ./ 9/ )/ ./ 表/ 1/ 列出/ 了/ 这些/ 程序/ 的/ 相关/ 信息/ ,/ 包括/ 控制流/ 图/ 相关/ 参数/ 和/ LOC/ (/ LinesOfCode/ )/ ./ ①/ ②/ Page11/ 图/ 11/ 选择性/ 剖析/ 程序/ GetMid/ 表/ 1benchmark/ 程序/ 信息/ guessContentTypeFromStream/ 无环/ 21232646252057203358371991623/ 行/ 选择性/ 剖析/ ,/ 步骤/ 如下/ :/ 针对/ 这些/ 程序/ ,/ 我们/ 首先/ 使用/ 10/ 条/ 兴趣/ 路径/ 进/ (/ 1/ )/ 对于/ 每个/ 待测/ 程序/ 独立/ 地/ 随机/ 生成/ 10/ 组/ 兴趣/ 路径/ ;/ (/ 2/ )/ 对于/ 每组/ 兴趣/ 路径/ 使用/ 六种/ 剖析/ 方法/ 插装后/ ,/ 随机/ 生成/ 10/ 个/ 输入/ 运行/ 插装后/ 的/ 程序/ ;/ (/ 3/ )/ 统计/ 10/ 组/ 兴趣/ 路径/ 的/ 平均/ 剖析/ 效果/ ,/ 包括/ 时间/ 耗费/ timecost/ (/ 单位/ 为/ ms/ )/ 和/ 非/ 精确性/ inaccu/ -/ racy/ (/ 单位/ 为/ 百分比/ )/ ./ 实验/ 结果/ 如图/ 12/ 所示/ ,/ 其/ 结果/ 可以/ 总结/ 如下/ :/ (/ 1/ )/ PSP0/ 在/ 9/ 个/ 程序/ 中/ 的/ 3/ 个/ (/ No/ ./ 2/ ,/ No/ ./ 3/ 和/ No/ ./ 5/ )/ 上/ 取得/ 最高/ 效率/ ,/ 同时/ 其/ 平均/ 时间/ 也/ 最低/ ;/ PSP2/ 在/ 5/ 个/ 程序/ (/ No/ ./ 1/ ,/ No/ ./ 4/ ,/ No/ ./ 6/ ,/ No/ ./ 7/ 和/ No/ ./ 8/ )/ 上/ 取得/ 最高/ 效率/ ;/ 剩余/ 的/ 程序/ 在/ No/ ./ 9/ 上/ PrePP/ 效率/ 最高/ ;/ (/ 2/ )/ PSP0/ 的/ 平均/ 时间/ 耗费/ 较/ SPP/ 降低/ 79.83/ %/ ,/ 较/ PrePP/ 降低/ 80.10/ %/ ;/ PSP1/ 的/ 平均/ 时间/ 耗费/ 较/ SPP/ 增加/ 1.67/ %/ ,/ 较/ PrePP/ 增加/ 0.30/ %/ ;/ PSP2/ 的/ 平均/ 时间/ 耗费/ 较/ SPP/ 降低/ 16.30/ %/ ,/ 较/ PrePP/ 降低/ 17.42/ %/ ;/ PSP3/ 的/ 平均/ 时间/ 耗费/ 较/ SPP/ 降低/ 17.58/ %/ ,/ 较/ PrePP/ 降低/ 18.68/ %/ ;/ (/ 3/ )/ 在/ 不/ 精确度/ 方面/ ,/ SPP/ 在/ 程序/ No/ ./ 3/ ,/ No/ ./ 6/ 和/ No/ ./ 9/ 上/ 分别/ 有/ 10.00/ %/ ,/ 4.07/ %/ 和/ 88.68/ %/ 的/ 不/ 精确度/ ,/ 9/ 个/ 程序/ 上/ 平均/ 为/ 11.20/ %/ ;/ PrePP/ 在/ 9/ 个/ 程序/ 上均/ 存在/ 不/ 精确度/ ,/ 10/ %/ 至/ 86.68/ %/ 不/ 等/ ,/ 平均/ 为/ 44.07/ %/ ./ 为了/ 观察/ 不同/ 兴趣/ 路径/ 对/ 剖析/ 效率/ 的/ 影响/ ,/ 我们/ 对/ 每个/ 程序/ 采用/ 50/ 条/ 兴趣/ 路径/ ,/ 按照/ 上述/ 步骤/ 重新/ 进行/ 实验/ ,/ 结果/ 如图/ 13/ 所示/ ,/ 其中/ 结果/ 为/ :/ (/ 1/ )/ PSP0/ 在/ 9/ 个/ 程序/ 中/ 的/ 2/ 个/ (/ No/ ./ 3/ 和/ No/ ./ 5/ )/ 上/ 取得/ 最高/ 效率/ ,/ 同时/ 其/ 平均/ 时间/ 也/ 最低/ ;/ PSP2/ 在/ 4/ 个/ 程序/ (/ No/ ./ 1/ ,/ No/ ./ 6/ ,/ No/ ./ 7/ 和/ No/ ./ 8/ )/ 、/ PSP3/ 在/ 程序/ No/ ./ 2/ 、/ PrePP/ 在/ 2/ 个/ 程序/ (/ No/ ./ 4/ 和/ No/ ./ 9/ )/ 上/ 取得/ 最高/ 效率/ ;/ (/ 2/ )/ PSP0/ 的/ 平均/ 时间/ 耗费/ 较/ SPP/ 降低/ 16.76/ %/ ,/ 较/ PrePP/ 降低/ 12.60/ %/ ;/ PSP1/ 的/ 平均/ 时间/ 耗费/ 较/ Page12/ 图/ 12/ 无环/ 程序/ 上/ 使用/ 10/ 条/ 兴趣/ 路径/ 的/ 实验/ 结果/ SPP/ 增加/ 0.19/ %/ ,/ 较/ PrePP/ 增加/ 5.21/ %/ ;/ PSP2/ 的/ 平均/ 时间/ 耗费/ 较/ SPP/ 降低/ 4.63/ %/ ,/ 较/ PrePP/ 增加/ 0.14/ %/ ;/ PSP3/ 的/ 平均/ 时间/ 耗费/ 较/ SPP/ 降低/ 2.12/ %/ ,/ 较/ PrePP/ 增加/ 2.78/ %/ ;/ (/ 3/ )/ 在/ 不/ 精确度/ 方面/ ,/ SPP/ 在/ 程序/ No/ ./ 3/ 和/ No/ ./ 9/ 上/ 分别/ 有/ 30.00/ %/ 和/ 100.00/ %/ 的/ 不/ 精确度/ ,/ 平均/ 为/ 14.44/ %/ ;/ PrePP/ 在/ 8/ 个/ 程序/ (/ 除/ No/ ./ 1/ 之外/ )/ 上/ 存在/ 不/ 精确度/ ,/ 1.33/ %/ 至/ 100.00/ %/ 不/ 等/ ,/ 9/ 个/ 程序/ 上/ 的/ 平均值/ 为/ 25.20/ %/ ./ 通过/ 比较/ 图/ 12/ 和/ 图/ 13/ ,/ 可以/ 发现/ :/ (/ 1/ )/ 兴趣/ 路径/ 从/ 10/ 条/ 增加/ 到/ 50/ 条/ ,/ 所有/ 剖析/ 方法/ 的/ 平均/ 时间/ 耗费/ 均/ 有所增加/ ,/ 但是/ 幅度/ 不同/ :/ SPP/ 增加/ 了/ 6.86/ %/ ,/ PrePP/ 增加/ 了/ 0.40/ %/ ,/ PSP0/ ~/ PSP3/ 分别/ 增加/ 了/ 341.05/ %/ ,/ 5.31/ %/ ,/ 21.75/ %/ 和/ 26.90/ %/ ./ PrePP/ 的/ 时间/ 耗费/ 基本/ 不随/ 兴趣/ 路径/ 数目/ 变化/ ,/ 但是/ 其/ 不精确性/ 很/ 高/ ,/ 应用/ 价值/ 较/ 低/ ./ PSP0/ 的/ 时间/ 耗费/ 随/ 兴趣/ 路径/ 增多/ 呈现/ 最/ 明显/ 的/ 增加/ ,/ 所以/ 比较/ 适合/ 兴趣/ 路径/ 较少/ 的/ 情况/ ;/ (/ 2/ )/ PSP0/ 在/ 执行/ 时间/ 较长/ 的/ 程序/ 上/ 应用/ 效果/ 好/ ,/ 但是/ 其/ 时间/ 耗费/ 随着/ 兴趣/ 路径/ 的/ 数目/ 增长/ 最快/ ./ 这是/ 由于/ PSP0/ 对/ 兴趣/ 路径/ 的/ 检查/ 能力/ 最强/ ,/ 同时/ 其/ 检查/ 需要/ 的/ 时间/ 也/ 最/ 多/ ;/ (/ 3/ )/ SPP/ 和/ PrePP/ 存在/ 着/ 明显/ 的/ 不精确性/ ,/ 尤以/ PrePP/ 为/ 甚/ ./ 这/ 使得/ 其/ 剖析/ 结果/ 的/ 应用/ 价值/ 较/ 低/ ./ 随着/ 兴趣/ 路径/ 的/ 增多/ ,/ PrePP/ 的/ 不精确性/ 有着/ 明显/ 的/ 改善/ ,/ 但/ 依然/ 处于/ 较/ 高水平/ ;/ (/ 4/ )/ 在/ 无环/ 程序/ 上/ PSP1/ 应用/ 效果/ 不佳/ ,/ 这是/ 由于/ 整个/ 控制流/ 图/ 作为/ 一个/ RAS/ ,/ PSP1/ 仅/ 在/ 程序/ 终止/ 位置/ 进行/ 兴趣/ 路径/ 的/ 检测/ ,/ 检测/ 带来/ 的/ 收益/ 有限/ ;/ (/ 5/ )/ PSP2/ 在/ 执行/ 时间/ 较/ 短/ 的/ 程序/ 上/ 效果/ 较/ 好/ ,/ 这/ 一方面/ 是/ 由于/ PSP2/ 能够/ 保证/ 剖析/ 的/ 精确性/ ,/ 另一方面/ 由于/ PSP2/ 的/ “/ 动态/ 耗费/ ”/ 很小/ ,/ 且/ 不/ 随/ 兴趣/ 路径/ 增多/ 而/ 增长/ ,/ 表现/ 较为/ 稳定/ ./ PSP3/ 与/ 之/ 类似/ ./ Page13/ 图/ 13/ 无环/ 程序/ 上/ 使用/ 50/ 条/ 兴趣/ 路径/ 的/ 实验/ 结果/ 执行/ 时间/ ./ 4.2/ 循环/ 程序/ 由于/ SPP/ 和/ PrePP/ 不/ 剖析/ 循环/ ,/ 故/ 在/ 这部分/ 实验/ 中/ 我们/ 仅/ 比较/ PSP0/ ~/ PSP3/ ,/ 以/ 观察/ 其/ 效率/ ./ 目的/ 在于/ 回答/ 如下/ 问题/ Q/ :/ 面对/ 具体/ 应用/ 时/ ,/ 如何/ 根据/ 相关/ 参数/ 从/ PSP0/ ~/ PSP3/ 中/ 选择/ 合适/ 的/ 一种/ 方法/ 进行/ 剖析/ ?/ 我们/ 使用/ SPECjvm2008/ 中/ 的/ 部分/ 循环/ 程序/ 作为/ 测试程序/ ,/ 并/ 在/ 其/ 上/ 选择/ 不同/ 数量/ 的/ 兴趣/ 路径/ ,/ 观察/ 4/ 种/ PSP/ 方法/ 的/ 效果/ ./ 4.2/ ./ 1/ 针对/ 不同/ 兴趣/ 路径/ 的/ 实验/ 结果/ 4.1/ 节/ 的/ 实验/ 中/ 已/ 发现/ PI/ 集合/ 对/ PSP/ 效率/ 存在/ 影响/ ,/ 本/ 小节/ 的/ 实验/ 对此/ 做/ 进一步/ 的/ 探索/ ,/ 步骤/ 如下/ :/ 首先/ ,/ 我们/ 选择/ SPEC/ 中/ scimark/ 包中/ 的/ 6/ 个/ 程序/ 作为/ 基准/ 测试程序/ ,/ 并/ 随机/ 抽取/ 程序/ 的/ 部分/ 静态/ 路径/ 作为/ PI/ ;/ 然后/ ,/ 基于/ PI/ 对/ 测试程序/ 进行/ 剖析/ ;/ 最后/ ,/ 使用/ 随机/ 输入/ 执行/ 插装后/ 的/ 程序/ ,/ 并/ 收集/ 使用/ 10/ ~/ 100/ 条/ 兴趣/ 路径/ ,/ 实验/ 结果/ 如图/ 14/ 所示/ (/ 图中/ 时间/ 耗费/ 为/ 0/ 表示/ 执行/ 时间/ 小于/ 1ms/ ,/ 无法/ 检测/ )/ ,/ 从中/ 我们/ 可以/ 观察/ 到/ :/ (/ 1/ )/ 每种/ 情况/ 下/ ,/ 至少/ 有/ 一种/ PSP/ 的/ 实现/ 方式/ 耗费/ 低于/ PAP/ ,/ 这/ 意味着/ 合适/ 的/ 选择性/ 剖析/ 方法/ 可以/ 带来/ 效率/ 的/ 提高/ ;/ (/ 2/ )/ 程序/ measureLU/ 未有/ 明确/ 的/ 最优/ 剖析/ 方法/ ,/ 而/ 在/ 其他/ 5/ 个/ 程序/ 上/ ,/ 效率/ 最高/ 的/ 剖析/ 方法/ 依次/ (/ 从上到下/ 、/ 从左到右/ )/ 为/ :/ PSP2/ 、/ PSP0/ 、/ PSP3/ 、/ PSP0/ 和/ PSP0/ ./ 故/ 大多数/ 情况/ 下/ ,/ 一个/ 待/ 剖析/ 程序/ 对应/ 某种/ 最优/ 的/ 剖析/ 方法/ ,/ 该/ 方法/ 可以/ 适用/ 于/ 各种/ 兴趣/ 路径/ 的/ 情况/ ;/ PSP0/ 适用/ 于/ 大部分/ 循环/ 程序/ ;/ (/ 3/ )/ 在/ 程序/ nextDoubles/ 上/ ,/ 随着/ PI/ 的/ 增大/ ,/ PSP0/ ~/ PSP3/ 的/ 时间/ 耗费/ 均/ 越来越/ 多/ ,/ 部分/ 甚至/ 超过/ PAP/ 的/ 耗费/ ,/ 这种/ 情况/ 意味着/ 选择性/ 剖析/ 并未/ 带来/ 效率/ 的/ 提高/ ./ 相对而言/ ,/ PSP0/ 耗费/ 增长/ 得/ 最快/ 而/ PSP2/ 的/ 耗费/ 增长/ 最慢/ ./ 而/ 在/ 其他/ 程序/ 上/ ,/ 未有/ 明显/ Page14/ 图/ 14/ 使用/ PSP/ 剖析/ 循环/ 程序/ 的/ 时间/ 耗费/ 的/ 增长/ 趋势/ ./ 综合/ 图/ 12/ ~/ 图/ 14/ 的/ 实验/ 结果/ ,/ 可知/ PSP0/ 的/ 表现/ 明显/ 区别/ 于/ 其他/ 方法/ :/ 其/ 耗费/ 常常/ 为/ 最高/ 或/ 最低/ ./ 这是/ 由于/ PSP0/ 对/ PN/ 路径/ 的/ 检测/ 能力/ 和/ 检测/ 耗费/ 均/ 为/ 最高/ (/ 参见/ 图/ 4/ )/ ,/ 而/ 二者/ 之差/ 决定/ 了/ 剖析/ 的/ 效率/ ./ 检测/ 能力/ 带来/ 的/ 效率/ 提升/ 与/ 程序实现/ 相关/ ,/ 而/ 检测/ 耗费/ 仅/ 与/ 程序/ 抽象/ 结构/ (/ 控制流/ 图/ 、/ 兴趣/ 路径/ 等/ )/ 相关/ ./ 可以/ 推测/ PSP0/ 适用/ 于/ 程序结构/ 简单/ 、/ 执行/ 缓慢/ 的/ 情形/ ./ 对于/ 其他/ 方法/ 也/ 有/ 适用/ 的/ 剖析/ 场景/ ./ 下面/ 我们/ 通过/ 实验/ 结果/ 的/ 分类/ 统计/ 来/ 获得/ 更/ 一般/ 、/ 有效/ 的/ 结论/ ./ 4.2/ ./ 2/ 实验/ 结果/ 与/ 参数/ 关联性/ 分析/ 4.2/ ./ 1/ 小节/ 给出/ 了/ 实验/ 结果/ ,/ 并/ 分析/ 了/ 其/ 与/ 兴趣/ 路径/ 数量/ 的/ 关系/ ./ 为了/ 回答/ 前/ 文/ 论述/ 的/ 问题/ Q/ ,/ 这里/ 我们/ 列举/ 一些/ 较易/ 获得/ 的/ 应用/ 参数/ ,/ 统计/ 实验/ 结果/ 与/ 这些/ 参数/ 的/ 关联/ ,/ 以/ 找出/ 有效/ 的/ 参数/ 作为/ 选择/ PSP/ 方法/ 的/ 依据/ ./ 这些/ 参数/ 包括/ 程序/ 节点/ 总数/ 、/ 程序/ 循环/ 总数/ 、/ 循环体/ 节点/ 占/ 总结/ 点/ 的/ 比例/ 、/ RAS/ 个数/ 、/ 最大/ RAS/ 节点/ 数/ 以及/ 原始/ 程序/ 单次/ 执行/ 时间/ 6/ 种/ 参数/ ./ 对于/ 每种/ 参数/ ,/ 我们/ 以该/ 参数/ 在/ 实验/ 中/ 出现/ 的/ 取值/ 范围/ 的/ 中位数/ 为/ 基准/ ,/ 将/ 实验/ 结果/ 划分/ 为/ 相同/ 数量/ 的/ 两/ 部分/ ,/ 统计/ PSP0/ ~/ PSP3/ 在/ 两/ 部分/ 的/ 效率/ ./ 为/ 统一/ 起/ 见/ ,/ 我们/ 使用/ PSP0/ ~/ PSP3/ 插装后/ 执行/ 时间/ 相对/ 于/ 原始/ 程序执行/ 时间/ 的/ 百分比/ 作为/ 衡量标准/ ./ 结果/ 如图/ 15/ 所示/ ./ 从图/ 中/ 可以/ 看出/ :/ (/ 1/ )/ 在/ 6/ 种/ 参数/ 划分/ 的/ 12/ 个/ 类别/ 中/ ,/ PSP0/ 在/ 6/ 类中/ 效率/ 最优/ ,/ 其/ 选择/ 标准/ 明确/ :/ 当/ 节点/ 数/ 小于/ 20/ ,/ 或/ 原始/ 执行/ 时间/ 不/ 小于/ 500ms/ ,/ 或/ 环节/ 点/ 比例/ 小于/ 0.85/ ,/ 或/ RAS/ 个数/ 少于/ 2/ ,/ 或/ 循环/ 个数/ 不少/ 于/ 4/ 个/ ,/ 或/ 最大/ RAS/ 节点/ 数目/ 少于/ 7/ 个/ 的/ 情况/ 下均/ 应/ 选择/ PSP0/ ;/ (/ 2/ )/ 对于/ 其他/ 情况/ (/ 即/ PSP0/ 不/ 适用/ )/ ,/ 由于/ 没有/ 统一/ 的/ 最优/ 方法/ ,/ 我们/ 需要/ 对/ 参数/ 的/ 区分度/ 进行/ 排序/ ,/ 其/ 依据/ 为/ PSP1/ ~/ PSP3/ 中/ 次优/ 方法/ 与/ 最优/ 方法/ 的/ 效率/ 差值/ ,/ 该值/ 越大/ ,/ 说明/ 相应/ 的/ 参数/ 区分度/ 越/ 好/ ;/ (/ 3/ )/ 按照/ 图中/ 从左到右/ 、/ 从上到下/ 的/ 顺序/ ,/ 6/ 种/ 参数/ 的/ 区分度/ 依次/ 为/ 14.9/ %/ 、/ 38.5/ %/ 、/ 45.1/ %/ 、/ 43.2/ %/ 、/ 37.6/ %/ 和/ 46.5/ %/ ;/ (/ 4/ )/ 按照/ 参数/ 区分度/ 由大到/ 小/ ,/ 我们/ 对于/ 不/ 适用/ PSP0/ 的/ 6/ 类/ 情况/ 依/ 如下/ 优先/ 次序/ 进行/ 选择/ :/ ①/ 原始/ 执行/ 时间/ 小于/ 500ms/ 选择/ PSP2/ ;/ ②/ 循环/ 节点/ 比例/ 不/ 小于/ 0.85/ 选择/ PSP2/ ;/ ③/ RAS/ 个数/ 不少/ 于/ 2/ 个/ 选择/ PSP2/ ;/ ④/ 循环/ 个数/ 少于/ 4/ 个/ 选择/ PSP2/ ;/ ⑤/ 最大/ RAS/ 节点/ 数目/ 不少/ 于/ 7/ 个/ 选择/ PSP2/ ;/ ⑥/ 节点/ 数/ 不/ 小于/ 20/ 选择/ PSP1/ ./ 以上/ 即/ 为/ 从/ 实验/ 结果/ 中/ 获取/ 对/ 问题/ Q/ 的/ 答案/ ,/ 说明/ 在/ 选择性/ 剖析/ 中/ 如何/ 从/ PSP1/ ~/ PSP3/ 中/ 选择/ 一种/ 合适/ 的/ 方法/ 进行/ 应用/ :/ 根据/ 具体/ 应用/ 时/ 获得/ 的/ 参数/ 取值/ ,/ 从/ PSP1/ ~/ PSP3/ 之中/ 选择/ 适用/ 的/ 剖析/ 方法/ ,/ 如图/ 16/ 所示/ ./ 例如/ ,/ 在/ 剖析/ 某/ 程序/ 前/ ,/ 获知/ 该/ 程序/ CFG/ 节点/ 数为/ 24/ ,/ 则/ 应/ 选择/ PSP1/ 进行/ 剖析/ ;/ 若/ 同时/ 获知/ 该/ 程序/ 循环/ 节点/ 比例/ 为/ 0.9/ ,/ 那么/ 则/ 应/ 选择/ PSP2/ 进行/ 剖析/ ,/ 因为/ 后/ 一/ 参数/ 优先级/ 更高/ ./ 特别/ Page15/ 图/ 15/ 实验/ 结果/ 与/ 6/ 种/ 参数/ 关联性/ 分析/ 图/ 17/ 静态/ 耗费/ 地/ ,/ 如果/ 在/ 6/ 种/ 参数均/ 可/ 统计/ 的/ 情况/ 下/ ,/ 那么/ 仅/ 收集/ 原始/ 执行/ 时间/ 即可/ ,/ 因为/ 该/ 参数/ 优先级/ 最高/ ./ 4.3/ 静态/ 耗费/ 统计/ 由于/ 在/ 剖析/ 过程/ 中/ ,/ 插装/ 算法/ 只/ 需要/ 运行/ 一次/ ,/ 而/ 插/ 装后/ 的/ 程序/ 需要/ 反复/ 多次/ 执行/ ,/ 故/ 一般来说/ ,/ 动态/ 耗费/ 在/ 剖析/ 算法/ 的/ 效率/ 评价/ 中/ 占据/ 主导地位/ ./ 这里/ 我们/ 统计/ 前面/ 实验/ 所用/ 的/ 6/ 个/ 循环/ 程序/ ,/ 比较/ PSP0/ ~/ PSP3/ 在/ 各个/ 程序/ 上/ 的/ 静态/ 耗费/ ,/ 如图/ 17/ 所示/ ,/ 其中/ AlgorithmCost/ 指插装/ 算法/ 计算/ 探针/ 的/ 时间/ 耗费/ ,/ InstrumentationCost/ 指/ 使用/ 探针/ 完成/ 源码/ 文/ Page16/ 件/ 插装/ 的/ 时间/ 耗费/ ./ 从图/ 中/ 可以/ 看出/ :/ (/ 1/ )/ InstrumentationCost/ 远/ 小于/ AlgorithmCost/ ,/ 且/ 具有/ 一定/ 的/ 随机性/ ,/ 这/ 和/ 磁盘/ 的/ 文件/ 写入/ 机制/ 有关/ ;/ (/ 2/ )/ 随着/ 兴趣/ 路径/ 的/ 增多/ ,/ 算法/ 耗费/ 总体/ 上/ 呈现/ 增长/ 趋势/ ;/ (/ 3/ )/ PSP0/ ~/ PSP3/ 在/ 所有/ 程序/ 上/ 的/ 平均/ 算法/ 耗费/ 依次/ 为/ 28.7/ ms/ 、/ 27.9/ ms/ 、/ 38.1/ ms/ 和/ 53.4/ ms/ ,/ 即/ PSP1/ 算法/ 耗费/ 最低/ ,/ PSP0/ 次之/ ,/ PSP3/ 最高/ ./ 4.4/ 威胁/ 分析/ 种/ 内部/ 威胁/ :/ 下面/ 我们/ 对/ 实验/ 威胁/ 进行/ 分析/ ./ 其中/ 主要/ 有/ 两/ (/ 1/ )/ 实验/ 人员/ 偏向/ ./ 由于/ 实验/ 对象/ 的/ 选取/ 较为/ 客观/ ,/ 且/ 实验/ 结果/ 均/ 为/ 自动/ 生成/ ,/ 避免/ 了/ 实验/ 人员/ 的/ 偏向/ 影响/ 实验/ 结果/ ./ 在/ 未来/ 工作/ 中/ ,/ 使用/ 更/ 多/ 的/ 程序/ 进行/ 实验/ 将会/ 得出/ 更/ 客观/ 的/ 结论/ ;/ (/ 2/ )/ 实验/ 可靠性/ ./ 一方面/ ,/ 我们/ 使用/ 的/ 实验/ 平台/ 为/ Eclipse/ 和/ JVM/ ,/ 具有/ 较/ 高可靠性/ ;/ 另一方面/ ,/ 我们/ 对/ 部分/ 插装/ 结果/ 的/ 正确性/ 进行/ 了/ 人工/ 验证/ ,/ 使得/ 各种/ 剖析/ 方法/ 的/ 实现/ 也/ 具有/ 较/ 高可靠性/ ;/ (/ 2/ )/ 结论/ 可靠性/ ./ 从/ 实验/ 中/ 可以/ 看出/ ,/ 一种/ 选择性/ 剖析/ 方法/ 的/ 效果/ 在/ 一定/ 程度/ 上/ 依赖于/ 待/ 剖析/ 程序/ 的/ 结构/ ./ 实验/ 中/ 使用/ 了/ 多个/ 带/ 剖析/ 程序/ 并/ 从/ 其/ 结果/ 中/ 得出结论/ ,/ 该/ 结论/ 应当/ 适用/ 于/ 许多/ 结构/ ;/ (/ 3/ )/ 实验/ 对象/ 的/ 代表性/ ./ 在/ 实验/ 中/ 使用/ 了/ 来自/ 两个/ Benchmark/ 系统/ 的/ 15/ 个/ 程序/ ,/ 具有/ 较/ 高/ 代表性/ ./ 在/ 将来/ 工作/ 中/ ,/ 需要/ 更/ 广泛/ 的/ 实验/ 来/ 对/ PSP/ 效果/ 进行/ 检验/ ./ 5/ 相关/ 工作/ (/ 3/ )/ 度量/ 标准/ 的/ 合理性/ ./ 我们/ 采用/ 的/ “/ 时间/ 耗费/ ”/ 、/ “/ 不精确性/ ”/ 等/ 度量/ 标准/ 均/ 为/ 选择性/ 剖析/ 方法/ 的/ 主要/ 性能指标/ ,/ 其值/ 的/ 高低/ 直接/ 关系/ 到/ 某种/ 剖析/ 方法/ 是否/ 适合/ 应用/ ./ 而/ 外部/ 威胁/ 主要/ 有/ 3/ 种/ :/ (/ 1/ )/ 实验/ 环境/ ./ 我们/ 的/ 实验/ 步骤/ 遵循/ 选择性/ 路径/ 剖析/ 方法/ 的/ 步骤/ ./ 实验/ 步骤/ 与/ 实际/ 应用/ 步骤/ 的/ 唯一/ 区别/ 在于/ ,/ 实验/ 中/ 的/ 兴趣/ 路径/ 是/ 随机/ 生成/ 的/ ,/ 而/ 实际/ 应用/ 中/ 的/ 兴趣/ 路径/ 应当/ 由/ 用户/ 指定/ ;/ 除/ 第/ 2/ 节/ 讨论/ 的/ 剖析/ 方法/ 以外/ ,/ 其他/ 的/ 单/ 过程/ 表/ 2/ 单/ 过程/ 剖析/ 方法/ 分类/ 剖析/ 技术/ EPP/ [/ 18/ ]/ ExPP/ [/ 2/ ]/ kIPP/ [/ 19/ ]/ PAP/ [/ 17/ ]/ TPP/ [/ 21/ ]/ PraPP/ [/ 23/ ]/ SPP/ [/ 16/ ]/ PrePP/ [/ 15/ ]/ PSP/ 是否/ 剖析/ 循环/ 是否/ 完全/ 精确/ 剖析/ 方法/ 总结/ 如下/ ./ 在/ 非/ 循环/ 剖析/ 方面/ ,/ Joshi/ 等/ 人/ [/ 21/ ]/ 提出/ TPP/ (/ TargetedPathProfiling/ )/ 、/ 使用/ 明显/ 路径/ (/ “/ obviouspaths/ ”/ )/ 和/ 冷边/ (/ “/ coldedges/ ”/ )/ 来/ 提高/ EPP/ 的/ 效率/ ;/ Bond/ 等/ 人/ [/ 23/ ]/ 提出/ PraPP/ (/ PracticalPathProfiling/ )/ ,/ 改进/ 了/ TPP/ 的/ 效率/ ,/ 使用/ 边/ 的/ 剖析/ 结果/ 简化/ 路径/ 剖析/ ./ 在/ 循环/ 剖析/ 方面/ ,/ Tallam/ 等/ 人/ [/ 2/ ]/ 提出/ 一种/ 近似算法/ ExPP/ ,/ 可以/ 剖析/ 包含/ 循环体/ 二次/ 执行/ 的/ 路径/ ;/ 这种/ 方法/ 由/ Roy/ 等/ 人/ [/ 19/ ]/ 进一步/ 改进/ 为/ kIPP/ ,/ 可以/ 达到/ 执行/ 循环体/ 数次/ 路径/ 的/ 精确/ 剖析/ ./ 在/ 这些/ 剖析/ 技术/ 中/ ,/ 部分/ 方法/ 剖析/ 所有/ 的/ 可/ 剖析/ 路径/ [/ 2/ ,/ 17/ -/ 19/ ]/ ,/ 其他/ 方法/ 仅/ 剖析/ 部分/ 路径/ [/ 15/ -/ 16/ ,/ 21/ ,/ 23/ ]/ ./ 这些/ “/ 部分/ 剖析/ ”/ 技术/ 可/ 进一步/ 划分/ 为/ 两类/ :/ 剖析/ 的/ 路径/ 集合/ 是/ 基于/ 路径/ 频率/ 所/ 选择/ 的/ 还是/ 基于/ 用户/ 兴趣/ 所/ 选择/ 的/ ,/ 即/ 剖析/ “/ 热/ ”/ 路径/ (/ 执行/ 频率/ 高/ 的/ 路径/ )/ 或/ 剖析/ 兴趣/ 路径/ ./ 文献/ [/ 21/ ,/ 23/ ]/ 通过/ 删除/ 冷边/ 自动/ 的/ 从/ 剖析/ 中/ 删除/ 冷/ 路径/ ,/ 由于/ 剖析/ 路径/ 较/ 少/ ,/ 与/ EPP/ 相比/ 效率/ 有所提高/ ;/ 而/ 文献/ [/ 15/ -/ 16/ ]/ 接受/ 一个/ 兴趣/ 路径/ 集合/ 进行/ 剖析/ ,/ 来/ 提高/ 非/ 选择性/ 剖析/ 方法/ 的/ 效率/ ,/ 这/ 也/ 是/ 本文/ 方法/ PSP/ 的/ 目的/ ./ SPP/ 、/ PrePP/ 和/ PSP/ 的/ 区别/ 如下/ :/ (/ 1/ )/ SPP/ 给予/ 兴趣/ 路径/ 较大/ 的/ pathid/ 以/ 将/ 其/ 与非/ 兴趣/ 路径/ 相/ 区分/ ,/ 通过/ 减少/ 探针/ 数目/ 来/ 提高/ EPP/ 效率/ ;/ (/ 2/ )/ PrePP/ 给予/ 兴趣/ 路径/ 较/ 小/ 的/ pathid/ 以/ 压缩/ 编码/ 空间/ ,/ 通过/ 提高/ 存储/ 效率/ 来/ 提高/ EPP/ 效率/ ./ 文献/ [/ 15/ ]/ 中/ 同时/ 证明/ 了/ 兴趣/ 路径/ 和/ 非/ 兴趣/ 路径/ 的/ 编码/ 不/ 可能/ “/ 完美/ ”/ 分离/ (/ 完美/ 分离/ 即/ 通过/ 调整/ 边/ 的/ 权值/ 使/ 兴趣/ 路径/ 和/ 非/ 兴趣/ 路径/ 的/ 编码/ 属于/ 两个/ 不/ 相交/ 区间/ )/ ,/ 故/ 这种/ 方法/ 无法/ 在/ 压缩/ 编码/ 空间/ 的/ 同时/ ,/ 保证/ 兴趣/ 路径/ 编码/ 的/ 唯一性/ ;/ (/ 3/ )/ 不同于/ SPP/ 关注/ 于/ 删除/ 探针/ ,/ 也/ 不同于/ PrePP/ 关注/ 于/ 压缩/ 编码/ ,/ PSP/ 主要/ 使用/ 提前结束/ 的/ 思想/ 来/ 提高/ 剖析/ 效率/ ./ 同时/ ,/ 尽可能/ 的/ 减少/ 探针/ 和/ 压缩/ 编码/ 的/ 思想/ 也/ 存在/ 于/ PSP/ 各种/ 实现/ 方式/ 之中/ ./ 表/ 2/ 从/ 多个/ 方面/ 比较/ 了/ 单/ 过程/ 剖析/ 方法/ ,/ 并/ 显示/ 出/ 了/ PSP/ 与/ 其他/ 选择性/ 剖析/ 方法/ 相比/ 的/ 两个/ 优点/ :/ 支持/ 循环/ 路径/ 作为/ 兴趣/ 路径/ ,/ 并且/ 是/ 完全/ 精确/ 的/ ./ 实验/ 结果/ 也/ 验证/ 了/ 其/ 在/ 耗费/ 上/ 的/ 可行性/ ./ Page176/ 总结/ 与/ 展望/ 本文/ 的/ 主要/ 贡献/ 如下/ :/ 将/ SPP/ 改进/ 为/ ESPP/ ,/ 以/ 达到/ 无环图/ 上/ 的/ 精确/ 选择性/ 剖析/ ;/ 提出/ 了/ 使用/ 提前结束/ 的/ 方法/ 提高/ 选择性/ 剖析/ 效率/ 的/ 思想/ ;/ 由于/ 提前结束/ 需要/ 在/ 执行/ 中/ 检测/ 非/ 兴趣/ 路径/ ,/ 给出/ 了/ 3/ 种/ 检测/ 的/ 方法/ T1/ ~/ T3/ ,/ 具有/ 不同/ 的/ 耗费/ 和/ 收益/ ,/ 以/ 适用/ 不同/ 情况/ ;/ 基于/ 这/ 3/ 种/ 检测/ 方法/ ,/ 设计/ 了/ 4/ 种/ 能够/ 剖析/ 循环/ 的/ 选择性/ 剖析/ 方法/ PSP0/ ~/ PSP3/ ,/ 与/ 已有/ 方法/ 相比/ 具有/ 3/ 个/ 优势/ :/ 允许/ 循环/ 路径/ 作为/ 兴趣/ 路径/ 、/ 剖析/ 结构/ 完全/ 精确/ ,/ 且/ 实验/ 显示/ ,/ 在/ 大部分/ 实例/ 上/ ,/ PSP/ 比/ 其他/ 方法/ 的/ 效率/ 更高/ ;/ 绘制/ 了/ T1/ ~/ T3/ 、/ PSP0/ ~/ PSP3/ 之间/ 各种/ 耗费/ 的/ 偏序/ 关系/ ;/ 并/ 基于/ 实验/ 结果/ 给出/ 了/ 在/ 实际/ 应用/ 中/ 如何/ 选择/ 合适/ 的/ PSP/ 实现/ 方式/ 的/ 策略/ ./ 在/ 将来/ 的/ 研究/ 中/ ,/ 我们/ 可以/ 按照/ 如下/ 方向/ 进一步/ 改进/ PSP/ :/ 更/ 多/ 的/ 非/ 兴趣/ 路径/ 检测/ 方法/ ,/ 如/ 使用/ 路径/ 片段/ (/ 不/ 局限于/ RAS/ 之中/ )/ 进行/ 检测/ ;/ 更广/ 的/ 应用/ 场景/ ,/ 如/ 将/ 之/ 扩展/ 至/ 过程/ 间/ 剖析/ 之中/ ,/ 用来/ 剖析/ 用户/ 感兴趣/ 的/ 特定/ 方法/ 调用/ 及/ 序列/ 等/ ./ 

