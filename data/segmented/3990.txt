Page1/ 基于/ 组织/ 的/ 分布式/ 开放系统/ 自/ 适应/ 机制/ 孙跃坤/ 毛/ 新军/ 尹/ 俊文/ (/ 国防科学技术大学/ 计算机/ 学院/ 长沙/ 410073/ )/ 摘要/ 随着/ 分布式/ 开放系统/ 的/ 涌现/ ,/ 其/ 呈现出/ 系统/ 环境/ 的/ 动态性/ 和/ 开放性/ 、/ 系统/ 成员/ 的/ 自主性/ 和/ 异构/ 性/ 、/ 系统/ 自身/ 的/ 分布/ 性/ 和/ 层次性/ 以及/ 明显/ 的/ 社会/ 组织/ 特征/ ,/ 给/ 自/ 适应/ 技术/ 带来/ 了/ 新/ 的/ 挑战/ ,/ 需要/ 跨跃/ 成员/ 层面/ (/ 单个/ 系统/ )/ 在/ 组织/ 层面/ (/ 系统/ 之间/ )/ 进行/ 发散/ 式/ 自/ 适应/ 调整/ 以及/ 与/ 之/ 对应/ 的/ 软件/ 抽象/ ./ 然而/ ,/ 现阶段/ 大多/ 自/ 适应/ 技术/ 针对/ 单个/ 系统/ 采用/ 对象/ 范型/ 和/ 集中控制/ 的/ 方式/ ./ 因此/ 文中/ 借鉴/ 社会学/ 、/ 组织学/ 思想/ ,/ 采用/ 组织/ 范型/ 对系统/ 组织/ 层面/ 进行/ 抽象/ ,/ 提出/ 了/ 系统/ 的/ 组织/ 元/ 模型/ ,/ 使得/ 基于/ 组织/ 的/ 抽象/ 范型/ 与/ 系统/ 的/ 组织/ 层面/ 相对/ 应/ ,/ 缩减/ 了/ 问题/ 空间/ 与/ 解/ 空间/ 的/ 鸿沟/ ,/ 提出/ 了/ 支持/ 组织/ 自/ 适应/ 的/ 动态/ 重组/ 机制/ ,/ 使得/ 组织/ 成为/ 具有/ 自/ 适应能力/ 的/ 一阶/ 实体/ ,/ 从而/ 实现/ 系统/ 组织/ 层面/ 发散/ 式/ 的/ 自/ 适应/ ./ 分别/ 利用/ 上下文/ (/ Context/ )/ 和/ 策略/ (/ Strategy/ )/ 对/ 组织/ 的/ 监控/ 逻辑/ 和/ 自/ 适应/ 逻辑/ 规约/ ,/ 通过/ 把/ 上下文/ 、/ 策略/ 同/ 组织/ 显式/ 地/ 分离/ ,/ 提高/ 了/ 系统/ 的/ 模块性/ 和/ 可维护性/ ./ 最后/ 通过/ 案例/ 分析/ 验证/ 了/ 文中/ 提出/ 的/ 组织/ 元/ 模型/ 和/ 动态/ 重组/ 机制/ 的/ 有效性/ ./ 关键词/ 自/ 适应/ ;/ 分布式/ 开放系统/ ;/ 组织/ 1/ 引言/ 软件/ 自/ 适应/ 是/ 指/ 软件/ 在/ 运行/ 过程/ 中/ 能够/ 根据/ 环境/ 和/ 自身/ 的/ 变化/ 进行/ 动态/ 调整/ [/ 1/ ]/ ./ 目前/ 对/ 自/ 适应/ 软件/ 的/ 研究/ 已/ 成为/ 软件工程/ 领域/ 的/ 一个/ 热点/ ,/ 引起/ 工业界/ 和/ 学术界/ 的/ 广泛/ 兴趣/ ./ 随着/ 近年来/ 计算机网络/ 尤其/ 是/ 互联网/ 的/ 日益/ 普及/ 和/ 广泛应用/ ,/ 越来越/ 多/ 的/ 软件系统/ 运行/ 和/ 部署/ 在/ 互联网/ 之上/ ,/ 出现/ 了/ 一大批/ 新/ 的/ 软件/ 形态/ ,/ 比如/ 超大规模/ 软件系统/ (/ Ultra/ -/ Large/ -/ Scalesystems/ ,/ ULS/ )/ 、/ 数字/ 物理/ 系统/ (/ Cyber/ -/ PhysicalSystems/ ,/ CPS/ )/ 和/ 网构/ 软件/ (/ Internetware/ )/ 等/ ./ 目前/ 这/ 类/ 系统/ 已经/ 在/ 日常生活/ 中/ 普遍存在/ ,/ 比如/ 电子商务系统/ 、/ 旅游/ 管理系统/ 、/ 智能/ 交通系统/ 等/ ./ 它们/ 表现/ 出/ 以下/ 特点/ :/ 系统/ 运行/ 环境/ 的/ 动态性/ 和/ 开放性/ 、/ 系统/ 组成/ 单元/ 的/ 自主性/ 和/ 异构/ 性/ 、/ 系统/ 自身/ 的/ 分布/ 性/ 和/ 层次性/ ./ 我们/ 把/ 具有/ 上述/ 特征/ 的/ 这类/ 系统/ 称为/ 分布式/ 开放系统/ ,/ 它/ 一般/ 具有/ 明显/ 的/ 社会/ 组织/ 特征/ ,/ 给/ 自/ 适应/ 带来/ 了/ 以下/ 新/ 的/ 挑战/ :/ (/ 1/ )/ 由于/ 系统/ 的/ 层次性/ ,/ 系统/ 成员/ 本身/ 也/ 可以/ 是/ 一个/ 独立/ 的/ 系统/ ,/ 而且/ 系统/ 也/ 可以/ 作为/ 其它/ 系统/ 的/ 成员/ ./ 因此/ 我们/ 把/ 系统/ 成员/ 理解/ 为/ 单一/ 系统/ ,/ 把/ 由/ 大量/ 独立/ 的/ 系统/ 成员/ 组成/ 的/ 系统/ 理解/ 为/ 组织/ ./ 由于/ 系统/ 环境/ 的/ 动态性/ 、/ 开放性/ ,/ 设计/ 态/ 参与/ 系统/ 的/ 成员/ 具有/ 不确定性/ ./ 运行/ 态/ ,/ 系统/ 成员/ 和/ 环境/ 的/ 动态变化/ 将/ 引起/ 系统/ 自/ 适应/ ./ 由于/ 系统/ 成员/ 的/ 自主性/ 和/ 异构/ 性/ ,/ 系统/ 并/ 不能/ 对/ 其/ 成员/ 进行/ 完全/ 控制/ ,/ 因此/ 需要/ 跨跃/ 系统/ 成员/ 层面/ 在/ 更/ 高/ 的/ 抽象层次/ (/ 组织/ 层面/ )/ 进行/ 自/ 适应/ 调整/ ./ (/ 2/ )/ 由于/ 系统/ 的/ 分布/ 性/ ,/ 不/ 可能/ 建立/ 系统/ 的/ 全局/ 模型/ ,/ 实现/ 集中控制/ ,/ 而且/ 在/ 动态/ 开放/ 环境/ 下/ ,/ 集中控制/ 容易/ 出现/ 单点/ 失效/ ,/ 因此/ 需要/ 发散/ 式/ 的/ 自/ 适应/ 调整/ ./ (/ 3/ )/ 由于/ 系统/ 表现/ 出/ 明显/ 的/ 社会/ 组织/ 特征/ ,/ 而且/ 需要/ 在/ 组织/ 层面/ 进行/ 自/ 适应/ 调整/ ,/ 为了/ 有效/ 地/ 对系统/ 进行/ 分析/ 、/ 建模/ ,/ 需要/ 减小/ 问题/ 空间/ 与/ 解/ 空间/ 的/ 鸿沟/ ,/ 提出/ 与/ 之/ 对应/ 的/ 软件/ 抽象/ 范型/ ./ 目前/ 人们/ 已经/ 从/ 不同/ 的/ 视点/ 对/ 自/ 适应/ 软件/ 进行/ 研究/ ,/ 取得/ 了/ 一系列/ 成果/ [/ 1/ ]/ ./ 但/ 主要/ 是/ 针对/ 单个/ 系统/ 采用/ 对象/ 范型/ 和/ 集中控制/ 的/ 方式/ ./ 比如/ 目前/ 研究/ 比较/ 多/ 的/ 基于/ 体系结构/ 的/ 自/ 适应/ [/ 2/ ]/ ,/ 通过/ 控制中心/ 对/ 运行/ 态/ 软件体系结构/ 的/ 构件/ 、/ 连接子/ 的/ 调整/ 实现/ 系统/ 的/ 自/ 适应/ ./ 虽然/ 基于/ 体系结构/ 的/ 自/ 适应/ 构造/ 技术/ 可以/ 实现/ 软件/ 的/ 自/ 适应/ ,/ 但/ 一般/ 基于/ 集中/ 的/ 控制中心/ [/ 3/ -/ 5/ ]/ ,/ 因此/ 不能/ 满足/ 分布式/ 开放系统/ 的/ 发散/ 式/ 自/ 适应/ 需求/ ./ 而且/ 体系结构/ 是/ 基于/ 构件/ 和/ 连接子/ 的/ 抽象/ ,/ 在/ 软件设计/ 阶段/ 构件/ 、/ 连接子/ 已经/ 确定/ ,/ 运行/ 阶段/ 通过/ 对/ 构件/ 和/ 连接子/ 进行/ 完全/ 控制/ 实现/ 自/ 适应/ 调整/ ,/ 这/ 不/ 符合/ 分布式/ 开放系统/ 个体/ 自主性/ 、/ 异构/ 性/ 以及/ 在/ 软件设计/ 阶段/ 个体/ 的/ 不确定性/ ./ 此外/ 目前/ 基于/ 体系结构/ 的/ 自/ 适应/ 研究/ 主要/ 是/ 针对/ 单个/ 软件系统/ [/ 6/ ]/ ,/ 而/ 由于/ 分布式/ 开放系统/ 的/ 特点/ ,/ 需要/ 在/ 抽象层次/ 更/ 高/ 的/ 组织/ 层面/ 进行/ 自/ 适应/ 调整/ ./ Agent/ 具有/ 自主性/ 、/ 反应/ 性/ 、/ 社会性/ 等/ 特点/ ,/ 被/ 认为/ 是/ 开发/ 自/ 适应/ 软件/ 的/ 有效/ 范型/ [/ 7/ ]/ ./ 由于/ Agent/ 粒度/ 太小/ ,/ 为了/ 满足/ 大规模/ 复杂/ 系统/ 的/ 需求/ ,/ 学术界/ 提出/ 了/ 基于/ 组织/ 的/ Multi/ -/ AgentSystems/ (/ MAS/ )/ [/ 8/ ]/ ./ 目前/ 基于/ 组织/ 的/ MAS/ 主要/ 关注/ MAS/ 需要/ 从以/ Agent/ 为/ 中心/ 转移/ 到/ 以/ 组织/ 为/ 中心/ [/ 9/ ]/ ,/ 但是/ 如何/ 支持/ 在/ 运行/ 过程/ 中/ 对/ 组织/ 进行/ 动态/ 调整/ ,/ 比如/ 调整/ 什么/ (/ What/ )/ 、/ 什么/ 时间/ 调整/ (/ When/ )/ 、/ 如何/ 调整/ (/ How/ )/ 并/ 没有/ 进行/ 深入/ 的/ 研究/ ./ 因此/ 本文/ 针对/ 分布式/ 开放/ 系统对/ 自/ 适应/ 提出/ 的/ 新/ 挑战/ ,/ 需要/ 跨跃/ 单个/ 系统/ 在/ 组织/ 层面/ 进行/ 发散/ 式/ 自/ 适应/ 调整/ 以及/ 与/ 之/ 对应/ 的/ 软件/ 抽象/ 范型/ ./ 通过/ 借鉴/ 新颖/ 的/ 社会学/ 、/ 组织学/ 思想/ ,/ 利用/ 组织/ 范型/ 对系统/ 进行/ 抽象/ ,/ 提出/ 系统/ 的/ 组织/ 元/ 模型/ ./ 由于/ 采用/ 了/ 组织/ 范型/ ,/ 提高/ 了/ 抽象层次/ ,/ 缩小/ 了/ 问题/ 空间/ 与/ 解/ 空间/ 的/ 鸿沟/ ,/ 可以/ 实现/ 对系统/ 的/ 有效/ 自然/ 建模/ ,/ 提出/ 了/ 支撑/ 组织/ 自/ 适应/ 的/ 动态/ 重组/ 机制/ ,/ 使/ 组织/ 成为/ 具有/ 自/ 适应能力/ 的/ 一阶/ 实体/ ,/ 实现/ 系统/ 在/ 组织/ 层面/ 发散/ 式/ 自/ 适应/ ./ 通过/ 把/ 组织/ 、/ 上下文/ 和/ 策略/ 显式/ 地/ 分离/ ,/ 提高/ 了/ 系统/ 的/ 模块化/ 程度/ ,/ 简化/ 了/ 系统/ 的/ 开发/ 维护/ ./ 本文/ 第/ 2/ 节/ 介绍/ 自/ 适应/ 系统/ 的/ 组织/ 元/ 模型/ ;/ 在/ 此基础/ 上/ ,/ 第/ 3/ 节/ 描述/ 组织/ 的/ 动态/ 重组/ 机制/ ;/ 第/ 4/ 节/ 介绍/ 基于/ 策略/ 的/ 自/ 适应/ 系统/ ;/ 第/ 5/ 节/ 通过/ 案例/ 分析/ 验证/ 本文/ 提出/ 的/ 元/ 模型/ 和/ 自/ 适应/ 机制/ 的/ 有效性/ ;/ 第/ 6/ 节对/ 相关/ 工作/ 进行/ 了/ 介绍/ 和/ 比较/ ,/ 最后/ 第/ 7/ 节对/ 全文/ 进行/ 总结/ ,/ 讨论/ 下/ 一步/ 的/ 研究/ 方向/ ./ 2/ 自/ 适应/ 系统/ 的/ 组织/ 元/ 模型/ 由于/ 分布式/ 开放系统/ 给/ 自/ 适应/ 带来/ 新/ 的/ 需求/ ,/ 需要/ 在/ 组织/ 层面/ 进行/ 自/ 适应/ 调整/ ,/ 本/ 节/ 通过/ 借鉴/ 社会学/ 、/ 组织学/ 思想/ ,/ 采用/ 组织/ 范型/ 对系统/ 进行/ 抽象/ ,/ 提出/ 了/ 系统/ 的/ 组织/ 元/ 模型/ ./ 首先/ ,/ 介绍/ 一个/ 分布式/ 开放系统/ 案例/ —/ —/ —/ 自/ 适应/ 电子商务系统/ ,/ 这个/ 案例/ 将/ 贯穿/ 全文/ ;/ 其次/ ,/ 对/ 社会/ 组织/ 抽象/ 和/ 思想/ 进行/ 简要/ 介绍/ ;/ 最后/ ,/ 借鉴/ 社会学/ 、/ 组织学/ 思想/ ,/ 提出/ 自/ 适应/ 系统/ Page3/ 的/ 组织/ 元/ 模型/ ./ 2.1/ 自/ 适应/ 电子商务系统/ 随着/ 互联网/ 的/ 快速/ 发展/ ,/ 电子商务系统/ 日益/ 普及/ ,/ 如图/ 1/ 所示/ ,/ 它/ 由/ 分布/ 在/ 整个/ 网络/ 环境/ 上/ 的/ 大量/ 成员/ 组成/ ,/ 比如/ :/ 顾客/ 、/ 商家/ 、/ 银行/ 和/ 物流/ 公司/ 等/ ,/ 可以/ 实现/ 大/ 范围/ 内/ 的/ 网上交易/ ,/ 显然/ 整个/ 系统/ 具有/ 明显/ 的/ 社会/ 组织/ 特征/ ./ 电子商务系统/ 分布/ 在/ 整个/ 网络/ 环境/ 下/ ,/ 其/ 环境/ 是/ 动态变化/ 的/ ,/ 比如/ 带宽/ 降低/ 、/ 节点/ 故障/ 等/ ,/ 因此/ 系统/ 环境/ 具有/ 动态性/ ./ 而且/ 系统/ 环境/ 具有/ 开放性/ ,/ 比如/ 顾客/ 、/ 商家/ 可以/ 动态/ 加入/ 、/ 退出/ 系统/ ./ 图/ 1/ 电子商务系统/ 示意图/ 由于/ 电子商务系统/ 环境/ 的/ 动态性/ 和/ 开放性/ ,/ 系统/ 在/ 运行/ 过程/ 中/ 需要/ 根据/ 环境/ 和/ 成员/ 的/ 动态变化/ 进行/ 自/ 适应/ 调整/ ./ 由于/ 系统/ 成员/ 具有/ 自主性/ 、/ 异构/ 性/ ,/ 系统/ 并/ 不能/ 对/ 其/ 进行/ 完全/ 控制/ ,/ 因此/ 需要/ 跨跃/ 个体/ 层面/ 在/ 组织/ 层面/ 进行/ 自/ 适应/ 调整/ ./ 在/ 分布/ 环境/ 下/ ,/ 不/ 可能/ 有/ 集中/ 的/ 控制中心/ ,/ 需要/ 发散/ 式/ 的/ 自/ 适应/ ,/ 每个/ 组织/ 都/ 可以/ 根据/ 环境/ 和/ 成员/ 的/ 变化/ 进行/ 自/ 适应/ 调整/ ./ 组织/ 的/ 自/ 适应/ 调整/ 具体表现/ 为/ 以下/ 3/ 种/ 类型/ :/ (/ 1/ )/ 组织/ 成员/ 调整/ ./ 比如/ ,/ 某个/ 银行/ 成员/ 动态/ 退出/ 系统/ ,/ 则/ 需要/ 寻找/ 新/ 的/ 银行/ 成员/ 动态/ 加入/ 提供/ 支付/ 服务/ ./ (/ 2/ )/ 组织/ 结构调整/ ./ 比如/ ,/ 随着/ 越来越/ 多/ 的/ 顾客/ 、/ 商家/ 加入/ 系统/ ,/ 系统/ 的/ 交易量/ 逐渐/ 增大/ ,/ 银行/ 支付/ 已经/ 成为/ 瓶颈/ ,/ 则/ 需要/ 动态/ 增加/ 银行/ 职位/ 并/ 吸收/ 新/ 的/ 银行/ 成员/ ./ (/ 3/ )/ 组织/ 间/ 关系/ 调整/ ./ 比如/ ,/ 在/ 系统/ 运行/ 过程/ 中/ ,/ 随着/ 组织/ 内/ 成员/ 不断/ 减少/ ,/ 当/ 减少/ 到/ 一定/ 数量/ 后/ ,/ 将/ 不能/ 发挥/ 系统资源/ 的/ 最大/ 效益/ ,/ 因此/ 需要/ 和/ 相邻/ 的/ 组织/ 进行/ 合并/ ./ 反之/ ,/ 随着/ 组织/ 内/ 成员/ 逐渐/ 增多/ ,/ 当/ 达到/ 一定/ 数量/ 后/ ,/ 将/ 影响/ 系统/ 的/ 效率/ ,/ 因此/ 需要/ 对/ 组织/ 进行/ 拆分/ ./ 2.2/ 社会/ 组织/ 抽象/ 和/ 思想/ 人类/ 社会/ 组织/ 是/ 一个/ 复杂/ 系统/ ,/ 具有/ 动态性/ 、/ 分系统/ 成员/ 具有/ 自主性/ 和/ 异构/ 性/ ./ 比如/ 系统/ 中有/ 很多/ 商家/ ,/ 他们/ 之间/ 相互/ 独立/ ,/ 销售/ 的/ 商品/ 、/ 价格/ 、/ 促销/ 信息/ 等/ 各不相同/ ,/ 可以/ 自主/ 决定/ 加入/ 系统/ 和/ 退出/ 系统/ ./ 系统/ 具有/ 分布/ 性/ 和/ 层次性/ ./ 电子商务系统/ 部署/ 在/ 整个/ 网络/ 环境/ 下/ ,/ 呈现出/ 分布/ 性/ 特点/ ./ 其/ 系统/ 成员/ 本身/ 也/ 可以/ 是/ 一个/ 独立/ 的/ 系统/ 由/ 其他/ 成员/ 组成/ ,/ 呈现出/ 层次性/ 特点/ ./ 比如/ ,/ 电子商务系统/ 的/ 物流/ 公司/ 本身/ 也/ 是/ 由/ 很多/ 成员/ 组成/ ,/ 电子商务系统/ 本身/ 也/ 可以/ 作为/ 其它/ 系统/ 的/ 一个/ 成员/ ./ 我们/ 把/ 这种/ 由/ 大量/ 独立自主/ 异构/ 成员/ 构成/ 的/ 系统/ 理解/ 为/ 组织/ ./ 布性/ 、/ 开放性/ 和/ 适应性/ 等/ 特征/ ,/ 呈现出/ 与/ 分布式/ 开放系统/ 相似/ 的/ 特点/ ./ 此外/ ,/ 目前/ 很多/ 软件系统/ 为/ 一个/ 组织/ 开发/ ,/ 系统/ 自身/ 表现/ 出/ 很/ 强/ 的/ 社会/ 组织/ 特征/ ,/ 因此/ 软件系统/ 会/ 遇到/ 在/ 人类/ 社会/ 组织/ 中/ 曾经/ 遇到/ 的/ 问题/ ./ 由于/ 人类/ 社会/ 本身/ 就/ 具有/ 自/ 适应能力/ ,/ 目前/ 人们/ 已经/ 从/ 不同/ 的/ 视角/ 进行/ 了/ 研究/ ,/ 获得/ 了/ 大量/ 的/ 研究成果/ ,/ 比如/ 组织/ 理论/ (/ OrganizationTheory/ )/ 、/ 计算/ 组织/ 理论/ (/ ComputationalOrganizationTheory/ )/ 和/ 权变/ 理论/ (/ ContingencyTheory/ )/ ./ 这些/ 已有/ 的/ 成果/ 将/ 为/ 自/ 适应/ 系统/ 的/ 研究/ 提供/ 重要/ 参考/ ./ 因此/ 采用/ 社会/ 组织/ 思想/ 对/ 分布式/ 开放系统/ 抽象/ ,/ 可以/ 独立/ 于/ 具体/ 技术/ 和/ 平台/ ,/ 充分/ 借鉴/ 人类/ 社会学/ 的/ 各种/ 自/ 适应/ 机制/ ,/ 有助于/ 从/ 新/ 的/ 视点/ 来/ 研究/ 和/ 分析/ 自/ 适应/ ,/ 更加/ 适合/ 于/ 本文/ 所/ 研究/ 的/ 问题/ ./ 目前/ 社会学/ 、/ 组织学/ 思想/ 已经/ 在/ 特定/ 领域/ 的/ 自/ 适应/ 系统/ 中/ 得到/ 应用/ ,/ 比如/ 仓库/ 系统/ [/ 10/ ]/ ./ 但/ 这些/ 大都/ 是/ 与/ 领域/ 相关/ 的/ ,/ 本文/ 从/ 软件工程/ 视点/ ,/ 提出/ 领域/ 无关/ 的/ 自/ 适应/ 系统/ 组织/ 元/ 模型/ ./ 2.3/ 自/ 适应/ 系统/ 组织/ 元/ 模型/ 针对/ 分布式/ 开放系统/ 的/ 自/ 适应/ 需求/ ,/ 借鉴/ 社会/ 组织学/ 思想/ ,/ 采用/ 组织/ 范型/ 对/ 自/ 适应/ 系统/ 进行/ 抽象/ ,/ 提出/ 了/ 系统/ 的/ 组织/ 元/ 模型/ 如图/ 2/ 所示/ ./ 组织/ (/ Organ/ -/ ization/ )/ 作为/ 设计/ 态一阶/ 实体/ ,/ 运行/ 态/ 实例/ 化为/ Page4Group/ ./ 组织/ 有/ 一系列/ 角色/ (/ Role/ )/ 组成/ ,/ 运行/ 态/ 实例/ 化为/ 职位/ (/ Position/ )/ ,/ Agent/ 通过/ 动态/ 绑定/ 职位/ 加入/ Group/ ./ 由于/ 组织/ 需要/ 根据/ 所处/ 的/ 环境/ 以及/ 内部/ Agent/ 的/ 动态变化/ 进行/ 自/ 适应/ 调整/ ,/ 通过/ 上下文/ (/ Context/ )/ 显式/ 地/ 对/ 组织/ 的/ 环境/ 以及/ 内部/ Agent/ 状态/ 进行/ 描述/ ./ 组织/ 根据/ 上下文/ 的/ 变化/ 通过/ 动态/ 重组/ 机制/ 进行/ 自/ 适应/ 调整/ ./ 下面/ 对/ 组织/ 元/ 模型/ 的/ 各/ 组成/ 元素/ 以及/ 它们/ 之间/ 的/ 关系/ 进行/ 详细描述/ ./ (/ 1/ )/ 组织/ (/ Organization/ )/ ./ 处在/ 特定/ 环境/ 中/ 由/ 一系列/ 相互/ 交互/ 角色/ (/ Role/ )/ 完成/ 其/ 目标/ 的/ 抽象/ 行为/ 实体/ ./ 组织/ 包含/ 一系列/ 角色/ ,/ 并/ 对/ 其/ 进行/ 约束/ ./ 比如/ 案例/ 中/ ,/ 可以/ 把/ 电子商务系统/ 抽象/ 为/ 一个/ 组织/ ,/ 它/ 由/ 顾客/ 、/ 商家/ 、/ 银行/ 和/ 物流/ 4/ 个/ 角色/ 组成/ ,/ 通过/ 他们/ 之间/ 的/ 相互/ 交互/ 实现/ 网上交易/ ,/ 同时/ 还/ 可以/ 定义/ 一些/ 约束/ ,/ 比如/ 组织/ 中/ 必须/ 有/ 商家/ 存在/ ,/ 顾客/ 购物/ 请求/ 响应/ 时间/ 必须/ 小于/ 3s/ 等/ ./ (/ 2/ )/ Group/ ./ 组织/ 在/ 运行/ 态/ 实例/ 化/ ./ 同一/ 组织/ 可以/ 实例/ 化为/ 多个/ 独立/ 的/ Group/ ,/ 形成/ Group/ 间/ 的/ 对/ 等/ 结构/ ./ Group/ 可以/ 和/ Agent/ 一样/ 动态/ 绑定/ 职位/ 加入/ 其它/ Group/ ,/ 形成/ Group/ 间/ 的/ 层次结构/ ./ 比如/ 案例/ 中/ ,/ 商家/ 可以/ 作为/ 一个/ Agent/ 动态/ 加入/ 电子商务/ Group/ ,/ 电子商务/ Group/ 本身/ 又/ 可/ 作为/ 一个/ 独立/ 成员/ 加入/ 其它/ Group/ ./ (/ 3/ )/ 角色/ (/ Role/ )/ ./ 指/ 组织/ 为/ 完成/ 其/ 目标/ 而/ 对/ Agent/ 职责/ 抽象/ 表示/ ,/ 包括/ Agent/ 在/ 组织/ 中/ 拥有/ 的/ 行为/ 和/ 需要/ 感知/ 的/ 上下文/ ,/ 反映/ 了/ Agent/ 在/ 组织/ 中/ 的/ 地位/ ./ 比如/ 以/ 顾客/ 角色/ 为例/ ,/ 它/ 描述/ 了/ Agent/ 在/ 组织/ 中/ 拥有/ 购买/ 商品/ 行为/ ,/ 需要/ 感知/ 的/ 上下文/ 有/ 商品销售/ 信息/ 、/ 购买/ 商品/ 的/ 响应/ 时间/ 等/ ./ (/ 4/ )/ 职位/ (/ Position/ )/ ./ 角色/ (/ Role/ )/ 在/ 特定/ Group/ 实例/ 化/ ,/ 一个/ 角色/ 可以/ 实例/ 化成/ 多个/ 职位/ ,/ Group/ 可以/ 根据/ 环境/ 的/ 变化/ 对/ 职位/ 进行/ 动态/ 调整/ ./ 比如/ 在/ 案例/ 中/ 包含/ 很多/ 商家/ ,/ Group/ 为/ 每个/ 商家/ 实例/ 化/ 一个/ 职位/ ,/ 如果/ 某个/ 商家/ 拒绝/ 提供/ 商品销售/ 服务/ ,/ 则/ Group/ 可以/ 把/ 该/ 职位/ 删除/ ,/ 从而/ 使/ 商家/ 离开/ Group/ ./ (/ 5/ )/ Agent/ ./ 开放系统/ 中/ 自主/ 行为/ 实体/ ,/ 可以/ 自主/ 决定/ 需要/ 加入/ 的/ Group/ 以及/ 绑定/ 的/ 职位/ ./ 比如/ ,/ 案例/ 中/ 存在/ 的/ 大量/ 商家/ Agent/ ,/ 可以/ 动态/ 加入/ Group/ 绑定/ 商家/ 职位/ ./ (/ 6/ )/ 动态/ 绑定/ (/ DynamicBind/ )/ ./ Agent/ 通过/ 动态/ 绑定/ Group/ 的/ 职位/ 加入/ 到/ Group/ 中/ ,/ 履行/ 角色/ 规定/ 的/ 职责/ ./ Agent/ 可以/ 同时/ 绑定/ 多个/ 职位/ ,/ 但是/ 每个/ 职位/ 只/ 允许/ 一个/ Agent/ 绑定/ ./ 对于/ 同一/ Group/ 内/ 同一个/ 角色/ 实例/ 化/ 的/ 多个/ 职位/ ,/ Agent/ 只能/ 绑定/ 一个/ ./ 比如/ 系统/ 中有/ AgentTom/ ,/ 他/ 既/ 可以/ 绑定/ 顾客/ 职位/ 又/ 可以/ 绑定/ 商家/ 职位/ ,/ 但是/ 对于/ 同一个/ Group/ 内/ 商家/ 角色/ 的/ 多个/ 实例/ 化/ 职位/ ,/ Tom/ 只能/ 绑定/ 一个/ ./ (/ 7/ )/ 上下文/ (/ Context/ )/ ./ 分为/ 物理/ 上下文/ (/ PhysicalContext/ )/ 和/ 社会/ 上下文/ (/ SocialContext/ )/ ./ 物理/ 上下文/ 指/ 组织/ 所处/ 的/ 物理/ 环境/ 信息/ ,/ 比如/ 网络带宽/ ,/ 系统/ 响应/ 时间/ 等/ ./ 社会/ 上下文/ 指/ 组织/ 的/ 内部/ 状态/ 信息/ ,/ 比如/ 当前/ 角色/ 实例/ 化/ 职位/ 个数/ ,/ 职位/ 是否/ 有/ Agent/ 绑定/ 等/ ./ (/ 8/ )/ 动态/ 重组/ (/ DynamicReorganization/ )/ ./ 组织/ 根据/ 上下文/ 的/ 变化/ 通过/ 动态/ 重组/ 机制/ 进行/ 自/ 适应/ 调整/ ./ 动态/ 重组/ 机制/ 将/ 在/ 第/ 3/ 节/ 进行/ 详细描述/ ./ 3/ 动态/ 重组/ 机制/ 根据/ 自/ 适应/ 系统/ 的/ 组织/ 元/ 模型/ ,/ 组织/ 作为/ 一阶/ 实体/ ,/ 运行/ 态在/ 上下文/ 驱动/ 下/ 基于/ 动态/ 重组/ 机制/ 进行/ 自/ 适应/ 调整/ ./ 本节/ 从/ 为什么/ 自/ 适应/ 调整/ (/ Why/ )/ 、/ 由谁来/ 进行/ 自/ 适应/ 调整/ (/ Who/ )/ 、/ 调整/ 时机/ (/ When/ )/ 、/ 调整/ 元素/ (/ What/ )/ 和/ 如何/ 调整/ (/ How/ )/ 对/ 动态/ 重组/ 机制/ 进行/ 详细/ 介绍/ ./ 3.1/ 自/ 适应/ 调整/ 的/ 原因/ 在/ 分布式/ 开放系统/ 中/ ,/ 组织/ 的/ 环境/ 是/ 动态变化/ 的/ ,/ 构成/ 组织/ 的/ Agent/ 具有/ 自主性/ 和/ 异构/ 性/ ,/ 运行/ 态/ 可以/ 自主/ 动态/ 加入/ 和/ 退出/ 组织/ ./ 因此/ 要求/ 组织/ 能够/ 根据/ 外部环境/ 和/ 内部/ Agent/ 的/ 动态变化/ 进行/ 自/ 适应/ 调整/ ./ 基于/ 本文/ 提出/ 的/ 自/ 适应/ 系统/ 组织/ 元/ 模型/ ,/ 利用/ 物理/ 上下文/ (/ PhysicalContext/ )/ 对/ 组织/ 所/ 处/ 环境/ 和/ 社会/ 上下文/ (/ SocialContext/ )/ 内部/ Agent/ 状态/ 进行/ 显式/ 建模/ ./ 3.2/ 自/ 适应/ 调整/ 的/ 执行者/ 自/ 适应/ 系统/ 一般/ 指由/ 系统/ 自身/ 根据/ 环境/ 的/ 变化/ Page5/ 进行/ 动态/ 调整/ ./ 基于/ 本文/ 提出/ 的/ 自/ 适应/ 系统/ 组织/ 元/ 模型/ ,/ 运行/ 态/ 系统/ 由/ Agent/ 、/ Group/ 和/ 上下文/ 组成/ ./ Agent/ 作为/ 自主/ 实体/ ,/ 可以/ 动态/ 绑定/ 职位/ 加入/ Group/ 以及/ 撤销/ 绑定/ 职位/ 离开/ Group/ ./ Group/ 作为/ 运行/ 态一阶/ 实体/ 需要/ 根据/ 环境/ 以及/ 内部/ Agent/ 状态/ 进行/ 自/ 适应/ 调整/ ./ 根据/ 分布式/ 开放系统/ 特点/ ,/ 系统/ 不/ 可能/ 存在/ 集中/ 的/ 控制中心/ ,/ 因此/ 要求/ 每个/ Group/ 都/ 是/ 具有/ 自/ 适应能力/ 的/ 一阶/ 实体/ ./ 而/ 由于/ Agent/ 和/ Group/ 相互/ 独立/ 并且/ Agent/ 来自/ 开放/ 环境/ ,/ 为了/ 减少/ Group/ 对/ Agent/ 的/ 依赖/ ,/ 应该/ 由/ Group/ 自身/ 来/ 实现/ 自/ 适应/ 调整/ ./ 3.3/ 自/ 适应/ 调整/ 的/ 时机/ 自/ 适应/ 调整/ 的/ 时机/ 指/ Group/ 什么/ 时间/ 需要/ 进行/ 自/ 适应/ 调整/ ./ 上下文/ 变化/ 将/ 引起/ Group/ 自/ 适应/ 调整/ ,/ 因此/ 对/ 上下文/ 的/ 显式化/ 建模/ 和/ 分析/ 是/ 一项/ 重要/ 工作/ ./ Group/ 上下文/ 分为/ 社会/ 上下文/ 和/ 物理/ 上下文/ ./ 社会/ 上下文/ 指/ 组织/ 内部/ 的/ 状态/ 信息/ ,/ 比如/ 当前/ Group/ 中有/ 多少/ Agent/ ,/ 有/ 多少/ 职位/ 、/ 职位/ 状态/ ,/ 哪些/ 职位/ 是/ 闭合/ 的/ ,/ 哪些/ 是/ 开放/ 的/ 等/ ./ 物理/ 上下文/ 指/ Group/ 关注/ 的/ 物理/ 环境/ 信息/ ./ 对/ 物理/ 上下文/ 的/ 感知/ 需要/ 特定/ 的/ 行为/ 实体/ ,/ 比如/ 各种/ 传感器/ ./ 为了/ 提供/ 统一/ 视点/ 来/ 描述/ 和/ 分析/ 上下文/ ,/ 简化/ 系统/ 的/ 开发/ ,/ 把/ 感知/ 物理/ 上下文/ 的/ 行为/ 实体/ 封装/ 为/ Agent/ ./ 和/ 其它/ Agent/ 一样/ ,/ 可以/ 通过/ 动态/ 绑定/ 职位/ 加入/ Group/ ,/ 根据/ 角色/ 规约/ 对/ 物理/ 上下文/ 进行/ 感知/ ./ 这样/ 不仅/ 为/ Group/ 提供/ 了/ 统一/ 的/ 视点/ 对/ 上下文/ 感知/ ,/ 而且/ 把/ Group/ 对/ 上下文/ 的/ 感知/ 需求/ 与/ 具体/ 的/ 感知/ Agent/ 相/ 分离/ ,/ 可以/ 在/ 运行/ 过程/ 中/ 动态/ 选择/ 感知/ Agent/ 对/ 上下文/ 感知/ ./ 图/ 3/ 展示/ 了/ Group/ 的/ 上下文/ 模型/ ,/ Group/ 把/ 上下文/ 需求/ 拆解/ 后/ 分配/ 给/ 各个/ 职位/ ,/ 然后/ 利用/ 职位/ 规约/ Agent/ 的/ 上下文/ 感知/ 需求/ ./ 因此/ Group/ 上下文/ 是/ 指/ 参与/ Group/ 的/ Agent/ ,/ Agent/ 运行/ 过程/ 中/ 主要/ 包含/ 以下/ 3/ 类/ 变化/ :/ (/ 1/ )/ Agent/ 在/ Group/ 内/ 生命周期/ 的/ 变化/ ./ Group/ 提供/ 4/ 种/ 操作/ (/ Join/ ,/ Quit/ ,/ Suspend/ ,/ Resume/ )/ 供/ Agent/ 加入/ Group/ ,/ Agent/ 通过/ 这/ 4/ 种/ 操作/ 使/ 其/ 在/ Group/ 内/ 的/ 生命周期/ 发生变化/ ./ 由于/ 这/ 4/ 种/ 操作/ 由/ Group/ 提供/ ,/ 因此/ Group/ 自身/ 就/ 可以/ 感知/ 到/ Agent/ 生命周期/ 的/ 变化/ ./ (/ 2/ )/ Agent/ 感知/ 物理/ 上下文/ 的/ 变化/ ./ 在/ 动态/ 环境/ 中/ ,/ 物理/ 上下文/ 是/ 不断/ 变化/ 的/ ,/ Agent/ 依据/ 绑定/ 职位/ 规约/ 对/ 物理/ 上下文/ 进行/ 感知/ ./ 如果/ 物理/ 上下文/ 有/ 变化/ ,/ Agent/ 根据/ 感知/ 的/ 变化/ 对/ 职位/ 进行/ 更新/ ,/ 最终/ 导致/ Group/ 上下文/ 不断更新/ ./ (/ 3/ )/ Agent/ 自身/ 能力/ 的/ 变化/ ./ Agent/ 通过/ 动态/ 绑定/ 职位/ 加入/ Group/ ,/ 根据/ 职位/ 规约/ 履行职责/ ./ 由于/ Agent/ 处在/ 动态/ 环境/ 中/ ,/ 其/ 自身/ 能力/ 也/ 在/ 不断/ 变化/ ,/ 可能/ 会/ 出现/ 不/ 满足/ 规约/ 情况/ ./ 因此/ Group/ 利用/ 职位/ 动态/ 监测/ Agent/ 能力/ 的/ 变化/ ./ Group/ 上下文/ 由/ Agent/ 构成/ ,/ Agent/ 主要/ 包含/ 以上/ 3/ 种/ 变化/ ,/ 从而/ 导致/ Group/ 上下文/ 动态变化/ ./ 由于/ Group/ 对/ 物理/ 上下文/ 的/ 感知/ 依赖/ 内部/ 的/ 感知/ Agent/ ,/ 通过/ Group/ 的/ 自/ 适应/ 调整/ 会/ 带来/ 内部/ 感知/ Agent/ 变化/ ,/ 从而/ 导致/ Group/ 上下文/ 的/ 自/ 适应/ 变化/ ./ 因此/ 本文/ 提出/ 的/ 自/ 适应/ 机制/ 不仅/ 能/ 实现/ Group/ 的/ 自/ 适应/ ,/ 也/ 使/ Group/ 上下文/ 进行/ 相应/ 的/ 自/ 适应/ 调整/ ./ 3.4/ 自/ 适应/ 调整/ 元素/ 自/ 适应/ 调整/ 元素/ 主要/ 关注/ 哪些/ 元素/ 可以/ 进行/ 调整/ ./ 根据/ 组织/ 元/ 模型/ ,/ 组织/ 作为/ 设计/ 态一阶/ 实体/ ,/ 运行/ 态/ 实例/ 化为/ Group/ ,/ 因此/ 可/ 分为/ 对/ 设计/ 态/ 组织/ 的/ 调整/ 和/ 对/ 运行/ 态/ Group/ 的/ 调整/ ./ 由于/ Group/ 是/ 组织/ 的/ 实例/ 化/ ,/ 对/ 设计/ 态/ 组织/ 的/ 调整/ 最终/ 要/ 映射/ 到/ 对/ Group/ 的/ 调整/ ,/ 因此/ 本文/ 只/ 关注/ 对/ Group/ 的/ 调整/ ./ 组织/ 在/ 运行/ 态/ 可以/ 实例/ 化为/ 多个/ 相互/ 独立/ 的/ Group/ ,/ Group/ 包含/ 一系列/ 职位/ ,/ 在/ 开放/ 环境/ 中/ ,/ Agent/ 通过/ 动态/ 绑定/ 职位/ 加入/ Group/ ./ 因此/ Group/ 的/ 自/ 适应/ 调整/ 元素/ 分为/ 3/ 种/ 类型/ :/ Group/ 内/ 职位/ 与/ Agent/ 关系/ 动态/ 调整/ ,/ Group/ 内/ 职位/ 动态/ 调整/ ,/ Group/ 之间/ 关系/ 动态/ 调整/ ./ 3.5/ 如何/ 自/ 适应/ 调整/ 如何/ 自/ 适应/ 调整/ 是/ 指自/ 适应/ 调整/ 元素/ 如何/ 进行/ 动态/ 调整/ ./ 根据/ 自/ 适应/ 调整/ 元素/ 的/ 类型/ ,/ 下面/ 分别/ 进行/ 详细描述/ ./ (/ 1/ )/ 职位/ 与/ Agent/ 关系/ 的/ 动态/ 调整/ 由于/ Agent/ 需要/ 动态/ 绑定/ 职位/ 加入/ Group/ ,/ 因此/ Group/ 为/ Agent/ 提供/ 以下/ 4/ 种/ 动态/ 绑定/ 操作/ ,/ 如图/ 4/ 所示/ ./ Page6/ 图/ 4Agent/ 动态/ 绑定/ 职位/ 与/ Group/ 动态/ 调整/ 职位/ 示意图/ ①/ Join/ ./ Agent/ 通过/ Join/ 操作/ 绑定/ 职位/ ,/ 成为/ Group/ 成员/ ./ 默认/ 情况/ 下/ ,/ 职位/ 处于/ 开放/ 状态/ (/ Open/ )/ ,/ 当/ Agent/ 成功/ 绑定/ 职位/ 后/ ,/ 职位/ 将/ 变为/ 闭合/ 状态/ (/ Closed/ )/ ./ 每个/ 职位/ 只/ 允许/ 一个/ Agent/ 绑定/ ,/ 因此/ Agent/ 只能/ 绑定/ 处于/ 开放/ 状态/ 的/ 职位/ ./ 当/ Agent/ 成功/ 绑定/ 职位/ 后/ ,/ 将/ 根据/ 角色/ 规约/ ,/ 履行/ Agent/ 在/ Group/ 内/ 职责/ ./ 比如/ 电子商务系统/ 中/ ,/ 如果/ AgentAlex/ 需要/ 出售/ 商品/ ,/ 可以/ 通过/ Join/ 操作/ 动态/ 绑定/ 商家/ 职位/ 加入/ Group/ ,/ Group/ 将/ 根据/ 角色/ 规约/ 把/ 购买/ 商品/ 的/ 信息/ 发给/ Alex/ ,/ 同时/ Alex/ 也/ 必须/ 根据/ 角色/ 规约/ 提供/ 出售/ 商品/ 服务/ ./ ②/ Quit/ ./ Agent/ 通过/ Quit/ 操作/ 解除/ 绑定/ 职位/ ,/ 离开/ Group/ ,/ 不再/ 受/ 角色/ 规约/ 的/ 影响/ ./ 职位/ 状态/ 将/ 由/ 闭合/ 变为/ 开放/ ,/ 可以/ 重新/ 接受/ 其余/ Agent/ 绑定/ ./ 比如/ Alex/ 的/ 商品/ 已经/ 出售/ 完毕/ ,/ 可以/ 通过/ Quit/ 操作/ 解除/ 与/ 商家/ 职位/ 绑定/ ,/ 离开/ Group/ ./ Group/ 将/ 不会/ 把/ 购买/ 商品/ 的/ 信息/ 发给/ Alex/ ,/ 而是/ 发给/ 当前/ 绑定/ 商家/ 职位/ 的/ Agent/ ./ ③/ Deactivate/ ./ Agent/ 通过/ Deactivate/ 操作/ 钝化/ 职位/ ,/ 使/ 职位/ 变为/ 钝化/ 状态/ (/ Inactive/ )/ ./ 虽然/ Agent/ 仍/ 是/ Group/ 的/ 成员/ ,/ 但是/ 其/ 暂停/ 履行/ 角色/ 规约/ 的/ 职责/ ./ 比如/ Alex/ 下班/ 后/ ,/ 可以/ 通过/ Deactivate/ 操作/ 钝化/ 其/ 商家/ 职位/ ,/ 虽然/ Alex/ 还是/ Group/ 内/ 成员/ ,/ 但是/ 暂停/ 履行/ 角色/ 职责/ ,/ 暂停/ 提供/ 商品销售/ 服务/ ./ Group/ 把/ 需要/ 转发给/ Alex/ 的/ 购买/ 请求/ 暂时/ 缓存/ 在/ 职位/ ,/ 等待/ Alex/ 重新/ 激活/ 职位/ 时/ 对/ 这些/ 购买/ 请求/ 处理/ ./ ④/ Activate/ ./ Agent/ 通过/ Activate/ 操作/ 激活/ 职位/ ,/ 使/ 职位/ 变为/ 激活状态/ (/ Active/ )/ ,/ 重新/ 受/ 角色/ 规约/ 的/ 影响/ ./ 比如/ Alex/ 上班/ 后/ ,/ 通过/ Activate/ 操作/ 激活/ 职位/ ,/ 继续/ 履行/ 角色/ 规约/ 的/ 职责/ ,/ 同时/ 对/ 职位/ 缓存/ 的/ 信息/ 进行/ 处理/ ./ 由于/ Agent/ 绑定/ 职位/ 加入/ Group/ 将/ 受到/ 角色/ 规约/ 的/ 影响/ ,/ 如果/ Agent/ 不能/ 满足/ 角色/ 规约/ ,/ Group/ 强制/ 解除/ Agent/ 与/ 职位/ 的/ 绑定/ 关系/ ,/ 把/ Agent/ 从/ Group/ 中/ 开除/ ./ 因此/ Group/ 还/ 包含/ 一个/ 开除/ 操作/ 如下/ :/ ⑤/ Expel/ ./ 该/ 操作/ Agent/ 不能/ 调用/ ,/ 只供/ Group/ 使用/ ./ Group/ 通过/ 该/ 操作/ 可以/ 把/ 内部/ Agent/ 开除/ ,/ 强制/ 解除/ Agent/ 与/ 职位/ 的/ 绑定/ 关系/ ./ 比如/ Alex/ 通过/ Join/ 操作/ 绑定/ 商家/ 职位/ 后/ ,/ 并且/ 职位/ 处于/ Active/ 状态/ ,/ 如果/ 其/ 处理/ 购买/ 请求/ 的/ 响应/ 时间/ 超过/ 角色/ 规约/ 的/ 要求/ ,/ 则/ Group/ 通过/ Expel/ 操作/ 将/ Alex/ 开除/ ./ (/ 2/ )/ Group/ 内部/ 职位/ 动态/ 调整/ Group/ 包含/ 一系列/ 职位/ ,/ 在/ 运行/ 态/ 根据/ 上下文/ 变化/ 对/ 职位/ 进行/ 动态/ 调整/ ,/ 如图/ 4/ 所示/ ,/ 主要/ 包括/ 以下/ 自/ 适应/ 动作/ :/ ①/ Add/ ./ 通过/ Add/ 操作/ ,/ 可以/ 在/ Group/ 内/ 新增/ 职位/ ./ 新增/ 职位/ 默认/ 处于/ 开放/ 状态/ ,/ Agent/ 可以/ 通过/ 动态/ 绑定/ 该/ 职位/ 加入/ Group/ ,/ 从而/ 可以/ 在/ Group/ 内/ 新增/ 一个/ 成员/ Agent/ ./ 比如/ 随着/ Group/ 内/ 的/ 顾客/ 和/ 商家/ 逐渐/ 增多/ ,/ 交易量/ 不断/ 增加/ ,/ 银行/ 支付/ 已经/ 成为/ 瓶颈/ ,/ 需要/ 通过/ Add/ 操作/ 增加/ 银行/ 职位/ ,/ 从而/ 可以/ 在/ Group/ 内/ 新增/ 一个/ 银行/ 成员/ ./ ②/ Remove/ ./ 通过/ Remove/ 操作/ ,/ 可以/ 对/ Group/ 内/ 职位/ 进行/ 删除/ ./ 如果/ 该/ 职位/ 没有/ Agent/ 绑定/ ,/ 可以/ 直接/ 删除/ ,/ 如果/ 该/ 职位/ 已经/ 有/ Agent/ 绑定/ ,/ 需要/ 首先/ 执行/ Expel/ 把/ Agent/ 从/ Group/ 中/ 开除/ ,/ 然后/ 删除/ 该/ 职位/ ./ 比如/ 随着/ Group/ 内/ 顾客/ 和/ 商家/ 逐渐/ 减少/ ,/ 交易量/ 不断/ 减小/ ,/ 已经/ 有/ 多个/ 银行/ 支付/ 服务/ 处于/ 空闲/ 状态/ ,/ 需要/ 通过/ Remove/ 操作/ 删除/ 银行/ 职位/ ,/ 从而/ 减少/ Group/ 内/ 的/ 银行/ 成员/ ./ ③/ Lock/ ./ 通过/ Lock/ 操作/ ,/ 可以/ 对/ Group/ 内/ 的/ 某个/ 职位/ 进行/ 锁定/ ,/ 使/ 职位/ 变为/ 锁定/ 状态/ (/ Locked/ )/ ./ 如果/ 该/ 职位/ 没有/ 被/ Agent/ 绑定/ ,/ 则/ 通过/ Lock/ 操作/ 后/ ,/ 该/ 职位/ 不能/ 再/ 被/ Agent/ 绑定/ ./ 如果/ 该/ 职位/ 已经/ 被/ Agent/ 绑定/ ,/ 则/ 通过/ Lock/ 操作/ 后/ ,/ 绑定/ 该/ 职位/ 的/ Agent/ 暂时/ 不再/ 受/ Role/ 规约/ 的/ 影响/ ,/ 同时/ Group/ 暂停/ 其它/ 职位/ 与/ 该/ 职位/ 交互/ ,/ 即该/ 职位/ 将接/ Page7/ 收不到/ 来自/ Group/ 的/ 消息/ ./ Lock/ 操作/ 与/ Delete/ 操作/ 的/ 最大/ 区别/ 是/ :/ Lock/ 将/ 继续/ 保持/ Agent/ 与/ 职位/ 动态/ 绑定/ 关系/ ,/ 而/ Delete/ 将/ 完全/ 解除/ Agent/ 与/ 职位/ 关系/ ,/ 把/ Agent/ 从/ Group/ 中/ 开除/ ./ 因此/ Lock/ 操作/ 能够/ 对/ Group/ 状态/ 更/ 快/ 恢复/ ,/ 可以/ 在/ 某些/ 短暂/ 突发/ 情况/ 下/ 使用/ ./ 比如/ Group/ 内/ 交易量/ 突然/ 减小/ ,/ 有/ 多个/ 银行/ 支付/ 服务/ 处于/ 空闲/ 状态/ ,/ 由于/ 交易量/ 可能/ 很快/ 就/ 会/ 恢复/ 到/ 正常/ 状态/ ,/ 所以/ 通过/ Lock/ 操作/ 暂时/ 对/ 某个/ 银行/ 职位/ 锁定/ ./ 如果/ Group/ 内/ 交易量/ 持续/ 减小/ ,/ 有/ 多个/ 银行/ 服务/ 长时间/ 处于/ 空闲/ 状态/ ,/ 则/ 需要/ 通过/ Remove/ 操作/ 删除/ 银行/ 职位/ ./ ④/ Unlock/ ./ 通过/ Unlock/ 操作/ ,/ 可以/ 对/ Group/ 内/ 已经/ 锁定/ 的/ 职位/ 进行/ 解锁/ ,/ 使/ 职位/ 变为/ 解锁/ 状态/ (/ Unlocked/ )/ ./ 如果/ 该/ 职位/ 没有/ 被/ Agent/ 绑定/ ,/ 则/ 通过/ Unlock/ 操作/ 后/ ,/ 该/ 职位/ 可以/ 继续/ 被/ Agent/ 绑定/ ./ 如果/ 该/ 职位/ 已经/ 被/ Agent/ 绑定/ ,/ 则/ 通过/ Unlock/ 操作/ 后/ ,/ 绑定/ 该/ 职位/ 的/ Agent/ 将/ 重新/ 受/ Role/ 规约/ 的/ 影响/ ,/ 同时/ 恢复/ 其它/ 职位/ 与/ 该/ 职位/ 交互/ ./ 比如/ 由于/ Group/ 内/ 交易量/ 恢复正常/ ,/ 通过/ Unlock/ 操作/ 对/ 锁定/ 的/ 银行/ 职位/ 进行/ 解锁/ ,/ 使/ 其/ 继续/ 提供/ 银行/ 服务/ ./ (/ 3/ )/ Group/ 之间/ 关系/ 的/ 动态/ 调整/ 由于/ 同一/ 组织/ 可以/ 实例/ 化为/ 多个/ 相互/ 独立/ 的/ Group/ ,/ Group/ 不仅/ 需要/ 对/ 内部/ 元素/ 进行/ 自/ 适应/ 调整/ ,/ 还/ 需要/ 对/ Group/ 之间/ 的/ 关系/ 进行/ 调整/ ./ Group/ 之间/ 的/ 关系/ 动态/ 调整/ 如图/ 5/ 所示/ ,/ 主要/ 包含/ 以下/ 自/ 适应/ 动作/ :/ 图/ 6/ 职位/ 状态图/ ①/ Merge/ ./ 通过/ Merge/ 操作/ ,/ 可以/ 把/ 两个/ 独立/ 的/ Group/ 合并/ 成/ 一个/ Group/ ./ 比如/ 在/ 电子商务系统/ 中/ ,/ 由于/ 交易量/ 持续/ 减少/ ,/ 但/ Group/ 中/ 必须/ 存在/ 一个/ 银行/ 成员/ 提供/ 支付/ 服务/ ,/ 这种/ 情况/ 下/ 将/ 不能/ 充分发挥/ 银行/ 的/ 支付/ 能力/ ,/ 因此/ 需要/ 通过/ Merge/ 操作/ 对/ Group/ 进行/ 合并/ ./ ②/ Split/ ./ 通过/ Split/ 操作/ ,/ 可以/ 把/ 一个/ Group/ 拆/ 分为/ 两个/ 独立/ 的/ Group/ ./ 比如/ 在/ 电子商务系统/ 中/ ,/ 由于/ 顾客/ 、/ 商家/ 的/ 持续/ 增加/ ,/ Group/ 的/ 成员/ 越来越/ 多/ ,/ 当/ 达到/ 一定/ 数量/ 后/ 会/ 对系统/ 的/ 效率/ 带来/ 影响/ ,/ 因此/ 需要/ 通过/ Split/ 操作/ 对/ Group/ 进行/ 拆分/ ./ Group/ 通过/ 以上/ 自/ 适应/ 动作/ 可以/ 实现/ 职位/ 与/ Agent/ 关系/ 、/ 内部/ 职位/ 以及/ Group/ 之间/ 的/ 关系/ 动态/ 调整/ ,/ 这些/ 动作/ 执行/ 都/ 将/ 导致/ Group/ 状态/ 的/ 改变/ ,/ 因此/ Group/ 自/ 适应/ 动作/ 之间/ 存在/ 一定/ 关系/ ./ 运行/ 态/ 实例/ 化/ 的/ Group/ 包含/ 一系列/ 职位/ ,/ Group/ 通过/ Add/ 、/ Delete/ 、/ Lock/ 、/ Unlock/ 、/ Expel/ 对/ 职位/ 进行/ 动态/ 调整/ ,/ 而/ Group/ 间/ 的/ 自/ 适应/ 动作/ Merge/ 、/ Split/ 本质/ 上/ 也/ 是/ 对/ 职位/ 的/ 调整/ ,/ 因此/ Group/ 间/ 的/ 自/ 适应/ 动作/ 可以/ 等价/ 为/ Group/ 内部/ 职位/ 动态/ 调整/ 自/ 适应/ 动作/ ./ 职位/ 作为/ Group/ 与/ Agent/ 之间/ 交互/ 的/ 接口/ ,/ 其/ 状态机/ 如图/ 6/ 所示/ ./ Group/ 和/ Agent/ 都/ 可以/ 通过/ 自/ 适应/ 动作/ 对/ 职位/ 状态/ 进行/ 调整/ ./ 比如/ Group/ 通过/ Lock/ 操作/ 使/ 职位/ 变为/ 锁定/ 状态/ (/ Locked/ )/ ,/ 通过/ Unlock/ 操作/ 使/ 职位/ 变为/ 解锁/ 状态/ (/ Unlocked/ )/ ./ Agent/ 通过/ Join/ 操作/ 使/ 职位/ 变为/ 闭合/ 状态/ (/ Closed/ )/ ,/ 通过/ Quit/ 操作/ 使/ 职位/ 变为/ 开放/ 状态/ (/ Open/ )/ ./ 通过/ Deac/ -/ tivate/ 操作/ 使/ 职位/ 变为/ 钝化/ 状态/ (/ Inactive/ )/ ,/ 通过/ Activate/ 操作/ 使/ 职位/ 变为/ 活跃/ 状态/ (/ Active/ )/ ./ 虽然/ Agent/ 具有/ 自主性/ ,/ 可以/ 自主/ 决定/ 执行/ 自/ 适应/ 动作/ ,/ 但是/ 在/ 不同/ 的/ 状态/ 下/ 允许/ 执行/ 的/ 自/ 适应/ 动作/ 是/ 不同/ 的/ ./ 比如/ 当/ 职位/ 处于/ 锁定/ 状态/ ,/ 即使/ 当前/ 职位/ 是/ 开放/ 的/ ,/ Agent/ 也/ 不能/ 通过/ Join/ 操作/ 绑定/ 该/ 职位/ ./ 因此/ Page8Group/ 根据/ 职位/ 状态/ 对/ 允许/ Agent/ 执行/ 的/ 自/ 适应/ 动作/ 进行/ 约束/ ,/ 从而/ 防止/ 对/ Group/ 一致性/ 的/ 破坏/ ./ Agent/ 具有/ 自主性/ ,/ 虽然/ Group/ 不能/ 强制/ Agent/ 执行/ 某/ 动作/ ,/ 但是/ Group/ 确保/ 只有/ 合法/ 的/ Agent/ 动作/ 才能/ 执行/ ,/ 而且/ 可以/ 把/ 不/ 符合/ 组织/ 规约/ 的/ Agent/ 开除/ ./ 因此/ ,/ 这样/ 既/ 体现/ 了/ Agent/ 的/ 自主性/ ,/ 又/ 维护/ 了/ Group/ 状态/ 的/ 一致性/ ./ 4/ 基于/ 策略/ 的/ 自/ 适应/ 系统/ 根据/ 前/ 文/ 提出/ 的/ 动态/ 重组/ 机制/ ,/ Group/ 在/ 运行/ 过程/ 中/ 根据/ 上下文/ 变化/ 进行/ 自/ 适应/ 调整/ ./ 由于/ 自/ 适应/ 需求/ 一般/ 是/ 多变/ 的/ ,/ 为了/ 增强/ 系统/ 的/ 模块化/ 程度/ ,/ 简化/ 系统/ 的/ 开发/ 和/ 维护/ ,/ 根据/ 关注点/ 分离/ 原则/ ,/ 需要/ 把/ Group/ 的/ 业务/ 逻辑/ 和/ 自/ 适应/ 逻辑/ 相/ 分离/ ./ 自/ 适应/ 逻辑/ 一般/ 从/ 软件/ 日常/ 使用/ 过程/ 中/ 总结/ 出来/ ,/ 与/ 最终用户/ 密切相关/ ,/ 因此/ 需要/ 提供/ 简单/ 易用/ 的/ 方式/ 对/ 自/ 适应/ 逻辑/ 描述/ [/ 11/ ]/ ./ 基于/ 该/ 需求/ ,/ 本文/ 提出/ 利用/ 策略/ 显式/ 地/ 对/ Group/ 的/ 自/ 适应/ 逻辑/ 进行/ 描述/ ,/ 以/ 清晰/ 地/ 描述/ 和/ 定义/ Group/ 如何/ 根据/ 上下文/ 的/ 变化/ 进行/ 动态/ 调整/ ./ 策略/ 模型/ 如图/ 7/ 所示/ ,/ 策略/ 由/ 一系列/ 规则/ 组成/ ,/ 每个/ 规则/ 包含/ 状态/ 以及/ 在/ 该/ 状态/ 下/ 需要/ 执行/ 的/ 自/ 适应/ 动作/ ./ 状态/ 由/ 上下文/ 、/ 关系/ 运算符/ 、/ 值/ 以及/ 逻辑/ 运算符/ 组成/ ./ 通过/ 关系/ 运算符/ 把/ 上下文/ 和/ 值/ 连接/ 形成/ 原子/ 状态/ ,/ 通过/ 逻辑/ 运算符/ 可以/ 对/ 这些/ 状态/ 进行/ 组合/ ./ 自图/ 8/ 基于/ 组织/ 抽象/ 的/ 电子商务系统/ 结构/ 适应/ 动作/ 在/ 前文/ 已经/ 分析/ 过/ ,/ 包括/ Group/ 内/ 的/ Add/ 、/ Delete/ 、/ Lock/ 、/ Unlock/ 、/ Expel/ 以及/ Group/ 间/ 的/ Merge/ 和/ Split/ ./ 基于/ 动态/ 重组/ 机制/ ,/ 通过/ 策略/ 显式/ 地/ 对/ 组织/ 自/ 适应/ 逻辑/ 描述/ ,/ 并/ 与/ 组织/ 的/ 业务/ 逻辑/ 相/ 分离/ ,/ 使得/ 逻辑/ 更加/ 清晰/ ,/ 策略/ 的/ 维护/ 成本/ 也/ 大大降低/ ./ 5/ 案例/ 分析/ 根据/ 本文/ 提出/ 的/ 组织/ 元/ 模型/ 和/ 基于/ 策略/ 的/ 动态/ 重组/ 机制/ ,/ 对/ 前面/ 介绍/ 的/ 自/ 适应/ 电子商务系统/ 进行/ 分析/ ./ 系统/ 整体/ 结构/ 如图/ 8/ 所示/ ,/ 设计/ 态/ 电子商务/ 组/ Page9/ 织/ (/ ElectricalCommerceOrganizationOrg/ _/ EC/ )/ 运行/ 态/ 实例/ 化为/ Group/ (/ Grp/ _/ EC1/ ,/ Grp/ _/ EC2/ )/ ,/ Agent/ 通过/ 动态/ 绑定/ 职位/ 加入/ Group/ 实现/ 系统/ 功能/ ./ 因为/ 系统/ 环境/ 以及/ 组成/ Agent/ 动态性/ ,/ Group/ 在/ 运行/ 过程/ 中/ 需要/ 自/ 适应/ 调整/ ./ 由于/ 受/ 文章/ 篇幅/ 所/ 限/ ,/ 本文/ 主要/ 分析/ 以下/ 几个/ 典型/ 的/ 自/ 适应/ 场景/ :/ (/ 1/ )/ 职位/ 与/ Agent/ 关系/ 动态/ 调整/ :/ 银行/ Bank1/ 动态/ 绑定/ 职位/ BankPos1/ 加入/ GroupGrp/ _/ EC1/ ,/ 如果/ 银行/ Bank1/ 不能/ 提供/ 支付/ 服务/ ,/ 则/ 职位/ BankPos1/ 把/ 银行/ Bank1/ 开除/ ,/ 动态/ 绑定/ 别的/ 银行/ 继续/ 提供/ 服务/ ,/ 比如/ Bank2/ ./ (/ 2/ )/ Group/ 内/ 职位/ 动态/ 调整/ :/ 如果/ GroupGrp/ _/ EC1/ 内部/ 的/ 银行/ 平均/ 支付/ 响应/ 时间/ 大于/ 3s/ ,/ 则/ 动态/ 添加/ 银行/ 职位/ ,/ 比如/ BankPos2/ ;/ 如果/ 银行/ 平均/ 空闲/ 时间/ 大于/ 60s/ ,/ 则/ 动态/ 删除/ 空闲/ 时间/ 最长/ 的/ 银行/ 职位/ ,/ 比如/ BankPos2/ ./ (/ 3/ )/ Group/ 之间/ 关系/ 的/ 动态/ 调整/ :/ 如果/ GroupGrp/ _/ EC1/ 内/ 的/ 顾客/ 、/ 商家/ 数量/ 大于/ 1000/ ,/ 则/ 对/ Grp/ _/ EC1/ 进行/ 拆分/ ,/ 如果/ Grp/ _/ EC1/ 内/ 的/ 顾客/ 、/ 商家/ 数量/ 小于/ 100/ ,/ 则/ Grp/ _/ EC1/ 与/ 相邻/ 的/ Grp/ _/ EC2/ 进行/ 合并/ ./ 5.1/ 系统/ 设计/ 基于/ 本文/ 提出/ 的/ 组织/ 元/ 模型/ ,/ 电子商务系统/ 设计/ 包含/ 以下内容/ :/ 组织/ (/ Organization/ )/ 、/ 上下文/ (/ Context/ )/ 和/ 策略/ (/ Strategy/ )/ ,/ 下面/ 对/ 各/ 部分/ 的/ 设计/ 进行/ 详细描述/ ./ (/ 1/ )/ 组织/ (/ Organization/ )/ 电子商务/ 组织/ (/ Org/ _/ EC/ )/ 包含/ 以下/ 角色/ :/ 顾客/ (/ Customer/ )/ 、/ 商家/ (/ Seller/ )/ 、/ 银行/ (/ Bank/ )/ 和/ 物流/ (/ Transporter/ )/ ./ 其中/ 每个/ 角色/ 的/ 详细情况/ 如表/ 1/ 所示/ ,/ 包含/ 角色/ 的/ 行为/ 以及/ 所/ 关注/ 的/ 上下文/ ,/ 比如/ 银行/ 角色/ 包含/ 行为/ 有/ 支付/ ,/ 关注/ 的/ 上下文/ 有/ 支付/ 时间/ 和/ 空闲/ 时间/ ./ 角色/ CustomerBuyGoodsSellerSellGoodsBankTransporterTransport/ (/ 2/ )/ 上下文/ (/ Context/ )/ 根据/ 案例/ 的/ 自/ 适应/ 场景/ 描述/ ,/ 组织/ 关注/ 的/ 上下文/ 信息/ 如表/ 2/ 所示/ ./ 组织/ 的/ 物理/ 上下文/ 信息/ 通过/ 对/ 角色/ 上下文/ 计算/ 得到/ ,/ 因此/ 包含/ 上下文/ 名称/ 、/ 计算公式/ ./ 比如/ 组织/ 内/ 银行/ 的/ 平均/ 支付/ 时间/ ,/ 需要/ 通过/ 对/ 各个/ 银行/ 角色/ 支付/ 时间/ 计算/ 得到/ ./ 组织/ 的/ 社会/ 上下文/ 信息/ 可以/ 通过/ 组织/ 直接/ 获取/ ,/ 比如/ 组织/ 内/ 顾客/ 、/ 商家/ 的/ 数量/ ./ 别/ 如下/ :/ 响应/ ,/ 则/ 把/ 该/ 银行/ 开除/ ./ 加/ 银行/ Position/ ./ AVG/ _/ PayTimeAVG/ (/ Bank/ ./ PayTime/ )/ AVG/ _/ IdleTimeAVG/ (/ Bank/ ./ IdleTime/ )/ CustomerCountGetPositionCount/ (/ Customer/ )/ SellerCount/ (/ 3/ )/ 策略/ (/ Strategy/ )/ 根据/ 案例/ 的/ 3/ 个/ 场景/ ,/ 其/ 对应/ 的/ 自/ 适应/ 策略/ 分/ ①/ 职位/ 与/ Agent/ 关系/ 动态/ 调整/ 如果/ 银行/ 不能/ 提供/ 支付/ 服务/ ,/ 比如/ 超过/ 60s/ 没/ 策略/ 1/ ./ If/ (/ Bank/ @/ PayTime/ >/ 60/ )/ thenBank/ ./ Expel/ (/ )/ ②/ Group/ 内/ 职位/ 动态/ 调整/ 如果/ Group/ 内部/ 银行/ 平均/ 支付/ 时间/ 大于/ 3s/ ,/ 增/ 策略/ 2/ ./ If/ (/ AVG/ _/ PayTime/ >/ 3/ )/ thenAdd/ (/ Bank/ @/ Position/ )/ 如果/ 银行/ 平均/ 空闲/ 时间/ 大于/ 60s/ ,/ 则/ 动态/ 删除/ 策略/ 3/ ./ If/ (/ AVG/ _/ IdleTime/ >/ 60/ )/ then/ ③/ Group/ 之间/ 关系/ 动态/ 调整/ 如果/ Group/ 内/ 顾客/ 、/ 商家/ 增加/ 到/ 1000/ ,/ 则/ 对/ 策略/ 4/ ./ If/ (/ Org/ _/ EC/ @/ CustomerCount/ +/ 如果/ Group/ 内/ 顾客/ 、/ 商家/ 减少/ 到/ 100/ ,/ 则/ 把/ 策略/ 5/ ./ Group/ 与其/ 相邻/ Group/ 进行/ 合并/ ./ 空闲/ 时间/ 最长/ 的/ 银行/ 职位/ ./ Group/ 进行/ 拆分/ ./ 5.2/ 自/ 适应/ 场景/ 分析/ 基于/ 上文/ 的/ 分析/ 和/ 设计/ ,/ Grp/ _/ EC1/ 的/ 自/ 适应/ 场景/ 如图/ 9/ 所示/ ,/ 系统/ 运行/ 过程/ 如下/ :/ 假定/ Grp/ _/ EC1/ 初始/ 场景/ 如图/ (/ a/ )/ ,/ 在/ T1/ 时刻/ ,/ 由于/ Bank1/ 的/ 支付/ 时间/ 为/ 70s/ ,/ 则/ 触发/ 策略/ 1/ ,/ 银行/ 职位/ 执行/ 自/ 适应/ 动作/ 开除/ Bank1/ ,/ 则/ 会/ 有/ 新/ 的/ 银行/ Page10AgentBank2/ 动态/ 绑定/ 该/ 职位/ 加入/ Grp/ _/ EC1/ ,/ 场景/ 变为/ (/ b/ )/ ./ 图/ (/ b/ )/ 场景/ ,/ 在/ T2/ 时刻/ ,/ 由于/ Grp/ _/ EC1/ 内/ 银行/ 的/ 平均/ 支付/ 时间/ 为/ 5s/ ,/ 则/ 触发/ 策略/ 2/ ,/ Grp/ _/ EC1/ 执行/ 自/ 适应/ 动作/ 增加/ 银行/ 职位/ BankPos2/ ,/ 则/ 会/ 有/ 新/ 的/ 银行/ Agent/ 动态/ 绑定/ 该/ 职位/ 加入/ Group/ ,/ 场景/ 变为/ (/ c/ )/ ./ 图/ (/ c/ )/ 场景/ ,/ 在/ T3/ 时刻/ ,/ 由于/ Grp/ _/ EC1/ 内/ 银行/ 的/ 平均/ 空闲/ 时间/ 为/ 70s/ ,/ 则/ 触发/ 策略/ 3/ ,/ Grp/ _/ EC1/ 执图/ 9/ 电子商务/ Group/ 的/ 自/ 适应/ 场景/ 6/ 相关/ 工作/ 近年来/ 自/ 适应/ 软件/ 已经/ 成为/ 软件工程/ 领域/ 的/ 研究/ 热点/ ,/ 主要/ 是/ 基于/ 控制/ 环路/ 实现/ 自/ 适应/ ./ 根据/ IBM/ 的/ 参考/ 架构/ ,/ 自/ 适应/ 软件/ 的/ 研究/ 可/ 分为/ 两/ 部分/ AutonomicManager/ 和/ ManagedElement/ ./ AutonomicManager/ 内部/ 包含/ 一个/ 控制/ 环路/ ,/ 目前/ 主要/ 关注/ 控行/ 自/ 适应/ 动作/ 删除/ 银行/ 职位/ BankPos2/ ,/ 绑定/ 该/ Position/ 的/ Agent/ 也/ 被/ 开除/ ,/ 场景/ 变为/ (/ a/ )/ ./ 图/ (/ a/ )/ 场景/ ,/ 在/ T4/ 时刻/ ,/ Grp/ _/ EC1/ 内/ 顾客/ 和/ 商家/ 的/ 总数/ 为/ 1010/ ,/ 则/ 触发/ 策略/ 4/ ,/ Grp/ _/ EC1/ 执行/ 自/ 适应/ 动作/ 拆/ 分为/ Grp/ _/ EC1/ 和/ Grp/ _/ EC2/ ,/ 场景/ 变为/ (/ d/ )/ ./ 图/ (/ d/ )/ 场景/ ,/ 在/ T5/ 时刻/ ,/ Grp/ _/ EC1/ 内/ 顾客/ 和/ 商家/ 的/ 总数/ 为/ 90/ ,/ 则/ 触发/ 策略/ 5/ ,/ Grp/ _/ EC1/ 执行/ 自/ 适应/ 动作/ 与其/ 相邻/ 的/ GroupGrp/ _/ EC2/ 合并/ ,/ 场景/ 变为/ (/ a/ )/ ./ 制/ 环路/ 显式化/ 、/ 交互性/ 、/ 适应性/ [/ 12/ ]/ 等/ ,/ 而/ ManagedElement/ 主要/ 关注/ 基于/ 体系结构/ 的/ 自/ 适应/ [/ 4/ -/ 5/ ]/ 和/ 基于/ 运行/ 态/ 模型/ 的/ 自/ 适应/ [/ 13/ ]/ 等/ ./ 基于/ 体系结构/ 的/ 自/ 适应/ 强调/ 对/ 运行/ 态/ 软件体系结构/ 调整/ ,/ 基于/ 运行/ 态/ 模型/ 自/ 适应/ 强调/ 对/ 运行/ 态/ 模型/ 调整/ ,/ 运行/ 态/ 体系结构/ 也/ 属于/ 一种/ 运行/ 态/ 模型/ ,/ 因此/ 基于/ 体系结构/ 的/ 自/ 适应/ 可以/ 看作/ 是/ 基于/ 运行/ 态/ 模型/ 自/ 适应/ 的/ 一个/ 子类/ ./ 通过/ 运行/ 态/ 模型/ 主要/ 是/ 为了/ 屏蔽/ 代码/ 层/ 的/ 细节/ ,/ 在/ Page11/ 更/ 高/ 的/ 抽象层次/ 调整/ ,/ 从而/ 减少/ 自/ 适应/ 难度/ 、/ 提高效率/ ./ 虽然/ 基于/ 运行/ 态/ 模型/ 自/ 适应/ 强调/ 在/ 更/ 高/ 的/ 抽象层次/ 进行/ 自/ 适应/ 调整/ (/ 因为/ 相对/ 于/ 代码/ 层/ 而言/ 模型/ 层面/ 抽象层次/ 比较/ 高/ )/ ,/ 但是/ 该/ 模型/ 主要/ 是/ 针对/ 单个/ 系统/ 采用/ 面向对象/ 范型/ 产生/ ./ 本文/ 研究/ 的/ 是/ 比/ 单个/ 系统/ 抽象层次/ 更/ 高/ 的/ 组织/ 层面/ 发散/ 式/ 自/ 适应/ ,/ 提出/ 与/ 之/ 对应/ 的/ 抽象层次/ 比较/ 高/ 的/ 组织/ 范型/ 以及/ 相应/ 的/ 自/ 适应/ 支撑/ 机制/ 动态/ 重组/ 机制/ ./ 因此/ 本文/ 的/ 工作/ 与/ 现有/ 工作/ 互补/ ,/ 是/ 对/ 现有/ 工作/ 在/ 组织/ 层面/ 进行/ 自/ 适应/ 调整/ 的/ 细化/ ./ 目前/ 已经/ 有/ 一些/ 工作/ 开始/ 关注/ 在/ 组织/ 层面/ 的/ 自/ 适应/ ./ 比如/ THOMAS/ [/ 9/ ]/ 提出/ 了/ 对/ 组织/ 动态/ 调整/ 的/ 运行/ 支撑/ 平台/ ,/ 但是/ 由/ 环境/ 中/ 的/ Agent/ 对/ 组织/ 进行/ 调整/ ./ 在/ 分布式/ 开放系统/ 中/ ,/ 参与/ 系统/ 的/ Agent/ 来自/ 开放/ 环境/ ,/ 具有/ 不/ 确定/ 不/ 可控/ 特点/ ,/ 因此/ 并/ 不是/ 所有/ 的/ Agent/ 都/ 具有/ 对/ 组织/ 进行/ 自/ 适应/ 调整/ 的/ 能力/ ,/ 而且/ 由/ 不/ 确定/ Agent/ 对/ 组织/ 自/ 适应/ 调整/ ,/ 对系统/ 的/ 可靠性/ 和/ 稳定性/ 带来/ 极大/ 威胁/ ./ 本文/ 基于/ 动态/ 重组/ 机制/ ,/ 通过/ 策略/ 显式/ 地/ 描述/ 组织/ 的/ 自/ 适应/ 逻辑/ ,/ 使/ 组织/ 作为/ 具有/ 自/ 适应能力/ 的/ 一阶/ 实体/ ,/ 可以/ 通过/ 自身/ 来/ 实现/ 自/ 适应/ 调整/ ./ 目前/ 也/ 有/ 部分/ 学者/ 注意/ 到/ 应该/ 由/ 组织/ 自身/ 来/ 实现/ 自/ 适应/ 调整/ ,/ 比如/ 文献/ [/ 14/ ]/ 提出/ 组织/ 通过/ 领域/ 无关/ 算法/ 实现/ 运行/ 过程/ 中自/ 适应/ 调整/ ./ 系统/ 的/ 自/ 适应/ 逻辑/ 一般/ 是从/ 日常/ 使用/ 维护/ 中/ 总结/ 出来/ ,/ 具有/ 领域/ 相关/ 、/ 应用/ 相关/ 特点/ ,/ 而且/ 自/ 适应/ 逻辑/ 一般/ 是/ 多变/ 的/ 、/ 与/ 最终用户/ 相关/ 的/ [/ 11/ ]/ ./ 因此/ 需要/ 提供/ 简单/ 易用/ 的/ 方式/ 对/ 组织/ 的/ 自/ 适应/ 逻辑/ 进行/ 规约/ ./ 文献/ [/ 14/ ]/ 利用/ 领域/ 无关/ 的/ 算法/ 实现/ 自/ 适应/ 逻辑/ ,/ 因此/ 它/ 不能/ 对/ 领域/ 相关/ 应用/ 相关/ 的/ 自/ 适应/ 逻辑/ 进行/ 有效/ 描述/ ./ 文献/ [/ 15/ ]/ 利用/ Java/ 语言/ 对/ 自/ 适应/ 逻辑/ 进行/ 规约/ ,/ 抽象层次/ 比较/ 低/ ,/ 和/ 自/ 适应/ 逻辑/ 之间/ 存在/ 较大/ 的/ 鸿沟/ ./ 本文/ 通过/ 抽象层次/ 比较/ 高/ 的/ 策略/ 显式/ 地/ 对/ 组织/ 的/ 自/ 适应/ 逻辑/ 描述/ ,/ 根据/ 关注点/ 分离/ 原则/ ,/ 把/ 策略/ 、/ 上下文/ 同/ 组织/ 相/ 分离/ ,/ 提高/ 了/ 系统/ 的/ 模块性/ ,/ 便于/ 对/ 系统管理/ 与/ 维护/ ./ 7/ 总结/ 和/ 下/ 一步/ 工作/ 分布式/ 开放系统/ 的/ 出现/ 给/ 软件/ 自/ 适应/ 带来/ 了/ 新/ 的/ 挑战/ ,/ 需要/ 在/ 更/ 高/ 的/ 抽象层次/ (/ 组织/ 层面/ )/ 进行/ 自/ 适应/ 调整/ ./ 本文/ 借鉴/ 社会学/ 、/ 组织学/ 思想/ ,/ 采用/ 组织/ 范型/ 对系统/ 进行/ 抽象/ ,/ 提出/ 了/ 系统/ 的/ 组织/ 元/ 模型/ ,/ 把/ 组织/ 作为/ 一阶/ 实体/ ,/ 提出/ 了/ 支撑/ 组织/ 自/ 适应/ 的/ 动态/ 重组/ 机制/ ,/ 通过/ 策略/ 显式/ 地/ 描述/ 组织/ 的/ 自/ 适应/ 逻辑/ ,/ 从而/ 使/ 整个/ 系统/ 在/ 组织/ 层面/ 实现/ 发散/ 式/ 的/ 自/ 适应/ ./ 和/ 现有/ 的/ 很多/ 自/ 适应/ 机制/ 不同/ ,/ 在/ 自/ 适应/ 对象/ 上/ ,/ 本文/ 针对/ 抽象层次/ 更/ 高/ 的/ 组织/ 层面/ ;/ 在/ 抽象/ 范型/ 上/ ,/ 本文/ 借鉴/ 社会/ 组织学/ 思想/ ,/ 采用/ 抽象层次/ 更/ 高/ 的/ 组织/ 范型/ ;/ 在/ 实现/ 机制/ 上/ ,/ 组织/ 在/ 上下文/ 驱动/ 下/ 依据/ 策略/ 通过/ 动态/ 重组/ 机制/ 进行/ 自/ 适应/ 调整/ ,/ 通过/ 把/ 上下文/ 、/ 策略/ 和/ 组织/ 显式/ 分离/ ,/ 提高/ 了/ 模块化/ 程度/ ,/ 使/ 系统/ 更/ 容易/ 开发/ 、/ 维护/ 和/ 演化/ ./ 针对/ 分布式/ 开放系统/ 的/ 自/ 适应/ 需求/ ,/ 我们/ 已经/ 初步/ 实现/ 了/ 支撑/ Agent/ 层面/ 自/ 适应/ 的/ 动态/ 绑定/ 机制/ 的/ 开发/ 、/ 运行/ 环境/ SADE/ ./ 目前/ 针对/ 组织/ 层面/ 的/ 自/ 适应/ 需求/ ,/ 研究/ 了/ 系统/ 的/ 组织/ 元/ 模型/ 、/ 动态/ 重组/ 机制/ 以及/ 描述/ 组织/ 自/ 适应/ 逻辑/ 的/ 策略/ 模型/ ,/ 并/ 结合/ 案例/ 进行/ 了/ 具体分析/ ./ 下/ 一步/ 的/ 工作/ 主要/ 包括/ 以下/ 几/ 方面/ :/ 对/ 组织/ 元/ 模型/ 以及/ 基于/ 策略/ 的/ 动态/ 重组/ 机制/ 进行/ 形式化/ 规约/ ;/ 设计/ 简单/ 易用/ 的/ 策略/ 描述语言/ 设施/ ;/ 设计/ 实现/ 相应/ 的/ 中间件/ 支撑/ 平台/ ;/ 在/ 具体/ 领域/ 进行/ 实际/ 应用/ ,/ 比如/ 电子商务系统/ 、/ 城市/ 智能/ 交通系统/ 等/ ./ 致谢/ 感谢/ 国防科学技术大学/ 计算机/ 学院/ SADE/ 小组/ 的/ 所有/ 老师/ 和/ 同学/ !/ 

