Page1/ 对/ 等/ 点播/ 系统/ 中/ 节点/ 搜索/ 机制/ 研究/ 张铁/ 赢/ 1/ )/ 刘悦/ 1/ )/ 钟运琴/ 1/ )/ ,/ 2/ )/ 程学旗/ 1/ )/ 1/ )/ (/ 中国科学院计算技术研究所/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 研究生院/ 北京/ 100190/ )/ 摘要/ 对/ 等/ 点播/ 系统/ (/ P2P/ -/ VoD/ )/ 中/ 的/ 跳转/ 操作/ 需要/ 高效/ 的/ 节点/ 搜索/ ,/ 如何/ 快速/ 查找/ 到/ “/ 合适/ ”/ 的/ 节点/ 是/ 个/ 挑战/ ./ “/ 合适/ ”/ 包含/ 两/ 方面/ 因素/ :/ (/ 1/ )/ 内容/ 匹配/ ;/ (/ 2/ )/ 物理性能/ 匹配/ ./ 而/ 传统/ 的/ 方法/ 大部分/ 只/ 涉及/ 对/ 前者/ 的/ 研究/ ./ 文中/ 提出/ 了/ 一种/ 层次化/ 的/ 搜索/ 模型/ (/ 简称/ Mediacoop/ )/ ,/ 不仅/ 可以/ 让/ 搜索/ 到/ 的/ 节点/ 在/ 内容/ 上/ 满足要求/ ,/ 而且/ 在/ 物理性能/ 上/ 也/ 能/ 满足要求/ ./ 具体/ 而言/ ,/ Mediacoop/ 首先/ 利用/ 播放/ 距离/ 来/ 索引/ 全部/ 节点/ ,/ 再/ 利用/ 延迟/ 特征/ 优选/ 内容/ 上/ 已经/ 符合要求/ 的/ 节点/ ./ 在/ NS2/ 模拟器/ 上/ 的/ 实验/ 表明/ ,/ Mediacoop/ 在/ 用户/ 体验/ 和/ 系统/ 开销/ 上均/ 优于/ 传统/ 的/ 方法/ ./ 同时/ ,/ 在/ 实际/ 系统/ CoolFish/ 中/ 的/ 部署/ 和/ 运行/ 也/ 验证/ 了/ Mediacoop/ 的/ 实用性/ ./ 关键词/ 对/ 等/ ;/ 视频点播/ ;/ 节点/ 搜索/ ;/ 流媒体/ 1/ 引言/ 随着/ 互联网/ 宽带接入/ 的/ 普及/ ,/ 对/ 等/ 视频点播/ 服务/ (/ P2P/ -/ VoD/ )/ 已经/ 成为/ 了/ 最/ 流行/ 的/ 互联网/ 应用/ 之一/ ./ 点播/ 的/ 最大/ 特点/ 在于/ 用户/ 可以/ 随意/ 跳转/ ,/ 即/ 从/ 当/ “/ 合适/ ”/ 的/ 邻居/ 节点/ 包含/ 两/ 方面/ 特征/ ./ 一是/ 内容/ 匹配/ ,/ 即该/ 节点/ 拥有/ 查找/ 者/ 所/ 需/ 内容/ ,/ 这/ 一点/ 也/ 是/ 最/ Page2/ 基本/ 的/ 要求/ ./ 二是/ 质量/ 匹配/ ,/ 即查/ 该/ 节点/ 拥有/ 较/ 好/ 的/ 物理性能/ ,/ 例如/ 高带宽/ 和/ 低/ 延迟/ ./ 质量/ 匹配/ 不仅仅/ 是/ 查询/ 优化/ 的/ 问题/ ,/ 它/ 对/ 播放/ 质量/ 起到/ 了/ 至关重要/ 的/ 作用/ ./ Huang/ [/ 1/ ]/ 、/ Pucha/ [/ 2/ ]/ 以及/ Hefeeda/ 等/ 人/ [/ 3/ ]/ 均/ 指出/ ,/ 邻居/ 节点/ 的/ 物理性能/ 较差/ 是/ 导致/ 无法/ 及时/ 获得/ 数据/ 的/ 重要/ 原因/ ./ 衡量/ 物理性能/ 最/ 重要/ 的/ 两个/ 指标/ 是/ 带宽/ 和/ 延迟/ [/ 4/ ]/ ,/ 本文/ 中/ 使用/ 延迟/ 作为/ 衡量/ 指标/ ,/ 因为/ 带宽/ 只能/ 在/ 建立/ 连接/ 后/ 通过/ 实际/ 传输/ 的/ 数据/ 测/ 得/ [/ 3/ -/ 4/ ]/ ,/ 而/ 我们/ 的/ 目标/ 是/ 建立/ 连接/ 前/ 进行/ 节点/ 选择/ (/ 即/ 节点/ 查找/ )/ ,/ 所以/ 带宽/ 这一/ 指标/ 不适/ 用于/ 本文/ ./ 详见/ 第/ 2/ 节/ 和/ 第/ 4/ 节/ ./ 通常/ ,/ 针对/ P2P/ -/ VoD/ 的/ 搜索/ 方法/ 只/ 涉及/ 内容/ 搜索/ ./ 典型/ 的/ 方法/ 是/ 使用/ 分布式/ 哈希/ 表/ (/ DHT/ )/ ,/ 把/ 缓冲/ 好/ 的/ 内容/ 对应/ 的/ 信息/ 发布/ 到/ 网络/ 中/ 等待/ 查询/ (/ 如/ 文献/ [/ 3/ ,/ 5/ ]/ )/ ./ 但是/ ,/ 这种/ 方法/ 应用/ 在/ 视频/ 服务/ 中/ 会/ 造成/ 大量/ 的/ 网络/ 开销/ ./ 因为/ 每个/ 节点/ 缓冲/ 的/ 内容/ 是/ 随着/ 观看/ 进度/ 发生变化/ 的/ ,/ 节点/ 需要/ 不断/ 地/ 发布/ 对应/ 的/ 信息/ ,/ 这/ 就/ 造成/ 了/ 巨大/ 的/ 网络/ 开销/ ./ 尽管/ 文献/ [/ 3/ ]/ 作者/ 对/ 节点/ 物理性能/ 方面/ 进行/ 了/ 探索/ ,/ 但是/ 他们/ 提出/ 的/ 方法/ 并/ 不能/ 应用/ 在/ P2P/ -/ VoD/ 中/ ./ 文献/ [/ 6/ -/ 7/ ]/ 作者/ 提出/ 了/ 非/ DHT/ 的/ 结构化/ 搜索/ 方法/ 以/ 避免/ 大量/ 的/ 网络/ 开销/ ,/ 但是/ 他们/ 都/ 没有/ 对/ 节点/ 的/ 物理性能/ 进行/ 研究/ ./ 在/ 本文/ 中/ ,/ 针对/ P2P/ -/ VoD/ 的/ 特征/ ,/ 我们/ 提出/ 了/ 一个/ 基于/ 结构化/ 的/ 层次/ 搜索/ 模型/ (/ 简称/ Mediacoop/ )/ ./ 本/ 方法/ 的/ 一次/ 查找/ 能够/ 同时/ 满足/ 内容/ 匹配/ 和/ 质量/ 匹配/ 的/ 双重/ 要求/ ./ 具体/ 而言/ Mediacoop/ 的/ 查找/ 过程/ 被/ 分为/ 两个/ 阶段/ :/ (/ 1/ )/ 使用/ 播放/ 距离/ 来/ 定位/ 拥有/ 所/ 需/ 内容/ 的/ 节点/ ./ 对于/ 给定/ 影片/ ,/ 各/ 节点/ 的/ 播放/ 速度/ 是/ 相同/ 的/ ,/ 这样/ ,/ 节点/ 间/ 的/ 播放/ 距离/ 是/ 不变/ 的/ (/ 除非/ 节点/ 进行/ 跳转/ 和/ 暂停/ 操作/ )/ ./ 因此/ ,/ 避免/ 了/ 传统/ 方法/ 的/ 巨额/ 网络/ 开销/ ;/ (/ 2/ )/ 把/ 备选/ 节点/ 索引/ 为/ 一个/ 树形/ 覆盖网/ (/ overlay/ )/ ,/ 该/ 过程/ 是/ 以/ AS/ 域间/ 延迟/ 及/ IP/ 前缀/ 为/ 基础/ 进行/ 索引/ ,/ 其/ 结果/ 是/ 能够/ 找到/ 与/ 查询/ 者/ 延迟/ 最小/ 的/ 节点/ 子集/ ,/ 以/ 完成/ 节点/ 质量/ 匹配/ ./ 我们/ 在/ 理论/ 上/ 证明/ 了/ :/ 以/ 不/ 低于/ 传统/ DHT/ 的/ 查找/ 效率/ O/ (/ logN/ )/ ,/ Mediacoop/ 能够/ 同时/ 完成/ 上述/ 两/ 阶段/ 查找/ ./ 我们/ 在/ NS2/ 模拟器/ 上/ 做/ 了/ 大量/ 对比/ 实验/ ,/ 结果表明/ Mediacoop/ 在/ 启动/ 时间/ 、/ 跳转/ 延迟/ 、/ 播放/ 连贯/ 度/ 和/ 网络/ 开销/ 上/ 的/ 优势/ 十分/ 明显/ ./ 同时/ ,/ 在/ 实际/ P2P/ -/ VoD/ 系统/ CoolFish/ 上/ 实现/ 了/ Mediacoop/ ,/ 其/ 运行/ 结果/ 也/ 验证/ 了/ 算法/ 的/ 实用性/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节/ 描述/ Mediacoop/ 的/ 基本/ 模型/ ;/ 第/ 4/ 节/ 详细/ 讨论/ Mediacoop/ 的/ 设计/ 细节/ ;/ 第/ 5/ 节/ 给出/ 理论/ 上/ 和/ 实验/ 上/ 的/ 验证/ 结果/ ,/ 并/ 介绍/ 实际/ 系统/ 的/ 运行状况/ ;/ 第/ 6/ 节对/ 全文/ 进行/ 总结/ ./ 2/ 相关/ 工作/ P2P/ -/ VoD/ 网络/ 一般/ 分为/ 树形/ 结构/ 和/ 网状结构/ 两类/ ./ 树形/ 结构/ 被/ 较/ 早/ 提出/ ,/ 但是/ 由于/ 树形/ 结构/ 并/ 不适/ 用于/ 动态性/ 很强/ 的/ P2P/ 网络/ ,/ 目前/ 主要/ 的/ 研究/ 方向/ 集中/ 在/ 网状结构/ ./ 我们/ 先/ 简单/ 介绍/ 树形/ 结构/ 的/ 已有/ 方法/ ./ P2Cast/ [/ 8/ ]/ 是/ 一个/ 典型/ 的/ 单播/ 树/ 系统/ ,/ 它/ 使用/ 补丁/ 技术/ 进行/ 数据流/ 分发/ ./ 然而/ ,/ 在/ 这种/ 分发/ 模型/ 中/ ,/ 一个/ 播放/ 节点/ 只有/ 唯一/ 的/ 父亲/ 节点/ 提供数据/ ,/ 这/ 对于/ 异构/ 网络/ 来说/ 是/ 远远不够/ 的/ ./ 另外/ ,/ 在/ 动态性/ 很强/ 的/ P2P/ 环境/ 下/ 维护/ 树形/ 结构/ 是/ 很/ 困难/ 的/ ./ 作为/ 改进/ ,/ P2VoD/ [/ 9/ ]/ 把/ 分发/ 树/ 组织/ 为/ 层次结构/ ./ 当/ 节点/ 离开/ 的/ 时候/ 会/ 自动/ 由/ 上层/ 节点/ 替代/ ,/ 新/ 加入/ 系统/ 的/ 节点/ 被/ 分配/ 到/ 最低/ 层/ ./ 但是/ ,/ P2VoD/ 并/ 没有/ 提出/ 适合/ 点播/ 的/ 动态/ 交互/ 操作/ ,/ 例如/ 跳转/ 等/ ./ 作为/ 网络结构/ 上/ 的/ 极大/ 改进/ ,/ 网状结构/ 是/ 目前/ 主要/ 的/ 研究/ 方向/ ./ PROP/ 作为/ 网状结构/ 的/ 代表/ ,/ 以/ DHT/ 作为/ 基础/ 提供/ P2P/ -/ VoD/ 服务/ ./ 在/ PROP/ 中/ ,/ 只要/ 节点/ 获取/ 到/ 一个/ 数据/ 块/ ,/ 它/ 便/ 把/ 该/ 数据/ 块/ 的/ 信息/ 发布/ 到/ 网络/ 中/ ./ 当/ 节点/ 需要/ 数据/ 的/ 时候/ ,/ 它/ 先/ 去/ 查询/ DHT/ 获得/ 拥有/ 所/ 请求/ 内容/ 的/ 节点/ ,/ 再/ 向/ 这些/ 节点/ 请求/ 数据/ ./ 这种/ 方法/ 带来/ 一个/ 严重/ 的/ 问题/ ,/ 在/ 观看/ 过程/ 中/ ,/ 节点/ 收到/ 的/ 内容/ 随/ 播放/ 进度/ 发生变化/ ,/ 这样/ ,/ 节点/ 就要/ 不断/ 地/ 发布/ 新/ 收到/ 的/ 内容/ 信息/ ./ 这种/ 频繁/ 的/ 更新/ 消息/ 带来/ 了/ 巨大/ 的/ 网络/ 开销/ ./ 不仅如此/ ,/ 当/ 缓冲区/ 中/ 陈旧/ 数据/ 被/ 丢弃/ 的/ 时候/ ,/ 也/ 要/ 发布/ 相应/ 的/ 删除/ 信息/ ./ PROMISE/ [/ 3/ ]/ 在/ 节点/ 的/ 物理性能/ 上/ 进行/ 了/ 探索/ ,/ 基于/ 网络带宽/ 提出/ 了/ 一种/ 节点/ 选择/ 方法/ ./ 在/ 播放/ 过程/ 中/ ,/ 它/ 利用/ 实际/ 传输/ 的/ 媒体/ 数据/ 计算/ 邻居/ 节点/ 可以/ 提供/ 的/ 可用/ 带宽/ ,/ 从而/ 进行/ 节点/ 的/ 优化/ 筛选/ ./ 但是/ ,/ 这种/ 方法/ 是/ 在/ 节点/ 间/ 建立/ 网络连接/ 后/ 进行/ 数据传输/ 的/ 时候/ 进行/ 的/ ,/ 也就是说/ 是/ 此时/ 的/ 资源/ 节点/ (/ 或/ 称为/ 邻居/ 节点/ )/ 已经/ 存在/ ,/ 目标/ 是/ 进行/ 节点/ “/ 选择/ ”/ 而/ 不是/ “/ 查找/ ”/ ./ 因此/ ,/ 物理/ 带宽/ 这一/ 指标/ 并/ 不适/ 用于/ 节点/ 查找/ 这种/ 场景/ ./ 和/ 我们/ 工作/ 较为/ 相关/ 的/ 主要/ 是/ OBN/ [/ 6/ ]/ 和/ RINDY/ [/ 7/ ]/ ./ OBN/ 减少/ 了/ 上述/ DHT/ 方法/ 带来/ 的/ 网络/ 开销/ ,/ 它/ 利用/ 节点/ 间/ 缓冲区/ 的/ 重叠/ 关系/ 构建/ 非/ DHT/ 的/ 结构化/ overlay/ ./ 但是/ ,/ 节点/ 物理性能/ 的/ 研究/ 依然/ 没有/ 在/ OBN/ 中/ 得以/ 实现/ ./ RINDY/ 使用/ 类似/ 的/ 方法/ Page3/ 构建/ 了/ 一个多/ 环/ 的/ 查找/ 网络/ ./ 查询/ 者/ 缩小/ 环形/ 范围/ 直至/ 找到/ 候选/ 节点/ 集合/ ,/ 再/ 使用/ Gossip/ 协议/ 定位/ 拥有/ 所/ 需/ 内容/ 节点/ ./ 但是/ ,/ Gossip/ 协议/ 会/ 带来/ 较大/ 的/ 网络/ 开销/ 并且/ 这种/ 方法/ 依然/ 没有/ 考虑/ 节点/ 物理性能/ 上/ 的/ 优劣/ ./ 3Mediacoop/ 的/ 系统/ 模型/ 本/ 节/ 主要/ 讨论/ Mediacoop/ 的/ 基本思路/ ,/ 具体/ 细节/ 设计/ 在/ 第/ 4/ 节中/ 介绍/ ./ Mediacoop/ 的/ 两大/ 中心/ 任务/ :/ (/ 1/ )/ 如何/ 提供/ 高效/ 的/ 内容/ 查询/ ;/ (/ 2/ )/ 如何/ 找到/ 网络/ 延迟/ 较/ 低/ 的/ 节点/ ./ 相应/ 地/ ,/ Mediacoop/ 的/ 搜索/ 过程/ 分为/ 两个/ 阶段/ ,/ 这/ 两个/ 阶段/ 对应/ 着/ 两个/ 不同/ 的/ 覆盖网/ ,/ 基本/ 思想/ 由/ 3.1/ 节/ 和/ 3.2/ 节/ 分别/ 介绍/ ./ 3.1/ 播放/ 点/ 覆盖网/ (/ PlaypointOverlay/ )/ 本/ 节/ 介绍/ 第/ 1/ 阶段/ 查询/ 的/ 基本/ 思想/ ./ 第/ 1/ 阶段/ 的/ 目标/ 是/ 内容/ 匹配/ 查询/ ,/ 我们/ 把/ 一部/ 电影/ 分为/ M/ 个/ 数据/ 块/ ,/ 数据/ 块/ 按/ 播放/ 顺序/ 编号/ 为/ block1/ ,/ block2/ ,/ …/ ,/ blockm/ ,/ 每/ 一个/ 数据/ 块/ 对应/ 一个/ 播图/ 1/ 播放/ 示意图/ 2/ 播放/ 点/ 覆盖网/ 由/ 节点/ 的/ 路由表/ 构建/ 而成/ 3.2/ 前缀/ 树/ 覆盖网/ (/ Prefix/ -/ TreeOverlay/ )/ 第/ 1/ 阶段/ 查询/ 的/ 结果/ 我们/ 称之为/ 种子/ 节点/ ,/ 该/ 种子/ 节点/ 满足/ 内容/ 匹配/ 要求/ ,/ 在/ 第/ 2/ 阶段/ 中/ ,/ 我们/ 的/ 放点/ ./ 这样/ ,/ 节点/ pi/ 的/ 播放/ 点/ (/ PlayPoint/ )/ PPpi/ 定义/ 为/ 节点/ pi/ 当前/ 正在/ 播放/ 的/ 数据/ 块/ 编号/ blockj/ ./ 拥有/ 相同/ 播放/ 点/ 的/ 节点/ 被/ 归/ 为/ 同一个/ swarm/ (/ 如图/ 1/ (/ a/ )/ 所示/ )/ ./ 对于/ 给定/ 影片/ ,/ 不同/ 节点/ 播放/ 该/ 影片/ 的/ 速度/ 是/ 一样/ 的/ ./ 因此/ ,/ 正常/ 播放/ 情况/ 下/ ,/ 播放/ 点间/ 的/ 距离/ 是/ 不/ 发生变化/ 的/ (/ 除非/ 节点/ 进行/ 跳转/ 或/ 暂停/ 操作/ )/ ./ 在/ 第/ 1/ 阶段/ ,/ 我们/ 的/ 想法/ 是/ 利用/ 播放/ 点/ 距离/ 把/ 全部/ 的/ swarm/ 索引/ 在/ 一个/ 环上/ (/ 图/ 1/ (/ b/ )/ )/ ./ 一个/ swarm/ 只要/ 建立/ 好/ 索引/ 信息/ (/ 即/ 路由表/ )/ ,/ 即使/ 在/ 播放/ 过程/ 中/ ,/ 不用/ 更新/ 索引/ 也/ 可以/ 获知/ 其它/ swarm/ 当前/ 的/ 状态/ ,/ 如图/ 2/ 所示/ ./ 每个/ 节点/ 的/ 路由表/ 存储/ 了/ 其它/ swarm/ 播放/ 点/ 的/ 信息/ (/ 详见/ 4.2/ 节/ )/ ,/ 路由表/ 中/ 的/ 每条/ 表项/ 由/ 播放/ 点/ 距离/ 计算/ 得出/ ./ 请求者/ 可以/ 方便/ 地/ 查找/ 到/ 拥有/ 目标/ 播放/ 点/ 的/ 节点/ ,/ 整个/ 查找/ 过程/ 类似/ 于/ 著名/ 的/ Chord/ 网络/ [/ 10/ ]/ ,/ 不同之处/ 在于/ 我们/ 使用/ 了/ 播放/ 点/ 距离/ 而/ 不是/ Hash/ 值/ ./ 因此/ ,/ 播放/ 点/ 距离/ 的/ 不变性/ 使得/ 节点/ 不/ 需要/ 更新/ 索引/ 信息/ 也/ 获知/ 其它/ swarm/ 的/ 状态/ ./ 这个/ 特性/ 使/ Mediacoop/ 大大减少/ 了/ 网络/ 开销/ ./ 播放/ 点/ 距离/ 的/ 数学/ 定义/ 在/ 4.2/ 节中/ 给出/ ./ 目标/ 是从/ 种子/ 节点/ 出发/ ,/ 找到/ 网络/ 延迟/ 最小/ 的/ 节点/ 子集/ ./ 实际上/ ,/ 第/ 2/ 阶段/ 查询/ 就是/ 在/ 种子/ 节点/ 所属/ 的/ swarm/ 中/ 进行/ 的/ ,/ 因为/ 根据/ 第/ 1/ 阶段/ 的/ 查找/ 过程/ ,/ 最后/ 定位/ 的/ swarm/ 就是/ 种子/ 节点/ 所在/ 的/ 节点/ 集合/ ./ 因此/ ,/ 如何/ 把/ swarm/ 内部/ 的/ 节点/ 索引/ 起来/ 是/ 第/ 2/ 阶段/ 的/ 首要任务/ ./ 因为/ 查询/ 目标/ 是/ 延迟/ 最小/ ,/ 而/ 延迟/ 和/ AS/ 域/ 的/ IP/ 前缀/ 又/ 有/ 密切关系/ [/ 11/ ]/ ,/ 我们/ 的/ 基本/ 想法/ 是/ 用/ IP/ 前缀/ 把/ 同一个/ swarm/ 中/ 的/ 节点/ 索引/ 起来/ ,/ 如图/ 3/ (/ b/ )/ 所示/ 的/ 索引/ 树/ ./ 这样/ ,/ 由/ 文献/ [/ 11/ ]/ 的/ 方法/ 可以/ 获得/ 全局/ 延迟/ 表/ ,/ 根据/ 该表便/ 可/ 得知/ 延迟/ 最小/ 的/ IP/ 前缀/ 并/ 作为/ 查询/ 目标/ ,/ 再/ 根据/ 图/ 3/ (/ b/ )/ 所示/ 的/ 索引/ 树便/ 可/ 找到/ 属于/ 目标/ IP/ 前缀/ 的/ 节点/ ./ 具体/ 细节/ 将/ 在/ 第/ 4/ 节/ 加以/ 介绍/ ./ Page4/ 图/ 3/ 层次/ 查找/ 的/ 例子/ 4Mediacoop/ 的/ 详细/ 设计/ 在/ 本节/ 中/ ,/ 首先/ 介绍/ 为何/ 使用/ 网络/ 延迟/ 作为/ 物理性能/ 的/ 衡量标准/ ,/ 以及/ 如何/ 探测/ 全网/ AS/ 域间/ 延迟/ ;/ 接下来/ 将/ 详细/ 介绍/ 层次化/ 索引/ 信息/ (/ 双层/ 路由表/ )/ 的/ 构建/ ,/ 并/ 介绍/ 如何/ 使用/ 路由表/ 进行/ 查询/ ;/ 最后/ 讨论/ 系统/ 的/ 维护/ 代价/ 和/ 系统/ 开销/ ./ 4.1/ 节点/ 物理性能/ 的/ 获取/ 作为/ 交互性/ 较强/ 的/ 应用/ ,/ P2P/ 系统对/ 端到/ 端的/ 延迟/ 是/ 很/ 敏感/ 的/ [/ 11/ ]/ ./ 特别/ 是/ 在/ 点播/ 服务/ 中/ ,/ 用户/ 的/ 交互性/ 操作/ 频繁/ 发生/ (/ 例如/ 启动/ 、/ 跳转/ 、/ 暂停/ 等/ )/ ,/ 如果/ 节点/ 间/ 延迟/ 很大/ ,/ 会/ 导致/ 较长/ 的/ 反应时间/ ./ 国际/ 通信/ 联盟/ G114/ 号/ 文件/ [/ 12/ ]/ 建议/ ,/ 对于/ 大多数/ 交互性/ 应用/ ,/ 以/ 150ms/ 作为/ 物理/ 链路/ 上端/ 到/ 端/ 延迟/ 的/ 上限/ ./ 因此/ ,/ 在/ 本文/ 中/ ,/ 采用/ 网络/ 延迟/ 作为/ 衡量/ 节点/ 物理性能/ 的/ 指标/ ,/ 以/ 150ms/ 作为/ 端到/ 端/ 延迟/ 的/ 上限/ ./ 虽然/ 端到/ 端/ 延迟/ 可能/ 随/ 时间/ 发生变化/ ,/ 但是/ 十分/ 精确/ 的/ 值/ 对/ 我们/ 来说/ 意义/ 并不大/ ./ 我们/ 只/ 需要/ 记录/ 节点/ 间/ 的/ 平均/ 延迟/ 值/ ,/ 选取/ 延迟/ 较/ 小/ 的/ 作为/ 邻居/ 节点/ ./ 因此/ ,/ 我们/ 最/ 关心/ 的/ 是/ 如何/ 获得/ 端到/ 端/ 延迟/ ./ 实际上/ ,/ 互联网/ 是/ 由/ 多个/ AS/ (/ AutonomousSystems/ )/ 域/ 组成/ ,/ 位于/ 同一个/ AS/ 内/ 的/ 节点/ 距离/ 较近/ ,/ 它们/ 对外部/ AS/ 表现/ 出/ 的/ 网络/ 延迟/ 相似/ ./ 不同/ AS/ 间/ 的/ 路由/ 方式/ 由/ 边际/ 网关/ 协议/ (/ BGP/ )/ 指定/ ./ AS/ 内部/ 又/ 分为/ 更/ 小/ 的/ 域/ (/ Cluster/ )/ ,/ 由/ IP/ 前缀/ 分割/ 开来/ ./ 这样/ 只/ 需要/ 获得/ 域间/ 延迟/ ,/ 选择/ 与/ 查询/ 者/ 延迟/ 最小/ 的/ 域/ 中/ 节点/ 作为/ 邻居/ ./ 我们/ 使用/ 文献/ [/ 11/ ]/ 中/ 的/ 方法/ 获得/ 全/ 覆盖网/ 的/ 域间/ 延迟/ 表/ ,/ 这样/ 就/ 可以/ 从/ 该表中/ 获得/ 延迟/ 最小/ 的/ 域/ 作为/ 查询/ 目标/ ./ 该/ 延迟/ 探测/ 方法/ 的/ 概括性/ 介绍/ 在/ 下/ 段/ 中/ 给出/ (/ 更/ 多/ 细节/ 可以/ 参考文献/ [/ 11/ ]/ )/ ./ 图/ 4/ 描述/ 了/ 延迟/ 探测/ 的/ 整个/ 过程/ ./ 首先/ ,/ 可以/ 从/ 边际/ 网关/ 协议/ 公共信息/ 提供/ 处/ 获取/ BGP/ 路由表/ 及其/ 更新/ 信息/ ,/ 例如/ 从/ RouteViews/ (/ http/ :/ // // www/ ./ routeviews/ ./ org/ )/ 和/ RIPERIS/ (/ http/ :/ // // www/ ./ ripe/ ./ net/ // projects/ // ris/ )/ 均/ 可/ 获取/ ./ 由/ 这些/ 路由表/ ,/ 可以/ 构建/ 整个/ 覆盖网/ 的/ 组成/ 图/ ,/ 其/ 组成/ 单位/ 是/ 以/ IP/ 前缀/ 分割/ 的/ 各个/ 域/ (/ Cluster/ )/ ./ 我们/ 以/ 随机/ 的/ 方式/ 从/ 每个/ 域/ 中/ 选取/ 一个/ 节点/ 作为/ 该域/ 的/ “/ 代表/ ”/ ./ 任意/ 两个/ 域/ 之间/ 的/ 延迟/ 是/ 通过/ 使用/ 工具/ King/ [/ 13/ ]/ 测量/ 对应/ “/ 代表/ ”/ 的/ 延迟/ 获得/ ./ 最后/ 得到/ 两个/ 表/ :/ (/ 1/ )/ IP/ 与/ 对应/ 的/ 域/ 的/ 映射/ 表/ (/ ICMT/ )/ ;/ (/ 2/ )/ 域/ 与域/ 之间/ 的/ 延迟/ 表/ (/ CCDT/ )/ ./ 由/ ICMT/ ,/ 节点/ 可以/ 获知/ 自己/ 所属/ 的/ 域/ ,/ 再/ 由/ CCDT/ 获得/ 与其/ 所属/ 的/ 域/ 延迟/ 最小/ 的/ 目标/ 域/ ./ 表/ 1/ 给出/ 了/ CoolFish/ 网络/ CCDT/ 的/ 例子/ ./ 接下来/ 的/ 核心/ 任务/ 就是/ 如何/ 把/ 这些/ 域/ 组织/ 起来/ 提供/ 高效/ 搜索/ ./ 表/ 1CoolFish/ 的/ CCDT/ (/ 时间/ :/ 2009.09/ ./ 02/ ,/ 15/ :/ 00/ )/ 159.226/ ./ 40/ ./ / 0202.127/ ./ 200/ ./ / 31210.72/ ./ 15/ ./ / 8/ 在/ 本文/ 方法/ 中/ ,/ 所有/ 的/ 域/ 被/ 组织/ 成/ 二叉树/ 的/ 结构/ ,/ 每个/ 叶子/ 节点/ 代表/ 一个/ 域/ ./ 这样/ ,/ 叶子/ 节点/ 的/ 个数/ K/ 和/ 全部/ 域/ 的/ 个数/ 是/ 相等/ 的/ ./ 每个/ 叶子/ 节点/ 以/ 其/ 物理地址/ 作为/ 标识/ (/ 即/ IP/ 前缀/ )/ ,/ 在/ 表现形式/ 上/ 是/ 其/ 对应/ 的/ 前缀/ 码/ ./ 叶子/ 节点/ 1/ 和/ 叶子/ 节点/ 2/ 的/ 距离/ 由/ 他们/ 前缀/ 码/ 的/ 异或/ 运算/ 得出/ ./ 在/ 形式/ 上/ ,/ 距离/ 计算/ 如下/ 所示/ :/ DIPprefix/ (/ n1/ ,/ n2/ )/ =/ Prefixn1/ / Prefixn2/ (/ 1/ )/ 注意/ ,/ 第/ 1/ 阶段/ 得到/ 的/ 目标/ swarm/ 中/ 的/ 节点/ 就/ Page5/ 分散/ 在/ 这些/ 叶子/ 节点/ 中/ ,/ 如果/ 节点/ 稀少/ 会/ 导致/ 个别/ 叶子/ 节点/ 为空/ (/ 如图/ 3/ (/ b/ )/ 所示/ )/ ,/ 这样/ 的/ 空/ 叶子/ 节点/ 在/ 实际操作/ 中/ 不会/ 被/ 索引/ 起来/ ./ 有些/ 人/ 可能/ 会/ 提出/ 质疑/ ,/ 为什么/ 我们/ 使用/ 树形/ 结构/ 来/ 组织/ IP/ 前缀/ 呢/ ?/ 原因/ 其实/ 很/ 简单/ :/ 二叉树/ 叶子/ 节点/ 的/ 距离/ 计算/ 和/ IP/ 前缀/ 的/ 距离/ 计算/ 是/ 一致/ 的/ ,/ 都/ 是/ 异或/ 操作/ ./ 4.2/ 双层/ 路由表/ 的/ 构建/ 在/ Mediacoop/ 中/ ,/ 一次/ 查找/ 由/ 两/ 阶段/ 组成/ ,/ 分别/ 在/ 两个/ 覆盖网/ 中/ 进行/ ,/ 相应/ 的/ 每个/ 节点/ 的/ 路由表/ 包含/ 两个/ 子表/ ,/ 分别/ 是/ 播放/ 点/ 路由表/ 和/ IP/ 前缀/ 路由表/ ./ 播放/ 点/ 路由表/ :/ 播放/ 点/ 路由表/ 存储/ 了/ 其它/ swarm/ 播放/ 点/ 的/ 信息/ ./ 以/ 节点/ p/ 的/ 播放/ 点/ 路由表/ 为例/ ,/ 该表有/ logM/ (/ M/ 是/ 数据/ 块/ 的/ 数量/ )/ 行/ ,/ 第/ i/ 行/ (/ 0/ / i/ </ logM/ )/ 保存/ 着/ α/ 个/ 节点/ 的/ 播放/ 点/ 信息/ ,/ 该/ α/ 个/ 节点/ 与/ p/ 播放/ 距离/ 为/ 2i/ ~/ 2i/ +/ 1/ ./ 播放/ 距离/ (/ p1/ →/ p2/ )/ 的/ 定义/ 如下/ :/ 顺时针/ 沿/ 播放/ 点/ 覆盖网/ (/ 即图/ 1/ (/ b/ )/ 所示/ 的/ 环/ )/ p1/ ~/ p2/ 的/ 跳数/ ./ 其/ 数学/ 的/ 形式化/ 定义/ 表示/ 为/ Dplaypoint/ (/ p1/ ,/ p2/ )/ =/ (/ (/ PPp2/ -/ PPp1/ )/ +/ M/ )/ modM/ 式/ 中/ ,/ M/ 是/ 数据/ 块/ 的/ 个数/ ,/ PPpi/ 是/ 节点/ pi/ 的/ 播放/ 点/ ./ 图/ 5/ (/ a/ )/ 给出/ 了/ 播放/ 点/ 路由表/ 的/ 结构/ ./ 每行/ 记录/ 了/ α/ =/ 2/ 个/ 节点/ 的/ 信息/ (/ 这里/ 的/ α/ =/ 2/ 是/ 我们/ 的/ 经验值/ ./ 为了/ 保证/ 路由/ 节点/ 的/ 可用性/ ,/ 建议/ 每条/ 路由表/ 项中/ 存储/ 的/ 节点/ 个数/ 大于/ 1/ )/ ./ IP/ 前缀/ 路由表/ :/ 以/ 节点/ p/ 为例/ ,/ 其/ IP/ 前缀/ 路由表/ 存储/ 了/ 和/ 自己/ 所在/ 同一/ swarm/ 中/ 的/ 其它/ 节点/ 信息/ ./ IP/ 前缀/ 路由表/ 有/ logK/ (/ K/ 是/ 叶子/ 节点/ 的/ 数量/ )/ 行/ ./ 第/ j/ 行/ (/ 0/ / j/ </ logK/ )/ 保存/ 着/ β/ 个/ 节点/ 的/ IP/ 前缀/ 信息/ ,/ 该/ β/ 节点/ 与/ p/ 的/ 前缀/ 码/ 距离/ 为/ 2j/ ~/ 2j/ +/ 1/ ./ 该/ 距离/ 的/ 计算方法/ 如式/ (/ 1/ )/ 所示/ ./ 图/ 5/ (/ b/ )/ 给出/ 了/ IP/ 前缀/ 路由表/ 的/ 结构/ 示意图/ ./ 4.3/ 查询/ 过程/ 内容/ 匹配/ 查询/ :/ 即/ 在/ 播放/ 点/ 覆盖网/ 中/ 进行/ 的/ 第/ 1/ 阶段/ 查询/ ,/ 图/ 6/ 给出/ 了/ 该/ 查询/ 算法/ 的/ 伪/ 代码/ ./ 查询/ 过程/ 为/ 递归/ 方式/ ,/ 描述/ 如下/ :/ 当/ 节点/ A/ 收到/ 查询/ 消息/ ,/ 它/ 首先/ 根据/ 式/ (/ 2/ )/ 计算/ 自己/ 与/ 目标/ 数据/ 块/ 的/ 距离/ D/ ,/ 然后/ 该/ 节点/ 从/ 自己/ 的/ 播放/ 点/ 路由表/ 中/ 选出/ 与/ D/ 最近/ 的/ 节点/ B/ 并/ 把/ 该/ 查询/ 消息/ 转发给/ B/ ./ 该/ 查询/ 结束/ 的/ 条件/ 为/ :/ (/ 1/ )/ 发现/ 节点/ C/ 的/ 距离/ 等于/ D/ ,/ 此时/ 节点/ C/ 作为/ 种子/ 节点/ 被/ 返回/ ;/ (/ 2/ )/ 已/ 没有/ 更近/ 的/ 节点/ 可以/ 转发/ ,/ 此时/ 当前/ 节点/ 作为/ 种子/ 节点/ 被/ 返回/ ./ 图/ 6/ 内容/ 匹配/ 查询/ 算法/ 伪/ 代码/ (/ NodeA/ 收到/ 内容/ 质量/ 匹配/ 查询/ :/ 即/ 从/ 第/ 1/ 阶段/ 获得/ 的/ 种子/ 节点/ 出发/ ,/ 在/ IP/ 前缀/ 覆盖网/ 中/ 进行/ 的/ 第/ 2/ 阶段/ 查询/ ./ 查询/ 目标/ 是/ 发起者/ p/ 的/ CCTD/ 中/ 延迟/ 最小/ 的/ 域/ ,/ 然后/ 发起者/ p/ 向/ 种子/ 节点/ 发送/ 查询/ 消息/ ./ 种子/ 节点/ 从/ 自己/ 的/ IP/ 前缀/ 路由表/ 中/ 找到/ 距离/ 目标/ 最近/ 的/ 节点/ ,/ 并/ 向/ 其/ 转发/ 查询/ 消息/ ./ 转发/ 节点/ 递归/ 的/ 进行/ 上述/ 操作/ 直到/ 没有/ 更近/ 的/ 节点/ 进行/ 转发/ (/ 注意/ 这里/ 和/ 上述/ 结束/ 条件/ 不同/ ,/ 我们/ 的/ 目的/ 是/ 获得/ 更/ 多/ 的/ 节点/ )/ ./ 在/ 查询/ 过程/ 中/ ,/ 任意/ 符合要求/ (/ IP地址/ 和/ 目标/ IP/ 前缀/ 一致/ )/ 的/ 节点/ 都/ 将/ 被/ 返回/ ./ 如果/ 最后/ 仍/ 没有/ 返回/ 任何/ 节点/ ,/ 那么/ 发起者/ p/ 会/ 要求/ 种子/ 节点/ 随机/ 的/ 返回/ 在/ 同/ Page6/ 一/ swarm/ 中/ 的/ 节点/ 即可/ ,/ 因为/ 这些/ 节点/ 虽然/ 没有/ 最低/ 的/ 延迟/ ,/ 但是/ 在/ 内容/ 上/ 都/ 是/ 满足要求/ 的/ ./ 图/ 7/ 给出/ 了/ 该/ 查询/ 算法/ 的/ 伪/ 代码/ ./ 图/ 7/ 质量/ 匹配/ 查询/ 算法/ 伪/ 代码/ (/ NodeB/ 收到/ 质量/ 一个/ 查询/ 实例/ :/ 图/ 3/ 给出/ 了/ 从/ 发起者/ p0/ 开始/ 的/ 整个/ 查询/ 过程/ ./ 如图/ 3/ (/ a/ )/ 所示/ ,/ p0/ 发起/ 查询/ 消息/ ,/ 目标/ 是/ 找到/ 能够/ 提供/ 8/ 号/ 数据/ 块/ 的/ 节点/ ./ p0/ 首先/ 计算/ 自己/ 和/ 8/ 号/ 数据/ 块/ 的/ 距离/ :/ Dplaypoint/ (/ p0/ ,/ block8/ )/ =/ 6/ ,/ 然后/ 向/ 最近/ 的/ 邻居/ p8/ 发出/ “/ 内容/ 匹配/ ”/ 查询/ 消息/ ./ 以/ 同样/ 的/ 方式/ ,/ p8/ 计算/ 出/ 自己/ 和/ 目标/ 数据/ 块/ 的/ 距离/ 为/ D/ =/ 1/ 然后/ 发现/ 节点/ p13/ 是/ 属于/ 目标/ swarm/ 的/ ./ 因此/ ,/ p13/ 作为/ 种子/ 节点/ 被/ 返回/ ./ 接下来/ ,/ p0/ 从/ 自己/ 的/ 域间/ 延迟/ 表中/ 找到/ 目标/ IP/ 前缀/ 210.77/ ./ / 并/ 发起/ 第/ 2/ 阶段/ 查询/ ./ p0/ 向/ 种子/ 节点/ p13/ 发出/ IP/ 前缀/ 查询/ 消息/ (/ 如图/ 3/ (/ b/ )/ )/ ,/ 收到/ 查询/ 消息/ 后/ ,/ p13/ 从/ 自己/ 的/ IP/ 前缀/ 路由表/ 中/ 发现/ p14/ 最近/ 并/ 把/ 消息/ 转发给/ p14/ ./ 以/ 同样/ 的/ 方式/ ,/ p14/ 把/ 查询/ 消息/ 转发给/ p15/ 最后/ 找到/ 了/ 位于/ 210.77/ ./ / 内/ 的/ 目标/ 节点/ ./ 4.4/ 节点/ 加入/ 及/ 系统维护/ 当/ 节点/ p/ 加入/ 网络/ 的/ 时候/ ,/ 它/ 首先/ 联系/ 一个/ 业已/ 存在/ 的/ 节点/ J/ ./ p/ 以/ J/ 的/ 路由/ 信息/ 初始化/ 自己/ 路由表/ ,/ 然后/ 节点/ p/ 以/ 自己/ 为/ 目标/ (/ 播放/ 点/ 和/ IP/ 前缀/ )/ 进行/ 一次/ 完整/ 的/ 查询/ 操作/ ./ 完成/ 查询/ 之后/ ,/ 节点/ p/ 获得/ 了/ 最近/ 的/ 节点/ 网络/ 中距离/ 自己/ 最近/ 的/ 节点/ Y/ ,/ 最后/ ,/ p/ 使用/ Y/ 的/ 路由表/ 内容/ 来/ 刷新/ 自己/ 的/ 路由表/ ./ 注意/ ,/ 最后/ 这次/ 刷新/ 的/ 作用/ 是/ :/ 因为/ Y/ 已经/ 是/ 距离/ p/ 最近/ 的/ 节点/ ,/ 对于/ p/ 来说/ 就是/ 如何/ 获取/ 比/ Y/ 更远/ 的/ 节点/ 信息/ ,/ 而/ Y/ 的/ 路由表/ 刚好/ 可以/ 提供/ ./ 在/ 路由表/ 刷新/ 的/ 过程/ 中/ ,/ p/ 也/ 把/ 自己/ 的/ 信息/ 插入/ 到/ 了/ 其它/ 节点/ 的/ 路由表/ 中/ ./ 当/ 节点/ p/ 进行/ 跳转/ 、/ 暂停/ 、/ 停止/ 等/ VCR/ 操作/ 的/ 时候/ ,/ p/ 会/ 通知/ 邻居/ 节点/ (/ 路由表/ 中/ 的/ 全部/ 节点/ )/ 自己/ 新/ 的/ 播放/ 点/ ,/ 同时/ 邻居/ 会/ 更新/ 相应/ 的/ 信息/ ./ 在/ 我们/ 的/ 方法/ 中/ ,/ 域间/ 延迟/ 探测/ 程序运行/ 在/ 单独/ 探测/ 服务器/ 上/ ,/ 并/ 间隔/ 地/ 更新/ ICMT/ 和/ CCDT/ 以/ 提供/ 最近/ 的/ 数据/ ./ 有/ 一点/ 需要/ 注意/ 的/ 是/ ,/ CCDT/ 记录/ 的/ 是/ 平均/ 延迟/ ./ 当/ 一个/ 节点/ 加入/ 系统/ ,/ 它/ 首先/ 是/ 向/ 探测/ 服务器/ 请求/ ICMT/ 和/ CCDT/ 并/ 以/ 服务器/ 的/ 更新/ 频率/ 进行/ 数据/ 更新/ (/ 在/ 我们/ 的/ 系统/ 中/ ,/ 更新/ 频率/ 是/ 30min/ )/ ./ 5/ 理论/ 分析/ 及/ 实验/ 5.1/ 理论/ 分析/ 在/ 本节/ 中/ ,/ 我们/ 分析/ Mediacoop/ 的/ 查询/ 效率/ ./ 因为/ 该/ 方法/ 涉及/ 到/ 两/ 阶段/ 查询/ ,/ 可以/ 建立/ 如下/ 分析模型/ :/ P/ (/ M/ ,/ K/ )/ =/ PFirstStage/ (/ M/ )/ +/ PSecondStage/ (/ K/ )/ ,/ 其中/ ,/ P/ (/ M/ ,/ K/ )/ 是/ 总/ 的/ 查询/ 跳数/ ,/ PFirstStage/ (/ M/ )/ 和/ PSecondStage/ (/ K/ )/ 分别/ 是/ 第/ 1/ 阶段/ 和/ 第/ 2/ 阶段/ 的/ 查询/ 跳数/ ,/ M/ 是/ 数据/ 块/ 的/ 数量/ ,/ K/ 是域/ (/ 即/ 叶子/ 节点/ )/ 的/ 数量/ ./ 首先/ 分析/ 第/ 1/ 阶段/ 的/ 查询/ 效率/ PFirstStage/ (/ M/ )/ ./ Me/ -/ diacoop/ 是/ 一个/ 结构化/ 的/ 搜索/ 方法/ ,/ 其/ 搜索/ 过程/ 类似/ 传统/ 的/ DHT/ 方法/ ,/ 例如/ Chord/ ./ 但是/ ,/ 我们/ 使用/ 的/ 是/ 播放/ 点/ 而/ 非/ 节点/ 标识/ 来/ 建立/ 索引/ ./ 因此/ ,/ 本文/ 方法/ 的/ 效率/ 不是/ 传统/ DHT/ 方法/ 的/ O/ (/ logN/ )/ ,/ 而是/ 播放/ 点/ 覆盖网/ 对应/ 的/ 环上/ 的/ 播放/ 点/ 数量/ M/ ./ 但是/ 如果/ 节点/ 很少/ 会/ 导致/ 数据/ 块/ 为/ 空/ (/ 即/ 数据/ 块/ 不/ 对应/ 节点/ )/ ,/ 比如/ 当/ 节点/ 数/ 少于/ 数据/ 块/ 数量/ 的/ 时候/ ,/ 这种/ 情况/ 下/ K/ =/ N/ ./ 因此/ 查找/ 效率/ 应该/ 取/ 二者/ 的/ 最小值/ ,/ 即/ PFirstStage/ (/ M/ )/ =/ minO/ (/ logM/ )/ ,/ O/ (/ logN/ 这里/ ,/ N/ 是/ 网络/ 中/ 全部/ 节点/ 的/ 数量/ ./ 总的来说/ ,/ 对于/ 流行/ 的/ P2P/ 系统/ ,/ 节点/ 的/ 数量/ 是/ 十分/ 庞大/ 的/ ,/ 而/ 一部/ 影片/ 的/ 数据/ 块/ 的/ 数量/ 确实/ 相当/ 有限/ 的/ ./ 举例来说/ ,/ 根据/ 我们/ 实际/ 经验/ ,/ 对于/ 时长/ 为/ 2h/ 的/ 电影/ ,/ 720/ 个/ 数据/ 块/ 就/ 足矣/ 了/ ./ 也就是说/ ,/ M/ / N/ ,/ 因此/ 我们/ 有/ PFirstStage/ (/ M/ )/ =/ min/ {/ O/ (/ logM/ )/ ,/ O/ (/ logN/ )/ }/ =/ O/ (/ logM/ )/ ./ 在/ 第/ 2/ 阶段/ ,/ 搜索/ 过程/ 实际上/ 是/ 在/ 二叉树/ 上/ 的/ 折半/ 查找/ ./ 因此/ ,/ 第/ 2/ 阶段/ 的/ 查找/ 效率/ 和/ 折半/ 查找/ 的/ 时间/ 复杂度/ 一致/ :/ 这里/ ,/ K/ 是域/ 的/ 数量/ ./ 第/ 2/ 阶段/ 的/ 搜索/ 过程/ 在/ 一个/ 较/ 小/ 的/ 范围/ 中/ 进行/ 的/ ,/ 即/ 第/ 1/ 阶段/ 的/ 目标/ swarm/ ./ 而/ Page7/ 平均/ 来看/ ,/ 全部/ 节点/ 是/ 均匀分布/ 在/ 每个/ 数据/ 块/ 中/ 的/ ,/ 即/ 每个/ swarm/ 的/ 节点/ 个数/ n/ =/ N/ // M/ ./ 这样/ ,/ K/ 小于/ 或/ 等于/ n/ ,/ K/ 取/ 最大值/ n/ 的/ 条件/ 是/ 每个/ 域/ 正好/ 只有/ 一个/ 节点/ ./ 因此/ ,/ Mediacoop/ 总/ 的/ 搜索/ 效率/ 为/ P/ (/ M/ ,/ K/ )/ =/ PFirstStage/ (/ M/ )/ +/ PSecondStage/ (/ K/ )/ / O/ (/ logM/ )/ +/ O/ (/ logN/ // M/ )/ =/ O/ (/ logN/ )/ ,/ 即/ 也就是说/ ,/ 在/ 不/ 低于/ 传统/ DHT/ 一次/ 查询/ 的/ 效率/ 下/ ,/ 可以/ 进行/ 两/ 阶段/ 查询/ ,/ 既/ 满足/ 了/ 内容/ 上/ 的/ 要求/ ,/ 也/ 在/ 物理性能/ 上/ 得以/ 提升/ ./ 5.2/ 评价/ 指标/ 及/ 实验/ 参数/ P2P/ -/ VoD/ 的/ 评价/ 指标/ 分为/ 两个/ 方面/ :/ 一是/ 用户/ 体验/ ,/ 二是/ 系统/ 扩展性/ ./ 前者/ 主要/ 指/ 启动/ 时间/ 、/ 跳转/ 时间/ 和/ 播放/ 连贯/ 率/ [/ 5/ ,/ 9/ ]/ ;/ 后者/ 是/ 服务器/ 压力/ 和/ 网络/ 开销/ [/ 5/ ,/ 9/ ]/ ./ 在/ 本文/ 中/ ,/ 我们/ 不仅/ 对/ 以上/ 几点/ 均/ 进行/ 验证/ ./ 还/ 对/ 搜索/ 跳数/ 进行/ 了/ 对比/ ./ 我们/ 把/ Mediacoop/ 分为/ 两个/ 版本/ 进行/ 对比/ ,/ 第/ 1/ 个/ 是/ 单纯/ 的/ 内容/ 搜索/ ,/ 不/ 具备/ 延迟/ 探测/ (/ 简称/ Mediacoop/ (/ no/ -/ DA/ )/ )/ ,/ 即/ 第/ 2/ 阶段/ 没有/ 搜索/ ,/ 取而代之/ 的/ 是/ 使用/ Gossip/ 协议/ 定位/ 节点/ ;/ 第/ 2/ 个/ 版本/ 是/ 两/ 阶段/ 都/ 有/ (/ 简称/ 为/ Mediacoop/ (/ DA/ )/ )/ ./ 为了/ 和/ 目前/ 较为/ 流行/ 的/ 方法/ 进行/ 对比/ ,/ 我们/ 实现/ 了/ 具有/ 代表性/ 的/ 基于/ DHT/ 的/ P2P/ -/ VoD/ 系统/ PROP/ [/ 5/ ]/ ./ 限于/ 本文/ 讨论/ 的/ 内容/ ,/ 我们/ 没有/ 实现/ PROP/ 中/ 的/ 中心/ 服务器/ 功能/ ./ 但/ 我们/ 与/ 传统/ 的/ “/ 缓存/ 转发/ ”/ 系统/ P2VoD/ [/ 9/ ]/ 进行/ 对比/ ①/ ./ 我们/ 的/ 对比/ 试验/ 是/ 在/ NS2/ 模拟器/ 上/ 进行/ 的/ ./ 电影/ 时/ 长/ 设置/ 为/ 3600s/ ,/ 码率/ 为/ 500Kbps/ ,/ 一个/ 数据/ 块/ 对应/ 的/ 播放/ 时长/ 为/ 10s/ ./ 使用/ 拓扑/ 结构/ 生成器/ GT/ -/ ITM/ [/ 14/ ]/ 生成/ 了/ 典型/ 的/ transit/ -/ stub/ 网络/ ,/ 其/ 包含/ 了/ 860/ 个/ 路由器/ ,/ 之后/ 随机/ 选择/ 100/ 个/ stub/ 节点/ 作为/ 域/ 的/ 分隔/ 节点/ ②/ ./ 每个/ stub/ 节点/ 之间/ 的/ 延迟/ 为/ 10ms/ ~/ 60ms/ ./ 同时/ 生成/ 8000/ 个/ 节点/ 以/ 均匀分布/ 的/ 方式/ 依附于/ 每个/ 域/ 上/ ./ 整个/ 实验/ 分为/ 12/ 组/ 进行/ ,/ 对应/ 的/ 节点/ 数量/ 从/ 100/ ~/ 8000/ 不/ 等/ ./ 节点/ 的/ 加入/ 以/ 指数/ 递减/ 的/ 方式/ 进行/ [/ 15/ ]/ :/ 式/ 中/ ,/ λ/ 0/ 是/ 初始/ 加入/ 速率/ ,/ τ/ 为/ 扩散/ 参数/ ./ 相应/ 地/ ,/ 设置/ 节点/ 平均/ 加入/ 时间/ 间隔/ 为/ 5s/ ,/ 平均/ 在线/ 时间/ 为/ 1800s/ ./ 下载/ 带宽/ 为/ 1Mbps/ ,/ 上行/ 带宽/ 可以/ 支持/ 2/ 个/ 并行/ 流/ ./ 启动/ 和/ 跳转/ 时/ 的/ 缓冲/ 数据量/ 为/ 能够/ 播放/ 5s/ 的/ 数据/ ./ 模拟/ 试验/ 程序运行/ 在/ 超级计算机/ Dawning4000A/ 上/ ,/ 总共/ 运行/ 时间/ 大于/ 为/ 4d/ ./ 5.3/ 实验/ 结果/ (/ 1/ )/ 平均/ 跳数/ ./ 在/ 本项/ 指标/ 中/ ,/ 因为/ 验证/ 的/ 是/ 搜索/ 到/ 目标/ 所/ 进行/ 的/ 跳数/ ,/ 是/ 针对/ 结构化/ 搜索/ 方法/ 的/ ,/ 因此/ 并/ 不/ 涉及/ P2VoD/ ./ 图/ 8/ 给出/ 了/ 12/ 组/ 实验/ 对应/ 的/ 平均/ 跳数/ 的/ 实验/ 数据/ ./ 从/ 结果/ 可以/ 看到/ ,/ PROP/ 体现/ 了/ 典型/ 的/ 基于/ DHT/ 方法/ 的/ “/ logN/ ”/ 法则/ ,/ 而/ Mediacoop/ 两个/ 版本/ 的/ 表现/ 均/ 强于/ PROP/ ./ 虽然/ 我们/ 看到/ Mediacoop/ (/ no/ -/ DA/ )/ 跳数/ 少于/ Mediacoop/ (/ DA/ )/ ,/ 那/ 是因为/ 前者/ 没有/ 第/ 2/ 阶段/ 的/ 搜索/ 过程/ ./ (/ 2/ )/ 网络/ 开销/ ./ 网络/ 开销/ 主要/ 是/ 指/ 控制/ 信息/ 的/ 数量/ ,/ 因为/ P2VoD/ 是/ 树形/ 结构/ ,/ 并非/ 网状/ ,/ 因此/ 在/ 本项/ 指标/ 中/ 也/ 不/ 考虑/ P2VoD/ ./ 如图/ 9/ 所示/ ,/ PROP/ 在/ 三者/ 的/ 比较/ 中/ 表现/ 最差/ ,/ 因为/ 它/ 要/ 不断/ 地/ 发布/ 和/ 删除/ 内容/ 信息/ ,/ 导致/ 了/ 大量/ 的/ 控制/ 信息/ ./ Mediacoop/ (/ no/ -/ DA/ )/ 的/ 网络/ 开销/ 虽然/ 强于/ PROP/ 但是/ 要/ 比/ Mediacoop/ (/ DA/ )/ 大得多/ ,/ 因为/ 它/ 在/ 第/ 2/ 阶段/ 使用/ 了/ Gossip/ 协议/ ,/ 也/ 带来/ 了/ 大量/ 的/ 控制/ 信息/ ./ 相比之下/ ,/ Mediacoop/ (/ DA/ )/ 能够/ 减少/ 40/ %/ ~/ 70/ %/ 的/ 网络/ 开销/ ./ ①/ ②/ Page8/ (/ 3/ )/ 服务器/ 压力/ ./ 在/ 实验/ 中/ ,/ 有/ 一个/ 具备/ 1000Mbps/ 上/ 能力/ 的/ 内容/ 服务器/ ./ 如果/ 一个/ 节点/ 没有/ 及时/ 收到/ 其/ 请求/ 的/ 数据/ ,/ 它/ 就/ 立即/ 向/ 内容/ 服务器/ 请求/ 数据/ ./ 图/ 10/ 显示/ 了/ 随着/ 节点/ 数量/ 的/ 变化/ ,/ 内容/ 服务器/ 压力/ 的/ 状况/ ./ 对于/ Mediacoop/ (/ no/ -/ DA/ )/ ,/ 它/ 的/ 压力/ 要/ 大于/ Mediacoop/ (/ DA/ )/ ,/ 因为/ Mediacoop/ (/ no/ -/ DA/ )/ 没有/ 第/ 2/ 阶段/ 搜索/ ,/ 得到/ 的/ 节点/ 延迟/ 较大/ ,/ 造成/ 了/ 请求/ 数据/ 不能/ 及时/ 到达/ ./ 对于/ PROP/ 随着/ 数据/ 缓冲区/ 的/ 不断更新/ ,/ 被/ 抛弃/ 的/ 数据/ 没有/ 来得及/ 更新/ ,/ 对/ 这些/ 数据/ 的/ 请求/ 自然/ 不能/ 得到/ 满足/ ,/ 造成/ 了/ 更/ 大/ 的/ 服务器/ 压力/ ./ 而/ 在/ P2VoD/ 中/ ,/ 服务器/ 压力/ 是/ 最大/ 的/ 并且/ 是/ 线性/ 增长/ 的/ ./ 这/ 是因为/ 它/ 是/ 树形/ 的/ 组织/ 结构/ ,/ 而/ 上层/ 节点/ 的/ 离开/ 会/ 造成/ 它/ 所有/ 孩子/ 节点/ 缺失/ 数据/ ./ (/ 4/ )/ 播放/ 连贯/ 率/ ./ 图/ 11/ 显示/ 了/ 网络/ 规模/ 为/ 4000/ 个/ 节点/ 时/ ,/ 播放/ 连贯/ 率/ 随/ 时间/ 的/ 变化/ ./ Mediacoop/ 的/ 表现/ 要/ 远远/ 好于/ RROP/ 和/ P2VoD/ ,/ 其/ 原因/ 和/ 服务器/ 压力/ 一节/ 中/ 的/ 相同/ ./ 除此之外/ ,/ PROP/ 这种/ 基于/ DHT/ 的/ 方法/ 必须/ 要/ 等到/ 整个/ 数据/ 块/ 都/ 接收/ 完成/ 后/ 才能/ 发布/ 信息/ ,/ 这样/ 势必/ 造成/ 数据共享/ 效率/ 的/ 低下/ ./ (/ 5/ )/ 启动/ 和/ 跳转/ 时间/ ./ 这/ 两个/ 指标/ 涉及/ 到/ 两/ 部分/ 的/ 性能/ 表现/ :/ ①/ 查找/ 速度/ ;/ ②/ 请求/ 数据/ 的/ 速度/ ./ 实际上/ ,/ 前者/ 就是/ 第/ 1/ 项/ 指标/ ,/ 搜索/ 的/ 平均/ 跳数/ ;/ 而/ 后者/ 决定/ 于/ 搜索/ 到/ 的/ 节点/ 的/ 质量/ ./ Mediacoop/ (/ DA/ )/ 能够/ 找到/ 最近/ 的/ 节点/ ,/ 从而/ 保证/ 了/ 请求/ 的/ 数据/ 能够/ 快速/ 到达/ ./ 图/ 12/ 和/ 图/ 13/ 给出/ 了/ 实验/ 结果/ ./ 可以/ 看到/ ,/ 对于/ 5s/ 的/ 数据/ 缓冲区/ ,/ Mediacoop/ (/ DA/ )/ 平均/ 只/ 需要/ 大于/ 3.5/ s/ 的/ 启动/ 时间/ 和/ 2s/ 的/ 跳转/ 时间/ ./ 5.4/ 真实/ 系统/ 上/ 实现/ :/ CoolFish/ 我们/ 实现/ 了/ 一个/ 真实/ 的/ P2P/ -/ VoD/ 系统/ CoolFish/ ①/ ,/ 并且/ 已/ 初具规模/ ./ CoolFish/ 的/ 内容/ 服务器/ 位于/ 中国/ 科技网/ (/ CSTNet/ )/ 内/ ./ 从/ 2008/ 年/ 10/ 月/ 到/ 2010/ 年/ 6/ 月/ ,/ CoolFish/ 的/ 访问/ 用户数/ 已/ 超过/ 4000000/ ,/ 最近/ 的/ 日/ 访问/ 人数/ 已经/ 超过/ 7000/ ,/ 在/ 中国/ 境内/ 的/ 用户/ 分布/ 超过/ 28/ 个/ 省市/ ./ 本文/ 中/ 提到/ 的/ 层次化/ 搜索算法/ 已经/ 在/ CoolFish/ 实现/ ,/ 系统/ 用/ C++/ 编写/ ,/ 总/ 代码/ 量/ 超过/ 80000/ 行/ ./ 表/ 1/ 显示/ 了/ CoolFish/ 系统/ 的/ CCDT/ ./ 我们/ 下/ 一步/ 将/ 在/ CoolFish/ 系统/ 中/ 对/ Mediacoop/ 进行/ 更/ 深入/ 的/ 实验/ 比较/ ./ 6/ 结论/ 及下/ 一步/ 研究/ 节点/ 搜索/ 对于/ P2P/ -/ VoD/ 系统/ 是/ 十分/ 重要/ 的/ ,/ 而/ 最/ 理想/ 的/ 搜索/ 策略/ 是/ 既/ 能/ 满足/ 内容/ 匹配/ ,/ 又/ 可以/ 实现/ 节点/ 质量/ 匹配/ ./ 本文/ 中/ 提出/ 的/ 层次化/ 搜索/ 模型/ ①/ http/ :/ // // www/ ./ cool/ -/ fish/ ./ orgPage9Mediacoop/ 已经/ 初步/ 达到/ 了/ 上述/ 目标/ ./ 它/ 使用/ 了/ 层次化/ 的/ 双/ 结构/ 模型/ ,/ 在/ 内容/ 查找/ 阶段/ 可以/ 避免/ 传统/ 方法/ 中/ 大量/ 的/ 网络/ 开销/ ,/ 同时/ 又/ 可以/ 查找/ 到/ 具有/ 最低/ 网络/ 延迟/ 的/ 节点/ 集合/ ./ 在/ 理论/ 分析/ 上/ ,/ 证明/ 了/ 在/ 小于/ O/ (/ logN/ )/ 的/ 情况/ 下/ ,/ 就/ 可以/ 完成/ 两个/ 阶段/ 的/ 搜索/ 过程/ ./ 从/ 实验/ 结果/ 可以/ 看到/ ,/ Mediacoop/ 在/ 用户/ 体验/ 以及/ 系统/ 扩展性/ 上/ 均/ 好/ 于/ 其它/ 方法/ ./ 同时/ ,/ 我们/ 的/ 方法/ 在/ 真实/ 系统/ CoolFish/ 中/ 的/ 实现/ 也/ 体现/ 了/ Media/ -/ coop/ 的/ 有效性/ ./ 下/ 一步/ ,/ 我们/ 将/ 在/ CoolFish/ 系统/ 中/ 进行/ 更/ 深入/ 的/ 对比/ 分析/ ./ 

