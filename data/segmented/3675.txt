Page1/ 分片/ 位/ 图/ 索引/ :/ 一种/ 适用/ 于云/ 数据管理/ 的/ 辅助/ 索引/ 机制/ 孟必平/ 1/ )/ ,/ 3/ )/ 王腾/ 蛟/ 1/ )/ ,/ 3/ )/ 李红燕/ 2/ )/ ,/ 3/ )/ 杨/ 冬青/ 1/ )/ ,/ 3/ )/ 1/ )/ (/ 高/ 可信/ 软件技术/ 教育部/ 重点/ 实验室/ (/ 北京大学/ )/ 北京/ 100871/ )/ 2/ )/ (/ 机器/ 感知/ 与/ 智能/ 教育部/ 重点/ 实验室/ (/ 北京大学/ )/ 北京/ 100871/ )/ 3/ )/ (/ 北京大学/ 信息/ 科学技术/ 学院/ 北京/ 100871/ )/ 摘要/ 云/ 计算技术/ 的/ 快速/ 发展/ 为/ 海量/ 数据/ 的/ 存储/ 和/ 管理/ 提供/ 了/ 可能/ ./ 然而/ ,/ 由于/ 存储/ 模型/ 的/ 根本/ 改变/ ,/ 传统/ 关系数据库/ 管理系统/ 中/ 成熟/ 的/ 索引/ 技术/ 既/ 不能/ 直接/ 应用/ 于/ 海量/ 数据/ 的/ 处理/ ,/ 也/ 无法/ 被/ 简单/ 地/ 迁移/ 到/ 云/ 计算环境/ 中/ ./ 通过/ 分析/ 对比/ 辅助/ 索引/ 在/ 云/ 环境/ 中/ 的/ 两种/ 截然不同/ 的/ 基本/ 逻辑/ 结构/ ,/ 即/ 集中式/ 方案/ 与/ 分布式/ 方案/ ,/ 在/ 吸收/ 两者/ 的/ 优势/ 并/ 规避/ 其/ 弱点/ 的/ 基础/ 上/ ,/ 提出/ 了/ 具有/ 良好/ 可扩展性/ 的/ 分片/ 位/ 图/ 索引/ 机制/ ,/ 从而/ 对云/ 环境/ 中/ 海量/ 数据/ 的/ 检索/ 任务/ 提供/ 高效/ 的/ 支持/ ./ 通过/ 充分利用/ 云/ 环境/ 中/ 的/ 并行计算/ 资源/ ,/ 使/ 单条/ 查询/ 的/ 响应速度/ 得到/ 提升/ ;/ 与此同时/ ,/ 局部/ 节点/ 根据/ 其所/ 掌握/ 的/ 全局/ 信息/ 规避/ 了/ 不必要/ 的/ 检索/ 开销/ 从而/ 使/ 大量/ 请求/ 并发/ 到达/ 时/ 的/ 查询/ 吞吐量/ 得以/ 保证/ ./ 在/ 真实/ 数据/ 上/ 进行/ 实验/ 的/ 结果表明/ ,/ 分片/ 位/ 图/ 索引/ 的/ 查询/ 性能/ 大大/ 优于/ 其它/ 方法/ ./ 关键词/ 云/ 计算环境/ ;/ 辅助/ 索引/ ;/ 集中式/ 方案/ ;/ 分布式/ 方案/ ;/ 分片/ 位/ 图/ 索引/ 1/ 引言/ 现今/ ,/ 随着/ 万维网/ (/ WorldWideWeb/ )/ 的/ 快速/ 发展/ ,/ 网络/ 数据/ 大量/ 涌现/ ./ 丰富/ 的/ 网络/ 活动/ 产生/ 了/ 规模/ 异常/ 庞大/ 的/ 数据/ ①/ :/ 2009/ 年/ 全年/ 共有/ 90/ 万亿/ 封电子邮件/ 被/ 发出/ ,/ 平均/ 每天/ 发出/ 的/ 电子邮件/ 数目/ 就/ 高达/ 2.47/ 千亿/ 封/ ,/ 每一/ 封电子邮件/ 都/ 拥有/ 发送/ 时间/ 、/ 发送/ 方/ 地址/ 、/ 接收/ 方/ 地址/ 和/ 投递/ 服务器/ 等/ 属性/ ;/ Google/ 搜索引擎/ 每天/ 收到/ 的/ 检索/ 请求/ 数以/ 十亿/ 计/ ,/ 每个/ 检索/ 任务/ 都/ 将/ 产生/ 若干条/ 日志/ 记录/ ,/ 包括/ 检索/ 时间/ 、/ 检索/ 关键字/ 、/ 响应/ 时间/ 、/ 命中/ 页面/ 数/ 以及/ 用户/ Cookie/ 等/ 属性/ ;/ 来自/ 世界各地/ 的/ 用户/ 每天/ 在/ Twitter/ 网站/ 上/ 发布/ 的/ 微博/ 数量/ 超过/ 三/ 千万条/ ,/ 每条/ 微博/ 都/ 拥有/ 微博/ 标识符/ 、/ 发布者/ 标识符/ 、/ 发布/ 时间/ 、/ 微博/ 内容/ 甚至/ 转发/ 关系/ 等/ 属性/ ./ 如此/ 大规模/ 数据/ 的/ 涌现/ 是/ 互联网/ 时代/ 所/ 特有/ 的/ ./ 传统/ 关系/ 型/ 数据/ 管理系统/ 已/ 无法/ 胜任/ 海量/ 数据管理/ 任务/ ./ 以/ Web/ 为/ 主导/ 的/ 信息时代/ 的/ 繁荣/ 和/ 演进/ 正在/ 向/ 数据/ 管理系统/ 提出/ 前所未有/ 的/ 新/ 挑战/ ./ 所幸/ ,/ 云/ 计算技术/ 的/ 快速/ 发展/ 为/ 海量/ 数据/ 的/ 存储/ 和/ 管理/ 提供/ 了/ 可能/ ./ 相比/ 传统/ 的/ 单机/ 计算环境/ ,/ 云/ 环境/ 可以/ 有效/ 地/ 利用/ 分布式/ 集群/ 的/ 庞大/ 计算资源/ 来/ 满足/ 海量/ 数据管理/ 对/ 计算资源/ 和/ 存储资源/ 的/ 需求/ ,/ 并且/ 拥有/ 易于/ 维护/ 、/ 易于/ 扩展/ 和/ 易于/ 管理/ 等/ 优良/ 特性/ ./ 面对/ 快速增长/ 的/ 数据/ 规模/ ,/ 云/ 计算技术/ 能够/ 快速/ 调整/ 并/ 分配/ 所/ 需/ 资源/ 以/ 适应/ 数据/ 的/ 疯狂/ 膨胀/ ;/ 同时/ 能够/ 提供/ 具有/ 弹性/ 的/ 、/ 组织/ 松散/ 的/ 存储/ 模式/ 以及/ 建立/ 在/ 这种/ 存储/ 模式/ 之上/ 的/ 可/ 配置/ 的/ 分布式/ 并行计算/ 资源/ [/ 1/ ]/ ./ 云/ 计算技术/ 的/ 运用/ 正/ 逐渐/ 成为/ 海量/ 数据管理/ 任务/ 中/ 的/ 新/ 趋势/ ./ 但是/ ,/ 配置/ 于云/ 环境/ 中/ 的/ 分布式/ 存储系统/ 并/ 不/ 能够/ 像/ 传统/ 关系数据库/ 管理系统/ 那样/ 对/ 数据/ 的/ 多样化/ 查询/ 提供/ 高效/ 支持/ [/ 2/ ]/ ./ 在/ 数据/ 存储/ 和/ 管理/ 领域/ ,/ 索引/ 被/ 证明/ 是/ 能/ 使/ 存储系统/ 支持/ 高效/ 检索/ 的/ 有效/ 手段/ ./ 为了/ 支持/ 在/ 存储/ 于/ 大规模/ 的/ 分布式/ 集群/ 上/ 的/ 海量/ 数据/ 中/ 快速/ 找到/ 满足条件/ 的/ 元组/ 的/ 操作/ ,/ 云/ 环境/ 中/ 的/ 数据/ 管理系统/ 也/ 需要/ 配备/ 高效/ 的/ 索引/ 机制/ ./ 作为/ 基本/ 的/ 索引/ 类型/ ,/ 聚集/ 索引/ 仅/ 能够/ 服务/ 于/ 针对/ 元组/ 主键/ 的/ 查询/ 请求/ ./ 在/ 普遍/ 情况/ 下/ ,/ 云/ 环境/ 中/ 数据表/ 的/ 主键/ 往往/ 仅/ 用于/ 区别/ 不同/ 的/ 元组/ ,/ 而/ 并/ 不/ 具有/ 实际意义/ ./ 相比之下/ ,/ 在/ 更/ 多/ 的/ 实际/ 应用/ 场景/ 中/ ,/ 针对/ 非/ 主键/ 属性/ 上/ 的/ 查询/ 请求/ 常常/ 被/ 更加/ 频繁/ 地/ 应用/ 于/ 各种各样/ 的/ 检索/ 任务/ 中/ ./ 此类/ 查询/ 请求/ 的/ 处理/ 无法/ 使用/ 聚集/ 索引/ ,/ 而/ 只能/ 借助于/ 辅助/ 索引/ ./ 然而/ ,/ 由于/ 存储/ 模型/ 的/ 根本/ 改变/ ,/ 传统/ 关系数据库/ 管理系统/ 中/ 成熟/ 的/ 辅助/ 索引/ 技术/ ,/ 既/ 不能/ 直接/ 用于/ 处理/ 海量/ 数据/ ,/ 也/ 无法/ 被/ 简单/ 地/ 迁移/ 到/ 云/ 计算环境/ 中/ ./ 为云/ 环境/ 中/ 的/ 数据/ 管理系统/ 设计/ 全新/ 的/ 辅助/ 索引/ 结构/ 并非易事/ ,/ 其/ 难点/ 主要/ 包括/ :/ (/ 1/ )/ 海量/ 数据/ 上/ 的/ 辅助/ 索引/ 结构/ 势必/ 拥有/ 与/ 数据/ 本身/ 规模/ 相仿/ 的/ 索引/ 项/ 数目/ ./ 如此/ 庞大/ 的/ 索引/ 结构/ 的/ 管理/ 及其/ 高效/ 访问/ 算法/ 的/ 设计/ 面临/ 着/ 传统/ 数据库/ 管理系统/ 中/ 未曾/ 遇到/ 的/ 新/ 问题/ ./ (/ 2/ )/ 云/ 环境/ 中/ 并行计算/ 资源/ 对于/ 加快/ 大规模/ 数据/ 上/ 的/ 检索/ 速度/ 是/ 有利/ 的/ ./ 但是/ ,/ 以/ 粗暴/ 的/ 方式/ 滥用/ 并行/ 资源/ 将会/ 导致系统/ 的/ 服务/ 租赁/ 费用/ 急剧/ 升高/ ./ 而且/ 在/ 多/ 客户端/ 并发/ 访问/ 的/ 情况/ 下/ ,/ 将/ 极大/ 地/ 影响/ 系统/ 能够/ 承受/ 的/ 查询/ 吞吐量/ ./ (/ 3/ )/ 一般/ 地/ ,/ 服务提供商/ 隐藏/ 了/ 云/ 环境/ 中/ 各/ 计算/ 节点/ 的/ 物理/ 拓扑/ 结构/ [/ 3/ ]/ ./ 因此/ ,/ 检索/ 算法/ 对/ 网络/ 的/ 访问/ 接口/ 往往/ 会/ 受到限制/ ./ 依赖于/ 网络通信/ 协议/ 的/ 索引/ 实现/ 方案/ 将会/ 引起/ 难以/ 评估/ 的/ 巨大/ 的/ 潜在/ 网路/ 通信/ 开销/ ./ (/ 4/ )/ 由/ 多个/ 检索/ 条件/ 复合/ 而成/ 的/ 复杂/ 查询/ 请求/ 将/ 引起/ 多个/ 检索/ 结果/ 集/ 的/ 求交/ 操作/ ./ 在/ 大规模/ 数据/ 集上/ 执行/ 求交/ 运算/ 将/ 引起/ 较/ 高/ 的/ 时间/ 复杂度/ [/ 4/ ]/ ,/ 且/ 难以/ 被/ 并行/ 化/ ./ 作为/ 辅助/ 索引/ 的/ 一种/ 成熟/ 实现/ ,/ 位/ 图/ 索引/ 在/ 云/ 数据管理/ 任务/ 中/ 能够/ 体现/ 出其/ 独特/ 的/ 优势/ :/ 对于/ 很多/ 常见/ 属性/ ,/ 其基/ 数值/ 受/ 数据/ 增长/ 的/ 影响/ 很小/ ,/ 例如/ 性别/ 、/ 生日/ 、/ 商品/ 类别/ 等/ ;/ 而/ 多个/ 属性/ 上/ 的/ 复合/ 检索/ 条件/ 是/ 常常/ 被/ 用到/ 的/ ,/ 例如/ 在/ 电子商务/ 应用/ 中/ 检索/ ①/ 网络流量/ 数据/ 来自/ 于/ Netcraft/ 网站/ 的/ 统计/ 信息/ ;/ 电子邮件/ Page3/ 出/ 生于/ 1990/ 年/ 之后/ 的/ 购买/ 过/ 电子产品/ 的/ 女性/ 用户/ ./ 相比/ 其它/ 类型/ 的/ 索引/ ,/ 位/ 图/ 索引/ 能够/ 非常/ 高效/ 地/ 获得/ 多个/ 检索/ 条件/ 复合/ 之后/ 的/ 检索/ 结果/ [/ 5/ -/ 6/ ]/ ./ 基于/ 以上/ 考虑/ ,/ 本文/ 通过/ 分析/ 对比/ 云/ 环境/ 中/ 的/ 辅助/ 索引/ 的/ 两种/ 截然不同/ 的/ 基本/ 逻辑/ 结构/ ,/ 即/ 集中式/ 方案/ 与/ 分布式/ 方案/ ,/ 在/ 吸收/ 二者/ 的/ 优势/ 并/ 规避/ 其/ 缺陷/ 的/ 基础/ 上/ ,/ 提出/ 了/ 一种/ 具有/ 良好/ 可扩展性/ 的/ 辅助/ 索引/ 机制/ :/ 分片/ 位/ 图/ 索引/ (/ RegionalBitmapIndex/ )/ ./ 该/ 索引/ 结构/ 能够/ 充分发挥/ 现代/ 计算机/ 执行/ 位/ 图/ 逻辑运算/ 的/ 优势/ ./ 通过/ 使用/ 分布式/ 的/ 索引/ 存储/ 方法/ ,/ 大规模/ 索引/ 结构/ 得到/ 了/ 有效/ 管理/ ./ 属性/ 值/ 的/ 全局/ 排序/ 使得/ 在/ 索引/ 上/ 进行/ 并发/ 检索/ 的/ 代价/ 得到/ 了/ 降低/ ,/ 从而/ 有利于/ 查询/ 吞吐量/ 的/ 提升/ ./ 另外/ ,/ 本/ 方法/ 不/ 依赖于/ 计算/ 节点/ 的/ 网络/ 组织/ 结构/ ,/ 因而/ 拥有/ 较强/ 的/ 适用性/ ./ 本文/ 第/ 2/ 节将/ 分类/ 介绍/ 相关/ 的/ 研究/ 工作/ ;/ 第/ 3/ 节将/ 陈述/ 分片/ 位/ 图/ 索引/ 的/ 核心技术/ 及其/ 生成/ 、/ 维护/ 与/ 检索/ 算法/ ;/ 在/ 真实/ 数据/ 上/ 进行/ 对比/ 实验/ 的/ 结果/ 将/ 于/ 第/ 4/ 节中/ 进行/ 汇总/ 分析/ ;/ 最后/ ,/ 第/ 5/ 节对/ 本文/ 贡献/ 进行/ 归纳/ 和/ 总结/ ./ 2/ 相关/ 工作/ 传统/ 数据/ 管理系统/ 已经/ 拥有/ 非常/ 成熟/ 的/ 索引/ 技术/ ,/ 相比之下/ ,/ 在/ 云/ 环境/ 中/ ,/ 索引/ 技术/ 的/ 研究/ 工作/ 尚/ 不/ 充分/ ./ 本文/ 将/ 在/ 云/ 环境/ 中/ 实现/ 辅助/ 索引/ 机制/ 的/ 方案/ 按照/ 其/ 的/ 基本/ 逻辑/ 结构/ 分为/ 两类/ ,/ 集中式/ 方案/ 与/ 分布式/ 方案/ ./ 以下/ 对/ 它们/ 分别/ 进行/ 介绍/ ./ 特别/ 地/ ,/ 针对/ 基于/ 分布式/ 方案/ 的/ 扩展/ 工作/ ,/ 本/ 节/ 做出/ 了/ 单独/ 的/ 分析/ 和/ 说明/ ./ 2.1/ 集中式/ 方案/ 在/ 集中式/ 方案/ 中/ ,/ 被/ 索引/ 字段/ 上/ 的/ 所有/ 值/ 被/ 全局/ 排序/ 并/ 集中管理/ ./ 具体/ 而言/ ,/ 每条/ 元组/ 对应/ 的/ 索引/ 项/ 将/ 包含/ 被/ 索引/ 的/ 字/ 段/ 的/ 值/ 以及/ 该/ 记录/ 对应/ 的/ 主键/ 图/ 1/ 辅助/ 索引/ 的/ 集中式/ 方案/ 值/ ./ 在/ 索引/ 结构/ 中/ ,/ 这些/ 索引/ 项/ 按照/ 被/ 索引/ 字段/ 的/ 值/ 全局/ 排序/ ./ 系统/ 处理/ 被/ 索引/ 字段/ 上/ 的/ 检索/ 请求/ 的/ 过程/ 分为/ 两个/ 步骤/ ./ 首先/ 在/ 全局/ 排序/ 的/ 索引/ 结构/ 中/ 找到/ 符合条件/ 的/ 索引/ 项/ ,/ 从而/ 得知/ 相应/ 记录/ 的/ 主/ 键值/ ./ 然后/ ,/ 依据/ 主/ 键值/ 访问/ 聚集/ 索引/ 从而/ 定位/ 完整/ 的/ 记录/ ./ 集中式/ 方案/ 的/ 最大/ 挑战/ 莫过于/ 全局/ 排序/ 了/ 的/ 索引/ 项/ 的/ 管理/ ./ 一个/ 最/ 直接/ 的/ 方法/ 是/ 将/ 这些/ 索引/ 项/ 如同/ 其它/ 一般/ 数据/ 一样/ 分布式/ 地/ 存储/ 在/ 数据/ 管理系统/ 中/ ./ 以/ Bigtable/ [/ 7/ ]/ 的/ 开源/ 实现/ HBase/ [/ 8/ ]/ 的/ 存储系统/ 为例/ ,/ 图/ 1/ 展示/ 了/ 一个/ 基于/ HBase/ 的/ 集中式/ 方案/ 的/ 辅助/ 索引/ 的/ 实现/ (/ TransactionalIndex/ [/ 9/ ]/ )/ 及其/ 查询/ 流程/ ./ 图/ 1/ 中/ ROOT/ 表/ 记录/ 了/ 目标/ 元组/ 应当/ 对应/ 于/ 哪/ 一个/ META/ 表/ ,/ 而/ META/ 表则/ 记录/ 了/ 目标/ 元组/ 的/ 真实/ 位置/ ,/ 二者/ 共同/ 构成/ 了/ 一个/ 多级/ 的/ 聚集/ 索引/ 结构/ ./ 检索/ 过程/ 中/ ,/ 首先/ 通过/ 第/ 1/ ,/ 2/ ,/ 3/ 步/ 获得/ 目标/ 元组/ 所/ 对应/ 的/ 主/ 键值/ ,/ 然后/ 经过/ 第/ 5/ ,/ 6/ ,/ 7/ 步/ 根据/ 主/ 键值/ 找到/ 目标/ 元组/ ./ 通过/ 这种/ 方式/ ,/ 庞大/ 的/ 索引/ 结构/ 也/ 可以/ 享受/ 到/ 海量/ 数据/ 管理系统/ 提供/ 的/ 可靠性/ 、/ 可扩展性/ 和/ 易管理性/ ./ 但是/ ,/ 整个/ 访问/ 过程/ 中/ 的/ 每个/ 步骤/ 都/ 仅/ 有/ 一个/ 单独/ 的/ 数据/ 节点/ 参与/ 完成/ ,/ 这/ 并未/ 有效/ 利用/ 分布式计算/ 资源/ 带来/ 的/ 优势/ ./ 从而/ ,/ 检索/ 任务/ 的/ 响应/ 时间/ 将会/ 非常/ 长/ ./ 区别/ 于/ 全局/ 排序/ 的/ 方式/ ,/ 文献/ [/ 10/ ]/ 在/ 分布式/ 环境/ 中/ 实现/ 了/ B/ 树/ 索引/ [/ 11/ ]/ ,/ 该/ 方法/ 将/ 完整/ 数据/ 上/ 的/ B/ 树/ 分拆/ 为/ 多个/ 分支/ ,/ 并/ 将/ 各个/ 分支/ 分布/ 存储/ 于/ 各个/ 数据/ 节点/ 上/ ./ 各个/ 数据/ 节点均/ 记录/ 有/ 分支/ 的/ 分布/ 情况/ ./ 检索/ B/ 树/ 需要/ 在/ 向下/ 搜索/ 的/ 过程/ 中/ 定位/ 目标/ 分支/ 的/ 宿主/ 节点/ 并/ 在/ 宿主/ 节点/ 中/ 获取/ 命中/ 的/ 元组/ ./ 该/ 方法/ 为/ 大规模/ B/ 树/ 的/ 分布式/ 存储/ 和/ 统一/ 管理/ 提供/ 了/ 指导/ ./ 文献/ [/ 12/ ]/ 将/ 计算/ 节点/ 的/ 点对点/ 组织/ 形式/ 抽象/ 为/ 凯莱/ 图/ (/ CayleyGraph/ )/ [/ 13/ ]/ ,/ 并/ 在/ 此基础/ 之上/ 集中管理/ 全局/ 的/ 索引/ 结构/ ./ 此类/ 方法/ 的/ 特点/ 在于/ 索引/ 结构/ 在/ 逻辑/ 上/ 是/ 被/ 集/ Page4/ 中/ 管理/ 的/ ,/ 各种/ 具体方法/ 均/ 是从/ 为/ 大规模/ 数据/ 上/ 完整/ 的/ 大型/ 索引/ 结构设计/ 高效/ 的/ 管理机制/ 入手/ 来/ 实现/ 索引/ 的/ ./ 而/ 索引/ 结构/ 本身/ 在/ 逻辑/ 上/ 与/ 传统/ 关系数据库/ 中/ 的/ 集中/ 管理模式/ 无异/ ./ 此类/ 方法/ 的/ 优点/ 在于/ 它们/ 是/ 传统/ 单/ 节点/ 数据/ 管理系统/ 中/ 索引/ 结构/ 的/ 直观/ 扩展/ ,/ 其/ 实现/ 不需/ 了解/ 数据/ 的/ 真实/ 分布/ 情况/ ;/ 但是/ 正如/ 传统/ 索引/ 并未/ 对/ 分布式/ 环境/ 进行/ 特别/ 设计/ ,/ 此类/ 方法/ 也/ 往往/ 难以/ 有效/ 利用/ 云/ 环境/ 所/ 提供/ 的/ 分布式计算/ 资源/ 来/ 提高/ 索引/ 的/ 检索/ 性能/ ./ 2.2/ 分布式/ 方案/ 在/ 分布式/ 方案/ 中/ ,/ 各/ 数据/ 节点/ 独立/ 建立/ 了/ 各自/ 管理/ 的/ 局部/ 数据/ 上/ 的/ 索引/ ./ 分布式/ 方案/ 没有/ 维护/ 索引/ 值/ 的/ 全局/ 排序/ ,/ 而是/ 将/ 其/ 局部/ 化到/ 每个/ 单独/ 的/ 计算/ 节点/ 上/ ./ 从而/ ,/ 计算/ 节点/ 相互之间/ 不/ 存在/ 依赖/ 关系/ ,/ 这为/ 检索/ 请求/ 的/ 并发/ 执行/ 带来/ 了/ 便利/ ./ 当/ 拥有/ 索引/ 的/ 属性/ 上/ 的/ 检索/ 请求/ 到达/ 时/ ,/ 检索/ 任务/ 将/ 被/ 分发/ 到/ 所有/ 的/ 计算/ 节点/ 上/ 并/ 以/ 并发/ 的/ 方式/ 执行/ ./ 最终/ 的/ 检索/ 结果/ 将/ 是/ 所有/ 数据/ 节点/ 上/ 返回/ 结果/ 的/ 并/ 集/ ./ 每个/ 计算/ 节点/ 上/ 数据/ 的/ 索引/ 将/ 被/ 独立/ 维护/ ,/ 因此/ 其/ 局部/ 的/ 索引/ 结构/ 具有/ 很强/ 的/ 灵活性/ :/ 各/ 节点/ 使用/ 的/ 索引/ 技术/ 可以/ 是/ 同构/ 的/ ,/ 例如/ 均/ 使用/ B/ +/ 树/ 索引/ ;/ 也/ 可以/ 是/ 异构/ 的/ [/ 14/ ]/ ,/ 例如/ 有/ 的/ 节点/ 上/ 使用/ B/ +/ 树/ 索引/ ,/ 而/ 其它/ 的/ 节点/ 上/ 则/ 使用/ 位/ 图/ 索引/ 等等/ ./ 异构/ 的/ 局部/ 索引/ 允许/ 各/ 计算/ 节点/ 依据/ 自身/ 的/ 计算资源/ 来/ 选择/ 所/ 使用/ 的/ 索引/ 技术/ ,/ 例如/ ,/ 主存/ 资源/ 不/ 充足/ 的/ 节点/ 可以/ 使用/ B/ +/ 树/ 索引/ 并/ 仅/ 在/ 主存/ 中/ 维护/ B/ +/ 树/ 靠近/ 根部/ 两层/ 的/ 节点/ ./ 而/ CPU/ 计算能力/ 较差/ 的/ 节点/ 则/ 可以/ 使用/ 位/ 图/ 索引/ ,/ 从而/ 利用/ 位图/ 上/ 的/ 逻辑/ 操作/ 来/ 回避/ 计算/ 开销/ ./ IndexedHBase/ [/ 15/ ]/ 是/ 基于/ HBase/ 的/ 分布式/ 方案/ 辅助/ 索引/ 的/ 一个/ 代表性/ 的/ 朴素/ 实现/ ./ 图/ 2/ 展示/ 了/ 分布式/ 方案/ 中/ 索引/ 的/ 组织/ 方式/ ./ 在/ 此类/ 方法/ 中/ ,/ 索引/ 结构/ 依附于/ 数据/ 本身/ 而/ 被/ 分散/ 到/ 各个/ 数据/ 节点/ 中/ ./ 节点/ 之间/ 具有/ 独立性/ ./ 检索/ 任务/ 也/ 分配/ 到/ 各/ 节点/ 中/ 独立/ 执行/ ,/ 从而/ ,/ 并行计算/ 资源/ 能够/ 得到/ 很/ 好/ 地/ 利用/ ./ 但是/ ,/ 特别/ 以/ 最/ 常用/ 到/ 的/ 等值/ 条件/ 为/ 代表/ ,/ 由于/ 绝大多数/ 检索/ 任务/ 的/ 目标/ 记录/ 数量/ 相对/ 较/ 少/ ,/ 在/ 分布式/ 集群/ 中/ 并行/ 地/ 执行/ 该/ 任务/ 往往/ 造成/ 很多/ 未/ 存储/ 任何/ 目标/ 记录/ 的/ 计算/ 节点/ 也/ 触发/ 了/ 检索/ 过程/ ,/ 而/ 最终/ 将/ 返回/ 空集/ ./ 在/ 检索/ 任务/ 频繁/ 的/ 情况/ 下/ ,/ 这一/ 并行执行/ 过程/ 将会/ 耗费/ 大量/ 的/ 不必要/ 的/ 计算资源/ ,/ 最终/ 将会/ 降低/ 系统/ 的/ 吞吐量/ ./ 2.3/ 分布式/ 方案/ 的/ 扩展/ 也/ 应当/ 注意/ 到/ ,/ 一些/ 研究/ 工作/ 在/ 采用/ 分布式/ 方案/ 来/ 组织/ 局部/ 索引/ 结构/ 的/ 同时/ ,/ 使用/ 了/ 特殊/ 的/ 全局/ 结构/ 来/ 加快/ 对/ 有效/ 数据/ 节点/ 的/ 定位/ ./ 文献/ [/ 16/ ]/ 在/ 云/ 环境/ 中/ 设计/ 了/ 全新/ 的/ 通信协议/ RT/ -/ CAN/ ,/ 用于/ 管理/ 一个/ 全局/ 索引/ 结构/ 和/ 各/ 数据/ 节点/ 上/ 的/ 局部/ 多维/ 数据/ R/ 树/ 索引/ ./ 首先/ 检索/ 全局/ 索引/ ,/ 然后/ 定位/ 到/ 含有/ 目标/ 元组/ 的/ 局部/ R/ 树/ 索引/ 上/ 继续/ 检索/ ./ 文献/ [/ 17/ ]/ 与/ 文献/ [/ 16/ ]/ 拥有/ 相同/ 的/ 项目/ 背景/ ,/ 其/ 作者/ 以/ 分布式/ 方式/ 为/ 各/ 数据/ 节点/ 上/ 的/ 本地/ 数据/ 构建/ 局部/ 的/ B/ +/ 树/ 索引/ ,/ 另外/ ,/ 各/ 局部/ B/ +/ 树上/ 的/ 某些/ 结点/ 被/ 公开出来/ 并/ 通过/ BATON/ [/ 18/ ]/ 协议/ 统一/ 组织/ 成为/ 一个/ 全局/ 结构/ CG/ -/ index/ ./ 检索/ 请求/ 到达/ 时/ ,/ 首先/ CG/ -/ index/ 被/ 检索/ ,/ 定位/ 到/ 局部/ B/ +/ 树上/ 的/ 某些/ 结点/ 之后/ 继而/ 转入/ 相应/ 的/ 局部/ 数据/ 节点/ 继续/ 搜索/ ./ 在/ 这类/ 方法/ 中/ ,/ 通过/ 维护/ 一种/ 特殊/ 的/ 全局/ 索引/ 结构/ ,/ 分布式/ 方案/ 的/ 基本思路/ 得以/ 扩展/ ,/ 从而/ 可以/ 在/ 充分/ 并行/ 的/ 同时/ ,/ 避免/ 了/ 一些/ 不必要/ 的/ 检索/ 代价/ ./ 然而/ ,/ 该类/ 方法/ 往往/ 需要/ 通过/ 较为/ 复杂/ 的/ 通信协议/ 来/ 组织/ 全局/ 索引/ 结构/ 的/ 各个/ 部分/ ./ 因此/ ,/ 访问/ 全局/ 结构/ 的/ 过程/ 将/ 引发/ 大量/ 的/ 网络通信/ 开销/ ./ 在/ 复杂/ 的/ 拓扑/ 网络/ 中/ ,/ 这一/ 过程/ 将/ 带来/ 严重/ 的/ 响应/ 延迟/ ./ 另外/ ,/ 并/ 不是/ 所有/ 的/ 云/ 环境/ 都/ 向/ 开发人员/ 暴露/ 了/ 完整/ 的/ 网络/ 通信接口/ ,/ 在/ 通信接口/ 被/ 高度/ 抽象/ 了/ 的/ 云/ 环境/ 中/ ,/ 复杂/ 的/ 网络通信/ 协议/ 的/ 实现/ 将/ 受到/ 致命/ 的/ 限制/ ./ 3/ 分片/ 位/ 图/ 索引/ 集中式/ 方案/ 和/ 分布式/ 方案/ 各有/ 优势/ ./ 集中式/ 方案/ 拥有/ 被/ 索引/ 字段/ 的/ 全局/ 信息/ ,/ 可以/ 有效/ 地/ 避免/ 不必要/ 的/ 查询/ 开销/ ,/ 但是/ ,/ 全局/ 信息/ 的/ 维护/ 与/ 访问/ 也/ 带来/ 了/ 额外/ 的/ 代价/ ,/ 致使/ 查询/ 的/ 响应速度/ 受到/ 影响/ ./ 分布式/ 方案/ 能够/ 充分利用/ 并行计算/ 资源/ 的/ 优势/ ,/ 但是/ 由于/ 缺乏/ 被/ 索引/ 字段/ 上值/ 的/ 整体/ 分布/ 信息/ ,/ 即使/ 对于/ 目标值/ 仅/ 局部/ 分布/ 在/ 少数几个/ 数据/ 节点/ 上/ 的/ 检索/ 请求/ ,/ 也/ 会/ 导致/ 触发/ 整个/ 集群/ 上/ 的/ 并行/ 检索/ ./ 而/ 事实上/ ,/ 其中/ 大部分/ 数据/ 节点/ 上/ 返回/ 的/ 命中/ 集合/ 都/ 将/ 是/ 空集/ ./ 因而/ ,/ 大量/ 的/ 并行计算/ 资源/ 被/ 白白浪费/ 了/ ./ 本节/ 将/ 介绍/ 一种/ 折中/ 的/ 解决方案/ :/ 分片/ 位/ 图/ 索引/ (/ regionalbitmapindex/ )/ ./ 该/ 方法/ 既/ 具有/ 分布式/ 方案/ Page5/ 的/ 高/ 并行度/ 特点/ ,/ 从而/ 带来/ 了/ 快速/ 的/ 请求/ 响应/ ,/ 同时/ 又/ 拥有/ 如同/ 在/ 集中式/ 方案/ 中/ 那样/ 了解/ 全局/ 的/ 数据分布/ 信息/ 的/ 优势/ ,/ 进而/ 尽/ 最大/ 努力/ 避免/ 了/ 不必要/ 的/ 检索/ 代价/ ,/ 提高/ 了/ 系统/ 的/ 查询/ 吞吐量/ ./ 相比/ 使用/ 特殊/ 的/ 通信协议/ 而/ 实现/ 的/ 分布式/ 方案/ 的/ 诸/ 扩展/ 方法/ ,/ 本/ 方法/ 通过/ 引入/ 属性/ 值/ 的/ 全局/ 排序/ 机制/ 来/ 彻底/ 避免/ 不同/ 数据/ 节点/ 之间/ 的/ 通信/ ./ 从而/ ,/ 使得/ 开发人员/ 能够/ 从/ 设计/ 复杂/ 通信协议/ 的/ 任务/ 中/ 解放出来/ ./ 这一/ 特点/ 降低/ 了/ 本/ 方法/ 对/ 网络拓扑/ 和/ 通信/ 系统/ 的/ 依赖/ ,/ 从而/ 提高/ 了/ 查询/ 效率/ ./ 另外/ ,/ 通过/ 这种/ 方式/ ,/ 本/ 方法/ 将/ 无需/ 访问/ 目标/ 云/ 环境/ 所/ 暴露/ 的/ 网络/ 通信接口/ ,/ 因此/ 能够/ 适用/ 于/ 更/ 广泛/ 的/ 云/ 存储/ 环境/ ./ 下面/ 将/ 在/ 3.1/ 节中/ 介绍/ 分片/ 位/ 图/ 索引/ 的/ 核心技术/ 及其/ 构建/ 方法/ ;/ 3.2/ 节/ 集中/ 介绍/ 各类/ 数据/ 操纵/ 操作/ 所/ 引起/ 的/ 索引/ 的/ 维护/ 算法/ ;/ 3.3/ 节/ 阐述/ 使用/ 本/ 索引/ 结构/ 进行/ 检索/ 的/ 算法/ 流程/ ./ 3.1/ 索引/ 结构/ 本/ 节/ 首先/ 介绍/ 分片/ 位/ 图/ 索引/ 的/ 核心技术/ :/ 字/ 段值/ 上/ 的/ 全局/ 排序/ 机制/ 以及/ 位/ 图/ 索引/ 的/ 分片/ 机制/ (/ 全局/ 排序/ 机制/ 能够/ 为/ 各/ 数据/ 节点/ 提供/ 一定/ 的/ 全局/ 信息/ ,/ 即/ 局部/ 数据/ 在/ 全局/ 值域/ 中/ 的/ 分布/ 情况/ ;/ 而位/ 图/ 索引/ 的/ 分片/ 机制/ 使得/ 索引/ 结构/ 局部/ 化/ ,/ 从而/ 使/ 不同/ 数据/ 节点/ 上/ 的/ 检索/ 任务/ 充分/ 独立/ ,/ 以便/ 并发/ 执行/ )/ ./ 然后/ 综合/ 运用/ 上述/ 技术/ 给出/ 了/ 分片/ 位/ 图/ 索引/ 技术/ 的/ 构造方法/ 及其/ 存储/ 结构/ ./ 3.1/ ./ 1/ 字/ 段值/ 的/ 全局/ 排序/ 考虑/ 在/ 数值/ 属性/ A1/ ,/ A2/ ,/ A3/ ,/ …/ ,/ Af/ 共/ f/ 个/ 属性/ 上/ 建立/ 的/ 索引/ ,/ 首先/ 将/ 各/ 属性/ Ai/ 的/ 值域/ 切割/ 为/ ci/ 个子/ 域/ ./ 如果/ 属性/ 取值/ 为/ 离散/ 值/ ,/ 则/ 可/ 将/ 每/ 一个/ 取值/ 单独/ 划分/ 为/ 一个/ 子域/ ;/ 如果/ 为/ 其它/ 类型/ ,/ 则/ 可/ 将/ 其/ 二进制/ 表示/ 作为/ 其位/ 串值/ ,/ 例如/ 字符串/ 中/ 各/ 字符/ 的/ ASCII/ 码/ 组成/ 的/ 二进制位/ 串/ ;/ 并/ 按照/ 二进制位/ 串/ 的/ 数值/ 大小/ 对/ 属性/ 值域/ 进行/ 划分/ ①/ ./ 设/ 值域/ 切割/ 所得/ 子域/ 所/ 构成/ 的/ 集合/ 为/ Ci/ ,/ 那么/ 子域/ 的/ 笛卡尔/ 积/ Des1/ …/ f/ =/ C1/ ×/ C2/ ×/ C3/ ×/ …/ ×/ Cf/ 的/ 大小/ 为/ B/ =/ ∏/ f/ 使用/ 一个/ 长为/ ∑/ ft/ 的/ 属性/ Ai/ 的/ 第/ j/ 个子/ 域/ 对应/ 的/ 位为/ bi/ ,/ j/ ,/ 那么/ 该/ 元组/ 所/ 对应/ 的/ 位串/ 可/ 表示/ 为/ b1/ ,/ 1b1/ ,/ 2b1/ ,/ 3/ …/ b1/ ,/ c1/ ,/ b2/ ,/ 1b2/ ,/ 2b2/ ,/ 3/ …/ b2/ ,/ c2/ ,/ …/ ,/ bf/ ,/ 1bf/ ,/ 2bf/ ,/ 3/ …/ bf/ ,/ cf/ ./ 给定/ 任意/ 元组/ t/ 及其/ 所/ 对应/ 的/ 位串/ ,/ / i/ ∈/ [/ 1/ ,/ f/ ]/ 有且/ 仅/ 有/ 唯一/ 的/ 一个/ j/ ∈/ [/ 1/ ,/ ci/ ]/ 使得/ bi/ ,/ j/ =/ 1/ ./ 因此/ 该位/ 串/ 的/ 所有/ 合法/ 取值/ 可/ 一一对应/ 于/ 上述/ 子域/ 笛卡尔/ 积/ Des1/ …/ f/ 中/ 的/ 元素/ ./ 从而/ ,/ 任意/ 元组/ 所/ 对应/ 的/ 位串/ 将/ 拥有/ B/ =/ ∏/ f/ 上/ 的/ 子域/ 划分/ 的/ 情况/ 下/ ,/ 将/ 元组/ 对应/ 的/ 位串/ 的/ 所有/ 可能/ 取值/ 按照/ 从小到大/ 的/ 顺序/ 排序/ ./ 位串/ 的/ 所有/ 可能/ 的/ 取值/ 可/ 一一对应/ 到/ 一个/ 排序/ 值/ r/ ∈/ [/ 1/ ,/ B/ ]/ 上/ ./ 这样/ ,/ 任意/ 元组/ 在/ 被/ 考察/ 的/ 数据字/ 段/ 上/ 的/ 取值/ 均/ 对应/ 于/ 一个/ 唯一/ 的/ 排序/ 值/ r/ ./ 至此/ ,/ 完成/ 了/ 对/ 所有/ 元组/ 上/ 的/ 索引/ 值/ 的/ 全局/ 排序/ ./ 下面/ 以为/ 某/ 公司员工/ 信息/ 表中/ 的/ 两个/ 属性/ 建立/ 索引/ 为例/ ,/ 介绍/ 从/ 元组/ 生成/ 对应/ 的/ 位串/ ,/ 进而/ 计算/ 对应/ 的/ 排序/ 值/ 的/ 过程/ ./ 例/ 1/ ./ 给定/ 某/ 公司/ 的/ 员工/ 信息/ 表/ ,/ 设该/ 表/ 属性/ A1/ 指示/ 员工/ 性别/ ,/ 包含/ male/ 和/ female/ 两个/ 取值/ ;/ 属性/ A2/ 记录/ 员工/ 薪水/ ,/ 取值/ 为/ [/ 0/ ,/ 3000/ ]/ 范围/ 内/ 的/ 整数/ ./ 首先/ ,/ 属性/ A1/ 的/ 值域/ 被/ 分割/ 为/ 两个/ 子域/ ,/ 分别/ 仅/ 包括/ 取值/ male/ 和/ female/ ;/ 属性/ A2/ 的/ 值域/ 被/ 分割/ 为/ 3/ 个子/ 域/ :/ [/ 0/ ,/ 1000/ ]/ ,/ (/ 1000/ ,/ 2000/ ]/ 和/ (/ 2000/ ,/ 3000/ ]/ ./ 考虑/ 员工/ Emp1/ ,/ 设其/ 性别/ 为/ 男性/ ,/ 薪水/ 为/ 1300/ ,/ 那么/ 该/ 员工/ 对应/ 的/ 位串/ 为/ ‘/ 10010/ ’/ ./ 其中/ 前/ 两位/ ‘/ 10/ ’/ 表示/ 属性/ A1/ 上/ 取值/ 为/ male/ ,/ 后/ 三位/ ‘/ 010/ ’/ 表示/ 其/ 薪水/ 在/ 范围/ (/ 1000/ ,/ 2000/ ]/ 内/ ./ 再/ 考虑/ 员工/ Emp2/ ,/ 设其/ 性别/ 为/ 女性/ ,/ 薪水/ 为/ 2600/ ,/ 那么/ 该/ 员工/ 对应/ 的/ 位串/ 为/ ‘/ 01001/ ’/ ./ 其中/ 前/ 两位/ ‘/ 01/ ’/ 表示/ 属性/ A1/ 上/ 取值/ 为/ famale/ ,/ 后/ 三位/ ‘/ 001/ ’/ 表示/ 其/ 薪水/ 在/ 范围/ (/ 2000/ ,/ 3000/ ]/ 内/ ./ 根据/ 以上/ 对/ 属性/ 值域/ 的/ 划分/ ,/ 可知/ 属性/ 子域/ 的/ 笛卡尔/ 积/ 的/ 大小/ 为/ B/ =/ 2/ ×/ 3/ =/ 6/ ./ 任意/ 元组/ 所/ 对应/ 的/ 位串/ 可能/ 的/ 取值/ 有/ 6/ 个/ ,/ 将/ 其/ 按照/ 从小到大/ 的/ 顺序排列/ 可/ 得/ ‘/ 01001/ ’/ 、/ ‘/ 01010/ ’/ 、/ ‘/ 01100/ ’/ 、/ ‘/ 10001/ ’/ 、/ ‘/ 10010/ ’/ 和/ ‘/ 10100/ ’/ ./ 对比/ 可知/ ,/ 员工/ Emp1/ 对应/ 的/ 位/ 串排/ 在/ 第/ 5/ 位/ ,/ 而/ 员工/ Emp2/ 对应/ 的/ 位/ 串排/ 在/ 第/ 1/ 位/ ./ 因此/ ,/ 员工/ Emp1/ 和/ Emp2/ 对应/ 的/ 位串/ 的/ 排序/ 值/ 分别/ 为/ 5/ 和/ 1.3/ ./ 1.2/ 索引/ 的/ 分片/ 类似/ 于/ 上述/ 分布式/ 方案/ ,/ 本/ 方法/ 同样/ 采用/ 各/ 数据/ 节点/ 独立/ 管理/ 局部/ 数据/ 上/ 索引/ 的/ 方式/ ,/ 以便/ 提高/ 检索/ 执行/ 时/ 的/ 并行度/ ./ 在/ 每个/ 数据/ 节点/ 上/ ,/ 对/ 该/ 节点/ 上/ 存在/ 的/ 元组/ 所/ 对应/ 的/ 位串/ 的/ 全局/ 排序/ 值/ 建立/ B/ +/ 树/ ./ 树/ 的/ 叶/ 结点/ 中/ 的/ 每个/ 键/ 都/ 对应/ 于/ 一个/ 排序/ 值/ ,/ 并/ 记录/ 一个/ 长度/ 为本/ 数据/ 节点/ 所/ 管理/ 的/ 元组/ 总数/ 的/ 位/ ①/ 值域/ 的/ 划分/ 规则/ 对/ 利用/ 本文/ 所/ 介绍/ 索引/ 进行/ 查询/ 的/ 结果/ 的/ Page6/ 图/ ,/ 其中/ 拥有/ 该/ 排序/ 值/ 的/ 元组/ 所/ 对应/ 的/ 位/ 被/ 置/ 1/ ,/ 其它/ 位/ 被/ 置/ 0/ ./ 这里/ 将/ 其/ 称为/ 元组/ 位图/ ./ 易见/ ,/ 单个/ 数据/ 节点/ 上/ 的/ B/ +/ 树/ 的/ 所有/ 叶子/ 结点/ 上/ 最/ 多/ 拥有/ B/ 个键/ ,/ 因此/ 最/ 多/ 存在/ B/ 个/ 不同/ 的/ 元组/ 位图/ ./ 继续/ 例/ 1/ 中/ 的/ 假设/ ,/ 例/ 2/ 介绍/ 了/ 某个/ 数据/ 节点/ 上/ 的/ 局部/ 位/ 图/ 索引/ 的/ 生成/ 过程/ ./ 例/ 2/ ./ 关于/ 员工/ 信息/ 表/ 的/ 假设/ 同例/ 1/ ./ 如表/ 1/ 所示/ ,/ 设该/ 表在/ 某个/ 数据/ 节点/ 上/ 共有/ 7/ 条/ 记录/ ./ 其中/ EmployeeID/ 是/ 该表/ 的/ 主键/ ,/ BitString/ 和/ Rank/ 不是/ 原表中/ 的/ 属性/ ,/ 而是/ 由/ 性别/ 和/ 薪水/ 两个/ 属性/ 上/ 的/ 值/ 生成/ 的/ 位串/ 及其/ 对应/ 的/ 排序/ 值/ ./ 依据/ 各/ 记录/ 的/ 排序/ 值/ 建立/ 的/ B/ +/ 树结构/ 如图/ 3/ 所示/ (/ 该/ B/ +/ 树中/ 的/ 每个/ 结点/ 最/ 多/ 含有/ 3/ 个/ 孩子/ 结点/ )/ ./ 表/ 1/ 某/ 数据/ 节点/ 上/ 的/ 初始/ 元组/ 及其/ 位串值/ 与/ 排序/ 值/ EmployeeIDGenderSalaryBitStringRankEmp1Male1300100105Emp2Female2600010011Emp3Female2100010101Emp4Male1900100105Emp5Male2300100014Emp6Male1100100105Emp7Female9000110033/ ./ 1.3/ 索引/ 的/ 创建/ 综合/ 运用/ 以上/ 两项/ 技术/ ,/ 本/ 节/ 给出/ 在/ 云/ 环境/ 中/ 分片/ 位/ 图/ 索引/ 的/ 各/ 组成部分/ 以及/ 其/ 创建/ 流程/ ./ 本/ 方法/ 的/ 动机/ 来源于/ 吸取/ 并/ 综合/ 集中式/ 方案/ 与/ 分布式/ 方案/ 的/ 优点/ ./ 首先/ 对于/ 给定/ 的/ 被/ 索引/ 属性/ 上/ 的/ 取值/ ,/ 其/ 对应/ 位串/ 存在/ 唯一/ 的/ 全局/ 排序/ 值/ ./ 据此/ ,/ 利用/ 局部/ 存在/ 于/ 各/ 数据/ 节点/ 上/ 的/ 数据/ 所/ 对应/ 的/ 排序/ 值为/ 其/ 构造/ 局部/ 的/ 指示/ 位图/ ./ 该/ 指示/ 位图/ 的/ 长度/ 为/ 子域/ 笛卡尔/ 积/ 的/ 大小/ B/ ./ 如果/ 该/ 数据/ 节点/ 上/ 存在/ 排序/ 值为/ r/ 的/ 元组/ ,/ 则/ 该/ 数据/ 节点/ 上/ 指示/ 位图/ 的/ 第/ r/ 位为/ 1/ ,/ 反之/ 则/ 为/ 0/ ./ 例/ 3/ ./ 关于/ 员工/ 信息/ 表/ 的/ 假设/ 同例/ 1/ ./ 考虑/ 例/ 2/ 中/ 所述/ 数据/ 节点/ ./ 由于/ B/ =/ 6/ ,/ 因此/ 该/ 数据/ 节点/ 上/ 的/ 指示/ 位/ 图/ 长度/ 为/ 6/ ./ 又/ 由于/ 该/ 数据/ 节点/ 仅/ 包含/ 排序/ 值为/ 1/ 、/ 3/ 、/ 4/ 和/ 5/ 的/ 元组/ ,/ 因此/ 其/ 指示/ 位/ 图/ 应为/ 101110/ ./ 指示/ 位/ 图/ 记录/ 了/ 局部/ 属性/ 值/ 的/ 存在/ 情况/ ./ 检索/ 请求/ 到达/ 各/ 数据/ 节点/ 时/ ,/ 首先/ 通过/ 比/ 对/ 指示/ 位图/ 来/ 确定/ 本/ 数据/ 节点/ 是否/ 包含/ 目标/ 元组/ ,/ 如果/ 不/ 存在/ ,/ 则/ 直接/ 返回/ 空值/ ,/ 而/ 不/ 执行/ 检索/ 任务/ ./ 例/ 4/ ./ 关于/ 员工/ 信息/ 表/ 的/ 假设/ 同例/ 1/ ./ 考虑/ 例/ 2/ 中/ 所述/ 数据/ 节点/ ./ 由例/ 3/ 可知/ 其/ 指示/ 位图/ 为/ 101110/ ./ 假设/ 用户/ 发出/ 了/ 检索/ 性别/ 为/ 女性/ 且/ 薪水/ 范围/ 在/ (/ 1000/ ,/ 2000/ ]/ 内/ 的/ 员工/ 的/ 请求/ ,/ 据此/ 可/ 生成/ 目标/ 记录/ 所/ 对应/ 的/ 位串/ 为/ 01010/ ,/ 其/ 排序/ 值为/ 2/ ./ 从而/ ,/ 构造/ 位串/ 01000/ 与/ 指示/ 位/ 图/ 进行/ 逻辑/ 按位/ 与/ 01000/ &/ 101110/ ,/ 结果/ 为/ 全零/ ./ 因此/ 该/ 节点/ 上/ 不/ 存在/ 目标/ 元组/ ,/ 可/ 直接/ 返回/ 空集/ 作为/ 本/ 节点/ 的/ 检索/ 结果/ ./ 除了/ 为/ 每个/ 数据/ 节点/ 构造/ 指示/ 位/ 图/ 之外/ ,/ 还/ 应当/ 建立/ 局部/ 数据/ 上/ 的/ 位图/ 索引/ ./ 该局/ 部位/ 图/ 索引/ 由/ 两/ 部分/ 构成/ :/ 以/ 全局/ 排序/ 值为键/ 的/ B/ +/ 树/ 以及/ B/ +/ 树叶子/ 结点/ 上/ 所/ 附着/ 的/ 相应/ 字/ 段值/ 上/ 的/ 局部/ 元组/ 位图/ ./ 在/ 执行/ 检索/ 任务/ 时/ ,/ 如果/ 与/ 指示/ 位/ 图/ 进行/ 比/ 对/ 的/ 结果/ 不为/ 全零串/ ,/ 则/ 需要/ 触发/ B/ +/ 树上/ 的/ 检索/ 操作/ ./ 根据/ 以上/ 分析/ 可知/ ,/ 指示/ 位图/ 的/ 创建/ 过程/ 中/ 需要/ 扫描/ 局部/ 节点/ 上/ 所/ 存在/ 的/ 所有/ 元组/ ,/ 此/ 过程/ 的/ 计算/ 代价/ 正比/ 于/ 局部/ 数据/ 节点/ 上/ 元组/ 的/ 数量/ ;/ 对于/ 局部/ 位/ 图/ 索引/ ,/ B/ +/ 树/ 的/ 规模/ 正比/ 于/ 子域/ 笛卡尔/ 积/ 的/ 大小/ B/ ,/ 与/ 元组/ 数量/ 无关/ ,/ 元组/ 位图/ 的/ 创建/ 过程/ 也/ 需要/ 扫描/ 局部/ 节点/ 上/ 所/ 存在/ 的/ 所有/ 元组/ ,/ 因此/ 其/ 代价/ 亦/ 正比/ 于/ 节点/ 所/ 管理/ 的/ 元组/ 数量/ ./ 通常/ 情况/ 下/ 子域/ 笛卡尔/ 积/ 的/ 大小/ 远/ 小于/ 元组/ 数量/ ,/ 因此/ 整个/ 分片/ 位/ 图/ 索引/ 的/ 创建/ 代价/ 正比/ 于/ 局部/ 数据/ 节点/ 上/ 所/ 管理/ 元组/ 数量/ 的/ 最大值/ ./ 3.2/ 索引/ 的/ 维护/ 以下/ 各/ 小节/ 将/ 依次/ 介绍/ 插入/ 新元/ 组/ 、/ 删除/ 或/ 更新/ 已/ 存在/ 的/ 元组/ 以及/ 数据/ 发生/ 迁移/ 时/ ,/ 分片/ 位/ 图/ 索引/ 的/ 维护/ 算法/ ./ 3.2/ ./ 1/ 元组/ 删除/ 当/ 元组/ 被/ 删除/ 时/ ,/ 需要/ 对/ 相应/ 的/ 指示/ 位图/ 和/ 局部/ 位/ 图/ 索引/ 进行/ 更新/ :/ 首先/ 根据/ 元组/ 的/ 主键/ 查找/ 该/ 元组/ 所在/ 的/ 数据/ 节点/ 及其/ 在/ 该/ 数据/ 节点/ 中/ 的/ 相对/ 位置/ ,/ 依据/ 该/ 元组/ 上/ 的/ 被/ 索引/ 属性/ 的/ 值/ 所/ 对应/ 的/ 排序/ 值/ 搜索/ 该/ 数据/ 节点/ 的/ 局部/ 位/ 图/ 索引/ B/ +/ 树/ ,/ 设/ 查找/ 到/ 的/ 元组/ 位图/ 为/ rb/ ,/ 生成/ 长度/ 为/ 该/ 数据/ 节点/ 上/ 存放/ 的/ 所有/ 元组/ 总数/ 的/ 全/ 1/ 位串/ tb/ ,/ 并置/ 该/ 元组/ 对应/ 位为/ 0/ ./ 然后/ ,/ 检查/ 按位/ 逻辑/ 与/ rb/ &/ tb/ 的/ 计算结果/ 是否/ 为/ 0/ ,/ 并/ 按照/ 计算结果/ 对/ 以下/ 两种/ 情况/ 分别/ 进行/ 处理/ :/ Page7/ (/ 1/ )/ 如果/ 为/ 0/ ,/ 则/ 表示/ 该/ 元组/ 是/ 所/ 找到/ 的/ 叶子/ 结点/ 上/ 唯一/ 的/ 对应/ 元组/ ,/ 因此/ 元组/ 删除/ 后/ ,/ 该/ 叶子/ 结点/ 及其/ 对应/ 的/ 元组/ 位图/ 也/ 应当/ 被/ 删除/ ,/ B/ +/ 树/ 的/ 更新/ 操作/ 可/ 在/ O/ (/ logm/ (/ B/ // m/ )/ )/ 时间/ 代价/ 内/ 完成/ ,/ 其中/ m/ 是/ 每个/ B/ +/ 树/ 结点/ 的/ 孩子/ 结点/ 数目/ 的/ 最大值/ ,/ 其/ 具体/ 算法/ 步骤/ 请/ 读者/ 参考文献/ [/ 9/ ]/ ,/ 此处/ 不再/ 重复/ ;/ 同时/ 更新/ 指示/ 位/ 图/ ,/ 通过/ 逻辑/ 与/ 操作/ ,/ 置/ 以/ 该/ 元组/ 对应/ 的/ 排序/ 值为/ 下/ 标的/ 位为/ 0/ ./ (/ 2/ )/ 否则/ ,/ 表示/ 该/ 元组/ 不是/ 拥有/ 该/ 排序/ 值/ 的/ 唯一/ 元组/ ,/ 因此/ 无需/ 更新/ B/ +/ 树结构/ 和/ 指示/ 位图/ ./ 最后/ ,/ 从/ B/ +/ 树叶子/ 结点/ 首/ 指针/ 开始/ 扫描/ 所有/ 元组/ 位/ 图/ ,/ 通过/ 向/ 左/ 移位/ ,/ 将/ 各/ 元组/ 位图/ 中/ 被/ 删除/ 元组/ 对应/ 的/ 位/ 删除/ ./ 例/ 5/ 展示/ 了/ 删除/ 元组/ 时/ 更新/ 索引/ 的/ 过程/ ./ 例/ 5/ ./ 关于/ 员工/ 信息/ 表/ 的/ 假设/ 同例/ 1/ ./ 假设/ 用户/ 发出/ 删除/ 元组/ Emp5/ 的/ 请求/ ./ 首先/ 找到/ 该/ 元组/ 所在/ 的/ 数据/ 节点/ ,/ 即例/ 2/ 所示/ 的/ 数据/ 节点/ ,/ 依据/ 元组/ Emp5/ 在/ 属性/ 性别/ 和/ 薪水/ 上/ 的/ 值/ 计算/ 得到/ 其/ 对应/ 的/ 位图/ 为/ 10001/ ,/ 排序/ 值为/ 4/ ,/ 搜索/ 该/ 数据/ 节点/ 上/ 的/ B/ +/ 树/ 得到/ 对应/ 的/ 元组/ 位图/ 为/ rb/ =/ 0000100/ ./ 为/ 元组/ Emp5/ 生成/ 位串/ tb/ =/ 1111011/ ./ 由于/ rb/ &/ tb/ =/ 0000000/ ./ 因此/ 元组/ Emp5/ 是/ 该/ 元组/ 位图/ 上/ 记录/ 着/ 的/ 唯一/ 元组/ ,/ 删除/ 该/ 元组/ 之后/ 应当/ 随之/ 删除/ 该/ 叶子/ 结点/ ;/ 同时/ 需要/ 更新/ 该/ 数据/ 节点/ 上/ 的/ 指示/ 位/ 图/ ,/ 即将/ 指示/ 位图/ 的/ 第/ 4/ 位置/ 为/ 0/ ./ 最后/ 通过/ 向/ 左/ 移位/ 操作/ 删除/ B/ +/ 树上/ 各/ 元组/ 位图/ 的/ 第/ 5/ 位/ ./ 元组/ 删除/ 之后/ 的/ 局部/ 位/ 图/ 索引/ 如图/ 4/ 所示/ ,/ 更新/ 后/ 的/ 指示/ 位图/ 为/ 101010/ ./ 类似/ 的/ ,/ 假设/ 用户/ 发出/ 了/ 删除/ 元组/ Emp6/ 的/ 请求/ ./ 注意/ 由于/ 元组/ Emp5/ 已/ 被/ 删除/ ,/ 此时/ 该/ 数据/ 节点/ 上/ 记录/ 着/ 6/ 条/ 元组/ ,/ 其中/ 元组/ Emp6/ 处于/ 该/ 局部/ 数据/ 节点/ 的/ 第/ 5/ 位/ ./ 由/ 计算/ 可知/ rb/ =/ 100110/ 且/ tb/ =/ 111101/ ./ 从而/ ,/ 得知/ rbtb/ 不为/ 0/ ,/ 因而/ 不需/ 更新/ B/ +/ 树/ 的/ 结构/ ./ 只/ 需/ 通过/ 向/ 左/ 移位/ 操作/ 删除/ 元组/ 位图/ 中/ 的/ 第/ 5/ 位/ ./ 删除/ 后/ 的/ B/ +/ 树/ 的/ 结构/ 如图/ 5/ 所示/ ./ 图/ 5/ 删除/ 元组/ Emp6/ 后/ 的/ 局部/ B/ +/ 树结构/ 以及/ 各/ 元组/ 位图/ 3.2/ ./ 2/ 元组/ 插入/ 当/ 新元/ 组/ 被/ 插入/ 时/ ,/ 同样/ 需要/ 对/ 相应/ 的/ 指示/ 位图/ 和/ 局部/ 位/ 图/ 索引/ 进行/ 更新/ :/ 首先/ 根据/ 元组/ 的/ 主键/ 查找/ 该/ 元组/ 应当/ 插入/ 的/ 数据/ 节点/ ,/ 并/ 计算/ 新元/ 组在/ 该/ 数据/ 节点/ 中/ 所/ 对应/ 的/ 相对/ 位置/ ./ 从/ 该/ 数据/ 节点/ 上/ 的/ 局部/ 位/ 图/ 索引/ B/ +/ 树/ 的/ 叶子/ 结点/ 首/ 指针/ 开始/ 扫描/ 所有/ 元组/ 位/ 图/ ,/ 通过/ 向/ 右/ 移位/ 操作/ ,/ 在/ 各/ 元组/ 位图/ 中/ 新/ 插入/ 元组/ 所/ 对应/ 的/ 位置/ 插入/ 新/ 的/ 位/ ,/ 并置/ 其值/ 为/ 0/ ./ 然后/ ,/ 获取/ 该/ 数据/ 节点/ 上/ 的/ 指示/ 位图/ ib/ ./ 生成/ 长度/ 为/ B/ 的/ 全/ 0/ 位串/ cb/ ,/ 并/ 按照/ 该/ 元组/ 相应/ 属性/ 的/ 值/ 计算/ 其/ 排序/ 值/ r/ ,/ 置/ 第/ r/ 位为/ 1/ ./ 最后/ ,/ 检查/ 按位/ 逻辑/ 与/ ebcb/ 的/ 计算结果/ 是否/ 为/ 0/ ,/ 并/ 按照/ 计算结果/ 分/ 两种/ 情况/ 进行/ 处理/ :/ (/ 1/ )/ 如果/ 为/ 0/ ,/ 则/ 表示/ 该/ 元组/ 上/ 被/ 索引/ 的/ 属性/ 值/ 在/ 该/ 数据/ 节点/ 上/ 为/ 首次/ 出现/ ./ 首先/ 更新/ 指示/ 位图/ 为/ 原/ 指示/ 位图/ ib/ 和/ 位串/ tb/ 的/ 按位/ 逻辑/ 或/ :/ ib/ ←/ ib/ |/ tb/ ./ 然后/ 将/ 排序/ 值/ r/ 插入/ 到/ 该/ 数据/ 节点/ 的/ 局部/ B/ +/ 树中/ ,/ 并/ 为/ 排序/ 值/ r/ 构造/ 长度/ 等于/ 该/ 数据/ 节点/ 上/ 所/ 管理/ 元组/ 总数/ 的/ 全/ 0/ 元组/ 位/ 图/ ,/ 并/ 将/ 被/ 插入/ 元组/ 对应/ 的/ 位置/ 为/ 1/ ./ 同时/ ,/ 置/ 指示/ 位图/ 的/ 第/ r/ 位为/ 1/ ./ (/ 2/ )/ 否则/ ,/ 表示/ 该/ 叶子/ 结点/ 上/ 已/ 存在/ 拥有/ 相同/ 的/ 属性/ 排序/ 值/ 的/ 其它/ 元组/ ,/ 因此/ 不/ 需要/ 更新/ 指示/ 位图/ 和/ B/ +/ 树结构/ ./ 而/ 需要/ 按照/ 排序/ 值/ 搜索/ 该/ 数据/ 节点/ 上/ 的/ 局部/ B/ +/ 树/ ,/ 并/ 设置/ 所/ 找到/ 的/ 叶子/ 结点/ 上/ 所/ 附着/ 的/ 元组/ 位图/ 中/ 新/ 插入/ 元组/ 所/ 对应/ 的/ 位为/ 1/ ./ 例/ 6/ ./ 关于/ 员工/ 信息/ 表/ 的/ 假设/ 同例/ 1/ ./ 根据/ 例/ 5/ ,/ 元组/ Emp5/ 和/ Emp6/ 已/ 被/ 删除/ ./ 假设/ 用户/ 发出/ 插入/ 元组/ Emp8/ =/ {/ Gender/ =/ female/ ,/ Salary/ =/ 1700/ }/ 的/ 请求/ ./ 首先/ 找到/ 该/ 元组/ 应当/ 被/ 插入/ 的/ 目标/ 数据/ 节点/ ,/ 假设/ 存储/ 引擎/ 决定/ 将/ 其/ 插入/ 到例/ 2/ 所述/ 的/ 数据/ 节点/ 中/ ./ 由主/ 键值/ Emp8/ 可知/ ,/ 该/ 元组/ 应当/ 位于/ 本/ 数据/ 节点/ 所/ 维护/ 的/ 局部/ 数据表/ 的/ 末端/ ./ 遍历/ 如图/ 5/ 所示/ 的/ B/ +/ 树/ 的/ 所有/ 叶子/ 结点/ 上/ 附着/ 的/ 元组/ 位/ 图/ ,/ 并/ 将/ 它们/ 在/ 末尾/ 增加/ 一位/ ./ 依据/ 元组/ Emp8/ 在/ 属性/ 性别/ 和/ 薪水/ 上/ 的/ 值/ 计算/ 得到/ 其/ 对应/ 的/ 位图/ 为/ 01010/ ,/ 其/ 排序/ 值为/ 2/ ./ 生成/ 长度/ 为/ 6/ 的/ 条件/ 位串/ cb/ =/ 010000/ ,/ 由例/ 5/ 可知/ 其/ 指示/ 位图/ 为/ ib/ =/ 101010/ ./ 计算/ 按位/ 逻辑/ 与/ Page8ibcb/ =/ 000000/ ,/ 可知/ 排序/ 值/ 2/ 在/ 该/ 数据/ 节点/ 上/ 为/ 首次/ 出现/ ./ 因此/ 更新/ 指示/ 位图/ ib/ ←/ ib/ |/ cb/ =/ 111010/ ,/ 并/ 将/ 排序/ 值/ 2/ 插入/ 到/ 局部/ B/ +/ 树/ (/ 如图/ 5/ 所示/ )/ 中/ ,/ 为/ 其/ 构造/ 元组/ 位/ 图/ :/ 010000/ ./ 至此/ ,/ 更新/ 后/ 的/ B/ +/ 树如图/ 6/ 所示/ ./ 图/ 6/ 插入/ 元组/ Emp8/ 后/ 的/ 局部/ B/ +/ 树结构/ 以及/ 各/ 元组/ 位图/ 3.2/ ./ 3/ 元组/ 更新/ 如果/ 该/ 元组/ 被/ 更新/ 的/ 域/ 包括/ 主键/ ,/ 则/ 执行/ 一次/ 该/ 元组/ 的/ 删除/ 操作/ ,/ 随后/ 执行/ 一次/ 新元/ 组/ 的/ 插入/ 操作/ ./ 否则/ ,/ 元组/ 的/ 主键/ 未/ 被/ 更新/ ,/ 可以/ 通过/ 一次/ 原地/ 更新/ 操作/ 来/ 完成/ 索引/ 的/ 维护/ ./ 原地/ 更新/ 的/ 执行/ 流程/ 如下/ 所述/ :/ 首先/ 根据/ 元组/ 的/ 主键/ 查找/ 该/ 元组/ 所在/ 的/ 数据/ 节点/ ./ 然后/ 依照/ 旧/ 元组/ 的/ 删除/ 操作/ 中/ 的/ 步骤/ 依次/ 对/ 局部/ B/ +/ 树/ 的/ 结构/ 和/ 指示/ 位/ 图/ 进行/ 更新/ ;/ 依照/ 插入/ 新元/ 组/ 操作/ 中/ 的/ 步骤/ 依次/ 对/ 局部/ B/ +/ 树/ 的/ 结构/ 和/ 指示/ 位/ 图/ 进行/ 更新/ ./ 最后/ 由/ 存储/ 引擎/ 更新/ 该/ 元组/ 上/ 的/ 相应/ 属性/ 值/ ./ 注意/ ,/ 由于/ 被/ 更新/ 的/ 元组/ 在/ 局部/ 数据/ 节点/ 中/ 的/ 相对/ 位置/ 没有/ 发生变化/ ,/ 因此/ 无需/ 扫描/ 并/ 更新/ 所有/ 的/ 元组/ 位图/ ./ 3.2/ ./ 4/ 数据/ 迁移/ 在/ 云/ 环境/ 中/ ,/ 为了/ 平衡/ 负载/ 和/ 保证/ 充足/ 的/ 计算资源/ ,/ 数据/ 的/ 动态/ 扩张/ 将/ 导致/ 数据/ 迁移/ 操作/ 被/ 触发/ ./ 随着/ 元组/ 的/ 宿主/ 节点/ 的/ 改变/ ,/ 参与/ 迁移/ 的/ 数据/ 节点/ 上/ 的/ 索引/ 结构/ 也/ 将/ 发生变化/ ./ 本文/ 使用/ 元组/ 的/ 删除/ 和/ 插入/ 操作/ 来/ 完成/ 数据/ 迁移/ 时/ 索引/ 结构/ 的/ 更新/ ./ 例如/ 欲/ 将/ 元组/ t/ 从/ 数据/ 节点/ Node1/ 迁移/ 到/ Node2/ 上/ ,/ 需要/ 在/ Node1/ 上/ 执行/ 元组/ t/ 的/ 删除/ 操作/ 并/ 更新/ Node1/ 上/ 的/ 指示/ 位图/ 和/ 局部/ 位/ 图/ 索引/ ,/ 然后/ 在/ Node2/ 上/ 执行/ 元组/ t/ 的/ 插入/ 操作/ 并/ 更新/ Node2/ 上/ 的/ 指示/ 位图/ 和/ 局部/ 位/ 图/ 索引/ ./ 3.2/ ./ 5/ 维护/ 效率/ 从/ 以上/ 维护/ 算法/ 中/ 可以/ 看出/ ,/ 单条/ 元组/ 的/ 插入/ 、/ 删除/ 和/ 更新/ 所/ 引起/ 的/ 索引/ 维护/ 代价/ 相对/ 于/ 系统/ 所/ 管理/ 的/ 数据/ 规模/ 是/ 常数/ 级别/ 的/ ./ 因此/ 即便/ 在/ 数据/ 规模/ 异常/ 庞大/ 情况/ 下/ ,/ 面对/ 频繁/ 的/ 元组/ 插入/ 、/ 删除/ 和/ 更新/ 请求/ ,/ 索引/ 维护/ 所/ 带来/ 的/ 额外/ 开销/ 并/ 不会/ 引起/ 数据/ 管理系统/ 计算/ 代价/ 的/ 显著/ 升高/ ./ 3.3/ 检索/ 算法/ 本/ 节/ 介绍/ 当/ 集群/ 收到/ 带有/ 条件/ 的/ 查询/ 请求/ 时/ ,/ 利用/ 索引/ 完成/ 查询/ 的/ 步骤/ ./ 首先/ 介绍/ 单个/ 检索/ 条件/ 下/ 的/ 检索/ 算法/ ./ 然后/ 介绍/ 对于/ 复合/ 的/ 检索/ 条件/ 利用/ 位图/ 的/ 逻辑运算/ 在/ 单个/ 条件/ 的/ 检索/ 算法/ 基础/ 上/ 快速/ 获得/ 最终/ 计算结果/ 的/ 方法/ ./ 3.3/ ./ 1/ 单个/ 索引/ 上/ 的/ 检索/ 条件/ 对于/ 查询/ 请求/ 中/ 的/ 单个/ 索引/ 上/ 检索/ 条件/ ,/ 主/ 节点/ 首先/ 将/ 检索/ 条件/ 转换/ 为/ 条件/ 位串/ ./ 例如/ ,/ 检索/ 女性/ 薪水/ 为/ 1500/ 到/ 1800/ 之间/ 的/ 员工/ 将/ 得到/ 位串/ 01010/ ;/ 又/ 如/ ,/ 检索/ 条件/ 薪水/ 低于/ 1300/ 的/ 男性/ 员工/ 将/ 被/ 转换/ 为位/ 串/ 10110/ ./ 注意/ ,/ 生成/ 的/ 条件/ 位串/ 应当/ 覆盖/ 检索/ 条件/ 所/ 包含/ 的/ 所有/ 可能性/ ./ 然后/ 主/ 节点/ 将/ 条件/ 位串/ 并行/ 地/ 发送到/ 所有/ 的/ 数据/ 节点/ 上/ ,/ 各/ 数据/ 节点/ 分别/ 将/ 条件/ 位串/ 转换/ 为/ 对应/ 的/ 排序/ 值/ 的/ 范围/ ,/ 接着/ 生成/ 长度/ 等于/ B/ 的/ 全/ 0/ 位串/ cb/ ,/ 并/ 将/ 属于/ 排序/ 值/ 范围/ 内/ 的/ 位置/ 为/ 1/ ./ 检查/ 按位/ 逻辑/ 与/ ebcb/ 的/ 计算结果/ 是否/ 为/ 0/ ./ 如果/ 为/ 0/ 则/ 在/ 该/ 数据/ 节点/ 上/ 直接/ 返回/ 空集/ 作为/ 计算结果/ ;/ 否则/ ,/ 在/ 该/ 数据/ 节点/ 的/ 局部/ B/ +/ 树上/ 依次/ 搜索/ 各/ 符合条件/ 的/ 排序/ 值/ ,/ 将/ 找到/ 元组/ 位/ 图/ 进行/ 按位/ 逻辑/ 与/ ,/ 一一/ 检查/ 其/ 计算结果/ 中/ 被/ 置/ 为/ 1/ 的/ 位/ 所/ 对应/ 的/ 元组/ 是否/ 满足/ 检索/ 条件/ ,/ 最后/ 返回/ 所有/ 满足条件/ 的/ 结果/ 作为/ 计算结果/ ./ 算法/ 1/ 展示/ 了/ 分片/ 位/ 图/ 索引/ 上/ 对于/ 单个/ 检索/ 条件/ 的/ 检索/ 算法/ 的/ 伪/ 代码/ ./ 检索/ 算法/ ./ 算法/ 1/ ./ 分片/ 位/ 图/ 索引/ 在/ 单一/ 检索/ 条件/ 下/ 的/ 输入/ :/ 给定/ 查询/ 属性/ Aj/ 上/ 的/ 划分/ Aj1/ ,/ Aj2/ ,/ …/ ,/ Ajf/ 以及/ 输出/ :/ 满足/ 查询/ 条件/ 的/ 元组/ 的/ 主键/ 算法/ 步骤/ :/ 1/ ./ 主/ 节点/ 收到/ 查询/ 请求/ ./ 2/ ./ 基于/ RBI/ 索引/ 在/ 属性/ Aj/ 上/ 的/ 分片/ 规则/ ,/ 由/ 查询/ 条/ 3/ ./ 将/ 条件/ 位图/ cb/ 和/ 排序/ 值/ 集合/ r/ 发送至/ 所有/ 计算/ 节点/ ./ 4/ ./ 各/ 计算/ 节点/ 并行执行/ 步/ 5/ ~/ 13/ :/ 5/ ./ 取得/ 局部/ 指示/ 位图/ ib/ ;/ 6/ ./ 计算/ 逻辑/ 按位/ 与/ ib/ &/ cb/ ;/ 7/ ./ 如果/ 计算结果/ 为/ 全/ 0/ 串则/ 该/ 节点/ 直接/ 返回/ 空集/ / ;/ 8/ ./ 否则/ ,/ 顺序/ 执行/ 步/ 9/ ~/ 13/ :/ 9/ ./ 在/ 局部/ B/ +/ 树上/ 搜索/ r/ 中/ 的/ 每/ 一个/ 排序/ 值/ ;/ 10/ ./ 获取/ 所有/ 的/ 命/ 中叶/ 结点/ 上/ 的/ 元组/ 位图/ rb1/ …/ t/ ;/ 11/ ./ 计算/ rb/ ←/ ∪/ t/ (/ i/ =/ 1/ )/ rbi/ ;/ 12/ ./ 对于/ rb/ 中/ 每个/ 1/ 位/ :/ 13/ ./ 如果/ 该位/ 所/ 对应/ 的/ 元组/ rec/ 满足条件/ 14/ ./ 主/ 节点/ 向/ 用户/ 返回/ 所有/ 计算/ 节点/ 返回/ 结果/ 的/ 并/ 集/ 3.3/ ./ 2/ 检索/ 条件/ 的/ 复合/ 通过/ 将/ 在/ 同一/ 数据/ 节点/ 上/ 的/ 不同/ 属性/ 上/ 检索/ 得/ Page9/ 到/ 的/ 元组/ 位/ 图/ 进行/ 相应/ 的/ 按位/ 逻辑运算/ ,/ 可以/ 实现/ 多个/ 检索/ 条件/ 的/ 快速/ 复合/ ./ 这/ 充分利用/ 了/ 现代/ 计算机/ 能够/ 对位/ 图/ 快速/ 操作/ 的/ 计算/ 优势/ ./ 具体/ 而言/ ,/ 其/ 执行/ 步骤/ 为/ :/ 首先/ 主/ 节点/ 将/ 各/ 简单/ 检索/ 条件/ 分别/ 转换/ 为/ 条件/ 位串/ ,/ 并/ 将/ 这些/ 条件/ 位串/ 以及/ 条件/ 之间/ 的/ 复合/ 关系/ 分发/ 到/ 各个/ 数据/ 节点/ ./ 然后/ ,/ 各/ 数据/ 节点/ 分别/ 依次/ 执行/ 各/ 简单/ 检索/ 条件/ 上/ 的/ 检索/ 流程/ ,/ 从而/ 查找/ 到/ 各/ 简单/ 条件/ 所/ 对应/ 的/ 元组/ 位/ 图/ ,/ 并/ 将/ 这些/ 元组/ 位/ 图/ 依照/ 检索/ 条件/ 复合/ 方法/ 执行/ 按位/ 逻辑运算/ ,/ 得到/ 最终/ 的/ 元组/ 结果/ 位图/ ./ 最后/ ,/ 扫描/ 该位/ 图中/ 为/ 被/ 置/ 为/ 1/ 的/ 位/ ,/ 并/ 向/ 主/ 节点/ 返回/ 相应/ 的/ 满足/ 检索/ 条件/ 的/ 元组/ ./ 表/ 2/ 对比/ 实验所/ 使用/ 的/ 集群/ 环境/ 主机名/ Master/ 两颗/ Quad/ -/ CoreAMDOpteronTMSlaver1/ 四颗/ Dual/ -/ CoreAMDOpteronTMSlave2/ 两颗/ Quad/ -/ CoreAMDOpteronTMSlave3/ 四颗/ Dual/ -/ CoreAMDOpteronTM/ 另外/ ,/ Master/ 主机/ 上/ 部署/ 了/ MySQL5/ ./ 0/ 系统/ 以便/ 于/ 与/ 传统/ 关系/ 型/ 数据库/ 管理系统/ 进行/ 对比/ ./ 本文/ 采用/ 了/ 如表/ 3/ 所示/ 的/ 2/ 个/ 数据/ 集/ 作为/ 实验/ 数据/ ./ 各/ 数据/ 集均/ 以/ RowKey/ 字段/ 的/ 值/ 的/ 大小/ 顺序/ 来/ 组织/ 数据/ ,/ 并且/ 在/ RowKey/ 字段/ 上/ 创建/ 有/ 聚集/ 索引/ ./ 数据/ 集/ A/ 中/ 的/ fromUser/ 、/ toUser/ 字段/ 和/ 数据/ 集/ B/ 中/ 的/ ref/ 字段/ 均/ 创建/ 有/ 分片/ 位/ 图/ 索引/ ./ 实验/ 采用/ 以下/ 4/ 种/ 算法/ 与/ 本文/ 所/ 提出/ 的/ 分片/ 位/ 图/ 索引/ (/ RBI/ )/ 数据/ 集/ 元组/ 数目/ 大小/ A4/ ./ 5/ 亿/ 52GBTwitter/ 微博/ 转发/ 关系/ 表/ 3/ 对比/ 实验所/ 使用/ 的/ 数据/ 集/ 属性/ 数目/ B162/ 万/ 1TB/ 自动/ 生成/ 的/ 多媒体/ 数据/ 4/ 对于/ 各/ 对比/ 算法/ ,/ 本/ 实验/ 使用/ 了/ 相同/ 的/ 查询/ 集/ ./ 查询/ 集/ 按照/ 命中/ 与/ 不/ 命中/ 数量/ 比例/ 11/ 的/ 原则/ 随机/ 生成/ ./ 对/ 不同/ 的/ 目标/ 属性/ 生成/ 了/ 不同/ 的/ 查询/ 集/ ./ 各项/ 实验/ 向/ 系统/ 连续/ 发起/ 查询/ 集中/ 的/ 随机/ 挑选出/ 的/ 查询/ 请求/ ./ 对于/ 同/ 一组/ 对比/ 实验/ 中/ 不同/ 的/ 检索/ 算法/ ,/ 各/ 查询/ 请求/ 按照/ 相同/ 的/ 顺序/ 发出/ ./ 4.2/ 分片/ 位/ 图/ 索引/ 的/ 查询/ 性能/ 实验/ 中/ 分别/ 为/ A/ 、/ B/ 两个/ 数据/ 集/ 手工/ 挑选/ 了/ 等值/ 条件/ 、/ 非/ 等值/ 条件/ 、/ 复合/ 条件/ 各/ 10/ 条/ 查询/ 来/ 组成/ 4/ 实验/ 本/ 节/ 给出/ 在/ 云/ 环境/ 中/ ,/ 本文/ 所/ 提出/ 的/ 分片/ 位/ 图/ 索引/ 与/ 现有/ 基本/ 算法/ 在/ 查询/ 效率/ 和/ 查询/ 吞吐量/ 上/ 的/ 测试/ 结果/ ,/ 以/ 验证/ 本文/ 所/ 介绍/ 算法/ 的/ 有效性/ ./ 4.1/ 实验/ 环境/ 与/ 设置/ 我们/ 在/ 一个/ 拥有/ 4/ 台/ 分布式计算/ 节点/ 的/ 集群/ 上/ 部署/ 了/ 一个/ 小型/ 的/ 云/ 环境/ ./ 4/ 台/ 服务器/ 位于/ 同一个/ 局域网/ 中/ ,/ 相互之间/ 通过/ 千兆/ 以太网/ 连接/ ./ 各/ 计算/ 节点/ 的/ 配置/ 及其/ 在/ 集群/ 中/ 的/ 角色/ 如表/ 2/ 所示/ ./ 进行/ 对比/ :/ 列无/ 索引/ (/ MySQLQuery/ ,/ MQ/ )/ ./ (/ 1/ )/ 相同/ 数据/ 内容/ 存储/ 于/ MySQL/ 中/ ,/ 相应/ 属性/ (/ 2/ )/ 并发/ 的/ 全库/ 扫描/ 方式/ (/ FullScan/ ,/ FS/ )/ ./ (/ 3/ )/ 如/ 第/ 2.1/ 节/ 所述/ 的/ 辅助/ 索引/ 的/ 集中式/ 方案/ (/ 4/ )/ 如/ 第/ 2.2/ 节/ 所述/ 的/ 辅助/ 索引/ 的/ 分布式/ 方案/ (/ GlobalApproach/ ,/ GA/ )/ 的/ 基本/ 实现/ ./ (/ DistributedApproach/ ,/ DA/ )/ 的/ 基本/ 实现/ ./ 查询/ 请求/ 集/ ./ 以下/ 图中/ 记录/ 了/ 处理/ 单条/ 查询/ 的/ 平均/ 响应/ 时间/ ./ 实验/ 中以/ 10/ 个/ 客户端/ 同时/ 连续/ 地/ 发起/ 查询/ 请求/ 的/ 方式/ 对/ 各/ 算法/ 的/ 查询/ 吞吐量/ 进行/ 测试/ ./ 吞吐量/ 以/ 每分钟/ 处理/ 的/ 查询/ 数量/ 来/ 表示/ ./ 图/ 7/ 和/ 图/ 8/ 分别/ 列出/ 了/ 以/ 数据/ 集/ A/ 的/ fromUser/ 属性/ 上值/ 的/ 比较/ 为/ 条件/ 的/ 查询/ 请求/ 以及/ 以/ fromUser/ 与/ toUser/ 两个/ 属性/ 上/ 的/ 复合/ 检索/ 条件/ 构成/ 的/ 查询/ 请求/ 的/ 检索/ 效率/ 与/ 查询/ 吞吐量/ ./ 可以/ 看到/ ,/ 云/ 环境/ 中/ 各种/ 索引/ 的/ 检索/ 方法/ (/ GA/ 、/ DA/ 和/ RBI/ )/ 都/ 拥有/ 优秀/ 的/ Page10/ 单条/ 查询/ 响应速度/ ./ 其中/ ,/ 能够/ 以/ 并行/ 方式/ 执行/ 检索/ 任务/ 的/ DA/ 和/ RBI/ 算法/ 表现/ 更加/ 出色/ ./ 在/ 密集/ 的/ 查询/ 请求/ 并发/ 地/ 、/ 连续/ 地/ 到达/ 时/ ,/ 无/ 索引/ 的/ 检索/ 方法/ (/ MQ/ 与/ FS/ )/ 效率/ 不佳/ ./ 集中式/ 方法/ (/ GA/ )/ 的/ 查询/ 吞吐量/ 也/ 表现/ 较差/ ./ 这一/ 现象/ 在/ 复合/ 检索/ 条件/ 情况/ 下/ 尤其/ 突出/ ./ 对此/ ,/ 不难/ 推断/ 其/ 原因/ 在于/ 集中式/ 方法/ 中/ 检索/ 算法/ 无法/ 被/ 并行/ 化且/ 检索/ 过程/ 会/ 触发/ 较/ 多/ 的/ 外存/ I/ // O/ ./ 图/ 9/ 和/ 图/ 10/ 分别/ 列出/ 了/ 以/ 数据/ 集/ B/ 的/ ref/ 属性/ 上值/ 的/ 比较/ 为/ 条件/ 的/ 查询/ 请求/ 的/ 检索/ 效率/ 与/ 查询/ 吞吐量/ ./ 由于/ 数据/ 集/ B/ 数据/ 规模/ 较大/ ,/ 向/ MySQL/ 导入/ 数据/ 的/ 过程/ 消耗/ 了/ 超过/ 一周/ 的/ 时间/ ,/ 因此/ 本文/ 未/ 对/ 数据/ 集/ B/ 在/ MySQL/ 上/ 进行/ 查询/ 实验/ ./ 总体而言/ 在/ 数据/ 集/ B/ 上/ 各/ 方法/ 的/ 性能/ 的/ 相对/ 关系/ 与/ 数据/ 集/ A/ 上/ 获得/ 的/ 结果/ 类似/ ./ 通过/ 对比/ ,/ 尽管/ 数据/ 集/ B/ 拥有/ 的/ 元组/ 数目/ 少于/ 数据/ 集/ A/ ,/ 但是/ 由于/ 数据/ 总/ 规模/ 增大/ 了/ 数十倍/ ,/ 数据/ 访问/ 所/ 带来/ 的/ 开销/ 显著/ 升高/ ,/ 全图/ 10/ 数据/ 集/ B/ 的/ ref/ 属性/ 上/ 的/ 查询/ 吞吐量/ 库/ 扫描/ 方法/ (/ FS/ )/ 的/ 检索/ 效率/ 被/ 成倍/ 地/ 降低/ 了/ ,/ 而/ 对于/ 其它/ 使用/ 索引/ 来/ 进行/ 检索/ 方法/ 而言/ ,/ 所/ 受到/ 的/ 影响/ 相对/ 较/ 小/ ./ 相比之下/ ,/ 分片/ 位/ 图/ 索引/ (/ RBI/ )/ 依然/ 保持/ 着/ 显著/ 的/ 优势/ ./ 概括/ 而言/ ,/ 两组/ 数据/ 集上/ 所/ 得到/ 的/ 实验/ 结果/ 是/ 基本一致/ 的/ :/ 得益于/ 云/ 环境/ 的/ 强大/ 计算资源/ ,/ 即便/ 是/ 全表/ 扫描/ 算法/ (/ FS/ )/ ,/ 相对/ 于/ 传统/ 单/ 节点/ 数据库/ 上/ 的/ 粗暴/ 检索/ 算法/ (/ MQ/ )/ 也/ 具有/ 非常明显/ 的/ 优势/ ./ 对比/ 云/ 环境/ 中/ 各种/ 索引/ 集中/ 上/ 的/ 检索/ 算法/ ,/ 可以/ 发现/ ,/ 本文/ 提出/ 的/ 分片/ 位/ 图/ 索引/ 技术/ (/ RBI/ )/ 在/ 查询/ 的/ 响应/ 时间/ 和/ 吞吐量/ 上/ 都/ 大大/ 优于/ 其/ 竞争对手/ ,/ 这一/ 优势/ 在/ 复合/ 检索/ 条件/ 情况/ 下/ 尤其/ 突出/ ./ 5/ 总结/ 本文/ 以云/ 环境/ 的/ 成熟/ 发展/ 为/ 契机/ ,/ 着眼于/ 云/ 环境/ 中/ 大规模/ 数据/ 上/ 的/ 辅助/ 索引/ 机制/ 的/ 设计/ 与/ 实现/ ./ 通过/ 分析/ 对比/ 了/ 两种/ 截然不同/ 的/ 云/ 环境/ 中/ 辅助/ 索引/ 的/ 基本/ 逻辑/ 结构/ ,/ 即/ 集中式/ 方案/ 与/ 分布式/ 方案/ ,/ 在/ 吸收/ 二者/ 的/ 优势/ 并/ 规避/ 其/ 缺陷/ 的/ 基础/ 上/ ,/ 提出/ 了/ 具有/ 良好/ 可扩展性/ 的/ 分片/ 位/ 图/ 索引/ 技术/ 来/ 对/ 云/ 环境/ 中/ 海量/ 数据/ 的/ 检索/ 任务/ 提供/ 高效/ 支持/ ./ 其/ 特点/ 在于/ 充分发挥/ 两种/ 基本/ 方案/ 中/ 的/ 优势/ ,/ 既/ 能够/ 使云/ 环境/ 中/ 并行计算/ 资源/ 得到/ 很/ 好/ 的/ 利用/ ,/ 从而/ 提高/ 了/ 单条/ 查询/ 的/ 响应速度/ ,/ 又/ 能够/ 通过/ 局部/ 节点/ 所/ 掌握/ 的/ 全局/ 信息/ 而/ 规避/ 不必要/ 的/ 检索/ 代价/ 从而/ 使/ 在/ 大量/ 检索/ 请求/ 并发/ 到达/ 时/ 查询/ 吞吐量/ 得以/ 保证/ ./ 通过/ 在/ 真实/ 数据/ 上/ 进行/ 实验/ 测试/ ,/ 分片/ 位/ 图/ 索引/ 被/ 证实/ 拥有/ 优于/ 其它/ 方法/ 的/ 性能/ 表现/ ./ 

