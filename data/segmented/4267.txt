Page1/ 一种/ 适合/ 于/ 超大规模/ 特征/ 集/ 的/ 匹配/ 方法/ 杨/ 天龙/ 张宏莉/ (/ 哈尔滨工业大学/ 计算机网络/ 与/ 信息安全/ 技术/ 研究/ 中心/ 哈尔滨/ 150001/ )/ 摘要/ 串/ 匹配/ 技术/ 是/ 入侵/ 检测/ 系统/ 中/ 的/ 关键技术/ ,/ 随着/ 特征/ 数量/ 的/ 增加/ ,/ 现有/ 的/ 自动机/ 类/ 匹配/ 算法/ 都/ 会/ 面对/ 内存/ 占用/ 过大/ 的/ 问题/ ./ 当/ 特征/ 超过/ 一定/ 数目/ 后/ ,/ 自动机/ 可能/ 根本无法/ 构造/ ./ 文中/ 提出/ 了/ 一种/ 针对/ 超大规模/ 特征/ 匹配/ (/ SLSPM/ )/ 环境/ 的/ 匹配/ 算法/ SLSPM/ ./ SLSPM/ 算法/ 借助/ 一个/ 块式/ 匹配/ 自动机/ 和/ 若干个/ 普通/ 自动机/ 完成/ 匹配/ 工作/ ,/ 而且/ 能够/ 支持/ 至少/ 上万/ 规模/ 的/ 特征/ 集/ ./ 与/ 普通/ 匹配/ 自动机/ 先/ 读入/ 状态/ 再/ 判断/ 读入/ 符号/ 的/ 方式/ 不同/ ,/ SLSPM/ 首先/ 使用/ 散列/ 函数/ 判断/ 当前/ 文本/ 块/ 是否/ 可以/ 被/ 过滤/ 掉/ ./ 如果/ 文本/ 块/ 无法/ 被/ 过滤/ 且/ 为/ 合法/ 文本/ 块/ 时/ ,/ 再/ 检查/ 当前/ 状态/ 是否是/ 一个/ 能够/ 识别/ 当前/ 文本/ 块/ 的/ 状态/ ./ 仅/ 在/ 当前/ 状态/ 吻合/ 的/ 情况/ 下/ 再/ 读入/ 下/ 一个/ 文本/ 块/ 进行/ 后续/ 匹配/ ./ 理论/ 证明/ 显示/ SLSPM/ 算法/ 具有/ 近似/ O/ (/ n/ )/ 的/ 复杂度/ ./ 由于/ SLSPM/ 算法/ 未能/ 保存/ 全部/ 的/ 跳转/ 信息/ ,/ 其/ 匹配/ 速度/ 相对/ 于/ 高级/ Aho/ -/ Corasick/ 算法/ 未有/ 大幅/ 提升/ ./ 算法/ 的/ 优势/ 在于/ ,/ 该/ 算法/ 在/ 软件/ 环境/ 下/ 能够/ 维持/ 与/ AC/ 算法/ 相同/ 的/ 匹配/ 性能/ ,/ 而且/ 能够/ 将/ 特征/ 加载/ 规模/ 至少/ 提升/ 至/ 上万/ 以/ 适应/ 超大规模/ 特征/ 集/ 匹配/ 环境/ ./ 关键词/ 网络安全/ ;/ 超大规模/ 特征/ 匹配/ ;/ 串/ 匹配/ ;/ 混合/ 自动机/ ;/ 算法/ ;/ 信息安全/ 1/ 引言/ 字符串/ 匹配/ 可以/ 被/ 理解/ 为/ 从/ 给定/ 符号/ 序列/ 中/ 找出/ 一个/ 具有/ 某种/ 属性/ 的/ 模式/ ,/ 最/ 简单/ 的/ 例子/ 是从/ 给定/ 字符/ 序列/ 中/ 找出/ 一个/ 给定/ 的/ 字符串/ ./ 字符串/ 匹配/ 是/ 计算机科学/ 中/ 最/ 古老/ 、/ 研究/ 最/ 广泛/ 的/ 问题/ 之一/ ,/ 并且/ ,/ 字符串/ 匹配/ 的/ 应用/ 随处可见/ [/ 1/ ]/ ,/ 比如/ 生物/ 领域/ 和/ 计算机科学/ 中/ ./ 本文/ 专注/ 的/ 是/ 计算机科学/ 中/ 的/ 串/ 匹配/ 问题/ ,/ 更/ 确切/ 地/ 说/ 是/ 应用/ 于/ 入侵/ 检测/ 系统/ (/ IDS/ )/ 中/ 的/ 串/ 匹配/ 技术/ ./ IDS/ 中/ 常用/ 的/ 串/ 匹配/ 技术/ 包括/ AC/ [/ 2/ ]/ 、/ AC/ _/ BM/ [/ 3/ ]/ 或者/ WM/ [/ 4/ ]/ ,/ 虽然/ 这些/ 算法/ 在/ IDS/ 系统/ 中/ 得到/ 了/ 很/ 好/ 的/ 应用/ ,/ 但是/ 当/ 处理/ 的/ 特征/ 集/ 的/ 规模/ 十分/ 巨大/ ,/ 并且/ 特征/ 之间/ 缺少/ 共用/ 前缀/ 时/ ,/ 自动机/ 类型/ 匹配/ 方法/ 对/ 内存/ 的/ 需求/ 就/ 会/ 急剧/ 上升/ ,/ 甚至/ 会/ 出现/ 由于/ 系统/ 内存/ 无法/ 满足/ 算法/ 对/ 内存/ 的/ 需要/ 导致/ 自动机/ 无法/ 加载/ (/ 主要/ 是/ AC/ 类/ 的/ 自动机/ )/ 的/ 现象/ ./ 当/ 特征/ 集/ 规模/ 过于/ 巨大/ 时/ ,/ 即便/ 内存/ 能够/ 得到/ 满足/ ,/ 但是/ 由于/ 自动机/ 本身/ 占用/ 的/ 内存/ 量/ 较大/ 也/ 会/ 导致/ 在线/ 匹配/ 性能/ 的/ 下降/ ./ 为了/ 解决/ AC/ 类/ 自动机/ 在/ 大规模/ 级别/ 特征/ 集/ 环境/ 下/ 性能/ 差/ 的/ 问题/ ,/ 研究者/ 们/ 提出/ 了/ 许多/ 降低/ 自动机/ 内存/ 占用/ 量过大/ 的/ 方法/ ,/ 比如/ 公用/ 路径分析/ [/ 5/ ]/ 、/ 位/ 并行/ 自动机/ [/ 6/ ]/ 或者/ 字节/ 并行/ 自动机/ [/ 7/ ]/ ./ 公用/ 路径分析/ 方法/ [/ 5/ ]/ 通过/ 寻找/ 特征/ 间/ 共用/ 的/ 特征/ 子串/ 减少/ 自动机/ 中/ 的/ 状态/ 数目/ ;/ 位/ 并行/ [/ 6/ ]/ 和/ 字节/ 并行/ [/ 7/ ]/ 通过/ 调整/ 匹配/ 过程/ 输入/ 的/ 匹配/ 信息/ 的/ 比特/ 数目/ 或者/ 字节/ 数目/ 间接/ 地/ 减少/ 自动机/ 中/ 的/ 状态/ 数目/ ./ 它们/ 的/ 核心/ 思路/ 都/ 是/ 通过/ 降低/ 自动机/ 中/ 节点/ 的/ 数目/ 来/ 降低/ 自动机/ 的/ 整体/ 内存/ ./ 由于/ 公用/ 路径/ 方法/ 对/ 特征/ 集/ 的/ 结构/ 要求/ 比较/ 高/ ,/ 当/ 告警/ 集中/ 缺少/ 共用/ 特征/ 子串/ 时该/ 方法/ 无法/ 有效/ 抑制/ 自动机/ 对/ 内存/ 的/ 需求/ ./ 为了/ 使/ 算法/ 更加/ 适用/ 于/ 通用化/ 的/ 特征/ 集合/ ,/ 本文/ 将/ 采用/ 字节/ 并行/ 作为/ 文中/ 匹配/ 方法/ 的/ 核心/ 手段/ ./ 另外/ 本文/ 中将/ 大规模/ 特征/ 集/ 匹配/ 问题/ 称为/ 超大规模/ 匹配/ (/ SuperLargeScalePatternsMatching/ ,/ SLSPM/ )/ ,/ 而且/ 所/ 处理/ 的/ 特征/ 集/ 的/ 规模/ 至少/ 1/ 万/ ./ 针对/ SLSPM/ ,/ 本文/ 提出/ 了/ 一种/ 类似/ 于/ Aho/ -/ Corasick/ 的/ 自动机/ ,/ 相关/ 的/ 算法/ 被/ 简称/ 为/ SLSPM/ 算法/ ./ 该/ 方法/ 在/ 构造/ 匹配/ 自动机/ 前会/ 对/ 特征/ 的/ 跳转/ 信息/ 进行/ 预先/ 处理/ 并/ 形成/ 一份/ 格式化/ 的/ 特征分析/ 文件/ ,/ 随后/ 通过/ 再次/ 读取/ 特征分析/ 文件/ 构造/ 一个/ 内存/ 上/ 更加/ 紧凑/ 的/ 匹配/ 自动机/ ./ 文中/ 的/ 方法/ 在/ 通常/ 情况/ 下/ 可以/ O/ (/ n/ )/ 的/ 复杂度/ 处理/ SLSPM/ 问题/ ,/ 其中/ n/ 代表/ 文本/ 的/ 长度/ ./ 通常/ 自动机/ 匹配/ 都/ 要/ 为/ 状态/ 构造/ “/ 状态/ —/ —/ —/ 读入/ 符号/ ”/ 的/ 映射/ 关系/ (/ 即/ goto/ 函数/ )/ ,/ 这样/ 的/ 关系/ 有助于/ 通过/ 自动机/ 状态/ 验证/ 读入/ 符号/ 的/ 情况/ ./ 而/ 本文/ 中/ 为了/ 加快/ 匹配/ 速度/ ,/ 借助/ 了/ 散列/ 技术/ ,/ 为了/ 适应/ 文中/ 先散/ 列后/ 匹配/ 的/ 方式/ ,/ 本文/ 在/ 构造/ 状态/ 跳转/ 信息/ 时/ 对/ “/ 状态/ —/ —/ —/ 读入/ 符号/ ”/ 的/ 关系/ 进行/ 了/ 翻转/ ,/ 即/ 采用/ “/ 自动机/ 某/ 状态/ 识别/ 的/ 某/ 一/ 符号/ —/ —/ —/ 识别/ 该/ 符号/ 的/ 状态/ 集合/ ”/ 的/ 映射/ 关系/ ./ 为了/ 降低/ 匹配/ 自动机/ 占用/ 的/ 内存/ ,/ 本文/ 在/ 同一个/ 匹配/ 系统/ 中/ 采用/ 了/ 块/ 式/ 自动机/ 和/ 普通/ 自动机/ 相结合/ 的/ 混合/ 自动机/ 形式/ ./ 本文/ 第/ 2/ 节对/ 自动机/ 压缩/ 方法/ 做/ 归纳/ ;/ 第/ 3/ 节/ 介绍/ 一些/ 相关/ 的/ 定义/ ;/ 第/ 4/ 节对/ 算法/ 的/ 基本思路/ 和/ 相关/ 算法/ 进行/ 说明/ ;/ 第/ 5/ 节对/ 算法/ 的/ 实际/ 应用/ 进行/ 测试/ ;/ 第/ 6/ 节对/ 本文/ 中/ 的/ SLSPM/ 算法/ 存在/ 的/ 问题/ 进行/ 讨论/ ;/ 第/ 7/ 节对/ 全文/ 做/ 总结/ ./ 2/ 相关/ 研究/ 串/ 匹配/ 的/ 研究/ 已近/ 半个世纪/ [/ 8/ ]/ ,/ 匹配/ 的/ 速度/ 也/ 随着/ 硬件/ 技术/ 的/ 进步/ 和/ 算法/ 的/ 改进/ 得到/ 了/ 提升/ ./ 然而/ 特征/ 集合/ 中/ 特征/ 数量/ 的/ 增长/ 直接/ 限制/ 了/ 自动机/ 的/ 匹配/ 速度/ ./ 为了/ 降低/ 匹配/ 自动机/ 对/ 内存/ 的/ 占用/ ,/ 学者/ 们/ 进行/ 了/ 大量/ 的/ 研究/ ./ 这些/ 压缩/ 匹配/ 自动机/ 的/ 方法/ 可以/ 大致/ 分为/ 两类/ ./ 第/ 1/ 类/ ,/ 通过/ 分析/ 特征/ 的/ 结构/ 或者/ 统计/ 特性/ 压缩/ 自动机/ 的/ 状态/ 数/ ./ 比如/ 文献/ [/ 9/ ]/ 中/ ,/ 把/ 自动机/ 中/ 的/ 失败/ 变迁/ 单独/ 提取/ 出来/ 得到/ 失败/ 变迁/ 图/ ,/ 即/ 失败/ 变迁/ 树/ (/ FTT/ )/ ./ 通过/ 对/ 状态/ 进行/ 编码/ ,/ 每个/ 状态/ 复制/ 给/ 所有/ 子孙/ 状态/ 的/ 实际/ 变迁/ 可以/ 被/ 聚合/ 到/ 该/ 状态/ 自身/ 的/ 变迁/ 中/ ./ 状态/ 的/ 编码/ 分为/ 2/ 步/ :/ FTT/ 的/ 边/ 编码/ 和/ 状态/ 编码/ ./ 边/ 编码/ 从上到下/ 对/ FTT/ 各层/ 进行/ 编码/ ./ 对/ 每/ 一层/ ,/ 首先/ 统计/ 上/ 一层/ 单个/ 状态/ 的/ 出度/ ./ 状态/ 编码/ 后/ ,/ FTT/ 上/ 任意/ 一棵/ 子树中/ 所有/ 状态/ 都/ 可以/ 用/ 一个/ 包含/ 通配/ 比特/ 符号/ “/ / ”/ 的/ Page3/ 编码/ 匹配/ ./ 文献/ [/ 10/ ]/ 中/ ,/ 提出/ 一种/ 统计/ 优化/ 型/ AC/ 算法/ 变体/ (/ AX/ )/ ,/ 其/ 对/ 模式/ 数量/ 、/ 模式/ 长度/ 和/ 字符集/ 大小/ 均/ 不/ 敏感/ ./ AX/ 算法/ 中/ 主要/ 包含/ 3/ 种/ 压缩/ :/ (/ 1/ )/ 删除/ 压缩/ ./ 不为/ 每/ 一个/ 无效/ 事件/ 各/ 存储/ 一份/ 失败/ 迁移/ ,/ 而是/ 为/ 整个/ 无效/ 事件/ 集合/ 仅/ 存储/ 一份/ 在/ 节点/ 结构/ 中/ ./ 事件/ 迁移/ 表中仅/ 存储/ 有效/ 事件/ 及其/ 对应/ 的/ 成功/ 迁移/ 指针/ ./ (/ 2/ )/ 路径/ 压缩/ ./ 按/ 数组/ 方式/ 存储/ 长链/ 中/ 连续/ 的/ 节点/ 但/ 不/ 存储/ 节点/ 指针/ ,/ 用/ 标识/ 位及/ 相对/ 偏移/ 定位/ 后续/ 节点/ ,/ 取代/ 指针/ 定位/ ,/ 省去/ 绝大多数/ 节点/ 指针/ ;/ (/ 3/ )/ 事件/ 定位/ ./ 引入/ 3/ 个/ 阈值/ 0/ / θ/ α/ / θ/ β/ / θ/ γ/ / σ/ ,/ 当/ θ/ / θ/ α/ 时/ ,/ 采用/ 顺序/ 查找/ ;/ 当/ θ/ α/ / θ/ / θ/ β/ 时/ ,/ 采用/ 二分/ 查找/ ;/ 当/ θ/ β/ / θ/ / θ/ γ/ 时/ ,/ 采用/ 分页/ 位/ 图/ 定位/ ;/ 当/ θ/ >/ θ/ γ/ 时/ ,/ 不/ 进行/ 压缩/ ./ 文献/ [/ 5/ ]/ 中/ 通过/ 寻找/ 特征/ 间/ 共用/ 的/ 特征/ 子串/ 减少/ 自动机/ 中/ 的/ 状态/ 数目/ ./ 第/ 2/ 类/ ,/ 按照/ 一定/ 的/ 度量/ 直接/ 将/ 自动机/ 划分/ 为/ 若干个/ 独立/ 的/ 自动机/ ./ 这类/ 压缩/ 自动机/ 方法/ 中/ ,/ 通过/ 调整/ 匹配/ 过程/ 输入/ 的/ 匹配/ 信息/ 的/ 基本/ 单位/ 间接/ 地/ 减少/ 自动机/ 中/ 的/ 状态/ 数目/ ./ 比如/ 文献/ [/ 11/ ]/ 中/ 的/ 位/ 拆分/ 状态机/ ,/ 将/ 一个/ 完整/ 的/ 状态机/ 按位/ 拆分/ 成为/ 多个/ 子/ 状态机/ ,/ 每个/ 子/ 状态机/ 独立/ 进行/ 工作/ ,/ 只/ 负责/ 检测/ 字符/ 中/ 的/ 一位/ 或/ 几位/ ,/ 当/ 所有/ 子/ 状态机/ 都/ 输出/ 匹配/ 信号/ 时才/ 确定/ 匹配/ ./ 一个/ 完整/ 的/ 规则/ 检测/ 模块/ 由/ 4/ 个位/ 状态机/ 组成/ ,/ 在/ 检测/ 过程/ 中/ 保持/ 恒定/ 速度/ ./ 又/ 如/ Dharmapurikar/ 等/ 人/ [/ 7/ ]/ 和/ Hua/ 等/ 人/ [/ 12/ ]/ 分别/ 采用/ 一次/ 扫描/ 固定/ 步长/ 和/ 变/ 步长/ 的/ 多个/ 字符/ ,/ 提高/ 字符串/ 匹配/ 的/ 吞吐量/ ,/ 并/ 减少/ 其/ 存储空间/ 需求/ ;/ Tan/ 等/ 人/ [/ 13/ ]/ 提出/ 了/ 比特/ 拆分/ 的/ Aho/ -/ Corasick/ 算法/ ,/ Piyachon/ 等/ 人/ [/ 6/ ]/ 提出/ 了/ 多/ 字节/ 比特/ 拆分/ 的/ Aho/ -/ Corasick/ 算法/ ,/ Lu/ 等/ 人/ 提出/ 了/ 多/ 字符/ 并行处理/ 的/ Aho/ -/ Corasick/ 算法/ 等/ ,/ 这些/ 并行/ 字符串/ 匹配/ 算法/ 不仅/ 提高/ 了/ Aho/ -/ Corasick/ 算法/ 的/ 吞吐量/ ,/ 而且/ 最小化/ 了/ 匹配/ 自动机/ 的/ 存储空间/ ./ 通过/ 改变/ 一次/ 读入/ 多/ 字符/ 或者/ 多/ 比特/ 的/ 方法/ 在/ FPGA/ 中/ 已经/ 有/ 了/ 较/ 多/ 的/ 应用/ ./ 而且/ 通过/ 硬件/ 环境/ ,/ 这些/ 方法/ 都/ 可以/ 获得/ 较/ 高/ 的/ 匹配/ 速度/ ,/ 比如/ 文献/ [/ 6/ ]/ 中位/ 并行/ 和/ 字节/ 并行/ 的/ Bit/ -/ ByteAho/ -/ Corasick/ 算法/ 在/ IntelIXP28XX/ 环境/ 中/ ,/ 能够/ 获得/ 5Gb/ // s/ 的/ 匹配/ 吞吐量/ ,/ 文献/ [/ 7/ ]/ 中/ 在/ F/ =/ 250MHz/ ,/ 片/ 内存储器/ 大小/ 是/ 376Kbits/ ,/ 片/ 外存储器/ 频率/ 是/ 250MHz/ 的/ FPGA/ 中/ 可以/ 获得/ 10Gbps/ 的/ 吞吐/ 率/ ./ 3/ 相关/ 定义/ 一棵/ 有/ 根树/ 是/ 一个/ 由/ 单向/ 边/ 连接/ 的/ 节点/ 的/ 集合/ ./ 每条/ 单向/ 边/ 的/ 源/ 节点/ 称为/ 父/ 节点/ ,/ 目标/ 节点/ 称为/ 子/ 节点/ ./ 有/ 一个/ 特殊/ 的/ 节点/ 没有/ 父/ 节点/ ,/ 该/ 结点/ 称为/ 根/ 节点/ ./ 树中/ 除根/ 节点/ 之外/ 的/ 每个/ 节点/ ,/ 都/ 有/ 且/ 仅/ 有/ 一个/ 父/ 节点/ ./ 没有/ 子/ 节点/ 的/ 节点/ 称为/ 叶/ 节点/ ./ 如果/ 定义/ 了/ 字符串/ 集合/ 组成/ 的/ 特征/ 集合/ ,/ 那么/ 精确/ 串/ 匹配/ 的/ 作用/ 就/ 是从/ 文本/ 中/ 找出/ 所有/ 特征/ 出现/ 的/ 位置/ ./ 解决/ 这个/ 问题/ 的/ 最/ 经典/ 的/ 算法/ 是/ 由/ Aho/ 和/ Corasick/ 设计/ 的/ AC/ [/ 2/ ]/ 算法/ ./ 该/ 算法/ 借助/ 有限/ 状态/ 自动机/ ,/ 对/ 文本/ 仅/ 扫描/ 一次/ 就/ 能够/ 完成/ 对/ 文本/ 的/ 特征/ 匹配/ ./ 标准/ 的/ Aho/ -/ Corasick/ 自动机/ 是/ 一个/ 由/ 特征/ 集合/ 中/ 所有/ 特征/ 构成/ 的/ 未经/ 压缩/ 的/ trie/ 树/ ,/ 我们/ 不妨/ 将/ 这棵树/ 的/ 根/ 节点/ 记作/ R/ ./ 对于/ 这棵/ trie/ 树中/ 的/ 任/ 一个/ 节点/ v/ ,/ L/ (/ v/ )/ 被/ 定义/ 为/ 从/ R/ 到达/ 节点/ v/ 的/ 路径/ ./ L/ (/ v/ )/ 代表/ 了/ 特征/ 集合/ 中/ 一个/ 或/ 多个/ 特征/ 的/ 前缀/ ./ 如果/ L/ (/ v/ )/ 是/ 一个/ 完整/ 的/ 特征/ ,/ AC/ 自动/ 机会/ 在/ 节点/ v/ 中/ 加入/ 表示/ 终结状态/ 的/ 信息/ ,/ 表示/ 在/ 该/ 节点/ 可以/ 识别/ 一个/ 特征/ ./ 描述/ AC/ 自动机/ 的/ trie/ 树/ 的/ 跳转/ 信息/ 是/ 通过/ goto/ 函数/ 存储/ 的/ ./ 通常/ AC/ 自动机/ 中/ 的/ 每个/ 状态/ 都/ 有/ 一个/ 失效/ 函数/ ,/ 当/ AC/ 自动机/ 中/ 的/ 状态/ 读入/ 字符/ 后/ 无法/ 跳转/ 到/ 下/ 一个/ 状态/ 时会/ 通过/ 失效/ 函数/ (/ 尽量/ )/ 跳转/ 到/ 一个/ 在/ 树/ 的/ 深度/ 上/ 尽量/ 远离/ R/ 的/ 状态/ 节点/ ,/ 这样/ 可以/ 避免/ 自动机/ 指针/ 的/ 回溯/ 而/ 降低/ 匹配/ 速度/ ./ 本文/ 中/ 我们/ 仅仅/ 保留/ AC/ 自动机/ 中/ 的/ goto/ 函数/ 和/ 终结状态/ 信息/ ,/ 失效/ 函数/ 被/ 省略/ 的/ 原因/ 在/ 文中/ 第四/ 部分/ 有/ 详细/ 的/ 说明/ ./ 本文/ 中/ 使用/ P/ 定义/ 特征/ 集/ ;/ Σ/ 定义/ 为/ 特征/ 集/ 的/ 字符集/ ,/ 和/ ASCII/ 一致/ ;/ strlen/ (/ x/ )/ 定义/ 为/ 字符串/ x/ 的/ 长度/ ./ 需要/ 特别/ 指出/ 的/ 是/ ,/ 本文/ 中/ 特征/ 集中/ 最短/ 特征/ 长度/ 为/ 4/ ./ 为了/ 使得/ 描述/ 更加/ 简洁/ ,/ 我们/ 将/ 本文/ 中/ 使用/ 的/ 自动机/ 定义/ 为块/ 自动机/ 或者/ 块式/ trie/ 自动机/ ./ 块/ 自动机/ 识别/ 的/ 符号/ 为/ 一个/ 长度/ 为/ 16/ 的/ 字符串/ ./ 本文/ 中将/ 这种/ 按照/ 固定/ 长度/ 识别/ 的/ 符号/ 称为/ 特征/ 块/ ,/ 将/ 识别/ 特征/ 块/ 的/ 状态/ 称为/ 块/ 状态/ ./ 为了/ 与/ 块/ 式/ 自动机/ 中/ 的/ 块/ 状态/ 相/ 区别/ ,/ 本文/ 中将/ 经典/ AC/ 自动机/ 称为/ 普通/ 自动机/ 或者/ 字符/ 自动机/ ,/ 普通/ 自动机/ 中/ 识别/ 单一/ 字符/ 的/ 状态/ 称为/ 字符/ 状态/ ./ 在/ 不/ 引起/ 歧义/ 的/ 时候/ 本文/ 中/ 部分/ 段落/ 会/ 直接/ 用/ “/ 状态/ ”/ 表示/ 字符/ 状态/ ,/ 或者/ 直接/ 用/ “/ 状态/ ”/ 表示/ “/ 块/ 状态/ ”/ 、/ “/ 字符/ 状态/ ”/ 都/ 适用/ 的/ 情况/ ./ 关于/ 将/ 特征/ 最短/ 长度/ 以及/ 特征/ 块/ 长度/ 分别/ 设定/ 为/ 4/ 和/ 16/ 的/ 原因/ 请/ 参考/ 本文/ 5.1/ 节中/ 的/ 说明/ ./ 本文/ 将/ 识别/ 的/ 符号/ 记为/ c0c1/ …/ c14c15/ ,/ 相应/ 的/ 块/ 字符集/ 被/ 定义/ 为块/ 自动机/ 中/ 状态/ 节点/ 能/ 识别/ 的/ 符号/ 集合/ ,/ 简记/ 作/ Σ/ block/ ./ 对于/ Aho/ -/ Corasick/ 自动机/ ,/ 其/ 字符集/ 大小/ 为/ |/ Σ/ |/ =/ 256/ ,/ 而块/ 自动机/ 的/ 理论/ 字符集/ 大小/ 为/ |/ Σ/ block/ |/ =/ |/ Σ/ |/ 16/ =/ 25616/ ./ 本文/ 的/ 算法/ 中/ PPage4/ 被/ 分成/ 两个/ 集合/ PL/ =/ {/ p/ |/ strlen/ (/ p/ )/ / 16/ }/ 和/ PS/ =/ {/ p/ |/ strlen/ (/ p/ )/ </ 16/ }/ ./ 显然/ PL/ ∩/ PS/ =/ / ,/ PL/ ∪/ PS/ =/ P/ ./ 在/ 本文/ 中/ 我们/ 分别/ 将/ 来自/ 于/ PL/ 和/ PS/ 的/ 特征/ 称为/ 长/ 特征/ 和/ 短/ 特征/ ./ / p/ ∈/ PL/ ,/ 令/ strlen/ (/ p/ )/ =/ 16k/ +/ t/ ,/ k/ / 1/ ,/ 0/ / t/ / 15/ ,/ c16jc16j/ +/ 1/ …/ c16j/ +/ 14c16j/ +/ 15/ 称为/ p/ 的/ 特征/ 块/ ,/ c16kc16k/ +/ 1/ …/ c16k/ +/ t/ -/ 2c16k/ +/ t/ -/ 1/ 称为/ 特征/ p/ 的/ 尾串/ ./ 4/ 混合/ 自动机/ 算法/ 的/ 设计/ 与/ 分析/ 为了/ 降低/ 匹配/ 自动机/ 对/ 内存/ 的/ 消耗/ ,/ 本文/ 中/ ,/ 将/ 匹配/ 自动机/ 拆/ 分为/ 一个/ 单一/ 的/ 块/ 式/ trie/ 自动机/ 和/ 若干个/ 普通/ trie/ 自动机/ ./ 长/ 特征/ 的/ 特征/ 块/ 被/ 编码/ 到/ 块/ trie/ 自动机/ 中/ ,/ 长/ 特征/ 的/ 尾串/ 和/ 短/ 特征/ 被/ 编码/ 到/ 普通/ trie/ 自动机/ 中/ ./ 如前所述/ ,/ 一个/ 长度/ 为/ strlen/ (/ p0/ )/ =/ 16k/ +/ t/ (/ p0/ )/ 的/ 长/ 特征/ p0/ ,/ 会/ 被/ 分割/ 成/ 若干个/ 不/ 重叠/ 的/ 特征/ 块/ ./ 和/ 普通/ trie/ 构造/ 一样/ ,/ 各个/ 特征/ 块/ 被/ 逐一/ 加入/ 到/ 块/ 式/ 自动机/ 中/ ./ 当/ 最后/ 一个/ 特征/ 块/ c16/ (/ k/ -/ 1/ )/ c16/ (/ k/ -/ 1/ )/ +/ 1/ …/ c16/ (/ k/ -/ 1/ )/ +/ 14c16/ (/ k/ -/ 1/ )/ +/ 15/ 被/ 加入/ 块式/ trie/ 自动机/ 后/ ,/ 自动/ 机会/ 跳/ 到/ 一个/ 已有/ 的/ (/ 或者/ 新建/ 的/ )/ 块/ 状态/ ./ 我们/ 不妨/ 把/ 它/ 称作/ statex/ ./ 由于/ 特征/ p0/ 有/ 一个/ 长度/ 为/ t/ (/ p0/ )/ 的/ 尾串/ tail0/ =/ c16/ (/ k/ -/ 1/ )/ c16/ (/ k/ -/ 1/ )/ +/ 1/ …/ c16/ (/ k/ -/ 1/ )/ +/ t/ (/ p0/ )/ -/ 2c16/ (/ k/ -/ 1/ )/ +/ t/ (/ p0/ )/ -/ 1/ ,/ 本文/ 会/ 在/ 块/ 状态/ statex/ 后/ 附加/ 一个/ 普通/ 的/ trie/ 自动机/ trie/ (/ statex/ )/ ,/ 尾串/ tail0/ 中/ 的/ 各/ 字符/ 会以/ AVL/ 的/ 形式/ 加入/ 块/ trie/ (/ statex/ )/ 中/ ./ 类似/ 于/ 普通/ trie/ 自动机/ ,/ 如果/ 特征/ 集/ P/ 中/ 存在/ 长度/ 为/ strlen/ (/ p0/ )/ =/ 16k/ +/ t/ (/ p0/ )/ ,/ 尾串/ 为/ tail0/ =/ c16/ (/ k/ -/ 1/ )/ c16/ (/ k/ -/ 1/ )/ +/ 1/ …/ c16/ (/ k/ -/ 1/ )/ +/ t/ (/ p0/ )/ -/ 2c16/ (/ k/ -/ 1/ )/ +/ t/ (/ p0/ )/ -/ 1/ 的/ 长/ 特征/ p0/ ,/ 且/ p0/ 和/ p0/ 共享/ 长度/ 为/ 16k/ 的/ 前缀/ ,/ 那么/ 特征/ p0/ 和/ p0/ 会/ 共享/ 块/ 自动机/ 中/ 从/ 根/ 节点/ 到/ 节点/ statex/ 图/ 1SLSPM/ 自动机/ 中/ 的/ 块/ 状态/ 和/ 字符/ 状态/ 的/ 路径/ 中/ 的/ 所有/ 块/ 状态/ 节点/ ,/ 二者/ 的/ 尾串/ tail0/ 和/ tail0/ 也/ 将/ 共享/ trie/ (/ statex/ )/ ./ 图/ 1/ 是/ 构造/ SLSPM/ 自动机/ 的/ 一个/ 例子/ ./ 由于/ 篇幅/ 原因/ ,/ 原始/ 自动机/ 中/ 没有/ 标出/ 相应/ 的/ 失效/ 函数/ 跳转/ 信息/ ,/ 并且/ 没有/ 对/ 自动机/ 中/ 的/ 状态/ 进行/ 编号/ ./ 假定/ 普通/ 的/ trie/ 自动机/ 在/ 匹配/ 文本/ t0t1/ …/ tn/ -/ 2tn/ -/ 1/ 的/ 过程/ 中/ ,/ 读入/ 字符/ tx/ 后/ ,/ 0/ / x/ </ n/ -/ 1/ ,/ 会/ 跳转/ 到/ 一个/ 状态/ states/ ./ 当/ 处理/ 下/ 一个/ 字符/ tx/ +/ 1/ 时/ ,/ 匹配/ 算法/ 会/ 在/ 当前/ 状态/ states/ 能够/ 接收/ 的/ 字符/ 集合/ 里/ 搜索/ tx/ +/ 1/ ,/ 并/ 根据/ tx/ +/ 1/ 的/ 存在/ 与否/ 确定/ 如何/ 进行/ 下/ 一步/ 匹配/ ./ 本文/ 将/ 这个/ 搜索/ 过程/ 称作/ 确认/ 检查/ ./ 从/ 理论/ 上/ 我们/ 知道/ ,/ IDS/ 软件/ 中/ 最/ 广泛/ 使用/ 的/ AC/ 算法/ 的/ 性能/ 仅/ 在/ 采用/ 完全/ 存储/ 方式/ [/ 1/ ]/ 下才/ 能够/ 获得/ 线性/ 处理速度/ (/ O/ (/ n/ )/ )/ ,/ 之所以/ 能够/ 获得/ 这种/ 线性/ 速度/ 是/ 由于/ 在/ 进行/ 确认/ 检查/ 时/ 可以/ 直接/ 查寻/ 当前/ 状态/ 对应/ 的/ 跳转/ 表/ ,/ 其/ 处理/ 时间/ 为/ O/ (/ 1/ )/ ,/ 和/ 当前/ 状态/ 能/ 识别/ 的/ 字符/ 的/ 集合/ 的/ 大小/ 无关/ ./ 如果/ 采用/ 压缩/ 存储/ 方式/ ,/ 在/ 进行/ 确认/ 检查/ 时势/ 必要/ 将/ 当前/ 状态/ 读入/ 的/ 符号/ 与/ 该/ 状态/ 能/ 识别/ 的/ 所有/ 符号/ 进行/ 逐一/ 比/ 对/ (/ n/ |/ Σ/ |/ )/ ,/ 或者/ 使用/ 树型/ 结构/ 对/ 该/ 状态/ 识别/ 的/ 符号/ 集合/ 进行/ 扫描/ 但是/ 仍然/ 需要/ O/ (/ nlog/ |/ Σ/ |/ )/ 的/ 处理/ 时间/ ./ 过程/ 1/ ./ BlockGoto/ (/ len16str/ ,/ state/ )/ ./ 输入/ :/ 长度/ 为/ 16/ 的/ 子串/ len16str/ ,/ 块/ 状态/ state/ 输出/ :/ 块/ 自动机/ 的/ 目标/ 块/ 状态/ state1/ ./ index/ ←/ hash/ _/ compute/ (/ len16str/ )/ 2/ ./ 在/ hash/ _/ table/ [/ index/ ]/ 中/ 确定/ (/ len16str/ ,/ state/ )/ 的/ 跳转/ 3/ ./ IF/ 没有/ 跳转/ 信息/ THEN4/ ./ Goto/ (/ len16str/ ,/ state/ )/ ←/ max/ _/ state5/ ./ max/ _/ state/ ++/ 6/ ./ ELSEPage57/ ./ RETURN/ 目标/ 块/ 状态/ state8/ ./ ENDIF/ 过程/ 2/ ./ TailGoto/ (/ tailstr/ ,/ state/ )/ ./ 输入/ :/ 长度/ 小于/ 16/ 的/ 子串/ tailstr/ ,/ 块/ 自动机/ 中/ 的/ 一个/ 输出/ :/ 尾部/ 自动机/ 的/ 深度/ strlen/ (/ tailstr/ )/ 1/ ./ FOReachi/ ∈/ [/ 1/ ,/ len/ ]/ DO2/ ./ ch/ ←/ tailstr/ [/ i/ ]/ 3/ ./ 添加/ ch/ 到/ trie/ 树中/ 4/ ./ ENDFOR5/ ./ 在/ trie/ 树中/ 为/ tailstr/ 添加/ 识别/ 信息/ 过程/ 3/ ./ JumpStep/ (/ len4str/ )/ ./ 输入/ :/ 长度/ 为/ 4/ 的/ 子串/ len4str/ 输出/ :/ jumpstep1/ ./ FOReachi/ ∈/ [/ 0/ ,/ 2/ ]/ DO2/ ./ ch0/ ←/ len4str/ [/ i/ ]/ 3/ ./ ch1/ ←/ len4str/ [/ i/ +/ 1/ ]/ 4/ ./ j/ ←/ 2/ -/ i5/ ./ IFj/ </ jump/ [/ ch0/ ]/ [/ ch1/ ]/ ./ stepTHEN6/ ./ jump/ [/ ch0/ ]/ [/ ch1/ ]/ ./ step/ ←/ j7/ ./ ENDIF8/ ./ ENDFOR/ 失效/ 函数/ 在/ 普通/ AC/ 算法/ 中/ 起到/ 了/ 避免/ 回溯/ 的/ 作用/ ./ 回溯/ 是/ 指当/ 自动机/ 指针/ 所指/ 的/ 当前/ 文本/ 中/ 的/ 字符/ 无法/ 被/ 当前/ 状态/ 识别/ 时/ ,/ 将/ 自动机/ 指针/ 移动/ 到/ 最近/ 一次/ 从/ 0/ 状态/ 开始/ 比较/ 的/ 字符/ 位置/ 的/ 后/ 一个/ 字符/ 的/ 位置/ ./ 失效/ 函数/ 的/ 存在/ 加速/ 了/ AC/ 算法/ 的/ 匹配/ 速度/ ./ 使用/ 了/ 失效/ 函数/ 的/ 匹配/ 算法/ 其/ 最快/ 匹配/ 时间/ 为/ O/ (/ n/ +/ nocc/ )/ ./ 如果/ 想/ 达到/ O/ (/ n/ )/ 的/ 匹配/ 时间/ ,/ 需要/ 使用/ 当前/ 状态/ 的/ 失效/ 状态/ 的/ 所有/ 跳转/ 对/ 当前/ 状态/ 无法/ 识别/ 的/ 字符/ 补充/ 跳转/ 信息/ ./ 形式化/ 的/ 描述/ :/ 令/ θ/ 为/ 状态/ 0/ 的/ 失效/ 函数/ ,/ 对于/ 状态/ 0/ ,/ 如果/ δ/ (/ 0/ ,/ σ/ )/ =/ θ/ ,/ 置/ δ/ (/ 0/ ,/ σ/ )/ =/ 0/ ;/ 对于/ 非/ 0/ 状态/ Current/ ,/ 如果/ δ/ (/ Current/ ,/ σ/ )/ =/ θ/ ,/ 置/ δ/ (/ Current/ ,/ σ/ )/ =/ δ/ (/ failure/ (/ Current/ )/ ,/ σ/ )/ ./ 这种/ 根据/ 失效/ 函数/ 对/ 无法/ 跳转/ 字符/ 再次/ 填充/ 的/ 方法/ 被/ 称为/ 高级/ 的/ AC/ 算法/ [/ 1/ ]/ ./ 如果/ 我们/ 采用/ 高级/ AC/ 算法/ 的/ 方式/ 完全/ 填充/ 块式/ 匹配/ 自动机/ 中/ 的/ 块/ 状态/ 的/ 跳转/ 信息/ 我们/ 不难/ 得出/ 如下/ 推断/ :/ (/ 1/ )/ 完全/ 填充/ 会/ 使得/ 构造/ 过程/ 过于/ 复杂/ ,/ 且/ 完全/ 填充/ 后/ 的/ 块/ 式/ 自动机/ 的/ 内存/ 占/ 用量/ 理论/ 上将/ 是/ 计算机系统/ 无法/ 容忍/ 的/ ;/ (/ 2/ )/ 仅/ 将/ 当前/ 块/ 状态/ 的/ 失效/ 状态/ 增加/ 至/ 当前/ 块/ 状态/ 对/ 提升/ 块式/ 自动机/ 匹配/ 速度/ 的/ 作用/ 会/ 相当/ 有限/ ./ 由于/ 这个/ 推断/ 我们/ 在/ 本文/ 中/ 提出/ 的/ 混合/ 自动机/ 中未/ 加入/ 失效/ 函数/ ./ 4.1/ 跳转/ 信息/ 中/ 的/ 映射/ 关系/ 对于/ 块式/ 自动机/ ,/ 存储/ 块/ 状态/ 接受/ 的/ 符号/ 集合/ 时会/ 存在/ 如下/ 问题/ :/ (/ 1/ )/ 每个/ 块/ 状态/ 在/ 理论/ 上/ 都/ 有/ |/ Σ/ block/ |/ =/ 25616/ 个/ 输入/ 符号/ 可以/ 被/ 匹配/ ,/ 由于/ 这个/ 理论/ 符号/ 跳转/ 表/ 需要/ 巨大/ 的/ 存储空间/ ,/ 我们/ 仅能/ 为/ 块/ 状态/ 存储/ 必要/ 的/ 跳转/ 信息/ (/ 压缩/ 的/ 存储/ 方法/ )/ ;/ (/ 2/ )/ 即便/ 采用/ 了/ 压缩/ 的/ 方式/ 存储/ 块/ 状态/ 识别/ 的/ 信息/ ,/ 仍然/ 可能/ 存在/ 某些/ 块/ 状态/ 会/ 识别/ 多个/ 特征/ 块/ ./ 以上/ 两点/ 都/ 会/ 降低/ 块式/ 自动机/ 的/ 匹配/ 效率/ ./ 在/ 块/ 自动机/ 环境/ 下/ ,/ 某块/ 状态/ 识别/ 的/ 特征/ 块/ 的/ 数目/ 记为/ Ns/ -/ b/ ,/ 某一/ 特定/ 特征/ 块/ 能够/ 被/ 多少/ 个块/ 状态/ 所/ 识别/ 记作/ Nb/ -/ s/ ./ 由于/ 匹配/ 长度/ 为/ 16/ ,/ Nb/ -/ s/ 相对/ 于/ Ns/ -/ b/ 会/ 比较/ 小/ ;/ 在/ 同一个/ 块/ 状态/ 识别/ 的/ 的/ 特征/ 块/ 集合/ 中/ 搜索/ 某/ 一个/ 特征/ 块/ ,/ 会/ 比/ 在/ 共享/ 同一个/ 特征/ 块/ 的/ 块/ 状态/ 集合/ 中/ 搜索/ 一个/ 块/ 状态/ 会/ 消耗/ 更/ 多/ 的/ 处理/ 时间/ ./ 由此/ 本文/ 在/ 进行/ 匹配/ 时/ ,/ 首先/ 将/ 文本/ 块/ 和/ 特征/ 块/ 进行/ 比较/ ,/ 如果/ 文本/ 块/ 能够/ 和/ 某/ 一/ 特征/ 块/ 相匹配/ 再/ 将/ 当前/ 块/ 状态/ 和/ 接受/ 当前/ 特征/ 块/ 的/ 所有/ 块/ 状态/ 进行/ 比较/ ./ 具体/ 地/ ,/ 特征/ 块/ 和/ 块/ 状态/ 的/ 对应/ 关系/ 如下/ :/ Map/ (/ src/ _/ state/ ,/ symbol/ _/ list/ )/ =/ dst/ _/ state/ (/ 1/ )/ Map/ (/ symbol/ ,/ src/ _/ state/ _/ list/ )/ =/ dst/ _/ state/ (/ 2/ )/ 式/ (/ 1/ )/ 中/ src/ _/ state/ 代表/ 块/ trie/ 中/ 的/ 某个/ 块/ 状态/ ,/ symbol/ _/ list/ 代表/ 该块/ 状态/ 识别/ 的/ 符号/ (/ 特征/ 块/ )/ 集合/ ./ 式/ (/ 2/ )/ 中/ symbol/ 代表/ 块/ trie/ 中/ 任何/ 一个/ 块/ 状态/ 识别/ 的/ 某个/ 符号/ ,/ 所有/ 能够/ 识别/ 符号/ symbol/ 的/ 块/ 状态/ 就/ 构成/ 了/ 式/ (/ 2/ )/ 中/ 的/ src/ _/ state/ _/ list/ ./ 进行/ 文本/ 匹配/ 时/ ,/ 首先/ 对/ 当前/ 文本/ 块/ 进行/ 散列/ 计算/ ,/ 检查/ 相应/ 的/ 散列值/ 对应/ 的/ 散/ 列表/ 入口处/ 是否/ 含有/ 该/ 表项/ 的/ 特征/ 块/ 集合/ ,/ 如果/ 确实/ 存在/ ,/ 再/ 将/ 当前/ 文本/ 块/ 和/ 集合/ 中/ 的/ 每个/ 特征/ 块/ 逐一/ 比较/ ./ 仅/ 在/ 存在/ 和/ 文本/ 块/ 相同/ 的/ 特征/ 块/ 的/ 情况/ 下/ ,/ 才/ 将/ 当前/ 块/ 状态/ 和/ 特征/ 块/ 对应/ 的/ 块/ 状态/ 集合/ 中/ 的/ 各个/ 块/ 状态/ 做/ 进一步/ 比/ 对/ ./ 算法/ 1/ ./ BC/ _/ Machine/ (/ pat/ _/ set/ )/ ./ 输入/ :/ 特征/ 集/ pat/ _/ set/ 输出/ :/ 输出/ blocktrie/ 和/ tailtries1/ ./ FORi/ ∈/ [/ 0/ ,/ 255/ ]/ DO2/ ./ FORj/ ∈/ [/ 0/ ,/ 255/ ]/ DO3/ ./ jump/ [/ i/ ]/ [/ j/ ]/ ./ step/ ←/ 34/ ./ jump/ [/ i/ ]/ [/ j/ ]/ ./ type/ ←/ 05/ ./ ENDFOR6/ ./ ENDFOR7/ ./ FOReachpat/ ∈/ pat/ _/ setDO8/ ./ pos/ ←/ pat9/ ./ len/ ←/ strlen/ (/ pat/ )/ 10/ ./ state/ ←/ 011/ ./ IFlen/ / 16THENPage612/ ./ jump/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ type/ |/ =/ 0x0213/ ./ ELSE14/ ./ jump/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ type/ |/ =/ 0x0115/ ./ ENDIF16/ ./ JumpStep/ (/ pos/ )/ 17/ ./ WHILElen/ >/ 0DO18/ ./ IFlen/ / 16THEN19/ ./ state/ ←/ BlockGoto/ (/ pos/ ,/ state/ )/ 20/ ./ len/ ←/ len/ -/ 1621/ ./ pos/ ←/ pos/ +/ 1622/ ./ IFlen/ =/ =/ 0THEN23/ ./ 设置/ 成功/ 匹配/ 信息/ 24/ ./ ENDIF25/ ./ ELSE26/ ./ TailGoto/ (/ pos/ ,/ state/ )/ 27/ ./ len/ ←/ 028/ ./ ENDIF29/ ./ ENDWHILE30/ ./ ENDFOR/ 本文/ 除了/ 通过/ 利用/ 散列/ 方法/ 来/ 降低/ 匹配/ 时间/ ,/ 还/ 利用/ 了/ 类似/ WM/ 算法/ 中/ 的/ SHIFT/ 表对/ 文本/ 块/ 进行/ 过滤/ ./ 本文/ 假设/ 记录/ SHIFT/ 表/ 的/ 最/ 短文/ 本串/ 长度/ 为/ m/ =/ 4/ ,/ B/ =/ 2.4/ ./ 2/ 利用/ 犛/ 犎/ 犐/ 犉/ 犜/ 表/ 降低/ 匹配/ 时间/ 对于/ SLSPM/ 自动机/ 中/ 的/ 块/ 状态/ ,/ 可以/ 将/ 其/ 后续/ 特征/ 块/ (/ 特征/ 尾串/ )/ 的/ 确认/ 验证/ 分为/ 4/ 类/ :/ (/ 1/ )/ 进行/ 尾串/ 验证/ ;/ (/ 2/ )/ 进行/ 特征/ 块/ 验证/ ;/ (/ 3/ )/ 同时/ 进行/ 特征/ 块/ 验证/ 和/ 尾串/ 验证/ ;/ (/ 4/ )/ 不/ 需要/ 任何/ 类型/ 验证/ ./ 如果/ 能够/ 根据/ 文本/ 预先判断/ ,/ 确定/ 确认/ 验证/ 的/ 类型/ 就/ 可以/ 降低/ 不必要/ 的/ 处理/ 时间/ ./ 为此/ ,/ 我们/ 修改/ 了/ SHIFT/ 表/ 的/ 数据结构/ ,/ 在/ 记录/ 文本/ 移动信息/ 的/ 同时/ ,/ 记录/ 相应/ 文本/ 块/ 的/ 确认/ 验证/ 类型/ ./ 为了/ 描述/ 方便/ ,/ 本文/ 将/ 这个/ 确认/ 验证/ 类型/ 记为/ B/ -/ characters/ -/ type/ :/ charsB/ ./ 由于/ 只有/ 4/ 种/ 验证/ 类型/ ,/ charsB/ 只/ 需要/ 占用/ SHIFT/ 表项/ 的/ 2/ 个/ 比特/ 位/ ./ 4.3/ SLSPM/ 混合/ 自动机/ 的/ 构造/ 构造/ SLSPM/ 混合/ 自动机/ 的/ 过程/ 主要/ 完成/ 两个/ 任务/ :/ 构造/ 字符/ 跳跃/ 信息/ 表/ ,/ 包括/ 长度/ 为/ B/ =/ 2/ 的/ 双/ 字符/ 跳跃/ 信息/ 和/ 针对/ 这/ 两个/ 字符/ 的/ B/ -/ characters/ -/ type/ 信息/ ;/ 构造/ 自动机/ 状态/ 跳转/ 信息/ ,/ 包括/ 块式/ 状态/ 跳转/ 和/ 字符/ 状态/ 跳转/ ./ 块式/ 自动机/ 和/ 普通/ 自动机/ 的/ 构造方法/ 在/ 本文/ 前部/ 已经/ 有所/ 介绍/ ,/ 这里/ 不再/ 赘述/ ./ 同样/ ,/ 标准/ SHIFT/ 表/ 的/ 构造/ 和/ WM/ 算法/ 的/ SHIFT/ 表/ 一致/ ,/ 也/ 不再/ 做/ 额外/ 说明/ ./ 这/ 小节/ 仅/ 对/ 如何/ 对/ 特征/ 块/ 进行/ 散列/ 和/ 构造/ B/ -/ characters/ -/ type/ :/ charsB/ 的/ 方法/ 进行/ 说明/ ./ length/ )/ ./ 过程/ 4/ ./ CharacterMatch/ (/ shortstr/ ,/ state/ _/ b/ ,/ 输入/ :/ 长度/ 小于/ 16/ 的/ 子串/ shortstr/ ,/ 块/ 自动机/ 的/ 一个/ 状/ 输出/ :/ 匹配/ 是否/ 成功/ 的/ 信息/ (/ 匹配/ 的/ 特征/ 号码/ id/ )/ 1/ ./ automaton/ ←/ 块/ 状态/ state/ _/ b/ 后/ 的/ 字符/ 自动机/ 的/ 根/ 节点/ 2/ ./ 在/ automaton/ 中/ 对/ shortstr/ 进行/ 匹配/ 过程/ 5/ ./ BlockMatch/ (/ len16str/ ,/ state/ )/ ./ 输入/ :/ 长度/ 为/ 16/ 的/ 子串/ len16str/ ,/ 块/ 状态/ state/ 输出/ :/ 匹配/ 是否/ 成功/ 的/ 信息/ (/ 匹配/ 的/ 特征/ 号码/ id/ )/ 1/ ./ ht/ _/ index/ ←/ hash/ _/ compute/ (/ len16str/ )/ 2/ ./ IFhash/ _/ table/ [/ ht/ _/ index/ ]/ 中/ 可以/ 找到/ 跳转/ 信息/ 3/ ./ len16str/ _/ list/ ←/ hash/ _/ table/ [/ ht/ _/ index/ ]/ ./ str/ _/ list4/ ./ FOReachlen16str/ _/ goto/ ∈/ len16str/ _/ listDO5/ ./ IFlen16str/ _/ goto/ ./ str/ =/ =/ len16strTHEN6/ ./ FOReachgoto/ _/ info/ ∈/ len16str/ _/ goto/ ./ goto/ _/ list7/ ./ IFgoto/ _/ info/ ./ src/ _/ state/ =/ =/ stateTHEN8/ ./ IF/ 匹配/ 到/ 特征/ THEN9/ ./ 10/ ./ ENDIF11/ ./ RETURNgoto/ _/ info/ ./ dst/ _/ state12/ ./ ENDIF13/ ./ ENDFOR14/ ./ ENDIF15/ ./ ENDFOR16/ ./ ELSE17/ ./ RETURN018/ ./ ENDIF/ 本文/ 中/ ,/ 我们/ 对/ 特征/ 集/ P/ 的/ 所有/ 特征/ 块/ 做/ 统一/ 的/ 散列/ ,/ 且/ 散列/ 计算/ 的/ 对象/ 仅为/ 特征/ 块/ 本身/ ./ 在/ 具体/ 构造/ 块/ 自动机/ 之前/ ,/ 匹配/ 系统/ 会/ 预先/ 将/ 所有/ 特征/ 块/ 进行/ 散列/ 计算/ ,/ 设/ 当前/ 正在/ 处理/ 的/ 特征/ 块/ 为/ Current/ -/ Symbolblock/ ,/ 其散/ 列值/ 为/ h/ =/ hash/ (/ CurrentSymbolblock/ )/ ,/ 算法/ 会/ 将/ 代表/ 特征/ 块/ CurrentSymbolblock/ 的/ 序号/ 加入/ 当前/ 散/ 列表/ 项/ HASH/ _/ TABLE/ [/ h/ ]/ 后/ 的/ 特征/ 块/ 集合/ 中/ ./ 在/ 构造/ 块/ 自动机/ 时/ ,/ 设/ 当前/ 块/ 状态/ 为/ CurrentStateblock/ ,/ 读入/ 的/ 特征/ 块/ 为/ CurrentSymbolblock/ ./ 如果/ 在/ HASH/ _/ TABLE/ [/ h/ ]/ 对应/ 的/ 特征/ 块/ 集合/ 中/ 不/ 存在/ 对应/ 于/ (/ CurrentSymbolblock/ ,/ CurrentStateblock/ )/ 的/ 跳转/ 信息/ ,/ 算法/ 会为/ HASH/ _/ TABLE/ [/ h/ ]/ 中/ CurrentSymbolblock/ 添加/ 相应/ 的/ 跳转/ 信息/ ./ 构造/ 跳跃/ 类型/ 时/ ,/ 对于/ 长/ 特征/ ,/ 算法/ 取出/ 每个/ 特征/ 块/ CurrentSymbolblock/ 中/ 长度/ 为/ m/ 的/ 前缀/ prefix/ ,/ 和/ 该/ 前缀/ prefix/ 中/ 最/ Page7/ 后/ B/ 个/ 字符串/ prefix/ [/ 2/ ]/ prefix/ [/ 3/ ]/ ,/ 然后/ 设置/ SHIFT/ [/ prefix/ [/ 2/ ]/ ]/ [/ prefix/ [/ 3/ ]/ ]/ |/ =/ 10/ ;/ 对于/ 短/ 特征/ ,/ 同样/ 提取/ 当前/ 特征/ 长度/ 为/ m/ 的/ 前缀/ ,/ 取出/ 其/ 最后/ B/ 个/ 字符串/ prefix/ [/ 2/ ]/ prefix/ [/ 3/ ]/ ,/ 设置/ SHIFT/ [/ prefix/ [/ 2/ ]/ ]/ [/ prefix/ [/ 3/ ]/ ]/ |/ =/ 01/ ./ 算法/ 2/ ./ Match/ (/ text/ ,/ len/ )/ ./ 输入/ :/ 待/ 匹配/ 的/ 文本/ text/ ,/ 文本/ text/ 的/ 长度/ len/ 输出/ :/ 匹配/ 是否/ 成功/ 的/ 信息/ (/ 匹配/ 的/ 特征/ 号码/ id/ )/ 1/ ./ len/ ←/ strlen/ (/ text/ )/ 2/ ./ pos/ ←/ text3/ ./ state/ ←/ 04/ ./ WHILElen/ / 16DO5/ ./ IFSHIFT/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ step/ =/ =/ 0THEN6/ ./ 依据/ SHIFT/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ type/ 确定/ 调用/ 7/ ./ IF/ 匹配/ 到/ 特征/ THEN8/ ./ RETURN/ 被/ 匹配/ 到/ 的/ 特征/ 的/ id9/ ./ ENDIF10/ ./ pos/ ←/ pos/ +/ 111/ ./ len/ ←/ len/ -/ 112/ ./ ELSE13/ ./ pos/ ←/ pos/ +/ SHIFT/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ step14/ ./ len/ ←/ len/ -/ SHIFT/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ step15/ ./ ENDIF16/ ./ ENDWHILE17/ ./ WHILElen/ / 4DO18/ ./ IF/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ step/ =/ =/ 0THEN19/ ./ CharacterMatch/ (/ pos/ ,/ len/ ,/ state/ )/ 20/ ./ IF/ 匹配/ 到/ 特征/ THEN21/ ./ RETURN/ 被/ 匹配/ 到/ 的/ 特征/ 的/ id22/ ./ ENDIF23/ ./ pos/ ←/ pos/ +/ 124/ ./ len/ ←/ len/ -/ 125/ ./ ELSE26/ ./ pos/ ←/ pos/ +/ SHIFT/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ step27/ ./ len/ ←/ len/ -/ SHIFT/ [/ pos/ [/ 2/ ]/ ]/ [/ pos/ [/ 3/ ]/ ]/ ./ step28/ ./ ENDIF29/ ./ ENDWHILE4/ ./ 4/ 用/ SLSPM/ 混合/ 自动机/ 匹配/ 文本/ 匹配/ 文本/ 时/ ,/ 算法/ 根据/ 当前/ 文本/ 串中/ 剩余/ 文本/ 的/ 长度/ 决定/ 采用/ 哪/ 种/ 匹配/ 方式/ ,/ 相应/ 的/ 匹配/ 过程/ 称为/ BlockMatch/ 和/ CharacterMatch/ ./ 当/ 剩余/ 文本/ 长度/ 不/ 小于/ 16/ 时/ ,/ BlockMatch/ 过程/ 依据/ SHIFT/ [/ txt/ [/ 2/ ]/ txt/ [/ 3/ ]/ ]/ 中/ 预先/ 存储/ 的/ 信息/ 来/ 决定/ 文本/ 的/ 具体/ 匹配/ 方式/ ./ 仅当/ SHIFT/ [/ txt/ [/ 2/ ]/ txt/ [/ 3/ ]/ ]/ ./ step/ 为/ 0/ 时/ 算法/ 才/ 会/ 按照/ B/ -/ characters/ -/ type/ :/ SHIFT/ [/ txt/ [/ 2/ ]/ txt/ [/ 3/ ]/ ]/ ./ type/ 指定/ 的/ 类型/ 选择/ 相应/ 类型/ 的/ 自动机/ 进行/ 匹配/ ./ 4.5/ 算法/ 时间/ 复杂度/ 分析/ 假定/ 待/ 匹配/ 文本/ 为/ text/ ,/ 其/ 长度/ 为/ strlen/ (/ text/ )/ =/ 16k/ +/ q/ ,/ k/ / 1/ ,/ 4/ / q/ </ 16/ ./ 由于/ 匹配/ 自动机/ 中/ 不/ 含有/ 失效/ 函数/ ,/ 每次/ 匹配/ 探测/ 失败/ 后/ 匹配/ 指针/ 会/ 移动/ 到/ 上次/ 文本/ 指针/ 字符/ 位置/ (/ ptr/ )/ 的/ 下/ 一个/ 位置/ (/ ptr/ +/ 1/ )/ ./ 因此/ 对于/ 文本/ text/ ,/ 其/ 最大/ 探测/ 次数/ 为/ 16/ (/ k/ -/ 1/ )/ +/ q/ ./ 以下/ 讨论/ 均/ 指/ 单一/ 一次/ 探测/ 0/ / i/ </ 16/ (/ k/ -/ 1/ )/ +/ q/ 内/ 的/ 情况/ ./ 由于/ 单一/ 一次/ 探测/ 中/ 字符/ 指针/ 的/ 移动/ 都/ 是/ 以/ 16/ 为/ 一个/ 单位/ ,/ 文本/ 的/ 长度/ 可以/ 假设/ 为/ l/ =/ 16b/ +/ d/ ,/ 其中/ b/ / 1/ ,/ 4/ / d/ </ 16/ ./ 为了/ 理解/ 一次/ 探测/ 中/ 的/ 复杂度/ ,/ 需要/ 对/ 如下/ 问题/ 进行/ 说明/ :/ (/ 1/ )/ 在/ 每次/ 确认/ 验证/ 过程/ 之前/ 需要/ 对/ 文本/ 块/ 进行/ 散列/ 计算/ ,/ 仅/ 当散/ 列表/ 对应/ 表项/ 入口处/ 含有/ 可/ 供/ 比较/ 的/ 特征/ 块/ 时/ 才/ 会/ 进行/ 后续/ 验证/ 动作/ ,/ 因此/ 验证/ 过程/ 发生/ 的/ 频率/ 实际上/ 依赖于/ 文本/ 经散/ 列后/ 在/ 相应/ 散/ 列表/ 入口处/ 能够/ 找到/ 非空/ 特征/ 块/ 集合/ 的/ 概率/ ,/ 我们/ 将/ 这个/ 概率/ 设定/ 为/ p1/ ,/ 且/ 此/ 过程/ 记作/ hashProcess1/ ;/ (/ 2/ )/ 仅当/ 获得/ 了/ 一个/ 合法/ 的/ 特征/ 块/ 的/ 前提/ 下/ ,/ 才/ 会/ 进行/ 字符/ 自动机/ 的/ 确认/ 验证/ 过程/ ,/ 该/ 过程/ 记作/ VerifyChar1/ ;/ (/ 3/ )/ 仅/ 在/ 当前/ 文本/ 块/ 经过/ 确认/ 验证/ 是/ 一个/ 合法/ 的/ 特征/ 块/ ,/ 且/ 当前/ 块/ 状态/ 和/ 当前/ 特征/ 块/ 对应/ 块/ 状态/ 中/ 的/ 某个/ 状态/ 一致/ 时/ ,/ 才/ 会/ 将/ 指针/ 后移/ 16/ 个字符/ 的/ 单位/ ,/ 并/ 进行/ 下/ 一个/ 文本/ 块/ 的/ 散列/ 计算/ ,/ 这个/ 新/ 的/ 散列/ 过程/ 记作/ hashProcess2/ ,/ 发生/ 事件/ hashProcess2/ 的/ 概率/ 设为/ p2/ ./ 由于/ 实际/ 网络/ 包中/ 能够/ 成功/ 匹配/ 特征/ 的/ 概率/ 会/ 相当/ 小/ ,/ 且/ 散列/ 函数/ 会/ 过滤/ 掉/ 绝大部分/ 的/ 待/ 验证/ 文本/ ,/ 我们/ 可以/ 假设/ 过程/ hashProcess1/ 中/ 获得/ 合法/ 散/ 列表/ 项/ 的/ 概率/ p1/ 会/ 非常/ 小/ ./ 由此/ 我们/ 可以/ 进一步/ 假设/ 新/ 文本/ 块/ 散列/ 计算/ 过程/ hashProcess2/ 发生/ 的/ 概率/ (/ 或者说/ 是/ 文本/ 块/ 验证/ 的/ 概率/ )/ p2/ 会/ 更/ 小/ ./ 由于/ 几乎/ 不会/ 发生/ 事件/ hashProcess2/ ,/ 那么/ 针对/ 事件/ hashProcess2/ 的/ 字符/ 自动机/ 验证/ 确认/ 过程/ 也/ 就/ 几乎/ 不会/ 发生/ ./ 由此/ 我们/ 可以/ 得知/ 通常/ 平均/ 情况/ 下/ ,/ 对于/ 长度/ 为/ l/ =/ 16b/ +/ d/ 的/ 文本/ 的/ 文本/ 比较/ 次数/ 为/ 16g/ +/ 15log2/ |/ Σ/ |/ ./ 其中/ ,/ g/ 代表/ 一个/ 散/ 列表/ 项中/ 含有/ 的/ 特征/ 块/ 的/ 个数/ ,/ 15log2/ |/ Σ/ |/ 代表/ 采用/ 二元/ 树对/ 当前/ 文本/ 块/ 中前/ 15/ 个字符/ 进行/ 字符/ 自动机/ 验证/ 匹配/ 的/ 字符/ 比较/ 次数/ ./ 综上所述/ ,/ BlockMatch/ 中/ 的/ 16/ (/ k/ -/ 1/ )/ +/ q/ 次/ 探测/ 中/ ,/ 共/ 进行/ 了/ Time/ (/ A/ )/ =/ Σ/ 16/ (/ k/ -/ 1/ )/ +/ q15log2/ |/ Σ/ |/ )/ =/ (/ n/ -/ 16/ )/ (/ 16g/ +/ 15log2/ |/ Σ/ |/ )/ 次/ 字符/ 比较/ ./ 如果/ 散列/ 函数/ 选取/ 得当/ ,/ 那么/ g/ 将/ 很小/ ,/ 可以/ 近似/ 得到/ Time/ (/ A/ )/ ≈/ O/ (/ n/ )/ ./ 当/ 剩余/ 文本/ 长度/ 小于/ 16/ 时/ ,/ CharacterMatch/ 过程/ 最/ 多/ 处理/ 文本/ text/ 的/ 最后/ q/ 个字符/ ./ 类似/ 于/ Page8BlockMatch/ 过程/ 中/ 存在/ 16/ (/ k/ -/ 1/ )/ +/ q/ 次/ 探测/ ,/ CharacterMatch/ 过程/ 最/ 多/ 存在/ q/ -/ 3/ 次/ 探测/ ./ 对于/ 最后/ q/ 个字符/ ,/ 任意/ 一次/ 起/ 始于/ 第/ i/ 个字符/ 位置/ 的/ 探测/ 过程/ ,/ 0/ / i/ </ q/ -/ 3/ ,/ 字符/ 比较/ 次数/ 最多为/ q/ -/ i/ ./ Time/ (/ B/ )/ =/ Σ/ q/ -/ 4log2/ |/ Σ/ |/ // 2/ ./ 由/ 以上/ 两/ 部分/ 分析/ 可知/ SLSPM/ 匹配/ 算法/ 的/ 总/ 处理/ 时间/ 为/ Time/ (/ A/ )/ +/ Time/ (/ B/ )/ =/ (/ n/ -/ 16/ )/ (/ 16/ +/ 15log2/ |/ Σ/ |/ )/ +/ (/ q/ -/ 3/ )/ (/ q/ +/ 2/ )/ log2/ |/ Σ/ |/ // 2/ ./ 需要/ 指出/ 的/ 是/ ,/ 当/ n/ / 16/ ,/ 可以/ 将/ Time/ (/ B/ )/ 忽略不计/ ,/ 整体/ 处理/ 时间/ 可以/ 近似/ 为/ O/ (/ n/ )/ ./ 由于/ 文中/ 采用/ 了/ WM/ 中/ 的/ SHIFT/ 表/ ,/ 因此/ SLSPM/ 匹配/ 算法/ 具有/ O/ (/ n/ // (/ m/ -/ B/ +/ 1/ )/ )/ 最优/ 的/ 复杂度/ ./ 4.6/ 算法/ 空间/ 复杂度/ 分析/ 为了/ 使得/ 说明/ 普通/ trie/ 自动机/ 算法/ 和/ SLSPM/ 算法/ 对/ 内存/ 需求/ 的/ 区别/ 更加/ 简便/ ,/ 我们/ 假设/ :/ (/ 1/ )/ 特征/ 集中/ 的/ 特征/ 的/ 长度/ 都/ 是/ 16/ 的/ 倍数/ ;/ (/ 2/ )/ 为了/ 不失/ 一般性/ ,/ 假设/ 特征/ 集中/ 存在/ u/ 个/ 特征/ patterni/ ,/ 1/ / i/ / u/ ,/ 这/ u/ 个/ 特征/ 具有/ 一个/ 长度/ 为/ 16r/ 的/ 公共/ 前缀/ prefix/ _/ 16r/ ,/ r/ / 1/ ,/ 且/ 这/ u/ 个/ 特征/ 的/ 长度/ 满足/ strlen/ (/ patterni/ )/ / 16/ (/ r/ +/ 1/ )/ ,/ 经过/ 自动机/ 构造/ 这/ u/ 个/ 特征/ 的/ 前缀/ prefix/ _/ 16r/ 在/ 块/ 式/ 自动机/ 和/ 普通/ 自动机/ 中/ 分别/ 到达/ 状态/ NodeB/ 和/ NodeC/ ./ 显然/ 对于/ 特征/ patterni/ ,/ 无论是/ NodeB/ 还是/ NodeC/ ,/ 这些/ 特征/ 的/ 后续/ 子串/ 对/ 内存/ 的/ 需求/ 由/ 以下/ 几个/ 因素/ 决定/ :/ (/ 1/ )/ 状态/ 的/ 表示/ 方法/ ,/ 即/ 数据结构/ 对/ 内存/ 的/ 需求量/ ;/ (/ 2/ )/ NodeB/ 和/ NodeC/ 后/ 新/ 状态/ 的/ 数目/ ./ 为了/ 使/ 说明/ 简便/ ,/ 本文/ 仅/ 考虑/ 这/ u/ 个/ 特征/ 在/ prefix/ _/ 16r/ 之后/ 的/ u/ 个/ 特征/ 块/ 对/ 内存/ 的/ 影响/ ,/ 并/ 将/ 这/ u/ 个/ 特征/ 块/ 记作/ pattern/ _/ blocki/ [/ 16r/ ,/ 16r/ +/ 1/ ,/ …/ ,/ 16r/ +/ 15/ ]/ ./ 对于/ 普通/ 自动机/ 每个/ 状态/ 仅/ 需要/ 一个/ 32bit/ 的/ 整形/ 数据/ 保存/ 后续/ 状态/ 即可/ ;/ 块式/ 自动机/ 中/ 除了/ 要/ 保存/ 后续/ 块/ 状态/ 之外/ ,/ 还/ 需要/ 一个/ 额外/ 的/ 32bit/ 整型/ 数据/ 保存/ 跳转/ 到/ 相应/ 目标/ 块/ 状态/ 的/ 特征/ 块/ 的/ 序号/ ,/ 因此/ 一共/ 需要/ 64bit/ 数据/ ./ 最/ 理想/ 的/ 情况/ 下/ ,/ 特征/ patterni/ 的/ 特征/ 块/ pattern/ _/ blocki/ [/ 16r/ ,/ 16r/ +/ 1/ ,/ …/ ,/ 16r/ +/ 15/ ]/ 的/ 首/ 字符/ 各不相同/ ,/ 那么/ 块/ 自动机/ 中/ NodeB/ 其后/ 将/ 产生/ u/ 个/ 新/ 的/ 块/ 状态/ ,/ 普通/ 自动机/ 中/ NodeC/ 后/ 将/ 产生/ 16/ ×/ u/ 个字符/ 状态/ ./ 显然/ ,/ patterni/ 的/ 特征/ 块/ pattern/ _/ blocki/ [/ 16r/ ,/ 16r/ +/ 1/ ,/ …/ ,/ 16r/ +/ 15/ ]/ 块式/ 自动机/ 和/ 普通/ 自动机/ 的/ 内存/ 比值/ 为/ (/ u/ ×/ 64/ )/ // [/ (/ 16/ ×/ u/ )/ ×/ 32/ ]/ =/ 1/ // 8/ ,/ 此时/ 块式/ 自动机/ 能够/ 比/ 普通/ 自动机/ 节省/ 7/ // 8/ 的/ 内存/ ./ 一般/ 情况/ 下/ ,/ u/ 个/ 特征/ 块/ pattern/ _/ blocki/ [/ 16r/ ,/ 16r/ +/ 1/ ,/ …/ ,/ 16r/ +/ 15/ ]/ 具有/ 长度/ 为/ h/ 的/ 前缀/ 时/ ,/ 0/ / h/ / 16/ ./ 普通/ 自动机/ 中/ NodeC/ 后会/ 产生/ h/ +/ u/ ×/ (/ 16/ -/ h/ )/ 个/ 新/ 的/ 块/ 状态/ ,/ 块式/ 自动机/ 中/ NodeB/ 后会/ 产生/ u/ 个/ 新/ 状态/ ./ 此时/ 块式/ 自动机/ 和/ 普通/ 自动机/ 针对/ 这些/ 新/ 状态/ 的/ 内存/ 需求量/ 比值/ 为/ (/ 64/ ×/ u/ )/ // {/ 32/ ×/ [/ h/ +/ u/ ×/ (/ 16/ -/ h/ )/ ]/ }/ =/ (/ 2/ ×/ u/ )/ // [/ h/ +/ u/ ×/ (/ 16/ -/ h/ )/ ]/ ./ 图/ 2/ 用/ 了/ 一个/ 例子/ 说明/ 了/ 同/ 一组/ 特征/ 子串/ 在/ 普通/ 自动机/ 和/ 块/ 式/ 自动机/ 中/ 产生/ 的/ 状态/ 数/ 的/ 对比/ 情况/ ./ 图/ 3/ 对/ 两种/ 自动机/ 在/ 不同/ 的/ h/ 和/ u/ 取值/ 情况/ 下/ 内存/ 的/ 比值/ 进行/ 了/ 测试/ ./ 图/ 2/ 同/ 一组/ 特征/ 子串/ 在/ 不同/ 类型/ trie/ 自动机/ 中/ 的/ 节点/ 数目/ 图/ 3/ 同/ 一组/ 特征/ 子串/ ,/ 不同/ u/ 和/ h/ 情况/ 下/ ,/ SLSPM5/ 实验/ 本文/ 的/ 实验/ 运行/ 于/ 一台/ 配备/ 了/ PentiumIntel/ (/ R/ )/ Core/ (/ TM/ )/ 2Duo/ 双核/ 处理器/ ,/ 主频/ 2.0/ GHz/ ,/ 物理/ 内存/ 2GB/ ,/ 一/ 、/ 二级缓存/ 分别/ 为/ 32/ ×/ 2KiB/ 和/ 2048KiB/ 的/ 计算机/ 上/ ./ 实验/ 主机/ 操作系统/ 为/ Fedora16x8664Linux/ ,/ 其/ 内核/ 为/ 3.1/ ./ 0/ ./ 核心/ 匹配/ 代码/ 用/ C/ 编写/ (/ 文本/ 读写/ 代码/ 采用/ C++/ )/ ,/ 编译/ 环境/ 为/ gcc/ 编译器/ 4.6/ ./ 2/ ,/ 编译/ 时/ 开启/ 了/ -/ O3/ 选项/ ./ Page95/ ./ 1/ 大/ 特征/ 集/ 环境/ 下/ 的/ 性能/ 测试/ 这部分/ 实验/ 的/ 特征/ 数据/ 为/ 若干组/ URL/ 特征/ ,/ 匹配/ 的/ 文本/ 为/ 具有/ 3/ 千万条/ URL/ 的/ 网络/ 数据/ ./ 当/ 特征/ 集/ 规模较/ 小时/ 我们/ 将/ SLSPM/ 算法/ 和/ AC/ 算法/ 进行/ 了/ 对比/ ./ 为了/ 获得/ 匹配/ 的/ 速度/ ,/ 我们/ 在/ 匹配/ 代码/ 的/ 前后/ 添加/ 了/ clock/ _/ gettime/ 函数/ ,/ 该/ 函数/ 能够/ 以/ 纳秒/ 级/ 的/ 精读/ 计算/ 程序/ 的/ 处理/ 时间/ ./ 当/ 采用/ 大型/ 特征/ 集/ 测试/ 时/ 并未/ 采用/ 对比/ 测试方法/ ,/ 其/ 主要/ 原因/ 在于/ :/ 以往/ 的/ 研究/ 并/ 没有/ 关于/ 长/ 特征/ 的/ 超大规模/ 特征/ 集/ 的/ 测试/ ,/ 而且/ 当/ 特征/ 集/ 规模/ 较大/ 时/ ,/ AC/ 算法/ 由于/ 对/ 内存/ 需求/ 过大/ ,/ 无法/ 完成/ 自动机/ 构造/ ,/ 不/ 具备/ 对比/ 测试/ 的/ 基本/ 条件/ ./ 为了/ 确保/ 算法/ 具有/ 较/ 好/ 的/ 性能/ ,/ 本文/ 中/ 对/ 特征/ 长度/ 另/ 做/ 如下/ 限定/ :/ 特征/ 集中/ 最短/ 的/ 特征/ 长度/ 满足/ m/ / 4/ ./ 做/ 如/ 上/ 限定/ 是/ 由于/ 以下/ 原因/ :/ (/ 1/ )/ 本文/ 中/ 的/ 块/ 式/ 特征/ 匹配/ 算法/ 中/ 借用/ 了/ WM/ [/ 4/ ]/ 算法/ 中/ 的/ SHIFT/ 表/ 以便/ 提高/ 算法/ 的/ 文本/ 过滤/ 速度/ ;/ (/ 2/ )/ 当/ m/ </ 3/ 时/ ,/ 会/ 降低/ 指针/ 移动/ 距离/ ;/ (/ 3/ )/ 当/ 所有/ 特征/ 长度/ 小于/ 3/ 时/ 完全/ 可以/ 直接/ 构造/ 单一/ 的/ 字符/ 自动机/ 对/ 文本/ 匹配/ ,/ 这种/ 情况/ 下/ 的/ 自动机/ 占用/ 的/ 内存/ 并/ 不会/ 很大/ ,/ 使用/ 本文/ 中/ 提出/ 的/ 块/ 式/ 匹配/ 算法/ 也/ 就/ 失去/ 了/ 意义/ ./ 5.1/ ./ 1/ 内存/ 和/ 匹配/ 速度/ 的/ 测试/ 结果/ 图/ 4/ (/ a/ )/ 中/ 显示/ 了/ 不同/ 匹配/ 算法/ 对/ 内存/ 的/ 需求量/ ./ 针对/ SLSPM/ 算法/ 的/ 内存/ 需求量/ 测试/ 包括/ 了/ 如下/ 内容/ :/ (/ 1/ )/ 块式/ 自动机/ 中/ 所有/ 块/ 状态/ (/ 即/ 逆向/ 状态/ 转移/ 表/ 信息/ )/ 的/ 数据结构/ 占用/ 的/ 内存/ ;/ (/ 2/ )/ 算法/ 中为/ 过滤/ 无用/ 文本/ 子串/ 所/ 需要/ 的/ 64KB/ 位移/ 表/ 占用/ 的/ 内存/ ;/ (/ 3/ )/ 所有/ 特征/ 尾串/ 字符/ 自动机/ 占用/ 的/ 内存/ ;/ (/ 4/ )/ 所有/ 短/ 特征/ 构成/ 的/ 字符/ 自动机/ 占用/ 的/ 内存/ ./ 图中/ 测试/ 结果/ 并未/ 包括/ 散/ 列表/ 占用/ 的/ 内存/ (/ 32MB/ )/ ./ 实验/ 中/ 采用/ 了/ 不同/ 的/ 特征/ 长度/ 4/ 、/ 8/ 、/ 16/ 、/ 32/ 和/ 64/ ,/ 结果显示/ 本文/ 的/ SLSPM/ 算法/ 随着/ 特征/ 规模/ 的/ 增加/ 内存/ 增加/ 的/ 速度/ 明显/ 慢于/ AC/ 算法/ ./ 由于/ AC/ 算法/ 内存/ 需求量/ 较大/ ,/ 在/ 本文/ 实验/ 中/ 特征/ 规模/ 达到/ 28800/ 条时/ 就/ 已经/ 无法/ 完成/ 自动机/ 的/ 加载/ 过程/ 了/ (/ 系统/ 此时/ 无法/ 正常/ 响应/ 用户/ 的/ 其它/ 应用/ 请求/ )/ ,/ 而/ SLSPM/ 算法/ 仍然/ 保持/ 较/ 小/ 的/ 内存/ 用量/ ./ 图/ 5SLSPM/ 算法/ 的/ 规模/ 极限/ 测试/ 图/ 4SLSPM/ 算法/ 和/ AC/ 算法/ 的/ 对比/ 实验/ 结果/ 由图/ 4/ (/ b/ )/ 的/ 结果/ 可以/ 看到/ ,/ 与/ AC/ 算法/ 相比/ SLSPM/ 算法/ 的/ 匹配/ 速度/ 略有/ 优势/ ,/ 当/ 采用/ 长度/ 为/ 16/ 的/ 匹配/ 粒度/ 进行/ 匹配/ 时/ ,/ 速度/ 平均/ 可以/ 提升/ 30/ %/ 左右/ ./ 这/ 主要/ 归功于/ 块式/ 匹配/ 可以/ 提升/ 单位/ 匹配/ 动作/ 内/ 的/ 匹配/ 粒度/ ,/ 此外/ 采用/ 散列/ 算法/ 对/ 无用/ 文本/ 块/ 进行/ 过滤/ ,/ 降低/ 了/ 将/ 文本/ 块/ 和/ 特征/ 块/ 进行/ 比较/ 的/ 次数/ 从而/ 减少/ 了/ 匹配/ 性能/ 降低/ 的/ 可能性/ ./ 由图/ 4/ (/ b/ )/ 的/ 结果/ 可以/ 发现/ :/ SLSPM/ 算法/ 的/ 缺点/ 在于/ ,/ 随着/ 特征/ 规模/ 的/ 增加/ ,/ 其/ 匹配/ 速度/ 也/ 会/ 降低/ ./ 这/ 主要/ 是/ 由于/ 当/ 特征/ 集/ 规模/ 增大/ 后/ ,/ 文本/ 块/ 经过/ 散列/ 计算/ 后/ 产生/ 碰撞/ 的/ 概率/ 有/ 可能/ 增大/ ,/ 从而/ 导致/ 需要/ 对/ 首层/ 特征/ 块/ 进行/ 验证/ 的/ 概率/ 增加/ ./ 碰撞/ 率/ 增大/ 和/ 验证/ 次数/ 加大/ 共同/ 导致/ 了/ 整体/ 匹配/ 时间/ 增大/ 的/ 结果/ ./ 本文/ 也/ 对/ SLSPM/ 算法/ 的/ 规模/ 极限/ 进行/ 了/ 测试/ ,/ 测试/ 结果/ 记录/ 于图/ 5/ 中/ ./ 实验/ 结果显示/ :/ 本文/ 中/ 的/ 实验/ 环境/ 下/ 的/ 混合/ 自动机/ 最/ 多/ 可以/ 承载/ 450/ 万条/ 特征/ ./ Page105/ ./ 1.2/ 分块/ 长度/ 对/ 匹配/ 速度/ 的/ 影响/ 增加/ 块/ 的/ 长度/ 可以/ 降低/ 块式/ 自动机/ 中/ 状态/ 的/ 数目/ (/ 主要/ 是/ 块/ 状态/ 的/ 数目/ )/ ,/ 从而/ 尽量/ 降低/ 算法/ 对/ 内存/ 的/ 需求/ ./ 但是/ 一味/ 地/ 增加/ 块/ 的/ 长度/ 未必/ 会/ 带来/ 好/ 的/ 匹配/ 性能/ ./ 从图/ 4/ (/ a/ )/ 和/ 图/ 4/ (/ b/ )/ 中/ 的/ 结果/ 可以/ 看出/ ,/ 将/ 块/ 的/ 长度/ 限定/ 在/ 16/ 会/ 得到/ 比较/ 理想/ 的/ 处理速度/ ./ 这/ 主要/ 是/ 由于/ 匹配/ 过程/ 中/ 会/ 发生/ 匹配/ 回溯/ 的/ 现象/ ,/ 即/ 匹配/ 失败/ 时/ ,/ 会/ 重新/ 将/ 文本/ 指针/ 移动/ 至/ 之前/ 的/ 文本/ 位置/ 进行/ 扫描/ ./ 如果/ 扫描/ 的/ 单位/ 块/ 长度/ 过长/ ,/ 匹配/ 失败/ 的/ 概率/ 就/ 会/ 增加/ ;/ 如果/ 扫描/ 的/ 单位/ 块/ 长度/ 过/ 短/ ,/ 匹配/ 方式/ 会/ 更加/ 接近/ 于/ 字符/ 匹配/ ,/ 达/ 不到/ 利用/ 块/ 匹配/ 方式/ 将/ 指针/ 向前/ 移动/ 的/ 目的/ ./ 由/ 实验/ 结果/ 和/ 以上/ 分析/ 可知/ :/ 16/ 是/ 最/ 理想/ 的/ 分块/ 长度/ ./ 5.2/ 与/ 状态/ 编码/ 自动机/ 的/ 对比/ 实验/ 为了/ 减少/ 网络/ 入侵/ 检测/ 系统/ 的/ 硬件/ 实现/ 方案/ 表/ 1SLSPM/ 和/ 状态/ 编码方式/ 的/ 状态/ 数目/ 比较/ 特征/ 集中/ 的/ 特征/ 产生/ 的/ 方式/ 特征/ 总量/ snort17599747967338843408393469188497843524761552107/ 文献/ [/ 9/ ]/ 通过/ 对/ 自动机/ 状态/ 重新/ 进行/ 编号/ ,/ 使得/ 多个/ 状态/ 能够/ 用/ 一个通/ 配/ 编号/ 来/ 表示/ ,/ 这样/ 自动机/ 中/ 具有/ 相同/ 输入/ 和/ 下/ 一/ 状态/ 的/ 多条/ 变迁/ 就/ 能/ 被/ 聚合/ 为/ 一条/ ,/ 大大减少/ 了/ 需要/ 存储/ 的/ 变迁/ 数目/ ./ 该/ 算法/ 以/ 状态/ 编码/ 加以/ 通配符/ 的/ 形式/ 取代/ 了/ 普通/ AC/ 自动机/ 中/ 的/ 失效/ 跳转/ 函数/ ./ 即/ ,/ 普通/ AC/ 自动机/ 中/ 通过/ 失效/ 跳转/ 来/ 处理/ 无法/ 继续/ 向前/ 匹配/ 的/ 字符/ ,/ 而/ 文献/ [/ 9/ ]/ 的/ 算法/ 是/ 通过/ 通配符/ 的/ 形式/ 追溯/ 上级/ 失效/ 状态/ 能够/ 识别/ 的/ 字符/ 集合/ 中/ 是否/ 含有/ 当前/ 正在/ 处理/ 的/ 输入/ 符号/ ./ 本质/ 上/ ,/ 两者/ 都/ 是/ 使用/ 失效/ 链/ 处理/ 无法/ 继续/ 匹配/ 的/ 字符/ ./ 二者/ 的/ 内存/ 占/ 用量/ 的/ 区别/ 表现/ 为/ :/ 文献/ [/ 9/ ]/ 中/ 算法/ 通过/ 状态/ 编码/ 隐藏/ 了/ 失效/ 状态/ (/ 当前/ 状态/ 指向/ 的/ 失效/ 状态/ )/ ,/ 其/ 代价/ 是/ 增大/ 了/ 状态/ 占用/ 的/ 比特/ 位/ ./ 从/ 匹配/ 效率/ 上/ 看/ ,/ 在/ 读入/ 一个/ 无法/ 匹配/ 的/ 字符/ 后/ ,/ 带有/ 失效/ 函数/ 的/ AC/ 自动/ 机会/ 沿着/ 失效/ 链/ 逐一/ 检查/ 每个/ 失效/ 状态/ 的/ 匹配/ 集合/ 中/ 是否/ 能够/ 匹配/ 当前/ 字符/ ;/ 文献/ [/ 9/ ]/ 则/ 是/ 通过/ 逐一/ 扩大/ 当前/ 状态/ 的/ 编码/ 中/ 的/ 通配符/ (/ 比如/ 状态/ 001111000111111/ 读入/ 无法/ 匹配/ 的/ 字符/ 时/ 可能/ 会/ 经过/ 如下/ 变迁/ 过程/ ,/ 001111000/ / / / / / / ,/ 001111/ / / / / / / / / / ,/ 00/ / / / / / / / / / / / / / ,/ / / / / / / / / / / / / / / / )/ 来/ 判断/ 字符/ 是否/ 有/ 可能/ 被/ 中/ 自动机/ 占用/ 的/ 存储容量/ ,/ 文献/ [/ 9/ ]/ 中/ 提出/ 了/ 一种/ 自动机/ 状态/ 的/ 编码方法/ ./ 本文/ 也/ 将/ SLSPM/ 算法/ 和/ 这种/ 能够/ 大量/ 节省/ 内存/ 的/ 自动机/ 处理/ 方法/ 做/ 了/ 对比/ 测试/ ./ 测试/ 结果/ 列于/ 表/ 1/ ./ 这部分/ 实验/ 的/ 特征/ 集/ 主要/ 来源于/ snort/ 入侵/ 检测/ 系统/ 的/ 两个/ 特征/ 数目/ 最多/ 的/ 规则/ 集合/ 与/ 随机/ 生成/ 的/ 特征/ 集/ ./ 实验/ 中/ 所/ 采用/ 的/ snort/ 中/ 的/ 两个/ 特征/ 集/ 分别/ 为/ deleted/ ./ 2945/ ./ rules/ 和/ browser/ -/ plugins/ ./ 2945/ ./ rules/ ./ 本文/ 中/ 直接/ 提取/ 出/ 规则/ 文件/ 中/ 的/ 所有/ 包含/ 于/ content/ :/ "/ "/ 或者/ content/ :/ !/ "/ "/ 之内/ 的/ 字符串/ 作为/ 特征/ 字符串/ ./ 经过/ 去/ 重/ 处理/ ,/ 我们/ 可以/ 分别/ 从/ deleted/ ./ 2945/ ./ rules/ 和/ browser/ -/ plugins/ ./ 2945/ ./ rules/ 两个/ 特征/ 集中/ 提取/ 出/ 2457/ 和/ 1697/ 条/ 特征/ ./ 对于/ 随机/ 生成/ 的/ 每个/ 特征/ 数据/ 集中/ 的/ 所有/ 特征/ 也/ 是/ 互不/ 重复/ 的/ ./ 状态/ 数目/ 匹配/ ./ 在/ 硬件/ 的/ 支持/ 下/ ,/ 这种/ 自动机/ 依然/ 会/ 保证/ 自动机/ 恒定/ 的/ 处理/ 速率/ ./ 文献/ [/ 9/ ]/ 中/ 可能/ 存在/ 的/ 问题/ 在于/ ,/ 随着/ 特征/ 量/ 的/ 增大/ ,/ 状态/ 编码/ 需要/ 的/ 位数/ 也/ 有/ 可能/ 会/ 增大/ ./ 因此/ 在/ 特/ 大规模/ 特征/ 集/ 的/ 应用环境/ 下/ ,/ 这种/ 算法/ 可能/ 会/ 存在/ 问题/ ./ 从表/ 1/ 的/ 实验/ 结果/ 中/ 我们/ 可以/ 看出/ 采用/ 块式/ 自动机/ 和/ 字符/ 自动机/ 相结合/ 的/ 自动机/ 的/ 状态/ 总量/ 要/ 少于/ 状态/ 编码方式/ ./ 当对/ 状态/ 编码/ 形成/ 的/ 所有/ 状态/ 进行/ 统一/ 编码/ 时/ (/ 即/ ,/ 将/ 所有/ 状态/ 有序/ 地/ 进行/ 编码/ 时/ )/ 会/ 出现/ 大量/ 的/ 非法/ 状态/ ./ 假设/ 按照/ 文献/ [/ 9/ ]/ 中/ 上/ 一层/ 单个/ 状态/ 发出/ 的/ 最大/ 边数/ 为/ 5/ 时/ ,/ 需要/ 使用/ 3/ 比特/ 表示/ 失效/ 链上/ 的/ 编码/ ,/ 仅/ 有/ 001/ 、/ 010/ 、/ 011/ 、/ 100/ 和/ 101/ 共/ 5/ 个/ 编号/ 是/ 有效/ 的/ (/ 合法/ 编码/ )/ ,/ 另外/ 2/ 个/ 编号/ 110/ 和/ 111/ 属于/ 非法/ 的/ 编码/ ./ 对/ 非法/ 编码/ 的/ 存储/ 方式/ 无疑/ 会/ 影响/ 系统/ 的/ 匹配/ 性能/ :/ (/ 1/ )/ 如果/ 系统/ 同时/ 保留/ 合法/ 编码/ 和/ 非法/ 编码/ ,/ 那/ 全部/ 状态/ 的/ 编码/ 就/ 可以/ 落/ 在/ 一个/ 完整/ 的/ 编码/ 空间/ 中/ ,/ 如此/ 依据/ 文/ [/ 9/ ]/ 中/ 的/ 通配/ 编码方式/ 访问/ 上层/ 跳转/ 信息/ 就是/ 常量/ 访问/ 时间/ ./ 但是/ 这种/ 方式/ 会/ 比/ 完整/ AC/ 自动机/ (/ 高级/ AC/ 自动机/ )/ 占用/ 更大/ 的/ 内存/ ./ (/ 2/ )/ 如果/ 系统/ 仅/ 保留/ 合法/ 编码/ ,/ 系统/ 仅/ 占用/ 和/ 状态机/ 的/ 状态/ 数目/ 相当/ 的/ 内存/ 单/ Page11/ 元/ ,/ 但是/ 需要/ 更/ 有效/ 的/ 方式/ 访问/ FTT/ 中/ 的/ 上层/ 节点/ 获取/ 失效/ 跳转/ 信息/ ,/ 以/ 达到/ 恒定/ 的/ 处理/ 速率/ ./ 由于/ 这种/ 不确定性/ 本文/ 没有/ 对/ 状态/ 编码/ 匹配/ 算法/ 和/ SLSPM/ 算法/ 进行/ 速度/ 对比/ 实验/ ./ 6/ 讨论/ 相比/ 其它/ 优化/ 方法/ ,/ 作为/ 压缩/ 自动机/ 内存/ 的/ 一种/ 手段/ ,/ 块式/ 压缩/ 直观/ 、/ 简单/ 、/ 有效/ ./ 但是/ 本文/ 中/ 的/ SLSPM/ 也/ 存在/ 一些/ 问题/ :/ (/ 1/ )/ 正如/ 上文/ 对/ SLSPM/ 算法/ 的/ 分析/ 可知/ ,/ 该/ 算法/ 更/ 适用/ 于/ 各/ 特征/ 在/ 相应/ 分段/ 中/ 的/ 字符/ 分布/ 更加/ 随机/ ,/ 即/ 缺乏/ 共同/ 前缀/ 时才/ 具有/ 更加/ 优越/ 的/ 内存/ 压缩/ 特性/ ;/ (/ 2/ )/ 为了/ 适应/ 块式/ 信息处理/ ,/ SLSPM/ 算法/ 中/ 使用/ 了/ 散列/ 函数/ 对/ 无需/ 进行/ 匹配/ 的/ 文本/ 进行/ 过滤/ ./ 如果/ 散列/ 函数/ 的/ 处理速度/ 不高会/ 严重/ 影响/ 文本/ 扫描/ 的/ 处理/ 性能/ ;/ 散列/ 函数/ 的/ 特性/ ,/ 如/ 雪崩/ 效应/ ,/ 也/ 会/ 影响/ 到/ 算法/ 对/ 文本/ 的/ 过滤/ 能力/ ;/ 文本/ 自身/ 的/ 统计/ 特性/ 也/ 有/ 可能/ 影响/ 散列/ 函数/ 的/ 过滤/ 能力/ ;/ (/ 3/ )/ 随着/ 特征/ 块/ 数目/ 的/ 增加/ ,/ 长度/ 为/ B/ 的/ 字符/ 块/ 在/ 文本/ 块/ 中/ 的/ 出现/ 位置/ 有/ 可能/ 会/ 更加/ 随机/ ,/ 由此/ 会/ 导致/ SHIFT/ 表/ 的/ 移动/ 能力/ 降低/ ./ 同时/ 随着/ 特征/ 规模/ 的/ 增加/ B/ -/ characters/ -/ type/ 信息/ 的/ 类别/ 也/ 有/ 可能/ 增加/ ,/ 由此/ 也/ 会/ 增加/ 算法/ 的/ 处理/ 时间/ ./ 7/ 结论/ 本文/ 中/ 提出/ 了/ 一种/ 适用/ 于/ 超大规模/ 特征/ 集/ 的/ 串/ 匹配/ 算法/ SLSPM/ ./ 和/ 传统/ AC/ 自动机/ 相比/ ,/ 该/ 算法/ 的/ 匹配/ 自动机/ 由/ 一个/ 块式/ 自动机/ 和/ 若干/ 普通/ 自动机/ 构成/ ./ 为了/ 适应/ 先散/ 列后/ 匹配/ 的/ 结构/ ,/ 本文/ 采用/ 了/ “/ 自动机/ 某/ 状态/ 识别/ 的/ 某/ 一/ 符号/ —/ —/ —/ 识别/ 该/ 符号/ 的/ 状态/ 集合/ ”/ 的/ 映射/ 关系/ 来/ 构造/ 块式/ 自动机/ 跳转/ 信息/ ./ 算法/ 的/ 近似/ 平均/ 处理/ 时间/ 为/ O/ (/ n/ )/ ,/ 最优/ 复杂度/ 为/ O/ (/ n/ // (/ m/ -/ B/ +/ 1/ )/ )/ ./ 本文/ 中/ SLSPM/ 算法/ 的/ 优势/ 在于/ 它/ 能够/ 适应/ 于/ SLSPM/ (/ 超大规模/ 特征/ 匹配/ )/ 环境/ ./ 但是/ 由于/ 未/ 使用/ 失效/ 状态/ 的/ 目标/ 状态/ 对/ 自动机/ 当前/ 状态/ 的/ 跳转/ 信息/ 进行/ 扩展/ 降低/ 了/ SLSPM/ 算法/ 的/ 性能/ ,/ 在/ 后续/ 的/ 研究/ 中/ 可以/ 考虑/ 对/ 散列/ 算法/ 和/ 指针/ 移动/ 算法/ 进行/ 优化/ ,/ 以/ 提高/ 该/ 算法/ 的/ 处理速度/ ./ 

