Page1/ 一种/ 基于/ Sketch/ 的/ Top/ -/ 犽/ 紧密/ 中心/ 性/ 快速/ 搜索算法/ 1/ )/ (/ 北京大学/ 信息/ 科学技术/ 学院/ 高/ 可信/ 软件技术/ 重点/ 实验室/ 北京/ 100871/ )/ 2/ )/ (/ 昆士兰/ 大学/ 信息技术/ 和/ 电子/ 工程学院/ 昆士兰/ 澳大利亚/ 4072/ )/ 摘要/ 在/ 大/ 数据/ 的/ 时代背景/ 下/ ,/ 由于/ 网络/ 数据/ (/ networkdata/ )/ 能/ 有效/ 简洁/ 地/ 描述/ 社交/ 网络/ 、/ 电子商务/ 、/ 医疗/ 记录/ 、/ 在线教育/ 等/ 多种/ 应用/ 中/ 各类/ 复杂/ 关系/ ,/ 越来越/ 受到/ 工业界/ 和/ 学术界/ 的/ 关注/ ./ 在/ 社交/ 网络分析/ 任务/ 中/ ,/ 一个/ 基本操作/ 是从/ 网络/ 中/ 发现/ 重要/ 程度/ 前/ k/ 大/ 的/ 节点/ ./ 紧密/ 中心/ 性/ (/ closenesscentrality/ )/ 是/ 一种/ 常见/ 的/ 节点/ 重要性/ 刻画/ 指标/ ,/ 它用/ 节点/ 在/ 网络/ 中心/ 的/ 程度/ 来/ 反映/ 节点/ 的/ 重要性/ ./ 用/ 紧密/ 中心/ 性/ 衡量/ 节点/ 重要性/ 进行/ 节点/ 搜索/ 的/ 问题/ 称为/ top/ -/ k/ 紧密/ 中心/ 性/ 搜索/ 问题/ ./ 然而/ ,/ 传统/ 的/ 精确/ 算法/ 由于/ 其/ 多项式/ 级别/ 的/ 复杂度/ 无法/ 高效/ 地/ 扩展/ 到/ 大规模/ 的/ 网络/ 数据/ 上/ ./ 近来/ ,/ 研究/ 人员/ 提出/ 了/ 近似算法/ ,/ 通过/ 牺牲/ 结果/ 精度/ 来/ 获得/ 性能/ 提升/ ./ 通过/ 分析/ 发现/ ,/ 目前/ 存在/ 的/ 近似算法/ 虽然/ 性能/ 得到/ 了/ 有效/ 提升/ ,/ 但是/ 结果/ 精度/ 牺牲/ 过大/ ./ 为了/ 解决/ 这个/ 问题/ ,/ 该文/ 设计/ 了/ 一种/ 新颖/ 的/ 近似算法/ ,/ 叫做/ 基于/ Sketch/ 的/ 紧密/ 中心/ 性/ 搜索算法/ ./ 此/ 近似算法/ 应用/ 了/ 一个/ 全新/ 的/ 计算/ 方式/ ,/ 利用/ Sketch/ 估计/ 同一/ 距离/ 的/ 邻居/ 数目/ ,/ 然后/ 得到/ 近似/ 的/ 最/ 短距离/ 之/ 和/ ,/ 最终/ 得到/ 各个/ 节点/ 的/ 紧密/ 中心/ 性/ 的/ 估计值/ ./ 此/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ mtDmax/ )/ ,/ 其中/ t/ 是/ 常数/ ,/ Dmax/ 是/ 网络/ 直径/ ,/ m/ 是/ 网络/ 边数/ ./ 根据/ 实际/ 社交/ 网络/ 的/ 小/ 世界/ 现象/ 的/ 特性/ ,/ 此/ 近似算法/ 基本/ 是/ 个/ 线性/ 算法/ ./ 最后/ ,/ 相比/ 于/ 目前/ 存在/ 的/ 精确/ 算法/ 和/ 近似算法/ ,/ 该文/ 通过/ 全面/ 的/ 实验/ 验证/ 了/ 基于/ Sketch/ 的/ 紧密/ 中心/ 性/ 搜索算法/ 在/ 时间/ 性能/ 和/ 结果/ 精度/ 等/ 两/ 方面/ 的/ 优势/ ./ 关键词/ 紧密/ 中心/ 性/ ;/ 图/ 算法/ ;/ 近似算法/ ;/ 图/ 分析/ ;/ 社交/ 网络/ 1/ 引言/ 近年来/ ,/ 随着/ 万维网/ 、/ Web2/ ./ 0/ 、/ 移动/ 网络/ 、/ 社交/ 媒体/ 以及/ 电子商务/ 等/ 技术/ 的/ 迅速/ 发展/ ,/ 大规模/ 的/ 网络/ 数据/ 已经/ 无处不在/ ./ 截至/ 2014/ 年/ 2/ 月/ ,/ Facebook/ 拥有/ 全球/ 12/ 亿/ 用户/ ,/ 其中/ 仅/ 好友/ 关系/ 已/ 多达/ 2016/ 亿条/ ①/ ./ 同时/ ,/ 根据/ CNNIC/ 的/ 统计/ ②/ 表明/ ,/ 截至/ 2013/ 年/ 12/ 月/ ,/ 国内/ 社交/ 网站/ 用户/ 规模/ 达/ 2.78/ 亿/ ./ 与此同时/ ,/ 社交/ 网络分析/ (/ SocialNetworkAnalysis/ ,/ SNA/ )/ 作为/ 一种/ 应用性/ 极强/ 的/ 社会学/ 研究/ 方法/ ,/ 越来越/ 受/ 大家/ 关注/ ./ 因为/ SNA/ 不仅/ 能/ 给/ 公司/ 和/ 企业/ 带来/ 巨大/ 的/ 正/ 效益/ ,/ 而且/ 能/ 协助/ 政府/ 、/ 公安机关/ 进行/ 有效/ 的/ 公共/ 安全监控/ 和/ 预警/ ,/ 比如/ 利用/ 多种类型/ 的/ 社会关系/ 挖掘/ 网络/ 中/ 的/ 犯罪团伙/ 并/ 进行/ 预警/ ./ 社交/ 网络分析/ 任务/ 中/ 一个/ 重要/ 的/ 研究/ 问题/ 是/ 快速/ 有效/ 地/ 发现/ 网络/ 中/ 的/ 重要/ 节点/ [/ 1/ -/ 6/ ]/ ./ 例如/ ,/ 在/ 微博上/ 发现/ 有/ 影响力/ 的/ 用户/ [/ 1/ ,/ 7/ ]/ ,/ 并/ 确定/ 信息/ 传播/ 过程/ 中/ 的/ 关键点/ [/ 2/ ]/ 及/ 在/ 现实/ 的/ 生活/ 社区/ 中/ 发现/ 流行/ 的/ 商店/ [/ 8/ ]/ 等/ ./ 在/ 网络分析/ 任务/ 中/ ,/ 一个/ 网络/ 节点/ 的/ 重要性/ 通过/ 中心/ 性/ (/ Centrality/ )/ 进行/ 测量/ ./ 经过/ 研究/ 人员/ 多年/ 的/ 研究/ ,/ 目前/ 已经/ 提出/ 了/ 多种/ 中心/ 性/ 的/ 定义/ [/ 9/ ]/ ,/ 包括/ 基于/ 信息流/ 的/ PageRank/ 、/ HITS/ 、/ 中介/ (/ Betweenness/ )/ 中心/ 性/ 、/ 紧密/ (/ Closeness/ )/ 中心/ 性/ 、/ 基于/ 度/ (/ Degree/ )/ 的/ 中心/ 性/ 等/ ./ 每/ 一种/ 中心/ 性/ 都/ 从/ 不同/ 角度/ 刻画/ 了/ 一个/ 节点/ 在/ 网络/ 中/ 的/ 重要/ 程度/ ,/ 适用/ 于/ 不同/ 的/ 应用/ 场景/ ./ 本文/ 重点/ 研究/ 的/ 是/ 基于/ 紧密/ 中心/ 性/ (/ ClosenessCentrality/ )/ 的/ 中心/ 性/ 测度/ ./ 紧密/ 中心/ 性/ 可以/ 描述/ 为/ 一个/ 节点/ 到/ 网络/ 中/ 各个/ 节点/ 的/ 平均/ 最/ 短路/ 距离/ 的/ 倒数/ ./ 它/ 是/ 一个/ 基于/ 节点/ 的/ 单源/ 最/ 短路/ 距离/ 分布/ 的/ 衡量/ 指标/ ,/ 形象/ 地/ 描述/ 了/ 节点/ 在/ 网络/ 中所处/ 位置/ 的/ 重要/ 程度/ ./ 紧密/ 中心/ 性越/ 大/ 的/ 节点/ 到/ 其他/ 节点/ 的/ 平均/ 最短/ 路径/ 距离/ 越小/ ,/ 处于/ 网络/ 的/ 越/ 中央/ ;/ 能/ 更/ 迅速/ 地/ 将/ 信息/ 传递/ 给/ 其他/ 节点/ ,/ 同时/ 也/ 能/ 更/ 快速/ 地/ 接收/ 其他/ 节点/ 的/ 信息/ ./ 在/ 实际/ 的/ 社交/ 网络/ 中/ ,/ 如/ 新浪/ 微博/ 、/ 人人/ 网/ 、/ 豆瓣/ 等/ ,/ 一个/ 紧密/ 中心/ 性大/ 的/ 用户/ 的/ 状态/ 、/ 日志/ 等/ 更新/ 相对/ 于/ 其他/ 用户/ 的/ 内容/ 能/ 更/ 迅速/ 地/ 传播/ 到/ 用户/ 所在/ 的/ 社区/ ./ 关于/ 紧密/ 中心/ 性/ 的/ 一个/ 重要/ 的/ 网络分析/ 任务/ 称为/ top/ -/ k/ 紧密/ 中心/ 性/ 节点/ 搜索/ 问题/ ./ 该/ 问题/ 的/ 核心/ 是/ 找到/ 一个/ 网络/ 中/ 紧密/ 中心/ 性前/ k/ 大/ 的/ 几个/ 节点/ ./ 解决问题/ 的/ 关键步骤/ 就是/ 快速/ 计算/ 网络/ 中/ 每个/ 节点/ 的/ 紧密/ 中心/ 性/ ./ 然而/ ,/ 在/ 大/ 数据/ 时代背景/ 下/ ,/ 上述/ 分析/ 任务/ 面临/ 的/ 网络/ 规模/ 不断/ 膨胀/ [/ 10/ -/ 12/ ]/ ./ 尽管/ 紧密/ 中心/ 性能/ 有效/ 地/ 刻画/ 网络/ 节点/ 的/ 重要性/ ,/ 但是/ 经典/ 的/ 计算方法/ 已经/ 无法/ 高效/ 地/ 处理/ 大规模/ 的/ 网络/ 数据/ ./ 朴素/ 的/ 算法/ 需要/ 穷举/ 网络/ 中/ 任意/ 点/ 对/ 的/ 最/ 短距离/ 才能/ 计算/ 网络/ 中/ 所有/ 节点/ 的/ 紧密/ 中心/ 性/ ,/ 这/ 必然/ 引入/ O/ (/ n2/ )/ 的/ 空间/ 复杂度/ 和/ O/ (/ n2m/ )/ 的/ 时间/ 复杂度/ ./ 如果/ 处理/ 一张/ 含有/ 百万/ (/ 106/ )/ 节点/ 的/ 网络/ 数据/ 就/ 需要/ 1/ 太/ (/ 1012/ )/ 左右/ 的/ 空间/ 和/ 时间/ 开销/ ./ 最近/ ,/ Olsen/ 等/ 人/ [/ 13/ ]/ 通过/ 优化/ 计算/ 顺序/ ,/ 估算/ 节点/ 紧密/ 中心/ 性/ 的/ 上界值/ 并/ 利用/ 该值/ 过滤/ 不/ 合法/ 的/ 顶点/ 的/ 方式/ ,/ 减少/ 冗余/ 计算/ ,/ 最终/ 提出/ 了/ 一种/ 高效/ 的/ 精确/ 算法/ ./ 相对/ 于/ 朴素/ 算法/ ,/ Olsen/ 等/ 人/ 设计/ 的/ 精确/ 算法/ 性/ 获得/ 了/ 很大/ 的/ 性能/ 提升/ ./ 但是/ 在/ 处理/ 大规模/ 网络/ 数据/ 时/ ,/ 此/ 精确/ 算法/ 仍然/ 表现/ 出/ 性能/ 低下/ ,/ 主要/ 是因为/ 平均/ 情况/ 下/ 它/ 的/ 计算/ 复杂度/ 仍然/ 与/ 网络/ 节点/ 数目/ 成/ 多项式/ 的/ 关系/ ./ 考虑/ 到/ 实际/ 应用/ 中/ ,/ 用户/ 关注/ 的/ 是/ 那些/ 紧密/ 中/ ①/ ②/ Page3/ 性大/ 的/ 节点/ ,/ 并非/ 具体/ 的/ 紧密/ 中心/ 性/ 的/ 数值/ ./ 针对/ top/ -/ k/ 紧密/ 中心/ 性/ 这个/ 分析/ 任务/ ,/ 不少/ 研究/ 人员/ 开始/ 重点/ 研究/ 近似算法/ ,/ 通过/ 快速/ 估算/ 节点/ 的/ 紧密/ 中心/ 性/ ,/ 提升/ 算法/ 性能/ ./ Eppstein/ 和/ Wang/ 选取/ 一定/ 数目/ 的/ 节点/ 作为/ 种子/ ,/ 利用/ 各个/ 节点/ 到/ 种子/ 节点/ 的/ 最/ 短/ 路径/ 估计/ 节点/ 的/ 紧密/ 中心/ 性/ ./ 虽然/ 此/ 随机/ 算法/ 能/ 高效/ 地/ 处理/ 大规模/ 的/ 网络/ ,/ 但是/ 结果/ 的/ 精度/ 不是/ 非常/ 理想/ ./ 综合/ 考虑/ ,/ 本文/ 主要/ 研究/ 在/ 处理/ 大规模/ 网络/ 的/ 背景/ 下/ 的/ 紧密/ 中心/ 性/ 节点/ 搜索/ 问题/ ,/ 即/ 在/ 给定/ 网络/ G/ 和/ 阈值/ k/ 的/ 条件/ 下/ ,/ 返回/ 紧密/ 中心/ 性/ 最大/ 的/ 前/ k/ 个/ 节点/ (/ 详细/ 定义/ 见/ 2.2/ 节/ )/ ./ 通过/ 上述/ 分析/ 可知/ ,/ 目前/ 的/ 精确/ 算法/ 在/ 大规模/ 网络/ 下/ 性能/ 表现/ 差/ ,/ 而/ 近似算法/ 则/ 表现/ 出/ 结果/ 精度/ 不/ 理想/ ./ 本文/ 作者/ 重新/ 分析/ 了/ 紧密/ 中心/ 性/ 的/ 计算/ 结构/ ,/ 提出/ 了/ 一种/ 基于/ Sketch/ 的/ 紧密/ 中心/ 性/ 快速/ 搜索/ 近似算法/ ./ 此/ 算法/ 在/ 处理/ 大规模/ 网络/ 数据/ 时/ ,/ 既/ 能/ 获得/ 高效/ 的/ 性能/ ,/ 同时/ 具有/ 很/ 高/ 的/ 结果/ 精度/ ./ 在/ 设计/ 算法/ 的/ 过程/ 中/ ,/ 笔者/ 首先/ 重新/ 分析/ 了/ 紧密/ 中心/ 性/ 的/ 计算/ 结构/ ,/ 提出/ 了/ 基于/ 统计/ 最/ 短路/ 分布/ 的/ 紧密/ 中心/ 性/ 计算方法/ ;/ 然后/ ,/ 利用/ FM/ -/ Sketch/ 数据结构/ 对/ 最/ 短路/ 分布/ 进行/ 估计/ ,/ 把/ 多项式/ 的/ 算法/ 空间/ 和/ 时间/ 复杂度/ 降到/ 了/ 线性/ 的/ 复杂度/ ,/ 从而/ 保证/ 算法/ 性能/ ./ 另外/ ,/ 笔者/ 还/ 讨论/ 了/ 算法/ 的/ 结果/ 精度/ 与/ 利用/ FM/ -/ Sketch/ 对/ 最/ 短路/ 分布/ 估计/ 的/ 精度/ 的/ 关系/ ,/ 并/ 提出/ 了/ 启发式/ 规则/ 进一步/ 优化/ 精度/ ./ 最后/ ,/ 通过/ 全面/ 的/ 实验/ 对比/ ,/ 笔者/ 发现/ 基于/ Sketch/ 的/ 算法/ 性能比/ 精确/ 算法/ 提升/ 了/ 2/ 个/ 数量级/ ,/ 比/ 目前/ 存在/ 的/ 近似算法/ 快/ 2/ ~/ 3/ 倍/ 左右/ ;/ 在/ 精度/ 方面/ ,/ 不同/ 的/ (/ 真实/ 和/ 模拟/ )/ 网络/ 数据/ 上/ ,/ 新/ 的/ 近似算法/ 比/ 现存/ 的/ 近似算法/ 高/ 10/ %/ ~/ 60/ %/ ./ 在/ 本文/ 第/ 2/ 节/ ,/ 笔者/ 详细/ 介绍/ 紧密/ 中心/ 性/ 、/ top/ -/ k/ 紧密/ 中心/ 性/ 节点/ 搜索/ 问题/ 、/ FM/ -/ Sketch/ 等/ 基本概念/ ,/ 同时/ 分别/ 介绍/ 现阶段/ 效果/ 最好/ 的/ 一种/ 精确/ 算法/ 和/ 近似算法/ ;/ 在/ 第/ 3/ 节/ ,/ 笔者/ 详细/ 介绍/ 基于/ Sketch/ 的/ 紧密/ 中心/ 性/ 快速/ 搜索/ 近似算法/ ;/ 在/ 第/ 4/ 节中/ 通过/ 全面/ 的/ 实验/ 对比/ 说明/ 新/ 方法/ 的/ 优势/ ;/ 在/ 第/ 5/ 节中/ ,/ 笔者/ 将/ 详细/ 讨论/ 关于/ 节点/ 中心/ 性/ 计算/ 的/ 相关/ 工作/ ;/ 最后/ ,/ 在/ 第/ 6/ 节/ 笔者/ 对/ 本文/ 进行/ 总结/ ./ 2Top/ -/ 犽/ 紧密/ 中心/ 性/ 搜索/ 的/ 基本概念/ 本/ 节/ 正式/ 介绍/ 紧密/ 中心/ 性/ 的/ 概念/ 和/ 基于/ 紧密/ 中心/ 性/ 的/ 节点/ 搜索/ 问题/ 的/ 定义/ ./ 其次/ ,/ 笔者/ 分别/ 介绍/ 一种/ 关于/ 紧密/ 中心/ 性/ 搜索/ 问题/ 现阶段/ 性能/ 最好/ 的/ 精确/ 算法/ 和/ 近似算法/ ./ 最后/ ,/ 笔者/ 还/ 简单/ 介绍/ FM/ -/ Sketch/ 的/ 核心思想/ 和/ 功能/ ./ 2.1/ 紧密/ 中心/ 性/ 定义/ 本文/ 用/ G/ (/ V/ ,/ E/ )/ 表示/ 一张/ 网络/ ,/ 其中/ V/ 是/ 网络/ G/ 的/ 顶点/ 集合/ ,/ E/ 是/ 网络/ G/ 的/ 边/ 集合/ ./ 在/ 社交/ 网络/ 上/ 的/ 节点/ 中心/ 性/ 分析/ 任务/ 中/ ,/ 网络/ G/ 是/ 一张/ 无权/ 网络/ ,/ 即边/ 和/ 节点/ 不带/ 权值/ ./ 网络/ 中/ 的/ 节点/ 用/ 小写字母/ v/ ,/ u/ 表示/ ./ 网络/ 中/ 节点/ 数和边/ 数/ 分别/ 记为/ n/ 和/ m/ ./ 另外/ ,/ d/ (/ u/ ,/ v/ )/ 表示/ 网络/ 上/ 两/ 节点/ u/ ,/ v/ 之间/ 的/ 最/ 短路/ 距离/ ;/ c/ (/ v/ )/ 表示/ 顶点/ v/ 的/ 紧密/ 中心/ 性/ ./ 表/ 1/ 总结/ 了/ 本文/ 将要/ 频繁/ 使用/ 的/ 符号/ ./ 符号/ G/ (/ V/ ,/ E/ )/ n/ ,/ mu/ ,/ vc/ (/ v/ )/ s/ (/ v/ )/ d/ (/ u/ ,/ v/ )/ DmaxNd/ (/ v/ )/ N/ / d/ (/ v/ )/ NV/ / d/ (/ u/ )/ FM/ / d/ (/ v/ )/ |/ FM/ / d/ (/ v/ )/ |/ 之前/ ,/ 笔者/ 已经/ 简单/ 说明/ 紧密/ 中心/ 性/ 与/ 节点/ 的/ 平均/ 最/ 短距离/ 之间/ 的/ 关系/ ./ 下面/ 定义/ 1/ 给出/ 了/ 紧密/ 中心/ 性/ 的/ 形式化/ 定义/ ./ 定义/ 1/ (/ 紧密/ 中心/ 性/ )/ ./ 在/ 一个/ 网络/ G/ 中/ ,/ 节点/ v/ 的/ 紧密/ 中心/ 性/ c/ (/ v/ )/ 是/ 它/ 到/ 其他/ 节点/ 的/ 平均/ 最/ 短路/ 距离/ 的/ 倒数/ ,/ 形式化/ 表示/ 为/ 其中/ ,/ n/ 表示/ 网络/ 中/ 节点/ 数目/ ;/ d/ (/ v/ ,/ v/ )/ 表示/ 节点/ v/ 和/ v/ 之间/ 的/ 最/ 短路/ 距离/ ./ 利用/ 定义/ 1/ 计算/ 节点/ 的/ 紧密/ 中心/ 性/ ,/ 需要/ 图/ G/ 是/ 连通/ 图/ 的/ 假设/ ,/ 否则/ 会/ 出现/ d/ (/ v/ ,/ v/ )/ =/ 的/ 情况/ ./ 由于/ 现实/ 世界/ 中/ 的/ 网络/ 存在/ 多个/ 连通/ 块/ ,/ 使得/ 定义/ 1/ 无法/ 有效/ 计算/ 节点/ 在/ 全/ 网络/ 中/ 的/ 紧密/ 中心/ 性/ ./ 这里/ 笔者/ 引入/ 一种/ 更加/ 全面/ 通用/ 的/ 紧密/ 中心/ 性/ 计算/ 方式/ ./ 在/ 任意/ 给定/ 的/ 一个/ 网络/ G/ 中/ ,/ 节点/ v/ 的/ 紧密/ 中心/ 性/ 表示/ 为/ 其中/ ,/ |/ Vv/ |/ 表示/ 包含/ 节点/ v/ 的/ 连通/ 块/ 中/ 顶点/ 数/ Page4/ 目/ ./ 式/ (/ 2/ )/ 可以/ 理解/ 为/ 每个/ 节点/ 先/ 计算/ 其/ 在/ 连通/ 块/ 内/ 的/ 紧密/ 中心/ 性/ 系数/ |/ Vv/ |/ -/ 1n/ -/ 1/ 个/ 节点/ 的/ 紧密/ 中心/ 性/ 在/ 全局/ 满足/ 偏序/ 关系/ ,/ 具有/ 可比性/ ./ 2.2/ Top/ -/ 犽/ 紧密/ 中心/ 性/ 搜索/ 问题/ 定义/ 本文/ 研究/ 如何/ 在/ 一张/ 大规模/ 网络/ 中/ 快速/ 找到/ 紧密/ 中心/ 性前/ k/ 大/ 的/ 节点/ ,/ 简称/ 为/ top/ -/ k/ 紧密/ 中心/ 性/ 节点/ 搜索/ 问题/ ./ 下面/ 是/ 此/ 问题/ 的/ 具体/ 定义/ ./ 定义/ 2/ (/ top/ -/ k/ 紧密/ 中心/ 性/ 节点/ 搜索/ )/ ./ 给定/ 参数/ k/ ,/ 在/ 网络/ G/ (/ V/ ,/ E/ )/ 上/ 寻找/ k/ 个/ 节点/ ,/ 使得/ 这/ k/ 个/ 节点/ 的/ 紧密/ 中心/ 性/ 在/ 网络/ G/ 中是/ 前/ k/ 大/ ./ 考虑/ 到/ 问题/ 的/ 通用性/ ,/ 本文/ 在/ 解决/ top/ -/ k/ 紧密/ 中心/ 性/ 搜索/ 问题/ 时/ ,/ 利用/ 式/ (/ 2/ )/ 计算/ 节点/ 的/ 紧密/ 中心/ 性/ ./ 2.3/ 紧密/ 中心/ 性/ 搜索/ 的/ 精确/ 算法/ Δ/ -/ pfs/ 精确/ 算法/ 是/ 指/ 通过/ 准确/ 计算/ 节点/ 的/ 紧密/ 中心/ 性/ 的/ 方式/ ,/ 求得/ 精确/ 的/ 前/ k/ 大/ 节点/ ./ 目前/ 最新/ 且/ 性能/ 最好/ 的/ 精确/ 算法/ 是/ Olsen/ 等/ 人/ [/ 13/ ]/ 在/ 2014/ 年/ 的/ 数据库/ 国际/ 会议/ ICDE/ 上/ 提出/ 的/ Δ/ -/ pfs/ 算法/ ./ 经典/ 的/ 精确/ 算法/ 需要/ 利用/ 单源/ 最/ 短路/ 算法/ 给/ 每/ 一个/ 节点/ 计算/ 准确/ 的/ 紧密/ 中心/ 性/ ,/ 然后/ 根据/ 紧密/ 中心/ 性/ 取值/ 排序/ ,/ 得到/ 前/ k/ 大/ 的/ 节点/ ./ 然而/ ,/ 经典/ 算法/ 中/ 存在/ 大量/ 的/ 冗余/ 计算/ ,/ 即/ 不同/ 节点/ 在/ 计算/ 单源/ 最/ 短路/ 时/ ,/ 存在/ 重复/ 计算/ 的/ 最/ 短路/ ./ 为了/ 减少/ 冗余/ 计算/ ,/ 合理/ 利用/ 已经/ 计算/ 得到/ 的/ 最/ 短路/ ,/ Olsen/ 等/ 人/ 提出/ 了/ Δ/ -/ pfs/ 算法/ ./ Δ/ -/ pfs/ 算法/ 优化/ 的/ 核心思想/ 是/ 在/ 计算/ 某/ 一个/ 顶点/ 的/ 紧密/ 中心/ 性时/ 重复/ 利用/ 其他/ 顶点/ 计算/ 紧密/ 中心/ 性/ 的/ 中间/ 结果/ ./ 图/ 1/ 具体/ 展示/ 了/ 一个/ 冗余/ 计算/ 共享/ 的/ 例子/ ./ 图/ 1/ (/ a/ )/ 展示/ 了/ 在/ 一张/ 包含/ 6/ 个/ 顶点/ 和/ 7/ 条边/ 的/ 有向图/ 上/ 计算/ 顶点/ b/ 的/ 紧密/ 中心/ 性/ 的/ 过程/ ./ 其中/ ,/ d/ (/ b/ ,/ f/ )/ =/ d/ (/ b/ ,/ g/ )/ =/ 1/ ,/ d/ (/ b/ ,/ b/ )/ =/ 0/ ,/ d/ (/ b/ ,/ h/ )/ =/ 2/ ,/ 于是/ c/ (/ b/ )/ =/ (/ Vb/ -/ 1/ )/ 2/ (/ n/ -/ 1/ )/ ∑/ v/ ∈/ Vb/ 在/ 图/ 1/ 基础/ 上/ ,/ 计算/ 顶点/ a/ 的/ 紧密/ 中心/ 性/ ,/ 朴素/ 的/ 做法/ 需要/ 全部/ 遍历/ 图中/ 的/ 7/ 条边/ ,/ 计算/ 顶点/ a/ 与/ 其他/ 节点/ 对/ 之间/ 的/ 最/ 短距离/ 之/ 和/ ./ Olsen/ 等/ 人/ 重新/ 设计/ 算法/ ,/ 通过/ 利用/ 先前/ 的/ 搜索/ 避免/ 重复/ 计算/ ,/ 有效/ 提升/ 算法/ 性能/ ./ 首先/ ,/ 在/ 计算/ 顶点/ b/ 的/ 紧密/ 中心/ 性时/ ,/ 根据/ 计算/ 的/ 点/ 对/ 之间/ 的/ 最/ 短距离/ d/ (/ b/ ,/ v/ )/ ,/ 把/ 每个/ 顶点/ v/ 标号/ 为/ d/ (/ b/ ,/ v/ )/ ,/ 然后/ 把/ 其他/ 顶点/ a/ 能/ 达到顶点/ 标记/ 为/ d/ (/ b/ ,/ v/ )/ -/ w/ (/ a/ ,/ b/ )/ ,/ 其中/ w/ (/ a/ ,/ b/ )/ 为边/ (/ a/ ,/ b/ )/ 的/ 权重/ ,/ 最后/ 在/ 计算/ 过程/ 中/ ,/ 新/ 标号/ 与/ 旧/ 标号/ 一致/ 就/ 可以/ 跳过/ 重复/ 计算/ ./ 通过/ 计算/ 顶点/ b/ 的/ 紧密/ 中心/ 性/ ,/ 顶点/ b/ ,/ f/ ,/ g/ ,/ h/ 的/ 标号/ 如图/ 1/ (/ a/ )/ 中/ 的/ 表格/ 所示/ ./ 现在/ ,/ 当/ 计算/ 顶点/ a/ 的/ 紧密/ 中心/ 性时/ ,/ 如图/ 1/ (/ b/ )/ 所示/ ,/ 首先/ 顶点/ a/ 的/ 标号/ 为/ d/ (/ a/ ,/ a/ )/ -/ w/ (/ a/ ,/ b/ )/ =/ -/ 1/ ,/ 然后/ 根据/ 顶点/ a/ 的/ 出边/ ,/ 搜索/ 到/ 顶点/ b/ ,/ 计算/ 得到/ 顶点/ b/ 的/ 新/ 标号/ 为/ d/ (/ a/ ,/ b/ )/ -/ w/ (/ a/ ,/ b/ )/ =/ 0/ ,/ 与其/ 旧/ 标号/ 一致/ ,/ 说明/ 从/ 顶点/ b/ 出发/ 的/ 顶点/ 都/ 被/ 计算/ 过/ ,/ 且/ 标号/ 不用/ 更新/ ,/ 因此/ 可以/ 跳过/ 对/ 顶点/ b/ 的/ 继续/ 搜索/ ,/ 避免/ 了/ 不必要/ 的/ 计算/ ./ 而/ 当/ 从/ a/ 出发/ 计算/ 顶点/ g/ 时/ (/ 图/ 1/ (/ c/ )/ )/ ,/ 顶点/ g/ 的/ 新/ 标号/ 为/ d/ (/ a/ ,/ g/ )/ -/ w/ (/ a/ ,/ b/ )/ =/ 0/ 与其/ 旧/ 标号/ 1/ 不同/ ,/ 因此/ 继续/ 扩展/ 顶点/ g/ ,/ 计算/ 可/ 得/ 顶点/ f/ 的/ 新旧/ 标号/ 一致/ ,/ 停止/ 扩展/ ./ 而/ 顶点/ e/ 则/ 由于/ 没有/ 旧/ 标号/ (/ 图/ 1/ (/ d/ )/ )/ ,/ 同样/ 需要/ 进一步/ 的/ 扩展/ 更新/ ./ 根据/ 标号/ 变化/ ,/ 可以/ 相对/ 快速/ 地/ 计算/ 得到/ 新/ 的/ 顶点/ 的/ 最/ 短路/ 距离/ 之/ 和/ ,/ 用/ 变量/ s/ 维护/ 该值/ ./ 当/ 计算/ 顶点/ b/ 以后/ ,/ s/ 的/ 值/ 为/ 4/ ./ 在/ 计算/ 顶点/ a/ 时/ ,/ 由于/ 起点/ 的/ 标号/ 变为/ -/ 1/ ,/ 这样/ 从/ b/ 出发/ 的/ 可达/ 的/ 顶点/ 的/ 最/ 短距离/ 每个/ 增加/ 1/ ,/ 因此/ s/ 增加/ 4/ ×/ 1/ ./ 由于/ 顶点/ g/ 的/ 标号/ 从/ 1/ 变为/ 0/ ,/ 这样/ s/ 减少/ 1/ 以及/ 顶点/ e/ 是/ 新/ 引入/ 的/ s/ 增加/ d/ (/ a/ ,/ e/ )/ =/ 1/ ,/ 最终/ 得到/ 最新/ 的/ s/ 为/ 8/ ./ 于是/ c/ (/ a/ )/ =/ (/ Va/ -/ 1/ )/ 2/ (/ n/ -/ 1/ )/ ∑/ v/ ∈/ VaPage5/ 为了/ 有效/ 降低/ 计算/ 的/ 冗余度/ ,/ 作者/ 进一步/ 利用/ 代价/ 模型/ 构建/ 一张/ 代价/ 网络/ ./ 在/ 此/ 网络/ 上/ ,/ 利用/ 最小/ 生成/ 树/ 算法/ 选择/ 合适/ 的/ 初始/ 节点/ 集合/ ,/ 并/ 按/ 一定/ 的/ 顺序/ 进行/ 单源/ 最/ 短路/ 的/ 计算/ ,/ 使得/ 后续/ 的/ 节点/ 计算/ 能/ 像/ 之前/ 分析/ 的/ 一样/ 有效/ 利用/ 已经/ 处理/ 过/ 的/ 节点/ 的/ 中间/ 结果/ ,/ 减少/ 冗余/ 计算/ ./ 其次/ ,/ Δ/ -/ pfs/ 算法/ 根据/ 已知/ 的/ 计算结果/ ,/ 为/ 每个/ 节点/ 估计/ 紧密/ 中心/ 性/ 的/ 上界/ ,/ 利用/ 估计/ 的/ 上界/ ,/ 及时/ 过滤/ 那些/ 不/ 可能/ 属于/ 前/ k/ 大/ 的/ 节点/ 避免/ 无/ 意义/ 的/ 计算/ ./ 通过/ 上述/ 优化/ ,/ 相对/ 于/ 传统/ 算法/ ,/ Δ/ -/ pfs/ 算法/ 性能/ 得到/ 了/ 有效/ 的/ 提升/ ./ 然而/ ,/ Δ/ -/ pfs/ 算法/ 的/ 平均/ 时间/ 和/ 空间/ 复杂度/ 很难/ 讨论/ 清楚/ ,/ 实际/ 优化/ 性能/ 随着/ 数据/ 的/ 不同/ 而/ 波动/ 很大/ ./ 最坏/ 情况/ 下/ 它/ 的/ 时间/ 和/ 空间/ 复杂度/ 上/ 仍然/ 是/ 多项式/ 的/ ,/ 无法/ 高效/ 处理/ 现实/ 世界/ 中/ 的/ 大规模/ 网络/ 数据/ ./ 2.4/ 紧密/ 中心/ 性/ 搜索/ 的/ 近似算法/ RAND/ 为了/ 能/ 在/ 大规模/ 网络/ 上/ 高效/ 计算/ 紧密/ 中心/ 性/ 搜索/ 问题/ ,/ 研究/ 人员/ 通过/ 设计/ 近似算法/ 对/ 紧密/ 中心/ 性/ 进行/ 估计/ ,/ 进而/ 获得/ 近似/ 的/ top/ -/ k/ 紧密/ 中心/ 性/ 节点/ ./ 早/ 在/ 2004/ 年/ ,/ Eppstein/ 提出/ 了/ 一种/ 快速/ 估计/ 节点/ 紧密/ 中心/ 性/ 的/ 随机/ 算法/ ,/ 记为/ RAND/ -/ 算法/ [/ 14/ ]/ ./ 精确/ 算法/ 中/ 一个/ 节点/ 的/ 紧密/ 中心/ 性由/ 节点/ 到/ 所有/ 其余/ 节点/ 的/ 最/ 短路/ 之/ 和/ 决定/ ;/ 而/ RAND/ -/ 算法/ 的/ 思想/ 是/ 利用/ 随机抽样/ 的/ 方法/ 选出/ s/ 个/ (/ 可/ 重复/ 的/ )/ 节点/ 作为/ 种子/ ,/ 然后/ 一个/ 节点/ 的/ 紧密/ 中心/ 性由/ 节点/ 到/ 这/ s/ 个/ 节点/ 的/ 最/ 短距离/ 之/ 和/ 进行/ 估计/ ./ 这样/ 就/ 把/ 计算/ n/ 次/ 单源/ 最/ 短路/ 降到/ 了/ 计算/ s/ 次/ 单源/ 最/ 短路/ ./ RAND/ -/ 算法/ 的/ 基本/ 步骤/ 如下/ :/ (/ 1/ )/ 令/ s/ 为/ 算法/ 迭代/ 轮数/ ;/ (/ 2/ )/ 在/ 第/ i/ 轮/ 迭代/ 中/ ,/ 从/ 给定/ 网络/ G/ 中/ 随机/ 选择/ 节点/ vi/ ,/ 并/ 计算/ 以/ vi/ 为/ 源点/ 的/ 单源/ 最/ 短路/ ;/ (/ 3/ )/ 网络/ G/ 中/ 节点/ u/ 的/ 紧密/ 中心/ 性/ 按/ 如下/ 公式/ 进行/ 估计/ :/ 作者/ 证明/ 当/ RAND/ -/ 算法/ 抽样/ O/ 时/ ,/ 节点/ 的/ 平均/ 最/ 短路/ 误差/ 控制/ 在/ ε/ D/ ,/ 其中/ D/ 是/ 网络/ 的/ 直径/ ./ 这样/ RAND/ -/ 算法/ 是/ 一个/ (/ 1/ +/ ε/ )/ 近似/ 的/ 算法/ ./ 然而/ 在/ 实际/ 应用/ 中/ ,/ 为了/ 得到/ 精度/ 不错/ 的/ 结果/ ,/ s/ 往往/ 会/ 比较/ 大/ ;/ 或者/ 当/ s/ 较/ 小/ 的/ 时候/ ,/ RAND/ -/ 算法/ 的/ 结果/ 精度/ 较/ 低/ ./ 2.5/ FM/ -/ Sketch/ 介绍/ 接下来/ ,/ 笔者/ 介绍/ 后续/ 在/ 设计/ 本文/ 算法/ 时/ 需要/ 用到/ 的/ 一个/ 数据结构/ FM/ -/ Sketch/ [/ 15/ ]/ ./ 它/ 是/ 一种/ 高效/ 且/ 通用/ 的/ 估计/ 大规模/ 集合/ 基数/ (/ cardinality/ )/ 的/ 方法/ ./ 此/ 方法/ 基于/ 元素/ 哈希/ 值/ 的/ 比特/ 位/ (/ bit/ )/ 分布/ 特性/ ,/ 能仅/ 利用/ 几百/ 字节/ 的/ 空间/ 通过/ 扫描/ 一遍/ 集合/ 快速/ 估计/ 集合/ 内/ 不同/ 元素/ 的/ 个数/ ./ FM/ -/ Sketch/ 的/ 计算/ 过程/ 是/ :/ 对于/ 集合/ 中/ 的/ 每/ 一个/ 元素/ x/ ,/ 通过/ 一个/ 哈希/ 函数/ h/ 将/ 其/ 映射/ 到/ 一个/ 固定/ 长度/ (/ t/ 位/ )/ 的/ 二进制/ 数/ h/ (/ x/ )/ ;/ 然后/ 利用/ 生成/ 的/ h/ (/ x/ )/ 构造/ 如下/ 一个/ t/ 位/ 二进制/ 的/ bitmap/ ./ 首先/ 把/ bitmap/ 每/ 一位/ 都/ 置/ 为/ 0/ ;/ 然后/ 计算/ 集合/ 中/ 每个/ 元素/ 的/ h/ (/ x/ )/ 中/ 最低/ 位/ 1/ 的/ 位置/ ,/ 并/ 把/ bitmap/ 中/ 相应/ 位置/ 设为/ 1/ ;/ 这里/ ,/ 多个/ 元素/ 的/ h/ (/ x/ )/ 对/ 一个/ bitmap/ 的/ 操作/ 的/ 结果/ 等价/ 于/ 每个/ h/ (/ x/ )/ 对应/ 的/ bitmap/ 的/ 逻辑运算/ “/ 或/ ”/ 的/ 结果/ ./ 最后/ ,/ 当/ 集合/ 中/ 所有/ 元素/ 处理/ 完/ 以后/ ,/ 计算/ bitmap/ 中/ 最低/ 位/ 0/ 的/ 位置/ ,/ 记为/ r/ ,/ 原/ 集合/ 中/ 不同/ 元素/ 的/ 数目/ 估计值/ 为/ 1.3/ ×/ 2r/ ,/ 其中/ 常数/ 1.3/ 是/ 一个/ 基于/ 统计/ 的/ 魔法/ 数字/ ,/ 用于/ 修正/ 估计/ 结果/ ./ 在/ 实际/ 运用/ 中/ ,/ 为了/ 提高/ 精度/ ,/ 通常/ 使用/ 多个/ 哈希/ 函数/ ,/ 并取/ 所有/ r/ 的/ 平均值/ 进行/ 估计/ ./ FM/ -/ Sketch/ 的/ 原理/ 和/ 相关/ 证明/ 可以/ 参考文献/ [/ 15/ ]/ ./ 下面/ 再/ 通过/ 一个/ 具体/ 例子/ 说明/ 如何/ 进行/ 估计/ ./ 假设/ 集合/ 中有/ 4/ 个/ 元素/ x1/ ,/ x2/ ,/ x3/ 和/ x4/ ,/ 通过/ 3/ 个/ 哈希/ 函数/ h1/ (/ x/ )/ ,/ h2/ (/ x/ )/ 和/ h3/ (/ x/ )/ ,/ 生成/ 3/ 个/ bitmapB1/ ,/ B2/ ,/ B3/ ./ 每/ 一个/ 哈希/ 函数/ 都/ 将/ 任意/ 一个/ 元素/ 映射/ 到/ 一个/ t/ =/ 4/ 位/ 的/ 二进制/ ./ 其中/ 表/ 2/ 展示/ 了/ h1/ (/ x/ )/ 的/ 计算结果/ ;/ 表/ 3/ 列出/ 了/ 3/ 个/ 哈希/ 函数/ 作用/ 下/ 生成/ 的/ 3/ 个/ bitmap/ ./ 以/ h1/ (/ x/ )/ 为例/ ,/ 得到/ 对应/ 的/ bitmapB1/ 的/ 二进制/ 值为/ (/ 1011/ )/ 2/ ,/ 这样/ r1/ =/ 2/ ./ 同理/ 可/ 得/ ,/ r2/ =/ 2/ ,/ r3/ =/ 1/ ./ 于是/ ,/ r/ =/ 为/ 1.3/ ×/ 21.67/ =/ 4.14/ ./ h1/ (/ x1/ )/ 1010/ 除了/ 利用/ 多个/ 哈希/ 函数/ 求/ 平均/ 提高/ 估算/ 精度/ 的/ 方法/ 以外/ ,/ 通过/ 对/ 同一个/ 哈希/ 函数/ 的/ 哈希/ 值/ 进行/ 分组/ 处理/ ,/ 然后/ 根据/ 不同/ 分组/ 的/ 估算/ 结果/ 进行/ 综合/ 得/ Page6/ 到/ 最终/ 的/ 估算/ 结果/ ./ 作者/ 讨论/ 了/ 在/ t/ 固定/ 的/ 条件/ 下/ ,/ 随着/ 组数/ m/ 的/ 增大/ ,/ FM/ -/ Sketch/ 的/ 估算/ 精度/ 会/ 提高/ ./ 这里/ 具体/ 的/ 估算/ 方法/ 如下/ :/ 假设/ n/ 个/ 不同/ 元素/ 在/ 同一个/ 哈希/ 函数/ 下/ 计算/ 的/ 哈希/ 值/ ,/ 被/ 划分/ 成/ m/ 组/ FM/ -/ Sketch/ ,/ 那么/ n/ 的/ 估算/ 公式/ 如下/ :/ 其中/ r/ 是/ 指/ m/ 组/ bitmap/ 中/ 最低/ 位/ 0/ 的/ 位置/ 的/ 平均值/ ./ 3/ 基于/ Sketch/ 的/ 紧密/ 中心/ 性/ 搜索算法/ 本/ 节/ 详细/ 介绍/ 基于/ Sketch/ 的/ top/ -/ k/ 紧密/ 中心/ 性/ 搜索算法/ ./ 首先/ ,/ 笔者/ 给出/ 了/ 一种/ 基于/ 计数/ 的/ 紧密/ 中心/ 性/ 计算/ 方式/ ,/ 并/ 结合/ 此新/ 的/ 计算/ 方式/ ,/ 设计/ 了/ 全新/ 的/ 紧密/ 中心/ 性/ 搜索算法/ ;/ 然后/ ,/ 利用/ FM/ -/ Sketch/ 数据结构/ 进行/ 优化/ ,/ 使得/ 算法/ 能够/ 快速/ 估计/ 各个/ 节点/ 的/ 紧密/ 中心/ 性/ ./ 最后/ ,/ 笔者/ 讨论/ 了/ 近似算法/ 结果/ 精度/ ,/ 利用/ 启发式/ 规则/ 进一步/ 优化/ 算法/ 精度/ ./ 3.1/ 基于/ 计数/ 的/ 紧密/ 中心/ 性/ 计算/ 根据/ 式/ (/ 2/ )/ 可知/ ,/ 紧密/ 中心/ 性/ 的/ 计算/ 核心/ 是/ 统计/ 一个/ 节点/ u/ 到/ 其他/ 节点/ 的/ 最/ 短路/ 距离/ 之/ 和/ ,/ 记为/ s/ (/ u/ )/ ./ 如果/ 知道/ 一个/ 节点/ u/ 的/ 所有/ 最/ 短路/ 按/ 其/ 距离/ 长度/ 的/ 分布/ ,/ 那么/ 节点/ u/ 的/ 所有/ 最/ 短路/ 距离/ 之/ 和/ 可以/ 表示/ 为/ s/ (/ u/ )/ =/ ∑/ v/ ∈/ V/ 其中/ ,/ Dmax/ 表示/ 网络/ G/ 上/ 任意/ 点/ 对/ 中/ 最长/ 的/ 最/ 短路/ 距离/ ,/ 即/ 为/ 网络/ G/ 的/ 直径/ ;/ Nd/ (/ u/ )/ 表示/ 与/ 节点/ u/ 最/ 短路/ 距离/ 为/ d/ 的/ 节点/ 数目/ ./ 根据/ 式/ (/ 3/ )/ ,/ 紧密/ 中心/ 性/ 的/ 计算/ 转化/ 为/ 一定/ 长度/ 的/ 最/ 短/ 路径/ 数目/ 的/ 统计/ ./ 用/ NV/ / d/ (/ u/ )/ 表示/ 与/ 节点/ u/ 最/ 短路/ 距离/ 不/ 超过/ d/ 的/ 节点/ 的/ 集合/ ,/ 即/ NV/ / d/ (/ u/ )/ =/ {/ v/ |/ d/ (/ u/ ,/ v/ )/ / d/ }/ ./ 于是/ ,/ Nd/ (/ u/ )/ =/ |/ NV/ / d/ (/ u/ )/ |/ -/ |/ NV/ / d/ -/ 1/ (/ u/ )/ |/ ./ 结合/ 社交/ 网络应用/ 中/ 重要/ 节点/ 发现/ 的/ 特征/ ,/ 本文/ 考虑/ 的/ 网络/ 不/ 涉及/ 节点/ 和/ 边/ 的/ 权值/ ,/ 即/ 所有/ 边/ 的/ 长度/ 均/ 视为/ 1/ ,/ 于是/ NV/ / d/ (/ u/ )/ 满足/ 如下/ 递推/ 性质/ ./ 性质/ 1/ ./ 节点/ u/ 在/ 距离/ d/ 以内/ 可达/ 的/ 节点/ 集合/ 是/ 该/ 节点/ 的/ 所有/ 邻居/ 节点/ 在/ 距离/ d/ -/ 1/ 以内/ 可达/ 的/ 节点/ 集合/ 的/ 并/ 集/ ,/ 即/ 利用/ 式/ (/ 2/ )/ 、/ (/ 3/ )/ 和/ 性质/ 1/ ,/ 可以/ 在/ 网络/ G/ (/ V/ ,/ E/ )/ 上/ 搜索/ top/ -/ k/ 紧密/ 中心/ 性/ 节点/ ./ 基本/ 思想/ 是/ 通过/ 逐个/ 扫描/ 网络/ G/ 上/ 的/ 连通/ 块/ ,/ 针对/ 每/ 一个/ 连通/ 块/ CCv/ ,/ 利用/ 计数/ 的/ 方式/ 计算/ 每个/ 连通/ 块/ 内/ 节点/ 的/ 最/ 短路/ 距离/ 之/ 和/ ./ 最终/ ,/ 利用/ 性质/ 1/ ,/ 能够/ 在/ Dmax/ 次/ 循环/ 求得/ 连通/ 块/ 内/ 所有/ 节点/ 的/ 最/ 短路/ 之/ 和/ ./ 算法/ 1/ 详细/ 展示/ 了/ 上述/ 过程/ ./ 对于/ 给定/ 的/ 网络/ G/ =/ (/ V/ ,/ E/ )/ ,/ 算法/ 枚举/ 遍历/ 网络/ 中/ 的/ 顶点/ v/ (/ 第/ 1/ 行/ )/ ,/ 如果/ 该/ 顶点/ v/ 没有/ 被/ 访问/ 过/ ,/ 即/ 其/ 不/ 属于/ 任何/ 被/ 处理/ 过/ 的/ 连通/ 块/ 中/ ,/ 算法/ 1/ 利用/ BFS/ 搜索/ 策略/ 找到/ 顶点/ v/ 所在/ 的/ 连通/ 块/ CCv/ ,/ 并/ 把/ 连通/ 块/ 内/ 的/ 所有/ 节点/ 标记/ 为/ 已/ 访问/ ;/ 否则/ 跳过/ 顶点/ v/ 继续/ 处理/ 下/ 一个/ 顶点/ (/ 第/ 1/ ~/ 4/ 行/ )/ ./ 对于/ 找到/ 的/ CCv/ ,/ 首先/ 利用/ 抽样/ 算法/ 估算/ CCv/ 的/ 直径/ Dmax/ (/ 第/ 5/ 行/ )/ ,/ 然后/ Dmax/ 次/ 迭代/ 利用/ 式/ (/ 2/ )/ 、/ (/ 3/ )/ 计算/ 连通/ 块/ 内/ 每个/ 顶点/ 的/ 最/ 短距离/ 之/ 和/ (/ 第/ 9/ ~/ 17/ 行/ )/ ./ 最后/ ,/ 根据/ 顶点/ 紧密/ 中心/ 性/ 的/ 计算公式/ 计算/ 相应/ 节点/ 的/ 紧密/ 中心/ 性/ ,/ 并/ 更新/ 结果/ 集合/ (/ 第/ 18/ 行/ )/ ./ 算法/ 1/ ./ 基于/ 计数/ 的/ top/ -/ k/ 紧密/ 中心/ 性/ 搜索算法/ ./ 输入/ :/ 网络/ G/ =/ (/ V/ ,/ E/ )/ ,/ k/ 输出/ :/ 紧密/ 中心/ 性/ top/ -/ k/ 的/ 节点/ 编号/ 1/ ./ ansSet/ ←/ / ;/ 2/ ./ forv/ ∈/ Vdo3/ ./ ifv/ 没有/ 被/ 访问/ 过/ then4/ ./ 计算/ 节点/ v/ 所在/ 的/ 连通/ 块/ CCv/ ,/ 并/ 把/ 连通/ 块/ 内/ 的/ 5/ ./ Dmax/ ←/ CCv/ 的/ 直径/ ;/ 6/ ./ forw/ ∈/ CCvdo7/ ./ N/ / 0/ (/ w/ )/ ←/ {/ w/ }/ ;/ 8/ ./ endfor9/ ./ ford/ ←/ 1toDmaxdo10/ ./ forw/ ∈/ CCvdo11/ ./ N/ / d/ (/ w/ )/ ←/ / ;/ 12/ ./ foru/ ∈/ Neighbor/ (/ w/ )/ do13/ ./ 14/ ./ endfor15/ ./ 16/ ./ endfor17/ ./ endfor18/ ./ forw/ ∈/ CCvdo19/ ./ 计算/ c/ (/ w/ )/ ,/ 即/ c/ (/ w/ )/ ←/ 20/ ./ 根据/ top/ -/ k/ 限制/ ,/ 利用/ c/ (/ w/ )/ 更新/ ansSet/ ;/ 21/ ./ endfor22/ ./ endif23/ ./ endfor24/ ./ returnansSet/ ;/ Page7/ 接下来/ ,/ 通过/ 一个/ 具体/ 例子/ 详细/ 介绍/ 基于/ 计数/ 的/ 紧密/ 中心/ 性/ 计算/ 过程/ ./ 给定/ 网络/ G/ 如图/ 2/ 所示/ 和表/ 4/ 不同/ 迭代/ 轮次/ 各/ 顶点/ 的/ 邻居/ 节点/ 集合/ d0123/ 图/ 21/ 个/ 包含/ 有/ 6/ 个/ 顶点/ 和/ 7/ 条边/ 的/ 无/ 向/ 无权/ 图/ 结合/ 算法/ 1/ ,/ 可知/ 基于/ 计数/ 的/ 紧密/ 中心/ 性/ 计算/ 一共/ 包含/ 3/ 轮/ 迭代/ ./ 在/ 初始化/ 阶段/ (/ 第/ 0/ 轮/ 迭代/ )/ ,/ 每个/ 顶点/ 的/ 邻居/ 集合/ 即/ 为/ 它/ 本身/ ,/ 如表/ 4/ 第/ 1/ 行/ 所示/ ./ 随着/ 迭代/ 的/ 进行/ ,/ 每个/ 顶点/ 的/ 集合/ 通过/ 其/ 邻居/ 顶点/ 的/ 上/ 一轮/ 迭代/ 的/ 邻居/ 集合/ 合并/ 得到/ 最新/ 的/ 集合/ 元素/ ./ 以/ 顶点/ a/ 为例/ ,/ 在/ 第/ 2/ 轮/ 结束/ 后/ ,/ 它/ 的/ 最/ 短路/ 距离/ 不/ 超过/ 2/ 的/ 邻居/ 集合/ ,/ NV/ / 2/ (/ a/ )/ =/ NV/ / 1/ (/ a/ )/ ∪/ NV/ / 1/ (/ e/ )/ ∪/ NV/ / 1/ (/ b/ )/ 直到/ 3/ 轮/ 迭代/ 结束/ ,/ 由于/ 本样/ 例是/ 个/ 连通/ 图/ ,/ 因此/ 每个/ 顶点/ 的/ 最/ 短路/ 距离/ 不/ 超过/ 3/ 的/ 邻居/ 集合/ 都/ 是/ {/ d/ ,/ c/ ,/ b/ ,/ f/ ,/ a/ ,/ e/ }/ ./ 复杂度/ 分析/ ./ 算法/ 1/ 中/ ,/ 每个/ 节点/ 需要/ 计算/ 关于/ 一定/ 距离/ 内可达/ 节点/ 的/ 集合/ 运算/ (/ 代码/ 第/ 13/ 行/ )/ ,/ 因此/ 每个/ 节点/ 需要/ 维护/ 上述/ 邻居/ 集合/ NV/ / d/ (/ u/ )/ ,/ 如表/ 4/ 所示/ ./ 令该/ 集合/ 的/ 平均/ 空间/ 大小/ 为/ Mcost/ ,/ 于是/ 算法/ 1/ 的/ 空间/ 复杂度/ 为/ O/ (/ nMcost/ )/ ./ 同样/ ,/ 时间/ 复杂度/ 为/ O/ (/ mDmaxTcost/ )/ ,/ 其中/ Tcost/ 是/ 指/ 计算/ 一次/ 邻居/ 集合/ 并/ 的/ 平均/ 时间/ 代价/ ./ 现实/ 世界/ 中/ 的/ 社交/ 网络/ 往往/ 一般/ 具有/ 小/ 世界/ 现象/ ,/ 一个/ 节点/ 与/ 其他/ 所有/ 节点/ 的/ 平均/ 最/ 短距离/ 比较/ 小/ ,/ 接近/ 于/ 常数/ [/ 16/ ]/ ,/ 即/ Dmax/ 相对/ 于/ 网络/ 规模/ 可/ 视为/ 常数/ ./ 因此/ 算法/ 1/ 的/ 时间/ 和/ 空间/ 代价/ 基本/ 由/ 邻居/ 集合/ 的/ 运算/ 和/ 大小/ 决定/ ./ 然而/ ,/ 在/ 计算/ 过程/ 中/ ,/ 随着/ d/ 的/ 增大/ ,/ 当/ d/ 接近/ Dmax/ 时/ ,/ 邻居/ 集合/ NV/ / d/ (/ u/ )/ 基本/ 接近/ 全图/ 顶点/ ,/ 使得/ 此/ 精确/ 算法/ 仍然/ 是/ 关于/ 网络/ 规模/ n/ 或/ m/ 的/ 多项式/ 算法/ ,/ 很难/ 扩展/ 到/ 大规模/ 的/ 网/ k/ =/ 2/ ./ 网络/ G/ 的/ 直径/ Dmax/ =/ 3/ ,/ 只有/ 一个/ 连通/ 块/ ./ 表/ 4/ 列出/ 了/ 不同/ 迭代/ 轮次/ 内/ 每个/ 顶点/ 的/ 邻居/ 集合/ ./ NV/ / d/ (/ d/ )/ {/ d/ ,/ c/ ,/ b/ ,/ f/ }/ {/ d/ ,/ c/ ,/ b/ ,/ f/ ,/ a/ ,/ e/ }/ 络图/ 上/ ./ 3.2/ 基于/ Sketch/ 的/ 近似算法/ 基于/ 计数/ 的/ 紧密/ 中心/ 性/ 计算/ 的/ 瓶颈/ 在于/ 维护/ NV/ / d/ (/ u/ )/ 和/ 计算/ 相应/ 的/ 集合/ 并/ ./ 即使/ 利用/ 位/ 图/ (/ bitmap/ )/ 为/ 每个/ 节点/ u/ 维护/ 精确/ 的/ NV/ / d/ (/ u/ )/ ,/ 只能/ 降/ 常数/ 级别/ 的/ 复杂度/ ,/ 算法/ 总体/ 上/ 仍然/ 需要/ 多项式/ 级别/ 的/ 空间/ 和/ 时间/ 复杂度/ ./ 笔者/ 利用/ Sketch/ 的/ 方法/ ,/ 为/ 每个/ 节点/ 维护/ 一个/ 近似/ 的/ NV/ / d/ (/ u/ )/ ,/ 从而/ 估算/ 节点/ 的/ 紧密/ 中心/ 性/ ./ 此法/ 称为/ 基于/ Sketch/ 的/ 紧密/ 中心/ 性/ 搜索算法/ ./ 首先/ ,/ 维护/ NV/ / d/ (/ u/ )/ 的/ 过程/ 可以/ 抽象/ 为/ “/ 从/ 节点/ u/ 开始/ 向外/ 扩展/ d/ 步/ ,/ 生成/ 一组/ 节点/ 的/ 访问/ 序列/ ,/ NV/ / d/ (/ u/ )/ 则/ 为此/ 序列/ 中/ 互不/ 相同/ 的/ 节点/ 的/ 集合/ ”/ ./ 集合/ 内/ 元素/ 的/ 数目/ 用/ |/ NV/ / d/ (/ u/ )/ |/ 表示/ ./ 换/ 而言/ 之/ ,/ 维护/ NV/ / d/ (/ u/ )/ 的/ 过程/ 就是/ 随着/ 节点/ 往外/ 扩展/ ,/ 算法/ 需要/ 动态/ 维护/ 集合/ NV/ / d/ (/ u/ )/ 中/ 不同/ 元素/ 的/ 个数/ ./ 在/ 2.5/ 节中/ 介绍/ 的/ FM/ -/ Sketch/ 恰好/ 是/ 一个/ 用于/ 估计/ 此/ 问题/ 的/ 很/ 好/ 的/ 数据结构/ ./ 这里/ 笔者/ 引入/ FM/ -/ Sketch/ 对/ |/ NV/ / d/ (/ u/ )/ |/ 进行/ 估计/ ./ 根据/ 之前/ 关于/ FM/ -/ Sketch/ 的/ 介绍/ ,/ 可以/ 知道/ FM/ -/ Sketch/ 具有/ 如下/ 几点/ 性质/ :/ (/ 1/ )/ FM/ -/ Sketch/ 的/ 值/ 与其/ 加入/ 元素/ 的/ 顺序/ 无关/ ;/ (/ 2/ )/ FM/ -/ Sketch/ 是/ 统计/ 一个/ 集合/ 内/ 不同/ 元素/ 的/ 个数/ ,/ 能/ 自动/ 过滤/ 掉/ 重复/ 元素/ ;/ (/ 3/ )/ 集合/ 并/ 运算/ 可以/ 简单/ 地/ 转化/ 为/ 基于/ FM/ -/ Sketch/ 的/ 逻辑/ “/ 或/ ”/ 运算/ ./ 例如/ ,/ 估计/ 两个/ 独立/ 的/ 集合/ A/ 和/ B/ 的/ 并/ 集/ C/ 中/ 包含/ 的/ 不同/ 元素/ 的/ 个数/ 可以/ 通过/ A/ 和/ B/ 的/ FM/ -/ Sketch/ 的/ “/ 或/ ”/ 运算/ 得到/ ,/ 即/ FM/ (/ C/ )/ =/ FM/ (/ A/ )/ |/ FM/ (/ B/ )/ ./ (/ 4/ )/ 具有/ 包含/ 关系/ 的/ 两个/ 集合/ 的/ 差集/ 大小/ 同样/ 可以/ 通过/ 相应/ FM/ -/ Sketch/ 的/ 差值/ 得到/ ./ 例如/ ,/ 给定/ 集合/ A/ 和/ B/ ,/ 且/ B/ / A/ ,/ 那么/ |/ A/ -/ B/ |/ =/ |/ FM/ (/ A/ )/ |/ -/ |/ FM/ (/ B/ )/ |/ ./ 结合/ FM/ -/ Sketch/ 的/ 上述/ 特性/ ,/ top/ -/ k/ 紧密/ 中心/ 性/ 搜索/ 的/ 算法/ 1/ 的/ 近似/ 版本/ 如/ 算法/ 2/ 所示/ ./ 此/ 近似算法/ 的/ 空间/ 复杂度/ 为/ O/ (/ tn/ )/ ,/ 其中/ t/ 是/ 维护/ FM/ -/ Page8Sketch/ 所/ 需/ 的/ 位数/ ;/ 时间/ 复杂度/ 为/ O/ (/ mtDmax/ )/ ./ 从/ 上面/ 我们/ 可以/ 发现/ ,/ 近似算法/ 由于/ 引入/ 了/ FM/ -/ Sketch/ 数据结构/ ,/ 虽然/ 牺牲/ 了/ 一定/ 的/ 结果/ 精度/ ,/ 但是/ 算法/ 的/ 空间/ 复杂度/ 变为/ 线性/ ,/ 时间/ 复杂度/ 仅/ 与/ 网络/ 的/ 边数/ 和/ 直径/ 相关/ ./ 由于/ 实际/ 网络/ 一般/ 比较/ 稀疏/ 和/ 具有/ 小/ 世界/ 现象/ ,/ 此/ 近似算法/ 时间/ 复杂度/ 基本/ 是/ 关于/ 网络/ 中边/ 的/ 数目/ 的/ 线性/ 时间/ 复杂度/ ./ 算法/ 2/ ./ 基于/ Sketch/ 的/ top/ -/ k/ 紧密/ 中心/ 性/ 搜索算法/ ./ 输入/ :/ 网络/ G/ =/ (/ V/ ,/ E/ )/ ,/ k/ 输出/ :/ 紧密/ 中心/ 性/ top/ -/ k/ 的/ 节点/ 编号/ 1/ ./ ansSet/ ←/ / ;/ 2/ ./ forv/ ∈/ Vdo3/ ./ ifv/ 没有/ 被/ 访问/ 过/ then4/ ./ 计算/ 节点/ v/ 所在/ 的/ 连通/ 块/ CCv/ ,/ 并/ 把/ 连通/ 块/ 内/ 的/ 5/ ./ Dmax/ ←/ CCv/ 的/ 直径/ ;/ 6/ ./ forw/ ∈/ CCvdo7/ ./ 8/ ./ endfor9/ ./ ford/ ←/ 1toDmaxdo10/ ./ forw/ ∈/ CCvdo11/ ./ FM/ / d/ (/ w/ )/ ←/ 012/ ./ foru/ ∈/ Neighbor/ (/ w/ )/ do13/ ./ 14/ ./ endfor15/ ./ 16/ ./ endfor17/ ./ endfor18/ ./ forw/ ∈/ CCvdo19/ ./ 计算/ c/ (/ w/ )/ ,/ 即/ c/ (/ w/ )/ ←/ 20/ ./ 根据/ top/ -/ k/ 限制/ ,/ 利用/ c/ (/ w/ )/ 更新/ ansSet/ ;/ 21/ ./ endfor22/ ./ endif23/ ./ endfor24/ ./ returnansSet/ ;/ 3.3/ 近似算法/ 精度/ 讨论/ 及/ 优化/ 接下来/ 笔者/ 讨论/ 算法/ 结果/ 精度/ 与/ FM/ -/ Sketch/ 精度/ 的/ 关系/ ./ 直观/ 的/ 感觉/ 是/ 如果/ FM/ -/ Sketch/ 的/ 估计/ 结果/ 越/ 精确/ ,/ 那么/ 算法/ 2/ 产生/ 的/ 结果/ 精度/ 也/ 就/ 越/ 高/ ./ 定理/ 1/ 给出/ 了/ 详细/ 的/ 理论/ 分析/ ./ 定理/ 1/ ./ 如果/ 一个/ 连通/ 网络/ 的/ 直径/ 为/ D/ ,/ 那么/ 算法/ 2/ 得到/ 的/ 每/ 一个/ 节点/ 的/ 最/ 短路/ 距离/ 和/ s/ (/ u/ )/ 的/ 方差/ δ/ s/ 为/ 其中/ ,/ δ/ FMd/ 的/ 节点/ 数目/ 的/ 方差/ ./ 证明/ ./ 根据/ 算法/ 2/ 中/ 第/ 10/ 行/ 代码/ 可知/ s/ (/ u/ )/ =/ ∑/ 由于/ FM/ -/ Sketch/ 的/ 方差/ 仅/ 与其/ 使用/ 的/ 哈希/ 函数/ 相关/ ,/ 不同/ 距离/ 的/ FM/ -/ Sketch/ 估计/ 相互/ 独立/ ./ 于是/ 可以/ 得到/ 根据/ 定理/ 1/ ,/ 为了/ 提高/ 算法/ 2/ 的/ 精度/ ,/ 原则/ 是/ 提升/ 节点/ 数目/ 估计/ 的/ 精度/ ./ 这里/ 我们/ 介绍/ 一种/ 启发式/ 规则/ ,/ 能/ 有效/ 提升/ 算法/ 精度/ ./ 在/ 一定/ 的/ 内存/ 开销/ 下/ ,/ 即/ t/ 固定/ ,/ 当/ 估计/ 的/ 集合/ 大小/ 与/ 对应/ 的/ FM/ -/ Sketch/ 能/ 表示/ 的/ 最大/ 数目/ 接近/ 时/ ,/ 估计/ 精度/ 越高/ ./ 然而/ ,/ 在/ d/ 比较/ 小/ 的/ 时候/ ,/ 如/ d/ 为/ 1/ 或/ 2/ ,/ 由于/ 访问/ 的/ 节点/ 数目/ 过/ 小/ ,/ FM/ 的/ 估计/ 精度/ 很/ 低/ ./ 考虑/ 到/ d/ 较/ 小/ 的/ 时候/ ,/ 节点/ 数目/ 不/ 多/ ,/ 直接/ 精确/ 计算/ 节点/ 数目/ 的/ 代价/ 也/ 很小/ ./ 这样/ 笔者/ 为/ 算法/ 2/ 引入/ 了/ 如下/ 启发式/ 规则/ ./ 启发式/ 规则/ ./ 当/ d/ =/ 1/ ,/ 2/ 时/ ,/ 算法/ 2/ 精确/ 计算/ 节点/ 数目/ ;/ 当/ d/ >/ 2/ 时/ ,/ 算法/ 2/ 利用/ FM/ -/ Sketch/ 估计/ 相应/ 节点/ 数目/ ./ 从/ 后续/ 的/ 实验/ 可以/ 看出/ ,/ 此/ 启发式/ 规则/ 在/ 处理/ 的/ 网络/ 数据/ 直径/ 比较/ 小/ 的/ 时候/ ,/ 能/ 有效/ 提升/ 算法/ 的/ 精度/ ./ 4/ 实验/ 与/ 算法/ 比较/ 分析/ 本/ 节/ 通过/ 实验/ 测试/ ,/ 验证/ 基于/ Sketch/ 的/ 紧密/ 中心/ 性/ 节点/ 搜索算法/ 在/ 大规模/ 网络/ 数据/ 上/ 的/ 处理/ 性能/ ./ 4.1/ 实验/ 环境/ 本文/ 实验/ 运行/ 在/ 一台/ Linux/ 服务器/ 上/ ,/ 此/ 服务器/ 装有/ 2/ 个/ Xeon/ (/ R/ )/ E5530/ @/ 2.40/ GHz/ 的/ CPU/ ,/ 96GB/ 内存/ 以及/ 4/ 个/ 2TB/ 硬盘/ ./ 实验/ 中/ 涉及/ 的/ 网络/ 数据/ 由/ 两类/ 组成/ :/ 一是/ 由/ 开源/ 软件/ NetworkX/ ①/ 生成/ 的/ 模拟/ 网络/ 数据/ ;/ 二是/ 斯坦福大学/ 的/ SNAP/ 网站/ ②/ 下载/ 得到/ 的/ 真实/ 网络/ 数据/ ./ 其中/ ,/ 生成/ 模拟/ 网络/ ①/ ②/ Page9/ 数据/ 的/ 模型/ 是/ Holme/ -/ Kim/ 生长/ 模型/ [/ 17/ ]/ ./ 此/ 模型/ 生成/ 的/ 图用/ GHK/ (/ n/ ,/ c/ )/ 表示/ ,/ n/ 是/ 顶点/ 数目/ ,/ c/ 代表/ 为表/ 5/ 网络/ 元/ 数据/ 信息网络/ 类型/ 模拟/ 图/ 真实/ 图/ 精确/ 算法/ ,/ Δ/ -/ pfs/ 算法/ ;/ 效果/ 最好/ 的/ 近似算法/ ,/ RAND/ 算法/ ,/ 其中/ ε/ =/ 0.1/ ;/ 本文/ 设计/ 的/ Sketch/ 算法/ ;/ 以及/ 加入/ 启发式/ 规则/ 优化/ 的/ Sketch/ 算法/ ,/ 记为/ Sketch2hop/ 算法/ ./ 另外/ ,/ Sketch/ 算法/ 中/ 使用/ 的/ FM/ -/ Sketch/ 的/ 相关/ 参数/ 如下/ :/ bitmap/ 的/ 比特/ 位数/ 设置/ 为/ 24/ ,/ 即/ t/ =/ 24/ ,/ 这样/ 基本/ 能/ 统计/ 约/ 224/ 个/ 不同/ 元素/ 的/ 结合/ ;/ 使用/ 一个/ 哈希/ 函数/ ;/ 哈希/ 值/ 被/ 分成/ 128/ 组/ ,/ 即/ m/ =/ 128/ ./ 上述/ 算法/ 的/ 性能/ 主要/ 从/ 两/ 方面/ 进行/ 比较/ :/ 第一/ 是/ 算法/ 运行/ 时间/ ;/ 第二/ 是/ 算法/ 的/ 结果/ 精度/ ./ 时间/ 性能/ 是/ 算法/ 重复/ 运行/ 10/ 次/ 的/ 平均/ 时间/ ,/ 精确/ 到/ 0.01/ s/ ./ 结果/ 精度/ 用/ 准确率/ (/ precision/ )/ 表示/ ./ 一组/ top/ -/ k/ 结果/ 的/ 准确率/ 按/ 如下/ 公式/ 计算/ :/ precision/ @/ k/ =/ 4.2/ FM/ -/ Sketch/ 精度/ 与/ 算法/ 精度/ 关系/ 由/ 定理/ 1/ 可知/ ,/ 本文/ 算法/ 的/ 精度/ 与/ FM/ -/ Sketch/ 的/ 精度/ 有着/ 紧密/ 的/ 联系/ ,/ 即/ FM/ -/ Sketch/ 的/ 估计/ 精度/ 越高/ ,/ 本文/ 的/ Sketch/ 算法/ 的/ 精度/ 也/ 越/ 高/ ./ 笔者/ 通过/ 下面/ 这组/ 实验/ 验证/ 了/ 上述/ 观点/ ./ 表/ 6Sketch/ ,/ Sketch2hop/ ,/ RAND/ 和/ Δ/ -/ pfs/ 这/ 4/ 种/ 算法/ 在/ 不同/ 数据/ 集上/ 的/ 时间/ 性能/ SketchSketch2hopRAND/ Δ/ -/ pfsSketchSketch2hopRAND/ Δ/ -/ pfs/ 每个/ 新/ 生成/ 的/ 顶点/ 加入/ 的/ 边数/ ./ 表/ 5/ 列出/ 了/ 实验所/ 使用/ 的/ 网络/ 的/ 具体/ 信息/ ./ 由/ 2.5/ 节/ 分析/ 可知/ ,/ FM/ -/ Sketch/ 的/ 精度/ 可以/ 通过/ 增大/ 分组/ 数/ m/ 得到/ ./ 图/ 3/ 展示/ 了/ 在/ 真实/ 图/ loc/ -/ gowalla/ 和/ com/ -/ youtube/ 以及/ 模拟/ 图/ GHK/ (/ 10k/ ,/ 20/ )/ 和/ GHK/ (/ 50k/ ,/ 20/ )/ 上/ m/ 从/ 8/ 变到/ 1024/ 过程/ 中/ ,/ Sketch/ 算法/ 结果/ 精度/ 的/ 变化/ ./ 从图/ 上/ 可以/ 明显/ 看出/ ,/ Sketch/ 算法/ 的/ 精度/ 随着/ 分组/ 数/ 的/ 变大/ (/ 即/ FM/ -/ Sketch/ 的/ 估计/ 精度/ 提高/ )/ 而/ 变大/ ./ 例如/ ,/ 在/ 真实/ 数据/ 图/ com/ -/ youtube/ 上/ ,/ 当/ m/ =/ 16/ 时/ ,/ Sketch/ 算法/ 精度/ 是/ 64.08/ %/ ,/ 当/ m/ 增大/ 到/ 1024/ 时/ ,/ Sketch/ 算法/ 的/ 结果/ 精度/ 约/ 为/ 94.08/ %/ ./ 这里/ 需要/ 注意/ 的/ 一点/ 是/ ,/ 在/ 模拟/ 图/ GHK/ (/ 10k/ ,/ 20/ )/ 上/ ,/ 当/ m/ =/ 32/ 时/ ,/ Sketch/ 算法/ 精度/ 略/ 差于/ m/ =/ 16/ 时/ 的/ 精度/ ,/ 这是/ 由于/ 本文/ 只用/ 一个/ 哈希/ 函数/ 以及/ 数据/ 特征/ 的/ 特殊性/ 造成/ 的/ ./ 4.3/ 算法/ 时间/ 性能/ 比较/ 本/ 节/ 实验/ 详细/ 比较/ 了/ 4/ 种/ 算法/ 的/ 时间/ 性能/ ./ 从/ 实验/ 结果/ 可以/ 看出/ ,/ 不管/ 在/ 真实/ 图/ 还是/ 在/ 模拟/ 图上/ ,/ Sketch/ 算法/ 时间/ 性能/ 最好/ ,/ 比/ 精确/ 算法/ Δ/ -/ pfs/ 快/ 2/ 个/ 数量级/ ,/ 比/ RAND/ 算法/ 快/ 2/ ~/ 3/ 倍/ 左右/ ./ 这个/ 性能/ 差距/ 在/ 大规模/ 的/ 网络/ 数据/ 上/ 表现/ 尤为/ 明显/ ./ 表/ 6/ 列出/ 了/ 各个/ 算法/ 在/ 不同/ 类型图/ 上/ 的/ 性能/ ./ GHK/ (/ 40k/ ,/ 20/ )/ Page10/ 图/ 3Sketch/ 算法/ 精度/ (/ MAP/ @/ 50/ )/ 与/ FM/ -/ Sketch/ 分组/ 数/ (/ m/ )/ 的/ 变化/ 关系/ 例如/ ,/ 在/ com/ -/ youtube/ 数据/ 上/ ,/ 求解/ top/ -/ 50/ 的/ 紧密/ 中心/ 性/ 搜索/ 问题/ ,/ Δ/ -/ pfs/ 耗时/ 12208s/ ;/ 而/ Sketch/ 算法/ 仅/ 需要/ 44s/ ./ RAND/ 算法/ 耗时/ 接近/ Sketch/ 算法/ 的/ 两倍/ ,/ 83s/ ./ 在/ LiveJournal/ 网络/ 上/ ,/ 精确/ 算法/ 在/ 48h/ 内/ 仍然/ 无法/ 求得/ 结果/ ,/ Sketch/ 算法/ 大约/ 10min/ 左右/ 返回/ 结果/ ./ Sketch/ 算法/ 的/ 优秀/ 的/ 性能/ 得益于/ 其/ 基于/ FM/ -/ Sketch/ 的/ 快速/ 统计/ ./ 另外/ ,/ 从/ 结果/ 可以/ 发现/ ,/ Sketch2hop/ 算法/ 时间/ 性能/ 虽然/ 略/ 差于/ Sketch/ 算法/ ,/ 但是/ 其/ 时间/ 性能/ 仍/ 优于/ RAND/ 和/ Δ/ -/ pfs/ 算法/ 的/ 时间/ 性能/ ./ 这/ 说明/ 启发式/ 规则/ 对/ 算法/ 时间/ 性能/ 的/ 影响/ 不/ 大/ ,/ 可以/ 接受/ ./ 4.4/ 算法/ 结果/ 精度/ 比较/ 本/ 节/ 实验/ 对比/ 了/ 3/ 种/ 近似算法/ 的/ 结果/ 精度/ ,/ 准确/ 的/ 结果/ 由/ Δ/ -/ pfs/ 算法/ 生成/ ./ 由于/ Livejournal/ 的/ 精确/ 结果/ 无法/ 在/ 一定/ 的/ 时间/ 内/ 得到/ ,/ 本文/ 没有/ 比较/ 该图/ 上/ 的/ 结果/ 精度/ ./ 实验/ 过程/ 中/ ,/ 每个/ 算法/ 分别/ 计算/ 了/ top/ -/ 1/ 至/ top/ -/ 50/ 的/ 精度/ ./ 图/ 4/ 展示/ 了/ loc/ -/ gowalla/ ,/ com/ -/ youtube/ ,/ GHK/ (/ 10k/ ,/ 20/ )/ 和/ GHK/ (/ 50k/ ,/ 20/ )/ 这/ 4/ 个/ 数据/ 集上/ 精度/ 随/ k/ 的/ 变化/ 的/ 情况/ ./ 从图/ 上/ 可以/ 发现/ ,/ 基于/ Sketch/ 的/ 算法/ 的/ 精度/ 在/ 真实/ 图/ 和/ 模拟/ 图上/ 均/ 比/ RAND/ 算法/ 高/ ,/ 不过/ 在/ 不同/ 类型图/ 上/ 提升/ 效果/ 不同/ ./ 在/ 直径/ 较大/ 的/ 真实/ 社交/ 网络/ 中/ ,/ Sketch/ 算法/ 的/ 精度/ 能比/ RAND/ 高/ 40/ %/ ~/ 60/ %/ ;/ 而/ 在/ 直径/ 较/ 小/ 的/ 图上/ 优势/ 略有/ 下降/ ,/ 精度/ 提升/ 基本/ 在/ 3/ %/ ~/ 8/ %/ ./ 另外/ ,/ 启发式/ 规则/ 在/ 直径/ 较/ 小/ 的/ 网络/ 上/ 优化/ 效果/ 明显/ ,/ Sketch2hop/ 算法/ 的/ 精度/ 比/ Sketch/ 算法/ 高/ 10/ %/ 左右/ ;/ 而/ 在/ 直径/ 较大/ 的/ 网络/ 上/ 优化/ 效果/ 不/ 明显/ ./ 从/ 定理/ 1/ 可知/ ,/ 直径/ 越大/ ,/ 误差/ 越大/ ,/ 使得/ 启发式/ 规则/ 的/ 优化/ 效果/ 从/ 整体/ 上/ 看/ 就/ 不/ 明显/ ./ 其他/ 数据/ 集上/ 的/ 精度/ 结果/ 在/ 不同/ 的/ k/ 值上/ 的/ 变化/ 与/ 上述/ 4/ 个/ 数据/ 集/ 的/ 情况/ 类似/ ,/ 本文/ 不/ 一一/ 展示/ 结果/ ./ 表/ 7/ 列出/ 了/ 各个/ 数据/ 集上/ top/ -/ 1/ 至/ top/ -/ 50/ 的/ 平均/ 精度/ ,/ 即/ MAP/ @/ 50/ 指标/ ./ 从表中/ 同样/ 可以/ 发现/ Sketch/ 系列/ 算法/ 的/ 精度/ 比/ RAND/ 算法/ 高/ ./ 其中/ Sketch2hop/ 算法/ 在/ 模拟/ 图上/ 精度/ 可以/ 达到/ 100/ %/ ,/ 即/ 精确/ 结果/ ./ 这/ 是因为/ 模拟/ 图/ 直径/ 很小/ ,/ 从表/ 5/ 可知/ ,/ 直径/ 均/ 是/ 3/ ,/ 这样/ 结合/ 启发式/ 规则/ ,/ 精确/ 统计/ 二/ 跳/ 以内/ 邻居/ 数目/ ,/ 从/ 性能/ 角度/ 分析/ ,/ Sketch2hop/ 算法/ 与/ 精确/ 算法/ 几乎/ 等价/ ./ Page11/ 图/ 4/ 不同/ 网络/ 数据/ 上/ 的/ 精度/ 与/ k/ 的/ 关系/ 表/ 7Sketch/ ,/ Sketch2hop/ 和/ RAND/ 算法/ 在/ 不同/ 数据/ 集上/ 的/ MAP/ @/ 50/ // %/ GHK/ (/ 30k/ ,/ 20/ )/ 86.08100/ ./ 0089.30/ email/ -/ Enron86/ ./ 7589.8814/ ./ 16SketchSketch2hopRANDSketchSketch2hopRAND5/ 相关/ 工作/ 接下来/ 首先/ 回顾/ 下/ 网络/ 中/ 各类/ 中心/ 性/ 的/ 度量/ ,/ 然后/ 介绍/ 与/ 紧密/ 中心/ 性/ 计算/ 相关/ 的/ 工作/ ./ 5.1/ 多种/ 中心/ 性/ 度量/ 本/ 节/ 介绍/ 各类/ 中心/ 性/ 的/ 度量/ 方式/ ./ 首先/ ,/ 基于/ 度/ (/ degree/ )/ 定义/ 的/ 中心/ 性/ Cdeg/ 是/ 最/ 流行/ 且/ 最/ 直接/ 的/ 一种/ 定义/ ./ 此/ 中心/ 性即/ 为/ 相应/ 节点/ 的/ 度数/ ,/ 一个/ 节点/ 关联/ 的/ 边/ 越/ 多/ 就/ 越/ 重要/ [/ 9/ ,/ 18/ ]/ ./ 进一步/ ,/ 基于/ 度/ 的/ 中心/ 性/ 可以/ 解释/ 为/ 统计/ 了/ 节点/ 周围/ 路径/ 长度/ 为/ 1/ 的/ 路径/ 数目/ ./ 在/ 此基础/ 上/ ,/ 一个/ 直接/ 的/ 泛化/ 就是/ 利用/ 节点/ 周围/ 长度/ 为/ K/ 的/ 路径/ 数目/ 表示/ 节点/ 的/ 重要性/ ,/ 称为/ K/ -/ Path/ 中心/ 性/ ./ 从/ 路径/ 长度/ 定义/ 类型/ 的/ 不同/ 角度/ 出发/ ,/ K/ -/ Path/ 中心/ 性/ 也/ 产生/ 了/ 很多/ 变种/ :/ 基于/ 距离/ 的/ K/ -/ Path/ 中心/ 性/ ,/ 边/ 独立/ 的/ K/ -/ Path/ 中心/ 性/ 和/ 节点/ 独立/ 的/ K/ -/ Path/ 中心/ 性/ [/ 19/ ]/ ./ 另外/ ,/ 以/ 通路/ (/ walk/ )/ 的/ 概念/ 为/ 基础/ ,/ 也/ 产生/ 了/ 多种/ 相应/ 的/ 中心/ 性/ 概念/ ./ 其中/ ,/ Katz/ 中心/ 性/ [/ 20/ ]/ 用/ 节点/ 出发/ 的/ 通路/ 数目/ 表示/ ,/ 形式化/ 表示/ 为/ 犲/ T/ 其中/ 犲/ i/ 是/ 一个/ 第/ i/ 个/ 位置/ 为/ 1/ ,/ 其他/ 位置/ 为/ 0/ 的/ 列/ 向量/ ./ β/ 是/ 一个/ 大于/ 0/ 的/ 惩罚/ 系数/ ,/ 为了/ 反映/ 路径/ 越长/ ,/ 其/ 对/ 中心/ 性/ 的/ 贡献/ 越小/ ./ 在/ Katz/ 中心/ 性/ 基础/ 上/ ,/ 产生/ 了/ Bonacich/ 中心/ 性/ ,/ 其/ 形式化/ 为/ 犲/ T/ 允许/ β/ 取/ 负值/ ./ Katz/ 中心/ 性/ 和/ Bonacich/ 中心/ 性/ 都/ 是/ Page12Hubbell/ 中心/ 性/ 的/ 特殊/ 形式/ ./ Hubbell/ 中心/ 性/ 可以/ 表示/ 为/ 犲/ Ti/ ∑/ 上述/ 基于/ 度/ 的/ 中心/ 性/ 定义/ 中/ ,/ 除了/ 度/ 中心/ 性/ 可以/ 在/ 多项式/ 时间/ 复杂度/ 内/ 进行/ 计算/ 以外/ ,/ 其他/ 的/ 中心/ 性均/ 具有/ 较/ 高/ 的/ 时间/ 复杂度/ ,/ 无法/ 进行/ 高效/ 计算/ ./ 为了/ 从/ 网络/ 的/ 全局/ 信息/ 衡量/ 一个点/ 的/ 重要性/ ,/ 提出/ 了/ 基于/ 信息流/ 的/ 节点/ 中心/ 性/ 定义/ ./ 其中/ ,/ PageRank/ [/ 18/ ]/ ,/ HIT/ [/ 21/ ]/ 等/ 用来/ 衡量/ 一个/ 网页/ 节点/ 在/ 整个/ 网络/ 中/ 的/ 重要性/ 的/ 指标/ 就是/ 经典/ 的/ 基于/ 信息流/ 的/ 中心/ 性/ 定义/ ./ 与/ 紧密/ 中心/ 性/ 类似/ ,/ 同样/ 基于/ 最/ 短路/ 定义/ 的/ 一个/ 中心/ 性叫/ 中介/ 中心/ 性/ (/ betweennesscentrality/ )/ [/ 9/ ,/ 22/ -/ 23/ ]/ ,/ 它/ 的/ 具体/ 定义/ 如下/ :/ 其中/ ,/ δ/ st/ 是/ 指/ 节点/ s/ 和/ t/ 之间/ 最/ 短路/ 的/ 数目/ ,/ 而/ δ/ st/ (/ u/ )/ 是/ 指/ 节点/ s/ 和/ t/ 之间/ 经过/ 节点/ u/ 的/ 最/ 短路/ 的/ 数目/ ./ 由/ 定义/ 可知/ ,/ 中介/ 中心/ 性/ 反映/ 了/ 一个点/ 在/ 信息/ 传播/ 过程/ 中/ 的/ 重要性/ ./ 另外/ ,/ 通过/ 上述/ 公式/ 可以/ 发现/ ,/ 中介/ 中心/ 性/ 的/ 计算/ 相对/ 紧密/ 中心/ 性/ 更为/ 复杂/ ,/ 即使/ 计算/ 一个点/ 的/ 中介/ 中心/ 性/ ,/ 都/ 需要/ 先/ 计算/ 全局/ 点/ 对间/ 的/ 最/ 短路/ ./ 关于/ 中介/ 中心/ 性/ 计算方法/ 的/ 研究/ 可以/ 参考文献/ [/ 22/ -/ 23/ ]/ ./ 本文/ 重点/ 研究/ 了/ 基于/ 紧密/ 中心/ 性/ 的/ top/ -/ k/ 节点/ 搜索/ 问题/ ./ 一种/ 标准/ 做法/ 是/ 结合/ 阈值/ 和/ 一定/ 的/ 估算/ 上界值/ ,/ 维护/ 一个/ 前/ k/ 大/ 的/ 节点/ 集合/ ./ 当上界值/ 比/ 阈值/ 小/ 的/ 时候/ ,/ 当前/ 的/ 前/ k/ 大/ 节点/ 集合/ 即/ 为/ 最终/ 结果/ 集合/ ./ 多数/ 精确/ 算法/ ,/ 利用/ 上述/ 框架/ 进行/ 剪枝/ ,/ 提升/ 算法/ 性能/ ./ 5.2/ 关于/ 紧密/ 中心/ 性/ 搜索/ 的/ 精确/ 算法/ 接下来/ ,/ 笔者/ 介绍/ 除/ Δ/ -/ pfs/ 算法/ 外/ 的/ 关于/ 紧密/ 中心/ 性/ 搜索/ 的/ 精确/ 算法/ ./ 一种/ 简单/ 直接/ 的/ 精确/ 算法/ 是/ 利用/ 全局/ 最短/ 路径/ 算法/ (/ All/ -/ PairsShortestPath/ )/ 计算/ 网络/ 上/ 任意/ 节点/ 对/ 之间/ 的/ 最/ 短/ 路径/ 距离/ ,/ 然后/ 对/ 计算结果/ 进行/ 排序/ ,/ 取/ 排名/ 前/ k/ 的/ 节点/ 即可/ 得到/ 结果/ ./ 利用/ Floyd/ -/ Warshall/ 算法/ [/ 24/ ]/ 计算/ 全局/ 点/ 对/ 之间/ 的/ 最/ 短路/ ,/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ n3/ )/ 和/ 空间/ 复杂度/ 为/ O/ (/ n2/ )/ ./ 一种/ 优化/ 策略/ 是/ 利用/ 单源/ 最/ 短路/ Dijkstra/ 算法/ [/ 25/ ]/ 和/ Fibonacci/ 堆/ [/ 26/ ]/ 计算/ 每/ 一个/ 节点/ 的/ 单源/ 最/ 短/ 路径/ ,/ 从而/ 得到/ 节点/ 的/ 紧密/ 中心/ 性/ ./ 优化/ 后/ 的/ 精确/ 算法/ 的/ 时间/ 复杂度/ 是/ O/ (/ nm/ +/ n2logn/ )/ ,/ 适合/ 于/ 稀疏/ 的/ 网络/ ./ 另外/ ,/ 还有/ 研究/ 工作/ 通过/ 构建/ 索引/ 快速/ 查找/ 一个点/ 对/ 之间/ 的/ 最/ 短路/ [/ 27/ ]/ ;/ 然后/ ,/ 通过/ 实验/ 发现/ ,/ 基于/ 索引/ 的/ 方法/ 比/ 直接/ 利用/ Dijkstra/ 算法/ 计算/ 最/ 短路/ 性能/ 差/ [/ 27/ ]/ ,/ 这/ 是因为/ 紧密/ 中心/ 性/ 的/ 计算/ 需要/ 不断/ 重复/ 访问/ 或/ 计算/ 点/ 对/ 之间/ 的/ 最/ 短路/ ./ 然而/ ,/ 目前/ 存在/ 的/ 精确/ 算法/ ,/ 包括/ Δ/ -/ pfs/ 算法/ ,/ 在/ 时间/ 和/ 空间/ 复杂度/ 上/ 仍然/ 是/ 多项式/ 的/ ,/ 无法/ 高效/ 处理/ 现实/ 世界/ 中/ 的/ 大规模/ 网络/ 数据/ ./ 而/ 本文/ 的/ 工作/ 主要/ 针对/ 新/ 的/ 近似算法/ 的/ 设计/ 和/ 优化/ ./ 5.3/ 关于/ 紧密/ 中心/ 性/ 搜索/ 的/ 近似算法/ 为了/ 能/ 在/ 大规模/ 网络/ 上/ 高效/ 计算/ 紧密/ 中心/ 性/ 搜索/ 问题/ ,/ 不少/ 相关/ 工作/ 通过/ 设计/ 近似算法/ 对/ 紧密/ 中心/ 性/ 进行/ 估计/ ,/ 然后/ ,/ 基于/ 估计/ 的/ 紧密/ 中心/ 性/ ,/ 获得/ 近似/ 的/ top/ -/ k/ 紧密/ 中心/ 性/ 节点/ ./ 除了/ 在/ 2.4/ 节/ 提到/ 的/ RAND/ 算法/ 之外/ ,/ Brandes/ 和/ Pich/ [/ 28/ ]/ 在/ RAND/ 算法/ 基础/ 之上/ ,/ 从/ 如何/ 选择/ s/ 个/ 种子/ 节点/ 的/ 角度/ 深入/ 讨论/ 了/ 此/ 算法/ 并/ 设计/ 了/ 4/ 种/ 拓展/ ,/ 分别/ 为/ MaxMin/ ,/ MaxSum/ ,/ MinSum/ 和/ Mixed/ ./ MaxMin/ 策略/ 每次/ 选择/ 离/ 之前/ 选中/ 节点/ 越远/ 的/ 点/ 作为/ 下/ 一个/ 种子/ 节点/ ./ MaxSum/ 策略/ 每次/ 选择/ 与/ 之前/ 选中/ 节点/ 距离/ 之/ 和/ 最大/ 的/ 点/ 作为/ 下/ 一个/ 种子/ 节点/ ./ Mixed/ 策略/ ,/ 为了/ 避免/ 上述/ 两种/ 策略/ 过度/ 估算/ 距离/ ,/ 利用/ round/ -/ robin/ 方式/ 混合/ 循环/ 使用/ RAND/ ,/ MaxMin/ ,/ MaxSum/ 策略/ 选择/ 下/ 一个/ 种子/ 节点/ ./ 另外/ ,/ Kang/ 等/ 人/ [/ 29/ ]/ 对/ 紧密/ 中心/ 性/ 进行/ 了/ 重新/ 定义/ ,/ 提出/ 了/ effectivecloseness/ 的/ 概念/ 并/ 利用/ MapReduce/ 并行计算/ 框架/ 进行/ 求解/ ./ 其中/ ,/ effectivecloseness/ 是/ 指/ 利用/ 近似/ 的/ 平均/ 距离/ 估算/ 的/ 相应/ 的/ 紧密/ 中心/ 性/ ./ 与/ 上述/ 算法/ 不同/ 的/ 是/ 本文/ 提出/ 的/ 近似算法/ 重新考虑/ 了/ 紧密/ 中心/ 性/ 的/ 计算/ 结构/ ,/ 通过/ 以/ 计数/ 的/ 方式/ 进行/ 求解/ ./ 5.4/ 关于/ 紧密/ 中心/ 性/ 搜索/ 的/ 混合/ 算法/ 框架/ 在/ 处理/ 大规模/ 网络/ 数据/ 时/ ,/ 精确/ 算法/ 无法/ 保证/ 性能/ ,/ 而/ 近似算法/ 虽然/ 高效/ ,/ 但/ 得到/ 的/ 结果/ 却是/ 近似/ 的/ ./ 为了/ 解决/ 这个/ 矛盾/ ,/ Okamoto/ 等/ 人/ [/ 30/ ]/ 提出/ 了/ 综合利用/ 精确/ 算法/ 和/ 近似算法/ 的/ 混合/ 计算/ 框架/ ./ 在/ 处理/ top/ -/ k/ 紧密/ 中心/ 性/ 搜索/ 问题/ 时/ ,/ 此/ 框架/ 首先/ 利用/ 近似算法/ 选出/ k/ (/ k/ </ k/ / n/ )/ 个/ 候选/ 节点/ ,/ 然后/ 对/ 每/ 一个/ 候选/ 节点/ 利用/ 精确/ 算法/ 计算/ 相应/ 的/ 准确/ 的/ 紧密/ 中心/ 性/ ,/ 最终/ 选出/ 前/ k/ 个/ 节点/ 作为/ 结果/ ./ Okamoto/ 在/ RAND/ 算法/ 基础/ 上/ 通过/ 设置/ 阈值/ δ/ 选择/ k/ 个/ 节点/ ,/ 然后/ 把/ 与/ k/ 号/ 节点/ 的/ 估计/ 紧密/ 中心/ 性之差/ 小于/ δ/ 的/ 节点/ 全部/ 纳入/ 候选/ 节点/ ,/ 从而/ 很大/ 概率/ 地/ 保证/ Page13/ 最终/ 结果/ 的/ 正确性/ ./ 然而/ ,/ 在/ 实际/ 应用/ 中/ ,/ 由于/ RAND/ 算法/ 的/ 精度/ 问题/ ,/ 计算/ 得到/ 候选/ 节点/ 数目/ 过多/ ,/ 甚至/ 能/ 包含/ 整个/ 网络/ 的/ 节点/ ,/ 导致/ Okamoto/ 的/ 混合/ 算法/ 框架/ 性能/ 也/ 不/ 理想/ ./ 本文/ 提出/ 的/ 基于/ Sketch/ 的/ 紧密/ 中心/ 性/ 搜索算法/ 可以/ 替代/ RAND/ 算法/ 应用/ 到/ 混合/ 框架/ 内部/ ./ 从/ RAND/ 算法/ 和/ 基于/ Sketch/ 的/ 算法/ 实验/ 比较/ 中/ 可以/ 看出/ ,/ Sketch/ 算法/ 不仅/ 性能/ 优于/ RAND/ 算法/ ,/ 同时/ 结果/ 精度/ 也/ 高/ ./ 6/ 总结/ 社交/ 网络/ 发展/ 的/ 规模/ 越来越/ 大/ ,/ 基于/ 社交/ 网络/ 的/ 分析/ 已经/ 成为/ 各类/ 实际/ 应用/ 不可或缺/ 的/ 分析/ 手段/ ./ 本文/ 重点/ 研究/ 了/ 基于/ 紧密/ 中心/ 性/ 的/ 网络/ 上/ 重要/ 节点/ 发现/ 的/ 算法/ ./ 为了/ 能够/ 很/ 好/ 地/ 处理/ 大规模/ 网络/ 数据/ ,/ 笔者/ 设计/ 了/ 基于/ Sketch/ 的/ 近似/ 搜索算法/ ,/ 并/ 通过/ 详细/ 的/ 实验/ 验证/ ,/ 基于/ Sketch/ 的/ 近似/ 搜索算法/ 相对/ 于/ 其他/ 精确/ 算法/ 和/ 近似算法/ 在/ 性能/ 和/ 和/ 精度/ 两/ 方面/ 的/ 优势/ ./ 在/ 本文/ 工作/ 基础/ 上/ ,/ 笔者/ 将/ 利用/ 并行计算/ 进一步/ 提升/ 算法/ 性能/ ,/ 设计/ 并行/ 的/ top/ -/ k/ 紧密/ 中心/ 性/ 搜索/ 框架/ ,/ 另外/ ,/ 考虑/ 到/ 实际/ 中/ 社交/ 网络/ 频繁/ 发生变化/ ,/ 后续/ 也/ 将/ 此/ 算法/ 拓展/ 到/ 处理/ 动态变化/ 的/ 网络/ ./ 

