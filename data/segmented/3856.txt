Page1/ 基于/ 存储/ 级/ 并行/ 的/ 同时/ 多线程/ 电压/ 紧急/ 容错/ 技术/ 胡杏/ 1/ )/ ,/ 2/ )/ 潘送军/ 1/ )/ ,/ 2/ )/ 胡瑜/ 1/ )/ 李晓维/ 1/ )/ 1/ )/ (/ 中国科学院计算技术研究所/ 计算机/ 体系结构/ 国家/ 重点/ 实验室/ 北京/ 100190/ )/ 2/ )/ (/ 中国科学院/ 大学/ 北京/ 100049/ )/ 摘要/ 时钟/ 门控/ 等/ 低功耗/ 技术/ 引起/ 的/ 电流/ 波动/ 以及/ 供电/ 网络/ 上/ 的/ 寄生/ 阻抗/ 效应/ ,/ 共同/ 形成/ 感应/ 噪声/ (/ di/ // dt/ )/ ,/ 引起/ 供电/ 电压/ 波动/ ./ 过大/ 的/ 电压/ 波动/ 可能/ 引发/ 时延/ 故障/ 并/ 影响/ 系统/ 正确/ 运行/ ,/ 被/ 称之为/ 电压/ 紧急/ ./ 文章/ 分析/ 了/ 同时/ 多线程/ 处理器/ 中/ 电压/ 紧急/ 与/ 程序/ 访存/ 行为/ 之间/ 的/ 关系/ ,/ 结合/ 程序/ 的/ 存储/ 级/ 并行性/ ,/ 提出/ 了/ 一种/ 线程/ 调度/ 方法/ 以/ 减少/ 电压/ 紧急/ 对系统/ 性能/ 的/ 影响/ ./ 实验/ 结果表明/ ,/ 与/ flush/ 方法/ 相比/ ,/ 所提/ 方法/ 在/ 双线/ 程/ 环境/ 下/ 平均/ 减少/ 21.7/ %/ 的/ 电压/ 紧急/ ,/ 在/ 四/ 线程/ 环境/ 下/ 平均/ 减少/ 25.2/ %/ 的/ 电压/ 紧急/ ,/ 并/ 能够/ 有效/ 提高/ 同时/ 多线程/ 处理器/ 的/ 公平性/ ./ 关键词/ 电压/ 紧急/ ;/ 感应/ 噪声/ ;/ 同时/ 多线程/ ;/ 存储/ 级/ 并行/ 1/ 引言/ 随着/ 集成电路/ 工艺/ 的/ 发展/ ,/ 时钟/ 门控/ [/ 1/ ]/ 等/ 低功/ Page2/ 响/ 处理器/ 运行/ 的/ 正确性/ ,/ 这种/ 现象/ 称为/ 电压/ 紧急/ (/ VoltageEmergency/ ,/ VE/ )/ [/ 2/ ]/ ./ 随着/ 工艺/ 特征/ 尺寸/ 的/ 减小/ ,/ 供电/ 电压/ 波动/ 幅度/ 不断/ 增加/ ./ 当前/ ,/ 电压/ 紧急/ 已/ 成为/ 高性能/ 处理器/ 设计者/ 关注/ 的/ 热点问题/ ./ 目前/ 工业界/ 采用/ 的/ 方法/ 主要/ 是/ 在/ 电路设计/ 时/ 提高/ 电压/ 余量/ ./ 但是/ 在/ 45nm/ 的/ 工艺/ 尺寸/ 下/ ,/ 20/ %/ 的/ 电压/ 余量/ 造成/ 约/ 25/ %/ 的/ 性能/ 降级/ ,/ 当/ 工艺/ 特征/ 尺寸/ 减小/ 为/ 16nm/ 时/ ,/ 性能/ 损失/ 将/ 高达/ 50/ %/ [/ 3/ ]/ ./ 而/ 处理器/ 在/ 实际/ 运行/ 过程/ 中/ ,/ 电压/ 紧急/ 发生/ 的/ 频度/ 较/ 低/ ./ 例如/ ,/ 在/ CoreTM2Duo/ 处理器/ 中/ ,/ 大部分/ 情况/ 下/ 电压/ 波动/ 都/ 在/ 额定/ 电压/ 的/ 4/ %/ 以内/ ,/ 只有/ 0.06/ %/ 的/ 情况/ 超出/ 此/ 范围/ [/ 3/ ]/ ./ 因此/ 为/ 预防/ 出现/ 频度/ 较/ 小/ 的/ 电压/ 紧急/ 而/ 提高/ 电压/ 余量/ 是/ 一种/ 保守/ 的/ 设计/ 方法/ ,/ 带来/ 了/ 较/ 高/ 的/ 系统/ 性能/ 损失/ ./ 另/ 一种/ 技术/ 路线/ 是/ 在/ 体系结构/ 级/ 采用/ 容错/ 技术/ 避免/ 电压/ 紧急/ 影响/ 程序/ 正确/ 执行/ ./ 现有/ 体系结构/ 级/ 电压/ 紧急/ 容错/ 技术/ 主要/ 包括/ 电压/ 紧急/ 的/ 预测/ [/ 2/ ,/ 4/ -/ 7/ ]/ 、/ 通过/ 各种/ 调度/ 方法/ 减少/ 电压/ 紧急/ 的/ 发生/ [/ 3/ ,/ 8/ -/ 9/ ]/ 以及/ 确认/ 发生/ 电压/ 紧急/ 后/ 进行/ 系统/ 恢复/ [/ 10/ ]/ ./ 以上/ 方法/ 大都/ 针对/ 单线程/ 处理器/ ,/ 其中/ Essawy/ 等/ 人/ 对/ 同时/ 多线程/ (/ SimultaneousMultithreading/ ,/ SMT/ )/ 处理器/ 中/ 的/ 电压/ 紧急/ 进行/ 了/ 分析/ ,/ 观察/ 到/ 电压/ 紧急/ 发生/ 的/ 频度/ 及/ 幅度/ 随/ 线程/ 数目/ 增多/ 而/ 增加/ [/ 8/ ]/ ./ 本文/ 对/ 处理器/ 运行/ 不同/ 类型/ 程序/ 时/ 的/ 电压/ 紧急/ 特性/ 进行/ 分析/ ,/ 观察/ 到/ 程序/ 访存/ 行为/ 与/ 电压/ 紧急/ 之间/ 的/ 关系/ ,/ 从而/ 利用/ 程序/ 的/ 存储/ 级/ 并行性/ ,/ 提出/ 了/ 一种/ 线程/ 调度/ 方法/ 以/ 减少/ 电压/ 紧急/ 的/ 发生/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 研究/ 工作/ ;/ 第/ 3/ 节/ 首先/ 分析/ 不同/ 类型/ 程序/ 在/ SMT/ 处理器/ 中/ 的/ 电压/ 紧急/ 特性/ ,/ 继而/ 提出/ 结合/ 存储/ 级/ 并行/ 的/ 线程/ 调度/ 方法/ ;/ 第/ 4/ 节/ 给出/ 实验/ 结果/ 及其/ 分析/ ;/ 第/ 5/ 节/ 总结/ 全文/ ./ 2/ 相关/ 工作/ 文献/ [/ 4/ ]/ 介绍/ 了/ 电压/ 波动/ 的/ 形成/ ,/ 如何/ 利用/ 模拟器/ 模拟/ 电压/ 波动/ ,/ 它/ 抽象/ 出/ 电源/ 供电/ 网络/ ,/ 并/ 使用/ 功耗/ 分析/ 工具/ Wattch/ [/ 11/ ]/ 模拟/ 处理器/ 在/ 运行/ 程序/ 时/ 的/ 电压/ 变化/ ./ 文献/ [/ 6/ ]/ 对/ 单线程/ 处理器/ 中/ 电压/ 紧急/ 进行/ 了/ 分析/ ,/ 发现/ 电压/ 紧急/ 大都/ 由/ 以下/ 微/ 体系结构/ 事件/ 引起/ :/ 分支/ 误/ 预测/ 引发/ 的/ 清空/ 流水线/ ,/ L1/ // L2/ 高速缓存/ 缺失/ ,/ 页表/ 缓存/ (/ TranslationLook/ -/ AsideBuff/ -/ er/ ,/ TLB/ )/ 缺失/ 和/ 长/ 延时/ 运算/ ./ 而/ 文献/ [/ 8/ ]/ 主要/ 针对/ SMT/ 处理器/ 进行/ 分析/ ,/ 发现/ 与/ 单线程/ 处理器/ 中/ 电压/ 紧急/ 的/ 主要/ 引发/ 原因/ 不同/ ,/ SMT/ 处理器/ 中/ 的/ 电压/ 紧急/ 主要/ 由于/ 资源/ 竞争/ 导致/ ./ SMT/ 处理器/ 可以/ 平滑/ 一条/ 线程/ 暂停/ 而/ 导致/ 的/ 电压/ 波动/ ,/ 但/ 若/ 暂停/ 的/ 线程/ 占用/ 流水线/ 资源/ 无法/ 释放/ ,/ 将/ 导致/ 流水线/ 资源/ 拥塞/ 从而/ 暂停/ ,/ 导致/ 电流/ 骤减/ ./ 当该/ 长/ 延时/ 操作/ 执行/ 完毕/ 时/ ,/ 流水线/ 又/ 进入/ 活动状态/ ,/ 引起/ 电流/ 骤增/ ,/ 电流/ 的/ 骤减/ 和/ 骤增/ 引发/ 电压/ 紧急/ ./ 随着/ 线程/ 数/ 的/ 增多/ ,/ 资源/ 竞争/ 和/ 拥塞/ 次数/ 更/ 严重/ ,/ 导致/ 电压/ 紧急/ 发生/ 得/ 更/ 频繁/ ./ SMT/ 处理器/ 中/ 的/ 取指/ 方法/ 直接/ 影响/ 了/ 处理器/ 中/ 的/ 线程/ 调度/ ./ 文献/ [/ 8/ ]/ 进而/ 分析/ 了/ ICOUNT/ [/ 12/ ]/ 和/ flush/ [/ 13/ ]/ 取指/ 方法/ 对/ SMT/ 处理器/ 中/ 资源/ 竞争/ 的/ 影响/ ./ ICOUNT/ 方法/ 旨在/ 尽量/ 均衡/ 地/ 执行/ 每个/ 线程/ ./ flush/ 方法/ 在/ ICOUNT/ 方法/ 的/ 基础/ 上/ ,/ 针对/ 长/ 延时/ Ld/ 操作/ 进行/ 了/ 改进/ —/ —/ —/ 当某/ 线程/ 执行长/ 延时/ Ld/ 指令/ 时/ ,/ 将/ 该/ 指令/ 后续/ 指令/ 清除/ 出/ 流水线/ ,/ 停止/ 对/ 该/ 线程/ 取指/ 直到/ Ld/ 指令/ 的/ 数值/ 返回/ ./ 文献/ [/ 8/ ]/ 发现/ 利用/ flush/ 方法/ 可以/ 缓解/ 资源/ 拥塞/ ,/ 减少/ 电压/ 紧急/ 发生/ 的/ 次数/ ./ 上述/ 方法/ 忽略/ 了/ 程序/ 访存/ 特性/ 与/ 电压/ 紧急/ 之间/ 的/ 联系/ ,/ 存储/ 级/ 并行性/ (/ MemoryLevelParallelism/ ,/ MLP/ )/ [/ 14/ -/ 15/ ]/ 不仅/ 对系统/ 性能/ 产生/ 着/ 显著/ 的/ 影响/ ,/ 还/ 为/ 减少/ 电压/ 紧急/ 提供/ 了/ 可能/ ./ 现有/ 利用/ MLP/ 的/ 方法/ 主要/ 包括/ 存储/ 子系统/ 设计/ [/ 16/ -/ 17/ ]/ 和/ 流水线结构/ 设计/ [/ 18/ -/ 22/ ]/ ./ 我们/ 的/ 方法/ 属于/ 后者/ ,/ 通过/ 流水线结构/ 设计/ 提高/ 处理器/ 并发/ 长/ 延时/ 访存/ 操作/ 的/ 数目/ ./ 流水线结构/ 设计/ 方法/ 主要/ 包括/ 增大/ 指令/ 窗口/ [/ 18/ ]/ 、/ Runahead/ [/ 19/ -/ 20/ ]/ 和/ 基于/ 值/ 预测/ 的/ 推测/ 执行/ [/ 21/ ]/ 以及/ 使用/ 多线程/ // 多核/ 处理器/ 结构/ [/ 22/ ]/ ./ 3/ 基于/ 存储/ 级/ 并行/ 的/ 同时/ 多线程/ 电压/ 紧急/ 容错/ 3.1/ 研究/ 动机/ 我们/ 对/ SMT/ 模拟器/ M/ -/ sim/ [/ 23/ ]/ 进行/ 了/ 修改/ ,/ 结合/ 功耗/ 分析/ 工具/ Wattch/ ,/ 使用/ SPECCPU2000/ 基准/ 程序/ 集以/ 模拟/ SMT/ 处理器/ 运行/ 过程/ 中/ 的/ 电压/ 波动/ 情况/ ./ 为/ 分析程序/ 访存/ 行为/ 对/ 电压/ 波动/ 的/ 影响/ ,/ 我们/ 根据/ 访存/ 行为/ 密集/ 程度/ 将/ 程序/ 分为/ 访存/ 密集型/ MEM/ 和/ 指令/ 级/ 并行/ 密集型/ ILP/ (/ 划分/ 方法/ 见/ 第/ 4/ 节/ )/ ,/ 模拟/ 运行/ 1000000/ 条/ 指令/ ,/ 统计/ 电压/ 紧急/ 发生/ 次数/ ,/ 观察/ ILP2/ 和/ MEM2/ 两组/ 程序/ 电压/ 紧急/ 特性/ 的/ 差别/ ,/ 其中/ ILP/ 和/ MEM/ 表示/ 程序/ 类型/ ,/ 数字/ 表示/ SMT/ 处理器/ 中/ 的/ 线程/ 数目/ ./ 如图/ 1/ 所示/ ,/ MEM2/ 类型/ 程序/ 发生/ 电压/ 紧急/ 的/ 平均/ 次数/ 为/ 13660/ 次/ ,/ 而/ ILP2/ 类型/ 程序/ 为/ 4099/ 次/ ,/ MEM2/ 程序/ 组/ 发生/ 电压/ Page3/ 紧急/ 的/ 频度/ 为/ ILP2/ 程序/ 组/ 的/ 3.33/ 倍/ ,/ 故/ 处理器/ 运行/ MEM/ 类型/ 程序/ 更/ 易/ 发生/ 电压/ 紧急/ ./ 所以/ 我们/ 从/ 程序/ 访存/ 特性/ 出发/ ,/ 通过/ 重叠/ 多个/ 长/ 延时/ Ld/ 操作/ 的/ 时间/ ,/ 减少/ 电压/ 紧急/ 并/ 降低/ MEM/ 类型/ 程序/ 的/ 性能/ 损失/ ./ 程序/ 中/ 的/ 循环/ 代码/ 使得/ 大部分/ 动态/ 指令流/ 由/ 少量/ 的/ 静态/ 代码/ 构成/ ,/ 故/ 程序/ 的/ 访存/ 特性/ 具有/ 规律性/ ,/ 这为/ 长/ 延时/ Ld/ 指令/ 的/ 存储/ 级/ 并行性/ 预测/ 提供/ 了/ 可能/ ./ 图/ 1/ 发生/ 电压/ 紧急/ 的/ 次数/ (/ 一百万/ 条/ 指令/ 内/ )/ 存储/ 级/ 并行/ 是/ 指/ 在/ 程序/ 的/ 指令流/ 中/ ,/ 多条/ 长/ 延时/ Ld/ 指令/ 独立/ 且/ 在/ 时间/ 上/ 相距/ 很近/ ./ 处理器/ 可以/ 利用/ 此/ 特性/ 并行/ 发出/ 和/ 处理/ 多条/ 长/ 延时/ Ld/ 操作/ ,/ 以/ 重叠/ 访存/ 时间/ ./ 为了/ 描述/ 存储/ 级/ 并行性/ 的/ 内在/ 涵义/ ,/ 我们/ 引入/ 了/ 两个/ 概念/ :/ 访存/ 聚簇/ 和/ 存储/ 级/ 并行度/ ./ 访存/ 聚簇/ 是/ 指/ 一段/ 动态/ 指令流/ 中/ 包含/ 多条/ 独立/ 的/ Ld/ 指令/ ./ 存储/ 级/ 并行度/ (/ 缩写/ 为/ MLP/ 度/ )/ 指/ 具有/ 访存/ 聚簇/ 特性/ 的/ 动态/ 指令流/ 中/ 能够/ 重叠/ 执行/ 的/ 长/ 延时/ Ld/ 指令/ 的/ 个数/ [/ 22/ ]/ ./ 图/ 2/ 显示/ 了/ SPECCPU2000/ 基准/ 程序/ 的/ 存储/ 级/ 并行性/ 情况/ ,/ 由图/ 可见/ ,/ 在/ MEM/ 型/ 程序/ 中/ ,/ 75.2/ %/ 的/ 动态/ 访存/ 程序/ 块/ 具有/ 访存/ 聚/ 簇性/ ,/ 并且/ 有/ 39.5/ %/ 的/ 动态/ 访存/ 程序/ 块/ 的/ MLP/ 度/ 大于/ 5/ ,/ 故访存/ 密集型/ 程序/ 中/ 存在/ 大量/ 的/ 存储/ 级/ 并行性/ 可以/ 利用/ ,/ 提供/ 了/ 叠加/ 访存/ 时间/ 的/ 可能/ ./ 在/ 此基础/ 上/ ,/ 我们/ 结合/ 程序/ 访存/ 特性/ 提出/ 同时/ 多线程/ 取指/ 方法/ MLP/ -/ Aware/ 以/ 减少/ 电压/ 紧急/ 的/ 发生/ ./ 3.2/ MLP/ -/ Aware/ 电压/ 紧急/ 容错/ 方法/ MLP/ -/ Aware/ 方法/ 的/ 基本/ 思想/ 如图/ 3/ 所示/ ./ 图中/ 左侧/ 为/ 线程/ 动态/ 指令流/ ,/ 一旦/ 该/ 线程/ 执行/ 的/ Ld/ 指令/ 被/ 识别/ 为长/ 延时/ ,/ 就/ 通过/ 历史/ 信息/ 预测/ 该/ Ld/ 指令/ 后续/ 是否/ 有/ 其它/ 长/ 延时/ Ld/ 指令/ 可以/ 叠加/ 执行/ ,/ 若/ 可以/ 叠加/ ,/ 则/ 继续/ 向下/ 执行/ ./ 若该/ Ld/ 指令/ 后/ 没有/ 其它/ 长/ 延时/ Ld/ 指令/ 可/ 与/ 之/ 叠加/ ,/ 则/ 停止/ 对/ 该/ 线程/ 取指/ ,/ 并/ 将/ 该长/ 延时/ Ld/ 指令/ 的/ 后续/ 指令/ 清除/ 出/ 流水线/ ,/ 直到/ 其/ 数值/ 返回/ ,/ 才/ 恢复/ 对/ 该/ 线程/ 的/ 正常/ 取指/ ./ 为/ 支持/ MLP/ -/ Aware/ 方法/ ,/ 需对/ 流水线/ 部分/ 结构/ 进行/ 修改/ ./ 如图/ 4/ 所示/ ,/ 在/ 流水线/ 中/ 修改/ 了/ Ld/ // St/ 队列/ 结构/ 和/ 取指/ 单元/ 并/ 增加/ 了/ MLP/ 预测器/ ./ Ld/ // St/ 队列/ 中/ 设立/ 了/ 检查/ 机制/ ,/ 以/ 确定/ Ld/ 指令/ 是否/ 为长/ 延时/ ./ 设立/ MLP/ 预测器/ 的/ 目的/ 是/ 根据/ 所/ 保存/ 的/ 历史/ 信息/ 判断/ 是否/ 可以/ 叠加/ 访存/ ,/ 取值/ 单元/ 根据/ MLP/ 距离/ 信息/ 采取相应/ 的/ 取值/ 方法/ ./ MLP/ 距离/ 是/ 指/ 某/ Ld/ 指令/ 距离/ 与其/ 可/ 叠加/ 执行/ 的/ 最远/ Ld/ 指令/ 之间/ 的/ 动态/ 指令/ 条数/ ./ 下面/ 将/ 详细/ 介绍/ MLP/ -/ Aware/ 方法/ 对/ 流水线/ 部分/ 结构/ 的/ 修改/ ./ 3.2/ ./ 1Ld/ // St/ 队列/ 检查/ 机制/ MLP/ -/ Aware/ 方法/ 的/ 第一步/ 是/ 确认/ 某/ Ld/ 指令/ 是否/ 为长/ 延时/ 操作/ ./ 文献/ [/ 13/ ]/ 中/ 提出/ 两种/ 识别/ 长/ 延时/ 操作/ 的/ 实现/ 方法/ :/ 缓存/ 缺失/ 信号/ 触发/ 和/ 延时/ 触发/ ./ 前者/ 在/ 发生/ 缓存/ 缺失/ 时/ ,/ 使/ 缓存/ 返回/ 一个/ 缺失/ 信号/ ,/ 处理器/ 根据/ 该/ 信号/ 来/ 定位/ 发生/ 长/ 延时/ Ld/ 操作/ 的/ 线程/ ./ 此种/ 方法/ 对/ 流水线/ 修改/ 较大/ ./ 第/ 2/ 种/ 方法/ 实现/ 较/ 简单/ ,/ 当/ 发现/ 某条/ 指令/ 在/ Ld/ // St/ 队列/ 里/ 超过/ L/ 个/ 时钟/ 周期/ ,/ 则/ 认为/ 发生/ 了/ 长/ 延时/ Ld/ 操作/ ./ 我们/ 采用/ 第/ 2/ 种/ 方法/ 识别/ 长/ 延时/ 操作/ ,/ 并/ 在/ 实验/ 中将/ L/ 定为/ 20/ 个/ 时钟/ 周期/ ,/ 略大于/ L2/ 缓存/ 命中/ 时间/ ./ Page4/ 图/ 4MLP/ -/ Aware/ 处理器/ 结构/ 示意图/ 3.2/ ./ 2MLP/ 预测器/ MLP/ 预测器/ 的/ 主要/ 功能/ 是/ 预测/ MLP/ 距离/ 并/ 更新/ MLP/ 距离/ 预测/ 表/ ./ MLP/ 距离/ 预测/ 表的表/ 索引/ 项为/ 长/ 延时/ Ld/ 指令/ 的/ 指令/ 地址/ (/ 即/ PC/ 值/ )/ ,/ 内容/ 为/ 该/ Ld/ 指令/ 的/ MLP/ 距离/ ./ 一旦/ 确认/ 线程/ 动态/ 指令流/ 中/ 的/ 某个/ Ld/ 操作/ 为长/ 延时/ ,/ 预测器/ 将/ 查找/ MLP/ 距离/ 预测/ 表/ ,/ 预测/ 该/ Ld/ 指令/ 相应/ 的/ MLP/ 距离/ ./ 某条/ Ld/ 指令/ 的/ MLP/ 距离/ 是/ 指/ 在/ 这段/ 指令流/ 中/ ,/ 能/ 与/ 它/ 叠加/ 执行/ 的/ 最远/ Ld/ 指令/ 距离/ 它/ 的/ 动态/ 指令/ 条数/ ./ 如图/ 5/ 所示/ ,/ Ld1/ 指令/ 的/ MLP/ 距离/ 为/ 5/ ./ 在/ 预测/ 过程/ 中/ ,/ 若/ MLP/ 距离/ 预测/ 表中/ 无该/ Ld/ 指令/ 项时/ ,/ 则/ 默认/ 其/ MLP/ 距离/ 为/ 0/ ./ 在/ 程序执行/ 过程/ 中/ ,/ 我们/ 还/ 将/ 根据/ 长/ 延时/ Ld/ 指令/ 的/ 信息/ 更新/ MLP/ 距离/ 预测/ 表/ ./ 在/ 图/ 5/ 所示/ 的/ 例子/ 中/ ,/ 假设/ 程序/ 中/ 某段/ 动态/ 指令流/ 中有/ 5/ 个长/ 延时/ Ld/ 指令/ ,/ 分别/ 为/ Ld1/ ,/ Ld2/ ,/ Ld3/ ,/ Ld4/ ,/ Ld5/ ./ 当/ 程序执行/ Ld1/ 时/ ,/ 开始/ 第一个/ 动态/ 指令/ 窗口/ W1/ (/ 动态/ 指令/ 窗口/ 的/ 大小/ 设为/ ub/ ,/ 其/ 大小/ 设置/ 将/ 在/ 第/ 4/ 节/ 具体/ 介绍/ )/ ,/ 如果/ 查询/ MLP/ 距离/ 预测/ 表/ ,/ 发现/ 表中/ 无/ Ld1/ 指令/ 项/ ,/ 则/ 在/ MLP/ 距离/ 预测/ 表中/ 插入/ Ld1/ 表项/ ,/ 继而/ 在/ 执行/ Ld2/ ,/ Ld3/ ,/ Ld4/ 时/ ,/ 更新/ 表中/ Ld1/ 的/ MLP/ 距离/ 域/ ./ 当/ 程序执行/ 到/ Ld5/ 时/ ,/ 由于/ Ld5/ 与/ Ld1/ 之间/ 的/ 距离/ 已经/ 超出/ 动态/ 指令/ 窗口/ 大小/ ,/ 因此/ 开始/ 下/ 一个/ 动态/ 指令/ 窗口/ W2/ ,/ 并/ 在/ MLP/ 距离/ 预测/ 表中/ 插入/ Ld5/ 表项/ ./ 设立/ 动态/ 指令/ 窗口/ 的/ 目的/ 是/ 避免/ 对/ MEM/ 型/ 线程/ 的/ 过度/ 取指/ ,/ 减少/ 发生/ 资源/ 拥塞/ 的/ 可能性/ ./ 3.2/ ./ 3/ 取指/ 单元/ MLP/ -/ Aware/ 方法/ 的/ 取指/ 过程/ 如下/ :/ 当某/ 线程/ 发生/ 长/ 延时/ Ld/ 操作/ 时/ ,/ 根据/ 该/ Ld/ 指令/ PC/ 查找/ MLP/ 距离/ 预测/ 表/ ,/ 获得/ MLP/ 距离/ md/ ./ 若/ md/ 为/ 0/ ,/ 则/ 将/ 该/ Ld/ 指令/ 的/ 后续/ 指令/ 清除/ 出/ 流水线/ ,/ 释放/ 资源/ ,/ 避免/ 该/ 线程/ 占用/ 资源/ ./ 若/ md/ >/ 0/ 则/ 继续执行/ ,/ 直至/ 指令/ 距离/ 为/ md/ ,/ 才/ 停止/ 对/ 该/ 线程/ 取指/ 直至/ Ld/ 指令/ 的/ 数值/ 返回/ ./ MLP/ -/ Aware/ 取指/ 单元/ 的/ 逻辑/ 结构/ 示意图/ 如图/ 6/ 所示/ ./ 选择/ 逻辑/ 确定/ 每个/ 时钟/ 周期/ 的/ 取指/ 线程/ ./ 选择/ 逻辑/ 的/ 控制/ 信号/ ci/ (/ 0/ </ i/ </ n/ ,/ n/ 为/ 指令/ 条数/ )/ 表明/ 该/ 线程/ 能否/ 叠加/ 长/ 延时/ Ld/ 操作/ 的/ 状态/ ,/ 若为/ 0/ ,/ 则/ 选择/ 逻辑/ 放弃/ 从/ 该/ 线程/ 取指令/ ,/ 如果/ c1/ 到/ cn/ 全部/ 为/ 0/ ,/ 则/ 处理器/ 中/ 所有/ 线程/ 都/ 处于/ 不可/ 叠加/ 长/ 延时/ Ld/ 操作/ 的/ 状态/ (/ 此为/ 小/ 概率/ 事件/ ,/ 但/ 仍/ 可能/ 发生/ )/ ,/ 则/ 随机/ 选取/ 一条/ 线程/ 继续执行/ ./ 控制/ 信号/ ci/ 是/ 信号/ Page5longlatency/ 和/ 信号/ p/ 进行/ 逻辑/ 或/ 操作/ 的/ 结果/ ,/ lon/ -/ glatency/ 和/ p/ 分别/ 表征/ 线程/ 是否/ 处于/ 长/ 延时/ 操作/ 状态/ 和/ MLP/ 可/ 利用/ 状态/ ./ 当/ 线程/ 进入/ 长/ 延时/ Ld/ 操作/ 时/ ,/ longlatency/ 置/ 0/ ./ 信号/ p/ 是/ 信号/ occupancy/ 和/ 信号/ d/ 逻辑/ 与/ 的/ 结果/ ,/ occupancy/ 表征/ Ld/ // St/ 队列/ 的/ 使用率/ ,/ d/ 表示/ 是否/ 存在/ MLP/ 距离/ 可以/ 利用/ ./ 为了/ 避免/ MLP/ -/ Aware/ 取指/ 方法/ 造成/ Ld/ // St/ 发生/ 拥塞/ ,/ 我们/ 设定/ Ld/ // St/ 使用量/ 超过/ 80/ %/ 时/ ,/ 将/ occupancy/ 赋值/ 为/ 0/ ,/ 也/ 就是/ 不/ 进行/ MLP/ 预测/ ,/ 直接/ 停止/ 对/ 该/ 线程/ 取指/ ./ 否则/ ,/ 启用/ MLP/ -/ Aware/ 方法/ ,/ 根据/ d/ 值图/ 6/ 取指/ 单元/ 逻辑/ 结构/ 示意图/ 此处/ MLP/ -/ Aware/ 清空/ 流水线/ 机制/ 与/ 分支/ 误/ 预测/ 清空/ 流水线/ 机制/ 类似/ ,/ 均/ 由/ 给定/ 指令/ 开始/ 释放/ 流水线/ 资源/ ,/ 包括/ 重命名/ 寄存器/ 、/ 指令/ 队列/ 和/ 重/ 排序/ 缓存/ (/ 如果/ 为/ 访存/ 指令/ ,/ 还/ 将/ 释放/ Ld/ // St/ 队列/ 中/ 相应/ 项/ )/ ,/ 无需/ 新增/ 其它/ 硬件/ ./ 4/ 实验/ 环境/ 与/ 实验/ 结果/ 我们/ 扩展/ 了/ M/ -/ sim/ 模拟器/ ,/ 使/ 其/ 支持/ flush/ 和/ MLP/ -/ aware/ 方法/ ./ 每个/ 线程/ 有/ 单独/ 的/ 程序/ 计数器/ 和/ 重命名/ 表/ ,/ 其他/ 资源/ 则/ 为/ 线程/ 间/ 共享/ ./ 主要/ 的/ 配置/ 参数/ 如表/ 1/ 所示/ ./ 为/ 对/ 访存/ 密集型/ 程序/ 区分/ 考虑/ ,/ 我们/ 根据/ 程序/ 出现/ 长/ 延时/ 操作/ 的/ 频度/ 将/ 程序/ 分成/ 4/ 组/ ,/ 运行/ 200M/ 指令/ ./ 若/ 某/ 程序/ 平均/ 每/ 1K/ 条/ 指令/ 出现/ 长/ 延时/ Ld/ 操作/ 的/ 次数/ 大于/ 0.5/ ,/ 则/ 将/ 其/ 归/ 为/ MEM/ 类型/ 程序/ ,/ 否则/ 为/ ILP/ 类型/ 程序/ ./ 如表/ 2/ 所示/ ,/ 判断/ 是否/ 继续/ 取指令/ ./ d/ 值/ 的/ 计算方法/ 是/ :/ 由/ MLP/ 预测器/ 输入/ 的/ MLP/ 距离/ md/ ,/ 计算/ 出/ 预测/ 的/ 可/ 叠加/ 访问/ 的/ 最远/ Ld/ 指令/ 动态/ 地址/ dda/ ,/ 若/ 当前/ 的/ 取指/ 指令/ 的/ 动态/ 地址/ cda/ 大于/ dda/ ,/ 则/ d/ 值为/ 0/ ,/ 说明/ 长/ 延时/ Ld/ 指令/ 后/ 已有/ 多于/ md/ 条/ 指令/ 进入/ 流水线/ 执行/ ,/ 则/ 将/ 与/ Ld/ 指令/ 动态/ 距离/ 大于/ md/ 的/ 指令/ 清除/ 出/ 流水线/ ./ 如果/ cda/ </ dda/ ,/ 信号/ d/ 为/ 1/ ,/ 说明/ 该/ 线程/ 当前/ 的/ 取指/ 指令/ 与/ Ld/ 指令/ 的/ 动态/ 距离/ 小于/ md/ ,/ 则/ 继续/ 对/ 该/ 线程/ 正常/ 取指/ ,/ 直到/ 取满/ md/ 条/ (/ 即/ cda/ =/ dda/ )/ 为止/ ./ MEM/ 组/ 全部/ 由/ MEM/ 类型/ 程序/ 构成/ ./ MIX/ 组是/ MEM/ 类型/ 程序/ 和/ ILP/ 类型/ 程序/ 的/ 混合/ 组合/ ./ 取指/ // 译码/ 带宽/ 指令/ 发射/ 队列/ 个数/ Ld/ // St/ 队列/ 个数/ 整数/ 运算器/ 个数/ 整数/ 乘/ // 除/ 运算器/ 个数/ 浮点运算/ 器/ 个数/ 浮点/ 乘/ // 除/ 运算器/ 个数/ Page6/ 表/ 2SPECCPU2000/ 程序/ 集/ 分类/ art/ ,/ gziplucas/ ,/ gzipswim/ ,/ artmgrid/ _/ swimperlbmk/ _/ artmcf/ ,/ perlbmk4/ ./ 1/ 性能/ 评估/ 指标/ 由于/ flush/ 方法/ 和/ MLP/ 方法/ 均/ 主要/ 针对/ 访存/ 密集型/ 程序/ 优化/ ,/ 故/ 实验/ 主要/ 针对/ MEM/ 型/ 程序/ 组和/ MIX/ 程序/ 组/ ,/ 考察/ 在/ 这/ 两种/ 不同/ 方法/ 下/ 的/ 电压/ 紧急情况/ ./ SMT/ 处理器/ 主要/ 有/ 两个/ 性能/ 评估/ 指标/ :/ 平均/ 吞吐量/ Throughput/ 和/ 公平性/ Fairness/ ,/ 分别/ 表征/ 所有/ 线程/ 的/ 平均/ IPC/ 和/ 每个/ 线程/ 执行/ 的/ 均衡/ 情况/ [/ 24/ ]/ ./ 考虑/ 到/ 每个/ 线程/ 下/ 自身/ 访存/ 特性/ 对/ 电压/ 紧急/ 发生/ 次数/ 的/ 影响/ ,/ 在/ 实验/ 中/ 引入/ 以下/ 指标/ 表征/ 每次/ 流水线/ 暂停/ 引发/ 的/ 电压/ 紧急/ 次数/ ,/ 以/ 对/ 不同/ 取指/ 方法/ 下/ 的/ 电压/ 紧急情况/ 进行/ 分析/ ./ 其中/ ,/ VE/ #/ 为/ 电压/ 紧急/ 发生/ 实际/ 次数/ ,/ Instsum/ 为/ 总/ 提交/ 指令/ 数/ ,/ 处理器/ 中有/ n/ 条/ 线程/ ,/ 每条/ 线程/ 提交/ 指令/ 数为/ Insti/ (/ 0/ / i/ / n/ )/ ./ 根据/ 文献/ [/ 3/ ]/ ,/ 大部分/ 电压/ 紧急/ 频度/ 和/ 流水线/ 暂停/ 周期/ 数正/ 相关/ ,/ 故/ 设置/ fac/ -/ tor/ =/ stall/ _/ ratio/ ,/ 表征/ 每个/ 线程/ 电压/ 紧急/ 的/ 特性/ ,/ factor/ 越大/ 表明/ 该/ 程序/ 更/ 容易/ 发生/ 电压/ 紧急/ ./ 其中/ stall/ _/ ratio/ 指/ 线程/ 发生/ 暂停/ 的/ 频度/ (/ 可能/ 由/ 指令/ 缓存/ ,/ L2/ 缓存/ 缺失/ 或/ 分支/ 误/ 预测/ 等/ 事件/ 引起/ )/ ./ 这个/ 指标/ 因为/ 考虑/ 程序/ 自身/ 电压/ 紧急/ 特性/ 从而/ 更/ 客观/ 地/ 评价/ SMT/ 处理器/ 的/ 电压/ 紧急/ 发生/ 情况/ ./ 4.2/ MLP/ 距离/ 预测/ 表/ 准确度/ 和/ 实现/ 细节/ 4.2/ ./ 1MLP/ 距离/ 预测/ 表/ 准确度/ MLP/ 距离/ 预测/ 表/ 的/ 准确度/ 直接/ 影响/ 系统/ 的/ 性能/ ./ 对于/ MLP/ 距离/ 预测/ 表/ ,/ 预测/ 错误/ 有/ 两种/ 情况/ :/ (/ 1/ )/ MLP/ 预测器/ 预测/ 有/ 存储/ 级/ 并行度/ 而/ 实际/ 并/ 不/ 存在/ ;/ (/ 2/ )/ MLP/ 预测/ 的/ 存储/ 级/ 并行度/ 少于/ 实际/ 情况/ ./ 定义/ 第/ i/ 次/ 预测/ 的/ 准确度/ 为/ 则/ 预测器/ 的/ 准确度/ 为/ 其中/ Accuracyi/ 为/ 每次/ 预测/ 准确度/ ,/ Sum/ 为/ 预测/ 总/ equake/ ,/ art/ ,/ gzip/ ,/ fma3dgzip/ ,/ swim/ ,/ vpr/ ,/ fma3dmcf/ ,/ art/ ,/ eon/ ,/ ampmcf/ ,/ applu/ ,/ gzip/ ,/ lucasswim/ _/ perlbmk/ _/ mgrid/ _/ art/ 次数/ ./ 故/ 预测器/ 的/ 准确度/ 定义/ 为/ 每次/ 预测/ 准确度/ 的/ 平均值/ ./ 图/ 7/ 显示/ 了/ MLP/ 预测器/ 的/ 准确度/ ,/ 由于/ 程序/ 具有/ 明显/ 的/ 代码/ 重复/ 特性/ ,/ 故/ 预测/ 性能/ 较/ 好/ ./ 根据/ 实验/ 数据/ ,/ 我们/ 的/ MLP/ 预测器/ 准确度/ 平均/ 情况/ 下/ 达到/ 了/ 90.7/ %/ ./ 4.2/ ./ 2MLP/ 距离/ 预测/ 表/ 实现/ 细节/ 对/ MLP/ 距离/ 预测/ 表/ 更新/ 时/ ,/ 动态/ 窗口/ 的/ 大小/ ub/ 对/ 性能/ 也/ 有/ 显著/ 影响/ ./ 当/ ub/ 设置/ 过/ 小时/ ,/ 存储/ 级/ 并行/ 特性/ 不能/ 充分利用/ ,/ 当/ ub/ 设置/ 过大/ ,/ 可能/ 导致/ 长/ 延时/ 线程/ 占用/ 过多/ 资源/ 而/ 致使/ 流水线/ 拥塞/ ./ 流水线/ 中/ 关键/ 资源/ 主要/ 包括/ 重/ 排序/ 缓存/ (/ ROB/ )/ 、/ Ld/ // St/ 队列/ 和/ 物理/ 寄存器/ ./ 在/ 这里/ 设立/ ub/ 略/ 小于/ 寄存器/ 文件大小/ // 线程/ 数/ ,/ 在/ 双线/ 程/ 环境/ 下/ ,/ 设置/ 为/ 50/ ,/ 在/ 四/ 线程/ 环境/ 下/ ,/ 设置/ 为/ 30/ ./ 由于/ 不同/ 线程/ 的/ 地址/ 空间/ 不/ 相交/ ,/ 所以/ 不会/ 导致/ MLP/ 距离/ 预测/ 表/ 发生冲突/ ./ 多个/ 线程/ 可以/ 共用/ 一个/ MLP/ 距离/ 预测/ 表/ ./ 如表/ 3/ 所示/ ,/ MLP/ 预测器/ 的/ 表项/ 数目/ 需要量/ 较/ 少/ ,/ 每个/ 线程/ 平均/ 每/ 106/ 指令/ 需要/ 表项/ 数目/ 为/ 15/ 项/ ,/ 故/ 面积/ 开销/ 也/ 较/ 小/ ./ 在/ 实验/ 配置/ 中/ ,/ 双线/ 程/ 环境/ 下/ MLP/ 预测/ 表表/ 项/ 设置/ 为/ 48/ 项/ ,/ 四/ 线程/ 环境/ 下/ MLP/ 预测/ 表表/ 项/ 设置/ 为/ 96/ 项/ ./ MLP/ 预测器/ 的/ 替换/ 策略/ 采用/ LRU/ 算法/ ./ 由于/ MLP/ 预测器/ 的/ 时序/ 约束/ 不高/ (/ MLP/ 预测器/ 电路/ 时延/ 故障/ 造成/ 的/ 预测/ 失败/ ,/ 仅/ 降低/ 了/ 叠加/ 长/ 延时/ 操作/ 的/ 优化/ 效果/ ,/ 不/ 影响/ 程序/ 的/ 正确性/ )/ ,/ 故/ 对系统/ 性能/ 的/ 影响/ 较/ 小/ ./ Page7/ 表/ 3/ 平均/ 每/ 106/ 条/ 指令/ 所需/ MLP/ 表项/ 数目/ 程序/ 表/ 项数/ 程序/ 表/ 项数/ 程序/ 表/ 项数/ ammp3galgel7lucas2mgrid17mcf29vpr7applu5perlbmk7swim26art60gzip1avg/ ./ 154.3/ 实验/ 结果/ 及/ 分析/ 实验/ 结果表明/ ,/ 与/ flush/ 取指/ 方法/ 相比/ ,/ MLP/ -/ Aware/ 方法/ 能/ 有效/ 降低/ 电压/ 紧急/ 的/ 发生/ 频度/ ./ 图/ 8/ 和/ 图/ 9/ 分别/ 为/ 双线/ 程和四/ 线程/ 环境/ 下/ 发生/ 电压/ 紧急/ 的/ 情况/ ./ 在/ 双线/ 程/ 环境/ 下/ ,/ MLP/ -/ Aware/ 方法/ 平均/ 减少/ 约/ 21.7/ %/ 的/ 电压/ 紧急/ ,/ 四/ 线程/ 环境/ 下/ ,/ 电压/ 紧急/ 可/ 降低/ 约/ 25.2/ %/ ./ 在/ 公平性/ 方面/ ,/ MLP/ -/ Aware/ 方法/ 明显/ 优于/ flush/ 方法/ ./ 如图/ 10/ 和/ 图/ 11/ 所示/ ,/ MLP/ -/ Aware/ 在/ 双线/ 程和四/ 线程/ 环境/ 下/ 公平性/ 相较/ 于/ flush/ 方法/ 分别/ 图/ 8/ 双线/ 程/ MLP/ -/ Aware/ 与/ flush/ 电压/ 紧急/ 次数/ 对比/ 图图/ 9/ 四/ 线程/ MLP/ -/ Aware/ 与/ flush/ 电压/ 紧急/ 次数/ 对比/ 图/ 提高/ 1.6/ 倍/ 和/ 1.4/ 倍/ ./ MLP/ -/ Aware/ 方法/ 使得/ 处理器/ 的/ 吞吐量/ 也/ 平均/ 提高/ 4.4/ %/ ,/ 当/ 程序/ 集为/ MEM/ 类型/ 时/ ,/ MLP/ -/ Aware/ 方法/ 比/ flush/ 方法/ 的/ 吞吐量/ 在/ 二线/ 程和四/ 线程/ 环境/ 下/ 分别/ 提高/ 8.9/ %/ 和/ 6.3/ %/ ,/ 尤其/ 是/ 当访存/ 密集型/ 程序/ 的/ MLP/ 距离/ 较大/ 时/ ,/ MLP/ -/ Aware/ 方法/ 不仅/ 能/ 较/ 好/ 地/ 降低/ 电压/ 紧急/ 频度/ ,/ 同时/ 还/ 能/ 提高/ 多线程/ 处理器/ 的/ 公平性/ 和/ 吞吐量/ ./ 但/ 对于/ MIX/ 类型/ 程序/ 集/ ,/ flush/ 方法/ 倾向/ 于/ 执行/ ILP/ 类型/ 的/ 线程/ ,/ 从而/ 通过/ 利用/ 此/ 线程/ 的/ 指令/ 并行性/ 来/ 提高/ 系统/ 吞吐量/ ,/ 而/ 不会/ 像/ MLP/ -/ Aware/ 公平/ 地/ 调度/ MEM/ 线程/ 和/ ILP/ 线程/ ./ 由于/ ILP/ 线程/ 的/ 吞吐量/ 明显/ 高于/ MEM/ 线程/ 的/ 吞吐量/ ,/ 因此/ 即便/ MLP/ -/ Aware/ 挖掘/ 了/ 存储/ 级/ 并行/ ,/ 在/ MIX/ 组中/ ,/ MLP/ -/ Aware/ 的/ 系统/ 吞吐量/ 还是/ 会/ 略低于/ flush/ 方法/ ,/ 如图/ 12/ 和/ 图/ 13/ 所示/ ,/ 平均/ 情况/ Page8/ 图/ 10/ 双线/ 程/ MLP/ -/ Aware/ 与/ flush/ 公平性/ 对比/ 图图/ 11/ 四/ 线程/ MLP/ -/ Aware/ 与/ flush/ 公平性/ 对比/ 图图/ 12/ 双线/ 程/ MLP/ -/ Aware/ 与/ flush/ 吞吐量/ 对比/ 图/ Page9/ 图/ 13/ 四/ 线程/ MLP/ -/ Aware/ 与/ flush/ 吞吐量/ 对比/ 图下/ ,/ MLP/ -/ Aware/ 方法/ 在/ 二线/ 程和四/ 线程/ 环境/ 中/ 吞吐量/ 分别/ 下降/ 2.6/ %/ 和/ 2.5/ %/ ./ 虽然/ flush/ 方法/ 的/ 吞吐量/ 略高于/ MLP/ -/ Aware/ 方法/ ,/ 但/ flush/ 方法/ 是/ 以/ 牺牲/ MEM/ 类型/ 程序/ 性能/ 为/ 代价/ 的/ ,/ 公平性/ 低/ ./ 5/ 结论/ 本文/ 针对/ 同时/ 多线程/ 中/ 的/ 电压/ 紧急/ 进行/ 分析/ ,/ 长/ 延时/ Ld/ 指令/ 不仅/ 对系统/ 性能/ 影响/ 明显/ ,/ 对/ 电压/ 紧急/ 的/ 影响/ 也/ 十分/ 显著/ ./ 它们/ 占用/ 流水线/ 关键/ 资源/ 继而/ 影响/ 其他/ 线程/ 的/ 执行/ ./ 已有/ 工作/ 通过/ flush/ 方法/ 减轻/ 长/ 延时/ Ld/ 指令/ 对系统/ 的/ 影响/ ,/ 这种/ 方法/ 虽能/ 从/ 一定/ 程度/ 上/ 减小/ 电压/ 紧急/ 频度/ ,/ 但/ 忽略/ 程序/ 自身/ 访存/ 特性/ 与/ 电压/ 紧急/ 特性/ 之间/ 的/ 关系/ ./ 我们/ 的/ 工作/ 结合/ 程序/ 特性/ ,/ 提出/ 了/ 一种/ 线程/ 调度/ 算法/ ,/ 利用/ 程序/ 中/ 大量/ 存在/ 的/ 存储/ 级/ 冗余/ 特性/ 提升/ 系统/ 性能/ ,/ 避免/ 由于/ 长/ 延时/ Ld/ 操作/ 造成/ 资源/ 拥塞/ ,/ 进而/ 显著/ 减少/ 电压/ 紧急/ 的/ 发生/ ./ 

