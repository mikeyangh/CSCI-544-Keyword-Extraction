Page1/ 一种/ 基于/ Bio/ -/ PEPA/ 的/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 模型/ 吕宏武/ 王慧强/ 林俊宇/ 冯光升/ 郭/ 方方/ (/ 哈尔滨工程大学/ 计算机科学/ 与/ 技术/ 学院/ 哈尔滨/ 150001/ )/ 摘要/ 脆弱/ 点/ 类型/ 差异/ 和/ 脆弱性/ 演化/ 对/ 脆弱性/ 扩散/ 过程/ 具有/ 显著/ 影响/ ,/ 而/ 现有/ 脆弱性/ 扩散/ 模型/ 对此/ 还/ 缺少/ 深入研究/ ./ 该文/ 提出/ 一种/ 基于/ 分簇/ 思想/ 的/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 模型/ ,/ 首先/ 按照/ 节点/ 包含/ 脆弱/ 点/ 类型/ 的/ 不同/ 进行/ 分簇/ ,/ 其次/ 利用/ Bio/ -/ PEPA/ 静态/ 分层/ 特性/ ,/ 对/ 脆弱性/ 在/ 簇内/ 、/ 簇间/ 传播/ ,/ 以及/ 簇间/ 迁移/ 演化过程/ 进行/ 建模/ ./ 最后/ ,/ 将/ Bio/ -/ PEPA/ 模型/ 转化/ 为常/ 微分方程/ 求解/ ,/ 分析/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 的/ 特点/ 和/ 规律/ ,/ 避免/ 了/ 传统/ 分析方法/ 的/ 状态/ 空间/ 爆炸/ 问题/ ./ 实验/ 结果显示/ ,/ 可以/ 通过/ 提升/ 系统/ 修复/ 能力/ 、/ 降低/ 簇间/ 传播/ 速率/ 、/ 减小/ 簇间/ 变迁/ 速率/ ,/ 抑制/ 分布式/ 虚拟化/ 系统/ 的/ 脆弱性/ 扩散/ ./ 关键词/ 脆弱性/ 分析/ ;/ 脆弱性/ 扩散/ ;/ 分布式/ 虚拟化/ 系统/ ;/ Bio/ -/ PEPA/ ;/ 云/ 计算/ 1/ 引言/ 脆弱性/ 通常/ 是/ 引发/ 系统/ 安全性/ 、/ 可信性/ 等/ 问题/ 的/ 内在/ 原因/ [/ 1/ ]/ ,/ 一直/ 以来/ 就是/ 软件开发/ 和/ 系统/ 测试/ 领域/ 关注/ 的/ 研究/ 热点/ ./ 但是/ 随着/ 以/ 覆盖网/ 、/ 未来/ 网络/ 和/ 云/ 计算/ 为/ 代表/ 的/ 分布式/ 虚拟化/ 系统/ 的/ 广泛应用/ ,/ 系统/ 脆弱性/ 变得/ 尤为/ 严峻/ ./ 一方面/ ,/ 新兴/ 业务/ 的/ 不断涌现/ ,/ 带来/ 了/ 第三方/ 软件/ 的/ 爆发式/ 增长/ ,/ 然而/ 它们/ 通常/ 缺少/ 严苛/ 的/ 编码/ 规范/ 和/ 系统化/ 测试/ ,/ 存在/ 脆弱性/ 漏洞/ 的/ 概率/ 远超/ 系统/ 本身/ ./ 包括/ 著名/ 安全/ 机构/ Secunia/ 在内/ 的/ 大量/ 研究/ 显示/ ①/ ,/ 因/ 第三方/ 应用/ 而/ 引入/ 的/ 脆弱/ 点/ 在/ 数量/ 上/ 已/ 远远/ 超过/ 系统/ 固有/ 的/ 脆弱/ 点/ ./ 另一方面/ ,/ 作为/ 云/ 计算/ 、/ 覆盖/ 网络/ 技术/ 基础/ 的/ 虚拟化/ 技术/ ,/ 从根本上/ 变革/ 了/ 资源/ 的/ 利用/ 模式/ ./ 服务/ 使用/ 的/ 资源/ 往往/ 来自/ 于/ 远程/ “/ 云/ ”/ 中/ 的/ 不同/ 位置/ ,/ 它们/ 通过/ 动态化/ 的/ 组合/ 产生/ 满足用户/ 需求/ 的/ 个性化/ 服务/ [/ 2/ ]/ ,/ 而/ 这些/ 资源/ 自身/ 的/ 脆弱性/ 往往/ 难以/ 断定/ ,/ 并/ 将/ 通过/ 频繁/ 的/ 动态/ 连接/ 而/ 快速/ 扩散/ ,/ 为/ 脆弱性/ 的/ 防护/ 带来/ 了/ 巨大/ 挑战/ ./ 脆弱性/ 分析/ 作为/ 一个/ 热点/ 领域/ 已经/ 在/ 脆弱性/ 检测/ 、/ 系统/ 脆弱性/ 评估/ 和/ 脆弱性/ 风险/ 分析/ 等/ 方面/ 进行/ 了/ 大量/ 研究/ [/ 3/ ]/ ,/ 但是/ 针对/ 脆弱性/ 扩散/ 的/ 研究/ 尚/ 处于/ 初期/ 阶段/ ./ (/ 1/ )/ 最初/ 的/ 脆弱性/ 扩散/ 研究/ 主要/ 关注/ 于/ 特定/ 系统/ 的/ 脆弱性/ 风险/ ,/ 如/ OpenBSD/ 操作系统/ 漏洞/ [/ 4/ ]/ 、/ Mozilla/ 系统漏洞/ [/ 5/ ]/ 和/ 数据/ 错误/ 在/ 软件/ 中/ 的/ 传播/ [/ 6/ ]/ ,/ 通常/ 以/ 多年/ 运行/ 数据/ 为/ 基础/ 来/ 挖掘/ 脆弱性/ 的/ 传播/ 规律/ ./ 但是/ 这些/ 结果/ 往往/ 具有/ 很强/ 的/ 系统/ 相关性/ ,/ 而且/ 很难/ 用于/ 系统/ 设计阶段/ ;/ (/ 2/ )/ 近来/ ,/ Feng/ 等/ 人/ [/ 7/ ]/ 建立/ 了/ 一种/ 安全性/ 风险/ 模型/ (/ SRAM/ )/ ,/ 通过/ 贝叶斯/ 网络/ 来/ 模拟/ 风险/ 因子/ 及/ 它们/ 之间/ 的/ 因果关系/ ,/ 估计/ 最大/ 概率/ 的/ 脆弱性/ 传播/ 路径/ 以及/ 带来/ 的/ 风险/ 值/ ./ 而/ De/ 等/ 人/ [/ 8/ ]/ 针对/ 无线/ 传感器/ 网络/ 环境/ 下/ 由于/ 多/ 跳/ 广播/ 协议/ 带来/ 的/ 脆弱性/ 扩散/ 问题/ 进行/ 了/ 研究/ ./ 文献/ [/ 7/ -/ 8/ ]/ 仅/ 在/ 系统/ 整体/ 层面/ 研究/ 脆弱性/ 的/ 扩散/ ,/ 均/ 未/ 考虑/ 脆弱性/ 在/ 同种/ 类型/ 脆弱/ 点/ 和/ 不同/ 类型/ 之间/ 扩散/ 的/ 差异/ ,/ 以及/ 脆弱性/ 的/ 演化/ 问题/ ;/ (/ 3/ )/ 为了/ 在/ 系统/ 设计阶段/ 减少/ 脆弱性/ ,/ 文献/ [/ 9/ ]/ 研究/ 了/ 由于/ 代码/ 重用/ 造成/ 的/ 脆弱/ 点/ 在/ 旧有/ 代码/ 与/ 新/ 代码/ 之间/ 传播/ 的/ 问题/ ,/ 并/ 对/ 每/ 一类/ 脆弱/ 点/ 建立/ 单独/ 的/ 脆弱性/ 树/ (/ Vulnerabletrees/ )/ ./ 文献/ [/ 10/ ]/ 则/ 研究/ 了/ 在/ 面向对象/ 设计阶段/ 由类/ 的/ 耦合/ 而/ 引入/ 的/ 脆弱性/ 扩散/ ,/ 并/ 采用/ 脆弱性/ 树/ 和/ 自动/ 柜员机/ (/ AutomatedTellerMachine/ ,/ ATM/ )/ 方法/ 进行/ 了/ 分析/ ./ 但是/ 这些/ 研究/ 虽然/ 对/ 不同/ 脆弱/ 点/ 类型/ 进行/ 了/ 区分/ ,/ 却/ 仅/ 考虑/ 了/ 脆弱性/ 在/ 同种/ 类型/ 脆弱/ 点/ 之间/ 的/ 传播/ ,/ 而/ 没有/ 考虑/ 在/ 不同/ 类型/ 脆弱/ 点/ 之间/ 传播/ 的/ 问题/ ./ 此外/ ,/ 当/ 系统/ 规模/ 巨大/ 时/ ,/ 组件/ 数量/ 及其/ 相互/ 关联/ 可能/ 达到/ 数以百万计/ ,/ 此时/ 利用/ 脆弱性/ 树/ 或者/ ATM/ 进行/ 脆弱性/ 扩散/ 分析/ ,/ 将/ 面临/ 状态/ 空间/ 爆炸/ 的/ 问题/ ./ 综上所述/ ,/ 虽然/ 现有/ 研究/ 为/ 脆弱性/ 扩散/ 分析/ 和/ 预测/ 提供/ 了/ 重要/ 基础/ ,/ 但是/ 对于/ 分布式/ 虚拟化/ 系统/ 中/ 由于/ 动态/ 连接/ 而/ 引入/ 的/ 脆弱性/ 扩散/ 仍/ 具有/ 一定/ 的/ 局限性/ ,/ 主要/ 表现/ 在/ :/ (/ 1/ )/ 由于/ 虚拟化/ 技术/ ,/ 在/ 分布式/ 虚拟化/ 系统/ 中/ 服务/ 所用/ 资源/ 处于/ 远程/ “/ 模糊化/ ”/ 的/ 云中/ ,/ 无法/ 事先/ 预测/ 连接/ 的/ 对象/ ,/ 因而/ 脆弱性/ 扩散/ 具有/ 很强/ 的/ 概率/ 性/ ,/ 基于/ 事后/ 日志/ 的/ 分析方法/ 往往/ 难以/ 准确/ 描述/ 这种/ 随机/ 选择/ ;/ (/ 2/ )/ 虽然/ 现有/ 部分/ 模型/ 已/ 将/ 不同/ 的/ 脆弱/ 点/ 分类/ ,/ 但/ 通常/ 仅仅/ 研究/ 脆弱性/ 在/ 同种/ 类型/ 脆弱/ 点/ 之间/ 的/ 扩散/ ,/ 即/ 假定/ 扩散/ 是/ 均匀/ 地/ ,/ 而/ 忽略/ 了/ 脆弱性/ 在/ 不同/ 类型/ 脆弱/ 点/ 之间/ 传播/ 的/ 差异/ ;/ (/ 3/ )/ 此外/ ,/ 随着/ 节点/ 规模/ 的/ 扩大/ (/ 甚至/ 数以亿计/ )/ ,/ 传统/ 的/ 基于/ 状态/ 空间/ 的/ 分析方法/ 如/ 马尔可夫/ 过程/ 、/ 脆弱性/ 树/ 等/ 面临/ 严重/ 的/ 状态/ 空间/ 爆炸/ 问题/ [/ 11/ ]/ ./ 针对/ 现有/ 模型/ 的/ 不足/ ,/ 考虑/ 分布式/ 虚拟化/ 系统/ ①/ Secunia/ ./ VulnerabilityUpdate/ ,/ August/ ,/ September/ ,/ OctoberPage3/ 节点/ 脆弱性/ 的/ 差异/ ,/ 本文/ 把/ 具有/ 相同/ 类型/ 脆弱/ 点/ 的/ 节点/ 抽象/ 为/ 同一个/ 簇/ ,/ 研究/ 脆弱性/ 在/ 簇内/ 和/ 簇间/ 传播/ 的/ 过程/ ,/ 以及/ 脆弱/ 点/ 由/ 一种/ 类型/ 演化/ 为/ 其他/ 类型/ 时/ 脆弱性/ 的/ 簇间/ 迁移/ 问题/ ./ 在/ 此基础/ 上/ ,/ 利用生物/ 性能/ 评价/ 进程/ 代数/ Bio/ -/ PEPA/ 对/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 过程/ 进行/ 描述/ 和/ 分析/ ./ 文章/ 组织/ 结构/ 如下/ ,/ 首先/ 对/ Bio/ -/ PEPA/ 进行/ 简单/ 介绍/ ,/ 然后/ 对/ 分布式/ 虚拟化/ 系统/ 的/ 脆弱性/ 扩散/ 过程/ 建模/ ,/ 并/ 就/ 模型/ 关键/ 参数/ 对于/ 脆弱性/ 扩散/ 趋势/ 的/ 影响/ 进行/ 分析/ ,/ 最后/ 做出/ 总结/ ./ 2Bio/ -/ PEPA/ 的/ 基础/ 语义/ Bio/ -/ PEPA/ 是/ 在/ 性能/ 评价/ 进程/ 代数/ PEPA/ (/ Per/ -/ formanceEvaluationProcessAlgebra/ )/ 基础/ 之上/ 发展/ 而来/ 的/ 一种/ 新型/ 形式化/ 语言/ ./ 由于/ 引入/ 了/ 生物/ 网络/ (/ BiologicalNetwork/ )/ 的/ 特点/ ,/ 其/ 具有/ 静态/ 分层/ (/ statichierarchy/ )/ 特性/ [/ 12/ ]/ ,/ 能够/ 抽象/ 出/ 一系列/ 独立/ 的/ 位置/ (/ location/ )/ ,/ 因而/ 适宜/ 于/ 本文/ 描述/ 脆弱性/ 在/ 不同/ 类型/ 脆弱/ 点/ 之间/ 扩散/ 的/ 过程/ ./ 同时/ ,/ 由于/ Bio/ -/ PEPA/ 可以/ 转化/ 为/ ODEs/ (/ OrdinaryDifferentialEquations/ )/ 求解/ ,/ 能够/ 克服/ 传统/ 的/ 基于/ 状态/ 空间/ 方法/ 面临/ 的/ 状态/ 空间/ 爆炸/ 问题/ ,/ 所以/ 更加/ 适用/ 于/ 组件/ 数量/ 众多/ 的/ 大型/ 分布式/ 虚拟化/ 环境/ ./ Bio/ -/ PEPA/ 基本/ 组成/ 元素/ 包括/ 两个/ 种类/ ,/ 分别/ 是/ 种类/ 组件/ S/ (/ speciescomponents/ )/ 和/ 模型/ 组件/ P/ (/ modelcomponents/ )/ ,/ 前者/ 用于/ 描述/ 每一/ 种类/ 的/ 行为/ ,/ 后者/ 用于/ 描述/ 种类/ 之间/ 的/ 交互/ 及/ 初始化/ ./ Bio/ -/ PEPA/ 基本/ 语意/ 表达式/ 如下/ [/ 12/ -/ 13/ ]/ :/ S/ ·/ 其中/ 各/ 表达式/ 的/ 含义/ 如下/ :/ (/ 1/ )/ 在/ 前缀/ (/ α/ ,/ r/ )/ 中/ ,/ α/ 代表/ 动作/ ,/ r/ 代表/ 执行/ 动作/ α/ 时/ 种类/ S/ 的/ 计量/ 系数/ ,/ 又/ 称为/ 变迁/ 速率/ ./ 当/ S/ 为/ 反应物/ 时/ r/ 为/ 正值/ ,/ 当/ S/ 为/ 生成物/ 时/ r/ 为/ 负值/ ./ 操作符/ “/ +/ ”/ 代表/ S/ 之间/ 的/ 选择/ ./ Constant/ 代表/ 常量/ ./ S/ @/ L/ 代表/ 在/ 位置/ L/ 中/ 的/ 组件/ S/ ,/ 通常/ 一个/ 位置/ 可以/ 描述/ 为/ L/ :/ sunit/ ,/ kind/ ,/ 其中/ s/ 代表/ 大小/ ,/ unit/ 是/ 与/ 之/ 相关/ 的/ 度量/ 单位/ ,/ kind/ 代表/ 种类/ ./ 当仅/ 有/ 一个/ 位置/ L/ 时/ ,/ 则/ 可以/ 省略/ 不写/ ,/ 在/ 本文/ 中/ 位置/ L/ 代表/ 独立/ 的/ 簇/ ./ (/ 2/ )/ 操作/ op/ 代表/ S/ 在/ 反应/ 中/ 的/ 作用/ ,/ 包括/ S/ 为/ 反应物/ (/ ↓/ )/ 、/ 生成物/ (/ ↑/ )/ 和/ 通用/ 修改/ (/ ⊙/ )/ 等/ 情况/ ./ (/ 3/ )/ / / 代表/ 合作/ 操作符/ ,/ 其中/ G/ 是/ 在/ 合作/ 过程/ 中/ 必须/ 同步/ 的/ 动作/ 集合/ ./ 若记/ 为/ / / / 过程/ 中/ 所/ 涉及/ 的/ 动作/ 必须/ 同步/ 执行/ ./ S/ (/ x/ )/ 中/ 的/ x/ ∈/ 犖/ +/ ,/ 表示/ 初始/ 时刻/ 组件/ 的/ 数量/ ./ (/ 4/ )/ 对于/ 任意/ 的/ 反应/ 〈/ Reaction/ 〉/ S1/ +/ S2/ →/ S3/ +/ S4/ ,/ 反应/ 速率/ fk/ 有/ 两种/ 基本/ 种类/ mass/ -/ action/ 和/ Michealis/ -/ Menten/ ./ 不同于/ 生物/ 系统/ ,/ 分布式/ 虚拟化/ 系统/ 作为/ 一种/ 信息系统/ ,/ 仅/ 包含/ 第/ 1/ 种/ 反应/ ,/ 即/ 组件/ 的/ 浓度/ 越高则/ 发生/ 反应/ 的/ 概率/ 越大/ ./ 同时/ ,/ 允许/ 非/ 最简/ 反应式/ 的/ 存在/ [/ 12/ ]/ ,/ 即/ 可以/ 存在/ 〈/ Reaction1/ 〉/ S1/ +/ S2/ →/ S1/ +/ S4/ 或/ 〈/ Reaction2/ 〉/ S1/ +/ S2/ →/ 2S3/ 的/ 情况/ ./ 此时/ 用/ 表达式/ (/ α/ ,/ (/ r1/ ,/ r2/ )/ )/ ⊙/ 来/ 表示/ 组件/ S1/ 的/ 变迁/ 速率/ 的/ 改变/ ,/ 其中/ r1/ 、/ r2/ 分别/ 是/ 反应/ 前后/ 的/ 变迁/ 速率/ ,/ r/ =/ r2/ -/ r1/ ./ 当/ r/ =/ 1/ 时/ ,/ (/ α/ ,/ k/ )/ opS/ 可以/ 省略/ 为/ α/ opS/ ./ 限于/ 篇幅/ ,/ 详细/ 语义/ 逻辑/ 可/ 参见/ 文献/ [/ 13/ ]/ ./ 求解/ Bio/ -/ PEPA/ 主要/ 是/ 为了/ 获得/ 各/ 组件/ 的/ 近似/ 稳态/ 概率/ ,/ 继续/ 对系统/ 做/ 进一步/ 的/ 分析/ ./ 所谓/ 近似/ 稳态/ 概率/ 是/ 指/ 模型/ 稳定/ 后/ ,/ 各种/ 类/ 组件/ 的/ 数量/ (/ populationlevel/ )/ 占/ 所有/ 组件/ 总量/ 的/ 比例/ ./ 若/ 犡/ =/ (/ x1/ ,/ x2/ ,/ …/ ,/ xn/ )/ 代表/ 系统/ 中/ 各种/ 类/ 组件/ 的/ 数量/ ,/ Ntotal/ 为/ 系统/ 中/ 所有/ 组件/ 的/ 数量/ ,/ 那么/ / i/ ∈/ 犖/ +/ ,/ 0/ </ i/ </ n/ ,/ 种类/ i/ 组件/ 的/ 近似/ 稳态/ 概率/ 若/ Bio/ -/ PEPA/ 对应/ 的/ 隐含/ 标记/ 过程/ 为/ {/ M/ (/ t/ )/ ,/ t/ / 0/ }/ ,/ 其中/ 每/ 一个/ 状态/ 称为/ 一个/ 序列/ 组件/ Ci/ ,/ i/ 代表/ 种类/ ,/ Cij/ 是/ Ci/ 经过/ 一个/ 反应/ j/ 得到/ 的/ 派生/ ,/ 则/ 所有/ 的/ Cij/ 构成/ 状态/ 空间/ 的/ 状态/ 集合/ ./ 在/ 状态/ 空间/ 中/ ,/ 根据/ 状态/ 之间/ 的/ 转移/ 关系/ 可/ 列出/ 变迁/ 速率/ 矩阵/ 犇/ =/ {/ dij/ }/ n/ ×/ m/ ,/ 其中/ n/ 是/ 种类/ 组件/ 的/ 数量/ ,/ m/ 是/ 反应/ 的/ 个数/ ,/ dij/ 对应/ 于/ Cij/ 中/ 种类/ i/ 对/ 反应/ j/ 的/ 贡献/ ./ 所有/ 反应/ 速率/ fr/ 构成/ 动能/ 法/ 向量/ (/ kineticlawvector/ )/ 犞/ KL/ ,/ 其中/ fr/ =/ r/ / ∏/ i/ 反应物/ reactioni/ 的/ 数量/ ./ 在/ 此/ 条件/ 下/ ,/ 前述/ 向量/ 犡/ 满足/ ODEs/ :/ 由于/ 篇幅/ 的/ 限制/ ,/ 详细/ 推导/ 和/ 求解/ 过程/ 见/ 文献/ [/ 12/ -/ 13/ ]/ ./ 此外/ ,/ Bio/ -/ PEPA/ 不但/ 可以/ 通过/ 式/ (/ 5/ )/ 的/ 微分方程/ 形式/ 求解/ ,/ 还/ 可以/ 通过/ 随机/ 模拟/ 或/ 离散/ 马尔可夫/ 链/ 求解/ ./ Page43/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 模型/ 3.1/ 脆弱/ 点/ 的/ 分簇/ 系统/ 脆弱性/ 研究/ 是/ 一个/ 广泛/ 的/ 领域/ ,/ 并且/ 由于/ 应用/ 范围/ 和/ 侧重点/ 的/ 不同/ ,/ 脆弱性/ 的/ 定义/ 也/ 不尽相同/ ./ 其中/ ,/ 最具/ 代表性/ 的/ 是/ Bishop/ 和/ Bailey/ 的/ “/ computervulnerability/ ”/ 概念/ ./ 定义/ 1/ ./ 脆弱性/ ./ 脆弱/ 状态/ 是/ 指/ 一个/ 已/ 授权/ 状态/ ,/ 且/ 由/ 该/ 状态/ 经过/ 已/ 授权/ 的/ 转移/ 方式/ 可以/ 到达/ 未/ 授权/ 状态/ ,/ 而/ 脆弱性/ 是/ 指/ 脆弱/ 状态/ 区别/ 于/ 非/ 脆弱/ 状态/ 的/ 特征/ ./ 通常/ 将/ 这种/ 具有/ 脆弱性/ 的/ 组件/ 称为/ 脆弱/ 点/ ./ 造成/ 系统/ 脆弱性/ 的/ 原因/ 具有/ 多种类型/ ,/ 传统/ 上/ 主要/ 包括/ 操作系统/ 设计/ 缺陷/ 、/ 软件/ bug/ 等/ ./ 此外/ ,/ 连接性/ (/ connectivity/ )/ 、/ 可疑/ 用户/ 输入/ 、/ 不合理/ 信任/ 关系/ 、/ 间谍/ 或/ 恶意软件/ 等/ 因素/ 也/ 会/ 引入/ 额外/ 的/ 脆弱/ 点/ [/ 15/ ]/ ./ 分布式/ 虚拟化/ 系统/ 是/ 一类/ 以/ 分布式/ 虚拟化/ 技术/ 为/ 核心技术/ 的/ 通用/ 计算环境/ [/ 16/ ]/ ,/ 典型/ 计算/ 形态/ 包括/ 覆盖/ 网络/ 、/ 云/ 计算/ 系统/ 、/ 未来/ 网络/ 等/ ./ 分布式/ 虚拟化/ 系统/ 的/ 一项/ 重要/ 特征/ 是/ 虚拟/ 组件/ 与/ 物理/ 资源/ 相/ 分离/ ,/ 构成/ 服务/ 的/ 组件/ 均/ 来自/ 于/ 远程/ “/ 模糊化/ ”/ 的/ 云中/ ./ 这些/ 组件/ 将/ 通过/ 动态/ 组合/ 产生/ 满足用户/ 需求/ 的/ 个性化/ 服务/ ,/ 而/ 远程/ 被/ 连接/ 的/ 组件/ 的/ 脆弱性/ 往往/ 很难/ 断定/ ,/ 这/ 就/ 导致/ 脆弱性/ 通过/ 频繁/ 的/ 动态/ 连接/ 而/ 快速/ 扩散/ ./ 并且/ 随着/ 互联网/ 业务/ 的/ 增长/ 和/ 第三方/ 软件/ 的/ 广泛应用/ ,/ 这/ 类/ 由于/ 连接/ 而/ 产生/ 的/ 脆弱性/ 快速增长/ ,/ 已/ 成为/ 脆弱性/ 诱发/ 的/ 主要/ 原因/ ./ 因此/ ,/ 在/ 分布式/ 虚拟化/ 环境/ 下/ ,/ 系统/ 脆弱性/ 面临/ 着/ 更为/ 严峻/ 的/ 挑战/ ./ 由于/ 虚拟化/ 技术/ 的/ 支撑/ ,/ 分布式/ 虚拟化/ 系统/ 中/ 的/ 所有/ 组件/ 都/ 可以/ 被/ 抽象/ 为/ “/ 对/ 等/ ”/ 的/ 实体/ ,/ 它们/ 之间/ 通过/ 广义/ 上/ 的/ 连接/ 关系/ 构成/ 系统/ 各类/ 服务/ ./ 于是/ ,/ 脆弱性/ 就/ 可以/ 是/ 视为/ 在/ 这些/ 对/ 等/ 实体/ 之间/ 的/ 扩散/ ./ 在/ 本文/ 中/ 我们/ 把/ 这些/ 抽象/ 的/ 对/ 等/ 实体/ 称之为/ 节点/ ./ 相对/ 于/ 脆弱/ 点/ 产生/ 而言/ ,/ 系统/ 脆弱性/ 扩散/ 仅/ 依赖于/ 节点/ 之间/ 的/ 联系/ ,/ 具有/ 良好/ 的/ 数学/ 统计/ 规律/ [/ 17/ ]/ ./ 本文/ 将/ 不再/ 讨论/ 已经/ 大量/ 研究/ 的/ 脆弱性/ 产生/ 过程/ ,/ 仅/ 考虑/ 脆弱性/ 在/ 节点/ 间/ 的/ 扩散/ ./ 目前/ 许多/ 学者/ 已经/ 采用/ 基于/ 状态/ 的/ 方法/ 对/ 脆弱性/ 扩散/ 规律/ 进行/ 了/ 研究/ ./ 然而/ 传统/ 脆弱性/ 模型/ 往往/ 在/ 整个/ 系统/ 层面/ 研究/ 脆弱性/ 的/ 扩散/ ,/ 没有/ 区分/ 脆弱性/ 类型/ 造成/ 的/ 扩散/ 差异/ ,/ 或者/ 仅/ 关注/ 脆弱性/ 在/ 同种/ 类型/ 脆弱/ 点/ 之间/ 的/ 扩散/ ,/ 而/ 忽视/ 了/ 不同/ 脆弱/ 点/ 类型/ 之间/ 的/ 扩散/ ./ 但是/ 对于/ 一个/ 分布式/ 虚拟化/ 系统/ 而言/ ,/ 系统/ 包含/ 的/ 脆弱/ 点/ 种类/ 数以千计/ ,/ 脆弱性/ 在/ 包含/ 不同/ 类型/ 脆弱/ 点/ 的/ 组件/ 之间/ 普遍存在/ ,/ 且/ 传播/ 趋势/ 差别/ 较大/ ,/ 扩散/ 过程/ 往往/ 是/ 不/ 均匀/ 的/ ./ 为了/ 更加/ 精确/ 的/ 描述/ 和/ 分析/ 这一/ 扩散/ 过程/ ,/ 本文/ 提出/ 把/ 包含/ 同/ 一类/ 脆弱/ 点/ 的/ 节点/ 划分/ 为/ 一个/ 类/ ,/ 称之为/ 一个/ 簇/ ./ 为/ 研究/ 简便/ ,/ 假设/ 每个/ 节点/ 在/ 确定/ 时刻/ 其中/ 一类/ 脆弱/ 点/ 占/ 主要/ 地位/ ,/ 则/ 按照/ 占/ 主要/ 地位/ 的/ 脆弱/ 点/ 类型/ 决定/ 节点/ 的/ 归属/ ./ 同时/ 随着/ 时间/ 的/ 演进/ ,/ 由于/ 系统升级/ 、/ 安全策略/ 更改/ 和/ 内外/ 条件/ 变化/ ,/ 节点/ 对应/ 的/ 脆弱/ 点/ 类型/ 发生/ 改变/ ,/ 此时/ 称之为/ 迁移/ 到/ 其他/ 簇/ ./ 据/ 已有/ 研究/ 显示/ ,/ 由于/ 安全策略/ 和/ 所处/ 环境/ 的/ 不同/ ,/ 在/ 某/ 一/ 确定/ 时刻/ ,/ 在/ 一个/ 簇内/ 节点/ 可能/ 具备/ 不同/ 的/ 状态/ ./ 借鉴/ 软件/ 脆弱/ 点/ 状态/ 模型/ [/ 6/ ]/ 和/ 经典/ 病毒传播/ SIR/ 模型/ [/ 18/ ]/ ,/ 把/ 节点/ 抽象/ 成/ 如下/ 5/ 种/ 状态/ :/ (/ 1/ )/ W/ ./ 该类/ 节点/ 虽然/ 目前/ 没有/ 表现/ 出/ 脆弱性/ ,/ 但是/ 具有/ 转化/ 为/ 某类/ 脆弱/ 点/ 的/ 潜在/ 可能/ ,/ 当/ 与/ 处于/ VE/ 和/ VS/ 状态/ 的/ 节点/ 连接/ 时/ 可能/ 被/ 渗透/ 而/ 具有/ 脆弱性/ ;/ (/ 2/ )/ VE/ ./ 包含/ 已知/ 脆弱/ 点/ 但/ 尚未/ 被/ 检测/ 出/ 的/ 节点/ ;/ (/ 3/ )/ VS/ ./ 包含/ 已知/ 脆弱/ 点且/ 已/ 被/ 检测/ 出/ 的/ 节点/ ;/ (/ 4/ )/ F/ ./ 未/ 及时/ 修复/ 脆弱/ 点/ ,/ 已/ 造成/ 故障/ // 失效/ 的/ 节点/ ;/ (/ 5/ )/ R/ ./ 脆弱/ 点/ 修复/ 后/ 的/ 节点/ ./ 其中/ ,/ 修复/ 方式/ 可以/ 包括/ 简单/ 的/ 断开连接/ 、/ 拒绝服务/ ,/ 以及/ 更加/ 有效/ 的/ 在线/ 升级/ 、/ 打补丁/ 、/ 重/ 配置/ 等/ 方式/ ./ 记/ 节点/ 的/ 全部/ 状态/ 集合/ S0/ =/ {/ W/ ,/ VE/ ,/ VS/ ,/ F/ ,/ R/ }/ ,/ 而/ 其中/ VE/ ,/ VS/ ,/ F/ 构成/ 脆弱/ 态/ 集合/ Vset/ =/ {/ VE/ ,/ VS/ ,/ F/ }/ ./ 在/ 上述/ 条件/ 下/ ,/ 可以/ 把/ 节点/ 抽象/ 为/ 一系列/ Bio/ -/ PEPA/ 种类/ 组件/ ./ 为了/ 描述/ 的/ 简便/ ,/ 在/ 建立/ 的/ Bio/ -/ PEPA/ 模型/ 中/ ,/ 将/ 处于/ 状态/ 为/ Y/ ∈/ S0/ 的/ 节点/ ,/ 称为/ Y/ 组件/ ./ 下面/ 将/ 分别/ 研究/ 脆弱性/ 在/ 簇内/ 、/ 簇间/ 和/ 迁移/ 条件/ 下/ 的/ 扩散/ 过程/ ./ 3.2/ 由/ 簇内/ 传播/ 导致/ 的/ 脆弱性/ 扩散/ 相对/ 于/ 在/ 不同/ 脆弱/ 点/ 类型/ 之间/ 的/ 传播/ ,/ 脆弱性/ 通常/ 更/ 易于/ 在/ 具有/ 相同/ 缺陷/ 的/ 节点/ 之间/ 扩散/ ,/ 因此/ 首先/ 考虑/ 最为/ 简单/ 的/ 情况/ ,/ 即/ 脆弱性/ 在/ 同一个/ 簇内/ 的/ 扩散/ 过程/ ./ 在/ 任意/ 的/ 簇/ location/ 中/ ,/ 通过/ 连接/ 的/ 脆弱性/ 扩散/ 只/ 发生/ 在/ W/ 组件/ 和/ VS/ 组件/ ,/ 或者/ W/ 组件/ 和/ VE/ 组件/ 之间/ ,/ 不/ 考虑/ 对/ 扩散/ 范围/ 无/ 影响/ 的/ VS/ 和/ VE/ 组件/ 之间/ 的/ 传播/ ,/ 那么/ 簇内/ 的/ 脆弱性/ 扩散/ 可/ 概括/ 为/ 如下/ 规则/ ./ Page5/ [/ Propagation1/ ]/ :/ (/ 1/ )/ 〈/ link1/ 〉/ W/ +/ VE/ →/ 2VEVE/ 组件/ 通过/ 连接/ 把/ 脆弱性/ 扩散/ 到/ W/ 组件/ ;/ (/ 2/ )/ 〈/ link2/ 〉/ W/ +/ VS/ →/ VE/ +/ VSVS/ 组件/ 通过/ 连接/ 把/ 脆弱性/ 扩散/ 到/ W/ 组件/ ;/ (/ 3/ )/ 〈/ discovery/ 〉/ VE/ →/ VSVE/ 组件/ 由于/ 被/ 发现/ 或/ 披露/ 而/ 转化/ 为/ VS/ 组件/ ;/ (/ 4/ )/ 〈/ fail1/ 〉/ VE/ →/ FVE/ 组件/ 演化出/ 故障/ 或者/ 错误/ ;/ (/ 5/ )/ 〈/ fail2/ 〉/ VS/ →/ FVS/ 组件/ 演化出/ 故障/ 或者/ 错误/ ;/ (/ 6/ )/ 〈/ recovery1/ 〉/ VE/ →/ RVE/ 组件/ 被/ 修复/ ;/ (/ 7/ )/ 〈/ recovery2/ 〉/ VS/ →/ RVS/ 组件/ 被/ 修复/ ;/ (/ 8/ )/ 〈/ recovery3/ 〉/ F/ →/ RF/ 组件/ 被/ 修复/ ;/ (/ 9/ )/ 〈/ insecure/ 〉/ R/ →/ WR/ 组件/ 由于/ 可能/ 仍/ 存在/ 潜在/ 缺陷/ 而/ 转化/ 为/ W/ 组件/ ./ 在/ 规则/ 〈/ link1/ 〉/ 与/ 〈/ link2/ 〉/ 描述/ 的/ 脆弱性/ 扩散/ 中/ ,/ 已/ 表现/ 出/ 脆弱性/ 的/ 节点/ 使得/ 与/ 之/ 连接/ 的/ 其他/ 节点/ 表现/ 出/ 脆弱性/ ,/ 但是/ 这种/ 连接/ 可能/ 随时/ 由于/ 连接/ 中断/ 、/ 交互/ 中止/ 、/ 服务/ 取消/ ,/ 或者/ 第三方/ 安全/ 机构/ 的/ 临时/ 补丁/ 等/ 原因/ 而/ 中止/ ,/ 本文/ 把/ 这些/ 连接/ 的/ 中止/ 也/ 归结到/ 修复/ 规则/ 〈/ recovery1/ 〉/ 与/ 〈/ recovery2/ 〉/ 中/ ./ 在/ 规则/ 〈/ link2/ 〉/ 中/ ,/ 由于/ 脆弱性/ 扩散/ 的/ 隐蔽性/ ,/ VS/ 组件/ 与/ W/ 组件/ 连接/ 默认/ 形成/ 了/ VE/ 组件/ ,/ VE/ 可以/ 经过/ 规则/ 〈/ discovery/ 〉/ 再/ 转化/ 为/ VS/ ./ 在/ 〈/ insecure/ 〉/ 中/ ,/ 一方面/ 由于/ 连接/ 中止/ 等/ 方式/ 使得/ 部分/ 节点/ 的/ 脆弱/ 点/ 没有/ 得到/ 彻底/ 恢复/ ;/ 另一方面/ ,/ 又/ 如/ 协议/ 的/ 安全性/ 脆弱/ 点/ 不/ 可能/ 在/ 系统/ 局部/ 得到/ 解决/ ,/ 组件/ 可能/ 仍/ 隐含/ 缺陷/ ,/ 所以/ 部分/ R/ 组件/ 将/ 重新/ 转化/ 为/ W/ 组件/ ./ 此外/ ,/ 对于/ R/ 组件/ 与/ VS/ 、/ VE/ 组件/ 连接/ 进行/ 脆弱性/ 扩散/ ,/ 可以/ 认为/ 先/ 转化/ 为/ W/ 组件/ ,/ 然后/ 进行/ 脆弱性/ 扩散/ ./ 需要/ 指出/ 的/ 是/ ,/ 对于/ 修复/ 后/ R/ 组件/ 不能/ 再/ 转化/ 为/ W/ 的/ 组件/ 被/ 视为/ 迁移/ 出该/ 簇/ ,/ 将/ 在/ 3.4/ 节中/ 单独/ 讨论/ ./ 在/ 簇内/ 扩散/ 中/ ,/ 记/ 扩散/ 集合/ Propagation1/ =/ {/ link1/ ,/ link2/ ,/ discovery/ ,/ fail1/ ,/ fail2/ ,/ recovery1/ ,/ recovery2/ ,/ recovery3/ ,/ insecure/ }/ ./ 对于/ 每个/ 反应/ (/ 扩散/ 规则/ )/ ,/ 其/ 变迁/ 速率/ 记为/ r/ α/ ,/ α/ ∈/ Propagation1/ ./ 在/ 此/ 先/ 不/ 考虑/ 节点/ 的/ 加入/ 与/ 退出/ ,/ 即/ 在/ 一定/ 时间段/ 内/ 组件/ 总量/ 是/ 固定/ 的/ ,/ 并/ 记为/ N/ ./ 在/ 某/ 一/ 时刻/ t/ ,/ 组件/ W/ ,/ VE/ ,/ VS/ ,/ F/ ,/ R/ 的/ 个数/ 分别/ 记为/ nW/ ,/ nE/ ,/ nS/ ,/ nF/ ,/ nR/ ./ 由/ Bio/ -/ PEPA/ 的/ Mass/ -/ Action/ 语义/ 规则/ [/ 12/ ]/ ,/ 则/ 反应/ 速率/ 分别/ 满足/ flink1/ =/ rlink1nWnE/ ,/ flink2/ =/ rlink2nWnS/ ,/ fdiscovery/ =/ rdiscoverynE/ ,/ ffail1/ =/ rfail1nE/ ,/ ffail2/ =/ rfail2nS/ ,/ frecovery1/ =/ rrecovery1nE/ ,/ frecovery2/ =/ rrecovery2nS/ ,/ frecovery3/ =/ rrecovery3nF/ ,/ finsecure/ =/ rinsecurenR/ ./ 3.3/ 由/ 簇间/ 传播/ 导致/ 的/ 脆弱性/ 扩散/ 在/ 具有/ 脆弱/ 点/ 的/ 分布式/ 虚拟化/ 系统/ 中/ ,/ 脆弱性/ 不但/ 会/ 在/ 同种/ 类型/ 的/ 脆弱/ 点/ 之间/ 扩散/ ,/ 有时/ 也/ 会/ 在/ 不同/ 类型/ 脆弱/ 点/ 之间/ 传播/ ./ 例如/ 组件/ CA/ 具有/ 一个/ 潜在/ 的/ 访问/ 权限/ 缺陷/ ,/ 但是/ 当前/ 并未/ 表现/ ./ 而/ 组件/ CB/ 具有/ 另/ 一种/ 脆弱/ 点/ 类型/ 且/ 已/ 感染/ 恶意软件/ ,/ 当/ CA/ 连接/ CB/ 时/ ,/ 其他/ 组件/ 就/ 可以/ 通过/ CB/ 而/ 获得/ 组件/ CA/ 的/ 高/ 优先级/ 权限/ ,/ 使/ CA/ 表现/ 出/ 脆弱性/ ,/ 就/ 发生/ 了/ 一次/ 脆弱性/ 簇间/ 扩散/ ./ 当然/ ,/ 在/ 其他/ 实例/ 中/ 组件/ CA/ 也/ 可能/ 更多地/ 表现/ 出/ CB/ 的/ 脆弱性/ 类型/ ,/ 按照/ 3.1/ 节/ 的/ 分簇/ 原则/ ,/ 此时/ 本文/ 认为/ 发生/ 了/ 组件/ 的/ 簇间/ 迁移/ ,/ 将/ 在/ 3.4/ 节中/ 进行/ 阐述/ ./ 下面/ 将/ 对/ 脆弱性/ 簇间/ 传播/ 的/ 情况/ 进行/ 讨论/ ./ 与/ 簇内/ 传播/ 相/ 类似/ ,/ 簇间/ 脆弱性/ 的/ 传播/ 也/ 主要/ 发生/ 在/ W/ 和/ VE/ 、/ VS/ 之间/ ./ 此外/ ,/ 如果/ 一个/ 脆弱/ 点/ 类型/ 为/ A/ 的/ 簇/ locationA/ 内/ VE/ 或/ VS/ 组件/ 连接/ 了/ 另/ 一个/ 脆弱/ 点/ 类型/ 为/ B/ 的/ 簇/ locationB/ 中/ VE/ 或/ VS/ 组件/ ,/ 此时/ 将/ 判断/ 何种/ 类型/ 脆弱/ 点/ 占/ 主导地位/ ,/ 若/ 原来/ 的/ 脆弱/ 点/ 类型/ A/ 占/ 主导/ ,/ 从/ 整体/ 上/ 来看/ 对/ 脆弱性/ 扩散/ 的/ 范围/ 没有/ 产生/ 重大/ 影响/ ,/ 本文/ 中将/ 不再/ 建立/ 单独/ 的/ 规则/ ;/ 如果/ 脆弱/ 点/ 类型/ B/ 占/ 主导/ 将/ 视为/ 已/ 迁移/ 到/ 其他/ 的/ 簇/ ,/ 将/ 在/ 3.4/ 节中/ 讨论/ ./ 若/ 系统/ 中/ 包含/ l/ 个/ 簇/ ,/ 记簇/ 的/ 集合/ 为/ C/ =/ {/ location1/ ,/ location2/ ,/ …/ ,/ locationl/ }/ ,/ |/ C/ |/ =/ l/ ,/ 而/ locationi/ ,/ locationj/ ∈/ C/ ,/ 且/ locationi/ ≠/ locationj/ 代表/ 包含/ 不同/ 的/ 脆弱/ 点/ 类型/ ./ 则/ 脆弱性/ 簇间/ 传播/ 规则/ 如下/ ./ [/ Propagation2/ ]/ :/ (/ 10/ )/ 〈/ link1ij/ 〉/ W/ @/ locationi/ +/ VE/ @/ locationj/ →/ VE/ @/ locationi/ +/ VE/ @/ locationj/ 簇/ locationj/ 中/ VE/ 组件/ 通过/ 连接/ 把/ 脆弱性/ 扩散/ 到/ 簇/ locationi/ 中/ W/ 组件/ ;/ (/ 11/ )/ 〈/ link2ij/ 〉/ W/ @/ locationi/ +/ VS/ @/ locationj/ →/ VE/ @/ locationi/ +/ VE/ @/ locationj/ 簇/ locationj/ 中/ VS/ 组件/ 通过/ 连接/ 把/ 脆/ Page6/ 弱性/ 扩散/ 到/ 簇/ locationi/ 中/ W/ 组件/ ./ 记簇/ locationi/ 到/ locationj/ 的/ 脆弱性/ 扩散/ 的/ 变迁/ 速率/ 分别/ 是/ rlink1/ _/ ij/ ,/ rlink2/ _/ ij/ ./ locationi/ 中/ W/ 组件/ 的/ 数量/ 为/ nW/ @/ location/ _/ i/ ,/ locationj/ 中/ VE/ 组件/ 的/ 数量/ 为/ nVE/ @/ location/ _/ j/ ,/ 根据/ Bio/ -/ PEPA/ 的/ 反应/ 规则/ ,/ 其/ 反应/ 速率/ 满足/ flink1/ _/ ij/ =/ rlink1/ _/ ijnW/ @/ location/ _/ inVE/ @/ location/ _/ j/ ,/ flink2/ _/ ij/ =/ rlink2/ _/ ijnW/ @/ location/ _/ inVS/ @/ location/ _/ j/ ./ 若/ 某/ 两个/ 簇/ 之间/ 不/ 存在/ 扩散/ 关系/ ,/ 则/ 令/ rlink1/ _/ ij/ ,/ rlink2/ _/ ij/ =/ 0.3/ ./ 4/ 由/ 簇间/ 迁移/ 导致/ 的/ 脆弱性/ 扩散/ 除了/ 不同/ 类型/ 的/ 脆弱/ 点/ 之间/ 存在/ 脆弱性/ 传播/ ,/ 由于/ 系统升级/ 、/ 漏洞补丁/ 或者/ 连接/ 其他/ 脆弱/ 点/ 类型/ 等/ 情况/ ,/ 使得/ 占/ 主导地位/ 的/ 脆弱/ 点/ 类型/ 发生/ 改变/ ,/ 可以/ 抽象/ 为/ 节点/ 在/ 簇间/ 的/ 迁移/ ./ 例如/ ,/ 系统/ 打补丁/ 后/ ,/ 组件/ 由/ 原来/ 的/ 主要/ 包含/ A/ 种类/ 脆弱/ 点/ ,/ 改为/ 主要/ 包含/ B/ 种类/ 脆弱/ 点/ ./ 为了/ 避免/ 问题/ 的/ 复杂化/ ,/ 本文/ 将/ 脆弱性/ 的/ 传播/ 和/ 演化/ 进行/ 区分/ ,/ 以此/ 拆分/ 某些/ 复杂/ 的/ 脆弱性/ 扩散/ ,/ 而/ 簇间/ 迁移/ 导致/ 的/ 脆弱性/ 扩散/ 将/ 仅/ 涉及/ 演化/ 规则/ ./ 以图/ 1/ 中簇/ 内/ 传播/ 与/ 簇间/ 迁移/ 划分/ 的/ 实例/ 来/ 做/ 进行/ 进一步/ 说明/ ./ 图/ 1/ 脆弱性/ 的/ 簇内/ 传播/ 与/ 簇间/ 迁移/ 划分/ 示意图/ 迁出/ 簇/ locationA/ 中/ 处于/ VS/ 状态/ 的/ 节点/ 与/ 迁入/ 簇/ locationB/ 中/ 的/ 另/ 一个/ 处于/ VE/ 状态/ 的/ 节点/ 连接/ 后/ ,/ 占/ 主要/ 地位/ 的/ 脆弱/ 点/ 类型/ 变为/ B/ ,/ 这/ 其实/ 是/ 一个/ 复合/ 后/ 的/ 脆弱性/ 扩散/ ,/ 包含/ 簇内/ 传播/ 和/ 簇间/ 迁移/ ./ 对于/ 迁入/ 的/ 目的/ 簇/ locationB/ 而言/ ,/ 当簇/ locationA/ 中/ 节点/ 与/ 本/ 簇内/ 节点/ 相连/ 之前/ ,/ 这些/ 节点/ 与/ 本/ 簇内/ 节点/ 完全/ 不同/ ,/ 甚至/ 不是/ 包含/ 潜在/ 脆弱/ 点/ 的/ W/ 组件/ ,/ 因此/ 如果/ 不能/ 发生/ 3.3/ 节/ 所述/ 簇间/ 传播/ ,/ 那么/ 这些/ 节点/ 首先/ 必须/ 经过/ 演化/ 转化/ 为本/ 簇/ 的/ W/ 组件/ 才能/ 被/ 扩散/ 到/ 脆弱性/ ./ 于是/ ,/ 这个/ 复合/ 的/ 脆弱性/ 扩散/ 过程/ 将/ 包含/ 3/ 个/ 阶段/ ./ 第/ 1/ 阶段/ ,/ 簇/ locationA/ 中/ VS/ 组件/ 由于/ 环境/ 的/ 改变/ 被/ 暂时/ 修复/ ,/ 脆弱/ 点/ 类型/ A/ 在/ 该/ 节点/ 中将/ 不再/ 占/ 主导地位/ ,/ 即/ 发生/ 规则/ 〈/ recovery2/ 〉/ ;/ 第/ 2/ 阶段/ ,/ 修复/ 后/ 的/ 节点/ 状态/ 为/ R/ ,/ 发生/ 簇间/ 迁移/ 转变/ 为/ 迁入/ 簇/ locationB/ 的/ W/ 组件/ ;/ 第/ 3/ 阶段/ ,/ 在/ 簇/ locationB/ 内/ 发生/ 簇内/ 传播/ ,/ 节点/ 状态/ 由/ W/ 转化/ 为/ VE/ ,/ 即/ 发生/ 规则/ 〈/ link1/ 〉/ ./ 因而/ ,/ 仅/ 相当于/ 发生/ 了/ 由/ 迁出/ 簇/ locationA/ 的/ R/ 组件/ 到/ 迁入/ 簇/ locationB/ 的/ W/ 组件/ 的/ 演化/ ./ 同理/ ,/ 对于/ 迁出/ 簇/ locationA/ 的/ W/ 组件/ 而言/ ,/ 脆弱/ 点/ 演化/ 发生/ 时/ 从/ 迁出/ 簇/ 的/ W/ 组件/ 转化/ 为/ 迁入/ 簇/ 的/ W/ 组件/ ./ 因此/ ,/ 将/ 脆弱性/ 的/ 簇内/ 传播/ 、/ 簇间/ 传播/ 和/ 簇间/ 迁移/ 区分/ 后/ ,/ 簇间/ 迁移/ 的/ 规则/ 主要/ 包含/ 以下/ 两条/ ./ [/ Propagation3/ ]/ :/ (/ 12/ )/ 〈/ migration1ij/ 〉/ W/ @/ locationi/ →/ W/ @/ locationj/ 簇/ location/ _/ i/ 中/ W/ 组件/ 迁移/ 为/ 簇/ location/ _/ j/ 中/ W/ 组件/ ;/ (/ 13/ )/ 〈/ migration2ij/ 〉/ R/ @/ locationi/ →/ W/ @/ locationj/ 簇/ location/ _/ i/ 中/ R/ 组件/ 迁移/ 为/ 簇/ location/ _/ j/ 中/ W/ 组件/ ./ 若/ 组件/ W/ 和/ R/ 迁移/ 的/ 变迁/ 速率/ 分别/ 为/ rm1/ _/ ij/ ,/ rm2/ _/ ij/ ∈/ [/ 0/ ,/ 1/ ]/ ,/ 其中/ i/ 代表/ 迁出/ 的/ 簇/ ,/ j/ 代表/ 迁入/ 的/ 簇/ ./ 记/ locationi/ 中/ W/ 组件/ 的/ 数量/ 为/ nW/ @/ location/ _/ i/ ,/ R/ 组件/ 的/ 数量/ 为/ nR/ @/ location/ _/ i/ ,/ 则/ 簇间/ 迁移/ 的/ 反应/ 速率/ 满足/ 若/ 某/ 两个/ 簇/ 之间/ 不/ 存在/ 簇间/ 迁移/ 关系/ ,/ 则/ 令/ rm1/ _/ ij/ ,/ rm2/ _/ ij/ =/ 0.3/ ./ 5/ 脆弱性/ 扩散/ 模型/ 的/ 描述/ 在/ 系统/ 中/ ,/ 两个/ 簇/ 之间/ 的/ 脆弱性/ 扩散/ 关系/ 包括/ 两种/ 基本/ 类型/ :/ 簇间/ 传播/ 和/ 簇间/ 迁移/ ,/ 而/ 这/ 两种/ 最/ 基本/ 的/ 类型/ 通过/ 组合/ 又/ 可以/ 构成/ 更为/ 复杂/ 的/ 关系/ ./ 若/ 假设/ 任意/ 选取/ 的/ 两种/ 脆弱/ 点/ 类型/ A/ 和/ B/ 是/ 对/ 等/ 的/ ,/ 那么/ 这些/ 组合/ 关系/ 如表/ 1/ 所示/ ./ 更为/ 一般化/ ,/ 当/ 系统/ 中/ 具有/ 0/ 至/ 可列个/ 节点/ 类型/ 的/ 时候/ ,/ 这些/ 脆弱性/ 扩散/ 关系/ 均/ 成立/ ./ 在/ 此/ 情况/ 下/ ,/ 假设/ 组件/ 的/ 水平/ 分级/ step/ -/ size/ =/ 1/ ,/ 在/ 簇/ k/ 中/ 组件/ 的/ 最大/ 数量/ 为/ Nk/ ./ 若/ j/ ≠/ i/ ,/ 在/ [/ 0/ ,/ T/ )/ 时间段/ 内/ ,/ 0/ </ T/ </ +/ ,/ 由/ 确定/ 初始/ 数量/ 的/ 脆弱/ 点/ 诱发/ 的/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 用/ Bio/ -/ PEPA/ 描述/ 如下/ ./ Page7/ 序号/ 关系/ 表示/ 12345678W/ @/ locationi/ =/ 1/ )/ ↓/ W/ @/ locationi/ +/ (/ insecurei/ ,/ 1/ )/ ↑/ W/ @/ locationi/ +/ ∑/ j/ (/ link1ij/ ,/ 1/ )/ ↓/ W/ @/ locationi/ +/ ∑/ j/ (/ link2ij/ ,/ 1/ )/ ↓/ W/ @/ locationi/ +/ ∑/ j/ (/ migration1ij/ ,/ 1/ )/ ↓/ W/ @/ locationi/ +/ ∑/ j/ (/ migration1ji/ ,/ 1/ )/ ↑/ W/ @/ locationi/ +/ ∑/ j/ (/ migration2ji/ ,/ 1/ )/ ↑/ W/ @/ locationi/ ;/ VE/ @/ locationi/ =/ (/ link2i/ ,/ 1/ )/ ↑/ VE/ @/ locationi/ +/ (/ discoveryi/ ,/ 1/ )/ ↓/ VE/ @/ locationi/ +/ (/ fail1i/ ,/ 1/ )/ ↓/ VE/ @/ locationi/ +/ (/ recovery1i/ ,/ 1/ )/ ↓/ VE/ @/ locationi/ +/ ∑/ j/ (/ link1ji/ ,/ 1/ )/ ↑/ VE/ @/ locationi/ +/ ∑/ j/ (/ link2ji/ ,/ 1/ )/ ↑/ VE/ @/ locationi/ ;/ VS/ @/ locationi/ =/ (/ discoveryi/ ,/ 1/ )/ ↑/ VS/ @/ locationi/ +/ (/ fail2i/ ,/ 1/ )/ ↓/ VS/ @/ locationi/ +/ (/ recovery2i/ ,/ 1/ )/ ↓/ VS/ @/ locationi/ ;/ F/ @/ locationi/ =/ 1/ )/ ↑/ F/ @/ locationi/ +/ (/ recovery3i/ ,/ 1/ )/ ↓/ F/ @/ locationi/ ;/ R/ @/ locationi/ =/ (/ recovery2i/ ,/ 1/ )/ ↑/ R/ @/ locationi/ +/ (/ recovery3i/ ,/ 1/ )/ ↑/ R/ @/ locationi/ +/ (/ insecurei/ ,/ 1/ )/ ↓/ R/ @/ locationi/ +/ ∑/ j/ (/ migration2ij/ ,/ 1/ )/ ↓/ R/ @/ locationi/ ./ 在/ 模型/ 中/ 如果/ 某/ 两个/ 簇/ 之间/ 不/ 存在/ 簇间/ 传播/ 或/ 簇间/ 迁移/ 时/ ,/ 则/ 令/ 相应/ 的/ 变迁/ 速率/ 为/ 零/ ./ 若/ 任意/ 第/ b/ 个/ 簇/ 中/ ,/ 1/ / b/ / M/ ,/ 令/ N0/ 为/ 初始/ 时刻/ 组件/ W/ 、/ VE/ 、/ VS/ 、/ F/ 和/ R/ 组件/ 的/ 数量/ ,/ 且/ 任意/ U/ 组件/ 的/ 初始/ 数量/ 满足/ N0/ 第/ b/ 个/ 簇/ 中/ 全部/ 组件/ 的/ 数量/ ./ 则/ 模型/ 可以/ 表述/ 为/ W/ [/ N0R/ [/ N0F/ [/ N0W1/ ]/ / / / VE/ [/ N0R1/ ]/ / / / W/ [/ N0F2/ ]/ / / / R/ [/ N0EM/ ]/ / / / VS/ [/ N0VE/ [/ N0/ 利用/ 该/ 模型/ 可以/ 对/ 包含/ 多种类型/ 脆弱/ 点/ ,/ 且/ 考虑/ 脆弱/ 点/ 演化/ 的/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 过程/ 进行/ 描述/ 和/ 分析/ ./ 4/ 脆弱性/ 扩散/ 的/ 模拟/ 与/ 分析/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 模型/ 包含/ 诸多/ 参数/ ,/ 它们/ 对模型/ 的/ 稳定性/ 和/ 合理性/ 存在/ 一定/ 的/ 影响/ ./ 本节/ 将/ 选取/ 量化/ 指标/ ,/ 简要/ 分析/ 脆弱性/ 簇间/ 传播/ 速率/ 、/ 簇间/ 变迁/ 速率/ 以及/ 节点/ 恢复能力/ 等/ 关键/ 参数/ 取值/ 对/ 脆弱性/ 扩散/ 过程/ 的/ 影响/ ,/ 并/ 与/ 实际/ 模拟实验/ 进行/ 比较/ ,/ 为/ 模型/ 进一步/ 改进/ 提供/ 参考/ ./ 4.1/ 脆弱性/ 扩散/ 的/ 指标/ 常见/ 的/ 系统/ 脆弱性/ 指标/ 包括/ 脆弱/ 点/ 存在/ 的/ 概率/ 和/ 范围/ ,/ 例如/ 文献/ [/ 4/ ]/ 中/ 脆弱/ 点/ 的/ 数量/ 和/ 分布/ 趋势/ 、/ 文献/ [/ 8/ ]/ 中/ 脆弱性/ 扩散/ 范围/ ./ 为了/ 更加/ 精确/ 地/ 刻画/ 脆弱性/ 扩散/ 的/ 趋势/ ,/ 本文/ 参考/ 脆弱性/ 分析/ 和/ 病毒传播/ 领域/ 已有/ 研究成果/ [/ 8/ ,/ 17/ -/ 18/ ]/ ,/ 提出/ 脆弱性/ 扩散/ 的/ 两项/ 指标/ 包括/ :/ 脆弱性/ 峰值/ 指数/ PV/ ,/ 以及/ 脆弱性/ 稳态/ 指数/ π/ V/ ./ 若令/ q/ ∈/ S0/ 代表/ 组件/ 种类/ ,/ location/ 代表/ 簇/ ,/ 得到/ 定义/ 如下/ ./ 定义/ 2/ ./ 脆弱性/ 峰值/ 指数/ ./ 所谓/ 脆弱性/ 峰值/ 指数/ 是/ 指/ 在/ 0/ </ t/ </ +/ 时刻/ ,/ 脆弱/ 态/ 集合/ Vset/ 中/ 各种/ 类/ 组件/ 数量/ 的/ 最大/ 比值/ ,/ 即/ PV/ =/ Max/ 其中/ ,/ nq/ @/ location/ 代表/ 在/ 簇/ location/ 中/ 组件/ q/ 的/ 数量/ ;/ Ntotal/ 是/ 指/ 系统/ 中/ 所有/ 组件/ 数量/ 的/ 总和/ ./ 定义/ 3/ ./ 脆弱性/ 稳态/ 指数/ ./ 所谓/ 脆弱性/ 稳态/ 指数/ 是/ 指当/ 系统/ 达到/ 稳态/ 后/ ,/ 脆弱/ 态/ 集合/ Vset/ 中/ 各种/ 类/ 组件/ 的/ 近似/ 稳态/ 概率/ 之/ 和/ ,/ 即/ 其中/ ,/ π/ q/ @/ location/ 代表/ 在/ 簇/ location/ 中/ 组件/ q/ 的/ 近似/ 稳态/ 概率/ ./ PV/ 主要/ 用来/ 表征/ 脆弱性/ 扩散/ 的/ 最大/ 范围/ ,/ 而/ 脆弱性/ 稳态/ 指数/ π/ V/ 用来/ 表征/ 脆弱性/ 对系统/ 长期/ 的/ 潜在/ 影响/ ./ 下面/ 将/ 结合/ 提出/ 的/ 指标/ ,/ 就/ 脆弱性/ 的/ 扩散/ 范围/ 与/ 趋势/ 分析/ 其内/ 在/ 扩散/ 规律/ ./ 4.2/ 脆弱性/ 扩散/ 实例/ 的/ 选取/ 由于/ 分布式/ 虚拟化/ 系统/ 中/ 任意/ 两个/ 簇/ 之间/ 都/ 可能/ 存在/ 如表/ 1/ 所示/ 的/ 8/ 种/ 关系/ ,/ 为了/ 抓住/ 问题/ 的/ 核心/ ,/ 减少/ 随机因素/ 干扰/ 和/ 系统/ 特异性/ 带来/ 的/ 额外/ 复/ Page8/ 杂性/ ,/ 本文/ 选取/ 一种/ 最为/ 简单/ 的/ 实例/ ,/ 如图/ 2/ 所示/ ./ 其中/ locationA/ 、/ locationB/ 、/ locationC/ 分别/ 代表/ 包括/ 3/ 种/ 脆弱/ 点/ 类型/ A/ 、/ B/ 、/ C/ 的/ 组件/ 集合/ ,/ 即/ Bio/ -/ PEPA/ 模型/ 的/ 3/ 个/ 簇/ ./ 其中/ locationA/ 中/ 节点/ 的/ 脆弱性/ 能够/ 传播/ 给/ locationB/ 中/ 节点/ ,/ locationB/ 中/ 节点/ 的/ 脆弱性/ 能够/ 传播/ 给/ locationC/ 中/ 节点/ ;/ 同时/ 在/ 一定/ 条件/ 下/ ,/ 脆弱/ 点/ 类型/ A/ 可以/ 演化/ 为/ 脆弱/ 点/ 类型/ C/ ,/ 即/ locationA/ 中/ 节点/ 可/ 迁移/ 到/ locationC/ ./ 该/ 实例/ 同时/ 包含/ 簇间/ 扩散/ 、/ 簇间/ 迁移/ ,/ 且/ 有/ 节点/ 同时/ 受到/ 簇间/ 扩散/ 和/ 簇间/ 迁移/ 影响/ ,/ 具有/ 典型性/ ./ 需要/ 说明/ 的/ 是/ ,/ 系统/ 可以/ 包含/ 更/ 多/ 的/ 簇/ ,/ 且/ 它们/ 之间/ 的/ 关联/ 关系/ 可以/ 更加/ 复杂/ ,/ 但/ 核心/ 机理/ 与/ 本文/ 选取/ 的/ 实例/ 是/ 相似/ 的/ ./ 在/ 分布式/ 虚拟化/ 环境/ 下/ ,/ 由于/ 虚拟化/ 技术/ 的/ 运用/ ,/ 所有/ 计算资源/ 被/ 组织/ 成/ 资源/ 池/ 的/ 形式/ ./ 在/ 理论/ 上/ ,/ 池中/ 的/ 任意/ 资源/ 被/ 选中/ 的/ 概率/ 是/ 等同/ 的/ ,/ 并/ 不会/ 受到/ 具体/ 地理位置/ 和/ 实现/ 形式/ 的/ 影响/ ./ 参照/ 文献/ [/ 8/ ]/ 的/ 假设/ ,/ 不妨/ 设/ 共有/ N/ 个/ 节点/ ,/ 那么/ 选取/ 任意/ 一个/ 节点/ 的/ 概率/ 是/ N/ ,/ 即/ rlink1/ =/ 1/ // N/ ;/ 同时/ 由于/ 已经/ 表现/ 出/ 脆弱性/ 的/ 节点/ VS/ 可能/ 感染/ 诸如/ 蠕虫/ 或/ 间谍/ 软件/ ,/ 图/ 3Bio/ -/ PEPA/ 模型/ 与/ 随机/ 模拟/ 结果/ 的/ 对比/ 因此/ 可能/ 会/ 主动/ 发起/ 扫描/ 或/ 连接/ ,/ 不妨/ 假设/ 它/ 的/ 连接/ 机率/ 增加/ 一个/ 数量级/ rlink2/ =/ 10/ ×/ 1/ // N/ ./ 相对/ 于/ 簇内/ 扩散/ ,/ 脆弱性/ 簇间/ 扩散/ 发生/ 的/ 概率/ 更/ 小/ ,/ 簇间/ 扩散/ 的/ 变迁/ 速率/ 取值/ 为/ 簇内/ 扩散/ 变迁/ 速率/ 的/ 1/ // 10/ ./ 为了/ 突出/ 簇间/ 扩散/ 和/ 簇间/ 迁移/ 的/ 影响/ ,/ 减少/ 对比/ 试验/ 的/ 随机/ 干扰/ ,/ 假设/ locationA/ 、/ locationB/ 、/ locationC/ 簇内/ 的/ 扩散/ 参数/ 是/ 相同/ 的/ ,/ 其余/ 各/ 参数/ 的/ 取值/ 如表/ 2/ 所示/ ./ 参数/ rdiscoveryrrecovery1rrecovery2rrecovery3rfail1rfail2rinsecure/ 需要/ 说明/ 的/ 是/ ,/ 由于/ 模型/ 采用/ 了/ 形式化/ 描述/ 的/ 方法/ ,/ 对于/ 任意/ 给定/ 的/ 目标/ 系统/ (/ 或/ 实例/ )/ ,/ 均/ 可/ 通过/ 推导/ 得到/ 脆弱性/ 扩散/ 的/ 分析/ ,/ 因而/ 实例/ 的/ 选取/ 不是/ 唯一/ 的/ ./ 为了/ 提高/ 求解/ 的/ 效率/ ,/ 本文/ 利用/ 爱丁堡大学/ 开发/ 的/ EclipseBio/ -/ PEPAPlugin/ 工具包/ 辅助/ ODEs/ 求解/ [/ 19/ ]/ ./ 4.3/ 关键/ 参数/ 对/ 扩散/ 结果/ 的/ 影响/ (/ 1/ )/ 模型/ 与/ 仿真/ 结果/ 的/ 对比/ 为了/ 检验/ 模型/ 的/ 合理性/ ,/ 本文/ 首先/ 将/ 提出/ 的/ 模型/ 与/ 采用/ 随机/ 算法/ 模拟/ 的/ 现实/ 系统/ 相/ 比较/ ./ 令/ 系统/ 所有/ 组件/ 的/ 总量/ 为/ 300/ ,/ 设定/ 3/ 个/ 簇内/ 组件/ 数量/ (/ nW/ ,/ nE/ ,/ nS/ ,/ nF/ ,/ nR/ )/ 的/ 初始值/ 分别/ 为/ (/ 70/ ,/ 20/ ,/ 10/ ,/ 0/ ,/ 0/ )/ 、/ (/ 100/ ,/ 0/ ,/ 0/ ,/ 0/ ,/ 0/ )/ 、/ (/ 100/ ,/ 0/ ,/ 0/ ,/ 0/ ,/ 0/ )/ ,/ 随机/ 算法/ 采用/ 的/ 是/ Gillespire/ ’/ sTau/ -/ Leep/ 随机/ 算法/ ,/ 选取/ 10000/ 个/ 随/ Page9/ 机点/ ,/ 误差/ 设置/ 为/ 1/ ×/ 10/ -/ 5/ ./ 据此/ ,/ 得到/ 簇/ locationA/ 、/ locationB/ 、/ locationC/ 中/ 的/ 组件/ ,/ 以及/ 系统/ 全局/ 上/ Vset/ 集合/ 中/ 组件/ 数量/ 的/ 对/ 比如/ 图/ 3/ 所示/ ./ 其中/ 图/ 3/ (/ a/ )/ 、/ (/ b/ )/ 和/ (/ c/ )/ 分别/ 代表/ 在/ 0/ 到/ 100/ 个/ 时间/ 单位/ 内/ ,/ 在/ 簇/ locationA/ 、/ locationB/ 、/ locationC/ 三个/ 簇中/ 各种/ 组件/ 数量/ 与/ 仿真/ 实验/ 结果/ 的/ 对比/ ./ 图/ 3/ (/ a/ )/ 显示/ 在/ 初始/ 时刻/ 由于/ 脆弱/ 点/ 的/ 存在/ ,/ 脆弱性/ 在/ 簇内/ 迅速/ 扩散/ ,/ VE/ 和/ VS/ 组件/ 的/ 数量/ 逐渐/ 上升/ ./ 此后/ 随着/ 时间推移/ ,/ 由于/ 簇间/ 迁移/ 的/ 存在/ ,/ locationA/ 中/ 的/ 节点/ 将/ 逐渐/ 迁移/ 到/ locationC/ 中/ ,/ VE/ 和/ VS/ 的/ 数量/ 逐渐/ 下降/ 并/ 趋近/ 于/ 0/ ./ 在/ 图/ 3/ (/ b/ )/ 中/ ,/ 受簇/ locationA/ 脆弱性/ 簇间/ 传播/ 的/ 影响/ ,/ 簇/ locationB/ 中/ W/ 组件/ 逐渐/ 转化/ 为/ VE/ 和/ VS/ 组件/ ,/ 随后/ 由于/ 节点/ 修复/ 能力/ 的/ 存在/ ,/ 脆弱性/ 被/ 逐渐/ 修复/ ,/ 大量/ VE/ 和/ VS/ 组件/ 转化/ 为/ R/ 组件/ ./ 然而/ 因为/ VE/ 不能/ 被/ 全部/ 发现/ ,/ 所以/ VE/ 和/ VS/ 组件/ 将/ 逐渐/ 稳定/ 在/ 一定/ 的/ 水平/ ./ 在/ 图/ 3/ (/ c/ )/ 中/ ,/ 簇/ locationC/ 中/ 的/ 节点/ 受到/ 簇间/ 传播/ 和/ 簇间/ 迁移/ 的/ 双重/ 影响/ ./ 由于/ 由/ 簇/ locationA/ 中/ 节点/ 逐步/ 迁移/ 到/ 簇/ locationC/ ,/ 因而/ locationC/ 中/ W/ 组件/ 逐渐/ 增多/ ,/ 同时/ 受/ locationB/ 的/ 脆弱性/ 簇间/ 传播/ 影响/ ,/ VE/ 和/ VS/ 组件/ 逐渐/ 增多/ ,/ 此后/ 当/ 这/ 两种/ 组件/ 被/ 修复/ 后/ 转化/ 为/ R/ 组件/ ,/ 于是/ R/ 将/ 逐渐/ 增多/ ./ 而图/ 3/ (/ d/ )/ 则/ 为/ 整个/ 系统/ 范围/ 内/ 脆弱性/ 集合/ 中/ VE/ 、/ VS/ 和/ F/ 组件/ 数量/ 的/ 变化/ ,/ 由于/ 节点/ 修复/ 能力/ 的/ 存在/ ,/ 也/ 是/ 一个/ 先/ 增多/ 而后/ 减少/ 到/ 一个/ 稳定/ 值/ 的/ 过程/ ./ 在/ 图/ 3/ 中/ ,/ 由于/ VE/ 和/ VS/ 组件/ 演化出/ 故障/ 或者/ 错误/ 的/ 概率/ 较/ 小/ ,/ 且/ 系统/ 修复/ 能力/ 较强/ ,/ 组件/ F/ 数量/ 一直/ 处于/ 较/ 低水平/ ./ 由图/ 3/ 的/ 结果/ 可见/ ,/ 本文/ 模型/ 与/ 模拟/ 结果/ 基本一致/ ,/ 能够/ 反映/ 系统/ 中/ 脆弱性/ 扩散/ 的/ 趋势/ ./ (/ 2/ )/ 簇间/ 传播/ 与/ 簇间/ 迁移/ 对/ 脆弱性/ 扩散/ 的/ 影响/ ./ 簇间/ 传播/ 是/ 脆弱性/ 扩散/ 的/ 一种/ 重要/ 方式/ ,/ 在/ 本文/ 的/ 模型/ 中/ 主要/ 由/ 簇间/ 传播/ 速率/ rlink1/ _/ ij/ 和/ rlink2/ _/ ij/ 进行/ 控制/ ,/ 分别/ 代表/ 了/ 某个/ 簇中/ 处于/ VE/ 和/ VS/ 状态/ 的/ 节图/ 4/ 簇间/ 传播/ 速率/ 对/ Vset/ 中/ 组件/ 数量/ 的/ 影响/ 点/ 对/ 其他/ 簇中/ 连接/ 节点/ 的/ 影响/ ./ 在/ 本/ 实例/ 中/ ,/ rlink1/ _/ ij/ 包含/ rlink1/ _/ 12/ 和/ rlink1/ _/ 23/ ,/ 而/ rlink2/ _/ ij/ 包含/ rlink2/ _/ 12/ 和/ rlink2/ _/ 23/ ./ 为了/ 分析/ 簇间/ 传播/ 对/ 脆弱性/ 扩散/ 的/ 影响/ ,/ 下面/ 将/ 以/ PV/ 和/ π/ V/ 为/ 指标/ ,/ 在/ 整个/ 分布式/ 虚拟化/ 系统/ 层面/ ,/ 考察/ 参数/ rlink1/ _/ ij/ 和/ rlink2/ _/ ij/ 取值/ 水平/ 对/ 脆弱性/ 扩散/ 范围/ 和/ 趋势/ 的/ 影响/ ./ 当/ 连接/ 速率/ rlink1/ _/ ij/ 和/ rlink2/ _/ ij/ 分别/ 扩大/ 5/ 倍/ 、/ 扩大/ 2/ 倍/ 、/ 缩小/ 为/ 原来/ 的/ 1/ // 2/ 和/ 1/ // 5/ 时/ ,/ 整个/ 系统/ 范围/ 内/ VSet/ 中/ 组件/ 数量/ 的/ 变化/ 如图/ 4/ 所示/ ./ 由图/ 可见/ ,/ 随着/ rlink1/ _/ ij/ 和/ rlink2/ _/ ij/ 的/ 增大/ ,/ VSet/ 中/ 组件/ 数量/ 呈/ 逐渐/ 增长/ 的/ 趋势/ ,/ 并且/ 达到/ 扩散/ 峰值/ 的/ 时间/ 减小/ ./ 根据/ 图/ 4/ 中/ 数据/ ,/ 由式/ (/ 6/ )/ 和/ (/ 7/ )/ 分别/ 得到/ 脆弱性/ 扩散/ 的/ 峰值/ 指数/ PV/ 和/ 稳态/ 指数/ π/ V/ ,/ 如图/ 5/ 所示/ ./ 随着/ 连接/ 速率/ 的/ 增长/ ,/ PV/ 的/ 对应/ 值/ 分别/ 为/ 0.3321/ 、/ 0.3323/ 、/ 0.3402/ 、/ 0.3811/ 、/ 0.4605/ ,/ 即/ 随着/ 连接/ 速率/ 的/ 增大/ ,/ 脆弱性/ 扩散/ 的/ 峰值/ 逐渐/ 变大/ ./ 同理/ ,/ 得到/ π/ V/ 分别/ 为/ 0.1502/ 、/ 0.1505/ 、/ 0.1509/ 、/ 0.1516/ 和/ 0.1535/ ,/ 可见/ 最终/ 脆弱性/ 扩散/ 的/ 范围/ 基本相同/ ./ 发生/ 该/ 现象/ 的/ 根本原因/ 在于/ ,/ 随着/ 连接/ 速率/ 的/ 增大/ ,/ 簇/ locationA/ 与/ 簇/ locationB/ 节点/ 交互/ 更为/ 紧密/ ,/ 发生/ 脆弱性/ 传播/ 的/ 概率/ 增大/ ,/ 因而/ 扩散/ 的/ 峰值/ 增大/ 且/ 时间/ 缩短/ ./ 但是/ 由于/ 节点/ 数量/ 一定/ ,/ 而/ 节点/ 修复/ 能力/ 不变/ ,/ 簇中/ 感染/ 脆弱性/ 的/ 节点/ 基本/ 保持/ 在/ 一定/ 的/ 水平/ ./ 由此/ 说明/ 簇间/ 传播/ 速率/ 与/ 扩散/ 峰值/ 正向/ 相关/ ,/ 所以/ 为了/ 抑制/ 系统/ 的/ 脆弱性/ 需要/ 降低/ 簇间/ 传播/ 速率/ ./ 图/ 5/ 簇间/ 传播/ 速率/ 对/ 脆弱性/ 峰值/ 指数/ PV/ 和/ 与/ 此/ 相对/ 应/ ,/ 簇间/ 迁移/ 是/ 脆弱性/ 扩散/ 的/ 另/ 一种/ 重要/ 方式/ ,/ 在/ 本文/ 的/ 模型/ 中/ 主要/ 由/ 簇间/ 变迁/ 速率/ rm1/ _/ 13/ 和/ rm2/ _/ 13/ 进行/ 控制/ ,/ 分别/ 代表/ 了/ 由/ 原簇/ 中/ 处于/ W/ 和/ R/ 状态/ 的/ 节点/ 经过/ 演化/ 转化/ 为/ 新/ 脆弱/ 点/ 类型/ 的/ 概率/ ./ 为了/ 分析/ 簇间/ 迁移/ 对/ 脆弱性/ 扩散/ 的/ 影响/ ,/ 考察/ rm1/ _/ 13/ 和/ rm2/ _/ 13/ 的/ 取值/ 水平/ 对/ 簇/ locationC/ 内/ 脆弱性/ 扩散/ 范围/ 和/ 趋势/ 的/ 影响/ ./ 当/ 把/ rm1/ _/ 13/ 和/ rm2/ _/ 13/ 分别/ 改变/ 为/ 1/ // 50/ 、/ 1/ // 10/ 、/ 1/ // 2/ 时/ ,/ 在/ 簇/ locationC/ 内/ Vset/ 中组/ Page10/ 件/ 数量/ 如图/ 6/ 所示/ ./ 由图/ 中/ 可见/ 随着/ 簇间/ 变迁/ 速率/ 的/ 增大/ ,/ VE/ 和/ VS/ 组件/ 达到/ 同一/ 水平/ 所/ 需要/ 的/ 时间/ 缩短/ ,/ 加速/ 了/ 扩散/ 的/ 过程/ ./ 图/ 6/ 簇间/ 变迁/ 速率/ 对/ 簇/ locationC/ 中/ Vset/ 组件/ 总数/ 的/ 影响/ 同理/ ,/ 可以/ 得到/ 在/ 整个/ 分布式/ 虚拟化/ 系统/ 层面/ 的/ 脆弱性/ 扩散/ 的/ 峰值/ 指数/ PV/ 和/ 稳态/ 指数/ π/ V/ ,/ 如图/ 7/ 所示/ ./ 随着/ 变迁/ 速率/ 的/ 增大/ ,/ 脆弱性/ 扩散/ 的/ 峰值/ 逐渐/ 变/ 大/ ,/ 而/ 最终/ 脆弱性/ 扩散/ 的/ 范围/ 基本相同/ ./ 究其原因/ ,/ 变迁/ 速率/ 的/ 增大/ 使得/ 簇/ locationA/ 中/ 的/ 节点/ ,/ 甚至/ 是/ 已经/ 被/ 修复/ 的/ 节点/ 迁移/ 到/ 了/ 簇/ locationC/ 内/ ,/ 因而/ 簇/ locationC/ 内/ 的/ 潜在/ 脆弱性/ 节点/ 增多/ ,/ 更加/ 容易/ 产生/ 脆弱性/ 簇内/ 扩散/ ./ 但是/ 由于/ 整体/ 上/ 节点/ 数量/ 一定/ ,/ 而/ 节点/ 修复/ 能力/ 不变/ ,/ 簇中/ 具备/ 脆弱性/ 的/ 节点/ 基本/ 保持/ 在/ 某个/ 确定/ 水平/ ./ 由此/ 说明/ 簇间/ 变迁/ 速率/ 与/ 扩散/ 峰值/ 正向/ 相关/ ,/ 所以/ 为了/ 抑制/ 系统/ 的/ 脆弱性/ 需要/ 降低/ 簇间/ 变迁/ 速率/ ./ 图/ 7/ 簇间/ 变迁/ 速率/ 对/ 脆弱性/ 峰值/ 指数/ PV/ 和/ (/ 3/ )/ 修复/ 能力/ 对/ 脆弱性/ 扩散/ 的/ 影响/ 对于/ 目标/ 系统/ 而言/ ,/ 修复/ 能力/ 的/ 存在/ 可以/ 使/ 失效节点/ 恢复/ ,/ 有效/ 地/ 降低/ VE/ 和/ VS/ 的/ 水平/ ,/ 对/ 脆弱性/ 的/ 抑制/ 具有/ 重要/ 意义/ ./ 下面/ 将/ 以/ PV/ 和/ π/ V/ 为/ 指标/ ,/ 通过/ 令/ rrecovery1/ 和/ rrecovery2/ 分别/ 在/ 区间/ [/ 0.1/ ,/ 1.0/ ]/ 之间/ 9/ 等/ 分/ 取值/ 来/ 分析/ 修复/ 能力/ 对/ 脆弱性/ 扩散/ 的/ 影响/ ,/ 得到/ 结果/ 分别/ 如图/ 8/ 和/ 图/ 9/ 所示/ ./ 图/ 8/ 修复/ 能力/ 对/ 脆弱性/ 峰值/ 指数/ PV/ 的/ 影响/ 由图/ 8/ 和/ 图/ 9/ 可见/ ,/ 随着/ rrecovery1/ 和/ rrecovery2/ 取值/ 的/ 增大/ ,/ PV/ 和/ π/ V/ 逐渐/ 减小/ ,/ 并且/ 最终/ 趋势/ 变得/ 平缓/ ./ 发生/ 该/ 现象/ 的/ 原因/ 主要/ 是/ ,/ 当/ rrecovery1/ 和/ rrecovery2/ 增大/ 时/ ,/ 意味着/ 系统/ 具有/ 更/ 强大/ 的/ 修复/ 能力/ ,/ VE/ 和/ VS/ 组件/ 将/ 以/ 更/ 大/ 概率/ 被/ 修复/ ,/ 因而/ 脆弱性/ 扩散/ 的/ 峰值/ 和/ 范围/ 都/ 有所/ 减小/ ./ 此外/ ,/ 通过/ 对比/ 来看/ ,/ 当/ rrecovery2/ 和/ rrecovery1/ 减小/ 同等/ 幅度/ 时/ ,/ 前者/ 带来/ 的/ PV/ 和/ π/ V/ 的/ 增长/ 更为/ 剧烈/ ./ 这/ 主要/ 是/ 由于/ VE/ 最终/ 也/ 将/ 转化/ 为/ VS/ ,/ VS/ 修复/ 能力/ 的/ 增加/ 可以/ 更加/ 有效/ 地/ 抑制/ 脆弱性/ ./ 因此/ ,/ 为了/ 降低/ 扩散/ 的/ 最大/ 范围/ ,/ 尤其/ 是/ 脆弱性/ 最终/ 的/ 稳态/ 概率/ ,/ 需要/ 增强/ 节点/ 的/ 修复/ 能力/ ./ (/ 4/ )/ 模型/ 求解/ 开销/ 分析/ 由于/ 分布式/ 虚拟化/ 系统/ 往往/ 包含/ 大量/ 的/ 节点/ 并/ 分别/ 属于/ 众多/ 种类/ ,/ 因此/ 脆弱/ 扩散性/ 模型/ 能够/ 准确/ 快速/ 地/ 求解/ 具有/ 重要/ 现实意义/ ./ 根据/ 本文/ 模型/ ,/ 对于/ 一个/ 包含/ l/ 种/ 脆弱/ 点/ 类型/ 的/ 分布式/ 虚拟化/ 系统/ 而言/ ,/ 任意/ 的/ 簇/ locationk/ 包含/ 的/ 节点/ 数最多/ 为/ Nk/ ,/ 若/ 采用/ 文献/ [/ 9/ ,/ 10/ ]/ 的/ 方法/ 都/ 等价/ 于/ 求解/ 一个/ 隐含/ 的/ 马尔可夫/ 过程/ ,/ 则/ 根据/ 传统/ 的/ 基于/ 状态/ 的/ 求解/ 方法/ ,/ 其/ 状态/ 空间/ 未/ 化简/ 前/ 包含/ 的/ Page11/ 状态/ 数量/ 为/ 即使/ 在/ 状态/ 空间/ 化简/ 后/ ,/ 组件/ 数量/ 也/ 将/ 达到/ ,/ 求解/ 时/ 将/ 面临/ 状态/ 空间/ 爆炸/ 的/ 问题/ ./ 与/ 之/ 相对/ ,/ 本文/ 采用/ 了/ Bio/ -/ PEPA/ 转化/ 为/ ODEs/ 的/ 途径/ ,/ 方程/ 个数/ 仅/ 与/ 脆弱/ 点/ 类型/ 相关/ 而/ 与/ 每种/ 类型/ 包含/ 的/ 组件/ 数量/ 无关/ [/ 13/ ]/ ./ 以/ 本文/ 选取/ 的/ 实例/ 为/ 例子/ ,/ 采用/ 马尔可夫/ 过程/ 、/ 随机/ 模拟/ 和/ ODEs/ 途径/ 时/ 的/ 求解/ 时间/ 分别/ 如表/ 3/ 所示/ ./ 其中/ ,/ 初始条件/ 下/ 各个/ 组件/ 所/ 占/ 比例/ 与/ 本文/ 4.2/ 节中/ 实例/ 遵循/ 相同/ 比例/ ,/ 随机/ 算法/ 仍/ 采用/ Gillespire/ ’/ sTau/ -/ Leep/ 随机/ 算法/ ,/ 取/ 10000/ 个/ 随机/ 点/ ,/ 迭代/ 1000/ 步/ ./ 而/ 运行/ 环境/ 为/ WindowsXP/ ,/ CPU/ 为/ 4/ 核/ 2.0/ GHz/ ,/ 内存/ 为/ 4GB/ ./ 化简/ 前/ 的/ 状态/ 组件/ 总共/ 数量/ 309.3/ ×/ 1020608.6/ ×/ 10413004.9/ ×/ 10209/ —/ 30008.0/ ×/ 102096/ —/ 300001.0/ ×/ 104202/ —/ 注/ :/ “/ —/ ”/ 代表/ 所/ 需/ 计算资源/ 已/ 超出/ 了/ 本文/ 实验/ 环境/ 的/ 能力/ ./ 因此/ ,/ 采用/ 本文/ 的/ 方法/ 可以/ 有效/ 地/ 克服/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 模型/ 求解/ 的/ 状态/ 空间/ 爆炸/ 问题/ ./ 综合/ 上述/ 分析/ ,/ 不难/ 发现/ 本文/ 提出/ 的/ 模型/ 与/ 仿真/ 结果/ 基本一致/ ,/ 可以/ 提供/ 定量/ 的/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 分析/ ,/ 能够/ 合理/ 地/ 解释/ 脆弱性/ 变化/ 的/ 趋势/ ./ 而/ 通过/ 参数/ 效应/ 的/ 分析/ ,/ 可以/ 得到/ 各/ 关键/ 参数/ 对/ 本文/ 提出/ 模型/ 的/ 影响/ ,/ 具体/ 包括/ :/ (/ 1/ )/ 当/ 系统/ 中/ 节点/ 的/ 修复/ 能力/ 较/ 强时/ ,/ 将/ 有效/ 地/ 减少/ 脆弱/ 点/ 的/ 数量/ ;/ (/ 2/ )/ 簇间/ 传播/ 速率/ 与/ 脆弱性/ 扩散/ 峰值/ 正向/ 相关/ ,/ 能够/ 减少/ 扩散/ 需要/ 的/ 时间/ ,/ 但/ 对/ 最终/ 稳定/ 后/ 的/ 扩散/ 范围/ 影响/ 不/ 大/ ;/ (/ 3/ )/ 簇间/ 变迁/ 速率/ 的/ 增大/ 将/ 加快/ 脆弱/ 点/ 在/ 簇间/ 的/ 迁移/ (/ 演化/ )/ 过程/ ,/ 进而/ 间接/ 加快/ 脆弱性/ 的/ 扩散/ ./ 综上所述/ ,/ 需要/ 提升/ 系统/ 的/ 脆弱性/ 修复/ 能力/ ,/ 遏制/ 和/ 阻止/ 不同/ 类型/ 脆弱/ 点/ 之间/ 的/ 扩散/ ,/ 理/ 清脆/ 弱点/ 之间/ 的/ 演化/ 关系/ ,/ 并/ 针对性/ 地/ 进行/ 预防/ ./ 5/ 国内外/ 相关/ 研究/ 工作/ 随着/ 覆盖/ 网络/ 、/ 云/ 计算/ 以及/ 未来/ 网络/ 技术/ 的/ 快速/ 发展/ ,/ 分布式/ 虚拟化/ 系统/ 的/ 应用/ 范围/ 日益/ 广泛/ ,/ 而/ 由于/ 虚拟化/ 技术/ 的/ 支撑/ ,/ 其/ 不但/ 规模/ 巨大/ 、/ 而且/ 具有/ 显著/ 地/ 动态性/ 、/ 移动性/ 和/ 开放性/ ./ 这些/ 特点/ 导致/ 了/ 分布式/ 虚拟化/ 系统/ 中/ 由/ 连接/ 而/ 引入/ 的/ 脆弱性/ 大大增加/ ,/ 在/ 数量/ 上/ 已/ 远远/ 超过/ 了/ 系统/ 固有/ 脆弱性/ 缺陷/ ,/ 且/ 随时/ 可能/ 发生/ 并/ 快速/ 扩散/ ,/ 已/ 成为/ 亟待解决/ 的/ 挑战/ [/ 20/ ]/ ./ 而/ 对/ 脆弱性/ 扩散/ 规律/ 的/ 认识/ 有助于/ 预防/ 、/ 抑制/ 和/ 阻止/ 系统/ 脆弱性/ 的/ 漫延/ ,/ 以较/ 小/ 的/ 代价/ 提高/ 系统/ 的/ 安全性/ ,/ 是/ 目前/ 脆弱性/ 分析/ 的/ 发展/ 方向/ ./ 目前/ 许多/ 学者/ 已/ 开始/ 研究/ 脆弱性/ 的/ 演化/ 、/ 传播/ 和/ 扩散/ 规律/ ,/ 为/ 脆弱性/ 的/ 防护/ 和/ 修复/ 提供/ 了/ 参考/ ./ 这些/ 研究/ 主要/ 集中/ 在/ 如下/ 3/ 个/ 方面/ :/ 第/ 1/ 方面/ ,/ 主要/ 是/ 基于/ 运行日志/ 对/ 特定/ 系统/ 脆弱性/ 扩散/ 的/ 事后/ 分析/ ./ 英国剑桥大学/ 的/ Ozment/ [/ 4/ ]/ 在/ 对/ 现有/ 脆弱性/ 发现/ 模型/ 分析/ 的/ 基础/ 上/ ,/ 利用/ OpenBSD/ 操作系统/ 八年/ 的/ 脆弱性/ 数据/ ,/ 对/ 该/ 系统/ 脆弱性/ 的/ 演化/ 规律/ 进行/ 了/ 总结/ ./ Neuhaus/ 等/ 人/ [/ 5/ ]/ 则/ 通过/ 自动化/ 的/ 软件/ 挖掘/ Mozilla/ 系统/ 的/ 现有/ 脆弱/ 点/ 数据库/ ,/ 把/ 所有/ 已知/ 脆弱/ 点/ 映射/ 到/ 组件/ 上/ ,/ 并/ 在/ 此基础/ 上/ 对/ Mozilla/ 脆弱性/ 的/ 发展/ 进行/ 了/ 预测/ ./ Hiller/ 等/ 人/ [/ 6/ ]/ 分析/ 了/ 数据/ 错误/ 在/ 软件/ 中/ 的/ 传播/ ,/ 讨论/ 了/ 数据/ 错误/ 在/ 关联/ 软件/ 模块/ 之间/ 的/ 扩散/ 行为/ ,/ 并/ 提出/ 了/ 设定/ 检查点/ 和/ 恢复/ 点/ 的/ 定位/ 方法/ ./ 上述/ 研究/ 主要/ 基于/ 已有/ 系统日志/ 的/ 统计/ 和/ 分析/ ,/ 缺少/ 理论化/ 的/ 推理模型/ ,/ 具有/ 很强/ 的/ 系统/ 相关性/ ,/ 并且/ 很难/ 在/ 软件/ 或/ 系统/ 的/ 设计阶段/ 来/ 指导/ 脆弱性/ 的/ 防治/ 问题/ ./ 同时/ ,/ 在/ 分布式/ 虚拟化/ 系统/ 中/ ,/ 由于/ 虚拟化/ 技术/ 的/ 存在/ ,/ 计算/ 节点/ 之间/ 的/ 连接/ 是/ 一个/ 概率/ 性/ 事件/ ,/ 已有/ 系统日志/ 难以/ 覆盖/ 所有/ 可能/ 的/ 连接/ ,/ 因而/ 这/ 类/ 研究/ 具有/ 一定/ 局限性/ ./ 第/ 2/ 方面/ ,/ 主要/ 是/ 系统/ 整体/ 层面/ 上/ 的/ 脆弱性/ 扩散/ 研究/ ./ 针对/ 信息系统/ 的/ 风险管理/ ,/ Feng/ 等/ 人/ [/ 7/ ]/ 建立/ 了/ 一种/ 安全性/ 风险/ 模型/ (/ SRAM/ )/ ,/ 基于/ 贝叶斯/ 网络/ 来/ 模拟/ 风险/ 因子/ 及/ 它们/ 之间/ 的/ 因果关系/ ,/ 并/ 通过/ 蚁群/ 算法/ 和/ 专家/ 知识/ 估计/ 最大/ 概率/ 的/ 脆弱性/ 传播/ 路径/ 以及/ 带来/ 的/ 风险/ 值/ ./ De/ 等/ 人/ [/ 8/ ]/ 针对/ 无线/ 传感器/ 网络/ 环境/ 下/ ,/ 由于/ 多/ 跳/ 广播/ 协议/ 带来/ 的/ 脆弱性/ 扩散/ 问题/ 进行/ 研究/ ,/ 并/ 基于/ 该/ 协议/ 通过/ 间谍/ 软件/ 的/ 帮助/ ,/ 讨论/ 了/ 在/ 不同/ 的/ 动作/ 变迁/ 速率/ 、/ 连接性/ 、/ 可/ 恢复性/ 时/ 脆弱性/ 的/ 传播/ 过程/ ,/ 对/ 本文/ 的/ 参数/ 分析/ 具有/ 重要/ 的/ 借鉴/ 意义/ ./ 但是/ 这/ Page12/ 些/ 工作/ 都/ 没有/ 关注/ 脆弱/ 点/ 类型/ 之间/ 的/ 区分/ ,/ 没有/ 考虑/ 脆弱性/ 在/ 不同/ 脆弱/ 点/ 类型/ 之间/ 扩散/ 的/ 差异/ ,/ 以及/ 脆弱/ 点/ 的/ 演化/ 问题/ ./ 第/ 3/ 方面/ ,/ 主要/ 是/ 可/ 应用/ 于/ 系统/ 设计阶段/ 的/ 脆弱性/ 扩散/ 分析模型/ ./ 为了/ 在/ 软件设计/ 阶段/ 减少/ 脆弱性/ ,/ 文献/ [/ 9/ ]/ 提出/ 了/ 一种/ 计算/ 脆弱性/ 传播/ 的/ 算法/ ,/ 在/ 面向对象/ 设计/ 中/ 采用/ 脆弱性/ 树/ 的/ 方式/ 测量/ 属性/ 脆弱/ 比率/ (/ AttributeVulnerabilityRatio/ ,/ AVR/ )/ ,/ 主要/ 解决/ 了/ 由于/ 代码/ 重用/ 造成/ 脆弱/ 点/ 在/ 旧有/ 代码/ 与/ 新/ 代码/ 之间/ 的/ 传播/ 问题/ ./ 在/ 此基础/ 上/ ,/ 文献/ [/ 10/ ]/ 则/ 研究/ 了/ 在/ 面向对象/ 设计阶段/ 由类/ 的/ 耦合/ 而/ 引入/ 的/ 脆弱性/ 扩散/ ,/ 并/ 采用/ 脆弱性/ 树/ 和/ ATM/ 进行/ 了/ 分析/ ./ 虽然/ 在/ 这些/ 研究/ 中/ 区别/ 了/ 脆弱/ 点/ 类型/ 的/ 不同/ ,/ 分别/ 建立/ 了/ 脆弱性/ 树/ ,/ 但是/ 仅仅/ 考虑/ 了/ 脆弱性/ 在/ 同种/ 类型/ 脆弱/ 点/ 之间/ 的/ 传播/ ,/ 而/ 没有/ 考虑/ 在/ 不同/ 脆弱性/ 树/ 之间/ 传播/ 的/ 问题/ ./ 同时/ ,/ 对于/ 分布式/ 虚拟化/ 系统/ 而言/ ,/ 其/ 巨大/ 的/ 规模/ 导致/ 对象/ 类/ 的/ 数目/ 可能/ 数以百万计/ ,/ 此时/ 利用/ 脆弱性/ 树/ 或者/ ATM/ 进行/ 状态/ 空间/ 搜索/ ,/ 可能/ 将/ 面临/ 状态/ 空间/ 爆炸/ 问题/ ./ 此外/ ,/ 针对/ 脆弱性/ 分析/ 的/ 模型/ 还/ 包括/ 基于/ 标签/ 转移/ 图/ 、/ 基于/ 着色/ Petri/ 网/ 、/ 攻击/ 图/ 模型/ 、/ 需求/ // 产出/ 和/ 模型/ 检测/ 等/ 多种类型/ [/ 17/ ]/ ,/ 但是/ 当/ 系统/ 规模/ 巨大/ 时/ 也/ 面临/ 着/ 状态/ 空间/ 爆炸/ 的/ 问题/ ./ 综上所述/ ,/ 与/ 现有/ 研究/ 相比/ ,/ 本文/ 的/ 主要/ 改进/ 之/ 处/ 如下/ :/ (/ 1/ )/ 虽然/ 已有/ 部分/ 模型/ 将/ 不同/ 的/ 脆弱/ 点/ 分类/ [/ 9/ -/ 10/ ]/ ,/ 但/ 通常/ 仅仅/ 研究/ 脆弱性/ 在/ 同种/ 类型/ 脆弱/ 点/ 之间/ 的/ 扩散/ ,/ 即/ 假定/ 扩散/ 是/ 均匀/ 地/ ,/ 而/ 忽略/ 了/ 脆弱性/ 在/ 不同/ 类型/ 脆弱/ 点/ 之间/ 传播/ 的/ 差异/ ,/ 而/ 本文/ 考虑/ 了/ 脆弱性/ 在/ 同种/ 脆弱/ 点/ 类型/ 、/ 不同/ 类型/ ,/ 以及/ 脆弱/ 点/ 演化/ 情况/ 下/ 的/ 脆弱性/ 扩散/ ./ (/ 2/ )/ 在/ 分布式/ 虚拟化/ 系统/ 中/ ,/ 服务/ 所用/ 资源/ 处于/ 远程/ “/ 模糊化/ ”/ 的/ 云中/ ,/ 无法/ 事先/ 预测/ 连接/ 的/ 对象/ ,/ 据此/ 本文/ 给出/ 了/ 一种/ 形式化/ 的/ 脆弱性/ 扩散/ 模型/ ,/ 节点/ 之间/ 的/ 连接/ 基于/ 概率/ 化/ 表示/ ,/ 适合/ 于/ 分布式/ 虚拟化/ 系统/ 脆弱性/ 扩散/ 的/ 特点/ ./ (/ 3/ )/ 采用/ 的/ Bio/ -/ PEPA/ 形式化/ 描述/ 可以/ 转化/ 为/ ODEs/ ,/ 与/ 传统/ 分析方法/ 相比/ ,/ 具有/ 更/ 低/ 的/ 时间/ 开销/ ,/ 为/ 应用/ 于/ 如云/ 计算/ 等/ 大型/ 分布式/ 虚拟化/ 系统/ 提供/ 了/ 条件/ ./ 6/ 结论/ 随着/ 分布式/ 虚拟化/ 系统/ 的/ 广泛应用/ ,/ 由/ 第三方/ 应用/ 引入/ 的/ 脆弱/ 点/ 在/ 数量/ 上/ 已/ 远远/ 超过/ 系统/ 固有/ 的/ 脆弱/ 点/ ,/ 同时/ 服务/ 使用/ 的/ 资源/ 往往/ 来自/ 于/ 远程/ “/ 云/ ”/ 中/ 的/ 不同/ 位置/ ,/ 通过/ 频繁/ 的/ 动态/ 连接/ 而/ 使/ 脆弱性/ 快速/ 扩散/ ,/ 因此/ 脆弱性/ 扩散/ 已/ 成为/ 亟待解决/ 的/ 挑战/ ./ 本文/ 提出/ 了/ 一种/ 分布式/ 虚拟化/ 系统/ 的/ 脆弱性/ 扩散/ 模型/ ,/ 利用/ Bio/ -/ PEPA/ 的/ 静态/ 分层/ 特性/ 描述/ 了/ 脆弱性/ 在/ 相同/ 脆弱/ 点/ 类型/ 、/ 不同/ 脆弱/ 点/ 类型/ 之间/ 传播/ 以及/ 由/ 脆弱/ 点/ 演化/ 带来/ 的/ 脆弱性/ 扩散/ 过程/ ,/ 为/ 分布式/ 虚拟化/ 系统/ 的/ 脆弱性/ 扩散/ 规律/ 研究/ 提供/ 了/ 参考/ ./ 实验/ 结果显示/ ,/ 模型/ 与/ 仿真/ 模拟/ 的/ 结果/ 基本/ 相符合/ ,/ 可以/ 通过/ 提升/ 系统/ 的/ 脆弱性/ 修复/ 能力/ 、/ 降低/ 簇间/ 传播/ 速率/ 、/ 减少/ 簇间/ 变迁/ 速率/ ,/ 遏制/ 脆弱性/ 的/ 扩散/ ./ 此外/ ,/ 通过/ 把/ Bio/ -/ PEPA/ 转化/ 为/ ODEs/ ,/ 可以/ 避免/ 传统/ 分析方法/ 的/ 状态/ 空间/ 爆炸/ 问题/ ,/ 适用/ 于/ 大规模/ 和/ 高/ 动态/ 分布式/ 虚拟化/ 系统/ 的/ 脆弱性/ 扩散/ 研究/ ./ 在/ 下/ 一步/ 的/ 工作/ 中/ ,/ 我们/ 计划/ 研究/ 有/ 脆弱/ 点/ 随机/ 加入/ 退出/ 的/ 扩散/ 模型/ ,/ 以/ 处理/ 更加/ 复杂/ 的/ 情况/ ,/ 并/ 针对实际/ 的/ 分布式/ 虚拟化/ 系统/ 进行/ 验证/ 和/ 改进/ ./ 致谢/ 在/ 此/ ,/ 我们/ 向/ 对/ 本文/ 的/ 工作/ 给予/ 支持/ 和/ 宝贵/ 建议/ 的/ 各位/ 评审/ 专家/ 、/ 编辑/ 表示/ 衷心感谢/ !/ 

