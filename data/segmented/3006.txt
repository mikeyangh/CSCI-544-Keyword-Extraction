Page1/ 改善/ 系统/ 能量/ 效率/ 的/ 体系结构/ 方法/ :/ 并行处理/ 易/ 会战/ 刘永鹏/ (/ 国防科学技术大学/ 计算机/ 学院/ 计算机/ 研究所/ 长沙/ 410073/ )/ 摘要/ 因为/ 对/ 高性能/ 微/ 芯片/ 和/ 系统/ 设计/ 的/ 广泛/ 影响/ ,/ 能量消耗/ 问题/ 受到/ 计算机/ 界/ 越来越/ 广泛/ 的/ 关注/ ./ 多个/ 层次/ 的/ 技术/ 被/ 用于/ 改善/ 系统/ 的/ 能量/ 效率/ ,/ 并行处理/ 是/ 体系结构/ 层/ 提高/ 能量/ 效率/ 的/ 主要/ 手段/ ./ 并行处理/ 使用性能/ 适中/ 的/ 计算/ 节点/ 减少/ 能量消耗/ ,/ 使用/ 多个/ 节点/ 并行执行/ 维持/ 高/ 吞吐量/ ./ 文中/ 分析/ 了/ 并行处理/ 提高/ 能量/ 效率/ 的/ 基本原理/ ,/ 给出/ 了/ 并行处理/ 的/ 时间/ 开销/ 和/ 能量/ 开销/ 模型/ ./ 基于/ 模型/ 分析/ ,/ 对/ 低电压/ 并行/ 系统/ 、/ 动态/ 电压/ 调节/ (/ DynamicVoltageScaling/ ,/ DVS/ )/ 的/ 并行/ 系统/ 和/ 多/ 核/ 微处理器/ 3/ 个/ 并行处理/ 方向/ 进行/ 了/ 展望/ ,/ 给出/ 了/ 这些/ 并行处理/ 方向/ 改善/ 能量/ 效率/ 的/ 空间/ ./ 关键词/ 并行处理/ ;/ 能量/ 效率/ ;/ 动态/ 电压/ 调节/ ;/ 低电压/ 设计/ ;/ 多核/ 处理/ 1/ 引言/ 当前/ ,/ 能量消耗/ 问题/ 阻碍/ 了/ 计算机系统/ 性能/ 的/ Page2/ 致/ 运行/ 环境温度/ 增加/ ,/ 最终/ 降低/ 了/ 计算机系统/ 的/ 可靠性/ [/ 1/ ]/ ./ 最后/ ,/ 能量消耗/ 的/ 直接/ 结果/ 是/ 大量/ 的/ 电力/ 消耗/ ,/ 这/ 增加/ 了/ 高性能/ 系统/ 的/ 运行/ 成本/ [/ 2/ ]/ ./ 如何/ 改善/ 计算机系统/ 的/ 能量/ 效率/ 在/ 多种/ 层次/ 上/ 得到/ 了/ 广泛/ 的/ 研究/ [/ 3/ -/ 5/ ]/ ./ 在/ 计算机/ 体系结构/ 层/ ,/ 采用/ 并行处理技术/ 提高/ 系统/ 能量/ 效率/ 受到/ 了/ 最/ 多/ 的/ 关注/ ./ 并行处理/ 使用性能/ 适中/ 的/ 计算/ 节点/ 提高/ 系统/ 的/ 能量/ 效率/ ,/ 使用/ 多/ 节点/ 的/ 并行执行/ 维持/ 高/ 的/ 系统/ 吞吐量/ ./ 带有/ 动态/ 电压/ 调节/ (/ DVS/ )/ 能力/ 的/ 并行/ 系统/ 进一步提高/ 了/ 系统/ 的/ 灵活性/ ,/ 使得/ 节点/ 的/ 性能/ 可以/ 根据/ 程序/ 的/ 执行/ 需求/ 动态变化/ ,/ 节省/ 了/ 系统/ 的/ 能量消耗/ ./ 并行处理/ 在/ 提高/ 能量/ 效率/ 方面/ 的/ 工作/ 包括/ 以下/ 3/ 个/ 方面/ ./ 首先/ 是/ 对/ 低电压/ 并行/ 系统/ 的/ 尝试/ ./ BlueGene/ // L/ [/ 6/ ]/ 曾一度/ 是/ 运算/ 速度/ 最快/ 的/ 高性能/ 并行/ 系统/ ,/ 该/ 系统/ 采用/ 了/ 嵌入式/ PowerPC440ASIC/ 芯片/ 作为/ 处理/ 节点/ ,/ 每个/ 节点/ 提供/ 了/ 适中/ 的/ 性能/ ,/ 同时/ 全/ 系统/ 的/ 65536/ 个/ 节点/ 提供/ 了/ 高/ 的/ 系统/ 吞吐量/ ./ BlueGene/ // L/ 的/ 单机/ 柜/ 设计/ 功耗/ 为/ 25kW/ ,/ 设计/ 性能/ 为/ 5.6/ Tflops/ ,/ 节点/ 能量/ 效率/ 为/ 224Mflops/ // W/ ./ 相比之下/ ,/ 同/ 时期/ 的/ ASCI/ 系列/ 系统/ (/ Red/ ,/ White/ ,/ Q/ )/ 的/ 能量/ 效率/ 只有/ 1Mflops/ // W/ 左右/ ./ 其次/ 是/ 对/ DVS/ 并行/ 系统/ 的/ 尝试/ ./ 与/ 低电压/ 并行/ 系统/ 的/ 设计/ 方式/ 相反/ ,/ DVS/ 并行/ 系统/ 试图/ 使用/ 高性能/ 的/ 处理器/ 作为/ 系统/ 节点/ ,/ 使用/ DVS/ 动态/ 调整/ 系统/ 性能/ 和/ 功耗/ ./ MEMO/ 是/ 16/ 个/ 节点/ 的/ 机群/ 并行/ 系统/ [/ 2/ ]/ ,/ 每个/ 节点/ 的/ IntelPentiumM/ 处理器/ 具有/ DVS/ 的/ 功能/ ./ 另外/ 的/ 一个/ DVS/ 系统/ 是/ 由/ AMDAthlon/ -/ 64/ 构成/ 的/ 10/ 个/ 节点/ 的/ 机群系统/ [/ 5/ ]/ ,/ 同样/ 每个/ 节点/ 具有/ DVS/ 能力/ ./ 最后/ ,/ 多核/ 处理器/ 技术/ 是/ 当前/ 最/ 重要/ 的/ 研究/ 方向/ 之一/ ./ 多核/ 处理器/ 采用/ 多个/ 性能/ 适中/ 的/ 处理/ 核心/ 提高/ 能量/ 效率/ ,/ 使用/ 高/ 的/ 数据/ 级/ 并行/ 或者/ 线程/ 级/ 并行/ 提高/ 整个/ 处理器/ 的/ 性能/ ./ 当前/ 商用/ 通用/ 处理器/ 一般/ 采用/ 了/ 单芯片/ 多/ 处理/ 技术/ 和/ 同时/ 多线程/ 技术/ ,/ 例如/ IBM/ 的/ 下一代/ 多核/ 处理器/ IBMPOWER7/ 计划/ 支持/ 8/ 个/ 处理/ 核/ ,/ Intel/ 的/ Nehalem/ -/ EX/ 支持/ 8/ 个/ 处理/ 核/ 16/ 个/ 线程/ ./ 随着/ 对/ 高/ 计算/ 性能/ 的/ 迫切/ 需求/ ,/ 图形/ 处理器/ (/ GPU/ )/ 开始/ 应用/ 在/ 通用/ 计算/ 领域/ [/ 7/ -/ 9/ ]/ ,/ 一般/ 作为/ 通用/ 处理器/ 的/ 加速/ 处理器/ ./ 图形/ 处理器/ (/ GPU/ )/ 具有/ 典型/ 的/ 并行/ 结构/ ,/ 例如/ NVIDIA/ 的/ GeForceGTX285/ 包括/ 30/ 个/ 核/ ,/ 每个/ 核/ 包括/ 8/ 个/ SIMD/ 功能/ 部件/ ,/ 构成/ 了/ 240/ 个流/ 处理器/ ./ 又/ 例如/ AMD/ 的/ 4870/ 处理器/ 包括/ 10/ 个/ 核/ ,/ 每个/ 核/ 包括/ 16/ 个/ SIMD/ 处理单元/ ,/ 每个/ 单元/ 包括/ 5/ 个/ 乘加/ 部件/ ,/ 构成/ 800/ 个流/ 处理器/ ,/ 对于/ 规则/ 的/ 矩阵/ 乘/ 运算/ ,/ 能量/ 效率/ 超过/ 1Gflops/ // W/ ./ 图形/ 处理器/ 简化/ 了/ 硬件/ 结构/ ,/ 能够/ 有效/ 处理/ 具有/ 规则/ 数据/ 访问/ 模式/ 的/ 应用/ ,/ 充分/ 开发/ 了/ 程序/ 中/ 的/ 数据/ 级/ 并行/ ,/ 能够/ 达到/ 很/ 高/ 的/ 计算/ 效率/ ./ 从/ 以上/ 分析/ 可以/ 看出/ ,/ 并行处理技术/ 被/ 广泛应用/ 于/ 改善/ 系统/ 的/ 能量/ 效率/ ./ 本文/ 通过/ 分析/ 的/ 手段/ 研究/ 并行处理技术/ 的/ 节能/ 空间/ ./ 我们/ 研究/ 的/ 主要/ 问题/ 是/ :/ 在/ 已有/ 的/ 高性能/ 系统/ 设计/ 下/ ,/ 采用/ 低电压/ 的/ 并行处理技术/ 改善/ 系统/ 能量/ 效率/ 的/ 空间/ 是/ 什么/ ?/ 这样/ 的/ 高性能/ 系统/ 设计/ 包括/ 高性能/ 并行/ 系统/ 和/ 多/ 核/ 处理器/ ./ 在/ DVS/ 并行/ 系统/ 上/ ,/ 通过/ 提高/ 并行度/ 来/ 改善/ 应用/ 的/ 能量/ 效率/ 的/ 空间/ 是/ 什么/ ?/ 这/ 包括/ DVS/ 并行/ 系统/ 和/ DVS/ 多核/ 处理器/ ./ 理论/ 上/ 并行处理/ 能够/ 改善/ 系统/ 的/ 能量/ 效率/ ,/ 但是/ 实际上/ 并行处理/ 引入/ 了/ 一些/ 与/ 提高/ 能量/ 效率/ 方向/ 相反/ 的/ 问题/ ./ 并发/ 度/ 的/ 提高/ 往往/ 导致/ 时间/ 开销/ 和/ 能量/ 开销/ 增大/ ,/ 结果/ 系统/ 的/ 能量/ 效率/ 反而/ 下降/ ./ 本文/ 分析/ 了/ 并行处理/ 提高/ 系统/ 能量/ 效率/ 的/ 原理/ ,/ 建立/ 了/ 程序/ 并行执行/ 的/ 时间/ 开销/ 和/ 能量/ 开销/ 模型/ ./ 基于/ 模型/ 分析/ ,/ 本文/ 研究/ 了/ 并行处理/ 对/ 能量/ 效率/ 改善/ 的/ 作用/ ,/ 分析/ 了/ 系统/ 扩展/ 和/ 应用/ 扩展/ 对/ 能量/ 节省/ 的/ 影响/ ./ 本文/ 第/ 1/ 节/ 给出/ 了/ 研究/ 的/ 主要/ 问题/ 和/ 相关/ 工作/ ;/ 第/ 2/ 节/ 给出/ 并行处理/ 提高/ 系统/ 能量/ 效率/ 的/ 原理/ ;/ 第/ 3/ 节/ 分析/ 并行处理/ 的/ 时间/ 开销/ 和/ 能量/ 开销/ ,/ 给出/ 能量/ 效率/ 模型/ ;/ 在/ 第/ 4/ 节/ 使用/ 能量/ 效率/ 模型/ 研究/ 并行处理/ 对/ 能量/ 效率/ 改善/ 的/ 作用/ ;/ 最后/ 给出/ 结论/ ./ 2/ 并行处理/ 提高/ 能量/ 效率/ 的/ 原理/ 假定/ 程序/ 的/ 执行/ 周期/ 数为/ c/ ,/ 系统/ 的/ 运行/ 频率/ 为/ f/ ,/ 那么/ 在/ 该/ 系统/ 上/ 程序/ 的/ 执行/ 时间/ 为/ 考虑/ 在/ 一个/ n/ 个/ 节点/ 的/ 并行/ 系统/ 上/ ,/ 如果/ 程序/ 能够/ 完全/ 并行执行/ ,/ c/ 个/ 执行/ 周期/ 能够/ 均匀/ 划分/ 到/ n/ 个/ 节点/ 上/ 执行/ ,/ 每个/ 节点/ 只/ 需要/ 完成/ c/ // n/ 个/ 周期/ ./ 这里/ 要/ 保证/ 程序/ 能够/ 在/ t/ 时间/ 内/ 完成/ ,/ 每个/ 节点/ 需要/ 的/ 执行/ 频率/ 为/ 也就是说/ ,/ 每个/ 节点/ 的/ 执行/ 频率/ 只/ 需要/ 原来/ 的/ 1/ // n/ ./ 下面/ 考虑/ 两种/ 执行/ 的/ 能量消耗/ ./ 对于/ 以/ CMOS/ 工艺/ 为/ 基础/ 的/ 计算机系统/ ,/ 为了/ 保证/ 器件/ 稳定/ 运行/ ,/ 系统/ 的/ 电压/ 和/ 频率/ 必须/ 满足/ 其中/ ,/ V/ 为/ 器件/ 的/ 供电/ 电压/ ,/ VT/ 为/ 阈值电压/ ,/ α/ 为/ 一个/ 系统/ 相关/ 的/ 参数/ ./ 一般/ VT/ 远/ 小于/ V/ ,/ 并且/ α/ 取为/ 2/ ,/ 于是/ 频率/ f/ 和/ 电压/ V/ 近似/ 为/ 线性关系/ Page3/ 考虑/ CMOS/ 的/ 能量消耗/ 公式/ 为/ 其中/ Ceff/ 为/ 有效/ 切换/ 电容/ ./ 于是/ 串行/ 执行/ 时/ 系统/ 的/ 能量消耗/ 为/ 并行执行/ 时/ 系统/ 的/ 能量消耗/ 为/ Ep/ =/ n/ ·/ Ceff/ ·/ fp/ ·/ V2/ 这里/ 假定/ 单个/ 节点/ 的/ 有效/ 切换/ 电容/ 相同/ ./ 从/ 上面/ 公式/ 可以/ 看出/ ,/ 并行执行/ 的/ 能量消耗/ 是/ 原来/ 的/ 1/ // n2/ ./ 这/ 极大/ 地/ 减少/ 了/ 系统/ 的/ 能量消耗/ ,/ 提高/ 了/ 能量/ 效率/ ./ 两种/ 情况/ 的/ 近似/ 能量消耗/ 比率/ 为/ 如果/ 不/ 采用/ 近似/ 公式/ f/ =/ V/ // β/ ,/ 更/ 精确/ 的/ 能量消耗/ 比率/ 为/ 考虑/ 在/ 0.18/ μ/ m/ 工艺/ 下/ 的/ 情况/ ,/ 阈值电压/ 设为/ 0.55/ V/ ,/ 在/ 0.5/ GHz/ 下/ ,/ 运行/ 电压/ 设为/ 2V/ ./ 可以/ 得到/ 能量消耗/ 比率/ ,/ 见图/ 1/ ./ 从图/ 1/ 可以/ 看出/ ,/ 精确/ 和/ 近似/ 方法/ 具有/ 相同/ 的/ 变化趋势/ ,/ 所以/ 下面/ 使用/ 近似/ 方法/ 进行/ 研究/ ./ 在/ 本/ 部分/ 的/ 结束/ ,/ 给出/ 能量/ 效率/ 的/ 明确/ 含义/ ./ 能量/ 效率/ 是/ 指/ 单位/ 能量消耗/ (/ 或者/ 功耗/ )/ 所/ 完成/ 的/ 工作量/ ,/ 单位/ 为/ flops/ // W/ 或者/ flops/ // J/ ./ 在/ 本文/ 中/ ,/ 使用/ 并行/ 系统/ 和/ 串行/ 系统/ 的/ 能量消耗/ 比率/ 来/ 体现/ 能量/ 效率/ 的/ 高低/ ./ 3/ 能量/ 效率/ 模型/ 上/ 一节/ 的/ 分析/ 对/ 应用/ 和/ 系统/ 都/ 进行/ 了/ 理想/ 的/ 假定/ ,/ 实际上/ 并行处理/ 具有/ 时间/ 和/ 能量/ 开销/ ,/ 这些/ 开销/ 最终/ 影响/ 了/ 能量/ 效率/ ./ 3.1/ 时间/ 开销/ 在/ 前面/ 分析/ 中/ 理想/ 的/ 假定/ 应用/ 是/ 可以/ 完全/ 并行/ 的/ ,/ 应用/ 可以/ 完全/ 划分/ 到/ 多个/ 节点/ 执行/ ,/ 不/ 存在/ 任何/ 开销/ ./ 但是/ 实际上/ 应用/ 往往/ 不能/ 完全/ 并行/ 化/ ,/ 存在/ 可/ 并行/ 区间/ 和/ 串行/ 区间/ ,/ 其中/ 的/ 串行/ 区间/ 不能/ 并行/ 化/ ./ 而且/ ,/ 可/ 并行/ 区间/ 的/ 并行/ 具有/ 相应/ 的/ 并行/ 开销/ ,/ 例如/ 通信/ 和/ 同步/ 开销/ ./ 同时/ ,/ 即使/ 在/ 应用/ 的/ 可/ 并行/ 区间/ ,/ 多个/ 节点/ 的/ 负载/ 可能/ 也/ 不是/ 相同/ 的/ ,/ 存在/ 负载/ 不/ 平衡/ 问题/ ./ 为了/ 讨论/ 问题/ 的/ 方便/ ,/ 这里/ 并/ 不/ 试图/ 揭示/ 每种/ 并行/ 开销/ ./ 这里/ 的/ 分析/ 将/ 并行程序/ 划分/ 为/ 并行/ 区间/ 和/ 串行/ 区间/ ,/ 假定/ 应用/ 的/ 串行/ 区间/ 串行/ 执行/ 的/ 比率/ 为/ Rs/ ,/ 并行/ 区间/ 串行/ 执行/ 的/ 比率/ 为/ Rp/ =/ 1/ -/ Rs/ ./ 串行/ 区间/ 一般/ 采用/ 冗余/ 执行/ 的/ 方式/ 在/ 每个/ 节点/ 并行执行/ ,/ 如果/ 并行/ 区间/ 是/ 负载平衡/ 的/ ,/ 并行/ 区间/ 的/ 执行/ 是/ 计算/ 和/ 通信/ 交替/ 的/ 过程/ ./ 一个/ 示意性/ 的/ 并行程序/ 见图/ 2/ ./ 其中/ S/ 代表/ 串行/ 区间/ ,/ P/ 代表/ 并行/ 区间/ ,/ C/ 为/ 通信/ 区间/ ./ 与/ 串行/ 执行/ 相比/ ,/ 并行执行/ 引入/ 了/ 串行/ 区间/ 的/ 冗余/ 执行/ 和/ 通信/ 区间/ 的/ 消息/ 交换/ ,/ 这些/ 都/ 导致系统/ 能量消耗/ 的/ 增加/ ./ 下面/ 考虑/ 当/ 节点/ 数目/ 变化/ 时/ S/ 区间/ 、/ P/ 区间/ 和/ C/ 区间/ 的/ 变化/ ./ S/ 区间/ 的/ 变化/ 最/ 简单/ ,/ 当/ 节点/ 数/ 增加/ 时/ ,/ 每个/ 节点/ 上/ S/ 区间/ 的/ 执行/ 时间/ 不变/ ,/ 这里/ 仍用/ Rs/ 表示/ ./ 假定/ 并行/ 节点/ 数为/ n/ ,/ 每个/ 节点/ 上/ P/ 区间/ 的/ 执行/ 时间/ 为/ Rp/ // n/ ./ C/ 区间/ 的/ 执行/ 时间/ 变化/ 最为/ 复杂/ ./ 假定/ 在/ 两个/ 节点/ 情况/ 下/ C/ 区间/ 的/ 执行/ 时间/ 比率/ 为/ R2/ // c/ ./ 随着/ 节点/ 数/ 的/ 增加/ ,/ C/ 区间/ 执行/ 时间/ 的/ 变化/ 具有/ 不同/ 的/ 规律/ ./ 文献/ [/ 10/ ]/ 分析/ 了/ 不同/ MPI/ 通信/ 函数/ 的/ 时间/ 预测/ 函数/ ,/ 归结为/ 系统/ 大小/ n/ 和/ 消息/ 长度/ m/ 的/ 函数/ ./ 对于/ 点对点/ 通信/ ,/ 时间/ 预测/ 函数/ 为/ 对于/ 消息/ 启动/ 开销/ 较大/ 的/ 系统/ ,/ τ/ 1/ 项/ 占/ 统治/ 地位/ ,/ 随着/ 节点/ 数/ 的/ 增加/ ,/ 通信/ 时间/ 基本/ 不变/ ,/ 这时/ 可以/ 简单/ 地/ 忽略/ 第/ 2/ 项/ ./ 对于/ 启动/ 开销/ 较/ 小/ 的/ 系统/ ,/ 消息/ 长度/ 决定/ 了/ 程序/ 的/ 通信/ 时间/ ,/ 这时/ 可以/ 简单/ 地/ 忽略/ 第/ 1/ 项/ ./ 对于/ 同一个/ 应用/ ,/ 这里/ 假定/ 程序/ 的/ 消息/ 长度/ 随/ 节点/ 数/ 的/ 增加/ 线性/ 递减/ ./ 对于/ 聚合/ 通信/ ,/ 时间/ 预测/ 函数/ 为/ 聚合/ 通信/ 的/ 第/ 2/ 项/ 一般/ 占/ 统治/ 地位/ ,/ 也就是说/ 通信/ 时间/ 以/ log2/ 递增/ ./ 节点/ 数目/ 的/ 扩展/ 一般/ 不会/ 改变/ 单个/ 节点/ 上/ 通信/ Page4/ 函数/ 的/ 调用/ 次数/ ./ 例如/ 在/ 气象/ 模拟程序/ 中/ ,/ 计算/ 发生/ 在/ 规则/ 的/ 网格/ 上/ ,/ 通信/ 发生/ 在/ 网格/ 的/ 边界/ ,/ 每个/ 节点/ 的/ 通信/ 次数/ 是/ 不变/ 的/ ./ 因此/ ,/ 这里/ 简单/ 地/ 假定/ 应用/ 的/ 通信/ 函数调用/ 次数/ 不变/ ./ 根据/ 上面/ 的/ 分析/ ,/ 下面/ 给出/ 了/ n/ 个/ 节点/ 的/ C/ 区间/ 执行/ 时间/ Rn/ // c/ 的/ 变化规律/ ,/ 分为/ 以下/ 3/ 种/ 情况/ :/ Rn/ // c/ =/ R2/ // c/ ,/ 点对点/ 通信/ ,/ 高/ 起动/ 开销/ (/ 情况/ 1/ )/ 烄/ R2/ // c/ ·/ 2/ // n/ ,/ 点对点/ 通信/ ,/ 低/ 起动/ 开销/ (/ 情况/ 2/ )/ 烅/ R2/ // c/ ·/ log2n/ ,/ 聚合/ 通信/ 烆/ 于是/ 在/ n/ 个/ 节点/ 上/ 的/ 执行/ 时间/ 可以/ 表示/ 为/ 类似/ Amdahl/ 定律/ ,/ 加速/ 比/ 函数/ 为/ 考虑/ 在/ 不同/ 参数设置/ 下/ 的/ 加速/ 比/ ,/ 假定/ Rs/ =/ 10/ %/ ,/ R2/ // c/ =/ 5/ %/ ,/ 则/ 在/ 3/ 种/ 情况/ 下/ 应用/ 的/ 加速/ 比见/ 图/ 3/ ./ 从图/ 3/ 中/ 可以/ 看出/ ,/ 由于/ 串行/ 区间/ 和/ 通信/ 区间/ 的/ 存在/ ,/ 程序/ 的/ 加速/ 比/ 受到/ 了/ 显著/ 的/ 影响/ ./ 并且/ ,/ 对于/ 聚合/ 通信/ 作为/ 主要/ 通信/ 的/ 应用/ ,/ 加速/ 效果/ 随着/ 节点/ 数/ 的/ 增加/ 明显/ 下降/ ./ 在/ 一个/ 机群系统/ 上/ 测试/ 了/ NPB/ 程序/ [/ 11/ ]/ 的/ 加速/ 比/ 变化/ ,/ 见图/ 4/ ./ 从图/ 3/ 和/ 图/ 4/ 的/ 对比/ 可以/ 看出/ :/ 3/ 种/ 应用/ 特征/ 的/ 加速/ 比/ 曲线/ 代表/ 了/ 所有/ NPB/ 应用程序/ 的/ 加速/ 比/ 变化/ 特性/ ./ 3.2/ 能量/ 开销/ 本文/ 第/ 2/ 节/ 对系统/ 功耗/ 进行/ 了/ 很多/ 理想/ 的/ 假定/ ./ (/ 1/ )/ 假定/ 系统/ 的/ 性能/ 是/ 完全/ 可以/ 调节/ 的/ ,/ 也/ 就是/ 系统/ 的/ 组成部分/ 可以/ 通过/ 电压/ 和/ 频率/ 调节/ ,/ 以/ 相等/ 的/ 比率/ 改变/ 性能/ ./ 实际上/ ,/ 对于/ 多种/ 部件/ 构成/ 的/ 系统/ ,/ 系统/ 的/ 性能/ 往往/ 不是/ 以/ 这种/ 方式/ 变化/ 的/ ./ 例如/ ,/ 当前/ 的/ DVS/ 系统/ 往往/ 仅/ 具有/ 处理器/ 的/ 性能/ 调节/ 能力/ ./ (/ 2/ )/ 没有/ 考虑/ 静态/ 的/ 能量消耗/ ./ 随着/ 工艺技术/ 的/ 进步/ ,/ 泄漏/ 电流/ 越来越/ 大/ ./ (/ 3/ )/ 系统/ 负载/ 不/ 平衡/ 下/ 空转/ 节点/ 产生/ 的/ 能量消耗/ ./ 负载/ 不/ 平衡/ 下/ ,/ 并行/ 应用/ 往往/ 产生/ 因为/ 同步/ 导致/ 的/ 空转/ 能量消耗/ ./ (/ 4/ )/ 系统/ 规模/ 的/ 扩展/ 导致/ 网络资源/ 的/ 能量消耗/ 增加/ ./ 由于/ 低频/ 系统/ 往往/ 可以/ 采用/ 更好/ 的/ 泄漏/ 控制技术/ ,/ 这里/ 的/ 研究/ 忽略/ 静态/ 功耗/ ./ 为了/ 简化/ 分析/ ,/ 研究/ 忽略/ 了/ 负载/ 不/ 平衡/ 和/ 网络资源/ 的/ 能量/ 开销/ ./ 这里/ 的/ 分析/ 将/ 节点/ 的/ 部件/ 分为/ 可/ 调节/ 部分/ 和/ 不可/ 调节/ 部分/ ./ 假定/ 在/ 串行/ 执行/ 情况/ 下/ ,/ 可/ 调节/ 部分/ 占/ 总/ 功耗/ 的/ 比率/ 为/ CS/ ,/ 不可/ 调节/ 部分/ 占/ 总/ 功耗/ 的/ 比率/ 为/ NCS/ =/ 1/ -/ CS/ ./ 当/ 进行/ 低电压/ 并行/ 系统/ 设计/ 或者/ 动态/ 电压/ 调节/ 时/ ,/ 频率/ 减少/ 为/ 原来/ 的/ FR/ ,/ 功耗/ 成为/ NCS/ +/ CS/ ·/ FR3/ ./ 3.3/ 能量/ 效率/ 模型/ 根据/ 上/ 面对/ 系统/ 并行/ 时间/ 开销/ 和/ 能量/ 开销/ 的/ 分析/ ,/ 考虑/ 并行/ 应用/ 的/ 能量消耗/ ./ 假定/ 应用/ 的/ 串行/ 执行/ 时间/ 为/ t/ ,/ 其/ S/ 区间/ 的/ 比率/ 为/ Rs/ ,/ 其/ P/ 区间/ 的/ 比率/ 为/ Rp/ =/ 1/ -/ Rs/ ./ 并行执行/ 中/ 两个/ 节点/ 情况/ 下/ C/ 区间/ 的/ 比率/ 为/ R2/ // c/ ./ 如果/ 使用/ n/ 个/ 节点/ 并行执行/ 应用/ ,/ 执行/ 时间/ 为/ 为了/ 节省/ 系统/ 的/ 能量消耗/ ,/ 采用/ 降低/ 节点/ 的/ 电压/ 和/ 频率/ 的/ 方法/ ,/ 使得/ 应用/ 能够/ 在/ 时间/ t/ 内/ 完成/ ./ 这时/ 频率/ 调整/ 的/ 比率/ FR/ 为/ 假定/ 在/ 串行/ 执行/ 情况/ 下/ 的/ 系统/ 功耗/ 为/ P/ ,/ 则/ 系统/ 可/ 调节/ 部分/ 的/ 功耗/ 为/ CS/ ·/ P/ ,/ 不可/ 调节/ 部分/ 的/ 功耗/ 为/ NCS/ ·/ P/ =/ (/ 1/ -/ CS/ )/ ·/ P/ ./ 于是/ 应用/ 在/ n/ 个/ 节点/ 上/ 的/ 能量消耗/ 为/ n/ 个/ 节点/ 和/ 单个/ 节点/ 的/ 能量消耗/ 比率/ 为/ En/ // E/ =/ (/ n/ ·/ (/ NCS/ +/ CS/ ·/ FR3/ )/ ·/ P/ ·/ t/ )/ // (/ P/ ·/ t/ )/ 上式/ 中/ ,/ CS/ 是/ 和/ 系统/ 特性/ 紧密/ 相关/ 的/ 参数/ ,/ RsPage5/ 和/ Rp/ 是/ 和/ 应用/ 特性/ 相关/ 的/ 参数/ ,/ Rn/ // c/ 是/ 与/ 系统/ 和/ 应用/ 特性/ 都/ 相关/ 的/ 参数/ ./ 于是/ 得到/ 了/ 并行处理/ 的/ 能量/ 效率/ 模型/ ,/ 下面/ 分析/ 并行处理/ 在/ 能量/ 效率/ 改善/ 方面/ 的/ 作用/ ./ 4/ 并行处理/ 的/ 能量/ 效率/ 分析/ 首先/ 研究/ 系统/ 相关/ 参数/ CS/ 和/ R2/ // c/ 变化/ 对/ 能量/ 效率/ 的/ 影响/ ,/ 称之为/ 系统/ 级/ 能量/ 效率/ 可扩展性/ 分析/ ./ 然后/ 考虑/ 应用/ 相关/ 参数/ Rs/ 和/ Rp/ 对/ 能量消耗/ 的/ 影响/ ,/ 称之为/ 应用/ 级/ 能量/ 效率/ 可扩展性/ 分析/ ./ 4.1/ 系统/ 级/ 能量/ 效率/ 可扩展性/ 分析/ 假定/ Rs/ =/ 0.1/ ,/ R2/ // c/ =/ 0.1/ ,/ 这里/ 给出/ 了/ 不同/ CS/ 的/ 能量消耗/ 比率/ ,/ 见图/ 5/ ./ 其中/ 包含/ 了/ 3/ 种/ 通信/ 时间/ 预测/ 函数/ 的/ 曲线/ ./ 从图/ 中/ 可以/ 看出/ ,/ 系统/ 参数/ CS/ 对/ 功耗/ 的/ 影响/ 十分/ 明显/ ./ 当/ 系统/ 的/ 全部/ 部件/ 都/ 可以/ 进行/ 性能/ 调节/ 时/ (/ CS/ =/ 1/ )/ ,/ 能够/ 获得/ 能量/ 节省/ ./ 部分/ 部件/ 的/ 不可/ 调节/ 导致/ 能量/ 节省/ 效果/ 明显/ 下降/ ./ 例如/ CS/ =/ 0.8/ 时/ ,/ 基本上/ 已经/ 很难/ 得到/ 能量/ 节省/ ./ 这/ 说明/ 在/ DVS/ 并行/ 系统/ 上/ ,/ 除了/ 调节/ 主要/ 部件/ 的/ 能量消耗/ 以外/ ,/ 其它/ 设备/ 能量消耗/ 的/ 控制/ 也/ 十分/ 重要/ ./ 否则/ 多/ 节点/ 累积/ 的/ 系统/ 功耗/ 很/ 容易/ 抵消/ 并行/ 带来/ 的/ 能量消耗/ 节省/ ./ 在/ 当前/ 的/ 多/ 机系统/ 上/ ,/ 每个/ 节点/ 都/ 包含/ 了/ 除主/ 处理器/ 外/ 丰富/ 的/ 部件/ 资源/ (/ 存储器/ 、/ 通信/ 系统/ 和/ I/ // O/ 系统/ )/ ,/ 这些/ 都/ 是/ 能量消耗/ 的/ 重要/ 来源/ ,/ 因此/ 可以/ 预见/ 在/ 这样/ 的/ 系统/ 上/ 增加/ 主/ 处理器/ 的/ DVS/ 能力/ 很难/ 获得/ 并行处理/ 带来/ 的/ 能量/ 节省/ ./ 全新/ 设计/ 的/ 低电压/ 并行/ 系统/ 可能/ 得到/ 成功/ ,/ 因为/ 这样/ 的/ 系统/ 采用/ 了/ 全/ 系统/ 的/ 低功耗/ 设计/ 技术/ ,/ 这/ 相当于/ CS/ 部分/ 的/ 比率/ 为/ 1/ ,/ 这样/ 的/ 系统/ 是/ 能够/ 有效/ 减少/ 系统/ 能量消耗/ ,/ 改善/ 系统/ 能量/ 效率/ 的/ ./ 类似/ 的/ DVS/ 多核/ 处理器/ 也/ 很/ 有/ 应用/ 前景/ ./ 进一步/ 在/ 图/ 6/ 给出/ 了/ CS/ =/ 1/ 时/ 的/ 详细/ 曲线/ ./ 对于/ 不同/ 的/ 通信/ 函数/ ,/ 能量/ 节省/ 的/ 效果/ 不同/ ./ 对于/ 情况/ 3/ ,/ 随着/ 节点/ 数/ 的/ 增加/ ,/ 通信/ 时间/ 比率/ 增加/ ,/ 很快/ 抵消/ 了/ 能量/ 节省/ 的/ 效果/ ./ 情况/ 1/ 和/ 2/ 可以/ 较为/ 稳定/ 地/ 提高/ 能量/ 效率/ ./ 情况/ 1/ 代表/ 了/ 高/ 起动/ 通信/ 开销/ 的/ 并行/ 系统/ ,/ 这/ 对应/ 于/ 大规模/ 并行处理/ 系统/ ./ 从/ 曲线/ 的/ 变化/ 情况/ 可以/ 看出/ ,/ 在/ 原来/ 系统/ 的/ 设计/ 基础/ 上/ ,/ 并行度/ 提高/ 4/ 倍/ 到/ 6/ 倍/ 能够/ 获得最佳/ 的/ 能量/ 效率/ 改善/ ./ 进一步提高/ 并行度/ 对系统/ 的/ 能量/ 效率/ 改善/ 没有/ 很/ 好/ 的/ 效果/ ./ 相比之下/ ,/ 情况/ 2/ 的/ 能量/ 节省/ 效果/ 更为/ 明显/ ./ 回忆/ 情况/ 2/ 代表/ 了/ 低/ 通信/ 起动/ 开销/ ,/ 消息/ 长度/ 随/ 系统/ 扩展/ 递减/ ./ 情况/ 2/ 表明/ 低/ 延迟/ 、/ 高带宽/ 的/ 细粒度/ 并行/ 体系结构/ 可能/ 获得成功/ ./ 当前/ 多核/ 微处理器/ 恰恰/ 代表/ 了/ 这/ 一/ 方向/ ,/ 将/ 单个/ 运行/ 速度/ 较/ 低/ 的/ 处理器/ 集成/ 到/ 单个/ 芯片/ 内/ ,/ 处理器/ 之间/ 提供/ 低/ 延迟/ 、/ 高带宽/ 的/ 通信/ 链路/ ./ 进一步/ ,/ 从/ 低/ 通信/ 起动/ 开销/ 的/ 短消息/ 获得/ 更/ 高/ 的/ 能量/ 节省/ 可见/ :/ 未来/ 多核/ 处理器/ 的/ 编程/ 模型/ 可能/ 更加/ 适宜/ 采用/ 中/ 细粒度/ 的/ 并行/ 方式/ ./ 下面/ 详细分析/ 了/ 通信/ 开销/ 对/ 能量/ 效率/ 的/ 影响/ ./ 从图/ 7/ 中/ 可以/ 看出/ 情况/ 2/ 对/ 通信/ 开销/ 是/ 不/ 敏感/ 的/ ,/ 而/ 情况/ 3/ 对/ 通信/ 开销/ 十分/ 敏感/ ./ 情况/ 1/ 介于/ 两者之间/ ./ 从图/ 中/ 可以/ 看出/ 不管/ 是/ 对/ 通信/ 高度/ 敏感/ 的/ 情况/ 3/ 还是/ 对/ 通信/ 不/ 敏感/ 的/ 情况/ 2/ ,/ 在/ 超过/ 一定/ 节点/ 数/ 之后/ ,/ 很难/ 观察/ 到/ 能量/ 效率/ 改善/ ./ 总而言之/ ,/ 少量/ 节点/ 数/ 并行处理/ 提供/ 了/ 大量/ 的/ 能量/ 节省/ ,/ 超过/ 10/ 个/ Page6/ 节点/ 之后/ ,/ 能量/ 节省/ 的/ 效果/ 已经/ 很小/ ,/ 超过/ 16/ 个/ 节点/ 以后/ ,/ 几乎/ 很少/ 有/ 能量/ 节省/ ./ 能量/ 效率/ 模型/ 显示/ :/ 最佳/ 的/ 能量/ 比率/ 变化/ 情况/ 为/ R2/ // c/ =/ 0/ ,/ CS/ =/ 1/ ,/ Rs/ =/ 0/ ,/ 这时/ 能量/ 比率/ 为目/ n1/ 和/ n2/ (/ n1/ </ n2/ )/ ,/ 能量消耗/ 比率/ 变化/ 为/ En/ // E/ =/ n/ ·/ (/ 1/ // n/ )/ 3/ =/ 1/ // n2/ →/ 0/ (/ n/ →/ 0/ )/ ./ 考虑/ n/ >/ 16/ 的/ 情况/ ,/ 这时/ 对于/ 任意/ 两个/ 节点/ 数/ 1/ // n2/ 实际上/ 工艺/ 上/ 的/ 限制/ 使得/ 系统/ 的/ 运行/ 电压/ 必须/ 在/ 阈值电压/ 之上/ 并/ 保持/ 一定/ 比例/ ,/ 从/ 这个/ 角度/ 来说/ 完全/ 靠/ 提高/ 并行度/ 来/ 节省/ 能量消耗/ 也/ 是/ 不/ 现实/ 的/ ./ 由此/ 可以/ 得出结论/ ,/ 低电压/ 并行/ 系统/ 采用/ 并行处理/ 来/ 提高/ 能量/ 效率/ 的/ 最高/ 并行度/ 为/ 16/ 左右/ ./ 超过/ 这个/ 并行度/ 以后/ ,/ 尽管/ 可能/ 继续/ 改善/ 应用/ 的/ 性能/ ,/ 但是/ 不能/ 提高/ 能量/ 效率/ ./ 并且/ 由于/ 这/ 是/ 在/ 理想/ 情况/ 下/ 的/ 结论/ ,/ 实际上/ 由于/ 系统/ 和/ 应用/ 特性/ 的/ 因素/ ,/ 更/ 多/ 的/ 节点/ 可能/ 引入/ 很/ 高/ 的/ 开销/ ./ 同样/ 这一/ 结论/ 对/ 试图/ 采用/ 低电压/ 的/ 多/ 核/ 结构设计/ 的/ 低功耗/ 系统/ 提出/ 了/ 理论/ 上限/ ./ 给定/ 相应/ 的/ 制造/ 工艺/ 和/ 具体/ 的/ 应用/ ,/ 设计/ 16/ 个/ 左右/ 的/ 核心/ 数目/ 能够/ 有效/ 改善/ 应用/ 的/ 能量/ 效率/ ./ 超过/ 这样/ 的/ 数目/ 以后/ ,/ 尽管/ 可以/ 继续/ 提高/ 系统/ 的/ 性能/ ,/ 但是/ 很难/ 改善/ 应用/ 的/ 能量/ 效率/ ./ 当然/ 也/ 应该/ 注意/ 到/ ,/ 本文/ 的/ 模型/ 假定/ 单/ 节点/ 串行/ 执行/ 和/ 多/ 节点/ 并行执行/ 使用/ 了/ 相同/ 的/ 节点/ (/ 体现/ 在/ 电容/ Ceff/ 相同/ )/ ,/ 实际上/ 低电压/ 多核/ 结构设计/ 时/ ,/ 多核/ 节点/ 因为/ 运行/ 在/ 低电压/ 和/ 低/ 频率/ ,/ 往往/ 设计/ 得/ 更为/ 简洁/ 高效/ ,/ 这/ 有利于/ 系统/ 能效/ 的/ 改善/ ./ 4.2/ 应用/ 能量/ 效率/ 可扩展性/ 分析/ 令/ R2/ // c/ =/ 0.1/ ,/ CS/ =/ 1/ ,/ 下面/ 研究/ 了/ 应用/ 相关/ 参数/ 对系统/ 能量消耗/ 的/ 影响/ ./ 图/ 8/ 给出/ 了/ 在/ 不同/ Rs/ 时/ 的/ 功耗/ 变化/ 曲线/ ./ 由图/ 中/ 可以/ 看出/ ,/ 串行/ 区间/ 的/ 比率/ 对/ 应用/ 的/ 能量/ 节省/ 有/ 很/ 明显/ 的/ 影响/ ./ 对于/ 情况/ 1/ 和/ 情况/ 2/ ,/ 比率/ 小于/ 0.2/ 的/ 串行/ 区间/ 可以/ 使用/ 并行处理/ 节省/ 能量消耗/ ./ 对于/ 串行/ 区间/ 比率/ 为/ 0.4/ 的/ 应用/ ,/ 3/ 种/ 情况/ 都/ 不能/ 带来/ 能量/ 节省/ ./ 应用/ 的/ 规模/ 扩展/ 一般/ 导致/ 串行/ 区间/ 的/ 比率/ 下降/ ./ 在/ 图/ 9/ 中/ 给出/ 了/ 应用/ 规模/ 扩展/ 对/ 能量/ 效率/ 的/ 影响/ ./ 从图/ 中/ 可以/ 看出/ Rs/ 的/ 比率/ 降低/ ,/ 能够/ 得到/ 更/ 高/ 的/ 能量/ 节省/ ./ 同时/ ,/ 当/ Rs/ 比率/ 降低/ 后/ ,/ 较/ 多/ 的/ 节点/ 数/ 可能/ 获得/ 更/ 高/ 的/ 能量/ 节省/ ./ 但是/ 在/ 通信/ 开销/ 不可/ 扩展/ (/ 情况/ 3/ )/ 的/ 情况/ 下/ ,/ 即使/ 在/ 低/ 比率/ 的/ Rs/ 下/ 也/ 很/ 难/ 得到/ 能量/ 节省/ ./ 这里/ 需要/ 强调/ 的/ 是/ ,/ 即使/ 在/ Rs/ 很/ 低/ 的/ 情况/ 下/ ,/ 能量/ 节省/ 也/ 是/ 存在/ 上限/ 的/ ,/ 这/ 受限于/ 工艺/ 的/ 限制/ ./ 5/ 结论/ 本文/ 研究/ 了/ 并行处理/ 改善/ 系统/ 能量/ 效率/ 的/ 空间/ ./ 主要/ 结论/ 包括/ :/ 在/ 传统/ 系统/ 上/ 增加/ DVS/ 处理器/ ,/ 提高/ 并行度/ ,/ 改善/ 能量/ 效率/ 很/ 有限/ 的/ 空间/ ,/ 受限于/ 系统/ 固有/ 的/ 不可/ 调节/ 部件/ 的/ 功耗/ ./ 低电压/ 并行/ 系统/ 有/ 很/ 高/ 的/ 提高/ 能量/ 效率/ 的/ 空间/ ,/ 相对/ 于/ 传统/ 设计/ ,/ 系统/ 并行度/ 提高/ 4/ ~/ 6/ 倍/ 就/ 利用/ 了/ 并行处理/ 主要/ 的/ 节能/ 空间/ ./ 单个/ 芯片/ 内/ 采用/ 提高/ 并行度/ 的/ 方式/ 提高/ 能量/ 效率/ 有/ 广泛/ 的/ 前景/ ,/ 因为/ 单个/ 芯片/ 内/ 的/ 高带宽/ 、/ 低/ 延迟/ 特性/ ,/ 能量/ 效率/ 能够/ 随着/ 并行度/ 提高/ 稳定/ 地/ 改善/ ./ 应用/ 的/ 特性/ 对/ 并行处理/ 影响/ 很大/ ./ 可以/ 高度/ 并行/ 实现/ 的/ 应用程序/ 能够/ 获得/ 更/ 高/ 的/ 能量/ 效率/ 改善/ ,/ 这/ 在/ GPU/ 能够/ 在/ 处理/ 具有/ 规则/ 计算/ 模式/ 的/ 应用/ 时/ 获得/ 很/ 高/ 能效/ 得到/ 了/ 印证/ ./ 相反/ ,/ 并行度/ 低/ 的/ 程序/ 很难/ 通过/ 并行处理/ 提高/ 能量/ 效率/ ./ 

