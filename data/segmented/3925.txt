Page1/ 一种/ 基于/ 双/ 仲裁/ 时间/ 片/ 策略/ 的/ 可/ 重构/ 硬件/ 任务调度/ 算法/ 杨志华/ 1/ )/ 伍卫国/ 1/ )/ 王涛/ 1/ )/ 钱德沛/ 2/ )/ 1/ )/ (/ 西安交通大学/ 计算机科学/ 与/ 技术/ 系/ 西安/ 710049/ )/ 2/ )/ (/ 北京航空航天大学/ 中/ 德/ 软件/ 新/ 技术/ 研究所/ 北京/ 100191/ )/ 摘要/ 在/ 可/ 重构/ 系统/ 中/ ,/ 二维/ 布局/ 模型/ 比/ 一维/ 布局/ 模型/ 具有/ 更/ 高/ 的/ 自由度/ ./ 然而/ ,/ 二维/ 模型/ 获得/ 较/ 高/ 的/ 资源/ 利用率/ 要/ 以/ 复杂/ 的/ 资源管理/ 和/ 任务调度/ 算法/ 为/ 代价/ ,/ 这/ 不但/ 使/ 调度/ 过程/ 变得复杂/ ,/ 而且/ 导致/ 时间/ 开销/ 大/ ,/ 直接/ 影响/ 系统/ 实时性/ ./ 针对/ 这一/ 问题/ ,/ 在/ 综合/ 考虑/ 性能/ 和/ 算法/ 复杂度/ 的/ 基础/ 上/ ,/ 提出/ 了/ 一种/ 适用/ 于/ 二维/ 可/ 重构/ 器件/ 的/ 双/ 仲裁/ 时间/ 片/ 可/ 重构/ 硬件/ 任务调度/ 算法/ DATS/ (/ DoubleArbitersTime/ -/ Sliced/ )/ ./ 算法/ 采用/ 两个/ 仲裁/ 器/ 对/ 硬件资源/ 进行/ 管理/ ,/ 并/ 根据/ 空间/ 和/ 时间/ 约束/ 动态/ 裁决/ 任务/ 布局/ 位置/ ;/ 同时/ 设计/ 了/ 双/ 仲裁/ 时间/ 片/ 任务调度/ 模式图/ ,/ 对/ 任务/ 的/ 调度/ 和/ 布局/ 过程/ 进行/ 合理/ 分离/ ,/ 使/ 任务调度/ 和/ 布局/ 过程/ 相对/ 独立/ 并/ 简化/ 处理过程/ ./ DATS/ 算法/ 的/ 调度/ 时间/ 复杂度/ 为/ O/ (/ N/ )/ ,/ 单任务/ 布局/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ E/ )/ ,/ 其中/ N/ 为/ 被/ 调度/ 的/ 任务/ 总数/ ,/ E/ (/ </ N/ )/ 为/ 器件/ 中/ 正在/ 执行/ 的/ 任务/ 数目/ ,/ 实验/ 表明/ ,/ DATS/ 算法/ 时间/ 开销/ 小/ ,/ 在/ 轻/ 负载/ 情况/ 下/ 任务调度/ 成功率/ 比/ stuffing/ 算法/ 高/ 1/ %/ ~/ 2/ %/ ,/ 在/ 重/ 负载/ 情况/ 下/ 资源/ 利用率/ 保持/ 在/ 80/ %/ ~/ 85/ %/ 的/ 水平/ ,/ 与/ 时间/ 复杂度/ 为/ O/ (/ N2/ )/ 的/ 算法/ 基本一致/ ,/ 所以/ 更/ 适合/ 于/ 实时/ 情况/ 下/ 的/ 任务调度/ ./ 关键词/ 可/ 重构/ ;/ 时间/ 片/ ;/ 双/ 仲裁/ ;/ 任务调度/ 1/ 引言/ 在/ 传统/ 的/ SoC/ 或/ 嵌入式/ 系统/ 设计/ 中/ ,/ 具体/ 应用/ 通过/ 软硬件/ 划分/ [/ 1/ -/ 3/ ]/ 之后/ 产生/ 多个/ 计算/ 任务/ ,/ 通过/ 专用/ 集成电路/ 等/ 硬件/ 实现/ 任务/ 的/ 计算/ ,/ 速度/ 快/ ,/ 效率高/ ;/ 利用/ 微处理器/ 通过/ 软件/ 实现/ 任务/ 的/ 计算/ ,/ 灵活性/ 高/ ,/ 速度/ 和/ 效率/ 则/ 较差/ ./ 为了/ 综合/ 使用/ 软硬件/ 的/ 优点/ ,/ 研究/ 人员/ 开始/ 关注/ 可/ 重构/ 计算/ [/ 4/ ]/ ./ 以/ FPGA/ 为/ 代表/ 的/ 可/ 重构/ 器件/ 既/ 可以/ 实现/ 硬件/ 任务/ 的/ 高速/ 高效/ 计算/ ,/ 又/ 可以/ 根据/ 资源/ 的/ 使用/ 情况/ 对/ 任务/ 进行/ 动态/ 配置/ ./ 在/ 任务量/ 较大/ ./ 资源/ 相对/ 有限/ 的/ 条件/ 下/ ,/ 采用/ 灵活/ 的/ 任务调度/ 算法/ 可以/ 充分利用/ 硬件资源/ 实现/ 对/ 关键/ 任务/ 的/ 加速/ 计算/ ./ 所以/ ,/ 在/ 可/ 重构/ 系统/ 中/ ,/ 如何/ 实时/ 地/ 对/ 任务/ 进行/ 灵活/ 调度/ 以/ 保持/ 较/ 高/ 的/ 资源/ 利用率/ 和/ 在/ 合理/ 的/ 时间/ 范围/ 内/ 完成/ 对/ 硬件/ 任务/ 的/ 计算/ ,/ 是/ 当前/ 研究/ 的/ 重点/ 和/ 难点/ 之一/ [/ 4/ ]/ ./ 在/ 可/ 重构/ 系统/ 中/ ,/ 对/ 硬件/ 逻辑/ 资源/ 的/ 管理/ 以及/ 对/ 任务调度/ 算法/ 的/ 设计/ 必须/ 建立/ 在/ 一定/ 的/ 可/ 重构/ 器件/ 资源/ 布局/ 模型/ 基础/ 之上/ [/ 4/ -/ 5/ ]/ ./ 目前/ 可/ 重构/ 器件/ 布局/ 模型/ 主要/ 有/ 两种/ :/ 一维/ 布局/ 模型/ 和/ 二维/ 布局/ [/ 6/ -/ 7/ ]/ 模型/ ./ 这/ 两种/ 模型/ 在/ Xilinx/ 公司/ 生产/ 的/ FPGA/ 中均/ 有/ 采用/ :/ 如/ SpartanII/ 、/ Vertex/ 和/ VertexII/ 采用/ 的/ 是/ 一维/ 布局/ 模型/ ,/ 这些/ 器件/ 的/ 可编程/ 逻辑/ (/ 重构/ )/ 资源/ 的/ 配置/ 均/ 按列/ 组织/ ,/ 最小/ 配置/ 单位/ 是/ 4/ 个/ slice/ 列/ ,/ 一维/ 布局/ 模型/ 下/ 的/ 调度/ ,/ 只/ 需/ 在/ 一维/ 上/ 考虑/ 资源/ 空间/ 位置/ ,/ 若/ 考虑/ 任务/ 配置/ 、/ 执行/ 等/ 因素/ ,/ 最/ 多/ 达到/ 二维/ 的/ 复杂/ 规模/ ./ 国内外/ 研究/ 人员/ 所/ 设计/ 可/ 重构/ 硬件/ 任务调度/ 算法/ 一般/ 基于/ 一维/ 布局/ 模型/ [/ 6/ -/ 7/ ]/ ./ Xilinx/ 公司/ 的/ Virtex/ -/ 4/ 和/ Virtex/ -/ 5/ 系列/ FPGA/ 采用/ 的/ 是/ 二维/ 布局/ 模型/ ./ 在/ 二维/ 布局/ 的/ 器件/ 模型/ 中/ ,/ 重构/ 资源/ 以/ 二维/ 矩形/ 阵列/ 的/ 方式/ 组织/ ,/ 重构/ 的/ 最小/ 单位/ 为/ 矩形/ 阵列/ 中/ 的/ 一个/ 逻辑/ 单元/ ,/ 一个/ 硬件/ 任务/ 占用/ 阵列/ 中/ 的/ 一个/ 矩形/ 区域/ ,/ 任务/ 布局/ 具有/ 二维/ 自由度/ ./ 针对/ 一维/ 布局/ 模型/ 的/ 调度/ 算法/ 时空/ 关系/ 简单/ ,/ 但/ 由于/ 内/ 、/ 外部/ 碎片/ 的/ 存在/ ,/ 器件/ 资源/ 利用率/ 普遍/ 较/ 低/ [/ 7/ ]/ ./ 基于/ 二维/ 布局/ 模型/ 的/ 调度/ 算法/ ,/ 可以/ 实现/ 任务/ 的/ 灵活/ 放置/ ,/ 但/ 考虑/ 到/ 硬件/ 任务/ 的/ 启动/ 、/ 配置/ 、/ 执行/ 、/ 重/ 定位/ 等/ 时间/ 因素/ ,/ 调度/ 算法/ 和/ 资源管理/ 策略/ 将/ 变得/ 十分复杂/ ./ 针对/ 实时/ 可/ 重构/ 应用/ ,/ 本文/ 提出/ 了/ 一种/ 基于/ 二维/ 布局/ 模型/ 的/ 任务调度/ 算法/ ,/ 在/ 保证/ 任务调度/ 灵活性/ 的/ 同时/ ,/ 提高/ 了/ 资源/ 利用率/ ,/ 缩短/ 了/ 任务/ 集/ 运行/ 时间/ ./ 本文/ 第/ 2/ 节/ 分析/ 相关/ 研究/ ;/ 第/ 3/ 节对/ 提出/ 的/ 调度/ 算法/ DATS/ 进行/ 描述/ ;/ 第/ 4/ 节为/ 实验/ 及/ 结果/ 分析/ 部分/ ;/ 第/ 5/ 节对/ 算法/ 的/ 优缺点/ 进行/ 总结/ 并/ 提出/ 了/ 改进/ 的/ 方法/ 和/ 途径/ ./ 2/ 问题/ 描述/ 及/ 相关/ 工作/ 图/ 1/ 所示/ 为/ 可/ 重构/ 系统/ 的/ 任务/ 划分/ 及/ 调度/ 模型/ ,/ 模型/ 中/ 的/ 应用/ 通过/ 任务/ 划分/ 后/ 被/ 分配/ 给/ 软件/ 和/ 硬件/ 功能/ 部件/ 分别/ 进行/ 处理/ ./ 通过/ 软件/ 功能/ 部件/ 实现/ 并/ 处理/ 的/ 任务/ 称作/ 软件/ 任务/ ./ 通过/ 硬件/ 功能/ 部件/ 实现/ 并/ 处理/ 的/ 任务/ 称作/ 硬件/ 任务/ ./ 二维/ 布局/ 模型/ 下/ 的/ 硬件/ 任务/ 是/ 经过/ 可编程/ 逻辑/ 器件/ 内部/ 布局/ 布线/ 后/ 形成/ 的/ 长/ 、/ 宽/ 固定/ 且/ 不可/ 旋转/ 的/ 矩形/ 逻辑/ 单元/ 块/ ,/ 通常/ 由/ 4/ 个/ 基本/ 维/ 向量/ 犜/ (/ w/ ,/ h/ ,/ a/ ,/ e/ )/ 描述/ ./ 其中/ ,/ w/ 、/ h/ 分别/ 代表/ 硬件/ 任务/ 占用/ 逻辑/ 单元/ 的/ 宽/ 和/ 高/ ,/ a/ 是/ 任务/ 的/ 到达/ 时间/ ,/ e/ 是/ 执行/ 时间/ ./ 软硬件/ 任务/ 的/ 划分/ 是/ 一个/ NP/ 完全/ 问题/ [/ 1/ -/ 3/ ]/ ./ 如图/ 2/ 所示/ ,/ 一个/ 应用/ 实例/ 通过/ 划分/ 形成/ 一个/ 任务/ 图/ [/ 3/ ]/ ,/ 图中/ 圆圈/ 表示/ 通过/ 软件/ 实现/ 的/ 任务/ ,/ 正方形/ 表示/ 需要/ 用/ 硬件/ 实现/ 加速/ 的/ 任务/ ,/ 分别/ 用/ STi/ 和/ HTi/ 进行/ 标识/ ./ 本文/ 只/ 研究/ 针对/ HTi/ 的/ 调度/ 算法/ ,/ 对/ 任务/ 划分/ 部分/ 不/ 作/ 研究/ ./ Page3/ 图/ 1/ 可/ 重构/ 系统/ 任务/ 划分/ 及/ 调度/ 模型/ 可/ 重构/ 系统/ [/ 7/ ]/ 的/ 硬件/ 任务调度/ 子/ 模型/ 主要/ 包括/ 主/ 处理器/ 和/ 可/ 重构/ 器件/ 两/ 部分/ ,/ 主/ 处理器/ 上/ 运行/ 可/ 重构/ 操作系统/ ,/ 负责/ 对/ 硬件/ 任务/ 进行/ 调度/ 、/ 布局/ 和/ 加载/ ./ 任务/ 到达/ 处理器/ 后/ 被/ 存储/ 在/ 一个/ 队列/ 中/ 等待/ 进一步/ 处理/ ./ 可/ 重构/ 资源/ 的/ 管理/ 主要/ 由/ 运行/ 在/ 处理器/ 上/ 的/ 布局/ 器/ 、/ 调度/ 器/ 和/ 加载/ 器来/ 完成/ ./ 调度/ 器/ 的/ 作用/ 是/ 为/ 硬件/ 任务分配/ 资源/ 和/ 决定/ 各/ 任务/ 的/ 执行/ 时机/ ./ 布局/ 器/ 的/ 工作/ 方式/ 如下/ :/ 硬件/ 任务/ 犜/ (/ w/ ,/ h/ )/ 到达/ 时/ ,/ 调度/ 器/ 询问/ 布局/ 器以/ 确认/ 逻辑/ 器件/ 上/ 是否/ 有/ 足够/ 的/ 空闲/ 资源/ 空间/ ./ 布局/ 器/ 根据/ 参数/ w/ 、/ h/ 尝试/ 分配/ 空闲/ 空间/ ,/ 若/ 成功/ ,/ 则/ 返回/ 给/ 调度/ 器该/ 任务/ 可/ 被/ 布局/ 的/ 位置/ ;/ 若/ 失败/ ,/ 则/ 调度/ 器/ 按照/ 一定/ 的/ 策略/ ,/ 将/ 该/ 任务/ 放入/ 等待/ 队列/ 或者/ 拒绝/ 该/ 任务/ ./ 布局/ 成功/ 时/ ,/ 调度/ 器/ 按照/ 调度/ 策略/ 在/ 合适/ 的/ 时机/ 调度/ (/ 布局/ )/ 该/ 任务/ ,/ 当/ 硬件/ 任务/ 执行/ 结束/ 后/ ,/ 布局/ 器/ 回收/ 该/ 任务/ 占用/ 的/ 空间/ ./ 任务/ 布局/ 不合理/ 会/ 导致/ 可编程/ 资源/ 碎片/ 问题/ [/ 7/ ]/ ,/ 理想/ 的/ 布局/ 算法/ 能够/ 减少/ 碎片/ 的/ 生成/ 且/ 任务/ 能够/ 得到/ 最大/ 并行/ 化/ 处理/ ./ 可/ 重构/ 二维/ 器件/ 可以/ 抽象/ 为/ 由/ H/ 行/ 、/ W/ 列个/ 可/ 重构/ 配置/ 单元/ (/ RCU/ )/ 组成/ 的/ 二维/ 矩形/ 阵列/ ./ 调度/ 算法/ 的/ 目的/ 是/ 将/ 到达/ 的/ 任务/ 在/ 一定/ 时间/ 约束条件/ 下/ 映射/ 到/ 二维/ 逻辑/ 器件/ 的/ 合适/ 位置/ 上/ ,/ 同时/ 保证/ 资源/ 高效/ 利用/ ,/ 并/ 尽可能/ 完成/ 任务/ ./ 基于/ 二维/ 布局/ 模型/ 的/ 任务调度/ 比/ 一维/ 更/ 关注/ 实时性/ ,/ 因为/ 二维/ 逻辑/ 器件/ 下/ 的/ 任务调度/ 因维数/ 的/ 增加/ 会/ 带来/ 新/ 的/ 问题/ ,/ 突出/ 的/ 问题/ 是/ 任务/ 启动/ 、/ 执行/ 以及/ 终止/ 时间/ 与/ 二维/ 空间布局/ 协调/ 的/ 问题/ ,/ 解决/ 该/ 问题/ 需要/ 设计/ 相应/ 的/ 布局/ 算法/ 与/ 调度/ 算法/ 并/ 协调/ 其/ 工作/ ./ 对/ 任务/ 进行/ 布局/ 本质/ 上/ 是/ 对/ 可/ 重构/ 资源/ 进行/ 管理/ ,/ 主要/ 有/ 两种/ 方式/ :/ 空闲/ 区/ 管理/ 方式/ 和/ 状态/ 矩阵/ 扫描/ 方式/ ./ 空闲/ 区/ 管理/ 是/ 通过/ 记录/ 空闲/ 区域/ 来/ 管理/ 资源/ ,/ 其中/ ,/ 最/ 重要/ 的/ 方法/ 是/ 最大/ 空闲/ 矩形/ 法/ (/ MER/ )/ [/ 8/ ]/ ,/ 即/ 记录/ 一个/ 互不/ 交叠/ 的/ 空闲/ 资源/ 矩形/ 列表/ ,/ 通过/ 查找/ 匹配/ 的/ 空闲/ 资源/ 矩形/ 来/ 获得/ 硬件/ 任务/ 的/ 布局/ 位置/ ;/ 状态/ 矩阵/ 扫描/ 方式/ 通过/ 维护/ 一个/ 记录/ 可/ 重构/ 单元/ (/ RU/ )/ 状态/ 的/ 矩阵/ 来/ 管理/ 资源/ ,/ 通过/ 扫描/ 状态/ 矩阵/ 来/ 查找/ 硬件/ 任务/ 的/ 可/ 布局/ 位置/ ,/ 其/ 特点/ 是/ 可以/ 做到/ 资源/ 完全/ 识别/ ,/ 但/ 时间/ 开销/ 较大/ ./ 目前/ 针对/ 可/ 重构/ 计算/ 硬件/ 任务调度/ 的/ 算法/ 主要/ 是/ 文献/ [/ 6/ -/ 7/ ]/ 提出/ 的/ Horizon/ 和/ Stuffing/ 算法/ ,/ 这/ 两类/ 算法/ 主要/ 针对/ 1D/ 可/ 重构/ 器件/ 模型/ 而/ 设计/ ,/ Horizon/ 算法/ 的/ 优点/ 是/ 维护/ SHL/ 比/ 维护/ 器件/ 所有/ 可用/ 空间/ 要/ 简单/ ,/ 缺点/ 是/ 该/ 算法/ 只能/ 保证/ 新/ 的/ 任务/ 与/ 其他/ 链表/ 任务/ 满足/ 时空/ 不/ 重叠/ 约束条件/ 时/ 将/ 任务/ 插入/ RL/ ,/ 这样/ 任务/ 只/ 可以/ 放在/ horizon/ 线/ 的/ 末尾/ ,/ 而/ 在/ 当前/ 时间/ 和/ interval/ 之间/ 分配/ 的/ 任务/ 则/ 不/ 可能/ 被/ 调度/ ,/ 这会/ 降低/ 任务调度/ 成功率/ ./ Stuffing/ 调度/ 算法/ 基本/ 思想/ 是/ 空闲/ 区/ 管理/ ,/ 主要/ 针对/ 1D/ 资源/ 模型/ ,/ 引入/ 了/ 时间/ 维对/ 任务/ 进行/ 调度/ 和/ 布局/ ,/ 算法/ 在/ 调度/ 中/ 对/ 未来/ 资源/ 的/ 利用/ 情况/ 提前/ 规划/ ,/ 是/ 一种/ 较为/ 有效/ 的/ Page4/ 算法/ ./ 该/ 算法/ 利用/ 模拟/ 将来/ 时刻/ 任务/ 启动/ 与/ 终止/ 的/ 方法/ 来/ 确定/ 预约/ 任务/ 的/ 启动/ 时间/ ,/ 调度/ 算法/ 与/ 布局/ 算法/ 关联/ 较弱/ ./ Stuffing/ 算法/ 采用/ FSL/ 记录/ 当前/ 未/ 被/ 使用/ 的/ 资源/ ,/ 并/ 按照/ 资源/ 维度/ 值/ 递增/ 排序/ ,/ 与/ Horizon/ 算法/ 相比/ ,/ Stuffing/ 由于/ 必须/ 识别/ 所有/ 潜在/ 布局/ 空间/ 并且/ 检查/ 这些/ 潜在/ 空间/ 与/ 已/ 存在/ 于/ RL/ 中/ 空间/ 是否/ 冲突/ ,/ 所以/ 复杂度/ 较/ 高/ ./ 此外/ 文献/ [/ 9/ -/ 10/ ]/ 还/ 提出/ 了/ 针对/ 二维/ 布局/ 模型/ 的/ Yoo/ 和/ CR/ 算法/ ,/ CR/ 算法/ 是/ QA/ [/ 5/ ]/ 布局/ 算法/ 的/ 三维/ 扩展/ ,/ 其/ 时间/ 复杂度/ 与/ Yoo/ 一样/ ,/ 均/ 为/ O/ (/ G/ (/ E/ +/ R/ )/ )/ ,/ 其中/ ,/ G/ =/ W/ ×/ H/ 是/ RCU/ 的/ 总数/ ,/ E/ 是/ 正在/ 运行/ 的/ 任务/ 个数/ ,/ R/ 是/ 算法/ 预约/ 任务/ 的/ 个数/ ./ 文献/ [/ 11/ ]/ 提出/ 了/ 针对/ 一/ 维和/ 二维/ 均/ 可/ 适用/ 的/ 任务/ 间/ 最小/ 空隙/ 调度/ 算法/ (/ MGS/ )/ ,/ 该/ 算法/ 借助/ 任务/ 投影/ 和/ 调度/ 代价/ 函数/ ,/ 采用/ 二维/ 时空/ 坐标系/ 协调/ 各/ 硬件/ 任务/ 占用/ 的/ 芯片/ 资源/ 和/ 执行/ 时间/ ./ Yoo/ 、/ CR/ 和/ MGS/ 不是/ 单纯/ 的/ 调度/ 算法/ ,/ 同时/ 具有/ 布局/ 功能/ ,/ 因此/ 调度/ 与/ 布局/ 过程/ 独立性/ 较差/ ,/ 不利于/ 灵活/ 选择/ 布局/ 策略/ 以/ 提高/ 系统/ 性能/ ./ 针对/ 二维/ 布局/ 模型/ 的/ 算法/ 主要/ 是从/ 分布式/ 多/ 处理/ 系统/ (/ 如/ 网格/ 互连/ 并行计算/ 系统/ [/ 12/ ]/ )/ 中/ 的/ 调度/ 算法/ 演变/ 而/ 来/ ,/ 表/ 1/ 列出/ 5/ 种/ 算法/ ,/ 并/ 给出/ 了/ 算法/ 的/ 分配/ 复杂度/ [/ 10/ ]/ 和/ 空间/ 复杂度/ ./ 其中/ ,/ N/ 表示/ 被/ 调度/ 任务/ 数/ ./ 调度/ 算法/ 时间/ 复杂度/ 布局/ 算法/ 分配/ 复杂度/ 空间/ 复杂度/ Horizon/ [/ 6/ ]/ O/ (/ N/ )/ OTF/ [/ 7/ ]/ O/ (/ E/ )/ O/ (/ E/ )/ Stuffing/ [/ 7/ ]/ O/ (/ N2/ )/ BL/ [/ 12/ ]/ O/ (/ E3/ )/ O/ (/ E/ )/ Yoo/ [/ 9/ ]/ O/ (/ G/ (/ E/ +/ R/ )/ )/ FF/ [/ 13/ ]/ O/ (/ N/ )/ O/ (/ N/ )/ CR/ [/ 10/ ]/ O/ (/ G/ (/ E/ +/ R/ )/ )/ RBL/ [/ 14/ ]/ O/ (/ E2/ )/ O/ (/ E/ )/ MGS/ [/ 11/ ]/ O/ (/ N2/ )/ KVIT/ [/ 15/ ]/ O/ (/ E2/ )/ O/ (/ E/ )/ 文献/ [/ 16/ ]/ 中/ 的/ 调度/ 算法/ 首先/ 为/ 缓冲/ 队列/ 中/ 的/ 硬件/ 任务/ 指定/ 优先级/ ,/ 然后/ 按/ 优先级/ 依次/ 执行/ 任务/ ,/ 但是/ 在/ 离线/ 状态/ 指定/ 优先级/ 本身/ 不/ 符合/ 实时性/ 要求/ ,/ 因而/ 不/ 支持/ 实时/ 调度/ ,/ 且/ 该/ 方案/ 的/ 资源/ 利用率/ 较/ 低/ ./ 文献/ [/ 17/ ]/ 提出/ 一种/ 调度/ 和/ 布局/ 相结合/ 的/ 算法/ ,/ 虽能/ 降低/ 布局/ 产生/ 的/ 开销/ ,/ 但/ 在/ 调度/ 方面/ 对/ 任务/ 接收/ 率/ 和/ 资源/ 利用率/ 的/ 改善/ 较/ 小/ ./ Stuffing/ 算法/ 主要/ 针对/ 一维/ 布局/ 模型/ ,/ 引入/ 了/ 时间/ 维对/ 任务/ 进行/ 调度/ ,/ 算法/ 在/ 调度/ 中/ 对/ 未来/ 资源/ 的/ 利用/ 情况/ 提前/ 规划/ ,/ 是/ 一种/ 较为/ 有效/ 的/ 算法/ ./ 该/ 算法/ 利用/ 模拟/ 将来/ 时刻/ 任务/ 启动/ 与/ 终止/ 的/ 方法/ 来/ 确定/ 预约/ 任务/ 的/ 启动/ 时间/ ,/ 这样/ 调度/ 算法/ 与/ 任务/ 布局/ 算法/ 关联/ 较弱/ ,/ 相对/ 独立/ ./ 另外/ ,/ Stuffing/ 算法/ 主要/ 对/ 任务/ 的/ 时间/ 属性/ 从/ 调度/ 方面/ 进行/ 着重/ 考虑/ ,/ 结合/ 二维/ 布局/ 模型/ 的/ 布局/ 算法/ OTF/ 则/ 容易/ 引起/ 布局/ 错误/ [/ 10/ ]/ ,/ 与/ RBL/ 算法/ 结合/ 的/ 时间/ 复杂度/ 为/ O/ (/ (/ E/ +/ R/ )/ 3/ )/ ./ 文献/ [/ 9/ ]/ 将/ 二维/ 网格/ 多处理器/ 系统/ 中/ 的/ 任务调度/ 方法/ 与/ 基本/ 的/ 扫描/ 类/ 布局/ 算法/ 结合/ ,/ 同样/ 引入/ 了/ 预约/ 的/ 概念/ ,/ 通过/ 对/ 未/ 到达/ 的/ 任务/ 预约/ 子/ 区域/ 来/ 实现/ 调度/ ,/ 由于/ 预约/ 的/ 区域/ 不能/ 被/ 新/ 任务/ 占用/ ,/ 会/ 导致/ 资源/ 利用率/ 下降/ ./ 其它/ 与/ 文献/ [/ 6/ ,/ 9/ ]/ 类似/ 的/ 算法/ 不管/ 是/ 预约/ 任务/ 还是/ 预约/ 区域/ ,/ 均/ 对/ 任务/ 启动/ 、/ 终止/ 时间/ 等/ 信息/ 的/ 有效/ 使用/ 依赖/ 较大/ ,/ 常/ 出现/ 预约/ 任务/ 不是/ 最佳/ 目标/ 任务/ 和/ 预约/ 区域/ 闲置/ 的/ 情形/ ,/ 导致/ 调度/ 成功率/ (/ 命中率/ )/ 和/ 资源/ 利用率/ 降低/ ./ Horizon/ [/ 6/ ]/ 调度/ 算法/ 将/ 文献/ [/ 9/ ]/ 中/ 的/ 预约/ 概念/ 引入/ 空闲/ 区/ 管理/ ,/ 但是/ 引入/ 预约/ 之后/ ,/ OTF/ 等/ 简化/ 算法/ 不再/ 适应/ ,/ 且/ 文献/ 中/ 并/ 没有/ 提出/ 高效/ 的/ 空闲/ 区/ 管理/ 算法/ ,/ 因而/ 不能/ 被/ 有效/ 实现/ ./ 本文/ 的/ 研究/ 是/ 基于/ FPGA/ 可/ 重构/ SOC/ ,/ 在/ 实时性/ 方面/ 要求/ 较/ 高/ ,/ 而且/ 基于/ 2D/ 资源/ 模型/ 的/ 调度/ 和/ 布局/ 比/ 1D/ 模型/ 具有/ 更好/ 的/ 灵活性/ ,/ 在/ 这些/ 方面/ Horizon/ 和/ Stuffing/ 算法/ 显然/ 可以/ 满足/ 需求/ ,/ 但是/ 这/ 两种/ 算法/ 在/ 布局/ 策略/ 方面/ 均/ 采用/ BF/ (/ BestFit/ )/ ,/ BF/ 策略/ 基于/ 为/ 后续/ 任务/ 预留/ 更/ 多/ 空间/ 的/ 思想/ ,/ 在/ 调度/ 时/ 总是/ 选择/ 可/ 布局/ 空间/ 中/ 最小/ 的/ 空间/ 放置/ 任务/ ,/ 增加/ 了/ 时间/ 复杂度/ ;/ 采用/ FF/ (/ FirstFit/ )/ 策略/ 将/ 任务/ 放置/ 在/ 首次/ 搜索/ 到/ 的/ 可/ 布局/ 空间/ 中/ ,/ 减少/ 了/ 搜索/ 和/ 寻优/ 时间/ ,/ 同时/ 符合/ 紧凑/ 原则/ ,/ 同样/ 可以/ 为/ 后续/ 任务/ 预留/ 足够/ 空间/ ,/ 在/ 调度/ 效果/ 上/ 不/ 一定/ 逊色/ 于/ BF/ ./ 另外/ ,/ Horizon/ 和/ Stuffing/ 算法/ 在/ 空间布局/ 时未/ 考虑/ 二维/ 模型/ 的/ 灵活性/ ,/ 盲目/ 搜索/ 空间/ 放置/ 任务/ ,/ 使/ 任务/ 在/ 空间布局/ 上/ 容易/ 产生/ 冲突/ ,/ 因此/ 设计/ 一种/ 算法/ 减少/ 布局/ 冲突/ 并/ 缩短/ 搜索/ 时间/ 是/ 可行/ 的/ ./ 图/ 3/ 所示/ 为/ 两种/ 不同/ 布局/ 策略/ 下/ 的/ 布局/ 效果/ ./ 图/ 3/ (/ a/ )/ 采用/ BF/ 策略/ ,/ 在/ 任务/ 放置/ T1/ 后/ ,/ 任务/ T2/ 紧贴/ T1/ 放置/ 在/ 最/ 右边/ ,/ 无论是/ 采用/ Horizon/ 还是/ Stuffing/ 算法/ ,/ T3/ 到达/ 时均/ 按照/ 图/ 3/ (/ a/ )/ 效果/ 放置/ ;/ 图/ 3/ (/ b/ )/ 采用/ 了/ 放置/ 方向/ 决策/ 布局/ 策略/ ,/ 降低/ 了/ 任务/ 冲突/ 概率/ ,/ 在/ 任务/ T1/ 被/ 放置/ 后/ ,/ 任务/ T2/ 既/ 可/ 沿/ X/ 轴/ 放置/ ,/ 也/ 可/ 沿/ Y/ 轴/ 方向/ 放置/ ,/ 通过/ 决策/ 将/ T2/ 沿/ Y/ 轴/ 方向/ 放置/ ,/ 接着/ T3/ 同样/ 放置/ ;/ 任务/ T4/ 到达/ 后/ 采用/ BF/ 布局/ 策略/ 会/ 引起/ 冲突/ ,/ 而/ 采用/ 方向/ 决策/ 的/ 布局/ 策略/ 则/ 可以/ 成功/ 放置/ ,/ 显然/ 图/ 3/ (/ a/ )/ 布局/ 方法/ 导致/ 空闲/ 区域分割/ 较小且/ 不/ 连续/ ,/ 不利于/ 后续/ 任务/ 的/ 布局/ ,/ 而图/ 3/ (/ b/ )/ 通过/ 对/ 空闲/ 区/ 边界/ 大小/ 的/ 决策/ 来/ 不断/ 按照/ X/ 轴/ 方向/ 和/ Y/ 轴/ 方向/ 放置/ ,/ 降低/ 了/ 任务/ 冲突/ 的/ 概率/ ,/ 使/ 区域/ 在/ 右上角/ 方向/ 保持/ 连续/ ,/ 有利于/ 后续/ 任务/ 放置/ ./ Page5/ 图/ 3/ 两种/ 不同/ 布局/ 策略/ 放置/ 效果/ 本文/ 在/ 软硬件/ 划分/ 结果/ 基础/ 上/ ,/ 提出/ 了/ 一种/ 适用/ 于/ 2D/ 可/ 重构/ 器件/ 模型/ 的/ 双/ 仲裁/ 时间/ 片/ 硬件/ 任务调度/ 算法/ DATS/ (/ DoubleArbitersTime/ -/ Sliced/ )/ ,/ 采用/ 两个/ 仲裁/ 器/ 对/ 可/ 重构/ 器件/ 资源/ 进行/ 管理/ ,/ 并/ 根据/ 空间/ 和/ 时间/ 约束条件/ 动态/ 裁决/ 任务/ 布局/ 位置/ ;/ 同时/ 设计/ 了/ 双/ 仲裁/ 时间/ 片/ 任务调度/ 模式图/ ,/ 对/ 任务/ 的/ 调度/ 和/ 布局/ 过程/ 进行/ 合理/ 分离/ ,/ 使/ 任务调度/ 和/ 布局/ 过程/ 相对/ 独立/ 并/ 简化/ 处理过程/ ./ DATS/ 算法/ 的/ 调度/ 时间/ 复杂度/ 为/ O/ (/ N/ )/ ,/ 单任务/ 布局/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ E/ )/ ,/ 实验/ 表明/ ,/ DATS/ 算法/ 时间/ 开销/ 小/ ,/ 在/ 轻/ 负载/ 情况/ 下/ 任务调度/ 成功率高/ ,/ 在/ 重/ 负载/ 情况/ 下/ 资源/ 利用率/ 与/ 时间/ 复杂度/ 为/ O/ (/ N2/ )/ 的/ 算法/ 基本一致/ ,/ 适合/ 于/ 实时/ 情况/ 下/ 的/ 任务调度/ ./ 3DATS/ :/ 双/ 仲裁/ 时间/ 片/ 任务调度/ 算法/ DATS/ 算法/ 通过/ 两个/ 仲裁/ 器/ 对/ 任务/ 的/ 放置/ 位置/ 和/ 执行/ 时间/ 进行/ 动态/ 约束/ 和/ 裁决/ ,/ 从而/ 实现/ 对/ 硬件资源/ 的/ 管理/ ./ 算法/ 主要/ 引入/ 仲裁/ 器/ 和/ 时间/ 片/ 两个/ 概念/ ,/ 与/ 二维/ 可/ 重构/ 硬件/ 调度/ 模型/ 相结合/ 共同/ 构成/ 基于/ 双/ 仲裁/ 策略/ 的/ 时间/ 片/ 调度/ 模型/ ./ 算法/ 的/ 执行/ 过程/ 依赖于/ 双/ 仲裁/ 时间/ 片/ 调度/ 模式图/ ./ 下面/ 首先/ 对/ 双/ 仲裁/ 调度/ 模式图/ 的/ 构建/ 和/ 相关/ 概念/ 进行/ 介绍/ ,/ 然后/ 详细/ 介绍/ DATS/ 算法/ ./ 调度/ 算法/ 的/ 设计/ 基于/ 以下/ 5/ 点/ 假设/ :/ (/ 1/ )/ 经过/ 划分/ 后/ 的/ 硬件/ 任务/ 属性/ 集合/ 为/ {/ w/ ,/ h/ ,/ ta/ ,/ ts/ ,/ te/ ,/ p/ ,/ s/ }/ ,/ 其中/ ,/ w/ 、/ h/ 分别/ 为/ 任务/ 所/ 需/ 矩形/ 区域/ 的/ 宽/ 和/ 高/ ,/ 矩形/ 区域/ 由/ 若干/ 可/ 重构/ 计算/ 单元/ (/ RCU/ )/ 组成/ ./ ta/ 表示/ 任务/ 的/ 最早/ 启动/ 时刻/ ,/ ts/ 表示/ 任务/ 最/ 晚/ 启动/ 时刻/ ,/ te/ 为/ 任务/ 的/ 执行/ 时间/ ,/ p/ 为/ 任务/ 的/ 优先级/ ,/ s/ 为/ 任务/ 所处/ 的/ 状态/ ./ (/ 2/ )/ 调度/ 与/ 布局/ 算法/ 建立/ 在/ 软硬件/ 任务/ 划分/ 方法/ 基础/ 上/ ,/ 但/ 对/ 具体/ 的/ 划分算法/ 不/ 产生/ 依赖/ ,/ 划分算法/ 只要/ 能够/ 产生/ 满足/ (/ 1/ )/ 中/ 调度/ 与/ 布局/ 输入/ 任务/ 集/ 属性/ 要求/ 即可/ ,/ 任务/ 执行/ 时/ 只/ 需/ 在/ 合适/ 的/ 时间/ 将/ 配置/ 信息/ 装载/ 到/ 可编程/ 逻辑/ 器件/ 上/ ./ (/ 3/ )/ 调度/ 算法/ 只/ 考虑/ 硬件/ 任务/ 何时/ 开始/ 执行/ 以及/ 何时/ 结束/ ,/ 不/ 考虑/ 软硬件/ 通信/ 耗时/ 问题/ ,/ 软硬件/ 通信/ 耗时/ 由/ 软硬件/ 划分算法/ 考虑/ ./ 算法/ 涉及/ 的/ 一些/ 符号/ 和/ 概念/ 定义/ 如下/ ./ 定义/ 1/ ./ 时间/ 片/ (/ Time/ -/ Slice/ )/ 和/ 关键帧/ (/ Key/ -/ (/ 4/ )/ 2D/ 可/ 重构/ 资源/ 模型/ 下/ 的/ 任务/ 抽象/ 为/ 不可/ 旋转/ 和/ 平移/ 的/ 矩形/ 区域/ ,/ 不/ 考虑/ 任务/ 间/ 互连/ 导线/ 占用/ 的/ 空间/ 开销/ ./ (/ 5/ )/ 同一/ 启动/ 时间/ 的/ 任务/ 在/ 布局/ 时有/ 先后/ 差别/ ,/ 但/ 延时/ 为/ 零/ ,/ 即/ 同时/ 启动/ 执行/ 的/ 任务/ ,/ 一个/ 任务/ 首先/ 分配资源/ ,/ 同时/ 另/ 一个/ 任务/ 也/ 分配资源/ ,/ 两次/ 分配/ 有/ 先后/ 之分/ ,/ 但是/ 在/ 时间/ 上/ 认为/ 是/ 同一/ 时刻/ 进行/ 资源分配/ ./ 3.1/ 双/ 仲裁/ 时间/ 片/ 调度/ 模式图/ 双/ 仲裁/ 时间/ 片/ 调度/ 模式图/ 由/ 三/ 部分/ 组成/ ,/ 分别/ 是/ 时间/ 片/ 模式/ 子图/ ,/ B/ -/ Arbiter/ 仲裁/ 记录/ 模式/ 子图/ 和/ P/ -/ Arbiter/ 记录/ 模式/ 子图/ ./ 如图/ 4/ 所示/ ,/ 时间/ 片/ 模式/ 子图/ 由/ 水平/ 方向/ 的/ 两条/ 时间轴/ 和/ 垂直/ 方向/ 若干/ 关键帧/ 组成/ ,/ 其中/ 一条/ 时间轴/ 是/ 开始/ 时间轴/ ,/ 用来/ 标记/ 任务/ 的/ 启动/ 执行/ 时间/ ;/ 另/ 一条/ 时间轴/ 是/ 结束/ 时间轴/ ,/ 用来/ 标记/ 任务/ 的/ 结束/ 退出/ 时间/ ,/ 关键帧/ 上/ 有/ 任务/ 起始/ 队列/ 和/ 任务/ 终止/ 队列/ ,/ 分别/ 表示/ 同一/ 时刻/ 任务/ 启动/ 执行/ 的/ 顺序/ 和/ 任务/ 结束/ 退出/ 的/ 顺序/ ./ B/ -/ Arbiter/ 仲裁/ 记录/ 模式/ 子图/ 由/ X/ -/ D/ 和/ Y/ -/ D/ 两项/ 记录/ 组成/ ,/ 每/ 项/ 记录/ 由/ 一条/ 时间轴/ 和/ 对应/ 关键帧/ 的/ 动态变化/ 任务/ 边界值/ 组成/ ./ P/ -/ Arbiter/ 记录/ 模式/ 子图/ 由/ 对应/ 关键帧/ 的/ 一组/ 任务/ 位置/ 信息/ 节点/ 组成/ ,/ 每个/ 节点/ 除了/ 记录/ 任务/ 的/ 编号/ 外/ ,/ 还/ 记录/ 了/ 任务/ 在/ 二维/ 器件/ 中/ 执行/ 时/ 的/ 位置/ ,/ 这些/ 节点/ 信息/ 会/ 随着/ 任务/ 状态/ 的/ 改变/ 动态/ 添加/ 或/ 删除/ ./ Page6/ 图/ 4/ 双/ 仲裁/ 时间/ 片/ 调度/ 模式图/ Frame/ ,/ KF/ )/ ./ DATS/ 算法/ 中/ 时间/ 片/ 是/ 硬件/ 任务/ 执行/ 所/ 需/ 的/ 最小/ 时间/ 单位/ ,/ 一个/ 时间/ 片/ 的/ 大小/ 叫/ 间隔/ (/ interval/ )/ ,/ 任何/ 一个/ 任务/ 执行/ 时间/ 必须/ 是/ 时间/ 片/ 的/ 整数倍/ ./ 时间/ 片/ 的/ 大小/ 通过/ 任务/ 起止/ 时间/ 归整/ 获得/ ./ 关键帧/ 是/ 两个/ 时间/ 片/ 相邻/ 的/ 时刻/ 点/ ,/ 硬件/ 任务/ 的/ 启动/ 和/ 结束/ 必须/ 在/ 关键帧/ 处/ 完成/ ./ 图/ 4/ 中/ 关键帧/ 用/ 虚线/ 表示/ ,/ 并/ 在/ 最/ 上方/ 用/ 数字/ 标注/ ./ 定义/ 2/ ./ 任务/ 起止/ 时间/ 归整/ ./ 通常/ 研究/ 中/ ,/ 一个/ 可/ 重构/ 硬件/ 任务/ 被/ 定义/ 为/ 犜/ (/ w/ ,/ h/ ,/ ta/ ,/ ts/ ,/ te/ ,/ p/ ,/ s/ )/ ,/ 满足条件/ ts/ >/ ta/ ./ 本文/ 引入/ Δ/ t/ ,/ 且/ 令/ Δ/ t/ =/ ts/ -/ ta/ ,/ Δ/ t/ 称作/ 任务/ 启动/ 松弛/ 时间/ ,/ 任务/ 执行/ 结束/ 时间/ tend/ =/ ta/ +/ te/ ,/ 各/ 时间/ 的/ 关系/ 如图/ 5/ 所示/ ./ DATS/ 算法/ 要求/ 任务/ 的/ 启动/ 和/ 结束/ 必须/ 是/ 在/ 关键帧/ 处/ 完成/ ,/ 所以/ 必须/ 对/ 任务/ 的/ 开始/ 执行/ 时刻/ 以及/ 执行/ 时间/ 做/ 归整/ 处理/ ,/ 解决/ 该/ 问题/ 时间/ 片/ 间隔/ 值/ interval/ 的/ 选取/ 十分/ 重要/ ./ 记/ IN/ =/ {/ 0/ ,/ 1/ ,/ 2/ ,/ …/ ,/ N/ }/ ,/ N/ 为/ 调度/ 任务/ 总数/ ;/ tcycle/ 为/ 初始/ 设置/ 的/ 任务/ 执行/ 最小/ 时间/ 单位/ ,/ 设置/ 为/ FPGA/ 芯片/ 的/ 一个/ 时钟/ 周期/ ;/ 若/ / i/ ,/ i/ ∈/ IN/ ,/ tcycle/ / Ti/ ./ Δ/ t/ / Ti/ ./ te/ ,/ 则/ interval/ =/ min/ {/ Ti/ ./ Δ/ t/ |/ i/ ∈/ IN/ }/ ;/ 若/ / i/ ,/ i/ ∈/ IN/ ,/ Ti/ ./ Δ/ t/ </ tcycle/ ∩/ Ti/ ./ te/ </ tcycle/ ,/ 则/ interval/ =/ tcycle/ ;/ 否则/ ,/ 取/ interval/ =/ min/ {/ min/ {/ Ti/ ./ te/ |/ i/ ∈/ IN/ }/ ,/ min/ {/ Ti/ ./ Δ/ t/ |/ i/ ∈/ IN/ }/ }/ ./ 经过/ 归整/ 处理/ ,/ 任何/ 一个/ 具有/ 启动/ 松弛/ 时间/ 的/ 任务/ 都/ 可以/ 在/ 归整/ 时/ 保证/ 开始/ 执行/ 时刻/ 落/ 在/ 关键帧/ 处/ ,/ 而且/ 执行/ 时间/ 也/ 可以/ 归整/ 为/ 间隔/ 的/ 整数/ λ/ 倍/ ./ 在/ 精度/ 允许/ 范围/ 内/ ,/ 间隔/ interval/ 值/ 也/ 可以/ 选取/ 更/ 小/ 的/ 值/ ,/ 在/ DATS/ 算法/ 中/ interval/ 值会/ 影响/ 执行/ 时间/ 所/ 占/ 的/ 间隔/ 数/ λ/ ,/ 由于/ interval/ 值/ 选取/ 的/ 是/ 所有/ 被/ 调度/ 任务/ 中/ 启动/ 松弛/ 时间/ 或/ 执行/ 时间/ 的/ 最小值/ ,/ 任务/ 时间/ 参数/ 做/ 归整/ 时/ 不/ 一定/ 刚好/ 取/ 到/ 一个/ 整数/ ,/ 所以/ 随着/ interval/ 值/ 的/ 改变/ ,/ λ/ 值会/ 发生变化/ ,/ 对/ 调度/ 效果/ 也/ 会/ 产生/ 一定/ 影响/ ,/ 但/ 通过/ 计算/ 可知/ 这种/ 影响/ 是/ 微乎其微/ 的/ ,/ 原因/ 在于/ interval/ 取值/ 变小/ ,/ λ/ 取值/ 会/ 变大/ ,/ 但是/ 任务/ 的/ 启动/ 松弛/ 时间/ 和/ 执行/ 时间/ 基本/ 不会/ 改变/ ./ 定义/ 3/ ./ 任务/ 起始/ 点/ 和/ 任务/ 终止/ 点/ ./ 在/ 双/ 仲裁/ 时间/ 片/ 调度/ 模式图/ 中/ (/ 图/ 4/ 所示/ )/ 用/ 空心/ 小圆圈/ 表示/ 任务/ 起始/ 点/ ,/ 在/ 有/ 任务/ 加载/ 的/ 关键帧/ 处/ ,/ 各个/ 任务/ 起始/ 点/ 按照/ 从上到下/ 的/ 顺序排列/ ,/ 这个/ 排列/ 顺序/ 称作/ 任务/ 起始/ 队列/ ,/ 它/ 代表/ 了/ 任务/ 被/ 分配资源/ 后/ 在/ 可/ 重构/ 器件/ 中/ 布局/ 的/ 先后/ 次序/ ./ 在/ 双/ 仲裁/ 时间/ 片/ 调度/ 模式图/ 中/ (/ 图/ 4/ 所示/ )/ 用/ 实心/ 小圆圈/ 表示/ 任务/ 终止/ 点/ ,/ 在/ 有/ 任务/ 执行/ 结束/ 的/ 关键帧/ 处/ ,/ 各个/ 任务/ 终止/ 点/ 按照/ 从上到下/ 的/ 顺序排列/ ,/ 这个/ 排列/ 顺序/ 称作/ 任务/ 终/ Page7/ 止/ 队列/ ,/ 它/ 代表/ 了/ 任务/ 在/ 可/ 重构/ 器件/ 中/ 执行/ 结束/ 并/ 释放/ 资源/ 的/ 次序/ ./ 定义/ 4/ ./ 双/ 仲裁/ 器/ ./ 双/ 仲裁/ 器/ 包括/ 位置/ 仲裁/ 器/ (/ PositionArbiter/ )/ 和/ 边界/ 仲裁/ 器/ (/ BoundaryArbiter/ )/ ,/ 分别/ 记作/ P/ -/ Arbiter/ 和/ B/ -/ Arbiter/ ./ 双/ 仲裁/ 器/ 不是/ 硬件/ 实体/ ,/ 而是/ 算法/ 中/ 的/ 角色/ ,/ 其/ 作用/ 类似/ 于/ 篮球比赛/ 中/ 的/ 主裁/ 和/ 边裁/ ,/ 两个/ 仲裁/ 器均/ 在/ 关键帧/ 处/ 对/ 发生/ 的/ 事件/ 进行/ 记录/ ,/ 实现/ 对/ 硬件/ 任务/ 的/ 调度/ 和/ 布局/ ./ B/ -/ Arbiter/ 记录/ 共/ 包括/ X/ -/ D/ 和/ Y/ -/ D/ 两项/ ,/ 用于/ 记录/ 任务/ 边界/ 的/ 变化/ 情况/ ,/ 以/ X/ -/ D/ 为例/ ,/ 在/ 关键帧/ 处/ ,/ 每当/ 有/ 任务/ 启动/ 执行/ ,/ 并/ 占用/ 二维/ 器件/ 空间/ 时/ ,/ 该/ 任务/ 在/ X/ 维/ 方向/ 产生/ 的/ 新右/ 边界/ 就/ 被/ 记录下来/ ,/ 同样/ ,/ 每当/ 有/ 任务/ 结束/ 退出/ ,/ 并/ 释放/ 二维/ 空间/ 时/ ,/ 所/ 释放/ 任务/ 在/ X/ 维/ 方向/ 的/ 右/ 边界/ 就要/ 从/ 记录/ 中/ 删除/ ,/ 不/ 对/ 左/ 边界/ 作/ 记录/ 是因为/ DATS/ 算法/ 决定/ 了/ 任务/ 每次/ 放置/ 必须/ 是/ 紧贴/ 正在/ 执行/ 任务/ 的/ 右/ 边界/ ,/ 这些/ 边界/ 在/ 之前/ 均/ 已经/ 记录/ ./ 在/ X/ -/ D/ 和/ Y/ -/ D/ 记录/ 中/ ,/ 设置/ 有/ X/ -/ top/ 和/ Y/ -/ top/ 两个/ 指示/ ,/ 它们/ 在/ 任务/ 放置/ 方向/ 决策/ 时/ ,/ 与/ 二维/ 器件/ 规模/ W/ (/ 宽度/ )/ 和/ H/ (/ 高度/ )/ 参数/ 一起/ 为/ 放置/ 决策/ 提供/ 依据/ ,/ 结合/ 图/ 3/ 可知/ ,/ 对/ X/ -/ top/ 和/ Y/ -/ top/ 的/ 灵活/ 使用/ 可以/ 避免/ 任务/ 冲突/ ,/ 减少/ 搜索/ 次数/ ,/ 提高/ 任务调度/ 成功率/ ,/ 甚至/ 可以/ 均衡/ 器件/ 区域/ 的/ 使用/ 频度/ ,/ 避免/ 一个/ 局部/ 区域/ 不断/ 被/ 高频/ 次/ 编程/ 使用/ 而/ 导致/ 可/ 重构/ 器件/ 损坏/ ./ DATS/ 算法/ 中/ X/ -/ top/ 和/ Y/ -/ top/ 的/ 确定/ 原则/ 如下/ :/ (/ 1/ )/ X/ -/ top/ 取值/ 为/ X/ -/ D/ 记录/ 中除/ 器件/ 边界值/ W/ 和/ 所有/ 失败/ 指示/ 边界值/ 后/ 的/ 最大值/ ./ (/ 2/ )/ Y/ -/ top/ 取值/ 为/ Y/ -/ D/ 记录/ 中除/ 器件/ 边界值/ H/ 和/ 所有/ 失败/ 指示/ 边界值/ 后/ 的/ 最大值/ ./ 其中/ W/ 、/ H/ 为/ 二维/ 逻辑/ 器件/ 的/ 边界值/ ,/ 失败/ 指示/ 边界值/ 指/ X/ -/ top/ 或/ Y/ -/ top/ 不/ 能够/ 成功/ 指示/ 任务/ 放置/ 位置/ 的/ 边界/ 取值/ ./ DATS/ 放置/ 方向/ 决策函数/ 如式/ (/ 1/ )/ 所示/ ./ decisionV/ (/ X/ -/ top/ ,/ Y/ -/ top/ )/ 1/ ,/ X/ -/ top/ 采用/ 常规/ 算法/ 进行/ 任务/ 布局/ 时会/ 得到/ 多个/ 可/ 放置/ 位置/ ,/ 而且/ 会/ 造成/ 资源/ 冲突/ ,/ 影响/ 调度/ 成功率/ ,/ 为/ 解决/ 这一/ 问题/ 本文/ 引入/ 了/ 放置/ 方向/ 决策函数/ 来/ 对/ 任务/ 优先/ 沿/ X/ 轴/ 方向/ 放置/ 还是/ 沿/ Y/ 轴/ 方向/ 放置/ 进行/ 决策/ ./ decisionV/ 函数/ 取值/ 为/ 1/ 时/ 表示/ 沿/ X/ 轴/ 方向/ 放置/ ,/ 取值/ 为/ 0/ 时/ 表示/ 沿/ Y/ 轴/ 方向/ 放置/ ,/ 该/ 函数/ 充分利用/ X/ -/ top/ 和/ Y/ -/ top/ 指示/ 任务/ 布局/ 位置/ ,/ 在/ 器件/ 规模/ 有限/ 的/ 情况/ 下/ ,/ 可以/ 降低/ 任务/ 冲突/ 概率/ ,/ 节约/ 搜索/ 时间/ ,/ 提高/ 调度/ 成功率/ ./ P/ -/ Arbiter/ 用来/ 记录/ 每个/ 正在/ 执行/ 的/ 任务/ 在/ 二维/ 器件/ 中/ 的/ 放置/ 位置/ ,/ 任务/ 位置/ 由/ 矩形/ 的/ 左下角/ 和/ 右上角/ 两个/ 坐标/ 点来/ 确定/ ,/ 每当/ 有/ 任务/ 进入/ 执行/ ,/ P/ -/ Arbiter/ 就/ 在/ 记录/ 中/ 增加/ 一项/ 位置/ 记录/ ,/ 每当/ 有/ 任务/ 执行/ 结束/ 退出/ 时/ ,/ 就/ 从/ 记录/ 中/ 删除/ 相应/ 的/ 位置/ 记录/ ./ 双/ 仲裁/ 器/ 与/ 时间/ 片/ 的/ 配合/ 使用/ 可以/ 实现/ 对/ 任务/ 的/ 实时/ 调度/ ./ 定义/ 5/ ./ 任务/ 状态/ 与/ 任务/ 优先级/ ./ 任务/ 状态/ 是/ 任务/ 的/ 属性/ 之一/ ,/ 用/ S/ 表示/ ,/ 任务/ 状态/ 集/ 为/ 其中/ ,/ IDLE/ 表示/ 任务/ 处于/ 未/ 调度/ 空闲/ 状态/ ,/ EXE/ 表示/ 任务/ 处于/ 执行/ 状态/ ,/ WAIT/ 表示/ 任务/ 被/ 调度/ 后/ 布局/ 失败/ 处于/ 重新/ 等待/ 状态/ ,/ FIN/ 表示/ 任务/ 被/ 调度/ 后/ 成功/ 布局/ 处于/ 执行/ 完毕/ 状态/ ./ 在/ 程序实现/ 时/ ,/ 使用/ 枚举/ 类型定义/ 任务/ 状态/ 集合/ ,/ IDLE/ 、/ EXE/ 、/ WAIT/ 和/ FIN/ 分别/ 对应/ 整数/ 值/ 0/ 、/ 1/ 、/ 2/ 和/ 3/ ./ 任务/ 优先级/ 也/ 是/ 任务/ 的/ 属性/ 之一/ ,/ 在/ 软硬件/ 划分/ 阶段/ 确定/ ,/ 基本/ 方法/ 是/ 在/ 生成/ 任务/ 集时/ 按照/ 优先级/ 进行/ 拓扑/ 排序/ 并/ 编号/ ,/ 值越/ 小/ 的/ 任务/ 优先级/ 越高/ ./ 双/ 仲裁/ 时间/ 片/ 策略/ 下/ 的/ 抢夺/ 式调度/ 是/ 指/ 在/ 同一/ 关键帧/ 任务/ 起始/ 队列/ 中/ ,/ 高/ 优先级/ 的/ 任务/ 可以/ 排/ 在/ 低优先级/ 任务/ 之前/ 优先/ 布局/ ,/ 同/ 优先级/ 的/ 任务/ 按照/ 调度/ 队列/ 编号/ 顺序/ 进行/ 布局/ ./ 3.2/ 任务/ 的/ 优先级/ 和/ 状态/ 转换/ 任务调度/ 存在/ 两种/ 情形/ :/ 一是/ 有/ 串行/ 关系/ 的/ 任务/ ,/ 按照/ 先到/ 先/ 处理/ 的/ 原则/ 处理/ ,/ 在/ 算法/ 中/ 用/ 任务/ 编号/ 进行/ 区别/ ,/ 编号/ 小/ 的/ 比/ 编号/ 大/ 的/ 优先/ 处理/ ;/ 另/ 一种/ 是/ 有/ 并行/ 关系/ 的/ 任务/ ,/ 如图/ 2/ 所示/ 的/ 任务/ HT1/ 和/ HT2/ ,/ 二者/ 不/ 存在/ 直接/ 的/ 串行/ 制约/ 关系/ 但是/ 在/ 布局/ 分配资源/ 时/ ,/ 需要/ 根据/ 任务/ 的/ 紧急/ 程度/ 或/ 时间/ 松弛/ 限制/ 赋予/ 高/ 优先级/ ,/ 这样/ ,/ 在/ DATS/ 算法/ 所/ 定义/ 的/ 关键帧/ 处/ ,/ 高/ 优先级/ 的/ 任务/ 在/ 调度/ 排序/ 时/ 可以/ 剥夺/ 低优先级/ 小/ 编号/ 任务调度/ 权而/ 被/ 优先/ 放置/ ,/ 这样/ 有利于/ 任务/ 的/ 成功/ 放置/ ./ 在/ DATS/ 算法/ 中/ ,/ 如/ 定义/ 5/ 所示/ ,/ 可/ 重构/ 系统/ 任务调度/ 共/ 涉及/ 4/ 种/ 状态/ ,/ 分别/ 是/ IDLE/ 、/ EXE/ 、/ WAIT/ 和/ FIN/ ,/ 任务/ 状态/ 转换/ 图如图/ 6/ 所示/ ./ Page8/ 结合/ 图/ 1/ 所示/ 硬件/ 任务调度/ 与/ 布局/ 模型/ 可知/ ,/ 若干/ 任务/ 到达/ 后/ ,/ 形成/ 处于/ IDLE/ 状态/ 的/ 未/ 调度/ 队列/ ,/ 调度/ 器/ 通过/ 调度/ 算法/ 对/ 任务/ 进行/ 调度/ ,/ 调度/ 算法/ 与/ 布局/ 算法/ 必须/ 协调/ 工作/ ,/ 被/ 调度/ 的/ 任务/ 只有/ 在/ 可/ 重构/ 硬件/ 中/ 布局/ 成功/ 才/ 能够/ 算作/ 成功/ 调度/ ,/ 否则/ 为/ 失败/ 调度/ ./ 处于/ IDLE/ 状态/ 的/ 任务/ 被/ 调度/ 后/ 若/ 布局/ 成功/ 则/ 转入/ EXE/ 状态/ ,/ 在/ 可/ 重构/ 硬件/ 中/ 执行/ ;/ 若/ 布局/ 失败/ ,/ 则/ 失败/ 的/ 任务/ 转入/ WAIT/ 状态/ ;/ 当/ 终止/ 时间/ 到达/ 时/ ,/ 处于/ EXE/ 状态/ 的/ 任务/ 执行/ 完成/ 转入/ FIN/ 状态/ ./ 一般/ 有/ 两种/ 情况/ 会/ 导致/ 任务/ 布局/ 失败/ ,/ 一种/ 是/ 同一/ 时刻/ 布局/ 任务/ 较/ 多/ 导致/ 资源/ 不足/ ,/ 一种/ 是/ 资源/ 充足/ 但是/ 较为/ 分散/ 未/ 形成/ 可/ 容纳/ 矩形/ 任务/ 的/ 资源/ 区域/ ,/ 通过/ 任务/ 重/ 定位/ 后/ ,/ 任务/ 仍然/ 可以/ 成功/ 布局/ ,/ 因此/ 处于/ WAIT/ 状态/ 的/ 任务/ 经过/ 重/ 定位/ 或/ 延迟/ 后/ 在/ 调度/ 可以/ 转入/ EXE/ 状态/ ,/ 继而/ 转入/ FIN/ 状态/ 完成/ 执行/ ./ 最/ 简单/ 的/ 重/ 定位/ 方法/ 就是/ 将/ 失败/ 调度/ 的/ 任务/ 重新/ 排队/ 等待/ 调度/ ,/ 如此/ 反复/ ,/ 直到/ 所有/ 任务调度/ 完毕/ ./ 3.3/ 任务调度/ 指标/ (/ 1/ )/ 器件/ 负载/ 率/ ./ 器件/ 负载/ 率/ 指要/ 加载/ 到/ 器件/ 的/ 所有/ 任务/ 所/ 需/ 空间/ 资源/ 总量/ 与/ 器件/ 可/ 提供/ 资源量/ 的/ 比值/ ,/ 其/ 计算公式/ 如式/ (/ 2/ )/ ./ 其中/ wi/ 、/ hi/ 分别/ 表示/ 任务/ Ti/ 占据/ 矩形/ 资源化/ 区域/ 的/ 宽/ 和/ 高/ ,/ W/ 和/ H/ 表示/ 二维/ 逻辑/ 器件/ 的/ 宽/ 和/ 高/ ./ 与/ 1D/ 资源/ 模型/ 不同/ ,/ 后者/ 因为/ 扩展/ 使用/ 了/ 时间/ 维度/ ,/ 器件/ 负载/ 率/ 的/ 定义/ 通常/ 与/ 任务/ 执行/ 时间/ 有关/ ,/ 其本质/ 都/ 是/ 二维/ 坐标/ 下/ 器件/ 的/ 负载/ 情况/ 的/ 反映/ ./ (/ 2/ )/ 调度/ 成功率/ ./ 任务调度/ 成功率/ 指/ 成功/ 调度/ 的/ 任务/ 与/ 被/ 调度/ 到达/ 器件/ 的/ 任务/ 总数/ 之/ 比/ ,/ 计算公式/ 如式/ (/ 3/ )/ ./ 其中/ ,/ K/ 为/ 任务调度/ 成功率/ ,/ SucN/ 表示/ 被/ 成功/ 调度/ 的/ 任务/ 数目/ ,/ num/ 表示/ 被/ 调度/ 的/ 任务/ 总/ 数目/ ./ (/ 3/ )/ 资源/ 利用率/ ./ 在/ 处理/ 1D/ 可/ 重构/ 器件/ 模型/ 的/ 布局/ 问题/ 时/ ,/ 引入/ 时间/ 维/ 作为/ 纵/ 坐标轴/ ,/ 而/ 过去/ 的/ 时间/ 是/ 不可/ 利用/ 的/ ,/ 因此/ 资源/ 利用率/ 作为/ 衡量/ 指标/ 显得/ 格外/ 重要/ ,/ 而/ 在/ 2D/ 可/ 重构/ 器件/ 模型/ 下/ ,/ 布局/ 算法/ 不再/ 引入/ 时间/ 作为/ 坐标轴/ 即/ 空间/ 可/ 被/ 重复/ 利用/ ,/ 因此/ 资源/ 利用率/ 的/ 重要性/ 降低/ ,/ 但是/ 单位/ 时间/ 内/ 资源/ 利用/ 情况/ 可以/ 反映/ 任务/ 并行执行/ 潜能/ ,/ 因此/ 仍/ 具有/ 指导意义/ ./ 资源/ 利用率/ 指在/ 一段时间/ 内/ ,/ 可/ 重构/ 逻辑/ 器件/ 上/ 被/ 占用/ 的/ 计算资源/ 面积/ 与/ 器件/ 总面积/ 比例/ 的/ 平均值/ ./ 单位/ 时间/ 内/ 资源/ 利用率/ 计算公式/ 如式/ (/ 4/ )/ 所示/ ./ 其中/ ,/ m/ 为/ 在/ 每/ 一时间/ 片内/ ,/ 位置/ 仲裁/ 器中/ 所/ 记录/ 的/ 正在/ 执行/ 的/ 硬件/ 任务/ 的/ 数目/ ./ 3.4/ 约束条件/ 本/ 的/ 时间/ 和/ 空间/ 约束条件/ ,/ 定义/ 如下/ :/ 在/ 任务调度/ 和/ 任务/ 布局/ 的/ 过程/ 中/ ,/ 必须/ 满足/ 基/ (/ 1/ )/ 时间/ 约束/ ./ 调度/ 任务/ 集/ χ/ =/ {/ T1/ ,/ T2/ ,/ …/ ,/ TN/ }/ 中/ ,/ 每个/ 任务/ 均/ 具有/ 时间/ 属性/ {/ ta/ ,/ ts/ ,/ te/ }/ ,/ 这些/ 时间/ 属性/ 在/ 时间/ 坐标轴/ 上/ 的/ 位置/ 被/ 限制/ 在/ 一定/ 区间/ 或/ 固定/ 时刻/ 点处/ ,/ 约束条件/ 如式/ (/ 5/ )/ 所示/ ./ / i/ ,/ 1/ / i/ ,/ j/ / N/ ,/ Ti/ ,/ Tj/ ∈/ χ/ ,/ Ti/ ./ ts/ +/ Ti/ ./ te/ / Tj/ ./ ts/ ∪/ Tj/ ./ ts/ +/ Tj/ ./ te/ / Ti/ ./ ts/ (/ 5/ )/ (/ 2/ )/ 空间/ 约束/ ./ 基本/ 的/ 空间/ 约束条件/ 包括/ 任务/ 不/ 重叠/ 约束/ 和/ 资源/ 边界/ 约束/ ,/ 如式/ (/ 6/ )/ 和/ 式/ (/ 7/ )/ 所示/ ./ ①/ 任务/ 不/ 重叠/ 约束/ ./ 假设/ 任务/ Ti/ 所/ 占据/ 的/ 矩形/ 空间/ 位置/ 用/ 矩形/ 的/ 左下角/ 坐标/ (/ Ti/ ./ x1/ ,/ Ti/ ./ y1/ )/ 和/ 右上角/ 坐标/ (/ Ti/ ./ x2/ ,/ Ti/ ./ y2/ )/ 唯一/ 确定/ ./ 器件/ 中/ 处于/ 执行/ 状态/ 的/ 任务/ 集/ 为/ {/ T1/ ,/ T2/ ,/ …/ ,/ Tk/ }/ ,/ 待/ 放置/ 任务/ 为/ Tj/ ,/ 则/ 任务/ 不/ 重叠/ 约束条件/ 如式/ (/ 6/ )/ 所示/ ./ / i/ ,/ 1/ / i/ / k/ ,/ Ti/ ./ x1/ / Tj/ ./ x2/ ∪/ Tj/ ./ x1/ / Ti/ ./ x2/ ∪/ ②/ 资源/ 边界/ 约束/ ./ 假设/ 二维/ 逻辑/ 器件/ 规模/ 为/ W/ ×/ H/ ,/ 待/ 放置/ 任务/ 为/ Tj/ ,/ 则/ 资源/ 边界/ 约束条件/ 如式/ (/ 7/ )/ 所示/ ./ T/ 犼/ ./ x1/ / 0/ ∩/ Tj/ ./ y1/ / 0/ ∩/ Tj/ ./ y2/ / H/ ∩/ Tj/ ./ x2/ / W3/ ./ 5/ 算法/ 描述/ 在/ 软硬件/ 划分/ 阶段/ 任务/ 起止/ 时间/ 均/ 为/ 浮点数/ ,/ DATS/ 算法/ 实现/ 时/ 需要/ 指定/ 时间/ 递增/ 步长/ 最小/ 单位/ ,/ 因此/ 在/ 对/ 任务调度/ 前/ 需要/ 完成/ 任务/ 起止/ 时间/ 归整/ 处理/ ./ DATS/ 算法/ 包括/ 调度/ 算法/ 和/ 布局/ 算法/ 两/ 部分/ ,/ 下面/ 对/ DATS/ 算法/ 进行/ 详细描述/ ./ (/ 1/ )/ 任务/ 起止/ 时间/ 归整/ 给定/ 一组/ 硬件/ 任务/ 集/ HT/ =/ {/ HT1/ ,/ HT2/ ,/ …/ ,/ HTN/ }/ ,/ 且/ 每个/ 任务/ HTi/ 均/ 可/ 表示/ 为/ 向量/ (/ w/ ,/ h/ ,/ ta/ ,/ ts/ ,/ te/ ,/ p/ ,/ s/ )/ ,/ 其中/ w/ 、/ h/ 分别/ 为/ 任务/ 所/ 需/ 矩形/ 区域/ 的/ 宽/ 和/ 高/ ,/ 矩形/ 区域/ 由/ 若干个/ 可/ 重构/ 计算/ 单元/ (/ RCU/ )/ 组成/ ./ ta/ 表示/ 任务/ 的/ 最早/ 启动/ 时间/ ,/ ts/ 表示/ 任务/ 的/ 最晚/ 启动/ 时间/ ,/ te/ 为/ 任务/ 的/ 执行/ 时间/ ,/ p/ 为/ 任务/ 的/ 优先/ Page9/ 级/ ,/ s/ 为/ 任务/ 所处/ 的/ 状态/ ./ 任务/ 起止/ 时间/ 归整/ 算法/ Timeinteger/ 描述/ 见/ 算法/ 1/ ./ 算法/ 1/ ./ Timeinteger/ (/ HT/ )/ 1/ ./ interval/ ←/ 0/ ;/ tmin2/ ./ foralli/ ∈/ INwithIN/ =/ {/ 2/ ,/ …/ ,/ N/ }/ do3/ ./ HTi/ ./ Δ/ t/ ←/ HTi/ ./ ts/ -/ HTi/ ./ ta/ ;/ 4/ ./ if/ (/ HTi/ ./ Δ/ t/ </ Δ/ tmin/ )/ then5/ ./ Δ/ tmin/ ←/ HTi/ ./ Δ/ t/ ;/ 6/ ./ endif7/ ./ endfor8/ ./ foralli/ ∈/ INwithIN/ =/ {/ 2/ ,/ …/ ,/ N/ }/ do9/ ./ if/ (/ HTi/ ./ te/ </ tmin10/ ./ tmin11/ ./ endif12/ ./ endfor13/ ./ interval/ ←/ min/ {/ tmin14/ ./ if/ (/ interval/ </ tcycle/ )/ then15/ ./ interval/ =/ tcycle/ ;/ 图/ 7Timeinteger/ 算法/ 流程/ 归整/ 处理/ 根据/ 单次/ 调度/ 任务/ 集中/ 各/ 任务/ 的/ 启动/ 松弛/ 时间/ 和/ 执行/ 时间/ ,/ 从/ 全局/ 的/ 角度/ 来/ 对/ 每个/ 任务/ 的/ 开始/ 和/ 执行/ 时间/ 进行/ 归整/ ,/ 从/ Timeinteger/ 伪代/ 16/ ./ endif17/ ./ foralli/ ∈/ {/ 1/ ,/ 2/ ,/ …/ ,/ N/ }/ do18/ ./ Ti/ ./ ta/ ←/ HTi/ ./ ta/ // interval/ ;/ Ti/ ./ ts/ ←/ HTi/ ./ ts/ // interval/ ;/ 19/ ./ Ti/ ./ w/ ←/ HTi/ ./ w/ ;/ Ti/ ./ h/ ←/ HTi/ ./ h/ ;/ Ti/ ./ p/ ←/ HTi/ ./ p/ ;/ 20/ ./ endfor21/ ./ returnT/ ;/ 在/ Timeinteger/ 算法/ 中/ ,/ 第/ 1/ 步/ :/ 初始化/ 各/ 变量/ 参数/ ,/ 第/ 2/ 步/ :/ 求取/ 任务/ 松弛/ 时间/ 最小值/ (/ 第/ 1/ 个/ for/ 循环/ )/ ,/ 第/ 3/ 步/ :/ 求取/ 任务/ 执行/ 时间/ 最小值/ (/ 第/ 2/ 个/ for/ 循环/ )/ ,/ 第/ 4/ 步/ :/ 求取/ interval/ 值/ ,/ 第/ 5/ 步/ :/ 生成/ 归整/ 后/ 任务/ 集/ T/ =/ {/ T1/ ,/ T2/ ,/ …/ ,/ TN/ }/ ,/ 且/ 每个/ 任务/ 均/ 具有/ 属性/ {/ w/ ,/ h/ ,/ ta/ ,/ ts/ ,/ te/ ,/ p/ ,/ s/ }/ ,/ ta/ 为/ 归整/ 后/ 任务/ 最早/ 启动/ 时间/ ,/ ts/ 为/ 归整/ 后/ 任务/ 最/ 晚/ 启动/ 时间/ ,/ te/ 为/ 归整/ 后/ 任务/ 的/ 执行/ 时间/ ,/ p/ 为/ 归整/ 后/ 任务/ 的/ 优先级/ ,/ s/ 为/ 归整/ 后/ 任务/ 所处/ 的/ 状态/ ,/ 其中/ p/ 和/ s/ 均/ 保持/ 原值/ ./ 算法/ 流程/ 如图/ 7/ 所示/ ./ 码/ 描述/ 易知/ ,/ 算法/ 时间/ 复杂度/ 为/ O/ (/ N/ )/ ./ (/ 2/ )/ 任务调度/ 算法/ 2/ 为/ 双/ 仲裁/ 时间/ 片/ 任务调度/ 算法/ 的/ 伪/ 代码/ Page10/ 描述/ ./ 算法/ 2/ ./ DATS/ _/ Scheduler/ (/ T/ )/ ./ 1/ ./ X/ -/ top/ ←/ 0/ ;/ Y/ -/ top/ ←/ 0/ ;/ t/ =/ 1/ ;/ Q/ ←/ NULL/ ;/ 2/ ./ B/ _/ arbiter/ [/ 0/ ]/ [/ 0/ ]/ ←/ 0/ ;/ B/ _/ arbiter/ [/ 0/ ]/ [/ 1/ ]/ ←/ 0/ ;/ 3/ ./ P/ _/ arbiter/ ←/ NULL/ ;/ tmaxend/ ←/ 0/ ;/ 4/ ./ foralliwith1/ / i/ </ taskNumdo5/ ./ B/ _/ arbiter/ [/ i/ ]/ [/ 0/ ]/ ←/ -/ 1/ ;/ B/ _/ arbiter/ [/ i/ ]/ [/ 1/ ]/ ←/ -/ 1/ ;/ 6/ ./ Ti/ ./ tend/ ←/ Ti/ ./ ts/ +/ Ti/ ./ te/ ;/ 7/ ./ if/ (/ Ti/ ./ tend/ >/ tmaxend/ )/ then8/ ./ tmaxend/ ←/ Ti/ ./ tend/ ;/ 9/ ./ endif10/ ./ endfor11/ ./ while1/ / t/ / tmaxenddo12/ ./ foralliwithTi/ ∈/ T/ ,/ 1/ / i/ </ taskNumdo13/ ./ if/ (/ (/ Ti/ ./ tend/ =/ t/ )/ and/ (/ Ti/ ./ s/ =/ EXE/ )/ )/ then14/ ./ deleteTiFromP/ _/ arbiter/ ;/ 15/ ./ B/ _/ arbiter/ [/ i/ ]/ [/ 0/ ]/ ←/ -/ 1/ ;/ B/ _/ arbiter/ [/ i/ ]/ [/ 1/ ]/ ←/ -/ 116/ ./ setX/ _/ top/ ;/ setY/ _/ top/ ;/ 17/ ./ endif18/ ./ endfor19/ ./ foralliwithTi/ ∈/ T/ ,/ 1/ / i/ </ taskNumdo20/ ./ if/ (/ (/ Ti/ ./ ta/ / t/ / Ti/ ./ ts/ )/ and21/ ./ enQueue/ (/ Q/ ,/ Ti/ )/ 22/ ./ SelectTjfromQwhereTi/ ./ pisthehighest23/ ./ if/ (/ P/ _/ arbiter/ =/ NULL/ )/ then24/ ./ if/ (/ Tj/ ./ w/ / MandTj/ ./ h/ / N/ )/ then25/ ./ tempP/ ./ taskid/ ←/ Tj/ ./ taskid/ ;/ 26/ ./ Tj/ ./ s/ ←/ EXE/ ;/ 27/ ./ B/ _/ arbiter/ [/ i/ +/ 1/ ]/ [/ 0/ ]/ ←/ Tj/ ./ w/ ;/ 28/ ./ setX/ _/ top/ ;/ setY/ _/ top/ ;/ 29/ ./ insertnodetempPintoP/ _/ arbiter/ ;/ 30/ ./ elseTj/ ./ s/ ←/ WAIT/ ;/ 31/ ./ endif32/ ./ else33/ ./ d/ =/ decisionBy/ (/ X/ -/ top/ ,/ Y/ -/ top/ )/ ;/ 34/ ./ DATS/ _/ place/ (/ Tj/ ,/ d/ )/ ;/ 35/ ./ endif36/ ./ endif37/ ./ endfor38/ ./ t/ ++/ ;/ 39/ ./ endwhile/ 在/ DATS/ _/ Scheduler/ 算法/ 中/ ,/ 第/ 1/ 步/ :/ 初始化/ 位置/ 仲裁/ 记录/ P/ _/ arbiter/ 和/ 边界/ 仲裁/ 记录/ B/ _/ arbiter/ 值/ ,/ P/ _/ arbiter/ 初始/ 为空/ ,/ B/ _/ arbiter/ 是/ 一个二维/ 数组/ ,/ 记录/ 执行/ 任务/ 产生/ 的/ 边界值/ ,/ 一维/ 下标/ 对应/ 任务/ 编号/ ,/ 二维/ 下/ 标值/ 为/ 0/ 和/ 1/ 时/ 记录/ 任务/ 产生/ 的/ 上/ 边界/ 和/ 右/ 边界/ ,/ 初始/ 无/ 任务/ 执行/ ,/ 边界/ 指向/ (/ 0/ ,/ 0/ )/ 点/ ./ 第/ 2/ 步/ :/ 计算/ 所有/ 任务/ 最/ 晚/ 截止/ 时间/ 作为/ 调度/ 和/ 布局/ 的/ 时间/ 片/ 阈值/ ,/ 超过/ 阈值/ 仍/ 不/ 能够/ 成功/ 调度/ 的/ 任务/ 则/ 为/ 调度/ 失败/ 任务/ ./ 第/ 3/ 步/ :/ 实现/ 时间/ 片/ 控制/ ./ 算法/ 在/ 时间/ 片/ 控制/ 中/ ,/ 第/ 1/ 步/ :/ 实现/ 任务/ 的/ 删除/ ,/ 在/ 算法/ 中/ 对/ 满足/ 结束/ 执行/ 条件/ 的/ 任务/ 先/ 进行/ 删除/ ,/ 这样/ 可以/ 增加/ 后续/ 任务/ 布局/ 的/ 成功率/ ,/ 否则/ ,/ 会/ 降低/ 任务调度/ 成功率/ ,/ 执行/ 完毕/ 的/ 任务/ 从/ P/ _/ arbiter/ 中/ 删除/ 位置/ 信息/ ,/ 从/ B/ _/ arbiter/ 中/ 删除/ 边界/ 信息/ ./ setX/ _/ top/ 函数/ 实现/ 将/ X/ -/ top/ 滑动/ 到/ 边界/ 记录/ 中/ 除去/ M/ 值/ 的/ 最大值/ 处/ ,/ setY/ _/ top/ 函数/ 实现/ 将/ Y/ -/ top/ 滑动/ 到/ 边界/ 记录/ 中/ 除去/ N/ 值/ 的/ 最大值/ 处/ ,/ 当有/ 新/ 任务/ 载入/ 可/ 重构/ 器件/ 执行/ 时/ ,/ 两个/ 函数/ 更新/ X/ -/ top/ 和/ Y/ -/ top/ 以供/ 后续/ 任务/ 进行/ 布局/ 时/ 进行/ 放置/ 方向/ 决策/ ./ 第/ 2/ 步/ :/ 对/ 到达/ 和/ 等待/ 的/ 任务/ 进行/ 排队/ ,/ 第/ 3/ 步/ :/ 从中/ 选取/ 优先级/ 最高/ 的/ 任务/ 进行/ 布局/ ,/ 初始/ 时/ 可/ 重构/ 器件/ 没有/ 任务/ 执行/ ,/ 根据/ 紧凑/ 原则/ ,/ 第/ 1/ 个/ 任务/ 放置/ 在/ (/ 0/ ,/ 0/ )/ 处/ ,/ 同时/ 更新/ 位置/ 仲裁/ 记录/ 和/ 边界/ 仲裁/ 记录/ ,/ 并/ 滑动/ X/ -/ top/ 和/ Y/ -/ top/ ,/ 布局/ 不/ 成功/ 的/ 任务/ 转入/ WAIT/ 状态/ ./ 如果/ 非/ 第/ 1/ 个/ 任务/ 的/ 后续/ 任务/ ,/ 采用/ 方向/ 决策函数/ 式/ (/ 1/ )/ 进行/ 计算/ ,/ 通过/ 变量/ d/ 传给/ 布局/ 函数/ DATS/ _/ place/ 进行/ 布局/ ,/ 该/ 布局/ 算法/ 通过/ 对/ 两个/ 仲裁/ 记录/ 的/ 分析/ ,/ 将要/ 执行/ 的/ 任务/ T/ 放置/ 到/ 二维/ 空间/ 中/ ,/ 其本质/ 是/ 为/ 任务分配/ 资源/ ./ 算法/ 流程/ 如图/ 8/ 所示/ ./ DATS/ _/ Scheduler/ 算法/ 执行/ 一次/ ,/ 完成/ 对/ 任务/ 集中/ 任务/ 的/ 调度/ ,/ 每个/ 任务/ 的/ 调度/ 根据/ 约束条件/ 完成/ 启动/ 和/ 结束/ ,/ 时间/ 复杂度/ 为/ O/ (/ N/ )/ ./ 部分/ ,/ 算法/ 3/ 用伪/ 代码/ 对/ 其/ 进行/ 了/ 描述/ ./ (/ 3/ )/ 布局/ 算法/ 布局/ 算法/ DATS/ _/ place/ 是/ 调度/ 算法/ 的/ 重要/ 组成/ 算法/ 3/ ./ DATS/ _/ place/ (/ Ti/ ,/ decision/ )/ ./ 1/ ./ k/ ←/ length/ (/ P/ _/ arbiter/ )/ 2/ ./ if/ (/ decision/ =/ =/ 1/ )/ 3/ ./ forallxxfromtaskNumto1with/ (/ X/ _/ D/ [/ xx/ ]/ ≠/ 4/ ./ foralliifrom1totaskNumwith/ (/ Y/ _/ D/ [/ xx/ ]/ ≠/ 5/ ./ clashflag1/ ←/ 0/ ;/ 6/ ./ TR/ [/ k/ ]/ ←/ [/ (/ X/ _/ D/ [/ xx/ ]/ ,/ Y/ _/ D/ [/ ii/ ]/ )/ ,/ 7/ ./ foralljwith0/ / j/ </ kPage11/ 图/ 8DATS/ _/ Scheduler/ 算法/ 流程/ 8/ ./ if/ (/ !/ constraint1/ (/ TR/ [/ k/ ]/ ,/ TR/ [/ j/ ]/ )/ or9/ ./ clashflag1/ ←/ 1/ ;/ break/ ;/ 10/ ./ endif11/ ./ endfor12/ ./ if/ (/ clashflag1/ =/ =/ 0/ )/ 13/ ./ structnodep/ ←/ TR/ [/ k/ ]/ ;/ 14/ ./ insertpintothetearofP/ _/ arbiter/ // / 将成/ 15/ ./ B/ _/ arbiter/ [/ i/ +/ 1/ ]/ [/ 0/ ]/ ←/ X/ _/ D/ [/ xx/ ]/ +/ Ti/ ./ w/ ;/ 16/ ./ setX/ _/ top/ (/ )/ ;/ setY/ _/ top/ (/ )/ ;/ 17/ ./ return1/ ;/ // // 放置/ 成功/ 直接/ 退出/ 18/ ./ endif19/ ./ endfor20/ ./ endfor21/ ./ if/ (/ clashflag1/ =/ 0/ )/ return1/ ;/ endif22/ ./ else23/ ./ forallyyfromtaskNumto1with/ (/ Y/ _/ D/ [/ yy/ ]/ ≠/ 24/ ./ foralljjfrom1totaskNumwith/ (/ X/ _/ D/ [/ jj/ ]/ ≠/ 25/ ./ clashflag2/ ←/ 0/ ;/ 26/ ./ TR/ [/ k/ ]/ ←/ [/ (/ X/ _/ D/ [/ jj/ ]/ ,/ Y/ _/ D/ [/ yy/ ]/ )/ ,/ 27/ ./ foralljwith0/ / j/ </ k28/ ./ if/ (/ !/ constraint1/ (/ TR/ [/ k/ ]/ ,/ TR/ [/ j/ ]/ )/ or29/ ./ clashflag2/ ←/ 1/ ;/ break/ ;/ 30/ ./ endif31/ ./ endfor32/ ./ if/ (/ clashflag2/ =/ =/ 0/ )/ 33/ ./ structnodep/ ←/ TR/ [/ k/ ]/ 34/ ./ insertpintothetearofP/ _/ arbiter/ // / 将/ 成功/ 35/ ./ B/ _/ arbiter/ [/ i/ +/ 1/ ]/ [/ 0/ ]/ ←/ X/ _/ D/ [/ jj/ ]/ +/ Ti/ ./ w/ ;/ 36/ ./ setX/ _/ top/ (/ )/ ;/ setY/ _/ top/ (/ )/ ;/ 37/ ./ return1/ ;/ // // 放置/ 成功/ 直接/ 退出/ 38/ ./ endifPage1239/ ./ endfor40/ ./ endfor41/ ./ if/ (/ clashflag2/ =/ 0/ )/ return1/ ;/ endif42/ ./ endif43/ ./ return/ -/ 1/ ;/ DATS/ _/ Place/ 算法/ 根据/ 调度/ 算法/ 中/ 第/ 33/ 行/ 放置/ 方向/ 决策函数/ 值/ 完成/ 对/ 任务/ Ti/ 的/ 布局/ ,/ 任务/ 布局/ 成功/ 则/ 返回/ 1/ ,/ 并/ 将/ 位置/ 信息/ 记录/ 在/ P/ _/ arbiter/ 中/ ;/ 任务/ 布局/ 失败/ 则/ 返回/ -/ 1/ ./ 在/ 算法/ 伪/ 代码/ 描述/ 中/ ,/ 第/ 2/ 行/ 和/ 第/ 22/ 行/ 通过/ 对/ 放置/ 方向/ 决策函数/ 值/ 的/ 判断/ 对/ 任务/ 进行/ 资源分配/ ,/ 由式/ (/ 1/ )/ 知/ ,/ 决策函数/ 值为/ 1/ 时沿/ X/ 轴/ 方向/ 放置/ 任务/ ;/ 函数/ 值为/ 0/ 时沿/ Y/ 轴/ 方向/ 放置/ 任务/ ./ 根据/ 放置/ 方向不同/ 分别/ 处理/ 的/ 两/ 部分/ 代码/ 是/ 类似/ 的/ ,/ 以/ decision/ 值为/ 0/ (/ 即/ 沿/ Y/ 轴/ 放置/ )/ 进行/ 分析/ 和/ 说明/ ./ 从/ 调度/ 模式图/ 中/ 可知/ X/ -/ D/ 和/ Y/ -/ D/ 分别/ 是/ 边界/ 仲裁/ B/ _/ arbiter/ 中/ 对/ 所有/ 正在/ 执行/ 任务/ 的/ 右/ 边界/ 和/ 上/ 边界/ 的/ 记录/ ,/ 23/ ~/ 24/ 行只/ 在/ 记录/ 中/ 包含/ 的/ 边界/ 处进/ 搜索/ 可/ 布局/ 的/ 位置/ ,/ 这样/ 减少/ 了/ 对/ 空闲/ 区域/ 的/ 搜索/ 时间/ ,/ 时间/ 复杂度/ 为/ O/ (/ E2/ )/ ,/ E/ 为/ Y/ -/ D/ 和/ X/ -/ D/ 中/ 记录/ 图/ 9DATS/ _/ Place/ 算法/ 流程/ 数目/ 的/ 最大值/ ,/ 即/ 器件/ 正在/ 执行/ 的/ 任务/ 的/ 最大/ 数目/ ./ 第/ 27/ 行/ 和/ 第/ 28/ 行/ 检查/ 第/ 26/ 行/ 预设/ 矩阵/ 区域/ 是否/ 满足/ 式/ (/ 6/ )/ 和/ (/ 7/ )/ 的/ 约束条件/ ,/ 不/ 满足/ 则/ 将/ 冲突/ 标志/ 设置/ 为/ 1/ ,/ 重新/ 搜索/ ;/ 满足/ 则/ 将/ 任务/ 载入/ 可/ 重构/ 器件/ 执行/ ,/ 并/ 将/ 位置/ 信息/ 插入/ P/ _/ arbiter/ 中/ ,/ 32/ ~/ 34/ 行/ 完成/ 了/ 这/ 一/ 功能/ ./ 新/ 任务/ 加载/ 后/ ,/ 35/ ~/ 36/ 行对/ 边界/ 仲裁/ 记录/ B/ _/ arbiter/ 进行/ 更新/ ,/ 并/ 滑动/ X/ -/ top/ 和/ Y/ -/ top/ ,/ 以备/ 后续/ 任务/ 被/ 调度/ 时/ 进行/ 布局/ 决策/ ./ DATS/ _/ Place/ 算法/ 具体/ 如图/ 9/ 所示/ :/ 第/ 1/ 步/ :/ 获取/ 正在/ 执行/ 的/ 任务/ 数/ ;/ 第/ 2/ 步/ :/ 根据/ 方向/ 函数/ 决定/ 任务/ 布局/ 方向/ ;/ 第/ 3/ 步/ :/ 按照/ 任务/ 放置/ 方向/ ,/ 搜索/ 可/ 满足/ 放置/ 约束条件/ 的/ 位置/ ,/ 放置/ 任务/ :/ ①/ 搜索/ 边界/ 记录/ 中/ 可/ 放置/ 的/ 位置/ ;/ ②/ 检查/ 放置/ 位置/ 是否/ 满足/ 约束条件/ 1/ 和/ 2/ ;/ ③/ 若/ 满足/ ,/ 则/ 放置/ 成功/ ,/ 将/ 放置/ 任务/ 添加/ 到/ 位置/ 记录/ 中/ ,/ 并/ 更新/ 边界/ 记录/ 信息/ ,/ 滑动/ X/ -/ top/ 和/ Y/ -/ top/ ;/ 若/ 不/ 满足/ ,/ 则/ 放置/ 失败/ ,/ 返回/ ①/ 继续/ 搜索/ ;/ ④/ 找/ 不到/ 合适/ 的/ 放置/ 位置/ ,/ 则/ 返回/ 放置/ 失败/ (/ return/ -/ 1/ )/ ./ 特别/ 地/ ,/ 当/ 任务/ 集中/ 矩形/ 任务/ w/ 、/ h/ 值均取/ 1/ 时/ ,/ 算法/ 效果/ 会/ 达到/ 最优/ ,/ 但是/ 此时/ 算法/ 的/ 耗时/ 将/ 达到/ 最大/ ./ Page133/ ./ 6/ 调度/ 实例/ 本/ 小节/ 通过/ 一个/ 任务/ 集/ 调度/ 实例/ 来/ 具体/ 介绍/ 双/ 仲裁/ 时间/ 片/ 调度/ 模式图/ 的/ 原理/ 和/ 仲裁/ 调度/ 过程/ ,/ 以/ 方便/ 了解/ DATS/ 算法/ 所/ 使用/ 的/ 数据结构/ 及/ 算法/ 效率/ ./ 给定/ 一组/ 已经/ 划分/ 好/ 的/ 硬件/ 任务/ ,/ 如表/ 2/ 所示/ ./ 任务/ whtatstepsTASK1122111IDLETASK2343442IDLETASK3252321IDLETASK4333421IDLETASK5434431IDLETASK6224521IDLE/ 假设/ 二维/ 逻辑/ 器件/ 为/ W/ ×/ H/ 阵列/ ,/ W/ =/ 9/ ,/ H/ =/ 10/ ./ 初始/ 时/ ,/ B/ -/ Arbiter/ 仲裁/ 记录/ 中/ X/ -/ D/ 和/ Y/ -/ D/ 均/ 写入/ 记录/ 0/ ,/ P/ -/ Arbiter/ 仲裁/ 记录/ 初始/ 为/ NULL/ ./ 当/ KF/ =/ 1/ (/ 图/ 10/ (/ a/ )/ )/ 时/ ,/ 任务/ T1/ {/ 1/ ,/ 2/ ,/ 1/ ,/ 1/ ,/ 1/ ,/ IDLE/ }/ 进入/ ,/ B/ -/ Arbiter/ 的/ X/ -/ D/ 记录/ (/ 图/ 11/ )/ 中/ 增加/ 图/ 11B/ -/ Arbiter/ 仲裁/ 记录/ 模式图/ 图/ 12P/ -/ Arbiter/ 仲裁/ 记录/ 模式图/ 当/ KF/ =/ 2/ (/ 图/ 10/ (/ b/ )/ )/ 时/ ,/ 任务/ T1/ 退出/ ,/ 同时/ 任务/ T3/ {/ 2/ ,/ 5/ ,/ 2/ ,/ 2/ ,/ 1/ ,/ IDLE/ }/ 进入/ ,/ 按照/ 退出/ 任务/ 优先/ 的/ 原则/ ,/ T1/ 先/ 退出/ ,/ 然后/ 任务/ T3/ 再/ 进入/ ,/ 这样/ 有利于/ 资源/ 的/ 充分利用/ ./ T1/ 退出/ ,/ B/ -/ Arbiter/ 的/ X/ -/ D/ 记录/ (/ 图/ 11/ )/ 中/ 删除/ 边界/ 记录/ 值/ 1/ ,/ Y/ -/ D/ 记录/ 中/ 删除/ 边界/ 记录/ 值/ 2/ ,/ 此时/ ,/ X/ -/ top/ =/ 0/ ,/ Y/ -/ top/ =/ 0/ ./ 同时/ 从/ P/ -/ Arbiter/ 记录/ (/ 图/ 12/ )/ 中/ 删除/ 任务/ T1/ 的/ 位置/ [/ (/ 0/ ,/ 0/ )/ ,/ (/ 1/ ,/ 2/ )/ ]/ ./ T3/ 进入/ ,/ 通过/ 公式/ (/ 式/ (/ 1/ )/ )/ 计算结果/ 来/ 决策/ 放置/ 方向/ ,/ 显然/ X/ -/ top/ // W/ =/ Y/ -/ top/ // H/ =/ 0/ ,/ X/ 维/ 方向/ 优先/ 放置/ ,/ 所以/ T3/ 放置/ 位置/ 为/ [/ (/ 0/ ,/ 0/ )/ ,/ (/ 2/ ,/ 5/ )/ ]/ ,/ P/ -/ Arbiter/ 记录/ 中/ 增加/ 任务/ T3/ 位置/ 记录/ 边界/ 记录/ 值/ 1/ ,/ Y/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 2/ ,/ 此时/ ,/ X/ -/ top/ =/ 1/ ,/ Y/ -/ top/ =/ 2/ ./ 同时/ P/ -/ Arbiter/ 记录/ (/ 图/ 12/ )/ 任务/ T1/ 放置/ 位置/ T1/ [/ (/ 0/ ,/ 0/ )/ ,/ (/ 1/ ,/ 2/ )/ ]/ ./ T3/ [/ (/ 0/ ,/ 0/ )/ ,/ (/ 2/ ,/ 5/ )/ ]/ ,/ B/ -/ Arbiter/ 的/ X/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 2/ ,/ Y/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 5/ ,/ 此时/ ,/ X/ -/ top/ =/ 2/ ,/ Y/ -/ top/ =/ 5/ ./ 当/ KF/ =/ 3/ (/ 图/ 10/ (/ c/ )/ )/ 时/ ,/ 任务/ T2/ {/ 3/ ,/ 4/ ,/ 3/ ,/ 4/ ,/ 2/ ,/ IDLE/ }/ 和/ T4/ {/ 3/ ,/ 3/ ,/ 3/ ,/ 2/ ,/ 1/ ,/ IDLE/ }/ 进入/ ,/ 任务/ T2/ 的/ 优先权/ 比/ T4/ 大/ ,/ 按照/ 同时/ 到达/ 优先权/ 值大/ 的/ 任务/ 优先/ 放置/ 的/ 原则/ ,/ 先对/ 任务/ T2/ 分配资源/ ./ T2/ 进入/ ,/ 通过/ 公式/ (/ 式/ (/ 1/ )/ )/ 计算结果/ 来/ 决策/ 放置/ 方向/ ,/ 显然/ X/ -/ top/ // W/ =/ 2/ // 9/ </ Y/ -/ top/ // H/ =/ 5/ // 10/ ,/ X/ 维/ 方向/ 优先/ 放置/ ,/ 搜索/ X/ -/ top/ 边界/ 上/ 的/ 可/ 放置/ 点/ ,/ 即/ 固定/ X/ -/ top/ =/ 2/ ,/ P/ -/ Arbiter/ 通过/ Y/ -/ D/ 项/ 记录/ 来/ 寻找/ 可/ 放置/ 任务/ 的/ Page14/ 位置/ 点/ 作为/ 任务/ 的/ 左下角/ 位置/ ,/ 此时/ Y/ -/ D/ 中/ 记录/ 为/ 0/ 、/ 5/ ,/ (/ 2/ ,/ 0/ )/ 处/ 可/ 放置/ ,/ 故/ 任务/ T2/ 放置/ 位置/ 为/ [/ (/ 2/ ,/ 0/ )/ ,/ (/ 5/ ,/ 4/ )/ ]/ ,/ 在/ P/ -/ Arbiter/ 记录/ 中/ 增加/ 任务/ T2/ 位置/ 记录/ T2/ [/ (/ 2/ ,/ 0/ )/ ,/ (/ 5/ ,/ 4/ )/ ]/ ,/ B/ -/ Arbiter/ 的/ X/ -/ D/ 记录/ (/ 图/ 11/ )/ 中/ 增加/ 边界/ 记录/ 值/ 5/ ,/ Y/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 4/ ,/ 此时/ ,/ X/ -/ top/ =/ 5/ ,/ Y/ -/ top/ =/ 5/ ./ 紧接着/ 任务/ T4/ 进入/ ,/ 通过/ 公式/ (/ 式/ (/ 1/ )/ )/ 计算结果/ 来/ 决策/ 放置/ 方向/ ,/ 显然/ X/ -/ top/ // W/ =/ 5/ // 9/ >/ Y/ -/ top/ // H/ =/ 5/ // 10/ ,/ Y/ 维/ 方向/ 优先/ 放置/ ,/ 搜索/ Y/ -/ top/ 边界/ 上/ 的/ 可/ 放置/ 点/ ,/ 即/ 固定/ Y/ -/ top/ =/ 5/ ,/ P/ -/ Arbiter/ 通过/ X/ -/ D/ 项/ 记录/ 来/ 寻找/ 可/ 放置/ 任务/ 的/ 位置/ 点/ 作为/ 任务/ 的/ 左下角/ 位置/ ,/ 此时/ X/ -/ D/ 中/ 记录/ 为/ 0/ 、/ 2/ 、/ 5/ ,/ (/ 0/ ,/ 5/ )/ 处/ 可/ 放置/ ,/ 故/ 任务/ T4/ 放置/ 位置/ 为/ [/ (/ 0/ ,/ 5/ )/ ,/ (/ 3/ ,/ 8/ )/ ]/ ,/ 在/ P/ -/ Arbiter/ 记录/ (/ 图/ 12/ )/ 中/ 增加/ 任务/ T4/ 位置/ 记录/ T4/ [/ (/ 0/ ,/ 5/ )/ ,/ (/ 3/ ,/ 8/ )/ ]/ ,/ B/ -/ Arbiter/ 的/ X/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 3/ ,/ Y/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 8/ ,/ 此时/ ,/ X/ -/ top/ =/ 5/ ,/ Y/ -/ top/ =/ 8/ ./ 当/ KF/ =/ 4/ (/ 图/ 10/ (/ d/ )/ )/ 时/ ,/ 任务/ T3/ {/ 2/ ,/ 5/ ,/ 2/ ,/ 2/ ,/ 1/ ,/ FIN/ }/ 退出/ ,/ 同时/ 任务/ T5/ {/ 4/ ,/ 3/ ,/ 4/ ,/ 3/ ,/ 1/ ,/ IDLE/ }/ 和/ T6/ {/ 2/ ,/ 2/ ,/ 4/ ,/ 2/ ,/ 1/ ,/ IDLE/ }/ 进入/ ,/ 按照/ 退出/ 任务/ 优先/ 原则/ ,/ T3/ 先/ 退出/ ,/ 然后/ 任务/ T5/ 和/ T6/ 依次/ 进入/ 开始/ 执行/ ./ T3/ 退出/ ,/ 从/ P/ -/ Arbiter/ 记录/ (/ 图/ 12/ )/ 中/ 查找/ 任务/ T3/ 的/ 位置/ 为/ [/ (/ 0/ ,/ 0/ )/ ,/ (/ 2/ ,/ 5/ )/ ]/ ,/ T3/ 的/ 退出/ 会/ 造成/ 边界值/ 的/ 变化/ ,/ 根据/ P/ -/ Arbiter/ 的/ 记录/ B/ -/ Arbiter/ 可以/ 确定/ 删除/ 的/ 边界值/ ,/ 故/ B/ -/ Arbiter/ 在/ X/ -/ D/ 记录/ 中/ 删除/ 边界/ 记录/ 值/ 2/ ,/ Y/ -/ D/ 记录/ 中/ 删除/ 边界/ 记录/ 值/ 5/ ,/ 此时/ ,/ X/ -/ top/ =/ 5/ ,/ Y/ -/ top/ =/ 8/ ,/ 然后/ ,/ P/ -/ Arbiter/ 从/ 记录/ 中/ 删除/ T3/ 的/ 信息/ ./ T5/ 进入/ ,/ 通过/ 公式/ (/ 式/ (/ 1/ )/ )/ 计算结果/ 来/ 决策/ 放置/ 方向/ ,/ 显然/ X/ -/ top/ // W/ =/ 5/ // 9/ </ Y/ -/ top/ // H/ =/ 8/ // 10/ ,/ X/ 维/ 方向/ 优先/ 放置/ ,/ 搜索/ X/ -/ top/ 边界/ 上/ 的/ 可/ 放置/ 点/ ,/ 即/ 固定/ X/ -/ top/ =/ 5/ ,/ P/ -/ Arbiter/ 通过/ Y/ -/ D/ 项/ 记录/ 来/ 寻找/ 可/ 放置/ 任务/ 的/ 位置/ 点/ 作为/ 任务/ 的/ 左下角/ 位置/ ,/ 此时/ Y/ -/ D/ 中/ 记录/ 为/ 0/ 、/ 4/ 、/ 8/ ,/ (/ 5/ ,/ 0/ )/ 处/ 可/ 放置/ ,/ 故/ 任务/ T5/ 放置/ 位置/ 为/ [/ (/ 5/ ,/ 0/ )/ ,/ (/ 9/ ,/ 3/ )/ ]/ ,/ 在/ P/ -/ Arbiter/ 记录/ 中/ 增加/ 任务/ T5/ 位置/ 记录/ T5/ [/ (/ 5/ ,/ 0/ )/ ,/ (/ 9/ ,/ 3/ )/ ]/ ,/ B/ -/ Arbiter/ 的/ X/ -/ D/ 记录/ (/ 图/ 11/ )/ 中/ 增加/ 边界/ 记录/ 值/ 9/ ,/ Y/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 3/ ,/ 此时/ ,/ X/ -/ D/ 记录/ 中/ 出现/ W/ 值/ ,/ 故/ X/ -/ top/ 取/ 记录/ 次小值/ 5/ ,/ 故/ X/ -/ top/ =/ 5/ ,/ Y/ -/ top/ =/ 8/ ./ 紧接着/ 任务/ T6/ 进入/ ,/ 通过/ 公式/ (/ 式/ (/ 1/ )/ )/ 计算结果/ 来/ 决策/ 放置/ 方向/ ,/ 显然/ X/ -/ top/ // W/ =/ 5/ // 9/ </ Y/ -/ top/ // H/ =/ 8/ // 10/ ,/ X/ 维/ 方向/ 优先/ 放置/ ,/ 搜索/ X/ -/ top/ 边界/ 上/ 的/ 可/ 放置/ 点/ ,/ 即/ 固定/ X/ -/ top/ =/ 5/ ,/ P/ -/ Arbiter/ 通过/ Y/ -/ D/ 项/ 记录/ 来/ 寻找/ 可/ 放置/ 任务/ 的/ 位置/ 点/ 作为/ 任务/ 的/ 左下角/ 位置/ ,/ 此时/ Y/ -/ D/ 中/ 记录/ 为/ 0/ 、/ 4/ 、/ 8/ 、/ 3/ ,/ (/ 5/ ,/ 3/ )/ 处/ 可/ 放置/ ,/ 故/ 任务/ T6/ 放置/ 位置/ 为/ [/ (/ 5/ ,/ 3/ )/ ,/ (/ 7/ ,/ 5/ )/ ]/ ,/ 在/ P/ -/ Arbiter/ 记录/ 中/ 增加/ 任务/ T6/ 位置/ 记录/ T6/ [/ (/ 5/ ,/ 3/ )/ ,/ (/ 7/ ,/ 5/ )/ ]/ ,/ B/ -/ Arbiter/ 的/ X/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 7/ ,/ Y/ -/ D/ 记录/ 中/ 增加/ 边界/ 记录/ 值/ 5/ ,/ 此时/ ,/ X/ -/ top/ =/ 7/ ,/ Y/ -/ top/ =/ 8/ ./ KF/ =/ 5/ 时/ ,/ 任务/ T4/ 退出/ ,/ 双/ 仲裁/ 记录/ 删除/ 相应/ 信息/ ;/ 同样/ ,/ KF/ =/ 6/ 时/ T6/ 退出/ ;/ KF/ =/ 7/ 时/ T2/ 和/ T5/ 依次/ 退出/ ./ 在/ DATS/ 算法/ 中/ ,/ B/ -/ Arbiter/ 和/ P/ -/ Arbiter/ 两个/ 仲裁/ 器/ 通过/ 相互协作/ 对/ 任务/ 进行/ 实时/ 调度/ ,/ 它们/ 记录/ 的/ 数据/ 均/ 具有/ 动态变化/ 的/ 特点/ ,/ 从这一点/ 考虑/ 采用/ 线性/ 链表/ 的/ 数据结构/ 对/ 数据/ 进行/ 存储/ 和/ 增删/ 改查/ 等/ 处理/ 比较/ 合适/ ,/ 但是/ 在/ 可/ 重构/ 实时/ 调度/ 系统/ 中/ ,/ 算法/ 查找时间/ 应该/ 尽量/ 小/ ,/ 且/ 时间/ 因素/ 应当/ 被/ 优先/ 考虑/ ,/ 为了/ 实现/ 对/ 数据/ 迅速/ 查找/ 和/ 定位/ 的/ 功能/ ,/ B/ -/ Arbiter/ 和/ P/ -/ Arbiter/ 仲裁/ 记录/ 应当/ 采用/ 数组/ 数据结构/ ,/ 数组/ 的/ 初始/ 开辟/ 空间/ 会/ 大于/ 链表/ ,/ 但/ 在/ 记录/ 数目/ 动态/ 增加/ 到/ 最大值/ 时/ ,/ 即使/ 是/ 链表/ 也/ 需要/ 开销/ 和/ 数组/ 等同/ 的/ 空间/ ,/ 而且/ 空间/ 不/ 连续/ ,/ 采用/ 指针/ 管理/ 还会/ 增加/ 算法/ 实现/ 的/ 复杂性/ ./ 因此/ ,/ 在/ DATS/ 算法/ 中/ B/ -/ Arbiter/ 采用/ 数组/ 结构/ ,/ P/ -/ Arbiter/ 采用/ 动态/ 链表/ 结构/ ./ 4/ 性能/ 评价/ 4.1/ 实验/ 建立/ 参照/ 文献/ [/ 7/ ]/ 中/ 的/ 实验/ 模型/ ,/ 可/ 重构/ 器件/ 按照/ XilinxVirtexXCV1000/ 规模/ 定义/ ,/ 采用/ 96/ ×/ 64/ =/ 6114/ 个/ RCU/ ,/ 随机/ 生成/ 模拟/ 任务/ 数据/ ,/ 为了/ 便于/ 对比/ ,/ 参照/ 文献/ [/ 10/ ]/ 将/ 任务/ 按照/ 面积/ 分为/ 4/ 类/ ,/ 分别/ 记作/ C10/ 、/ C30/ 、/ C40/ 和/ C50/ ./ Cn/ 的/ 宽度/ 和/ 高度/ 在/ 区间/ [/ 5/ ,/ n/ ]/ 内/ 均匀分布/ ./ 任务/ 运行/ 时间/ 在/ [/ 5/ ,/ 50/ ]/ 个/ 时间/ 单位/ 内/ 均匀分布/ ./ 任务/ 开始/ 执行/ 时间/ 在/ [/ 1/ ,/ 100/ ]/ 个/ 时间/ 单位/ 内/ 均匀分布/ ./ 生成/ 100/ 组/ 任务/ ,/ 每组/ 任务/ 有/ 1000/ 个/ ,/ 多次/ 统计/ 后/ ,/ 结果/ 取/ 平均值/ ./ 在/ 针对/ 1D/ 可/ 重构/ 器件/ 模型/ 的/ 任务调度/ 与/ 布局/ 研究/ 中/ ,/ 由于/ 建模/ 时/ 扩展/ 使用/ 了/ 时间/ 维度/ ,/ 在/ 对/ 算法/ 指标/ 进行/ 评价/ 时/ ,/ 通常/ 将/ 负载/ 率/ 作为/ 参变量/ ,/ 其他/ 为/ 因变量/ ,/ 而/ 在/ 2D/ 可/ 重构/ 器件/ 模型/ 中/ ,/ 以/ 负载/ 率为/ 参变量/ 会/ 限制/ 任务/ 集合/ 的/ 灵活/ 生成/ ,/ 不利于/ 算法/ 的/ 充分/ 测试/ ,/ 因此/ 实验/ 采用/ 任务/ 规模/ 作为/ 因变量/ ,/ 对/ 算法/ 指标/ 进行/ 衡量/ 和/ 评价/ ./ 任务/ 规模/ 与/ 器件/ 负载/ 率/ 的/ 关系/ 如图/ 13/ 所示/ ./ 由图/ 13/ 可见/ ,/ 同一/ 任务/ 规模/ 下/ 的/ 器件/ 负载/ 率/ 随着/ 任务/ 占用/ 空间/ 大小/ 的/ 递增/ 而/ 增大/ ;/ 同/ 一类/ 占用/ 空间/ 大小/ 的/ 任务/ ,/ 器件/ 负载/ 率/ 随着/ 任务/ 规模/ 的/ 递增/ 而/ 增大/ ./ Page154/ ./ 2/ 调度/ 成功率/ 对比/ 给定/ 器件/ 大/ 小时/ ,/ 任务/ 规模/ 对/ 任务/ 的/ 调度/ 成功率/ 影响/ 很大/ ,/ 因而/ 通过/ 任务/ 规模/ 来/ 衡量/ 任务调度/ 成功率/ 十分/ 重要/ ./ 实验/ 将/ 不同/ 的/ 任务/ 规模/ 的/ 测试用例/ 均/ 赋以/ 空间/ 占用/ 大小/ 属性/ ,/ 共分/ C10/ 、/ C30/ 、/ C40/ 和/ C504/ 类/ ./ 参与/ 比较/ 的/ 算法/ 有/ Horizon/ 、/ Stuffing/ 和/ 图/ 14/ 性能/ 对比/ 对图/ 14/ 各类/ 任务/ 进行/ 类间/ 对比/ ,/ 可见/ ,/ 随着/ 器件/ 负载/ 率/ 的/ 增加/ ,/ 各类/ 算法/ 的/ 调度/ 成功率/ 也/ 呈现/ 下降/ 趋势/ ./ 4.3/ 资源/ 利用率/ 分析/ DATS/ 算法/ 通过/ 对/ 位置/ 仲裁/ 器/ 记录/ 数据/ 的/ 运行/ 时/ 计算/ 可以/ 很/ 容易/ 统计/ 每个/ 时间/ 片内/ 的/ 资源/ 利用率/ ,/ 方便/ 对/ 整个/ 算法/ 在/ 资源/ 利用率/ 方面/ 的/ 性能/ 分析/ ,/ 适合/ 于/ 实时/ 监控/ 的/ 情况/ ./ 由于/ C10/ 类/ 任务/ 在/ 负载/ 任务/ 数为/ 5/ ~/ 60/ 间/ 负载/ 率均/ 小于/ 1/ ,/ 在/ 资源/ 利用率/ 评价/ 上/ 不/ 具有/ 参考/ 意义/ ./ 实验/ 只/ 对/ 负载/ 率/ 大于/ 1/ 的/ 任务/ 集/ 进行/ 测试/ ./ 图/ 15/ 显示/ 了/ DATS/ 算法/ 在/ 各类/ 任务/ 测试/ 时/ 可/ 重构/ 器件/ 处于/ 任务/ 稳定/ 执行/ 状态/ 时/ 的/ 各/ 时间/ 片内/ 平均/ 资源/ 利用率/ 情况/ ,/ 虚线/ 显示/ 了/ 不同/ 类/ 任务/ 时/ ,/ 资源/ 利用率/ 的/ 稳定/ 情况/ ,/ 结果表明/ ,/ DATSDATS/ 算法/ ,/ 在/ 这/ 3/ 个/ 算法/ 中/ ,/ Horizon/ 算法/ 采用/ BF/ 布局/ 策略/ ,/ 每/ 一个/ 任务/ 到达/ 时/ 总是/ 寻找/ 最大/ 的/ 空闲/ 区域/ 进行/ 布局/ ;/ Stuffing/ 采用/ FF/ 布局/ 策略/ ,/ 只要/ 搜索/ 到/ 任务/ 可/ 放置/ 空间/ 即/ 完成/ 布局/ ./ 在/ C10/ 类/ 统计/ 中/ ,/ 各/ 算法/ 调度/ 成功率/ 比较/ 如图/ 14/ (/ a/ )/ 所示/ ,/ 由图/ 13/ 可知/ 这/ 类/ 任务/ 负载/ 率均/ 低于/ 1/ ,/ 因此/ 3/ 个/ 算法/ 均/ 具有/ 100/ %/ 的/ 调度/ 成功率/ ;/ 在/ C30/ 、/ C40/ 和/ C50/ 类/ 统计/ 中/ ,/ Horizon/ 算法/ 因/ 按照/ 最优/ 策略/ 识别/ 最大/ 空闲/ 矩阵/ ,/ 而/ 在/ 任务/ 宽/ 与/ 高/ 约束/ 上/ 不/ 一定/ 满足/ 式/ (/ 6/ )/ 和/ (/ 7/ )/ ,/ 所以/ 调度/ 成功率/ 较/ 低/ ;/ Stuffing/ 和/ DATS/ 均/ 采用/ FF/ 布局/ 策略/ ,/ 任务调度/ 成功率/ 较/ 高/ ,/ 随着/ 负载/ 任务/ 数/ 的/ 增加/ ,/ Stuffing/ 和/ DATS/ 调度/ 成功率/ 会/ 有所/ 下降/ ,/ 但是/ DATS/ 因/ 采用/ 了/ 放置/ 方向/ 决策/ 的/ 布局/ 策略/ ,/ 一定/ 程度/ 上/ 避免/ 了/ 任务/ 在/ 空间/ 上/ 的/ 冲突/ ,/ 比/ Stuffing/ 具有/ 更/ 高/ 的/ 调度/ 成功率/ ./ 算法/ 在/ 最好/ 情况/ 下/ 的/ 资源/ 利用率/ 保持/ 在/ 0.8/ 左右/ ,/ 而/ 在/ 任务/ 全/ 加载/ 情况/ 下/ ,/ 负载/ 率会/ 达到/ 7/ 左右/ ,/ 可见/ DATS/ 在/ 高/ 负载/ 情况/ 下/ 仍/ 能/ 保持/ 很/ 高/ 的/ 资源/ 利用率/ ./ 图/ 15/ 各类/ 任务/ 下/ 不同/ 关键帧/ 处/ 的/ 资源/ 利用率/ 图/ 15/ 显示/ ,/ 在/ 任务/ 集为/ C50/ 时/ ,/ 在/ 51/ ~/ 56/ 时间/ 片处/ ,/ 资源/ 利用率/ 首先/ 下降/ 然后/ 又/ 迅速/ 提升/ ,/ 这/ 是/ 大/ Page16/ 面积/ 任务/ 在/ 实时/ 调度/ 时/ 常见/ 的/ 抖动/ 问题/ ,/ 存在/ 这样/ 的/ 问题/ 是因为/ 随机/ 生成/ 的/ 任务/ 集中/ 任务/ 面积/ 约束/ 在/ 较大/ 范围/ 内/ ,/ C50/ 类/ 任务/ 的/ 面积/ 80/ %/ 在/ 50/ ~/ 1250/ 之间/ ,/ 在/ 96/ ×/ 64/ 器件/ 规模/ 下/ ,/ 大面积/ 任务/ 在/ 51/ ~/ 56/ 时/ 出现/ 大量/ 执行/ 完毕/ 随即/ 又/ 有/ 大量/ 任务/ 加载/ 的/ 情况/ ,/ 所以/ 资源/ 利用率/ 会/ 出现/ 曲线/ 抖动/ ,/ 要/ 避免/ 抖动/ 发生/ 就要/ 杜绝/ 大量/ 大面积/ 任务/ 集中/ 加载/ 集中/ 结束/ 的/ 情况/ 发生/ ,/ 实验/ 时/ 为了/ 便于/ 分析/ 对/ 所有/ 任务/ 采用/ 同/ 一类/ 面积/ 分配/ ,/ 在/ 任务调度/ 时/ 可以/ 对/ 任务/ 在/ 面积/ 大小/ 上/ 进行/ 适当/ 糅合/ ./ 值得/ 说明/ 的/ 是/ ,/ 这里/ 的/ 抖动/ 不是/ 任务/ 退出/ 又/ 被/ 重新/ 调用/ 发生/ 的/ 抖动/ 问题/ ,/ 大/ 任务/ 与/ 相对/ 较/ 小/ 任务调度/ 产生/ 的/ 抖动/ 属于/ 任务/ 划分/ 的/ 范畴/ ,/ 而/ 传统意义/ 上/ 的/ 抖动/ 属于/ 调度/ 优化/ 问题/ ./ 4.4/ 算法/ 运行/ 时间/ 比较/ 算法/ 在/ 2.4/ GHzPentuim4/ PC机/ 上/ 通过/ 标准/ C++/ 实现/ ,/ 对比/ 算法/ 有/ Horizon/ 、/ Stuffing/ 和/ FF/ 算法/ ,/ Horizon/ 算法/ 不/ 预约/ 任务/ 、/ 速度/ 最快/ ,/ 作为/ 参考/ 的/ 基准/ ,/ 运行/ 时间/ 对比/ 结果/ 如图/ 16/ 所示/ ./ 图/ 16/ 算法/ 运行/ 时间/ 对比/ 5/ 结论/ 本文/ 针对/ 可/ 重构/ 系统/ 中/ 任务/ 的/ 实时/ 调度/ 问题/ 进行/ 研究/ ,/ 提出/ 了/ 基于/ 边界/ 和/ 位置/ 双/ 仲裁/ 策略/ 的/ 时间/ 片/ 调度/ 算法/ DATS/ ,/ 设计/ 了/ 双/ 仲裁/ 时间/ 片/ 任务调度/ 模式图/ ,/ 为/ 算法/ 实现/ 和/ 实例/ 演示/ 提供/ 操作方法/ ./ DATS/ 算法/ 将/ 任务/ 时间/ 属性/ 划归/ 到/ 时间/ 片/ 区间/ 内/ ,/ 采用/ 两个/ 仲裁/ 器/ 对/ 硬件资源/ 进行/ 管理/ ,/ 并/ 根据/ 空间/ 和/ 时间/ 约束/ 动态/ 裁决/ 任务/ 布局/ 位置/ ;/ 同时/ 设计/ 了/ 双/ 仲裁/ 时间/ 片/ 任务调度/ 模式图/ ,/ 对/ 任务/ 的/ 调度/ 和/ 布局/ 过程/ 进行/ 合理/ 分离/ ,/ 使/ 任务调度/ 和/ 布局/ 过程/ 相对/ 独图/ 16/ (/ a/ )/ ~/ (/ d/ )/ 分别/ 针对/ C10/ 、/ C30/ 、/ C40/ 和/ C50/ 这/ 4/ 类/ 任务/ 对/ 算法/ 进行/ 对比/ ./ 结果显示/ :/ (/ 1/ )/ 对于/ 特定/ 一类/ 任务/ (/ 以图/ 16/ (/ a/ )/ 为例/ )/ ,/ 算法/ Stuffing/ 具有/ 最短/ 的/ 运行/ 时间/ ,/ 这/ 是因为/ FF/ 算法/ 以/ “/ 首次/ 适合/ ”/ 为/ 原则/ ,/ 调度/ 算法/ 时间/ 复杂度/ 为/ O/ (/ N/ )/ ;/ (/ 2/ )/ 对于/ 特定/ 一类/ 任务/ ,/ 随着/ 负载/ 率/ 的/ 增加/ ,/ Horizon/ 算法/ 运行/ 时间/ 急剧/ 上升/ ,/ 说明/ Horizon/ 算法/ 对/ 器件/ 负载/ 率/ 的/ 依赖/ 较大/ ,/ 在/ 重/ 负载/ 情况/ 下/ 时间/ 开销/ 大/ ,/ 不/ 适合/ 于/ 对/ 实时性/ 要求/ 较/ 高/ 的/ 可/ 重构/ 任务调度/ ;/ (/ 3/ )/ 不同/ 类/ 任务/ 下/ 的/ 算法/ 执行/ 时间/ 会/ 随着/ 任务/ 面积/ 的/ 增大/ 而/ 增长/ ,/ 这/ 是因为/ 在/ 同样/ 数目/ 任务/ 同样/ 器件/ 负载/ 率/ 的/ 前提/ 下/ ,/ 面积/ 较大/ 的/ 任务/ 在/ 调度/ 和/ 布局/ 的/ 时候/ ,/ 成功率/ 较/ 低/ (/ 图/ 14/ 所示/ )/ ,/ 各/ 算法/ 运行/ 时间/ 会/ 趋向/ 最坏/ 的/ 情形/ ;/ (/ 4/ )/ DATS/ 算法/ 采用/ 了/ 双/ 仲裁/ 时间/ 片/ 策略/ ,/ 既/ 具有/ FF/ 算法/ “/ 首次/ 适合/ ”/ 的/ 优点/ ,/ 又/ 具备/ Stuffing/ 算法/ 在/ 任务/ 启动/ 终止/ 时间/ 处理/ 上/ 的/ 优势/ ,/ 因而/ DATS/ 算法/ 运行/ 时间/ 接近/ FF/ 算法/ ,/ 同时/ 具有/ 接近/ Stuffing/ 算法/ 的/ 调度/ 效果/ ./ 立/ 并/ 简化/ 处理过程/ ./ 实验/ 表明/ ,/ DATS/ 算法/ 在/ 相应/ 负载/ 率下/ 的/ 任务调度/ 成功率/ 和/ 资源/ 利用率/ 均/ 可/ 保持/ 在/ 较/ 高水平/ ./ 针对/ 并行/ 的/ 实时/ 可/ 重构/ 环境/ ,/ 本/ 算法/ 尚有/ 许多/ 值得/ 改进/ 的/ 地方/ ,/ 由于/ 目前/ 的/ 可/ 重构/ 器件/ 在/ 并行/ 配置/ 、/ 快速/ 配置/ 方面/ 还/ 不能/ 满足要求/ ,/ 所以/ 结合/ 配置/ 时间/ 和/ 配置/ 方法/ 的/ 改进/ 是/ 十分必要/ 的/ ,/ 另外/ 算法/ 在/ 设计/ 中/ 没有/ 考虑/ 任务/ 的/ 重/ 定位问题/ ,/ 在/ 后续/ 研究/ 工作/ 中将/ 会/ 补充/ 完善/ ./ 致谢/ 在/ 此/ ,/ 我们/ 向/ 对/ 本文/ 的/ 工作/ 给予/ 支持/ 和/ 建议/ 的/ 同行/ 以及/ 同/ 实验/ 小组/ 的/ 各位/ 同学/ 和/ 老师/ 表示感谢/ !/ Page17/ 

