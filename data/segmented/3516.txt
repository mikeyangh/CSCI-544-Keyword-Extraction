Page1/ 多/ 租户/ Web/ 应用/ 的/ CPU/ 资源/ 动态/ 评估/ 方法/ 王伟/ 1/ )/ ,/ 2/ )/ ,/ 3/ )/ 黄翔/ 1/ )/ ,/ 3/ )/ 张文博/ 1/ )/ 魏峻/ 1/ )/ 钟华/ 1/ )/ 黄涛/ 1/ )/ 1/ )/ (/ 中国科学院/ 软件/ 研究所/ 软件工程/ 技术/ 研究/ 中心/ 北京/ 100190/ )/ 2/ )/ (/ 武汉大学/ 软件工程/ 国家/ 重点/ 实验室/ 武汉/ 430072/ )/ 3/ )/ (/ 中国科学院/ 研究生院/ 北京/ 100039/ )/ 摘要/ 中间件/ 共享/ 是/ 云/ 计算/ 模式/ 中/ 一种/ 重要/ 的/ 资源共享/ 方式/ ./ 但是/ ,/ 这种/ 方式/ 容易/ 导致/ 宿主/ 在/ 同一/ 中间件/ 服务器/ 上/ 的/ 多个/ 租户/ 间/ 产生/ 性能/ 干扰/ ./ 因此/ ,/ 需要/ 为/ 租户/ 提供/ 性能/ 隔离/ 的/ 服务/ 实例/ ./ 在线/ 度量/ 租户/ 对/ 系统资源/ 的/ 使用/ 情况/ 是/ 实现/ 性能/ 隔离/ 的/ 前提条件/ ,/ 但是/ ,/ 在/ 共享/ 中间件/ 服务器/ 中/ 直接/ 度量/ CPU/ 资源/ 需要/ 注入/ 探针/ ,/ 将/ 引起/ 性能/ 开销/ ,/ 并/ 依赖于/ 操作系统/ 的/ 支持/ ./ 最近/ ,/ 一些/ 工作/ 利用/ 回归/ 分析/ 进行/ 资源/ 使用/ 情况/ 的/ 间接/ 评估/ ,/ 但/ 仍/ 难以/ 对/ 动态/ Web/ 系统/ 的/ 时变/ 资源/ 状态/ 进行/ 有效/ 评估/ ./ 文中/ 针对/ 普遍/ 使用/ 的/ Java/ 中间件/ 服务器/ ,/ 提出/ 一种/ 基于/ Kalman/ 滤波/ 的/ 多/ 租户/ Web/ 应用/ CPU/ 资源/ 动态/ 评估/ 方法/ ,/ 并/ 通过/ 两个/ 实验/ 案例/ 分析方法/ 的/ 评估/ 效果/ 、/ 影响/ 因素/ 和/ 面临/ 的/ 挑战/ ./ 实验/ 结果表明/ ,/ 通过/ 适当/ 的/ 参数设置/ ,/ 该/ 方法/ 可/ 动态/ 适应/ 持续/ 变化/ 的/ 负载/ 环境/ ,/ 并且/ 与/ 直接/ 度量/ 方法/ 相比/ ,/ 具有/ 可/ 接受/ 的/ 评估/ 误差/ ./ 实验/ 还/ 表明/ 该/ 方法/ 可/ 用于/ 检测/ 侵占/ 型/ 租户/ ,/ 并/ 避免/ 共享/ 中间件/ 服务器/ CPU/ 过载/ ./ 关键词/ CPU/ 资源/ 评估/ ;/ 性能/ 隔离/ ;/ Kalman/ 滤波/ ;/ 多/ 租户/ 1/ 引言/ 多/ 租户/ (/ multi/ -/ tenancy/ )/ 让/ 来自/ 不同/ 组织/ (/ 租户/ )/ 的/ 并发/ 用户/ 共享/ 使用/ 同一/ 基础设施/ 资源/ ,/ 有利于/ 成本/ 降低/ 和/ 收益/ 提高/ ,/ 是/ 云/ 计算/ 的/ 关键/ 特征/ 之一/ [/ 1/ -/ 2/ ]/ ./ 如图/ 1/ 所示/ ,/ 目前/ 存在/ 3/ 种/ 典型/ 的/ 多/ 租户/ 部署/ 方式/ :/ 基于/ 虚拟机/ (/ VM/ )/ 的/ 多/ 租户/ 部署/ 、/ 基于/ 进程/ 的/ 多/ 租户/ 部署/ 以及/ 基于/ 共享/ 中间件/ 的/ 多/ 租户/ 部署/ ./ 基于/ VM/ 的/ 部署/ 方式/ 为/ 每个/ 租户/ 配置/ 一个/ VM/ 实例/ ,/ 如/ Amazon/ 的/ EC2/ ①/ 解决方案/ ./ 基于/ 进程/ 的/ 部署/ 方式/ 为/ 每个/ 租户/ 配置/ 一个/ 中间件/ 服务器/ ,/ 如/ Google/ 的/ AppEngine/ ②/ 解决方案/ ./ 基于/ 共享/ 中间件/ (/ sharedmiddleware/ )/ 的/ 部署/ 方式/ 通过/ 单一/ 中间件/ 服务器/ 为/ 多个/ 租户/ 提供/ 服务/ ,/ 如/ Intalio/ ③/ 和/ Salesforce/ ④/ 的/ 解决方案/ ./ 共享/ 中间件/ 是/ 一种/ 高层次/ 的/ 多/ 租户/ 部署/ 方式/ ,/ 与/ 其它/ 方式/ 相比/ ,/ 资源共享/ 程度/ 更高/ ,/ 性能/ 开销/ 更/ 低/ ,/ 因此/ 租户/ 的/ 扩展性/ 更强/ ./ 例如/ ,/ 在/ 同样/ 硬件/ 环境/ 下/ ,/ 使用/ 基于/ VM/ 的/ 部署/ 方式/ ,/ 1/ 个/ 物理/ CPU/ 最多/ 支持/ 3/ 个/ 虚拟/ CPU/ (/ 根据/ VMWare/ 的/ 配置/ 建议/ )/ ,/ 即/ 支持/ 3/ 个/ 租户/ ,/ 而/ 基于/ 共享/ 中间件/ 的/ 部署/ 方式/ 则/ 可以/ 支持/ 数十/ 、/ 甚至/ 数百个/ 租户/ [/ 3/ ]/ ./ 目前/ ,/ 共享/ 中间件/ 已经/ 成为/ 一种/ 较为/ 普遍/ 的/ 云/ 计算/ 部署/ 方式/ ,/ 但/ 在/ 租户/ 隔离/ 方面/ (/ 如/ 性能/ 、/ 安全/ )/ 仍/ 存在/ 诸多/ 技术/ 挑战/ ./ 本文/ 主要/ 关注/ 性能/ 隔离/ (/ performanceisolation/ )/ 相关/ 技术/ 研究/ ./ 租户/ 难以/ 完全/ 信赖/ ,/ 可能/ 存在/ 恶意/ 侵占/ 资源/ 的/ 行为/ ,/ 称之为/ 侵占/ 型/ 租户/ (/ aggressivetenant/ )/ ./ 即使/ 同一/ 组织/ 内部/ 、/ 相互/ 信赖/ 的/ 多个/ 租户/ ,/ 仍/ 有/ 可能/ 由于/ 误操作/ 或/ 过载/ 而/ 导致/ 个别/ 租户/ 侵占/ 大量/ 资源/ ,/ 影响/ 其它/ 租户/ 性能/ ./ 性能/ 隔离/ 即/ 防止/ 租户/ 间/ 出现/ 由于/ 资源/ 侵占/ 而/ 产生/ 的/ 性能/ 干扰/ (/ performanceinterference/ )/ ./ 对于/ 电子商务/ 、/ 在线/ 支付/ 等/ 性能/ 关键/ (/ performancecritical/ )/ 服务/ ,/ 性能/ 隔离/ 至关重要/ ,/ 否则/ 将/ 导致/ 客户/ 损失/ 和/ 收益/ 损失/ ./ 在/ 共享/ 中间件/ 中/ 实现/ 性能/ 隔离/ 的/ 关键/ 是/ 控制/ 租户/ 对/ CPU/ 、/ 内存/ 等/ 资源/ 的/ 使用/ ,/ 其/ 前提条件/ 是/ 在线/ 获取/ 租户/ 的/ 资源/ 使用/ 情况/ [/ 4/ ]/ ./ Java/ 服务器/ 是/ 最为/ 广泛/ 使用/ 的/ 中间件/ 服务器/ 之一/ ,/ 但是/ 由于/ Java/ 语言/ 以及/ Java/ 虚拟机/ (/ JVM/ )/ 缺乏/ 资源/ 度量/ 机制/ ,/ 在/ 共享/ Java/ 服务器/ 中/ 进行/ 资源/ 在线/ 度量/ 仍/ 存在/ 技术/ 挑战/ ,/ 尤其/ 是/ 对/ CPU/ 资源/ 的/ 在线/ 度量/ [/ 5/ ]/ ./ 已有/ 工作/ 包括/ 本地/ 代码/ 库/ (/ nativecodelibraries/ )/ 、/ 程序转换/ (/ programtransformations/ )/ 等/ 方法/ ./ 基于/ 本地/ 代码/ 的/ 方法/ 需要/ 对/ 应用程序/ 的/ 源代码/ 或/ 二进制/ 文件/ 进行/ 探针/ 注入/ (/ probeinstrumentation/ )/ ./ 但是/ ,/ 在/ 共享/ 中间件/ 环境/ 下/ ,/ 中间件/ 平台/ 的/ 提供者/ 可能/ 无权/ 修改/ 租户/ 应用/ ./ 并且/ ,/ 方法/ 需要/ 调用/ 操作系统/ 级/ 的/ 本地/ 代码/ ,/ 本质/ 上/ 是/ 一种/ 基于/ 采样/ 的/ 度量/ 方法/ ,/ 精确度/ 依赖于/ 采样/ 时间/ 戳/ (/ samplingtimestamp/ )/ 的/ 精密/ 程度/ ./ 但/ 对于/ 事务/ 型/ 应用/ (/ transactionalapplication/ )/ ,/ 每次/ 请求/ 处理/ 所/ 使用/ 的/ CPU/ 时间/ 极短/ ,/ 对/ 时间/ 戳/ 的/ 精密度/ 要求/ 很/ 高/ ,/ 甚至/ 需要/ 修改/ 操作系统/ ,/ 因此/ 存在/ 系统/ 兼容性问题/ ./ 基于/ 程序转换/ 的/ 方法/ 将/ 程序/ 字节/ 码/ 流量/ 转换/ 为/ CPU/ 资源/ 的/ 使用量/ [/ 5/ ]/ ,/ 方法/ 不/ 依赖于/ 操作系统/ ,/ 但会/ 产生/ 较大/ 性能/ 开销/ (/ 大于/ 30/ %/ )/ [/ 6/ ]/ ./ 对于/ 在线/ 系统/ 而言/ ,/ 工业界/ 可容忍/ 的/ 开销/ 仅为/ 5/ %/ ./ 最近/ ,/ 一些/ 研究/ 工作/ 利用/ 多元回归/ 分析方法/ 估算/ 资源/ 使用量/ [/ 7/ ]/ ,/ 在/ 系统/ 兼容性/ 和/ 性能/ 开销/ 方面/ 具/ ①/ ②/ ③/ ④/ Page3/ 有/ 优势/ ,/ 但/ 已有/ 的/ 研究/ 工作/ 表明/ 此类/ 方法/ 难以/ 对/ 动态/ Web/ 系统/ 的/ 时变/ 资源/ 状态/ 进行/ 有效/ 评估/ ,/ 易/ 产生/ 较大/ 误差/ [/ 8/ ]/ ,/ 并且/ ,/ 方法/ 的/ 精确度/ 依赖于/ 长时间/ 、/ 高质量/ 的/ 观测/ 样本/ 作为/ 输入/ ,/ 容易/ 受到/ 由于/ 资源/ 竞争/ 造成/ 的/ 异常/ 点/ (/ outliers/ )/ 的/ 影响/ ./ 在/ 本文/ 中/ ,/ 我们/ 针对/ Java/ 中间件/ 服务器/ ,/ 提出/ 一种/ 基于/ Kalman/ 滤波/ [/ 9/ ]/ 的/ 多/ 租户/ Web/ 应用/ CPU/ 资源/ 动态/ 评估/ 方法/ ./ 方法/ 通过/ 近似/ 最优/ 的/ 方式/ 利用/ 可/ 观测/ 值/ 估算/ 不可/ 观测/ 值/ ,/ 并且/ 可/ 随着/ 新/ 的/ 观测/ 值/ 的/ 到来/ 更新/ 之前/ 的/ 估算/ 值/ ,/ 更/ 适用/ 于/ 时变/ 资源/ 状态/ 的/ 在线/ 评估/ ./ 文中/ 基于/ 该/ 方法/ 设计/ 实现/ 了/ 一个/ 租户/ 资源/ 评估/ 引擎/ ①/ ./ 通过/ 两个/ 实验/ 案例/ 分析方法/ 的/ 评估/ 效果/ 、/ 影响/ 因素/ 和/ 技术/ 难点/ :/ (/ 1/ )/ 电子商务/ 应用/ 测试/ 基准/ TPC/ -/ W/ ②/ ;/ (/ 2/ )/ 在线/ 软件开发/ 环境/ TrustieForge/ ③/ ./ 在/ 第/ 1/ 个/ 应用/ 案例/ 中/ ,/ 我们/ 针对/ 持续/ 变化/ 的/ 负载/ 环境/ ,/ 设计/ 了/ 一系列/ 实验/ ,/ 分析/ 滤波/ 参数设置/ 对于/ 资源/ 评估/ 精确度/ 的/ 影响/ ,/ 并/ 与/ 回归/ 分析方法/ 进行/ 比较/ ./ 在/ 第/ 2/ 个/ 应用/ 案例/ 中/ ,/ 我们/ 在/ 支撑/ 多个/ 软件开发/ 团队/ 的/ Forge/ 生产/ 环境/ 中/ ,/ 基于/ 本文/ 方法/ 设计/ 侵占/ 型/ 租户/ 检测/ 和/ 过载/ 保护/ 策略/ ,/ 对/ 方法/ 的/ 应用/ 效果/ 进行/ 了/ 验证/ ./ 本文/ 贡献/ 总结/ 如下/ :/ (/ 1/ )/ 我们/ 提出/ 了/ 基于/ Kalman/ 滤波/ 的/ 多/ 租户/ Web/ 应用/ CPU/ 资源/ 动态/ 评估/ 方法/ ./ 实验/ 结果表明/ ,/ 通过/ 设置/ 适当/ 的/ 参数/ ,/ 方法/ 可/ 动态/ 适应/ 持续/ 变化/ 的/ 负载/ 环境/ ,/ 并且/ 与/ 直接/ 度量/ 方法/ 相比/ ,/ 具有/ 可/ 接受/ 的/ 评估/ 误差/ ./ (/ 2/ )/ 在/ 实验/ 案例/ 中/ ,/ 我们/ 对/ 本文/ 方法/ 的/ 应用/ 效果/ 进行/ 经验/ 式/ 分析/ ./ 实验/ 结果表明/ ,/ 方法/ 可以/ 有效/ 检测/ 出/ 侵占/ 型/ 租户/ ,/ 并/ 避免/ 共享/ 中间/ 服务器/ CPU/ 过载/ ./ (/ 3/ )/ 方法/ 利用/ 生产/ 环境/ 中/ 常用/ 的/ 监测数据/ 进行/ 资源/ 评估/ ,/ 因此/ 不会/ 产生/ 性能/ 开销/ ./ 并且/ ,/ 方法/ 具有/ 非/ 侵入/ 性/ 和/ 操作系统/ 独立性/ ./ 本文/ 第/ 2/ 节对/ CPU/ 资源/ 动态/ 评估/ 问题/ 进行/ 形式化/ 描述/ ,/ 并/ 讨论/ 技术/ 挑战/ ;/ 第/ 3/ 节/ 给出/ 基于/ Kalman/ 滤波/ 的/ 动态/ 评估/ 方法/ ;/ 第/ 4/ 节/ 针对/ TPC/ -/ W/ 电子商务/ 应用/ 验证/ 方法/ 的/ 有效性/ ;/ 第/ 5/ 节/ 针对/ 在线/ 软件开发/ 环境/ 验证/ 方法/ 的/ 应用/ 效果/ ;/ 第/ 6/ 节/ 讨论/ 本文/ 方法/ 的/ 不足/ 与/ 未来/ 工作/ ;/ 第/ 7/ 节/ 比较/ 相关/ 研究/ 工作/ ;/ 最后/ 是/ 全文/ 结论/ ./ 2/ 问题/ 描述/ 本/ 节/ 首先/ 针对/ 多/ 租户/ Web/ 应用/ CPU/ 资源/ 动态/ 评估/ 问题/ 进行/ 形式化/ 描述/ ,/ 接着/ 讨论/ 利用/ 回归/ 分析方法/ 追踪/ 时变/ 资源/ 状态/ 的/ 技术/ 挑战/ ./ 2.1/ 问题/ 形式化/ 对/ 多/ 租户/ Web/ 应用/ 的/ CPU/ 资源/ 进行/ 动态/ 评估/ 的/ 前提条件/ 是/ 在线/ 收集/ 中间件/ 服务器/ 的/ 日志/ 信息/ ,/ 包括/ 租户/ 的/ 吞吐量/ 以及/ 中间件/ 服务器/ 的/ CPU/ 利用率/ ./ 上述/ 运行/ 时/ 信息/ 在/ 固定/ 的/ 时间/ 间隔/ 被/ 监测/ 记录/ ,/ 这种/ 时间/ 间隔/ 称为/ 监测/ 窗口/ ./ 为/ 方便/ 后文/ 的/ 讨论/ ,/ 对于/ 一个/ 宿主/ 了/ N/ 个/ 租户/ 的/ 中间件/ 服务器/ ,/ 我们/ 给出/ 以下/ 记号/ :/ 成/ 的/ 事务/ 数/ ;/ 平均/ 利用率/ ;/ T/ 表示/ 监测/ 窗口/ 长度/ ;/ Ni/ 表示/ 第/ i/ 个/ 租户/ (/ 1/ / i/ / N/ )/ 在/ 监测/ 窗口/ 内/ 完/ UCPU/ 表示/ 中间件/ 服务器/ 在/ 监测/ 窗口/ 内/ 的/ CPUSi/ 表示/ 第/ i/ 个/ 租户/ (/ 1/ / i/ / N/ )/ 所有/ 事务/ 的/ 平均/ 根据/ 效用/ 法则/ (/ UtilizationLaw/ )/ [/ 10/ ]/ ,/ 资源/ 利用/ 服务/ 时间/ (/ 即/ 所有/ 事务/ 的/ CPU/ 平均/ 占用/ 时间/ )/ ./ 率/ 等于/ 吞吐量/ 乘以/ 服务/ 时间/ ,/ 我们/ 可以/ 得到/ 等式/ :/ 由于/ 难以/ 精确度/ 量/ 服务/ 时间/ Si/ ,/ 我们/ 使用/ Ci/ 表示/ 其/ 近似值/ ,/ 进而/ 得到/ 资源/ 利用率/ 近似值/ UCPU/ 的/ 计算/ 等式/ :/ 可以/ 利用/ 统计分析/ 方法/ 求解/ Ci/ ./ 对于/ 此类/ 间接/ 逼近/ 问题/ 的/ 求解/ ,/ UCPU/ ,/ k/ 和/ UCPU/ ,/ k/ 的/ 误差/ 是/ 衡量/ 精确度/ 的/ 典型/ 指标/ ,/ 其中/ k/ 表示/ 监测/ 窗口/ 的/ 标示/ 号/ ./ 在/ 本文/ 中/ ,/ 我们/ 的/ 目标/ 是/ 如何/ 降低/ 真实/ 服务/ 时间/ Si/ 与/ 近似/ 服务/ 时间/ Ci/ 的/ 误差/ ./ 2.2/ 追踪/ 服务/ 时间/ 变化/ 一些/ 工作/ 利用/ 多元回归/ 分析方法/ 求解/ Ci/ ./ 但是/ 动态/ Web/ 系统/ 的/ 资源/ 状态/ 具有/ 时/ 变性/ ,/ 严重/ 影响/ 方法/ 的/ 精确度/ 和/ 适应性/ ./ 动态/ Web/ 系统/ 包含/ 用于/ 完成/ 各种/ 业务/ 逻辑/ 的/ 多种/ 事务/ ,/ 负载/ 组成/ (/ workloadmix/ )/ 则/ 表示/ 系统/ 当前/ 负载/ 中/ 包含/ 的/ 各种/ 事务/ 的/ 组成/ 比例/ ./ 在/ 开放/ 环境/ 中/ ,/ 租户/ 的/ 负载/ 组成/ 不断/ 变化/ ,/ 导致/ 租户/ 所有/ 事务/ 的/ 平均/ 服务/ 时间/ 也/ 不断/ 变化/ ./ 例如/ ,/ 工业/ 级/ 的/ 电子商务/ 测试/ 基准/ TPC/ -/ W/ 定义/ 了/ 14/ 种/ 事务/ ①/ ②/ ③/ Page4/ 操作/ ,/ 包括/ 网上/ 书店/ 的/ 浏览/ 、/ 查询/ 以及/ 订单/ 等/ 事务/ 操作/ ./ 这/ 14/ 种/ 事务/ 可/ 被/ 分为/ 浏览/ 型/ 和/ 订单/ 型/ 两类/ ,/ 并/ 根据/ 不同/ 的/ 组成/ 比例/ ,/ 定义/ 了/ 如表/ 1/ 所示/ 的/ 3/ 种/ 负载/ 组成/ 模式/ (/ 浏览/ 、/ 购物/ 、/ 订单/ )/ ./ 下面/ 通过/ 一个/ 简单/ 实验/ 说明/ 负载/ 组成/ 与/ 事务/ 服务/ 时间/ 的/ 关系/ ./ 针对/ 3/ 种/ 负载/ 组成/ 模式/ ,/ 我们/ 分别/ 在/ 10/ ~/ 600/ 的/ 单/ 租户/ 并发/ 规模/ 下/ 进行/ 测试/ ,/ 并/ 统计/ 事务/ 吞吐/ 率/ 和/ CPU/ 平均/ 利用率/ ,/ 随后/ 利用/ 等式/ (/ 1a/ )/ 计算/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ ./ 实验/ 结果/ 如图/ 2/ 所示/ ,/ 对于/ 特定/ 的/ 负载/ 组成/ 模式/ ,/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 在/ 不同/ 并发/ 规模/ 下/ 基本相同/ ,/ 但是/ 不同/ 负载/ 组成/ 模式/ 的/ 平均/ 服务/ 时间/ 在/ 同一/ 并发/ 规模/ 下/ 却/ 存在/ 着/ 较大/ 差异/ ./ 表/ 1TPC/ -/ W/ 基准/ 测试/ 中/ 的/ 事务/ 类型/ 和/ 组成/ 模式/ 事务/ 类型/ 浏览/ 模式/ 购物/ 模式/ 订单/ 模式/ 浏览/ 相关/ 95.00/ %/ 80.00/ %/ 50.00/ %/ 订单/ 相关/ 5.00/ %/ 20.00/ %/ 50.00/ %/ 图/ 23/ 种/ 负载/ 组成/ 模式/ 下/ 的/ 事务/ 平均/ 服务/ 时间/ 另外/ ,/ 回归/ 分析方法/ 的/ 精确度/ 还/ 依赖于/ 长时间/ 、/ 高质量/ 的/ 样本/ 作为/ 输入/ ,/ 容易/ 受到/ 由于/ 资源/ 竞争/ 造成/ 的/ 异常/ 点/ 的/ 影响/ ./ 下面/ 通过/ 一个/ 简单/ 实验/ 说明/ 事务/ 吞吐/ 率/ 与/ CPU/ 利用率/ 的/ 关系/ ./ 在/ 单个/ 租户/ 的/ 3/ 种/ 负载/ 组成/ 模式/ 下/ ,/ 租户/ 的/ 访问/ 并发/ 量/ 随机/ 变化/ ,/ 在/ 一组/ 长度/ 为/ 1min/ 的/ 监测/ 窗口/ 中/ ,/ 我们/ 将/ 吞吐/ 率/ 按照/ CPU/ 利用率/ 进行/ 归类/ 统计/ ,/ 得到/ 如图/ 3/ 所示/ 的/ 吞吐/ 率/ 剖面/ (/ profile/ )/ ./ 可以/ 看出/ ,/ 3/ 种/ 负载/ 组成/ 模式/ 下/ 的/ 吞吐/ 率/ 剖面/ 存在/ 差异/ ,/ 这/ 与/ 我们/ 的/ 预计/ 相同/ ./ 但是/ ,/ 我们/ 也/ 发现/ 曲线/ 中/ 存在/ 较/ 多/ 的/ 异常/ 点/ ./ 这些/ 异常/ 点/ 通常/ 是/ 由于/ 资源/ 竞争/ 而/ 导致/ 在/ 异常/ CPU/ 利用率/ 情况/ 下/ 出现/ 较/ 小/ 的/ 吞吐/ 率/ 而/ 产生/ 的/ ./ 由于/ 回归/ 分析方法/ 需要/ 最小化/ 所有/ 样本/ 点/ 的/ 绝对误差/ ,/ 当/ 存在/ 较/ 多/ 异常/ 样本/ 点时/ ,/ 方法/ 精确度/ 将/ 受到/ 严重/ 影响/ ./ 一种/ 改进/ 的/ 方法/ 是/ 对/ 最近/ 的/ 监测/ 样本/ 进行/ 异常/ 点/ 过滤/ 和/ 回归/ 分析/ ./ 但是/ ,/ 对于/ 存在/ N/ 个/ 租户/ 的/ 共享/ 中间件/ 服务器/ 而言/ ,/ 通常/ 需要/ N/ +/ 1/ 个/ 监测/ 窗口/ 的/ 时间/ 来/ 收集/ 多元回归/ 的/ 样本/ ./ 考虑/ 到/ 存在/ 异常/ 样本/ ,/ 则/ 需要/ 更长/ 的/ 采样/ 时间/ ,/ 如果/ 在此期间/ 负载/ 组成/ 出现/ 较大/ 变化/ ,/ 则/ 会/ 影响/ 回归/ 分析/ 的/ 结果/ ./ 综上/ 分析/ ,/ 回归/ 分析方法/ 难以/ 满足/ 共享/ 中间件/ 服务器/ 环境/ 下/ 、/ 具有/ 时变/ 特征/ 的/ 多/ 租户/ CPU/ 资源/ 的/ 评估/ 需求/ ./ 我们/ 由此/ 需要/ 研究/ 新/ 的/ 方法/ 用于/ 追踪/ 服务/ 时间/ 的/ 变化/ ./ 3/ 基于/ Kalman/ 滤波/ 的/ CPU/ 资源/ 动态/ 评估/ 3.1/ Kalman/ 滤波器/ Kalman/ 滤波/ [/ 9/ ]/ 在/ 自动控制/ 和/ 辅助/ 导航/ 领域/ 得到/ 了/ 广泛/ 的/ 使用/ 和/ 研究/ ,/ 其/ 最大/ 的/ 特点/ 是/ 可以/ 用/ 一种/ 近似/ 最优/ 的/ 方式/ 基于/ 可/ 观测/ 值/ 估算/ 不可/ 观测/ 值/ ,/ 并且/ 可/ 随着/ 新/ 的/ 观测/ 值/ 的/ 到来/ 更新/ 之前/ 的/ 估算/ 值/ ,/ 因此/ 更/ 适用/ 于/ 时变/ 资源/ 状态/ 的/ 在线/ 评估/ ./ Kalman/ 滤波/ 提供/ 了/ 一个/ 在/ 离散/ 时间/ 点/ ,/ 估算/ 不可/ 观测/ 状态/ 狓/ 的/ 通用/ 方法/ ./ 第/ k/ 时刻/ 状态/ 狓/ k/ 可以/ 定义/ 为/ 一个/ 线性/ 随机/ 差分/ 方程/ :/ 第/ k/ 时刻/ 测量/ 值/ zk/ 定义/ 为/ 其中/ ,/ 犃/ 是从/ k/ -/ 1/ 时刻/ 到/ k/ 时刻/ 状态/ 转换/ 矩阵/ ,/ 狑/ k/ -/ 1/ 为/ 过程/ 误差/ ,/ 其/ 协方差/ 矩阵/ 为/ 犙/ k/ -/ 1/ ./ 犎/ k/ 是/ 狓/ k/ 到/ zk/ 的/ 转换/ 矩阵/ ,/ vk/ 是/ 观测/ 误差/ ,/ 其/ 协方差/ 矩阵/ 为/ 犚/ k/ ./ 3.2/ 基于/ Kalman/ 滤波/ 的/ 多/ 租户/ CPU/ 资源/ 动态/ 评估/ 图/ 4/ 显示/ 了/ 基于/ Kalman/ 滤波/ 的/ 多/ 租户/ Web/ 应用/ 资源/ 评估/ 引擎/ 的/ 逻辑/ 架构/ ./ 我们/ 首先/ 将/ 不可/ 观测/ 状态/ 狓/ 建模/ 为/ 包含/ N/ 个/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 的/ N/ 维/ 向量/ 狓/ k/ =/ (/ Ck/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ ./ 然后/ ,/ 根据/ 等式/ (/ 1b/ )/ 对/ 观测/ 得到/ 的/ 总/ CPU/ 利用率/ 狕/ k/ 进行/ 建模/ ,/ 得到/ 其中/ ,/ Nki/ 表示/ 监测/ 得到/ 的/ 租户/ i/ 的/ 吞吐/ 率/ ,/ 犎/ k/ 则/ 定/ (/ 义为/ Nk1T/ ,/ NkKalman/ 滤波器/ 算法/ 在/ 每个/ 监测/ 窗口/ 的/ 结束/ 时/ Page5/ 图/ 4/ 基于/ Kalman/ 滤波/ 的/ 资源/ 评估/ 引擎/ 的/ 逻辑/ 架构/ 进行/ 服务/ 时间/ 的/ 迭代/ 评估/ ,/ 初始值/ 包括/ 状态/ 初始值/ 狓/ ^/ 0/ 以及/ 初始/ 的/ 误差/ 协方差/ 矩阵/ 犘/ 0/ ./ 迭代/ 过程/ 如下/ :/ (/ 1/ )/ 向前/ 推算/ 狓/ 的/ 状态/ :/ (/ 2/ )/ 向前/ 推算/ 状态/ 先验/ 估计/ 误差/ 的/ 协方差/ 矩阵/ 犘/ -/ k/ :/ (/ 3/ )/ 计算/ Kalman/ 增益/ 犓/ k/ :/ (/ 4/ )/ 由/ 观测/ 变量/ zk/ 更新/ 狓/ 的/ 状态/ :/ (/ 5/ )/ 更新/ 状态/ 后验/ 估计/ 误差/ 的/ 协方差/ 矩阵/ 犘/ k/ :/ 迭代/ 过程/ 中/ ,/ 第/ 4/ 步/ 修正/ 狓/ 的/ 状态/ 是/ 估算/ 值/ 更新/ 的/ 关键/ ,/ 该/ 等式/ 可以/ 简化/ 为/ 狓/ new/ =/ 狓/ old/ +/ 犓/ ·/ 犲/ 的/ 形式/ ,/ 即/ Kalman/ 增益/ 犓/ 可以/ 看作/ 修正/ 狓/ 的/ 权重/ 矩阵/ ,/ 利用/ 误差/ 犲/ 和/ 相应/ 的/ 权重/ 修正/ 狓/ old/ 的/ 数据/ ./ 同时/ ,/ 在/ 第/ 4/ 步/ 计算/ 中/ ,/ 还/ 需要/ 考虑/ 设置/ 每个/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 的/ 估值/ 范围/ ,/ 即非/ 负且/ 小于/ 某个/ 上/ 界/ :/ 其中/ ,/ uk/ 表示/ 估值/ 上界/ ./ 在/ 本文/ 中/ ,/ 我们/ 设置/ 状态/ 狓/ 的/ 最大值/ 小于/ 这一/ 上界/ :/ 其中/ 设置/ μ/ =/ 0.9/ ,/ 且/ uk/ =/ Uk/ 计算/ 修正/ 为/ 3.3/ 滤波器/ 参数/ 影响/ 滤波器/ 的/ 参数设置/ 是/ 影响/ 方法/ 精确度/ 和/ 适应性/ 关键/ ./ 参数设置/ 包括/ 犙/ 和/ 犚/ 矩阵/ 、/ 初始状态/ 向量/ 及/ 误差/ 协方差/ 以及/ 监测/ 窗口/ 长度/ 等/ ./ 3.3/ ./ 1/ 设置/ 犙/ 和/ 犚/ 犙/ 和/ 犚/ 矩阵/ 影响/ Kalman/ 增益/ 犓/ ,/ 因此/ 影响/ 滤波器/ 对/ 新/ 观测/ 数据/ 的/ 反应/ ./ 实际/ 中/ ,/ 犙/ 矩阵/ 是/ 不/ 可知/ 的/ ,/ 但/ 如果/ 犙/ 设置/ 过大/ ,/ 则/ 会/ 增大/ 迭代/ 的/ 误差/ 协方差/ 矩阵/ 犘/ ,/ 进而/ 增大/ Kalman/ 增益/ 犓/ ,/ 导致/ 滤波器/ 对/ 评估/ 误差/ 反应/ 过大/ ,/ 最终/ 造成/ 评估/ 结果/ 抖动/ ;/ 如果/ 犙/ 设置/ 过/ 小/ ,/ 则/ 会/ 降低/ Kalman/ 增益/ 犓/ ,/ 最终/ 降低/ 滤波器/ 对/ 评估/ 误差/ 的/ 响应/ 性/ ,/ 难以/ 追踪/ 服务/ 时间/ 变化/ ./ 在/ 本文/ 中/ ,/ 我们/ 的/ 应对/ 策略/ 是/ 将/ 犙/ k/ 设置/ 为/ 对角/ 矩阵/ ,/ 且/ 对角线/ 元素/ 利用/ 前/ 三次/ 迭代/ 产生/ 的/ 狓/ 值/ 动态/ 计算/ 获得/ ,/ 即/ 犙/ k/ =/ diag/ (/ ξ/ 1/ ,/ ξ/ 2/ ,/ …/ ,/ ξ/ N/ )/ ,/ 且/ ξ/ i/ =/ (/ Ci/ ,/ k/ -/ 1/ -/ Ci/ ,/ k/ -/ 2/ +/ Ci/ ,/ k/ -/ 3/ 的/ 测量误差/ 的/ 协方差/ 矩阵/ ,/ 因此/ 可以/ 在/ 服务器/ 空载/ 状态/ 下/ 统计/ 获得/ ./ 4.2/ ./ 3/ 节/ 的/ 实验/ 结果显示/ 犙/ 和/ 犚/ 矩阵/ 设置/ 的/ 正确/ 与否/ 对/ 评估/ 精确度/ 存在/ 较大/ 影响/ ./ 3.3/ ./ 2/ 设置/ 初始状态/ 向量/ 及/ 误差/ 协方差/ 一些/ 研究/ 工作/ 认为/ 初始状态/ 向量/ 及/ 误差/ 协方差/ 的/ 设置/ 对/ 评估/ 结果/ 影响/ 较/ 小/ ./ 但是/ ,/ 我们/ 发现/ 设置/ 适当/ 的/ 初始状态/ 向量/ ,/ 并/ 利用/ 转换/ 矩阵/ 犃/ 对/ 每次/ 迭代/ 的/ 输入/ 状态/ 向量/ 进行/ 动态/ 修正/ ,/ 可以/ 提高/ 方法/ 收敛性/ (/ 见/ 4.2/ 节/ )/ ./ 我们/ 根据/ 排队/ 论/ ,/ 在/ 各/ 监测/ 窗口/ 内/ ,/ 对/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 进行/ 估算/ [/ 11/ ]/ ,/ 设置/ 初值/ 状态/ 向量/ 和/ 犃/ 矩阵/ 的/ 取值/ ,/ 等式/ (/ 4a/ )/ 修正/ 为/ 当/ k/ =/ 1/ 时/ ,/ 初始状态/ 向量/ 狓/ ^/ 0/ 的/ 各/ 参数设置/ 为/ Ci/ ,/ 1/ =/ rti/ ,/ 1/ (/ 1/ -/ UCPU/ ,/ 1/ )/ ,/ 其中/ rti/ ,/ 1/ 表示/ 在/ 第一个/ 监测/ 窗口/ 内/ 租户/ i/ 的/ 事务/ 平均/ 响应/ 时间/ ./ 另外/ ,/ 因为/ 各/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 是/ 独立/ 的/ ,/ 所以/ 设置/ 初始状态/ 向量/ 的/ 误差/ 协方差/ 犘/ 0/ 为/ 一个/ 对角/ 矩阵/ :/ 犘/ 0/ =/ diag/ (/ (/ C0/ 数/ 初始值/ 的/ 平方/ ./ 当/ k/ >/ 1/ 时/ ,/ 设置/ 转换/ 矩阵/ 犃/ k/ =/ (/ C1/ ,/ k/ // C1/ ,/ k/ -/ 1/ ,/ C2/ ,/ k/ // C2/ ,/ k/ -/ 1/ ,/ …/ ,/ Ci/ ,/ k/ // Ci/ ,/ k/ -/ 1/ ,/ …/ ,/ CN/ ,/ k/ // CN/ ,/ k/ -/ 1/ )/ ,/ 其中/ Ci/ ,/ k/ =/ rti/ ,/ k/ (/ 1/ -/ UCPU/ ,/ k/ )/ ,/ 表示/ 在/ 第/ k/ 个/ 监测/ 窗口/ 第/ i/ 个/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 的/ 预测值/ ./ 利用/ 转换/ 矩阵/ 动态/ 修正/ 滤波器/ 的/ 输入/ 状态/ ,/ 本质/ 上/ 是/ 增加/ 了/ 观测/ 参数/ ,/ 有利于/ 提高/ 方法/ 收敛性/ [/ 12/ ]/ ./ 3.3/ ./ 3/ 设置/ 监测/ 窗口/ 长度/ 文中/ 滤波器/ 的/ 迭代/ 步长/ 即/ 为/ 监测/ 窗口/ 长度/ ./ 在/ 监测/ 窗口/ 中/ ,/ 方法/ 需要/ 获得/ 各/ 租户/ 的/ 吞吐量/ Nk/ 均/ 响应/ 时间/ rti/ ,/ k/ 以及/ 总/ CPU/ 利用率/ zk/ ,/ 这些/ 数据/ 是/ 在/ 监测/ 窗口/ 内/ 采样/ 并/ 计算/ 平均值/ 获得/ ./ 因此/ ,/ 较长/ 的/ 监测/ 窗口/ 内会/ 提高/ 监测数据/ 的/ 精确度/ ,/ 但/ 也/ 会/ 降低/ Page6/ 方法/ 对/ 服务/ 时间/ 变化/ 的/ 适应性/ ./ 相反/ ,/ 较/ 短/ 的/ 监测/ 窗口/ 可以/ 快速/ 追踪/ 服务/ 时间/ 的/ 变化/ ,/ 但/ 代价/ 是/ 增大/ 了/ 监测/ 数据误差/ ,/ 最终/ 影响/ 方法/ 的/ 评估/ 精确度/ ./ 在/ 4.2/ ./ 4/ 节中/ ,/ 我们/ 将/ 在/ 持续/ 变化/ 的/ 负载/ 环境/ 下/ ,/ 分析/ 监测/ 窗口/ 长度/ 对/ 方法/ 精确度/ 的/ 影响/ ./ 3.4/ 收敛性/ 与/ 复杂度/ 上述/ Kalman/ 滤波/ 迭代/ 计算/ 的/ 收敛/ 条件/ 是/ ,/ 等式/ (/ 3/ )/ 是/ 线性/ 的/ ,/ 且/ 满足/ 可/ 识别/ 条件/ (/ identifiabilitycondition/ )/ [/ 12/ ]/ ./ 可/ 识别/ 条件/ 要求/ 观测/ 数据/ 至少/ 与/ 状态/ 向量/ 狓/ 的/ 参数/ 数量/ 相等/ ,/ 且/ 各/ 观测/ 数据/ 间/ 是/ 不/ 相关/ 的/ (/ noncorrelated/ )/ ./ 在/ 本文/ 中/ ,/ 易知/ 等式/ (/ 3/ )/ 是/ 线性/ 的/ ,/ 同时/ ,/ 方法/ 对/ 每个/ 租户/ 的/ 事务/ 吞吐/ 率/ 进行/ 监测/ ,/ 观测/ 数据/ 等于/ 状态/ 向量/ 狓/ 中/ 的/ 参数/ 数量/ ,/ 并且/ ,/ 各/ 租户/ 的/ 事务/ 吞吐/ 率/ 之间/ 是/ 独立/ 的/ ,/ 因此/ 满足/ Kal/ -/ man/ 滤波/ 的/ 收敛/ 条件/ ./ 本/ 方法/ 一次/ 迭代/ 的/ 复杂度/ 为/ O/ (/ N3/ )/ ,/ N/ 为/ 宿主/ 在/ 同一/ 中间件/ 服务器/ 上/ 的/ 租户/ 数量/ ./ 因为/ 观测/ 值/ z/ 定义/ 为/ CPU/ 总/ 利用率/ ,/ 而/ 犎/ 和/ 犓/ 是/ 向量/ ,/ 所以/ 式/ (/ 4c/ )/ 中求/ 逆/ 退化/ 对/ 一个/ 数求/ 倒数/ ./ 剩下/ 复杂度/ 最高/ 的/ 计算/ 是/ 式/ (/ 4e/ )/ 所/ 对应/ 的/ 步骤/ ,/ 其/ 复杂度/ 为/ O/ (/ N3/ )/ ./ 因此/ 方法/ 总/ 的/ 复杂度/ 为/ O/ (/ N3/ )/ ./ 4/ 实验/ 案例/ 1/ :/ TPC/ -/ W/ 电子商务/ 应用/ 本/ 节/ 针对/ TPC/ -/ W/ 电子商务/ 应用/ 设计/ 了/ 一系列/ 实验/ ,/ 分析/ 滤波/ 参数设置/ 对/ 资源/ 评估/ 精确度/ 的/ 影响/ ,/ 并且/ ,/ 在/ 4.2/ ./ 5/ 节/ 与/ 文献/ [/ 7/ ]/ 中/ 使用/ 的/ 回归/ 分析方法/ 进行/ 了/ 比较/ ./ 4.1/ 实验/ 方法/ 与/ 环境/ 选用/ TPC/ -/ W/ 基准/ 测试/ 作为/ 实验/ 基础/ ./ TPC/ -/ W/ 是/ 一个/ 广泛/ 使用/ 的/ 电子商务/ 测试/ 基准/ ./ 实验/ 选用/ 了/ 中国科学院/ 软件/ 研究所/ 软件工程/ 技术/ 中心/ 研发/ 的/ 符合/ TPC/ -/ W/ 基准/ 规范/ 的/ Bench4Q/ 测试/ 套件/ ①/ ,/ 可/ 模拟/ 复杂/ 、/ 可控/ 的/ 多/ 租户/ 访问/ 负载/ ./ 如图/ 5/ ,/ 实验/ 环境/ 是/ 一个/ 典型/ 的/ 两层/ 架构/ 系统/ ,/ 包括/ :/ 1/ 个/ Tomcat/ 中间件/ 服务器/ 和/ 1/ 个/ DB2/ 数据库/ 服务器/ ;/ 3/ 个/ 客户端/ 模拟/ 标示/ 为/ “/ 租户/ 1/ ”/ 、/ “/ 租户/ 2/ ”/ 、/ “/ 租户/ 3/ ”/ 的/ 3/ 个/ 租户/ 负载/ ,/ 访问/ 部署/ 在/ Tomcat/ 上/ 的/ 电子商务/ 应用/ ;/ 资源/ 评估/ 引擎/ 收集/ Tomcat/ 的/ 运行/ 时/ 日志/ 信息/ ./ 表/ 2/ 给出/ 了/ 软硬件/ 环境/ 的/ 具体/ 信息/ ./ 我们/ 将/ Tomcat/ 分别/ 运行/ 在/ WindowsServer/ (/ 2003/ )/ 和/ Linux/ (/ 2.6/ ./ 18/ )/ 两个/ 操作系统/ 环境/ 下/ 进行/ 测试/ ,/ 评估/ 结果/ 具有/ 相似/ 特征/ ,/ 表示/ 方法/ 具有/ 操作系统/ 独立性/ ./ 受/ 篇幅/ 所/ 限/ ,/ 下面/ 我们/ 仅/ 给出/ Windows/ 环境/ 下/ 的/ 测试/ 结果/ ./ 租户/ 负载/ 生成器/ Java/ 中间件/ 服务器/ (/ Tomcat6/ ./ 0/ )/ 数据库/ 服务器/ (/ DB2/ -/ V9/ ./ 5/ )/ PentiumIV/ // 3.8/ GHz21/ 资源/ 评估/ 引擎/ 实验/ 中/ 方法/ 评估/ 误差/ 的/ 计算/ 方式/ 如下/ :/ 在/ 每次/ 测试/ 中/ ,/ 每隔/ 30s/ 计算/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 的/ 相对误差/ 绝对值/ ei/ =/ Cnew/ 最新/ 的/ 评估/ 结果/ ,/ Snew/ 的/ 事件/ 追踪/ 机制/ 得到/ 的/ 服务/ 时间/ 直接/ 度量/ 值/ ②/ ,/ 接着/ 计算/ 每次/ 测试/ 的/ 平均/ 相对误差/ 绝对值/ (/ MeanAbsoluteRelativeError/ ,/ MARE/ )/ ./ 图/ 6/ 表示/ 所/ 生成/ 的/ 3/ 个/ 租户/ 负载/ ./ X/ 轴/ 表示/ 时间/ ,/ Y/ 轴/ 表示/ 并发/ 用户数/ ,/ 可以/ 看到/ ,/ 每个/ 租户/ 的/ 负载/ 大小/ 随/ 时间/ 持续/ 变化/ ./ 负载/ 组成/ 分为/ 固定/ 和/ 变化/ 两种/ ,/ 前者/ 表示/ 所有/ 租户/ 负载/ 起/ 始于/ 相同/ 的/ 负载/ 组成/ ,/ 且/ 测试/ 过程/ 中/ 保持/ 不变/ ,/ 后者/ 则/ 表示/ 租户/ 的/ 负载/ 组成/ 以/ 一定/ 长度/ 的/ Tchange/ 为/ 变化/ 周期/ ,/ 交替/ 生成/ 3/ 种/ 负载/ 组成/ 模式/ ./ 4.2/ 实验/ 结果/ 及/ 分析/ 4.2/ ./ 1/ 追踪/ 服务/ 时间/ 变化/ 在/ 该/ 实验/ 中/ ,/ 我们/ 分析/ 本文/ 方法/ 在/ 负载/ 组成/ 变化/ 情况/ 下/ ,/ 对/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 的/ 评估/ 效果/ ./ ①/ ②/ Page7/ 如图/ 6/ 所示/ ,/ 每个/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 随着/ 浏览/ 、/ 购物/ 以及/ 订单/ 3/ 种/ 负载/ 组成/ 模式/ 的/ 交替/ 而/ 变化/ ./ 实验/ 中/ ,/ 设置/ 负载/ 组成/ 的/ 变化/ 周期/ Tchange/ =/ 1800s/ ,/ 评估/ 方法/ 的/ 监测/ 窗口/ 长度/ 设置/ 为/ T/ =/ Tchange/ // 10/ =/ 180s/ (/ 远/ 小于/ Tchange/ )/ ./ 滤波器/ 初始状态/ 向量/ 及/ 误差/ 协方差/ 矩阵/ 根据/ 3.3/ 节/ 提供/ 的/ 方法/ 进行/ 设置/ ,/ Q0/ =/ diag/ (/ 1/ ,/ 1/ ,/ 1/ )/ ./ 图/ 7/ 显示/ 了/ 方法/ 追踪/ 服务/ 时间/ 变化/ 的/ 实验/ 数据/ ./ X/ 轴/ 表示/ 时间/ ,/ Y/ 轴/ 表示/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ ./ 图中/ 曲线/ “/ 租户/ N/ 评估/ 值/ ”/ 表示/ 实验/ 中/ 每个/ 监测/ 窗口/ 内/ 租户/ N/ 的/ 事务/ 平均/ 服务/ 时间/ 评估/ 值/ 的/ 变化/ ,/ 曲线/ “/ 租户/ N/ 监测/ 值/ ”/ 表示/ 相应/ 的/ 直接/ 度量/ 值/ 的/ 变化/ ./ 实验/ 数据/ 显示/ ,/ 与/ 直接/ 度量/ 值/ 相比/ ,/ 当/ 负载/ 组成/ 变化/ 时/ ,/ 方法/ 需要/ 经过/ 最多/ 4/ 个/ 监测/ 窗口/ 的/ 延迟/ ,/ 然后/ 评估/ 值会/ 收敛/ 到/ 直接/ 度量/ 值/ 附近/ ,/ 反映/ 出/ 良好/ 的/ 收敛/ 效果/ 和/ 对/ 服务/ 时间/ 变化/ 的/ 适应性/ ./ 4.2/ ./ 2/ 犙/ 和/ 犚/ 的/ 设置/ 与/ 调整/ 在/ 该/ 实验/ 中/ ,/ 分析/ 犙/ 和/ 犚/ 矩阵/ 设置/ 对/ 评估/ 结果/ 的/ 影响/ ./ 首先/ ,/ 将/ 犙/ 矩阵/ 根据/ α/ 因子/ 增大/ 或/ 减小/ ,/ α/ 的/ 取值/ 范围/ 是/ 0.01/ 到/ 100/ ./ 图/ 8/ (/ a/ )/ 、/ (/ b/ )/ 分别/ 显示/ 在/ 负载/ 组成/ 固定/ (/ 购物/ 模式/ )/ 和/ 变化/ 环境/ 下/ 的/ 方法/ 精确度/ ./ X/ 轴/ 表示/ 不同/ 犙/ 矩阵/ 设置/ ,/ Y/ 轴/ 表示/ MARE/ 及其/ 标准偏差/ ./ 对比/ 实验/ 数据/ ,/ 可以/ 观察/ 到/ :/ (/ 1/ )/ 如图/ 8/ (/ a/ )/ 所示/ ,/ 在/ 负载/ 组成/ 固定/ 时/ ,/ 曲线/ “/ 静态/ 犙/ ”/ 表示/ 在/ α/ 因子/ 变化/ 得到/ 的/ 不同/ 静态/ 犙/ 矩阵/ 情况/ 下/ ,/ 3/ 个/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 的/ 评估/ 误差/ ;/ 曲线/ “/ 动态/ 犙/ ”/ 表示/ 采用/ 3.3/ 节中/ 动态/ 犙/ 矩阵/ 设置/ 时/ 的/ 评估/ 误差/ ./ 实验/ 数据/ 显示/ ,/ 评估/ 误差/ 均/ 小于/ 7/ %/ ./ (/ 2/ )/ 如图/ 8/ (/ b/ )/ 所示/ ,/ 在/ 负载/ 组成/ 变化/ 时/ ,/ 静态/ 犙/ 矩阵/ 设置/ 的/ 评估/ 误差/ 大于/ 40/ %/ ,/ 而/ 动态/ 犙/ 矩阵/ 设置/ 的/ 评估/ 误差/ 则/ 小于/ 5/ %/ ./ 上述/ 观察/ 表明/ ,/ 当/ 负载/ 组成/ 固定/ 时/ ,/ 动态/ 更新/ 犙/ 矩阵/ 并/ 不会/ 影响/ 方法/ 精确度/ ,/ 反之/ ,/ 则/ 需要/ 在/ 方法/ 迭代/ 时/ 根据/ 近期/ 追踪/ 数据/ 对/ 犙/ 矩阵/ 进行/ 更新/ ./ 接下来/ 分析/ 犚/ 矩阵/ 设置/ 对/ 方法/ 精确度/ 的/ 影响/ ./ 犚/ 矩阵/ 根据/ β/ 因子/ 增大/ 或/ 减小/ ,/ β/ 的/ 取值/ 范围/ 是/ 0.01/ 到/ 100/ ./ 图/ 9/ (/ a/ )/ 、/ (/ b/ )/ 分别/ 显示/ 了/ 方法/ 在/ 负载/ 组/ Page8/ 成/ 固定/ (/ 购物/ 模式/ )/ 和/ 变化/ 环境/ 下/ ,/ 不同/ 犚/ 矩阵/ 设置/ 的/ 方法/ 精确度/ ./ 实验/ 数据/ 显示/ ,/ 在/ 上述/ 环境/ 下/ ,/ 方法/ 精确度/ 均/ 受到/ 犚/ 矩阵/ 设置/ 的/ 影响/ ,/ 随着/ 犚/ 矩阵/ 值/ 增大/ 时/ ,/ 方法/ 对/ 观测/ 数据/ 的/ 适应性/ 降低/ ,/ 评估/ 误差/ 持续增长/ ./ 4.2/ ./ 3/ 状态/ 向量/ 的/ 初始/ 设置/ 与/ 调整/ 在/ 该/ 实验/ 中/ ,/ 分析/ 状态/ 向量/ 的/ 初始/ 设置/ 以及/ 动态/ 调整/ 对/ 评估/ 结果/ 的/ 影响/ ./ 图/ 10/ (/ a/ )/ 、/ (/ b/ )/ 分别/ 显示/ 了/ 在/ 负载/ 组成/ (/ 购物/ 模式/ )/ 固定/ 和/ 变化/ 环境/ 下/ 的/ 方法/ 精确度/ ./ X/ 轴/ 表示/ 4/ 个/ 不同/ 狓/ ^/ 0/ 设置/ :/ 狓/ ^/ 0C3/ ,/ 1/ )/ ;/ 狓/ ^/ 1/ 图/ 10/ 不同/ 狓/ ^/ 0/ 设置/ 下/ 的/ MARE/ 为/ 验证/ 这一/ 推断/ ,/ 我们/ 修改/ 了/ TPC/ -/ W/ 电子商务/ 应用/ ,/ 在/ 其中/ 两个/ 租户/ 的/ 事务/ 中/ 注入/ CPU/ 密集型/ 操作/ ./ 图/ 11/ 显示/ 了/ 修改/ 后/ ,/ 在/ 负载/ 组成/ 变化/ 环境/ 下/ 的/ 实验/ 数据/ ./ 可以/ 看到/ ,/ 在/ 对/ 状态/ 向量/ 设置/ 适当/ 的/ 初始值/ 并/ 进行/ 动态/ 调整/ 的/ 情况/ 下/ ,/ 评估/ 误差/ 小于/ 5/ %/ ,/ 而/ 其它/ 3/ 种/ 情况/ 的/ 评估/ 误差/ 则/ 大于/ 50/ %/ ./ 图/ 11/ 还/ 显示/ 了/ 状态/ 向量/ 各/ 参数/ 的/ 初始/ 设置/ 值/ 与/ 直接/ 度量/ 值/ 的/ 余弦/ 相似/ 度/ (/ cosinesimilarity/ )/ ./ 余弦/ 相似/ 度/ 是/ 一种/ 用于/ 比较/ 两个/ n/ 维/ 向量/ 的/ 相似/ 度/ 的/ 度量/ ,/ 相似/ 度/ 的/ 值域/ 为/ 0/ 到/ 1/ ./ 相似/ 度/ 接近/ 1/ 则/ 表示/ 两个/ 向量/ 越/ 近似/ ./ 如图/ 11/ 所示/ ,/ 可以/ 发现/ 狓/ ^/ 0/ 于/ 其它/ 3/ 种/ 设置/ ./ 上述/ 观察/ 表明/ ,/ 通过/ 设置/ 适当/ 的/ 初始状态/ 向量/ ,/ 并/ 利用/ 转换/ 矩阵/ 动态/ 修正/ 状态/ 向量/ ,/ 可/ 狓/ ^/ 30/ =/ (/ C2/ ,/ 3/ ,/ C2/ ,/ 3/ ,/ C2/ ,/ 3/ )/ ,/ 并且/ 对于/ 后/ 3/ 种/ 设置/ 不/ 进行/ 状态/ 向量/ 的/ 动态/ 调整/ ./ Y/ 轴/ 表示/ MARE/ 及其/ 标准偏差/ ./ 实验/ 结果显示/ ,/ 负载/ 组成/ 固定/ 时/ ,/ 评估/ 误差/ 小于/ 5/ %/ ,/ 负载/ 组成/ 变化/ 时/ ,/ 评估/ 误差/ 也/ 小于/ 10/ %/ ./ 上述/ 观察/ 显示/ 状态/ 向量/ 的/ 初始/ 设置/ 及/ 动态/ 调整/ 对/ 评估/ 结果/ 的/ 影响/ 很小/ ./ 但是/ ,/ 产生/ 这一/ 现象/ 的/ 原因/ 可能/ 是/ 由于/ 各/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 存在/ 的/ 差异/ 并/ 不/ 显著/ (/ 如图/ 2/ 所示/ ,/ 浏览/ 模式/ 大约/ 为/ 25ms/ ,/ 购物/ 模式/ 大约/ 为/ 20ms/ ,/ 订单/ 模式/ 大约/ 为/ 15ms/ )/ ,/ 因此/ ,/ 状态/ 向量/ 的/ 初始/ 设置/ 及/ 动态/ 调整/ 对/ 方法/ 的/ 收敛/ 效果/ 影响/ 较/ 小/ ./ 以/ 提高/ 滤波器/ 的/ 收敛/ 速度/ ,/ 进而/ 提高/ 了/ 方法/ 精确度/ 和/ 适应性/ ./ 4.2/ ./ 4/ 监测/ 窗口/ 长度/ 的/ 设置/ 与/ 调整/ 在/ 前文/ 实验/ 中/ ,/ 我们/ 设置/ 负载/ 组成/ 的/ 变化/ 周期/ Tchange/ =/ 1800s/ ,/ 监测/ 窗口/ 长度/ 则/ 远/ 小于/ Tchange/ ,/ 设置/ 为/ T/ =/ 300s/ ./ 在/ 本节/ 实验/ 中/ ,/ 我们/ 减小/ 负载/ 组成/ 的/ 变化/ 周期/ 为/ Tchange/ =/ 300s/ ,/ 分析/ 不同/ 监测/ 窗口/ 长度/ 对/ 评估/ 结果/ 的/ 影响/ ./ 作为/ 比较/ ,/ 我们/ 还/ 在/ 负载/ 组成/ (/ 购物/ 模式/ )/ 固定/ 环境/ 下/ 进行/ 了/ 相同/ 的/ 实验/ ./ 图/ 12/ (/ a/ )/ 、/ (/ b/ )/ 分别/ 显示/ 在/ 负载/ 组成/ 固定/ 和/ 变化/ 环境/ 下/ 的/ 方法/ 精确度/ ./ X/ 轴/ 表示/ 不同/ 的/ 监测/ 窗口/ 长度/ 设置/ ,/ T/ =/ 10s/ ,/ 30s/ ,/ 60s/ ,/ 100s/ ,/ 200s/ ,/ 300s/ ,/ 400s/ ,/ 500s/ ,/ 600s/ ,/ Y/ 轴/ 表示/ MARE/ 及其/ 标准偏差/ ./ 对比/ 实验/ 数据/ ,/ 可以/ 观察/ 到/ :/ (/ 1/ )/ 在/ 负载/ 组成/ 固定/ 环境/ 下/ ,/ 如图/ 12/ (/ a/ )/ 所示/ ,/ 较长/ 的/ 监测/ 窗口/ 可以/ 获得/ 更/ 高/ 的/ 精确度/ ./ 但是/ ,/ 当/ 负载/ 组成/ 变化/ 时/ ,/ 较长/ 的/ 监测/ 窗口/ 设置/ 降低/ 了/ 方法/ 适应性/ ./ 如图/ 12/ (/ b/ )/ 所示/ ,/ 当/ T/ >/ 100s/ 时/ ,/ 由于/ 方法/ 需要/ 经过/ 1/ 至多/ 步/ 的/ 收敛/ 过程/ ,/ 较长/ 的/ 监测/ 窗口/ 将/ 显著/ 延长/ 收敛/ 时间/ ,/ 因此/ 评估/ 误差/ 逐渐/ 增大/ ./ (/ 2/ )/ 如图/ 12/ (/ b/ )/ 所示/ ,/ 较/ 短/ 的/ 监测/ 窗口/ 并/ 没有/ 受/ 异常/ 点/ 的/ 影响/ ,/ 可以/ 很/ 好/ 地/ 追踪/ 服务/ 时间/ 变化/ ,/ 并/ 获得/ 可/ 接受/ 的/ 评估/ 误差/ ./ 当/ T/ =/ 30s/ 时/ ,/ 评估/ 误差/ 小于/ Page9/ 图/ 12/ 不同/ T/ 设置/ 下/ 的/ MARE5/ %/ ./ 这/ 可能/ 是/ 由于/ 滤波器/ 经过/ 连续/ 多次/ 迭代/ 后/ ,/ 消除/ 了/ 异常/ 点/ 的/ 影响/ ./ 但是/ ,/ 当/ 监测/ 窗口/ 过/ 小/ ,/ 无法/ 获得/ 足够/ 精确/ 的/ 观测/ 值时/ ,/ 评估/ 误差/ 逐渐/ 增大/ ./ 例如/ ,/ 当/ T/ =/ 10s/ ,/ 评估/ 误差/ 超过/ 了/ 20/ %/ ./ 上述/ 观察/ 说明/ ,/ 通过/ 设置/ 适当/ 的/ 监测/ 窗口/ 长度/ ,/ 我们/ 的/ 方法/ 可以/ 适应/ 负载/ 组成/ 快速/ 变化/ 的/ 环境/ ,/ 获得/ 较为/ 精确/ 的/ 评估/ 结果/ ./ 4.2/ ./ 5/ 与/ 回归/ 分析方法/ 比较/ 在/ 该/ 实验/ 中/ ,/ 我们/ 在/ 负载/ 组成/ 变化/ 环境/ 下/ ,/ 利用/ 文献/ [/ 7/ ]/ 提出/ 的/ 回归/ 分析方法/ 对/ 多/ 租户/ CPU/ 资源/ 进行/ 评估/ ./ 方法/ 使用/ 滑动/ 窗口/ 进行/ 数据/ 采样/ ,/ 然后/ 使用/ MATLAB/ 提供/ 的/ 非负/ 的/ 最小/ 二/ 乘法/ 进行/ 回归/ 分析/ ,/ 得到/ 各/ 租户/ 的/ 事务/ 平均/ 服务/ 时间/ 的/ 评估/ 值/ Ci/ ./ 该/ 方法/ 的/ 目标/ 是/ 最小化/ 误差/ ε/ =/ ∑/ j/ 并且/ Ci/ / 0/ ,/ 其中/ j/ 用于/ 标示/ 滑动/ 窗口/ 内/ 的/ 样本/ ./ 通常/ ,/ 回归/ 分析方法/ 的/ 采样/ 周期/ 对/ 精确度/ 影响/ 较/ 小/ [/ 7/ ]/ ,/ 图/ 13/ 不同/ 负载/ 组成/ 变化/ 周期/ 和/ 滑动/ 窗口/ 大小/ 设置/ 下/ 的/ MARE/ 上述/ 观察/ 表明/ ,/ 难以/ 权衡/ 回归/ 分析方法/ 的/ 精确度/ 和/ 适应性/ ./ 实验/ 结果显示/ ,/ 负载/ 组成/ 变化/ 周期/ 较大/ 时/ ,/ 如/ Tchange/ / Sizesliding/ ,/ 可以/ 获得/ 较/ 好/ 的/ 评估/ 效果/ ,/ 这/ 表明/ 回归/ 分析方法/ 的/ 精确度/ 受/ 样本/ 数量/ 和/ 质量/ 的/ 影响/ 较大/ ./ 当/ 负载/ 组成/ 快速/ 变化/ 时/ ,/ 需要/ 降低/ 滑动/ 窗口/ 的/ 大小/ ./ 但是/ ,/ 受/ 异常/ 点/ 的/ 影响/ ,/ 较/ 小/ 的/ 滑动/ 窗口/ 难以/ 收集/ 到/ 足够/ 多/ 的/ 回归/ 分析/ 样本/ 来/ 保证/ 为了/ 更好/ 地/ 追踪/ 服务/ 时间/ 变化/ ,/ 我们/ 使用/ 一个/ 较/ 小/ 的/ 采样/ 周期/ T/ =/ 30s/ ./ 然后/ ,/ 我们/ 通过/ 设置/ 不同/ 的/ 滑动/ 窗口/ 大/ 小S/ izesliding/ 来/ 分析/ 回归/ 分析方法/ 的/ 评估/ 效果/ ./ 图/ 13/ (/ a/ )/ 、/ (/ b/ )/ 分别/ 显示/ 了/ 在/ 负载/ 组成/ 慢速/ 变化/ (/ Tchange/ =/ 1800s/ )/ 和/ 快速/ 变化/ (/ Tchange/ =/ 300s/ )/ 两种/ 环境/ 下/ 的/ 评估/ 误差/ ,/ 滑动/ 窗口/ 大小/ 取值/ 范围/ 从/ 120s/ (/ 小于/ 快速/ 变化/ 周期/ )/ 到/ 2700s/ (/ 大于/ 慢速/ 变化/ 周期/ )/ ./ 对比/ 实验/ 数据/ ,/ 可以/ 观察/ 到/ :/ (/ 1/ )/ 负载/ 组成/ 慢速/ 变化/ 时/ ,/ 较大/ 的/ 滑动/ 窗口/ 可以/ 获得/ 更/ 高/ 的/ 精确度/ ./ 如图/ 13/ (/ a/ )/ 所示/ ,/ 可以/ 看到/ ,/ 在/ 负载/ 组成/ 变化/ 周期/ 附近/ ,/ 评估/ 效果/ 最优/ ./ 但是/ ,/ 当/ 滑动/ 窗口/ 过大/ 或/ 过/ 小时/ ,/ 评估/ 误差/ 迅速/ 增大/ ./ (/ 2/ )/ 负载/ 组成/ 快速/ 变化/ 时/ ,/ 回归/ 分析方法/ 难以/ 追踪/ 服务/ 时间/ 变化/ ./ 如图/ 13/ (/ b/ )/ 所示/ ,/ 虽然/ 可以/ 在/ 负载/ 组成/ 变化/ 周期/ 附近/ 找到/ 一个/ 滑动/ 窗口/ 大小/ 的/ 最优/ 取值/ ,/ 但/ 评估/ 误差/ 已经/ 超过/ 了/ 30/ %/ ./ 方法/ 精确度/ ./ 5/ 实验/ 案例/ 2/ :/ 在线/ Forge/ 应用/ 在/ 该/ 实验/ 案例/ 中/ ,/ 我们/ 在/ 支撑/ 多个/ 软件开发/ 团队/ 的/ Forge/ 生产/ 环境/ 中/ 验证/ 方法/ 的/ 精确度/ ,/ 并/ 基于/ 本文/ 方法/ 设计/ 侵占/ 型/ 租户/ 检测/ 和/ 过载/ 保护/ 策略/ ,/ 对/ Page10/ 方法/ 的/ 应用/ 效果/ 进行/ 验证/ ./ 5.1/ 实验/ 方法/ 与/ 环境/ TrustieForge/ 是/ 在/ 国家/ 高技术/ 研究/ 发展/ 计划/ (/ 863/ )/ 课题/ “/ 可信/ 的/ 国家/ 软件/ 资源共享/ 与/ 协同/ 生产/ 环境/ ”/ 支持/ 下/ ,/ 研发/ 的/ 一个/ 基于/ 互联网/ 的/ 软件/ 协同/ 开发/ 环境/ ./ 我们/ 在/ 本地/ 部署/ 了/ 一个/ 企业/ 版/ TrustieForge/ 系统/ ,/ 支持/ 了/ 包括/ 12/ 个/ 软件/ 项目/ 团队/ (/ 租户/ )/ 、/ 上百人/ 的/ 软件/ 项目管理/ 和/ 协同/ 开发/ 活动/ ./ 如图/ 14/ 所示/ ,/ TrustieForge/ 系统/ 是/ 一个三层/ 架构/ 系统/ ,/ 包括/ 部署/ Trustie/ 门户/ 的/ Nigix/ 服务器/ 、/ 部署/ TrustieForge/ 系统/ 的/ Tomcat/ 中间件/ 服务器/ 以及/ 若干/ 数据库/ 服务器/ 、/ 邮件/ 服务器/ 等/ ./ 资源/ 评估/ 引擎/ 收集/ Tomcat/ 的/ 运行/ 时/ 日志/ 信息/ ,/ 所有/ 系统/ 运行/ 在/ WindowsServer2003/ ./ 5.2/ 实验/ 结果/ 及/ 分析/ 5.2/ ./ 1/ 租户/ CPU/ 资源/ 评估/ 通过/ 对/ TrustieForge/ 系统/ 进行/ 分析/ ,/ 我们/ 发现/ 该/ 系统/ 包含/ 两百多种/ 事务/ ,/ 并/ 可/ 分类/ 为/ 项目/ 浏览/ (/ browsing/ )/ 和/ 项目/ 执行/ (/ processing/ )/ 两类/ ,/ 前者/ 主要/ 访问/ 缓存/ 内容/ ,/ 后者/ 需要/ 动态/ 生成/ 富/ 客户端/ 页面/ ,/ 是/ CPU/ 密集型/ 的/ 事务/ ./ 图/ 15/ 显示/ 了/ 在/ 一个/ 典型/ 的/ 工作日/ 中/ 这/ 两类/ 事务/ 组成/ 比例/ 的/ 变化/ 情况/ ,/ 由此可见/ ,/ 事务/ 的/ 平均/ 服务/ 时间/ 也/ 是/ 动态变化/ 的/ ./ 图/ 16/ 显示/ 了/ 方法/ 的/ 评估/ 结果/ ,/ 监测/ 窗口/ 大小/ 设置/ 为/ T/ =/ 30s/ ,/ 图中/ 曲线/ 表示/ 12/ 个/ 租户/ 的/ 评估/ 误差/ 的/ 累积/ 概率分布/ (/ CumulativeDistributionFunction/ ,/ CDF/ )/ ./ 如图/ 16/ 所示/ ,/ 12/ 个/ 租户/ 的/ 90/ %/ 以上/ 的/ 评估/ 误差/ 都/ 小于/ 5/ %/ ,/ 并且/ 资源/ 评估/ 引擎/ 对/ 12/ 个/ 租户/ 的/ 每次/ 迭代/ 计算/ 耗时/ 仅为/ 2ms/ ./ 5.2/ ./ 2/ 侵占/ 型/ 租户/ 检测/ 与/ CPU/ 过载/ 保护/ TrustieForge/ 采用/ EclipseRAP/ ①/ 技术/ 动态/ 生成/ 项目/ 执行/ 相关/ 的/ 富/ 客户端/ 页面/ (/ RAP/ 页面/ )/ ./ 在/ Tomcat/ 中间件/ 服务器/ 中/ ,/ RAP/ 页面/ 的/ 生成/ 过程/ 是/ CPU/ 密集型/ 的/ 任务/ ,/ 当/ 进行/ 项目/ 执行/ 的/ 租户/ 负载/ 增高/ 时/ ,/ 会/ 导致/ 中间件/ 服务器/ 的/ CPU/ 过载/ ./ 在/ 该/ 实验/ 中/ ,/ 我们/ 通过/ 常用/ 的/ 并发/ 控制/ (/ concurrencycontrol/ )/ 技术/ 来/ 避免/ CPU/ 过载/ ./ 对于/ 多/ 租户/ 应用/ ,/ 限制/ 所有/ 租户/ 的/ 并发/ 量/ 对于/ 非/ 侵占/ 型/ 的/ 租户/ 而言/ 是/ 不/ 公平/ 的/ ,/ 因此/ 需要/ 根据/ 各/ 租户/ 的/ CPU/ 资源/ 状态/ 进行/ 细粒度/ 的/ 并发/ 控制/ ./ 在/ 已有/ 工作/ 中/ ,/ 我们/ 曾/ 提出/ 一种/ 细粒度/ 的/ 中间件/ 并发/ 控制/ 框架/ (/ QoS/ -/ enabledWork/ -/ Manager/ ,/ QWM/ )/ [/ 13/ ]/ ./ 在/ 该/ 实验/ 中/ ,/ 我们/ 基于/ QWM/ 框架/ 和/ 本文/ 提出/ 的/ CPU/ 资源/ 评估/ 方法/ ,/ 设计/ 实现/ 一种/ 面向/ 多/ 租户/ 的/ CPU/ 过载/ 保护/ 策略/ ,/ 其/ 基本思路/ 如下/ :/ 利用/ CPU/ 资源/ 评估/ 方法/ ,/ 在线/ 监测/ 各/ 租户/ 的/ CPU/ 资源/ 状态/ 以及/ Tomcat/ 中间件/ 服务器/ 的/ 总/ CPU/ 利用率/ ;/ 当/ 总/ CPU/ 利用率/ 大于/ 预先/ 设定/ 的/ 过载/ 阈值/ 时/ ,/ 则/ 根据/ 各/ 租户/ 的/ CPU/ 资源/ 状态/ ,/ 检测/ 占用/ 资源/ 最多/ 的/ 租户/ ,/ 标示/ 为/ 侵占/ 型/ 租户/ ,/ 然后/ ,/ 依据/ 排队/ 论/ 模型/ ,/ 求解/ 对/ 侵占/ 型/ 租户/ 的/ 并发/ 量/ 限制/ ,/ 并/ 利用/ QWM/ 框架/ 进行/ 并发/ 控制/ ;/ 当/ 总/ CPU/ 利用率/ 小于/ 预设/ 过载/ 阈值/ 时/ ,/ 并且/ QWM/ 框架/ 中/ 存在/ 由于/ 前期/ 并发/ 限制/ 而/ 出现/ 的/ 等待/ 队列/ 时/ ,/ 则/ 逐步/ 降低/ 并发/ 限制/ ,/ 直到/ 总/ CPU/ 利用率/ 接近/ 过载/ 阈值/ ./ 为了/ 验证/ 上述/ 策略/ 的/ 效果/ ,/ 我们/ 建立/ 了/ 一个/ 包含/ 5/ 个/ 租户/ 的/ TrustieForge/ 实验/ 环境/ ,/ 并/ 通过/ Bench4Q/ 录制/ 并/ 模拟/ 租户/ 负载/ ./ 在/ 该/ 实验/ 中/ ,/ 租户/ 1/ (/ Tenant1/ )/ 被/ 设计/ 为/ 侵占/ 型/ 租户/ ,/ 进行/ 更/ 频繁/ 的/ 项目/ 执行/ 操作/ ,/ 并且/ 负载/ 大小/ 进行/ 高低/ 交替/ ./ CPU/ 过载/ 阈值/ 根据/ 已有/ 经验/ 被/ 设置/ 为/ 85/ %/ [/ 14/ ]/ ./ 图/ 17/ (/ a/ )/ 、/ (/ b/ )/ 分别/ 显示/ 了/ 未/ 使用/ 过载/ 保护/ 策略/ 和/ 使用/ 过载/ 保护/ 策略/ 时/ 各/ 租户/ 的/ CPU/ 利用率/ 以及/ 总/ CPU/ 利用/ ①/ EclipseRAP/ ,/ URL/ :/ http/ :/ // // www/ ./ eclipse/ ./ org/ // rap/ // Page11/ 率/ 的/ 变化/ 情况/ ./ 在/ 图/ 17/ (/ a/ )/ 中/ ,/ 当/ 租户/ 1/ 出现/ 高/ 负载/ 时/ ,/ 可以/ 观测/ 到/ 其它/ 租户/ 的/ CPU/ 利用率/ 出现/ 明显/ 的/ 下降/ ,/ 并且/ 总/ CPU/ 利用率/ 近/ 100/ %/ ./ 上述/ 现象/ 表明/ ,/ 未/ 使用/ 过载/ 保护/ 策略/ 时/ ,/ 租户/ 1/ 在/ 高/ 负载/ 时/ 侵占/ 了/ 其它/ 租户/ 的/ 资源/ ,/ 并/ 严重威胁/ 了/ 系统/ 可用性/ ./ 在/ 图/ 17/ (/ b/ )/ 中/ ,/ 由于/ 使用/ 了/ 过载/ 保护/ 策略/ ,/ 租户/ 1/ 在/ 高/ 负载/ 时/ 被/ 检测/ 为/ 侵占/ 型/ 租户/ ,/ 受到/ 了/ 并发/ 限制/ ,/ 对/ 其它/ 租户/ 的/ 影响/ 明显降低/ ,/ 并且/ 总/ CPU/ 利用/ 保持/ 在/ 85/ %/ 以下/ ./ 由此可见/ ,/ 基于/ 本文/ 的/ 多/ 租户/ CPU/ 资源/ 评估/ 方法/ ,/ 上述/ 过载/ 保护/ 策略/ 可以/ 有效/ 检测/ 侵占/ 型/ 租户/ ,/ 并/ 通过/ 对/ 侵占/ 型/ 租户/ 的/ 并发/ 限制/ ,/ 将/ 总/ CPU/ 利用率/ 保持/ 在/ 合理/ 范围/ 内/ ./ 6/ 方法/ 局限/ 及/ 未来/ 工作/ 6.1/ 滤波器/ 参数设置/ 文中/ 提出/ 的/ 方法/ 可以/ 在/ 给定/ 的/ 硬件/ 环境/ 下/ 实现/ 多/ 租户/ Web/ 应用/ CPU/ 资源/ 的/ 有效/ 评估/ ./ 但是/ ,/ 精确/ 的/ 评估/ 结果/ 需要/ 准确/ 而/ 充分/ 地/ 理解/ 方法/ 使用/ 的/ Kalman/ 滤波器/ 的/ 参数设置/ ./ (/ 1/ )/ 我们/ 发现/ ,/ 在/ 负载/ 组成/ 变化/ 环境/ 下/ ,/ 需要/ 在/ 滤波器/ 迭代/ 过程/ 中/ 根据/ 近期/ 的/ 追踪/ 数据/ 动态/ 更新/ 犙/ 矩阵/ ;/ 在/ 负载/ 组成/ 固定/ 和/ 变化/ 环境/ 下/ ,/ 较大/ 的/ 犚/ 矩阵/ 取值/ 都/ 会/ 产生/ 较大/ 的/ 评估/ 误差/ ./ (/ 2/ )/ 我们/ 发现/ ,/ 通过/ 设置/ 适当/ 的/ 初始状态/ 向量/ 狓/ ^/ 0/ ,/ 并/ 利用/ 转换/ 矩阵/ 犃/ 在/ 滤波器/ 迭代/ 过程/ 中/ 动态/ 修正/ 状态/ 向量/ ,/ 可以/ 加快/ 迭代/ 收敛/ ,/ 提高/ 方法/ 的/ 精确度/ 和/ 适应性/ ./ (/ 3/ )/ 我们/ 根据/ 负载/ 组成/ 的/ 变化/ 周期/ Tchange/ 设置/ 监测/ 窗口/ 长度/ T/ ,/ 当/ Tchange/ / T/ 时/ ,/ 可以/ 提高/ 方法/ 的/ 精确度/ 和/ 适应性/ ./ 在/ 本文/ 中/ ,/ 我们/ 根据/ 经验/ ,/ 手动/ 设置/ 监测/ 窗口/ 长度/ ./ 在/ 未来/ 工作/ 中/ ,/ 我们/ 将/ 监测/ 负载/ 组成/ ,/ 预测/ 变化趋势/ ,/ 进而/ 实现/ 监测/ 窗口/ 长度/ 的/ 自动/ 设置/ 和/ 动态/ 调整/ ./ 6.2/ 负载/ 复杂度/ 在/ 本文/ 第/ 1/ 个/ 实验/ 案例/ 中/ ,/ 我们/ 使用/ TPC/ -/ W/ 电子商务/ 测试/ 基准/ 测试/ 本文/ 方法/ 的/ 精确度/ 和/ 适应性/ ./ 在/ 上述/ 负载/ 环境/ 下/ ,/ 各/ 租户/ 的/ CPU/ 资源/ 状态/ 是/ 不/ 相关/ 的/ ,/ 满足/ 使用/ Kalman/ 滤波/ 的/ 可/ 识别/ 条件/ ./ 但是/ ,/ 如果/ 要/ 进一步提高/ 多/ 租户/ 性能/ 隔离/ 的/ 精确度/ 和/ 效果/ ,/ 需要/ 以/ 事务/ 为/ 粒度/ ,/ 将/ 各个/ 事务/ 的/ 平均/ 服务/ 时间/ 作为/ 状态/ 向量/ 参数/ ,/ 进行/ 评估/ 分析/ ./ 在/ 这种/ 情况/ 下/ ,/ 由于/ 同一/ 会话/ 的/ 各/ 事务/ 间/ 存在/ 依赖/ 关系/ ,/ 因此/ 违背/ 了/ 可/ 识别/ 条件/ ,/ 将/ 影响/ 评估/ 效果/ ./ 在/ 未来/ 工作/ 中/ ,/ 我们/ 将/ 针对/ 这一/ 问题/ 展开/ 研究/ ./ 在/ 第/ 2/ 个/ 实验/ 案例/ 中/ ,/ 我们/ 选择/ TrustieForge/ 系统/ 作为/ 实验/ 对象/ ,/ 对/ 宿主/ 在/ 同一/ 中间件/ 服务器/ 上/ 的/ 12/ 个/ 租户/ 进行/ 资源/ 评估/ ,/ 取得/ 了/ 较/ 好/ 的/ 评估/ 效果/ ./ 在/ 未来/ 工作/ 中/ ,/ 我们/ 将/ 在/ 更/ 高密度/ 的/ 租户/ 负载/ 环境/ 下/ ,/ 研究/ 本文/ 方法/ 的/ 评估/ 效果/ ./ 7/ 相关/ 工作/ 在/ 共享/ Java/ 服务器/ 中/ 进行/ CPU/ 资源/ 的/ 在线/ 度量/ 仍/ 存在/ 技术/ 挑战/ [/ 5/ ]/ ./ 已有/ 工作/ 主要/ 通过/ 本地/ 代码/ 库/ 或/ 程序转换/ 等/ 方法/ 进行/ CPU/ 资源/ 的/ 在线/ 度量/ ./ 基于/ 本地/ 代码/ 的/ 方法/ 被/ 广泛/ 使用/ [/ 15/ -/ 17/ ]/ ./ 该/ 方法/ 本质/ 上/ 是/ 一种/ 基于/ 采样/ 的/ 度量/ 方法/ ,/ 其/ 精确度/ 依赖于/ 采样/ 时间/ 戳/ 的/ 精密度/ ./ 由于/ 事务/ 型/ 应用/ 每次/ 请求/ 处理/ 所/ 使用/ 的/ CPU/ 时间/ 极短/ ,/ 因此/ 对/ 方法/ 使用/ 的/ 时间/ 戳/ 精密度/ 要求/ 很/ 高/ ./ 例如/ ,/ Magpie/ [/ 15/ ]/ 使用/ Win/ -/ dows/ 事件/ 追踪/ 机制/ 实现/ Windows/ 操作系统/ 环境/ 下/ CPU/ 资源/ 的/ 精确度/ 量/ ./ 类似/ 的/ 方法/ 还/ 包括/ Linux/ 操作系统/ 环境/ 下/ 的/ Trace/ 工具包/ [/ 16/ ]/ 以及/ Solaris/ 操作/ Page12/ 系统/ 环境/ 下/ 的/ DTrace/ [/ 17/ ]/ ./ 方法/ 依赖于/ 操作系统/ 的/ 特性/ ,/ 甚至/ 需要/ 修改/ 操作系统/ ,/ 因此/ 存在/ 系统/ 兼容性问题/ ./ 另外/ ,/ 方法/ 需要/ 对/ 应用程序/ 的/ 源代码/ 或/ 二进制/ 文件/ 进行/ 探针/ 注入/ ,/ 但是/ ,/ 中间件/ 平台/ 的/ 提供者/ 可能/ 无权/ 修改/ 租户/ 应用/ ./ 相比之下/ ,/ 本文/ 方法/ 不/ 需要/ 进行/ 探针/ 注入/ ,/ 不/ 依赖于/ 操作系统/ 特性/ ,/ 具有/ 非/ 侵入/ 性/ 和/ 操作系统/ 独立性/ 的/ 优点/ ./ Binder/ 等/ 人/ 利用/ 程序转换/ 技术/ ,/ 将/ Java/ 程序/ 字节/ 码/ 流量/ 转换/ 为/ CPU/ 资源/ 的/ 使用量/ [/ 5/ ]/ ,/ 方法/ 不/ 存在/ 兼容性问题/ ,/ 但/ 存在/ 较大/ 性能/ 开销/ (/ 大于/ 30/ %/ )/ [/ 6/ ]/ ./ 林海/ 略/ 等/ 人/ [/ 2/ ]/ 使用/ 一种/ 渐进式/ 的/ 方法/ 来/ 设置/ 程序转换/ 的/ 检查点/ ,/ 从而/ 得到/ 开销/ 较/ 低且/ 保证/ 精度/ 要求/ 的/ 程序/ 检查点/ 集合/ ./ 方法/ 首先/ 采用/ 保守/ 的/ 策略/ 找到/ 一组/ 能够/ 保证/ 精度/ 要求/ 的/ 检查点/ ,/ 随后/ 在/ 不/ 损害/ 精度/ 的/ 前提/ 下/ 逐渐/ 缩减/ 检查点/ 的/ 个数/ ./ 但是/ ,/ 这种/ 方式/ 需要/ 经过/ 较长时间/ 的/ 检查点/ 配置/ 和/ 选择/ ./ 本文/ 方法/ 利用/ 生产/ 环境/ 中/ 常用/ 的/ 监测数据/ 进行/ 资源/ 评估/ ,/ 因此/ 不会/ 产生/ 性能/ 开销/ ./ 最近/ ,/ 一些/ 研究/ 工作/ 利用/ 统计分析/ 方法/ 估算/ 资源/ 使用量/ ./ 例如/ Zhang/ 等/ 人/ [/ 7/ ]/ 利用/ 多元回归/ 分析/ 估算/ 事务/ 的/ 平均/ 服务/ 时间/ ./ 但是/ ,/ 回归/ 分析方法/ 的/ 精确度/ 依赖于/ 长时间/ 、/ 高质量/ 的/ 样本/ 作为/ 输入/ ,/ 容易/ 受到/ 时变/ 资源/ 状态/ 以及/ 样本/ 异常/ 点/ 的/ 影响/ ./ 已有/ 工作/ [/ 8/ ]/ 以及/ 本文/ 的/ 实验/ 结果表明/ 此类/ 方法/ 难以/ 对/ 动态/ 系统/ 的/ 时变/ 资源/ 状态/ 进行/ 有效/ 评估/ ,/ 易/ 产生/ 较大/ 误差/ ./ Woodside/ 等/ 人/ [/ 18/ ]/ 提出/ 基于/ Kalman/ 滤波/ 的/ 性能/ 模型/ 参数/ 在线/ 调整/ 方法/ ./ 方法/ 通过/ 监测/ 响应/ 时间/ 并/ 构造/ 系统/ 的/ 性能/ 模型/ ,/ 滤波器/ 的/ 优化/ 目标/ 是/ 减小/ 模型/ 预测/ 得到/ 的/ 响应/ 时间/ 与/ 观测/ 得到/ 的/ 响应/ 时间/ 之间/ 的/ 误差/ ./ 方法/ 使用/ 非线性/ 的/ 方法/ ,/ 通过/ 近似/ 地/ 对/ 性能/ 模型/ 求偏/ 导数/ 获得/ 犎/ ,/ 即/ 计算/ 每/ 一个/ 参数/ 的/ 微小/ 变化/ 对/ 结果/ 的/ 影响/ ./ 因此/ ,/ 方法/ 计算/ 的/ 时间/ 复杂度/ 是/ 参数/ 个数/ 与/ 性能/ 模型/ 求解/ 时间/ 的/ 乘积/ ,/ 通常/ 需要/ 较长/ 的/ 计算/ 时间/ [/ 19/ ]/ ./ 本文/ 提出/ 一种/ 线性/ 算法/ ,/ 不/ 依赖于/ 复杂/ 的/ 性能/ 模型/ ,/ 复杂度/ 降为/ O/ (/ N3/ )/ ,/ 可以/ 即时/ 算/ 出/ 结果/ ,/ 更/ 适用/ 于/ 多/ 租户/ Web/ 应用/ 的/ 在线/ 性能/ 管理/ ./ 8/ 结束语/ 中间件/ 共享/ 是/ 云/ 计算/ 模式/ 中/ 一种/ 重要/ 的/ 资源共享/ 方式/ ./ 但是/ ,/ 这种/ 方式/ 容易/ 导致/ 宿主/ 在/ 同一/ 中间件/ 服务器/ 上/ 的/ 多个/ 租户/ 间/ 产生/ 性能/ 干扰/ ./ 因此/ ,/ 需要/ 为/ 租户/ 提供/ 性能/ 隔离/ 的/ 服务/ 实例/ ./ 在线/ 度量/ 租户/ 对/ 资源/ 的/ 使用/ 情况/ 是/ 实现/ 性能/ 隔离/ 的/ 前提条件/ ,/ 但是/ ,/ 在/ 共享/ 中间件/ 服务器/ 中/ 直接/ 度量/ CPU/ 资源/ 使用/ ,/ 需要/ 注入/ 探针/ ,/ 将/ 引起/ 性能/ 开销/ ,/ 并/ 依赖于/ 操作系统/ 的/ 支持/ ./ 文中/ 针对/ 普遍/ 使用/ 的/ Java/ 中间件/ 服务器/ ,/ 提出/ 一种/ 基于/ Kalman/ 滤波/ 的/ 多/ 租户/ Web/ 应用/ CPU/ 资源/ 动态/ 评估/ 方法/ ,/ 提供/ 了/ 多/ 租户/ Web/ 应用/ CPU/ 资源/ 评估/ 的/ 新途径/ ./ 本文/ 通过/ 两个/ 实验/ 案例/ 分析方法/ 的/ 评估/ 效果/ 、/ 影响/ 因素/ 和/ 挑战/ ./ 在/ 第/ 1/ 个/ 应用/ 案例/ 中/ ,/ 我们/ 设计/ 了/ 一系列/ 实验/ ,/ 分析/ 滤波/ 参数设置/ 对/ 资源/ 评估/ 精确度/ 的/ 影响/ ./ 实验/ 结果表明/ ,/ 通过/ 设置/ 适当/ 参数/ ,/ 本文/ 方法/ 可/ 动态/ 适应/ 持续/ 变化/ 的/ 负载/ 环境/ ,/ 并且/ 与/ 直接/ 度量/ 方法/ 相比/ ,/ 具有/ 可/ 接受/ 的/ 评估/ 误差/ ./ 在/ 第/ 2/ 个/ 应用/ 案例/ 中/ ,/ 我们/ 在/ 支撑/ 多个/ 软件开发/ 团队/ 的/ Forge/ 生产/ 环境/ 中/ 验证/ 方法/ 的/ 精确度/ ,/ 实验/ 还/ 表明/ 方法/ 可/ 用于/ 检测/ 侵占/ 型/ 租户/ ,/ 并/ 避免/ 共享/ 中间件/ 服务器/ CPU/ 过载/ ./ 

