Page1/ 基于/ 多层/ 增量/ 式/ 可/ 扩展/ 扇形/ 兴趣/ 区域/ 的/ 大规模/ DVE/ 场景/ 对/ 等/ 渐进式/ 传输/ 机制/ 贾金原/ 1/ )/ 王伟/ 2/ )/ 王明/ 飞/ 1/ )/ 范辰/ 1/ )/ 张/ 晨曦/ 1/ )/ 俞阳/ 1/ )/ 1/ )/ (/ 同济大学/ 软件/ 学院/ 上海/ 201804/ )/ 2/ )/ (/ 中国科学院/ 云/ 计算/ 产业/ 技术创新/ 与/ 育成/ 中心/ 广东/ 东莞/ 523808/ )/ 摘要/ 为了/ 解决/ 在/ 有限/ 的/ 互联网/ 带宽/ 上/ 高效/ 下载/ 海量/ 虚拟/ 场景/ 的/ “/ 瓶颈/ ”/ 问题/ ,/ 文中/ 针对/ 基于/ 对/ 等/ 网络/ (/ P2P/ )/ 的/ 虚拟/ 场景/ 渐进式/ 传输/ 的/ 增量/ 判断/ 和/ 场景/ 下载/ 源/ 节点/ 最优/ 选择/ 这/ 两个/ 关键点/ ,/ 首先/ 将/ 传统/ 的/ 兴趣/ 域/ (/ AreaofInterests/ ,/ AOI/ )/ 细化/ 为/ 兴趣/ 扇/ 区域/ (/ SectorofInterest/ ,/ SOI/ )/ ,/ 又/ 将/ 其/ 提升/ 为/ 多层/ 增量/ 式/ 可/ 扩展/ 兴趣/ 扇形/ 区域/ (/ Multi/ -/ Layered/ &/ IncrementallyScalableSOI/ ,/ MISSOI/ )/ ,/ 给出/ 了/ MISSOI/ 的/ 分划/ 扩展/ 算法/ ,/ 并/ 基于/ MISSOI/ 提出/ 了/ 一个/ 高效/ 的/ 整数/ 级/ SOI/ 场景/ 下载/ 的/ 拾取/ 算法/ ;/ 然后/ 设计/ 了/ 一个/ 基于/ 对等网/ 的/ 海量/ DVE/ 场景/ 渐进式/ 下载/ 框架/ ,/ 并/ 给出/ 了/ 在/ P2P/ -/ DVE/ 中/ 快速/ 搜索/ 场景/ 下载/ 源/ 节点/ 以及/ 选择/ 最优/ 场景/ 下载/ 源/ 节点/ 的/ 高效/ 算法/ ./ 仿真/ 实验/ 结果表明/ 作者/ 提出/ 的/ 方法/ 在/ 可视/ 场景/ 下载/ 域/ 的/ 拾取/ 、/ 下载/ 源/ 查询/ 成功率/ 和/ 下载/ 请求/ 失败率/ 等/ 性能指标/ 上/ 明显/ 好于/ 目前/ 主流/ 海量/ 虚拟/ 场景/ P2P/ -/ DVE/ 传输/ 机制/ FLoD/ ,/ 更是/ 远/ 优于/ 传统/ 的/ Client/ // Server/ 虚拟/ 场景/ 传输/ 模式/ ./ 关键词/ 分布式/ 虚拟现实/ ;/ 对/ 等/ 网络/ ;/ 渐进式/ 传输/ ;/ 下载/ 增量/ ;/ 多层/ 增量/ 式/ 可/ 扩展/ 兴趣/ 扇形/ 区域/ 1/ 引言/ 分布式/ 虚拟环境/ (/ DistributedVirtualEnviron/ -/ ments/ ,/ DVE/ )/ [/ 1/ -/ 2/ ]/ 使得/ 物理/ 上/ 分布/ 在/ 不同/ 地点/ 的/ 用户/ (/ 节点/ )/ 可/ 通过/ 控制/ 其/ 虚拟化/ 身/ (/ Avatar/ )/ 在/ 虚拟/ 场景/ 中/ 进行/ 漫游/ 或/ 交互/ ./ DVE/ 已经/ 在/ 诸多方面/ 得到/ 了/ 广泛/ 的/ 应用/ ,/ 如/ 大规模/ 多用户/ 在线/ 游戏/ (/ Massively/ 图/ 1/ 网上/ 大规模/ 虚拟世界/ 的/ 著名/ 实例/ 用户/ 构建/ 本地/ 虚拟环境/ 的/ 方式/ 主要/ 有/ :/ (/ 1/ )/ 虚拟/ 场景/ 的/ 预/ 分配/ ;/ (/ 2/ )/ 虚拟/ 场景/ 的/ 按/ 需/ 下载/ (/ On/ -/ demandDownloading/ )/ ./ 前者/ 将/ 全部/ DVE/ 场景/ 预先/ 部署/ 到/ 客户端/ ,/ 通过/ 对/ DVE/ 的/ 资源/ 状态/ 更新/ 来/ 保持数据/ 一致性/ [/ 1/ ]/ ,/ 经典/ 的/ 研究成果/ 有/ 高层/ 体系结构/ (/ HighLevelArchitecture/ ,/ HLA/ )/ 及/ 分布/ 交互/ 仿真/ (/ DistributedInteractiveSimulation/ ,/ DIS/ )/ ./ 后者/ 则/ 根据/ 需求/ 实时/ 下载/ DVE/ 场景/ ,/ 首先/ 利用/ AOI/ [/ 4/ -/ 8/ ]/ 将/ 用户/ 每次/ 视点/ 平移/ 时/ 需要/ 下载/ 的/ 场景/ 限定/ 于/ 视点/ 周围/ 区域/ ,/ 从而/ 大大减少/ 每次/ 需要/ 下载/ 的/ 场景/ 数据量/ ;/ 再进一步/ 优先/ 下载/ 距其/ 视点/ 较近/ 和/ 偏离/ 视点/ 角度/ 较/ 小/ 区域/ 内/ 的/ 场景/ 模型/ ./ 大规模/ DVE/ 网络/ 传输/ 模式/ 经历/ 了/ 3/ 个/ 发展/ 阶段/ :/ (/ 1/ )/ 单/ 服务器/ // 多/ 客户端/ ;/ (/ 2/ )/ 多/ 服务器/ // 多/ 客户端/ ;/ (/ 3/ )/ 对等网/ (/ Peer/ -/ to/ -/ Peer/ ,/ P2P/ )/ ./ 第/ 1/ 种/ 传输/ 模式/ 简单/ 成熟/ ,/ 数据/ 的/ 一致性/ 较/ 好/ ,/ 但/ 当/ 大量/ 用户/ 同时/ 下载/ 时/ 可能/ 给/ 服务器/ 带来/ 极高/ 的/ 工作/ 负担/ ;/ 第/ 2/ 种/ 模式/ 利用/ 多台/ 服务器/ 降低/ 单台/ 服务器/ 的/ 工作/ 负载/ ,/ 虽然/ 可使/ 每台/ 服务器/ 负载/ 有所/ 下降/ ,/ 但/ 当/ 某些/ 子/ 区域/ 内/ 用户数量/ 急剧/ 增加/ 时/ ,/ 单/ 服务器/ // 多/ 客户端/ 结构/ 的/ 缺陷/ 依然/ 存在/ ,/ 而/ “/ 用户/ 迁移/ ”/ 策略/ 则/ 会/ 增加/ 额外/ 的/ 开销/ ;/ 第/ 3/ 种/ 模式/ 充分利用/ 了/ 节点/ 间/ 的/ 带宽/ ,/ 有效/ 减轻/ 了/ 服务器端/ 的/ 负载/ [/ 4/ -/ 5/ ]/ ./ P2P/ 网络/ 传输/ DVE/ 场景/ 的/ 基本原理/ 是/ :/ 若/ DVE/ 中/ 某/ 用户/ 化身/ 在/ 虚拟空间/ 中/ 与/ 邻近/ 用户/ 化身/ 的/ AOI/ 有/ 重叠/ 部分/ ,/ 则/ 由于/ 各/ MultiplayerOnlineGames/ ,/ MMOG/ )/ [/ 3/ ]/ ,/ 虚拟社区/ (/ 如图/ 1/ 所示/ )/ 、/ 军事/ 仿真/ 等/ ./ 通过/ 网络/ 从/ 服务器/ 下载/ 虚拟/ 场景/ 已/ 成为/ 用户/ 构建/ 本地/ 虚拟环境/ 的/ 主流/ 方式/ ,/ 但/ 随着/ 虚拟/ 场景/ 复杂度/ 和/ 规模/ 的/ 急剧/ 增加/ (/ 如/ 著名/ 的/ 虚拟社区/ —/ —/ —/ SecondLife/ 的/ 场景/ 数据量/ 已/ 超过/ 34TB/ ,/ 且/ 仍/ 在/ 持续/ 增加/ )/ ,/ 海量/ 虚拟/ 场景/ 的/ 实时/ 下载/ 需求/ 与/ 目前/ 极为/ 有限/ 的/ 网络带宽/ 之间/ 的/ 矛盾/ 成为/ 制约/ 大规模/ DVE/ 进一步/ 发展/ 的/ “/ 瓶颈/ ”/ 所在/ ./ 用户/ 在/ 不同/ 时刻/ 访问/ 了/ 同一/ 兴趣/ 域/ ,/ 先到/ 者/ 可能/ 已经/ 下载/ 了/ 该/ 区域/ 内/ 的/ 场景/ ,/ 因此/ 后来者/ 可/ 直接/ 向/ 其/ 邻近/ 化身/ 所在/ 的/ 节点/ 请求/ 下载/ 场景/ ,/ 而/ 不是/ 从/ 服务器/ 下载/ ./ 目前/ 这方面/ 国内外/ 的/ 主要/ 研究成果/ 有/ :/ 面向/ 虚拟/ 城市/ 的/ P2P/ 场景/ 传输/ 机制/ FLoD/ [/ 6/ ]/ 、/ HyperVerse/ [/ 7/ ]/ 、/ 借助于/ MPEG/ 流式/ 编码/ 的/ Widereality/ [/ 8/ ]/ 、/ 面向/ 大规模/ 地形/ 场景/ 的/ P2P/ 传输/ 机制/ PeerVOLT/ [/ 9/ ]/ 、/ 面向/ 大规模/ 虚拟环境/ 的/ P2P/ 信息/ 交互/ 机制/ Solipsis/ [/ 10/ -/ 11/ ]/ 和/ 面向/ MMOG/ 的/ P2P/ 兴趣/ 管理机制/ MOPAR/ [/ 12/ ]/ ./ 它们/ 的/ 共同/ 特点/ 有/ :/ 用户/ 根据/ 当前/ 视点/ 确定/ 落入/ 其/ 视野/ 范围/ 的/ 场景/ ,/ 通过/ 特定/ 策略/ 在/ P2P/ 网络/ 中/ 发现/ 拥有/ 用户/ 所/ 需/ 场景/ 的/ 节点/ ,/ 然后/ 与/ 之/ 建立/ 连接/ 并/ 下载/ 该/ 场景/ ./ 但/ 以上/ 方法/ 采用/ 的/ 仅仅/ 是/ AreaofInterests/ (/ AOI/ )/ 的/ 静态/ 拾取/ ,/ 显得/ 较为/ 粗糙/ ,/ 也/ 没有/ 跟/ 用户/ 视点/ 漫游/ 时/ 的/ 下载/ 行为/ 结合/ 起来/ ,/ 没有/ 考虑/ 场景/ 级别/ 的/ 增量/ 式/ 渐进/ 传输/ ,/ 更/ 没有/ 考虑/ 将/ 之/ 与/ P2P/ 覆盖网/ 的/ 下载/ 源/ 节点/ 发现/ 与/ 最优/ 下载/ 源/ 节点/ 选择/ 策略/ 有机/ 地/ 结合/ 起来/ ,/ 最大/ 限度/ 地/ 减少/ 网络/ 传输/ 负担/ 与/ 加快/ 网上/ 海量/ DVE/ 场景/ 的/ 传输/ 效率/ ./ 本文/ 首先/ 将/ 传统/ 的/ 兴趣/ 区域/ AOI/ 做/ 了/ 三度/ 扩展/ 工作/ :/ (/ 1/ )/ 首先/ 将/ 传统/ 的/ AOI/ 圆域/ 细化/ 并/ 分划/ 为/ 两个/ 扇形/ 兴趣/ 区域/ (/ SectorofInterests/ ,/ SOI/ )/ ;/ (/ 2/ )/ 再/ 以/ 视点/ 为/ 中心/ 将/ 其/ 静态/ 地/ 由/ 单层/ 扩展/ 为/ 多层/ 的/ 兴趣/ 区域/ (/ Multi/ -/ layeredScalableSectorofInterests/ ,/ Page3MSSOI/ )/ ;/ (/ 3/ )/ 然后/ 再/ 将/ 其/ 动态/ 地/ 扩展/ 为/ 多层/ 增量/ 式/ 兴趣/ 扇形/ 域/ (/ Multi/ -/ layered/ &/ IncrementallyScalableSOI/ ,/ MISSOI/ )/ ./ MISSOI/ 会/ 带来/ 两大/ 优势/ :/ (/ 1/ )/ 量化/ 了/ 场景/ 增量/ 下载/ 的/ 优先级/ ,/ 根据/ 视点/ 由近及远/ 的/ 渐进/ 增量/ 式/ 的/ 加载/ 场景/ ,/ 以/ 最小/ 的/ 下载量/ 来/ 满足/ 场景/ 漫游/ 的/ 视觉/ 体验/ ,/ 并/ 能/ 为/ 预/ 下载/ 做/ 准备/ 工作/ ,/ 尤其/ 适合/ SOI/ 内/ 场景/ 数据/ 量过大/ 的/ 情况/ ;/ (/ 2/ )/ 对/ 场景/ 下载/ 源/ 的/ 选择/ 范围/ 进行/ 了/ 分级/ ,/ 使得/ 请求/ 节点/ 向/ 最/ 有/ 可能/ 拥有/ 该/ 数据/ 的/ 节点/ 进行/ 服务/ 请求/ ,/ 减少/ 了/ 通信量/ ,/ 并/ 均衡/ 了/ 各个/ 节点/ 的/ 服务/ 负载/ ,/ 避免/ 了/ 某些/ 节点/ 服务/ 过载/ ./ 基于/ 所/ 提出/ 的/ MISSOI/ ,/ 本文/ 给出/ 了/ 一种/ 新/ 的/ 海量/ DVE/ 场景/ 渐进式/ 传输/ 机制/ 与/ 框架/ ,/ 并/ 设计/ 了/ 一个/ 更为/ 高效/ 的/ 从/ P2P/ 覆盖网/ 中/ 发现/ 下载/ 服务/ 源/ 节点/ 的/ 算法/ ,/ 以及/ 如何/ 从/ 多个/ 场景/ 下载/ 源/ 候选/ 节点/ 中/ 选择/ 出/ 最优/ 节点/ (/ 来/ 下载/ 场景/ 文件/ )/ 的/ 算法/ ./ 同时/ ,/ 本文/ 还/ 设计/ 了/ 一个/ 仿真/ 实验/ 框架/ 来/ 验证/ 本文/ 所提/ 算法/ 的/ 有效性/ ./ 2/ 多层/ 增量/ 式/ 可/ 扩展/ 兴趣/ 扇形/ 域/ MISSOI2/ ./ 1/ 面向/ 下载/ 的/ DVE/ 场景/ 管理文件/ 为了/ 高效/ 地/ 判定/ 拾取/ 用户/ 即将/ 下载/ 的/ 当前/ 可视/ 场景/ ,/ 我们/ 将/ 整个/ DVE/ 虚拟空间/ 从/ 水平/ 面上/ 划分/ 为/ 若干/ 相同/ 尺寸/ 的/ 矩形/ 格子/ ,/ 称之为/ 矩形/ 下载/ 单位/ 域/ (/ DownloadingUnitCell/ ,/ DUC/ )/ ./ 每个/ 下载/ 域/ 拥有/ 唯一/ 标识/ ID/ (/ 如图/ 2/ 所示/ )/ ,/ 则/ 可/ 根据/ 虚拟空间/ 中/ 物体/ 模型/ 的/ 水平面/ 投影/ 位置/ 将/ 它们/ 划归/ 到/ 不同/ 的/ 下载/ 单位/ 域/ [/ 13/ -/ 15/ ]/ ,/ 并/ 采用/ “/ 渐进/ 网格/ ”/ (/ ProgressiveMesh/ ,/ PM/ )/ [/ 16/ ]/ 实现/ 对/ 物体/ 模型/ 的/ 简化/ ./ 一个/ 物体/ 模型/ 在/ 经过/ PM/ 简化/ 后/ ,/ 能够/ 生成/ 一个/ 表示/ 其/ 基本/ 拓扑/ 结构/ 的/ “/ 基/ 网格/ ”/ 场景/ 文件/ 和/ 一系列/ “/ 网格/ 增量/ ”/ 场景/ 文件/ ,/ 因此/ 网络/ 传输/ 场景/ 的/ 最小/ 下载/ 单位/ 从/ 完整/ 物体/ 模型/ 转变/ 为/ 场景/ 文件/ ,/ 而/ 每个/ 落入/ 下载/ 域/ 中/ 的/ 物体/ 都/ 会/ 对应/ 设置/ 一个/ “/ 场景/ 描述/ ”/ 文件/ ,/ 其/ 格式/ 如图/ 2/ 所示/ ./ 本文/ 设定/ 若/ 一个/ 下载/ 域/ 与/ SOI/ 相交/ ,/ 则/ 视/ 整个/ 下载/ 域/ 落入/ SOI/ ,/ 那么/ 通过/ 判定/ 虚拟空间/ 中/ 下载/ 域/ 与/ 当前/ 可视/ 范围/ (/ SOI/ )/ 的/ 关系/ 就/ 能/ 得到/ 落入/ SOI/ 内/ 的/ 场景/ ./ 下面/ 对/ 物体/ 的/ 关注度/ 和/ 重用/ 度/ 给出/ 说明/ ./ 定义/ 1/ ./ 对象/ 关注度/ ./ 表示/ 该/ 对象/ (/ 本文/ 所指/ 的/ 对象/ 即/ 物体/ 模型/ )/ 对/ 用户/ 的/ 吸引力/ ,/ 例如/ 一个/ 虚拟/ 城市/ 中/ 的/ 名胜古迹/ 等/ 往往/ 具有/ 较/ 高/ 的/ 吸引力/ ,/ 而/ 其他/ 节点/ 用户/ 则/ 可以/ 参考/ 该项/ 的/ 数值/ 得知/ 自己/ 未来/ 更/ 有/ 可能/ 会/ 浏览/ 哪些/ 场景/ 并/ 预先/ 进行/ 下载/ ,/ 从而/ 在/ P2P/ 网络/ 中/ 加快/ 对/ 这类/ 物体/ 的/ 下载/ ./ 定义/ 2/ ./ 对象/ 重用/ 度/ ./ 在/ 虚拟空间/ 中/ 是否/ 有/ 其他/ 物体/ 模型/ 与/ 该/ 物体/ 模型/ 在/ 几何/ 形状/ 和/ 尺寸/ 上/ 完全一致/ (/ 即可/ 重复使用/ 的/ 模型/ )/ ,/ 若/ 无/ 重用/ 则/ 取值/ 为/ 0/ ,/ 否则/ 该项/ 的/ 值/ 等于/ 与/ 之/ 完全一致/ 的/ 物体/ 模型/ 的/ 个数/ (/ 如图/ 3/ 所示/ ,/ 居民楼/ 的/ 重用/ 度为/ 4/ )/ ./ 2.2/ MISSOI/ 的/ 分划/ 过程/ 为/ 完成/ 适应/ P2P/ 网络/ 中/ 场景/ 的/ 并行传输/ 需求/ ,/ 本文/ 将/ 现有/ 的/ AOI/ 扩展/ 为/ 多层/ 增量/ 式/ 兴趣/ 扇形/ 域/ MISSOI/ ,/ 用于/ 当前/ 可视/ 场景/ 的/ 判定/ 和/ 场景/ 下载/ 源/ 的/ 搜索/ ./ 如图/ 4/ 所示/ ,/ 假设/ 现有/ 两个/ n/ 层/ MISSOI/ ,/ 其/ 由/ n/ 个/ 同心/ 扇区/ 组成/ ,/ 上下/ 两个/ 同心/ 扇区/ 对应/ 着/ 一个/ AOI/ ./ 按照/ 当前/ 视线/ 方向/ 从远/ 到/ 近/ ,/ 标识/ 每个/ 子/ Page4/ 区域/ 为/ Qn/ ,/ Qn/ -/ 1/ ,/ …/ ,/ Q0/ ,/ …/ ,/ Q/ -/ (/ n/ -/ 1/ )/ ./ MISSOI/ 的/ 最/ 外层/ 半径/ 即/ AOI/ 半径/ R/ ,/ 均/ 为/ 观察者/ 的/ 最大/ 可视/ 距离/ ./ 从/ 整体/ 上/ 看/ ,/ 这/ 两个/ MISSOI/ 分别/ 又/ 可/ 称为/ CVR/ (/ CurrentVisibleRegion/ ,/ 当前/ 可视/ 区域/ ,/ 由/ Q1/ ,/ Q2/ ,/ …/ ,/ Qn/ 组成/ 的/ 一个/ 扇环/ ,/ 夹角/ 通常/ 为/ 120/ °/ )/ 和/ VRA/ (/ VisibleRegionAfterRotation/ ,/ 旋转/ 后/ 可视/ 区域/ ,/ 由/ Q0/ ,/ Q/ -/ 1/ ,/ Q/ -/ 2/ ,/ …/ ,/ Q/ -/ (/ n/ -/ 1/ )/ 组成/ )/ ./ 在/ 基于/ Client/ // Server/ 的/ 场景/ 下载/ 模式/ 中/ ,/ MISSOI/ 中距离/ 当前/ 视点/ 越近/ ,/ 偏离/ 视线/ 角度/ 越/ 小/ 的/ 子/ 区域/ ,/ 其/ 下载/ 优先级/ 越高/ ,/ 显然/ Q1/ >/ …/ >/ Qn/ >/ Q0/ >/ Q/ -/ 1/ >/ Q/ -/ 2/ >/ …/ >/ Q/ -/ (/ n/ -/ 1/ )/ ,/ 这样/ 就/ 能/ 保证/ 用户/ 能够/ 优先/ 下载/ 并/ 渲染/ CVR/ 中/ 的/ 场景/ ./ 其/ 可扩展性/ 则/ 体现/ 在/ :/ 若/ 视点/ 驻留/ 某地/ ,/ 而/ 视点/ 的/ MISSOI/ 中/ 场景/ 又/ 已/ 完全/ 下载/ 了/ ,/ 则/ 可/ 对/ 现有/ 的/ MISSOI/ 进行/ 扩展/ ,/ 利用/ 视点/ 原地/ 驻留/ 的/ 时间/ ,/ 预/ 下载/ [/ 17/ ]/ 未来/ 可能/ 访问/ 到/ 的/ 场景/ ./ 当/ 一个/ 用户/ 进入/ 大规模/ P2P/ -/ DVE/ 中时/ ,/ 其/ 虚拟化/ 身/ 的/ 部分/ 邻居/ 节点/ 很/ 可能/ 已/ 获得/ 该/ 用户/ 所/ 需/ 下载/ 的/ 场景/ ,/ 故可/ 不必/ 再/ 遵循/ C/ // S/ 的/ 按/ 优先级/ 下载/ 的/ 模式/ ,/ 用户/ 对/ 某/ 场景/ 文件/ 的/ 下载/ 请求/ 可以/ 被/ 并行/ 发送至/ P2P/ 覆盖网/ 中/ 所有/ 拥有/ 该/ 场景/ 数据/ 的/ 节点/ ,/ 再/ 从/ 多个/ 节点/ 处/ 并行/ 下载/ 场景/ 数据/ ./ 算法/ 1/ 定义/ 了/ 对/ 单层/ SOI/ 进行/ 分划/ 得到/ MISSOI/ 的/ 过程/ ,/ 目的/ 在于/ 分划/ 后/ 每层/ 内/ 的/ 场景/ 下载/ 请求/ 量/ 与/ 分配/ 给/ 该/ 层/ 内/ 的/ 节点/ 资源/ (/ 如/ 带宽/ )/ 相匹配/ ./ 我们/ 使用/ 了/ Voronoi/ 图/ 的/ 邻居/ 发现/ 策略/ [/ 18/ ]/ 来/ 发现/ MISSOI/ 及其/ 各层/ 内/ 的/ 节点/ ./ 算法/ 1/ 中/ 的/ 阈值/ td/ 为/ MISSOI/ 分层/ 的/ 终止/ 条件/ (/ 设定/ 为/ 0.1/ )/ ,/ 而/ ts/ 则/ 是/ MISSOI/ 分划/ 的/ 终止/ 条件/ (/ 设定/ 为/ 1/ )/ ./ 待/ 分划/ 结束/ 后/ ,/ 单层/ SOI/ 就/ 演变/ 为/ 一个/ 层数/ 为/ 2n/ 的/ MISSOI/ ./ 算法/ 1/ ./ 多层/ 增量/ 式/ 兴趣/ 扇形/ 域/ 的/ 分划/ 算法/ ./ 输入/ :/ 单层/ AOI/ 输出/ :/ 多层/ 增量/ 式/ 兴趣/ 扇形/ 域/ MISSOI1/ ./ 初始/ 中/ 点/ 分层/ ./ 从/ SOI/ 的/ 半径/ R/ 中点/ 处/ 将/ SOI/ 分划/ 为/ 两层/ ;/ 2/ ./ 计算/ 每层/ 的/ 资源/ 需供/ 比/ ./ 分别/ 计算/ 每层/ 内/ 场景/ 文件/ 的/ 数据量/ 与/ 该层/ 节点/ 的/ 可用/ 带宽/ 之/ 比/ ,/ 分别/ 计为/ RN/ 、/ RF/ ;/ 3/ ./ 如/ 分层/ 均衡/ 则/ 结束/ 本轮/ 分层/ ./ 若/ RN/ 和/ RF/ 之差/ 的/ 绝对值/ 小于/ 阈值/ td/ ,/ 则/ 转步/ 5/ ;/ 4/ ./ 调整/ 半径/ 使/ 之/ 趋于/ 均衡/ ./ 减少/ RN/ 和/ RF/ 中/ 较大/ 值/ 所在/ 层/ 的/ 半径/ 直至/ RN/ 和/ RF/ 之差/ 的/ 绝对值/ 小于/ td/ ;/ 5/ ./ 继续/ 分划/ ./ 对于/ RN/ 和/ RF/ 尚未/ 小于/ 阈值/ ts/ 的/ 层/ ,/ 从/ 其/ 当前/ 半径/ 中点/ 处/ 再/ 分划/ 为/ 两个/ 子层/ ,/ 然后/ 转步/ 2/ 分别/ 处理/ 之/ ;/ 6/ ./ 终止/ 分划/ ./ 若/ RN/ 和/ RF/ 均/ 已/ 小于/ 阈值/ ts/ ,/ 则/ 退出/ ./ 2.3/ MISSOI/ 中/ 场景/ 平移/ 下载/ 增量/ 的/ 判定/ 过程/ 目前/ 已知/ 的/ 文献/ (/ 例如/ 文献/ [/ 6/ ]/ )/ 大多/ 采用/ BruteForce/ 扫描/ 来/ 获知/ 用户/ 漫游/ 过程/ 中/ 落入/ 可视/ 范围/ 内/ 的/ 下载/ 域/ ,/ 即/ 通过/ 扫描/ 虚拟空间/ 中/ 的/ 全部/ 区域/ 来/ 判定/ 落入/ AOI/ 的/ 下载/ 域/ ./ 这种/ 方法/ 对/ 时间/ 和/ CPU/ 资源/ 的/ 开销/ 都/ 较大/ ,/ 而/ 通常/ 情况/ 下/ 用户/ 每次/ 视点/ 平移/ 前后/ 的/ 两个/ MISSOI/ 仍/ 有/ 大部分/ 下载/ 域/ 重叠/ ,/ 只有/ 少部分/ 下载/ 域/ 新/ 落入/ 平移/ 后/ 的/ MISSOI/ ./ 因此/ 用户/ 漫游/ 中/ 每次/ 判定/ 可视/ 场景/ 时/ 没有/ 必要/ 扫描/ 全部/ 下载/ 域/ ,/ 只/ 需/ 判定/ 每次/ 新/ 落入/ MISSOI/ 中/ 的/ 场景/ 即可/ ./ 接下来/ 本文/ 给出/ 了/ 一种/ 高效/ 判定/ MISSOI/ 场景/ 平移/ 下载/ 增量/ // 减量/ 的/ 方法/ ./ 2.3/ ./ 1/ 场景/ 平移/ 下载/ 增量/ // 减量/ 设/ MISSOIO1/ 表示/ 其/ 视点/ 在/ 位置/ O1/ 时/ 的/ MISSOI/ ,/ MISSOIO2/ 表示/ 视点/ 平移/ 到/ 位置/ O2/ 的/ MISSOI/ ./ 以图/ 5/ 为例/ ,/ 给出/ 场景/ 下载/ 平移/ 增量/ 及/ 减量/ 的/ 定义/ ./ 定义/ 3/ ./ 场景/ 平移/ 下载/ 增量/ (/ TranslationDown/ -/ loadingIncrement/ )/ / MISSOI/ 即/ 视点/ 平移/ 后/ 新/ 进入/ MISSOIO2/ 的/ 场景/ 集合/ ./ / MISSOI/ =/ {/ MISSOIO2/ -/ MISSOIO1/ ∩/ MISSOIO2/ }/ ./ 定义/ 4/ ./ 场景/ 平移/ 下载/ 减量/ (/ TranslationDown/ -/ loadingDecrement/ )/ / MISSOI/ 即/ 在/ 视点/ 平移/ 后/ 不再/ 被/ MISSOIO1/ 覆盖/ 的/ 场景/ ./ / MISSOI/ =/ {/ MISSOIO1/ -/ MISSOIO1/ ∩/ MISSOIO2/ }/ ./ 2.3/ ./ 2/ 场景/ 平移/ 下载/ 增量/ // 减量/ 的/ 整数/ 拾取/ 算法/ 设/ MISSOI/ 最/ 外层/ 半径/ 为/ r/ ,/ 圆心/ 坐标/ 为/ (/ x0/ ,/ y0/ )/ ./ 以/ 计算机屏幕/ 窗口/ 左上角/ 为/ (/ 0/ ,/ 0/ )/ 建立/ 全局/ 坐标系/ ,/ 每个/ 下载/ 域/ 的/ 唯一/ ID/ 用/ (/ i/ ,/ j/ )/ 确定/ (/ 其中/ i/ 为/ 行号/ ,/ j/ 为列/ 号/ )/ ./ 给定/ 下载/ 域/ 边长/ 为/ d/ ,/ 设某/ 下载/ 域/ 的/ 左上角/ 顶点/ 坐标/ 为/ (/ xp/ ,/ yp/ )/ ,/ 则/ 该/ 顶点/ 对应/ 的/ 该/ 下载/ 域/ 的/ ID/ 为/ (/ yp/ // d/ ,/ xp/ // d/ )/ ./ 为了/ 更/ 方便/ 地/ 判定/ 场景/ 平移/ 下载/ 增量/ // 减量/ ,/ 以/ AOI/ 圆心/ 为/ 原点/ ,/ 建立/ 一个/ 平行/ 于/ 全局/ 坐标系/ 的/ 局部/ 坐标系/ ,/ 从而/ 将/ AOI/ 分为/ 4/ 个/ 象限/ ./ 如图/ 6/ 所示/ ,/ 在/ MISSOI/ 平移/ 前后/ ,/ 若/ 在/ 第/ 1/ 象限/ 对/ p1/ 进行/ 判定/ 其/ 与/ MISSOI/ 的/ 关系/ ,/ 则/ 同样/ 需要/ 对/ 其余/ 3/ 个/ 象限/ 的/ p2/ ,/ p3/ ,/ p4/ 所/ 对应/ 的/ 下载/ 域/ (/ 灰/ Page5/ 色/ )/ 进行/ 操作/ ./ 设/ 视点/ 每次/ 平移/ 距离/ 为/ c/ ,/ 为/ 判定/ 某个/ 下载/ 域/ 是否/ 落入/ MISSOI/ ,/ 将/ 检测点/ (/ 该/ 下载/ 域/ 左上角/ 顶点/ )/ 坐标/ (/ x/ ,/ y/ )/ 分别/ 代入/ 判别式/ (/ 1/ )/ 与/ (/ 2/ )/ ,/ 由此/ 可得式/ (/ 3/ )/ :/ D2/ =/ x/ -/ x/ (/ )/ 02/ +/ y/ -/ y0/ -/ (/ )/ 由于/ 在/ 场景/ 的/ 加载/ 过程/ 当中/ ,/ 优先/ 加载/ 视点/ 前方/ 的/ MISSOI/ ,/ 然后/ 再/ 加载/ 后方/ 的/ MISSOI/ ,/ 当/ 视点/ 向前/ 移动/ 时/ ,/ 前方/ MISSOI/ 移除/ 的/ 场景/ 数据/ 正是/ 后方/ MISSOI/ 所/ 需要/ 的/ 增量/ 数据/ ,/ 所以/ 这里/ 只/ 整体/ 考虑/ 视点/ 前方/ MISSOI/ 的/ 下载/ 增量/ 和/ 视点/ 后方/ MISSOI/ 的/ 下载/ 减量/ ./ 从/ MISSOI/ 右/ 顶点/ 所在/ 下载/ 域/ 开始/ 判定/ ,/ 设该/ 下载/ 域/ 左上角/ 坐标/ 为/ (/ x/ ,/ y/ )/ ,/ 在/ 判定/ 过程/ 中/ 可能/ 存在/ 以下/ 4/ 种/ 情况/ :/ (/ 1/ )/ 当/ D1/ >/ 0/ 和/ D2/ / 0/ ,/ 则/ 视点/ 平移/ 后/ 该/ 点/ 新/ 进入/ MISSOI/ ,/ 因此/ 该点/ 对应/ 的/ 下载/ 域/ 属于/ 场景/ 平移/ 下载/ 增量/ ,/ 落入/ 该/ 下载/ 域/ 的/ 场景/ 需要/ 被/ 下载/ (/ 若/ 其/ 未/ 被/ 下载/ )/ ./ (/ 2/ )/ 当/ D1/ </ 0/ 和/ D2/ >/ 0/ ,/ 则/ 视点/ 平移/ 后/ 该点/ 不再/ 属于/ MISSOI/ ,/ 因此/ 该点/ 对应/ 的/ 下载/ 域/ 属于/ 平移/ 下载/ 减量/ ./ (/ 3/ )/ 当/ D1/ / 0/ 和/ D2/ </ 0/ ,/ 则/ 视点/ 平移/ 前后/ 该点/ 都/ 属于/ MISSOI/ ,/ 表明/ 视点/ 平移/ 并未/ 对此/ 点/ 对应/ 的/ 下载/ 域/ 产生/ 影响/ ./ (/ 4/ )/ 当/ D1/ >/ 0/ 和/ D2/ >/ 0/ 时/ ,/ 则/ 视点/ 平移/ 前后/ 该点/ 都/ 不/ 属于/ MISSOI/ ,/ 表明/ 视点/ 平移/ 对/ 该点/ 对应/ 的/ 下载/ 域/ 未/ 产生/ 影响/ ./ 若/ 检测点/ 未/ 超过/ 平移/ 前/ MISSOI/ 与/ 平移/ 后/ MISSOI/ 所/ 覆盖/ 的/ 边界/ 范围/ ,/ 则/ 继续/ 检测/ 下/ 一/ 下载/ 域/ (/ i/ -/ 1/ ,/ j/ )/ ;/ 否则/ 就/ 检测/ 下载/ 域/ (/ i/ +/ 1/ ,/ j/ -/ 1/ )/ ./ 以上/ 过程/ 完成/ 了/ 对/ 进入/ // 移除/ MISSOI/ 最/ 外层/ 同心圆/ 中/ 场景/ 平移/ 下载/ 增量/ // 减量/ 的/ 判定/ ,/ 接下来/ 再/ 判定/ 落入/ MISSOI/ 各子/ 区域/ 的/ 场景/ 平移/ 下载/ 增量/ // 减量/ ,/ 限于/ 篇幅/ ,/ 具体/ 过程/ 省略/ ./ 以上/ 给出/ 了/ 判定/ 视点/ 平移/ 后/ 落入/ // 移除/ MISSOI/ 内/ 下载/ 域/ 的/ 过程/ ,/ 当/ 用户/ 最初/ 进入/ 虚拟空间/ 时/ ,/ 判定/ 落入/ MISSOI/ 内/ 下载/ 域/ 的/ 过程/ 可/ 被/ 视为/ 是/ 以上/ 过程/ 的/ 一个/ 特例/ ./ 假设/ 当前/ 的/ 检测点/ 为/ P1/ (/ x/ ,/ y/ )/ ,/ 其/ 邻近/ 下载/ 域/ 的/ 检测点/ 为/ P2/ (/ x/ ,/ y/ +/ d/ )/ ,/ 将/ 这/ 两个/ 点/ 代入/ 式/ (/ 3/ )/ ,/ 则/ 得到/ 增量/ 公式/ ./ D1/ (/ P2/ )/ =/ D1/ (/ P1/ )/ +/ 2d/ (/ y/ -/ y0/ )/ +/ d2/ (/ 4/ )/ 对/ 包含/ c/ 和/ d/ 的/ 乘法/ 运算/ :/ 2dy/ ,/ 2dy0/ ,/ d2/ ,/ 2cy/ ,/ 2cy0/ 和/ c2/ ,/ 可以/ 通过/ 对/ c/ 与/ d/ 设定/ 特殊/ 的/ 值来/ 对式/ (/ 3/ )/ 、/ (/ 4/ )/ 进行/ 消除/ 乘法/ 的/ 优化/ ,/ 令/ c/ =/ 1/ ,/ 2/ ,/ 4/ ,/ …/ ,/ 2n/ ,/ d/ =/ 2m/ (/ m/ 为/ 自然数/ )/ ,/ 由于/ 计算机/ 进行/ 的/ 是/ 二进制/ 运算/ ,/ 则/ 式/ (/ 3/ )/ 、/ (/ 4/ )/ 中/ 的/ 乘法/ 运算/ 就/ 可以/ 通过/ 移位/ 操作/ 来/ 实现/ ,/ 这样/ 可/ 大大简化/ 计算机/ 进行/ 运算/ 的/ 复杂度/ ,/ 加快/ 运算/ 速度/ ./ 3/ 基于/ MISSOI/ 的/ 对/ 等/ 覆盖网/ 渐进式/ 下载/ 邻居/ 发现/ 算法/ 对于/ 邻居/ 节点/ 的/ 发现/ 和/ 下载/ 源/ 的/ 搜索/ ,/ 我们/ 将/ 做/ 整体化/ 考虑/ ,/ 由于/ 在/ 场景/ 漫游/ 中/ ,/ 化身/ 视点/ 的/ 移动/ 方向/ 是/ 多变/ 的/ ,/ 兴趣/ 扇区/ 和/ 自身/ SOI/ 之间/ 有/ 重叠/ 的/ 邻居/ 节点/ ,/ 不/ 一定/ 在/ 自身/ 的/ SOI/ 中/ ,/ 但/ 绝大部分/ 在/ 自身/ 的/ AOI/ 中/ ,/ 我们/ 把/ 视点/ 前后/ 的/ 两个/ MISSOI/ 合并/ 成为/ MISAOI/ (/ Multi/ -/ layered/ &/ IncrementallyScalableAOI/ )/ ,/ 这样/ 将/ 更加/ 有利于/ 邻居/ 节点/ 的/ 判定/ 和/ 选择/ ./ 3.1/ 邻居/ 节点/ 发现/ 首先/ ,/ 我们/ 对/ 虚拟/ 场景/ 中/ 节点/ 的/ 角色/ 进行/ 定义/ ./ 定义/ 5/ ./ AOI/ 邻居/ ./ 在/ 虚拟空间/ 中/ ,/ 若/ 一个/ 节点/ i/ 的/ 虚拟化/ 身/ 进入/ 了/ 另/ 一个/ 节点/ 化身/ j/ 的/ AOI/ 之内/ ,/ 则/ 节点/ i/ 被/ 视为/ 节点/ j/ 的/ AOI/ 邻居/ ./ 定义/ 6/ ./ 场景/ 下载/ 源/ ./ 当/ 节点/ k/ 需要/ 下载/ 某一/ Cellij/ 场景/ 文件/ 时/ ,/ 那么/ 虚拟空间/ 中/ 所有/ 已/ 拥有/ (/ 下载/ 过/ )/ 该/ 场景/ 文件/ 的/ 那些/ 节点/ 被/ 视为/ 该/ 场景/ 文件/ Cellij/ 的/ 潜在/ 场景/ 下载/ 源/ ./ 对于/ 某一/ 下载/ 请求/ 节点/ 来说/ ,/ P2P/ 网络/ 中/ 任意/ 节点均/ 有/ 可能/ 成为/ 该/ 请求/ 节点/ 的/ 场景/ 下载/ 源/ ,/ 那/ 如何/ 快速/ 发现/ 合适/ 的/ 场景/ 下载/ 源/ ,/ 避免/ 查询/ P2P/ 网络/ 中/ 全部/ 节点/ 所/ 带来/ 的/ 巨大/ 通信/ 开销/ 就/ 显得/ 很/ 有/ 必要/ ./ 一些/ 研究者/ 将/ 场景/ 下载/ 源/ 的/ 搜索/ 范围/ 限定/ 在/ 了/ 请求/ 节点/ 的/ AOI/ 邻居/ 节点/ 内/ [/ 7/ ,/ 18/ ]/ ./ 而/ 随着/ 化身/ 在/ 虚/ Page6/ 拟/ 空间/ 中/ 不断/ 改变/ 位置/ ,/ 请求/ 节点/ 需要/ 随时/ 发现/ AOI/ 邻居/ ,/ 目前/ 邻居/ 发现/ 策略/ 基本上/ 可以/ 分为/ 两类/ :/ (/ 1/ )/ 通过/ 节点/ 与/ 服务器之间/ 的/ 通信/ 来/ 发现/ 邻居/ [/ 7/ ]/ 每个/ 化身/ 位置/ 发生变化/ 的/ 节点/ 向/ 服务器发送/ 位置/ 更新/ 信息/ ,/ 再/ 由/ 服务器/ 来/ 广播/ 至/ 其余/ 节点/ ,/ 其他/ 节点/ 在/ 收到/ 位置/ 更新/ 信息/ 后/ ,/ 通过/ 判断/ 对方/ 化身/ 位置/ 与/ 自己/ 化身/ AOI/ 域/ 的/ 关系/ 来/ 发现/ 邻居/ 节点/ ./ (/ 2/ )/ 通过/ 节点/ 之间/ 的/ 通信/ 来/ 发现/ 邻居/ [/ 18/ ]/ 利用/ Voronoi/ 图/ ,/ 请求/ 节点/ 通过/ 自身/ 的/ AOI/ 邻居/ 与/ AOI/ 范围/ 外/ 的/ 节点/ 进行/ 通信/ ,/ 以此/ 发现自己/ 化身/ 位置/ 变化/ 后/ 的/ 新/ AOI/ 邻居/ ./ 由于/ 在/ 这种/ 邻居/ 发现/ 策略/ 中/ 服务器/ 不/ 参与/ 邻居/ 发现/ 工作/ ,/ 因此/ 其/ 工作/ 负载/ 大为/ 降低/ ./ 仿真/ 结果/ [/ 18/ ]/ 已经/ 证明/ 这种/ 基于/ Voronoi/ 图/ 的/ 邻居/ 发现/ 策略/ 具有/ 较/ 好/ 的/ 可扩展性/ (/ 能/ 在/ 大规模/ P2P/ -/ DVE/ 中/ 快速/ 发现/ AOI/ 邻居/ )/ 及/ 健壮性/ (/ 即便/ 一定/ 规模/ 的/ 节点/ 非正常/ 退出/ 系统/ ,/ 全局性/ 能/ 也/ 能/ 维持/ 在/ 一个/ 较/ 好/ 的/ 水平/ )/ ./ 因此/ 本文/ 沿用/ 了/ 文献/ [/ 18/ ]/ 中/ 的/ 邻居/ 发现/ 策略/ ./ 图/ 7/ 简要/ 描述/ 了/ 一个/ 两层/ MISAOI/ 在/ 视点/ 平移/ 前后/ 的/ AOI/ 邻居/ 化身/ 的/ 变化/ 情况/ ./ 3.2/ 场景/ 下载/ 源/ 的/ 搜索/ 3.2/ ./ 1/ 基于/ MISAOI/ 的/ 场景/ 下载/ 源/ 分级/ 搜索/ 策略/ 文献/ [/ 6/ ]/ 中/ 提到/ 了/ 一种/ 基于/ AOI/ 的/ 场景/ 下载/ 源/ 搜索/ 策略/ :/ 请求/ 节点/ 向/ 所有/ AOI/ 邻居/ 发送/ 所/ 需/ 场景/ 文件/ 的/ 查询/ 请求/ ,/ 若/ 当前/ AOI/ 内/ 没有/ 发现/ 某个/ 场景/ 文件/ 的/ 场景/ 下载/ 源/ ,/ 则/ 将/ 服务器/ 视为/ 该/ 场景/ 文件/ 的/ 场景/ 下载/ 源/ ./ 这种/ 基于/ AOI/ 的/ 场景/ 下载/ 源/ 搜索/ 策略/ 存在/ 一定/ 缺陷/ :/ (/ 1/ )/ 通常/ 情况/ 下/ 请求/ 节点/ 的/ AOI/ 内/ 只有/ 部分/ 节点/ 拥有/ 所/ 需/ 场景/ ,/ 因此/ 随着/ 场景/ 密集度/ 及/ 邻居/ 节点/ 数量/ 的/ 增加/ ,/ 这种/ 下载/ 源/ 搜索/ 机制/ 会/ 消耗/ 太/ 多/ 带宽/ 资源/ ;/ (/ 2/ )/ 部分/ 位于/ AOI/ 外/ 的/ 节点/ 仍/ 有/ 可能/ 成为/ 场景/ 下载/ 源/ ,/ 而/ 该/ 下载/ 源/ 搜索/ 策略/ 的/ 搜索/ 范围/ 则/ 仅/ 包含/ AOI/ 邻居/ 及/ 服务器/ ,/ 搜索/ 不/ 完全/ ./ 当/ 一个/ 请求/ 节点/ 需要/ 下载/ 给定/ 区域/ 内/ 场景/ 时/ ,/ 那些/ 化身/ 正/ 位于/ 该/ 区域/ 或/ 离该/ 区域/ 较近/ 的/ 节点/ 由于/ 与/ 该/ 节点/ 有/ 更/ 多/ 相同/ 的/ 兴趣/ 域/ ,/ 因此/ 这些/ 节点/ 更/ 有/ 可能/ 成为/ 合适/ 的/ 场景/ 下载/ 源/ ./ 基于/ 以上/ 认识/ ,/ 本文/ 提出/ 一种/ 基于/ MISAOI/ 的/ 场景/ 下载/ 源/ 分级/ 搜索/ 策略/ ,/ 如图/ 8/ 所示/ ./ 假设/ 一个/ 请求/ 节点/ 需要/ 下载/ 落入/ 其/ MISAOI/ 内/ Qi/ (/ -/ n/ / i/ / n/ -/ 1/ )/ 中/ 的/ 场景/ ,/ 具体/ 算法/ 如下/ ./ 索/ 算法/ ./ 算法/ 2/ ./ 基于/ MISAOI/ 的/ 场景/ 下载/ 源/ 分级/ 搜/ 输入/ :/ Qi/ 内/ 场景/ 文件/ Pj/ 的/ 场景/ 源/ 查询/ 请求/ 输出/ :/ 场景/ 文件/ Pj/ 的/ 场景/ 下载/ 源/ 集合/ 1/ ./ 初次/ 搜索/ ./ 向/ Qi/ 内/ 节点/ 发送/ Pj/ 的/ 场景/ 查询/ 请求/ ;/ 2/ ./ 发现/ 场景/ 下载/ 源/ ./ 若/ Pj/ 被/ Qi/ 内/ 某些/ 节点/ 成功/ 回应/ ,/ 则/ 返回/ ;/ 3/ ./ 生成/ 查询/ 优先级/ 队列/ Quesearch/ ./ 对/ 当前/ MISAOI/ 中/ 的/ 扩展/ 层/ 分别/ 按照/ 〈/ Q/ (/ i/ +/ 1/ )/ ,/ Q/ (/ 1/ -/ i/ )/ 〉/ ,/ 〈/ Q/ (/ i/ +/ 2/ )/ ,/ Q/ -/ i/ 〉/ ,/ …/ 的/ 查询/ 优先级/ 顺序/ 插入/ 到/ 二元/ 组/ 队列/ Quesearch/ ;/ 4/ ./ 发送/ Pj/ 的/ 查询/ 请求/ ./ 向/ Quesearch/ 队头/ 的/ 扩展/ 层内/ 节点/ 发送/ Pj/ 的/ 查询/ 请求/ ;/ 5/ ./ 在/ Quesearch/ 中/ 发现/ 场景/ 下载/ 源/ ./ 若/ Pj/ 被/ 该/ 层/ 内/ 的/ 某些/ 节点/ 成功/ 回应/ ,/ 则/ 结束/ 搜索/ 并/ 返回/ ;/ 6/ ./ 扩展/ 到/ MISAOI/ 的/ 第/ n/ +/ 1/ 层/ ./ 若/ Quesearch/ 已经/ 到达/ 队尾/ ,/ 则/ 将/ 现有/ n/ 层/ MISAOI/ 扩大/ 至/ n/ +/ 1/ 层/ ,/ 并/ 向/ 该/ 层/ 中/ 的/ 节点/ 发送/ Pj/ 的/ 查询/ 请求/ ,/ 转步/ 5/ ;/ 7/ ./ 选择/ 服务器/ 作为/ 场景/ 下载/ 源/ ./ 将/ 服务器/ 视为/ Pj/ 最后/ 的/ 场景/ 下载/ 源/ ./ 3.3/ 最优/ 场景/ 下载/ 源/ 选择/ 策略/ 对于/ 某一/ 场景/ 文件/ 可能/ 存在/ 多个/ 场景/ 下载/ 源/ ,/ 因此/ 请求/ 节点/ 又/ 面临/ 着/ 场景/ 下载/ 源/ 的/ 选择/ 问题/ ./ 目前/ 文献/ [/ 6/ ]/ 采取/ 的/ 方法/ 是/ 在/ 多个/ 场景/ 下载/ 源/ 候选者/ 中/ 随机/ 选择/ 一个/ ,/ 同时/ 限定/ 了/ 每个/ 场景/ 下载/ 源能/ 同时/ 处理/ 的/ 下载/ 请求/ 数量/ 为/ 5/ 个/ ./ 这种/ 过于/ 简单/ 的/ 场景/ 下载/ 源/ 选择/ 策略/ 存在/ 一定/ 缺陷/ :/ 随机/ 选择/ 可能/ 会/ 造成/ 节点/ 的/ 负担/ 不/ 均匀/ ,/ 而/ 拥有/ 较/ 多/ 资源/ 的/ 节点/ 却/ 受限于/ 同时/ 处理/ 的/ 请求/ 数/ 上限/ 而/ 无法/ 及时/ 对/ 为/ 更/ 多/ 请求/ 响应/ ,/ 这即/ 造成/ 了/ 下载/ 资/ Page7/ 源/ 的/ 浪费/ ,/ 增大/ 了/ 下载/ 失败/ 的/ 概率/ ./ 为/ 克服/ 以上/ 随机/ 选择/ 策略/ 存在/ 的/ 问题/ ,/ 本文/ 提出/ 了/ 一种/ “/ 场景/ 下载/ 请求/ 动态分配/ ”/ 策略/ :/ 对于/ 场景/ 文件/ 下载/ 请求/ 队列/ 中/ 的/ 每/ 一个/ 请求/ ,/ 将/ 从/ 其/ 当前/ 所有/ 场景/ 下载/ 源中/ 选择/ 一个/ 处理/ 能力/ 最强/ 的/ 节点/ (/ 最优/ 场景/ 下载/ 源/ )/ 来/ 提供/ 下载/ 服务/ ./ 假定/ 某/ 场景/ 文件/ 的/ 下载/ 请求/ 节点/ 有/ n/ 个/ 场景/ 下载/ 源/ ,/ 通过/ 式/ (/ 5/ )/ 来/ 评估/ 每个/ 场景/ 下载/ 源/ 的/ 资源/ 得分/ 状况/ ,/ 设/ ResourceScore/ (/ i/ )/ 为/ 场景/ 下载/ 源/ i/ 的/ 资源/ 得分/ ,/ NumofRequest/ (/ i/ )/ 为/ 场景/ 下载/ 源/ i/ 正在/ 处理/ 的/ 下载/ 请求/ 数量/ ,/ Bw/ (/ i/ )/ 为/ 目前/ 场景/ 下载/ 源/ i/ 的/ 可用/ 带宽/ ,/ 而/ Lat/ (/ i/ )/ 表示/ 下载/ 请求/ 节点/ 到/ 场景/ 下载/ 源/ i/ 的/ 基本/ 网络/ 传输/ 延时/ ,/ 分别/ 分配/ 权重/ α/ ,/ β/ 和/ γ/ ,/ α/ +/ β/ +/ γ/ =/ 1/ ,/ 这/ 3/ 个/ 权重/ 初始/ 均/ 设为/ 等值/ ./ ResourceScore/ (/ i/ )/ =/ α/ 1/ 假设/ 每个/ 下载/ 源/ 当前/ 可用/ 带宽/ 为/ 其/ 所/ 拥有/ 总/ 带宽/ 的/ 5/ %/ ,/ 正/ 处理/ 的/ 请求/ 数量/ 为/ 50/ 个/ ,/ 根据/ 式/ (/ 5/ )/ 来/ 设定/ 阈值/ TResource/ 的/ 初值/ ,/ TResource/ 的/ 设定/ 可以/ 根据/ 场景/ 下载/ 源/ 的/ 数量/ 来/ 确定/ ,/ 当可/ 供选择/ 的/ 场景/ 下载/ 源较/ 多时/ ,/ TResource/ 可以/ 设定/ 在/ 较/ 高/ 的/ 值/ ,/ 反之/ 则/ 设定/ 为/ 较/ 低/ 的/ 值/ ./ 请求/ 节点/ 将/ 资源/ 得分/ 高于/ TResource/ 的/ 场景/ 下载/ 源/ 挑选出/ 并/ 形成/ 下载/ 服务/ 优先级/ 队列/ QSource/ ./ 而/ 那些/ 资源/ 得分/ 低于/ TResource/ 的/ 场景/ 下载/ 源则/ 被/ 认为/ 不能/ 提供/ 下载/ 服务/ 而/ 被/ 舍弃/ ,/ 其/ 目的/ 是/ 为了/ 避免/ 资源/ 得分/ 较/ 低/ 的/ 节点/ 负荷/ 过重/ ./ 由此可见/ ,/ 队列/ QSource/ 是/ 动态/ 的/ ,/ 当/ 那些/ 被/ 舍弃/ 下载/ 源/ 重新/ 拥有/ 足够/ 的/ 资源/ 分数/ 时/ ,/ 就/ 有/ 可能/ 会/ 再次/ 被/ 加入/ 到/ 该/ 队列/ ;/ 反之/ 当其/ 资源/ 得分/ 低于/ TResource/ 时则/ 退出/ 该/ 队列/ ./ 算法/ 3/ ./ 最优/ 场景/ 下载/ 源/ 选择/ ./ 输入/ :/ 场景/ 文件/ Pi/ 的/ 下载/ 请求/ 输出/ :/ 场景/ 文件/ Pi/ 的/ 最优/ 场景/ 下载/ 源/ 1/ ./ 计算资源/ 得分/ ./ 对/ Pi/ 的/ 每个/ 场景/ 下载/ 源/ ,/ 用式/ (/ 5/ )/ 计算/ 其/ 资源/ 得分/ ;/ TResource/ ,/ 转步/ 1.2/ ./ 生成/ 队列/ QSource/ ./ 筛选/ 出/ Pi/ 的/ 场景/ 下载/ 源中/ 资源/ 得分/ 高于/ 阈值/ TResource/ 的/ 节点/ ,/ 按/ 资源/ 得分/ 从/ 高到/ 低/ 生成/ 队列/ QSource/ ;/ 3/ ./ 初次/ 分配/ ./ 将/ Pi/ 的/ 下载/ 请求/ 分配/ 给/ QSource/ 队头/ 节点/ ;/ 4/ ./ 场景/ 下载/ ./ 若该/ 节点/ 能/ 提供/ 下载/ 服务/ ,/ 则/ 传输/ Pi/ ,/ 从/ QSource/ 删除/ 该/ 节点/ ,/ 并/ 成功/ 返回/ ;/ 5/ ./ 转发/ 下载/ 请求/ ./ 若/ QSource/ 队列/ 非空/ ,/ 那么/ 将/ Pi/ 的/ 下载/ 请求/ 转发/ 至/ QSource/ 中/ 的/ 下/ 一个/ 节点/ ,/ 转步/ 4/ ;/ 6/ ./ 启动/ 下/ 一轮/ 分配/ ./ 若/ QSource/ 队列/ 已空/ ,/ 那么/ 降低/ 阈值/ 4/ 仿真/ 实验/ 结果/ 与/ 性能/ 分析/ 4.1/ 仿真/ 环境/ 的/ 设定/ 目前/ 由于/ 硬件/ 条件/ 的/ 限制/ ,/ 在/ 真实/ 大规模/ P2P/ 网络/ 中/ 进行/ 实验/ 显得/ 不太/ 现实/ ,/ 故/ 大多数/ 研究者/ 们/ 都/ 选择/ 了/ 仿真/ 实验/ ./ 基于/ 文献/ [/ 6/ ]/ 中/ 的/ 开源/ 软件/ (/ 参见/ http/ :/ // // ascend/ ./ sourceforge/ ./ net/ )/ 实现/ 了/ 本文/ 用于/ 模拟/ P2P/ 网络/ 大规模/ 节点/ 渐进式/ 下载/ 的/ 仿真/ 平台/ ./ 我们/ 首先/ 构建/ 了/ 一个/ 大规模/ 虚拟/ 室外/ 场景/ (/ 简单/ 起/ 见/ ,/ 场景/ 中/ 物体/ 模型/ 大小/ 均/ 设为/ 相等/ ,/ 且/ 均匀分布/ 于/ 虚拟空间/ )/ ,/ 将/ 其/ 存储/ 于/ 一台/ 服务器/ 上/ ,/ 再/ 采用/ 渐进/ 网格/ 技术/ [/ 16/ ]/ 对/ 场景/ 中/ 的/ 模型/ 进行/ 精简/ 编码/ ,/ 沿/ 水平面/ 将/ 虚拟/ 场景/ 空间/ 划分/ 为/ 若干/ 矩形/ 下载/ 域/ ,/ 其中/ 每个/ 虚拟/ 物体/ 对象/ 都/ 建立/ 了/ 相应/ 的/ “/ 场景/ 描述/ 文件/ ”/ ./ 仿真/ 实验/ 中/ ,/ 当/ 一定/ 数量/ 的/ 节点/ 进入/ P2P/ 网络/ 时/ ,/ 用户/ 化身/ 的/ 漫游/ 行为/ 分为/ 随机/ 运动/ (/ RandomMovement/ ,/ RW/ )/ 模式/ 和/ 聚集/ 运动/ (/ ClusterMove/ -/ ment/ ,/ CW/ )/ 模式/ [/ 6/ ]/ (/ 参见/ 图/ 9/ )/ ./ 在/ 随机/ 运动/ 模式/ 中/ ,/ 节点/ 每/ 一步/ 的/ 移动/ 方向/ 和/ 位置/ 均/ 为/ 随机/ 产生/ 的/ ;/ 聚集/ 运动/ 模式/ 则/ 来源于/ 虚拟环境/ (/ 如/ 虚拟/ 城市/ )/ 的/ 漫游/ 体验/ ,/ 大部分/ 游客/ 会/ 关注/ 某些/ 景观/ 地点/ ,/ 并/ 聚集/ 在/ 这些/ 热点/ 区域/ 周围/ ./ 因此/ ,/ 我们/ 在/ 虚拟环境/ 中/ 设定/ 一定/ 数量/ (/ n/ 为/ 节点/ 数量/ )/ 的/ 热点/ 区域/ ,/ 虚拟化/ 身/ 一般/ 将/ 尽可能/ 地朝/ 距离/ 其/ 最近/ 的/ 热点/ 区域/ 移动/ ./ 这里/ 我们/ 作/ 如下/ 假定/ :/ (/ 1/ )/ 用户/ 端的/ 存储空间/ 足够/ 容纳/ 整个/ 虚拟环境/ ,/ 故未/ 涉及/ 缓存/ 剔除/ 问题/ ./ (/ 2/ )/ 每秒/ 化身/ 将/ 平移/ 10/ 步/ ,/ 仿真/ 持续/ 3000/ 步/ ,/ 统计/ 每步/ 数据/ 的/ 平均值/ ./ (/ 3/ )/ 用户/ 之间/ 的/ 通信/ 延时/ 设/ 为/ 常数/ ,/ 即下/ 一步/ 将/ 收到/ 上/ 一步/ 发送/ 的/ 信息/ ,/ 若因/ 带宽/ 不足/ ,/ 信息/ 到达/ 将/ 被/ 延迟/ 为/ 实际/ 传输/ 时间/ ./ 为了/ 叙述/ 方便/ ,/ 本文/ 所/ 提出/ 的/ 基于/ MISSOI/ // MISAOI/ 的/ 海量/ 网上/ 虚拟/ 场景/ 的/ P2P/ 渐进式/ 传输/ 机制/ 用/ SPT/ (/ MISAOIbasedP2PProgressiveTransmissionofHugeWebVRscenes/ )/ 标识/ ./ 在/ 目/ Page8/ 前/ 已知/ P2P/ 传输/ DVE/ 场景/ 的/ 方法/ [/ 3/ ,/ 7/ -/ 9/ ]/ 中/ ,/ 我们/ 的/ 思想/ 与/ 文献/ [/ 6/ ]/ 最为/ 接近/ ,/ 又/ 沿用/ 了/ 文献/ [/ 6/ ]/ 的/ 邻居/ 发现/ 策略/ ,/ 所以/ 主要/ 与/ 文献/ [/ 6/ ]/ 的/ 仿真/ 结果/ 进行/ 对比/ 分析/ ./ 各项/ 仿真/ 参数/ 具体/ 设定/ 参见/ 表/ 1/ ./ MISAOI/ 最/ 外层/ 半径/ 4.2/ 可视/ 场景/ 下载/ 域/ 的/ 拾取/ 目前/ 主要/ 有/ 两种/ 方法/ 来/ 判定/ 用户/ 每步/ 漫游/ 的/ 可视/ 场景/ 区域/ ,/ 即/ 判断/ 哪些/ 下载/ 域/ 落入/ 用户/ 的/ 当前/ 视野/ 范围/ (/ MISSOI/ )/ 内/ ./ 第/ 1/ 种/ 方法/ 是/ 文献/ [/ 6/ ]/ 中/ 采用/ 的/ 穷索法/ (/ BruteForce/ )/ ,/ 即/ 扫描/ 全部/ 下载/ 域/ 阵列/ ;/ 第/ 2/ 种/ 就是/ 本文/ 所/ 提出/ 的/ 场景/ 下载/ 域/ 的/ 整形/ 增量/ 拾取/ 法/ ./ 从表/ 2/ 中/ 可以/ 看出/ ,/ 每当/ 视点/ 移动/ 时/ ,/ 其/ MISSOI/ 也/ 相应/ 地/ 平移/ ./ 前者/ (/ BruteForce/ )/ 每次/ 都/ 要/ 重新/ 扫描/ 整个/ 下载/ 域/ 才能/ 拾取/ 下载/ 增量/ 域/ ,/ 而/ 我们/ 运用/ 增量/ 扫描/ 思想/ ,/ 仅仅/ 需要/ 加减法/ 与/ 移位/ 操作/ 就/ 能/ 高效/ 地/ 拾取/ MISSOI/ 周围/ 区域/ 的/ 下载/ 增量/ 域/ ,/ 使得/ 拾取/ 时间/ 较之/ 第一种/ 方法/ 大为/ 降低/ ,/ 其所/ 耗费/ 的/ 时间/ 只是/ 第一种/ 方法/ 的/ 1/ %/ 左右/ ./ 表/ 2/ 两种/ 不同/ 方法/ 的/ 下载/ 域/ 拾取/ 时间/ 性能/ 比较/ 结果/ 下载/ 域/ 宽度/ BruteForce/ 判定/ MISAOI/ 整数/ 1001251504.3/ 场景/ 下载/ 源/ 查询/ 成功率/ 场景/ 下载/ 源/ 查询/ 成功率/ (/ SceneSourcesSearchingSuccessRatio/ ,/ SSSSR/ )/ ,/ 即/ 每次/ 用户/ 视点/ 平移/ 后/ 发送/ 场景/ 文件/ 查询/ 请求/ 时/ ,/ 被/ 成功/ 回应/ 的/ 查询/ 请求/ 次数/ 与/ 用户/ 总共/ 发送/ 的/ 场景/ 查询/ 次数/ 的/ 比值/ ./ 分别/ 采用/ 文献/ [/ 6/ ]/ 中/ 基于/ AOI/ 的/ 场景/ 下载/ 源/ 搜索/ 策略/ 与/ 基于/ MISAOI/ 的/ 场景/ 下载/ 源/ 分级/ 搜索/ 策略/ 进行/ 仿真/ 对比/ ,/ 从图/ 10/ 中/ 可知/ ,/ 后者/ 的/ 场景/ 下载/ 源/ 查询/ 成功率/ 远高于/ 前者/ ,/ 前者/ 最高/ 未/ 超过/ 50/ %/ ,/ 而/ 后者/ 则/ 始终/ 维持/ 在/ 50/ %/ 以上/ ./ 对/ 以上/ 仿真/ 结果/ 的/ 分析/ 是/ :/ 后者/ 先/ 将/ 某/ 区域/ 内/ 场景/ 查询/ 请求/ 发送至/ 该/ 区域/ 内/ 节点/ ,/ 在/ 该/ 区域/ 内/ 未能/ 发现/ 场景/ 下载/ 源/ 的/ 情况/ 下/ ,/ 才/ 继续/ 向/ 邻居/ 区域/ 搜索/ ;/ 而/ 这/ 一/ 区域/ 内/ 节点/ 由于/ 与/ 该/ 请求/ 节点/ 具有/ 相同/ 兴趣/ 域/ ,/ 有/ 较/ 高/ 的/ 概率/ 拥有/ 该/ 区域/ 内/ 场景/ 数据/ ,/ 因此/ 场景/ 查询/ 成功率/ 较/ 前者/ 更高/ ./ 仿真/ 结果/ 说明/ ,/ 基于/ MISAOI/ 的/ 场景/ 下载/ 源/ 分级/ 搜索/ 机制/ SPT/ 能够/ 在/ 大规模/ P2P/ 网络/ 中以/ 更/ 小/ 的/ 通信/ 开销/ 发现/ 场景/ 下载/ 源/ ./ 4.4/ 场景/ 下载/ 请求/ 失败率/ 场景/ 下载/ 请求/ 失败率/ (/ ScenesDownloadingRequestFailureRatio/ ,/ SDRFR/ )/ ,/ 这/ 是/ 是/ 当/ 用户/ 每次/ 发送/ 场景/ 数据/ 下载/ 请求/ 时/ ,/ 未能/ 被/ 场景/ 下载/ 源/ 成功/ 回应/ 的/ 下载/ 请求/ 数/ 与/ 总共/ 发送/ 的/ 场景/ 下载/ 请求/ 数之比/ ./ 我们/ 分别/ 实现/ 了/ 文献/ [/ 6/ ]/ 中/ 的/ 随机/ 选择/ 策略/ 和/ 本文/ 所/ 提出/ 的/ 最优/ 场景/ 下载/ 源/ 选择/ 策略/ ,/ 实验/ 结果/ 如图/ 11/ 所示/ ,/ 前者/ 的/ SDRFR/ 最高/ 达/ 24/ %/ ,/ 随着/ 节点/ 数量/ 的/ 增加/ 而/ SDRFR/ 呈现/ 降低/ 的/ 趋势/ ,/ 但/ 其/ 最低/ SDRFR/ 也/ 达到/ 了/ 12/ %/ ;/ 而/ 后者/ 的/ 这/ 一/ 指标/ 基本/ Page9/ 稳定/ ,/ 平均值/ 为/ 约/ 6/ %/ ,/ 而/ 最低值/ 只有/ 4/ %/ ,/ 明显/ 好于/ 前者/ ./ 这是/ 由于/ 最优/ 场景/ 下载/ 源/ 选择/ 策略/ 对/ 所有/ 的/ 场景/ 下载/ 请求/ 都/ 尽可能/ 选择/ 当前/ 资源/ 得分/ 高/ 的/ 节点/ 来/ 提供/ 下载/ 服务/ ,/ 降低/ 了/ 场景/ 下载/ 请求/ 的/ 失败率/ ./ 4.5/ 基/ 网格/ 下载/ 延时/ 基/ 网格/ 下载/ 延时/ (/ BaseLatency/ )/ 是/ 请求/ 节点/ 发送/ “/ 场景/ 文件/ 请求/ 队列/ ”/ 中基/ 网格/ 文件/ 请求/ 到/ 基/ 网格/ 文件/ 被/ 成功/ 返回/ 至/ 请求/ 节点/ 这个/ 过程/ 所/ 耗费/ 的/ 时间/ ./ 基/ 网格/ 下载/ 延时/ 是/ 描述/ 下载/ 性能/ 的/ 重要/ 指标/ 之一/ ,/ 基/ 网格/ 下载/ 延时/ 越小则/ 用户/ 需/ 等待/ 看到/ 最低/ 分辨率/ 场景/ 的/ 时间/ 越短/ ./ 基/ 网格/ 下载/ 延时/ 主要/ 消耗/ 在/ 以下/ 方面/ :/ (/ 1/ )/ 请求/ 节点/ 与其/ 最优/ 场景/ 下载/ 源/ 之间/ 用于/ 建立/ 传输/ 连接/ 的/ 时间/ 开销/ TConnection/ ./ (/ 2/ )/ 该基/ 网格/ 文件/ 的/ 查询/ 请求/ 被/ 其/ 最优/ 场景/ 下载/ 源/ 成功/ 响应/ 所/ 耗费/ 的/ 时间/ TProcessing/ ./ (/ 3/ )/ 该基/ 网格/ 文件/ 的/ 网络/ 传输/ 时间/ TTransmission/ ./ BaseLatency/ =/ TConnection/ +/ TProcessing/ +/ TTransmission/ (/ 8/ )/ 从图/ 11/ 可以/ 看出/ ,/ 在/ C/ // S/ 模式/ 下/ ,/ 由于/ 数量/ 众多/ 的/ 节点/ 只能/ 同时/ 分享/ 服务器端/ 有限/ 的/ 网络带宽/ ,/ 基/ 网格/ 下载/ 延时/ 随着/ 下载/ 请求/ 节点/ 数量/ 的/ 增加/ 呈现/ 急剧/ 增长/ 的/ 趋势/ ,/ 当/ 节点/ 数量/ 达到/ 2000/ 时/ ,/ 基/ 网格/ 延时/ 就/ 已经/ 达到/ 了/ 340/ 步/ ,/ 因此/ 传统/ C/ // S/ 模式/ 难以/ 适应/ 海量/ 用户/ 的/ 并发/ 下载/ 请求/ ./ 但图/ 12/ 却/ 显示/ 了/ P2P/ 传输/ 模式/ 下/ 的/ 基/ 网格/ 下载/ 延时/ 稳定/ 在/ 20/ 步/ 之内/ ,/ 极为/ 有效/ 地/ 改善/ 了/ C/ // S/ 模式/ 的/ 基/ 网格/ 延时/ “/ 瓶颈/ ”/ 问题/ ./ 我们/ 从/ 以下/ 方面/ 对/ P2P/ 传输/ 模式/ 中/ 的/ 仿真/ 结果/ 进行/ 了/ 分析/ :/ (/ 1/ )/ 在/ P2P/ 网络/ 中/ ,/ 场景/ 文件/ 的/ 传输/ 充分利用/ 了/ 节点/ 之间/ 的/ 带宽/ ,/ 因此/ 可/ 提供/ 用于/ 传输/ 场景/ 文件/ 的/ 带宽/ 较/ C/ // S/ 模式/ 更高/ ;/ (/ 2/ )/ 由于/ 采用/ 了/ MISAOI/ 场景/ 分级/ 搜索/ 策略/ 和/ 场景/ 下载/ 请求/ 动态分配/ 方法/ ,/ 基/ 网格/ 的/ 下载/ 请求/ 能够/ 迅速/ 找到/ 其/ 最优/ 场景/ 下载/ 源/ ./ 在/ 基/ 网格/ 下载/ 延时/ 这个/ 重要/ 性能指标/ 上/ ,/ 我们/ 的/ SPT/ 与/ FLoD/ [/ 6/ ]/ 的/ 表现/ 基本一致/ ,/ 都/ 同样/ 远/ 优于/ C/ // S/ 模式/ ,/ 并/ 随着/ 节点/ 数目/ 的/ 增加/ ,/ 均/ 呈现/ 了/ 很/ 好/ 的/ 稳定性/ ./ 4.6/ 下载/ 饱满度/ 下载/ 饱满度/ (/ DownloadingFillRatio/ )/ 是/ 用户/ 在/ 漫游/ 过程/ 中/ ,/ 每步/ 已/ 成功/ 下载/ 当前/ 可视/ 场景/ 占/ 所有/ 可视/ 场景/ 总量/ 的/ 比例/ ./ 下载/ 饱满度/ 是/ 描述/ 下载/ 性能/ 的/ 另/ 一个/ 重要/ 指标/ 之一/ ,/ 下载/ 饱满度/ 越高则/ 虚拟/ 漫游/ 的/ 实时性/ 和/ 视觉效果/ 会越/ 好/ ./ 我们/ 分别/ 在/ C/ // S/ 模式/ 和/ P2P/ 网络/ 中/ 进行/ 了/ 仿真/ 实验/ ,/ 图/ 13/ 显示/ 随着/ 用户/ 节点/ 数量/ 的/ 增加/ ,/ C/ // S/ 传输/ 模式/ 中/ 下载/ 饱满度/ 急剧下降/ ./ 造成/ 以上/ 结果/ 的/ 原因/ 是/ Server/ 端/ 网络带宽/ 是/ 有限/ 的/ ,/ 当/ 用户/ 节点/ 数/ 越来越/ 多时/ ,/ 每个/ 用户/ 节点/ 能/ 分享/ 的/ 带宽/ 会/ 越来越少/ ./ 然而/ ,/ 我们/ 所/ 提出/ 的/ 基于/ MISAOI/ 的/ P2P/ 渐进/ 传输/ 模式/ SPT/ 中/ ,/ 即便/ 当/ 用户/ 节点/ 数在/ 不断/ 增加/ ,/ 虚拟/ 场景/ 的/ 下载/ 饱和度/ 依然/ 均/ 保持/ 在/ 90/ %/ 以上/ ,/ 略/ 好/ 于/ FLoD/ [/ 6/ ]/ ,/ 远/ 优于/ C/ // S/ ,/ 并/ 具有/ 良好/ 的/ 稳定性/ ./ 4.7/ 服务器端/ 下载/ 率/ 服务器端/ 下载/ 率/ (/ ServerDownloadingRatio/ ,/ SDR/ )/ ,/ 这/ 是/ 在/ P2P/ 网络/ 中/ ,/ 用户/ 从/ 服务器端/ 下载/ 的/ 场景/ 数据量/ 占/ 其/ 所有/ 下载/ 场景/ 数据量/ 的/ 比值/ ./ 基于/ P2P/ 的/ 虚拟/ 场景/ 传输/ 机制/ 的/ 目的/ 在于/ 尽可能/ 降低/ 服务器端/ 工作/ 负担/ ./ 从图/ 14/ 可/ 看出/ ,/ 无论是/ 在/ 随机/ 运动/ 还是/ 聚集/ 运动/ 模式/ 下/ ,/ 绝大部分/ 虚拟/ 场景/ 都/ 是/ 通过/ 节点/ 之间/ 的/ 相互/ 传输/ 来/ 下载/ 的/ ,/ 只有/ 极少/ 比例/ (/ SDR/ 始终/ 维持/ 在/ 2/ %/ 以内/ )/ 的/ 场景/ 是从/ 服务器端/ 下载/ 的/ ./ 显然/ ,/ 与/ SDR/ 为/ 100/ %/ 的/ C/ // S/ 模式/ 相比/ ,/ 我们/ 所/ 提出/ 基于/ P2P/ 的/ 海量/ 虚拟/ 场景/ 渐进式/ 下载/ 机制/ SPT/ 能够/ 大幅度降低/ 服务器端/ 的/ 负载/ ./ Page105/ 结语/ 本文/ 设计/ 了/ 一种/ 用于/ 多用户/ 在线/ 高效/ 下载/ 海量/ 虚拟/ 场景/ 的/ P2P/ 渐进式/ 下载/ 机制/ ,/ 其/ 贡献/ 主要/ 体现/ 在/ :/ (/ 1/ )/ 扩展/ 了/ 传统/ 的/ AOI/ 并/ 提出/ 了/ 新/ 概念/ “/ 多层/ 增量/ 式/ 兴趣/ 扇形/ 域/ ”/ (/ MISSOI/ )/ ;/ (/ 2/ )/ 给出/ 了/ 一个/ MISSOI/ 的/ 动态/ 分划/ 算法/ ;/ (/ 3/ )/ 给出/ 了/ MISSOI/ 下载/ 增量/ 的/ 整数/ 拾取/ 方法/ ,/ 这样/ 用户/ 可以/ 快速/ 判定/ 对于/ 当前/ 视点/ 需要/ 下载/ 的/ 最佳/ 分辨率/ 场景/ 区域/ ;/ (/ 4/ )/ 给出/ 一种/ 基于/ MISAOI/ 的/ 场景/ 下载/ 源/ 节点/ 分级/ 搜索/ 策略/ ,/ 使得/ 用户/ 能/ 快速/ 发现/ 拥有/ 自己/ 所/ 需/ 下载/ 场景/ 的/ 邻居/ 节点/ ;/ (/ 5/ )/ 给出/ 了/ 一种/ 动态/ 场景/ 请求/ 分配/ 策略/ ,/ 使/ 用户/ 能/ 在/ 多个/ 场景/ 下载/ 源中/ 选择/ 一个/ 最优/ 节点/ 用于/ 实际/ 的/ 场景/ 文件传输/ ./ 仿真/ 实验/ 也/ 验证/ 了/ 本文/ 提出/ 的/ 基于/ MISSOI/ 的/ 海量/ 虚拟/ 场景/ P2P/ 渐进/ 传输/ 机制/ ,/ 较/ 已有/ 方法/ 能/ 更/ 有效/ 地/ 降低/ 服务器端/ 的/ 工作/ 负载/ ,/ 减少/ 网络通信/ 量/ ,/ 为/ 进一步/ 实现/ 海量/ 虚拟/ 场景/ 的/ 网上/ 实时/ 传输/ 奠定/ 很/ 好/ 的/ 研究/ 基础/ ./ 我们/ 下/ 一步/ 的/ 工作/ 将/ 主要/ 着眼于/ :/ (/ 1/ )/ 本文/ 目前/ 假定/ 用户/ 节点/ 的/ 存储空间/ 无限/ ,/ 因此/ 未/ 考虑/ 缓存/ 更新/ 问题/ ,/ 而/ 实际/ 的/ DVE/ 中/ 参与/ 节点/ 的/ 存储空间/ 有限/ (/ 尤其/ 是/ PDA/ 、/ 手机/ 等/ 移动/ 终端/ )/ ,/ 因此/ 需要/ 设计/ 合理/ 的/ 场景/ 数据/ 更新/ 机制/ ,/ 尽可能/ 保留/ 用户/ 访问/ 频率/ 最高/ 的/ 场景/ 内容/ ./ (/ 2/ )/ 由于/ 用户/ 的/ 带宽/ 既/ 可/ 用于/ 自身/ 下载/ 也/ 可/ 用于/ 上传/ 场景/ ,/ 因此/ 有/ 必要/ 对/ 用户端/ 带宽/ 进行/ 合理/ 分配/ ,/ 从而/ 在/ 自身/ 与/ P2P/ 网络/ 中/ 邻居/ 的/ 下载/ 需求/ 之间/ 取得/ 平衡/ ./ (/ 3/ )/ 场景/ 下载/ 源/ 的/ 搜索/ 策略/ 和/ 场景/ 下载/ 请求/ 的/ 动态分配/ 策略/ 的/ 效果/ 仍/ 有/ 值得/ 改进/ 的/ 余地/ ./ 致谢/ 衷心感谢/ 为/ 本文/ 提出/ 宝贵意见/ 的/ 审稿/ 专家/ !/ 

