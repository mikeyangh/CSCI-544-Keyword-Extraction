Page1/ 基于/ 延后/ 策略/ 的/ 动态/ 多/ 路径分析/ 方法/ 陈恺/ 1/ )/ ,/ 2/ )/ ,/ 3/ )/ 冯登国/ 1/ )/ ,/ 2/ )/ 苏璞/ 睿/ 2/ )/ 1/ )/ (/ 中国科学院/ 研究生院/ 信息安全/ 国家/ 重点/ 实验室/ 北京/ 100049/ )/ 2/ )/ (/ 中国科学院/ 软件/ 研究所/ 信息安全/ 国家/ 重点/ 实验室/ 北京/ 100190/ )/ 3/ )/ (/ 信息安全/ 共性/ 技术/ 国家/ 工程/ 研究/ 中心/ 北京/ 100190/ )/ 摘要/ 多/ 路径分析/ 是/ 弥补/ 传统/ 动态分析/ 方法/ 的/ 不足/ 、/ 对/ 可执行程序/ 全面/ 分析/ 的/ 重要/ 方法/ 之一/ ./ 现有/ 多路径/ 方法/ 主要/ 采用/ 随机/ 构造/ 或者/ 根据/ 路径/ 条件/ 构造/ 输入/ 进行/ 路径/ 触发/ ,/ 这/ 两者/ 均/ 存在/ 路径分析/ 不/ 全面/ 和/ 缺乏/ 针对性/ 的/ 问题/ ./ 文中/ 通过/ 对/ 路径/ 条件/ 分析/ ,/ 确定/ 了/ 检测/ 条件/ 的/ 基本/ 组成/ 元素/ ,/ 提出/ 了/ 弱/ 控制/ 依赖/ 和/ 路径/ 引用/ 集/ 的/ 概念/ 和/ 计算/ 规则/ ,/ 并/ 以此/ 为/ 基础/ 提出/ 一种/ 延后/ 策略/ 的/ 多/ 路径分析/ 方法/ ./ 在/ 程序/ 分析/ 过程/ 中/ ,/ 对/ 特定/ 的/ 程序/ 检测点/ 和/ 检测点/ 条件/ ,/ 有/ 针对性/ 地/ 进行/ 路径/ 筛选/ ,/ 从/ 语义上/ 进行/ 路径/ 表达式/ 简化/ ,/ 在/ 保证/ 检测点/ 可达/ 和/ 检测/ 表达式/ 具有/ 相同/ 构造/ 形式/ 的/ 前提/ 下/ ,/ 简化/ 检测/ 表达式/ ,/ 减少/ 分析/ 路径/ 的/ 数量/ ./ 对/ 7/ 款/ 恶意软件/ 的/ 分析/ 实验/ 结果表明/ ,/ 该/ 方法/ 提高/ 了/ 分析/ 效率/ 和/ 准确性/ ./ 关键词/ 多/ 路径分析/ ;/ 可执行程序/ ;/ 漏洞/ 检测/ ;/ 动态分析/ ;/ 延后/ 策略/ 1/ 引言/ 软件/ 分析/ 是/ 检测/ 软件/ 漏洞/ 、/ 软件/ 恶意/ 行为/ 等/ 安全性/ 问题/ 的/ 基础/ ./ 按/ 分析/ 目标/ 的/ 不同/ ,/ 现有/ 软件/ 分析方法/ 一般/ 分为/ 面向/ 源代码/ 的/ 软件/ 分析/ 和/ 面向/ 可执行程序/ 的/ 软件/ 分析/ ./ 前者/ 针对/ 有/ 源代码/ 的/ 程序/ ,/ 具有/ 更加/ 丰富/ 的/ 类型信息/ 和/ 结构/ 信息/ ,/ 相对而言/ ,/ 分析/ 准确性/ 更高/ ./ 但是/ 现有/ 软件/ 多数/ 不/ 包括/ 源代码/ ,/ 尤其/ 是/ 大型/ 的/ 商业软件/ 和/ 进口软件/ 等/ ;/ 同时/ ,/ 即使/ 部分/ 软件/ 包括/ 了/ 源代码/ ,/ 也/ 不能/ 保证/ 使用/ 的/ 可执行程序/ 和/ 源代码/ 之间/ 有/ 对应/ 关系/ ./ 对/ 这/ 一/ 问题/ Godefroid/ 等/ 在/ 文献/ [/ 1/ ]/ 中/ 进行/ 了/ 详细/ 讨论/ ./ 由于/ 大量/ 的/ 应用软件/ 无法/ 获得/ 源程序/ ,/ 而/ 要/ 用/ 在/ 一些/ 重要/ 领域/ ,/ 因此/ 直接/ 对/ 其/ 可执行程序/ 进行/ 安全性/ 分析/ 、/ 确保/ 其/ 安全性/ 显得/ 极为重要/ ./ 该/ 问题/ 也/ 是/ 国内外/ 研究/ 的/ 热点问题/ ./ 可执行程序/ 分析方法/ 一般/ 分为/ 静态方法/ 和/ 动态/ 方法/ 两种/ ./ 静态/ 分析/ 是/ 将/ 可执行程序/ 的/ 二进制/ 代码/ 转变/ 为/ 汇编语言/ 并/ 以此/ 为/ 基础/ 进行/ 分析/ ./ 其/ 优点/ 是/ 可以/ 较为/ 全面/ 地/ 分析/ 程序代码/ ,/ 但是/ 分析/ 过程/ 中/ 需要/ 进行/ 大量/ 的/ 推理/ 和/ 符号/ 演算/ ,/ 因此/ 效率/ 较/ 低/ ,/ 且会/ 造成/ 一定/ 数量/ 的/ 误报/ [/ 2/ ]/ ,/ 另外/ ,/ 对于/ 一些/ 经过/ 变形/ 和/ 混淆/ [/ 3/ ]/ 技术/ 处理/ 的/ 代码/ 也/ 不能/ 很/ 好/ 地/ 处理/ ./ 动态分析/ 方法/ 的/ 基本/ 思想/ 是/ 利用/ 程序运行/ 时/ 的/ 数据/ 提高/ 分析/ 的/ 效率/ 和/ 准确性/ ,/ 同时/ 避免/ 由于/ 变形/ 等/ 反/ 静态/ 分析/ 技术/ 带来/ 的/ 不可/ 分析/ 性/ ./ 传统/ 的/ 动态分析/ 一次/ 只能/ 分析/ 一个/ 运行/ 实例/ ,/ 例如/ Softice/ 、/ Ollydbg/ 等/ ./ 若要/ 提高/ 动态分析/ 的/ 全面性/ ,/ 就要/ 构造/ 执行/ 应用程序/ 的/ 多种/ 可能/ 执行/ 路径/ ,/ 即/ 对/ 可执行程序/ 进行/ 多/ 路径分析/ ./ 按照/ 动态/ 多/ 路径分析/ 方法/ 的/ 发展/ ,/ 可以/ 将/ 其/ 分为/ 3/ 类/ ./ 第/ 1/ 类/ 是/ 通过/ 将/ 可执行程序/ 放在/ 可控/ 环境/ (/ 例如/ 调试器/ 等/ )/ 中/ 执行/ 并/ 手动/ 更改/ 分支/ 语句/ 的/ 判断/ 条件/ 来/ 进行/ 多/ 路径分析/ ./ 这类/ 方法/ 需要/ 大量/ 的/ 人工/ 参与/ ,/ 非常/ 繁琐/ 且/ 不具/ 全面性/ ./ 第/ 2/ 类/ 是/ 自动/ 构造/ 不同/ 的/ 输入/ ,/ 尝试/ 触发/ 程序执行/ 的/ 各种/ 不同/ 路径/ 以/ 暴露出/ 程序/ 潜在/ 的/ 安全/ 问题/ ./ 这类/ 方法/ 也/ 称为/ Fuzz/ 方法/ ./ 虽然/ 此类/ 方法/ 较之/ 第/ 1/ 类/ 方法/ 在/ 一定/ 程度/ 上/ 提高/ 了/ 分析/ 的/ 效率/ 和/ 覆盖率/ ,/ 但是/ 大多数/ 情况/ 下/ ,/ 此类/ 方法/ 仅能/ 穷举/ 有限/ 个/ 输入/ ,/ 并/ 不能/ 对/ 所有/ 的/ 输入/ 都/ 进行/ 测试/ ./ 因此/ 通过/ 此/ 方法/ 验证/ 的/ 程序/ 会/ 有/ 一定/ 程度/ 的/ 漏报/ ,/ 而且/ 会/ 耗费/ 大量/ 时间/ 重复/ 测试/ ./ 第/ 3/ 类/ 方法/ 是/ 通过/ 对/ 程序执行/ 过程/ 中/ 的/ 路径/ 条件/ 的/ 求解/ ,/ 有/ 选择地/ 对/ 路径/ 进行/ 分析/ ,/ 较/ 有/ 代表性/ 的/ 如/ EXE/ [/ 2/ ]/ 等/ ./ 这类/ 方法/ 使用/ 动态分析/ 方式/ ,/ 提高/ 了/ 静态/ 分析/ 的/ 准确性/ 和/ 效率/ ,/ 同时/ 避免/ 了/ Fuzz/ 方法/ 的/ 随机性/ ,/ 增加/ 了/ 路径/ 选择/ 的/ 效率/ ./ 但是/ 这/ 类/ 方法/ 仍然/ 会/ 产生/ 过多/ 的/ 分析/ 路径/ ,/ 也/ 没有/ 对/ 路径/ 条件/ 进行/ 分析/ 筛选/ ,/ 以至于/ 难以/ 应用/ 到/ 大型/ 程序/ 中/ [/ 4/ ]/ ./ 目前/ 国际/ 上/ 部分/ 学者/ 使用/ 启发式/ 方法/ 尝试/ 减少/ 路径分析/ 数量/ [/ 5/ ]/ ,/ 但是/ 效果/ 仍然/ 不/ 理想/ [/ 4/ ]/ ./ 本文/ 所述/ 方法/ 是/ 以/ 第/ 3/ 类/ 方法/ 为/ 基础/ ,/ 从/ 路径/ 条件/ 与/ 检测点/ 之间/ 关系/ 入手/ ,/ 围绕/ 着/ 条件/ 表达式/ 的/ 组成/ 结构/ 加以/ 展开/ ./ 我们/ 发现/ ,/ 多/ 路径分析/ 的/ 作用/ 之一/ 在于/ 确定/ 某条/ 语句/ 或/ 若干条/ 语句/ 的/ 集合/ (/ 称为/ 程序/ 检测点/ 集合/ )/ 在/ 不同/ 的/ 执行/ 路径/ 下/ 是否/ 满足/ 一定/ 的/ 需求/ ,/ 例如/ 判断/ 某条/ 语句/ 是否/ 存在/ 漏洞/ 或者/ 是否/ 存在/ 恶意/ 行为/ 等/ ./ 此时/ 在/ 程序/ 分析/ 过程/ 中/ ,/ 部分/ 分支/ 条件/ 的/ 取值/ 并/ 不会/ 影响/ 程序/ 检测点/ 的/ 判断/ 条件/ ,/ 因此/ 产生/ 了/ 条件/ 冗余/ ./ 针对/ 以上/ 应用/ 场景/ ,/ 本文/ 提出/ 了/ 一种/ 延后/ 策略/ 的/ 可执行程序/ 动态/ 多/ 路径分析/ 方法/ ./ 与/ 传统/ 多/ 路径分析/ 方法/ 不同/ ,/ 本/ 方法/ 在/ 程序/ 的/ 分支/ 路径/ 选择/ 过程/ 中/ ,/ 并/ 不/ 立即/ 进行/ 路径/ 表达式/ 求解/ 和/ 启用/ 新/ 进程/ 进行/ 多/ 路径分析/ ,/ 而是/ 仅/ 记录/ 分支/ 条件/ ;/ 当/ 遇到/ 程序/ 检测点/ 时/ ,/ 有/ 选择地/ 对/ 部分/ 分支/ 语句/ 进行/ 多/ 路径分析/ ,/ 减少/ 需要/ 分析/ 的/ 路径/ 数量/ 和/ 检测/ 表达式/ 长度/ ,/ 提高/ 了/ 分析/ 效率/ 和/ 准确性/ ./ 本文/ 的/ 主要/ 贡献/ 如下/ :/ (/ 1/ )/ 对/ 路径/ 执行/ 条件/ 进行/ 分析/ ,/ 确定/ 了/ 检测/ 条件/ 的/ 基本/ 组成/ 元素/ ,/ 提出/ 了/ 弱/ 控制/ 依赖/ 和/ 路径/ 引用/ 集/ 的/ 概念/ 和/ 计算/ 规则/ ,/ 并/ 以此/ 为/ 基础/ 对/ 路径/ 条件/ 进行/ 筛选/ ,/ 简化/ 了/ 检测/ 条件/ 表达式/ ,/ 提高/ 了/ 表达式/ 求解/ 的/ 效率/ 和/ 准确性/ ./ (/ 2/ )/ 提出/ 了/ 一种/ 延后/ 策略/ 的/ 多/ 路径分析/ 方法/ ./ 在/ 动态分析/ 的/ 过程/ 中/ ,/ 并/ 不/ 立即/ 对/ 分支/ 语句/ 进行/ 多/ 路径分析/ ,/ 而是/ 在/ 确定/ 检测点/ 位置/ 和/ 检测/ 条件/ 后/ ,/ 动态分析/ 路径/ 条件/ ,/ 有/ 选择地/ 对/ 检测/ 表达式/ 有/ 控制/ 作用/ 的/ 分支/ 语句/ 进行/ 多/ 路径分析/ ,/ 提高/ 了/ 多/ 路径分析/ 的/ 针对性/ ,/ 简化/ 了/ 多路径/ 构造/ 过程/ ,/ 改进/ 了/ 分析/ 效率/ ./ (/ 3/ )/ 实现/ 了/ 一套/ 基于/ 延后/ 策略/ 的/ 多/ 路径分析/ 原型/ 系统/ ./ 对/ PerfectKeylogger/ 等/ 7/ 款/ 具有/ 恶意/ 操作/ 的/ 软件/ 进行/ 分析/ ,/ 验证/ 了/ 其/ 实际效果/ ./ 2/ 相关/ 工作/ 在/ 反汇编/ 方面/ ,/ 目前/ 已有/ 了/ 较为/ 成熟/ 的/ 方法/ 和/ 工具/ ,/ 例如/ IDAPro/ ①/ 等/ ./ 威斯康星大学/ 的/ WiSA/ 项目组/ 在/ 可执行程序/ 的/ 静态/ 分析/ 方面/ 做/ 了/ 大量/ 的/ 工/ ①/ IDAProDisassembler/ -/ multi/ -/ processor/ ,/ windowshostedida/ ./ htm/ ./ Page3/ 作/ ,/ 提出/ 了/ 分析/ 可执行程序/ 的/ VSA/ [/ 6/ ]/ 方法/ ,/ 并/ 开发/ 出/ CodeSurfer/ // x86/ [/ 7/ ]/ 等/ 工具/ ./ 在/ 反汇编/ 的/ 基础/ 上/ 进行/ 符号执行/ ,/ 可以/ 对/ 程序/ 进行/ 多/ 路径分析/ [/ 8/ -/ 9/ ]/ ./ 国内/ 如夏/ 一民/ 等/ 人/ 在/ 对/ 漏洞/ 进行/ 检测/ 时/ ,/ 提出/ 了/ 基于/ 条件/ 约束/ 的/ 方法/ [/ 10/ ]/ ,/ 此/ 方法/ 也/ 可/ 应用/ 在/ 多/ 路径分析/ 上/ ./ 静态/ 分析/ 虽然/ 可以/ 较为/ 全面/ 地/ 分析/ 程序代码/ ,/ 但是/ 由于/ 缺乏/ 程序运行/ 时/ 的/ 数据/ 信息/ ,/ 所以/ 分析/ 效率/ 较/ 低/ ,/ 且会/ 造成/ 一定/ 程度/ 的/ 误报/ [/ 2/ ]/ ./ 对于/ 一些/ 经过/ 变形/ 和/ 混淆/ [/ 3/ ]/ 技术/ 处理/ 的/ 代码/ ,/ 静态/ 分析/ 也/ 难以/ 处理/ ./ 目前/ ,/ 人们/ 使用/ 一些/ 基础理论/ 方法/ ,/ 例如/ 切片/ 方法/ [/ 11/ ]/ ,/ 试图/ 提高/ 静态/ 分析/ 的/ 准确性/ ,/ 但/ 效果/ 仍然/ 不/ 理想/ [/ 12/ ]/ ./ 动态/ 多/ 路径分析/ 是/ 目前/ 重要/ 的/ 多/ 路径分析/ 方法/ ./ 最初/ 人们/ 为了/ 触发/ 程序/ 的/ 不同/ 路径/ ,/ 尽量/ 多地/ 构造/ 出/ 不同/ 的/ 输入/ ,/ 这/ 类/ 方法/ 称为/ Fuzz/ 方法/ ./ 较/ 有/ 代表性/ 的/ 是/ Ghosh/ 的/ 方法/ [/ 13/ ]/ ,/ 它/ 将/ 程序/ 看作/ 是/ 黑盒/ ,/ 通过/ 变换/ 不同/ 的/ 输入/ ,/ 观察/ 程序/ 是否/ 会/ 出现异常/ ,/ 从而/ 进行/ 漏洞/ 查找/ ./ 这类/ 方式/ 不/ 需要/ 对/ 程序/ 进行/ 分析/ ,/ 而是/ 对/ 程序/ 进行/ 测试/ ,/ 所以/ 执行/ 速度/ 较快/ ./ 但是/ 大多数/ 情况/ 下/ ,/ 此类/ 方法/ 仅能/ 穷举/ 有限/ 个/ 输入/ ,/ 并/ 不能/ 对/ 所有/ 的/ 输入/ 都/ 进行/ 测试/ ,/ 因此/ 通过/ 此/ 方法/ 验证/ 程序/ 会/ 存在/ 一定/ 程度/ 的/ 漏报/ ./ 同时/ ,/ 这/ 类/ 方法/ 效率/ 很/ 低/ ,/ 例如/ 程序/ 中有/ 分支/ 语句/ x/ =/ 10/ ,/ 这/ 类/ 方法/ 要/ 对/ x/ 进行/ 232/ 计算/ 才能/ 对/ 不同/ 分支/ 进行/ 处理/ ./ 之后/ 人们/ 通过/ 对/ 执行/ 路径/ 条件/ 进行/ 分析/ ,/ 产生/ 了/ 白盒/ Fuzz/ 的/ 方法/ ./ 白盒/ Fuzz/ 方法/ 是/ 针对/ 不同/ 的/ 分支/ 条件/ 求解/ ,/ 计算/ 出/ 可能/ 的/ 输入/ 并/ 尽量/ 多地/ 对/ 不同/ 分支/ 进行/ 多/ 路径分析/ ,/ 较/ 有/ 代表性/ 的/ 是/ EXE/ [/ 2/ ]/ 、/ Moser/ [/ 14/ ]/ 和/ SAGE/ [/ 1/ ]/ ./ 但是/ 这/ 类/ 方法/ 需要/ 对/ 遇到/ 的/ 每/ 一个/ 依赖于/ 外部/ 输入/ 的/ 分支/ 都/ 进行/ 多/ 路径分析/ ,/ 因此/ 很大/ 程度/ 上/ 影响/ 了/ 实现/ 效率/ ./ Godefroid/ 使用/ 了/ 语法/ 指导/ 的/ Fuzz/ 分析/ [/ 15/ ]/ ,/ 但是/ 预先/ 对/ 缺乏/ 源代码/ 的/ 可执行程序/ 输入/ 部分/ 进行/ 语法分析/ 非常/ 困难/ 且/ 准确性/ 不高/ ,/ 同时/ 这种/ 方法/ 仍然/ 会/ 产生/ 较/ 多/ 的/ 无用/ 路径/ ./ 多种/ 启发式/ 方法/ [/ 5/ ,/ 16/ -/ 17/ ]/ 也/ 被/ 提出/ 进行/ 路径/ 选择/ ,/ 试图/ 在/ 尽量/ 短/ 的/ 时间/ 内/ 达到/ 更/ 多/ 的/ 代码/ 覆盖率/ ,/ 但是/ 这/ 类/ 方法/ 仅/ 是从/ 搜索/ 策略/ 的/ 角度/ 入手/ ,/ 例如/ 深度/ 优先/ 、/ 广度/ 优先/ 、/ 随机/ 法/ 或/ 通过/ 一定/ 的/ 算子/ 计算/ 出/ 路径/ 上/ 的/ 权值/ 来/ 进行/ 路径/ 选择/ ,/ 没有/ 对/ 路径/ 本身/ 的/ 语句/ 进行/ 分析/ 和/ 优化/ 处理/ ,/ 因此/ 效果/ 仍然/ 不够/ 理想/ [/ 4/ ]/ ./ RWSet/ 方法/ 对/ 指令/ 引用/ 集合/ 和/ 定义/ 集合/ 进行/ 分析/ ,/ 从/ 程序/ 语义上/ 尝试/ 减少/ 多/ 路径分析/ 的/ 数量/ ,/ 具有/ 一定/ 效果/ [/ 4/ ]/ ,/ 但是/ 它/ 仅/ 是从/ 程序/ 节点/ 的/ 数值/ 依赖/ 角度/ 进行/ 分析/ ,/ 没有/ 对/ 控制/ 依赖/ 进行/ 分析/ ,/ 例如/ 缺乏/ 针对/ 程序/ 检测点/ 的/ 运行/ 条件/ 分析/ 和/ 对/ 条件/ 路径/ 叠加/ 的/ 处理/ ,/ 因此/ 仍然/ 存在/ 无用/ 路径/ ;/ 且/ 仅/ 适用/ 于/ 源代码/ 分析/ ./ 现有/ 的/ 多/ 路径分析/ 方法/ 造成/ 分析/ 不/ 全面/ 和/ 无用/ 路径/ 过多/ 的/ 原因/ 在于/ :/ (/ 1/ )/ 对/ 条件/ 路径/ 不/ 加/ 选择地/ 进行/ 多路径/ 扩展/ ./ 在/ 程序执行/ 过程/ 中/ ,/ 遇到/ 分支/ 语句/ 即/ 对/ 路径/ 进行/ 分解/ ,/ 进而/ 对/ 每个/ 分支/ 路径/ 分别/ 产生/ 一个/ 新/ 进程/ 进行/ 计算/ ./ Cadar/ [/ 2/ ]/ 等/ 人/ 在/ 此基础/ 上/ 对/ 动态/ 依赖于/ 外部/ 输入/ 的/ 分支/ 语句/ 进行/ 路径/ 分解/ ,/ 以/ 减少/ 路径/ 数目/ ,/ 但是/ 这/ 类/ 方法/ 仍然/ 会/ 产生/ 较/ 多/ 的/ 无用/ 路径/ ./ (/ 2/ )/ 路径/ 表达式/ 过长/ 以至/ 无法/ 求解/ ./ 在/ 分支/ 计算/ 过程/ 中/ ,/ 为了/ 明确/ 程序/ 的/ 执行/ 路径/ ,/ 需要/ 记录/ 下/ 分支/ 条件/ ,/ 当/ 分支/ 数目/ 增加/ 时/ ,/ 条件/ 表达式/ 长度/ 也/ 随之/ 增加/ ./ 条件/ 表达式/ 的/ 数目/ 和/ 长度/ 的/ 增加/ ,/ 使得/ 对/ 程序/ 进行/ 多/ 路径分析/ 的/ 难度/ 显著/ 增加/ ,/ 甚至/ 在/ 有限/ 时间/ 内/ 不可/ 求解/ ./ 本文/ 针对/ 以上/ 问题/ ,/ 对/ 程序/ 检测点/ 与/ 路径/ 条件/ 的/ 关系/ 进行/ 分析/ ,/ 确定/ 了/ 路径/ 条件/ 的/ 组成/ ,/ 提出/ 一种/ 延后/ 分析/ 的/ 策略/ ./ 3/ 路径/ 条件/ 的/ 组成/ 本章/ 以一/ 示例/ 为/ 引/ ,/ 说明/ 路径/ 条件/ 的/ 必要性/ 和/ 分支/ 选择/ 的/ 时机/ 问题/ ,/ 并/ 定义/ 相关/ 概念/ 和/ 具体/ 的/ 计算/ 规则/ ./ 图/ 1/ (/ a/ )/ 是/ 一个/ 典型/ 的/ 分支/ 流程/ ./ 假设/ 节点/ 1/ 是/ 分支/ 语句/ ,/ 其/ 两个/ 出口/ 分别/ 指向/ 节点/ 2/ 和/ 节点/ 3/ ,/ 节点/ 4/ 是/ 后/ 必经/ 节点/ ./ 节点/ 1/ 的/ 入口/ 条件/ 是/ C/ ,/ 两个/ 分支/ 条件/ 为/ e/ 和/ e/ -/ ./ 现有/ 多/ 路径分析/ 方法/ 在/ 程序运行/ 时/ ,/ 会/ 记录/ 程序运行/ 过程/ 中/ 所有/ 不能/ 静态/ 确定/ 分支/ 方向/ 的/ 条件/ 集合/ CE/ ./ 例如/ 图/ 1/ (/ a/ )/ 中/ ,/ 假设/ 条件/ e/ 依赖于/ 外部/ 输入/ ,/ 表示/ 为/ e/ →/ / / DInput/ ,/ 且/ e/ -/ →/ / / DInput/ ./ 当/ 程序运行/ 至/ 节点/ 1/ 进行/ 分支/ 选择/ 时/ ,/ 运行/ 条件/ 会/ 变为/ C/ ∧/ e/ 或/ C/ ∧/ e/ -/ ,/ 且/ 会/ 在/ 节点/ 1/ 处/ 产生/ 新/ 的/ 进程/ 进行/ 多/ 路径分析/ ./ 假设/ 检测点/ 在/ 节点/ 2/ 或/ 3/ 时/ ,/ 以上/ 分析/ 过程/ 是/ 没有/ 冗余/ 的/ ,/ 因为/ 条件/ e/ 或/ e/ -/ 保证/ 了/ 检测点/ 的/ 运行/ Page4/ 条件/ ./ 但/ 若/ 检测点/ 在/ 节点/ 4/ 处/ ,/ 条件/ e/ 和/ e/ -/ 的/ 必要性/ 并/ 不/ 明显/ ,/ 因为/ 它们/ 并未/ 保证/ 此时/ 程序/ 的/ 运行/ 条件/ ./ 因此/ ,/ 需要/ 对/ 节点/ 2/ ~/ 4/ 中/ 引用/ 变量/ 集/ 和/ 定义/ 变量/ 集/ 进行/ 更/ 深入/ 的/ 分析/ 方可/ 确定/ 条件/ e/ 或/ e/ -/ 的/ 必要性/ ./ 易知/ ,/ 对于/ 理论/ 上/ 最小/ 路径/ 条件/ 集/ CE/ ,/ 有/ CE/ / CE/ ./ 对于/ 循环/ 语句/ (/ 图/ 1/ (/ b/ )/ )/ 与/ 子程序/ 调用/ 语句/ (/ 图/ 1/ (/ c/ )/ )/ ,/ 以上/ 情况/ 均会/ 出现/ ./ 因此/ 正确/ 选择/ 分支/ 条件/ ,/ 可以/ 减少/ 分支/ 的/ 数目/ 和/ 路径/ 表达式/ 的/ 长度/ ,/ 也/ 避免/ 产生/ 无用/ 的/ 进程/ 进行/ 多/ 路径分析/ ./ 定义/ 1/ (/ 路径/ )/ ./ 路径/ P/ 是/ 若干条/ 顺序/ 执行/ 的/ 语句/ 组成/ 的/ 序列/ ,/ 记为/ P/ =/ {/ l1/ ,/ l2/ ,/ …/ ,/ lii/ ∈/ N/ }/ ./ 用/ P/ [/ l0/ ,/ ln/ ]/ 表示/ 所有/ 以/ l0/ 为/ 起点/ 、/ 以/ ln/ 为/ 终点/ 的/ 路径/ ./ 用/ P/ (/ l0/ ,/ ln/ ]/ 表示/ 所有/ 以/ l0/ 后继/ 节点/ 为/ 起点/ ,/ 以/ ln/ 为/ 终点/ 的/ 路径/ ,/ 用/ P/ [/ l0/ ,/ ln/ )/ 表示/ 所有/ 以/ l0/ 起点/ ,/ 以/ ln/ 前驱/ 节点/ 为/ 终点/ 的/ 路径/ ./ 对于/ 特定/ 的/ P/ ,/ 使用/ |/ P/ |/ 表示/ 路径/ 长度/ ./ 定义/ 2/ (/ 条件/ 路径/ )/ ./ 条件/ 路径/ CP/ 是/ 路径/ P/ 中/ 顺序/ 执行/ 的/ 分支/ 语句/ 组成/ 的/ 序列/ ,/ 记为/ CP/ =/ {/ c1/ ,/ c2/ ,/ …/ ,/ ci/ |/ i/ ∈/ N/ }/ ,/ 其中/ c1/ 是/ 程序执行/ 路径/ 上/ 第一个/ 分支/ 语句/ ./ 易知/ ,/ CP/ / P/ ./ 用/ CP/ [/ l0/ ,/ ln/ ]/ 表示/ 所有/ 以/ l0/ 为/ 起点/ ,/ 以/ ln/ 为/ 终点/ 的/ 条件/ 路径/ ./ 用/ CP/ (/ l0/ ,/ ln/ ]/ 表示/ 所有/ 以/ l0/ 后继/ 节点/ 为/ 起点/ 、/ 以/ ln/ 为/ 终点/ 的/ 条件/ 路径/ ,/ 用/ C/ [/ l0/ ,/ ln/ )/ 表示/ 所有/ 以/ l0/ 起点/ 、/ 以/ ln/ 前驱/ 节点/ 为/ 终点/ 的/ 条件/ 路径/ ./ 对于/ 特定/ 的/ CP/ ,/ 使用/ |/ CP/ |/ 表示/ 条件/ 路径/ 长度/ ./ 定义/ 3/ (/ 检测/ 条件/ )/ ./ 检测/ 条件/ 指在/ 程序运行/ 至/ 检测点/ p/ 位置/ 时/ ,/ 进行/ 某些/ 预定/ 义/ 检查/ 所/ 需/ 的/ 条件/ ,/ 例如/ 判断/ 当前/ 状态/ 是否/ 会/ 出现/ 漏洞/ 的/ 条件/ 等/ ,/ 用/ CCp/ 表示/ ./ 定义/ 4/ (/ 检测/ 表达式/ )/ ./ 对于/ 程序执行/ 路径/ P/ 上/ 的/ 结点/ l/ ,/ 程序/ 检测/ 表达式/ CEPl/ =/ C/ ∧/ CCl/ ./ 其中/ C/ 保证/ 程序/ 在/ 每次/ 执行/ 过程/ 中均/ 可/ 到达/ l/ ,/ 且/ CCl/ 具有/ 相同/ 的/ 符号/ 表示/ ./ 在/ 不/ 发生/ 歧义/ 的/ 情况/ 下/ ,/ 将/ CEPl/ 简记/ 为/ CEl/ ./ 定理/ 1/ ./ ci/ ∈/ CCp/ / ci/ ∈/ CEp/ ./ 由/ 检测/ 表达式/ 的/ 定义/ 易证/ ./ 定义/ 5/ (/ 弱/ 控制/ 依赖/ )/ ./ 在/ 路径/ P/ =/ {/ l1/ ,/ l2/ ,/ …/ ,/ li/ |/ i/ ∈/ N/ }/ 上/ ,/ 对于/ 条件/ 结点/ lk/ 及/ 任意/ 后续/ 结点/ lj/ (/ 1/ / k/ </ j/ / i/ )/ ,/ 假设/ lk/ 的/ 后/ 必经/ 结点/ 为/ lm/ ,/ 若/ lm/ / P/ [/ lk/ ,/ lj/ ]/ ,/ 则/ 称/ lj/ 弱/ 控制/ 依赖于/ lk/ ,/ 记为/ lj/ →/ / / / WCDlk/ ./ 根据/ 弱/ 控制/ 依赖/ 的/ 定义/ 可知/ 其/ 与/ 控制/ 依赖/ 的/ 关系/ :/ lj/ →/ / / / CDlk/ / lj/ →/ / / / WCDlk/ ,/ 其中/ lj/ →/ / / / CDlk/ 表示/ lj/ 控制/ 依赖于/ lk/ ,/ 但/ 反之/ 不然/ ./ 定义/ 6/ (/ 运行/ 条件/ )/ ./ 在/ 条件/ 执行/ 路径/ CP/ =/ {/ c1/ ,/ c2/ ,/ …/ ,/ cn/ }/ 上/ ,/ 对于/ 检测点/ p/ ,/ 如果/ p/ →/ / / / WCDci/ ,/ 则/ 称/ 条件/ ci/ 是/ 检测点/ p/ 的/ 运行/ 条件/ ./ 用/ RCp/ 表示/ 检测点/ p/ 运行/ 条件/ 的/ 集合/ ./ 定理/ 2/ ./ ci/ ∈/ RCp/ / ci/ ∈/ CEp/ ./ 证明/ ./ 由/ 运行/ 条件/ 的/ 定义/ ci/ ∈/ RCp/ / p/ →/ / / / WCDci/ 可知/ ,/ p/ 不是/ ci/ 的/ 后/ 必经/ 节点/ ,/ 因此/ 存在/ 路径/ P/ =/ {/ l1/ ,/ l2/ ,/ …/ ,/ li/ ,/ …/ ,/ ln/ |/ i/ ∈/ N/ }/ ,/ 其中/ ln/ 是/ 结束/ 语句/ ,/ 使得/ p/ / P/ ./ 如果/ ci/ / CEp/ ,/ 则/ 不能/ 保证/ 程序运行/ 到/ 节点/ p/ 处/ ,/ 且/ 无法/ 在/ p/ 点/ 进行/ 表达式/ 检测/ ,/ 所以/ 定理/ 2/ 得证/ ./ 在/ 图/ 1/ (/ a/ )/ 中/ ,/ 如果/ 在/ 节点/ 2/ 处/ 进行/ 检测/ ,/ 有/ l2/ →/ / / / WCDl1/ ,/ 根据/ 定理/ 2/ ,/ 有/ e/ ∈/ CE2/ ./ 定理/ 2/ 是/ 条件/ 语句/ 是否/ 属于/ 程序/ 检测/ 表达式/ 的/ 充分条件/ ,/ 但/ 不是/ 必要条件/ ,/ 因此/ 对于/ 检测点/ p/ ,/ 当/ p/ // →/ / / / WCDci/ 时/ ,/ 无法/ 确定/ ci/ 是否/ 属于/ CEp/ ./ 例如/ 图/ 1/ (/ a/ )/ 中/ ,/ 如果/ 在/ 节点/ 4/ 处/ 进行/ 检验/ 时/ ,/ l4/ // →/ / / / WCDl1/ ,/ 将/ 无法/ 确定/ 是否/ 将/ e/ 或者/ e/ -/ 放入/ CE4/ ./ 此时/ ,/ 需要/ 进一步/ 分析/ 程序运行/ 过程/ 中/ 定义/ 的/ 变量/ 集/ 和/ 引用/ 的/ 变量/ 集/ ./ 引理/ 1/ ./ 在/ 条件/ 执行/ 路径/ CP/ =/ {/ c1/ ,/ c2/ ,/ …/ ,/ cn/ }/ 上/ ,/ 假设/ l/ 是/ 分支/ 节点/ ci/ 的/ 第一个/ 后/ 必经/ 节点/ ,/ 有/ / p/ (/ p/ ∈/ P/ [/ ci/ ,/ l/ )/ ∧/ V/ =/ USE/ (/ CCl/ )/ ∩/ DEF/ (/ p/ )/ ∧/ V/ ≠/ / ∧/ / p/ (/ p/ ∈/ P/ [/ ci/ ,/ l/ )/ ∧/ p/ ≠/ p/ / value/ (/ Vp/ )/ ≠/ value/ (/ Vp/ )/ )/ )/ / ci/ ∈/ CEl/ ,/ 其中/ USE/ (/ C/ )/ 表示/ 表达式/ C/ 的/ 引用/ 集合/ ,/ DEF/ (/ C/ )/ 表示/ 表达式/ C/ 的/ 定义/ 集合/ ,/ value/ (/ Vp/ )/ 表示/ 在/ p/ 路径/ 上/ V/ 集合/ 的/ 变量值/ ./ 证明/ ./ 根据/ 题设/ 条件/ ,/ 对于/ 程序/ 的/ 执行/ 路径/ p/ ∈/ P/ [/ ci/ ,/ l/ )/ ,/ 存在/ 不同/ 的/ 路径/ p/ 且/ p/ ∈/ P/ [/ ci/ ,/ l/ )/ ,/ 在/ 程序/ 的/ 两次/ 执行/ 过程/ 中/ ,/ 当/ ci/ 取/ 不同/ 分支/ 时/ ,/ value/ (/ USE/ (/ CCl/ )/ p/ )/ ≠/ value/ (/ USE/ (/ CCl/ )/ p/ )/ ,/ 即/ l/ 处/ USE/ (/ CCl/ )/ 的/ 值/ 不同/ ,/ 因此/ 为了/ 保证/ 在/ l/ 处/ CEl/ 中/ USE/ (/ CCl/ )/ 具有/ 相同/ 值/ ,/ 需要/ 将/ ci/ 加入/ CEl/ ./ 证毕/ ./ 考虑/ 到/ 在/ 不同/ 路径/ 上/ Vp/ 和/ Vp/ 具有/ 相同/ 值/ ,/ 在/ 多/ 路径分析/ 时/ ,/ 添加/ 上/ 条件/ ci/ 也/ 不会/ 影响/ CEl/ 的/ 解集/ ,/ 而且/ 多数/ 情况/ 下/ 编译器/ 会/ 将/ 不同/ 路径/ 上/ 具有/ 相同/ 变量/ 赋值/ 的/ 语句/ 提取/ 出/ 进行/ 优化/ ,/ 因此/ 引理/ 1/ 可以/ 简化/ 为/ 定理/ 3/ ./ 定理/ 3/ ./ 在/ 条件/ 执行/ 路径/ CP/ =/ {/ c1/ ,/ c2/ ,/ …/ ,/ cn/ }/ 上/ ,/ 假设/ l/ 是/ 分支/ 节点/ ci/ 的/ 第一个/ 后/ 必经/ 节点/ ,/ 则/ USE/ (/ CCl/ )/ ∩/ DEF/ (/ P/ [/ ci/ ,/ l/ )/ )/ ≠/ / / ci/ ∈/ CEl/ ./ 定理/ 3/ 仅/ 针对/ 分支/ 语句/ 的/ 第一个/ 后/ 必经/ 节点/ l/ 进行/ 计算/ ,/ 并未/ 考虑/ l/ 后续/ 节点/ 的/ 条件/ 依赖/ 关系/ ./ 假设/ 分支/ 语句/ ci/ 的/ 第一个/ 后/ 必经/ 节点/ 是/ l1/ ,/ 检测/ 语句/ 为/ l1/ 之后/ 的/ 语句/ l2/ ,/ 且/ DEF/ (/ P/ [/ l1/ ,/ l2/ )/ )/ ∩/ Page5USE/ (/ CCl2/ )/ ≠/ / ,/ 则/ 需要/ 考虑/ DEF/ (/ P/ [/ l1/ ,/ l2/ )/ )/ ∩/ USE/ (/ CCl2/ )/ 中/ 变量/ 定义/ 集合/ 与/ DEF/ (/ P/ [/ ci/ ,/ l/ )/ )/ 之间/ 的/ 关系/ ./ 定义/ 7/ (/ 路径/ 引用/ 集/ )/ ./ 在/ 程序/ 路径/ P/ =/ {/ l1/ ,/ l2/ ,/ …/ ,/ li/ |/ i/ ∈/ N/ }/ 上/ ,/ 对于/ 在/ 语句/ l/ 中/ 使用/ 的/ 变量/ 集合/ s/ ,/ s/ 依赖于/ 路径/ P/ 外/ 的/ 变量/ 集合/ 称为/ 变量/ 集合/ s/ 在/ 路径/ P/ 上/ 的/ 路径/ 引用/ 集/ ,/ 用/ USE/ (/ P/ ,/ s/ ,/ l/ )/ 表示/ ./ 根据/ 路径/ 引用/ 集/ 的/ 定义/ ,/ 可以/ 获得/ USE/ (/ P/ ,/ s/ ,/ l/ )/ 的/ 计算方法/ ./ 对于/ 所有/ i/ / 1/ ,/ 这里/ 使用/ 推导/ 规则/ 方式/ :/ 空语句/ 推导/ 规则/ :/ USE/ (/ / ,/ s/ ,/ l/ )/ :/ s/ ;/ 单/ 语句/ 推导/ 规则/ :/ s1/ =/ {/ v/ |/ v/ ∈/ s/ ∧/ v/ / DEF/ (/ li/ )/ }/ ,/ s2/ =/ {/ v/ |/ v/ ∈/ USE/ (/ li/ )/ ∧/ DEF/ (/ li/ )/ ∩/ s/ ≠/ / }/ USE/ (/ {/ li/ }/ ,/ s/ ,/ l/ )/ :/ (/ li/ ∈/ CEl/ )/ / (/ s/ ∪/ USE/ (/ li/ )/ )/ ◇/ (/ s1/ ∪/ s2/ )/ 多/ 语句/ 推导/ 规则/ :/ USE/ (/ {/ l1/ ,/ l2/ ,/ …/ ,/ li/ }/ ,/ s/ ,/ l/ )/ :/ USE/ (/ {/ l1/ }/ ,/ s/ ,/ l/ )/ ;/ 多路径/ 推导/ 规则/ :/ USE/ (/ P/ [/ li/ ,/ lj/ ]/ ,/ s/ ,/ l/ )/ :/ ∪/ p/ ∈/ P/ [/ li/ ,/ lj/ ]/ USE/ (/ p/ ,/ s/ ,/ l/ )/ ;/ 其中/ ,/ c/ / x1/ ◇/ x2/ 表示/ 当/ 条件/ c/ 成立/ 时/ ,/ 选择/ x1/ ,/ 否则/ 选择/ x2/ ./ 定义/ 8/ (/ 值/ 依赖/ 条件/ )/ ./ 在/ 条件/ 执行/ 路径/ CP/ =/ {/ c1/ ,/ c2/ ,/ …/ ,/ cn/ }/ 上/ ,/ 假设/ lj/ 是/ 分支/ 节点/ ci/ 的/ 第一个/ 后/ 必经/ 节点/ ,/ 对于/ 检测点/ 为/ lk/ ,/ 如果/ k/ / j/ ∧/ USE/ (/ P/ [/ lj/ ,/ lk/ )/ ,/ USE/ (/ CClk/ )/ ,/ lk/ )/ ∩/ DEF/ (/ P/ [/ ci/ ,/ lj/ )/ )/ ≠/ / ,/ 则/ 称/ 条件/ ci/ 是/ 检测点/ lk/ 的/ 值/ 依赖/ 条件/ ./ 用/ VDCl/ 表示/ 检测点/ l/ 值/ 依赖/ 条件/ 的/ 集合/ ./ 定理/ 4/ ./ 在/ 条件/ 执行/ 路径/ CP/ =/ {/ c1/ ,/ c2/ ,/ …/ ,/ cn/ }/ 上/ ,/ 对于/ 检测点/ l/ ,/ 有/ ci/ ∈/ VDCl/ / ci/ ∈/ CEl/ ./ 证明/ ./ 因为/ ci/ ∈/ VDCl/ ,/ 根据/ 值/ 依赖/ 条件/ 的/ 定义/ ,/ 存在/ ci/ 的/ 后/ 必经/ 节点/ l/ ,/ 使得/ USE/ (/ P/ [/ l/ ,/ l/ )/ ,/ USE/ (/ CCl/ )/ ,/ l/ )/ ∩/ DEF/ (/ P/ [/ ci/ ,/ l/ )/ )/ ≠/ / ./ 当/ l/ =/ l/ 时/ ,/ 由/ 空语句/ 推导/ 规则/ ,/ 有/ USE/ (/ P/ [/ l/ ,/ l/ )/ ,/ CCl/ ,/ l/ )/ =/ USE/ (/ CCl/ )/ ,/ 根据/ 定理/ 3/ ,/ 可知/ ci/ ∈/ CEl/ ./ 当/ l/ ≠/ l/ 时/ ,/ 在/ 路径/ P/ [/ l/ ,/ l/ )/ 上/ 由/ 路径/ 引用/ 集/ 的/ 推导/ 规则/ ,/ 可以/ 求得/ 集合/ s/ =/ USE/ (/ P/ [/ l/ ,/ l/ )/ ,/ CCl/ ,/ l/ )/ ,/ 不妨/ 将/ s/ 看作/ USE/ (/ CCl/ )/ ,/ 根据/ 定理/ 3/ ,/ 可知/ ci/ ∈/ CEl/ ./ 证毕/ ./ 定理/ 4/ 描述/ 了/ 在/ 程序/ 条件/ 路径/ CP/ 上/ ,/ 对于/ ci/ ∈/ CP/ 和/ 检测点/ l/ ,/ 当/ l/ // →/ / / / WCDci/ 时/ ,/ 是否/ 将/ ci/ 加入/ l/ 点/ 的/ 检测/ 表达式/ 的/ 充分条件/ ./ 至此/ ,/ 我们/ 可以/ 得到/ 对于/ 任意/ 条件/ ci/ ,/ 有/ 如下/ 定理/ ./ 定理/ 5/ ./ 在/ 程序执行/ 路径/ P/ 上/ ,/ 对于/ 检测点/ l/ ,/ 有/ CEl/ =/ CCl/ ∪/ RCl/ ∪/ VDCl/ ./ 证明/ ./ 由/ 检测/ 表达式/ 的/ 定义/ ,/ 有/ c/ ∈/ CEl/ / c/ ∈/ CCl/ ∨/ c/ ∈/ RCl/ ∨/ c/ ∈/ VDCl/ ,/ 充分性/ 得证/ ./ 根据/ 定理/ 1/ 、/ 定理/ 2/ 和/ 定理/ 4/ ,/ 有/ c/ ∈/ CCl/ ∨/ c/ ∈/ RCl/ ∨/ c/ ∈/ VDCl/ / c/ ∈/ CEl/ ,/ 必要性/ 得证/ ./ 因此/ CEl/ =/ CCl/ ∪/ RCl/ ∪/ VDCl/ ./ 4/ 延后/ 的/ 多/ 路径分析/ 方法/ 现在/ 的/ 多/ 路径分析/ 方法/ ,/ 一般/ 是/ 在/ 分支/ 语句/ 处/ 判断/ 当前/ 分支/ 条件/ c/ ,/ 如果/ c/ →/ / / DDInput/ (/ 其中/ DD/ 表示/ 数据/ 依赖/ )/ ,/ 则/ 创建/ 两个/ 进程/ ,/ 分别/ 执行/ 并/ 递归/ 地/ 进行/ 多/ 路径分析/ [/ 2/ ]/ ./ 当过/ 多/ 分支/ 语句/ 或者/ 循环/ 控制/ 语句/ 依赖于/ 外部/ 输入/ 时/ ,/ 这类/ 多/ 路径分析/ 方法/ 会/ 因为/ 创建/ 的/ 分析/ 进程/ 数量/ 过多/ 而/ 不/ 实用/ (/ 与/ 分支/ 数目/ 成/ 指数/ 关系/ )/ ,/ 这/ 也/ 是/ 目前/ 多/ 路径分析/ 方法/ 难以/ 应用/ 于/ 大规模/ 程序/ 的/ 主要/ 原因/ 之一/ ./ 由/ 定理/ 5/ ,/ 在/ 程序执行/ 过程/ 中/ ,/ 对于/ 条件/ c/ →/ / / DDInput/ ,/ 若/ c/ / CEl/ ,/ 则/ 表示/ c/ 取值/ 真假/ 与/ CCl/ 无关/ ,/ 因此/ 不/ 需要/ 在/ 条件/ c/ 处/ 进行/ 多路径/ 扩展/ ./ 这里/ 提出/ 一种/ 基于/ 延后/ 策略/ 的/ 多/ 路径分析/ 方法/ ,/ 针对/ 已有/ 的/ 检测点/ ,/ 确定/ 与/ 检测点/ 相关/ 的/ 分支/ 语句/ ./ 此/ 方法/ 由/ 两种/ 模式/ 组成/ :/ 监控/ 模式/ 和/ 检测/ 模式/ ./ 在/ 监控/ 模式/ 下/ ,/ 被/ 分析程序/ 正常/ 运行/ ,/ 监控/ 程序/ 记录/ 路径/ P/ 、/ 条件/ 路径/ CP/ 等/ 相关/ 的/ 信息/ ./ 检测/ 模式/ 指/ 遇到/ 程序/ 检测点/ l/ 后/ ,/ 判断/ 条件/ c/ ∈/ CP/ 与/ CEl/ 间/ 关系/ 的/ 过程/ ./ 程序/ 开始/ 时以/ 监控/ 模式/ 进行/ ./ 每当/ 遇到/ 指令/ I/ 时/ ,/ 如果/ I/ 是/ 程序/ 检测点/ ,/ 则/ 转入/ 检测/ 模式/ ,/ 否则/ 将/ I/ 加入/ 执行/ 路径/ P/ ./ 如果/ I/ 是/ 分支/ 语句/ ,/ 且/ I/ →/ / / DDInput/ ,/ 则/ 将/ I/ 加入/ 条件/ 路径/ CP/ ./ 使用/ 切片/ 方法/ 可以/ 判断/ I/ 是否/ 依赖于/ 外部/ 输入/ ,/ 但/ 其/ 效率/ 较/ 低/ ,/ 且/ 不/ 准确/ ./ 这里/ 我们/ 使用/ 污点/ 传播方式/ 判断/ I/ 是否/ 依赖于/ 外部/ 输入/ ./ 污点/ 传播/ [/ 18/ ]/ 是/ 一种/ 有效/ 确认/ 变量/ 之间/ 是否/ 相关/ 的/ 分析方法/ ./ 通过/ 设置/ 污点/ 源/ 和/ 定义/ 污点/ 传播/ 规则/ ,/ 可以/ 判断/ 程序运行/ 过程/ 中/ 变量/ 是否/ 与/ 污点/ 源/ 相关/ ./ 污点/ 源/ 可以/ 设置/ 为/ 外部/ 文件/ 、/ 键盘输入/ 和/ 网络/ 输入/ 等/ ./ 表/ 1/ 是/ 部分/ 指令/ 的/ 污点/ 传播/ 规则/ ,/ 包括/ 数据/ 转移/ 类/ 指令/ 、/ 算术/ 操作/ 指令/ 、/ 逻辑/ 操作/ 类/ 指令/ 、/ 比较/ 类/ 指令/ 等/ ./ 为了/ 能够/ 更快/ 地/ 确定/ 某/ 块内存/ 区域/ 是否/ 依赖于/ 外部/ 输入/ ,/ 我们/ 使用/ 了/ 影子/ 内存/ 的/ 方法/ ./ 影子/ 内存/ 为/ 真实/ 内存/ 的/ 镜像/ ,/ 其/ 每块/ 内存空间/ 表示/ 相对/ 应/ 的/ 真实/ 内存/ 是否/ 依赖于/ 外部/ 输入/ ./ 为了/ 保持/ 分析/ 过程/ 中/ 的/ 连贯性/ ,/ 我们/ 对/ 寄存器/ 也/ 实现/ 了/ 相应/ 的/ 影子/ 机制/ ./ Page6/ 指令/ 分类/ 数据/ 转移/ 指令/ 算术/ 操作/ 指令/ T/ (/ op1/ )/ ←/ T/ (/ op1/ )/ ∨/ T/ (/ op2/ )/ ;/ 逻辑/ 操作/ 指令/ T/ (/ op1/ )/ ←/ T/ (/ op1/ )/ ∨/ T/ (/ op2/ )/ ;/ 比较/ 类/ 指令/ T/ (/ μ/ (/ cmp/ ,/ PSW/ )/ )/ ←/ T/ (/ op1/ )/ ∨/ T/ (/ op2/ )/ cmpop1/ ,/ op2/ 表/ 1/ 中/ T/ (/ op/ )/ →/ BOOL/ ,/ 表示/ op/ 所/ 指向/ 的/ 操作数/ 是否/ 为/ 污点/ 数据/ ;/ PSW/ 表示/ 机器/ 状态字/ ;/ μ/ (/ op/ ,/ PSW/ )/ →/ / ,/ 表示/ op/ 操作/ 引发/ PSW/ 中/ 变化/ 的/ 位置/ ,/ 例如/ add/ 操作/ 会/ 引起/ C/ 、/ P/ 、/ A/ 、/ Z/ 、/ S/ 、/ O/ 等/ 标志/ 位/ 的/ 改变/ ./ 注意/ add/ 、/ and/ 等/ 算术/ // 逻辑/ 指令/ 会/ 影响/ PSW/ 的/ 值/ ,/ 这里/ 也/ 必须/ 引入/ ,/ 因为/ jne/ 等/ 跳转/ 指令/ 依赖于/ PSW/ 的/ 值/ ./ 由于/ 缺少/ 源代码/ ,/ 污点/ 传播/ 在/ 分析/ 过程/ 中/ 存在/ 一定/ 的/ 局限性/ ,/ 主要/ 包括/ 如下/ 几条/ :/ (/ 1/ )/ 嵌套循环/ 难以/ 处理/ 的/ 问题/ ./ 目前/ 原型/ 系统/ 中/ 我们/ 采取/ 的/ 措施/ 是/ 将/ 循环展开/ [/ 19/ ]/ ,/ 但/ 这样/ 会/ 造成/ 需要/ 多/ 路径分析/ 的/ 分支/ 数量/ 过多/ 的/ 问题/ ./ 在/ 未来/ 的/ 工作/ 过程/ 中/ ,/ 我们/ 将/ 重点/ 对/ 循环/ 进行/ 处理/ ,/ 进一步/ 减少/ 循环/ 对/ 多/ 路径分析/ 的/ 影响/ ./ (/ 2/ )/ 操作/ 指令集/ 不/ 完备/ 的/ 问题/ ./ 由于/ CPU/ 指令/ 较/ 多/ ,/ 目前/ 的/ 原型/ 系统/ 中/ 完成/ 了/ 数据传输/ 类/ 指令/ 、/ 算数/ 操作/ 类/ 指令/ 、/ 逻辑/ 操作/ 类/ 指令/ 和/ 比较/ 类/ 指令/ 等/ 指令/ 集合/ 的/ 污点/ 传播/ 分析/ ,/ 对于/ 特殊/ 的/ 指令/ ,/ 例如/ MMX/ 指令/ 、/ FPU/ 指令/ 等/ 并/ 没有/ 完成/ 污点/ 传播/ 分析/ ,/ 这/ 可能/ 会/ 造成/ 分析/ 不/ 全面/ 的/ 问题/ ./ 同时/ 我们/ 仅/ 支持/ IntelCPU/ 的/ 指令集/ ,/ 并/ 不/ 兼容/ 其它/ 类型/ 的/ CPU/ ./ 在/ 未来/ 的/ 工作/ 中/ ,/ 我们/ 将/ 支持/ 更/ 多/ 的/ 指令集/ ,/ 以便/ 完善/ 我们/ 的/ 原型/ 系统/ ./ (/ 3/ )/ 系统/ 调用/ 的/ 问题/ ./ 目前/ 原型/ 系统/ 仅/ 在/ 用户/ 层/ 进行/ 分析/ ,/ 并/ 没有/ 对/ 内核/ 层/ 进行/ 污点/ 传播/ 处理/ ./ 这/ 可能/ 会/ 造成/ 部分/ 污点/ 传播/ 失效/ 的/ 问题/ ,/ 使得/ 分析/ 的/ 全面性/ 受阻/ ./ 目前/ 采用/ 国际/ 上/ 使用/ 较/ 多/ 的/ 方式/ ,/ 对系统/ 调用/ 总结/ 出/ “/ 摘要/ ”/ (/ summary/ )/ 信息/ [/ 20/ ]/ ,/ 即/ 对/ 部分/ 系统/ 调用/ 增加/ 一定/ 程度/ 的/ 信息/ 以/ 保持/ 污点/ 传播/ 分析/ 的/ 连续性/ ./ 目前/ 我们/ 对/ NtReadFile/ 等/ 系统/ 调用/ 增加/ 了/ “/ 摘要/ ”/ 信息/ ./ 在/ 目前/ 软件/ 安全/ 逆向/ 分析/ 中/ ,/ 单一/ 节点/ 的/ 检测/ 往往/ 不能/ 作为/ 漏洞/ 点/ 存在/ 的/ 依据/ ,/ 因此/ 需要/ 考虑/ 多个/ 检测点/ 间/ 的/ 共同/ 作用/ ./ 假设/ 需要/ 共同/ 作用/ 的/ 检测点/ 集合/ 为/ L/ =/ {/ lp/ ,/ …/ ,/ lq/ }/ ,/ 当/ 程序运行/ 至/ L/ 时/ ,/ 进入/ 检测/ 模式/ ./ CP/ 中/ 记录/ 了/ 执行/ 路径/ P/ 上/ 遇到/ 的/ 所有/ 依赖于/ 外部/ 输入/ 的/ 条件/ ./ 不妨/ 设/ CEL/ =/ ∪/ l/ ∈/ LCEl/ ./ 此时/ 需要/ 逐个/ 判断/ CP/ 中/ 的/ 条件/ c/ 是否/ 属于/ CEL/ ./ 由/ 定理/ 5/ ,/ CEl/ =/ CCl/ ∪/ RCl/ ∪/ VDCl/ ,/ 所以/ 需/ 判断/ 条件/ c/ 是否/ 属于/ 集合/ ∪/ l/ ∈/ LCCl/ ∪/ RCl/ ∪/ VDCl/ ./ 定义/ 函数/ σ/ (/ a/ :/ P/ ,/ b/ :/ P/ )/ →/ {/ true/ ,/ false/ }/ 表示/ 结点/ b/ 是否是/ 结点/ a/ 的/ 后/ 必经/ 结点/ ,/ 如果/ 是/ ,/ 则/ 返回/ true/ ,/ 否则/ 返回/ false/ ./ 对于/ 路径/ P/ =/ {/ l1/ ,/ l2/ ,/ …/ ,/ li/ ,/ l/ }/ ,/ 其中/ l/ 是/ L/ 中/ 执行/ 流程/ 序列/ 的/ 最后/ 一条/ 语句/ ,/ 从/ 指令/ li/ 开始/ 逆序/ 进行/ 分析/ ./ 对于/ 第一条/ 指令/ li/ ,/ 根据/ 不同/ 情况/ :/ (/ 1/ )/ li/ ∈/ CP/ 时/ ,/ σ/ (/ li/ ,/ l/ )/ ≡/ false/ ,/ 且/ 由于/ |/ P/ [/ li/ ,/ l/ ]/ |/ =/ 2/ ,/ 因此/ l/ →/ / / / WCDli/ ,/ 即/ li/ ∈/ RCl/ ,/ 根据/ 定理/ 2/ ,/ 将/ li/ 加入/ CEl/ ,/ 用/ li/ →/ CEl/ 表示/ ./ 若/ li/ ∈/ L/ ,/ 更新/ 路径/ 引用/ 集/ si/ =/ USE/ (/ {/ li/ }/ ,/ s/ ,/ l/ )/ ∪/ USE/ (/ CCli/ )/ ./ 继续/ 分析/ li/ -/ 1/ ./ (/ 2/ )/ li/ / CP/ 时/ ,/ 使用/ 路径/ 引用/ 集/ 的/ 推导/ 规则/ 计算/ {/ li/ }/ 的/ 路径/ 引用/ 集/ ,/ 即/ 计算/ si/ =/ USE/ (/ {/ li/ }/ ,/ s/ ,/ l/ )/ ,/ 其中/ s/ =/ USE/ (/ CCl/ )/ ./ 若/ li/ ∈/ L/ ,/ 则/ si/ =/ USE/ (/ {/ li/ }/ ,/ s/ ,/ l/ )/ ∪/ USE/ (/ CCli/ )/ ./ 当/ / lk/ (/ lk/ ∈/ CP/ ∧/ σ/ (/ lk/ ,/ li/ )/ =/ true/ )/ 时/ ,/ 如果/ DEF/ (/ P/ [/ lk/ ,/ li/ )/ )/ ∩/ si/ ≠/ / ,/ 根据/ 定理/ 3/ 可知/ lk/ ∈/ VDCl/ ,/ lk/ →/ CEl/ ./ 按此/ 步骤/ 继续/ 分析/ li/ -/ 1/ ./ 对于/ 任意/ lj/ ∈/ {/ l1/ ,/ l2/ ,/ …/ ,/ li/ -/ 1/ }/ ,/ 根据/ 如下/ 方法/ 分析/ :/ (/ 1/ )/ lj/ ∈/ CP/ ,/ (/ i/ )/ 若/ lj/ ∈/ CEl/ ,/ 更新/ 路径/ 引用/ 集/ sj/ =/ sj/ +/ 1/ ∪/ USE/ (/ lj/ )/ ;/ (/ ii/ )/ 若/ lj/ / CEl/ ∧/ / -/ lk/ (/ lk/ ∈/ P/ [/ lj/ ,/ l/ ]/ ∧/ σ/ (/ lj/ ,/ lk/ )/ =/ true/ )/ ,/ 则/ lj/ ∈/ RCl/ ,/ 根据/ 定理/ 2/ ,/ lj/ →/ CEl/ ,/ 并/ 更新/ 路径/ 引用/ 集/ sj/ =/ sj/ +/ 1/ ∪/ USE/ (/ lj/ )/ ./ 若/ lj/ ∈/ L/ ,/ 更新/ 路径/ 引用/ 集/ sj/ =/ sj/ ∪/ USE/ (/ CClj/ )/ ./ 继续/ 分析/ lj/ -/ 1/ ./ (/ 2/ )/ lj/ / CP/ ,/ 使用/ 路径/ 引用/ 集/ 的/ 推导/ 规则/ ,/ 计算/ {/ lj/ }/ 的/ 路径/ 引用/ 集/ ,/ 即/ sj/ =/ USE/ (/ {/ lj/ }/ ,/ sj/ +/ 1/ ,/ l/ )/ ,/ 其中/ sj/ +/ 1/ 在/ 分析/ 指令/ lj/ +/ 1/ 时/ 计算/ 出/ ./ 若/ lj/ ∈/ L/ ,/ 更新/ 路径/ 引用/ 集/ sj/ =/ sj/ ∪/ USE/ (/ CClj/ )/ ./ 当/ / lk/ (/ lk/ ∈/ CP/ ∧/ σ/ (/ lk/ ,/ lj/ )/ =/ true/ )/ 时/ ,/ 如果/ DEF/ (/ P/ [/ lk/ ,/ lj/ )/ )/ ∩/ sj/ ≠/ / ,/ 根据/ 定理/ 5/ 可知/ lk/ ∈/ VDCl/ ,/ lk/ →/ CEl/ ./ 继续/ 分析/ lj/ -/ 1/ ./ 算法/ 1/ 是/ 程序执行/ 与/ 检测/ 表达式/ 生成/ 的/ 算法/ 框架/ ./ 目前/ 原型/ 系统/ 的/ 实现/ 对于/ 分支/ 路径/ 采用/ 动静/ 结合/ 方式/ 判断/ 相关/ 的/ 引用/ 集合/ 和/ 定义/ 集合/ ,/ 没有/ 对/ alias/ [/ 21/ ]/ 问题/ 进行/ 分析/ ./ 如果/ 发现/ 某/ 分支/ 语句/ 的/ 分析/ 过程/ 中/ ,/ 有/ 不/ 确定/ 目标/ 的/ alias/ 操作/ ,/ 则/ 将/ 当前/ 分支/ 条件/ 加入/ 相应/ 检测点/ 的/ 值/ 依赖/ 条件/ VDC/ 中/ ,/ 因此/ 可能/ 会/ 造成/ VDC/ 偏大/ ,/ 但此/ 方法/ 不会/ 失去/ 准确性/ ./ 实验/ 结果表明/ ,/ 即使/ 使用/ 这种/ 方式/ ,/ 计算/ 出/ 的/ 需多/ 路径分析/ 的/ 条件/ 数量/ 仍然/ 小于/ EXE/ 方式/ 下/ 的/ 相应/ 条件/ 数量/ ./ 在/ 今后/ 的/ 工作/ 中/ ,/ 可以/ 使用/ 更/ 精确/ 的/ 方法/ 对/ Page7alias/ 问题/ 进行/ 分析/ ,/ 进一步/ 减少/ 分支/ 数目/ ./ 算法/ 1/ ./ 程序/ P/ 执行/ 与/ 检测/ 表达式/ 生成/ 算法/ ./ Input/ :/ 程序/ P1/ ./ stackPath/ ←/ / ;/ stackCPath/ ←/ / ;/ 2/ ./ while/ (/ P/ 未/ 结束/ )/ {/ 3/ ./ l/ ←/ 当前/ 执行/ 语句/ ;/ 对/ l/ 做/ 污点/ 传播/ 处理/ ;/ 4/ ./ if/ (/ l/ 是/ 分支/ 语句/ ∧/ l/ →/ / / DDInput/ )/ {/ CPath/ ./ push/ (/ l/ )/ ;/ }/ 5/ ./ if/ (/ l/ ∈/ L/ )/ {/ // // L/ 是/ 检测点/ 集合/ 6/ ./ CEl/ ←/ 检测/ 语句/ CCl/ ;/ li/ ←/ Path/ ./ pop/ (/ )/ ;/ 7/ ./ ci/ ←/ CPath/ ./ pop/ (/ )/ ;/ si/ =/ USE/ (/ CCl/ )/ ;/ 8/ ./ while/ (/ Path/ ≠/ / )/ {/ 9/ ./ li/ ←/ Path/ ./ pop/ (/ )/ ;/ 10/ ./ if/ (/ li/ ≠/ ci/ )/ {/ 11/ ./ si/ =/ USE/ (/ {/ li/ }/ ,/ si/ +/ 1/ ,/ l/ )/ ;/ 12/ ./ if/ (/ li/ ∈/ L/ )/ si/ =/ si/ ∪/ USE/ (/ CCli/ )/ ;/ 13/ ./ if/ (/ / lk/ (/ lk/ ∈/ CPath/ ∧/ σ/ (/ lk/ ,/ li/ )/ =/ true/ ∧/ 14/ ./ CEl/ =/ CEl/ ∧/ lk/ ;/ 15/ ./ }/ 16/ ./ }/ else/ {/ 17/ ./ if/ (/ li/ ∈/ CEl/ )/ {/ si/ =/ si/ +/ 1/ ∪/ USE/ (/ li/ )/ ;/ }/ 18/ ./ else/ {/ 19/ ./ if/ (/ l/ →/ / / / WCDli/ )/ {/ CEl/ =/ CEl/ ∧/ li/ ;/ si/ =/ 20/ ./ }/ 21/ ./ if/ (/ li/ ∈/ L/ )/ si/ =/ si/ ∪/ USE/ (/ CCli/ )/ ;/ 22/ ./ if/ (/ li/ ∈/ CEl/ )/ 在/ ci/ 处/ 进行/ 多/ 路径分析/ ;/ 23/ ./ if/ (/ CPath/ =/ / )/ {/ break/ }/ 24/ ./ else/ {/ ci/ ←/ CPath/ ./ pop/ (/ )/ ;/ }/ 25/ ./ }/ 26/ ./ }/ 27/ ./ 输出/ CEl/ ;/ 28/ ./ }/ 29/ ./ }/ 在/ 程序/ 循环/ 时/ ,/ 路径/ 减少/ 显得/ 尤为/ 明显/ ./ 下例/ 是/ 在/ 循环/ 程序/ 的/ 示例/ ,/ 对比/ 了/ EXE/ 方法/ 和/ 延后/ 方法/ 的/ 不同/ 处理/ 方式/ ./ 例/ 1/ ./ 检测点/ 与/ 循环/ ./ intm/ =/ input/ ;/ // // 表示/ m/ 依赖于/ 外部/ 输入/ intn/ =/ input/ ;/ // // 假设/ n/ </ 20inta/ [/ 20/ ]/ ;/ intk/ =/ 0/ ;/ if/ (/ n/ </ 20/ )/ {/ i/ :/ for/ (/ inti/ =/ 0/ ;/ i/ </ n/ ;/ i/ ++/ )/ {/ j/ :/ a/ [/ m/ ]/ =/ k/ ;/ // // 检测/ 语句/ ,/ 检测/ 条件/ 是/ 0/ / m/ </ 20/ }/ 对于/ 以上/ 片段/ ,/ 假设/ 检测点/ 是/ j/ ,/ 检测/ 条件/ 是/ 0/ / m/ </ 20/ ./ 如果/ 使用/ EXE/ 的/ 处理/ 方式/ ,/ 在/ i/ 处/ ,/ 需要/ 分别/ 对/ n/ =/ 0/ ,/ n/ =/ 1/ ,/ …/ ,/ n/ =/ 19/ 进行/ 多/ 路径分析/ ./ 但是/ 对于/ 这种/ 方式/ 中/ 的/ 每/ 一条/ 路径/ ,/ 程序/ 到达/ 检测点/ j/ 的/ 检测/ 条件/ 均/ 没有/ 变化/ ,/ 仍然/ 为/ 0/ / m/ </ 20/ ./ 因此/ 在/ i/ 处/ 对/ n/ 进行/ 多/ 路径分析/ 是/ 没有/ 必要/ 的/ ./ 但/ 使用/ 延后/ 分析方法/ ,/ i/ / RCj/ ∧/ i/ / VDCj/ ,/ 不/ 需要/ 在/ i/ 处/ 进行/ 多/ 路径分析/ ,/ 因此/ 有效/ 节省/ 了/ 计算资源/ ./ 5/ 实验/ 与/ 分析/ 为了/ 测试/ 本/ 方法/ 的/ 有效性/ 和/ 性能/ ,/ 我们/ 实现/ 了/ 延后/ 策略/ 多/ 路径分析/ 的/ 原型/ 系统/ ./ 原型/ 系统/ 由/ 4/ 部分/ 组成/ ,/ 分别/ 是/ 加载/ 模块/ 、/ 执行/ 模块/ 、/ 污点/ 传播/ 模块/ 和/ 延后/ 分析/ 模块/ ./ 加载/ 模块/ 首先/ 加载/ 被/ 分析/ 的/ 程序/ ,/ 再/ 由/ 执行/ 模块/ 执行/ ,/ 执行/ 的/ 基本/ 单位/ 为/ 程序/ 语句/ ,/ 每/ 执行/ 完/ 一条/ 语句/ 后/ 由/ 污点/ 传播/ 模块/ 进行/ 污点/ 源/ 的/ 识别/ 与/ 污点/ 数据/ 传播/ ,/ 之后/ 进行/ 延后/ 策略/ 的/ 分析/ ./ 分析/ 过程/ 中/ 使用/ 缓存/ 技术/ 进行/ 优化/ ,/ 当/ 后续/ 程序运行/ 时/ 使用/ 到/ 已/ 分析/ 过/ 的/ 结果/ 时/ ,/ 直接/ 取/ 缓存/ 结果/ 即可/ ./ 整个/ 系统/ 使用/ C++/ 语言/ 实现/ ,/ 约/ 1/ 万行/ 代码/ ./ 计算机硬件/ 使用/ DellOptiplex360/ 计算机/ ,/ 配以/ IntelCore2DuoCPUE73002/ ./ 66GHzCPU/ ,/ 2GB/ 内存/ ,/ 操作系统/ 使用/ WindowsXPSP3/ ./ 多路径/ 研究/ 的/ 意义/ 在于/ 其/ 进行/ 软件/ 安全漏洞/ 检测/ 、/ 程序/ 异常/ 行为/ 分析/ 方面/ 的/ 贡献/ ./ 因此/ 我们/ 使用/ 实际/ 案例/ 数据测试/ 基于/ 延后/ 方法/ 进行/ 动态/ 多/ 路径分析/ 的/ 有效性/ ./ Win32/ ./ NetSky/ 是/ 2004/ 年/ 传播/ 最/ 广泛/ 的/ 蠕虫/ 之一/ ,/ 它/ 在/ Windows/ 环境/ 下以/ 邮件/ 方式/ 进行/ 传播/ ./ 在/ 我们/ 的/ 分析/ 过程/ 中/ ,/ 将/ GetLocalTime/ 返回值/ 作为/ 污点/ 数据/ ,/ 并/ 以此/ 为/ 污点/ 源/ 进行/ 分析/ ./ 使用/ 随机/ 的/ 日期/ ,/ 程序流程/ 以图/ 2/ 中/ 最/ 上/ 一层/ 的/ 调用/ 序列/ 到达/ 0x100025EE/ ./ 此时/ 路径/ 上/ 的/ 分支/ 语句/ 有/ 0x100025A3/ 、/ 0x100025AD/ 、/ 0x100025BA/ 、/ 0x100025C3/ 、/ 0x100025CB/ 、/ 0x100025D3/ 、/ 0x100025DC/ ,/ 其中/ 0x100025AD/ 与/ 污点/ 数据/ 无关/ ./ EXE/ [/ 2/ ]/ 方法/ 与/ Moser/ [/ 14/ ]/ 方法/ 应用/ 广泛/ ,/ 是/ 目前/ 国际/ 上/ 最/ 有/ 代表性/ 的/ 可执行程序/ 多/ 路径分析/ 方法/ 之一/ ./ 由于/ Moser/ 方法/ 原理/ 与/ EXE/ 方法/ 类似/ ,/ 实验/ 时仅/ 将/ 延后/ 方法/ 与/ EXE/ 方法/ 作/ 对比/ ./ 使用/ EXE/ 方法/ 多/ 路径分析/ 时/ ,/ 需要/ 在/ 除/ 0x100025AD/ 外/ 的/ 其它/ 分支/ 语句/ 处/ 启用/ 新/ 的/ 进程/ 进行/ 路径分析/ ;/ 若/ 使用/ 延后/ 策略/ 的/ 方法/ ,/ 可以/ 发现/ 0x100025A3/ 、/ 0x100025CB/ 、/ 0x100025D3/ 、/ 0x100025DC/ 不/ 属于/ 0x100025EE/ 的/ 运行/ 条件/ 或值/ 依赖/ 条件/ ,/ 因此/ 不必/ 在/ 这些/ 位置/ 进行/ 多路径/ 扩展/ ,/ 仅/ 需/ 在/ 0x100025BA/ 和/ 0x100025C3/ 处/ 进行/ 多/ 路径分析/ 即可/ ,/ 提高/ 了/ 整体/ 分析/ 的/ 效率/ ./ 实际/ 分析/ 时/ ,/ 在/ 0x100025BA/ 处/ 进行/ 多路径/ 扩展/ 将/ 到达/ NetSky/ 程序/ 的/ 攻击/ 处/ ATTACK/ ./ Page8/ 图/ 2NetSky/ 多/ 路径分析/ 图/ 为了/ 对比/ EXE/ 方法/ 和/ 延后/ 方法/ 对于/ 不同/ 程序/ 需要/ 多/ 路径分析/ 的/ 分支/ 数量/ ,/ 我们/ 对/ 7/ 款/ 恶意软件/ 进行/ 测试/ ./ PerfectKeylogger/ 是/ 一款/ 记录/ 键盘/ 操作/ 的/ 软件/ ;/ CodeRed/ 、/ Nimda/ 、/ Slammer/ 、/ Maslan/ 为/ 网络蠕虫/ ;/ QQThief/ 和/ ExploitIE/ 是/ 黑客工具/ ./ 表/ 2/ 记录/ 了/ 各/ 程序/ 在/ 运行/ 过程/ 中/ 相应/ 检测/ 表达式/ 中/ 条件/ 数量/ 的/ 平均值/ ./ 多/ 路径分析/ 针对/ 不同/ 的/ 目标/ ,/ 检测点/ 的/ 选取/ 是/ 不同/ 的/ ,/ 这里/ 不/ 考虑/ 具体/ 的/ 分析/ 目标/ ,/ 具体/ 检测点/ 的/ 选取/ 不是/ 本/ 论文/ 的/ 讨论/ 重点/ ./ 目前/ 国际/ 上/ 对/ 程序/ 检测点/ 有/ 多种/ 选取/ 方法/ [/ 22/ ]/ ,/ 为了/ 不失/ 一般性/ ,/ 本文/ 采用/ 在/ 程序/ 中/ 的/ 随机/ 检测点/ 进行/ 分析/ ./ 检测点/ 的/ 产生/ 规则/ 是/ 在/ 程序/ 启动/ 后/ ,/ 将/ 每/ 100/ 条/ 指令/ 基本块/ 为/ 间隔/ 作为/ 一个/ 程序/ 检测点/ ,/ 各/ 程序/ 产生/ 的/ 检测点/ 的/ 数目/ 随着/ 程序/ 的/ 不同/ 而/ 不同/ ./ 多/ 路径分析/ 过程/ 中/ ,/ 创建/ 新/ 进程/ 的/ 数量/ 与/ 条件/ 数量/ 成/ 指数/ 关系/ ,/ 因此/ 条件/ 数量/ 在/ 一定/ 程度/ 上/ 反映/ 多/ 路径分析/ 效率/ 以及/ 路径/ 求解/ 的/ 效率/ ./ 在/ 程序运行/ 过程/ 中/ ,/ 检测/ 表达式/ 中/ 条件/ 数量/ 会/ 不断/ 变化/ ,/ 因此/ 如果/ 简单/ 地/ 对/ 每个/ 检测/ 表达式/ 中/ 的/ 条件/ 数量/ 进行/ 平均/ ,/ 将会/ 丧失/ 结果/ 的/ 准确性/ ./ 这里/ 以/ 原始/ 方法/ (/ Origin/ )/ 为/ 基础/ ,/ 对/ 每个/ 检测点/ 在/ 各种/ 方法/ 下/ 的/ 条件/ 表达式/ 数量/ 进行/ 归一化/ ,/ 最后/ 取/ 平均值/ ,/ 比较/ EXE/ 方法/ 和/ 延后/ 策略/ (/ LA/ )/ 对/ 表达式/ 长度/ 的/ 缩减/ ./ 其中/ 原始/ 方法/ 指对/ 路径/ 条件/ 不/ 做/ 任何/ 判断/ 均/ 进行/ 记录/ ./ 程序/ 名称/ 检测点/ 数量/ EXE/ // OriginLA/ // Origin/ (/ LA/ // EXE/ )/ // %/ PerfectKeylogger31930/ ./ 16660.025615/ ./ 37CodeRed15770/ ./ 17670.038121/ ./ 56Nimda15050/ ./ 07090.008011/ ./ 28Slammer13630/ ./ 15620.033621/ ./ 51Maslan12340/ ./ 05720.00142/ ./ 45QQThief12310/ ./ 01710.008348/ ./ 54ExploitIE12230/ ./ 02170.008740/ ./ 09/ 表/ 2/ 中/ 第/ 2/ 列/ 表示/ 分析/ 过程/ 中/ ,/ 程序/ 检测点/ 总数/ ;/ Origin/ 表示/ 原始/ 方法/ ,/ 这/ 也/ 是/ 归一化/ 处理/ 的/ 基础/ ;/ 第/ 3/ 列为/ 使用/ EXE/ 方法/ 缩减/ 后/ 的/ 条件/ 表达式/ 长度/ 相对/ 于/ Origin/ 方法/ 所/ 占/ 的/ 比例/ ;/ 第/ 4/ 列是/ 使用/ 延后/ 策略/ 的/ 条件/ 数量/ 相对/ 于/ Origin/ 方法/ 所/ 占/ 的/ 比例/ ;/ 最后/ 一列/ 以/ 百分制/ 表示/ 延后/ 策略/ 检测/ 表达式/ 条件/ 数量/ 占/ EXE/ 方法/ 的/ 比例/ ./ 从表/ 1/ 中/ 可以/ 看出/ ,/ EXE/ 方法/ 虽然/ 使用/ 了/ 污点/ 传播/ 进行/ 处理/ ,/ 但/ 仍/ 存在/ 大量/ 无用/ 条件/ ./ 使用/ 延后/ 策略/ 的/ 方法/ 能够/ 减少/ 大量/ 的/ 无用/ 分支/ 语句/ ,/ 简化/ 了/ 检测/ 表达式/ ,/ 减少/ 了/ 分支/ 的/ 数量/ ,/ 其/ 条件/ 数量/ 平均/ 仅/ 占/ EXE/ 方法/ 的/ 22.97/ %/ ./ 表/ 2/ 从/ 整体/ 上/ 对比/ 了/ EXE/ 方法/ 和/ 延后/ 方法/ 之间/ 对/ 不同/ 程序/ 检测点/ 中/ 条件/ 数量/ 的/ 差异/ ,/ 但/ 并/ 没有/ 显示/ 出/ 在/ 分析/ 过程/ 中/ ,/ 检测点/ 条件/ 数量/ 的/ 变化/ 情况/ ./ 图/ 3/ 以/ PerfectKeylogger/ 为例/ ,/ 从/ 程序/ 随/ 时间/ 执行/ 的/ 角度/ 加以/ 说明/ ./ 图中/ 横轴/ 记录/ 的/ 是/ 程序/ 顺序/ 流程/ 中/ 随机/ 选取/ 的/ 不同/ 检测点/ ,/ 纵轴/ 表示/ 检测/ 表达式/ 中/ 条件/ 的/ 数目/ ./ 由图/ 中/ 可知/ ,/ 使用/ EXE/ 方法/ ,/ 程序/ 的/ 条件/ 检测点/ 数目/ 随/ 程序/ 的/ 执行/ 几乎/ 呈/ 线性/ 增长/ ,/ 当/ 程序执行/ 流程/ 越长/ ,/ 检测/ 表达式/ 中/ 条件/ 数量/ 越多/ ./ 值得注意/ 的/ 是/ ,/ 条件/ 数量/ 每/ 增加/ 1/ ,/ 产生/ 的/ 进程/ 数量/ 并/ 不是/ 增加/ 1/ ,/ 而是/ 在/ 原有/ 基础/ 上/ 增加/ 1/ 倍/ ,/ 即/ 进程/ 数量/ 与/ 条件/ 表达式/ 的/ 数量/ 之间/ 为/ 指数/ 关系/ ./ 因此/ 这/ 也/ 是/ EXE/ 方法/ 难以/ 分析/ 大型/ 程序/ 的/ 原因/ ./ 从图/ 中/ 看出/ ,/ 采用/ 延后/ 策略/ 的/ 方法/ ,/ 检测点/ 条件/ 数量/ 呈/ 锯齿形/ 分布/ ./ 其/ 原因/ 是/ 检测/ 表达式/ 中/ 条件/ 数量/ 与/ 程序/ 的/ 执行/ 过程/ 的/ 长短/ 并/ 无/ 直接/ 关系/ ,/ 仅/ 与/ 变量/ 之间/ 的/ 依赖/ 关系/ 和/ 运行/ 条件/ 相关/ ./ 由于/ 程序/ 中/ 外界/ 变量/ 仅/ 影响/ 部分/ 程序/ 语句/ ,/ 随着/ 程序/ 的/ 执行/ ,/ 此/ 外界/ 变量/ 可能/ 不图/ 3PerfectKeylogger/ 中/ EXE/ 方法/ 和/ LA/ 方法/ Page9/ 被/ 继续/ 使用/ ,/ 因此/ 后续/ 阶段/ 的/ 检测/ 表达式/ 中/ 的/ 检测/ 条件/ 与/ 前/ 一/ 阶段/ 可能/ 并/ 不/ 相关/ ,/ 这/ 也/ 是/ 图/ 中/ 曲线/ 呈/ 锯齿/ 型/ 分布/ 的/ 原因/ ./ 因此/ ,/ 本/ 方法/ 更/ 适用/ 于/ 大型/ 程序/ ./ 由于/ 影子/ 内存/ 需/ 与/ 真实/ 内存/ 保持/ 对应/ 关系/ ,/ 因此/ 在/ 分析/ 过程/ 中/ 可能/ 会/ 占用/ 较大/ 空间/ ./ 在/ 本/ 原型/ 系统/ 中/ ,/ 采用/ 实时/ 记录/ 的/ 影子/ 内存/ 方法/ ./ 当有/ 新/ 的/ 内存空间/ 被/ 申请/ 时/ ,/ 增加/ 相应/ 的/ 影子/ 内存/ ;/ 当/ 目标/ 进程/ 对应/ 的/ 内存空间/ 被/ 释放/ 时/ ,/ 影子/ 内存/ 也/ 随之/ 释放/ ./ 所以/ 原型/ 系统/ 不/ 需要/ 使用/ 整个/ 内存空间/ 作为/ 影子/ 内存/ ,/ 而/ 仅仅/ 需要/ 动态/ 维护/ 内存/ 堆栈/ 即可/ ,/ 更/ 大程度/ 地/ 减少/ 了/ 原型/ 系统/ 的/ 内存空间/ 占/ 用量/ ./ 为了/ 确认/ 分析/ 过程/ 中/ 内存/ 占用/ 情况/ ,/ 我们/ 对/ 影子/ 内存/ 进行/ 了/ 分析/ ./ 图/ 4/ 是/ 在/ 分析/ 过程/ 中/ 各/ 程序/ 影子/ 内存/ 占用/ 内存空间/ 的/ 最大值/ (/ 单位/ 是/ KB/ )/ ./ 从图/ 中/ 可知/ ,/ 本/ 原型/ 系统/ 使用/ 影子/ 内存/ 机制/ 所/ 占/ 的/ 内存空间/ (/ 包括/ 堆栈/ )/ 不/ 超过/ 15MB/ ,/ 平均/ 内存/ 占用率/ 仅为/ 6.47/ MB/ ./ 因此/ ,/ 本/ 系统/ 具有/ 较/ 高/ 的/ 空间/ 利用率/ ./ 为了/ 测试/ 延后/ 方法/ 中/ 检测点/ 数量/ 对/ 检测/ 表达式/ 条件/ 筛选/ 的/ 效率/ 影响/ ,/ 表/ 3/ 对比/ 了/ 在/ 延后/ 策略/ 下/ ,/ 当/ 检测点/ 数量/ 发生变化/ 时/ ,/ 筛选/ 表达式/ 条件/ 所/ 需/ 的/ 时间/ ./ 仍然/ 对/ 7/ 款/ 恶意软件/ 进行/ 测试/ ,/ 检测点/ 数量/ 选取/ 0/ 、/ 10/ 、/ 100/ 、/ 1000/ 个/ ,/ 时间/ 单位/ 为/ s/ ./ 从表中/ 可知/ ,/ 使用/ 延后/ 方法/ 分析/ 10/ 个/ 、/ 100/ 个/ 检测点/ ,/ 相对/ 于/ 0/ 个/ 检测点/ 并/ 没有/ 在/ 时间/ 效率/ 上/ 减小/ 许多/ ./ 即使/ 分析/ 1000/ 个/ 检测点/ ,/ 增加/ 的/ 额外/ 检测时间/ 也/ 与/ 检测点/ 数量/ 几乎/ 呈/ 线性关系/ ./ 因此/ 延后/ 方法/ 具有/ 一定/ 的/ 时间/ 效率/ ./ 从表中/ 可以/ 看出/ ,/ 对于/ 部分/ 软件/ ,/ 例如/ Nimda/ 、/ QQThief/ 等/ ,/ 即使/ 在/ 1000/ 个/ 检测点/ 时/ 分析/ 时间/ 仍然/ 较少/ ./ 这是/ 由于/ 算法/ 在/ 分析/ 过程/ 中/ ,/ 对/ 部分/ 中间/ 过程/ 的/ 运算/ 结果/ (/ 例如/ 后/ 必经/ 结点/ 的/ 计算结果/ )/ 进行/ 保留/ ,/ 并/ 在/ 下次/ 运算/ 时/ 直接/ 使用/ 造成/ 的/ ./ 程序/ 名称/ PerfectKeylogger191195208313CodeRed535668149Nimda118130134162Slammer515664217Maslan606165106QQThief574585636759ExploitIE2872923285796/ 结论/ 现有/ 多/ 路径分析/ 方法/ 主要/ 存在/ 路径分析/ 不/ 全面/ 、/ 分析/ 效率/ 较/ 低/ 、/ 分析/ 过程/ 中/ 存在/ 大量/ 无用/ 路径/ 等/ 问题/ ./ 部分/ 工作/ 仅/ 从/ 检测/ 表达式/ 本身/ 对/ 路径/ 表达式/ 进行/ 优化/ 求解/ ,/ 并/ 没有/ 结合/ 程序/ 检测点/ 和/ 路径/ 条件/ 进行/ 深入/ 简化/ ./ 本文/ 针对/ 以上/ 问题/ ,/ 提出/ 了/ 弱/ 控制/ 依赖/ 和/ 路径/ 引用/ 集/ 的/ 概念/ 以及/ 相应/ 的/ 计算/ 规则/ ,/ 并/ 在/ 此基础/ 上/ 提出/ 了/ 一种/ 延后/ 策略/ 的/ 可执行程序/ 动态/ 多/ 路径分析/ 方法/ ./ 在/ 程序/ 分析/ 过程/ 中/ ,/ 不/ 立即/ 进行/ 路径/ 表达式/ 求解/ 和/ 多/ 进程/ 构造/ ,/ 而是/ 记录/ 当前/ 的/ 分支/ 条件/ ./ 当/ 遇到/ 程序/ 检测点/ 时/ ,/ 有/ 针对性/ 地/ 根据/ 检测点/ 条件/ 进行/ 路径/ 筛选/ ,/ 从/ 语义上/ 进行/ 路径/ 表达式/ 简化/ ,/ 减少/ 需要/ 分析/ 的/ 路径/ 数量/ ,/ 简化/ 检测/ 表达式/ ./ 本文/ 实现/ 了/ 一套/ 原型/ 系统/ ,/ 并/ 对/ PerfectKeylogger/ 等/ 7/ 款/ 恶意软件/ 进行/ 分析/ 实验/ ,/ 结果表明/ 本/ 方法/ 提高/ 了/ 多/ 路径分析/ 效率/ 和/ 准确性/ ./ 实验/ 中/ 发现/ ,/ 在/ 循环/ 处理过程/ 中/ ,/ 会/ 产生/ 大量/ 的/ 条件/ 表达式/ ,/ 如何/ 对/ 这类/ 条件/ 进行/ 有效/ 简化/ 是/ 未来/ 的/ 工作/ 方向/ 之一/ ./ 同时/ ,/ 结合/ 现有/ 漏洞/ 检测/ 方法/ ,/ 对/ 程序/ 检测点/ 进行/ 更/ 细粒度/ 的/ 选择/ ,/ 更多地/ 支持/ 污点/ 分析/ 的/ 指令/ 数量/ 和/ 完善/ 系统/ 调用/ 信息/ ,/ 进行/ 程序/ 安全性/ 分析/ 也/ 是/ 本文/ 未来/ 的/ 工作/ 方向/ ./ 

