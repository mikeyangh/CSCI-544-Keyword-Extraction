Page1/ 网树/ 求解/ 有/ 向/ 无/ 环图/ 中/ 具有/ 长度/ 约束/ 的/ 简单/ 路径/ 和/ 最长/ 路径/ 问题/ 李艳/ 1/ )/ 孙乐/ 2/ )/ 朱怀忠/ 2/ )/ 武优西/ 2/ )/ 1/ )/ (/ 河北/ 工业/ 大学/ 经济/ 管理/ 学院/ 天津/ 300401/ )/ 2/ )/ (/ 河北/ 工业/ 大学/ 计算机科学/ 与/ 软件/ 学院/ 天津/ 300401/ )/ 摘要/ 具有/ 长度/ 约束/ 的/ 简单/ 路径/ (/ SimplePathswithLengthConstraint/ ,/ SPLC/ )/ 问题/ 是/ 指/ 求解/ 图中/ 任意/ 两点/ 间/ 路径/ 长度/ 为/ m/ 的/ 简单/ 路径/ 数/ ,/ 是/ k/ -/ path/ 问题/ 的/ 一种/ 特殊/ 情况/ ./ 该文/ 基于/ 网树/ 数据结构/ 提出/ 了/ 在/ 有/ 向/ 无/ 环图/ 中/ 求解/ SPLC/ 问题/ 的/ 算法/ (/ NettreeforSPLCinDirectedAcyclicGraphs/ ,/ NSPLCDAG/ )/ ./ 网树/ 是/ 一种/ 多/ 树根/ 多/ 双亲/ 的/ 数据结构/ ./ NSPLCDAG/ 算法/ 将/ 该/ 问题/ 转化/ 为/ 一棵/ 网树后/ ,/ 利用/ 树根/ 路径/ 数/ 这/ 一/ 性质/ 对/ 其/ 进行/ 求解/ ./ 对/ NSPLCDAG/ 算法/ 进行/ 改造/ ,/ 可以/ 求解/ 有/ 向/ 无/ 环图/ 中/ 最长/ 路径/ 问题/ 并/ 形成/ 网树/ 求解/ 最长/ 路径/ 算法/ (/ NettreefortheLongestPathinDAGs/ ,/ NLPDAG/ )/ ,/ NLPDAG/ 算法/ 可/ 找到/ 所有/ 最长/ 路径/ ,/ 对/ NLPDAG/ 算法/ 做/ 进一步/ 改进/ 形成/ 改进/ 的/ NLPDAG/ 算法/ ,/ 改进/ 的/ NLPDAG/ 算法/ 可/ 在/ 线性/ 时间/ 复杂度/ 内/ 给出/ 有/ 向/ 无/ 环图/ 中/ 的/ 一条/ 最长/ 路径/ ./ 实验/ 结果/ 验证/ 了/ NSPLCDAG/ 和/ 改进/ 的/ NLPDAG/ 算法/ 的/ 正确性/ 与/ 有效性/ ./ 关键词/ 有/ 向/ 无环/ 网络/ ;/ 简单/ 路径/ ;/ 长度/ 约束/ ;/ 最长/ 路径/ ;/ 网树/ 1/ 引言/ 图是/ 一种/ 比/ 线性表/ 和/ 树/ 更为/ 复杂/ 的/ 数据结构/ ./ 在/ 线性表/ 中/ ,/ 结点/ 间/ 为/ 单/ 前驱/ 单/ 后继/ 的/ 线性关系/ ;/ 在/ 树结构/ 中/ ,/ 结点/ 间/ 为/ 单/ 前驱/ 多/ 后继/ 的/ 非线性/ 关系/ ;/ 而/ 在/ 图/ 结构/ 中/ ,/ 结点/ 间/ 则/ 为/ 多/ 前驱/ 多/ 后继/ 的/ 非线性/ 关系/ ./ 图中/ 任意/ 两个/ 结点/ 之间/ 都/ 可能/ 相关/ ,/ 因此/ 图/ 已经/ 被/ 广泛应用/ 于/ 诸如/ 语言学/ 、/ 逻辑学/ 、/ 物理/ 、/ 化学/ 、/ 电气工程/ 和/ 计算机科学/ 等/ 学科/ 中/ ./ 在/ 图论/ 中/ ,/ 最长/ 路径/ (/ thelongestpath/ )/ 问题/ [/ 1/ ]/ 是/ 指/ 在/ 给定/ 的/ 图/ 中/ 找出/ 一条/ 最长/ 的/ 简单/ 路径/ ./ 在/ 无/ 向/ 图/ 中/ 求解/ 最长/ 路径/ 问题/ 是/ 著名/ 的/ NP/ 难/ 问题/ ,/ 现有/ 的/ 研究/ 主要/ 基于/ 近似算法/ [/ 2/ ]/ 、/ 参数/ 化/ 算法/ [/ 3/ ]/ ./ 另外/ 一类/ 研究/ 是/ 针对/ 特殊/ 图/ 进行/ 求解/ ,/ 并/ 给出/ 多项式/ 时间/ 复杂度/ 的/ 求解/ 算法/ ,/ 如/ Mertzios/ 和/ Corneil/ ①/ 采用/ 一种/ 深度/ 优先/ 搜索/ 策略/ 对伴/ 相似/ 图/ (/ cocomparabilitygraphs/ )/ 中/ 最长/ 路径/ 问题/ 进行/ 了/ 求解/ ;/ Uehara/ 和/ Valiente/ [/ 4/ ]/ 在/ 二部/ 置换/ 图/ (/ bipartitepermutationgraphs/ )/ 中/ 对/ 最长/ 路径/ 问题/ 建立/ 了/ 线性/ 时间/ 复杂度/ 的/ 求解/ 算法/ ,/ 其/ 求解/ 的/ 二部/ 置换/ 图/ 既/ 是/ 一个/ 置换/ 图/ 也/ 是/ 一个/ 二部/ 图/ ;/ Ioannidou/ 等/ 人/ [/ 5/ ]/ 在/ 区间/ 图/ (/ intervalgraphs/ )/ 中/ 运用/ 动态/ 规划/ 思想/ ,/ 对/ 最长/ 路径/ 问题/ 给出/ 了/ 时间/ 复杂度/ 为/ O/ (/ n4/ )/ 的/ 求解/ 算法/ ;/ Edmonds/ 和/ Chakraborty/ [/ 6/ ]/ 在/ 有/ 向/ 无/ 环图/ (/ DirectedAcyclicGraphs/ ,/ DAGs/ )/ 所有/ 边/ 的/ 长度/ 非负/ 的/ 情况/ 下/ ,/ 对/ 最长/ 路径/ 的/ 方差/ 和/ 期望/ 的/ 边界/ 进行/ 了/ 计算/ ./ k/ -/ path/ 问题/ 是/ 指/ 在/ 给定/ 的/ 图/ 中/ 找出/ 一条/ 长度/ 为/ k/ 的/ 简单/ 路径/ ,/ 是/ 最长/ 路径/ 问题/ 的/ 一种/ 特殊/ 情况/ ./ Chen/ 等/ 人/ [/ 7/ ]/ 基于/ 分治/ 思想/ 对/ 一般/ 图中/ 的/ k/ -/ path/ 问题/ 进行/ 了/ 研究/ ,/ 提高/ 了/ 该/ 问题/ 的/ 计算速度/ ./ k/ -/ path/ 问题/ 在/ 诸多/ 领域/ 具有/ 非常/ 重要/ 的/ 应用/ ./ Scott/ 等/ 人/ [/ 8/ ]/ 在/ 生物学/ 约束/ 下/ ,/ 采用/ 彩色/ 编码/ 技术/ ,/ 在/ 酵母/ 蛋白质/ 相互作用/ 网络/ 中/ 查找/ 蛋白质/ 传导/ 路径/ ,/ 其/ 求解/ 方法/ 是/ 将/ 蛋白质/ 作为/ 结点/ ,/ 蛋白质/ 之间/ 的/ 相互作用/ 关系/ 作为/ 边/ ,/ 以此/ 构成/ 的/ 生物/ 蛋白质/ 作用/ 网络/ ,/ 权值/ 最大/ 的/ k/ -/ path/ 代表/ 信号/ 传导/ 路径/ ;/ Desaulniers/ 等/ 人/ [/ 9/ ]/ 利用/ 推广/ k/ -/ path/ 的/ 不/ 均衡性/ (/ generalizedk/ -/ pathine/ -/ qualities/ )/ 对/ k/ 个/ 车辆/ 的/ 路由/ 选择/ 问题/ 进行/ 了/ 研究/ ./ 与/ k/ -/ path/ 问题/ 相近/ 的/ 是/ 求解/ 图中/ 指定/ 两点/ 间/ 路径/ 长度/ 为/ k/ 的/ 最大/ 不/ 相交/ 路径/ 问题/ ,/ Itai/ 等/ 人/ [/ 10/ ]/ 给出/ 该/ 问题/ 的/ 判定/ 问题/ 是/ 一个/ NP/ -/ Complete/ 问题/ 的/ 证明/ ./ 求解/ 两点/ 间/ 路径/ 长度/ 为/ k/ 的/ 所有/ 简单/ 路径/ 数是/ 具有/ 长度/ 约束/ 的/ 简单/ 路径/ (/ SimplePathswithLengthConstraint/ ,/ SPLC/ )/ 问题/ ./ 本文/ 在/ 有/ 向/ 无/ 环图/ 中/ 求解/ 该/ 问题/ 形成/ 了/ SPLCinDAGs/ ./ SPLCinDAGs/ 可/ 在/ 具有/ 周期/ 间隙/ 约束/ 的/ 序列/ 模式/ 挖掘/ 和/ 具有/ 间隙/ 约束/ 的/ 模式匹配/ 等/ 方面/ 得到/ 应用/ ./ Zhang/ 等/ 人/ [/ 11/ ]/ 提出/ 了/ 具有/ 周期/ 间隙/ 约束/ 的/ 序列/ 模式/ 挖掘/ 问题/ ,/ 并/ 将/ 该/ 模式/ 挖掘/ 方法/ 应用/ 在/ DNA/ 序列/ 挖掘/ 中/ ;/ Tanbeer/ 等/ 人/ [/ 12/ ]/ 将/ 具有/ 周期/ 间隙/ 约束/ 的/ 序列/ 模式/ 挖掘/ 方法/ 应用/ 于/ 购买/ 模式/ 的/ 挖掘/ ./ 尽管/ Zhang/ 等/ 人/ 采用/ 了/ 空间/ 变换/ 的/ 方法/ 进行/ 序列/ 模式/ 挖掘/ ,/ 但是/ 此/ 方法/ 的/ 基础/ 是/ 具有/ 间隙/ 约束/ 的/ 模式匹配/ 问题/ [/ 13/ ]/ ./ 文献/ [/ 14/ ]/ 研究/ 了/ 具有/ 间隙/ 约束/ 和/ 一次性/ 条件/ 的/ 模式匹配/ 问题/ 的/ 求解/ 方法/ ,/ 给出/ 了/ 将/ 具有/ 间隙/ 约束/ 的/ 模式匹配/ 问题/ 转换/ 为/ 有/ 向/ 无/ 环图/ 的/ 算法/ ,/ 这/ 使得/ 具有/ 间隙/ 约束/ 的/ 模式匹配/ 问题/ 与/ SPLCinDAGs/ 问题/ 建立/ 了/ 实质性/ 联系/ ./ 为了/ 解决/ SPLCinDAGs/ 问题/ ,/ 本文/ 利用/ 网树/ 数据结构/ (/ 简称/ 网树/ ,/ Nettree/ )/ [/ 13/ ,/ 15/ ]/ 进行/ 求解/ ./ 网树/ 是/ 一种/ 多/ 前驱/ 多/ 后继/ 的/ 非线性/ 数据结构/ ,/ 是/ 对/ 树结构/ 的/ 拓展/ ./ 网树/ 不仅/ 具有/ 树结构/ 的/ 所有/ 概念/ ,/ 如根/ 结点/ 、/ 叶子/ 结点/ 、/ 双亲/ 、/ 孩子/ 、/ 路径/ 、/ 层/ 等/ ,/ 而且/ 除根/ 结点/ 外/ ,/ 网树中/ 任意/ 结点/ 可以/ 有/ 多个/ 双亲/ 结点/ ./ 本文/ 提出/ 了/ 网树/ 求解/ 有/ 向/ 无/ 环图/ 中/ 具有/ 长度/ 约束/ 的/ 简单/ 路径/ 算法/ (/ NettreeforSimplePathswithLengthCon/ -/ straintinDAGs/ ,/ NSPLCDAG/ )/ ,/ NSPLCDAG/ 算法/ 将/ 该/ 问题/ 转化/ 为/ 一棵/ 网树/ ,/ 然后/ 利用/ 网树/ 的/ 树根/ 路径/ 数/ 这/ 一/ 特殊/ 性质/ 对/ 该/ 问题/ 进行/ 求解/ ./ NSPLCDAG/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 分别/ 为/ O/ (/ m/ ×/ n/ ×/ t/ )/ 和/ O/ (/ n/ +/ |/ E/ |/ )/ ,/ 这里/ m/ ,/ t/ ,/ n/ 和/ |/ E/ |/ 分别/ 表示/ 两点/ 间/ 的/ 路径/ 长度/ 约束/ 、/ 顶点/ 最大/ 出/ 度/ 以及/ 顶点/ 数和边/ 数/ ./ 对/ NSPLCDAG/ 算法/ 做/ 进一步/ 改造/ ,/ 可以/ 形成/ 求解/ 最长/ 路径/ 问题/ 的/ 算法/ (/ NettreefortheLongestPathinDAGs/ ,/ NLPDAG/ )/ ./ 对/ NLPDAG/ 算法/ 做/ 进一步/ 改进/ 形成/ 改进/ 的/ NLPDAG/ 算法/ ,/ 该/ 算法/ 使得/ 网树/ 退化/ 为/ 一棵树/ ,/ 并/ 使/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 分别/ 为/ O/ (/ |/ E/ |/ )/ 和/ O/ (/ n/ +/ |/ E/ |/ )/ ,/ 这里/ n/ 和/ |/ E/ |/ 分别/ 表示/ 图/ 的/ 顶点/ 数和边/ 数/ ./ 本文/ 第/ 2/ 节对/ SPLCinDAGs/ 问题/ 进行/ 定义/ ;/ 第/ 3/ 节/ 介绍/ 网树/ 的/ 概念/ 和/ 性质/ ;/ 第/ 4/ 节/ 提出/ NSPL/ -/ CDAG/ 算法/ ,/ 同时/ 分析/ 该/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ ,/ 并/ 通过/ 示例/ 来/ 说明/ 算法/ 的/ 工作/ 原理/ ;/ 第/ 5/ 节/ 提出/ NLPDAG/ 算法/ 和/ 改进/ 的/ NLPDAG/ 算法/ 并/ 给出/ 求解/ 示例/ ;/ 第/ 6/ 节/ 给出/ 实验/ 结果/ 及/ 分析/ ;/ 第/ 7/ 节得/ ①/ MertziosG/ ,/ CorneilD/ ./ AsimplepolynomialalgorithmforPage3/ 出/ 本文/ 结论/ ./ 2/ 问题/ 的/ 定义/ 定义/ 1/ ./ 图/ G/ =/ (/ V/ ,/ E/ )/ ,/ 其中/ V/ 称为/ 顶点/ 集/ ,/ E/ 称为/ 边集/ ./ 从/ 顶点/ v/ 到/ 顶点/ v/ 的/ 路径/ 是/ 一个/ 有序/ 顶点/ 序列/ S/ =/ {/ v/ =/ v0/ ,/ v1/ ,/ …/ ,/ vm/ =/ v/ }/ ,/ 其中/ 顶点/ 序列/ 应/ 满足/ 〈/ vj/ -/ 1/ ,/ vj/ 〉/ ∈/ E/ (/ 1/ / j/ / m/ )/ ./ 路径/ 长度/ 是/ 路径/ 中有/ 向/ 边/ 的/ 数目/ ./ 如果/ 序列/ S/ 中/ 任何/ 两个/ 顶点/ 不/ 重复/ 出现/ ,/ 则/ 称此/ 路径/ 为/ 简单/ 路径/ ./ 定义/ 2/ ./ 具有/ 长度/ 约束/ 的/ 简单/ 路径/ SPLC/ 问题/ 是/ 指/ 给定/ 图/ G/ =/ (/ V/ ,/ E/ )/ 中/ 任意/ 两点/ u/ ,/ v/ ∈/ V/ 和/ 正整数/ m/ ,/ 求解/ 从/ u/ 到/ v/ 路径/ 长度/ 为/ m/ 的/ 简单/ 路径/ 数/ ./ SPLCinDAGs/ 是/ 指/ 在/ 给定/ 的/ 有/ 向/ 无/ 环图/ 中/ 求解/ SPLC/ 问题/ ./ 定义/ 3/ ./ 邻接矩阵/ 是/ 表示/ 顶点/ 之间/ 相邻/ 关系/ 的/ 矩阵/ ,/ 图/ G/ 采用/ 邻接矩阵/ 存储/ ./ 二维/ 数组/ 元素/ g/ [/ i/ ]/ [/ j/ ]/ =/ 1/ (/ 1/ / i/ ,/ j/ / n/ ,/ n/ =/ |/ V/ |/ )/ 表示/ 顶点/ i/ 到/ 顶点/ j/ 之间/ 存在/ 一条/ 有/ 向/ 边/ ,/ 否则/ 表示/ 顶点/ i/ 到/ 顶点/ j/ 之间/ 无边/ ./ 顶点/ vi/ 的/ 出度/ (/ 用/ OD/ (/ vi/ )/ 表示/ )/ 是/ 第/ i/ 行/ 的/ 元素/ 之/ 和/ ,/ 计算公式/ 如下/ :/ 顶点/ vi/ 的/ 入度/ (/ 用/ ID/ (/ vi/ )/ 表示/ )/ 是/ 第/ i/ 列/ 的/ 元素/ 之/ 和/ ,/ 计算公式/ 如下/ :/ 例/ 1/ ./ 如图/ 1/ 所示/ 的/ 有/ 向/ 无/ 环图/ ,/ 其/ 顶点/ 个数/ n/ =/ 9/ ,/ 求/ 从/ 顶点/ 1/ 至/ 顶点/ 7/ 路径/ 长度/ 约束/ m/ =/ 4/ 的/ 简单/ 路径/ 数/ ./ 从图/ 1/ 可以/ 看出/ ,/ 顶点/ 1/ 至/ 顶点/ 7/ 路径/ 长度/ 约束/ 为/ 4/ 的/ 路径/ 数为/ 10/ ,/ 即/ {/ 1/ ,/ 2/ ,/ 4/ ,/ 3/ ,/ 7/ }/ 、/ {/ 1/ ,/ 2/ ,/ 3/ ,/ 6/ ,/ 7/ }/ 、/ {/ 1/ ,/ 4/ ,/ 3/ ,/ 6/ ,/ 7/ }/ 、/ {/ 1/ ,/ 2/ ,/ 5/ ,/ 8/ ,/ 7/ }/ 、/ {/ 1/ ,/ 4/ ,/ 5/ ,/ 8/ ,/ 7/ }/ 、/ {/ 1/ ,/ 4/ ,/ 9/ ,/ 8/ ,/ 7/ }/ 、/ {/ 1/ ,/ 5/ ,/ 9/ ,/ 8/ ,/ 7/ }/ 、/ {/ 1/ ,/ 2/ ,/ 4/ ,/ 9/ ,/ 7/ }/ 、/ {/ 1/ ,/ 2/ ,/ 5/ ,/ 9/ ,/ 7/ }/ 和/ {/ 1/ ,/ 4/ ,/ 5/ ,/ 9/ ,/ 7/ }/ ./ SPLCinDAGs/ 问题/ 的/ 求解/ 难度/ 在于/ ,/ 顶点/ u/ 和/ v/ 之间/ 的/ 路径/ 数/ 呈现/ 指数/ 形式/ ,/ 因此/ 不能/ 采用/ 穷举法/ 列出/ 所有/ 可能/ 的/ 路径/ 并/ 判定/ 路径/ 长度/ 是否/ 满足/ 约束条件/ 来/ 进行/ 求解/ ,/ 本文/ 采用/ 网树/ 这/ 一/ 数据结构/ 进行/ 求解/ ./ 3/ 网树/ 的/ 定义/ 及/ 性质/ 本/ 节/ 给出/ 了/ 网树/ 的/ 定义/ 和/ 性质/ ./ 定义/ 4/ ./ 网树/ 数据结构/ 是/ 结点/ 的/ 集合/ ,/ 这个/ 集合/ 可以/ 为/ 空集/ ,/ 或/ 可/ 由/ 若干/ 不同/ 的/ 根/ 结点/ r1/ ,/ r2/ ,/ …/ ,/ rm/ 和/ 0/ 或/ 多个/ 非/ 空子/ 网树/ T1/ ,/ T2/ ,/ …/ ,/ Tn/ 构成/ ,/ 这些/ 子网/ 树/ 的/ 树根/ 至少/ 存在/ 一条/ 边/ 与/ 网树/ 的/ 根/ 结点/ ri/ 相连接/ ,/ 这里/ 1/ / m/ ,/ 1/ / n/ 且/ 1/ / i/ / n/ ./ 图/ 2/ 给出/ 了/ 一棵/ 一般/ 意义/ 的/ 网树/ ./ 网树/ 具有/ 如下/ 5/ 个/ 性质/ [/ 13/ ,/ 15/ ]/ :/ (/ 1/ )/ 网树/ 是/ 树结构/ 的/ 拓展/ ,/ 它/ 具有/ 很多/ 与/ 树/ 相似/ 的/ 概念/ ,/ 如根/ 结点/ 、/ 叶子/ 结点/ 、/ 层/ 、/ 双亲/ 、/ 孩子/ 等/ ;/ (/ 2/ )/ 一棵/ 网树/ 可以/ 有/ n/ 个根/ 结点/ ,/ 其中/ n/ / 1/ ;/ (/ 3/ )/ 除了/ 根/ 结点/ 之外/ ,/ 网树/ 的/ 其它/ 结点/ 可以/ 有/ (/ 4/ )/ 从/ 一个/ 结点/ 到达/ 网树/ 的/ 一个/ 根/ 结点/ 的/ 路径/ (/ 5/ )/ 同一/ 结点/ 可以/ 在/ 网树/ 的/ 不同/ 层上/ 多次/ 出现/ ./ 定义/ 5/ ./ 由于/ 同一/ 结点/ 可以/ 在/ 网树/ 的/ 不同/ 层/ 多个/ 双亲/ 结点/ ;/ 不/ 唯一/ ;/ 上/ 多次/ 出现/ ,/ 这里/ 用/ ni/ 定义/ 6/ ./ 从/ 结点/ ni/ 根/ 路径/ 数/ (/ thenumberofrootpaths/ )/ ,/ 用/ Nr/ (/ ni/ 表示/ ./ 树根/ 路径/ 数/ 具有/ 如下/ 2/ 个/ 性质/ :/ (/ 1/ )/ 根/ 结点/ ni1/ 的/ 树根/ 路径/ 数为/ 1/ ,/ 即/ Nr/ (/ ni1/ )/ =/ 1/ ;/ (/ 2/ )/ 结点/ ni/ 树根/ 路径/ 数/ 之/ 和/ ,/ 即/ Page4/ 这里/ nik/ 亲数/ ./ j/ -/ 1/ 是/ 结点/ ni/ 图/ 3/ 给出/ 了/ 一棵/ 网树/ ./ 在/ 这棵/ 网树中/ 一些/ 结点/ 在/ 不同/ 层中/ 多次/ 出现/ ./ 如/ 结点/ 3/ 既/ 出现/ 在/ 第/ 2/ 层/ 又/ 出现/ 在/ 第/ 3/ 层/ ,/ 本文/ 采用/ n32/ 和/ n33/ 来/ 分别/ 描述/ 第/ 2/ 层/ 和/ 第/ 3/ 层/ 的/ 结点/ 3/ ./ 结点/ n11/ 和/ n21/ 是/ 网树/ 的/ 两个/ 根/ 结点/ ;/ n63/ ,/ n53/ 和/ n33/ 是/ 网树/ 的/ 3/ 个/ 叶子/ 结点/ ./ 结点/ n63/ 有/ 两个/ 双亲/ 结点/ ,/ 分别/ 是/ n22/ 和/ n32/ ./ 结点/ n32/ 的/ 树根/ 路径/ 数/ Nr/ (/ n32/ )/ =/ 2/ 是因为/ 结点/ n32/ 有/ 两个/ 双亲/ 结点/ n11/ 和/ n21/ 且/ Nr/ (/ n11/ )/ =/ Nr/ (/ n21/ )/ =/ 1/ ;/ 同理可知/ ,/ Nr/ (/ n22/ )/ =/ 1/ ;/ Nr/ (/ n63/ )/ =/ Nr/ (/ n22/ )/ +/ Nr/ (/ n32/ )/ =/ 3/ ./ 网树/ 的/ 另/ 一/ 特征/ 是从/ 一个/ 结点/ 到达/ 网树/ 的/ 一个/ 根/ 结点/ 的/ 路径/ 可能/ 不/ 唯一/ ./ 如/ 叶子/ 结点/ n63/ 访问/ 根/ 结点/ n11/ 有/ 两条/ 不同/ 的/ 路径/ ,/ 分别/ 为/ {/ n63/ ,/ n32/ ,/ n11/ }/ 和/ {/ n63/ ,/ n22/ ,/ n11/ }/ ./ 4NSPLCDAG/ 算法/ 描述/ 及/ 复杂度/ 分析/ 4.1/ 算法/ 描述/ 采用/ NSPLCDAG/ 算法/ 求解/ 图/ G/ 中/ u/ ,/ v/ 两点/ 间/ 长度/ 为/ m/ 的/ 简单/ 路径/ 数/ 问题/ 的/ 基本/ 思想/ 为/ :/ 将/ 有/ 向/ 无/ 环图/ G/ 转化/ 为/ 一棵/ m/ +/ 1/ 层/ 网树/ ,/ 然后/ 利用/ 网树/ 的/ 树根/ 路径/ 数/ 这/ 一/ 性质/ 进行/ 求解/ ./ 在/ 转化/ 过程/ 中/ ,/ 图/ G/ 的/ 顶点/ 编号/ i/ 即为/ 网树/ 结点/ 名称/ i/ ,/ 网树/ 采用/ 从/ 树根/ 层至/ m/ +/ 1/ 层/ 逐层/ 创建/ 的/ 方式/ ./ 将/ 图/ G/ 转化/ 为/ 一棵/ 网树及/ 求解/ 的/ 流程/ 如下/ :/ 首先/ ,/ 将/ 顶点/ u/ 作为/ 网树/ 的/ 根/ 结点/ nu1/ ,/ 该/ 结点/ 为/ 网树/ 的/ 第/ 1/ 层且/ 其/ 树根/ 路径/ 数/ Nr/ (/ nu1/ )/ =/ 1/ ./ 其次/ ,/ 依据/ 网树/ 第/ j/ -/ 1/ 层/ 结点/ 创建/ 网树/ 第/ j/ 层/ 结点/ ./ 具体方法/ 是/ :/ 取网/ 树/ 的/ 第/ j/ -/ 1/ 层/ 结点/ ni/ 果/ g/ [/ i/ ]/ [/ l/ ]/ =/ 1/ (/ 1/ / l/ / n/ )/ 且/ 在/ 第/ j/ 层/ 未/ 创建/ 结点/ nl/ 则/ 在/ 网树/ 的/ 第/ j/ 层/ 创建/ 结点/ nlj/ 间/ 建立/ 父子关系/ ,/ 并/ 使得/ nlnlj/ -/ 1/ 的/ 树根/ 路径/ 数/ 一致/ ;/ 若/ g/ [/ i/ ]/ [/ l/ ]/ =/ 1/ (/ 1/ / l/ / n/ )/ 且/ ni/ 在/ 第/ j/ 层/ 已/ 创建/ 结点/ nl/ 建立/ 父子关系/ ,/ 并/ 使/ nlj/ -/ 1/ 的/ 树根/ 路径/ 数/ ./ ni/ 最后/ ,/ 该/ 网树/ 第/ m/ 层中/ 与/ 顶点/ v/ 相连接/ 的/ 结点/ 的/ 树根/ 路径/ 数/ 之/ 和/ 即/ 为/ 问题/ 的/ 解/ ./ NSPLCDAG/ 算法/ 的/ 描述/ 如下/ :/ 算法/ 1/ ./ NSPLCDAG/ 算法/ ./ 输入/ :/ 有/ 向/ 无/ 环图/ 的/ 顶点/ 数/ n/ ,/ 有/ 向/ 无/ 环图/ 的/ 邻接矩阵/ ,/ 输出/ :/ 路径/ 数/ pathnum1/ ./ 读取/ 存储/ 图/ 的/ 二维/ 数组/ g/ [/ i/ ]/ [/ j/ ]/ (/ 1/ / i/ ,/ j/ / n/ )/ ;/ 2/ ./ 依据/ 顶点/ u/ 初始化/ 网树/ 的/ 根/ 结点/ ;/ 3/ ./ FOR/ (/ j/ =/ 2/ ;/ j/ </ =/ m/ ;/ j/ ++/ )/ 4/ ./ FOR/ (/ a/ =/ 0/ ;/ a/ </ 网树/ 第/ j/ -/ 1/ 层/ 结点/ 数/ ;/ a/ ++/ )/ 5/ ./ i/ =/ 网树/ 第/ j/ -/ 1/ 层/ 第/ a/ +/ 1/ 个/ 结点/ 的/ 名称/ ;/ 6/ ./ FOR/ (/ b/ =/ 0/ ;/ b/ </ OD/ (/ Vi/ )/ ;/ b/ ++/ )/ 7/ ./ l/ =/ 顶点/ i/ 的/ 第/ b/ +/ 1/ 个/ 弧/ 的/ 弧尾/ 顶点/ ;/ 8/ ./ IF/ (/ nl9/ ./ 创建/ nl10/ ./ ELSE11/ ./ Nr/ (/ nl12/ ./ ENDIF13/ ./ ENDFOR14/ ./ ENDFOR15/ ./ ENDFOR16/ ./ FOR/ (/ d/ =/ 0/ ;/ d/ </ 网树/ 第/ m/ 层/ 结点/ 数/ ;/ d/ ++/ )/ 17/ ./ IF/ (/ g/ [/ d/ ]/ [/ v/ ]/ =/ =/ 1/ )/ pathnum/ +/ =/ Nr/ (/ ndm/ )/ ;/ 18/ ./ ENDFOR19/ ./ RETURNpathnum/ ;/ 4.2/ NSPLCDAG/ 算法/ 复杂度/ 分析/ NSPLCDAG/ 算法/ 的/ 空间/ 复杂度/ 是/ O/ (/ m/ ×/ n/ ×/ t/ +/ n2/ )/ 且/ 可/ 进一步/ 优化/ 为/ O/ (/ n/ +/ |/ E/ |/ )/ ,/ 这里/ m/ ,/ t/ ,/ n/ 和/ |/ E/ |/ 分别/ 表示/ 两点/ 间/ 的/ 路径/ 长度/ 约束/ 、/ 顶点/ 最大/ 出/ 度/ 、/ 顶点/ 数和边/ 数/ ./ NSPLCDAG/ 算法/ 占用/ 的/ 空间/ 是/ 由/ 网树/ 和/ 图/ G/ 的/ 邻接矩阵/ 两/ 部分/ 组成/ 的/ ./ 第/ 1/ 部分/ 网树/ 的/ 开销/ 为/ O/ (/ m/ ×/ n/ ×/ t/ )/ ,/ 这/ 是因为/ 网树/ 的/ 深度/ 是/ m/ ,/ 网树中/ 每层/ 最多/ 有/ n/ 个/ 结点/ ,/ 且/ 每个/ 结点/ 最多/ 有/ t/ 个/ 孩子/ ./ 对/ NSPLCDAG/ 算法/ 可以/ 做/ 进一步/ 改进/ ,/ 使/ 网树/ 的/ 空间/ 开销/ 为/ O/ (/ n/ )/ ,/ 其/ 改进/ 方法/ 如下/ :/ 由于/ NSPLCDAG/ 算法/ 仅/ 依据/ 网树/ 中上/ 一层/ 结点/ 信息/ 来/ 创建/ 下/ 一层/ 结点/ ,/ 因此/ 在/ 存储/ 网树/ 的/ 过程/ 中仅/ 保留/ 一层/ 网树/ 结点/ 即可/ ./ 此外/ ,/ 在/ 解决/ SPLCinDAGs/ 问题/ 时/ ,/ 可以/ 不必/ 存储/ 网树/ 的/ 父子关系/ ,/ 而仅/ 计算/ 当前/ 结点/ 的/ 树根/ 路径/ 数/ ,/ 这样/ 网树/ 的/ 开销/ 可以/ 缩减/ 为/ O/ (/ n/ )/ ./ 第/ 2/ 部分/ 存储/ 图/ G/ 邻接矩阵/ 的/ 开销/ 为/ O/ (/ n2/ )/ ,/ 也/ 可以/ 将/ 图/ G/ 存储/ 为/ 三元组/ 形式/ ,/ 其/ 开销/ 为/ O/ (/ |/ E/ |/ )/ ,/ 因此/ NSPLCDAG/ 算法/ 优化/ 后/ 的/ 空间/ 复杂度/ 为/ O/ (/ n/ +/ |/ E/ |/ )/ ./ NSPLCDAG/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ m/ ×/ n/ ×/ t/ )/ ./ Page5/ 这/ 是因为/ 算法/ 的/ 第/ 3/ 行/ 循环/ 次数/ 为/ O/ (/ m/ )/ ,/ 第/ 4/ 行/ 的/ 最坏/ 循环/ 次数/ 为/ O/ (/ n/ )/ ,/ 第/ 6/ 行/ 的/ 最坏/ 循环/ 次数/ 为/ O/ (/ t/ )/ ,/ 算法/ 的/ 第/ 5/ ,/ 7/ ,/ 9/ 和/ 11/ 行均/ 在/ O/ (/ 1/ )/ 时间/ 内/ 即可/ 完成/ ,/ 算法/ 的/ 第/ 16/ ~/ 18/ 行/ 的/ 最坏/ 时间/ 复杂度/ 为/ O/ (/ n/ )/ ./ 综上/ ,/ NSPLCDAG/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ m/ ×/ n/ ×/ t/ )/ ./ 4.3/ NSPLCDAG/ 算法/ 运行/ 实例/ 以例/ 1/ 为/ 例来/ 说明/ NSPLCDAG/ 算法/ 的/ 工作/ 原理/ ./ 根据/ NSPLCDAG/ 算法/ 的/ 思想/ ,/ 将例/ 1/ 中/ 的/ 有/ 向/ 无/ 环图/ 转化/ 为/ 一棵/ 5/ 层/ 网树/ ,/ 所/ 建立/ 网树/ 如图/ 4/ 所示/ ./ 在/ 图/ 4/ 中/ 箭头/ 方向/ 代表/ 网树/ 的/ 创建/ 方向/ ,/ 白色/ 圆圈/ 内/ 数字/ 代表/ 网树/ 结点/ 名称/ ,/ 灰色/ 圆圈/ 内/ 数字/ 代表/ 该/ 结点/ 的/ 树根/ 路径/ 数/ ./ 网树/ 的/ 创建/ 和/ 问题/ 的/ 求解/ 过程/ 如下/ :/ 图/ 4/ 求解/ 图/ 1/ 中/ 从/ 顶点/ 1/ 至/ 顶点/ 7/ 路径/ 长度/ 约束/ 为/ 4/ 的/ 网树/ 将/ 顶点/ 1/ 作为/ 网树/ 的/ 根/ 结点/ n11/ ,/ 树根/ 路径/ 数/ Nr/ (/ n11/ )/ =/ 1/ ./ 将/ 满足/ g/ [/ 1/ ]/ [/ l/ ]/ =/ 1/ (/ 1/ / l/ / n/ )/ 条件/ 的/ 所有/ 顶点/ 创建/ 为/ 网树/ 第/ 2/ 层/ 结点/ nl2/ ,/ 因此/ 网树/ 的/ 第/ 2/ 层/ 结点/ 分别/ 是/ n22/ ,/ n32/ ,/ n42/ 和/ n52/ ,/ 且/ 这些/ 结点/ 的/ 树根/ 路径/ 数均/ 为/ 1/ ./ 之后/ ,/ 对/ 结点/ n22/ 创建/ 孩子/ 结点/ ,/ 创建/ 依据/ 为/ g/ [/ 2/ ]/ [/ l/ ]/ =/ 1/ (/ 1/ / l/ / n/ )/ ,/ 这样/ 可以/ 创建/ 第/ 3/ 层/ 的/ 结点/ n33/ ,/ n43/ ,/ n53/ 和/ n63/ ,/ 且/ 这些/ 结点/ 的/ 树根/ 路径/ 数均/ 为/ 1/ ./ 依据/ g/ [/ 3/ ]/ [/ l/ ]/ =/ 1/ (/ 1/ / l/ / n/ )/ 对/ 结点/ n32/ 创建/ 孩子/ 结点/ ,/ 易知/ 结点/ n32/ 有/ 两个/ 孩子/ 结点/ ,/ 分别/ 为/ n63/ 和/ n73/ ,/ 此时/ n63/ 的/ 树根/ 路径/ 数为/ 2/ ./ 以此类推/ 可以/ 建立/ 网树/ 第/ 3/ 层/ 和/ 第/ 4/ 层/ 全部/ 结点/ ./ 由于/ 路径/ 长度/ 约束/ 为/ 4/ ,/ 因此/ 根据/ 第/ 4/ 层/ 结点/ 与/ 顶点/ 7/ 的/ 连接/ 情况/ ,/ 即/ g/ [/ l/ ]/ [/ 7/ ]/ =/ 1/ (/ 1/ / l/ / n/ )/ 来/ 建立/ 父子关系/ ,/ 并/ 求得/ 问题/ 的/ 解为/ 1/ +/ 2/ +/ 4/ +/ 3/ =/ 10.5/ 网树/ 求解/ 最长/ 路径/ 问题/ 求解/ 最长/ 路径/ 问题/ 是/ 图论/ 中/ 经典/ 问题/ 之一/ ,/ 其/ 是/ 指/ 在/ 给定/ 的/ 图/ G/ 中/ 找到/ 路径/ 长度/ 最长/ 的/ 一条/ 简单/ 路径/ ./ 将/ NSPLCDAG/ 算法/ 中/ 根据/ 顶点/ u/ 创建/ 网树/ 的/ 根/ 结点/ 变为/ 依据/ 图/ G/ 中/ 所有/ 入度/ 为/ 0/ 的/ 顶点/ 来/ 创建/ 网树/ 的/ 根/ 结点/ ,/ 同时/ 将/ 创建/ 网树/ 深度/ 为/ 指定/ 的/ 长度/ 约束/ 变为/ 网树/ 不再/ 有/ 新/ 的/ 结点/ 产生/ ,/ 即可/ 对/ 最长/ 路径/ 问题/ 进行/ 求解/ ,/ 形成/ 网树/ 求解/ 最长/ 路径/ 问题/ 的/ 算法/ (/ NettreefortheLongestPathinDAGs/ ,/ NLPDAG/ )/ ./ NLPDAG/ 算法/ 从/ 网树/ 最深/ 的/ 一个/ 叶子/ 结点/ 回溯/ 至网/ 树根/ 结点/ 以/ 产生/ 一条/ 最长/ 路径/ ,/ 故/ NLPDAG/ 算法/ 需要/ 对/ NSPLCDAG/ 算法/ 的/ 第/ 2/ ~/ 3/ 行/ 和/ 第/ 16/ ~/ 19/ 行/ 进行/ 修改/ ,/ 其余/ 各行/ 均/ 保持/ 不变/ ,/ 具体/ 修改/ 如下/ :/ 算法/ 2/ ./ NLPDAG/ 算法/ ./ 输入/ :/ 有/ 向/ 无/ 环图/ 的/ 邻接矩阵/ 输出/ :/ 最长/ 路径/ pathNLPDAG/ 算法/ 的/ 第/ 2/ ~/ 3/ 行/ :/ 2/ ./ 依据/ 图/ G/ 中/ 所有/ 入度/ 为/ 0/ 的/ 顶点/ 来/ 创建/ 网树/ 的/ 根/ 结点/ ;/ 3/ ./ FOR/ (/ j/ =/ 2/ ;/ 第/ j/ -/ 1/ 层/ 结点/ 个数/ >/ 0/ ;/ j/ ++/ )/ NLPDAG/ 算法/ 的/ 第/ 16/ ~/ 19/ 行/ :/ 16/ ./ K/ =/ j/ -/ 2/ ;/ 17/ ./ path/ [/ K/ ]/ =/ 第/ j/ -/ 1/ 层/ 的/ 第/ 1/ 个/ 结点/ 名/ ;/ 18/ ./ 由/ path/ [/ K/ ]/ 回溯/ 至根/ 结点/ 形成/ 最长/ 路径/ path/ ;/ 19/ ./ RETURNpath/ ;/ 由于/ NLPDAG/ 算法/ 必须/ 由/ 最/ 深层/ 叶子/ 结点/ 回溯/ 至网/ 树根/ 结点/ ,/ 因此/ NLPDAG/ 算法/ 不能/ 在/ 求解/ 过程/ 中/ 删除/ 任何/ 网树/ 结点/ 且/ 必须/ 存储/ 网树/ 结点/ 的/ 父子关系/ ,/ 由/ NSPLCDAG/ 算法/ 的/ 空间/ 复杂度/ 和/ 时间/ 复杂度/ 分析/ 可知/ ,/ NLPDAG/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 分别/ 为/ O/ (/ K/ ×/ n/ ×/ t/ )/ 和/ O/ (/ K/ ×/ n/ ×/ t/ +/ |/ E/ |/ )/ ,/ 这里/ K/ ,/ t/ ,/ n/ 和/ |/ E/ |/ 分别/ 表示/ 图中/ 最长/ 路径/ 长度/ 、/ 顶点/ 最大/ 出/ 度/ 、/ 顶点/ 数和边/ 数/ ./ 由于/ NLPDAG/ 算法/ 是/ 由/ NSPLCDAG/ 算法/ 改进/ 而/ 来/ ,/ 因此/ NLPDAG/ 算法/ 不但/ 可以/ 找到/ 一条/ 最长/ 路径/ ,/ 同时/ 根据/ 所/ 建立/ 的/ 网树/ 可以/ 描述/ 所有/ 最长/ 路径/ ./ 以图/ 1/ 为/ 例来/ 说明/ 最长/ 路径/ 是/ 如何/ 获得/ 的/ ./ 由于/ 图/ 1/ 中入度/ 为/ 0/ 的/ 顶点/ 只有/ 顶点/ 1/ ,/ 因此/ 以/ 顶点/ 1/ 为/ 网树/ 的/ 根/ 结点/ 来/ 创建/ 网树/ ,/ 网树/ 的/ 前/ 4/ 层/ 与/ 图/ 4/ 一致/ ,/ 依据/ 第/ 4/ 层/ 结点/ 创建/ 第/ 5/ 层/ 结点/ n65/ ,/ n75/ ,/ n85/ 和/ n95/ ,/ 依据/ 第/ 5/ 层/ 结点/ 创建/ 第/ 6/ 层/ 结点/ n76/ 和/ n86/ ,/ 依据/ 第/ 6/ 层/ 结点/ 仅/ 能够/ 创建/ 第/ 7/ 层/ 结点/ n77/ ,/ 由于/ 顶点/ 7/ 的/ 出度/ 为/ 0/ ,/ 因此/ 第/ 8/ 层/ 结点/ 个数/ 为/ 0/ ,/ 循环/ 结束/ ,/ 所/ 创建/ 的/ 网树/ 如图/ 5/ 所示/ ,/ 故图/ 1/ 的/ 最长/ 路径/ 长度/ 为/ 6/ ,/ 且/ 最长/ 路径/ 的/ 最终/ 顶点/ 为/ 7/ ./ 结点/ n77/ 的/ 第/ 1/ 个/ 双亲/ 结点/ 为/ n86/ ;/ 以此类推/ ,/ 回溯/ 至/ 第/ 1/ 层/ ,/ 就/ 可以/ 得到/ Page6/ 一条/ 最长/ 路径/ :/ {/ 1/ ,/ 2/ ,/ 4/ ,/ 5/ ,/ 9/ ,/ 8/ ,/ 7/ }/ ./ 从图/ 5/ 可以/ 看出/ ,/ 从/ 顶点/ 1/ 至/ 顶点/ 7/ 最长/ 的/ 路径/ 只有/ 一条/ ,/ 但/ 在/ 实际/ 问题/ 中/ ,/ 通常/ 最长/ 路径/ 并/ 不/ 唯一/ ./ 如果/ 仅/ 需/ 在/ 有/ 向/ 无/ 环图/ 中/ 找到/ 一条/ 最长/ 路径/ ,/ 而/ 无需/ 计算/ 最长/ 路径/ 的/ 路径/ 数/ ,/ 则/ 可以/ 对/ NLPDAG/ 算法/ 进行/ 改进/ ./ NLPDAG/ 算法/ 在/ 有/ 向/ 无/ 环图/ 中/ 求解/ 最长/ 路径/ 时/ ,/ 对/ 很多/ 冗余/ 信息/ 进行/ 了/ 计算/ ,/ 这/ 是因为/ NLPDAG/ 算法/ 将/ 顶点/ i/ 所/ 指向/ 的/ 所有/ 顶点/ 均/ 作为/ 网树中/ 结点/ i/ 的/ 孩子/ 结点/ ./ 在/ 求解/ 最长/ 路径/ 时/ ,/ 应仅/ 选择/ 满足/ 删除/ 有/ 向/ 边/ 〈/ i/ ,/ j/ 〉/ 后/ ,/ 顶点/ j/ 的/ 入度/ 为/ 0/ 的/ 点/ 作为/ 网树中/ 顶点/ i/ 的/ 孩子/ 结点/ ,/ 从而/ 形成/ 改进/ 的/ NLPDAG/ 算法/ ./ 由于/ 此时/ 不/ 存在/ 一个/ 结点/ 具有/ 多个/ 双亲/ 的/ 情况/ ,/ 因此/ 网树/ 也/ 就/ 退化/ 为/ 一棵树/ 或/ 一个/ 森林/ (/ 我们/ 可以/ 将/ 树/ 看成/ 是/ 网树/ 的/ 特例/ )/ ./ 具体/ 算法/ 如下/ :/ 结点/ ;/ 算法/ 3/ ./ 改进/ 的/ NLPDAG/ 算法/ ./ 输入/ :/ 有/ 向/ 无/ 环图/ 的/ 邻接矩阵/ 输出/ :/ 最长/ 路径/ path1/ ./ 读取/ 存储/ 图/ 的/ 二维/ 数组/ g/ [/ i/ ]/ [/ j/ ]/ (/ 1/ / i/ ,/ j/ / n/ )/ ;/ 2/ ./ 依据/ 图/ G/ 中入度/ 为/ 0/ 的/ 所有/ 顶点/ 来/ 创建/ 网树/ 的/ 根/ 3/ ./ 依次/ 从/ 已/ 创建/ 的/ 网树/ 中取/ 一个/ 未/ 处理/ 的/ 结点/ i/ ,/ 所有/ 4/ ./ IF/ (/ id/ (/ vj/ )/ =/ =/ 0/ )/ 为/ 结点/ i/ 创建/ 孩子/ 结点/ j/ ;/ 5/ ./ 重复/ 步/ 3/ 和/ 4/ 直至/ 不再/ 有/ 新/ 的/ 结点/ 产生/ ;/ 6/ ./ 最长/ 路径/ 长度/ =/ 网树/ 的/ 最大/ 深度/ -/ 1/ ,/ 由该/ 叶子/ 结有/ 向/ 边/ 〈/ i/ ,/ j/ 〉/ 的/ 顶点/ j/ 的/ 入度/ 自减/ ;/ 点/ 回溯/ 至根/ 结点/ 以/ 获得/ 最长/ 路径/ path/ ;/ 7/ ./ RETURNpath/ ;/ 由于/ 改进/ 的/ NLPDAG/ 算法/ 对/ 有/ 向/ 无/ 环图/ 中/ 所有/ 有/ 向/ 边/ 仅/ 处理/ 一次/ ,/ 而/ 每次/ 处理/ 均/ 在/ O/ (/ 1/ )/ 内/ 完成/ ,/ 因此/ 改进/ 的/ NLPDAG/ 算法/ 时间/ 复杂度/ 为/ O/ (/ |/ E/ |/ )/ ./ 易知/ ,/ 有/ 向/ 无/ 环图/ 若/ 以/ 三元组/ 形式/ 存储/ ,/ 改进/ 的/ NLPDAG/ 算法/ 空间/ 复杂度/ 为/ O/ (/ n/ +/ |/ E/ |/ )/ ./ 按照/ 改进/ 的/ NLPDAG/ 算法/ 对图/ 1/ 进行/ 求解/ ,/ 生成/ 的/ 网树/ 如图/ 6/ 所示/ ./ 图/ 6/ 改进/ NLPDAG/ 算法/ 求解/ 最长/ 路径/ 的/ 网树/ 6/ 实验/ 结果/ 及/ 分析/ 6.1/ 实验/ 结果/ 文献/ [/ 16/ ]/ 采用/ 了/ 链式/ 队列/ 数据结构/ 对/ 有/ 向/ 无/ 环图/ 中/ 从/ u/ 到/ v/ 两点/ 间/ 全部/ 简单/ 路径/ 问题/ 进行/ 了/ 研究/ ,/ 并/ 以/ 产品/ 族/ 零部件/ 关系/ 网络/ 为例/ ,/ 对/ 实际/ 有/ 向/ 无环/ 网络/ 中/ 的/ 应用/ 加以/ 说明/ ,/ 该/ 算法/ 的/ 空间/ 复杂度/ 和/ 时间/ 复杂度/ 均/ 为/ O/ (/ n3/ )/ ./ 由于/ 该/ 算法/ 是/ 用来/ 求解/ 两点/ 间/ 全部/ 简单/ 路径/ ,/ 因此/ 亦可/ 用于/ 求解/ 本文/ 的/ SPLCinDAGs/ ,/ 该/ 算法/ 的/ 时间/ 复杂度/ 与/ 空间/ 复杂度/ 均/ 保持/ 不变/ ./ 而/ 本文/ NSPLCDAG/ 算法/ 亦可/ 用于/ 求解/ 文献/ [/ 16/ ]/ 的/ 问题/ ,/ 求解/ 的/ 方法/ 是/ 以/ 最长/ 路径/ K/ 为/ SPLCinDAGs/ 的/ 长度/ 约束/ ,/ 所/ 创建/ 的/ 网树则/ 可以/ 表示/ 文献/ [/ 16/ ]/ 中/ 问题/ 的/ 解/ ,/ 显然/ NSPLCDAG/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 也/ 没有/ 发生/ 任何/ 变化/ ./ 图/ 5/ 的/ 网树/ 可/ 描述/ 文献/ [/ 16/ ]/ 中/ 问题/ 在/ 图/ 1/ 上/ 的/ 解/ ./ 因此/ 本文/ 的/ NSPLCDAG/ 算法/ 在/ 求解/ 相同/ 问题/ 时/ ,/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 均/ 优于/ 文献/ [/ 16/ ]/ 的/ 算法/ ./ 两种/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 对/ 比如/ 表/ 1/ 所示/ ./ 文献/ [/ 16/ ]/ 算法/ O/ (/ n3/ )/ NSPLCDAG/ 算法/ O/ (/ m/ ×/ n/ ×/ t/ )/ O/ (/ n/ +/ |/ E/ |/ )/ Page7/ 对/ 最长/ 路径/ 问题/ 本文/ 给出/ 了/ NLPDAG/ 算法/ 和/ 改进/ 的/ NLPDAG/ 算法/ ,/ 这/ 两种/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 对/ 比如/ 表/ 2/ 所示/ ./ NLPDAG/ 算法/ O/ (/ K/ ×/ n/ ×/ t/ )/ O/ (/ K/ ×/ n/ ×/ t/ +/ |/ E/ |/ )/ 改进/ 的/ NLPDAG/ 算法/ O/ (/ |/ E/ |/ )/ O/ (/ n/ +/ |/ E/ |/ )/ 为了/ 获得/ 较/ 大规模/ 的/ 有/ 向/ 无/ 环图/ ,/ 我们/ 采用/ 文献/ [/ 14/ ]/ 中/ 的/ 算法/ ,/ 将/ 具有/ 间隙/ 约束/ 的/ 模式匹配/ 问题/ 转化/ 为/ 有/ 向/ 无/ 环图/ ./ 本文/ 采用/ 了/ 文献/ [/ 15/ ]/ 中/ 使用/ 的/ 前/ 4/ 种/ 模式/ 串/ P1/ ,/ P2/ ,/ P3/ 和/ P4/ 来/ 分别/ 生成/ DAG1/ 至/ DAG4/ ,/ 并且/ 忽略/ 了/ 文献/ [/ 15/ ]/ 中/ 的/ 全局/ 约束/ ./ 序列/ 串/ 采用/ 美国/ 国家/ 生物/ 计算/ 信息中心/ 公布/ 的/ 猪/ 流感/ H1N1/ 病毒/ 的/ 一种/ 候选/ DNA/ 序列/ (/ A/ // Managua/ // 2093.01/ // 2009/ (/ H1N1/ )/ )/ ①/ 中/ 的/ 第一个/ 片段/ 的/ 前/ 510/ 个字符/ ./ 在/ 增加/ 源点/ 和/ 汇点/ 后/ ,/ 使得/ DAG1/ 到/ DAG4/ 的/ 大小/ 均/ 为/ 512/ ./ 为了/ 避免/ 序列/ 串/ 对/ 问题/ 求解/ 的/ 影响/ ,/ DAG5/ 到/ DAG8/ 则/ 采用/ 文献/ [/ 15/ ]/ 中/ 的/ P2/ 模式/ ,/ 而/ 序列/ 串则/ 采用/ 前述/ DNA/ 序列/ 的/ 第/ 1/ 个/ ~/ 第/ 4/ 个/ 序列/ 片段/ 的/ 全部/ 字符/ ,/ 在/ 增加/ 源点/ 和/ 汇点/ 后/ ,/ 使得/ DAG5/ ,/ DAG6/ ,/ DAG7/ 和/ DAG8/ 的/ 大小/ 分别/ 为/ 2288/ ,/ 2301/ ,/ 2171/ 和/ 1722/ ./ 表/ 3/ 给出/ 了/ 生成/ 本文/ 8/ 个/ 有/ 向/ 无/ 环图/ 的/ 模式/ 串/ ./ 3/ ]/ t/ [/ 0/ ,/ 3/ ]/ a/ 序号/ P1a/ [/ 0/ ,/ 3/ ]/ t/ [/ 0/ ,/ 3/ ]/ a/ [/ 0/ ,/ 3/ ]/ t/ [/ 0/ ,/ 3/ ]/ a/ [/ 0/ ,/ 3/ ]/ t/ [/ 0/ ,/ 3/ ]/ a/ [/ 0/ ,/ 3/ ]/ t/ [/ 0/ ,/ 3/ ]/ a/ [/ 0/ ,/ P2g/ [/ 1/ ,/ 5/ ]/ t/ [/ 0/ ,/ 6/ ]/ a/ [/ 2/ ,/ 7/ ]/ g/ [/ 3/ ,/ 9/ ]/ t/ [/ 2/ ,/ 5/ ]/ a/ [/ 4/ ,/ 9/ ]/ g/ [/ 1/ ,/ 8/ ]/ t/ [/ 2/ ,/ 9/ ]/ aP3g/ [/ 1/ ,/ 9/ ]/ t/ [/ 1/ ,/ 9/ ]/ a/ [/ 1/ ,/ 9/ ]/ g/ [/ 1/ ,/ 9/ ]/ t/ [/ 1/ ,/ 9/ ]/ a/ [/ 1/ ,/ 9/ ]/ g/ [/ 1/ ,/ 9/ ]/ t/ [/ 1/ ,/ 9/ ]/ aP4g/ [/ 1/ ,/ 5/ ]/ t/ [/ 0/ ,/ 6/ ]/ a/ [/ 2/ ,/ 7/ ]/ g/ [/ 3/ ,/ 9/ ]/ t/ [/ 2/ ,/ 5/ ]/ a/ [/ 4/ ,/ 9/ ]/ g/ [/ 1/ ,/ 8/ ]/ t/ [/ 2/ ,/ 9/ ]/ a/ [/ 1/ ,/ 9/ ]/ g/ [/ 1/ ,/ 9/ ]/ t/ [/ 1/ ,/ 9/ ]/ g/ [/ 1/ ,/ 9/ ]/ t/ 实验/ 运行/ 的/ 软硬件/ 环境/ 为/ :/ Intel/ / Core/ / 2DuoCPUT7100/ 处理器/ 、/ 主频/ 1.80/ GHz/ 、/ 内存/ 1GB/ 、/ WindowsXP/ 操作系统/ ./ 由于/ 算法/ 的/ 运行/ 速度/ 较/ 快/ ,/ 运行/ 时间/ 较/ 短/ ,/ 为此/ 本文/ 全部/ 实验/ 均/ 采用/ 运行/ 100/ 次/ 获得/ 总/ 的/ 运行/ 时间/ ,/ 然后/ 单次/ 运行/ 时间/ 为/ 总/ 时间/ 除以/ 100/ 的/ 方法/ 以便/ 较为/ 准确/ 地/ 获得/ 算法/ 在/ 各个/ 实例/ 上/ 的/ 运行/ 时间/ ./ 为了/ 测试/ 有/ 向/ 无/ 环图/ 的/ 大小/ 对于/ 算法/ 运行/ 时间/ 的/ 影响/ ,/ 对/ DAG1/ ,/ DAG2/ ,/ DAG3/ 和/ DAG4/ 分别/ 在/ 256/ 、/ 320/ 、/ 384/ 和/ 448/ 个/ 结点/ 的/ 子/ 图/ 以及/ 原图/ 中/ 路径/ 长度/ 约束/ 分别/ 为/ 12/ ,/ 10/ ,/ 12/ 和/ 12/ 的/ 条件/ 下/ 进行/ 了/ 测试/ ,/ 并/ 与/ 文献/ [/ 16/ ]/ 算法/ 的/ 运行/ 时间/ 进行/ 了/ 对比/ ,/ 结果/ 见表/ 4/ ./ 表/ 4/ 不同/ 大小/ 有/ 向/ 无/ 环图/ 的/ 算法/ 运行/ 时间/ 对比/ 图/ 名称/ 路径/ 长度/ DAG1DAG2DAG3DAG4/ 为了/ 对比/ 算法/ 在/ 不同/ 路径/ 长度/ 约束/ 下解/ 的/ 大小/ 和/ 运行/ 时间/ 的/ 长短/ ,/ 对/ DAG1/ 和/ DAG2/ 在/ 长度/ 约束/ 分别/ 为/ 16/ ,/ 17/ ,/ 18/ ,/ 19/ ,/ 20/ 和/ 21/ 以及/ DAG3/ 和/ DAG4/ 在/ 长度/ 约束/ 分别/ 为/ 18/ ,/ 24/ ,/ 30/ ,/ 36/ ,/ 42/ 和/ 48/ 的/ 情况/ 下/ 进行/ 了/ 测试/ ,/ 结果/ 见表/ 5/ ./ 图/ 名称/ 路径/ 长度/ DAG1DAG2DAG3DAG4/ 表/ 6/ 给出/ 了/ 采用/ NLPDAG/ 算法/ 和/ 改进/ 的/ NLPDAG/ 算法/ 求得/ 的/ DAG1/ 至/ DAG8/ 的/ 最长/ 路径/ 长度/ 、/ 最长/ 路径/ 及/ 求解/ 时间/ ./ ①/ A/ // Managua/ // 2093.01/ // 2009/ (/ H1N1/ )/ 可/ 在/ http/ :/ // // www/ ./ Page8/ 图/ 名称/ NLPDAG/ 算法/ 所求/ 的/ 最长/ 路径/ 表/ 6/ 最长/ 路径/ 及/ 求解/ 时间/ DAG320/ {/ 1/ ,/ 320/ ,/ 322/ ,/ 325/ ,/ 328/ ,/ 330/ ,/ 332/ ,/ 333/ ,/ 337/ ,/ 339/ ,/ 342/ ,/ 343/ ,/ 344/ ,/ 345/ ,/ 346/ ,/ 350/ ,/ 353/ ,/ 354/ ,/ 357/ ,/ 361/ ,/ DAG1512/ }/ ①/ DAG273/ {/ 1/ ,/ 131/ ,/ 135/ ,/ 137/ ,/ 142/ ,/ 146/ ,/ 149/ ,/ 154/ ,/ 159/ ,/ 169/ ,/ 179/ ,/ …/ ,/ 470/ ,/ 475/ ,/ 484/ ,/ 488/ ,/ 493/ ,/ 498/ ,/ 508/ ,/ 512/ }/ ②/ 75/ {/ 1/ ,/ 131/ ,/ 135/ ,/ 137/ ,/ 142/ ,/ 146/ ,/ 149/ ,/ 151/ ,/ 153/ ,/ 157/ ,/ 160/ ,/ 164/ ,/ 169/ ,/ 179/ ,/ 189/ ,/ 191/ ,/ 193/ ,/ 198/ ,/ 200/ ,/ 206/ ,/ 214/ ,/ 216/ ,/ 221/ ,/ 231/ ,/ 239/ ,/ 248/ ,/ 250/ ,/ 256/ ,/ 260/ ,/ 267/ ,/ 269/ ,/ 271/ ,/ 273/ ,/ 277/ ,/ 283/ ,/ 288/ ,/ 290/ ,/ 294/ ,/ 296/ ,/ 299/ ,/ 303/ ,/ 307/ ,/ 313/ ,/ 321/ ,/ 327/ ,/ 330/ ,/ 340/ ,/ 342/ ,/ 349/ ,/ 359/ ,/ 366/ ,/ 369/ ,/ 372/ ,/ 382/ ,/ 386/ ,/ 392/ ,/ 397/ ,/ 402/ ,/ 408/ ,/ 412/ ,/ 414/ ,/ 416/ ,/ 418/ ,/ 420/ ,/ 426/ ,/ 435/ ,/ 440/ ,/ 450/ ,/ 460/ ,/ 470/ ,/ 475/ ,/ 484/ ,/ 488/ ,/ 493/ ,/ 498/ ,/ 512/ }/ ③/ 78/ {/ 1/ ,/ 131/ ,/ 135/ ,/ 137/ ,/ 142/ ,/ 146/ ,/ 149/ ,/ 151/ ,/ 153/ ,/ 157/ ,/ 160/ ,/ 164/ ,/ 169/ ,/ 179/ ,/ 189/ ,/ 190/ ,/ 193/ ,/ 198/ ,/ 200/ ,/ 206/ ,/ 214/ ,/ 216/ ,/ 221/ ,/ 231/ ,/ 239/ ,/ 248/ ,/ 250/ ,/ 256/ ,/ 260/ ,/ 267/ ,/ 269/ ,/ 271/ ,/ 273/ ,/ 274/ ,/ 283/ ,/ 288/ ,/ 289/ ,/ 294/ ,/ 296/ ,/ 299/ ,/ 303/ ,/ 307/ ,/ 313/ ,/ 321/ ,/ 327/ ,/ 330/ ,/ 340/ ,/ 342/ ,/ 349/ ,/ 359/ ,/ 366/ ,/ 369/ ,/ 372/ ,/ 374/ ,/ 377/ ,/ 383/ ,/ 385/ ,/ 386/ ,/ 392/ ,/ 397/ ,/ 402/ ,/ 408/ ,/ 412/ ,/ 414/ ,/ 416/ ,/ 418/ ,/ 419/ ,/ 426/ ,/ 435/ ,/ 440/ ,/ 450/ ,/ 460/ ,/ 470/ ,/ 475/ ,/ 484/ ,/ 488/ ,/ 493/ ,/ 498/ ,/ 512/ }/ DAG4DAG5DAG6DAG7DAG8/ ①/ “/ {/ }/ ”/ 前面/ 的/ 数字/ 代表/ 最长/ 路径/ 长度/ ;/ “/ {/ }/ ”/ 内/ 的/ 数字串/ 代表/ 求解/ 出/ 的/ 最长/ 路径/ ./ ②/ 由于/ DAG2/ 以及/ DAG5/ ~/ DAG8/ 的/ 最长/ 路径/ 长度/ 较大/ ,/ 限于/ 篇幅/ ,/ 我们/ 仅/ 给出/ 了/ 最长/ 路径/ 的/ 开始/ 和/ 结束/ 的/ 部分/ 值/ ,/ 中间/ 的/ 绝大部分/ 采用/ “/ …/ ”/ 进行/ 了/ 省略/ ./ ③/ 由于/ DAG3/ 和/ DAG4/ 的/ 最长/ 路径/ 的/ 解仅/ 在/ 370/ 附近/ 至/ 385/ 附近/ 有所/ 差异/ ,/ 其他/ 部分/ 较为/ 相似/ ,/ 因此/ 本文/ 对/ 这/ 两个/ 实例/ 给出/ 了/ 完整/ 的/ 最长/ 路径/ ./ ④/ 由于/ DAG5/ ~/ DAG8/ 图/ 相对/ 较大/ ,/ NLPDAG/ 算法/ 因/ 消耗/ 空间/ 过大/ ,/ 在/ 这些/ 实例/ 上/ 未能/ 给出/ 运行/ 结果/ ./ 6.2/ 实验/ 结果/ 分析/ (/ 1/ )/ 本文/ 所/ 提出/ 的/ NSPLCDAG/ 算法/ 的/ 效率/ 要/ 大大/ 优于/ 文献/ [/ 16/ ]/ 所/ 提出/ 的/ 算法/ ./ 通过/ 表/ 4/ 的/ 全部/ 20/ 个/ 实例/ 可以/ 看出/ ,/ 文献/ [/ 16/ ]/ 算法/ 的/ 运行/ 时间/ 均/ 显著/ 长于/ 本文/ 算法/ ./ 如/ 在/ DAG3/ 中/ ,/ 当/ 路径/ 长度/ 约束/ m/ 为/ 12/ ,/ 顶点/ 数为/ 512/ 时/ ,/ 文献/ [/ 16/ ]/ 算法/ 的/ 运行/ 时间/ 为/ 2526.1/ ms/ ,/ 而/ NSPLCDAG/ 算法/ 的/ 运行/ 时间/ 为/ 4.69/ ms/ ./ 这些/ 实验/ 充分/ 地/ 说明/ 了/ 本文/ 所/ 提出/ 的/ NSPLCDAG/ 算法/ 的/ 效率/ 要/ 大大/ 优于/ 文献/ [/ 16/ ]/ 算法/ ./ (/ 2/ )/ 文献/ [/ 16/ ]/ 算法/ 的/ 求解/ 时间/ 与/ 顶点/ 数/ 的/ 大小/ 和解/ 的/ 大小/ 相关/ ,/ 特别/ 是/ 与/ 解/ 的/ 大小/ 相关/ ,/ 解越/ 大/ ,/ 求解/ 时间/ 增加/ 越/ 显著/ ./ 在/ 表/ 4/ 的/ DAG1/ 中/ ,/ 当/ 路径/ 长度/ 约束/ m/ 为/ 12/ ,/ 顶点/ 数/ 分别/ 为/ 384/ 、/ 448/ 和/ 512/ 时/ ,/ 问题/ 解/ 的/ 大小/ 均/ 为/ 386/ ,/ 算法/ 运行/ 时间/ 分别/ 为/ 12.50/ ms/ 、/ 17.19/ ms/ 和/ 26.09/ ms/ ,/ 这/ 说明/ 了/ 文献/ [/ 16/ ]/ 算法/ 的/ 运行/ 时间/ 与/ 顶/ 最长/ 路径/ 长度/ 及/ 最长/ 路径/ 点数/ 的/ 大小/ 相关/ ./ 而/ 在/ DAG2/ ,/ DAG3/ 和/ DAG4/ 中/ ,/ 当解/ 显著/ 增加/ 时/ ,/ 问题/ 的/ 求解/ 时间/ 也/ 显著/ 增大/ ./ 如/ 在/ DAG3/ 中/ ,/ 当/ 路径/ 长度/ 约束/ m/ 为/ 12/ ,/ 顶点/ 数/ 分别/ 为/ 384/ 、/ 448/ 和/ 512/ 时/ ,/ 问题/ 解/ 的/ 大小/ 分别/ 为/ 89704/ 、/ 99198/ 和/ 135193/ ,/ 其/ 运行/ 时间/ 分别/ 为/ 1308.28/ ms/ 、/ 1647.97/ ms/ 和/ 2526.1/ ms/ ,/ 这些/ 实例/ 充分/ 地/ 说明/ 了/ 当解/ 显著/ 增加/ 时/ ,/ 文献/ [/ 16/ ]/ 算法/ 的/ 求解/ 时间/ 也/ 显著/ 增大/ ./ 产生/ 上述/ 现象/ 的/ 原因/ 是/ ,/ 文献/ [/ 16/ ]/ 的/ 算法/ 是从/ 汇点/ 出发/ ,/ 对/ 每条/ 简单/ 路径/ 进行/ 逐一/ 回溯/ ,/ 通过/ 枚举/ 所有/ 可能/ 的/ 解来/ 获得/ 所有/ 的/ 简单/ 路径/ ,/ 因而/ 文献/ [/ 16/ ]/ 算法/ 的/ 求解/ 时间/ 与/ 解/ 的/ 大小/ 相关/ ./ (/ 3/ )/ NSPLCDAG/ 算法/ 的/ 求解/ 时间/ 与/ 图/ 的/ 大小/ 和/ 长度/ 约束/ 大小/ 相关/ ,/ 更为重要/ 的/ 是/ 当/ 问题/ 的/ 解/ 显著/ 增大/ 时/ ,/ 求解/ 时间/ 并/ 不/ 显著/ 增加/ ./ 通过/ 表/ 4/ 可以/ 看出/ ,/ NSPLCDAG/ 算法/ 的/ 求解/ 时间/ 与/ 图/ 的/ 尺寸/ 未/ 呈现/ 绝对/ 线性/ 变化/ ,/ 但是/ 当图/ 的/ 尺寸/ 增大/ 时/ ,/ 运行/ 时间/ 也/ 相应/ 增加/ ,/ 因此/ NSPLCDAGPage9/ 算法/ 的/ 求解/ 时间/ 与/ 图/ 的/ 大小/ 呈/ 正/ 相关/ ./ 表/ 5/ 也/ 呈现出/ 同样/ 的/ 特点/ ,/ 虽然/ 运行/ 时间/ 与/ 路径/ 长度/ m/ 未/ 呈现/ 绝对/ 线性/ 变化/ ,/ 但是/ 随着/ 路径/ 长度/ 约束/ m/ 的/ 增大/ ,/ 运行/ 时间/ 也/ 相应/ 增加/ ,/ 因此/ NSPLCDAG/ 算法/ 的/ 求解/ 时间/ 与/ 长度/ 约束/ 呈/ 正/ 相关/ ./ 此外/ ,/ 通过/ 表/ 4/ 和/ 5/ 还/ 可以/ 看出/ ,/ 当/ 问题/ 的/ 解/ 快速/ 增大/ 时/ ,/ 问题/ 的/ 求解/ 时间/ 并未/ 显著/ 增加/ ,/ 这一/ 特点/ 在/ 表/ 5/ 中/ 体现/ 尤为/ 明显/ ./ 如/ 在/ DAG4/ 中/ ,/ 当/ 路径/ 长度/ 约束/ 由/ 18/ 变为/ 48/ 时/ ,/ 问题/ 的/ 解/ 增大/ 了/ 近/ 5/ ×/ 109/ 倍/ ,/ 然而/ 问题/ 的/ 求解/ 时间/ 增加/ 不到/ 一倍/ ,/ 这/ 充分/ 地/ 说明/ 了/ 当/ 问题/ 的/ 解/ 显著/ 增大/ 时/ ,/ 求解/ 时间/ 并/ 不/ 显著/ 增加/ ./ 当/ 路径/ 长度/ 约束/ 为/ 18/ 时/ ,/ DAG3/ 解/ 的/ 大小/ 小于/ DAG4/ 解/ 的/ 大小/ ,/ 但是/ 在/ DAG3/ 中/ 的/ 运行/ 时间/ 却略/ 长于/ DAG4/ ,/ 这/ 说明/ 问题/ 的/ 求解/ 速度/ 与/ 解/ 的/ 大小/ 无关/ ./ NSPLCDAG/ 算法/ 是/ 一个/ 高效/ 求解/ 算法/ 是因为/ 其/ 采用/ 网/ 树结构/ ,/ 该/ 结构/ 将/ 同/ 一层/ 结点/ 名称/ 相同/ 的/ 结点/ 合并/ 为/ 一个/ 网树/ 结点/ ,/ 有效/ 地/ 避免/ 了/ 组合/ 爆炸/ 现象/ 的/ 发生/ ,/ 大大/ 地/ 提高/ 了/ 问题/ 的/ 求解/ 速度/ ./ (/ 4/ )/ 表/ 5/ 中/ 部分/ 实例/ 的/ 解为/ 0/ 的/ 分析/ 与/ 说明/ ./ 在/ 表/ 5/ 的/ DAG1/ 中/ ,/ 当/ 长度/ 约束/ 为/ 17/ ,/ 19/ 和/ 21/ 时/ ,/ 问题/ 的/ 解均/ 为/ 0/ ,/ 造成/ 这一/ 现象/ 的/ 原因/ 有/ 两种/ :/ ①/ 通过/ 表/ 6/ 可以/ 看出/ ,/ DAG1/ 的/ 最长/ 路径/ 长度/ 为/ 20/ ,/ 因此/ 长度/ 约束/ 在/ 大于/ 最大/ 路径/ 长度/ 时/ ,/ 问题/ 的/ 解为/ 0/ ,/ 所以/ DAG1/ 中/ 长度/ 约束/ 为/ 21/ 时/ ,/ 问题/ 的/ 解为/ 0/ ;/ ②/ 本文/ 的/ 全部/ 有/ 向/ 无/ 环图/ 均/ 采用/ 文献/ [/ 15/ ]/ 的/ 算法/ 转化/ 而/ 来/ ,/ 对于/ DAG1/ 来说/ ,/ 指向/ 汇点/ 的/ 所有/ 有/ 向/ 边/ 均/ 由/ 模式/ 串/ P1/ 的/ 最后/ 一个/ 字符/ ‘/ a/ ’/ 来/ 生成/ ./ 模式/ 串/ P1/ 中/ ‘/ a/ ’/ 与/ ‘/ t/ ’/ 交替/ 出现/ ,/ 因此/ 当/ 路径/ 长度/ 约束/ 为/ 偶数/ 时/ ,/ 问题/ 的/ 解均/ 不为/ 0/ ;/ 而/ 为/ 奇数/ 时/ ,/ 如为/ 17/ 和/ 19/ 时/ ,/ 问题/ 的/ 解均/ 为/ 0/ ./ 在/ DAG2/ ,/ DAG3/ 和/ DAG4/ 中/ 存在/ 同样/ 的/ 现象/ ,/ 由于/ 模式/ 串/ P2/ ,/ P3/ 和/ P4/ 中/ ‘/ a/ ’/ ,/ ‘/ t/ ’/ 和/ ‘/ g/ ’/ 三者/ 交替/ 出现/ ,/ 由/ 模式/ 串/ P2/ 可知/ ,/ DAG2/ 在/ 长度/ 约束/ 为/ 3/ 的/ 倍数/ +/ 1/ 时/ ,/ 结果/ 均/ 不/ 为/ 0/ ,/ 而/ 在/ 其它/ 情况/ 下均/ 为/ 0/ ./ 由/ 模式/ 串/ P3/ 和/ P4/ 可知/ ,/ DAG3/ 和/ DAG4/ 在/ 长度/ 约束/ 为/ 3/ 的/ 倍数/ 时/ ,/ 结果/ 均/ 不/ 为/ 0/ ,/ 而/ 其他/ 情况/ 均/ 为/ 0/ ./ 表/ 5/ 的/ DAG2/ ,/ DAG3/ 和/ DAG4/ 在/ 不同/ 长度/ 约束/ 下/ 的/ 求解/ 结果/ 验证/ 了/ 当/ 路径/ 长度/ 约束/ 小于/ 最长/ 路径/ 长度/ 时/ ,/ 两点/ 间/ 的/ 简单/ 路径/ 数/ 也/ 可能/ 为/ 0/ ./ (/ 5/ )/ 改进/ 的/ NLPDAG/ 算法/ 适用/ 于/ 求解/ 大规模/ 有/ 向/ 无/ 环图/ 的/ 最长/ 路径/ 问题/ ./ 通过/ 表/ 6/ 可以/ 看出/ ,/ 在/ 求解/ DAG1/ 至/ DAG4/ 的/ 4/ 个/ 大小/ 为/ 512/ 的/ 有/ 向/ 无/ 环图/ 的/ 最长/ 路径/ 时/ ,/ 最长/ 路径/ 长度/ 达到/ 78/ ,/ 由于/ NLPDAG/ 算法/ 占用/ 空间/ 较大/ ,/ 因此/ 在/ 求解/ 这/ 4/ 个/ 实例/ 时/ ,/ 运行/ 时间/ 接近/ 2s/ ;/ 而/ 改进/ 的/ NLPDAG/ 算法/ 运行/ 时间/ 小于/ 10ms/ ./ 而/ 在/ DAG5/ 至/ DAG8/ 的/ 大小/ 达到/ 2000/ 数量级/ 且/ 最长/ 路径/ 长度/ 达到/ 300/ 数量级/ 时/ ,/ NLPDAG/ 算法/ 因/ 占用/ 空间/ 过大/ ,/ 未能/ 给出/ 运行/ 结果/ ;/ 而/ 改进/ 的/ NLPDAG/ 算法/ 的/ 求解/ 时间/ 小于/ 100ms/ ./ 这/ 充分/ 地/ 说明/ 了/ 改进/ 的/ NLPDAG/ 算法/ 具有/ 较/ 快/ 的/ 求解/ 速度/ ,/ 适用/ 于/ 求解/ 大规模/ 有/ 向/ 无/ 环图/ 的/ 最长/ 路径/ 问题/ ./ (/ 6/ )/ 有/ 向/ 无/ 环图/ 中/ 最长/ 路径/ 不/ 唯一/ ./ 在/ 表/ 5/ 的/ DAG1/ 中/ 路径/ 长度/ 约束/ 为/ 20/ (/ 即/ 为/ 该/ 图/ 最长/ 路径/ 长度/ )/ 时/ ,/ SPLCinDAGs/ 问题/ 的/ 解为/ 360/ ,/ 这/ 说明/ 在/ DAG1/ 中/ ,/ 从/ 顶点/ 1/ 到/ 顶点/ 512/ 共有/ 360/ 条/ 不同/ 的/ 最长/ 简单/ 路径/ ./ 此外/ ,/ 表/ 6/ 中/ NLPDAG/ 算法/ 和/ 改进/ 的/ NLPDAG/ 算法/ 在/ DAG1/ 至/ DAG4/ 中/ 给出/ 相同/ 的/ 最长/ 路径/ 长度/ ,/ 相互/ 验证/ 了/ 算法/ 的/ 正确性/ ,/ 并/ 在/ DAG2/ ,/ DAG3/ 和/ DAG4/ 中/ 给出/ 了/ 不同/ 的/ 最长/ 路径/ ,/ 充分/ 地/ 说明/ 了/ 有/ 向/ 无/ 环图/ 中/ 最长/ 路径/ 不/ 唯一/ ./ (/ 7/ )/ 对/ 其它/ 现象/ 的/ 分析/ 与/ 说明/ ./ 对于/ 表/ 4/ 的/ DAG1/ ,/ 当其/ 尺寸/ 发生变化/ 时/ ,/ 问题/ 的/ 解/ 可能/ 并/ 不/ 发生变化/ ,/ 即/ DAG1/ 在/ 384/ 和/ 448/ 个/ 结点/ 的/ 子/ 图/ 以及/ 原图/ 上/ 问题/ 的/ 解均/ 为/ 386/ ,/ 这/ 说明/ 在/ DAG1/ 中/ 从/ 顶点/ 1/ 至/ 顶点/ 512/ 在/ 路径/ 长度/ 约束/ 为/ 12/ 的/ 情况/ 下/ ,/ 没有/ 经过/ 顶点/ 384/ ~/ 511/ 的/ 路径/ ./ 由于/ NSPLCDAG/ 算法/ 采用/ 了/ 动态/ 分配内存/ 的/ 方式/ ,/ 因此/ 运行/ 时间/ 会/ 有/ 一定/ 的/ 扰动/ ,/ 故/ 算法/ 在/ 表/ 4/ 的/ DAG3/ 中/ 顶点/ 数为/ 256/ 和/ 320/ 时/ ,/ 取得/ 了/ 相同/ 的/ 运行/ 时间/ 1.56/ ms/ ;/ 另外/ 在/ 表/ 5/ 的/ DAG4/ 中/ ,/ 长度/ 约束/ 为/ 12/ 和/ 18/ 时/ ,/ 运行/ 时间/ 都/ 为/ 4.53/ ms/ ;/ 在/ 表/ 5/ 的/ DAG1/ 中/ ,/ 在/ 长度/ 约束/ 为/ 18/ 时/ ,/ 算法/ 运行/ 时间/ 比/ 长度/ 约束/ 为/ 19/ ,/ 20/ 和/ 21/ 的/ 运行/ 时间/ 都/ 长/ ;/ 在/ 表/ 5/ 的/ DAG2/ 中/ ,/ 在/ 长度/ 约束/ 为/ 16/ 时/ ,/ 算法/ 运行/ 时间/ 比/ 长度/ 约束/ 为/ 17/ 和/ 18/ 的/ 运行/ 时间/ 都/ 长/ ,/ 这/ 说明/ 算法/ 在/ 某些/ 实例/ 上/ 运行/ 时间/ 会/ 有/ 一定/ 的/ 扰动/ ./ 7/ 结论/ 本文/ 研究/ 了/ 求解/ SPLCinDAGs/ 问题/ 的/ NSPLCDAG/ 算法/ ,/ 该/ 算法/ 将/ 此/ 问题/ 转化/ 为/ 一棵/ 网树/ ,/ 并/ 利用/ 网树/ 的/ 树根/ 路径/ 数/ 性质/ 对/ 该/ 问题/ 进行/ 求解/ ./ 网树/ 的/ 多/ 前驱/ 多/ 后继/ 性/ 有效/ 地/ 避免/ 了/ 组合/ 爆炸/ 现象/ 的/ 发生/ ,/ 大大/ 地/ 提高/ 了/ 问题/ 的/ 求解/ 速度/ ,/ 使得/ NSPLCDAG/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 分别/ 为/ O/ (/ m/ ×/ n/ ×/ t/ )/ 和/ O/ (/ n/ +/ |/ E/ |/ )/ ,/ 这里/ m/ ,/ t/ ,/ n/ 和/ |/ E/ |/ 分别/ 表示/ 两点/ 间/ 的/ 路径/ 长度/ 约束/ 、/ 顶点/ 最大/ 出/ 度/ 以及/ 顶点/ 数和边/ 数/ ./ 本文/ 通过/ 对/ NSPLCDAG/ 算法/ 进行/ 适当/ 修改/ ,/ 形成/ 了/ 有/ 向/ 无/ 环图/ 中/ 求解/ 最长/ 路径/ 问题/ Page10/ 的/ NLPDAG/ 算法/ ,/ 在/ 对/ NLPDAG/ 算法/ 进行/ 改进/ 后/ ,/ 形成/ 了/ 改进/ 的/ NLPDAG/ 算法/ ./ 改进/ 的/ NLPDAG/ 算法/ 的/ 时间/ 复杂度/ 和/ 空间/ 复杂度/ 分别/ 为/ O/ (/ |/ E/ |/ )/ 和/ O/ (/ n/ +/ |/ E/ |/ )/ ,/ 这里/ n/ 和/ |/ E/ |/ 分别/ 表示/ 图/ 的/ 顶点/ 数和边/ 数/ ./ 对比性/ 实验/ 验证/ 了/ NSPLCDAG/ 算法/ 和/ 改进/ 的/ NLPDAG/ 算法/ 的/ 正确性/ 和/ 有效性/ ./ 致谢/ 匿名/ 审稿人/ 对/ 本文/ 提出/ 了/ 宝贵/ 修改意见/ ,/ 在/ 此/ 表示感谢/ !/ 

