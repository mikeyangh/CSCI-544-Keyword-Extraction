Page1/ 一种/ 新颖/ 的/ 基于/ 颜色/ 信息/ 的/ 粒子/ 滤波器/ 跟踪/ 算法/ 李/ 培华/ (/ 黑龙江/ 大学/ 计算机科学/ 与/ 技术/ 学院/ 哈尔滨/ 150080/ )/ 摘要/ 传统/ 的/ 基于/ 直方图/ 的/ 粒子/ 滤波器/ 算法/ 常常/ 需要/ 在/ 准确/ 表达/ 颜色/ 分布/ 和/ 计算/ 效率/ 之间/ 做出/ 妥协/ ,/ 从而/ 影响/ 跟踪/ 算法/ 的/ 性能/ 甚至/ 导致/ 跟踪/ 算法/ 失败/ ./ 针对/ 这一/ 问题/ ,/ 文中/ 提出/ 一种/ 新颖/ 的/ 基于/ 颜色/ 信息/ 的/ 粒子/ 滤波器/ 跟踪/ 算法/ ./ 该/ 算法/ 采用/ 自/ 适应/ 剖分/ 颜色/ 空间/ 的/ 概率模型/ ,/ 能够/ 用/ 较/ 少/ 的/ 子/ 空间/ 准确/ 地/ 表达/ 目标/ 的/ 颜色/ 分布/ ./ 文中/ 进一步/ 提出/ 一种/ 推广/ 的/ 积分/ 图像/ ,/ 通过/ 在/ 该/ 积分/ 图像/ 上/ 进行/ 数组/ 索引/ 操作/ 得到/ 每/ 一个/ 子/ 空间/ 的/ 像素/ 数目/ 、/ 均值/ 向量/ 和/ 协方差/ 矩阵/ ,/ 从而/ 能够/ 快速/ 地/ 计算/ 出/ 颜色/ 模型/ ./ 然而/ 在/ CPU/ 上/ 计算/ 积分/ 图像/ 十分/ 耗时/ ,/ 为此/ 文中/ 提出/ 一种/ 基于/ GPU/ 的/ 并行算法/ 快速/ 计算/ 积分/ 图像/ ./ 该/ 并行算法/ 在/ 显卡/ 的/ GPU/ 上/ 创建/ 3/ 个/ 线程/ 网格/ ,/ 分别/ 顺序/ 执行/ 3/ 个/ Kernel/ 函数/ ,/ 依次/ 完成/ 创建/ 原始/ 积分/ 图像/ 以及/ 对/ 它/ 的/ 行和列/ 执行/ 前缀/ 求和/ 算法/ 的/ 任务/ ./ 同/ 传统/ 的/ 基于/ 直方图/ 的/ 粒子/ 滤波器/ 算法/ 相比/ ,/ 新/ 算法/ 每帧/ 平均/ 跟踪/ 时间/ 显著/ 减少/ ,/ 同时/ 跟踪/ 准确性/ 和/ 鲁棒性/ 都/ 有/ 较大/ 提高/ ./ 关键词/ 目标/ 跟踪/ ;/ 粒子/ 滤波器/ ;/ 颜色/ 模型/ ;/ 积分/ 图像/ ;/ 并行算法/ 1/ 引言/ 基于/ 颜色/ 的/ 粒子/ 滤波器/ (/ particlefilter/ )/ 跟踪/ 近年来/ 得到/ 了/ 越来越/ 多/ 的/ 研究者/ 的/ 关注/ ,/ 在/ 视频/ 监控/ 、/ 智能/ 人机交互/ 、/ 医学/ 图像处理/ 、/ 视频/ 编码/ 以及/ 智能/ 机器人/ 等/ 许多/ 研究/ 领域/ 得到/ 了/ 广泛/ 的/ 应用/ ./ 这种/ 持续增长/ 的/ 研究/ 兴趣/ 是因为/ 在/ 复杂/ 的/ 环境/ 中/ 目标/ 跟踪/ 一般/ 是/ 非线性/ 非/ 高斯/ 问题/ ,/ 而/ 粒子/ 滤波器/ 能够/ 提供/ 一种/ 统一/ 的/ 理论/ 框架/ 解决/ 这/ 类/ 问题/ ;/ 另一方面/ 是因为/ 颜色/ 信息/ 是/ 一种/ 最/ 常见/ 而且/ 重要/ 的/ 信息/ ,/ 它/ 具有/ 平移/ 、/ 旋转/ 不变性/ 和/ 对/ 遮挡/ 及/ 姿态/ 变化/ 不/ 敏感/ 的/ 优点/ ./ 粒子/ 滤波器/ 跟踪/ 的/ 基本/ 思想/ 是/ 将/ 目标/ 跟踪/ 问题/ 抽象/ 为/ 系统/ 的/ 状态/ 估计/ 问题/ ,/ 其中/ 系统/ 状态/ 的/ 后验/ 概率密度/ 迭代/ 地/ 通过/ 一组/ 具有/ 权重/ 的/ 离散/ 采样/ (/ 称为/ 粒子/ )/ 来/ 近似/ [/ 1/ ]/ ./ 由于/ 粒子/ 滤波器/ 的/ 本质/ 是/ 蒙特卡洛/ (/ MonteCarlo/ )/ 模拟/ ,/ 为了/ 准确/ 地/ 表达/ 后验/ 概率密度/ 需要/ 几百/ 甚至/ 上/ 千个/ 粒子/ ./ 在/ 跟踪/ 过程/ 的/ 每/ 一帧/ 图像/ 中/ ,/ 需要/ 对/ 每/ 一个/ 粒子/ 的/ 状态/ 进行/ 观测/ ,/ 因此/ 粒子/ 滤波器/ 跟踪/ 的/ 计算/ 代价/ 通常/ 很大/ [/ 2/ ]/ ./ 为了/ 使/ 算法/ 能够/ 达到/ 实时/ ,/ 研究者/ 们/ 一般/ 采用/ 粗略地/ 表达/ 目标/ 颜色/ 信息/ 的/ 方法/ 来/ 减少/ 每个/ 粒子/ 的/ 计算/ 代价/ ,/ 同时/ 采用/ 尽可能少/ 的/ 粒子/ 数/ ./ Nummiaro/ 等/ [/ 3/ ]/ 在/ RGB/ 颜色/ 空间/ 中用/ 8/ ×/ 8/ ×/ 8/ 的/ 加权/ 直方图/ 对/ 目标/ 进行/ 观测/ ,/ 采用/ 粒子/ 数为/ 200/ 的/ 粒子/ 滤波器/ 进行/ 目标/ 跟踪/ ./ Perez/ 等/ [/ 4/ ]/ 在/ HSV/ 颜色/ 空间/ 中用/ H/ 、/ S/ 通道/ 的/ 均匀/ 10/ ×/ 10/ 联合/ 直方图/ 加上/ V/ 通道/ 的/ 均匀/ 10bin/ 直方图/ 建模/ 颜色/ 特征/ ,/ 用/ 100/ 个/ 粒子/ 进行/ 跟踪/ ./ 自/ 适应/ 剖分/ 颜色/ 空间/ 的/ 模型/ 一般来说/ 比/ 均匀/ 剖分/ 颜色/ 空间/ 的/ 模型/ 能够/ 更/ 准确/ 地/ 刻画/ 目标/ 的/ 颜色/ 分布/ ./ Jacquot/ 等/ [/ 5/ ]/ 提出/ 了/ 一种/ 自/ 适应/ 的/ 均匀/ 直方图/ 模型/ ,/ 他们/ 利用/ Akaike/ 模型/ 选择/ 理论/ 自动/ 地/ 确定/ 直方图/ 的/ 区间/ 个数/ ,/ 并/ 结合/ 粒子/ 滤波器/ 进行/ 跟踪/ ./ 他们/ 的/ 实验/ 表明/ 自/ 适应/ 直方图/ 模型/ 比/ 传统/ 的/ 均匀/ 剖分/ 整个/ 颜色/ 空间/ 的/ 直方图/ 模型/ 能够/ 得到/ 更好/ 的/ 跟踪/ 结果/ ./ Town/ [/ 6/ ]/ 使用/ K/ -/ 均值/ 聚类/ 算法/ 分析/ 目标/ 的/ 颜色/ 分布/ ,/ 在/ 聚类分析/ 的/ 基础/ 上/ 自动/ 地/ 确定/ 目标/ 直方图/ 区间/ 以及/ 区间/ 个数/ ,/ 并/ 将/ 该/ 颜色/ 模型/ 作为/ 粒子/ 滤波器/ 的/ 观测/ 模型/ 进行/ 目标/ 跟踪/ ./ Viola/ 和/ Jones/ [/ 7/ ]/ 提出/ 了/ 一种/ 积分/ 图像/ 的/ 概念/ ,/ 利用/ 积分/ 图像/ 仅仅/ 使用/ 数组/ 索引/ 和/ 加法/ 运算/ 能够/ 快速/ 计算/ 出/ 图像/ 中/ 任意/ 矩形/ 区域/ 的/ 均值/ 和/ 方差/ ./ 在/ 这/ 一/ 思想/ 的/ 启发/ 下/ ,/ Yang/ 等/ [/ 8/ ]/ 选取/ 多个/ 矩形/ 作为/ 特征/ ,/ 利用/ 积分/ 图像/ 分别/ 计算/ 这些/ 矩形/ 区域/ 中/ 每/ 一个/ 颜色/ 通道/ 中/ 的/ 均值/ 来/ 表达/ 目标/ 的/ 颜色/ 信息/ ,/ 其中/ 特征/ 的/ 相似性/ 用/ 欧式/ 距离/ 来/ 度量/ ./ 文献/ [/ 9/ ]/ 同样/ 选取/ 一组/ 矩形/ 特征/ 表达/ 目标/ 的/ 表观/ 模型/ ,/ 使用/ 费舍尔/ 分析/ 在线/ 地/ 选择/ 具有/ 最大/ 分辨/ 能力/ 的/ 前景/ 和/ 背景/ 特征/ ,/ 在/ 粒子/ 滤波器/ 框架/ 下/ 进行/ 跟踪/ ./ 在/ 粒子/ 滤波器/ 跟踪/ 算法/ 中/ ,/ 从/ 图像/ 中/ 得到/ 目标/ 的/ 观测/ 信息/ ,/ 即/ 观测/ 概率密度/ 计算/ ,/ 是/ 最/ 耗时/ 的/ 过程/ ,/ 是/ 粒子/ 滤波器/ 能否/ 实时/ 实现/ 的/ 关键/ [/ 2/ ]/ ./ 因此/ 在/ 准确/ 表达/ 目标/ 的/ 颜色/ 分布/ 和/ 快速/ 算法/ 之间/ 需要/ 做出/ 妥协/ :/ 如果/ 要/ 更/ 准确/ 地/ 表达/ 目标/ 的/ 颜色/ 分布/ ,/ 例如/ 在/ 传统/ 直方图/ 中/ 采用/ 较/ 多/ 的/ 颜色/ 区间/ 数/ ,/ 那么/ 对/ 每个/ 粒子/ 计算/ 观测/ 概率/ 所/ 需/ 的/ 时间/ 将会/ 大大增加/ ,/ 从而/ 影响/ 算法/ 的/ 实时性/ ;/ 反之/ ,/ 如果/ 粗略地/ 表达/ 目标/ 的/ 颜色/ 分布/ ,/ 算法/ 的/ 跟踪/ 速度/ 会/ 提高/ ,/ 然而/ 由于/ 无法/ 准确/ 地/ 刻画/ 目标/ 的/ 颜色/ 密度/ ,/ 很/ 容易/ 导致/ 跟踪/ 误差/ 增大/ 甚至/ 跟踪/ 失败/ ./ 本文/ 提出/ 了/ 一种/ 新颖/ 的/ 算法/ 来/ 解决/ 这一/ 问题/ ./ 我们/ 采用/ 一种/ 自/ 适应/ 剖分/ 颜色/ 空间/ 的/ 模型/ ,/ 该/ 模型/ 能/ 更/ 准确/ 地/ 表达/ 目标/ 的/ 颜色/ 分布/ ./ 在/ Viola/ 和/ Jones/ 的/ 积分/ 图像/ 的/ 基础/ 上/ ,/ 我们/ 提出/ 了/ 一种/ 推广/ 的/ 积分/ 图像/ ,/ 利用/ 该/ 积分/ 图像/ 通过/ 简单/ 的/ 数组/ 索引/ 能够/ 快速/ 地/ 计算/ 颜色/ 模型/ ./ 在/ CPU/ 上/ 构造/ 积分/ 图像/ 是/ 一个/ 十分/ 耗时/ 的/ 过程/ ,/ 为此/ 我们/ 提出/ 了/ 一种/ 基于/ NVIDIAG80GPU/ 的/ 并行算法/ ,/ 该/ 算法/ 能够/ 快速/ 地/ 将/ 积分/ 图像/ 计算出来/ ./ 这样/ 我们/ 就/ 得到/ 了/ 一种/ 新颖/ 的/ 基于/ 颜色/ 信息/ 的/ 粒子/ 滤波器/ 算法/ ,/ 该/ 算法/ 在/ 跟踪/ 时间/ 和/ 跟踪/ 性能/ 上/ 都/ 要/ 优于/ 传统/ 的/ 基于/ 直方图/ 的/ 算法/ ./ 2/ 基于/ 颜色/ 的/ 粒子/ 滤波器/ 算法/ 2.1/ 自/ 适应/ 颜色/ 模型/ 本文/ 使用/ 文献/ [/ 10/ ]/ 提出/ 的/ 颜色/ 模型/ ,/ 该/ 模型/ 在/ 聚类分析/ 的/ 基础/ 上/ 自/ 适应/ 地/ 划分/ 直方图/ 区间/ ,/ 能够/ 使用/ 数量/ 很少/ 的/ 区间/ 准确/ 地/ 表达/ 目标/ 的/ 颜色/ 概率密度/ ./ 下面/ 对/ 这/ 一/ 模型/ 进行/ 简要/ 介绍/ ./ 首先/ 应用/ Comaniciu/ 等/ 提出/ 的/ 算法/ [/ 11/ ]/ 对/ 目标/ 的/ 颜色/ 分布/ 进行/ 聚类分析/ ,/ 该/ 算法/ 能够/ 自动/ 地/ 确定/ 聚类/ 数/ d/ ./ 在/ 聚类分析/ 的/ 基础/ 上/ ,/ 根据/ 如下/ 的/ 方法/ 对/ 目标/ 的/ 颜色/ 空间/ 进行/ 剖分/ ./ 令/ 狕/ -/ Cu/ (/ u/ =/ 1/ ,/ 2/ ,/ …/ ,/ d/ )/ 包含/ 的/ 像素/ 狕/ u/ 的/ 均值/ 向量/ 和/ 协方差/ 矩阵/ ./ 将/ 矩阵/ 犛/ u/ 进行/ 分解/ 犛/ u/ =/ 犞/ u/ Σ/ u/ 犞/ Tu/ ,/ 其中/ Σ/ u/ 是/ 按/ 降序/ 排列/ 的/ 犛/ u/ 的/ 特征值/ λ/ u/ ,/ i/ (/ i/ =/ 1/ ,/ 2/ ,/ 3/ )/ 组成/ 的/ 对角/ 矩阵/ ,/ 犞/ u/ 是/ 相应/ 的/ 归一化/ 的/ 正交/ 向量/ 组成/ 的/ 矩/ Page3/ 阵/ ./ 对/ 颜色/ 空间/ 进行/ 标准/ 正交变换/ 这样/ 狑/ u/ 的/ 不同/ 分量/ wu/ ,/ i/ 彼此/ 正交/ ,/ 其/ 标准差/ 是/ λ/ u/ ,/ 槡/ i/ ./ 因此/ 在/ 变换/ 空间/ 中聚类/ Cu/ 可以/ 用/ 一个/ 中心/ 在/ 坐标/ 原点/ 3/ 条边/ 分别/ 平行/ 于/ 3/ 个/ 坐标轴/ 的/ 三维/ 矩形/ 来/ 表示/ ,/ 该/ 三维/ 矩形/ 的/ 边长/ 分别/ 是/ 4/ λ/ u/ ,/ 槡/ i/ ,/ i/ =/ 1/ ,/ 2/ ,/ 3/ ./ 根据/ 等式/ (/ 1/ )/ 进行/ 如下/ 的/ 反/ 变换/ 能够/ 在/ 原来/ 的/ 颜色/ 空间/ 中/ 确定/ 表征/ 聚类/ Cu/ 的/ 三维/ 矩形/ ./ 通过/ 这种/ 自/ 适应/ 剖分/ ,/ 整个/ 颜色/ 空间/ 按照/ 目标/ 颜色/ 分布/ 被/ 分成/ 了/ d/ 个/ 颜色/ 子/ 空间/ ,/ 没有/ 颜色/ 分布/ 的/ 子/ 空间/ 将/ 不予考虑/ ./ 每/ 一个/ 子/ 空间/ 对应/ 一个/ 颜色/ 聚类/ ,/ 相应/ 地/ 对应/ 直方图/ 的/ 一个/ 区间/ ./ 对于/ 每/ 一个/ 这样/ 的/ 直方图/ 区间/ ,/ 我们/ 的/ 思想/ 是/ 不但/ 考虑/ 落入/ 子/ 空间/ 的/ 像素/ 的/ 个数/ ,/ 而且/ 进一步/ 用/ 高斯分布/ 建模/ 每/ 一个/ 子/ 空间/ 的/ 颜色/ 分布/ ./ 给定/ 由/ N/ 个/ 像素/ 组成/ 的/ 目标/ 的/ 参考/ 图像/ 犇/ (/ x/ ,/ y/ )/ ,/ 目标/ 的/ 模型/ 表达/ 为/ 狆/ =/ [/ p1/ ,/ …/ ,/ pu/ ,/ …/ ,/ pd/ ]/ T/ ,/ pu/ =/ buG/ μ/ u/ ,/ 犚/ (/ )/ u/ 其中/ ,/ bu/ =/ nu/ // N/ ,/ nu/ 是/ 落入/ 第/ u/ 个/ 颜色/ 子/ 空间/ (/ 直方图/ 区间/ )/ 的/ 像素/ 的/ 数目/ ,/ G/ (/ μ/ u/ ,/ 犚/ u/ )/ 表示/ 均值/ 向量/ 为/ μ/ u/ 、/ 协方差/ 矩阵/ 为/ 犚/ u/ 的/ 高斯分布/ ./ 注意/ 到式/ (/ 3/ )/ 与/ 文献/ [/ 10/ ]/ 有所不同/ :/ 由于/ 我们/ 不/ 需要/ MeanShift/ 移动/ ,/ 同时/ 为了/ 能够/ 快速/ 计算/ nu/ ,/ 我们/ 未/ 考虑/ 每个/ 像素/ 的/ 加权/ 距离/ ./ 考虑/ 一个/ 由/ N/ 个/ 像素/ 组成/ 的/ 候选/ 图像/ 区域/ 的/ 颜色/ 分布/ 狆/ ′/ =/ [/ p1/ ,/ …/ ,/ pd/ ]/ T/ ,/ 其中/ pu/ =/ buG/ (/ μ/ ′/ u/ ,/ 犚/ ′/ u/ )/ ./ 两个/ 分量/ 分布/ pu/ 和/ pu/ 之间/ 的/ 相似性/ 根据/ Bhatta/ -/ charrya/ 距离/ 来/ 度量/ ρ/ (/ pu/ ,/ pu/ )/ =/ 2nunu/ 犚/ u1exp/ -/ 1/ 因此/ 狆/ 和/ 狆/ ′/ 之间/ 的/ 相似性/ 定义/ 如下/ 2.2/ 构造/ 推广/ 的/ 积分/ 图像/ 快速/ 计算/ 颜色/ 模型/ 基于/ Viola/ -/ Jones/ 的/ 积分/ 图像/ [/ 7/ ]/ ,/ 我们/ 在/ 文献/ [/ 12/ ]/ 中/ 提出/ 了/ “/ 积分/ 直方图/ 图像/ ”/ 的/ 概念/ ,/ 能够/ 快速/ 计算/ 图像/ 中/ 任意/ 矩形/ 区域/ 的/ 直方图/ ./ 注意/ 到/ Porikli/ 等/ 提出/ 了/ 类似/ 的/ 方法/ 并/ 分析/ 了/ 算法/ 的/ 计算/ 复杂性/ [/ 13/ ]/ ./ 将/ 这/ 一/ 思想/ 进一步/ 推广/ ,/ 我们/ 可以/ 构造/ 相应/ 的/ 积分/ 图像/ ,/ 基于/ 这些/ 积分/ 图像/ 能够/ 快速/ 计算/ 图像/ 中/ 任意/ 矩形/ 区域/ 的/ 每/ 一个/ 聚类/ 的/ 均值/ 向量/ 和/ 协方差/ 矩阵/ ,/ 因而/ 能够/ 快速/ 计算/ 颜色/ 模型/ (/ 3/ )/ ./ 给定/ 原始/ 的/ 三/ 通道/ 彩色图像/ 犇/ (/ x/ ,/ y/ )/ =/ (/ Di/ (/ x/ ,/ y/ )/ ,/ i/ =/ 1/ ,/ 2/ ,/ 3/ )/ ,/ 其中/ i/ 是/ 通道/ 索引/ ./ 通过/ 一次/ 扫描/ 原始/ 图像/ ,/ 我们/ 能够/ 构造/ 出/ 积分/ 图像/ Ibu/ (/ x/ ,/ y/ )/ ,/ I/ μ/ u/ ,/ i/ (/ x/ ,/ y/ )/ 和/ I/ σ/ u/ ,/ i/ ,/ j/ (/ x/ ,/ y/ )/ ,/ u/ =/ 1/ ,/ 2/ ,/ …/ ,/ d/ ,/ i/ =/ 1/ ,/ 2/ ,/ 3/ ,/ j/ / i/ ,/ 用于/ 计算/ 每个/ 子/ 空间/ 的/ 像素/ 数目/ 、/ 均值/ 向量/ 和/ 协方差/ 矩阵/ ./ 考察/ 积分/ 图像/ Ibu/ (/ x/ ,/ y/ )/ ,/ 该/ 积分/ 图像/ 在/ 位置/ (/ x/ ,/ y/ )/ 的/ 值/ 等于/ 原/ 图像/ 中/ (/ x/ ,/ y/ )/ 左上/ 的/ 子/ 图像/ 中/ 落入/ 到/ 第/ u/ 个/ 直方图/ 区间/ 的/ 像素/ 的/ 个数/ ,/ 即/ 其中/ δ/ u/ (/ x/ ,/ y/ )/ =/ 1/ ,/ 如果/ 犇/ (/ x/ ,/ y/ )/ 属于/ 第/ u/ 个/ 直方图/ 区间/ ;/ 否则/ δ/ u/ (/ x/ ,/ y/ )/ =/ 0/ ./ 令/ Ibu/ (/ x/ ,/ 0/ )/ =/ 0/ ,/ Ibu/ (/ 0/ ,/ y/ )/ =/ 0/ ,/ 通过/ 下列/ 方程/ 可以/ 构造/ 出/ 积分/ 直方图/ 图像/ Ibu/ (/ x/ ,/ y/ )/ Ibu/ (/ x/ ,/ y/ )/ =/ Ibu/ (/ x/ -/ 1/ ,/ y/ )/ +/ Ibu/ (/ x/ ,/ y/ )/ ,/ Ibu/ (/ x/ ,/ y/ )/ =/ Ibu/ (/ x/ ,/ y/ -/ 1/ )/ +/ δ/ u/ (/ x/ ,/ y/ )/ (/ 7/ )/ 令/ 图像/ 中/ 某/ 一/ 矩形/ 区域/ 的/ 左上角/ 的/ 坐标/ 是/ x/ ,/ (/ )/ y/ ,/ 长/ 和/ 宽/ 分别/ 为/ w/ 和/ h/ ,/ 该/ 矩形/ 区域/ 的/ 直方图/ 可以/ 通过/ 4d/ 次数/ 组/ 索引/ 和/ 3d/ 次/ 加法/ 运算/ 计算出来/ :/ nu/ =/ Ibu/ (/ x/ +/ w/ ,/ y/ +/ h/ )/ -/ Ibu/ (/ x/ +/ w/ ,/ y/ )/ -/ 类似/ 地/ ,/ 我们/ 可以/ 通过/ 定义/ 如下/ 的/ 积分/ 图像/ 计算/ 均值/ 向量/ 和/ 协方差/ 矩阵/ I/ μ/ u/ ,/ i/ (/ x/ ,/ y/ )/ =/ ∑/ x/ / x/ ,/ y/ / yI/ σ/ u/ ,/ i/ ,/ j/ (/ x/ ,/ y/ )/ =/ ∑/ x/ / x/ ,/ y/ / y/ 通过/ 类似/ 于式/ (/ 7/ )/ 的/ 方程/ ,/ 每个/ 直方图/ 区间/ 的/ 均值/ 向量/ 和/ 协方差/ 矩阵/ 的/ 分量/ 可以/ 通过/ 数组/ 索引/ 快速/ 计算出来/ :/ μ/ u/ ,/ i/ =/ (/ I/ μ/ u/ ,/ i/ (/ x/ +/ w/ ,/ y/ +/ h/ )/ -/ I/ μ/ u/ ,/ i/ (/ x/ +/ w/ ,/ y/ )/ -/ σ/ u/ ,/ i/ ,/ j/ =/ (/ I/ σ/ u/ ,/ i/ ,/ j/ (/ x/ +/ w/ ,/ y/ +/ h/ )/ -/ I/ σ/ u/ ,/ i/ ,/ j/ (/ x/ +/ w/ ,/ y/ )/ )/ -/ 其中/ u/ =/ 1/ ,/ 2/ ,/ …/ ,/ d/ ,/ i/ =/ 1/ ,/ 2/ ,/ 3/ ,/ j/ / i/ ./ 因此/ 我们/ 得到/ 第/ u/ 个/ 直方图/ 区间/ 的/ 均值/ 向量/ 和/ 协方差/ 矩阵/ 如下/ μ/ u/ =/ Page4/ 当/ 积分/ 图像/ Ibu/ (/ x/ ,/ y/ )/ ,/ I/ μ/ u/ ,/ i/ (/ x/ ,/ y/ )/ 和/ I/ σ/ u/ ,/ i/ ,/ j/ (/ x/ ,/ y/ )/ 计算/ 完/ 之后/ ,/ 我们/ 可以/ 通过/ 式/ (/ 8/ )/ 和/ 式/ (/ 10/ )/ 将/ 颜色/ 模型/ (/ 3/ )/ 快速/ 计算出来/ ./ 表/ 1/ 给出/ 了/ 对于/ 256/ ×/ 256/ 、/ 256/ ×/ 128/ 和/ 128/ ×/ 128/ 的/ 图像/ 用/ CPU/ 计算/ 积分/ 图像/ 所用/ 的/ 时间/ ,/ 其中/ 聚类/ 数/ d/ 分别/ 是/ 4/ 和/ 8/ ./ 由表中/ 可见/ 在/ CPU/ 上/ 计算/ 积分/ 图像/ 是/ 一个/ 十分/ 耗时/ 的/ 过程/ ,/ 会/ 影响/ 跟踪/ 任务/ 的/ 实时性/ ,/ 对此/ 我们/ 提出/ 了/ 基于/ NVIDIAG80GPU/ 的/ 并行算法/ 计算/ 积分/ 图像/ ./ 2.3/ 基于/ GPU/ 的/ 并行算法/ 快速/ 计算/ 积分/ 图像/ NVIDIA/ 公司/ 推出/ 的/ G80/ 系列/ GPU/ 的/ 硬件/ 体系结构/ 和/ 软件架构/ (/ CUDA/ )/ 与/ 以前/ 的/ 系列/ 相比/ 发生/ 了/ 根本/ 的/ 变化/ (/ http/ :/ // // www/ ./ nvidia/ ./ com/ // object/ // cuda/ _/ home/ ./ html/ )/ ,/ 是/ 真正/ 意义/ 上/ 的/ 桌面/ 并行计算/ 设备/ ./ G80GPU/ 是/ 由/ 一组/ 多处理器/ 组成/ 的/ ,/ 每个/ 多处理器/ 具有/ 单指令/ 、/ 多/ 数据/ 体系结构/ (/ SIMD/ )/ ./ 从/ 软件/ 层面/ 上/ 来说/ ,/ G80GPU/ 能够/ 并发/ 执行/ 数量/ 很大/ 的/ 多个/ 线程/ ,/ 这些/ 线程/ 在/ 不同/ 的/ 数据/ 上/ 执行/ 相同/ 的/ 被/ 称为/ “/ Kernel/ ”/ 的/ 函数/ ./ 执行/ 同一/ Kernel/ 函数/ 的/ 线程/ 按照/ 线程/ 网格/ 的/ 方式/ 组织/ :/ 线程/ 网格/ 由/ 连续/ 编号/ 的/ 线程/ 块/ 组成/ ,/ 而/ 每个/ 线程/ 块/ 又/ 包含/ 连续/ 编号/ 的/ 一系列/ 线程/ ./ 同一/ 线程/ 块/ 中/ 的/ 线程/ 可以/ 访问/ 16K/ 的/ 片/ 上/ 共享/ 高速缓存/ ,/ 每/ 32/ 个/ 线程/ 组成/ 一个/ Warp/ ,/ 每/ half/ -/ Warp/ 的/ 16/ 个/ 线程/ 在/ 物理/ 上/ 同时/ 得到/ 执行/ ./ 我们/ 的/ 积分/ 图像/ 计算/ 基于/ 并行处理/ 算法/ 中/ 经典/ 的/ 前缀/ 求和/ 问题/ (/ prefixsum/ )/ [/ 14/ ]/ ,/ 即/ 给定/ 一组/ 有序/ 元素/ [/ a0/ ,/ a1/ ,/ …/ ,/ am/ -/ 1/ ]/ ,/ 按/ 顺序/ 计算/ 这些/ 元素/ 的/ 部分/ 和/ [/ 0/ ,/ (/ a0/ +/ a1/ )/ ,/ …/ ,/ (/ a0/ +/ a1/ +/ …/ +/ am/ -/ 1/ )/ ]/ ./ 这一/ 算法/ 构造/ 一个/ log2m/ 层/ 的/ 平衡/ 树/ ,/ 包括/ 从根/ 节点/ 向叶/ 节点/ 的/ 向上/ 扫描/ 过程/ 和/ 相反/ 的/ 向下/ 扫描/ 过程/ ./ 在/ 向上/ 扫描/ 阶段/ ,/ 将/ 每/ 一层/ 两个/ 相邻/ 叶/ 节点/ 相加/ 并/ 将/ 值/ 存在/ 后/ 一个/ 叶/ 节点/ 中/ ;/ 而/ 在/ 第/ 2/ 阶段/ ,/ 在/ 每/ 一层/ 将/ 两个/ 相邻/ 节点/ 值/ 互换/ ,/ 然后/ 将/ 二者/ 的/ 和/ 存在/ 后/ 一个/ 叶/ 节点/ 中/ ./ 这一/ 算法/ 共/ 需要/ m/ // 2/ 个/ 线程/ ,/ 计算/ 复杂性/ 是/ O/ (/ n/ )/ ./ 值得注意/ 的/ 是/ ,/ G80/ 的/ 片/ 上/ 高速/ 共享/ 缓存/ 组成/ 16/ 个/ 内存/ 池/ (/ memorybank/ )/ ,/ 两个/ 相邻/ 的/ 32/ -/ bits/ 字/ 被/ 分配/ 到/ 两个/ 相邻/ 的/ 内存/ 池中/ ./ 因此/ 将/ 待处理/ 的/ 数据/ 载入/ 共享内存/ 后/ ,/ 每/ 16/ 个/ 字/ 应/ 填充/ 一个/ 冗余/ 字/ ./ 否则/ ,/ 同一/ half/ -/ warp/ 的/ 线程/ 会/ 访问/ 同一/ 内存/ 池/ ,/ 造成/ 共享内存/ 访问/ 冲突/ 从而/ 使/ 并发/ 线程/ 串行化/ ,/ 从而/ 大大/ 地/ 降低/ 运行/ 效率/ [/ 14/ ]/ ./ 我们/ 提出/ 的/ 积分/ 图像/ 算法/ 首先/ 在/ CPU/ 上/ 完成/ 数据/ 的/ 预处理/ ,/ 即/ 通过/ 直方图/ 的/ Lookup/ 表/ 得到/ 新/ 的/ 四/ 通道/ 图像/ 犇/ (/ x/ ,/ y/ )/ =/ [/ u/ ,/ D1/ (/ x/ ,/ y/ )/ ,/ D2/ (/ x/ ,/ y/ )/ ,/ D3/ (/ x/ ,/ y/ )/ ]/ T/ ,/ 其中/ u/ 表示/ 该/ 像素/ 属于/ 第/ u/ 个子/ 空间/ ,/ 并/ 将/ 数据/ 从/ CPU/ 内存/ 拷贝到/ GPU/ 的/ 全局/ 内存/ 中/ ./ 在/ GPU/ 上/ 的/ 算法/ 创建/ 3/ 个/ 线程/ 网格/ ,/ 分别/ 执行/ 3/ 个/ Kernel/ 函数/ ./ 其中/ 第/ 1/ 个/ 网格/ 的/ 输入/ 数据/ 是犇/ (/ x/ ,/ y/ )/ ,/ 包括/ h/ 个/ 线程/ 块/ ,/ 每个/ 线程/ 块/ 包括/ w/ 个/ 线程/ ,/ 每个/ 线程/ 处理/ 一个/ 像素/ ,/ 其中/ w/ 和/ h/ 分别/ 是/ 原始/ 图像/ 的/ 宽/ 和/ 高/ ,/ 为了/ 计算/ 方便/ ,/ 取/ w/ 和/ h/ 是/ 2/ 的/ 整数/ 次/ 幂/ ./ 第/ 1/ 个/ 网格/ 的/ Kernel/ 函数/ 计算/ 如下/ 的/ 原始/ (/ Raw/ )/ 积分/ 图像/ 第/ 2/ 个/ 网格/ 的/ 输入/ 数据/ 是/ 原始/ (/ Raw/ )/ 积分/ 图像/ ,/ 包括/ 10dh/ 个/ 线程/ 块/ ,/ 每个/ 线程/ 块/ 包括/ w/ // 2/ 个/ 线程/ ,/ 每个/ 线程/ 完成/ 两个/ 相邻/ 叶/ 节点/ 的/ 处理/ ./ 其/ Kernel/ 函数/ 首先/ 将/ 原始/ 积分/ 图像/ 的/ 每/ 一行/ 数据/ 读入/ 片上/ 高速缓存/ ,/ 然后/ 对/ 该行/ 数据/ 执行/ 前缀/ 求和/ 算法/ 从而/ 得到/ 中间/ 结果/ 积分/ 图像/ ./ 第/ 3/ 个/ 网格/ 的/ 输入/ 数据/ 是/ 第/ 2/ 个/ 网格/ 计算/ 的/ 输出/ ,/ 包括/ 10dw/ 个/ 线程/ 块/ ,/ 每个/ 线程/ 块/ 包含/ h/ // 2/ 个/ 线程/ ,/ 其/ Kernel/ 函数/ 将/ 中间/ 结果/ 图像/ 的/ 每/ 一列/ 数据/ 读入/ 片上/ 高速缓存/ ,/ 然后/ 对/ 该列/ 数据/ 执行/ 前缀/ 求和/ 算法/ ./ 最后/ 我们/ 得到/ 了/ 存储/ 在/ GPU/ 的/ 全局/ 内存/ 中/ 的/ 积分/ 图像/ Ibu/ (/ x/ ,/ y/ )/ ,/ I/ μ/ u/ ,/ i/ (/ x/ ,/ y/ )/ 和/ I/ σ/ u/ ,/ i/ ,/ j/ (/ x/ ,/ y/ )/ ./ 表/ 1/ 给出/ 了/ 在/ GPU/ 上/ 和/ CPU/ 上/ 计算/ 积分/ 图像/ 所/ 需要/ 的/ 时间/ ./ 从表中/ 可见/ ,/ 在/ d/ =/ 4/ 时/ 在/ GPU/ 上/ 所/ 需/ 的/ 时间/ 约/ 为/ CPU/ 上/ 所/ 需/ 时间/ 的/ 1/ // 3.7/ ,/ 在/ d/ =/ 8/ 时/ 在/ GPU/ 上/ 所/ 需/ 的/ 时间/ 约/ 为/ CPU/ 上/ 所/ 需/ 时间/ 的/ 1/ // 3/ ./ 表/ 1/ 使用/ GPU/ 和/ CPU/ 计算/ 积分/ 图像/ 的/ 时间/ 比较/ (/ 单位/ :/ ms/ )/ 图像/ 尺寸/ 2.4/ 跟踪/ 算法/ 描述/ 同/ 大多数/ 论文/ 相同/ [/ 3/ -/ 4/ ,/ 6/ ,/ 8/ -/ 9/ ]/ ,/ 目标/ 的/ 形状/ 用/ 矩形/ 描述/ ,/ 该/ 矩形/ 允许/ 在/ 图像/ 平面/ 内/ 平移/ 、/ 其/ 长度/ 和/ 宽度/ 允许/ 以/ 相同/ 的/ 尺度/ 发生变化/ ./ 目标/ 的/ 运动/ 模型/ (/ 先验概率/ 密度/ )/ p/ (/ 狓/ k/ |/ 狓/ k/ -/ 1/ )/ 建模/ 为/ 随机/ 行走/ ,/ 其中/ 狓/ k/ 是/ 目标/ 在/ k/ 时刻/ 的/ 状态/ ./ 目标/ 的/ 观测/ 模型/ 表达/ 为/ π/ (/ 狔/ k/ 狓/ k/ )/ =/ 1Page5/ 我们/ 提出/ 的/ 跟踪/ 算法/ 简略/ 地/ 描述/ 如下/ ,/ 关于/ 粒子/ 滤波器/ 跟踪/ 算法/ 的/ 详细描述/ 可/ 参阅/ 文献/ [/ 2/ ]/ ./ 1/ ./ 初始化/ 2/ ./ 采样/ 和/ 更新/ 阶段/ I/ μ/ u/ ,/ i/ (/ x/ ,/ y/ )/ ,/ I/ σ/ u/ ,/ i/ ,/ j/ (/ x/ ,/ y/ )/ ./ Fori/ =/ 1/ ,/ 2/ ,/ …/ :/ End3/ ./ 输出/ 和/ 重/ 采样/ 4/ ./ k/ =/ k/ +/ 1/ ,/ goto/ 步/ 23/ 实验/ 程序/ 在/ Visual/ C++/ 2005/ 编程/ 环境/ 中/ ,/ 使用/ 主频/ 为/ 3.2/ GHz/ 内存/ 为/ 1.5/ GB/ 的/ 台式机/ HPCompaqdx6128MT/ 调试/ 通过/ ,/ 并行算法/ 在/ 配备/ Geforce8800GTSGPU/ 的/ 影驰/ 显示卡/ 上/ 调试/ 通过/ ./ 程序/ 使用/ RGB/ 颜色/ 空间/ ,/ 初始化/ 是/ 在/ 第/ 1/ 帧/ 中用/ 手工/ 完成/ 的/ ,/ 真值/ (/ Groundtruth/ )/ 也/ 是/ 用/ 手工/ 标注/ 得到/ 的/ ./ 我们/ 使用/ 所/ 提出/ 的/ 算法/ (/ 简称/ 新/ 算法/ ,/ 粒子/ 数/ :/ 500/ )/ 在/ 3/ 个/ 图像/ 序列/ 中/ 进行/ 了/ 实验/ ,/ 并/ 与/ 传统/ 的/ 基于/ 直方图/ (/ 8/ ×/ 8/ ×/ 8/ )/ 的/ 粒子/ 滤波器/ 算法/ (/ 简称/ 传统/ 算法/ ,/ 粒子/ 数/ 200/ )/ 进行/ 了/ 比较/ ./ 论文/ 采用/ 跟踪/ 结果/ 的/ x/ 坐标/ 误差/ 、/ y/ 坐标/ 误差/ 和/ 非/ 重叠/ 区域/ 比/ 来/ 度量/ 跟踪/ 结果/ 的/ 准确/ 程度/ ./ 令/ M/ 和/ T/ 分别/ 为/ 跟踪/ 结果/ 矩形/ 和/ 真值/ 所/ 包围/ 的/ 像素/ 组图/ 2/ 新/ 算法/ 对/ 人脸/ 的/ 跟踪/ 结果/ (/ 从/ 左/ 至/ 右/ 、/ 从上到下/ 依次/ 为/ 第/ 1/ 、/ 50/ 、/ 90/ 、/ 140/ 、/ 200/ 、/ 280/ 、/ 360/ 和/ 490/ 帧/ )/ 成/ 的/ 集合/ ,/ 非/ 重叠/ 区域/ 比/ r/ 定义/ 如下/ r/ =/ M/ / T/ 其中/ / 表示/ 两个/ 集合/ 的/ 对称/ 差/ ,/ ∩/ 表示/ 两个/ 集合/ 的/ 并/ 集/ ,/ |/ ·/ |/ 表示/ 集合/ 包含/ 的/ 元素/ 个数/ ./ r/ 的/ 值/ 介于/ 0/ 和/ 1/ 之间/ ,/ r/ 越小/ 跟踪/ 结果/ 越/ 准确/ ./ 如果/ 跟踪/ 结果/ 完全/ 准确/ ,/ 即/ M/ =/ T/ ,/ 则/ r/ =/ 0/ ;/ 如果/ 跟踪/ 结果/ M/ 与/ T/ 无/ 交集/ ,/ 则/ r/ =/ 1/ ./ 图/ 1/ 表示/ 了/ 非/ 重叠/ 区域/ 比/ 的/ 3/ 种/ 情况/ :/ 0/ </ r/ </ 1/ ,/ r/ =/ 0/ ,/ r/ =/ 1.3/ ./ 1/ 跟踪/ 实验/ 第/ 1/ 个/ 实验/ 是/ 关于/ 办公室/ 环境/ 中/ 的/ 人脸/ 跟踪/ ,/ 图像/ 序列/ 是/ 在/ 典型/ 的/ 办公室/ 环境/ 中/ 采集/ 得到/ ,/ 共/ 500/ 帧/ ,/ 图像/ 尺寸/ 是/ 256/ ×/ 192/ ./ 由于/ 目标/ 和/ 摄像机/ 都/ 在/ 运动/ ,/ 因此/ 目标/ 帧/ 间/ 位移/ 较大/ ./ 基于/ 新/ 算法/ 的/ 典型/ 的/ 跟踪/ 结果/ 如图/ 2/ 所示/ ,/ 从/ 左/ 至/ 右/ 、/ 从上到下/ 依次/ 为/ 第/ 1/ 、/ 50/ 、/ 90/ 、/ 140/ 、/ 200/ 、/ 280/ 、/ 360/ 和/ 490/ 帧/ 的/ 结果/ ./ 可以/ 看到/ 目标/ 存在/ 各种/ 姿态/ 变化/ ,/ 在/ 第/ 200/ 帧/ 附近/ 、/ 280/ 帧/ 附近/ 分别/ 存在/ 短时/ 遮挡/ ,/ 在/ 第/ 360/ 帧/ 附近/ 存在/ 光照/ 变化/ ./ 新/ 算法/ 和/ 传统/ 算法/ 都/ 能够/ 在/ 整个/ 序列/ 中/ 稳定/ 地/ 跟踪目标/ ./ 图/ 3/ 给出/ 了/ 两种/ 算法/ 在/ 每/ 一帧/ 中/ 的/ x/ 坐标/ 、/ y/ 坐标/ 误差/ 和/ 非/ 重叠/ 区域/ 比/ ,/ 其中/ 实线/ 表示/ 新/ 算法/ ,/ 虚线/ 表示/ 传统/ 算法/ ./ 表/ 2/ 给出/ 了/ 两种/ 算法/ 的/ 平均/ 跟踪/ 误差/ 和/ 每/ 帧/ 平均/ 跟踪/ 时间/ ./ 可以/ 看出/ 新/ 算法/ 的/ x/ 坐标/ 误差/ 、/ y/ 坐标/ 误差/ 和/ 非/ 重叠/ 区域/ 比比/ 传统/ 算法/ 小/ ./ 传统/ 算法/ 和/ 新/ 算法/ 的/ 每/ 帧/ 平均/ 跟踪/ 时间/ 分别/ 为/ 30ms/ 和/ 24/ (/ 10/ )/ ms/ ,/ 其中/ 括号/ 中/ 的/ 数据表示/ 在/ 新/ 算法/ 中/ GPU/ 计算/ 积分/ 图像/ 所用/ 的/ 时间/ ./ Page6/ 图/ 3/ 人脸/ 序列/ 中/ 传统/ 算法/ (/ 虚线/ )/ 和/ 新/ 算法/ (/ 实线/ )/ 的/ 跟踪/ 误差/ 比较/ 表/ 2/ 人脸/ 序列/ 中/ 跟踪/ 误差/ (/ 均值/ ±/ 标准差/ )/ 和/ 平均/ 跟踪/ 时间/ 传统/ 算法/ 5.79/ ±/ 5.976/ ./ 32/ ±/ 5.190/ ./ 19/ ±/ 0.1130/ 新/ 算法/ 5.56/ ±/ 5.195/ ./ 77/ ±/ 4.670/ ./ 18/ ±/ 0.0924/ (/ 10/ )/ 注/ :/ / 表示/ 括弧/ 中/ 的/ 数据表示/ 在/ 平均/ 跟踪/ 时间/ 中/ GPU/ 计算/ 积分/ 图像/ 需要/ 的/ 时间/ ./ 图/ 4/ 新/ 算法/ 对/ 车辆/ 的/ 跟踪/ 结果/ (/ 从/ 左/ 至/ 右/ 、/ 从上到下/ 依次/ 为/ 第/ 1/ 、/ 160/ 、/ 350/ 、/ 520/ 、/ 560/ 、/ 610/ 、/ 840/ 和/ 910/ 帧/ )/ 第/ 2/ 个/ 实验/ 是/ 关于/ 街道/ 上/ 的/ 车辆/ 跟踪/ ./ 图像/ 序列/ 是/ 用/ 手持式/ 摄像机/ (/ hand/ -/ heldcamera/ )/ SonyDCR/ -/ PC1000E/ 拍摄/ 到/ 的/ ,/ 共/ 包括/ 930/ 帧/ ,/ 图像/ 尺寸/ 是/ 704/ ×/ 576/ ./ 由于/ 手持式/ 摄像机/ 的/ 抖动/ ,/ 图像/ 中/ 目标/ 经常/ 发生/ 突然/ 的/ 运动/ 和/ 显著/ 的/ 图像/ 模糊/ ,/ 如/ 在/ 第/ 282/ 、/ 445/ 、/ 497/ 、/ 560/ 、/ 785/ 、/ 818/ 帧/ 附近/ 均/ 发生/ 了/ 显著/ 的/ 运动/ 模糊/ ./ 图/ 4/ 给出/ 了/ 基于/ 新/ 算法/ 的/ 典型/ 跟踪/ 结果/ ./ Page7/ 从/ 第/ 550/ 帧/ 至/ 第/ 710/ 帧/ ,/ 一辆/ 与/ 目标/ 颜色/ 相似/ 的/ 汽车/ 从/ 后面/ 开/ 过来/ ,/ 逐渐/ 并/ 几乎/ 完全/ 遮挡/ 了/ 目标/ 车辆/ ./ 这辆/ 位于/ 目标/ 附近/ 的/ 、/ 颜色/ 与/ 目标/ 相近/ 的/ 汽车/ 对于/ 目标/ 的/ 跟踪/ 构成/ 了/ 很大/ 的/ 威胁/ ./ 新/ 算法/ 和/ 传统/ 算法/ 图/ 5/ 车辆/ 序列/ 中/ 传统/ 算法/ (/ 虚线/ )/ 和/ 新/ 算法/ (/ 实线/ )/ 的/ 跟踪/ 误差/ 比较/ 表/ 3/ 车辆/ 序列/ 中/ 跟踪/ 误差/ (/ 均值/ ±/ 标准差/ )/ 和/ 平均/ 跟踪/ 时间/ 传统/ 算法/ 7.63/ ±/ 10.5816/ ./ 11/ ±/ 15.430/ ./ 26/ ±/ 0.1841/ 新/ 算法/ 7.01/ ±/ 7.9613/ ./ 24/ ±/ 9.640/ ./ 23/ ±/ 0.1233/ (/ 13/ )/ 注/ :/ / 表示/ 括弧/ 中/ 的/ 数据/ 是/ 在/ 平均/ 跟踪/ 时间/ 中/ GPU/ 计算/ 积分/ 图像/ 需要/ 的/ 时间/ ./ 第/ 3/ 个/ 实验/ 是/ 关于/ 马路上/ 的/ 行人/ 跟踪/ ./ 图像/ 序列/ 也/ 是/ 用/ 手持式/ 摄像机/ 拍摄/ 到/ 的/ ,/ 共/ 包括/ 350/ 帧/ ,/ 图像/ 尺寸/ 是/ 704/ ×/ 576/ ./ 在/ 该/ 场景/ 中/ 背景/ 非常复杂/ ,/ 行人/ 摩肩接踵/ ,/ 存在/ 非常/ 严重/ 的/ 遮挡/ ,/ 光照/ 变化/ 也/ 很大/ ./ 即使如此/ ,/ 新/ 算法/ 能够/ 在/ 整个/ 序列/ 中/ 稳定/ 地/ 跟踪目标/ —/ —/ —/ 穿/ 红色/ 衣服/ 的/ 行人/ (/ 图中/ 方框/ 所示/ )/ ./ 基于/ 新/ 算法/ 的/ 典型/ 跟踪/ 结果/ 如图/ 6/ 所示/ ./ 由于/ 背景/ 非常复杂/ ,/ 需要/ 在/ 相应/ 的/ 软件/ 中将/ 图像/ 放大/ (/ zoomin/ )/ 才能/ 更/ 清晰/ 地/ 看清/ 整个/ 场景/ 和/ 目标/ ./ 传统/ 算法/ 在/ 第/ 24/ 帧/ 附近/ 就/ 无法/ 跟踪目标/ 而/ 发散/ ;/ 在/ 第/ 180/ 帧/ 我们/ 在/ 每/ 一帧/ 中/ 的/ 跟踪/ 误差/ 和/ 平均/ 跟踪/ 误差/ 分别/ 如图/ 5/ 和表/ 3/ 所示/ ,/ 可见/ 新/ 算法/ 的/ x/ 、/ y/ 坐标/ 误差/ 和/ 非/ 重叠/ 区域/ 比/ 都/ 要/ 小于/ 传统/ 算法/ ./ 新/ 算法/ 和/ 传统/ 算法/ 的/ 平均/ 跟踪/ 时间/ // 帧/ 分别/ 为/ 41ms/ 和/ 33/ (/ 13/ )/ ms/ ./ 将/ 传统/ 算法/ 重新/ 初始化/ ,/ 然而/ 该/ 算法/ 在/ 连续/ 跟踪/ 103/ 帧/ 后/ 又/ 发散/ 了/ ./ 因此/ 图/ 7/ 和表/ 4/ 只/ 给出/ 了/ 新/ 算法/ 的/ 跟踪/ 误差/ ./ 新/ 算法/ 的/ 每/ 帧/ 平均/ 跟踪/ 时间/ 是/ 22/ (/ 4/ )/ ms/ ,/ 其中/ 括号/ 中/ 的/ 数据表示/ 在/ 新/ 算法/ 中/ GPU/ 计算/ 积分/ 图像/ 所用/ 的/ 时间/ ./ 表/ 4/ 行人/ 序列/ 中/ 跟踪/ 误差/ (/ 均值/ ±/ 标准差/ )/ 和/ 平均/ 跟踪/ 时间/ 传统/ 算法/ / / -/ 新/ 算法/ 6.82/ ±/ 5.3110/ ./ 57/ ±/ 8.000/ ./ 31/ ±/ 0.1922/ (/ 4/ )/ 注/ :/ / 表示/ 括弧/ 中/ 的/ 数据/ 是/ 在/ 平均/ 跟踪/ 时间/ 中/ GPU/ 计算/ 积分/ 图像/ 需要/ 的/ 时间/ ./ / / 表示/ 传统/ 算法/ 不能/ 对/ 目标/ 进行/ 跟踪/ ,/ 解释/ 请/ 见/ 论文/ ./ 3.2/ 性能/ 分析/ 就/ 跟踪/ 准确性/ 而言/ ,/ 从/ 人脸/ 跟踪/ 和/ 车辆/ 跟踪/ 的/ 实验/ 可知/ ,/ 新/ 的/ 跟踪/ 算法/ 无论/ x/ 坐标/ 误差/ 、/ y/ 坐标/ 误差/ 还/ 是非/ 重叠/ 区域/ 比/ 都/ 比/ 传统/ 算法/ 小/ ./ 实验/ 结果/ 表/ Page8/ 图/ 6/ 新/ 算法/ 对/ 行人/ 序列/ 的/ 跟踪/ 结果/ (/ 从/ 左/ 至/ 右/ 、/ 从上到下/ 依次/ 为/ 第/ 1/ 、/ 50/ 、/ 150/ 、/ 195/ 、/ 210/ 、/ 240/ 、/ 300/ 和/ 325/ 帧/ )/ 图/ 7/ 行人/ 序列/ 中/ 新/ 算法/ 跟踪/ 误差/ 明新/ 的/ 跟踪/ 算法/ 在/ 跟踪/ 准确性/ 方面/ 优于/ 传统/ 算法/ ,/ 这/ 主要/ 是/ 由于/ 论文/ 中/ 采用/ 的/ 新/ 的/ 颜色/ 模型/ 能/ 更好/ 地/ 描述/ 目标/ 的/ 颜色/ 分布/ ./ 就/ 跟踪/ 时间/ 而言/ ,/ 新/ 算法/ 的/ 跟踪/ 时间/ 显著/ 地/ 少于/ 传统/ 算法/ :/ 人脸/ 跟踪/ 实验/ 中/ 比/ 传统/ 算法/ 少/ 6ms/ ,/ 车辆/ 跟踪/ 实验/ 中/ 比/ 传统/ 算法/ 少/ 8ms/ ./ 这是/ 由于/ 论文/ 提出/ 的/ 基于/ GPU/ 的/ 并行算法/ 能/ 快速/ 地/ 计算/ 出/ 颜色/ 模型/ ,/ 从而/ 在/ 粒子/ 滤波器/ 算法/ 中/ 最/ 耗时/ 的/ 观测/ 概率密度/ (/ 见式/ (/ 5/ )/ 、/ 式/ (/ 13/ )/ )/ 能够/ 快速/ 计算出来/ ./ 行人/ 跟踪/ 实验/ 主要/ 测试/ 算法/ 的/ 鲁棒性/ ./ 在/ 行人/ 序列/ 中/ 严重/ 的/ 遮挡/ 和/ 剧烈/ 的/ 光照/ 变化/ 使/ 目标/ 跟踪/ 变得/ 非常/ 困难/ ./ 在/ 这种/ 情况/ 下/ ,/ 传统/ 的/ 基于/ 颜色/ 直方图/ 的/ 粒子/ 滤波器/ 算法/ 完全/ 失效/ ,/ 无法/ 对/ 目标/ 进行/ 跟踪/ ;/ 而/ 论文/ 中/ 提出/ 的/ 新/ 算法/ 尽管/ 跟踪/ 误差/ 有所增加/ ,/ 仍然/ 能够/ 在/ 整个/ 序列/ 中/ 稳定/ 地/ 跟踪目标/ ./ 这/ 说明/ 新/ 算法/ 在/ 鲁棒性/ 方面/ 优于/ 传统/ 算法/ ./ Page9/ 在/ 实验/ 中/ 传统/ 算法/ 的/ 粒子/ 数取/ 为/ 200/ ,/ 如果/ 进一步/ 增加/ 粒子/ 数/ ,/ 例如/ 增加/ 到/ 与/ 新/ 算法/ 的/ 粒子/ 数/ 相同/ ,/ 即/ 500/ ,/ 传统/ 算法/ 在/ 人脸/ 实验/ 和/ 车辆/ 实验/ 中/ 跟踪/ 准确性/ 有所改善/ ,/ 但/ 仍然/ 无法/ 跟踪/ 行人/ 目标/ ./ 与此同时/ 传统/ 算法/ 的/ 跟踪/ 时间/ 大大增加/ ,/ 人脸/ 跟踪/ 和/ 车辆/ 跟踪/ 时间/ 分别/ 是/ 76ms/ 和/ 103ms/ ,/ 远远/ 多于/ 新/ 算法/ 的/ 跟踪/ 时间/ (/ 分别/ 是/ 24ms/ 和/ 33ms/ )/ ./ 4/ 结论/ 粒子/ 滤波器/ 能够/ 以/ 统一/ 的/ 理论/ 框架/ 处理/ 非线性/ 非/ 高斯/ 问题/ ,/ 因而/ 成为/ 目标/ 跟踪/ 领域/ 一种/ 强有力/ 的/ 跟踪/ 算法/ ./ 然而/ 由于/ 粒子/ 滤波器/ 的/ 蒙特卡洛/ 性质/ ,/ 它/ 一般/ 要求/ 大量/ 的/ 粒子/ 才能/ 准确/ 地/ 表达/ 目标/ 的/ 概率分布/ ,/ 因此/ 算法/ 的/ 计算/ 代价/ 很大/ ./ 为了/ 改善/ 计算/ 效率/ ,/ 在/ 基于/ 颜色/ 的/ 粒子/ 滤波器/ 跟踪/ 中/ 研究者/ 不得不/ 以/ 粗略地/ 表达/ 目标/ 的/ 颜色/ 分布/ 和/ // 或/ 减少/ 粒子/ 数目/ 为/ 代价/ ,/ 因此/ 会/ 影响/ 算法/ 的/ 跟踪/ 性能/ 甚至/ 使/ 跟踪/ 失败/ ./ 本文/ 提出/ 的/ 算法/ 在/ 解决/ 这一/ 问题/ 方面/ 前进/ 了/ 一步/ ./ 我们/ 的/ 算法/ 采用/ 了/ 一种/ 自/ 适应/ 剖分/ 颜色/ 空间/ 的/ 模型/ ,/ 能够/ 准确/ 地/ 表达/ 目标/ 的/ 颜色/ 分布/ ./ 为了/ 能够/ 快速/ 地/ 计算/ 颜色/ 模型/ ,/ 提出/ 了/ 一种/ 推广/ 的/ 积分/ 图像/ ,/ 利用/ 该/ 积分/ 图像/ 我们/ 能够/ 通过/ 简单/ 的/ 数组/ 索引/ 操作/ 快速/ 地/ 计算/ 出/ 每/ 一个/ 子/ 空间/ 的/ 像素/ 数目/ 、/ 高斯分布/ 和/ 协方差/ 矩阵/ ./ 然而/ 构造/ 积分/ 图像/ 本身/ 是/ 一个/ 耗时/ 的/ 过程/ ,/ 为此/ 提出/ 了/ 一种/ 并行算法/ ,/ 该/ 算法/ 能够/ 在/ NVIDIAG80GPU/ 上/ 快速/ 地/ 计算/ 出/ 积分/ 图像/ ./ 我们/ 提出/ 的/ 新/ 的/ 目标/ 跟踪/ 算法/ 不但/ 计算速度/ 快/ ,/ 而且/ 跟踪/ 性能/ 也/ 得到/ 了/ 较大/ 的/ 提高/ ,/ 通过/ 同/ 传统/ 的/ 基于/ 直方图/ 的/ 粒子/ 滤波器/ 算法/ 的/ 比较/ 验证/ 了/ 我们/ 的/ 结论/ ./ 由于/ 粒子/ 滤波器/ 算法/ 估计/ 目标/ 状态/ 的/ 后验/ 分布/ ,/ 能够/ 通过/ 大量/ 的/ 粒子/ 保持/ 对/ 目标/ 状态/ 的/ 多种/ 假设/ ,/ 因此/ 对/ 光照/ 变化/ 、/ 短时/ 遮挡/ 等/ 具有/ 较强/ 的/ 处理/ 能力/ ./ 即使如此/ ,/ 剧烈/ 的/ 光照/ 变化/ 或/ 长时间/ 的/ 遮挡/ 仍然/ 可能/ 使/ 跟踪/ 失败/ ./ 我们/ 将来/ 的/ 工作/ 是/ 进行/ 多/ 传感器/ 或/ 多/ 信息/ 融合/ ,/ 除了/ 颜色/ 信息/ ,/ 进一步/ 考虑/ 其他/ 信息/ 如/ 声音/ 信息/ 、/ 目标/ 的/ 结构/ 知识/ 等/ ,/ 以便/ 能够/ 进行/ 更为/ 鲁棒/ 的/ 目标/ 跟踪/ ./ 致谢/ 感谢/ 审稿/ 专家/ 中肯/ 的/ 审稿/ 意见/ !/ 

