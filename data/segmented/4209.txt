Page1/ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 无线/ 传感器/ 网络/ 连通/ 恢复/ 陈洪生/ 1/ )/ ,/ 2/ )/ 石柯/ 1/ )/ 1/ )/ (/ 华中科技大学/ 计算机科学/ 与/ 技术/ 学院/ 武汉/ 430074/ )/ 2/ )/ (/ 湖北/ 科技/ 学院/ 计算机科学/ 与/ 技术/ 学院/ 湖北/ 咸宁/ 437005/ )/ 摘要/ 在/ 恶劣/ 环境/ 下/ 无线/ 传感器/ 网络/ 的/ 节点/ 和/ 通信/ 链路/ 常常/ 会/ 失效/ ,/ 致使/ 网络/ 被/ 分割/ 为/ 很多/ 分离/ 的/ 分区/ ,/ 因此/ 通过/ 布置/ 尽量少/ 的/ 中继/ 节点/ 实现/ 高/ 健壮性/ 的/ 连通/ 恢复/ 对于/ 维持/ 网络/ 的/ 正常/ 运作/ 必不可少/ ./ 对于/ 一个/ 被/ 分割/ 的/ 无线/ 传感器/ 网络/ ,/ 找到/ 相应/ 的/ 位置/ 布置/ 最少/ 中继/ 节点/ 恢复/ 连通/ 是/ 一个/ NP/ 难题/ ,/ 在/ 实际/ 应用/ 中/ 只能/ 采用/ 启发式/ 算法/ ./ 文中/ 提出/ 了/ 一种/ 新/ 的/ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 算法/ 来/ 恢复/ 网络/ 连通/ ./ 此/ 算法/ 首先/ 探测/ 出/ 各/ 分区/ 并/ 确定/ 各/ 分区/ 的/ 代表/ 节点/ 及其/ 位置/ ,/ 然后/ 寻找/ 合适/ 的/ 四边形/ 连接/ 分割/ 的/ 网络/ 分区/ ,/ 确定/ 这些/ 四边形/ 的/ 斯坦纳/ 点/ ;/ 对/ 无法/ 用/ 四边形/ 连接/ 的/ 各/ 连接/ 部分/ 用/ 三角形/ 斯坦纳/ 树/ 或/ 最小/ 生成/ 树/ 的/ 方法/ 连接/ ;/ 最后/ 沿着/ 斯坦纳/ 树/ 的/ 边/ 在/ 相应/ 位置/ 布置/ 中继/ 节点/ ,/ 实现/ 网络/ 连通/ 的/ 恢复/ ./ 大量/ 的/ 仿真/ 实验/ 表明/ 文中/ 提出/ 的/ 方法/ 能够/ 减少/ 所/ 需/ 中继/ 节点/ 的/ 数量/ ,/ 恢复/ 后/ 的/ 拓扑/ 结构/ 中/ 节点/ 的/ 连通/ 度/ 更/ 高/ ,/ 容错性/ 更好/ ./ 关键词/ 无线/ 传感器/ 网络/ ;/ 连通/ 恢复/ ;/ 四边形/ 斯坦纳/ 树/ ;/ 启发式/ 算法/ ;/ 拓扑/ 结构/ 1/ 引言/ 随着/ 电子/ 技术/ 的/ 飞速发展/ ,/ 无线/ 传感器/ 网络/ WSN/ (/ WirelessSensorNetwork/ )/ 已经/ 得到/ 越来越/ 广泛/ 的/ 应用/ ,/ 并且/ WSN/ 真正/ 实现/ 了/ 无处不在/ 的/ 理念/ ,/ 因此/ 不管/ 是/ 在/ 民用/ 还是/ 特殊/ 行业/ ,/ 特别/ 是/ 在/ 一些/ 恶劣/ 环境/ 下/ 如/ 矿井/ 监测/ 、/ 环境监测/ 、/ 军事/ 侦查/ 、/ 水下/ 监测/ 、/ 海岸线/ 监测/ 和/ 目标/ 跟踪/ 等/ 方面/ 得到/ 广泛应用/ ./ 由于/ 传感器/ 自身/ 资源/ 的/ 限制/ ,/ 其/ 能量/ 有限/ ,/ 并且/ 在/ 恶劣/ 环境/ 下/ 很/ 容易/ 被/ 损坏/ ,/ 而/ 在/ WSN/ 中/ 网络/ 的/ 连通性/ 非常/ 重要/ ,/ 特别/ 是/ 在/ 如/ 军事/ 、/ 环境监测/ 等/ 行业/ 中有/ 可能/ 由于/ 网络/ 的/ 损坏/ 导致/ 不可估量/ 的/ 损失/ ,/ 因此/ 在/ 出现/ 网络/ 分割/ 时/ 能否/ 及时/ 准确/ 地/ 恢复/ 网络/ 连通/ 非常/ 重要/ ./ 在/ 网络/ 遭到/ 大规模/ 损坏/ 时/ ,/ 最/ 关键/ 的/ 问题/ 是/ 如何/ 部署/ 或/ 移动/ 最少/ 的/ 节点/ 到/ 关键/ 的/ 位置/ 恢复/ 网络/ 的/ 连通/ ,/ 此/ 问题/ 已/ 被/ 证明/ 是/ NP/ 问题/ ,/ 因此/ 几乎/ 所有/ 文献/ 在/ 解决/ 这一/ 问题/ 时/ 都/ 采用/ 启发式/ 算法/ 寻找/ 部署/ 位置/ ,/ 其中/ 最/ 常见/ 是/ 斯坦纳/ 最/ 小树/ SMT/ (/ SteinerMini/ -/ mumTree/ )/ 算法/ ,/ 此/ 算法/ 在/ 很多/ 情况/ 下会/ 退化/ 为/ 最小/ 生成/ 树/ 算法/ MST/ _/ 1TRNP/ (/ MinimumSpanningTreebasedonasingle/ -/ TieredRelayNodePlace/ -/ ment/ )/ [/ 1/ -/ 2/ ]/ ./ 最近/ 也/ 有/ 很多/ 研究者/ 提出/ 了/ 其它/ 一些/ 近似算法/ 部署/ 中继/ 节点/ ,/ 如/ 基于/ 特定/ 的/ 蜘蛛网/ 式/ 模型/ 、/ 网格/ 模型/ CORP/ (/ Cell/ -/ basedOptimizedRelaynodePlacement/ )/ 布置/ 中继/ 节点/ [/ 3/ -/ 4/ ]/ ,/ 基于/ 斯坦纳/ 三角/ 近似算法/ FeSTA/ (/ FederatingnetworkSegmentsviaTriangularsteinertreeApproximation/ )/ 布置/ 中继/ 节点/ 等/ [/ 5/ ]/ ./ 本文/ 提出/ 的/ 算法/ 基于/ 四边形/ 斯坦纳/ 树/ ,/ 获取/ 各个/ 分离/ 分区/ 的/ 信息/ ,/ 把/ 各个/ 分离/ 的/ 分区/ 假设/ 为点/ ;/ 然后/ 将/ 所有/ 可能/ 连接/ 各个/ 分区/ 的/ 四边形/ 列举/ 出来/ ,/ 从小到大/ 寻找/ 符合/ 求解/ 四边形/ 斯坦纳/ 点/ 要求/ 的/ 四边形/ ,/ 找出/ 相应/ 的/ 斯坦纳/ 点/ ,/ 通过/ 布置/ 相应/ 中继/ 节点/ 使此/ 4/ 个/ 分区/ 实现/ 连通/ ;/ 接着/ 用/ 上述/ 同样/ 方法/ 继续/ 寻找/ 其它/ 四边形/ 连接/ 4/ 个/ 分区/ ;/ 最后/ 对/ 不能/ 用/ 四边形/ 方法/ 连接/ 的/ 各/ 连接/ 部分/ 用/ 基于/ 斯坦纳/ 三角/ 近似算法/ (/ FeSTA/ )/ 或/ 最小/ 生成/ 树/ 算法/ (/ MST/ _/ 1TRNP/ )/ 布置/ 中继/ 节点/ 到/ 相应/ 的/ 位置/ ,/ 实现/ 整个/ 网络/ 连通/ ./ 本文/ 第/ 2/ 节/ 介绍/ 相关/ 工作/ ;/ 第/ 3/ 节/ 对系统/ 模型/ 进行/ 描述/ ;/ 第/ 4/ 节对/ 本文/ 提出/ 的/ 方法/ 进行/ 了/ 详细/ 阐述/ ;/ 第/ 5/ 节/ 通过/ 实验/ 模拟/ 与/ 其它/ 算法/ 进行/ 比较/ 并/ 进行/ 分析/ ;/ 最后/ 对/ 全文/ 进行/ 总结/ ./ 2/ 相关/ 工作/ 当前/ 无线/ 传感器/ 网络/ 连通/ 恢复/ 的/ 方法/ 大致/ 可/ 分为/ 部署/ 新/ 的/ 中继/ 节点/ 到/ 失效节点/ 或/ 失效/ 区域/ 位置/ 实现/ 连通/ 恢复/ 和/ 移动/ 原有/ 节点/ 实现/ 连通/ 恢复/ ./ 移动/ 原有/ 节点/ 实现/ 连通/ 不需/ 重新/ 布置/ 节点/ ,/ 但/ 需要/ 节点/ 具有/ 一定/ 的/ 可/ 移动性/ ./ Abbasi/ 等/ 人/ [/ 6/ ]/ 提出/ 通过/ 运动/ 协助/ 实现/ 连接/ 恢复/ ,/ 并/ 提出/ 了/ 单/ 连通/ 和/ 双/ 连通/ 的/ 算法/ ./ 算法/ 的/ 基本思路/ 是/ 先/ 找到/ 失效节点/ ,/ 判断/ 失效节点/ 是否/ 为/ 边界/ 节点/ ,/ 其/ 邻居/ 节点/ 是否/ 为/ 边界/ 节点/ ,/ 失效节点/ 是否/ 会/ 导致/ 剪裁/ 顶点/ (/ cutvertex/ )/ 的/ 出现/ ;/ 然后/ 依据/ 最小/ 节点/ 度/ 、/ 最/ 短距离/ 和/ 最高/ 节点/ 编号/ 等/ 因素/ 选择/ 相应/ 节点/ 移动/ 到/ 特定/ 位置/ ;/ 如果/ 节点/ 移动/ 到/ 指定/ 位置/ 后/ 满足/ 连通/ 要求/ 就/ 停止/ 移动/ 其他/ 节点/ ,/ 若/ 不/ 满足要求/ 则/ 再/ 移动/ 其/ 邻居/ 节点/ 中/ 的/ 边界/ 节点/ ,/ 如此/ 继续下去/ ,/ 直到/ 满足要求/ 为止/ ./ Wang/ 等/ 人/ [/ 7/ ]/ 对/ 上述/ 提出/ 的/ 算法/ 进行/ 了/ 剖析/ ,/ 并且/ 指出/ 了/ 其中/ 一些/ 相关/ 理论/ 的/ 缺陷/ ,/ 提出/ 了/ 一种/ 集中式/ 算法/ 实现/ 网络/ 的/ K/ 连通/ 恢复/ ./ Akkaya/ 等/ 人/ [/ 8/ ]/ 提出/ 了/ 基于/ 约束/ 移动/ 的/ 分布式/ 连接/ 恢复/ 方法/ ,/ 能够/ 在/ 单个/ 节点/ 失效/ 和/ 多个/ 节点/ 失效/ 时/ 恢复/ 连接/ ,/ 核心/ 是/ 基于/ 连接/ 约束/ 集/ 确定/ 每个/ 节点/ 邻居/ 集中/ 的/ 支配/ 节点/ 及其/ 是否/ 为/ 凸/ 顶点/ ,/ 在/ 节点/ 失效/ 时/ 判断/ 哪个/ 节点/ 可/ 作为/ 替换/ 节点/ ,/ 然后/ 进行/ 移动/ ,/ 从而/ 恢复/ 网络/ 连通/ ./ 当有/ 多个/ 节点/ 失效/ 时/ ,/ 采用/ 加锁/ 机制/ 解决/ 可能/ 出现/ 的/ 路径/ 和/ 替换/ 节点/ 冲突/ ./ Mi/ 等/ 人/ [/ 9/ ]/ 提出/ 了/ 一种/ 基于/ K/ 跳/ 近邻/ 局部/ 信息/ 恢复/ 网络/ 连通/ 的/ 策略/ ,/ 该/ 策略/ 主要/ 包括/ 两步/ :/ 一是/ 首先/ 进行/ 分布式/ 失效节点/ 探测/ 然后/ 指派/ 最好/ 的/ 可用/ 候选者/ 节点/ 进行/ 恢复/ 操作/ ;/ 二是/ 通过/ 设计/ 好/ 的/ 移动/ 控制器/ 来/ 控制/ 选定/ 的/ 候选/ 节点/ 移动/ 到/ 期望/ 位置/ ,/ 从而/ 避免/ 内部/ 节点/ 的/ 冲突/ 和/ 网络/ 的/ 再/ 分割/ ./ Younis/ 等/ 人/ [/ 10/ ]/ 提出/ 了/ 一种/ 分布式/ 的/ 连通/ 恢复/ 算法/ ,/ 算法/ RIM/ (/ RecoverythroughInwardMotion/ )/ 在/ 节点/ 失效/ 后/ 可以/ 有效/ 地/ 恢复/ 网络/ 连通/ ./ 同/ 其它/ 算法/ 不同/ ,/ RIM/ 不/ 进行/ 失效节点/ 的/ 分析/ 和/ 评估/ ,/ 而是/ 直接/ 触发/ 局部/ 恢复/ 处理过程/ 迁移/ 失效节点/ 的/ 邻居/ 节点/ ./ 为了/ 减少/ 消息/ 负载/ ,/ RIM/ 选择/ 移动/ 距离/ 最小/ 的/ 节点/ 移动/ ./ Imran/ 等/ 人/ [/ 11/ ]/ 提出/ 了/ DCR/ (/ DistributedConnectivityRestoration/ )/ 和/ RAM/ (/ RecoveryAlgorithmforMul/ -/ tiplenodefailures/ )/ 两种/ 算法/ 分别/ 对/ 单个/ 和/ 多个/ 节点/ 失效/ 进行/ 网络/ 连通/ 恢复/ ,/ 采用/ 提前/ 预测/ 和/ 及时/ 响应/ 相结合/ 的/ 混合/ 算法/ 进行/ 恢复/ ,/ 并且/ 分别/ 通过/ 一些/ Page3/ 参数/ 来/ 判定/ 一跳/ 邻居/ 内/ 的/ 备用/ 节点/ ./ 移动/ 节点/ 的/ 方法/ 多/ 是从/ 单个/ 节点/ 失效/ 开始/ 研究/ ,/ 再/ 扩展/ 到/ 多个/ 节点/ 失效/ 的/ 情况/ ./ 当/ 单个/ 或/ 少数/ 节点/ 失效/ 时/ ,/ 移动/ 节点/ 的/ 方法/ 非常/ 有效/ ,/ 但/ 当/ 大规模/ 节点/ 失效/ 时/ ,/ 使用/ 此/ 方法/ 需要/ 移动/ 的/ 节点/ 过多/ ,/ 要求/ 大多数/ 节点/ 可/ 移动/ ,/ 也/ 可能/ 造成/ 相当/ 大/ 的/ 能量/ 损耗/ ,/ 从而/ 缩短/ 节点/ 的/ 生命周期/ ,/ 不利于/ 延长/ 网络/ 的/ 寿命/ ./ 重新部署/ 新/ 的/ 中继/ 节点/ 实现/ 连通/ 对/ 节点/ 没有/ 特殊要求/ ,/ 因而/ 也/ 是/ 本文/ 关注/ 的/ 重点/ ./ 该/ 方法/ 需/ 解决/ 的/ 难题/ 是/ 中继/ 节点/ 应该/ 部署/ 在/ 什么/ 位置/ 从而/ 以/ 最少/ 的/ 中继/ 节点/ 实现/ 连通/ ,/ 该/ 问题/ 已/ 被/ 证明/ 是/ NP/ 难题/ ,/ 因此/ 只能/ 采用/ 启发式/ 算法/ 达到/ 近似/ 最优/ ./ Efrat/ 等/ 人/ [/ 12/ ]/ 提出/ 了/ 一种/ 单层/ 网络/ 架构/ 下/ 的/ 中继/ 节点/ 部署/ 算法/ ,/ 将/ 节点/ 的/ 通信/ 范围/ 抽象/ 为/ 单位/ 圆/ ,/ 基于/ 单位/ 圆/ 的/ 区域/ 重叠/ 来/ 确定/ 中继/ 节点/ 的/ 最佳/ 放置/ 位置/ ./ Pandey/ 等/ 人/ [/ 13/ ]/ 研究/ 了/ 二进制/ 整数/ 线性规划/ 、/ 遗传算法/ 启发式/ 算法/ 解决/ 中继/ 节点/ 部署/ 问题/ 的/ 有效性/ ./ Lee/ 等/ 人/ [/ 14/ ]/ 使用/ 最小/ 斯坦纳/ 树/ 方法/ 提出/ 了/ 分布式/ 中继/ 节点/ 布置/ 算法/ DORMS/ (/ Distributedalgo/ -/ rithmforOptimizedRelaynodeplacementusingMinimumSteinertree/ )/ ,/ 通过/ 构造/ 失效/ 区域/ 的/ 斯坦纳/ 树来/ 减少/ 中继/ 节点/ 的/ 数量/ ./ Senel/ 等/ 人/ [/ 15/ ]/ 提出/ 的/ 最佳/ 连接/ 恢复/ CIST/ (/ ConnectedInter/ -/ SegmentTopology/ )/ 方法/ 是/ 一种/ 连接/ 多个/ 分区/ 的/ 启发式/ 节点/ 部署/ 方法/ ,/ 该/ 方法/ 在/ 构建/ 连接/ 的/ 内/ 拓扑/ 时/ 将/ 所有/ 位于/ 分区/ 边界/ 的/ 节点/ 都/ 看作/ 是/ 分界点/ ,/ 然后/ 找到/ 相邻/ 3/ 个/ 分区/ 的/ 边界/ 节点/ 构成/ 三角形/ ,/ 再/ 通过/ 三角形/ 斯坦纳/ 树/ 的/ 方法/ 部署/ 节点/ ,/ 从而/ 使得/ 所/ 需/ 节点/ 数比/ 直接/ 通过/ 最小/ 生成/ 树/ 方式/ 连接/ 所/ 需/ 的/ 数量/ 要少/ ./ Senel/ 等/ 人/ [/ 3/ ]/ 提出/ 使用/ 蜘蛛网/ 式/ 的/ 布局/ 方法/ ,/ 首先/ 通过/ 凸壳/ 算法/ 确定/ 各个/ 分区/ 的/ 大概/ 范围/ 边界/ ,/ 然后/ 计算/ 出/ 中心/ 位置/ ,/ 再/ 从/ 每个/ 分区/ 中/ 选出/ 一个/ 代表性/ 的/ 节点/ ,/ 连接/ 每个/ 分区/ 中/ 的/ 节点/ 和/ 中心/ 位置/ 节点/ 形成/ 多条/ 线段/ ,/ 接着/ 根据/ 该/ 线段/ 的/ 欧氏/ 距离/ 从大到/ 小/ 排序/ ,/ 按照/ 顺序/ 沿线/ 段/ 布置/ 中继/ 节点/ ,/ 并且/ 采用/ 左右/ 连通/ 的/ 方式/ ,/ 直到/ 所有/ 分区/ 都/ 被/ 连接/ 在/ 一起/ ./ Lee/ 等/ 人/ [/ 4/ ]/ 提出/ 了/ 基于/ 网格/ 的/ 分布式/ 中继/ 布置/ 节点/ 算法/ (/ CORP/ )/ ,/ 这种/ 方案/ 基于/ 网格/ 模型/ 根据/ 分区/ 所在/ 的/ 网格/ 位置/ ,/ 由/ 外向/ 内/ 画/ 长方形/ 找到/ 最短/ 路径/ 布置/ 额外/ 节点/ 以/ 建立/ 各个/ 分区/ 之间/ 的/ 连接/ ,/ 具体步骤/ 包括/ 基于/ 最佳/ 邻居/ 节点/ 的/ 选择/ 和/ 剪裁/ ,/ 此/ 算法/ 所/ 需/ 的/ 中继/ 节点/ 数较/ 多/ ,/ 但是/ 连通性/ 和/ 覆盖性/ 很/ 好/ ./ Lee/ 等/ 人/ [/ 16/ ]/ 也/ 提出/ 了/ 一种/ 基于/ 网格/ 模型/ 的/ 方法/ ,/ 以/ 每个/ 分区/ 中/ 节点/ 的/ 剩余/ 能量/ 作为/ 评价/ 函数/ ,/ 同时/ 考虑/ 服务质量/ 和/ 所/ 需/ 节点/ 数/ ,/ 通过/ 布置/ 尽量少/ 的/ 中继/ 节点/ 满足/ 连通性/ 和/ 服务质量/ 的/ 要求/ ./ Lloyd/ 等/ 人/ [/ 1/ ]/ 提出/ 的/ 最小/ 生成/ 树/ (/ MST/ _/ 1TRNP/ )/ 算法/ 首先/ 使用/ 经典/ 的/ 普利/ 姆/ 算法/ 或/ 克鲁斯/ 卡尔/ 算法/ 寻找/ 最小/ 生成/ 树/ ,/ 然后/ 根据/ 每条/ 边/ 的/ 长度/ 与/ 中继/ 节点/ 通信/ 半径/ 的/ 大小/ ,/ 沿着/ 生成/ 树/ 的/ 边/ 在/ 相应/ 位置/ 部署/ 中继/ 节点/ ./ Senel/ 等/ 人/ [/ 5/ ]/ 提出/ 了/ 基于/ 三角形/ 斯坦纳/ 树/ 的/ FeSTA/ 算法/ ,/ 首先/ 寻找/ 合适/ 的/ 三角形/ 连接/ 分区/ ,/ 然后/ 连接/ 剩下/ 的/ 无法/ 用/ 三角形/ 连接/ 的/ 分区/ ,/ 最后/ 通过/ 三角形/ 斯坦纳/ 树/ 与/ 最小/ 生成/ 树/ 的/ 比较/ ,/ 对/ 未/ 考虑/ 到/ 的/ 情况/ 进行/ 检测/ 以/ 优化/ 斯坦纳/ 树/ ./ 该/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ n4/ )/ ,/ 其中/ n/ 为/ 分区/ 个数/ ./ 该/ 算法/ 在/ 所/ 需/ 的/ 中继/ 节点/ 个数/ 、/ 平均/ 节点/ 连通/ 度/ 、/ 平均/ 路径/ 长度/ 、/ 覆盖范围/ 等/ 方面/ 同/ 其它/ 几种/ 算法/ 相比/ 具有/ 优势/ ./ 本文/ 提出/ 的/ 算法/ 采用/ 四边形/ 斯坦纳/ 树/ ,/ 同/ 三角形/ 斯坦纳/ 树/ 相比/ 进一步/ 减小/ 了/ 所/ 需/ 中继/ 节点/ 的/ 数量/ ,/ 并/ 提高/ 了/ 恢复/ 连接/ 后/ 网络/ 节点/ 的/ 平均/ 连通/ 度/ ./ 3/ 系统/ 模型/ 本文/ 研究/ 的/ 传感器/ 网络/ 部署/ 在/ 森林/ 、/ 战场/ 、/ 沙漠/ 、/ 高山/ 等/ 恶劣/ 环境/ 中/ 监控/ 指定/ 区域/ ,/ 传感器/ 节点/ 是/ 静止/ 的/ ,/ 其/ 感知/ 半径/ 和/ 通信/ 半径/ 都/ 是/ 固定/ 不变/ 的/ ./ 传感器/ 节点/ 只要/ 位于/ 其/ 通信/ 半径/ 范围/ 之内/ 就/ 可以/ 相互/ 通信/ ,/ 并/ 最终/ 将/ 收集/ 到/ 的/ 数据/ 传送/ 到/ 基站/ 进行/ 相应/ 处理/ ./ 传感器/ 节点/ 能够/ 通过/ 相关/ 的/ 定位/ 算法/ 获取/ 自身/ 的/ 位置/ 信息/ ./ 整个/ 网络/ 采用/ 分簇式/ 层次/ 拓扑/ 结构/ ./ 在/ 一般/ 环境/ 中/ ,/ 传感器/ 节点/ 可能/ 会/ 因为/ 能量/ 耗尽/ 而/ 失效/ ,/ 但/ 大多数/ 情况/ 下仅会/ 导致/ 少数/ 节点/ 失效/ ./ 若/ 不/ 影响/ 网络/ 连通/ ,/ 可以/ 不/ 做/ 任何/ 处理/ ,/ 否则/ 也/ 只/ 需/ 通过/ 探测/ 算法/ 找到/ 相应/ 失效节点/ 重新/ 布置/ 少量/ 节点/ 即可/ ./ 但/ 在/ 本文/ 关注/ 的/ 恶劣/ 环境/ 中/ ,/ 除了/ 能量/ 耗尽/ 失效/ ,/ 传感器/ 网络/ 节点/ 也/ 会/ 由于/ 外界/ 环境/ 的/ 影响/ (/ 如/ 炸弹/ 等/ 攻击/ )/ 出现/ 大规模/ 失效/ ,/ 在/ 此/ 情况/ 下/ 就/ 会/ 导致/ 整个/ 网络/ 遭到/ 破坏/ ,/ 出现/ 如图/ 1/ 所示/ 的/ 场景/ ./ Page4/ 在/ 这种/ 情况/ 下/ 实现/ 网络/ 连通/ 要求/ 部署/ 新/ 的/ 节点/ ,/ 不管/ 是/ 新/ 部署/ 同/ 原有/ 节点/ 相同/ 的/ 传感器/ 节点/ 还是/ 特定/ 的/ 用于/ 通信/ 的/ 中继/ 节点/ ,/ 增加/ 节点/ 并/ 进行/ 部署/ 都/ 需要/ 一定/ 的/ 成本/ ,/ 因此/ 使用/ 最少/ 的/ 节点/ 实现/ 网络/ 连通/ 是/ 本文/ 的/ 首要/ 目标/ ./ 这里/ 将/ 所有/ 新/ 部署/ 的/ 节点/ 称为/ 中继/ 节点/ ,/ 并/ 假设/ 这些/ 节点/ 都/ 是/ 静止/ 的/ 且/ 具有/ 相同/ 的/ 通信/ 半径/ R/ ./ 传感器/ 网络/ 遭到/ 破坏/ 后/ 形成/ 的/ 被/ 分割/ 的/ 孤立/ 子/ 网络/ 被/ 称为/ 分区/ ./ 当/ 传感器/ 网络/ 分割/ 成/ 多个/ 孤立/ 的/ 分区/ 后/ ,/ 传感器/ 节点/ 通过/ 相互/ 通信/ 能够/ 获取/ 处于/ 同一/ 分区/ 的/ 其他/ 节点/ 的/ 信息/ ,/ 并/ 选取/ 合适/ 的/ 代表/ 节点/ ,/ 将/ 分区/ 抽象/ 为/ 代表/ 节点/ 的/ 位置/ ./ 网络/ 连通/ 问题/ 抽象/ 为/ 图/ 连通/ 问题/ ,/ 即/ 给定/ n/ 个/ 分区/ ,/ 如何/ 找到/ 一种/ 方法/ 布置/ 一定/ 数量/ 的/ 中继/ 节点/ 将/ n/ 个/ 分区/ 连接起来/ ./ 求解/ 该/ 问题/ 需要/ 网络/ 的/ 全局/ 分区/ 信息/ ,/ 因此/ 需要/ 借助/ 特定/ 的/ 巡视/ 设备/ 将/ 分区/ 的/ 信息/ 传输/ 给/ 基站/ ,/ 基站/ 进行/ 网络连接/ 的/ 恢复/ ./ 在/ 很多/ 实际/ 应用/ 中/ 定期/ 的/ 巡视/ 是/ 必要/ 和/ 可行/ 的/ ,/ 如/ 在/ 生态/ 环境监测/ 中/ 定期/ 的/ 人员/ 巡查/ ,/ 战场/ 中/ 无人机/ 的/ 定期/ 侦察/ 等/ ./ 4/ 基于/ 四边形/ 斯坦纳/ 树/ 连通/ 恢复/ 算法/ 本文/ 提出/ 的/ 算法/ 首先/ 进行/ 分区/ 探测/ ,/ 确定/ 每个/ 分区/ 的/ 代表/ 节点/ 及其/ 位置/ ,/ 然后/ 再/ 通过/ 巡视/ 设备/ 将/ 各/ 分区/ 及/ 代表/ 节点/ 信息/ 传输/ 到/ 基站/ ,/ 最后/ 再/ 根据/ 收集/ 到/ 的/ 各/ 代表/ 节点/ 位置/ 信息/ 使用/ 四边形/ 斯坦纳/ 树/ 算法/ 将/ 各/ 分区/ 连接/ 在/ 一起/ ,/ 使/ 整个/ 网络/ 实现/ 连通/ ./ 4.1/ 分区/ 探测/ 与/ 代表/ 节点/ 确定/ 如何/ 探测/ 孤立/ 的/ 分区/ 及/ 如何/ 找到/ 每个/ 分区/ 的/ 代表/ 传感器/ 节点/ ,/ 是/ 在/ 部署/ 中继/ 节点/ 之前/ 必须/ 要/ 解决/ 的/ 两个/ 问题/ ./ 为此/ ,/ 我们/ 使用/ 构造/ 连通/ 支配/ 集/ 的/ 方法/ 构造/ 出/ 每个/ 孤立/ 分区/ 的/ 连通/ 子树/ ,/ 每个/ 未/ 被/ 损坏/ 的/ 节点/ 从而/ 可以/ 确定/ 自己/ 属于/ 的/ 分区/ 并/ 了解/ 分区/ 的/ 信息/ ./ 对于/ 每个/ 孤立/ 的/ 分区/ ,/ 我们/ 取/ 连通/ 子树中/ 节点/ 度/ 最大/ (/ 邻居/ 节点/ 最/ 多/ )/ 的/ 节点/ 作为/ 每个/ 分区/ 的/ 代表/ 节点/ ./ 具体/ 实现/ 过程/ 如下/ ./ 首先/ 使用/ 相关/ 的/ 分簇/ 算法/ 选取/ 簇头/ 节点/ ,/ 然后/ 簇头/ 节点/ 广播/ 消息/ 给/ 其/ 邻居/ 节点/ ,/ 经过/ 一段/ 收敛/ 时间/ 后/ 收到/ 各/ 邻居/ 节点/ 的/ 回复/ 消息/ ,/ 根据/ 收到/ 的/ 回复/ 消息/ (/ 其中/ 包含/ 邻居/ 节点/ 的/ 位置/ 信息/ )/ 取/ 距离/ 此/ 簇头/ 节点/ 最远/ 的/ 邻居/ 节点/ 作为/ 支配/ 节点/ ./ 相应/ 的/ 支配/ 节点/ 继续执行/ 上述/ 过程/ ,/ 最终/ 可以/ 确定/ 每个/ 孤立/ 分区/ 的/ 支配/ 集/ ,/ 进而/ 形成/ 多个/ 连通/ 子树/ ./ 最后/ 取/ 连通/ 子树中/ 节点/ 度/ 最大/ (/ 邻居/ 节点/ 最/ 多/ )/ 的/ 节点/ 作为/ 每个/ 分区/ 的/ 代表/ 节点/ ,/ 若有/ 多个/ 节点/ 度/ 相同/ 的/ 节点/ ,/ 则/ 取/ ID/ 小/ 的/ 节点/ 作为/ 代表/ 节点/ ./ 确认/ 了/ 每个/ 分区/ 的/ 代表/ 节点/ 后/ ,/ 将/ 代表/ 节点/ 的/ 位置/ 信息/ 及/ 节点/ ID/ 广播/ 给/ 分区/ 中/ 的/ 每个/ 节点/ ,/ 使得/ 同一/ 分区/ 中/ 的/ 每个/ 节点/ 都/ 存储/ 有/ 代表/ 节点/ 的/ 位置/ 信息/ 和/ ID/ ./ 当/ 巡视/ 设备/ 对/ 所/ 部署/ 监控/ 区域/ 进行/ 巡视/ 收集/ 时/ ,/ 巡视/ 设备/ 只要/ 遇到/ 分区/ 中/ 的/ 一个/ 节点/ 即可/ 将/ 获取/ 此/ 分区/ 的/ 代表/ 节点/ 位置/ 信息/ 及/ ID/ ,/ 最终/ 将/ 所有/ 分区/ 代表/ 节点/ 信息/ 传到/ 基站/ ./ 4.2/ 四边形/ 斯坦纳/ 树/ 构造/ 算法/ (/ QuadrilateralSteinerTreeAlgorithm/ )/ 4.2/ ./ 1/ 算法/ 基本/ 理论/ 本文/ 用到/ 的/ 关于/ 斯坦纳/ 树/ 的/ 基本/ 理论/ 和/ 相关/ 术语/ 如下/ ./ 斯坦纳/ 点/ :/ 对于/ 平面/ 中/ 给定/ 的/ n/ 个点/ ,/ 在/ 保证/ 求得/ 一个/ 连接/ 这/ n/ 个点/ 的/ 最/ 小树/ 时/ ,/ 需要/ 找到/ 一些/ 中间/ 点/ ,/ 基于/ 这些/ 中间/ 点/ 与/ 给定/ 的/ n/ 个点/ 构成/ 的/ 顶点/ 集/ 构造/ 出/ 一个/ 最/ 小树/ ,/ 这些/ 中间/ 点/ 称为/ 斯坦纳/ 点/ ./ 三角形/ 的/ 斯坦纳/ 点/ :/ 若/ 三角形/ 的/ 三个/ 内角/ 都/ 小于/ 120/ °/ 则/ 一定/ 可以/ 在/ 此/ 三角形/ 内部/ 找到/ 一点/ ,/ 此点/ 与/ 三角形/ 三个/ 顶点/ 的/ 夹角/ 均/ 为/ 120/ °/ ,/ 则/ 此点/ 即/ 为/ 三角形/ 的/ 斯坦纳/ 点/ ./ 退化/ 型/ 三角形/ :/ 若/ 三角形/ 有/ 一/ 内角/ 大于/ 120/ °/ ,/ 则/ 称为/ 退化/ 型/ 三角形/ ./ 确定/ 三角形/ 的/ 斯坦纳/ 点/ 的/ 方法/ 是/ 分别/ 对/ 三角形/ 任意/ 两边/ 向/ 外作/ 等/ 边/ 三角形/ ,/ 然后/ 再/ 对/ 每个/ 等/ 边/ 三角形/ 作/ 外接圆/ ,/ 则/ 两个/ 外接圆/ 在/ 三角形/ 内部/ 的/ 交点/ 即/ 为/ 斯坦纳/ 点/ ./ 如图/ 2/ 即为/ 构造/ 三角形/ 中/ 斯坦纳/ 点/ 的/ 示意图/ ,/ 其中/ F/ 点/ 即/ 为此/ 三角形/ 的/ 斯坦纳/ 点/ ,/ 相关/ 证明/ 在/ 文献/ [/ 17/ ]/ 中/ 已证/ ./ 凸/ 四边形/ :/ 没有/ 内角/ 大于/ 180/ °/ ,/ 把/ 四边形/ 的/ 任何/ 一边/ 向/ 两方/ 延长/ ,/ 其它/ 各边/ 都/ 在/ 延长/ 所得/ 直线/ 的/ 同/ 一旁/ ,/ 这样/ 的/ 四边形/ 叫做/ 凸/ 四边形/ ./ 波拉克/ 定理/ :/ 设/ A/ 、/ B/ 、/ C/ 、/ D/ 为/ 4/ 个点/ ,/ 它们/ 构成/ 的/ 四边形/ 的/ 两条/ 对角线/ 的/ 交角/ 分别/ 为/ θ/ 和/ 180/ °/ -/ θ/ ,/ Page5/ 当此/ 四边形/ 的/ 两棵/ 斯坦纳/ 树/ 都/ 存在/ 时/ ,/ 若/ θ/ / 90/ °/ 则/ 较/ 短/ 的/ 那/ 棵/ 树/ 应该/ 位于/ 两条/ 对角线/ 的/ 交角/ 为/ θ/ 的/ 区域/ ./ 下面/ 以图/ 3/ 为例/ 说明/ 构造/ 四边形/ 斯坦纳/ 点/ 的/ 过程/ ,/ 首先/ 必须/ 保证/ 四边形/ 为/ 凸非/ 退化/ 型/ 四边形/ ,/ 再/ 根据/ 波拉克/ 定理/ 确定/ 较/ 短/ 的/ 一棵树/ ,/ 即/ θ/ / 90/ °/ 的/ 区域/ ,/ 然后/ 分别/ 对图/ 3/ 中/ 的/ 边/ AD/ 和/ BC/ 向/ 外作/ 正/ △/ ADE/ 和/ △/ BCF/ ,/ 并/ 连接/ 两个/ 正三角形/ 的/ 另外/ 两个/ 顶点/ E/ 和/ F/ ,/ 最后/ 再/ 分别/ 作正/ △/ ADE/ 和/ △/ BCF/ 的/ 外接圆/ ,/ 与/ 直线/ EF/ 分别/ 相交/ 于/ G/ 和/ H/ 两点/ ,/ 则/ G/ 和/ H/ 即为/ 所求/ 斯坦纳/ 点/ ./ 相关/ 证明/ 在/ 文献/ [/ 17/ ]/ 中/ 已证/ ./ 平均/ 节点/ 度/ 定理/ :/ 在/ 同一/ 拓扑/ 结构/ 下/ ,/ 若仅/ 考虑/ 所/ 布置/ 的/ 中继/ 节点/ ,/ 则/ 有/ AvND/ (/ AverageNodeDegree/ )/ 四边形/ 斯坦纳/ 树/ >/ AvND/ 三角形/ 斯坦纳/ 树/ >/ AvND/ 最小/ 生成/ 树/ ./ 证明/ ./ 假设/ 四边形/ 斯坦纳/ 树所/ 需/ 节点/ 数为/ m/ ,/ 三角形/ 斯坦纳/ 树所/ 需/ 节点/ 数为/ n/ ,/ 最小/ 生成/ 树所/ 需/ 节点/ 数为/ q/ ./ 则/ 根据上述/ 四边形/ 斯坦纳/ 树/ 和/ 三角形/ 斯坦纳/ 树及/ 最小/ 生成/ 树/ 的/ 构造/ 过程/ 易知/ :/ 四边形/ 斯坦纳/ 树所/ 部署/ 的/ 中继/ 节点/ 中/ 节点/ 度为/ 3/ 的/ 节点/ 有/ 2/ 个/ ,/ 其它/ 节点/ 度/ 都/ 为/ 2/ ,/ 三角形/ 斯坦纳/ 树所/ 部属/ 的/ 中继/ 节点/ 中/ 节点/ 度为/ 3/ 的/ 节点/ 有/ 1/ 个/ ,/ 其它/ 节点/ 度/ 都/ 为/ 2/ ,/ 最小/ 生成/ 树所/ 部属/ 的/ 中继/ 节点/ 中/ 节点/ 度为/ 3/ 的/ 节点/ 没有/ ,/ 所有/ 节点/ 度/ 都/ 为/ 2/ ./ 因此/ 容易/ 得到/ 3/ 种/ 情况/ 下/ 平均/ 节点/ 度/ :/ AvND/ 四边形/ 斯坦纳/ 树/ =/ (/ 3/ ×/ 2/ +/ (/ m/ -/ 2/ )/ ×/ 2/ )/ // m/ =/ 2/ // m/ +/ 2/ ,/ AvND/ 三角形/ 斯坦纳/ 树/ =/ (/ 1/ ×/ 3/ +/ (/ n/ -/ 1/ )/ ×/ 2/ )/ // n/ =/ 1/ // n/ +/ 2/ ,/ AvND/ 最小/ 生成/ 树/ =/ 2q/ // 2/ =/ 2/ ./ 又/ 因为/ m/ / n/ ,/ 故/ AvND/ 四边形/ 斯坦纳/ 树/ >/ AvND/ 三角形/ 斯坦纳/ 树/ >/ AvND/ 最小/ 生成/ 树得证/ ./ 下面/ 以/ 一个/ 实际/ 场景/ 对/ 三角形/ 斯坦纳/ 树/ 、/ 四边形/ 斯坦纳/ 树/ 和/ 最小/ 生成/ 树/ 这/ 三种/ 连接/ 方法/ 进行/ 对比/ 和/ 分析/ ,/ 假设/ 整个/ 网络/ 在/ 某/ 一/ 时刻/ 被/ 分割/ 为/ 4/ 个/ 孤立/ 的/ 分区/ ,/ 如图/ 4/ 所示/ ,/ 小圆点/ 表示/ 传感器/ 节点/ ,/ T1/ 、/ T2/ 、/ T3/ 和/ T4/ 对应/ 的/ 大/ 圆点/ 表示/ 每个/ 分区/ 的/ 代表/ 节点/ ,/ 其它/ 的/ 大/ 圆点/ 代表/ 找到/ 的/ 斯坦纳/ 点及/ 部署/ 在/ 边上/ 的/ 中继/ 节点/ ./ 图/ 4/ ~/ 图/ 6/ 分别/ 描述/ 了/ 对应/ 的/ 三角形/ 斯坦纳/ 树/ 、/ 四边形/ 斯坦纳/ 树/ 和/ 最小/ 生成/ 树/ ,/ 图/ 4/ 中/ 的/ S/ 是/ 三角形/ 的/ 斯坦纳/ 点/ ,/ 图/ 5/ 中/ 的/ S1/ 和/ S2/ 是/ 四边形/ 斯坦纳/ 点/ ./ 假设/ L/ 是/ 分别/ 求出/ 的/ 树/ 的/ 距离/ 之/ 和/ ,/ 则/ 由/ 图/ 4/ ~/ 图/ 6/ 可知/ ./ L/ 三角形/ 斯坦纳/ 树/ =/ Z0/ +/ Z1/ +/ Z2/ +/ Z3/ =/ 15.39/ L/ 四边形/ 斯坦纳/ 树/ =/ Z0/ +/ Z1/ +/ Z2/ +/ Z3/ +/ Z4/ =/ 15.11/ L/ 最小/ 生成/ 树/ =/ Z0/ +/ Z1/ +/ Z2/ =/ 15.88/ 由此可见/ 在/ 相同/ 拓扑/ 结构/ 下/ ,/ L/ 四边形/ 斯坦纳/ 树/ </ Page6L/ 三角形/ 斯坦纳/ 树/ </ L/ 最小/ 生成/ 树/ ,/ 因此/ 沿/ 四边形/ 斯坦纳/ 树/ 的/ 边/ 布置/ 中继/ 节点/ 相比/ 其他/ 两种/ 所/ 需/ 的/ 节点/ 数量/ 更少/ ./ 若/ 中继/ 节点/ 的/ 通信/ 半径/ 为/ R/ ,/ 所/ 需/ 节点/ 总/ 个数/ Sum/ 为/ Sum/ 三角形/ 斯坦纳/ 树/ =/ |/ ST2/ |/ )/ -/ 1Sum/ 四边形/ 斯坦纳/ 树/ =/ |/ S1T2/ |/ Sum/ 最小/ 生成/ 树/ =/ |/ T1T2/ |/ 假设/ 中继/ 节点/ 通信/ 半径/ R/ 为/ 1.7/ ,/ 则/ 根据上述/ 3/ 个/ 公式/ 可/ 分别/ 计算/ 出/ 上述/ 图/ 4/ ~/ 图/ 6/ 中所/ 需/ 节点/ 个数/ 为/ Sum/ 三角形/ 斯坦纳/ 树/ =/ 8/ ,/ Sum/ 四边形/ 斯坦纳/ 树/ =/ 7/ ,/ Sum/ 最小/ 生成/ 树/ =/ 8/ ./ 具体/ 部署/ 情况/ 如上图/ 4/ ~/ 图/ 6/ 所示/ ,/ 由此/ 也/ 可以/ 看出/ 四边形/ 斯坦纳/ 树/ 的/ 方法/ 所/ 需/ 中继/ 节点/ 数较/ 少/ ,/ 根据上述/ 图中/ 各/ 中继/ 节点/ 的/ 部署/ 情况/ ,/ 很/ 容易/ 计算/ 出图/ 4/ ~/ 图/ 6/ 这/ 3/ 种/ 拓扑/ 结构/ 的/ 平均/ 节点/ 度/ ,/ 故/ 得到/ 3/ 种/ 结构/ 的/ 所有/ 节点/ (/ 包括/ 部署/ 的/ 中继/ 节点/ 和/ 原有/ 的/ 传感器/ 节点/ )/ 平均/ 节点/ 度/ 如下/ :/ 由/ 以上/ 结果/ 可以/ 看出/ 四边形/ 斯坦纳/ 树/ 平均/ 节点/ 度/ 最高/ ,/ 由此可见/ ,/ 本文/ 提出/ 的/ 四边形/ 斯坦纳/ 树/ 方法/ 所/ 构造/ 的/ 网络拓扑/ 结构/ 不仅/ 使用/ 的/ 中继/ 节点/ 数目/ 少/ ,/ 而且/ 网络/ 鲁棒性/ 也/ 很/ 好/ ./ 4.2/ ./ 2/ 算法/ 的/ 主要/ 思想/ 伪/ 代码/ 及/ 实例/ 分析/ 本文/ 提出/ 的/ 四边形/ 斯坦纳/ 树/ 算法/ 是/ 一种/ 启发式/ 算法/ ,/ 首先/ 根据/ 已/ 探测/ 出/ 的/ 各/ 分区/ 位置/ 信息/ ,/ 确定/ 能够/ 连接/ 各个/ 分区/ 的/ 四边形/ 组合/ ,/ 通过/ 将/ 满足条件/ 的/ 四边形/ 按/ 周长/ 排序/ ,/ 按/ 顺序/ 确定/ 各个/ 四边形/ 的/ 斯坦纳/ 点/ ,/ 构造/ 斯坦纳/ 树/ ,/ 最后/ 沿/ 斯坦纳/ 树边/ 部署/ 中继/ 节点/ 实现/ 整个/ 网络/ 的/ 连通/ 恢复/ ./ 我们/ 将/ 以图/ 7/ 所示/ 的/ 网络/ 为例/ 描述/ 该/ 算法/ 的/ 具体步骤/ ./ 在/ 图/ 7/ 中/ ,/ a/ 、/ b/ 、/ c/ 、/ d/ 、/ e/ 、/ f/ 、/ g/ 、/ h/ 、/ i/ 、/ j/ 、/ k/ 、/ l/ 和/ m/ 代表/ 13/ 个/ 分割/ 的/ 分区/ ./ (/ 1/ )/ 将/ 所有/ 分区/ 标记/ 为/ 未/ 连接/ ,/ 初始/ 拓扑/ 结构/ 如图/ 7/ 所示/ ./ (/ 2/ )/ 枚举/ 连接/ 所有/ 分区/ 的/ 非/ 退化/ 凸/ 四边形/ 组合/ ,/ 计算/ 其/ 周长/ 并/ 根据/ 周长/ 从小到大/ 排序/ ,/ 放在/ 一/ 列表/ 中/ ./ (/ 3/ )/ 从前/ 往后/ 依次/ 处理/ 列表/ 中/ 的/ 每个/ 四边形/ ./ 如果/ 该/ 四边形/ 4/ 个/ 顶点/ 代表/ 的/ 分区/ 只有/ 一个/ 或/ 都/ 没有/ 与/ 其它/ 分区/ 连接/ (/ 该/ 四边形/ 的/ 连接数/ 小于/ 等于/ 1/ )/ ,/ 则/ 根据/ 波拉克/ 定理/ 确定/ 较/ 短/ 的/ 斯坦纳/ 树/ ,/ 使用/ 四边形/ 斯坦纳/ 树/ 构造方法/ ,/ 找到/ 斯坦纳/ 点/ ,/ 然后/ 沿着/ 斯坦纳/ 树/ 的/ 边/ 布置/ 中继/ 节点/ ,/ 并/ 将/ 四边形/ 4/ 个/ 顶点/ 代表/ 的/ 分区/ 标记/ 为/ 已经/ 连接/ ,/ 合并/ 这/ 4/ 个/ 分区/ 为/ 一个/ 分区/ 并/ 标明/ 已/ 被/ 连接/ ;/ 否则/ ,/ 不/ 作/ 处理/ ./ 描述/ 该/ 步骤/ 的/ 算法/ 伪/ 代码/ DealQuadrilateral/ (/ G/ )/ 如下/ 所示/ ./ ProcedureDealQuadrilateral/ (/ G/ )/ 1/ ./ listallquadrilateralsinlistQ2/ ./ FOReachqinQ3/ ./ IFqisnotconvexordegenerated4/ ./ deleteitfromQ5/ ./ ENDIF6/ ./ ENDFOR7/ ./ sortQbytheperimeterinascendingorder8/ ./ FOReachqinQinascendingorder9/ ./ IFthenumberofdisconnectedpartitionsthatthe10/ ./ computetheSteinerEdgeanddeployrelaynodes11/ ./ markthese4partitionsbeingconnected12/ ./ ENDIF13/ ./ ENDFORDealQuadrilateral/ (/ G/ )/ 的/ 第/ 3/ 行/ 判断/ 四边形/ 是否/ 为/ 非凸/ 四边形/ 或是/ 退化/ 型/ 四边形/ ,/ 若/ 是/ 则/ 将/ 其/ 删除/ ./ 其中/ 判断/ 是否/ 为/ 凸/ 四边形/ (/ Convex/ )/ 的/ 主要/ 思想/ 是/ 首先/ 从/ 某点/ 出发/ 连接/ 四边形/ 两个/ 相邻/ 点/ i/ 和/ i/ +/ 1/ ,/ 得到/ 一/ 直线/ 方程/ ,/ 然后/ 将/ 其它/ 两点/ 的/ 横坐标/ 值/ Page7/ 代入/ 上述/ 直线/ 方程/ ,/ 得到/ 一/ 纵坐标/ 值/ ,/ 通过/ 比较/ 得到/ 的/ 值/ 与/ 此点/ 的/ 纵坐标/ 值/ ,/ 从而/ 判断/ 此点/ 在/ 上述/ 直线/ 的/ 哪/ 一侧/ ,/ 如此/ 也/ 可/ 判断/ 另/ 一点/ 在/ 直线/ 的/ 哪/ 一侧/ ,/ 若/ 两点/ 不/ 在/ 上述/ 直线/ 两侧/ 则/ 为/ 凹/ 四边形/ ,/ 直接/ 结束/ 判断/ ;/ 否则/ 继续/ 上述/ 判断/ ,/ 直到/ 四边形/ 四个/ 相邻/ 节点均/ 进行/ 判断/ ,/ 都/ 在/ 直线/ 两侧/ ,/ 则/ 此/ 四边形/ 为/ 凸/ 四边形/ ./ 判断/ 是否/ 为/ 退化/ 型/ 四边形/ (/ Degenerate/ )/ 的/ 主要/ 思想/ 是/ 调用/ 波拉克/ 定理/ 判断/ 函数/ 确定/ 斯坦纳/ 点应/ 由/ 哪/ 两条/ 边/ 确定/ ,/ 对/ 这/ 两条/ 边/ 分别/ 向/ 外作/ 等/ 边/ 三角形/ ,/ 得到/ 上述/ 两个/ 等/ 边/ 三角形/ 外面/ 的/ 两个/ 点/ 的/ 坐标值/ ;/ 根据/ 上面/ 两个/ 坐标值/ 得到/ 经过/ 此/ 两点/ 的/ 直线/ 方程/ ;/ 然后/ 分别/ 判断/ 四个/ 顶点/ 在/ 直线/ 的/ 哪/ 一侧/ ,/ 若有/ 3/ 个/ 顶点/ 在/ 同/ 一侧/ 则/ 为/ 非/ 退化/ 型/ 四边形/ ,/ 否则/ 为/ 退化/ 型/ 四边形/ ./ DealQuadrilateral/ (/ G/ )/ 的/ 第/ 10/ 行/ 求解/ 四边形/ 斯坦纳/ 点/ ./ 首先/ 根据/ 波拉克/ 定理/ 判断/ 函数/ ,/ 找到/ 所/ 需要/ 的/ 两条/ 边/ ,/ 从而/ 得到/ 这/ 两条/ 边/ 两个/ 端点/ 的/ 坐标/ ./ 假设/ 其中/ 一条/ 边/ 两点/ 坐标/ 为/ (/ x1/ ,/ y1/ )/ 和/ (/ x2/ ,/ y2/ )/ ;/ 先求/ 出/ 两点/ 间/ 的/ 夹角/ :/ 从而/ 得到/ 根据/ 两点/ 坐标/ 可/ 求得/ 两点/ 间/ 距离/ :/ 从而/ 求得/ 等/ 边/ 三角形/ 的/ 另/ 一点/ 坐标/ :/ 用/ 同样/ 的/ 方法/ 可/ 得到/ 另外/ 一边/ 向/ 外作/ 等/ 边/ 三角形/ 后/ 的/ 坐标/ 假设/ 为/ (/ x4/ ,/ y4/ )/ ;/ 从而/ 可以/ 求得/ 此/ 四边形/ 中所/ 需/ 布置/ 的/ 总/ 节点/ 个数/ 为/ 根据/ 上面/ 所求/ 的/ 两个/ 点/ 坐标/ ,/ 可以/ 求得/ 此/ 四边形/ 对应/ 的/ 两个/ 斯坦纳/ 点/ 坐标/ ,/ 假设/ 其中/ 一个/ 所求/ 斯坦纳/ 点/ 坐标/ 为/ (/ x6/ ,/ y6/ )/ ,/ 首先/ 根据/ 等/ 边/ 三角形/ 3/ 个/ 已知/ 坐标/ ,/ 求/ 的/ 其/ 外接圆/ 的/ 圆心/ 坐标/ 为/ 然后/ 根据/ 上面/ 求得/ 的/ 两个/ 边向/ 外作/ 等/ 边/ 三角形/ 求得/ 的/ 两点/ 坐标/ 求得/ 此/ 直线/ 斜率/ 为/ 又/ 因为/ 斯坦纳/ 点/ 在/ 此/ 直线/ 上/ 故有/ 下式/ 成立/ :/ (/ y6/ -/ y4/ )/ // (/ x6/ -/ x4/ )/ =/ (/ y4/ -/ y3/ )/ // (/ x4/ -/ x3/ )/ (/ 10/ )/ 再有/ 圆心/ 坐标/ 与/ 此点/ 距离/ 为/ 圆/ 的/ 半径/ ,/ 圆/ 的/ 半径/ r/ 很/ 容易/ 可/ 计算/ 出/ :/ 又/ 已知/ 下/ 式/ 成立/ :/ 联/ 立式/ (/ 10/ )/ ~/ (/ 12/ )/ 即可/ 求得/ 坐标/ (/ x6/ ,/ y6/ )/ 的/ 值/ ;/ 用/ 同样/ 方法/ 可以/ 求得/ 四边形/ 中/ 另外/ 一个/ 斯坦纳/ 点/ 的/ 坐标/ (/ x7/ ,/ y7/ )/ ,/ 最后/ 再/ 根据/ 求得/ 的/ 这/ 两个/ 斯坦纳/ 点/ 坐标/ 及/ 四边形/ 4/ 个/ 顶点/ 的/ 坐标/ 和/ 传感器/ 节点/ 的/ 通信/ 半径/ R/ ,/ 即可/ 求得/ 所/ 要/ 布置/ 节点/ 的/ 坐标/ 位置/ ./ 在/ 图/ 7/ 所示/ 的/ 实例/ 中/ ,/ 最小/ 的/ 四边形/ 为/ bced/ ,/ 该/ 四边形/ 中/ 标记/ 为/ 已/ 连接/ 的/ 分区/ 数为/ 0/ ,/ 求出/ 其/ 斯坦纳/ 点/ ,/ 沿/ 斯坦纳/ 树边/ 布置/ 中继/ 节点/ 连接/ 这/ 4/ 个/ 分区/ ,/ 合并/ 此/ 4/ 个/ 分区/ 为/ 1/ 个/ 分区/ ./ 然后/ 继续执行/ 找到/ 周长/ 次/ 小/ 的/ 四边形/ ijlk/ ,/ 此/ 四边形/ 与/ bced/ 情形/ 一样/ ,/ 故作/ 同样/ 处理/ ./ 继续执行/ 步/ 3/ 找到/ 四边形/ efgh/ ,/ 该/ 四边形/ 的/ 标记/ 为/ 已/ 连接/ 的/ 分区/ 数为/ 1/ ,/ 求出/ 其/ 斯坦纳/ 点/ ,/ 沿/ 斯坦纳/ 树边/ 布置/ 中继/ 节点/ 连接/ 这/ 4/ 个/ 分区/ ,/ 将/ f/ ,/ g/ ,/ h/ 这/ 3/ 个/ 分区/ 并入/ 前面/ 合并/ 的/ 第/ 1/ 个/ 分区/ 中/ ,/ 连接/ 部署/ 情况/ 如图/ 8/ ~/ 图/ 10/ 所示/ ./ Page8/ 经过/ (/ 1/ )/ 、/ (/ 2/ )/ 和/ (/ 3/ )/ 处理/ 后/ ,/ 能够/ 用/ 四边形/ 斯坦纳/ 树/ 连接/ 的/ 分区/ 都/ 已/ 被/ 连接/ ,/ 此时/ 剩余/ 的/ 分区/ 已/ 无法/ 使用/ 四边形/ 斯坦纳/ 树/ 连接/ ,/ 因此/ 枚举/ 连接/ 所有/ 剩余/ 分区/ 的/ 三角形/ 组合/ ,/ 放入/ 新建/ 列表/ 中/ ,/ 最后/ 将/ 列表/ 中/ 的/ 三角形/ 按照/ 周长/ 升序/ 排序/ ./ (/ 4/ )/ 从前/ 往后/ 依次/ 处理/ 新建/ 列表/ 中/ 的/ 每个/ 三角形/ ./ 如果/ 3/ 个/ 顶点/ 代表/ 的/ 分区/ 未/ 被/ 连接/ ,/ 则/ 构建/ 该/ 三角形/ 的/ 斯坦纳/ 树/ ,/ 沿着/ 斯坦纳/ 树/ 的/ 边/ 布置/ 相应/ 中继/ 节点/ ,/ 合并/ 这/ 3/ 个/ 分区/ 并/ 标明/ 该/ 分区/ 已/ 被/ 连接/ ,/ 算法/ 的/ 伪/ 代码/ 如/ DealTriangle/ (/ G/ )/ 所示/ ./ ProcedureDealTriangle/ (/ G/ )/ 1/ ./ listalltrianglesinlistT2/ ./ sortTbytheperimeterinascendingorder3/ ./ FOReachtinTinascendingorder4/ ./ IFthenumberofdisconnectedpartitionsthatthe5/ ./ computetheSteinerEdgeanddeployrelay6/ ./ markthese3partitionsbeingconnected7/ ./ ENDIF8/ ./ ENDFOR/ 其中/ 第/ 5/ 行/ 求解/ 三角形/ 斯坦纳/ 点/ ./ 若/ 三角形/ 的/ 内角/ 都/ 小于/ 120/ °/ ,/ 则/ 可以/ 在/ 三角形/ 中/ 找到/ 一/ 斯坦纳/ 点/ ,/ 使得/ 此点/ 与/ 三角形/ 的/ 3/ 个/ 顶点/ 成/ 的/ 夹角/ 均/ 为/ 120/ °/ ./ 已知/ 三角形/ 3/ 个点/ 的/ 坐标/ ,/ 此点/ 坐标/ 也/ 不难/ 求得/ ./ 若/ 三角形/ 的/ 内角/ 有/ 一个/ 大于/ 120/ °/ ,/ 则/ 直接/ 取/ 三角形/ 中较/ 短/ 的/ 两条/ 边/ ,/ 即/ 使用/ 最小/ 生成/ 树/ 方法/ 连接/ 实现/ 连通/ 即可/ ./ 在/ 实例/ 中/ 发现/ △/ kma/ 和/ △/ hmk/ 符合条件/ ,/ 显然/ △/ hmk/ 为/ 较/ 小/ 的/ 三角形/ ,/ 因此/ 对/ 该/ 三角形/ 构建/ 斯坦纳/ 树/ ,/ 沿着/ 斯坦纳/ 树边/ 布置/ 相应/ 中继/ 节点/ ,/ 并/ 将/ m/ 分区/ 及/ 前面/ 形成/ 的/ 两个/ 分区/ 一起/ 合并/ 为/ 一个/ 分区/ ,/ 如图/ 11/ 所示/ ./ (/ 5/ )/ 经过/ 上面/ 的/ 操作/ ,/ 分区/ 数/ 不/ 大于/ 2/ ./ 若/ 此时/ 分区/ 数目/ 为/ 1/ ,/ 算法/ 结束/ ;/ 若为/ 2/ ,/ 则/ 检查/ 所有/ 能/ 连接/ 两个/ 分区/ 的/ 边/ ,/ 找到/ 其中/ 最短/ 的/ 那条/ ,/ 沿此/ 边/ 在/ 相应/ 位置/ 布置/ 中继/ 节点/ ,/ 将/ 两个/ 分区/ 合并/ 成/ 一个/ ,/ 从而/ 使得/ 整个/ 网络/ 实现/ 连通/ ./ 实例/ 中/ 最/ 短/ 的/ 那条/ 边/ 显然/ 是/ ma/ ,/ 故/ 在/ 边/ 的/ 相应/ 位置/ 布置/ 中继/ 节点/ ,/ 将/ 两个/ 分区/ 合并/ 成/ 一个/ ,/ 从而/ 使得/ 整个/ 网络/ 实现/ 连通/ ,/ 如图/ 12/ 所示/ ./ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 连通/ 算法/ (/ QTA/ )/ 的/ 伪/ 代码/ 如下/ ./ 输入/ :/ 网络/ 的/ 拓扑/ 结构/ G/ (/ 包括/ 各/ 分区/ 的/ 位置/ )/ ,/ 中继/ 节/ 输出/ :/ 需/ 重新/ 布置/ 中继/ 节点/ 个数/ 及/ 位置/ 坐标/ 1/ ./ ProcedureQTA/ (/ G/ ,/ R/ )/ 2/ ./ FOReachpartitionp3/ ./ markitasadisconnectedpartition4/ ./ ENDFOR5/ ./ dealQuadrilateral/ (/ G/ )/ // // 处理/ 四边形/ 6/ ./ dealTriangle/ (/ G/ )/ // // 处理/ 三角形/ 7/ ./ IFnodisconnectedpartitionleft8/ ./ algorithmterminate9/ ./ ELSE/ // // 网络/ 还有/ 两个/ 未/ 连接/ 分区/ 10/ ./ findtheshortestedge/ (/ u/ ,/ v/ )/ ,/ uinpartition1andPage911/ ./ computethelengthofedge/ (/ u/ ,/ v/ )/ anddeployrelaynodesalongtheedge12/ ./ mergepartition1andpartition213/ ./ ENDIF/ 主/ 算法/ QTA/ 中/ ,/ 首先/ 标记/ 每个/ 分区/ 为/ 未/ 连接/ 分区/ ,/ 然后/ 分别/ 按/ 四边形/ 斯坦纳/ 树/ 和/ 三角形/ 斯坦纳/ 树/ 的/ 方法/ 沿着/ 斯坦纳/ 边/ 在/ 相应/ 位置/ 部署/ 中继/ 节点/ ,/ 同时/ 对/ 各个/ 分区/ 进行/ 合并/ ,/ 最终/ 在/ 算法/ 执行/ 到/ 第/ 7/ 行时/ ,/ 整个/ 网络/ 中/ 的/ 分区/ 数/ 不会/ 超过/ 2/ ,/ 若/ 分区/ 数为/ 1/ ,/ 表明/ 整个/ 网络/ 已经/ 连通/ ,/ 算法/ 结束/ ./ 否则/ 执行/ 第/ 10/ 行/ ,/ 找到/ 两个/ 分区/ 中/ 最/ 短/ 的/ 边/ ,/ 然后/ 计算/ 其/ 长度/ 并/ 沿着/ 此边/ 部署/ 中继/ 节点/ ,/ 合并/ 两个/ 分区/ ,/ 最终/ 使/ 整个/ 网络/ 连通/ ./ 4.3/ 算法/ 性能/ 分析/ 对于/ 本文/ 提出/ 的/ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 连通/ 算法/ (/ QTA/ )/ 分析/ 了/ 时间/ 复杂度/ 及/ 算法/ 的/ 收敛性/ ,/ 同时/ 分析/ 了/ 分区/ 探测/ 和/ 代表/ 节点/ 确定/ 方法/ 的/ 信息/ 复杂度/ ./ 定理/ 1/ ./ QTA/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ n4logn/ )/ ,/ 证明/ ./ 假设/ m/ 表示/ n/ 个/ 分区/ 所/ 组成/ 的/ 四边形/ 其中/ n/ 表示/ 分区/ 的/ 个数/ ./ 的/ 个数/ ,/ 则/ 在/ 主/ 算法/ QTA/ 中/ ,/ 第/ 2/ ~/ 4/ 行/ 时间/ 复杂度/ 为/ 分区/ 节点/ 个数/ ,/ 为/ 一/ 常数/ n/ ,/ 第/ 5/ 行是/ 四边形/ 处理/ 算法/ ,/ 在/ 此/ 算法/ 中/ ,/ 列举/ 所有/ 四边形/ 的/ 时间/ 复杂度/ 为/ O/ (/ n4/ )/ ,/ 判断/ 是否/ 为/ 凸/ 四边形/ Convex/ 的/ 时间/ 复杂度/ 为/ 一/ 常数/ 4/ ,/ 判断/ 是否/ 为/ 退化/ 型/ 四边形/ Degenerate/ 的/ 时间/ 复杂度/ 仍为/ 一/ 常数/ 4/ ,/ 故/ 算法/ 中/ 第/ 2/ ~/ 6/ 行/ 时间/ 复杂度/ 为/ O/ (/ 4/ ×/ n4/ )/ ,/ 第/ 7/ 行对/ 所有/ 四边形/ 进行/ 从小到大/ 排序/ ,/ 排序/ 算法/ 时间/ 复杂度/ 为/ O/ (/ mlogm/ )/ =/ O/ (/ n4logn/ )/ ,/ 第/ 8/ ~/ 13/ 行/ ,/ 在/ 求解/ 斯坦纳/ 点中/ 时间/ 复杂度/ 也/ 是/ 一/ 常数/ ,/ 是/ 当前/ 求得/ 的/ 四边形/ 所/ 需/ 的/ 中继/ 节点/ 个数/ ,/ 每次/ 执行/ 也/ 是/ 一/ 常数/ ,/ 故/ 时间/ 复杂度/ 也/ 是/ n4/ 的/ 常数/ 倍/ ./ 主/ 算法/ 中/ 执行/ 第/ 6/ 行/ 三角形/ 处理/ 算法/ ,/ 此/ 算法/ 跟/ 四边形/ 类似/ ,/ 其/ 时间/ 复杂度/ 为/ n3/ 的/ 常数/ 倍/ ,/ 然后/ 主/ 算法/ 执行/ 到/ 第/ 10/ 行时/ ,/ 查找/ 较/ 短/ 的/ 边/ 时/ 需要/ 比较/ 次数/ 也/ 不会/ 超过/ n2/ 的/ 常数/ 倍/ ,/ 故/ 整个/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ n4logn/ )/ ./ 定理/ 2/ ./ 本文/ 提出/ 的/ QTA/ 算法/ 一定/ 是/ 收敛/ 的/ ,/ 即/ 最终/ 一定/ 可以/ 将/ 所有/ 分区/ 连接/ 在/ 一起/ ./ 证明/ ./ 在/ 算法/ 中/ 首先/ 列举/ 四边形/ 进行/ 斯坦纳/ 树/ 连接/ ,/ 此时/ 会/ 使得/ 网络/ 形成/ 一些/ 合并/ 后/ 的/ 新/ 分区/ ,/ 然后/ 再/ 通过/ 三角形/ 斯坦纳/ 树/ 连接/ ,/ 三角形/ 斯坦树/ 连接/ 一定/ 会/ 将/ 3/ 个/ 分区/ 连接/ 在/ 一起/ ,/ 最终/ 要么/ 使得/ 整个/ 网络/ 形成/ 一个/ 分区/ ,/ 即/ 实现/ 连通/ ,/ 要么/ 是/ 整个/ 网络/ 仅/ 剩下/ 两个/ 分区/ ./ 若/ 还/ 剩/ 两个/ 分区/ ,/ 在/ 主/ 算法/ 中/ 第/ 10/ 行/ 进行/ 了/ 处理/ ,/ 即/ 找到/ 连接/ 两个/ 分区/ 的/ 最/ 短边/ ,/ 沿着/ 此边/ 部署/ 中继/ 节点/ ,/ 使/ 两个/ 分区/ 合并/ 为/ 一个/ 分区/ ,/ 从而/ 实现/ 整个/ 网络/ 连通/ ,/ 故/ 本文/ 提出/ 的/ 算法/ 一定/ 是/ 收敛/ 的/ ./ 定理/ 3/ ./ 本文/ 提出/ 的/ 分区/ 探测/ 和/ 代表/ 节点/ 确定/ 方法/ 的/ 信息/ 复杂度/ 为/ O/ (/ N2/ )/ ,/ 其中/ N/ 为/ 整个/ 网络/ 被/ 毁坏/ 后/ 仍/ 存在/ 的/ 所有/ 传感器/ 节点/ 的/ 个数/ ./ 证明/ ./ 首先/ 使用/ 相关/ 的/ 分簇/ 算法/ 选取/ 簇头/ 节点/ ,/ 很多/ 文献/ 对分/ 簇/ 算法/ 进行/ 了/ 研究/ ,/ 使/ 信息/ 复杂度/ 提高/ 到/ 了/ O/ (/ N/ )/ ,/ 其中/ N/ 为/ 整个/ 网络/ 中/ 的/ 节点/ 总数/ ,/ 故/ 选取/ 簇头/ 节点/ 的/ 信息/ 复杂度/ 为/ O/ (/ N/ )/ ./ 簇头/ 通过/ 广播/ 消息/ 选取/ 支配/ 节点/ 所用/ 信息/ 数在/ 最坏/ 情况/ 下为/ N/ -/ 1/ ,/ 即/ 网络/ 中/ 所有/ 节点/ 位于/ 一个/ 簇中/ ./ 支配/ 节点/ 继续执行/ 上述/ 过程/ ,/ 实际/ 就是/ 支配/ 节点/ 通过/ 广播/ 消息/ 找到/ 下/ 一个/ 支配/ 节点/ ,/ 因此/ 确定/ 每个/ 支配/ 节点/ 所用/ 信息/ 数/ 最坏/ 情况/ 下均/ 为/ N/ -/ 1/ ,/ 因此/ 假设/ 最终/ 共有/ n/ 个/ 支配/ 节点/ ,/ 则/ 寻找/ 支配/ 节点/ 形成/ 连通/ 子树/ 所用/ 信息/ 总数/ 为/ n/ ×/ (/ N/ -/ 1/ )/ ,/ 选取/ 代表/ 节点/ 只/ 需/ 一个/ 通知/ 消息/ 即可/ 得到/ ./ 代表/ 节点/ 信息/ 发布/ 过程/ 所/ 需/ 信息/ 数为/ Np/ ,/ 其中/ Np/ 为/ 代表/ 节点/ 个数/ 也/ 就是/ 整个/ 网络/ 所有/ 分区/ 个数/ ./ 因此/ 整个/ 方法/ 的/ 信息/ 总数/ 为/ N/ +/ n/ ×/ (/ N/ -/ 1/ )/ +/ Np/ +/ 1/ =/ (/ n/ +/ 1/ )/ ×/ N/ +/ n/ +/ Np/ +/ 1/ ,/ 由此/ 式/ 易知/ ,/ 其中/ n/ 对/ 整个/ 信息/ 复杂度/ 起/ 决定/ 作用/ ,/ 而/ 最坏/ 情况/ 下/ 就是/ 整个/ 网络/ 中/ 的/ 所有/ 节点/ 都/ 是/ 支配/ 节点/ ,/ 此时/ n/ =/ N/ ,/ 故/ 整个/ 算法/ 的/ 信息/ 复杂度/ 为/ O/ (/ N2/ )/ ./ 5/ 性能/ 评价/ 与/ 分析/ 我们/ 通过/ 仿真/ 对/ 本文/ 提出/ 的/ 算法/ 进行/ 了/ 评价/ 与/ 分析/ ,/ 并/ 与/ FeSTA/ (/ 基于/ 三角形/ 斯坦纳/ 树/ 近似算法/ )/ 和/ MST/ _/ 1tRNp/ (/ 最小/ 生成/ 树/ 算法/ )/ 算法/ 进行/ 了/ 比较/ ./ 5.1/ 仿真/ 参数/ 及/ 性能指标/ 我们/ 选用/ OMNET/ ++/ 仿真/ 工具/ ,/ 通信模型/ 采用/ 自由空间/ 通信模型/ ,/ 即/ 两个/ 节点/ 间/ 的/ 距离/ 小于/ 通信/ 半径/ R/ 即可/ 直接/ 通信/ ,/ 否则/ 不能/ 通信/ ./ 通过/ 模拟/ 不同/ 的/ 拓扑/ 结构/ 使/ 网络/ 出现/ 指定/ 个数/ 的/ 分区/ ./ 缺省/ 的/ 部署/ 区域/ 为/ 1500m/ ×/ 1500m/ 的/ 正方形/ 区域/ ,/ 通信/ 半径/ R/ 为/ 100m/ ,/ 分区/ 个数/ 为/ 9/ ./ 在/ 仿真/ 中/ 用到/ 的/ 不同/ 网络/ 特性/ 的/ 配置/ 参数/ 如下/ :/ Page10/ 分区/ 个数/ ./ 分区/ 越/ 多/ ,/ 连通/ 恢复/ 所/ 需/ 的/ 工作量/ 越/ 多/ ,/ 需要/ 更/ 多/ 的/ 中继/ 节点/ ./ 通信/ 半径/ ./ 通信/ 半径/ 对/ 本文/ 提出/ 的/ QTA/ 算法/ 的/ 性能/ 影响/ 很大/ ,/ 通信/ 半径/ 越大/ ,/ 连接/ 各/ 分区/ 所/ 需/ 节点/ 就/ 越少/ ,/ 反之/ 就/ 越/ 多/ ./ 区域/ 大小/ ./ 若/ 使用/ 同样/ 多/ 的/ 分区/ 个数/ ,/ 区域/ 越大/ ,/ 即/ 分区/ 密度/ 越小/ ,/ 所/ 需/ 节点/ 个数/ 会/ 增多/ ./ 性能指标/ 主要/ 包括/ 所/ 需/ 部署/ 的/ 中继/ 节点/ 个数/ 、/ 平均/ 节点/ 的/ 连通/ 度/ 等/ ./ 部署/ 中继/ 节点/ 是/ 为了/ 实现/ 网络/ 连通/ ,/ 显然/ 在/ 保证/ 连通/ 情况/ 下/ ,/ 使用/ 越少/ 的/ 中继/ 节点/ 就/ 越/ 优/ ./ 平均/ 节点/ 度/ 是/ 指/ 平均/ 每个/ 节点/ 所/ 连接/ 其它/ 节点/ 的/ 个数/ ,/ 显然/ ,/ 平均/ 节点/ 度越/ 大/ ,/ 网络/ 的/ 鲁棒性/ 就/ 越/ 好/ ./ 每次/ 仿真/ 执行/ 算法/ 100/ 次/ ,/ 取/ 平均值/ ,/ 每次/ 执行/ 都/ 是/ 在/ 随机/ 产生/ 的/ 一种/ 拓扑/ 结构/ 情形/ 下/ 进行/ ./ 5.2/ 结果/ 分析/ 此/ 部分/ 通过/ 模拟实验/ 从/ 所/ 需/ 部署/ 中继/ 节点/ 个数/ 和/ 平均/ 节点/ 的/ 连通/ 度/ 两个/ 方面/ 对/ 本文/ 提出/ 的/ 基于/ 四边形/ 斯坦纳/ 树/ 算法/ 与/ 基于/ 三角形/ 斯坦纳/ 树/ 近似算法/ 和/ 最小/ 生成/ 树/ 算法/ 进行/ 了/ 比较/ ,/ 在/ 图示/ 中/ QTA/ 表示/ 本文/ 中/ 提出/ 的/ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 连通/ 算法/ ,/ FeSTA/ 表示/ 基于/ 三角形/ 斯坦纳/ 树/ 的/ 近似算法/ ,/ MST/ _/ 1TRNP/ 表示/ 最小/ 生成/ 树/ 算法/ ./ 5.2/ ./ 1/ 部署/ 中继/ 节点/ 个数/ 图/ 13/ 描述/ 了/ 分区/ 个数/ 对/ 部署/ 中继/ 节点/ 个数/ 的/ 影响/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随着/ 分区/ 个数/ 的/ 增加/ ,/ 3/ 种/ 算法/ 所/ 需/ 中继/ 节点/ 个数/ 都/ 会/ 增加/ ./ 这种/ 趋势/ 是/ 符合实际/ 情况/ 的/ ,/ 分区/ 个数/ 的/ 增加/ 必将/ 导致/ 在/ 恢复/ 连通/ 时/ 使用/ 更/ 多/ 的/ 中继/ 节点/ ./ 从图/ 中/ 也/ 很/ 明显/ 地/ 看出/ 本文/ 提出/ 的/ 算法/ 要/ 比/ 其他/ 两种/ 算法/ 所/ 需/ 中继/ 节点/ 个数/ 要少/ ,/ 并/ 随/ 分区/ 个数/ 的/ 增加/ 此/ 优势/ 会/ 更加/ 明显/ ./ 这/ 是因为/ 分区/ 个数/ 越/ 多/ ,/ 使用/ 四边形/ 斯坦纳/ 树/ 能够/ 连接/ 的/ 分区/ 数越/ 多/ ,/ 从而/ 减小/ 了/ 所/ 需/ 中继/ 节点/ 的/ 个数/ ./ 图/ 13/ 随/ 分区/ 个数/ 增加/ 中继/ 节点/ 个数/ 比较/ 图图/ 14/ 描述/ 了/ 分区/ 个数/ 为/ 9/ 时/ ,/ 通信/ 半径/ 改变/ 对/ 所/ 需/ 中继/ 节点/ 个数/ 的/ 影响/ ,/ 从图/ 中/ 发现/ ,/ 随着/ 通信/ 半径/ 增加/ ,/ 所/ 需/ 中继/ 节点/ 个数/ 减少/ ./ 这种/ 趋势/ 也/ 是/ 符合实际/ 情况/ 的/ ,/ 因为/ 随着/ 通信/ 半径/ 的/ 增加/ ,/ 连接/ 路径/ 长度/ 固定/ ,/ 所/ 需/ 中继/ 节点/ 个数/ 必将/ 减少/ ,/ 故当/ 通信/ 半径/ 为/ 250m/ 时/ ,/ 所/ 需/ 中继/ 节点/ 数仅/ 为/ 5/ ./ 同时/ 从图/ 中/ 可以/ 看出/ ,/ 本文/ 提出/ 的/ QTA/ 算法/ ,/ 比/ 其它/ 两种/ 算法/ 所/ 需/ 中继/ 节点/ 个数/ 要少/ ./ 当然/ 随/ 通信/ 半径/ 的/ 增加/ 这一/ 优势/ 变得/ 不是/ 很/ 明显/ ,/ 这/ 是因为/ 通信/ 半径/ 的/ 增加/ 导致/ 连接/ 路径/ 长度/ 的/ 减小/ 带来/ 的/ 优势/ 变得/ 不/ 明显/ ./ 图/ 14/ 随/ 通信/ 半径/ 增加/ 中继/ 节点/ 个数/ 比较/ 图/ (/ 9/ 个/ 分区/ )/ 图/ 15/ 描述/ 了/ 分区/ 数为/ 9/ ,/ 通信/ 半径/ 为/ 100m/ 时/ ,/ 区域/ 大小/ 对/ 所/ 需/ 中继/ 节点/ 个数/ 的/ 影响/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随/ 区域/ 增大/ ,/ 所/ 需/ 的/ 中继/ 节点/ 个数/ 也/ 会/ 增加/ ,/ 这/ 是因为/ 区域/ 增大/ 必将/ 导致/ 分/ 区间/ 距离/ 增大/ ,/ 从而/ 所/ 需/ 中继/ 节点/ 个数/ 也/ 会/ 增加/ ./ 从图/ 中/ 也/ 很/ 明显/ 地/ 看出/ 本文/ 提出/ 的/ 算法/ 要/ 比/ 其它/ 两种/ 算法/ 所/ 需/ 中继/ 节点/ 个数/ 要少/ ,/ 并/ 随/ 区域/ 增大/ 此/ 优势/ 较为/ 明显/ ./ 这/ 是因为/ 随/ 区域/ 增大/ 会/ 使分/ 区间/ 距离/ 增大/ ,/ 而/ 本文/ 提出/ 的/ QTA/ 算法/ 所/ 需/ 距离/ 之/ 和/ 比/ 其它/ 两种/ 方法/ 要/ 小/ ,/ 并/ 随/ 区域/ 增大/ 这个/ 优势/ 会/ 更加/ 明显/ ./ 图/ 15/ 随/ 区域/ 增大/ 增加/ 中继/ 节点/ 个数/ 比较/ 图/ (/ 9/ 个/ 分区/ )/ Page115/ ./ 2.2/ 平均/ 节点/ 连通/ 度图/ 16/ 描述/ 了/ 分区/ 数为/ 9/ ,/ 通信/ 半径/ 为/ 100m/ 时/ ,/ 区域/ 大小/ 对/ 平均/ 节点/ 连通/ 度/ 的/ 影响/ ./ 从图/ 中/ 看出/ 随/ 区域/ 增大/ ,/ 平均/ 节点/ 连通/ 度/ 也/ 增大/ ./ 这/ 是因为/ 随/ 区域/ 增大/ ,/ 所/ 需/ 的/ 中继/ 节点/ 个数/ 也/ 会/ 增加/ ,/ 所以/ 会/ 导致/ 平均/ 节点/ 连通/ 度/ 的/ 增大/ ./ 本文/ 提出/ 的/ QTA/ 算法/ 明显/ 高于/ 其它/ 两种/ 算法/ ,/ 说明/ QTA/ 算法/ 所/ 构建/ 的/ 网络/ 鲁棒性/ 要/ 比/ 其它/ 两种/ 算法/ 好/ 很多/ ./ 这/ 是因为/ QTA/ 算法/ 布置/ 的/ 中继/ 节点/ 在/ 连接/ 4/ 个/ 分区/ 的/ 四边形/ 内部/ ,/ 从而/ 提高/ 了/ 节点/ 的/ 连通/ 度/ ./ 当然/ 随/ 区域/ 增大/ ,/ 此/ 优势/ 变小/ ,/ 这/ 是因为/ 随/ 区域/ 增大/ 本文/ 提出/ 的/ 算法/ 所/ 需/ 布置/ 节点/ 个数/ 要/ 比/ 其它/ 两种/ 算法/ 要少/ ,/ 故/ 优势/ 会/ 变小/ ./ 图/ 16/ 随/ 区域/ 增大/ 平均/ 节点/ 度/ 比较/ 图/ (/ 9/ 个/ 分区/ )/ 图/ 17/ 描述/ 了/ 分区/ 数为/ 9/ ,/ 通信/ 半径/ 对/ 平均/ 节点/ 连通/ 度/ 的/ 影响/ ./ 从图/ 中/ 可以/ 看出/ ,/ 随/ 通信/ 半径/ 增大/ 平均/ 节点/ 连通/ 度/ 减小/ ,/ 这/ 是因为/ 通信/ 半径/ 增大/ 必将/ 导致/ 部署/ 中继/ 节点/ 个数/ 减少/ ,/ 故/ 平均/ 节点/ 连通/ 度/ 减小/ ./ 本文/ 提出/ 的/ QTA/ 算法/ 明显/ 优于/ 其它/ 两种/ 算法/ ,/ 并/ 随/ 通信/ 半径/ 增大/ 这一/ 优势/ 更加/ 明显/ ./ 这/ 说明/ QTA/ 算法/ 布置/ 的/ 节点/ 分布/ 更/ 均匀/ ,/ 形成/ 的/ 网络拓扑/ 结构/ 鲁棒性/ 更好/ ./ 图/ 17/ 随/ 通信/ 半径/ 增大/ 平均/ 节点/ 度/ 比较/ 图/ (/ 9/ 个/ 分区/ )/ 图/ 18/ 描述/ 了/ 分区/ 个数/ 对/ 平均/ 节点/ 连通/ 度/ 的/ 影响/ ,/ 从图/ 中/ 可以/ 看出/ 3/ 种/ 算法/ 随/ 分区/ 数/ 增加/ ,/ 平均/ 节点/ 连通/ 度/ 也/ 增加/ ,/ 并且/ 随/ 分区/ 个数/ 的/ 增大/ ,/ 本文/ 提出/ 的/ QTA/ 算法/ 增长/ 趋势/ 呈/ 升高/ 的/ 趋势/ ,/ 这/ 是因为/ 分区/ 个数/ 越/ 多/ ,/ 使用/ 四边形/ 斯坦纳/ 树/ 能够/ 连接/ 的/ 分区/ 数越/ 多/ ./ 通过/ 对/ 上述/ 实验/ 结果/ 的/ 比较/ 分析/ ,/ 本文/ 提出/ 的/ 算法/ 在/ 所/ 需/ 部署/ 的/ 中继/ 节点/ 个数/ 和/ 平均/ 节点/ 的/ 连通/ 度/ 上/ 都/ 优于/ 其它/ 两种/ 算法/ ,/ 并/ 在/ 某些/ 方面/ 表现/ 出/ 很大/ 的/ 优势/ ,/ 比如/ 所/ 需/ 部署/ 中继/ 节点/ 个数/ 上/ 平均/ 提高/ 11.2/ %/ 左右/ ,/ 平均/ 节点/ 连通/ 度上/ 最高/ 可/ 提高/ 10/ %/ 左右/ ,/ 最低/ 也/ 提高/ 了/ 2/ %/ 左右/ ./ 在/ 文献/ [/ 17/ ]/ 及/ 后来/ 的/ 许多/ 文献/ 中/ 都/ 已/ 证明/ 四边形/ 斯坦树/ 与/ 最小/ 生成/ 树/ 的/ 比值/ 大于/ 等于/ 槡/ 3/ // 2/ ,/ 即/ 理论/ 上/ 提高/ 率/ 不/ 超过/ 13.4/ %/ ./ 由于/ 此/ 问题/ 是/ 一/ NP/ 问题/ ,/ 本文/ 也/ 是/ 采用/ 启发式/ 算法/ 得到/ 近似/ 解/ ,/ 该/ 近似/ 解/ 已经/ 比较/ 接近/ 理想/ 值/ ,/ 因此/ 本文/ 提出/ 的/ 算法/ 性能/ 较/ 好/ ./ 尽管/ 本文/ 提出/ 的/ 算法/ 比/ 其他/ 两种/ 算法/ 所/ 需/ 中继/ 节点/ 个数/ 要少/ ,/ 但是/ 平均/ 节点/ 连通/ 度/ 还/ 高于/ 其他/ 两种/ 算法/ ,/ 这/ 表明/ 通过/ 本文/ 提出/ 的/ 算法/ 恢复/ 的/ 网络/ 具有/ 较强/ 的/ 健壮性/ 和/ 容错性/ ./ 6/ 结论/ 本文/ 提出/ 的/ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 连通/ 算法/ 是/ 一种/ 新/ 的/ 启发式/ 算法/ ,/ 通过/ 此/ 算法/ 可以/ 部署/ 较少/ 的/ 中继/ 节点/ 使得/ 严重破坏/ 的/ 无线/ 传感器/ 网络/ 中/ 的/ 各/ 分区/ 恢复/ 连通/ ./ 此/ 算法/ 主要/ 是/ 采用/ 局部/ 最优/ 的/ 四边形/ 进行/ 斯坦纳/ 树/ 构造/ ,/ 从而/ 使/ 整个/ 网络/ 通过/ 此/ 算法/ 不断/ 迭代/ 形成/ 更大/ 的/ 分区/ ,/ 最后/ 再/ 将/ 剩余/ 的/ 分区/ 用/ 三角形/ 斯坦纳/ 树/ 方法/ 或/ 最小/ 生成/ 树/ 方法/ 实现/ 连通/ ,/ 从而/ 恢复/ 网络/ 连通/ 时/ 使用/ 尽量少/ 的/ 中继/ 节点/ ./ 此外/ ,/ 本文/ 还/ 对/ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 连通/ 算/ Page12/ 法/ 进行/ 了/ 评估/ ,/ 实验/ 结果显示/ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 连通/ 算法/ 要/ 优于/ 当前/ 其它/ 一些/ 算法/ ,/ 从/ 部署/ 节点/ 数/ 、/ 平均/ 节点/ 度/ 等/ 各/ 性能指标/ 上/ 都/ 表现/ 出/ 了/ 算法/ 的/ 优越性/ ,/ 从而/ 进一步/ 表明/ 了/ 使用/ 此/ 算法/ 所/ 构造/ 的/ 连通/ 网络/ 具有/ 较/ 好/ 的/ 鲁棒性/ ./ 下/ 一步/ 的/ 工作/ 是/ 将/ 基于/ 四边形/ 斯坦纳/ 树/ 的/ 连通/ 算法/ 同/ 覆盖/ 和/ 服务质量/ 保证/ 等/ 问题/ 结合/ ,/ 进一步提高/ 恢复/ 连通/ 后/ 网络/ 的/ 健壮性/ 和/ 鲁棒性/ ,/ 同时/ 我们/ 将/ 在/ 实际/ 环境/ 中/ 实现/ 并/ 测试/ 本文/ 提出/ 的/ 算法/ ,/ 并/ 进行/ 深入/ 的/ 研究/ ./ 

