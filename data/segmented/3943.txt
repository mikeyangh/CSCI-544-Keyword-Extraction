Page1/ 基于/ 线性/ 阵列/ 处理器/ 的/ GRAPES/ 核心/ 代码优化/ 王为/ 1/ )/ 张悠慧/ 1/ )/ 姚骏/ 2/ )/ 李艳华/ 1/ )/ 郑纬民/ 1/ )/ 1/ )/ (/ 清华大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100084/ )/ 2/ )/ (/ 奈良/ 先端/ 科技/ 大/ 学院/ 大学/ 信息科学/ 学院/ 奈良/ 日本/ )/ 摘要/ 我国/ 气象局/ 研究/ 开发/ 的/ 数值/ 天气预报/ 系统/ GRAPES/ 作为/ 典型/ 的/ 高性能/ 计算/ 应用/ ,/ 在/ 人民/ 日常生活/ 中/ 有着/ 极其重要/ 的/ 作用/ ,/ 如何/ 提高/ GRAPES/ 系统/ 性能/ 并/ 控制/ 其/ 功耗/ 以/ 支持/ 因/ 增加/ 系统/ 分辨率/ 而/ 急剧/ 增加/ 的/ 运算量/ 是/ 一个/ 重大/ 课题/ ./ 该文/ 使用/ 软硬/ 结合/ 的/ 多种/ 方法/ 对/ GRAPES/ 系统/ 的/ 核心/ 代码/ 进行/ 优化/ ./ 采用/ 线性/ 阵列/ 流水/ 处理器/ LAPP/ 实现/ 循环/ 级/ 并行/ ;/ 采用/ 循环/ 切分/ 、/ 数据/ 预取/ 、/ 缓存/ 分区/ 、/ 多路/ 预取/ 等/ 方法/ 来/ 进行/ 加速/ ;/ 采用/ 电源/ 门控/ 等/ 低功耗/ 技术/ 来/ 降低功耗/ ./ 实验/ 结果表明/ ,/ 优化/ 后/ 的/ GRAPES/ 核心/ 模块/ 运行/ 时/ 平均/ IPC/ 可以/ 达到/ 11.3/ ,/ 是/ 面积/ 相同/ 的/ 通用/ 多核/ 处理器/ 的/ 2.3/ 倍/ ;/ 低功耗/ 技术/ 使/ 其/ 功耗/ 仅为/ 通用/ 多核/ 处理器/ 的/ 12/ %/ ;/ 同时/ 优化/ 后/ 的/ LAPP/ 集群/ 性能/ 功耗/ 比/ 可以/ 达到/ 相同/ 计算能力/ IntelXeon/ 集群/ 的/ 11.7/ 倍/ ./ 关键词/ 计算机系统/ 结构/ ;/ 数值/ 天气预报/ ;/ 赫姆/ 霍兹/ 方程/ ;/ Stencil/ 计算/ 1/ 引言/ 随着/ 高性能/ 计算机技术/ 的/ 发展/ 和/ 应用/ ,/ 单纯/ 依靠/ 提升/ 单核/ 的/ 频率/ 来/ 提高/ 性能/ 已经/ 变得/ 十分困难/ ,/ 并行计算/ 已/ 成为/ 保证/ 大规模/ 计算/ 应用/ 业务/ 运行/ 时效/ 的/ 关键技术/ 之一/ ./ 然而/ ,/ 随着/ 处理器/ 数量/ 的/ 增加/ 系统/ 性能/ 提升/ 逐渐/ 放缓/ ,/ 并/ 可能/ 遭遇/ 性能/ 瓶颈/ 甚至/ 性能/ 下降/ ./ 其中/ 一个/ 重要/ 原因/ 便是/ 通信量/ 随着/ 核数/ 增加/ 而/ 极具/ 增加/ ./ 与此同时/ ,/ 随着/ 应用/ 规模/ 的/ 不断/ 增加/ ,/ 系统/ 所/ 消耗/ 的/ 电力/ 能源/ 不断/ 增加/ ,/ 高性能/ 计算所/ 带来/ 的/ 功耗/ 问题/ 越来越/ 严重/ ./ 从/ 绿色/ 计算/ 的/ 角度看/ ,/ 必须/ 优化/ 系统/ 以/ 降低功耗/ ./ 如何/ 在/ 有效/ 控制/ 功耗/ 的/ 基础/ 上/ 提高/ 性能/ 成为/ 一个/ 必须/ 解决/ 的/ 难题/ ./ 超级计算机/ 系统/ 的/ 使用/ 消耗/ 了/ 大量/ 的/ 电力/ ,/ 计算机系统/ 对于/ 环境/ 的/ 负面影响/ 日益/ 显现出来/ ./ 目前/ 流行/ 的/ 多/ 核/ 、/ 多线程/ 的/ 处理器/ 体系结构/ 更是/ 加剧/ 了/ 功耗/ 问题/ ./ E3/ 报告/ [/ 1/ ]/ 中/ 指出/ ,/ 按照/ 现在/ 的/ 技术/ 发展/ ,/ 一个/ 百亿/ 亿次/ 的/ 系统/ 将会/ 有/ 高达/ 200mW/ 的/ 功耗/ ,/ 这是/ 一个/ 不可/ 想象/ 的/ 数字/ ./ 功耗/ 问题/ 已经/ 成为/ 一个/ 制约/ 高性能/ 计算/ 系统/ 发展/ 的/ 一个/ 瓶颈/ ./ 数值/ 天气预报/ 是/ 高性能/ 计算/ 的/ 典型/ 应用/ 之一/ ./ 天气预报/ 在/ 人民/ 的/ 日常生活/ 中/ 扮演着/ 极其重要/ 的/ 角色/ ./ 随着/ 高性能/ 计算/ 的/ 快速/ 发展/ 和/ 数值/ 天气预报/ 理论/ 的/ 完善/ ,/ 数值/ 天气预报/ 已/ 成为/ 了/ 最/ 重要/ 的/ 量化/ 天气/ 预测/ 的/ 方法/ ./ 我国/ 气象局/ 研究/ 开发/ 的/ 数值/ 天气预报/ 系统/ GRAPES/ (/ Global/ // RegionalAssimilationandPredictionSystem/ )/ 作为/ 典型/ 的/ 高性能/ 计算/ 应用/ 在/ 国内/ 人民/ 日常生活/ 中/ 有着/ 极其重要/ 的/ 作用/ ./ 目前/ 所/ 使用/ 的/ GRAPES/ 系统/ 的/ 水平/ 分辨率/ 为/ 25km/ ./ 为了/ 提高/ 天气预报/ 的/ 准确度/ ,/ 提高/ 系统/ 分辨率/ 是/ 一个/ 最/ 直接/ 最/ 有效/ 的/ 方法/ ./ 然而/ 更/ 高/ 的/ 分辨率/ 会/ 导致/ 计算/ 规模/ 极具/ 增加/ ,/ 并且/ 计算/ 时间/ 步/ 需要/ 随着/ 分辨率/ 增加/ 而/ 相应/ 减小/ 以/ 获得/ 最/ 有效/ 的/ 预测/ ./ 在/ 一定/ 的/ 计算资源/ 下/ 并/ 忽略/ 多核/ 系统/ 通信/ 影响/ ,/ 计算/ 时间/ 和/ 系统/ 分辨率/ 的/ 3/ 次方/ 以及/ 时间/ 步/ 频率/ 与/ 预测/ 时间/ 的/ 一次/ 方/ 成正比/ ./ 因此/ ,/ 提高/ GRAPES/ 系统/ 的/ 性能/ 并/ 控制/ 其/ 功耗/ 以/ 支持/ 在线/ 业务/ 的/ 需求/ 是/ 一个/ 重大/ 课题/ ./ 如何/ 提高/ GRAPES/ 系统/ 性能/ 同时/ 降低功耗/ ,/ 以/ 支持/ 更/ 高分辨率/ 的/ 天气预报/ ,/ 对/ 提升/ 我国/ 气象预报/ 水平/ 至关重要/ ./ 目前/ 国内外/ 对于/ GRAPES/ 研究/ 主要/ 在/ 算法/ 等/ 较为/ 宏观/ 的/ 层面/ 展开/ ,/ 而/ 本文/ 的/ 研究/ 点为/ 以/ 软硬件/ 结合/ 的/ 手段/ 提升/ 系统/ 整体/ 性能/ ./ 赫姆/ 霍兹/ 方程/ (/ Gibbs/ -/ HelmholtzEquation/ )/ 的/ 求解/ 是/ GRAPES/ 系统/ 动态/ 核心/ 中/ 最/ 耗时/ 的/ 部分/ ./ 方程/ 求解/ 部分/ 限制/ 了/ 整个/ 系统/ 性能/ 的/ 提升/ ./ 我们/ 以赫姆/ 霍兹/ 方程/ 求解/ 模块/ 作为/ 研究/ 对象/ 实施/ 优化/ ./ 因为/ 此/ 模块/ 具有/ 密集/ 的/ Stencil/ 访存/ 模式/ ,/ 故/ 我们/ 选取/ 了/ 线性/ 阵列/ 处理器/ (/ LinearArrayPipelineProcessor/ ,/ LAPP/ )/ 对/ 其/ 进行/ 优化/ ./ LAPP/ 是/ 一种/ 粗粒度/ 可/ 配置/ 结构/ (/ CoarseGrainedReconfigurableArchitecture/ ,/ CGRA/ )/ ,/ 可以/ 通过/ 配置/ 功能/ 阵列/ 互连/ 来/ 改变/ 执行/ 模式/ ,/ 具有/ 灵活性/ 强/ ,/ 开发周期/ 较/ 短/ ,/ 应用/ 代码/ 改动/ 少/ ,/ 并且/ 不/ 需要/ 特殊/ 编译器/ 的/ 支持/ 等/ 特点/ ./ LAPP/ 通过/ 将/ 超长/ 指令/ 字/ (/ VLIW/ )/ 映射/ 到/ 功能/ 阵列/ (/ FunctionArray/ )/ [/ 2/ ]/ 上来/ 实现/ 循环/ 级/ 并行/ ,/ 可以/ 用来/ 加速/ 图像处理/ 等/ 循环/ 迭代/ 之间/ 无/ 数据/ 依赖/ 的/ 特定/ 类型/ 的/ 算法/ ./ 使用/ LAPP/ 对/ 特定/ 种类/ 的/ 算法/ 加速/ ,/ 可以/ 得到/ 极高/ 的/ 加速/ 比/ ,/ 同时/ ,/ 其/ 采用/ 的/ 各种/ 低功耗/ 技术/ 能/ 有效/ 降低功耗/ [/ 3/ ]/ ./ 实验/ 结果表明/ ,/ 在/ LAPP/ 上/ 对/ GRAPES/ 进行/ 的/ 优化/ ,/ 相对/ 于/ 相同/ 面积/ 的/ 多/ 核/ 处理器/ ,/ 性能/ 可以/ 提升/ 到/ 2.3/ 倍/ ,/ 功耗/ 只有/ 其/ 12/ %/ ./ 跟/ Intel/ 集群/ 相比/ ,/ LAPP/ 集群/ 可以/ 显著/ 减少/ 通信/ ,/ 使得/ 性能/ 功耗/ 比/ 达到/ 前者/ 的/ 11.7/ 倍/ ./ 本文/ 第/ 2/ 节对/ LAPP/ 进行/ 介绍/ ;/ 第/ 3/ 节/ 讲述/ 对赫姆/ 霍兹/ 方程/ 求解/ 部分/ 的/ 软硬/ 结合/ 的/ 加速/ 方法/ ;/ 第/ 4/ 节为/ 实验/ 结果/ 与/ 分析/ ;/ 第/ 5/ 节为/ 总结/ ./ 2/ 线性/ 阵列/ 流水/ 处理器/ 研究/ 已经/ 证明/ ,/ 针对/ 特定/ 应用/ 或/ 算法/ 设计/ 的/ 专用/ 处理器/ ,/ 通常/ 能够/ 获得/ 远高于/ 通用/ 处理器/ 的/ 性能/ ,/ 同时/ 具有/ 很/ 低/ 的/ 功耗/ ./ 典型/ 的/ 如/ GreenFlash/ [/ 4/ -/ 5/ ]/ 、/ Anton/ [/ 6/ ]/ 等/ 系统/ ,/ 在/ 空气/ 动力学/ 、/ 热力学/ 等/ 应用/ 计算/ 中/ 获得/ 了/ 非常/ 理想/ 的/ 效果/ ./ 应用/ 特定/ 集成电路/ (/ ASICs/ )/ 通过/ 针对/ 某/ 一类/ 应用/ 而/ 定制/ ,/ 根据/ 特定/ 应用/ 的/ 特点/ 做/ 特殊/ 设计/ ,/ 具有/ 非常/ 好/ 的/ 性能/ 和/ 功耗/ 特性/ ./ 但是/ 具有/ 灵活性/ 差/ 、/ 设计/ 周期长/ 等/ 缺点/ ./ 相比之下/ ,/ 粗粒度/ 可/ 配置/ 结构/ 可以/ 通过/ 配置/ 功能/ 阵列/ 互连/ 来/ 改变/ 执行/ 模式/ ,/ 开发/ 周期短/ ,/ 灵活性/ 强/ ,/ 并且/ 具有/ 非常/ 理想/ 的/ 性能/ 功耗/ 比/ ./ LAPP/ 是/ 一个/ 粗粒度/ 可/ 配置/ 结构/ 的/ 处理器/ ./ LAPP/ 的/ 基本/ 结构/ 如图/ 1/ 所示/ ./ 其/ 前端/ 是/ 一个/ 普通/ 流水线/ ,/ 后/ 端/ 使用/ 一个/ 功能/ 阵列/ ./ 功能/ 阵列/ 是/ 一个二维/ 结构/ ./ 每行/ 用来/ 映射/ 同一/ 执行/ 时钟/ 周期/ 的/ 多条/ 指令/ ,/ 纵向/ 用来/ 映射/ 不同/ 的/ 循环/ 迭代/ ./ 指令/ 映射/ 单元/ (/ MAP/ )/ [/ 7/ ]/ 负责/ 把/ VLIW/ 指令/ 映射/ 到/ 功能/ 阵列/ 上/ ./ Page3/ 图/ 1LAPP/ 结构/ L0/ $/ 为/ 0/ 级/ 缓存/ ,/ 用于/ 向/ 功能/ 阵列/ 中/ 的/ 执行/ 单元/ 提供数据/ ,/ 并/ 通过/ 缓存/ 控制器/ (/ LSU/ )/ 实现/ 灵活/ 可变/ 的/ 数据通路/ ,/ 避免/ 数据/ 的/ 重复/ 载入/ ./ LAPP/ 拥有/ 普通/ 模式/ 和/ 阵列/ 模式/ 两种/ 执行/ 模式/ ./ 阵列/ 模式/ 可以/ 把/ 程序/ 的/ 内层/ 循环/ 映射/ 到/ 其/ 功能/ 阵列/ 上/ ,/ 利用/ 循环/ 迭代/ 之间/ 的/ 并行/ 来/ 提升/ 性能/ ./ LAPP/ 的/ 加速/ 的/ 基本/ 思想/ 是/ 把/ 内层/ 循环/ 的/ 每条/ 指令/ 在/ 每个/ 流水/ 段里逐/ 时钟/ 周期/ 地/ 映射/ 到/ 功能/ 阵列/ 上/ ,/ 这样/ 循环/ 不同/ 迭代/ 的/ 指令/ 可以/ 同时/ 存在/ 于/ 功能/ 阵列/ 之中/ 进行/ 循环/ 级/ 并行/ ./ LAPP/ 阵列/ 模式/ 下/ 执行/ 的/ 性能/ 可以/ 用式/ (/ 1/ )/ 表示/ ,/ 其中/ N/ 为/ 循环/ 次数/ ,/ SNEW/ 为/ Load/ 指令/ 的/ 时间/ 开销/ ,/ SOUT/ 为/ Store/ 指令/ 的/ 时间/ 开销/ ,/ ST/ 为/ Store/ 指令/ 数/ ,/ OA/ 为/ 功能/ 单元/ 阵列/ 填充/ 的/ 时间/ 开销/ ./ TA/ =/ SNEW/ ·/ N/ +/ ST/ ·/ N/ +/ OA/ ·/ ST/ +/ SOUT/ ·/ NLAPP/ 采用/ 了/ 电源/ 门控/ (/ PowerGating/ )/ 、/ 时钟/ 门限/ (/ ClockGating/ )/ 、/ 动态/ 变压/ (/ DynamicVoltageScaling/ ,/ DVS/ )/ 等/ 低功耗/ 技术/ 来/ 控制/ 功耗/ [/ 8/ -/ 10/ ]/ ./ 在/ 普通/ 模式/ 下/ ,/ 传输/ 寄存器/ 组/ (/ PropagationRegisters/ )/ 、/ 映射/ 单元/ (/ MapUnit/ )/ 和/ 数据/ 0/ 级/ 缓存/ 等/ 处于/ 关闭/ 状态/ ./ 数据/ 一级/ 缓存/ 在/ 缺失/ 时/ 采用/ 时钟/ 门控/ 关闭/ ,/ 直到/ 数据/ 获取/ 后/ 才/ 开启/ ;/ 在/ 阵列/ 执行/ 模式/ 下/ ./ 只有/ 有/ 指令/ 映射/ 的/ 执行/ 部件/ 才/ 会/ 开启/ ,/ 没有/ 指令/ 映射/ 的/ 执行/ 单元/ 将/ 用/ 电源/ 门控/ 技术/ 关闭/ ./ 当/ 指令/ 映射/ 完成/ 时/ ,/ LAPP/ 进入/ 阵列/ 执行/ 模式/ ,/ 指令/ 的/ 一级/ 缓存/ 不再/ 需要/ ,/ 这时/ 指令/ 一级/ 缓存/ 用/ 动态/ 变压/ 技术/ 进入/ 睡眠/ 模式/ ./ 取指令/ 和/ 指令/ 译码/ 只/ 在/ 普通/ 模式/ 下/ 使用/ ./ 在/ 阵列/ 模式/ 下用/ 电源/ 门控/ 技术/ 关闭/ ./ MAP/ 单元/ 用来/ 将/ 指令/ 映射/ 到/ 对应/ 的/ 单元/ 之中/ ,/ 只有/ 在/ 阵列/ 建立/ 阶段/ 才/ 会/ 使用/ ,/ 其它/ 阶段/ 用/ 电源/ 门控/ 技术/ 来/ 关闭/ ./ LAPP/ 的/ 动态/ 的/ 指令/ 调度/ 器/ 和/ 一个/ 直接/ 调度/ 器/ 模型/ 相比/ ,/ 芯片/ 面积/ 和/ 延迟/ 分别/ 减少/ 到/ 直接/ 模型/ 的/ 43/ %/ 和/ 70/ %/ ./ 同时/ ,/ LAPP/ 采用/ 分/ 时/ 机制/ 来/ 减少/ 所/ 需要/ 的/ 功能/ 单元/ ,/ 消除/ 物理/ 上/ 的/ 面积/ 限制/ ,/ 使得/ 每块/ 面积/ 的/ 性能/ 提升/ 了/ 16/ %/ ,/ 同时/ 能耗/ 减少/ 20/ %/ [/ 11/ ]/ ./ 实验/ 结果表明/ ,/ 低功耗/ 技术/ 使/ LAPP/ 在/ 执行/ GRAPES/ 核心/ 代码/ 时/ 功耗/ 仅/ 有/ 相同/ 芯片/ 面积/ 多核/ 处理器/ 的/ 12/ %/ ./ 3/ 核心/ 代码优化/ 3.1/ GRAPES/ 系统/ 数值/ 天气预报/ 系统/ 已经/ 作为/ 一种/ 最/ 主要/ 的/ 预报/ Page4/ 天气/ 的/ 手段/ ./ GRAPES/ 是/ 我国/ 研制/ 的/ 具有/ 自主/ 知识产权/ 的/ 数值/ 天气预报/ 系统/ ./ 提升/ 模式/ 分辨率/ 是/ 提高/ 天气预报/ 准确度/ 最/ 直接/ 有效/ 的/ 方法/ ./ 因此/ 提升/ 预报/ 系统/ 的/ 模式/ 分辨率/ 是/ 研究/ 发展/ 的/ 一个/ 重要/ 方向/ ,/ 而/ 性能/ 和/ 功耗/ 的/ 要求/ 是/ 制约/ 其/ 提高/ 模式/ 分辨率/ 的/ 一个/ 关键因素/ ./ 如何/ 提高/ 该/ 大规模/ 计算/ 的/ 性能/ 同时/ 降低功耗/ ,/ 以/ 支持/ 更/ 高分辨率/ 的/ 天气预报/ ,/ 对/ 提升/ 我国/ 气象预报/ 水平/ 至关重要/ ./ GRAPES/ 中/ 5/ 个/ 主要/ 部分/ 分别/ 为/ grapes/ _/ input/ 、/ colm/ _/ init/ 、/ med/ _/ before/ _/ solve/ _/ io/ 、/ med/ _/ last/ _/ solve/ _/ io/ 、/ solver/ _/ grapes/ ./ solver/ _/ grapes/ 为/ 模式/ 计算/ 的/ 核心/ ,/ 包括/ 了/ 模式/ 的/ 动力/ 框架/ 计算/ 部分/ 和/ 模式/ 物理/ 过程/ 计算/ 部分/ ./ 其中/ 赫姆/ 霍兹/ 方程/ 求解/ 部分/ 占据/ 了/ 整个/ 计算/ 核心/ 的/ 近/ 30/ %/ [/ 12/ ]/ ./ 提高/ 该/ 核心/ 算法/ 的/ 计算/ 效率/ 对/ 提升/ 整个/ 系统/ 的/ 性能/ 起着/ 关键作用/ ./ 3.2/ 赫姆/ 霍兹/ 方程/ 求解/ 赫姆/ 霍兹/ 方程/ 的/ 求解/ 最后/ 转化/ 成为/ 求解/ 一个/ 大规模/ 的/ 稀疏/ 线性方程组/ ./ 通过/ 分析/ 天气预报/ GRAPES/ 核心/ 代码/ 的/ 计算/ 和/ 访存/ 模式/ ,/ 我们/ 发现/ 该/ 核心/ 代码/ 具有/ 循环/ 之间/ 无/ 数据/ 依赖/ ,/ 并且/ 数据/ 访/ 存有/ 一定/ 规律/ ./ 针对/ 这一/ 规律/ ,/ 我们/ 选择/ 对/ 该/ 核心/ 算法/ 进行/ 软硬/ 结合/ 的/ 循环/ 级/ 并行/ 来/ 加速/ 并/ 降低功耗/ ./ 硬件/ 方面/ ,/ 我们/ 采用/ 将/ 循环/ 指令/ 映射/ 到/ 功能/ 阵列/ 上/ 进行/ 执行/ ,/ 横向/ 映射/ 循环/ 内/ 的/ 每/ 一条/ 指令/ ,/ 纵向/ 映射/ 不同/ 的/ 循环/ 迭代/ ./ 软件/ 方面/ ,/ 我们/ 采用/ 循环/ 切分/ 、/ 地址/ 合并/ 、/ 数据/ 预取/ 、/ 缓存/ 分区/ 的/ 方式/ 来/ 加速/ 程序/ 的/ 执行/ ./ 方程/ (/ 2/ )/ 是/ 典型/ 的/ 赫姆/ 霍兹/ 方程/ ,/ 其中/ ,/ Π/ 是/ 模式/ 的/ 预报/ 变量/ ,/ ε/ Π/ 1/ 、/ ε/ Π/ 2/ 、/ ε/ Π/ 3/ 、/ ε/ Π/ H1/ 、/ ε/ Π/ H2/ 、/ ε/ Π/ H3/ 、/ ε/ Π/ H4/ 、/ ε/ Π/ H5/ 、/ ε/ Π/ H6/ 是/ 不/ 随/ 时间/ 变化/ 的/ 方程/ 系数/ ,/ / 为/ 球面/ 坐标/ 的/ 纬度/ ,/ λ/ 为/ 球面/ 坐标/ 的/ 经度/ ,/ z/ 为/ 高度/ 地形/ 追随/ 坐标/ ,/ α/ 为/ 地球/ 半径/ ./ (/ Π/ )/ n/ +/ 1/ =/ [/ ε/ Π/ 1/ α/ cos/ / ε/ Π/ H2/ α/ 2/ / 2/ ε/ Π/ H5/ α/ cos/ / 将/ 方程/ (/ 2/ )/ 有限/ 差分/ 离散/ 化/ 以后/ 得到/ 的/ 相/ 关系/ 从/ 程序/ 方面/ 来看/ ,/ 计算/ 部分/ 由/ 一个/ 三重/ 循环/ 和/ 两个/ 二重/ 循环/ 组成/ ./ 其中/ 第一个/ 循环/ 选取/ 三维/ 矩阵/ 犅/ 内部/ 的/ 点/ 和/ 犃/ 阵/ 的/ 对应点/ 相乘/ 得到/ 矩阵/ 犆/ 的/ 对/ 3.3/ Stencil/ 计算/ 模式/ 数如图/ 2/ 所示/ ./ 图/ 2/ 三维/ 赫姆/ 霍兹/ 方程/ 离散/ 格点/ 与/ 相关系数/ 分布/ 应点/ ./ 两个/ 二重/ 循环/ 对/ 边界/ 情况/ 进行/ 处理/ ./ 第/ 1/ 个/ 循环/ 占据/ 绝对/ 主要/ 时间/ ,/ 我们/ 称之为/ 循环体/ L1/ ./ 循环体/ L1/ 执行/ 的/ 工作/ 为/ 一个/ 四维/ 矩阵/ (/ 称为/ 犃/ 阵/ )/ 和/ 一个三维/ 矩阵/ (/ 称为/ 犅/ 阵/ )/ 乘法/ ,/ 得到/ 一个/ 新/ 的/ 三维/ 矩阵/ (/ 称为/ 犆/ 阵/ )/ ./ 乘法/ 规则/ 为/ :/ 犅/ 阵/ 内部/ 每个/ 点/ 以及/ 以该/ 点/ 为/ 中心/ 的/ 周围/ 18/ 个点/ ,/ 分别/ 和/ 犃/ 阵/ 对应点/ 的/ 系数/ 相乘/ ,/ 结果/ 累加/ ,/ 作为/ 犆/ 阵/ 对应点/ 的/ 值/ ./ 数值/ 计算/ 可以/ 用/ 等式/ (/ 3/ )/ 表示/ ./ 犆/ i/ ,/ j/ ,/ k/ =/ ∑/ δ/ 1/ =/ 1/ ,/ δ/ 2/ =/ 1/ ,/ δ/ 3/ =/ 1/ δ/ 1/ =/ -/ 1/ ,/ δ/ 2/ =/ -/ 1/ ,/ δ/ 3/ =/ -/ 1/ 其中/ α/ x/ ,/ i/ +/ δ/ 1/ ,/ j/ +/ δ/ 2/ ,/ k/ +/ δ/ 3/ =/ 这种/ 计算/ 模式/ 被/ 称为/ Stencil/ 计算/ ./ 在/ Stencil/ 计算/ 中/ ,/ 网格/ 中/ 的/ 每个/ 格点/ 由/ 其/ 周围/ 格点/ 的/ 子集/ 的/ 加权/ 和/ 值来/ 更新/ ./ 这种/ 计算/ 模式/ 普遍存在/ 于/ 热传导/ ,/ 流体/ 动力学/ 等/ 各类/ 科学计算/ 之中/ ./ 从/ 简单/ 的/ Jacobi/ 迭代/ 到/ 复杂/ 的/ 自适应性/ mesh/ 网格/ 加密/ [/ 13/ ]/ 都/ 需要/ 用到/ Stencil/ 计算/ 模式/ ./ 因此/ ,/ 对/ Stencil/ 计算/ 模式/ 的/ 优化/ 有/ 非常/ 典型/ 的/ 意义/ ./ 相关/ 领域/ 研究者/ 分别/ 对此/ 模式/ 在/ cache/ 上/ 的/ 优化/ 以及/ 在/ 多/ 核/ 系统/ 中/ 的/ 优化/ 做/ 了/ 相关/ 的/ 研究/ [/ 14/ -/ 15/ ]/ ,/ 但是/ 这些/ 优化/ 方案/ 都/ 没有/ 使用/ 可/ 定制/ 化/ 的/ 处理器/ ./ 3.4/ 优化/ 方案/ 从/ 等式/ (/ 3/ )/ 中/ 可以/ 看出/ ,/ 在/ 每个/ 内层/ 循环/ 中/ ,/ 计算/ 需要/ 从/ 19/ 个/ 一维/ 矩阵/ 中/ 和/ 一个三维/ 矩阵/ 中/ 分别/ 获取数据/ ,/ 这/ 造成/ 了/ 非常/ 密集/ 的/ 内存/ 访问/ ./ 并且/ ,/ 这些/ 对/ 内存/ 的/ 访问/ 表现/ 出/ 了/ 非常/ 差/ 的/ 局部性/ ,/ 进一步/ 阻碍/ 了/ 性能/ 的/ 提升/ ./ Page5Stencil/ 计算/ 中/ 存在/ 潜在/ 可/ 利用/ 的/ 数据/ 相关性/ ./ 但是/ ,/ 这些/ 相关/ 的/ 数据分布/ 在/ 相隔/ 较远/ 的/ 区域/ 中/ ./ 例如/ ,/ Bi/ ,/ 1/ ,/ 1/ 可能/ 在/ j/ =/ 1/ 时/ 载入/ ,/ 当/ j/ =/ 2/ 时/ ,/ 该值/ 又/ 会/ 被/ 访问/ 一次/ ,/ 但是/ 因为/ 通用/ cache/ 的/ 瓶颈/ ,/ 该点/ 的/ 值/ 在/ 再次/ 访问/ 之前/ 就/ 已经/ 被/ 换/ 出/ ,/ 此时/ 需要/ 再次/ 访问/ 内存/ 并/ 放入/ cache/ ,/ 这/ 就/ 造成/ 了/ 不必要/ 的/ 替换/ ./ 由于/ 该/ 部分/ 计算/ 具有/ 非常/ 差/ 的/ 局部性/ ,/ 加上/ 其/ 密集/ 的/ 内存/ 访问/ ,/ 造成/ 了/ 此/ 部分/ 计算/ 耗时/ 过多/ ./ 因此/ ,/ 我们/ 主要/ 从/ Stencil/ 模式/ 计算/ 上来/ 加速/ GRAPES/ 的/ 核心/ 代码/ ./ 为了/ 充分利用/ Stencil/ 模式/ 计算/ 的/ 特性/ ,/ 并/ 在/ LAPP/ 上/ 建立/ 优化/ 的/ 数据流/ ,/ 我们/ 在/ GRAPES/ 上/ 采用/ 了/ 如下/ 所述/ 的/ 软件/ 优化/ 方法/ :/ (/ 1/ )/ 重新/ 组织/ 犃/ 矩阵/ ./ 原始/ 的/ 4/ 维/ 矩阵/ 犃/ x/ ,/ i/ ,/ j/ ,/ k/ 导致/ 了/ 最/ 内层/ 循环/ 的/ 随机/ 地址/ 访问/ ./ 为了/ 去除/ 随机/ 内存/ 访问/ ,/ 我们/ 将/ 犃/ 矩阵/ 重新/ 组织/ ,/ 由/ 犃/ x/ ,/ i/ ,/ j/ ,/ k/ 变为/ 犃/ i/ ,/ x/ ,/ j/ ,/ k/ ./ 在/ 内层/ i/ 循环/ 时/ ,/ x/ ,/ j/ 和/ k/ 是/ 固定/ 不变/ 的/ ,/ 数据/ 预取/ 可以/ 从/ i/ =/ 0/ 到/ i/ =/ N/ ./ 犃/ 矩阵/ 的/ 重新/ 组织/ 非常/ 显著/ 的/ 增强/ 了/ 最/ 内层/ 循环/ 的/ 局部性/ ./ (/ 2/ )/ 循环体/ 重新/ 调度/ 和/ 划分/ ./ LAPP/ 是/ 按/ 矩阵/ 流水线/ 的/ 方向/ 线性/ 增长/ 的/ ./ 循环体/ 的/ 最大/ 映射/ 数量/ 由/ LAPP/ 的/ 大小/ 所/ 限制/ ./ 在/ 本文/ 中/ ,/ 我们/ 采用/ 20/ 段/ 的/ LAPP/ ./ 我们/ 将/ 最/ 内层/ 循环/ 拆/ 分成/ 3/ 个子/ 循环/ 来/ 适应/ LAPP/ 硬件/ 上/ 的/ 要求/ ./ 同时/ ,/ 我们/ 手动/ 调整/ 了/ 指令/ 的/ 顺序/ 来/ 协调/ 乘法/ 与/ 加法/ 运算/ 的/ 内存/ 访问/ ./ 连续/ 的/ 地址/ 如/ Bi/ -/ 1/ ,/ j/ ,/ k/ ,/ Bi/ ,/ j/ ,/ k/ 和/ Bi/ +/ 1/ ,/ j/ ,/ k/ 被/ 调度/ 到/ 同一个/ 子/ 循环/ 体内/ 来/ 避免/ 跨/ 循环/ 的/ 数据共享/ ./ (/ 3/ )/ 缓存/ 预/ 取指令/ ./ 我们/ 在/ GRAPES/ 中/ 加入/ 指导性/ 的/ 预/ 取指令/ 来/ 指导/ LAPP/ 将/ 数据/ 预取/ 到/ 一级/ 缓存/ 中/ ./ 所有/ 最/ 内层/ 循环/ 需要/ 用到/ 的/ 数据/ 都/ 被/ 读取/ 到/ 一级/ 缓存/ 中/ ,/ 在/ 之后/ 的/ 循环/ 并行执行/ ./ (/ 4/ )/ 缓存/ 分区/ 和/ Stencil/ 数据/ 再/ 利用/ ./ 如图/ 3/ 所示/ ,/ 沿着/ 中间层/ 循环/ j/ 的/ 方向/ ,/ 例如/ 从/ j/ =/ 1/ 到/ j/ =/ 2/ ,/ 之前/ 访问/ 的/ Bi/ ,/ 1/ ,/ k/ ±/ 1/ 和/ Bi/ ,/ 2/ ,/ k/ ±/ 1/ 变成/ 了/ 新/ 一次/ 访问/ 的/ Bi/ ,/ j/ -/ 1/ ,/ k/ ±/ 1/ 和/ Bi/ ,/ j/ ,/ k/ ±/ 1/ ./ 我们/ 无需/ 在/ j/ =/ 2/ 中/ 载入/ 重复/ 的/ 数据/ ./ 只有/ Bi/ ,/ 0/ ,/ k/ ±/ 1/ 需要/ 被/ Bi/ ,/ 3/ ,/ k/ ±/ 1/ 替换/ 掉/ ./ 我们/ 在/ 预/ 取指令/ 中/ 增加/ 了/ 一个/ 缓存/ 分区/ 信息/ ,/ 来/ 指导/ LAPP/ 硬件/ 在/ 预取/ 时/ 避免/ 中层/ 和/ 最/ 外层/ 循环/ 中/ 重复/ 的/ 数据/ 预取/ ./ (/ 5/ )/ 硬件/ 上/ 的/ 优化/ 策略/ 包括/ 了/ 对于/ 缓存/ 分区/ 和/ 与/ 取指令/ 的/ 实现/ ./ 同时/ ,/ 我们/ 添加/ 了/ 缓存/ 的/ 硬件/ 来/ 实现/ 4/ 路/ 并行/ 预取/ 来/ 进一步提高/ 预取/ 速度/ ./ 经过/ 优化/ 后/ ,/ 最终/ 内层/ 循环/ 的/ 的/ 数据/ 预取/ 次数/ 为/ 犃/ 矩阵/ 18/ 条/ ,/ 犅/ 矩阵/ 3/ 条/ ./ 犆/ 矩阵/ 的/ 数据/ 存储/ 要求/ 被/ 写/ 回/ 更/ 低/ 一层/ 的/ 缓存/ ./ 所以/ ,/ 每个/ 内层/ 循环/ 中/ 一级/ 缓存/ 和/ 更/ 低/ 一级/ 的/ 缓存/ 中/ 的/ 数据交换/ 有/ 22/ 条/ ,/ 是/ 优化/ 前/ 的/ 59/ %/ ./ 4/ 结果/ 分析/ 4.1/ 模拟器/ 参数/ 我们/ 使用/ 一个/ 时钟/ 精确/ 的/ 模拟器/ 进行/ 模拟/ ./ 模拟器/ 的/ 主要参数/ 如表/ 1/ 所示/ ./ 我们/ 使用/ Synopsis/ 编译器/ 来/ 获得/ LAPP/ 的/ 各/ 部件/ 门电路/ 数/ ,/ 具体/ 数据/ 如表/ 2/ 所示/ ./ 功耗/ 参数/ 使用/ PrimeTimePX/ 来测/ 得/ ,/ 使用/ 180nm/ 工艺/ ,/ 时钟/ 频率/ 频率/ 为/ 100MHz/ ./ 实验/ 中/ 我们/ 使用/ 的/ LAPP/ 为/ 20/ 段/ 流水/ ./ 通用寄存器/ (/ GR/ )/ 数量/ 数据/ 传输率/ (/ 外部/ 缓存/ )/ 一级/ 数据/ 缓存/ (/ L1/ )/ 数据/ 传输率/ (/ L1/ →/ L0/ )/ 单元/ 逻辑/ 单元/ 数/ 功耗/ // mWPC10751/ ./ 58110IF5115053/ ./ 30110ID2515422/ ./ 20110RF8727837/ ./ 00110I1/ $/ 17683793.40110/ L1/ $/ 258419143.28110/ EAG33132/ ./ 21111ALU111095/ ./ 82333MEDIA78444/ ./ 41444BRC18010/ ./ 77111MAP2477326/ ./ 30011SEL3414625/ ./ 56011L0/ $/ 241244.04011/ LSU95571/ ./ 18111/ 普通/ 流水线/ 679287388.84/ Stage0762330Stage1/ …/ 162417Page64/ ./ 2/ 优化/ 效果/ 分析/ 图/ 4/ 为/ GRAPES/ 核心/ 代码/ 分别/ 在/ 没有/ 经过/ 优化/ 、/ 经过/ 软件/ 优化/ 以及/ 经过/ 软硬/ 结合/ 优化/ 后/ 的/ 性能/ ./ 纵坐标/ 为/ IPC/ ,/ 横坐标/ 为/ 内层/ 循环/ 迭代/ 次数/ ./ 实验/ 结果表明/ ,/ 经过/ 循环/ 切分/ ,/ 指令/ 调度/ 和/ 软件/ 预取/ 等/ 软/ 优化/ 技术/ 应用/ 后/ ,/ GRAPES/ 核心/ 代码/ 的/ 性能/ 得到/ 了/ 有效/ 提升/ ,/ 当/ 循环/ 迭代/ 次数/ 为/ 720/ 时/ ,/ 软件/ 优化/ 措施/ 获得/ 了/ 63/ %/ 的/ 性能/ 提升/ ./ 在/ 进行/ 硬件/ 优化/ 后/ ,/ GRAPES/ 核心/ 代码/ 的/ 性能/ 得到/ 了/ 更加/ 明显/ 的/ 性能/ 提升/ ,/ 当/ 迭代/ 次数/ 为/ 720/ 时/ ,/ 硬件/ 优化/ 在/ 软件/ 优化/ 的/ 基础/ 之上/ 又/ 进一步/ 提升/ 了/ 148/ %/ ,/ 相对/ 于/ 未经/ 优化/ 的/ 程序/ ,/ 总体/ 性能/ 提升/ 了/ 306/ %/ ./ 4.3/ LAPP/ 与/ 多/ 核/ 处理器/ 性能/ 比较/ LAPP/ 由/ 两/ 部分/ 构成/ ./ 其/ 前端/ 是/ 一个/ 普通/ 流水线/ ,/ 后/ 端/ 使用/ 一个/ 功能/ 阵列/ ./ 前端/ 我们/ 可以/ 当作/ 一个/ 传统/ 的/ 处理器/ 来/ 使用/ ./ 在/ 实验/ 中/ 我们/ 分别/ 用/ 不/ 使用/ 功能/ 阵列/ 和/ 使用/ 功能/ 阵列/ 两种/ 处理器/ 配置/ 对/ GRAPES/ 核心/ 代码/ 进行/ 测试/ ,/ 以/ 分析/ 我们/ 的/ 优化/ 结果/ ./ 通过/ 表/ 2/ 我们/ 可以/ 计算/ 出/ ,/ 拥有/ 20/ 段/ 流水/ 的/ LAPP/ 拥有/ 6446941/ 个/ 逻辑/ 单元/ ,/ 而/ 只是/ 用/ 普通/ 流水线/ 的/ LAPP/ 拥有/ 679287/ 个/ 逻辑/ 单元/ ./ 因此/ 可以/ 计算/ 得到/ ,/ 20/ 段/ 流水/ 的/ LAPP/ 面积/ 是/ 普通/ 处理器/ 面积/ 的/ 9.5/ 倍/ ./ 因此/ ,/ 保守/ 情况/ 下/ ,/ 我们/ 可以/ 假设/ 多核/ 之间/ 没有/ 通信/ 开销/ ,/ 在/ 实验/ 中用/ 9.5/ 核/ 的/ 多/ 核/ 处理器/ 来/ 进行/ 性能/ 对比/ ,/ 即用/ 单核/ 普通/ LAPP/ 系统/ 性能/ 乘以/ 9.5/ ,/ 作为/ 多核/ 系统/ 的/ 性能/ ,/ 来/ 与/ 20/ 段/ 流水/ LAPP/ 进行/ 比较/ ./ 如图/ 5/ 所示/ ,/ 经过/ 优化/ 后/ 的/ LAPP/ 能够/ 获得/ 2/ 倍/ 于/ 多/ 核/ 处理器/ 的/ 性能/ ./ 当/ 最/ 内层/ 循环/ 为/ 720/ 次时/ ,/ 优化/ 后/ 的/ LAPP/ 其/ IPC/ 为/ 12.46/ ,/ 相同/ 面积/ 的/ 多/ 核/ 处理器/ 为/ 4.69/ ,/ 优化/ 后/ 的/ LAPP/ 性能/ 为/ 相同/ 面积/ 多核/ 处理器/ 的/ 2.66/ 倍/ ./ 4.4/ 功耗/ 分析/ LAPP/ 采用/ 了/ 电源/ 门控/ 、/ 时钟/ 门限/ 、/ 动态/ 变压/ 等/ 低功耗/ 技术/ 来/ 控制/ 功耗/ ,/ 实验/ 中/ 我们/ 发现/ ,/ 采用/ 这些/ 低功耗/ 技术/ 可以/ 让/ LAPP/ 在/ 阵列/ 执行/ 模式/ 下/ 非常/ 有效/ 地/ 控制/ 功耗/ ./ 在/ 实验/ 中/ ,/ 我们/ 将/ GRAPES/ 核心/ 代码/ 分别/ 运行/ 在/ 不/ 使用/ 功能/ 阵列/ 的/ 传统/ 处理器/ 和/ 使用/ 20/ 段/ 功能/ 阵列/ 的/ LAPP/ 上/ ,/ 以/ 对/ 采用/ 功能/ 阵列/ 后/ 的/ 功耗/ 进行/ 分析/ ./ 通过/ 图/ 6/ 我们/ 可以/ 看出/ ,/ LAPP/ 具有/ 极其/ 出色/ 的/ 功耗/ 控制/ ./ 如图/ 6/ 所示/ ,/ LAPP/ 的/ 功耗/ 仅/ 有/ 多/ 核/ 处理器/ 的/ 12/ %/ ,/ 由此可见/ GRAPES/ 核心/ 代码运行/ 在/ 经过/ 优化/ 的/ 功能/ 阵列/ 处理器/ 上/ ,/ 可以/ 将/ 功耗/ 降到/ 一个/ 非常低/ 的/ 水平/ ./ 考虑/ 性能/ 功耗/ 比/ ,/ LAPP/ 的/ 平均/ 性能/ 功耗/ 比是/ 多核/ 处理器/ 的/ 19.8/ 倍/ ./ 4.5/ LAPP/ 集群/ 和/ IntelXeon/ 集群/ 的/ 性能/ 比较/ 我们/ 用/ IntelXeonE5540/ 处理器/ 作为/ 参照/ 来/ 评估/ 我们/ 系统/ 的/ 性能/ ./ IntelXeonE5540/ 的/ 主要参数/ 以及/ GRAPES/ 核心/ 代码运行/ 在/ IntelXeonE5540/ 上/ 的/ 性能/ 如表/ 3/ 所示/ ./ 当/ 采用/ 8/ 个/ IntelXeonE5540/ 处理器/ 时/ ,/ 其/ IPC/ 可以/ 达到/ 4.28/ ,/ GFLOPS/ 可以/ 达到/ 4.51/ ./ Page7/ 表/ 3GRAPES/ 核心/ 代码/ 在/ IntelXeonE5540/ 上/ 的/ 性能/ GFLOPS/ 单核/ GFLOPS1/ ./ 040.860/ ./ 56/ 峰值/ 功率/ GRAPES/ 核心/ 代码/ 在/ 20/ 段/ 流水/ 的/ LAPP/ 上/ 运行/ 的/ 性能指标/ 如表/ 4/ 所示/ ./ 我们/ 假设/ LAPP/ 采用/ 了/ 45nm/ 工艺制作/ ,/ 则/ 其/ 频率/ 可以/ 达到/ 400MHz/ ./ 测试/ 使用/ 的/ 代码/ 在/ Stencil/ 计算/ 部分/ 最/ 内层/ 循环/ 数位/ 360/ ,/ 且/ 代码/ 已经/ 应用/ 了/ 循环/ 切分/ ,/ 指令/ 调度/ 以及/ 缓存/ 分区/ 等/ 软/ 优化/ 技术/ ./ 如表/ 4/ 所示/ ,/ 计算/ 时/ 的/ IPC/ 达到/ 了/ 38.3/ ./ 当/ 我们/ 采取/ 4/ 路/ 并行/ 预取/ 时/ ,/ 预取/ 访存/ 时间/ 大大/ 减小/ ,/ 在/ 只有/ 1/ 路/ 预取/ 时/ ,/ 一级/ 缓存/ 访存/ 时间/ 和/ 计算/ 时间/ 比为/ 6.631/ ,/ 而是/ 用/ 4/ 路/ 预取/ 时/ ,/ 访存/ 时间/ 和/ 计算/ 时间/ 比/ 下降/ 到/ 2.111/ ,/ 总/ 的/ IPC/ 提升/ 到/ 了/ 12.32/ ,/ GFLOPS/ 提升/ 到/ 了/ 1.64/ ./ 一级/ 缓存/ 访存/ 时间/ 计算/ 时间/ 6.6312/ ./ 111/ 我们/ 可以/ 计算/ 得出/ ,/ 单核/ LAPP/ 的/ IPC/ 是/ IntelXeonE5540/ 的/ 2.91/ 倍/ ,/ 单核/ LAPP/ 的/ GFLOPS/ 是/ IntelXeonE5540/ 的/ 5.81/ 倍/ ./ 保守/ 起/ 见/ ,/ 我们/ 认为/ 一个/ LAPP/ 处理器/ 的/ 计算能力/ 是/ 一个/ IntelXeonE5540/ 处理器/ 的/ 2.91/ 倍/ ./ 在/ 集群/ 计算/ 的/ 比较/ 中/ ,/ 我们/ 以/ 相同/ IPC/ 的/ 处理器/ 数量/ 为/ 一个组/ 来/ 进行/ 性能/ 比较/ ./ 例如/ ,/ 87/ 个/ LAPP/ 的/ IPC/ 和/ 256/ 个/ IntelXeonE5540/ 的/ IPC/ 相当/ ,/ 所以/ 将/ 87/ 个/ LAPP/ 的/ 集群/ 和/ 256/ 个/ IntelXeonE5540/ 作为/ 一组/ 进行/ 对比/ ./ 图/ 7/ 为/ LAPP/ 集群/ 和/ Intel/ 集群/ 的/ 性能/ 比较/ 结果/ ./ 由图/ 7/ 可以/ 看出/ ,/ 在/ 相同/ 的/ IPC/ 下/ ,/ LAPP/ 相对/ 于/ IntelXeonE5540/ 有着/ 更加/ 的/ 表现/ ./ 两者/ 的/ 计算/ 时间/ 相同/ ,/ 但是/ LAPP/ 集群/ 的/ 访存/ 时间/ 少于/ IntelXeonE5540/ 的/ 通信/ 时间/ ,/ 且/ 随着/ 集群/ 核数/ 的/ 增加/ ,/ LAPP/ 和/ IntelXeonE5540/ 集群/ 通信/ 时间/ 的/ 对比/ 越发/ 明显/ ,/ 2048/ 核/ 的/ Intel/ 集群/ 获得/ 了/ 最佳/ 的/ 性能/ ,/ 而/ 351/ 核/ 的/ LAPP/ 集群/ 已经/ 可以/ 达到/ 同样/ 的/ 性能/ ,/ 并且/ 可以/ 随着/ 核数/ 增加/ 而/ 继续/ 提高/ 性能/ ./ LAPP/ 集群/ 的/ 性能/ 功耗/ 比是/ Intel/ 集群/ 的/ 11.7/ 倍/ ./ 5/ 结束语/ 本文/ 提出/ 了/ 一种/ 软硬/ 结合/ 的/ 应用/ 加速/ 方法/ 对赫姆/ 霍兹/ 方程/ 的/ 求解/ 进行/ 加速/ ./ 采用/ 线性/ 阵列/ 流水/ 处理器/ 将/ 指令/ 映射/ 到/ 功能/ 阵列/ 上来/ 进行/ 循环/ 级/ 并行/ 加速/ ;/ 同时/ 软件/ 上/ 采用/ 数据/ 重排/ 、/ 循环/ 切分/ 、/ 地址/ 合并/ 、/ 数据/ 预取/ ,/ 硬件/ 上/ 实行/ 多路/ 预取/ 等/ 方法/ 来/ 对/ 其/ 进行/ 进一步/ 加速/ ./ 实验/ 结果表明/ ,/ 我们/ 的/ 优化/ 方法/ 取得/ 了/ 非常/ 理想/ 的/ 性能/ 提升/ ,/ 并且/ 非常/ 显著/ 地/ 降低/ 了/ 功耗/ ,/ 同时/ 可以/ 减少/ 通信/ 开销/ ,/ 进一步/ 提升/ 性能/ ./ LAPP/ 对于/ 可/ 进行/ 循环/ 级/ 并行/ 的/ 部分/ 具有/ 非常/ 好/ 的/ 加速/ 效果/ ,/ 不可/ 并行/ 加速/ 的/ 部分/ 的/ 执行/ 能力/ 相对/ 较弱/ ./ 因此/ 我们/ 计划/ 将/ LAPP/ 作为/ Intel/ 处理器/ 的/ 协处理器/ 进行/ 研究/ ./ 通过/ 向/ 应用程序/ 的/ 中间代码/ 中/ 加入/ 伪/ 代码/ 来/ 指导/ 协处理器/ 工作/ ./ 在/ Intel/ 主/ 处理器/ 执行/ 到/ 可/ 并行/ 的/ 代码/ 部分/ 时/ ,/ 通过/ DMA/ 数据通道/ ,/ 把/ 数据/ 和/ 程序/ 块/ 放到/ SRAM/ 中/ ,/ 由/ 协处理器/ 来/ 加速/ 执行/ 可/ 并行/ 部分/ ,/ 执行/ 完毕/ 再/ 返回/ 主/ 处理器/ 继续执行/ ./ 这样/ 我们/ 不仅/ 可以/ 优化/ 核心/ 部分/ 的/ 性能/ ,/ 同时/ 整个/ 应用/ 的/ 性能/ 也/ 将/ 得到/ 提升/ ./ 

