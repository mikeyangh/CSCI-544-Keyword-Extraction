Page1/ 软件/ 错误/ 自动/ 定位/ 关键/ 科学/ 问题/ 及/ 研究进展/ 1/ )/ (/ 哈尔滨工业大学/ 计算机科学/ 与/ 技术/ 学院/ 哈尔滨/ 150001/ )/ 2/ )/ (/ 哈尔滨/ 学院/ 软件/ 学院/ 哈尔滨/ 150086/ )/ 摘要/ 程序/ 源代码/ 中/ 的/ 缺陷/ 是/ 导致/ 软件/ 不/ 可靠/ 的/ 一个/ 主要/ 原因/ ./ 软件/ 错误/ 自动/ 定位/ 技术/ 通过/ 计算机/ 分析程序/ 源代码/ 或/ 执行/ 过程/ 中/ 产生/ 的/ 运行/ 状态/ ,/ 检测/ 程序/ 中/ 的/ 异常/ 并/ 将/ 其/ 独立/ 出来/ 作为/ 需要/ 进一步/ 调试/ 的/ 可疑/ 代码/ ,/ 从而/ 缩小/ 缺陷/ 代码/ 的/ 搜索/ 范围/ ,/ 辅助/ 开发人员/ 更快/ 地/ 识别/ 缺陷/ 语句/ 并/ 分析/ 软件/ 失效/ 的/ 产生/ 原因/ ./ 为了/ 清晰/ 地/ 分析/ 软件/ 错误/ 定位/ 领域/ 的/ 关键/ 科学/ 问题/ ,/ 文中/ 首先/ 定义/ 了/ “/ 失效/ -/ 错误/ 定位/ -/ 理解/ ”/ 模型/ ,/ 然后/ 形式化/ 地/ 描述/ 了/ 软件/ 错误/ 定位/ 相关/ 概念/ ;/ 接下来/ ,/ 调研/ 国内外/ 最新/ 研究进展/ ,/ 统计分析/ 了/ 发展趋势/ ;/ 重点/ 分析/ 了/ 各种/ 错误/ 定位/ 方法/ 的/ 基本/ 思想/ 、/ 优缺点/ 及其/ 对/ 关键问题/ 的/ 解决/ 情况/ ;/ 最后/ 总结/ 了/ 尚待/ 解决/ 的/ 难点/ 问题/ ,/ 指出/ 了/ 未来/ 可能/ 的/ 研究/ 方向/ ./ 关键词/ 软件/ 失效/ ;/ 软件缺陷/ ;/ 错误/ 定位/ ;/ 自动化/ 调试/ ;/ 程序/ 分析/ 1/ 引言/ 随着/ 软件系统/ 越来越/ 复杂/ ,/ 软件/ 经常/ 不像/ 人们/ 预期/ 的/ 那样/ 运行/ ,/ 换句话说/ ,/ 软件/ 不/ 总是/ 可靠/ 地/ 运行/ ,/ 从而/ 对/ 计算机/ 应用/ 系统/ 带来不利/ 影响/ ,/ 甚至/ 造成/ 巨大/ 的/ 经济损失/ 和/ 灾难性/ 的/ 后果/ ./ 因此/ ,/ 保证/ 软件/ 的/ 高可靠性/ 已/ 成为/ 系统/ 开发/ 和/ 维护/ 工作/ 的/ 一个/ 不可或缺/ 的/ 重要/ 方面/ ./ 导致/ 软件/ 不/ 可靠/ 的/ 一个/ 主要/ 原因/ 是/ 程序/ 源代码/ 中/ 的/ 缺陷/ ./ 程序设计/ 是/ 一项/ 复杂/ 的/ 活动/ ,/ 很难/ 推导/ 程序/ 中/ 所有/ 可能/ 的/ 执行/ 路径/ ,/ 以及/ 预见/ 可能/ 影响/ 程序/ 的/ 环境因素/ ./ 即使/ 程序/ 看起来/ 正确/ 执行/ ,/ 仍然/ 可能/ 在/ 极少/ 情况/ 下/ 或/ 特定条件/ 满足/ 时/ 产生/ 失效/ ./ 因此/ 如何/ 检测/ 并/ 消除/ 软件缺陷/ 是/ 目前/ 亟需/ 解决/ 的/ 一个/ 问题/ ./ 软件测试/ 和/ 调试/ 协同工作/ 可以/ 有效/ 检测/ 并/ 消除/ 软件缺陷/ :/ 测试/ 用于/ 暴露/ 软件缺陷/ ,/ 调试/ 用于/ 消除/ 这些/ 软件缺陷/ ./ 然而/ 软件/ 调试/ 过程/ 中/ 消除/ 软件缺陷/ 的/ 速度/ 往往/ 跟不上/ 软件测试/ 过程/ 中/ 发现/ 软件缺陷/ 的/ 速度/ ./ 目前/ 已有/ 很多/ 自动化/ 软件测试/ 工具/ ,/ 然而/ ,/ 软件/ 调试/ 却/ 大多/ 采用/ 设置/ 断点/ 等/ 人工/ 分析/ 的/ 方法/ ,/ 这/ 很/ 困难/ 并且/ 耗时/ ,/ 因为/ 当/ 程序开发/ 人员/ 在/ 程序执行/ 过程/ 中/ 发现/ 软件/ 失效/ 时/ ,/ 可能/ 已经/ 离/ 错误/ 点/ 很/ 远/ 了/ ,/ 需要/ 花费/ 大量/ 的/ 时间/ 和/ 精力/ 来/ 查找/ 导致/ 失效/ 的/ 程序代码/ ./ 如果/ 能/ 实现/ 软件/ 自动化/ 调试/ ,/ 即/ 由/ 计算机/ 自动/ 找到/ 程序代码/ 中/ 的/ 缺陷/ 位置/ 、/ 分析/ 软件/ 失效/ 的/ 产生/ 原因/ ,/ 则/ 可以/ 更/ 有效/ 地/ 确保/ 软件可靠性/ ,/ 提高/ 软件/ 质量/ 以及/ 软件开发/ 与/ 维护/ 效率/ ./ 因此/ 近年来/ ,/ 软件/ 自动化/ 调试/ 技术/ ,/ 特别/ 是/ 软件/ 错误/ 自动/ 定位/ 方法/ 得到/ 了/ 广泛/ 的/ 关注/ ./ 文献/ [/ 1/ ]/ 分析/ 了/ 软件/ 失效/ 机理/ 和/ 软件/ 故障/ 产生/ 原因/ ,/ 讨论/ 了/ 软件/ 故障/ 模型/ ./ 文献/ [/ 2/ ]/ 分类/ 介绍/ 了/ 各种/ 代表性/ 错误/ 定位/ 技术/ 的/ 原理/ 以及/ 建模/ 方法/ ,/ 给出/ 了/ 常用/ 的/ 评测/ 基准/ 集/ 和/ 评价/ 标准/ ,/ 并/ 展望/ 了/ 进一步/ 研究/ 方向/ ./ 不同于/ 以上/ 文献/ ,/ 本文/ 重点/ 分析/ 软件/ 错误/ 定位/ 领域/ 的/ 关键/ 科学/ 问题/ ,/ 提出/ 了/ “/ 失效/ -/ 错误/ 定位/ -/ 理解/ ”/ 模型/ ,/ 并/ 从/ 这/ 一/ 角度/ 论述/ 各种/ 已有/ 方法/ 对/ 关键/ 科学/ 问题/ 的/ 解决/ 程度/ ,/ 详细分析/ 了/ 尚待/ 进一步/ 研究/ 的/ 难点/ 问题/ ./ 还/ 针对/ 顶级/ 国际/ 期刊/ 和/ 国际/ 会议/ 以及/ 国内/ 一级/ 学报/ ,/ 统计分析/ 了/ 软件/ 错误/ 定位/ 研究/ 的/ 发展趋势/ ./ 2/ “/ 失效/ -/ 错误/ 定位/ -/ 理解/ ”/ 模型/ 为了/ 清晰/ 地/ 分析/ 软件/ 错误/ 定位/ 领域/ 中/ 的/ 关键/ 科学/ 问题/ ,/ 本/ 课题/ 在/ Zeller/ [/ 3/ ]/ 提出/ 的/ “/ 缺陷/ -/ 感染/ -/ 失效/ ”/ 模型/ 基础/ 上/ 定义/ 了/ “/ 失效/ -/ 错误/ 定位/ -/ 理解/ ”/ 模型/ ,/ 如图/ 1/ 所示/ ./ 软件/ 开发人员/ 在/ 源代码/ 中/ 引入/ 缺陷/ (/ defect/ )/ ,/ 在/ 测试/ 过程/ 中/ :/ 特定/ 环境/ 下/ ,/ 当/ 用/ 给定/ 测试用例/ 的/ 输入/ 执行程序/ 时/ ,/ 缺陷/ 代码/ 可能/ 会/ 导致/ 感染/ (/ infec/ -/ tion/ )/ ,/ 生成/ 错误/ 的/ 程序/ 状态/ →/ 感染/ 被/ 传播/ (/ infectionpropagation/ )/ →/ 导致/ 软件/ 失效/ (/ failure/ )/ ./ 在/ 开发人员/ 发现/ 软件/ 失效/ 后/ ,/ 则/ 需要/ 调试程序/ :/ 对于/ 给定/ 的/ 测试用例/ 集合/ ,/ 观察/ 程序/ 的/ 执行/ 状态/ ,/ 理解/ 分析/ 失效/ 产生/ 的/ 上下文/ ,/ 识别/ 可疑/ 程序代码/ 以及/ “/ 缺陷/ →/ 感染/ →/ 失效/ ”/ 链/ ,/ 查找/ 失效/ 的/ 根源/ ,/ 并/ 消除/ 软件缺陷/ ,/ 使/ 失效/ 不再/ 发生/ ./ 错误/ 定位/ 及/ 理解/ 过程/ 还/ 可以/ 是/ 一个/ 迭代/ 过程/ ,/ 初步/ 的/ 定位/ 的/ 结果/ 可以/ 为/ 理解/ 程序/ “/ 为什么/ 会/ 失效/ ”/ 提供/ 参考/ ,/ 而/ 程序/ 分析/ 及/ 理解/ 的/ 结果/ 可以/ 用于/ 提高/ 错误/ 定位/ 的/ 有效性/ ./ 然而/ ,/ 由于/ 程序/ 状态/ 空间/ 规模/ 巨大/ ,/ 感染/ 可能/ 遍/ Page3/ 布/ 程序/ 的/ 执行/ ,/ 但是/ 在/ 开发人员/ 看来/ 却/ 不/ 相关/ ./ 此外/ 还有/ 可能/ 是/ 多个/ 缺陷/ 共同/ 作用/ 引发/ 失效/ ,/ 并且/ 多个/ 缺陷/ 间/ 也/ 可能/ 相互/ 干扰/ ,/ 例如/ ,/ 缺陷/ A/ 可能/ 掩盖/ 了/ 缺陷/ B/ ,/ 导致/ 即使/ 执行/ 了/ 缺陷/ B/ 也/ 不会/ 产生/ 失效/ ./ 这/ 都/ 使/ 理解/ “/ 什么/ 导致/ 了/ 失效/ ”/ 以及/ “/ 为什么/ 程序/ 会/ 失效/ ”/ 成为/ 调试/ 过程/ 中/ 最/ 困难/ 的/ 任务/ ,/ 所/ 需/ 花费/ 的/ 时间/ 和/ 资源/ 也/ 比/ 其他/ 步骤/ 要/ 多得多/ ,/ 因此/ ,/ 这/ 两个/ 问题/ 是/ 软件/ 错误/ 定位/ 领域/ 亟需/ 解决/ 的/ 关键/ 科学/ 问题/ ./ 在/ 解决/ 上述/ 问题/ 的/ 过程/ 中/ ,/ 以下/ 两个/ 关键因素/ 决定/ 了/ 错误/ 定位/ 方法/ 的/ 可用性/ :/ (/ 1/ )/ 有效性/ (/ effectiveness/ )/ ./ 根据/ 定位/ 结果/ ,/ 开发人员/ 审查/ 代码/ 、/ 真正/ 查找/ 到/ 缺陷/ 所/ 需/ 的/ 工作量/ (/ expense/ )/ ./ 错误/ 定位/ 结果/ 越/ 准确/ ,/ 人工/ 审查/ 工作量/ 越小/ ,/ 则/ 该/ 方法/ 越/ 有效/ ./ (/ 2/ )/ 效率/ (/ efficiency/ )/ ./ 错误/ 定位/ 方法/ 的/ 计算/ 复杂度/ 及/ 时间/ 开销/ ./ 理想/ 情况/ 下/ ,/ 软件/ 错误/ 定位/ 方法/ 应该/ 快速/ 、/ 准确/ 地/ 报告/ 缺陷/ 的/ 位置/ ,/ 并且/ 为/ 开发人员/ 进一步/ 理解/ 和/ 修正/ 缺陷/ 提供/ 充分/ 的/ 信息/ ./ 由图/ 1/ 还/ 可以/ 看出/ ,/ 错误/ 定位/ 与/ 测试/ 紧密/ 相关/ ,/ 测试阶段/ 提供/ 的/ 测试用例/ 及其/ 执行/ 信息/ 的/ 质量/ 也/ 是/ 决定/ 错误/ 定位/ 质量/ 的/ 一个/ 关键因素/ ./ 因此/ “/ 如何/ 最大化/ 地/ 利用/ 软件测试/ 过程/ 中/ 提供/ 的/ 有效/ 诊断/ 信息/ ,/ 提高/ 错误/ 定位/ 的/ 有效性/ 和/ 效率/ ”/ 也/ 是/ 亟需/ 解决/ 的/ 一个/ 关键/ 科学/ 问题/ ./ 3/ 软件/ 错误/ 定位/ 相关/ 概念/ 根据/ 定位/ 过程/ 中/ 是否/ 需要/ 运行/ 程序/ ,/ 可以/ 将/ 软件/ 错误/ 定位/ 技术/ 划分/ 为/ 两类/ :/ 基于/ 静态/ 程序/ 分析/ 的/ 技术/ 和/ 基于/ 测试/ 的/ 技术/ ./ 本文/ 重点/ 研究/ 基于/ 测试/ 的/ 软件/ 错误/ 定位/ 技术/ ,/ 相关/ 概念/ 定义/ 如下/ ./ 定义/ 1/ ./ 程序/ ./ 程序/ P/ 由/ m/ 个/ 程序/ 实体/ 组成/ ,/ 记为/ P/ =/ {/ s1/ ,/ s2/ ,/ …/ ,/ sm/ }/ ,/ 这里/ 的/ 程序/ 实体/ 指/ 的/ 是/ 语句/ 或者/ 基本块/ (/ 分支/ 、/ 函数/ 、/ 类/ 等/ )/ ./ 定义/ 2/ ./ 测试用例/ 集/ ./ T/ =/ {/ tk/ =/ (/ ik/ ,/ ok/ )/ |/ 1/ / k/ / n/ }/ ,/ 其中/ tk/ =/ (/ ik/ ,/ ok/ )/ 表示/ 测试用例/ ,/ 它/ 的/ 输入/ 为/ ik/ ,/ 期望/ 的/ 输出/ 为/ ok/ ./ 定义/ 3/ ./ 成功/ 测试用例/ ./ 称/ tk/ =/ (/ ik/ ,/ ok/ )/ 是/ 一个/ 成功/ 测试用例/ ,/ 当且/ 仅/ 当用/ 输入/ ik/ 执行程序/ P/ 时/ ,/ ok/ =/ =/ ok/ ,/ 其中/ ok/ 为/ 实际/ 输出/ 结果/ ,/ ok/ 为/ 期望/ 的/ 输出/ 结果/ ./ 成功/ 测试用例/ 集记/ 为/ Tp/ ./ 定义/ 4/ ./ 失效/ 测试用例/ ./ 称/ tk/ =/ (/ ik/ ,/ ok/ )/ 是/ 一个/ 失效/ 测试用例/ ,/ 当且/ 仅/ 当用/ 输入/ ik/ 执行程序/ P/ 时/ ,/ ok/ ≠/ ok/ ,/ 其中/ ok/ 为/ 实际/ 输出/ 结果/ ,/ ok/ 为/ 期望/ 的/ 输出/ 结果/ ./ 失效/ 测试用例/ 集记/ 为/ Tf/ ./ 定义/ 5/ ./ 运行/ 时/ 信息/ 集/ ./ Γ/ =/ {/ τ/ (/ tk/ )/ |/ 1/ / k/ / n/ }/ 为用/ 测试用例/ 集/ T/ 执行程序/ P/ 的/ 运行/ 时/ 信息/ 集/ ,/ 其中/ τ/ (/ tk/ )/ 表示/ 程序/ P/ 执行/ 测试用例/ tk/ 的/ 运行/ 时/ 信息/ ,/ 如/ 语句/ 覆盖/ 、/ 分支/ 覆盖/ 、/ 数据流/ 、/ 执行/ 路径/ 等/ ./ 定义/ 6/ ./ 软件/ 错误/ 自动/ 定位/ ./ FL/ (/ P/ ,/ T/ ,/ Γ/ ,/ S/ 可疑/ )/ ,/ 由/ 计算机/ 分析程序/ 源代码/ P/ 或用/ 测试用例/ 集/ T/ 执行/ P/ 的/ 运行/ 时/ 信息/ 集/ Γ/ ,/ 检测/ 程序/ 中/ 的/ 异常情况/ ,/ 并/ 将/ 其/ 独立/ 出来/ 作为/ 需要/ 进一步/ 调试/ 的/ 可疑/ 代码/ S/ 可疑/ / P/ ,/ 从而/ 将/ 与/ 软件/ 失效/ 无关/ 的/ 代码/ 自动/ 过滤/ 掉/ ,/ 缩小/ 缺陷/ 代码/ 的/ 搜索/ 范围/ ./ 理想/ 情况/ 下/ ,/ 准确/ 指出/ 缺陷/ 代码/ 的/ 所在位置/ ./ 4/ 研究/ 趋势/ 统计分析/ 为了/ 调研/ 国际/ 上/ 软件/ 错误/ 定位/ 方法/ 的/ 研究进展/ ,/ 本文/ 查阅/ 了/ 顶级/ 国际/ 期刊/ (/ TSE/ 、/ TOSEM/ 、/ SPE/ 、/ JSS/ 、/ STVR/ )/ 和/ 顶级/ 国际/ 会议/ (/ ICSE/ 、/ PLDI/ 、/ FSE/ 、/ ASE/ )/ 中/ 软件/ 错误/ 定位/ 的/ 相关/ 文献/ ,/ 共/ 71/ 篇/ ./ 论文/ 发表/ 数目/ 总体/ 上/ 呈上升/ 趋势/ ,/ 近/ 5/ 年/ 发表/ 了/ 较/ 多/ 的/ 研究/ 论文/ ./ 按/ 研究/ 方法/ 将/ 这些/ 文献/ 归类/ 的/ 情况/ 如图/ 2/ 所示/ ./ 本文/ 将/ 主要/ 的/ 软件/ 错误/ 定位/ 方法/ 划分/ 为/ :/ 覆盖/ 分析/ (/ coverageanalysis/ )/ [/ 4/ -/ 40/ ]/ 、/ 程序/ 切片/ (/ programslicing/ )/ [/ 41/ -/ 52/ ]/ 、/ 依赖/ 分析/ (/ dependenceanalysis/ )/ [/ 53/ -/ 60/ ]/ 、/ 状态/ 变更/ (/ statealteration/ )/ [/ 61/ -/ 68/ ]/ 、/ 模型/ 检验/ (/ modelbased/ )/ [/ 69/ -/ 70/ ]/ 、/ 程序/ 不/ 变量/ 分析/ (/ invariantanalysis/ )/ [/ 71/ -/ 72/ ]/ 、/ 变异/ 分析/ (/ mutationbased/ )/ [/ 73/ -/ 74/ ]/ ./ 其中/ ,/ 覆盖/ 分析方法/ 自/ 2002/ 年/ 提出/ 后/ ,/ 因/ 具有/ 计算/ 复杂度/ 低/ 、/ 实现/ 简单/ 等/ 优点/ 得到/ 了/ 广泛/ 的/ 研究/ ,/ 论文/ 数占/ 了/ 总数/ 的/ 近/ 二分之一/ ,/ 特别/ 是/ 在/ 2009/ 年/ 和/ 2010/ 年/ 发表/ 了/ 多篇/ 文献/ ,/ 之后/ 也/ 受到/ 持续/ 的/ 关注/ ./ 程序/ 切片/ 作为/ 一种/ 最早/ 提出/ 的/ 应用/ 于/ 软件/ 调试/ 的/ 技术/ [/ 75/ ]/ 也/ 发表/ 了/ 为数众多/ 的/ 论文/ ,/ 但/ 2010/ 年前/ 的/ 研究/ 比较/ 多/ ./ 依赖/ 分析/ 作为/ 覆盖/ 分析/ 的/ 一种/ 改进/ 方法/ ,/ 于/ 2007/ 年/ 提出/ ,/ 近年来/ 均/ 有/ 相关/ 研究/ ./ 模型/ 检验/ 、/ 程序/ 不/ 变量/ 分析/ 和/ 变异/ 分析方法/ 的/ 研究/ 起步/ 比较/ 晚/ ,/ 论文/ 较少/ ./ 为了/ 调研/ 国内/ 软件/ 错误/ 定位/ 方法/ 的/ 研究进展/ ,/ 本文/ 查阅/ 了/ 计算机/ 学报/ 、/ 软件/ 学报/ 、/ 计算机/ 研究/ 与/ 发展/ 、/ 电子学/ 报/ 、/ 电子/ 与/ 信息学/ 报中/ 关于软件/ “/ 错误/ 定位/ ”/ 、/ “/ 故障/ 定位/ ”/ 、/ “/ 缺陷/ 定位/ ”/ 等/ 关键词/ 的/ 文章/ ,/ 共/ Page4/ 图/ 2/ 顶级/ 国际/ 期刊/ 和/ 会议/ 中/ 研究/ 的/ 软件/ 错误/ 定位/ 方法/ 统计/ 18/ 篇/ ./ 2006/ 年/ 以前/ 没有/ 相关/ 论文/ 发表/ ,/ 大多数/ 论文/ 发表/ 于/ 2010/ 年/ 之后/ ./ 研究/ 方法/ 也/ 是/ 覆盖/ 分析/ [/ 76/ -/ 81/ ]/ 、/ 程序/ 切片/ [/ 82/ -/ 83/ ]/ 和/ 依赖/ 分析/ [/ 84/ -/ 87/ ]/ 为主/ ,/ 其他/ 方法/ 还有/ 变异/ 分析/ [/ 88/ ]/ 、/ 组合/ 测试/ [/ 89/ -/ 90/ ]/ 、/ 机器/ 学习/ [/ 91/ -/ 92/ ]/ 等/ ./ 综上所述/ ,/ 软件/ 错误/ 定位/ 技术/ 近年来/ 成为/ 一个/ 研究/ 热点/ ./ 然而/ ,/ 由于/ 每种/ 方法/ 均/ 有/ 其/ 适用范围/ ,/ 存在/ 一系列/ 关键/ 难题/ 需要/ 进一步/ 解决/ ,/ 目前/ 的/ 软件/ 错误/ 定位/ 方法/ 均/ 处于/ 理论/ 与/ 实验/ 研究/ 阶段/ ,/ 尚/ 没有/ 成熟/ 的/ 自动化/ 软件/ 错误/ 定位/ 工具/ 广泛应用/ 于/ 工业界/ ./ 本文/ 接下来/ 对/ 这些/ 问题/ 进行/ 重点/ 分析/ ./ 缺陷/ 示例/ P1/ :/ s9/ 修改/ 为/ m/ =/ y/ ;/ 3/ ,/ 3/ ,/ 51/ ,/ 2/ ,/ 33/ ,/ 2/ ,/ 15/ ,/ 5/ ,/ 55/ ,/ 3/ ,/ 42/ ,/ 1/ ,/ 3/ 图/ 3/ 示例/ 程序/ mid5/ 软件/ 错误/ 自动/ 定位/ 方法/ 本/ 节/ 论述/ 了/ 主流/ 软件/ 错误/ 定位/ 方法/ 的/ 基本/ 思想/ ,/ 重点/ 分析/ 了/ 各种/ 方法/ 的/ 优缺点/ 及其/ 对/ 关键/ 科学/ 问题/ 的/ 解决/ 程度/ ./ 5.1/ 示例/ 程序/ 使用/ 图/ 3/ 中/ 的/ 示例/ 程序/ mid/ [/ 20/ ,/ 74/ ]/ 对比/ 分析/ 代表性/ 的/ 软件/ 错误/ 定位/ 方法/ ./ 程序/ mid/ 的/ 功能/ 为/ :/ 输入/ 3/ 个/ 整数/ ,/ 然后/ 输出/ 这/ 3/ 个/ 整数/ 的/ 中间/ 值/ ./ 111111111p11111111pPage5/ 本文/ 在/ mid/ 的/ 基础/ 上/ 给出/ 了/ 两个/ 含有/ 缺陷/ 的/ 示例/ 程序/ ./ 其中/ ,/ 示例/ 程序/ P1/ 包含/ 一个/ 赋值/ 缺陷/ ,/ 将/ 语句/ s9/ “/ m/ =/ x/ ”/ 修改/ 为/ “/ m/ =/ y/ ”/ ./ 示例/ 程序/ P2/ 包含/ 两个/ 缺陷/ ,/ 在/ P1/ 的/ 基础/ 上/ 又/ 增加/ 了/ 一个/ 谓词/ 缺陷/ ,/ 将/ 语句/ s5/ “/ if/ (/ y/ </ z/ )/ ”/ 修改/ 为/ “/ if/ (/ y/ </ z/ -/ 1/ )/ ”/ ./ 测试用例/ 集/ T/ =/ {/ t1/ ,/ t2/ ,/ t3/ ,/ t4/ ,/ t5/ ,/ t6/ }/ ,/ 测试用例/ 的/ 成功/ // 失效/ 状态/ p/ 表示/ 测试用例/ 执行/ 成功/ ,/ f/ 表示/ 执行/ 失效/ ./ 对于/ P1/ 而言/ ,/ 成功/ 测试用例/ 集/ Tp/ =/ {/ t1/ ,/ t2/ ,/ t3/ ,/ t4/ ,/ t5/ }/ ,/ 失效/ 测试用例/ 集/ Tf/ =/ {/ t6/ }/ ./ 对于/ P2/ 而言/ ,/ Tp/ =/ {/ t1/ ,/ t3/ ,/ t4/ }/ ,/ Tf/ =/ {/ t2/ ,/ t5/ ,/ t6/ }/ ./ 表格/ 中/ 的/ 数字/ 表示/ 测试用例/ 集/ T/ 执行程序/ P1/ 和/ P2/ 的/ 运行/ 时/ 信息/ Γ/ ,/ 是/ 语句/ 覆盖/ 信息/ ,/ 即/ 如果/ 执行/ 测试用例/ tk/ 时/ ,/ 语句/ si/ 被/ 执行/ ,/ 则/ si/ 和/ tk/ 对应/ 的/ 单元格/ 数值/ 为/ 1/ ;/ 否则/ 为/ 空白/ ./ 5.2/ 覆盖/ 分析方法/ 覆盖/ 分析方法/ 通过/ 对比/ 失效/ 执行/ 和/ 成功/ 执行/ 的/ 程序/ 元素/ (/ 如/ 语句/ 、/ 谓词/ 、/ 分支/ 、/ 基本块/ )/ 的/ 覆盖/ 信息/ ,/ 定位/ 可疑/ 代码/ ./ 主要/ 思想/ 是/ 如果/ 某个/ 程序/ 元素/ 被/ 较/ 多/ 的/ 失效/ 执行/ 覆盖/ ,/ 却/ 很少/ 被/ 成功/ 执行/ 覆盖/ ,/ 则/ 该/ 程序/ 元素/ 很/ 可能/ 含有/ 缺陷/ ./ 这种/ 方法/ 通常/ 包含/ 如下/ 步骤/ :/ (/ 1/ )/ 执行/ 测试用例/ ,/ 收集/ 测试用例/ 执行/ 过程/ 中/ 的/ 覆盖/ 信息/ (/ 即/ 哪些/ 程序/ 元素/ 被/ 执行/ )/ ,/ 以及/ 测试用例/ 的/ 执行/ 结果/ (/ 成功/ // 失效/ )/ ./ (/ 2/ )/ 统计分析/ 失效/ 执行/ 和/ 成功/ 执行/ 的/ 程序/ 元素/ 覆盖/ 信息/ ,/ 采用/ 预先/ 定义/ 的/ 度量/ 公式/ ,/ 计算/ 各个/ 语句/ 的/ 可疑/ 度/ ,/ 并/ 将/ 语句/ 按照/ 可疑/ 程度/ 由高到/ 低/ 排序/ ,/ 可疑/ 度越/ 高/ 、/ 排序/ 越靠/ 前/ 则/ 越/ 可能/ 是/ 缺陷/ 语句/ ./ 各种/ 覆盖/ 分析方法/ 一般/ 都/ 遵从/ 上述/ 步骤/ ,/ 主要/ 区别/ 在于/ 采用/ 的/ 度量/ 公式/ 不同/ ./ Naish/ 等/ 人/ [/ 32/ ]/ 用/ 模型/ 和/ 实验/ 评价/ 了/ 36/ 种/ 采用/ 不同/ 度量/ 公式/ 的/ 覆盖/ 分析方法/ ./ 结果表明/ Optimal/ 方法/ 与/ 其他/ 方法/ 相比/ ,/ 可以/ 获得/ 较优/ 的/ 错误/ 定位/ 有效性/ ./ 证明/ 尽管/ 有些/ 方法/ 度量/ 公式/ 不同/ ,/ 但是/ 对于/ IF/ -/ ELSE2/ 型/ 程序/ 在/ 可疑/ 语句/ 排序/ 目的/ 上/ 是/ 等价/ 的/ ./ 表/ 1/ 列出/ 了/ 影响/ 广泛/ 的/ 基于/ 覆盖/ 分析/ 的/ 软件/ 错误/ 定位/ 技术/ ,/ 它们/ 被/ Naish/ 等/ 人/ [/ 32/ ]/ 证明/ 对于/ IF/ -/ ELSE2/ 型/ 程序/ 和/ 多个/ 方法/ 等价/ ,/ 比如/ Tarantula/ [/ 4/ ]/ 方法/ 和/ CBI/ [/ 9/ ]/ 方法/ 等价/ ,/ Wong/ 方法/ [/ 15/ ]/ 和/ 其他/ 9/ 种/ 方法/ 等价/ ./ 这些/ 方法/ 应用/ 于/ 示例/ 程序/ 获得/ 的/ 基于/ 语句/ 覆盖/ 的/ 错误/ 定位/ 结果/ 如表/ 2/ 所示/ ./ 表格/ 中/ 的/ 数值/ 为/ 语句/ 的/ 可疑/ 度/ ./ 对于/ 示例/ 程序/ P1/ ,/ 3/ 种/ 方法/ 均/ 将/ 缺陷/ 语句/ s9/ 赋以/ 最高/ 可疑/ 度/ ,/ 因此/ 可以/ 有效/ 定位/ 缺陷/ ./ 但是/ 对于/ 示例/ 程序/ P2/ 中/ 的/ 缺陷/ ,/ 各/ 方法/ 均/ 没能/ 较/ 好/ 地区/ 表/ 1/ 影响/ 广泛/ 的/ 基于/ 覆盖/ 分析/ 的/ 软件/ 错误/ 定位/ 技术/ 错误/ 定位/ 技术/ 语句/ 可疑/ 度/ 度量/ 公式/ TarantulaWongOptimalaef/ 语句/ 被/ 测试用例/ 集合/ 中/ 失效/ 测试用例/ 执行/ 的/ 次数/ ./ anf/ 语句/ 没有/ 被/ 测试用例/ 集合/ 中/ 失效/ 测试用例/ 执行/ 的/ 次数/ ./ aep/ 语句/ 被/ 测试用例/ 集合/ 中/ 成功/ 测试用例/ 执行/ 的/ 次数/ ./ anp/ 语句/ 没有/ 被/ 测试用例/ 集合/ 中/ 成功/ 测试用例/ 执行/ 的/ 次数/ ./ 表/ 2/ 基于/ 覆盖/ 分析/ 的/ 方法/ 分析/ 示例/ 程序/ 的/ 结果/ TarantulaWongOptimal/ 语句/ s1s2s3s4s5s6s7s8s9s10s11s12s13s14s15/ 分/ 缺陷/ 语句/ 和/ 非/ 缺陷/ 语句/ ,/ 需/ 人工/ 审查/ 多条/ 语句/ 才能/ 定位/ 到/ 缺陷/ 语句/ ./ 覆盖/ 分析方法/ 的/ 优点/ 是/ 提供/ 语句/ 的/ 可疑/ 程度/ 描述/ ,/ 并且/ 由于/ 不/ 需要/ 形式化/ 建模/ ,/ 计算/ 复杂度/ 低/ ,/ 适于/ 分析/ 大规模/ 程序/ ./ 存在/ 的/ 主要/ 问题/ 是/ :/ (/ 1/ )/ 通常/ 只能/ 揭示/ 统计/ 关联/ (/ 变量/ 的/ 联合/ 分布/ )/ ,/ 而/ 不能/ 充分/ 分析程序/ 元素/ 间/ 的/ 相互影响/ ./ 当/ 软件/ 错误/ 涉及/ 多个/ 程序/ 元素/ 间/ 复杂/ 交互/ 的/ 情况/ 时/ ,/ 可能/ 定位/ 不到/ 错误/ 语句/ ./ 例如/ ,/ 对于/ P2/ 中/ 的/ 缺陷/ 语句/ s5/ ,/ 由于/ 只/ 统计/ 语句/ 覆盖/ ,/ 而/ 语句/ s1/ 、/ s2/ 、/ s3/ 、/ s4/ 、/ s5/ 被/ 相同/ 的/ 测试用例/ 覆盖/ ,/ 因此/ ,/ 这些/ 语句/ 具有/ 相同/ 的/ 可疑/ 度值/ ,/ 导致/ 无法/ 准确/ 区分/ 缺陷/ 语句/ 和/ 非/ 缺陷/ 语句/ ./ (/ 2/ )/ 通常/ 只/ 检测/ 可疑/ 程序/ 语句/ 或/ 谓词/ ,/ 缺少/ 对/ 错误行为/ 状态/ 的/ 描述/ ,/ 需要/ 由/ 开发人员/ 进一步/ 判定/ 是否/ 存在/ 错误/ ./ 由于/ 错误/ 可能/ 起源于/ 失效/ 点/ 之前/ 的/ 任何/ 位置/ ,/ 因此/ 仅/ 通过/ 孤立/ 的/ 可疑/ 语句/ 或/ 谓词/ 来/ 理解/ 软件/ 错误/ 的/ 产生/ 原因/ 是/ 很/ 困难/ 的/ ./ (/ 3/ )/ 对/ 测试用例/ 的/ 质量/ 要求/ 较/ 高/ ./ 如果/ 测试/ 用/ Page6/ 例/ 选择/ 不当/ ,/ 会/ 导致/ 冗余/ 测试用例/ 具有/ 相同/ 或/ 类似/ 的/ 覆盖/ 信息/ ,/ 这些/ 冗余/ 的/ 覆盖/ 信息/ 可能/ 降低/ 错误/ 定位/ 的/ 精度/ 和/ 效率/ [/ 93/ ]/ ./ 此外/ ,/ 覆盖/ 分析方法/ 试图/ 查找/ 与/ 失效/ 相关/ 的/ 语句/ ,/ 因此/ 无法/ 识别/ 频繁/ 执行/ 但是/ 没有/ 导致/ 失效/ 的/ 错误/ 语句/ ,/ 因此/ 巧合/ 正确/ 的/ 测试用例/ [/ 23/ ]/ (/ 即/ 覆盖/ 了/ 错误/ 语句/ 但/ 未/ 引发/ 失效/ 运行/ 结果/ 的/ 测试用例/ )/ 会/ 导致/ 错误/ 语句/ 具有/ 较/ 低/ 的/ 可疑/ 度/ ,/ 降低/ 该/ 方法/ 的/ 有效性/ ./ 例如/ ,/ t1/ 为/ 巧合/ 正确/ 的/ 测试用例/ ,/ 它/ 执行/ 了/ 缺陷/ 语句/ s9/ ,/ 但/ 没有/ 产生/ 失效/ ,/ 如果/ 在/ 测试用例/ 集/ T/ 中/ 增加/ 与/ t1/ 具有/ 相同/ 语句/ 覆盖/ 的/ 测试用例/ ,/ 则/ 会/ 导致/ Tarantula/ 和/ Wong/ 等/ 方法/ 计算/ s9/ 可疑/ 度/ 的/ aep/ 值/ 的/ 增加/ ,/ 进而/ 降低/ 其/ 可疑/ 度/ ./ 针对/ 覆盖/ 分析方法/ 对/ 不同/ 数据/ 集/ 的/ 定位/ 有效性/ 不/ 稳定/ 的/ 问题/ ,/ 丁晖/ 等/ 人/ [/ 78/ ]/ 提出/ 一种/ 基于/ 事件/ 信息量/ 的/ 错误/ 定位/ 方法/ ,/ 根据/ 测试/ 信息/ 中/ 不同/ 事件/ 的/ 类型/ 及其/ 发生/ 的/ 概率/ ,/ 结合/ 语句/ 的/ 执行/ 信息/ ,/ 动态/ 计算/ 和/ 调整/ 错误/ 定位/ 的/ 结果/ ,/ 使/ 之/ 能够/ 适应/ 不同/ 类型/ 的/ 数据/ 集/ ,/ 尽可能/ 地/ 降低/ 用例/ 集对/ 定位/ 效果/ 的/ 影响/ ./ 5.3/ 程序/ 切片/ 方法/ 程序/ 切片/ 方法/ 主要/ 包括/ 静态/ 切片/ 和/ 动态/ 切片/ ./ 静态/ 切片/ 方法/ 通过/ 静态/ 分析/ 源程序/ ,/ 根据/ 依赖/ 信息/ 识别/ 可能/ 影响/ 程序/ 中/ 某个/ 位置/ 的/ 变量值/ 的/ 语句/ 集合/ ./ 动态/ 切片/ 方法/ 仅/ 对/ 当前/ 输入/ 生成/ 的/ 程序执行/ 路径/ 进行/ 分析/ ,/ 识别/ 实际/ 影响/ 给定/ 程序执行/ 点/ 的/ 变量值/ 的/ 语句/ 集合/ ./ 动态/ 切片/ 方法/ 还/ 可以/ 分为/ 反向/ 动态/ 切片/ 和/ 前/ 向/ 动态/ 切片/ ./ 在/ 某个/ 程序/ 点/ 的/ 变量/ 的/ 反向/ 动态/ 切片/ 包括/ 影响/ 该/ 变量值/ 的/ 所有/ 执行/ 语句/ ./ 在/ 某个/ 程序/ 点/ 的/ 变量/ 的/ 前/ 向/ 动态/ 切片/ ,/ 则/ 包括/ 被/ 该/ 变量值/ 影响/ 的/ 所有/ 执行/ 语句/ ./ 例如/ ,/ 当用/ t6/ 测试/ 示例/ 程序/ P1/ ,/ 发现/ 在/ 语句/ s15/ 处/ 输出/ 错误/ 的/ m/ 值时/ ,/ 对/ 其/ 执行/ 动态/ 反向/ 切片/ 的/ 结果/ 为/ Backward/ (/ t6/ ,/ m/ @/ s15/ )/ =/ {/ s15/ ,/ s9/ ,/ s8/ ,/ s5/ ,/ s1/ }/ ./ 对/ 其/ 第/ 1/ 个/ 参数/ argv/ [/ 1/ ]/ 执行/ 动态/ 前向/ 切片/ 的/ 结果/ 为/ Forward/ (/ t6/ ,/ argv/ [/ 1/ ]/ )/ =/ {/ s1/ ,/ s9/ ,/ s15/ }/ ./ 当用/ t5/ 测试/ 示例/ 程序/ P2/ ,/ 发现/ 在/ 语句/ s15/ 处/ 输出/ 错误/ 的/ m/ 值时/ ,/ 对/ 其/ 〈/ s15/ ,/ m/ 〉/ 执行/ 动态/ 反向/ 切片/ 的/ 结果/ 为/ Backward/ (/ t5/ ,/ m/ @/ s15/ )/ =/ {/ s15/ ,/ s12/ ,/ s11/ ,/ s10/ ,/ s2/ }/ ./ 对/ 其/ 第/ 2/ 个/ 参数/ argv/ [/ 2/ ]/ 执行/ 动态/ 前向/ 切片/ 的/ 结果/ 为/ Forward/ (/ t5/ ,/ argv/ [/ 2/ ]/ )/ =/ {/ s2/ ,/ s5/ ,/ s10/ ,/ s11/ ,/ s12/ ,/ s15/ }/ ./ 切片/ 方法/ 的/ 优点/ 是/ 描述/ 了/ 失效/ 产生/ 的/ 上下文/ ,/ 并且/ 所/ 需/ 测试用例/ 较/ 少/ ,/ 通常/ 只/ 需要/ 提供/ 失效/ 测试用例/ ./ 例如/ Backward/ (/ t6/ ,/ m/ @/ s15/ )/ 仅/ 通过/ 分析/ 失效/ 测试用例/ t6/ 的/ 执行/ 信息/ ,/ 输出/ 了/ 与/ 语句/ s15/ 处/ 错误/ 的/ m/ 值/ 存在/ 控制/ 依赖/ 关系/ 的/ 语句/ (/ s8/ ,/ s5/ )/ 和/ 数据/ 依赖/ 关系/ 的/ 语句/ (/ s9/ ,/ s1/ )/ ./ 通过/ 分析/ 该/ 切片/ 可以/ 发现/ s9/ 处/ 的/ 缺陷/ 语句/ ./ 切片/ 方法/ 的/ 缺点/ 是/ 不/ 提供/ 语句/ 的/ 可疑/ 程度/ 描述/ ,/ 并且/ 切片/ 规模/ 仍然/ 可能/ 很大/ ,/ 导致/ 在/ 切片/ 中/ 观察/ 程序/ 行为/ 的/ 代价/ 较大/ ./ Zhang/ 与/ Gupta/ 等/ 人/ 研究/ 发现/ 动态/ 切片/ 通常/ 可以/ 包含/ 导致/ 失效/ 产生/ 的/ 错误代码/ ,/ 并且/ 动态/ 切片/ 的/ 规模/ 与/ 实际/ 执行/ 的/ 代码/ 数量/ 相比/ 要/ 小/ 的/ 多/ ,/ 但是/ 切片/ 中/ 实际/ 的/ 代码/ 规模/ 仍然/ 可能/ 很大/ ,/ 仍/ 可能/ 包含/ 大量/ 的/ 不会/ 生成/ 错误/ 值/ 的/ 代码/ ./ 因此/ 先后/ 提出/ 失效/ 输入/ 的/ 前/ 向/ 动态/ 切片/ 、/ 砍片/ (/ Failureinducingchop/ )/ [/ 45/ ]/ 、/ 带有/ 置信度/ 的/ 动态/ 切片/ 剪枝/ [/ 46/ ]/ 进一步/ 缩小/ 切片/ 规模/ ,/ 但/ 仍/ 需要/ 开发人员/ 审查/ 大量/ 的/ 代码/ ./ 文万志/ 和/ 李必信/ 等/ 人/ ,/ 针对/ 面向对象/ 程序/ 提出/ 了/ 一种/ 基于/ 层次/ 切片/ 谱/ 的/ 软件/ 错误/ 定位/ 技术/ ,/ 利用/ 层次/ 切片/ 技术/ 提取/ 各层次/ 错误/ 相关/ 元素/ ,/ 减小/ 程序/ 谱/ 的/ 规模/ ,/ 从而/ 提高/ 语句/ 搜索/ 的/ 效率/ [/ 82/ ]/ ./ 又/ 针对/ 程序/ 谱分析/ 方法/ 会/ 随着/ 程序/ 中/ 错误/ 数目/ 的/ 增多/ 而/ 效率/ 下降/ ,/ 提出/ 了/ 一种/ 基于/ 条件/ 执行/ 切片/ 谱/ 的/ 多/ 错误/ 定位/ 技术/ ,/ 根据/ 输入/ 变量/ 的/ 谓词/ 条件/ 构建/ 错误/ 相关/ 条件/ 执行/ 切片/ 的/ 谱/ 矩阵/ ,/ 然后/ 依次/ 计算错误/ 相关/ 条件/ 执行/ 切片/ 中/ 的/ 语句/ 或/ 语句/ 块/ 的/ 可疑/ 度/ ,/ 以/ 提高/ 多/ 错误/ 定位/ 的/ 效率/ [/ 83/ ]/ ./ 这/ 两种/ 方法/ 结合/ 了/ 程序/ 切片/ 和/ 程序/ 谱/ 方法/ 的/ 优点/ ./ 5.4/ 依赖/ 分析方法/ 针对/ 覆盖/ 分析方法/ 缺少/ 对/ 程序执行/ 状态/ 及其/ 转移/ 的/ 分析/ ,/ 无法/ 有效/ 分析/ 失效/ 感染/ 状态/ 传播/ 的/ 问题/ ,/ 研究/ 人员/ 提出/ 了/ 依赖/ 分析方法/ ./ 依赖/ 分析方法/ 的/ 基本/ 思想/ 类似/ 于/ 覆盖/ 分析方法/ ,/ 不同之处/ 在于/ 在/ 统计分析/ 成功/ 执行/ 和/ 失效/ 执行/ 的/ 语句/ 状态/ 时/ 考虑/ 程序/ 实体/ 间/ 的/ 依赖/ 关系/ ,/ 例如/ 控制/ 依赖/ 和/ 数据/ 依赖/ ./ Zhang/ 等/ 人/ [/ 25/ ]/ 提出/ 了/ CP/ (/ CapturePropagation/ )/ 方法/ ./ 认为/ 错误/ 的/ 程序/ 状态/ 会/ 沿着/ 控制/ 依赖/ 向/ 后/ 传播/ ,/ 因此/ 通过/ 抽象/ 控制流/ 来/ 传播/ 基本块/ 的/ 感染/ 状态/ ./ 首先/ ,/ 对/ 程序/ 进行/ 控制/ 依赖/ 分析/ ,/ 建立/ 控制流/ 图/ ./ 然后/ ,/ 计算/ 每条/ 控制/ 依赖边/ 传播/ 错误/ 的/ 可疑/ 值/ ./ 最后/ ,/ 模仿/ 拓扑/ 排序/ 的/ 过程/ ,/ 利用/ 后续/ 基本块/ 的/ 可疑/ 值/ 逆向/ 推导/ 前驱/ 基本块/ 的/ 可疑/ 值/ ./ Baah/ 等/ 人/ [/ 55/ ]/ 在/ 程序/ 依赖图/ 的/ 基础/ 上/ 使用/ 概率/ 图/ 模型/ 描述/ 程序/ 的/ 状态/ ,/ 定义/ 了/ PPDG/ (/ ProbabilisticProgramDependenceGraph/ )/ ,/ 并/ 将/ 其/ 应用/ 于/ 错误/ 定位/ 和/ 理解/ ./ 下面/ 介绍/ 该/ 方法/ 分析/ 示例/ 程序/ 的/ 过程/ 及/ 结果/ ./ 图/ 4/ 是/ 示例/ 程序/ P1/ 的/ 程序/ 依赖图/ ,/ 其中/ 节点/ 表示/ 程序/ 语句/ ,/ 实线/ 边/ 表示/ 节点/ 之间/ 的/ 控制/ 依赖/ ,/ 虚线/ Page7/ 图/ 4/ 示例/ 程序/ P1/ 的/ 程序/ 依赖图/ 边/ 表示/ 数据/ 依赖/ ./ 控制/ 依赖/ 边上/ 的/ True/ 和/ False/ 表示/ 谓词/ 状态/ ./ 此外/ PPDG/ 还/ 对/ 传统/ 的/ 程序/ 依赖图/ 进行/ 了/ 改进/ ,/ 例如/ 对/ 谓词/ 节点/ 增加/ 了/ 数据/ 依赖/ 节点/ (/ 表示/ 为/ Di/ )/ 等/ ./ PPDG/ 中/ 的/ 每个/ 节点/ 都/ 对应/ 一个/ 与/ 程序执行/ 相关/ 的/ 状态/ 集合/ ,/ 并且/ 每个/ 节点/ 状态/ 都/ 对应/ 一个/ 概率/ 值/ ./ 示例/ 程序/ P1/ 的/ 节点/ 状态/ 及/ 概率分布/ 见表/ 3/ ./ 符表/ 3/ 示例/ 程序/ 犘/ 1/ 的/ 节点/ 状态/ 及/ 概率分布/ 节点/ s1/ ,/ s2/ ,/ s3s4D5s5D6s6s7D8s8s9/ 由于/ 节点/ 的/ 状态/ 受其/ 控制/ 依赖/ 和/ 数据/ 依赖/ 前驱/ 节点/ 的/ 影响/ ,/ 因此/ 节点/ 状态/ 的/ 概率/ 定义/ 为/ 条件/ 概率/ ./ 这些/ 概率/ 值/ 是/ 通过/ 用/ 多/ 组成/ 功/ 测试用例/ 执行/ 程序代码/ ,/ 捕获/ 节点/ 状态/ 轨迹/ ,/ 然后/ 统计/ 学习/ 获得/ 的/ ./ 如果/ 节点/ 没有/ 前驱/ 节点/ 则/ 其/ 状态/ 概率/ 为/ 该/ 状态/ 在/ 成功/ 执行/ 中/ 出现/ 的/ 次数/ 与/ 该/ 节点/ 执行/ 次数/ 的/ 比值/ ,/ 否则/ 为/ 其/ 前驱/ 节点/ 在/ 当前/ 状态/ 下/ 的/ 条件/ 概率/ ./ 具有/ 较/ 高/ 概率/ 的/ 状态/ 是/ 期望/ 的/ 程序/ 状态/ ./ 在/ 错误/ 定位/ 过程/ 中/ ,/ 对于/ 失效/ 执行/ 的/ 各个/ 节点/ 状态/ ,/ 查找/ 其/ 在/ PPDG/ 中/ 的/ 概率/ ,/ 并/ 按照/ 由/ 低/ 到/ 高/ 的/ 顺序排列/ ,/ 具有/ 较/ 低/ 概率/ 值/ 的/ 节点/ 状态/ 具有/ 较大/ 号/ ⊥/ 表示/ 节点/ 被/ 执行/ ,/ ⊥/ 表示/ 节点/ 未/ 被/ 执行/ ./ 谓词/ 节点/ 状态/ 表示/ 为/ 逻辑关系/ ,/ 数据流/ di/ (/ x/ )/ 表示/ 节点/ i/ 定义/ 了/ 变量/ x/ ./ 例如/ 节点/ s4/ 的/ 状态/ 集合/ 为/ {/ d3/ (/ z/ )/ ,/ ⊥/ }/ ,/ 表示/ s4/ 或者/ 使用/ 了/ 节点/ s3/ 定义/ 的/ 变量/ z/ ,/ 或者/ 未/ 被/ 执行/ ./ 示例/ 程序/ P2/ 和/ P1/ 具有/ 相同/ 的/ 程序/ 依赖图/ 表示/ 形式/ 和/ 节点/ 状态/ ,/ 不同之处/ 在于/ 语句/ s5/ 处/ 的/ 谓词/ 表达式/ 不同/ 以及/ 程序/ 的/ 动态/ 执行/ 信息/ 不同/ ./ 节点/ s10D11s11s12D13s13s14s15/ 的/ 可疑/ 度/ ./ 例如/ ,/ 失效/ 测试用例/ t6/ 执行/ 示例/ 程序/ P1/ 的/ 状态/ 轨迹/ 如表/ 4/ 左侧/ 部分/ 所示/ (/ 对应/ 于图/ 4/ 中/ 加粗/ 部分/ )/ ./ 这些/ 节点/ 状态/ 中/ ,/ 当/ 前驱/ 节点/ 状态/ s2/ =/ ⊥/ 时/ ,/ s9/ =/ d2/ (/ y/ )/ 具有/ 最低/ 的/ 概率/ 值/ ,/ 即/ 语句/ s9/ 和/ s2/ 间/ 对于/ 变量/ y/ 存在/ 数据/ 依赖/ 关系/ 最/ 可疑/ ./ 因此/ 可以/ 定位/ 缺陷/ 语句/ s9/ ./ 失效/ 测试用例/ t2/ 执行/ 示例/ 程序/ P2/ 的/ 状态/ 轨迹/ 如表/ 4/ 右侧/ 部分/ 所示/ ./ t2/ 执行/ 了/ 缺陷/ 语句/ s5/ ,/ 但/ 没有/ 执行/ 缺陷/ 语句/ s9/ ./ 状态/ s5/ =/ (/ =/ =/ )/ 的/ 概率/ 值/ 排序/ 为/ 3/ ./ 由于/ 没有/ 被/ 成功/ 测试用例/ 覆盖/ ,/ 状态/ s11/ =/ </ 和/ s13/ =/ </ 的/ 可疑/ 度为/ 0/ ./ Page8/ 表/ 4/ 基于/ PPDG/ 方法/ 分析/ 示例/ 程序/ 犘/ 1/ 和/ 犘/ 2/ 的/ 结果/ 失效/ 测试用例/ t6/ 执行/ 状态/ 轨迹/ {/ (/ s1/ :/ ⊥/ )/ ,/ (/ s2/ :/ ⊥/ )/ ,/ (/ s3/ :/ ⊥/ )/ ,/ (/ s4/ :/ d3/ (/ z/ )/ )/ ,/ (/ D5/ :/ (/ d2/ (/ y/ )/ ,/ d3/ (/ z/ )/ )/ )/ ,/ (/ s5/ :/ </ )/ ,/ (/ D6/ :/ (/ d1/ (/ x/ )/ ,/ d2/ (/ y/ )/ )/ )/ ,/ (/ s6/ :/ >/ )/ ,/ (/ D8/ :/ (/ d1/ (/ x/ )/ ,/ d3/ (/ z/ )/ )/ )/ ,/ (/ s8/ :/ </ )/ ,/ (/ s9/ :/ d2/ (/ y/ )/ )/ ,/ (/ s15/ :/ d4/ (/ m/ )/ )/ }/ 依赖/ 分析方法/ 的/ 优点/ 是/ 不仅/ 给出/ 程序/ 元素/ 的/ 可疑/ 值/ ,/ 描述/ 其/ 可疑/ 程度/ ,/ 还/ 考虑/ 了/ 程序/ 感染/ 状态/ 的/ 传播/ ,/ 并且/ 控制/ 依赖/ 或者/ 数据/ 依赖/ 信息/ 有助于/ 理解/ 失效/ 产生/ 的/ 上下文/ ./ 缺点/ 是/ 动态/ 统计分析/ 每个/ 节点/ 的/ 状态/ 及/ 依赖/ 关系/ (/ 特别/ 是/ 数据/ 依赖/ )/ 具有/ 较/ 高/ 的/ 计算/ 复杂度/ ./ 此外/ ,/ 该/ 方法/ 本质/ 上/ 也/ 是/ 统计/ 方法/ ,/ 对/ 测试用例/ 的/ 数量/ 和/ 质量/ 要求/ 较/ 高/ ./ 何加浪/ 等/ 人/ [/ 86/ ]/ 提出/ 了/ 一种/ 基于/ 传播/ 感知/ 的/ 程序/ 故障/ 定位/ 方法/ ./ 为了/ 降低/ 计算/ 复杂度/ ,/ 该/ 方法/ 首先/ 利用/ 节点/ 在/ 成功/ 执行/ 路径/ 和/ 失效/ 执行/ 路径/ 中/ 出现/ 的/ 频率/ 不同/ 确定/ 可疑/ 空间/ 中/ 的/ 每个/ 节点/ 的/ 初始/ 可疑/ 度/ ,/ 接下来/ 通过/ 引入/ 边/ 传播/ 趋势/ 的/ 概念/ 确定/ 初始/ 可疑/ 度/ 最大/ 的/ 节点/ 是否/ 具有/ 故障/ 传播/ 现象/ ,/ 最后/ 对/ 感知/ 的/ 故障/ 传播/ 相关/ 节点/ 进行/ 可疑/ 度/ 修正/ 来/ 确定/ 节点/ 的/ 最终/ 可疑/ 度/ ./ 赵磊/ 等/ 人/ [/ 87/ ]/ 针对/ 覆盖/ 分析方法/ 中/ 代码/ 覆盖率/ 的/ 独立/ 统计/ 忽略/ 了/ 程序/ 内/ 存在/ 的/ 复杂/ 控制/ 依赖/ 和/ 数据/ 依赖/ 的/ 问题/ ,/ 提出/ 程序/ 失效/ 规则/ 及/ 基于/ 覆盖/ 向量/ 的/ 覆盖/ 信息/ 分析模型/ ,/ 并/ 在/ 此/ 模型/ 基础/ 之上/ ,/ 指出/ 高/ 可疑/ 代码/ 与/ 错误代码/ 在/ 执行/ 路径/ 上/ 的/ 覆盖/ 一致性/ ,/ 进而/ 提出/ 用于/ 挖掘/ 与/ 高/ 可疑/ 代码/ 相关联/ 的/ 错误代码/ 的/ 频繁/ 集/ 求解/ 方法/ ./ 5.5/ 状态/ 变更/ 方法/ 状态/ 变更/ 方法/ 在/ 程序执行/ 时/ 获取/ 或/ 修改/ 程序/ 的/ 状态/ ,/ 找出/ 对/ 测试/ 结果/ (/ 成功/ // 失效/ )/ 产生/ 影响/ 的/ 关键/ 程序/ 元素/ ,/ 进而/ 定位/ 可能/ 导致/ 失效/ 的/ 代码/ ./ Zeller/ 等/ 人/ [/ 61/ ]/ 提出/ 了/ 一种/ 基于/ 程序/ 状态/ 变更/ 的/ 错误/ 定位/ 技术/ Deltadebugging/ ,/ 开发/ 了/ 工具/ igor/ ,/ 自/ 失效/ 测试用例/ t2/ 执行/ 状态/ 轨迹/ {/ (/ s1/ :/ ⊥/ )/ ,/ (/ s2/ :/ ⊥/ )/ ,/ (/ s3/ :/ ⊥/ )/ ,/ (/ s4/ :/ d3/ (/ z/ )/ )/ ,/ (/ D5/ :/ (/ d2/ (/ y/ )/ ,/ d3/ (/ z/ )/ )/ )/ ,/ (/ s5/ :/ =/ =/ )/ ,/ (/ s10/ :/ =/ =/ )/ ,/ (/ D11/ :/ (/ d1/ (/ x/ )/ ,/ d2/ (/ y/ )/ )/ )/ ,/ (/ s11/ :/ </ )/ ,/ (/ D13/ :/ (/ d1/ (/ x/ )/ ,/ d3/ (/ z/ )/ )/ )/ ,/ (/ s13/ :/ </ )/ ,/ (/ s15/ :/ d4/ (/ m/ )/ )/ }/ 动/ 缩小/ 程序/ 成功/ 执行/ 和/ 失效/ 执行/ 过程/ 之间/ 的/ 区别/ ,/ 辅助/ 错误/ 定位/ ./ 首先/ 通过/ 对/ 源程序/ 进行/ 静态/ 分析/ 得到/ 其/ 定义/ 的/ 所有/ 变量/ 以及/ 它们/ 的/ 值集/ ,/ 以此/ 建立/ 程序/ 状态图/ ./ 然后/ 比较/ 成功/ 执行/ 对应/ 的/ 程序/ 状态图/ 和/ 失效/ 执行/ 对应/ 的/ 程序/ 状态图/ ,/ 求/ 出/ 它们/ 的/ 最小/ 公共/ 子图/ ,/ 从而/ 得到/ 它们/ 的/ 差异/ ./ 最后/ ,/ 利用/ 这些/ 差异/ 变量/ ,/ 跟踪/ 它们/ 的/ 值/ ,/ 直到/ 找到/ 错误/ 语句/ [/ 62/ ]/ ./ igor/ 分析/ 示例/ 程序/ P1/ 的/ 结果/ 如图/ 5/ 所示/ ./ 由于/ igor/ 输出/ 行号/ 是/ 自然/ 行号/ (/ 如/ 包括/ 函数/ 名/ 、/ 变量/ 声明/ 语句/ 等/ )/ ,/ 因此/ 输出/ 结果/ sample1/ ./ c/ :/ 8/ 对应/ 于图/ 3/ 中/ 的/ 可/ 执行/ 语句/ s4/ ./ igor/ 通过/ 对比/ 失效/ 测试用例/ t6/ (/ 2/ ,/ 1/ ,/ 3/ )/ 和/ 成功/ 测试用例/ t2/ (/ 1/ ,/ 2/ ,/ 3/ )/ 的/ 执行/ 状态值/ ,/ 将/ t6/ 在/ 语句/ s4/ 和/ s8/ 处/ 的/ y/ 值/ 以及/ s15/ 处/ 的/ m/ 值/ 输出/ 为/ 与/ 失效/ 相关/ 的/ 状态/ ./ 该/ 结果/ 没有/ 直接/ 定位/ 到/ 缺陷/ 语句/ ,/ 需要/ 进一步/ 分析/ s8/ 处/ 的/ 选择/ 分支/ ,/ 才能/ 发现/ s9/ 处/ 的/ 缺陷/ ./ 输入/ 信息/ :/ 示例/ 程序/ P1/ ,/ 失效/ 测试用例/ t6/ (/ 2/ ,/ 1/ ,/ 3/ )/ ,/ 成功/ 测试用例/ t2/ (/ 1/ ,/ 2/ ,/ 3/ )/ igor/ 的/ 输出/ 结果/ :/ ‘/ sample1/ ’/ FAILSifitoutputs/ (/ ?/ i/ )/ (/ \/ s/ |/ \/ A/ )/ 1/ (/ \/ s/ |/ \/ Z/ )/ ‘/ sample1/ ’/ PASSESifitoutputs/ (/ ?/ i/ )/ (/ \/ s/ |/ \/ A/ )/ 2/ (/ \/ s/ |/ \/ Z/ )/ Thisiswhathappenswhen/ ‘/ sample1/ ’/ isinvokedas/ ‘/ sample1213/ ’/ :/ At/ ‘/ main/ ’/ (/ sample1/ ./ c/ :/ 8/ (/ s4/ )/ )/ ,/ yis1At/ ‘/ main/ ’/ (/ sample1/ ./ c/ :/ 12/ (/ s8/ )/ )/ ,/ yis1At/ ‘/ main/ ’/ (/ sample1/ ./ c/ :/ 19/ (/ s15/ )/ )/ ,/ mis1igor/ 分析/ 示例/ 程序/ P2/ 的/ 结果/ 如图/ 6/ 所示/ ,/ 没有/ 直接/ 定位/ 到/ 缺陷/ 语句/ ./ 用/ 同一个/ 失效/ 测试用例/ t2/ (/ 1/ ,/ 2/ ,/ 3/ )/ 但/ 不同/ 的/ 成功/ 测试用例/ 执行/ P2/ 时/ ,/ igor/ 在/ 语句/ s4/ 处/ 输出/ 了/ 不同/ 的/ 差异/ 变量/ ./ 可见/ 其/ 输出/ 结果/ Page9/ 受/ 所/ 选择/ 的/ 测试用例/ 的/ 影响/ ./ 输入/ 信息/ :/ 示例/ 程序/ P2/ ,/ 失效/ 测试用例/ t2/ (/ 1/ ,/ 2/ ,/ 3/ )/ ,/ 成功/ 测试用例/ t4/ (/ 5/ ,/ 5/ ,/ 5/ )/ igor/ 的/ 输出/ 结果/ :/ ‘/ sample2/ ’/ FAILSifitoutputs/ (/ ?/ i/ )/ (/ \/ s/ |/ \/ A/ )/ 3/ (/ \/ s/ |/ \/ Z/ )/ ‘/ sample2/ ’/ PASSESifitoutputs/ (/ ?/ i/ )/ (/ \/ s/ |/ \/ A/ )/ 5/ (/ \/ s/ |/ \/ Z/ )/ Thisiswhathappenswhen/ ‘/ sample2/ ’/ isinvokedas/ ‘/ sample2534/ ’/ :/ At/ ‘/ main/ ’/ (/ sample2/ ./ c/ :/ 8/ (/ s4/ )/ )/ ,/ zis4At/ ‘/ main/ ’/ (/ sample2/ ./ c/ :/ 15/ (/ s11/ )/ )/ ,/ yis3At/ ‘/ main/ ’/ (/ sample2/ ./ c/ :/ 19/ (/ s15/ )/ )/ ,/ mis3/ 输入/ 信息/ :/ 示例/ 程序/ P2/ ,/ 失效/ 测试用例/ t2/ (/ 1/ ,/ 2/ ,/ 3/ )/ ,/ 成功/ 测试用例/ t3/ (/ 3/ ,/ 2/ ,/ 1/ )/ igor/ 的/ 输出/ 结果/ :/ ‘/ sample3/ ’/ FAILSifitoutputs/ (/ ?/ i/ )/ (/ \/ s/ |/ \/ A/ )/ 3/ (/ \/ s/ |/ \/ Z/ )/ ‘/ sample3/ ’/ PASSESifitoutputs/ (/ ?/ i/ )/ (/ \/ s/ |/ \/ A/ )/ 2/ (/ \/ s/ |/ \/ Z/ )/ Thisiswhathappenswhen/ ‘/ sample3/ ’/ isinvokedas/ ‘/ sample3534/ ’/ :/ At/ ‘/ main/ ’/ (/ sample3/ ./ c/ :/ 8/ (/ s4/ )/ )/ ,/ yis3At/ ‘/ main/ ’/ (/ sample3/ ./ c/ :/ 15/ (/ s11/ )/ )/ ,/ yis3At/ ‘/ main/ ’/ (/ sample3/ ./ c/ :/ 19/ (/ s15/ )/ )/ ,/ mis3/ 由于/ 程序/ 状态/ 空间/ 巨大/ ,/ 修改/ 所有/ 可能/ 的/ 状态/ 是/ 不/ 现实/ 的/ ./ Zhang/ 等/ 人/ [/ 63/ ]/ 研究/ 发现/ ,/ 很多/ 错误/ 都/ 会/ 导致/ 程序/ 谓词/ 状态/ 的/ 改变/ ,/ 从而/ 影响/ 分支/ 的/ 选择/ ./ 基于/ 此/ ,/ 提出/ 了/ PredicateSwitching/ 方法/ ./ 它/ 通过/ 强制/ 修改/ 谓词/ 状态/ ,/ 使得/ 分支/ 选择/ 发生/ 改变/ ./ 如果/ 某个/ 失效/ 执行/ 因为/ 某个/ 谓词/ 状态/ 的/ 强制/ 改变/ 而/ 变成/ 成功/ 执行/ 的话/ ,/ 称此/ 谓词/ 为/ 关键/ 谓词/ ./ 通过/ 查找/ 关键/ 谓词/ 定位/ 软件缺陷/ ./ 状态/ 变更/ 方法/ 的/ 优点/ 是/ 通过/ 识别/ 对/ 运行/ 时/ 的/ 程序/ 状态/ 做/ 哪些/ 修改/ 有助于/ 使/ 失效/ 执行/ 转变/ 为/ 成功/ 执行/ ,/ 可以/ 为/ 开发人员/ 理解/ 和/ 修正/ 软件/ 错误/ 提供/ 有效/ 参考/ ./ 缺点/ 是/ 须/ 确保/ 内存/ 修改/ 的/ 语义/ 一致性/ ,/ 并且/ 对于/ 复杂/ 系统/ 而言/ 由于/ 程序/ 状态/ 数目/ 庞大/ ,/ 算法/ 计算/ 复杂度/ 高/ ,/ 时间/ 开销/ 大/ ./ 5.6/ 模型/ 检验/ 方法/ 模型/ 检验/ 方法/ 推导/ 期望/ 的/ 程序/ 行为/ 模型/ ,/ 并/ 通过/ 检测/ 失效/ 执行/ 对/ 期望/ 行为/ 的/ 违背/ 情况/ 识别/ 错误行为/ ./ Jose/ 等/ 人/ 开发/ 了/ BugAssist/ 工具/ [/ 69/ ]/ ,/ 将/ 错误/ 定位问题/ 转换/ 为/ “/ 最大/ 可/ 满足/ ”/ 问题/ ./ BugAssist/ 的/ 输入/ 是/ 一个/ 源程序/ ,/ 需要/ 人工/ 为/ 该/ 程序/ 插桩/ 断言/ ,/ 用以/ 规格/ 说明/ 程序/ 恒定/ 满足/ 的/ 正确/ 行为/ ./ 首先/ 使用/ 边界/ 模型/ 检验/ 获得/ 测试/ 执行/ 的/ 边界/ ,/ 并/ 将/ 程序/ 的/ 边界/ 语义编码/ 为/ 布尔/ 表达式/ ./ 然后/ 对/ 失效/ 执行/ 创建/ 一个/ 不可/ 满足/ 表达式/ ./ 最后/ 使用/ “/ 最大/ 可/ 满足/ ”/ 规则/ ,/ 查找/ 可以/ 同时/ 满足/ 该/ 表达式/ 的/ 最大/ 短语/ 集合/ ,/ 将/ 其/ 输出/ 为/ 可能/ 的/ 失效/ 根源/ ./ 例如/ ,/ 对/ 示例/ 程序/ P1/ 和/ P2/ 分别/ 插入/ 断言/ assert/ (/ m/ =/ =/ y/ &&/ m/ >/ =/ z/ &&/ m/ </ =/ x/ ‖/ m/ =/ =/ x/ &&/ m/ >/ =/ z/ &&/ m/ </ =/ y/ ‖/ m/ =/ =/ z/ &&/ m/ >/ =/ y/ &&/ m/ </ =/ x/ ‖/ m/ =/ =/ x/ &&/ m/ >/ =/ y/ &&/ m/ </ =/ z/ ‖/ m/ =/ =/ z/ &&/ m/ >/ =/ x/ &&/ m/ </ =/ y/ ‖/ m/ =/ =/ y/ &&/ m/ >/ =/ x/ &&/ m/ </ =/ z/ )/ ;/ 然后/ 使用/ BugAssist/ 分析/ P1/ ,/ 程序/ 跟踪/ 窗口/ 中/ 语句/ “/ m/ =/ y/ ;/ ”/ 被/ 蓝色/ 加亮/ ,/ 表示/ 该/ 语句/ 被/ 识别/ 为/ 潜在/ 的/ 缺陷/ 位置/ ./ 用/ BugAssist/ 分析/ P2/ ,/ 正确/ 识别/ 了/ 缺陷/ 语句/ “/ if/ (/ y/ </ z/ -/ 1/ )/ ”/ ,/ 但/ 没有/ 同时/ 识别/ 出/ 缺陷/ 语句/ “/ m/ =/ y/ ;/ ”/ ,/ 需要/ 在/ 修正/ 缺陷/ 语句/ “/ if/ (/ y/ </ z/ -/ 1/ )/ ”/ 之后/ 再次/ 检测/ ./ 模型/ 检验/ 方法/ 的/ 优点/ 是/ 结果/ 准确/ ,/ 并/ 能/ 提供/ 期望/ 的/ 行为/ 状态/ 或/ 失效/ 执行/ 的/ 违背/ 情况/ 描述/ ,/ 有助于/ 理解/ 和/ 修正/ 错误/ ./ 缺点/ 是/ 需要/ 指定/ 断言/ ,/ 而/ 确定/ 程序/ 中/ 恒定/ 满足/ 的/ 属性/ 分析/ 过程/ 比较复杂/ ,/ 且/ 对于/ 复杂/ 系统/ 而言/ ,/ 模型/ 检验/ 方法/ 形式化/ 模型/ 逻辑推理/ 的/ 复杂度/ 较/ 高/ ,/ 开销/ 很大/ ./ 5.7/ 不/ 变量/ 分析方法/ 不/ 变量/ 分析方法/ 首先/ 运行/ 多个/ 成功/ 测试用例/ 训练/ 提取/ 程序/ 中/ 的/ 不/ 变量/ (/ 恒定/ 满足/ 的/ 属性/ )/ ,/ 然后/ 运行/ 失效/ 测试用例/ ,/ 检测/ 违背/ 的/ 不/ 变量/ ,/ 将/ 其/ 作为/ 导致/ 失效/ 的/ 原因/ ./ Hangal/ 等/ 人/ [/ 71/ ]/ 开发/ 了/ DIDUCE/ (/ DynamicInva/ -/ riantDetectionUCheckingEngine/ )/ ,/ 通过/ 执行/ Java/ 程序/ 动态/ 提取/ 不/ 变量/ ,/ 然后/ 分析程序/ 的/ 执行/ 行为/ ,/ 检测/ 不/ 变量/ 违背/ ,/ 进而/ 检测/ 异常/ ,/ 并/ 根据/ 置信度/ 值/ 将/ 异常/ 排序/ ./ 如果/ 表达式/ 被/ 执行/ 多次/ ,/ 并且/ 所/ 观测/ 的/ 值/ 很少/ 违背/ ,/ 则/ 具有/ 较/ 高/ 的/ 置信度/ ./ DIDUCE/ 可/ 分析/ 的/ 程序/ 属性/ 包括/ 某个/ 变量/ 的/ 值/ 是否/ 总是/ 相同/ 、/ 表达式/ 的/ 值/ 是否/ 总是/ 正/ 或者/ 负/ 、/ 值/ 的/ 奇偶性/ 、/ 值/ 的/ 近似/ 上界/ 等/ ./ DIDUCE/ 包含/ 两种/ 工作/ 模式/ :/ 训练/ 模式/ 和/ 检验/ 模式/ ./ 在/ 训练/ 模式/ 根据/ 需要/ 放宽/ 不/ 变量/ 假设/ 来/ 学习/ 不/ 变量/ ,/ 在/ 检验/ 模式/ 当/ 放宽/ 不/ 变量/ 时/ 发出/ 消息/ ./ 报告/ 产生/ 每个/ 不/ 变量/ 违背/ 的/ 旧/ 的/ 不/ 变量/ 的/ 置信度/ 值/ 和/ 新/ 的/ 不/ 变量/ 的/ 置信度/ 值/ ./ 较大/ 的/ 置信度/ 下降/ 值/ 是/ 一个/ 值得注意/ 的/ 不/ 变量/ 违背/ ,/ 对应/ 的/ 语句/ 可能/ 含有/ 错误/ ./ 例如/ ,/ 分析/ 值/ 的/ 范围/ 不/ 变量/ ,/ 对于/ 示例/ 程序/ P1/ 用/ 成功/ 测试用例/ 集/ Tp/ =/ {/ t1/ ,/ t2/ ,/ t3/ ,/ t4/ ,/ t5/ }/ 学习/ 获得/ 的/ 各个/ 赋值/ 及/ 输出/ 变量/ 的/ 值/ 的/ 范围/ 为/ s1/ :/ x/ (/ 1/ ,/ 5/ )/ ,/ s2/ :/ y/ (/ 2/ ,/ 5/ )/ ,/ s3/ :/ z/ (/ 1/ ,/ 5/ )/ ,/ s4/ :/ m/ (/ 1/ ,/ 5/ )/ ,/ s7/ :/ m/ (/ 2/ ,/ 2/ )/ ,/ s9/ :/ m/ (/ 3/ ,/ 3/ )/ ,/ s12/ :/ m/ (/ 2/ ,/ 2/ )/ ,/ s15/ :/ m/ (/ 2/ ,/ 5/ )/ ./ 失效/ 测试用例/ t6/ (/ 2/ ,/ 1/ ,/ 3/ )/ 的/ 执行/ 对/ 该值/ 范围/ 不/ 变量/ 的/ 违背/ 情况/ 如下/ :/ s2/ :/ y/ (/ 1/ )/ ,/ s9/ :/ m/ (/ 1/ )/ ,/ s15/ :/ m/ (/ 1/ )/ ./ 通过/ 分析/ 该/ 不/ 变量/ 违背/ 可/ 发现/ 语句/ s9/ 处/ 变量/ m/ 赋值/ 为/ 1/ 存在/ 错误/ ./ 对/ 示例/ 程序/ P2/ 用/ 成功/ 测试用例/ 集/ Tp/ =/ {/ t1/ ,/ t3/ ,/ t4/ }/ 学习/ 获得/ 的/ 各个/ 赋值/ 及/ 输出/ 变量/ 的/ 值/ 的/ 范围/ 为/ s1/ :/ x/ (/ 3/ ,/ 5/ )/ ,/ s2/ :/ y/ (/ 2/ ,/ 5/ )/ ,/ s3/ :/ z/ (/ 1/ ,/ 5/ )/ ,/ s4/ :/ m/ (/ 1/ ,/ 5/ )/ ,/ Page10s7/ :/ m/ (/ -/ ,/ +/ )/ ,/ s9/ :/ m/ (/ 3/ ,/ 3/ )/ ,/ s12/ :/ m/ (/ 2/ ,/ 2/ )/ ,/ s15/ :/ m/ (/ 2/ ,/ 5/ )/ ./ 失效/ 测试用例/ t2/ (/ 1/ ,/ 2/ ,/ 3/ )/ 的/ 执行/ 对/ 该值/ 范围/ 不/ 变量/ 的/ 违背/ 情况/ 如下/ :/ s1/ :/ x/ (/ 1/ )/ ./ 仅/ 根据/ 该/ 结果/ 难于/ 定位/ 缺陷/ 位置/ ./ 不/ 变量/ 分析方法/ 的/ 优点/ 是/ 利用/ 成功/ 测试用例/ 学习/ 得到/ 的/ 不/ 变量/ 有助于/ 分析/ 软件/ 的/ 期望/ 行为/ 和/ 属性/ ./ 存在/ 的/ 问题/ 是/ 对/ 测试用例/ 的/ 质量/ 要求/ 较/ 高/ ./ 当/ 使用/ 大量/ 的/ 任意/ 测试用例/ (/ 如/ 软件测试/ 中/ 使用/ 的/ 所有/ 测试用例/ )/ 进行/ 训练/ ,/ 提取/ 不/ 变量/ ,/ 可能/ 导致/ 程序/ 不/ 变量/ 的/ 范围/ 太宽/ ,/ 产生/ 大量/ 误检/ ,/ 无法/ 准确/ 定位/ 到/ 失效/ 的/ 产生/ 根源/ ;/ 而/ 任意/ 选择/ 测试用例/ 可能/ 导致/ 覆盖率/ 低/ ,/ 训练/ 不/ 充分/ ,/ 很多/ 语句/ 没有/ 被/ 执行/ 到/ ,/ 使得/ 真正/ 的/ 失效/ 产生/ 原因/ 没有/ 被/ 包含/ 到/ 候选/ 集合/ 中/ ,/ 导致/ 漏检/ ./ 例如/ P2/ 的/ 值/ 的/ 范围/ 不/ 变量/ 分析/ 结果/ 没/ 能/ 有效/ 指出/ 缺陷/ 语句/ ./ 5.8/ 变异/ 方法/ 基于/ 变异/ 的/ 错误/ 定位/ 方法/ 将/ 变异/ 技术/ 应用/ 于/ 错误/ 定位/ ./ 变异/ 分析/ 基于/ 简单/ 的/ 语法/ 规则/ 转换/ 程序/ 语句/ ,/ 把/ 原始/ 程序转换/ 成/ 若干个/ 变异/ (/ mutation/ )/ 程序/ ,/ 从而/ 向/ 程序/ 中/ 植入/ 缺陷/ ./ 变异/ 测试通过/ 用/ 测试用例/ 集/ 执行/ 变异/ 程序/ ,/ 然后/ 检查/ 变异/ 程序/ 和/ 原始/ 程序/ 版本/ 间/ 的/ 行为/ 差异/ ./ 对于/ 给定/ 的/ 测试用例/ 集/ ,/ 如果/ 存在/ 某个/ 测试/ 输入/ ,/ 使得/ 变异/ 程序/ 产生/ 的/ 输出/ 与/ 原始/ 程序/ 的/ 输出/ 不同/ ,/ 则/ 称/ 该/ 变异/ “/ 被/ 杀死/ ”/ (/ killed/ )/ ,/ 否则/ 称该/ 变异/ 是/ “/ 活/ 的/ ”/ (/ lived/ )/ ./ 基于/ 变异/ 的/ 错误/ 定位/ 方法/ 利用/ 变异/ 测试/ 技术/ 的/ 错误/ 植入/ 能力/ ,/ 在/ 特定/ 程序/ 语句/ 上/ 产生/ 符合/ 语法/ 的/ 程序/ 错误/ ,/ 并/ 利用/ 测试/ 结果/ 变化/ 识别/ 可疑/ 的/ 变异/ 并/ 利用/ 它们/ 的/ 位置/ 来/ 定位/ 错误/ 语句/ ./ 基于/ 的/ 假设/ 是/ 位于/ 同一/ 位置/ 的/ 错误/ 语句/ 及其/ 变异/ 具有/ 相似/ 的/ 行为/ ,/ 因此/ 被/ 失效/ 测试用例/ 杀死/ 的/ 变异/ ,/ 很/ 可能/ 指出/ 了/ 错误/ 位置/ ./ Papadakis/ 等/ 人/ [/ 74/ ]/ 提出/ 了/ 一种/ 基于/ 变异/ 分析/ 的/ 错误/ 定位/ 方法/ Metallaxis/ ./ 首先/ 对/ 程序/ 中/ 的/ 每个/ 可/ 执行/ 语句/ 执行/ 1/ 阶/ 变异/ 转换/ (/ 即/ 执行/ 一次/ 语法/ 修改/ )/ ,/ 生成/ 若干个/ 变异/ 程序/ ,/ 并/ 执行/ 变异/ 测试/ ./ 然后/ ,/ 将/ 被/ 杀死/ 的/ 变异/ 看做/ 被/ 覆盖/ 的/ 元素/ ,/ 活/ 的/ 变异/ 看做/ 未/ 被/ 覆盖/ 的/ 元素/ ,/ 利用/ 已有/ 的/ 覆盖/ 分析方法/ (/ Ochiai/ [/ 16/ ]/ )/ 通过/ 度量/ 成功/ 测试/ 和/ 失效/ 测试用例/ 杀死/ 变异/ 的/ 数目/ ,/ 计算/ 各个/ 变异/ 的/ 可疑/ 度值/ ./ 最后/ ,/ 根据/ 变异/ 的/ 可疑/ 度/ ,/ 给/ 原始/ 程序/ 语句/ 赋/ 可疑/ 度值/ ./ 对于/ 同一/ 语句/ 的/ 多个/ 变异/ 取/ 其中/ 的/ 最大值/ 作为/ 该/ 语句/ 的/ 可疑/ 度值/ ./ 例如/ ,/ 对/ 示例/ 程序/ P2/ 采用/ 关系/ 变异/ 操作/ 算子/ 生成/ 35/ 个/ 变异/ 程序/ ./ 这些/ 变异/ 体中/ ,/ 语句/ s5/ 的/ 变异/ 体/ </ →/ </ =/ ,/ 即将/ if/ (/ y/ </ z/ -/ 1/ )/ 修改/ 为/ if/ (/ y/ </ =/ z/ -/ 1/ )/ ,/ 被/ 两个/ 失效/ 测试用例/ (/ t2/ 和/ t5/ )/ 杀死/ ,/ 而/ 未/ 被/ 任何/ 成功/ 测试用例/ 杀死/ ,/ 由/ Ochiai/ 公式/ 计算/ 得到/ 可疑/ 度值/ 为/ 0.82/ ,/ 高于/ 其他/ 变异/ 体/ 的/ 可疑/ 度/ ,/ 因此/ 所/ 对应/ 的/ 语句/ s5/ 被/ 定位/ 为/ 可疑/ 语句/ ./ 采用/ 关系/ 变异/ 运算符/ 可以/ 定位/ 关系/ 运算/ 相关/ 的/ 软件缺陷/ ,/ 但是/ 无法/ 定位/ s9/ 那样/ 的/ 赋值/ 语句/ 缺陷/ ./ 如果/ 对/ 示例/ 程序/ P2/ 采用/ 变量/ 替换/ 变异/ 算子/ ,/ 语句/ s9/ 的/ 变异/ 体/ y/ →/ x/ 被/ 1/ 个/ 失效/ 测试用例/ t6/ 杀死/ ,/ 未/ 被/ 任何/ 成功/ 测试用例/ 杀死/ ,/ 由/ Ochiai/ 公式/ 计算/ 得到/ 可疑/ 度值/ 为/ 1.0/ ,/ 因此/ s9/ 被/ 定位/ 为/ 可疑/ 语句/ ./ 采用/ 变量/ 替换/ 变异/ 算子/ 可以/ 有效/ 定位/ 这/ 类/ 变量/ 引用/ 错误/ 的/ 缺陷/ ./ 对于/ 示例/ 程序/ P1/ ,/ 可/ 采用/ 算数/ 常量/ 增/ 1/ 和/ 减/ 1/ 算子/ 生成/ 32/ 个/ 变异/ 程序/ ,/ 其中/ 缺陷/ 语句/ s9/ “/ m/ =/ y/ ”/ 的/ 两个/ 变异/ 体/ y/ →/ y/ +/ 1/ 和/ y/ →/ y/ -/ 1/ 的/ 可疑/ 度为/ 0.71/ 排列/ 在/ 第一位/ ,/ 因此/ s9/ 被/ 识别/ 为/ 最/ 可疑/ 语句/ ./ 文献/ [/ 74/ ]/ 中/ 给出/ 了/ 详细分析/ 结果/ ./ 基于/ 变异/ 的/ 错误/ 定位/ 方法/ 的/ 优点/ 是/ 将/ 变异/ 测试/ 过程/ 与/ 错误/ 定位/ 过程/ 统一/ ,/ 并且/ 由于/ 其/ 要求/ 由/ 变异/ 引入/ 的/ 差异/ 必须/ 影响/ 程序/ 的/ 输出/ ,/ 因此/ 可以/ 有效/ 处理/ 巧合/ 正确/ 的/ 测试用例/ ./ 缺点/ 是/ 变异/ 测试/ 的/ 复杂度/ 较/ 高/ ,/ 并且/ 错误/ 定位/ 的/ 有效性/ 依赖于/ 变异/ 算子/ 和/ 测试用例/ 的/ 选择/ ./ 6/ 目前/ 难点/ 及/ 未来/ 可能/ 的/ 研究/ 方向/ 已有/ 软件/ 错误/ 定位/ 方法/ 为/ 软件/ 自动化/ 调试/ 奠定/ 了/ 良好/ 的/ 研究/ 基础/ ,/ 然而/ 从/ 以上/ 分析/ 可以/ 看出/ ,/ 目前/ 的/ 软件/ 错误/ 定位/ 方法/ 的/ 研究/ 大多/ 致力于/ 回答/ “/ 什么/ 导致/ 了/ 失效/ ”/ ,/ 即/ 指出/ 可疑/ 语句/ 的/ 位置/ ,/ 但/ 通常/ 缺少/ 对/ “/ 为什么/ 程序/ 会/ 失效/ ”/ 的/ 分析/ ,/ 不能/ 为/ 理解/ 软件/ 失效/ 产生/ 的/ 上下文/ 提供/ 充分/ 的/ 信息/ ./ 定位/ 结果/ 的/ 有效性/ ,/ 特别/ 是/ 分析/ 多/ 缺陷/ 程序/ 的/ 有效性/ ,/ 还/ 需要/ 进一步/ 提升/ ./ 此外/ ,/ 还/ 缺少/ 对/ “/ 如何/ 最大化/ 地/ 利用/ 软件测试/ 中/ 提供/ 的/ 诊断/ 信息/ ,/ 使/ 其/ 提高/ 错误/ 定位/ 的/ 有效性/ ”/ 的/ 考虑/ ./ 因此/ ,/ 软件/ 错误/ 定位/ 领域/ 目前/ 仍/ 存在/ 以下/ 难点/ 问题/ 需要/ 进一步/ 分析/ 与/ 解决/ ./ 这些/ 问题/ 能否/ 良好/ 解决/ 直接/ 决定/ 着/ 错误/ 定位/ 方法/ 的/ 有效性/ 及其/ 能否/ 被/ 真正/ 应用/ 于/ 实际/ 的/ 软件/ 自动化/ 调试/ 过程/ 中/ ./ (/ 1/ )/ 如何/ 优化/ 软件测试/ 过程/ 中/ 测试用例/ 的/ 执行/ 信息/ ,/ 提高/ 错误/ 定位/ 的/ 有效性/ ?/ 测试/ 过程/ 中/ 提供/ 了/ 大量/ 的/ 测试用例/ 及其/ 执行/ 信/ Page11/ 息/ ,/ 错误/ 定位/ 方法/ 可以/ 在/ 这些/ 信息/ 的/ 基础/ 上/ 进行/ 分析/ ,/ 提取/ 可疑/ 程序/ 元素/ ./ 然而/ 满足/ 测试/ 准则/ 的/ 测试用例/ 集合/ ,/ 未必/ 能为/ 错误/ 定位/ 提供/ 有效/ 的/ 信息/ ./ 这/ 是因为/ 测试/ 的/ 目标/ 是/ 较/ 高/ 的/ 代码/ 覆盖/ 程度/ ,/ 尽可能/ 地/ 揭示/ 失效/ ,/ 而/ 错误/ 定位/ 的/ 目标/ 是/ 减小/ 识别/ 的/ 覆盖/ 代码/ 集合/ ,/ 尽可能/ 地/ 确定/ 含有/ 缺陷/ 的/ 程序/ 元素/ ./ Jiang/ 等/ 人/ [/ 93/ ]/ 通过/ 实验/ 验证/ 测试/ 的/ 充分/ 覆盖/ 准则/ 并/ 不能/ 充分/ 确保/ 错误/ 定位/ 的/ 有效性/ ./ Gonzalez/ -/ Sanchez/ 等/ 人/ [/ 94/ ]/ 研究/ 表明/ 测试用例/ 的/ 选择/ 是/ 提高/ 调试/ 效率/ 的/ 关键/ ./ 因此/ ,/ 测试用例/ 的/ 选择/ 会/ 对/ 错误/ 定位/ 的/ 有效性/ 和/ 效率/ 产生/ 显著/ 的/ 影响/ ./ 然而/ ,/ 已有/ 关于/ 测试用例/ 选择/ 的/ 研究/ 大多/ 集中/ 于/ 如何/ 提高/ 测试/ 和/ 错误/ 定位/ 的/ 效率/ ,/ 而/ 缺少/ 关于/ 如何/ 提高/ 错误/ 定位/ 有效性/ 的/ 研究/ ./ Hao/ 等/ 人/ [/ 95/ ]/ 研究/ 了/ 基于/ 语句/ 覆盖/ 的/ 测试用例/ 约简/ 策略/ ,/ 将/ 其/ 应用/ 于/ 错误/ 定位/ 方法/ Tarantula/ 上/ ,/ 结论/ 是/ 减少/ 冗余/ 测试用例/ 有利于/ 提高/ 错误/ 定位/ 的/ 有效性/ ./ Yu/ 等/ 人/ [/ 16/ ]/ 实验/ 分析/ 了/ 测试用例/ 约简/ 对/ 覆盖/ 分析方法/ 有效性/ 的/ 影响/ ,/ 得到/ 的/ 结论/ 是/ 与/ 基于/ 语句/ 覆盖/ 的/ 测试用例/ 约简/ 方法/ 相比/ ,/ 基于/ 语句/ 向量/ 的/ 测试用例/ 约简/ 方法/ 删除/ 了/ 较/ 少/ 的/ 测试用例/ ,/ 但/ 约简/ 后/ 的/ 测试用例/ 更/ 有利于/ 错误/ 定位/ ,/ 错误/ 定位/ 技术/ 的/ 有效性/ 取决于/ 所/ 使用/ 的/ 约简/ 策略/ ./ 因此/ 如何/ 选择/ 有利于/ 提高/ 错误/ 定位/ 方法/ 有效性/ 的/ 测试用例/ 值得/ 进一步/ 深入研究/ ./ 测试用例/ 的/ 巧合/ 正确性/ 也/ 是/ 影响/ 错误/ 定位/ (/ 特别/ 是/ 覆盖/ 分析方法/ )/ 的/ 有效性/ 的/ 一个/ 重要/ 因素/ [/ 23/ ]/ ./ 然而/ 如何/ 降低/ 巧合/ 正确性/ 的/ 影响/ 却是/ 个/ 难点/ 问题/ ./ Wang/ 等/ 人/ [/ 23/ ]/ 考虑/ 了/ 丢失/ 语句/ 情况/ 下/ 的/ 巧合/ 正确性/ 问题/ ,/ 提出/ 利用/ 控制流/ 和/ 数据流/ 模式/ (/ 上下文/ 模式/ )/ 进一步/ 精化/ 代码/ 覆盖/ 信息/ ,/ 排除/ 巧合/ 正确/ 的/ 测试用例/ 引入/ 的/ 错误/ 覆盖/ 信息/ ./ 该/ 方法/ 的/ 前提/ 是/ 开发人员/ 预先/ 知道/ 错误/ 类型/ ,/ 但/ 在/ 实际/ 软件开发/ 过程/ 中该/ 假设/ 不/ 一定/ 成立/ ./ Masri/ 等/ 人/ [/ 96/ ]/ 提出/ 启发式/ 方法/ 来/ 区分/ 巧合/ 正确/ 的/ 测试用例/ ,/ 首先/ 识别/ “/ 出现/ 在/ 失效/ 执行/ 和/ 少量/ (/ 不为/ 0/ )/ 成功/ 执行/ 中/ 的/ 程序/ 元素/ ”/ 作为/ 可能/ 与/ 巧合/ 正确性/ 相关/ 的/ 程序/ 元素/ ,/ 然后/ 分析/ 测试用例/ 对/ 这些/ 元素/ 的/ 覆盖/ 情况/ ,/ 判定/ 其/ 是否是/ 巧合/ 正确/ 的/ 测试用例/ ./ 该/ 方法/ 具有/ 较/ 高/ 的/ 误检率/ ,/ 导致/ 无法/ 显著/ 提高/ 错误/ 定位/ 的/ 有效性/ ./ 此外/ ,/ 以上/ 研究/ 大多/ 假设/ 已有/ 足够/ 的/ 测试用例/ 信息/ ,/ 但/ 有些/ 情况/ 下/ 已有/ 信息/ 不足以/ 有效/ 执行/ 错误/ 定位/ ,/ 这/ 就/ 需要/ 研究/ 如何/ 生成/ 适用/ 于/ 错误/ 定位/ 的/ 测试用例/ ./ 在/ 回归/ 测试/ 中/ ,/ 测试/ 和/ 错误/ 定位/ 过程/ 通常/ 交替/ 执行/ :/ 开发人员/ 测试程序/ ,/ 检测/ 之前/ 对/ 程序/ 所/ 做/ 的/ 修改/ 是否/ 引入/ 新/ 的/ 缺陷/ ,/ 如果/ 产生/ 失效/ ,/ 则/ 执行/ 错误/ 定位/ 和/ 修正/ ,/ 并/ 在/ 修正/ 了/ 错误/ 后/ 再次/ 执行/ 回归/ 测试/ ./ 这/ 就/ 引入/ 了/ 测试用例/ 优先/ 排序/ 问题/ “/ 在/ 发现/ 失效/ 后/ ,/ 按/ 什么/ 顺序/ 选择/ 执行/ 剩余/ 的/ 测试用例/ 才能/ 有助于/ 尽早/ 、/ 有效/ 地/ 定位/ 到/ 软件/ 错误/ ”/ ./ Jiang/ 等/ 人/ [/ 97/ ]/ 实验/ 分析/ 了/ 应用/ 于/ 软件测试/ 中/ 的/ 测试用例/ 优先/ 排序/ 技术/ 对/ 覆盖/ 分析/ 错误/ 定位/ 技术/ 的/ 有效性/ 的/ 影响/ ,/ 结果表明/ 测试用例/ 优先/ 排序/ 的/ 策略/ 和/ 时间/ 开销/ 是/ 影响/ 错误/ 定位/ 有效性/ 的/ 关键因素/ ./ Gonzalez/ -/ Sanchez/ 等/ 人/ [/ 36/ ]/ 针对/ 软件/ 错误/ 定位/ ,/ 提出/ 使用/ 贝叶斯/ 理论/ 计算错误/ 定位/ 的/ 可疑/ 度/ 并/ 对/ 整个/ 测试用例/ 集/ 进行/ 排序/ ,/ 基于/ 前次/ 执行/ 的/ 成功/ // 失效/ 结果/ ,/ 动态/ 选择/ 测试用例/ ,/ 使/ 每次/ 测试/ 具有/ 较/ 高/ 的/ 诊断/ 性能/ ./ Yoo/ 等/ 人/ 针对/ 覆盖/ 分析/ 错误/ 定位/ 方法/ ,/ 提出/ 了/ 基于/ 信息熵/ 理论/ 排序/ 测试用例/ [/ 40/ ]/ ,/ 以/ 提高/ 错误/ 定位/ 的/ 有效性/ ./ 该/ 方法/ 适用/ 于/ Tarantula/ 等/ 覆盖/ 分析方法/ ,/ 而/ 是否/ 适合/ 其他/ 方法/ 还/ 需要/ 进一步/ 研究/ 与/ 分析/ ./ 综上所述/ ,/ 面向/ 有效/ 错误/ 定位/ 的/ 测试用例/ 优选/ 、/ 自动/ 生成/ 、/ 优先/ 排序/ 技术/ 是/ 未来/ 的/ 重点/ 研究/ 方向/ ./ (/ 2/ )/ 如何/ 使/ 软件/ 错误/ 定位/ 方法/ 在/ 回答/ “/ 什么/ 导致/ 了/ 软件/ 失效/ ”/ 时/ ,/ 既/ 具有/ 较/ 低/ 的/ 计算/ 复杂度/ ,/ 又/ 能/ 充分/ 分析程序/ 的/ 执行/ 状态/ 传播/ 及/ 程序/ 元素/ 间/ 的/ 相互影响/ ,/ 从而/ 有效/ 地/ 定位/ 缺陷/ ?/ 状态/ 变更/ 方法/ 和/ 模型/ 检查/ 方法/ 提供/ 了/ 错误行为/ 描述/ ,/ 但是/ 这/ 两种/ 方法/ 复杂/ 度过/ 高/ ,/ 难以/ 应用/ 于/ 实际/ 的/ 软件/ 调试/ 过程/ 中/ ./ 覆盖/ 分析方法/ 计算/ 复杂度/ 低/ ,/ 但是/ 通常/ 只/ 考虑/ 单个/ 程序/ 元素/ 的/ 可疑/ 程度/ ,/ 而/ 忽略/ 了/ 程序/ 感染/ 状态/ 的/ 传播/ ,/ 当/ 软件/ 错误/ 涉及/ 多个/ 程序/ 元素/ 间/ 复杂/ 交互/ 的/ 情况/ 下/ ,/ 可能/ 定位/ 不到/ 错误/ 语句/ ./ 针对/ 上述/ 问题/ ,/ Masri/ [/ 56/ ]/ 提出/ 基于/ 信息流/ 覆盖/ 的/ 错误/ 定位/ 方法/ ,/ 使用/ 信息流/ 捕获/ 语句/ 和/ 程序/ 变量/ 间/ 的/ 交互/ ,/ 又/ 进一步/ 提出/ 错误/ 相关/ 依赖/ 链/ 的/ 概念/ [/ 98/ ]/ ;/ Baah/ 等/ 人/ [/ 57/ ]/ 提出/ 基于/ 因果/ 图/ 的/ 覆盖/ 分析方法/ ./ 这/ 3/ 种/ 方法/ 考虑/ 了/ 程序/ 的/ 控制/ 和/ 数据/ 依赖/ ,/ 为/ 分析程序/ 元素/ 间/ 的/ 相互影响/ 奠定/ 了/ 基础/ ,/ 但/ 仍/ 存在/ 以下/ 不足之处/ :/ ①/ 缺少/ 对/ 期望/ 执行/ 状态/ 及其/ 转移/ 的/ 描述/ ;/ ②/ 信息流/ 、/ 依赖/ 链/ 、/ 因果/ 图/ 的/ 数目/ 众多/ ,/ 动态/ 跟踪/ 大量/ 测试用例/ 执行/ 时/ 的/ 动态数据/ 依赖/ 信息/ ,/ 计算/ 复杂度/ 高/ ,/ 有时/ 会/ 得到/ 不/ 准确/ 的/ 结果/ [/ 56/ ]/ ./ 轻量级/ 的/ 、/ 解析/ 失效/ 感染/ 状态/ 传播/ 的/ 错误/ 定位/ 方法/ ,/ 将/ 有助于/ 自动化/ 软件/ 错误/ 定位/ 工具/ 在/ 工业界/ 的/ 实际/ 应用/ 与/ 推广/ ,/ 值得/ 进一步/ 研究/ 与/ 探讨/ ./ Page12/ (/ 3/ )/ 如何/ 自动/ 分析/ 可疑/ 程序/ 点/ 的/ 执行/ 状态/ 上下文/ ,/ 定位/ 失效/ 的/ 产生/ 根源/ ,/ 为/ 开发人员/ 理解/ 与/ 修正/ 软件缺陷/ 提供/ 充分/ 的/ 信息/ ?/ 大多/ 已有/ 错误/ 定位/ 方法/ 着重于/ 缺陷/ 定位/ ,/ 通常/ 仅/ 报告/ 可疑/ 代码/ 行/ ,/ 而/ 忽略/ 了/ 一个/ 事实/ :/ 理解/ 一个/ 失效/ 的/ 产生/ 原因/ 通常/ 涉及/ 复杂/ 的/ 活动/ ./ Parnin/ 和/ Orso/ [/ 99/ ]/ 基于/ 错误/ 定位/ 方法/ Tarantula/ 进行/ 实验/ ,/ 分析/ 开发人员/ 调试程序/ 时/ 的/ 行为/ ,/ 得到/ 的/ 结论/ 是/ 很多/ 情况/ 下/ ,/ 开发人员/ 在/ 看/ 完/ 错误/ 定位/ 工具/ 列出/ 的/ 可疑/ 语句/ 后/ ,/ 需要/ 花费/ 大量/ 的/ 时间/ 来/ 审查/ 语句/ ./ 如果/ 不/ 理解/ 为何/ 失效/ ,/ 开发人员/ 很难/ 修正/ 缺陷/ ./ 因此/ 仅/ 给出/ 可疑/ 语句/ 是/ 不够/ 的/ ,/ 需要/ 更/ 多/ 的/ 关于/ 失效/ 产生/ 的/ 上下文/ 信息/ 来/ 辅助/ 开发人员/ 理解/ 软件/ 错误/ ./ 程序/ 不/ 变量/ 分析方法/ 有助于/ 检测/ 失效/ 的/ 产生/ 根源/ ,/ 但是/ 缺少/ 对/ 错误/ 传播/ 的/ 分析/ ,/ 并且/ 存在/ 大量/ 的/ 误检/ ,/ 错误/ 定位/ 的/ 有效性/ 存在/ 局限性/ ./ Jiang/ 与/ Su/ [/ 53/ ]/ 提出/ 上下文/ 提醒/ 的/ 统计分析/ 调试/ 方法/ ,/ 通过/ 创建/ 错误/ 控制流/ 路径/ 将/ 缺陷/ 指示器/ (/ 可能/ 包含/ 错误/ 的/ 谓词/ 语句/ )/ 连接/ 在/ 一起/ ,/ 辅助/ 开发人员/ 理解/ 软件/ 错误/ ./ Cheng/ 等/ 人/ [/ 100/ ]/ 通过/ 图/ 挖掘/ 算法/ 识别/ 失效/ 产生/ 的/ 上下文/ ./ 然而/ ,/ 这/ 两种/ 方法/ 只/ 考虑/ 了/ 程序/ 的/ 控制结构/ ,/ 没有/ 分析/ 数据/ 依赖/ 信息/ ,/ 因此/ 只能/ 识别/ 控制流/ 相关/ 的/ 错误/ ,/ 无法/ 有效/ 识别/ 数据流/ 相关/ 的/ 错误/ ;/ 此外/ ,/ 只/ 给出/ 控制结构/ 上下文/ ,/ 仍然/ 无法/ 充分/ 辅助/ 开发人员/ 理解/ 与/ 修正/ 错误/ ./ 综上/ ,/ 错误/ 定位/ 结果/ 不但/ 应/ 给出/ 可疑/ 程序/ 语句/ ,/ 还/ 应为/ 理解/ “/ 可疑/ 语句/ 如何/ 与/ 软件/ 错误/ 相关/ ,/ 它们/ 为什么/ 会/ 导致/ 软件/ 失效/ ,/ 以及/ 如何/ 修正/ 这些/ 错误/ ”/ 提供/ 充分/ 的/ 信息/ ./ 如果/ 能/ 构建/ 一个/ 多维/ 全景/ 视图/ ,/ 自动/ 分析/ 推导/ 失效/ 相关/ 的/ 控制/ 依赖/ 及/ 数据/ 依赖/ 、/ 失效/ 执行/ 路径/ 上/ 的/ 值/ 以及/ 可疑/ 程序/ 点/ 的/ 期望/ 状态/ 和/ 表达式/ 等/ 信息/ ,/ 则/ 可以/ 有效/ 辅助/ 开发人员/ 理解/ 这些/ 问题/ ./ 程序/ 理解/ 方法/ 与/ 软件/ 错误/ 定位/ 方法/ 的/ 有机/ 结合/ 将/ 有助于/ 解决/ 该/ 难点/ 问题/ ./ (/ 4/ )/ 在/ 存在/ 多个/ 失效/ 测试用例/ 的/ 情况/ 下/ ,/ 如何/ 区分/ 失效/ 特征/ ,/ 避免/ 多个/ 错误/ 间/ 的/ 相互/ 干扰/ ,/ 并且/ 深入/ 考虑/ 错误/ 间/ 的/ 关联/ 关系/ ,/ 有效/ 定位/ 多/ 缺陷/ 程序/ 中/ 的/ 错误/ ?/ Wong/ 等/ 人/ [/ 27/ ]/ 开发/ 的/ 工具/ xDebug/ 通过/ 对/ 基于/ 语句/ 覆盖/ 的/ 错误/ 定位/ 方法/ 进行/ 实验/ 得出结论/ :/ 无论是/ 对于/ 成功/ 测试用例/ 集合/ 还是/ 失效/ 测试用例/ 集合/ ,/ 其中/ 第/ k/ 个/ 测试用例/ 比/ 第/ k/ +/ 1/ 个/ 测试用例/ 对/ 错误/ 定位/ 的/ 贡献/ 大/ ;/ 成功/ 测试用例/ 集合/ 的/ 对/ 错误/ 定位/ 的/ 总/ 贡献/ 小于/ 失效/ 测试用例/ 集合/ 对/ 错误/ 定位/ 的/ 总/ 贡献/ ./ 该/ 研究/ 给/ 我们/ 的/ 启示/ 是/ 不同/ 的/ 测试用例/ 对/ 错误/ 定位/ 具有/ 不同/ 的/ 贡献/ ,/ 并且/ 在/ 错误/ 定位/ 过程/ 中/ 尤其/ 要/ 充分考虑/ 失效/ 测试用例/ 对/ 错误/ 定位/ 的/ 影响/ ./ Debroy/ 与/ Wong/ 序组/ 发现/ ,/ 程序/ 中/ 多个/ 错误/ 可能/ 以/ 多种/ 方式/ 相互作用/ ,/ 由/ 一个/ 错误/ 导致/ 失效/ 的/ 测试用例/ ,/ 在/ 加入/ 另/ 一个/ 错误/ 时/ 可能/ 不会/ 失效/ ,/ 因为/ 它/ 可能/ 掩盖/ 了/ 第一个/ 错误/ 的/ 失效/ 因果/ ./ 此外/ ,/ 某个/ 失效/ 的/ 产生/ 可能/ 会/ 伴随/ 着/ 其他/ 失效/ ,/ 这种/ 错误/ 间/ 的/ 相关性/ 使得/ 多/ 缺陷/ 程序/ 的/ 错误/ 定位问题/ 变/ 的/ 十分复杂/ ./ 然而/ DiGiuseppe/ 等/ 人/ [/ 102/ ]/ 研究/ 错误/ 数量/ 对/ 覆盖/ 分析/ 错误/ 定位/ 方法/ 的/ 影响/ 的/ 实验/ 结果表明/ ,/ 有些/ 错误/ 的/ 定位/ 结果/ 与/ 其他/ 错误/ 是否/ 出现/ 无关/ ./ 通常/ 即使/ 存在/ 多个/ 错误/ ,/ 定位/ 技术/ 每次/ 也/ 能/ 有效/ 定位/ 其中/ 的/ 一个/ 错误/ ./ 然而/ 如何/ 自动/ 区分/ 多个/ 错误/ 间/ 的/ 关系/ 到底/ 属于/ 以上/ 哪/ 种/ 情况/ 是/ 一个/ 难点/ 问题/ ,/ 该/ 问题/ 的/ 解决/ 直接/ 决定/ 着/ 多/ 缺陷/ 程序/ 错误/ 定位/ 方法/ 的/ 有效性/ ./ 将/ 错误/ 关联/ 、/ 失效/ 特征/ 聚类/ 、/ 机器/ 学习/ 等/ 技术/ 应用/ 于/ 错误/ 定位/ 中将/ 有助于/ 解决/ 该/ 问题/ ,/ 值得/ 深入开展/ 相关/ 研究/ ./ 7/ 结束语/ 软件/ 自动/ 错误/ 定位/ 技术/ 是/ 实现/ 软件/ 自动化/ 调试/ 、/ 提高/ 软件可靠性/ 及/ 开发/ 和/ 维护/ 效率/ 的/ 关键/ ,/ 具有/ 广阔/ 的/ 应用/ 前景/ 和/ 发展/ 空间/ ./ 本文/ 深入/ 调研/ 了/ 国内外/ 软件工程/ 方向/ 的/ 顶级/ 期刊/ 和/ 会议/ ,/ 提出/ 了/ “/ 失效/ -/ 错误/ 定位/ -/ 理解/ ”/ 模型/ ,/ 详细分析/ 了/ 软件/ 错误/ 自动/ 定位/ 领域/ 的/ 关键/ 科学/ 问题/ 与/ 发展趋势/ ,/ 展望/ 了/ 未来/ 的/ 研究/ 方向/ ./ 

