Page1/ 一种/ 基于/ 认知/ 模型/ 检测/ 的/ Web/ 服务/ 组合/ 验证/ 方法/ 骆/ 翔宇/ 1/ )/ ,/ 2/ )/ 谭征/ 3/ )/ 苏开乐/ 4/ )/ ,/ 5/ )/ 吴立军/ 6/ )/ 1/ )/ (/ 华侨大学/ 计算机科学/ 与/ 技术/ 学院/ 福建厦门/ 361021/ )/ 2/ )/ (/ 清华大学/ 软件/ 学院/ 北京/ 100084/ )/ 3/ )/ (/ 中核/ 兰州/ 铀/ 浓缩/ 有限公司/ 兰州/ 730065/ )/ 4/ )/ (/ 北京大学/ 教育部/ 高/ 可信/ 软件/ 重点/ 实验室/ 北京/ 100871/ )/ 5/ )/ (/ 浙江师范大学/ 数理/ 信息/ 学院/ 浙江/ 金华/ 321004/ )/ 6/ )/ (/ 电子科技/ 大学/ 计算机科学/ 与/ 工程学院/ 成都/ 410073/ )/ 摘要/ 近几年/ Web/ 服务/ 组合/ 的/ 形式化/ 验证/ 逐渐/ 成为/ 研究/ 热点/ ./ 模型/ 检测/ 作为/ 形式化/ 验证/ 的/ 一种/ 主流/ 技术/ ,/ 可以/ 克服/ 传统/ 软件/ 测试用例/ 生成/ 不/ 完备/ 的/ 不足/ ,/ 同时/ 具有/ 验证/ 自动化/ 的/ 优点/ ./ 该文/ 提出/ 并/ 实现/ 了/ 一种/ Web/ 服务/ 组合/ 的/ 认知/ 模型/ 检测/ 方法/ ,/ 将/ Web/ 服务/ 组合/ 建模/ 为/ 多/ 主体/ 系统/ ,/ 在/ 分析/ BPEL/ 语言/ 控制/ 流程/ 基础/ 上/ ,/ 提出/ BPEL/ 活动/ 的/ 形式化/ 模型/ ,/ 给出/ 活动/ 执行/ 语义/ ./ 进而/ 以/ 迁移/ 七元/ 组为/ 中间/ 形式/ ,/ 开发/ 从/ BPEL/ 流程/ 到/ 迁移/ 七元/ 组/ 集合/ 以及/ 从/ 这些/ 迁移/ 七元/ 组到/ MCTK/ (/ 一种/ 我们/ 开发/ 的/ 多/ 主体/ 系统/ 模型/ 检测工具/ )/ 输入/ 语言/ 的/ 自动/ 转换/ 算法/ ,/ 最终/ 通过/ MCTK/ 进行/ 验证/ ./ 实验/ 结果表明/ 开发/ 的/ 算法/ 不仅/ 可以/ 有效/ 验证/ Web/ 服务/ 组合/ 的/ 时态/ 逻辑/ 规范/ ,/ 而且/ 可以/ 验证/ 多/ 主体/ 系统/ 特有/ 的/ 认知/ 逻辑/ 规范/ 及其/ 时态/ 组合/ ./ 关键词/ 模型/ 检测/ ;/ Web/ 服务/ 组合/ ;/ BPEL/ ;/ 认知/ 逻辑/ ;/ 多/ 主体/ 系统/ 1/ 引言/ 随着/ 面向/ 服务/ 的/ 体系/ 架构/ (/ SOA/ )/ 的/ 出现/ ,/ 许多/ 软件资源/ 与/ 应用/ 都/ 封装/ 成为/ 服务/ ,/ 服务/ 提供/ 以/ 功能/ 为/ 单位/ 的/ 调用/ 标准/ ,/ 对/ 服务/ 的/ 调用者/ 展现/ 统一/ 的/ 调用/ 接口/ ,/ 而/ 屏蔽/ 服务/ 的/ 实现/ 细节/ ./ 可以/ 说/ SOA/ 将/ 是/ 80/ %/ 的/ 开发/ 项目/ 的/ 基础/ ,/ 并且/ 成为/ 主流/ 的/ 软件工程/ 实践/ 方法/ 之一/ ./ 不过/ ,/ 当/ 用户/ 需要/ 以/ 某种/ 定制/ 的/ 次序/ 或/ 规则/ 调用/ 多个/ 功能/ 或/ 服务/ 时/ ,/ Web/ 服务/ 标准/ 本身/ 就/ 显得/ 无能为力/ 了/ ,/ 而/ 这/ 恰恰/ 是/ Web/ 服务/ 业务流程/ 执行/ 语言/ WS/ -/ BPEL/ (/ 简称/ BPEL/ )/ 所/ 关注/ 的/ 焦点/ ./ BPEL/ 将/ SOA/ 系统/ 中/ 的/ 孤立/ 服务/ 按照/ 预订/ 的/ 规则/ 进行/ 调度/ 与/ 协调/ ,/ 从而/ 提供/ 有/ 价值/ 的/ 流程/ 服务/ ./ BPEL/ 的/ 这/ 一/ 特点/ 使得/ 其/ 在/ SOA/ 架构/ 中/ 具有/ 固有/ 的/ 优势/ ,/ 被/ 众多/ 厂商/ 所/ 采用/ ./ 然而/ ,/ 由于/ 服务/ 及其/ 协同/ 的/ 动态性/ ,/ 开放/ 多变/ 的/ 互联网/ 运行/ 环境/ ,/ 以及/ 松/ 耦合/ 的/ 服务/ 开发/ 模式/ 所/ 导致/ 的/ 开发/ 和/ 运行/ 过程/ 不确定性/ ,/ 使得/ 服务/ 的/ 正确性/ 、/ 可靠性/ 、/ 安全性/ 、/ 可用性/ 、/ 时效性/ 等/ 可信/ 性质/ 难以/ 得到/ 保证/ ./ 如果/ 单纯/ 采用/ 传统/ 的/ 软件测试/ 方法/ ,/ 许多/ 这样/ 的/ 可信/ 性质/ 是/ 无法/ 表示/ 和/ 测试/ 的/ ./ 另外/ ,/ 传统/ 的/ 测试方法/ 也/ 难以/ 保证/ 生成/ 的/ 测试用例/ 集是/ 完备/ 的/ ./ 因此/ ,/ 自从/ BPEL/ 标准/ 发布/ 后/ ,/ 研究者/ 们/ 在/ BPEL/ 的/ 形式化/ 建模/ 和/ 分析/ 领域/ 做/ 了/ 不少/ 研究/ 工作/ ./ Fu/ 等/ 人/ 开发/ 了/ 针对/ Web/ 服务/ 的/ 验证/ 工具/ WSAT/ (/ WebServiceAnalysisTool/ )/ ,/ 将/ BPEL/ 转化/ 为/ 形式/ 模型/ Guarded/ 自动机/ ,/ 接着/ 将/ Guarded/ 自动机/ 转化/ 为/ 模型/ 检测工具/ SPIN/ 的/ 输入/ 语言/ ,/ 验证/ 线性/ 时态/ 规范/ [/ 1/ -/ 2/ ]/ ;/ Kazhamiakin/ 对/ 通信模型/ 、/ 控制流/ 、/ 数据流/ 和/ 时间/ 属性/ 进行/ 形式化/ 建模/ 和/ 分析/ ,/ 并且/ 开发/ 了/ BPEL/ 验证/ 工具/ WS/ -/ VERIFY/ 对/ 上述/ 属性/ 进行/ 验证/ [/ 3/ ]/ ;/ Foster/ 等/ 人/ 使用/ 进程/ 代数/ 的/ 方法/ 把/ BPEL/ 建模/ 成/ FSP/ ,/ 使用/ 模型/ 检测工具/ LTSA/ 对/ 其/ 验证/ [/ 4/ -/ 5/ ]/ ;/ Walton/ 把/ Web/ 服务/ 看/ 作为/ 多/ 主体/ 系统/ ,/ 定义/ 了/ 一种/ 名为/ 轻量级/ 的/ 协议/ 语言/ 表示/ Web/ 服务/ 内部/ 主体/ 的/ 交互/ ,/ 并/ 将/ 这种/ 语言/ 转化/ 为/ SPIN/ 的/ 输入/ 语言/ 对/ 通信/ 属性/ 进行/ 了/ 验证/ [/ 6/ ]/ ;/ Nakajima/ 使用/ 扩展/ 的/ 有限/ 状态机/ (/ EFA/ )/ 对/ BPEL/ 进行/ 建模/ ,/ 将/ EFA/ 转换/ 为/ SPIN/ 的/ Promela/ 语言/ ,/ 自动/ 验证/ 了/ Web/ 服务/ 组合/ 的/ 属性/ [/ 7/ ]/ ;/ Mongiello/ 等/ 人/ 将/ 每/ 一/ Web/ 服务/ 建模/ 为/ 有限/ 状态机/ ,/ 然后/ 再/ 将/ 所有/ 的/ 有限/ 状态机/ 转换/ 为/ NuSMV/ 输入/ 语言/ ,/ 对/ 其/ 属性/ 进行/ 自动/ 验证/ [/ 8/ ]/ ;/ Ouyang/ 等/ 人/ 开发/ 了/ 一个/ 自动/ 分析/ BPEL/ 流程/ 的/ 工具/ ,/ 先/ 用/ 工具/ BPEL2PNML/ 将/ BPEL/ 转化/ 为/ Petri/ 网/ ,/ 然后/ 将/ 工具/ BPEL2PNML/ 的/ 输出/ 通过/ 工具/ WofBPEL/ 对/ 活动/ 的/ 不可/ 达及/ 数据/ 传递/ 进行/ 静态/ 分析/ [/ 9/ -/ 10/ ]/ ./ 从/ 上述/ 研究进展/ 看/ ,/ 目前/ Web/ 服务/ 组合/ 的/ 形式化/ 验证/ 方法/ 的/ 主流/ 思想/ 是/ 针对/ 被/ 验证/ 属性/ 选择/ 自动/ 验证/ 工具/ (/ 通常/ 是/ 模型/ 检测工具/ )/ ,/ 提出/ 该/ 工具/ 输入/ 语言/ 的/ 形式/ 模型/ ,/ 然后/ 通过/ BPEL/ 到/ 形式/ 模型/ 以及/ 形式/ 模型/ 到/ 输入/ 语言/ 的/ 转换/ ,/ 实现/ 属性/ 的/ 自动/ 验证/ ./ 本文/ 也/ 沿用/ 这种/ 思路/ ,/ 但是/ 我们/ 侧重于/ 对/ BPEL/ 进行/ 多/ 主体/ 系统/ 建模/ ,/ 原由/ 如下/ :/ 在/ W3C/ 工作组/ 起草/ 的/ Web/ 服务/ 体系结构/ 文件/ 中/ 提出/ ,/ Web/ 服务/ 是/ 一个/ 抽象/ 的/ 概念/ ,/ 必须/ 由/ 具体/ 的/ 主体/ 执行/ ,/ 该/ 主体/ 是/ 一个/ 具体/ 的/ 能够/ 发送/ 或者/ 接收/ 消息/ 的/ 软件/ 或者/ 硬件/ ./ 而/ 多/ 主体/ 系统/ (/ Multi/ -/ agentSystems/ ,/ MAS/ )/ 是/ 指/ 由/ 多个/ 相互/ 交互/ 的/ 主体/ 组成/ 的/ 系统/ ,/ 形成/ 多个/ 主体/ 合作/ 的/ 问题/ 求解/ 网络/ ./ 因此/ 很/ 自然/ 地/ ,/ 我们/ 可以/ 把/ Web/ 服务/ 组合/ 抽象/ 为/ 多/ 主体/ 系统/ ,/ 从而/ 应用/ 多/ 主体/ 系统/ 模型/ 检测工具/ 对/ 大多数/ 基于/ 传统/ 模型/ 检测工具/ (/ 如/ SPIN/ 和/ NuSMV/ 等/ )/ 的/ 方法/ 不能/ 验证/ 的/ 多/ 主体/ 认知/ 性质/ 进行/ 验证/ ./ 比如/ 时态/ 认知/ 性质/ p/ →/ FKip/ 表示/ 如果/ p/ 成立/ ,/ 则/ 最终/ (/ F/ 时态/ 算子/ )/ 主体/ i/ 会/ 知道/ p/ 成立/ ,/ 其中/ 嵌入/ 的/ 知识/ 子/ 公式/ Kip/ 如果/ 在/ 状态/ s/ 成立/ ,/ 则/ 表示/ 在/ 主体/ i/ 认为/ 可能/ 的/ (/ 即/ 与/ s/ 不能/ 区分/ Page3/ 的/ )/ 所有/ 状态/ 下/ p/ 均/ 成立/ ,/ 因此/ 即使/ 主体/ i/ 当前/ 不能/ 肯定/ 自己/ 处于/ 状态/ s/ 中/ ,/ 它/ 也/ 可/ 确定/ (/ 知道/ )/ p/ 均/ 成立/ ./ 这类/ 性质/ 体现/ 了/ 主体/ i/ 的/ 认知/ 能力/ ,/ 是/ 其它/ 非/ 认知/ 模型/ 检测工具/ 无法/ 验证/ 的/ ./ 事实上/ ,/ 我们/ 已/ 开发/ 出/ 一种/ 多/ 主体/ 系统/ 符号化/ 模型/ 检测工具/ MCTK/ [/ 11/ -/ 13/ ]/ ,/ 支持/ 时态/ 认知/ 逻辑/ 性质/ 验证/ ,/ 其/ 验证/ 效率/ 与/ 类似/ 的/ 主流/ 工具/ MCMAS/ [/ 14/ ]/ 和/ MCK/ [/ 15/ ]/ 相比/ 均/ 有/ 不同/ 程度/ 的/ 提高/ ./ 基于/ 上述情况/ ,/ 本文/ 提出/ 并/ 实现/ 一种/ 基于/ MCTK/ 的/ Web/ 服务/ 组合/ 建模/ 和/ 自动/ 验证/ 方法学/ ,/ 支持/ 通信/ 通道/ 的/ 建模/ ,/ 使得/ 我们/ 能够/ 直接/ 以/ BPEL/ 作为/ 输入/ 语言/ 进行/ 建模/ 和/ 验证/ ,/ 不仅/ 可以/ 验证/ Web/ 服务/ 组合/ 的/ 时态/ 逻辑/ 规范/ ,/ 而且/ 还/ 可以/ 验证/ 代表/ Web/ 服务/ 的/ 主体/ 的/ 时态/ 认知/ 性质/ ,/ 这是/ 传统/ 模型/ 检测/ 技术/ 所/ 不/ 支持/ 的/ ./ 据/ 我们/ 所知/ ,/ 与/ 本文/ 最/ 相关/ 的/ 工作/ 当属/ Lomuscio/ 和/ Qu/ 等/ 人/ 在/ 文献/ [/ 16/ -/ 17/ ]/ 的/ 工作/ ,/ 他们/ 应用/ MCMAS/ 对/ BPEL/ 进行/ 了/ 关于/ 时态/ 和/ 知识/ 属性/ 方面/ 的/ 验证/ ,/ 但/ 对/ 形式/ 模型/ 和/ 语言/ 自动/ 转化/ 算法/ 未/ 给出/ 详细/ 说明/ ,/ 对/ Web/ 服务/ 间/ 的/ 通信/ 也/ 未/ 给出/ 具体/ 描述/ ./ 更/ 重要/ 的/ 是/ ,/ 我们/ 的/ MCTK/ 的/ 时态/ 部分/ 支持/ CTL/ / (/ 包含/ CTL/ 和/ LTL/ )/ ,/ 而/ MCMAS/ 的/ 时态/ 部分/ 仅/ 支持/ CTL/ ,/ 因此/ MCTK/ 的/ 时态/ 表达能力/ 更强/ ./ 本文/ 第/ 2/ 节/ 提出/ BPEL/ 流程/ 的/ 形式/ 模型/ 并/ 给出/ 活动/ 执行/ 语义/ ;/ 第/ 3/ 节/ 提出/ 从/ BPEL/ 到/ 迁移/ 七元/ 组和/ 从/ 迁移/ 七元/ 组到/ MCTK/ 输入/ 语言/ 的/ 自动/ 转换/ 算法/ ;/ 第/ 4/ 节/ 给出/ 一个/ 验证/ 示例/ 及其/ 实验/ 结果/ ;/ 最后/ 在/ 第/ 5/ 节/ 给出/ 结论/ 并/ 展望未来/ 工作/ ./ 2BPEL/ 形式/ 模型/ 和/ 活动/ 执行/ 语义/ 2.1/ BPEL/ 形式/ 模型/ BFM/ 由于/ 单一/ Web/ 服务/ 的/ 自治/ 性和松/ 耦合/ 性/ ,/ 我们/ 将/ 每/ 一/ Web/ 服务/ 建模/ 为/ 主体/ ./ 这些/ 主体/ 广泛/ 分布/ 于/ 网络/ 中/ ,/ 因此/ 组合/ Web/ 服务/ 可/ 被/ 视为/ 由/ 多个/ 交互/ 主体/ 组成/ 的/ 多/ 主体/ 分布式系统/ (/ 简称/ 多/ 主体/ 系统/ )/ ,/ 它/ 由/ 若干/ 主体/ 和/ 一个/ 公共/ 环境/ 组成/ ,/ 某些/ 主体/ 之间/ 可以/ 进行/ 交互/ ./ 这里/ ,/ 为了/ 便于/ 后续/ 工作/ 对/ 主体/ 交互/ 的/ 建模/ ,/ 我们/ 引入/ “/ 通道/ ”/ 的/ 概念/ ./ 通道/ 用来/ “/ 连接/ ”/ 两个/ 主体/ ,/ 这些/ 主体/ 通过/ 通道/ 发送/ 或者/ 接收/ 信息/ ,/ 交互/ 的/ 主体/ 互相/ 能/ 观察/ 到/ 对方/ 的/ 一部分/ 信息/ ,/ 同时/ 主体/ 还/ 可以/ 和/ 环境/ 进行/ 交互/ ,/ 因此/ 它/ 也/ 可以/ 观察/ 到/ 环境/ 的/ 一部分/ 甚至/ 全部/ ./ 主体/ 根据/ 自身/ 的/ 当前/ 局部/ 状态/ 和/ 收发/ 的/ 信息/ 决定/ 下/ 一步/ 动作/ ,/ 所有/ 主体/ 和/ 环境/ 的/ 联合/ 动作/ 导致系统/ 状态/ 发生/ 迁移/ ./ 我们/ 采用/ 扩展/ 的/ 有限/ 状态机/ 对/ BPEL/ 进行/ 形式/ 建模/ ,/ 这种/ 扩展/ 的/ 有限/ 状态机/ 首先/ 清晰/ 刻画/ 了/ 系统/ 状态/ 的/ 迁移/ 关系/ ./ 其次/ ,/ 采用/ 的/ 底层/ 验证/ 平台/ 是/ 我们/ 自行/ 研发/ 的/ 多/ 主体/ 系统/ 模型/ 检测工具/ MCTK/ (/ 详见/ 文献/ [/ 11/ ,/ 13/ ]/ )/ ,/ 其/ 输入/ 语言/ 实际上/ 是/ 有限/ 状态机/ 的/ 符号化/ 描述/ ,/ 该/ 输入/ 语言/ 同时/ 扩展/ 了/ 每/ 一/ 主体/ 的/ 可/ 观察/ 变量/ 集合/ 的/ 定义/ ./ 因此/ ,/ 该/ 形式/ 模型/ 还/ 应对/ 信息/ 的/ 可/ 观察/ 性/ 进行/ 描述/ ./ 为此/ ,/ 我们/ 定义/ BPEL/ 语言/ 的/ 形式/ 模型/ BFM/ (/ BPELFinite/ -/ stateMachine/ )/ 如下/ :/ 其中/ :/ Ω/ 为/ 局部/ 状态/ 的/ 有限/ 集合/ ;/ O/ 为/ 主体/ 可/ 观察/ 变量/ 的/ 有限/ 集合/ ,/ 包括/ 通道/ 变量/ 的/ 有限/ 集合/ Oe/ 、/ 链接/ 变量/ 的/ 有限/ 集合/ Ol/ 和/ 条件/ 变量/ 的/ 有限/ 集合/ Og/ ;/ δ/ 为/ Ω/ ×/ Δ/ →/ Ω/ 是/ 状态/ 迁移/ 函数/ ,/ 其中/ Δ/ =/ Oe/ ×/ Ol/ ×/ Og/ ×/ channel/ ×/ dir/ ./ / (/ p/ ,/ a/ )/ ∈/ Ω/ ×/ Δ/ ,/ 有/ δ/ (/ p/ ,/ a/ )/ →/ q/ ,/ 表示/ 当前/ 处于/ 状态/ p/ 时/ ,/ 由于/ 主体/ 执行/ 活动/ 产生/ 条件/ Δ/ 后/ 迁移/ 到/ 状态/ q/ ,/ Δ/ 由/ 主体/ 执行/ 活动/ 产生/ ;/ P0/ 为/ 系统/ 初始状态/ ,/ P0/ ∈/ Ω/ ;/ F/ 为/ 终结状态/ 集合/ ,/ F/ / Ω/ ./ / p/ ∈/ F/ ,/ p/ 为/ 终结状态/ ./ 该/ 模型/ 中/ ,/ Ω/ 表示/ 主体/ 执行/ 过程/ 中/ 所/ 经历/ 的/ 所有/ 状态/ 组成/ 的/ 状态/ 空间/ ./ Δ/ 中/ channel/ 表示/ 与/ 此/ 主体/ “/ 连接/ ”/ 的/ 通道/ 名/ ,/ 在/ 用/ MCTK/ 编程/ 时/ ,/ 不仅/ 要/ 考虑/ 状态/ 之间/ 的/ 迁移/ 关系/ ,/ 也/ 要/ 考虑/ 与/ 主体/ 相/ “/ 连接/ ”/ 的/ 通道/ 中/ 消息/ 与/ 状态/ 之间/ 的/ 关系/ 以及/ 通道/ 中/ 信息/ 的/ 变化/ 情况/ ./ 因此/ ,/ 需要/ 知道/ 与/ 每个/ 主体/ 相/ “/ 连接/ ”/ 的/ 所有/ 通道/ 的/ 名称/ ,/ 它/ 即/ 为/ BPEL/ 活动/ 的/ 端口/ 类型/ 名/ 〈/ portTypename/ 〉/ ./ 本文/ 中/ ,/ 假设/ 所有/ 通道/ 名/ 皆/ 不/ 相同/ ,/ 并且/ 每个/ 主体/ 皆/ 有/ 两个/ 单向/ 通道/ 与其/ 相连/ ,/ 用于/ 发送/ 及/ 接收/ 消息/ ,/ 对于/ 异步/ 双向/ 交互/ ,/ 两个/ 〈/ port/ -/ Typename/ 〉/ 即/ 为/ 两个/ 通道/ 的/ 名称/ ,/ 对于/ 同步/ 双向/ 交互/ ,/ 人工/ 定义/ 一个/ 〈/ portTypename/ 〉/ 作为/ 另/ 一个/ 通道/ 的/ 通道/ 名/ ./ 通道/ 名/ 的/ 定义/ 使得/ 运用/ MCTK/ 输入/ 语言/ 建模/ 时/ 更加/ 方便/ ,/ 但是/ 仅/ 从/ 通道/ 名/ 属性/ 中/ 并/ 不能/ 分辨/ 出该/ 通道/ 是/ 用来/ 发送/ 消息/ 还是/ 用来/ 接收/ 消息/ ./ 因此/ ,/ dir/ 表示/ 此/ 通道/ 相对/ 于/ 与其/ “/ 连接/ ”/ 的/ 主体/ 是/ 发送/ 消息/ 通道/ (/ 简称/ 出/ 通道/ )/ 还是/ 接收/ 消息/ 通道/ (/ 简称/ 入/ 通道/ )/ ./ BPEL/ 语言/ 中/ 的/ 变量/ 主要/ 分为/ 3/ 种/ :/ Oe/ 为主/ 体能/ 观察/ 到/ 的/ 通道/ 变量/ 的/ 有限/ 集合/ ,/ 主体/ 能/ 观察/ 到/ 的/ 通道/ 变量/ 是/ 存储/ 此/ 主体/ 与/ 其它/ 主体/ 或者/ 环境/ 之间/ 交互/ 信息/ 的/ 变量/ ./ 因此/ ,/ 一个/ 主体/ 除了/ 观察/ 到/ 自身/ 内部/ 变量/ 外/ ,/ 还/ 能/ 观察/ 到/ 一部分/ 通道/ 变量/ ./ 这些/ 通道/ 变量/ 明确/ 出现/ 在/ BPEL/ 程序/ 的/ 〈/ variables/ 〉/ 标签/ 中/ ,/ 实际上/ 它们/ 也/ 是/ 主体/ 之间/ 的/ 共享/ 变量/ ./ Ol/ 为主/ 体能/ 观察/ 到/ 的/ 内部/ 链接/ 变量/ 的/ 有限/ 集合/ ,/ 这些/ 变量/ 可以/ 从/ Page4/ 〈/ links/ 〉/ 标签/ 中/ 的/ 〈/ link/ 〉/ 抽出/ ,/ 〈/ link/ 〉/ 指定/ 了/ 并发/ 执行/ 活动/ 之间/ 的/ 控制流/ ,/ 可以/ 将/ 这些/ 变量/ 看做/ 布尔/ 变量/ ,/ 当其为/ 真时/ 表示/ 该/ 控制流/ 存在/ ./ Og/ 为/ 条件/ 变量/ 的/ 有限/ 集合/ ,/ 每个/ 条件/ 变量/ 对应/ 一个/ 可以/ 表达/ 条件/ 表达式/ 真/ 或/ 假/ 的/ 断言/ ,/ 这些/ 条件/ 表达式/ 可以/ 出现/ 在/ 诸如/ 〈/ while/ 〉/ ,/ 〈/ switch/ 〉/ ,/ 〈/ source/ 〉/ 中/ 的/ 〈/ transitionCondi/ -/ tion/ 〉/ ,/ 〈/ targets/ 〉/ 中/ 的/ 〈/ joinCondition/ 〉/ 中/ ,/ 因此/ ,/ 每个/ 条件/ 变量/ 也/ 是/ 布尔/ 变量/ ,/ 变量值/ 为/ 真/ 说明/ 表达式/ 也/ 为/ 真/ ./ 实际上/ 通过/ 上节/ 对/ BPEL/ 语言/ 的/ 分析/ ,/ 我们/ 可以/ 知道/ 该/ 语言/ 主要/ 用来/ 对/ 流程/ 进行/ 描述/ ,/ 它/ 反映/ 了/ 主体/ 之间/ 的/ 数据/ 交互/ 以及/ 主体/ 内部/ 变量/ 赋值/ 等/ 情况/ ,/ 但/ 它/ 无法/ 具体/ 描述/ 主体/ 因为/ 信息/ 交互/ 而/ 发生/ 的/ 状态/ 改变/ ,/ 它/ 可以/ 说明/ 在/ 某种/ 条件/ 下/ 控制流/ 转移/ 到/ 了/ 另/ 一个/ Web/ 服务/ ,/ 却/ 无法说明/ 信息/ 转移/ 后/ 相关/ 主体/ 处于/ 什么样/ 的/ 状态/ 下/ ./ MCTK/ 是/ 基于/ NuSMV/ 开发/ 的/ ,/ 引入/ 了/ 认知/ 逻辑/ 验证/ 功能/ 的/ 模型/ 检测工具/ ,/ 但/ 其/ 建模/ 过程/ 是/ 一个/ 针对/ 具体/ 状态/ 迁移/ 的/ 描述/ 过程/ ,/ 我们/ 需要/ 描述/ 出/ 各/ 主体/ 状态/ 之间/ 迁移/ 关系/ 以及/ 相互/ 联系/ 的/ “/ 通道/ ”/ 中/ 信息/ 的/ 变化/ 情况/ ,/ 前者/ 可以/ 用来/ 说明/ 主体/ 的/ 状态/ 空间/ 中/ 各/ 状态/ 的/ 关系/ ,/ 后者/ 使得/ 主体/ 之间/ 建立/ 起/ 联系/ ./ 因此/ ,/ 如果/ 将/ BPEL/ 语言/ 直接/ 转化/ 为/ MCTK/ 输入/ 语言/ 将/ 是/ 十分困难/ 的/ ,/ 我们/ 必须/ 找到/ 中间/ “/ 桥梁/ ”/ 将/ BPEL/ 语言/ 与/ 模型/ 检测工具/ MCTK/ 的/ 输入/ 语言/ 联系/ 起来/ ./ 为此/ ,/ 我们/ 首先/ 对/ 流程/ 经历/ 的/ 状态/ 进行/ 分析/ :/ BPEL/ 中/ 某些/ 基本/ 活动/ 的/ 执行/ 可/ 引起/ 变量值/ 的/ 改变/ ,/ 这些/ 变量/ 包括/ 用来/ 与/ 外界/ 交互/ 的/ 变量/ ,/ 也/ 包括/ 内部/ 通过/ 赋值/ 操作/ 改变/ 的/ 变量/ ,/ 如果/ 用/ 这些/ 变量/ 的/ “/ 与/ ”/ 操作/ 来/ 标示/ 状态/ ,/ 那么/ 这些/ 变量/ 中/ 的/ 任一/ 变量值/ 的/ 改变/ 将/ 导致/ 状态/ 发生/ 迁移/ ./ 例如/ ,/ 在/ 状态/ p0/ 中/ v1/ 、/ v2/ 是/ 外部/ 变量/ ,/ 即/ 用来/ 存储/ 与/ 外部/ 主体/ 的/ 交互/ 信息/ ,/ v3/ 是/ 内部/ 变量/ (/ 例如/ 该/ 变量/ 利用/ assign/ 赋值/ 活动/ 得到/ 值/ )/ ,/ 并且/ 变量/ v1/ =/ 3/ ,/ v2/ =/ 4/ ,/ v3/ =/ 5/ ,/ 那么/ 我们/ 可以/ 用/ (/ v1/ =/ 3/ )/ ∧/ (/ v2/ =/ 4/ )/ ∧/ (/ v3/ =/ 5/ )/ 标示/ 状态/ p0/ ./ 若/ 主体/ 执行/ 某/ 活动/ 从/ 外界/ 主体/ 得到/ 新/ 的/ 信息/ 存储/ 于/ 变量/ v2/ ,/ 使得/ v2/ 的/ 值/ 发生变化/ 变为/ 5/ ,/ 之后/ 执行/ 活动/ 使得/ 内部/ 变量/ v3/ 的/ 值/ 变为/ 6/ ,/ 则/ 系统/ 由/ 状态/ p0/ 迁移/ 到/ 状态/ p1/ :/ (/ v1/ =/ 3/ )/ ∧/ (/ v2/ =/ 5/ )/ ∧/ (/ v3/ =/ 6/ )/ ./ 但/ 对于/ empty/ 活动/ ,/ 由于/ 活动/ 执行/ 后/ 内部/ 外部/ 变量/ 的/ 值/ 均/ 不/ 发生/ 改变/ ,/ 但/ 主体/ 确实/ 执行/ 了/ 此/ 活动/ ,/ 因此/ 可以/ 加入/ 程序/ 计数器/ PC/ 来/ 标示/ 这种/ 活动/ 的/ 执行/ ./ 例如/ ,/ 系统/ 在/ 执行/ 了/ 活动/ empty/ 后/ 由/ 状态/ p0/ :/ (/ v1/ =/ 3/ )/ ∧/ (/ v2/ =/ 4/ )/ ∧/ (/ v3/ =/ 5/ )/ ∧/ pc0/ 迁移/ 到/ 状态/ p1/ :/ (/ v1/ =/ 3/ )/ ∧/ (/ v2/ =/ 4/ )/ ∧/ (/ v3/ =/ 5/ )/ ∧/ pc1/ ./ 由此可见/ ,/ 主体/ 在/ 执行/ 过程/ 中/ 的/ 所有/ 状态/ 均/ 可/ 由/ 主体/ 中/ 所有/ 变量/ 与/ PC/ 的/ 合取/ 来/ 标示/ ,/ 因此/ 变量/ 或者/ PC/ 任何一方/ 的/ 改变/ 都/ 将/ 引起/ 状态/ 的/ 迁移/ ,/ 而/ 在/ BPEL/ 流程/ 中/ 基本/ 活动/ 的/ 执行/ 会/ 修改/ PC/ 或者/ 变量/ 的/ 值/ ,/ 结构/ 活动/ 与/ 基本/ 活动/ 不同/ ,/ 前者/ 主要/ 用来/ 说明/ 在/ 其/ 内部/ 的/ 基本/ 活动/ 是/ 按照/ 何种/ 顺序/ 执行/ ,/ 或者/ 顺序/ 执行/ 、/ 或者/ 并发/ 执行/ 、/ 或者/ 选择/ 执行/ 、/ 或者/ 循环/ 执行/ 等等/ ./ 因此/ ,/ 欲/ 实现/ BPEL/ 流程/ 的/ 自动化/ 验证/ 就/ 需要/ 在/ 结构/ 活动/ 所/ 提供/ 的/ 框架/ 下/ ,/ 研究/ 其/ 内部/ 基本/ 活动/ 的/ 执行/ 对系统/ 产生/ 的/ 影响/ ,/ 主要/ 包括/ 对/ 主体/ 所/ 处/ 状态/ 的/ 影响/ ,/ 并/ 自动/ 将/ 这种/ 影响/ 刻画/ 出来/ ./ 直观/ 上/ 看/ ,/ 对/ 主体/ 所/ 处/ 状态/ 的/ 影响/ 主要/ 指/ 主体/ 相关/ 变量值/ 的/ 改变/ ,/ 由于/ 我们/ 用/ 变量/ 的/ 合取/ 标示/ 状态/ ,/ 活动/ 的/ 执行/ 将/ 导致/ 变量值/ 发生/ 改变/ ,/ 状态/ 自然/ 发生/ 迁移/ ./ 考虑/ 到/ 模型/ 的/ 简化/ ,/ 我们/ 省去/ 了/ 状态/ 记数器/ PC/ ,/ 只/ 研究/ 变量值/ 的/ 改变/ 对/ 状态/ 迁移/ 产生/ 的/ 影响/ ./ 所以/ 我们/ 要/ 找/ 的/ “/ 桥梁/ ”/ 必须/ 能够/ 直观/ 反映/ 出/ 由于/ 变量值/ 改变/ 引起/ 的/ 这种/ 状态/ 的/ 迁移/ 关系/ ,/ 这是/ 其一/ ;/ 除此以外/ ,/ 该/ “/ 桥梁/ ”/ 必须/ 便于/ 用/ MCTK/ 对/ 其/ 进行/ 描述/ 从而/ 进行/ 形式化/ 建模/ ./ 因此/ ,/ 结合/ BPEL/ 语言/ 以及/ MCTK/ 输入/ 语言/ 的/ 特点/ ,/ 我们/ 还/ 需/ 考虑/ 到/ :/ 交互/ 信息/ 的/ “/ 流动/ ”/ 方向/ ,/ 即/ 信息/ 是/ 进入/ 本/ 主体/ 还是/ 离开/ 本/ 主体/ ,/ 这是/ 其二/ ;/ 交互/ 信息/ 进入/ // 离开/ 主体/ 时/ 经过/ 的/ 端口/ ,/ 这是/ 其三/ ./ 由此/ ,/ 我们/ 所/ 找/ 的/ “/ 中间/ 桥梁/ ”/ 应/ 考虑/ 到/ 上述/ 3/ 个/ 条件/ :/ 第/ 1/ 个/ 条件/ 用来/ 对/ BPEL/ 流程/ 的/ 执行/ 进行/ 描述/ ,/ 便于/ MCTK/ 描述/ 状态/ 迁移/ 关系/ ,/ 后/ 两个/ 条件/ 是/ 为了/ 方便/ MCTK/ 建模语言/ 对/ 通道/ 机制/ 进行/ 描述/ ./ 由/ 以上/ 分析/ 我们/ 知道/ 了/ BPEL/ 活动/ 的/ 执行/ 产生/ 相对/ 应/ 的/ 状态/ 迁移/ 过程/ ,/ 为了/ 刻画/ 这种/ 状态/ 的/ 变化/ 信息/ ,/ 本文/ 提出/ 迁移/ 七元/ 组/ 概念/ ./ 它/ 也/ 是/ 我们/ 要/ 找/ 的/ “/ 中间/ 桥梁/ ”/ ./ 一个/ 迁移/ 七元/ 组/ (/ 简称/ 七元/ 组/ )/ 应/ 具备/ 如下/ 形式/ :/ Φ/ (/ Ω/ ,/ Δ/ ,/ Ω/ )/ ./ 它/ 将/ 主体/ 初/ 状态/ 、/ 迁移/ 条件/ 、/ 末/ 状态/ 组合/ 在/ 一起/ ,/ 迁移/ 条件/ 是/ 主体/ 执行/ 某/ 活动/ 导致/ 状态/ 变迁/ 过程/ 中/ 的/ 相关/ 信息/ 值/ ./ 七元/ 组/ 展开/ 后/ 语法/ 格式/ 为/ :/ Φ/ (/ cur/ (/ state/ )/ ,/ Oe/ ,/ Ol/ ,/ Og/ ,/ channel/ ,/ dir/ ,/ next/ (/ state/ )/ )/ ./ 其中/ :/ cur/ (/ state/ )/ 为/ 主体/ 执行/ 活动/ 前/ 的/ 当前/ 状态/ ;/ Oe/ 为/ 主体/ 执行/ 活动/ 后/ 的/ 通道/ 变量值/ ;/ Ol/ 为/ 主体/ 执行/ 活动/ 后/ 链接/ 变量/ 的/ 值/ ;/ Og/ 为/ 主体/ 执行/ 活动/ 后/ 条件/ 变量/ 的/ 值/ ;/ channel/ 为/ 与/ 主体/ 连接/ 的/ 通道/ 名/ ;/ dir/ 表示/ 对本/ 主体/ 是/ 出/ 通道/ 还是/ 入/ 通道/ ;/ next/ (/ state/ )/ 为/ 主体/ 执/ Page5/ 状态/ 已/ 发生/ 迁移/ ;/ (/ 1/ )/ 状态/ 名/ 从/ cur/ (/ state/ )/ 变为/ next/ (/ state/ )/ ,/ 表明/ (/ 2/ )/ 主体/ 活动/ 执行/ 完毕/ 后/ Oe/ 、/ Ol/ 、/ Og/ 、/ channel/ 、/ dir/ 的/ 变化/ ,/ 这些/ 信息/ 不仅/ 真实/ 反映/ 了/ BPEL/ 活动/ 执行/ 导致/ 的/ 变量值/ 的/ 改变/ 情况/ ,/ 同时/ 也/ 具备/ 了/ MCTK/ 建模/ 所/ 需/ 的/ 必要/ 信息/ ./ 需要/ 说明/ 的/ 是/ ,/ 完全/ 运用/ 变量/ 与/ PC/ 的/ 合取/ 标示/ 状态/ ,/ 会/ 对/ 最后/ 验证/ 规范/ 的/ 书写/ 带来/ 很大/ 困难/ ,/ 原因/ 有/ 两点/ :/ 行/ 活动/ 完毕/ 所/ 处/ 状态/ ./ 化/ ,/ 由/ 七元/ 组/ 看出/ 状态/ 的/ 变化/ 在/ 这里/ 主要/ 指/ :/ 该/ 七元/ 组/ 包含/ 了/ 主体/ 活动/ 执行/ 完毕/ 后/ 状态/ 的/ 变/ (/ 1/ )/ 大量/ 变量/ 的/ 书写/ 很/ 麻烦/ ,/ 尤其/ 当/ 系统/ 的/ 状态/ 空间/ 很大/ 时/ ,/ 为/ 表示/ 状态/ 又/ 需要/ 书写/ 多个/ 变量/ 的/ 合取/ ,/ 很/ 容易/ 出错/ ,/ 而/ 实际/ 中/ 的/ 软件系统/ 大多/ 具有/ 超大规模/ 状态/ 空间/ ,/ 因此/ 这种/ 状态/ 表示法/ 并/ 不/ 实用/ ./ (/ 2/ )/ 由于/ 规范/ 需要/ 人为/ 书写/ ,/ 因此/ ,/ 一般/ 状态/ 名/ 都/ 具有/ 明确/ 的/ 意义/ ,/ 这/ 符合/ 人类/ 语言/ 习惯/ ./ 同时/ ,/ 也/ 为了/ 简化/ 七元/ 组/ 以及/ MCTK/ 代码/ 中/ 状态/ 的/ 表示/ ,/ 降低/ 程序/ 出错/ 的/ 可能性/ ./ 规范/ 中/ 状态/ 的/ 命名/ 一般/ 都/ 带有/ 特殊/ 含义/ 使得/ 表达/ 的/ 意义/ 更/ 明确/ ,/ 使人/ 一目了然/ ,/ 例如/ 欲/ 验证/ :/ 无论/ 何时/ 只要/ A/ 事件/ 发生/ ,/ 则/ 未来/ B/ 事件/ 必将/ 发生/ ,/ 其/ 规范/ 可写/ 为/ AG/ (/ A/ _/ happen/ →/ AF/ (/ B/ _/ happen/ )/ )/ ,/ A/ _/ happen/ 、/ B/ _/ happen/ 均/ 为/ 状态/ 名/ ,/ 其/ 意义/ 从/ 字面上/ 看/ 很/ 清晰/ ,/ 并且/ 书写/ 方便/ 也/ 便于/ MCTK/ 代码/ 的/ 生成/ ./ 再/ 例如/ 主体/ 发送信息/ Msg/ 以前/ 其/ 状态/ 为/ Msg/ ,/ 发送/ 该/ 信息/ 后/ 状态/ 变为/ send/ _/ Msg/ ,/ 表示/ 主体/ 到达/ 了/ “/ 已经/ 发送/ 了/ Msg/ 信息/ 的/ 状态/ ”/ 等等/ ./ 但是/ 为了/ 扩大/ 可验证/ 规范/ 的/ 种类/ ,/ 同时/ 又/ 要/ 便于/ 迁移/ 七元/ 组/ 的/ 正确/ 生成/ ,/ 我们/ 将/ 部分/ 采取/ 变量/ 的/ 合取/ 标示/ 状态/ 的/ 方法/ ./ 具体/ 状态/ 表示/ 方法/ 将/ 在/ 3.1/ 节/ 给出/ ./ 由此/ ,/ 本文/ 利用/ 迁移/ 七元/ 组将/ BPEL/ 语言/ 刻画/ 的/ 组合/ Web/ 服务/ 与/ MCTK/ 输入/ 语言/ 之间/ 建立/ 起/ 联系/ ./ 实际上/ ,/ 迁移/ 七元/ 组从/ 本质/ 上/ 说/ 就是/ 对/ 状态/ 转换/ 图中/ 的/ 每/ 一对/ 有/ 迁移/ 关系/ 的/ “/ 状态/ 对/ ”/ 的/ 一种/ 文字/ 性/ 刻画/ ,/ 因为/ 传统/ 工作/ 对/ BPEL/ 流程/ 的/ 验证/ 皆/ 需要/ 构造/ 状态/ 转换/ 图/ ,/ 而/ 状态/ 转换/ 图/ 在/ 计算机/ 中是/ 不/ 存在/ 的/ ,/ 这/ 需要/ 大量/ 的/ 人工/ 操作/ ,/ 之后/ 再用/ 形式化/ 验证/ 工具/ 的/ 输入/ 语言/ 对/ 该/ 状态/ 转换/ 图/ 进行/ 刻画/ ,/ 进而/ 验证/ ./ 若要/ 实现/ 流程/ 的/ 自动/ 验证/ ,/ 就/ 需要/ 自动/ 生成/ 能够/ 反映/ 状态/ 转换/ 关系/ 的/ 、/ 文字/ 性/ 的/ 、/ 对/ 流程/ 进行/ 刻画/ 的/ 规范/ ./ 并且/ 构造/ 该/ 规范/ 时/ 还要/ 考虑/ 到/ 后续/ 工作/ ,/ 也/ 就是/ 是否/ 便于/ 用/ MCTK/ 利用/ 该/ 规范/ 进行/ 形式化/ 建模/ ./ 通过/ 对/ BPEL/ 活动/ 执行/ 语义/ 进行/ 分析/ ,/ 我们/ 发现/ 活动/ 的/ 执行/ 过程/ 就是/ 对/ 活动/ 中/ 所/ 涉及/ 的/ 相关/ 变量/ 的/ 一次/ 赋值/ 操作/ ,/ BPEL/ 活动/ 的/ 属性/ 显示/ 了/ 相关/ 变量/ 在/ 活动/ 执行/ 完毕/ 后/ 得到/ 的/ 值/ 以及/ 其它/ 一些/ 必要/ 的/ 操作/ ./ 因此/ ,/ 在/ 构造/ 七元/ 组时/ 我们/ 需要/ 将/ BPEL/ 语言/ 活动/ 中/ 的/ 对/ 我们/ 后续/ 工作/ 有/ 价值/ 的/ 属性/ 值/ 抽取/ 出来/ ,/ 以/ 构造/ 七元/ 组/ ./ 于是/ ,/ 我们/ 给出/ BPEL/ 活动/ 语义/ 并/ 结合/ 该/ 语义/ 说明/ 活动/ 执行/ 后/ 相关/ 七元/ 组/ 的/ 产生/ ./ 2.2/ BPEL/ 活动/ 执行/ 语义/ 以及/ 相关/ 七元/ 组/ 的/ 产生/ 本/ 节/ 给出/ BPEL/ 活动/ 的/ 形式化/ 语义/ ,/ 为了/ 方便/ 后续/ 说明/ ,/ 我们/ 首先/ 定义/ 几个/ 函数/ :/ cur/ (/ state/ )/ 表示/ 活动/ 的/ 初始状态/ ,/ 也/ 就是/ 活动/ 刚/ next/ (/ state/ )/ 表示/ 活动/ 执行/ 后/ 主体/ 所/ 处/ 状态/ ./ value/ (/ variable/ )/ 表示/ 通道/ 中/ 的/ 信息/ 值/ ./ c/ (/ source/ (/ state/ )/ ,/ dest/ (/ state/ )/ )/ 表示/ 与/ 主体/ 连接/ 的/ 通道/ 名/ ,/ 通道/ 中/ 信息/ 的/ 传输/ 改变/ 主体/ 状态/ ./ dir/ (/ channel/ )/ 表示/ 通道/ 中/ 信息/ 传送/ 方向/ ,/ 即/ 信息/ 离开/ 主体/ 还是/ 到达/ 主体/ ./ 基本/ 活动/ ./ (/ 1/ )/ receive/ 功能/ :/ 该/ 活动/ 允许/ 商业/ 流程/ 等待/ 一条/ 匹配/ 消息/ 开始/ 执行/ 时/ 主体/ 所/ 处/ 状态/ ./ 的/ 到来/ ,/ 当/ 此/ 消息/ 到来/ 时该/ 活动/ 结束/ ./ PToperation/ =/ Opvariable/ =/ V/ 〉/ δ/ Receive/ =/ {/ T/ |/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ ∧/ V/ ∈/ Oe/ ∧/ cur/ (/ state/ )/ =/ 格式/ :/ 〈/ receivepartnerLink/ =/ LportType/ =/ 迁移/ 语义/ :/ 说明/ :/ ①/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ 说明/ Pi/ 、/ Pi/ +/ 1/ 为/ 状态/ 空间/ Ω/ 中/ 的/ 状态/ ,/ 即/ 为/ 主体/ 流程/ 执行/ 过程/ 中/ 系统/ 经历/ 的/ 状态/ ;/ ②/ V/ ∈/ Oe/ 说明/ V/ 是/ 通道/ 变量/ ,/ 因此/ ,/ variable/ 属性/ 所指/ 变量值/ 为本/ 主体/ 与/ 外界/ 主体/ 的/ 交互/ 信息/ ,/ 其值/ 存储/ 于/ 变量/ V/ 中/ ;/ ③/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 1/ 指出/ 这/ 两个/ 状态/ 之间/ 存在/ 直接/ 的/ 迁移/ 关系/ 是/ 由/ 状态/ Pi/ 迁移/ 到/ 状态/ Pi/ +/ 1/ ;/ ④/ c/ (/ Pi/ ,/ Pi/ +/ 1/ )/ =/ PT/ 指出/ 端口/ 类型/ portType/ 属性/ 指定/ 了/ 与/ 本/ 主体/ 连接/ 的/ 用来/ 发送/ 或者/ 接收/ 消息/ 的/ 通道/ 名/ ;/ 中/ 存储/ 的/ 信息/ ;/ ⑤/ value/ (/ PT/ )/ =/ V/ 说明/ 通道/ 中/ 的/ 信息/ 是/ 变量/ V/ ⑥/ dir/ (/ PT/ )/ =/ IN/ 说明/ 该/ 活动/ 接收/ 外界/ 到来/ 的/ Page6/ 信息/ ,/ 信息/ 的/ 流向/ 是/ 进入/ 主体/ ./ 同时/ 也/ 说明/ 了/ PT/ 通道/ 是/ 入/ 通道/ ./ 所有/ 条件/ 的/ “/ 与/ ”/ 操作/ 构成/ 了/ 该/ 活动/ 形式化/ 语义/ ,/ 我们/ 将/ 语义/ 中/ 各个/ 元素/ 抽取/ 出/ ,/ 按照/ 迁移/ 七元/ 组/ 定义/ 将/ 它们/ 按/ 顺序/ 载入/ ,/ 得到/ 产生/ 的/ 七元/ 组/ 如下/ (/ 迁移/ 图如图/ 1/ 所示/ )/ :/ (/ 2/ )/ reply/ 功能/ :/ 允许/ 企业/ 流程/ 发送/ 一条/ 消息/ 来/ 响应/ 诸如/ 〈/ receive/ 〉/ 、/ 〈/ onMessage/ 〉/ 和/ 〈/ onEvent/ 〉/ 这样/ 的/ “/ 接收/ ”/ 信息/ 的/ 活动/ ./ 格式/ :/ 〈/ replypartnerlink/ =/ LportType/ =/ PToperation/ =/ Opvariable/ =/ V/ 〉/ ./ 迁移/ 语义/ :/ δ/ reply/ =/ {/ T/ |/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ ∧/ V/ ∈/ Oe/ ∧/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 1/ ∧/ c/ (/ Pi/ ,/ Pi/ +/ 1/ )/ =/ PT/ ∧/ value/ (/ PT/ )/ =/ V/ ∧/ dir/ (/ PT/ )/ =/ OUT/ }/ ./ 说明/ :/ ①/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ 说明/ Pi/ 、/ Pi/ +/ 1/ 为/ 状态/ 空间/ Ω/ 中/ 的/ 状态/ ,/ 即/ 为/ 主体/ 流程/ 执行/ 过程/ 中/ 系统/ 经历/ 的/ 状态/ ;/ ②/ V/ ∈/ Oe/ 说明/ V/ 是/ 通道/ 变量/ ,/ 因此/ ,/ variable/ 属性/ 所指/ 变量值/ 为本/ 主体/ 与/ 外界/ 主体/ 的/ 交互/ 信息/ ,/ 其值/ 存储/ 于/ 变量/ V/ 中/ ;/ ③/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 1/ 指出/ 这/ 两个/ 状态/ 之间/ 存在/ 直接/ 的/ 迁移/ 关系/ 是/ 由/ 状态/ Pi/ 迁移/ 到/ 状态/ Pi/ +/ 1/ ;/ ④/ c/ (/ Pi/ ,/ Pi/ +/ 1/ )/ =/ PT/ 指出/ 端口/ 类型/ portType/ 属性/ 指定/ 了/ 与/ 本/ 主体/ 连接/ 的/ 用来/ 发送/ 或者/ 接收/ 消息/ 的/ 通道/ 名/ ;/ 中/ 存储/ 的/ 信息/ ;/ ⑤/ value/ (/ PT/ )/ =/ V/ 说明/ 通道/ 中/ 的/ 信息/ 是/ 变量/ V/ ⑥/ dir/ (/ PT/ )/ =/ OUT/ 说明/ 该/ 活动/ 响应/ 外界/ 到来/ 的/ 信息/ ,/ 主体/ 执行/ 活动/ 完毕/ 将/ 信息/ 返回/ 给/ 调用/ 方/ ,/ 说明/ 了/ PT/ 通道/ 是/ 出/ 通道/ ./ 所有/ 条件/ 的/ “/ 与/ ”/ 操作/ 构成/ 了/ 该/ 活动/ 形式化/ 语义/ ,/ 我们/ 将/ 语义/ 中/ 各个/ 元素/ 抽取/ 出/ ,/ 按照/ 迁移/ 七元/ 组/ 定义/ 将/ 它们/ 按/ 顺序/ 载入/ ,/ 得到/ 产生/ 的/ 七元/ 组/ 如下/ (/ 迁移/ 图如图/ 2/ 所示/ )/ :/ (/ 3/ )/ 同步/ invoke/ 功能/ :/ 允许/ 流程/ 在/ 由/ 合作伙伴/ 提供/ 的/ 端口/ 上/ 调用/ 该/ 合作伙伴/ 提供/ 的/ 服务/ ,/ 同步/ invoke/ 为/ “/ 请求/ -/ 响应/ ”/ 式/ 调用/ ./ 格式/ :/ 〈/ invokepartnerLink/ =/ LportType/ =/ PToperation/ =/ OpinputVariable/ =/ IVout/ -/ putVariable/ =/ OV/ 〉/ ./ δ/ syn/ -/ invoke/ =/ {/ T1/ |/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ ∧/ IV/ ∈/ Oe/ ∧/ cur/ (/ state/ )/ =/ 迁移/ 语义/ :/ 说明/ :/ ①/ 执行/ 该/ 活动状态/ 迁移/ 两次/ ,/ 语义/ 中是/ 两次/ 迁移/ T1/ ,/ T2/ 的/ “/ 与/ ”/ 操作/ ./ Pi/ ,/ Pi/ +/ 1/ ,/ Pi/ +/ 2/ ∈/ Ω/ 说明/ Pi/ 、/ Pi/ +/ 1/ 、/ Pi/ +/ 2/ 均/ 为/ 主体/ 流程/ 执行/ 过程/ 中/ 系统/ 经历/ 的/ 状态/ ./ 由于/ 是/ 同步/ invoke/ ,/ 因此/ ,/ 主体/ 调用/ 其它/ Web/ 服务/ 后/ 等待/ 响应/ 信息/ 的/ 到来/ ,/ 其/ 发送/ 消息/ 时/ 通道/ 变量/ 的/ 值/ 发生变化/ ,/ 状态/ 迁移/ 一次/ ,/ 接收/ 消息/ 通道/ 变量值/ 再次/ 发生变化/ ,/ 在/ 上步/ 基础/ 上/ 状态/ 再/ 迁移/ 一次/ ;/ ②/ IV/ ,/ OV/ ∈/ Oe/ 说明/ IV/ 、/ OV/ 都/ 是/ 通道/ 变量/ ,/ 因此/ ,/ inputVariable/ 、/ outputVariable/ 属性/ 所指/ 变量值/ 为本/ 主体/ 与/ 外界/ 主体/ 的/ 交互/ 信息/ ,/ 其值/ 分别/ 存储/ 于/ 变量/ IV/ 或者/ OV/ 中/ ./ 由于/ 是/ 同步/ invoke/ ,/ 主体/ 调用/ 其它/ Web/ 服务/ 后/ 等待/ 响应/ 信息/ 的/ 到来/ ,/ 信息/ 的/ 交互/ 是/ 双向/ 的/ ,/ 因此/ 该/ 活动/ 具有/ 两个/ 用于/ 存储/ 交互/ 信息/ 的/ 变量/ ;/ ③/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 1/ 指出/ 这/ 两个/ 状态/ 之间/ 存在/ 直接/ 的/ 迁移/ 关系/ 是/ 由/ 状态/ Pi/ 迁移/ 到/ 状态/ Pi/ +/ 1/ ;/ cur/ (/ state/ )/ =/ Pi/ +/ 1/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 2/ 说明/ 主体/ 在/ Pi/ +/ 1/ 状态/ 中/ 等待/ ,/ 直到/ 接收/ 到/ 外界/ 的/ 响应/ 消息/ 后/ 迁移/ 到/ 状态/ Pi/ +/ 2/ ;/ ④/ T1/ 中/ c/ (/ Pi/ ,/ Pi/ +/ 1/ )/ =/ PT/ 与/ T2/ 中/ c/ (/ Pi/ +/ 1/ ,/ Pi/ +/ 2/ )/ =/ PT/ _/ back/ 分别/ 指出/ 相应/ 端口/ 类型/ portType/ 属性/ 指定/ 的/ ,/ 与/ 本/ 主体/ 连接/ 的/ 用来/ 发送/ 或者/ 接收/ 消息/ 的/ 通道/ 名/ ./ 需要/ 说明/ 的/ 是/ 通道/ 名/ PT/ 是/ BPEL/ 流/ Page7/ 程/ 已经/ 给出/ 的/ ,/ 但/ 为了/ 实现/ 通道/ 机制/ ,/ 便于/ MCTK/ 代码/ 的/ 自动/ 生成/ ,/ 我们/ 前面/ 约定/ 任一/ 主体/ 皆/ 有/ 两个/ 单向/ 通道/ 与其/ 相连/ ,/ 作为/ 两个/ 相反/ 方向/ 的/ 信息/ 传输/ 通道/ ./ 因此/ ,/ 凡/ 具有/ 双向/ 信息/ 交互/ 的/ 活动/ ,/ 若/ 其/ 通道/ 名/ 只有/ 一个/ ,/ 则/ 对/ 另/ 一个/ 通道/ 采用/ 自/ 命名/ 方式/ ./ 在/ 这里/ ,/ 本文/ 将/ 另/ 一/ 通道/ 命名/ 为/ PT/ _/ back/ ;/ ⑤/ Fvalue/ (/ PT/ )/ =/ IV/ 和/ value/ (/ PT/ _/ back/ )/ =/ OV/ 说明/ 通道/ 中/ 的/ 信息/ 是/ 变量/ IV/ 和/ OV/ 中/ 存储/ 的/ 信息/ ;/ ⑥/ dir/ (/ PT/ )/ =/ OUT/ 和/ dir/ (/ PT/ )/ =/ IN/ 说明/ T1/ 中/ 通道/ 是/ 出/ 通道/ ,/ 主体/ 首先/ 调用/ 外界/ 服务/ ;/ 之后/ 说明/ T2/ 中/ 通道/ 是/ 入/ 通道/ ,/ 响应/ 信息/ 通过/ 该/ 通道/ 进入/ 主体/ ./ 单步/ 迁移/ 中/ 所有/ 条件/ 的/ “/ 与/ ”/ 操作/ 构成/ 了/ 该步/ 迁移/ 的/ 形式化/ 语义/ ./ 因为/ 只有/ 等到/ 响应/ 消息/ 的/ 到来/ ,/ 同步/ invoke/ 活动/ 才/ 算/ 结束/ ,/ 因此/ 两步/ 迁移/ 采用/ “/ 与/ ”/ 操作/ 连接起来/ ./ 我们/ 将/ 语义/ 中/ 各个/ 元素/ 抽出/ ,/ 按照/ 迁移/ 七元/ 组/ 定义/ 将/ 它们/ 按/ 顺序/ 载入/ ,/ 得到/ 产生/ 的/ 七元/ 组/ 如下/ (/ 迁移/ 图如图/ 3/ 所示/ )/ :/ (/ 4/ )/ 异步/ invoke/ 功能/ :/ 允许/ 流程/ 在/ 由/ 合作伙伴/ 提供/ 的/ 端口/ 上/ 调用/ 该/ 合作伙伴/ 提供/ 的/ 服务/ ,/ 异步/ invoke/ 为/ 单向/ 请求/ 式/ 调用/ ./ 格式/ :/ 〈/ invokepartnerLink/ =/ LportType/ =/ PToperation/ =/ OpinputVariable/ =/ IV/ 〉/ ./ 迁移/ 语义/ :/ δ/ asyn/ -/ invoke/ =/ {/ T/ |/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ ∧/ IV/ ∈/ Oe/ ∧/ cur/ (/ state/ )/ =/ 说明/ :/ ①/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ 说明/ Pi/ ,/ Pi/ +/ 1/ 为/ 状态/ 空间/ Ω/ 中/ 的/ 状态/ ,/ 即/ 为/ 主体/ 流程/ 执行/ 过程/ 中/ 系统/ 经历/ 的/ 状态/ ;/ ②/ IV/ ∈/ Oe/ 说明/ IV/ 是/ 通道/ 变量/ ,/ 因此/ ,/ variable/ 属性/ 所指/ 变量值/ 为本/ 主体/ 与/ 外界/ 主体/ 的/ 交互/ 信息/ ,/ 其值/ 存储/ 于/ 变量/ IV/ 中/ ;/ ③/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 1/ 指出/ 这/ 两个/ 状态/ 之间/ 存在/ 直接/ 的/ 迁移/ 关系/ 是/ 由/ 状态/ Pi/ 迁移/ 到/ 状态/ Pi/ +/ 1/ ;/ ④/ c/ (/ Pi/ ,/ Pi/ +/ 1/ )/ =/ PT/ 指出/ 端口/ 类型/ portType/ 属性/ 指定/ 了/ 与/ 本/ 主体/ 连接/ 的/ 用来/ 发送/ 或者/ 接收/ 消息/ 的/ 通道/ 名/ ;/ ⑤/ value/ (/ PT/ )/ =/ IV/ 说明/ 通道/ 中/ 的/ 信息/ 是/ 变量/ IV/ 中/ 存储/ 的/ 信息/ ;/ ⑥/ dir/ (/ PT/ )/ =/ OUT/ 说明/ 该/ 活动/ 发送/ 调用/ 信息/ 到/ 其它/ 合作伙伴/ ,/ 信息/ 的/ 流向/ 是/ 进入/ 被/ 调/ 主体/ ,/ 因此/ PT/ 通道/ 是/ 出/ 通道/ ./ 所有/ 条件/ 的/ “/ 与/ ”/ 操作/ 构成/ 了/ 该/ 活动/ 形式化/ 语义/ ,/ 我们/ 将/ 语义/ 中/ 各个/ 元素/ 抽取/ 出/ ,/ 按照/ 迁移/ 七元/ 组/ 定义/ 将/ 它们/ 按/ 顺序/ 载入/ ,/ 得到/ 产生/ 的/ 七元/ 组/ 如下/ (/ 其/ 迁移/ 图/ 与/ reply/ 活动/ 类似/ ,/ 如图/ 2/ 所示/ )/ :/ 结构/ 活动/ ./ (/ 5/ )/ switch/ 功能/ :/ 用于/ 从/ 一组/ 选择/ 中/ 挑出/ 一个/ 分支/ ,/ 执行/ 该/ 分支/ 包含/ 的/ 活动/ ./ 格式/ :/ 〈/ switch/ 〉/ 迁移/ 语义/ (/ 假设/ 该/ 活动/ 具有/ N/ 分支/ )/ :/ δ/ switch/ =/ / 1/ / k/ / n/ {/ Tk/ |/ Pi/ ,/ Pi/ +/ k/ ∈/ Ω/ ∧/ Ck/ ∈/ Og/ ∧/ Ck/ =/ true/ ∧/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ k/ }/ ./ 说明/ :/ ①/ / 1/ / k/ / n/ 表示/ 互斥/ ,/ 即/ 在/ 待/ 选/ 的/ N/ 分支/ 中/ ,/ 只有/ 一个/ 分支/ (/ k/ 分支/ ,/ 1/ / k/ / n/ )/ 被/ 选中/ 触发/ ;/ ②/ Pi/ ,/ Pi/ +/ k/ ∈/ Ω/ 说明/ Pi/ 、/ Pi/ +/ k/ 为/ 状态/ 空间/ Ω/ 中/ 的/ 状态/ ,/ 即/ 为/ 主体/ 流程/ 执行/ 过程/ 中/ 系统/ 经历/ 的/ 状态/ ;/ ③/ Ck/ ∈/ Og/ ∧/ Ck/ =/ true/ 说明/ Ck/ 是/ 条件/ 变量/ ,/ 也/ 可以/ 说/ 是/ 代表/ condition/ 后/ 条件/ 表达式/ 的/ 断言/ 变量/ ,/ 其值/ 或/ 为/ 真/ 或/ 为/ 假/ ./ Ck/ =/ true/ 表明/ 当其为/ 真时/ ,/ 该/ 条件/ 表达式/ 为/ 真/ ,/ 说明/ 该/ 分支/ 被/ 选中/ ,/ 流程/ 执行/ 该/ Ck/ 所在/ 〈/ case/ 〉/ 内/ 的/ 活动/ ./ 当/ 一个/ 分支/ 被/ 选中/ 后/ ,/ 在/ 本次/ 实例/ 流程/ 中/ 其余/ 分支/ 将/ 不再/ 被/ 触发/ ;/ ④/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ k/ 指出/ 这/ 两个/ 状态/ 之间/ 存在/ 直接/ 的/ 迁移/ 关系/ 是/ 由/ 状态/ Pi/ 迁移/ 到/ 状态/ Pi/ +/ k/ ./ 需要/ 说明/ 的/ 是/ ,/ 对于/ N/ 分支/ 中/ 的/ 任一/ 分支/ ,/ 其/ 状态/ 迁移/ 的/ 初始状态/ 皆/ 为/ Pi/ ,/ 选择/ 不同/ 分支/ 则/ 流程/ 由/ Pi/ 状态/ 迁移/ 到/ 不同/ 状态/ Pi/ +/ k/ ,/ 具体/ 迁移/ 到/ 哪个/ 状态/ 由/ 条件/ 变量/ 的/ 真值/ 决定/ ./ Page8/ 所有/ 条件/ 的/ “/ 与/ ”/ 操作/ 构成/ 了/ 某/ 一/ 被/ 触发/ 迁移/ 的/ 形式化/ 语义/ ,/ 我们/ 将/ 语义/ 中/ 的/ 各个/ 元素/ 抽取/ 出/ ,/ 按照/ 迁移/ 七元/ 组/ 定义/ 将/ 它们/ 按/ 顺序/ 载入/ ,/ 得到/ 产生/ 的/ 七元/ 组/ 如下/ (/ 迁移/ 图如图/ 4/ 所示/ )/ ./ (/ 6/ )/ pick/ 功能/ :/ 用于/ 等待/ 一系列/ 可能/ 消息/ 中/ 的/ 一个/ 到达/ 本/ Web/ 服务/ 并/ 执行/ 相应/ 活动/ 或者/ 等到/ 超时/ 事件/ 发生/ ./ 格式/ :/ 〈/ pick/ 〉/ 〈/ // pick/ 〉/ 迁移/ 语义/ :/ δ/ pick/ =/ / 1/ / k/ / n/ {/ Tk/ |/ Pi/ ,/ Pi/ +/ k/ ∈/ Ω/ ∧/ mi/ ∈/ Oe/ ∧/ 说明/ :/ ①/ / 1/ / k/ / n/ 表示/ 互斥/ ,/ 〈/ pick/ 〉/ 等待/ 互斥/ 信息/ 的/ 到来/ ,/ 当/ 到来/ 的/ 消息/ 与/ 某个/ 〈/ onmessage/ 〉/ 中/ 的/ variable/ 属性/ 相匹配/ 时/ ,/ 则/ 相关/ 活动/ 被/ 执行/ ;/ ②/ Pi/ ,/ Pi/ +/ k/ ∈/ Ω/ 说明/ Pi/ 、/ Pi/ +/ k/ 均/ 为/ 状态/ 空间/ Ω/ 中/ 的/ 状态/ ,/ 即/ 为/ 主体/ 流程/ 执行/ 过程/ 中/ 系统/ 经历/ 的/ 状态/ ;/ ③/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ k/ 指出/ 这/ 两个/ 状态/ 之间/ 存在/ 直接/ 的/ 迁移/ 关系/ 是/ 由/ 状态/ Pi/ 迁移/ 到/ 状态/ Pi/ +/ k/ ./ 需要/ 说明/ 的/ 是/ ,/ 对于/ N/ 分支/ 中/ 的/ 任一/ 分支/ ,/ 其/ 状态/ 迁移/ 的/ 初始状态/ 皆/ 为/ Pi/ ,/ 不同/ 分支/ 被/ 触发/ 则/ 流程/ 由/ Pi/ 状态/ 迁移/ 到/ 不同/ 状态/ ;/ ④/ mi/ ∈/ Oe/ 说明/ mi/ 是/ 通道/ 变量/ ,/ 因此/ ,/ variable/ 属性/ 所指/ 变量值/ 为/ 到达/ 本/ 主体/ 的/ 外界/ 信息/ ,/ 也/ 就是/ 主体/ 等待/ 发生/ 的/ 事件/ ,/ 其值/ 存储/ 于/ 变量/ mi/ 中/ ;/ ⑤/ c/ (/ Pi/ ,/ Pi/ +/ 1/ )/ =/ PT/ 指出/ 端口/ 类型/ portType/ 属性/ 指定/ 了/ 与/ 本/ 主体/ 连接/ 的/ 用来/ 发送/ 或者/ 接收/ 消息/ 的/ 通道/ 名/ ;/ 入该/ 主体/ ,/ 因此/ PT/ 通道/ 是/ 入/ 通道/ ./ ⑥/ 说明/ 主体/ 等待/ 事件/ 的/ 发生/ ,/ 信息/ 的/ 流向/ 是/ 进/ 所有/ 条件/ 的/ “/ 与/ ”/ 操作/ 构成/ 了/ 某/ 一/ 被/ 触发/ 迁移/ 的/ 形式化/ 语义/ ,/ 我们/ 将/ 语义/ 中/ 各个/ 元素/ 抽取/ 出/ ,/ 按照/ 迁移/ 七元/ 组/ 定义/ 将/ 它们/ 按/ 顺序/ 载入/ ,/ 得到/ 产生/ 的/ 七元/ 组/ 如下/ (/ 迁移/ 图如图/ 5/ 所示/ )/ :/ (/ 7/ )/ flow/ -/ source/ -/ activity/ 功能/ :/ 用以/ 实现/ 程序/ 的/ 并发/ 同步/ 执行/ ./ 格式/ :/ 〈/ flow/ 〉/ (/ 迁移/ 条件/ transitionCondition/ 简写/ 为/ tC/ ,/ 假设/ 有/ 两个/ 目标/ 链接/ 活动/ ,/ 其余/ 类推/ )/ 〈/ -/ -/ activity/ -/ -/ 〉/ 〈/ // -/ -/ activity/ -/ -/ 〉/ 迁移/ 语义/ :/ δ/ flow/ -/ s/ -/ a/ =/ {/ T1/ |/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ ∧/ …/ ∧/ cur/ (/ state/ )/ =/ Pi/ ∧/ 说明/ :/ ①/ 该/ 活动/ 迁移/ 两次/ ,/ T1/ 迁移/ 触发/ 后/ 再/ 触发/ T2/ 迁移/ ,/ 语义/ 中是/ 两次/ 迁移/ T1/ ,/ T2/ 的/ “/ 与/ ”/ 操作/ ,/ 由于/ source/ 容器/ 存在/ ,/ 说明/ 此/ 活动/ 为/ 多个/ 活动/ 的/ 源/ 链接/ ./ 因此/ 活动/ 先/ 执行/ ,/ 引起/ 状态/ 迁移/ T1/ ,/ T1/ 执行/ 完毕/ 将/ 迁移/ 条件/ tC/ 分别/ 赋值/ 为/ C1/ 和/ C2/ ,/ 由于/ C1/ ,/ C2/ 都/ 是/ 条件/ 变量/ ,/ 因此/ ,/ 由于/ tC/ 的/ 赋值/ 导致/ 变量值/ 改变/ 状态/ 再次发生/ 迁移/ ,/ 于是/ T2/ 被/ 触发/ ;/ 体/ 流程/ 执行/ 过程/ 中/ 系统/ 经历/ 的/ 状态/ ;/ ②/ Pi/ ,/ Pi/ +/ 1/ ,/ Pi/ +/ 2/ ∈/ Ω/ 说明/ Pi/ 、/ Pi/ +/ 1/ 、/ Pi/ +/ 2/ 均/ 为主/ ③/ T1/ 中/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 1/ 指出/ 由于/ 活动/ 执行/ 导致/ 状态/ 迁移/ ,/ 由/ 状态/ Pi/ 迁移/ 到/ 状/ Page9/ 态/ Pi/ +/ 1/ ;/ ④/ T2/ 中/ L1/ ,/ L2/ ∈/ Ol/ ∧/ C1/ ,/ C2/ ∈/ Og/ ∧/ C1/ ∨/ C2/ ∈/ Og/ 指出/ L1/ ,/ L2/ 为/ 链接/ 变量/ ,/ 当/ 链接/ 存在/ 时/ ,/ 这些/ 变量/ 为/ 真/ ;/ C1/ ,/ C2/ 为/ 条件/ 变量/ ,/ 若/ C1/ ∨/ C2/ 为/ 真/ ,/ 则/ 该/ 活动/ 作为/ 其它/ 活动/ 的/ 源/ 链接/ 是/ 有效/ 的/ ./ 显然/ ,/ C1/ ∨/ C2/ ∈/ Og/ ;/ ⑤/ T2/ 中/ cur/ (/ state/ )/ =/ Pi/ +/ 1/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 2/ 指出/ 由于/ T1/ 执行/ 完毕/ 给/ tC/ 赋值/ 导致/ 条件/ 变量/ Og/ 改变/ ,/ 状态/ 再次发生/ 迁移/ ,/ 于是/ T2/ 被/ 触发/ ,/ 系统/ 状态/ 由/ T1/ 执行/ 末/ 状态/ Pi/ +/ 1/ 迁移/ 到/ 状态/ Pi/ +/ 2/ ./ 所有/ 条件/ 的/ “/ 与/ ”/ 操作/ 构成/ 了/ 单步/ 迁移/ 的/ 形式化/ 语义/ ,/ 由于/ 两步/ 迁移/ 具有/ 先后顺序/ ,/ 我们/ 用/ “/ 与/ ”/ 操作/ 将/ 其/ 联系/ 起来/ ./ 于是/ ,/ 将/ 语义/ 中/ 各个/ 元素/ 抽取/ 出/ ,/ 按照/ 迁移/ 七元/ 组/ 定义/ 将/ 它们/ 按/ 顺序/ 载入/ ,/ 得到/ 产生/ 的/ 七元/ 组/ 如下/ (/ 迁移/ 图如图/ 6/ 所示/ )/ :/ T1/ =/ (/ Pi/ ,/ …/ ,/ Pi/ +/ 1/ )/ ,/ T2/ =/ (/ Pi/ +/ 1/ ,/ ε/ ,/ ε/ ,/ C1/ ∨/ C2/ ,/ ε/ ,/ ε/ ,/ Pi/ +/ 2/ )/ ./ (/ 8/ )/ flow/ -/ target/ -/ activity/ 格式/ :/ 〈/ flow/ 〉/ (/ 迁移/ 条件/ joinCondition/ ,/ 简写/ 为/ jC/ )/ 〈/ -/ -/ activity/ -/ -/ 〉/ 〈/ // -/ -/ activity/ -/ -/ 〉/ 迁移/ 语义/ :/ δ/ flow/ -/ t/ -/ a/ =/ {/ T1/ |/ Pi/ ,/ Pi/ +/ 1/ ∈/ Ω/ ∧/ L1/ ,/ L2/ ∈/ Ol/ ∧/ Q1/ ,/ Q2/ ∈/ Og/ ∧/ 说明/ :/ ①/ 该/ 活动/ 迁移/ 两次/ ,/ T1/ 迁移/ 触发/ 后/ 再/ 触发/ T2/ 迁移/ ,/ 语义/ 中是/ 两次/ 迁移/ T1/ ,/ T2/ 的/ “/ 与/ ”/ 操作/ ,/ 由于/ target/ 容器/ 存在/ ,/ 说明/ 此/ 活动/ 为/ 多个/ 活动/ 的/ 目标/ 链接/ ./ 因此/ 先/ 判断/ 该/ 目标/ 活动/ 被/ 触发/ 需/ 满足条件/ 的/ 真值/ ,/ 即/ jC/ 被/ 赋值/ ,/ 迁移/ T1/ 被/ 触发/ ;/ 若/ 条件/ 为/ 真则/ 活动/ 被/ 执行/ ,/ 状态/ 再次发生/ 迁移/ ,/ T2/ 被/ 触发/ ;/ 体/ 流程/ 执行/ 过程/ 中/ 系统/ 经历/ 的/ 状态/ ;/ ②/ Pi/ ,/ Pi/ +/ 1/ ,/ Pi/ +/ 2/ ∈/ Ω/ 说明/ Pi/ 、/ Pi/ +/ 1/ 、/ Pi/ +/ 2/ 均/ 为主/ ③/ T2/ 中/ L1/ ,/ L2/ ∈/ Ol/ ∧/ Q1/ ,/ Q2/ ∈/ Og/ ∧/ (/ (/ L1/ ∧/ Q1/ )/ ∨/ (/ L2/ ∧/ Q2/ )/ )/ ∈/ Og/ 指出/ L1/ ,/ L2/ 为/ 链接/ 变量/ ,/ L1/ ,/ L2/ 链接/ 状态/ 的/ 确定/ 是/ 链接/ 发生/ 的/ 前提条件/ ,/ 当/ 这/ 两个/ 链接/ 有效/ 时/ ,/ 这些/ 变量/ 为/ 真/ ./ 于是/ ,/ 在/ 链接/ 变量/ 有效/ 的/ 前提/ 下/ ,/ 判断/ Q1/ ,/ Q2/ 的/ 真值/ ,/ 若为/ 真/ ,/ 则/ 控制流/ 转移/ 到/ 本/ 活动/ 中来/ ,/ 因此/ ,/ L1/ 与/ Q1/ 必须/ 同时/ 为/ 真/ ,/ 链接/ 才能/ 转移/ ,/ 对/ 其它/ 情况/ 类似/ ./ 显然/ ,/ (/ (/ L1/ ∧/ Q1/ )/ ∨/ (/ L2/ ∧/ Q2/ )/ )/ ∈/ Og/ ;/ ④/ T1/ 中/ cur/ (/ state/ )/ =/ Pi/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 1/ 指出/ 由于/ 给/ jC/ 触发/ 条件/ 赋值/ 并/ 判断/ ,/ 条件/ 变量/ Og/ 改变/ ,/ 系统/ 状态/ 由/ Pi/ 迁移/ 到/ 状态/ Pi/ +/ 1/ ;/ ⑤/ T2/ 中/ cur/ (/ state/ )/ =/ Pi/ +/ 1/ ∧/ next/ (/ state/ )/ =/ Pi/ +/ 2/ 指出/ 由于/ 目标/ 活动/ 执行/ 条件/ 满足/ ,/ 于是/ 活动/ 执行/ 导致/ 状态/ 迁移/ ,/ 由/ 状态/ Pi/ +/ 1/ 迁移/ 到/ 状态/ Pi/ +/ 2/ ./ 所有/ 条件/ 的/ “/ 与/ ”/ 操作/ 构成/ 了/ 单步/ 迁移/ 的/ 形式化/ 语义/ ,/ 由于/ 两步/ 迁移/ 具有/ 先后顺序/ ,/ 我们/ 用/ “/ 与/ ”/ 操作/ 将/ 其/ 联系/ 起来/ ./ 于是/ ,/ 将/ 语义/ 中/ 各个/ 元素/ 抽取/ 出/ ,/ 按照/ 迁移/ 七元/ 组/ 定义/ 将/ 它们/ 按/ 顺序/ 载入/ ,/ 得到/ 产生/ 的/ 七元/ 组/ 如下/ (/ 迁移/ 图如图/ 7/ 所示/ )/ :/ T1/ =/ (/ Pi/ ,/ ε/ ,/ ε/ ,/ (/ L1/ ∧/ Q1/ )/ ∨/ (/ L2/ ∧/ Q2/ )/ ,/ ε/ ,/ ε/ ,/ Pi/ +/ 1/ )/ ,/ T2/ =/ (/ Pi/ +/ 1/ ,/ …/ ,/ Pi/ +/ 2/ )/ ./ WS/ -/ BPEL2/ ./ 0/ 支持/ 的/ 活动/ 种类/ 繁多/ ,/ 因此/ 实际/ 的/ 建模/ 工作/ 复杂/ 且/ 繁琐/ ,/ 以上/ 只/ 给出/ 了/ 部分/ 重要/ 活动/ 语义/ 及/ 相关/ 说明/ ,/ 在/ 后续/ 研究/ 中/ 我们/ 将/ 不断/ 扩展/ 对/ 其它/ 活动/ 的/ 建模/ 方法/ ,/ 因此/ 对于/ 这些/ 活动/ ,/ 本文/ 简化/ 处理/ 如下/ :/ 〈/ assign/ 〉/ 活动/ 代表/ 变量/ 的/ 赋值/ 操作/ ,/ 〈/ exit/ 〉/ 活动/ 用于/ 立即/ 终止/ 流程/ ,/ 〈/ wait/ 〉/ 活动/ 用于/ 实现/ 流程/ 等待/ 某个/ 时间/ 点/ 的/ 到来/ ,/ 这些/ 活动/ 的/ 语义/ 简单/ ,/ 这里/ 不再/ 详述/ ;/ 〈/ throw/ 〉/ 、/ 〈/ rethrow/ 〉/ 、/ 〈/ compensate/ 〉/ 是/ 作用域/ 〈/ scope/ 〉/ 的/ 实现/ 机制/ ,/ 分别/ 用来/ 抛出/ 错误/ 和/ 补偿/ 处理/ ,/ 它们/ 用来/ 处理/ 流程/ 中/ 的/ 非/ 设计/ 性/ 失误/ 这/ 类/ 错误/ ,/ 我们/ 用/ 〈/ empty/ 〉/ 活动/ 代替/ 它们/ ,/ 从而/ 在/ 建模/ 过程/ 中/ 忽略/ 它们/ ;/ 〈/ if/ 〉/ 活动/ 用来/ 实现/ 双/ 分支/ 选择/ ,/ 可用/ 〈/ switch/ 〉/ 活动/ 替换/ 〈/ if/ 〉/ 活动/ ;/ 对于/ 〈/ validate/ 〉/ 和/ 〈/ extensionActivity/ 〉/ 活动/ ,/ 前者/ 用于/ 验证/ 存储/ 在/ 变量/ Page10/ 中/ 的/ XML/ 信息/ 的/ 有效性/ ,/ 后者/ 用于/ 对/ BPEL/ 语言/ 进行/ 扩展/ ,/ 本文/ 暂/ 不/ 考虑/ 这/ 两个/ 活动/ ./ 另外/ ,/ 〈/ repea/ -/ tUntil/ 〉/ 、/ 〈/ forEach/ 〉/ 用于/ 处理/ 循环/ ,/ 可用/ 〈/ while/ 〉/ 活动/ 代替/ ./ 〈/ while/ 〉/ 活动/ 初步/ 的/ 转化/ 过程/ 并/ 不/ 复杂/ ,/ 但是/ 我们/ 在/ 转化/ 算法/ 实现/ 和/ 测试/ 时/ 发现/ 循环/ 活动/ 往往/ 会/ 生成/ 大量/ 的/ 系统/ 状态/ ,/ 使得/ 转化/ 出/ 的/ OBDD/ 形式/ 模型/ 过大/ ,/ 导致/ 在/ 可/ 接受/ 的/ 时限/ 内/ 无法/ 得到/ 验证/ 结果/ ,/ 因此/ 严谨/ 起/ 见/ ,/ 本文/ 暂/ 不/ 讨论/ 〈/ while/ 〉/ 等/ 循环/ 活动/ ,/ 我们/ 将/ 在/ 后续/ 工作/ 中/ 深入研究/ 这些/ 活动/ 的/ 优化/ 转化/ 算法/ ./ 模型/ 检测/ 的/ 状态/ 爆炸/ 问题/ 始终/ 是/ 阻碍/ 模型/ 检测/ 技术/ 投入/ 实用/ 的/ 一大/ 瓶颈/ ,/ MCTK/ 作为/ 认知/ 模型/ 检测工具/ 也/ 不/ 例外/ ./ 虽然/ 我们/ 在/ MCTK/ 中/ 采用/ OBDD/ 实现/ 符号化/ 建模/ 和/ 验证/ 算法/ ,/ 已/ 大大减少/ 形式/ 模型/ 和/ 验证/ 所/ 需/ 的/ 内存空间/ ,/ 但是/ OBDD/ 的/ 规模/ 可能/ 会/ 因为/ OBDD/ 变量/ 的/ 增多/ 而/ 迅速/ 扩大/ ,/ 因此/ 在/ MCTK/ 输入/ 语言/ 中/ 定义/ 的/ 变量/ 要/ 尽量减少/ ./ 而且/ BPEL/ 语言/ 本身/ 的/ 复杂性/ 可能/ 令/ MCTK/ 生成/ 复杂/ 的/ 状态/ 迁移/ 关系/ ,/ 也/ 可/ 导致/ 其/ OBDD/ 表示/ 的/ 规模/ 迅速/ 增大/ ./ 因此/ ,/ 本文/ 在/ 转换/ 过程/ 中/ 忽略/ 掉/ 上述/ 活动/ 中/ 某些/ 与/ 验证/ 无关/ 的/ 属性/ ,/ 从而/ 简化/ 转化/ 过程/ ,/ 减小/ 最终/ 生成/ 的/ MCTK/ 形式/ 模型/ 的/ 规模/ ./ 此外/ ,/ 我们/ 还/ 将/ 采用/ 3.1/ 节/ 介绍/ 的/ 状态/ 命名/ 规则/ ,/ 避免/ 多/ 变量/ 标示/ 带来/ 的/ 书写/ 以及/ 理解/ 上/ 的/ 麻烦/ ,/ 同时/ 将/ 活动/ 与/ 七元/ 组/ 建立/ 映射/ 关系/ ,/ 使得/ 活动/ 的/ 执行/ 转化/ 为/ 与其/ 对应/ 的/ 七元/ 组/ 的/ 产生/ ,/ 简化/ 了/ 活动/ 执行/ 的/ 复杂性/ ,/ 使得/ 后续/ 算法/ 更好/ 把握/ 流程/ 的/ 执行/ 带来/ 的/ 状态/ 变化/ 的/ 影响/ ./ 我们/ 看到/ BPEL/ 结构化/ 活动/ 可以/ 用来/ 组织/ 基本/ 活动/ ,/ 使得/ 基本/ 活动/ 在/ 结构化/ 活动/ 的/ “/ 安排/ ”/ 下/ 按照/ 某种/ 特定/ 顺序/ 执行/ ,/ 从而/ 使得/ 各/ Web/ 服务/ 协作/ 完成/ 即定/ 任务/ ./ 前面/ 我们/ 已经/ 分析/ 了/ 基本/ 活动/ 向/ 迁移/ 七元/ 组/ 的/ 转换/ 过程/ ,/ 为了/ 实现/ 流程/ 自动化/ 验证/ 我们/ 必须/ 找到/ 一种/ 算法/ ,/ 使得/ 各/ 基本/ 活动/ 能够/ 按照/ 其/ 所在/ 结构/ 活动/ 的/ 结构/ 框架/ 下/ 按/ 正确/ 顺序/ 执行/ 产生/ 相应/ 迁移/ 七元/ 组/ ./ 因此/ ,/ 这样/ 的/ 算法/ 实际上/ 是/ 将/ 结构/ 活动/ 的/ 性质/ 用/ 算法/ 的/ 形式/ 表示/ 出来/ ,/ 期间/ 遇到/ 基本/ 活动/ 就/ 按照/ 上/ 节/ 介绍/ 的/ 映射/ 关系/ 将/ 其/ 映射/ 为/ 相应/ 七元/ 组/ ,/ 实现/ BPEL/ 流程/ 向/ 七元/ 组/ 集合/ 的/ 转化/ ./ 基于/ 这一/ 思想/ ,/ 我们/ 提出/ 将/ BPEL/ 流程/ 转化/ 为/ 迁移/ 七元/ 组/ 集合/ 的/ 算法/ ./ 3BPEL/ 语言/ 的/ 自动化/ 模型/ 检测/ 方法/ 由/ 前述/ 可以/ 看出/ ,/ 由于/ BPEL/ 语言/ 自身/ 的/ 复杂性/ ,/ 如何/ 建立/ 该/ 语言/ 到/ 某种/ 规范/ 的/ 统一/ 映射/ 以及/ 如何/ 自动/ 利用/ 模型/ 检测工具/ 对此/ 规范/ 进行/ 描述/ 是/ 实现/ 流程/ 自动化/ 验证/ 需/ 克服/ 的/ 两个/ 技术/ 难点/ ./ 由于/ BPEL/ 语言/ 与/ 模型/ 检测工具/ MCTK/ 输入/ 语言/ 之间/ 无/ 直接/ 联系/ ,/ 传统/ 工作/ 主要/ 是/ 将/ BPEL/ 语言/ 转化/ 为/ 状态/ 转换/ 图/ ,/ 之后/ 对/ 状态/ 转换/ 图/ 进行/ 描述/ ./ 根据/ 上/ 节/ 提出/ 的/ 迁移/ 七元/ 组/ 的/ 语法/ 及/ 语义/ ,/ BPEL/ 代码/ 中/ 每/ 一个/ 活动/ 的/ 执行/ 都/ 将/ 产生/ 一个/ 相应/ 的/ 七元/ 组/ ,/ 此/ 七元/ 组/ 包括/ 了/ 主体/ 交互/ 的/ 所有/ 信息/ ./ 因此/ ,/ 如何/ 产生/ 正确/ 的/ 迁移/ 七元/ 组/ 以及/ 如何/ 方便/ 地/ 利用/ 一组/ 迁移/ 七元/ 组/ 写出/ MCTK/ 代码/ ,/ 进而/ 验证/ 组合/ 服务/ ,/ 就是/ 下文/ 的/ 主要/ 内容/ ./ 3.1/ 将/ BPEL/ 模型/ 转化/ 为/ 迁移/ 七元/ 组/ (/ 1/ )/ 状态/ 命名/ 规则/ 迁移/ 七元/ 组/ 明确指出/ 了/ 状态/ 之间/ 的/ 迁移/ 关系/ ,/ 以及/ 状态/ 迁移/ 后/ 各/ 相关/ 变量值/ 的/ 变化/ ./ 因此/ ,/ 状态/ 的/ 命名/ 对于/ 迁移/ 七元/ 组/ 的/ 自动/ 生成/ 十分/ 重要/ ./ 在/ 前面/ 章节/ 我们/ 已经/ 说明/ ,/ 完全/ 用/ 变量/ 的/ 合取/ 标示/ 状态/ 对于/ 实现/ 自动化/ 检测/ 并/ 不/ 适用/ ,/ 但是/ 为了/ 实现/ 对/ 更/ 多/ 的/ 涉及/ 数据流/ 的/ 规范/ 进行/ 验证/ ,/ 本文/ 部分/ 采取/ 用/ 变量/ 的/ 合取/ 标示/ 状态/ 的/ 方法/ ,/ 但/ 与/ 传统/ 方法/ 又/ 有/ 很大/ 不同/ ,/ 具体/ 状态/ 命名/ 法则/ 如下/ :/ ①/ 对于/ 由/ 通道/ 变量/ Oe/ 值/ 的/ 改变/ 引起/ 的/ 状态/ 迁移/ ,/ 状态/ 命名/ 采用/ “/ send/ _/ 消息/ ”/ 表示/ 主体/ “/ 发送/ 了/ 某/ 信息/ ”/ 状态/ ,/ 用/ “/ get/ _/ 消息/ ”/ 表示/ 主体/ “/ 接收/ 了/ 某/ 信息/ ”/ 状态/ ,/ 例如/ 主体/ 的/ 初始状态/ 为/ sleep/ ,/ 当其/ 发送/ 了/ 信息/ Msg/ 以后/ ,/ 状态/ 从/ sleep/ 迁移/ 到/ 了/ send/ _/ Msg/ ,/ 表示/ 状态/ 从/ “/ 睡眠/ ”/ 迁移/ 到/ “/ 发送/ 了/ Msg/ ”/ 状态/ ./ ②/ 对于/ 由/ 链接/ 变量/ Ol/ 、/ 条件/ 变量/ Og/ 值/ 的/ 改变/ 引起/ 的/ 状态/ 迁移/ ,/ 状态/ 命名/ 采用/ “/ 源/ 状态/ ∧/ Ol/ ”/ 或者/ “/ 源/ 状态/ ∧/ Og/ ”/ 原则/ ,/ “/ ∧/ ”/ 号/ 后面/ 的/ 变量/ 是/ 在/ 源/ 状态/ 中/ ,/ 其值/ 在/ 活动/ 发生/ 后/ 有/ 可能/ 发生变化/ 的/ 那些/ Ol/ 或者/ Og/ 类型/ 的/ 变量/ ./ 例如/ :/ 主体/ 在/ get/ _/ request/ 状态/ 下/ ,/ 若/ 活动/ 执行/ 将/ 对/ 该/ 状态/ 下/ 的/ 条件/ 变量/ tC/ 进行/ 赋值/ 操作/ ,/ 那么/ 执行/ 活动/ 后/ 系统/ 状态/ 就/ 由/ get/ _/ request/ 迁移/ 到/ 状态/ get/ _/ request/ ∧/ tC/ ./ 若/ 主体/ 在/ get/ _/ request/ 状态/ 下/ ,/ 活动/ 执行/ 将/ 对/ 其中/ 条件/ 变量/ tC1/ 或者/ tC2/ 进行/ 赋值/ 操作/ ,/ 那么/ 活动/ 执行/ 后/ 系统/ 状态/ 就/ 由/ get/ _/ request/ 状态/ 迁移/ 到/ get/ _/ request/ ∧/ (/ tC1/ ∨/ tC2/ )/ 状态/ ./ (/ 2/ )/ 转换/ 算法/ 〈/ sequence/ 〉/ 和/ 〈/ flow/ 〉/ 是/ BPEL/ 语言/ 中/ 最/ 基本/ 的/ 两种/ 控制结构/ ,/ 前者/ 用来/ 处理/ 顺序/ 流程/ ,/ 后者/ 用来/ 处理/ 并发/ 流程/ ./ 对于/ 顺序/ 流程/ ,/ 活动/ 按照/ 出现/ 的/ 先后/ 顺/ Page11/ 序/ 执行/ ,/ 〈/ sequence/ 〉/ 内/ 可以/ 嵌套/ 基本/ 活动/ 与/ 结构/ 活动/ 〈/ switch/ 〉/ 或者/ 〈/ pick/ 〉/ 等/ ,/ 此时/ ,/ 如果/ 将/ 该/ 流程/ 用/ 状态/ 转换/ 图/ 表示/ 出来/ ,/ 则/ 该/ 图/ 是/ 一个多/ 分支/ 的/ 状态/ 转换/ 图/ ,/ 可以/ 用/ MCTK/ 这样/ 验证/ 分支/ 时态/ 逻辑/ 的/ 模型/ 检测工具/ 对/ 其/ 进行/ 刻画/ ,/ 进而/ 验证/ ./ 对于/ 嵌套/ 在/ 〈/ sequence/ 〉/ 中/ 的/ 基本/ 活动/ ,/ 我们/ 可以/ 按照/ 顺序/ 的/ 方式/ 产生/ 与/ 各个/ 活动/ 对应/ 的/ 迁移/ 七元/ 组/ ,/ 然后/ 用/ MCTK/ 对/ 产生/ 的/ 迁移/ 七元/ 组/ 集合/ 进行/ 描述/ ./ 下面/ 给出/ 〈/ sequence/ 〉/ 结构/ 框架/ 下/ 的/ 业务流程/ 转化/ 为/ 迁移/ 七元/ 组/ 的/ 算法/ ,/ 由于/ 在/ 设计/ 七元/ 组时/ 也/ 同时/ 考虑/ 到/ 了/ MCTK/ 输入/ 语言/ 的/ 特点/ ,/ 因此/ 通过/ 该/ 算法/ 生成/ 的/ 七元/ 组/ 可以/ 用来/ 进一步/ 自动/ 生成/ MCTK/ 的/ 输入/ 代码/ ,/ 使得/ 流程/ 验证/ 过程/ 的/ 自动化/ 程度/ 大大提高/ ./ 算法/ B2T/ ./ 〈/ sequence/ 〉/ →/ 迁移/ 七元/ 组/ ./ B2T/ (/ ACT/ (/ S/ )/ ,/ STAT/ (/ S/ )/ )/ 输入/ :/ 描述/ Web/ 服务/ 的/ BPEL/ 源码/ 输出/ :/ 迁移/ 七元/ 组/ 集合/ 1/ ./ InitAct/ / Top/ =/ 〈/ sequence/ 〉/ ;/ InitStat/ / Top/ =/ sleep/ ;/ 2/ ./ scanfromcurrentactivity/ 〈/ …/ Σ/ …/ 〉/ tothelastactivity/ ;/ 3/ ./ foreachelement/ 〈/ …/ Σ/ …/ 〉/ do4/ ./ {/ // / 将/ 活动/ 及/ 活动/ 执行/ 后/ 的/ 状态/ 入栈/ / // 5/ ./ Act/ / Top/ ++&/ Act/ / Push/ 〈/ …/ Σ/ …/ 〉/ ;/ 6/ ./ ∝/ 〈/ …/ Σ/ …/ 〉/ ;/ 7/ ./ Stat/ / Top/ ++/ Stat/ / Push/ (/ next/ (/ state/ )/ )/ ;/ 8/ ./ cur/ (/ state/ )/ =/ next/ (/ state/ )/ ;/ 9/ ./ If/ (/ 〈/ …/ // Σ/ …/ 〉/ ≡/ 〈/ // case/ 〉/ OR/ 〈/ otherwise/ 〉/ )/ 10/ ./ {/ // / 活动/ 栈及/ 状态/ 栈/ 同步/ 弹栈/ 直到/ switch/ / // 11/ ./ do12/ ./ {/ 13/ ./ Act/ / PopAct/ / Top/ -/ -/ ;/ 14/ ./ Stat/ / PopStat/ / Top/ -/ -/ ;/ 15/ ./ }/ while/ (/ Act/ / Top/ !/ ≡/ 〈/ case/ 〉/ OR/ 〈/ switch/ 〉/ )/ ;/ 16/ ./ cur/ (/ state/ )/ =/ Stat/ / Top/ ;/ 17/ ./ }/ 18/ ./ If/ (/ 〈/ …/ // Σ/ …/ 〉/ ≡/ 〈/ // onmessage/ 〉/ )/ 19/ ./ {/ // / 活动/ 栈及/ 状态/ 栈/ 同步/ 弹栈/ 直到/ pick/ / // 20/ ./ do21/ ./ {/ 22/ ./ Act/ / PopAct/ / Top/ -/ -/ ;/ 23/ ./ Stat/ / PopStat/ / Top/ -/ -/ ;/ 24/ ./ }/ while/ (/ Act/ / Top/ !/ ≡/ 〈/ pick/ 〉/ )/ ;/ 25/ ./ cur/ (/ state/ )/ =/ Stat/ / Top/ ;/ 26/ ./ }/ 27/ ./ }/ 算法/ 说明/ :/ “/ ≡/ ”/ 符号/ 代表/ 纯/ 文本/ 的/ 匹配/ ,/ 当/ “/ ≡/ ”/ 号/ 左右/ 的/ 文本/ 内容/ 完全/ 一样/ 时/ ,/ 该/ 关系/ 成立/ ./ 算法/ 设置/ 两个/ 栈/ 用以/ 实现/ 对/ 结构/ 活动/ 的/ 结构/ 框架/ 的/ 描述/ ,/ 一个/ 状态/ 栈/ Stat/ 用来/ 存放/ 主体/ 在/ 执行/ 过程/ 中/ 所/ 经历/ 的/ 所有/ 状态/ ;/ 一个/ 活动/ 栈/ Act/ 用来/ 存放/ 流程/ 执行/ 过程/ 中/ 所/ 经历/ 的/ 所有/ 活动/ ./ 我们/ 用/ 这/ 两个/ 栈来/ 处理/ 流程/ 中/ 活动/ 与/ 状态/ 之间/ 的/ 关系/ ./ 〈/ …/ Σ/ …/ 〉/ 表示/ 任一/ 活动/ 的/ 开始/ 标记/ ,/ 〈/ …/ // Σ/ …/ 〉/ 表示/ 活动/ 的/ 结束/ 标记/ ,/ 例如/ 流程/ 遇见/ 〈/ receive/ 〉/ 活动/ 则/ 表示/ 该/ 活动/ 准备/ 开始/ 执行/ ,/ 遇见/ 〈/ // receive/ 〉/ 则/ 表示/ 该/ 活动/ 执行/ 完毕/ ./ 需要/ 说明/ 的/ 是/ 〈/ …/ // Σ/ …/ 〉/ 不/ 进栈/ ,/ 因此/ 扫描/ 时/ 跳/ 过/ 〈/ …/ // Σ/ …/ 〉/ ./ 我们/ 用/ ∝/ 表示/ “/ 执行/ 活动/ ”/ ,/ 所谓/ 执行/ 就是/ 流程/ 执行/ 该/ 活动/ 指定/ 的/ 操作/ ,/ 因此/ 在/ 本/ 算法/ 中/ ∝/ 〈/ …/ Σ/ …/ 〉/ 就是/ 产生/ 与/ 活动/ 相对/ 应/ 的/ 迁移/ 七元/ 组/ ./ cur/ (/ state/ )/ 用来/ 存放/ 下/ 一个/ 即将/ 执行/ 的/ 活动/ 的/ 初始状态/ ,/ 显然/ 初始状态/ 的/ 确定/ 非常/ 重要/ ,/ 对于/ 顺序/ 执行/ 的/ 活动/ A/ 、/ B/ ,/ B/ 活动/ 的/ 初始状态/ 即为/ A/ 活动/ 的/ 终结状态/ ./ 而/ 对于/ 带有/ 分支/ 的/ 活动/ ,/ 例如/ 〈/ switch/ 〉/ 活动/ ,/ 假设/ 流程/ 刚/ 进入/ 〈/ switch/ 〉/ 活动/ 时/ 的/ 状态/ 为/ state0/ ,/ 则/ 该/ 活动/ 中/ 任一/ 分支/ 的/ 初始状态/ 皆/ 为/ state0/ ,/ 如图/ 4/ 所示/ :/ 设/ Pi/ =/ state0/ ,/ Pi/ +/ 1/ =/ state1/ ,/ Pi/ +/ 2/ =/ state2/ ,/ …/ 则/ 流程/ 执行/ 完第/ 1/ 个/ 〈/ case/ 〉/ 包含/ 的/ 活动/ 后/ 状态/ 由/ state0/ 迁移/ 到/ state1/ ,/ 执行/ 完第/ 2/ 个/ 〈/ case/ 〉/ 包含/ 的/ 活动/ 后/ 状态/ 由/ state0/ 迁移/ 到/ state2/ ,/ …/ ./ 起初/ ,/ 活动/ 栈/ 被/ 初始化/ 为/ 〈/ sequence/ 〉/ ,/ 状态/ 栈/ 与/ 当前/ 状态/ cur/ (/ state/ )/ 都/ 初始化/ 为/ sleep/ ./ 算法/ 步/ 2/ 指明/ 从/ 当前/ 活动/ 开始/ 向/ 后/ 执行/ ,/ 由于/ 是/ 顺序/ 结构/ ,/ 对于/ 已经/ 执行/ 完毕/ 的/ 活动/ ,/ 流程/ 不/ 可能/ 返回/ 执行/ ,/ 只能/ 继续/ 向下/ 执行/ 直到/ 〈/ sequence/ 〉/ 结构/ 中/ 的/ 最后/ 一个/ 活动/ 为止/ ;/ 算法/ 步/ 3/ 开始/ 循环/ ,/ 从/ 〈/ receive/ 〉/ 活动/ 开始/ (/ 〈/ receive/ 〉/ 用来/ 接收/ 外界/ 信息/ 使/ 流程/ 开始/ 执行/ ,/ 一般/ 它/ 都/ 是/ 流程/ 的/ 第/ 1/ 个/ 活动/ )/ 向下/ 扫描/ ;/ 算法/ 步/ 5/ ~/ 8/ 将/ 扫描/ 到/ 的/ 基本/ 活动/ 进栈/ ,/ 注意/ 这里/ 说/ 的/ 是/ 活动/ 的/ 名称/ ;/ 步/ 7/ 将/ 执行/ 活动/ 完毕/ 产生/ 的/ 末/ 状态/ next/ (/ state/ )/ 进/ 状态/ 栈/ ,/ 之所以/ 保存/ 每个/ 活动/ 执行/ 完毕/ 的/ 末/ 状态/ 原因/ 有/ 两点/ :/ 其一/ ,/ 该/ 状态/ 是/ 下/ 一个/ 活动/ 的/ 初始状态/ ;/ 其二/ ,/ 若下/ 一/ 活动/ 为/ 带有/ 分支/ 的/ 结构/ 活动/ ,/ 则/ 这些/ 分支/ 的/ 初始状态/ 皆/ 为此/ 进栈/ 状态/ ./ 需要/ 注意/ 的/ 是/ ,/ 本/ 算法/ 自始至终/ 要/ 保证/ 活动/ 栈/ 与/ 状态/ 栈/ 的/ 同步/ 进栈/ ,/ 也/ 就是/ 这/ 两个/ 栈/ 的/ 栈顶/ 指针/ 要/ 保持/ 同步/ 增加/ 或者/ 同步/ 减少/ ./ 这样/ 做/ 是/ 为了/ 保证/ 两个/ 栈/ 的/ 栈顶/ 元素/ 具有/ 高度/ 相关性/ ,/ 即/ 状态/ 栈/ 的/ 栈顶/ 保存/ 的/ 是/ 活动/ 栈栈/ 顶/ 活动/ 执行/ 完毕/ 的/ 末/ 状态/ ;/ 算法/ 步/ 8/ 将/ 进栈/ 状态/ 赋值/ 给/ cur/ (/ state/ )/ ,/ 说明/ 下/ 一/ 活动/ 的/ 初始状态/ ,/ 该/ 算法/ 采用/ 双栈/ 配合/ 使用/ 方法/ 来/ 描述/ 结构/ 活动/ 的/ 相关/ 结构/ 性质/ ,/ 但/ 具体/ 的/ 活动/ 执行/ 时/ 的/ 状态/ 衔接/ 点/ 还/ 需要/ 额外/ 变量/ 保存/ ,/ 这/ 将/ 在/ 实例/ 中/ 看到/ ;/ 步/ 9/ ~/ 17/ 说明/ 若/ 扫描/ 到/ 〈/ otherwise/ 〉/ 或者/ 〈/ case/ 〉/ ,/ 则/ Page12/ 表明/ 〈/ switch/ 〉/ 活动/ 已经/ 进栈/ ,/ 此时/ 需要/ 找到/ 流程/ 刚/ 进入/ 〈/ switch/ 〉/ 时/ 的/ 状态/ ,/ 因为/ 无论是/ 〈/ otherwise/ 〉/ 还是/ 〈/ case/ 〉/ 代表/ 的/ 都/ 是/ 〈/ switch/ 〉/ 中/ 的/ 分支/ ,/ 这些/ 分支/ 拥有/ 同一个/ 迁移/ 原/ 状态/ ./ 因此/ ,/ 将/ 状态/ 栈/ 与/ 活动/ 栈/ 同步/ 退栈/ ,/ 当/ 活动/ 栈栈/ 顶/ 指针/ 退栈/ 到/ Act/ / Top/ ≡/ 〈/ switch/ 〉/ 时/ ,/ 说明/ 状态/ 栈栈/ 顶/ 指针/ 指向/ 的/ 即/ 为/ 流程/ 刚/ 进入/ 〈/ switch/ 〉/ 时/ 的/ 状态/ ./ 之后/ 将/ Stat/ / Top/ 所指/ 状态/ 赋给/ cur/ (/ state/ )/ ,/ 用做/ 分支/ 活动/ 的/ 原/ 状态/ ;/ 步/ 18/ ~/ 25/ 用来/ 处理/ 〈/ pick/ 〉/ 活动/ ,/ 其/ 原理/ 与/ 〈/ switch/ 〉/ 相同/ ,/ 这里/ 不再/ 赘述/ ./ 由于/ 算法/ 需要/ 从上到下/ 扫描/ 所有/ 活动/ ,/ 当/ 活动/ 数为/ n/ 时/ ,/ 算法/ 的/ 时间/ 复杂度/ 为/ O/ (/ n/ )/ ./ 图/ 8/ 〈/ flow/ 〉/ 抽象/ 流程/ 示意图/ 第/ 2.2/ 节/ 给出/ 了/ flow/ -/ source/ -/ activity/ 和/ flow/ -/ target/ -/ activity/ 迁移/ 语义/ ,/ 在/ flow/ -/ source/ -/ activity/ 中/ ,/ activity/ 的/ 执行/ 导致/ T1/ 迁移/ 的/ 触发/ ,/ 执行/ 完毕/ 后/ 给/ 迁移/ 条件/ transitionCondition/ 赋值/ ,/ 条件/ 变量/ Og/ 改变/ ,/ T2/ 迁移/ 触发/ ,/ 系统/ 状态/ 再次/ 发生变化/ ./ 因此/ T2/ 迁移/ 的/ 末/ 状态/ 即/ 表示/ transitionCondition/ 被/ 赋值/ 后/ 的/ 状态/ ;/ 同理/ ,/ 在/ flow/ -/ target/ -/ activity/ 中/ ,/ 首先/ 给/ joinCondition/ 赋值/ ,/ Og/ 改变/ ,/ 导致/ T1/ 触发/ ,/ 状态/ 迁移/ ,/ 之后/ 执行/ 相应/ 活动/ activity/ ,/ T2/ 触发/ ,/ 状态/ 再次发生/ 改变/ ./ B2T/ 算法/ 给出/ 了/ 〈/ sequence/ 〉/ 结构/ 框架/ 下/ BPEL/ 流程/ 向/ 迁移/ 七元/ 组/ 的/ 转换方法/ ,/ 下面/ 我们/ 基于/ 2.2/ 节/ 给出/ 的/ 活动/ 语义/ ,/ 提出/ 将/ 〈/ flow/ 〉/ 转化/ 为/ 迁移/ 七元/ 组/ 的/ 转换/ 算法/ F2T/ ./ 为此/ 首先/ 提出/ 活动/ 图/ 的/ 概念/ ,/ 所谓/ 活动/ 图即/ 是/ 由/ 活动/ 作为/ 顶点/ ,/ 迁移/ 作为/ 边/ 的/ 有向图/ ,/ 对于/ 迁移/ L/ ,/ 若/ 其/ 迁移/ 源/ 活动/ 为/ A/ ,/ 迁移/ 目标/ 活动/ 为/ B/ ,/ 则/ 用/ A/ →/ B/ 代表/ 流程/ 执行/ 完/ 活动/ A/ 转到/ 活动/ B/ 执行/ ./ 我们/ 将/ 研究/ 对象/ 简记/ 为/ Act/ 〈/ flow/ 〉/ ,/ Act/ 〈/ flow/ 〉/ 本身/ 是/ 简单/ 的/ 〈/ flow/ 〉/ 活动/ ,/ 所谓/ 简单/ 是/ 指其/ 内部/ 不再/ 嵌套/ 〈/ flow/ 〉/ ./ 我们/ 用/ T1/ 、/ T2/ 、/ T3/ 、/ …/ 表示/ 顺序/ 执行/ 的/ 迁移/ 序列/ ,/ 其中/ T2/ 的/ 初/ 状态/ 为/ T1/ 的/ 末/ 状态/ ,/ T3/ 的/ 初/ 状态/ 为/ T2/ 的/ 末/ 状态/ …/ ./ 〈/ flow/ 〉/ 活动/ 用以/ 处理/ 并发程序/ 的/ 执行/ ,/ 该/ 活动/ 根据/ 迁移/ 条件/ 的/ 不同/ ,/ 业务流程/ 将/ 选择/ 不同/ 的/ 分支/ 路径/ 执行/ ,/ 被/ 执行/ 的/ 活动/ 又/ 可以/ 按照/ 迁移/ 条件/ 选择/ 下/ 一个/ 需要/ 执行/ 的/ 活动/ …/ ./ 如图/ 8/ 所示/ ,/ 第一条/ 链路/ 中/ 链接/ 变量/ L1/ 的/ 源/ 迁移/ 为/ 活动/ Act1/ ,/ 目标/ 迁移/ 为/ 活动/ Act2/ ,/ L2/ 的/ 源/ 迁移/ 为/ Act2/ ,/ 目标/ 迁移/ 为/ Act3/ ,/ …/ ,/ Lk/ 的/ 源/ 迁移/ 为/ Actk/ ,/ 目标/ 迁移/ 为/ Actk/ +/ 1/ ./ 而/ 在/ 〈/ flow/ 〉/ 结构/ 中/ ,/ 一个/ 活动/ 往往/ 是/ 多个/ 目标/ 活动/ 的/ 源/ 迁移/ ,/ 例如/ 链接/ 变量/ L1/ 的/ 源/ 迁移/ 依旧/ 为/ Act1/ ,/ 但/ 目标/ 迁移/ 活动/ 变为/ Act2/ ,/ 链接/ 变量/ L2/ 的/ 源/ 迁移/ 活动/ 为/ Act2/ ,/ 目标/ 活动/ 却/ 为/ Act3/ …/ ./ 算法/ F2T/ ./ 〈/ flow/ 〉/ →/ 迁移/ 七元/ 组/ ./ 输入/ :/ 简单/ 〈/ flow/ 〉/ 结构/ 下/ 的/ 组合/ 业务流程/ 输出/ :/ 该/ 组合/ 流程/ 的/ 迁移/ 七元/ 组/ 集合/ // / phase1/ :/ 构建/ 活动/ 图/ / // 1/ ./ 查找/ BPEL/ 源码/ 中/ 〈/ linkname/ 〉/ 属性/ 值/ ,/ 找到/ 所有/ 2/ ./ foreachLink3/ ./ {/ 4/ ./ 找到/ Linki/ 链接/ 的/ 源/ 活动/ 和/ 目标/ 活动/ ,/ 放入/ 5/ ./ 建立/ 单步/ 链接/ 图/ :/ Linki/ / sourceActLink/ →/ / / / iLinki/ / 6/ ./ If/ (/ Linki/ / destAct/ =/ =/ Linkj/ / sourceAct/ )/ 7/ ./ 建立/ 单步/ 链接/ 图/ :/ Linki/ / destActLink/ →/ / / / jLinkj/ / 8/ ./ }/ // / phase2/ :/ 创建/ 状态/ 转换/ 图/ / // 9/ ./ 流程/ 进入/ 〈/ flow/ 〉/ ,/ 保存/ 此时/ 状态/ 10/ ./ 查找/ 无入/ 链接/ 的/ 活动/ ,/ 从/ 这些/ 活动/ 开始/ :/ 11/ ./ {/ 12/ ./ 对于/ 活动/ 图中/ 具有/ Linki/ / sourceActLink/ →/ / / / i13/ ./ {/ 14/ ./ 根据/ flow/ -/ source/ -/ activity/ 语义/ ,/ 执行/ Linki/ 的/ Page1315/ ./ 根据/ flow/ -/ target/ -/ activity/ 语义/ ,/ 以步/ 14/ 末/ 状态/ 16/ ./ If/ (/ Linki/ / destAct/ =/ =/ Linkj/ / sourceAct/ )/ 17/ ./ {/ 18/ ./ 根据/ flow/ -/ source/ -/ activity/ 语义/ ,/ 执行/ Linkj19/ ./ 根据/ flow/ -/ target/ -/ activity/ 语义/ ,/ 以步/ 18/ 末/ 20/ ./ }/ 21/ ./ }/ 22/ ./ }/ 直到/ 没有/ 新/ 的/ 迁移/ 生成/ ;/ 算法/ phase1/ 阶段/ 说明/ 了/ 活动/ 图/ 的/ 产生/ 过程/ ,/ phase2/ 根据/ 2.2/ 节/ 给出/ 的/ 活动/ 语义/ ,/ 执行/ 活动/ 图/ 的/ 每个/ 顶点/ 活动/ ,/ 并/ 转化/ 为/ 相应/ 迁移/ 七元/ 组/ ./ 步/ 10/ ~/ 15/ 说明/ 若该/ 活动/ 是/ 某/ 迁移/ 源/ 活动/ ,/ 则/ 先/ 执行/ 活动/ ,/ 再/ 给/ 条件/ 变量/ transitionCondition/ 赋值/ ;/ 若该/ 活动/ 是/ 某/ 迁移/ 目标/ 活动/ ,/ 则/ 先/ 给/ 条件/ 变量/ joinCondition/ 赋值/ ,/ 再/ 执行/ 活动/ ;/ 步/ 16/ ~/ 21/ 说明/ 若此/ 活动/ 即/ 是/ 某/ 迁移/ 的/ 目标/ 活动/ ,/ 又/ 是/ 另/ 一/ 迁移/ 的/ 源/ 活动/ ,/ 则/ 当/ 其/ 作为/ 目标/ 活动/ 执行/ 完毕/ 后/ ,/ 给/ 下/ 一/ 迁移/ 的/ 链接/ 条件/ transitionCondition/ 赋值/ ,/ 之后/ 执行/ 下/ 一/ 迁移/ 的/ 目标/ 活动/ ./ 算法/ 的/ 研究/ 对象/ 是/ 针对/ 简单/ 〈/ flow/ 〉/ 结构/ 下/ 的/ 组合/ 业务流程/ ,/ 很多/ 时候/ 活动/ 之间/ 是/ 相互/ 嵌套/ 的/ ./ 例如/ :/ 〈/ flow/ 〉/ 活动/ 内/ 可以/ 嵌套/ 〈/ sequence/ 〉/ ,/ 〈/ sequence/ 〉/ 也/ 可以/ 嵌套/ 〈/ flow/ 〉/ ,/ 同时/ 〈/ flow/ 〉/ 可以/ 嵌套/ 〈/ flow/ 〉/ ,/ 对于/ 这些/ 情况/ ,/ 其/ 控制/ 流程/ 有时候/ 是/ 非常复杂/ 的/ ,/ 控制流/ 常常/ 在/ 多个/ Web/ 服务/ 之间/ 来回/ 调用/ ,/ 但/ 由于/ 流程/ 进入/ 〈/ flow/ 〉/ 活动/ 后/ ,/ 将/ 返回/ 〈/ flow/ 〉/ 内/ 活动/ 执行/ 的/ 统一/ 结果/ ,/ 因此/ 可以/ 将/ 〈/ flow/ 〉/ 看做/ 一个/ 具有/ 双向/ 交互/ 性质/ 的/ 基本/ 活动/ ,/ 于是/ :/ 对于/ 〈/ sequence/ 〉/ 嵌套/ 〈/ flow/ 〉/ 情况/ 可以/ 看作/ 〈/ sequence/ 〉/ 中/ 包含/ 了/ 一个/ 特殊/ 的/ 基本/ 活动/ ,/ 活动/ 按照/ 顺序/ 流程/ 执行/ ,/ 当/ 执行/ 到/ 〈/ flow/ 〉/ 时/ 再/ 进行/ 相应/ 处理/ 即可/ ,/ 而/ 〈/ flow/ 〉/ 的/ 输出/ 状态/ 则/ 是/ 其/ 在/ 〈/ sequence/ 〉/ 结构/ 中下/ 一/ 活动/ 的/ 输入/ 状态/ ./ 该/ 结构/ 如图/ 9/ 所示/ ./ 对于/ 〈/ flow/ 〉/ 中/ 嵌套/ 〈/ sequence/ 〉/ 情况/ ,/ 由于/ 〈/ flow/ 〉/ 根据/ 不同/ 的/ 迁移/ 条件/ 选择/ 不同/ 的/ 分支/ 执行/ ,/ 因此/ ,/ 可以/ 将/ 每个/ 分支/ 看作/ 〈/ sequence/ 〉/ 流程/ ,/ 各/ 〈/ sequence/ 〉/ 流程/ 具有/ 相同/ 的/ 初始状态/ 即/ 为/ 流程/ 刚/ 进入/ 〈/ flow/ 〉/ 时/ 的/ 状态/ ./ 可以/ 对于/ 每个/ 分支/ 调用/ B2T/ 算法/ 产生/ 状态/ 迁移/ 关系/ ,/ 最后/ 验证/ ./ 该/ 结构/ 如图/ 10/ 所示/ ./ 对于/ 〈/ flow/ 〉/ 中/ 嵌套/ 〈/ flow/ 〉/ 情况/ ,/ 我们/ 对/ 最/ 内层/ 〈/ flow/ 〉/ 调用/ F2T/ 算法/ ,/ 生成/ 相应/ 状态/ 转换/ 图/ ,/ 之后/ 将/ 内层/ 〈/ flow/ 〉/ 看作/ 基本/ 活动/ ,/ 对/ 外层/ 〈/ flow/ 〉/ 递归/ 调用/ F2T/ 算法/ ,/ 生成/ 更大/ 范围/ 的/ 状态/ 转换/ 图/ …/ ./ 该/ 结构/ 如图/ 11/ 所示/ ./ Page14/ 通过/ F2T/ 算法/ ,/ 我们/ 将/ 具有/ 〈/ flow/ 〉/ 结构/ 的/ BPEL/ 流程/ 转化/ 为了/ 迁移/ 七元/ 组/ 集合/ ,/ 实际上/ 迁移/ 七元/ 组/ 的/ 提出/ 就是/ 为了/ 描述/ 状态/ 转换/ 关系/ ,/ 因此/ ,/ 该/ 算法/ 的/ 最终/ 目的/ 就是/ 将/ 流程/ 转化/ 为/ 状态/ 转换/ 图/ ,/ 这是/ 进行/ 形式化/ 验证/ 的/ 步/ 1/ ,/ 也/ 是/ 关键/ 一步/ ,/ 能否/ 自动/ 生成/ 状态/ 转换/ 图是/ 关系/ 到/ 能否/ 实现/ BPEL/ 流程/ 自动化/ 验证/ 的/ 核心/ 环节/ ,/ 有/ 了/ 状态/ 转换/ 图/ 更/ 能/ 方便/ 地/ 利用/ 模型/ 检测工具/ 对/ 流程/ 进行/ 刻画/ ./ F2T/ 算法/ 相比/ B2T/ 算法/ ,/ 加入/ 了/ 对/ 数据流/ 的/ 支持/ ,/ 使得/ 对/ 流程/ 的/ 建模/ 不仅仅/ 是/ 考虑/ 到/ 控制流/ 的/ 转移/ 关系/ ,/ 更/ 涉及/ 到/ 数据/ 变量/ 的/ 变化/ 情况/ ,/ 增加/ 了/ 状态/ 空间/ 中/ 的/ 状态/ 数量/ ,/ 可验证/ 的/ 规范/ 数量/ 也/ 大大增加/ ,/ 更能/ 确保/ 软件/ 的/ 正确性/ ./ B2T/ 与/ F2T/ 算法/ 主要/ 用来/ 生成/ 迁移/ 七元/ 组/ ,/ 这是/ 工作/ 的/ 第/ 1/ 步/ ,/ 而/ 我们/ 的/ 最终/ 目的/ 是/ 验证/ 组合/ 服务/ 流程/ ,/ 因此/ ,/ 下面/ 还/ 必须/ 用/ 合适/ 的/ 模型/ 检测工具/ 对/ 这些/ 转换/ 而来/ 的/ 七元/ 组/ 进行/ 描述/ ./ 本文/ 采用/ 自主/ 开发/ 的/ 多/ 主体/ 系统/ 模型/ 检测工具/ MCTK/ 作为/ 底层/ 验证/ 平台/ ./ 3.2/ MCTK/ 与/ 主体/ 声明/ 通过/ 上/ 节/ 算法/ 得到/ 的/ 迁移/ 七元/ 组/ 集合/ 必须/ 自动/ 转化/ 为/ 多/ 主体/ 系统/ 模型/ 检测工具/ MCTK/ 的/ 输入/ 语言/ ,/ 才能/ 实现/ 对/ 组合/ 业务流程/ 的/ 自动化/ 模型/ 检测/ ./ 因此/ ,/ 本/ 节/ 简要/ 介绍/ MCTK/ ,/ 具体/ 理论/ 和/ 系统/ 开发方法/ 请/ 参考文献/ [/ 11/ ,/ 13/ ]/ ./ MCTK/ 是/ 我们/ 开发/ 的/ 多/ 主体/ 系统/ 符号化/ 模型/ 检测工具/ ,/ 在/ Linux/ 环境/ 下用/ C语言/ 在/ 经典/ 模型/ 检测工具/ NuSMV2/ ./ 1.2/ 基础/ 上/ 扩展/ 开发/ 而/ 来/ ,/ 采用/ FabioSomenzi/ 的/ CUDDOBDD/ 软件包/ 开发/ MCTK/ 的/ 符号化/ 模型/ 检测/ 算法/ ./ MCTK/ 的/ 输入/ 语言/ 是/ 我们/ 提出/ 的/ 多/ 主体/ 有限/ 状态机/ 的/ 符号化/ 描述/ ,/ 所/ 刻画/ 的/ 多/ 主体/ 系统/ 由/ 一个/ 环境/ 和/ 多个/ 主体/ 组成/ ,/ 主体/ 间/ 可/ 进行/ 交互/ ./ 每一/ 主体/ 可以/ 观察/ 环境/ 的/ 部分/ 或/ 全部/ ,/ 不同/ 的/ 主体/ 对/ 环境/ 的/ 观察/ 可以/ 重叠/ ,/ 即/ 它们/ 可以/ 同时/ 观察/ 环境/ 中/ 的/ 同/ 一部分/ ./ 目前/ MCTK/ 支持/ 的/ 时态/ 认知/ 逻辑/ ECKLn/ 是/ Halpern/ 和/ Vardi/ 提出/ 的/ 时态/ 知识/ 逻辑/ CKLn/ [/ 19/ ]/ 的/ 一种/ 扩展/ ,/ ECKLn/ 的/ 语法/ 定义/ 如下/ :/ f/ ∷/ =/ true/ |/ p/ |/ / f/ |/ f/ ∧/ f/ |/ Xf/ |/ fUf/ |/ Ef/ |/ Kif/ |/ C/ Γ/ f/ ./ 显然/ ,/ ECKLn/ 语言/ 是/ 在/ 线性/ 时态/ 逻辑/ LTL/ 语言/ 中/ 扩展/ 路径/ 量词/ E/ (/ 存在/ 路径/ )/ 、/ 知识/ 算子/ Ki/ (/ 对于/ 每个/ 智能/ 体/ i/ )/ 以及/ 公共/ 知识/ 算子/ C/ Γ/ (/ 对于/ 一组/ 智能/ 体/ Γ/ )/ 得到/ 的/ ,/ 因此/ ECKLn/ 的/ 时态/ 部分/ 支持/ 计算/ 树/ 逻辑/ CTL/ / ./ 我们/ 已/ 在/ 引言/ 中/ 通过/ 一个/ 时态/ 认知/ 规范/ 展示/ 其/ 含义/ ./ 篇幅/ 所/ 限/ ,/ 相关/ 形式/ 模型/ 和/ 语义/ 请/ 参考文献/ [/ 11/ ,/ 13/ ]/ ./ MCTK/ 输入/ 语言/ 是/ 在/ 时态/ 模型/ 检测工具/ NuSMV2/ ./ 1.2/ 输入/ 语言/ 上/ 扩展/ 定义/ 的/ ,/ 因此/ MCTK/ 利用/ main/ (/ )/ 模块/ 定义/ 环境变量/ 和/ 行为/ ,/ 并/ 利用/ MODULE/ 定义/ 主体/ 的/ 行为/ ,/ 支持/ 每一/ 主体/ 的/ 可/ 观察/ 变量/ 集合/ 的/ 定义/ 和/ 声明/ ./ 值得一提的是/ MCTK/ 不必/ 明确/ 地/ 表示/ 主体/ 的/ 行为/ ,/ 仅/ 需/ 定义/ 系统/ 状态/ 迁移/ 关系/ 即可/ ,/ 这一/ 建模/ 方法/ 即可/ 缩减/ 状态/ 空间/ ,/ 又/ 有利于/ 灵活/ 定义/ 环境/ 和/ 主体/ 的/ 行为/ 所/ 导致/ 的/ 状态/ 迁移/ ./ (/ 1/ )/ MCTK/ 的/ 输入/ 语言/ MCTK/ 的/ 输入/ 语言/ 是/ 在/ NuSMV/ 基础/ 上/ 扩展/ 而/ 来/ ,/ 可以/ 参考/ NuSMV/ 手册/ 来/ 查阅/ 其余/ 相关/ 细节/ ,/ 下面/ 给出/ MCTK/ 输入/ 语言/ 的/ 语法结构/ :/ MCTK/ _/ program/ ∷/ =/ EnvDef/ ;/ ;/ 环境/ 定义/ AgentDefList/ ;/ ;/ 主体/ 模块/ 定义/ EnvDef/ ∷/ =/ "/ MODULE/ "/ "/ main/ "/ "/ (/ "/ "/ )/ "/ VarDefAgentList/ [/ VarAssignDef/ ]/ ;/ ;/ 环境变量/ 赋值/ [/ VarInitDef/ ]/ ;/ ;/ 环境变量/ 初始化/ [/ ECKLnSpecDef/ ]/ ;/ ;/ 规范/ 定义/ …/ AgentList/ ∷/ =/ atom/ "/ :/ "/ AgentType/ "/ ;/ "/ |/ AgentListatom/ "/ :/ "/ AgentType/ "/ ;/ "/ AgentType/ ∷/ =/ atom/ [/ "/ (/ "/ AParaList/ "/ )/ "/ ]/ |/ "/ array/ "/ number/ "/ ../ "/ number/ "/ of/ "/ AgentTypeAParaList/ ∷/ =/ simple/ _/ f/ |/ AParaList/ "/ ,/ "/ simple/ _/ fAgentDefList/ ∷/ =/ AgentDef/ |/ AgentDefListAgentDefAgentDef/ ∷/ =/ "/ MODULE/ "/ atom/ [/ "/ (/ "/ FParaList/ "/ )/ "/ ]/ LvarDefActDefOvarAssignDef/ ;/ ;/ 可/ 观察/ 变量/ 的/ 赋值/ ProtDef/ …/ FParaList/ ∷/ =/ [/ "/ Observable/ "/ ]/ atom/ ;/ ;/ 如果/ 指定/ Observable/ ,/ 则/ 表示/ |/ FParaList/ "/ ,/ "/ [/ "/ Observable/ "/ ]/ atomActDef/ ∷/ =/ atom/ "/ :/ {/ "/ AtomList/ "/ }/ ;/ "/ AtomList/ ∷/ =/ atom/ |/ AtomList/ "/ ,/ "/ atomatom/ ∷/ =/ [/ A/ -/ Za/ -/ z/ _/ ]/ [/ A/ -/ Za/ -/ z0/ -/ 9/ _/ \/ #/ -/ ]/ / Page15/ 主体/ 运行/ 环境/ 我们/ 用/ main/ 模块/ 定义/ ,/ VarDef/ 定义/ 了/ 一些/ 环境变量/ ,/ 这些/ 变量/ 可用/ 来/ 表示/ 环境/ 的/ 状态/ ,/ 当中/ 的/ 某些/ 成员/ 可以/ 作为/ 主体/ 相互/ 通信/ 的/ 共享/ 变量/ ./ (/ 2/ )/ 主体/ 声明/ 我们/ 对/ 每/ 一/ 主体/ 建立/ 模型/ ,/ 下面/ 介绍/ 有关/ 建模/ 过程/ 中/ 涉及/ 到/ 的/ 一些/ 重要/ 概念/ :/ 形式参数/ ./ 一个/ 主体/ 模型/ 的/ 形式化/ 参数/ 在/ “/ Fpa/ -/ raList/ ”/ 中/ 定义/ ,/ 其值/ 将/ 被/ 实参/ 替代/ ,/ 主体/ 模型/ 中/ 的/ 形参/ 对于/ 主体/ 来说/ 是/ 可/ 观察/ 的/ ,/ 一个/ 主体/ 可以/ 观察/ 环境/ 的/ 部分/ 变量/ ,/ 甚至/ 其它/ 主体/ 的/ 一部分/ 变量/ ./ MCTK/ 规定/ 可/ 观察/ 变量/ 的/ 前缀/ 必须/ 是/ “/ ObsPrm/ _/ ”/ ,/ 表明/ 该/ 变量/ 是/ 可/ 观察/ 的/ ./ 可/ 观察/ 变量/ ./ 一个/ 主体/ 的/ 可/ 观察/ 变量/ 的/ 集合/ Oi/ 主要/ 由该/ 主体/ 的/ 局部变量/ 以及/ 可/ 观察/ 的/ 实际/ 参数/ 组成/ ,/ 在/ 我们/ 实验/ 中/ ,/ 主体/ 的/ 局部/ 状态/ 由/ 其/ 可/ 观察/ 变量/ 指定/ ./ 如果/ 在/ LvarDef/ 中/ 定义/ 的/ 变量/ 是/ 一个/ 模块/ 实例/ ,/ 则/ 在/ 动作/ 变量/ 集合/ ActDef/ 中/ 定义/ 的/ 变量/ 也/ 是/ 主体/ 的/ 可/ 观察/ 变量/ ./ 可/ 观察/ 变量/ 赋值/ ./ 主体/ 中/ 关于/ 可/ 观察/ 变量/ 的/ 评价/ 函数/ 实际上/ 用来/ 描述/ 主体/ 的/ 可/ 观察/ 变量/ 的/ 值/ 是/ 如何/ 改变/ 的/ ,/ 是/ 一个/ 从/ 主体/ 部分/ 状态/ 集合/ 到/ 另/ 一个/ 部分/ 状态/ 集合/ 的/ 映射函数/ ,/ 迁移/ 函数/ 在/ OVarInitDef/ 和/ OvarTransDef/ 中/ 定义/ ./ 3.3/ 将/ 七元/ 组/ 转化/ 为/ MCTK/ 的/ 输入/ 语言/ 上/ 节/ 简单/ 介绍/ 了/ MCTK/ 及其/ 输入/ 语言/ ,/ 由此可见/ MCTK/ 实际上/ 是/ 在/ NuSMV/ 基础/ 上/ 引入/ 了/ 可/ 观察/ 变量/ 的/ 概念/ ,/ 两者/ 形参/ 的/ 唯一/ 不同之处/ 就是/ MCTK/ 需要/ 在/ 形参/ 前面/ 加上/ 前缀/ “/ ObsPrm/ _/ ”/ ,/ 表示/ 该形/ 参是/ 可/ 观察/ 的/ ./ 对于/ 模型/ 的/ 描述/ MCTK/ 与/ NuSMV/ 基本相同/ ,/ 需要/ 详细/ 刻画/ 状态/ 转换/ 过程/ ,/ 主要/ 包括/ 某/ 状态/ 在/ 一定/ 条件/ 发生/ 情况/ 下/ 迁移/ 到/ 另/ 一/ 状态/ ./ 迁移/ 七元/ 组/ 详细/ 给出/ 了/ 状态/ 转换/ 关系/ ,/ 其/ 第/ 1/ 项/ 指明/ 了/ 迁移/ 的/ 初始状态/ ,/ 最后/ 一项/ 指明/ 了/ 迁移/ 的/ 末/ 状态/ ,/ 第/ 2/ 、/ 3/ 、/ 4/ 项则/ 分别/ 指明/ 了/ 导致/ 迁移/ 发生/ 的/ 状态变量/ 的/ 变化/ 情况/ ,/ 使得/ MCTK/ 可以/ 方便/ 地/ 利用/ 这些/ 信息/ 对/ 状态/ 迁移/ 过程/ 进行/ 描述/ ./ 在/ 2.1/ 节/ 我们/ 引入/ “/ 通道/ ”/ 及/ “/ 通道/ 变量/ ”/ 的/ 概念/ ,/ “/ 通道/ ”/ 实际/ 是/ 一种/ 消息/ 机制/ ,/ 是/ 为了/ 方便/ 实现/ 对/ 服务/ 之间/ 交互/ 过程/ 的/ 建模/ 而/ 引入/ 的/ “/ 通道/ ”/ 概念/ ,/ 它/ 实际/ 是/ 不/ 存在/ 的/ ./ 但是/ ,/ 组合/ Web/ 服务/ 的/ 各/ 原子/ 服务/ 必须/ 相互/ “/ 联系/ “/ 起来/ ,/ 否则/ 单个/ 主体/ 无法/ 与/ 外界/ 交流/ ,/ 如果/ 反映/ 在/ 状态/ 转换/ 图中/ ,/ 则/ 多个/ 主体/ 的/ 状态/ 转换/ 图/ 相互/ 独立/ ,/ 不/ 存在/ “/ 联系/ ”/ ,/ 也/ 就/ 无法/ 实现/ 组合/ 流程/ 的/ 模型/ 检测/ ./ 因此/ ,/ 从/ 直观/ 上/ 看/ 主体/ 通过/ 所谓/ “/ 通道/ ”/ 建立联系/ ,/ 但/ 从/ 本质/ 上/ 说/ 主体/ 实际/ 是/ 通过/ “/ 通道/ 变量/ ”/ 建立/ 起/ 的/ “/ 联系/ ”/ ,/ 因为/ “/ 通道/ 变量/ ”/ 是/ 具有/ 直接/ 交互/ 关系/ 的/ 两个/ 主体/ 之间/ 的/ 共享/ 变量/ ,/ 相互/ “/ 联系/ ”/ 的/ 主体/ 通过/ 此/ 变量/ 实现/ 信息/ 的/ 发送/ 与/ 接收/ ./ 为了/ 方便/ 对/ 服务/ 之间/ 信息/ 交互/ 过程/ 进行/ 建模/ ,/ 实现/ 将/ 多个/ 服务/ “/ 联系/ ”/ 起来/ 的/ 目的/ ,/ 我们/ 将/ 服务/ 之间/ 的/ 交互/ 过程/ 看成/ 是/ “/ 通道/ 变量/ ”/ 通过/ “/ 通道/ ”/ 在/ 交互/ 的/ Web/ 服务/ 之间/ 传输/ 的/ 过程/ ./ 为此/ ,/ 我们/ 必须/ 对/ “/ 通道/ ”/ 这种/ 消息/ 机制/ 进行/ 建模/ ./ 在/ 用/ MCTK/ 对/ “/ 通道/ ”/ 建模/ 时/ ,/ 将/ “/ 通道/ ”/ 看作/ 与/ Web/ 服务/ 一样/ 的/ 实体/ ,/ 只不过/ 主体/ 的/ 状态/ 通过/ 主体/ 的/ 变量/ 标识/ ,/ 而/ “/ 通道/ ”/ 的/ 状态/ 则/ 由/ “/ 通道/ ”/ 中/ 当时/ 的/ 信息/ 标识/ ./ 对/ 主体/ 状态/ 的/ 迁移/ 我们/ 是/ 这样/ 刻画/ 的/ :/ 在/ 活动/ 执行/ 前/ ,/ 主体/ 处于/ 状态/ state0/ ,/ 信息/ Msg/ 到来/ ,/ 执行/ 活动/ ,/ 此时/ 该/ 主体/ 入/ 通道/ PT/ 的/ 值/ :/ value/ (/ PT/ )/ =/ Msg/ ,/ 主体/ 执行/ 活动/ 完毕/ 迁移/ 到/ state1/ ./ 假设/ 该/ 主体/ 名为/ AgentExa/ ,/ 则/ 上述/ 迁移/ 可/ 形式化/ 表述/ 为/ (/ AgentExa/ / state/ =/ state0value/ (/ PT/ )/ =/ Msg/ )/ / 当/ 我们/ 将/ “/ 通道/ ”/ 看作/ 与/ Web/ 服务/ 一样/ 的/ 实体/ 时/ ,/ 其/ 描述/ 思想/ 与/ 状态/ 迁移/ 的/ 描述/ 思想/ 是/ 类似/ 的/ ./ 需要/ 记录/ 此/ 时刻/ 主体/ 状态/ 以及/ 上/ 一/ 时刻/ 导致/ 主体/ 变为/ 此/ 状态/ 的/ 信息/ 及其/ 经历/ 的/ 通道/ 名/ ./ 例如/ :/ 主体/ AgentExa/ 在/ 接收/ 到/ 通道/ PortTypeIn/ 传来/ 的/ 信息/ Msg/ 后/ ,/ 状态/ 变为/ get/ _/ Msg/ ,/ 之后/ 又/ 通过/ 通道/ PortTypeOut/ 发送信息/ Msg1/ ,/ 则/ 我们/ 可以/ 将/ 上述/ 迁移/ 形式化/ 描述/ 为/ (/ state/ =/ get/ _/ Msg/ )/ (/ PortTypeIn/ / state/ =/ Msg/ )/ / 这样/ ,/ 我们/ 通过/ 通道/ 将/ 各个/ 主体/ 连接/ 在/ 了/ 一起/ ,/ 确切/ 地/ 说/ 是/ 通过/ 通道/ 中/ 交互/ 的/ 信息/ 将/ 它们/ 联系/ 起来/ ./ 当/ 某个/ 主体/ 发送/ 了/ 某/ 消息/ 后/ ,/ 另/ 一/ 主体/ 则/ 通过/ 相同/ “/ 通道/ ”/ 接收/ 了/ 该/ 消息/ ,/ 使得/ 两个/ 主体/ 在/ 此时/ 有/ 了/ 联系/ ,/ 更/ 具体地说/ 就是/ 将/ 具体/ 的/ Web/ 服务/ 方/ 联系/ 了/ 起来/ ./ 因此/ ,/ 由于/ 七元/ 组中/ 包含/ 了/ 通道/ 名称/ 、/ 该/ 通道/ 中/ 的/ 交互/ 信息/ 以及/ 该/ 信息/ 的/ 流动/ 方向/ ,/ 再/ 加上/ 清晰/ 的/ 状态/ 转换/ 关系/ 和/ 相应/ 变量/ 的/ 赋值/ ,/ 使得/ 我们/ 利用/ MCTK/ 对/ 流程/ 的/ 建模/ 更加/ 方便/ ./ 基于/ 上述/ 思想/ ,/ 本文/ 提出/ 了/ 将/ 迁移/ 七元/ 组/ 转换/ 为/ MCTK/ 代码/ 的/ 转换/ 算法/ ,/ 这样/ 做/ 是因为/ 描述/ BPEL/ 的/ 控制/ 流程/ 时/ ,/ MCTK/ 的/ 编码/ 工作/ 繁琐/ 、/ 冗长/ ,/ 但/ 更/ 重要/ 的/ 是/ 机械化/ ,/ 为了/ 进一步提高/ 模型/ 检测/ 的/ 自动化/ 程度/ ,/ 我们/ 提出/ T2M/ 算法/ ,/ 用来/ 将/ 产生/ 的/ 一组/ 迁移/ 七元/ 组/ 自动/ 转化/ 为/ MCTK/ 代码/ ./ Page16/ 算法/ T2M7/ -/ tuple/ →/ MCTK/ 描述/ 代码/ ./ 输入/ :/ 迁移/ 七元/ 组/ 集合/ 输出/ :/ MCTK/ 描述/ 代码/ // / 假设/ 共/ 产生/ n/ 个/ 七元/ 组/ / // // / 预处理/ 阶段/ :/ 该/ 阶段/ 用来/ 初始化/ 与/ 通道/ 建模/ 有关/ 的/ 1/ ./ 设置/ source/ {/ }/ 集合/ 和/ dest/ {/ }/ 集合/ ,/ 初始化/ 为/ none/ ./ 变量/ 和/ 集合/ ,/ 产生/ 的/ 代码/ 放在/ MCTK/ 文件/ 的/ 最/ 上端/ / // 2/ ./ 设置/ Msgtype/ {/ }/ 集合/ ,/ 初始化/ 为/ none/ ./ 搜索/ 多/ 主体/ 3/ ./ 搜索/ 每个/ Web/ 服务/ 的/ WSDL/ 源代码/ ,/ 抽取/ 代码/ 中/ // / 迁移/ 描述/ 阶段/ :/ 从步/ 4/ 起/ 是/ 针对/ 原子/ 服务/ 的/ 建模/ 过/ 4/ ./ 按照/ 如下/ 格式/ 定义/ 主体/ :/ MODULE/ 主体/ 名/ (/ 通道/ i5/ ./ 设置/ state/ {/ }/ 集合/ ,/ 将/ 本/ Web/ 服务/ 对应/ 产生/ 的/ 所有/ // / 片段/ 1/ :/ 对/ 单个/ Web/ 服务/ 产生/ 描述/ 状态/ 迁移/ 的/ 代码/ 6/ ./ foreachtuple/ [/ i/ ]/ (/ i/ / n/ )/ 7/ ./ {/ 8/ ./ next/ (/ state/ )/ =/ case9/ ./ (/ state/ =/ tuple/ [/ i/ ]/ (/ 1/ )/ )/ &/ (/ ObsPrm/ _/ tuple/ [/ i/ ]/ (/ 5/ )/ / 10/ ./ }/ // / 片段/ 2/ :/ 对/ 单个/ Web/ 服务/ 产生/ 描述/ 通道/ 中/ 信息/ 变/ // / 假设/ 满足/ tuple/ [/ i/ ]/ (/ 6/ )/ =/ OUT/ 的/ 元组/ 共有/ m/ 个/ ,/ 则/ :/ / // 11/ ./ foreachtuple/ [/ j/ ]/ (/ j/ ≠/ i/ ∧/ j/ / m/ / n/ )/ 12/ ./ {/ 13/ ./ if/ (/ tuple/ [/ i/ ]/ (/ 1/ )/ =/ =/ tuple/ [/ j/ ]/ (/ 7/ )/ )/ then14/ ./ {/ 15/ ./ next/ (/ tuple/ [/ i/ ]/ (/ 5/ )/ / Msgtype/ )/ =/ case16/ ./ next/ (/ tuple/ [/ i/ ]/ (/ 5/ )/ / source/ )/ =/ case17/ ./ next/ (/ tuple/ [/ i/ ]/ (/ 5/ )/ / dest/ )/ =/ case/ 算法/ 说明/ :/ 我们/ 标记/ tuple/ [/ j/ ]/ 的/ 第/ i/ 项为/ tuple/ [/ j/ ]/ (/ i/ )/ ,/ 于是/ tuple/ [/ j/ ]/ (/ 1/ )/ 代表/ 迁移/ 七元/ 组/ 的/ 第一项/ ,/ 即/ 活动/ 的/ 初始状态/ ,/ tuple/ [/ j/ ]/ (/ 7/ )/ 为/ 最后/ 一项/ ,/ 即/ 活动/ 的/ 末/ 状态/ 等等/ ./ 我们/ 将/ 预处理/ 阶段/ 和/ 迁移/ 描述/ 阶段/ 的/ 代码/ 按照/ 如图/ 12/ 所示/ 顺序/ 组合/ 在/ 一起/ 就/ 完成/ 了/ BPEL/ 流程/ 的/ 形式化/ 描述/ ./ 从图/ 12/ 中/ 可以/ 看出/ ,/ 预处理/ 阶段/ 产生/ 的/ 代码/ 放在/ 整个/ 程序/ 的/ 最/ 上面/ ./ 算法/ 步/ 1/ 用来/ 找到/ 所有/ 参与/ 流程/ 的/ Web/ 服务/ 方/ ;/ 步/ 2/ 、/ 3/ 分别/ 确定/ 所有/ 用到/ 的/ 交互/ 变量/ 和/ 与/ 每个/ 主体/ 相连接/ 的/ “/ 通道/ ”/ ./ 前/ 3/ 步/ 用来/ 初始化/ 为了/ 实现/ 通道/ 机制/ 所/ 必须/ 设置/ 的/ 相关/ 变量/ 和/ 集合/ ./ 步/ 4/ 是/ 主体/ 定义/ ,/ 其/ 括号/ 中/ 的/ 参数/ 皆/ 为/ 形式参数/ ,/ 用来/ 接收/ 由主/ 模块/ 传来/ 的/ 实参/ 值/ ,/ 该步/ 与/ 后面/ 生成/ 的/ 代码/ 组合/ 在/ 一起/ 构成/ 对/ 单个/ Web/ 服务/ BPEL/ 流程/ 的/ 形式化/ 描述/ ;/ 步/ 5/ 声明/ 单个/ Web/ 服务/ 流程/ 的/ 所有/ 状态变量/ ./ 片段/ 1/ 用来/ 产生/ 七元/ 组中/ 各/ 状态/ 的/ 转换/ 关系/ ,/ 步/ 6/ 开始/ 循环/ ,/ 产生/ 描述/ 主体/ 状态/ 迁移/ 关系/ 的/ 代码/ ;/ 步/ 9/ 可/ 解释/ 为/ 当/ 主体/ 状态/ 为/ cur/ (/ state/ )/ 时/ ,/ 通过/ 入/ // 出/ 通道/ 接收/ // 发送信息/ 后/ ,/ 状态/ 变为/ next/ (/ state/ )/ ./ 片段/ 2/ 用来/ 描述/ 各/ 通道/ 中/ 信息/ 的/ 变化/ 情况/ ,/ 为了/ 不/ 产生/ 混乱/ ,/ 我们/ 针对/ 主体/ 的/ 出/ 通道/ 进行/ 建模/ (/ 实际上/ ,/ 一个/ 主体/ 的/ 入/ 通道/ 必为/ 另/ 一/ 主体/ 的/ 出/ 通道/ )/ ,/ 当/ 某个/ 七元/ 组/ L1/ 的/ tuple/ [/ i/ ]/ (/ 6/ )/ =/ OUT/ 时/ ,/ 说明/ 其中/ 的/ channel/ 表示/ 此/ 主体/ 的/ 出/ 通道/ ,/ 此时/ 搜索/ 其余/ 七元/ 组/ ,/ 若/ 找到/ 七元/ 组/ L2/ ,/ 其末/ 状态/ 与/ L1/ 初/ 状态/ 相同/ ,/ 说明/ L2/ 是/ L1/ 的/ 上/ 一个/ 迁移/ ,/ 则/ L1/ 对应/ 的/ 活动/ 执行/ 时/ ,/ 其/ 通道/ 的/ 建模/ 需/ 考虑/ L2/ 通道/ 信息/ 的/ 变化/ 情况/ ,/ 这/ 也/ 是/ 算法/ 步/ 15/ 的/ 思想/ ;/ 步/ 16/ 、/ 17/ 说明/ 交互/ 通道/ 的/ 源/ Web/ 服务/ 和/ 目标/ Web/ 服务/ ./ 由于/ 算法/ 需要/ 针对/ 某一/ 七元/ 组/ 扫描/ 其余/ n/ -/ 1/ 个/ 七元/ 组以/ 找到/ 满足/ 步/ 13/ 判断/ 条件/ 的/ 元组/ 集合/ ,/ 故而/ 在/ 最差/ 情况/ 下/ 其/ 时间/ 复杂度/ 为/ O/ (/ n/ !/ )/ ./ 由/ 以上/ 说明/ 可知/ ,/ 为了/ 将/ Web/ 服务/ 组合/ 建模/ 为/ 多/ 主体/ 系统/ ,/ 算法/ 在/ 转换/ 过/ Page17/ 程中/ 需要/ 先/ 将/ 参与/ Web/ 服务/ 组合/ 的/ 每个/ 服务/ (/ 组件/ )/ 建模/ 为/ 主体/ ,/ 然后/ 在/ 环境/ 中/ 对/ 每/ 一/ 主体/ 与/ 代表/ 其它/ Web/ 服务/ 的/ 主体/ 的/ 交互/ 通道/ 进行/ 建模/ ,/ 从而/ 构造/ 相应/ 的/ 多/ 主体/ 系统/ ./ 以下/ 我们/ 通过/ 一个/ 示例/ 来/ 说明/ 算法/ 的/ 执行/ 过程/ ,/ 实验/ 结果表明/ 实例/ 流程/ 形式化/ 验证/ 的/ 自动化/ 程度/ 大大提高/ ./ 4/ 一个/ 示例/ :/ 虚拟/ 旅游/ 系统/ 本/ 节/ 利用/ 我们/ 开发/ 的/ 基于/ 时态/ 认知/ 逻辑/ 的/ 模型/ 检测工具/ MCTK/ 对/ 虚拟/ 旅游/ 系统/ VirtualTravelAgency/ (/ VTA/ )/ [/ 18/ ]/ 进行/ 验证/ ,/ VTA/ 通过/ 对/ 机票/ 预订/ 服务商/ 和/ 酒店/ 预订/ 服务商/ 的/ 整合/ 来/ 为/ 即将/ 旅行/ 的/ 人/ 提供/ 服务/ ,/ 该/ 系统/ 接收/ 用户/ 输入/ ,/ 并/ 将/ 最终/ 相关/ 预订/ 结果/ 返回/ 给/ 用户/ ./ 如图/ 13/ 所示/ ./ 该/ Web/ 服务/ 组合/ 涉及/ 4/ 个/ 主体/ :/ 用户/ 、/ VTA/ 、/ 机票/ 预订/ 服务商/ 、/ 酒店/ 预订/ 服务商/ ./ 用户/ 向/ VTA/ 发送/ 预订/ 机票/ 及/ 酒店/ 请求/ ,/ 之后/ VTA/ 向/ 机票/ 预订/ 服务商/ 发送/ 请求/ 订票/ 信息/ ,/ 机票/ 预订/ 服务商/ 查询/ 航班/ ,/ 若/ 无法/ 满足用户/ 需求/ (/ 例如/ 航班/ 临时/ 取消/ )/ ,/ 则/ 返回/ 信息/ 给/ VTA/ ,/ VTA/ 将/ 该/ 结果/ 返回/ 给/ 用户/ ,/ 流程/ 终止/ ./ 若/ 可以/ 预订/ ,/ 则/ VTA/ 向/ 酒店/ 预订/ 服务商/ 发送/ 请求/ 信息/ 并/ 将/ 机票/ 预订/ 服务商/ 提供/ 的/ offer/ 返回/ 给/ 用户/ ,/ 用户/ 可以/ 选择/ 接受/ 或者/ 拒绝/ 预订/ 结果/ ,/ 若/ 接受/ ,/ 则/ 最终/ VTA/ 返回/ 用户/ 关于/ 酒店/ 、/ 机票/ 及/ 旅行/ 成本/ 等/ 信息/ ./ 我们/ 将/ 这/ 4/ 个/ Web/ 服务/ 看作/ 4/ 个/ 主体/ ,/ 用/ BPELDesigner/ 创建/ 每个/ Web/ 服务/ 的/ BPEL/ 源代码/ ,/ 在/ 此/ 过程/ 中/ 需要/ 注意/ 各/ 主体/ 之间/ 共享/ 变量/ 的/ 设置/ ./ 然后/ 将/ 此/ BPEL/ 源代码/ 作为/ B2T/ 算法/ 输入/ ,/ 从而/ 生成/ 四个/ 相应/ 迁移/ 七元/ 组/ 集合/ ./ 因此/ ,/ 转换/ 工作/ 不是/ 针对/ Web/ 服务/ 组合/ 流程/ 的/ BPEL/ 源代码/ ,/ 而是/ 针对/ 每个/ 参与/ 组合/ 的/ 单个/ Web/ 服务/ 的/ 流程/ 代码/ ./ 限于/ 篇幅/ ,/ 本文/ 以/ 状态/ 数量/ 较少/ 的/ 机票/ 预订/ 服务商/ 为例/ 说明/ 转换/ 过程/ ,/ 在/ 转换/ 前/ 我们/ 去掉/ 描述/ 该/ 服务/ 的/ OUT/ ,/ send/ _/ fofferMsg/ )/ ;/ BPEL/ 源代码/ 中/ 那些/ 没有/ 在/ 2.2/ 节/ 介绍/ 的/ 活动/ ,/ 然后/ 调用/ B2T/ 算法/ 得到/ 迁移/ 七元/ 组/ 集合/ 如下/ :/ (/ sleep/ ,/ frequestMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ PT/ ,/ IN/ ,/ get/ _/ frequestMsg/ )/ ;/ (/ get/ _/ frequestMsg/ ,/ fofferMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ CallbackPT/ ,/ (/ send/ _/ fofferMsg/ ,/ fackMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ PT/ ,/ IN/ ,/ get/ _/ fackMsg/ )/ ;/ (/ get/ _/ fackMsg/ ,/ fticketMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ CallbackPT/ ,/ OUT/ ,/ send/ _/ fticketMsg/ )/ ;/ (/ send/ _/ fticketMsg/ ,/ fticketAckMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ PT/ ,/ IN/ ,/ get/ _/ fticketAckMsg/ )/ ;/ (/ send/ _/ fofferMsg/ ,/ fNackMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ PT/ ,/ IN/ ,/ get/ _/ fNackMsg/ )/ ;/ (/ get/ _/ frequestMsg/ ,/ fNotavailMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ CallbackPT/ ,/ OUT/ ,/ send/ _/ fNotavailMsg/ )/ ./ 下面/ 将/ 迁移/ 七元/ 组/ 作为/ 算法/ T2M/ 的/ 输入/ ,/ 得到/ 自动/ 生成/ 的/ 代码/ ,/ 将/ 其/ 输入/ MCTK/ ,/ 从而/ 验证/ 该/ 组合/ Web/ 服务/ 的/ 正确性/ ./ 根据/ 算法/ :/ (/ 1/ )/ 搜索/ 该/ 组合/ 流程/ 的/ BPEL/ 源代码/ ,/ 找到/ 用/ 〈/ partnerLinkname/ 〉/ 属性/ 标示/ 的/ 所有/ Web/ 服务/ ,/ 将/ 这些/ Web/ 服务/ 名/ 放入/ source/ {/ }/ 集合/ 和/ target/ {/ }/ 集合/ 中/ ./ 在/ 该/ 组合/ 流程/ 的/ BPEL/ 源代码/ 中/ 找到/ 4/ 个/ 主体/ 的/ 声明/ ,/ 分别/ 是/ Flight/ _/ PLT/ 、/ Hotel/ _/ PLT/ 、/ User/ _/ PLT/ 、/ VTA/ ,/ 分别/ 代表/ 机票/ 预订/ 服务商/ 、/ 酒店/ 预订/ 服务商/ 、/ 用户/ 、/ VTA/ 代理/ ,/ 将/ 它们/ 放入/ 上述/ 两个/ 集合/ ,/ 则/ :/ source/ =/ {/ none/ ,/ Flight/ _/ PLT/ ,/ Hotel/ _/ PLT/ ,/ User/ _/ PLT/ ,/ VTA/ }/ ;/ dest/ =/ {/ none/ ,/ Flight/ _/ PLT/ ,/ Hotel/ _/ PLT/ ,/ User/ _/ PLT/ ,/ VTA/ }/ ;/ (/ 2/ )/ 设置/ Msgtype/ {/ }/ 集合/ ,/ 该/ 集合/ 存放/ 组合/ 流程/ 中/ 所有/ Web/ 服务/ 的/ 交互/ 变量/ ,/ 这些/ 变量/ 可以/ 从/ 组合/ 流程/ BPEL/ 代码/ 中/ 的/ 〈/ variablename/ 〉/ 属性/ 中/ 抽出/ ./ 对于/ 机票/ 预订/ 服务商/ 而言/ ,/ 需要/ 将/ 每个/ 迁移/ 七元/ 组/ 的/ 第/ 2/ 项/ tuple/ [/ j/ ]/ (/ 2/ )/ 放入/ 该/ 集合/ ,/ 它们/ 是/ Msgytype/ =/ {/ frequestMsg/ 、/ fofferMsg/ 、/ fackMsg/ 、/ fticketMsg/ 、/ fticketAckMsg/ 、/ fNackMsg/ 、/ fNotavailMsg/ …/ }/ ;/ (/ 3/ )/ 搜索/ 本/ Web/ 服务/ 的/ WSDL/ 源代码/ ,/ 抽取/ 〈/ portTypename/ 〉/ 属性/ 值/ ,/ 找到/ 本/ 主体/ 与/ 外界/ 联系/ 的/ 通道/ ./ 对于/ 本例/ 而言/ ,/ 它们/ 是/ Flight/ _/ PT/ 和/ Flight/ _/ CallbackPT/ ,/ 前者/ 的/ 源/ 主体/ 为/ VTA/ ,/ 目标/ 主体/ 为/ Flight/ _/ PLT/ ,/ 后者/ 相反/ ./ 为了/ 书写/ 方便/ 本文/ 分别/ 将/ 它们/ 按/ 上述/ 顺序/ 简写/ 为/ ch1/ 、/ ch2/ ;/ (/ 4/ )/ 对/ 机票/ 预订/ 服务商/ 模块/ 进行/ 定义/ :/ MOD/ -/ ULEFlight/ _/ PLT/ (/ ch1/ ,/ ch2/ ,/ ObsPrm/ _/ ch1/ / Msgtype/ ,/ ObsPrm/ _/ ch1/ / source/ ,/ ObsPrm/ _/ ch1/ / dest/ ,/ ObsPrm/ _/ ch2/ / Msgtype/ ,/ ObsPrm/ _/ ch2/ / source/ ,/ ObsPrm/ _/ ch2/ / dest/ )/ ;/ Page18/ (/ 5/ )/ 设置/ state/ {/ }/ 集合/ ,/ 该/ 集合/ 存放/ 了/ 原子/ 服务/ 流程/ 执行/ 过程/ 中/ 经历/ 的/ 所有/ 状态/ ,/ 可以/ 从/ 该/ Web/ 服务/ 对应/ 的/ 所有/ 迁移/ 七元/ 组/ 的/ 第一项/ tuple/ [/ j/ ]/ (/ 1/ )/ 和/ 最后/ 一项/ tuple/ [/ j/ ]/ (/ 7/ )/ 抽出/ ,/ 这/ 可/ 由/ 程序/ 自动/ 完成/ ./ 对于/ 本例/ ,/ 它们/ 是/ state/ =/ {/ sleep/ ,/ get/ _/ frequestMsg/ ,/ send/ _/ fofferMsg/ ,/ get/ _/ fackMsg/ ,/ send/ _/ fticketMsg/ ,/ get/ _/ fticketAckMsg/ ,/ get/ _/ fNackMsg/ ,/ send/ _/ fNo/ -/ tavailMsg/ …/ }/ ;/ (/ 6/ )/ 针对/ 每个/ Web/ 服务/ ,/ 根据/ 其/ 相应/ 七元/ 组/ 集合/ 产生/ 状态/ 迁移/ 描述/ 代码/ ,/ 对于/ 机票/ 预订/ 服务商/ 模块/ ,/ 我们/ 以/ 其中/ 一个/ 七元/ 组为例/ 说明/ 代码/ 的/ 产生/ 过程/ ./ 例如/ 对于/ 七元/ 组/ (/ get/ _/ frequestMsg/ ,/ fofferMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ CallbackPT/ ,/ OUT/ ,/ send/ _/ fofferMsg/ )/ :/ 算法/ 说明/ 当/ 主体/ 当前/ 状态/ 为/ get/ _/ frequestMsg/ ,/ 运用/ 通道/ Flight/ _/ CallbackPT/ 发送/ 了/ 信息/ fofferMsg/ 后/ ,/ 主体/ 状态/ 迁移/ 到/ send/ _/ fofferMsg/ ,/ 该/ 过程/ 可写/ 为/ :/ next/ (/ state/ )/ =/ case/ (/ state/ =/ get/ _/ frequestMsg/ )/ (/ Flight/ _/ CallbackPT/ / Msgtype/ =/ fofferMsg/ )/ :/ send/ _/ fofferMsg/ ;/ 据此/ ,/ 对应/ 每个/ 七元/ 组/ ,/ 再/ 考虑/ 到/ 可/ 观察/ 变量/ 概念/ ,/ 最后/ 根据/ 算法/ 自动/ 生成/ 相应/ 状态/ 迁移/ 语句/ ./ 以下/ 列出/ 描述/ 本/ 主体/ 状态/ 迁移/ 的/ 部分/ 代码/ :/ next/ (/ state/ )/ =/ case/ (/ state/ =/ sleep/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ frequestMsg/ )/ :/ get/ _/ frequestMsg/ ;/ (/ state/ =/ send/ _/ fofferMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ fackMsg/ )/ :/ get/ _/ fackMsg/ ;/ (/ state/ =/ send/ _/ fofferMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ fNackMsg/ )/ :/ get/ _/ fNackMsg/ ;/ …/ (/ 7/ )/ 针对/ 每个/ Web/ 服务/ ,/ 根据/ 其/ 相应/ 七元/ 组/ 集合/ 产生/ 描述/ 通道/ 中/ 信息/ 变化/ 的/ 代码/ 模块/ ,/ 算法/ 首先/ 从/ 迁移/ 七元/ 组中/ 找到/ tuple/ [/ i/ ]/ (/ 6/ )/ =/ OUT/ 的/ 元组/ ,/ 也/ 就是/ 刻画/ 主体/ 运用/ 出/ 通道/ 发送信息/ 的/ 迁移/ 元组/ ,/ 在/ 本例/ 中/ 它们/ 是/ :/ (/ get/ _/ frequestMsg/ ,/ fofferMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ CallbackPT/ ,/ OUT/ ,/ send/ _/ fofferMsg/ )/ ;/ (/ get/ _/ fackMsg/ ,/ fticketMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ CallbackPT/ ,/ OUT/ ,/ send/ _/ fticketMsg/ )/ ;/ (/ get/ _/ frequestMsg/ ,/ fNotavailMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ CallbackPT/ ,/ OUT/ ,/ send/ _/ fNotavailMsg/ )/ ./ 然后/ ,/ 找到/ 末/ 状态/ 与/ 它们/ 的/ 初/ 状态/ 相同/ 的/ 七元/ 组/ ,/ 按照/ 算法/ 展开/ 操作/ ./ 例如/ :/ 针对/ Φ/ (/ get/ _/ fackMsg/ ,/ fticketMsg/ ,/ ε/ ,/ ε/ ,/ Flight/ _/ CallbackPT/ ,/ OUT/ ,/ send/ _/ fticketMsg/ )/ ,/ 搜索/ 其余/ 元组/ ,/ 若/ 某个/ 元组/ 的/ 末/ 状态/ 与/ Φ/ 的/ 初/ 状态/ get/ _/ fackMsg/ 相同/ ,/ 证明/ 我们/ 找到/ 了/ Φ/ 的/ 上/ 一/ 迁移/ Φ/ p/ ,/ 于是/ ,/ 在/ Φ/ p/ 迁移/ 发生/ 的/ 情况/ 下/ ,/ 下/ 一/ 时刻/ Φ/ 的/ 通道/ Flight/ _/ CallbackPT/ 中/ 的/ 内容/ 变为/ fticketMsg/ ,/ 并且/ 根据/ (/ 3/ )/ ,/ 该/ 通道/ 源/ 主体/ 为/ Flight/ _/ PLT/ ,/ 目标/ 主体/ 为/ VTA/ ./ 由此/ ,/ 对/ 上述/ 3/ 个/ 七元/ 组/ ,/ 根据/ 算法/ 自动/ 生成/ 相应/ 通道/ 描述/ 语句/ ,/ 以下/ 列出/ 描述/ 本/ 主体/ 出/ 通道/ 模型/ 的/ 代码/ :/ // / 说明/ 在/ 上/ 一/ 迁移/ 发生/ 情况/ 下/ ,/ 本次/ 迁移/ 导致/ 的/ 通道/ 中/ 的/ 信息/ 变化/ / // next/ (/ ch2/ / Msgtype/ )/ =/ case/ (/ state/ =/ get/ _/ frequestMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ fRequestMsg/ )/ :/ fofferMsg/ ;/ (/ state/ =/ get/ _/ frequestMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ fRequestMsg/ )/ :/ fNotavailMsg/ ;/ (/ state/ =/ get/ _/ fackMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ fackMsg/ )/ :/ fticketMsg/ ;/ // / 说明/ Flight/ _/ CallbackPT/ 的/ 源/ 主体/ 与/ 目标/ 主体/ / // next/ (/ ch2/ / source/ )/ =/ case/ (/ state/ =/ get/ _/ frequestMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ frequestMsg/ )/ :/ Flight/ _/ PLT/ ;/ (/ state/ =/ get/ _/ fackMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ fackMsg/ )/ :/ Flight/ _/ PLT/ ;/ next/ (/ ch2/ / dest/ )/ =/ case/ (/ state/ =/ get/ _/ frequestMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ frequestMsg/ )/ :/ VTA/ ;/ (/ state/ =/ get/ _/ fackMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ fackMsg/ )/ :/ VTA/ ;/ 需要/ 说明/ 的/ 是/ ,/ 之所以/ 在/ 针对/ 主体/ 的/ 建模/ 过程/ 中/ ,/ 只/ 描述/ 其出/ 通道/ 信息/ 的/ 变化/ 而/ 未/ 理会/ 入/ 通道/ ,/ 主要/ 是/ 考虑/ 到/ 统一/ 、/ 整齐/ ,/ 防止/ 重复/ 建模/ ,/ 实际上/ 某一/ 主体/ 的/ 入/ 通道/ 必然/ 也/ 是/ 其它/ 主体/ 的/ 出/ 通道/ ,/ 在/ 对/ 其它/ 主体/ 建模/ 时/ 还是/ 会/ 考虑/ 到/ ;/ (/ 8/ )/ 最后/ ,/ 根据/ 图/ 12/ ,/ 将/ (/ 4/ )/ ,/ (/ 5/ )/ ,/ (/ 6/ )/ ,/ (/ 7/ )/ 生成/ 的/ 代码/ 组合/ 起来/ ,/ 得到/ 机票/ 预订/ 服务/ 流程/ 的/ 部分/ MCTK/ 描述/ 代码/ 如下/ :/ // / 定义/ 主体/ / // MODULEFlight/ _/ PLT/ (/ ch1/ ,/ ch2/ ,/ ObsPrm/ _/ ch1/ / Msgtype/ ,/ ObsPrm/ _/ ch1/ / source/ ,/ ObsPrm/ _/ ch1/ / dest/ ,/ ObsPrm/ _/ ch2/ / Msg/ -/ type/ ,/ ObsPrm/ _/ ch2/ / source/ ,/ ObsPrm/ _/ ch2/ ./ dest/ )/ // / 声明/ 状态/ / // State/ :/ {/ sleep/ 、/ get/ _/ frequestMsg/ 、/ send/ _/ fofferMsg/ 、/ get/ _/ fackMsg/ 、/ send/ _/ fticketMsg/ 、/ get/ _/ fticketAckMsg/ 、/ get/ _/ fNackMsg/ 、/ send/ _/ fNotavailMsg/ }/ // / 描述/ 状态/ 迁移/ / // next/ (/ state/ )/ =/ case/ (/ state/ =/ sleep/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ frequestMsg/ )/ :/ get/ _/ frequestMsg/ ;/ Page19fackMsg/ )/ :/ get/ _/ fackMsg/ ;/ fNackMsg/ )/ :/ get/ _/ fNackMsg/ ;/ frequestMsg/ )/ :/ fofferMsg/ ;/ frequestMsg/ )/ :/ fNotavailMsg/ ;/ fackMsg/ )/ :/ fticketMsg/ ;/ (/ state/ =/ send/ _/ fofferMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ (/ state/ =/ send/ _/ fofferMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ …/ // / 描述/ 通道/ 变化/ / // next/ (/ ch2/ / Msgtype/ )/ =/ case/ (/ state/ =/ get/ _/ frequestMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ (/ state/ =/ get/ _/ frequestMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ (/ state/ =/ get/ _/ fackMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ next/ (/ ch2/ / source/ )/ =/ case/ (/ state/ =/ get/ _/ frequestMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ (/ state/ =/ get/ _/ fackMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ next/ (/ ch2/ / dest/ )/ =/ case/ (/ state/ =/ get/ _/ frequestMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ frequestMsg/ )/ :/ VTA/ ;/ (/ state/ =/ get/ _/ fackMsg/ )/ &/ (/ ObsPrm/ _/ ch1/ / Msgtype/ =/ fackMsg/ )/ :/ VTA/ ;/ 根据/ 此/ 方法/ ,/ 我们/ 继续/ 生成/ 其它/ Web/ 服务/ 的/ MCTK/ 代码/ 并/ 定义/ 主/ 模块/ ,/ 将/ 它们/ 按照/ 图/ 12/ 所示/ 放在/ 同一/ MCTK/ 源文件/ 下/ ,/ 就/ 自动/ 生成/ 了/ 组合/ Web/ 服务/ 流程/ 的/ MCTK/ 描述/ 代码/ ./ 在/ 生成/ MCTK/ 代码/ 后/ ,/ 需要/ 手工/ 将/ 待/ 验证/ 规范/ 加入/ 自动/ 生成/ 的/ MCTK/ 代码/ ./ 我们/ 已/ 成功/ 验证/ 了/ 若干/ 时态/ 认知/ 规范/ ./ 下列/ 规范/ 中/ SPEC/ 表示/ 时态/ 规范/ ,/ ECKLnSPEC/ 表示/ 时态/ 认知/ 规范/ ,/ 为了/ 书写/ 方便/ ,/ 用/ agentA/ 代表/ 用户/ 主体/ 、/ agentB/ 代表/ VTA/ 、/ agentC/ 代表/ 航空/ 订票/ 系统/ 、/ agentD/ 代表/ 酒店/ 预订/ 系统/ ./ 篇幅/ 所/ 限/ ,/ 下面/ 仅/ 列出/ 两个/ 规范/ 的/ 验证/ 结果/ ./ 首先/ 是/ 一个/ 时态/ 逻辑/ 规范/ :/ SPECAG/ (/ (/ agentA/ / state/ =/ send/ _/ crequestMsg/ )/ →/ EF/ (/ agentD/ / state/ =/ send/ _/ hofferMsg/ )/ )/ ./ frequestMsg/ )/ :/ Flight/ _/ PLT/ ;/ fackMsg/ )/ :/ Flight/ _/ PLT/ ;/ 这个/ 规范/ 的/ 含义/ 是/ 当/ 用户/ 主体/ 发送/ 了/ 请求/ 信息/ 后/ ,/ 酒店/ 预订/ 服务商/ 有/ 可能/ 在/ 将来/ 某个/ 时刻/ 发来/ 相关/ 酒店/ 预订/ 信息/ ./ 验证/ 结果/ 为/ true/ ,/ 验证/ 时间/ 为/ 0.428/ s/ ./ 当/ 用户/ 发送/ 请求/ 信息/ 后/ ,/ 若/ 没有/ 机票/ 可/ 供/ 预订/ ,/ 则/ 预订/ 酒店/ 服务/ 不会/ 被/ 启动/ ,/ 若有/ 机票/ 可以/ 预订/ ,/ 则/ VTA/ 将/ 马上/ 向/ 酒店/ 预订/ 服务商/ 发送/ 请求/ ,/ 若/ 酒店/ 可/ 预订/ ,/ 则/ 此/ 规范/ 成立/ ./ 此外/ ,/ 我们/ 还/ 验证/ 了/ 下列/ 时态/ 认知/ 逻辑/ 规范/ :/ ECKLnSPECAG/ (/ (/ ch5/ / Msgtype/ =/ ticketMsg/ )/ →/ AF/ (/ agentAK/ (/ (/ ch2/ / Msgtype/ =/ fticketMsg/ )/ &/ (/ ch4/ / Msgtype/ =/ hticketMsg/ )/ )/ )/ )/ 其中/ 形/ 如/ “/ aKf/ ”/ 的/ 公式/ 表示/ 主体/ a/ 知道/ f/ 成立/ ./ 该/ 规范/ 的/ 意思/ 是/ 当/ 用户/ 预订/ 成功/ 相关/ 服务/ 后/ ,/ 它/ 必然/ 知道/ 机票/ 预订/ 服务商/ 发送/ 了/ 机票/ 并且/ 酒店/ 预订/ 服务商/ 发送/ 了/ 酒店/ 预订/ 成功/ 的/ 相关/ 信息/ ./ 验证/ 结果/ 为/ true/ ,/ 验证/ 时间/ 为/ 1.832/ s/ ./ 5/ 结论/ 与/ 展望/ 本文/ 从/ Web/ 服务/ 流程/ 描述语言/ WS/ -/ BPEL/ 的/ 形式化/ 验证/ 需求/ 出发/ ,/ 提出/ BPEL/ 语言/ 的/ 形式/ 模型/ 并/ 给出/ 活动/ 执行/ 语义/ ,/ 结合/ 该/ 语言/ 与/ 模型/ 检测工具/ MCTK/ 自身/ 特点/ 提出/ 迁移/ 七元/ 组/ 这/ 一/ 中间/ 形式/ ,/ 建立/ BPEL/ 活动/ 与/ 迁移/ 七元/ 组/ 之间/ 的/ 一一对应/ 关系/ ,/ 在/ 此基础/ 上/ 给出/ 该/ 语言/ 到/ 模型/ 检测工具/ MCTK/ 输入/ 代码/ 的/ 转换/ 算法/ ,/ 实现/ BPEL/ 流程/ 的/ 自动化/ 验证/ ,/ 从而/ 支持/ 时态/ 和/ 认知/ 逻辑/ 规范/ 的/ 验证/ ./ 实验/ 结果表明/ 了/ 该/ 方法/ 的/ 有效性/ ./ 下/ 一步/ 工作/ 将/ 对/ BPEL/ 的/ 其它/ 活动/ ,/ 如/ 错误处理/ 等/ 进行/ 建模/ ,/ 从而/ 更/ 完整/ 地/ 支持/ BPEL/ 建模/ ,/ 进一步提高/ 建模/ 和/ 验证/ 过程/ 的/ 自动化/ 程度/ ./ 

