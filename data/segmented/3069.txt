Page1/ 基于/ P2P/ 的/ 视频点播/ 系统/ 综述/ 沈时军/ 李三立/ (/ 清华/ 信息科学/ 与/ 技术/ 国家/ 实验室/ 北京/ 100084/ )/ (/ 清华大学/ 计算机科学/ 与/ 技术/ 系/ 北京/ 100084/ )/ 摘要/ 近十年/ 来/ ,/ 基于/ 对/ 等/ 网络/ (/ Peer/ -/ to/ -/ Peer/ ,/ P2P/ )/ 的/ 视频点播/ 系统/ (/ Video/ -/ on/ -/ Demand/ ,/ VoD/ )/ 受到/ 了/ 越来越/ 多/ 的/ 关注/ ./ 它/ 吸引/ 人/ 的/ 原因/ 在于/ ,/ 与/ 传统/ 的/ 基于/ 服务器/ // 客户机/ 结构/ 的/ 视频点播/ 系统/ 相比/ ,/ P2P/ 技术/ 具有/ 成本低/ 、/ 扩展性/ 好/ 的/ 优点/ ./ 但是/ ,/ 由于/ 对/ 等/ 网络/ 内在/ 的/ 不稳定性/ 、/ 异构/ 性/ ,/ 这/ 类/ 系统/ 在/ 实现/ 上/ 面临/ 着/ 诸多/ 挑战/ ./ 文中/ 对/ 现有/ 的/ 该类/ 系统/ 的/ 体系结构/ 进行/ 模块/ 划分/ ,/ 并/ 对/ 各/ 模块/ 的/ 实现/ 策略/ 进行/ 讨论/ ;/ 特别/ 是/ 对/ VoD/ // P2P/ 实现/ 中/ 的/ 3/ 个/ 主要/ 方面/ ,/ 即/ 数据传输/ 、/ 数据/ 存储/ 、/ 激励机制/ 进行/ 了/ 综述/ ./ 关键词/ 对/ 等/ 网络/ ;/ 视频点播/ ;/ 传输/ 拓扑/ ;/ 编码方案/ 1/ 引言/ 20/ 世纪/ 90/ 年代/ ,/ 在/ 万维网/ 取得/ 了/ 巨大成功/ 之/ Page2/ 等/ 一系列/ 算法/ ./ 但/ 点播/ 不同于/ 传统/ 的/ Web/ 应用/ ,/ 其/ 高带宽/ 消耗/ 、/ 时延/ 敏感/ 的/ 特性/ 很快/ 使/ C/ // S/ 结构/ 暴露出/ 可扩展性/ 差/ 的/ 问题/ ./ 于是/ ,/ 一个/ 自然而然/ 的/ 想法/ 是/ 将/ 多个/ 服务器/ 分散/ 部署/ 到/ 网络/ 中/ ,/ 当/ 用户/ 点播/ 节目/ 时/ ,/ 可以/ 从/ 距离/ 自己/ 最近/ 的/ 服务器/ 取得/ 数据/ ./ 这/ 就是/ CDN/ (/ ContentDistributionNetworks/ )/ 的/ 思想/ ,/ 它/ 一定/ 程度/ 上/ 提高/ 了/ 点播/ 系统/ 的/ 可扩展性/ ,/ 但/ 同时/ 引入/ 了/ 新/ 的/ 问题/ :/ 由于/ 需要/ 很多/ 服务器/ ,/ 整个/ 系统/ 的/ 部署/ 与/ 维护/ 将/ 非常/ 昂贵/ ./ 对于/ 这个/ 问题/ ,/ 人们/ 很快/ 有/ 了/ 解决办法/ :/ 他们/ 发现/ 用户/ 终端/ 的/ 性能/ 不断/ 提高/ ,/ 甚至/ 可以/ 达到/ 服务器/ 的/ 标准/ ./ 由此/ ,/ 基于/ 对/ 等/ 网络/ 的/ 视频点播/ 系统/ (/ 下文/ 称为/ VoD/ // P2P/ )/ 出现/ 了/ ./ 视频点播/ 并/ 不是/ 采用/ P2P/ 技术/ 的/ 最初/ 应用/ ,/ 事实上/ 在/ 它/ 之前/ ,/ 基于/ P2P/ 的/ 文件共享/ 系统/ 已经/ 非常/ 流行/ ./ 第一个/ 现代/ 意义/ 上/ 的/ P2P/ 文件共享/ 系统/ 开始/ 于/ 1999/ 年/ ,/ 一个/ 年仅/ 18/ 岁/ 的/ 美国/ 人/ 开发/ 了/ Napster/ ,/ 并/ 在/ 它/ 上面/ 共享/ 音乐文件/ ./ Napster/ 迅速/ 流行/ ,/ 在/ 2001/ 年/ 达到/ 了/ 150/ 万/ 最高/ 在线/ 用户/ ./ 虽然/ Napster/ 最终/ 因为/ 版权/ 问题/ 而/ 停止/ 运行/ ,/ 但/ 它/ 引发/ 了/ P2P/ 使用/ 的/ 高潮/ ./ 在/ 它/ 之后/ 很多/ 类似/ 的/ 系统/ ,/ 如/ Gnutella/ 、/ KaZaA/ 、/ eDonkey/ 、/ Bittorrent/ 等/ ,/ 今天/ 仍/ 被/ 广泛/ 使用/ ./ 在/ 文件共享/ 系统/ 之后/ ,/ P2P/ 的/ 另/ 一个/ 重要/ 应用/ 是/ 视频/ 直播/ ./ 大约/ 从/ 2004/ 年底/ 到/ 2005/ 年/ ,/ 基于/ P2P/ 的/ 网络/ 视频/ 渐渐/ 流行起来/ ,/ 如/ Coolstreaming/ 、/ GridMedia/ 、/ PPLive/ 、/ PPStream/ 等/ ./ 这些/ 系统/ 通过/ 转播/ 体育/ 娱乐节目/ ,/ 吸引/ 了/ 大量/ 用户/ ./ 到/ 了/ 2007/ 年/ ,/ P2P/ 直播/ 已经/ 取得/ 了/ 相当/ 成功/ ,/ 几乎/ 没有/ 人/ 怀疑/ 它/ 的/ 广阔/ 前景/ ./ 也/ 就/ 在/ 这时/ ,/ 很多/ 公司/ ,/ 包括/ PPStream/ 、/ PPLive/ 、/ UUSee/ 、/ VeohTV/ 、/ Joost/ ,/ 推出/ 了/ 另/ 一个/ 更具/ 挑战性/ 的/ 业务/ —/ —/ —/ P2P/ 点播/ ./ 文件共享/ 、/ 视频/ 直播/ 、/ 视频点播/ 有/ 一个/ 共同/ 的/ 特点/ :/ 耗/ 带宽/ ./ 为了/ 提高/ 系统/ 的/ 可扩展性/ 并/ 降低成本/ ,/ P2P/ 技术/ 成为/ 它们/ 的/ 首选/ ./ 但是/ ,/ 采用/ P2P/ 技术/ 又/ 有/ 一些/ 不利/ 的/ 因素/ ./ 例如/ ,/ P2P/ 网络/ 是/ 动态/ 的/ 、/ 不/ 稳定/ 的/ (/ churning/ )/ ,/ 节点/ 的/ 上线/ 、/ 下线/ 是/ 任意/ 的/ ./ 如果/ 正在/ 提供/ 服务/ 的/ 节点/ 突然/ 下线/ 了/ ,/ 将会/ 对/ 接收/ 服务/ 的/ 节点/ 造成/ 影响/ ./ 而且/ ,/ P2P/ 网络/ 中/ 节点/ 的/ 差异性/ 很大/ ,/ 如/ 上传/ 带宽/ ,/ 有/ 一些/ 校园网/ 用户/ 可以/ 达到/ 100Mbps/ ,/ 但/ 某些/ ADSL/ 用户/ 可能/ 只有/ 几百/ Kbps/ ,/ 甚至/ 达/ 不到/ 一个/ 视频/ 的/ 平均码率/ ./ 这些/ 因素/ 对/ 文件共享/ 系统/ 来说/ ,/ 可能/ 只是/ 影响/ 文件/ 的/ 下载/ 时间/ ;/ 但/ 对/ 时延/ 敏感/ 的/ 视频/ 直播/ 、/ 点播/ 应用/ ,/ 却/ 可能/ 造成/ 播放/ 不/ 流畅/ ,/ 甚至/ 无法/ 播放/ 的/ 严重后果/ ./ 视频/ 的/ 直播/ 与/ 点播/ ,/ 虽然/ 相似/ ,/ 但/ 又/ 有/ 很多/ 不同之处/ ./ 直播/ 更/ 像/ 电视/ ,/ 用户/ 只能/ 选择/ 看/ 或/ 不/ 看/ ,/ 并/ 没有/ 太多/ 的/ 交互性/ ;/ 点播/ 则/ 更/ 像/ DVD/ ,/ 用户/ 可以/ 选择/ 何时/ 播放/ ,/ 并且/ 在/ 观看/ 过程/ 中/ 可以/ 进行/ 暂停/ 、/ 恢复/ 、/ 拖动/ 播放/ 等/ VCR/ 操作/ ./ 因此/ ,/ 同一/ 频道/ 不同/ 用户/ 的/ 播放/ 进度/ ,/ 在/ 直播/ 中是/ 相近/ 的/ ,/ 而/ 在/ 点播/ 中/ 却/ 可能/ 相差/ 很大/ ./ 播放/ 进度/ 差异/ 的/ 直接/ 影响/ 是/ ,/ 用户/ 间/ 数据共享/ 的/ 机会/ 更少/ ./ 因此/ 在/ 实现/ 上/ ,/ 点播/ 比/ 直播/ 更具/ 挑战性/ ./ 表/ 1/ 给出/ 了/ 基于/ P2P/ 的/ 视频/ 直播/ 与/ 视频点播/ 的/ 一个/ 比较/ ./ 表/ 1/ 基于/ P2P/ 的/ 视频/ 直播/ 与/ 视频点播/ 的/ 比较/ 请求/ 并发/ 性/ 请求/ 并发/ 性/ 高端/ 到/ 端/ 延迟/ 希望/ 尽可能/ 小/ 频道/ 数量/ 一般/ 较/ 少/ ,/ 用户/ 集中/ 于/ VCR/ 要求/ 实时/ 节目/ ,/ 交互性/ 少/ 一般/ 支持/ 暂停/ 、/ 恢复/ 、/ 数据共享/ 难度/ 用户/ 间/ 播放/ 进度/ 差异/ 面对/ 高带宽/ 、/ 高/ 存储/ 、/ 高/ 实时/ 要求/ 的/ VoD/ 应用/ ,/ P2P/ 网络/ 中/ 有限/ 的/ 资源/ 可用性/ 的/ 问题/ 显得/ 非常/ 突出/ ./ 这/ 表现/ 在/ 两个/ 方面/ :/ (/ 1/ )/ 由于/ 节点/ 硬件/ 条件/ (/ 带宽/ 、/ 存储/ )/ 的/ 限制/ ,/ 能/ 提供/ 的/ 资源/ 是/ 有限/ 的/ ;/ (/ 2/ )/ 由于/ 缺乏/ 一个/ 有效/ 的/ 激励机制/ ,/ 节点/ 愿/ 提供/ 的/ 资源/ 是/ 有限/ 的/ ./ 目前/ ,/ 虽然/ 已有/ 很多/ 大型/ 的/ VoD/ // P2P/ 系统/ ,/ 如/ PPLive/ 、/ PPStream/ 、/ 迅雷/ 等/ ,/ 但/ 它们/ 在/ 很大/ 程度/ 上/ 依赖于/ 服务器/ 或/ CDN/ ,/ 因而/ 普遍存在/ “/ 成本/ 过高/ 、/ 盈利/ 困难/ ”/ 的/ 问题/ ./ 本文/ 致力于/ 研究/ 如何/ 在/ VoD/ 应用/ 中/ 发挥/ P2P/ 技术/ 的/ 优势/ ,/ 对/ VoD/ // P2P/ 系统/ 在/ 3/ 个/ 方面/ 作/ 综述/ ,/ 也/ 就是/ :/ (/ 1/ )/ 数据传输/ ./ 讨论/ 如何/ 充分/ 地/ 利用/ 节点/ 的/ 有限/ 带宽/ ;/ (/ 2/ )/ 数据/ 存储/ ./ 讨论/ 如何/ 充分/ 地/ 利用/ 节点/ 的/ 有限/ 存储/ ;/ (/ 3/ )/ 激励机制/ ./ 讨论/ 如何/ 刺激/ 节点/ 贡献/ 资源/ ./ 本文/ 第/ 2/ 节/ 讨论/ VoD/ // P2P/ 的/ 数据传输/ ,/ 包括/ 传输/ 过程/ 中/ 的/ 拓扑/ 结构/ 以及/ 编码/ 技术/ ;/ 第/ 3/ 节/ 讨论/ VoD/ // P2P/ 的/ 数据/ 存储/ ,/ 包括/ 存储/ 过程/ 中/ 的/ 资源/ 查找/ 结构/ 、/ 编码方案/ 以及/ 替换/ 策略/ ;/ 第/ 4/ 节/ 讨论/ VoD/ // P2P/ 的/ 激励机制/ ,/ 介绍/ 3/ 种/ 常见/ 的/ 策略/ ;/ 最后/ ,/ 第/ 5/ 节/ 总结/ 全文/ ./ 2/ 传输/ 问题/ VoD/ // P2P/ 的/ 传输/ 希望/ 解决/ 如下/ 的/ 问题/ :/ 如何/ 从/ 一个/ 或/ 多个/ 源/ 节点/ 向/ 多个/ 目标/ 节点/ 分发/ 数据/ ,/ 使/ 之/ 在/ 动态/ 的/ 、/ 异构/ 的/ 网络/ 中/ :/ (/ 1/ )/ 保证/ 视频/ 的/ 传输率/ ,/ Page3/ 即/ 目标/ 节点/ 的/ 有效/ 输入/ 带宽/ 不能/ 小于/ 视频/ 的/ 码率/ ;/ (/ 2/ )/ 减少/ 用户/ 等待时间/ ,/ 即/ 用户/ 从/ 发出/ 点播/ 请求/ 到/ 视频/ 播放/ 的/ 时间/ 间隔/ 尽可能/ 短/ ;/ (/ 3/ )/ 降低/ 带宽/ 浪费/ ,/ 即/ 点播/ 不能/ 消耗/ 很多/ 不必要/ 的/ 带宽/ 而/ 影响/ 其它/ 应用/ ./ 近年来/ ,/ 对/ 传输/ 问题/ 的/ 研究/ 主要/ 集中/ 在/ 拓扑/ 结构/ 与/ 编码/ 技术/ 两/ 方面/ ./ 2.1/ 传输/ 中/ 的/ 拓扑/ 结构/ 在/ 早期/ 的/ 基于/ C/ // S/ 结构/ 的/ 点播/ 系统/ 中/ ,/ 人们/ 曾/ 希望/ 采用/ IP/ 组播/ 技术/ 来/ 降低/ 系统/ 的/ 带宽/ 消耗/ ./ 但/ 遗憾/ 的/ 是/ ,/ 在/ 实际/ 环境/ 中/ ,/ IP/ 组播/ 并/ 不能/ 很/ 好/ 地被/ 支持/ ./ 不过/ 借助于/ P2P/ ,/ IP/ 组播/ 可以/ 有/ 一个/ 替代/ 策略/ ,/ 即/ 应用层/ 组播/ (/ ApplicationLayerMulticast/ ,/ ALM/ )/ ./ 它/ 的/ 基本/ 思想/ 是/ ,/ 在/ 应用层/ ,/ P2P/ 网络/ 的/ 每个/ 节点/ 都/ 充当/ 路由器/ 的/ 角色/ ,/ 将/ 收到/ 的/ 数据/ 转发给/ 其它/ 多个/ 节点/ ./ 这/ 其实/ 是/ 在/ 应用层/ 构建/ 了/ 另/ 一个/ “/ 网络层/ ”/ ,/ 或/ 称为/ PeerOverlay/ ./ 本文/ 接下来/ 所说/ 的/ 传输/ 中/ 的/ 拓扑/ 结构/ ,/ 也/ 就是/ PeerOverlay/ 的/ 拓扑/ 结构/ ./ 在/ PeerOverlay/ 中/ ,/ 若/ 每个/ 节点/ 最/ 多/ 只有/ 一个/ 上游/ 节点/ 提供数据/ ,/ 称/ 这样/ 的/ 拓扑/ 为/ 单源/ 结构/ ./ 而/ 与/ 此对应/ 的/ ,/ 若/ 每个/ 节点/ 可以/ 有/ 多个/ 上游/ 节点/ 提供数据/ ,/ 称/ 这个/ 拓扑/ 为/ 多源/ 结构/ ./ 对/ 单源/ 、/ 多源/ 结构/ 的/ 一个/ 更/ 严格/ 的/ 定义/ 是/ :/ P2P/ 网络/ 中/ ,/ 针对/ 某/ 一个/ 频道/ ,/ 将/ 其中/ 的/ 节点/ 抽象/ 为/ 有向图/ 的/ 点/ ,/ 将/ 一个/ 节点/ 向/ 另/ 一个/ 节点/ 提供数据/ 的/ 链路/ 抽象/ 为/ 有向图/ 的/ 边/ ,/ 则/ 形成/ 一个/ 有向图/ G/ ;/ 如果/ G/ 中/ 每个/ 点/ 的/ 入度/ 不/ 大于/ 1/ ,/ 称/ G/ 是/ 单源/ 结构/ ,/ 反之/ ,/ 称/ G/ 为/ 多源/ 结构/ ./ 图/ 1/ 给出/ 了/ 不同/ 拓扑/ 的/ PeerOverlay/ 的/ 例子/ ./ 图/ 1/ 传输/ 中/ 的/ 拓扑/ 结构/ (/ 图中/ 箭头/ 表示/ 数据流/ 向/ )/ 在/ VoD/ // P2P/ 的/ 早期/ 研究/ 中/ ,/ 大多数/ 的/ 传输/ 拓扑/ 是/ 单源/ 结构/ 的/ ,/ 如/ 树状/ [/ 4/ -/ 9/ ]/ 、/ 链状/ [/ 10/ ]/ 、/ 环状/ [/ 11/ ]/ ./ 在/ P2Cast/ [/ 9/ ]/ 中/ ,/ 同一/ 频道/ 中/ 到达/ 时间/ 相近/ 的/ peer/ 组成/ 一个/ session/ ./ 在/ 每个/ session/ 中/ ,/ server/ 连同/ 这些/ peer/ 构成/ 一棵/ 应用层/ 的/ 组播/ 树/ ./ 那些/ 到达/ 时间/ 稍晚/ 的/ peer/ ,/ 也/ 可以/ 加入/ 到/ 某/ 一个/ session/ 中/ ,/ 并/ 从/ 这个/ session/ 的/ server/ 或/ peer/ 取得/ 它/ 所/ 错过/ 的/ 数据/ (/ 即/ 补丁/ 流/ )/ ./ 在/ 这个/ 系统/ 中/ ,/ peer/ 的/ 主要/ 作用/ 是/ :/ (/ 1/ )/ 作为/ 组播/ 树/ 的/ 节点/ 转发/ 数据/ ;/ (/ 2/ )/ 为/ 后继/ 的/ peer/ 提供/ 补丁/ 流/ ./ 在/ 文献/ [/ 10/ ]/ 中/ ,/ 为了/ 避免/ 上游/ 节点/ 由于/ 带宽/ 有限/ 而/ 成为/ 系统/ 瓶颈/ ,/ 作者/ 提出/ 了/ 一个/ 父子/ 交换/ 协议/ (/ ParentChildExchange/ ,/ PCX/ )/ ,/ 通过/ 某种/ 规则/ 动态/ 地/ 交换/ 上/ 、/ 下游/ 节点/ ,/ 以/ 优化/ 拓扑/ 结构/ ./ 为了/ 能/ 快速/ 修复/ 上游/ 节点/ 的/ 失效/ ,/ P2VoD/ [/ 8/ ]/ 将/ 到达/ 时间/ 相近/ 的/ 节点/ (/ 播放/ 进度/ 也/ 相近/ )/ 组织/ 在/ 一起/ ,/ 称为/ 一个/ Generation/ ./ 当某/ 节点/ 的/ 上游/ 节点/ 失效/ 后/ ,/ 该/ 失效节点/ 所在/ 的/ Generation/ 中/ 任何/ 一个/ 其它/ 节点/ 都/ 可以/ 替代/ 失效节点/ ,/ 成为/ 新/ 的/ 上游/ 节点/ ./ 类似/ 的/ 思想/ 也/ 出现/ 在/ 文献/ [/ 6/ -/ 7/ ]/ 中/ ./ 单源/ 结构/ 有/ 很多/ 优点/ ./ 首先/ ,/ 它/ 很/ 直观/ ,/ 从而/ 很/ 容易/ 对系统/ 进行/ 调试/ 和/ 评估/ ;/ 其次/ ,/ 当/ 系统/ 稳定/ 时/ ,/ 上游/ 节点/ 一般/ 知道/ 下游/ 节点/ 需要/ 什么/ 数据/ ,/ 从而/ 可以/ 通过/ 推/ 模式/ (/ push/ -/ based/ )/ 向/ 下游/ 提供数据/ ,/ 减小/ 端到/ 端/ 延迟/ ;/ 最后/ ,/ 因为/ 拓扑/ 简单/ ,/ 单源/ 结构/ 可以/ 理论/ 上/ 优化/ ,/ 以/ 达到最佳/ 的/ 系统/ 性能/ ./ 但是/ ,/ 单源/ 结构/ 又/ 有/ 很多/ 不足/ ,/ 表现/ 在/ :/ (/ 1/ )/ 资源/ 利用率/ 低/ ./ 只有/ 源/ 节点/ 与/ 中间/ 节点/ 提供数据/ ,/ 而/ 大量/ 的/ 叶子/ 节点/ 并/ 不/ 提供数据/ ,/ 它们/ 的/ 资源/ (/ 主要/ 是/ 上传/ 带宽/ )/ 并/ 没有/ 得到/ 有效/ 利用/ ./ 这/ 导致/ 的/ 另/ 一个/ 后果/ 是/ 负载/ 不/ 均衡/ ;/ (/ 2/ )/ 对/ 服务/ 节点/ 要求/ 太高/ ./ 单源/ 结构/ 中/ ,/ 一个/ 节点/ 要/ 提供/ 服务/ ,/ 它/ 的/ 上传/ 带宽/ 必须/ 大于/ 视频/ 码率/ ./ 由于/ 单源/ 结构/ 的/ 缺点/ ,/ 多源/ 结构/ 逐渐/ 流行起来/ ./ 其/ 思想/ 是/ :/ 将/ 原始/ 视频/ 转换成/ 很多/ 数据/ 块/ ,/ 一个/ 节点/ 同时/ 从/ 若干个/ 不同/ 的/ 上游/ 节点/ 取得/ 不同/ 的/ 数据/ 块/ ,/ 当/ 收集/ 到/ 足够/ 数量/ 的/ 块/ 时/ ,/ 就/ 可以/ 恢复/ 出/ 原始/ 视频/ ./ 多源/ 结构/ 可以/ 有效/ 地/ 避免/ 单源/ 的/ 不足/ :/ 由于/ 节点/ 间/ 相互交换/ 数据/ 块/ ,/ 每个/ 节点/ 都/ 可以/ 贡献/ 资源/ ,/ 资源/ 利用率/ 更高/ ;/ 通过/ 将/ 视频/ 分成/ 很小/ 粒度/ 的/ 数据/ 块/ ,/ 也/ 降低/ 了/ 节点/ 能/ 提供/ 服务/ 的/ 门槛/ ./ 从/ 本质/ 上/ 说/ ,/ 多源/ 结构/ 由于/ 节点/ 间/ 相互/ 提供数据/ ,/ 没有/ 明确/ 的/ 上游/ 与/ 下游/ ,/ 其/ 拓扑/ 必然/ 是/ 网状/ 的/ ./ 但是/ 从/ 设计/ 的/ 角度/ ,/ 它/ 可以/ 分为/ 多/ 树结构/ [/ 12/ -/ 13/ ]/ 、/ 网状结构/ [/ 14/ -/ 22/ ]/ 、/ 混合结构/ [/ 23/ -/ 24/ ]/ 等/ ./ 多/ 树结构/ 通常/ 由/ 多棵/ 组播/ 树/ 组成/ ,/ 每/ 一棵/ 子树/ 对应/ 一个/ 视频/ 子流/ ;/ 而/ 网状结构/ 则/ 没有/ “/ 树/ ”/ 的/ 任何/ 特征/ ,/ 视频/ 数据/ 甚至/ 不/ 表现/ 为/ 具体/ 的/ 流/ ,/ 而是/ 以块/ 的/ 形式/ 传输/ ./ 图/ 1/ (/ b/ )/ 给出/ 了/ Page4/ 多/ 树结构/ 的/ 一个/ 例子/ ,/ 其中/ 的/ 视频/ 被/ 分成/ 两个/ 子流/ ./ 由于/ 需要/ 维护/ 多棵/ 组播/ 树/ ,/ 多/ 树结构/ 的/ 实现/ 较/ 复杂/ ,/ 反而/ 是/ 网状结构/ 由于/ 实现/ 简单/ 却/ 同样/ 有效/ ,/ 近年来/ 更加/ 流行/ ./ Coolstreaming/ [/ 18/ ]/ 是/ 一个/ 典型/ 的/ 网状结构/ ./ 在/ Coolstreaming/ 中/ ,/ 视频/ 按照/ 播放/ 顺序/ 被/ 分割/ 成/ 一系列/ 数据/ 块/ ./ 每个/ 节点/ 维护/ 若干个/ 与/ 自己/ 播放/ 进度/ 相近/ 的/ 节点/ ,/ 并/ 周期性地/ 与/ 它们/ 交换/ 信息/ ,/ 当/ 发现/ 其它/ 节点/ 有/ 自己/ 没有/ 的/ 数据/ 块/ 时/ ,/ 就/ 从/ 这些/ 节点/ 请求/ 数据/ ./ 在/ 文献/ [/ 22/ ]/ 中/ ,/ 作者/ 提出/ 了/ 一个/ 共同体/ (/ alliances/ )/ 的/ 概念/ ./ 一个/ 共同体/ 由/ 若干个/ 节点/ 组成/ ,/ 一个/ 节点/ 可以/ 参加/ 若干个/ 共同体/ ./ 在/ 共同/ 体内/ ,/ 按照/ 互利/ 的/ 原则/ ,/ 数据/ 是/ 协同/ 下载/ 与/ 共享/ 的/ ./ 这个/ 由/ 共同体/ 组成/ 的/ 网状结构/ ,/ 可以/ 抽象/ 为/ 小/ 世界/ 网络/ ,/ 从而/ 具有/ 小/ 世界/ 网络/ 的/ 某些/ 优点/ ./ 作者/ 认为/ 这样/ 的/ 一个/ 系统/ 有/ 更好/ 的/ 可扩展性/ ,/ 比/ Coolstreaming/ 有/ 更好/ 的/ QoS/ 保证/ ./ 多源/ 结构/ 比/ 单源/ 结构/ 有/ 更/ 大/ 的/ 优势/ ,/ 但是/ 在/ 采用/ 多源/ 结构/ 以前/ ,/ 有/ 一个/ 问题/ 需要/ 考虑/ :/ 由于/ 存在/ 多个/ 上游/ 节点/ ,/ 收到/ 的/ 数据/ 很/ 容易/ 造成/ 重复/ ,/ 从而/ 浪费/ 带宽/ ./ 通过/ 协商/ 可以/ 一定/ 程度/ 上/ 减少/ 数据/ 重复/ ,/ 但/ 由于/ 实际/ 环境/ 中/ 协商/ 并/ 不/ 总是/ 及时/ 的/ ,/ 数据/ 重复/ 的/ 情况/ 并/ 不能/ 避免/ ;/ 另一方面/ ,/ 协商/ 本身/ 引入/ 了/ 通信/ 开销/ 与/ 延迟/ ,/ 而且/ 在/ 协商/ 过程/ 中/ ,/ 带宽/ 并/ 不能/ 充分/ 地/ 利用/ ./ 幸运/ 的/ 是/ ,/ 还有/ 另/ 一种/ 处理/ 数据/ 重复/ 的/ 办法/ —/ —/ —/ 编码/ ./ 本文/ 接下来/ 讨论/ 传输/ 中/ 的/ 编码/ ./ 2.2/ 传输/ 中/ 的/ 编码/ 在/ VoD/ // P2P/ 的/ 数据传输/ 过程/ 中/ ,/ 编码/ 的/ 运用/ 主要/ 有/ 如下/ 目的/ :/ (/ 1/ )/ 增强/ 网络/ 容错性/ ./ 当/ 网络/ 丢包/ 或/ 上游/ 节点/ 失效/ 时/ ,/ 不/ 对/ 当前/ 节点/ 产生/ 影响/ ,/ 或/ 影响/ 很小/ ;/ (/ 2/ )/ 提高/ 数据/ 差异性/ ./ 即便/ 在/ 没有/ 协商/ 的/ 情况/ 下/ ,/ 从/ 不同/ 上游/ 节点/ 接收/ 的/ 数据/ 也/ 没有/ 重复/ ,/ 或者/ 产生/ 重复/ 的/ 概率/ 很小/ ;/ (/ 3/ )/ 适应/ 节点/ 异构/ 性/ ./ 将/ 原始/ 的/ 视频流/ 编码/ 成/ 若干/ 子流/ ,/ 每个/ 子流/ 的/ 带宽/ 要求/ 较/ 低/ ,/ 所以/ 那些/ 下载/ 带宽/ 较/ 小/ 的/ 节点/ 若/ 没有/ 能力/ 接收/ 整个/ 视频流/ ,/ 可以/ 接收/ 少量/ 的/ 子流/ ,/ 同样/ 可以/ 播放/ 视频/ (/ 清晰度/ 降低/ )/ ./ 本文/ 接下来/ 介绍/ 3/ 种/ 主要/ 的/ 编码/ 思想/ (/ 图/ 2/ )/ ,/ 即/ 多/ 描述/ 编码/ (/ MultipleDescriptionCoding/ ,/ MDC/ )/ 、/ 冗余/ 编码/ 、/ 网络/ 编码/ (/ NetworkCoding/ )/ ./ 多/ 描述/ 编码/ 是/ 为了/ 适应/ 网络/ 丢包/ ,/ 并/ 适应/ 不同/ 带宽/ 用户/ 而/ 提出/ 的/ 一种/ 编码/ 思想/ ./ 它/ 将/ 原始/ 的/ 视频流/ 编码/ 成/ 若干个/ 子流/ ,/ 取得/ 任意/ 数量/ 的/ 子流/ 都/ 可/ 解码/ 播放/ ,/ 并且/ 取得/ 的/ 流越/ 多/ ,/ 播放/ 质量/ 越高/ ./ 编码/ 的/ 具体/ 实现/ 有/ 多种/ ,/ 可以/ 是/ 基于/ 视频/ 的/ 时域/ 分割/ ,/ 也/ 可以/ 是/ 基于/ 视频/ 分层/ 编码/ ,/ 或者/ 是/ 一些/ 其它/ 的/ 设计/ [/ 25/ ]/ ./ 多/ 描述/ 编码/ 有/ 很/ 好/ 的/ 容错性/ ,/ 因此/ 它/ 在/ 很多/ 系统/ 中/ 被/ 采用/ [/ 12/ -/ 13/ ,/ 26/ -/ 27/ ]/ ./ 但/ 它/ 有/ 一个/ 很大/ 的/ 缺点/ ,/ 就是/ 当/ 编码/ 的/ 子流/ 数目/ 少时/ ,/ 并/ 不能/ 表现/ 它/ 的/ 优势/ ;/ 而/ 当子流/ 数目/ 多时/ ,/ 引入/ 的/ 带宽/ 开销/ 很大/ ./ 有/ 研究/ 表明/ [/ 28/ ]/ ,/ 当/ 编码/ 成/ 2/ 个子/ 流/ ,/ 引入/ 的/ 带宽/ 开销/ 大致/ 在/ 10/ %/ ~/ 50/ %/ ;/ 而/ 当/ 编码/ 成/ 8/ 个/ 流时/ ,/ 开销/ 在/ 20/ %/ ~/ 200/ %/ ./ 具体/ 的/ 开销/ 与/ 编码/ 实现/ 及/ 视频/ 内容/ 有/ 很大/ 的/ 关系/ ./ 与/ 多/ 描述/ 编码/ 相比/ ,/ 冗余/ 编码/ 和/ 网络/ 编码/ 引入/ 的/ 带宽/ 开销/ 则/ 小得多/ ,/ 一般/ 只是/ 编码/ 中/ 用到/ 的/ 一些/ 元/ 数据/ 信息/ ./ 事实上/ ,/ 冗余/ 编码/ 和/ 网络/ 编码/ 拥有/ 相同/ 的/ 算法/ 基础/ ,/ 即/ 或者/ 基于/ 数论/ 中/ 的/ 有限/ 域/ ,/ 或者/ 基于/ 图论/ 中/ 的/ 稀疏/ 二部/ 图/ ./ 为了/ 适应/ 点播/ 的/ “/ 边/ 下载/ 边/ 播放/ ”/ 的/ 特点/ ,/ 在/ 编码/ 前/ ,/ 视频文件/ 首先/ 按/ 播放/ 顺序/ 被/ 分割/ 成/ 若干段/ (/ 比如/ 每/ 1/ 段/ 有/ 1/ 秒/ 的/ 播放/ 时间/ )/ ,/ 称之为/ 原始数据/ 段/ ./ 基于/ 有限/ 域/ 的/ 编码/ 流程/ 是/ :/ 对/ 每/ 一个/ 原始数据/ 段/ ,/ 将/ 其平/ 分成/ N/ 块/ ,/ 然后/ 将/ 这/ N/ 数据/ 块/ 在/ GF/ (/ 2k/ )/ 域/ 上作/ 线性/ 叠加/ 以/ 生成/ 冗余/ 块/ ./ 当/ GF/ 域/ 足够/ 大时/ ,/ 生成/ 的/ 冗余/ 块间/ 线性相关/ 的/ 概率/ 很小/ ,/ 所以/ 任取/ N/ (/ 或/ 稍/ 大于/ N/ )/ 冗余/ 块/ 即可/ 解码/ 出/ 原始数据/ 段/ ./ 例如/ ,/ ReedSolomonCode/ 是/ 一个/ 常用/ 的/ 基于/ 有限/ 域/ 的/ 编码/ ./ 基于/ 稀疏/ 二部/ 图/ 的/ 编码/ 流程/ 是/ :/ 对/ 每/ 一个/ 原始数据/ 段/ ,/ 将/ 其平/ 分成/ N/ 块/ ,/ 然后/ 按照/ 某/ Page5/ 种/ 分布/ 从中/ 任选/ r/ 块/ (/ r/ / N/ )/ ,/ 并/ 将/ 这/ r/ 数据/ 块作/ “/ 异或/ ”/ 操作/ 以/ 生成/ 冗余/ 块/ ./ 为了/ 使/ 任取/ N/ (/ 或/ 稍/ 大于/ N/ )/ 冗余/ 块/ 即可/ 解码/ ,/ 实际/ 的/ 编码/ 过程/ 更/ 复杂/ 一些/ ./ 相关/ 的/ 编码/ 实例/ 包括/ TornadoCode/ [/ 29/ ]/ 、/ LTCode/ [/ 30/ ]/ 、/ RaptorCode/ [/ 31/ ]/ 等/ ./ 如果/ 一个/ 编码/ 可以/ 从/ 原始/ 块/ 中/ 生成/ 无穷/ 多/ 的/ 冗余/ 块/ ,/ 则/ 称/ 这个/ 编码/ 为/ ratelesscode/ ,/ 反之/ 则/ 称为/ ratedcode/ ./ 冗余/ 编码/ 与/ 网络/ 编码/ 的/ 主要/ 区别/ 在于/ ,/ 前者/ 是/ 离线/ 编码/ ./ 具体地说/ ,/ 冗余/ 编码/ 是/ 在/ 数据传输/ 前/ (/ 离线/ 状态/ 下/ )/ ,/ 将/ 原始数据/ 段/ 分成/ N/ 块/ ,/ 并/ 利用/ 某种/ 算法/ (/ 如/ ReedSolomonCode/ )/ 扩展/ 出/ M/ 块/ 冗余/ ,/ 从/ 这/ N/ +/ M/ 数据/ 块/ 中/ 任取/ 不同/ 的/ N/ 块/ 就/ 可/ 解码/ 出/ 原始数据/ ./ 冗余/ 编码/ 其实/ 更多地/ 针对/ 存储/ 而/ 非/ 传输/ [/ 32/ ]/ ,/ 因为/ 它/ 的/ 编码/ 过程/ 发生/ 在/ 传输/ 前/ ,/ 而且/ 它/ 的/ 优势/ 主要/ 表现/ 在/ 存储/ 中/ (/ 参见/ 第/ 3/ 节/ )/ ./ 但/ 在/ 传输/ 过程/ 中/ ,/ 同样/ 可以/ 因为/ 它/ 的/ “/ 冗余/ ”/ 而/ 得到/ 好处/ ./ 图/ 2/ (/ b/ )/ 、/ (/ c/ )/ 对/ 冗余/ 编码/ 与/ 没有/ 编码/ 的/ 方案/ 作/ 了/ 比较/ ./ 冗余/ 编码/ 的/ 一个/ 缺点/ 是/ ,/ 当/ 冗余/ 块数/ M/ 较/ 小时/ ,/ 在/ 没有/ 协商/ 的/ 情况/ 下/ ,/ 任取/ N/ 数据/ 块/ ,/ 因/ 发生/ 重复/ 而/ 不能/ 解码/ 的/ 概率/ 仍/ 较大/ (/ 如图/ 3/ 所示/ )/ ./ 例如/ N/ =/ 6/ ,/ M/ =/ 4/ 时/ ,/ 这个/ 概率/ 是/ 85/ %/ ;/ 即使/ M/ =/ 1000/ ,/ 这个/ 概率/ 仍/ 有/ 1.5/ %/ ./ 而/ 另一方面/ ,/ 当/ M/ 值/ 很大/ 时/ ,/ 按照/ 图/ 2/ (/ c/ )/ 的/ 结构/ ,/ 源/ 节点/ 需要/ 预先/ 缓存/ 很多/ 冗余/ 块/ ,/ 将/ 消耗/ 大量/ 存储空间/ ./ 当然/ ,/ 后/ 一个/ 问题/ 可以/ 通过/ 一边/ 编码/ 一边/ 发布/ 的/ 形式/ 解决/ ,/ 其实/ 这/ 已经/ 具有/ 了/ 网络/ 编码/ 的/ 某些/ 特征/ ./ 图/ 3/ 冗余/ 编码/ 的/ 数据/ 可用性/ ./ 采用/ ReedSolomon/ 编码/ ,/ 将/ 原始/ 视频/ 分成/ N/ =/ 6/ 块/ ,/ 然后/ 扩展/ 出/ M/ 个/ 冗余/ 块/ 。/ 横坐标/ 表示/ M/ 值/ ,/ 纵坐标/ 表示/ 当/ 网络/ 中/ 存在/ N/ 个/ 随机/ 的/ 数据/ 块/ 时/ ,/ 可以/ 解码/ 出/ 原始/ 视频/ 的/ 概率/ P/ ./ M/ =/ 0/ 表示/ 没有/ 编码/ 网络/ 编码/ 刚/ 产生/ 时/ [/ 33/ ]/ ,/ 就/ 被/ 认为/ 是/ 一种/ 很/ 有/ 前景/ 的/ 编码/ ./ 它/ 的/ 思想/ 是/ :/ 当/ 一个/ 源/ 节点/ 向/ 多个/ 目标/ 节点/ 组播/ 数据/ 时/ ,/ 中间/ 节点/ 在/ 转发/ 收到/ 的/ 数据/ 之前/ 先/ 进行/ 编码/ [/ 34/ -/ 37/ ]/ ./ 网络/ 编码/ 可以/ 让/ 网络/ 达到/ 最大/ 流/ 的/ 吞吐量/ ./ 图/ 2/ (/ d/ )/ 给出/ 了/ 网络/ 编码/ 的/ 一个/ 例子/ ./ 在/ 这个/ 例子/ 中/ ,/ 如果/ 不/ 采用/ 网络/ 编码/ ,/ A/ 、/ C/ 两/ 节点/ 至多/ 只有/ 一个/ 节点/ 能/ 播放/ 视频/ ./ Avalanche/ [/ 35/ ]/ 是/ 一个/ 采用/ 网络/ 编码/ 的/ 大型/ 内容/ 分发/ 网络/ ./ 实验/ 表明/ ,/ 该/ 系统文件/ 下载/ 时间/ 比/ 没有/ 编码/ 的/ 系统/ 缩短/ 了/ 2/ ~/ 3/ 倍/ ,/ 并且/ 采用/ 网络/ 编码/ 提高/ 了/ 系统/ 的/ 鲁棒性/ ./ 在/ rStream/ [/ 34/ ]/ ,/ 由于/ 采用/ 基于/ ratelesscode/ 的/ 网络/ 编码/ ,/ 每个/ 节点/ 理论/ 上/ 只要/ 能/ 支持/ 与/ 原始/ 视频/ 码率/ 相当/ 的/ 下载/ 速率/ 即可/ 播放/ ,/ 而/ 不用/ 担心/ 收到/ 的/ 数据/ 会/ 重复/ ,/ 因此/ 系统/ 主要/ 将/ 精力/ 放到/ 如何/ 最小化/ 端到/ 端的/ 延迟/ 上/ ./ 在/ Lava/ [/ 36/ ]/ 中/ ,/ 作者/ 对/ 直播/ // 点播/ 系统/ 中/ 网络/ 编码/ 的/ 作用/ 作/ 了/ 系统/ 的/ 研究/ ,/ 得出/ 的/ 结论/ 为/ :/ (/ 1/ )/ 网络/ 编码/ 可以/ 使流/ 调度/ 更加/ 细粒度/ 化/ ,/ 并/ 减少/ 数据/ 重复/ 和/ 带宽/ 消耗/ ;/ (/ 2/ )/ 网络/ 编码/ 可以/ 更好/ 地/ 适应/ 网络/ 动态性/ ;/ (/ 3/ )/ 对于/ 物理/ 带宽/ 刚刚/ 能/ 满足/ 视频/ 码率/ 的/ 用户/ ,/ 网络/ 编码/ 可能/ 是/ 最/ 有效/ 的/ 手段/ ./ 在/ 文献/ [/ 38/ ]/ 中/ ,/ 作者/ 对/ 基于/ ReedSolomonCode/ 的/ 网络/ 编码/ 可能/ 的/ 一些/ 问题/ 作/ 了/ 研究/ ,/ 主要/ 的/ 结论/ 是/ :/ (/ 1/ )/ 当/ 分块/ 数/ N/ 很大/ 时/ ,/ 矩阵/ 的/ 生成/ 和/ 转置/ 会/ 有/ 较大/ 的/ 计算/ 开销/ ;/ (/ 2/ )/ 当/ 冗余/ 块/ 粒度/ 较/ 小时/ ,/ 每个/ 块/ 包含/ 的/ 生成/ 信息/ 将/ 占/ 较大/ 比重/ ,/ 导致/ 较大/ 的/ 带宽/ 开销/ ;/ (/ 3/ )/ 网络/ 编码/ 过程/ 中/ ,/ 中间/ 节点/ 需要/ 等待/ 一定/ 数量/ 的/ 块/ 到达/ ,/ 然后/ 进行/ 再/ 编码/ ./ 如果/ 等待/ 的/ 块/ 较/ 多/ ,/ 则/ 很多/ 中间/ 节点/ 的/ 等待时间/ 的/ 累积/ 将/ 是/ 很/ 可观/ 的/ ,/ 导致/ 大/ 的/ 端/ 到/ 端/ 延时/ ;/ 如果/ 等待/ 的/ 块/ 较/ 少/ ,/ 则/ 再/ 编码/ 后/ 生成/ 的/ 块/ 的/ 线性相关/ 的/ 概率/ 会/ 增加/ ./ 在/ 文献/ [/ 39/ ]/ 中/ ,/ 作者/ 讨论/ 了/ 编码/ 中/ 一些/ 参数/ 的/ 选取/ ./ 表/ 2/ 列出/ 了/ 以上/ 3/ 种/ 编码/ 的/ 一个/ 比较/ ./ 表/ 2/ 多/ 描述/ 编码/ 、/ 冗余/ 编码/ 、/ 网络/ 编码/ 的/ 比较/ 增强/ 网络/ 容错性/ 很/ 明显提高/ 数据/ 差异性/ 不太/ 明显/ 明显/ 很/ 明显/ 满足/ 低/ 下载/ 速率/ 用户/ 算法/ 基础/ 视频/ 编码/ 理论/ 等/ 有限/ 域/ 、/ 图论/ 有限/ 域/ 、/ 图论/ 在线/ // 离线/ 编码/ 一般/ 离线/ 编码/ 离线/ 编码/ 在线/ 编码/ 引入/ 的/ 带宽/ 开销/ 一般/ 较大/ 一般/ 较/ 小/ 一般/ 较/ 小/ 2.3/ 传输/ 问题/ 的/ 总结/ VoD/ // P2P/ 的/ 传输/ 问题/ 关注/ 于/ 如何/ 充分利用/ 节点/ 的/ 带宽/ ./ 首先/ ,/ 为了/ 保证/ 网络/ 中/ 的/ 节点/ 都/ 可能/ 提供/ 资源/ ,/ 多源/ 结构/ 成为/ 一个/ 首选/ ;/ 其次/ ,/ 为了/ 适应/ 多源/ 结构/ 的/ 特点/ 以及/ 降低/ 用户/ 带宽/ 要求/ ,/ 视频/ 进行/ 了/ 分割/ ;/ 最后/ ,/ 为了/ 减少/ 数据/ 的/ 重复/ 以及/ 协商/ 开销/ ,/ 并/ 达到/ 网络/ 最大/ 流/ ,/ 网络/ 编码/ 可能/ 是/ 一个/ 主流/ ./ 与/ 传输/ 相关/ 的/ 另/ 一个/ 问题/ 是/ 数据/ 驱动/ 方式/ ,/ 基本/ 的/ 有/ 两种/ :/ (/ 1/ )/ 拉/ 策略/ (/ pull/ -/ based/ )/ ,/ 下游/ 节点/ 根据/ 自己/ 的/ 需要/ 从/ 上游/ 节点/ 请求/ 数据/ ./ 一般/ 包括/ 一个/ 协/ Page6/ 商/ 的/ 过程/ ,/ 在/ 协商/ 过程/ 中/ 可能/ 不能/ 充分利用/ 带宽/ ,/ 并且/ 有/ 延时/ ;/ (/ 2/ )/ 推/ 策略/ (/ push/ -/ based/ )/ ,/ 上游/ 节点/ 主动/ 将/ 数据/ 发送给/ 下游/ 节点/ ./ 这种/ 策略/ 可以/ 避免/ 拉/ 策略/ 的/ 缺点/ ,/ 但/ 可能/ 造成/ 数据/ 重复/ ,/ 特别/ 是/ 在/ 多源/ 结构/ 中/ ./ 虽然/ 在/ 采用/ 编码/ 后/ ,/ 数据/ 重复/ 的/ 概率/ 降低/ 很多/ ,/ 但/ 在/ 网络/ 波动/ 过程/ 中/ ,/ 由于/ 通信/ 不/ 及时/ 而/ 造成/ 的/ 数据/ 重复/ 是/ 不能/ 避免/ 的/ ./ 从/ 目前/ 看来/ ,/ 一种/ 合适/ 的/ 做法/ [/ 40/ ]/ 是/ ,/ 每隔/ 一段时间/ 做/ pull/ -/ based/ ,/ 而/ 在/ 这/ 段时间/ 过程/ 中/ 采用/ push/ -/ based/ ./ VoD/ // P2P/ 的/ 传输/ 问题/ ,/ 大约/ 从/ 2000/ 年/ 开始/ ,/ 一直/ 成为/ 该/ 领域/ 最热/ 的/ 问题/ ./ 但是/ ,/ 大部分/ 的/ 研究/ 都/ 假设/ 直播/ 环境/ ,/ 或者/ 热门/ 节目/ 的/ 点播/ (/ 类似/ 于/ 直播/ )/ ./ 对于/ 一个/ 大规模/ 、/ 大容量/ 的/ VoD/ // P2P/ 系统/ ,/ 这些/ 假设/ 可能/ 并/ 不/ 全面/ ./ 如何/ 处理/ 冷门/ 与/ 热门/ 节目/ 并存/ 的/ 系统/ ,/ 并/ 在/ 系统资源/ 不够/ 时作/ 怎样/ 的/ 调度/ 和/ 折中/ ,/ 可能/ 是/ 将来/ 的/ 一个/ 研究/ 点/ [/ 41/ ]/ ./ 另一方面/ ,/ 大多数/ 研究者/ 都/ 针对/ 某/ 一个/ 频道/ 的/ 性能/ 作/ 优化/ ,/ 并且/ 明确/ 或/ 不/ 明确/ 地/ 假设/ 一个/ 节点/ 只/ 参加/ 一个/ 频道/ ./ 但是/ 在/ 实际/ 情况/ 下/ ,/ 一个/ 节点/ 参加/ 多个/ 频道/ 的/ 情况/ 是/ 普遍/ 的/ ,/ 特别/ 是/ 系统/ 中/ 的/ 那些/ “/ 准/ server/ ”/ 节点/ ./ 如何/ 对/ 这些/ 节点/ 进行/ 调度/ ,/ 以/ 让/ 它们/ 对系统/ 的/ 贡献/ 达到/ 最大/ ,/ 也/ 是/ 将来/ 的/ 潜在/ 研究/ 点/ [/ 42/ ]/ ./ 3/ 存储/ 问题/ VoD/ // P2P/ 的/ 存储/ 希望/ 解决/ 如下/ 的/ 问题/ :/ 如何/ 将/ 海量/ 的/ 视频/ 数据/ 部署/ 到/ 系统/ 中/ 大量/ 的/ 节点/ 中/ ,/ 使/ 之/ 在/ 动态/ 的/ 、/ 异构/ 的/ 网络/ 中/ :/ (/ 1/ )/ 保证数据/ 可用性/ ./ 即/ 任意/ 节点/ 在/ 任意/ 时刻/ 任意/ 网络/ 位置/ ,/ 都/ 可以/ 访问/ 已/ 存在/ 于/ 系统/ 中/ 的/ 任意/ 视频/ ;/ (/ 2/ )/ 节点/ 负载/ 均衡/ ./ 即/ 存储/ 应/ 足够/ 分散/ ,/ 从而/ 避免/ 某些/ 节点/ 承载/ 大量/ 服务/ 而/ 某些/ 节点/ 闲置/ 的/ 情况/ ;/ (/ 3/ )/ 高效/ 的/ 资源/ 定位/ ./ 即/ 对/ 任意/ 视频/ ,/ 可以/ 迅速/ 得到/ 其所/ 存储/ 的/ 网络/ 位置/ ;/ (/ 4/ )/ 视频/ 的/ 细粒度/ 随机/ 访问/ 和/ 低/ 延迟/ ./ 其中/ 最后/ 一点/ ,/ 是/ VoD/ // P2P/ 存储/ 与/ 文件共享/ 系统/ 的/ 最/ 主要/ 差别/ ./ 本节/ 接下来/ 将/ 介绍/ 存储/ 问题/ 的/ 3/ 个/ 主要/ 方面/ ,/ 即/ 资源/ 查图/ 4/ 存储/ 中/ 的/ 资源/ 查找/ 结构/ (/ 图中/ S/ 表示/ 服务器/ )/ 找/ 结构/ 、/ 编码方案/ 、/ 存储/ 调度/ ./ 3.1/ 存储/ 中/ 的/ 资源/ 查找/ 结构/ 面对/ P2P/ 网络/ 中/ 大量/ 的/ 节点/ ,/ 设计/ 一个/ 高效/ 的/ 资源/ 查找/ 算法/ 非常/ 重要/ ./ 但/ 在/ 实际/ 中/ ,/ 资源/ 查找/ 算法/ 与/ 节点/ 的/ 组织/ 方式/ 密切相关/ ,/ 因此/ 资源/ 查找/ 算法/ 的/ 设计/ 等价/ 于/ 资源/ 查找/ 结构/ 的/ 设计/ ,/ 并/ 通常/ 考虑/ 如下/ 因素/ :/ 快速/ 的/ 资源/ 定位/ 与/ 访问/ 、/ 系统/ 的/ 可扩展性/ 以及/ 小/ 的/ 开销/ ./ 目前/ ,/ 常见/ 的/ 资源/ 查找/ 结构/ 包括/ 中心化/ 的/ P2P/ 网络/ 、/ 非/ 中心/ 的/ P2P/ 网络/ 以及/ 层次化/ Cluster/ 结构/ (/ 图/ 4/ )/ ./ 在/ 中心化/ 的/ P2P/ 网络/ 中/ [/ 6/ ,/ 9/ ,/ 12/ ]/ ,/ 一般/ 存在/ 一个/ 索引/ 服务器/ (/ IndexServer/ 或/ Tracker/ )/ ,/ 管理网络/ 中/ 的/ 节点/ 与/ 资源/ ./ 虽然/ 这种/ 结构/ 有/ 可扩展性/ 差/ 、/ 单点/ 失败/ 等/ 缺点/ ,/ 但/ 却是/ 实际/ 系统/ 中/ 最/ 常见/ 的/ ,/ 原因/ 如下/ :/ (/ 1/ )/ 系统/ 实现/ 简单/ ;/ (/ 2/ )/ 索引/ 服务器/ 掌握/ 整个/ 系统/ 的/ 信息/ ,/ 因此/ 对/ 资源/ 的/ 查找/ 非常/ 迅速/ ,/ 并且/ 容易/ 对系统/ 作/ 优化/ ;/ (/ 3/ )/ P2P/ 网络/ 的/ 安全/ 问题/ 并/ 没有/ 很/ 好/ 解决/ ,/ 采用/ 中心化/ 的/ 服务器/ 对系统/ 有/ 更好/ 的/ 可控性/ ;/ (/ 4/ )/ 虽然/ 可能/ 单点/ 失败/ ,/ 但/ 在/ 大多数/ 情况/ 下/ ,/ 采用/ 专门/ 的/ 服务器/ 会/ 比/ 纯粹/ 的/ P2P/ 网络/ 更/ 稳定/ ;/ (/ 5/ )/ 可扩展性/ 问题/ 可以/ 通过/ 部署/ 多个/ 服务器/ 的/ 方式/ 解决/ ./ 与/ 中心化/ P2P/ 网络/ 相对/ 应/ 的/ 是非/ 中心/ 的/ P2P/ 网络/ [/ 13/ ,/ 20/ ,/ 43/ ]/ ./ 在/ 这种/ 网络/ 中路/ 由/ 是/ 一个/ 有意思/ 的/ 问题/ ,/ 即/ 如何/ 将/ 消息/ 快速/ 发送到/ 某个/ 给定/ ID/ 的/ 节点/ ./ 通常/ 这些/ 系统/ 都/ 使用/ 了/ 基于/ 超/ 立方体/ 的/ 路由/ 思想/ ./ 如果/ 将/ 网络/ 中/ 的/ 节点/ 映射/ 成超/ 立方体/ 的/ 顶点/ ,/ 那/ 是/ Chord/ [/ 44/ ]/ 、/ Pastry/ [/ 45/ ]/ 、/ Tapestry/ [/ 46/ ]/ 的/ 思想/ ;/ 而/ 如果/ 将/ 超/ 立方体/ 的/ 每/ 条边/ 进一步/ 划分/ 以/ 形成/ 更/ 多/ 的/ 点/ (/ 相当于/ 笛卡儿/ 坐标系/ 中/ 的/ 点/ )/ ,/ 则/ 是/ CAN/ [/ 47/ ]/ 的/ 思想/ ./ 限于/ 篇幅/ ,/ 本文/ 对/ 具体/ 的/ 路由/ 过程/ 不再/ 展开/ ./ 假设/ 这样/ 的/ 路由/ 算法/ 已经/ 实现/ ,/ 则/ 可以/ 在/ 它/ 的/ 基础/ 上/ 构建/ 分布式/ 哈希/ (/ DistributedHashTable/ ,/ DHT/ )/ ,/ 以/ 实现/ 资源/ 定位/ ./ DHT/ 的/ 基本/ 思想/ 是/ :/ 系统/ 中/ ,/ 节点/ 与/ 文件/ 有/ 相同/ 的/ ID/ 格式/ ,/ 一个/ 文件/ 的/ 元/ 信息/ (/ 例如/ 存储/ 该/ 文件/ 的/ 节点/ IP地址/ 、/ 文件/ 热度/ 等/ ,/ 但/ 不/ 包括/ 文件/ 本身/ )/ ,/ 由/ 具有/ 与/ 该/ 文件/ 相同/ ID/ 的/ 节点/ 维护/ ;/ 当/ 需要/ Page7/ 定位/ 某一/ 文件/ 时/ ,/ 只要/ 向/ 那个/ 与/ 文件/ 有/ 相同/ ID/ 的/ 节点/ 发送/ 请求/ 即可/ ./ 当然/ ,/ 实际/ 的/ 实现/ 会/ 复杂/ 一些/ ./ 当/ 系统/ 中/ 节点/ 数为/ n/ 时/ ,/ DHT/ 一般/ 可以/ 在/ O/ (/ logn/ )/ 或者/ O/ (/ dn1/ // d/ )/ (/ d/ 是/ 维度/ 常数/ )/ 步内/ 定位/ 资源/ ./ 由于/ DHT/ 将/ 负载/ 分散/ 到/ 网络/ 中/ ,/ 可以/ 达到/ 很/ 好/ 的/ 可扩展性/ ;/ 由于/ 系统/ 没有/ 中心/ ,/ 也/ 避免/ 了/ 单点/ 失败/ ./ 但是/ DHT/ 的/ 查询/ 时间/ 通常/ 比/ 基于/ 中心/ 服务器/ 的/ 结构/ 要长/ ,/ 当/ 网络/ 不/ 稳定/ 时/ 维护/ 开销/ 很大/ ,/ 并且/ 存在/ 安全/ 问题/ ,/ 系统/ 可控性/ 差/ ./ 另一方面/ ,/ DHT/ 是/ 基于/ ID/ 定位/ 资源/ 的/ ,/ 所以/ 一般/ 不/ 考虑/ 网络/ 位置/ (/ Pastry/ [/ 45/ ]/ 等/ 除外/ )/ ,/ 也/ 不/ 支持/ 关键字/ 的/ 查询/ ./ 层次化/ Cluster/ 的/ 思想/ 来源于/ 无线/ 传感器/ 网络/ :/ 按/ 一定/ 的/ 规则/ 将/ 若干个/ 节点/ 组成/ Cluster/ ,/ 每个/ Cluster/ 选出/ 首领/ ,/ 这些/ 首领/ 组成/ 新/ 的/ Cluster/ ,/ 从而/ 形成/ 一个/ 层次化/ 的/ 结构/ ./ 在/ VoD/ // P2P/ 网络/ 中/ ,/ 节点/ 可以/ 根据/ 网络/ 位置/ [/ 6/ -/ 7/ ,/ 48/ -/ 49/ ]/ ,/ 相近/ 的/ 节点/ 组成/ 一个/ Cluster/ ;/ 也/ 可以/ 将/ 内容/ 相似/ [/ 50/ ]/ 的/ 节点/ 组成/ 一个/ Cluster/ ./ 当/ 一个/ 节点/ 需要/ 定位/ 资源/ 时/ ,/ 可以/ 从/ 自己/ 所处/ 的/ Cluster/ 开始/ ,/ 逐层/ 往/ 上/ 查询/ ./ 在/ 这类/ 系统/ 中/ ,/ 为了/ 提高/ 系统/ 的/ 性能/ ,/ 一般/ 将/ 最上层/ 的/ 首领/ 节点/ 设置/ 为/ server/ ./ 由于/ P2P/ 网络/ 的/ 动态性/ ,/ 实现/ 一个/ 自/ 适应/ 的/ 层次化/ Cluster/ 结构/ 比较复杂/ ./ 3.2/ 存储/ 中/ 的/ 编码/ 在/ VoD/ // P2P/ 系统/ 中/ ,/ 存储/ 编码/ 主要/ 是/ 为了/ 提高/ 数据/ 的/ 可用性/ ,/ 常用/ 的/ 方案/ 是/ 冗余/ 编码/ ./ 事实上/ ,/ 编码方案/ 已经/ 不再/ 是/ 一个/ 问题/ ,/ 因为/ 它/ 在/ 很多/ 容灾/ 系统/ 中/ 就/ 有/ 了/ 深入研究/ ./ 但是/ VoD/ // P2P/ 的/ 存储/ 编码/ 有/ 其/ 特殊性/ ,/ 表现/ 在/ :/ (/ 1/ )/ 为了/ 减小/ 计算/ 开销/ ,/ 存储/ 编码/ 需要/ 与/ 传输/ 编码/ 保持一致/ ./ 存储状态/ 下/ 的/ 网络/ 编码/ 可以/ 看成/ 是/ 一种/ 特殊/ 的/ 冗余/ 编码/ ./ (/ 2/ )/ 细粒度/ 的/ 编码/ ./ 例如/ ,/ 当/ 用户/ 请求/ 23/ 分钟/ 55/ 秒/ 的/ 数据/ 时/ ,/ 编码/ 粒度/ 为/ 1/ 分钟/ 的/ 方案/ 需要/ 将/ 整个/ 第/ 24/ 分钟/ 的/ 数据/ 解码/ 出来/ ,/ 而/ 编码/ 粒度/ 为/ 1/ 秒/ 的/ 方案/ 可以/ 只/ 解码/ 出/ 那/ 1/ 秒/ ./ 图/ 3/ 给出/ 了/ 不同/ 的/ 冗余/ 编码/ 与/ 数据/ 可用性/ 的/ 关系/ ./ 从中/ 可以/ 看出/ ,/ 扩展/ 的/ 冗余/ 块/ 数越/ 多/ ,/ 数据/ 可用性/ 越高/ ,/ 但是/ 安全/ 问题/ [/ 39/ ]/ 也/ 是/ 需要/ 考虑/ 的/ ./ 因为/ 当/ 冗余/ 块/ 较/ 少时/ ,/ 可以/ 对/ 每/ 一块/ 作/ 数字签名/ ,/ 以/ 保证数据/ 的/ 完整性/ ;/ 但/ 当/ 冗余/ 块/ 很多/ 时/ ,/ 数字签名/ 变得/ 不/ 可行/ ./ 对于/ 网络/ 编码/ ,/ 这个/ 问题/ 可能/ 更/ 突出/ ./ 3.3/ 存储/ 调度/ VoD/ // P2P/ 中/ 的/ 存储/ 调度/ 用于/ 应对/ 将来/ 的/ 数据/ 请求/ ,/ 它/ 关注/ 于/ 如何/ 以较/ 小/ 的/ 开销/ (/ 带宽/ 、/ 存储/ )/ 来/ 达到/ 任意/ 视频/ (/ 冷门/ 与/ 热门/ 节目/ )/ 、/ 任意/ 时刻/ 、/ 任意/ 网络/ 位置/ 的/ 数据/ 可用性/ ./ 这一/ 小节/ 主要/ 介绍/ 3/ 部分/ 内容/ :/ 前缀/ 缓存/ 、/ 预取/ 技术/ 、/ 替换/ 策略/ ./ 前缀/ 缓存/ 是/ 指/ 在/ 系统/ 中/ 维持/ 视频/ 的/ 开始/ 部分/ 一个/ 较/ 高/ 的/ 冗余度/ [/ 51/ -/ 52/ ]/ ./ 在/ 很多/ 情况/ 下/ ,/ VoD/ 系统/ 中/ 的/ 用户/ 并/ 不会/ 将/ 整段/ 视频/ 看/ 完/ ,/ 而/ 常常/ 只/ 播放/ 视频/ 的/ 开头/ 部分/ ./ 相对/ 于/ 视频/ 的/ 其它/ 部分/ ,/ 视频/ 前缀/ 有/ 更/ 高/ 的/ 访问率/ ,/ 因此/ 缓存/ 前缀/ 可以/ 使/ 存储/ 的/ 利用/ 更/ 合理/ ./ 但/ 这/ 只是/ 前缀/ 缓存/ 提出/ 的/ 一个/ 原因/ ,/ 而/ 另/ 一个/ 更/ 重要/ 的/ 因素/ 是/ :/ 由于/ 大多数/ 用户/ 是/ 从头开始/ 播放/ 视频/ 的/ (/ 在/ 实际/ 情况/ 中/ ,/ 视频/ 前缀/ 可能/ 是/ 播放/ 必须/ 的/ ,/ 因为/ 它/ 包含/ 了/ 视频/ 元/ 数据/ )/ ,/ 如果/ 视频/ 的/ 前缀/ 很/ 容易/ 找到/ 并/ 下载/ ,/ 将/ 减少/ 用户/ 的/ 等待时间/ ./ 在/ 实现/ 中/ ,/ 这个/ 策略/ 需要/ 考虑/ 前缀/ 冗余度/ 、/ 前缀/ 长度/ 等/ 参数/ 的/ 设置/ ./ COPACC/ [/ 52/ ]/ 是/ 一个多/ 代理/ 多/ peer/ 的/ 系统/ (/ 代理/ 可/ 看成/ 是/ server/ )/ ,/ 其中/ 视频/ 的/ 前缀/ 由/ 代理/ 存储/ ./ 预取/ 是/ 指/ 节点/ 在/ 带宽/ 剩余/ 的/ 情况/ 下/ ,/ 预先/ 下载/ 暂时/ 还/ 不会/ 被/ 使用/ 的/ 数据/ ,/ 这些/ 数据/ 将来/ 可能/ 会/ 被/ 本/ 节点/ 或/ 其它/ 节点/ 使用/ ./ 在/ VoD/ // P2P/ 系统/ 中/ ,/ 预取/ 技术/ 主要/ 是/ 为了/ 提高/ 系统/ 整体/ 性能/ ./ 预取/ 可以/ 分为/ 在线/ 预取/ 和/ 离线/ 预取/ ./ 前者/ 是/ 指/ 节点/ 在/ 视频/ 播放/ 过程/ 中/ ,/ 预先/ 取得/ 该/ 视频/ 的/ 其它/ 数据/ [/ 53/ -/ 56/ ]/ ;/ 后者/ 则/ 是/ 指/ 节点/ 在/ 没有/ 视频/ 播放/ 的/ 时候/ ,/ 预先/ 部署/ 某个/ 视频/ 的/ 数据/ [/ 57/ ]/ ./ 离线/ 预取/ 更/ 多/ 地/ 表现/ 为/ 替换/ 策略/ ,/ 所以/ 这里/ 的/ 预取/ 只/ 针对/ 在线/ 预取/ ./ 常用/ 的/ 预取/ 策略/ 有/ :/ (/ 1/ )/ 顺序/ 预取/ ,/ 指/ 按照/ 播放/ 顺序/ 预取/ 数据/ ;/ (/ 2/ )/ 随机/ 预取/ ,/ 指/ 随机/ 选择/ 要/ 预取/ 的/ 数据/ ;/ (/ 3/ )/ 最少/ 块/ 预取/ ,/ 指/ 优先/ 预取/ 局部/ 或/ 全局/ 最/ 稀少/ 的/ 块/ (/ rarest/ -/ first/ 策略/ )/ ./ 顺序/ 预取/ 一般/ 会/ 导致/ 节点/ 间/ 数据/ 差异性/ 变小/ 而/ 共享/ 困难/ ,/ 但/ 另一方面/ ,/ 由于/ 视频/ 是/ 顺序/ 播放/ 的/ ,/ 完全/ 的/ 随机/ 预取/ 或/ 最少/ 块/ 预取/ 将/ 导致/ 很差/ 的/ 播放/ 效果/ ./ 在/ 实际/ 过程/ 中/ ,/ 一般/ 将/ 一个/ 视频/ 分成/ 若干段/ ,/ 在/ 段/ 内/ 采用/ 随机/ 或/ 最少/ 块/ 预取/ ,/ 而/ 段间/ 顺序/ 预取/ ./ 最少/ 块/ 预取/ 比/ 随机/ 预取/ 效果/ 更好/ ,/ 但/ 由于/ 需要/ 知道/ 更/ 多/ 信息/ ,/ 也/ 会/ 带来/ 更/ 多/ 开销/ ./ 在/ RedCarpet/ [/ 55/ ]/ 中/ ,/ 采用/ 第/ 1/ 个/ 段/ 90/ %/ 的/ 概率/ 随机/ 预取/ ,/ 第/ 2/ 个/ 段/ 10/ %/ 的/ 概率/ 最少/ 块/ 预取/ 策略/ ./ 在/ P2Proxy/ [/ 54/ ]/ 中/ ,/ server/ 通过/ 自己/ 掌握/ 的/ 全局/ 信息/ 来/ 引导/ peer/ 预取/ 数据/ ./ 在/ 文献/ [/ 56/ ]/ 中/ ,/ He/ 等/ 提出/ 了/ 一个/ 有意思/ 的/ 预取/ 策略/ ./ 作者/ 试图/ 挖掘/ 视频/ 内部/ 的/ 相关性/ ,/ 预测/ 用户/ 的/ VCR/ 操作/ 可能/ 跳到/ 的/ 位置/ ,/ 以/ 提前/ 预取/ 相应/ 的/ 数据/ ./ 节点/ 的/ 存储空间/ 是/ 有限/ 的/ ,/ 替换/ 策略/ 决定/ 哪些/ 数据/ 需要/ 被/ 存储/ ,/ 哪些/ 数据/ 需要/ 被/ 替换/ ,/ 以/ 达到最佳/ 的/ 系统/ 性能/ [/ 43/ ,/ 58/ ]/ ./ 常用/ 的/ 替换/ 依据/ 包括/ 热度/ 、/ 使用率/ 等/ ./ 热度/ 反映/ 了/ 一个/ 节目/ 被/ 点播/ 的/ 次数/ ,/ 通常/ 热门/ Page8/ 的/ 节目/ 需要/ 更/ 高/ 的/ 冗余度/ ;/ 使用率/ 反映/ 了/ 一个/ 数据/ 块/ 被/ 访问/ 的/ 次数/ ,/ 使用率/ 低/ 的/ 块/ 一般/ 优先/ 被/ 替换/ 出去/ ./ 但是/ 一个/ 好/ 的/ 替换/ 策略/ 需要/ 考虑/ 更/ 多/ 因素/ :/ (/ 1/ )/ 如何/ 计算/ 热度/ 与/ 使用率/ ./ 使用/ 全局/ 的/ 信息/ 需要/ 更/ 多/ 开销/ ,/ 而/ 使用/ 局部/ 信息/ 可能/ 不会/ 很/ 准确/ ;/ (/ 2/ )/ 如何/ 适应/ 节点/ 的/ 异构/ 性/ ./ 在/ P2P/ 网络/ 中/ ,/ 节点/ 的/ 在线/ 时间/ 、/ 带宽/ 存储/ 性能/ 、/ 贡献/ 积极性/ 会/ 有/ 很大/ 差别/ ./ 如果/ 对/ 这些/ 节点/ 使用/ 相同/ 的/ 替换/ 策略/ 可能/ 会/ 有/ 问题/ ;/ (/ 3/ )/ 系统/ 在/ 保证/ 热门/ 节目/ 的/ 同时/ ,/ 也/ 需要/ 考虑/ 冷门/ 节目/ 的/ 可用性/ ./ 很多/ 系统/ 都/ 研究/ 了/ peer/ 与/ server/ 的/ 协同/ 缓存/ 问题/ ./ 在/ PROP/ [/ 43/ ]/ 中/ ,/ 提出/ 了/ 一个/ 缓存/ 策略/ ,/ 由/ proxy/ 缓存/ 热门/ 的/ 节目/ ,/ 而/ 由/ peer/ 依据/ “/ 利用/ 度/ ”/ 缓存/ 其它/ 的/ 节目/ ./ “/ 利用/ 度/ ”/ 是/ 通过/ 热度/ 变换/ 而/ 来/ ,/ 一般/ 热门/ 或/ 冷门/ 的/ 节目/ 有/ 一个/ 小/ 的/ “/ 利用/ 度/ ”/ ,/ 而/ 热度/ 适中/ 的/ 节目/ 有/ 一个/ 大/ 的/ “/ 利用/ 度/ ”/ ./ 3.4/ 存储/ 问题/ 的/ 总结/ VoD/ // P2P/ 的/ 存储/ 问题/ 关注/ 于/ 如何/ 充分利用/ 节点/ 的/ 存储/ ./ 在/ 编码方案/ 上/ ,/ 冗余/ 编码/ 可/ 提高/ 数据/ 的/ 可用性/ ,/ 可能/ 是/ 将来/ 的/ 主流/ ./ 在/ 资源/ 查找/ 结构/ 上/ ,/ 虽然/ DHT/ 等/ 非/ 中心化/ 结构/ 有/ 极好/ 的/ 可扩展性/ ,/ 但/ 由于/ 其/ 不/ 稳定/ 、/ 可控性/ 差/ 等/ ,/ 目前/ 并非/ 实际/ 系统/ 的/ 首选/ ;/ 反而/ 是/ 层次化/ Cluster/ 结构/ 可以/ 充分考虑/ 网络/ 位置/ ,/ 可能/ 是/ 将来/ 的/ 一个/ 选择/ ./ 但/ 由于/ 简单/ 有效/ ,/ 目前/ 实用/ 的/ 索引/ 系统/ 主要/ 还是/ 基于/ 中心化/ 结构/ 的/ ./ 存储/ 与/ 传输/ 是/ 密不可分/ 的/ ,/ 两者/ 共用/ 一套/ 编码方案/ ./ 通过/ 存储/ 调度/ ,/ 节点/ 间/ 有/ 更/ 多/ 的/ 数据共享/ 机会/ ,/ 从而/ 可以/ 更好/ 地/ 利用/ 带宽/ ./ 与/ P2P/ 直播/ 相比/ ,/ 点播/ 在/ 实际/ 中/ 遇到/ 的/ 一个/ 很大/ 的/ 问题/ 是/ “/ 无源/ 可用/ ”/ ,/ 因此/ 存储/ 可能/ 是/ 比/ 传输/ 更/ 重要/ 的/ 问题/ ./ 在/ 过去/ 的/ 近十年/ 中/ ,/ 由于/ 视频/ 直播/ 是/ 一个/ 主要/ 的/ 研究/ 焦点/ ,/ 存储/ 问题/ 并/ 没有/ 引起/ 足够/ 的/ 重视/ ./ 虽然/ VoD/ // P2P/ 可以/ 继承/ 文件共享/ 系统/ 以及/ 基于/ C/ // S/ 的/ VoD/ 的/ 相关/ 成果/ ,/ 但/ 这个/ 问题/ 的/ 研究/ 还/ 远远不够/ ./ 如何/ 将/ 存储/ 与/ 传输/ 更好/ 地/ 结合/ ,/ 如何/ 构建/ 一个/ 自/ 适应/ 的/ 位置/ 相关/ 、/ 内容/ 相关/ 、/ 兴趣/ 相关/ 的/ 小/ 世界/ 存储/ 网络/ ,/ 如何/ 设计/ 有效/ 的/ 替换/ 策略/ 等等/ ,/ 都/ 是/ 需要/ 进一步/ 研究/ 的/ ./ 4/ 激励/ 问题/ 有关/ 激励/ 问题/ 的/ 研究/ 最初/ 出现/ 在/ P2P/ 的/ 文件共享/ 系统/ ./ 一份/ 对/ Gnutella/ 的/ 研究/ [/ 59/ ]/ 指出/ ,/ 系统/ 中/ 70/ %/ 的/ 用户/ 不/ 共享/ 任何/ 文件/ ,/ 近/ 50/ %/ 的/ 请求/ 是/ 由/ 1/ %/ 的/ 用户/ 处理/ 的/ ./ 用户/ 这种/ 只/ 享受/ 服务/ 而/ 不/ 提供/ 服务/ 的/ 行为/ ,/ 通常/ 被/ 称为/ free/ -/ riding/ ./ 在/ VoD/ // P2P/ 中/ ,/ 普遍/ 的/ free/ -/ riding/ 行为/ 将/ 导致/ 频繁/ 的/ 点播/ 缓冲/ ,/ 这/ 将/ 迫使/ 运营商/ 不得不/ 部署/ 更/ 多/ 的/ 服务器/ ,/ 导致系统/ 成本上升/ ./ 因此/ ,/ 设计/ 一个/ 有效/ 的/ 激励机制/ ,/ 减少/ 或/ 避免/ 用户/ 的/ free/ -/ riding/ 行为/ ,/ 对/ VoD/ // P2P/ 非常/ 重要/ ./ 目前/ ,/ 常见/ 的/ 激励机制/ 可/ 分为/ 3/ 类/ :/ Tit/ -/ for/ -/ Tat/ (/ TFT/ )/ 、/ 不/ 对称/ TFT/ 、/ 虚拟/ 货币/ 机制/ ./ 4.1/ Tit/ -/ for/ -/ TatTFT/ 可以/ 看成/ 是/ 博弈论/ 的/ 一个/ 实例/ ,/ 其/ 核心思想/ 是/ :/ 提供/ 多少/ 服务/ ,/ 获取/ 多少/ 服务/ ./ 统计/ 服务/ 的/ 粒度/ 可以/ 是/ 字节数/ 、/ 块数/ 、/ 流数/ 、/ 上传/ 速率/ 等/ ,/ 并且/ 可能/ 是/ 一个/ 模糊/ 的/ 统计/ ./ 这种/ 机制/ 可/ 应用/ 于/ 一次/ 会话/ 中/ ,/ 以/ 避免/ free/ -/ riding/ [/ 26/ -/ 27/ ,/ 60/ ]/ ;/ 也/ 可以/ 基于/ 长期/ 行为/ ,/ 如/ 积分/ 机制/ 、/ 信誉/ 机制/ [/ 61/ -/ 62/ ]/ ./ 在/ Orchard/ [/ 26/ ]/ 中/ ,/ 视频/ 采用/ MDC/ 编码/ 分成/ 多个/ 流/ ,/ 一个/ 节点/ 下载/ 一个/ 流/ 就/ 需要/ 上传/ 一个/ 流/ ,/ 即/ 与/ 其它/ 节点/ 进行/ 流/ 交换/ ./ 由于/ 流越/ 多/ 视频/ 越/ 清晰/ ,/ 所以/ 有/ 能力/ 的/ 节点/ 就/ 会/ 倾向/ 于/ 上传/ 更/ 多/ 的/ 流/ ./ 虽然/ TFT/ 可以/ 很/ 好/ 地/ 应用/ 于/ BT/ 等/ 文件共享/ 系统/ 以/ 避免/ free/ -/ riding/ ,/ 但/ 对/ VoD/ 并/ 不/ 十分/ 适用/ ,/ 这/ 是因为/ :/ (/ 1/ )/ TFT/ 一般/ 通过/ 限制/ 下载/ 速率/ 来/ 惩罚/ 那些/ 提供/ 服务/ 较少/ 的/ 节点/ ,/ 这/ 对/ 文件/ 下载/ 的/ 影响/ 是/ 更长/ 的/ 下载/ 时间/ ,/ 但/ 对/ VoD/ 的/ 影响/ 是/ 视频/ 不能/ 播放/ ,/ 导致用户/ 流失/ ;/ (/ 2/ )/ TFT/ 在/ 文件/ 下载/ 中/ 取得成功/ 的/ 一个/ 重要/ 原因/ 是/ “/ rarest/ -/ first/ ”/ 的/ 数据/ 下载/ 策略/ ,/ 但/ VoD/ 通常/ 要求/ 顺序/ 地/ 下载/ 与/ 播放/ ,/ 因此/ 刚/ 开始/ 播放/ 的/ 节点/ 由于/ 缺乏/ 其它/ 节点/ 感兴趣/ 的/ 数据/ 而/ 不能/ 提供/ 服务/ ,/ 成为/ TFT/ 的/ 受害者/ ./ TFT/ 是/ 一种/ 公平/ 的/ 机制/ ,/ 但/ 这/ 也/ 导致/ 了/ 它/ 的/ 缺点/ :/ 那些/ 服务/ 能力差/ 的/ 节点/ 将/ 得不到/ 及时/ 的/ 服务/ ,/ 可能/ 无法/ 生存/ ./ 4.2/ 不/ 对称/ TFT/ 不/ 对称/ TFT/ 是/ 针对/ TFT/ 的/ 缺点/ 提出/ 的/ ,/ 它/ 要求/ 服务/ 能力/ 强/ 的/ 节点/ 贡献/ 更/ 多/ 资源/ ,/ 以/ 帮助/ 服务/ 能力差/ 的/ 节点/ ./ 在/ taxation/ [/ 63/ ]/ 中/ ,/ 不同/ 的/ 节点/ 有/ 不同/ 的/ 上传/ 指标/ ,/ 这/ 被/ 抽象/ 成/ 税收/ ,/ 服务/ 能力/ 强/ 的/ 节点/ 的/ 税率/ 更大/ 一些/ ./ 系统/ 将/ 这些/ 收取/ 的/ 税/ 当成/ 基本/ 社会福利/ ,/ 平分/ 给/ 系统/ 中/ 的/ 节点/ ./ 也就是说/ ,/ 节点/ 即使/ 不/ 提供/ 任何/ 服务/ ,/ 也/ 可以/ 拥有/ “/ 基本/ 社会福利/ ”/ 的/ 服务/ ./ 不/ 对称/ TFT/ 的/ 一个/ 极端/ 情况/ 是/ :/ 所有/ 加入/ 到/ 系统/ 中/ 的/ 节点/ 都/ 要求/ 毫不/ 保留地/ 提供/ 服务/ ./ 这/ 实际上/ 是/ 目前/ 很多/ 商业系统/ 的/ 做法/ [/ 64/ ]/ ,/ 它们/ 通过/ 客户端程序/ 强制/ 用户/ 贡献/ 资源/ ,/ 而/ 对/ 资源/ 贡献/ 的/ 多少/ 不加区分/ ,/ 节点/ 不会/ 因为/ 贡献/ 资源/ 多/ 而/ 得到/ 更好/ 服务/ ,/ 也/ 不会/ 因为/ 贡献/ 资源/ 少/ 而/ 得到/ 较差/ 服务/ ./ Page9/ 与/ TFT/ 不同/ ,/ 不/ 对称/ TFT/ 更多地/ 追求/ 平均化/ ,/ 因此/ 从/ 某种意义/ 上/ 说/ 它/ 不能/ 算是/ 激励机制/ ./ 但/ 这种/ 机制/ 有/ 如下/ 的/ 优点/ :/ (/ 1/ )/ 通过/ 照顾/ 服务/ 能力差/ 的/ 节点/ 扩大/ 了/ 用户/ 面/ ,/ 这/ 对/ 以/ 广告/ 作为/ 重要/ 收入/ 的/ 商业/ VoD/ // P2P/ 系统/ 非常/ 重要/ ;/ (/ 2/ )/ 强制性/ 地/ 利用/ 系统/ 中/ 所有/ 节点/ ,/ 特别/ 是/ 服务/ 能力/ 强/ 的/ 节点/ 的/ 资源/ ,/ 提高/ 了/ 系统/ 的/ 整体/ 性能/ ;/ (/ 3/ )/ 在/ 不/ 追求/ 公平/ 的/ 条件/ 下/ ,/ 这种/ 机制/ 实现/ 比较简单/ ./ 不/ 对称/ TFT/ 对/ 服务/ 能力/ 强/ 的/ 节点/ 是/ 不/ 公平/ 的/ ,/ 容易/ 造成/ 用户/ 反感/ ,/ 这些/ 节点/ 在/ 点播/ 结束/ 后/ 倾向/ 于/ 立即/ 退出/ 系统/ ,/ 从而/ 影响/ 系统/ 性能/ ./ 4.3/ 虚拟/ 货币/ 机制/ 虚拟/ 货币/ 机制/ [/ 65/ -/ 67/ ]/ 的/ 思想/ 是/ :/ 节点/ 提供/ 服务/ 增加/ 虚拟/ 货币/ ,/ 获取/ 服务/ 减少/ 虚拟/ 货币/ ./ 与/ 上文/ 提到/ 的/ 两类/ 机制/ 的/ 差别/ 是/ ,/ 虚拟/ 货币/ 机制/ 是/ 开放性/ 的/ ,/ 它/ 不/ 局限于/ 系统/ 内部/ ,/ 因为/ 虚拟/ 货币/ 可以/ 与/ 现实/ 货币/ 相互/ 转换/ (/ 出于/ 安全/ 的/ 考虑/ ,/ 一般/ 不/ 允许/ 用/ 虚拟/ 货币/ 兑换/ 现实/ 货币/ )/ ./ 也就是说/ ,/ 提供/ 服务/ 并/ 不是/ 增加/ 虚拟/ 货币/ 的/ 唯一/ 方式/ ,/ 节点/ 可以/ 通过/ 其它/ 途径/ 增加/ 自己/ 的/ 虚拟/ 货币/ ,/ 如向/ 系统/ 购买/ ./ 因此/ ,/ 即使/ 是/ 服务/ 能力差/ 的/ 节点/ ,/ 只要/ 拥有/ 足够/ 的/ 虚拟/ 货币/ ,/ 同样/ 可以/ 取得/ 好/ 的/ 服务/ ./ 虚拟/ 货币/ 机制/ 通常/ 要求/ 较/ 高/ 的/ 安全性/ ,/ 以/ 抵制/ 货币/ 造假/ 等/ 攻击/ ,/ 它/ 一般/ 涉及/ 认证/ 、/ 加密/ 、/ 签名/ 等/ 操作/ ,/ 因此/ 通常/ 依赖于/ PKI/ ./ 由于/ 保证/ 绝对/ 安全/ 需要/ 很大/ 的/ 开销/ ,/ 实际/ 系统/ 只/ 要求/ 足够/ 安全/ ,/ 即/ 做到/ 攻击/ 是/ 可/ 发现/ 的/ 、/ 可/ 跟踪/ 的/ 、/ 无/ 获益/ 的/ ./ 在/ Karma/ [/ 67/ ]/ 中/ ,/ 系统/ 通过/ 签名/ 为/ 每个/ 用户/ “/ 打造/ ”/ 一些/ 货币/ ,/ 当/ 用户/ A/ 转让/ 自己/ 的/ 货币/ 给/ 用户/ B/ 时需/ 附上/ 自己/ 的/ 签名/ ,/ 同样/ B/ 转让/ 给/ 用户/ C/ 时/ 也/ 要/ 附加/ 签名/ ,/ 由此/ 货币/ 本身/ 累积/ 了/ 交易/ 历史/ ,/ 当/ 历史/ 积累/ 到/ 一定/ 程度/ 时/ 需要/ 重新/ 更新/ 货币/ ,/ 并/ 删除/ 历史/ ./ 虚拟/ 货币/ 机制/ 是/ 公平/ 的/ ,/ 并且/ 照顾/ 到/ 了/ 服务/ 能力差/ 的/ 节点/ ,/ 但是/ 在/ 实现/ 中/ ,/ 除了/ 安全性/ 以外/ ,/ 有/ 以下/ 的/ 问题/ 是/ 需要/ 考虑/ 的/ :/ (/ 1/ )/ 服务/ 能力差/ 的/ 用户/ 需要/ 向/ 系统/ 购买/ 虚拟/ 货币/ ,/ 即/ 系统/ 中/ 增加/ 了/ 收费/ 用户/ ./ 面对/ 目前/ 国内/ 互联网服务/ 大多/ 免费/ 的/ 现状/ ,/ 向/ 用户/ 收费/ 存在/ 一定/ 的/ 难度/ ,/ 操作/ 不当/ 可能/ 导致用户/ 流失/ ;/ (/ 2/ )/ 服务/ 能力/ 强/ 的/ 节点/ 可能/ 累积/ 大量/ 的/ 虚拟/ 货币/ ,/ 系统/ 需要/ 提供/ 一条/ 途径/ 兑换/ 这些/ 货币/ ,/ 否则/ 这些/ 虚拟/ 货币/ 将/ 与/ 积分/ 一样/ 意义/ 不/ 大/ ,/ 从而/ 打击/ 这些/ 节点/ 进一步/ 提供/ 服务/ 的/ 积极性/ ./ 4.4/ 激励/ 问题/ 的/ 总结/ 激励/ 问题/ 关注/ 于/ 如何/ 刺激/ 系统/ 中/ 的/ 节点/ 贡献/ 资源/ ,/ 以/ 提高/ 系统/ 的/ 整体/ 性能/ ./ 在/ 设计/ 激励机制/ 时/ ,/ 即/ 要/ 考虑/ 公平性/ ,/ 又/ 要/ 考虑/ 节点/ 服务/ 能力/ 的/ 差异性/ ./ TFT/ 是/ 一种/ 公平/ 的/ 机制/ ,/ 但/ 没有/ 照顾/ 好/ 服务/ 能力/ 弱/ 的/ 节点/ ;/ 不/ 对称/ TFT/ 考虑/ 了/ 所有/ 节点/ 的/ 服务/ 能力/ ,/ 但/ 并/ 不/ 公平/ ;/ 虚拟/ 货币/ 机制/ 兼顾/ 了/ 两/ 方面/ 的/ 因素/ ,/ 但/ 存在/ 着/ 安全性/ 与/ 实际/ 推广/ 的/ 挑战/ ./ 激励/ 有/ 两个/ 目标/ :/ (/ 1/ )/ 刺激/ 节点/ 提供/ 更/ 多/ 的/ 服务/ ;/ (/ 2/ )/ 刺激/ 节点/ 在线/ 更长/ 的/ 时间/ ./ 到/ 目前为止/ ,/ 绝大多数/ 的/ 激励机制/ 都/ 专注/ 于/ 第/ 1/ 个/ 目标/ ,/ 通过/ 客户端程序/ 的/ 控制/ ,/ 这个/ 目标/ 的/ 实现/ 也/ 较/ 简单/ ./ 相比之下/ ,/ 第/ 2/ 个/ 目标/ 的/ 实现/ 较/ 困难/ ./ 很多/ VoD/ // P2P/ 用户/ 通常/ 在/ 完成/ 观看/ 后/ 及时/ 地/ 终止/ 客户端/ ,/ 因为/ 继续/ 保持/ 在线/ 并/ 没有/ 多少/ 好处/ ,/ 且/ 可能/ 影响/ 其它/ 的/ 应用/ ./ 虚拟/ 货币/ 机制/ 是/ 有/ 可能/ 实现/ 第/ 2/ 个/ 目标/ 的/ ,/ 一个/ 理想/ 的/ 情况/ 是/ ,/ P2P/ 用户/ 在/ 使用/ 服务/ 后/ 仍/ 乐意/ 保持/ 在线/ ,/ 因为/ 提供/ 服务/ 将/ 获得/ 虚拟/ 货币/ ,/ 而/ 这些/ 虚拟/ 货币/ 可以/ 通过/ 某些/ 途径/ 转化/ 为/ 其它/ 的/ 利益/ ./ 由于/ 这部分/ 用户/ 只/ 提供/ 服务/ 而/ 不/ 消耗/ 服务/ ,/ 将/ 极大/ 地/ 提升/ 整个/ 系统/ 的/ 性能/ ,/ 从而/ 降低/ VoD/ // P2P/ 系统/ 的/ 部署/ 和/ 运行/ 成本/ ./ 5/ 总结/ 本文/ 介绍/ 了/ VoD/ // P2P/ 系统/ 的/ 研究/ 历史/ 、/ 研究/ 现状/ 以及/ 面临/ 的/ 挑战/ ./ 由于/ VoD/ 的/ 高带宽/ 要求/ 、/ P2P/ 网络/ 的/ 不稳定性/ 和/ 异构/ 性/ ,/ 有限/ 的/ 资源/ 可用性/ 通常/ 是/ 这类/ 系统/ 的/ 一个/ 主要/ 挑战/ ./ 因此/ ,/ 本文/ 关注/ 于/ 如何/ 充分利用/ 系统/ 中/ 有限/ 的/ 资源/ ,/ 在/ 3/ 个/ 方面/ 进行/ 了/ 综述/ :/ (/ 1/ )/ 数据传输/ ./ 讨论/ 如何/ 充分利用/ 节点/ 的/ 带宽/ 资源/ ;/ (/ 2/ )/ 数据/ 存储/ ./ 讨论/ 如何/ 充分利用/ 节点/ 的/ 存储资源/ ;/ (/ 3/ )/ 激励机制/ ./ 讨论/ 如何/ 刺激/ 节点/ 贡献/ 更/ 多/ 资源/ ./ 经过/ 近十年/ 的/ 发展/ ,/ VoD/ // P2P/ 系统/ 的/ 一个/ 新/ 的/ 发展趋势/ 是/ :/ 虽然/ P2P/ 网络/ 是/ 动态/ 的/ 、/ 异构/ 的/ ,/ 但/ 其/ 统计/ 特性/ 是/ 好/ 的/ ,/ 如果/ 一个/ 服务/ 依赖于/ 很多/ 的/ 节点/ ,/ 就/ 不会/ 因为/ 个别/ 节点/ 的/ 失效/ 而/ 带来/ 很大/ 影响/ ./ 这个/ 思想/ 具体表现/ 在/ :/ (/ 1/ )/ 在/ 传输/ 中/ ,/ 通过/ 多源/ 结构/ 、/ 编码/ 技术/ ,/ 让/ 很多/ 个/ 节点/ 同时/ 为/ 一个/ 节点/ 服务/ ;/ (/ 2/ )/ 在/ 存储/ 中/ ,/ 通过/ 编码/ ,/ 将/ 一个/ 视频/ 分布/ 到/ 多个/ 节点/ 中/ ./ 在/ VoD/ // P2P/ 的/ 设计/ 过程/ 中/ ,/ 还有/ 诸如/ 安全/ 、/ 数字/ 版权/ 等/ 一系列/ 问题/ ./ 本文/ 由于/ 篇幅/ ,/ 并/ 没有/ 对/ 它们/ 进行/ 讨论/ ,/ 但/ 构建/ 一个/ 实用/ 的/ VoD/ // P2P/ 系统/ ,/ 所有/ 这些/ 问题/ 都/ 是/ 需要/ 考虑/ 的/ ./ Page10/ 

