Page1/ 面向/ DaaS/ 保护/ 隐私/ 的/ 模糊/ 关键字/ 查询/ 1/ )/ (/ 上海/ 电力/ 学院/ 计算机科学/ 与/ 技术/ 学院/ 上海/ 200090/ )/ 2/ )/ (/ 上海市/ 高/ 可信计算/ 重点/ 实验室/ 上海/ 200062/ )/ 3/ )/ (/ 华东师范大学/ 计算机科学/ 与/ 软件工程/ 学院/ 上海/ 200062/ )/ 摘要/ 由于/ 在/ 数据库/ 服务/ (/ DatabaseasaService/ ,/ DaaS/ )/ 模式/ 下/ ,/ 数据库/ 服务提供者/ 是/ 半/ 可信/ 的/ (/ Honest/ -/ But/ -/ Curious/ )/ ,/ 因此/ ,/ 为了/ 保证/ 外/ 包/ 数据/ 的/ 机密性/ 和/ 安全/ 可/ 查询/ ,/ 数据/ 拥有者/ 通常/ 采用/ 特定/ 的/ 加密技术/ 加密/ 外/ 包/ 数据/ ,/ 如/ 采用/ 可/ 搜索/ 加密技术/ 、/ 同态/ 加密技术/ 等/ 实现/ 外/ 包/ 加密/ 数据/ 上/ 的/ 安全/ 查询/ ./ 然而/ ,/ 且/ 当前/ 提出/ 的/ 大多数/ 方法/ 都/ 基于/ 关键字/ 精确/ 匹配/ 查询/ ,/ 即使/ 存在/ 少量/ 针对/ 加密/ 数据/ 上/ 的/ 模糊/ 查询/ ,/ 也/ 在/ 查询/ 效率/ 、/ 存储/ 开销/ 和/ 安全性/ 方面/ 存在/ 一定/ 的/ 局限性/ ,/ 不适/ 用于/ DaaS/ 数据库/ 服务/ 模式/ ./ 文中/ 首次/ 提出/ 了/ 融合/ 具有/ 高/ 编码/ 效率/ 的/ Huffman/ 编码/ 和/ 具有/ 数据/ 存储/ 优势/ 的/ 布鲁姆/ 过滤器/ ,/ 并/ 结合/ 现有/ 的/ 安全/ 加密/ 方法/ ,/ 实现/ 了/ DaaS/ 模式/ 下/ 保护/ 隐私/ 的/ 模糊/ 关键字/ 查询处理/ ./ 一方面/ ,/ 基于/ Huffman/ 编码/ 的/ 树型/ 索引/ 提供/ 了/ 较/ 高/ 的/ 查找/ 效率/ ;/ 另一方面/ ,/ 基于/ 布鲁姆/ 过滤器/ 的/ 模糊/ 关键字/ 集合/ 实现/ 了/ 较/ 小/ 的/ 存储/ 开销/ ./ 安全/ 分析/ 、/ 性能/ 分析/ 以及/ 真实/ 论文集/ 上/ 的/ 实验/ 结果/ 进一步/ 验证/ 了/ 文中/ 查询/ 算法/ 的/ 安全性/ 、/ 存储/ 开销/ 和/ 查询/ 效率/ ./ 关键词/ DaaS/ ;/ 模糊/ 查询/ ;/ 数据安全/ ;/ 哈/ 弗曼/ 编码/ ;/ 布鲁姆/ 过滤器/ ;/ 云/ 计算/ 1/ 引言/ 随着/ 网络/ 数据/ 的/ 日益/ 规模化/ 和/ 集成化/ ,/ 数据库/ 服务/ (/ DatabaseasaService/ ,/ DaaS/ )/ 逐渐/ 成为/ 大/ 数据/ 时代/ 下/ 数据/ 的/ 主要/ 存储/ 模式/ [/ 1/ -/ 2/ ]/ ./ 企业/ 或/ 组织/ 越来越/ 倾向/ 于/ 将/ 本地/ 专有/ 数据中心/ 的/ 维护/ 和/ 管理工作/ 外/ 包/ (/ Outsource/ )/ 给/ DaaS/ 服务提供商/ ,/ 从而/ 降低/ 设备/ 升级/ 、/ 更新/ 、/ 维护/ 以及/ 专业/ 人员培训/ 等/ 各个方面/ 的/ 运营/ 成本/ ./ 新/ 的/ 服务/ 模式/ 引入/ 了/ 新/ 的/ 安全/ 问题/ ,/ 即/ 相比/ 原有/ 管理模式/ 中/ 的/ 企业/ 数据中心/ ,/ 服务提供商/ 的/ 服务器/ 对/ 用户/ 具有/ 信任/ 风险/ ,/ 数据/ 拥有者/ 需要/ 充分考虑/ 存储/ 数据/ 的/ 安全/ ./ 目前/ 最/ 有效/ 的/ 可信/ 机制/ 建立/ 办法/ 是/ 对/ 数据/ 进行/ 加密/ 后/ 再/ 外/ 包至/ 服务器/ ,/ 同时/ 为了/ 保证/ 加密/ 数据/ 的/ 可用性/ 和/ 可/ 搜索/ 性/ ,/ 部分/ 研究/ 人员/ 提出/ 了/ 相应/ 的/ 算法/ ,/ 使/ 用户/ 在/ 对/ 存储/ 数据/ 具备/ 相应/ 知识/ 的/ 情形/ 下/ 根据/ 自身/ 需求/ 查询数据库/ [/ 3/ -/ 5/ ]/ ./ 然而/ ,/ 数据/ 的/ 类型/ 和/ 结构/ 日益/ 复杂/ ,/ 且/ 应用/ 规模/ 庞大/ ,/ 用户/ 对/ 数据/ 的/ 认知/ 总会/ 存在/ 一定/ 的/ 误差/ ,/ 因此/ 需要/ DaaS/ 系统/ 支持/ 密文/ 数据/ 上/ 的/ 模糊/ 查询/ 功能/ ,/ 容忍/ 用户/ 在/ 查询/ 过程/ 中/ 出现/ 的/ 少量/ 的/ 输入/ 或/ 格式/ 误差/ [/ 6/ ]/ ./ 例如/ ,/ 用户/ 输入/ 关键字/ “/ Chine/ ”/ 查询/ 含有/ 索引/ 关键字/ “/ China/ ”/ 的/ 文件/ ./ 尽管/ 查询/ 条件/ 无法/ 精确/ 匹配/ 文件/ 的/ 索引/ 关键字/ ,/ 但/ 模糊/ 查询/ 机制/ 仍然/ 允许/ 系统/ 向/ 用户/ 返回/ 所有/ 相似/ 程度较高/ 的/ 文件/ ,/ 这样/ 用户/ 才能/ 以/ 较大/ 概率/ 找到/ 所/ 需/ 文件/ ./ 同时/ ,/ 为了/ 保护/ 数据/ 和/ 相关/ 索引/ 信息/ 的/ 机密性/ ,/ 避免/ 用户/ 隐私/ 的/ 泄露/ ,/ 所有/ 的/ 数据/ 查询/ 操作/ 必须/ 基于/ 密文/ 进行/ ./ 现有/ 密文/ 查询/ 工作/ 大部分/ 针对/ 精确/ 数据/ 匹配/ 开展/ 研究/ [/ 7/ -/ 11/ ]/ ,/ 而/ 对/ 基于/ 密文/ 的/ 模糊/ 查询/ 机制/ 研究/ 仍然/ 较/ 少/ ,/ 代表性/ 工作/ 主要/ 有/ 文献/ [/ 6/ ,/ 12/ ]/ ./ Li/ 等/ 人/ 在/ 文献/ [/ 6/ ]/ 中/ 首次/ 针对/ 云/ 环境/ 下/ 的/ 加密/ 数据/ 提出/ 了/ 基于/ 编辑/ 距离/ 的/ 模糊/ 查询/ 算法/ ,/ 以/ 通配符/ 技术/ 为/ 基础/ 实现/ 了/ 模糊/ 关键字/ 集合/ 的/ 压缩/ ,/ 然而/ 这种/ 以/ 枚举/ 为/ 基础/ 的/ 查询/ 算法/ 仍/ 无法/ 满足用户/ 对/ 实时/ 查询/ 操作/ 的/ 效率/ 需求/ ./ Wang/ 等/ 人/ 在/ 文献/ [/ 12/ ]/ 中以/ Li/ 等/ 人/ 的/ 工作/ 为/ 基础/ ,/ 提出/ 了/ 基于/ 预定/ 义/ 符号/ 集合/ (/ predefinedsymbolset/ )/ 的/ 语义/ 树/ 改善/ 构建/ 模糊/ 集合/ 的/ 结构/ ,/ 提高/ 查询/ 效率/ ,/ 然而/ 该/ 算法/ 性能/ 对/ 关键字/ 前缀/ 部分/ 的/ 重复/ 率/ 有/ 较/ 高/ 的/ 依赖性/ ,/ 若/ 各个/ 索引/ 关键字/ 之间/ 极少/ 存在/ 相同/ 前缀/ ,/ 则/ 算法/ 在/ 效率/ 方面/ 的/ 性能/ 提升/ 不/ 明显/ ./ 除此之外/ ,/ 模糊/ 集合/ 元素/ 和/ 符号/ 集合/ 之间/ 的/ 对应/ 关系/ 会/ 对/ 算法/ 查询/ 结果/ 的/ 安全性/ 产生/ 威胁/ ./ 本文/ 通过/ 分析/ DaaS/ 数据文件/ 关键字/ 索引/ 的/ 特征/ 及其/ 对/ 密文/ 查询/ 效率/ 的/ 影响/ ,/ 针对/ 现有/ 工作/ 在/ 查询/ 效率/ 、/ 数据/ 存储/ 和/ 数据安全/ 方面/ 的/ 不足/ ,/ 提出/ 了/ 一种/ 基于/ Huffman/ 编码/ 和/ 布鲁姆/ 过滤器/ 的/ 安全/ 模糊/ 查询/ 算法/ (/ HuffmancodeandBloomfilter/ -/ basedFuzzyKeywordSearch/ ,/ HB/ -/ FKS/ )/ ./ HB/ -/ FKS/ 以/ 关键字/ 的/ TF/ ×/ IDF/ 评分/ (/ TermFrequencyandInverseDocumentFrequency/ )/ 为/ 基础/ 构建/ Huffman/ 树型/ 结构/ ,/ 重新/ 对/ 数据文件/ 索引/ 进行/ 组织/ ,/ 同时/ 利用/ 布鲁姆/ 过滤器/ 在/ 数据/ 存储/ 方面/ 的/ 性能/ 优势/ 减少/ 模糊/ 关键字/ 集合/ 的/ 存储/ 功耗/ ,/ 确保/ 以较/ 高/ 的/ 效率/ 实现/ DaaS/ 服务/ 模式/ 下/ 基于/ 密文/ 的/ 模糊/ 查询/ ,/ 最后/ 基于/ 真实/ 数据/ 集对/ HB/ -/ FKS/ 的/ 安全性/ 和/ 执行/ 效率/ 进行/ 了/ 较/ 全面/ 的/ 分析/ 和/ 验证/ ./ 本文/ 第/ 2/ 节对本/ 研究/ 领域/ 中/ 其他/ 学者/ 的/ 相关/ 工作/ 进行/ 比较/ 和/ 总结/ ;/ 第/ 3/ 节对/ 本文/ 用到/ 的/ 相关/ 技术/ 进行/ 简要/ 介绍/ ;/ 第/ 4/ 节/ 描述/ 本文/ 采用/ 的/ 系统/ 模型/ ;/ 第/ 5/ 节/ 详细/ 介绍/ 本文/ 提出/ 的/ HB/ -/ FKS/ 算法/ ;/ 第/ 6/ 节对/ 提出/ 的/ 算法/ 进行/ 理论/ 分析/ ;/ 第/ 7/ 节/ 针对/ 本文/ 算法/ 和/ 相关/ 工作/ 设计/ 仿真/ 实验/ ,/ 并/ 对/ 实验/ 结果/ 进行/ 对比/ 分析/ ;/ 第/ 8/ 节/ 总结/ 全文/ ./ 2/ 相关/ 工作/ 隐私/ 保护/ 是/ DaaS/ 领域/ 的/ 研究/ 热点/ 之一/ ,/ 然而/ 在/ 确保/ 数据/ 隐私/ 性/ 的/ 同时/ ,/ 也/ 要/ 确保/ 数据/ 的/ 可用性/ ,/ 因此/ 在/ DaaS/ 服务/ 模式/ 下/ 实现/ 密文/ 查询/ 功能/ 具有/ 重要/ 意义/ ./ 本/ 小节/ 将/ 从/ DaaS/ 模式/ 现有/ 隐私/ 保护/ 技术/ 、/ 隐私/ 保护/ 精确/ 密文/ 查询/ 、/ 隐私/ 保护/ 模糊/ 密文/ 查询/ 和/ 私有/ 信息检索/ 4/ 个/ 方面/ 进行/ 分析/ 和/ 总结/ ./ 2.1/ DaaS/ 隐私/ 保护/ 技术/ 随着/ 大/ 数据/ 存储技术/ 的/ 不断/ 发展/ ,/ DaaS/ 服务/ 模式/ 下/ 的/ 隐私/ 保护/ 问题/ 日益突出/ ,/ 该/ 问题/ 也/ 得到/ 了/ 研/ Page3/ 究/ 人员/ 的/ 广泛/ 关注/ ./ 传统/ 的/ 对称/ 和/ 非对称/ 加密算法/ 如/ DES/ [/ 13/ ]/ 、/ RSA/ [/ 14/ ]/ 等/ 是/ DaaS/ 模式/ 下/ 数据/ 隐私/ 保护/ 的/ 主要/ 技术手段/ ,/ 根据/ 其/ 加密/ 粒度/ 可/ 划分/ 为表/ 、/ 字/ 段/ 、/ 元组/ 、/ 属性/ 4/ 种/ 方式/ [/ 5/ ]/ ./ 算法/ 通过/ 密钥/ 管理/ 等/ 方式/ [/ 15/ -/ 16/ ]/ 控制/ 用户/ 数据/ 访问/ 权限/ ,/ 确保/ 数据/ 的/ 隐私/ 性/ ./ 然而/ ,/ 仅/ 根据/ 用户/ 权限/ 不加区分/ 的/ 反馈/ 所有/ 符合/ 权限/ 范围/ 的/ 数据/ ,/ 将/ 引入/ 大量/ 不必要/ 的/ 解密/ 计算/ 和/ 带宽/ 功耗/ ./ 密文/ 数据/ 在/ 确保/ 了/ 用户/ 隐私/ 性/ 的/ 同时/ ,/ 也/ 极大/ 地/ 影响/ 了/ 系统/ 的/ 可用性/ ./ 2.2/ 隐私/ 保护/ 精确/ 密文/ 查询/ 保护/ 数据/ 安全性/ 最/ 有效/ 的/ 手段/ 是/ 采用/ 强/ 加密算法/ ,/ 但/ 为了/ 确保/ 系统/ 的/ 可用性/ ,/ 这些/ 密文/ 需要/ 同时/ 具备/ 可/ 搜索/ 性/ ./ 针对/ 密文/ 的/ 精确/ 查询/ 技术/ 最早/ 是/ 由/ Song/ 等/ 人/ [/ 3/ ]/ 提出/ 的/ ,/ 称为/ 可/ 搜索/ 加密/ 机制/ (/ TheSearchableEncryption/ )/ ./ 可/ 搜索/ 加密/ 机制/ 根据/ 其/ 采用/ 的/ 加密技术/ 可以/ 分为/ 基于/ 对称/ 加密/ 的/ 搜索算法/ 和/ 基于/ 公钥/ 系统/ 的/ 搜索算法/ ./ 早期/ 的/ 可/ 搜索/ 加密算法/ 主要/ 基于/ 对称/ 加密算法/ 进行/ 研究/ ,/ 代表/ 工作/ 主要/ 有/ ,/ 2000/ 年/ Song/ 等/ 人/ [/ 3/ ]/ 率先/ 以伪/ 随机/ 函数/ 和/ 对称/ 加密/ 机制/ 为/ 基础/ 实现/ 了/ 对/ 密文/ 数据/ 精确/ 快速/ 的/ 查询/ ,/ 同时/ 严格/ 证明/ 了/ 算法/ 的/ 安全性/ ./ 2003/ 年/ Goh/ 等/ 人/ [/ 4/ ]/ 基于/ 布鲁姆/ 过滤器/ 结合/ 伪/ 随机/ 函数/ 进一步/ 提出/ 了/ 一种/ 高效/ 且/ 满足/ 语义/ 安全/ 的/ 索引/ 构造/ 算法/ Z/ -/ IDX/ ,/ 有效/ 地/ 缩减/ 了/ 文件/ 索引/ 的/ 存储/ 开销/ ,/ 提高/ 了/ 搜索/ 计算/ 效率/ ./ 2005/ 年/ Chang/ 等/ 人/ [/ 17/ ]/ 引入/ 随机/ 比特/ 位/ 增强/ 了/ 索引/ 抵御/ 字典/ 攻击/ 的/ 能力/ ./ 随着/ 可/ 搜索/ 加密/ 机制/ 的/ 发展/ ,/ 以公钥/ 加密/ 机制/ 为/ 基础/ 的/ 搜索算法/ 得到/ 了/ 发展/ ./ 2004/ 年/ Boneh/ 等/ 人/ [/ 18/ ]/ 首次/ 提出/ 了/ 基于/ 双线性/ 映射/ 和/ IBE/ 加密/ 机制/ (/ IdentityBasedEncryption/ )/ 的/ 公钥/ 密文/ 搜索算法/ PEKS/ ./ 在/ 该/ 算法/ 中/ ,/ 公钥/ 加密/ 的/ 数据/ 能/ 被/ 网关/ 认证/ 并/ 发送至/ 对应/ 的/ 用户/ ,/ 但/ 内容/ 不会/ 被/ 网关/ 获取/ ./ Abdalla/ 等/ 人/ [/ 19/ ]/ 对/ Boneh/ 等/ 人/ 提出/ 的/ PEKS/ 算法/ 进行/ 了/ 改进/ ,/ 解决/ 了/ 原有/ 算法/ 中/ 的/ 一致性/ 问题/ ,/ 设计/ 了/ 3/ 种/ 改良/ 型/ 算法/ :/ 匿名/ 身份/ 加密算法/ HIBE/ (/ AnonymousHierarchicalIBE/ )/ ,/ 临时/ 可/ 搜索/ 加密算法/ PETKS/ 和/ 基于/ 身份/ 的/ 可/ 搜索/ 加密算法/ IBEKS/ ./ 然而/ 上述/ 所有/ 搜索算法/ 中/ ,/ 系统/ 均会/ 根据/ 用户/ 的/ 请求/ 不加区分/ 地/ 返回/ 所有/ 满足/ 查询/ 需求/ 的/ 结果/ ,/ 这样/ 的/ 处理/ 方式/ 会/ 导致/ 不必要/ 的/ 带宽/ 和/ 传输/ 能量/ 的/ 浪费/ ,/ 且/ 增大/ 了/ 用户/ 端的/ 后处理/ 负担/ ./ 相比之下/ ,/ 基于/ 密文/ 的/ 排名/ 搜索算法/ (/ rankedsearch/ )/ 提供/ 了/ 更加/ 便捷/ 有效/ 的/ 办法/ ./ 排名/ 搜索算法/ 只会/ 返回/ 和/ 用户/ 需求/ 最/ 相关/ 的/ k/ 个/ 文件/ ./ Wang/ 等/ 人/ [/ 10/ ]/ 针对/ 云/ 存储/ 文件/ 首次/ 提出/ 了/ 安全/ 关键字/ 排名/ 搜索算法/ ./ 算法/ 采用/ 对称/ 保序/ 加密/ (/ Order/ -/ PreservingSymmetricEncryption/ ,/ OPSE/ )/ 实现/ 了/ 密文/ 的/ 安全/ 排序/ ,/ 同时/ 基于/ TF/ ×/ IDF/ 构造/ 相应/ 的/ 排序/ 函数/ ./ Cao/ 等/ 人/ [/ 11/ ]/ 则/ 基于/ 协调/ 匹配/ 原则/ (/ CoordinateMatching/ )/ 和/ 内积/ 相似/ 度量/ 化/ 规则/ (/ InnerProductSimilarity/ )/ 实现/ 了/ 针对/ 多/ 关键字/ 的/ 安全/ 排名/ 查询/ 机制/ ,/ 通过/ 引入/ 冗余/ 关键字/ 提升/ 了/ 算法/ 的/ 安全性/ ./ 然而/ 由于/ Cao/ 等/ 人/ 的/ 算法/ 没有/ 将/ 关键字/ 频率/ 作为/ 计算/ 参数/ 引入/ 相关度/ 评分/ 的/ 计算公式/ ,/ 因此/ 部分/ 包含/ 高频率/ 关键字/ 的/ 搜索/ 结果/ 可能/ 被/ 系统/ 忽略/ ,/ 从而/ 导致/ 最终/ 的/ 查询/ 结果/ 出现/ 错误/ ./ 上述/ 排名/ 搜索算法/ 以较/ 高/ 的/ 查询/ 效率/ 满足/ 了/ 用户/ 的/ 需求/ ,/ 然而/ 算法/ 并/ 不能容忍/ 用户/ 在/ 输入/ 查询/ 条件/ 时/ 出现/ 的/ 少量/ 的/ 字符/ 或/ 格式/ 误差/ ./ 2.3/ 隐私/ 保护/ 模糊/ 密文/ 查询/ 目前/ 针对/ DaaS/ 下/ 基于/ 密文/ 的/ 模糊/ 查询/ 研究/ 工作/ 不/ 多/ ,/ 相对/ 精确/ 的/ 密文/ 查询/ ,/ 模糊/ 密文/ 查询/ 难度/ 更高/ ,/ 这是/ 由于/ 在/ 加密/ 强度/ 较/ 高/ 的/ 算法/ 中/ ,/ 明文/ 之间/ 1/ 比特/ 的/ 微小/ 误差/ 在/ 对应/ 密文/ 中/ 可能/ 产生/ 巨大/ 的/ 差异/ ,/ 用户/ 输入/ 过程/ 中/ 的/ 细节/ 错误/ 会/ 直接/ 导致/ 异常/ 的/ 查询/ 结果/ ./ Park/ 等/ 人/ [/ 20/ ]/ 在/ 2007/ 年/ 针对/ 这一/ 问题/ 提出/ 了/ 基于/ 汉明/ 距离/ (/ Hammingdistance/ )/ 的/ 模糊/ 查询/ 算法/ ,/ 采用/ 了/ 伪/ 随机/ 函数/ 和/ 椭圆/ 曲线/ 实现/ 对/ 索引/ 的/ 安全性/ 保护/ ,/ 获得/ 了/ 很/ 高/ 的/ 安全性/ ,/ 但/ 算法/ 计算/ 复杂度/ 较/ 高/ ,/ 且/ 以/ 汉明/ 距离/ 为/ 基础/ 的/ 相似/ 度/ 度量/ 体系/ 对/ 用户/ 提出/ 了/ 较/ 高/ 的/ 专业/ 背景/ 要求/ ,/ 因此/ 系统/ 可用性/ 难以/ 保证/ ./ 2010/ 年/ Li/ 等/ 人/ [/ 6/ ]/ 引入/ 了/ 编辑/ 距离/ 衡量/ 关键字/ 之间/ 的/ 相似/ 度/ ,/ 简化/ 了/ 数据/ 相似/ 度/ 的/ 计算/ ,/ 同时/ 采用/ 通配符/ “/ / ”/ 替代/ 关键字/ 不同/ 位置/ 的/ 字母/ 元素/ ,/ 使/ 特定/ 位置/ 字符/ 取值/ 的/ 可能性/ 由/ 26/ 种/ 变为/ 1/ 种/ ,/ 减少/ 了/ 关键字/ 模糊/ 集合/ 的/ 存储空间/ ./ 然而/ ,/ 模糊/ 查询/ 的/ 实现/ 基础/ 仍然/ 是/ 以/ 关键字/ 模糊/ 集合/ 为/ 基础/ 的/ 枚举/ 模式/ ,/ 查询/ 效率/ 受到/ 了/ 极大/ 影响/ ./ 2012/ 年/ Wang/ 等/ 人/ [/ 12/ ]/ 采用/ 了/ Li/ 等/ 人/ 的/ 算法/ ,/ 结合/ 通配符/ 和/ 编辑/ 距离/ 计算/ 索引/ ,/ 并/ 在/ 此基础/ 上/ 进一步/ 提出/ 采用/ 预定/ 义/ 符号/ 集合/ 对应/ 这些/ 索引/ 关键字/ 以/ 构建/ 基于/ 密文/ 符号/ 的/ 语义/ 树/ ,/ 文件/ 索引/ 通过/ 索引/ 树/ 重新/ 组织/ 后/ 使得/ 查询/ 效率/ 得以/ 提高/ ./ 然而/ ,/ 语义/ 树/ 的/ 查询/ 效率/ 极大/ 地/ 依赖于/ 索引/ 关键字/ 的/ 重复/ 率/ ,/ 因此/ ,/ 算法/ 对/ 模糊/ 查询/ 效率/ 的/ 性能/ 提升/ 很/ 有限/ ./ 此外/ ,/ 关键字/ 和/ 符号/ 集合/ 一一对应/ 的/ 模式/ 存在/ 安全隐患/ ,/ 难以/ 有效/ 地/ 抵御/ 字典/ 攻击/ ./ 2.4/ 私有/ 信息检索/ 技术/ 私有/ 信息检索/ 技术/ (/ PrivateInformationRetrieval/ ,/ PIR/ )/ ,/ 其/ 应用/ 目的/ 和/ 可/ 搜索/ 加密技术/ 是/ 一致/ 的/ ,/ 即/ Page4/ 在/ 数据库/ 服务器/ 查询/ 数据/ 过程/ 中/ ,/ 不/ 暴露/ 用户/ 的/ 任何/ 隐私/ ./ Chor/ 等/ 人/ [/ 21/ ]/ 于/ 1998/ 年/ 首次/ 提出/ PIR/ 的/ 概念/ ,/ 并/ 提出/ 了/ 一种/ k/ 服务器/ 的/ 方案/ ./ 用户/ 通过/ 向/ 不同/ 服务器发送/ 根据/ 同一/ 查询/ 条件/ 生成/ 的/ 随机/ 副本/ ,/ 随后/ 利用/ 不同/ 服务器/ 反馈/ 的/ 结果/ 进行/ 异或/ 计算/ 获取/ 最终/ 结果/ ./ 然而/ 其/ 通信/ 复杂度/ 达到/ 了/ O/ (/ kn1/ // logk/ )/ ,/ n/ 为/ 查询/ 条件/ 长度/ ./ Kushilevitz/ 等/ 人/ [/ 22/ ]/ 于/ 同年/ 提出/ 了/ 一种/ 基于/ 二次/ 剩余/ 定理/ 的/ c/ -/ PIR/ 协议/ ,/ 有效/ 地/ 降低/ 了/ 通信/ 复杂度/ ,/ 并/ 从/ 理论/ 上/ 证明/ 了/ 在/ 数据/ 查询/ 过程/ 中/ 的/ 计算/ 性/ 隐私/ 可/ 得到/ 有效/ 保障/ ,/ 然而/ 每次/ 数据/ 查询/ 过程/ 中/ ,/ 服务器/ 均/ 需要/ 对/ 所有/ 数据/ 进行/ 取模/ 计算/ ,/ 其/ 计算/ 复杂度/ 太高/ ,/ 系统/ 难以承受/ ./ Wang/ 等/ 人/ [/ 23/ ]/ 针对/ 这一/ 问题/ 进行/ 研究/ ,/ 采用/ 含有/ 目标/ 数据/ 子/ 矩阵/ 对/ 原有/ 数据/ 矩阵/ 进行/ 了/ 替换/ ,/ 提出/ 了/ 一种/ 改进/ 的/ bbPIR/ 技术/ ,/ 在/ 损失/ 部分/ 隐私/ 性/ 的/ 同时/ 提高/ 了/ 查找/ 效率/ ./ 为了/ 解决/ PIR/ 协议/ 计算/ 复杂/ 度过/ 高/ 的/ 问题/ ,/ Papadopoulos/ 等/ 人/ [/ 24/ ]/ 提出/ 了/ 一种/ 分布式/ 的/ 方案/ pCloud/ ,/ 通过/ 节点/ 协作/ 处理/ 不同/ 的/ 数据/ 分块/ ./ 然而/ 该/ 算法/ 的/ 实现/ 仍/ 是/ 基于/ 二次/ 剩余/ 定理/ 的/ ,/ 因此/ ,/ 用户/ 仍/ 需/ 通过/ 所有/ 数据/ 分块/ 来/ 计算/ 最终/ 的/ 结果/ ./ 一旦/ 出现/ 单点故障/ 就/ 无法/ 顺利/ 获取/ 部分/ 数据/ 分块/ ,/ 用户/ 需要/ 重新/ 进行/ 查询/ ,/ 这/ 将/ 导致/ 大量/ 重复/ 计算/ ,/ 消耗/ 额外/ 的/ 网络资源/ ./ 现有/ 的/ PIR/ 技术/ 一方面/ 计算/ 复杂/ 度过/ 高/ ,/ 不能/ 适用/ 于/ 存储/ 大规模/ 数据/ 的/ DaaS/ 服务/ 模型/ ;/ 另一方面/ ,/ 现有/ 的/ PIR/ 技术/ 侧重/ 用户/ 隐私/ ,/ 但/ 在/ 服务器端/ 存储/ 的/ 数据/ 并非/ 密文/ 数据/ ,/ 考虑/ 到/ 本文/ 中/ 的/ 数据库/ 服务器/ 并/ 不是/ 完全/ 可信/ 的/ ,/ 因此/ ,/ PIR/ 技术/ 不/ 满足/ 本文/ 的/ 安全/ 需求/ ./ 3/ 预备/ 知识/ 3.1/ TF/ ×/ IDF/ 规则/ TF/ ×/ IDF/ 规则/ 是/ 一种/ 基于/ 加权/ 的/ 字词/ 统计/ 技术/ ,/ 用于/ 衡量/ 单个/ 关键字/ 和/ 文件/ 集合/ 中/ 指定/ 文件/ 之间/ 的/ 关联/ 程度/ [/ 25/ ]/ ./ 关联/ 强度/ 随着/ 该/ 关键字/ 在/ 该/ 文件/ 中/ 的/ 出现/ 次数/ 增加/ 而/ 增强/ ,/ 但/ 和/ 关键字/ 在/ 整个/ 文件/ 集合/ 中/ 的/ 出现/ 频率/ 呈/ 反比/ 关系/ [/ 26/ -/ 27/ ]/ ./ TF/ (/ TermFrequency/ )/ ,/ 即/ 词频/ ,/ 衡量/ 的/ 是/ 关键字/ 在/ 指定/ 文件/ 中/ 的/ 出现/ 频率/ ;/ IDF/ (/ InverseDocumentFrequency/ )/ ,/ 即/ 逆向/ 文件/ 频率/ ,/ 衡量/ 的/ 是/ 关键字/ 在/ 整个/ 文件/ 集合/ 中/ 的/ 出现/ 次数/ ./ 关键字/ wi/ 和/ 文件/ fj/ 的/ TF/ ×/ IDF/ 评分/ 计算/ 规则/ 为/ sc/ (/ wi/ ,/ fj/ )/ =/ 其中/ ,/ |/ fj/ |/ 表示/ 文件/ 长度/ ;/ ftwi/ 出现/ 的/ 频率/ ,/ 即/ TF/ ;/ fnwi/ 字/ wi/ 的/ 文件/ 个数/ ;/ N/ 是/ 文件/ 集合/ 中/ 文件/ 的/ 总/ 数量/ ./ 3.2/ 布鲁姆/ 过滤器/ 布鲁姆/ 过滤器/ 是/ 一种/ 存储/ 有效/ 的/ 向量/ 型/ 数据结构/ ,/ 通常/ 用于/ 判别/ 单个/ 元素/ 和/ 指定/ 集合/ 之间/ 的/ 隶属/ 关系/ [/ 28/ -/ 29/ ]/ ./ 标准/ 的/ 布鲁姆/ 过滤器/ 是/ 由/ 多个/ 比特/ 位/ 组成/ 的/ 特殊/ 向量/ 阵列/ ,/ 各个/ 比特/ 位/ 的/ 初始值/ 设置/ 为/ 0/ ./ 各个/ 元素/ 通过/ 该/ 布鲁姆/ 过滤器/ 对应/ 的/ m/ 个/ 独立/ 同/ 分布/ 的/ 哈希/ 函数/ 映射/ 至/ 向量/ 阵列/ 相应/ 的/ 比特/ 位/ ./ 被/ 映射/ 的/ 比特/ 位/ 的/ 值/ 设置/ 为/ 1/ ./ 例如/ ,/ 长度/ 为/ BL/ 的/ 布鲁姆/ 过滤器/ B/ 对应/ 的/ 哈希/ 函数/ 为/ h1/ ,/ h2/ ,/ …/ ,/ hm/ ,/ 若/ 向/ B/ 中/ 添加/ 元素/ x/ ,/ 则/ h1/ (/ x/ )/ ,/ h2/ (/ x/ )/ ,/ …/ ,/ hm/ (/ x/ )/ 对应/ 的/ 比特/ 位/ 的/ 值/ 设为/ 1/ ./ 当/ 判别/ 元素/ y/ 是否/ 隶属/ 布鲁姆/ 过滤器/ B/ 时/ ,/ 需/ 判别/ h1/ (/ y/ )/ ,/ h2/ (/ y/ )/ ,/ …/ ,/ hm/ (/ y/ )/ 对应/ 的/ m/ 个/ 比特/ 位/ 的/ 值/ 是否/ 全部/ 为/ 1/ ./ 这/ m/ 个值/ 中/ 任意/ 一个/ 为/ 0/ ,/ 则/ y/ 一定/ 不/ 在/ B/ 中/ ,/ 反之/ y/ 以/ 较大/ 的/ 概率/ 存在/ 于/ B/ 中/ ./ 图/ 1/ 给出/ 了/ 布鲁姆/ 过滤器/ 成员/ 隶属/ 关系/ 判别/ 过程/ ./ (/ 1/ )/ 布鲁姆/ 过滤器/ 各个/ 比特/ 位/ 的/ 初始值/ 设置/ 为/ 0/ ;/ (/ 2/ )/ x1/ ,/ x2/ ,/ x3/ 分别/ 通过/ 哈希/ 函数/ h1/ ,/ h2/ ,/ h3/ 被/ 映射/ 至/ 布鲁姆/ 过滤器/ ,/ 作为/ 其/ 对应/ 集合/ 的/ 元素/ 成员/ ;/ (/ 3/ )/ 通过/ 对/ y1/ ,/ y2/ ,/ y3/ 进行/ 相应/ 的/ 哈希/ 映射/ ,/ 判别/ 其/ 是否是/ 该/ 布鲁姆/ 过滤器/ 对应/ 集合/ 的/ 成员/ ./ 由于/ h1/ (/ y3/ )/ 对应/ 的/ 比特/ 位为/ 0/ ,/ 因此/ y3/ 不/ 在/ 该/ 布鲁姆/ 过滤器/ 中/ ./ y1/ 和/ y2/ 对应/ 的/ 哈希/ 映射/ 比特/ 位/ 的/ 值/ 均/ 为/ 1/ ,/ 因此/ 二者/ 以/ 较大/ 概率/ 存在/ 于/ 该/ 布鲁姆/ 过滤器/ 中/ ./ 但是/ ,/ 根据/ 原有/ 集合/ 成员/ x1/ ,/ x2/ 和/ x3/ 的/ 实际/ 映射/ 位置/ 判断/ ,/ y2/ 实际上/ 并/ 没有/ 存储/ 在/ 布鲁姆/ 过滤器/ 中/ ,/ 因此/ y2/ 是/ 假/ 阳性/ 数据/ ./ 3.3/ Huffman/ 树/ Huffman/ 树是/ 带权/ 路径/ 长度/ 最小/ 的/ 最优/ 二叉树/ ,/ 权值/ 越/ 大/ 的/ 节点/ 越/ 接近/ 根/ 节点/ ,/ 即/ 深度/ 越浅/ ,/ 反之/ 则/ 远离/ 根/ 节点/ [/ 30/ -/ 31/ ]/ ./ 以此/ 为/ 基础/ 构建/ 的/ 可变/ 字长/ Huffman/ 编码/ 可/ 基于/ 字符/ 或/ 关键字/ 的/ 出现/ 频率/ 来/ 实现/ 最短/ 平均/ 长度/ 的/ 最佳/ 编码/ ./ Huffman/ 树/ 的/ 构造/ Page5/ 方法/ 是/ 自/ 底向上/ 的/ :/ 首先/ 通过/ 关键字/ 频率/ 设置/ 叶子/ 节点/ 的/ 权值/ ,/ 随后/ 重复/ 合并/ 权值/ 最小/ 的/ 叶子/ 节点/ 或/ 中间/ 节点/ 以/ 构造/ 新树/ ,/ 并/ 以/ 新树/ 的/ 根/ 节点/ 作为/ 新/ 的/ 合并/ 操作/ 对象/ ,/ 最终/ 形成/ Huffman/ 树/ [/ 32/ ]/ ./ 对/ Huffman/ 树/ 的/ 各个/ 左右/ 路径/ 赋予/ 0/ -/ 1/ 编码/ 生成/ 相应/ 的/ Huffman/ 编码/ ./ 图/ 2/ 给出/ 了/ 叶子/ 节点/ 的/ 频率/ 权值/ 分别/ 为/ 4/ ,/ 5/ ,/ 7/ ,/ 8/ ,/ 11/ ,/ 17/ ,/ 19/ ,/ 29/ 的/ Huffman/ 树/ 构造/ 过程/ ./ 4/ 模型/ 4.1/ 系统/ 模型/ DaaS/ 服务/ 系统/ 模型/ 如图/ 3/ 所示/ ,/ 通常/ 主要/ 包含/ 3/ 种/ 角色/ [/ 5/ ,/ 33/ ]/ :/ 数据/ 拥有者/ (/ DataOwner/ ,/ DO/ )/ 、/ DaaS/ 数据库/ 服务/ 提供/ 方/ (/ DaaSProvider/ ,/ DSP/ )/ 和/ 用户/ (/ DataUser/ ,/ DU/ )/ ./ (/ 1/ )/ DO/ 通常/ 是/ 拥有/ 原始数据/ 的/ 企业/ 或/ 组织/ ,/ 将/ 本地/ 数据/ 以/ 密文/ 形式/ 委托/ DSP/ 进行/ 存储/ ,/ 为了/ 在/ 保护/ 数据/ 安全性/ 的/ 同时/ 实现/ DSP/ 数据库/ 的/ 可/ 查询/ 性/ ,/ DO/ 需要/ 结合/ 特定/ 的/ 加密技术/ 针对/ 这些/ 密文/ 建立/ 相应/ 的/ 隐私/ 保护/ 索引/ ;/ (/ 2/ )/ DSP/ 是/ 专业/ 维护/ 、/ 更新/ 和/ 升级/ DaaS/ 服务/ 数据库/ 和/ 硬件/ 服务器/ 的/ 提供商/ ,/ 负责/ 存储/ 备份/ 和/ 管理/ DO/ 数据/ ,/ 并/ 向/ DU/ 提供数据/ 查询/ 服务/ ./ 由于/ DSP/ 管理人员/ 的/ 个人行为/ 无法/ 完全/ 掌控/ ,/ 数据/ 的/ 机密性/ 得不到/ 有效/ 保障/ ./ 因此/ ,/ DSP/ 存储/ 的/ 数据/ 均/ 是/ 事先/ 由/ DO/ 加密/ 的/ ./ 在/ 提供/ 查询/ 服务/ 时/ ,/ 为了/ 保护/ 数据/ 和/ 索引/ 隐私/ ,/ DSP/ 正确/ 执行/ 查询/ 操作/ 的/ 同时/ 不能/ 获知/ 查询/ 条件/ 和/ 查询/ 数据/ 的/ 真实/ 内容/ ;/ (/ 3/ )/ DU/ 是/ 指/ 经过/ 系统/ 授权/ 的/ 用户/ ,/ 可以/ 合法/ 查询/ DSP/ 中/ 存储/ 的/ DO/ 数据/ ./ 出于/ 安全性/ 考虑/ ,/ DU/ 采用/ 的/ 查询/ 条件/ 也/ 需要/ 经过/ 加密技术/ 处理/ ;/ (/ 4/ )/ TTP/ (/ TrustedThirdParty/ )/ ./ 本文/ 采用/ 的/ 模型/ 引入/ 了/ 完全/ 可信/ 第三方/ TTP/ [/ 5/ ]/ ,/ 负责/ 查询/ 服务/ 中/ 的/ 复杂/ 计算/ 任务/ ,/ 主要/ 包含/ 对/ DO/ 数据/ 进行/ 加密/ 预处理/ 、/ 索引/ 计算/ ,/ 并/ 对/ DU/ 查询/ 条件/ 进行/ 相应/ 编码/ 转换/ ./ TTP/ 降低/ 了/ 查询/ 服务/ 模型/ 中/ DU/ 和/ DO/ 的/ 计算/ 负担/ ,/ 但/ 为了/ 保护/ DU/ 查询/ 条件/ 和/ DO/ 数据/ 的/ 机密性/ ,/ TTP/ 必须/ 独立/ 于/ 外包/ 服务提供商/ DSP/ ,/ 由/ 第三方/ 权威机构/ 提供/ ./ 例如/ ,/ DaaS/ 服务/ 模式/ 下/ 的/ 线/ 上/ 医疗/ 信息系统/ 中/ ,/ 病人/ 需/ 上传/ 病历/ 等/ 敏感/ 信息/ 为/ 医生/ 看诊/ 提供/ 辅助材料/ ,/ 可/ 通过/ TTP/ 提供/ 的/ 可信/ 服务/ 将/ 这些/ 信息/ 加密/ 并/ 建立/ 索引/ ,/ 存储/ 到/ 医疗/ 信息中心/ ;/ 医生/ 根据/ 看诊/ 需求/ 查询/ 病历/ 信息/ 时/ ,/ 通过/ TTP/ 提供/ 的/ 可信/ 服务/ 将/ 查询/ 信息/ 转换成/ 相应/ 加密/ 编码/ ,/ 并/ 发送至/ 医疗/ 信息中心/ ;/ 信息中心/ 在/ 不/ 对/ 查询/ 编码/ 和/ 病历/ 信息/ 解密/ 的/ 情形/ 下/ ,/ 通过/ 计算/ 将/ 相应/ 的/ 文件/ 反馈/ 给/ 被/ 授权/ 的/ 医生/ (/ TTP/ 授权/ )/ ./ 该/ 系统/ 的/ TTP/ 可以/ 由/ 政府/ 相应/ 监管部门/ 承担/ ;/ (/ 5/ )/ DaaS/ 服务/ 模式/ 下/ 的/ 数据库/ 通常/ 规模/ 庞大/ ,/ 在/ 现有/ 的/ 基于/ 密文/ 查询/ 的/ 相关/ 研究/ 工作/ 中/ [/ 6/ ,/ 11/ -/ 12/ ]/ ,/ 查询/ 关键字/ 通常/ 是/ 系统/ 利用/ 数据库/ 中/ 存储/ 文件/ 预先/ 计算/ 的/ ,/ 可/ 降低/ 关键字/ 更新/ 频率/ ,/ 避免/ 文档/ 样本/ 不足/ 导致/ 的/ 相关/ 参数/ 计算误差/ ./ 因此/ ,/ 在/ 本文/ 提出/ 的/ 模糊/ 关键字/ 查询/ 机制/ 中/ ,/ 合法/ DU/ 和/ DO/ 之间/ 约定/ 的/ 常用/ 查询/ 关键字/ w1/ ,/ w2/ ,/ …/ ,/ wk/ ,/ 是/ 由/ TTP/ 通过/ 对/ 数据库/ 服务器/ DSP/ 中/ 存储/ 的/ 文档/ 数据库/ F/ =/ {/ f1/ ,/ f2/ ,/ …/ ,/ fn/ }/ 进行/ 计算/ 后/ 得到/ 的/ ./ 数据库/ 拥有/ 数量/ 充分/ 的/ 文档/ 样本/ ,/ 对于/ 查询/ 关键字/ 的/ 更新/ 需求/ 较/ 低/ ./ 4.2/ 安全/ 模型/ 本文/ 采用/ 的/ 安全/ 模型/ 设计/ 如下/ :/ DO/ 和/ DU/ 通过/ 安全/ 信道/ 向/ 可信/ 方/ TTP/ 传输数据/ (/ 如图/ 3/ 所示/ )/ ./ TTP/ 和/ DSP/ 之间/ 的/ 传输/ 信道/ 可能/ 被/ 窃听/ ,/ 且/ DSP/ 是/ Honest/ -/ but/ -/ Curious/ 的/ ./ 因其/ Curious/ 特性/ ,/ DSP/ 作为/ 系统/ 内部/ 成员/ 可能/ 发起/ 两种/ 形式/ 的/ 攻击/ :/ 一种/ 是/ 查看/ 数据/ 拥有者/ DO/ 委托/ 的/ 数据/ ,/ 从而/ 泄露/ 与/ DO/ 相关/ 的/ 隐私/ 信息/ ,/ 本文/ 主要/ 采用/ 现有/ 对称/ 加密技术/ 加强/ 对/ 数据/ 的/ 保护/ ;/ 另/ 一种/ 是/ 对/ 用户/ DU/ 的/ 查询/ 条件/ 进行/ 分析/ ,/ 获取/ DU/ 查询/ 行为/ 等/ 隐私/ 信息/ ,/ 本文/ 主要/ 通过/ Huffman/ 编码/ 和/ 布鲁姆/ 过滤器/ 技术/ 隐藏/ 查询/ 条件/ 和/ 数据/ 之间/ 的/ 关联/ 信息/ ./ 在/ 本文/ 的/ 安全/ 模型/ 中/ ,/ DO/ ,/ DU/ 和/ TTP/ 均/ 是/ 可信/ 的/ ./ 4.3/ 符号/ 本文/ 安全/ 模糊/ 查询/ 机制/ 中/ 所/ 采用/ 的/ 符号/ 如表/ 1/ 所示/ ./ Page6SwBwhafw5/ 保护/ 隐私/ 的/ 模糊/ 查询/ 针对/ 现有/ 算法/ 在/ 查询/ 效率/ 和/ 存储/ 功耗/ 方面/ 的/ 不足/ ,/ 本/ 节/ 基于/ Huffman/ 编码/ 和/ 布鲁姆/ 过滤器/ 提出/ 了/ 一种/ 安全/ 模糊/ 查询/ 算法/ ,/ 目的/ 是/ 在/ 保护/ 数据/ 私密性/ 的/ 同时/ 以较/ 低/ 的/ 功耗/ 实现/ 较/ 高效率/ 的/ 查询处理/ ./ 算法/ 主要/ 分为/ 预处理/ 、/ Huffman/ 编码/ 索引/ 建立/ 和/ 保护/ 隐私/ 的/ 查询/ 转换/ 3/ 个/ 部分/ ,/ 算法/ 的/ 具体/ 细节/ 如下/ ./ 5.1/ 预处理/ 系统对/ 数据文件/ 的/ 预处理/ 主要/ 包含/ 3/ 个/ 部分/ ,/ 即/ 对/ 文件/ 集合/ 关键字/ 的/ TF/ ×/ IDF/ 评分/ 计算/ ,/ 相关/ 加密算法/ 和/ 密钥/ 的/ 约定/ 以及/ 对/ DO/ 数据文件/ 的/ 加密/ 存储/ ,/ 具体/ 细节/ 如下/ :/ (/ 1/ )/ 由/ 可信/ 第三方/ A/ 对/ 准备/ 存储/ 至/ 数据库/ 服务器/ 中/ 的/ 文件/ F/ =/ {/ f1/ ,/ f2/ ,/ …/ ,/ fn/ }/ ,/ 通过/ 执行/ 算法/ 1/ 进行/ 关键字/ 关联度/ 计算/ ,/ 获取/ TF/ ×/ IDF/ 评分/ 最高/ 的/ k/ 个/ 关键字/ w1/ ,/ w2/ ,/ …/ ,/ wk/ ,/ 并/ 以此/ 为/ 基础/ 建立/ 各个/ 存储/ 文件/ 的/ 索引/ 树/ I/ ./ 根据/ 式/ (/ 1/ )/ ,/ 关键字/ wi/ 在/ 文件/ 集合/ F/ 下/ 的/ TF/ ×/ IDF/ 评分/ 计算公式/ 如下/ :/ sc/ (/ wi/ ,/ F/ )/ =/ ∑/ fj/ ∈/ F/ 其中/ ,/ |/ fj/ |/ 是/ 文件/ fj/ 的/ 长度/ ,/ ftij/ 是/ 关键字/ wi/ 在/ 文件/ fj/ 中/ 的/ 出现/ 频率/ ,/ fnwi/ 的/ 文件/ 数量/ ,/ N/ 是/ 文件/ 集合/ 中/ 的/ 文件/ 总数/ ./ 算法/ 1/ ./ 文件/ 集合/ TF/ ×/ IDF/ 评分/ 算法/ ./ 输入/ :/ 文件/ 集合/ F/ =/ {/ f1/ ,/ f2/ ,/ …/ ,/ fn/ }/ 输出/ :/ 评分/ sc/ 最高/ 的/ k/ 个/ 关键字/ w1/ ,/ w2/ ,/ …/ ,/ wk1/ ./ 对/ 各个/ 文件/ fj/ 进行/ 扫描/ ,/ 结合/ 现有/ 分词/ 算法/ [/ 34/ ]/ 划分/ 文/ 2/ ./ 统计/ 关键字/ 在/ 文件/ 集合/ 中/ 的/ 词频/ ft1/ ,/ ft2/ ,/ …/ ,/ ftmax3/ ./ 根据/ 式/ (/ 2/ )/ 以及/ 上述/ 计算结果/ 计算/ 各个/ 关键字/ 的/ 相/ 4/ ./ FOR1/ / i/ / max5/ ./ 返回/ sc1/ ,/ sc2/ ,/ …/ ,/ sck/ 对应/ 的/ 关键字/ w1/ ,/ w2/ ,/ …/ ,/ wk/ ./ (/ 2/ )/ A/ 和/ 授权/ 用户/ 共享/ 加密/ 函数/ En/ 和/ 密钥/ kA/ _/ u/ ,/ 用以/ 实现/ 安全/ 通信/ ;/ (/ 3/ )/ 文件/ f1/ ,/ f2/ ,/ …/ ,/ fn/ 被/ 加密/ 后/ 得到/ cf1/ ,/ cf2/ ,/ …/ ,/ cfn/ ./ 密文/ 结果/ 和/ 相应/ 索引/ 树/ I/ 被/ 传输/ 至/ DSP/ 服务器进行/ 存储/ ,/ 索引/ 树/ 生成/ 过程/ 详见/ 5.2/ 节/ ./ 5.2/ Huffman/ 编码/ 索引/ 树/ 建立/ 索引/ 生成/ 的/ 基本/ 思想/ :/ 首先/ ,/ 根据/ 文件/ 索引/ 关键字/ 的/ TF/ ×/ IDF/ 评分/ 构建/ Huffman/ 索引/ 树/ 并/ 生成/ 相应/ 编码/ ,/ 评分/ 越高/ 的/ 关键字/ 在/ 索引/ 树/ 的/ 深度/ 越小/ ,/ 随后/ ,/ 将/ 各个/ 关键字/ 的/ 模糊/ 集合/ 存储/ 到/ 相应/ 的/ 布鲁姆/ 过滤器/ ,/ 节省/ 存储空间/ :/ (/ 1/ )/ 叶子/ 节点/ 的/ 生成/ ./ 为了/ 支持/ 模糊/ 查询/ 机制/ ,/ 本文/ 采用/ Levenshtein/ [/ 35/ ]/ 提出/ 的/ 基于/ 编辑/ 距离/ 的/ 相似/ 度量/ 化/ 方法/ 来/ 衡量/ 关键字/ 之间/ 的/ 相似/ 程度/ ./ 为了/ 降低/ 存储/ 开销/ ,/ 本文/ 基于/ Li/ 等/ 人/ [/ 6/ ]/ 提出/ 的/ 关键字/ 模糊/ 元素/ 集合/ 计算/ 方案/ ,/ 结合/ 具有/ 存储/ 优势/ 的/ 布鲁姆/ 过滤器/ 构造/ 叶子/ 节点/ ./ 具体/ 如下/ :/ 可信/ 第三方/ A/ 首先/ 针对/ 关键字/ wi/ 计算/ 其/ 不同/ 编辑/ 距离/ 下/ 相应/ 的/ 关键字/ 模糊/ 元素/ 集合/ Swi/ _/ 1Page7/ “/ act/ ”/ ,/ 则/ 其/ 编辑/ 距离/ d/ =/ 1/ 时/ ,/ 相应/ 的/ 模糊/ 元素/ 集合/ Swi/ _/ 1/ =/ {/ “/ / ct/ ”/ ,/ “/ a/ / t/ ”/ ,/ “/ ac/ / ”/ }/ ./ 随后/ 根据/ 不同/ 的/ 编辑/ 距离/ ,/ 将/ 相应/ 的/ 模糊/ 元素/ 集合/ 中/ 的/ 各个/ 关键字/ ,/ 先/ 加密/ 再/ 分别/ 映射/ 至/ 不同/ 的/ 布鲁姆/ 过滤器/ Bwi/ _/ 1Bwi/ _/ 3/ 为/ En/ ,/ 密钥/ 为/ kA/ _/ u/ ./ ,/ 以/ 构造/ 对应/ 各个/ 关键字/ 的/ 叶子/ 节点/ ./ 加密/ 函数/ (/ 2/ )/ 基于/ 叶子/ 节点/ 及其/ 父/ 节点/ 的/ 子树/ 生成/ ./ 在/ 本文/ 算法/ 中/ ,/ 叶子/ 节点/ 根据/ 编辑/ 距离/ 划分/ 共有/ 3/ 类/ ,/ 对应/ 的/ 编辑/ 距离/ 分别/ 为/ 1/ ,/ 2/ ,/ 3/ ./ 其父/ 节点/ 为/ 相应/ 关键字/ 的/ TF/ ×/ IDF/ 评分/ ./ 例如/ 叶子/ 节点/ Bwi/ _/ 1/ 对应/ 父/ 节点/ 的/ 存储/ 信息/ 为/ scwi/ ./ 叶子/ 节点/ 和/ 其父/ 节点/ 构成/ 相应/ Huffman/ 子树/ tw1/ 个/ 关键字/ ./ 图/ 5/ 给出/ 了/ Huffman/ 子树/ 的/ 基本/ 结构/ ./ (/ 3/ )/ Huffman/ 树/ 的/ 生成/ 和/ 节点/ 编码/ 计算/ ./ 上述/ 子树/ tw1Huffman/ 树/ ./ 具体/ 如下/ :/ 可信/ 方/ A/ 首先/ 在/ 上述/ 子树/ 组成/ 的/ 森林/ T/ 中/ 选择/ 根/ 节点/ TF/ ×/ IDF/ 评分/ 信息/ 最小/ 的/ 两棵/ 子树/ ti/ 和/ tj/ 并/ 进行/ 合并/ ,/ 组成/ 一棵/ 新树/ ti/ _/ j/ ./ 新/ 树根/ 节点/ 的/ TF/ ×/ IDF/ 评分/ 信息/ 值为子/ 树/ ti/ 和/ tj/ 根/ 节点/ 评分/ 信息/ 之/ 和/ ,/ 且/ 这/ 两棵/ 子树/ 分别/ 作为/ 新树/ ti/ _/ j/ 的/ 左右/ 子树/ ./ 随后/ A/ 将/ 新树/ ti/ _/ j/ 加入/ 森林/ T/ ,/ 同时/ 删除/ 子树/ ti/ 和/ tj/ ./ 重复/ 上述/ 过程/ 直到/ 森林/ T/ 只/ 包含/ 一棵树/ 为止/ ,/ 此时/ ,/ Huffman/ 树/ 建立/ ./ 例如/ 图/ 6/ (/ a/ )/ ~/ (/ d/ )/ 所示/ ,/ 共/ 存在/ 4/ 棵子/ 树/ tw1/ 节点/ 关键字/ 的/ TF/ ×/ IDF/ 评分/ 分别/ 为/ scw1/ =/ 0.5/ ,/ scw2/ =/ 1.4/ ,/ scw3/ =/ 0.4/ ,/ scw4/ =/ 0.3/ ,/ 经上述/ 计算/ 过程/ 建立/ 的/ Huffman/ 树如图/ 6/ 所示/ ./ 节点/ Huffman/ 编码/ 的/ 计算/ 方式/ 如下/ :/ 可信/ 方/ A/ 从/ TF/ ×/ IDF/ 评分/ 信息/ 最低/ 的/ 两个/ 节点/ 开始/ ,/ 左/ 节点/ 设置/ 为/ 0/ ,/ 右/ 节点/ 设置/ 为/ 1/ ,/ 对/ 各个/ 节点/ 进行/ 相应/ 编码/ hafi/ ./ 由/ 上述/ 树型/ 结构/ 和/ Huffman/ 编码/ 构成/ 相应/ 的/ 索引/ 树/ I/ ,/ 经/ 可信/ 方/ A/ 发送至/ 数据库/ 服务器进行/ 存储/ ./ 索引/ 树/ I/ 的/ 各个/ 节点/ 不/ 包含/ TF/ ×/ IDF/ 评分/ 信息/ ,/ 叶子/ 节点/ 为/ 布鲁姆/ 过滤器/ 编码/ ,/ 其余部分/ 则/ 为/ Huffman/ 编码/ ,/ 同时/ 各个/ 关键字/ wi/ 的/ Huffman/ 编码/ 即/ 为/ 各个/ 叶子/ 节点/ 父/ 节点/ 的/ 编码/ ./ 以上/ 图中/ 数据/ 为例/ ,/ 相应/ 编码/ 如图/ 7/ 所示/ ./ 图/ 6/ 基于/ 关键字/ TF/ ×/ IDF/ 评分/ 的/ Huffman/ 树/ 建立/ Page85/ ./ 3/ 保护/ 隐私/ 的/ 查询/ 转换/ 用户/ DU/ 的/ 查询/ 条件/ 将/ 被/ TTS/ 转换成/ 相应/ 密文/ 和/ 编码/ ,/ 再/ 由/ DSP/ 执行/ 查询/ :/ (/ 1/ )/ 用户/ 查询/ 条件/ 转换/ ./ 用户/ 首先/ 将/ 查询/ 条件/ Q/ =/ (/ cwq/ =/ En/ (/ wq/ ,/ kA/ _/ u/ )/ )/ ./ A/ 对/ 查询/ 条件/ 解密/ 后/ ,/ 首先/ 计/ cw/ 算/ 和/ wq/ 编辑/ 距离/ 小于/ 或/ 等于/ dq/ 的/ 相似/ 关键字/ wi/ ,/ wi/ +/ 1/ ,/ …/ ./ 随后/ 将/ 关键字/ wi/ ,/ wi/ +/ 1/ ,/ …/ 转换/ 成为/ 对应/ 的/ 密文/ 和/ Huffman/ 编码/ ,/ 形成/ 新/ 的/ 查询/ 条件/ Q/ =/ (/ cwi/ |/ hafwi/ 服务器进行/ 查询/ ./ (/ 2/ )/ 执行/ 查询/ ./ 如/ 算法/ 2/ 所示/ ,/ 数据库/ 服务器/ 对比/ Huffman/ 编码/ hafwi/ 找/ 相应/ 的/ 节点/ Nwi/ ,/ Nwi/ +/ 1Nwi/ ,/ cwi/ +/ 1cwi/ 元素/ ./ 算法/ 2/ ./ 索引/ 树/ 查询/ 算法/ Search/ (/ hafwi/ 输入/ :/ Huffman/ 编码/ hafw/ 输出/ :/ 查询/ 结果/ Nw1/ ./ 设置/ Nt/ 初始值/ 为/ 索引/ 树/ I/ 的/ 起始/ 查询/ 节点/ ,/ 即/ Nt/ =/ root/ ;/ 2/ ./ 使用/ 计数器/ count/ 记录/ Huffman/ 编码/ hafw3/ ./ IFcount/ / colen4/ ./ IFcount/ =/ =/ colen5/ ./ RETURNNw/ 根据/ 布鲁姆/ 过滤器/ 成员/ 隶属/ 关系/ 判断/ 规则/ ,/ 当/ )/ ,/ h2/ (/ cwih1/ (/ cwi1/ -/ p/ 存在/ 于/ Bwi/ _/ j/ 指向/ 的/ 加密/ 数据文件/ cf/ ./ 用户/ 通过/ 解密/ cf/ 得/ Bwi/ _/ j/ 到/ 相应/ 文件/ f/ ./ 其中/ ,/ h1/ ,/ h2/ ,/ …/ ,/ hm/ 是/ 布鲁姆/ 过滤器/ 对应/ 的/ 独立/ 同/ 分布/ 哈希/ 映射函数/ ./ 参照/ 布鲁姆/ Bwi/ _/ j/ 过滤器/ 的/ 假/ 阳性/ 计算公式/ [/ 36/ ]/ ,/ 概率/ p/ 值为/ p/ =/ 1/ -/ 1/ -/ 其中/ ,/ BL/ 为/ 布鲁姆/ 过滤器/ 的/ 比特/ 数/ ,/ m/ 为/ 布鲁姆/ 过滤器/ 对应/ 的/ 哈希/ 函数/ 个数/ ,/ n/ 则/ 为/ 布鲁姆/ 过滤器/ 中/ 插入/ 的/ 元素/ 个数/ ./ 查询/ 执行/ 过程/ 如图/ 8/ 所示/ ./ 6/ 分析/ 本节/ 对/ HB/ -/ FKS/ 算法/ 的/ 计算/ 复杂度/ 、/ 安全性/ 和/ 查询/ 性能/ 分别/ 进行/ 了/ 分析/ ,/ 并/ 与/ 主要/ 文献/ [/ 6/ ,/ 12/ ]/ 中/ 提出/ 的/ 算法/ 进行/ 了/ 对比/ ./ 6.1/ 算法/ 复杂度/ 分析/ 假定/ DSP/ 服务器/ 存储/ 了/ n/ 个/ 文件/ ,/ DO/ 和/ DU/ 约定/ 的/ 关键字/ 个数/ 为/ k/ 个且/ 关键字/ 频率/ 各不相同/ ,/ 关键字/ 前缀/ 重复/ 率为/ 零/ ,/ 单个/ 布鲁姆/ 过滤器/ 包含/ m/ 个/ 相互/ 独立/ 的/ 哈希/ 函数/ ,/ 查询/ 的/ 最大/ 编辑/ 距离/ 为/ d/ ./ 为了/ 方便/ 表述/ ,/ 不妨/ 令/ 所有/ 关键字/ 长度/ 为/ l/ ,/ 从/ l/ 个/ 元素/ 中/ 任选/ d/ 个/ 元素/ 的/ 组合/ 种类/ 数量/ 为/ Cd/ 和/ 文献/ [/ 6/ ,/ 12/ ]/ 中/ 查询/ 算法/ 各个/ 步骤/ 的/ 计算/ 功耗/ 分析/ 如下/ (/ 本文/ 将/ 文献/ [/ 6/ ]/ 的/ 算法/ 称为/ WFKS/ (/ Wildcard/ -/ basedFuzzyKeywordSearch/ )/ ,/ 将/ 文献/ [/ 12/ ]/ 的/ 算法/ 称为/ TTSS/ (/ Trie/ -/ tree/ -/ basedSimilaritySearch/ )/ )/ :/ (/ 1/ )/ HB/ -/ FKS/ 计算/ 功耗/ 分析/ ./ HB/ -/ FKS/ 中/ 索引/ 的/ 生成/ 计算/ 主要/ 包括/ 各个/ 关键字/ 的/ 模糊/ 集合/ 计算/ 、/ 计算结果/ 的/ 布鲁姆/ 过滤器/ 映射/ 操作/ 和/ 以/ 关键字/ TF/ ×/ IDF/ 评分/ 为/ 基础/ 的/ Huffman/ 编码/ 生成/ ,/ 其/ 计算/ 开销/ 为/ (/ C1/ 中/ 查询/ 条件/ 的/ 生成/ 主要/ 包括/ 查询/ 关键字/ 模糊/ 集合/ 的/ 生成/ 和/ 对应/ Huffman/ 编码/ 的/ 计算/ ,/ 其/ 计算/ 开销/ 为/ (/ C1/ 操作/ 主要/ 是/ 使用/ 上述/ 步骤/ 中/ 生成/ 的/ 查询/ 关键字/ l/ +/ C2Page9Huffman/ 编码/ 集合/ 对/ Huffman/ 索引/ 树/ 进行/ 遍历/ ,/ 并/ 在/ 叶子/ 节点/ 处/ 进行/ 布鲁姆/ 过滤器/ 映射/ 操作/ ,/ 其/ 计算/ 开销/ 为/ (/ C1/ (/ 2/ )/ WFKS/ 算法/ 计算/ 功耗/ 分析/ ./ WFKS/ 中/ 索引/ 的/ 生成/ 计算/ 主要/ 是/ 构建/ 各个/ 关键字/ 的/ 相应/ 模糊/ 集合/ ,/ 因此/ 其/ 计算/ 开销/ 为/ (/ C1/ 的/ 查询/ 条件/ 生成/ 计算/ 也/ 较为简单/ ,/ 是/ 对/ 查询/ 关键字/ 进行/ 相应/ 的/ 模糊/ 集合/ 计算/ ,/ 其/ 计算/ 开销/ 为/ (/ C1l/ +/ …/ +/ CdC2/ 询/ 关键字/ 的/ 模糊/ 集合/ 对/ 各个/ 文件/ 的/ 索引/ 关键字/ 模糊/ 集合/ 进行/ 遍历/ ,/ 其/ 计算/ 开销/ 为/ (/ C1/ (/ 3/ )/ TTSS/ 算法/ 计算/ 功耗/ 分析/ ./ TTSS/ 中/ 索引/ 的/ 生成/ 计算/ 主要/ 包括/ 各个/ 关键字/ 的/ 模糊/ 集合/ 计算/ 以及/ 计算结果/ 中/ 模糊/ 集合/ 各个/ 元素/ 经/ 预定/ 义/ 符号/ 集合/ 元素/ 替换/ 后/ 构建/ 的/ 符号/ 语义/ 树/ ,/ 在/ 关键字/ 之间/ 不/ 存在/ 相同/ 前缀/ 的/ 最坏/ 情形/ 下/ ,/ 其/ 计算/ 开销/ 为/ l/ +/ C2/ (/ C1TTSS/ 中/ 查询/ 条件/ 的/ 计算/ 主要/ 包括/ 查询/ 关键字/ 模糊/ 集合/ 的/ 计算/ 和/ 语义/ 树/ 符号/ 编码/ 的/ 生成/ ,/ 其/ 计算/ 开销/ l/ +/ C2/ 为/ (/ C1TTSS/ 中/ 模糊/ 查询/ 操作/ 是/ 使用/ 上述/ 步骤/ 中/ 生成/ 的/ 查询/ 关键字/ 符号/ 集合/ 对/ 符号/ 语义/ 树/ 进行/ 遍历/ 再/ 获取/ 最终/ 结果/ ,/ 其/ 计算/ 开销/ 为/ (/ C1HB/ -/ FKS/ 、/ WFKS/ 和/ TTSS/ 的/ 计算/ 复杂度/ 如表/ 2/ 所示/ ./ HB/ -/ FKSO/ (/ ldkm/ +/ log2k/ )/ O/ (/ ldlog2k/ )/ O/ (/ ld/ (/ log2k/ +/ m/ )/ )/ WFKS/ [/ 6/ ]/ TTSS/ [/ 12/ ]/ O/ (/ ldk/ (/ l/ +/ 1/ )/ )/ O/ (/ ld/ (/ l/ +/ 1/ )/ )/ 从/ 上述/ 分析/ 结果/ 和表/ 2/ 可以/ 看出/ ,/ 在/ 索引/ 生成/ 和/ 查询/ 条件/ 生成/ 方面/ ,/ HB/ -/ FKS/ 并/ 不是/ 计算/ 功耗/ 最低/ 的/ 算法/ ,/ 为了/ 加强/ 数据/ 的/ 安全性/ 和/ 节省/ 存储/ 开销/ ,/ 查询/ 条件/ 和/ 索引/ 关键字/ 需要/ 经过/ 一定/ 程度/ 的/ 预处理/ 再/ 存入/ 布鲁姆/ 过滤器/ ,/ WFKS/ 和/ TTSS/ 主要/ 采用/ 枚举/ 集合/ ,/ 因此/ 存储/ 开销/ 更大/ ./ 在/ 执行/ 密文/ 模糊/ 查询/ 时/ ,/ HB/ -/ FKS/ 性能/ 优势/ 得到/ 了/ 体现/ ,/ Huffman/ 树/ 的/ 叶子/ 节点/ 深度/ 会/ 根据/ 关键字/ TF/ ×/ IDF/ 评分/ 的/ 不同/ 进行/ 相应/ 的/ 变化/ ,/ 评分/ 高/ 的/ 关键字/ 叶子/ 深度/ 较浅/ ,/ 反之/ 则/ 较/ 深/ ./ 6.2/ 算法/ 安全性/ 分析/ (/ 1/ )/ 索引/ 安全/ ./ WFKS/ 、/ TTSS/ 和/ HB/ -/ FKS/ 这/ 3/ 种/ 算法/ 在/ 索引/ 构建/ 过程/ 中均/ 采用/ 了/ 基于/ 通配符/ 的/ 模糊/ 集合/ 构造/ 算法/ 以/ 节省/ 存储/ 开销/ ,/ 然而/ 3/ 种/ 算法/ 在/ 索引/ 的/ 安全性/ 保护/ 方面/ 采用/ 了/ 不同/ 的/ 方法/ ./ WFKS/ 算法/ 中/ ,/ 索引/ 关键字/ wi/ 通过/ 常规/ 的/ 对称/ 加密算法/ 进行/ 加密/ 保护/ ,/ 数据/ 拥有者/ 持有/ 的/ 对称/ 密钥/ ski/ 对/ 服务器/ 保密/ ,/ 然而/ 以/ 常规/ 的/ 对称/ 加密算法/ 生成/ 的/ 安全/ 索引/ 难以/ 抵御/ 基于/ 关键字/ 频率/ 信息/ 的/ 字典/ 攻击/ ;/ TTSS/ 算法/ 在/ 安全性/ 方面/ 没有/ 进行/ 加强/ ,/ 索引/ 关键字/ 的/ 保护/ 机制/ 同样/ 采用/ 了/ 基于/ 共享/ 密钥/ 的/ 对称/ 加密算法/ ./ 该/ 算法/ 致力于/ 减少/ 索引/ 关键字/ 重复/ 率/ 较/ 高/ 情形/ 下/ 的/ 存储/ 开销/ ,/ 引入/ 了/ 特殊符号/ 集合/ Δ/ =/ {/ α/ 1/ ,/ α/ 2/ ,/ …/ }/ 用于/ 替换/ 索引/ 关键字/ ,/ 以/ 构建/ 基于/ 符号/ 的/ 前缀/ 语义/ 树/ (/ TheSymbol/ -/ basedTrie/ -/ Tree/ )/ ./ 基于/ 特殊符号/ 集合/ 元素/ 替换/ 生成/ 的/ 安全/ 索引/ 并未/ 对/ 关键字/ 频率/ 做/ 相应/ 处理/ ,/ 因此/ 对于/ 字典/ 攻击/ 同样/ 缺乏/ 有效/ 抵御/ 能力/ ;/ HB/ -/ FKS/ 算法/ 中/ ,/ 文件/ 索引/ 中/ 的/ 关键字/ 如/ wi/ 的/ 频率/ 信息/ scwi/ 码/ hafwi/ 模糊/ 集合/ Swi/ _/ 1/ 被/ 进一步/ 映射/ 至/ 相应/ 的/ 布鲁姆/ 过滤器/ Bwi/ _/ 1/ ,/ 以/ 确保/ 索引/ 信息/ 的/ 安全性/ ./ 各个/ 布鲁姆/ 过滤器/ Bwi/ _/ d/ 的/ 映射函数/ 是/ 一系列/ 独立/ 同/ 分布/ 哈希/ 函数/ h1/ ,/ h2/ ,/ …/ ,/ hm/ ,/ 具有/ 理论/ 上/ 的/ 不可逆性/ ,/ 攻击者/ 无法/ 通过/ 哈希/ 值/ 对/ 原始/ 信息/ 进行/ 逆/ 推/ ./ 然而/ 在/ 获知/ 部分/ 明文/ 的/ 情形/ 下/ ,/ 攻击者/ 可/ 通过/ 截取/ 查询/ 结果/ 索引/ 的/ 方式/ 累计/ 足够/ 的/ 索引/ 编码/ 样本/ ,/ 随后/ 结合/ 已知/ 明文/ 信息/ 对/ 密文/ 数据/ 进行/ 破解/ ./ 通过/ 明文/ 信息/ 破解/ 密文/ 的/ 攻击方式/ 主要/ 分为/ 两类/ ,/ 一类/ 是/ 以/ 密文/ 信息/ 长度/ 的/ 可/ 区分/ 性为/ 基础/ ,/ 另一类/ 则/ 是/ 利用/ 密文/ 信息/ 的/ 频率/ 可/ 区分/ 性/ ./ 后者/ 又/ 称为/ 字典/ 攻击/ ./ 本文/ 采用/ 的/ Huffman/ 编码/ 具有/ 长度/ 可/ 区分/ 性/ ,/ 但/ 结合/ 布鲁姆/ 过滤器/ Bwi/ _/ 1/ 应/ 索引/ 树后/ ,/ 所有/ 文件/ 索引/ 具有/ 了/ 相同/ 的/ 字节/ 长度/ ,/ 避免/ 了/ 因/ 长度/ 信息/ 导致/ 的/ 安全/ 问题/ ,/ 即能/ 有效/ 抵御/ 第一类/ 攻击/ ;/ 对于/ 第二类/ 攻击/ ,/ 本文/ 的/ Huffman/ 编码/ 树/ 并/ 不是/ 基于/ 关键字/ 内容/ 进行/ 构建/ 的/ ,/ 其/ 计算/ 基础/ 是/ TF/ ×/ IDF/ 评分/ 信息/ ,/ 对/ 关键字/ 频率/ 信息/ 进行/ 了/ 保护/ ,/ 并/ 通过/ 布鲁姆/ 过滤器/ 各个/ 独立/ 同/ 分布/ 的/ 哈希/ 函数/ 进行/ 映射/ 编码/ 存储/ ./ 布鲁姆/ 过滤器/ 引入/ 的/ 随机性/ 和/ 假/ 阳性/ 对/ 关键字/ 频率/ 信息/ 进行/ 了/ 扰动/ ,/ 使/ 其/ 可/ 区分度/ 进一步/ 降低/ ./ 为了/ 方便/ 表达/ ,/ 不妨/ 令/ 各个/ 哈希/ 函数/ 的/ 冲突/ 率均/ 为/ Ph/ ,/ 布鲁姆/ 过滤器/ 的/ 假/ 阳性/ 为/ fp/ ,/ 假定/ 攻击者/ 能/ 在/ O/ (/ 1/ )/ 时间/ 内/ 对/ 任意/ 哈希/ 函数/ 进行/ 破解/ ,/ 则/ 特定/ 的/ 索引/ 关键字/ wi/ 被/ 攻击者/ 获知/ 的/ 概率/ 为/ (/ 1/ -/ fp/ )/ ×/ PmPage10/ 为/ 关键字/ 的/ Huffman/ 编码/ 长度/ ./ (/ 2/ )/ 查询/ 条件/ 安全/ ./ WFKS/ 算法/ 中/ ,/ 用户/ 的/ 查询/ 条件/ 集合/ 元素/ Twi/ 合/ 的/ 构建/ 方式/ 是/ 一致/ 的/ ,/ 即/ 采用/ 同样/ 的/ 对称/ 加密/ 函数/ 以及/ 共享/ 的/ 对称/ 密钥/ ski/ 对/ 查询/ 关键字/ wi/ 的/ 模糊/ 集合/ 元素/ 进行/ 相应/ 处理/ ,/ 因此/ 查询/ 条件/ 面临/ 着/ 索引/ 构建/ 过程/ 中/ 同样/ 的/ 安全/ 问题/ ,/ 即/ 字典/ 攻击/ ;/ TTSS/ 算法/ 中/ 的/ 查询/ 条件/ Twi/ 成中/ 应用/ 的/ 符号/ 替换算法/ ,/ 生成/ 的/ 查询/ 条件/ 可/ 用于/ 对/ 前缀/ 语义/ 索引/ 树/ 进行/ 高效/ 遍历/ ,/ 但/ 相比/ WFKS/ ,/ 该/ 算法/ 在/ 安全性/ 方面/ 并未/ 进行/ 提升/ ,/ 因此/ 也/ 同样/ 难以/ 有效/ 地/ 抵御/ 字典/ 攻击/ ;/ 在/ HB/ -/ FKS/ 算法/ 中/ ,/ 为了/ 节省/ 计算/ 开销/ ,/ 查询/ 条件/ 的/ 生成/ 和/ 索引/ 关键字/ 模糊/ 集合/ 的/ 计算/ 存在/ 一定/ 的/ 差异/ ./ 查询/ 条件/ 包含/ 的/ 关键字/ wq/ 对应/ 的/ 模糊/ 关键字/ 集合/ 会/ 生成/ 相应/ 的/ Huffman/ 编码/ hafwi/ 的/ 密文/ cwi/ 全性/ ./ 和/ 上述/ 算法/ 加密/ 方式/ 不同/ 在于/ :/ 为了/ 避免/ 已知/ 明文/ 情形/ 下/ 的/ 攻击/ ,/ HB/ -/ FKS/ 采用/ 不/ 可逆/ 的/ 加密算法/ ,/ 关键字/ wq/ 的/ 模糊/ 集合/ 成员/ 被/ 加密/ 成为/ 固定/ 字节/ 长度/ 的/ 密文/ ./ 假定/ 攻击者/ 能/ 在/ O/ (/ 1/ )/ 时间/ 内/ 对/ 加密算法/ 进行/ 破解/ ,/ 则/ 关键字/ wq/ 某/ 特定/ 模糊/ 集合/ 成员/ 真实/ 值/ 被/ 攻击者/ 获知/ 的/ 概率/ 为/ (/ 1/ // 2HL/ )/ ×/ (/ 1/ // 2CL/ )/ ,/ 其中/ CL/ 为/ 密文/ 长度/ (/ 本文/ 采用/ MD5/ 加密/ 函数/ ,/ 其/ 密文/ 长度/ 为/ 64/ 位/ ,/ 可/ 扩展/ 替换/ 为/ 密钥/ 更长/ 的/ 强/ 加密算法/ )/ ./ (/ 3/ )/ 查询/ 计算/ 安全/ ./ WFKS/ 算法/ 中/ ,/ 服务器/ 通过/ 对比/ 查询/ 条件/ 集合/ {/ Twi/ }/ 中/ 的/ 相同/ 元素/ ,/ 以/ 查找/ 用户/ 所/ 需/ 的/ 文件/ 数据/ ./ {/ Swi/ _/ d/ 然而/ 只有/ 在/ 攻击者/ 未/ 获取/ 相应/ 频率/ 信息/ 的/ 情形/ 下/ ,/ 算法/ 才能/ 保障/ 查询/ 计算/ 的/ 安全性/ ,/ 此外/ 这种/ 枚举/ 方式/ 构建/ 的/ 索引/ 集合/ 的/ 查找/ 效率/ 较/ 低/ ;/ TTSS/ 算法/ 对/ 索引/ 的/ 构建/ 方式/ 有所改进/ ,/ 因此/ 服务器/ 在/ 查找/ 计算/ 过程/ 中/ 可/ 通过/ 基于/ 特殊符号/ 的/ 查询/ 条件/ {/ Twi/ 型/ 结构/ 的/ 前缀/ 语义/ 索引/ Gw/ 进行/ 遍历/ 查找/ ./ 然而/ 由于/ 安全/ 机制/ 方面/ 仍然/ 沿袭/ 了/ WFKS/ 中/ 对称/ 加密/ 的/ 方法/ ,/ 因此/ ,/ 查询/ 计算/ 的/ 核心/ 仍/ 是/ 密文/ 匹配/ ,/ 对于/ 字典/ 攻击/ 缺乏/ 有效/ 的/ 抵御/ 能力/ ;/ 在/ 查询处理/ 过程/ 中/ ,/ 攻击者/ 可以/ 不断/ 截获/ 查询/ 结果/ 和/ 查询/ 条件/ 的/ 编码/ 以/ 构建/ 样本/ ,/ 并/ 根据/ 密文/ 样本/ 长度/ 和/ 出现/ 频率/ ,/ 结合/ 已知/ 的/ 明文/ 推测/ 密文/ 内容/ ./ HB/ -/ FKS/ 算法/ 中/ ,/ DSP/ 服务器/ 系统/ 的/ 查询/ 计算/ 包含/ 两个/ 方面/ ,/ 一方面/ 是/ 基于/ 查询/ 条件/ 对/ Huffman/ 编码/ 树/ 进行/ 高效/ 遍历/ ,/ 另一方面/ 是/ 遍历/ 至/ 叶子/ 节点/ 处时/ ,/ DSP/ 通过/ 将/ 查询/ 条件/ 映射/ 至/ 布鲁姆/ 过滤器/ Bwi/ _/ 1/ 字/ wq/ 和/ 各个/ 模糊/ 集合/ Swi/ _/ 1/ 属/ 关系/ ,/ 最终/ 返回/ 查询/ 结果/ 文件/ cf1/ ,/ cf2/ ,/ …/ ,/ cfn/ ./ 布鲁姆/ 过滤器/ 的/ 采用/ 使得/ 文件/ 索引/ 长度/ 固定/ ,/ 不再/ 具有/ 长度/ 可/ 区分/ 性/ ,/ 而/ 查询/ 过程/ 中/ 传输/ 的/ 最终/ 结果/ cf1/ ,/ cf2/ ,/ …/ ,/ cfn/ 包含/ 了/ 一定/ 数量/ 的/ 假/ 阳性/ 数据/ ,/ 对/ 频率/ 信息/ 进行/ 了/ 扰动/ ./ 假定/ 攻击者/ 能/ 在/ O/ (/ 1/ )/ 时间/ 内/ 对/ 布鲁姆/ 过滤器/ 的/ 各个/ 哈希/ 函数/ 以及/ MD5/ 加密算法/ 进行/ 破解/ ,/ 则/ 查询/ 条件/ 和/ 索引/ 的/ 明文/ 被/ 攻击者/ 推算出来/ 的/ 概率/ 为/ (/ 1/ -/ fp/ )/ ×/ Pm/ (/ 1/ // 2CL/ )/ ./ 6.3/ 算法/ 假/ 阳性/ 分析/ HB/ -/ FKS/ 采用/ 了/ 布鲁姆/ 过滤器/ 作为/ Huffman/ 索引/ 树/ 的/ 叶子/ 节点/ ,/ 用以/ 节省/ 模糊/ 关键字/ 集合/ 的/ 存储/ 开销/ ,/ 因此/ ,/ 查询/ 结果/ 中/ 难免/ 引入/ 部分/ 假/ 阳性/ 数据/ ./ 对于/ 布鲁姆/ 过滤器/ 处理/ 的/ 关键字/ ,/ 需/ 确定/ 其/ 具体/ 长度/ l/ 和/ 布鲁姆/ 过滤器/ 涉及/ 的/ 编辑/ 距离/ d/ ,/ 以/ 确定/ 布鲁姆/ 过滤器/ 中/ 存储/ 的/ 元素/ 个数/ n/ =/ C1l/ ./ n/ 个/ 元素/ 的/ 区分/ 至少/ 需要/ log2n/ 个/ 比特/ 位/ ,/ 即/ 最/ Cd/ 低/ 的/ 布鲁姆/ 过滤器/ 长度/ ./ 然而/ 在/ 实际/ 情况/ 中/ ,/ 为了/ 确保/ 较/ 低/ 的/ 假/ 阳性/ ,/ 布鲁姆/ 过滤器/ 的/ 长度/ BL/ 远远/ 大于/ 该值/ ./ 假定/ 布鲁姆/ 过滤器/ 对应/ 的/ 独立/ 哈希/ 函数/ 个数/ 为/ m/ ,/ 根据/ 假/ 阳性/ 计算/ 式/ (/ 2/ )/ ,/ 假/ 阳性/ fp/ ≈/ (/ 1/ -/ e/ -/ mn/ // BL/ )/ m/ ≈/ 0.6185/ BL/ // n/ ./ 系统/ 通过/ 控制/ 相应/ 参数/ 实现/ 查询/ 结果/ 中较/ 低/ 的/ 假/ 阳性/ ./ 6.4/ 关键/ 参数/ 分析/ 本/ 小节/ 主要/ 分析/ 布鲁姆/ 过滤器/ 中/ 独立/ 同/ 分布/ 函数/ 数量/ m/ 对/ HB/ -/ FKS/ 算法/ 索引/ 生成/ 、/ 存储/ 开销/ 和/ 查询/ 效率/ 3/ 个/ 方面/ 的/ 影响/ ./ 在/ 索引/ 计算/ 方面/ ,/ 由于/ 关键字/ 模糊/ 集合/ Swi/ _/ 1/ ,/ …/ ,/ Swi/ _/ dSwi/ _/ 2/ 中/ m/ 个/ 独立/ 同/ 分布/ 函数/ 的/ 映射/ 处理/ ,/ 因此/ ,/ HB/ -/ FKS/ 算法/ 中/ 系统/ 在/ 预处理/ 阶段/ 对/ 索引/ 进行/ 计算/ 时/ ,/ 索引/ 的/ 计算/ 时间/ 和/ 函数/ 数量/ 呈/ 线性关系/ (/ 参见/ 6.1/ 节/ )/ ;/ 系统/ 的/ 存储/ 开销/ 不会/ 受到/ 独立/ 同/ 分布/ 函数/ 数量/ 的/ 影响/ ,/ 这是/ 由于/ 布鲁姆/ 过滤器/ 的/ 长度/ BL/ 是/ 固定值/ ,/ 不会/ 受到/ 存储/ 元素/ 数量/ 的/ 影响/ ,/ 我们/ 在/ 第/ 7/ 节/ 实验/ 部分/ 对/ 该/ 结论/ 进行/ 了/ 进一步/ 验证/ ;/ 在/ 查询/ 方面/ ,/ 由于/ HB/ -/ FKS/ 中/ 模糊/ 查询/ 操作/ 需要/ 首先/ 对/ Huffman/ 索引/ 树/ 进行/ 遍历/ ,/ 随后/ 在/ 叶子/ 节点/ 处/ 进行/ 布鲁姆/ 过滤器/ 映射/ 操作/ ,/ 因此/ ,/ 独立/ 同/ 分布/ 函数/ 数量/ 在/ 系统对/ 叶子/ 节点/ 进行/ 映射/ 操作/ 时/ 产生/ 影响/ ,/ 叶子/ 节点/ 处/ 的/ 搜索/ 时间/ 和/ 函数/ 数量/ 呈/ 线性关系/ ,/ 但/ 由于/ HB/ -/ FKS/ 采用/ 了/ Huffman/ 索引/ 树/ ,/ 结合/ 树型/ 结构/ 在/ 搜索/ 效率/ 方面/ 的/ 优势/ ,/ 从而/ 能够/ 降低/ 多次/ 映射/ 带来/ 的/ 影响/ ./ Page11/ 事实上/ ,/ 为了/ 使/ 保证/ 的/ 假/ 阳性/ 达到/ 最小/ ,/ 独立/ 同/ 分布/ 哈希/ 映射函数/ 的/ 个数/ m/ 需/ 根据/ 以下/ 计算公式/ 进行/ 计算/ [/ 37/ ]/ ,/ 即/ m/ =/ (/ BL/ // n/ )/ ×/ ln2/ ,/ 其中/ BL/ 为/ 布鲁姆/ 过滤器/ 长度/ ,/ n/ 为/ 插入/ 布鲁姆/ 过滤器/ 的/ 元素/ 个数/ ./ 7/ 实验/ 为了/ 验证/ HB/ -/ FKS/ 查询/ 算法/ 的/ 查询/ 效率/ ,/ 本文/ 将/ 采用/ IEEE/ 标准/ 数据库/ 提供/ 的/ 2005/ ~/ 2015/ 年/ INFOCOM/ ,/ MOBICOM/ 等/ 8/ 个/ 会议/ 论文集/ 作为/ 测试数据/ (/ 包含/ 50000/ 个/ PDF/ 格式文件/ 和/ 50/ 个/ 高频/ 关键字/ ,/ 关键字/ 最大/ 长度/ 为/ 16/ 个字符/ ,/ 最小/ 长度/ 为/ 3/ 个字符/ ,/ 平均/ 长度/ 7.22/ 字符/ ,/ 编辑/ 距离/ 最大/ 为/ 3/ )/ ,/ 以/ 内存/ 2G/ ,/ CPU/ 主频/ 2.10/ GHz/ 的/ PC机/ 作为/ 测试/ 平台/ ,/ 对/ HB/ -/ FKS/ 算法/ 在/ 索引/ 生成/ 、/ 查询/ 条件/ 生成/ 和/ 查询/ 操作/ 的/ 计算/ 时间/ 和/ 存储/ 开销/ 进行/ 仿真/ 和/ 分析/ ,/ 并/ 和/ WFKS/ 、/ TTSS/ 算法/ 进行/ 比较/ ,/ 具体/ 测试/ 结果/ 如下/ ./ 7.1/ 索引/ (/ 1/ )/ 生成/ 时间/ ./ 图/ 9/ 给出/ 了/ HB/ -/ FKS/ ,/ WFKS/ 和/ TTSS/ 这/ 3/ 种/ 算法/ 在/ DSP/ 存储/ 文件/ 数量/ 变化/ 情形/ 下/ 的/ 索引/ 生成/ 时间/ ./ 从/ 仿真/ 结果/ 可以/ 观察/ 到/ ,/ WFKS/ 索引/ 生成/ 时间/ 略高于/ TTSS/ ;/ HB/ -/ FKS/ 的/ 索引/ 生成/ 时间/ 最长/ ,/ 约/ 为/ TTSS/ 生成/ 时间/ 的/ 两倍/ ./ 这是/ 由于/ 在/ 生成/ 索引/ 关键字/ 的/ 模糊/ 集合/ 后/ ,/ TTSS/ 不再/ 改变/ 索引/ 结构/ ,/ 而/ WFKS/ 和/ HB/ -/ FKS/ 均/ 需要/ 额外/ 的/ 计算/ 时间/ 对/ 模糊/ 关键字/ 集合/ 进行/ 重新/ 组织/ :/ WFKS/ 将/ 模糊/ 关键字/ 集合/ 向/ 预定/ 义/ 字符/ 集合/ 进行/ 映射/ 后/ 重新/ 构建/ 基于/ 共同/ 前缀/ 的/ 语义/ 树/ ,/ 而/ HB/ -/ FKS/ 在/ 构建/ 基于/ 关键字/ TF/ ×/ IDF/ 评分/ 的/ Huffman/ 树/ 的/ 同时/ ,/ 需要/ 在/ Huffman/ 树叶子/ 节点/ 处/ 对/ 关键字/ 集合/ 进行/ 布鲁姆/ 过滤器/ 映射/ 处理/ ,/ 存储/ 不同/ 编辑/ 距离/ 下/ 的/ 关键字/ ,/ 额外/ 增加/ 了/ 哈希/ 计算/ 时间/ ./ 尽管/ HB/ -/ FKS/ 索引/ 的/ 生成/ 计算/ 时间/ 更长/ ,/ 但/ 索引/ 和/ 相关/ 关键字/ 的/ 计算/ 可/ 通过/ 线下/ 预处理/ 生成/ ,/ 并/ 不会/ 对/ 查询/ 系统/ 性能/ 产生/ 影响/ ;/ 另外/ ,/ 相比/ TTSS/ 而言/ ,/ HB/ -/ FKS/ 和/ WFKS/ 索引/ 的/ 存储/ 开销/ 更/ 小/ ,/ 安全性/ 更高/ ./ (/ 2/ )/ 存储空间/ ./ 图/ 10/ 是/ HB/ -/ FKS/ ,/ WFKS/ 和/ TTSS/ 这/ 3/ 种/ 算法/ 在/ DSP/ 存储/ 文件/ 数量/ 从/ 2500/ 变化/ 至/ 50000/ 情形/ 下/ 的/ 索引/ 存储空间/ ./ 从/ 实验/ 仿真/ 结果/ 可以/ 观察/ 到/ ,/ 相比/ TTSS/ 的/ 索引/ 存储/ 开销/ ,/ WFKS/ 有/ 了/ 一定/ 程度/ 的/ 提升/ ;/ HB/ -/ FKS/ 则/ 在/ 索引/ 存储/ 开销/ 方面/ 占有/ 较大/ 优势/ ,/ 比/ TTSS/ 低/ 96.46/ %/ ,/ 比/ WFKS/ 低/ 94.66/ %/ ./ 这是/ 由于/ 一方面/ Huffman/ 编码/ (/ 又/ 称为/ 最优/ 编码/ )/ 的/ 采用/ 降低/ 了/ 树型/ 结构/ 的/ 高度/ 和/ 关键字/ 长度/ ,/ 另一方面/ 布鲁姆/ 过滤器/ 的/ 使用/ 实现/ 了/ 采用/ 固定字长/ 比特/ 位/ 表示/ 不同/ 编辑/ 距离/ 下/ 的/ 模糊/ 集合/ ,/ 在/ 很大/ 程度/ 上/ 降低/ 了/ 模糊/ 集合/ 引入/ 的/ 大量/ 存储/ 开销/ ./ 7.2/ 查询/ 条件/ (/ 1/ )/ 生成/ 时间/ ./ 图/ 11/ 给出/ 了/ HB/ -/ FKS/ 、/ WFKS/ 和/ TTSS/ 这/ 3/ 种/ 算法/ 在/ DU/ 查询/ 请求/ 数量/ 从/ 2/ 变化/ 至/ 40/ 情形/ 下/ 的/ 查询/ 条件/ 生成/ 时间/ (/ 查询/ 条件/ 包含/ 关键字/ 长度/ 最长/ 为/ 16/ 字符/ ,/ 最短/ 为/ 3/ 字符/ )/ ./ 实验/ 仿真/ 结果表明/ ,/ HB/ -/ FKS/ 的/ 查询/ 条件/ 生成/ 时间/ 最长/ ,/ 是/ TTSS/ 的/ 两倍/ 左右/ ;/ WFKS/ 的/ 查询/ 条件/ 生成/ 时间/ 略高于/ TTSS/ ./ 事实上/ ,/ 在/ 大部分/ 基于/ 对称/ 加密/ 的/ 查询/ 算法/ 中/ ,/ 查询/ 条件/ 的/ 计算/ 处理过程/ 和/ 索引/ 的/ 计算/ 处理过程/ 通常/ 是/ 类似/ 的/ ./ 上述/ 3/ 种/ 算法/ 均/ 是/ 基于/ 对称/ 加密算法/ 实现/ 安全/ 查询/ 的/ ,/ 因此/ 查询/ 条件/ 的/ 生成/ 时间/ 也/ 会/ 受到/ 索引/ 生成/ 计算/ 中/ 相同/ 计算/ 因素/ 的/ 影响/ ./ 在/ WFKS/ 中/ ,/ 影响/ 查询/ 条件/ 生成/ 时间/ 的/ 主要/ 因素/ 仍然/ 是/ 前缀/ 语义/ 树/ 的/ 生成/ ,/ 而/ 在/ HB/ -/ FKS/ 中/ ,/ 查询/ 条件/ 计算/ 时间/ 则/ 主要/ 受到/ Huffman/ 树/ 构建/ 和/ 布鲁姆/ Page12/ 过滤器/ 映射/ 的/ 影响/ ,/ 布鲁姆/ 过滤器/ 哈希/ 映射/ 带来/ 的/ 计算/ 开销/ 影响/ 相对/ Huffman/ 树/ 更/ 大/ ./ (/ 2/ )/ 存储空间/ ./ 图/ 12/ 是/ HB/ -/ FKS/ 、/ WFKS/ 和/ TTSS/ 这/ 3/ 种/ 算法/ 在/ 不同/ 数量/ DU/ 查询/ 请求/ 情形/ 下/ 的/ 查询/ 条件/ 存储空间/ 大小/ ./ 在/ 这/ 3/ 种/ 基于/ 对称/ 加密/ 的/ 查询/ 算法/ 中/ ,/ 查询/ 条件/ 的/ 存储/ 方式/ 和/ 索引/ 存储/ 方式/ 是/ 类似/ 的/ ./ 即/ TTSS/ 不/ 对/ 查询/ 关键字/ 的/ 模糊/ 集合/ 做/ 进一步/ 处理/ ;/ WFKS/ 通过/ 预定/ 义/ 符号/ 集合/ 构建/ 语义/ 树/ ,/ 前缀/ 相同/ 的/ 模糊/ 集合/ 元素/ 可/ 共用/ 部分/ 存储空间/ ,/ 在/ 图/ 13/ 模糊/ 查询/ 时间/ 一定/ 程度/ 上/ 降低/ 了/ 存储/ 开销/ ;/ HB/ -/ FKS/ 则/ 从/ 降低/ 树型/ 结构/ 高度/ 和/ 简化/ 模糊/ 集合/ 表达方式/ 两个/ 方面/ 节省/ 存储/ 开销/ ,/ 采用/ Huffman/ 编码/ 和/ 布鲁姆/ 过滤器/ 实现/ 这一/ 目的/ ./ 从/ 仿真/ 结果/ 中/ 可以/ 看到/ ,/ 查询/ 请求/ 数量/ 越/ 少/ ,/ 3/ 种/ 算法/ 的/ 存储/ 开销/ 差异/ 就/ 越/ 小/ ,/ 树型/ 结构/ 和/ 布鲁姆/ 过滤器/ 带来/ 的/ 存储/ 优势/ 越/ 不/ 明显/ ./ 7.3/ 模糊/ 查询/ 图/ 13/ (/ a/ )/ ~/ (/ c/ )/ 分别/ 给出/ 了/ HB/ -/ FKS/ 、/ WFKS/ 和/ TTSS/ 这/ 3/ 种/ 算法/ 在/ DSP/ 存储/ 文件/ 数量/ 和/ DU/ 查询/ Page13/ 请求/ 数量/ 变化/ 的/ 情形/ 下/ 所/ 需/ 的/ 查询/ 时间/ ./ 采用/ 了/ 树型/ 结构/ 的/ HB/ -/ FKS/ 和/ WFKS/ 具有/ 较/ 高/ 的/ 查询/ 效率/ ,/ 分别/ 比/ TTSS/ 低/ 99.96/ %/ 和/ 98.82/ %/ ,/ 其中/ HB/ -/ FKS/ 的/ 查询/ 效率/ 更高/ ,/ 比/ WFKS/ 低/ 96.74/ %/ ./ 这是/ 由于/ 相对/ TTSS/ 中/ 基于/ 模糊/ 集合/ 枚举/ 方式/ 的/ 查询/ 算法/ ,/ 树型/ 结构/ 具有/ 显著/ 的/ 查询/ 效率/ 优势/ ,/ 在/ DU/ 和/ DSP/ 预约/ 定/ 关键字/ 数量/ 固定/ 的/ 情形/ 下/ ,/ 树型/ 结构/ 可/ 将/ 查询/ 效率/ 的/ 线性/ 增长/ 变为/ 对/ 数级/ 增长/ ./ 相比/ WFKS/ 基于/ 共同/ 前缀/ 的/ 符号/ 语义/ 树/ 方法/ ,/ HB/ -/ FKS/ 的/ Huffman/ 树/ 的/ 高度/ 更/ 低/ ,/ 查询/ 速度/ 更/ 快/ ,/ 且/ 在/ 数据/ 频率/ 保护/ 方面/ 的/ 安全性/ 更高/ ./ 仿真/ 结果/ 中/ ,/ TTSS/ 的/ 查询/ 效率/ 对/ 文件/ 数量/ 的/ 影响/ 较为/ 敏感/ ,/ 而/ 在/ WFKS/ 和/ HB/ -/ FKS/ 中/ ,/ 查询/ 效率/ 受/ 文件/ 数量/ 的/ 影响/ 较/ 小/ ./ 这是/ 由于/ 上述/ 两种/ 算法/ 中/ 的/ 树型/ 结构/ 相对/ 固定/ ,/ 高度/ 只/ 和/ 事先/ 约定/ 的/ 关键字/ 数量/ 相关/ ,/ 文件/ 索引/ 均/ 分类/ 放置/ 在/ 叶子/ 节点/ ,/ 相比/ 查询/ 操作/ ,/ 索引/ 和/ 查询/ 条件/ 的/ 生成/ 受/ 文件/ 数量/ 的/ 影响/ 较大/ ./ 8/ 结论/ DaaS/ 模式/ 是/ 大/ 数据/ 时代/ 主要/ 的/ 数据/ 存储/ 模式/ ,/ 密文/ 查询/ 是/ 其/ 提供/ 的/ 重要/ 服务/ 之一/ ./ 精确/ 密文/ 数据/ 查询/ 难以容忍/ 用户/ 查询/ 过程/ 中/ 的/ 输入/ 或/ 格式/ 误差/ ,/ 模糊/ 密文/ 查询/ 作为/ 功能/ 补充/ 实现/ 了/ 对/ 非/ 精确/ 查询/ 条件/ 的/ 兼容/ ./ 针对/ 现有/ 模糊/ 查询/ 算法/ 在/ 安全性/ 、/ 查询/ 效率/ 和/ 存储/ 功耗/ 方面/ 的/ 不足/ ,/ 本文/ 提出/ 了/ 一种/ 基于/ Huffman/ 编码/ 和/ 布鲁姆/ 过滤器/ 的/ 模糊/ 查询/ 机制/ HB/ -/ FKS/ ./ 该/ 机制/ 基于/ 关键字/ 的/ TF/ ×/ IDF/ 评分/ 规则/ 构建/ Huffman/ 树/ 并/ 进行/ 相应/ 编码/ ,/ 实现/ 对/ 数据/ 高效/ 查找/ 的/ 同时/ 避免/ 其/ 频率/ 信息/ 的/ 泄露/ ./ 此外/ ,/ 本文/ 采用/ 了/ 布鲁姆/ 过滤器/ 对/ 不同/ 编辑/ 距离/ 下/ 的/ 模糊/ 关键字/ 集合/ 进行/ 集成/ 存储/ ,/ 降低/ 了/ 模糊/ 集合/ 带来/ 的/ 额外/ 存储/ 开销/ ./ 算法/ 分析/ 和/ 实验/ 结果表明/ ,/ HB/ -/ FKS/ 算法/ 在/ 索引/ 生成/ 和/ 查询/ 条件/ 生成/ 时/ ,/ 由于/ 需要/ 执行/ 布鲁姆/ 过滤器/ 映射/ 计算/ ,/ 算法/ 执行/ 时间/ 比/ 现有/ 的/ WFKS/ 和/ TTSS/ 算法/ 更长/ ,/ 但/ 在/ 安全/ 性能/ 和/ 存储/ 开销/ 方面/ 更具/ 优势/ ./ 在/ 执行/ 查询/ 算法/ 时/ ,/ 布鲁姆/ 过滤器/ 和/ Huffman/ 编码/ 带来/ 的/ 优势/ 得到/ 了/ 充分体现/ ,/ 相比/ 现有/ 工作/ ,/ HB/ -/ FKS/ 实现/ 了/ 高效率/ 模糊/ 查询/ ./ 

